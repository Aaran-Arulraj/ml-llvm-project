; ModuleID = 'blender/source/blender/windowmanager/intern/wm_operators.c'
source_filename = "blender/source/blender/windowmanager/intern/wm_operators.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.GHash = type opaque
%struct.BlenderRNA = type opaque
%struct.StructRNA = type opaque
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.UserDef = type { i32, i32, i32, i32, i32, [768 x i8], [768 x i8], [1024 x i8], [768 x i8], [768 x i8], [768 x i8], [768 x i8], [768 x i8], [1024 x i8], [1024 x i8], i32, i16, i16, i16, i16, i16, i16, i32, i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, [3 x %struct.SolidLight], i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i8, i8, i16, i16, i16, i16, i16, i16, float, float, i32, i16, i16, float, i16, i16, i16, i16, %struct.ColorBand, [3 x float], [4 x float], i16, i8, i8, [80 x i8], [1024 x i8], i32, i32, float, float, i32, i16, i16, i16, i16, i16, i16, %struct.WalkNavigation }
%struct.ListBase = type { i8*, i8* }
%struct.SolidLight = type { i32, i32, [4 x float], [4 x float], [4 x float] }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.WalkNavigation = type { float, float, float, float, float, float, i16, [3 x i16] }
%struct.EnumPropertyItem = type { i32, i8*, i32, i8*, i8* }
%struct.Global = type { %struct.Main*, [1024 x i8], [1024 x i8], i8, i8, i8, %struct.ListBase, i8, i8, i8, i16, i16, i16, i8, i16, i32, i32, i8, i32, i32, [200 x i8] }
%struct.Main = type { %struct.Main*, %struct.Main*, [1024 x i8], i16, i16, i16, i16, i64, [16 x i8], i16, %struct.Library*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [256 x i8], %struct.EvaluationContext*, %struct.MainLock* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.EvaluationContext = type { i32 }
%struct.MainLock = type opaque
%struct.wmOperatorType = type { i8*, i8*, i8*, i8*, i32 (%struct.bContext*, %struct.wmOperator*)*, i8 (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, void (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, i32 (%struct.bContext*)*, void (%struct.bContext*, %struct.wmOperator*)*, %struct.StructRNA*, %struct.IDProperty*, %struct.PropertyRNA*, %struct.ListBase, %struct.wmKeyMap*, i8*, i32 (%struct.bContext*, %struct.wmOperatorType*)*, %struct.ExtensionRNA, i16 }
%struct.bContext = type opaque
%struct.wmOperator = type { %struct.wmOperator*, %struct.wmOperator*, [64 x i8], %struct.IDProperty*, %struct.wmOperatorType*, i8*, i8*, %struct.PointerRNA*, %struct.ReportList*, %struct.ListBase, %struct.wmOperator*, %struct.uiLayout*, i16, [3 x i16] }
%struct.PointerRNA = type { %struct.anon, %struct.StructRNA*, i8* }
%struct.anon = type { i8* }
%struct.ReportList = type { %struct.ListBase, i32, i32, i32, i32, %struct.wmTimer* }
%struct.wmTimer = type { %struct.wmTimer*, %struct.wmTimer*, %struct.wmWindow*, double, i32, i8*, double, double, double, double, double, i32 }
%struct.wmWindow = type { %struct.wmWindow*, %struct.wmWindow*, i8*, %struct.bScreen*, %struct.bScreen*, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i32, i16, i16, %struct.wmEvent*, %struct.wmSubWindow*, %struct.wmGesture*, i32, i32, i8*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.bScreen = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.Scene*, %struct.Scene*, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.wmTimer*, i8* }
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.AnimData = type opaque
%struct.World = type opaque
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.SculptSession = type opaque
%struct.Ipo = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.Material = type opaque
%struct.BulletSoftBody = type opaque
%struct.PartDeflect = type opaque
%struct.SoftBody = type opaque
%struct.Group = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type opaque
%struct.DerivedMesh = type opaque
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.bNodeTree = type { %struct.ID, %struct.AnimData*, %struct.bNodeTreeType*, [64 x i8], %struct.StructRNA*, %struct.bGPdata*, [2 x float], %struct.ListBase, %struct.ListBase, i32, i32, i32, i32, i32, i16, i16, i32, i32, i16, i16, i32, %struct.rctf, %struct.ListBase, %struct.ListBase, %struct.bNodeInstanceHash*, %struct.bNodeInstanceKey, i32, %struct.bNodeTreeExec*, void (i8*, float)*, void (i8*, i8*)*, i32 (i8*)*, void (i8*)*, i8*, i8*, i8*, i8* }
%struct.bNodeTreeType = type opaque
%struct.rctf = type { float, float, float, float }
%struct.bNodeInstanceHash = type opaque
%struct.bNodeInstanceKey = type { i32 }
%struct.bNodeTreeExec = type opaque
%struct.Editing = type { %struct.ListBase*, %struct.ListBase, %struct.ListBase, %struct.Sequence*, [1024 x i8], [1024 x i8], i32, i32, i32, i32, %struct.rctf }
%struct.Sequence = type { %struct.Sequence*, %struct.Sequence*, i8*, i8*, [64 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, i16, i16, i32, i32, %struct.Strip*, %struct.Ipo*, %struct.Scene*, %struct.Object*, %struct.MovieClip*, %struct.Mask*, %struct.anim*, float, float, %struct.Sequence*, %struct.Sequence*, %struct.Sequence*, %struct.ListBase, %struct.bSound*, i8*, float, float, float, float, i8*, i32, i32, i32, float, i32, i8, [3 x i8], %struct.ListBase }
%struct.Strip = type { %struct.Strip*, %struct.Strip*, i32, i32, i32, i32, %struct.StripElem*, [768 x i8], %struct.StripProxy*, %struct.StripCrop*, %struct.StripTransform*, %struct.StripColorBalance*, %struct.ColorManagedColorspaceSettings }
%struct.StripElem = type { [256 x i8], i32, i32 }
%struct.StripProxy = type { [768 x i8], [256 x i8], %struct.anim*, i16, i16, i16, i16 }
%struct.StripCrop = type { i32, i32, i32, i32 }
%struct.StripTransform = type { i32, i32 }
%struct.StripColorBalance = type { [3 x float], [3 x float], [3 x float], i32, i32 }
%struct.Mask = type opaque
%struct.anim = type opaque
%struct.bSound = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type opaque
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.RenderResult = type opaque
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.RenderSlot = type { [64 x i8] }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.Text = type opaque
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.bGPdata = type opaque
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type { %struct.ID, %struct.AnimData*, [1024 x i8], i32, i32, [2 x i32], float, float, %struct.anim*, %struct.MovieClipCache*, %struct.bGPdata*, %struct.MovieTracking, i8*, %struct.MovieClipProxy, i32, i32, i32, i32, %struct.ColorManagedColorspaceSettings }
%struct.MovieClipCache = type opaque
%struct.MovieTracking = type { %struct.MovieTrackingSettings, %struct.MovieTrackingCamera, %struct.ListBase, %struct.ListBase, %struct.MovieTrackingReconstruction, %struct.MovieTrackingStabilization, %struct.MovieTrackingTrack*, %struct.MovieTrackingPlaneTrack*, %struct.ListBase, i32, i32, %struct.MovieTrackingStats*, %struct.MovieTrackingDopesheet }
%struct.MovieTrackingSettings = type { i32, i16, i16, float, i16, i16, i16, i16, i16, i16, float, i16, i16, i32, i32, i32, i16, i16, float, i32, i32, float, float, i32 }
%struct.MovieTrackingCamera = type { i8*, i16, i16, float, float, float, i16, i16, [2 x float], float, float, float, float, float }
%struct.MovieTrackingReconstruction = type { i32, float, i32, i32, %struct.MovieReconstructedCamera* }
%struct.MovieReconstructedCamera = type { i32, float, [4 x [4 x float]] }
%struct.MovieTrackingStabilization = type { i32, i32, i32, float, %struct.MovieTrackingTrack*, float, float, float, i32, i32, float }
%struct.MovieTrackingTrack = type { %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack*, [64 x i8], [2 x float], [2 x float], [2 x float], [2 x float], [2 x float], i32, i32, %struct.MovieTrackingMarker*, [3 x float], float, i32, i32, i32, [3 x float], i16, i16, i16, i16, i32, float, %struct.bGPdata*, float, float }
%struct.MovieTrackingMarker = type { [2 x float], [4 x [2 x float]], [2 x float], [2 x float], i32, i32 }
%struct.MovieTrackingPlaneTrack = type { %struct.MovieTrackingPlaneTrack*, %struct.MovieTrackingPlaneTrack*, [64 x i8], %struct.MovieTrackingTrack**, i32, i32, %struct.MovieTrackingPlaneMarker*, i32, i32, %struct.Image*, float, i32 }
%struct.MovieTrackingPlaneMarker = type { [4 x [2 x float]], i32, i32 }
%struct.MovieTrackingStats = type { [256 x i8] }
%struct.MovieTrackingDopesheet = type { i32, i16, i16, %struct.ListBase, %struct.ListBase, i32, i32 }
%struct.MovieClipProxy = type { [768 x i8], i16, i16, i16, i16 }
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.wmEvent = type { %struct.wmEvent*, %struct.wmEvent*, i16, i16, i32, i32, [2 x i32], [6 x i8], i8, i8, i16, i16, i32, i32, double, i32, i32, i16, i16, i16, i16, i16, i16, i8*, %struct.wmTabletData*, i16, i16, i32, i8* }
%struct.wmTabletData = type { i32, float, float, float }
%struct.wmSubWindow = type opaque
%struct.wmGesture = type { %struct.wmGesture*, %struct.wmGesture*, i32, i32, i32, i32, i32, i32, i8*, i8* }
%struct.uiLayout = type opaque
%struct.PropertyRNA = type opaque
%struct.wmKeyMap = type { %struct.wmKeyMap*, %struct.wmKeyMap*, %struct.ListBase, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i32 (%struct.bContext*)*, i8* }
%struct.ExtensionRNA = type { i8*, %struct.StructRNA*, i32 (%struct.bContext*, %struct.PointerRNA*, %struct.FunctionRNA*, %struct.ParameterList*)*, void (i8*)* }
%struct.FunctionRNA = type opaque
%struct.ParameterList = type { i8*, %struct.FunctionRNA*, i32, i32, i32 }
%struct.GHashIterator = type { %struct.GHash*, %struct.Entry*, i32 }
%struct.Entry = type opaque
%struct.MacroData = type { i32 }
%struct.wmEventHandler = type { %struct.wmEventHandler*, %struct.wmEventHandler*, i32, i32, %struct.wmKeyMap*, %struct.rcti*, %struct.rcti*, %struct.wmOperator*, %struct.ScrArea*, %struct.ARegion*, i32 (%struct.bContext*, %struct.wmEvent*, i8*)*, void (%struct.bContext*, i8*)*, i8*, %struct.ScrArea*, %struct.ARegion*, %struct.ARegion*, %struct.bScreen*, %struct.ListBase* }
%struct.ScrArea = type { %struct.ScrArea*, %struct.ScrArea*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.bScreen*, %struct.rcti, i8, i8, i16, i16, i16, i16, i16, i16, i8, i8, %struct.SpaceType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.ScrVert = type { %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.vec2s, i16, i16 }
%struct.vec2s = type { i16, i16 }
%struct.SpaceType = type { %struct.SpaceType*, %struct.SpaceType*, [64 x i8], i32, i32, %struct.SpaceLink* (%struct.bContext*)*, void (%struct.SpaceLink*)*, void (%struct.wmWindowManager*, %struct.ScrArea*)*, void (%struct.wmWindowManager*, %struct.ScrArea*)*, void (%struct.bScreen*, %struct.ScrArea*, %struct.wmNotifier*)*, void (%struct.bContext*, %struct.ScrArea*)*, %struct.SpaceLink* (%struct.SpaceLink*)*, void ()*, void (%struct.wmKeyConfig*)*, void ()*, i32 (%struct.bContext*, i8*, %struct.bContextDataResult*)*, %struct.ListBase, %struct.ListBase, i32 }
%struct.SpaceLink = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16] }
%struct.wmWindowManager = type { %struct.ID, %struct.wmWindow*, %struct.wmWindow*, %struct.ListBase, i32, i16, i16, %struct.ListBase, %struct.ListBase, %struct.ReportList, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.wmKeyConfig*, %struct.wmKeyConfig*, %struct.wmKeyConfig*, %struct.ListBase, %struct.wmTimer*, i8, [7 x i8] }
%struct.wmKeyConfig = type { %struct.wmKeyConfig*, %struct.wmKeyConfig*, [64 x i8], [64 x i8], %struct.ListBase, i32, i32 }
%struct.wmNotifier = type { %struct.wmNotifier*, %struct.wmNotifier*, %struct.wmWindowManager*, %struct.wmWindow*, i32, i32, i32, i32, i32, i8* }
%struct.bContextDataResult = type opaque
%struct.ARegion = type { %struct.ARegion*, %struct.ARegion*, %struct.View2D, %struct.rcti, %struct.rcti, i16, i16, i16, i16, i16, i16, float, i16, i16, i16, i16, i16, i16, i16, i16, %struct.ARegionType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.wmTimer*, i8*, i8* }
%struct.View2D = type { %struct.rctf, %struct.rctf, %struct.rcti, %struct.rcti, %struct.rcti, [2 x float], [2 x float], float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float*, i32, i32, %struct.SmoothView2DStore*, %struct.wmTimer* }
%struct.SmoothView2DStore = type opaque
%struct.ARegionType = type { %struct.ARegionType*, %struct.ARegionType*, i32, void (%struct.wmWindowManager*, %struct.ARegion*)*, void (%struct.wmWindowManager*, %struct.ARegion*)*, void (%struct.bContext*, %struct.ARegion*)*, void (%struct.bScreen*, %struct.ScrArea*, %struct.ARegion*, %struct.wmNotifier*)*, void (%struct.ARegion*)*, i8* (i8*)*, void ()*, void (%struct.wmKeyConfig*)*, void (%struct.wmWindow*, %struct.ScrArea*, %struct.ARegion*)*, i32 (%struct.bContext*, i8*, %struct.bContextDataResult*)*, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32, i32, i16, i16, i16 }
%struct.wmOperatorTypeMacro = type { %struct.wmOperatorTypeMacro*, %struct.wmOperatorTypeMacro*, [64 x i8], %struct.IDProperty*, %struct.PointerRNA* }
%union.IDPropertyTemplate = type { %struct.anon.0 }
%struct.anon.0 = type { i8*, i16, i8 }
%struct.CollectionPropertyIterator = type { %struct.PointerRNA, %struct.PointerRNA, %struct.PropertyRNA*, %union.anon, i32, i32, %struct.PointerRNA, i32 }
%union.anon = type { %struct.ArrayIterator }
%struct.ArrayIterator = type { i8*, i8*, i8*, i32, i32, i32 (%struct.CollectionPropertyIterator*, i8*)* }
%struct._gh_Entry = type { i8*, i8*, i8* }
%struct.DynStr = type opaque
%struct.View3D = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16], [4 x float], float, float, i8, [3 x i8], i32, i32, i16, i16, %struct.Object*, %struct.Object*, %struct.rctf, %struct.ListBase, %struct.BGpic*, %struct.View3D*, [64 x i8], i32, i32, i16, i16, i16, i16, i16, i16, float, float, float, float, [3 x float], [3 x float], i16, i16, i16, i8, i8, i8, i8, [2 x i8], %struct.ListBase, %struct.ListBase, %struct.ListBase, i8, i8, i8, [5 x i8], i8*, %struct.Material*, %struct.bGPdata* }
%struct.BGpic = type { %struct.BGpic*, %struct.BGpic*, %struct.Image*, %struct.ImageUser, %struct.MovieClip*, %struct.MovieClipUser, float, float, float, float, i16, i16, i16, i16 }
%struct.MovieClipUser = type { i32, i16, i16 }
%struct.uiPopupMenu = type opaque
%struct.uiBlock = type opaque
%struct.uiBut = type opaque
%struct.wmOpPopUp = type { %struct.wmOperator*, i32, i32, i32 }
%struct.uiStyle = type { %struct.uiStyle*, %struct.uiStyle*, [64 x i8], %struct.uiFontStyle, %struct.uiFontStyle, %struct.uiFontStyle, %struct.uiFontStyle, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16 }
%struct.uiFontStyle = type { i16, i16, i16, [6 x i8], i16, i16, i16, i16, i16, i16, float, float }
%struct.wmPaintCursor = type { %struct.wmPaintCursor*, %struct.wmPaintCursor*, i8*, i32 (%struct.bContext*)*, void (%struct.bContext*, i32, i32, i8*)* }
%struct.wmKeyMapItem = type { %struct.wmKeyMapItem*, %struct.wmKeyMapItem*, [64 x i8], %struct.IDProperty*, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.PointerRNA* }
%struct.bPathCompare = type { %struct.bPathCompare*, %struct.bPathCompare*, [768 x i8], i8, [7 x i8] }
%struct.RecentFile = type { %struct.RecentFile*, %struct.RecentFile*, i8* }
%struct.FileRuntime = type { i8 }
%struct.BlendHandle = type opaque
%struct.MenuType = type { %struct.MenuType*, %struct.MenuType*, [64 x i8], [64 x i8], [64 x i8], i8*, i32 (%struct.bContext*, %struct.MenuType*)*, void (%struct.bContext*, %struct.Menu*)*, %struct.ExtensionRNA }
%struct.Menu = type { %struct.MenuType*, %struct.uiLayout* }
%struct.ImBuf = type { %struct.ImBuf*, %struct.ImBuf*, i32, i32, i8, i32, i32, i32, i32*, float*, [2 x double], i32, i32, i32, i32, i32**, i32*, float*, float, [20 x %struct.ImBuf*], i32, i32, i32, i32, %struct.ImMetaData*, i8*, i32, [1024 x i8], [1024 x i8], %struct.MEM_CacheLimiterHandle_s*, i32, i8*, i32, i32, %struct.ColorSpace*, %struct.ColorSpace*, i32*, %struct.ColormanageCache*, i32, %struct.rcti, %struct.DDSData }
%struct.ImMetaData = type opaque
%struct.MEM_CacheLimiterHandle_s = type opaque
%struct.ColormanageCache = type opaque
%struct.DDSData = type { i32, i32, i8*, i32 }
%struct.RadialControl = type { i32, i32, %struct.PointerRNA, %struct.PointerRNA, %struct.PointerRNA, %struct.PointerRNA, %struct.PointerRNA, %struct.PointerRNA, %struct.PropertyRNA*, %struct.PropertyRNA*, %struct.PropertyRNA*, %struct.PropertyRNA*, %struct.PropertyRNA*, %struct.StructRNA*, float, float, float, float, [2 x i32], [2 x i32], i8, %struct.Dial*, i32, %struct.ListBase, i8, i8* }
%struct.Dial = type opaque

@global_ops_hash = internal global %struct.GHash* null, align 8, !dbg !0
@.str = private unnamed_addr constant [27 x i8] c"search for empty operator\0A\00", align 1
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.1 = private unnamed_addr constant [13 x i8] c"operatortype\00", align 1
@BLENDER_RNA = external dso_local global %struct.BlenderRNA, align 1
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@RNA_OperatorProperties = external dso_local global %struct.StructRNA, align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"Operator\00", align 1
@stderr = external dso_local global %struct._IO_FILE*, align 8
@.str.4 = private unnamed_addr constant [42 x i8] c"ERROR: Operator %s has no name property!\0A\00", align 1
@.str.5 = private unnamed_addr constant [11 x i8] c"Dummy Name\00", align 1
@.str.6 = private unnamed_addr constant [24 x i8] c"(undocumented operator)\00", align 1
@.str.7 = private unnamed_addr constant [37 x i8] c"%s: macro error: operator %s exists\0A\00", align 1
@__func__.WM_operatortype_append_macro = private unnamed_addr constant [29 x i8] c"WM_operatortype_append_macro\00", align 1
@.str.8 = private unnamed_addr constant [20 x i8] c"wmOperatorTypeMacro\00", align 1
@MEM_freeN = external dso_local global void (i8*)*, align 8
@.str.9 = private unnamed_addr constant [5 x i8] c"_OT_\00", align 1
@.str.10 = private unnamed_addr constant [12 x i8] c"bpy.ops.%s(\00", align 1
@.str.11 = private unnamed_addr constant [6 x i8] c"%s=%s\00", align 1
@.str.12 = private unnamed_addr constant [8 x i8] c", %s=%s\00", align 1
@.str.13 = private unnamed_addr constant [2 x i8] c")\00", align 1
@__const.WM_operator_pystring_abbreviate.end_str = private unnamed_addr constant [7 x i8] c" ... )\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"%s = %s\00", align 1
@__const.WM_operator_properties_alloc.val = private unnamed_addr constant { i32, [12 x i8] } { i32 0, [12 x i8] undef }, align 8
@.str.15 = private unnamed_addr constant [13 x i8] c"wmOpItemProp\00", align 1
@.str.16 = private unnamed_addr constant [12 x i8] c"wmOpItemPtr\00", align 1
@RNA_Struct = external dso_local global %struct.StructRNA, align 1
@U = external dso_local global %struct.UserDef, align 8
@.str.17 = private unnamed_addr constant [33 x i8] c"%s: %s has no enum property set\0A\00", align 1
@__func__.WM_menu_invoke = private unnamed_addr constant [15 x i8] c"WM_menu_invoke\00", align 1
@.str.18 = private unnamed_addr constant [37 x i8] c"%s: %s \22%s\22 is not an enum property\0A\00", align 1
@.str.19 = private unnamed_addr constant [4 x i8] c"OK?\00", align 1
@.str.20 = private unnamed_addr constant [9 x i8] c"filepath\00", align 1
@WM_operator_properties_filesel.file_display_items = internal global [5 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.21, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.23, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.24, i32 0, i32 0), i32 681, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.26, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.27, i32 0, i32 0), i32 680, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.29, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 3, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.30, i32 0, i32 0), i32 683, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.32, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !3223
@.str.21 = private unnamed_addr constant [20 x i8] c"FILE_DEFAULTDISPLAY\00", align 1
@.str.22 = private unnamed_addr constant [8 x i8] c"Default\00", align 1
@.str.23 = private unnamed_addr constant [47 x i8] c"Automatically determine display type for files\00", align 1
@.str.24 = private unnamed_addr constant [18 x i8] c"FILE_SHORTDISPLAY\00", align 1
@.str.25 = private unnamed_addr constant [11 x i8] c"Short List\00", align 1
@.str.26 = private unnamed_addr constant [28 x i8] c"Display files as short list\00", align 1
@.str.27 = private unnamed_addr constant [17 x i8] c"FILE_LONGDISPLAY\00", align 1
@.str.28 = private unnamed_addr constant [10 x i8] c"Long List\00", align 1
@.str.29 = private unnamed_addr constant [33 x i8] c"Display files as a detailed list\00", align 1
@.str.30 = private unnamed_addr constant [16 x i8] c"FILE_IMGDISPLAY\00", align 1
@.str.31 = private unnamed_addr constant [11 x i8] c"Thumbnails\00", align 1
@.str.32 = private unnamed_addr constant [28 x i8] c"Display files as thumbnails\00", align 1
@.str.33 = private unnamed_addr constant [10 x i8] c"File Path\00", align 1
@.str.34 = private unnamed_addr constant [13 x i8] c"Path to file\00", align 1
@.str.35 = private unnamed_addr constant [10 x i8] c"directory\00", align 1
@.str.36 = private unnamed_addr constant [10 x i8] c"Directory\00", align 1
@.str.37 = private unnamed_addr constant [22 x i8] c"Directory of the file\00", align 1
@.str.38 = private unnamed_addr constant [9 x i8] c"filename\00", align 1
@.str.39 = private unnamed_addr constant [10 x i8] c"File Name\00", align 1
@.str.40 = private unnamed_addr constant [17 x i8] c"Name of the file\00", align 1
@.str.41 = private unnamed_addr constant [6 x i8] c"files\00", align 1
@RNA_OperatorFileListElement = external dso_local global %struct.StructRNA, align 1
@.str.42 = private unnamed_addr constant [6 x i8] c"Files\00", align 1
@.str.43 = private unnamed_addr constant [15 x i8] c"check_existing\00", align 1
@.str.44 = private unnamed_addr constant [15 x i8] c"Check Existing\00", align 1
@.str.45 = private unnamed_addr constant [45 x i8] c"Check and warn on overwriting existing files\00", align 1
@.str.46 = private unnamed_addr constant [15 x i8] c"filter_blender\00", align 1
@.str.47 = private unnamed_addr constant [20 x i8] c"Filter .blend files\00", align 1
@.str.48 = private unnamed_addr constant [14 x i8] c"filter_backup\00", align 1
@.str.49 = private unnamed_addr constant [13 x i8] c"filter_image\00", align 1
@.str.50 = private unnamed_addr constant [19 x i8] c"Filter image files\00", align 1
@.str.51 = private unnamed_addr constant [13 x i8] c"filter_movie\00", align 1
@.str.52 = private unnamed_addr constant [19 x i8] c"Filter movie files\00", align 1
@.str.53 = private unnamed_addr constant [14 x i8] c"filter_python\00", align 1
@.str.54 = private unnamed_addr constant [20 x i8] c"Filter python files\00", align 1
@.str.55 = private unnamed_addr constant [12 x i8] c"filter_font\00", align 1
@.str.56 = private unnamed_addr constant [18 x i8] c"Filter font files\00", align 1
@.str.57 = private unnamed_addr constant [13 x i8] c"filter_sound\00", align 1
@.str.58 = private unnamed_addr constant [19 x i8] c"Filter sound files\00", align 1
@.str.59 = private unnamed_addr constant [12 x i8] c"filter_text\00", align 1
@.str.60 = private unnamed_addr constant [18 x i8] c"Filter text files\00", align 1
@.str.61 = private unnamed_addr constant [11 x i8] c"filter_btx\00", align 1
@.str.62 = private unnamed_addr constant [17 x i8] c"Filter btx files\00", align 1
@.str.63 = private unnamed_addr constant [15 x i8] c"filter_collada\00", align 1
@.str.64 = private unnamed_addr constant [21 x i8] c"Filter COLLADA files\00", align 1
@.str.65 = private unnamed_addr constant [14 x i8] c"filter_folder\00", align 1
@.str.66 = private unnamed_addr constant [15 x i8] c"Filter folders\00", align 1
@.str.67 = private unnamed_addr constant [9 x i8] c"filemode\00", align 1
@.str.68 = private unnamed_addr constant [18 x i8] c"File Browser Mode\00", align 1
@.str.69 = private unnamed_addr constant [89 x i8] c"The setting for the file browser mode to load a .blend file, a library or a special file\00", align 1
@.str.70 = private unnamed_addr constant [14 x i8] c"relative_path\00", align 1
@.str.71 = private unnamed_addr constant [14 x i8] c"Relative Path\00", align 1
@.str.72 = private unnamed_addr constant [43 x i8] c"Select the file relative to the blend file\00", align 1
@.str.73 = private unnamed_addr constant [13 x i8] c"display_type\00", align 1
@.str.74 = private unnamed_addr constant [13 x i8] c"Display Type\00", align 1
@WM_operator_properties_select_action.select_actions = internal global [5 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.75, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.76, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.77, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.78, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.79, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.80, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.81, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.82, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.83, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.84, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.85, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.86, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !3240
@.str.75 = private unnamed_addr constant [7 x i8] c"TOGGLE\00", align 1
@.str.76 = private unnamed_addr constant [7 x i8] c"Toggle\00", align 1
@.str.77 = private unnamed_addr constant [34 x i8] c"Toggle selection for all elements\00", align 1
@.str.78 = private unnamed_addr constant [7 x i8] c"SELECT\00", align 1
@.str.79 = private unnamed_addr constant [7 x i8] c"Select\00", align 1
@.str.80 = private unnamed_addr constant [20 x i8] c"Select all elements\00", align 1
@.str.81 = private unnamed_addr constant [9 x i8] c"DESELECT\00", align 1
@.str.82 = private unnamed_addr constant [9 x i8] c"Deselect\00", align 1
@.str.83 = private unnamed_addr constant [22 x i8] c"Deselect all elements\00", align 1
@.str.84 = private unnamed_addr constant [7 x i8] c"INVERT\00", align 1
@.str.85 = private unnamed_addr constant [7 x i8] c"Invert\00", align 1
@.str.86 = private unnamed_addr constant [33 x i8] c"Invert selection of all elements\00", align 1
@WM_operator_properties_select_action_simple.select_actions = internal global [3 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.78, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.79, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.80, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.81, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.82, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.83, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !3245
@.str.87 = private unnamed_addr constant [5 x i8] c"xmin\00", align 1
@.str.88 = private unnamed_addr constant [6 x i8] c"X Min\00", align 1
@.str.89 = private unnamed_addr constant [5 x i8] c"xmax\00", align 1
@.str.90 = private unnamed_addr constant [6 x i8] c"X Max\00", align 1
@.str.91 = private unnamed_addr constant [5 x i8] c"ymin\00", align 1
@.str.92 = private unnamed_addr constant [6 x i8] c"Y Min\00", align 1
@.str.93 = private unnamed_addr constant [5 x i8] c"ymax\00", align 1
@.str.94 = private unnamed_addr constant [6 x i8] c"Y Max\00", align 1
@.str.95 = private unnamed_addr constant [13 x i8] c"gesture_mode\00", align 1
@.str.96 = private unnamed_addr constant [13 x i8] c"Gesture Mode\00", align 1
@.str.97 = private unnamed_addr constant [7 x i8] c"extend\00", align 1
@.str.98 = private unnamed_addr constant [7 x i8] c"Extend\00", align 1
@.str.99 = private unnamed_addr constant [57 x i8] c"Extend selection instead of deselecting everything first\00", align 1
@.str.100 = private unnamed_addr constant [9 x i8] c"deselect\00", align 1
@.str.101 = private unnamed_addr constant [22 x i8] c"Remove from selection\00", align 1
@.str.102 = private unnamed_addr constant [7 x i8] c"toggle\00", align 1
@.str.103 = private unnamed_addr constant [17 x i8] c"Toggle Selection\00", align 1
@.str.104 = private unnamed_addr constant [21 x i8] c"Toggle the selection\00", align 1
@.str.105 = private unnamed_addr constant [7 x i8] c"xstart\00", align 1
@.str.106 = private unnamed_addr constant [8 x i8] c"X Start\00", align 1
@.str.107 = private unnamed_addr constant [5 x i8] c"xend\00", align 1
@.str.108 = private unnamed_addr constant [6 x i8] c"X End\00", align 1
@.str.109 = private unnamed_addr constant [7 x i8] c"ystart\00", align 1
@.str.110 = private unnamed_addr constant [8 x i8] c"Y Start\00", align 1
@.str.111 = private unnamed_addr constant [5 x i8] c"yend\00", align 1
@.str.112 = private unnamed_addr constant [6 x i8] c"Y End\00", align 1
@.str.113 = private unnamed_addr constant [7 x i8] c"cursor\00", align 1
@.str.114 = private unnamed_addr constant [7 x i8] c"Cursor\00", align 1
@.str.115 = private unnamed_addr constant [52 x i8] c"Mouse cursor style to use during the modal operator\00", align 1
@.str.116 = private unnamed_addr constant [21 x i8] c"WM_operator_ui_popup\00", align 1
@.str.117 = private unnamed_addr constant [31 x i8] c"WM_operator_props_dialog_popup\00", align 1
@.str.118 = private unnamed_addr constant [77 x i8] c"Operator redo '%s' does not have register enabled, incorrect invoke function\00", align 1
@.str.119 = private unnamed_addr constant [34 x i8] c"Operator redo '%s': wrong context\00", align 1
@.str.120 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.121 = private unnamed_addr constant [11 x i8] c"quit.blend\00", align 1
@G = external dso_local global %struct.Global, align 8
@.str.122 = private unnamed_addr constant [13 x i8] c"paint cursor\00", align 1
@circle_select_size = dso_local global i32 25, align 4, !dbg !3249
@.str.123 = private unnamed_addr constant [13 x i8] c"lasso points\00", align 1
@.str.124 = private unnamed_addr constant [5 x i8] c"path\00", align 1
@MEM_mallocN = external dso_local global i8* (i64, i8*)*, align 8
@__func__.WM_gesture_lasso_path_to_array = private unnamed_addr constant [31 x i8] c"WM_gesture_lasso_path_to_array\00", align 1
@.str.125 = private unnamed_addr constant [4 x i8] c"loc\00", align 1
@.str.126 = private unnamed_addr constant [24 x i8] c"wm_operatortype_init gh\00", align 1
@.str.127 = private unnamed_addr constant [7 x i8] c"Window\00", align 1
@.str.128 = private unnamed_addr constant [23 x i8] c"WM_OT_window_duplicate\00", align 1
@.str.129 = private unnamed_addr constant [20 x i8] c"WM_OT_read_homefile\00", align 1
@.str.130 = private unnamed_addr constant [20 x i8] c"WM_OT_save_homefile\00", align 1
@.str.131 = private unnamed_addr constant [25 x i8] c"INFO_MT_file_open_recent\00", align 1
@.str.132 = private unnamed_addr constant [20 x i8] c"WM_OT_open_mainfile\00", align 1
@.str.133 = private unnamed_addr constant [11 x i8] c"WM_OT_link\00", align 1
@.str.134 = private unnamed_addr constant [13 x i8] c"WM_OT_append\00", align 1
@.str.135 = private unnamed_addr constant [20 x i8] c"WM_OT_save_mainfile\00", align 1
@.str.136 = private unnamed_addr constant [23 x i8] c"WM_OT_save_as_mainfile\00", align 1
@.str.137 = private unnamed_addr constant [5 x i8] c"copy\00", align 1
@.str.138 = private unnamed_addr constant [31 x i8] c"WM_OT_window_fullscreen_toggle\00", align 1
@.str.139 = private unnamed_addr constant [19 x i8] c"WM_OT_quit_blender\00", align 1
@.str.140 = private unnamed_addr constant [19 x i8] c"WM_OT_redraw_timer\00", align 1
@.str.141 = private unnamed_addr constant [17 x i8] c"WM_OT_debug_menu\00", align 1
@.str.142 = private unnamed_addr constant [18 x i8] c"WM_OT_search_menu\00", align 1
@.str.143 = private unnamed_addr constant [26 x i8] c"USERPREF_MT_ndof_settings\00", align 1
@.str.144 = private unnamed_addr constant [23 x i8] c"WM_OT_context_set_enum\00", align 1
@.str.145 = private unnamed_addr constant [10 x i8] c"data_path\00", align 1
@.str.146 = private unnamed_addr constant [10 x i8] c"area.type\00", align 1
@.str.147 = private unnamed_addr constant [6 x i8] c"value\00", align 1
@.str.148 = private unnamed_addr constant [13 x i8] c"LOGIC_EDITOR\00", align 1
@.str.149 = private unnamed_addr constant [12 x i8] c"NODE_EDITOR\00", align 1
@.str.150 = private unnamed_addr constant [8 x i8] c"CONSOLE\00", align 1
@.str.151 = private unnamed_addr constant [8 x i8] c"VIEW_3D\00", align 1
@.str.152 = private unnamed_addr constant [13 x i8] c"GRAPH_EDITOR\00", align 1
@.str.153 = private unnamed_addr constant [11 x i8] c"PROPERTIES\00", align 1
@.str.154 = private unnamed_addr constant [16 x i8] c"SEQUENCE_EDITOR\00", align 1
@.str.155 = private unnamed_addr constant [9 x i8] c"OUTLINER\00", align 1
@.str.156 = private unnamed_addr constant [13 x i8] c"IMAGE_EDITOR\00", align 1
@.str.157 = private unnamed_addr constant [12 x i8] c"TEXT_EDITOR\00", align 1
@.str.158 = private unnamed_addr constant [17 x i8] c"DOPESHEET_EDITOR\00", align 1
@.str.159 = private unnamed_addr constant [41 x i8] c"user_preferences.inputs.ndof_sensitivity\00", align 1
@.str.160 = private unnamed_addr constant [26 x i8] c"WM_OT_context_scale_float\00", align 1
@.str.161 = private unnamed_addr constant [26 x i8] c"%s: '%s' cant exec macro\0A\00", align 1
@__func__.wm_macro_exec = private unnamed_addr constant [14 x i8] c"wm_macro_exec\00", align 1
@.str.162 = private unnamed_addr constant [10 x i8] c"MacroData\00", align 1
@.str.163 = private unnamed_addr constant [39 x i8] c"%s: macro error, calling NULL modal()\0A\00", align 1
@__func__.wm_macro_modal = private unnamed_addr constant [15 x i8] c"wm_macro_modal\00", align 1
@__const.wm_macro_modal.bounds = private unnamed_addr constant [4 x i32] [i32 -1, i32 -1, i32 -1, i32 -1], align 16
@.str.164 = private unnamed_addr constant [6 x i8] c"scene\00", align 1
@.str.165 = private unnamed_addr constant [7 x i8] c"object\00", align 1
@.str.166 = private unnamed_addr constant [12 x i8] c"object.data\00", align 1
@.str.167 = private unnamed_addr constant [23 x i8] c"object.active_material\00", align 1
@.str.168 = private unnamed_addr constant [12 x i8] c"scene.world\00", align 1
@.str.169 = private unnamed_addr constant [7 x i8] c"screen\00", align 1
@.str.170 = private unnamed_addr constant [11 x i8] c"space_data\00", align 1
@RNA_Space = external dso_local global %struct.StructRNA, align 1
@.str.171 = private unnamed_addr constant [5 x i8] c"area\00", align 1
@RNA_Area = external dso_local global %struct.StructRNA, align 1
@.str.172 = private unnamed_addr constant [7 x i8] c"region\00", align 1
@RNA_Region = external dso_local global %struct.StructRNA, align 1
@.str.173 = private unnamed_addr constant [18 x i8] c"bpy.context.%s.%s\00", align 1
@wm_enum_search_menu.search = internal global [256 x i8] zeroinitializer, align 16, !dbg !3251
@.str.174 = private unnamed_addr constant [7 x i8] c"_popup\00", align 1
@.str.175 = private unnamed_addr constant [7 x i8] c"action\00", align 1
@.str.176 = private unnamed_addr constant [7 x i8] c"Action\00", align 1
@.str.177 = private unnamed_addr constant [28 x i8] c"Selection action to execute\00", align 1
@__func__.wm_operator_ui_create = private unnamed_addr constant [22 x i8] c"wm_operator_ui_create\00", align 1
@.str.178 = private unnamed_addr constant [72 x i8] c"Operator '%s' does not have register enabled, incorrect invoke function\00", align 1
@.str.179 = private unnamed_addr constant [68 x i8] c"Operator '%s' does not have undo enabled, incorrect invoke function\00", align 1
@__func__.wm_block_dialog_create = private unnamed_addr constant [23 x i8] c"wm_block_dialog_create\00", align 1
@.str.180 = private unnamed_addr constant [3 x i8] c"OK\00", align 1
@__func__.wm_block_create_redo = private unnamed_addr constant [21 x i8] c"wm_block_create_redo\00", align 1
@.str.181 = private unnamed_addr constant [2 x i8] c"x\00", align 1
@.str.182 = private unnamed_addr constant [2 x i8] c"y\00", align 1
@.str.183 = private unnamed_addr constant [7 x i8] c"radius\00", align 1
@.str.184 = private unnamed_addr constant [17 x i8] c"Duplicate Window\00", align 1
@.str.185 = private unnamed_addr constant [37 x i8] c"Duplicate the current Blender window\00", align 1
@.str.186 = private unnamed_addr constant [20 x i8] c"Reload History File\00", align 1
@.str.187 = private unnamed_addr constant [19 x i8] c"WM_OT_read_history\00", align 1
@.str.188 = private unnamed_addr constant [30 x i8] c"Reloads history and bookmarks\00", align 1
@.str.189 = private unnamed_addr constant [21 x i8] c"Reload Start-Up File\00", align 1
@.str.190 = private unnamed_addr constant [54 x i8] c"Open the default file (doesn't save the current file)\00", align 1
@.str.191 = private unnamed_addr constant [37 x i8] c"Path to an alternative start-up file\00", align 1
@.str.192 = private unnamed_addr constant [8 x i8] c"load_ui\00", align 1
@.str.193 = private unnamed_addr constant [8 x i8] c"Load UI\00", align 1
@.str.194 = private unnamed_addr constant [47 x i8] c"Load user interface setup from the .blend file\00", align 1
@.str.195 = private unnamed_addr constant [22 x i8] c"Load Factory Settings\00", align 1
@.str.196 = private unnamed_addr constant [28 x i8] c"WM_OT_read_factory_settings\00", align 1
@.str.197 = private unnamed_addr constant [39 x i8] c"Load default file and user preferences\00", align 1
@.str.198 = private unnamed_addr constant [18 x i8] c"Save Startup File\00", align 1
@.str.199 = private unnamed_addr constant [68 x i8] c"Make the current file the default .blend file, includes preferences\00", align 1
@.str.200 = private unnamed_addr constant [19 x i8] c"Save User Settings\00", align 1
@.str.201 = private unnamed_addr constant [20 x i8] c"WM_OT_save_userpref\00", align 1
@.str.202 = private unnamed_addr constant [69 x i8] c"Save user preferences separately, overrides startup file preferences\00", align 1
@.str.203 = private unnamed_addr constant [18 x i8] c"Add Autoexec Path\00", align 1
@.str.204 = private unnamed_addr constant [33 x i8] c"WM_OT_userpref_autoexec_path_add\00", align 1
@.str.205 = private unnamed_addr constant [39 x i8] c"Add path to exclude from autoexecution\00", align 1
@.str.206 = private unnamed_addr constant [13 x i8] c"bPathCompare\00", align 1
@.str.207 = private unnamed_addr constant [21 x i8] c"Remove Autoexec Path\00", align 1
@.str.208 = private unnamed_addr constant [36 x i8] c"WM_OT_userpref_autoexec_path_remove\00", align 1
@.str.209 = private unnamed_addr constant [42 x i8] c"Remove path to exclude from autoexecution\00", align 1
@.str.210 = private unnamed_addr constant [6 x i8] c"index\00", align 1
@.str.211 = private unnamed_addr constant [6 x i8] c"Index\00", align 1
@.str.212 = private unnamed_addr constant [25 x i8] c"Toggle Window Fullscreen\00", align 1
@.str.213 = private unnamed_addr constant [37 x i8] c"Toggle the current window fullscreen\00", align 1
@.str.214 = private unnamed_addr constant [13 x i8] c"Quit Blender\00", align 1
@.str.215 = private unnamed_addr constant [18 x i8] c"Open Blender File\00", align 1
@.str.216 = private unnamed_addr constant [20 x i8] c"Open a Blender file\00", align 1
@.str.217 = private unnamed_addr constant [45 x i8] c"Load user interface setup in the .blend file\00", align 1
@.str.218 = private unnamed_addr constant [12 x i8] c"use_scripts\00", align 1
@.str.219 = private unnamed_addr constant [15 x i8] c"Trusted Source\00", align 1
@.str.220 = private unnamed_addr constant [94 x i8] c"Allow .blend file to execute scripts automatically, default available from system preferences\00", align 1
@.str.221 = private unnamed_addr constant [23 x i8] c"Context window not set\00", align 1
@.str.222 = private unnamed_addr constant [32 x i8] c"Trusted Source [Untrusted Path]\00", align 1
@.str.223 = private unnamed_addr constant [7 x i8] c"Revert\00", align 1
@.str.224 = private unnamed_addr constant [22 x i8] c"WM_OT_revert_mainfile\00", align 1
@.str.225 = private unnamed_addr constant [22 x i8] c"Reload the saved file\00", align 1
@.str.226 = private unnamed_addr constant [18 x i8] c"Link from Library\00", align 1
@.str.227 = private unnamed_addr constant [32 x i8] c"Link from a Library .blend file\00", align 1
@.str.228 = private unnamed_addr constant [14 x i8] c"Not a library\00", align 1
@.str.229 = private unnamed_addr constant [18 x i8] c"Nothing indicated\00", align 1
@.str.230 = private unnamed_addr constant [35 x i8] c"Cannot use current file as library\00", align 1
@.str.231 = private unnamed_addr constant [11 x i8] c"autoselect\00", align 1
@.str.232 = private unnamed_addr constant [46 x i8] c"Scene '%s' is linked, group instance disabled\00", align 1
@.str.233 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.234 = private unnamed_addr constant [13 x i8] c"active_layer\00", align 1
@.str.235 = private unnamed_addr constant [5 x i8] c"link\00", align 1
@.str.236 = private unnamed_addr constant [16 x i8] c"instance_groups\00", align 1
@.str.237 = private unnamed_addr constant [5 x i8] c"Link\00", align 1
@.str.238 = private unnamed_addr constant [53 x i8] c"Link the objects or datablocks rather than appending\00", align 1
@.str.239 = private unnamed_addr constant [19 x i8] c"Select new objects\00", align 1
@.str.240 = private unnamed_addr constant [13 x i8] c"Active Layer\00", align 1
@.str.241 = private unnamed_addr constant [36 x i8] c"Put new objects on the active layer\00", align 1
@.str.242 = private unnamed_addr constant [16 x i8] c"Instance Groups\00", align 1
@.str.243 = private unnamed_addr constant [44 x i8] c"Create Dupli-Group instances for each group\00", align 1
@.str.244 = private unnamed_addr constant [20 x i8] c"Append from Library\00", align 1
@.str.245 = private unnamed_addr constant [34 x i8] c"Append from a Library .blend file\00", align 1
@.str.246 = private unnamed_addr constant [21 x i8] c"Recover Last Session\00", align 1
@.str.247 = private unnamed_addr constant [27 x i8] c"WM_OT_recover_last_session\00", align 1
@.str.248 = private unnamed_addr constant [41 x i8] c"Open the last closed file (\22quit.blend\22)\00", align 1
@.str.249 = private unnamed_addr constant [18 x i8] c"Recover Auto Save\00", align 1
@.str.250 = private unnamed_addr constant [24 x i8] c"WM_OT_recover_auto_save\00", align 1
@.str.251 = private unnamed_addr constant [47 x i8] c"Open an automatically saved file to recover it\00", align 1
@.str.252 = private unnamed_addr constant [21 x i8] c"Save As Blender File\00", align 1
@.str.253 = private unnamed_addr constant [46 x i8] c"Save the current file in the desired location\00", align 1
@.str.254 = private unnamed_addr constant [9 x i8] c"compress\00", align 1
@.str.255 = private unnamed_addr constant [9 x i8] c"Compress\00", align 1
@.str.256 = private unnamed_addr constant [29 x i8] c"Write compressed .blend file\00", align 1
@.str.257 = private unnamed_addr constant [15 x i8] c"relative_remap\00", align 1
@.str.258 = private unnamed_addr constant [15 x i8] c"Remap Relative\00", align 1
@.str.259 = private unnamed_addr constant [58 x i8] c"Remap relative paths when saving in a different directory\00", align 1
@.str.260 = private unnamed_addr constant [10 x i8] c"Save Copy\00", align 1
@.str.261 = private unnamed_addr constant [76 x i8] c"Save a copy of the actual working state but does not make saved file active\00", align 1
@.str.262 = private unnamed_addr constant [16 x i8] c"use_mesh_compat\00", align 1
@.str.263 = private unnamed_addr constant [19 x i8] c"Legacy Mesh Format\00", align 1
@.str.264 = private unnamed_addr constant [132 x i8] c"Save using legacy mesh format (no ngons) - WARNING: only saves tris and quads, other ngons will be lost (no implicit triangulation)\00", align 1
@.str.265 = private unnamed_addr constant [15 x i8] c"untitled.blend\00", align 1
@.str.266 = private unnamed_addr constant [7 x i8] c".blend\00", align 1
@.str.267 = private unnamed_addr constant [18 x i8] c"Save Blender File\00", align 1
@.str.268 = private unnamed_addr constant [30 x i8] c"Save the current Blender file\00", align 1
@.str.269 = private unnamed_addr constant [11 x i8] c"Save Over?\00", align 1
@.str.270 = private unnamed_addr constant [13 x i8] c"Redraw Timer\00", align 1
@.str.271 = private unnamed_addr constant [64 x i8] c"Simple redraw timer to test the speed of updating the interface\00", align 1
@.str.272 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@redraw_timer_type_items = internal global [8 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.278, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.279, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.279, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.280, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.281, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.282, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.283, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.284, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.284, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 3, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.285, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.286, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.287, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.288, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.289, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.290, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.291, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.292, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.293, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.294, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.295, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.295, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !3528
@.str.273 = private unnamed_addr constant [5 x i8] c"Type\00", align 1
@.str.274 = private unnamed_addr constant [11 x i8] c"iterations\00", align 1
@.str.275 = private unnamed_addr constant [11 x i8] c"Iterations\00", align 1
@.str.276 = private unnamed_addr constant [26 x i8] c"Number of times to redraw\00", align 1
@.str.277 = private unnamed_addr constant [33 x i8] c"%d x %s: %.2f ms,  average: %.4f\00", align 1
@.str.278 = private unnamed_addr constant [5 x i8] c"DRAW\00", align 1
@.str.279 = private unnamed_addr constant [12 x i8] c"Draw Region\00", align 1
@.str.280 = private unnamed_addr constant [10 x i8] c"DRAW_SWAP\00", align 1
@.str.281 = private unnamed_addr constant [19 x i8] c"Draw Region + Swap\00", align 1
@.str.282 = private unnamed_addr constant [21 x i8] c"Draw Region and Swap\00", align 1
@.str.283 = private unnamed_addr constant [9 x i8] c"DRAW_WIN\00", align 1
@.str.284 = private unnamed_addr constant [12 x i8] c"Draw Window\00", align 1
@.str.285 = private unnamed_addr constant [14 x i8] c"DRAW_WIN_SWAP\00", align 1
@.str.286 = private unnamed_addr constant [19 x i8] c"Draw Window + Swap\00", align 1
@.str.287 = private unnamed_addr constant [21 x i8] c"Draw Window and Swap\00", align 1
@.str.288 = private unnamed_addr constant [10 x i8] c"ANIM_STEP\00", align 1
@.str.289 = private unnamed_addr constant [10 x i8] c"Anim Step\00", align 1
@.str.290 = private unnamed_addr constant [16 x i8] c"Animation Steps\00", align 1
@.str.291 = private unnamed_addr constant [10 x i8] c"ANIM_PLAY\00", align 1
@.str.292 = private unnamed_addr constant [10 x i8] c"Anim Play\00", align 1
@.str.293 = private unnamed_addr constant [19 x i8] c"Animation Playback\00", align 1
@.str.294 = private unnamed_addr constant [5 x i8] c"UNDO\00", align 1
@.str.295 = private unnamed_addr constant [10 x i8] c"Undo/Redo\00", align 1
@.str.296 = private unnamed_addr constant [18 x i8] c"Memory Statistics\00", align 1
@.str.297 = private unnamed_addr constant [24 x i8] c"WM_OT_memory_statistics\00", align 1
@.str.298 = private unnamed_addr constant [39 x i8] c"Print memory statistics to the console\00", align 1
@MEM_printmemlist_stats = external dso_local global void ()*, align 8
@.str.299 = private unnamed_addr constant [21 x i8] c"Dependency Relations\00", align 1
@.str.300 = private unnamed_addr constant [27 x i8] c"WM_OT_dependency_relations\00", align 1
@.str.301 = private unnamed_addr constant [48 x i8] c"Print dependency graph relations to the console\00", align 1
@.str.302 = private unnamed_addr constant [11 x i8] c"Debug Menu\00", align 1
@.str.303 = private unnamed_addr constant [36 x i8] c"Open a popup to set the debug level\00", align 1
@.str.304 = private unnamed_addr constant [12 x i8] c"debug_value\00", align 1
@.str.305 = private unnamed_addr constant [12 x i8] c"Debug Value\00", align 1
@.str.306 = private unnamed_addr constant [17 x i8] c"Restore Defaults\00", align 1
@.str.307 = private unnamed_addr constant [24 x i8] c"WM_OT_operator_defaults\00", align 1
@.str.308 = private unnamed_addr constant [46 x i8] c"Set the active operator to its default values\00", align 1
@.str.309 = private unnamed_addr constant [16 x i8] c"active_operator\00", align 1
@RNA_Operator = external dso_local global %struct.StructRNA, align 1
@.str.310 = private unnamed_addr constant [23 x i8] c"No operator in context\00", align 1
@.str.311 = private unnamed_addr constant [14 x i8] c"Splash Screen\00", align 1
@.str.312 = private unnamed_addr constant [13 x i8] c"WM_OT_splash\00", align 1
@.str.313 = private unnamed_addr constant [41 x i8] c"Open the splash screen with release info\00", align 1
@.str.314 = private unnamed_addr constant [19 x i8] c"USERPREF_MT_splash\00", align 1
@.str.315 = private unnamed_addr constant [6 x i8] c"Links\00", align 1
@.str.316 = private unnamed_addr constant [32 x i8] c"Support an Open Animation Movie\00", align 1
@.str.317 = private unnamed_addr constant [15 x i8] c"WM_OT_url_open\00", align 1
@.str.318 = private unnamed_addr constant [4 x i8] c"url\00", align 1
@.str.319 = private unnamed_addr constant [31 x i8] c"https://cloud.blender.org/join\00", align 1
@.str.320 = private unnamed_addr constant [10 x i8] c"Donations\00", align 1
@.str.321 = private unnamed_addr constant [52 x i8] c"http://www.blender.org/foundation/donation-payment/\00", align 1
@.str.322 = private unnamed_addr constant [8 x i8] c"Credits\00", align 1
@.str.323 = private unnamed_addr constant [38 x i8] c"http://www.blender.org/about/credits/\00", align 1
@.str.324 = private unnamed_addr constant [62 x i8] c"http://wiki.blender.org/index.php/Dev:Ref/Release_Notes/%d.%d\00", align 1
@.str.325 = private unnamed_addr constant [12 x i8] c"Release Log\00", align 1
@.str.326 = private unnamed_addr constant [7 x i8] c"Manual\00", align 1
@.str.327 = private unnamed_addr constant [49 x i8] c"http://wiki.blender.org/index.php/Doc:2.6/Manual\00", align 1
@.str.328 = private unnamed_addr constant [16 x i8] c"Blender Website\00", align 1
@.str.329 = private unnamed_addr constant [23 x i8] c"http://www.blender.org\00", align 1
@.str.330 = private unnamed_addr constant [65 x i8] c"http://www.blender.org/documentation/blender_python_api_%d_%d_%d\00", align 1
@.str.331 = private unnamed_addr constant [21 x i8] c"Python API Reference\00", align 1
@.str.332 = private unnamed_addr constant [25 x i8] c"WM_OT_copy_prev_settings\00", align 1
@.str.333 = private unnamed_addr constant [7 x i8] c"Recent\00", align 1
@.str.334 = private unnamed_addr constant [12 x i8] c"Search Menu\00", align 1
@.str.335 = private unnamed_addr constant [69 x i8] c"Pop-up a search menu over all available operators in current context\00", align 1
@wm_block_search_menu.search = internal global [256 x i8] zeroinitializer, align 16, !dbg !3531
@.str.336 = private unnamed_addr constant [10 x i8] c"Call Menu\00", align 1
@.str.337 = private unnamed_addr constant [16 x i8] c"WM_OT_call_menu\00", align 1
@.str.338 = private unnamed_addr constant [31 x i8] c"Call (draw) a pre-defined menu\00", align 1
@.str.339 = private unnamed_addr constant [5 x i8] c"Name\00", align 1
@.str.340 = private unnamed_addr constant [17 x i8] c"Name of the menu\00", align 1
@.str.341 = private unnamed_addr constant [14 x i8] c"Call Pie Menu\00", align 1
@.str.342 = private unnamed_addr constant [20 x i8] c"WM_OT_call_menu_pie\00", align 1
@.str.343 = private unnamed_addr constant [35 x i8] c"Call (draw) a pre-defined pie menu\00", align 1
@.str.344 = private unnamed_addr constant [21 x i8] c"Name of the pie menu\00", align 1
@.str.345 = private unnamed_addr constant [15 x i8] c"Radial Control\00", align 1
@.str.346 = private unnamed_addr constant [21 x i8] c"WM_OT_radial_control\00", align 1
@.str.347 = private unnamed_addr constant [63 x i8] c"Set some size property (like e.g. brush size) with mouse wheel\00", align 1
@.str.348 = private unnamed_addr constant [18 x i8] c"data_path_primary\00", align 1
@.str.349 = private unnamed_addr constant [18 x i8] c"Primary Data Path\00", align 1
@.str.350 = private unnamed_addr constant [57 x i8] c"Primary path of property to be set by the radial control\00", align 1
@.str.351 = private unnamed_addr constant [20 x i8] c"data_path_secondary\00", align 1
@.str.352 = private unnamed_addr constant [20 x i8] c"Secondary Data Path\00", align 1
@.str.353 = private unnamed_addr constant [59 x i8] c"Secondary path of property to be set by the radial control\00", align 1
@.str.354 = private unnamed_addr constant [14 x i8] c"use_secondary\00", align 1
@.str.355 = private unnamed_addr constant [14 x i8] c"Use Secondary\00", align 1
@.str.356 = private unnamed_addr constant [72 x i8] c"Path of property to select between the primary and secondary data paths\00", align 1
@.str.357 = private unnamed_addr constant [14 x i8] c"rotation_path\00", align 1
@.str.358 = private unnamed_addr constant [14 x i8] c"Rotation Path\00", align 1
@.str.359 = private unnamed_addr constant [52 x i8] c"Path of property used to rotate the texture display\00", align 1
@.str.360 = private unnamed_addr constant [11 x i8] c"color_path\00", align 1
@.str.361 = private unnamed_addr constant [11 x i8] c"Color Path\00", align 1
@.str.362 = private unnamed_addr constant [54 x i8] c"Path of property used to set the color of the control\00", align 1
@.str.363 = private unnamed_addr constant [16 x i8] c"fill_color_path\00", align 1
@.str.364 = private unnamed_addr constant [16 x i8] c"Fill Color Path\00", align 1
@.str.365 = private unnamed_addr constant [59 x i8] c"Path of property used to set the fill color of the control\00", align 1
@.str.366 = private unnamed_addr constant [10 x i8] c"zoom_path\00", align 1
@.str.367 = private unnamed_addr constant [10 x i8] c"Zoom Path\00", align 1
@.str.368 = private unnamed_addr constant [60 x i8] c"Path of property used to set the zoom level for the control\00", align 1
@.str.369 = private unnamed_addr constant [9 x i8] c"image_id\00", align 1
@.str.370 = private unnamed_addr constant [9 x i8] c"Image ID\00", align 1
@.str.371 = private unnamed_addr constant [61 x i8] c"Path of ID that is used to generate an image for the control\00", align 1
@.str.372 = private unnamed_addr constant [14 x i8] c"secondary_tex\00", align 1
@.str.373 = private unnamed_addr constant [18 x i8] c"Secondary Texture\00", align 1
@.str.374 = private unnamed_addr constant [35 x i8] c"Tweak brush secondary/mask texture\00", align 1
@.str.375 = private unnamed_addr constant [14 x i8] c"RadialControl\00", align 1
@.str.376 = private unnamed_addr constant [39 x i8] c"Property must be an integer or a float\00", align 1
@.str.377 = private unnamed_addr constant [57 x i8] c"Property must be a none, distance, a factor, or an angle\00", align 1
@RNA_Context = external dso_local global %struct.StructRNA, align 1
@.str.378 = private unnamed_addr constant [40 x i8] c"Pointer from path image_id is not an ID\00", align 1
@.str.379 = private unnamed_addr constant [42 x i8] c"Property cannot be both boolean and float\00", align 1
@.str.380 = private unnamed_addr constant [28 x i8] c"Could not resolve path '%s'\00", align 1
@.str.381 = private unnamed_addr constant [39 x i8] c"Property from path '%s' is not a float\00", align 1
@.str.382 = private unnamed_addr constant [52 x i8] c"Property from path '%s' has length %d instead of %d\00", align 1
@__const.radial_control_set_initial_mouse.zoom = private unnamed_addr constant [2 x float] [float 1.000000e+00, float 1.000000e+00], align 4
@__const.radial_control_paint_cursor.col = private unnamed_addr constant [3 x float] [float 1.000000e+00, float 1.000000e+00, float 1.000000e+00], align 4
@.str.383 = private unnamed_addr constant [6 x i8] c"%1.2f\00", align 1
@.str.384 = private unnamed_addr constant [4 x i8] c"%3f\00", align 1
@gesture_circle_modal_keymap.modal_items = internal global [9 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.385, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.386, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.387, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.388, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.389, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.390, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 7, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.391, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.392, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.393, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.394, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.78, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.79, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.81, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.395, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.396, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.397, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !3534
@.str.385 = private unnamed_addr constant [7 x i8] c"CANCEL\00", align 1
@.str.386 = private unnamed_addr constant [7 x i8] c"Cancel\00", align 1
@.str.387 = private unnamed_addr constant [8 x i8] c"CONFIRM\00", align 1
@.str.388 = private unnamed_addr constant [8 x i8] c"Confirm\00", align 1
@.str.389 = private unnamed_addr constant [4 x i8] c"ADD\00", align 1
@.str.390 = private unnamed_addr constant [4 x i8] c"Add\00", align 1
@.str.391 = private unnamed_addr constant [9 x i8] c"SUBTRACT\00", align 1
@.str.392 = private unnamed_addr constant [9 x i8] c"Subtract\00", align 1
@.str.393 = private unnamed_addr constant [5 x i8] c"SIZE\00", align 1
@.str.394 = private unnamed_addr constant [5 x i8] c"Size\00", align 1
@.str.395 = private unnamed_addr constant [9 x i8] c"DeSelect\00", align 1
@.str.396 = private unnamed_addr constant [4 x i8] c"NOP\00", align 1
@.str.397 = private unnamed_addr constant [13 x i8] c"No Operation\00", align 1
@.str.398 = private unnamed_addr constant [22 x i8] c"View3D Gesture Circle\00", align 1
@.str.399 = private unnamed_addr constant [24 x i8] c"VIEW3D_OT_select_circle\00", align 1
@.str.400 = private unnamed_addr constant [20 x i8] c"UV_OT_circle_select\00", align 1
@.str.401 = private unnamed_addr constant [22 x i8] c"CLIP_OT_select_circle\00", align 1
@.str.402 = private unnamed_addr constant [22 x i8] c"MASK_OT_select_circle\00", align 1
@.str.403 = private unnamed_addr constant [22 x i8] c"NODE_OT_select_circle\00", align 1
@gesture_border_modal_keymap.modal_items = internal global [5 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.385, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.386, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.78, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.79, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.81, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.395, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.404, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.405, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !3544
@.str.404 = private unnamed_addr constant [6 x i8] c"BEGIN\00", align 1
@.str.405 = private unnamed_addr constant [6 x i8] c"Begin\00", align 1
@.str.406 = private unnamed_addr constant [15 x i8] c"Gesture Border\00", align 1
@.str.407 = private unnamed_addr constant [24 x i8] c"ACTION_OT_select_border\00", align 1
@.str.408 = private unnamed_addr constant [31 x i8] c"ANIM_OT_channels_select_border\00", align 1
@.str.409 = private unnamed_addr constant [25 x i8] c"ANIM_OT_previewrange_set\00", align 1
@.str.410 = private unnamed_addr constant [22 x i8] c"INFO_OT_select_border\00", align 1
@.str.411 = private unnamed_addr constant [22 x i8] c"FILE_OT_select_border\00", align 1
@.str.412 = private unnamed_addr constant [23 x i8] c"GRAPH_OT_select_border\00", align 1
@.str.413 = private unnamed_addr constant [24 x i8] c"MARKER_OT_select_border\00", align 1
@.str.414 = private unnamed_addr constant [21 x i8] c"NLA_OT_select_border\00", align 1
@.str.415 = private unnamed_addr constant [22 x i8] c"NODE_OT_select_border\00", align 1
@.str.416 = private unnamed_addr constant [22 x i8] c"NODE_OT_viewer_border\00", align 1
@.str.417 = private unnamed_addr constant [19 x i8] c"PAINT_OT_hide_show\00", align 1
@.str.418 = private unnamed_addr constant [26 x i8] c"OUTLINER_OT_select_border\00", align 1
@.str.419 = private unnamed_addr constant [27 x i8] c"SEQUENCER_OT_select_border\00", align 1
@.str.420 = private unnamed_addr constant [31 x i8] c"SEQUENCER_OT_view_ghost_border\00", align 1
@.str.421 = private unnamed_addr constant [20 x i8] c"UV_OT_select_border\00", align 1
@.str.422 = private unnamed_addr constant [22 x i8] c"CLIP_OT_select_border\00", align 1
@.str.423 = private unnamed_addr constant [28 x i8] c"CLIP_OT_graph_select_border\00", align 1
@.str.424 = private unnamed_addr constant [22 x i8] c"MASK_OT_select_border\00", align 1
@.str.425 = private unnamed_addr constant [22 x i8] c"VIEW2D_OT_zoom_border\00", align 1
@.str.426 = private unnamed_addr constant [22 x i8] c"VIEW3D_OT_clip_border\00", align 1
@.str.427 = private unnamed_addr constant [24 x i8] c"VIEW3D_OT_render_border\00", align 1
@.str.428 = private unnamed_addr constant [24 x i8] c"VIEW3D_OT_select_border\00", align 1
@.str.429 = private unnamed_addr constant [22 x i8] c"VIEW3D_OT_zoom_border\00", align 1
@.str.430 = private unnamed_addr constant [23 x i8] c"IMAGE_OT_render_border\00", align 1
@gesture_zoom_border_modal_keymap.modal_items = internal global [5 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.385, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.386, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 9, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.431, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.432, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 10, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.433, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.434, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.404, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.405, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !3547
@.str.431 = private unnamed_addr constant [3 x i8] c"IN\00", align 1
@.str.432 = private unnamed_addr constant [3 x i8] c"In\00", align 1
@.str.433 = private unnamed_addr constant [4 x i8] c"OUT\00", align 1
@.str.434 = private unnamed_addr constant [4 x i8] c"Out\00", align 1
@.str.435 = private unnamed_addr constant [20 x i8] c"Gesture Zoom Border\00", align 1
@gesture_straightline_modal_keymap.modal_items = internal global [4 x %struct.EnumPropertyItem] [%struct.EnumPropertyItem { i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.385, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.386, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 3, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.78, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.79, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i32 0, i32 0) }, %struct.EnumPropertyItem { i32 8, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.404, i32 0, i32 0), i32 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.405, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i32 0, i32 0) }, %struct.EnumPropertyItem zeroinitializer], align 16, !dbg !3550
@.str.436 = private unnamed_addr constant [22 x i8] c"Gesture Straight Line\00", align 1
@.str.437 = private unnamed_addr constant [21 x i8] c"IMAGE_OT_sample_line\00", align 1
@.str.438 = private unnamed_addr constant [25 x i8] c"PAINT_OT_weight_gradient\00", align 1
@.str.439 = private unnamed_addr constant [15 x i8] c"MESH_OT_bisect\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.wmOperatorType* @WM_operatortype_find(i8* %idname, i8 zeroext %quiet) #0 !dbg !3560 {
entry:
  %retval = alloca %struct.wmOperatorType*, align 8
  %idname.addr = alloca i8*, align 8
  %quiet.addr = alloca i8, align 1
  %ot = alloca %struct.wmOperatorType*, align 8
  %idname_bl = alloca [64 x i8], align 16
  store i8* %idname, i8** %idname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %idname.addr, metadata !3563, metadata !DIExpression()), !dbg !3564
  store i8 %quiet, i8* %quiet.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %quiet.addr, metadata !3565, metadata !DIExpression()), !dbg !3566
  %0 = load i8*, i8** %idname.addr, align 8, !dbg !3567
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !3567
  %1 = load i8, i8* %arrayidx, align 1, !dbg !3567
  %tobool = icmp ne i8 %1, 0, !dbg !3567
  br i1 %tobool, label %if.then, label %if.else, !dbg !3569

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot, metadata !3570, metadata !DIExpression()), !dbg !3572
  call void @llvm.dbg.declare(metadata [64 x i8]* %idname_bl, metadata !3573, metadata !DIExpression()), !dbg !3574
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname_bl, i64 0, i64 0, !dbg !3575
  %2 = load i8*, i8** %idname.addr, align 8, !dbg !3576
  call void @WM_operator_bl_idname(i8* %arraydecay, i8* %2), !dbg !3577
  %3 = load %struct.GHash*, %struct.GHash** @global_ops_hash, align 8, !dbg !3578
  %arraydecay1 = getelementptr inbounds [64 x i8], [64 x i8]* %idname_bl, i64 0, i64 0, !dbg !3579
  %call = call i8* @BLI_ghash_lookup(%struct.GHash* %3, i8* %arraydecay1), !dbg !3580
  %4 = bitcast i8* %call to %struct.wmOperatorType*, !dbg !3580
  store %struct.wmOperatorType* %4, %struct.wmOperatorType** %ot, align 8, !dbg !3581
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3582
  %tobool2 = icmp ne %struct.wmOperatorType* %5, null, !dbg !3582
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !3584

if.then3:                                         ; preds = %if.then
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3585
  store %struct.wmOperatorType* %6, %struct.wmOperatorType** %retval, align 8, !dbg !3587
  br label %return, !dbg !3587

if.end:                                           ; preds = %if.then
  %7 = load i8, i8* %quiet.addr, align 1, !dbg !3588
  %tobool4 = icmp ne i8 %7, 0, !dbg !3588
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !3590

if.then5:                                         ; preds = %if.end
  br label %if.end6, !dbg !3591

if.end6:                                          ; preds = %if.then5, %if.end
  br label %if.end11, !dbg !3593

if.else:                                          ; preds = %entry
  %8 = load i8, i8* %quiet.addr, align 1, !dbg !3594
  %tobool7 = icmp ne i8 %8, 0, !dbg !3594
  br i1 %tobool7, label %if.end10, label %if.then8, !dbg !3597

if.then8:                                         ; preds = %if.else
  %call9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i64 0, i64 0)), !dbg !3598
  br label %if.end10, !dbg !3600

if.end10:                                         ; preds = %if.then8, %if.else
  br label %if.end11

if.end11:                                         ; preds = %if.end10, %if.end6
  store %struct.wmOperatorType* null, %struct.wmOperatorType** %retval, align 8, !dbg !3601
  br label %return, !dbg !3601

return:                                           ; preds = %if.end11, %if.then3
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %retval, align 8, !dbg !3602
  ret %struct.wmOperatorType* %9, !dbg !3602
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_operator_bl_idname(i8* %to, i8* %from) #0 !dbg !3603 {
entry:
  %to.addr = alloca i8*, align 8
  %from.addr = alloca i8*, align 8
  %sep = alloca i8*, align 8
  %ofs = alloca i32, align 4
  store i8* %to, i8** %to.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr, metadata !3606, metadata !DIExpression()), !dbg !3607
  store i8* %from, i8** %from.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr, metadata !3608, metadata !DIExpression()), !dbg !3609
  %0 = load i8*, i8** %from.addr, align 8, !dbg !3610
  %tobool = icmp ne i8* %0, null, !dbg !3610
  br i1 %tobool, label %if.then, label %if.else11, !dbg !3612

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %sep, metadata !3613, metadata !DIExpression()), !dbg !3615
  %1 = load i8*, i8** %from.addr, align 8, !dbg !3616
  %call = call i8* @strchr(i8* %1, i32 46) #6, !dbg !3617
  store i8* %call, i8** %sep, align 8, !dbg !3615
  %2 = load i8*, i8** %sep, align 8, !dbg !3618
  %tobool1 = icmp ne i8* %2, null, !dbg !3618
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !3620

if.then2:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %ofs, metadata !3621, metadata !DIExpression()), !dbg !3623
  %3 = load i8*, i8** %sep, align 8, !dbg !3624
  %4 = load i8*, i8** %from.addr, align 8, !dbg !3625
  %sub.ptr.lhs.cast = ptrtoint i8* %3 to i64, !dbg !3626
  %sub.ptr.rhs.cast = ptrtoint i8* %4 to i64, !dbg !3626
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !3626
  %conv = trunc i64 %sub.ptr.sub to i32, !dbg !3627
  store i32 %conv, i32* %ofs, align 4, !dbg !3623
  %5 = load i8*, i8** %to.addr, align 8, !dbg !3628
  %6 = load i8*, i8** %from.addr, align 8, !dbg !3629
  %7 = load i32, i32* %ofs, align 4, !dbg !3630
  %conv3 = sext i32 %7 to i64, !dbg !3630
  %mul = mul i64 1, %conv3, !dbg !3631
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 %6, i64 %mul, i1 false), !dbg !3632
  %8 = load i8*, i8** %to.addr, align 8, !dbg !3633
  %9 = load i32, i32* %ofs, align 4, !dbg !3634
  %conv4 = sext i32 %9 to i64, !dbg !3634
  call void @BLI_ascii_strtoupper(i8* %8, i64 %conv4), !dbg !3635
  %10 = load i8*, i8** %to.addr, align 8, !dbg !3636
  %11 = load i32, i32* %ofs, align 4, !dbg !3637
  %idx.ext = sext i32 %11 to i64, !dbg !3638
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 %idx.ext, !dbg !3638
  %call5 = call i8* @strcpy(i8* %add.ptr, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0)) #7, !dbg !3639
  %12 = load i8*, i8** %to.addr, align 8, !dbg !3640
  %13 = load i32, i32* %ofs, align 4, !dbg !3641
  %add = add nsw i32 %13, 4, !dbg !3642
  %idx.ext6 = sext i32 %add to i64, !dbg !3643
  %add.ptr7 = getelementptr inbounds i8, i8* %12, i64 %idx.ext6, !dbg !3643
  %14 = load i8*, i8** %sep, align 8, !dbg !3644
  %add.ptr8 = getelementptr inbounds i8, i8* %14, i64 1, !dbg !3645
  %call9 = call i8* @strcpy(i8* %add.ptr7, i8* %add.ptr8) #7, !dbg !3646
  br label %if.end, !dbg !3647

if.else:                                          ; preds = %if.then
  %15 = load i8*, i8** %to.addr, align 8, !dbg !3648
  %16 = load i8*, i8** %from.addr, align 8, !dbg !3650
  %call10 = call i8* @BLI_strncpy(i8* %15, i8* %16, i64 64), !dbg !3651
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  br label %if.end12, !dbg !3652

if.else11:                                        ; preds = %entry
  %17 = load i8*, i8** %to.addr, align 8, !dbg !3653
  %arrayidx = getelementptr inbounds i8, i8* %17, i64 0, !dbg !3653
  store i8 0, i8* %arrayidx, align 1, !dbg !3654
  br label %if.end12

if.end12:                                         ; preds = %if.else11, %if.end
  ret void, !dbg !3655
}

declare dso_local i8* @BLI_ghash_lookup(%struct.GHash*, i8*) #2

declare dso_local i32 @printf(i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_operatortype_iter(%struct.GHashIterator* %ghi) #0 !dbg !3656 {
entry:
  %ghi.addr = alloca %struct.GHashIterator*, align 8
  store %struct.GHashIterator* %ghi, %struct.GHashIterator** %ghi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GHashIterator** %ghi.addr, metadata !3668, metadata !DIExpression()), !dbg !3669
  %0 = load %struct.GHashIterator*, %struct.GHashIterator** %ghi.addr, align 8, !dbg !3670
  %1 = load %struct.GHash*, %struct.GHash** @global_ops_hash, align 8, !dbg !3671
  call void @BLI_ghashIterator_init(%struct.GHashIterator* %0, %struct.GHash* %1), !dbg !3672
  ret void, !dbg !3673
}

declare dso_local void @BLI_ghashIterator_init(%struct.GHashIterator*, %struct.GHash*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_operatortype_append(void (%struct.wmOperatorType*)* %opfunc) #0 !dbg !3674 {
entry:
  %opfunc.addr = alloca void (%struct.wmOperatorType*)*, align 8
  %ot = alloca %struct.wmOperatorType*, align 8
  store void (%struct.wmOperatorType*)* %opfunc, void (%struct.wmOperatorType*)** %opfunc.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.wmOperatorType*)** %opfunc.addr, metadata !3680, metadata !DIExpression()), !dbg !3681
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot, metadata !3682, metadata !DIExpression()), !dbg !3683
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3684
  %call = call i8* %0(i64 192, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0)), !dbg !3684
  %1 = bitcast i8* %call to %struct.wmOperatorType*, !dbg !3684
  store %struct.wmOperatorType* %1, %struct.wmOperatorType** %ot, align 8, !dbg !3685
  %call1 = call %struct.StructRNA* @RNA_def_struct_ptr(%struct.BlenderRNA* @BLENDER_RNA, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), %struct.StructRNA* @RNA_OperatorProperties), !dbg !3686
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3687
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 11, !dbg !3688
  store %struct.StructRNA* %call1, %struct.StructRNA** %srna, align 8, !dbg !3689
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3690
  %srna2 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 11, !dbg !3691
  %4 = load %struct.StructRNA*, %struct.StructRNA** %srna2, align 8, !dbg !3691
  call void @RNA_def_struct_translation_context(%struct.StructRNA* %4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0)), !dbg !3692
  %5 = load void (%struct.wmOperatorType*)*, void (%struct.wmOperatorType*)** %opfunc.addr, align 8, !dbg !3693
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3694
  call void %5(%struct.wmOperatorType* %6), !dbg !3693
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3695
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 0, !dbg !3697
  %8 = load i8*, i8** %name, align 8, !dbg !3697
  %cmp = icmp eq i8* %8, null, !dbg !3698
  br i1 %cmp, label %if.then, label %if.end, !dbg !3699

if.then:                                          ; preds = %entry
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !3700
  %10 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3702
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %10, i32 0, i32 1, !dbg !3703
  %11 = load i8*, i8** %idname, align 8, !dbg !3703
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.4, i64 0, i64 0), i8* %11), !dbg !3704
  %12 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3705
  %name4 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %12, i32 0, i32 0, !dbg !3706
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0), i8** %name4, align 8, !dbg !3707
  br label %if.end, !dbg !3708

if.end:                                           ; preds = %if.then, %entry
  %13 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3709
  %srna5 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %13, i32 0, i32 11, !dbg !3710
  %14 = load %struct.StructRNA*, %struct.StructRNA** %srna5, align 8, !dbg !3710
  %15 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3711
  %name6 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %15, i32 0, i32 0, !dbg !3712
  %16 = load i8*, i8** %name6, align 8, !dbg !3712
  %17 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3713
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %17, i32 0, i32 3, !dbg !3714
  %18 = load i8*, i8** %description, align 8, !dbg !3714
  %tobool = icmp ne i8* %18, null, !dbg !3713
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3713

cond.true:                                        ; preds = %if.end
  %19 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3715
  %description7 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %19, i32 0, i32 3, !dbg !3716
  %20 = load i8*, i8** %description7, align 8, !dbg !3716
  br label %cond.end, !dbg !3713

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !3713

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %20, %cond.true ], [ getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6, i64 0, i64 0), %cond.false ], !dbg !3713
  call void @RNA_def_struct_ui_text(%struct.StructRNA* %14, i8* %16, i8* %cond), !dbg !3717
  %21 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3718
  %srna8 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %21, i32 0, i32 11, !dbg !3719
  %22 = load %struct.StructRNA*, %struct.StructRNA** %srna8, align 8, !dbg !3719
  %23 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3720
  %idname9 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %23, i32 0, i32 1, !dbg !3721
  %24 = load i8*, i8** %idname9, align 8, !dbg !3721
  call void @RNA_def_struct_identifier(%struct.StructRNA* %22, i8* %24), !dbg !3722
  %25 = load %struct.GHash*, %struct.GHash** @global_ops_hash, align 8, !dbg !3723
  %26 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3724
  %idname10 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %26, i32 0, i32 1, !dbg !3725
  %27 = load i8*, i8** %idname10, align 8, !dbg !3725
  %28 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3726
  %29 = bitcast %struct.wmOperatorType* %28 to i8*, !dbg !3726
  call void @BLI_ghash_insert(%struct.GHash* %25, i8* %27, i8* %29), !dbg !3727
  ret void, !dbg !3728
}

declare dso_local %struct.StructRNA* @RNA_def_struct_ptr(%struct.BlenderRNA*, i8*, %struct.StructRNA*) #2

declare dso_local void @RNA_def_struct_translation_context(%struct.StructRNA*, i8*) #2

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #2

declare dso_local void @RNA_def_struct_ui_text(%struct.StructRNA*, i8*, i8*) #2

declare dso_local void @RNA_def_struct_identifier(%struct.StructRNA*, i8*) #2

declare dso_local void @BLI_ghash_insert(%struct.GHash*, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_operatortype_append_ptr(void (%struct.wmOperatorType*, i8*)* %opfunc, i8* %userdata) #0 !dbg !3729 {
entry:
  %opfunc.addr = alloca void (%struct.wmOperatorType*, i8*)*, align 8
  %userdata.addr = alloca i8*, align 8
  %ot = alloca %struct.wmOperatorType*, align 8
  store void (%struct.wmOperatorType*, i8*)* %opfunc, void (%struct.wmOperatorType*, i8*)** %opfunc.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.wmOperatorType*, i8*)** %opfunc.addr, metadata !3735, metadata !DIExpression()), !dbg !3736
  store i8* %userdata, i8** %userdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userdata.addr, metadata !3737, metadata !DIExpression()), !dbg !3738
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot, metadata !3739, metadata !DIExpression()), !dbg !3740
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3741
  %call = call i8* %0(i64 192, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0)), !dbg !3741
  %1 = bitcast i8* %call to %struct.wmOperatorType*, !dbg !3741
  store %struct.wmOperatorType* %1, %struct.wmOperatorType** %ot, align 8, !dbg !3742
  %call1 = call %struct.StructRNA* @RNA_def_struct_ptr(%struct.BlenderRNA* @BLENDER_RNA, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), %struct.StructRNA* @RNA_OperatorProperties), !dbg !3743
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3744
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 11, !dbg !3745
  store %struct.StructRNA* %call1, %struct.StructRNA** %srna, align 8, !dbg !3746
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3747
  %srna2 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 11, !dbg !3748
  %4 = load %struct.StructRNA*, %struct.StructRNA** %srna2, align 8, !dbg !3748
  call void @RNA_def_struct_translation_context(%struct.StructRNA* %4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0)), !dbg !3749
  %5 = load void (%struct.wmOperatorType*, i8*)*, void (%struct.wmOperatorType*, i8*)** %opfunc.addr, align 8, !dbg !3750
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3751
  %7 = load i8*, i8** %userdata.addr, align 8, !dbg !3752
  call void %5(%struct.wmOperatorType* %6, i8* %7), !dbg !3750
  %8 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3753
  %srna3 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %8, i32 0, i32 11, !dbg !3754
  %9 = load %struct.StructRNA*, %struct.StructRNA** %srna3, align 8, !dbg !3754
  %10 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3755
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %10, i32 0, i32 0, !dbg !3756
  %11 = load i8*, i8** %name, align 8, !dbg !3756
  %12 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3757
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %12, i32 0, i32 3, !dbg !3758
  %13 = load i8*, i8** %description, align 8, !dbg !3758
  %tobool = icmp ne i8* %13, null, !dbg !3757
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3757

cond.true:                                        ; preds = %entry
  %14 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3759
  %description4 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %14, i32 0, i32 3, !dbg !3760
  %15 = load i8*, i8** %description4, align 8, !dbg !3760
  br label %cond.end, !dbg !3757

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !3757

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %15, %cond.true ], [ getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6, i64 0, i64 0), %cond.false ], !dbg !3757
  call void @RNA_def_struct_ui_text(%struct.StructRNA* %9, i8* %11, i8* %cond), !dbg !3761
  %16 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3762
  %srna5 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %16, i32 0, i32 11, !dbg !3763
  %17 = load %struct.StructRNA*, %struct.StructRNA** %srna5, align 8, !dbg !3763
  %18 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3764
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %18, i32 0, i32 1, !dbg !3765
  %19 = load i8*, i8** %idname, align 8, !dbg !3765
  call void @RNA_def_struct_identifier(%struct.StructRNA* %17, i8* %19), !dbg !3766
  %20 = load %struct.GHash*, %struct.GHash** @global_ops_hash, align 8, !dbg !3767
  %21 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3768
  %idname6 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %21, i32 0, i32 1, !dbg !3769
  %22 = load i8*, i8** %idname6, align 8, !dbg !3769
  %23 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3770
  %24 = bitcast %struct.wmOperatorType* %23 to i8*, !dbg !3770
  call void @BLI_ghash_insert(%struct.GHash* %20, i8* %22, i8* %24), !dbg !3771
  ret void, !dbg !3772
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.wmOperatorType* @WM_operatortype_append_macro(i8* %idname, i8* %name, i8* %description, i32 %flag) #0 !dbg !3773 {
entry:
  %retval = alloca %struct.wmOperatorType*, align 8
  %idname.addr = alloca i8*, align 8
  %name.addr = alloca i8*, align 8
  %description.addr = alloca i8*, align 8
  %flag.addr = alloca i32, align 4
  %ot = alloca %struct.wmOperatorType*, align 8
  store i8* %idname, i8** %idname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %idname.addr, metadata !3776, metadata !DIExpression()), !dbg !3777
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !3778, metadata !DIExpression()), !dbg !3779
  store i8* %description, i8** %description.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %description.addr, metadata !3780, metadata !DIExpression()), !dbg !3781
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !3782, metadata !DIExpression()), !dbg !3783
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot, metadata !3784, metadata !DIExpression()), !dbg !3785
  %0 = load i8*, i8** %idname.addr, align 8, !dbg !3786
  %call = call %struct.wmOperatorType* @WM_operatortype_find(i8* %0, i8 zeroext 1), !dbg !3788
  %tobool = icmp ne %struct.wmOperatorType* %call, null, !dbg !3788
  br i1 %tobool, label %if.then, label %if.end, !dbg !3789

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %idname.addr, align 8, !dbg !3790
  %call1 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__func__.WM_operatortype_append_macro, i64 0, i64 0), i8* %1), !dbg !3792
  store %struct.wmOperatorType* null, %struct.wmOperatorType** %retval, align 8, !dbg !3793
  br label %return, !dbg !3793

if.end:                                           ; preds = %entry
  %2 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3794
  %call2 = call i8* %2(i64 192, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0)), !dbg !3794
  %3 = bitcast i8* %call2 to %struct.wmOperatorType*, !dbg !3794
  store %struct.wmOperatorType* %3, %struct.wmOperatorType** %ot, align 8, !dbg !3795
  %call3 = call %struct.StructRNA* @RNA_def_struct_ptr(%struct.BlenderRNA* @BLENDER_RNA, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), %struct.StructRNA* @RNA_OperatorProperties), !dbg !3796
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3797
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 11, !dbg !3798
  store %struct.StructRNA* %call3, %struct.StructRNA** %srna, align 8, !dbg !3799
  %5 = load i8*, i8** %idname.addr, align 8, !dbg !3800
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3801
  %idname4 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 1, !dbg !3802
  store i8* %5, i8** %idname4, align 8, !dbg !3803
  %7 = load i8*, i8** %name.addr, align 8, !dbg !3804
  %8 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3805
  %name5 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %8, i32 0, i32 0, !dbg !3806
  store i8* %7, i8** %name5, align 8, !dbg !3807
  %9 = load i8*, i8** %description.addr, align 8, !dbg !3808
  %10 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3809
  %description6 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %10, i32 0, i32 3, !dbg !3810
  store i8* %9, i8** %description6, align 8, !dbg !3811
  %11 = load i32, i32* %flag.addr, align 4, !dbg !3812
  %or = or i32 8, %11, !dbg !3813
  %conv = trunc i32 %or to i16, !dbg !3814
  %12 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3815
  %flag7 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %12, i32 0, i32 19, !dbg !3816
  store i16 %conv, i16* %flag7, align 8, !dbg !3817
  %13 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3818
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %13, i32 0, i32 4, !dbg !3819
  store i32 (%struct.bContext*, %struct.wmOperator*)* @wm_macro_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !3820
  %14 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3821
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %14, i32 0, i32 6, !dbg !3822
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @wm_macro_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !3823
  %15 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3824
  %modal = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %15, i32 0, i32 8, !dbg !3825
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @wm_macro_modal, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %modal, align 8, !dbg !3826
  %16 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3827
  %cancel = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %16, i32 0, i32 7, !dbg !3828
  store void (%struct.bContext*, %struct.wmOperator*)* @wm_macro_cancel, void (%struct.bContext*, %struct.wmOperator*)** %cancel, align 8, !dbg !3829
  %17 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3830
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %17, i32 0, i32 9, !dbg !3831
  store i32 (%struct.bContext*)* null, i32 (%struct.bContext*)** %poll, align 8, !dbg !3832
  %18 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3833
  %description8 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %18, i32 0, i32 3, !dbg !3835
  %19 = load i8*, i8** %description8, align 8, !dbg !3835
  %tobool9 = icmp ne i8* %19, null, !dbg !3833
  br i1 %tobool9, label %if.end12, label %if.then10, !dbg !3836

if.then10:                                        ; preds = %if.end
  %20 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3837
  %description11 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %20, i32 0, i32 3, !dbg !3838
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6, i64 0, i64 0), i8** %description11, align 8, !dbg !3839
  br label %if.end12, !dbg !3837

if.end12:                                         ; preds = %if.then10, %if.end
  %21 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3840
  %srna13 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %21, i32 0, i32 11, !dbg !3841
  %22 = load %struct.StructRNA*, %struct.StructRNA** %srna13, align 8, !dbg !3841
  %23 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3842
  %name14 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %23, i32 0, i32 0, !dbg !3843
  %24 = load i8*, i8** %name14, align 8, !dbg !3843
  %25 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3844
  %description15 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %25, i32 0, i32 3, !dbg !3845
  %26 = load i8*, i8** %description15, align 8, !dbg !3845
  call void @RNA_def_struct_ui_text(%struct.StructRNA* %22, i8* %24, i8* %26), !dbg !3846
  %27 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3847
  %srna16 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %27, i32 0, i32 11, !dbg !3848
  %28 = load %struct.StructRNA*, %struct.StructRNA** %srna16, align 8, !dbg !3848
  %29 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3849
  %idname17 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %29, i32 0, i32 1, !dbg !3850
  %30 = load i8*, i8** %idname17, align 8, !dbg !3850
  call void @RNA_def_struct_identifier(%struct.StructRNA* %28, i8* %30), !dbg !3851
  %31 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3852
  %srna18 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %31, i32 0, i32 11, !dbg !3853
  %32 = load %struct.StructRNA*, %struct.StructRNA** %srna18, align 8, !dbg !3853
  %33 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3854
  %ext = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %33, i32 0, i32 18, !dbg !3855
  %srna19 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext, i32 0, i32 1, !dbg !3856
  %34 = load %struct.StructRNA*, %struct.StructRNA** %srna19, align 8, !dbg !3856
  %tobool20 = icmp ne %struct.StructRNA* %34, null, !dbg !3854
  br i1 %tobool20, label %cond.true, label %cond.false, !dbg !3854

cond.true:                                        ; preds = %if.end12
  %35 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3857
  %ext21 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %35, i32 0, i32 18, !dbg !3858
  %srna22 = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext21, i32 0, i32 1, !dbg !3859
  %36 = load %struct.StructRNA*, %struct.StructRNA** %srna22, align 8, !dbg !3859
  %call23 = call i8* @RNA_struct_translation_context(%struct.StructRNA* %36), !dbg !3860
  br label %cond.end, !dbg !3854

cond.false:                                       ; preds = %if.end12
  br label %cond.end, !dbg !3854

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call23, %cond.true ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0), %cond.false ], !dbg !3854
  call void @RNA_def_struct_translation_context(%struct.StructRNA* %32, i8* %cond), !dbg !3861
  %37 = load %struct.GHash*, %struct.GHash** @global_ops_hash, align 8, !dbg !3862
  %38 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3863
  %idname24 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %38, i32 0, i32 1, !dbg !3864
  %39 = load i8*, i8** %idname24, align 8, !dbg !3864
  %40 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3865
  %41 = bitcast %struct.wmOperatorType* %40 to i8*, !dbg !3865
  call void @BLI_ghash_insert(%struct.GHash* %37, i8* %39, i8* %41), !dbg !3866
  %42 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !3867
  store %struct.wmOperatorType* %42, %struct.wmOperatorType** %retval, align 8, !dbg !3868
  br label %return, !dbg !3868

return:                                           ; preds = %cond.end, %if.then
  %43 = load %struct.wmOperatorType*, %struct.wmOperatorType** %retval, align 8, !dbg !3869
  ret %struct.wmOperatorType* %43, !dbg !3869
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @wm_macro_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !3870 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %opm = alloca %struct.wmOperator*, align 8
  %retval1 = alloca i32, align 4
  %md = alloca %struct.MacroData*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3873, metadata !DIExpression()), !dbg !3874
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !3875, metadata !DIExpression()), !dbg !3876
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %opm, metadata !3877, metadata !DIExpression()), !dbg !3878
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !3879, metadata !DIExpression()), !dbg !3880
  store i32 4, i32* %retval1, align 4, !dbg !3880
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3881
  call void @wm_macro_start(%struct.wmOperator* %0), !dbg !3882
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3883
  %macro = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 9, !dbg !3885
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %macro, i32 0, i32 0, !dbg !3886
  %2 = load i8*, i8** %first, align 8, !dbg !3886
  %3 = bitcast i8* %2 to %struct.wmOperator*, !dbg !3883
  store %struct.wmOperator* %3, %struct.wmOperator** %opm, align 8, !dbg !3887
  br label %for.cond, !dbg !3888

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.wmOperator*, %struct.wmOperator** %opm, align 8, !dbg !3889
  %tobool = icmp ne %struct.wmOperator* %4, null, !dbg !3891
  br i1 %tobool, label %for.body, label %for.end, !dbg !3891

for.body:                                         ; preds = %for.cond
  %5 = load %struct.wmOperator*, %struct.wmOperator** %opm, align 8, !dbg !3892
  %type = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %5, i32 0, i32 4, !dbg !3895
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type, align 8, !dbg !3895
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 4, !dbg !3896
  %7 = load i32 (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !3896
  %tobool2 = icmp ne i32 (%struct.bContext*, %struct.wmOperator*)* %7, null, !dbg !3892
  br i1 %tobool2, label %if.then, label %if.else8, !dbg !3897

if.then:                                          ; preds = %for.body
  %8 = load %struct.wmOperator*, %struct.wmOperator** %opm, align 8, !dbg !3898
  %type3 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %8, i32 0, i32 4, !dbg !3900
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type3, align 8, !dbg !3900
  %exec4 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 4, !dbg !3901
  %10 = load i32 (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*)** %exec4, align 8, !dbg !3901
  %11 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3902
  %12 = load %struct.wmOperator*, %struct.wmOperator** %opm, align 8, !dbg !3903
  %call = call i32 %10(%struct.bContext* %11, %struct.wmOperator* %12), !dbg !3898
  store i32 %call, i32* %retval1, align 4, !dbg !3904
  %13 = load i32, i32* %retval1, align 4, !dbg !3905
  %14 = load i32, i32* %retval1, align 4, !dbg !3906
  %and = and i32 %14, 4, !dbg !3908
  %tobool5 = icmp ne i32 %and, 0, !dbg !3908
  br i1 %tobool5, label %if.then6, label %if.else, !dbg !3909

if.then6:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.MacroData** %md, metadata !3910, metadata !DIExpression()), !dbg !3917
  %15 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3918
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %15, i32 0, i32 5, !dbg !3919
  %16 = load i8*, i8** %customdata, align 8, !dbg !3919
  %17 = bitcast i8* %16 to %struct.MacroData*, !dbg !3918
  store %struct.MacroData* %17, %struct.MacroData** %md, align 8, !dbg !3917
  %18 = load %struct.MacroData*, %struct.MacroData** %md, align 8, !dbg !3920
  %retval7 = getelementptr inbounds %struct.MacroData, %struct.MacroData* %18, i32 0, i32 0, !dbg !3921
  store i32 4, i32* %retval7, align 4, !dbg !3922
  br label %if.end, !dbg !3923

if.else:                                          ; preds = %if.then
  br label %for.end, !dbg !3924

if.end:                                           ; preds = %if.then6
  br label %if.end11, !dbg !3926

if.else8:                                         ; preds = %for.body
  %19 = load %struct.wmOperator*, %struct.wmOperator** %opm, align 8, !dbg !3927
  %type9 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %19, i32 0, i32 4, !dbg !3929
  %20 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type9, align 8, !dbg !3929
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %20, i32 0, i32 1, !dbg !3930
  %21 = load i8*, i8** %idname, align 8, !dbg !3930
  %call10 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.161, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__func__.wm_macro_exec, i64 0, i64 0), i8* %21), !dbg !3931
  br label %if.end11

if.end11:                                         ; preds = %if.else8, %if.end
  br label %for.inc, !dbg !3932

for.inc:                                          ; preds = %if.end11
  %22 = load %struct.wmOperator*, %struct.wmOperator** %opm, align 8, !dbg !3933
  %next = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %22, i32 0, i32 0, !dbg !3934
  %23 = load %struct.wmOperator*, %struct.wmOperator** %next, align 8, !dbg !3934
  store %struct.wmOperator* %23, %struct.wmOperator** %opm, align 8, !dbg !3935
  br label %for.cond, !dbg !3936, !llvm.loop !3937

for.end:                                          ; preds = %if.else, %for.cond
  %24 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3939
  %25 = load i32, i32* %retval1, align 4, !dbg !3940
  %call12 = call i32 @wm_macro_end(%struct.wmOperator* %24, i32 %25), !dbg !3941
  ret i32 %call12, !dbg !3942
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @wm_macro_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !3943 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3948, metadata !DIExpression()), !dbg !3949
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !3950, metadata !DIExpression()), !dbg !3951
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !3952, metadata !DIExpression()), !dbg !3953
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3954
  call void @wm_macro_start(%struct.wmOperator* %0), !dbg !3955
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3956
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3957
  %3 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !3958
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3959
  %macro = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 9, !dbg !3960
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %macro, i32 0, i32 0, !dbg !3961
  %5 = load i8*, i8** %first, align 8, !dbg !3961
  %6 = bitcast i8* %5 to %struct.wmOperator*, !dbg !3959
  %call = call i32 @wm_macro_invoke_internal(%struct.bContext* %1, %struct.wmOperator* %2, %struct.wmEvent* %3, %struct.wmOperator* %6), !dbg !3962
  ret i32 %call, !dbg !3963
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @wm_macro_modal(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !3964 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %opm = alloca %struct.wmOperator*, align 8
  %retval2 = alloca i32, align 4
  %md = alloca %struct.MacroData*, align 8
  %win = alloca %struct.wmWindow*, align 8
  %handler = alloca %struct.wmEventHandler*, align 8
  %bounds = alloca [4 x i32], align 16
  %wrap = alloca i32, align 4
  %ar = alloca %struct.ARegion*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3965, metadata !DIExpression()), !dbg !3966
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !3967, metadata !DIExpression()), !dbg !3968
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !3969, metadata !DIExpression()), !dbg !3970
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %opm, metadata !3971, metadata !DIExpression()), !dbg !3972
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3973
  %opm1 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 10, !dbg !3974
  %1 = load %struct.wmOperator*, %struct.wmOperator** %opm1, align 8, !dbg !3974
  store %struct.wmOperator* %1, %struct.wmOperator** %opm, align 8, !dbg !3972
  call void @llvm.dbg.declare(metadata i32* %retval2, metadata !3975, metadata !DIExpression()), !dbg !3976
  store i32 4, i32* %retval2, align 4, !dbg !3976
  %2 = load %struct.wmOperator*, %struct.wmOperator** %opm, align 8, !dbg !3977
  %cmp = icmp eq %struct.wmOperator* %2, null, !dbg !3979
  br i1 %cmp, label %if.then, label %if.else, !dbg !3980

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.163, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.wm_macro_modal, i64 0, i64 0)), !dbg !3981
  br label %if.end59, !dbg !3981

if.else:                                          ; preds = %entry
  %3 = load %struct.wmOperator*, %struct.wmOperator** %opm, align 8, !dbg !3982
  %type = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 4, !dbg !3984
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type, align 8, !dbg !3984
  %modal = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 8, !dbg !3985
  %5 = load i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %modal, align 8, !dbg !3985
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3986
  %7 = load %struct.wmOperator*, %struct.wmOperator** %opm, align 8, !dbg !3987
  %8 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !3988
  %call3 = call i32 %5(%struct.bContext* %6, %struct.wmOperator* %7, %struct.wmEvent* %8), !dbg !3982
  store i32 %call3, i32* %retval2, align 4, !dbg !3989
  %9 = load i32, i32* %retval2, align 4, !dbg !3990
  %10 = load i32, i32* %retval2, align 4, !dbg !3991
  %and = and i32 %10, 2, !dbg !3993
  %tobool = icmp ne i32 %and, 0, !dbg !3993
  br i1 %tobool, label %if.then4, label %if.end, !dbg !3994

if.then4:                                         ; preds = %if.else
  %11 = load %struct.wmOperator*, %struct.wmOperator** %opm, align 8, !dbg !3995
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %11, i32 0, i32 7, !dbg !3997
  %12 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !3997
  call void @WM_operator_properties_clear(%struct.PointerRNA* %12), !dbg !3998
  br label %if.end, !dbg !3999

if.end:                                           ; preds = %if.then4, %if.else
  %13 = load i32, i32* %retval2, align 4, !dbg !4000
  %and5 = and i32 %13, 4, !dbg !4002
  %tobool6 = icmp ne i32 %and5, 0, !dbg !4002
  br i1 %tobool6, label %land.lhs.true, label %if.end58, !dbg !4003

land.lhs.true:                                    ; preds = %if.end
  %14 = load %struct.wmOperator*, %struct.wmOperator** %opm, align 8, !dbg !4004
  %next = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %14, i32 0, i32 0, !dbg !4005
  %15 = load %struct.wmOperator*, %struct.wmOperator** %next, align 8, !dbg !4005
  %tobool7 = icmp ne %struct.wmOperator* %15, null, !dbg !4004
  br i1 %tobool7, label %if.then8, label %if.end58, !dbg !4006

if.then8:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.MacroData** %md, metadata !4007, metadata !DIExpression()), !dbg !4009
  %16 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4010
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %16, i32 0, i32 5, !dbg !4011
  %17 = load i8*, i8** %customdata, align 8, !dbg !4011
  %18 = bitcast i8* %17 to %struct.MacroData*, !dbg !4010
  store %struct.MacroData* %18, %struct.MacroData** %md, align 8, !dbg !4009
  %19 = load %struct.MacroData*, %struct.MacroData** %md, align 8, !dbg !4012
  %retval9 = getelementptr inbounds %struct.MacroData, %struct.MacroData* %19, i32 0, i32 0, !dbg !4013
  store i32 4, i32* %retval9, align 4, !dbg !4014
  %20 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4015
  %21 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4016
  %22 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !4017
  %23 = load %struct.wmOperator*, %struct.wmOperator** %opm, align 8, !dbg !4018
  %next10 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %23, i32 0, i32 0, !dbg !4019
  %24 = load %struct.wmOperator*, %struct.wmOperator** %next10, align 8, !dbg !4019
  %call11 = call i32 @wm_macro_invoke_internal(%struct.bContext* %20, %struct.wmOperator* %21, %struct.wmEvent* %22, %struct.wmOperator* %24), !dbg !4020
  store i32 %call11, i32* %retval2, align 4, !dbg !4021
  %25 = load i32, i32* %retval2, align 4, !dbg !4022
  %and12 = and i32 %25, 1, !dbg !4024
  %tobool13 = icmp ne i32 %and12, 0, !dbg !4024
  br i1 %tobool13, label %land.lhs.true14, label %if.end57, !dbg !4025

land.lhs.true14:                                  ; preds = %if.then8
  %26 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4026
  %opm15 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %26, i32 0, i32 10, !dbg !4027
  %27 = load %struct.wmOperator*, %struct.wmOperator** %opm15, align 8, !dbg !4027
  %28 = load %struct.wmOperator*, %struct.wmOperator** %opm, align 8, !dbg !4028
  %cmp16 = icmp ne %struct.wmOperator* %27, %28, !dbg !4029
  br i1 %cmp16, label %if.then17, label %if.end57, !dbg !4030

if.then17:                                        ; preds = %land.lhs.true14
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win, metadata !4031, metadata !DIExpression()), !dbg !4035
  %29 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4036
  %call18 = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %29), !dbg !4037
  store %struct.wmWindow* %call18, %struct.wmWindow** %win, align 8, !dbg !4035
  call void @llvm.dbg.declare(metadata %struct.wmEventHandler** %handler, metadata !4038, metadata !DIExpression()), !dbg !4075
  %30 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !4076
  %modalhandlers = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %30, i32 0, i32 29, !dbg !4077
  %31 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4078
  %32 = bitcast %struct.wmOperator* %31 to i8*, !dbg !4078
  %call19 = call i8* @BLI_findptr(%struct.ListBase* %modalhandlers, i8* %32, i32 48), !dbg !4079
  %33 = bitcast i8* %call19 to %struct.wmEventHandler*, !dbg !4079
  store %struct.wmEventHandler* %33, %struct.wmEventHandler** %handler, align 8, !dbg !4080
  %34 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !4081
  %tobool20 = icmp ne %struct.wmEventHandler* %34, null, !dbg !4081
  br i1 %tobool20, label %if.then21, label %if.end23, !dbg !4083

if.then21:                                        ; preds = %if.then17
  %35 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !4084
  %modalhandlers22 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %35, i32 0, i32 29, !dbg !4086
  %36 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !4087
  %37 = bitcast %struct.wmEventHandler* %36 to i8*, !dbg !4087
  call void @BLI_remlink(%struct.ListBase* %modalhandlers22, i8* %37), !dbg !4088
  %38 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !4089
  call void @wm_event_free_handler(%struct.wmEventHandler* %38), !dbg !4090
  br label %if.end23, !dbg !4091

if.end23:                                         ; preds = %if.then21, %if.then17
  %39 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4092
  %opm24 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %39, i32 0, i32 10, !dbg !4094
  %40 = load %struct.wmOperator*, %struct.wmOperator** %opm24, align 8, !dbg !4094
  %type25 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %40, i32 0, i32 4, !dbg !4095
  %41 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type25, align 8, !dbg !4095
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %41, i32 0, i32 19, !dbg !4096
  %42 = load i16, i16* %flag, align 8, !dbg !4096
  %conv = sext i16 %42 to i32, !dbg !4092
  %and26 = and i32 %conv, 4, !dbg !4097
  %tobool27 = icmp ne i32 %and26, 0, !dbg !4097
  br i1 %tobool27, label %if.then28, label %if.end56, !dbg !4098

if.then28:                                        ; preds = %if.end23
  call void @llvm.dbg.declare(metadata [4 x i32]* %bounds, metadata !4099, metadata !DIExpression()), !dbg !4102
  %43 = bitcast [4 x i32]* %bounds to i8*, !dbg !4102
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %43, i8* align 16 bitcast ([4 x i32]* @__const.wm_macro_modal.bounds to i8*), i64 16, i1 false), !dbg !4102
  call void @llvm.dbg.declare(metadata i32* %wrap, metadata !4103, metadata !DIExpression()), !dbg !4104
  %44 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 22), align 4, !dbg !4105
  %and29 = and i32 %44, 16777216, !dbg !4106
  %tobool30 = icmp ne i32 %and29, 0, !dbg !4106
  br i1 %tobool30, label %land.rhs, label %land.end, !dbg !4107

land.rhs:                                         ; preds = %if.then28
  %45 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4108
  %opm31 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %45, i32 0, i32 10, !dbg !4109
  %46 = load %struct.wmOperator*, %struct.wmOperator** %opm31, align 8, !dbg !4109
  %flag32 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %46, i32 0, i32 12, !dbg !4110
  %47 = load i16, i16* %flag32, align 8, !dbg !4110
  %conv33 = sext i16 %47 to i32, !dbg !4108
  %and34 = and i32 %conv33, 1, !dbg !4111
  %tobool35 = icmp ne i32 %and34, 0, !dbg !4111
  br i1 %tobool35, label %lor.end, label %lor.rhs, !dbg !4112

lor.rhs:                                          ; preds = %land.rhs
  %48 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4113
  %opm36 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %48, i32 0, i32 10, !dbg !4114
  %49 = load %struct.wmOperator*, %struct.wmOperator** %opm36, align 8, !dbg !4114
  %type37 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %49, i32 0, i32 4, !dbg !4115
  %50 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type37, align 8, !dbg !4115
  %flag38 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %50, i32 0, i32 19, !dbg !4116
  %51 = load i16, i16* %flag38, align 8, !dbg !4116
  %conv39 = sext i16 %51 to i32, !dbg !4113
  %and40 = and i32 %conv39, 16, !dbg !4117
  %tobool41 = icmp ne i32 %and40, 0, !dbg !4112
  br label %lor.end, !dbg !4112

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %52 = phi i1 [ true, %land.rhs ], [ %tobool41, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %if.then28
  %53 = phi i1 [ false, %if.then28 ], [ %52, %lor.end ], !dbg !4118
  %land.ext = zext i1 %53 to i32, !dbg !4107
  store i32 %land.ext, i32* %wrap, align 4, !dbg !4104
  %54 = load i32, i32* %wrap, align 4, !dbg !4119
  %tobool42 = icmp ne i32 %54, 0, !dbg !4119
  br i1 %tobool42, label %if.then43, label %if.end54, !dbg !4121

if.then43:                                        ; preds = %land.end
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !4122, metadata !DIExpression()), !dbg !4124
  %55 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4125
  %call44 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %55), !dbg !4126
  store %struct.ARegion* %call44, %struct.ARegion** %ar, align 8, !dbg !4124
  %56 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !4127
  %tobool45 = icmp ne %struct.ARegion* %56, null, !dbg !4127
  br i1 %tobool45, label %if.then46, label %if.end53, !dbg !4129

if.then46:                                        ; preds = %if.then43
  %57 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !4130
  %winrct = getelementptr inbounds %struct.ARegion, %struct.ARegion* %57, i32 0, i32 3, !dbg !4132
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %winrct, i32 0, i32 0, !dbg !4133
  %58 = load i32, i32* %xmin, align 8, !dbg !4133
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %bounds, i64 0, i64 0, !dbg !4134
  store i32 %58, i32* %arrayidx, align 16, !dbg !4135
  %59 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !4136
  %winrct47 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %59, i32 0, i32 3, !dbg !4137
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %winrct47, i32 0, i32 3, !dbg !4138
  %60 = load i32, i32* %ymax, align 4, !dbg !4138
  %arrayidx48 = getelementptr inbounds [4 x i32], [4 x i32]* %bounds, i64 0, i64 1, !dbg !4139
  store i32 %60, i32* %arrayidx48, align 4, !dbg !4140
  %61 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !4141
  %winrct49 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %61, i32 0, i32 3, !dbg !4142
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %winrct49, i32 0, i32 1, !dbg !4143
  %62 = load i32, i32* %xmax, align 4, !dbg !4143
  %arrayidx50 = getelementptr inbounds [4 x i32], [4 x i32]* %bounds, i64 0, i64 2, !dbg !4144
  store i32 %62, i32* %arrayidx50, align 8, !dbg !4145
  %63 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !4146
  %winrct51 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %63, i32 0, i32 3, !dbg !4147
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %winrct51, i32 0, i32 2, !dbg !4148
  %64 = load i32, i32* %ymin, align 8, !dbg !4148
  %arrayidx52 = getelementptr inbounds [4 x i32], [4 x i32]* %bounds, i64 0, i64 3, !dbg !4149
  store i32 %64, i32* %arrayidx52, align 4, !dbg !4150
  br label %if.end53, !dbg !4151

if.end53:                                         ; preds = %if.then46, %if.then43
  br label %if.end54, !dbg !4152

if.end54:                                         ; preds = %if.end53, %land.end
  %65 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !4153
  %66 = load i32, i32* %wrap, align 4, !dbg !4154
  %conv55 = trunc i32 %66 to i8, !dbg !4154
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %bounds, i64 0, i64 0, !dbg !4155
  call void @WM_cursor_grab_enable(%struct.wmWindow* %65, i8 zeroext %conv55, i8 zeroext 0, i32* %arraydecay), !dbg !4156
  br label %if.end56, !dbg !4157

if.end56:                                         ; preds = %if.end54, %if.end23
  br label %if.end57, !dbg !4158

if.end57:                                         ; preds = %if.end56, %land.lhs.true14, %if.then8
  br label %if.end58, !dbg !4159

if.end58:                                         ; preds = %if.end57, %land.lhs.true, %if.end
  br label %if.end59

if.end59:                                         ; preds = %if.end58, %if.then
  %67 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4160
  %68 = load i32, i32* %retval2, align 4, !dbg !4161
  %call60 = call i32 @wm_macro_end(%struct.wmOperator* %67, i32 %68), !dbg !4162
  ret i32 %call60, !dbg !4163
}

; Function Attrs: noinline nounwind uwtable
define internal void @wm_macro_cancel(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !4164 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4167, metadata !DIExpression()), !dbg !4168
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !4169, metadata !DIExpression()), !dbg !4170
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4171
  %opm = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 10, !dbg !4173
  %1 = load %struct.wmOperator*, %struct.wmOperator** %opm, align 8, !dbg !4173
  %tobool = icmp ne %struct.wmOperator* %1, null, !dbg !4171
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !4174

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4175
  %opm1 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 10, !dbg !4176
  %3 = load %struct.wmOperator*, %struct.wmOperator** %opm1, align 8, !dbg !4176
  %type = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 4, !dbg !4177
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type, align 8, !dbg !4177
  %cancel = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 7, !dbg !4178
  %5 = load void (%struct.bContext*, %struct.wmOperator*)*, void (%struct.bContext*, %struct.wmOperator*)** %cancel, align 8, !dbg !4178
  %tobool2 = icmp ne void (%struct.bContext*, %struct.wmOperator*)* %5, null, !dbg !4175
  br i1 %tobool2, label %if.then, label %if.end, !dbg !4179

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4180
  %opm3 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 10, !dbg !4182
  %7 = load %struct.wmOperator*, %struct.wmOperator** %opm3, align 8, !dbg !4182
  %type4 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %7, i32 0, i32 4, !dbg !4183
  %8 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type4, align 8, !dbg !4183
  %cancel5 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %8, i32 0, i32 7, !dbg !4184
  %9 = load void (%struct.bContext*, %struct.wmOperator*)*, void (%struct.bContext*, %struct.wmOperator*)** %cancel5, align 8, !dbg !4184
  %10 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4185
  %11 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4186
  %opm6 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %11, i32 0, i32 10, !dbg !4187
  %12 = load %struct.wmOperator*, %struct.wmOperator** %opm6, align 8, !dbg !4187
  call void %9(%struct.bContext* %10, %struct.wmOperator* %12), !dbg !4180
  br label %if.end, !dbg !4188

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %13 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4189
  %call = call i32 @wm_macro_end(%struct.wmOperator* %13, i32 2), !dbg !4190
  ret void, !dbg !4191
}

declare dso_local i8* @RNA_struct_translation_context(%struct.StructRNA*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_operatortype_append_macro_ptr(void (%struct.wmOperatorType*, i8*)* %opfunc, i8* %userdata) #0 !dbg !4192 {
entry:
  %opfunc.addr = alloca void (%struct.wmOperatorType*, i8*)*, align 8
  %userdata.addr = alloca i8*, align 8
  %ot = alloca %struct.wmOperatorType*, align 8
  store void (%struct.wmOperatorType*, i8*)* %opfunc, void (%struct.wmOperatorType*, i8*)** %opfunc.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.wmOperatorType*, i8*)** %opfunc.addr, metadata !4193, metadata !DIExpression()), !dbg !4194
  store i8* %userdata, i8** %userdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userdata.addr, metadata !4195, metadata !DIExpression()), !dbg !4196
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot, metadata !4197, metadata !DIExpression()), !dbg !4198
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4199
  %call = call i8* %0(i64 192, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.1, i64 0, i64 0)), !dbg !4199
  %1 = bitcast i8* %call to %struct.wmOperatorType*, !dbg !4199
  store %struct.wmOperatorType* %1, %struct.wmOperatorType** %ot, align 8, !dbg !4200
  %call1 = call %struct.StructRNA* @RNA_def_struct_ptr(%struct.BlenderRNA* @BLENDER_RNA, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), %struct.StructRNA* @RNA_OperatorProperties), !dbg !4201
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !4202
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 11, !dbg !4203
  store %struct.StructRNA* %call1, %struct.StructRNA** %srna, align 8, !dbg !4204
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !4205
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 19, !dbg !4206
  store i16 8, i16* %flag, align 8, !dbg !4207
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !4208
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !4209
  store i32 (%struct.bContext*, %struct.wmOperator*)* @wm_macro_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !4210
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !4211
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 6, !dbg !4212
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @wm_macro_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !4213
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !4214
  %modal = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 8, !dbg !4215
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @wm_macro_modal, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %modal, align 8, !dbg !4216
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !4217
  %cancel = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 7, !dbg !4218
  store void (%struct.bContext*, %struct.wmOperator*)* @wm_macro_cancel, void (%struct.bContext*, %struct.wmOperator*)** %cancel, align 8, !dbg !4219
  %8 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !4220
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %8, i32 0, i32 9, !dbg !4221
  store i32 (%struct.bContext*)* null, i32 (%struct.bContext*)** %poll, align 8, !dbg !4222
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !4223
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 3, !dbg !4225
  %10 = load i8*, i8** %description, align 8, !dbg !4225
  %tobool = icmp ne i8* %10, null, !dbg !4223
  br i1 %tobool, label %if.end, label %if.then, !dbg !4226

if.then:                                          ; preds = %entry
  %11 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !4227
  %description2 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %11, i32 0, i32 3, !dbg !4228
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.6, i64 0, i64 0), i8** %description2, align 8, !dbg !4229
  br label %if.end, !dbg !4227

if.end:                                           ; preds = %if.then, %entry
  %12 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !4230
  %srna3 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %12, i32 0, i32 11, !dbg !4231
  %13 = load %struct.StructRNA*, %struct.StructRNA** %srna3, align 8, !dbg !4231
  call void @RNA_def_struct_translation_context(%struct.StructRNA* %13, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0)), !dbg !4232
  %14 = load void (%struct.wmOperatorType*, i8*)*, void (%struct.wmOperatorType*, i8*)** %opfunc.addr, align 8, !dbg !4233
  %15 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !4234
  %16 = load i8*, i8** %userdata.addr, align 8, !dbg !4235
  call void %14(%struct.wmOperatorType* %15, i8* %16), !dbg !4233
  %17 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !4236
  %srna4 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %17, i32 0, i32 11, !dbg !4237
  %18 = load %struct.StructRNA*, %struct.StructRNA** %srna4, align 8, !dbg !4237
  %19 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !4238
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %19, i32 0, i32 0, !dbg !4239
  %20 = load i8*, i8** %name, align 8, !dbg !4239
  %21 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !4240
  %description5 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %21, i32 0, i32 3, !dbg !4241
  %22 = load i8*, i8** %description5, align 8, !dbg !4241
  call void @RNA_def_struct_ui_text(%struct.StructRNA* %18, i8* %20, i8* %22), !dbg !4242
  %23 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !4243
  %srna6 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %23, i32 0, i32 11, !dbg !4244
  %24 = load %struct.StructRNA*, %struct.StructRNA** %srna6, align 8, !dbg !4244
  %25 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !4245
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %25, i32 0, i32 1, !dbg !4246
  %26 = load i8*, i8** %idname, align 8, !dbg !4246
  call void @RNA_def_struct_identifier(%struct.StructRNA* %24, i8* %26), !dbg !4247
  %27 = load %struct.GHash*, %struct.GHash** @global_ops_hash, align 8, !dbg !4248
  %28 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !4249
  %idname7 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %28, i32 0, i32 1, !dbg !4250
  %29 = load i8*, i8** %idname7, align 8, !dbg !4250
  %30 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !4251
  %31 = bitcast %struct.wmOperatorType* %30 to i8*, !dbg !4251
  call void @BLI_ghash_insert(%struct.GHash* %27, i8* %29, i8* %31), !dbg !4252
  ret void, !dbg !4253
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.wmOperatorTypeMacro* @WM_operatortype_macro_define(%struct.wmOperatorType* %ot, i8* %idname) #0 !dbg !4254 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %idname.addr = alloca i8*, align 8
  %otmacro = alloca %struct.wmOperatorTypeMacro*, align 8
  %otsub = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4265, metadata !DIExpression()), !dbg !4266
  store i8* %idname, i8** %idname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %idname.addr, metadata !4267, metadata !DIExpression()), !dbg !4268
  call void @llvm.dbg.declare(metadata %struct.wmOperatorTypeMacro** %otmacro, metadata !4269, metadata !DIExpression()), !dbg !4272
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4273
  %call = call i8* %0(i64 96, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8, i64 0, i64 0)), !dbg !4273
  %1 = bitcast i8* %call to %struct.wmOperatorTypeMacro*, !dbg !4273
  store %struct.wmOperatorTypeMacro* %1, %struct.wmOperatorTypeMacro** %otmacro, align 8, !dbg !4272
  %2 = load %struct.wmOperatorTypeMacro*, %struct.wmOperatorTypeMacro** %otmacro, align 8, !dbg !4274
  %idname1 = getelementptr inbounds %struct.wmOperatorTypeMacro, %struct.wmOperatorTypeMacro* %2, i32 0, i32 2, !dbg !4275
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname1, i64 0, i64 0, !dbg !4274
  %3 = load i8*, i8** %idname.addr, align 8, !dbg !4276
  %call2 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %3, i64 64), !dbg !4277
  %4 = load %struct.wmOperatorTypeMacro*, %struct.wmOperatorTypeMacro** %otmacro, align 8, !dbg !4278
  %ptr = getelementptr inbounds %struct.wmOperatorTypeMacro, %struct.wmOperatorTypeMacro* %4, i32 0, i32 4, !dbg !4279
  %5 = load %struct.wmOperatorTypeMacro*, %struct.wmOperatorTypeMacro** %otmacro, align 8, !dbg !4280
  %properties = getelementptr inbounds %struct.wmOperatorTypeMacro, %struct.wmOperatorTypeMacro* %5, i32 0, i32 3, !dbg !4281
  %6 = load i8*, i8** %idname.addr, align 8, !dbg !4282
  call void @WM_operator_properties_alloc(%struct.PointerRNA** %ptr, %struct.IDProperty** %properties, i8* %6), !dbg !4283
  %7 = load %struct.wmOperatorTypeMacro*, %struct.wmOperatorTypeMacro** %otmacro, align 8, !dbg !4284
  %ptr3 = getelementptr inbounds %struct.wmOperatorTypeMacro, %struct.wmOperatorTypeMacro* %7, i32 0, i32 4, !dbg !4285
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr3, align 8, !dbg !4285
  call void @WM_operator_properties_sanitize(%struct.PointerRNA* %8, i8 zeroext 1), !dbg !4286
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4287
  %macro = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 14, !dbg !4288
  %10 = load %struct.wmOperatorTypeMacro*, %struct.wmOperatorTypeMacro** %otmacro, align 8, !dbg !4289
  %11 = bitcast %struct.wmOperatorTypeMacro* %10 to i8*, !dbg !4289
  call void @BLI_addtail(%struct.ListBase* %macro, i8* %11), !dbg !4290
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %otsub, metadata !4291, metadata !DIExpression()), !dbg !4293
  %12 = load i8*, i8** %idname.addr, align 8, !dbg !4294
  %call4 = call %struct.wmOperatorType* @WM_operatortype_find(i8* %12, i8 zeroext 0), !dbg !4295
  store %struct.wmOperatorType* %call4, %struct.wmOperatorType** %otsub, align 8, !dbg !4293
  %13 = load %struct.wmOperatorType*, %struct.wmOperatorType** %otsub, align 8, !dbg !4296
  %tobool = icmp ne %struct.wmOperatorType* %13, null, !dbg !4296
  br i1 %tobool, label %if.then, label %if.end, !dbg !4298

if.then:                                          ; preds = %entry
  %14 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4299
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %14, i32 0, i32 11, !dbg !4301
  %15 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !4301
  %16 = bitcast %struct.StructRNA* %15 to i8*, !dbg !4299
  %17 = load %struct.wmOperatorType*, %struct.wmOperatorType** %otsub, align 8, !dbg !4302
  %idname5 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %17, i32 0, i32 1, !dbg !4303
  %18 = load i8*, i8** %idname5, align 8, !dbg !4303
  %19 = load %struct.wmOperatorType*, %struct.wmOperatorType** %otsub, align 8, !dbg !4304
  %srna6 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %19, i32 0, i32 11, !dbg !4305
  %20 = load %struct.StructRNA*, %struct.StructRNA** %srna6, align 8, !dbg !4305
  %21 = load %struct.wmOperatorType*, %struct.wmOperatorType** %otsub, align 8, !dbg !4306
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %21, i32 0, i32 0, !dbg !4307
  %22 = load i8*, i8** %name, align 8, !dbg !4307
  %23 = load %struct.wmOperatorType*, %struct.wmOperatorType** %otsub, align 8, !dbg !4308
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %23, i32 0, i32 3, !dbg !4309
  %24 = load i8*, i8** %description, align 8, !dbg !4309
  %call7 = call %struct.PropertyRNA* @RNA_def_pointer_runtime(i8* %16, i8* %18, %struct.StructRNA* %20, i8* %22, i8* %24), !dbg !4310
  br label %if.end, !dbg !4311

if.end:                                           ; preds = %if.then, %entry
  %25 = load %struct.wmOperatorTypeMacro*, %struct.wmOperatorTypeMacro** %otmacro, align 8, !dbg !4312
  ret %struct.wmOperatorTypeMacro* %25, !dbg !4313
}

declare dso_local i8* @BLI_strncpy(i8*, i8*, i64) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_operator_properties_alloc(%struct.PointerRNA** %ptr, %struct.IDProperty** %properties, i8* %opstring) #0 !dbg !4314 {
entry:
  %ptr.addr = alloca %struct.PointerRNA**, align 8
  %properties.addr = alloca %struct.IDProperty**, align 8
  %opstring.addr = alloca i8*, align 8
  %val = alloca %union.IDPropertyTemplate, align 8
  store %struct.PointerRNA** %ptr, %struct.PointerRNA*** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA*** %ptr.addr, metadata !4321, metadata !DIExpression()), !dbg !4322
  store %struct.IDProperty** %properties, %struct.IDProperty*** %properties.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.IDProperty*** %properties.addr, metadata !4323, metadata !DIExpression()), !dbg !4324
  store i8* %opstring, i8** %opstring.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opstring.addr, metadata !4325, metadata !DIExpression()), !dbg !4326
  %0 = load %struct.IDProperty**, %struct.IDProperty*** %properties.addr, align 8, !dbg !4327
  %1 = load %struct.IDProperty*, %struct.IDProperty** %0, align 8, !dbg !4329
  %cmp = icmp eq %struct.IDProperty* %1, null, !dbg !4330
  br i1 %cmp, label %if.then, label %if.end, !dbg !4331

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %union.IDPropertyTemplate* %val, metadata !4332, metadata !DIExpression()), !dbg !4358
  %2 = bitcast %union.IDPropertyTemplate* %val to i8*, !dbg !4358
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %2, i8* align 8 bitcast ({ i32, [12 x i8] }* @__const.WM_operator_properties_alloc.val to i8*), i64 16, i1 false), !dbg !4358
  %call = call %struct.IDProperty* @IDP_New(i32 6, %union.IDPropertyTemplate* %val, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15, i64 0, i64 0)), !dbg !4359
  %3 = load %struct.IDProperty**, %struct.IDProperty*** %properties.addr, align 8, !dbg !4360
  store %struct.IDProperty* %call, %struct.IDProperty** %3, align 8, !dbg !4361
  br label %if.end, !dbg !4362

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.PointerRNA**, %struct.PointerRNA*** %ptr.addr, align 8, !dbg !4363
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %4, align 8, !dbg !4365
  %cmp1 = icmp eq %struct.PointerRNA* %5, null, !dbg !4366
  br i1 %cmp1, label %if.then2, label %if.end4, !dbg !4367

if.then2:                                         ; preds = %if.end
  %6 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4368
  %call3 = call i8* %6(i64 24, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.16, i64 0, i64 0)), !dbg !4368
  %7 = bitcast i8* %call3 to %struct.PointerRNA*, !dbg !4368
  %8 = load %struct.PointerRNA**, %struct.PointerRNA*** %ptr.addr, align 8, !dbg !4370
  store %struct.PointerRNA* %7, %struct.PointerRNA** %8, align 8, !dbg !4371
  %9 = load %struct.PointerRNA**, %struct.PointerRNA*** %ptr.addr, align 8, !dbg !4372
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %9, align 8, !dbg !4373
  %11 = load i8*, i8** %opstring.addr, align 8, !dbg !4374
  call void @WM_operator_properties_create(%struct.PointerRNA* %10, i8* %11), !dbg !4375
  br label %if.end4, !dbg !4376

if.end4:                                          ; preds = %if.then2, %if.end
  %12 = load %struct.IDProperty**, %struct.IDProperty*** %properties.addr, align 8, !dbg !4377
  %13 = load %struct.IDProperty*, %struct.IDProperty** %12, align 8, !dbg !4378
  %14 = bitcast %struct.IDProperty* %13 to i8*, !dbg !4378
  %15 = load %struct.PointerRNA**, %struct.PointerRNA*** %ptr.addr, align 8, !dbg !4379
  %16 = load %struct.PointerRNA*, %struct.PointerRNA** %15, align 8, !dbg !4380
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %16, i32 0, i32 2, !dbg !4381
  store i8* %14, i8** %data, align 8, !dbg !4382
  ret void, !dbg !4383
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_operator_properties_sanitize(%struct.PointerRNA* %ptr, i8 zeroext %no_context) #0 !dbg !4384 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %no_context.addr = alloca i8, align 1
  %rna_macro_iter = alloca %struct.CollectionPropertyIterator, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  %ptype = alloca %struct.StructRNA*, align 8
  %opptr = alloca %struct.PointerRNA, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4388, metadata !DIExpression()), !dbg !4389
  store i8 %no_context, i8* %no_context.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %no_context.addr, metadata !4390, metadata !DIExpression()), !dbg !4391
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator* %rna_macro_iter, metadata !4392, metadata !DIExpression()), !dbg !4435
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4436
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4436
  %type = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %1, i32 0, i32 1, !dbg !4436
  %2 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !4436
  %call = call %struct.PropertyRNA* @RNA_struct_iterator_property(%struct.StructRNA* %2), !dbg !4436
  call void @RNA_property_collection_begin(%struct.PointerRNA* %0, %struct.PropertyRNA* %call, %struct.CollectionPropertyIterator* %rna_macro_iter), !dbg !4436
  br label %for.cond, !dbg !4436

for.cond:                                         ; preds = %for.inc, %entry
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %rna_macro_iter, i32 0, i32 7, !dbg !4438
  %3 = load i32, i32* %valid, align 8, !dbg !4438
  %tobool = icmp ne i32 %3, 0, !dbg !4436
  br i1 %tobool, label %for.body, label %for.end, !dbg !4436

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !4440, metadata !DIExpression()), !dbg !4442
  %ptr1 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %rna_macro_iter, i32 0, i32 6, !dbg !4442
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr1, i32 0, i32 2, !dbg !4442
  %4 = load i8*, i8** %data, align 8, !dbg !4442
  %5 = bitcast i8* %4 to %struct.PropertyRNA*, !dbg !4442
  store %struct.PropertyRNA* %5, %struct.PropertyRNA** %prop, align 8, !dbg !4442
  %6 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !4443
  %call2 = call i32 @RNA_property_type(%struct.PropertyRNA* %6), !dbg !4445
  switch i32 %call2, label %sw.default [
    i32 4, label %sw.bb
    i32 5, label %sw.bb4
  ], !dbg !4446

sw.bb:                                            ; preds = %for.body
  %7 = load i8, i8* %no_context.addr, align 1, !dbg !4447
  %tobool3 = icmp ne i8 %7, 0, !dbg !4447
  br i1 %tobool3, label %if.then, label %if.else, !dbg !4450

if.then:                                          ; preds = %sw.bb
  %8 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !4451
  call void @RNA_def_property_flag(%struct.PropertyRNA* %8, i32 16777216), !dbg !4452
  br label %if.end, !dbg !4452

if.else:                                          ; preds = %sw.bb
  %9 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !4453
  call void @RNA_def_property_clear_flag(%struct.PropertyRNA* %9, i32 16777216), !dbg !4454
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %sw.epilog, !dbg !4455

sw.bb4:                                           ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %ptype, metadata !4456, metadata !DIExpression()), !dbg !4458
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4459
  %11 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !4460
  %call5 = call %struct.StructRNA* @RNA_property_pointer_type(%struct.PointerRNA* %10, %struct.PropertyRNA* %11), !dbg !4461
  store %struct.StructRNA* %call5, %struct.StructRNA** %ptype, align 8, !dbg !4458
  %12 = load %struct.StructRNA*, %struct.StructRNA** %ptype, align 8, !dbg !4462
  %call6 = call zeroext i8 @RNA_struct_is_a(%struct.StructRNA* %12, %struct.StructRNA* @RNA_OperatorProperties), !dbg !4464
  %tobool7 = icmp ne i8 %call6, 0, !dbg !4464
  br i1 %tobool7, label %if.then8, label %if.end9, !dbg !4465

if.then8:                                         ; preds = %sw.bb4
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %opptr, metadata !4466, metadata !DIExpression()), !dbg !4468
  %13 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4469
  %14 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !4470
  call void @RNA_property_pointer_get(%struct.PointerRNA* sret %opptr, %struct.PointerRNA* %13, %struct.PropertyRNA* %14), !dbg !4471
  %15 = load i8, i8* %no_context.addr, align 1, !dbg !4472
  call void @WM_operator_properties_sanitize(%struct.PointerRNA* %opptr, i8 zeroext %15), !dbg !4473
  br label %if.end9, !dbg !4474

if.end9:                                          ; preds = %if.then8, %sw.bb4
  br label %sw.epilog, !dbg !4475

sw.default:                                       ; preds = %for.body
  br label %sw.epilog, !dbg !4476

sw.epilog:                                        ; preds = %sw.default, %if.end9, %if.end
  br label %for.inc, !dbg !4477

for.inc:                                          ; preds = %sw.epilog
  call void @RNA_property_collection_next(%struct.CollectionPropertyIterator* %rna_macro_iter), !dbg !4438
  br label %for.cond, !dbg !4438, !llvm.loop !4478

for.end:                                          ; preds = %for.cond
  call void @RNA_property_collection_end(%struct.CollectionPropertyIterator* %rna_macro_iter), !dbg !4480
  ret void, !dbg !4481
}

declare dso_local void @BLI_addtail(%struct.ListBase*, i8*) #2

declare dso_local %struct.PropertyRNA* @RNA_def_pointer_runtime(i8*, i8*, %struct.StructRNA*, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_operatortype_remove_ptr(%struct.wmOperatorType* %ot) #0 !dbg !4482 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4483, metadata !DIExpression()), !dbg !4484
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4485
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 11, !dbg !4486
  %1 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !4486
  call void @RNA_struct_free(%struct.BlenderRNA* @BLENDER_RNA, %struct.StructRNA* %1), !dbg !4487
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4488
  %last_properties = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 12, !dbg !4490
  %3 = load %struct.IDProperty*, %struct.IDProperty** %last_properties, align 8, !dbg !4490
  %tobool = icmp ne %struct.IDProperty* %3, null, !dbg !4488
  br i1 %tobool, label %if.then, label %if.end, !dbg !4491

if.then:                                          ; preds = %entry
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4492
  %last_properties1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 12, !dbg !4494
  %5 = load %struct.IDProperty*, %struct.IDProperty** %last_properties1, align 8, !dbg !4494
  call void @IDP_FreeProperty(%struct.IDProperty* %5), !dbg !4495
  %6 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4496
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4497
  %last_properties2 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 12, !dbg !4498
  %8 = load %struct.IDProperty*, %struct.IDProperty** %last_properties2, align 8, !dbg !4498
  %9 = bitcast %struct.IDProperty* %8 to i8*, !dbg !4497
  call void %6(i8* %9), !dbg !4496
  br label %if.end, !dbg !4499

if.end:                                           ; preds = %if.then, %entry
  %10 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4500
  %macro = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %10, i32 0, i32 14, !dbg !4502
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %macro, i32 0, i32 0, !dbg !4503
  %11 = load i8*, i8** %first, align 8, !dbg !4503
  %tobool3 = icmp ne i8* %11, null, !dbg !4500
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !4504

if.then4:                                         ; preds = %if.end
  %12 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4505
  call void @wm_operatortype_free_macro(%struct.wmOperatorType* %12), !dbg !4506
  br label %if.end5, !dbg !4506

if.end5:                                          ; preds = %if.then4, %if.end
  %13 = load %struct.GHash*, %struct.GHash** @global_ops_hash, align 8, !dbg !4507
  %14 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4508
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %14, i32 0, i32 1, !dbg !4509
  %15 = load i8*, i8** %idname, align 8, !dbg !4509
  %call = call zeroext i8 @BLI_ghash_remove(%struct.GHash* %13, i8* %15, void (i8*)* null, void (i8*)* null), !dbg !4510
  call void @WM_keyconfig_update_operatortype(), !dbg !4511
  %16 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4512
  %17 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4513
  %18 = bitcast %struct.wmOperatorType* %17 to i8*, !dbg !4513
  call void %16(i8* %18), !dbg !4512
  ret void, !dbg !4514
}

declare dso_local void @RNA_struct_free(%struct.BlenderRNA*, %struct.StructRNA*) #2

declare dso_local void @IDP_FreeProperty(%struct.IDProperty*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @wm_operatortype_free_macro(%struct.wmOperatorType* %ot) #0 !dbg !4515 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %otmacro = alloca %struct.wmOperatorTypeMacro*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4516, metadata !DIExpression()), !dbg !4517
  call void @llvm.dbg.declare(metadata %struct.wmOperatorTypeMacro** %otmacro, metadata !4518, metadata !DIExpression()), !dbg !4519
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4520
  %macro = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 14, !dbg !4522
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %macro, i32 0, i32 0, !dbg !4523
  %1 = load i8*, i8** %first, align 8, !dbg !4523
  %2 = bitcast i8* %1 to %struct.wmOperatorTypeMacro*, !dbg !4520
  store %struct.wmOperatorTypeMacro* %2, %struct.wmOperatorTypeMacro** %otmacro, align 8, !dbg !4524
  br label %for.cond, !dbg !4525

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.wmOperatorTypeMacro*, %struct.wmOperatorTypeMacro** %otmacro, align 8, !dbg !4526
  %tobool = icmp ne %struct.wmOperatorTypeMacro* %3, null, !dbg !4528
  br i1 %tobool, label %for.body, label %for.end, !dbg !4528

for.body:                                         ; preds = %for.cond
  %4 = load %struct.wmOperatorTypeMacro*, %struct.wmOperatorTypeMacro** %otmacro, align 8, !dbg !4529
  %ptr = getelementptr inbounds %struct.wmOperatorTypeMacro, %struct.wmOperatorTypeMacro* %4, i32 0, i32 4, !dbg !4532
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !4532
  %tobool1 = icmp ne %struct.PointerRNA* %5, null, !dbg !4529
  br i1 %tobool1, label %if.then, label %if.end, !dbg !4533

if.then:                                          ; preds = %for.body
  %6 = load %struct.wmOperatorTypeMacro*, %struct.wmOperatorTypeMacro** %otmacro, align 8, !dbg !4534
  %ptr2 = getelementptr inbounds %struct.wmOperatorTypeMacro, %struct.wmOperatorTypeMacro* %6, i32 0, i32 4, !dbg !4536
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr2, align 8, !dbg !4536
  call void @WM_operator_properties_free(%struct.PointerRNA* %7), !dbg !4537
  %8 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4538
  %9 = load %struct.wmOperatorTypeMacro*, %struct.wmOperatorTypeMacro** %otmacro, align 8, !dbg !4539
  %ptr3 = getelementptr inbounds %struct.wmOperatorTypeMacro, %struct.wmOperatorTypeMacro* %9, i32 0, i32 4, !dbg !4540
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr3, align 8, !dbg !4540
  %11 = bitcast %struct.PointerRNA* %10 to i8*, !dbg !4539
  call void %8(i8* %11), !dbg !4538
  br label %if.end, !dbg !4541

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !4542

for.inc:                                          ; preds = %if.end
  %12 = load %struct.wmOperatorTypeMacro*, %struct.wmOperatorTypeMacro** %otmacro, align 8, !dbg !4543
  %next = getelementptr inbounds %struct.wmOperatorTypeMacro, %struct.wmOperatorTypeMacro* %12, i32 0, i32 0, !dbg !4544
  %13 = load %struct.wmOperatorTypeMacro*, %struct.wmOperatorTypeMacro** %next, align 8, !dbg !4544
  store %struct.wmOperatorTypeMacro* %13, %struct.wmOperatorTypeMacro** %otmacro, align 8, !dbg !4545
  br label %for.cond, !dbg !4546, !llvm.loop !4547

for.end:                                          ; preds = %for.cond
  %14 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4549
  %macro4 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %14, i32 0, i32 14, !dbg !4550
  call void @BLI_freelistN(%struct.ListBase* %macro4), !dbg !4551
  ret void, !dbg !4552
}

declare dso_local zeroext i8 @BLI_ghash_remove(%struct.GHash*, i8*, void (i8*)*, void (i8*)*) #2

declare dso_local void @WM_keyconfig_update_operatortype() #2

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @WM_operatortype_remove(i8* %idname) #0 !dbg !4553 {
entry:
  %retval = alloca i8, align 1
  %idname.addr = alloca i8*, align 8
  %ot = alloca %struct.wmOperatorType*, align 8
  store i8* %idname, i8** %idname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %idname.addr, metadata !4556, metadata !DIExpression()), !dbg !4557
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot, metadata !4558, metadata !DIExpression()), !dbg !4559
  %0 = load i8*, i8** %idname.addr, align 8, !dbg !4560
  %call = call %struct.wmOperatorType* @WM_operatortype_find(i8* %0, i8 zeroext 0), !dbg !4561
  store %struct.wmOperatorType* %call, %struct.wmOperatorType** %ot, align 8, !dbg !4559
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !4562
  %cmp = icmp eq %struct.wmOperatorType* %1, null, !dbg !4564
  br i1 %cmp, label %if.then, label %if.end, !dbg !4565

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !4566
  br label %return, !dbg !4566

if.end:                                           ; preds = %entry
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !4567
  call void @WM_operatortype_remove_ptr(%struct.wmOperatorType* %2), !dbg !4568
  store i8 1, i8* %retval, align 1, !dbg !4569
  br label %return, !dbg !4569

return:                                           ; preds = %if.end, %if.then
  %3 = load i8, i8* %retval, align 1, !dbg !4570
  ret i8 %3, !dbg !4570
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_operatortype_last_properties_clear_all() #0 !dbg !4571 {
entry:
  %iter = alloca %struct.GHashIterator, align 8
  %ot = alloca %struct.wmOperatorType*, align 8
  call void @llvm.dbg.declare(metadata %struct.GHashIterator* %iter, metadata !4572, metadata !DIExpression()), !dbg !4573
  call void @WM_operatortype_iter(%struct.GHashIterator* %iter), !dbg !4574
  br label %for.cond, !dbg !4574

for.cond:                                         ; preds = %for.inc, %entry
  %call = call zeroext i8 @BLI_ghashIterator_done(%struct.GHashIterator* %iter), !dbg !4576
  %tobool = icmp ne i8 %call, 0, !dbg !4578
  %lnot = xor i1 %tobool, true, !dbg !4578
  br i1 %lnot, label %for.body, label %for.end, !dbg !4579

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot, metadata !4580, metadata !DIExpression()), !dbg !4582
  %call1 = call i8* @BLI_ghashIterator_getValue(%struct.GHashIterator* %iter), !dbg !4583
  %0 = bitcast i8* %call1 to %struct.wmOperatorType*, !dbg !4583
  store %struct.wmOperatorType* %0, %struct.wmOperatorType** %ot, align 8, !dbg !4582
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !4584
  %last_properties = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 12, !dbg !4586
  %2 = load %struct.IDProperty*, %struct.IDProperty** %last_properties, align 8, !dbg !4586
  %tobool2 = icmp ne %struct.IDProperty* %2, null, !dbg !4584
  br i1 %tobool2, label %if.then, label %if.end, !dbg !4587

if.then:                                          ; preds = %for.body
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !4588
  %last_properties3 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 12, !dbg !4590
  %4 = load %struct.IDProperty*, %struct.IDProperty** %last_properties3, align 8, !dbg !4590
  call void @IDP_FreeProperty(%struct.IDProperty* %4), !dbg !4591
  %5 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4592
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !4593
  %last_properties4 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 12, !dbg !4594
  %7 = load %struct.IDProperty*, %struct.IDProperty** %last_properties4, align 8, !dbg !4594
  %8 = bitcast %struct.IDProperty* %7 to i8*, !dbg !4593
  call void %5(i8* %8), !dbg !4592
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !4595
  %last_properties5 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 12, !dbg !4596
  store %struct.IDProperty* null, %struct.IDProperty** %last_properties5, align 8, !dbg !4597
  br label %if.end, !dbg !4598

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !4599

for.inc:                                          ; preds = %if.end
  call void @BLI_ghashIterator_step(%struct.GHashIterator* %iter), !dbg !4600
  br label %for.cond, !dbg !4601, !llvm.loop !4602

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4604
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BLI_ghashIterator_done(%struct.GHashIterator* %ghi) #0 !dbg !4605 {
entry:
  %ghi.addr = alloca %struct.GHashIterator*, align 8
  store %struct.GHashIterator* %ghi, %struct.GHashIterator** %ghi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GHashIterator** %ghi.addr, metadata !4608, metadata !DIExpression()), !dbg !4609
  %0 = load %struct.GHashIterator*, %struct.GHashIterator** %ghi.addr, align 8, !dbg !4610
  %curEntry = getelementptr inbounds %struct.GHashIterator, %struct.GHashIterator* %0, i32 0, i32 1, !dbg !4611
  %1 = load %struct.Entry*, %struct.Entry** %curEntry, align 8, !dbg !4611
  %tobool = icmp ne %struct.Entry* %1, null, !dbg !4612
  %lnot = xor i1 %tobool, true, !dbg !4612
  %lnot.ext = zext i1 %lnot to i32, !dbg !4612
  %conv = trunc i32 %lnot.ext to i8, !dbg !4612
  ret i8 %conv, !dbg !4613
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @BLI_ghashIterator_getValue(%struct.GHashIterator* %ghi) #0 !dbg !4614 {
entry:
  %ghi.addr = alloca %struct.GHashIterator*, align 8
  store %struct.GHashIterator* %ghi, %struct.GHashIterator** %ghi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GHashIterator** %ghi.addr, metadata !4617, metadata !DIExpression()), !dbg !4618
  %0 = load %struct.GHashIterator*, %struct.GHashIterator** %ghi.addr, align 8, !dbg !4619
  %curEntry = getelementptr inbounds %struct.GHashIterator, %struct.GHashIterator* %0, i32 0, i32 1, !dbg !4620
  %1 = load %struct.Entry*, %struct.Entry** %curEntry, align 8, !dbg !4620
  %2 = bitcast %struct.Entry* %1 to %struct._gh_Entry*, !dbg !4621
  %val = getelementptr inbounds %struct._gh_Entry, %struct._gh_Entry* %2, i32 0, i32 2, !dbg !4621
  %3 = load i8*, i8** %val, align 8, !dbg !4621
  ret i8* %3, !dbg !4622
}

declare dso_local void @BLI_ghashIterator_step(%struct.GHashIterator*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_operator_py_idname(i8* %to, i8* %from) #0 !dbg !4623 {
entry:
  %to.addr = alloca i8*, align 8
  %from.addr = alloca i8*, align 8
  %sep = alloca i8*, align 8
  %ofs = alloca i32, align 4
  store i8* %to, i8** %to.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %to.addr, metadata !4624, metadata !DIExpression()), !dbg !4625
  store i8* %from, i8** %from.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %from.addr, metadata !4626, metadata !DIExpression()), !dbg !4627
  call void @llvm.dbg.declare(metadata i8** %sep, metadata !4628, metadata !DIExpression()), !dbg !4629
  %0 = load i8*, i8** %from.addr, align 8, !dbg !4630
  %call = call i8* @strstr(i8* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0)) #6, !dbg !4631
  store i8* %call, i8** %sep, align 8, !dbg !4629
  %1 = load i8*, i8** %sep, align 8, !dbg !4632
  %tobool = icmp ne i8* %1, null, !dbg !4632
  br i1 %tobool, label %if.then, label %if.else, !dbg !4634

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %ofs, metadata !4635, metadata !DIExpression()), !dbg !4637
  %2 = load i8*, i8** %sep, align 8, !dbg !4638
  %3 = load i8*, i8** %from.addr, align 8, !dbg !4639
  %sub.ptr.lhs.cast = ptrtoint i8* %2 to i64, !dbg !4640
  %sub.ptr.rhs.cast = ptrtoint i8* %3 to i64, !dbg !4640
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4640
  %conv = trunc i64 %sub.ptr.sub to i32, !dbg !4641
  store i32 %conv, i32* %ofs, align 4, !dbg !4637
  %4 = load i8*, i8** %to.addr, align 8, !dbg !4642
  %5 = load i8*, i8** %from.addr, align 8, !dbg !4643
  %6 = load i32, i32* %ofs, align 4, !dbg !4644
  %conv1 = sext i32 %6 to i64, !dbg !4644
  %mul = mul i64 1, %conv1, !dbg !4645
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %4, i8* align 1 %5, i64 %mul, i1 false), !dbg !4646
  %7 = load i8*, i8** %to.addr, align 8, !dbg !4647
  %8 = load i32, i32* %ofs, align 4, !dbg !4648
  %conv2 = sext i32 %8 to i64, !dbg !4648
  call void @BLI_ascii_strtolower(i8* %7, i64 %conv2), !dbg !4649
  %9 = load i8*, i8** %to.addr, align 8, !dbg !4650
  %10 = load i32, i32* %ofs, align 4, !dbg !4651
  %idxprom = sext i32 %10 to i64, !dbg !4650
  %arrayidx = getelementptr inbounds i8, i8* %9, i64 %idxprom, !dbg !4650
  store i8 46, i8* %arrayidx, align 1, !dbg !4652
  %11 = load i8*, i8** %to.addr, align 8, !dbg !4653
  %12 = load i32, i32* %ofs, align 4, !dbg !4654
  %add = add nsw i32 %12, 1, !dbg !4655
  %idx.ext = sext i32 %add to i64, !dbg !4656
  %add.ptr = getelementptr inbounds i8, i8* %11, i64 %idx.ext, !dbg !4656
  %13 = load i8*, i8** %sep, align 8, !dbg !4657
  %add.ptr3 = getelementptr inbounds i8, i8* %13, i64 4, !dbg !4658
  %14 = load i32, i32* %ofs, align 4, !dbg !4659
  %add4 = add nsw i32 %14, 1, !dbg !4660
  %sub = sub nsw i32 64, %add4, !dbg !4661
  %conv5 = sext i32 %sub to i64, !dbg !4662
  %call6 = call i8* @BLI_strncpy(i8* %add.ptr, i8* %add.ptr3, i64 %conv5), !dbg !4663
  br label %if.end, !dbg !4664

if.else:                                          ; preds = %entry
  %15 = load i8*, i8** %to.addr, align 8, !dbg !4665
  %16 = load i8*, i8** %from.addr, align 8, !dbg !4667
  %call7 = call i8* @BLI_strncpy(i8* %15, i8* %16, i64 64), !dbg !4668
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !4669
}

; Function Attrs: nounwind readonly
declare dso_local i8* @strstr(i8*, i8*) #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #4

declare dso_local void @BLI_ascii_strtolower(i8*, i64) #2

; Function Attrs: nounwind readonly
declare dso_local i8* @strchr(i8*, i32) #3

declare dso_local void @BLI_ascii_strtoupper(i8*, i64) #2

; Function Attrs: nounwind
declare dso_local i8* @strcpy(i8*, i8*) #5

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @WM_operator_pystring_ex(%struct.bContext* %C, %struct.wmOperator* %op, i8 zeroext %all_args, i8 zeroext %macro_args, %struct.wmOperatorType* %ot, %struct.PointerRNA* %opptr) #0 !dbg !4670 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %all_args.addr = alloca i8, align 1
  %macro_args.addr = alloca i8, align 1
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %opptr.addr = alloca %struct.PointerRNA*, align 8
  %idname_py = alloca [64 x i8], align 16
  %dynstr = alloca %struct.DynStr*, align 8
  %cstring = alloca i8*, align 8
  %cstring_args = alloca i8*, align 8
  %max_prop_length = alloca i32, align 4
  %opm = alloca %struct.wmOperator*, align 8
  %first_op = alloca i8, align 1
  %opmptr = alloca %struct.PointerRNA*, align 8
  %opmptr_default = alloca %struct.PointerRNA, align 8
  %opptr_default = alloca %struct.PointerRNA, align 8
  %macro_args_test = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4673, metadata !DIExpression()), !dbg !4674
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !4675, metadata !DIExpression()), !dbg !4676
  store i8 %all_args, i8* %all_args.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %all_args.addr, metadata !4677, metadata !DIExpression()), !dbg !4678
  store i8 %macro_args, i8* %macro_args.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %macro_args.addr, metadata !4679, metadata !DIExpression()), !dbg !4680
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4681, metadata !DIExpression()), !dbg !4682
  store %struct.PointerRNA* %opptr, %struct.PointerRNA** %opptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %opptr.addr, metadata !4683, metadata !DIExpression()), !dbg !4684
  call void @llvm.dbg.declare(metadata [64 x i8]* %idname_py, metadata !4685, metadata !DIExpression()), !dbg !4686
  call void @llvm.dbg.declare(metadata %struct.DynStr** %dynstr, metadata !4687, metadata !DIExpression()), !dbg !4692
  %call = call %struct.DynStr* @BLI_dynstr_new(), !dbg !4693
  store %struct.DynStr* %call, %struct.DynStr** %dynstr, align 8, !dbg !4692
  call void @llvm.dbg.declare(metadata i8** %cstring, metadata !4694, metadata !DIExpression()), !dbg !4695
  call void @llvm.dbg.declare(metadata i8** %cstring_args, metadata !4696, metadata !DIExpression()), !dbg !4697
  call void @llvm.dbg.declare(metadata i32* %max_prop_length, metadata !4698, metadata !DIExpression()), !dbg !4699
  store i32 10, i32* %max_prop_length, align 4, !dbg !4699
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname_py, i64 0, i64 0, !dbg !4700
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4701
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 1, !dbg !4702
  %1 = load i8*, i8** %idname, align 8, !dbg !4702
  call void @WM_operator_py_idname(i8* %arraydecay, i8* %1), !dbg !4703
  %2 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !4704
  %arraydecay1 = getelementptr inbounds [64 x i8], [64 x i8]* %idname_py, i64 0, i64 0, !dbg !4705
  call void (%struct.DynStr*, i8*, ...) @BLI_dynstr_appendf(%struct.DynStr* %2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.10, i64 0, i64 0), i8* %arraydecay1), !dbg !4706
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4707
  %tobool = icmp ne %struct.wmOperator* %3, null, !dbg !4707
  br i1 %tobool, label %land.lhs.true, label %if.else21, !dbg !4709

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4710
  %macro = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 9, !dbg !4711
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %macro, i32 0, i32 0, !dbg !4712
  %5 = load i8*, i8** %first, align 8, !dbg !4712
  %tobool2 = icmp ne i8* %5, null, !dbg !4710
  br i1 %tobool2, label %if.then, label %if.else21, !dbg !4713

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %opm, metadata !4714, metadata !DIExpression()), !dbg !4716
  call void @llvm.dbg.declare(metadata i8* %first_op, metadata !4717, metadata !DIExpression()), !dbg !4718
  store i8 1, i8* %first_op, align 1, !dbg !4718
  %6 = load i8, i8* %macro_args.addr, align 1, !dbg !4719
  %conv = zext i8 %6 to i32, !dbg !4719
  %tobool3 = icmp ne i32 %conv, 0, !dbg !4719
  br i1 %tobool3, label %cond.true, label %cond.false, !dbg !4719

cond.true:                                        ; preds = %if.then
  %7 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4720
  %macro4 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %7, i32 0, i32 9, !dbg !4721
  %first5 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %macro4, i32 0, i32 0, !dbg !4722
  %8 = load i8*, i8** %first5, align 8, !dbg !4722
  br label %cond.end, !dbg !4719

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !4719

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %8, %cond.true ], [ null, %cond.false ], !dbg !4719
  %9 = bitcast i8* %cond to %struct.wmOperator*, !dbg !4719
  store %struct.wmOperator* %9, %struct.wmOperator** %opm, align 8, !dbg !4723
  br label %for.cond, !dbg !4724

for.cond:                                         ; preds = %for.inc, %cond.end
  %10 = load %struct.wmOperator*, %struct.wmOperator** %opm, align 8, !dbg !4725
  %tobool6 = icmp ne %struct.wmOperator* %10, null, !dbg !4728
  br i1 %tobool6, label %for.body, label %for.end, !dbg !4728

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %opmptr, metadata !4729, metadata !DIExpression()), !dbg !4731
  %11 = load %struct.wmOperator*, %struct.wmOperator** %opm, align 8, !dbg !4732
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %11, i32 0, i32 7, !dbg !4733
  %12 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !4733
  store %struct.PointerRNA* %12, %struct.PointerRNA** %opmptr, align 8, !dbg !4731
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %opmptr_default, metadata !4734, metadata !DIExpression()), !dbg !4735
  %13 = load %struct.PointerRNA*, %struct.PointerRNA** %opmptr, align 8, !dbg !4736
  %cmp = icmp eq %struct.PointerRNA* %13, null, !dbg !4738
  br i1 %cmp, label %if.then8, label %if.end, !dbg !4739

if.then8:                                         ; preds = %for.body
  %14 = load %struct.wmOperator*, %struct.wmOperator** %opm, align 8, !dbg !4740
  %type = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %14, i32 0, i32 4, !dbg !4742
  %15 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type, align 8, !dbg !4742
  call void @WM_operator_properties_create_ptr(%struct.PointerRNA* %opmptr_default, %struct.wmOperatorType* %15), !dbg !4743
  store %struct.PointerRNA* %opmptr_default, %struct.PointerRNA** %opmptr, align 8, !dbg !4744
  br label %if.end, !dbg !4745

if.end:                                           ; preds = %if.then8, %for.body
  %16 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4746
  %17 = load %struct.PointerRNA*, %struct.PointerRNA** %opmptr, align 8, !dbg !4747
  %call9 = call i8* @RNA_pointer_as_string_id(%struct.bContext* %16, %struct.PointerRNA* %17), !dbg !4748
  store i8* %call9, i8** %cstring_args, align 8, !dbg !4749
  %18 = load i8, i8* %first_op, align 1, !dbg !4750
  %tobool10 = icmp ne i8 %18, 0, !dbg !4750
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !4752

if.then11:                                        ; preds = %if.end
  %19 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !4753
  %20 = load %struct.wmOperator*, %struct.wmOperator** %opm, align 8, !dbg !4755
  %type12 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %20, i32 0, i32 4, !dbg !4756
  %21 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type12, align 8, !dbg !4756
  %idname13 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %21, i32 0, i32 1, !dbg !4757
  %22 = load i8*, i8** %idname13, align 8, !dbg !4757
  %23 = load i8*, i8** %cstring_args, align 8, !dbg !4758
  call void (%struct.DynStr*, i8*, ...) @BLI_dynstr_appendf(%struct.DynStr* %19, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.11, i64 0, i64 0), i8* %22, i8* %23), !dbg !4759
  store i8 0, i8* %first_op, align 1, !dbg !4760
  br label %if.end16, !dbg !4761

if.else:                                          ; preds = %if.end
  %24 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !4762
  %25 = load %struct.wmOperator*, %struct.wmOperator** %opm, align 8, !dbg !4764
  %type14 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %25, i32 0, i32 4, !dbg !4765
  %26 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type14, align 8, !dbg !4765
  %idname15 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %26, i32 0, i32 1, !dbg !4766
  %27 = load i8*, i8** %idname15, align 8, !dbg !4766
  %28 = load i8*, i8** %cstring_args, align 8, !dbg !4767
  call void (%struct.DynStr*, i8*, ...) @BLI_dynstr_appendf(%struct.DynStr* %24, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i8* %27, i8* %28), !dbg !4768
  br label %if.end16

if.end16:                                         ; preds = %if.else, %if.then11
  %29 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4769
  %30 = load i8*, i8** %cstring_args, align 8, !dbg !4770
  call void %29(i8* %30), !dbg !4769
  %31 = load %struct.PointerRNA*, %struct.PointerRNA** %opmptr, align 8, !dbg !4771
  %cmp17 = icmp eq %struct.PointerRNA* %31, %opmptr_default, !dbg !4773
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !4774

if.then19:                                        ; preds = %if.end16
  call void @WM_operator_properties_free(%struct.PointerRNA* %opmptr_default), !dbg !4775
  br label %if.end20, !dbg !4777

if.end20:                                         ; preds = %if.then19, %if.end16
  br label %for.inc, !dbg !4778

for.inc:                                          ; preds = %if.end20
  %32 = load %struct.wmOperator*, %struct.wmOperator** %opm, align 8, !dbg !4779
  %next = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %32, i32 0, i32 0, !dbg !4780
  %33 = load %struct.wmOperator*, %struct.wmOperator** %next, align 8, !dbg !4780
  store %struct.wmOperator* %33, %struct.wmOperator** %opm, align 8, !dbg !4781
  br label %for.cond, !dbg !4782, !llvm.loop !4783

for.end:                                          ; preds = %for.cond
  br label %if.end40, !dbg !4785

if.else21:                                        ; preds = %land.lhs.true, %entry
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %opptr_default, metadata !4786, metadata !DIExpression()), !dbg !4788
  call void @llvm.dbg.declare(metadata i8* %macro_args_test, metadata !4789, metadata !DIExpression()), !dbg !4790
  %34 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4791
  %macro22 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %34, i32 0, i32 14, !dbg !4792
  %first23 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %macro22, i32 0, i32 0, !dbg !4793
  %35 = load i8*, i8** %first23, align 8, !dbg !4793
  %tobool24 = icmp ne i8* %35, null, !dbg !4791
  br i1 %tobool24, label %cond.true25, label %cond.false27, !dbg !4791

cond.true25:                                      ; preds = %if.else21
  %36 = load i8, i8* %macro_args.addr, align 1, !dbg !4794
  %conv26 = zext i8 %36 to i32, !dbg !4794
  br label %cond.end28, !dbg !4791

cond.false27:                                     ; preds = %if.else21
  br label %cond.end28, !dbg !4791

cond.end28:                                       ; preds = %cond.false27, %cond.true25
  %cond29 = phi i32 [ %conv26, %cond.true25 ], [ 1, %cond.false27 ], !dbg !4791
  %conv30 = trunc i32 %cond29 to i8, !dbg !4791
  store i8 %conv30, i8* %macro_args_test, align 1, !dbg !4790
  %37 = load %struct.PointerRNA*, %struct.PointerRNA** %opptr.addr, align 8, !dbg !4795
  %cmp31 = icmp eq %struct.PointerRNA* %37, null, !dbg !4797
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !4798

if.then33:                                        ; preds = %cond.end28
  %38 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4799
  call void @WM_operator_properties_create_ptr(%struct.PointerRNA* %opptr_default, %struct.wmOperatorType* %38), !dbg !4801
  store %struct.PointerRNA* %opptr_default, %struct.PointerRNA** %opptr.addr, align 8, !dbg !4802
  br label %if.end34, !dbg !4803

if.end34:                                         ; preds = %if.then33, %cond.end28
  %39 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4804
  %40 = load %struct.PointerRNA*, %struct.PointerRNA** %opptr.addr, align 8, !dbg !4805
  %41 = load i8, i8* %all_args.addr, align 1, !dbg !4806
  %42 = load i8, i8* %macro_args_test, align 1, !dbg !4807
  %43 = load i32, i32* %max_prop_length, align 4, !dbg !4808
  %call35 = call i8* @RNA_pointer_as_string_keywords(%struct.bContext* %39, %struct.PointerRNA* %40, i8 zeroext 0, i8 zeroext %41, i8 zeroext %42, i32 %43), !dbg !4809
  store i8* %call35, i8** %cstring_args, align 8, !dbg !4810
  %44 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !4811
  %45 = load i8*, i8** %cstring_args, align 8, !dbg !4812
  call void @BLI_dynstr_append(%struct.DynStr* %44, i8* %45), !dbg !4813
  %46 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4814
  %47 = load i8*, i8** %cstring_args, align 8, !dbg !4815
  call void %46(i8* %47), !dbg !4814
  %48 = load %struct.PointerRNA*, %struct.PointerRNA** %opptr.addr, align 8, !dbg !4816
  %cmp36 = icmp eq %struct.PointerRNA* %48, %opptr_default, !dbg !4818
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !4819

if.then38:                                        ; preds = %if.end34
  call void @WM_operator_properties_free(%struct.PointerRNA* %opptr_default), !dbg !4820
  br label %if.end39, !dbg !4822

if.end39:                                         ; preds = %if.then38, %if.end34
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %for.end
  %49 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !4823
  call void @BLI_dynstr_append(%struct.DynStr* %49, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.13, i64 0, i64 0)), !dbg !4824
  %50 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !4825
  %call41 = call i8* @BLI_dynstr_get_cstring(%struct.DynStr* %50), !dbg !4826
  store i8* %call41, i8** %cstring, align 8, !dbg !4827
  %51 = load %struct.DynStr*, %struct.DynStr** %dynstr, align 8, !dbg !4828
  call void @BLI_dynstr_free(%struct.DynStr* %51), !dbg !4829
  %52 = load i8*, i8** %cstring, align 8, !dbg !4830
  ret i8* %52, !dbg !4831
}

declare dso_local %struct.DynStr* @BLI_dynstr_new() #2

declare dso_local void @BLI_dynstr_appendf(%struct.DynStr*, i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_operator_properties_create_ptr(%struct.PointerRNA* %ptr, %struct.wmOperatorType* %ot) #0 !dbg !4832 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4835, metadata !DIExpression()), !dbg !4836
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4837, metadata !DIExpression()), !dbg !4838
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4839
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 11, !dbg !4840
  %1 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !4840
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4841
  call void @RNA_pointer_create(%struct.ID* null, %struct.StructRNA* %1, i8* null, %struct.PointerRNA* %2), !dbg !4842
  ret void, !dbg !4843
}

declare dso_local i8* @RNA_pointer_as_string_id(%struct.bContext*, %struct.PointerRNA*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_operator_properties_free(%struct.PointerRNA* %ptr) #0 !dbg !4844 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %properties = alloca %struct.IDProperty*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4847, metadata !DIExpression()), !dbg !4848
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %properties, metadata !4849, metadata !DIExpression()), !dbg !4850
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4851
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !4852
  %1 = load i8*, i8** %data, align 8, !dbg !4852
  %2 = bitcast i8* %1 to %struct.IDProperty*, !dbg !4851
  store %struct.IDProperty* %2, %struct.IDProperty** %properties, align 8, !dbg !4850
  %3 = load %struct.IDProperty*, %struct.IDProperty** %properties, align 8, !dbg !4853
  %tobool = icmp ne %struct.IDProperty* %3, null, !dbg !4853
  br i1 %tobool, label %if.then, label %if.end, !dbg !4855

if.then:                                          ; preds = %entry
  %4 = load %struct.IDProperty*, %struct.IDProperty** %properties, align 8, !dbg !4856
  call void @IDP_FreeProperty(%struct.IDProperty* %4), !dbg !4858
  %5 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4859
  %6 = load %struct.IDProperty*, %struct.IDProperty** %properties, align 8, !dbg !4860
  %7 = bitcast %struct.IDProperty* %6 to i8*, !dbg !4860
  call void %5(i8* %7), !dbg !4859
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4861
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %8, i32 0, i32 2, !dbg !4862
  store i8* null, i8** %data1, align 8, !dbg !4863
  br label %if.end, !dbg !4864

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !4865
}

declare dso_local i8* @RNA_pointer_as_string_keywords(%struct.bContext*, %struct.PointerRNA*, i8 zeroext, i8 zeroext, i8 zeroext, i32) #2

declare dso_local void @BLI_dynstr_append(%struct.DynStr*, i8*) #2

declare dso_local i8* @BLI_dynstr_get_cstring(%struct.DynStr*) #2

declare dso_local void @BLI_dynstr_free(%struct.DynStr*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @WM_operator_pystring(%struct.bContext* %C, %struct.wmOperator* %op, i8 zeroext %all_args, i8 zeroext %macro_args) #0 !dbg !4866 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %all_args.addr = alloca i8, align 1
  %macro_args.addr = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4869, metadata !DIExpression()), !dbg !4870
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !4871, metadata !DIExpression()), !dbg !4872
  store i8 %all_args, i8* %all_args.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %all_args.addr, metadata !4873, metadata !DIExpression()), !dbg !4874
  store i8 %macro_args, i8* %macro_args.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %macro_args.addr, metadata !4875, metadata !DIExpression()), !dbg !4876
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4877
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4878
  %2 = load i8, i8* %all_args.addr, align 1, !dbg !4879
  %3 = load i8, i8* %macro_args.addr, align 1, !dbg !4880
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4881
  %type = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 4, !dbg !4882
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type, align 8, !dbg !4882
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4883
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 7, !dbg !4884
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !4884
  %call = call i8* @WM_operator_pystring_ex(%struct.bContext* %0, %struct.wmOperator* %1, i8 zeroext %2, i8 zeroext %3, %struct.wmOperatorType* %5, %struct.PointerRNA* %7), !dbg !4885
  ret i8* %call, !dbg !4886
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @WM_operator_pystring_abbreviate(i8* %str, i32 %str_len_max) #0 !dbg !4887 {
entry:
  %retval = alloca i8, align 1
  %str.addr = alloca i8*, align 8
  %str_len_max.addr = alloca i32, align 4
  %str_len = alloca i32, align 4
  %parens_start = alloca i8*, align 8
  %parens_start_pos = alloca i32, align 4
  %parens_end = alloca i8*, align 8
  %parens_len = alloca i32, align 4
  %comma_first = alloca i8*, align 8
  %end_str = alloca [7 x i8], align 1
  %end_str_len = alloca i32, align 4
  %new_str_len = alloca i32, align 4
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !4890, metadata !DIExpression()), !dbg !4891
  store i32 %str_len_max, i32* %str_len_max.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %str_len_max.addr, metadata !4892, metadata !DIExpression()), !dbg !4893
  call void @llvm.dbg.declare(metadata i32* %str_len, metadata !4894, metadata !DIExpression()), !dbg !4895
  %0 = load i8*, i8** %str.addr, align 8, !dbg !4896
  %call = call i64 @strlen(i8* %0) #6, !dbg !4897
  %conv = trunc i64 %call to i32, !dbg !4897
  store i32 %conv, i32* %str_len, align 4, !dbg !4895
  call void @llvm.dbg.declare(metadata i8** %parens_start, metadata !4898, metadata !DIExpression()), !dbg !4899
  %1 = load i8*, i8** %str.addr, align 8, !dbg !4900
  %call1 = call i8* @strchr(i8* %1, i32 40) #6, !dbg !4901
  store i8* %call1, i8** %parens_start, align 8, !dbg !4899
  %2 = load i8*, i8** %parens_start, align 8, !dbg !4902
  %tobool = icmp ne i8* %2, null, !dbg !4902
  br i1 %tobool, label %if.then, label %if.end31, !dbg !4904

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %parens_start_pos, metadata !4905, metadata !DIExpression()), !dbg !4907
  %3 = load i8*, i8** %parens_start, align 8, !dbg !4908
  %4 = load i8*, i8** %str.addr, align 8, !dbg !4909
  %sub.ptr.lhs.cast = ptrtoint i8* %3 to i64, !dbg !4910
  %sub.ptr.rhs.cast = ptrtoint i8* %4 to i64, !dbg !4910
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4910
  %conv2 = trunc i64 %sub.ptr.sub to i32, !dbg !4908
  store i32 %conv2, i32* %parens_start_pos, align 4, !dbg !4907
  call void @llvm.dbg.declare(metadata i8** %parens_end, metadata !4911, metadata !DIExpression()), !dbg !4912
  %5 = load i8*, i8** %parens_start, align 8, !dbg !4913
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 1, !dbg !4914
  %call3 = call i8* @strrchr(i8* %add.ptr, i32 41) #6, !dbg !4915
  store i8* %call3, i8** %parens_end, align 8, !dbg !4912
  %6 = load i8*, i8** %parens_end, align 8, !dbg !4916
  %tobool4 = icmp ne i8* %6, null, !dbg !4916
  br i1 %tobool4, label %if.then5, label %if.end30, !dbg !4918

if.then5:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %parens_len, metadata !4919, metadata !DIExpression()), !dbg !4921
  %7 = load i8*, i8** %parens_end, align 8, !dbg !4922
  %8 = load i8*, i8** %parens_start, align 8, !dbg !4923
  %sub.ptr.lhs.cast6 = ptrtoint i8* %7 to i64, !dbg !4924
  %sub.ptr.rhs.cast7 = ptrtoint i8* %8 to i64, !dbg !4924
  %sub.ptr.sub8 = sub i64 %sub.ptr.lhs.cast6, %sub.ptr.rhs.cast7, !dbg !4924
  %conv9 = trunc i64 %sub.ptr.sub8 to i32, !dbg !4922
  store i32 %conv9, i32* %parens_len, align 4, !dbg !4921
  %9 = load i32, i32* %parens_len, align 4, !dbg !4925
  %10 = load i32, i32* %str_len_max.addr, align 4, !dbg !4927
  %cmp = icmp sgt i32 %9, %10, !dbg !4928
  br i1 %cmp, label %if.then11, label %if.end29, !dbg !4929

if.then11:                                        ; preds = %if.then5
  call void @llvm.dbg.declare(metadata i8** %comma_first, metadata !4930, metadata !DIExpression()), !dbg !4932
  %11 = load i8*, i8** %parens_start, align 8, !dbg !4933
  %call12 = call i8* @strchr(i8* %11, i32 44) #6, !dbg !4934
  store i8* %call12, i8** %comma_first, align 8, !dbg !4932
  %12 = load i8*, i8** %comma_first, align 8, !dbg !4935
  %tobool13 = icmp ne i8* %12, null, !dbg !4935
  br i1 %tobool13, label %if.then14, label %if.end28, !dbg !4937

if.then14:                                        ; preds = %if.then11
  call void @llvm.dbg.declare(metadata [7 x i8]* %end_str, metadata !4938, metadata !DIExpression()), !dbg !4941
  %13 = bitcast [7 x i8]* %end_str to i8*, !dbg !4941
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %13, i8* align 1 getelementptr inbounds ([7 x i8], [7 x i8]* @__const.WM_operator_pystring_abbreviate.end_str, i32 0, i32 0), i64 7, i1 false), !dbg !4941
  call void @llvm.dbg.declare(metadata i32* %end_str_len, metadata !4942, metadata !DIExpression()), !dbg !4943
  store i32 6, i32* %end_str_len, align 4, !dbg !4943
  call void @llvm.dbg.declare(metadata i32* %new_str_len, metadata !4944, metadata !DIExpression()), !dbg !4945
  %14 = load i8*, i8** %comma_first, align 8, !dbg !4946
  %15 = load i8*, i8** %parens_start, align 8, !dbg !4947
  %sub.ptr.lhs.cast15 = ptrtoint i8* %14 to i64, !dbg !4948
  %sub.ptr.rhs.cast16 = ptrtoint i8* %15 to i64, !dbg !4948
  %sub.ptr.sub17 = sub i64 %sub.ptr.lhs.cast15, %sub.ptr.rhs.cast16, !dbg !4948
  %add = add nsw i64 %sub.ptr.sub17, 1, !dbg !4949
  %conv18 = trunc i64 %add to i32, !dbg !4950
  store i32 %conv18, i32* %new_str_len, align 4, !dbg !4945
  %16 = load i32, i32* %str_len, align 4, !dbg !4951
  %17 = load i32, i32* %new_str_len, align 4, !dbg !4953
  %18 = load i32, i32* %parens_start_pos, align 4, !dbg !4954
  %add19 = add nsw i32 %17, %18, !dbg !4955
  %add20 = add nsw i32 %add19, 6, !dbg !4956
  %add21 = add nsw i32 %add20, 1, !dbg !4957
  %cmp22 = icmp sge i32 %16, %add21, !dbg !4958
  br i1 %cmp22, label %if.then24, label %if.end, !dbg !4959

if.then24:                                        ; preds = %if.then14
  %19 = load i8*, i8** %str.addr, align 8, !dbg !4960
  %20 = load i32, i32* %new_str_len, align 4, !dbg !4962
  %idx.ext = sext i32 %20 to i64, !dbg !4963
  %add.ptr25 = getelementptr inbounds i8, i8* %19, i64 %idx.ext, !dbg !4963
  %21 = load i32, i32* %parens_start_pos, align 4, !dbg !4964
  %idx.ext26 = sext i32 %21 to i64, !dbg !4965
  %add.ptr27 = getelementptr inbounds i8, i8* %add.ptr25, i64 %idx.ext26, !dbg !4965
  %arraydecay = getelementptr inbounds [7 x i8], [7 x i8]* %end_str, i64 0, i64 0, !dbg !4966
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %add.ptr27, i8* align 1 %arraydecay, i64 7, i1 false), !dbg !4966
  store i8 1, i8* %retval, align 1, !dbg !4967
  br label %return, !dbg !4967

if.end:                                           ; preds = %if.then14
  br label %if.end28, !dbg !4968

if.end28:                                         ; preds = %if.end, %if.then11
  br label %if.end29, !dbg !4969

if.end29:                                         ; preds = %if.end28, %if.then5
  br label %if.end30, !dbg !4970

if.end30:                                         ; preds = %if.end29, %if.then
  br label %if.end31, !dbg !4971

if.end31:                                         ; preds = %if.end30, %entry
  store i8 0, i8* %retval, align 1, !dbg !4972
  br label %return, !dbg !4972

return:                                           ; preds = %if.end31, %if.then24
  %22 = load i8, i8* %retval, align 1, !dbg !4973
  ret i8 %22, !dbg !4973
}

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #3

; Function Attrs: nounwind readonly
declare dso_local i8* @strrchr(i8*, i32) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @WM_prop_pystring_assign(%struct.bContext* %C, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i32 %index) #0 !dbg !4974 {
entry:
  %retval = alloca i8*, align 8
  %C.addr = alloca %struct.bContext*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %index.addr = alloca i32, align 4
  %lhs = alloca i8*, align 8
  %rhs = alloca i8*, align 8
  %ret = alloca i8*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4977, metadata !DIExpression()), !dbg !4978
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !4979, metadata !DIExpression()), !dbg !4980
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !4981, metadata !DIExpression()), !dbg !4982
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !4983, metadata !DIExpression()), !dbg !4984
  call void @llvm.dbg.declare(metadata i8** %lhs, metadata !4985, metadata !DIExpression()), !dbg !4986
  call void @llvm.dbg.declare(metadata i8** %rhs, metadata !4987, metadata !DIExpression()), !dbg !4988
  call void @llvm.dbg.declare(metadata i8** %ret, metadata !4989, metadata !DIExpression()), !dbg !4990
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4991
  %tobool = icmp ne %struct.bContext* %0, null, !dbg !4991
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4991

cond.true:                                        ; preds = %entry
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4992
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !4993
  %3 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !4994
  %4 = load i32, i32* %index.addr, align 4, !dbg !4995
  %call = call i8* @wm_prop_pystring_from_context(%struct.bContext* %1, %struct.PointerRNA* %2, %struct.PropertyRNA* %3, i32 %4), !dbg !4996
  br label %cond.end, !dbg !4991

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !4991

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ null, %cond.false ], !dbg !4991
  store i8* %cond, i8** %lhs, align 8, !dbg !4997
  %5 = load i8*, i8** %lhs, align 8, !dbg !4998
  %cmp = icmp eq i8* %5, null, !dbg !5000
  br i1 %cmp, label %if.then, label %if.end, !dbg !5001

if.then:                                          ; preds = %cond.end
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5002
  %7 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5004
  %8 = load i32, i32* %index.addr, align 4, !dbg !5005
  %call1 = call i8* @RNA_path_full_property_py(%struct.PointerRNA* %6, %struct.PropertyRNA* %7, i32 %8), !dbg !5006
  store i8* %call1, i8** %lhs, align 8, !dbg !5007
  br label %if.end, !dbg !5008

if.end:                                           ; preds = %if.then, %cond.end
  %9 = load i8*, i8** %lhs, align 8, !dbg !5009
  %tobool2 = icmp ne i8* %9, null, !dbg !5009
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !5011

if.then3:                                         ; preds = %if.end
  store i8* null, i8** %retval, align 8, !dbg !5012
  br label %return, !dbg !5012

if.end4:                                          ; preds = %if.end
  %10 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5014
  %11 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5015
  %12 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5016
  %13 = load i32, i32* %index.addr, align 4, !dbg !5017
  %call5 = call i8* @RNA_property_as_string(%struct.bContext* %10, %struct.PointerRNA* %11, %struct.PropertyRNA* %12, i32 %13, i32 2147483647), !dbg !5018
  store i8* %call5, i8** %rhs, align 8, !dbg !5019
  %14 = load i8*, i8** %rhs, align 8, !dbg !5020
  %tobool6 = icmp ne i8* %14, null, !dbg !5020
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !5022

if.then7:                                         ; preds = %if.end4
  %15 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5023
  %16 = load i8*, i8** %lhs, align 8, !dbg !5025
  call void %15(i8* %16), !dbg !5023
  store i8* null, i8** %retval, align 8, !dbg !5026
  br label %return, !dbg !5026

if.end8:                                          ; preds = %if.end4
  %17 = load i8*, i8** %lhs, align 8, !dbg !5027
  %18 = load i8*, i8** %rhs, align 8, !dbg !5028
  %call9 = call i8* (i8*, ...) @BLI_sprintfN(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0), i8* %17, i8* %18), !dbg !5029
  store i8* %call9, i8** %ret, align 8, !dbg !5030
  %19 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5031
  %20 = load i8*, i8** %lhs, align 8, !dbg !5032
  call void %19(i8* %20), !dbg !5031
  %21 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5033
  %22 = load i8*, i8** %rhs, align 8, !dbg !5034
  call void %21(i8* %22), !dbg !5033
  %23 = load i8*, i8** %ret, align 8, !dbg !5035
  store i8* %23, i8** %retval, align 8, !dbg !5036
  br label %return, !dbg !5036

return:                                           ; preds = %if.end8, %if.then7, %if.then3
  %24 = load i8*, i8** %retval, align 8, !dbg !5037
  ret i8* %24, !dbg !5037
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @wm_prop_pystring_from_context(%struct.bContext* %C, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %prop, i32 %index) #0 !dbg !5038 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %prop.addr = alloca %struct.PropertyRNA*, align 8
  %index.addr = alloca i32, align 4
  %member_id = alloca i8*, align 8
  %prop_str = alloca i8*, align 8
  %ret = alloca i8*, align 8
  %ctx_member = alloca i8*, align 8
  %ctx_item_ptr = alloca %struct.PointerRNA, align 8
  %ctx_member10 = alloca i8*, align 8
  %ctx_item_ptr11 = alloca %struct.PointerRNA, align 8
  %ctx_member21 = alloca i8*, align 8
  %ctx_member_full = alloca i8*, align 8
  %ctx_item_ptr22 = alloca %struct.PointerRNA, align 8
  %ctx_member36 = alloca i8*, align 8
  %ctx_member_full37 = alloca i8*, align 8
  %ctx_item_ptr38 = alloca %struct.PointerRNA, align 8
  %ctx_member55 = alloca i8*, align 8
  %ctx_member_full56 = alloca i8*, align 8
  %ctx_item_ptr57 = alloca %struct.PointerRNA, align 8
  %ctx_member71 = alloca i8*, align 8
  %ctx_item_ptr72 = alloca %struct.PointerRNA, align 8
  %ctx_member81 = alloca i8*, align 8
  %ctx_member92 = alloca i8*, align 8
  %ctx_member104 = alloca i8*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5039, metadata !DIExpression()), !dbg !5040
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !5041, metadata !DIExpression()), !dbg !5042
  store %struct.PropertyRNA* %prop, %struct.PropertyRNA** %prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop.addr, metadata !5043, metadata !DIExpression()), !dbg !5044
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !5045, metadata !DIExpression()), !dbg !5046
  call void @llvm.dbg.declare(metadata i8** %member_id, metadata !5047, metadata !DIExpression()), !dbg !5048
  store i8* null, i8** %member_id, align 8, !dbg !5048
  call void @llvm.dbg.declare(metadata i8** %prop_str, metadata !5049, metadata !DIExpression()), !dbg !5050
  store i8* null, i8** %prop_str, align 8, !dbg !5050
  call void @llvm.dbg.declare(metadata i8** %ret, metadata !5051, metadata !DIExpression()), !dbg !5052
  store i8* null, i8** %ret, align 8, !dbg !5052
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5053
  %id = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 0, !dbg !5055
  %data = getelementptr inbounds %struct.anon, %struct.anon* %id, i32 0, i32 0, !dbg !5056
  %1 = load i8*, i8** %data, align 8, !dbg !5056
  %tobool = icmp ne i8* %1, null, !dbg !5053
  br i1 %tobool, label %if.then, label %if.end124, !dbg !5057

if.then:                                          ; preds = %entry
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5058
  %id1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %2, i32 0, i32 0, !dbg !5058
  %data2 = getelementptr inbounds %struct.anon, %struct.anon* %id1, i32 0, i32 0, !dbg !5058
  %3 = load i8*, i8** %data2, align 8, !dbg !5058
  %4 = bitcast i8* %3 to %struct.ID*, !dbg !5058
  %name = getelementptr inbounds %struct.ID, %struct.ID* %4, i32 0, i32 4, !dbg !5058
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !5058
  %5 = bitcast i8* %arraydecay to i16*, !dbg !5058
  %6 = load i16, i16* %5, align 8, !dbg !5058
  %conv = sext i16 %6 to i32, !dbg !5058
  switch i32 %conv, label %sw.epilog [
    i32 17235, label %sw.bb
    i32 16975, label %sw.bb9
    i32 17741, label %sw.bb20
    i32 21827, label %sw.bb20
    i32 16973, label %sw.bb20
    i32 16716, label %sw.bb20
    i32 19283, label %sw.bb20
    i32 16707, label %sw.bb20
    i32 21580, label %sw.bb20
    i32 21057, label %sw.bb20
    i32 16717, label %sw.bb35
    i32 20311, label %sw.bb54
    i32 21075, label %sw.bb70
  ], !dbg !5060

sw.bb:                                            ; preds = %if.then
  call void @llvm.dbg.declare(metadata i8** %ctx_member, metadata !5061, metadata !DIExpression()), !dbg !5065
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.164, i64 0, i64 0), i8** %ctx_member, align 8, !dbg !5065
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %ctx_item_ptr, metadata !5066, metadata !DIExpression()), !dbg !5065
  %7 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5065
  %8 = load i8*, i8** %ctx_member, align 8, !dbg !5065
  call void @CTX_data_pointer_get(%struct.PointerRNA* sret %ctx_item_ptr, %struct.bContext* %7, i8* %8), !dbg !5065
  %id3 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ctx_item_ptr, i32 0, i32 0, !dbg !5067
  %data4 = getelementptr inbounds %struct.anon, %struct.anon* %id3, i32 0, i32 0, !dbg !5067
  %9 = load i8*, i8** %data4, align 8, !dbg !5067
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5067
  %id5 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %10, i32 0, i32 0, !dbg !5067
  %data6 = getelementptr inbounds %struct.anon, %struct.anon* %id5, i32 0, i32 0, !dbg !5067
  %11 = load i8*, i8** %data6, align 8, !dbg !5067
  %cmp = icmp eq i8* %9, %11, !dbg !5067
  br i1 %cmp, label %if.then8, label %if.end, !dbg !5065

if.then8:                                         ; preds = %sw.bb
  %12 = load i8*, i8** %ctx_member, align 8, !dbg !5069
  store i8* %12, i8** %member_id, align 8, !dbg !5069
  br label %sw.epilog, !dbg !5069

if.end:                                           ; preds = %sw.bb
  br label %sw.epilog, !dbg !5071

sw.bb9:                                           ; preds = %if.then
  call void @llvm.dbg.declare(metadata i8** %ctx_member10, metadata !5072, metadata !DIExpression()), !dbg !5075
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.165, i64 0, i64 0), i8** %ctx_member10, align 8, !dbg !5075
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %ctx_item_ptr11, metadata !5076, metadata !DIExpression()), !dbg !5075
  %13 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5075
  %14 = load i8*, i8** %ctx_member10, align 8, !dbg !5075
  call void @CTX_data_pointer_get(%struct.PointerRNA* sret %ctx_item_ptr11, %struct.bContext* %13, i8* %14), !dbg !5075
  %id12 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ctx_item_ptr11, i32 0, i32 0, !dbg !5077
  %data13 = getelementptr inbounds %struct.anon, %struct.anon* %id12, i32 0, i32 0, !dbg !5077
  %15 = load i8*, i8** %data13, align 8, !dbg !5077
  %16 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5077
  %id14 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %16, i32 0, i32 0, !dbg !5077
  %data15 = getelementptr inbounds %struct.anon, %struct.anon* %id14, i32 0, i32 0, !dbg !5077
  %17 = load i8*, i8** %data15, align 8, !dbg !5077
  %cmp16 = icmp eq i8* %15, %17, !dbg !5077
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !5075

if.then18:                                        ; preds = %sw.bb9
  %18 = load i8*, i8** %ctx_member10, align 8, !dbg !5079
  store i8* %18, i8** %member_id, align 8, !dbg !5079
  br label %sw.epilog, !dbg !5079

if.end19:                                         ; preds = %sw.bb9
  br label %sw.epilog, !dbg !5081

sw.bb20:                                          ; preds = %if.then, %if.then, %if.then, %if.then, %if.then, %if.then, %if.then, %if.then
  call void @llvm.dbg.declare(metadata i8** %ctx_member21, metadata !5082, metadata !DIExpression()), !dbg !5085
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.165, i64 0, i64 0), i8** %ctx_member21, align 8, !dbg !5085
  call void @llvm.dbg.declare(metadata i8** %ctx_member_full, metadata !5086, metadata !DIExpression()), !dbg !5085
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.166, i64 0, i64 0), i8** %ctx_member_full, align 8, !dbg !5085
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %ctx_item_ptr22, metadata !5087, metadata !DIExpression()), !dbg !5085
  %19 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5085
  %20 = load i8*, i8** %ctx_member21, align 8, !dbg !5085
  call void @CTX_data_pointer_get(%struct.PointerRNA* sret %ctx_item_ptr22, %struct.bContext* %19, i8* %20), !dbg !5085
  %id23 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ctx_item_ptr22, i32 0, i32 0, !dbg !5088
  %data24 = getelementptr inbounds %struct.anon, %struct.anon* %id23, i32 0, i32 0, !dbg !5088
  %21 = load i8*, i8** %data24, align 8, !dbg !5088
  %tobool25 = icmp ne i8* %21, null, !dbg !5088
  br i1 %tobool25, label %land.lhs.true, label %if.end34, !dbg !5088

land.lhs.true:                                    ; preds = %sw.bb20
  %id26 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ctx_item_ptr22, i32 0, i32 0, !dbg !5088
  %data27 = getelementptr inbounds %struct.anon, %struct.anon* %id26, i32 0, i32 0, !dbg !5088
  %22 = load i8*, i8** %data27, align 8, !dbg !5088
  %23 = bitcast i8* %22 to %struct.Object*, !dbg !5088
  %data28 = getelementptr inbounds %struct.Object, %struct.Object* %23, i32 0, i32 19, !dbg !5088
  %24 = load i8*, i8** %data28, align 8, !dbg !5088
  %25 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5088
  %id29 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %25, i32 0, i32 0, !dbg !5088
  %data30 = getelementptr inbounds %struct.anon, %struct.anon* %id29, i32 0, i32 0, !dbg !5088
  %26 = load i8*, i8** %data30, align 8, !dbg !5088
  %cmp31 = icmp eq i8* %24, %26, !dbg !5088
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !5085

if.then33:                                        ; preds = %land.lhs.true
  %27 = load i8*, i8** %ctx_member_full, align 8, !dbg !5090
  store i8* %27, i8** %member_id, align 8, !dbg !5090
  br label %sw.epilog, !dbg !5090

if.end34:                                         ; preds = %land.lhs.true, %sw.bb20
  br label %sw.epilog, !dbg !5092

sw.bb35:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata i8** %ctx_member36, metadata !5093, metadata !DIExpression()), !dbg !5096
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.165, i64 0, i64 0), i8** %ctx_member36, align 8, !dbg !5096
  call void @llvm.dbg.declare(metadata i8** %ctx_member_full37, metadata !5097, metadata !DIExpression()), !dbg !5096
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.167, i64 0, i64 0), i8** %ctx_member_full37, align 8, !dbg !5096
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %ctx_item_ptr38, metadata !5098, metadata !DIExpression()), !dbg !5096
  %28 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5096
  %29 = load i8*, i8** %ctx_member36, align 8, !dbg !5096
  call void @CTX_data_pointer_get(%struct.PointerRNA* sret %ctx_item_ptr38, %struct.bContext* %28, i8* %29), !dbg !5096
  %id39 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ctx_item_ptr38, i32 0, i32 0, !dbg !5099
  %data40 = getelementptr inbounds %struct.anon, %struct.anon* %id39, i32 0, i32 0, !dbg !5099
  %30 = load i8*, i8** %data40, align 8, !dbg !5099
  %tobool41 = icmp ne i8* %30, null, !dbg !5099
  br i1 %tobool41, label %land.lhs.true42, label %if.end53, !dbg !5099

land.lhs.true42:                                  ; preds = %sw.bb35
  %id43 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ctx_item_ptr38, i32 0, i32 0, !dbg !5099
  %data44 = getelementptr inbounds %struct.anon, %struct.anon* %id43, i32 0, i32 0, !dbg !5099
  %31 = load i8*, i8** %data44, align 8, !dbg !5099
  %32 = bitcast i8* %31 to %struct.Object*, !dbg !5099
  %id45 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ctx_item_ptr38, i32 0, i32 0, !dbg !5099
  %data46 = getelementptr inbounds %struct.anon, %struct.anon* %id45, i32 0, i32 0, !dbg !5099
  %33 = load i8*, i8** %data46, align 8, !dbg !5099
  %34 = bitcast i8* %33 to %struct.Object*, !dbg !5099
  %actcol = getelementptr inbounds %struct.Object, %struct.Object* %34, i32 0, i32 32, !dbg !5099
  %35 = load i32, i32* %actcol, align 4, !dbg !5099
  %conv47 = trunc i32 %35 to i16, !dbg !5099
  %call = call %struct.Material* @give_current_material(%struct.Object* %32, i16 signext %conv47), !dbg !5099
  %36 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5099
  %id48 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %36, i32 0, i32 0, !dbg !5099
  %data49 = getelementptr inbounds %struct.anon, %struct.anon* %id48, i32 0, i32 0, !dbg !5099
  %37 = load i8*, i8** %data49, align 8, !dbg !5099
  %38 = bitcast i8* %37 to %struct.Material*, !dbg !5099
  %cmp50 = icmp eq %struct.Material* %call, %38, !dbg !5099
  br i1 %cmp50, label %if.then52, label %if.end53, !dbg !5096

if.then52:                                        ; preds = %land.lhs.true42
  %39 = load i8*, i8** %ctx_member_full37, align 8, !dbg !5101
  store i8* %39, i8** %member_id, align 8, !dbg !5101
  br label %sw.epilog, !dbg !5101

if.end53:                                         ; preds = %land.lhs.true42, %sw.bb35
  br label %sw.epilog, !dbg !5103

sw.bb54:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata i8** %ctx_member55, metadata !5104, metadata !DIExpression()), !dbg !5107
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.164, i64 0, i64 0), i8** %ctx_member55, align 8, !dbg !5107
  call void @llvm.dbg.declare(metadata i8** %ctx_member_full56, metadata !5108, metadata !DIExpression()), !dbg !5107
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.168, i64 0, i64 0), i8** %ctx_member_full56, align 8, !dbg !5107
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %ctx_item_ptr57, metadata !5109, metadata !DIExpression()), !dbg !5107
  %40 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5107
  %41 = load i8*, i8** %ctx_member55, align 8, !dbg !5107
  call void @CTX_data_pointer_get(%struct.PointerRNA* sret %ctx_item_ptr57, %struct.bContext* %40, i8* %41), !dbg !5107
  %id58 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ctx_item_ptr57, i32 0, i32 0, !dbg !5110
  %data59 = getelementptr inbounds %struct.anon, %struct.anon* %id58, i32 0, i32 0, !dbg !5110
  %42 = load i8*, i8** %data59, align 8, !dbg !5110
  %tobool60 = icmp ne i8* %42, null, !dbg !5110
  br i1 %tobool60, label %land.lhs.true61, label %if.end69, !dbg !5110

land.lhs.true61:                                  ; preds = %sw.bb54
  %id62 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ctx_item_ptr57, i32 0, i32 0, !dbg !5110
  %data63 = getelementptr inbounds %struct.anon, %struct.anon* %id62, i32 0, i32 0, !dbg !5110
  %43 = load i8*, i8** %data63, align 8, !dbg !5110
  %44 = bitcast i8* %43 to %struct.Scene*, !dbg !5110
  %world = getelementptr inbounds %struct.Scene, %struct.Scene* %44, i32 0, i32 3, !dbg !5110
  %45 = load %struct.World*, %struct.World** %world, align 8, !dbg !5110
  %46 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5110
  %id64 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %46, i32 0, i32 0, !dbg !5110
  %data65 = getelementptr inbounds %struct.anon, %struct.anon* %id64, i32 0, i32 0, !dbg !5110
  %47 = load i8*, i8** %data65, align 8, !dbg !5110
  %48 = bitcast i8* %47 to %struct.World*, !dbg !5110
  %cmp66 = icmp eq %struct.World* %45, %48, !dbg !5110
  br i1 %cmp66, label %if.then68, label %if.end69, !dbg !5107

if.then68:                                        ; preds = %land.lhs.true61
  %49 = load i8*, i8** %ctx_member_full56, align 8, !dbg !5112
  store i8* %49, i8** %member_id, align 8, !dbg !5112
  br label %sw.epilog, !dbg !5112

if.end69:                                         ; preds = %land.lhs.true61, %sw.bb54
  br label %sw.epilog, !dbg !5114

sw.bb70:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata i8** %ctx_member71, metadata !5115, metadata !DIExpression()), !dbg !5118
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.169, i64 0, i64 0), i8** %ctx_member71, align 8, !dbg !5118
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %ctx_item_ptr72, metadata !5119, metadata !DIExpression()), !dbg !5118
  %50 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5118
  %51 = load i8*, i8** %ctx_member71, align 8, !dbg !5118
  call void @CTX_data_pointer_get(%struct.PointerRNA* sret %ctx_item_ptr72, %struct.bContext* %50, i8* %51), !dbg !5118
  %id73 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ctx_item_ptr72, i32 0, i32 0, !dbg !5120
  %data74 = getelementptr inbounds %struct.anon, %struct.anon* %id73, i32 0, i32 0, !dbg !5120
  %52 = load i8*, i8** %data74, align 8, !dbg !5120
  %53 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5120
  %id75 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %53, i32 0, i32 0, !dbg !5120
  %data76 = getelementptr inbounds %struct.anon, %struct.anon* %id75, i32 0, i32 0, !dbg !5120
  %54 = load i8*, i8** %data76, align 8, !dbg !5120
  %cmp77 = icmp eq i8* %52, %54, !dbg !5120
  br i1 %cmp77, label %if.then79, label %if.end80, !dbg !5118

if.then79:                                        ; preds = %sw.bb70
  %55 = load i8*, i8** %ctx_member71, align 8, !dbg !5122
  store i8* %55, i8** %member_id, align 8, !dbg !5122
  br label %sw.epilog, !dbg !5122

if.end80:                                         ; preds = %sw.bb70
  call void @llvm.dbg.declare(metadata i8** %ctx_member81, metadata !5124, metadata !DIExpression()), !dbg !5126
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.170, i64 0, i64 0), i8** %ctx_member81, align 8, !dbg !5126
  %56 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5127
  %type = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %56, i32 0, i32 1, !dbg !5127
  %57 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !5127
  %call82 = call zeroext i8 @RNA_struct_is_a(%struct.StructRNA* %57, %struct.StructRNA* @RNA_Space), !dbg !5127
  %conv83 = zext i8 %call82 to i32, !dbg !5127
  %tobool84 = icmp ne i32 %conv83, 0, !dbg !5127
  br i1 %tobool84, label %land.lhs.true85, label %if.end91, !dbg !5127

land.lhs.true85:                                  ; preds = %if.end80
  %58 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5127
  %data86 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %58, i32 0, i32 2, !dbg !5127
  %59 = load i8*, i8** %data86, align 8, !dbg !5127
  %60 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5127
  %call87 = call %struct.SpaceLink* @CTX_wm_space_data(%struct.bContext* %60), !dbg !5127
  %61 = bitcast %struct.SpaceLink* %call87 to i8*, !dbg !5127
  %cmp88 = icmp eq i8* %59, %61, !dbg !5127
  br i1 %cmp88, label %if.then90, label %if.end91, !dbg !5126

if.then90:                                        ; preds = %land.lhs.true85
  %62 = load i8*, i8** %ctx_member81, align 8, !dbg !5129
  store i8* %62, i8** %member_id, align 8, !dbg !5129
  br label %sw.epilog, !dbg !5129

if.end91:                                         ; preds = %land.lhs.true85, %if.end80
  call void @llvm.dbg.declare(metadata i8** %ctx_member92, metadata !5131, metadata !DIExpression()), !dbg !5133
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.171, i64 0, i64 0), i8** %ctx_member92, align 8, !dbg !5133
  %63 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5134
  %type93 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %63, i32 0, i32 1, !dbg !5134
  %64 = load %struct.StructRNA*, %struct.StructRNA** %type93, align 8, !dbg !5134
  %call94 = call zeroext i8 @RNA_struct_is_a(%struct.StructRNA* %64, %struct.StructRNA* @RNA_Area), !dbg !5134
  %conv95 = zext i8 %call94 to i32, !dbg !5134
  %tobool96 = icmp ne i32 %conv95, 0, !dbg !5134
  br i1 %tobool96, label %land.lhs.true97, label %if.end103, !dbg !5134

land.lhs.true97:                                  ; preds = %if.end91
  %65 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5134
  %data98 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %65, i32 0, i32 2, !dbg !5134
  %66 = load i8*, i8** %data98, align 8, !dbg !5134
  %67 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5134
  %call99 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %67), !dbg !5134
  %68 = bitcast %struct.ScrArea* %call99 to i8*, !dbg !5134
  %cmp100 = icmp eq i8* %66, %68, !dbg !5134
  br i1 %cmp100, label %if.then102, label %if.end103, !dbg !5133

if.then102:                                       ; preds = %land.lhs.true97
  %69 = load i8*, i8** %ctx_member92, align 8, !dbg !5136
  store i8* %69, i8** %member_id, align 8, !dbg !5136
  br label %sw.epilog, !dbg !5136

if.end103:                                        ; preds = %land.lhs.true97, %if.end91
  call void @llvm.dbg.declare(metadata i8** %ctx_member104, metadata !5138, metadata !DIExpression()), !dbg !5140
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.172, i64 0, i64 0), i8** %ctx_member104, align 8, !dbg !5140
  %70 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5141
  %type105 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %70, i32 0, i32 1, !dbg !5141
  %71 = load %struct.StructRNA*, %struct.StructRNA** %type105, align 8, !dbg !5141
  %call106 = call zeroext i8 @RNA_struct_is_a(%struct.StructRNA* %71, %struct.StructRNA* @RNA_Region), !dbg !5141
  %conv107 = zext i8 %call106 to i32, !dbg !5141
  %tobool108 = icmp ne i32 %conv107, 0, !dbg !5141
  br i1 %tobool108, label %land.lhs.true109, label %if.end115, !dbg !5141

land.lhs.true109:                                 ; preds = %if.end103
  %72 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5141
  %data110 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %72, i32 0, i32 2, !dbg !5141
  %73 = load i8*, i8** %data110, align 8, !dbg !5141
  %74 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5141
  %call111 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %74), !dbg !5141
  %75 = bitcast %struct.ARegion* %call111 to i8*, !dbg !5141
  %cmp112 = icmp eq i8* %73, %75, !dbg !5141
  br i1 %cmp112, label %if.then114, label %if.end115, !dbg !5140

if.then114:                                       ; preds = %land.lhs.true109
  %76 = load i8*, i8** %ctx_member104, align 8, !dbg !5143
  store i8* %76, i8** %member_id, align 8, !dbg !5143
  br label %sw.epilog, !dbg !5143

if.end115:                                        ; preds = %land.lhs.true109, %if.end103
  br label %sw.epilog, !dbg !5145

sw.epilog:                                        ; preds = %if.then, %if.end115, %if.then114, %if.then102, %if.then90, %if.then79, %if.end69, %if.then68, %if.end53, %if.then52, %if.end34, %if.then33, %if.end19, %if.then18, %if.end, %if.then8
  %77 = load i8*, i8** %member_id, align 8, !dbg !5146
  %tobool116 = icmp ne i8* %77, null, !dbg !5146
  br i1 %tobool116, label %if.then117, label %if.end123, !dbg !5148

if.then117:                                       ; preds = %sw.epilog
  %78 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5149
  %79 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop.addr, align 8, !dbg !5151
  %80 = load i32, i32* %index.addr, align 4, !dbg !5152
  %call118 = call i8* @RNA_path_struct_property_py(%struct.PointerRNA* %78, %struct.PropertyRNA* %79, i32 %80), !dbg !5153
  store i8* %call118, i8** %prop_str, align 8, !dbg !5154
  %81 = load i8*, i8** %prop_str, align 8, !dbg !5155
  %tobool119 = icmp ne i8* %81, null, !dbg !5155
  br i1 %tobool119, label %if.then120, label %if.end122, !dbg !5157

if.then120:                                       ; preds = %if.then117
  %82 = load i8*, i8** %member_id, align 8, !dbg !5158
  %83 = load i8*, i8** %prop_str, align 8, !dbg !5160
  %call121 = call i8* (i8*, ...) @BLI_sprintfN(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.173, i64 0, i64 0), i8* %82, i8* %83), !dbg !5161
  store i8* %call121, i8** %ret, align 8, !dbg !5162
  %84 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5163
  %85 = load i8*, i8** %prop_str, align 8, !dbg !5164
  call void %84(i8* %85), !dbg !5163
  br label %if.end122, !dbg !5165

if.end122:                                        ; preds = %if.then120, %if.then117
  br label %if.end123, !dbg !5166

if.end123:                                        ; preds = %if.end122, %sw.epilog
  br label %if.end124, !dbg !5167

if.end124:                                        ; preds = %if.end123, %entry
  %86 = load i8*, i8** %ret, align 8, !dbg !5168
  ret i8* %86, !dbg !5169
}

declare dso_local i8* @RNA_path_full_property_py(%struct.PointerRNA*, %struct.PropertyRNA*, i32) #2

declare dso_local i8* @RNA_property_as_string(%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*, i32, i32) #2

declare dso_local i8* @BLI_sprintfN(i8*, ...) #2

declare dso_local void @RNA_pointer_create(%struct.ID*, %struct.StructRNA*, i8*, %struct.PointerRNA*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_operator_properties_create(%struct.PointerRNA* %ptr, i8* %opstring) #0 !dbg !5170 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %opstring.addr = alloca i8*, align 8
  %ot = alloca %struct.wmOperatorType*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !5173, metadata !DIExpression()), !dbg !5174
  store i8* %opstring, i8** %opstring.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opstring.addr, metadata !5175, metadata !DIExpression()), !dbg !5176
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot, metadata !5177, metadata !DIExpression()), !dbg !5178
  %0 = load i8*, i8** %opstring.addr, align 8, !dbg !5179
  %call = call %struct.wmOperatorType* @WM_operatortype_find(i8* %0, i8 zeroext 0), !dbg !5180
  store %struct.wmOperatorType* %call, %struct.wmOperatorType** %ot, align 8, !dbg !5178
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !5181
  %tobool = icmp ne %struct.wmOperatorType* %1, null, !dbg !5181
  br i1 %tobool, label %if.then, label %if.else, !dbg !5183

if.then:                                          ; preds = %entry
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5184
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !5185
  call void @WM_operator_properties_create_ptr(%struct.PointerRNA* %2, %struct.wmOperatorType* %3), !dbg !5186
  br label %if.end, !dbg !5186

if.else:                                          ; preds = %entry
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5187
  call void @RNA_pointer_create(%struct.ID* null, %struct.StructRNA* @RNA_OperatorProperties, i8* null, %struct.PointerRNA* %4), !dbg !5188
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !5189
}

declare dso_local %struct.IDProperty* @IDP_New(i32, %union.IDPropertyTemplate*, i8*) #2

declare dso_local void @RNA_property_collection_begin(%struct.PointerRNA*, %struct.PropertyRNA*, %struct.CollectionPropertyIterator*) #2

declare dso_local %struct.PropertyRNA* @RNA_struct_iterator_property(%struct.StructRNA*) #2

declare dso_local i32 @RNA_property_type(%struct.PropertyRNA*) #2

declare dso_local void @RNA_def_property_flag(%struct.PropertyRNA*, i32) #2

declare dso_local void @RNA_def_property_clear_flag(%struct.PropertyRNA*, i32) #2

declare dso_local %struct.StructRNA* @RNA_property_pointer_type(%struct.PointerRNA*, %struct.PropertyRNA*) #2

declare dso_local zeroext i8 @RNA_struct_is_a(%struct.StructRNA*, %struct.StructRNA*) #2

declare dso_local void @RNA_property_pointer_get(%struct.PointerRNA* sret, %struct.PointerRNA*, %struct.PropertyRNA*) #2

declare dso_local void @RNA_property_collection_next(%struct.CollectionPropertyIterator*) #2

declare dso_local void @RNA_property_collection_end(%struct.CollectionPropertyIterator*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @WM_operator_properties_default(%struct.PointerRNA* %ptr, i8 zeroext %do_update) #0 !dbg !5190 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %do_update.addr = alloca i8, align 1
  %changed = alloca i8, align 1
  %rna_macro_iter = alloca %struct.CollectionPropertyIterator, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  %ptype = alloca %struct.StructRNA*, align 8
  %opptr = alloca %struct.PointerRNA, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !5193, metadata !DIExpression()), !dbg !5194
  store i8 %do_update, i8* %do_update.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_update.addr, metadata !5195, metadata !DIExpression()), !dbg !5196
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !5197, metadata !DIExpression()), !dbg !5198
  store i8 0, i8* %changed, align 1, !dbg !5198
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator* %rna_macro_iter, metadata !5199, metadata !DIExpression()), !dbg !5201
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5202
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5202
  %type = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %1, i32 0, i32 1, !dbg !5202
  %2 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !5202
  %call = call %struct.PropertyRNA* @RNA_struct_iterator_property(%struct.StructRNA* %2), !dbg !5202
  call void @RNA_property_collection_begin(%struct.PointerRNA* %0, %struct.PropertyRNA* %call, %struct.CollectionPropertyIterator* %rna_macro_iter), !dbg !5202
  br label %for.cond, !dbg !5202

for.cond:                                         ; preds = %for.inc, %entry
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %rna_macro_iter, i32 0, i32 7, !dbg !5204
  %3 = load i32, i32* %valid, align 8, !dbg !5204
  %tobool = icmp ne i32 %3, 0, !dbg !5202
  br i1 %tobool, label %for.body, label %for.end, !dbg !5202

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !5206, metadata !DIExpression()), !dbg !5208
  %ptr1 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %rna_macro_iter, i32 0, i32 6, !dbg !5208
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr1, i32 0, i32 2, !dbg !5208
  %4 = load i8*, i8** %data, align 8, !dbg !5208
  %5 = bitcast i8* %4 to %struct.PropertyRNA*, !dbg !5208
  store %struct.PropertyRNA* %5, %struct.PropertyRNA** %prop, align 8, !dbg !5208
  %6 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5209
  %call2 = call i32 @RNA_property_type(%struct.PropertyRNA* %6), !dbg !5211
  switch i32 %call2, label %sw.default [
    i32 5, label %sw.bb
  ], !dbg !5212

sw.bb:                                            ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.StructRNA** %ptype, metadata !5213, metadata !DIExpression()), !dbg !5216
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5217
  %8 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5218
  %call3 = call %struct.StructRNA* @RNA_property_pointer_type(%struct.PointerRNA* %7, %struct.PropertyRNA* %8), !dbg !5219
  store %struct.StructRNA* %call3, %struct.StructRNA** %ptype, align 8, !dbg !5216
  %9 = load %struct.StructRNA*, %struct.StructRNA** %ptype, align 8, !dbg !5220
  %cmp = icmp ne %struct.StructRNA* %9, @RNA_Struct, !dbg !5222
  br i1 %cmp, label %if.then, label %if.end, !dbg !5223

if.then:                                          ; preds = %sw.bb
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %opptr, metadata !5224, metadata !DIExpression()), !dbg !5226
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5227
  %11 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5228
  call void @RNA_property_pointer_get(%struct.PointerRNA* sret %opptr, %struct.PointerRNA* %10, %struct.PropertyRNA* %11), !dbg !5229
  %12 = load i8, i8* %do_update.addr, align 1, !dbg !5230
  %call4 = call zeroext i8 @WM_operator_properties_default(%struct.PointerRNA* %opptr, i8 zeroext %12), !dbg !5231
  %conv = zext i8 %call4 to i32, !dbg !5231
  %13 = load i8, i8* %changed, align 1, !dbg !5232
  %conv5 = zext i8 %13 to i32, !dbg !5232
  %or = or i32 %conv5, %conv, !dbg !5232
  %conv6 = trunc i32 %or to i8, !dbg !5232
  store i8 %conv6, i8* %changed, align 1, !dbg !5232
  br label %if.end, !dbg !5233

if.end:                                           ; preds = %if.then, %sw.bb
  br label %sw.epilog, !dbg !5234

sw.default:                                       ; preds = %for.body
  %14 = load i8, i8* %do_update.addr, align 1, !dbg !5235
  %conv7 = zext i8 %14 to i32, !dbg !5235
  %cmp8 = icmp eq i32 %conv7, 0, !dbg !5237
  br i1 %cmp8, label %if.then14, label %lor.lhs.false, !dbg !5238

lor.lhs.false:                                    ; preds = %sw.default
  %15 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5239
  %16 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5240
  %call10 = call zeroext i8 @RNA_property_is_set(%struct.PointerRNA* %15, %struct.PropertyRNA* %16), !dbg !5241
  %conv11 = zext i8 %call10 to i32, !dbg !5241
  %cmp12 = icmp eq i32 %conv11, 0, !dbg !5242
  br i1 %cmp12, label %if.then14, label %if.end19, !dbg !5243

if.then14:                                        ; preds = %lor.lhs.false, %sw.default
  %17 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5244
  %18 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5247
  %call15 = call zeroext i8 @RNA_property_reset(%struct.PointerRNA* %17, %struct.PropertyRNA* %18, i32 -1), !dbg !5248
  %tobool16 = icmp ne i8 %call15, 0, !dbg !5248
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !5249

if.then17:                                        ; preds = %if.then14
  store i8 1, i8* %changed, align 1, !dbg !5250
  br label %if.end18, !dbg !5252

if.end18:                                         ; preds = %if.then17, %if.then14
  br label %if.end19, !dbg !5253

if.end19:                                         ; preds = %if.end18, %lor.lhs.false
  br label %sw.epilog, !dbg !5254

sw.epilog:                                        ; preds = %if.end19, %if.end
  br label %for.inc, !dbg !5255

for.inc:                                          ; preds = %sw.epilog
  call void @RNA_property_collection_next(%struct.CollectionPropertyIterator* %rna_macro_iter), !dbg !5204
  br label %for.cond, !dbg !5204, !llvm.loop !5256

for.end:                                          ; preds = %for.cond
  call void @RNA_property_collection_end(%struct.CollectionPropertyIterator* %rna_macro_iter), !dbg !5258
  %19 = load i8, i8* %changed, align 1, !dbg !5259
  ret i8 %19, !dbg !5260
}

declare dso_local zeroext i8 @RNA_property_is_set(%struct.PointerRNA*, %struct.PropertyRNA*) #2

declare dso_local zeroext i8 @RNA_property_reset(%struct.PointerRNA*, %struct.PropertyRNA*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_operator_properties_reset(%struct.wmOperator* %op) #0 !dbg !5261 {
entry:
  %op.addr = alloca %struct.wmOperator*, align 8
  %iterprop = alloca %struct.PropertyRNA*, align 8
  %rna_macro_iter = alloca %struct.CollectionPropertyIterator, align 8
  %itemptr = alloca %struct.PointerRNA, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  %identifier = alloca i8*, align 8
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5264, metadata !DIExpression()), !dbg !5265
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5266
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 7, !dbg !5268
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !5268
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %1, i32 0, i32 2, !dbg !5269
  %2 = load i8*, i8** %data, align 8, !dbg !5269
  %tobool = icmp ne i8* %2, null, !dbg !5266
  br i1 %tobool, label %if.then, label %if.end10, !dbg !5270

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %iterprop, metadata !5271, metadata !DIExpression()), !dbg !5273
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5274
  %type = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 4, !dbg !5275
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type, align 8, !dbg !5275
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 11, !dbg !5276
  %5 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !5276
  %call = call %struct.PropertyRNA* @RNA_struct_iterator_property(%struct.StructRNA* %5), !dbg !5277
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %iterprop, align 8, !dbg !5278
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator* %rna_macro_iter, metadata !5279, metadata !DIExpression()), !dbg !5281
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5282
  %ptr1 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 7, !dbg !5282
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr1, align 8, !dbg !5282
  %8 = load %struct.PropertyRNA*, %struct.PropertyRNA** %iterprop, align 8, !dbg !5282
  call void @RNA_property_collection_begin(%struct.PointerRNA* %7, %struct.PropertyRNA* %8, %struct.CollectionPropertyIterator* %rna_macro_iter), !dbg !5282
  br label %for.cond, !dbg !5282

for.cond:                                         ; preds = %for.inc, %if.then
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %rna_macro_iter, i32 0, i32 7, !dbg !5284
  %9 = load i32, i32* %valid, align 8, !dbg !5284
  %tobool2 = icmp ne i32 %9, 0, !dbg !5282
  br i1 %tobool2, label %for.body, label %for.end, !dbg !5282

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %itemptr, metadata !5286, metadata !DIExpression()), !dbg !5288
  %ptr3 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %rna_macro_iter, i32 0, i32 6, !dbg !5288
  %10 = bitcast %struct.PointerRNA* %itemptr to i8*, !dbg !5288
  %11 = bitcast %struct.PointerRNA* %ptr3 to i8*, !dbg !5288
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 24, i1 false), !dbg !5288
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !5289, metadata !DIExpression()), !dbg !5291
  %data4 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %itemptr, i32 0, i32 2, !dbg !5292
  %12 = load i8*, i8** %data4, align 8, !dbg !5292
  %13 = bitcast i8* %12 to %struct.PropertyRNA*, !dbg !5293
  store %struct.PropertyRNA* %13, %struct.PropertyRNA** %prop, align 8, !dbg !5291
  %14 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5294
  %call5 = call i32 @RNA_property_flag(%struct.PropertyRNA* %14), !dbg !5296
  %and = and i32 %call5, 268435456, !dbg !5297
  %cmp = icmp eq i32 %and, 0, !dbg !5298
  br i1 %cmp, label %if.then6, label %if.end, !dbg !5299

if.then6:                                         ; preds = %for.body
  call void @llvm.dbg.declare(metadata i8** %identifier, metadata !5300, metadata !DIExpression()), !dbg !5302
  %15 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5303
  %call7 = call i8* @RNA_property_identifier(%struct.PropertyRNA* %15), !dbg !5304
  store i8* %call7, i8** %identifier, align 8, !dbg !5302
  %16 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5305
  %ptr8 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %16, i32 0, i32 7, !dbg !5306
  %17 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr8, align 8, !dbg !5306
  %18 = load i8*, i8** %identifier, align 8, !dbg !5307
  %call9 = call zeroext i8 @RNA_struct_idprops_unset(%struct.PointerRNA* %17, i8* %18), !dbg !5308
  br label %if.end, !dbg !5309

if.end:                                           ; preds = %if.then6, %for.body
  br label %for.inc, !dbg !5310

for.inc:                                          ; preds = %if.end
  call void @RNA_property_collection_next(%struct.CollectionPropertyIterator* %rna_macro_iter), !dbg !5284
  br label %for.cond, !dbg !5284, !llvm.loop !5311

for.end:                                          ; preds = %for.cond
  call void @RNA_property_collection_end(%struct.CollectionPropertyIterator* %rna_macro_iter), !dbg !5313
  br label %if.end10, !dbg !5314

if.end10:                                         ; preds = %for.end, %entry
  ret void, !dbg !5315
}

declare dso_local i32 @RNA_property_flag(%struct.PropertyRNA*) #2

declare dso_local i8* @RNA_property_identifier(%struct.PropertyRNA*) #2

declare dso_local zeroext i8 @RNA_struct_idprops_unset(%struct.PointerRNA*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_operator_properties_clear(%struct.PointerRNA* %ptr) #0 !dbg !5316 {
entry:
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %properties = alloca %struct.IDProperty*, align 8
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !5317, metadata !DIExpression()), !dbg !5318
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %properties, metadata !5319, metadata !DIExpression()), !dbg !5320
  %0 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !5321
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %0, i32 0, i32 2, !dbg !5322
  %1 = load i8*, i8** %data, align 8, !dbg !5322
  %2 = bitcast i8* %1 to %struct.IDProperty*, !dbg !5321
  store %struct.IDProperty* %2, %struct.IDProperty** %properties, align 8, !dbg !5320
  %3 = load %struct.IDProperty*, %struct.IDProperty** %properties, align 8, !dbg !5323
  %tobool = icmp ne %struct.IDProperty* %3, null, !dbg !5323
  br i1 %tobool, label %if.then, label %if.end, !dbg !5325

if.then:                                          ; preds = %entry
  %4 = load %struct.IDProperty*, %struct.IDProperty** %properties, align 8, !dbg !5326
  call void @IDP_ClearProperty(%struct.IDProperty* %4), !dbg !5328
  br label %if.end, !dbg !5329

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !5330
}

declare dso_local void @IDP_ClearProperty(%struct.IDProperty*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_operator_view3d_unit_defaults(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !5331 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %scene = alloca %struct.Scene*, align 8
  %v3d = alloca %struct.View3D*, align 8
  %dia = alloca float, align 4
  %rna_macro_iter = alloca %struct.CollectionPropertyIterator, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  %pstype = alloca i32, align 4
  %value = alloca float, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5332, metadata !DIExpression()), !dbg !5333
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5334, metadata !DIExpression()), !dbg !5335
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5336
  %flag = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 12, !dbg !5338
  %1 = load i16, i16* %flag, align 8, !dbg !5338
  %conv = sext i16 %1 to i32, !dbg !5336
  %and = and i32 %conv, 2, !dbg !5339
  %tobool = icmp ne i32 %and, 0, !dbg !5339
  br i1 %tobool, label %if.then, label %if.end25, !dbg !5340

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !5341, metadata !DIExpression()), !dbg !5343
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5344
  %call = call %struct.Scene* @CTX_data_scene(%struct.bContext* %2), !dbg !5345
  store %struct.Scene* %call, %struct.Scene** %scene, align 8, !dbg !5343
  call void @llvm.dbg.declare(metadata %struct.View3D** %v3d, metadata !5346, metadata !DIExpression()), !dbg !5429
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5430
  %call1 = call %struct.View3D* @CTX_wm_view3d(%struct.bContext* %3), !dbg !5431
  store %struct.View3D* %call1, %struct.View3D** %v3d, align 8, !dbg !5429
  call void @llvm.dbg.declare(metadata float* %dia, metadata !5432, metadata !DIExpression()), !dbg !5434
  %4 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !5435
  %tobool2 = icmp ne %struct.View3D* %4, null, !dbg !5435
  br i1 %tobool2, label %cond.true, label %cond.false, !dbg !5435

cond.true:                                        ; preds = %if.then
  %5 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !5436
  %6 = load %struct.View3D*, %struct.View3D** %v3d, align 8, !dbg !5437
  %call3 = call float @ED_view3d_grid_scale(%struct.Scene* %5, %struct.View3D* %6, i8** null), !dbg !5438
  br label %cond.end, !dbg !5435

cond.false:                                       ; preds = %if.then
  %7 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !5439
  %call4 = call float @ED_scene_grid_scale(%struct.Scene* %7, i8** null), !dbg !5440
  br label %cond.end, !dbg !5435

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %call3, %cond.true ], [ %call4, %cond.false ], !dbg !5435
  store float %cond, float* %dia, align 4, !dbg !5434
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator* %rna_macro_iter, metadata !5441, metadata !DIExpression()), !dbg !5443
  %8 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5444
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %8, i32 0, i32 7, !dbg !5444
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !5444
  %10 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5444
  %ptr5 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %10, i32 0, i32 7, !dbg !5444
  %11 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr5, align 8, !dbg !5444
  %type = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %11, i32 0, i32 1, !dbg !5444
  %12 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !5444
  %call6 = call %struct.PropertyRNA* @RNA_struct_iterator_property(%struct.StructRNA* %12), !dbg !5444
  call void @RNA_property_collection_begin(%struct.PointerRNA* %9, %struct.PropertyRNA* %call6, %struct.CollectionPropertyIterator* %rna_macro_iter), !dbg !5444
  br label %for.cond, !dbg !5444

for.cond:                                         ; preds = %for.inc, %cond.end
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %rna_macro_iter, i32 0, i32 7, !dbg !5446
  %13 = load i32, i32* %valid, align 8, !dbg !5446
  %tobool7 = icmp ne i32 %13, 0, !dbg !5444
  br i1 %tobool7, label %for.body, label %for.end, !dbg !5444

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !5448, metadata !DIExpression()), !dbg !5450
  %ptr8 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %rna_macro_iter, i32 0, i32 6, !dbg !5450
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr8, i32 0, i32 2, !dbg !5450
  %14 = load i8*, i8** %data, align 8, !dbg !5450
  %15 = bitcast i8* %14 to %struct.PropertyRNA*, !dbg !5450
  store %struct.PropertyRNA* %15, %struct.PropertyRNA** %prop, align 8, !dbg !5450
  %16 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5451
  %call9 = call i32 @RNA_property_type(%struct.PropertyRNA* %16), !dbg !5454
  %cmp = icmp eq i32 %call9, 2, !dbg !5455
  br i1 %cmp, label %if.then11, label %if.end24, !dbg !5456

if.then11:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata i32* %pstype, metadata !5457, metadata !DIExpression()), !dbg !5460
  %17 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5461
  %call12 = call i32 @RNA_property_subtype(%struct.PropertyRNA* %17), !dbg !5462
  store i32 %call12, i32* %pstype, align 4, !dbg !5460
  %18 = load i32, i32* %pstype, align 4, !dbg !5463
  %cmp13 = icmp eq i32 %18, 65554, !dbg !5465
  br i1 %cmp13, label %if.then15, label %if.end23, !dbg !5466

if.then15:                                        ; preds = %if.then11
  %19 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5467
  %ptr16 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %19, i32 0, i32 7, !dbg !5470
  %20 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr16, align 8, !dbg !5470
  %21 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5471
  %call17 = call zeroext i8 @RNA_property_is_set_ex(%struct.PointerRNA* %20, %struct.PropertyRNA* %21, i8 zeroext 0), !dbg !5472
  %tobool18 = icmp ne i8 %call17, 0, !dbg !5472
  br i1 %tobool18, label %if.end, label %if.then19, !dbg !5473

if.then19:                                        ; preds = %if.then15
  call void @llvm.dbg.declare(metadata float* %value, metadata !5474, metadata !DIExpression()), !dbg !5476
  %22 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5477
  %ptr20 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %22, i32 0, i32 7, !dbg !5478
  %23 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr20, align 8, !dbg !5478
  %24 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5479
  %call21 = call float @RNA_property_float_get_default(%struct.PointerRNA* %23, %struct.PropertyRNA* %24), !dbg !5480
  %25 = load float, float* %dia, align 4, !dbg !5481
  %mul = fmul float %call21, %25, !dbg !5482
  store float %mul, float* %value, align 4, !dbg !5476
  %26 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5483
  %ptr22 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %26, i32 0, i32 7, !dbg !5484
  %27 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr22, align 8, !dbg !5484
  %28 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5485
  %29 = load float, float* %value, align 4, !dbg !5486
  call void @RNA_property_float_set(%struct.PointerRNA* %27, %struct.PropertyRNA* %28, float %29), !dbg !5487
  br label %if.end, !dbg !5488

if.end:                                           ; preds = %if.then19, %if.then15
  br label %if.end23, !dbg !5489

if.end23:                                         ; preds = %if.end, %if.then11
  br label %if.end24, !dbg !5490

if.end24:                                         ; preds = %if.end23, %for.body
  br label %for.inc, !dbg !5491

for.inc:                                          ; preds = %if.end24
  call void @RNA_property_collection_next(%struct.CollectionPropertyIterator* %rna_macro_iter), !dbg !5446
  br label %for.cond, !dbg !5446, !llvm.loop !5492

for.end:                                          ; preds = %for.cond
  call void @RNA_property_collection_end(%struct.CollectionPropertyIterator* %rna_macro_iter), !dbg !5494
  br label %if.end25, !dbg !5495

if.end25:                                         ; preds = %for.end, %entry
  ret void, !dbg !5496
}

declare dso_local %struct.Scene* @CTX_data_scene(%struct.bContext*) #2

declare dso_local %struct.View3D* @CTX_wm_view3d(%struct.bContext*) #2

declare dso_local float @ED_view3d_grid_scale(%struct.Scene*, %struct.View3D*, i8**) #2

declare dso_local float @ED_scene_grid_scale(%struct.Scene*, i8**) #2

declare dso_local i32 @RNA_property_subtype(%struct.PropertyRNA*) #2

declare dso_local zeroext i8 @RNA_property_is_set_ex(%struct.PointerRNA*, %struct.PropertyRNA*, i8 zeroext) #2

declare dso_local float @RNA_property_float_get_default(%struct.PointerRNA*, %struct.PropertyRNA*) #2

declare dso_local void @RNA_property_float_set(%struct.PointerRNA*, %struct.PropertyRNA*, float) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @WM_operator_smooth_viewtx_get(%struct.wmOperator* %op) #0 !dbg !5497 {
entry:
  %op.addr = alloca %struct.wmOperator*, align 8
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5502, metadata !DIExpression()), !dbg !5503
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5504
  %flag = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 12, !dbg !5505
  %1 = load i16, i16* %flag, align 8, !dbg !5505
  %conv = sext i16 %1 to i32, !dbg !5504
  %and = and i32 %conv, 2, !dbg !5506
  %tobool = icmp ne i32 %and, 0, !dbg !5506
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5507

cond.true:                                        ; preds = %entry
  %2 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 71), align 4, !dbg !5508
  %conv1 = sext i16 %2 to i32, !dbg !5509
  br label %cond.end, !dbg !5507

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5507

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv1, %cond.true ], [ 0, %cond.false ], !dbg !5507
  ret i32 %cond, !dbg !5510
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @WM_menu_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %UNUSED_event) #0 !dbg !5511 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %UNUSED_event.addr = alloca %struct.wmEvent*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  %pup = alloca %struct.uiPopupMenu*, align 8
  %layout = alloca %struct.uiLayout*, align 8
  %retval13 = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5512, metadata !DIExpression()), !dbg !5513
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5514, metadata !DIExpression()), !dbg !5515
  store %struct.wmEvent* %UNUSED_event, %struct.wmEvent** %UNUSED_event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %UNUSED_event.addr, metadata !5516, metadata !DIExpression()), !dbg !5517
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !5518, metadata !DIExpression()), !dbg !5519
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5520
  %type = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 4, !dbg !5521
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type, align 8, !dbg !5521
  %prop1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 13, !dbg !5522
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop1, align 8, !dbg !5522
  store %struct.PropertyRNA* %2, %struct.PropertyRNA** %prop, align 8, !dbg !5519
  call void @llvm.dbg.declare(metadata %struct.uiPopupMenu** %pup, metadata !5523, metadata !DIExpression()), !dbg !5527
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout, metadata !5528, metadata !DIExpression()), !dbg !5531
  %3 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5532
  %cmp = icmp eq %struct.PropertyRNA* %3, null, !dbg !5534
  br i1 %cmp, label %if.then, label %if.else, !dbg !5535

if.then:                                          ; preds = %entry
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5536
  %type2 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 4, !dbg !5538
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type2, align 8, !dbg !5538
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 1, !dbg !5539
  %6 = load i8*, i8** %idname, align 8, !dbg !5539
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.WM_menu_invoke, i64 0, i64 0), i8* %6), !dbg !5540
  br label %if.end25, !dbg !5541

if.else:                                          ; preds = %entry
  %7 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5542
  %call3 = call i32 @RNA_property_type(%struct.PropertyRNA* %7), !dbg !5544
  %cmp4 = icmp ne i32 %call3, 4, !dbg !5545
  br i1 %cmp4, label %if.then5, label %if.else10, !dbg !5546

if.then5:                                         ; preds = %if.else
  %8 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5547
  %type6 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %8, i32 0, i32 4, !dbg !5549
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type6, align 8, !dbg !5549
  %idname7 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 1, !dbg !5550
  %10 = load i8*, i8** %idname7, align 8, !dbg !5550
  %11 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5551
  %call8 = call i8* @RNA_property_identifier(%struct.PropertyRNA* %11), !dbg !5552
  %call9 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.WM_menu_invoke, i64 0, i64 0), i8* %10, i8* %call8), !dbg !5553
  br label %if.end, !dbg !5554

if.else10:                                        ; preds = %if.else
  %12 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5555
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %12, i32 0, i32 7, !dbg !5557
  %13 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !5557
  %14 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5558
  %call11 = call zeroext i8 @RNA_property_is_set(%struct.PointerRNA* %13, %struct.PropertyRNA* %14), !dbg !5559
  %tobool = icmp ne i8 %call11, 0, !dbg !5559
  br i1 %tobool, label %if.then12, label %if.else16, !dbg !5560

if.then12:                                        ; preds = %if.else10
  call void @llvm.dbg.declare(metadata i32* %retval13, metadata !5561, metadata !DIExpression()), !dbg !5563
  %15 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5564
  %type14 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %15, i32 0, i32 4, !dbg !5565
  %16 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type14, align 8, !dbg !5565
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %16, i32 0, i32 4, !dbg !5566
  %17 = load i32 (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !5566
  %18 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5567
  %19 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5568
  %call15 = call i32 %17(%struct.bContext* %18, %struct.wmOperator* %19), !dbg !5564
  store i32 %call15, i32* %retval13, align 4, !dbg !5563
  %20 = load i32, i32* %retval13, align 4, !dbg !5569
  %21 = load i32, i32* %retval13, align 4, !dbg !5570
  store i32 %21, i32* %retval, align 4, !dbg !5571
  br label %return, !dbg !5571

if.else16:                                        ; preds = %if.else10
  %22 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5572
  %23 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5574
  %type17 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %23, i32 0, i32 4, !dbg !5575
  %24 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type17, align 8, !dbg !5575
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %24, i32 0, i32 11, !dbg !5576
  %25 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !5576
  %call18 = call i8* @RNA_struct_ui_name(%struct.StructRNA* %25), !dbg !5577
  %call19 = call %struct.uiPopupMenu* @uiPupMenuBegin(%struct.bContext* %22, i8* %call18, i32 0), !dbg !5578
  store %struct.uiPopupMenu* %call19, %struct.uiPopupMenu** %pup, align 8, !dbg !5579
  %26 = load %struct.uiPopupMenu*, %struct.uiPopupMenu** %pup, align 8, !dbg !5580
  %call20 = call %struct.uiLayout* @uiPupMenuLayout(%struct.uiPopupMenu* %26), !dbg !5581
  store %struct.uiLayout* %call20, %struct.uiLayout** %layout, align 8, !dbg !5582
  %27 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !5583
  call void @uiLayoutSetOperatorContext(%struct.uiLayout* %27, i32 1), !dbg !5584
  %28 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !5585
  %29 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5586
  %type21 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %29, i32 0, i32 4, !dbg !5587
  %30 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type21, align 8, !dbg !5587
  %idname22 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %30, i32 0, i32 1, !dbg !5588
  %31 = load i8*, i8** %idname22, align 8, !dbg !5588
  %32 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5589
  %call23 = call i8* @RNA_property_identifier(%struct.PropertyRNA* %32), !dbg !5590
  %33 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5591
  %ptr24 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %33, i32 0, i32 7, !dbg !5592
  %34 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr24, align 8, !dbg !5592
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %34, i32 0, i32 2, !dbg !5593
  %35 = load i8*, i8** %data, align 8, !dbg !5593
  %36 = bitcast i8* %35 to %struct.IDProperty*, !dbg !5591
  call void @uiItemsFullEnumO(%struct.uiLayout* %28, i8* %31, i8* %call23, %struct.IDProperty* %36, i32 7, i32 0), !dbg !5594
  %37 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5595
  %38 = load %struct.uiPopupMenu*, %struct.uiPopupMenu** %pup, align 8, !dbg !5596
  call void @uiPupMenuEnd(%struct.bContext* %37, %struct.uiPopupMenu* %38), !dbg !5597
  store i32 32, i32* %retval, align 4, !dbg !5598
  br label %return, !dbg !5598

if.end:                                           ; preds = %if.then5
  br label %if.end25

if.end25:                                         ; preds = %if.end, %if.then
  store i32 2, i32* %retval, align 4, !dbg !5599
  br label %return, !dbg !5599

return:                                           ; preds = %if.end25, %if.else16, %if.then12
  %39 = load i32, i32* %retval, align 4, !dbg !5600
  ret i32 %39, !dbg !5600
}

declare dso_local %struct.uiPopupMenu* @uiPupMenuBegin(%struct.bContext*, i8*, i32) #2

declare dso_local i8* @RNA_struct_ui_name(%struct.StructRNA*) #2

declare dso_local %struct.uiLayout* @uiPupMenuLayout(%struct.uiPopupMenu*) #2

declare dso_local void @uiLayoutSetOperatorContext(%struct.uiLayout*, i32) #2

declare dso_local void @uiItemsFullEnumO(%struct.uiLayout*, i8*, i8*, %struct.IDProperty*, i32, i32) #2

declare dso_local void @uiPupMenuEnd(%struct.bContext*, %struct.uiPopupMenu*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @WM_enum_search_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %UNUSED_event) #0 !dbg !5601 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %UNUSED_event.addr = alloca %struct.wmEvent*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5602, metadata !DIExpression()), !dbg !5603
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5604, metadata !DIExpression()), !dbg !5605
  store %struct.wmEvent* %UNUSED_event, %struct.wmEvent** %UNUSED_event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %UNUSED_event.addr, metadata !5606, metadata !DIExpression()), !dbg !5607
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5608
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5609
  %2 = bitcast %struct.wmOperator* %1 to i8*, !dbg !5609
  call void @uiPupBlock(%struct.bContext* %0, %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)* @wm_enum_search_menu, i8* %2), !dbg !5610
  ret i32 32, !dbg !5611
}

declare dso_local void @uiPupBlock(%struct.bContext*, %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.uiBlock* @wm_enum_search_menu(%struct.bContext* %C, %struct.ARegion* %ar, i8* %arg_op) #0 !dbg !3253 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %arg_op.addr = alloca i8*, align 8
  %event = alloca %struct.wmEvent, align 8
  %win = alloca %struct.wmWindow*, align 8
  %block = alloca %struct.uiBlock*, align 8
  %but = alloca %struct.uiBut*, align 8
  %op = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5612, metadata !DIExpression()), !dbg !5613
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !5614, metadata !DIExpression()), !dbg !5615
  store i8* %arg_op, i8** %arg_op.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg_op.addr, metadata !5616, metadata !DIExpression()), !dbg !5617
  call void @llvm.dbg.declare(metadata %struct.wmEvent* %event, metadata !5618, metadata !DIExpression()), !dbg !5619
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win, metadata !5620, metadata !DIExpression()), !dbg !5621
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5622
  %call = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %0), !dbg !5623
  store %struct.wmWindow* %call, %struct.wmWindow** %win, align 8, !dbg !5621
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block, metadata !5624, metadata !DIExpression()), !dbg !5625
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !5626, metadata !DIExpression()), !dbg !5630
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op, metadata !5631, metadata !DIExpression()), !dbg !5632
  %1 = load i8*, i8** %arg_op.addr, align 8, !dbg !5633
  %2 = bitcast i8* %1 to %struct.wmOperator*, !dbg !5634
  store %struct.wmOperator* %2, %struct.wmOperator** %op, align 8, !dbg !5632
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5635
  %4 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !5636
  %call1 = call %struct.uiBlock* @uiBeginBlock(%struct.bContext* %3, %struct.ARegion* %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.174, i64 0, i64 0), i16 signext 0), !dbg !5637
  store %struct.uiBlock* %call1, %struct.uiBlock** %block, align 8, !dbg !5638
  %5 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !5639
  call void @uiBlockSetFlag(%struct.uiBlock* %5, i32 133), !dbg !5640
  %6 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !5641
  %7 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !5642
  %type = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %7, i32 0, i32 4, !dbg !5643
  %8 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type, align 8, !dbg !5643
  %9 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !5644
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %9, i32 0, i32 7, !dbg !5645
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !5645
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %10, i32 0, i32 2, !dbg !5646
  %11 = load i8*, i8** %data, align 8, !dbg !5646
  %12 = bitcast i8* %11 to %struct.IDProperty*, !dbg !5644
  %call2 = call i32 @uiSearchBoxWidth(), !dbg !5647
  %conv = trunc i32 %call2 to i16, !dbg !5647
  %13 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !5648
  %call3 = call %struct.uiBut* @uiDefSearchButO_ptr(%struct.uiBlock* %6, %struct.wmOperatorType* %8, %struct.IDProperty* %12, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @wm_enum_search_menu.search, i64 0, i64 0), i32 0, i32 30, i32 256, i32 10, i32 10, i16 signext %conv, i16 signext %13, float 0.000000e+00, float 0.000000e+00, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)), !dbg !5649
  store %struct.uiBut* %call3, %struct.uiBut** %but, align 8, !dbg !5650
  %14 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !5651
  %call4 = call i32 @uiSearchBoxHeight(), !dbg !5652
  %sub = sub nsw i32 10, %call4, !dbg !5653
  %call5 = call i32 @uiSearchBoxWidth(), !dbg !5654
  %conv6 = trunc i32 %call5 to i16, !dbg !5654
  %call7 = call i32 @uiSearchBoxHeight(), !dbg !5655
  %conv8 = trunc i32 %call7 to i16, !dbg !5655
  %call9 = call %struct.uiBut* @uiDefBut(%struct.uiBlock* %14, i32 5120, i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i32 10, i32 %sub, i16 signext %conv6, i16 signext %conv8, i8* null, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, i8* null), !dbg !5656
  %15 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !5657
  %16 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !5658
  %conv10 = sext i16 %16 to i32, !dbg !5658
  %sub11 = sub nsw i32 0, %conv10, !dbg !5659
  call void @uiPopupBoundsBlock(%struct.uiBlock* %15, i32 6, i32 0, i32 %sub11), !dbg !5660
  %17 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !5661
  call void @wm_event_init_from_window(%struct.wmWindow* %17, %struct.wmEvent* %event), !dbg !5662
  %type12 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 2, !dbg !5663
  store i16 20513, i16* %type12, align 8, !dbg !5664
  %val = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 3, !dbg !5665
  store i16 1, i16* %val, align 2, !dbg !5666
  %18 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !5667
  %19 = bitcast %struct.uiBut* %18 to i8*, !dbg !5667
  %customdata = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 28, !dbg !5668
  store i8* %19, i8** %customdata, align 8, !dbg !5669
  %customdatafree = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 26, !dbg !5670
  store i16 0, i16* %customdatafree, align 2, !dbg !5671
  %20 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !5672
  call void @wm_event_add(%struct.wmWindow* %20, %struct.wmEvent* %event), !dbg !5673
  %21 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !5674
  ret %struct.uiBlock* %21, !dbg !5675
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @WM_operator_confirm_message_ex(%struct.bContext* %C, %struct.wmOperator* %op, i8* %title, i32 %icon, i8* %message) #0 !dbg !5676 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %title.addr = alloca i8*, align 8
  %icon.addr = alloca i32, align 4
  %message.addr = alloca i8*, align 8
  %pup = alloca %struct.uiPopupMenu*, align 8
  %layout = alloca %struct.uiLayout*, align 8
  %properties = alloca %struct.IDProperty*, align 8
  %tmp = alloca %struct.PointerRNA, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5679, metadata !DIExpression()), !dbg !5680
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5681, metadata !DIExpression()), !dbg !5682
  store i8* %title, i8** %title.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %title.addr, metadata !5683, metadata !DIExpression()), !dbg !5684
  store i32 %icon, i32* %icon.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %icon.addr, metadata !5685, metadata !DIExpression()), !dbg !5686
  store i8* %message, i8** %message.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %message.addr, metadata !5687, metadata !DIExpression()), !dbg !5688
  call void @llvm.dbg.declare(metadata %struct.uiPopupMenu** %pup, metadata !5689, metadata !DIExpression()), !dbg !5690
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout, metadata !5691, metadata !DIExpression()), !dbg !5692
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %properties, metadata !5693, metadata !DIExpression()), !dbg !5694
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5695
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 7, !dbg !5696
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !5696
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %1, i32 0, i32 2, !dbg !5697
  %2 = load i8*, i8** %data, align 8, !dbg !5697
  %3 = bitcast i8* %2 to %struct.IDProperty*, !dbg !5695
  store %struct.IDProperty* %3, %struct.IDProperty** %properties, align 8, !dbg !5694
  %4 = load %struct.IDProperty*, %struct.IDProperty** %properties, align 8, !dbg !5698
  %tobool = icmp ne %struct.IDProperty* %4, null, !dbg !5698
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !5700

land.lhs.true:                                    ; preds = %entry
  %5 = load %struct.IDProperty*, %struct.IDProperty** %properties, align 8, !dbg !5701
  %len = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %5, i32 0, i32 8, !dbg !5702
  %6 = load i32, i32* %len, align 8, !dbg !5702
  %tobool1 = icmp ne i32 %6, 0, !dbg !5701
  br i1 %tobool1, label %if.then, label %if.else, !dbg !5703

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5704
  %ptr2 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %7, i32 0, i32 7, !dbg !5705
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr2, align 8, !dbg !5705
  %data3 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %8, i32 0, i32 2, !dbg !5706
  %9 = load i8*, i8** %data3, align 8, !dbg !5706
  %10 = bitcast i8* %9 to %struct.IDProperty*, !dbg !5704
  %call = call %struct.IDProperty* @IDP_CopyProperty(%struct.IDProperty* %10), !dbg !5707
  store %struct.IDProperty* %call, %struct.IDProperty** %properties, align 8, !dbg !5708
  br label %if.end, !dbg !5709

if.else:                                          ; preds = %land.lhs.true, %entry
  store %struct.IDProperty* null, %struct.IDProperty** %properties, align 8, !dbg !5710
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %11 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5711
  %12 = load i8*, i8** %title.addr, align 8, !dbg !5712
  %13 = load i32, i32* %icon.addr, align 4, !dbg !5713
  %call4 = call %struct.uiPopupMenu* @uiPupMenuBegin(%struct.bContext* %11, i8* %12, i32 %13), !dbg !5714
  store %struct.uiPopupMenu* %call4, %struct.uiPopupMenu** %pup, align 8, !dbg !5715
  %14 = load %struct.uiPopupMenu*, %struct.uiPopupMenu** %pup, align 8, !dbg !5716
  %call5 = call %struct.uiLayout* @uiPupMenuLayout(%struct.uiPopupMenu* %14), !dbg !5717
  store %struct.uiLayout* %call5, %struct.uiLayout** %layout, align 8, !dbg !5718
  %15 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !5719
  %16 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5720
  %type = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %16, i32 0, i32 4, !dbg !5721
  %17 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type, align 8, !dbg !5721
  %18 = load i8*, i8** %message.addr, align 8, !dbg !5722
  %19 = load %struct.IDProperty*, %struct.IDProperty** %properties, align 8, !dbg !5723
  call void @uiItemFullO_ptr(%struct.PointerRNA* sret %tmp, %struct.uiLayout* %15, %struct.wmOperatorType* %17, i8* %18, i32 0, %struct.IDProperty* %19, i32 7, i32 0), !dbg !5724
  %20 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5725
  %21 = load %struct.uiPopupMenu*, %struct.uiPopupMenu** %pup, align 8, !dbg !5726
  call void @uiPupMenuEnd(%struct.bContext* %20, %struct.uiPopupMenu* %21), !dbg !5727
  ret i32 32, !dbg !5728
}

declare dso_local %struct.IDProperty* @IDP_CopyProperty(%struct.IDProperty*) #2

declare dso_local void @uiItemFullO_ptr(%struct.PointerRNA* sret, %struct.uiLayout*, %struct.wmOperatorType*, i8*, i32, %struct.IDProperty*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @WM_operator_confirm_message(%struct.bContext* %C, %struct.wmOperator* %op, i8* %message) #0 !dbg !5729 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %message.addr = alloca i8*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5732, metadata !DIExpression()), !dbg !5733
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5734, metadata !DIExpression()), !dbg !5735
  store i8* %message, i8** %message.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %message.addr, metadata !5736, metadata !DIExpression()), !dbg !5737
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5738
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5739
  %2 = load i8*, i8** %message.addr, align 8, !dbg !5740
  %call = call i32 @WM_operator_confirm_message_ex(%struct.bContext* %0, %struct.wmOperator* %1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19, i64 0, i64 0), i32 1, i8* %2), !dbg !5741
  ret i32 %call, !dbg !5742
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @WM_operator_confirm(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %UNUSED_event) #0 !dbg !5743 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %UNUSED_event.addr = alloca %struct.wmEvent*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5744, metadata !DIExpression()), !dbg !5745
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5746, metadata !DIExpression()), !dbg !5747
  store %struct.wmEvent* %UNUSED_event, %struct.wmEvent** %UNUSED_event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %UNUSED_event.addr, metadata !5748, metadata !DIExpression()), !dbg !5749
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5750
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5751
  %call = call i32 @WM_operator_confirm_message(%struct.bContext* %0, %struct.wmOperator* %1, i8* null), !dbg !5752
  ret i32 %call, !dbg !5753
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @WM_operator_filesel(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %UNUSED_event) #0 !dbg !5754 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %UNUSED_event.addr = alloca %struct.wmEvent*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5755, metadata !DIExpression()), !dbg !5756
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5757, metadata !DIExpression()), !dbg !5758
  store %struct.wmEvent* %UNUSED_event, %struct.wmEvent** %UNUSED_event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %UNUSED_event.addr, metadata !5759, metadata !DIExpression()), !dbg !5760
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5761
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 7, !dbg !5763
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !5763
  %call = call zeroext i8 @RNA_struct_property_is_set(%struct.PointerRNA* %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.20, i64 0, i64 0)), !dbg !5764
  %tobool = icmp ne i8 %call, 0, !dbg !5764
  br i1 %tobool, label %if.then, label %if.else, !dbg !5765

if.then:                                          ; preds = %entry
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5766
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5768
  %call1 = call i32 @WM_operator_call_notest(%struct.bContext* %2, %struct.wmOperator* %3), !dbg !5769
  store i32 %call1, i32* %retval, align 4, !dbg !5770
  br label %return, !dbg !5770

if.else:                                          ; preds = %entry
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5771
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5773
  call void @WM_event_add_fileselect(%struct.bContext* %4, %struct.wmOperator* %5), !dbg !5774
  store i32 1, i32* %retval, align 4, !dbg !5775
  br label %return, !dbg !5775

return:                                           ; preds = %if.else, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !5776
  ret i32 %6, !dbg !5776
}

declare dso_local zeroext i8 @RNA_struct_property_is_set(%struct.PointerRNA*, i8*) #2

declare dso_local i32 @WM_operator_call_notest(%struct.bContext*, %struct.wmOperator*) #2

declare dso_local void @WM_event_add_fileselect(%struct.bContext*, %struct.wmOperator*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @WM_operator_filesel_ensure_ext_imtype(%struct.wmOperator* %op, %struct.ImageFormatData* %im_format) #0 !dbg !5777 {
entry:
  %retval = alloca i8, align 1
  %op.addr = alloca %struct.wmOperator*, align 8
  %im_format.addr = alloca %struct.ImageFormatData*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  %filepath = alloca [1024 x i8], align 16
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5782, metadata !DIExpression()), !dbg !5783
  store %struct.ImageFormatData* %im_format, %struct.ImageFormatData** %im_format.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ImageFormatData** %im_format.addr, metadata !5784, metadata !DIExpression()), !dbg !5785
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !5786, metadata !DIExpression()), !dbg !5787
  call void @llvm.dbg.declare(metadata [1024 x i8]* %filepath, metadata !5788, metadata !DIExpression()), !dbg !5789
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5790
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 7, !dbg !5791
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !5791
  %call = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.20, i64 0, i64 0)), !dbg !5792
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !5793
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5794
  %ptr1 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !5795
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr1, align 8, !dbg !5795
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5796
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %filepath, i64 0, i64 0, !dbg !5797
  call void @RNA_property_string_get(%struct.PointerRNA* %3, %struct.PropertyRNA* %4, i8* %arraydecay), !dbg !5798
  %arraydecay2 = getelementptr inbounds [1024 x i8], [1024 x i8]* %filepath, i64 0, i64 0, !dbg !5799
  %5 = load %struct.ImageFormatData*, %struct.ImageFormatData** %im_format.addr, align 8, !dbg !5801
  %call3 = call i32 @BKE_add_image_extension(i8* %arraydecay2, %struct.ImageFormatData* %5), !dbg !5802
  %tobool = icmp ne i32 %call3, 0, !dbg !5802
  br i1 %tobool, label %if.then, label %if.end, !dbg !5803

if.then:                                          ; preds = %entry
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5804
  %ptr4 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 7, !dbg !5806
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr4, align 8, !dbg !5806
  %8 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5807
  %arraydecay5 = getelementptr inbounds [1024 x i8], [1024 x i8]* %filepath, i64 0, i64 0, !dbg !5808
  call void @RNA_property_string_set(%struct.PointerRNA* %7, %struct.PropertyRNA* %8, i8* %arraydecay5), !dbg !5809
  store i8 1, i8* %retval, align 1, !dbg !5810
  br label %return, !dbg !5810

if.end:                                           ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !5811
  br label %return, !dbg !5811

return:                                           ; preds = %if.end, %if.then
  %9 = load i8, i8* %retval, align 1, !dbg !5812
  ret i8 %9, !dbg !5812
}

declare dso_local %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA*, i8*) #2

declare dso_local void @RNA_property_string_get(%struct.PointerRNA*, %struct.PropertyRNA*, i8*) #2

declare dso_local i32 @BKE_add_image_extension(i8*, %struct.ImageFormatData*) #2

declare dso_local void @RNA_property_string_set(%struct.PointerRNA*, %struct.PropertyRNA*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_operator_properties_filesel(%struct.wmOperatorType* %ot, i32 %filter, i16 signext %type, i16 signext %action, i16 signext %flag, i16 signext %display) #0 !dbg !3225 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %filter.addr = alloca i32, align 4
  %type.addr = alloca i16, align 2
  %action.addr = alloca i16, align 2
  %flag.addr = alloca i16, align 2
  %display.addr = alloca i16, align 2
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5813, metadata !DIExpression()), !dbg !5814
  store i32 %filter, i32* %filter.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %filter.addr, metadata !5815, metadata !DIExpression()), !dbg !5816
  store i16 %type, i16* %type.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %type.addr, metadata !5817, metadata !DIExpression()), !dbg !5818
  store i16 %action, i16* %action.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %action.addr, metadata !5819, metadata !DIExpression()), !dbg !5820
  store i16 %flag, i16* %flag.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %flag.addr, metadata !5821, metadata !DIExpression()), !dbg !5822
  store i16 %display, i16* %display.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %display.addr, metadata !5823, metadata !DIExpression()), !dbg !5824
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !5825, metadata !DIExpression()), !dbg !5826
  %0 = load i16, i16* %flag.addr, align 2, !dbg !5827
  %conv = sext i16 %0 to i32, !dbg !5827
  %and = and i32 %conv, 8, !dbg !5829
  %tobool = icmp ne i32 %and, 0, !dbg !5829
  br i1 %tobool, label %if.then, label %if.end, !dbg !5830

if.then:                                          ; preds = %entry
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5831
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 11, !dbg !5832
  %2 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !5832
  %3 = bitcast %struct.StructRNA* %2 to i8*, !dbg !5831
  %call = call %struct.PropertyRNA* @RNA_def_string_file_path(i8* %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.20, i64 0, i64 0), i8* null, i32 1024, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.34, i64 0, i64 0)), !dbg !5833
  br label %if.end, !dbg !5833

if.end:                                           ; preds = %if.then, %entry
  %4 = load i16, i16* %flag.addr, align 2, !dbg !5834
  %conv1 = sext i16 %4 to i32, !dbg !5834
  %and2 = and i32 %conv1, 2, !dbg !5836
  %tobool3 = icmp ne i32 %and2, 0, !dbg !5836
  br i1 %tobool3, label %if.then4, label %if.end7, !dbg !5837

if.then4:                                         ; preds = %if.end
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5838
  %srna5 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 11, !dbg !5839
  %6 = load %struct.StructRNA*, %struct.StructRNA** %srna5, align 8, !dbg !5839
  %7 = bitcast %struct.StructRNA* %6 to i8*, !dbg !5838
  %call6 = call %struct.PropertyRNA* @RNA_def_string_dir_path(i8* %7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.35, i64 0, i64 0), i8* null, i32 1024, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.37, i64 0, i64 0)), !dbg !5840
  br label %if.end7, !dbg !5840

if.end7:                                          ; preds = %if.then4, %if.end
  %8 = load i16, i16* %flag.addr, align 2, !dbg !5841
  %conv8 = sext i16 %8 to i32, !dbg !5841
  %and9 = and i32 %conv8, 4, !dbg !5843
  %tobool10 = icmp ne i32 %and9, 0, !dbg !5843
  br i1 %tobool10, label %if.then11, label %if.end14, !dbg !5844

if.then11:                                        ; preds = %if.end7
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5845
  %srna12 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 11, !dbg !5846
  %10 = load %struct.StructRNA*, %struct.StructRNA** %srna12, align 8, !dbg !5846
  %11 = bitcast %struct.StructRNA* %10 to i8*, !dbg !5845
  %call13 = call %struct.PropertyRNA* @RNA_def_string_file_name(i8* %11, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38, i64 0, i64 0), i8* null, i32 1024, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.39, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.40, i64 0, i64 0)), !dbg !5847
  br label %if.end14, !dbg !5847

if.end14:                                         ; preds = %if.then11, %if.end7
  %12 = load i16, i16* %flag.addr, align 2, !dbg !5848
  %conv15 = sext i16 %12 to i32, !dbg !5848
  %and16 = and i32 %conv15, 16, !dbg !5850
  %tobool17 = icmp ne i32 %and16, 0, !dbg !5850
  br i1 %tobool17, label %if.then18, label %if.end21, !dbg !5851

if.then18:                                        ; preds = %if.end14
  %13 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5852
  %srna19 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %13, i32 0, i32 11, !dbg !5853
  %14 = load %struct.StructRNA*, %struct.StructRNA** %srna19, align 8, !dbg !5853
  %15 = bitcast %struct.StructRNA* %14 to i8*, !dbg !5852
  %call20 = call %struct.PropertyRNA* @RNA_def_collection_runtime(i8* %15, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.41, i64 0, i64 0), %struct.StructRNA* @RNA_OperatorFileListElement, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.42, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)), !dbg !5854
  br label %if.end21, !dbg !5854

if.end21:                                         ; preds = %if.then18, %if.end14
  %16 = load i16, i16* %action.addr, align 2, !dbg !5855
  %conv22 = sext i16 %16 to i32, !dbg !5855
  %cmp = icmp eq i32 %conv22, 1, !dbg !5857
  br i1 %cmp, label %if.then24, label %if.end27, !dbg !5858

if.then24:                                        ; preds = %if.end21
  %17 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5859
  %srna25 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %17, i32 0, i32 11, !dbg !5861
  %18 = load %struct.StructRNA*, %struct.StructRNA** %srna25, align 8, !dbg !5861
  %19 = bitcast %struct.StructRNA* %18 to i8*, !dbg !5859
  %call26 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %19, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.43, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.44, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.45, i64 0, i64 0)), !dbg !5862
  store %struct.PropertyRNA* %call26, %struct.PropertyRNA** %prop, align 8, !dbg !5863
  %20 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5864
  call void @RNA_def_property_flag(%struct.PropertyRNA* %20, i32 268959744), !dbg !5865
  br label %if.end27, !dbg !5866

if.end27:                                         ; preds = %if.then24, %if.end21
  %21 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5867
  %srna28 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %21, i32 0, i32 11, !dbg !5868
  %22 = load %struct.StructRNA*, %struct.StructRNA** %srna28, align 8, !dbg !5868
  %23 = bitcast %struct.StructRNA* %22 to i8*, !dbg !5867
  %24 = load i32, i32* %filter.addr, align 4, !dbg !5869
  %and29 = and i32 %24, 4, !dbg !5870
  %call30 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %23, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.46, i64 0, i64 0), i32 %and29, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.47, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)), !dbg !5871
  store %struct.PropertyRNA* %call30, %struct.PropertyRNA** %prop, align 8, !dbg !5872
  %25 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5873
  call void @RNA_def_property_flag(%struct.PropertyRNA* %25, i32 268959744), !dbg !5874
  %26 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5875
  %srna31 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %26, i32 0, i32 11, !dbg !5876
  %27 = load %struct.StructRNA*, %struct.StructRNA** %srna31, align 8, !dbg !5876
  %28 = bitcast %struct.StructRNA* %27 to i8*, !dbg !5875
  %29 = load i32, i32* %filter.addr, align 4, !dbg !5877
  %and32 = and i32 %29, 8, !dbg !5878
  %call33 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %28, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.48, i64 0, i64 0), i32 %and32, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.47, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)), !dbg !5879
  store %struct.PropertyRNA* %call33, %struct.PropertyRNA** %prop, align 8, !dbg !5880
  %30 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5881
  call void @RNA_def_property_flag(%struct.PropertyRNA* %30, i32 268959744), !dbg !5882
  %31 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5883
  %srna34 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %31, i32 0, i32 11, !dbg !5884
  %32 = load %struct.StructRNA*, %struct.StructRNA** %srna34, align 8, !dbg !5884
  %33 = bitcast %struct.StructRNA* %32 to i8*, !dbg !5883
  %34 = load i32, i32* %filter.addr, align 4, !dbg !5885
  %and35 = and i32 %34, 16, !dbg !5886
  %call36 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %33, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.49, i64 0, i64 0), i32 %and35, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.50, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)), !dbg !5887
  store %struct.PropertyRNA* %call36, %struct.PropertyRNA** %prop, align 8, !dbg !5888
  %35 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5889
  call void @RNA_def_property_flag(%struct.PropertyRNA* %35, i32 268959744), !dbg !5890
  %36 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5891
  %srna37 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %36, i32 0, i32 11, !dbg !5892
  %37 = load %struct.StructRNA*, %struct.StructRNA** %srna37, align 8, !dbg !5892
  %38 = bitcast %struct.StructRNA* %37 to i8*, !dbg !5891
  %39 = load i32, i32* %filter.addr, align 4, !dbg !5893
  %and38 = and i32 %39, 32, !dbg !5894
  %call39 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %38, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.51, i64 0, i64 0), i32 %and38, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.52, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)), !dbg !5895
  store %struct.PropertyRNA* %call39, %struct.PropertyRNA** %prop, align 8, !dbg !5896
  %40 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5897
  call void @RNA_def_property_flag(%struct.PropertyRNA* %40, i32 268959744), !dbg !5898
  %41 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5899
  %srna40 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %41, i32 0, i32 11, !dbg !5900
  %42 = load %struct.StructRNA*, %struct.StructRNA** %srna40, align 8, !dbg !5900
  %43 = bitcast %struct.StructRNA* %42 to i8*, !dbg !5899
  %44 = load i32, i32* %filter.addr, align 4, !dbg !5901
  %and41 = and i32 %44, 64, !dbg !5902
  %call42 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %43, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.53, i64 0, i64 0), i32 %and41, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.54, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)), !dbg !5903
  store %struct.PropertyRNA* %call42, %struct.PropertyRNA** %prop, align 8, !dbg !5904
  %45 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5905
  call void @RNA_def_property_flag(%struct.PropertyRNA* %45, i32 268959744), !dbg !5906
  %46 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5907
  %srna43 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %46, i32 0, i32 11, !dbg !5908
  %47 = load %struct.StructRNA*, %struct.StructRNA** %srna43, align 8, !dbg !5908
  %48 = bitcast %struct.StructRNA* %47 to i8*, !dbg !5907
  %49 = load i32, i32* %filter.addr, align 4, !dbg !5909
  %and44 = and i32 %49, 128, !dbg !5910
  %call45 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %48, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.55, i64 0, i64 0), i32 %and44, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.56, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)), !dbg !5911
  store %struct.PropertyRNA* %call45, %struct.PropertyRNA** %prop, align 8, !dbg !5912
  %50 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5913
  call void @RNA_def_property_flag(%struct.PropertyRNA* %50, i32 268959744), !dbg !5914
  %51 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5915
  %srna46 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %51, i32 0, i32 11, !dbg !5916
  %52 = load %struct.StructRNA*, %struct.StructRNA** %srna46, align 8, !dbg !5916
  %53 = bitcast %struct.StructRNA* %52 to i8*, !dbg !5915
  %54 = load i32, i32* %filter.addr, align 4, !dbg !5917
  %and47 = and i32 %54, 256, !dbg !5918
  %call48 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %53, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.57, i64 0, i64 0), i32 %and47, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.58, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)), !dbg !5919
  store %struct.PropertyRNA* %call48, %struct.PropertyRNA** %prop, align 8, !dbg !5920
  %55 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5921
  call void @RNA_def_property_flag(%struct.PropertyRNA* %55, i32 268959744), !dbg !5922
  %56 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5923
  %srna49 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %56, i32 0, i32 11, !dbg !5924
  %57 = load %struct.StructRNA*, %struct.StructRNA** %srna49, align 8, !dbg !5924
  %58 = bitcast %struct.StructRNA* %57 to i8*, !dbg !5923
  %59 = load i32, i32* %filter.addr, align 4, !dbg !5925
  %and50 = and i32 %59, 512, !dbg !5926
  %call51 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %58, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.59, i64 0, i64 0), i32 %and50, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.60, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)), !dbg !5927
  store %struct.PropertyRNA* %call51, %struct.PropertyRNA** %prop, align 8, !dbg !5928
  %60 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5929
  call void @RNA_def_property_flag(%struct.PropertyRNA* %60, i32 268959744), !dbg !5930
  %61 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5931
  %srna52 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %61, i32 0, i32 11, !dbg !5932
  %62 = load %struct.StructRNA*, %struct.StructRNA** %srna52, align 8, !dbg !5932
  %63 = bitcast %struct.StructRNA* %62 to i8*, !dbg !5931
  %64 = load i32, i32* %filter.addr, align 4, !dbg !5933
  %and53 = and i32 %64, 4096, !dbg !5934
  %call54 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %63, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.61, i64 0, i64 0), i32 %and53, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.62, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)), !dbg !5935
  store %struct.PropertyRNA* %call54, %struct.PropertyRNA** %prop, align 8, !dbg !5936
  %65 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5937
  call void @RNA_def_property_flag(%struct.PropertyRNA* %65, i32 268959744), !dbg !5938
  %66 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5939
  %srna55 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %66, i32 0, i32 11, !dbg !5940
  %67 = load %struct.StructRNA*, %struct.StructRNA** %srna55, align 8, !dbg !5940
  %68 = bitcast %struct.StructRNA* %67 to i8*, !dbg !5939
  %69 = load i32, i32* %filter.addr, align 4, !dbg !5941
  %and56 = and i32 %69, 8192, !dbg !5942
  %call57 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %68, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.63, i64 0, i64 0), i32 %and56, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.64, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)), !dbg !5943
  store %struct.PropertyRNA* %call57, %struct.PropertyRNA** %prop, align 8, !dbg !5944
  %70 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5945
  call void @RNA_def_property_flag(%struct.PropertyRNA* %70, i32 268959744), !dbg !5946
  %71 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5947
  %srna58 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %71, i32 0, i32 11, !dbg !5948
  %72 = load %struct.StructRNA*, %struct.StructRNA** %srna58, align 8, !dbg !5948
  %73 = bitcast %struct.StructRNA* %72 to i8*, !dbg !5947
  %74 = load i32, i32* %filter.addr, align 4, !dbg !5949
  %and59 = and i32 %74, 2048, !dbg !5950
  %call60 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %73, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.65, i64 0, i64 0), i32 %and59, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.66, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)), !dbg !5951
  store %struct.PropertyRNA* %call60, %struct.PropertyRNA** %prop, align 8, !dbg !5952
  %75 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5953
  call void @RNA_def_property_flag(%struct.PropertyRNA* %75, i32 268959744), !dbg !5954
  %76 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5955
  %srna61 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %76, i32 0, i32 11, !dbg !5956
  %77 = load %struct.StructRNA*, %struct.StructRNA** %srna61, align 8, !dbg !5956
  %78 = bitcast %struct.StructRNA* %77 to i8*, !dbg !5955
  %79 = load i16, i16* %type.addr, align 2, !dbg !5957
  %conv62 = sext i16 %79 to i32, !dbg !5957
  %call63 = call %struct.PropertyRNA* @RNA_def_int(i8* %78, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.67, i64 0, i64 0), i32 %conv62, i32 1, i32 9, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i64 0, i64 0), i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.69, i64 0, i64 0), i32 1, i32 9), !dbg !5958
  store %struct.PropertyRNA* %call63, %struct.PropertyRNA** %prop, align 8, !dbg !5959
  %80 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5960
  call void @RNA_def_property_flag(%struct.PropertyRNA* %80, i32 268959744), !dbg !5961
  %81 = load i16, i16* %flag.addr, align 2, !dbg !5962
  %conv64 = sext i16 %81 to i32, !dbg !5962
  %and65 = and i32 %conv64, 1, !dbg !5964
  %tobool66 = icmp ne i32 %and65, 0, !dbg !5964
  br i1 %tobool66, label %if.then67, label %if.end70, !dbg !5965

if.then67:                                        ; preds = %if.end27
  %82 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5966
  %srna68 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %82, i32 0, i32 11, !dbg !5967
  %83 = load %struct.StructRNA*, %struct.StructRNA** %srna68, align 8, !dbg !5967
  %84 = bitcast %struct.StructRNA* %83 to i8*, !dbg !5966
  %call69 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %84, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.70, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.71, i64 0, i64 0), i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.72, i64 0, i64 0)), !dbg !5968
  br label %if.end70, !dbg !5968

if.end70:                                         ; preds = %if.then67, %if.end27
  %85 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5969
  %srna71 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %85, i32 0, i32 11, !dbg !5970
  %86 = load %struct.StructRNA*, %struct.StructRNA** %srna71, align 8, !dbg !5970
  %87 = bitcast %struct.StructRNA* %86 to i8*, !dbg !5969
  %88 = load i16, i16* %display.addr, align 2, !dbg !5971
  %conv72 = sext i16 %88 to i32, !dbg !5971
  %call73 = call %struct.PropertyRNA* @RNA_def_enum(i8* %87, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.73, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([5 x %struct.EnumPropertyItem], [5 x %struct.EnumPropertyItem]* @WM_operator_properties_filesel.file_display_items, i64 0, i64 0), i32 %conv72, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.74, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)), !dbg !5972
  store %struct.PropertyRNA* %call73, %struct.PropertyRNA** %prop, align 8, !dbg !5973
  %89 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !5974
  call void @RNA_def_property_flag(%struct.PropertyRNA* %89, i32 268959744), !dbg !5975
  ret void, !dbg !5976
}

declare dso_local %struct.PropertyRNA* @RNA_def_string_file_path(i8*, i8*, i8*, i32, i8*, i8*) #2

declare dso_local %struct.PropertyRNA* @RNA_def_string_dir_path(i8*, i8*, i8*, i32, i8*, i8*) #2

declare dso_local %struct.PropertyRNA* @RNA_def_string_file_name(i8*, i8*, i8*, i32, i8*, i8*) #2

declare dso_local %struct.PropertyRNA* @RNA_def_collection_runtime(i8*, i8*, %struct.StructRNA*, i8*, i8*) #2

declare dso_local %struct.PropertyRNA* @RNA_def_boolean(i8*, i8*, i32, i8*, i8*) #2

declare dso_local %struct.PropertyRNA* @RNA_def_int(i8*, i8*, i32, i32, i32, i8*, i8*, i32, i32) #2

declare dso_local %struct.PropertyRNA* @RNA_def_enum(i8*, i8*, %struct.EnumPropertyItem*, i32, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_operator_properties_select_action(%struct.wmOperatorType* %ot, i32 %default_action) #0 !dbg !3242 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %default_action.addr = alloca i32, align 4
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5977, metadata !DIExpression()), !dbg !5978
  store i32 %default_action, i32* %default_action.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %default_action.addr, metadata !5979, metadata !DIExpression()), !dbg !5980
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5981
  %1 = load i32, i32* %default_action.addr, align 4, !dbg !5982
  call void @wm_operator_properties_select_action_ex(%struct.wmOperatorType* %0, i32 %1, %struct.EnumPropertyItem* getelementptr inbounds ([5 x %struct.EnumPropertyItem], [5 x %struct.EnumPropertyItem]* @WM_operator_properties_select_action.select_actions, i64 0, i64 0)), !dbg !5983
  ret void, !dbg !5984
}

; Function Attrs: noinline nounwind uwtable
define internal void @wm_operator_properties_select_action_ex(%struct.wmOperatorType* %ot, i32 %default_action, %struct.EnumPropertyItem* %select_actions) #0 !dbg !5985 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %default_action.addr = alloca i32, align 4
  %select_actions.addr = alloca %struct.EnumPropertyItem*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !5990, metadata !DIExpression()), !dbg !5991
  store i32 %default_action, i32* %default_action.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %default_action.addr, metadata !5992, metadata !DIExpression()), !dbg !5993
  store %struct.EnumPropertyItem* %select_actions, %struct.EnumPropertyItem** %select_actions.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem** %select_actions.addr, metadata !5994, metadata !DIExpression()), !dbg !5995
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !5996
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 11, !dbg !5997
  %1 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !5997
  %2 = bitcast %struct.StructRNA* %1 to i8*, !dbg !5996
  %3 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %select_actions.addr, align 8, !dbg !5998
  %4 = load i32, i32* %default_action.addr, align 4, !dbg !5999
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.175, i64 0, i64 0), %struct.EnumPropertyItem* %3, i32 %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.176, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.177, i64 0, i64 0)), !dbg !6000
  ret void, !dbg !6001
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_operator_properties_select_action_simple(%struct.wmOperatorType* %ot, i32 %default_action) #0 !dbg !3247 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %default_action.addr = alloca i32, align 4
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6002, metadata !DIExpression()), !dbg !6003
  store i32 %default_action, i32* %default_action.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %default_action.addr, metadata !6004, metadata !DIExpression()), !dbg !6005
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6006
  %1 = load i32, i32* %default_action.addr, align 4, !dbg !6007
  call void @wm_operator_properties_select_action_ex(%struct.wmOperatorType* %0, i32 %1, %struct.EnumPropertyItem* getelementptr inbounds ([3 x %struct.EnumPropertyItem], [3 x %struct.EnumPropertyItem]* @WM_operator_properties_select_action_simple.select_actions, i64 0, i64 0)), !dbg !6008
  ret void, !dbg !6009
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_operator_properties_select_all(%struct.wmOperatorType* %ot) #0 !dbg !6010 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6011, metadata !DIExpression()), !dbg !6012
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6013
  call void @WM_operator_properties_select_action(%struct.wmOperatorType* %0, i32 0), !dbg !6014
  ret void, !dbg !6015
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_operator_properties_border(%struct.wmOperatorType* %ot) #0 !dbg !6016 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6017, metadata !DIExpression()), !dbg !6018
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !6019, metadata !DIExpression()), !dbg !6020
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6021
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 11, !dbg !6022
  %1 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !6022
  %2 = bitcast %struct.StructRNA* %1 to i8*, !dbg !6021
  %call = call %struct.PropertyRNA* @RNA_def_int(i8* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i64 0, i64 0), i32 0, i32 -2147483648, i32 2147483647, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.88, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i32 -2147483648, i32 2147483647), !dbg !6023
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !6024
  %3 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6025
  call void @RNA_def_property_flag(%struct.PropertyRNA* %3, i32 268959744), !dbg !6026
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6027
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 11, !dbg !6028
  %5 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !6028
  %6 = bitcast %struct.StructRNA* %5 to i8*, !dbg !6027
  %call2 = call %struct.PropertyRNA* @RNA_def_int(i8* %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.89, i64 0, i64 0), i32 0, i32 -2147483648, i32 2147483647, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.90, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i32 -2147483648, i32 2147483647), !dbg !6029
  store %struct.PropertyRNA* %call2, %struct.PropertyRNA** %prop, align 8, !dbg !6030
  %7 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6031
  call void @RNA_def_property_flag(%struct.PropertyRNA* %7, i32 268959744), !dbg !6032
  %8 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6033
  %srna3 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %8, i32 0, i32 11, !dbg !6034
  %9 = load %struct.StructRNA*, %struct.StructRNA** %srna3, align 8, !dbg !6034
  %10 = bitcast %struct.StructRNA* %9 to i8*, !dbg !6033
  %call4 = call %struct.PropertyRNA* @RNA_def_int(i8* %10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.91, i64 0, i64 0), i32 0, i32 -2147483648, i32 2147483647, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.92, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i32 -2147483648, i32 2147483647), !dbg !6035
  store %struct.PropertyRNA* %call4, %struct.PropertyRNA** %prop, align 8, !dbg !6036
  %11 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6037
  call void @RNA_def_property_flag(%struct.PropertyRNA* %11, i32 268959744), !dbg !6038
  %12 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6039
  %srna5 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %12, i32 0, i32 11, !dbg !6040
  %13 = load %struct.StructRNA*, %struct.StructRNA** %srna5, align 8, !dbg !6040
  %14 = bitcast %struct.StructRNA* %13 to i8*, !dbg !6039
  %call6 = call %struct.PropertyRNA* @RNA_def_int(i8* %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.93, i64 0, i64 0), i32 0, i32 -2147483648, i32 2147483647, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.94, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i32 -2147483648, i32 2147483647), !dbg !6041
  store %struct.PropertyRNA* %call6, %struct.PropertyRNA** %prop, align 8, !dbg !6042
  %15 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6043
  call void @RNA_def_property_flag(%struct.PropertyRNA* %15, i32 268959744), !dbg !6044
  ret void, !dbg !6045
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_operator_properties_border_to_rcti(%struct.wmOperator* %op, %struct.rcti* %rect) #0 !dbg !6046 {
entry:
  %op.addr = alloca %struct.wmOperator*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !6050, metadata !DIExpression()), !dbg !6051
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !6052, metadata !DIExpression()), !dbg !6053
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6054
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 7, !dbg !6055
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !6055
  %call = call i32 @RNA_int_get(%struct.PointerRNA* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i64 0, i64 0)), !dbg !6056
  %2 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !6057
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %2, i32 0, i32 0, !dbg !6058
  store i32 %call, i32* %xmin, align 4, !dbg !6059
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6060
  %ptr1 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 7, !dbg !6061
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr1, align 8, !dbg !6061
  %call2 = call i32 @RNA_int_get(%struct.PointerRNA* %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.91, i64 0, i64 0)), !dbg !6062
  %5 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !6063
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %5, i32 0, i32 2, !dbg !6064
  store i32 %call2, i32* %ymin, align 4, !dbg !6065
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6066
  %ptr3 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 7, !dbg !6067
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr3, align 8, !dbg !6067
  %call4 = call i32 @RNA_int_get(%struct.PointerRNA* %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.89, i64 0, i64 0)), !dbg !6068
  %8 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !6069
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %8, i32 0, i32 1, !dbg !6070
  store i32 %call4, i32* %xmax, align 4, !dbg !6071
  %9 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6072
  %ptr5 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %9, i32 0, i32 7, !dbg !6073
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr5, align 8, !dbg !6073
  %call6 = call i32 @RNA_int_get(%struct.PointerRNA* %10, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.93, i64 0, i64 0)), !dbg !6074
  %11 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !6075
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %11, i32 0, i32 3, !dbg !6076
  store i32 %call6, i32* %ymax, align 4, !dbg !6077
  ret void, !dbg !6078
}

declare dso_local i32 @RNA_int_get(%struct.PointerRNA*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_operator_properties_border_to_rctf(%struct.wmOperator* %op, %struct.rctf* %rect) #0 !dbg !6079 {
entry:
  %op.addr = alloca %struct.wmOperator*, align 8
  %rect.addr = alloca %struct.rctf*, align 8
  %rect_i = alloca %struct.rcti, align 4
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !6083, metadata !DIExpression()), !dbg !6084
  store %struct.rctf* %rect, %struct.rctf** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rctf** %rect.addr, metadata !6085, metadata !DIExpression()), !dbg !6086
  call void @llvm.dbg.declare(metadata %struct.rcti* %rect_i, metadata !6087, metadata !DIExpression()), !dbg !6088
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6089
  call void @WM_operator_properties_border_to_rcti(%struct.wmOperator* %0, %struct.rcti* %rect_i), !dbg !6090
  %1 = load %struct.rctf*, %struct.rctf** %rect.addr, align 8, !dbg !6091
  call void @BLI_rctf_rcti_copy(%struct.rctf* %1, %struct.rcti* %rect_i), !dbg !6092
  ret void, !dbg !6093
}

declare dso_local void @BLI_rctf_rcti_copy(%struct.rctf*, %struct.rcti*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_operator_properties_gesture_border(%struct.wmOperatorType* %ot, i8 zeroext %extend) #0 !dbg !6094 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %extend.addr = alloca i8, align 1
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6097, metadata !DIExpression()), !dbg !6098
  store i8 %extend, i8* %extend.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %extend.addr, metadata !6099, metadata !DIExpression()), !dbg !6100
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6101
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 11, !dbg !6102
  %1 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !6102
  %2 = bitcast %struct.StructRNA* %1 to i8*, !dbg !6101
  %call = call %struct.PropertyRNA* @RNA_def_int(i8* %2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.95, i64 0, i64 0), i32 0, i32 -2147483648, i32 2147483647, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.96, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i32 -2147483648, i32 2147483647), !dbg !6103
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6104
  call void @WM_operator_properties_border(%struct.wmOperatorType* %3), !dbg !6105
  %4 = load i8, i8* %extend.addr, align 1, !dbg !6106
  %tobool = icmp ne i8 %4, 0, !dbg !6106
  br i1 %tobool, label %if.then, label %if.end, !dbg !6108

if.then:                                          ; preds = %entry
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6109
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 11, !dbg !6111
  %6 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !6111
  %7 = bitcast %struct.StructRNA* %6 to i8*, !dbg !6109
  %call2 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.97, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.98, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.99, i64 0, i64 0)), !dbg !6112
  br label %if.end, !dbg !6113

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6114
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_operator_properties_mouse_select(%struct.wmOperatorType* %ot) #0 !dbg !6115 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6116, metadata !DIExpression()), !dbg !6117
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !6118, metadata !DIExpression()), !dbg !6119
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6120
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 11, !dbg !6121
  %1 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !6121
  %2 = bitcast %struct.StructRNA* %1 to i8*, !dbg !6120
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.97, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.98, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.99, i64 0, i64 0)), !dbg !6122
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !6123
  %3 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6124
  call void @RNA_def_property_flag(%struct.PropertyRNA* %3, i32 268435456), !dbg !6125
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6126
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 11, !dbg !6127
  %5 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !6127
  %6 = bitcast %struct.StructRNA* %5 to i8*, !dbg !6126
  %call2 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.100, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.82, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.101, i64 0, i64 0)), !dbg !6128
  store %struct.PropertyRNA* %call2, %struct.PropertyRNA** %prop, align 8, !dbg !6129
  %7 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6130
  call void @RNA_def_property_flag(%struct.PropertyRNA* %7, i32 268435456), !dbg !6131
  %8 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6132
  %srna3 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %8, i32 0, i32 11, !dbg !6133
  %9 = load %struct.StructRNA*, %struct.StructRNA** %srna3, align 8, !dbg !6133
  %10 = bitcast %struct.StructRNA* %9 to i8*, !dbg !6132
  %call4 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %10, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.102, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.103, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.104, i64 0, i64 0)), !dbg !6134
  store %struct.PropertyRNA* %call4, %struct.PropertyRNA** %prop, align 8, !dbg !6135
  %11 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6136
  call void @RNA_def_property_flag(%struct.PropertyRNA* %11, i32 268435456), !dbg !6137
  ret void, !dbg !6138
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_operator_properties_gesture_straightline(%struct.wmOperatorType* %ot, i32 %cursor) #0 !dbg !6139 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %cursor.addr = alloca i32, align 4
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !6140, metadata !DIExpression()), !dbg !6141
  store i32 %cursor, i32* %cursor.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cursor.addr, metadata !6142, metadata !DIExpression()), !dbg !6143
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !6144, metadata !DIExpression()), !dbg !6145
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6146
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 11, !dbg !6147
  %1 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !6147
  %2 = bitcast %struct.StructRNA* %1 to i8*, !dbg !6146
  %call = call %struct.PropertyRNA* @RNA_def_int(i8* %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.105, i64 0, i64 0), i32 0, i32 -2147483648, i32 2147483647, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.106, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i32 -2147483648, i32 2147483647), !dbg !6148
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !6149
  %3 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6150
  call void @RNA_def_property_flag(%struct.PropertyRNA* %3, i32 268959744), !dbg !6151
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6152
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 11, !dbg !6153
  %5 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !6153
  %6 = bitcast %struct.StructRNA* %5 to i8*, !dbg !6152
  %call2 = call %struct.PropertyRNA* @RNA_def_int(i8* %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.107, i64 0, i64 0), i32 0, i32 -2147483648, i32 2147483647, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.108, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i32 -2147483648, i32 2147483647), !dbg !6154
  store %struct.PropertyRNA* %call2, %struct.PropertyRNA** %prop, align 8, !dbg !6155
  %7 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6156
  call void @RNA_def_property_flag(%struct.PropertyRNA* %7, i32 268959744), !dbg !6157
  %8 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6158
  %srna3 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %8, i32 0, i32 11, !dbg !6159
  %9 = load %struct.StructRNA*, %struct.StructRNA** %srna3, align 8, !dbg !6159
  %10 = bitcast %struct.StructRNA* %9 to i8*, !dbg !6158
  %call4 = call %struct.PropertyRNA* @RNA_def_int(i8* %10, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.109, i64 0, i64 0), i32 0, i32 -2147483648, i32 2147483647, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.110, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i32 -2147483648, i32 2147483647), !dbg !6160
  store %struct.PropertyRNA* %call4, %struct.PropertyRNA** %prop, align 8, !dbg !6161
  %11 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6162
  call void @RNA_def_property_flag(%struct.PropertyRNA* %11, i32 268959744), !dbg !6163
  %12 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6164
  %srna5 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %12, i32 0, i32 11, !dbg !6165
  %13 = load %struct.StructRNA*, %struct.StructRNA** %srna5, align 8, !dbg !6165
  %14 = bitcast %struct.StructRNA* %13 to i8*, !dbg !6164
  %call6 = call %struct.PropertyRNA* @RNA_def_int(i8* %14, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.111, i64 0, i64 0), i32 0, i32 -2147483648, i32 2147483647, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.112, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i32 -2147483648, i32 2147483647), !dbg !6166
  store %struct.PropertyRNA* %call6, %struct.PropertyRNA** %prop, align 8, !dbg !6167
  %15 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6168
  call void @RNA_def_property_flag(%struct.PropertyRNA* %15, i32 268959744), !dbg !6169
  %16 = load i32, i32* %cursor.addr, align 4, !dbg !6170
  %tobool = icmp ne i32 %16, 0, !dbg !6170
  br i1 %tobool, label %if.then, label %if.end, !dbg !6172

if.then:                                          ; preds = %entry
  %17 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !6173
  %srna7 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %17, i32 0, i32 11, !dbg !6175
  %18 = load %struct.StructRNA*, %struct.StructRNA** %srna7, align 8, !dbg !6175
  %19 = bitcast %struct.StructRNA* %18 to i8*, !dbg !6173
  %20 = load i32, i32* %cursor.addr, align 4, !dbg !6176
  %call8 = call %struct.PropertyRNA* @RNA_def_int(i8* %19, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.113, i64 0, i64 0), i32 %20, i32 0, i32 2147483647, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.114, i64 0, i64 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.115, i64 0, i64 0), i32 0, i32 2147483647), !dbg !6177
  store %struct.PropertyRNA* %call8, %struct.PropertyRNA** %prop, align 8, !dbg !6178
  %21 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !6179
  call void @RNA_def_property_flag(%struct.PropertyRNA* %21, i32 524288), !dbg !6180
  br label %if.end, !dbg !6181

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6182
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @WM_operator_winactive(%struct.bContext* %C) #0 !dbg !6183 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6186, metadata !DIExpression()), !dbg !6187
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6188
  %call = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %0), !dbg !6190
  %cmp = icmp eq %struct.wmWindow* %call, null, !dbg !6191
  br i1 %cmp, label %if.then, label %if.end, !dbg !6192

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6193
  br label %return, !dbg !6193

if.end:                                           ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !6194
  br label %return, !dbg !6194

return:                                           ; preds = %if.end, %if.then
  %1 = load i32, i32* %retval, align 4, !dbg !6195
  ret i32 %1, !dbg !6195
}

declare dso_local %struct.wmWindow* @CTX_wm_window(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @WM_operator_check_ui_enabled(%struct.bContext* %C, i8* %idname) #0 !dbg !6196 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %idname.addr = alloca i8*, align 8
  %wm = alloca %struct.wmWindowManager*, align 8
  %scene = alloca %struct.Scene*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6201, metadata !DIExpression()), !dbg !6202
  store i8* %idname, i8** %idname.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %idname.addr, metadata !6203, metadata !DIExpression()), !dbg !6204
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm, metadata !6205, metadata !DIExpression()), !dbg !6208
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6209
  %call = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %0), !dbg !6210
  store %struct.wmWindowManager* %call, %struct.wmWindowManager** %wm, align 8, !dbg !6208
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !6211, metadata !DIExpression()), !dbg !6212
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6213
  %call1 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %1), !dbg !6214
  store %struct.Scene* %call1, %struct.Scene** %scene, align 8, !dbg !6212
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6215
  %3 = load i8*, i8** %idname.addr, align 8, !dbg !6216
  %call2 = call i32 @ED_undo_valid(%struct.bContext* %2, i8* %3), !dbg !6217
  %cmp = icmp eq i32 %call2, 0, !dbg !6218
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !6219

lor.rhs:                                          ; preds = %entry
  %4 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !6220
  %5 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !6221
  %6 = bitcast %struct.Scene* %5 to i8*, !dbg !6221
  %call3 = call zeroext i8 @WM_jobs_test(%struct.wmWindowManager* %4, i8* %6, i32 0), !dbg !6222
  %conv = zext i8 %call3 to i32, !dbg !6222
  %tobool = icmp ne i32 %conv, 0, !dbg !6219
  br label %lor.end, !dbg !6219

lor.end:                                          ; preds = %lor.rhs, %entry
  %7 = phi i1 [ true, %entry ], [ %tobool, %lor.rhs ]
  %lnot = xor i1 %7, true, !dbg !6223
  %lnot.ext = zext i1 %lnot to i32, !dbg !6223
  %conv4 = trunc i32 %lnot.ext to i8, !dbg !6223
  ret i8 %conv4, !dbg !6224
}

declare dso_local %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext*) #2

declare dso_local i32 @ED_undo_valid(%struct.bContext*, i8*) #2

declare dso_local zeroext i8 @WM_jobs_test(%struct.wmWindowManager*, i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.wmOperator* @WM_operator_last_redo(%struct.bContext* %C) #0 !dbg !6225 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %wm = alloca %struct.wmWindowManager*, align 8
  %op = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6228, metadata !DIExpression()), !dbg !6229
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm, metadata !6230, metadata !DIExpression()), !dbg !6231
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6232
  %call = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %0), !dbg !6233
  store %struct.wmWindowManager* %call, %struct.wmWindowManager** %wm, align 8, !dbg !6231
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op, metadata !6234, metadata !DIExpression()), !dbg !6235
  %1 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !6236
  %operators = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %1, i32 0, i32 7, !dbg !6238
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %operators, i32 0, i32 1, !dbg !6239
  %2 = load i8*, i8** %last, align 8, !dbg !6239
  %3 = bitcast i8* %2 to %struct.wmOperator*, !dbg !6236
  store %struct.wmOperator* %3, %struct.wmOperator** %op, align 8, !dbg !6240
  br label %for.cond, !dbg !6241

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !6242
  %tobool = icmp ne %struct.wmOperator* %4, null, !dbg !6244
  br i1 %tobool, label %for.body, label %for.end, !dbg !6244

for.body:                                         ; preds = %for.cond
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !6245
  %type = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %5, i32 0, i32 4, !dbg !6247
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type, align 8, !dbg !6247
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 19, !dbg !6248
  %7 = load i16, i16* %flag, align 8, !dbg !6248
  %conv = sext i16 %7 to i32, !dbg !6245
  %and = and i32 %conv, 1, !dbg !6249
  %tobool1 = icmp ne i32 %and, 0, !dbg !6249
  br i1 %tobool1, label %land.lhs.true, label %if.end, !dbg !6250

land.lhs.true:                                    ; preds = %for.body
  %8 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !6251
  %type2 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %8, i32 0, i32 4, !dbg !6252
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type2, align 8, !dbg !6252
  %flag3 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 19, !dbg !6253
  %10 = load i16, i16* %flag3, align 8, !dbg !6253
  %conv4 = sext i16 %10 to i32, !dbg !6251
  %and5 = and i32 %conv4, 2, !dbg !6254
  %tobool6 = icmp ne i32 %and5, 0, !dbg !6254
  br i1 %tobool6, label %if.then, label %if.end, !dbg !6255

if.then:                                          ; preds = %land.lhs.true
  br label %for.end, !dbg !6256

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !6257

for.inc:                                          ; preds = %if.end
  %11 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !6258
  %prev = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %11, i32 0, i32 1, !dbg !6259
  %12 = load %struct.wmOperator*, %struct.wmOperator** %prev, align 8, !dbg !6259
  store %struct.wmOperator* %12, %struct.wmOperator** %op, align 8, !dbg !6260
  br label %for.cond, !dbg !6261, !llvm.loop !6262

for.end:                                          ; preds = %if.then, %for.cond
  %13 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !6264
  ret %struct.wmOperator* %13, !dbg !6265
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @WM_operator_ui_popup(%struct.bContext* %C, %struct.wmOperator* %op, i32 %width, i32 %height) #0 !dbg !6266 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %width.addr = alloca i32, align 4
  %height.addr = alloca i32, align 4
  %data = alloca %struct.wmOpPopUp*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6269, metadata !DIExpression()), !dbg !6270
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !6271, metadata !DIExpression()), !dbg !6272
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !6273, metadata !DIExpression()), !dbg !6274
  store i32 %height, i32* %height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %height.addr, metadata !6275, metadata !DIExpression()), !dbg !6276
  call void @llvm.dbg.declare(metadata %struct.wmOpPopUp** %data, metadata !6277, metadata !DIExpression()), !dbg !6286
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6287
  %call = call i8* %0(i64 24, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.116, i64 0, i64 0)), !dbg !6287
  %1 = bitcast i8* %call to %struct.wmOpPopUp*, !dbg !6287
  store %struct.wmOpPopUp* %1, %struct.wmOpPopUp** %data, align 8, !dbg !6286
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6288
  %3 = load %struct.wmOpPopUp*, %struct.wmOpPopUp** %data, align 8, !dbg !6289
  %op1 = getelementptr inbounds %struct.wmOpPopUp, %struct.wmOpPopUp* %3, i32 0, i32 0, !dbg !6290
  store %struct.wmOperator* %2, %struct.wmOperator** %op1, align 8, !dbg !6291
  %4 = load i32, i32* %width.addr, align 4, !dbg !6292
  %5 = load %struct.wmOpPopUp*, %struct.wmOpPopUp** %data, align 8, !dbg !6293
  %width2 = getelementptr inbounds %struct.wmOpPopUp, %struct.wmOpPopUp* %5, i32 0, i32 1, !dbg !6294
  store i32 %4, i32* %width2, align 8, !dbg !6295
  %6 = load i32, i32* %height.addr, align 4, !dbg !6296
  %7 = load %struct.wmOpPopUp*, %struct.wmOpPopUp** %data, align 8, !dbg !6297
  %height3 = getelementptr inbounds %struct.wmOpPopUp, %struct.wmOpPopUp* %7, i32 0, i32 2, !dbg !6298
  store i32 %6, i32* %height3, align 4, !dbg !6299
  %8 = load %struct.wmOpPopUp*, %struct.wmOpPopUp** %data, align 8, !dbg !6300
  %free_op = getelementptr inbounds %struct.wmOpPopUp, %struct.wmOpPopUp* %8, i32 0, i32 3, !dbg !6301
  store i32 1, i32* %free_op, align 8, !dbg !6302
  %9 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6303
  %10 = load %struct.wmOpPopUp*, %struct.wmOpPopUp** %data, align 8, !dbg !6304
  %11 = bitcast %struct.wmOpPopUp* %10 to i8*, !dbg !6304
  call void @uiPupBlockEx(%struct.bContext* %9, %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)* @wm_operator_ui_create, void (%struct.bContext*, i8*, i32)* null, void (%struct.bContext*, i8*)* @wm_operator_ui_popup_cancel, i8* %11), !dbg !6305
  ret i32 1, !dbg !6306
}

declare dso_local void @uiPupBlockEx(%struct.bContext*, %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)*, void (%struct.bContext*, i8*, i32)*, void (%struct.bContext*, i8*)*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.uiBlock* @wm_operator_ui_create(%struct.bContext* %C, %struct.ARegion* %ar, i8* %userData) #0 !dbg !6307 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %userData.addr = alloca i8*, align 8
  %data = alloca %struct.wmOpPopUp*, align 8
  %op = alloca %struct.wmOperator*, align 8
  %block = alloca %struct.uiBlock*, align 8
  %layout = alloca %struct.uiLayout*, align 8
  %style = alloca %struct.uiStyle*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6308, metadata !DIExpression()), !dbg !6309
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !6310, metadata !DIExpression()), !dbg !6311
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !6312, metadata !DIExpression()), !dbg !6313
  call void @llvm.dbg.declare(metadata %struct.wmOpPopUp** %data, metadata !6314, metadata !DIExpression()), !dbg !6315
  %0 = load i8*, i8** %userData.addr, align 8, !dbg !6316
  %1 = bitcast i8* %0 to %struct.wmOpPopUp*, !dbg !6316
  store %struct.wmOpPopUp* %1, %struct.wmOpPopUp** %data, align 8, !dbg !6315
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op, metadata !6317, metadata !DIExpression()), !dbg !6318
  %2 = load %struct.wmOpPopUp*, %struct.wmOpPopUp** %data, align 8, !dbg !6319
  %op1 = getelementptr inbounds %struct.wmOpPopUp, %struct.wmOpPopUp* %2, i32 0, i32 0, !dbg !6320
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op1, align 8, !dbg !6320
  store %struct.wmOperator* %3, %struct.wmOperator** %op, align 8, !dbg !6318
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block, metadata !6321, metadata !DIExpression()), !dbg !6322
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout, metadata !6323, metadata !DIExpression()), !dbg !6324
  call void @llvm.dbg.declare(metadata %struct.uiStyle** %style, metadata !6325, metadata !DIExpression()), !dbg !6364
  %call = call %struct.uiStyle* @UI_GetStyle(), !dbg !6365
  store %struct.uiStyle* %call, %struct.uiStyle** %style, align 8, !dbg !6364
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6366
  %5 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !6367
  %call2 = call %struct.uiBlock* @uiBeginBlock(%struct.bContext* %4, %struct.ARegion* %5, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.wm_operator_ui_create, i64 0, i64 0), i16 signext 0), !dbg !6368
  store %struct.uiBlock* %call2, %struct.uiBlock** %block, align 8, !dbg !6369
  %6 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6370
  call void @uiBlockClearFlag(%struct.uiBlock* %6, i32 1), !dbg !6371
  %7 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6372
  call void @uiBlockSetFlag(%struct.uiBlock* %7, i32 384), !dbg !6373
  %8 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6374
  %9 = load %struct.wmOpPopUp*, %struct.wmOpPopUp** %data, align 8, !dbg !6375
  %width = getelementptr inbounds %struct.wmOpPopUp, %struct.wmOpPopUp* %9, i32 0, i32 1, !dbg !6376
  %10 = load i32, i32* %width, align 8, !dbg !6376
  %11 = load %struct.wmOpPopUp*, %struct.wmOpPopUp** %data, align 8, !dbg !6377
  %height = getelementptr inbounds %struct.wmOpPopUp, %struct.wmOpPopUp* %11, i32 0, i32 2, !dbg !6378
  %12 = load i32, i32* %height, align 4, !dbg !6378
  %13 = load %struct.uiStyle*, %struct.uiStyle** %style, align 8, !dbg !6379
  %call3 = call %struct.uiLayout* @uiBlockLayout(%struct.uiBlock* %8, i32 1, i32 0, i32 0, i32 0, i32 %10, i32 %12, i32 0, %struct.uiStyle* %13), !dbg !6380
  store %struct.uiLayout* %call3, %struct.uiLayout** %layout, align 8, !dbg !6381
  %14 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6382
  %15 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !6383
  %16 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !6384
  call void @uiLayoutOperatorButs(%struct.bContext* %14, %struct.uiLayout* %15, %struct.wmOperator* %16, i8 (%struct.PointerRNA*, %struct.PropertyRNA*)* null, i8 zeroext 86, i16 signext 0), !dbg !6385
  %17 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6386
  call void @uiPopupBoundsBlock(%struct.uiBlock* %17, i32 4, i32 0, i32 0), !dbg !6387
  %18 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6388
  ret %struct.uiBlock* %18, !dbg !6389
}

; Function Attrs: noinline nounwind uwtable
define internal void @wm_operator_ui_popup_cancel(%struct.bContext* %C, i8* %userData) #0 !dbg !6390 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %userData.addr = alloca i8*, align 8
  %data = alloca %struct.wmOpPopUp*, align 8
  %op = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6391, metadata !DIExpression()), !dbg !6392
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !6393, metadata !DIExpression()), !dbg !6394
  call void @llvm.dbg.declare(metadata %struct.wmOpPopUp** %data, metadata !6395, metadata !DIExpression()), !dbg !6396
  %0 = load i8*, i8** %userData.addr, align 8, !dbg !6397
  %1 = bitcast i8* %0 to %struct.wmOpPopUp*, !dbg !6397
  store %struct.wmOpPopUp* %1, %struct.wmOpPopUp** %data, align 8, !dbg !6396
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op, metadata !6398, metadata !DIExpression()), !dbg !6399
  %2 = load %struct.wmOpPopUp*, %struct.wmOpPopUp** %data, align 8, !dbg !6400
  %op1 = getelementptr inbounds %struct.wmOpPopUp, %struct.wmOpPopUp* %2, i32 0, i32 0, !dbg !6401
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op1, align 8, !dbg !6401
  store %struct.wmOperator* %3, %struct.wmOperator** %op, align 8, !dbg !6399
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !6402
  %tobool = icmp ne %struct.wmOperator* %4, null, !dbg !6402
  br i1 %tobool, label %if.then, label %if.end9, !dbg !6404

if.then:                                          ; preds = %entry
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !6405
  %type = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %5, i32 0, i32 4, !dbg !6408
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type, align 8, !dbg !6408
  %cancel = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 7, !dbg !6409
  %7 = load void (%struct.bContext*, %struct.wmOperator*)*, void (%struct.bContext*, %struct.wmOperator*)** %cancel, align 8, !dbg !6409
  %tobool2 = icmp ne void (%struct.bContext*, %struct.wmOperator*)* %7, null, !dbg !6405
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !6410

if.then3:                                         ; preds = %if.then
  %8 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !6411
  %type4 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %8, i32 0, i32 4, !dbg !6413
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type4, align 8, !dbg !6413
  %cancel5 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 7, !dbg !6414
  %10 = load void (%struct.bContext*, %struct.wmOperator*)*, void (%struct.bContext*, %struct.wmOperator*)** %cancel5, align 8, !dbg !6414
  %11 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6415
  %12 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !6416
  call void %10(%struct.bContext* %11, %struct.wmOperator* %12), !dbg !6411
  br label %if.end, !dbg !6417

if.end:                                           ; preds = %if.then3, %if.then
  %13 = load %struct.wmOpPopUp*, %struct.wmOpPopUp** %data, align 8, !dbg !6418
  %free_op = getelementptr inbounds %struct.wmOpPopUp, %struct.wmOpPopUp* %13, i32 0, i32 3, !dbg !6420
  %14 = load i32, i32* %free_op, align 8, !dbg !6420
  %tobool6 = icmp ne i32 %14, 0, !dbg !6418
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !6421

if.then7:                                         ; preds = %if.end
  %15 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !6422
  call void @WM_operator_free(%struct.wmOperator* %15), !dbg !6424
  br label %if.end8, !dbg !6425

if.end8:                                          ; preds = %if.then7, %if.end
  br label %if.end9, !dbg !6426

if.end9:                                          ; preds = %if.end8, %entry
  %16 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6427
  %17 = load %struct.wmOpPopUp*, %struct.wmOpPopUp** %data, align 8, !dbg !6428
  %18 = bitcast %struct.wmOpPopUp* %17 to i8*, !dbg !6428
  call void %16(i8* %18), !dbg !6427
  ret void, !dbg !6429
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @WM_operator_props_popup_confirm(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %UNUSED_event) #0 !dbg !6430 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %UNUSED_event.addr = alloca %struct.wmEvent*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6431, metadata !DIExpression()), !dbg !6432
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !6433, metadata !DIExpression()), !dbg !6434
  store %struct.wmEvent* %UNUSED_event, %struct.wmEvent** %UNUSED_event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %UNUSED_event.addr, metadata !6435, metadata !DIExpression()), !dbg !6436
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6437
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6438
  %call = call i32 @wm_operator_props_popup_ex(%struct.bContext* %0, %struct.wmOperator* %1, i8 zeroext 0, i8 zeroext 0), !dbg !6439
  ret i32 %call, !dbg !6440
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @wm_operator_props_popup_ex(%struct.bContext* %C, %struct.wmOperator* %op, i8 zeroext %do_call, i8 zeroext %do_redo) #0 !dbg !6441 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %do_call.addr = alloca i8, align 1
  %do_redo.addr = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6444, metadata !DIExpression()), !dbg !6445
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !6446, metadata !DIExpression()), !dbg !6447
  store i8 %do_call, i8* %do_call.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_call.addr, metadata !6448, metadata !DIExpression()), !dbg !6449
  store i8 %do_redo, i8* %do_redo.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_redo.addr, metadata !6450, metadata !DIExpression()), !dbg !6451
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6452
  %type = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 4, !dbg !6454
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type, align 8, !dbg !6454
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 19, !dbg !6455
  %2 = load i16, i16* %flag, align 8, !dbg !6455
  %conv = sext i16 %2 to i32, !dbg !6452
  %and = and i32 %conv, 1, !dbg !6456
  %cmp = icmp eq i32 %and, 0, !dbg !6457
  br i1 %cmp, label %if.then, label %if.end, !dbg !6458

if.then:                                          ; preds = %entry
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6459
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 8, !dbg !6461
  %4 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !6461
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6462
  %type2 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %5, i32 0, i32 4, !dbg !6463
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type2, align 8, !dbg !6463
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 1, !dbg !6464
  %7 = load i8*, i8** %idname, align 8, !dbg !6464
  call void (%struct.ReportList*, i32, i8*, ...) @BKE_reportf(%struct.ReportList* %4, i32 32, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.178, i64 0, i64 0), i8* %7), !dbg !6465
  store i32 2, i32* %retval, align 4, !dbg !6466
  br label %return, !dbg !6466

if.end:                                           ; preds = %entry
  %8 = load i8, i8* %do_redo.addr, align 1, !dbg !6467
  %tobool = icmp ne i8 %8, 0, !dbg !6467
  br i1 %tobool, label %if.then3, label %if.end15, !dbg !6469

if.then3:                                         ; preds = %if.end
  %9 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6470
  %type4 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %9, i32 0, i32 4, !dbg !6473
  %10 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type4, align 8, !dbg !6473
  %flag5 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %10, i32 0, i32 19, !dbg !6474
  %11 = load i16, i16* %flag5, align 8, !dbg !6474
  %conv6 = sext i16 %11 to i32, !dbg !6470
  %and7 = and i32 %conv6, 2, !dbg !6475
  %cmp8 = icmp eq i32 %and7, 0, !dbg !6476
  br i1 %cmp8, label %if.then10, label %if.end14, !dbg !6477

if.then10:                                        ; preds = %if.then3
  %12 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6478
  %reports11 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %12, i32 0, i32 8, !dbg !6480
  %13 = load %struct.ReportList*, %struct.ReportList** %reports11, align 8, !dbg !6480
  %14 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6481
  %type12 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %14, i32 0, i32 4, !dbg !6482
  %15 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type12, align 8, !dbg !6482
  %idname13 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %15, i32 0, i32 1, !dbg !6483
  %16 = load i8*, i8** %idname13, align 8, !dbg !6483
  call void (%struct.ReportList*, i32, i8*, ...) @BKE_reportf(%struct.ReportList* %13, i32 32, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.179, i64 0, i64 0), i8* %16), !dbg !6484
  store i32 2, i32* %retval, align 4, !dbg !6485
  br label %return, !dbg !6485

if.end14:                                         ; preds = %if.then3
  br label %if.end15, !dbg !6486

if.end15:                                         ; preds = %if.end14, %if.end
  %17 = load i8, i8* %do_redo.addr, align 1, !dbg !6487
  %tobool16 = icmp ne i8 %17, 0, !dbg !6487
  br i1 %tobool16, label %lor.lhs.false, label %if.then19, !dbg !6489

lor.lhs.false:                                    ; preds = %if.end15
  %18 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 22), align 4, !dbg !6490
  %and17 = and i32 %18, 8192, !dbg !6491
  %tobool18 = icmp ne i32 %and17, 0, !dbg !6491
  br i1 %tobool18, label %if.end22, label %if.then19, !dbg !6492

if.then19:                                        ; preds = %lor.lhs.false, %if.end15
  %19 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6493
  %20 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6494
  %21 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !6495
  %conv20 = sext i16 %21 to i32, !dbg !6495
  %mul = mul nsw i32 15, %conv20, !dbg !6496
  %22 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !6497
  %conv21 = sext i16 %22 to i32, !dbg !6497
  %call = call i32 @WM_operator_props_dialog_popup(%struct.bContext* %19, %struct.wmOperator* %20, i32 %mul, i32 %conv21), !dbg !6498
  store i32 %call, i32* %retval, align 4, !dbg !6499
  br label %return, !dbg !6499

if.end22:                                         ; preds = %lor.lhs.false
  %23 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6500
  %24 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6501
  %25 = bitcast %struct.wmOperator* %24 to i8*, !dbg !6501
  call void @uiPupBlockEx(%struct.bContext* %23, %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)* @wm_block_create_redo, void (%struct.bContext*, i8*, i32)* null, void (%struct.bContext*, i8*)* @wm_block_redo_cancel_cb, i8* %25), !dbg !6502
  %26 = load i8, i8* %do_call.addr, align 1, !dbg !6503
  %tobool23 = icmp ne i8 %26, 0, !dbg !6503
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !6505

if.then24:                                        ; preds = %if.end22
  %27 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6506
  %28 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6507
  %29 = bitcast %struct.wmOperator* %28 to i8*, !dbg !6507
  call void @wm_block_redo_cb(%struct.bContext* %27, i8* %29, i32 0), !dbg !6508
  br label %if.end25, !dbg !6508

if.end25:                                         ; preds = %if.then24, %if.end22
  store i32 1, i32* %retval, align 4, !dbg !6509
  br label %return, !dbg !6509

return:                                           ; preds = %if.end25, %if.then19, %if.then10, %if.then
  %30 = load i32, i32* %retval, align 4, !dbg !6510
  ret i32 %30, !dbg !6510
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @WM_operator_props_popup_call(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %UNUSED_event) #0 !dbg !6511 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %UNUSED_event.addr = alloca %struct.wmEvent*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6512, metadata !DIExpression()), !dbg !6513
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !6514, metadata !DIExpression()), !dbg !6515
  store %struct.wmEvent* %UNUSED_event, %struct.wmEvent** %UNUSED_event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %UNUSED_event.addr, metadata !6516, metadata !DIExpression()), !dbg !6517
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6518
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6519
  %call = call i32 @wm_operator_props_popup_ex(%struct.bContext* %0, %struct.wmOperator* %1, i8 zeroext 1, i8 zeroext 1), !dbg !6520
  ret i32 %call, !dbg !6521
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @WM_operator_props_popup(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %UNUSED_event) #0 !dbg !6522 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %UNUSED_event.addr = alloca %struct.wmEvent*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6523, metadata !DIExpression()), !dbg !6524
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !6525, metadata !DIExpression()), !dbg !6526
  store %struct.wmEvent* %UNUSED_event, %struct.wmEvent** %UNUSED_event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %UNUSED_event.addr, metadata !6527, metadata !DIExpression()), !dbg !6528
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6529
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6530
  %call = call i32 @wm_operator_props_popup_ex(%struct.bContext* %0, %struct.wmOperator* %1, i8 zeroext 0, i8 zeroext 1), !dbg !6531
  ret i32 %call, !dbg !6532
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @WM_operator_props_dialog_popup(%struct.bContext* %C, %struct.wmOperator* %op, i32 %width, i32 %height) #0 !dbg !6533 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %width.addr = alloca i32, align 4
  %height.addr = alloca i32, align 4
  %data = alloca %struct.wmOpPopUp*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6534, metadata !DIExpression()), !dbg !6535
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !6536, metadata !DIExpression()), !dbg !6537
  store i32 %width, i32* %width.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %width.addr, metadata !6538, metadata !DIExpression()), !dbg !6539
  store i32 %height, i32* %height.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %height.addr, metadata !6540, metadata !DIExpression()), !dbg !6541
  call void @llvm.dbg.declare(metadata %struct.wmOpPopUp** %data, metadata !6542, metadata !DIExpression()), !dbg !6543
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6544
  %call = call i8* %0(i64 24, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.117, i64 0, i64 0)), !dbg !6544
  %1 = bitcast i8* %call to %struct.wmOpPopUp*, !dbg !6544
  store %struct.wmOpPopUp* %1, %struct.wmOpPopUp** %data, align 8, !dbg !6543
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6545
  %3 = load %struct.wmOpPopUp*, %struct.wmOpPopUp** %data, align 8, !dbg !6546
  %op1 = getelementptr inbounds %struct.wmOpPopUp, %struct.wmOpPopUp* %3, i32 0, i32 0, !dbg !6547
  store %struct.wmOperator* %2, %struct.wmOperator** %op1, align 8, !dbg !6548
  %4 = load i32, i32* %width.addr, align 4, !dbg !6549
  %5 = load %struct.wmOpPopUp*, %struct.wmOpPopUp** %data, align 8, !dbg !6550
  %width2 = getelementptr inbounds %struct.wmOpPopUp, %struct.wmOpPopUp* %5, i32 0, i32 1, !dbg !6551
  store i32 %4, i32* %width2, align 8, !dbg !6552
  %6 = load i32, i32* %height.addr, align 4, !dbg !6553
  %7 = load %struct.wmOpPopUp*, %struct.wmOpPopUp** %data, align 8, !dbg !6554
  %height3 = getelementptr inbounds %struct.wmOpPopUp, %struct.wmOpPopUp* %7, i32 0, i32 2, !dbg !6555
  store i32 %6, i32* %height3, align 4, !dbg !6556
  %8 = load %struct.wmOpPopUp*, %struct.wmOpPopUp** %data, align 8, !dbg !6557
  %free_op = getelementptr inbounds %struct.wmOpPopUp, %struct.wmOpPopUp* %8, i32 0, i32 3, !dbg !6558
  store i32 1, i32* %free_op, align 8, !dbg !6559
  %9 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6560
  %10 = load %struct.wmOpPopUp*, %struct.wmOpPopUp** %data, align 8, !dbg !6561
  %11 = bitcast %struct.wmOpPopUp* %10 to i8*, !dbg !6561
  call void @uiPupBlockEx(%struct.bContext* %9, %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)* @wm_block_dialog_create, void (%struct.bContext*, i8*, i32)* @wm_operator_ui_popup_ok, void (%struct.bContext*, i8*)* @wm_operator_ui_popup_cancel, i8* %11), !dbg !6562
  ret i32 1, !dbg !6563
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.uiBlock* @wm_block_dialog_create(%struct.bContext* %C, %struct.ARegion* %ar, i8* %userData) #0 !dbg !6564 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %userData.addr = alloca i8*, align 8
  %data = alloca %struct.wmOpPopUp*, align 8
  %op = alloca %struct.wmOperator*, align 8
  %block = alloca %struct.uiBlock*, align 8
  %layout = alloca %struct.uiLayout*, align 8
  %style = alloca %struct.uiStyle*, align 8
  %col_block = alloca %struct.uiBlock*, align 8
  %col = alloca %struct.uiLayout*, align 8
  %btn = alloca %struct.uiBut*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6565, metadata !DIExpression()), !dbg !6566
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !6567, metadata !DIExpression()), !dbg !6568
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !6569, metadata !DIExpression()), !dbg !6570
  call void @llvm.dbg.declare(metadata %struct.wmOpPopUp** %data, metadata !6571, metadata !DIExpression()), !dbg !6572
  %0 = load i8*, i8** %userData.addr, align 8, !dbg !6573
  %1 = bitcast i8* %0 to %struct.wmOpPopUp*, !dbg !6573
  store %struct.wmOpPopUp* %1, %struct.wmOpPopUp** %data, align 8, !dbg !6572
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op, metadata !6574, metadata !DIExpression()), !dbg !6575
  %2 = load %struct.wmOpPopUp*, %struct.wmOpPopUp** %data, align 8, !dbg !6576
  %op1 = getelementptr inbounds %struct.wmOpPopUp, %struct.wmOpPopUp* %2, i32 0, i32 0, !dbg !6577
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op1, align 8, !dbg !6577
  store %struct.wmOperator* %3, %struct.wmOperator** %op, align 8, !dbg !6575
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block, metadata !6578, metadata !DIExpression()), !dbg !6579
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout, metadata !6580, metadata !DIExpression()), !dbg !6581
  call void @llvm.dbg.declare(metadata %struct.uiStyle** %style, metadata !6582, metadata !DIExpression()), !dbg !6583
  %call = call %struct.uiStyle* @UI_GetStyle(), !dbg !6584
  store %struct.uiStyle* %call, %struct.uiStyle** %style, align 8, !dbg !6583
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6585
  %5 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !6586
  %call2 = call %struct.uiBlock* @uiBeginBlock(%struct.bContext* %4, %struct.ARegion* %5, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.wm_block_dialog_create, i64 0, i64 0), i16 signext 0), !dbg !6587
  store %struct.uiBlock* %call2, %struct.uiBlock** %block, align 8, !dbg !6588
  %6 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6589
  call void @uiBlockClearFlag(%struct.uiBlock* %6, i32 1), !dbg !6590
  %7 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6591
  call void @uiBlockSetFlag(%struct.uiBlock* %7, i32 256), !dbg !6592
  %8 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6593
  %9 = load %struct.wmOpPopUp*, %struct.wmOpPopUp** %data, align 8, !dbg !6594
  %width = getelementptr inbounds %struct.wmOpPopUp, %struct.wmOpPopUp* %9, i32 0, i32 1, !dbg !6595
  %10 = load i32, i32* %width, align 8, !dbg !6595
  %11 = load %struct.wmOpPopUp*, %struct.wmOpPopUp** %data, align 8, !dbg !6596
  %height = getelementptr inbounds %struct.wmOpPopUp, %struct.wmOpPopUp* %11, i32 0, i32 2, !dbg !6597
  %12 = load i32, i32* %height, align 4, !dbg !6597
  %13 = load %struct.uiStyle*, %struct.uiStyle** %style, align 8, !dbg !6598
  %call3 = call %struct.uiLayout* @uiBlockLayout(%struct.uiBlock* %8, i32 1, i32 0, i32 0, i32 0, i32 %10, i32 %12, i32 0, %struct.uiStyle* %13), !dbg !6599
  store %struct.uiLayout* %call3, %struct.uiLayout** %layout, align 8, !dbg !6600
  %14 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6601
  %15 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !6602
  %16 = bitcast %struct.wmOperator* %15 to i8*, !dbg !6602
  call void @uiBlockSetFunc(%struct.uiBlock* %14, void (%struct.bContext*, i8*, i8*)* @dialog_check_cb, i8* %16, i8* null), !dbg !6603
  %17 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6604
  %18 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !6605
  %19 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !6606
  call void @uiLayoutOperatorButs(%struct.bContext* %17, %struct.uiLayout* %18, %struct.wmOperator* %19, i8 (%struct.PointerRNA*, %struct.PropertyRNA*)* null, i8 zeroext 72, i16 signext 1), !dbg !6607
  %20 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6608
  call void @uiBlockSetFunc(%struct.uiBlock* %20, void (%struct.bContext*, i8*, i8*)* null, i8* null, i8* null), !dbg !6609
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %col_block, metadata !6610, metadata !DIExpression()), !dbg !6612
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %col, metadata !6613, metadata !DIExpression()), !dbg !6614
  call void @llvm.dbg.declare(metadata %struct.uiBut** %btn, metadata !6615, metadata !DIExpression()), !dbg !6616
  %21 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !6617
  %call4 = call %struct.uiLayout* @uiLayoutColumn(%struct.uiLayout* %21, i32 0), !dbg !6618
  store %struct.uiLayout* %call4, %struct.uiLayout** %col, align 8, !dbg !6619
  %22 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !6620
  %call5 = call %struct.uiBlock* @uiLayoutGetBlock(%struct.uiLayout* %22), !dbg !6621
  store %struct.uiBlock* %call5, %struct.uiBlock** %col_block, align 8, !dbg !6622
  %23 = load %struct.uiBlock*, %struct.uiBlock** %col_block, align 8, !dbg !6623
  %24 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !6624
  %call6 = call %struct.uiBut* @uiDefBut(%struct.uiBlock* %23, i32 512, i32 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.180, i64 0, i64 0), i32 0, i32 -30, i16 signext 0, i16 signext %24, i8* null, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)), !dbg !6625
  store %struct.uiBut* %call6, %struct.uiBut** %btn, align 8, !dbg !6626
  %25 = load %struct.uiBut*, %struct.uiBut** %btn, align 8, !dbg !6627
  %26 = load %struct.wmOpPopUp*, %struct.wmOpPopUp** %data, align 8, !dbg !6628
  %27 = bitcast %struct.wmOpPopUp* %26 to i8*, !dbg !6628
  %28 = load %struct.uiBlock*, %struct.uiBlock** %col_block, align 8, !dbg !6629
  %29 = bitcast %struct.uiBlock* %28 to i8*, !dbg !6629
  call void @uiButSetFunc(%struct.uiBut* %25, void (%struct.bContext*, i8*, i8*)* @dialog_exec_cb, i8* %27, i8* %29), !dbg !6630
  %30 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6631
  %31 = load %struct.wmOpPopUp*, %struct.wmOpPopUp** %data, align 8, !dbg !6632
  %width7 = getelementptr inbounds %struct.wmOpPopUp, %struct.wmOpPopUp* %31, i32 0, i32 1, !dbg !6633
  %32 = load i32, i32* %width7, align 8, !dbg !6633
  %div = sdiv i32 %32, -2, !dbg !6634
  %33 = load %struct.wmOpPopUp*, %struct.wmOpPopUp** %data, align 8, !dbg !6635
  %height8 = getelementptr inbounds %struct.wmOpPopUp, %struct.wmOpPopUp* %33, i32 0, i32 2, !dbg !6636
  %34 = load i32, i32* %height8, align 4, !dbg !6636
  %div9 = sdiv i32 %34, 2, !dbg !6637
  call void @uiPopupBoundsBlock(%struct.uiBlock* %30, i32 4, i32 %div, i32 %div9), !dbg !6638
  %35 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6639
  ret %struct.uiBlock* %35, !dbg !6640
}

; Function Attrs: noinline nounwind uwtable
define internal void @wm_operator_ui_popup_ok(%struct.bContext* %C, i8* %arg, i32 %retval) #0 !dbg !6641 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %arg.addr = alloca i8*, align 8
  %retval.addr = alloca i32, align 4
  %data = alloca %struct.wmOpPopUp*, align 8
  %op = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6644, metadata !DIExpression()), !dbg !6645
  store i8* %arg, i8** %arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg.addr, metadata !6646, metadata !DIExpression()), !dbg !6647
  store i32 %retval, i32* %retval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retval.addr, metadata !6648, metadata !DIExpression()), !dbg !6649
  call void @llvm.dbg.declare(metadata %struct.wmOpPopUp** %data, metadata !6650, metadata !DIExpression()), !dbg !6651
  %0 = load i8*, i8** %arg.addr, align 8, !dbg !6652
  %1 = bitcast i8* %0 to %struct.wmOpPopUp*, !dbg !6652
  store %struct.wmOpPopUp* %1, %struct.wmOpPopUp** %data, align 8, !dbg !6651
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op, metadata !6653, metadata !DIExpression()), !dbg !6654
  %2 = load %struct.wmOpPopUp*, %struct.wmOpPopUp** %data, align 8, !dbg !6655
  %op1 = getelementptr inbounds %struct.wmOpPopUp, %struct.wmOpPopUp* %2, i32 0, i32 0, !dbg !6656
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op1, align 8, !dbg !6656
  store %struct.wmOperator* %3, %struct.wmOperator** %op, align 8, !dbg !6654
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !6657
  %tobool = icmp ne %struct.wmOperator* %4, null, !dbg !6657
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !6659

land.lhs.true:                                    ; preds = %entry
  %5 = load i32, i32* %retval.addr, align 4, !dbg !6660
  %cmp = icmp sgt i32 %5, 0, !dbg !6661
  br i1 %cmp, label %if.then, label %if.end, !dbg !6662

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6663
  %7 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !6664
  %call = call i32 @WM_operator_call_ex(%struct.bContext* %6, %struct.wmOperator* %7, i8 zeroext 1), !dbg !6665
  br label %if.end, !dbg !6665

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %8 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6666
  %9 = load %struct.wmOpPopUp*, %struct.wmOpPopUp** %data, align 8, !dbg !6667
  %10 = bitcast %struct.wmOpPopUp* %9 to i8*, !dbg !6667
  call void %8(i8* %10), !dbg !6666
  ret void, !dbg !6668
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @WM_operator_redo_popup(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !6669 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6670, metadata !DIExpression()), !dbg !6671
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !6672, metadata !DIExpression()), !dbg !6673
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6674
  %type = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 4, !dbg !6676
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type, align 8, !dbg !6676
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 19, !dbg !6677
  %2 = load i16, i16* %flag, align 8, !dbg !6677
  %conv = sext i16 %2 to i32, !dbg !6674
  %and = and i32 %conv, 1, !dbg !6678
  %cmp = icmp eq i32 %and, 0, !dbg !6679
  br i1 %cmp, label %if.then, label %if.end, !dbg !6680

if.then:                                          ; preds = %entry
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6681
  %call = call %struct.ReportList* @CTX_wm_reports(%struct.bContext* %3), !dbg !6683
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6684
  %type2 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 4, !dbg !6685
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type2, align 8, !dbg !6685
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 1, !dbg !6686
  %6 = load i8*, i8** %idname, align 8, !dbg !6686
  call void (%struct.ReportList*, i32, i8*, ...) @BKE_reportf(%struct.ReportList* %call, i32 32, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.118, i64 0, i64 0), i8* %6), !dbg !6687
  store i32 2, i32* %retval, align 4, !dbg !6688
  br label %return, !dbg !6688

if.end:                                           ; preds = %entry
  %7 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6689
  %type3 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %7, i32 0, i32 4, !dbg !6691
  %8 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type3, align 8, !dbg !6691
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %8, i32 0, i32 9, !dbg !6692
  %9 = load i32 (%struct.bContext*)*, i32 (%struct.bContext*)** %poll, align 8, !dbg !6692
  %tobool = icmp ne i32 (%struct.bContext*)* %9, null, !dbg !6689
  br i1 %tobool, label %land.lhs.true, label %if.end13, !dbg !6693

land.lhs.true:                                    ; preds = %if.end
  %10 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6694
  %type4 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %10, i32 0, i32 4, !dbg !6695
  %11 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type4, align 8, !dbg !6695
  %poll5 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %11, i32 0, i32 9, !dbg !6696
  %12 = load i32 (%struct.bContext*)*, i32 (%struct.bContext*)** %poll5, align 8, !dbg !6696
  %13 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6697
  %call6 = call i32 %12(%struct.bContext* %13), !dbg !6694
  %cmp7 = icmp eq i32 %call6, 0, !dbg !6698
  br i1 %cmp7, label %if.then9, label %if.end13, !dbg !6699

if.then9:                                         ; preds = %land.lhs.true
  %14 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6700
  %call10 = call %struct.ReportList* @CTX_wm_reports(%struct.bContext* %14), !dbg !6702
  %15 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6703
  %type11 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %15, i32 0, i32 4, !dbg !6704
  %16 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type11, align 8, !dbg !6704
  %idname12 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %16, i32 0, i32 1, !dbg !6705
  %17 = load i8*, i8** %idname12, align 8, !dbg !6705
  call void (%struct.ReportList*, i32, i8*, ...) @BKE_reportf(%struct.ReportList* %call10, i32 32, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.119, i64 0, i64 0), i8* %17), !dbg !6706
  store i32 2, i32* %retval, align 4, !dbg !6707
  br label %return, !dbg !6707

if.end13:                                         ; preds = %land.lhs.true, %if.end
  %18 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6708
  %19 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6709
  %20 = bitcast %struct.wmOperator* %19 to i8*, !dbg !6709
  call void @uiPupBlock(%struct.bContext* %18, %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)* @wm_block_create_redo, i8* %20), !dbg !6710
  store i32 2, i32* %retval, align 4, !dbg !6711
  br label %return, !dbg !6711

return:                                           ; preds = %if.end13, %if.then9, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !6712
  ret i32 %21, !dbg !6712
}

declare dso_local void @BKE_reportf(%struct.ReportList*, i32, i8*, ...) #2

declare dso_local %struct.ReportList* @CTX_wm_reports(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.uiBlock* @wm_block_create_redo(%struct.bContext* %C, %struct.ARegion* %ar, i8* %arg_op) #0 !dbg !6713 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %arg_op.addr = alloca i8*, align 8
  %op = alloca %struct.wmOperator*, align 8
  %block = alloca %struct.uiBlock*, align 8
  %layout = alloca %struct.uiLayout*, align 8
  %style = alloca %struct.uiStyle*, align 8
  %width = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6714, metadata !DIExpression()), !dbg !6715
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !6716, metadata !DIExpression()), !dbg !6717
  store i8* %arg_op, i8** %arg_op.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg_op.addr, metadata !6718, metadata !DIExpression()), !dbg !6719
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op, metadata !6720, metadata !DIExpression()), !dbg !6721
  %0 = load i8*, i8** %arg_op.addr, align 8, !dbg !6722
  %1 = bitcast i8* %0 to %struct.wmOperator*, !dbg !6722
  store %struct.wmOperator* %1, %struct.wmOperator** %op, align 8, !dbg !6721
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block, metadata !6723, metadata !DIExpression()), !dbg !6724
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout, metadata !6725, metadata !DIExpression()), !dbg !6726
  call void @llvm.dbg.declare(metadata %struct.uiStyle** %style, metadata !6727, metadata !DIExpression()), !dbg !6728
  %call = call %struct.uiStyle* @UI_GetStyle(), !dbg !6729
  store %struct.uiStyle* %call, %struct.uiStyle** %style, align 8, !dbg !6728
  call void @llvm.dbg.declare(metadata i32* %width, metadata !6730, metadata !DIExpression()), !dbg !6731
  %2 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !6732
  %conv = sext i16 %2 to i32, !dbg !6732
  %mul = mul nsw i32 15, %conv, !dbg !6733
  store i32 %mul, i32* %width, align 4, !dbg !6731
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6734
  %4 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !6735
  %call1 = call %struct.uiBlock* @uiBeginBlock(%struct.bContext* %3, %struct.ARegion* %4, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__func__.wm_block_create_redo, i64 0, i64 0), i16 signext 0), !dbg !6736
  store %struct.uiBlock* %call1, %struct.uiBlock** %block, align 8, !dbg !6737
  %5 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6738
  call void @uiBlockClearFlag(%struct.uiBlock* %5, i32 1), !dbg !6739
  %6 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6740
  call void @uiBlockSetFlag(%struct.uiBlock* %6, i32 384), !dbg !6741
  %7 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6742
  %8 = load i8*, i8** %arg_op.addr, align 8, !dbg !6743
  call void @uiBlockSetHandleFunc(%struct.uiBlock* %7, void (%struct.bContext*, i8*, i32)* @wm_block_redo_cb, i8* %8), !dbg !6744
  %9 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6745
  %10 = load i32, i32* %width, align 4, !dbg !6746
  %11 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !6747
  %conv2 = sext i16 %11 to i32, !dbg !6747
  %12 = load %struct.uiStyle*, %struct.uiStyle** %style, align 8, !dbg !6748
  %call3 = call %struct.uiLayout* @uiBlockLayout(%struct.uiBlock* %9, i32 1, i32 0, i32 0, i32 0, i32 %10, i32 %conv2, i32 0, %struct.uiStyle* %12), !dbg !6749
  store %struct.uiLayout* %call3, %struct.uiLayout** %layout, align 8, !dbg !6750
  %13 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !6751
  %14 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6753
  %call4 = call %struct.wmOperator* @WM_operator_last_redo(%struct.bContext* %14), !dbg !6754
  %cmp = icmp eq %struct.wmOperator* %13, %call4, !dbg !6755
  br i1 %cmp, label %if.then, label %if.end8, !dbg !6756

if.then:                                          ; preds = %entry
  %15 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6757
  %16 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !6759
  %type = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %16, i32 0, i32 4, !dbg !6760
  %17 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type, align 8, !dbg !6760
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %17, i32 0, i32 0, !dbg !6761
  %18 = load i8*, i8** %name, align 8, !dbg !6761
  %call6 = call zeroext i8 @WM_operator_check_ui_enabled(%struct.bContext* %15, i8* %18), !dbg !6762
  %tobool = icmp ne i8 %call6, 0, !dbg !6762
  br i1 %tobool, label %if.end, label %if.then7, !dbg !6763

if.then7:                                         ; preds = %if.then
  %19 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !6764
  call void @uiLayoutSetEnabled(%struct.uiLayout* %19, i8 zeroext 0), !dbg !6765
  br label %if.end, !dbg !6765

if.end:                                           ; preds = %if.then7, %if.then
  br label %if.end8, !dbg !6766

if.end8:                                          ; preds = %if.end, %entry
  %20 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !6767
  %type9 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %20, i32 0, i32 4, !dbg !6769
  %21 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type9, align 8, !dbg !6769
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %21, i32 0, i32 19, !dbg !6770
  %22 = load i16, i16* %flag, align 8, !dbg !6770
  %conv10 = sext i16 %22 to i32, !dbg !6767
  %and = and i32 %conv10, 8, !dbg !6771
  %tobool11 = icmp ne i32 %and, 0, !dbg !6771
  br i1 %tobool11, label %if.then12, label %if.else, !dbg !6772

if.then12:                                        ; preds = %if.end8
  %23 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !6773
  %macro = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %23, i32 0, i32 9, !dbg !6776
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %macro, i32 0, i32 0, !dbg !6777
  %24 = load i8*, i8** %first, align 8, !dbg !6777
  %25 = bitcast i8* %24 to %struct.wmOperator*, !dbg !6773
  store %struct.wmOperator* %25, %struct.wmOperator** %op, align 8, !dbg !6778
  br label %for.cond, !dbg !6779

for.cond:                                         ; preds = %for.inc, %if.then12
  %26 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !6780
  %tobool13 = icmp ne %struct.wmOperator* %26, null, !dbg !6782
  br i1 %tobool13, label %for.body, label %for.end, !dbg !6782

for.body:                                         ; preds = %for.cond
  %27 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6783
  %28 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !6785
  %29 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !6786
  call void @uiLayoutOperatorButs(%struct.bContext* %27, %struct.uiLayout* %28, %struct.wmOperator* %29, i8 (%struct.PointerRNA*, %struct.PropertyRNA*)* null, i8 zeroext 72, i16 signext 1), !dbg !6787
  br label %for.inc, !dbg !6788

for.inc:                                          ; preds = %for.body
  %30 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !6789
  %next = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %30, i32 0, i32 0, !dbg !6790
  %31 = load %struct.wmOperator*, %struct.wmOperator** %next, align 8, !dbg !6790
  store %struct.wmOperator* %31, %struct.wmOperator** %op, align 8, !dbg !6791
  br label %for.cond, !dbg !6792, !llvm.loop !6793

for.end:                                          ; preds = %for.cond
  br label %if.end14, !dbg !6795

if.else:                                          ; preds = %if.end8
  %32 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6796
  %33 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !6798
  %34 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !6799
  call void @uiLayoutOperatorButs(%struct.bContext* %32, %struct.uiLayout* %33, %struct.wmOperator* %34, i8 (%struct.PointerRNA*, %struct.PropertyRNA*)* null, i8 zeroext 72, i16 signext 1), !dbg !6800
  br label %if.end14

if.end14:                                         ; preds = %if.else, %for.end
  %35 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6801
  call void @uiPopupBoundsBlock(%struct.uiBlock* %35, i32 4, i32 0, i32 0), !dbg !6802
  %36 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !6803
  ret %struct.uiBlock* %36, !dbg !6804
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_recover_last_session(%struct.bContext* %C, %struct.ReportList* %reports) #0 !dbg !6805 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %reports.addr = alloca %struct.ReportList*, align 8
  %filepath = alloca [1024 x i8], align 16
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6810, metadata !DIExpression()), !dbg !6811
  store %struct.ReportList* %reports, %struct.ReportList** %reports.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReportList** %reports.addr, metadata !6812, metadata !DIExpression()), !dbg !6813
  call void @llvm.dbg.declare(metadata [1024 x i8]* %filepath, metadata !6814, metadata !DIExpression()), !dbg !6815
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %filepath, i64 0, i64 0, !dbg !6816
  %call = call i8* @BLI_temp_dir_base(), !dbg !6817
  call void @BLI_make_file_string(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.120, i64 0, i64 0), i8* %arraydecay, i8* %call, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.121, i64 0, i64 0)), !dbg !6818
  %0 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !6819
  %tobool = icmp ne %struct.ReportList* %0, null, !dbg !6819
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !6821

lor.lhs.false:                                    ; preds = %entry
  %arraydecay1 = getelementptr inbounds [1024 x i8], [1024 x i8]* %filepath, i64 0, i64 0, !dbg !6822
  %call2 = call i32 @BLI_exists(i8* %arraydecay1), !dbg !6823
  %tobool3 = icmp ne i32 %call2, 0, !dbg !6823
  br i1 %tobool3, label %if.then, label %if.end8, !dbg !6824

if.then:                                          ; preds = %lor.lhs.false, %entry
  %1 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 18), align 4, !dbg !6825
  %or = or i32 %1, 8388608, !dbg !6825
  store i32 %or, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 18), align 4, !dbg !6825
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6827
  %arraydecay4 = getelementptr inbounds [1024 x i8], [1024 x i8]* %filepath, i64 0, i64 0, !dbg !6828
  %3 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !6829
  %call5 = call zeroext i8 @wm_file_read_opwrap(%struct.bContext* %2, i8* %arraydecay4, %struct.ReportList* %3, i8 zeroext 1), !dbg !6830
  %4 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 18), align 4, !dbg !6831
  %and = and i32 %4, -8388609, !dbg !6831
  store i32 %and, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 18), align 4, !dbg !6831
  %5 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !6832
  %name = getelementptr inbounds %struct.Main, %struct.Main* %5, i32 0, i32 2, !dbg !6834
  %arrayidx = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !6835
  %6 = load i8, i8* %arrayidx, align 8, !dbg !6835
  %tobool6 = icmp ne i8 %6, 0, !dbg !6835
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !6836

if.then7:                                         ; preds = %if.then
  store i8 1, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 4), align 1, !dbg !6837
  br label %if.end, !dbg !6838

if.else:                                          ; preds = %if.then
  store i8 0, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 3), align 8, !dbg !6839
  store i8 0, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 5), align 2, !dbg !6841
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then7
  br label %if.end8, !dbg !6842

if.end8:                                          ; preds = %if.end, %lor.lhs.false
  ret void, !dbg !6843
}

declare dso_local void @BLI_make_file_string(i8*, i8*, i8*, i8*) #2

declare dso_local i8* @BLI_temp_dir_base() #2

declare dso_local i32 @BLI_exists(i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @wm_file_read_opwrap(%struct.bContext* %C, i8* %filepath, %struct.ReportList* %reports, i8 zeroext %autoexec_init) #0 !dbg !6844 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %filepath.addr = alloca i8*, align 8
  %reports.addr = alloca %struct.ReportList*, align 8
  %autoexec_init.addr = alloca i8, align 1
  %success = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6847, metadata !DIExpression()), !dbg !6848
  store i8* %filepath, i8** %filepath.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %filepath.addr, metadata !6849, metadata !DIExpression()), !dbg !6850
  store %struct.ReportList* %reports, %struct.ReportList** %reports.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReportList** %reports.addr, metadata !6851, metadata !DIExpression()), !dbg !6852
  store i8 %autoexec_init, i8* %autoexec_init.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %autoexec_init.addr, metadata !6853, metadata !DIExpression()), !dbg !6854
  call void @llvm.dbg.declare(metadata i8* %success, metadata !6855, metadata !DIExpression()), !dbg !6856
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6857
  call void @WM_event_add_notifier(%struct.bContext* %0, i32 33554432, i8* null), !dbg !6858
  %1 = load i8, i8* %autoexec_init.addr, align 1, !dbg !6859
  %tobool = icmp ne i8 %1, 0, !dbg !6859
  br i1 %tobool, label %if.then, label %if.end, !dbg !6861

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %filepath.addr, align 8, !dbg !6862
  call void @WM_file_autoexec_init(i8* %2), !dbg !6864
  br label %if.end, !dbg !6865

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6866
  %4 = load i8*, i8** %filepath.addr, align 8, !dbg !6867
  %5 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !6868
  %call = call zeroext i8 @WM_file_read(%struct.bContext* %3, i8* %4, %struct.ReportList* %5), !dbg !6869
  store i8 %call, i8* %success, align 1, !dbg !6870
  %6 = load i8, i8* %success, align 1, !dbg !6871
  ret i8 %6, !dbg !6872
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @WM_paint_cursor_activate(%struct.wmWindowManager* %wm, i32 (%struct.bContext*)* %poll, void (%struct.bContext*, i32, i32, i8*)* %draw, i8* %customdata) #0 !dbg !6873 {
entry:
  %wm.addr = alloca %struct.wmWindowManager*, align 8
  %poll.addr = alloca i32 (%struct.bContext*)*, align 8
  %draw.addr = alloca void (%struct.bContext*, i32, i32, i8*)*, align 8
  %customdata.addr = alloca i8*, align 8
  %pc = alloca %struct.wmPaintCursor*, align 8
  store %struct.wmWindowManager* %wm, %struct.wmWindowManager** %wm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm.addr, metadata !6881, metadata !DIExpression()), !dbg !6882
  store i32 (%struct.bContext*)* %poll, i32 (%struct.bContext*)** %poll.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.bContext*)** %poll.addr, metadata !6883, metadata !DIExpression()), !dbg !6884
  store void (%struct.bContext*, i32, i32, i8*)* %draw, void (%struct.bContext*, i32, i32, i8*)** %draw.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.bContext*, i32, i32, i8*)** %draw.addr, metadata !6885, metadata !DIExpression()), !dbg !6886
  store i8* %customdata, i8** %customdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %customdata.addr, metadata !6887, metadata !DIExpression()), !dbg !6888
  call void @llvm.dbg.declare(metadata %struct.wmPaintCursor** %pc, metadata !6889, metadata !DIExpression()), !dbg !6890
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6891
  %call = call i8* %0(i64 40, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.122, i64 0, i64 0)), !dbg !6891
  %1 = bitcast i8* %call to %struct.wmPaintCursor*, !dbg !6891
  store %struct.wmPaintCursor* %1, %struct.wmPaintCursor** %pc, align 8, !dbg !6890
  %2 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm.addr, align 8, !dbg !6892
  %paintcursors = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %2, i32 0, i32 11, !dbg !6893
  %3 = load %struct.wmPaintCursor*, %struct.wmPaintCursor** %pc, align 8, !dbg !6894
  %4 = bitcast %struct.wmPaintCursor* %3 to i8*, !dbg !6894
  call void @BLI_addtail(%struct.ListBase* %paintcursors, i8* %4), !dbg !6895
  %5 = load i8*, i8** %customdata.addr, align 8, !dbg !6896
  %6 = load %struct.wmPaintCursor*, %struct.wmPaintCursor** %pc, align 8, !dbg !6897
  %customdata1 = getelementptr inbounds %struct.wmPaintCursor, %struct.wmPaintCursor* %6, i32 0, i32 2, !dbg !6898
  store i8* %5, i8** %customdata1, align 8, !dbg !6899
  %7 = load i32 (%struct.bContext*)*, i32 (%struct.bContext*)** %poll.addr, align 8, !dbg !6900
  %8 = load %struct.wmPaintCursor*, %struct.wmPaintCursor** %pc, align 8, !dbg !6901
  %poll2 = getelementptr inbounds %struct.wmPaintCursor, %struct.wmPaintCursor* %8, i32 0, i32 3, !dbg !6902
  store i32 (%struct.bContext*)* %7, i32 (%struct.bContext*)** %poll2, align 8, !dbg !6903
  %9 = load void (%struct.bContext*, i32, i32, i8*)*, void (%struct.bContext*, i32, i32, i8*)** %draw.addr, align 8, !dbg !6904
  %10 = load %struct.wmPaintCursor*, %struct.wmPaintCursor** %pc, align 8, !dbg !6905
  %draw3 = getelementptr inbounds %struct.wmPaintCursor, %struct.wmPaintCursor* %10, i32 0, i32 4, !dbg !6906
  store void (%struct.bContext*, i32, i32, i8*)* %9, void (%struct.bContext*, i32, i32, i8*)** %draw3, align 8, !dbg !6907
  %11 = load %struct.wmPaintCursor*, %struct.wmPaintCursor** %pc, align 8, !dbg !6908
  %12 = bitcast %struct.wmPaintCursor* %11 to i8*, !dbg !6908
  ret i8* %12, !dbg !6909
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_paint_cursor_end(%struct.wmWindowManager* %wm, i8* %handle) #0 !dbg !6910 {
entry:
  %wm.addr = alloca %struct.wmWindowManager*, align 8
  %handle.addr = alloca i8*, align 8
  %pc = alloca %struct.wmPaintCursor*, align 8
  store %struct.wmWindowManager* %wm, %struct.wmWindowManager** %wm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm.addr, metadata !6913, metadata !DIExpression()), !dbg !6914
  store i8* %handle, i8** %handle.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %handle.addr, metadata !6915, metadata !DIExpression()), !dbg !6916
  call void @llvm.dbg.declare(metadata %struct.wmPaintCursor** %pc, metadata !6917, metadata !DIExpression()), !dbg !6918
  %0 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm.addr, align 8, !dbg !6919
  %paintcursors = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %0, i32 0, i32 11, !dbg !6921
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %paintcursors, i32 0, i32 0, !dbg !6922
  %1 = load i8*, i8** %first, align 8, !dbg !6922
  %2 = bitcast i8* %1 to %struct.wmPaintCursor*, !dbg !6919
  store %struct.wmPaintCursor* %2, %struct.wmPaintCursor** %pc, align 8, !dbg !6923
  br label %for.cond, !dbg !6924

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.wmPaintCursor*, %struct.wmPaintCursor** %pc, align 8, !dbg !6925
  %tobool = icmp ne %struct.wmPaintCursor* %3, null, !dbg !6927
  br i1 %tobool, label %for.body, label %for.end, !dbg !6927

for.body:                                         ; preds = %for.cond
  %4 = load %struct.wmPaintCursor*, %struct.wmPaintCursor** %pc, align 8, !dbg !6928
  %5 = load i8*, i8** %handle.addr, align 8, !dbg !6931
  %6 = bitcast i8* %5 to %struct.wmPaintCursor*, !dbg !6932
  %cmp = icmp eq %struct.wmPaintCursor* %4, %6, !dbg !6933
  br i1 %cmp, label %if.then, label %if.end, !dbg !6934

if.then:                                          ; preds = %for.body
  %7 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm.addr, align 8, !dbg !6935
  %paintcursors1 = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %7, i32 0, i32 11, !dbg !6937
  %8 = load %struct.wmPaintCursor*, %struct.wmPaintCursor** %pc, align 8, !dbg !6938
  %9 = bitcast %struct.wmPaintCursor* %8 to i8*, !dbg !6938
  call void @BLI_remlink(%struct.ListBase* %paintcursors1, i8* %9), !dbg !6939
  %10 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6940
  %11 = load %struct.wmPaintCursor*, %struct.wmPaintCursor** %pc, align 8, !dbg !6941
  %12 = bitcast %struct.wmPaintCursor* %11 to i8*, !dbg !6941
  call void %10(i8* %12), !dbg !6940
  br label %for.end, !dbg !6942

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !6943

for.inc:                                          ; preds = %if.end
  %13 = load %struct.wmPaintCursor*, %struct.wmPaintCursor** %pc, align 8, !dbg !6944
  %next = getelementptr inbounds %struct.wmPaintCursor, %struct.wmPaintCursor* %13, i32 0, i32 0, !dbg !6945
  %14 = load %struct.wmPaintCursor*, %struct.wmPaintCursor** %next, align 8, !dbg !6945
  store %struct.wmPaintCursor* %14, %struct.wmPaintCursor** %pc, align 8, !dbg !6946
  br label %for.cond, !dbg !6947, !llvm.loop !6948

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !6950
}

declare dso_local void @BLI_remlink(%struct.ListBase*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @WM_border_select_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !6951 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6952, metadata !DIExpression()), !dbg !6953
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !6954, metadata !DIExpression()), !dbg !6955
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !6956, metadata !DIExpression()), !dbg !6957
  %0 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6958
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %0, i32 0, i32 2, !dbg !6958
  %1 = load i16, i16* %type, align 8, !dbg !6958
  %conv = sext i16 %1 to i32, !dbg !6958
  %cmp = icmp sge i32 %conv, 20483, !dbg !6958
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !6958

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6958
  %type2 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %2, i32 0, i32 2, !dbg !6958
  %3 = load i16, i16* %type2, align 8, !dbg !6958
  %conv3 = sext i16 %3 to i32, !dbg !6958
  %cmp4 = icmp sle i32 %conv3, 20496, !dbg !6958
  br i1 %cmp4, label %if.then, label %if.else, !dbg !6960

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6961
  %5 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6962
  %call = call %struct.wmGesture* @WM_gesture_new(%struct.bContext* %4, %struct.wmEvent* %5, i32 2), !dbg !6963
  %6 = bitcast %struct.wmGesture* %call to i8*, !dbg !6963
  %7 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6964
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %7, i32 0, i32 5, !dbg !6965
  store i8* %6, i8** %customdata, align 8, !dbg !6966
  br label %if.end, !dbg !6964

if.else:                                          ; preds = %land.lhs.true, %entry
  %8 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6967
  %9 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6968
  %call6 = call %struct.wmGesture* @WM_gesture_new(%struct.bContext* %8, %struct.wmEvent* %9, i32 3), !dbg !6969
  %10 = bitcast %struct.wmGesture* %call6 to i8*, !dbg !6969
  %11 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6970
  %customdata7 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %11, i32 0, i32 5, !dbg !6971
  store i8* %10, i8** %customdata7, align 8, !dbg !6972
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %12 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6973
  %13 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6974
  %call8 = call %struct.wmEventHandler* @WM_event_add_modal_handler(%struct.bContext* %12, %struct.wmOperator* %13), !dbg !6975
  %14 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6976
  call void @wm_gesture_tag_redraw(%struct.bContext* %14), !dbg !6977
  ret i32 1, !dbg !6978
}

declare dso_local %struct.wmGesture* @WM_gesture_new(%struct.bContext*, %struct.wmEvent*, i32) #2

declare dso_local %struct.wmEventHandler* @WM_event_add_modal_handler(%struct.bContext*, %struct.wmOperator*) #2

declare dso_local void @wm_gesture_tag_redraw(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @WM_border_select_modal(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !6979 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %gesture = alloca %struct.wmGesture*, align 8
  %rect = alloca %struct.rcti*, align 8
  %sx = alloca i32, align 4
  %sy = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6980, metadata !DIExpression()), !dbg !6981
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !6982, metadata !DIExpression()), !dbg !6983
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !6984, metadata !DIExpression()), !dbg !6985
  call void @llvm.dbg.declare(metadata %struct.wmGesture** %gesture, metadata !6986, metadata !DIExpression()), !dbg !6989
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6990
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 5, !dbg !6991
  %1 = load i8*, i8** %customdata, align 8, !dbg !6991
  %2 = bitcast i8* %1 to %struct.wmGesture*, !dbg !6990
  store %struct.wmGesture* %2, %struct.wmGesture** %gesture, align 8, !dbg !6989
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect, metadata !6992, metadata !DIExpression()), !dbg !6993
  %3 = load %struct.wmGesture*, %struct.wmGesture** %gesture, align 8, !dbg !6994
  %customdata1 = getelementptr inbounds %struct.wmGesture, %struct.wmGesture* %3, i32 0, i32 8, !dbg !6995
  %4 = load i8*, i8** %customdata1, align 8, !dbg !6995
  %5 = bitcast i8* %4 to %struct.rcti*, !dbg !6994
  store %struct.rcti* %5, %struct.rcti** %rect, align 8, !dbg !6993
  call void @llvm.dbg.declare(metadata i32* %sx, metadata !6996, metadata !DIExpression()), !dbg !6997
  call void @llvm.dbg.declare(metadata i32* %sy, metadata !6998, metadata !DIExpression()), !dbg !6999
  %6 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7000
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %6, i32 0, i32 2, !dbg !7002
  %7 = load i16, i16* %type, align 8, !dbg !7002
  %conv = sext i16 %7 to i32, !dbg !7000
  %cmp = icmp eq i32 %conv, 4, !dbg !7003
  br i1 %cmp, label %if.then, label %if.else17, !dbg !7004

if.then:                                          ; preds = %entry
  %8 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7005
  %call = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %8), !dbg !7007
  %9 = load %struct.wmGesture*, %struct.wmGesture** %gesture, align 8, !dbg !7008
  %swinid = getelementptr inbounds %struct.wmGesture, %struct.wmGesture* %9, i32 0, i32 5, !dbg !7009
  %10 = load i32, i32* %swinid, align 4, !dbg !7009
  call void @wm_subwindow_origin_get(%struct.wmWindow* %call, i32 %10, i32* %sx, i32* %sy), !dbg !7010
  %11 = load %struct.wmGesture*, %struct.wmGesture** %gesture, align 8, !dbg !7011
  %type3 = getelementptr inbounds %struct.wmGesture, %struct.wmGesture* %11, i32 0, i32 4, !dbg !7013
  %12 = load i32, i32* %type3, align 8, !dbg !7013
  %cmp4 = icmp eq i32 %12, 3, !dbg !7014
  br i1 %cmp4, label %land.lhs.true, label %if.else, !dbg !7015

land.lhs.true:                                    ; preds = %if.then
  %13 = load %struct.wmGesture*, %struct.wmGesture** %gesture, align 8, !dbg !7016
  %mode = getelementptr inbounds %struct.wmGesture, %struct.wmGesture* %13, i32 0, i32 3, !dbg !7017
  %14 = load i32, i32* %mode, align 4, !dbg !7017
  %cmp6 = icmp eq i32 %14, 0, !dbg !7018
  br i1 %cmp6, label %if.then8, label %if.else, !dbg !7019

if.then8:                                         ; preds = %land.lhs.true
  %15 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7020
  %x = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %15, i32 0, i32 4, !dbg !7022
  %16 = load i32, i32* %x, align 4, !dbg !7022
  %17 = load i32, i32* %sx, align 4, !dbg !7023
  %sub = sub nsw i32 %16, %17, !dbg !7024
  %18 = load %struct.rcti*, %struct.rcti** %rect, align 8, !dbg !7025
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %18, i32 0, i32 1, !dbg !7026
  store i32 %sub, i32* %xmax, align 4, !dbg !7027
  %19 = load %struct.rcti*, %struct.rcti** %rect, align 8, !dbg !7028
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %19, i32 0, i32 0, !dbg !7029
  store i32 %sub, i32* %xmin, align 4, !dbg !7030
  %20 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7031
  %y = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %20, i32 0, i32 5, !dbg !7032
  %21 = load i32, i32* %y, align 8, !dbg !7032
  %22 = load i32, i32* %sy, align 4, !dbg !7033
  %sub9 = sub nsw i32 %21, %22, !dbg !7034
  %23 = load %struct.rcti*, %struct.rcti** %rect, align 8, !dbg !7035
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %23, i32 0, i32 3, !dbg !7036
  store i32 %sub9, i32* %ymax, align 4, !dbg !7037
  %24 = load %struct.rcti*, %struct.rcti** %rect, align 8, !dbg !7038
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %24, i32 0, i32 2, !dbg !7039
  store i32 %sub9, i32* %ymin, align 4, !dbg !7040
  br label %if.end, !dbg !7041

if.else:                                          ; preds = %land.lhs.true, %if.then
  %25 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7042
  %x10 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %25, i32 0, i32 4, !dbg !7044
  %26 = load i32, i32* %x10, align 4, !dbg !7044
  %27 = load i32, i32* %sx, align 4, !dbg !7045
  %sub11 = sub nsw i32 %26, %27, !dbg !7046
  %28 = load %struct.rcti*, %struct.rcti** %rect, align 8, !dbg !7047
  %xmax12 = getelementptr inbounds %struct.rcti, %struct.rcti* %28, i32 0, i32 1, !dbg !7048
  store i32 %sub11, i32* %xmax12, align 4, !dbg !7049
  %29 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7050
  %y13 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %29, i32 0, i32 5, !dbg !7051
  %30 = load i32, i32* %y13, align 8, !dbg !7051
  %31 = load i32, i32* %sy, align 4, !dbg !7052
  %sub14 = sub nsw i32 %30, %31, !dbg !7053
  %32 = load %struct.rcti*, %struct.rcti** %rect, align 8, !dbg !7054
  %ymax15 = getelementptr inbounds %struct.rcti, %struct.rcti* %32, i32 0, i32 3, !dbg !7055
  store i32 %sub14, i32* %ymax15, align 4, !dbg !7056
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then8
  %33 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7057
  %call16 = call i32 @border_apply_rect(%struct.wmOperator* %33), !dbg !7058
  %34 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7059
  call void @wm_gesture_tag_redraw(%struct.bContext* %34), !dbg !7060
  br label %if.end42, !dbg !7061

if.else17:                                        ; preds = %entry
  %35 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7062
  %type18 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %35, i32 0, i32 2, !dbg !7064
  %36 = load i16, i16* %type18, align 8, !dbg !7064
  %conv19 = sext i16 %36 to i32, !dbg !7062
  %cmp20 = icmp eq i32 %conv19, 20514, !dbg !7065
  br i1 %cmp20, label %if.then22, label %if.end41, !dbg !7066

if.then22:                                        ; preds = %if.else17
  %37 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7067
  %val = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %37, i32 0, i32 3, !dbg !7069
  %38 = load i16, i16* %val, align 2, !dbg !7069
  %conv23 = sext i16 %38 to i32, !dbg !7067
  switch i32 %conv23, label %sw.epilog [
    i32 8, label %sw.bb
    i32 3, label %sw.bb34
    i32 4, label %sw.bb34
    i32 9, label %sw.bb34
    i32 10, label %sw.bb34
    i32 1, label %sw.bb40
  ], !dbg !7070

sw.bb:                                            ; preds = %if.then22
  %39 = load %struct.wmGesture*, %struct.wmGesture** %gesture, align 8, !dbg !7071
  %type24 = getelementptr inbounds %struct.wmGesture, %struct.wmGesture* %39, i32 0, i32 4, !dbg !7074
  %40 = load i32, i32* %type24, align 8, !dbg !7074
  %cmp25 = icmp eq i32 %40, 3, !dbg !7075
  br i1 %cmp25, label %land.lhs.true27, label %if.end33, !dbg !7076

land.lhs.true27:                                  ; preds = %sw.bb
  %41 = load %struct.wmGesture*, %struct.wmGesture** %gesture, align 8, !dbg !7077
  %mode28 = getelementptr inbounds %struct.wmGesture, %struct.wmGesture* %41, i32 0, i32 3, !dbg !7078
  %42 = load i32, i32* %mode28, align 4, !dbg !7078
  %cmp29 = icmp eq i32 %42, 0, !dbg !7079
  br i1 %cmp29, label %if.then31, label %if.end33, !dbg !7080

if.then31:                                        ; preds = %land.lhs.true27
  %43 = load %struct.wmGesture*, %struct.wmGesture** %gesture, align 8, !dbg !7081
  %mode32 = getelementptr inbounds %struct.wmGesture, %struct.wmGesture* %43, i32 0, i32 3, !dbg !7083
  store i32 1, i32* %mode32, align 4, !dbg !7084
  %44 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7085
  call void @wm_gesture_tag_redraw(%struct.bContext* %44), !dbg !7086
  br label %if.end33, !dbg !7087

if.end33:                                         ; preds = %if.then31, %land.lhs.true27, %sw.bb
  br label %sw.epilog, !dbg !7088

sw.bb34:                                          ; preds = %if.then22, %if.then22, %if.then22, %if.then22
  %45 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7089
  %46 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7091
  %47 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7092
  %val35 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %47, i32 0, i32 3, !dbg !7093
  %48 = load i16, i16* %val35, align 2, !dbg !7093
  %conv36 = sext i16 %48 to i32, !dbg !7092
  %call37 = call i32 @border_apply(%struct.bContext* %45, %struct.wmOperator* %46, i32 %conv36), !dbg !7094
  %tobool = icmp ne i32 %call37, 0, !dbg !7094
  br i1 %tobool, label %if.then38, label %if.end39, !dbg !7095

if.then38:                                        ; preds = %sw.bb34
  %49 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7096
  %50 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7098
  call void @wm_gesture_end(%struct.bContext* %49, %struct.wmOperator* %50), !dbg !7099
  store i32 4, i32* %retval, align 4, !dbg !7100
  br label %return, !dbg !7100

if.end39:                                         ; preds = %sw.bb34
  %51 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7101
  %52 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7102
  call void @wm_gesture_end(%struct.bContext* %51, %struct.wmOperator* %52), !dbg !7103
  store i32 2, i32* %retval, align 4, !dbg !7104
  br label %return, !dbg !7104

sw.bb40:                                          ; preds = %if.then22
  %53 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7105
  %54 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7106
  call void @wm_gesture_end(%struct.bContext* %53, %struct.wmOperator* %54), !dbg !7107
  store i32 2, i32* %retval, align 4, !dbg !7108
  br label %return, !dbg !7108

sw.epilog:                                        ; preds = %if.then22, %if.end33
  br label %if.end41, !dbg !7109

if.end41:                                         ; preds = %sw.epilog, %if.else17
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.end
  store i32 1, i32* %retval, align 4, !dbg !7110
  br label %return, !dbg !7110

return:                                           ; preds = %if.end42, %sw.bb40, %if.end39, %if.then38
  %55 = load i32, i32* %retval, align 4, !dbg !7111
  ret i32 %55, !dbg !7111
}

declare dso_local void @wm_subwindow_origin_get(%struct.wmWindow*, i32, i32*, i32*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @border_apply_rect(%struct.wmOperator* %op) #0 !dbg !7112 {
entry:
  %retval = alloca i32, align 4
  %op.addr = alloca %struct.wmOperator*, align 8
  %gesture = alloca %struct.wmGesture*, align 8
  %rect = alloca %struct.rcti*, align 8
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7115, metadata !DIExpression()), !dbg !7116
  call void @llvm.dbg.declare(metadata %struct.wmGesture** %gesture, metadata !7117, metadata !DIExpression()), !dbg !7118
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7119
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 5, !dbg !7120
  %1 = load i8*, i8** %customdata, align 8, !dbg !7120
  %2 = bitcast i8* %1 to %struct.wmGesture*, !dbg !7119
  store %struct.wmGesture* %2, %struct.wmGesture** %gesture, align 8, !dbg !7118
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect, metadata !7121, metadata !DIExpression()), !dbg !7122
  %3 = load %struct.wmGesture*, %struct.wmGesture** %gesture, align 8, !dbg !7123
  %customdata1 = getelementptr inbounds %struct.wmGesture, %struct.wmGesture* %3, i32 0, i32 8, !dbg !7124
  %4 = load i8*, i8** %customdata1, align 8, !dbg !7124
  %5 = bitcast i8* %4 to %struct.rcti*, !dbg !7123
  store %struct.rcti* %5, %struct.rcti** %rect, align 8, !dbg !7122
  %6 = load %struct.rcti*, %struct.rcti** %rect, align 8, !dbg !7125
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %6, i32 0, i32 0, !dbg !7127
  %7 = load i32, i32* %xmin, align 4, !dbg !7127
  %8 = load %struct.rcti*, %struct.rcti** %rect, align 8, !dbg !7128
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %8, i32 0, i32 1, !dbg !7129
  %9 = load i32, i32* %xmax, align 4, !dbg !7129
  %cmp = icmp eq i32 %7, %9, !dbg !7130
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7131

lor.lhs.false:                                    ; preds = %entry
  %10 = load %struct.rcti*, %struct.rcti** %rect, align 8, !dbg !7132
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %10, i32 0, i32 2, !dbg !7133
  %11 = load i32, i32* %ymin, align 4, !dbg !7133
  %12 = load %struct.rcti*, %struct.rcti** %rect, align 8, !dbg !7134
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %12, i32 0, i32 3, !dbg !7135
  %13 = load i32, i32* %ymax, align 4, !dbg !7135
  %cmp2 = icmp eq i32 %11, %13, !dbg !7136
  br i1 %cmp2, label %if.then, label %if.end, !dbg !7137

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !7138
  br label %return, !dbg !7138

if.end:                                           ; preds = %lor.lhs.false
  %14 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7139
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %14, i32 0, i32 7, !dbg !7140
  %15 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !7140
  %16 = load %struct.rcti*, %struct.rcti** %rect, align 8, !dbg !7141
  %xmin3 = getelementptr inbounds %struct.rcti, %struct.rcti* %16, i32 0, i32 0, !dbg !7142
  %17 = load i32, i32* %xmin3, align 4, !dbg !7142
  %18 = load %struct.rcti*, %struct.rcti** %rect, align 8, !dbg !7143
  %xmax4 = getelementptr inbounds %struct.rcti, %struct.rcti* %18, i32 0, i32 1, !dbg !7144
  %19 = load i32, i32* %xmax4, align 4, !dbg !7144
  %call = call i32 @min_ii(i32 %17, i32 %19), !dbg !7145
  call void @RNA_int_set(%struct.PointerRNA* %15, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.87, i64 0, i64 0), i32 %call), !dbg !7146
  %20 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7147
  %ptr5 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %20, i32 0, i32 7, !dbg !7148
  %21 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr5, align 8, !dbg !7148
  %22 = load %struct.rcti*, %struct.rcti** %rect, align 8, !dbg !7149
  %ymin6 = getelementptr inbounds %struct.rcti, %struct.rcti* %22, i32 0, i32 2, !dbg !7150
  %23 = load i32, i32* %ymin6, align 4, !dbg !7150
  %24 = load %struct.rcti*, %struct.rcti** %rect, align 8, !dbg !7151
  %ymax7 = getelementptr inbounds %struct.rcti, %struct.rcti* %24, i32 0, i32 3, !dbg !7152
  %25 = load i32, i32* %ymax7, align 4, !dbg !7152
  %call8 = call i32 @min_ii(i32 %23, i32 %25), !dbg !7153
  call void @RNA_int_set(%struct.PointerRNA* %21, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.91, i64 0, i64 0), i32 %call8), !dbg !7154
  %26 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7155
  %ptr9 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %26, i32 0, i32 7, !dbg !7156
  %27 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr9, align 8, !dbg !7156
  %28 = load %struct.rcti*, %struct.rcti** %rect, align 8, !dbg !7157
  %xmin10 = getelementptr inbounds %struct.rcti, %struct.rcti* %28, i32 0, i32 0, !dbg !7158
  %29 = load i32, i32* %xmin10, align 4, !dbg !7158
  %30 = load %struct.rcti*, %struct.rcti** %rect, align 8, !dbg !7159
  %xmax11 = getelementptr inbounds %struct.rcti, %struct.rcti* %30, i32 0, i32 1, !dbg !7160
  %31 = load i32, i32* %xmax11, align 4, !dbg !7160
  %call12 = call i32 @max_ii(i32 %29, i32 %31), !dbg !7161
  call void @RNA_int_set(%struct.PointerRNA* %27, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.89, i64 0, i64 0), i32 %call12), !dbg !7162
  %32 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7163
  %ptr13 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %32, i32 0, i32 7, !dbg !7164
  %33 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr13, align 8, !dbg !7164
  %34 = load %struct.rcti*, %struct.rcti** %rect, align 8, !dbg !7165
  %ymin14 = getelementptr inbounds %struct.rcti, %struct.rcti* %34, i32 0, i32 2, !dbg !7166
  %35 = load i32, i32* %ymin14, align 4, !dbg !7166
  %36 = load %struct.rcti*, %struct.rcti** %rect, align 8, !dbg !7167
  %ymax15 = getelementptr inbounds %struct.rcti, %struct.rcti* %36, i32 0, i32 3, !dbg !7168
  %37 = load i32, i32* %ymax15, align 4, !dbg !7168
  %call16 = call i32 @max_ii(i32 %35, i32 %37), !dbg !7169
  call void @RNA_int_set(%struct.PointerRNA* %33, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.93, i64 0, i64 0), i32 %call16), !dbg !7170
  store i32 1, i32* %retval, align 4, !dbg !7171
  br label %return, !dbg !7171

return:                                           ; preds = %if.end, %if.then
  %38 = load i32, i32* %retval, align 4, !dbg !7172
  ret i32 %38, !dbg !7172
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @border_apply(%struct.bContext* %C, %struct.wmOperator* %op, i32 %gesture_mode) #0 !dbg !7173 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %gesture_mode.addr = alloca i32, align 4
  %retval1 = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7176, metadata !DIExpression()), !dbg !7177
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7178, metadata !DIExpression()), !dbg !7179
  store i32 %gesture_mode, i32* %gesture_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gesture_mode.addr, metadata !7180, metadata !DIExpression()), !dbg !7181
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !7182, metadata !DIExpression()), !dbg !7183
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7184
  %call = call i32 @border_apply_rect(%struct.wmOperator* %0), !dbg !7186
  %tobool = icmp ne i32 %call, 0, !dbg !7186
  br i1 %tobool, label %if.end, label %if.then, !dbg !7187

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !7188
  br label %return, !dbg !7188

if.end:                                           ; preds = %entry
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7189
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 7, !dbg !7191
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !7191
  %call2 = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %2, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.95, i64 0, i64 0)), !dbg !7192
  %tobool3 = icmp ne %struct.PropertyRNA* %call2, null, !dbg !7192
  br i1 %tobool3, label %if.then4, label %if.end6, !dbg !7193

if.then4:                                         ; preds = %if.end
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7194
  %ptr5 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 7, !dbg !7196
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr5, align 8, !dbg !7196
  %5 = load i32, i32* %gesture_mode.addr, align 4, !dbg !7197
  call void @RNA_int_set(%struct.PointerRNA* %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.95, i64 0, i64 0), i32 %5), !dbg !7198
  br label %if.end6, !dbg !7199

if.end6:                                          ; preds = %if.then4, %if.end
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7200
  %type = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 4, !dbg !7201
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type, align 8, !dbg !7201
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 4, !dbg !7202
  %8 = load i32 (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !7202
  %9 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7203
  %10 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7204
  %call7 = call i32 %8(%struct.bContext* %9, %struct.wmOperator* %10), !dbg !7200
  store i32 %call7, i32* %retval1, align 4, !dbg !7205
  %11 = load i32, i32* %retval1, align 4, !dbg !7206
  store i32 1, i32* %retval, align 4, !dbg !7207
  br label %return, !dbg !7207

return:                                           ; preds = %if.end6, %if.then
  %12 = load i32, i32* %retval, align 4, !dbg !7208
  ret i32 %12, !dbg !7208
}

; Function Attrs: noinline nounwind uwtable
define internal void @wm_gesture_end(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !7209 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %gesture = alloca %struct.wmGesture*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7210, metadata !DIExpression()), !dbg !7211
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7212, metadata !DIExpression()), !dbg !7213
  call void @llvm.dbg.declare(metadata %struct.wmGesture** %gesture, metadata !7214, metadata !DIExpression()), !dbg !7215
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7216
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 5, !dbg !7217
  %1 = load i8*, i8** %customdata, align 8, !dbg !7217
  %2 = bitcast i8* %1 to %struct.wmGesture*, !dbg !7216
  store %struct.wmGesture* %2, %struct.wmGesture** %gesture, align 8, !dbg !7215
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7218
  %4 = load %struct.wmGesture*, %struct.wmGesture** %gesture, align 8, !dbg !7219
  call void @WM_gesture_end(%struct.bContext* %3, %struct.wmGesture* %4), !dbg !7220
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7221
  %customdata1 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %5, i32 0, i32 5, !dbg !7222
  store i8* null, i8** %customdata1, align 8, !dbg !7223
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7224
  %call = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %6), !dbg !7225
  call void @ED_area_tag_redraw(%struct.ScrArea* %call), !dbg !7226
  %7 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7227
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %7, i32 0, i32 7, !dbg !7229
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !7229
  %call2 = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.113, i64 0, i64 0)), !dbg !7230
  %tobool = icmp ne %struct.PropertyRNA* %call2, null, !dbg !7230
  br i1 %tobool, label %if.then, label %if.end, !dbg !7231

if.then:                                          ; preds = %entry
  %9 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7232
  %call3 = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %9), !dbg !7234
  call void @WM_cursor_modal_restore(%struct.wmWindow* %call3), !dbg !7235
  br label %if.end, !dbg !7236

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !7237
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_border_select_cancel(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !7238 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7239, metadata !DIExpression()), !dbg !7240
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7241, metadata !DIExpression()), !dbg !7242
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7243
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7244
  call void @wm_gesture_end(%struct.bContext* %0, %struct.wmOperator* %1), !dbg !7245
  ret void, !dbg !7246
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @WM_gesture_circle_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !7247 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7248, metadata !DIExpression()), !dbg !7249
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7250, metadata !DIExpression()), !dbg !7251
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !7252, metadata !DIExpression()), !dbg !7253
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7254
  %1 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7255
  %call = call %struct.wmGesture* @WM_gesture_new(%struct.bContext* %0, %struct.wmEvent* %1, i32 5), !dbg !7256
  %2 = bitcast %struct.wmGesture* %call to i8*, !dbg !7256
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7257
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 5, !dbg !7258
  store i8* %2, i8** %customdata, align 8, !dbg !7259
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7260
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7261
  %call1 = call %struct.wmEventHandler* @WM_event_add_modal_handler(%struct.bContext* %4, %struct.wmOperator* %5), !dbg !7262
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7263
  call void @wm_gesture_tag_redraw(%struct.bContext* %6), !dbg !7264
  ret i32 1, !dbg !7265
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @WM_gesture_circle_modal(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !7266 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %gesture = alloca %struct.wmGesture*, align 8
  %rect = alloca %struct.rcti*, align 8
  %sx = alloca i32, align 4
  %sy = alloca i32, align 4
  %fac = alloca float, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7267, metadata !DIExpression()), !dbg !7268
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7269, metadata !DIExpression()), !dbg !7270
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !7271, metadata !DIExpression()), !dbg !7272
  call void @llvm.dbg.declare(metadata %struct.wmGesture** %gesture, metadata !7273, metadata !DIExpression()), !dbg !7274
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7275
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 5, !dbg !7276
  %1 = load i8*, i8** %customdata, align 8, !dbg !7276
  %2 = bitcast i8* %1 to %struct.wmGesture*, !dbg !7275
  store %struct.wmGesture* %2, %struct.wmGesture** %gesture, align 8, !dbg !7274
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect, metadata !7277, metadata !DIExpression()), !dbg !7278
  %3 = load %struct.wmGesture*, %struct.wmGesture** %gesture, align 8, !dbg !7279
  %customdata1 = getelementptr inbounds %struct.wmGesture, %struct.wmGesture* %3, i32 0, i32 8, !dbg !7280
  %4 = load i8*, i8** %customdata1, align 8, !dbg !7280
  %5 = bitcast i8* %4 to %struct.rcti*, !dbg !7279
  store %struct.rcti* %5, %struct.rcti** %rect, align 8, !dbg !7278
  call void @llvm.dbg.declare(metadata i32* %sx, metadata !7281, metadata !DIExpression()), !dbg !7282
  call void @llvm.dbg.declare(metadata i32* %sy, metadata !7283, metadata !DIExpression()), !dbg !7284
  %6 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7285
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %6, i32 0, i32 2, !dbg !7287
  %7 = load i16, i16* %type, align 8, !dbg !7287
  %conv = sext i16 %7 to i32, !dbg !7285
  %cmp = icmp eq i32 %conv, 4, !dbg !7288
  br i1 %cmp, label %if.then, label %if.else, !dbg !7289

if.then:                                          ; preds = %entry
  %8 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7290
  %call = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %8), !dbg !7292
  %9 = load %struct.wmGesture*, %struct.wmGesture** %gesture, align 8, !dbg !7293
  %swinid = getelementptr inbounds %struct.wmGesture, %struct.wmGesture* %9, i32 0, i32 5, !dbg !7294
  %10 = load i32, i32* %swinid, align 4, !dbg !7294
  call void @wm_subwindow_origin_get(%struct.wmWindow* %call, i32 %10, i32* %sx, i32* %sy), !dbg !7295
  %11 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7296
  %x = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %11, i32 0, i32 4, !dbg !7297
  %12 = load i32, i32* %x, align 4, !dbg !7297
  %13 = load i32, i32* %sx, align 4, !dbg !7298
  %sub = sub nsw i32 %12, %13, !dbg !7299
  %14 = load %struct.rcti*, %struct.rcti** %rect, align 8, !dbg !7300
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %14, i32 0, i32 0, !dbg !7301
  store i32 %sub, i32* %xmin, align 4, !dbg !7302
  %15 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7303
  %y = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %15, i32 0, i32 5, !dbg !7304
  %16 = load i32, i32* %y, align 8, !dbg !7304
  %17 = load i32, i32* %sy, align 4, !dbg !7305
  %sub3 = sub nsw i32 %16, %17, !dbg !7306
  %18 = load %struct.rcti*, %struct.rcti** %rect, align 8, !dbg !7307
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %18, i32 0, i32 2, !dbg !7308
  store i32 %sub3, i32* %ymin, align 4, !dbg !7309
  %19 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7310
  call void @wm_gesture_tag_redraw(%struct.bContext* %19), !dbg !7311
  %20 = load %struct.wmGesture*, %struct.wmGesture** %gesture, align 8, !dbg !7312
  %mode = getelementptr inbounds %struct.wmGesture, %struct.wmGesture* %20, i32 0, i32 3, !dbg !7314
  %21 = load i32, i32* %mode, align 4, !dbg !7314
  %tobool = icmp ne i32 %21, 0, !dbg !7312
  br i1 %tobool, label %if.then4, label %if.end, !dbg !7315

if.then4:                                         ; preds = %if.then
  %22 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7316
  %23 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7317
  call void @gesture_circle_apply(%struct.bContext* %22, %struct.wmOperator* %23), !dbg !7318
  br label %if.end, !dbg !7318

if.end:                                           ; preds = %if.then4, %if.then
  br label %if.end67, !dbg !7319

if.else:                                          ; preds = %entry
  %24 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7320
  %type5 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %24, i32 0, i32 2, !dbg !7322
  %25 = load i16, i16* %type5, align 8, !dbg !7322
  %conv6 = sext i16 %25 to i32, !dbg !7320
  %cmp7 = icmp eq i32 %conv6, 20514, !dbg !7323
  br i1 %cmp7, label %if.then9, label %if.end66, !dbg !7324

if.then9:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata float* %fac, metadata !7325, metadata !DIExpression()), !dbg !7327
  %26 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7328
  %val = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %26, i32 0, i32 3, !dbg !7329
  %27 = load i16, i16* %val, align 2, !dbg !7329
  %conv10 = sext i16 %27 to i32, !dbg !7328
  switch i32 %conv10, label %sw.epilog [
    i32 11, label %sw.bb
    i32 6, label %sw.bb33
    i32 7, label %sw.bb38
    i32 3, label %sw.bb50
    i32 4, label %sw.bb50
    i32 5, label %sw.bb50
    i32 1, label %sw.bb65
    i32 2, label %sw.bb65
  ], !dbg !7330

sw.bb:                                            ; preds = %if.then9
  %28 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7331
  %y11 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %28, i32 0, i32 5, !dbg !7333
  %29 = load i32, i32* %y11, align 8, !dbg !7333
  %30 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7334
  %prevy = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %30, i32 0, i32 13, !dbg !7335
  %31 = load i32, i32* %prevy, align 4, !dbg !7335
  %sub12 = sub nsw i32 %29, %31, !dbg !7336
  %conv13 = sitofp i32 %sub12 to float, !dbg !7337
  %mul = fmul float 0x3FD3333340000000, %conv13, !dbg !7338
  store float %mul, float* %fac, align 4, !dbg !7339
  %32 = load float, float* %fac, align 4, !dbg !7340
  %cmp14 = fcmp ogt float %32, 0.000000e+00, !dbg !7342
  br i1 %cmp14, label %if.then16, label %if.else20, !dbg !7343

if.then16:                                        ; preds = %sw.bb
  %33 = load float, float* %fac, align 4, !dbg !7344
  %conv17 = fpext float %33 to double, !dbg !7344
  %34 = call double @llvm.ceil.f64(double %conv17), !dbg !7345
  %35 = load %struct.rcti*, %struct.rcti** %rect, align 8, !dbg !7346
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %35, i32 0, i32 1, !dbg !7347
  %36 = load i32, i32* %xmax, align 4, !dbg !7348
  %conv18 = sitofp i32 %36 to double, !dbg !7348
  %add = fadd double %conv18, %34, !dbg !7348
  %conv19 = fptosi double %add to i32, !dbg !7348
  store i32 %conv19, i32* %xmax, align 4, !dbg !7348
  br label %if.end26, !dbg !7346

if.else20:                                        ; preds = %sw.bb
  %37 = load float, float* %fac, align 4, !dbg !7349
  %conv21 = fpext float %37 to double, !dbg !7349
  %38 = call double @llvm.floor.f64(double %conv21), !dbg !7350
  %39 = load %struct.rcti*, %struct.rcti** %rect, align 8, !dbg !7351
  %xmax22 = getelementptr inbounds %struct.rcti, %struct.rcti* %39, i32 0, i32 1, !dbg !7352
  %40 = load i32, i32* %xmax22, align 4, !dbg !7353
  %conv23 = sitofp i32 %40 to double, !dbg !7353
  %add24 = fadd double %conv23, %38, !dbg !7353
  %conv25 = fptosi double %add24 to i32, !dbg !7353
  store i32 %conv25, i32* %xmax22, align 4, !dbg !7353
  br label %if.end26

if.end26:                                         ; preds = %if.else20, %if.then16
  %41 = load %struct.rcti*, %struct.rcti** %rect, align 8, !dbg !7354
  %xmax27 = getelementptr inbounds %struct.rcti, %struct.rcti* %41, i32 0, i32 1, !dbg !7356
  %42 = load i32, i32* %xmax27, align 4, !dbg !7356
  %cmp28 = icmp slt i32 %42, 1, !dbg !7357
  br i1 %cmp28, label %if.then30, label %if.end32, !dbg !7358

if.then30:                                        ; preds = %if.end26
  %43 = load %struct.rcti*, %struct.rcti** %rect, align 8, !dbg !7359
  %xmax31 = getelementptr inbounds %struct.rcti, %struct.rcti* %43, i32 0, i32 1, !dbg !7360
  store i32 1, i32* %xmax31, align 4, !dbg !7361
  br label %if.end32, !dbg !7359

if.end32:                                         ; preds = %if.then30, %if.end26
  %44 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7362
  call void @wm_gesture_tag_redraw(%struct.bContext* %44), !dbg !7363
  br label %sw.epilog, !dbg !7364

sw.bb33:                                          ; preds = %if.then9
  %45 = load %struct.rcti*, %struct.rcti** %rect, align 8, !dbg !7365
  %xmax34 = getelementptr inbounds %struct.rcti, %struct.rcti* %45, i32 0, i32 1, !dbg !7366
  %46 = load i32, i32* %xmax34, align 4, !dbg !7366
  %div = sdiv i32 %46, 10, !dbg !7367
  %add35 = add nsw i32 2, %div, !dbg !7368
  %47 = load %struct.rcti*, %struct.rcti** %rect, align 8, !dbg !7369
  %xmax36 = getelementptr inbounds %struct.rcti, %struct.rcti* %47, i32 0, i32 1, !dbg !7370
  %48 = load i32, i32* %xmax36, align 4, !dbg !7371
  %add37 = add nsw i32 %48, %add35, !dbg !7371
  store i32 %add37, i32* %xmax36, align 4, !dbg !7371
  %49 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7372
  call void @wm_gesture_tag_redraw(%struct.bContext* %49), !dbg !7373
  br label %sw.epilog, !dbg !7374

sw.bb38:                                          ; preds = %if.then9
  %50 = load %struct.rcti*, %struct.rcti** %rect, align 8, !dbg !7375
  %xmax39 = getelementptr inbounds %struct.rcti, %struct.rcti* %50, i32 0, i32 1, !dbg !7376
  %51 = load i32, i32* %xmax39, align 4, !dbg !7376
  %div40 = sdiv i32 %51, 10, !dbg !7377
  %add41 = add nsw i32 2, %div40, !dbg !7378
  %52 = load %struct.rcti*, %struct.rcti** %rect, align 8, !dbg !7379
  %xmax42 = getelementptr inbounds %struct.rcti, %struct.rcti* %52, i32 0, i32 1, !dbg !7380
  %53 = load i32, i32* %xmax42, align 4, !dbg !7381
  %sub43 = sub nsw i32 %53, %add41, !dbg !7381
  store i32 %sub43, i32* %xmax42, align 4, !dbg !7381
  %54 = load %struct.rcti*, %struct.rcti** %rect, align 8, !dbg !7382
  %xmax44 = getelementptr inbounds %struct.rcti, %struct.rcti* %54, i32 0, i32 1, !dbg !7384
  %55 = load i32, i32* %xmax44, align 4, !dbg !7384
  %cmp45 = icmp slt i32 %55, 1, !dbg !7385
  br i1 %cmp45, label %if.then47, label %if.end49, !dbg !7386

if.then47:                                        ; preds = %sw.bb38
  %56 = load %struct.rcti*, %struct.rcti** %rect, align 8, !dbg !7387
  %xmax48 = getelementptr inbounds %struct.rcti, %struct.rcti* %56, i32 0, i32 1, !dbg !7388
  store i32 1, i32* %xmax48, align 4, !dbg !7389
  br label %if.end49, !dbg !7387

if.end49:                                         ; preds = %if.then47, %sw.bb38
  %57 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7390
  call void @wm_gesture_tag_redraw(%struct.bContext* %57), !dbg !7391
  br label %sw.epilog, !dbg !7392

sw.bb50:                                          ; preds = %if.then9, %if.then9, %if.then9
  %58 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7393
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %58, i32 0, i32 7, !dbg !7395
  %59 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !7395
  %call51 = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %59, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.95, i64 0, i64 0)), !dbg !7396
  %tobool52 = icmp ne %struct.PropertyRNA* %call51, null, !dbg !7396
  br i1 %tobool52, label %if.then53, label %if.end57, !dbg !7397

if.then53:                                        ; preds = %sw.bb50
  %60 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7398
  %ptr54 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %60, i32 0, i32 7, !dbg !7399
  %61 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr54, align 8, !dbg !7399
  %62 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7400
  %val55 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %62, i32 0, i32 3, !dbg !7401
  %63 = load i16, i16* %val55, align 2, !dbg !7401
  %conv56 = sext i16 %63 to i32, !dbg !7400
  call void @RNA_int_set(%struct.PointerRNA* %61, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.95, i64 0, i64 0), i32 %conv56), !dbg !7402
  br label %if.end57, !dbg !7402

if.end57:                                         ; preds = %if.then53, %sw.bb50
  %64 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7403
  %val58 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %64, i32 0, i32 3, !dbg !7405
  %65 = load i16, i16* %val58, align 2, !dbg !7405
  %conv59 = sext i16 %65 to i32, !dbg !7403
  %cmp60 = icmp ne i32 %conv59, 5, !dbg !7406
  br i1 %cmp60, label %if.then62, label %if.end64, !dbg !7407

if.then62:                                        ; preds = %if.end57
  %66 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7408
  %67 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7410
  call void @gesture_circle_apply(%struct.bContext* %66, %struct.wmOperator* %67), !dbg !7411
  %68 = load %struct.wmGesture*, %struct.wmGesture** %gesture, align 8, !dbg !7412
  %mode63 = getelementptr inbounds %struct.wmGesture, %struct.wmGesture* %68, i32 0, i32 3, !dbg !7413
  store i32 1, i32* %mode63, align 4, !dbg !7414
  %69 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7415
  call void @wm_gesture_tag_redraw(%struct.bContext* %69), !dbg !7416
  br label %if.end64, !dbg !7417

if.end64:                                         ; preds = %if.then62, %if.end57
  br label %sw.epilog, !dbg !7418

sw.bb65:                                          ; preds = %if.then9, %if.then9
  %70 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7419
  %71 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7420
  call void @wm_gesture_end(%struct.bContext* %70, %struct.wmOperator* %71), !dbg !7421
  store i32 4, i32* %retval, align 4, !dbg !7422
  br label %return, !dbg !7422

sw.epilog:                                        ; preds = %if.then9, %if.end64, %if.end49, %sw.bb33, %if.end32
  br label %if.end66, !dbg !7423

if.end66:                                         ; preds = %sw.epilog, %if.else
  br label %if.end67

if.end67:                                         ; preds = %if.end66, %if.end
  store i32 1, i32* %retval, align 4, !dbg !7424
  br label %return, !dbg !7424

return:                                           ; preds = %if.end67, %sw.bb65
  %72 = load i32, i32* %retval, align 4, !dbg !7425
  ret i32 %72, !dbg !7425
}

; Function Attrs: noinline nounwind uwtable
define internal void @gesture_circle_apply(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !7426 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %gesture = alloca %struct.wmGesture*, align 8
  %rect = alloca %struct.rcti*, align 8
  %retval = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7427, metadata !DIExpression()), !dbg !7428
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7429, metadata !DIExpression()), !dbg !7430
  call void @llvm.dbg.declare(metadata %struct.wmGesture** %gesture, metadata !7431, metadata !DIExpression()), !dbg !7432
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7433
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 5, !dbg !7434
  %1 = load i8*, i8** %customdata, align 8, !dbg !7434
  %2 = bitcast i8* %1 to %struct.wmGesture*, !dbg !7433
  store %struct.wmGesture* %2, %struct.wmGesture** %gesture, align 8, !dbg !7432
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect, metadata !7435, metadata !DIExpression()), !dbg !7436
  %3 = load %struct.wmGesture*, %struct.wmGesture** %gesture, align 8, !dbg !7437
  %customdata1 = getelementptr inbounds %struct.wmGesture, %struct.wmGesture* %3, i32 0, i32 8, !dbg !7438
  %4 = load i8*, i8** %customdata1, align 8, !dbg !7438
  %5 = bitcast i8* %4 to %struct.rcti*, !dbg !7437
  store %struct.rcti* %5, %struct.rcti** %rect, align 8, !dbg !7436
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7439
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 7, !dbg !7441
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !7441
  %call = call i32 @RNA_int_get(%struct.PointerRNA* %7, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.95, i64 0, i64 0)), !dbg !7442
  %cmp = icmp eq i32 %call, 5, !dbg !7443
  br i1 %cmp, label %if.then, label %if.end, !dbg !7444

if.then:                                          ; preds = %entry
  br label %return, !dbg !7445

if.end:                                           ; preds = %entry
  %8 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7446
  %ptr2 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %8, i32 0, i32 7, !dbg !7447
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr2, align 8, !dbg !7447
  %10 = load %struct.rcti*, %struct.rcti** %rect, align 8, !dbg !7448
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %10, i32 0, i32 0, !dbg !7449
  %11 = load i32, i32* %xmin, align 4, !dbg !7449
  call void @RNA_int_set(%struct.PointerRNA* %9, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.181, i64 0, i64 0), i32 %11), !dbg !7450
  %12 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7451
  %ptr3 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %12, i32 0, i32 7, !dbg !7452
  %13 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr3, align 8, !dbg !7452
  %14 = load %struct.rcti*, %struct.rcti** %rect, align 8, !dbg !7453
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %14, i32 0, i32 2, !dbg !7454
  %15 = load i32, i32* %ymin, align 4, !dbg !7454
  call void @RNA_int_set(%struct.PointerRNA* %13, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.182, i64 0, i64 0), i32 %15), !dbg !7455
  %16 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7456
  %ptr4 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %16, i32 0, i32 7, !dbg !7457
  %17 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr4, align 8, !dbg !7457
  %18 = load %struct.rcti*, %struct.rcti** %rect, align 8, !dbg !7458
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %18, i32 0, i32 1, !dbg !7459
  %19 = load i32, i32* %xmax, align 4, !dbg !7459
  call void @RNA_int_set(%struct.PointerRNA* %17, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.183, i64 0, i64 0), i32 %19), !dbg !7460
  %20 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7461
  %type = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %20, i32 0, i32 4, !dbg !7463
  %21 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type, align 8, !dbg !7463
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %21, i32 0, i32 4, !dbg !7464
  %22 = load i32 (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !7464
  %tobool = icmp ne i32 (%struct.bContext*, %struct.wmOperator*)* %22, null, !dbg !7461
  br i1 %tobool, label %if.then5, label %if.end9, !dbg !7465

if.then5:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %retval, metadata !7466, metadata !DIExpression()), !dbg !7468
  %23 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7469
  %type6 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %23, i32 0, i32 4, !dbg !7470
  %24 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type6, align 8, !dbg !7470
  %exec7 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %24, i32 0, i32 4, !dbg !7471
  %25 = load i32 (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*)** %exec7, align 8, !dbg !7471
  %26 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7472
  %27 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7473
  %call8 = call i32 %25(%struct.bContext* %26, %struct.wmOperator* %27), !dbg !7469
  store i32 %call8, i32* %retval, align 4, !dbg !7474
  %28 = load i32, i32* %retval, align 4, !dbg !7475
  br label %if.end9, !dbg !7476

if.end9:                                          ; preds = %if.then5, %if.end
  %29 = load %struct.rcti*, %struct.rcti** %rect, align 8, !dbg !7477
  %xmax10 = getelementptr inbounds %struct.rcti, %struct.rcti* %29, i32 0, i32 1, !dbg !7478
  %30 = load i32, i32* %xmax10, align 4, !dbg !7478
  store i32 %30, i32* @circle_select_size, align 4, !dbg !7479
  br label %return, !dbg !7480

return:                                           ; preds = %if.end9, %if.then
  ret void, !dbg !7480
}

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.ceil.f64(double) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.floor.f64(double) #1

declare dso_local void @RNA_int_set(%struct.PointerRNA*, i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_gesture_circle_cancel(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !7481 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7482, metadata !DIExpression()), !dbg !7483
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7484, metadata !DIExpression()), !dbg !7485
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7486
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7487
  call void @wm_gesture_end(%struct.bContext* %0, %struct.wmOperator* %1), !dbg !7488
  ret void, !dbg !7489
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @wm_tweakevent_test(%struct.bContext* %C, %struct.wmEvent* %event, i32 %action) #0 !dbg !7490 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %action.addr = alloca i32, align 4
  %win = alloca %struct.wmWindow*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7493, metadata !DIExpression()), !dbg !7494
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !7495, metadata !DIExpression()), !dbg !7496
  store i32 %action, i32* %action.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %action.addr, metadata !7497, metadata !DIExpression()), !dbg !7498
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win, metadata !7499, metadata !DIExpression()), !dbg !7500
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7501
  %call = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %0), !dbg !7502
  store %struct.wmWindow* %call, %struct.wmWindow** %win, align 8, !dbg !7500
  %1 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !7503
  %tweak = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %1, i32 0, i32 23, !dbg !7505
  %2 = load %struct.wmGesture*, %struct.wmGesture** %tweak, align 8, !dbg !7505
  %cmp = icmp eq %struct.wmGesture* %2, null, !dbg !7506
  br i1 %cmp, label %if.then, label %if.else, !dbg !7507

if.then:                                          ; preds = %entry
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7508
  %call1 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %3), !dbg !7511
  %tobool = icmp ne %struct.ARegion* %call1, null, !dbg !7511
  br i1 %tobool, label %if.then2, label %if.end22, !dbg !7512

if.then2:                                         ; preds = %if.then
  %4 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7513
  %val = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %4, i32 0, i32 3, !dbg !7516
  %5 = load i16, i16* %val, align 2, !dbg !7516
  %conv = sext i16 %5 to i32, !dbg !7513
  %cmp3 = icmp eq i32 %conv, 1, !dbg !7517
  br i1 %cmp3, label %if.then5, label %if.end21, !dbg !7518

if.then5:                                         ; preds = %if.then2
  %6 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7519
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %6, i32 0, i32 2, !dbg !7519
  %7 = load i16, i16* %type, align 8, !dbg !7519
  %conv6 = sext i16 %7 to i32, !dbg !7519
  %cmp7 = icmp eq i32 %conv6, 1, !dbg !7519
  br i1 %cmp7, label %if.then18, label %lor.lhs.false, !dbg !7519

lor.lhs.false:                                    ; preds = %if.then5
  %8 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7519
  %type9 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %8, i32 0, i32 2, !dbg !7519
  %9 = load i16, i16* %type9, align 8, !dbg !7519
  %conv10 = sext i16 %9 to i32, !dbg !7519
  %cmp11 = icmp eq i32 %conv10, 2, !dbg !7519
  br i1 %cmp11, label %if.then18, label %lor.lhs.false13, !dbg !7519

lor.lhs.false13:                                  ; preds = %lor.lhs.false
  %10 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7519
  %type14 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %10, i32 0, i32 2, !dbg !7519
  %11 = load i16, i16* %type14, align 8, !dbg !7519
  %conv15 = sext i16 %11 to i32, !dbg !7519
  %cmp16 = icmp eq i32 %conv15, 3, !dbg !7519
  br i1 %cmp16, label %if.then18, label %if.end, !dbg !7522

if.then18:                                        ; preds = %lor.lhs.false13, %lor.lhs.false, %if.then5
  %12 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7523
  %13 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7525
  %call19 = call %struct.wmGesture* @WM_gesture_new(%struct.bContext* %12, %struct.wmEvent* %13, i32 0), !dbg !7526
  %14 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !7527
  %tweak20 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %14, i32 0, i32 23, !dbg !7528
  store %struct.wmGesture* %call19, %struct.wmGesture** %tweak20, align 8, !dbg !7529
  br label %if.end, !dbg !7530

if.end:                                           ; preds = %if.then18, %lor.lhs.false13
  br label %if.end21, !dbg !7531

if.end21:                                         ; preds = %if.end, %if.then2
  br label %if.end22, !dbg !7532

if.end22:                                         ; preds = %if.end21, %if.then
  br label %if.end28, !dbg !7533

if.else:                                          ; preds = %entry
  %15 = load i32, i32* %action.addr, align 4, !dbg !7534
  %and = and i32 %15, 1, !dbg !7537
  %tobool23 = icmp ne i32 %and, 0, !dbg !7537
  br i1 %tobool23, label %if.then24, label %if.else26, !dbg !7538

if.then24:                                        ; preds = %if.else
  %16 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7539
  %17 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !7541
  %tweak25 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %17, i32 0, i32 23, !dbg !7542
  %18 = load %struct.wmGesture*, %struct.wmGesture** %tweak25, align 8, !dbg !7542
  call void @WM_gesture_end(%struct.bContext* %16, %struct.wmGesture* %18), !dbg !7543
  br label %if.end27, !dbg !7544

if.else26:                                        ; preds = %if.else
  %19 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7545
  %20 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7546
  call void @tweak_gesture_modal(%struct.bContext* %19, %struct.wmEvent* %20), !dbg !7547
  br label %if.end27

if.end27:                                         ; preds = %if.else26, %if.then24
  br label %if.end28

if.end28:                                         ; preds = %if.end27, %if.end22
  ret void, !dbg !7548
}

declare dso_local %struct.ARegion* @CTX_wm_region(%struct.bContext*) #2

declare dso_local void @WM_gesture_end(%struct.bContext*, %struct.wmGesture*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @tweak_gesture_modal(%struct.bContext* %C, %struct.wmEvent* %event) #0 !dbg !7549 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %window = alloca %struct.wmWindow*, align 8
  %gesture = alloca %struct.wmGesture*, align 8
  %rect = alloca %struct.rcti*, align 8
  %sx = alloca i32, align 4
  %sy = alloca i32, align 4
  %val = alloca i32, align 4
  %tevent = alloca %struct.wmEvent, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7552, metadata !DIExpression()), !dbg !7553
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !7554, metadata !DIExpression()), !dbg !7555
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %window, metadata !7556, metadata !DIExpression()), !dbg !7557
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7558
  %call = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %0), !dbg !7559
  store %struct.wmWindow* %call, %struct.wmWindow** %window, align 8, !dbg !7557
  call void @llvm.dbg.declare(metadata %struct.wmGesture** %gesture, metadata !7560, metadata !DIExpression()), !dbg !7561
  %1 = load %struct.wmWindow*, %struct.wmWindow** %window, align 8, !dbg !7562
  %tweak = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %1, i32 0, i32 23, !dbg !7563
  %2 = load %struct.wmGesture*, %struct.wmGesture** %tweak, align 8, !dbg !7563
  store %struct.wmGesture* %2, %struct.wmGesture** %gesture, align 8, !dbg !7561
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect, metadata !7564, metadata !DIExpression()), !dbg !7565
  %3 = load %struct.wmGesture*, %struct.wmGesture** %gesture, align 8, !dbg !7566
  %customdata = getelementptr inbounds %struct.wmGesture, %struct.wmGesture* %3, i32 0, i32 8, !dbg !7567
  %4 = load i8*, i8** %customdata, align 8, !dbg !7567
  %5 = bitcast i8* %4 to %struct.rcti*, !dbg !7566
  store %struct.rcti* %5, %struct.rcti** %rect, align 8, !dbg !7565
  call void @llvm.dbg.declare(metadata i32* %sx, metadata !7568, metadata !DIExpression()), !dbg !7569
  call void @llvm.dbg.declare(metadata i32* %sy, metadata !7570, metadata !DIExpression()), !dbg !7571
  call void @llvm.dbg.declare(metadata i32* %val, metadata !7572, metadata !DIExpression()), !dbg !7573
  %6 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7574
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %6, i32 0, i32 2, !dbg !7575
  %7 = load i16, i16* %type, align 8, !dbg !7575
  %conv = sext i16 %7 to i32, !dbg !7574
  switch i32 %conv, label %sw.default [
    i32 4, label %sw.bb
    i32 17, label %sw.bb
    i32 1, label %sw.bb20
    i32 3, label %sw.bb20
    i32 2, label %sw.bb20
  ], !dbg !7576

sw.bb:                                            ; preds = %entry, %entry
  %8 = load %struct.wmWindow*, %struct.wmWindow** %window, align 8, !dbg !7577
  %9 = load %struct.wmGesture*, %struct.wmGesture** %gesture, align 8, !dbg !7579
  %swinid = getelementptr inbounds %struct.wmGesture, %struct.wmGesture* %9, i32 0, i32 5, !dbg !7580
  %10 = load i32, i32* %swinid, align 4, !dbg !7580
  call void @wm_subwindow_origin_get(%struct.wmWindow* %8, i32 %10, i32* %sx, i32* %sy), !dbg !7581
  %11 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7582
  %x = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %11, i32 0, i32 4, !dbg !7583
  %12 = load i32, i32* %x, align 4, !dbg !7583
  %13 = load i32, i32* %sx, align 4, !dbg !7584
  %sub = sub nsw i32 %12, %13, !dbg !7585
  %14 = load %struct.rcti*, %struct.rcti** %rect, align 8, !dbg !7586
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %14, i32 0, i32 1, !dbg !7587
  store i32 %sub, i32* %xmax, align 4, !dbg !7588
  %15 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7589
  %y = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %15, i32 0, i32 5, !dbg !7590
  %16 = load i32, i32* %y, align 8, !dbg !7590
  %17 = load i32, i32* %sy, align 4, !dbg !7591
  %sub1 = sub nsw i32 %16, %17, !dbg !7592
  %18 = load %struct.rcti*, %struct.rcti** %rect, align 8, !dbg !7593
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %18, i32 0, i32 3, !dbg !7594
  store i32 %sub1, i32* %ymax, align 4, !dbg !7595
  %19 = load %struct.wmGesture*, %struct.wmGesture** %gesture, align 8, !dbg !7596
  %call2 = call i32 @wm_gesture_evaluate(%struct.wmGesture* %19), !dbg !7598
  store i32 %call2, i32* %val, align 4, !dbg !7599
  %tobool = icmp ne i32 %call2, 0, !dbg !7599
  br i1 %tobool, label %if.then, label %if.end19, !dbg !7600

if.then:                                          ; preds = %sw.bb
  call void @llvm.dbg.declare(metadata %struct.wmEvent* %tevent, metadata !7601, metadata !DIExpression()), !dbg !7603
  %20 = load %struct.wmWindow*, %struct.wmWindow** %window, align 8, !dbg !7604
  call void @wm_event_init_from_window(%struct.wmWindow* %20, %struct.wmEvent* %tevent), !dbg !7605
  %21 = load %struct.rcti*, %struct.rcti** %rect, align 8, !dbg !7606
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %21, i32 0, i32 0, !dbg !7607
  %22 = load i32, i32* %xmin, align 4, !dbg !7607
  %23 = load i32, i32* %sx, align 4, !dbg !7608
  %add = add nsw i32 %22, %23, !dbg !7609
  %x3 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %tevent, i32 0, i32 4, !dbg !7610
  store i32 %add, i32* %x3, align 4, !dbg !7611
  %24 = load %struct.rcti*, %struct.rcti** %rect, align 8, !dbg !7612
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %24, i32 0, i32 2, !dbg !7613
  %25 = load i32, i32* %ymin, align 4, !dbg !7613
  %26 = load i32, i32* %sy, align 4, !dbg !7614
  %add4 = add nsw i32 %25, %26, !dbg !7615
  %y5 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %tevent, i32 0, i32 5, !dbg !7616
  store i32 %add4, i32* %y5, align 8, !dbg !7617
  %27 = load %struct.wmGesture*, %struct.wmGesture** %gesture, align 8, !dbg !7618
  %event_type = getelementptr inbounds %struct.wmGesture, %struct.wmGesture* %27, i32 0, i32 2, !dbg !7620
  %28 = load i32, i32* %event_type, align 8, !dbg !7620
  %cmp = icmp eq i32 %28, 1, !dbg !7621
  br i1 %cmp, label %if.then7, label %if.else, !dbg !7622

if.then7:                                         ; preds = %if.then
  %type8 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %tevent, i32 0, i32 2, !dbg !7623
  store i16 20483, i16* %type8, align 8, !dbg !7624
  br label %if.end16, !dbg !7625

if.else:                                          ; preds = %if.then
  %29 = load %struct.wmGesture*, %struct.wmGesture** %gesture, align 8, !dbg !7626
  %event_type9 = getelementptr inbounds %struct.wmGesture, %struct.wmGesture* %29, i32 0, i32 2, !dbg !7628
  %30 = load i32, i32* %event_type9, align 8, !dbg !7628
  %cmp10 = icmp eq i32 %30, 3, !dbg !7629
  br i1 %cmp10, label %if.then12, label %if.else14, !dbg !7630

if.then12:                                        ; preds = %if.else
  %type13 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %tevent, i32 0, i32 2, !dbg !7631
  store i16 20485, i16* %type13, align 8, !dbg !7632
  br label %if.end, !dbg !7633

if.else14:                                        ; preds = %if.else
  %type15 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %tevent, i32 0, i32 2, !dbg !7634
  store i16 20484, i16* %type15, align 8, !dbg !7635
  br label %if.end

if.end:                                           ; preds = %if.else14, %if.then12
  br label %if.end16

if.end16:                                         ; preds = %if.end, %if.then7
  %31 = load i32, i32* %val, align 4, !dbg !7636
  %conv17 = trunc i32 %31 to i16, !dbg !7636
  %val18 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %tevent, i32 0, i32 3, !dbg !7637
  store i16 %conv17, i16* %val18, align 2, !dbg !7638
  %32 = load %struct.wmWindow*, %struct.wmWindow** %window, align 8, !dbg !7639
  call void @wm_event_add(%struct.wmWindow* %32, %struct.wmEvent* %tevent), !dbg !7640
  %33 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7641
  %34 = load %struct.wmGesture*, %struct.wmGesture** %gesture, align 8, !dbg !7642
  call void @WM_gesture_end(%struct.bContext* %33, %struct.wmGesture* %34), !dbg !7643
  br label %if.end19, !dbg !7644

if.end19:                                         ; preds = %if.end16, %sw.bb
  br label %sw.epilog, !dbg !7645

sw.bb20:                                          ; preds = %entry, %entry, %entry
  %35 = load %struct.wmGesture*, %struct.wmGesture** %gesture, align 8, !dbg !7646
  %event_type21 = getelementptr inbounds %struct.wmGesture, %struct.wmGesture* %35, i32 0, i32 2, !dbg !7648
  %36 = load i32, i32* %event_type21, align 8, !dbg !7648
  %37 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7649
  %type22 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %37, i32 0, i32 2, !dbg !7650
  %38 = load i16, i16* %type22, align 8, !dbg !7650
  %conv23 = sext i16 %38 to i32, !dbg !7649
  %cmp24 = icmp eq i32 %36, %conv23, !dbg !7651
  br i1 %cmp24, label %if.then26, label %if.end28, !dbg !7652

if.then26:                                        ; preds = %sw.bb20
  %39 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7653
  %40 = load %struct.wmGesture*, %struct.wmGesture** %gesture, align 8, !dbg !7655
  call void @WM_gesture_end(%struct.bContext* %39, %struct.wmGesture* %40), !dbg !7656
  %41 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7657
  %val27 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %41, i32 0, i32 3, !dbg !7658
  store i16 2, i16* %val27, align 2, !dbg !7659
  br label %if.end28, !dbg !7660

if.end28:                                         ; preds = %if.then26, %sw.bb20
  br label %sw.epilog, !dbg !7661

sw.default:                                       ; preds = %entry
  %42 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7662
  %type29 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %42, i32 0, i32 2, !dbg !7662
  %43 = load i16, i16* %type29, align 8, !dbg !7662
  %conv30 = sext i16 %43 to i32, !dbg !7662
  %cmp31 = icmp sge i32 %conv30, 272, !dbg !7662
  br i1 %cmp31, label %land.lhs.true, label %land.lhs.true37, !dbg !7662

land.lhs.true:                                    ; preds = %sw.default
  %44 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7662
  %type33 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %44, i32 0, i32 2, !dbg !7662
  %45 = load i16, i16* %type33, align 8, !dbg !7662
  %conv34 = sext i16 %45 to i32, !dbg !7662
  %cmp35 = icmp sle i32 %conv34, 287, !dbg !7662
  br i1 %cmp35, label %if.end43, label %land.lhs.true37, !dbg !7664

land.lhs.true37:                                  ; preds = %land.lhs.true, %sw.default
  %46 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7665
  %type38 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %46, i32 0, i32 2, !dbg !7666
  %47 = load i16, i16* %type38, align 8, !dbg !7666
  %conv39 = sext i16 %47 to i32, !dbg !7665
  %cmp40 = icmp ne i32 %conv39, 0, !dbg !7667
  br i1 %cmp40, label %if.then42, label %if.end43, !dbg !7668

if.then42:                                        ; preds = %land.lhs.true37
  %48 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7669
  %49 = load %struct.wmGesture*, %struct.wmGesture** %gesture, align 8, !dbg !7671
  call void @WM_gesture_end(%struct.bContext* %48, %struct.wmGesture* %49), !dbg !7672
  br label %if.end43, !dbg !7673

if.end43:                                         ; preds = %if.then42, %land.lhs.true37, %land.lhs.true
  br label %sw.epilog, !dbg !7674

sw.epilog:                                        ; preds = %if.end43, %if.end28, %if.end19
  ret void, !dbg !7675
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @WM_gesture_lasso_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !7676 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7677, metadata !DIExpression()), !dbg !7678
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7679, metadata !DIExpression()), !dbg !7680
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !7681, metadata !DIExpression()), !dbg !7682
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7683
  %1 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7684
  %call = call %struct.wmGesture* @WM_gesture_new(%struct.bContext* %0, %struct.wmEvent* %1, i32 4), !dbg !7685
  %2 = bitcast %struct.wmGesture* %call to i8*, !dbg !7685
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7686
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 5, !dbg !7687
  store i8* %2, i8** %customdata, align 8, !dbg !7688
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7689
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7690
  %call1 = call %struct.wmEventHandler* @WM_event_add_modal_handler(%struct.bContext* %4, %struct.wmOperator* %5), !dbg !7691
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7692
  call void @wm_gesture_tag_redraw(%struct.bContext* %6), !dbg !7693
  %7 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7694
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %7, i32 0, i32 7, !dbg !7696
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !7696
  %call2 = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.113, i64 0, i64 0)), !dbg !7697
  %tobool = icmp ne %struct.PropertyRNA* %call2, null, !dbg !7697
  br i1 %tobool, label %if.then, label %if.end, !dbg !7698

if.then:                                          ; preds = %entry
  %9 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7699
  %call3 = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %9), !dbg !7701
  %10 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7702
  %ptr4 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %10, i32 0, i32 7, !dbg !7703
  %11 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr4, align 8, !dbg !7703
  %call5 = call i32 @RNA_int_get(%struct.PointerRNA* %11, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.113, i64 0, i64 0)), !dbg !7704
  call void @WM_cursor_modal_set(%struct.wmWindow* %call3, i32 %call5), !dbg !7705
  br label %if.end, !dbg !7706

if.end:                                           ; preds = %if.then, %entry
  ret i32 1, !dbg !7707
}

declare dso_local void @WM_cursor_modal_set(%struct.wmWindow*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @WM_gesture_lines_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !7708 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7709, metadata !DIExpression()), !dbg !7710
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7711, metadata !DIExpression()), !dbg !7712
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !7713, metadata !DIExpression()), !dbg !7714
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7715
  %1 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7716
  %call = call %struct.wmGesture* @WM_gesture_new(%struct.bContext* %0, %struct.wmEvent* %1, i32 1), !dbg !7717
  %2 = bitcast %struct.wmGesture* %call to i8*, !dbg !7717
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7718
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 5, !dbg !7719
  store i8* %2, i8** %customdata, align 8, !dbg !7720
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7721
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7722
  %call1 = call %struct.wmEventHandler* @WM_event_add_modal_handler(%struct.bContext* %4, %struct.wmOperator* %5), !dbg !7723
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7724
  call void @wm_gesture_tag_redraw(%struct.bContext* %6), !dbg !7725
  %7 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7726
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %7, i32 0, i32 7, !dbg !7728
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !7728
  %call2 = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.113, i64 0, i64 0)), !dbg !7729
  %tobool = icmp ne %struct.PropertyRNA* %call2, null, !dbg !7729
  br i1 %tobool, label %if.then, label %if.end, !dbg !7730

if.then:                                          ; preds = %entry
  %9 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7731
  %call3 = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %9), !dbg !7733
  %10 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7734
  %ptr4 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %10, i32 0, i32 7, !dbg !7735
  %11 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr4, align 8, !dbg !7735
  %call5 = call i32 @RNA_int_get(%struct.PointerRNA* %11, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.113, i64 0, i64 0)), !dbg !7736
  call void @WM_cursor_modal_set(%struct.wmWindow* %call3, i32 %call5), !dbg !7737
  br label %if.end, !dbg !7738

if.end:                                           ; preds = %if.then, %entry
  ret i32 1, !dbg !7739
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @WM_gesture_lasso_modal(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !7740 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %gesture = alloca %struct.wmGesture*, align 8
  %sx = alloca i32, align 4
  %sy = alloca i32, align 4
  %old_lasso = alloca i16*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %lasso = alloca i16*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7741, metadata !DIExpression()), !dbg !7742
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7743, metadata !DIExpression()), !dbg !7744
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !7745, metadata !DIExpression()), !dbg !7746
  call void @llvm.dbg.declare(metadata %struct.wmGesture** %gesture, metadata !7747, metadata !DIExpression()), !dbg !7748
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7749
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 5, !dbg !7750
  %1 = load i8*, i8** %customdata, align 8, !dbg !7750
  %2 = bitcast i8* %1 to %struct.wmGesture*, !dbg !7749
  store %struct.wmGesture* %2, %struct.wmGesture** %gesture, align 8, !dbg !7748
  call void @llvm.dbg.declare(metadata i32* %sx, metadata !7751, metadata !DIExpression()), !dbg !7752
  call void @llvm.dbg.declare(metadata i32* %sy, metadata !7753, metadata !DIExpression()), !dbg !7754
  %3 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7755
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %3, i32 0, i32 2, !dbg !7756
  %4 = load i16, i16* %type, align 8, !dbg !7756
  %conv = sext i16 %4 to i32, !dbg !7755
  switch i32 %conv, label %sw.epilog [
    i32 4, label %sw.bb
    i32 17, label %sw.bb
    i32 1, label %sw.bb43
    i32 2, label %sw.bb43
    i32 3, label %sw.bb43
    i32 218, label %sw.bb49
  ], !dbg !7757

sw.bb:                                            ; preds = %entry, %entry
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7758
  call void @wm_gesture_tag_redraw(%struct.bContext* %5), !dbg !7760
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7761
  %call = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %6), !dbg !7762
  %7 = load %struct.wmGesture*, %struct.wmGesture** %gesture, align 8, !dbg !7763
  %swinid = getelementptr inbounds %struct.wmGesture, %struct.wmGesture* %7, i32 0, i32 5, !dbg !7764
  %8 = load i32, i32* %swinid, align 4, !dbg !7764
  call void @wm_subwindow_origin_get(%struct.wmWindow* %call, i32 %8, i32* %sx, i32* %sy), !dbg !7765
  %9 = load %struct.wmGesture*, %struct.wmGesture** %gesture, align 8, !dbg !7766
  %points = getelementptr inbounds %struct.wmGesture, %struct.wmGesture* %9, i32 0, i32 6, !dbg !7768
  %10 = load i32, i32* %points, align 8, !dbg !7768
  %11 = load %struct.wmGesture*, %struct.wmGesture** %gesture, align 8, !dbg !7769
  %size = getelementptr inbounds %struct.wmGesture, %struct.wmGesture* %11, i32 0, i32 7, !dbg !7770
  %12 = load i32, i32* %size, align 4, !dbg !7770
  %cmp = icmp eq i32 %10, %12, !dbg !7771
  br i1 %cmp, label %if.then, label %if.end, !dbg !7772

if.then:                                          ; preds = %sw.bb
  call void @llvm.dbg.declare(metadata i16** %old_lasso, metadata !7773, metadata !DIExpression()), !dbg !7775
  %13 = load %struct.wmGesture*, %struct.wmGesture** %gesture, align 8, !dbg !7776
  %customdata2 = getelementptr inbounds %struct.wmGesture, %struct.wmGesture* %13, i32 0, i32 8, !dbg !7777
  %14 = load i8*, i8** %customdata2, align 8, !dbg !7777
  %15 = bitcast i8* %14 to i16*, !dbg !7776
  store i16* %15, i16** %old_lasso, align 8, !dbg !7775
  %16 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7778
  %17 = load %struct.wmGesture*, %struct.wmGesture** %gesture, align 8, !dbg !7779
  %size3 = getelementptr inbounds %struct.wmGesture, %struct.wmGesture* %17, i32 0, i32 7, !dbg !7780
  %18 = load i32, i32* %size3, align 4, !dbg !7780
  %add = add nsw i32 %18, 1024, !dbg !7781
  %conv4 = sext i32 %add to i64, !dbg !7782
  %mul = mul i64 4, %conv4, !dbg !7783
  %call5 = call i8* %16(i64 %mul, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.123, i64 0, i64 0)), !dbg !7778
  %19 = load %struct.wmGesture*, %struct.wmGesture** %gesture, align 8, !dbg !7784
  %customdata6 = getelementptr inbounds %struct.wmGesture, %struct.wmGesture* %19, i32 0, i32 8, !dbg !7785
  store i8* %call5, i8** %customdata6, align 8, !dbg !7786
  %20 = load %struct.wmGesture*, %struct.wmGesture** %gesture, align 8, !dbg !7787
  %customdata7 = getelementptr inbounds %struct.wmGesture, %struct.wmGesture* %20, i32 0, i32 8, !dbg !7788
  %21 = load i8*, i8** %customdata7, align 8, !dbg !7788
  %22 = load i16*, i16** %old_lasso, align 8, !dbg !7789
  %23 = bitcast i16* %22 to i8*, !dbg !7790
  %24 = load %struct.wmGesture*, %struct.wmGesture** %gesture, align 8, !dbg !7791
  %size8 = getelementptr inbounds %struct.wmGesture, %struct.wmGesture* %24, i32 0, i32 7, !dbg !7792
  %25 = load i32, i32* %size8, align 4, !dbg !7792
  %conv9 = sext i32 %25 to i64, !dbg !7791
  %mul10 = mul i64 4, %conv9, !dbg !7793
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %21, i8* align 2 %23, i64 %mul10, i1 false), !dbg !7790
  %26 = load %struct.wmGesture*, %struct.wmGesture** %gesture, align 8, !dbg !7794
  %size11 = getelementptr inbounds %struct.wmGesture, %struct.wmGesture* %26, i32 0, i32 7, !dbg !7795
  %27 = load i32, i32* %size11, align 4, !dbg !7795
  %add12 = add nsw i32 %27, 1024, !dbg !7796
  %28 = load %struct.wmGesture*, %struct.wmGesture** %gesture, align 8, !dbg !7797
  %size13 = getelementptr inbounds %struct.wmGesture, %struct.wmGesture* %28, i32 0, i32 7, !dbg !7798
  store i32 %add12, i32* %size13, align 4, !dbg !7799
  %29 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7800
  %30 = load i16*, i16** %old_lasso, align 8, !dbg !7801
  %31 = bitcast i16* %30 to i8*, !dbg !7801
  call void %29(i8* %31), !dbg !7800
  br label %if.end, !dbg !7802

if.end:                                           ; preds = %if.then, %sw.bb
  call void @llvm.dbg.declare(metadata i32* %x, metadata !7803, metadata !DIExpression()), !dbg !7805
  call void @llvm.dbg.declare(metadata i32* %y, metadata !7806, metadata !DIExpression()), !dbg !7807
  call void @llvm.dbg.declare(metadata i16** %lasso, metadata !7808, metadata !DIExpression()), !dbg !7809
  %32 = load %struct.wmGesture*, %struct.wmGesture** %gesture, align 8, !dbg !7810
  %customdata14 = getelementptr inbounds %struct.wmGesture, %struct.wmGesture* %32, i32 0, i32 8, !dbg !7811
  %33 = load i8*, i8** %customdata14, align 8, !dbg !7811
  %34 = bitcast i8* %33 to i16*, !dbg !7810
  store i16* %34, i16** %lasso, align 8, !dbg !7809
  %35 = load %struct.wmGesture*, %struct.wmGesture** %gesture, align 8, !dbg !7812
  %points15 = getelementptr inbounds %struct.wmGesture, %struct.wmGesture* %35, i32 0, i32 6, !dbg !7813
  %36 = load i32, i32* %points15, align 8, !dbg !7813
  %mul16 = mul nsw i32 2, %36, !dbg !7814
  %sub = sub nsw i32 %mul16, 2, !dbg !7815
  %37 = load i16*, i16** %lasso, align 8, !dbg !7816
  %idx.ext = sext i32 %sub to i64, !dbg !7816
  %add.ptr = getelementptr inbounds i16, i16* %37, i64 %idx.ext, !dbg !7816
  store i16* %add.ptr, i16** %lasso, align 8, !dbg !7816
  %38 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7817
  %x17 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %38, i32 0, i32 4, !dbg !7818
  %39 = load i32, i32* %x17, align 4, !dbg !7818
  %40 = load i32, i32* %sx, align 4, !dbg !7819
  %sub18 = sub nsw i32 %39, %40, !dbg !7820
  %41 = load i16*, i16** %lasso, align 8, !dbg !7821
  %arrayidx = getelementptr inbounds i16, i16* %41, i64 0, !dbg !7821
  %42 = load i16, i16* %arrayidx, align 2, !dbg !7821
  %conv19 = sext i16 %42 to i32, !dbg !7821
  %sub20 = sub nsw i32 %sub18, %conv19, !dbg !7822
  store i32 %sub20, i32* %x, align 4, !dbg !7823
  %43 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7824
  %y21 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %43, i32 0, i32 5, !dbg !7825
  %44 = load i32, i32* %y21, align 8, !dbg !7825
  %45 = load i32, i32* %sy, align 4, !dbg !7826
  %sub22 = sub nsw i32 %44, %45, !dbg !7827
  %46 = load i16*, i16** %lasso, align 8, !dbg !7828
  %arrayidx23 = getelementptr inbounds i16, i16* %46, i64 1, !dbg !7828
  %47 = load i16, i16* %arrayidx23, align 2, !dbg !7828
  %conv24 = sext i16 %47 to i32, !dbg !7828
  %sub25 = sub nsw i32 %sub22, %conv24, !dbg !7829
  store i32 %sub25, i32* %y, align 4, !dbg !7830
  %48 = load i32, i32* %x, align 4, !dbg !7831
  %49 = load i32, i32* %x, align 4, !dbg !7833
  %mul26 = mul nsw i32 %48, %49, !dbg !7834
  %50 = load i32, i32* %y, align 4, !dbg !7835
  %51 = load i32, i32* %y, align 4, !dbg !7836
  %mul27 = mul nsw i32 %50, %51, !dbg !7837
  %add28 = add nsw i32 %mul26, %mul27, !dbg !7838
  %cmp29 = icmp sgt i32 %add28, 4, !dbg !7839
  br i1 %cmp29, label %if.then31, label %if.end42, !dbg !7840

if.then31:                                        ; preds = %if.end
  %52 = load i16*, i16** %lasso, align 8, !dbg !7841
  %add.ptr32 = getelementptr inbounds i16, i16* %52, i64 2, !dbg !7841
  store i16* %add.ptr32, i16** %lasso, align 8, !dbg !7841
  %53 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7843
  %x33 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %53, i32 0, i32 4, !dbg !7844
  %54 = load i32, i32* %x33, align 4, !dbg !7844
  %55 = load i32, i32* %sx, align 4, !dbg !7845
  %sub34 = sub nsw i32 %54, %55, !dbg !7846
  %conv35 = trunc i32 %sub34 to i16, !dbg !7843
  %56 = load i16*, i16** %lasso, align 8, !dbg !7847
  %arrayidx36 = getelementptr inbounds i16, i16* %56, i64 0, !dbg !7847
  store i16 %conv35, i16* %arrayidx36, align 2, !dbg !7848
  %57 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7849
  %y37 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %57, i32 0, i32 5, !dbg !7850
  %58 = load i32, i32* %y37, align 8, !dbg !7850
  %59 = load i32, i32* %sy, align 4, !dbg !7851
  %sub38 = sub nsw i32 %58, %59, !dbg !7852
  %conv39 = trunc i32 %sub38 to i16, !dbg !7849
  %60 = load i16*, i16** %lasso, align 8, !dbg !7853
  %arrayidx40 = getelementptr inbounds i16, i16* %60, i64 1, !dbg !7853
  store i16 %conv39, i16* %arrayidx40, align 2, !dbg !7854
  %61 = load %struct.wmGesture*, %struct.wmGesture** %gesture, align 8, !dbg !7855
  %points41 = getelementptr inbounds %struct.wmGesture, %struct.wmGesture* %61, i32 0, i32 6, !dbg !7856
  %62 = load i32, i32* %points41, align 8, !dbg !7857
  %inc = add nsw i32 %62, 1, !dbg !7857
  store i32 %inc, i32* %points41, align 8, !dbg !7857
  br label %if.end42, !dbg !7858

if.end42:                                         ; preds = %if.then31, %if.end
  br label %sw.epilog, !dbg !7859

sw.bb43:                                          ; preds = %entry, %entry, %entry
  %63 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7860
  %val = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %63, i32 0, i32 3, !dbg !7862
  %64 = load i16, i16* %val, align 2, !dbg !7862
  %conv44 = sext i16 %64 to i32, !dbg !7860
  %cmp45 = icmp eq i32 %conv44, 2, !dbg !7863
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !7864

if.then47:                                        ; preds = %sw.bb43
  %65 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7865
  %66 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7867
  call void @gesture_lasso_apply(%struct.bContext* %65, %struct.wmOperator* %66), !dbg !7868
  store i32 4, i32* %retval, align 4, !dbg !7869
  br label %return, !dbg !7869

if.end48:                                         ; preds = %sw.bb43
  br label %sw.epilog, !dbg !7870

sw.bb49:                                          ; preds = %entry
  %67 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7871
  %68 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7872
  call void @wm_gesture_end(%struct.bContext* %67, %struct.wmOperator* %68), !dbg !7873
  store i32 2, i32* %retval, align 4, !dbg !7874
  br label %return, !dbg !7874

sw.epilog:                                        ; preds = %entry, %if.end48, %if.end42
  store i32 1, i32* %retval, align 4, !dbg !7875
  br label %return, !dbg !7875

return:                                           ; preds = %sw.epilog, %sw.bb49, %if.then47
  %69 = load i32, i32* %retval, align 4, !dbg !7876
  ret i32 %69, !dbg !7876
}

; Function Attrs: noinline nounwind uwtable
define internal void @gesture_lasso_apply(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !7877 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %gesture = alloca %struct.wmGesture*, align 8
  %itemptr = alloca %struct.PointerRNA, align 8
  %loc = alloca [2 x float], align 4
  %i = alloca i32, align 4
  %lasso = alloca i16*, align 8
  %retval = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7878, metadata !DIExpression()), !dbg !7879
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7880, metadata !DIExpression()), !dbg !7881
  call void @llvm.dbg.declare(metadata %struct.wmGesture** %gesture, metadata !7882, metadata !DIExpression()), !dbg !7883
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7884
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 5, !dbg !7885
  %1 = load i8*, i8** %customdata, align 8, !dbg !7885
  %2 = bitcast i8* %1 to %struct.wmGesture*, !dbg !7884
  store %struct.wmGesture* %2, %struct.wmGesture** %gesture, align 8, !dbg !7883
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %itemptr, metadata !7886, metadata !DIExpression()), !dbg !7887
  call void @llvm.dbg.declare(metadata [2 x float]* %loc, metadata !7888, metadata !DIExpression()), !dbg !7889
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7890, metadata !DIExpression()), !dbg !7891
  call void @llvm.dbg.declare(metadata i16** %lasso, metadata !7892, metadata !DIExpression()), !dbg !7895
  %3 = load %struct.wmGesture*, %struct.wmGesture** %gesture, align 8, !dbg !7896
  %customdata1 = getelementptr inbounds %struct.wmGesture, %struct.wmGesture* %3, i32 0, i32 8, !dbg !7897
  %4 = load i8*, i8** %customdata1, align 8, !dbg !7897
  %5 = bitcast i8* %4 to i16*, !dbg !7896
  store i16* %5, i16** %lasso, align 8, !dbg !7895
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7898
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 7, !dbg !7899
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !7899
  call void @RNA_collection_clear(%struct.PointerRNA* %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.124, i64 0, i64 0)), !dbg !7900
  store i32 0, i32* %i, align 4, !dbg !7901
  br label %for.cond, !dbg !7903

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load i32, i32* %i, align 4, !dbg !7904
  %9 = load %struct.wmGesture*, %struct.wmGesture** %gesture, align 8, !dbg !7906
  %points = getelementptr inbounds %struct.wmGesture, %struct.wmGesture* %9, i32 0, i32 6, !dbg !7907
  %10 = load i32, i32* %points, align 8, !dbg !7907
  %cmp = icmp slt i32 %8, %10, !dbg !7908
  br i1 %cmp, label %for.body, label %for.end, !dbg !7909

for.body:                                         ; preds = %for.cond
  %11 = load i16*, i16** %lasso, align 8, !dbg !7910
  %arrayidx = getelementptr inbounds i16, i16* %11, i64 0, !dbg !7910
  %12 = load i16, i16* %arrayidx, align 2, !dbg !7910
  %conv = sitofp i16 %12 to float, !dbg !7910
  %arrayidx2 = getelementptr inbounds [2 x float], [2 x float]* %loc, i64 0, i64 0, !dbg !7912
  store float %conv, float* %arrayidx2, align 4, !dbg !7913
  %13 = load i16*, i16** %lasso, align 8, !dbg !7914
  %arrayidx3 = getelementptr inbounds i16, i16* %13, i64 1, !dbg !7914
  %14 = load i16, i16* %arrayidx3, align 2, !dbg !7914
  %conv4 = sitofp i16 %14 to float, !dbg !7914
  %arrayidx5 = getelementptr inbounds [2 x float], [2 x float]* %loc, i64 0, i64 1, !dbg !7915
  store float %conv4, float* %arrayidx5, align 4, !dbg !7916
  %15 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7917
  %ptr6 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %15, i32 0, i32 7, !dbg !7918
  %16 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr6, align 8, !dbg !7918
  call void @RNA_collection_add(%struct.PointerRNA* %16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.124, i64 0, i64 0), %struct.PointerRNA* %itemptr), !dbg !7919
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %loc, i64 0, i64 0, !dbg !7920
  call void @RNA_float_set_array(%struct.PointerRNA* %itemptr, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.125, i64 0, i64 0), float* %arraydecay), !dbg !7921
  br label %for.inc, !dbg !7922

for.inc:                                          ; preds = %for.body
  %17 = load i32, i32* %i, align 4, !dbg !7923
  %inc = add nsw i32 %17, 1, !dbg !7923
  store i32 %inc, i32* %i, align 4, !dbg !7923
  %18 = load i16*, i16** %lasso, align 8, !dbg !7924
  %add.ptr = getelementptr inbounds i16, i16* %18, i64 2, !dbg !7924
  store i16* %add.ptr, i16** %lasso, align 8, !dbg !7924
  br label %for.cond, !dbg !7925, !llvm.loop !7926

for.end:                                          ; preds = %for.cond
  %19 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7928
  %20 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7929
  call void @wm_gesture_end(%struct.bContext* %19, %struct.wmOperator* %20), !dbg !7930
  %21 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7931
  %type = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %21, i32 0, i32 4, !dbg !7933
  %22 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type, align 8, !dbg !7933
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %22, i32 0, i32 4, !dbg !7934
  %23 = load i32 (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !7934
  %tobool = icmp ne i32 (%struct.bContext*, %struct.wmOperator*)* %23, null, !dbg !7931
  br i1 %tobool, label %if.then, label %if.end, !dbg !7935

if.then:                                          ; preds = %for.end
  call void @llvm.dbg.declare(metadata i32* %retval, metadata !7936, metadata !DIExpression()), !dbg !7938
  %24 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7939
  %type7 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %24, i32 0, i32 4, !dbg !7940
  %25 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type7, align 8, !dbg !7940
  %exec8 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %25, i32 0, i32 4, !dbg !7941
  %26 = load i32 (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*)** %exec8, align 8, !dbg !7941
  %27 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7942
  %28 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7943
  %call = call i32 %26(%struct.bContext* %27, %struct.wmOperator* %28), !dbg !7939
  store i32 %call, i32* %retval, align 4, !dbg !7938
  %29 = load i32, i32* %retval, align 4, !dbg !7944
  br label %if.end, !dbg !7945

if.end:                                           ; preds = %if.then, %for.end
  ret void, !dbg !7946
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @WM_gesture_lines_modal(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !7947 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7948, metadata !DIExpression()), !dbg !7949
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7950, metadata !DIExpression()), !dbg !7951
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !7952, metadata !DIExpression()), !dbg !7953
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7954
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7955
  %2 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7956
  %call = call i32 @WM_gesture_lasso_modal(%struct.bContext* %0, %struct.wmOperator* %1, %struct.wmEvent* %2), !dbg !7957
  ret i32 %call, !dbg !7958
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_gesture_lasso_cancel(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !7959 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7960, metadata !DIExpression()), !dbg !7961
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7962, metadata !DIExpression()), !dbg !7963
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7964
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7965
  call void @wm_gesture_end(%struct.bContext* %0, %struct.wmOperator* %1), !dbg !7966
  ret void, !dbg !7967
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_gesture_lines_cancel(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !7968 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !7969, metadata !DIExpression()), !dbg !7970
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7971, metadata !DIExpression()), !dbg !7972
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !7973
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7974
  call void @wm_gesture_end(%struct.bContext* %0, %struct.wmOperator* %1), !dbg !7975
  ret void, !dbg !7976
}

; Function Attrs: noinline nounwind uwtable
define dso_local [2 x i32]* @WM_gesture_lasso_path_to_array(%struct.bContext* %UNUSED_C, %struct.wmOperator* %op, i32* %mcords_tot) #0 !dbg !7977 {
entry:
  %UNUSED_C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %mcords_tot.addr = alloca i32*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  %mcords = alloca [2 x i32]*, align 8
  %len = alloca i32, align 4
  %i = alloca i32, align 4
  %rna_macro_iter = alloca %struct.CollectionPropertyIterator, align 8
  %itemptr = alloca %struct.PointerRNA, align 8
  %loc = alloca [2 x float], align 4
  store %struct.bContext* %UNUSED_C, %struct.bContext** %UNUSED_C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %UNUSED_C.addr, metadata !7981, metadata !DIExpression()), !dbg !7982
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !7983, metadata !DIExpression()), !dbg !7984
  store i32* %mcords_tot, i32** %mcords_tot.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %mcords_tot.addr, metadata !7985, metadata !DIExpression()), !dbg !7986
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !7987, metadata !DIExpression()), !dbg !7988
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !7989
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 7, !dbg !7990
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !7990
  %call = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.124, i64 0, i64 0)), !dbg !7991
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !7988
  call void @llvm.dbg.declare(metadata [2 x i32]** %mcords, metadata !7992, metadata !DIExpression()), !dbg !7994
  store [2 x i32]* null, [2 x i32]** %mcords, align 8, !dbg !7994
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !7995
  %tobool = icmp ne %struct.PropertyRNA* %2, null, !dbg !7995
  br i1 %tobool, label %if.then, label %if.else, !dbg !7997

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %len, metadata !7998, metadata !DIExpression()), !dbg !8000
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8001
  %ptr1 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 7, !dbg !8002
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr1, align 8, !dbg !8002
  %5 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !8003
  %call2 = call i32 @RNA_property_collection_length(%struct.PointerRNA* %4, %struct.PropertyRNA* %5), !dbg !8004
  store i32 %call2, i32* %len, align 4, !dbg !8000
  %6 = load i32, i32* %len, align 4, !dbg !8005
  %tobool3 = icmp ne i32 %6, 0, !dbg !8005
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !8007

if.then4:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8008, metadata !DIExpression()), !dbg !8010
  store i32 0, i32* %i, align 4, !dbg !8010
  %7 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !8011
  %8 = load i32, i32* %len, align 4, !dbg !8012
  %conv = sext i32 %8 to i64, !dbg !8012
  %mul = mul i64 8, %conv, !dbg !8013
  %call5 = call i8* %7(i64 %mul, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__func__.WM_gesture_lasso_path_to_array, i64 0, i64 0)), !dbg !8011
  %9 = bitcast i8* %call5 to [2 x i32]*, !dbg !8011
  store [2 x i32]* %9, [2 x i32]** %mcords, align 8, !dbg !8014
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator* %rna_macro_iter, metadata !8015, metadata !DIExpression()), !dbg !8017
  %10 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8018
  %ptr6 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %10, i32 0, i32 7, !dbg !8018
  %11 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr6, align 8, !dbg !8018
  %12 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !8018
  call void @RNA_property_collection_begin(%struct.PointerRNA* %11, %struct.PropertyRNA* %12, %struct.CollectionPropertyIterator* %rna_macro_iter), !dbg !8018
  br label %for.cond, !dbg !8018

for.cond:                                         ; preds = %for.inc, %if.then4
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %rna_macro_iter, i32 0, i32 7, !dbg !8020
  %13 = load i32, i32* %valid, align 8, !dbg !8020
  %tobool7 = icmp ne i32 %13, 0, !dbg !8018
  br i1 %tobool7, label %for.body, label %for.end, !dbg !8018

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %itemptr, metadata !8022, metadata !DIExpression()), !dbg !8024
  %ptr8 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %rna_macro_iter, i32 0, i32 6, !dbg !8024
  %14 = bitcast %struct.PointerRNA* %itemptr to i8*, !dbg !8024
  %15 = bitcast %struct.PointerRNA* %ptr8 to i8*, !dbg !8024
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false), !dbg !8024
  call void @llvm.dbg.declare(metadata [2 x float]* %loc, metadata !8025, metadata !DIExpression()), !dbg !8027
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %loc, i64 0, i64 0, !dbg !8028
  call void @RNA_float_get_array(%struct.PointerRNA* %itemptr, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.125, i64 0, i64 0), float* %arraydecay), !dbg !8029
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %loc, i64 0, i64 0, !dbg !8030
  %16 = load float, float* %arrayidx, align 4, !dbg !8030
  %conv9 = fptosi float %16 to i32, !dbg !8031
  %17 = load [2 x i32]*, [2 x i32]** %mcords, align 8, !dbg !8032
  %18 = load i32, i32* %i, align 4, !dbg !8033
  %idxprom = sext i32 %18 to i64, !dbg !8032
  %arrayidx10 = getelementptr inbounds [2 x i32], [2 x i32]* %17, i64 %idxprom, !dbg !8032
  %arrayidx11 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx10, i64 0, i64 0, !dbg !8032
  store i32 %conv9, i32* %arrayidx11, align 4, !dbg !8034
  %arrayidx12 = getelementptr inbounds [2 x float], [2 x float]* %loc, i64 0, i64 1, !dbg !8035
  %19 = load float, float* %arrayidx12, align 4, !dbg !8035
  %conv13 = fptosi float %19 to i32, !dbg !8036
  %20 = load [2 x i32]*, [2 x i32]** %mcords, align 8, !dbg !8037
  %21 = load i32, i32* %i, align 4, !dbg !8038
  %idxprom14 = sext i32 %21 to i64, !dbg !8037
  %arrayidx15 = getelementptr inbounds [2 x i32], [2 x i32]* %20, i64 %idxprom14, !dbg !8037
  %arrayidx16 = getelementptr inbounds [2 x i32], [2 x i32]* %arrayidx15, i64 0, i64 1, !dbg !8037
  store i32 %conv13, i32* %arrayidx16, align 4, !dbg !8039
  %22 = load i32, i32* %i, align 4, !dbg !8040
  %inc = add nsw i32 %22, 1, !dbg !8040
  store i32 %inc, i32* %i, align 4, !dbg !8040
  br label %for.inc, !dbg !8041

for.inc:                                          ; preds = %for.body
  call void @RNA_property_collection_next(%struct.CollectionPropertyIterator* %rna_macro_iter), !dbg !8020
  br label %for.cond, !dbg !8020, !llvm.loop !8042

for.end:                                          ; preds = %for.cond
  call void @RNA_property_collection_end(%struct.CollectionPropertyIterator* %rna_macro_iter), !dbg !8044
  br label %if.end, !dbg !8045

if.end:                                           ; preds = %for.end, %if.then
  %23 = load i32, i32* %len, align 4, !dbg !8046
  %24 = load i32*, i32** %mcords_tot.addr, align 8, !dbg !8047
  store i32 %23, i32* %24, align 4, !dbg !8048
  br label %if.end17, !dbg !8049

if.else:                                          ; preds = %entry
  %25 = load i32*, i32** %mcords_tot.addr, align 8, !dbg !8050
  store i32 0, i32* %25, align 4, !dbg !8052
  br label %if.end17

if.end17:                                         ; preds = %if.else, %if.end
  %26 = load [2 x i32]*, [2 x i32]** %mcords, align 8, !dbg !8053
  ret [2 x i32]* %26, !dbg !8054
}

declare dso_local i32 @RNA_property_collection_length(%struct.PointerRNA*, %struct.PropertyRNA*) #2

declare dso_local void @RNA_float_get_array(%struct.PointerRNA*, i8*, float*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @WM_gesture_straightline_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !8055 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8056, metadata !DIExpression()), !dbg !8057
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8058, metadata !DIExpression()), !dbg !8059
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !8060, metadata !DIExpression()), !dbg !8061
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8062
  %1 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8063
  %call = call %struct.wmGesture* @WM_gesture_new(%struct.bContext* %0, %struct.wmEvent* %1, i32 6), !dbg !8064
  %2 = bitcast %struct.wmGesture* %call to i8*, !dbg !8064
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8065
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 5, !dbg !8066
  store i8* %2, i8** %customdata, align 8, !dbg !8067
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8068
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8069
  %call1 = call %struct.wmEventHandler* @WM_event_add_modal_handler(%struct.bContext* %4, %struct.wmOperator* %5), !dbg !8070
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8071
  call void @wm_gesture_tag_redraw(%struct.bContext* %6), !dbg !8072
  %7 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8073
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %7, i32 0, i32 7, !dbg !8075
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !8075
  %call2 = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.113, i64 0, i64 0)), !dbg !8076
  %tobool = icmp ne %struct.PropertyRNA* %call2, null, !dbg !8076
  br i1 %tobool, label %if.then, label %if.end, !dbg !8077

if.then:                                          ; preds = %entry
  %9 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8078
  %call3 = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %9), !dbg !8080
  %10 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8081
  %ptr4 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %10, i32 0, i32 7, !dbg !8082
  %11 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr4, align 8, !dbg !8082
  %call5 = call i32 @RNA_int_get(%struct.PointerRNA* %11, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.113, i64 0, i64 0)), !dbg !8083
  call void @WM_cursor_modal_set(%struct.wmWindow* %call3, i32 %call5), !dbg !8084
  br label %if.end, !dbg !8085

if.end:                                           ; preds = %if.then, %entry
  ret i32 1, !dbg !8086
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @WM_gesture_straightline_modal(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !8087 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %gesture = alloca %struct.wmGesture*, align 8
  %rect = alloca %struct.rcti*, align 8
  %sx = alloca i32, align 4
  %sy = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8088, metadata !DIExpression()), !dbg !8089
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8090, metadata !DIExpression()), !dbg !8091
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !8092, metadata !DIExpression()), !dbg !8093
  call void @llvm.dbg.declare(metadata %struct.wmGesture** %gesture, metadata !8094, metadata !DIExpression()), !dbg !8095
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8096
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 5, !dbg !8097
  %1 = load i8*, i8** %customdata, align 8, !dbg !8097
  %2 = bitcast i8* %1 to %struct.wmGesture*, !dbg !8096
  store %struct.wmGesture* %2, %struct.wmGesture** %gesture, align 8, !dbg !8095
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect, metadata !8098, metadata !DIExpression()), !dbg !8099
  %3 = load %struct.wmGesture*, %struct.wmGesture** %gesture, align 8, !dbg !8100
  %customdata1 = getelementptr inbounds %struct.wmGesture, %struct.wmGesture* %3, i32 0, i32 8, !dbg !8101
  %4 = load i8*, i8** %customdata1, align 8, !dbg !8101
  %5 = bitcast i8* %4 to %struct.rcti*, !dbg !8100
  store %struct.rcti* %5, %struct.rcti** %rect, align 8, !dbg !8099
  call void @llvm.dbg.declare(metadata i32* %sx, metadata !8102, metadata !DIExpression()), !dbg !8103
  call void @llvm.dbg.declare(metadata i32* %sy, metadata !8104, metadata !DIExpression()), !dbg !8105
  %6 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8106
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %6, i32 0, i32 2, !dbg !8108
  %7 = load i16, i16* %type, align 8, !dbg !8108
  %conv = sext i16 %7 to i32, !dbg !8106
  %cmp = icmp eq i32 %conv, 4, !dbg !8109
  br i1 %cmp, label %if.then, label %if.else14, !dbg !8110

if.then:                                          ; preds = %entry
  %8 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8111
  %call = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %8), !dbg !8113
  %9 = load %struct.wmGesture*, %struct.wmGesture** %gesture, align 8, !dbg !8114
  %swinid = getelementptr inbounds %struct.wmGesture, %struct.wmGesture* %9, i32 0, i32 5, !dbg !8115
  %10 = load i32, i32* %swinid, align 4, !dbg !8115
  call void @wm_subwindow_origin_get(%struct.wmWindow* %call, i32 %10, i32* %sx, i32* %sy), !dbg !8116
  %11 = load %struct.wmGesture*, %struct.wmGesture** %gesture, align 8, !dbg !8117
  %mode = getelementptr inbounds %struct.wmGesture, %struct.wmGesture* %11, i32 0, i32 3, !dbg !8119
  %12 = load i32, i32* %mode, align 4, !dbg !8119
  %cmp3 = icmp eq i32 %12, 0, !dbg !8120
  br i1 %cmp3, label %if.then5, label %if.else, !dbg !8121

if.then5:                                         ; preds = %if.then
  %13 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8122
  %x = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %13, i32 0, i32 4, !dbg !8124
  %14 = load i32, i32* %x, align 4, !dbg !8124
  %15 = load i32, i32* %sx, align 4, !dbg !8125
  %sub = sub nsw i32 %14, %15, !dbg !8126
  %16 = load %struct.rcti*, %struct.rcti** %rect, align 8, !dbg !8127
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %16, i32 0, i32 1, !dbg !8128
  store i32 %sub, i32* %xmax, align 4, !dbg !8129
  %17 = load %struct.rcti*, %struct.rcti** %rect, align 8, !dbg !8130
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %17, i32 0, i32 0, !dbg !8131
  store i32 %sub, i32* %xmin, align 4, !dbg !8132
  %18 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8133
  %y = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %18, i32 0, i32 5, !dbg !8134
  %19 = load i32, i32* %y, align 8, !dbg !8134
  %20 = load i32, i32* %sy, align 4, !dbg !8135
  %sub6 = sub nsw i32 %19, %20, !dbg !8136
  %21 = load %struct.rcti*, %struct.rcti** %rect, align 8, !dbg !8137
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %21, i32 0, i32 3, !dbg !8138
  store i32 %sub6, i32* %ymax, align 4, !dbg !8139
  %22 = load %struct.rcti*, %struct.rcti** %rect, align 8, !dbg !8140
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %22, i32 0, i32 2, !dbg !8141
  store i32 %sub6, i32* %ymin, align 4, !dbg !8142
  br label %if.end, !dbg !8143

if.else:                                          ; preds = %if.then
  %23 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8144
  %x7 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %23, i32 0, i32 4, !dbg !8146
  %24 = load i32, i32* %x7, align 4, !dbg !8146
  %25 = load i32, i32* %sx, align 4, !dbg !8147
  %sub8 = sub nsw i32 %24, %25, !dbg !8148
  %26 = load %struct.rcti*, %struct.rcti** %rect, align 8, !dbg !8149
  %xmax9 = getelementptr inbounds %struct.rcti, %struct.rcti* %26, i32 0, i32 1, !dbg !8150
  store i32 %sub8, i32* %xmax9, align 4, !dbg !8151
  %27 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8152
  %y10 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %27, i32 0, i32 5, !dbg !8153
  %28 = load i32, i32* %y10, align 8, !dbg !8153
  %29 = load i32, i32* %sy, align 4, !dbg !8154
  %sub11 = sub nsw i32 %28, %29, !dbg !8155
  %30 = load %struct.rcti*, %struct.rcti** %rect, align 8, !dbg !8156
  %ymax12 = getelementptr inbounds %struct.rcti, %struct.rcti* %30, i32 0, i32 3, !dbg !8157
  store i32 %sub11, i32* %ymax12, align 4, !dbg !8158
  %31 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8159
  %32 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8160
  %call13 = call i32 @straightline_apply(%struct.bContext* %31, %struct.wmOperator* %32), !dbg !8161
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  %33 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8162
  call void @wm_gesture_tag_redraw(%struct.bContext* %33), !dbg !8163
  br label %if.end33, !dbg !8164

if.else14:                                        ; preds = %entry
  %34 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8165
  %type15 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %34, i32 0, i32 2, !dbg !8167
  %35 = load i16, i16* %type15, align 8, !dbg !8167
  %conv16 = sext i16 %35 to i32, !dbg !8165
  %cmp17 = icmp eq i32 %conv16, 20514, !dbg !8168
  br i1 %cmp17, label %if.then19, label %if.end32, !dbg !8169

if.then19:                                        ; preds = %if.else14
  %36 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8170
  %val = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %36, i32 0, i32 3, !dbg !8172
  %37 = load i16, i16* %val, align 2, !dbg !8172
  %conv20 = sext i16 %37 to i32, !dbg !8170
  switch i32 %conv20, label %sw.epilog [
    i32 8, label %sw.bb
    i32 3, label %sw.bb27
    i32 1, label %sw.bb31
  ], !dbg !8173

sw.bb:                                            ; preds = %if.then19
  %38 = load %struct.wmGesture*, %struct.wmGesture** %gesture, align 8, !dbg !8174
  %mode21 = getelementptr inbounds %struct.wmGesture, %struct.wmGesture* %38, i32 0, i32 3, !dbg !8177
  %39 = load i32, i32* %mode21, align 4, !dbg !8177
  %cmp22 = icmp eq i32 %39, 0, !dbg !8178
  br i1 %cmp22, label %if.then24, label %if.end26, !dbg !8179

if.then24:                                        ; preds = %sw.bb
  %40 = load %struct.wmGesture*, %struct.wmGesture** %gesture, align 8, !dbg !8180
  %mode25 = getelementptr inbounds %struct.wmGesture, %struct.wmGesture* %40, i32 0, i32 3, !dbg !8182
  store i32 1, i32* %mode25, align 4, !dbg !8183
  %41 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8184
  call void @wm_gesture_tag_redraw(%struct.bContext* %41), !dbg !8185
  br label %if.end26, !dbg !8186

if.end26:                                         ; preds = %if.then24, %sw.bb
  br label %sw.epilog, !dbg !8187

sw.bb27:                                          ; preds = %if.then19
  %42 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8188
  %43 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8190
  %call28 = call i32 @straightline_apply(%struct.bContext* %42, %struct.wmOperator* %43), !dbg !8191
  %tobool = icmp ne i32 %call28, 0, !dbg !8191
  br i1 %tobool, label %if.then29, label %if.end30, !dbg !8192

if.then29:                                        ; preds = %sw.bb27
  %44 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8193
  %45 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8195
  call void @wm_gesture_end(%struct.bContext* %44, %struct.wmOperator* %45), !dbg !8196
  store i32 4, i32* %retval, align 4, !dbg !8197
  br label %return, !dbg !8197

if.end30:                                         ; preds = %sw.bb27
  %46 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8198
  %47 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8199
  call void @wm_gesture_end(%struct.bContext* %46, %struct.wmOperator* %47), !dbg !8200
  store i32 2, i32* %retval, align 4, !dbg !8201
  br label %return, !dbg !8201

sw.bb31:                                          ; preds = %if.then19
  %48 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8202
  %49 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8203
  call void @wm_gesture_end(%struct.bContext* %48, %struct.wmOperator* %49), !dbg !8204
  store i32 2, i32* %retval, align 4, !dbg !8205
  br label %return, !dbg !8205

sw.epilog:                                        ; preds = %if.then19, %if.end26
  br label %if.end32, !dbg !8206

if.end32:                                         ; preds = %sw.epilog, %if.else14
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.end
  store i32 1, i32* %retval, align 4, !dbg !8207
  br label %return, !dbg !8207

return:                                           ; preds = %if.end33, %sw.bb31, %if.end30, %if.then29
  %50 = load i32, i32* %retval, align 4, !dbg !8208
  ret i32 %50, !dbg !8208
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @straightline_apply(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !8209 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %gesture = alloca %struct.wmGesture*, align 8
  %rect = alloca %struct.rcti*, align 8
  %retval11 = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8210, metadata !DIExpression()), !dbg !8211
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8212, metadata !DIExpression()), !dbg !8213
  call void @llvm.dbg.declare(metadata %struct.wmGesture** %gesture, metadata !8214, metadata !DIExpression()), !dbg !8215
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8216
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 5, !dbg !8217
  %1 = load i8*, i8** %customdata, align 8, !dbg !8217
  %2 = bitcast i8* %1 to %struct.wmGesture*, !dbg !8216
  store %struct.wmGesture* %2, %struct.wmGesture** %gesture, align 8, !dbg !8215
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect, metadata !8218, metadata !DIExpression()), !dbg !8219
  %3 = load %struct.wmGesture*, %struct.wmGesture** %gesture, align 8, !dbg !8220
  %customdata1 = getelementptr inbounds %struct.wmGesture, %struct.wmGesture* %3, i32 0, i32 8, !dbg !8221
  %4 = load i8*, i8** %customdata1, align 8, !dbg !8221
  %5 = bitcast i8* %4 to %struct.rcti*, !dbg !8220
  store %struct.rcti* %5, %struct.rcti** %rect, align 8, !dbg !8219
  %6 = load %struct.rcti*, %struct.rcti** %rect, align 8, !dbg !8222
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %6, i32 0, i32 0, !dbg !8224
  %7 = load i32, i32* %xmin, align 4, !dbg !8224
  %8 = load %struct.rcti*, %struct.rcti** %rect, align 8, !dbg !8225
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %8, i32 0, i32 1, !dbg !8226
  %9 = load i32, i32* %xmax, align 4, !dbg !8226
  %cmp = icmp eq i32 %7, %9, !dbg !8227
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !8228

land.lhs.true:                                    ; preds = %entry
  %10 = load %struct.rcti*, %struct.rcti** %rect, align 8, !dbg !8229
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %10, i32 0, i32 2, !dbg !8230
  %11 = load i32, i32* %ymin, align 4, !dbg !8230
  %12 = load %struct.rcti*, %struct.rcti** %rect, align 8, !dbg !8231
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %12, i32 0, i32 3, !dbg !8232
  %13 = load i32, i32* %ymax, align 4, !dbg !8232
  %cmp2 = icmp eq i32 %11, %13, !dbg !8233
  br i1 %cmp2, label %if.then, label %if.end, !dbg !8234

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !8235
  br label %return, !dbg !8235

if.end:                                           ; preds = %land.lhs.true, %entry
  %14 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8236
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %14, i32 0, i32 7, !dbg !8237
  %15 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !8237
  %16 = load %struct.rcti*, %struct.rcti** %rect, align 8, !dbg !8238
  %xmin3 = getelementptr inbounds %struct.rcti, %struct.rcti* %16, i32 0, i32 0, !dbg !8239
  %17 = load i32, i32* %xmin3, align 4, !dbg !8239
  call void @RNA_int_set(%struct.PointerRNA* %15, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.105, i64 0, i64 0), i32 %17), !dbg !8240
  %18 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8241
  %ptr4 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %18, i32 0, i32 7, !dbg !8242
  %19 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr4, align 8, !dbg !8242
  %20 = load %struct.rcti*, %struct.rcti** %rect, align 8, !dbg !8243
  %ymin5 = getelementptr inbounds %struct.rcti, %struct.rcti* %20, i32 0, i32 2, !dbg !8244
  %21 = load i32, i32* %ymin5, align 4, !dbg !8244
  call void @RNA_int_set(%struct.PointerRNA* %19, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.109, i64 0, i64 0), i32 %21), !dbg !8245
  %22 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8246
  %ptr6 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %22, i32 0, i32 7, !dbg !8247
  %23 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr6, align 8, !dbg !8247
  %24 = load %struct.rcti*, %struct.rcti** %rect, align 8, !dbg !8248
  %xmax7 = getelementptr inbounds %struct.rcti, %struct.rcti* %24, i32 0, i32 1, !dbg !8249
  %25 = load i32, i32* %xmax7, align 4, !dbg !8249
  call void @RNA_int_set(%struct.PointerRNA* %23, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.107, i64 0, i64 0), i32 %25), !dbg !8250
  %26 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8251
  %ptr8 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %26, i32 0, i32 7, !dbg !8252
  %27 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr8, align 8, !dbg !8252
  %28 = load %struct.rcti*, %struct.rcti** %rect, align 8, !dbg !8253
  %ymax9 = getelementptr inbounds %struct.rcti, %struct.rcti* %28, i32 0, i32 3, !dbg !8254
  %29 = load i32, i32* %ymax9, align 4, !dbg !8254
  call void @RNA_int_set(%struct.PointerRNA* %27, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.111, i64 0, i64 0), i32 %29), !dbg !8255
  %30 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8256
  %type = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %30, i32 0, i32 4, !dbg !8258
  %31 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type, align 8, !dbg !8258
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %31, i32 0, i32 4, !dbg !8259
  %32 = load i32 (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8259
  %tobool = icmp ne i32 (%struct.bContext*, %struct.wmOperator*)* %32, null, !dbg !8256
  br i1 %tobool, label %if.then10, label %if.end14, !dbg !8260

if.then10:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata i32* %retval11, metadata !8261, metadata !DIExpression()), !dbg !8263
  %33 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8264
  %type12 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %33, i32 0, i32 4, !dbg !8265
  %34 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type12, align 8, !dbg !8265
  %exec13 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %34, i32 0, i32 4, !dbg !8266
  %35 = load i32 (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*)** %exec13, align 8, !dbg !8266
  %36 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8267
  %37 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8268
  %call = call i32 %35(%struct.bContext* %36, %struct.wmOperator* %37), !dbg !8264
  store i32 %call, i32* %retval11, align 4, !dbg !8263
  %38 = load i32, i32* %retval11, align 4, !dbg !8269
  br label %if.end14, !dbg !8270

if.end14:                                         ; preds = %if.then10, %if.end
  store i32 1, i32* %retval, align 4, !dbg !8271
  br label %return, !dbg !8271

return:                                           ; preds = %if.end14, %if.then
  %39 = load i32, i32* %retval, align 4, !dbg !8272
  ret i32 %39, !dbg !8272
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_gesture_straightline_cancel(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !8273 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8274, metadata !DIExpression()), !dbg !8275
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8276, metadata !DIExpression()), !dbg !8277
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8278
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8279
  call void @wm_gesture_end(%struct.bContext* %0, %struct.wmOperator* %1), !dbg !8280
  ret void, !dbg !8281
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @wm_operatortype_free() #0 !dbg !8282 {
entry:
  %0 = load %struct.GHash*, %struct.GHash** @global_ops_hash, align 8, !dbg !8283
  call void @BLI_ghash_free(%struct.GHash* %0, void (i8*)* null, void (i8*)* bitcast (void (%struct.wmOperatorType*)* @operatortype_ghash_free_cb to void (i8*)*)), !dbg !8284
  store %struct.GHash* null, %struct.GHash** @global_ops_hash, align 8, !dbg !8285
  ret void, !dbg !8286
}

declare dso_local void @BLI_ghash_free(%struct.GHash*, void (i8*)*, void (i8*)*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @operatortype_ghash_free_cb(%struct.wmOperatorType* %ot) #0 !dbg !8287 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8288, metadata !DIExpression()), !dbg !8289
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8290
  %last_properties = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 12, !dbg !8292
  %1 = load %struct.IDProperty*, %struct.IDProperty** %last_properties, align 8, !dbg !8292
  %tobool = icmp ne %struct.IDProperty* %1, null, !dbg !8290
  br i1 %tobool, label %if.then, label %if.end, !dbg !8293

if.then:                                          ; preds = %entry
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8294
  %last_properties1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 12, !dbg !8296
  %3 = load %struct.IDProperty*, %struct.IDProperty** %last_properties1, align 8, !dbg !8296
  call void @IDP_FreeProperty(%struct.IDProperty* %3), !dbg !8297
  %4 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8298
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8299
  %last_properties2 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 12, !dbg !8300
  %6 = load %struct.IDProperty*, %struct.IDProperty** %last_properties2, align 8, !dbg !8300
  %7 = bitcast %struct.IDProperty* %6 to i8*, !dbg !8299
  call void %4(i8* %7), !dbg !8298
  br label %if.end, !dbg !8301

if.end:                                           ; preds = %if.then, %entry
  %8 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8302
  %macro = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %8, i32 0, i32 14, !dbg !8304
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %macro, i32 0, i32 0, !dbg !8305
  %9 = load i8*, i8** %first, align 8, !dbg !8305
  %tobool3 = icmp ne i8* %9, null, !dbg !8302
  br i1 %tobool3, label %if.then4, label %if.end5, !dbg !8306

if.then4:                                         ; preds = %if.end
  %10 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8307
  call void @wm_operatortype_free_macro(%struct.wmOperatorType* %10), !dbg !8308
  br label %if.end5, !dbg !8308

if.end5:                                          ; preds = %if.then4, %if.end
  %11 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8309
  %ext = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %11, i32 0, i32 18, !dbg !8311
  %srna = getelementptr inbounds %struct.ExtensionRNA, %struct.ExtensionRNA* %ext, i32 0, i32 1, !dbg !8312
  %12 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !8312
  %tobool6 = icmp ne %struct.StructRNA* %12, null, !dbg !8309
  br i1 %tobool6, label %if.then7, label %if.end8, !dbg !8313

if.then7:                                         ; preds = %if.end5
  %13 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8314
  %14 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8315
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %14, i32 0, i32 1, !dbg !8316
  %15 = load i8*, i8** %idname, align 8, !dbg !8316
  call void %13(i8* %15), !dbg !8314
  br label %if.end8, !dbg !8314

if.end8:                                          ; preds = %if.then7, %if.end5
  %16 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8317
  %17 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8318
  %18 = bitcast %struct.wmOperatorType* %17 to i8*, !dbg !8318
  call void %16(i8* %18), !dbg !8317
  ret void, !dbg !8319
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @wm_operatortype_init() #0 !dbg !8320 {
entry:
  %call = call %struct.GHash* @BLI_ghash_str_new_ex(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.126, i64 0, i64 0), i32 2048), !dbg !8321
  store %struct.GHash* %call, %struct.GHash** @global_ops_hash, align 8, !dbg !8322
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @WM_OT_window_duplicate), !dbg !8323
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @WM_OT_read_history), !dbg !8324
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @WM_OT_read_homefile), !dbg !8325
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @WM_OT_read_factory_settings), !dbg !8326
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @WM_OT_save_homefile), !dbg !8327
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @WM_OT_save_userpref), !dbg !8328
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @WM_OT_userpref_autoexec_path_add), !dbg !8329
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @WM_OT_userpref_autoexec_path_remove), !dbg !8330
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @WM_OT_window_fullscreen_toggle), !dbg !8331
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @WM_OT_quit_blender), !dbg !8332
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @WM_OT_open_mainfile), !dbg !8333
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @WM_OT_revert_mainfile), !dbg !8334
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @WM_OT_link), !dbg !8335
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @WM_OT_append), !dbg !8336
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @WM_OT_recover_last_session), !dbg !8337
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @WM_OT_recover_auto_save), !dbg !8338
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @WM_OT_save_as_mainfile), !dbg !8339
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @WM_OT_save_mainfile), !dbg !8340
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @WM_OT_redraw_timer), !dbg !8341
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @WM_OT_memory_statistics), !dbg !8342
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @WM_OT_dependency_relations), !dbg !8343
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @WM_OT_debug_menu), !dbg !8344
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @WM_OT_operator_defaults), !dbg !8345
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @WM_OT_splash), !dbg !8346
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @WM_OT_search_menu), !dbg !8347
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @WM_OT_call_menu), !dbg !8348
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @WM_OT_call_menu_pie), !dbg !8349
  call void @WM_operatortype_append(void (%struct.wmOperatorType*)* @WM_OT_radial_control), !dbg !8350
  ret void, !dbg !8351
}

declare dso_local %struct.GHash* @BLI_ghash_str_new_ex(i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @WM_OT_window_duplicate(%struct.wmOperatorType* %ot) #0 !dbg !8352 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8353, metadata !DIExpression()), !dbg !8354
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8355
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8356
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.184, i64 0, i64 0), i8** %name, align 8, !dbg !8357
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8358
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !8359
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.128, i64 0, i64 0), i8** %idname, align 8, !dbg !8360
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8361
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !8362
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.185, i64 0, i64 0), i8** %description, align 8, !dbg !8363
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8364
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !8365
  store i32 (%struct.bContext*, %struct.wmOperator*)* @wm_window_duplicate_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8366
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8367
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !8368
  store i32 (%struct.bContext*)* @wm_operator_winactive_normal, i32 (%struct.bContext*)** %poll, align 8, !dbg !8369
  ret void, !dbg !8370
}

; Function Attrs: noinline nounwind uwtable
define internal void @WM_OT_read_history(%struct.wmOperatorType* %ot) #0 !dbg !8371 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8372, metadata !DIExpression()), !dbg !8373
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8374
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8375
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.186, i64 0, i64 0), i8** %name, align 8, !dbg !8376
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8377
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !8378
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.187, i64 0, i64 0), i8** %idname, align 8, !dbg !8379
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8380
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !8381
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.188, i64 0, i64 0), i8** %description, align 8, !dbg !8382
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8383
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !8384
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @WM_operator_confirm, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !8385
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8386
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !8387
  store i32 (%struct.bContext*, %struct.wmOperator*)* @wm_history_read_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8388
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8389
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !8390
  store i16 64, i16* %flag, align 8, !dbg !8391
  ret void, !dbg !8392
}

; Function Attrs: noinline nounwind uwtable
define internal void @WM_OT_read_homefile(%struct.wmOperatorType* %ot) #0 !dbg !8393 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8394, metadata !DIExpression()), !dbg !8395
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !8396, metadata !DIExpression()), !dbg !8397
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8398
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8399
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.189, i64 0, i64 0), i8** %name, align 8, !dbg !8400
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8401
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !8402
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.129, i64 0, i64 0), i8** %idname, align 8, !dbg !8403
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8404
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !8405
  store i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.190, i64 0, i64 0), i8** %description, align 8, !dbg !8406
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8407
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !8408
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @WM_operator_confirm, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !8409
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8410
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !8411
  store i32 (%struct.bContext*, %struct.wmOperator*)* @wm_homefile_read_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8412
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8413
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 11, !dbg !8414
  %6 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !8414
  %7 = bitcast %struct.StructRNA* %6 to i8*, !dbg !8413
  %call = call %struct.PropertyRNA* @RNA_def_string_file_path(i8* %7, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.20, i64 0, i64 0), i8* null, i32 1024, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.191, i64 0, i64 0)), !dbg !8415
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !8416
  %8 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !8417
  call void @RNA_def_property_flag(%struct.PropertyRNA* %8, i32 524288), !dbg !8418
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8419
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 11, !dbg !8420
  %10 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !8420
  %11 = bitcast %struct.StructRNA* %10 to i8*, !dbg !8419
  %call2 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %11, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.192, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.193, i64 0, i64 0), i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.194, i64 0, i64 0)), !dbg !8421
  store %struct.PropertyRNA* %call2, %struct.PropertyRNA** %prop, align 8, !dbg !8422
  %12 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !8423
  call void @RNA_def_property_flag(%struct.PropertyRNA* %12, i32 268959744), !dbg !8424
  ret void, !dbg !8425
}

; Function Attrs: noinline nounwind uwtable
define internal void @WM_OT_read_factory_settings(%struct.wmOperatorType* %ot) #0 !dbg !8426 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8427, metadata !DIExpression()), !dbg !8428
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8429
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8430
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.195, i64 0, i64 0), i8** %name, align 8, !dbg !8431
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8432
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !8433
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.196, i64 0, i64 0), i8** %idname, align 8, !dbg !8434
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8435
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !8436
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.197, i64 0, i64 0), i8** %description, align 8, !dbg !8437
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8438
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !8439
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @WM_operator_confirm, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !8440
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8441
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !8442
  store i32 (%struct.bContext*, %struct.wmOperator*)* @wm_homefile_read_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8443
  ret void, !dbg !8444
}

; Function Attrs: noinline nounwind uwtable
define internal void @WM_OT_save_homefile(%struct.wmOperatorType* %ot) #0 !dbg !8445 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8446, metadata !DIExpression()), !dbg !8447
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8448
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8449
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.198, i64 0, i64 0), i8** %name, align 8, !dbg !8450
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8451
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !8452
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.130, i64 0, i64 0), i8** %idname, align 8, !dbg !8453
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8454
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !8455
  store i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.199, i64 0, i64 0), i8** %description, align 8, !dbg !8456
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8457
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !8458
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @WM_operator_confirm, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !8459
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8460
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !8461
  store i32 (%struct.bContext*, %struct.wmOperator*)* @wm_homefile_write_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8462
  ret void, !dbg !8463
}

; Function Attrs: noinline nounwind uwtable
define internal void @WM_OT_save_userpref(%struct.wmOperatorType* %ot) #0 !dbg !8464 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8465, metadata !DIExpression()), !dbg !8466
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8467
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8468
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.200, i64 0, i64 0), i8** %name, align 8, !dbg !8469
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8470
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !8471
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.201, i64 0, i64 0), i8** %idname, align 8, !dbg !8472
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8473
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !8474
  store i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.202, i64 0, i64 0), i8** %description, align 8, !dbg !8475
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8476
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !8477
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @WM_operator_confirm, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !8478
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8479
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !8480
  store i32 (%struct.bContext*, %struct.wmOperator*)* @wm_userpref_write_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8481
  ret void, !dbg !8482
}

; Function Attrs: noinline nounwind uwtable
define internal void @WM_OT_userpref_autoexec_path_add(%struct.wmOperatorType* %ot) #0 !dbg !8483 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8484, metadata !DIExpression()), !dbg !8485
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8486
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8487
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.203, i64 0, i64 0), i8** %name, align 8, !dbg !8488
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8489
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !8490
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.204, i64 0, i64 0), i8** %idname, align 8, !dbg !8491
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8492
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !8493
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.205, i64 0, i64 0), i8** %description, align 8, !dbg !8494
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8495
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !8496
  store i32 (%struct.bContext*, %struct.wmOperator*)* @wm_userpref_autoexec_add_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8497
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8498
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 19, !dbg !8499
  store i16 64, i16* %flag, align 8, !dbg !8500
  ret void, !dbg !8501
}

; Function Attrs: noinline nounwind uwtable
define internal void @WM_OT_userpref_autoexec_path_remove(%struct.wmOperatorType* %ot) #0 !dbg !8502 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8503, metadata !DIExpression()), !dbg !8504
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8505
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8506
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.207, i64 0, i64 0), i8** %name, align 8, !dbg !8507
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8508
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !8509
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.208, i64 0, i64 0), i8** %idname, align 8, !dbg !8510
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8511
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !8512
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.209, i64 0, i64 0), i8** %description, align 8, !dbg !8513
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8514
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !8515
  store i32 (%struct.bContext*, %struct.wmOperator*)* @wm_userpref_autoexec_remove_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8516
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8517
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 19, !dbg !8518
  store i16 64, i16* %flag, align 8, !dbg !8519
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8520
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 11, !dbg !8521
  %6 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !8521
  %7 = bitcast %struct.StructRNA* %6 to i8*, !dbg !8520
  %call = call %struct.PropertyRNA* @RNA_def_int(i8* %7, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.210, i64 0, i64 0), i32 0, i32 0, i32 2147483647, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.211, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i32 0, i32 1000), !dbg !8522
  ret void, !dbg !8523
}

; Function Attrs: noinline nounwind uwtable
define internal void @WM_OT_window_fullscreen_toggle(%struct.wmOperatorType* %ot) #0 !dbg !8524 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8525, metadata !DIExpression()), !dbg !8526
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8527
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8528
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.212, i64 0, i64 0), i8** %name, align 8, !dbg !8529
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8530
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !8531
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.138, i64 0, i64 0), i8** %idname, align 8, !dbg !8532
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8533
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !8534
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.213, i64 0, i64 0), i8** %description, align 8, !dbg !8535
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8536
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !8537
  store i32 (%struct.bContext*, %struct.wmOperator*)* @wm_window_fullscreen_toggle_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8538
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8539
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !8540
  store i32 (%struct.bContext*)* @WM_operator_winactive, i32 (%struct.bContext*)** %poll, align 8, !dbg !8541
  ret void, !dbg !8542
}

; Function Attrs: noinline nounwind uwtable
define internal void @WM_OT_quit_blender(%struct.wmOperatorType* %ot) #0 !dbg !8543 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8544, metadata !DIExpression()), !dbg !8545
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8546
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8547
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.214, i64 0, i64 0), i8** %name, align 8, !dbg !8548
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8549
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !8550
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.139, i64 0, i64 0), i8** %idname, align 8, !dbg !8551
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8552
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !8553
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.214, i64 0, i64 0), i8** %description, align 8, !dbg !8554
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8555
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !8556
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @WM_operator_confirm, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !8557
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8558
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !8559
  store i32 (%struct.bContext*, %struct.wmOperator*)* @wm_exit_blender_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8560
  ret void, !dbg !8561
}

; Function Attrs: noinline nounwind uwtable
define internal void @WM_OT_open_mainfile(%struct.wmOperatorType* %ot) #0 !dbg !8562 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8563, metadata !DIExpression()), !dbg !8564
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8565
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8566
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.215, i64 0, i64 0), i8** %name, align 8, !dbg !8567
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8568
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !8569
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.132, i64 0, i64 0), i8** %idname, align 8, !dbg !8570
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8571
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !8572
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.216, i64 0, i64 0), i8** %description, align 8, !dbg !8573
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8574
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !8575
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @wm_open_mainfile_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !8576
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8577
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !8578
  store i32 (%struct.bContext*, %struct.wmOperator*)* @wm_open_mainfile_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8579
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8580
  %check = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 5, !dbg !8581
  store i8 (%struct.bContext*, %struct.wmOperator*)* @wm_open_mainfile_check, i8 (%struct.bContext*, %struct.wmOperator*)** %check, align 8, !dbg !8582
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8583
  %ui = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 10, !dbg !8584
  store void (%struct.bContext*, %struct.wmOperator*)* @wm_open_mainfile_ui, void (%struct.bContext*, %struct.wmOperator*)** %ui, align 8, !dbg !8585
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8586
  call void @WM_operator_properties_filesel(%struct.wmOperatorType* %7, i32 2052, i16 signext 8, i16 signext 0, i16 signext 8, i16 signext 0), !dbg !8587
  %8 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8588
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %8, i32 0, i32 11, !dbg !8589
  %9 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !8589
  %10 = bitcast %struct.StructRNA* %9 to i8*, !dbg !8588
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %10, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.192, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.193, i64 0, i64 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.217, i64 0, i64 0)), !dbg !8590
  %11 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8591
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %11, i32 0, i32 11, !dbg !8592
  %12 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !8592
  %13 = bitcast %struct.StructRNA* %12 to i8*, !dbg !8591
  %call2 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %13, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.218, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.219, i64 0, i64 0), i8* getelementptr inbounds ([94 x i8], [94 x i8]* @.str.220, i64 0, i64 0)), !dbg !8593
  ret void, !dbg !8594
}

; Function Attrs: noinline nounwind uwtable
define internal void @WM_OT_revert_mainfile(%struct.wmOperatorType* %ot) #0 !dbg !8595 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8596, metadata !DIExpression()), !dbg !8597
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8598
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8599
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.223, i64 0, i64 0), i8** %name, align 8, !dbg !8600
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8601
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !8602
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.224, i64 0, i64 0), i8** %idname, align 8, !dbg !8603
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8604
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !8605
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.225, i64 0, i64 0), i8** %description, align 8, !dbg !8606
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8607
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !8608
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @WM_operator_confirm, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !8609
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8610
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 11, !dbg !8611
  %5 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !8611
  %6 = bitcast %struct.StructRNA* %5 to i8*, !dbg !8610
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %6, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.218, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.219, i64 0, i64 0), i8* getelementptr inbounds ([94 x i8], [94 x i8]* @.str.220, i64 0, i64 0)), !dbg !8612
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8613
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 4, !dbg !8614
  store i32 (%struct.bContext*, %struct.wmOperator*)* @wm_revert_mainfile_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8615
  %8 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8616
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %8, i32 0, i32 9, !dbg !8617
  store i32 (%struct.bContext*)* @wm_revert_mainfile_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !8618
  ret void, !dbg !8619
}

; Function Attrs: noinline nounwind uwtable
define internal void @WM_OT_link(%struct.wmOperatorType* %ot) #0 !dbg !8620 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8621, metadata !DIExpression()), !dbg !8622
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8623
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8624
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.226, i64 0, i64 0), i8** %name, align 8, !dbg !8625
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8626
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !8627
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.133, i64 0, i64 0), i8** %idname, align 8, !dbg !8628
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8629
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !8630
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.227, i64 0, i64 0), i8** %description, align 8, !dbg !8631
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8632
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !8633
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @wm_link_append_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !8634
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8635
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !8636
  store i32 (%struct.bContext*, %struct.wmOperator*)* @wm_link_append_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8637
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8638
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !8639
  store i32 (%struct.bContext*)* @wm_link_append_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !8640
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8641
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 19, !dbg !8642
  %7 = load i16, i16* %flag, align 8, !dbg !8643
  %conv = sext i16 %7 to i32, !dbg !8643
  %or = or i32 %conv, 2, !dbg !8643
  %conv1 = trunc i32 %or to i16, !dbg !8643
  store i16 %conv1, i16* %flag, align 8, !dbg !8643
  %8 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8644
  call void @WM_operator_properties_filesel(%struct.wmOperatorType* %8, i32 2052, i16 signext 1, i16 signext 0, i16 signext 31, i16 signext 0), !dbg !8645
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8646
  call void @wm_link_append_properties_common(%struct.wmOperatorType* %9, i8 zeroext 1), !dbg !8647
  ret void, !dbg !8648
}

; Function Attrs: noinline nounwind uwtable
define internal void @WM_OT_append(%struct.wmOperatorType* %ot) #0 !dbg !8649 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8650, metadata !DIExpression()), !dbg !8651
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8652
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8653
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.244, i64 0, i64 0), i8** %name, align 8, !dbg !8654
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8655
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !8656
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.134, i64 0, i64 0), i8** %idname, align 8, !dbg !8657
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8658
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !8659
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.245, i64 0, i64 0), i8** %description, align 8, !dbg !8660
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8661
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !8662
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @wm_link_append_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !8663
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8664
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !8665
  store i32 (%struct.bContext*, %struct.wmOperator*)* @wm_link_append_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8666
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8667
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !8668
  store i32 (%struct.bContext*)* @wm_link_append_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !8669
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8670
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 19, !dbg !8671
  %7 = load i16, i16* %flag, align 8, !dbg !8672
  %conv = sext i16 %7 to i32, !dbg !8672
  %or = or i32 %conv, 2, !dbg !8672
  %conv1 = trunc i32 %or to i16, !dbg !8672
  store i16 %conv1, i16* %flag, align 8, !dbg !8672
  %8 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8673
  call void @WM_operator_properties_filesel(%struct.wmOperatorType* %8, i32 2052, i16 signext 1, i16 signext 0, i16 signext 30, i16 signext 0), !dbg !8674
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8675
  call void @wm_link_append_properties_common(%struct.wmOperatorType* %9, i8 zeroext 0), !dbg !8676
  ret void, !dbg !8677
}

; Function Attrs: noinline nounwind uwtable
define internal void @WM_OT_recover_last_session(%struct.wmOperatorType* %ot) #0 !dbg !8678 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8679, metadata !DIExpression()), !dbg !8680
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8681
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8682
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.246, i64 0, i64 0), i8** %name, align 8, !dbg !8683
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8684
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !8685
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.247, i64 0, i64 0), i8** %idname, align 8, !dbg !8686
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8687
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !8688
  store i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.248, i64 0, i64 0), i8** %description, align 8, !dbg !8689
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8690
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !8691
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @WM_operator_confirm, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !8692
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8693
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !8694
  store i32 (%struct.bContext*, %struct.wmOperator*)* @wm_recover_last_session_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8695
  ret void, !dbg !8696
}

; Function Attrs: noinline nounwind uwtable
define internal void @WM_OT_recover_auto_save(%struct.wmOperatorType* %ot) #0 !dbg !8697 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8698, metadata !DIExpression()), !dbg !8699
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8700
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8701
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.249, i64 0, i64 0), i8** %name, align 8, !dbg !8702
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8703
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !8704
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.250, i64 0, i64 0), i8** %idname, align 8, !dbg !8705
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8706
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !8707
  store i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.251, i64 0, i64 0), i8** %description, align 8, !dbg !8708
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8709
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !8710
  store i32 (%struct.bContext*, %struct.wmOperator*)* @wm_recover_auto_save_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8711
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8712
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 6, !dbg !8713
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @wm_recover_auto_save_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !8714
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8715
  call void @WM_operator_properties_filesel(%struct.wmOperatorType* %5, i32 4, i16 signext 8, i16 signext 0, i16 signext 8, i16 signext 2), !dbg !8716
  ret void, !dbg !8717
}

; Function Attrs: noinline nounwind uwtable
define internal void @WM_OT_save_as_mainfile(%struct.wmOperatorType* %ot) #0 !dbg !8718 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8719, metadata !DIExpression()), !dbg !8720
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !8721, metadata !DIExpression()), !dbg !8722
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8723
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8724
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.252, i64 0, i64 0), i8** %name, align 8, !dbg !8725
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8726
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !8727
  store i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.136, i64 0, i64 0), i8** %idname, align 8, !dbg !8728
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8729
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !8730
  store i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.253, i64 0, i64 0), i8** %description, align 8, !dbg !8731
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8732
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !8733
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @wm_save_as_mainfile_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !8734
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8735
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !8736
  store i32 (%struct.bContext*, %struct.wmOperator*)* @wm_save_as_mainfile_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8737
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8738
  %check = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 5, !dbg !8739
  store i8 (%struct.bContext*, %struct.wmOperator*)* @blend_save_check, i8 (%struct.bContext*, %struct.wmOperator*)** %check, align 8, !dbg !8740
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8741
  call void @WM_operator_properties_filesel(%struct.wmOperatorType* %6, i32 2052, i16 signext 8, i16 signext 1, i16 signext 8, i16 signext 0), !dbg !8742
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8743
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 11, !dbg !8744
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !8744
  %9 = bitcast %struct.StructRNA* %8 to i8*, !dbg !8743
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %9, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.254, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.255, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.256, i64 0, i64 0)), !dbg !8745
  %10 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8746
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %10, i32 0, i32 11, !dbg !8747
  %11 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !8747
  %12 = bitcast %struct.StructRNA* %11 to i8*, !dbg !8746
  %call2 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %12, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.257, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.258, i64 0, i64 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.259, i64 0, i64 0)), !dbg !8748
  %13 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8749
  %srna3 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %13, i32 0, i32 11, !dbg !8750
  %14 = load %struct.StructRNA*, %struct.StructRNA** %srna3, align 8, !dbg !8750
  %15 = bitcast %struct.StructRNA* %14 to i8*, !dbg !8749
  %call4 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %15, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.137, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.260, i64 0, i64 0), i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.261, i64 0, i64 0)), !dbg !8751
  store %struct.PropertyRNA* %call4, %struct.PropertyRNA** %prop, align 8, !dbg !8752
  %16 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !8753
  call void @RNA_def_property_flag(%struct.PropertyRNA* %16, i32 268435456), !dbg !8754
  %17 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8755
  %srna5 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %17, i32 0, i32 11, !dbg !8756
  %18 = load %struct.StructRNA*, %struct.StructRNA** %srna5, align 8, !dbg !8756
  %19 = bitcast %struct.StructRNA* %18 to i8*, !dbg !8755
  %call6 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %19, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.262, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.263, i64 0, i64 0), i8* getelementptr inbounds ([132 x i8], [132 x i8]* @.str.264, i64 0, i64 0)), !dbg !8757
  ret void, !dbg !8758
}

; Function Attrs: noinline nounwind uwtable
define internal void @WM_OT_save_mainfile(%struct.wmOperatorType* %ot) #0 !dbg !8759 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8760, metadata !DIExpression()), !dbg !8761
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8762
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8763
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.267, i64 0, i64 0), i8** %name, align 8, !dbg !8764
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8765
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !8766
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.135, i64 0, i64 0), i8** %idname, align 8, !dbg !8767
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8768
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !8769
  store i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.268, i64 0, i64 0), i8** %description, align 8, !dbg !8770
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8771
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !8772
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @wm_save_mainfile_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !8773
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8774
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !8775
  store i32 (%struct.bContext*, %struct.wmOperator*)* @wm_save_as_mainfile_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8776
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8777
  %check = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 5, !dbg !8778
  store i8 (%struct.bContext*, %struct.wmOperator*)* @blend_save_check, i8 (%struct.bContext*, %struct.wmOperator*)** %check, align 8, !dbg !8779
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8780
  call void @WM_operator_properties_filesel(%struct.wmOperatorType* %6, i32 2052, i16 signext 8, i16 signext 1, i16 signext 8, i16 signext 0), !dbg !8781
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8782
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 11, !dbg !8783
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !8783
  %9 = bitcast %struct.StructRNA* %8 to i8*, !dbg !8782
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %9, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.254, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.255, i64 0, i64 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.256, i64 0, i64 0)), !dbg !8784
  %10 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8785
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %10, i32 0, i32 11, !dbg !8786
  %11 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !8786
  %12 = bitcast %struct.StructRNA* %11 to i8*, !dbg !8785
  %call2 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %12, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.257, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.258, i64 0, i64 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.259, i64 0, i64 0)), !dbg !8787
  ret void, !dbg !8788
}

; Function Attrs: noinline nounwind uwtable
define internal void @WM_OT_redraw_timer(%struct.wmOperatorType* %ot) #0 !dbg !8789 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8790, metadata !DIExpression()), !dbg !8791
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8792
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8793
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.270, i64 0, i64 0), i8** %name, align 8, !dbg !8794
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8795
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !8796
  store i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.140, i64 0, i64 0), i8** %idname, align 8, !dbg !8797
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8798
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !8799
  store i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.271, i64 0, i64 0), i8** %description, align 8, !dbg !8800
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8801
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !8802
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @WM_menu_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !8803
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8804
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !8805
  store i32 (%struct.bContext*, %struct.wmOperator*)* @redraw_timer_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8806
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8807
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !8808
  store i32 (%struct.bContext*)* @WM_operator_winactive, i32 (%struct.bContext*)** %poll, align 8, !dbg !8809
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8810
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !8811
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !8811
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !8810
  %call = call %struct.PropertyRNA* @RNA_def_enum(i8* %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.272, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([8 x %struct.EnumPropertyItem], [8 x %struct.EnumPropertyItem]* @redraw_timer_type_items, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.273, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)), !dbg !8812
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8813
  %prop = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 13, !dbg !8814
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !8815
  %10 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8816
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %10, i32 0, i32 11, !dbg !8817
  %11 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !8817
  %12 = bitcast %struct.StructRNA* %11 to i8*, !dbg !8816
  %call2 = call %struct.PropertyRNA* @RNA_def_int(i8* %12, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.274, i64 0, i64 0), i32 10, i32 1, i32 2147483647, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.275, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.276, i64 0, i64 0), i32 1, i32 1000), !dbg !8818
  ret void, !dbg !8819
}

; Function Attrs: noinline nounwind uwtable
define internal void @WM_OT_memory_statistics(%struct.wmOperatorType* %ot) #0 !dbg !8820 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8821, metadata !DIExpression()), !dbg !8822
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8823
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8824
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.296, i64 0, i64 0), i8** %name, align 8, !dbg !8825
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8826
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !8827
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.297, i64 0, i64 0), i8** %idname, align 8, !dbg !8828
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8829
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !8830
  store i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.298, i64 0, i64 0), i8** %description, align 8, !dbg !8831
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8832
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !8833
  store i32 (%struct.bContext*, %struct.wmOperator*)* @memory_statistics_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8834
  ret void, !dbg !8835
}

; Function Attrs: noinline nounwind uwtable
define internal void @WM_OT_dependency_relations(%struct.wmOperatorType* %ot) #0 !dbg !8836 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8837, metadata !DIExpression()), !dbg !8838
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8839
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8840
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.299, i64 0, i64 0), i8** %name, align 8, !dbg !8841
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8842
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !8843
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.300, i64 0, i64 0), i8** %idname, align 8, !dbg !8844
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8845
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !8846
  store i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.301, i64 0, i64 0), i8** %description, align 8, !dbg !8847
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8848
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !8849
  store i32 (%struct.bContext*, %struct.wmOperator*)* @dependency_relations_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8850
  ret void, !dbg !8851
}

; Function Attrs: noinline nounwind uwtable
define internal void @WM_OT_debug_menu(%struct.wmOperatorType* %ot) #0 !dbg !8852 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8853, metadata !DIExpression()), !dbg !8854
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8855
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8856
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.302, i64 0, i64 0), i8** %name, align 8, !dbg !8857
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8858
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !8859
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.141, i64 0, i64 0), i8** %idname, align 8, !dbg !8860
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8861
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !8862
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.303, i64 0, i64 0), i8** %description, align 8, !dbg !8863
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8864
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !8865
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @wm_debug_menu_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !8866
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8867
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !8868
  store i32 (%struct.bContext*, %struct.wmOperator*)* @wm_debug_menu_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8869
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8870
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !8871
  store i32 (%struct.bContext*)* @WM_operator_winactive, i32 (%struct.bContext*)** %poll, align 8, !dbg !8872
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8873
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !8874
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !8874
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !8873
  %call = call %struct.PropertyRNA* @RNA_def_int(i8* %8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.304, i64 0, i64 0), i32 0, i32 -32768, i32 32767, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.305, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i32 -10000, i32 10000), !dbg !8875
  ret void, !dbg !8876
}

; Function Attrs: noinline nounwind uwtable
define internal void @WM_OT_operator_defaults(%struct.wmOperatorType* %ot) #0 !dbg !8877 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8878, metadata !DIExpression()), !dbg !8879
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8880
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8881
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.306, i64 0, i64 0), i8** %name, align 8, !dbg !8882
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8883
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !8884
  store i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.307, i64 0, i64 0), i8** %idname, align 8, !dbg !8885
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8886
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !8887
  store i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.308, i64 0, i64 0), i8** %description, align 8, !dbg !8888
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8889
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !8890
  store i32 (%struct.bContext*, %struct.wmOperator*)* @wm_operator_defaults_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8891
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8892
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 19, !dbg !8893
  store i16 64, i16* %flag, align 8, !dbg !8894
  ret void, !dbg !8895
}

; Function Attrs: noinline nounwind uwtable
define internal void @WM_OT_splash(%struct.wmOperatorType* %ot) #0 !dbg !8896 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8897, metadata !DIExpression()), !dbg !8898
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8899
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8900
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.311, i64 0, i64 0), i8** %name, align 8, !dbg !8901
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8902
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !8903
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.312, i64 0, i64 0), i8** %idname, align 8, !dbg !8904
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8905
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !8906
  store i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.313, i64 0, i64 0), i8** %description, align 8, !dbg !8907
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8908
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !8909
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @wm_splash_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !8910
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8911
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !8912
  store i32 (%struct.bContext*)* @WM_operator_winactive, i32 (%struct.bContext*)** %poll, align 8, !dbg !8913
  ret void, !dbg !8914
}

; Function Attrs: noinline nounwind uwtable
define internal void @WM_OT_search_menu(%struct.wmOperatorType* %ot) #0 !dbg !8915 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8916, metadata !DIExpression()), !dbg !8917
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8918
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8919
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.334, i64 0, i64 0), i8** %name, align 8, !dbg !8920
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8921
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !8922
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.142, i64 0, i64 0), i8** %idname, align 8, !dbg !8923
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8924
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !8925
  store i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.335, i64 0, i64 0), i8** %description, align 8, !dbg !8926
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8927
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !8928
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @wm_search_menu_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !8929
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8930
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !8931
  store i32 (%struct.bContext*, %struct.wmOperator*)* @wm_search_menu_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8932
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8933
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !8934
  store i32 (%struct.bContext*)* @wm_search_menu_poll, i32 (%struct.bContext*)** %poll, align 8, !dbg !8935
  ret void, !dbg !8936
}

; Function Attrs: noinline nounwind uwtable
define internal void @WM_OT_call_menu(%struct.wmOperatorType* %ot) #0 !dbg !8937 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8938, metadata !DIExpression()), !dbg !8939
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8940
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8941
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.336, i64 0, i64 0), i8** %name, align 8, !dbg !8942
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8943
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !8944
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.337, i64 0, i64 0), i8** %idname, align 8, !dbg !8945
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8946
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !8947
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.338, i64 0, i64 0), i8** %description, align 8, !dbg !8948
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8949
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 4, !dbg !8950
  store i32 (%struct.bContext*, %struct.wmOperator*)* @wm_call_menu_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8951
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8952
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 9, !dbg !8953
  store i32 (%struct.bContext*)* @WM_operator_winactive, i32 (%struct.bContext*)** %poll, align 8, !dbg !8954
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8955
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !8956
  store i16 64, i16* %flag, align 8, !dbg !8957
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8958
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 11, !dbg !8959
  %7 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !8959
  %8 = bitcast %struct.StructRNA* %7 to i8*, !dbg !8958
  %call = call %struct.PropertyRNA* @RNA_def_string(i8* %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.233, i64 0, i64 0), i8* null, i32 64, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.339, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.340, i64 0, i64 0)), !dbg !8960
  ret void, !dbg !8961
}

; Function Attrs: noinline nounwind uwtable
define internal void @WM_OT_call_menu_pie(%struct.wmOperatorType* %ot) #0 !dbg !8962 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8963, metadata !DIExpression()), !dbg !8964
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8965
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8966
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.341, i64 0, i64 0), i8** %name, align 8, !dbg !8967
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8968
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !8969
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.342, i64 0, i64 0), i8** %idname, align 8, !dbg !8970
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8971
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !8972
  store i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.343, i64 0, i64 0), i8** %description, align 8, !dbg !8973
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8974
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !8975
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @wm_call_pie_menu_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !8976
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8977
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !8978
  store i32 (%struct.bContext*, %struct.wmOperator*)* @wm_call_pie_menu_exec, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8979
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8980
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 9, !dbg !8981
  store i32 (%struct.bContext*)* @WM_operator_winactive, i32 (%struct.bContext*)** %poll, align 8, !dbg !8982
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8983
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 19, !dbg !8984
  store i16 64, i16* %flag, align 8, !dbg !8985
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8986
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 11, !dbg !8987
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !8987
  %9 = bitcast %struct.StructRNA* %8 to i8*, !dbg !8986
  %call = call %struct.PropertyRNA* @RNA_def_string(i8* %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.233, i64 0, i64 0), i8* null, i32 64, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.339, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.344, i64 0, i64 0)), !dbg !8988
  ret void, !dbg !8989
}

; Function Attrs: noinline nounwind uwtable
define internal void @WM_OT_radial_control(%struct.wmOperatorType* %ot) #0 !dbg !8990 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8991, metadata !DIExpression()), !dbg !8992
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8993
  %name = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 0, !dbg !8994
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.345, i64 0, i64 0), i8** %name, align 8, !dbg !8995
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8996
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !8997
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.346, i64 0, i64 0), i8** %idname, align 8, !dbg !8998
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8999
  %description = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 3, !dbg !9000
  store i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.347, i64 0, i64 0), i8** %description, align 8, !dbg !9001
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9002
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 6, !dbg !9003
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @radial_control_invoke, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !9004
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9005
  %modal = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 8, !dbg !9006
  store i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* @radial_control_modal, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %modal, align 8, !dbg !9007
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9008
  %cancel = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 7, !dbg !9009
  store void (%struct.bContext*, %struct.wmOperator*)* @radial_control_cancel, void (%struct.bContext*, %struct.wmOperator*)** %cancel, align 8, !dbg !9010
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9011
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 19, !dbg !9012
  store i16 7, i16* %flag, align 8, !dbg !9013
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9014
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 11, !dbg !9015
  %8 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !9015
  %9 = bitcast %struct.StructRNA* %8 to i8*, !dbg !9014
  %call = call %struct.PropertyRNA* @RNA_def_string(i8* %9, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.348, i64 0, i64 0), i8* null, i32 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.349, i64 0, i64 0), i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.350, i64 0, i64 0)), !dbg !9016
  %10 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9017
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %10, i32 0, i32 11, !dbg !9018
  %11 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !9018
  %12 = bitcast %struct.StructRNA* %11 to i8*, !dbg !9017
  %call2 = call %struct.PropertyRNA* @RNA_def_string(i8* %12, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.351, i64 0, i64 0), i8* null, i32 0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.352, i64 0, i64 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.353, i64 0, i64 0)), !dbg !9019
  %13 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9020
  %srna3 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %13, i32 0, i32 11, !dbg !9021
  %14 = load %struct.StructRNA*, %struct.StructRNA** %srna3, align 8, !dbg !9021
  %15 = bitcast %struct.StructRNA* %14 to i8*, !dbg !9020
  %call4 = call %struct.PropertyRNA* @RNA_def_string(i8* %15, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.354, i64 0, i64 0), i8* null, i32 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.355, i64 0, i64 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.356, i64 0, i64 0)), !dbg !9022
  %16 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9023
  %srna5 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %16, i32 0, i32 11, !dbg !9024
  %17 = load %struct.StructRNA*, %struct.StructRNA** %srna5, align 8, !dbg !9024
  %18 = bitcast %struct.StructRNA* %17 to i8*, !dbg !9023
  %call6 = call %struct.PropertyRNA* @RNA_def_string(i8* %18, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.357, i64 0, i64 0), i8* null, i32 0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.358, i64 0, i64 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.359, i64 0, i64 0)), !dbg !9025
  %19 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9026
  %srna7 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %19, i32 0, i32 11, !dbg !9027
  %20 = load %struct.StructRNA*, %struct.StructRNA** %srna7, align 8, !dbg !9027
  %21 = bitcast %struct.StructRNA* %20 to i8*, !dbg !9026
  %call8 = call %struct.PropertyRNA* @RNA_def_string(i8* %21, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.360, i64 0, i64 0), i8* null, i32 0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.361, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.362, i64 0, i64 0)), !dbg !9028
  %22 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9029
  %srna9 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %22, i32 0, i32 11, !dbg !9030
  %23 = load %struct.StructRNA*, %struct.StructRNA** %srna9, align 8, !dbg !9030
  %24 = bitcast %struct.StructRNA* %23 to i8*, !dbg !9029
  %call10 = call %struct.PropertyRNA* @RNA_def_string(i8* %24, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.363, i64 0, i64 0), i8* null, i32 0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.364, i64 0, i64 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.365, i64 0, i64 0)), !dbg !9031
  %25 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9032
  %srna11 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %25, i32 0, i32 11, !dbg !9033
  %26 = load %struct.StructRNA*, %struct.StructRNA** %srna11, align 8, !dbg !9033
  %27 = bitcast %struct.StructRNA* %26 to i8*, !dbg !9032
  %call12 = call %struct.PropertyRNA* @RNA_def_string(i8* %27, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.366, i64 0, i64 0), i8* null, i32 0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.367, i64 0, i64 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.368, i64 0, i64 0)), !dbg !9034
  %28 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9035
  %srna13 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %28, i32 0, i32 11, !dbg !9036
  %29 = load %struct.StructRNA*, %struct.StructRNA** %srna13, align 8, !dbg !9036
  %30 = bitcast %struct.StructRNA* %29 to i8*, !dbg !9035
  %call14 = call %struct.PropertyRNA* @RNA_def_string(i8* %30, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.369, i64 0, i64 0), i8* null, i32 0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.370, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.371, i64 0, i64 0)), !dbg !9037
  %31 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9038
  %srna15 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %31, i32 0, i32 11, !dbg !9039
  %32 = load %struct.StructRNA*, %struct.StructRNA** %srna15, align 8, !dbg !9039
  %33 = bitcast %struct.StructRNA* %32 to i8*, !dbg !9038
  %call16 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %33, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.372, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.373, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.374, i64 0, i64 0)), !dbg !9040
  ret void, !dbg !9041
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @wm_window_keymap(%struct.wmKeyConfig* %keyconf) #0 !dbg !9042 {
entry:
  %keyconf.addr = alloca %struct.wmKeyConfig*, align 8
  %keymap = alloca %struct.wmKeyMap*, align 8
  %kmi = alloca %struct.wmKeyMapItem*, align 8
  %data_path = alloca i8*, align 8
  store %struct.wmKeyConfig* %keyconf, %struct.wmKeyConfig** %keyconf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyConfig** %keyconf.addr, metadata !9043, metadata !DIExpression()), !dbg !9044
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %keymap, metadata !9045, metadata !DIExpression()), !dbg !9046
  %0 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %keyconf.addr, align 8, !dbg !9047
  %call = call %struct.wmKeyMap* @WM_keymap_find(%struct.wmKeyConfig* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.127, i64 0, i64 0), i32 0, i32 0), !dbg !9048
  store %struct.wmKeyMap* %call, %struct.wmKeyMap** %keymap, align 8, !dbg !9046
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %kmi, metadata !9049, metadata !DIExpression()), !dbg !9073
  call void @llvm.dbg.declare(metadata i8** %data_path, metadata !9074, metadata !DIExpression()), !dbg !9075
  %1 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9076
  %call1 = call %struct.wmKeyMapItem* @WM_keymap_verify_item(%struct.wmKeyMap* %1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.128, i64 0, i64 0), i32 119, i32 1, i32 6, i32 0), !dbg !9077
  %2 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9078
  %call2 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.129, i64 0, i64 0), i32 110, i32 1, i32 2, i32 0), !dbg !9079
  %3 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9080
  %call3 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %3, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.130, i64 0, i64 0), i32 117, i32 1, i32 2, i32 0), !dbg !9081
  %4 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9082
  %call4 = call %struct.wmKeyMapItem* @WM_keymap_add_menu(%struct.wmKeyMap* %4, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.131, i64 0, i64 0), i32 111, i32 1, i32 3, i32 0), !dbg !9083
  %5 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9084
  %call5 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %5, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.132, i64 0, i64 0), i32 111, i32 1, i32 2, i32 0), !dbg !9085
  %6 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9086
  %call6 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.132, i64 0, i64 0), i32 300, i32 1, i32 0, i32 0), !dbg !9087
  %7 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9088
  %call7 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.133, i64 0, i64 0), i32 111, i32 1, i32 6, i32 0), !dbg !9089
  %8 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9090
  %call8 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %8, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.134, i64 0, i64 0), i32 300, i32 1, i32 1, i32 0), !dbg !9091
  %9 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9092
  %call9 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %9, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.135, i64 0, i64 0), i32 115, i32 1, i32 2, i32 0), !dbg !9093
  %10 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9094
  %call10 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %10, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.135, i64 0, i64 0), i32 119, i32 1, i32 2, i32 0), !dbg !9095
  %11 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9096
  %call11 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %11, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.136, i64 0, i64 0), i32 115, i32 1, i32 3, i32 0), !dbg !9097
  %12 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9098
  %call12 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %12, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.136, i64 0, i64 0), i32 301, i32 1, i32 0, i32 0), !dbg !9099
  %13 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9100
  %call13 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %13, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.136, i64 0, i64 0), i32 115, i32 1, i32 6, i32 0), !dbg !9101
  store %struct.wmKeyMapItem* %call13, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9102
  %14 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9103
  %ptr = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %14, i32 0, i32 17, !dbg !9104
  %15 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !9104
  call void @RNA_boolean_set(%struct.PointerRNA* %15, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.137, i64 0, i64 0), i32 1), !dbg !9105
  %16 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9106
  %call14 = call %struct.wmKeyMapItem* @WM_keymap_verify_item(%struct.wmKeyMap* %16, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.138, i64 0, i64 0), i32 310, i32 1, i32 4, i32 0), !dbg !9107
  %17 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9108
  %call15 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %17, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.139, i64 0, i64 0), i32 113, i32 1, i32 2, i32 0), !dbg !9109
  %18 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9110
  %call16 = call %struct.wmKeyMapItem* @WM_keymap_verify_item(%struct.wmKeyMap* %18, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.140, i64 0, i64 0), i32 116, i32 1, i32 6, i32 0), !dbg !9111
  %19 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9112
  %call17 = call %struct.wmKeyMapItem* @WM_keymap_verify_item(%struct.wmKeyMap* %19, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.141, i64 0, i64 0), i32 100, i32 1, i32 6, i32 0), !dbg !9113
  %20 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9114
  %call18 = call %struct.wmKeyMapItem* @WM_keymap_verify_item(%struct.wmKeyMap* %20, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.142, i64 0, i64 0), i32 221, i32 1, i32 0, i32 0), !dbg !9115
  %21 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9116
  %call19 = call %struct.wmKeyMapItem* @WM_keymap_add_menu(%struct.wmKeyMap* %21, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.143, i64 0, i64 0), i32 401, i32 1, i32 0, i32 0), !dbg !9117
  %22 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9118
  %call20 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %22, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.144, i64 0, i64 0), i32 301, i32 1, i32 1, i32 0), !dbg !9119
  store %struct.wmKeyMapItem* %call20, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9120
  %23 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9121
  %ptr21 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %23, i32 0, i32 17, !dbg !9122
  %24 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr21, align 8, !dbg !9122
  call void @RNA_string_set(%struct.PointerRNA* %24, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.145, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.146, i64 0, i64 0)), !dbg !9123
  %25 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9124
  %ptr22 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %25, i32 0, i32 17, !dbg !9125
  %26 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr22, align 8, !dbg !9125
  call void @RNA_string_set(%struct.PointerRNA* %26, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.147, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.148, i64 0, i64 0)), !dbg !9126
  %27 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9127
  %call23 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %27, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.144, i64 0, i64 0), i32 302, i32 1, i32 1, i32 0), !dbg !9128
  store %struct.wmKeyMapItem* %call23, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9129
  %28 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9130
  %ptr24 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %28, i32 0, i32 17, !dbg !9131
  %29 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr24, align 8, !dbg !9131
  call void @RNA_string_set(%struct.PointerRNA* %29, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.145, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.146, i64 0, i64 0)), !dbg !9132
  %30 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9133
  %ptr25 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %30, i32 0, i32 17, !dbg !9134
  %31 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr25, align 8, !dbg !9134
  call void @RNA_string_set(%struct.PointerRNA* %31, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.147, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.149, i64 0, i64 0)), !dbg !9135
  %32 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9136
  %call26 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %32, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.144, i64 0, i64 0), i32 303, i32 1, i32 1, i32 0), !dbg !9137
  store %struct.wmKeyMapItem* %call26, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9138
  %33 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9139
  %ptr27 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %33, i32 0, i32 17, !dbg !9140
  %34 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr27, align 8, !dbg !9140
  call void @RNA_string_set(%struct.PointerRNA* %34, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.145, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.146, i64 0, i64 0)), !dbg !9141
  %35 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9142
  %ptr28 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %35, i32 0, i32 17, !dbg !9143
  %36 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr28, align 8, !dbg !9143
  call void @RNA_string_set(%struct.PointerRNA* %36, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.147, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.150, i64 0, i64 0)), !dbg !9144
  %37 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9145
  %call29 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %37, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.144, i64 0, i64 0), i32 304, i32 1, i32 1, i32 0), !dbg !9146
  store %struct.wmKeyMapItem* %call29, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9147
  %38 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9148
  %ptr30 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %38, i32 0, i32 17, !dbg !9149
  %39 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr30, align 8, !dbg !9149
  call void @RNA_string_set(%struct.PointerRNA* %39, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.145, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.146, i64 0, i64 0)), !dbg !9150
  %40 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9151
  %ptr31 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %40, i32 0, i32 17, !dbg !9152
  %41 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr31, align 8, !dbg !9152
  call void @RNA_string_set(%struct.PointerRNA* %41, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.147, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.151, i64 0, i64 0)), !dbg !9153
  %42 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9154
  %call32 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %42, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.144, i64 0, i64 0), i32 305, i32 1, i32 1, i32 0), !dbg !9155
  store %struct.wmKeyMapItem* %call32, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9156
  %43 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9157
  %ptr33 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %43, i32 0, i32 17, !dbg !9158
  %44 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr33, align 8, !dbg !9158
  call void @RNA_string_set(%struct.PointerRNA* %44, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.145, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.146, i64 0, i64 0)), !dbg !9159
  %45 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9160
  %ptr34 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %45, i32 0, i32 17, !dbg !9161
  %46 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr34, align 8, !dbg !9161
  call void @RNA_string_set(%struct.PointerRNA* %46, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.147, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.152, i64 0, i64 0)), !dbg !9162
  %47 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9163
  %call35 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %47, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.144, i64 0, i64 0), i32 306, i32 1, i32 1, i32 0), !dbg !9164
  store %struct.wmKeyMapItem* %call35, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9165
  %48 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9166
  %ptr36 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %48, i32 0, i32 17, !dbg !9167
  %49 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr36, align 8, !dbg !9167
  call void @RNA_string_set(%struct.PointerRNA* %49, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.145, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.146, i64 0, i64 0)), !dbg !9168
  %50 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9169
  %ptr37 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %50, i32 0, i32 17, !dbg !9170
  %51 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr37, align 8, !dbg !9170
  call void @RNA_string_set(%struct.PointerRNA* %51, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.147, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.153, i64 0, i64 0)), !dbg !9171
  %52 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9172
  %call38 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %52, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.144, i64 0, i64 0), i32 307, i32 1, i32 1, i32 0), !dbg !9173
  store %struct.wmKeyMapItem* %call38, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9174
  %53 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9175
  %ptr39 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %53, i32 0, i32 17, !dbg !9176
  %54 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr39, align 8, !dbg !9176
  call void @RNA_string_set(%struct.PointerRNA* %54, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.145, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.146, i64 0, i64 0)), !dbg !9177
  %55 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9178
  %ptr40 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %55, i32 0, i32 17, !dbg !9179
  %56 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr40, align 8, !dbg !9179
  call void @RNA_string_set(%struct.PointerRNA* %56, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.147, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.154, i64 0, i64 0)), !dbg !9180
  %57 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9181
  %call41 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %57, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.144, i64 0, i64 0), i32 308, i32 1, i32 1, i32 0), !dbg !9182
  store %struct.wmKeyMapItem* %call41, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9183
  %58 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9184
  %ptr42 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %58, i32 0, i32 17, !dbg !9185
  %59 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr42, align 8, !dbg !9185
  call void @RNA_string_set(%struct.PointerRNA* %59, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.145, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.146, i64 0, i64 0)), !dbg !9186
  %60 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9187
  %ptr43 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %60, i32 0, i32 17, !dbg !9188
  %61 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr43, align 8, !dbg !9188
  call void @RNA_string_set(%struct.PointerRNA* %61, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.147, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.155, i64 0, i64 0)), !dbg !9189
  %62 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9190
  %call44 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %62, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.144, i64 0, i64 0), i32 309, i32 1, i32 1, i32 0), !dbg !9191
  store %struct.wmKeyMapItem* %call44, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9192
  %63 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9193
  %ptr45 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %63, i32 0, i32 17, !dbg !9194
  %64 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr45, align 8, !dbg !9194
  call void @RNA_string_set(%struct.PointerRNA* %64, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.145, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.146, i64 0, i64 0)), !dbg !9195
  %65 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9196
  %ptr46 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %65, i32 0, i32 17, !dbg !9197
  %66 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr46, align 8, !dbg !9197
  call void @RNA_string_set(%struct.PointerRNA* %66, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.147, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.156, i64 0, i64 0)), !dbg !9198
  %67 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9199
  %call47 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %67, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.144, i64 0, i64 0), i32 310, i32 1, i32 1, i32 0), !dbg !9200
  store %struct.wmKeyMapItem* %call47, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9201
  %68 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9202
  %ptr48 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %68, i32 0, i32 17, !dbg !9203
  %69 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr48, align 8, !dbg !9203
  call void @RNA_string_set(%struct.PointerRNA* %69, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.145, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.146, i64 0, i64 0)), !dbg !9204
  %70 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9205
  %ptr49 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %70, i32 0, i32 17, !dbg !9206
  %71 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr49, align 8, !dbg !9206
  call void @RNA_string_set(%struct.PointerRNA* %71, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.147, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.157, i64 0, i64 0)), !dbg !9207
  %72 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9208
  %call50 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %72, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.144, i64 0, i64 0), i32 311, i32 1, i32 1, i32 0), !dbg !9209
  store %struct.wmKeyMapItem* %call50, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9210
  %73 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9211
  %ptr51 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %73, i32 0, i32 17, !dbg !9212
  %74 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr51, align 8, !dbg !9212
  call void @RNA_string_set(%struct.PointerRNA* %74, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.145, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.146, i64 0, i64 0)), !dbg !9213
  %75 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9214
  %ptr52 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %75, i32 0, i32 17, !dbg !9215
  %76 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr52, align 8, !dbg !9215
  call void @RNA_string_set(%struct.PointerRNA* %76, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.147, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.158, i64 0, i64 0)), !dbg !9216
  store i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.159, i64 0, i64 0), i8** %data_path, align 8, !dbg !9217
  %77 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9218
  %call53 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %77, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.160, i64 0, i64 0), i32 420, i32 1, i32 0, i32 0), !dbg !9219
  store %struct.wmKeyMapItem* %call53, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9220
  %78 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9221
  %ptr54 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %78, i32 0, i32 17, !dbg !9222
  %79 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr54, align 8, !dbg !9222
  %80 = load i8*, i8** %data_path, align 8, !dbg !9223
  call void @RNA_string_set(%struct.PointerRNA* %79, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.145, i64 0, i64 0), i8* %80), !dbg !9224
  %81 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9225
  %ptr55 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %81, i32 0, i32 17, !dbg !9226
  %82 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr55, align 8, !dbg !9226
  call void @RNA_float_set(%struct.PointerRNA* %82, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.147, i64 0, i64 0), float 0x3FF19999A0000000), !dbg !9227
  %83 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9228
  %call56 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %83, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.160, i64 0, i64 0), i32 421, i32 1, i32 0, i32 0), !dbg !9229
  store %struct.wmKeyMapItem* %call56, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9230
  %84 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9231
  %ptr57 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %84, i32 0, i32 17, !dbg !9232
  %85 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr57, align 8, !dbg !9232
  %86 = load i8*, i8** %data_path, align 8, !dbg !9233
  call void @RNA_string_set(%struct.PointerRNA* %85, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.145, i64 0, i64 0), i8* %86), !dbg !9234
  %87 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9235
  %ptr58 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %87, i32 0, i32 17, !dbg !9236
  %88 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr58, align 8, !dbg !9236
  call void @RNA_float_set(%struct.PointerRNA* %88, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.147, i64 0, i64 0), float 0x3FED1745C0000000), !dbg !9237
  %89 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9238
  %call59 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %89, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.160, i64 0, i64 0), i32 420, i32 1, i32 1, i32 0), !dbg !9239
  store %struct.wmKeyMapItem* %call59, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9240
  %90 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9241
  %ptr60 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %90, i32 0, i32 17, !dbg !9242
  %91 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr60, align 8, !dbg !9242
  %92 = load i8*, i8** %data_path, align 8, !dbg !9243
  call void @RNA_string_set(%struct.PointerRNA* %91, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.145, i64 0, i64 0), i8* %92), !dbg !9244
  %93 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9245
  %ptr61 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %93, i32 0, i32 17, !dbg !9246
  %94 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr61, align 8, !dbg !9246
  call void @RNA_float_set(%struct.PointerRNA* %94, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.147, i64 0, i64 0), float 1.500000e+00), !dbg !9247
  %95 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9248
  %call62 = call %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap* %95, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.160, i64 0, i64 0), i32 421, i32 1, i32 1, i32 0), !dbg !9249
  store %struct.wmKeyMapItem* %call62, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9250
  %96 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9251
  %ptr63 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %96, i32 0, i32 17, !dbg !9252
  %97 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr63, align 8, !dbg !9252
  %98 = load i8*, i8** %data_path, align 8, !dbg !9253
  call void @RNA_string_set(%struct.PointerRNA* %97, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.145, i64 0, i64 0), i8* %98), !dbg !9254
  %99 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9255
  %ptr64 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %99, i32 0, i32 17, !dbg !9256
  %100 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr64, align 8, !dbg !9256
  call void @RNA_float_set(%struct.PointerRNA* %100, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.147, i64 0, i64 0), float 0x3FE5555560000000), !dbg !9257
  store i8* null, i8** %data_path, align 8, !dbg !9258
  %101 = load i8*, i8** %data_path, align 8, !dbg !9259
  %102 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %keyconf.addr, align 8, !dbg !9260
  call void @gesture_circle_modal_keymap(%struct.wmKeyConfig* %102), !dbg !9261
  %103 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %keyconf.addr, align 8, !dbg !9262
  call void @gesture_border_modal_keymap(%struct.wmKeyConfig* %103), !dbg !9263
  %104 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %keyconf.addr, align 8, !dbg !9264
  call void @gesture_zoom_border_modal_keymap(%struct.wmKeyConfig* %104), !dbg !9265
  %105 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %keyconf.addr, align 8, !dbg !9266
  call void @gesture_straightline_modal_keymap(%struct.wmKeyConfig* %105), !dbg !9267
  ret void, !dbg !9268
}

declare dso_local %struct.wmKeyMap* @WM_keymap_find(%struct.wmKeyConfig*, i8*, i32, i32) #2

declare dso_local %struct.wmKeyMapItem* @WM_keymap_verify_item(%struct.wmKeyMap*, i8*, i32, i32, i32, i32) #2

declare dso_local %struct.wmKeyMapItem* @WM_keymap_add_item(%struct.wmKeyMap*, i8*, i32, i32, i32, i32) #2

declare dso_local %struct.wmKeyMapItem* @WM_keymap_add_menu(%struct.wmKeyMap*, i8*, i32, i32, i32, i32) #2

declare dso_local void @RNA_boolean_set(%struct.PointerRNA*, i8*, i32) #2

declare dso_local void @RNA_string_set(%struct.PointerRNA*, i8*, i8*) #2

declare dso_local void @RNA_float_set(%struct.PointerRNA*, i8*, float) #2

; Function Attrs: noinline nounwind uwtable
define internal void @gesture_circle_modal_keymap(%struct.wmKeyConfig* %keyconf) #0 !dbg !3536 {
entry:
  %keyconf.addr = alloca %struct.wmKeyConfig*, align 8
  %keymap = alloca %struct.wmKeyMap*, align 8
  store %struct.wmKeyConfig* %keyconf, %struct.wmKeyConfig** %keyconf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyConfig** %keyconf.addr, metadata !9269, metadata !DIExpression()), !dbg !9270
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %keymap, metadata !9271, metadata !DIExpression()), !dbg !9272
  %0 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %keyconf.addr, align 8, !dbg !9273
  %call = call %struct.wmKeyMap* @WM_modalkeymap_get(%struct.wmKeyConfig* %0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.398, i64 0, i64 0)), !dbg !9274
  store %struct.wmKeyMap* %call, %struct.wmKeyMap** %keymap, align 8, !dbg !9272
  %1 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9275
  %tobool = icmp ne %struct.wmKeyMap* %1, null, !dbg !9275
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !9277

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9278
  %modal_items = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %2, i32 0, i32 10, !dbg !9279
  %3 = load i8*, i8** %modal_items, align 8, !dbg !9279
  %tobool1 = icmp ne i8* %3, null, !dbg !9278
  br i1 %tobool1, label %if.then, label %if.end, !dbg !9280

if.then:                                          ; preds = %land.lhs.true
  br label %return, !dbg !9281

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %keyconf.addr, align 8, !dbg !9282
  %call2 = call %struct.wmKeyMap* @WM_modalkeymap_add(%struct.wmKeyConfig* %4, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.398, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([9 x %struct.EnumPropertyItem], [9 x %struct.EnumPropertyItem]* @gesture_circle_modal_keymap.modal_items, i64 0, i64 0)), !dbg !9283
  store %struct.wmKeyMap* %call2, %struct.wmKeyMap** %keymap, align 8, !dbg !9284
  %5 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9285
  %call3 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %5, i32 218, i32 1, i32 -1, i32 0, i32 1), !dbg !9286
  %6 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9287
  %call4 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %6, i32 3, i32 -1, i32 -1, i32 0, i32 1), !dbg !9288
  %7 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9289
  %call5 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %7, i32 220, i32 1, i32 -1, i32 0, i32 2), !dbg !9290
  %8 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9291
  %call6 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %8, i32 163, i32 1, i32 0, i32 0, i32 2), !dbg !9292
  %9 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9293
  %call7 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %9, i32 1, i32 1, i32 0, i32 0, i32 3), !dbg !9294
  %10 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9295
  %call8 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %10, i32 1, i32 1, i32 1, i32 0, i32 4), !dbg !9296
  %11 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9297
  %call9 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %11, i32 1, i32 2, i32 1, i32 0, i32 5), !dbg !9298
  %12 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9299
  %call10 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %12, i32 2, i32 1, i32 0, i32 0, i32 4), !dbg !9300
  %13 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9301
  %call11 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %13, i32 2, i32 2, i32 0, i32 0, i32 5), !dbg !9302
  %14 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9303
  %call12 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %14, i32 1, i32 2, i32 0, i32 0, i32 5), !dbg !9304
  %15 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9305
  %call13 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %15, i32 10, i32 1, i32 0, i32 0, i32 7), !dbg !9306
  %16 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9307
  %call14 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %16, i32 162, i32 1, i32 0, i32 0, i32 7), !dbg !9308
  %17 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9309
  %call15 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %17, i32 11, i32 1, i32 0, i32 0, i32 6), !dbg !9310
  %18 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9311
  %call16 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %18, i32 164, i32 1, i32 0, i32 0, i32 6), !dbg !9312
  %19 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9313
  %call17 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %19, i32 14, i32 0, i32 0, i32 0, i32 11), !dbg !9314
  %20 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9315
  call void @WM_modalkeymap_assign(%struct.wmKeyMap* %20, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.399, i64 0, i64 0)), !dbg !9316
  %21 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9317
  call void @WM_modalkeymap_assign(%struct.wmKeyMap* %21, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.400, i64 0, i64 0)), !dbg !9318
  %22 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9319
  call void @WM_modalkeymap_assign(%struct.wmKeyMap* %22, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.401, i64 0, i64 0)), !dbg !9320
  %23 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9321
  call void @WM_modalkeymap_assign(%struct.wmKeyMap* %23, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.402, i64 0, i64 0)), !dbg !9322
  %24 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9323
  call void @WM_modalkeymap_assign(%struct.wmKeyMap* %24, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.403, i64 0, i64 0)), !dbg !9324
  br label %return, !dbg !9325

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !9325
}

; Function Attrs: noinline nounwind uwtable
define internal void @gesture_border_modal_keymap(%struct.wmKeyConfig* %keyconf) #0 !dbg !3546 {
entry:
  %keyconf.addr = alloca %struct.wmKeyConfig*, align 8
  %keymap = alloca %struct.wmKeyMap*, align 8
  store %struct.wmKeyConfig* %keyconf, %struct.wmKeyConfig** %keyconf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyConfig** %keyconf.addr, metadata !9326, metadata !DIExpression()), !dbg !9327
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %keymap, metadata !9328, metadata !DIExpression()), !dbg !9329
  %0 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %keyconf.addr, align 8, !dbg !9330
  %call = call %struct.wmKeyMap* @WM_modalkeymap_get(%struct.wmKeyConfig* %0, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.406, i64 0, i64 0)), !dbg !9331
  store %struct.wmKeyMap* %call, %struct.wmKeyMap** %keymap, align 8, !dbg !9329
  %1 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9332
  %tobool = icmp ne %struct.wmKeyMap* %1, null, !dbg !9332
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !9334

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9335
  %modal_items = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %2, i32 0, i32 10, !dbg !9336
  %3 = load i8*, i8** %modal_items, align 8, !dbg !9336
  %tobool1 = icmp ne i8* %3, null, !dbg !9335
  br i1 %tobool1, label %if.then, label %if.end, !dbg !9337

if.then:                                          ; preds = %land.lhs.true
  br label %return, !dbg !9338

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %keyconf.addr, align 8, !dbg !9339
  %call2 = call %struct.wmKeyMap* @WM_modalkeymap_add(%struct.wmKeyConfig* %4, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.406, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([5 x %struct.EnumPropertyItem], [5 x %struct.EnumPropertyItem]* @gesture_border_modal_keymap.modal_items, i64 0, i64 0)), !dbg !9340
  store %struct.wmKeyMap* %call2, %struct.wmKeyMap** %keymap, align 8, !dbg !9341
  %5 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9342
  %call3 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %5, i32 218, i32 1, i32 -1, i32 0, i32 1), !dbg !9343
  %6 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9344
  %call4 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %6, i32 3, i32 1, i32 -1, i32 0, i32 1), !dbg !9345
  %7 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9346
  %call5 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %7, i32 3, i32 2, i32 -1, i32 0, i32 3), !dbg !9347
  %8 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9348
  %call6 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %8, i32 1, i32 1, i32 1, i32 0, i32 8), !dbg !9349
  %9 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9350
  %call7 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %9, i32 1, i32 2, i32 1, i32 0, i32 4), !dbg !9351
  %10 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9352
  %call8 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %10, i32 1, i32 1, i32 0, i32 0, i32 8), !dbg !9353
  %11 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9354
  %call9 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %11, i32 1, i32 2, i32 -1, i32 0, i32 3), !dbg !9355
  %12 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9356
  %call10 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %12, i32 2, i32 1, i32 0, i32 0, i32 8), !dbg !9357
  %13 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9358
  %call11 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %13, i32 2, i32 2, i32 0, i32 0, i32 4), !dbg !9359
  %14 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9360
  call void @WM_modalkeymap_assign(%struct.wmKeyMap* %14, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.407, i64 0, i64 0)), !dbg !9361
  %15 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9362
  call void @WM_modalkeymap_assign(%struct.wmKeyMap* %15, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.408, i64 0, i64 0)), !dbg !9363
  %16 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9364
  call void @WM_modalkeymap_assign(%struct.wmKeyMap* %16, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.409, i64 0, i64 0)), !dbg !9365
  %17 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9366
  call void @WM_modalkeymap_assign(%struct.wmKeyMap* %17, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.410, i64 0, i64 0)), !dbg !9367
  %18 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9368
  call void @WM_modalkeymap_assign(%struct.wmKeyMap* %18, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.411, i64 0, i64 0)), !dbg !9369
  %19 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9370
  call void @WM_modalkeymap_assign(%struct.wmKeyMap* %19, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.412, i64 0, i64 0)), !dbg !9371
  %20 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9372
  call void @WM_modalkeymap_assign(%struct.wmKeyMap* %20, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.413, i64 0, i64 0)), !dbg !9373
  %21 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9374
  call void @WM_modalkeymap_assign(%struct.wmKeyMap* %21, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.414, i64 0, i64 0)), !dbg !9375
  %22 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9376
  call void @WM_modalkeymap_assign(%struct.wmKeyMap* %22, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.415, i64 0, i64 0)), !dbg !9377
  %23 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9378
  call void @WM_modalkeymap_assign(%struct.wmKeyMap* %23, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.416, i64 0, i64 0)), !dbg !9379
  %24 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9380
  call void @WM_modalkeymap_assign(%struct.wmKeyMap* %24, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.417, i64 0, i64 0)), !dbg !9381
  %25 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9382
  call void @WM_modalkeymap_assign(%struct.wmKeyMap* %25, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.418, i64 0, i64 0)), !dbg !9383
  %26 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9384
  call void @WM_modalkeymap_assign(%struct.wmKeyMap* %26, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.419, i64 0, i64 0)), !dbg !9385
  %27 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9386
  call void @WM_modalkeymap_assign(%struct.wmKeyMap* %27, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.420, i64 0, i64 0)), !dbg !9387
  %28 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9388
  call void @WM_modalkeymap_assign(%struct.wmKeyMap* %28, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.421, i64 0, i64 0)), !dbg !9389
  %29 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9390
  call void @WM_modalkeymap_assign(%struct.wmKeyMap* %29, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.422, i64 0, i64 0)), !dbg !9391
  %30 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9392
  call void @WM_modalkeymap_assign(%struct.wmKeyMap* %30, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.423, i64 0, i64 0)), !dbg !9393
  %31 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9394
  call void @WM_modalkeymap_assign(%struct.wmKeyMap* %31, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.424, i64 0, i64 0)), !dbg !9395
  %32 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9396
  call void @WM_modalkeymap_assign(%struct.wmKeyMap* %32, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.425, i64 0, i64 0)), !dbg !9397
  %33 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9398
  call void @WM_modalkeymap_assign(%struct.wmKeyMap* %33, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.426, i64 0, i64 0)), !dbg !9399
  %34 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9400
  call void @WM_modalkeymap_assign(%struct.wmKeyMap* %34, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.427, i64 0, i64 0)), !dbg !9401
  %35 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9402
  call void @WM_modalkeymap_assign(%struct.wmKeyMap* %35, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.428, i64 0, i64 0)), !dbg !9403
  %36 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9404
  call void @WM_modalkeymap_assign(%struct.wmKeyMap* %36, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.429, i64 0, i64 0)), !dbg !9405
  %37 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9406
  call void @WM_modalkeymap_assign(%struct.wmKeyMap* %37, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.430, i64 0, i64 0)), !dbg !9407
  br label %return, !dbg !9408

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !9408
}

; Function Attrs: noinline nounwind uwtable
define internal void @gesture_zoom_border_modal_keymap(%struct.wmKeyConfig* %keyconf) #0 !dbg !3549 {
entry:
  %keyconf.addr = alloca %struct.wmKeyConfig*, align 8
  %keymap = alloca %struct.wmKeyMap*, align 8
  store %struct.wmKeyConfig* %keyconf, %struct.wmKeyConfig** %keyconf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyConfig** %keyconf.addr, metadata !9409, metadata !DIExpression()), !dbg !9410
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %keymap, metadata !9411, metadata !DIExpression()), !dbg !9412
  %0 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %keyconf.addr, align 8, !dbg !9413
  %call = call %struct.wmKeyMap* @WM_modalkeymap_get(%struct.wmKeyConfig* %0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.435, i64 0, i64 0)), !dbg !9414
  store %struct.wmKeyMap* %call, %struct.wmKeyMap** %keymap, align 8, !dbg !9412
  %1 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9415
  %tobool = icmp ne %struct.wmKeyMap* %1, null, !dbg !9415
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !9417

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9418
  %modal_items = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %2, i32 0, i32 10, !dbg !9419
  %3 = load i8*, i8** %modal_items, align 8, !dbg !9419
  %tobool1 = icmp ne i8* %3, null, !dbg !9418
  br i1 %tobool1, label %if.then, label %if.end, !dbg !9420

if.then:                                          ; preds = %land.lhs.true
  br label %return, !dbg !9421

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %keyconf.addr, align 8, !dbg !9422
  %call2 = call %struct.wmKeyMap* @WM_modalkeymap_add(%struct.wmKeyConfig* %4, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.435, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([5 x %struct.EnumPropertyItem], [5 x %struct.EnumPropertyItem]* @gesture_zoom_border_modal_keymap.modal_items, i64 0, i64 0)), !dbg !9423
  store %struct.wmKeyMap* %call2, %struct.wmKeyMap** %keymap, align 8, !dbg !9424
  %5 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9425
  %call3 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %5, i32 218, i32 1, i32 -1, i32 0, i32 1), !dbg !9426
  %6 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9427
  %call4 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %6, i32 3, i32 -1, i32 -1, i32 0, i32 1), !dbg !9428
  %7 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9429
  %call5 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %7, i32 1, i32 1, i32 0, i32 0, i32 8), !dbg !9430
  %8 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9431
  %call6 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %8, i32 1, i32 2, i32 0, i32 0, i32 9), !dbg !9432
  %9 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9433
  %call7 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %9, i32 2, i32 1, i32 0, i32 0, i32 8), !dbg !9434
  %10 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9435
  %call8 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %10, i32 2, i32 2, i32 0, i32 0, i32 10), !dbg !9436
  %11 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9437
  call void @WM_modalkeymap_assign(%struct.wmKeyMap* %11, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.425, i64 0, i64 0)), !dbg !9438
  %12 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9439
  call void @WM_modalkeymap_assign(%struct.wmKeyMap* %12, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.429, i64 0, i64 0)), !dbg !9440
  br label %return, !dbg !9441

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !9441
}

; Function Attrs: noinline nounwind uwtable
define internal void @gesture_straightline_modal_keymap(%struct.wmKeyConfig* %keyconf) #0 !dbg !3552 {
entry:
  %keyconf.addr = alloca %struct.wmKeyConfig*, align 8
  %keymap = alloca %struct.wmKeyMap*, align 8
  store %struct.wmKeyConfig* %keyconf, %struct.wmKeyConfig** %keyconf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyConfig** %keyconf.addr, metadata !9442, metadata !DIExpression()), !dbg !9443
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %keymap, metadata !9444, metadata !DIExpression()), !dbg !9445
  %0 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %keyconf.addr, align 8, !dbg !9446
  %call = call %struct.wmKeyMap* @WM_modalkeymap_get(%struct.wmKeyConfig* %0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.436, i64 0, i64 0)), !dbg !9447
  store %struct.wmKeyMap* %call, %struct.wmKeyMap** %keymap, align 8, !dbg !9445
  %1 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9448
  %tobool = icmp ne %struct.wmKeyMap* %1, null, !dbg !9448
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !9450

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9451
  %modal_items = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %2, i32 0, i32 10, !dbg !9452
  %3 = load i8*, i8** %modal_items, align 8, !dbg !9452
  %tobool1 = icmp ne i8* %3, null, !dbg !9451
  br i1 %tobool1, label %if.then, label %if.end, !dbg !9453

if.then:                                          ; preds = %land.lhs.true
  br label %return, !dbg !9454

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load %struct.wmKeyConfig*, %struct.wmKeyConfig** %keyconf.addr, align 8, !dbg !9455
  %call2 = call %struct.wmKeyMap* @WM_modalkeymap_add(%struct.wmKeyConfig* %4, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.436, i64 0, i64 0), %struct.EnumPropertyItem* getelementptr inbounds ([4 x %struct.EnumPropertyItem], [4 x %struct.EnumPropertyItem]* @gesture_straightline_modal_keymap.modal_items, i64 0, i64 0)), !dbg !9456
  store %struct.wmKeyMap* %call2, %struct.wmKeyMap** %keymap, align 8, !dbg !9457
  %5 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9458
  %call3 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %5, i32 218, i32 1, i32 -1, i32 0, i32 1), !dbg !9459
  %6 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9460
  %call4 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %6, i32 3, i32 -1, i32 -1, i32 0, i32 1), !dbg !9461
  %7 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9462
  %call5 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %7, i32 1, i32 1, i32 0, i32 0, i32 8), !dbg !9463
  %8 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9464
  %call6 = call %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap* %8, i32 1, i32 2, i32 0, i32 0, i32 3), !dbg !9465
  %9 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9466
  call void @WM_modalkeymap_assign(%struct.wmKeyMap* %9, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.437, i64 0, i64 0)), !dbg !9467
  %10 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9468
  call void @WM_modalkeymap_assign(%struct.wmKeyMap* %10, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.438, i64 0, i64 0)), !dbg !9469
  %11 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9470
  call void @WM_modalkeymap_assign(%struct.wmKeyMap* %11, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.439, i64 0, i64 0)), !dbg !9471
  br label %return, !dbg !9472

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !9472
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.EnumPropertyItem* @RNA_action_itemf(%struct.bContext* %C, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %UNUSED_prop, i8* %r_free) #0 !dbg !9473 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %UNUSED_prop.addr = alloca %struct.PropertyRNA*, align 8
  %r_free.addr = alloca i8*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9478, metadata !DIExpression()), !dbg !9479
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !9480, metadata !DIExpression()), !dbg !9481
  store %struct.PropertyRNA* %UNUSED_prop, %struct.PropertyRNA** %UNUSED_prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %UNUSED_prop.addr, metadata !9482, metadata !DIExpression()), !dbg !9483
  store i8* %r_free, i8** %r_free.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %r_free.addr, metadata !9484, metadata !DIExpression()), !dbg !9485
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9486
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9487
  %2 = load i8*, i8** %r_free.addr, align 8, !dbg !9488
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9489
  %tobool = icmp ne %struct.bContext* %3, null, !dbg !9489
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9489

cond.true:                                        ; preds = %entry
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9490
  %call = call %struct.Main* @CTX_data_main(%struct.bContext* %4), !dbg !9491
  %action = getelementptr inbounds %struct.Main, %struct.Main* %call, i32 0, i32 34, !dbg !9492
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %action, i32 0, i32 0, !dbg !9493
  %5 = load i8*, i8** %first, align 8, !dbg !9493
  %6 = bitcast i8* %5 to %struct.ID*, !dbg !9494
  br label %cond.end, !dbg !9489

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9489

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.ID* [ %6, %cond.true ], [ null, %cond.false ], !dbg !9489
  %call1 = call %struct.EnumPropertyItem* @rna_id_itemf(%struct.bContext* %0, %struct.PointerRNA* %1, i8* %2, %struct.ID* %cond, i8 zeroext 0), !dbg !9495
  ret %struct.EnumPropertyItem* %call1, !dbg !9496
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.EnumPropertyItem* @rna_id_itemf(%struct.bContext* %UNUSED_C, %struct.PointerRNA* %UNUSED_ptr, i8* %r_free, %struct.ID* %id, i8 zeroext %local) #0 !dbg !9497 {
entry:
  %UNUSED_C.addr = alloca %struct.bContext*, align 8
  %UNUSED_ptr.addr = alloca %struct.PointerRNA*, align 8
  %r_free.addr = alloca i8*, align 8
  %id.addr = alloca %struct.ID*, align 8
  %local.addr = alloca i8, align 1
  %item_tmp = alloca %struct.EnumPropertyItem, align 8
  %item = alloca %struct.EnumPropertyItem*, align 8
  %totitem = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.bContext* %UNUSED_C, %struct.bContext** %UNUSED_C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %UNUSED_C.addr, metadata !9500, metadata !DIExpression()), !dbg !9501
  store %struct.PointerRNA* %UNUSED_ptr, %struct.PointerRNA** %UNUSED_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %UNUSED_ptr.addr, metadata !9502, metadata !DIExpression()), !dbg !9503
  store i8* %r_free, i8** %r_free.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %r_free.addr, metadata !9504, metadata !DIExpression()), !dbg !9505
  store %struct.ID* %id, %struct.ID** %id.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ID** %id.addr, metadata !9506, metadata !DIExpression()), !dbg !9507
  store i8 %local, i8* %local.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %local.addr, metadata !9508, metadata !DIExpression()), !dbg !9509
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem* %item_tmp, metadata !9510, metadata !DIExpression()), !dbg !9511
  %0 = bitcast %struct.EnumPropertyItem* %item_tmp to i8*, !dbg !9511
  call void @llvm.memset.p0i8.i64(i8* align 8 %0, i8 0, i64 40, i1 false), !dbg !9511
  call void @llvm.dbg.declare(metadata %struct.EnumPropertyItem** %item, metadata !9512, metadata !DIExpression()), !dbg !9513
  store %struct.EnumPropertyItem* null, %struct.EnumPropertyItem** %item, align 8, !dbg !9513
  call void @llvm.dbg.declare(metadata i32* %totitem, metadata !9514, metadata !DIExpression()), !dbg !9515
  store i32 0, i32* %totitem, align 4, !dbg !9515
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9516, metadata !DIExpression()), !dbg !9517
  store i32 0, i32* %i, align 4, !dbg !9517
  br label %for.cond, !dbg !9518

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !9519
  %tobool = icmp ne %struct.ID* %1, null, !dbg !9522
  br i1 %tobool, label %for.body, label %for.end, !dbg !9522

for.body:                                         ; preds = %for.cond
  %2 = load i8, i8* %local.addr, align 1, !dbg !9523
  %conv = zext i8 %2 to i32, !dbg !9523
  %cmp = icmp eq i32 %conv, 0, !dbg !9526
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !9527

lor.lhs.false:                                    ; preds = %for.body
  %3 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !9528
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %3, i32 0, i32 3, !dbg !9529
  %4 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !9529
  %cmp2 = icmp eq %struct.Library* %4, null, !dbg !9530
  br i1 %cmp2, label %if.then, label %if.end, !dbg !9531

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %5 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !9532
  %name = getelementptr inbounds %struct.ID, %struct.ID* %5, i32 0, i32 4, !dbg !9534
  %arraydecay = getelementptr inbounds [66 x i8], [66 x i8]* %name, i64 0, i64 0, !dbg !9532
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay, i64 2, !dbg !9535
  %name4 = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %item_tmp, i32 0, i32 3, !dbg !9536
  store i8* %add.ptr, i8** %name4, align 8, !dbg !9537
  %identifier = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %item_tmp, i32 0, i32 1, !dbg !9538
  store i8* %add.ptr, i8** %identifier, align 8, !dbg !9539
  %6 = load i32, i32* %i, align 4, !dbg !9540
  %inc = add nsw i32 %6, 1, !dbg !9540
  store i32 %inc, i32* %i, align 4, !dbg !9540
  %value = getelementptr inbounds %struct.EnumPropertyItem, %struct.EnumPropertyItem* %item_tmp, i32 0, i32 0, !dbg !9541
  store i32 %6, i32* %value, align 8, !dbg !9542
  call void @RNA_enum_item_add(%struct.EnumPropertyItem** %item, i32* %totitem, %struct.EnumPropertyItem* %item_tmp), !dbg !9543
  br label %if.end, !dbg !9544

if.end:                                           ; preds = %if.then, %lor.lhs.false
  br label %for.inc, !dbg !9545

for.inc:                                          ; preds = %if.end
  %7 = load %struct.ID*, %struct.ID** %id.addr, align 8, !dbg !9546
  %next = getelementptr inbounds %struct.ID, %struct.ID* %7, i32 0, i32 0, !dbg !9547
  %8 = load i8*, i8** %next, align 8, !dbg !9547
  %9 = bitcast i8* %8 to %struct.ID*, !dbg !9546
  store %struct.ID* %9, %struct.ID** %id.addr, align 8, !dbg !9548
  br label %for.cond, !dbg !9549, !llvm.loop !9550

for.end:                                          ; preds = %for.cond
  call void @RNA_enum_item_end(%struct.EnumPropertyItem** %item, i32* %totitem), !dbg !9552
  %10 = load i8*, i8** %r_free.addr, align 8, !dbg !9553
  store i8 1, i8* %10, align 1, !dbg !9554
  %11 = load %struct.EnumPropertyItem*, %struct.EnumPropertyItem** %item, align 8, !dbg !9555
  ret %struct.EnumPropertyItem* %11, !dbg !9556
}

declare dso_local %struct.Main* @CTX_data_main(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.EnumPropertyItem* @RNA_group_itemf(%struct.bContext* %C, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %UNUSED_prop, i8* %r_free) #0 !dbg !9557 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %UNUSED_prop.addr = alloca %struct.PropertyRNA*, align 8
  %r_free.addr = alloca i8*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9558, metadata !DIExpression()), !dbg !9559
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !9560, metadata !DIExpression()), !dbg !9561
  store %struct.PropertyRNA* %UNUSED_prop, %struct.PropertyRNA** %UNUSED_prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %UNUSED_prop.addr, metadata !9562, metadata !DIExpression()), !dbg !9563
  store i8* %r_free, i8** %r_free.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %r_free.addr, metadata !9564, metadata !DIExpression()), !dbg !9565
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9566
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9567
  %2 = load i8*, i8** %r_free.addr, align 8, !dbg !9568
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9569
  %tobool = icmp ne %struct.bContext* %3, null, !dbg !9569
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9569

cond.true:                                        ; preds = %entry
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9570
  %call = call %struct.Main* @CTX_data_main(%struct.bContext* %4), !dbg !9571
  %group = getelementptr inbounds %struct.Main, %struct.Main* %call, i32 0, i32 32, !dbg !9572
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %group, i32 0, i32 0, !dbg !9573
  %5 = load i8*, i8** %first, align 8, !dbg !9573
  %6 = bitcast i8* %5 to %struct.ID*, !dbg !9574
  br label %cond.end, !dbg !9569

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9569

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.ID* [ %6, %cond.true ], [ null, %cond.false ], !dbg !9569
  %call1 = call %struct.EnumPropertyItem* @rna_id_itemf(%struct.bContext* %0, %struct.PointerRNA* %1, i8* %2, %struct.ID* %cond, i8 zeroext 0), !dbg !9575
  ret %struct.EnumPropertyItem* %call1, !dbg !9576
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.EnumPropertyItem* @RNA_group_local_itemf(%struct.bContext* %C, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %UNUSED_prop, i8* %r_free) #0 !dbg !9577 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %UNUSED_prop.addr = alloca %struct.PropertyRNA*, align 8
  %r_free.addr = alloca i8*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9578, metadata !DIExpression()), !dbg !9579
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !9580, metadata !DIExpression()), !dbg !9581
  store %struct.PropertyRNA* %UNUSED_prop, %struct.PropertyRNA** %UNUSED_prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %UNUSED_prop.addr, metadata !9582, metadata !DIExpression()), !dbg !9583
  store i8* %r_free, i8** %r_free.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %r_free.addr, metadata !9584, metadata !DIExpression()), !dbg !9585
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9586
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9587
  %2 = load i8*, i8** %r_free.addr, align 8, !dbg !9588
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9589
  %tobool = icmp ne %struct.bContext* %3, null, !dbg !9589
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9589

cond.true:                                        ; preds = %entry
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9590
  %call = call %struct.Main* @CTX_data_main(%struct.bContext* %4), !dbg !9591
  %group = getelementptr inbounds %struct.Main, %struct.Main* %call, i32 0, i32 32, !dbg !9592
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %group, i32 0, i32 0, !dbg !9593
  %5 = load i8*, i8** %first, align 8, !dbg !9593
  %6 = bitcast i8* %5 to %struct.ID*, !dbg !9594
  br label %cond.end, !dbg !9589

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9589

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.ID* [ %6, %cond.true ], [ null, %cond.false ], !dbg !9589
  %call1 = call %struct.EnumPropertyItem* @rna_id_itemf(%struct.bContext* %0, %struct.PointerRNA* %1, i8* %2, %struct.ID* %cond, i8 zeroext 1), !dbg !9595
  ret %struct.EnumPropertyItem* %call1, !dbg !9596
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.EnumPropertyItem* @RNA_image_itemf(%struct.bContext* %C, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %UNUSED_prop, i8* %r_free) #0 !dbg !9597 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %UNUSED_prop.addr = alloca %struct.PropertyRNA*, align 8
  %r_free.addr = alloca i8*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9598, metadata !DIExpression()), !dbg !9599
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !9600, metadata !DIExpression()), !dbg !9601
  store %struct.PropertyRNA* %UNUSED_prop, %struct.PropertyRNA** %UNUSED_prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %UNUSED_prop.addr, metadata !9602, metadata !DIExpression()), !dbg !9603
  store i8* %r_free, i8** %r_free.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %r_free.addr, metadata !9604, metadata !DIExpression()), !dbg !9605
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9606
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9607
  %2 = load i8*, i8** %r_free.addr, align 8, !dbg !9608
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9609
  %tobool = icmp ne %struct.bContext* %3, null, !dbg !9609
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9609

cond.true:                                        ; preds = %entry
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9610
  %call = call %struct.Main* @CTX_data_main(%struct.bContext* %4), !dbg !9611
  %image = getelementptr inbounds %struct.Main, %struct.Main* %call, i32 0, i32 19, !dbg !9612
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %image, i32 0, i32 0, !dbg !9613
  %5 = load i8*, i8** %first, align 8, !dbg !9613
  %6 = bitcast i8* %5 to %struct.ID*, !dbg !9614
  br label %cond.end, !dbg !9609

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9609

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.ID* [ %6, %cond.true ], [ null, %cond.false ], !dbg !9609
  %call1 = call %struct.EnumPropertyItem* @rna_id_itemf(%struct.bContext* %0, %struct.PointerRNA* %1, i8* %2, %struct.ID* %cond, i8 zeroext 0), !dbg !9615
  ret %struct.EnumPropertyItem* %call1, !dbg !9616
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.EnumPropertyItem* @RNA_image_local_itemf(%struct.bContext* %C, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %UNUSED_prop, i8* %r_free) #0 !dbg !9617 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %UNUSED_prop.addr = alloca %struct.PropertyRNA*, align 8
  %r_free.addr = alloca i8*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9618, metadata !DIExpression()), !dbg !9619
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !9620, metadata !DIExpression()), !dbg !9621
  store %struct.PropertyRNA* %UNUSED_prop, %struct.PropertyRNA** %UNUSED_prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %UNUSED_prop.addr, metadata !9622, metadata !DIExpression()), !dbg !9623
  store i8* %r_free, i8** %r_free.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %r_free.addr, metadata !9624, metadata !DIExpression()), !dbg !9625
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9626
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9627
  %2 = load i8*, i8** %r_free.addr, align 8, !dbg !9628
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9629
  %tobool = icmp ne %struct.bContext* %3, null, !dbg !9629
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9629

cond.true:                                        ; preds = %entry
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9630
  %call = call %struct.Main* @CTX_data_main(%struct.bContext* %4), !dbg !9631
  %image = getelementptr inbounds %struct.Main, %struct.Main* %call, i32 0, i32 19, !dbg !9632
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %image, i32 0, i32 0, !dbg !9633
  %5 = load i8*, i8** %first, align 8, !dbg !9633
  %6 = bitcast i8* %5 to %struct.ID*, !dbg !9634
  br label %cond.end, !dbg !9629

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9629

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.ID* [ %6, %cond.true ], [ null, %cond.false ], !dbg !9629
  %call1 = call %struct.EnumPropertyItem* @rna_id_itemf(%struct.bContext* %0, %struct.PointerRNA* %1, i8* %2, %struct.ID* %cond, i8 zeroext 1), !dbg !9635
  ret %struct.EnumPropertyItem* %call1, !dbg !9636
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.EnumPropertyItem* @RNA_scene_itemf(%struct.bContext* %C, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %UNUSED_prop, i8* %r_free) #0 !dbg !9637 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %UNUSED_prop.addr = alloca %struct.PropertyRNA*, align 8
  %r_free.addr = alloca i8*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9638, metadata !DIExpression()), !dbg !9639
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !9640, metadata !DIExpression()), !dbg !9641
  store %struct.PropertyRNA* %UNUSED_prop, %struct.PropertyRNA** %UNUSED_prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %UNUSED_prop.addr, metadata !9642, metadata !DIExpression()), !dbg !9643
  store i8* %r_free, i8** %r_free.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %r_free.addr, metadata !9644, metadata !DIExpression()), !dbg !9645
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9646
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9647
  %2 = load i8*, i8** %r_free.addr, align 8, !dbg !9648
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9649
  %tobool = icmp ne %struct.bContext* %3, null, !dbg !9649
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9649

cond.true:                                        ; preds = %entry
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9650
  %call = call %struct.Main* @CTX_data_main(%struct.bContext* %4), !dbg !9651
  %scene = getelementptr inbounds %struct.Main, %struct.Main* %call, i32 0, i32 11, !dbg !9652
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %scene, i32 0, i32 0, !dbg !9653
  %5 = load i8*, i8** %first, align 8, !dbg !9653
  %6 = bitcast i8* %5 to %struct.ID*, !dbg !9654
  br label %cond.end, !dbg !9649

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9649

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.ID* [ %6, %cond.true ], [ null, %cond.false ], !dbg !9649
  %call1 = call %struct.EnumPropertyItem* @rna_id_itemf(%struct.bContext* %0, %struct.PointerRNA* %1, i8* %2, %struct.ID* %cond, i8 zeroext 0), !dbg !9655
  ret %struct.EnumPropertyItem* %call1, !dbg !9656
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.EnumPropertyItem* @RNA_scene_local_itemf(%struct.bContext* %C, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %UNUSED_prop, i8* %r_free) #0 !dbg !9657 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %UNUSED_prop.addr = alloca %struct.PropertyRNA*, align 8
  %r_free.addr = alloca i8*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9658, metadata !DIExpression()), !dbg !9659
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !9660, metadata !DIExpression()), !dbg !9661
  store %struct.PropertyRNA* %UNUSED_prop, %struct.PropertyRNA** %UNUSED_prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %UNUSED_prop.addr, metadata !9662, metadata !DIExpression()), !dbg !9663
  store i8* %r_free, i8** %r_free.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %r_free.addr, metadata !9664, metadata !DIExpression()), !dbg !9665
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9666
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9667
  %2 = load i8*, i8** %r_free.addr, align 8, !dbg !9668
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9669
  %tobool = icmp ne %struct.bContext* %3, null, !dbg !9669
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9669

cond.true:                                        ; preds = %entry
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9670
  %call = call %struct.Main* @CTX_data_main(%struct.bContext* %4), !dbg !9671
  %scene = getelementptr inbounds %struct.Main, %struct.Main* %call, i32 0, i32 11, !dbg !9672
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %scene, i32 0, i32 0, !dbg !9673
  %5 = load i8*, i8** %first, align 8, !dbg !9673
  %6 = bitcast i8* %5 to %struct.ID*, !dbg !9674
  br label %cond.end, !dbg !9669

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9669

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.ID* [ %6, %cond.true ], [ null, %cond.false ], !dbg !9669
  %call1 = call %struct.EnumPropertyItem* @rna_id_itemf(%struct.bContext* %0, %struct.PointerRNA* %1, i8* %2, %struct.ID* %cond, i8 zeroext 1), !dbg !9675
  ret %struct.EnumPropertyItem* %call1, !dbg !9676
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.EnumPropertyItem* @RNA_movieclip_itemf(%struct.bContext* %C, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %UNUSED_prop, i8* %r_free) #0 !dbg !9677 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %UNUSED_prop.addr = alloca %struct.PropertyRNA*, align 8
  %r_free.addr = alloca i8*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9678, metadata !DIExpression()), !dbg !9679
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !9680, metadata !DIExpression()), !dbg !9681
  store %struct.PropertyRNA* %UNUSED_prop, %struct.PropertyRNA** %UNUSED_prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %UNUSED_prop.addr, metadata !9682, metadata !DIExpression()), !dbg !9683
  store i8* %r_free, i8** %r_free.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %r_free.addr, metadata !9684, metadata !DIExpression()), !dbg !9685
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9686
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9687
  %2 = load i8*, i8** %r_free.addr, align 8, !dbg !9688
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9689
  %tobool = icmp ne %struct.bContext* %3, null, !dbg !9689
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9689

cond.true:                                        ; preds = %entry
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9690
  %call = call %struct.Main* @CTX_data_main(%struct.bContext* %4), !dbg !9691
  %movieclip = getelementptr inbounds %struct.Main, %struct.Main* %call, i32 0, i32 42, !dbg !9692
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %movieclip, i32 0, i32 0, !dbg !9693
  %5 = load i8*, i8** %first, align 8, !dbg !9693
  %6 = bitcast i8* %5 to %struct.ID*, !dbg !9694
  br label %cond.end, !dbg !9689

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9689

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.ID* [ %6, %cond.true ], [ null, %cond.false ], !dbg !9689
  %call1 = call %struct.EnumPropertyItem* @rna_id_itemf(%struct.bContext* %0, %struct.PointerRNA* %1, i8* %2, %struct.ID* %cond, i8 zeroext 0), !dbg !9695
  ret %struct.EnumPropertyItem* %call1, !dbg !9696
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.EnumPropertyItem* @RNA_movieclip_local_itemf(%struct.bContext* %C, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %UNUSED_prop, i8* %r_free) #0 !dbg !9697 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %UNUSED_prop.addr = alloca %struct.PropertyRNA*, align 8
  %r_free.addr = alloca i8*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9698, metadata !DIExpression()), !dbg !9699
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !9700, metadata !DIExpression()), !dbg !9701
  store %struct.PropertyRNA* %UNUSED_prop, %struct.PropertyRNA** %UNUSED_prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %UNUSED_prop.addr, metadata !9702, metadata !DIExpression()), !dbg !9703
  store i8* %r_free, i8** %r_free.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %r_free.addr, metadata !9704, metadata !DIExpression()), !dbg !9705
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9706
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9707
  %2 = load i8*, i8** %r_free.addr, align 8, !dbg !9708
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9709
  %tobool = icmp ne %struct.bContext* %3, null, !dbg !9709
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9709

cond.true:                                        ; preds = %entry
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9710
  %call = call %struct.Main* @CTX_data_main(%struct.bContext* %4), !dbg !9711
  %movieclip = getelementptr inbounds %struct.Main, %struct.Main* %call, i32 0, i32 42, !dbg !9712
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %movieclip, i32 0, i32 0, !dbg !9713
  %5 = load i8*, i8** %first, align 8, !dbg !9713
  %6 = bitcast i8* %5 to %struct.ID*, !dbg !9714
  br label %cond.end, !dbg !9709

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9709

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.ID* [ %6, %cond.true ], [ null, %cond.false ], !dbg !9709
  %call1 = call %struct.EnumPropertyItem* @rna_id_itemf(%struct.bContext* %0, %struct.PointerRNA* %1, i8* %2, %struct.ID* %cond, i8 zeroext 1), !dbg !9715
  ret %struct.EnumPropertyItem* %call1, !dbg !9716
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.EnumPropertyItem* @RNA_mask_itemf(%struct.bContext* %C, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %UNUSED_prop, i8* %r_free) #0 !dbg !9717 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %UNUSED_prop.addr = alloca %struct.PropertyRNA*, align 8
  %r_free.addr = alloca i8*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9718, metadata !DIExpression()), !dbg !9719
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !9720, metadata !DIExpression()), !dbg !9721
  store %struct.PropertyRNA* %UNUSED_prop, %struct.PropertyRNA** %UNUSED_prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %UNUSED_prop.addr, metadata !9722, metadata !DIExpression()), !dbg !9723
  store i8* %r_free, i8** %r_free.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %r_free.addr, metadata !9724, metadata !DIExpression()), !dbg !9725
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9726
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9727
  %2 = load i8*, i8** %r_free.addr, align 8, !dbg !9728
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9729
  %tobool = icmp ne %struct.bContext* %3, null, !dbg !9729
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9729

cond.true:                                        ; preds = %entry
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9730
  %call = call %struct.Main* @CTX_data_main(%struct.bContext* %4), !dbg !9731
  %mask = getelementptr inbounds %struct.Main, %struct.Main* %call, i32 0, i32 43, !dbg !9732
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %mask, i32 0, i32 0, !dbg !9733
  %5 = load i8*, i8** %first, align 8, !dbg !9733
  %6 = bitcast i8* %5 to %struct.ID*, !dbg !9734
  br label %cond.end, !dbg !9729

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9729

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.ID* [ %6, %cond.true ], [ null, %cond.false ], !dbg !9729
  %call1 = call %struct.EnumPropertyItem* @rna_id_itemf(%struct.bContext* %0, %struct.PointerRNA* %1, i8* %2, %struct.ID* %cond, i8 zeroext 0), !dbg !9735
  ret %struct.EnumPropertyItem* %call1, !dbg !9736
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.EnumPropertyItem* @RNA_mask_local_itemf(%struct.bContext* %C, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %UNUSED_prop, i8* %r_free) #0 !dbg !9737 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ptr.addr = alloca %struct.PointerRNA*, align 8
  %UNUSED_prop.addr = alloca %struct.PropertyRNA*, align 8
  %r_free.addr = alloca i8*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9738, metadata !DIExpression()), !dbg !9739
  store %struct.PointerRNA* %ptr, %struct.PointerRNA** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ptr.addr, metadata !9740, metadata !DIExpression()), !dbg !9741
  store %struct.PropertyRNA* %UNUSED_prop, %struct.PropertyRNA** %UNUSED_prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %UNUSED_prop.addr, metadata !9742, metadata !DIExpression()), !dbg !9743
  store i8* %r_free, i8** %r_free.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %r_free.addr, metadata !9744, metadata !DIExpression()), !dbg !9745
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9746
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr.addr, align 8, !dbg !9747
  %2 = load i8*, i8** %r_free.addr, align 8, !dbg !9748
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9749
  %tobool = icmp ne %struct.bContext* %3, null, !dbg !9749
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9749

cond.true:                                        ; preds = %entry
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9750
  %call = call %struct.Main* @CTX_data_main(%struct.bContext* %4), !dbg !9751
  %mask = getelementptr inbounds %struct.Main, %struct.Main* %call, i32 0, i32 43, !dbg !9752
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %mask, i32 0, i32 0, !dbg !9753
  %5 = load i8*, i8** %first, align 8, !dbg !9753
  %6 = bitcast i8* %5 to %struct.ID*, !dbg !9754
  br label %cond.end, !dbg !9749

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9749

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.ID* [ %6, %cond.true ], [ null, %cond.false ], !dbg !9749
  %call1 = call %struct.EnumPropertyItem* @rna_id_itemf(%struct.bContext* %0, %struct.PointerRNA* %1, i8* %2, %struct.ID* %cond, i8 zeroext 1), !dbg !9755
  ret %struct.EnumPropertyItem* %call1, !dbg !9756
}

; Function Attrs: noinline nounwind uwtable
define internal void @wm_macro_start(%struct.wmOperator* %op) #0 !dbg !9757 {
entry:
  %op.addr = alloca %struct.wmOperator*, align 8
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !9758, metadata !DIExpression()), !dbg !9759
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9760
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 5, !dbg !9762
  %1 = load i8*, i8** %customdata, align 8, !dbg !9762
  %cmp = icmp eq i8* %1, null, !dbg !9763
  br i1 %cmp, label %if.then, label %if.end, !dbg !9764

if.then:                                          ; preds = %entry
  %2 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !9765
  %call = call i8* %2(i64 4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.162, i64 0, i64 0)), !dbg !9765
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9767
  %customdata1 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 5, !dbg !9768
  store i8* %call, i8** %customdata1, align 8, !dbg !9769
  br label %if.end, !dbg !9770

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !9771
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @wm_macro_end(%struct.wmOperator* %op, i32 %retval1) #0 !dbg !9772 {
entry:
  %op.addr = alloca %struct.wmOperator*, align 8
  %retval.addr = alloca i32, align 4
  %md = alloca %struct.MacroData*, align 8
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !9775, metadata !DIExpression()), !dbg !9776
  store i32 %retval1, i32* %retval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retval.addr, metadata !9777, metadata !DIExpression()), !dbg !9778
  %0 = load i32, i32* %retval.addr, align 4, !dbg !9779
  %and = and i32 %0, 2, !dbg !9781
  %tobool = icmp ne i32 %and, 0, !dbg !9781
  br i1 %tobool, label %if.then, label %if.end7, !dbg !9782

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.MacroData** %md, metadata !9783, metadata !DIExpression()), !dbg !9785
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9786
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 5, !dbg !9787
  %2 = load i8*, i8** %customdata, align 8, !dbg !9787
  %3 = bitcast i8* %2 to %struct.MacroData*, !dbg !9786
  store %struct.MacroData* %3, %struct.MacroData** %md, align 8, !dbg !9785
  %4 = load %struct.MacroData*, %struct.MacroData** %md, align 8, !dbg !9788
  %retval2 = getelementptr inbounds %struct.MacroData, %struct.MacroData* %4, i32 0, i32 0, !dbg !9790
  %5 = load i32, i32* %retval2, align 4, !dbg !9790
  %and3 = and i32 %5, 4, !dbg !9791
  %tobool4 = icmp ne i32 %and3, 0, !dbg !9791
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !9792

if.then5:                                         ; preds = %if.then
  %6 = load i32, i32* %retval.addr, align 4, !dbg !9793
  %or = or i32 %6, 4, !dbg !9793
  store i32 %or, i32* %retval.addr, align 4, !dbg !9793
  %7 = load i32, i32* %retval.addr, align 4, !dbg !9795
  %and6 = and i32 %7, -3, !dbg !9795
  store i32 %and6, i32* %retval.addr, align 4, !dbg !9795
  br label %if.end, !dbg !9796

if.end:                                           ; preds = %if.then5, %if.then
  br label %if.end7, !dbg !9797

if.end7:                                          ; preds = %if.end, %entry
  %8 = load i32, i32* %retval.addr, align 4, !dbg !9798
  %and8 = and i32 %8, 6, !dbg !9800
  %tobool9 = icmp ne i32 %and8, 0, !dbg !9800
  br i1 %tobool9, label %if.then10, label %if.end17, !dbg !9801

if.then10:                                        ; preds = %if.end7
  %9 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9802
  %customdata11 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %9, i32 0, i32 5, !dbg !9805
  %10 = load i8*, i8** %customdata11, align 8, !dbg !9805
  %tobool12 = icmp ne i8* %10, null, !dbg !9802
  br i1 %tobool12, label %if.then13, label %if.end16, !dbg !9806

if.then13:                                        ; preds = %if.then10
  %11 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !9807
  %12 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9809
  %customdata14 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %12, i32 0, i32 5, !dbg !9810
  %13 = load i8*, i8** %customdata14, align 8, !dbg !9810
  call void %11(i8* %13), !dbg !9807
  %14 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9811
  %customdata15 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %14, i32 0, i32 5, !dbg !9812
  store i8* null, i8** %customdata15, align 8, !dbg !9813
  br label %if.end16, !dbg !9814

if.end16:                                         ; preds = %if.then13, %if.then10
  br label %if.end17, !dbg !9815

if.end17:                                         ; preds = %if.end16, %if.end7
  %15 = load i32, i32* %retval.addr, align 4, !dbg !9816
  ret i32 %15, !dbg !9817
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @wm_macro_invoke_internal(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event, %struct.wmOperator* %opm) #0 !dbg !9818 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %opm.addr = alloca %struct.wmOperator*, align 8
  %retval1 = alloca i32, align 4
  %md = alloca %struct.MacroData*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9821, metadata !DIExpression()), !dbg !9822
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !9823, metadata !DIExpression()), !dbg !9824
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !9825, metadata !DIExpression()), !dbg !9826
  store %struct.wmOperator* %opm, %struct.wmOperator** %opm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %opm.addr, metadata !9827, metadata !DIExpression()), !dbg !9828
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !9829, metadata !DIExpression()), !dbg !9830
  store i32 4, i32* %retval1, align 4, !dbg !9830
  br label %for.cond, !dbg !9831

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.wmOperator*, %struct.wmOperator** %opm.addr, align 8, !dbg !9832
  %tobool = icmp ne %struct.wmOperator* %0, null, !dbg !9835
  br i1 %tobool, label %for.body, label %for.end, !dbg !9835

for.body:                                         ; preds = %for.cond
  %1 = load %struct.wmOperator*, %struct.wmOperator** %opm.addr, align 8, !dbg !9836
  %type = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 4, !dbg !9839
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type, align 8, !dbg !9839
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %2, i32 0, i32 6, !dbg !9840
  %3 = load i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !9840
  %tobool2 = icmp ne i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* %3, null, !dbg !9836
  br i1 %tobool2, label %if.then, label %if.else, !dbg !9841

if.then:                                          ; preds = %for.body
  %4 = load %struct.wmOperator*, %struct.wmOperator** %opm.addr, align 8, !dbg !9842
  %type3 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 4, !dbg !9843
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type3, align 8, !dbg !9843
  %invoke4 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 6, !dbg !9844
  %6 = load i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke4, align 8, !dbg !9844
  %7 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9845
  %8 = load %struct.wmOperator*, %struct.wmOperator** %opm.addr, align 8, !dbg !9846
  %9 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !9847
  %call = call i32 %6(%struct.bContext* %7, %struct.wmOperator* %8, %struct.wmEvent* %9), !dbg !9842
  store i32 %call, i32* %retval1, align 4, !dbg !9848
  br label %if.end11, !dbg !9849

if.else:                                          ; preds = %for.body
  %10 = load %struct.wmOperator*, %struct.wmOperator** %opm.addr, align 8, !dbg !9850
  %type5 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %10, i32 0, i32 4, !dbg !9852
  %11 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type5, align 8, !dbg !9852
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %11, i32 0, i32 4, !dbg !9853
  %12 = load i32 (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !9853
  %tobool6 = icmp ne i32 (%struct.bContext*, %struct.wmOperator*)* %12, null, !dbg !9850
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !9854

if.then7:                                         ; preds = %if.else
  %13 = load %struct.wmOperator*, %struct.wmOperator** %opm.addr, align 8, !dbg !9855
  %type8 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %13, i32 0, i32 4, !dbg !9856
  %14 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type8, align 8, !dbg !9856
  %exec9 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %14, i32 0, i32 4, !dbg !9857
  %15 = load i32 (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*)** %exec9, align 8, !dbg !9857
  %16 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9858
  %17 = load %struct.wmOperator*, %struct.wmOperator** %opm.addr, align 8, !dbg !9859
  %call10 = call i32 %15(%struct.bContext* %16, %struct.wmOperator* %17), !dbg !9855
  store i32 %call10, i32* %retval1, align 4, !dbg !9860
  br label %if.end, !dbg !9861

if.end:                                           ; preds = %if.then7, %if.else
  br label %if.end11

if.end11:                                         ; preds = %if.end, %if.then
  %18 = load i32, i32* %retval1, align 4, !dbg !9862
  %19 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9863
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %19, i32 0, i32 8, !dbg !9864
  %20 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !9864
  %list = getelementptr inbounds %struct.ReportList, %struct.ReportList* %20, i32 0, i32 0, !dbg !9865
  %21 = load %struct.wmOperator*, %struct.wmOperator** %opm.addr, align 8, !dbg !9866
  %reports12 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %21, i32 0, i32 8, !dbg !9867
  %22 = load %struct.ReportList*, %struct.ReportList** %reports12, align 8, !dbg !9867
  %list13 = getelementptr inbounds %struct.ReportList, %struct.ReportList* %22, i32 0, i32 0, !dbg !9868
  call void @BLI_movelisttolist(%struct.ListBase* %list, %struct.ListBase* %list13), !dbg !9869
  %23 = load i32, i32* %retval1, align 4, !dbg !9870
  %and = and i32 %23, 4, !dbg !9872
  %tobool14 = icmp ne i32 %and, 0, !dbg !9872
  br i1 %tobool14, label %if.then15, label %if.else17, !dbg !9873

if.then15:                                        ; preds = %if.end11
  call void @llvm.dbg.declare(metadata %struct.MacroData** %md, metadata !9874, metadata !DIExpression()), !dbg !9876
  %24 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9877
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %24, i32 0, i32 5, !dbg !9878
  %25 = load i8*, i8** %customdata, align 8, !dbg !9878
  %26 = bitcast i8* %25 to %struct.MacroData*, !dbg !9877
  store %struct.MacroData* %26, %struct.MacroData** %md, align 8, !dbg !9876
  %27 = load %struct.MacroData*, %struct.MacroData** %md, align 8, !dbg !9879
  %retval16 = getelementptr inbounds %struct.MacroData, %struct.MacroData* %27, i32 0, i32 0, !dbg !9880
  store i32 4, i32* %retval16, align 4, !dbg !9881
  br label %if.end18, !dbg !9882

if.else17:                                        ; preds = %if.end11
  br label %for.end, !dbg !9883

if.end18:                                         ; preds = %if.then15
  br label %for.inc, !dbg !9885

for.inc:                                          ; preds = %if.end18
  %28 = load %struct.wmOperator*, %struct.wmOperator** %opm.addr, align 8, !dbg !9886
  %next = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %28, i32 0, i32 0, !dbg !9887
  %29 = load %struct.wmOperator*, %struct.wmOperator** %next, align 8, !dbg !9887
  store %struct.wmOperator* %29, %struct.wmOperator** %opm.addr, align 8, !dbg !9888
  br label %for.cond, !dbg !9889, !llvm.loop !9890

for.end:                                          ; preds = %if.else17, %for.cond
  %30 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !9892
  %31 = load i32, i32* %retval1, align 4, !dbg !9893
  %call19 = call i32 @wm_macro_end(%struct.wmOperator* %30, i32 %31), !dbg !9894
  ret i32 %call19, !dbg !9895
}

declare dso_local void @BLI_movelisttolist(%struct.ListBase*, %struct.ListBase*) #2

declare dso_local i8* @BLI_findptr(%struct.ListBase*, i8*, i32) #2

declare dso_local void @wm_event_free_handler(%struct.wmEventHandler*) #2

declare dso_local void @WM_cursor_grab_enable(%struct.wmWindow*, i8 zeroext, i8 zeroext, i32*) #2

declare dso_local void @BLI_freelistN(%struct.ListBase*) #2

declare dso_local void @CTX_data_pointer_get(%struct.PointerRNA* sret, %struct.bContext*, i8*) #2

declare dso_local %struct.Material* @give_current_material(%struct.Object*, i16 signext) #2

declare dso_local %struct.SpaceLink* @CTX_wm_space_data(%struct.bContext*) #2

declare dso_local %struct.ScrArea* @CTX_wm_area(%struct.bContext*) #2

declare dso_local i8* @RNA_path_struct_property_py(%struct.PointerRNA*, %struct.PropertyRNA*, i32) #2

declare dso_local %struct.uiBlock* @uiBeginBlock(%struct.bContext*, %struct.ARegion*, i8*, i16 signext) #2

declare dso_local void @uiBlockSetFlag(%struct.uiBlock*, i32) #2

declare dso_local %struct.uiBut* @uiDefSearchButO_ptr(%struct.uiBlock*, %struct.wmOperatorType*, %struct.IDProperty*, i8*, i32, i32, i32, i32, i32, i16 signext, i16 signext, float, float, i8*) #2

declare dso_local i32 @uiSearchBoxWidth() #2

declare dso_local %struct.uiBut* @uiDefBut(%struct.uiBlock*, i32, i32, i8*, i32, i32, i16 signext, i16 signext, i8*, float, float, float, float, i8*) #2

declare dso_local i32 @uiSearchBoxHeight() #2

declare dso_local void @uiPopupBoundsBlock(%struct.uiBlock*, i32, i32, i32) #2

declare dso_local void @wm_event_init_from_window(%struct.wmWindow*, %struct.wmEvent*) #2

declare dso_local void @wm_event_add(%struct.wmWindow*, %struct.wmEvent*) #2

declare dso_local %struct.uiStyle* @UI_GetStyle() #2

declare dso_local void @uiBlockClearFlag(%struct.uiBlock*, i32) #2

declare dso_local %struct.uiLayout* @uiBlockLayout(%struct.uiBlock*, i32, i32, i32, i32, i32, i32, i32, %struct.uiStyle*) #2

declare dso_local void @uiLayoutOperatorButs(%struct.bContext*, %struct.uiLayout*, %struct.wmOperator*, i8 (%struct.PointerRNA*, %struct.PropertyRNA*)*, i8 zeroext, i16 signext) #2

declare dso_local void @WM_operator_free(%struct.wmOperator*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @wm_block_redo_cancel_cb(%struct.bContext* %C, i8* %arg_op) #0 !dbg !9896 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %arg_op.addr = alloca i8*, align 8
  %op = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9899, metadata !DIExpression()), !dbg !9900
  store i8* %arg_op, i8** %arg_op.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg_op.addr, metadata !9901, metadata !DIExpression()), !dbg !9902
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op, metadata !9903, metadata !DIExpression()), !dbg !9904
  %0 = load i8*, i8** %arg_op.addr, align 8, !dbg !9905
  %1 = bitcast i8* %0 to %struct.wmOperator*, !dbg !9905
  store %struct.wmOperator* %1, %struct.wmOperator** %op, align 8, !dbg !9904
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !9906
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9908
  %call = call %struct.wmOperator* @WM_operator_last_redo(%struct.bContext* %3), !dbg !9909
  %cmp = icmp ne %struct.wmOperator* %2, %call, !dbg !9910
  br i1 %cmp, label %if.then, label %if.end, !dbg !9911

if.then:                                          ; preds = %entry
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !9912
  call void @WM_operator_free(%struct.wmOperator* %4), !dbg !9913
  br label %if.end, !dbg !9913

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !9914
}

; Function Attrs: noinline nounwind uwtable
define internal void @wm_block_redo_cb(%struct.bContext* %C, i8* %arg_op, i32 %UNUSED_arg_event) #0 !dbg !9915 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %arg_op.addr = alloca i8*, align 8
  %UNUSED_arg_event.addr = alloca i32, align 4
  %op = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9918, metadata !DIExpression()), !dbg !9919
  store i8* %arg_op, i8** %arg_op.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg_op.addr, metadata !9920, metadata !DIExpression()), !dbg !9921
  store i32 %UNUSED_arg_event, i32* %UNUSED_arg_event.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_arg_event.addr, metadata !9922, metadata !DIExpression()), !dbg !9923
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op, metadata !9924, metadata !DIExpression()), !dbg !9925
  %0 = load i8*, i8** %arg_op.addr, align 8, !dbg !9926
  %1 = bitcast i8* %0 to %struct.wmOperator*, !dbg !9926
  store %struct.wmOperator* %1, %struct.wmOperator** %op, align 8, !dbg !9925
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !9927
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9929
  %call = call %struct.wmOperator* @WM_operator_last_redo(%struct.bContext* %3), !dbg !9930
  %cmp = icmp eq %struct.wmOperator* %2, %call, !dbg !9931
  br i1 %cmp, label %if.then, label %if.else, !dbg !9932

if.then:                                          ; preds = %entry
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9933
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !9935
  %call1 = call i32 @ED_undo_operator_repeat(%struct.bContext* %4, %struct.wmOperator* %5), !dbg !9936
  br label %if.end, !dbg !9937

if.else:                                          ; preds = %entry
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9938
  %7 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !9940
  call void @ED_undo_push_op(%struct.bContext* %6, %struct.wmOperator* %7), !dbg !9941
  %8 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9942
  %9 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !9943
  call void @wm_operator_register(%struct.bContext* %8, %struct.wmOperator* %9), !dbg !9944
  %10 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9945
  %11 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !9946
  %call2 = call i32 @WM_operator_repeat(%struct.bContext* %10, %struct.wmOperator* %11), !dbg !9947
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !9948
}

declare dso_local i32 @ED_undo_operator_repeat(%struct.bContext*, %struct.wmOperator*) #2

declare dso_local void @ED_undo_push_op(%struct.bContext*, %struct.wmOperator*) #2

declare dso_local void @wm_operator_register(%struct.bContext*, %struct.wmOperator*) #2

declare dso_local i32 @WM_operator_repeat(%struct.bContext*, %struct.wmOperator*) #2

declare dso_local void @uiBlockSetFunc(%struct.uiBlock*, void (%struct.bContext*, i8*, i8*)*, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @dialog_check_cb(%struct.bContext* %C, i8* %op_ptr, i8* %UNUSED_arg) #0 !dbg !9949 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op_ptr.addr = alloca i8*, align 8
  %UNUSED_arg.addr = alloca i8*, align 8
  %op = alloca %struct.wmOperator*, align 8
  %ar_menu = alloca %struct.ARegion*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9952, metadata !DIExpression()), !dbg !9953
  store i8* %op_ptr, i8** %op_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %op_ptr.addr, metadata !9954, metadata !DIExpression()), !dbg !9955
  store i8* %UNUSED_arg, i8** %UNUSED_arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_arg.addr, metadata !9956, metadata !DIExpression()), !dbg !9957
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op, metadata !9958, metadata !DIExpression()), !dbg !9959
  %0 = load i8*, i8** %op_ptr.addr, align 8, !dbg !9960
  %1 = bitcast i8* %0 to %struct.wmOperator*, !dbg !9960
  store %struct.wmOperator* %1, %struct.wmOperator** %op, align 8, !dbg !9959
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !9961
  %type = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 4, !dbg !9963
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type, align 8, !dbg !9963
  %check = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 5, !dbg !9964
  %4 = load i8 (%struct.bContext*, %struct.wmOperator*)*, i8 (%struct.bContext*, %struct.wmOperator*)** %check, align 8, !dbg !9964
  %tobool = icmp ne i8 (%struct.bContext*, %struct.wmOperator*)* %4, null, !dbg !9961
  br i1 %tobool, label %if.then, label %if.end9, !dbg !9965

if.then:                                          ; preds = %entry
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !9966
  %type1 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %5, i32 0, i32 4, !dbg !9969
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type1, align 8, !dbg !9969
  %check2 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 5, !dbg !9970
  %7 = load i8 (%struct.bContext*, %struct.wmOperator*)*, i8 (%struct.bContext*, %struct.wmOperator*)** %check2, align 8, !dbg !9970
  %8 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9971
  %9 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !9972
  %call = call zeroext i8 %7(%struct.bContext* %8, %struct.wmOperator* %9), !dbg !9966
  %tobool3 = icmp ne i8 %call, 0, !dbg !9966
  br i1 %tobool3, label %if.then4, label %if.end8, !dbg !9973

if.then4:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar_menu, metadata !9974, metadata !DIExpression()), !dbg !9976
  %10 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9977
  %call5 = call %struct.ARegion* @CTX_wm_menu(%struct.bContext* %10), !dbg !9978
  store %struct.ARegion* %call5, %struct.ARegion** %ar_menu, align 8, !dbg !9976
  %11 = load %struct.ARegion*, %struct.ARegion** %ar_menu, align 8, !dbg !9979
  %tobool6 = icmp ne %struct.ARegion* %11, null, !dbg !9979
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !9981

if.then7:                                         ; preds = %if.then4
  %12 = load %struct.ARegion*, %struct.ARegion** %ar_menu, align 8, !dbg !9982
  call void @ED_region_tag_refresh_ui(%struct.ARegion* %12), !dbg !9984
  br label %if.end, !dbg !9985

if.end:                                           ; preds = %if.then7, %if.then4
  br label %if.end8, !dbg !9986

if.end8:                                          ; preds = %if.end, %if.then
  br label %if.end9, !dbg !9987

if.end9:                                          ; preds = %if.end8, %entry
  ret void, !dbg !9988
}

declare dso_local %struct.uiLayout* @uiLayoutColumn(%struct.uiLayout*, i32) #2

declare dso_local %struct.uiBlock* @uiLayoutGetBlock(%struct.uiLayout*) #2

declare dso_local void @uiButSetFunc(%struct.uiBut*, void (%struct.bContext*, i8*, i8*)*, i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @dialog_exec_cb(%struct.bContext* %C, i8* %arg1, i8* %arg2) #0 !dbg !9989 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %arg1.addr = alloca i8*, align 8
  %arg2.addr = alloca i8*, align 8
  %data = alloca %struct.wmOpPopUp*, align 8
  %block = alloca %struct.uiBlock*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9990, metadata !DIExpression()), !dbg !9991
  store i8* %arg1, i8** %arg1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg1.addr, metadata !9992, metadata !DIExpression()), !dbg !9993
  store i8* %arg2, i8** %arg2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg2.addr, metadata !9994, metadata !DIExpression()), !dbg !9995
  call void @llvm.dbg.declare(metadata %struct.wmOpPopUp** %data, metadata !9996, metadata !DIExpression()), !dbg !9997
  %0 = load i8*, i8** %arg1.addr, align 8, !dbg !9998
  %1 = bitcast i8* %0 to %struct.wmOpPopUp*, !dbg !9998
  store %struct.wmOpPopUp* %1, %struct.wmOpPopUp** %data, align 8, !dbg !9997
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block, metadata !9999, metadata !DIExpression()), !dbg !10000
  %2 = load i8*, i8** %arg2.addr, align 8, !dbg !10001
  %3 = bitcast i8* %2 to %struct.uiBlock*, !dbg !10001
  store %struct.uiBlock* %3, %struct.uiBlock** %block, align 8, !dbg !10000
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10002
  %5 = load %struct.wmOpPopUp*, %struct.wmOpPopUp** %data, align 8, !dbg !10003
  %op = getelementptr inbounds %struct.wmOpPopUp, %struct.wmOpPopUp* %5, i32 0, i32 0, !dbg !10004
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !10004
  %call = call i32 @WM_operator_call_ex(%struct.bContext* %4, %struct.wmOperator* %6, i8 zeroext 1), !dbg !10005
  %7 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !10006
  %8 = load %struct.wmOpPopUp*, %struct.wmOpPopUp** %data, align 8, !dbg !10007
  %9 = bitcast %struct.wmOpPopUp* %8 to i8*, !dbg !10007
  call void %7(i8* %9), !dbg !10006
  %10 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10008
  %11 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !10009
  call void @uiPupBlockClose(%struct.bContext* %10, %struct.uiBlock* %11), !dbg !10010
  ret void, !dbg !10011
}

declare dso_local %struct.ARegion* @CTX_wm_menu(%struct.bContext*) #2

declare dso_local void @ED_region_tag_refresh_ui(%struct.ARegion*) #2

declare dso_local i32 @WM_operator_call_ex(%struct.bContext*, %struct.wmOperator*, i8 zeroext) #2

declare dso_local void @uiPupBlockClose(%struct.bContext*, %struct.uiBlock*) #2

declare dso_local void @uiBlockSetHandleFunc(%struct.uiBlock*, void (%struct.bContext*, i8*, i32)*, i8*) #2

declare dso_local void @uiLayoutSetEnabled(%struct.uiLayout*, i8 zeroext) #2

declare dso_local void @WM_event_add_notifier(%struct.bContext*, i32, i8*) #2

declare dso_local void @WM_file_autoexec_init(i8*) #2

declare dso_local zeroext i8 @WM_file_read(%struct.bContext*, i8*, %struct.ReportList*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @min_ii(i32 %a, i32 %b) #0 !dbg !10012 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !10016, metadata !DIExpression()), !dbg !10017
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !10018, metadata !DIExpression()), !dbg !10019
  %0 = load i32, i32* %a.addr, align 4, !dbg !10020
  %1 = load i32, i32* %b.addr, align 4, !dbg !10021
  %cmp = icmp slt i32 %0, %1, !dbg !10022
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10023

cond.true:                                        ; preds = %entry
  %2 = load i32, i32* %a.addr, align 4, !dbg !10024
  br label %cond.end, !dbg !10023

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %b.addr, align 4, !dbg !10025
  br label %cond.end, !dbg !10023

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %3, %cond.false ], !dbg !10023
  ret i32 %cond, !dbg !10026
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @max_ii(i32 %a, i32 %b) #0 !dbg !10027 {
entry:
  %a.addr = alloca i32, align 4
  %b.addr = alloca i32, align 4
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !10028, metadata !DIExpression()), !dbg !10029
  store i32 %b, i32* %b.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %b.addr, metadata !10030, metadata !DIExpression()), !dbg !10031
  %0 = load i32, i32* %b.addr, align 4, !dbg !10032
  %1 = load i32, i32* %a.addr, align 4, !dbg !10033
  %cmp = icmp slt i32 %0, %1, !dbg !10034
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !10035

cond.true:                                        ; preds = %entry
  %2 = load i32, i32* %a.addr, align 4, !dbg !10036
  br label %cond.end, !dbg !10035

cond.false:                                       ; preds = %entry
  %3 = load i32, i32* %b.addr, align 4, !dbg !10037
  br label %cond.end, !dbg !10035

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ %3, %cond.false ], !dbg !10035
  ret i32 %cond, !dbg !10038
}

declare dso_local void @ED_area_tag_redraw(%struct.ScrArea*) #2

declare dso_local void @WM_cursor_modal_restore(%struct.wmWindow*) #2

declare dso_local i32 @wm_gesture_evaluate(%struct.wmGesture*) #2

declare dso_local void @RNA_collection_clear(%struct.PointerRNA*, i8*) #2

declare dso_local void @RNA_collection_add(%struct.PointerRNA*, i8*, %struct.PointerRNA*) #2

declare dso_local void @RNA_float_set_array(%struct.PointerRNA*, i8*, float*) #2

declare dso_local i32 @wm_window_duplicate_exec(%struct.bContext*, %struct.wmOperator*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @wm_operator_winactive_normal(%struct.bContext* %C) #0 !dbg !10039 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %win = alloca %struct.wmWindow*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10040, metadata !DIExpression()), !dbg !10041
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win, metadata !10042, metadata !DIExpression()), !dbg !10043
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10044
  %call = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %0), !dbg !10045
  store %struct.wmWindow* %call, %struct.wmWindow** %win, align 8, !dbg !10043
  %1 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !10046
  %cmp = icmp eq %struct.wmWindow* %1, null, !dbg !10048
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10049

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !10050
  %screen = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %2, i32 0, i32 3, !dbg !10051
  %3 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !10051
  %cmp1 = icmp eq %struct.bScreen* %3, null, !dbg !10052
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !10053

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %4 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !10054
  %screen3 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %4, i32 0, i32 3, !dbg !10055
  %5 = load %struct.bScreen*, %struct.bScreen** %screen3, align 8, !dbg !10055
  %state = getelementptr inbounds %struct.bScreen, %struct.bScreen* %5, i32 0, i32 9, !dbg !10056
  %6 = load i16, i16* %state, align 8, !dbg !10056
  %conv = sext i16 %6 to i32, !dbg !10054
  %cmp4 = icmp ne i32 %conv, 0, !dbg !10057
  br i1 %cmp4, label %if.then, label %if.end, !dbg !10058

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 0, i32* %retval, align 4, !dbg !10059
  br label %return, !dbg !10059

if.end:                                           ; preds = %lor.lhs.false2
  store i32 1, i32* %retval, align 4, !dbg !10060
  br label %return, !dbg !10060

return:                                           ; preds = %if.end, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !10061
  ret i32 %7, !dbg !10061
}

declare dso_local i32 @wm_history_read_exec(%struct.bContext*, %struct.wmOperator*) #2

declare dso_local i32 @wm_homefile_read_exec(%struct.bContext*, %struct.wmOperator*) #2

declare dso_local i32 @wm_homefile_write_exec(%struct.bContext*, %struct.wmOperator*) #2

declare dso_local i32 @wm_userpref_write_exec(%struct.bContext*, %struct.wmOperator*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @wm_userpref_autoexec_add_exec(%struct.bContext* %UNUSED_C, %struct.wmOperator* %UNUSED_op) #0 !dbg !10062 {
entry:
  %UNUSED_C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %path_cmp = alloca %struct.bPathCompare*, align 8
  store %struct.bContext* %UNUSED_C, %struct.bContext** %UNUSED_C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %UNUSED_C.addr, metadata !10063, metadata !DIExpression()), !dbg !10064
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !10065, metadata !DIExpression()), !dbg !10066
  call void @llvm.dbg.declare(metadata %struct.bPathCompare** %path_cmp, metadata !10067, metadata !DIExpression()), !dbg !10078
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !10079
  %call = call i8* %0(i64 792, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.206, i64 0, i64 0)), !dbg !10079
  %1 = bitcast i8* %call to %struct.bPathCompare*, !dbg !10079
  store %struct.bPathCompare* %1, %struct.bPathCompare** %path_cmp, align 8, !dbg !10078
  %2 = load %struct.bPathCompare*, %struct.bPathCompare** %path_cmp, align 8, !dbg !10080
  %3 = bitcast %struct.bPathCompare* %2 to i8*, !dbg !10080
  call void @BLI_addtail(%struct.ListBase* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 44), i8* %3), !dbg !10081
  ret i32 4, !dbg !10082
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @wm_userpref_autoexec_remove_exec(%struct.bContext* %UNUSED_C, %struct.wmOperator* %op) #0 !dbg !10083 {
entry:
  %UNUSED_C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %index = alloca i32, align 4
  %path_cmp = alloca %struct.bPathCompare*, align 8
  store %struct.bContext* %UNUSED_C, %struct.bContext** %UNUSED_C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %UNUSED_C.addr, metadata !10084, metadata !DIExpression()), !dbg !10085
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !10086, metadata !DIExpression()), !dbg !10087
  call void @llvm.dbg.declare(metadata i32* %index, metadata !10088, metadata !DIExpression()), !dbg !10089
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10090
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 7, !dbg !10091
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !10091
  %call = call i32 @RNA_int_get(%struct.PointerRNA* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.210, i64 0, i64 0)), !dbg !10092
  store i32 %call, i32* %index, align 4, !dbg !10089
  call void @llvm.dbg.declare(metadata %struct.bPathCompare** %path_cmp, metadata !10093, metadata !DIExpression()), !dbg !10094
  %2 = load i32, i32* %index, align 4, !dbg !10095
  %call1 = call i8* @BLI_findlink(%struct.ListBase* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 44), i32 %2), !dbg !10096
  %3 = bitcast i8* %call1 to %struct.bPathCompare*, !dbg !10096
  store %struct.bPathCompare* %3, %struct.bPathCompare** %path_cmp, align 8, !dbg !10094
  %4 = load %struct.bPathCompare*, %struct.bPathCompare** %path_cmp, align 8, !dbg !10097
  %tobool = icmp ne %struct.bPathCompare* %4, null, !dbg !10097
  br i1 %tobool, label %if.then, label %if.end, !dbg !10099

if.then:                                          ; preds = %entry
  %5 = load %struct.bPathCompare*, %struct.bPathCompare** %path_cmp, align 8, !dbg !10100
  %6 = bitcast %struct.bPathCompare* %5 to i8*, !dbg !10100
  call void @BLI_freelinkN(%struct.ListBase* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 44), i8* %6), !dbg !10102
  br label %if.end, !dbg !10103

if.end:                                           ; preds = %if.then, %entry
  ret i32 4, !dbg !10104
}

declare dso_local i8* @BLI_findlink(%struct.ListBase*, i32) #2

declare dso_local void @BLI_freelinkN(%struct.ListBase*, i8*) #2

declare dso_local i32 @wm_window_fullscreen_toggle_exec(%struct.bContext*, %struct.wmOperator*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @wm_exit_blender_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !10105 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10106, metadata !DIExpression()), !dbg !10107
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !10108, metadata !DIExpression()), !dbg !10109
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10110
  call void @WM_operator_free(%struct.wmOperator* %0), !dbg !10111
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10112
  call void @WM_exit(%struct.bContext* %1), !dbg !10113
  ret i32 4, !dbg !10114
}

declare dso_local void @WM_exit(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @wm_open_mainfile_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %UNUSED_event) #0 !dbg !10115 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %UNUSED_event.addr = alloca %struct.wmEvent*, align 8
  %openname = alloca i8*, align 8
  %recent = alloca %struct.RecentFile*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10116, metadata !DIExpression()), !dbg !10117
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !10118, metadata !DIExpression()), !dbg !10119
  store %struct.wmEvent* %UNUSED_event, %struct.wmEvent** %UNUSED_event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %UNUSED_event.addr, metadata !10120, metadata !DIExpression()), !dbg !10121
  call void @llvm.dbg.declare(metadata i8** %openname, metadata !10122, metadata !DIExpression()), !dbg !10123
  %0 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !10124
  %name = getelementptr inbounds %struct.Main, %struct.Main* %0, i32 0, i32 2, !dbg !10125
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !10126
  store i8* %arraydecay, i8** %openname, align 8, !dbg !10123
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10127
  %call = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %1), !dbg !10129
  %cmp = icmp eq %struct.wmWindow* %call, null, !dbg !10130
  br i1 %cmp, label %if.then, label %if.end, !dbg !10131

if.then:                                          ; preds = %entry
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10132
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 8, !dbg !10134
  %3 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !10134
  call void @BKE_report(%struct.ReportList* %3, i32 32, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.221, i64 0, i64 0)), !dbg !10135
  store i32 2, i32* %retval, align 4, !dbg !10136
  br label %return, !dbg !10136

if.end:                                           ; preds = %entry
  %4 = load i8*, i8** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 6, i32 0), align 8, !dbg !10137
  %tobool = icmp ne i8* %4, null, !dbg !10139
  br i1 %tobool, label %if.then1, label %if.end2, !dbg !10140

if.then1:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.RecentFile** %recent, metadata !10141, metadata !DIExpression()), !dbg !10149
  %5 = load i8*, i8** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 6, i32 0), align 8, !dbg !10150
  %6 = bitcast i8* %5 to %struct.RecentFile*, !dbg !10151
  store %struct.RecentFile* %6, %struct.RecentFile** %recent, align 8, !dbg !10149
  %7 = load %struct.RecentFile*, %struct.RecentFile** %recent, align 8, !dbg !10152
  %filepath = getelementptr inbounds %struct.RecentFile, %struct.RecentFile* %7, i32 0, i32 2, !dbg !10153
  %8 = load i8*, i8** %filepath, align 8, !dbg !10153
  store i8* %8, i8** %openname, align 8, !dbg !10154
  br label %if.end2, !dbg !10155

if.end2:                                          ; preds = %if.then1, %if.end
  %9 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10156
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %9, i32 0, i32 7, !dbg !10157
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !10157
  %11 = load i8*, i8** %openname, align 8, !dbg !10158
  call void @RNA_string_set(%struct.PointerRNA* %10, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.20, i64 0, i64 0), i8* %11), !dbg !10159
  %12 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10160
  call void @wm_open_init_load_ui(%struct.wmOperator* %12, i8 zeroext 1), !dbg !10161
  %13 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10162
  call void @wm_open_init_use_scripts(%struct.wmOperator* %13, i8 zeroext 1), !dbg !10163
  %14 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10164
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %14, i32 0, i32 5, !dbg !10165
  store i8* null, i8** %customdata, align 8, !dbg !10166
  %15 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10167
  %16 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10168
  call void @WM_event_add_fileselect(%struct.bContext* %15, %struct.wmOperator* %16), !dbg !10169
  store i32 1, i32* %retval, align 4, !dbg !10170
  br label %return, !dbg !10170

return:                                           ; preds = %if.end2, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !10171
  ret i32 %17, !dbg !10171
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @wm_open_mainfile_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !10172 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %filepath = alloca [1024 x i8], align 16
  %success = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10173, metadata !DIExpression()), !dbg !10174
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !10175, metadata !DIExpression()), !dbg !10176
  call void @llvm.dbg.declare(metadata [1024 x i8]* %filepath, metadata !10177, metadata !DIExpression()), !dbg !10178
  call void @llvm.dbg.declare(metadata i8* %success, metadata !10179, metadata !DIExpression()), !dbg !10180
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10181
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 7, !dbg !10182
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !10182
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %filepath, i64 0, i64 0, !dbg !10183
  call void @RNA_string_get(%struct.PointerRNA* %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.20, i64 0, i64 0), i8* %arraydecay), !dbg !10184
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10185
  call void @wm_open_init_load_ui(%struct.wmOperator* %2, i8 zeroext 0), !dbg !10186
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10187
  call void @wm_open_init_use_scripts(%struct.wmOperator* %3, i8 zeroext 0), !dbg !10188
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10189
  %ptr1 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 7, !dbg !10191
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr1, align 8, !dbg !10191
  %call = call i32 @RNA_boolean_get(%struct.PointerRNA* %5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.192, i64 0, i64 0)), !dbg !10192
  %tobool = icmp ne i32 %call, 0, !dbg !10192
  br i1 %tobool, label %if.then, label %if.else, !dbg !10193

if.then:                                          ; preds = %entry
  %6 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 18), align 4, !dbg !10194
  %and = and i32 %6, -1025, !dbg !10194
  store i32 %and, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 18), align 4, !dbg !10194
  br label %if.end, !dbg !10195

if.else:                                          ; preds = %entry
  %7 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 18), align 4, !dbg !10196
  %or = or i32 %7, 1024, !dbg !10196
  store i32 %or, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 18), align 4, !dbg !10196
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10197
  %ptr2 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %8, i32 0, i32 7, !dbg !10199
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr2, align 8, !dbg !10199
  %call3 = call i32 @RNA_boolean_get(%struct.PointerRNA* %9, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.218, i64 0, i64 0)), !dbg !10200
  %tobool4 = icmp ne i32 %call3, 0, !dbg !10200
  br i1 %tobool4, label %if.then5, label %if.else7, !dbg !10201

if.then5:                                         ; preds = %if.end
  %10 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 15), align 8, !dbg !10202
  %or6 = or i32 %10, 8192, !dbg !10202
  store i32 %or6, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 15), align 8, !dbg !10202
  br label %if.end9, !dbg !10203

if.else7:                                         ; preds = %if.end
  %11 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 15), align 8, !dbg !10204
  %and8 = and i32 %11, -8193, !dbg !10204
  store i32 %and8, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 15), align 8, !dbg !10204
  br label %if.end9

if.end9:                                          ; preds = %if.else7, %if.then5
  %12 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10205
  %arraydecay10 = getelementptr inbounds [1024 x i8], [1024 x i8]* %filepath, i64 0, i64 0, !dbg !10206
  %13 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10207
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %13, i32 0, i32 8, !dbg !10208
  %14 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !10208
  %15 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 15), align 8, !dbg !10209
  %and11 = and i32 %15, 8192, !dbg !10210
  %tobool12 = icmp ne i32 %and11, 0, !dbg !10211
  %lnot = xor i1 %tobool12, true, !dbg !10211
  %lnot.ext = zext i1 %lnot to i32, !dbg !10211
  %conv = trunc i32 %lnot.ext to i8, !dbg !10211
  %call13 = call zeroext i8 @wm_file_read_opwrap(%struct.bContext* %12, i8* %arraydecay10, %struct.ReportList* %14, i8 zeroext %conv), !dbg !10212
  store i8 %call13, i8* %success, align 1, !dbg !10213
  %16 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10214
  %reports14 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %16, i32 0, i32 8, !dbg !10215
  %17 = load %struct.ReportList*, %struct.ReportList** %reports14, align 8, !dbg !10215
  call void @BKE_report_print_level_set(%struct.ReportList* %17, i32 16), !dbg !10216
  %18 = load i8, i8* %success, align 1, !dbg !10217
  %tobool15 = icmp ne i8 %18, 0, !dbg !10217
  br i1 %tobool15, label %if.then16, label %if.else17, !dbg !10219

if.then16:                                        ; preds = %if.end9
  store i32 4, i32* %retval, align 4, !dbg !10220
  br label %return, !dbg !10220

if.else17:                                        ; preds = %if.end9
  store i32 2, i32* %retval, align 4, !dbg !10222
  br label %return, !dbg !10222

return:                                           ; preds = %if.else17, %if.then16
  %19 = load i32, i32* %retval, align 4, !dbg !10224
  ret i32 %19, !dbg !10224
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @wm_open_mainfile_check(%struct.bContext* %UNUSED_C, %struct.wmOperator* %op) #0 !dbg !10225 {
entry:
  %UNUSED_C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %file_info = alloca %struct.FileRuntime*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  %is_untrusted = alloca i8, align 1
  %path = alloca [1024 x i8], align 16
  %lslash = alloca i8*, align 8
  store %struct.bContext* %UNUSED_C, %struct.bContext** %UNUSED_C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %UNUSED_C.addr, metadata !10228, metadata !DIExpression()), !dbg !10229
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !10230, metadata !DIExpression()), !dbg !10231
  call void @llvm.dbg.declare(metadata %struct.FileRuntime** %file_info, metadata !10232, metadata !DIExpression()), !dbg !10233
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10234
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 5, !dbg !10235
  %1 = bitcast i8** %customdata to %struct.FileRuntime*, !dbg !10236
  store %struct.FileRuntime* %1, %struct.FileRuntime** %file_info, align 8, !dbg !10233
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !10237, metadata !DIExpression()), !dbg !10238
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10239
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !10240
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !10240
  %call = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %3, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.218, i64 0, i64 0)), !dbg !10241
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !10238
  call void @llvm.dbg.declare(metadata i8* %is_untrusted, metadata !10242, metadata !DIExpression()), !dbg !10243
  store i8 0, i8* %is_untrusted, align 1, !dbg !10243
  call void @llvm.dbg.declare(metadata [1024 x i8]* %path, metadata !10244, metadata !DIExpression()), !dbg !10245
  call void @llvm.dbg.declare(metadata i8** %lslash, metadata !10246, metadata !DIExpression()), !dbg !10247
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10248
  %ptr1 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 7, !dbg !10249
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr1, align 8, !dbg !10249
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %path, i64 0, i64 0, !dbg !10250
  call void @RNA_string_get(%struct.PointerRNA* %5, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.20, i64 0, i64 0), i8* %arraydecay), !dbg !10251
  %arraydecay2 = getelementptr inbounds [1024 x i8], [1024 x i8]* %path, i64 0, i64 0, !dbg !10252
  %call3 = call i8* @BLI_last_slash(i8* %arraydecay2), !dbg !10253
  store i8* %call3, i8** %lslash, align 8, !dbg !10254
  %6 = load i8*, i8** %lslash, align 8, !dbg !10255
  %tobool = icmp ne i8* %6, null, !dbg !10255
  br i1 %tobool, label %if.then, label %if.end, !dbg !10257

if.then:                                          ; preds = %entry
  %7 = load i8*, i8** %lslash, align 8, !dbg !10258
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 1, !dbg !10259
  store i8 0, i8* %add.ptr, align 1, !dbg !10260
  br label %if.end, !dbg !10261

if.end:                                           ; preds = %if.then, %entry
  %8 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 2), align 8, !dbg !10262
  %and = and i32 %8, 4194304, !dbg !10264
  %cmp = icmp eq i32 %and, 0, !dbg !10265
  br i1 %cmp, label %if.then4, label %if.end12, !dbg !10266

if.then4:                                         ; preds = %if.end
  %arraydecay5 = getelementptr inbounds [1024 x i8], [1024 x i8]* %path, i64 0, i64 0, !dbg !10267
  %call6 = call zeroext i8 @BKE_autoexec_match(i8* %arraydecay5), !dbg !10270
  %conv = zext i8 %call6 to i32, !dbg !10270
  %cmp7 = icmp eq i32 %conv, 1, !dbg !10271
  br i1 %cmp7, label %if.then9, label %if.end11, !dbg !10272

if.then9:                                         ; preds = %if.then4
  %9 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10273
  %ptr10 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %9, i32 0, i32 7, !dbg !10275
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr10, align 8, !dbg !10275
  %11 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !10276
  call void @RNA_property_boolean_set(%struct.PointerRNA* %10, %struct.PropertyRNA* %11, i32 0), !dbg !10277
  store i8 1, i8* %is_untrusted, align 1, !dbg !10278
  br label %if.end11, !dbg !10279

if.end11:                                         ; preds = %if.then9, %if.then4
  br label %if.end12, !dbg !10280

if.end12:                                         ; preds = %if.end11, %if.end
  %12 = load %struct.FileRuntime*, %struct.FileRuntime** %file_info, align 8, !dbg !10281
  %tobool13 = icmp ne %struct.FileRuntime* %12, null, !dbg !10281
  br i1 %tobool13, label %if.then14, label %if.end16, !dbg !10283

if.then14:                                        ; preds = %if.end12
  %13 = load i8, i8* %is_untrusted, align 1, !dbg !10284
  %14 = load %struct.FileRuntime*, %struct.FileRuntime** %file_info, align 8, !dbg !10286
  %is_untrusted15 = getelementptr inbounds %struct.FileRuntime, %struct.FileRuntime* %14, i32 0, i32 0, !dbg !10287
  store i8 %13, i8* %is_untrusted15, align 1, !dbg !10288
  br label %if.end16, !dbg !10289

if.end16:                                         ; preds = %if.then14, %if.end12
  %15 = load i8, i8* %is_untrusted, align 1, !dbg !10290
  ret i8 %15, !dbg !10291
}

; Function Attrs: noinline nounwind uwtable
define internal void @wm_open_mainfile_ui(%struct.bContext* %UNUSED_C, %struct.wmOperator* %op) #0 !dbg !10292 {
entry:
  %UNUSED_C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %file_info = alloca %struct.FileRuntime*, align 8
  %layout = alloca %struct.uiLayout*, align 8
  %col = alloca %struct.uiLayout*, align 8
  %autoexec_text = alloca i8*, align 8
  store %struct.bContext* %UNUSED_C, %struct.bContext** %UNUSED_C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %UNUSED_C.addr, metadata !10293, metadata !DIExpression()), !dbg !10294
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !10295, metadata !DIExpression()), !dbg !10296
  call void @llvm.dbg.declare(metadata %struct.FileRuntime** %file_info, metadata !10297, metadata !DIExpression()), !dbg !10298
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10299
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 5, !dbg !10300
  %1 = bitcast i8** %customdata to %struct.FileRuntime*, !dbg !10301
  store %struct.FileRuntime* %1, %struct.FileRuntime** %file_info, align 8, !dbg !10298
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout, metadata !10302, metadata !DIExpression()), !dbg !10303
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10304
  %layout1 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 11, !dbg !10305
  %3 = load %struct.uiLayout*, %struct.uiLayout** %layout1, align 8, !dbg !10305
  store %struct.uiLayout* %3, %struct.uiLayout** %layout, align 8, !dbg !10303
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %col, metadata !10306, metadata !DIExpression()), !dbg !10307
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10308
  %layout2 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 11, !dbg !10309
  %5 = load %struct.uiLayout*, %struct.uiLayout** %layout2, align 8, !dbg !10309
  store %struct.uiLayout* %5, %struct.uiLayout** %col, align 8, !dbg !10307
  call void @llvm.dbg.declare(metadata i8** %autoexec_text, metadata !10310, metadata !DIExpression()), !dbg !10311
  store i8* null, i8** %autoexec_text, align 8, !dbg !10311
  %6 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !10312
  %7 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10313
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %7, i32 0, i32 7, !dbg !10314
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !10314
  call void @uiItemR(%struct.uiLayout* %6, %struct.PointerRNA* %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.192, i64 0, i64 0), i32 0, i8* null, i32 0), !dbg !10315
  %9 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !10316
  %call = call %struct.uiLayout* @uiLayoutColumn(%struct.uiLayout* %9, i32 0), !dbg !10317
  store %struct.uiLayout* %call, %struct.uiLayout** %col, align 8, !dbg !10318
  %10 = load %struct.FileRuntime*, %struct.FileRuntime** %file_info, align 8, !dbg !10319
  %is_untrusted = getelementptr inbounds %struct.FileRuntime, %struct.FileRuntime* %10, i32 0, i32 0, !dbg !10321
  %11 = load i8, i8* %is_untrusted, align 1, !dbg !10321
  %tobool = icmp ne i8 %11, 0, !dbg !10319
  br i1 %tobool, label %if.then, label %if.else, !dbg !10322

if.then:                                          ; preds = %entry
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.222, i64 0, i64 0), i8** %autoexec_text, align 8, !dbg !10323
  %12 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !10325
  call void @uiLayoutSetActive(%struct.uiLayout* %12, i8 zeroext 0), !dbg !10326
  %13 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !10327
  call void @uiLayoutSetEnabled(%struct.uiLayout* %13, i8 zeroext 0), !dbg !10328
  br label %if.end, !dbg !10329

if.else:                                          ; preds = %entry
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.219, i64 0, i64 0), i8** %autoexec_text, align 8, !dbg !10330
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %14 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !10332
  %15 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10333
  %ptr3 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %15, i32 0, i32 7, !dbg !10334
  %16 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr3, align 8, !dbg !10334
  %17 = load i8*, i8** %autoexec_text, align 8, !dbg !10335
  call void @uiItemR(%struct.uiLayout* %14, %struct.PointerRNA* %16, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.218, i64 0, i64 0), i32 0, i8* %17, i32 0), !dbg !10336
  ret void, !dbg !10337
}

declare dso_local void @BKE_report(%struct.ReportList*, i32, i8*) #2

declare dso_local void @wm_open_init_load_ui(%struct.wmOperator*, i8 zeroext) #2

declare dso_local void @wm_open_init_use_scripts(%struct.wmOperator*, i8 zeroext) #2

declare dso_local void @RNA_string_get(%struct.PointerRNA*, i8*, i8*) #2

declare dso_local i32 @RNA_boolean_get(%struct.PointerRNA*, i8*) #2

declare dso_local void @BKE_report_print_level_set(%struct.ReportList*, i32) #2

declare dso_local i8* @BLI_last_slash(i8*) #2

declare dso_local zeroext i8 @BKE_autoexec_match(i8*) #2

declare dso_local void @RNA_property_boolean_set(%struct.PointerRNA*, %struct.PropertyRNA*, i32) #2

declare dso_local void @uiItemR(%struct.uiLayout*, %struct.PointerRNA*, i8*, i32, i8*, i32) #2

declare dso_local void @uiLayoutSetActive(%struct.uiLayout*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @wm_revert_mainfile_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !10338 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %success = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10339, metadata !DIExpression()), !dbg !10340
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !10341, metadata !DIExpression()), !dbg !10342
  call void @llvm.dbg.declare(metadata i8* %success, metadata !10343, metadata !DIExpression()), !dbg !10344
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10345
  call void @wm_open_init_use_scripts(%struct.wmOperator* %0, i8 zeroext 0), !dbg !10346
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10347
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 7, !dbg !10349
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !10349
  %call = call i32 @RNA_boolean_get(%struct.PointerRNA* %2, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.218, i64 0, i64 0)), !dbg !10350
  %tobool = icmp ne i32 %call, 0, !dbg !10350
  br i1 %tobool, label %if.then, label %if.else, !dbg !10351

if.then:                                          ; preds = %entry
  %3 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 15), align 8, !dbg !10352
  %or = or i32 %3, 8192, !dbg !10352
  store i32 %or, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 15), align 8, !dbg !10352
  br label %if.end, !dbg !10353

if.else:                                          ; preds = %entry
  %4 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 15), align 8, !dbg !10354
  %and = and i32 %4, -8193, !dbg !10354
  store i32 %and, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 15), align 8, !dbg !10354
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10355
  %6 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !10356
  %name = getelementptr inbounds %struct.Main, %struct.Main* %6, i32 0, i32 2, !dbg !10357
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !10358
  %7 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10359
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %7, i32 0, i32 8, !dbg !10360
  %8 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !10360
  %9 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 15), align 8, !dbg !10361
  %and1 = and i32 %9, 8192, !dbg !10362
  %tobool2 = icmp ne i32 %and1, 0, !dbg !10363
  %lnot = xor i1 %tobool2, true, !dbg !10363
  %lnot.ext = zext i1 %lnot to i32, !dbg !10363
  %conv = trunc i32 %lnot.ext to i8, !dbg !10363
  %call3 = call zeroext i8 @wm_file_read_opwrap(%struct.bContext* %5, i8* %arraydecay, %struct.ReportList* %8, i8 zeroext %conv), !dbg !10364
  store i8 %call3, i8* %success, align 1, !dbg !10365
  %10 = load i8, i8* %success, align 1, !dbg !10366
  %tobool4 = icmp ne i8 %10, 0, !dbg !10366
  br i1 %tobool4, label %if.then5, label %if.else6, !dbg !10368

if.then5:                                         ; preds = %if.end
  store i32 4, i32* %retval, align 4, !dbg !10369
  br label %return, !dbg !10369

if.else6:                                         ; preds = %if.end
  store i32 2, i32* %retval, align 4, !dbg !10371
  br label %return, !dbg !10371

return:                                           ; preds = %if.else6, %if.then5
  %11 = load i32, i32* %retval, align 4, !dbg !10373
  ret i32 %11, !dbg !10373
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @wm_revert_mainfile_poll(%struct.bContext* %UNUSED_C) #0 !dbg !10374 {
entry:
  %UNUSED_C.addr = alloca %struct.bContext*, align 8
  store %struct.bContext* %UNUSED_C, %struct.bContext** %UNUSED_C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %UNUSED_C.addr, metadata !10375, metadata !DIExpression()), !dbg !10376
  %0 = load i8, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 3), align 8, !dbg !10377
  %conv = zext i8 %0 to i32, !dbg !10378
  ret i32 %conv, !dbg !10379
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @wm_link_append_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %UNUSED_event) #0 !dbg !10380 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %UNUSED_event.addr = alloca %struct.wmEvent*, align 8
  %path = alloca [1024 x i8], align 16
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10381, metadata !DIExpression()), !dbg !10382
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !10383, metadata !DIExpression()), !dbg !10384
  store %struct.wmEvent* %UNUSED_event, %struct.wmEvent** %UNUSED_event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %UNUSED_event.addr, metadata !10385, metadata !DIExpression()), !dbg !10386
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10387
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 7, !dbg !10389
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !10389
  %call = call zeroext i8 @RNA_struct_property_is_set(%struct.PointerRNA* %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.20, i64 0, i64 0)), !dbg !10390
  %tobool = icmp ne i8 %call, 0, !dbg !10390
  br i1 %tobool, label %if.then, label %if.else, !dbg !10391

if.then:                                          ; preds = %entry
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10392
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10394
  %call1 = call i32 @WM_operator_call_notest(%struct.bContext* %2, %struct.wmOperator* %3), !dbg !10395
  store i32 %call1, i32* %retval, align 4, !dbg !10396
  br label %return, !dbg !10396

if.else:                                          ; preds = %entry
  %4 = load i8, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 2, i64 0), align 8, !dbg !10397
  %conv = zext i8 %4 to i32, !dbg !10397
  %cmp = icmp ne i32 %conv, 0, !dbg !10400
  br i1 %cmp, label %if.then3, label %if.else5, !dbg !10401

if.then3:                                         ; preds = %if.else
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10402
  %ptr4 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %5, i32 0, i32 7, !dbg !10404
  %6 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr4, align 8, !dbg !10404
  call void @RNA_string_set(%struct.PointerRNA* %6, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 2, i64 0)), !dbg !10405
  br label %if.end14, !dbg !10406

if.else5:                                         ; preds = %if.else
  %7 = load i8, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 3), align 8, !dbg !10407
  %tobool6 = icmp ne i8 %7, 0, !dbg !10409
  br i1 %tobool6, label %if.then7, label %if.end, !dbg !10410

if.then7:                                         ; preds = %if.else5
  call void @llvm.dbg.declare(metadata [1024 x i8]* %path, metadata !10411, metadata !DIExpression()), !dbg !10413
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %path, i64 0, i64 0, !dbg !10414
  %8 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !10415
  %name = getelementptr inbounds %struct.Main, %struct.Main* %8, i32 0, i32 2, !dbg !10416
  %arraydecay8 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !10417
  %call9 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %arraydecay8, i64 1024), !dbg !10418
  %arraydecay10 = getelementptr inbounds [1024 x i8], [1024 x i8]* %path, i64 0, i64 0, !dbg !10419
  %call11 = call zeroext i8 @BLI_parent_dir(i8* %arraydecay10), !dbg !10420
  %9 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10421
  %ptr12 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %9, i32 0, i32 7, !dbg !10422
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr12, align 8, !dbg !10422
  %arraydecay13 = getelementptr inbounds [1024 x i8], [1024 x i8]* %path, i64 0, i64 0, !dbg !10423
  call void @RNA_string_set(%struct.PointerRNA* %10, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.20, i64 0, i64 0), i8* %arraydecay13), !dbg !10424
  br label %if.end, !dbg !10425

if.end:                                           ; preds = %if.then7, %if.else5
  br label %if.end14

if.end14:                                         ; preds = %if.end, %if.then3
  %11 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10426
  %12 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10427
  call void @WM_event_add_fileselect(%struct.bContext* %11, %struct.wmOperator* %12), !dbg !10428
  store i32 1, i32* %retval, align 4, !dbg !10429
  br label %return, !dbg !10429

return:                                           ; preds = %if.end14, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !10430
  ret i32 %13, !dbg !10430
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @wm_link_append_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !10431 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %bmain = alloca %struct.Main*, align 8
  %scene = alloca %struct.Scene*, align 8
  %mainl = alloca %struct.Main*, align 8
  %bh = alloca %struct.BlendHandle*, align 8
  %lib = alloca %struct.Library*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  %name = alloca [1024 x i8], align 16
  %dir = alloca [1024 x i8], align 16
  %libname = alloca [1024 x i8], align 16
  %group = alloca [32 x i8], align 16
  %idcode = alloca i32, align 4
  %totfiles = alloca i32, align 4
  %flag = alloca i16, align 2
  %rna_macro_iter = alloca %struct.CollectionPropertyIterator, align 8
  %itemptr = alloca %struct.PointerRNA, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10432, metadata !DIExpression()), !dbg !10433
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !10434, metadata !DIExpression()), !dbg !10435
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain, metadata !10436, metadata !DIExpression()), !dbg !10501
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10502
  %call = call %struct.Main* @CTX_data_main(%struct.bContext* %0), !dbg !10503
  store %struct.Main* %call, %struct.Main** %bmain, align 8, !dbg !10501
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !10504, metadata !DIExpression()), !dbg !10505
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10506
  %call1 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %1), !dbg !10507
  store %struct.Scene* %call1, %struct.Scene** %scene, align 8, !dbg !10505
  call void @llvm.dbg.declare(metadata %struct.Main** %mainl, metadata !10508, metadata !DIExpression()), !dbg !10509
  store %struct.Main* null, %struct.Main** %mainl, align 8, !dbg !10509
  call void @llvm.dbg.declare(metadata %struct.BlendHandle** %bh, metadata !10510, metadata !DIExpression()), !dbg !10515
  call void @llvm.dbg.declare(metadata %struct.Library** %lib, metadata !10516, metadata !DIExpression()), !dbg !10519
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !10520, metadata !DIExpression()), !dbg !10521
  call void @llvm.dbg.declare(metadata [1024 x i8]* %name, metadata !10522, metadata !DIExpression()), !dbg !10523
  call void @llvm.dbg.declare(metadata [1024 x i8]* %dir, metadata !10524, metadata !DIExpression()), !dbg !10525
  call void @llvm.dbg.declare(metadata [1024 x i8]* %libname, metadata !10526, metadata !DIExpression()), !dbg !10527
  call void @llvm.dbg.declare(metadata [32 x i8]* %group, metadata !10528, metadata !DIExpression()), !dbg !10529
  call void @llvm.dbg.declare(metadata i32* %idcode, metadata !10530, metadata !DIExpression()), !dbg !10531
  call void @llvm.dbg.declare(metadata i32* %totfiles, metadata !10532, metadata !DIExpression()), !dbg !10533
  store i32 0, i32* %totfiles, align 4, !dbg !10533
  call void @llvm.dbg.declare(metadata i16* %flag, metadata !10534, metadata !DIExpression()), !dbg !10535
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10536
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !10537
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !10537
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !10538
  call void @RNA_string_get(%struct.PointerRNA* %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.38, i64 0, i64 0), i8* %arraydecay), !dbg !10539
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10540
  %ptr2 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 7, !dbg !10541
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr2, align 8, !dbg !10541
  %arraydecay3 = getelementptr inbounds [1024 x i8], [1024 x i8]* %dir, i64 0, i64 0, !dbg !10542
  call void @RNA_string_get(%struct.PointerRNA* %5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.35, i64 0, i64 0), i8* %arraydecay3), !dbg !10543
  %arraydecay4 = getelementptr inbounds [1024 x i8], [1024 x i8]* %dir, i64 0, i64 0, !dbg !10544
  %arraydecay5 = getelementptr inbounds [1024 x i8], [1024 x i8]* %libname, i64 0, i64 0, !dbg !10546
  %arraydecay6 = getelementptr inbounds [32 x i8], [32 x i8]* %group, i64 0, i64 0, !dbg !10547
  %call7 = call zeroext i8 @BLO_is_a_library(i8* %arraydecay4, i8* %arraydecay5, i8* %arraydecay6), !dbg !10548
  %conv = zext i8 %call7 to i32, !dbg !10548
  %cmp = icmp eq i32 %conv, 0, !dbg !10549
  br i1 %cmp, label %if.then, label %if.else, !dbg !10550

if.then:                                          ; preds = %entry
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10551
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 8, !dbg !10553
  %7 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !10553
  call void @BKE_report(%struct.ReportList* %7, i32 32, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.228, i64 0, i64 0)), !dbg !10554
  store i32 2, i32* %retval, align 4, !dbg !10555
  br label %return, !dbg !10555

if.else:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds [32 x i8], [32 x i8]* %group, i64 0, i64 0, !dbg !10556
  %8 = load i8, i8* %arrayidx, align 16, !dbg !10556
  %conv9 = zext i8 %8 to i32, !dbg !10556
  %cmp10 = icmp eq i32 %conv9, 0, !dbg !10558
  br i1 %cmp10, label %if.then12, label %if.else14, !dbg !10559

if.then12:                                        ; preds = %if.else
  %9 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10560
  %reports13 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %9, i32 0, i32 8, !dbg !10562
  %10 = load %struct.ReportList*, %struct.ReportList** %reports13, align 8, !dbg !10562
  call void @BKE_report(%struct.ReportList* %10, i32 32, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.229, i64 0, i64 0)), !dbg !10563
  store i32 2, i32* %retval, align 4, !dbg !10564
  br label %return, !dbg !10564

if.else14:                                        ; preds = %if.else
  %11 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !10565
  %name15 = getelementptr inbounds %struct.Main, %struct.Main* %11, i32 0, i32 2, !dbg !10567
  %arraydecay16 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name15, i64 0, i64 0, !dbg !10565
  %arraydecay17 = getelementptr inbounds [1024 x i8], [1024 x i8]* %libname, i64 0, i64 0, !dbg !10568
  %call18 = call i32 @strcmp(i8* %arraydecay16, i8* %arraydecay17) #6, !dbg !10569
  %cmp19 = icmp eq i32 %call18, 0, !dbg !10570
  br i1 %cmp19, label %if.then21, label %if.end, !dbg !10571

if.then21:                                        ; preds = %if.else14
  %12 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10572
  %reports22 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %12, i32 0, i32 8, !dbg !10574
  %13 = load %struct.ReportList*, %struct.ReportList** %reports22, align 8, !dbg !10574
  call void @BKE_report(%struct.ReportList* %13, i32 32, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.230, i64 0, i64 0)), !dbg !10575
  store i32 2, i32* %retval, align 4, !dbg !10576
  br label %return, !dbg !10576

if.end:                                           ; preds = %if.else14
  br label %if.end23

if.end23:                                         ; preds = %if.end
  br label %if.end24

if.end24:                                         ; preds = %if.end23
  %14 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10577
  %ptr25 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %14, i32 0, i32 7, !dbg !10578
  %15 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr25, align 8, !dbg !10578
  %call26 = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %15, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.41, i64 0, i64 0)), !dbg !10579
  store %struct.PropertyRNA* %call26, %struct.PropertyRNA** %prop, align 8, !dbg !10580
  %16 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !10581
  %tobool = icmp ne %struct.PropertyRNA* %16, null, !dbg !10581
  br i1 %tobool, label %if.then27, label %if.else41, !dbg !10583

if.then27:                                        ; preds = %if.end24
  %17 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10584
  %ptr28 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %17, i32 0, i32 7, !dbg !10586
  %18 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr28, align 8, !dbg !10586
  %19 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !10587
  %call29 = call i32 @RNA_property_collection_length(%struct.PointerRNA* %18, %struct.PropertyRNA* %19), !dbg !10588
  store i32 %call29, i32* %totfiles, align 4, !dbg !10589
  %20 = load i32, i32* %totfiles, align 4, !dbg !10590
  %cmp30 = icmp eq i32 %20, 0, !dbg !10592
  br i1 %cmp30, label %if.then32, label %if.end40, !dbg !10593

if.then32:                                        ; preds = %if.then27
  %arrayidx33 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !10594
  %21 = load i8, i8* %arrayidx33, align 16, !dbg !10594
  %conv34 = zext i8 %21 to i32, !dbg !10594
  %cmp35 = icmp eq i32 %conv34, 0, !dbg !10597
  br i1 %cmp35, label %if.then37, label %if.end39, !dbg !10598

if.then37:                                        ; preds = %if.then32
  %22 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10599
  %reports38 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %22, i32 0, i32 8, !dbg !10601
  %23 = load %struct.ReportList*, %struct.ReportList** %reports38, align 8, !dbg !10601
  call void @BKE_report(%struct.ReportList* %23, i32 32, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.229, i64 0, i64 0)), !dbg !10602
  store i32 2, i32* %retval, align 4, !dbg !10603
  br label %return, !dbg !10603

if.end39:                                         ; preds = %if.then32
  br label %if.end40, !dbg !10604

if.end40:                                         ; preds = %if.end39, %if.then27
  br label %if.end49, !dbg !10605

if.else41:                                        ; preds = %if.end24
  %arrayidx42 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !10606
  %24 = load i8, i8* %arrayidx42, align 16, !dbg !10606
  %conv43 = zext i8 %24 to i32, !dbg !10606
  %cmp44 = icmp eq i32 %conv43, 0, !dbg !10608
  br i1 %cmp44, label %if.then46, label %if.end48, !dbg !10609

if.then46:                                        ; preds = %if.else41
  %25 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10610
  %reports47 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %25, i32 0, i32 8, !dbg !10612
  %26 = load %struct.ReportList*, %struct.ReportList** %reports47, align 8, !dbg !10612
  call void @BKE_report(%struct.ReportList* %26, i32 32, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.229, i64 0, i64 0)), !dbg !10613
  store i32 2, i32* %retval, align 4, !dbg !10614
  br label %return, !dbg !10614

if.end48:                                         ; preds = %if.else41
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %if.end40
  %arraydecay50 = getelementptr inbounds [1024 x i8], [1024 x i8]* %libname, i64 0, i64 0, !dbg !10615
  %27 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10616
  %reports51 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %27, i32 0, i32 8, !dbg !10617
  %28 = load %struct.ReportList*, %struct.ReportList** %reports51, align 8, !dbg !10617
  %call52 = call %struct.BlendHandle* @BLO_blendhandle_from_file(i8* %arraydecay50, %struct.ReportList* %28), !dbg !10618
  store %struct.BlendHandle* %call52, %struct.BlendHandle** %bh, align 8, !dbg !10619
  %29 = load %struct.BlendHandle*, %struct.BlendHandle** %bh, align 8, !dbg !10620
  %cmp53 = icmp eq %struct.BlendHandle* %29, null, !dbg !10622
  br i1 %cmp53, label %if.then55, label %if.end56, !dbg !10623

if.then55:                                        ; preds = %if.end49
  store i32 2, i32* %retval, align 4, !dbg !10624
  br label %return, !dbg !10624

if.end56:                                         ; preds = %if.end49
  %arraydecay57 = getelementptr inbounds [32 x i8], [32 x i8]* %group, i64 0, i64 0, !dbg !10626
  %call58 = call i32 @BKE_idcode_from_name(i8* %arraydecay57), !dbg !10627
  store i32 %call58, i32* %idcode, align 4, !dbg !10628
  %30 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10629
  %ptr59 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %30, i32 0, i32 7, !dbg !10631
  %31 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr59, align 8, !dbg !10631
  %call60 = call i32 @RNA_boolean_get(%struct.PointerRNA* %31, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.231, i64 0, i64 0)), !dbg !10632
  %tobool61 = icmp ne i32 %call60, 0, !dbg !10632
  br i1 %tobool61, label %if.then62, label %if.end63, !dbg !10633

if.then62:                                        ; preds = %if.end56
  %32 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !10634
  call void @BKE_scene_base_deselect_all(%struct.Scene* %32), !dbg !10635
  br label %if.end63, !dbg !10635

if.end63:                                         ; preds = %if.then62, %if.end56
  %33 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10636
  %call64 = call signext i16 @wm_link_append_flag(%struct.wmOperator* %33), !dbg !10637
  store i16 %call64, i16* %flag, align 2, !dbg !10638
  %34 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !10639
  %id = getelementptr inbounds %struct.Scene, %struct.Scene* %34, i32 0, i32 0, !dbg !10641
  %lib65 = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 3, !dbg !10642
  %35 = load %struct.Library*, %struct.Library** %lib65, align 8, !dbg !10642
  %tobool66 = icmp ne %struct.Library* %35, null, !dbg !10639
  br i1 %tobool66, label %land.lhs.true, label %if.end77, !dbg !10643

land.lhs.true:                                    ; preds = %if.end63
  %36 = load i16, i16* %flag, align 2, !dbg !10644
  %conv67 = sext i16 %36 to i32, !dbg !10644
  %and = and i32 %conv67, 1024, !dbg !10645
  %tobool68 = icmp ne i32 %and, 0, !dbg !10645
  br i1 %tobool68, label %if.then69, label %if.end77, !dbg !10646

if.then69:                                        ; preds = %land.lhs.true
  %37 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10647
  %reports70 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %37, i32 0, i32 8, !dbg !10649
  %38 = load %struct.ReportList*, %struct.ReportList** %reports70, align 8, !dbg !10649
  %39 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !10650
  %id71 = getelementptr inbounds %struct.Scene, %struct.Scene* %39, i32 0, i32 0, !dbg !10651
  %name72 = getelementptr inbounds %struct.ID, %struct.ID* %id71, i32 0, i32 4, !dbg !10652
  %arraydecay73 = getelementptr inbounds [66 x i8], [66 x i8]* %name72, i64 0, i64 0, !dbg !10650
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay73, i64 2, !dbg !10653
  call void (%struct.ReportList*, i32, i8*, ...) @BKE_reportf(%struct.ReportList* %38, i32 16, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.232, i64 0, i64 0), i8* %add.ptr), !dbg !10654
  %40 = load i16, i16* %flag, align 2, !dbg !10655
  %conv74 = sext i16 %40 to i32, !dbg !10655
  %and75 = and i32 %conv74, -1025, !dbg !10655
  %conv76 = trunc i32 %and75 to i16, !dbg !10655
  store i16 %conv76, i16* %flag, align 2, !dbg !10655
  br label %if.end77, !dbg !10656

if.end77:                                         ; preds = %if.then69, %land.lhs.true, %if.end63
  %41 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !10657
  call void @BKE_main_id_flag_all(%struct.Main* %41, i16 signext 2048, i8 zeroext 1), !dbg !10658
  %42 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !10659
  %arraydecay78 = getelementptr inbounds [1024 x i8], [1024 x i8]* %libname, i64 0, i64 0, !dbg !10660
  %call79 = call %struct.Main* @BLO_library_append_begin(%struct.Main* %42, %struct.BlendHandle** %bh, i8* %arraydecay78), !dbg !10661
  store %struct.Main* %call79, %struct.Main** %mainl, align 8, !dbg !10662
  %43 = load %struct.Main*, %struct.Main** %mainl, align 8, !dbg !10663
  %curlib = getelementptr inbounds %struct.Main, %struct.Main* %43, i32 0, i32 10, !dbg !10664
  %44 = load %struct.Library*, %struct.Library** %curlib, align 8, !dbg !10664
  store %struct.Library* %44, %struct.Library** %lib, align 8, !dbg !10665
  %45 = load i32, i32* %totfiles, align 4, !dbg !10666
  %cmp80 = icmp eq i32 %45, 0, !dbg !10668
  br i1 %cmp80, label %if.then82, label %if.else85, !dbg !10669

if.then82:                                        ; preds = %if.end77
  %46 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10670
  %47 = load %struct.Main*, %struct.Main** %mainl, align 8, !dbg !10672
  %arraydecay83 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !10673
  %48 = load i32, i32* %idcode, align 4, !dbg !10674
  %49 = load i16, i16* %flag, align 2, !dbg !10675
  %call84 = call %struct.ID* @BLO_library_append_named_part_ex(%struct.bContext* %46, %struct.Main* %47, %struct.BlendHandle** %bh, i8* %arraydecay83, i32 %48, i16 signext %49), !dbg !10676
  br label %if.end92, !dbg !10677

if.else85:                                        ; preds = %if.end77
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator* %rna_macro_iter, metadata !10678, metadata !DIExpression()), !dbg !10681
  %50 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10682
  %ptr86 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %50, i32 0, i32 7, !dbg !10682
  %51 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr86, align 8, !dbg !10682
  call void @RNA_collection_begin(%struct.PointerRNA* %51, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.41, i64 0, i64 0), %struct.CollectionPropertyIterator* %rna_macro_iter), !dbg !10682
  br label %for.cond, !dbg !10682

for.cond:                                         ; preds = %for.inc, %if.else85
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %rna_macro_iter, i32 0, i32 7, !dbg !10684
  %52 = load i32, i32* %valid, align 8, !dbg !10684
  %tobool87 = icmp ne i32 %52, 0, !dbg !10682
  br i1 %tobool87, label %for.body, label %for.end, !dbg !10682

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %itemptr, metadata !10686, metadata !DIExpression()), !dbg !10688
  %ptr88 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %rna_macro_iter, i32 0, i32 6, !dbg !10688
  %53 = bitcast %struct.PointerRNA* %itemptr to i8*, !dbg !10688
  %54 = bitcast %struct.PointerRNA* %ptr88 to i8*, !dbg !10688
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 24, i1 false), !dbg !10688
  %arraydecay89 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !10689
  call void @RNA_string_get(%struct.PointerRNA* %itemptr, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.233, i64 0, i64 0), i8* %arraydecay89), !dbg !10691
  %55 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10692
  %56 = load %struct.Main*, %struct.Main** %mainl, align 8, !dbg !10693
  %arraydecay90 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !10694
  %57 = load i32, i32* %idcode, align 4, !dbg !10695
  %58 = load i16, i16* %flag, align 2, !dbg !10696
  %call91 = call %struct.ID* @BLO_library_append_named_part_ex(%struct.bContext* %55, %struct.Main* %56, %struct.BlendHandle** %bh, i8* %arraydecay90, i32 %57, i16 signext %58), !dbg !10697
  br label %for.inc, !dbg !10698

for.inc:                                          ; preds = %for.body
  call void @RNA_property_collection_next(%struct.CollectionPropertyIterator* %rna_macro_iter), !dbg !10684
  br label %for.cond, !dbg !10684, !llvm.loop !10699

for.end:                                          ; preds = %for.cond
  call void @RNA_property_collection_end(%struct.CollectionPropertyIterator* %rna_macro_iter), !dbg !10701
  br label %if.end92

if.end92:                                         ; preds = %for.end, %if.then82
  %59 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10702
  %60 = load %struct.Main*, %struct.Main** %mainl, align 8, !dbg !10703
  %61 = load i32, i32* %idcode, align 4, !dbg !10704
  %62 = load i16, i16* %flag, align 2, !dbg !10705
  call void @BLO_library_append_end(%struct.bContext* %59, %struct.Main* %60, %struct.BlendHandle** %bh, i32 %61, i16 signext %62), !dbg !10706
  %63 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !10707
  call void @BKE_main_lib_objects_recalc_all(%struct.Main* %63), !dbg !10708
  %64 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !10709
  call void @IMB_colormanagement_check_file_config(%struct.Main* %64), !dbg !10710
  %65 = load i16, i16* %flag, align 2, !dbg !10711
  %conv93 = sext i16 %65 to i32, !dbg !10711
  %and94 = and i32 %conv93, 4, !dbg !10713
  %cmp95 = icmp eq i32 %and94, 0, !dbg !10714
  br i1 %cmp95, label %if.then97, label %if.end98, !dbg !10715

if.then97:                                        ; preds = %if.end92
  %66 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !10716
  %67 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !10718
  call void @BKE_library_make_local(%struct.Main* %66, %struct.Library* %67, i8 zeroext 1), !dbg !10719
  br label %if.end98, !dbg !10720

if.end98:                                         ; preds = %if.then97, %if.end92
  %68 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !10721
  call void @BKE_main_id_flag_all(%struct.Main* %68, i16 signext 2048, i8 zeroext 0), !dbg !10722
  %69 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !10723
  %70 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !10724
  call void @DAG_scene_relations_rebuild(%struct.Main* %69, %struct.Scene* %70), !dbg !10725
  %71 = load %struct.BlendHandle*, %struct.BlendHandle** %bh, align 8, !dbg !10726
  call void @BLO_blendhandle_close(%struct.BlendHandle* %71), !dbg !10727
  %arraydecay99 = getelementptr inbounds [1024 x i8], [1024 x i8]* %dir, i64 0, i64 0, !dbg !10728
  %call100 = call i8* @BLI_strncpy(i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 2, i64 0), i8* %arraydecay99, i64 1024), !dbg !10729
  %72 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10730
  call void @WM_event_add_notifier(%struct.bContext* %72, i32 33554432, i8* null), !dbg !10731
  store i32 4, i32* %retval, align 4, !dbg !10732
  br label %return, !dbg !10732

return:                                           ; preds = %if.end98, %if.then55, %if.then46, %if.then37, %if.then21, %if.then12, %if.then
  %73 = load i32, i32* %retval, align 4, !dbg !10733
  ret i32 %73, !dbg !10733
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @wm_link_append_poll(%struct.bContext* %C) #0 !dbg !10734 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10735, metadata !DIExpression()), !dbg !10736
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10737
  %call = call i32 @WM_operator_winactive(%struct.bContext* %0), !dbg !10739
  %tobool = icmp ne i32 %call, 0, !dbg !10739
  br i1 %tobool, label %if.then, label %if.end4, !dbg !10740

if.then:                                          ; preds = %entry
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10741
  %call1 = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %1), !dbg !10744
  %tobool2 = icmp ne %struct.Object* %call1, null, !dbg !10744
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !10745

if.then3:                                         ; preds = %if.then
  store i32 0, i32* %retval, align 4, !dbg !10746
  br label %return, !dbg !10746

if.end:                                           ; preds = %if.then
  store i32 1, i32* %retval, align 4, !dbg !10747
  br label %return, !dbg !10747

if.end4:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !10748
  br label %return, !dbg !10748

return:                                           ; preds = %if.end4, %if.end, %if.then3
  %2 = load i32, i32* %retval, align 4, !dbg !10749
  ret i32 %2, !dbg !10749
}

; Function Attrs: noinline nounwind uwtable
define internal void @wm_link_append_properties_common(%struct.wmOperatorType* %ot, i8 zeroext %is_link) #0 !dbg !10750 {
entry:
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %is_link.addr = alloca i8, align 1
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !10751, metadata !DIExpression()), !dbg !10752
  store i8 %is_link, i8* %is_link.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_link.addr, metadata !10753, metadata !DIExpression()), !dbg !10754
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !10755, metadata !DIExpression()), !dbg !10756
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10757
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 11, !dbg !10758
  %1 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !10758
  %2 = bitcast %struct.StructRNA* %1 to i8*, !dbg !10757
  %3 = load i8, i8* %is_link.addr, align 1, !dbg !10759
  %conv = zext i8 %3 to i32, !dbg !10759
  %call = call %struct.PropertyRNA* @RNA_def_boolean(i8* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.235, i64 0, i64 0), i32 %conv, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.237, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.238, i64 0, i64 0)), !dbg !10760
  store %struct.PropertyRNA* %call, %struct.PropertyRNA** %prop, align 8, !dbg !10761
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !10762
  call void @RNA_def_property_flag(%struct.PropertyRNA* %4, i32 268959744), !dbg !10763
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10764
  %srna1 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 11, !dbg !10765
  %6 = load %struct.StructRNA*, %struct.StructRNA** %srna1, align 8, !dbg !10765
  %7 = bitcast %struct.StructRNA* %6 to i8*, !dbg !10764
  %call2 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.231, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.79, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.239, i64 0, i64 0)), !dbg !10766
  store %struct.PropertyRNA* %call2, %struct.PropertyRNA** %prop, align 8, !dbg !10767
  %8 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !10768
  call void @RNA_def_property_flag(%struct.PropertyRNA* %8, i32 268435456), !dbg !10769
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10770
  %srna3 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 11, !dbg !10771
  %10 = load %struct.StructRNA*, %struct.StructRNA** %srna3, align 8, !dbg !10771
  %11 = bitcast %struct.StructRNA* %10 to i8*, !dbg !10770
  %call4 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %11, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.234, i64 0, i64 0), i32 1, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.240, i64 0, i64 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.241, i64 0, i64 0)), !dbg !10772
  store %struct.PropertyRNA* %call4, %struct.PropertyRNA** %prop, align 8, !dbg !10773
  %12 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !10774
  call void @RNA_def_property_flag(%struct.PropertyRNA* %12, i32 268435456), !dbg !10775
  %13 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10776
  %srna5 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %13, i32 0, i32 11, !dbg !10777
  %14 = load %struct.StructRNA*, %struct.StructRNA** %srna5, align 8, !dbg !10777
  %15 = bitcast %struct.StructRNA* %14 to i8*, !dbg !10776
  %16 = load i8, i8* %is_link.addr, align 1, !dbg !10778
  %conv6 = zext i8 %16 to i32, !dbg !10778
  %call7 = call %struct.PropertyRNA* @RNA_def_boolean(i8* %15, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.236, i64 0, i64 0), i32 %conv6, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.242, i64 0, i64 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.243, i64 0, i64 0)), !dbg !10779
  store %struct.PropertyRNA* %call7, %struct.PropertyRNA** %prop, align 8, !dbg !10780
  %17 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !10781
  call void @RNA_def_property_flag(%struct.PropertyRNA* %17, i32 268435456), !dbg !10782
  ret void, !dbg !10783
}

declare dso_local zeroext i8 @BLI_parent_dir(i8*) #2

declare dso_local zeroext i8 @BLO_is_a_library(i8*, i8*, i8*) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #3

declare dso_local %struct.BlendHandle* @BLO_blendhandle_from_file(i8*, %struct.ReportList*) #2

declare dso_local i32 @BKE_idcode_from_name(i8*) #2

declare dso_local void @BKE_scene_base_deselect_all(%struct.Scene*) #2

; Function Attrs: noinline nounwind uwtable
define internal signext i16 @wm_link_append_flag(%struct.wmOperator* %op) #0 !dbg !10784 {
entry:
  %op.addr = alloca %struct.wmOperator*, align 8
  %flag = alloca i16, align 2
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !10787, metadata !DIExpression()), !dbg !10788
  call void @llvm.dbg.declare(metadata i16* %flag, metadata !10789, metadata !DIExpression()), !dbg !10790
  store i16 0, i16* %flag, align 2, !dbg !10790
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10791
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 7, !dbg !10793
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !10793
  %call = call i32 @RNA_boolean_get(%struct.PointerRNA* %1, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.231, i64 0, i64 0)), !dbg !10794
  %tobool = icmp ne i32 %call, 0, !dbg !10794
  br i1 %tobool, label %if.then, label %if.end, !dbg !10795

if.then:                                          ; preds = %entry
  %2 = load i16, i16* %flag, align 2, !dbg !10796
  %conv = sext i16 %2 to i32, !dbg !10796
  %or = or i32 %conv, 16, !dbg !10796
  %conv1 = trunc i32 %or to i16, !dbg !10796
  store i16 %conv1, i16* %flag, align 2, !dbg !10796
  br label %if.end, !dbg !10797

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10798
  %ptr2 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 7, !dbg !10800
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr2, align 8, !dbg !10800
  %call3 = call i32 @RNA_boolean_get(%struct.PointerRNA* %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.234, i64 0, i64 0)), !dbg !10801
  %tobool4 = icmp ne i32 %call3, 0, !dbg !10801
  br i1 %tobool4, label %if.then5, label %if.end9, !dbg !10802

if.then5:                                         ; preds = %if.end
  %5 = load i16, i16* %flag, align 2, !dbg !10803
  %conv6 = sext i16 %5 to i32, !dbg !10803
  %or7 = or i32 %conv6, 32, !dbg !10803
  %conv8 = trunc i32 %or7 to i16, !dbg !10803
  store i16 %conv8, i16* %flag, align 2, !dbg !10803
  br label %if.end9, !dbg !10804

if.end9:                                          ; preds = %if.then5, %if.end
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10805
  %ptr10 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 7, !dbg !10807
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr10, align 8, !dbg !10807
  %call11 = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %7, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.70, i64 0, i64 0)), !dbg !10808
  %tobool12 = icmp ne %struct.PropertyRNA* %call11, null, !dbg !10808
  br i1 %tobool12, label %land.lhs.true, label %if.end20, !dbg !10809

land.lhs.true:                                    ; preds = %if.end9
  %8 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10810
  %ptr13 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %8, i32 0, i32 7, !dbg !10811
  %9 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr13, align 8, !dbg !10811
  %call14 = call i32 @RNA_boolean_get(%struct.PointerRNA* %9, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.70, i64 0, i64 0)), !dbg !10812
  %tobool15 = icmp ne i32 %call14, 0, !dbg !10812
  br i1 %tobool15, label %if.then16, label %if.end20, !dbg !10813

if.then16:                                        ; preds = %land.lhs.true
  %10 = load i16, i16* %flag, align 2, !dbg !10814
  %conv17 = sext i16 %10 to i32, !dbg !10814
  %or18 = or i32 %conv17, 2, !dbg !10814
  %conv19 = trunc i32 %or18 to i16, !dbg !10814
  store i16 %conv19, i16* %flag, align 2, !dbg !10814
  br label %if.end20, !dbg !10815

if.end20:                                         ; preds = %if.then16, %land.lhs.true, %if.end9
  %11 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10816
  %ptr21 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %11, i32 0, i32 7, !dbg !10818
  %12 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr21, align 8, !dbg !10818
  %call22 = call i32 @RNA_boolean_get(%struct.PointerRNA* %12, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.235, i64 0, i64 0)), !dbg !10819
  %tobool23 = icmp ne i32 %call22, 0, !dbg !10819
  br i1 %tobool23, label %if.then24, label %if.end28, !dbg !10820

if.then24:                                        ; preds = %if.end20
  %13 = load i16, i16* %flag, align 2, !dbg !10821
  %conv25 = sext i16 %13 to i32, !dbg !10821
  %or26 = or i32 %conv25, 4, !dbg !10821
  %conv27 = trunc i32 %or26 to i16, !dbg !10821
  store i16 %conv27, i16* %flag, align 2, !dbg !10821
  br label %if.end28, !dbg !10822

if.end28:                                         ; preds = %if.then24, %if.end20
  %14 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10823
  %ptr29 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %14, i32 0, i32 7, !dbg !10825
  %15 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr29, align 8, !dbg !10825
  %call30 = call i32 @RNA_boolean_get(%struct.PointerRNA* %15, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.236, i64 0, i64 0)), !dbg !10826
  %tobool31 = icmp ne i32 %call30, 0, !dbg !10826
  br i1 %tobool31, label %if.then32, label %if.end36, !dbg !10827

if.then32:                                        ; preds = %if.end28
  %16 = load i16, i16* %flag, align 2, !dbg !10828
  %conv33 = sext i16 %16 to i32, !dbg !10828
  %or34 = or i32 %conv33, 1024, !dbg !10828
  %conv35 = trunc i32 %or34 to i16, !dbg !10828
  store i16 %conv35, i16* %flag, align 2, !dbg !10828
  br label %if.end36, !dbg !10829

if.end36:                                         ; preds = %if.then32, %if.end28
  %17 = load i16, i16* %flag, align 2, !dbg !10830
  ret i16 %17, !dbg !10831
}

declare dso_local void @BKE_main_id_flag_all(%struct.Main*, i16 signext, i8 zeroext) #2

declare dso_local %struct.Main* @BLO_library_append_begin(%struct.Main*, %struct.BlendHandle**, i8*) #2

declare dso_local %struct.ID* @BLO_library_append_named_part_ex(%struct.bContext*, %struct.Main*, %struct.BlendHandle**, i8*, i32, i16 signext) #2

declare dso_local void @RNA_collection_begin(%struct.PointerRNA*, i8*, %struct.CollectionPropertyIterator*) #2

declare dso_local void @BLO_library_append_end(%struct.bContext*, %struct.Main*, %struct.BlendHandle**, i32, i16 signext) #2

declare dso_local void @BKE_main_lib_objects_recalc_all(%struct.Main*) #2

declare dso_local void @IMB_colormanagement_check_file_config(%struct.Main*) #2

declare dso_local void @BKE_library_make_local(%struct.Main*, %struct.Library*, i8 zeroext) #2

declare dso_local void @DAG_scene_relations_rebuild(%struct.Main*, %struct.Scene*) #2

declare dso_local void @BLO_blendhandle_close(%struct.BlendHandle*) #2

declare dso_local %struct.Object* @CTX_data_edit_object(%struct.bContext*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @wm_recover_last_session_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !10832 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10833, metadata !DIExpression()), !dbg !10834
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !10835, metadata !DIExpression()), !dbg !10836
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10837
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10838
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 8, !dbg !10839
  %2 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !10839
  call void @WM_recover_last_session(%struct.bContext* %0, %struct.ReportList* %2), !dbg !10840
  ret i32 4, !dbg !10841
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @wm_recover_auto_save_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !10842 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %filepath = alloca [1024 x i8], align 16
  %success = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10843, metadata !DIExpression()), !dbg !10844
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !10845, metadata !DIExpression()), !dbg !10846
  call void @llvm.dbg.declare(metadata [1024 x i8]* %filepath, metadata !10847, metadata !DIExpression()), !dbg !10848
  call void @llvm.dbg.declare(metadata i8* %success, metadata !10849, metadata !DIExpression()), !dbg !10850
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10851
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 7, !dbg !10852
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !10852
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %filepath, i64 0, i64 0, !dbg !10853
  call void @RNA_string_get(%struct.PointerRNA* %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.20, i64 0, i64 0), i8* %arraydecay), !dbg !10854
  %2 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 18), align 4, !dbg !10855
  %or = or i32 %2, 8388608, !dbg !10855
  store i32 %or, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 18), align 4, !dbg !10855
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10856
  %arraydecay1 = getelementptr inbounds [1024 x i8], [1024 x i8]* %filepath, i64 0, i64 0, !dbg !10857
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10858
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 8, !dbg !10859
  %5 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !10859
  %call = call zeroext i8 @wm_file_read_opwrap(%struct.bContext* %3, i8* %arraydecay1, %struct.ReportList* %5, i8 zeroext 1), !dbg !10860
  store i8 %call, i8* %success, align 1, !dbg !10861
  %6 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 18), align 4, !dbg !10862
  %and = and i32 %6, -8388609, !dbg !10862
  store i32 %and, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 18), align 4, !dbg !10862
  %7 = load i8, i8* %success, align 1, !dbg !10863
  %tobool = icmp ne i8 %7, 0, !dbg !10863
  br i1 %tobool, label %if.then, label %if.else, !dbg !10865

if.then:                                          ; preds = %entry
  store i32 4, i32* %retval, align 4, !dbg !10866
  br label %return, !dbg !10866

if.else:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !10868
  br label %return, !dbg !10868

return:                                           ; preds = %if.else, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !10870
  ret i32 %8, !dbg !10870
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @wm_recover_auto_save_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %UNUSED_event) #0 !dbg !10871 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %UNUSED_event.addr = alloca %struct.wmEvent*, align 8
  %filename = alloca [1024 x i8], align 16
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10872, metadata !DIExpression()), !dbg !10873
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !10874, metadata !DIExpression()), !dbg !10875
  store %struct.wmEvent* %UNUSED_event, %struct.wmEvent** %UNUSED_event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %UNUSED_event.addr, metadata !10876, metadata !DIExpression()), !dbg !10877
  call void @llvm.dbg.declare(metadata [1024 x i8]* %filename, metadata !10878, metadata !DIExpression()), !dbg !10879
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %filename, i64 0, i64 0, !dbg !10880
  call void @wm_autosave_location(i8* %arraydecay), !dbg !10881
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10882
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 7, !dbg !10883
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !10883
  %arraydecay1 = getelementptr inbounds [1024 x i8], [1024 x i8]* %filename, i64 0, i64 0, !dbg !10884
  call void @RNA_string_set(%struct.PointerRNA* %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.20, i64 0, i64 0), i8* %arraydecay1), !dbg !10885
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10886
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10887
  call void @WM_event_add_fileselect(%struct.bContext* %2, %struct.wmOperator* %3), !dbg !10888
  ret i32 1, !dbg !10889
}

declare dso_local void @wm_autosave_location(i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @wm_save_as_mainfile_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %UNUSED_event) #0 !dbg !10890 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %UNUSED_event.addr = alloca %struct.wmEvent*, align 8
  %name = alloca [1024 x i8], align 16
  %recent = alloca %struct.RecentFile*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10891, metadata !DIExpression()), !dbg !10892
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !10893, metadata !DIExpression()), !dbg !10894
  store %struct.wmEvent* %UNUSED_event, %struct.wmEvent** %UNUSED_event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %UNUSED_event.addr, metadata !10895, metadata !DIExpression()), !dbg !10896
  call void @llvm.dbg.declare(metadata [1024 x i8]* %name, metadata !10897, metadata !DIExpression()), !dbg !10898
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10899
  call void @save_set_compress(%struct.wmOperator* %0), !dbg !10900
  %1 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !10901
  %name1 = getelementptr inbounds %struct.Main, %struct.Main* %1, i32 0, i32 2, !dbg !10903
  %arrayidx = getelementptr inbounds [1024 x i8], [1024 x i8]* %name1, i64 0, i64 0, !dbg !10904
  %2 = load i8, i8* %arrayidx, align 8, !dbg !10904
  %conv = zext i8 %2 to i32, !dbg !10904
  %cmp = icmp eq i32 %conv, 0, !dbg !10905
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !10906

land.lhs.true:                                    ; preds = %entry
  %3 = load i8*, i8** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 6, i32 0), align 8, !dbg !10907
  %tobool = icmp ne i8* %3, null, !dbg !10908
  br i1 %tobool, label %if.then, label %if.else, !dbg !10909

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.RecentFile** %recent, metadata !10910, metadata !DIExpression()), !dbg !10912
  %4 = load i8*, i8** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 6, i32 0), align 8, !dbg !10913
  %5 = bitcast i8* %4 to %struct.RecentFile*, !dbg !10914
  store %struct.RecentFile* %5, %struct.RecentFile** %recent, align 8, !dbg !10912
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !10915
  %6 = load %struct.RecentFile*, %struct.RecentFile** %recent, align 8, !dbg !10916
  %filepath = getelementptr inbounds %struct.RecentFile, %struct.RecentFile* %6, i32 0, i32 2, !dbg !10917
  %7 = load i8*, i8** %filepath, align 8, !dbg !10917
  %call = call i8* @BLI_strncpy(i8* %arraydecay, i8* %7, i64 1024), !dbg !10918
  br label %if.end, !dbg !10919

if.else:                                          ; preds = %land.lhs.true, %entry
  %arraydecay3 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !10920
  %8 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !10921
  %name4 = getelementptr inbounds %struct.Main, %struct.Main* %8, i32 0, i32 2, !dbg !10922
  %arraydecay5 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name4, i64 0, i64 0, !dbg !10923
  %call6 = call i8* @BLI_strncpy(i8* %arraydecay3, i8* %arraydecay5, i64 1024), !dbg !10924
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %arraydecay7 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !10925
  call void @wm_filepath_default(i8* %arraydecay7), !dbg !10926
  %9 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10927
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %9, i32 0, i32 7, !dbg !10928
  %10 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !10928
  %arraydecay8 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !10929
  call void @RNA_string_set(%struct.PointerRNA* %10, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.20, i64 0, i64 0), i8* %arraydecay8), !dbg !10930
  %11 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10931
  %12 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10932
  call void @WM_event_add_fileselect(%struct.bContext* %11, %struct.wmOperator* %12), !dbg !10933
  ret i32 1, !dbg !10934
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @wm_save_as_mainfile_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !10935 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %path = alloca [1024 x i8], align 16
  %fileflags = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10936, metadata !DIExpression()), !dbg !10937
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !10938, metadata !DIExpression()), !dbg !10939
  call void @llvm.dbg.declare(metadata [1024 x i8]* %path, metadata !10940, metadata !DIExpression()), !dbg !10941
  call void @llvm.dbg.declare(metadata i32* %fileflags, metadata !10942, metadata !DIExpression()), !dbg !10943
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10944
  call void @save_set_compress(%struct.wmOperator* %0), !dbg !10945
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10946
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 7, !dbg !10948
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !10948
  %call = call zeroext i8 @RNA_struct_property_is_set(%struct.PointerRNA* %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.20, i64 0, i64 0)), !dbg !10949
  %tobool = icmp ne i8 %call, 0, !dbg !10949
  br i1 %tobool, label %if.then, label %if.else, !dbg !10950

if.then:                                          ; preds = %entry
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10951
  %ptr1 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 7, !dbg !10953
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr1, align 8, !dbg !10953
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %path, i64 0, i64 0, !dbg !10954
  call void @RNA_string_get(%struct.PointerRNA* %4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.20, i64 0, i64 0), i8* %arraydecay), !dbg !10955
  br label %if.end, !dbg !10956

if.else:                                          ; preds = %entry
  %arraydecay2 = getelementptr inbounds [1024 x i8], [1024 x i8]* %path, i64 0, i64 0, !dbg !10957
  %5 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !10959
  %name = getelementptr inbounds %struct.Main, %struct.Main* %5, i32 0, i32 2, !dbg !10960
  %arraydecay3 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !10961
  %call4 = call i8* @BLI_strncpy(i8* %arraydecay2, i8* %arraydecay3, i64 1024), !dbg !10962
  %arraydecay5 = getelementptr inbounds [1024 x i8], [1024 x i8]* %path, i64 0, i64 0, !dbg !10963
  call void @wm_filepath_default(i8* %arraydecay5), !dbg !10964
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %6 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 18), align 4, !dbg !10965
  %and = and i32 %6, -513, !dbg !10966
  store i32 %and, i32* %fileflags, align 4, !dbg !10967
  %7 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10968
  %ptr6 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %7, i32 0, i32 7, !dbg !10968
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr6, align 8, !dbg !10968
  %call7 = call i32 @RNA_boolean_get(%struct.PointerRNA* %8, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.254, i64 0, i64 0)), !dbg !10968
  %tobool8 = icmp ne i32 %call7, 0, !dbg !10968
  br i1 %tobool8, label %if.then9, label %if.else10, !dbg !10971

if.then9:                                         ; preds = %if.end
  %9 = load i32, i32* %fileflags, align 4, !dbg !10968
  %or = or i32 %9, 2, !dbg !10968
  store i32 %or, i32* %fileflags, align 4, !dbg !10968
  br label %if.end12, !dbg !10968

if.else10:                                        ; preds = %if.end
  %10 = load i32, i32* %fileflags, align 4, !dbg !10968
  %and11 = and i32 %10, -3, !dbg !10968
  store i32 %and11, i32* %fileflags, align 4, !dbg !10968
  br label %if.end12

if.end12:                                         ; preds = %if.else10, %if.then9
  %11 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10972
  %ptr13 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %11, i32 0, i32 7, !dbg !10972
  %12 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr13, align 8, !dbg !10972
  %call14 = call i32 @RNA_boolean_get(%struct.PointerRNA* %12, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.257, i64 0, i64 0)), !dbg !10972
  %tobool15 = icmp ne i32 %call14, 0, !dbg !10972
  br i1 %tobool15, label %if.then16, label %if.else18, !dbg !10975

if.then16:                                        ; preds = %if.end12
  %13 = load i32, i32* %fileflags, align 4, !dbg !10972
  %or17 = or i32 %13, 16777216, !dbg !10972
  store i32 %or17, i32* %fileflags, align 4, !dbg !10972
  br label %if.end20, !dbg !10972

if.else18:                                        ; preds = %if.end12
  %14 = load i32, i32* %fileflags, align 4, !dbg !10972
  %and19 = and i32 %14, -16777217, !dbg !10972
  store i32 %and19, i32* %fileflags, align 4, !dbg !10972
  br label %if.end20

if.end20:                                         ; preds = %if.else18, %if.then16
  %15 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10976
  %ptr21 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %15, i32 0, i32 7, !dbg !10976
  %16 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr21, align 8, !dbg !10976
  %call22 = call zeroext i8 @RNA_struct_property_is_set(%struct.PointerRNA* %16, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.137, i64 0, i64 0)), !dbg !10976
  %conv = zext i8 %call22 to i32, !dbg !10976
  %tobool23 = icmp ne i32 %conv, 0, !dbg !10976
  br i1 %tobool23, label %land.lhs.true, label %if.else29, !dbg !10976

land.lhs.true:                                    ; preds = %if.end20
  %17 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10976
  %ptr24 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %17, i32 0, i32 7, !dbg !10976
  %18 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr24, align 8, !dbg !10976
  %call25 = call i32 @RNA_boolean_get(%struct.PointerRNA* %18, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.137, i64 0, i64 0)), !dbg !10976
  %tobool26 = icmp ne i32 %call25, 0, !dbg !10976
  br i1 %tobool26, label %if.then27, label %if.else29, !dbg !10979

if.then27:                                        ; preds = %land.lhs.true
  %19 = load i32, i32* %fileflags, align 4, !dbg !10976
  %or28 = or i32 %19, 134217728, !dbg !10976
  store i32 %or28, i32* %fileflags, align 4, !dbg !10976
  br label %if.end31, !dbg !10976

if.else29:                                        ; preds = %land.lhs.true, %if.end20
  %20 = load i32, i32* %fileflags, align 4, !dbg !10976
  %and30 = and i32 %20, -134217729, !dbg !10976
  store i32 %and30, i32* %fileflags, align 4, !dbg !10976
  br label %if.end31

if.end31:                                         ; preds = %if.else29, %if.then27
  %21 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10980
  %ptr32 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %21, i32 0, i32 7, !dbg !10980
  %22 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr32, align 8, !dbg !10980
  %call33 = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %22, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.262, i64 0, i64 0)), !dbg !10980
  %tobool34 = icmp ne %struct.PropertyRNA* %call33, null, !dbg !10980
  br i1 %tobool34, label %land.lhs.true35, label %if.else41, !dbg !10980

land.lhs.true35:                                  ; preds = %if.end31
  %23 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10980
  %ptr36 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %23, i32 0, i32 7, !dbg !10980
  %24 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr36, align 8, !dbg !10980
  %call37 = call i32 @RNA_boolean_get(%struct.PointerRNA* %24, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.262, i64 0, i64 0)), !dbg !10980
  %tobool38 = icmp ne i32 %call37, 0, !dbg !10980
  br i1 %tobool38, label %if.then39, label %if.else41, !dbg !10983

if.then39:                                        ; preds = %land.lhs.true35
  %25 = load i32, i32* %fileflags, align 4, !dbg !10980
  %or40 = or i32 %25, 67108864, !dbg !10980
  store i32 %or40, i32* %fileflags, align 4, !dbg !10980
  br label %if.end43, !dbg !10980

if.else41:                                        ; preds = %land.lhs.true35, %if.end31
  %26 = load i32, i32* %fileflags, align 4, !dbg !10980
  %and42 = and i32 %26, -67108865, !dbg !10980
  store i32 %and42, i32* %fileflags, align 4, !dbg !10980
  br label %if.end43

if.end43:                                         ; preds = %if.else41, %if.then39
  %27 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10984
  %arraydecay44 = getelementptr inbounds [1024 x i8], [1024 x i8]* %path, i64 0, i64 0, !dbg !10986
  %28 = load i32, i32* %fileflags, align 4, !dbg !10987
  %29 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10988
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %29, i32 0, i32 8, !dbg !10989
  %30 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !10989
  %call45 = call i32 @wm_file_write(%struct.bContext* %27, i8* %arraydecay44, i32 %28, %struct.ReportList* %30), !dbg !10990
  %cmp = icmp ne i32 %call45, 0, !dbg !10991
  br i1 %cmp, label %if.then47, label %if.end48, !dbg !10992

if.then47:                                        ; preds = %if.end43
  store i32 2, i32* %retval, align 4, !dbg !10993
  br label %return, !dbg !10993

if.end48:                                         ; preds = %if.end43
  %31 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10994
  call void @WM_event_add_notifier(%struct.bContext* %31, i32 16908288, i8* null), !dbg !10995
  store i32 4, i32* %retval, align 4, !dbg !10996
  br label %return, !dbg !10996

return:                                           ; preds = %if.end48, %if.then47
  %32 = load i32, i32* %retval, align 4, !dbg !10997
  ret i32 %32, !dbg !10997
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @blend_save_check(%struct.bContext* %UNUSED_C, %struct.wmOperator* %op) #0 !dbg !10998 {
entry:
  %retval = alloca i8, align 1
  %UNUSED_C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %filepath = alloca [1024 x i8], align 16
  store %struct.bContext* %UNUSED_C, %struct.bContext** %UNUSED_C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %UNUSED_C.addr, metadata !10999, metadata !DIExpression()), !dbg !11000
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !11001, metadata !DIExpression()), !dbg !11002
  call void @llvm.dbg.declare(metadata [1024 x i8]* %filepath, metadata !11003, metadata !DIExpression()), !dbg !11004
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !11005
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 7, !dbg !11006
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !11006
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %filepath, i64 0, i64 0, !dbg !11007
  call void @RNA_string_get(%struct.PointerRNA* %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.20, i64 0, i64 0), i8* %arraydecay), !dbg !11008
  %arraydecay1 = getelementptr inbounds [1024 x i8], [1024 x i8]* %filepath, i64 0, i64 0, !dbg !11009
  %call = call zeroext i8 @BLO_has_bfile_extension(i8* %arraydecay1), !dbg !11011
  %tobool = icmp ne i8 %call, 0, !dbg !11011
  br i1 %tobool, label %if.end, label %if.then, !dbg !11012

if.then:                                          ; preds = %entry
  %arraydecay2 = getelementptr inbounds [1024 x i8], [1024 x i8]* %filepath, i64 0, i64 0, !dbg !11013
  %call3 = call zeroext i8 @BLI_ensure_extension(i8* %arraydecay2, i64 1024, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.266, i64 0, i64 0)), !dbg !11015
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !11016
  %ptr4 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 7, !dbg !11017
  %3 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr4, align 8, !dbg !11017
  %arraydecay5 = getelementptr inbounds [1024 x i8], [1024 x i8]* %filepath, i64 0, i64 0, !dbg !11018
  call void @RNA_string_set(%struct.PointerRNA* %3, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.20, i64 0, i64 0), i8* %arraydecay5), !dbg !11019
  store i8 1, i8* %retval, align 1, !dbg !11020
  br label %return, !dbg !11020

if.end:                                           ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !11021
  br label %return, !dbg !11021

return:                                           ; preds = %if.end, %if.then
  %4 = load i8, i8* %retval, align 1, !dbg !11022
  ret i8 %4, !dbg !11022
}

; Function Attrs: noinline nounwind uwtable
define internal void @save_set_compress(%struct.wmOperator* %op) #0 !dbg !11023 {
entry:
  %op.addr = alloca %struct.wmOperator*, align 8
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !11024, metadata !DIExpression()), !dbg !11025
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !11026
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 7, !dbg !11028
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !11028
  %call = call zeroext i8 @RNA_struct_property_is_set(%struct.PointerRNA* %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.254, i64 0, i64 0)), !dbg !11029
  %tobool = icmp ne i8 %call, 0, !dbg !11029
  br i1 %tobool, label %if.end6, label %if.then, !dbg !11030

if.then:                                          ; preds = %entry
  %2 = load i8, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 5), align 2, !dbg !11031
  %tobool1 = icmp ne i8 %2, 0, !dbg !11034
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !11035

if.then2:                                         ; preds = %if.then
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !11036
  %ptr3 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 7, !dbg !11037
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr3, align 8, !dbg !11037
  %5 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 18), align 4, !dbg !11038
  %and = and i32 %5, 2, !dbg !11039
  call void @RNA_boolean_set(%struct.PointerRNA* %4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.254, i64 0, i64 0), i32 %and), !dbg !11040
  br label %if.end, !dbg !11040

if.else:                                          ; preds = %if.then
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !11041
  %ptr4 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 7, !dbg !11042
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr4, align 8, !dbg !11042
  %8 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 2), align 8, !dbg !11043
  %and5 = and i32 %8, 32768, !dbg !11044
  call void @RNA_boolean_set(%struct.PointerRNA* %7, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.254, i64 0, i64 0), i32 %and5), !dbg !11045
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  br label %if.end6, !dbg !11046

if.end6:                                          ; preds = %if.end, %entry
  ret void, !dbg !11047
}

; Function Attrs: noinline nounwind uwtable
define internal void @wm_filepath_default(i8* %filepath) #0 !dbg !11048 {
entry:
  %filepath.addr = alloca i8*, align 8
  store i8* %filepath, i8** %filepath.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %filepath.addr, metadata !11051, metadata !DIExpression()), !dbg !11052
  %0 = load i8, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 5), align 2, !dbg !11053
  %conv = zext i8 %0 to i32, !dbg !11055
  %cmp = icmp eq i32 %conv, 0, !dbg !11056
  br i1 %cmp, label %if.then, label %if.end, !dbg !11057

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %filepath.addr, align 8, !dbg !11058
  %call = call zeroext i8 @BLI_ensure_filename(i8* %1, i64 1024, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.265, i64 0, i64 0)), !dbg !11060
  br label %if.end, !dbg !11061

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !11062
}

declare dso_local zeroext i8 @BLI_ensure_filename(i8*, i64, i8*) #2

declare dso_local i32 @wm_file_write(%struct.bContext*, i8*, i32, %struct.ReportList*) #2

declare dso_local zeroext i8 @BLO_has_bfile_extension(i8*) #2

declare dso_local zeroext i8 @BLI_ensure_extension(i8*, i64, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @wm_save_mainfile_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %UNUSED_event) #0 !dbg !11063 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %UNUSED_event.addr = alloca %struct.wmEvent*, align 8
  %name = alloca [1024 x i8], align 16
  %ret = alloca i32, align 4
  %recent = alloca %struct.RecentFile*, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !11064, metadata !DIExpression()), !dbg !11065
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !11066, metadata !DIExpression()), !dbg !11067
  store %struct.wmEvent* %UNUSED_event, %struct.wmEvent** %UNUSED_event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %UNUSED_event.addr, metadata !11068, metadata !DIExpression()), !dbg !11069
  call void @llvm.dbg.declare(metadata [1024 x i8]* %name, metadata !11070, metadata !DIExpression()), !dbg !11071
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !11072, metadata !DIExpression()), !dbg !11073
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11074
  %call = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %0), !dbg !11076
  %cmp = icmp eq %struct.wmWindow* %call, null, !dbg !11077
  br i1 %cmp, label %if.then, label %if.end, !dbg !11078

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !11079
  br label %return, !dbg !11079

if.end:                                           ; preds = %entry
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !11080
  call void @save_set_compress(%struct.wmOperator* %1), !dbg !11081
  %2 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !11082
  %name1 = getelementptr inbounds %struct.Main, %struct.Main* %2, i32 0, i32 2, !dbg !11084
  %arrayidx = getelementptr inbounds [1024 x i8], [1024 x i8]* %name1, i64 0, i64 0, !dbg !11085
  %3 = load i8, i8* %arrayidx, align 8, !dbg !11085
  %conv = zext i8 %3 to i32, !dbg !11085
  %cmp2 = icmp eq i32 %conv, 0, !dbg !11086
  br i1 %cmp2, label %land.lhs.true, label %if.else, !dbg !11087

land.lhs.true:                                    ; preds = %if.end
  %4 = load i8*, i8** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 6, i32 0), align 8, !dbg !11088
  %tobool = icmp ne i8* %4, null, !dbg !11089
  br i1 %tobool, label %if.then4, label %if.else, !dbg !11090

if.then4:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.RecentFile** %recent, metadata !11091, metadata !DIExpression()), !dbg !11093
  %5 = load i8*, i8** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 6, i32 0), align 8, !dbg !11094
  %6 = bitcast i8* %5 to %struct.RecentFile*, !dbg !11095
  store %struct.RecentFile* %6, %struct.RecentFile** %recent, align 8, !dbg !11093
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !11096
  %7 = load %struct.RecentFile*, %struct.RecentFile** %recent, align 8, !dbg !11097
  %filepath = getelementptr inbounds %struct.RecentFile, %struct.RecentFile* %7, i32 0, i32 2, !dbg !11098
  %8 = load i8*, i8** %filepath, align 8, !dbg !11098
  %call5 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %8, i64 1024), !dbg !11099
  br label %if.end10, !dbg !11100

if.else:                                          ; preds = %land.lhs.true, %if.end
  %arraydecay6 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !11101
  %9 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !11102
  %name7 = getelementptr inbounds %struct.Main, %struct.Main* %9, i32 0, i32 2, !dbg !11103
  %arraydecay8 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name7, i64 0, i64 0, !dbg !11104
  %call9 = call i8* @BLI_strncpy(i8* %arraydecay6, i8* %arraydecay8, i64 1024), !dbg !11105
  br label %if.end10

if.end10:                                         ; preds = %if.else, %if.then4
  %arraydecay11 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !11106
  call void @wm_filepath_default(i8* %arraydecay11), !dbg !11107
  %10 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !11108
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %10, i32 0, i32 7, !dbg !11109
  %11 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !11109
  %arraydecay12 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !11110
  call void @RNA_string_set(%struct.PointerRNA* %11, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.20, i64 0, i64 0), i8* %arraydecay12), !dbg !11111
  %12 = load i8, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 3), align 8, !dbg !11112
  %conv13 = zext i8 %12 to i32, !dbg !11114
  %cmp14 = icmp eq i32 %conv13, 0, !dbg !11115
  br i1 %cmp14, label %land.lhs.true16, label %if.end27, !dbg !11116

land.lhs.true16:                                  ; preds = %if.end10
  %13 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 2), align 8, !dbg !11117
  %and = and i32 %13, 1048576, !dbg !11118
  %tobool17 = icmp ne i32 %and, 0, !dbg !11118
  br i1 %tobool17, label %if.then18, label %if.end27, !dbg !11119

if.then18:                                        ; preds = %land.lhs.true16
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !11120, metadata !DIExpression()), !dbg !11122
  %14 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !11123
  %ptr19 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %14, i32 0, i32 7, !dbg !11124
  %15 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr19, align 8, !dbg !11124
  %call20 = call %struct.PropertyRNA* @RNA_struct_find_property(%struct.PointerRNA* %15, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.257, i64 0, i64 0)), !dbg !11125
  store %struct.PropertyRNA* %call20, %struct.PropertyRNA** %prop, align 8, !dbg !11122
  %16 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !11126
  %ptr21 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %16, i32 0, i32 7, !dbg !11128
  %17 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr21, align 8, !dbg !11128
  %18 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !11129
  %call22 = call zeroext i8 @RNA_property_is_set(%struct.PointerRNA* %17, %struct.PropertyRNA* %18), !dbg !11130
  %tobool23 = icmp ne i8 %call22, 0, !dbg !11130
  br i1 %tobool23, label %if.end26, label %if.then24, !dbg !11131

if.then24:                                        ; preds = %if.then18
  %19 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !11132
  %ptr25 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %19, i32 0, i32 7, !dbg !11134
  %20 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr25, align 8, !dbg !11134
  %21 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !11135
  call void @RNA_property_boolean_set(%struct.PointerRNA* %20, %struct.PropertyRNA* %21, i32 1), !dbg !11136
  br label %if.end26, !dbg !11137

if.end26:                                         ; preds = %if.then24, %if.then18
  br label %if.end27, !dbg !11138

if.end27:                                         ; preds = %if.end26, %land.lhs.true16, %if.end10
  %22 = load i8, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 5), align 2, !dbg !11139
  %tobool28 = icmp ne i8 %22, 0, !dbg !11141
  br i1 %tobool28, label %if.then29, label %if.else39, !dbg !11142

if.then29:                                        ; preds = %if.end27
  %arraydecay30 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !11143
  %call31 = call i32 @BLI_exists(i8* %arraydecay30), !dbg !11146
  %tobool32 = icmp ne i32 %call31, 0, !dbg !11146
  br i1 %tobool32, label %if.then33, label %if.else36, !dbg !11147

if.then33:                                        ; preds = %if.then29
  %23 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11148
  %24 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !11150
  %arraydecay34 = getelementptr inbounds [1024 x i8], [1024 x i8]* %name, i64 0, i64 0, !dbg !11151
  %call35 = call i32 @WM_operator_confirm_message_ex(%struct.bContext* %23, %struct.wmOperator* %24, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.269, i64 0, i64 0), i32 1, i8* %arraydecay34), !dbg !11152
  store i32 %call35, i32* %ret, align 4, !dbg !11153
  br label %if.end38, !dbg !11154

if.else36:                                        ; preds = %if.then29
  %25 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11155
  %26 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !11157
  %call37 = call i32 @wm_save_as_mainfile_exec(%struct.bContext* %25, %struct.wmOperator* %26), !dbg !11158
  store i32 %call37, i32* %ret, align 4, !dbg !11159
  br label %if.end38

if.end38:                                         ; preds = %if.else36, %if.then33
  br label %if.end40, !dbg !11160

if.else39:                                        ; preds = %if.end27
  %27 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11161
  %28 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !11163
  call void @WM_event_add_fileselect(%struct.bContext* %27, %struct.wmOperator* %28), !dbg !11164
  store i32 1, i32* %ret, align 4, !dbg !11165
  br label %if.end40

if.end40:                                         ; preds = %if.else39, %if.end38
  %29 = load i32, i32* %ret, align 4, !dbg !11166
  store i32 %29, i32* %retval, align 4, !dbg !11167
  br label %return, !dbg !11167

return:                                           ; preds = %if.end40, %if.then
  %30 = load i32, i32* %retval, align 4, !dbg !11168
  ret i32 %30, !dbg !11168
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @redraw_timer_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !11169 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %stime = alloca double, align 8
  %type = alloca i32, align 4
  %iter = alloca i32, align 4
  %a = alloca i32, align 4
  %time = alloca float, align 4
  %infostr = alloca i8*, align 8
  %win = alloca %struct.wmWindow*, align 8
  %win13 = alloca %struct.wmWindow*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  %sa_back = alloca %struct.ScrArea*, align 8
  %ar_back = alloca %struct.ARegion*, align 8
  %ar_iter = alloca %struct.ARegion*, align 8
  %bmain = alloca %struct.Main*, align 8
  %scene = alloca %struct.Scene*, align 8
  %bmain48 = alloca %struct.Main*, align 8
  %scene50 = alloca %struct.Scene*, align 8
  %tot = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !11170, metadata !DIExpression()), !dbg !11171
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !11172, metadata !DIExpression()), !dbg !11173
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !11174, metadata !DIExpression()), !dbg !11175
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11176
  %call = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %0), !dbg !11177
  store %struct.ARegion* %call, %struct.ARegion** %ar, align 8, !dbg !11175
  call void @llvm.dbg.declare(metadata double* %stime, metadata !11178, metadata !DIExpression()), !dbg !11179
  %call1 = call double @PIL_check_seconds_timer(), !dbg !11180
  store double %call1, double* %stime, align 8, !dbg !11179
  call void @llvm.dbg.declare(metadata i32* %type, metadata !11181, metadata !DIExpression()), !dbg !11182
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !11183
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 7, !dbg !11184
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !11184
  %call2 = call i32 @RNA_enum_get(%struct.PointerRNA* %2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.272, i64 0, i64 0)), !dbg !11185
  store i32 %call2, i32* %type, align 4, !dbg !11182
  call void @llvm.dbg.declare(metadata i32* %iter, metadata !11186, metadata !DIExpression()), !dbg !11187
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !11188
  %ptr3 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 7, !dbg !11189
  %4 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr3, align 8, !dbg !11189
  %call4 = call i32 @RNA_int_get(%struct.PointerRNA* %4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.274, i64 0, i64 0)), !dbg !11190
  store i32 %call4, i32* %iter, align 4, !dbg !11187
  call void @llvm.dbg.declare(metadata i32* %a, metadata !11191, metadata !DIExpression()), !dbg !11192
  call void @llvm.dbg.declare(metadata float* %time, metadata !11193, metadata !DIExpression()), !dbg !11194
  call void @llvm.dbg.declare(metadata i8** %infostr, metadata !11195, metadata !DIExpression()), !dbg !11196
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i8** %infostr, align 8, !dbg !11196
  call void @WM_cursor_wait(i8 zeroext 1), !dbg !11197
  store i32 0, i32* %a, align 4, !dbg !11198
  br label %for.cond, !dbg !11200

for.cond:                                         ; preds = %for.inc79, %entry
  %5 = load i32, i32* %a, align 4, !dbg !11201
  %6 = load i32, i32* %iter, align 4, !dbg !11203
  %cmp = icmp slt i32 %5, %6, !dbg !11204
  br i1 %cmp, label %for.body, label %for.end81, !dbg !11205

for.body:                                         ; preds = %for.cond
  %7 = load i32, i32* %type, align 4, !dbg !11206
  %cmp5 = icmp eq i32 %7, 0, !dbg !11209
  br i1 %cmp5, label %if.then, label %if.else, !dbg !11210

if.then:                                          ; preds = %for.body
  %8 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !11211
  %tobool = icmp ne %struct.ARegion* %8, null, !dbg !11211
  br i1 %tobool, label %if.then6, label %if.end, !dbg !11214

if.then6:                                         ; preds = %if.then
  %9 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11215
  %10 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !11216
  call void @ED_region_do_draw(%struct.bContext* %9, %struct.ARegion* %10), !dbg !11217
  br label %if.end, !dbg !11217

if.end:                                           ; preds = %if.then6, %if.then
  br label %if.end78, !dbg !11218

if.else:                                          ; preds = %for.body
  %11 = load i32, i32* %type, align 4, !dbg !11219
  %cmp7 = icmp eq i32 %11, 1, !dbg !11221
  br i1 %cmp7, label %if.then8, label %if.else10, !dbg !11222

if.then8:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win, metadata !11223, metadata !DIExpression()), !dbg !11225
  %12 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11226
  %call9 = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %12), !dbg !11227
  store %struct.wmWindow* %call9, %struct.wmWindow** %win, align 8, !dbg !11225
  %13 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11228
  call void @CTX_wm_menu_set(%struct.bContext* %13, %struct.ARegion* null), !dbg !11229
  %14 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !11230
  call void @ED_region_tag_redraw(%struct.ARegion* %14), !dbg !11231
  %15 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11232
  call void @wm_draw_update(%struct.bContext* %15), !dbg !11233
  %16 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11234
  %17 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !11235
  call void @CTX_wm_window_set(%struct.bContext* %16, %struct.wmWindow* %17), !dbg !11236
  br label %if.end77, !dbg !11237

if.else10:                                        ; preds = %if.else
  %18 = load i32, i32* %type, align 4, !dbg !11238
  %cmp11 = icmp eq i32 %18, 2, !dbg !11240
  br i1 %cmp11, label %if.then12, label %if.else31, !dbg !11241

if.then12:                                        ; preds = %if.else10
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win13, metadata !11242, metadata !DIExpression()), !dbg !11244
  %19 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11245
  %call14 = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %19), !dbg !11246
  store %struct.wmWindow* %call14, %struct.wmWindow** %win13, align 8, !dbg !11244
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !11247, metadata !DIExpression()), !dbg !11250
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa_back, metadata !11251, metadata !DIExpression()), !dbg !11252
  %20 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11253
  %call15 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %20), !dbg !11254
  store %struct.ScrArea* %call15, %struct.ScrArea** %sa_back, align 8, !dbg !11252
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar_back, metadata !11255, metadata !DIExpression()), !dbg !11256
  %21 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11257
  %call16 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %21), !dbg !11258
  store %struct.ARegion* %call16, %struct.ARegion** %ar_back, align 8, !dbg !11256
  %22 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11259
  call void @CTX_wm_menu_set(%struct.bContext* %22, %struct.ARegion* null), !dbg !11260
  %23 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11261
  %call17 = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %23), !dbg !11263
  %areabase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %call17, i32 0, i32 3, !dbg !11264
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %areabase, i32 0, i32 0, !dbg !11265
  %24 = load i8*, i8** %first, align 8, !dbg !11265
  %25 = bitcast i8* %24 to %struct.ScrArea*, !dbg !11263
  store %struct.ScrArea* %25, %struct.ScrArea** %sa, align 8, !dbg !11266
  br label %for.cond18, !dbg !11267

for.cond18:                                       ; preds = %for.inc28, %if.then12
  %26 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !11268
  %tobool19 = icmp ne %struct.ScrArea* %26, null, !dbg !11270
  br i1 %tobool19, label %for.body20, label %for.end30, !dbg !11270

for.body20:                                       ; preds = %for.cond18
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar_iter, metadata !11271, metadata !DIExpression()), !dbg !11273
  %27 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11274
  %28 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !11275
  call void @CTX_wm_area_set(%struct.bContext* %27, %struct.ScrArea* %28), !dbg !11276
  %29 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !11277
  %regionbase = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %29, i32 0, i32 20, !dbg !11279
  %first21 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %regionbase, i32 0, i32 0, !dbg !11280
  %30 = load i8*, i8** %first21, align 8, !dbg !11280
  %31 = bitcast i8* %30 to %struct.ARegion*, !dbg !11277
  store %struct.ARegion* %31, %struct.ARegion** %ar_iter, align 8, !dbg !11281
  br label %for.cond22, !dbg !11282

for.cond22:                                       ; preds = %for.inc, %for.body20
  %32 = load %struct.ARegion*, %struct.ARegion** %ar_iter, align 8, !dbg !11283
  %tobool23 = icmp ne %struct.ARegion* %32, null, !dbg !11285
  br i1 %tobool23, label %for.body24, label %for.end, !dbg !11285

for.body24:                                       ; preds = %for.cond22
  %33 = load %struct.ARegion*, %struct.ARegion** %ar_iter, align 8, !dbg !11286
  %swinid = getelementptr inbounds %struct.ARegion, %struct.ARegion* %33, i32 0, i32 7, !dbg !11289
  %34 = load i16, i16* %swinid, align 4, !dbg !11289
  %tobool25 = icmp ne i16 %34, 0, !dbg !11286
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !11290

if.then26:                                        ; preds = %for.body24
  %35 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11291
  %36 = load %struct.ARegion*, %struct.ARegion** %ar_iter, align 8, !dbg !11293
  call void @CTX_wm_region_set(%struct.bContext* %35, %struct.ARegion* %36), !dbg !11294
  %37 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11295
  %38 = load %struct.ARegion*, %struct.ARegion** %ar_iter, align 8, !dbg !11296
  call void @ED_region_do_draw(%struct.bContext* %37, %struct.ARegion* %38), !dbg !11297
  br label %if.end27, !dbg !11298

if.end27:                                         ; preds = %if.then26, %for.body24
  br label %for.inc, !dbg !11299

for.inc:                                          ; preds = %if.end27
  %39 = load %struct.ARegion*, %struct.ARegion** %ar_iter, align 8, !dbg !11300
  %next = getelementptr inbounds %struct.ARegion, %struct.ARegion* %39, i32 0, i32 0, !dbg !11301
  %40 = load %struct.ARegion*, %struct.ARegion** %next, align 8, !dbg !11301
  store %struct.ARegion* %40, %struct.ARegion** %ar_iter, align 8, !dbg !11302
  br label %for.cond22, !dbg !11303, !llvm.loop !11304

for.end:                                          ; preds = %for.cond22
  br label %for.inc28, !dbg !11306

for.inc28:                                        ; preds = %for.end
  %41 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !11307
  %next29 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %41, i32 0, i32 0, !dbg !11308
  %42 = load %struct.ScrArea*, %struct.ScrArea** %next29, align 8, !dbg !11308
  store %struct.ScrArea* %42, %struct.ScrArea** %sa, align 8, !dbg !11309
  br label %for.cond18, !dbg !11310, !llvm.loop !11311

for.end30:                                        ; preds = %for.cond18
  %43 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11313
  %44 = load %struct.wmWindow*, %struct.wmWindow** %win13, align 8, !dbg !11314
  call void @CTX_wm_window_set(%struct.bContext* %43, %struct.wmWindow* %44), !dbg !11315
  %45 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11316
  %46 = load %struct.ScrArea*, %struct.ScrArea** %sa_back, align 8, !dbg !11317
  call void @CTX_wm_area_set(%struct.bContext* %45, %struct.ScrArea* %46), !dbg !11318
  %47 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11319
  %48 = load %struct.ARegion*, %struct.ARegion** %ar_back, align 8, !dbg !11320
  call void @CTX_wm_region_set(%struct.bContext* %47, %struct.ARegion* %48), !dbg !11321
  br label %if.end76, !dbg !11322

if.else31:                                        ; preds = %if.else10
  %49 = load i32, i32* %type, align 4, !dbg !11323
  %cmp32 = icmp eq i32 %49, 3, !dbg !11325
  br i1 %cmp32, label %if.then33, label %if.else34, !dbg !11326

if.then33:                                        ; preds = %if.else31
  %50 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11327
  call void @redraw_timer_window_swap(%struct.bContext* %50), !dbg !11329
  br label %if.end75, !dbg !11330

if.else34:                                        ; preds = %if.else31
  %51 = load i32, i32* %type, align 4, !dbg !11331
  %cmp35 = icmp eq i32 %51, 4, !dbg !11333
  br i1 %cmp35, label %if.then36, label %if.else45, !dbg !11334

if.then36:                                        ; preds = %if.else34
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain, metadata !11335, metadata !DIExpression()), !dbg !11337
  %52 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11338
  %call37 = call %struct.Main* @CTX_data_main(%struct.bContext* %52), !dbg !11339
  store %struct.Main* %call37, %struct.Main** %bmain, align 8, !dbg !11337
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !11340, metadata !DIExpression()), !dbg !11341
  %53 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11342
  %call38 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %53), !dbg !11343
  store %struct.Scene* %call38, %struct.Scene** %scene, align 8, !dbg !11341
  %54 = load i32, i32* %a, align 4, !dbg !11344
  %and = and i32 %54, 1, !dbg !11346
  %tobool39 = icmp ne i32 %and, 0, !dbg !11346
  br i1 %tobool39, label %if.then40, label %if.else41, !dbg !11347

if.then40:                                        ; preds = %if.then36
  %55 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !11348
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %55, i32 0, i32 22, !dbg !11349
  %cfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r, i32 0, i32 5, !dbg !11350
  %56 = load i32, i32* %cfra, align 8, !dbg !11351
  %dec = add nsw i32 %56, -1, !dbg !11351
  store i32 %dec, i32* %cfra, align 8, !dbg !11351
  br label %if.end44, !dbg !11348

if.else41:                                        ; preds = %if.then36
  %57 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !11352
  %r42 = getelementptr inbounds %struct.Scene, %struct.Scene* %57, i32 0, i32 22, !dbg !11353
  %cfra43 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r42, i32 0, i32 5, !dbg !11354
  %58 = load i32, i32* %cfra43, align 8, !dbg !11355
  %inc = add nsw i32 %58, 1, !dbg !11355
  store i32 %inc, i32* %cfra43, align 8, !dbg !11355
  br label %if.end44

if.end44:                                         ; preds = %if.else41, %if.then40
  %59 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !11356
  %eval_ctx = getelementptr inbounds %struct.Main, %struct.Main* %59, i32 0, i32 46, !dbg !11357
  %60 = load %struct.EvaluationContext*, %struct.EvaluationContext** %eval_ctx, align 8, !dbg !11357
  %61 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !11358
  %62 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !11359
  %63 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !11360
  %lay = getelementptr inbounds %struct.Scene, %struct.Scene* %63, i32 0, i32 12, !dbg !11361
  %64 = load i32, i32* %lay, align 8, !dbg !11361
  call void @BKE_scene_update_for_newframe(%struct.EvaluationContext* %60, %struct.Main* %61, %struct.Scene* %62, i32 %64), !dbg !11362
  br label %if.end74, !dbg !11363

if.else45:                                        ; preds = %if.else34
  %65 = load i32, i32* %type, align 4, !dbg !11364
  %cmp46 = icmp eq i32 %65, 5, !dbg !11366
  br i1 %cmp46, label %if.then47, label %if.else72, !dbg !11367

if.then47:                                        ; preds = %if.else45
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain48, metadata !11368, metadata !DIExpression()), !dbg !11370
  %66 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11371
  %call49 = call %struct.Main* @CTX_data_main(%struct.bContext* %66), !dbg !11372
  store %struct.Main* %call49, %struct.Main** %bmain48, align 8, !dbg !11370
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene50, metadata !11373, metadata !DIExpression()), !dbg !11374
  %67 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11375
  %call51 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %67), !dbg !11376
  store %struct.Scene* %call51, %struct.Scene** %scene50, align 8, !dbg !11374
  call void @llvm.dbg.declare(metadata i32* %tot, metadata !11377, metadata !DIExpression()), !dbg !11378
  %68 = load %struct.Scene*, %struct.Scene** %scene50, align 8, !dbg !11379
  %r52 = getelementptr inbounds %struct.Scene, %struct.Scene* %68, i32 0, i32 22, !dbg !11380
  %efra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r52, i32 0, i32 7, !dbg !11381
  %69 = load i32, i32* %efra, align 8, !dbg !11381
  %70 = load %struct.Scene*, %struct.Scene** %scene50, align 8, !dbg !11382
  %r53 = getelementptr inbounds %struct.Scene, %struct.Scene* %70, i32 0, i32 22, !dbg !11383
  %sfra = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r53, i32 0, i32 6, !dbg !11384
  %71 = load i32, i32* %sfra, align 4, !dbg !11384
  %sub = sub nsw i32 %69, %71, !dbg !11385
  %add = add nsw i32 %sub, 1, !dbg !11386
  store i32 %add, i32* %tot, align 4, !dbg !11378
  br label %while.cond, !dbg !11387

while.cond:                                       ; preds = %if.end69, %if.then47
  %72 = load i32, i32* %tot, align 4, !dbg !11388
  %dec54 = add nsw i32 %72, -1, !dbg !11388
  store i32 %dec54, i32* %tot, align 4, !dbg !11388
  %tobool55 = icmp ne i32 %72, 0, !dbg !11387
  br i1 %tobool55, label %while.body, label %while.end, !dbg !11387

while.body:                                       ; preds = %while.cond
  %73 = load %struct.Scene*, %struct.Scene** %scene50, align 8, !dbg !11389
  %r56 = getelementptr inbounds %struct.Scene, %struct.Scene* %73, i32 0, i32 22, !dbg !11391
  %cfra57 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r56, i32 0, i32 5, !dbg !11392
  %74 = load i32, i32* %cfra57, align 8, !dbg !11393
  %inc58 = add nsw i32 %74, 1, !dbg !11393
  store i32 %inc58, i32* %cfra57, align 8, !dbg !11393
  %75 = load %struct.Scene*, %struct.Scene** %scene50, align 8, !dbg !11394
  %r59 = getelementptr inbounds %struct.Scene, %struct.Scene* %75, i32 0, i32 22, !dbg !11396
  %cfra60 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r59, i32 0, i32 5, !dbg !11397
  %76 = load i32, i32* %cfra60, align 8, !dbg !11397
  %77 = load %struct.Scene*, %struct.Scene** %scene50, align 8, !dbg !11398
  %r61 = getelementptr inbounds %struct.Scene, %struct.Scene* %77, i32 0, i32 22, !dbg !11399
  %efra62 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r61, i32 0, i32 7, !dbg !11400
  %78 = load i32, i32* %efra62, align 8, !dbg !11400
  %cmp63 = icmp sgt i32 %76, %78, !dbg !11401
  br i1 %cmp63, label %if.then64, label %if.end69, !dbg !11402

if.then64:                                        ; preds = %while.body
  %79 = load %struct.Scene*, %struct.Scene** %scene50, align 8, !dbg !11403
  %r65 = getelementptr inbounds %struct.Scene, %struct.Scene* %79, i32 0, i32 22, !dbg !11404
  %sfra66 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r65, i32 0, i32 6, !dbg !11405
  %80 = load i32, i32* %sfra66, align 4, !dbg !11405
  %81 = load %struct.Scene*, %struct.Scene** %scene50, align 8, !dbg !11406
  %r67 = getelementptr inbounds %struct.Scene, %struct.Scene* %81, i32 0, i32 22, !dbg !11407
  %cfra68 = getelementptr inbounds %struct.RenderData, %struct.RenderData* %r67, i32 0, i32 5, !dbg !11408
  store i32 %80, i32* %cfra68, align 8, !dbg !11409
  br label %if.end69, !dbg !11406

if.end69:                                         ; preds = %if.then64, %while.body
  %82 = load %struct.Main*, %struct.Main** %bmain48, align 8, !dbg !11410
  %eval_ctx70 = getelementptr inbounds %struct.Main, %struct.Main* %82, i32 0, i32 46, !dbg !11411
  %83 = load %struct.EvaluationContext*, %struct.EvaluationContext** %eval_ctx70, align 8, !dbg !11411
  %84 = load %struct.Main*, %struct.Main** %bmain48, align 8, !dbg !11412
  %85 = load %struct.Scene*, %struct.Scene** %scene50, align 8, !dbg !11413
  %86 = load %struct.Scene*, %struct.Scene** %scene50, align 8, !dbg !11414
  %lay71 = getelementptr inbounds %struct.Scene, %struct.Scene* %86, i32 0, i32 12, !dbg !11415
  %87 = load i32, i32* %lay71, align 8, !dbg !11415
  call void @BKE_scene_update_for_newframe(%struct.EvaluationContext* %83, %struct.Main* %84, %struct.Scene* %85, i32 %87), !dbg !11416
  %88 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11417
  call void @redraw_timer_window_swap(%struct.bContext* %88), !dbg !11418
  br label %while.cond, !dbg !11387, !llvm.loop !11419

while.end:                                        ; preds = %while.cond
  br label %if.end73, !dbg !11421

if.else72:                                        ; preds = %if.else45
  %89 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11422
  call void @ED_undo_pop(%struct.bContext* %89), !dbg !11424
  %90 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11425
  call void @ED_undo_redo(%struct.bContext* %90), !dbg !11426
  br label %if.end73

if.end73:                                         ; preds = %if.else72, %while.end
  br label %if.end74

if.end74:                                         ; preds = %if.end73, %if.end44
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %if.then33
  br label %if.end76

if.end76:                                         ; preds = %if.end75, %for.end30
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.then8
  br label %if.end78

if.end78:                                         ; preds = %if.end77, %if.end
  br label %for.inc79, !dbg !11427

for.inc79:                                        ; preds = %if.end78
  %91 = load i32, i32* %a, align 4, !dbg !11428
  %inc80 = add nsw i32 %91, 1, !dbg !11428
  store i32 %inc80, i32* %a, align 4, !dbg !11428
  br label %for.cond, !dbg !11429, !llvm.loop !11430

for.end81:                                        ; preds = %for.cond
  %call82 = call double @PIL_check_seconds_timer(), !dbg !11432
  %92 = load double, double* %stime, align 8, !dbg !11433
  %sub83 = fsub double %call82, %92, !dbg !11434
  %mul = fmul double %sub83, 1.000000e+03, !dbg !11435
  %conv = fptrunc double %mul to float, !dbg !11436
  store float %conv, float* %time, align 4, !dbg !11437
  %93 = load i32, i32* %type, align 4, !dbg !11438
  %call84 = call zeroext i8 @RNA_enum_description(%struct.EnumPropertyItem* getelementptr inbounds ([8 x %struct.EnumPropertyItem], [8 x %struct.EnumPropertyItem]* @redraw_timer_type_items, i64 0, i64 0), i32 %93, i8** %infostr), !dbg !11439
  call void @WM_cursor_wait(i8 zeroext 0), !dbg !11440
  %94 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !11441
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %94, i32 0, i32 8, !dbg !11442
  %95 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !11442
  %96 = load i32, i32* %iter, align 4, !dbg !11443
  %97 = load i8*, i8** %infostr, align 8, !dbg !11444
  %98 = load float, float* %time, align 4, !dbg !11445
  %conv85 = fpext float %98 to double, !dbg !11445
  %99 = load float, float* %time, align 4, !dbg !11446
  %100 = load i32, i32* %iter, align 4, !dbg !11447
  %conv86 = sitofp i32 %100 to float, !dbg !11447
  %div = fdiv float %99, %conv86, !dbg !11448
  %conv87 = fpext float %div to double, !dbg !11446
  call void (%struct.ReportList*, i32, i8*, ...) @BKE_reportf(%struct.ReportList* %95, i32 16, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.277, i64 0, i64 0), i32 %96, i8* %97, double %conv85, double %conv87), !dbg !11449
  ret i32 4, !dbg !11450
}

declare dso_local double @PIL_check_seconds_timer() #2

declare dso_local i32 @RNA_enum_get(%struct.PointerRNA*, i8*) #2

declare dso_local void @WM_cursor_wait(i8 zeroext) #2

declare dso_local void @ED_region_do_draw(%struct.bContext*, %struct.ARegion*) #2

declare dso_local void @CTX_wm_menu_set(%struct.bContext*, %struct.ARegion*) #2

declare dso_local void @ED_region_tag_redraw(%struct.ARegion*) #2

declare dso_local void @wm_draw_update(%struct.bContext*) #2

declare dso_local void @CTX_wm_window_set(%struct.bContext*, %struct.wmWindow*) #2

declare dso_local %struct.bScreen* @CTX_wm_screen(%struct.bContext*) #2

declare dso_local void @CTX_wm_area_set(%struct.bContext*, %struct.ScrArea*) #2

declare dso_local void @CTX_wm_region_set(%struct.bContext*, %struct.ARegion*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @redraw_timer_window_swap(%struct.bContext* %C) #0 !dbg !11451 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %win = alloca %struct.wmWindow*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !11454, metadata !DIExpression()), !dbg !11455
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win, metadata !11456, metadata !DIExpression()), !dbg !11457
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11458
  %call = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %0), !dbg !11459
  store %struct.wmWindow* %call, %struct.wmWindow** %win, align 8, !dbg !11457
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !11460, metadata !DIExpression()), !dbg !11461
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11462
  call void @CTX_wm_menu_set(%struct.bContext* %1, %struct.ARegion* null), !dbg !11463
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11464
  %call1 = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %2), !dbg !11466
  %areabase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %call1, i32 0, i32 3, !dbg !11467
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %areabase, i32 0, i32 0, !dbg !11468
  %3 = load i8*, i8** %first, align 8, !dbg !11468
  %4 = bitcast i8* %3 to %struct.ScrArea*, !dbg !11466
  store %struct.ScrArea* %4, %struct.ScrArea** %sa, align 8, !dbg !11469
  br label %for.cond, !dbg !11470

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !11471
  %tobool = icmp ne %struct.ScrArea* %5, null, !dbg !11473
  br i1 %tobool, label %for.body, label %for.end, !dbg !11473

for.body:                                         ; preds = %for.cond
  %6 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !11474
  call void @ED_area_tag_redraw(%struct.ScrArea* %6), !dbg !11475
  br label %for.inc, !dbg !11475

for.inc:                                          ; preds = %for.body
  %7 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !11476
  %next = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %7, i32 0, i32 0, !dbg !11477
  %8 = load %struct.ScrArea*, %struct.ScrArea** %next, align 8, !dbg !11477
  store %struct.ScrArea* %8, %struct.ScrArea** %sa, align 8, !dbg !11478
  br label %for.cond, !dbg !11479, !llvm.loop !11480

for.end:                                          ; preds = %for.cond
  %9 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11482
  call void @wm_draw_update(%struct.bContext* %9), !dbg !11483
  %10 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11484
  %11 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !11485
  call void @CTX_wm_window_set(%struct.bContext* %10, %struct.wmWindow* %11), !dbg !11486
  ret void, !dbg !11487
}

declare dso_local void @BKE_scene_update_for_newframe(%struct.EvaluationContext*, %struct.Main*, %struct.Scene*, i32) #2

declare dso_local void @ED_undo_pop(%struct.bContext*) #2

declare dso_local void @ED_undo_redo(%struct.bContext*) #2

declare dso_local zeroext i8 @RNA_enum_description(%struct.EnumPropertyItem*, i32, i8**) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @memory_statistics_exec(%struct.bContext* %UNUSED_C, %struct.wmOperator* %UNUSED_op) #0 !dbg !11488 {
entry:
  %UNUSED_C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %UNUSED_C, %struct.bContext** %UNUSED_C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %UNUSED_C.addr, metadata !11489, metadata !DIExpression()), !dbg !11490
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !11491, metadata !DIExpression()), !dbg !11492
  %0 = load void ()*, void ()** @MEM_printmemlist_stats, align 8, !dbg !11493
  call void %0(), !dbg !11493
  ret i32 4, !dbg !11494
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @dependency_relations_exec(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op) #0 !dbg !11495 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %bmain = alloca %struct.Main*, align 8
  %scene = alloca %struct.Scene*, align 8
  %ob = alloca %struct.Object*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !11496, metadata !DIExpression()), !dbg !11497
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !11498, metadata !DIExpression()), !dbg !11499
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain, metadata !11500, metadata !DIExpression()), !dbg !11501
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11502
  %call = call %struct.Main* @CTX_data_main(%struct.bContext* %0), !dbg !11503
  store %struct.Main* %call, %struct.Main** %bmain, align 8, !dbg !11501
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !11504, metadata !DIExpression()), !dbg !11505
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11506
  %call1 = call %struct.Scene* @CTX_data_scene(%struct.bContext* %1), !dbg !11507
  store %struct.Scene* %call1, %struct.Scene** %scene, align 8, !dbg !11505
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !11508, metadata !DIExpression()), !dbg !11509
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11510
  %call2 = call %struct.Object* @CTX_data_active_object(%struct.bContext* %2), !dbg !11511
  store %struct.Object* %call2, %struct.Object** %ob, align 8, !dbg !11509
  %3 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !11512
  %4 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !11513
  %5 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !11514
  call void @DAG_print_dependencies(%struct.Main* %3, %struct.Scene* %4, %struct.Object* %5), !dbg !11515
  ret i32 4, !dbg !11516
}

declare dso_local %struct.Object* @CTX_data_active_object(%struct.bContext*) #2

declare dso_local void @DAG_print_dependencies(%struct.Main*, %struct.Scene*, %struct.Object*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @wm_debug_menu_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %UNUSED_event) #0 !dbg !11517 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %UNUSED_event.addr = alloca %struct.wmEvent*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !11518, metadata !DIExpression()), !dbg !11519
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !11520, metadata !DIExpression()), !dbg !11521
  store %struct.wmEvent* %UNUSED_event, %struct.wmEvent** %UNUSED_event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %UNUSED_event.addr, metadata !11522, metadata !DIExpression()), !dbg !11523
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !11524
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 7, !dbg !11525
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !11525
  %2 = load i16, i16* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 14), align 4, !dbg !11526
  %conv = sext i16 %2 to i32, !dbg !11527
  call void @RNA_int_set(%struct.PointerRNA* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.304, i64 0, i64 0), i32 %conv), !dbg !11528
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11529
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !11530
  %5 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !11531
  %conv1 = sext i16 %5 to i32, !dbg !11531
  %mul = mul nsw i32 9, %conv1, !dbg !11532
  %6 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !11533
  %conv2 = sext i16 %6 to i32, !dbg !11533
  %call = call i32 @WM_operator_props_dialog_popup(%struct.bContext* %3, %struct.wmOperator* %4, i32 %mul, i32 %conv2), !dbg !11534
  ret i32 %call, !dbg !11535
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @wm_debug_menu_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !11536 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !11537, metadata !DIExpression()), !dbg !11538
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !11539, metadata !DIExpression()), !dbg !11540
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !11541
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 7, !dbg !11542
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !11542
  %call = call i32 @RNA_int_get(%struct.PointerRNA* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.304, i64 0, i64 0)), !dbg !11543
  %conv = trunc i32 %call to i16, !dbg !11543
  store i16 %conv, i16* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 14), align 4, !dbg !11544
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11545
  %call1 = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %2), !dbg !11546
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11547
  %call2 = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %3), !dbg !11548
  call void @ED_screen_refresh(%struct.wmWindowManager* %call1, %struct.wmWindow* %call2), !dbg !11549
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11550
  call void @WM_event_add_notifier(%struct.bContext* %4, i32 33554432, i8* null), !dbg !11551
  ret i32 4, !dbg !11552
}

declare dso_local void @ED_screen_refresh(%struct.wmWindowManager*, %struct.wmWindow*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @wm_operator_defaults_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !11553 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %ptr = alloca %struct.PointerRNA, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !11554, metadata !DIExpression()), !dbg !11555
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !11556, metadata !DIExpression()), !dbg !11557
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %ptr, metadata !11558, metadata !DIExpression()), !dbg !11559
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11560
  call void @CTX_data_pointer_get_type(%struct.PointerRNA* sret %ptr, %struct.bContext* %0, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.309, i64 0, i64 0), %struct.StructRNA* @RNA_Operator), !dbg !11561
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr, i32 0, i32 2, !dbg !11562
  %1 = load i8*, i8** %data, align 8, !dbg !11562
  %tobool = icmp ne i8* %1, null, !dbg !11564
  br i1 %tobool, label %if.end, label %if.then, !dbg !11565

if.then:                                          ; preds = %entry
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !11566
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 8, !dbg !11568
  %3 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !11568
  call void @BKE_report(%struct.ReportList* %3, i32 32, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.310, i64 0, i64 0)), !dbg !11569
  store i32 2, i32* %retval, align 4, !dbg !11570
  br label %return, !dbg !11570

if.end:                                           ; preds = %entry
  %data1 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr, i32 0, i32 2, !dbg !11571
  %4 = load i8*, i8** %data1, align 8, !dbg !11571
  %5 = bitcast i8* %4 to %struct.wmOperator*, !dbg !11572
  call void @WM_operator_properties_reset(%struct.wmOperator* %5), !dbg !11573
  store i32 4, i32* %retval, align 4, !dbg !11574
  br label %return, !dbg !11574

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !11575
  ret i32 %6, !dbg !11575
}

declare dso_local void @CTX_data_pointer_get_type(%struct.PointerRNA* sret, %struct.bContext*, i8*, %struct.StructRNA*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @wm_splash_invoke(%struct.bContext* %C, %struct.wmOperator* %UNUSED_op, %struct.wmEvent* %UNUSED_event) #0 !dbg !11576 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  %UNUSED_event.addr = alloca %struct.wmEvent*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !11577, metadata !DIExpression()), !dbg !11578
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !11579, metadata !DIExpression()), !dbg !11580
  store %struct.wmEvent* %UNUSED_event, %struct.wmEvent** %UNUSED_event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %UNUSED_event.addr, metadata !11581, metadata !DIExpression()), !dbg !11582
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11583
  call void @uiPupBlock(%struct.bContext* %0, %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)* @wm_block_create_splash, i8* null), !dbg !11584
  ret i32 4, !dbg !11585
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.uiBlock* @wm_block_create_splash(%struct.bContext* %C, %struct.ARegion* %ar, i8* %UNUSED_arg) #0 !dbg !11586 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %UNUSED_arg.addr = alloca i8*, align 8
  %block = alloca %struct.uiBlock*, align 8
  %but = alloca %struct.uiBut*, align 8
  %layout = alloca %struct.uiLayout*, align 8
  %split = alloca %struct.uiLayout*, align 8
  %col = alloca %struct.uiLayout*, align 8
  %style = alloca %struct.uiStyle*, align 8
  %recent = alloca %struct.RecentFile*, align 8
  %i = alloca i32, align 4
  %mt = alloca %struct.MenuType*, align 8
  %url = alloca [96 x i8], align 16
  %version_suffix = alloca i8*, align 8
  %ibuf = alloca %struct.ImBuf*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %w = alloca i32, align 4
  %menu = alloca %struct.Menu, align 8
  %filename = alloca i8*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !11587, metadata !DIExpression()), !dbg !11588
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !11589, metadata !DIExpression()), !dbg !11590
  store i8* %UNUSED_arg, i8** %UNUSED_arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_arg.addr, metadata !11591, metadata !DIExpression()), !dbg !11592
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block, metadata !11593, metadata !DIExpression()), !dbg !11594
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !11595, metadata !DIExpression()), !dbg !11596
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %layout, metadata !11597, metadata !DIExpression()), !dbg !11598
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %split, metadata !11599, metadata !DIExpression()), !dbg !11600
  call void @llvm.dbg.declare(metadata %struct.uiLayout** %col, metadata !11601, metadata !DIExpression()), !dbg !11602
  call void @llvm.dbg.declare(metadata %struct.uiStyle** %style, metadata !11603, metadata !DIExpression()), !dbg !11604
  %call = call %struct.uiStyle* @UI_GetStyle(), !dbg !11605
  store %struct.uiStyle* %call, %struct.uiStyle** %style, align 8, !dbg !11604
  call void @llvm.dbg.declare(metadata %struct.RecentFile** %recent, metadata !11606, metadata !DIExpression()), !dbg !11609
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11610, metadata !DIExpression()), !dbg !11611
  call void @llvm.dbg.declare(metadata %struct.MenuType** %mt, metadata !11612, metadata !DIExpression()), !dbg !11638
  %call1 = call %struct.MenuType* @WM_menutype_find(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.314, i64 0, i64 0), i8 zeroext 1), !dbg !11639
  store %struct.MenuType* %call1, %struct.MenuType** %mt, align 8, !dbg !11638
  call void @llvm.dbg.declare(metadata [96 x i8]* %url, metadata !11640, metadata !DIExpression()), !dbg !11644
  call void @llvm.dbg.declare(metadata i8** %version_suffix, metadata !11645, metadata !DIExpression()), !dbg !11646
  store i8* null, i8** %version_suffix, align 8, !dbg !11646
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !11647, metadata !DIExpression()), !dbg !11712
  store %struct.ImBuf* null, %struct.ImBuf** %ibuf, align 8, !dbg !11712
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11713
  %1 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !11714
  %call2 = call %struct.uiBlock* @uiBeginBlock(%struct.bContext* %0, %struct.ARegion* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.174, i64 0, i64 0), i16 signext 0), !dbg !11715
  store %struct.uiBlock* %call2, %struct.uiBlock** %block, align 8, !dbg !11716
  %2 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !11717
  call void @uiBlockSetFlag(%struct.uiBlock* %2, i32 272), !dbg !11718
  %3 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !11719
  %4 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !11720
  %conv = sext i16 %4 to i32, !dbg !11721
  %conv3 = sitofp i32 %conv to float, !dbg !11721
  %mul = fmul float 5.000000e-01, %conv3, !dbg !11722
  %conv4 = fptosi float %mul to i32, !dbg !11723
  %5 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !11724
  %mul5 = fmul float %5, 5.010000e+02, !dbg !11725
  %conv6 = fptosi float %mul5 to i16, !dbg !11726
  %6 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !11727
  %mul7 = fmul float %6, 2.820000e+02, !dbg !11728
  %conv8 = fptosi float %mul7 to i16, !dbg !11729
  %7 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !11730
  %8 = bitcast %struct.ImBuf* %7 to i8*, !dbg !11730
  %call9 = call %struct.uiBut* @uiDefBut(%struct.uiBlock* %3, i32 24064, i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i32 0, i32 %conv4, i16 signext %conv6, i16 signext %conv8, i8* %8, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)), !dbg !11731
  store %struct.uiBut* %call9, %struct.uiBut** %but, align 8, !dbg !11732
  %9 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11733
  %10 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !11734
  %11 = bitcast %struct.uiBlock* %10 to i8*, !dbg !11734
  call void @uiButSetFunc(%struct.uiBut* %9, void (%struct.bContext*, i8*, i8*)* @wm_block_splash_close, i8* %11, i8* null), !dbg !11735
  %12 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !11736
  %13 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !11737
  %14 = bitcast %struct.uiBlock* %13 to i8*, !dbg !11737
  call void @uiBlockSetFunc(%struct.uiBlock* %12, void (%struct.bContext*, i8*, i8*)* @wm_block_splash_refreshmenu, i8* %14, i8* null), !dbg !11738
  %15 = load i8*, i8** %version_suffix, align 8, !dbg !11739
  %cmp = icmp ne i8* %15, null, !dbg !11741
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !11742

land.lhs.true:                                    ; preds = %entry
  %16 = load i8*, i8** %version_suffix, align 8, !dbg !11743
  %arrayidx = getelementptr inbounds i8, i8* %16, i64 0, !dbg !11743
  %17 = load i8, i8* %arrayidx, align 1, !dbg !11743
  %conv11 = zext i8 %17 to i32, !dbg !11743
  %tobool = icmp ne i32 %conv11, 0, !dbg !11743
  br i1 %tobool, label %if.then, label %if.end, !dbg !11744

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %x, metadata !11745, metadata !DIExpression()), !dbg !11747
  %18 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 33), align 4, !dbg !11748
  %conv12 = sitofp i32 %18 to float, !dbg !11748
  %div = fdiv float %conv12, 7.200000e+01, !dbg !11748
  %mul13 = fmul float 2.000000e+00, %div, !dbg !11749
  %sub = fsub float 2.600000e+02, %mul13, !dbg !11750
  %conv14 = fptosi float %sub to i32, !dbg !11751
  store i32 %conv14, i32* %x, align 4, !dbg !11747
  call void @llvm.dbg.declare(metadata i32* %y, metadata !11752, metadata !DIExpression()), !dbg !11753
  %19 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 33), align 4, !dbg !11754
  %conv15 = sitofp i32 %19 to float, !dbg !11754
  %div16 = fdiv float %conv15, 7.200000e+01, !dbg !11754
  %mul17 = fmul float 4.000000e+00, %div16, !dbg !11755
  %add = fadd float 2.420000e+02, %mul17, !dbg !11756
  %conv18 = fptosi float %add to i32, !dbg !11757
  store i32 %conv18, i32* %y, align 4, !dbg !11753
  call void @llvm.dbg.declare(metadata i32* %w, metadata !11758, metadata !DIExpression()), !dbg !11759
  store i32 240, i32* %w, align 4, !dbg !11759
  %20 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !11760
  call void @uiBlockSetEmboss(%struct.uiBlock* %20, i8 zeroext 1), !dbg !11761
  %21 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !11762
  %22 = load i8*, i8** %version_suffix, align 8, !dbg !11763
  %23 = load i32, i32* %x, align 4, !dbg !11764
  %conv19 = sitofp i32 %23 to float, !dbg !11764
  %24 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !11765
  %mul20 = fmul float %conv19, %24, !dbg !11766
  %conv21 = fptosi float %mul20 to i32, !dbg !11764
  %25 = load i32, i32* %y, align 4, !dbg !11767
  %conv22 = sitofp i32 %25 to float, !dbg !11767
  %26 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !11768
  %mul23 = fmul float %conv22, %26, !dbg !11769
  %conv24 = fptosi float %mul23 to i32, !dbg !11767
  %27 = load i32, i32* %w, align 4, !dbg !11770
  %conv25 = sitofp i32 %27 to float, !dbg !11770
  %28 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !11771
  %mul26 = fmul float %conv25, %28, !dbg !11772
  %conv27 = fptosi float %mul26 to i16, !dbg !11770
  %29 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !11773
  %call28 = call %struct.uiBut* @uiDefBut(%struct.uiBlock* %21, i32 5120, i32 0, i8* %22, i32 %conv21, i32 %conv24, i16 signext %conv27, i16 signext %29, i8* null, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, i8* null), !dbg !11774
  store %struct.uiBut* %call28, %struct.uiBut** %but, align 8, !dbg !11775
  %30 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !11776
  call void @uiButSetFlag(%struct.uiBut* %30, i32 1), !dbg !11777
  %31 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !11778
  call void @uiBlockSetEmboss(%struct.uiBlock* %31, i8 zeroext 0), !dbg !11779
  br label %if.end, !dbg !11780

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %32 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !11781
  %33 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !11782
  %mul29 = fmul float %33, 4.800000e+02, !dbg !11783
  %conv30 = fptosi float %mul29 to i32, !dbg !11784
  %34 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !11785
  %mul31 = fmul float %34, 1.100000e+02, !dbg !11786
  %conv32 = fptosi float %mul31 to i32, !dbg !11787
  %35 = load %struct.uiStyle*, %struct.uiStyle** %style, align 8, !dbg !11788
  %call33 = call %struct.uiLayout* @uiBlockLayout(%struct.uiBlock* %32, i32 1, i32 0, i32 10, i32 2, i32 %conv30, i32 %conv32, i32 0, %struct.uiStyle* %35), !dbg !11789
  store %struct.uiLayout* %call33, %struct.uiLayout** %layout, align 8, !dbg !11790
  %36 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !11791
  call void @uiBlockSetEmboss(%struct.uiBlock* %36, i8 zeroext 0), !dbg !11792
  %37 = load %struct.MenuType*, %struct.MenuType** %mt, align 8, !dbg !11793
  %tobool34 = icmp ne %struct.MenuType* %37, null, !dbg !11793
  br i1 %tobool34, label %if.then35, label %if.end37, !dbg !11795

if.then35:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.Menu* %menu, metadata !11796, metadata !DIExpression()), !dbg !11799
  %38 = bitcast %struct.Menu* %menu to i8*, !dbg !11799
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 16, i1 false), !dbg !11799
  %39 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !11800
  %layout36 = getelementptr inbounds %struct.Menu, %struct.Menu* %menu, i32 0, i32 1, !dbg !11801
  store %struct.uiLayout* %39, %struct.uiLayout** %layout36, align 8, !dbg !11802
  %40 = load %struct.MenuType*, %struct.MenuType** %mt, align 8, !dbg !11803
  %type = getelementptr inbounds %struct.Menu, %struct.Menu* %menu, i32 0, i32 0, !dbg !11804
  store %struct.MenuType* %40, %struct.MenuType** %type, align 8, !dbg !11805
  %41 = load %struct.MenuType*, %struct.MenuType** %mt, align 8, !dbg !11806
  %draw = getelementptr inbounds %struct.MenuType, %struct.MenuType* %41, i32 0, i32 7, !dbg !11807
  %42 = load void (%struct.bContext*, %struct.Menu*)*, void (%struct.bContext*, %struct.Menu*)** %draw, align 8, !dbg !11807
  %43 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11808
  call void %42(%struct.bContext* %43, %struct.Menu* %menu), !dbg !11806
  br label %if.end37, !dbg !11809

if.end37:                                         ; preds = %if.then35, %if.end
  %44 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !11810
  call void @uiBlockSetEmboss(%struct.uiBlock* %44, i8 zeroext 2), !dbg !11811
  %45 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !11812
  call void @uiLayoutSetOperatorContext(%struct.uiLayout* %45, i32 7), !dbg !11813
  %46 = load %struct.uiLayout*, %struct.uiLayout** %layout, align 8, !dbg !11814
  %call38 = call %struct.uiLayout* @uiLayoutSplit(%struct.uiLayout* %46, float 0.000000e+00, i32 0), !dbg !11815
  store %struct.uiLayout* %call38, %struct.uiLayout** %split, align 8, !dbg !11816
  %47 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !11817
  %call39 = call %struct.uiLayout* @uiLayoutColumn(%struct.uiLayout* %47, i32 0), !dbg !11818
  store %struct.uiLayout* %call39, %struct.uiLayout** %col, align 8, !dbg !11819
  %48 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !11820
  call void @uiItemL(%struct.uiLayout* %48, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.315, i64 0, i64 0), i32 0), !dbg !11821
  %49 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !11822
  call void @uiItemStringO(%struct.uiLayout* %49, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.316, i64 0, i64 0), i32 72, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.317, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.318, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.319, i64 0, i64 0)), !dbg !11823
  %50 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !11824
  call void @uiItemStringO(%struct.uiLayout* %50, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.320, i64 0, i64 0), i32 72, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.317, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.318, i64 0, i64 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.321, i64 0, i64 0)), !dbg !11825
  %51 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !11826
  call void @uiItemStringO(%struct.uiLayout* %51, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.322, i64 0, i64 0), i32 72, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.317, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.318, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.323, i64 0, i64 0)), !dbg !11827
  %arraydecay = getelementptr inbounds [96 x i8], [96 x i8]* %url, i64 0, i64 0, !dbg !11828
  %call40 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay, i64 96, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.324, i64 0, i64 0), i32 2, i32 72), !dbg !11829
  %52 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !11830
  %arraydecay41 = getelementptr inbounds [96 x i8], [96 x i8]* %url, i64 0, i64 0, !dbg !11831
  call void @uiItemStringO(%struct.uiLayout* %52, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.325, i64 0, i64 0), i32 72, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.317, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.318, i64 0, i64 0), i8* %arraydecay41), !dbg !11832
  %53 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !11833
  call void @uiItemStringO(%struct.uiLayout* %53, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.326, i64 0, i64 0), i32 72, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.317, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.318, i64 0, i64 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.327, i64 0, i64 0)), !dbg !11834
  %54 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !11835
  call void @uiItemStringO(%struct.uiLayout* %54, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.328, i64 0, i64 0), i32 72, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.317, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.318, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.329, i64 0, i64 0)), !dbg !11836
  %arraydecay42 = getelementptr inbounds [96 x i8], [96 x i8]* %url, i64 0, i64 0, !dbg !11837
  %call43 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay42, i64 96, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.330, i64 0, i64 0), i32 2, i32 72, i32 1), !dbg !11840
  %55 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !11841
  %arraydecay44 = getelementptr inbounds [96 x i8], [96 x i8]* %url, i64 0, i64 0, !dbg !11842
  call void @uiItemStringO(%struct.uiLayout* %55, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.331, i64 0, i64 0), i32 72, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.317, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.318, i64 0, i64 0), i8* %arraydecay44), !dbg !11843
  %56 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !11844
  call void @uiItemL(%struct.uiLayout* %56, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i32 0), !dbg !11845
  %57 = load %struct.uiLayout*, %struct.uiLayout** %split, align 8, !dbg !11846
  %call45 = call %struct.uiLayout* @uiLayoutColumn(%struct.uiLayout* %57, i32 0), !dbg !11847
  store %struct.uiLayout* %call45, %struct.uiLayout** %col, align 8, !dbg !11848
  %call46 = call i32 @wm_resource_check_prev(), !dbg !11849
  %tobool47 = icmp ne i32 %call46, 0, !dbg !11849
  br i1 %tobool47, label %if.then48, label %if.end49, !dbg !11851

if.then48:                                        ; preds = %if.end37
  %58 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !11852
  call void @uiItemO(%struct.uiLayout* %58, i8* null, i32 69, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.332, i64 0, i64 0)), !dbg !11854
  %59 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !11855
  call void @uiItemS(%struct.uiLayout* %59), !dbg !11856
  br label %if.end49, !dbg !11857

if.end49:                                         ; preds = %if.then48, %if.end37
  %60 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !11858
  call void @uiItemL(%struct.uiLayout* %60, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.333, i64 0, i64 0), i32 0), !dbg !11859
  %61 = load i8*, i8** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 6, i32 0), align 8, !dbg !11860
  %62 = bitcast i8* %61 to %struct.RecentFile*, !dbg !11862
  store %struct.RecentFile* %62, %struct.RecentFile** %recent, align 8, !dbg !11863
  store i32 0, i32* %i, align 4, !dbg !11864
  br label %for.cond, !dbg !11865

for.cond:                                         ; preds = %for.inc, %if.end49
  %63 = load i32, i32* %i, align 4, !dbg !11866
  %cmp50 = icmp slt i32 %63, 5, !dbg !11868
  br i1 %cmp50, label %land.rhs, label %land.end, !dbg !11869

land.rhs:                                         ; preds = %for.cond
  %64 = load %struct.RecentFile*, %struct.RecentFile** %recent, align 8, !dbg !11870
  %tobool52 = icmp ne %struct.RecentFile* %64, null, !dbg !11869
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %65 = phi i1 [ false, %for.cond ], [ %tobool52, %land.rhs ], !dbg !11871
  br i1 %65, label %for.body, label %for.end, !dbg !11872

for.body:                                         ; preds = %land.end
  call void @llvm.dbg.declare(metadata i8** %filename, metadata !11873, metadata !DIExpression()), !dbg !11875
  %66 = load %struct.RecentFile*, %struct.RecentFile** %recent, align 8, !dbg !11876
  %filepath = getelementptr inbounds %struct.RecentFile, %struct.RecentFile* %66, i32 0, i32 2, !dbg !11877
  %67 = load i8*, i8** %filepath, align 8, !dbg !11877
  %call53 = call i8* @BLI_path_basename(i8* %67), !dbg !11878
  store i8* %call53, i8** %filename, align 8, !dbg !11875
  %68 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !11879
  %69 = load i8*, i8** %filename, align 8, !dbg !11880
  %70 = load i8*, i8** %filename, align 8, !dbg !11881
  %call54 = call zeroext i8 @BLO_has_bfile_extension(i8* %70), !dbg !11882
  %conv55 = zext i8 %call54 to i32, !dbg !11882
  %tobool56 = icmp ne i32 %conv55, 0, !dbg !11882
  %71 = zext i1 %tobool56 to i64, !dbg !11882
  %cond = select i1 %tobool56, i32 695, i32 726, !dbg !11882
  %72 = load %struct.RecentFile*, %struct.RecentFile** %recent, align 8, !dbg !11883
  %filepath57 = getelementptr inbounds %struct.RecentFile, %struct.RecentFile* %72, i32 0, i32 2, !dbg !11884
  %73 = load i8*, i8** %filepath57, align 8, !dbg !11884
  call void @uiItemStringO(%struct.uiLayout* %68, i8* %69, i32 %cond, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.132, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.20, i64 0, i64 0), i8* %73), !dbg !11885
  br label %for.inc, !dbg !11886

for.inc:                                          ; preds = %for.body
  %74 = load %struct.RecentFile*, %struct.RecentFile** %recent, align 8, !dbg !11887
  %next = getelementptr inbounds %struct.RecentFile, %struct.RecentFile* %74, i32 0, i32 0, !dbg !11888
  %75 = load %struct.RecentFile*, %struct.RecentFile** %next, align 8, !dbg !11888
  store %struct.RecentFile* %75, %struct.RecentFile** %recent, align 8, !dbg !11889
  %76 = load i32, i32* %i, align 4, !dbg !11890
  %inc = add nsw i32 %76, 1, !dbg !11890
  store i32 %inc, i32* %i, align 4, !dbg !11890
  br label %for.cond, !dbg !11891, !llvm.loop !11892

for.end:                                          ; preds = %land.end
  %77 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !11894
  call void @uiItemS(%struct.uiLayout* %77), !dbg !11895
  %78 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !11896
  call void @uiItemO(%struct.uiLayout* %78, i8* null, i32 73, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.247, i64 0, i64 0)), !dbg !11897
  %79 = load %struct.uiLayout*, %struct.uiLayout** %col, align 8, !dbg !11898
  call void @uiItemL(%struct.uiLayout* %79, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i32 0), !dbg !11899
  %80 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !11900
  call void @uiCenteredBoundsBlock(%struct.uiBlock* %80, i32 0), !dbg !11901
  %81 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !11902
  ret %struct.uiBlock* %81, !dbg !11903
}

declare dso_local %struct.MenuType* @WM_menutype_find(i8*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal void @wm_block_splash_close(%struct.bContext* %C, i8* %arg_block, i8* %UNUSED_arg) #0 !dbg !11904 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %arg_block.addr = alloca i8*, align 8
  %UNUSED_arg.addr = alloca i8*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !11905, metadata !DIExpression()), !dbg !11906
  store i8* %arg_block, i8** %arg_block.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %arg_block.addr, metadata !11907, metadata !DIExpression()), !dbg !11908
  store i8* %UNUSED_arg, i8** %UNUSED_arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_arg.addr, metadata !11909, metadata !DIExpression()), !dbg !11910
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11911
  %1 = load i8*, i8** %arg_block.addr, align 8, !dbg !11912
  %2 = bitcast i8* %1 to %struct.uiBlock*, !dbg !11912
  call void @uiPupBlockClose(%struct.bContext* %0, %struct.uiBlock* %2), !dbg !11913
  ret void, !dbg !11914
}

; Function Attrs: noinline nounwind uwtable
define internal void @wm_block_splash_refreshmenu(%struct.bContext* %UNUSED_C, i8* %UNUSED_arg_block, i8* %UNUSED_arg) #0 !dbg !11915 {
entry:
  %UNUSED_C.addr = alloca %struct.bContext*, align 8
  %UNUSED_arg_block.addr = alloca i8*, align 8
  %UNUSED_arg.addr = alloca i8*, align 8
  store %struct.bContext* %UNUSED_C, %struct.bContext** %UNUSED_C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %UNUSED_C.addr, metadata !11916, metadata !DIExpression()), !dbg !11917
  store i8* %UNUSED_arg_block, i8** %UNUSED_arg_block.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_arg_block.addr, metadata !11918, metadata !DIExpression()), !dbg !11919
  store i8* %UNUSED_arg, i8** %UNUSED_arg.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_arg.addr, metadata !11920, metadata !DIExpression()), !dbg !11921
  ret void, !dbg !11922
}

declare dso_local void @uiBlockSetEmboss(%struct.uiBlock*, i8 zeroext) #2

declare dso_local void @uiButSetFlag(%struct.uiBut*, i32) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

declare dso_local %struct.uiLayout* @uiLayoutSplit(%struct.uiLayout*, float, i32) #2

declare dso_local void @uiItemL(%struct.uiLayout*, i8*, i32) #2

declare dso_local void @uiItemStringO(%struct.uiLayout*, i8*, i32, i8*, i8*, i8*) #2

declare dso_local i64 @BLI_snprintf(i8*, i64, i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @wm_resource_check_prev() #0 !dbg !11923 {
entry:
  %retval = alloca i32, align 4
  %res = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i8** %res, metadata !11926, metadata !DIExpression()), !dbg !11927
  %call = call i8* @BLI_get_folder_version(i32 0, i32 272, i8 zeroext 1), !dbg !11928
  store i8* %call, i8** %res, align 8, !dbg !11927
  %0 = load i8*, i8** %res, align 8, !dbg !11929
  %tobool = icmp ne i8* %0, null, !dbg !11929
  br i1 %tobool, label %if.then, label %if.else, !dbg !11931

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !11932
  br label %return, !dbg !11932

if.else:                                          ; preds = %entry
  %call1 = call i8* @BLI_get_folder_version(i32 0, i32 271, i8 zeroext 1), !dbg !11934
  %cmp = icmp ne i8* %call1, null, !dbg !11936
  %conv = zext i1 %cmp to i32, !dbg !11936
  store i32 %conv, i32* %retval, align 4, !dbg !11937
  br label %return, !dbg !11937

return:                                           ; preds = %if.else, %if.then
  %1 = load i32, i32* %retval, align 4, !dbg !11938
  ret i32 %1, !dbg !11938
}

declare dso_local void @uiItemO(%struct.uiLayout*, i8*, i32, i8*) #2

declare dso_local void @uiItemS(%struct.uiLayout*) #2

declare dso_local i8* @BLI_path_basename(i8*) #2

declare dso_local void @uiCenteredBoundsBlock(%struct.uiBlock*, i32) #2

declare dso_local i8* @BLI_get_folder_version(i32, i32, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @wm_search_menu_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %UNUSED_event) #0 !dbg !11939 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %UNUSED_event.addr = alloca %struct.wmEvent*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !11940, metadata !DIExpression()), !dbg !11941
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !11942, metadata !DIExpression()), !dbg !11943
  store %struct.wmEvent* %UNUSED_event, %struct.wmEvent** %UNUSED_event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %UNUSED_event.addr, metadata !11944, metadata !DIExpression()), !dbg !11945
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11946
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !11947
  %2 = bitcast %struct.wmOperator* %1 to i8*, !dbg !11947
  call void @uiPupBlock(%struct.bContext* %0, %struct.uiBlock* (%struct.bContext*, %struct.ARegion*, i8*)* @wm_block_search_menu, i8* %2), !dbg !11948
  ret i32 32, !dbg !11949
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @wm_search_menu_exec(%struct.bContext* %UNUSED_C, %struct.wmOperator* %UNUSED_op) #0 !dbg !11950 {
entry:
  %UNUSED_C.addr = alloca %struct.bContext*, align 8
  %UNUSED_op.addr = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %UNUSED_C, %struct.bContext** %UNUSED_C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %UNUSED_C.addr, metadata !11951, metadata !DIExpression()), !dbg !11952
  store %struct.wmOperator* %UNUSED_op, %struct.wmOperator** %UNUSED_op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %UNUSED_op.addr, metadata !11953, metadata !DIExpression()), !dbg !11954
  ret i32 4, !dbg !11955
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @wm_search_menu_poll(%struct.bContext* %C) #0 !dbg !11956 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  %editob = alloca %struct.Object*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !11957, metadata !DIExpression()), !dbg !11958
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11959
  %call = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %0), !dbg !11961
  %cmp = icmp eq %struct.wmWindow* %call, null, !dbg !11962
  br i1 %cmp, label %if.then, label %if.else, !dbg !11963

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !11964
  br label %return, !dbg !11964

if.else:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !11966, metadata !DIExpression()), !dbg !11968
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11969
  %call1 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %1), !dbg !11970
  store %struct.ScrArea* %call1, %struct.ScrArea** %sa, align 8, !dbg !11968
  %2 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !11971
  %tobool = icmp ne %struct.ScrArea* %2, null, !dbg !11971
  br i1 %tobool, label %if.then2, label %if.else12, !dbg !11973

if.then2:                                         ; preds = %if.else
  %3 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !11974
  %spacetype = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %3, i32 0, i32 8, !dbg !11977
  %4 = load i8, i8* %spacetype, align 8, !dbg !11977
  %conv = zext i8 %4 to i32, !dbg !11974
  %cmp3 = icmp eq i32 %conv, 18, !dbg !11978
  br i1 %cmp3, label %if.then5, label %if.end, !dbg !11979

if.then5:                                         ; preds = %if.then2
  store i32 0, i32* %retval, align 4, !dbg !11980
  br label %return, !dbg !11980

if.end:                                           ; preds = %if.then2
  %5 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !11981
  %spacetype6 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %5, i32 0, i32 8, !dbg !11983
  %6 = load i8, i8* %spacetype6, align 8, !dbg !11983
  %conv7 = zext i8 %6 to i32, !dbg !11981
  %cmp8 = icmp eq i32 %conv7, 9, !dbg !11984
  br i1 %cmp8, label %if.then10, label %if.end11, !dbg !11985

if.then10:                                        ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !11986
  br label %return, !dbg !11986

if.end11:                                         ; preds = %if.end
  br label %if.end20, !dbg !11987

if.else12:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.Object** %editob, metadata !11988, metadata !DIExpression()), !dbg !11990
  %7 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !11991
  %call13 = call %struct.Object* @CTX_data_edit_object(%struct.bContext* %7), !dbg !11992
  store %struct.Object* %call13, %struct.Object** %editob, align 8, !dbg !11990
  %8 = load %struct.Object*, %struct.Object** %editob, align 8, !dbg !11993
  %tobool14 = icmp ne %struct.Object* %8, null, !dbg !11993
  br i1 %tobool14, label %land.lhs.true, label %if.end19, !dbg !11995

land.lhs.true:                                    ; preds = %if.else12
  %9 = load %struct.Object*, %struct.Object** %editob, align 8, !dbg !11996
  %type = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 3, !dbg !11997
  %10 = load i16, i16* %type, align 8, !dbg !11997
  %conv15 = sext i16 %10 to i32, !dbg !11996
  %cmp16 = icmp eq i32 %conv15, 4, !dbg !11998
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !11999

if.then18:                                        ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !12000
  br label %return, !dbg !12000

if.end19:                                         ; preds = %land.lhs.true, %if.else12
  br label %if.end20

if.end20:                                         ; preds = %if.end19, %if.end11
  br label %if.end21

if.end21:                                         ; preds = %if.end20
  store i32 1, i32* %retval, align 4, !dbg !12001
  br label %return, !dbg !12001

return:                                           ; preds = %if.end21, %if.then18, %if.then10, %if.then5, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !12002
  ret i32 %11, !dbg !12002
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.uiBlock* @wm_block_search_menu(%struct.bContext* %C, %struct.ARegion* %ar, i8* %UNUSED_arg_op) #0 !dbg !3533 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %UNUSED_arg_op.addr = alloca i8*, align 8
  %event = alloca %struct.wmEvent, align 8
  %win = alloca %struct.wmWindow*, align 8
  %block = alloca %struct.uiBlock*, align 8
  %but = alloca %struct.uiBut*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !12003, metadata !DIExpression()), !dbg !12004
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !12005, metadata !DIExpression()), !dbg !12006
  store i8* %UNUSED_arg_op, i8** %UNUSED_arg_op.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_arg_op.addr, metadata !12007, metadata !DIExpression()), !dbg !12008
  call void @llvm.dbg.declare(metadata %struct.wmEvent* %event, metadata !12009, metadata !DIExpression()), !dbg !12010
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win, metadata !12011, metadata !DIExpression()), !dbg !12012
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12013
  %call = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %0), !dbg !12014
  store %struct.wmWindow* %call, %struct.wmWindow** %win, align 8, !dbg !12012
  call void @llvm.dbg.declare(metadata %struct.uiBlock** %block, metadata !12015, metadata !DIExpression()), !dbg !12016
  call void @llvm.dbg.declare(metadata %struct.uiBut** %but, metadata !12017, metadata !DIExpression()), !dbg !12018
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12019
  %2 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !12020
  %call1 = call %struct.uiBlock* @uiBeginBlock(%struct.bContext* %1, %struct.ARegion* %2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.174, i64 0, i64 0), i16 signext 0), !dbg !12021
  store %struct.uiBlock* %call1, %struct.uiBlock** %block, align 8, !dbg !12022
  %3 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !12023
  call void @uiBlockSetFlag(%struct.uiBlock* %3, i32 133), !dbg !12024
  %4 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !12025
  %call2 = call i32 @uiSearchBoxWidth(), !dbg !12026
  %conv = trunc i32 %call2 to i16, !dbg !12026
  %5 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !12027
  %call3 = call %struct.uiBut* @uiDefSearchBut(%struct.uiBlock* %4, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @wm_block_search_menu.search, i64 0, i64 0), i32 0, i32 30, i32 256, i32 10, i32 10, i16 signext %conv, i16 signext %5, float 0.000000e+00, float 0.000000e+00, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0)), !dbg !12028
  store %struct.uiBut* %call3, %struct.uiBut** %but, align 8, !dbg !12029
  %6 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !12030
  call void @uiOperatorSearch_But(%struct.uiBut* %6), !dbg !12031
  %7 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !12032
  %call4 = call i32 @uiSearchBoxHeight(), !dbg !12033
  %sub = sub nsw i32 10, %call4, !dbg !12034
  %call5 = call i32 @uiSearchBoxWidth(), !dbg !12035
  %conv6 = trunc i32 %call5 to i16, !dbg !12035
  %call7 = call i32 @uiSearchBoxHeight(), !dbg !12036
  %conv8 = trunc i32 %call7 to i16, !dbg !12036
  %call9 = call %struct.uiBut* @uiDefBut(%struct.uiBlock* %7, i32 5120, i32 0, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i32 10, i32 %sub, i16 signext %conv6, i16 signext %conv8, i8* null, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, i8* null), !dbg !12037
  %8 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !12038
  %9 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 81), align 4, !dbg !12039
  %conv10 = sext i16 %9 to i32, !dbg !12039
  %sub11 = sub nsw i32 0, %conv10, !dbg !12040
  call void @uiPopupBoundsBlock(%struct.uiBlock* %8, i32 6, i32 0, i32 %sub11), !dbg !12041
  %10 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !12042
  call void @wm_event_init_from_window(%struct.wmWindow* %10, %struct.wmEvent* %event), !dbg !12043
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 2, !dbg !12044
  store i16 20513, i16* %type, align 8, !dbg !12045
  %val = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 3, !dbg !12046
  store i16 1, i16* %val, align 2, !dbg !12047
  %11 = load %struct.uiBut*, %struct.uiBut** %but, align 8, !dbg !12048
  %12 = bitcast %struct.uiBut* %11 to i8*, !dbg !12048
  %customdata = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 28, !dbg !12049
  store i8* %12, i8** %customdata, align 8, !dbg !12050
  %customdatafree = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 26, !dbg !12051
  store i16 0, i16* %customdatafree, align 2, !dbg !12052
  %13 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !12053
  call void @wm_event_add(%struct.wmWindow* %13, %struct.wmEvent* %event), !dbg !12054
  %14 = load %struct.uiBlock*, %struct.uiBlock** %block, align 8, !dbg !12055
  ret %struct.uiBlock* %14, !dbg !12056
}

declare dso_local %struct.uiBut* @uiDefSearchBut(%struct.uiBlock*, i8*, i32, i32, i32, i32, i32, i16 signext, i16 signext, float, float, i8*) #2

declare dso_local void @uiOperatorSearch_But(%struct.uiBut*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @wm_call_menu_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !12057 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %idname = alloca [64 x i8], align 16
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !12058, metadata !DIExpression()), !dbg !12059
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !12060, metadata !DIExpression()), !dbg !12061
  call void @llvm.dbg.declare(metadata [64 x i8]* %idname, metadata !12062, metadata !DIExpression()), !dbg !12063
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !12064
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 7, !dbg !12065
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !12065
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname, i64 0, i64 0, !dbg !12066
  call void @RNA_string_get(%struct.PointerRNA* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.233, i64 0, i64 0), i8* %arraydecay), !dbg !12067
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12068
  %arraydecay1 = getelementptr inbounds [64 x i8], [64 x i8]* %idname, i64 0, i64 0, !dbg !12069
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !12070
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 8, !dbg !12071
  %4 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !12071
  %call = call i32 @uiPupMenuInvoke(%struct.bContext* %2, i8* %arraydecay1, %struct.ReportList* %4), !dbg !12072
  ret i32 %call, !dbg !12073
}

declare dso_local %struct.PropertyRNA* @RNA_def_string(i8*, i8*, i8*, i32, i8*, i8*) #2

declare dso_local i32 @uiPupMenuInvoke(%struct.bContext*, i8*, %struct.ReportList*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @wm_call_pie_menu_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !12074 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %idname = alloca [64 x i8], align 16
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !12075, metadata !DIExpression()), !dbg !12076
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !12077, metadata !DIExpression()), !dbg !12078
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !12079, metadata !DIExpression()), !dbg !12080
  call void @llvm.dbg.declare(metadata [64 x i8]* %idname, metadata !12081, metadata !DIExpression()), !dbg !12082
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !12083
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 7, !dbg !12084
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !12084
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname, i64 0, i64 0, !dbg !12085
  call void @RNA_string_get(%struct.PointerRNA* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.233, i64 0, i64 0), i8* %arraydecay), !dbg !12086
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12087
  %arraydecay1 = getelementptr inbounds [64 x i8], [64 x i8]* %idname, i64 0, i64 0, !dbg !12088
  %3 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !12089
  %call = call i32 @uiPieMenuInvoke(%struct.bContext* %2, i8* %arraydecay1, %struct.wmEvent* %3), !dbg !12090
  ret i32 %call, !dbg !12091
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @wm_call_pie_menu_exec(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !12092 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %idname = alloca [64 x i8], align 16
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !12093, metadata !DIExpression()), !dbg !12094
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !12095, metadata !DIExpression()), !dbg !12096
  call void @llvm.dbg.declare(metadata [64 x i8]* %idname, metadata !12097, metadata !DIExpression()), !dbg !12098
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !12099
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 7, !dbg !12100
  %1 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !12100
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname, i64 0, i64 0, !dbg !12101
  call void @RNA_string_get(%struct.PointerRNA* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.233, i64 0, i64 0), i8* %arraydecay), !dbg !12102
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12103
  %arraydecay1 = getelementptr inbounds [64 x i8], [64 x i8]* %idname, i64 0, i64 0, !dbg !12104
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12105
  %call = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %3), !dbg !12106
  %eventstate = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %call, i32 0, i32 21, !dbg !12107
  %4 = load %struct.wmEvent*, %struct.wmEvent** %eventstate, align 8, !dbg !12107
  %call2 = call i32 @uiPieMenuInvoke(%struct.bContext* %2, i8* %arraydecay1, %struct.wmEvent* %4), !dbg !12108
  ret i32 %call2, !dbg !12109
}

declare dso_local i32 @uiPieMenuInvoke(%struct.bContext*, i8*, %struct.wmEvent*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @radial_control_invoke(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !12110 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %wm = alloca %struct.wmWindowManager*, align 8
  %rc = alloca %struct.RadialControl*, align 8
  %min_value_int = alloca i32, align 4
  %max_value_int = alloca i32, align 4
  %step_int = alloca i32, align 4
  %step_float = alloca float, align 4
  %precision = alloca float, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !12111, metadata !DIExpression()), !dbg !12112
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !12113, metadata !DIExpression()), !dbg !12114
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !12115, metadata !DIExpression()), !dbg !12116
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm, metadata !12117, metadata !DIExpression()), !dbg !12118
  call void @llvm.dbg.declare(metadata %struct.RadialControl** %rc, metadata !12119, metadata !DIExpression()), !dbg !12155
  call void @llvm.dbg.declare(metadata i32* %min_value_int, metadata !12156, metadata !DIExpression()), !dbg !12157
  call void @llvm.dbg.declare(metadata i32* %max_value_int, metadata !12158, metadata !DIExpression()), !dbg !12159
  call void @llvm.dbg.declare(metadata i32* %step_int, metadata !12160, metadata !DIExpression()), !dbg !12161
  call void @llvm.dbg.declare(metadata float* %step_float, metadata !12162, metadata !DIExpression()), !dbg !12163
  call void @llvm.dbg.declare(metadata float* %precision, metadata !12164, metadata !DIExpression()), !dbg !12165
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !12166
  %call = call i8* %0(i64 288, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.375, i64 0, i64 0)), !dbg !12166
  %1 = bitcast i8* %call to %struct.RadialControl*, !dbg !12166
  store %struct.RadialControl* %1, %struct.RadialControl** %rc, align 8, !dbg !12168
  %2 = bitcast %struct.RadialControl* %1 to i8*, !dbg !12169
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !12170
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 5, !dbg !12171
  store i8* %2, i8** %customdata, align 8, !dbg !12172
  %tobool = icmp ne i8* %2, null, !dbg !12172
  br i1 %tobool, label %if.end, label %if.then, !dbg !12173

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !12174
  br label %return, !dbg !12174

if.end:                                           ; preds = %entry
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12175
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !12177
  %call1 = call i32 @radial_control_get_properties(%struct.bContext* %4, %struct.wmOperator* %5), !dbg !12178
  %tobool2 = icmp ne i32 %call1, 0, !dbg !12178
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !12179

if.then3:                                         ; preds = %if.end
  %6 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12180
  %7 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12182
  %8 = bitcast %struct.RadialControl* %7 to i8*, !dbg !12182
  call void %6(i8* %8), !dbg !12180
  store i32 2, i32* %retval, align 4, !dbg !12183
  br label %return, !dbg !12183

if.end4:                                          ; preds = %if.end
  %9 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12184
  %prop = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %9, i32 0, i32 8, !dbg !12185
  %10 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !12185
  %call5 = call i32 @RNA_property_type(%struct.PropertyRNA* %10), !dbg !12186
  %11 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12187
  %type = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %11, i32 0, i32 0, !dbg !12188
  store i32 %call5, i32* %type, align 8, !dbg !12189
  switch i32 %call5, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb12
  ], !dbg !12190

sw.bb:                                            ; preds = %if.end4
  %12 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12191
  %ptr = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %12, i32 0, i32 2, !dbg !12193
  %13 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12194
  %prop6 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %13, i32 0, i32 8, !dbg !12195
  %14 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop6, align 8, !dbg !12195
  %call7 = call i32 @RNA_property_int_get(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %14), !dbg !12196
  %conv = sitofp i32 %call7 to float, !dbg !12196
  %15 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12197
  %initial_value = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %15, i32 0, i32 14, !dbg !12198
  store float %conv, float* %initial_value, align 8, !dbg !12199
  %16 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12200
  %ptr8 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %16, i32 0, i32 2, !dbg !12201
  %17 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12202
  %prop9 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %17, i32 0, i32 8, !dbg !12203
  %18 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop9, align 8, !dbg !12203
  call void @RNA_property_int_ui_range(%struct.PointerRNA* %ptr8, %struct.PropertyRNA* %18, i32* %min_value_int, i32* %max_value_int, i32* %step_int), !dbg !12204
  %19 = load i32, i32* %min_value_int, align 4, !dbg !12205
  %conv10 = sitofp i32 %19 to float, !dbg !12205
  %20 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12206
  %min_value = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %20, i32 0, i32 16, !dbg !12207
  store float %conv10, float* %min_value, align 8, !dbg !12208
  %21 = load i32, i32* %max_value_int, align 4, !dbg !12209
  %conv11 = sitofp i32 %21 to float, !dbg !12209
  %22 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12210
  %max_value = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %22, i32 0, i32 17, !dbg !12211
  store float %conv11, float* %max_value, align 4, !dbg !12212
  br label %sw.epilog, !dbg !12213

sw.bb12:                                          ; preds = %if.end4
  %23 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12214
  %ptr13 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %23, i32 0, i32 2, !dbg !12215
  %24 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12216
  %prop14 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %24, i32 0, i32 8, !dbg !12217
  %25 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop14, align 8, !dbg !12217
  %call15 = call float @RNA_property_float_get(%struct.PointerRNA* %ptr13, %struct.PropertyRNA* %25), !dbg !12218
  %26 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12219
  %initial_value16 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %26, i32 0, i32 14, !dbg !12220
  store float %call15, float* %initial_value16, align 8, !dbg !12221
  %27 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12222
  %ptr17 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %27, i32 0, i32 2, !dbg !12223
  %28 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12224
  %prop18 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %28, i32 0, i32 8, !dbg !12225
  %29 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop18, align 8, !dbg !12225
  %30 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12226
  %min_value19 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %30, i32 0, i32 16, !dbg !12227
  %31 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12228
  %max_value20 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %31, i32 0, i32 17, !dbg !12229
  call void @RNA_property_float_ui_range(%struct.PointerRNA* %ptr17, %struct.PropertyRNA* %29, float* %min_value19, float* %max_value20, float* %step_float, float* %precision), !dbg !12230
  br label %sw.epilog, !dbg !12231

sw.default:                                       ; preds = %if.end4
  %32 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !12232
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %32, i32 0, i32 8, !dbg !12233
  %33 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !12233
  call void @BKE_report(%struct.ReportList* %33, i32 32, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.376, i64 0, i64 0)), !dbg !12234
  %34 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12235
  %35 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12236
  %36 = bitcast %struct.RadialControl* %35 to i8*, !dbg !12236
  call void %34(i8* %36), !dbg !12235
  store i32 2, i32* %retval, align 4, !dbg !12237
  br label %return, !dbg !12237

sw.epilog:                                        ; preds = %sw.bb12, %sw.bb
  %37 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12238
  %prop21 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %37, i32 0, i32 8, !dbg !12239
  %38 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop21, align 8, !dbg !12239
  %call22 = call i32 @RNA_property_subtype(%struct.PropertyRNA* %38), !dbg !12240
  %39 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12241
  %subtype = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %39, i32 0, i32 1, !dbg !12242
  store i32 %call22, i32* %subtype, align 4, !dbg !12243
  %40 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12244
  %subtype23 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %40, i32 0, i32 1, !dbg !12244
  %41 = load i32, i32* %subtype23, align 4, !dbg !12244
  %cmp = icmp eq i32 %41, 0, !dbg !12244
  br i1 %cmp, label %if.end42, label %lor.lhs.false, !dbg !12244

lor.lhs.false:                                    ; preds = %sw.epilog
  %42 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12244
  %subtype25 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %42, i32 0, i32 1, !dbg !12244
  %43 = load i32, i32* %subtype25, align 4, !dbg !12244
  %cmp26 = icmp eq i32 %43, 65554, !dbg !12244
  br i1 %cmp26, label %if.end42, label %lor.lhs.false28, !dbg !12244

lor.lhs.false28:                                  ; preds = %lor.lhs.false
  %44 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12244
  %subtype29 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %44, i32 0, i32 1, !dbg !12244
  %45 = load i32, i32* %subtype29, align 4, !dbg !12244
  %cmp30 = icmp eq i32 %45, 15, !dbg !12244
  br i1 %cmp30, label %if.end42, label %lor.lhs.false32, !dbg !12244

lor.lhs.false32:                                  ; preds = %lor.lhs.false28
  %46 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12244
  %subtype33 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %46, i32 0, i32 1, !dbg !12244
  %47 = load i32, i32* %subtype33, align 4, !dbg !12244
  %cmp34 = icmp eq i32 %47, 327696, !dbg !12244
  br i1 %cmp34, label %if.end42, label %lor.lhs.false36, !dbg !12244

lor.lhs.false36:                                  ; preds = %lor.lhs.false32
  %48 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12244
  %subtype37 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %48, i32 0, i32 1, !dbg !12244
  %49 = load i32, i32* %subtype37, align 4, !dbg !12244
  %cmp38 = icmp eq i32 %49, 12, !dbg !12244
  br i1 %cmp38, label %if.end42, label %if.then40, !dbg !12246

if.then40:                                        ; preds = %lor.lhs.false36
  %50 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !12247
  %reports41 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %50, i32 0, i32 8, !dbg !12249
  %51 = load %struct.ReportList*, %struct.ReportList** %reports41, align 8, !dbg !12249
  call void @BKE_report(%struct.ReportList* %51, i32 32, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.377, i64 0, i64 0)), !dbg !12250
  %52 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12251
  %53 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12252
  %54 = bitcast %struct.RadialControl* %53 to i8*, !dbg !12252
  call void %52(i8* %54), !dbg !12251
  store i32 2, i32* %retval, align 4, !dbg !12253
  br label %return, !dbg !12253

if.end42:                                         ; preds = %lor.lhs.false36, %lor.lhs.false32, %lor.lhs.false28, %lor.lhs.false, %sw.epilog
  %55 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12254
  %initial_value43 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %55, i32 0, i32 14, !dbg !12255
  %56 = load float, float* %initial_value43, align 8, !dbg !12255
  %57 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12256
  %current_value = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %57, i32 0, i32 15, !dbg !12257
  store float %56, float* %current_value, align 4, !dbg !12258
  %58 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12259
  %59 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !12260
  call void @radial_control_set_initial_mouse(%struct.RadialControl* %58, %struct.wmEvent* %59), !dbg !12261
  %60 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12262
  call void @radial_control_set_tex(%struct.RadialControl* %60), !dbg !12263
  %61 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12264
  %call44 = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %61), !dbg !12265
  store %struct.wmWindowManager* %call44, %struct.wmWindowManager** %wm, align 8, !dbg !12266
  %62 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12267
  %orig_paintcursors = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %62, i32 0, i32 23, !dbg !12268
  %63 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !12269
  %paintcursors = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %63, i32 0, i32 11, !dbg !12270
  %64 = bitcast %struct.ListBase* %orig_paintcursors to i8*, !dbg !12270
  %65 = bitcast %struct.ListBase* %paintcursors to i8*, !dbg !12270
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %65, i64 16, i1 false), !dbg !12270
  %66 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !12271
  %paintcursors45 = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %66, i32 0, i32 11, !dbg !12272
  call void @BLI_listbase_clear(%struct.ListBase* %paintcursors45), !dbg !12273
  %67 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !12274
  %68 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !12275
  %type46 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %68, i32 0, i32 4, !dbg !12276
  %69 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type46, align 8, !dbg !12276
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %69, i32 0, i32 9, !dbg !12277
  %70 = load i32 (%struct.bContext*)*, i32 (%struct.bContext*)** %poll, align 8, !dbg !12277
  %71 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12278
  %72 = bitcast %struct.RadialControl* %71 to i8*, !dbg !12278
  %call47 = call i8* @WM_paint_cursor_activate(%struct.wmWindowManager* %67, i32 (%struct.bContext*)* %70, void (%struct.bContext*, i32, i32, i8*)* @radial_control_paint_cursor, i8* %72), !dbg !12279
  %73 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12280
  %cursor = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %73, i32 0, i32 25, !dbg !12281
  store i8* %call47, i8** %cursor, align 8, !dbg !12282
  %74 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12283
  %75 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !12284
  %call48 = call %struct.wmEventHandler* @WM_event_add_modal_handler(%struct.bContext* %74, %struct.wmOperator* %75), !dbg !12285
  store i32 1, i32* %retval, align 4, !dbg !12286
  br label %return, !dbg !12286

return:                                           ; preds = %if.end42, %if.then40, %sw.default, %if.then3, %if.then
  %76 = load i32, i32* %retval, align 4, !dbg !12287
  ret i32 %76, !dbg !12287
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @radial_control_modal(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event) #0 !dbg !12288 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %rc = alloca %struct.RadialControl*, align 8
  %new_value = alloca float, align 4
  %dist = alloca float, align 4
  %zoom = alloca [2 x float], align 4
  %delta = alloca [2 x float], align 4
  %ret = alloca float, align 4
  %snap = alloca i8, align 1
  %angle_precision = alloca float, align 4
  %position = alloca [2 x float], align 4
  %initial_position = alloca [2 x float], align 4
  %current_position = alloca [2 x float], align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !12289, metadata !DIExpression()), !dbg !12290
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !12291, metadata !DIExpression()), !dbg !12292
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !12293, metadata !DIExpression()), !dbg !12294
  call void @llvm.dbg.declare(metadata %struct.RadialControl** %rc, metadata !12295, metadata !DIExpression()), !dbg !12296
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !12297
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 5, !dbg !12298
  %1 = load i8*, i8** %customdata, align 8, !dbg !12298
  %2 = bitcast i8* %1 to %struct.RadialControl*, !dbg !12297
  store %struct.RadialControl* %2, %struct.RadialControl** %rc, align 8, !dbg !12296
  call void @llvm.dbg.declare(metadata float* %new_value, metadata !12299, metadata !DIExpression()), !dbg !12300
  call void @llvm.dbg.declare(metadata float* %dist, metadata !12301, metadata !DIExpression()), !dbg !12302
  call void @llvm.dbg.declare(metadata [2 x float]* %zoom, metadata !12303, metadata !DIExpression()), !dbg !12304
  call void @llvm.dbg.declare(metadata [2 x float]* %delta, metadata !12305, metadata !DIExpression()), !dbg !12306
  call void @llvm.dbg.declare(metadata float* %ret, metadata !12307, metadata !DIExpression()), !dbg !12308
  store float 1.000000e+00, float* %ret, align 4, !dbg !12308
  call void @llvm.dbg.declare(metadata i8* %snap, metadata !12309, metadata !DIExpression()), !dbg !12310
  call void @llvm.dbg.declare(metadata float* %angle_precision, metadata !12311, metadata !DIExpression()), !dbg !12312
  store float 0.000000e+00, float* %angle_precision, align 4, !dbg !12312
  %3 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !12313
  %ctrl = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %3, i32 0, i32 18, !dbg !12314
  %4 = load i16, i16* %ctrl, align 2, !dbg !12314
  %conv = sext i16 %4 to i32, !dbg !12313
  %cmp = icmp ne i32 %conv, 0, !dbg !12315
  %conv1 = zext i1 %cmp to i32, !dbg !12315
  %conv2 = trunc i32 %conv1 to i8, !dbg !12313
  store i8 %conv2, i8* %snap, align 1, !dbg !12316
  %5 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !12317
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %5, i32 0, i32 2, !dbg !12318
  %6 = load i16, i16* %type, align 8, !dbg !12318
  %conv3 = sext i16 %6 to i32, !dbg !12317
  switch i32 %conv3, label %sw.epilog215 [
    i32 4, label %sw.bb
    i32 218, label %sw.bb160
    i32 3, label %sw.bb160
    i32 1, label %sw.bb161
    i32 163, label %sw.bb161
    i32 217, label %sw.bb162
    i32 216, label %sw.bb162
  ], !dbg !12319

sw.bb:                                            ; preds = %entry
  %7 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12320
  %slow_mode = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %7, i32 0, i32 20, !dbg !12323
  %8 = load i8, i8* %slow_mode, align 8, !dbg !12323
  %tobool = icmp ne i8 %8, 0, !dbg !12320
  br i1 %tobool, label %if.then, label %if.else71, !dbg !12324

if.then:                                          ; preds = %sw.bb
  %9 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12325
  %subtype = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %9, i32 0, i32 1, !dbg !12328
  %10 = load i32, i32* %subtype, align 4, !dbg !12328
  %cmp4 = icmp eq i32 %10, 327696, !dbg !12329
  br i1 %cmp4, label %if.then6, label %if.else, !dbg !12330

if.then6:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata [2 x float]* %position, metadata !12331, metadata !DIExpression()), !dbg !12333
  %arrayinit.begin = getelementptr inbounds [2 x float], [2 x float]* %position, i64 0, i64 0, !dbg !12334
  %11 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !12335
  %x = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %11, i32 0, i32 4, !dbg !12336
  %12 = load i32, i32* %x, align 4, !dbg !12336
  %conv7 = sitofp i32 %12 to float, !dbg !12335
  store float %conv7, float* %arrayinit.begin, align 4, !dbg !12334
  %arrayinit.element = getelementptr inbounds float, float* %arrayinit.begin, i64 1, !dbg !12334
  %13 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !12337
  %y = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %13, i32 0, i32 5, !dbg !12338
  %14 = load i32, i32* %y, align 8, !dbg !12338
  %conv8 = sitofp i32 %14 to float, !dbg !12337
  store float %conv8, float* %arrayinit.element, align 4, !dbg !12334
  %15 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12339
  %initial_mouse = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %15, i32 0, i32 18, !dbg !12340
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %initial_mouse, i64 0, i64 0, !dbg !12339
  %16 = load i32, i32* %arrayidx, align 8, !dbg !12339
  %17 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12341
  %slow_mouse = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %17, i32 0, i32 19, !dbg !12342
  %arrayidx9 = getelementptr inbounds [2 x i32], [2 x i32]* %slow_mouse, i64 0, i64 0, !dbg !12341
  %18 = load i32, i32* %arrayidx9, align 8, !dbg !12341
  %sub = sub nsw i32 %16, %18, !dbg !12343
  %conv10 = sitofp i32 %sub to float, !dbg !12339
  %arrayidx11 = getelementptr inbounds [2 x float], [2 x float]* %delta, i64 0, i64 0, !dbg !12344
  store float %conv10, float* %arrayidx11, align 4, !dbg !12345
  %19 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12346
  %initial_mouse12 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %19, i32 0, i32 18, !dbg !12347
  %arrayidx13 = getelementptr inbounds [2 x i32], [2 x i32]* %initial_mouse12, i64 0, i64 1, !dbg !12346
  %20 = load i32, i32* %arrayidx13, align 4, !dbg !12346
  %21 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12348
  %slow_mouse14 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %21, i32 0, i32 19, !dbg !12349
  %arrayidx15 = getelementptr inbounds [2 x i32], [2 x i32]* %slow_mouse14, i64 0, i64 1, !dbg !12348
  %22 = load i32, i32* %arrayidx15, align 4, !dbg !12348
  %sub16 = sub nsw i32 %20, %22, !dbg !12350
  %conv17 = sitofp i32 %sub16 to float, !dbg !12346
  %arrayidx18 = getelementptr inbounds [2 x float], [2 x float]* %delta, i64 0, i64 1, !dbg !12351
  store float %conv17, float* %arrayidx18, align 4, !dbg !12352
  %23 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12353
  %dial = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %23, i32 0, i32 21, !dbg !12354
  %24 = load %struct.Dial*, %struct.Dial** %dial, align 8, !dbg !12354
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %position, i64 0, i64 0, !dbg !12355
  %call = call float @BLI_dial_angle(%struct.Dial* %24, float* %arraydecay), !dbg !12356
  %mul = fmul float 0xBFB99999A0000000, %call, !dbg !12357
  store float %mul, float* %angle_precision, align 4, !dbg !12358
  br label %if.end70, !dbg !12359

if.else:                                          ; preds = %if.then
  %25 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12360
  %initial_mouse19 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %25, i32 0, i32 18, !dbg !12362
  %arrayidx20 = getelementptr inbounds [2 x i32], [2 x i32]* %initial_mouse19, i64 0, i64 0, !dbg !12360
  %26 = load i32, i32* %arrayidx20, align 8, !dbg !12360
  %27 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12363
  %slow_mouse21 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %27, i32 0, i32 19, !dbg !12364
  %arrayidx22 = getelementptr inbounds [2 x i32], [2 x i32]* %slow_mouse21, i64 0, i64 0, !dbg !12363
  %28 = load i32, i32* %arrayidx22, align 8, !dbg !12363
  %sub23 = sub nsw i32 %26, %28, !dbg !12365
  %conv24 = sitofp i32 %sub23 to float, !dbg !12360
  %arrayidx25 = getelementptr inbounds [2 x float], [2 x float]* %delta, i64 0, i64 0, !dbg !12366
  store float %conv24, float* %arrayidx25, align 4, !dbg !12367
  %29 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12368
  %initial_mouse26 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %29, i32 0, i32 18, !dbg !12369
  %arrayidx27 = getelementptr inbounds [2 x i32], [2 x i32]* %initial_mouse26, i64 0, i64 1, !dbg !12368
  %30 = load i32, i32* %arrayidx27, align 4, !dbg !12368
  %31 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12370
  %slow_mouse28 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %31, i32 0, i32 19, !dbg !12371
  %arrayidx29 = getelementptr inbounds [2 x i32], [2 x i32]* %slow_mouse28, i64 0, i64 1, !dbg !12370
  %32 = load i32, i32* %arrayidx29, align 4, !dbg !12370
  %sub30 = sub nsw i32 %30, %32, !dbg !12372
  %conv31 = sitofp i32 %sub30 to float, !dbg !12368
  %arrayidx32 = getelementptr inbounds [2 x float], [2 x float]* %delta, i64 0, i64 1, !dbg !12373
  store float %conv31, float* %arrayidx32, align 4, !dbg !12374
  %33 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12375
  %zoom_prop = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %33, i32 0, i32 12, !dbg !12377
  %34 = load %struct.PropertyRNA*, %struct.PropertyRNA** %zoom_prop, align 8, !dbg !12377
  %tobool33 = icmp ne %struct.PropertyRNA* %34, null, !dbg !12375
  br i1 %tobool33, label %if.then34, label %if.end, !dbg !12378

if.then34:                                        ; preds = %if.else
  %35 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12379
  %zoom_ptr = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %35, i32 0, i32 6, !dbg !12381
  %36 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12382
  %zoom_prop35 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %36, i32 0, i32 12, !dbg !12383
  %37 = load %struct.PropertyRNA*, %struct.PropertyRNA** %zoom_prop35, align 8, !dbg !12383
  %arraydecay36 = getelementptr inbounds [2 x float], [2 x float]* %zoom, i64 0, i64 0, !dbg !12384
  call void @RNA_property_float_get_array(%struct.PointerRNA* %zoom_ptr, %struct.PropertyRNA* %37, float* %arraydecay36), !dbg !12385
  %arrayidx37 = getelementptr inbounds [2 x float], [2 x float]* %zoom, i64 0, i64 0, !dbg !12386
  %38 = load float, float* %arrayidx37, align 4, !dbg !12386
  %arrayidx38 = getelementptr inbounds [2 x float], [2 x float]* %delta, i64 0, i64 0, !dbg !12387
  %39 = load float, float* %arrayidx38, align 4, !dbg !12388
  %div = fdiv float %39, %38, !dbg !12388
  store float %div, float* %arrayidx38, align 4, !dbg !12388
  %arrayidx39 = getelementptr inbounds [2 x float], [2 x float]* %zoom, i64 0, i64 1, !dbg !12389
  %40 = load float, float* %arrayidx39, align 4, !dbg !12389
  %arrayidx40 = getelementptr inbounds [2 x float], [2 x float]* %delta, i64 0, i64 1, !dbg !12390
  %41 = load float, float* %arrayidx40, align 4, !dbg !12391
  %div41 = fdiv float %41, %40, !dbg !12391
  store float %div41, float* %arrayidx40, align 4, !dbg !12391
  br label %if.end, !dbg !12392

if.end:                                           ; preds = %if.then34, %if.else
  %arraydecay42 = getelementptr inbounds [2 x float], [2 x float]* %delta, i64 0, i64 0, !dbg !12393
  %call43 = call float @len_v2(float* %arraydecay42), !dbg !12394
  store float %call43, float* %dist, align 4, !dbg !12395
  %42 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !12396
  %x44 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %42, i32 0, i32 4, !dbg !12397
  %43 = load i32, i32* %x44, align 4, !dbg !12397
  %44 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12398
  %slow_mouse45 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %44, i32 0, i32 19, !dbg !12399
  %arrayidx46 = getelementptr inbounds [2 x i32], [2 x i32]* %slow_mouse45, i64 0, i64 0, !dbg !12398
  %45 = load i32, i32* %arrayidx46, align 8, !dbg !12398
  %sub47 = sub nsw i32 %43, %45, !dbg !12400
  %conv48 = sitofp i32 %sub47 to float, !dbg !12396
  %arrayidx49 = getelementptr inbounds [2 x float], [2 x float]* %delta, i64 0, i64 0, !dbg !12401
  store float %conv48, float* %arrayidx49, align 4, !dbg !12402
  %46 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !12403
  %y50 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %46, i32 0, i32 5, !dbg !12404
  %47 = load i32, i32* %y50, align 8, !dbg !12404
  %48 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12405
  %slow_mouse51 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %48, i32 0, i32 19, !dbg !12406
  %arrayidx52 = getelementptr inbounds [2 x i32], [2 x i32]* %slow_mouse51, i64 0, i64 1, !dbg !12405
  %49 = load i32, i32* %arrayidx52, align 4, !dbg !12405
  %sub53 = sub nsw i32 %47, %49, !dbg !12407
  %conv54 = sitofp i32 %sub53 to float, !dbg !12403
  %arrayidx55 = getelementptr inbounds [2 x float], [2 x float]* %delta, i64 0, i64 1, !dbg !12408
  store float %conv54, float* %arrayidx55, align 4, !dbg !12409
  %50 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12410
  %zoom_prop56 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %50, i32 0, i32 12, !dbg !12412
  %51 = load %struct.PropertyRNA*, %struct.PropertyRNA** %zoom_prop56, align 8, !dbg !12412
  %tobool57 = icmp ne %struct.PropertyRNA* %51, null, !dbg !12410
  br i1 %tobool57, label %if.then58, label %if.end65, !dbg !12413

if.then58:                                        ; preds = %if.end
  %arrayidx59 = getelementptr inbounds [2 x float], [2 x float]* %zoom, i64 0, i64 0, !dbg !12414
  %52 = load float, float* %arrayidx59, align 4, !dbg !12414
  %arrayidx60 = getelementptr inbounds [2 x float], [2 x float]* %delta, i64 0, i64 0, !dbg !12416
  %53 = load float, float* %arrayidx60, align 4, !dbg !12417
  %div61 = fdiv float %53, %52, !dbg !12417
  store float %div61, float* %arrayidx60, align 4, !dbg !12417
  %arrayidx62 = getelementptr inbounds [2 x float], [2 x float]* %zoom, i64 0, i64 1, !dbg !12418
  %54 = load float, float* %arrayidx62, align 4, !dbg !12418
  %arrayidx63 = getelementptr inbounds [2 x float], [2 x float]* %delta, i64 0, i64 1, !dbg !12419
  %55 = load float, float* %arrayidx63, align 4, !dbg !12420
  %div64 = fdiv float %55, %54, !dbg !12420
  store float %div64, float* %arrayidx63, align 4, !dbg !12420
  br label %if.end65, !dbg !12421

if.end65:                                         ; preds = %if.then58, %if.end
  %56 = load float, float* %dist, align 4, !dbg !12422
  %arrayidx66 = getelementptr inbounds [2 x float], [2 x float]* %delta, i64 0, i64 0, !dbg !12423
  %57 = load float, float* %arrayidx66, align 4, !dbg !12423
  %arrayidx67 = getelementptr inbounds [2 x float], [2 x float]* %delta, i64 0, i64 1, !dbg !12424
  %58 = load float, float* %arrayidx67, align 4, !dbg !12424
  %add = fadd float %57, %58, !dbg !12425
  %mul68 = fmul float 0x3FB99999A0000000, %add, !dbg !12426
  %add69 = fadd float %56, %mul68, !dbg !12427
  store float %add69, float* %dist, align 4, !dbg !12428
  br label %if.end70

if.end70:                                         ; preds = %if.end65, %if.then6
  br label %if.end99, !dbg !12429

if.else71:                                        ; preds = %sw.bb
  %59 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12430
  %initial_mouse72 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %59, i32 0, i32 18, !dbg !12432
  %arrayidx73 = getelementptr inbounds [2 x i32], [2 x i32]* %initial_mouse72, i64 0, i64 0, !dbg !12430
  %60 = load i32, i32* %arrayidx73, align 8, !dbg !12430
  %61 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !12433
  %x74 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %61, i32 0, i32 4, !dbg !12434
  %62 = load i32, i32* %x74, align 4, !dbg !12434
  %sub75 = sub nsw i32 %60, %62, !dbg !12435
  %conv76 = sitofp i32 %sub75 to float, !dbg !12430
  %arrayidx77 = getelementptr inbounds [2 x float], [2 x float]* %delta, i64 0, i64 0, !dbg !12436
  store float %conv76, float* %arrayidx77, align 4, !dbg !12437
  %63 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12438
  %initial_mouse78 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %63, i32 0, i32 18, !dbg !12439
  %arrayidx79 = getelementptr inbounds [2 x i32], [2 x i32]* %initial_mouse78, i64 0, i64 1, !dbg !12438
  %64 = load i32, i32* %arrayidx79, align 4, !dbg !12438
  %65 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !12440
  %y80 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %65, i32 0, i32 5, !dbg !12441
  %66 = load i32, i32* %y80, align 8, !dbg !12441
  %sub81 = sub nsw i32 %64, %66, !dbg !12442
  %conv82 = sitofp i32 %sub81 to float, !dbg !12438
  %arrayidx83 = getelementptr inbounds [2 x float], [2 x float]* %delta, i64 0, i64 1, !dbg !12443
  store float %conv82, float* %arrayidx83, align 4, !dbg !12444
  %67 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12445
  %zoom_prop84 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %67, i32 0, i32 12, !dbg !12447
  %68 = load %struct.PropertyRNA*, %struct.PropertyRNA** %zoom_prop84, align 8, !dbg !12447
  %tobool85 = icmp ne %struct.PropertyRNA* %68, null, !dbg !12445
  br i1 %tobool85, label %if.then86, label %if.end96, !dbg !12448

if.then86:                                        ; preds = %if.else71
  %69 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12449
  %zoom_ptr87 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %69, i32 0, i32 6, !dbg !12451
  %70 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12452
  %zoom_prop88 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %70, i32 0, i32 12, !dbg !12453
  %71 = load %struct.PropertyRNA*, %struct.PropertyRNA** %zoom_prop88, align 8, !dbg !12453
  %arraydecay89 = getelementptr inbounds [2 x float], [2 x float]* %zoom, i64 0, i64 0, !dbg !12454
  call void @RNA_property_float_get_array(%struct.PointerRNA* %zoom_ptr87, %struct.PropertyRNA* %71, float* %arraydecay89), !dbg !12455
  %arrayidx90 = getelementptr inbounds [2 x float], [2 x float]* %zoom, i64 0, i64 0, !dbg !12456
  %72 = load float, float* %arrayidx90, align 4, !dbg !12456
  %arrayidx91 = getelementptr inbounds [2 x float], [2 x float]* %delta, i64 0, i64 0, !dbg !12457
  %73 = load float, float* %arrayidx91, align 4, !dbg !12458
  %div92 = fdiv float %73, %72, !dbg !12458
  store float %div92, float* %arrayidx91, align 4, !dbg !12458
  %arrayidx93 = getelementptr inbounds [2 x float], [2 x float]* %zoom, i64 0, i64 1, !dbg !12459
  %74 = load float, float* %arrayidx93, align 4, !dbg !12459
  %arrayidx94 = getelementptr inbounds [2 x float], [2 x float]* %delta, i64 0, i64 1, !dbg !12460
  %75 = load float, float* %arrayidx94, align 4, !dbg !12461
  %div95 = fdiv float %75, %74, !dbg !12461
  store float %div95, float* %arrayidx94, align 4, !dbg !12461
  br label %if.end96, !dbg !12462

if.end96:                                         ; preds = %if.then86, %if.else71
  %arraydecay97 = getelementptr inbounds [2 x float], [2 x float]* %delta, i64 0, i64 0, !dbg !12463
  %call98 = call float @len_v2(float* %arraydecay97), !dbg !12464
  store float %call98, float* %dist, align 4, !dbg !12465
  br label %if.end99

if.end99:                                         ; preds = %if.end96, %if.end70
  %76 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12466
  %subtype100 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %76, i32 0, i32 1, !dbg !12467
  %77 = load i32, i32* %subtype100, align 4, !dbg !12467
  switch i32 %77, label %sw.default [
    i32 0, label %sw.bb101
    i32 65554, label %sw.bb101
    i32 12, label %sw.bb101
    i32 15, label %sw.bb110
    i32 327696, label %sw.bb122
  ], !dbg !12468

sw.bb101:                                         ; preds = %if.end99, %if.end99, %if.end99
  %78 = load float, float* %dist, align 4, !dbg !12469
  store float %78, float* %new_value, align 4, !dbg !12471
  %79 = load i8, i8* %snap, align 1, !dbg !12472
  %tobool102 = icmp ne i8 %79, 0, !dbg !12472
  br i1 %tobool102, label %if.then103, label %if.end109, !dbg !12474

if.then103:                                       ; preds = %sw.bb101
  %80 = load float, float* %new_value, align 4, !dbg !12475
  %conv104 = fptosi float %80 to i32, !dbg !12476
  %add105 = add nsw i32 %conv104, 5, !dbg !12477
  %div106 = sdiv i32 %add105, 10, !dbg !12478
  %mul107 = mul nsw i32 %div106, 10, !dbg !12479
  %conv108 = sitofp i32 %mul107 to float, !dbg !12480
  store float %conv108, float* %new_value, align 4, !dbg !12481
  br label %if.end109, !dbg !12482

if.end109:                                        ; preds = %if.then103, %sw.bb101
  br label %sw.epilog, !dbg !12483

sw.bb110:                                         ; preds = %if.end99
  %81 = load float, float* %dist, align 4, !dbg !12484
  %sub111 = fsub float 2.000000e+02, %81, !dbg !12485
  %div112 = fdiv float %sub111, 1.650000e+02, !dbg !12486
  store float %div112, float* %new_value, align 4, !dbg !12487
  %82 = load i8, i8* %snap, align 1, !dbg !12488
  %tobool113 = icmp ne i8 %82, 0, !dbg !12488
  br i1 %tobool113, label %if.then114, label %if.end121, !dbg !12490

if.then114:                                       ; preds = %sw.bb110
  %83 = load float, float* %new_value, align 4, !dbg !12491
  %mul115 = fmul float %83, 1.000000e+01, !dbg !12492
  %conv116 = fpext float %mul115 to double, !dbg !12491
  %84 = call double @llvm.ceil.f64(double %conv116), !dbg !12493
  %conv117 = fptosi double %84 to i32, !dbg !12494
  %conv118 = sitofp i32 %conv117 to float, !dbg !12494
  %mul119 = fmul float %conv118, 1.000000e+01, !dbg !12495
  %div120 = fdiv float %mul119, 1.000000e+02, !dbg !12496
  store float %div120, float* %new_value, align 4, !dbg !12497
  br label %if.end121, !dbg !12498

if.end121:                                        ; preds = %if.then114, %sw.bb110
  br label %sw.epilog, !dbg !12499

sw.bb122:                                         ; preds = %if.end99
  %arrayidx123 = getelementptr inbounds [2 x float], [2 x float]* %delta, i64 0, i64 1, !dbg !12500
  %85 = load float, float* %arrayidx123, align 4, !dbg !12500
  %arrayidx124 = getelementptr inbounds [2 x float], [2 x float]* %delta, i64 0, i64 0, !dbg !12501
  %86 = load float, float* %arrayidx124, align 4, !dbg !12501
  %call125 = call float @atan2f(float %85, float %86) #7, !dbg !12502
  %conv126 = fpext float %call125 to double, !dbg !12502
  %add127 = fadd double %conv126, 0x400921FB54442D18, !dbg !12503
  %87 = load float, float* %angle_precision, align 4, !dbg !12504
  %conv128 = fpext float %87 to double, !dbg !12504
  %add129 = fadd double %add127, %conv128, !dbg !12505
  %conv130 = fptrunc double %add129 to float, !dbg !12502
  store float %conv130, float* %new_value, align 4, !dbg !12506
  %88 = load float, float* %new_value, align 4, !dbg !12507
  %conv131 = fpext float %88 to double, !dbg !12507
  %call132 = call double @fmod(double %conv131, double 0x401921FB60000000) #7, !dbg !12508
  %conv133 = fptrunc double %call132 to float, !dbg !12508
  store float %conv133, float* %new_value, align 4, !dbg !12509
  %89 = load float, float* %new_value, align 4, !dbg !12510
  %cmp134 = fcmp olt float %89, 0.000000e+00, !dbg !12512
  br i1 %cmp134, label %if.then136, label %if.end138, !dbg !12513

if.then136:                                       ; preds = %sw.bb122
  %90 = load float, float* %new_value, align 4, !dbg !12514
  %add137 = fadd float %90, 0x401921FB60000000, !dbg !12514
  store float %add137, float* %new_value, align 4, !dbg !12514
  br label %if.end138, !dbg !12515

if.end138:                                        ; preds = %if.then136, %sw.bb122
  %91 = load i8, i8* %snap, align 1, !dbg !12516
  %tobool139 = icmp ne i8 %91, 0, !dbg !12516
  br i1 %tobool139, label %if.then140, label %if.end148, !dbg !12518

if.then140:                                       ; preds = %if.end138
  %92 = load float, float* %new_value, align 4, !dbg !12519
  %mul141 = fmul float %92, 0x404CA5DC20000000, !dbg !12519
  %conv142 = fptosi float %mul141 to i32, !dbg !12519
  %add143 = add nsw i32 %conv142, 5, !dbg !12519
  %div144 = sdiv i32 %add143, 10, !dbg !12519
  %mul145 = mul nsw i32 %div144, 10, !dbg !12519
  %conv146 = sitofp i32 %mul145 to float, !dbg !12519
  %mul147 = fmul float %conv146, 0x3F91DF46A0000000, !dbg !12519
  store float %mul147, float* %new_value, align 4, !dbg !12520
  br label %if.end148, !dbg !12521

if.end148:                                        ; preds = %if.then140, %if.end138
  br label %sw.epilog, !dbg !12522

sw.default:                                       ; preds = %if.end99
  %93 = load float, float* %dist, align 4, !dbg !12523
  store float %93, float* %new_value, align 4, !dbg !12524
  br label %sw.epilog, !dbg !12525

sw.epilog:                                        ; preds = %sw.default, %if.end148, %if.end121, %if.end109
  %94 = load float, float* %new_value, align 4, !dbg !12526
  %95 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12526
  %min_value = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %95, i32 0, i32 16, !dbg !12526
  %96 = load float, float* %min_value, align 8, !dbg !12526
  %cmp149 = fcmp olt float %94, %96, !dbg !12526
  br i1 %cmp149, label %if.then151, label %if.else153, !dbg !12529

if.then151:                                       ; preds = %sw.epilog
  %97 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12526
  %min_value152 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %97, i32 0, i32 16, !dbg !12526
  %98 = load float, float* %min_value152, align 8, !dbg !12526
  store float %98, float* %new_value, align 4, !dbg !12526
  br label %if.end159, !dbg !12526

if.else153:                                       ; preds = %sw.epilog
  %99 = load float, float* %new_value, align 4, !dbg !12530
  %100 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12530
  %max_value = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %100, i32 0, i32 17, !dbg !12530
  %101 = load float, float* %max_value, align 4, !dbg !12530
  %cmp154 = fcmp ogt float %99, %101, !dbg !12530
  br i1 %cmp154, label %if.then156, label %if.end158, !dbg !12526

if.then156:                                       ; preds = %if.else153
  %102 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12530
  %max_value157 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %102, i32 0, i32 17, !dbg !12530
  %103 = load float, float* %max_value157, align 4, !dbg !12530
  store float %103, float* %new_value, align 4, !dbg !12530
  br label %if.end158, !dbg !12530

if.end158:                                        ; preds = %if.then156, %if.else153
  br label %if.end159

if.end159:                                        ; preds = %if.end158, %if.then151
  %104 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12532
  %105 = load float, float* %new_value, align 4, !dbg !12533
  call void @radial_control_set_value(%struct.RadialControl* %104, float %105), !dbg !12534
  %106 = load float, float* %new_value, align 4, !dbg !12535
  %107 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12536
  %current_value = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %107, i32 0, i32 15, !dbg !12537
  store float %106, float* %current_value, align 4, !dbg !12538
  br label %sw.epilog215, !dbg !12539

sw.bb160:                                         ; preds = %entry, %entry
  %108 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12540
  %109 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12541
  %initial_value = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %109, i32 0, i32 14, !dbg !12542
  %110 = load float, float* %initial_value, align 8, !dbg !12542
  call void @radial_control_set_value(%struct.RadialControl* %108, float %110), !dbg !12543
  store float 2.000000e+00, float* %ret, align 4, !dbg !12544
  br label %sw.epilog215, !dbg !12545

sw.bb161:                                         ; preds = %entry, %entry
  %111 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12546
  %112 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12547
  %ptr = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %112, i32 0, i32 2, !dbg !12548
  %113 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12549
  %prop = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %113, i32 0, i32 8, !dbg !12550
  %114 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !12550
  call void @RNA_property_update(%struct.bContext* %111, %struct.PointerRNA* %ptr, %struct.PropertyRNA* %114), !dbg !12551
  store float 4.000000e+00, float* %ret, align 4, !dbg !12552
  br label %sw.epilog215, !dbg !12553

sw.bb162:                                         ; preds = %entry, %entry
  %115 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !12554
  %val = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %115, i32 0, i32 3, !dbg !12556
  %116 = load i16, i16* %val, align 2, !dbg !12556
  %conv163 = sext i16 %116 to i32, !dbg !12554
  %cmp164 = icmp eq i32 %conv163, 1, !dbg !12557
  br i1 %cmp164, label %if.then166, label %if.end201, !dbg !12558

if.then166:                                       ; preds = %sw.bb162
  %117 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !12559
  %x167 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %117, i32 0, i32 4, !dbg !12561
  %118 = load i32, i32* %x167, align 4, !dbg !12561
  %119 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12562
  %slow_mouse168 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %119, i32 0, i32 19, !dbg !12563
  %arrayidx169 = getelementptr inbounds [2 x i32], [2 x i32]* %slow_mouse168, i64 0, i64 0, !dbg !12562
  store i32 %118, i32* %arrayidx169, align 8, !dbg !12564
  %120 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !12565
  %y170 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %120, i32 0, i32 5, !dbg !12566
  %121 = load i32, i32* %y170, align 8, !dbg !12566
  %122 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12567
  %slow_mouse171 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %122, i32 0, i32 19, !dbg !12568
  %arrayidx172 = getelementptr inbounds [2 x i32], [2 x i32]* %slow_mouse171, i64 0, i64 1, !dbg !12567
  store i32 %121, i32* %arrayidx172, align 4, !dbg !12569
  %123 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12570
  %slow_mode173 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %123, i32 0, i32 20, !dbg !12571
  store i8 1, i8* %slow_mode173, align 8, !dbg !12572
  %124 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12573
  %subtype174 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %124, i32 0, i32 1, !dbg !12575
  %125 = load i32, i32* %subtype174, align 4, !dbg !12575
  %cmp175 = icmp eq i32 %125, 327696, !dbg !12576
  br i1 %cmp175, label %if.then177, label %if.end200, !dbg !12577

if.then177:                                       ; preds = %if.then166
  call void @llvm.dbg.declare(metadata [2 x float]* %initial_position, metadata !12578, metadata !DIExpression()), !dbg !12580
  %arrayinit.begin178 = getelementptr inbounds [2 x float], [2 x float]* %initial_position, i64 0, i64 0, !dbg !12581
  %126 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12582
  %initial_mouse179 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %126, i32 0, i32 18, !dbg !12582
  %arrayidx180 = getelementptr inbounds [2 x i32], [2 x i32]* %initial_mouse179, i64 0, i64 0, !dbg !12582
  %127 = load i32, i32* %arrayidx180, align 8, !dbg !12582
  %conv181 = sitofp i32 %127 to float, !dbg !12582
  store float %conv181, float* %arrayinit.begin178, align 4, !dbg !12581
  %arrayinit.element182 = getelementptr inbounds float, float* %arrayinit.begin178, i64 1, !dbg !12581
  %128 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12582
  %initial_mouse183 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %128, i32 0, i32 18, !dbg !12582
  %arrayidx184 = getelementptr inbounds [2 x i32], [2 x i32]* %initial_mouse183, i64 0, i64 1, !dbg !12582
  %129 = load i32, i32* %arrayidx184, align 4, !dbg !12582
  %conv185 = sitofp i32 %129 to float, !dbg !12582
  store float %conv185, float* %arrayinit.element182, align 4, !dbg !12581
  call void @llvm.dbg.declare(metadata [2 x float]* %current_position, metadata !12583, metadata !DIExpression()), !dbg !12584
  %arrayinit.begin186 = getelementptr inbounds [2 x float], [2 x float]* %current_position, i64 0, i64 0, !dbg !12585
  %130 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12586
  %slow_mouse187 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %130, i32 0, i32 19, !dbg !12586
  %arrayidx188 = getelementptr inbounds [2 x i32], [2 x i32]* %slow_mouse187, i64 0, i64 0, !dbg !12586
  %131 = load i32, i32* %arrayidx188, align 8, !dbg !12586
  %conv189 = sitofp i32 %131 to float, !dbg !12586
  store float %conv189, float* %arrayinit.begin186, align 4, !dbg !12585
  %arrayinit.element190 = getelementptr inbounds float, float* %arrayinit.begin186, i64 1, !dbg !12585
  %132 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12586
  %slow_mouse191 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %132, i32 0, i32 19, !dbg !12586
  %arrayidx192 = getelementptr inbounds [2 x i32], [2 x i32]* %slow_mouse191, i64 0, i64 1, !dbg !12586
  %133 = load i32, i32* %arrayidx192, align 4, !dbg !12586
  %conv193 = sitofp i32 %133 to float, !dbg !12586
  store float %conv193, float* %arrayinit.element190, align 4, !dbg !12585
  %arraydecay194 = getelementptr inbounds [2 x float], [2 x float]* %initial_position, i64 0, i64 0, !dbg !12587
  %call195 = call %struct.Dial* @BLI_dial_initialize(float* %arraydecay194, float 0.000000e+00), !dbg !12588
  %134 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12589
  %dial196 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %134, i32 0, i32 21, !dbg !12590
  store %struct.Dial* %call195, %struct.Dial** %dial196, align 8, !dbg !12591
  %135 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12592
  %dial197 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %135, i32 0, i32 21, !dbg !12593
  %136 = load %struct.Dial*, %struct.Dial** %dial197, align 8, !dbg !12593
  %arraydecay198 = getelementptr inbounds [2 x float], [2 x float]* %current_position, i64 0, i64 0, !dbg !12594
  %call199 = call float @BLI_dial_angle(%struct.Dial* %136, float* %arraydecay198), !dbg !12595
  br label %if.end200, !dbg !12596

if.end200:                                        ; preds = %if.then177, %if.then166
  br label %if.end201, !dbg !12597

if.end201:                                        ; preds = %if.end200, %sw.bb162
  %137 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !12598
  %val202 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %137, i32 0, i32 3, !dbg !12600
  %138 = load i16, i16* %val202, align 2, !dbg !12600
  %conv203 = sext i16 %138 to i32, !dbg !12598
  %cmp204 = icmp eq i32 %conv203, 2, !dbg !12601
  br i1 %cmp204, label %if.then206, label %if.end214, !dbg !12602

if.then206:                                       ; preds = %if.end201
  %139 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12603
  %slow_mode207 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %139, i32 0, i32 20, !dbg !12605
  store i8 0, i8* %slow_mode207, align 8, !dbg !12606
  %140 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12607
  %dial208 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %140, i32 0, i32 21, !dbg !12609
  %141 = load %struct.Dial*, %struct.Dial** %dial208, align 8, !dbg !12609
  %tobool209 = icmp ne %struct.Dial* %141, null, !dbg !12607
  br i1 %tobool209, label %if.then210, label %if.end213, !dbg !12610

if.then210:                                       ; preds = %if.then206
  %142 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12611
  %143 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12613
  %dial211 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %143, i32 0, i32 21, !dbg !12614
  %144 = load %struct.Dial*, %struct.Dial** %dial211, align 8, !dbg !12614
  %145 = bitcast %struct.Dial* %144 to i8*, !dbg !12613
  call void %142(i8* %145), !dbg !12611
  %146 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12615
  %dial212 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %146, i32 0, i32 21, !dbg !12616
  store %struct.Dial* null, %struct.Dial** %dial212, align 8, !dbg !12617
  br label %if.end213, !dbg !12618

if.end213:                                        ; preds = %if.then210, %if.then206
  br label %if.end214, !dbg !12619

if.end214:                                        ; preds = %if.end213, %if.end201
  br label %sw.epilog215, !dbg !12620

sw.epilog215:                                     ; preds = %entry, %if.end214, %sw.bb161, %sw.bb160, %if.end159
  %147 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12621
  %call216 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %147), !dbg !12622
  call void @ED_region_tag_redraw(%struct.ARegion* %call216), !dbg !12623
  %148 = load float, float* %ret, align 4, !dbg !12624
  %cmp217 = fcmp une float %148, 1.000000e+00, !dbg !12626
  br i1 %cmp217, label %if.then219, label %if.end220, !dbg !12627

if.then219:                                       ; preds = %sw.epilog215
  %149 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12628
  %150 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !12629
  call void @radial_control_cancel(%struct.bContext* %149, %struct.wmOperator* %150), !dbg !12630
  br label %if.end220, !dbg !12630

if.end220:                                        ; preds = %if.then219, %sw.epilog215
  %151 = load float, float* %ret, align 4, !dbg !12631
  %conv221 = fptosi float %151 to i32, !dbg !12631
  ret i32 %conv221, !dbg !12632
}

; Function Attrs: noinline nounwind uwtable
define internal void @radial_control_cancel(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !12633 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %rc = alloca %struct.RadialControl*, align 8
  %wm = alloca %struct.wmWindowManager*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !12634, metadata !DIExpression()), !dbg !12635
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !12636, metadata !DIExpression()), !dbg !12637
  call void @llvm.dbg.declare(metadata %struct.RadialControl** %rc, metadata !12638, metadata !DIExpression()), !dbg !12639
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !12640
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 5, !dbg !12641
  %1 = load i8*, i8** %customdata, align 8, !dbg !12641
  %2 = bitcast i8* %1 to %struct.RadialControl*, !dbg !12640
  store %struct.RadialControl* %2, %struct.RadialControl** %rc, align 8, !dbg !12639
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm, metadata !12642, metadata !DIExpression()), !dbg !12643
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12644
  %call = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %3), !dbg !12645
  store %struct.wmWindowManager* %call, %struct.wmWindowManager** %wm, align 8, !dbg !12643
  %4 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12646
  %dial = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %4, i32 0, i32 21, !dbg !12648
  %5 = load %struct.Dial*, %struct.Dial** %dial, align 8, !dbg !12648
  %tobool = icmp ne %struct.Dial* %5, null, !dbg !12646
  br i1 %tobool, label %if.then, label %if.end, !dbg !12649

if.then:                                          ; preds = %entry
  %6 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12650
  %7 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12652
  %dial1 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %7, i32 0, i32 21, !dbg !12653
  %8 = load %struct.Dial*, %struct.Dial** %dial1, align 8, !dbg !12653
  %9 = bitcast %struct.Dial* %8 to i8*, !dbg !12652
  call void %6(i8* %9), !dbg !12650
  %10 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12654
  %dial2 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %10, i32 0, i32 21, !dbg !12655
  store %struct.Dial* null, %struct.Dial** %dial2, align 8, !dbg !12656
  br label %if.end, !dbg !12657

if.end:                                           ; preds = %if.then, %entry
  %11 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !12658
  %12 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12659
  %cursor = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %12, i32 0, i32 25, !dbg !12660
  %13 = load i8*, i8** %cursor, align 8, !dbg !12660
  call void @WM_paint_cursor_end(%struct.wmWindowManager* %11, i8* %13), !dbg !12661
  %14 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !12662
  %paintcursors = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %14, i32 0, i32 11, !dbg !12663
  %15 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12664
  %orig_paintcursors = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %15, i32 0, i32 23, !dbg !12665
  %16 = bitcast %struct.ListBase* %paintcursors to i8*, !dbg !12665
  %17 = bitcast %struct.ListBase* %orig_paintcursors to i8*, !dbg !12665
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 16, i1 false), !dbg !12665
  %18 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12666
  call void @WM_event_add_notifier(%struct.bContext* %18, i32 33554432, i8* null), !dbg !12667
  %19 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12668
  %gltex = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %19, i32 0, i32 22, !dbg !12669
  call void @glDeleteTextures(i32 1, i32* %gltex), !dbg !12670
  %20 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12671
  %21 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12672
  %22 = bitcast %struct.RadialControl* %21 to i8*, !dbg !12672
  call void %20(i8* %22), !dbg !12671
  ret void, !dbg !12673
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @radial_control_get_properties(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !12674 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %rc = alloca %struct.RadialControl*, align 8
  %ctx_ptr = alloca %struct.PointerRNA, align 8
  %use_secondary_ptr = alloca %struct.PointerRNA, align 8
  %use_secondary_prop = alloca %struct.PropertyRNA*, align 8
  %data_path = alloca i8*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !12675, metadata !DIExpression()), !dbg !12676
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !12677, metadata !DIExpression()), !dbg !12678
  call void @llvm.dbg.declare(metadata %struct.RadialControl** %rc, metadata !12679, metadata !DIExpression()), !dbg !12680
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !12681
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 5, !dbg !12682
  %1 = load i8*, i8** %customdata, align 8, !dbg !12682
  %2 = bitcast i8* %1 to %struct.RadialControl*, !dbg !12681
  store %struct.RadialControl* %2, %struct.RadialControl** %rc, align 8, !dbg !12680
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %ctx_ptr, metadata !12683, metadata !DIExpression()), !dbg !12684
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %use_secondary_ptr, metadata !12685, metadata !DIExpression()), !dbg !12686
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %use_secondary_prop, metadata !12687, metadata !DIExpression()), !dbg !12688
  store %struct.PropertyRNA* null, %struct.PropertyRNA** %use_secondary_prop, align 8, !dbg !12688
  call void @llvm.dbg.declare(metadata i8** %data_path, metadata !12689, metadata !DIExpression()), !dbg !12690
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12691
  %4 = bitcast %struct.bContext* %3 to i8*, !dbg !12691
  call void @RNA_pointer_create(%struct.ID* null, %struct.StructRNA* @RNA_Context, i8* %4, %struct.PointerRNA* %ctx_ptr), !dbg !12692
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !12693
  %call = call i32 @radial_control_get_path(%struct.PointerRNA* %ctx_ptr, %struct.wmOperator* %5, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.354, i64 0, i64 0), %struct.PointerRNA* %use_secondary_ptr, %struct.PropertyRNA** %use_secondary_prop, i32 0, i32 5), !dbg !12695
  %tobool = icmp ne i32 %call, 0, !dbg !12695
  br i1 %tobool, label %if.else, label %if.then, !dbg !12696

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !12697
  br label %return, !dbg !12697

if.else:                                          ; preds = %entry
  %6 = load %struct.PropertyRNA*, %struct.PropertyRNA** %use_secondary_prop, align 8, !dbg !12699
  %tobool1 = icmp ne %struct.PropertyRNA* %6, null, !dbg !12699
  br i1 %tobool1, label %land.lhs.true, label %if.else5, !dbg !12702

land.lhs.true:                                    ; preds = %if.else
  %7 = load %struct.PropertyRNA*, %struct.PropertyRNA** %use_secondary_prop, align 8, !dbg !12703
  %call2 = call i32 @RNA_property_boolean_get(%struct.PointerRNA* %use_secondary_ptr, %struct.PropertyRNA* %7), !dbg !12704
  %tobool3 = icmp ne i32 %call2, 0, !dbg !12704
  br i1 %tobool3, label %if.then4, label %if.else5, !dbg !12705

if.then4:                                         ; preds = %land.lhs.true
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.351, i64 0, i64 0), i8** %data_path, align 8, !dbg !12706
  br label %if.end, !dbg !12708

if.else5:                                         ; preds = %land.lhs.true, %if.else
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.348, i64 0, i64 0), i8** %data_path, align 8, !dbg !12709
  br label %if.end

if.end:                                           ; preds = %if.else5, %if.then4
  br label %if.end6

if.end6:                                          ; preds = %if.end
  %8 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !12711
  %9 = load i8*, i8** %data_path, align 8, !dbg !12713
  %10 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12714
  %ptr = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %10, i32 0, i32 2, !dbg !12715
  %11 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12716
  %prop = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %11, i32 0, i32 8, !dbg !12717
  %call7 = call i32 @radial_control_get_path(%struct.PointerRNA* %ctx_ptr, %struct.wmOperator* %8, i8* %9, %struct.PointerRNA* %ptr, %struct.PropertyRNA** %prop, i32 0, i32 0), !dbg !12718
  %tobool8 = icmp ne i32 %call7, 0, !dbg !12718
  br i1 %tobool8, label %if.end10, label %if.then9, !dbg !12719

if.then9:                                         ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !12720
  br label %return, !dbg !12720

if.end10:                                         ; preds = %if.end6
  %12 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12721
  %prop11 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %12, i32 0, i32 8, !dbg !12723
  %13 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop11, align 8, !dbg !12723
  %tobool12 = icmp ne %struct.PropertyRNA* %13, null, !dbg !12721
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !12724

if.then13:                                        ; preds = %if.end10
  store i32 0, i32* %retval, align 4, !dbg !12725
  br label %return, !dbg !12725

if.end14:                                         ; preds = %if.end10
  %14 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !12726
  %15 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12728
  %rot_ptr = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %15, i32 0, i32 5, !dbg !12729
  %16 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12730
  %rot_prop = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %16, i32 0, i32 11, !dbg !12731
  %call15 = call i32 @radial_control_get_path(%struct.PointerRNA* %ctx_ptr, %struct.wmOperator* %14, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.357, i64 0, i64 0), %struct.PointerRNA* %rot_ptr, %struct.PropertyRNA** %rot_prop, i32 0, i32 2), !dbg !12732
  %tobool16 = icmp ne i32 %call15, 0, !dbg !12732
  br i1 %tobool16, label %if.end18, label %if.then17, !dbg !12733

if.then17:                                        ; preds = %if.end14
  store i32 0, i32* %retval, align 4, !dbg !12734
  br label %return, !dbg !12734

if.end18:                                         ; preds = %if.end14
  %17 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !12735
  %18 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12737
  %col_ptr = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %18, i32 0, i32 3, !dbg !12738
  %19 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12739
  %col_prop = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %19, i32 0, i32 9, !dbg !12740
  %call19 = call i32 @radial_control_get_path(%struct.PointerRNA* %ctx_ptr, %struct.wmOperator* %17, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.360, i64 0, i64 0), %struct.PointerRNA* %col_ptr, %struct.PropertyRNA** %col_prop, i32 3, i32 2), !dbg !12741
  %tobool20 = icmp ne i32 %call19, 0, !dbg !12741
  br i1 %tobool20, label %if.end22, label %if.then21, !dbg !12742

if.then21:                                        ; preds = %if.end18
  store i32 0, i32* %retval, align 4, !dbg !12743
  br label %return, !dbg !12743

if.end22:                                         ; preds = %if.end18
  %20 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !12744
  %21 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12746
  %fill_col_ptr = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %21, i32 0, i32 4, !dbg !12747
  %22 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12748
  %fill_col_prop = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %22, i32 0, i32 10, !dbg !12749
  %call23 = call i32 @radial_control_get_path(%struct.PointerRNA* %ctx_ptr, %struct.wmOperator* %20, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.363, i64 0, i64 0), %struct.PointerRNA* %fill_col_ptr, %struct.PropertyRNA** %fill_col_prop, i32 3, i32 2), !dbg !12750
  %tobool24 = icmp ne i32 %call23, 0, !dbg !12750
  br i1 %tobool24, label %if.end26, label %if.then25, !dbg !12751

if.then25:                                        ; preds = %if.end22
  store i32 0, i32* %retval, align 4, !dbg !12752
  br label %return, !dbg !12752

if.end26:                                         ; preds = %if.end22
  %23 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !12753
  %24 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12755
  %zoom_ptr = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %24, i32 0, i32 6, !dbg !12756
  %25 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12757
  %zoom_prop = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %25, i32 0, i32 12, !dbg !12758
  %call27 = call i32 @radial_control_get_path(%struct.PointerRNA* %ctx_ptr, %struct.wmOperator* %23, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.366, i64 0, i64 0), %struct.PointerRNA* %zoom_ptr, %struct.PropertyRNA** %zoom_prop, i32 2, i32 3), !dbg !12759
  %tobool28 = icmp ne i32 %call27, 0, !dbg !12759
  br i1 %tobool28, label %if.end30, label %if.then29, !dbg !12760

if.then29:                                        ; preds = %if.end26
  store i32 0, i32* %retval, align 4, !dbg !12761
  br label %return, !dbg !12761

if.end30:                                         ; preds = %if.end26
  %26 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !12763
  %27 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12765
  %image_id_ptr = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %27, i32 0, i32 7, !dbg !12766
  %call31 = call i32 @radial_control_get_path(%struct.PointerRNA* %ctx_ptr, %struct.wmOperator* %26, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.369, i64 0, i64 0), %struct.PointerRNA* %image_id_ptr, %struct.PropertyRNA** null, i32 0, i32 0), !dbg !12767
  %tobool32 = icmp ne i32 %call31, 0, !dbg !12767
  br i1 %tobool32, label %if.else34, label %if.then33, !dbg !12768

if.then33:                                        ; preds = %if.end30
  store i32 0, i32* %retval, align 4, !dbg !12769
  br label %return, !dbg !12769

if.else34:                                        ; preds = %if.end30
  %28 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12770
  %image_id_ptr35 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %28, i32 0, i32 7, !dbg !12772
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %image_id_ptr35, i32 0, i32 2, !dbg !12773
  %29 = load i8*, i8** %data, align 8, !dbg !12773
  %tobool36 = icmp ne i8* %29, null, !dbg !12770
  br i1 %tobool36, label %if.then37, label %if.end43, !dbg !12774

if.then37:                                        ; preds = %if.else34
  %30 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12775
  %image_id_ptr38 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %30, i32 0, i32 7, !dbg !12778
  %type = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %image_id_ptr38, i32 0, i32 1, !dbg !12779
  %31 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !12779
  %call39 = call zeroext i8 @RNA_struct_is_ID(%struct.StructRNA* %31), !dbg !12780
  %tobool40 = icmp ne i8 %call39, 0, !dbg !12780
  br i1 %tobool40, label %if.end42, label %if.then41, !dbg !12781

if.then41:                                        ; preds = %if.then37
  %32 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !12782
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %32, i32 0, i32 8, !dbg !12784
  %33 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !12784
  call void @BKE_report(%struct.ReportList* %33, i32 32, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.378, i64 0, i64 0)), !dbg !12785
  store i32 0, i32* %retval, align 4, !dbg !12786
  br label %return, !dbg !12786

if.end42:                                         ; preds = %if.then37
  br label %if.end43, !dbg !12787

if.end43:                                         ; preds = %if.end42, %if.else34
  br label %if.end44

if.end44:                                         ; preds = %if.end43
  %34 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !12788
  %ptr45 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %34, i32 0, i32 7, !dbg !12789
  %35 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr45, align 8, !dbg !12789
  %call46 = call i32 @RNA_boolean_get(%struct.PointerRNA* %35, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.372, i64 0, i64 0)), !dbg !12790
  %conv = trunc i32 %call46 to i8, !dbg !12790
  %36 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12791
  %use_secondary_tex = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %36, i32 0, i32 24, !dbg !12792
  store i8 %conv, i8* %use_secondary_tex, align 8, !dbg !12793
  store i32 1, i32* %retval, align 4, !dbg !12794
  br label %return, !dbg !12794

return:                                           ; preds = %if.end44, %if.then41, %if.then33, %if.then29, %if.then25, %if.then21, %if.then17, %if.then13, %if.then9, %if.then
  %37 = load i32, i32* %retval, align 4, !dbg !12795
  ret i32 %37, !dbg !12795
}

declare dso_local i32 @RNA_property_int_get(%struct.PointerRNA*, %struct.PropertyRNA*) #2

declare dso_local void @RNA_property_int_ui_range(%struct.PointerRNA*, %struct.PropertyRNA*, i32*, i32*, i32*) #2

declare dso_local float @RNA_property_float_get(%struct.PointerRNA*, %struct.PropertyRNA*) #2

declare dso_local void @RNA_property_float_ui_range(%struct.PointerRNA*, %struct.PropertyRNA*, float*, float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @radial_control_set_initial_mouse(%struct.RadialControl* %rc, %struct.wmEvent* %event) #0 !dbg !12796 {
entry:
  %rc.addr = alloca %struct.RadialControl*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %d = alloca [2 x float], align 4
  %zoom = alloca [2 x float], align 4
  store %struct.RadialControl* %rc, %struct.RadialControl** %rc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RadialControl** %rc.addr, metadata !12799, metadata !DIExpression()), !dbg !12800
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !12801, metadata !DIExpression()), !dbg !12802
  call void @llvm.dbg.declare(metadata [2 x float]* %d, metadata !12803, metadata !DIExpression()), !dbg !12804
  %0 = bitcast [2 x float]* %d to i8*, !dbg !12804
  call void @llvm.memset.p0i8.i64(i8* align 4 %0, i8 0, i64 8, i1 false), !dbg !12804
  call void @llvm.dbg.declare(metadata [2 x float]* %zoom, metadata !12805, metadata !DIExpression()), !dbg !12806
  %1 = bitcast [2 x float]* %zoom to i8*, !dbg !12806
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1, i8* align 4 bitcast ([2 x float]* @__const.radial_control_set_initial_mouse.zoom to i8*), i64 8, i1 false), !dbg !12806
  %2 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !12807
  %x = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %2, i32 0, i32 4, !dbg !12808
  %3 = load i32, i32* %x, align 4, !dbg !12808
  %4 = load %struct.RadialControl*, %struct.RadialControl** %rc.addr, align 8, !dbg !12809
  %initial_mouse = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %4, i32 0, i32 18, !dbg !12810
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %initial_mouse, i64 0, i64 0, !dbg !12809
  store i32 %3, i32* %arrayidx, align 8, !dbg !12811
  %5 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !12812
  %y = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %5, i32 0, i32 5, !dbg !12813
  %6 = load i32, i32* %y, align 8, !dbg !12813
  %7 = load %struct.RadialControl*, %struct.RadialControl** %rc.addr, align 8, !dbg !12814
  %initial_mouse1 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %7, i32 0, i32 18, !dbg !12815
  %arrayidx2 = getelementptr inbounds [2 x i32], [2 x i32]* %initial_mouse1, i64 0, i64 1, !dbg !12814
  store i32 %6, i32* %arrayidx2, align 4, !dbg !12816
  %8 = load %struct.RadialControl*, %struct.RadialControl** %rc.addr, align 8, !dbg !12817
  %subtype = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %8, i32 0, i32 1, !dbg !12818
  %9 = load i32, i32* %subtype, align 4, !dbg !12818
  switch i32 %9, label %sw.default [
    i32 0, label %sw.bb
    i32 65554, label %sw.bb
    i32 12, label %sw.bb
    i32 15, label %sw.bb4
    i32 327696, label %sw.bb7
  ], !dbg !12819

sw.bb:                                            ; preds = %entry, %entry, %entry
  %10 = load %struct.RadialControl*, %struct.RadialControl** %rc.addr, align 8, !dbg !12820
  %initial_value = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %10, i32 0, i32 14, !dbg !12822
  %11 = load float, float* %initial_value, align 8, !dbg !12822
  %arrayidx3 = getelementptr inbounds [2 x float], [2 x float]* %d, i64 0, i64 0, !dbg !12823
  store float %11, float* %arrayidx3, align 4, !dbg !12824
  br label %sw.epilog, !dbg !12825

sw.bb4:                                           ; preds = %entry
  %12 = load %struct.RadialControl*, %struct.RadialControl** %rc.addr, align 8, !dbg !12826
  %initial_value5 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %12, i32 0, i32 14, !dbg !12827
  %13 = load float, float* %initial_value5, align 8, !dbg !12827
  %sub = fsub float 1.000000e+00, %13, !dbg !12828
  %mul = fmul float %sub, 1.650000e+02, !dbg !12829
  %add = fadd float %mul, 3.500000e+01, !dbg !12830
  %arrayidx6 = getelementptr inbounds [2 x float], [2 x float]* %d, i64 0, i64 0, !dbg !12831
  store float %add, float* %arrayidx6, align 4, !dbg !12832
  br label %sw.epilog, !dbg !12833

sw.bb7:                                           ; preds = %entry
  %14 = load %struct.RadialControl*, %struct.RadialControl** %rc.addr, align 8, !dbg !12834
  %initial_value8 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %14, i32 0, i32 14, !dbg !12835
  %15 = load float, float* %initial_value8, align 8, !dbg !12835
  %call = call float @cosf(float %15) #7, !dbg !12836
  %mul9 = fmul float 2.000000e+02, %call, !dbg !12837
  %arrayidx10 = getelementptr inbounds [2 x float], [2 x float]* %d, i64 0, i64 0, !dbg !12838
  store float %mul9, float* %arrayidx10, align 4, !dbg !12839
  %16 = load %struct.RadialControl*, %struct.RadialControl** %rc.addr, align 8, !dbg !12840
  %initial_value11 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %16, i32 0, i32 14, !dbg !12841
  %17 = load float, float* %initial_value11, align 8, !dbg !12841
  %call12 = call float @sinf(float %17) #7, !dbg !12842
  %mul13 = fmul float 2.000000e+02, %call12, !dbg !12843
  %arrayidx14 = getelementptr inbounds [2 x float], [2 x float]* %d, i64 0, i64 1, !dbg !12844
  store float %mul13, float* %arrayidx14, align 4, !dbg !12845
  br label %sw.epilog, !dbg !12846

sw.default:                                       ; preds = %entry
  br label %return, !dbg !12847

sw.epilog:                                        ; preds = %sw.bb7, %sw.bb4, %sw.bb
  %18 = load %struct.RadialControl*, %struct.RadialControl** %rc.addr, align 8, !dbg !12848
  %zoom_prop = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %18, i32 0, i32 12, !dbg !12850
  %19 = load %struct.PropertyRNA*, %struct.PropertyRNA** %zoom_prop, align 8, !dbg !12850
  %tobool = icmp ne %struct.PropertyRNA* %19, null, !dbg !12848
  br i1 %tobool, label %if.then, label %if.end, !dbg !12851

if.then:                                          ; preds = %sw.epilog
  %20 = load %struct.RadialControl*, %struct.RadialControl** %rc.addr, align 8, !dbg !12852
  %zoom_ptr = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %20, i32 0, i32 6, !dbg !12854
  %21 = load %struct.RadialControl*, %struct.RadialControl** %rc.addr, align 8, !dbg !12855
  %zoom_prop15 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %21, i32 0, i32 12, !dbg !12856
  %22 = load %struct.PropertyRNA*, %struct.PropertyRNA** %zoom_prop15, align 8, !dbg !12856
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %zoom, i64 0, i64 0, !dbg !12857
  call void @RNA_property_float_get_array(%struct.PointerRNA* %zoom_ptr, %struct.PropertyRNA* %22, float* %arraydecay), !dbg !12858
  %arrayidx16 = getelementptr inbounds [2 x float], [2 x float]* %zoom, i64 0, i64 0, !dbg !12859
  %23 = load float, float* %arrayidx16, align 4, !dbg !12859
  %arrayidx17 = getelementptr inbounds [2 x float], [2 x float]* %d, i64 0, i64 0, !dbg !12860
  %24 = load float, float* %arrayidx17, align 4, !dbg !12861
  %mul18 = fmul float %24, %23, !dbg !12861
  store float %mul18, float* %arrayidx17, align 4, !dbg !12861
  %arrayidx19 = getelementptr inbounds [2 x float], [2 x float]* %zoom, i64 0, i64 1, !dbg !12862
  %25 = load float, float* %arrayidx19, align 4, !dbg !12862
  %arrayidx20 = getelementptr inbounds [2 x float], [2 x float]* %d, i64 0, i64 1, !dbg !12863
  %26 = load float, float* %arrayidx20, align 4, !dbg !12864
  %mul21 = fmul float %26, %25, !dbg !12864
  store float %mul21, float* %arrayidx20, align 4, !dbg !12864
  br label %if.end, !dbg !12865

if.end:                                           ; preds = %if.then, %sw.epilog
  %arrayidx22 = getelementptr inbounds [2 x float], [2 x float]* %d, i64 0, i64 0, !dbg !12866
  %27 = load float, float* %arrayidx22, align 4, !dbg !12866
  %28 = load %struct.RadialControl*, %struct.RadialControl** %rc.addr, align 8, !dbg !12867
  %initial_mouse23 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %28, i32 0, i32 18, !dbg !12868
  %arrayidx24 = getelementptr inbounds [2 x i32], [2 x i32]* %initial_mouse23, i64 0, i64 0, !dbg !12867
  %29 = load i32, i32* %arrayidx24, align 8, !dbg !12869
  %conv = sitofp i32 %29 to float, !dbg !12869
  %sub25 = fsub float %conv, %27, !dbg !12869
  %conv26 = fptosi float %sub25 to i32, !dbg !12869
  store i32 %conv26, i32* %arrayidx24, align 8, !dbg !12869
  %arrayidx27 = getelementptr inbounds [2 x float], [2 x float]* %d, i64 0, i64 1, !dbg !12870
  %30 = load float, float* %arrayidx27, align 4, !dbg !12870
  %31 = load %struct.RadialControl*, %struct.RadialControl** %rc.addr, align 8, !dbg !12871
  %initial_mouse28 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %31, i32 0, i32 18, !dbg !12872
  %arrayidx29 = getelementptr inbounds [2 x i32], [2 x i32]* %initial_mouse28, i64 0, i64 1, !dbg !12871
  %32 = load i32, i32* %arrayidx29, align 4, !dbg !12873
  %conv30 = sitofp i32 %32 to float, !dbg !12873
  %sub31 = fsub float %conv30, %30, !dbg !12873
  %conv32 = fptosi float %sub31 to i32, !dbg !12873
  store i32 %conv32, i32* %arrayidx29, align 4, !dbg !12873
  br label %return, !dbg !12874

return:                                           ; preds = %if.end, %sw.default
  ret void, !dbg !12874
}

; Function Attrs: noinline nounwind uwtable
define internal void @radial_control_set_tex(%struct.RadialControl* %rc) #0 !dbg !12875 {
entry:
  %rc.addr = alloca %struct.RadialControl*, align 8
  %ibuf = alloca %struct.ImBuf*, align 8
  store %struct.RadialControl* %rc, %struct.RadialControl** %rc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RadialControl** %rc.addr, metadata !12878, metadata !DIExpression()), !dbg !12879
  call void @llvm.dbg.declare(metadata %struct.ImBuf** %ibuf, metadata !12880, metadata !DIExpression()), !dbg !12881
  %0 = load %struct.RadialControl*, %struct.RadialControl** %rc.addr, align 8, !dbg !12882
  %image_id_ptr = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %0, i32 0, i32 7, !dbg !12883
  %type = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %image_id_ptr, i32 0, i32 1, !dbg !12884
  %1 = load %struct.StructRNA*, %struct.StructRNA** %type, align 8, !dbg !12884
  %call = call signext i16 @RNA_type_to_ID_code(%struct.StructRNA* %1), !dbg !12885
  %conv = sext i16 %call to i32, !dbg !12885
  switch i32 %conv, label %sw.default [
    i32 21058, label %sw.bb
  ], !dbg !12886

sw.bb:                                            ; preds = %entry
  %2 = load %struct.RadialControl*, %struct.RadialControl** %rc.addr, align 8, !dbg !12887
  %image_id_ptr1 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %2, i32 0, i32 7, !dbg !12890
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %image_id_ptr1, i32 0, i32 2, !dbg !12891
  %3 = load i8*, i8** %data, align 8, !dbg !12891
  %4 = bitcast i8* %3 to %struct.Brush*, !dbg !12887
  %5 = load %struct.RadialControl*, %struct.RadialControl** %rc.addr, align 8, !dbg !12892
  %use_secondary_tex = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %5, i32 0, i32 24, !dbg !12893
  %6 = load i8, i8* %use_secondary_tex, align 8, !dbg !12893
  %call2 = call %struct.ImBuf* @BKE_brush_gen_radial_control_imbuf(%struct.Brush* %4, i8 zeroext %6), !dbg !12894
  store %struct.ImBuf* %call2, %struct.ImBuf** %ibuf, align 8, !dbg !12895
  %tobool = icmp ne %struct.ImBuf* %call2, null, !dbg !12895
  br i1 %tobool, label %if.then, label %if.end, !dbg !12896

if.then:                                          ; preds = %sw.bb
  %7 = load %struct.RadialControl*, %struct.RadialControl** %rc.addr, align 8, !dbg !12897
  %gltex = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %7, i32 0, i32 22, !dbg !12899
  call void @glGenTextures(i32 1, i32* %gltex), !dbg !12900
  %8 = load %struct.RadialControl*, %struct.RadialControl** %rc.addr, align 8, !dbg !12901
  %gltex3 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %8, i32 0, i32 22, !dbg !12902
  %9 = load i32, i32* %gltex3, align 8, !dbg !12902
  call void @glBindTexture(i32 3553, i32 %9), !dbg !12903
  %10 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !12904
  %x = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %10, i32 0, i32 2, !dbg !12905
  %11 = load i32, i32* %x, align 8, !dbg !12905
  %12 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !12906
  %y = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %12, i32 0, i32 3, !dbg !12907
  %13 = load i32, i32* %y, align 4, !dbg !12907
  %14 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !12908
  %rect_float = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %14, i32 0, i32 9, !dbg !12909
  %15 = load float*, float** %rect_float, align 8, !dbg !12909
  %16 = bitcast float* %15 to i8*, !dbg !12908
  call void @glTexImage2D(i32 3553, i32 0, i32 6406, i32 %11, i32 %13, i32 0, i32 6406, i32 5126, i8* %16), !dbg !12910
  %17 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12911
  %18 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !12912
  %rect_float4 = getelementptr inbounds %struct.ImBuf, %struct.ImBuf* %18, i32 0, i32 9, !dbg !12913
  %19 = load float*, float** %rect_float4, align 8, !dbg !12913
  %20 = bitcast float* %19 to i8*, !dbg !12912
  call void %17(i8* %20), !dbg !12911
  %21 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12914
  %22 = load %struct.ImBuf*, %struct.ImBuf** %ibuf, align 8, !dbg !12915
  %23 = bitcast %struct.ImBuf* %22 to i8*, !dbg !12915
  call void %21(i8* %23), !dbg !12914
  br label %if.end, !dbg !12916

if.end:                                           ; preds = %if.then, %sw.bb
  br label %sw.epilog, !dbg !12917

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !12918

sw.epilog:                                        ; preds = %sw.default, %if.end
  ret void, !dbg !12919
}

; Function Attrs: noinline nounwind uwtable
define internal void @BLI_listbase_clear(%struct.ListBase* %lb) #0 !dbg !12920 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !12925, metadata !DIExpression()), !dbg !12926
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !12927
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 1, !dbg !12928
  store i8* null, i8** %last, align 8, !dbg !12929
  %1 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !12930
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !12931
  store i8* null, i8** %first, align 8, !dbg !12932
  ret void, !dbg !12933
}

; Function Attrs: noinline nounwind uwtable
define internal void @radial_control_paint_cursor(%struct.bContext* %C, i32 %x, i32 %y, i8* %customdata) #0 !dbg !12934 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %customdata.addr = alloca i8*, align 8
  %rc = alloca %struct.RadialControl*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %style = alloca %struct.uiStyle*, align 8
  %fstyle = alloca %struct.uiFontStyle*, align 8
  %fontid = alloca i32, align 4
  %fstyle_points = alloca i16, align 2
  %str = alloca [6 x i8], align 1
  %strdrawlen = alloca i16, align 2
  %strwidth = alloca float, align 4
  %strheight = alloca float, align 4
  %r1 = alloca float, align 4
  %r2 = alloca float, align 4
  %rmin = alloca float, align 4
  %tex_radius = alloca float, align 4
  %alpha = alloca float, align 4
  %zoom = alloca [2 x float], align 4
  %col = alloca [3 x float], align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !12935, metadata !DIExpression()), !dbg !12936
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !12937, metadata !DIExpression()), !dbg !12938
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !12939, metadata !DIExpression()), !dbg !12940
  store i8* %customdata, i8** %customdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %customdata.addr, metadata !12941, metadata !DIExpression()), !dbg !12942
  call void @llvm.dbg.declare(metadata %struct.RadialControl** %rc, metadata !12943, metadata !DIExpression()), !dbg !12944
  %0 = load i8*, i8** %customdata.addr, align 8, !dbg !12945
  %1 = bitcast i8* %0 to %struct.RadialControl*, !dbg !12945
  store %struct.RadialControl* %1, %struct.RadialControl** %rc, align 8, !dbg !12944
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !12946, metadata !DIExpression()), !dbg !12947
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !12948
  %call = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %2), !dbg !12949
  store %struct.ARegion* %call, %struct.ARegion** %ar, align 8, !dbg !12947
  call void @llvm.dbg.declare(metadata %struct.uiStyle** %style, metadata !12950, metadata !DIExpression()), !dbg !12951
  %call1 = call %struct.uiStyle* @UI_GetStyle(), !dbg !12952
  store %struct.uiStyle* %call1, %struct.uiStyle** %style, align 8, !dbg !12951
  call void @llvm.dbg.declare(metadata %struct.uiFontStyle** %fstyle, metadata !12953, metadata !DIExpression()), !dbg !12956
  %3 = load %struct.uiStyle*, %struct.uiStyle** %style, align 8, !dbg !12957
  %widget = getelementptr inbounds %struct.uiStyle, %struct.uiStyle* %3, i32 0, i32 6, !dbg !12958
  store %struct.uiFontStyle* %widget, %struct.uiFontStyle** %fstyle, align 8, !dbg !12956
  call void @llvm.dbg.declare(metadata i32* %fontid, metadata !12959, metadata !DIExpression()), !dbg !12960
  %4 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle, align 8, !dbg !12961
  %uifont_id = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %4, i32 0, i32 0, !dbg !12962
  %5 = load i16, i16* %uifont_id, align 4, !dbg !12962
  %conv = sext i16 %5 to i32, !dbg !12961
  store i32 %conv, i32* %fontid, align 4, !dbg !12960
  call void @llvm.dbg.declare(metadata i16* %fstyle_points, metadata !12963, metadata !DIExpression()), !dbg !12964
  %6 = load %struct.uiFontStyle*, %struct.uiFontStyle** %fstyle, align 8, !dbg !12965
  %points = getelementptr inbounds %struct.uiFontStyle, %struct.uiFontStyle* %6, i32 0, i32 1, !dbg !12966
  %7 = load i16, i16* %points, align 2, !dbg !12966
  store i16 %7, i16* %fstyle_points, align 2, !dbg !12964
  call void @llvm.dbg.declare(metadata [6 x i8]* %str, metadata !12967, metadata !DIExpression()), !dbg !12968
  call void @llvm.dbg.declare(metadata i16* %strdrawlen, metadata !12969, metadata !DIExpression()), !dbg !12970
  store i16 0, i16* %strdrawlen, align 2, !dbg !12970
  call void @llvm.dbg.declare(metadata float* %strwidth, metadata !12971, metadata !DIExpression()), !dbg !12972
  call void @llvm.dbg.declare(metadata float* %strheight, metadata !12973, metadata !DIExpression()), !dbg !12974
  call void @llvm.dbg.declare(metadata float* %r1, metadata !12975, metadata !DIExpression()), !dbg !12976
  store float 0.000000e+00, float* %r1, align 4, !dbg !12976
  call void @llvm.dbg.declare(metadata float* %r2, metadata !12977, metadata !DIExpression()), !dbg !12978
  store float 0.000000e+00, float* %r2, align 4, !dbg !12978
  call void @llvm.dbg.declare(metadata float* %rmin, metadata !12979, metadata !DIExpression()), !dbg !12980
  store float 0.000000e+00, float* %rmin, align 4, !dbg !12980
  call void @llvm.dbg.declare(metadata float* %tex_radius, metadata !12981, metadata !DIExpression()), !dbg !12982
  call void @llvm.dbg.declare(metadata float* %alpha, metadata !12983, metadata !DIExpression()), !dbg !12984
  call void @llvm.dbg.declare(metadata [2 x float]* %zoom, metadata !12985, metadata !DIExpression()), !dbg !12986
  call void @llvm.dbg.declare(metadata [3 x float]* %col, metadata !12987, metadata !DIExpression()), !dbg !12988
  %8 = bitcast [3 x float]* %col to i8*, !dbg !12988
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %8, i8* align 4 bitcast ([3 x float]* @__const.radial_control_paint_cursor.col to i8*), i64 12, i1 false), !dbg !12988
  %9 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12989
  %subtype = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %9, i32 0, i32 1, !dbg !12990
  %10 = load i32, i32* %subtype, align 4, !dbg !12990
  switch i32 %10, label %sw.default [
    i32 0, label %sw.bb
    i32 65554, label %sw.bb
    i32 12, label %sw.bb
    i32 15, label %sw.bb2
    i32 327696, label %sw.bb12
  ], !dbg !12991

sw.bb:                                            ; preds = %entry, %entry, %entry
  %11 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12992
  %current_value = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %11, i32 0, i32 15, !dbg !12994
  %12 = load float, float* %current_value, align 4, !dbg !12994
  store float %12, float* %r1, align 4, !dbg !12995
  %13 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !12996
  %initial_value = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %13, i32 0, i32 14, !dbg !12997
  %14 = load float, float* %initial_value, align 8, !dbg !12997
  store float %14, float* %r2, align 4, !dbg !12998
  %15 = load float, float* %r1, align 4, !dbg !12999
  store float %15, float* %tex_radius, align 4, !dbg !13000
  store float 7.500000e-01, float* %alpha, align 4, !dbg !13001
  br label %sw.epilog, !dbg !13002

sw.bb2:                                           ; preds = %entry
  %16 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !13003
  %current_value3 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %16, i32 0, i32 15, !dbg !13004
  %17 = load float, float* %current_value3, align 4, !dbg !13004
  %sub = fsub float 1.000000e+00, %17, !dbg !13005
  %mul = fmul float %sub, 1.650000e+02, !dbg !13006
  %add = fadd float %mul, 3.500000e+01, !dbg !13007
  store float %add, float* %r1, align 4, !dbg !13008
  store float 2.000000e+02, float* %tex_radius, align 4, !dbg !13009
  store float 2.000000e+02, float* %r2, align 4, !dbg !13010
  store float 3.500000e+01, float* %rmin, align 4, !dbg !13011
  %18 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !13012
  %current_value4 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %18, i32 0, i32 15, !dbg !13013
  %19 = load float, float* %current_value4, align 4, !dbg !13013
  %div = fdiv float %19, 2.000000e+00, !dbg !13014
  %add5 = fadd float %div, 5.000000e-01, !dbg !13015
  store float %add5, float* %alpha, align 4, !dbg !13016
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %str, i64 0, i64 0, !dbg !13017
  %20 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !13018
  %current_value6 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %20, i32 0, i32 15, !dbg !13019
  %21 = load float, float* %current_value6, align 4, !dbg !13019
  %conv7 = fpext float %21 to double, !dbg !13018
  %call8 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay, i64 6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.383, i64 0, i64 0), double %conv7), !dbg !13020
  %arraydecay9 = getelementptr inbounds [6 x i8], [6 x i8]* %str, i64 0, i64 0, !dbg !13021
  %call10 = call i64 @BLI_strlen_utf8(i8* %arraydecay9), !dbg !13022
  %conv11 = trunc i64 %call10 to i16, !dbg !13022
  store i16 %conv11, i16* %strdrawlen, align 2, !dbg !13023
  br label %sw.epilog, !dbg !13024

sw.bb12:                                          ; preds = %entry
  store float 2.000000e+02, float* %tex_radius, align 4, !dbg !13025
  store float 2.000000e+02, float* %r2, align 4, !dbg !13026
  store float 2.000000e+02, float* %r1, align 4, !dbg !13027
  store float 7.500000e-01, float* %alpha, align 4, !dbg !13028
  store float 3.500000e+01, float* %rmin, align 4, !dbg !13029
  %arraydecay13 = getelementptr inbounds [6 x i8], [6 x i8]* %str, i64 0, i64 0, !dbg !13030
  %22 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !13031
  %current_value14 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %22, i32 0, i32 15, !dbg !13031
  %23 = load float, float* %current_value14, align 4, !dbg !13031
  %mul15 = fmul float %23, 0x404CA5DC20000000, !dbg !13031
  %conv16 = fpext float %mul15 to double, !dbg !13031
  %call17 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %arraydecay13, i64 6, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.384, i64 0, i64 0), double %conv16), !dbg !13032
  %arraydecay18 = getelementptr inbounds [6 x i8], [6 x i8]* %str, i64 0, i64 0, !dbg !13033
  %call19 = call i64 @BLI_strlen_utf8(i8* %arraydecay18), !dbg !13034
  %conv20 = trunc i64 %call19 to i16, !dbg !13034
  store i16 %conv20, i16* %strdrawlen, align 2, !dbg !13035
  br label %sw.epilog, !dbg !13036

sw.default:                                       ; preds = %entry
  store float 2.000000e+02, float* %tex_radius, align 4, !dbg !13037
  store float 7.500000e-01, float* %alpha, align 4, !dbg !13038
  br label %sw.epilog, !dbg !13039

sw.epilog:                                        ; preds = %sw.default, %sw.bb12, %sw.bb2, %sw.bb
  %24 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !13040
  %25 = load float, float* %r1, align 4, !dbg !13041
  %mul21 = fmul float %25, %24, !dbg !13041
  store float %mul21, float* %r1, align 4, !dbg !13041
  %26 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !13042
  %27 = load float, float* %r2, align 4, !dbg !13043
  %mul22 = fmul float %27, %26, !dbg !13043
  store float %mul22, float* %r2, align 4, !dbg !13043
  %28 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !13044
  %29 = load float, float* %tex_radius, align 4, !dbg !13045
  %mul23 = fmul float %29, %28, !dbg !13045
  store float %mul23, float* %tex_radius, align 4, !dbg !13045
  %30 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !13046
  %initial_mouse = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %30, i32 0, i32 18, !dbg !13047
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %initial_mouse, i64 0, i64 0, !dbg !13046
  %31 = load i32, i32* %arrayidx, align 8, !dbg !13046
  %32 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !13048
  %winrct = getelementptr inbounds %struct.ARegion, %struct.ARegion* %32, i32 0, i32 3, !dbg !13049
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %winrct, i32 0, i32 0, !dbg !13050
  %33 = load i32, i32* %xmin, align 8, !dbg !13050
  %sub24 = sub nsw i32 %31, %33, !dbg !13051
  store i32 %sub24, i32* %x.addr, align 4, !dbg !13052
  %34 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !13053
  %initial_mouse25 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %34, i32 0, i32 18, !dbg !13054
  %arrayidx26 = getelementptr inbounds [2 x i32], [2 x i32]* %initial_mouse25, i64 0, i64 1, !dbg !13053
  %35 = load i32, i32* %arrayidx26, align 4, !dbg !13053
  %36 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !13055
  %winrct27 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %36, i32 0, i32 3, !dbg !13056
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %winrct27, i32 0, i32 2, !dbg !13057
  %37 = load i32, i32* %ymin, align 8, !dbg !13057
  %sub28 = sub nsw i32 %35, %37, !dbg !13058
  store i32 %sub28, i32* %y.addr, align 4, !dbg !13059
  %38 = load i32, i32* %x.addr, align 4, !dbg !13060
  %conv29 = sitofp i32 %38 to float, !dbg !13061
  %39 = load i32, i32* %y.addr, align 4, !dbg !13062
  %conv30 = sitofp i32 %39 to float, !dbg !13063
  call void @glTranslatef(float %conv29, float %conv30, float 0.000000e+00), !dbg !13064
  call void @glEnable(i32 3042), !dbg !13065
  call void @glEnable(i32 2848), !dbg !13066
  %40 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !13067
  %zoom_prop = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %40, i32 0, i32 12, !dbg !13069
  %41 = load %struct.PropertyRNA*, %struct.PropertyRNA** %zoom_prop, align 8, !dbg !13069
  %tobool = icmp ne %struct.PropertyRNA* %41, null, !dbg !13067
  br i1 %tobool, label %if.then, label %if.end, !dbg !13070

if.then:                                          ; preds = %sw.epilog
  %42 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !13071
  %zoom_ptr = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %42, i32 0, i32 6, !dbg !13073
  %43 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !13074
  %zoom_prop31 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %43, i32 0, i32 12, !dbg !13075
  %44 = load %struct.PropertyRNA*, %struct.PropertyRNA** %zoom_prop31, align 8, !dbg !13075
  %arraydecay32 = getelementptr inbounds [2 x float], [2 x float]* %zoom, i64 0, i64 0, !dbg !13076
  call void @RNA_property_float_get_array(%struct.PointerRNA* %zoom_ptr, %struct.PropertyRNA* %44, float* %arraydecay32), !dbg !13077
  %arrayidx33 = getelementptr inbounds [2 x float], [2 x float]* %zoom, i64 0, i64 0, !dbg !13078
  %45 = load float, float* %arrayidx33, align 4, !dbg !13078
  %arrayidx34 = getelementptr inbounds [2 x float], [2 x float]* %zoom, i64 0, i64 1, !dbg !13079
  %46 = load float, float* %arrayidx34, align 4, !dbg !13079
  call void @glScalef(float %45, float %46, float 1.000000e+00), !dbg !13080
  br label %if.end, !dbg !13081

if.end:                                           ; preds = %if.then, %sw.epilog
  %47 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !13082
  %48 = load float, float* %tex_radius, align 4, !dbg !13083
  %49 = load float, float* %alpha, align 4, !dbg !13084
  call void @radial_control_paint_tex(%struct.RadialControl* %47, float %48, float %49), !dbg !13085
  %50 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !13086
  %col_prop = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %50, i32 0, i32 9, !dbg !13088
  %51 = load %struct.PropertyRNA*, %struct.PropertyRNA** %col_prop, align 8, !dbg !13088
  %tobool35 = icmp ne %struct.PropertyRNA* %51, null, !dbg !13086
  br i1 %tobool35, label %if.then36, label %if.end39, !dbg !13089

if.then36:                                        ; preds = %if.end
  %52 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !13090
  %col_ptr = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %52, i32 0, i32 3, !dbg !13091
  %53 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !13092
  %col_prop37 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %53, i32 0, i32 9, !dbg !13093
  %54 = load %struct.PropertyRNA*, %struct.PropertyRNA** %col_prop37, align 8, !dbg !13093
  %arraydecay38 = getelementptr inbounds [3 x float], [3 x float]* %col, i64 0, i64 0, !dbg !13094
  call void @RNA_property_float_get_array(%struct.PointerRNA* %col_ptr, %struct.PropertyRNA* %54, float* %arraydecay38), !dbg !13095
  br label %if.end39, !dbg !13095

if.end39:                                         ; preds = %if.then36, %if.end
  %arrayidx40 = getelementptr inbounds [3 x float], [3 x float]* %col, i64 0, i64 0, !dbg !13096
  %55 = load float, float* %arrayidx40, align 4, !dbg !13096
  %arrayidx41 = getelementptr inbounds [3 x float], [3 x float]* %col, i64 0, i64 1, !dbg !13097
  %56 = load float, float* %arrayidx41, align 4, !dbg !13097
  %arrayidx42 = getelementptr inbounds [3 x float], [3 x float]* %col, i64 0, i64 2, !dbg !13098
  %57 = load float, float* %arrayidx42, align 4, !dbg !13098
  call void @glColor4f(float %55, float %56, float %57, float 5.000000e-01), !dbg !13099
  %58 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !13100
  %subtype43 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %58, i32 0, i32 1, !dbg !13102
  %59 = load i32, i32* %subtype43, align 4, !dbg !13102
  %cmp = icmp eq i32 %59, 327696, !dbg !13103
  br i1 %cmp, label %if.then45, label %if.end52, !dbg !13104

if.then45:                                        ; preds = %if.end39
  call void @glPushMatrix(), !dbg !13105
  %60 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !13107
  %initial_value46 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %60, i32 0, i32 14, !dbg !13107
  %61 = load float, float* %initial_value46, align 8, !dbg !13107
  %mul47 = fmul float %61, 0x404CA5DC20000000, !dbg !13107
  call void @glRotatef(float %mul47, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00), !dbg !13108
  call void @fdrawline(float 3.500000e+01, float 0.000000e+00, float 2.000000e+02, float 0.000000e+00), !dbg !13109
  %62 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !13110
  %current_value48 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %62, i32 0, i32 15, !dbg !13110
  %63 = load float, float* %current_value48, align 4, !dbg !13110
  %64 = load %struct.RadialControl*, %struct.RadialControl** %rc, align 8, !dbg !13110
  %initial_value49 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %64, i32 0, i32 14, !dbg !13110
  %65 = load float, float* %initial_value49, align 8, !dbg !13110
  %sub50 = fsub float %63, %65, !dbg !13110
  %mul51 = fmul float %sub50, 0x404CA5DC20000000, !dbg !13110
  call void @glRotatef(float %mul51, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00), !dbg !13111
  call void @fdrawline(float 3.500000e+01, float 0.000000e+00, float 2.000000e+02, float 0.000000e+00), !dbg !13112
  call void @glPopMatrix(), !dbg !13113
  br label %if.end52, !dbg !13114

if.end52:                                         ; preds = %if.then45, %if.end39
  %66 = load float, float* %r1, align 4, !dbg !13115
  call void @glutil_draw_lined_arc(float 0.000000e+00, float 0x401921FB60000000, float %66, i32 40), !dbg !13116
  %67 = load float, float* %r2, align 4, !dbg !13117
  call void @glutil_draw_lined_arc(float 0.000000e+00, float 0x401921FB60000000, float %67, i32 40), !dbg !13118
  %68 = load float, float* %rmin, align 4, !dbg !13119
  %cmp53 = fcmp ogt float %68, 0.000000e+00, !dbg !13121
  br i1 %cmp53, label %if.then55, label %if.end56, !dbg !13122

if.then55:                                        ; preds = %if.end52
  %69 = load float, float* %rmin, align 4, !dbg !13123
  call void @glutil_draw_lined_arc(float 0.000000e+00, float 0x401921FB60000000, float %69, i32 40), !dbg !13124
  br label %if.end56, !dbg !13124

if.end56:                                         ; preds = %if.then55, %if.end52
  %70 = load i32, i32* %fontid, align 4, !dbg !13125
  %71 = load i16, i16* %fstyle_points, align 2, !dbg !13126
  %conv57 = sext i16 %71 to i32, !dbg !13126
  %conv58 = sitofp i32 %conv57 to double, !dbg !13126
  %mul59 = fmul double 1.500000e+00, %conv58, !dbg !13127
  %conv60 = fptosi double %mul59 to i32, !dbg !13128
  %72 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 33), align 4, !dbg !13129
  %conv61 = sitofp i32 %72 to float, !dbg !13130
  %div62 = fdiv float 1.000000e+00, %conv61, !dbg !13131
  %conv63 = fptosi float %div62 to i32, !dbg !13132
  call void @BLF_size(i32 %70, i32 %conv60, i32 %conv63), !dbg !13133
  %73 = load i32, i32* %fontid, align 4, !dbg !13134
  %arraydecay64 = getelementptr inbounds [6 x i8], [6 x i8]* %str, i64 0, i64 0, !dbg !13135
  %74 = load i16, i16* %strdrawlen, align 2, !dbg !13136
  %conv65 = sext i16 %74 to i64, !dbg !13136
  call void @BLF_width_and_height(i32 %73, i8* %arraydecay64, i64 %conv65, float* %strwidth, float* %strheight), !dbg !13137
  %75 = load i32, i32* %fontid, align 4, !dbg !13138
  call void @BLF_enable(i32 %75, i32 4), !dbg !13139
  %76 = load i32, i32* %fontid, align 4, !dbg !13140
  call void @BLF_shadow(i32 %76, i32 3, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 5.000000e-01), !dbg !13141
  %77 = load i32, i32* %fontid, align 4, !dbg !13142
  call void @BLF_shadow_offset(i32 %77, i32 1, i32 -1), !dbg !13143
  %78 = load i32, i32* %fontid, align 4, !dbg !13144
  %79 = load float, float* %strwidth, align 4, !dbg !13145
  %mul66 = fmul float -5.000000e-01, %79, !dbg !13146
  %80 = load float, float* %strheight, align 4, !dbg !13147
  %mul67 = fmul float -5.000000e-01, %80, !dbg !13148
  call void @BLF_position(i32 %78, float %mul66, float %mul67, float 0.000000e+00), !dbg !13149
  %81 = load i32, i32* %fontid, align 4, !dbg !13150
  %arraydecay68 = getelementptr inbounds [6 x i8], [6 x i8]* %str, i64 0, i64 0, !dbg !13151
  %82 = load i16, i16* %strdrawlen, align 2, !dbg !13152
  %conv69 = sext i16 %82 to i64, !dbg !13152
  call void @BLF_draw(i32 %81, i8* %arraydecay68, i64 %conv69), !dbg !13153
  %83 = load i32, i32* %fontid, align 4, !dbg !13154
  call void @BLF_disable(i32 %83, i32 4), !dbg !13155
  call void @glDisable(i32 3042), !dbg !13156
  call void @glDisable(i32 2848), !dbg !13157
  ret void, !dbg !13158
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @radial_control_get_path(%struct.PointerRNA* %ctx_ptr, %struct.wmOperator* %op, i8* %name, %struct.PointerRNA* %r_ptr, %struct.PropertyRNA** %r_prop, i32 %req_length, i32 %flags) #0 !dbg !13159 {
entry:
  %retval = alloca i32, align 4
  %ctx_ptr.addr = alloca %struct.PointerRNA*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %name.addr = alloca i8*, align 8
  %r_ptr.addr = alloca %struct.PointerRNA*, align 8
  %r_prop.addr = alloca %struct.PropertyRNA**, align 8
  %req_length.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %unused_prop = alloca %struct.PropertyRNA*, align 8
  %len = alloca i32, align 4
  %str = alloca i8*, align 8
  %prop_type = alloca i32, align 4
  store %struct.PointerRNA* %ctx_ptr, %struct.PointerRNA** %ctx_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %ctx_ptr.addr, metadata !13164, metadata !DIExpression()), !dbg !13165
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !13166, metadata !DIExpression()), !dbg !13167
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !13168, metadata !DIExpression()), !dbg !13169
  store %struct.PointerRNA* %r_ptr, %struct.PointerRNA** %r_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %r_ptr.addr, metadata !13170, metadata !DIExpression()), !dbg !13171
  store %struct.PropertyRNA** %r_prop, %struct.PropertyRNA*** %r_prop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA*** %r_prop.addr, metadata !13172, metadata !DIExpression()), !dbg !13173
  store i32 %req_length, i32* %req_length.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %req_length.addr, metadata !13174, metadata !DIExpression()), !dbg !13175
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !13176, metadata !DIExpression()), !dbg !13177
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %unused_prop, metadata !13178, metadata !DIExpression()), !dbg !13179
  call void @llvm.dbg.declare(metadata i32* %len, metadata !13180, metadata !DIExpression()), !dbg !13181
  call void @llvm.dbg.declare(metadata i8** %str, metadata !13182, metadata !DIExpression()), !dbg !13183
  %0 = load i32, i32* %flags.addr, align 4, !dbg !13184
  %and = and i32 %0, 4, !dbg !13186
  %tobool = icmp ne i32 %and, 0, !dbg !13186
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !13187

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %flags.addr, align 4, !dbg !13188
  %and1 = and i32 %1, 2, !dbg !13189
  %tobool2 = icmp ne i32 %and1, 0, !dbg !13189
  br i1 %tobool2, label %if.then, label %if.end, !dbg !13190

if.then:                                          ; preds = %land.lhs.true
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !13191
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 8, !dbg !13193
  %3 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !13193
  call void @BKE_report(%struct.ReportList* %3, i32 32, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.379, i64 0, i64 0)), !dbg !13194
  store i32 0, i32* %retval, align 4, !dbg !13195
  br label %return, !dbg !13195

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !13196
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 7, !dbg !13198
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !13198
  %6 = load i8*, i8** %name.addr, align 8, !dbg !13199
  %call = call i8* @RNA_string_get_alloc(%struct.PointerRNA* %5, i8* %6, i8* null, i32 0), !dbg !13200
  store i8* %call, i8** %str, align 8, !dbg !13201
  %tobool3 = icmp ne i8* %call, null, !dbg !13201
  br i1 %tobool3, label %if.end5, label %if.then4, !dbg !13202

if.then4:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !13203
  br label %return, !dbg !13203

if.end5:                                          ; preds = %if.end
  %7 = load i8*, i8** %str, align 8, !dbg !13204
  %arrayidx = getelementptr inbounds i8, i8* %7, i64 0, !dbg !13204
  %8 = load i8, i8* %arrayidx, align 1, !dbg !13204
  %conv = zext i8 %8 to i32, !dbg !13204
  %cmp = icmp eq i32 %conv, 0, !dbg !13206
  br i1 %cmp, label %if.then7, label %if.end11, !dbg !13207

if.then7:                                         ; preds = %if.end5
  %9 = load %struct.PropertyRNA**, %struct.PropertyRNA*** %r_prop.addr, align 8, !dbg !13208
  %tobool8 = icmp ne %struct.PropertyRNA** %9, null, !dbg !13208
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !13211

if.then9:                                         ; preds = %if.then7
  %10 = load %struct.PropertyRNA**, %struct.PropertyRNA*** %r_prop.addr, align 8, !dbg !13212
  store %struct.PropertyRNA* null, %struct.PropertyRNA** %10, align 8, !dbg !13213
  br label %if.end10, !dbg !13214

if.end10:                                         ; preds = %if.then9, %if.then7
  %11 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !13215
  %12 = load i8*, i8** %str, align 8, !dbg !13216
  call void %11(i8* %12), !dbg !13215
  store i32 1, i32* %retval, align 4, !dbg !13217
  br label %return, !dbg !13217

if.end11:                                         ; preds = %if.end5
  %13 = load %struct.PropertyRNA**, %struct.PropertyRNA*** %r_prop.addr, align 8, !dbg !13218
  %tobool12 = icmp ne %struct.PropertyRNA** %13, null, !dbg !13218
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !13220

if.then13:                                        ; preds = %if.end11
  store %struct.PropertyRNA** %unused_prop, %struct.PropertyRNA*** %r_prop.addr, align 8, !dbg !13221
  br label %if.end14, !dbg !13222

if.end14:                                         ; preds = %if.then13, %if.end11
  %14 = load %struct.PointerRNA*, %struct.PointerRNA** %ctx_ptr.addr, align 8, !dbg !13223
  %15 = load i8*, i8** %str, align 8, !dbg !13225
  %16 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !13226
  %17 = load %struct.PropertyRNA**, %struct.PropertyRNA*** %r_prop.addr, align 8, !dbg !13227
  %call15 = call zeroext i8 @RNA_path_resolve(%struct.PointerRNA* %14, i8* %15, %struct.PointerRNA* %16, %struct.PropertyRNA** %17), !dbg !13228
  %tobool16 = icmp ne i8 %call15, 0, !dbg !13228
  br i1 %tobool16, label %if.end22, label %if.then17, !dbg !13229

if.then17:                                        ; preds = %if.end14
  %18 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !13230
  %19 = load i8*, i8** %str, align 8, !dbg !13232
  call void %18(i8* %19), !dbg !13230
  %20 = load i32, i32* %flags.addr, align 4, !dbg !13233
  %and18 = and i32 %20, 1, !dbg !13235
  %tobool19 = icmp ne i32 %and18, 0, !dbg !13235
  br i1 %tobool19, label %if.then20, label %if.else, !dbg !13236

if.then20:                                        ; preds = %if.then17
  store i32 1, i32* %retval, align 4, !dbg !13237
  br label %return, !dbg !13237

if.else:                                          ; preds = %if.then17
  %21 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !13238
  %reports21 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %21, i32 0, i32 8, !dbg !13240
  %22 = load %struct.ReportList*, %struct.ReportList** %reports21, align 8, !dbg !13240
  %23 = load i8*, i8** %name.addr, align 8, !dbg !13241
  call void (%struct.ReportList*, i32, i8*, ...) @BKE_reportf(%struct.ReportList* %22, i32 32, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.380, i64 0, i64 0), i8* %23), !dbg !13242
  store i32 0, i32* %retval, align 4, !dbg !13243
  br label %return, !dbg !13243

if.end22:                                         ; preds = %if.end14
  %24 = load i32, i32* %flags.addr, align 4, !dbg !13244
  %and23 = and i32 %24, 6, !dbg !13246
  %tobool24 = icmp ne i32 %and23, 0, !dbg !13246
  br i1 %tobool24, label %if.then25, label %if.end40, !dbg !13247

if.then25:                                        ; preds = %if.end22
  call void @llvm.dbg.declare(metadata i32* %prop_type, metadata !13248, metadata !DIExpression()), !dbg !13250
  %25 = load %struct.PropertyRNA**, %struct.PropertyRNA*** %r_prop.addr, align 8, !dbg !13251
  %26 = load %struct.PropertyRNA*, %struct.PropertyRNA** %25, align 8, !dbg !13252
  %call26 = call i32 @RNA_property_type(%struct.PropertyRNA* %26), !dbg !13253
  store i32 %call26, i32* %prop_type, align 4, !dbg !13250
  %27 = load i32, i32* %flags.addr, align 4, !dbg !13254
  %and27 = and i32 %27, 4, !dbg !13256
  %tobool28 = icmp ne i32 %and27, 0, !dbg !13256
  br i1 %tobool28, label %land.lhs.true29, label %lor.lhs.false, !dbg !13257

land.lhs.true29:                                  ; preds = %if.then25
  %28 = load i32, i32* %prop_type, align 4, !dbg !13258
  %cmp30 = icmp ne i32 %28, 0, !dbg !13259
  br i1 %cmp30, label %if.then37, label %lor.lhs.false, !dbg !13260

lor.lhs.false:                                    ; preds = %land.lhs.true29, %if.then25
  %29 = load i32, i32* %flags.addr, align 4, !dbg !13261
  %and32 = and i32 %29, 2, !dbg !13262
  %tobool33 = icmp ne i32 %and32, 0, !dbg !13262
  br i1 %tobool33, label %land.lhs.true34, label %if.end39, !dbg !13263

land.lhs.true34:                                  ; preds = %lor.lhs.false
  %30 = load i32, i32* %prop_type, align 4, !dbg !13264
  %cmp35 = icmp ne i32 %30, 2, !dbg !13265
  br i1 %cmp35, label %if.then37, label %if.end39, !dbg !13266

if.then37:                                        ; preds = %land.lhs.true34, %land.lhs.true29
  %31 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !13267
  %32 = load i8*, i8** %str, align 8, !dbg !13269
  call void %31(i8* %32), !dbg !13267
  %33 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !13270
  %reports38 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %33, i32 0, i32 8, !dbg !13271
  %34 = load %struct.ReportList*, %struct.ReportList** %reports38, align 8, !dbg !13271
  %35 = load i8*, i8** %name.addr, align 8, !dbg !13272
  call void (%struct.ReportList*, i32, i8*, ...) @BKE_reportf(%struct.ReportList* %34, i32 32, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.381, i64 0, i64 0), i8* %35), !dbg !13273
  store i32 0, i32* %retval, align 4, !dbg !13274
  br label %return, !dbg !13274

if.end39:                                         ; preds = %land.lhs.true34, %lor.lhs.false
  br label %if.end40, !dbg !13275

if.end40:                                         ; preds = %if.end39, %if.end22
  %36 = load %struct.PropertyRNA**, %struct.PropertyRNA*** %r_prop.addr, align 8, !dbg !13276
  %37 = load %struct.PropertyRNA*, %struct.PropertyRNA** %36, align 8, !dbg !13278
  %tobool41 = icmp ne %struct.PropertyRNA* %37, null, !dbg !13278
  br i1 %tobool41, label %land.lhs.true42, label %if.end48, !dbg !13279

land.lhs.true42:                                  ; preds = %if.end40
  %38 = load %struct.PointerRNA*, %struct.PointerRNA** %r_ptr.addr, align 8, !dbg !13280
  %39 = load %struct.PropertyRNA**, %struct.PropertyRNA*** %r_prop.addr, align 8, !dbg !13281
  %40 = load %struct.PropertyRNA*, %struct.PropertyRNA** %39, align 8, !dbg !13282
  %call43 = call i32 @RNA_property_array_length(%struct.PointerRNA* %38, %struct.PropertyRNA* %40), !dbg !13283
  store i32 %call43, i32* %len, align 4, !dbg !13284
  %41 = load i32, i32* %req_length.addr, align 4, !dbg !13285
  %cmp44 = icmp ne i32 %call43, %41, !dbg !13286
  br i1 %cmp44, label %if.then46, label %if.end48, !dbg !13287

if.then46:                                        ; preds = %land.lhs.true42
  %42 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !13288
  %43 = load i8*, i8** %str, align 8, !dbg !13290
  call void %42(i8* %43), !dbg !13288
  %44 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !13291
  %reports47 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %44, i32 0, i32 8, !dbg !13292
  %45 = load %struct.ReportList*, %struct.ReportList** %reports47, align 8, !dbg !13292
  %46 = load i8*, i8** %name.addr, align 8, !dbg !13293
  %47 = load i32, i32* %len, align 4, !dbg !13294
  %48 = load i32, i32* %req_length.addr, align 4, !dbg !13295
  call void (%struct.ReportList*, i32, i8*, ...) @BKE_reportf(%struct.ReportList* %45, i32 32, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.382, i64 0, i64 0), i8* %46, i32 %47, i32 %48), !dbg !13296
  store i32 0, i32* %retval, align 4, !dbg !13297
  br label %return, !dbg !13297

if.end48:                                         ; preds = %land.lhs.true42, %if.end40
  %49 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !13298
  %50 = load i8*, i8** %str, align 8, !dbg !13299
  call void %49(i8* %50), !dbg !13298
  store i32 1, i32* %retval, align 4, !dbg !13300
  br label %return, !dbg !13300

return:                                           ; preds = %if.end48, %if.then46, %if.then37, %if.else, %if.then20, %if.end10, %if.then4, %if.then
  %51 = load i32, i32* %retval, align 4, !dbg !13301
  ret i32 %51, !dbg !13301
}

declare dso_local i32 @RNA_property_boolean_get(%struct.PointerRNA*, %struct.PropertyRNA*) #2

declare dso_local zeroext i8 @RNA_struct_is_ID(%struct.StructRNA*) #2

declare dso_local i8* @RNA_string_get_alloc(%struct.PointerRNA*, i8*, i8*, i32) #2

declare dso_local zeroext i8 @RNA_path_resolve(%struct.PointerRNA*, i8*, %struct.PointerRNA*, %struct.PropertyRNA**) #2

declare dso_local i32 @RNA_property_array_length(%struct.PointerRNA*, %struct.PropertyRNA*) #2

; Function Attrs: nounwind
declare dso_local float @cosf(float) #5

; Function Attrs: nounwind
declare dso_local float @sinf(float) #5

declare dso_local void @RNA_property_float_get_array(%struct.PointerRNA*, %struct.PropertyRNA*, float*) #2

declare dso_local signext i16 @RNA_type_to_ID_code(%struct.StructRNA*) #2

declare dso_local %struct.ImBuf* @BKE_brush_gen_radial_control_imbuf(%struct.Brush*, i8 zeroext) #2

declare dso_local void @glGenTextures(i32, i32*) #2

declare dso_local void @glBindTexture(i32, i32) #2

declare dso_local void @glTexImage2D(i32, i32, i32, i32, i32, i32, i32, i32, i8*) #2

declare dso_local i64 @BLI_strlen_utf8(i8*) #2

declare dso_local void @glTranslatef(float, float, float) #2

declare dso_local void @glEnable(i32) #2

declare dso_local void @glScalef(float, float, float) #2

; Function Attrs: noinline nounwind uwtable
define internal void @radial_control_paint_tex(%struct.RadialControl* %rc, float %radius, float %alpha) #0 !dbg !13302 {
entry:
  %rc.addr = alloca %struct.RadialControl*, align 8
  %radius.addr = alloca float, align 4
  %alpha.addr = alloca float, align 4
  %col = alloca [3 x float], align 4
  %rot = alloca float, align 4
  store %struct.RadialControl* %rc, %struct.RadialControl** %rc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RadialControl** %rc.addr, metadata !13305, metadata !DIExpression()), !dbg !13306
  store float %radius, float* %radius.addr, align 4
  call void @llvm.dbg.declare(metadata float* %radius.addr, metadata !13307, metadata !DIExpression()), !dbg !13308
  store float %alpha, float* %alpha.addr, align 4
  call void @llvm.dbg.declare(metadata float* %alpha.addr, metadata !13309, metadata !DIExpression()), !dbg !13310
  call void @llvm.dbg.declare(metadata [3 x float]* %col, metadata !13311, metadata !DIExpression()), !dbg !13312
  %0 = bitcast [3 x float]* %col to i8*, !dbg !13312
  call void @llvm.memset.p0i8.i64(i8* align 4 %0, i8 0, i64 12, i1 false), !dbg !13312
  call void @llvm.dbg.declare(metadata float* %rot, metadata !13313, metadata !DIExpression()), !dbg !13314
  %1 = load %struct.RadialControl*, %struct.RadialControl** %rc.addr, align 8, !dbg !13315
  %fill_col_prop = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %1, i32 0, i32 10, !dbg !13317
  %2 = load %struct.PropertyRNA*, %struct.PropertyRNA** %fill_col_prop, align 8, !dbg !13317
  %tobool = icmp ne %struct.PropertyRNA* %2, null, !dbg !13315
  br i1 %tobool, label %if.then, label %if.end, !dbg !13318

if.then:                                          ; preds = %entry
  %3 = load %struct.RadialControl*, %struct.RadialControl** %rc.addr, align 8, !dbg !13319
  %fill_col_ptr = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %3, i32 0, i32 4, !dbg !13320
  %4 = load %struct.RadialControl*, %struct.RadialControl** %rc.addr, align 8, !dbg !13321
  %fill_col_prop1 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %4, i32 0, i32 10, !dbg !13322
  %5 = load %struct.PropertyRNA*, %struct.PropertyRNA** %fill_col_prop1, align 8, !dbg !13322
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %col, i64 0, i64 0, !dbg !13323
  call void @RNA_property_float_get_array(%struct.PointerRNA* %fill_col_ptr, %struct.PropertyRNA* %5, float* %arraydecay), !dbg !13324
  br label %if.end, !dbg !13324

if.end:                                           ; preds = %if.then, %entry
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %col, i64 0, i64 0, !dbg !13325
  %6 = load float, float* %arrayidx, align 4, !dbg !13325
  %arrayidx2 = getelementptr inbounds [3 x float], [3 x float]* %col, i64 0, i64 1, !dbg !13326
  %7 = load float, float* %arrayidx2, align 4, !dbg !13326
  %arrayidx3 = getelementptr inbounds [3 x float], [3 x float]* %col, i64 0, i64 2, !dbg !13327
  %8 = load float, float* %arrayidx3, align 4, !dbg !13327
  %9 = load float, float* %alpha.addr, align 4, !dbg !13328
  call void @glColor4f(float %6, float %7, float %8, float %9), !dbg !13329
  %10 = load %struct.RadialControl*, %struct.RadialControl** %rc.addr, align 8, !dbg !13330
  %gltex = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %10, i32 0, i32 22, !dbg !13332
  %11 = load i32, i32* %gltex, align 8, !dbg !13332
  %tobool4 = icmp ne i32 %11, 0, !dbg !13330
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !13333

if.then5:                                         ; preds = %if.end
  %12 = load %struct.RadialControl*, %struct.RadialControl** %rc.addr, align 8, !dbg !13334
  %gltex6 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %12, i32 0, i32 22, !dbg !13336
  %13 = load i32, i32* %gltex6, align 8, !dbg !13336
  call void @glBindTexture(i32 3553, i32 %13), !dbg !13337
  call void @glTexParameterf(i32 3553, i32 10241, float 9.729000e+03), !dbg !13338
  call void @glTexParameterf(i32 3553, i32 10240, float 9.729000e+03), !dbg !13339
  %14 = load %struct.RadialControl*, %struct.RadialControl** %rc.addr, align 8, !dbg !13340
  %rot_prop = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %14, i32 0, i32 11, !dbg !13342
  %15 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rot_prop, align 8, !dbg !13342
  %tobool7 = icmp ne %struct.PropertyRNA* %15, null, !dbg !13340
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !13343

if.then8:                                         ; preds = %if.then5
  %16 = load %struct.RadialControl*, %struct.RadialControl** %rc.addr, align 8, !dbg !13344
  %rot_ptr = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %16, i32 0, i32 5, !dbg !13346
  %17 = load %struct.RadialControl*, %struct.RadialControl** %rc.addr, align 8, !dbg !13347
  %rot_prop9 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %17, i32 0, i32 11, !dbg !13348
  %18 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rot_prop9, align 8, !dbg !13348
  %call = call float @RNA_property_float_get(%struct.PointerRNA* %rot_ptr, %struct.PropertyRNA* %18), !dbg !13349
  store float %call, float* %rot, align 4, !dbg !13350
  call void @glPushMatrix(), !dbg !13351
  %19 = load float, float* %rot, align 4, !dbg !13352
  %mul = fmul float %19, 0x404CA5DC20000000, !dbg !13352
  call void @glRotatef(float %mul, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00), !dbg !13353
  br label %if.end10, !dbg !13354

if.end10:                                         ; preds = %if.then8, %if.then5
  call void @glEnable(i32 3553), !dbg !13355
  call void @glBegin(i32 7), !dbg !13356
  call void @glTexCoord2f(float 0.000000e+00, float 0.000000e+00), !dbg !13357
  %20 = load float, float* %radius.addr, align 4, !dbg !13358
  %fneg = fneg float %20, !dbg !13359
  %21 = load float, float* %radius.addr, align 4, !dbg !13360
  %fneg11 = fneg float %21, !dbg !13361
  call void @glVertex2f(float %fneg, float %fneg11), !dbg !13362
  call void @glTexCoord2f(float 1.000000e+00, float 0.000000e+00), !dbg !13363
  %22 = load float, float* %radius.addr, align 4, !dbg !13364
  %23 = load float, float* %radius.addr, align 4, !dbg !13365
  %fneg12 = fneg float %23, !dbg !13366
  call void @glVertex2f(float %22, float %fneg12), !dbg !13367
  call void @glTexCoord2f(float 1.000000e+00, float 1.000000e+00), !dbg !13368
  %24 = load float, float* %radius.addr, align 4, !dbg !13369
  %25 = load float, float* %radius.addr, align 4, !dbg !13370
  call void @glVertex2f(float %24, float %25), !dbg !13371
  call void @glTexCoord2f(float 0.000000e+00, float 1.000000e+00), !dbg !13372
  %26 = load float, float* %radius.addr, align 4, !dbg !13373
  %fneg13 = fneg float %26, !dbg !13374
  %27 = load float, float* %radius.addr, align 4, !dbg !13375
  call void @glVertex2f(float %fneg13, float %27), !dbg !13376
  call void @glEnd(), !dbg !13377
  call void @glDisable(i32 3553), !dbg !13378
  %28 = load %struct.RadialControl*, %struct.RadialControl** %rc.addr, align 8, !dbg !13379
  %rot_prop14 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %28, i32 0, i32 11, !dbg !13381
  %29 = load %struct.PropertyRNA*, %struct.PropertyRNA** %rot_prop14, align 8, !dbg !13381
  %tobool15 = icmp ne %struct.PropertyRNA* %29, null, !dbg !13379
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !13382

if.then16:                                        ; preds = %if.end10
  call void @glPopMatrix(), !dbg !13383
  br label %if.end17, !dbg !13383

if.end17:                                         ; preds = %if.then16, %if.end10
  br label %if.end18, !dbg !13384

if.else:                                          ; preds = %if.end
  %30 = load float, float* %radius.addr, align 4, !dbg !13385
  call void @glutil_draw_filled_arc(float 0.000000e+00, float 0x401921FB60000000, float %30, i32 40), !dbg !13387
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.end17
  ret void, !dbg !13388
}

declare dso_local void @glColor4f(float, float, float, float) #2

declare dso_local void @glPushMatrix() #2

declare dso_local void @glRotatef(float, float, float, float) #2

declare dso_local void @fdrawline(float, float, float, float) #2

declare dso_local void @glPopMatrix() #2

declare dso_local void @glutil_draw_lined_arc(float, float, float, i32) #2

declare dso_local void @BLF_size(i32, i32, i32) #2

declare dso_local void @BLF_width_and_height(i32, i8*, i64, float*, float*) #2

declare dso_local void @BLF_enable(i32, i32) #2

declare dso_local void @BLF_shadow(i32, i32, float, float, float, float) #2

declare dso_local void @BLF_shadow_offset(i32, i32, i32) #2

declare dso_local void @BLF_position(i32, float, float, float) #2

declare dso_local void @BLF_draw(i32, i8*, i64) #2

declare dso_local void @BLF_disable(i32, i32) #2

declare dso_local void @glDisable(i32) #2

declare dso_local void @glTexParameterf(i32, i32, float) #2

declare dso_local void @glBegin(i32) #2

declare dso_local void @glTexCoord2f(float, float) #2

declare dso_local void @glVertex2f(float, float) #2

declare dso_local void @glEnd() #2

declare dso_local void @glutil_draw_filled_arc(float, float, float, i32) #2

declare dso_local float @BLI_dial_angle(%struct.Dial*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal float @len_v2(float* %v) #0 !dbg !13389 {
entry:
  %v.addr = alloca float*, align 8
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !13394, metadata !DIExpression()), !dbg !13395
  %0 = load float*, float** %v.addr, align 8, !dbg !13396
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !13396
  %1 = load float, float* %arrayidx, align 4, !dbg !13396
  %2 = load float*, float** %v.addr, align 8, !dbg !13397
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !13397
  %3 = load float, float* %arrayidx1, align 4, !dbg !13397
  %mul = fmul float %1, %3, !dbg !13398
  %4 = load float*, float** %v.addr, align 8, !dbg !13399
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !13399
  %5 = load float, float* %arrayidx2, align 4, !dbg !13399
  %6 = load float*, float** %v.addr, align 8, !dbg !13400
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !13400
  %7 = load float, float* %arrayidx3, align 4, !dbg !13400
  %mul4 = fmul float %5, %7, !dbg !13401
  %add = fadd float %mul, %mul4, !dbg !13402
  %call = call float @sqrtf(float %add) #7, !dbg !13403
  ret float %call, !dbg !13404
}

; Function Attrs: nounwind
declare dso_local float @atan2f(float, float) #5

; Function Attrs: nounwind
declare dso_local double @fmod(double, double) #5

; Function Attrs: noinline nounwind uwtable
define internal void @radial_control_set_value(%struct.RadialControl* %rc, float %val) #0 !dbg !13405 {
entry:
  %rc.addr = alloca %struct.RadialControl*, align 8
  %val.addr = alloca float, align 4
  store %struct.RadialControl* %rc, %struct.RadialControl** %rc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.RadialControl** %rc.addr, metadata !13408, metadata !DIExpression()), !dbg !13409
  store float %val, float* %val.addr, align 4
  call void @llvm.dbg.declare(metadata float* %val.addr, metadata !13410, metadata !DIExpression()), !dbg !13411
  %0 = load %struct.RadialControl*, %struct.RadialControl** %rc.addr, align 8, !dbg !13412
  %type = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %0, i32 0, i32 0, !dbg !13413
  %1 = load i32, i32* %type, align 8, !dbg !13413
  switch i32 %1, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
  ], !dbg !13414

sw.bb:                                            ; preds = %entry
  %2 = load %struct.RadialControl*, %struct.RadialControl** %rc.addr, align 8, !dbg !13415
  %ptr = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %2, i32 0, i32 2, !dbg !13417
  %3 = load %struct.RadialControl*, %struct.RadialControl** %rc.addr, align 8, !dbg !13418
  %prop = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %3, i32 0, i32 8, !dbg !13419
  %4 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !13419
  %5 = load float, float* %val.addr, align 4, !dbg !13420
  %conv = fptosi float %5 to i32, !dbg !13420
  call void @RNA_property_int_set(%struct.PointerRNA* %ptr, %struct.PropertyRNA* %4, i32 %conv), !dbg !13421
  br label %sw.epilog, !dbg !13422

sw.bb1:                                           ; preds = %entry
  %6 = load %struct.RadialControl*, %struct.RadialControl** %rc.addr, align 8, !dbg !13423
  %ptr2 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %6, i32 0, i32 2, !dbg !13424
  %7 = load %struct.RadialControl*, %struct.RadialControl** %rc.addr, align 8, !dbg !13425
  %prop3 = getelementptr inbounds %struct.RadialControl, %struct.RadialControl* %7, i32 0, i32 8, !dbg !13426
  %8 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop3, align 8, !dbg !13426
  %9 = load float, float* %val.addr, align 4, !dbg !13427
  call void @RNA_property_float_set(%struct.PointerRNA* %ptr2, %struct.PropertyRNA* %8, float %9), !dbg !13428
  br label %sw.epilog, !dbg !13429

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !13430

sw.epilog:                                        ; preds = %sw.default, %sw.bb1, %sw.bb
  ret void, !dbg !13431
}

declare dso_local void @RNA_property_update(%struct.bContext*, %struct.PointerRNA*, %struct.PropertyRNA*) #2

declare dso_local %struct.Dial* @BLI_dial_initialize(float*, float) #2

; Function Attrs: nounwind
declare dso_local float @sqrtf(float) #5

declare dso_local void @RNA_property_int_set(%struct.PointerRNA*, %struct.PropertyRNA*, i32) #2

declare dso_local void @glDeleteTextures(i32, i32*) #2

declare dso_local %struct.wmKeyMap* @WM_modalkeymap_get(%struct.wmKeyConfig*, i8*) #2

declare dso_local %struct.wmKeyMap* @WM_modalkeymap_add(%struct.wmKeyConfig*, i8*, %struct.EnumPropertyItem*) #2

declare dso_local %struct.wmKeyMapItem* @WM_modalkeymap_add_item(%struct.wmKeyMap*, i32, i32, i32, i32, i32) #2

declare dso_local void @WM_modalkeymap_assign(%struct.wmKeyMap*, i8*) #2

declare dso_local void @RNA_enum_item_add(%struct.EnumPropertyItem**, i32*, %struct.EnumPropertyItem*) #2

declare dso_local void @RNA_enum_item_end(%struct.EnumPropertyItem**, i32*) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind willreturn }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly }
attributes #7 = { nounwind }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!3556, !3557, !3558}
!llvm.ident = !{!3559}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "global_ops_hash", scope: !2, file: !3, line: 115, type: !3554, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !1390, globals: !3222, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "blender/source/blender/windowmanager/intern/wm_operators.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !40, !45, !54, !85, !935, !950, !958, !963, !979, !997, !1008, !1209, !1222, !1254, !1301, !1307, !1313, !1335, !1347, !1371, !1385}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "PropertyFlag", file: !6, line: 151, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "blender/source/blender/makesrna/RNA_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39}
!9 = !DIEnumerator(name: "PROP_EDITABLE", value: 1, isUnsigned: true)
!10 = !DIEnumerator(name: "PROP_LIB_EXCEPTION", value: 65536, isUnsigned: true)
!11 = !DIEnumerator(name: "PROP_ANIMATABLE", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "PROP_ICONS_CONSECUTIVE", value: 4096, isUnsigned: true)
!13 = !DIEnumerator(name: "PROP_HIDDEN", value: 524288, isUnsigned: true)
!14 = !DIEnumerator(name: "PROP_SKIP_SAVE", value: 268435456, isUnsigned: true)
!15 = !DIEnumerator(name: "PROP_REQUIRED", value: 4, isUnsigned: true)
!16 = !DIEnumerator(name: "PROP_OUTPUT", value: 8, isUnsigned: true)
!17 = !DIEnumerator(name: "PROP_RNAPTR", value: 2048, isUnsigned: true)
!18 = !DIEnumerator(name: "PROP_PYFUNC_OPTIONAL", value: 1073741824, isUnsigned: true)
!19 = !DIEnumerator(name: "PROP_REGISTER", value: 16, isUnsigned: true)
!20 = !DIEnumerator(name: "PROP_REGISTER_OPTIONAL", value: 48, isUnsigned: true)
!21 = !DIEnumerator(name: "PROP_PROPORTIONAL", value: 67108864, isUnsigned: true)
!22 = !DIEnumerator(name: "PROP_ID_REFCOUNT", value: 64, isUnsigned: true)
!23 = !DIEnumerator(name: "PROP_ID_SELF_CHECK", value: 1048576, isUnsigned: true)
!24 = !DIEnumerator(name: "PROP_NEVER_NULL", value: 262144, isUnsigned: true)
!25 = !DIEnumerator(name: "PROP_NEVER_UNLINK", value: 33554432, isUnsigned: true)
!26 = !DIEnumerator(name: "PROP_ENUM_FLAG", value: 2097152, isUnsigned: true)
!27 = !DIEnumerator(name: "PROP_CONTEXT_UPDATE", value: 4194304, isUnsigned: true)
!28 = !DIEnumerator(name: "PROP_CONTEXT_PROPERTY_UPDATE", value: 138412032, isUnsigned: true)
!29 = !DIEnumerator(name: "PROP_THICK_WRAP", value: 8388608, isUnsigned: true)
!30 = !DIEnumerator(name: "PROP_BUILTIN", value: 128, isUnsigned: true)
!31 = !DIEnumerator(name: "PROP_EXPORT", value: 256, isUnsigned: true)
!32 = !DIEnumerator(name: "PROP_RUNTIME", value: 512, isUnsigned: true)
!33 = !DIEnumerator(name: "PROP_IDPROPERTY", value: 1024, isUnsigned: true)
!34 = !DIEnumerator(name: "PROP_RAW_ACCESS", value: 8192, isUnsigned: true)
!35 = !DIEnumerator(name: "PROP_RAW_ARRAY", value: 16384, isUnsigned: true)
!36 = !DIEnumerator(name: "PROP_FREE_POINTERS", value: 32768, isUnsigned: true)
!37 = !DIEnumerator(name: "PROP_DYNAMIC", value: 131072, isUnsigned: true)
!38 = !DIEnumerator(name: "PROP_ENUM_NO_CONTEXT", value: 16777216, isUnsigned: true)
!39 = !DIEnumerator(name: "PROP_ENUM_NO_TRANSLATE", value: 536870912, isUnsigned: true)
!40 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !41, line: 376, baseType: !7, size: 32, elements: !42)
!41 = !DIFile(filename: "blender/source/blender/makesdna/DNA_windowmanager_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!42 = !{!43, !44}
!43 = !DIEnumerator(name: "OP_GRAB_POINTER", value: 1, isUnsigned: true)
!44 = !DIEnumerator(name: "OP_IS_INVOKE", value: 2, isUnsigned: true)
!45 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "PropertyType", file: !6, line: 71, baseType: !7, size: 32, elements: !46)
!46 = !{!47, !48, !49, !50, !51, !52, !53}
!47 = !DIEnumerator(name: "PROP_BOOLEAN", value: 0, isUnsigned: true)
!48 = !DIEnumerator(name: "PROP_INT", value: 1, isUnsigned: true)
!49 = !DIEnumerator(name: "PROP_FLOAT", value: 2, isUnsigned: true)
!50 = !DIEnumerator(name: "PROP_STRING", value: 3, isUnsigned: true)
!51 = !DIEnumerator(name: "PROP_ENUM", value: 4, isUnsigned: true)
!52 = !DIEnumerator(name: "PROP_POINTER", value: 5, isUnsigned: true)
!53 = !DIEnumerator(name: "PROP_COLLECTION", value: 6, isUnsigned: true)
!54 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "PropertySubType", file: !6, line: 107, baseType: !7, size: 32, elements: !55)
!55 = !{!56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84}
!56 = !DIEnumerator(name: "PROP_NONE", value: 0, isUnsigned: true)
!57 = !DIEnumerator(name: "PROP_FILEPATH", value: 1, isUnsigned: true)
!58 = !DIEnumerator(name: "PROP_DIRPATH", value: 2, isUnsigned: true)
!59 = !DIEnumerator(name: "PROP_FILENAME", value: 3, isUnsigned: true)
!60 = !DIEnumerator(name: "PROP_BYTESTRING", value: 4, isUnsigned: true)
!61 = !DIEnumerator(name: "PROP_PASSWORD", value: 6, isUnsigned: true)
!62 = !DIEnumerator(name: "PROP_PIXEL", value: 12, isUnsigned: true)
!63 = !DIEnumerator(name: "PROP_UNSIGNED", value: 13, isUnsigned: true)
!64 = !DIEnumerator(name: "PROP_PERCENTAGE", value: 14, isUnsigned: true)
!65 = !DIEnumerator(name: "PROP_FACTOR", value: 15, isUnsigned: true)
!66 = !DIEnumerator(name: "PROP_ANGLE", value: 327696, isUnsigned: true)
!67 = !DIEnumerator(name: "PROP_TIME", value: 393233, isUnsigned: true)
!68 = !DIEnumerator(name: "PROP_DISTANCE", value: 65554, isUnsigned: true)
!69 = !DIEnumerator(name: "PROP_DISTANCE_CAMERA", value: 589843, isUnsigned: true)
!70 = !DIEnumerator(name: "PROP_COLOR", value: 20, isUnsigned: true)
!71 = !DIEnumerator(name: "PROP_TRANSLATION", value: 65557, isUnsigned: true)
!72 = !DIEnumerator(name: "PROP_DIRECTION", value: 22, isUnsigned: true)
!73 = !DIEnumerator(name: "PROP_VELOCITY", value: 458775, isUnsigned: true)
!74 = !DIEnumerator(name: "PROP_ACCELERATION", value: 524312, isUnsigned: true)
!75 = !DIEnumerator(name: "PROP_MATRIX", value: 25, isUnsigned: true)
!76 = !DIEnumerator(name: "PROP_EULER", value: 327706, isUnsigned: true)
!77 = !DIEnumerator(name: "PROP_QUATERNION", value: 27, isUnsigned: true)
!78 = !DIEnumerator(name: "PROP_AXISANGLE", value: 28, isUnsigned: true)
!79 = !DIEnumerator(name: "PROP_XYZ", value: 29, isUnsigned: true)
!80 = !DIEnumerator(name: "PROP_XYZ_LENGTH", value: 65565, isUnsigned: true)
!81 = !DIEnumerator(name: "PROP_COLOR_GAMMA", value: 30, isUnsigned: true)
!82 = !DIEnumerator(name: "PROP_COORDS", value: 31, isUnsigned: true)
!83 = !DIEnumerator(name: "PROP_LAYER", value: 40, isUnsigned: true)
!84 = !DIEnumerator(name: "PROP_LAYER_MEMBER", value: 41, isUnsigned: true)
!85 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !86, line: 40, baseType: !7, size: 32, elements: !87)
!86 = !DIFile(filename: "blender/source/blender/editors/include/UI_resources.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!87 = !{!88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934}
!88 = !DIEnumerator(name: "ICON_NONE", value: 0, isUnsigned: true)
!89 = !DIEnumerator(name: "ICON_QUESTION", value: 1, isUnsigned: true)
!90 = !DIEnumerator(name: "ICON_ERROR", value: 2, isUnsigned: true)
!91 = !DIEnumerator(name: "ICON_CANCEL", value: 3, isUnsigned: true)
!92 = !DIEnumerator(name: "ICON_TRIA_RIGHT", value: 4, isUnsigned: true)
!93 = !DIEnumerator(name: "ICON_TRIA_DOWN", value: 5, isUnsigned: true)
!94 = !DIEnumerator(name: "ICON_TRIA_LEFT", value: 6, isUnsigned: true)
!95 = !DIEnumerator(name: "ICON_TRIA_UP", value: 7, isUnsigned: true)
!96 = !DIEnumerator(name: "ICON_ARROW_LEFTRIGHT", value: 8, isUnsigned: true)
!97 = !DIEnumerator(name: "ICON_PLUS", value: 9, isUnsigned: true)
!98 = !DIEnumerator(name: "ICON_DISCLOSURE_TRI_DOWN", value: 10, isUnsigned: true)
!99 = !DIEnumerator(name: "ICON_DISCLOSURE_TRI_RIGHT", value: 11, isUnsigned: true)
!100 = !DIEnumerator(name: "ICON_RADIOBUT_OFF", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "ICON_RADIOBUT_ON", value: 13, isUnsigned: true)
!102 = !DIEnumerator(name: "ICON_MENU_PANEL", value: 14, isUnsigned: true)
!103 = !DIEnumerator(name: "ICON_BLENDER", value: 15, isUnsigned: true)
!104 = !DIEnumerator(name: "ICON_GRIP", value: 16, isUnsigned: true)
!105 = !DIEnumerator(name: "ICON_DOT", value: 17, isUnsigned: true)
!106 = !DIEnumerator(name: "ICON_COLLAPSEMENU", value: 18, isUnsigned: true)
!107 = !DIEnumerator(name: "ICON_X", value: 19, isUnsigned: true)
!108 = !DIEnumerator(name: "ICON_BLANK005", value: 20, isUnsigned: true)
!109 = !DIEnumerator(name: "ICON_GO_LEFT", value: 21, isUnsigned: true)
!110 = !DIEnumerator(name: "ICON_PLUG", value: 22, isUnsigned: true)
!111 = !DIEnumerator(name: "ICON_UI", value: 23, isUnsigned: true)
!112 = !DIEnumerator(name: "ICON_NODE", value: 24, isUnsigned: true)
!113 = !DIEnumerator(name: "ICON_NODE_SEL", value: 25, isUnsigned: true)
!114 = !DIEnumerator(name: "ICON_FULLSCREEN", value: 26, isUnsigned: true)
!115 = !DIEnumerator(name: "ICON_SPLITSCREEN", value: 27, isUnsigned: true)
!116 = !DIEnumerator(name: "ICON_RIGHTARROW_THIN", value: 28, isUnsigned: true)
!117 = !DIEnumerator(name: "ICON_BORDERMOVE", value: 29, isUnsigned: true)
!118 = !DIEnumerator(name: "ICON_VIEWZOOM", value: 30, isUnsigned: true)
!119 = !DIEnumerator(name: "ICON_ZOOMIN", value: 31, isUnsigned: true)
!120 = !DIEnumerator(name: "ICON_ZOOMOUT", value: 32, isUnsigned: true)
!121 = !DIEnumerator(name: "ICON_PANEL_CLOSE", value: 33, isUnsigned: true)
!122 = !DIEnumerator(name: "ICON_COPY_ID", value: 34, isUnsigned: true)
!123 = !DIEnumerator(name: "ICON_EYEDROPPER", value: 35, isUnsigned: true)
!124 = !DIEnumerator(name: "ICON_LINK_AREA", value: 36, isUnsigned: true)
!125 = !DIEnumerator(name: "ICON_AUTO", value: 37, isUnsigned: true)
!126 = !DIEnumerator(name: "ICON_CHECKBOX_DEHLT", value: 38, isUnsigned: true)
!127 = !DIEnumerator(name: "ICON_CHECKBOX_HLT", value: 39, isUnsigned: true)
!128 = !DIEnumerator(name: "ICON_UNLOCKED", value: 40, isUnsigned: true)
!129 = !DIEnumerator(name: "ICON_LOCKED", value: 41, isUnsigned: true)
!130 = !DIEnumerator(name: "ICON_UNPINNED", value: 42, isUnsigned: true)
!131 = !DIEnumerator(name: "ICON_PINNED", value: 43, isUnsigned: true)
!132 = !DIEnumerator(name: "ICON_SCREEN_BACK", value: 44, isUnsigned: true)
!133 = !DIEnumerator(name: "ICON_RIGHTARROW", value: 45, isUnsigned: true)
!134 = !DIEnumerator(name: "ICON_DOWNARROW_HLT", value: 46, isUnsigned: true)
!135 = !DIEnumerator(name: "ICON_DOTSUP", value: 47, isUnsigned: true)
!136 = !DIEnumerator(name: "ICON_DOTSDOWN", value: 48, isUnsigned: true)
!137 = !DIEnumerator(name: "ICON_LINK", value: 49, isUnsigned: true)
!138 = !DIEnumerator(name: "ICON_INLINK", value: 50, isUnsigned: true)
!139 = !DIEnumerator(name: "ICON_PLUGIN", value: 51, isUnsigned: true)
!140 = !DIEnumerator(name: "ICON_HELP", value: 52, isUnsigned: true)
!141 = !DIEnumerator(name: "ICON_GHOST_ENABLED", value: 53, isUnsigned: true)
!142 = !DIEnumerator(name: "ICON_COLOR", value: 54, isUnsigned: true)
!143 = !DIEnumerator(name: "ICON_LINKED", value: 55, isUnsigned: true)
!144 = !DIEnumerator(name: "ICON_UNLINKED", value: 56, isUnsigned: true)
!145 = !DIEnumerator(name: "ICON_HAND", value: 57, isUnsigned: true)
!146 = !DIEnumerator(name: "ICON_ZOOM_ALL", value: 58, isUnsigned: true)
!147 = !DIEnumerator(name: "ICON_ZOOM_SELECTED", value: 59, isUnsigned: true)
!148 = !DIEnumerator(name: "ICON_ZOOM_PREVIOUS", value: 60, isUnsigned: true)
!149 = !DIEnumerator(name: "ICON_ZOOM_IN", value: 61, isUnsigned: true)
!150 = !DIEnumerator(name: "ICON_ZOOM_OUT", value: 62, isUnsigned: true)
!151 = !DIEnumerator(name: "ICON_RENDER_REGION", value: 63, isUnsigned: true)
!152 = !DIEnumerator(name: "ICON_BORDER_RECT", value: 64, isUnsigned: true)
!153 = !DIEnumerator(name: "ICON_BORDER_LASSO", value: 65, isUnsigned: true)
!154 = !DIEnumerator(name: "ICON_FREEZE", value: 66, isUnsigned: true)
!155 = !DIEnumerator(name: "ICON_STYLUS_PRESSURE", value: 67, isUnsigned: true)
!156 = !DIEnumerator(name: "ICON_GHOST_DISABLED", value: 68, isUnsigned: true)
!157 = !DIEnumerator(name: "ICON_NEW", value: 69, isUnsigned: true)
!158 = !DIEnumerator(name: "ICON_FILE_TICK", value: 70, isUnsigned: true)
!159 = !DIEnumerator(name: "ICON_QUIT", value: 71, isUnsigned: true)
!160 = !DIEnumerator(name: "ICON_URL", value: 72, isUnsigned: true)
!161 = !DIEnumerator(name: "ICON_RECOVER_LAST", value: 73, isUnsigned: true)
!162 = !DIEnumerator(name: "ICON_BLANK038", value: 74, isUnsigned: true)
!163 = !DIEnumerator(name: "ICON_FULLSCREEN_ENTER", value: 75, isUnsigned: true)
!164 = !DIEnumerator(name: "ICON_FULLSCREEN_EXIT", value: 76, isUnsigned: true)
!165 = !DIEnumerator(name: "ICON_BLANK1", value: 77, isUnsigned: true)
!166 = !DIEnumerator(name: "ICON_LAMP", value: 78, isUnsigned: true)
!167 = !DIEnumerator(name: "ICON_MATERIAL", value: 79, isUnsigned: true)
!168 = !DIEnumerator(name: "ICON_TEXTURE", value: 80, isUnsigned: true)
!169 = !DIEnumerator(name: "ICON_ANIM", value: 81, isUnsigned: true)
!170 = !DIEnumerator(name: "ICON_WORLD", value: 82, isUnsigned: true)
!171 = !DIEnumerator(name: "ICON_SCENE", value: 83, isUnsigned: true)
!172 = !DIEnumerator(name: "ICON_EDIT", value: 84, isUnsigned: true)
!173 = !DIEnumerator(name: "ICON_GAME", value: 85, isUnsigned: true)
!174 = !DIEnumerator(name: "ICON_RADIO", value: 86, isUnsigned: true)
!175 = !DIEnumerator(name: "ICON_SCRIPT", value: 87, isUnsigned: true)
!176 = !DIEnumerator(name: "ICON_PARTICLES", value: 88, isUnsigned: true)
!177 = !DIEnumerator(name: "ICON_PHYSICS", value: 89, isUnsigned: true)
!178 = !DIEnumerator(name: "ICON_SPEAKER", value: 90, isUnsigned: true)
!179 = !DIEnumerator(name: "ICON_TEXTURE_SHADED", value: 91, isUnsigned: true)
!180 = !DIEnumerator(name: "ICON_BLANK042", value: 92, isUnsigned: true)
!181 = !DIEnumerator(name: "ICON_BLANK043", value: 93, isUnsigned: true)
!182 = !DIEnumerator(name: "ICON_BLANK044", value: 94, isUnsigned: true)
!183 = !DIEnumerator(name: "ICON_BLANK045", value: 95, isUnsigned: true)
!184 = !DIEnumerator(name: "ICON_BLANK046", value: 96, isUnsigned: true)
!185 = !DIEnumerator(name: "ICON_BLANK047", value: 97, isUnsigned: true)
!186 = !DIEnumerator(name: "ICON_BLANK048", value: 98, isUnsigned: true)
!187 = !DIEnumerator(name: "ICON_BLANK049", value: 99, isUnsigned: true)
!188 = !DIEnumerator(name: "ICON_BLANK050", value: 100, isUnsigned: true)
!189 = !DIEnumerator(name: "ICON_BLANK051", value: 101, isUnsigned: true)
!190 = !DIEnumerator(name: "ICON_BLANK052", value: 102, isUnsigned: true)
!191 = !DIEnumerator(name: "ICON_BLANK052b", value: 103, isUnsigned: true)
!192 = !DIEnumerator(name: "ICON_VIEW3D", value: 104, isUnsigned: true)
!193 = !DIEnumerator(name: "ICON_IPO", value: 105, isUnsigned: true)
!194 = !DIEnumerator(name: "ICON_OOPS", value: 106, isUnsigned: true)
!195 = !DIEnumerator(name: "ICON_BUTS", value: 107, isUnsigned: true)
!196 = !DIEnumerator(name: "ICON_FILESEL", value: 108, isUnsigned: true)
!197 = !DIEnumerator(name: "ICON_IMAGE_COL", value: 109, isUnsigned: true)
!198 = !DIEnumerator(name: "ICON_INFO", value: 110, isUnsigned: true)
!199 = !DIEnumerator(name: "ICON_SEQUENCE", value: 111, isUnsigned: true)
!200 = !DIEnumerator(name: "ICON_TEXT", value: 112, isUnsigned: true)
!201 = !DIEnumerator(name: "ICON_IMASEL", value: 113, isUnsigned: true)
!202 = !DIEnumerator(name: "ICON_SOUND", value: 114, isUnsigned: true)
!203 = !DIEnumerator(name: "ICON_ACTION", value: 115, isUnsigned: true)
!204 = !DIEnumerator(name: "ICON_NLA", value: 116, isUnsigned: true)
!205 = !DIEnumerator(name: "ICON_SCRIPTWIN", value: 117, isUnsigned: true)
!206 = !DIEnumerator(name: "ICON_TIME", value: 118, isUnsigned: true)
!207 = !DIEnumerator(name: "ICON_NODETREE", value: 119, isUnsigned: true)
!208 = !DIEnumerator(name: "ICON_LOGIC", value: 120, isUnsigned: true)
!209 = !DIEnumerator(name: "ICON_CONSOLE", value: 121, isUnsigned: true)
!210 = !DIEnumerator(name: "ICON_PREFERENCES", value: 122, isUnsigned: true)
!211 = !DIEnumerator(name: "ICON_CLIP", value: 123, isUnsigned: true)
!212 = !DIEnumerator(name: "ICON_ASSET_MANAGER", value: 124, isUnsigned: true)
!213 = !DIEnumerator(name: "ICON_BLANK057", value: 125, isUnsigned: true)
!214 = !DIEnumerator(name: "ICON_BLANK058", value: 126, isUnsigned: true)
!215 = !DIEnumerator(name: "ICON_BLANK059", value: 127, isUnsigned: true)
!216 = !DIEnumerator(name: "ICON_BLANK060", value: 128, isUnsigned: true)
!217 = !DIEnumerator(name: "ICON_BLANK061", value: 129, isUnsigned: true)
!218 = !DIEnumerator(name: "ICON_OBJECT_DATAMODE", value: 130, isUnsigned: true)
!219 = !DIEnumerator(name: "ICON_EDITMODE_HLT", value: 131, isUnsigned: true)
!220 = !DIEnumerator(name: "ICON_FACESEL_HLT", value: 132, isUnsigned: true)
!221 = !DIEnumerator(name: "ICON_VPAINT_HLT", value: 133, isUnsigned: true)
!222 = !DIEnumerator(name: "ICON_TPAINT_HLT", value: 134, isUnsigned: true)
!223 = !DIEnumerator(name: "ICON_WPAINT_HLT", value: 135, isUnsigned: true)
!224 = !DIEnumerator(name: "ICON_SCULPTMODE_HLT", value: 136, isUnsigned: true)
!225 = !DIEnumerator(name: "ICON_POSE_HLT", value: 137, isUnsigned: true)
!226 = !DIEnumerator(name: "ICON_PARTICLEMODE", value: 138, isUnsigned: true)
!227 = !DIEnumerator(name: "ICON_LIGHTPAINT", value: 139, isUnsigned: true)
!228 = !DIEnumerator(name: "ICON_BLANK063", value: 140, isUnsigned: true)
!229 = !DIEnumerator(name: "ICON_BLANK064", value: 141, isUnsigned: true)
!230 = !DIEnumerator(name: "ICON_BLANK065", value: 142, isUnsigned: true)
!231 = !DIEnumerator(name: "ICON_BLANK066", value: 143, isUnsigned: true)
!232 = !DIEnumerator(name: "ICON_BLANK067", value: 144, isUnsigned: true)
!233 = !DIEnumerator(name: "ICON_BLANK068", value: 145, isUnsigned: true)
!234 = !DIEnumerator(name: "ICON_BLANK069", value: 146, isUnsigned: true)
!235 = !DIEnumerator(name: "ICON_BLANK070", value: 147, isUnsigned: true)
!236 = !DIEnumerator(name: "ICON_BLANK071", value: 148, isUnsigned: true)
!237 = !DIEnumerator(name: "ICON_BLANK072", value: 149, isUnsigned: true)
!238 = !DIEnumerator(name: "ICON_BLANK073", value: 150, isUnsigned: true)
!239 = !DIEnumerator(name: "ICON_BLANK074", value: 151, isUnsigned: true)
!240 = !DIEnumerator(name: "ICON_BLANK075", value: 152, isUnsigned: true)
!241 = !DIEnumerator(name: "ICON_BLANK076", value: 153, isUnsigned: true)
!242 = !DIEnumerator(name: "ICON_BLANK077", value: 154, isUnsigned: true)
!243 = !DIEnumerator(name: "ICON_BLANK077b", value: 155, isUnsigned: true)
!244 = !DIEnumerator(name: "ICON_SCENE_DATA", value: 156, isUnsigned: true)
!245 = !DIEnumerator(name: "ICON_RENDERLAYERS", value: 157, isUnsigned: true)
!246 = !DIEnumerator(name: "ICON_WORLD_DATA", value: 158, isUnsigned: true)
!247 = !DIEnumerator(name: "ICON_OBJECT_DATA", value: 159, isUnsigned: true)
!248 = !DIEnumerator(name: "ICON_MESH_DATA", value: 160, isUnsigned: true)
!249 = !DIEnumerator(name: "ICON_CURVE_DATA", value: 161, isUnsigned: true)
!250 = !DIEnumerator(name: "ICON_META_DATA", value: 162, isUnsigned: true)
!251 = !DIEnumerator(name: "ICON_LATTICE_DATA", value: 163, isUnsigned: true)
!252 = !DIEnumerator(name: "ICON_LAMP_DATA", value: 164, isUnsigned: true)
!253 = !DIEnumerator(name: "ICON_MATERIAL_DATA", value: 165, isUnsigned: true)
!254 = !DIEnumerator(name: "ICON_TEXTURE_DATA", value: 166, isUnsigned: true)
!255 = !DIEnumerator(name: "ICON_ANIM_DATA", value: 167, isUnsigned: true)
!256 = !DIEnumerator(name: "ICON_CAMERA_DATA", value: 168, isUnsigned: true)
!257 = !DIEnumerator(name: "ICON_PARTICLE_DATA", value: 169, isUnsigned: true)
!258 = !DIEnumerator(name: "ICON_LIBRARY_DATA_DIRECT", value: 170, isUnsigned: true)
!259 = !DIEnumerator(name: "ICON_GROUP", value: 171, isUnsigned: true)
!260 = !DIEnumerator(name: "ICON_ARMATURE_DATA", value: 172, isUnsigned: true)
!261 = !DIEnumerator(name: "ICON_POSE_DATA", value: 173, isUnsigned: true)
!262 = !DIEnumerator(name: "ICON_BONE_DATA", value: 174, isUnsigned: true)
!263 = !DIEnumerator(name: "ICON_CONSTRAINT", value: 175, isUnsigned: true)
!264 = !DIEnumerator(name: "ICON_SHAPEKEY_DATA", value: 176, isUnsigned: true)
!265 = !DIEnumerator(name: "ICON_CONSTRAINT_BONE", value: 177, isUnsigned: true)
!266 = !DIEnumerator(name: "ICON_CAMERA_STEREO", value: 178, isUnsigned: true)
!267 = !DIEnumerator(name: "ICON_PACKAGE", value: 179, isUnsigned: true)
!268 = !DIEnumerator(name: "ICON_UGLYPACKAGE", value: 180, isUnsigned: true)
!269 = !DIEnumerator(name: "ICON_BLANK079b", value: 181, isUnsigned: true)
!270 = !DIEnumerator(name: "ICON_BRUSH_DATA", value: 182, isUnsigned: true)
!271 = !DIEnumerator(name: "ICON_IMAGE_DATA", value: 183, isUnsigned: true)
!272 = !DIEnumerator(name: "ICON_FILE", value: 184, isUnsigned: true)
!273 = !DIEnumerator(name: "ICON_FCURVE", value: 185, isUnsigned: true)
!274 = !DIEnumerator(name: "ICON_FONT_DATA", value: 186, isUnsigned: true)
!275 = !DIEnumerator(name: "ICON_RENDER_RESULT", value: 187, isUnsigned: true)
!276 = !DIEnumerator(name: "ICON_SURFACE_DATA", value: 188, isUnsigned: true)
!277 = !DIEnumerator(name: "ICON_EMPTY_DATA", value: 189, isUnsigned: true)
!278 = !DIEnumerator(name: "ICON_SETTINGS", value: 190, isUnsigned: true)
!279 = !DIEnumerator(name: "ICON_RENDER_ANIMATION", value: 191, isUnsigned: true)
!280 = !DIEnumerator(name: "ICON_RENDER_STILL", value: 192, isUnsigned: true)
!281 = !DIEnumerator(name: "ICON_BLANK080F", value: 193, isUnsigned: true)
!282 = !DIEnumerator(name: "ICON_BOIDS", value: 194, isUnsigned: true)
!283 = !DIEnumerator(name: "ICON_STRANDS", value: 195, isUnsigned: true)
!284 = !DIEnumerator(name: "ICON_LIBRARY_DATA_INDIRECT", value: 196, isUnsigned: true)
!285 = !DIEnumerator(name: "ICON_GREASEPENCIL", value: 197, isUnsigned: true)
!286 = !DIEnumerator(name: "ICON_LINE_DATA", value: 198, isUnsigned: true)
!287 = !DIEnumerator(name: "ICON_BLANK084", value: 199, isUnsigned: true)
!288 = !DIEnumerator(name: "ICON_GROUP_BONE", value: 200, isUnsigned: true)
!289 = !DIEnumerator(name: "ICON_GROUP_VERTEX", value: 201, isUnsigned: true)
!290 = !DIEnumerator(name: "ICON_GROUP_VCOL", value: 202, isUnsigned: true)
!291 = !DIEnumerator(name: "ICON_GROUP_UVS", value: 203, isUnsigned: true)
!292 = !DIEnumerator(name: "ICON_BLANK089", value: 204, isUnsigned: true)
!293 = !DIEnumerator(name: "ICON_BLANK090", value: 205, isUnsigned: true)
!294 = !DIEnumerator(name: "ICON_RNA", value: 206, isUnsigned: true)
!295 = !DIEnumerator(name: "ICON_RNA_ADD", value: 207, isUnsigned: true)
!296 = !DIEnumerator(name: "ICON_BLANK092", value: 208, isUnsigned: true)
!297 = !DIEnumerator(name: "ICON_BLANK093", value: 209, isUnsigned: true)
!298 = !DIEnumerator(name: "ICON_BLANK094", value: 210, isUnsigned: true)
!299 = !DIEnumerator(name: "ICON_BLANK095", value: 211, isUnsigned: true)
!300 = !DIEnumerator(name: "ICON_BLANK096", value: 212, isUnsigned: true)
!301 = !DIEnumerator(name: "ICON_BLANK097", value: 213, isUnsigned: true)
!302 = !DIEnumerator(name: "ICON_BLANK098", value: 214, isUnsigned: true)
!303 = !DIEnumerator(name: "ICON_BLANK099", value: 215, isUnsigned: true)
!304 = !DIEnumerator(name: "ICON_BLANK100", value: 216, isUnsigned: true)
!305 = !DIEnumerator(name: "ICON_BLANK101", value: 217, isUnsigned: true)
!306 = !DIEnumerator(name: "ICON_BLANK102", value: 218, isUnsigned: true)
!307 = !DIEnumerator(name: "ICON_BLANK103", value: 219, isUnsigned: true)
!308 = !DIEnumerator(name: "ICON_BLANK104", value: 220, isUnsigned: true)
!309 = !DIEnumerator(name: "ICON_BLANK105", value: 221, isUnsigned: true)
!310 = !DIEnumerator(name: "ICON_BLANK106", value: 222, isUnsigned: true)
!311 = !DIEnumerator(name: "ICON_BLANK107", value: 223, isUnsigned: true)
!312 = !DIEnumerator(name: "ICON_BLANK108", value: 224, isUnsigned: true)
!313 = !DIEnumerator(name: "ICON_BLANK109", value: 225, isUnsigned: true)
!314 = !DIEnumerator(name: "ICON_BLANK110", value: 226, isUnsigned: true)
!315 = !DIEnumerator(name: "ICON_BLANK111", value: 227, isUnsigned: true)
!316 = !DIEnumerator(name: "ICON_BLANK112", value: 228, isUnsigned: true)
!317 = !DIEnumerator(name: "ICON_BLANK113", value: 229, isUnsigned: true)
!318 = !DIEnumerator(name: "ICON_BLANK114", value: 230, isUnsigned: true)
!319 = !DIEnumerator(name: "ICON_BLANK115", value: 231, isUnsigned: true)
!320 = !DIEnumerator(name: "ICON_BLANK116", value: 232, isUnsigned: true)
!321 = !DIEnumerator(name: "ICON_BLANK116b", value: 233, isUnsigned: true)
!322 = !DIEnumerator(name: "ICON_OUTLINER_OB_EMPTY", value: 234, isUnsigned: true)
!323 = !DIEnumerator(name: "ICON_OUTLINER_OB_MESH", value: 235, isUnsigned: true)
!324 = !DIEnumerator(name: "ICON_OUTLINER_OB_CURVE", value: 236, isUnsigned: true)
!325 = !DIEnumerator(name: "ICON_OUTLINER_OB_LATTICE", value: 237, isUnsigned: true)
!326 = !DIEnumerator(name: "ICON_OUTLINER_OB_META", value: 238, isUnsigned: true)
!327 = !DIEnumerator(name: "ICON_OUTLINER_OB_LAMP", value: 239, isUnsigned: true)
!328 = !DIEnumerator(name: "ICON_OUTLINER_OB_CAMERA", value: 240, isUnsigned: true)
!329 = !DIEnumerator(name: "ICON_OUTLINER_OB_ARMATURE", value: 241, isUnsigned: true)
!330 = !DIEnumerator(name: "ICON_OUTLINER_OB_FONT", value: 242, isUnsigned: true)
!331 = !DIEnumerator(name: "ICON_OUTLINER_OB_SURFACE", value: 243, isUnsigned: true)
!332 = !DIEnumerator(name: "ICON_OUTLINER_OB_SPEAKER", value: 244, isUnsigned: true)
!333 = !DIEnumerator(name: "ICON_BLANK120", value: 245, isUnsigned: true)
!334 = !DIEnumerator(name: "ICON_BLANK121", value: 246, isUnsigned: true)
!335 = !DIEnumerator(name: "ICON_BLANK122", value: 247, isUnsigned: true)
!336 = !DIEnumerator(name: "ICON_BLANK123", value: 248, isUnsigned: true)
!337 = !DIEnumerator(name: "ICON_BLANK124", value: 249, isUnsigned: true)
!338 = !DIEnumerator(name: "ICON_BLANK125", value: 250, isUnsigned: true)
!339 = !DIEnumerator(name: "ICON_BLANK126", value: 251, isUnsigned: true)
!340 = !DIEnumerator(name: "ICON_BLANK127", value: 252, isUnsigned: true)
!341 = !DIEnumerator(name: "ICON_RESTRICT_VIEW_OFF", value: 253, isUnsigned: true)
!342 = !DIEnumerator(name: "ICON_RESTRICT_VIEW_ON", value: 254, isUnsigned: true)
!343 = !DIEnumerator(name: "ICON_RESTRICT_SELECT_OFF", value: 255, isUnsigned: true)
!344 = !DIEnumerator(name: "ICON_RESTRICT_SELECT_ON", value: 256, isUnsigned: true)
!345 = !DIEnumerator(name: "ICON_RESTRICT_RENDER_OFF", value: 257, isUnsigned: true)
!346 = !DIEnumerator(name: "ICON_RESTRICT_RENDER_ON", value: 258, isUnsigned: true)
!347 = !DIEnumerator(name: "ICON_BLANK127b", value: 259, isUnsigned: true)
!348 = !DIEnumerator(name: "ICON_OUTLINER_DATA_EMPTY", value: 260, isUnsigned: true)
!349 = !DIEnumerator(name: "ICON_OUTLINER_DATA_MESH", value: 261, isUnsigned: true)
!350 = !DIEnumerator(name: "ICON_OUTLINER_DATA_CURVE", value: 262, isUnsigned: true)
!351 = !DIEnumerator(name: "ICON_OUTLINER_DATA_LATTICE", value: 263, isUnsigned: true)
!352 = !DIEnumerator(name: "ICON_OUTLINER_DATA_META", value: 264, isUnsigned: true)
!353 = !DIEnumerator(name: "ICON_OUTLINER_DATA_LAMP", value: 265, isUnsigned: true)
!354 = !DIEnumerator(name: "ICON_OUTLINER_DATA_CAMERA", value: 266, isUnsigned: true)
!355 = !DIEnumerator(name: "ICON_OUTLINER_DATA_ARMATURE", value: 267, isUnsigned: true)
!356 = !DIEnumerator(name: "ICON_OUTLINER_DATA_FONT", value: 268, isUnsigned: true)
!357 = !DIEnumerator(name: "ICON_OUTLINER_DATA_SURFACE", value: 269, isUnsigned: true)
!358 = !DIEnumerator(name: "ICON_OUTLINER_DATA_SPEAKER", value: 270, isUnsigned: true)
!359 = !DIEnumerator(name: "ICON_OUTLINER_DATA_POSE", value: 271, isUnsigned: true)
!360 = !DIEnumerator(name: "ICON_BLANK130", value: 272, isUnsigned: true)
!361 = !DIEnumerator(name: "ICON_BLANK131", value: 273, isUnsigned: true)
!362 = !DIEnumerator(name: "ICON_BLANK132", value: 274, isUnsigned: true)
!363 = !DIEnumerator(name: "ICON_BLANK133", value: 275, isUnsigned: true)
!364 = !DIEnumerator(name: "ICON_BLANK134", value: 276, isUnsigned: true)
!365 = !DIEnumerator(name: "ICON_BLANK135", value: 277, isUnsigned: true)
!366 = !DIEnumerator(name: "ICON_BLANK136", value: 278, isUnsigned: true)
!367 = !DIEnumerator(name: "ICON_BLANK137", value: 279, isUnsigned: true)
!368 = !DIEnumerator(name: "ICON_BLANK138", value: 280, isUnsigned: true)
!369 = !DIEnumerator(name: "ICON_BLANK139", value: 281, isUnsigned: true)
!370 = !DIEnumerator(name: "ICON_BLANK140", value: 282, isUnsigned: true)
!371 = !DIEnumerator(name: "ICON_BLANK141", value: 283, isUnsigned: true)
!372 = !DIEnumerator(name: "ICON_BLANK142", value: 284, isUnsigned: true)
!373 = !DIEnumerator(name: "ICON_BLANK142b", value: 285, isUnsigned: true)
!374 = !DIEnumerator(name: "ICON_MESH_PLANE", value: 286, isUnsigned: true)
!375 = !DIEnumerator(name: "ICON_MESH_CUBE", value: 287, isUnsigned: true)
!376 = !DIEnumerator(name: "ICON_MESH_CIRCLE", value: 288, isUnsigned: true)
!377 = !DIEnumerator(name: "ICON_MESH_UVSPHERE", value: 289, isUnsigned: true)
!378 = !DIEnumerator(name: "ICON_MESH_ICOSPHERE", value: 290, isUnsigned: true)
!379 = !DIEnumerator(name: "ICON_MESH_GRID", value: 291, isUnsigned: true)
!380 = !DIEnumerator(name: "ICON_MESH_MONKEY", value: 292, isUnsigned: true)
!381 = !DIEnumerator(name: "ICON_MESH_CYLINDER", value: 293, isUnsigned: true)
!382 = !DIEnumerator(name: "ICON_MESH_TORUS", value: 294, isUnsigned: true)
!383 = !DIEnumerator(name: "ICON_MESH_CONE", value: 295, isUnsigned: true)
!384 = !DIEnumerator(name: "ICON_BLANK610", value: 296, isUnsigned: true)
!385 = !DIEnumerator(name: "ICON_BLANK611", value: 297, isUnsigned: true)
!386 = !DIEnumerator(name: "ICON_LAMP_POINT", value: 298, isUnsigned: true)
!387 = !DIEnumerator(name: "ICON_LAMP_SUN", value: 299, isUnsigned: true)
!388 = !DIEnumerator(name: "ICON_LAMP_SPOT", value: 300, isUnsigned: true)
!389 = !DIEnumerator(name: "ICON_LAMP_HEMI", value: 301, isUnsigned: true)
!390 = !DIEnumerator(name: "ICON_LAMP_AREA", value: 302, isUnsigned: true)
!391 = !DIEnumerator(name: "ICON_BLANK617", value: 303, isUnsigned: true)
!392 = !DIEnumerator(name: "ICON_BLANK618", value: 304, isUnsigned: true)
!393 = !DIEnumerator(name: "ICON_META_EMPTY", value: 305, isUnsigned: true)
!394 = !DIEnumerator(name: "ICON_META_PLANE", value: 306, isUnsigned: true)
!395 = !DIEnumerator(name: "ICON_META_CUBE", value: 307, isUnsigned: true)
!396 = !DIEnumerator(name: "ICON_META_BALL", value: 308, isUnsigned: true)
!397 = !DIEnumerator(name: "ICON_META_ELLIPSOID", value: 309, isUnsigned: true)
!398 = !DIEnumerator(name: "ICON_META_CAPSULE", value: 310, isUnsigned: true)
!399 = !DIEnumerator(name: "ICON_BLANK625", value: 311, isUnsigned: true)
!400 = !DIEnumerator(name: "ICON_SURFACE_NCURVE", value: 312, isUnsigned: true)
!401 = !DIEnumerator(name: "ICON_SURFACE_NCIRCLE", value: 313, isUnsigned: true)
!402 = !DIEnumerator(name: "ICON_SURFACE_NSURFACE", value: 314, isUnsigned: true)
!403 = !DIEnumerator(name: "ICON_SURFACE_NCYLINDER", value: 315, isUnsigned: true)
!404 = !DIEnumerator(name: "ICON_SURFACE_NSPHERE", value: 316, isUnsigned: true)
!405 = !DIEnumerator(name: "ICON_SURFACE_NTORUS", value: 317, isUnsigned: true)
!406 = !DIEnumerator(name: "ICON_BLANK636", value: 318, isUnsigned: true)
!407 = !DIEnumerator(name: "ICON_BLANK637", value: 319, isUnsigned: true)
!408 = !DIEnumerator(name: "ICON_BLANK638", value: 320, isUnsigned: true)
!409 = !DIEnumerator(name: "ICON_CURVE_BEZCURVE", value: 321, isUnsigned: true)
!410 = !DIEnumerator(name: "ICON_CURVE_BEZCIRCLE", value: 322, isUnsigned: true)
!411 = !DIEnumerator(name: "ICON_CURVE_NCURVE", value: 323, isUnsigned: true)
!412 = !DIEnumerator(name: "ICON_CURVE_NCIRCLE", value: 324, isUnsigned: true)
!413 = !DIEnumerator(name: "ICON_CURVE_PATH", value: 325, isUnsigned: true)
!414 = !DIEnumerator(name: "ICON_BLANK644", value: 326, isUnsigned: true)
!415 = !DIEnumerator(name: "ICON_BLANK645", value: 327, isUnsigned: true)
!416 = !DIEnumerator(name: "ICON_BLANK646", value: 328, isUnsigned: true)
!417 = !DIEnumerator(name: "ICON_BLANK647", value: 329, isUnsigned: true)
!418 = !DIEnumerator(name: "ICON_BLANK648", value: 330, isUnsigned: true)
!419 = !DIEnumerator(name: "ICON_COLOR_RED", value: 331, isUnsigned: true)
!420 = !DIEnumerator(name: "ICON_COLOR_GREEN", value: 332, isUnsigned: true)
!421 = !DIEnumerator(name: "ICON_COLOR_BLUE", value: 333, isUnsigned: true)
!422 = !DIEnumerator(name: "ICON_TRIA_RIGHT_BAR", value: 334, isUnsigned: true)
!423 = !DIEnumerator(name: "ICON_TRIA_DOWN_BAR", value: 335, isUnsigned: true)
!424 = !DIEnumerator(name: "ICON_TRIA_LEFT_BAR", value: 336, isUnsigned: true)
!425 = !DIEnumerator(name: "ICON_TRIA_UP_BAR", value: 337, isUnsigned: true)
!426 = !DIEnumerator(name: "ICON_FORCE_FORCE", value: 338, isUnsigned: true)
!427 = !DIEnumerator(name: "ICON_FORCE_WIND", value: 339, isUnsigned: true)
!428 = !DIEnumerator(name: "ICON_FORCE_VORTEX", value: 340, isUnsigned: true)
!429 = !DIEnumerator(name: "ICON_FORCE_MAGNETIC", value: 341, isUnsigned: true)
!430 = !DIEnumerator(name: "ICON_FORCE_HARMONIC", value: 342, isUnsigned: true)
!431 = !DIEnumerator(name: "ICON_FORCE_CHARGE", value: 343, isUnsigned: true)
!432 = !DIEnumerator(name: "ICON_FORCE_LENNARDJONES", value: 344, isUnsigned: true)
!433 = !DIEnumerator(name: "ICON_FORCE_TEXTURE", value: 345, isUnsigned: true)
!434 = !DIEnumerator(name: "ICON_FORCE_CURVE", value: 346, isUnsigned: true)
!435 = !DIEnumerator(name: "ICON_FORCE_BOID", value: 347, isUnsigned: true)
!436 = !DIEnumerator(name: "ICON_FORCE_TURBULENCE", value: 348, isUnsigned: true)
!437 = !DIEnumerator(name: "ICON_FORCE_DRAG", value: 349, isUnsigned: true)
!438 = !DIEnumerator(name: "ICON_FORCE_SMOKEFLOW", value: 350, isUnsigned: true)
!439 = !DIEnumerator(name: "ICON_BLANK673", value: 351, isUnsigned: true)
!440 = !DIEnumerator(name: "ICON_BLANK674", value: 352, isUnsigned: true)
!441 = !DIEnumerator(name: "ICON_BLANK675", value: 353, isUnsigned: true)
!442 = !DIEnumerator(name: "ICON_BLANK676", value: 354, isUnsigned: true)
!443 = !DIEnumerator(name: "ICON_BLANK677", value: 355, isUnsigned: true)
!444 = !DIEnumerator(name: "ICON_BLANK678", value: 356, isUnsigned: true)
!445 = !DIEnumerator(name: "ICON_BLANK679", value: 357, isUnsigned: true)
!446 = !DIEnumerator(name: "ICON_BLANK680", value: 358, isUnsigned: true)
!447 = !DIEnumerator(name: "ICON_BLANK681", value: 359, isUnsigned: true)
!448 = !DIEnumerator(name: "ICON_BLANK682", value: 360, isUnsigned: true)
!449 = !DIEnumerator(name: "ICON_BLANK683", value: 361, isUnsigned: true)
!450 = !DIEnumerator(name: "ICON_BLANK684", value: 362, isUnsigned: true)
!451 = !DIEnumerator(name: "ICON_BLANK685", value: 363, isUnsigned: true)
!452 = !DIEnumerator(name: "ICON_BLANK690", value: 364, isUnsigned: true)
!453 = !DIEnumerator(name: "ICON_BLANK691", value: 365, isUnsigned: true)
!454 = !DIEnumerator(name: "ICON_BLANK692", value: 366, isUnsigned: true)
!455 = !DIEnumerator(name: "ICON_BLANK693", value: 367, isUnsigned: true)
!456 = !DIEnumerator(name: "ICON_BLANK694", value: 368, isUnsigned: true)
!457 = !DIEnumerator(name: "ICON_BLANK695", value: 369, isUnsigned: true)
!458 = !DIEnumerator(name: "ICON_BLANK696", value: 370, isUnsigned: true)
!459 = !DIEnumerator(name: "ICON_BLANK697", value: 371, isUnsigned: true)
!460 = !DIEnumerator(name: "ICON_BLANK698", value: 372, isUnsigned: true)
!461 = !DIEnumerator(name: "ICON_BLANK699", value: 373, isUnsigned: true)
!462 = !DIEnumerator(name: "ICON_BLANK700", value: 374, isUnsigned: true)
!463 = !DIEnumerator(name: "ICON_BLANK701", value: 375, isUnsigned: true)
!464 = !DIEnumerator(name: "ICON_BLANK702", value: 376, isUnsigned: true)
!465 = !DIEnumerator(name: "ICON_BLANK703", value: 377, isUnsigned: true)
!466 = !DIEnumerator(name: "ICON_BLANK704", value: 378, isUnsigned: true)
!467 = !DIEnumerator(name: "ICON_BLANK705", value: 379, isUnsigned: true)
!468 = !DIEnumerator(name: "ICON_BLANK706", value: 380, isUnsigned: true)
!469 = !DIEnumerator(name: "ICON_BLANK707", value: 381, isUnsigned: true)
!470 = !DIEnumerator(name: "ICON_BLANK708", value: 382, isUnsigned: true)
!471 = !DIEnumerator(name: "ICON_BLANK709", value: 383, isUnsigned: true)
!472 = !DIEnumerator(name: "ICON_BLANK710", value: 384, isUnsigned: true)
!473 = !DIEnumerator(name: "ICON_BLANK711", value: 385, isUnsigned: true)
!474 = !DIEnumerator(name: "ICON_BLANK712", value: 386, isUnsigned: true)
!475 = !DIEnumerator(name: "ICON_BLANK713", value: 387, isUnsigned: true)
!476 = !DIEnumerator(name: "ICON_BLANK714", value: 388, isUnsigned: true)
!477 = !DIEnumerator(name: "ICON_BLANK715", value: 389, isUnsigned: true)
!478 = !DIEnumerator(name: "ICON_BLANK720", value: 390, isUnsigned: true)
!479 = !DIEnumerator(name: "ICON_BLANK721", value: 391, isUnsigned: true)
!480 = !DIEnumerator(name: "ICON_BLANK722", value: 392, isUnsigned: true)
!481 = !DIEnumerator(name: "ICON_BLANK733", value: 393, isUnsigned: true)
!482 = !DIEnumerator(name: "ICON_BLANK734", value: 394, isUnsigned: true)
!483 = !DIEnumerator(name: "ICON_BLANK735", value: 395, isUnsigned: true)
!484 = !DIEnumerator(name: "ICON_BLANK736", value: 396, isUnsigned: true)
!485 = !DIEnumerator(name: "ICON_BLANK737", value: 397, isUnsigned: true)
!486 = !DIEnumerator(name: "ICON_BLANK738", value: 398, isUnsigned: true)
!487 = !DIEnumerator(name: "ICON_BLANK739", value: 399, isUnsigned: true)
!488 = !DIEnumerator(name: "ICON_BLANK740", value: 400, isUnsigned: true)
!489 = !DIEnumerator(name: "ICON_BLANK741", value: 401, isUnsigned: true)
!490 = !DIEnumerator(name: "ICON_BLANK742", value: 402, isUnsigned: true)
!491 = !DIEnumerator(name: "ICON_BLANK743", value: 403, isUnsigned: true)
!492 = !DIEnumerator(name: "ICON_BLANK744", value: 404, isUnsigned: true)
!493 = !DIEnumerator(name: "ICON_BLANK745", value: 405, isUnsigned: true)
!494 = !DIEnumerator(name: "ICON_BLANK746", value: 406, isUnsigned: true)
!495 = !DIEnumerator(name: "ICON_BLANK747", value: 407, isUnsigned: true)
!496 = !DIEnumerator(name: "ICON_BLANK748", value: 408, isUnsigned: true)
!497 = !DIEnumerator(name: "ICON_BLANK749", value: 409, isUnsigned: true)
!498 = !DIEnumerator(name: "ICON_BLANK750", value: 410, isUnsigned: true)
!499 = !DIEnumerator(name: "ICON_BLANK751", value: 411, isUnsigned: true)
!500 = !DIEnumerator(name: "ICON_BLANK752", value: 412, isUnsigned: true)
!501 = !DIEnumerator(name: "ICON_BLANK753", value: 413, isUnsigned: true)
!502 = !DIEnumerator(name: "ICON_BLANK754", value: 414, isUnsigned: true)
!503 = !DIEnumerator(name: "ICON_BLANK755", value: 415, isUnsigned: true)
!504 = !DIEnumerator(name: "ICON_BLANK760", value: 416, isUnsigned: true)
!505 = !DIEnumerator(name: "ICON_BLANK761", value: 417, isUnsigned: true)
!506 = !DIEnumerator(name: "ICON_BLANK762", value: 418, isUnsigned: true)
!507 = !DIEnumerator(name: "ICON_BLANK763", value: 419, isUnsigned: true)
!508 = !DIEnumerator(name: "ICON_BLANK764", value: 420, isUnsigned: true)
!509 = !DIEnumerator(name: "ICON_BLANK765", value: 421, isUnsigned: true)
!510 = !DIEnumerator(name: "ICON_BLANK766", value: 422, isUnsigned: true)
!511 = !DIEnumerator(name: "ICON_BLANK767", value: 423, isUnsigned: true)
!512 = !DIEnumerator(name: "ICON_BLANK768", value: 424, isUnsigned: true)
!513 = !DIEnumerator(name: "ICON_BLANK769", value: 425, isUnsigned: true)
!514 = !DIEnumerator(name: "ICON_BLANK770", value: 426, isUnsigned: true)
!515 = !DIEnumerator(name: "ICON_BLANK771", value: 427, isUnsigned: true)
!516 = !DIEnumerator(name: "ICON_BLANK772", value: 428, isUnsigned: true)
!517 = !DIEnumerator(name: "ICON_BLANK773", value: 429, isUnsigned: true)
!518 = !DIEnumerator(name: "ICON_BLANK774", value: 430, isUnsigned: true)
!519 = !DIEnumerator(name: "ICON_BLANK775", value: 431, isUnsigned: true)
!520 = !DIEnumerator(name: "ICON_BLANK776", value: 432, isUnsigned: true)
!521 = !DIEnumerator(name: "ICON_BLANK777", value: 433, isUnsigned: true)
!522 = !DIEnumerator(name: "ICON_BLANK778", value: 434, isUnsigned: true)
!523 = !DIEnumerator(name: "ICON_BLANK779", value: 435, isUnsigned: true)
!524 = !DIEnumerator(name: "ICON_BLANK780", value: 436, isUnsigned: true)
!525 = !DIEnumerator(name: "ICON_BLANK781", value: 437, isUnsigned: true)
!526 = !DIEnumerator(name: "ICON_BLANK782", value: 438, isUnsigned: true)
!527 = !DIEnumerator(name: "ICON_BLANK783", value: 439, isUnsigned: true)
!528 = !DIEnumerator(name: "ICON_BLANK784", value: 440, isUnsigned: true)
!529 = !DIEnumerator(name: "ICON_BLANK785", value: 441, isUnsigned: true)
!530 = !DIEnumerator(name: "ICON_MODIFIER", value: 442, isUnsigned: true)
!531 = !DIEnumerator(name: "ICON_MOD_WAVE", value: 443, isUnsigned: true)
!532 = !DIEnumerator(name: "ICON_MOD_BUILD", value: 444, isUnsigned: true)
!533 = !DIEnumerator(name: "ICON_MOD_DECIM", value: 445, isUnsigned: true)
!534 = !DIEnumerator(name: "ICON_MOD_MIRROR", value: 446, isUnsigned: true)
!535 = !DIEnumerator(name: "ICON_MOD_SOFT", value: 447, isUnsigned: true)
!536 = !DIEnumerator(name: "ICON_MOD_SUBSURF", value: 448, isUnsigned: true)
!537 = !DIEnumerator(name: "ICON_HOOK", value: 449, isUnsigned: true)
!538 = !DIEnumerator(name: "ICON_MOD_PHYSICS", value: 450, isUnsigned: true)
!539 = !DIEnumerator(name: "ICON_MOD_PARTICLES", value: 451, isUnsigned: true)
!540 = !DIEnumerator(name: "ICON_MOD_BOOLEAN", value: 452, isUnsigned: true)
!541 = !DIEnumerator(name: "ICON_MOD_EDGESPLIT", value: 453, isUnsigned: true)
!542 = !DIEnumerator(name: "ICON_MOD_ARRAY", value: 454, isUnsigned: true)
!543 = !DIEnumerator(name: "ICON_MOD_UVPROJECT", value: 455, isUnsigned: true)
!544 = !DIEnumerator(name: "ICON_MOD_DISPLACE", value: 456, isUnsigned: true)
!545 = !DIEnumerator(name: "ICON_MOD_CURVE", value: 457, isUnsigned: true)
!546 = !DIEnumerator(name: "ICON_MOD_LATTICE", value: 458, isUnsigned: true)
!547 = !DIEnumerator(name: "ICON_CONSTRAINT_DATA", value: 459, isUnsigned: true)
!548 = !DIEnumerator(name: "ICON_MOD_ARMATURE", value: 460, isUnsigned: true)
!549 = !DIEnumerator(name: "ICON_MOD_SHRINKWRAP", value: 461, isUnsigned: true)
!550 = !DIEnumerator(name: "ICON_MOD_CAST", value: 462, isUnsigned: true)
!551 = !DIEnumerator(name: "ICON_MOD_MESHDEFORM", value: 463, isUnsigned: true)
!552 = !DIEnumerator(name: "ICON_MOD_BEVEL", value: 464, isUnsigned: true)
!553 = !DIEnumerator(name: "ICON_MOD_SMOOTH", value: 465, isUnsigned: true)
!554 = !DIEnumerator(name: "ICON_MOD_SIMPLEDEFORM", value: 466, isUnsigned: true)
!555 = !DIEnumerator(name: "ICON_MOD_MASK", value: 467, isUnsigned: true)
!556 = !DIEnumerator(name: "ICON_MOD_CLOTH", value: 468, isUnsigned: true)
!557 = !DIEnumerator(name: "ICON_MOD_EXPLODE", value: 469, isUnsigned: true)
!558 = !DIEnumerator(name: "ICON_MOD_FLUIDSIM", value: 470, isUnsigned: true)
!559 = !DIEnumerator(name: "ICON_MOD_MULTIRES", value: 471, isUnsigned: true)
!560 = !DIEnumerator(name: "ICON_MOD_SMOKE", value: 472, isUnsigned: true)
!561 = !DIEnumerator(name: "ICON_MOD_SOLIDIFY", value: 473, isUnsigned: true)
!562 = !DIEnumerator(name: "ICON_MOD_SCREW", value: 474, isUnsigned: true)
!563 = !DIEnumerator(name: "ICON_MOD_VERTEX_WEIGHT", value: 475, isUnsigned: true)
!564 = !DIEnumerator(name: "ICON_MOD_DYNAMICPAINT", value: 476, isUnsigned: true)
!565 = !DIEnumerator(name: "ICON_MOD_REMESH", value: 477, isUnsigned: true)
!566 = !DIEnumerator(name: "ICON_MOD_OCEAN", value: 478, isUnsigned: true)
!567 = !DIEnumerator(name: "ICON_MOD_WARP", value: 479, isUnsigned: true)
!568 = !DIEnumerator(name: "ICON_MOD_SKIN", value: 480, isUnsigned: true)
!569 = !DIEnumerator(name: "ICON_MOD_TRIANGULATE", value: 481, isUnsigned: true)
!570 = !DIEnumerator(name: "ICON_MOD_WIREFRAME", value: 482, isUnsigned: true)
!571 = !DIEnumerator(name: "ICON_BLANK167", value: 483, isUnsigned: true)
!572 = !DIEnumerator(name: "ICON_BLANK168", value: 484, isUnsigned: true)
!573 = !DIEnumerator(name: "ICON_BLANK169", value: 485, isUnsigned: true)
!574 = !DIEnumerator(name: "ICON_BLANK170", value: 486, isUnsigned: true)
!575 = !DIEnumerator(name: "ICON_BLANK171", value: 487, isUnsigned: true)
!576 = !DIEnumerator(name: "ICON_BLANK172", value: 488, isUnsigned: true)
!577 = !DIEnumerator(name: "ICON_BLANK173", value: 489, isUnsigned: true)
!578 = !DIEnumerator(name: "ICON_BLANK174", value: 490, isUnsigned: true)
!579 = !DIEnumerator(name: "ICON_BLANK175", value: 491, isUnsigned: true)
!580 = !DIEnumerator(name: "ICON_BLANK176", value: 492, isUnsigned: true)
!581 = !DIEnumerator(name: "ICON_BLANK177", value: 493, isUnsigned: true)
!582 = !DIEnumerator(name: "ICON_REC", value: 494, isUnsigned: true)
!583 = !DIEnumerator(name: "ICON_PLAY", value: 495, isUnsigned: true)
!584 = !DIEnumerator(name: "ICON_FF", value: 496, isUnsigned: true)
!585 = !DIEnumerator(name: "ICON_REW", value: 497, isUnsigned: true)
!586 = !DIEnumerator(name: "ICON_PAUSE", value: 498, isUnsigned: true)
!587 = !DIEnumerator(name: "ICON_PREV_KEYFRAME", value: 499, isUnsigned: true)
!588 = !DIEnumerator(name: "ICON_NEXT_KEYFRAME", value: 500, isUnsigned: true)
!589 = !DIEnumerator(name: "ICON_PLAY_AUDIO", value: 501, isUnsigned: true)
!590 = !DIEnumerator(name: "ICON_PLAY_REVERSE", value: 502, isUnsigned: true)
!591 = !DIEnumerator(name: "ICON_PREVIEW_RANGE", value: 503, isUnsigned: true)
!592 = !DIEnumerator(name: "ICON_ACTION_TWEAK", value: 504, isUnsigned: true)
!593 = !DIEnumerator(name: "ICON_PMARKER_ACT", value: 505, isUnsigned: true)
!594 = !DIEnumerator(name: "ICON_PMARKER_SEL", value: 506, isUnsigned: true)
!595 = !DIEnumerator(name: "ICON_PMARKER", value: 507, isUnsigned: true)
!596 = !DIEnumerator(name: "ICON_MARKER_HLT", value: 508, isUnsigned: true)
!597 = !DIEnumerator(name: "ICON_MARKER", value: 509, isUnsigned: true)
!598 = !DIEnumerator(name: "ICON_SPACE2", value: 510, isUnsigned: true)
!599 = !DIEnumerator(name: "ICON_SPACE3", value: 511, isUnsigned: true)
!600 = !DIEnumerator(name: "ICON_KEYINGSET", value: 512, isUnsigned: true)
!601 = !DIEnumerator(name: "ICON_KEY_DEHLT", value: 513, isUnsigned: true)
!602 = !DIEnumerator(name: "ICON_KEY_HLT", value: 514, isUnsigned: true)
!603 = !DIEnumerator(name: "ICON_MUTE_IPO_OFF", value: 515, isUnsigned: true)
!604 = !DIEnumerator(name: "ICON_MUTE_IPO_ON", value: 516, isUnsigned: true)
!605 = !DIEnumerator(name: "ICON_VISIBLE_IPO_OFF", value: 517, isUnsigned: true)
!606 = !DIEnumerator(name: "ICON_VISIBLE_IPO_ON", value: 518, isUnsigned: true)
!607 = !DIEnumerator(name: "ICON_DRIVER", value: 519, isUnsigned: true)
!608 = !DIEnumerator(name: "ICON_SOLO_OFF", value: 520, isUnsigned: true)
!609 = !DIEnumerator(name: "ICON_SOLO_ON", value: 521, isUnsigned: true)
!610 = !DIEnumerator(name: "ICON_FRAME_PREV", value: 522, isUnsigned: true)
!611 = !DIEnumerator(name: "ICON_FRAME_NEXT", value: 523, isUnsigned: true)
!612 = !DIEnumerator(name: "ICON_NLA_PUSHDOWN", value: 524, isUnsigned: true)
!613 = !DIEnumerator(name: "ICON_IPO_CONSTANT", value: 525, isUnsigned: true)
!614 = !DIEnumerator(name: "ICON_IPO_LINEAR", value: 526, isUnsigned: true)
!615 = !DIEnumerator(name: "ICON_IPO_BEZIER", value: 527, isUnsigned: true)
!616 = !DIEnumerator(name: "ICON_IPO_SINE", value: 528, isUnsigned: true)
!617 = !DIEnumerator(name: "ICON_IPO_QUAD", value: 529, isUnsigned: true)
!618 = !DIEnumerator(name: "ICON_IPO_CUBIC", value: 530, isUnsigned: true)
!619 = !DIEnumerator(name: "ICON_IPO_QUART", value: 531, isUnsigned: true)
!620 = !DIEnumerator(name: "ICON_IPO_QUINT", value: 532, isUnsigned: true)
!621 = !DIEnumerator(name: "ICON_IPO_EXPO", value: 533, isUnsigned: true)
!622 = !DIEnumerator(name: "ICON_IPO_CIRC", value: 534, isUnsigned: true)
!623 = !DIEnumerator(name: "ICON_IPO_BOUNCE", value: 535, isUnsigned: true)
!624 = !DIEnumerator(name: "ICON_IPO_ELASTIC", value: 536, isUnsigned: true)
!625 = !DIEnumerator(name: "ICON_IPO_BACK", value: 537, isUnsigned: true)
!626 = !DIEnumerator(name: "ICON_IPO_EASE_IN", value: 538, isUnsigned: true)
!627 = !DIEnumerator(name: "ICON_IPO_EASE_OUT", value: 539, isUnsigned: true)
!628 = !DIEnumerator(name: "ICON_IPO_EASE_IN_OUT", value: 540, isUnsigned: true)
!629 = !DIEnumerator(name: "ICON_BLANK203", value: 541, isUnsigned: true)
!630 = !DIEnumerator(name: "ICON_BLANK204", value: 542, isUnsigned: true)
!631 = !DIEnumerator(name: "ICON_BLANK205", value: 543, isUnsigned: true)
!632 = !DIEnumerator(name: "ICON_BLANK206", value: 544, isUnsigned: true)
!633 = !DIEnumerator(name: "ICON_BLANK207", value: 545, isUnsigned: true)
!634 = !DIEnumerator(name: "ICON_VERTEXSEL", value: 546, isUnsigned: true)
!635 = !DIEnumerator(name: "ICON_EDGESEL", value: 547, isUnsigned: true)
!636 = !DIEnumerator(name: "ICON_FACESEL", value: 548, isUnsigned: true)
!637 = !DIEnumerator(name: "ICON_LOOPSEL", value: 549, isUnsigned: true)
!638 = !DIEnumerator(name: "ICON_BLANK210", value: 550, isUnsigned: true)
!639 = !DIEnumerator(name: "ICON_ROTATE", value: 551, isUnsigned: true)
!640 = !DIEnumerator(name: "ICON_CURSOR", value: 552, isUnsigned: true)
!641 = !DIEnumerator(name: "ICON_ROTATECOLLECTION", value: 553, isUnsigned: true)
!642 = !DIEnumerator(name: "ICON_ROTATECENTER", value: 554, isUnsigned: true)
!643 = !DIEnumerator(name: "ICON_ROTACTIVE", value: 555, isUnsigned: true)
!644 = !DIEnumerator(name: "ICON_ALIGN", value: 556, isUnsigned: true)
!645 = !DIEnumerator(name: "ICON_BLANK211", value: 557, isUnsigned: true)
!646 = !DIEnumerator(name: "ICON_SMOOTHCURVE", value: 558, isUnsigned: true)
!647 = !DIEnumerator(name: "ICON_SPHERECURVE", value: 559, isUnsigned: true)
!648 = !DIEnumerator(name: "ICON_ROOTCURVE", value: 560, isUnsigned: true)
!649 = !DIEnumerator(name: "ICON_SHARPCURVE", value: 561, isUnsigned: true)
!650 = !DIEnumerator(name: "ICON_LINCURVE", value: 562, isUnsigned: true)
!651 = !DIEnumerator(name: "ICON_NOCURVE", value: 563, isUnsigned: true)
!652 = !DIEnumerator(name: "ICON_RNDCURVE", value: 564, isUnsigned: true)
!653 = !DIEnumerator(name: "ICON_PROP_OFF", value: 565, isUnsigned: true)
!654 = !DIEnumerator(name: "ICON_PROP_ON", value: 566, isUnsigned: true)
!655 = !DIEnumerator(name: "ICON_PROP_CON", value: 567, isUnsigned: true)
!656 = !DIEnumerator(name: "ICON_SCULPT_DYNTOPO", value: 568, isUnsigned: true)
!657 = !DIEnumerator(name: "ICON_PARTICLE_POINT", value: 569, isUnsigned: true)
!658 = !DIEnumerator(name: "ICON_PARTICLE_TIP", value: 570, isUnsigned: true)
!659 = !DIEnumerator(name: "ICON_PARTICLE_PATH", value: 571, isUnsigned: true)
!660 = !DIEnumerator(name: "ICON_MAN_TRANS", value: 572, isUnsigned: true)
!661 = !DIEnumerator(name: "ICON_MAN_ROT", value: 573, isUnsigned: true)
!662 = !DIEnumerator(name: "ICON_MAN_SCALE", value: 574, isUnsigned: true)
!663 = !DIEnumerator(name: "ICON_MANIPUL", value: 575, isUnsigned: true)
!664 = !DIEnumerator(name: "ICON_SNAP_OFF", value: 576, isUnsigned: true)
!665 = !DIEnumerator(name: "ICON_SNAP_ON", value: 577, isUnsigned: true)
!666 = !DIEnumerator(name: "ICON_SNAP_NORMAL", value: 578, isUnsigned: true)
!667 = !DIEnumerator(name: "ICON_SNAP_INCREMENT", value: 579, isUnsigned: true)
!668 = !DIEnumerator(name: "ICON_SNAP_VERTEX", value: 580, isUnsigned: true)
!669 = !DIEnumerator(name: "ICON_SNAP_EDGE", value: 581, isUnsigned: true)
!670 = !DIEnumerator(name: "ICON_SNAP_FACE", value: 582, isUnsigned: true)
!671 = !DIEnumerator(name: "ICON_SNAP_VOLUME", value: 583, isUnsigned: true)
!672 = !DIEnumerator(name: "ICON_BLANK220", value: 584, isUnsigned: true)
!673 = !DIEnumerator(name: "ICON_STICKY_UVS_LOC", value: 585, isUnsigned: true)
!674 = !DIEnumerator(name: "ICON_STICKY_UVS_DISABLE", value: 586, isUnsigned: true)
!675 = !DIEnumerator(name: "ICON_STICKY_UVS_VERT", value: 587, isUnsigned: true)
!676 = !DIEnumerator(name: "ICON_CLIPUV_DEHLT", value: 588, isUnsigned: true)
!677 = !DIEnumerator(name: "ICON_CLIPUV_HLT", value: 589, isUnsigned: true)
!678 = !DIEnumerator(name: "ICON_SNAP_PEEL_OBJECT", value: 590, isUnsigned: true)
!679 = !DIEnumerator(name: "ICON_GRID", value: 591, isUnsigned: true)
!680 = !DIEnumerator(name: "ICON_BLANK221", value: 592, isUnsigned: true)
!681 = !DIEnumerator(name: "ICON_BLANK222", value: 593, isUnsigned: true)
!682 = !DIEnumerator(name: "ICON_BLANK224", value: 594, isUnsigned: true)
!683 = !DIEnumerator(name: "ICON_BLANK225", value: 595, isUnsigned: true)
!684 = !DIEnumerator(name: "ICON_BLANK226", value: 596, isUnsigned: true)
!685 = !DIEnumerator(name: "ICON_BLANK226b", value: 597, isUnsigned: true)
!686 = !DIEnumerator(name: "ICON_PASTEDOWN", value: 598, isUnsigned: true)
!687 = !DIEnumerator(name: "ICON_COPYDOWN", value: 599, isUnsigned: true)
!688 = !DIEnumerator(name: "ICON_PASTEFLIPUP", value: 600, isUnsigned: true)
!689 = !DIEnumerator(name: "ICON_PASTEFLIPDOWN", value: 601, isUnsigned: true)
!690 = !DIEnumerator(name: "ICON_BLANK227", value: 602, isUnsigned: true)
!691 = !DIEnumerator(name: "ICON_BLANK228", value: 603, isUnsigned: true)
!692 = !DIEnumerator(name: "ICON_BLANK229", value: 604, isUnsigned: true)
!693 = !DIEnumerator(name: "ICON_BLANK230", value: 605, isUnsigned: true)
!694 = !DIEnumerator(name: "ICON_SNAP_SURFACE", value: 606, isUnsigned: true)
!695 = !DIEnumerator(name: "ICON_AUTOMERGE_ON", value: 607, isUnsigned: true)
!696 = !DIEnumerator(name: "ICON_AUTOMERGE_OFF", value: 608, isUnsigned: true)
!697 = !DIEnumerator(name: "ICON_RETOPO", value: 609, isUnsigned: true)
!698 = !DIEnumerator(name: "ICON_UV_VERTEXSEL", value: 610, isUnsigned: true)
!699 = !DIEnumerator(name: "ICON_UV_EDGESEL", value: 611, isUnsigned: true)
!700 = !DIEnumerator(name: "ICON_UV_FACESEL", value: 612, isUnsigned: true)
!701 = !DIEnumerator(name: "ICON_UV_ISLANDSEL", value: 613, isUnsigned: true)
!702 = !DIEnumerator(name: "ICON_UV_SYNC_SELECT", value: 614, isUnsigned: true)
!703 = !DIEnumerator(name: "ICON_BLANK240", value: 615, isUnsigned: true)
!704 = !DIEnumerator(name: "ICON_BLANK241", value: 616, isUnsigned: true)
!705 = !DIEnumerator(name: "ICON_BLANK242", value: 617, isUnsigned: true)
!706 = !DIEnumerator(name: "ICON_BLANK243", value: 618, isUnsigned: true)
!707 = !DIEnumerator(name: "ICON_BLANK244", value: 619, isUnsigned: true)
!708 = !DIEnumerator(name: "ICON_BLANK245", value: 620, isUnsigned: true)
!709 = !DIEnumerator(name: "ICON_BLANK246", value: 621, isUnsigned: true)
!710 = !DIEnumerator(name: "ICON_BLANK247", value: 622, isUnsigned: true)
!711 = !DIEnumerator(name: "ICON_BLANK247b", value: 623, isUnsigned: true)
!712 = !DIEnumerator(name: "ICON_BBOX", value: 624, isUnsigned: true)
!713 = !DIEnumerator(name: "ICON_WIRE", value: 625, isUnsigned: true)
!714 = !DIEnumerator(name: "ICON_SOLID", value: 626, isUnsigned: true)
!715 = !DIEnumerator(name: "ICON_SMOOTH", value: 627, isUnsigned: true)
!716 = !DIEnumerator(name: "ICON_POTATO", value: 628, isUnsigned: true)
!717 = !DIEnumerator(name: "ICON_BLANK248", value: 629, isUnsigned: true)
!718 = !DIEnumerator(name: "ICON_ORTHO", value: 630, isUnsigned: true)
!719 = !DIEnumerator(name: "ICON_BLANK249", value: 631, isUnsigned: true)
!720 = !DIEnumerator(name: "ICON_BLANK250", value: 632, isUnsigned: true)
!721 = !DIEnumerator(name: "ICON_LOCKVIEW_OFF", value: 633, isUnsigned: true)
!722 = !DIEnumerator(name: "ICON_LOCKVIEW_ON", value: 634, isUnsigned: true)
!723 = !DIEnumerator(name: "ICON_BLANK251", value: 635, isUnsigned: true)
!724 = !DIEnumerator(name: "ICON_AXIS_SIDE", value: 636, isUnsigned: true)
!725 = !DIEnumerator(name: "ICON_AXIS_FRONT", value: 637, isUnsigned: true)
!726 = !DIEnumerator(name: "ICON_AXIS_TOP", value: 638, isUnsigned: true)
!727 = !DIEnumerator(name: "ICON_NDOF_DOM", value: 639, isUnsigned: true)
!728 = !DIEnumerator(name: "ICON_NDOF_TURN", value: 640, isUnsigned: true)
!729 = !DIEnumerator(name: "ICON_NDOF_FLY", value: 641, isUnsigned: true)
!730 = !DIEnumerator(name: "ICON_NDOF_TRANS", value: 642, isUnsigned: true)
!731 = !DIEnumerator(name: "ICON_LAYER_USED", value: 643, isUnsigned: true)
!732 = !DIEnumerator(name: "ICON_LAYER_ACTIVE", value: 644, isUnsigned: true)
!733 = !DIEnumerator(name: "ICON_BLANK254", value: 645, isUnsigned: true)
!734 = !DIEnumerator(name: "ICON_BLANK255", value: 646, isUnsigned: true)
!735 = !DIEnumerator(name: "ICON_BLANK256", value: 647, isUnsigned: true)
!736 = !DIEnumerator(name: "ICON_BLANK257", value: 648, isUnsigned: true)
!737 = !DIEnumerator(name: "ICON_BLANK257b", value: 649, isUnsigned: true)
!738 = !DIEnumerator(name: "ICON_BLANK258", value: 650, isUnsigned: true)
!739 = !DIEnumerator(name: "ICON_BLANK259", value: 651, isUnsigned: true)
!740 = !DIEnumerator(name: "ICON_BLANK260", value: 652, isUnsigned: true)
!741 = !DIEnumerator(name: "ICON_BLANK261", value: 653, isUnsigned: true)
!742 = !DIEnumerator(name: "ICON_BLANK262", value: 654, isUnsigned: true)
!743 = !DIEnumerator(name: "ICON_BLANK263", value: 655, isUnsigned: true)
!744 = !DIEnumerator(name: "ICON_BLANK264", value: 656, isUnsigned: true)
!745 = !DIEnumerator(name: "ICON_BLANK265", value: 657, isUnsigned: true)
!746 = !DIEnumerator(name: "ICON_BLANK266", value: 658, isUnsigned: true)
!747 = !DIEnumerator(name: "ICON_BLANK267", value: 659, isUnsigned: true)
!748 = !DIEnumerator(name: "ICON_BLANK268", value: 660, isUnsigned: true)
!749 = !DIEnumerator(name: "ICON_BLANK269", value: 661, isUnsigned: true)
!750 = !DIEnumerator(name: "ICON_BLANK270", value: 662, isUnsigned: true)
!751 = !DIEnumerator(name: "ICON_BLANK271", value: 663, isUnsigned: true)
!752 = !DIEnumerator(name: "ICON_BLANK272", value: 664, isUnsigned: true)
!753 = !DIEnumerator(name: "ICON_BLANK273", value: 665, isUnsigned: true)
!754 = !DIEnumerator(name: "ICON_BLANK274", value: 666, isUnsigned: true)
!755 = !DIEnumerator(name: "ICON_BLANK275", value: 667, isUnsigned: true)
!756 = !DIEnumerator(name: "ICON_BLANK276", value: 668, isUnsigned: true)
!757 = !DIEnumerator(name: "ICON_BLANK277", value: 669, isUnsigned: true)
!758 = !DIEnumerator(name: "ICON_BLANK278", value: 670, isUnsigned: true)
!759 = !DIEnumerator(name: "ICON_BLANK279", value: 671, isUnsigned: true)
!760 = !DIEnumerator(name: "ICON_BLANK280", value: 672, isUnsigned: true)
!761 = !DIEnumerator(name: "ICON_BLANK281", value: 673, isUnsigned: true)
!762 = !DIEnumerator(name: "ICON_BLANK282", value: 674, isUnsigned: true)
!763 = !DIEnumerator(name: "ICON_BLANK282b", value: 675, isUnsigned: true)
!764 = !DIEnumerator(name: "ICON_SORTALPHA", value: 676, isUnsigned: true)
!765 = !DIEnumerator(name: "ICON_SORTBYEXT", value: 677, isUnsigned: true)
!766 = !DIEnumerator(name: "ICON_SORTTIME", value: 678, isUnsigned: true)
!767 = !DIEnumerator(name: "ICON_SORTSIZE", value: 679, isUnsigned: true)
!768 = !DIEnumerator(name: "ICON_LONGDISPLAY", value: 680, isUnsigned: true)
!769 = !DIEnumerator(name: "ICON_SHORTDISPLAY", value: 681, isUnsigned: true)
!770 = !DIEnumerator(name: "ICON_GHOST", value: 682, isUnsigned: true)
!771 = !DIEnumerator(name: "ICON_IMGDISPLAY", value: 683, isUnsigned: true)
!772 = !DIEnumerator(name: "ICON_SAVE_AS", value: 684, isUnsigned: true)
!773 = !DIEnumerator(name: "ICON_SAVE_COPY", value: 685, isUnsigned: true)
!774 = !DIEnumerator(name: "ICON_BOOKMARKS", value: 686, isUnsigned: true)
!775 = !DIEnumerator(name: "ICON_FONTPREVIEW", value: 687, isUnsigned: true)
!776 = !DIEnumerator(name: "ICON_FILTER", value: 688, isUnsigned: true)
!777 = !DIEnumerator(name: "ICON_NEWFOLDER", value: 689, isUnsigned: true)
!778 = !DIEnumerator(name: "ICON_OPEN_RECENT", value: 690, isUnsigned: true)
!779 = !DIEnumerator(name: "ICON_FILE_PARENT", value: 691, isUnsigned: true)
!780 = !DIEnumerator(name: "ICON_FILE_REFRESH", value: 692, isUnsigned: true)
!781 = !DIEnumerator(name: "ICON_FILE_FOLDER", value: 693, isUnsigned: true)
!782 = !DIEnumerator(name: "ICON_FILE_BLANK", value: 694, isUnsigned: true)
!783 = !DIEnumerator(name: "ICON_FILE_BLEND", value: 695, isUnsigned: true)
!784 = !DIEnumerator(name: "ICON_FILE_IMAGE", value: 696, isUnsigned: true)
!785 = !DIEnumerator(name: "ICON_FILE_MOVIE", value: 697, isUnsigned: true)
!786 = !DIEnumerator(name: "ICON_FILE_SCRIPT", value: 698, isUnsigned: true)
!787 = !DIEnumerator(name: "ICON_FILE_SOUND", value: 699, isUnsigned: true)
!788 = !DIEnumerator(name: "ICON_FILE_FONT", value: 700, isUnsigned: true)
!789 = !DIEnumerator(name: "ICON_FILE_TEXT", value: 701, isUnsigned: true)
!790 = !DIEnumerator(name: "ICON_RECOVER_AUTO", value: 702, isUnsigned: true)
!791 = !DIEnumerator(name: "ICON_SAVE_PREFS", value: 703, isUnsigned: true)
!792 = !DIEnumerator(name: "ICON_LINK_BLEND", value: 704, isUnsigned: true)
!793 = !DIEnumerator(name: "ICON_APPEND_BLEND", value: 705, isUnsigned: true)
!794 = !DIEnumerator(name: "ICON_IMPORT", value: 706, isUnsigned: true)
!795 = !DIEnumerator(name: "ICON_EXPORT", value: 707, isUnsigned: true)
!796 = !DIEnumerator(name: "ICON_EXTERNAL_DATA", value: 708, isUnsigned: true)
!797 = !DIEnumerator(name: "ICON_LOAD_FACTORY", value: 709, isUnsigned: true)
!798 = !DIEnumerator(name: "ICON_BLANK300", value: 710, isUnsigned: true)
!799 = !DIEnumerator(name: "ICON_BLANK301", value: 711, isUnsigned: true)
!800 = !DIEnumerator(name: "ICON_BLANK302", value: 712, isUnsigned: true)
!801 = !DIEnumerator(name: "ICON_BLANK303", value: 713, isUnsigned: true)
!802 = !DIEnumerator(name: "ICON_BLANK304", value: 714, isUnsigned: true)
!803 = !DIEnumerator(name: "ICON_LOOP_BACK", value: 715, isUnsigned: true)
!804 = !DIEnumerator(name: "ICON_LOOP_FORWARDS", value: 716, isUnsigned: true)
!805 = !DIEnumerator(name: "ICON_BACK", value: 717, isUnsigned: true)
!806 = !DIEnumerator(name: "ICON_FORWARD", value: 718, isUnsigned: true)
!807 = !DIEnumerator(name: "ICON_BLANK309", value: 719, isUnsigned: true)
!808 = !DIEnumerator(name: "ICON_BLANK310", value: 720, isUnsigned: true)
!809 = !DIEnumerator(name: "ICON_BLANK311", value: 721, isUnsigned: true)
!810 = !DIEnumerator(name: "ICON_BLANK312", value: 722, isUnsigned: true)
!811 = !DIEnumerator(name: "ICON_BLANK313", value: 723, isUnsigned: true)
!812 = !DIEnumerator(name: "ICON_BLANK314", value: 724, isUnsigned: true)
!813 = !DIEnumerator(name: "ICON_BLANK315", value: 725, isUnsigned: true)
!814 = !DIEnumerator(name: "ICON_FILE_BACKUP", value: 726, isUnsigned: true)
!815 = !DIEnumerator(name: "ICON_DISK_DRIVE", value: 727, isUnsigned: true)
!816 = !DIEnumerator(name: "ICON_MATPLANE", value: 728, isUnsigned: true)
!817 = !DIEnumerator(name: "ICON_MATSPHERE", value: 729, isUnsigned: true)
!818 = !DIEnumerator(name: "ICON_MATCUBE", value: 730, isUnsigned: true)
!819 = !DIEnumerator(name: "ICON_MONKEY", value: 731, isUnsigned: true)
!820 = !DIEnumerator(name: "ICON_HAIR", value: 732, isUnsigned: true)
!821 = !DIEnumerator(name: "ICON_ALIASED", value: 733, isUnsigned: true)
!822 = !DIEnumerator(name: "ICON_ANTIALIASED", value: 734, isUnsigned: true)
!823 = !DIEnumerator(name: "ICON_MAT_SPHERE_SKY", value: 735, isUnsigned: true)
!824 = !DIEnumerator(name: "ICON_BLANK319", value: 736, isUnsigned: true)
!825 = !DIEnumerator(name: "ICON_BLANK320", value: 737, isUnsigned: true)
!826 = !DIEnumerator(name: "ICON_BLANK321", value: 738, isUnsigned: true)
!827 = !DIEnumerator(name: "ICON_BLANK322", value: 739, isUnsigned: true)
!828 = !DIEnumerator(name: "ICON_WORDWRAP_OFF", value: 740, isUnsigned: true)
!829 = !DIEnumerator(name: "ICON_WORDWRAP_ON", value: 741, isUnsigned: true)
!830 = !DIEnumerator(name: "ICON_SYNTAX_OFF", value: 742, isUnsigned: true)
!831 = !DIEnumerator(name: "ICON_SYNTAX_ON", value: 743, isUnsigned: true)
!832 = !DIEnumerator(name: "ICON_LINENUMBERS_OFF", value: 744, isUnsigned: true)
!833 = !DIEnumerator(name: "ICON_LINENUMBERS_ON", value: 745, isUnsigned: true)
!834 = !DIEnumerator(name: "ICON_SCRIPTPLUGINS", value: 746, isUnsigned: true)
!835 = !DIEnumerator(name: "ICON_BLANK323", value: 747, isUnsigned: true)
!836 = !DIEnumerator(name: "ICON_BLANK324", value: 748, isUnsigned: true)
!837 = !DIEnumerator(name: "ICON_BLANK325", value: 749, isUnsigned: true)
!838 = !DIEnumerator(name: "ICON_BLANK326", value: 750, isUnsigned: true)
!839 = !DIEnumerator(name: "ICON_BLANK327", value: 751, isUnsigned: true)
!840 = !DIEnumerator(name: "ICON_BLANK328", value: 752, isUnsigned: true)
!841 = !DIEnumerator(name: "ICON_BLANK328b", value: 753, isUnsigned: true)
!842 = !DIEnumerator(name: "ICON_SEQ_SEQUENCER", value: 754, isUnsigned: true)
!843 = !DIEnumerator(name: "ICON_SEQ_PREVIEW", value: 755, isUnsigned: true)
!844 = !DIEnumerator(name: "ICON_SEQ_LUMA_WAVEFORM", value: 756, isUnsigned: true)
!845 = !DIEnumerator(name: "ICON_SEQ_CHROMA_SCOPE", value: 757, isUnsigned: true)
!846 = !DIEnumerator(name: "ICON_SEQ_HISTOGRAM", value: 758, isUnsigned: true)
!847 = !DIEnumerator(name: "ICON_SEQ_SPLITVIEW", value: 759, isUnsigned: true)
!848 = !DIEnumerator(name: "ICON_BLANK331", value: 760, isUnsigned: true)
!849 = !DIEnumerator(name: "ICON_BLANK332", value: 761, isUnsigned: true)
!850 = !DIEnumerator(name: "ICON_BLANK333", value: 762, isUnsigned: true)
!851 = !DIEnumerator(name: "ICON_IMAGE_RGB", value: 763, isUnsigned: true)
!852 = !DIEnumerator(name: "ICON_IMAGE_RGB_ALPHA", value: 764, isUnsigned: true)
!853 = !DIEnumerator(name: "ICON_IMAGE_ALPHA", value: 765, isUnsigned: true)
!854 = !DIEnumerator(name: "ICON_IMAGE_ZDEPTH", value: 766, isUnsigned: true)
!855 = !DIEnumerator(name: "ICON_IMAGEFILE", value: 767, isUnsigned: true)
!856 = !DIEnumerator(name: "ICON_BLANK336", value: 768, isUnsigned: true)
!857 = !DIEnumerator(name: "ICON_BLANK337", value: 769, isUnsigned: true)
!858 = !DIEnumerator(name: "ICON_BLANK338", value: 770, isUnsigned: true)
!859 = !DIEnumerator(name: "ICON_BLANK339", value: 771, isUnsigned: true)
!860 = !DIEnumerator(name: "ICON_BLANK340", value: 772, isUnsigned: true)
!861 = !DIEnumerator(name: "ICON_BLANK341", value: 773, isUnsigned: true)
!862 = !DIEnumerator(name: "ICON_BLANK342", value: 774, isUnsigned: true)
!863 = !DIEnumerator(name: "ICON_BLANK343", value: 775, isUnsigned: true)
!864 = !DIEnumerator(name: "ICON_BLANK344", value: 776, isUnsigned: true)
!865 = !DIEnumerator(name: "ICON_BLANK345", value: 777, isUnsigned: true)
!866 = !DIEnumerator(name: "ICON_BLANK346", value: 778, isUnsigned: true)
!867 = !DIEnumerator(name: "ICON_BLANK346b", value: 779, isUnsigned: true)
!868 = !DIEnumerator(name: "ICON_BRUSH_ADD", value: 780, isUnsigned: true)
!869 = !DIEnumerator(name: "ICON_BRUSH_BLOB", value: 781, isUnsigned: true)
!870 = !DIEnumerator(name: "ICON_BRUSH_BLUR", value: 782, isUnsigned: true)
!871 = !DIEnumerator(name: "ICON_BRUSH_CLAY", value: 783, isUnsigned: true)
!872 = !DIEnumerator(name: "ICON_BRUSH_CLAY_STRIPS", value: 784, isUnsigned: true)
!873 = !DIEnumerator(name: "ICON_BRUSH_CLONE", value: 785, isUnsigned: true)
!874 = !DIEnumerator(name: "ICON_BRUSH_CREASE", value: 786, isUnsigned: true)
!875 = !DIEnumerator(name: "ICON_BRUSH_DARKEN", value: 787, isUnsigned: true)
!876 = !DIEnumerator(name: "ICON_BRUSH_FILL", value: 788, isUnsigned: true)
!877 = !DIEnumerator(name: "ICON_BRUSH_FLATTEN", value: 789, isUnsigned: true)
!878 = !DIEnumerator(name: "ICON_BRUSH_GRAB", value: 790, isUnsigned: true)
!879 = !DIEnumerator(name: "ICON_BRUSH_INFLATE", value: 791, isUnsigned: true)
!880 = !DIEnumerator(name: "ICON_BRUSH_LAYER", value: 792, isUnsigned: true)
!881 = !DIEnumerator(name: "ICON_BRUSH_LIGHTEN", value: 793, isUnsigned: true)
!882 = !DIEnumerator(name: "ICON_BRUSH_MASK", value: 794, isUnsigned: true)
!883 = !DIEnumerator(name: "ICON_BRUSH_MIX", value: 795, isUnsigned: true)
!884 = !DIEnumerator(name: "ICON_BRUSH_MULTIPLY", value: 796, isUnsigned: true)
!885 = !DIEnumerator(name: "ICON_BRUSH_NUDGE", value: 797, isUnsigned: true)
!886 = !DIEnumerator(name: "ICON_BRUSH_PINCH", value: 798, isUnsigned: true)
!887 = !DIEnumerator(name: "ICON_BRUSH_SCRAPE", value: 799, isUnsigned: true)
!888 = !DIEnumerator(name: "ICON_BRUSH_SCULPT_DRAW", value: 800, isUnsigned: true)
!889 = !DIEnumerator(name: "ICON_BRUSH_SMEAR", value: 801, isUnsigned: true)
!890 = !DIEnumerator(name: "ICON_BRUSH_SMOOTH", value: 802, isUnsigned: true)
!891 = !DIEnumerator(name: "ICON_BRUSH_SNAKE_HOOK", value: 803, isUnsigned: true)
!892 = !DIEnumerator(name: "ICON_BRUSH_SOFTEN", value: 804, isUnsigned: true)
!893 = !DIEnumerator(name: "ICON_BRUSH_SUBTRACT", value: 805, isUnsigned: true)
!894 = !DIEnumerator(name: "ICON_BRUSH_TEXDRAW", value: 806, isUnsigned: true)
!895 = !DIEnumerator(name: "ICON_BRUSH_TEXFILL", value: 807, isUnsigned: true)
!896 = !DIEnumerator(name: "ICON_BRUSH_TEXMASK", value: 808, isUnsigned: true)
!897 = !DIEnumerator(name: "ICON_BRUSH_THUMB", value: 809, isUnsigned: true)
!898 = !DIEnumerator(name: "ICON_BRUSH_ROTATE", value: 810, isUnsigned: true)
!899 = !DIEnumerator(name: "ICON_BRUSH_VERTEXDRAW", value: 811, isUnsigned: true)
!900 = !DIEnumerator(name: "ICON_MATCAP_01", value: 812, isUnsigned: true)
!901 = !DIEnumerator(name: "ICON_MATCAP_02", value: 813, isUnsigned: true)
!902 = !DIEnumerator(name: "ICON_MATCAP_03", value: 814, isUnsigned: true)
!903 = !DIEnumerator(name: "ICON_MATCAP_04", value: 815, isUnsigned: true)
!904 = !DIEnumerator(name: "ICON_MATCAP_05", value: 816, isUnsigned: true)
!905 = !DIEnumerator(name: "ICON_MATCAP_06", value: 817, isUnsigned: true)
!906 = !DIEnumerator(name: "ICON_MATCAP_07", value: 818, isUnsigned: true)
!907 = !DIEnumerator(name: "ICON_MATCAP_08", value: 819, isUnsigned: true)
!908 = !DIEnumerator(name: "ICON_MATCAP_09", value: 820, isUnsigned: true)
!909 = !DIEnumerator(name: "ICON_MATCAP_10", value: 821, isUnsigned: true)
!910 = !DIEnumerator(name: "ICON_MATCAP_11", value: 822, isUnsigned: true)
!911 = !DIEnumerator(name: "ICON_MATCAP_12", value: 823, isUnsigned: true)
!912 = !DIEnumerator(name: "ICON_MATCAP_13", value: 824, isUnsigned: true)
!913 = !DIEnumerator(name: "ICON_MATCAP_14", value: 825, isUnsigned: true)
!914 = !DIEnumerator(name: "ICON_MATCAP_15", value: 826, isUnsigned: true)
!915 = !DIEnumerator(name: "ICON_MATCAP_16", value: 827, isUnsigned: true)
!916 = !DIEnumerator(name: "ICON_MATCAP_17", value: 828, isUnsigned: true)
!917 = !DIEnumerator(name: "ICON_MATCAP_18", value: 829, isUnsigned: true)
!918 = !DIEnumerator(name: "ICON_MATCAP_19", value: 830, isUnsigned: true)
!919 = !DIEnumerator(name: "ICON_MATCAP_20", value: 831, isUnsigned: true)
!920 = !DIEnumerator(name: "ICON_MATCAP_21", value: 832, isUnsigned: true)
!921 = !DIEnumerator(name: "ICON_MATCAP_22", value: 833, isUnsigned: true)
!922 = !DIEnumerator(name: "ICON_MATCAP_23", value: 834, isUnsigned: true)
!923 = !DIEnumerator(name: "ICON_MATCAP_24", value: 835, isUnsigned: true)
!924 = !DIEnumerator(name: "VICO_VIEW3D_VEC", value: 836, isUnsigned: true)
!925 = !DIEnumerator(name: "VICO_EDIT_VEC", value: 837, isUnsigned: true)
!926 = !DIEnumerator(name: "VICO_EDITMODE_VEC_DEHLT", value: 838, isUnsigned: true)
!927 = !DIEnumerator(name: "VICO_EDITMODE_VEC_HLT", value: 839, isUnsigned: true)
!928 = !DIEnumerator(name: "VICO_DISCLOSURE_TRI_RIGHT_VEC", value: 840, isUnsigned: true)
!929 = !DIEnumerator(name: "VICO_DISCLOSURE_TRI_DOWN_VEC", value: 841, isUnsigned: true)
!930 = !DIEnumerator(name: "VICO_MOVE_UP_VEC", value: 842, isUnsigned: true)
!931 = !DIEnumerator(name: "VICO_MOVE_DOWN_VEC", value: 843, isUnsigned: true)
!932 = !DIEnumerator(name: "VICO_X_VEC", value: 844, isUnsigned: true)
!933 = !DIEnumerator(name: "VICO_SMALL_TRI_RIGHT_VEC", value: 845, isUnsigned: true)
!934 = !DIEnumerator(name: "BIFICONID_LAST", value: 846, isUnsigned: true)
!935 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !936, line: 141, baseType: !7, size: 32, elements: !937)
!936 = !DIFile(filename: "blender/source/blender/windowmanager/WM_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!937 = !{!938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949}
!938 = !DIEnumerator(name: "WM_OP_INVOKE_DEFAULT", value: 0, isUnsigned: true)
!939 = !DIEnumerator(name: "WM_OP_INVOKE_REGION_WIN", value: 1, isUnsigned: true)
!940 = !DIEnumerator(name: "WM_OP_INVOKE_REGION_CHANNELS", value: 2, isUnsigned: true)
!941 = !DIEnumerator(name: "WM_OP_INVOKE_REGION_PREVIEW", value: 3, isUnsigned: true)
!942 = !DIEnumerator(name: "WM_OP_INVOKE_AREA", value: 4, isUnsigned: true)
!943 = !DIEnumerator(name: "WM_OP_INVOKE_SCREEN", value: 5, isUnsigned: true)
!944 = !DIEnumerator(name: "WM_OP_EXEC_DEFAULT", value: 6, isUnsigned: true)
!945 = !DIEnumerator(name: "WM_OP_EXEC_REGION_WIN", value: 7, isUnsigned: true)
!946 = !DIEnumerator(name: "WM_OP_EXEC_REGION_CHANNELS", value: 8, isUnsigned: true)
!947 = !DIEnumerator(name: "WM_OP_EXEC_REGION_PREVIEW", value: 9, isUnsigned: true)
!948 = !DIEnumerator(name: "WM_OP_EXEC_AREA", value: 10, isUnsigned: true)
!949 = !DIEnumerator(name: "WM_OP_EXEC_SCREEN", value: 11, isUnsigned: true)
!950 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !41, line: 351, baseType: !7, size: 32, elements: !951)
!951 = !{!952, !953, !954, !955, !956, !957}
!952 = !DIEnumerator(name: "OPERATOR_RUNNING_MODAL", value: 1, isUnsigned: true)
!953 = !DIEnumerator(name: "OPERATOR_CANCELLED", value: 2, isUnsigned: true)
!954 = !DIEnumerator(name: "OPERATOR_FINISHED", value: 4, isUnsigned: true)
!955 = !DIEnumerator(name: "OPERATOR_PASS_THROUGH", value: 8, isUnsigned: true)
!956 = !DIEnumerator(name: "OPERATOR_HANDLED", value: 16, isUnsigned: true)
!957 = !DIEnumerator(name: "OPERATOR_INTERFACE", value: 32, isUnsigned: true)
!958 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eFileSel_Action", file: !959, line: 660, baseType: !7, size: 32, elements: !960)
!959 = !DIFile(filename: "blender/source/blender/makesdna/DNA_space_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!960 = !{!961, !962}
!961 = !DIEnumerator(name: "FILE_OPENFILE", value: 0, isUnsigned: true)
!962 = !DIEnumerator(name: "FILE_SAVE", value: 1, isUnsigned: true)
!963 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eFileSel_File_Types", file: !959, line: 682, baseType: !7, size: 32, elements: !964)
!964 = !{!965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978}
!965 = !DIEnumerator(name: "BLENDERFILE", value: 4, isUnsigned: true)
!966 = !DIEnumerator(name: "BLENDERFILE_BACKUP", value: 8, isUnsigned: true)
!967 = !DIEnumerator(name: "IMAGEFILE", value: 16, isUnsigned: true)
!968 = !DIEnumerator(name: "MOVIEFILE", value: 32, isUnsigned: true)
!969 = !DIEnumerator(name: "PYSCRIPTFILE", value: 64, isUnsigned: true)
!970 = !DIEnumerator(name: "FTFONTFILE", value: 128, isUnsigned: true)
!971 = !DIEnumerator(name: "SOUNDFILE", value: 256, isUnsigned: true)
!972 = !DIEnumerator(name: "TEXTFILE", value: 512, isUnsigned: true)
!973 = !DIEnumerator(name: "MOVIEFILE_ICON", value: 1024, isUnsigned: true)
!974 = !DIEnumerator(name: "FOLDERFILE", value: 2048, isUnsigned: true)
!975 = !DIEnumerator(name: "BTXFILE", value: 4096, isUnsigned: true)
!976 = !DIEnumerator(name: "COLLADAFILE", value: 8192, isUnsigned: true)
!977 = !DIEnumerator(name: "OPERATORFILE", value: 16384, isUnsigned: true)
!978 = !DIEnumerator(name: "APPLICATIONBUNDLE", value: 32768, isUnsigned: true)
!979 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !980, line: 384, baseType: !7, size: 32, elements: !981)
!980 = !DIFile(filename: "blender/source/blender/windowmanager/WM_api.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!981 = !{!982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996}
!982 = !DIEnumerator(name: "WM_JOB_TYPE_ANY", value: 0, isUnsigned: true)
!983 = !DIEnumerator(name: "WM_JOB_TYPE_COMPOSITE", value: 1, isUnsigned: true)
!984 = !DIEnumerator(name: "WM_JOB_TYPE_RENDER", value: 2, isUnsigned: true)
!985 = !DIEnumerator(name: "WM_JOB_TYPE_RENDER_PREVIEW", value: 3, isUnsigned: true)
!986 = !DIEnumerator(name: "WM_JOB_TYPE_SCREENCAST", value: 4, isUnsigned: true)
!987 = !DIEnumerator(name: "WM_JOB_TYPE_OBJECT_SIM_OCEAN", value: 5, isUnsigned: true)
!988 = !DIEnumerator(name: "WM_JOB_TYPE_OBJECT_SIM_FLUID", value: 6, isUnsigned: true)
!989 = !DIEnumerator(name: "WM_JOB_TYPE_OBJECT_BAKE_TEXTURE", value: 7, isUnsigned: true)
!990 = !DIEnumerator(name: "WM_JOB_TYPE_OBJECT_BAKE", value: 8, isUnsigned: true)
!991 = !DIEnumerator(name: "WM_JOB_TYPE_FILESEL_THUMBNAIL", value: 9, isUnsigned: true)
!992 = !DIEnumerator(name: "WM_JOB_TYPE_CLIP_BUILD_PROXY", value: 10, isUnsigned: true)
!993 = !DIEnumerator(name: "WM_JOB_TYPE_CLIP_TRACK_MARKERS", value: 11, isUnsigned: true)
!994 = !DIEnumerator(name: "WM_JOB_TYPE_CLIP_SOLVE_CAMERA", value: 12, isUnsigned: true)
!995 = !DIEnumerator(name: "WM_JOB_TYPE_CLIP_PREFETCH", value: 13, isUnsigned: true)
!996 = !DIEnumerator(name: "WM_JOB_TYPE_SEQ_BUILD_PROXY", value: 14, isUnsigned: true)
!997 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ReportType", file: !41, line: 67, baseType: !7, size: 32, elements: !998)
!998 = !{!999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007}
!999 = !DIEnumerator(name: "RPT_DEBUG", value: 1, isUnsigned: true)
!1000 = !DIEnumerator(name: "RPT_INFO", value: 2, isUnsigned: true)
!1001 = !DIEnumerator(name: "RPT_OPERATOR", value: 4, isUnsigned: true)
!1002 = !DIEnumerator(name: "RPT_PROPERTY", value: 8, isUnsigned: true)
!1003 = !DIEnumerator(name: "RPT_WARNING", value: 16, isUnsigned: true)
!1004 = !DIEnumerator(name: "RPT_ERROR", value: 32, isUnsigned: true)
!1005 = !DIEnumerator(name: "RPT_ERROR_INVALID_INPUT", value: 64, isUnsigned: true)
!1006 = !DIEnumerator(name: "RPT_ERROR_INVALID_CONTEXT", value: 128, isUnsigned: true)
!1007 = !DIEnumerator(name: "RPT_ERROR_OUT_OF_MEMORY", value: 256, isUnsigned: true)
!1008 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1009, line: 54, baseType: !7, size: 32, elements: !1010)
!1009 = !DIFile(filename: "blender/source/blender/windowmanager/wm_event_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1010 = !{!1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1109, !1110, !1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208}
!1011 = !DIEnumerator(name: "EVENT_NONE", value: 0, isUnsigned: true)
!1012 = !DIEnumerator(name: "LEFTMOUSE", value: 1, isUnsigned: true)
!1013 = !DIEnumerator(name: "MIDDLEMOUSE", value: 2, isUnsigned: true)
!1014 = !DIEnumerator(name: "RIGHTMOUSE", value: 3, isUnsigned: true)
!1015 = !DIEnumerator(name: "MOUSEMOVE", value: 4, isUnsigned: true)
!1016 = !DIEnumerator(name: "ACTIONMOUSE", value: 5, isUnsigned: true)
!1017 = !DIEnumerator(name: "SELECTMOUSE", value: 6, isUnsigned: true)
!1018 = !DIEnumerator(name: "BUTTON4MOUSE", value: 7, isUnsigned: true)
!1019 = !DIEnumerator(name: "BUTTON5MOUSE", value: 8, isUnsigned: true)
!1020 = !DIEnumerator(name: "BUTTON6MOUSE", value: 18, isUnsigned: true)
!1021 = !DIEnumerator(name: "BUTTON7MOUSE", value: 19, isUnsigned: true)
!1022 = !DIEnumerator(name: "MOUSEPAN", value: 14, isUnsigned: true)
!1023 = !DIEnumerator(name: "MOUSEZOOM", value: 15, isUnsigned: true)
!1024 = !DIEnumerator(name: "MOUSEROTATE", value: 16, isUnsigned: true)
!1025 = !DIEnumerator(name: "WHEELUPMOUSE", value: 10, isUnsigned: true)
!1026 = !DIEnumerator(name: "WHEELDOWNMOUSE", value: 11, isUnsigned: true)
!1027 = !DIEnumerator(name: "WHEELINMOUSE", value: 12, isUnsigned: true)
!1028 = !DIEnumerator(name: "WHEELOUTMOUSE", value: 13, isUnsigned: true)
!1029 = !DIEnumerator(name: "INBETWEEN_MOUSEMOVE", value: 17, isUnsigned: true)
!1030 = !DIEnumerator(name: "AKEY", value: 97, isUnsigned: true)
!1031 = !DIEnumerator(name: "BKEY", value: 98, isUnsigned: true)
!1032 = !DIEnumerator(name: "CKEY", value: 99, isUnsigned: true)
!1033 = !DIEnumerator(name: "DKEY", value: 100, isUnsigned: true)
!1034 = !DIEnumerator(name: "EKEY", value: 101, isUnsigned: true)
!1035 = !DIEnumerator(name: "FKEY", value: 102, isUnsigned: true)
!1036 = !DIEnumerator(name: "GKEY", value: 103, isUnsigned: true)
!1037 = !DIEnumerator(name: "HKEY", value: 104, isUnsigned: true)
!1038 = !DIEnumerator(name: "IKEY", value: 105, isUnsigned: true)
!1039 = !DIEnumerator(name: "JKEY", value: 106, isUnsigned: true)
!1040 = !DIEnumerator(name: "KKEY", value: 107, isUnsigned: true)
!1041 = !DIEnumerator(name: "LKEY", value: 108, isUnsigned: true)
!1042 = !DIEnumerator(name: "MKEY", value: 109, isUnsigned: true)
!1043 = !DIEnumerator(name: "NKEY", value: 110, isUnsigned: true)
!1044 = !DIEnumerator(name: "OKEY", value: 111, isUnsigned: true)
!1045 = !DIEnumerator(name: "PKEY", value: 112, isUnsigned: true)
!1046 = !DIEnumerator(name: "QKEY", value: 113, isUnsigned: true)
!1047 = !DIEnumerator(name: "RKEY", value: 114, isUnsigned: true)
!1048 = !DIEnumerator(name: "SKEY", value: 115, isUnsigned: true)
!1049 = !DIEnumerator(name: "TKEY", value: 116, isUnsigned: true)
!1050 = !DIEnumerator(name: "UKEY", value: 117, isUnsigned: true)
!1051 = !DIEnumerator(name: "VKEY", value: 118, isUnsigned: true)
!1052 = !DIEnumerator(name: "WKEY", value: 119, isUnsigned: true)
!1053 = !DIEnumerator(name: "XKEY", value: 120, isUnsigned: true)
!1054 = !DIEnumerator(name: "YKEY", value: 121, isUnsigned: true)
!1055 = !DIEnumerator(name: "ZKEY", value: 122, isUnsigned: true)
!1056 = !DIEnumerator(name: "ZEROKEY", value: 48, isUnsigned: true)
!1057 = !DIEnumerator(name: "ONEKEY", value: 49, isUnsigned: true)
!1058 = !DIEnumerator(name: "TWOKEY", value: 50, isUnsigned: true)
!1059 = !DIEnumerator(name: "THREEKEY", value: 51, isUnsigned: true)
!1060 = !DIEnumerator(name: "FOURKEY", value: 52, isUnsigned: true)
!1061 = !DIEnumerator(name: "FIVEKEY", value: 53, isUnsigned: true)
!1062 = !DIEnumerator(name: "SIXKEY", value: 54, isUnsigned: true)
!1063 = !DIEnumerator(name: "SEVENKEY", value: 55, isUnsigned: true)
!1064 = !DIEnumerator(name: "EIGHTKEY", value: 56, isUnsigned: true)
!1065 = !DIEnumerator(name: "NINEKEY", value: 57, isUnsigned: true)
!1066 = !DIEnumerator(name: "CAPSLOCKKEY", value: 211, isUnsigned: true)
!1067 = !DIEnumerator(name: "LEFTCTRLKEY", value: 212, isUnsigned: true)
!1068 = !DIEnumerator(name: "LEFTALTKEY", value: 213, isUnsigned: true)
!1069 = !DIEnumerator(name: "RIGHTALTKEY", value: 214, isUnsigned: true)
!1070 = !DIEnumerator(name: "RIGHTCTRLKEY", value: 215, isUnsigned: true)
!1071 = !DIEnumerator(name: "RIGHTSHIFTKEY", value: 216, isUnsigned: true)
!1072 = !DIEnumerator(name: "LEFTSHIFTKEY", value: 217, isUnsigned: true)
!1073 = !DIEnumerator(name: "ESCKEY", value: 218, isUnsigned: true)
!1074 = !DIEnumerator(name: "TABKEY", value: 219, isUnsigned: true)
!1075 = !DIEnumerator(name: "RETKEY", value: 220, isUnsigned: true)
!1076 = !DIEnumerator(name: "SPACEKEY", value: 221, isUnsigned: true)
!1077 = !DIEnumerator(name: "LINEFEEDKEY", value: 222, isUnsigned: true)
!1078 = !DIEnumerator(name: "BACKSPACEKEY", value: 223, isUnsigned: true)
!1079 = !DIEnumerator(name: "DELKEY", value: 224, isUnsigned: true)
!1080 = !DIEnumerator(name: "SEMICOLONKEY", value: 225, isUnsigned: true)
!1081 = !DIEnumerator(name: "PERIODKEY", value: 226, isUnsigned: true)
!1082 = !DIEnumerator(name: "COMMAKEY", value: 227, isUnsigned: true)
!1083 = !DIEnumerator(name: "QUOTEKEY", value: 228, isUnsigned: true)
!1084 = !DIEnumerator(name: "ACCENTGRAVEKEY", value: 229, isUnsigned: true)
!1085 = !DIEnumerator(name: "MINUSKEY", value: 230, isUnsigned: true)
!1086 = !DIEnumerator(name: "SLASHKEY", value: 232, isUnsigned: true)
!1087 = !DIEnumerator(name: "BACKSLASHKEY", value: 233, isUnsigned: true)
!1088 = !DIEnumerator(name: "EQUALKEY", value: 234, isUnsigned: true)
!1089 = !DIEnumerator(name: "LEFTBRACKETKEY", value: 235, isUnsigned: true)
!1090 = !DIEnumerator(name: "RIGHTBRACKETKEY", value: 236, isUnsigned: true)
!1091 = !DIEnumerator(name: "LEFTARROWKEY", value: 137, isUnsigned: true)
!1092 = !DIEnumerator(name: "DOWNARROWKEY", value: 138, isUnsigned: true)
!1093 = !DIEnumerator(name: "RIGHTARROWKEY", value: 139, isUnsigned: true)
!1094 = !DIEnumerator(name: "UPARROWKEY", value: 140, isUnsigned: true)
!1095 = !DIEnumerator(name: "PAD0", value: 150, isUnsigned: true)
!1096 = !DIEnumerator(name: "PAD1", value: 151, isUnsigned: true)
!1097 = !DIEnumerator(name: "PAD2", value: 152, isUnsigned: true)
!1098 = !DIEnumerator(name: "PAD3", value: 153, isUnsigned: true)
!1099 = !DIEnumerator(name: "PAD4", value: 154, isUnsigned: true)
!1100 = !DIEnumerator(name: "PAD5", value: 155, isUnsigned: true)
!1101 = !DIEnumerator(name: "PAD6", value: 156, isUnsigned: true)
!1102 = !DIEnumerator(name: "PAD7", value: 157, isUnsigned: true)
!1103 = !DIEnumerator(name: "PAD8", value: 158, isUnsigned: true)
!1104 = !DIEnumerator(name: "PAD9", value: 159, isUnsigned: true)
!1105 = !DIEnumerator(name: "PADPERIOD", value: 199, isUnsigned: true)
!1106 = !DIEnumerator(name: "PADASTERKEY", value: 160, isUnsigned: true)
!1107 = !DIEnumerator(name: "PADSLASHKEY", value: 161, isUnsigned: true)
!1108 = !DIEnumerator(name: "PADMINUS", value: 162, isUnsigned: true)
!1109 = !DIEnumerator(name: "PADENTER", value: 163, isUnsigned: true)
!1110 = !DIEnumerator(name: "PADPLUSKEY", value: 164, isUnsigned: true)
!1111 = !DIEnumerator(name: "PAUSEKEY", value: 165, isUnsigned: true)
!1112 = !DIEnumerator(name: "INSERTKEY", value: 166, isUnsigned: true)
!1113 = !DIEnumerator(name: "HOMEKEY", value: 167, isUnsigned: true)
!1114 = !DIEnumerator(name: "PAGEUPKEY", value: 168, isUnsigned: true)
!1115 = !DIEnumerator(name: "PAGEDOWNKEY", value: 169, isUnsigned: true)
!1116 = !DIEnumerator(name: "ENDKEY", value: 170, isUnsigned: true)
!1117 = !DIEnumerator(name: "UNKNOWNKEY", value: 171, isUnsigned: true)
!1118 = !DIEnumerator(name: "OSKEY", value: 172, isUnsigned: true)
!1119 = !DIEnumerator(name: "GRLESSKEY", value: 173, isUnsigned: true)
!1120 = !DIEnumerator(name: "MEDIAPLAY", value: 174, isUnsigned: true)
!1121 = !DIEnumerator(name: "MEDIASTOP", value: 175, isUnsigned: true)
!1122 = !DIEnumerator(name: "MEDIAFIRST", value: 176, isUnsigned: true)
!1123 = !DIEnumerator(name: "MEDIALAST", value: 177, isUnsigned: true)
!1124 = !DIEnumerator(name: "F1KEY", value: 300, isUnsigned: true)
!1125 = !DIEnumerator(name: "F2KEY", value: 301, isUnsigned: true)
!1126 = !DIEnumerator(name: "F3KEY", value: 302, isUnsigned: true)
!1127 = !DIEnumerator(name: "F4KEY", value: 303, isUnsigned: true)
!1128 = !DIEnumerator(name: "F5KEY", value: 304, isUnsigned: true)
!1129 = !DIEnumerator(name: "F6KEY", value: 305, isUnsigned: true)
!1130 = !DIEnumerator(name: "F7KEY", value: 306, isUnsigned: true)
!1131 = !DIEnumerator(name: "F8KEY", value: 307, isUnsigned: true)
!1132 = !DIEnumerator(name: "F9KEY", value: 308, isUnsigned: true)
!1133 = !DIEnumerator(name: "F10KEY", value: 309, isUnsigned: true)
!1134 = !DIEnumerator(name: "F11KEY", value: 310, isUnsigned: true)
!1135 = !DIEnumerator(name: "F12KEY", value: 311, isUnsigned: true)
!1136 = !DIEnumerator(name: "F13KEY", value: 312, isUnsigned: true)
!1137 = !DIEnumerator(name: "F14KEY", value: 313, isUnsigned: true)
!1138 = !DIEnumerator(name: "F15KEY", value: 314, isUnsigned: true)
!1139 = !DIEnumerator(name: "F16KEY", value: 315, isUnsigned: true)
!1140 = !DIEnumerator(name: "F17KEY", value: 316, isUnsigned: true)
!1141 = !DIEnumerator(name: "F18KEY", value: 317, isUnsigned: true)
!1142 = !DIEnumerator(name: "F19KEY", value: 318, isUnsigned: true)
!1143 = !DIEnumerator(name: "NDOF_MOTION", value: 400, isUnsigned: true)
!1144 = !DIEnumerator(name: "NDOF_BUTTON_NONE", value: 400, isUnsigned: true)
!1145 = !DIEnumerator(name: "NDOF_BUTTON_MENU", value: 401, isUnsigned: true)
!1146 = !DIEnumerator(name: "NDOF_BUTTON_FIT", value: 402, isUnsigned: true)
!1147 = !DIEnumerator(name: "NDOF_BUTTON_TOP", value: 403, isUnsigned: true)
!1148 = !DIEnumerator(name: "NDOF_BUTTON_BOTTOM", value: 404, isUnsigned: true)
!1149 = !DIEnumerator(name: "NDOF_BUTTON_LEFT", value: 405, isUnsigned: true)
!1150 = !DIEnumerator(name: "NDOF_BUTTON_RIGHT", value: 406, isUnsigned: true)
!1151 = !DIEnumerator(name: "NDOF_BUTTON_FRONT", value: 407, isUnsigned: true)
!1152 = !DIEnumerator(name: "NDOF_BUTTON_BACK", value: 408, isUnsigned: true)
!1153 = !DIEnumerator(name: "NDOF_BUTTON_ISO1", value: 409, isUnsigned: true)
!1154 = !DIEnumerator(name: "NDOF_BUTTON_ISO2", value: 410, isUnsigned: true)
!1155 = !DIEnumerator(name: "NDOF_BUTTON_ROLL_CW", value: 411, isUnsigned: true)
!1156 = !DIEnumerator(name: "NDOF_BUTTON_ROLL_CCW", value: 412, isUnsigned: true)
!1157 = !DIEnumerator(name: "NDOF_BUTTON_SPIN_CW", value: 413, isUnsigned: true)
!1158 = !DIEnumerator(name: "NDOF_BUTTON_SPIN_CCW", value: 414, isUnsigned: true)
!1159 = !DIEnumerator(name: "NDOF_BUTTON_TILT_CW", value: 415, isUnsigned: true)
!1160 = !DIEnumerator(name: "NDOF_BUTTON_TILT_CCW", value: 416, isUnsigned: true)
!1161 = !DIEnumerator(name: "NDOF_BUTTON_ROTATE", value: 417, isUnsigned: true)
!1162 = !DIEnumerator(name: "NDOF_BUTTON_PANZOOM", value: 418, isUnsigned: true)
!1163 = !DIEnumerator(name: "NDOF_BUTTON_DOMINANT", value: 419, isUnsigned: true)
!1164 = !DIEnumerator(name: "NDOF_BUTTON_PLUS", value: 420, isUnsigned: true)
!1165 = !DIEnumerator(name: "NDOF_BUTTON_MINUS", value: 421, isUnsigned: true)
!1166 = !DIEnumerator(name: "NDOF_BUTTON_ESC", value: 422, isUnsigned: true)
!1167 = !DIEnumerator(name: "NDOF_BUTTON_ALT", value: 423, isUnsigned: true)
!1168 = !DIEnumerator(name: "NDOF_BUTTON_SHIFT", value: 424, isUnsigned: true)
!1169 = !DIEnumerator(name: "NDOF_BUTTON_CTRL", value: 425, isUnsigned: true)
!1170 = !DIEnumerator(name: "NDOF_BUTTON_1", value: 426, isUnsigned: true)
!1171 = !DIEnumerator(name: "NDOF_BUTTON_2", value: 427, isUnsigned: true)
!1172 = !DIEnumerator(name: "NDOF_BUTTON_3", value: 428, isUnsigned: true)
!1173 = !DIEnumerator(name: "NDOF_BUTTON_4", value: 429, isUnsigned: true)
!1174 = !DIEnumerator(name: "NDOF_BUTTON_5", value: 430, isUnsigned: true)
!1175 = !DIEnumerator(name: "NDOF_BUTTON_6", value: 431, isUnsigned: true)
!1176 = !DIEnumerator(name: "NDOF_BUTTON_7", value: 432, isUnsigned: true)
!1177 = !DIEnumerator(name: "NDOF_BUTTON_8", value: 433, isUnsigned: true)
!1178 = !DIEnumerator(name: "NDOF_BUTTON_9", value: 434, isUnsigned: true)
!1179 = !DIEnumerator(name: "NDOF_BUTTON_10", value: 435, isUnsigned: true)
!1180 = !DIEnumerator(name: "NDOF_BUTTON_A", value: 436, isUnsigned: true)
!1181 = !DIEnumerator(name: "NDOF_BUTTON_B", value: 437, isUnsigned: true)
!1182 = !DIEnumerator(name: "NDOF_BUTTON_C", value: 438, isUnsigned: true)
!1183 = !DIEnumerator(name: "NDOF_LAST", value: 439, isUnsigned: true)
!1184 = !DIEnumerator(name: "INPUTCHANGE", value: 259, isUnsigned: true)
!1185 = !DIEnumerator(name: "WINDEACTIVATE", value: 260, isUnsigned: true)
!1186 = !DIEnumerator(name: "TIMER", value: 272, isUnsigned: true)
!1187 = !DIEnumerator(name: "TIMER0", value: 273, isUnsigned: true)
!1188 = !DIEnumerator(name: "TIMER1", value: 274, isUnsigned: true)
!1189 = !DIEnumerator(name: "TIMER2", value: 275, isUnsigned: true)
!1190 = !DIEnumerator(name: "TIMERJOBS", value: 276, isUnsigned: true)
!1191 = !DIEnumerator(name: "TIMERAUTOSAVE", value: 277, isUnsigned: true)
!1192 = !DIEnumerator(name: "TIMERREPORT", value: 278, isUnsigned: true)
!1193 = !DIEnumerator(name: "TIMERREGION", value: 279, isUnsigned: true)
!1194 = !DIEnumerator(name: "TIMERF", value: 287, isUnsigned: true)
!1195 = !DIEnumerator(name: "EVT_ACTIONZONE_AREA", value: 20480, isUnsigned: true)
!1196 = !DIEnumerator(name: "EVT_ACTIONZONE_REGION", value: 20481, isUnsigned: true)
!1197 = !DIEnumerator(name: "EVT_ACTIONZONE_FULLSCREEN", value: 20482, isUnsigned: true)
!1198 = !DIEnumerator(name: "EVT_TWEAK_L", value: 20483, isUnsigned: true)
!1199 = !DIEnumerator(name: "EVT_TWEAK_M", value: 20484, isUnsigned: true)
!1200 = !DIEnumerator(name: "EVT_TWEAK_R", value: 20485, isUnsigned: true)
!1201 = !DIEnumerator(name: "EVT_TWEAK_A", value: 20486, isUnsigned: true)
!1202 = !DIEnumerator(name: "EVT_TWEAK_S", value: 20487, isUnsigned: true)
!1203 = !DIEnumerator(name: "EVT_GESTURE", value: 20496, isUnsigned: true)
!1204 = !DIEnumerator(name: "EVT_FILESELECT", value: 20512, isUnsigned: true)
!1205 = !DIEnumerator(name: "EVT_BUT_OPEN", value: 20513, isUnsigned: true)
!1206 = !DIEnumerator(name: "EVT_MODAL_MAP", value: 20514, isUnsigned: true)
!1207 = !DIEnumerator(name: "EVT_DROP", value: 20515, isUnsigned: true)
!1208 = !DIEnumerator(name: "EVT_BUT_CANCEL", value: 20516, isUnsigned: true)
!1209 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1009, line: 394, baseType: !7, size: 32, elements: !1210)
!1210 = !{!1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221}
!1211 = !DIEnumerator(name: "GESTURE_MODAL_CANCEL", value: 1, isUnsigned: true)
!1212 = !DIEnumerator(name: "GESTURE_MODAL_CONFIRM", value: 2, isUnsigned: true)
!1213 = !DIEnumerator(name: "GESTURE_MODAL_SELECT", value: 3, isUnsigned: true)
!1214 = !DIEnumerator(name: "GESTURE_MODAL_DESELECT", value: 4, isUnsigned: true)
!1215 = !DIEnumerator(name: "GESTURE_MODAL_NOP", value: 5, isUnsigned: true)
!1216 = !DIEnumerator(name: "GESTURE_MODAL_CIRCLE_ADD", value: 6, isUnsigned: true)
!1217 = !DIEnumerator(name: "GESTURE_MODAL_CIRCLE_SUB", value: 7, isUnsigned: true)
!1218 = !DIEnumerator(name: "GESTURE_MODAL_BEGIN", value: 8, isUnsigned: true)
!1219 = !DIEnumerator(name: "GESTURE_MODAL_IN", value: 9, isUnsigned: true)
!1220 = !DIEnumerator(name: "GESTURE_MODAL_OUT", value: 10, isUnsigned: true)
!1221 = !DIEnumerator(name: "GESTURE_MODAL_CIRCLE_SIZE", value: 11, isUnsigned: true)
!1222 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eUserpref_UI_Flag", file: !1223, line: 630, baseType: !1224, size: 32, elements: !1225)
!1223 = !DIFile(filename: "blender/source/blender/makesdna/DNA_userdef_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1224 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!1225 = !{!1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253}
!1226 = !DIEnumerator(name: "USER_WHEELZOOMDIR", value: 4)
!1227 = !DIEnumerator(name: "USER_FILTERFILEEXTS", value: 8)
!1228 = !DIEnumerator(name: "USER_DRAWVIEWINFO", value: 16)
!1229 = !DIEnumerator(name: "USER_PLAINMENUS", value: 32)
!1230 = !DIEnumerator(name: "USER_ALLWINCODECS", value: 256)
!1231 = !DIEnumerator(name: "USER_MENUOPENAUTO", value: 512)
!1232 = !DIEnumerator(name: "USER_ZBUF_CURSOR", value: 1024)
!1233 = !DIEnumerator(name: "USER_AUTOPERSP", value: 2048)
!1234 = !DIEnumerator(name: "USER_LOCKAROUND", value: 4096)
!1235 = !DIEnumerator(name: "USER_GLOBALUNDO", value: 8192)
!1236 = !DIEnumerator(name: "USER_ORBIT_SELECTION", value: 16384)
!1237 = !DIEnumerator(name: "USER_ZBUF_ORBIT", value: 32768)
!1238 = !DIEnumerator(name: "USER_HIDE_DOT", value: 65536)
!1239 = !DIEnumerator(name: "USER_SHOW_ROTVIEWICON", value: 131072)
!1240 = !DIEnumerator(name: "USER_SHOW_VIEWPORTNAME", value: 262144)
!1241 = !DIEnumerator(name: "USER_CAM_LOCK_NO_PARENT", value: 524288)
!1242 = !DIEnumerator(name: "USER_ZOOM_TO_MOUSEPOS", value: 1048576)
!1243 = !DIEnumerator(name: "USER_SHOW_FPS", value: 2097152)
!1244 = !DIEnumerator(name: "USER_MMB_PASTE", value: 4194304)
!1245 = !DIEnumerator(name: "USER_MENUFIXEDORDER", value: 8388608)
!1246 = !DIEnumerator(name: "USER_CONTINUOUS_MOUSE", value: 16777216)
!1247 = !DIEnumerator(name: "USER_ZOOM_INVERT", value: 33554432)
!1248 = !DIEnumerator(name: "USER_ZOOM_HORIZ", value: 67108864)
!1249 = !DIEnumerator(name: "USER_SPLASH_DISABLE", value: 134217728)
!1250 = !DIEnumerator(name: "USER_HIDE_RECENT", value: 268435456)
!1251 = !DIEnumerator(name: "USER_SHOW_THUMBNAILS", value: 536870912)
!1252 = !DIEnumerator(name: "USER_QUIT_PROMPT", value: 1073741824)
!1253 = !DIEnumerator(name: "USER_HIDE_SYSTEM_BOOKMARKS", value: -2147483648)
!1254 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1255, line: 236, baseType: !7, size: 32, elements: !1256)
!1255 = !DIFile(filename: "blender/source/blender/editors/include/UI_interface.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1256 = !{!1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300}
!1257 = !DIEnumerator(name: "BUT", value: 512, isUnsigned: true)
!1258 = !DIEnumerator(name: "ROW", value: 1024, isUnsigned: true)
!1259 = !DIEnumerator(name: "TOG", value: 1536, isUnsigned: true)
!1260 = !DIEnumerator(name: "NUM", value: 2560, isUnsigned: true)
!1261 = !DIEnumerator(name: "TEX", value: 3072, isUnsigned: true)
!1262 = !DIEnumerator(name: "TOGN", value: 4608, isUnsigned: true)
!1263 = !DIEnumerator(name: "LABEL", value: 5120, isUnsigned: true)
!1264 = !DIEnumerator(name: "MENU", value: 5632, isUnsigned: true)
!1265 = !DIEnumerator(name: "ICONTOG", value: 6656, isUnsigned: true)
!1266 = !DIEnumerator(name: "NUMSLI", value: 7168, isUnsigned: true)
!1267 = !DIEnumerator(name: "COLOR", value: 7680, isUnsigned: true)
!1268 = !DIEnumerator(name: "SCROLL", value: 9216, isUnsigned: true)
!1269 = !DIEnumerator(name: "BLOCK", value: 9728, isUnsigned: true)
!1270 = !DIEnumerator(name: "BUTM", value: 10240, isUnsigned: true)
!1271 = !DIEnumerator(name: "SEPR", value: 10752, isUnsigned: true)
!1272 = !DIEnumerator(name: "LINK", value: 11264, isUnsigned: true)
!1273 = !DIEnumerator(name: "INLINK", value: 11776, isUnsigned: true)
!1274 = !DIEnumerator(name: "KEYEVT", value: 12288, isUnsigned: true)
!1275 = !DIEnumerator(name: "HSVCUBE", value: 13312, isUnsigned: true)
!1276 = !DIEnumerator(name: "PULLDOWN", value: 13824, isUnsigned: true)
!1277 = !DIEnumerator(name: "ROUNDBOX", value: 14336, isUnsigned: true)
!1278 = !DIEnumerator(name: "BUT_COLORBAND", value: 15360, isUnsigned: true)
!1279 = !DIEnumerator(name: "BUT_NORMAL", value: 15872, isUnsigned: true)
!1280 = !DIEnumerator(name: "BUT_CURVE", value: 16384, isUnsigned: true)
!1281 = !DIEnumerator(name: "ICONTOGN", value: 17408, isUnsigned: true)
!1282 = !DIEnumerator(name: "LISTBOX", value: 17920, isUnsigned: true)
!1283 = !DIEnumerator(name: "LISTROW", value: 18432, isUnsigned: true)
!1284 = !DIEnumerator(name: "TOGBUT", value: 18944, isUnsigned: true)
!1285 = !DIEnumerator(name: "OPTION", value: 19456, isUnsigned: true)
!1286 = !DIEnumerator(name: "OPTIONN", value: 19968, isUnsigned: true)
!1287 = !DIEnumerator(name: "TRACKPREVIEW", value: 20480, isUnsigned: true)
!1288 = !DIEnumerator(name: "SEARCH_MENU", value: 20992, isUnsigned: true)
!1289 = !DIEnumerator(name: "BUT_EXTRA", value: 21504, isUnsigned: true)
!1290 = !DIEnumerator(name: "HSVCIRCLE", value: 22016, isUnsigned: true)
!1291 = !DIEnumerator(name: "HOTKEYEVT", value: 23552, isUnsigned: true)
!1292 = !DIEnumerator(name: "BUT_IMAGE", value: 24064, isUnsigned: true)
!1293 = !DIEnumerator(name: "HISTOGRAM", value: 24576, isUnsigned: true)
!1294 = !DIEnumerator(name: "WAVEFORM", value: 25088, isUnsigned: true)
!1295 = !DIEnumerator(name: "VECTORSCOPE", value: 25600, isUnsigned: true)
!1296 = !DIEnumerator(name: "PROGRESSBAR", value: 26112, isUnsigned: true)
!1297 = !DIEnumerator(name: "SEARCH_MENU_UNLINK", value: 26624, isUnsigned: true)
!1298 = !DIEnumerator(name: "NODESOCKET", value: 27136, isUnsigned: true)
!1299 = !DIEnumerator(name: "SEPRLINE", value: 27648, isUnsigned: true)
!1300 = !DIEnumerator(name: "GRIP", value: 28160, isUnsigned: true)
!1301 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1302, line: 292, baseType: !7, size: 32, elements: !1303)
!1302 = !DIFile(filename: "blender/source/blender/makesdna/DNA_screen_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1303 = !{!1304, !1305, !1306}
!1304 = !DIEnumerator(name: "SCREENNORMAL", value: 0, isUnsigned: true)
!1305 = !DIEnumerator(name: "SCREENMAXIMIZED", value: 1, isUnsigned: true)
!1306 = !DIEnumerator(name: "SCREENFULL", value: 2, isUnsigned: true)
!1307 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "FileDisplayTypeE", file: !959, line: 626, baseType: !7, size: 32, elements: !1308)
!1308 = !{!1309, !1310, !1311, !1312}
!1309 = !DIEnumerator(name: "FILE_DEFAULTDISPLAY", value: 0, isUnsigned: true)
!1310 = !DIEnumerator(name: "FILE_SHORTDISPLAY", value: 1, isUnsigned: true)
!1311 = !DIEnumerator(name: "FILE_LONGDISPLAY", value: 2, isUnsigned: true)
!1312 = !DIEnumerator(name: "FILE_IMGDISPLAY", value: 3, isUnsigned: true)
!1313 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eUserPref_Flag", file: !1223, line: 569, baseType: !7, size: 32, elements: !1314)
!1314 = !{!1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334}
!1315 = !DIEnumerator(name: "USER_AUTOSAVE", value: 1, isUnsigned: true)
!1316 = !DIEnumerator(name: "USER_SCENEGLOBAL", value: 16, isUnsigned: true)
!1317 = !DIEnumerator(name: "USER_TRACKBALL", value: 32, isUnsigned: true)
!1318 = !DIEnumerator(name: "USER_MAT_ON_OB", value: 256, isUnsigned: true)
!1319 = !DIEnumerator(name: "USER_TOOLTIPS", value: 2048, isUnsigned: true)
!1320 = !DIEnumerator(name: "USER_TWOBUTTONMOUSE", value: 4096, isUnsigned: true)
!1321 = !DIEnumerator(name: "USER_NONUMPAD", value: 8192, isUnsigned: true)
!1322 = !DIEnumerator(name: "USER_LMOUSESELECT", value: 16384, isUnsigned: true)
!1323 = !DIEnumerator(name: "USER_FILECOMPRESS", value: 32768, isUnsigned: true)
!1324 = !DIEnumerator(name: "USER_SAVE_PREVIEWS", value: 65536, isUnsigned: true)
!1325 = !DIEnumerator(name: "USER_CUSTOM_RANGE", value: 131072, isUnsigned: true)
!1326 = !DIEnumerator(name: "USER_ADD_EDITMODE", value: 262144, isUnsigned: true)
!1327 = !DIEnumerator(name: "USER_ADD_VIEWALIGNED", value: 524288, isUnsigned: true)
!1328 = !DIEnumerator(name: "USER_RELPATHS", value: 1048576, isUnsigned: true)
!1329 = !DIEnumerator(name: "USER_RELEASECONFIRM", value: 2097152, isUnsigned: true)
!1330 = !DIEnumerator(name: "USER_SCRIPT_AUTOEXEC_DISABLE", value: 4194304, isUnsigned: true)
!1331 = !DIEnumerator(name: "USER_FILENOUI", value: 8388608, isUnsigned: true)
!1332 = !DIEnumerator(name: "USER_NONEGFRAMES", value: 16777216, isUnsigned: true)
!1333 = !DIEnumerator(name: "USER_TXT_TABSTOSPACES_DISABLE", value: 33554432, isUnsigned: true)
!1334 = !DIEnumerator(name: "USER_TOOLTIPS_PYTHON", value: 67108864, isUnsigned: true)
!1335 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eFileSel_Params_Flag", file: !959, line: 666, baseType: !7, size: 32, elements: !1336)
!1336 = !{!1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346}
!1337 = !DIEnumerator(name: "FILE_SHOWSHORT", value: 1, isUnsigned: true)
!1338 = !DIEnumerator(name: "FILE_RELPATH", value: 2, isUnsigned: true)
!1339 = !DIEnumerator(name: "FILE_LINK", value: 4, isUnsigned: true)
!1340 = !DIEnumerator(name: "FILE_HIDE_DOT", value: 8, isUnsigned: true)
!1341 = !DIEnumerator(name: "FILE_AUTOSELECT", value: 16, isUnsigned: true)
!1342 = !DIEnumerator(name: "FILE_ACTIVELAY", value: 32, isUnsigned: true)
!1343 = !DIEnumerator(name: "FILE_DIRSEL_ONLY", value: 128, isUnsigned: true)
!1344 = !DIEnumerator(name: "FILE_FILTER", value: 256, isUnsigned: true)
!1345 = !DIEnumerator(name: "FILE_BOOKMARKS", value: 512, isUnsigned: true)
!1346 = !DIEnumerator(name: "FILE_GROUP_INSTANCE", value: 1024, isUnsigned: true)
!1347 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eSpace_Type", file: !959, line: 1163, baseType: !7, size: 32, elements: !1348)
!1348 = !{!1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1366, !1367, !1368, !1369, !1370}
!1349 = !DIEnumerator(name: "SPACE_EMPTY", value: 0, isUnsigned: true)
!1350 = !DIEnumerator(name: "SPACE_VIEW3D", value: 1, isUnsigned: true)
!1351 = !DIEnumerator(name: "SPACE_IPO", value: 2, isUnsigned: true)
!1352 = !DIEnumerator(name: "SPACE_OUTLINER", value: 3, isUnsigned: true)
!1353 = !DIEnumerator(name: "SPACE_BUTS", value: 4, isUnsigned: true)
!1354 = !DIEnumerator(name: "SPACE_FILE", value: 5, isUnsigned: true)
!1355 = !DIEnumerator(name: "SPACE_IMAGE", value: 6, isUnsigned: true)
!1356 = !DIEnumerator(name: "SPACE_INFO", value: 7, isUnsigned: true)
!1357 = !DIEnumerator(name: "SPACE_SEQ", value: 8, isUnsigned: true)
!1358 = !DIEnumerator(name: "SPACE_TEXT", value: 9, isUnsigned: true)
!1359 = !DIEnumerator(name: "SPACE_IMASEL", value: 10, isUnsigned: true)
!1360 = !DIEnumerator(name: "SPACE_SOUND", value: 11, isUnsigned: true)
!1361 = !DIEnumerator(name: "SPACE_ACTION", value: 12, isUnsigned: true)
!1362 = !DIEnumerator(name: "SPACE_NLA", value: 13, isUnsigned: true)
!1363 = !DIEnumerator(name: "SPACE_SCRIPT", value: 14, isUnsigned: true)
!1364 = !DIEnumerator(name: "SPACE_TIME", value: 15, isUnsigned: true)
!1365 = !DIEnumerator(name: "SPACE_NODE", value: 16, isUnsigned: true)
!1366 = !DIEnumerator(name: "SPACE_LOGIC", value: 17, isUnsigned: true)
!1367 = !DIEnumerator(name: "SPACE_CONSOLE", value: 18, isUnsigned: true)
!1368 = !DIEnumerator(name: "SPACE_USERPREF", value: 19, isUnsigned: true)
!1369 = !DIEnumerator(name: "SPACE_CLIP", value: 20, isUnsigned: true)
!1370 = !DIEnumerator(name: "SPACEICONMAX", value: 20, isUnsigned: true)
!1371 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1372, line: 339, baseType: !7, size: 32, elements: !1373)
!1372 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1373 = !{!1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384}
!1374 = !DIEnumerator(name: "OB_EMPTY", value: 0, isUnsigned: true)
!1375 = !DIEnumerator(name: "OB_MESH", value: 1, isUnsigned: true)
!1376 = !DIEnumerator(name: "OB_CURVE", value: 2, isUnsigned: true)
!1377 = !DIEnumerator(name: "OB_SURF", value: 3, isUnsigned: true)
!1378 = !DIEnumerator(name: "OB_FONT", value: 4, isUnsigned: true)
!1379 = !DIEnumerator(name: "OB_MBALL", value: 5, isUnsigned: true)
!1380 = !DIEnumerator(name: "OB_LAMP", value: 10, isUnsigned: true)
!1381 = !DIEnumerator(name: "OB_CAMERA", value: 11, isUnsigned: true)
!1382 = !DIEnumerator(name: "OB_SPEAKER", value: 12, isUnsigned: true)
!1383 = !DIEnumerator(name: "OB_LATTICE", value: 22, isUnsigned: true)
!1384 = !DIEnumerator(name: "OB_ARMATURE", value: 25, isUnsigned: true)
!1385 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 3958, baseType: !7, size: 32, elements: !1386)
!1386 = !{!1387, !1388, !1389}
!1387 = !DIEnumerator(name: "RC_PROP_ALLOW_MISSING", value: 1, isUnsigned: true)
!1388 = !DIEnumerator(name: "RC_PROP_REQUIRE_FLOAT", value: 2, isUnsigned: true)
!1389 = !DIEnumerator(name: "RC_PROP_REQUIRE_BOOL", value: 4, isUnsigned: true)
!1390 = !{!1391, !1392, !1395, !1224, !1417, !1422, !1427, !1496, !1502, !1503, !1504, !2963, !2965, !3216, !3218, !1537}
!1391 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!1392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1393, size: 64)
!1393 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropertyRNA", file: !6, line: 333, baseType: !1394)
!1394 = !DICompositeType(tag: DW_TAG_structure_type, name: "PropertyRNA", file: !6, line: 39, flags: DIFlagFwdDecl)
!1395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1396, size: 64)
!1396 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmPaintCursor", file: !1397, line: 44, baseType: !1398)
!1397 = !DIFile(filename: "blender/source/blender/windowmanager/wm.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmPaintCursor", file: !1397, line: 37, size: 320, elements: !1399)
!1399 = !{!1400, !1402, !1403, !1404, !1410}
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1398, file: !1397, line: 38, baseType: !1401, size: 64)
!1401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1398, size: 64)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1398, file: !1397, line: 38, baseType: !1401, size: 64, offset: 64)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !1398, file: !1397, line: 40, baseType: !1391, size: 64, offset: 128)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !1398, file: !1397, line: 42, baseType: !1405, size: 64, offset: 192)
!1405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1406, size: 64)
!1406 = !DISubroutineType(types: !1407)
!1407 = !{!1224, !1408}
!1408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1409, size: 64)
!1409 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContext", file: !41, line: 51, flags: DIFlagFwdDecl)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "draw", scope: !1398, file: !1397, line: 43, baseType: !1411, size: 64, offset: 256)
!1411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1412, size: 64)
!1412 = !DISubroutineType(types: !1413)
!1413 = !{null, !1414, !1224, !1224, !1391}
!1414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1415, size: 64)
!1415 = !DIDerivedType(tag: DW_TAG_typedef, name: "bContext", file: !1416, line: 69, baseType: !1409)
!1416 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_context.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1418, size: 64)
!1418 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1419, size: 64, elements: !1420)
!1419 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1224)
!1420 = !{!1421}
!1421 = !DISubrange(count: 2)
!1422 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHashValFreeFP", file: !1423, line: 46, baseType: !1424)
!1423 = !DIFile(filename: "blender/source/blender/blenlib/BLI_ghash.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1425, size: 64)
!1425 = !DISubroutineType(types: !1426)
!1426 = !{null, !1391}
!1427 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1428, size: 64)
!1428 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !1429, line: 130, baseType: !1430)
!1429 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1430 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !1429, line: 117, size: 960, elements: !1431)
!1431 = !{!1432, !1433, !1434, !1436, !1455, !1459, !1461, !1462, !1463, !1464}
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1430, file: !1429, line: 118, baseType: !1391, size: 64)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1430, file: !1429, line: 118, baseType: !1391, size: 64, offset: 64)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !1430, file: !1429, line: 119, baseType: !1435, size: 64, offset: 128)
!1435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1430, size: 64)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !1430, file: !1429, line: 120, baseType: !1437, size: 64, offset: 192)
!1437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1438, size: 64)
!1438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !1429, line: 136, size: 17600, elements: !1439)
!1439 = !{!1440, !1441, !1442, !1445, !1450, !1451, !1452}
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1438, file: !1429, line: 137, baseType: !1428, size: 960)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !1438, file: !1429, line: 138, baseType: !1427, size: 64, offset: 960)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !1438, file: !1429, line: 139, baseType: !1443, size: 64, offset: 1024)
!1443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1444, size: 64)
!1444 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !1429, line: 43, flags: DIFlagFwdDecl)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1438, file: !1429, line: 140, baseType: !1446, size: 8192, offset: 1088)
!1446 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1447, size: 8192, elements: !1448)
!1447 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!1448 = !{!1449}
!1449 = !DISubrange(count: 1024)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !1438, file: !1429, line: 141, baseType: !1446, size: 8192, offset: 9280)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1438, file: !1429, line: 148, baseType: !1437, size: 64, offset: 17472)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !1438, file: !1429, line: 150, baseType: !1453, size: 64, offset: 17536)
!1453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1454, size: 64)
!1454 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !1429, line: 45, flags: DIFlagFwdDecl)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1430, file: !1429, line: 121, baseType: !1456, size: 528, offset: 256)
!1456 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1447, size: 528, elements: !1457)
!1457 = !{!1458}
!1458 = !DISubrange(count: 66)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1430, file: !1429, line: 126, baseType: !1460, size: 16, offset: 784)
!1460 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !1430, file: !1429, line: 127, baseType: !1224, size: 32, offset: 800)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !1430, file: !1429, line: 128, baseType: !1224, size: 32, offset: 832)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1430, file: !1429, line: 128, baseType: !1224, size: 32, offset: 864)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1430, file: !1429, line: 129, baseType: !1465, size: 64, offset: 896)
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 64)
!1466 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !1429, line: 75, baseType: !1467)
!1467 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !1429, line: 62, size: 1024, elements: !1468)
!1468 = !{!1469, !1471, !1472, !1473, !1474, !1475, !1479, !1480, !1494, !1495}
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1467, file: !1429, line: 63, baseType: !1470, size: 64)
!1470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1467, size: 64)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1467, file: !1429, line: 63, baseType: !1470, size: 64, offset: 64)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1467, file: !1429, line: 64, baseType: !1447, size: 8, offset: 128)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !1467, file: !1429, line: 64, baseType: !1447, size: 8, offset: 136)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1467, file: !1429, line: 65, baseType: !1460, size: 16, offset: 144)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1467, file: !1429, line: 66, baseType: !1476, size: 512, offset: 160)
!1476 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1447, size: 512, elements: !1477)
!1477 = !{!1478}
!1478 = !DISubrange(count: 64)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !1467, file: !1429, line: 67, baseType: !1224, size: 32, offset: 672)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1467, file: !1429, line: 69, baseType: !1481, size: 256, offset: 704)
!1481 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !1429, line: 60, baseType: !1482)
!1482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !1429, line: 48, size: 256, elements: !1483)
!1483 = !{!1484, !1485, !1492, !1493}
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1482, file: !1429, line: 49, baseType: !1391, size: 64)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !1482, file: !1429, line: 58, baseType: !1486, size: 128, offset: 64)
!1486 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !1487, line: 71, baseType: !1488)
!1487 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !1487, line: 69, size: 128, elements: !1489)
!1489 = !{!1490, !1491}
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1488, file: !1487, line: 70, baseType: !1391, size: 64)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1488, file: !1487, line: 70, baseType: !1391, size: 64, offset: 64)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1482, file: !1429, line: 59, baseType: !1224, size: 32, offset: 192)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !1482, file: !1429, line: 59, baseType: !1224, size: 32, offset: 224)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1467, file: !1429, line: 70, baseType: !1224, size: 32, offset: 960)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !1467, file: !1429, line: 74, baseType: !1224, size: 32, offset: 992)
!1496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1497, size: 64)
!1497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_gh_Entry", file: !1423, line: 94, size: 192, elements: !1498)
!1498 = !{!1499, !1500, !1501}
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1497, file: !1423, line: 94, baseType: !1391, size: 64)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !1497, file: !1423, line: 94, baseType: !1391, size: 64, offset: 64)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1497, file: !1423, line: 94, baseType: !1391, size: 64, offset: 128)
!1502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1447, size: 64)
!1503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1460, size: 64)
!1504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1505, size: 64)
!1505 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !1372, line: 295, baseType: !1506)
!1506 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !1372, line: 115, size: 11392, elements: !1507)
!1507 = !{!1508, !1509, !1513, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1524, !1525, !1526, !1527, !1528, !1531, !1543, !1557, !1558, !1601, !1602, !1605, !1606, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1647, !1648, !1649, !1650, !1651, !1652, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1672, !1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1690, !1691, !1692, !1693, !1694, !1695, !1696, !1697, !1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1723, !1726, !1729, !1730, !1731, !1732, !1733, !1736, !1739, !1742, !1743, !1749, !1750, !1751, !1752, !1753, !1754, !1756, !1759, !1762, !1764, !2951, !2952}
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1506, file: !1372, line: 116, baseType: !1428, size: 960)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1506, file: !1372, line: 117, baseType: !1510, size: 64, offset: 960)
!1510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1511, size: 64)
!1511 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !1512, line: 45, flags: DIFlagFwdDecl)
!1512 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !1506, file: !1372, line: 119, baseType: !1514, size: 64, offset: 1024)
!1514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1515, size: 64)
!1515 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !1372, line: 57, flags: DIFlagFwdDecl)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1506, file: !1372, line: 121, baseType: !1460, size: 16, offset: 1088)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !1506, file: !1372, line: 121, baseType: !1460, size: 16, offset: 1104)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !1506, file: !1372, line: 122, baseType: !1224, size: 32, offset: 1120)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !1506, file: !1372, line: 122, baseType: !1224, size: 32, offset: 1152)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !1506, file: !1372, line: 122, baseType: !1224, size: 32, offset: 1184)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !1506, file: !1372, line: 123, baseType: !1476, size: 512, offset: 1216)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !1506, file: !1372, line: 124, baseType: !1523, size: 64, offset: 1728)
!1523 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1506, size: 64)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !1506, file: !1372, line: 124, baseType: !1523, size: 64, offset: 1792)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !1506, file: !1372, line: 127, baseType: !1523, size: 64, offset: 1856)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !1506, file: !1372, line: 127, baseType: !1523, size: 64, offset: 1920)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !1506, file: !1372, line: 127, baseType: !1523, size: 64, offset: 1984)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1506, file: !1372, line: 128, baseType: !1529, size: 64, offset: 2048)
!1529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1530, size: 64)
!1530 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !1512, line: 46, flags: DIFlagFwdDecl)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !1506, file: !1372, line: 130, baseType: !1532, size: 64, offset: 2112)
!1532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1533, size: 64)
!1533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !1372, line: 97, size: 832, elements: !1534)
!1534 = !{!1535, !1541, !1542}
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1533, file: !1372, line: 98, baseType: !1536, size: 768)
!1536 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1537, size: 768, elements: !1538)
!1537 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!1538 = !{!1539, !1540}
!1539 = !DISubrange(count: 8)
!1540 = !DISubrange(count: 3)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1533, file: !1372, line: 99, baseType: !1224, size: 32, offset: 768)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1533, file: !1372, line: 99, baseType: !1224, size: 32, offset: 800)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !1506, file: !1372, line: 131, baseType: !1544, size: 64, offset: 2176)
!1544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1545, size: 64)
!1545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !1546, line: 486, size: 1600, elements: !1547)
!1546 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1547 = !{!1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556}
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1545, file: !1546, line: 487, baseType: !1428, size: 960)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !1545, file: !1546, line: 489, baseType: !1486, size: 128, offset: 960)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !1545, file: !1546, line: 490, baseType: !1486, size: 128, offset: 1088)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !1545, file: !1546, line: 491, baseType: !1486, size: 128, offset: 1216)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1545, file: !1546, line: 492, baseType: !1486, size: 128, offset: 1344)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1545, file: !1546, line: 494, baseType: !1224, size: 32, offset: 1472)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !1545, file: !1546, line: 495, baseType: !1224, size: 32, offset: 1504)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !1545, file: !1546, line: 497, baseType: !1224, size: 32, offset: 1536)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1545, file: !1546, line: 498, baseType: !1224, size: 32, offset: 1568)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !1506, file: !1372, line: 132, baseType: !1544, size: 64, offset: 2240)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !1506, file: !1372, line: 133, baseType: !1559, size: 64, offset: 2304)
!1559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1560, size: 64)
!1560 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !1546, line: 334, size: 1728, elements: !1561)
!1561 = !{!1562, !1563, !1566, !1567, !1568, !1569, !1570, !1571, !1574, !1575, !1576, !1577, !1578, !1579, !1580, !1600}
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !1560, file: !1546, line: 335, baseType: !1486, size: 128)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !1560, file: !1546, line: 336, baseType: !1564, size: 64, offset: 128)
!1564 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1565, size: 64)
!1565 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !1546, line: 47, flags: DIFlagFwdDecl)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1560, file: !1546, line: 338, baseType: !1460, size: 16, offset: 192)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1560, file: !1546, line: 338, baseType: !1460, size: 16, offset: 208)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !1560, file: !1546, line: 339, baseType: !7, size: 32, offset: 224)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1560, file: !1546, line: 340, baseType: !1224, size: 32, offset: 256)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !1560, file: !1546, line: 342, baseType: !1537, size: 32, offset: 288)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !1560, file: !1546, line: 343, baseType: !1572, size: 96, offset: 320)
!1572 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1537, size: 96, elements: !1573)
!1573 = !{!1540}
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !1560, file: !1546, line: 344, baseType: !1572, size: 96, offset: 416)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !1560, file: !1546, line: 347, baseType: !1486, size: 128, offset: 512)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !1560, file: !1546, line: 349, baseType: !1224, size: 32, offset: 640)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !1560, file: !1546, line: 350, baseType: !1224, size: 32, offset: 672)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !1560, file: !1546, line: 351, baseType: !1391, size: 64, offset: 704)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !1560, file: !1546, line: 352, baseType: !1391, size: 64, offset: 768)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !1560, file: !1546, line: 354, baseType: !1581, size: 384, offset: 832)
!1581 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !1546, line: 116, baseType: !1582)
!1582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !1546, line: 94, size: 384, elements: !1583)
!1583 = !{!1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599}
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !1582, file: !1546, line: 96, baseType: !1224, size: 32)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !1582, file: !1546, line: 96, baseType: !1224, size: 32, offset: 32)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !1582, file: !1546, line: 97, baseType: !1224, size: 32, offset: 64)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !1582, file: !1546, line: 97, baseType: !1224, size: 32, offset: 96)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !1582, file: !1546, line: 99, baseType: !1460, size: 16, offset: 128)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !1582, file: !1546, line: 100, baseType: !1460, size: 16, offset: 144)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !1582, file: !1546, line: 102, baseType: !1460, size: 16, offset: 160)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1582, file: !1546, line: 105, baseType: !1460, size: 16, offset: 176)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !1582, file: !1546, line: 108, baseType: !1460, size: 16, offset: 192)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !1582, file: !1546, line: 109, baseType: !1460, size: 16, offset: 208)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !1582, file: !1546, line: 111, baseType: !1460, size: 16, offset: 224)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !1582, file: !1546, line: 112, baseType: !1460, size: 16, offset: 240)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !1582, file: !1546, line: 114, baseType: !1224, size: 32, offset: 256)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !1582, file: !1546, line: 114, baseType: !1224, size: 32, offset: 288)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !1582, file: !1546, line: 115, baseType: !1224, size: 32, offset: 320)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !1582, file: !1546, line: 115, baseType: !1224, size: 32, offset: 352)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !1560, file: !1546, line: 355, baseType: !1476, size: 512, offset: 1216)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1506, file: !1372, line: 134, baseType: !1391, size: 64, offset: 2368)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1506, file: !1372, line: 136, baseType: !1603, size: 64, offset: 2432)
!1603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1604, size: 64)
!1604 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !1372, line: 58, flags: DIFlagFwdDecl)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !1506, file: !1372, line: 138, baseType: !1581, size: 384, offset: 2496)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !1506, file: !1372, line: 139, baseType: !1607, size: 64, offset: 2880)
!1607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1608, size: 64)
!1608 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !1546, line: 80, baseType: !1609)
!1609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !1546, line: 72, size: 192, elements: !1610)
!1610 = !{!1611, !1618, !1619, !1620, !1621}
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !1609, file: !1546, line: 73, baseType: !1612, size: 64)
!1612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1613, size: 64)
!1613 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !1546, line: 59, baseType: !1614)
!1614 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !1546, line: 56, size: 128, elements: !1615)
!1615 = !{!1616, !1617}
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !1614, file: !1546, line: 57, baseType: !1572, size: 96)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1614, file: !1546, line: 58, baseType: !1224, size: 32, offset: 96)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1609, file: !1546, line: 74, baseType: !1224, size: 32, offset: 64)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1609, file: !1546, line: 76, baseType: !1224, size: 32, offset: 96)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1609, file: !1546, line: 77, baseType: !1224, size: 32, offset: 128)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1609, file: !1546, line: 79, baseType: !1224, size: 32, offset: 160)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !1506, file: !1372, line: 141, baseType: !1486, size: 128, offset: 2944)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !1506, file: !1372, line: 142, baseType: !1486, size: 128, offset: 3072)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !1506, file: !1372, line: 143, baseType: !1486, size: 128, offset: 3200)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !1506, file: !1372, line: 144, baseType: !1486, size: 128, offset: 3328)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1506, file: !1372, line: 146, baseType: !1224, size: 32, offset: 3456)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !1506, file: !1372, line: 147, baseType: !1224, size: 32, offset: 3488)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !1506, file: !1372, line: 150, baseType: !1629, size: 64, offset: 3520)
!1629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1630, size: 64)
!1630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1631, size: 64)
!1631 = !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !1372, line: 50, flags: DIFlagFwdDecl)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !1506, file: !1372, line: 151, baseType: !1502, size: 64, offset: 3584)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !1506, file: !1372, line: 152, baseType: !1224, size: 32, offset: 3648)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !1506, file: !1372, line: 153, baseType: !1224, size: 32, offset: 3680)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1506, file: !1372, line: 156, baseType: !1572, size: 96, offset: 3712)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !1506, file: !1372, line: 156, baseType: !1572, size: 96, offset: 3808)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !1506, file: !1372, line: 156, baseType: !1572, size: 96, offset: 3904)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1506, file: !1372, line: 157, baseType: !1572, size: 96, offset: 4000)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !1506, file: !1372, line: 158, baseType: !1572, size: 96, offset: 4096)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !1506, file: !1372, line: 159, baseType: !1572, size: 96, offset: 4192)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !1506, file: !1372, line: 160, baseType: !1572, size: 96, offset: 4288)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !1506, file: !1372, line: 160, baseType: !1572, size: 96, offset: 4384)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !1506, file: !1372, line: 161, baseType: !1644, size: 128, offset: 4480)
!1644 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1537, size: 128, elements: !1645)
!1645 = !{!1646}
!1646 = !DISubrange(count: 4)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !1506, file: !1372, line: 161, baseType: !1644, size: 128, offset: 4608)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !1506, file: !1372, line: 162, baseType: !1572, size: 96, offset: 4736)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !1506, file: !1372, line: 162, baseType: !1572, size: 96, offset: 4832)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !1506, file: !1372, line: 163, baseType: !1537, size: 32, offset: 4928)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !1506, file: !1372, line: 163, baseType: !1537, size: 32, offset: 4960)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !1506, file: !1372, line: 164, baseType: !1653, size: 512, offset: 4992)
!1653 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1537, size: 512, elements: !1654)
!1654 = !{!1646, !1646}
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !1506, file: !1372, line: 165, baseType: !1653, size: 512, offset: 5504)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !1506, file: !1372, line: 166, baseType: !1653, size: 512, offset: 6016)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !1506, file: !1372, line: 167, baseType: !1653, size: 512, offset: 6528)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !1506, file: !1372, line: 176, baseType: !1653, size: 512, offset: 7040)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1506, file: !1372, line: 178, baseType: !7, size: 32, offset: 7552)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1506, file: !1372, line: 180, baseType: !1460, size: 16, offset: 7584)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !1506, file: !1372, line: 181, baseType: !1460, size: 16, offset: 7600)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !1506, file: !1372, line: 183, baseType: !1460, size: 16, offset: 7616)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !1506, file: !1372, line: 183, baseType: !1460, size: 16, offset: 7632)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !1506, file: !1372, line: 184, baseType: !1460, size: 16, offset: 7648)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !1506, file: !1372, line: 184, baseType: !1460, size: 16, offset: 7664)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !1506, file: !1372, line: 185, baseType: !1460, size: 16, offset: 7680)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !1506, file: !1372, line: 186, baseType: !1460, size: 16, offset: 7696)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !1506, file: !1372, line: 187, baseType: !1460, size: 16, offset: 7712)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !1506, file: !1372, line: 188, baseType: !1447, size: 8, offset: 7728)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !1506, file: !1372, line: 189, baseType: !1447, size: 8, offset: 7736)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !1506, file: !1372, line: 192, baseType: !1224, size: 32, offset: 7744)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !1506, file: !1372, line: 192, baseType: !1224, size: 32, offset: 7776)
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !1506, file: !1372, line: 192, baseType: !1224, size: 32, offset: 7808)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !1506, file: !1372, line: 192, baseType: !1224, size: 32, offset: 7840)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1506, file: !1372, line: 194, baseType: !1224, size: 32, offset: 7872)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !1506, file: !1372, line: 202, baseType: !1537, size: 32, offset: 7904)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !1506, file: !1372, line: 202, baseType: !1537, size: 32, offset: 7936)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !1506, file: !1372, line: 202, baseType: !1537, size: 32, offset: 7968)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !1506, file: !1372, line: 211, baseType: !1537, size: 32, offset: 8000)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !1506, file: !1372, line: 212, baseType: !1537, size: 32, offset: 8032)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1506, file: !1372, line: 213, baseType: !1537, size: 32, offset: 8064)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !1506, file: !1372, line: 214, baseType: !1537, size: 32, offset: 8096)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !1506, file: !1372, line: 215, baseType: !1537, size: 32, offset: 8128)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !1506, file: !1372, line: 216, baseType: !1537, size: 32, offset: 8160)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !1506, file: !1372, line: 219, baseType: !1537, size: 32, offset: 8192)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !1506, file: !1372, line: 220, baseType: !1537, size: 32, offset: 8224)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !1506, file: !1372, line: 221, baseType: !1537, size: 32, offset: 8256)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !1506, file: !1372, line: 224, baseType: !1689, size: 16, offset: 8288)
!1689 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !1506, file: !1372, line: 224, baseType: !1689, size: 16, offset: 8304)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !1506, file: !1372, line: 226, baseType: !1460, size: 16, offset: 8320)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !1506, file: !1372, line: 228, baseType: !1447, size: 8, offset: 8336)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !1506, file: !1372, line: 229, baseType: !1447, size: 8, offset: 8344)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !1506, file: !1372, line: 231, baseType: !1460, size: 16, offset: 8352)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !1506, file: !1372, line: 232, baseType: !1447, size: 8, offset: 8368)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !1506, file: !1372, line: 233, baseType: !1447, size: 8, offset: 8376)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !1506, file: !1372, line: 234, baseType: !1537, size: 32, offset: 8384)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !1506, file: !1372, line: 235, baseType: !1537, size: 32, offset: 8416)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !1506, file: !1372, line: 237, baseType: !1486, size: 128, offset: 8448)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !1506, file: !1372, line: 238, baseType: !1486, size: 128, offset: 8576)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !1506, file: !1372, line: 239, baseType: !1486, size: 128, offset: 8704)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !1506, file: !1372, line: 240, baseType: !1486, size: 128, offset: 8832)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !1506, file: !1372, line: 242, baseType: !1537, size: 32, offset: 8960)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1506, file: !1372, line: 244, baseType: !1460, size: 16, offset: 8992)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !1506, file: !1372, line: 245, baseType: !1689, size: 16, offset: 9008)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1506, file: !1372, line: 246, baseType: !1644, size: 128, offset: 9024)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !1506, file: !1372, line: 248, baseType: !1224, size: 32, offset: 9152)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !1506, file: !1372, line: 249, baseType: !1224, size: 32, offset: 9184)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !1506, file: !1372, line: 251, baseType: !1710, size: 64, offset: 9216)
!1710 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1711, size: 64)
!1711 = !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !1372, line: 251, flags: DIFlagFwdDecl)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !1506, file: !1372, line: 253, baseType: !1447, size: 8, offset: 9280)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1506, file: !1372, line: 254, baseType: !1447, size: 8, offset: 9288)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !1506, file: !1372, line: 255, baseType: !1460, size: 16, offset: 9296)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !1506, file: !1372, line: 256, baseType: !1572, size: 96, offset: 9312)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !1506, file: !1372, line: 258, baseType: !1486, size: 128, offset: 9408)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !1506, file: !1372, line: 259, baseType: !1486, size: 128, offset: 9536)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !1506, file: !1372, line: 260, baseType: !1486, size: 128, offset: 9664)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !1506, file: !1372, line: 261, baseType: !1486, size: 128, offset: 9792)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !1506, file: !1372, line: 263, baseType: !1721, size: 64, offset: 9920)
!1721 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1722, size: 64)
!1722 = !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !1372, line: 52, flags: DIFlagFwdDecl)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !1506, file: !1372, line: 264, baseType: !1724, size: 64, offset: 9984)
!1724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1725, size: 64)
!1725 = !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !1372, line: 53, flags: DIFlagFwdDecl)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !1506, file: !1372, line: 265, baseType: !1727, size: 64, offset: 10048)
!1727 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1728, size: 64)
!1728 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !1546, line: 46, flags: DIFlagFwdDecl)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !1506, file: !1372, line: 267, baseType: !1447, size: 8, offset: 10112)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !1506, file: !1372, line: 268, baseType: !1447, size: 8, offset: 10120)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !1506, file: !1372, line: 269, baseType: !1460, size: 16, offset: 10128)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !1506, file: !1372, line: 270, baseType: !1537, size: 32, offset: 10144)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !1506, file: !1372, line: 272, baseType: !1734, size: 64, offset: 10176)
!1734 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1735, size: 64)
!1735 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !1372, line: 54, flags: DIFlagFwdDecl)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !1506, file: !1372, line: 275, baseType: !1737, size: 64, offset: 10240)
!1737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1738, size: 64)
!1738 = !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !1372, line: 275, flags: DIFlagFwdDecl)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !1506, file: !1372, line: 277, baseType: !1740, size: 64, offset: 10304)
!1740 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1741, size: 64)
!1741 = !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !1372, line: 56, flags: DIFlagFwdDecl)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !1506, file: !1372, line: 277, baseType: !1740, size: 64, offset: 10368)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !1506, file: !1372, line: 278, baseType: !1744, size: 64, offset: 10432)
!1744 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !1745, line: 27, baseType: !1746)
!1745 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!1746 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !1747, line: 45, baseType: !1748)
!1747 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!1748 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !1506, file: !1372, line: 279, baseType: !1744, size: 64, offset: 10496)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !1506, file: !1372, line: 280, baseType: !7, size: 32, offset: 10560)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !1506, file: !1372, line: 281, baseType: !7, size: 32, offset: 10592)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !1506, file: !1372, line: 283, baseType: !1486, size: 128, offset: 10624)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !1506, file: !1372, line: 284, baseType: !1486, size: 128, offset: 10752)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !1506, file: !1372, line: 285, baseType: !1755, size: 64, offset: 10880)
!1755 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1486, size: 64)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !1506, file: !1372, line: 287, baseType: !1757, size: 64, offset: 10944)
!1757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1758, size: 64)
!1758 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !1372, line: 59, flags: DIFlagFwdDecl)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !1506, file: !1372, line: 288, baseType: !1760, size: 64, offset: 11008)
!1760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1761, size: 64)
!1761 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !1372, line: 288, flags: DIFlagFwdDecl)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !1506, file: !1372, line: 290, baseType: !1763, size: 64, offset: 11072)
!1763 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1537, size: 64, elements: !1420)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !1506, file: !1372, line: 291, baseType: !1765, size: 64, offset: 11136)
!1765 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1766, size: 64)
!1766 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !1767, line: 65, baseType: !1768)
!1767 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !1767, line: 50, size: 320, elements: !1769)
!1769 = !{!1770, !2938, !2939, !2940, !2941, !2942, !2943, !2944, !2945, !2946, !2947, !2948, !2949, !2950}
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1768, file: !1767, line: 51, baseType: !1771, size: 64)
!1771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1772, size: 64)
!1772 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !1773, line: 1216, size: 39680, elements: !1774)
!1773 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1774 = !{!1775, !1776, !1777, !1778, !1781, !1782, !1783, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1809, !1879, !2306, !2521, !2524, !2813, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2835, !2836, !2837, !2838, !2839, !2847, !2914, !2921, !2922, !2929, !2930, !2931, !2932, !2933, !2934, !2935}
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1772, file: !1773, line: 1217, baseType: !1428, size: 960)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1772, file: !1773, line: 1218, baseType: !1510, size: 64, offset: 960)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !1772, file: !1773, line: 1220, baseType: !1523, size: 64, offset: 1024)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !1772, file: !1773, line: 1221, baseType: !1779, size: 64, offset: 1088)
!1779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1780, size: 64)
!1780 = !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !1773, line: 52, flags: DIFlagFwdDecl)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !1772, file: !1773, line: 1223, baseType: !1771, size: 64, offset: 1152)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1772, file: !1773, line: 1225, baseType: !1486, size: 128, offset: 1216)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !1772, file: !1773, line: 1226, baseType: !1784, size: 64, offset: 1344)
!1784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1785, size: 64)
!1785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !1773, line: 69, size: 320, elements: !1786)
!1786 = !{!1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1785, file: !1773, line: 70, baseType: !1784, size: 64)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1785, file: !1773, line: 70, baseType: !1784, size: 64, offset: 64)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1785, file: !1773, line: 71, baseType: !7, size: 32, offset: 128)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !1785, file: !1773, line: 71, baseType: !7, size: 32, offset: 160)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1785, file: !1773, line: 72, baseType: !1224, size: 32, offset: 192)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !1785, file: !1773, line: 73, baseType: !1460, size: 16, offset: 224)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !1785, file: !1773, line: 73, baseType: !1460, size: 16, offset: 240)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1785, file: !1773, line: 74, baseType: !1523, size: 64, offset: 256)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !1772, file: !1773, line: 1227, baseType: !1523, size: 64, offset: 1408)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !1772, file: !1773, line: 1229, baseType: !1572, size: 96, offset: 1472)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !1772, file: !1773, line: 1230, baseType: !1572, size: 96, offset: 1568)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !1772, file: !1773, line: 1231, baseType: !1572, size: 96, offset: 1664)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !1772, file: !1773, line: 1231, baseType: !1572, size: 96, offset: 1760)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1772, file: !1773, line: 1233, baseType: !7, size: 32, offset: 1856)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !1772, file: !1773, line: 1234, baseType: !1224, size: 32, offset: 1888)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !1772, file: !1773, line: 1235, baseType: !7, size: 32, offset: 1920)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1772, file: !1773, line: 1237, baseType: !1460, size: 16, offset: 1952)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !1772, file: !1773, line: 1239, baseType: !1447, size: 8, offset: 1968)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1772, file: !1773, line: 1240, baseType: !1806, size: 8, offset: 1976)
!1806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1447, size: 8, elements: !1807)
!1807 = !{!1808}
!1808 = !DISubrange(count: 1)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !1772, file: !1773, line: 1242, baseType: !1810, size: 64, offset: 1984)
!1810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1811, size: 64)
!1811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !1812, line: 328, size: 3456, elements: !1813)
!1812 = !DIFile(filename: "blender/source/blender/makesdna/DNA_node_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1813 = !{!1814, !1815, !1816, !1819, !1820, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1848, !1849, !1850, !1853, !1858, !1859, !1862, !1866, !1870, !1874, !1875, !1876, !1877, !1878}
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1811, file: !1812, line: 329, baseType: !1428, size: 960)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1811, file: !1812, line: 330, baseType: !1510, size: 64, offset: 960)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !1811, file: !1812, line: 332, baseType: !1817, size: 64, offset: 1024)
!1817 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1818, size: 64)
!1818 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeType", file: !1812, line: 332, flags: DIFlagFwdDecl)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !1811, file: !1812, line: 333, baseType: !1476, size: 512, offset: 1088)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "interface_type", scope: !1811, file: !1812, line: 335, baseType: !1821, size: 64, offset: 1600)
!1821 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1822, size: 64)
!1822 = !DICompositeType(tag: DW_TAG_structure_type, name: "StructRNA", file: !41, line: 57, flags: DIFlagFwdDecl)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1811, file: !1812, line: 337, baseType: !1603, size: 64, offset: 1664)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "view_center", scope: !1811, file: !1812, line: 338, baseType: !1763, size: 64, offset: 1728)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !1811, file: !1812, line: 340, baseType: !1486, size: 128, offset: 1792)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !1811, file: !1812, line: 340, baseType: !1486, size: 128, offset: 1920)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1811, file: !1812, line: 342, baseType: !1224, size: 32, offset: 2048)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !1811, file: !1812, line: 342, baseType: !1224, size: 32, offset: 2080)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "cur_index", scope: !1811, file: !1812, line: 343, baseType: !1224, size: 32, offset: 2112)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1811, file: !1812, line: 345, baseType: !1224, size: 32, offset: 2144)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !1811, file: !1812, line: 346, baseType: !1224, size: 32, offset: 2176)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "is_updating", scope: !1811, file: !1812, line: 347, baseType: !1460, size: 16, offset: 2208)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1811, file: !1812, line: 348, baseType: !1460, size: 16, offset: 2224)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1811, file: !1812, line: 349, baseType: !1224, size: 32, offset: 2240)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "nodetype", scope: !1811, file: !1812, line: 351, baseType: !1224, size: 32, offset: 2272)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "edit_quality", scope: !1811, file: !1812, line: 353, baseType: !1460, size: 16, offset: 2304)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "render_quality", scope: !1811, file: !1812, line: 354, baseType: !1460, size: 16, offset: 2320)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "chunksize", scope: !1811, file: !1812, line: 355, baseType: !1224, size: 32, offset: 2336)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "viewer_border", scope: !1811, file: !1812, line: 357, baseType: !1840, size: 128, offset: 2368)
!1840 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !1841, line: 95, baseType: !1842)
!1841 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !1841, line: 92, size: 128, elements: !1843)
!1843 = !{!1844, !1845, !1846, !1847}
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1842, file: !1841, line: 93, baseType: !1537, size: 32)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1842, file: !1841, line: 93, baseType: !1537, size: 32, offset: 32)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1842, file: !1841, line: 94, baseType: !1537, size: 32, offset: 64)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1842, file: !1841, line: 94, baseType: !1537, size: 32, offset: 96)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !1811, file: !1812, line: 363, baseType: !1486, size: 128, offset: 2496)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !1811, file: !1812, line: 363, baseType: !1486, size: 128, offset: 2624)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "previews", scope: !1811, file: !1812, line: 368, baseType: !1851, size: 64, offset: 2752)
!1851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1852, size: 64)
!1852 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceHash", file: !1812, line: 48, flags: DIFlagFwdDecl)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "active_viewer_key", scope: !1811, file: !1812, line: 372, baseType: !1854, size: 32, offset: 2816)
!1854 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeInstanceKey", file: !1812, line: 274, baseType: !1855)
!1855 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceKey", file: !1812, line: 271, size: 32, elements: !1856)
!1856 = !{!1857}
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1855, file: !1812, line: 273, baseType: !7, size: 32)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1811, file: !1812, line: 373, baseType: !1224, size: 32, offset: 2848)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "execdata", scope: !1811, file: !1812, line: 382, baseType: !1860, size: 64, offset: 2880)
!1860 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1861, size: 64)
!1861 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeExec", file: !1812, line: 46, flags: DIFlagFwdDecl)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !1811, file: !1812, line: 385, baseType: !1863, size: 64, offset: 2944)
!1863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1864, size: 64)
!1864 = !DISubroutineType(types: !1865)
!1865 = !{null, !1391, !1537}
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "stats_draw", scope: !1811, file: !1812, line: 386, baseType: !1867, size: 64, offset: 3008)
!1867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1868, size: 64)
!1868 = !DISubroutineType(types: !1869)
!1869 = !{null, !1391, !1502}
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "test_break", scope: !1811, file: !1812, line: 387, baseType: !1871, size: 64, offset: 3072)
!1871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1872, size: 64)
!1872 = !DISubroutineType(types: !1873)
!1873 = !{!1224, !1391}
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "update_draw", scope: !1811, file: !1812, line: 388, baseType: !1424, size: 64, offset: 3136)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "tbh", scope: !1811, file: !1812, line: 389, baseType: !1391, size: 64, offset: 3200)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "prh", scope: !1811, file: !1812, line: 389, baseType: !1391, size: 64, offset: 3264)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "sdh", scope: !1811, file: !1812, line: 389, baseType: !1391, size: 64, offset: 3328)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "udh", scope: !1811, file: !1812, line: 389, baseType: !1391, size: 64, offset: 3392)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !1772, file: !1773, line: 1244, baseType: !1880, size: 64, offset: 2048)
!1880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1881, size: 64)
!1881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !1882, line: 200, size: 17024, elements: !1883)
!1882 = !DIFile(filename: "blender/source/blender/makesdna/DNA_sequence_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1883 = !{!1884, !1885, !1886, !1887, !2299, !2300, !2301, !2302, !2303, !2304, !2305}
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "seqbasep", scope: !1881, file: !1882, line: 201, baseType: !1755, size: 64)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !1881, file: !1882, line: 202, baseType: !1486, size: 128, offset: 64)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "metastack", scope: !1881, file: !1882, line: 203, baseType: !1486, size: 128, offset: 192)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "act_seq", scope: !1881, file: !1882, line: 206, baseType: !1888, size: 64, offset: 320)
!1888 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1889, size: 64)
!1889 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sequence", file: !1882, line: 190, baseType: !1890)
!1890 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sequence", file: !1882, line: 126, size: 2816, elements: !1891)
!1891 = !{!1892, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1990, !1991, !1992, !1993, !2271, !2274, !2275, !2276, !2277, !2278, !2279, !2280, !2281, !2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296, !2298}
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1890, file: !1882, line: 127, baseType: !1893, size: 64)
!1893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1890, size: 64)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1890, file: !1882, line: 127, baseType: !1893, size: 64, offset: 64)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "tmp", scope: !1890, file: !1882, line: 128, baseType: !1391, size: 64, offset: 128)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !1890, file: !1882, line: 129, baseType: !1391, size: 64, offset: 192)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1890, file: !1882, line: 130, baseType: !1476, size: 512, offset: 256)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1890, file: !1882, line: 132, baseType: !1224, size: 32, offset: 768)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1890, file: !1882, line: 132, baseType: !1224, size: 32, offset: 800)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1890, file: !1882, line: 133, baseType: !1224, size: 32, offset: 832)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !1890, file: !1882, line: 134, baseType: !1224, size: 32, offset: 864)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "startofs", scope: !1890, file: !1882, line: 134, baseType: !1224, size: 32, offset: 896)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "endofs", scope: !1890, file: !1882, line: 134, baseType: !1224, size: 32, offset: 928)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !1890, file: !1882, line: 135, baseType: !1224, size: 32, offset: 960)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !1890, file: !1882, line: 135, baseType: !1224, size: 32, offset: 992)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1890, file: !1882, line: 136, baseType: !1224, size: 32, offset: 1024)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1890, file: !1882, line: 136, baseType: !1224, size: 32, offset: 1056)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "startdisp", scope: !1890, file: !1882, line: 137, baseType: !1224, size: 32, offset: 1088)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "enddisp", scope: !1890, file: !1882, line: 137, baseType: !1224, size: 32, offset: 1120)
!1910 = !DIDerivedType(tag: DW_TAG_member, name: "sat", scope: !1890, file: !1882, line: 138, baseType: !1537, size: 32, offset: 1152)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "mul", scope: !1890, file: !1882, line: 139, baseType: !1537, size: 32, offset: 1184)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "handsize", scope: !1890, file: !1882, line: 139, baseType: !1537, size: 32, offset: 1216)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "anim_preseek", scope: !1890, file: !1882, line: 141, baseType: !1460, size: 16, offset: 1248)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "streamindex", scope: !1890, file: !1882, line: 142, baseType: !1460, size: 16, offset: 1264)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "multicam_source", scope: !1890, file: !1882, line: 143, baseType: !1224, size: 32, offset: 1280)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "clip_flag", scope: !1890, file: !1882, line: 144, baseType: !1224, size: 32, offset: 1312)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "strip", scope: !1890, file: !1882, line: 146, baseType: !1918, size: 64, offset: 1344)
!1918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1919, size: 64)
!1919 = !DIDerivedType(tag: DW_TAG_typedef, name: "Strip", file: !1882, line: 114, baseType: !1920)
!1920 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Strip", file: !1882, line: 99, size: 7232, elements: !1921)
!1921 = !{!1922, !1924, !1925, !1926, !1927, !1928, !1929, !1940, !1944, !1958, !1967, !1974, !1984}
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1920, file: !1882, line: 100, baseType: !1923, size: 64)
!1923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1920, size: 64)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1920, file: !1882, line: 100, baseType: !1923, size: 64, offset: 64)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !1920, file: !1882, line: 101, baseType: !1224, size: 32, offset: 128)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !1920, file: !1882, line: 101, baseType: !1224, size: 32, offset: 160)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !1920, file: !1882, line: 102, baseType: !1224, size: 32, offset: 192)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !1920, file: !1882, line: 102, baseType: !1224, size: 32, offset: 224)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "stripdata", scope: !1920, file: !1882, line: 103, baseType: !1930, size: 64, offset: 256)
!1930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1931, size: 64)
!1931 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripElem", file: !1882, line: 59, baseType: !1932)
!1932 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripElem", file: !1882, line: 56, size: 2112, elements: !1933)
!1933 = !{!1934, !1938, !1939}
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1932, file: !1882, line: 57, baseType: !1935, size: 2048)
!1935 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1447, size: 2048, elements: !1936)
!1936 = !{!1937}
!1937 = !DISubrange(count: 256)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "orig_width", scope: !1932, file: !1882, line: 58, baseType: !1224, size: 32, offset: 2048)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "orig_height", scope: !1932, file: !1882, line: 58, baseType: !1224, size: 32, offset: 2080)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1920, file: !1882, line: 106, baseType: !1941, size: 6144, offset: 320)
!1941 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1447, size: 6144, elements: !1942)
!1942 = !{!1943}
!1943 = !DISubrange(count: 768)
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !1920, file: !1882, line: 107, baseType: !1945, size: 64, offset: 6464)
!1945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1946, size: 64)
!1946 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripProxy", file: !1882, line: 97, baseType: !1947)
!1947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripProxy", file: !1882, line: 83, size: 8320, elements: !1948)
!1948 = !{!1949, !1950, !1951, !1954, !1955, !1956, !1957}
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !1947, file: !1882, line: 84, baseType: !1941, size: 6144)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1947, file: !1882, line: 87, baseType: !1935, size: 2048, offset: 6144)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1947, file: !1882, line: 88, baseType: !1952, size: 64, offset: 8192)
!1952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1953, size: 64)
!1953 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !1767, line: 41, flags: DIFlagFwdDecl)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !1947, file: !1882, line: 90, baseType: !1460, size: 16, offset: 8256)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1947, file: !1882, line: 92, baseType: !1460, size: 16, offset: 8272)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flags", scope: !1947, file: !1882, line: 93, baseType: !1460, size: 16, offset: 8288)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flags", scope: !1947, file: !1882, line: 95, baseType: !1460, size: 16, offset: 8304)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !1920, file: !1882, line: 108, baseType: !1959, size: 64, offset: 6528)
!1959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1960, size: 64)
!1960 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripCrop", file: !1882, line: 66, baseType: !1961)
!1961 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripCrop", file: !1882, line: 61, size: 128, elements: !1962)
!1962 = !{!1963, !1964, !1965, !1966}
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !1961, file: !1882, line: 62, baseType: !1224, size: 32)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "bottom", scope: !1961, file: !1882, line: 63, baseType: !1224, size: 32, offset: 32)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !1961, file: !1882, line: 64, baseType: !1224, size: 32, offset: 64)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !1961, file: !1882, line: 65, baseType: !1224, size: 32, offset: 96)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "transform", scope: !1920, file: !1882, line: 109, baseType: !1968, size: 64, offset: 6592)
!1968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1969, size: 64)
!1969 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripTransform", file: !1882, line: 71, baseType: !1970)
!1970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripTransform", file: !1882, line: 68, size: 64, elements: !1971)
!1971 = !{!1972, !1973}
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "xofs", scope: !1970, file: !1882, line: 69, baseType: !1224, size: 32)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "yofs", scope: !1970, file: !1882, line: 70, baseType: !1224, size: 32, offset: 32)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "color_balance", scope: !1920, file: !1882, line: 110, baseType: !1975, size: 64, offset: 6656)
!1975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1976, size: 64)
!1976 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripColorBalance", file: !1882, line: 81, baseType: !1977)
!1977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripColorBalance", file: !1882, line: 73, size: 352, elements: !1978)
!1978 = !{!1979, !1980, !1981, !1982, !1983}
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "lift", scope: !1977, file: !1882, line: 74, baseType: !1572, size: 96)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !1977, file: !1882, line: 75, baseType: !1572, size: 96, offset: 96)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "gain", scope: !1977, file: !1882, line: 76, baseType: !1572, size: 96, offset: 192)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1977, file: !1882, line: 77, baseType: !1224, size: 32, offset: 288)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1977, file: !1882, line: 78, baseType: !1224, size: 32, offset: 320)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1920, file: !1882, line: 113, baseType: !1985, size: 512, offset: 6720)
!1985 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !1986, line: 182, baseType: !1987)
!1986 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !1986, line: 180, size: 512, elements: !1988)
!1988 = !{!1989}
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1987, file: !1986, line: 181, baseType: !1476, size: 512)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1890, file: !1882, line: 148, baseType: !1529, size: 64, offset: 1408)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1890, file: !1882, line: 151, baseType: !1771, size: 64, offset: 1472)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "scene_camera", scope: !1890, file: !1882, line: 152, baseType: !1523, size: 64, offset: 1536)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !1890, file: !1882, line: 153, baseType: !1994, size: 64, offset: 1600)
!1994 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1995, size: 64)
!1995 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !1996, line: 64, size: 19136, elements: !1997)
!1996 = !DIFile(filename: "blender/source/blender/makesdna/DNA_movieclip_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1997 = !{!1998, !1999, !2000, !2001, !2002, !2003, !2005, !2006, !2007, !2008, !2011, !2012, !2257, !2258, !2266, !2267, !2268, !2269, !2270}
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1995, file: !1996, line: 65, baseType: !1428, size: 960)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1995, file: !1996, line: 66, baseType: !1510, size: 64, offset: 960)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1995, file: !1996, line: 68, baseType: !1446, size: 8192, offset: 1024)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1995, file: !1996, line: 70, baseType: !1224, size: 32, offset: 9216)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1995, file: !1996, line: 71, baseType: !1224, size: 32, offset: 9248)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !1995, file: !1996, line: 72, baseType: !2004, size: 64, offset: 9280)
!2004 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1224, size: 64, elements: !1420)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !1995, file: !1996, line: 74, baseType: !1537, size: 32, offset: 9344)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !1995, file: !1996, line: 74, baseType: !1537, size: 32, offset: 9376)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1995, file: !1996, line: 76, baseType: !1952, size: 64, offset: 9408)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1995, file: !1996, line: 77, baseType: !2009, size: 64, offset: 9472)
!2009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2010, size: 64)
!2010 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipCache", file: !1996, line: 77, flags: DIFlagFwdDecl)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1995, file: !1996, line: 78, baseType: !1603, size: 64, offset: 9536)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "tracking", scope: !1995, file: !1996, line: 80, baseType: !2013, size: 2624, offset: 9600)
!2013 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTracking", file: !2014, line: 340, size: 2624, elements: !2015)
!2014 = !DIFile(filename: "blender/source/blender/makesdna/DNA_tracking_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2015 = !{!2016, !2044, !2062, !2063, !2064, !2079, !2137, !2138, !2237, !2238, !2239, !2240, !2246}
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "settings", scope: !2013, file: !2014, line: 341, baseType: !2017, size: 576)
!2017 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingSettings", file: !2014, line: 251, baseType: !2018)
!2018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingSettings", file: !2014, line: 207, size: 576, elements: !2019)
!2019 = !{!2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043}
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2018, file: !2014, line: 208, baseType: !1224, size: 32)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "default_motion_model", scope: !2018, file: !2014, line: 211, baseType: !1460, size: 16, offset: 32)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "default_algorithm_flag", scope: !2018, file: !2014, line: 212, baseType: !1460, size: 16, offset: 48)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "default_minimum_correlation", scope: !2018, file: !2014, line: 213, baseType: !1537, size: 32, offset: 64)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_size", scope: !2018, file: !2014, line: 214, baseType: !1460, size: 16, offset: 96)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "default_search_size", scope: !2018, file: !2014, line: 215, baseType: !1460, size: 16, offset: 112)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "default_frames_limit", scope: !2018, file: !2014, line: 216, baseType: !1460, size: 16, offset: 128)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "default_margin", scope: !2018, file: !2014, line: 217, baseType: !1460, size: 16, offset: 144)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_match", scope: !2018, file: !2014, line: 218, baseType: !1460, size: 16, offset: 160)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "default_flag", scope: !2018, file: !2014, line: 219, baseType: !1460, size: 16, offset: 176)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "default_weight", scope: !2018, file: !2014, line: 220, baseType: !1537, size: 32, offset: 192)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "motion_flag", scope: !2018, file: !2014, line: 222, baseType: !1460, size: 16, offset: 224)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !2018, file: !2014, line: 225, baseType: !1460, size: 16, offset: 240)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe1", scope: !2018, file: !2014, line: 228, baseType: !1224, size: 32, offset: 256)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe2", scope: !2018, file: !2014, line: 229, baseType: !1224, size: 32, offset: 288)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction_flag", scope: !2018, file: !2014, line: 233, baseType: !1224, size: 32, offset: 320)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "refine_camera_intrinsics", scope: !2018, file: !2014, line: 236, baseType: !1460, size: 16, offset: 352)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2018, file: !2014, line: 236, baseType: !1460, size: 16, offset: 368)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !2018, file: !2014, line: 241, baseType: !1537, size: 32, offset: 384)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "clean_frames", scope: !2018, file: !2014, line: 244, baseType: !1224, size: 32, offset: 416)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "clean_action", scope: !2018, file: !2014, line: 244, baseType: !1224, size: 32, offset: 448)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "clean_error", scope: !2018, file: !2014, line: 245, baseType: !1537, size: 32, offset: 480)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "object_distance", scope: !2018, file: !2014, line: 248, baseType: !1537, size: 32, offset: 512)
!2043 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2018, file: !2014, line: 250, baseType: !1224, size: 32, offset: 544)
!2044 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !2013, file: !2014, line: 342, baseType: !2045, size: 448, offset: 576)
!2045 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingCamera", file: !2014, line: 79, baseType: !2046)
!2046 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingCamera", file: !2014, line: 61, size: 448, elements: !2047)
!2047 = !{!2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2060, !2061}
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "intrinsics", scope: !2046, file: !2014, line: 62, baseType: !1391, size: 64)
!2049 = !DIDerivedType(tag: DW_TAG_member, name: "distortion_model", scope: !2046, file: !2014, line: 64, baseType: !1460, size: 16, offset: 64)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2046, file: !2014, line: 65, baseType: !1460, size: 16, offset: 80)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_width", scope: !2046, file: !2014, line: 67, baseType: !1537, size: 32, offset: 96)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_aspect", scope: !2046, file: !2014, line: 68, baseType: !1537, size: 32, offset: 128)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "focal", scope: !2046, file: !2014, line: 69, baseType: !1537, size: 32, offset: 160)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !2046, file: !2014, line: 70, baseType: !1460, size: 16, offset: 192)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2046, file: !2014, line: 71, baseType: !1460, size: 16, offset: 208)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "principal", scope: !2046, file: !2014, line: 72, baseType: !1763, size: 64, offset: 224)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "k1", scope: !2046, file: !2014, line: 75, baseType: !1537, size: 32, offset: 288)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "k2", scope: !2046, file: !2014, line: 75, baseType: !1537, size: 32, offset: 320)
!2059 = !DIDerivedType(tag: DW_TAG_member, name: "k3", scope: !2046, file: !2014, line: 75, baseType: !1537, size: 32, offset: 352)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "division_k1", scope: !2046, file: !2014, line: 78, baseType: !1537, size: 32, offset: 384)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "division_k2", scope: !2046, file: !2014, line: 78, baseType: !1537, size: 32, offset: 416)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "tracks", scope: !2013, file: !2014, line: 343, baseType: !1486, size: 128, offset: 1024)
!2063 = !DIDerivedType(tag: DW_TAG_member, name: "plane_tracks", scope: !2013, file: !2014, line: 344, baseType: !1486, size: 128, offset: 1152)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction", scope: !2013, file: !2014, line: 345, baseType: !2065, size: 192, offset: 1280)
!2065 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingReconstruction", file: !2014, line: 278, baseType: !2066)
!2066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingReconstruction", file: !2014, line: 270, size: 192, elements: !2067)
!2067 = !{!2068, !2069, !2070, !2071, !2072}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2066, file: !2014, line: 271, baseType: !1224, size: 32)
!2069 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !2066, file: !2014, line: 273, baseType: !1537, size: 32, offset: 32)
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "last_camera", scope: !2066, file: !2014, line: 275, baseType: !1224, size: 32, offset: 64)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "camnr", scope: !2066, file: !2014, line: 276, baseType: !1224, size: 32, offset: 96)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "cameras", scope: !2066, file: !2014, line: 277, baseType: !2073, size: 64, offset: 128)
!2073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2074, size: 64)
!2074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieReconstructedCamera", file: !2014, line: 55, size: 576, elements: !2075)
!2075 = !{!2076, !2077, !2078}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !2074, file: !2014, line: 56, baseType: !1224, size: 32)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !2074, file: !2014, line: 57, baseType: !1537, size: 32, offset: 32)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2074, file: !2014, line: 58, baseType: !1653, size: 512, offset: 64)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "stabilization", scope: !2013, file: !2014, line: 346, baseType: !2080, size: 384, offset: 1472)
!2080 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStabilization", file: !2014, line: 268, baseType: !2081)
!2081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStabilization", file: !2014, line: 253, size: 384, elements: !2082)
!2082 = !{!2083, !2084, !2085, !2086, !2087, !2131, !2132, !2133, !2134, !2135, !2136}
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2081, file: !2014, line: 254, baseType: !1224, size: 32)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "tot_track", scope: !2081, file: !2014, line: 255, baseType: !1224, size: 32, offset: 32)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !2081, file: !2014, line: 255, baseType: !1224, size: 32, offset: 64)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "maxscale", scope: !2081, file: !2014, line: 258, baseType: !1537, size: 32, offset: 96)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "rot_track", scope: !2081, file: !2014, line: 259, baseType: !2088, size: 64, offset: 128)
!2088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2089, size: 64)
!2089 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingTrack", file: !2014, line: 164, baseType: !2090)
!2090 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingTrack", file: !2014, line: 108, size: 1664, elements: !2091)
!2091 = !{!2092, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102, !2103, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130}
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2090, file: !2014, line: 109, baseType: !2093, size: 64)
!2093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2090, size: 64)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2090, file: !2014, line: 109, baseType: !2093, size: 64, offset: 64)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2090, file: !2014, line: 111, baseType: !1476, size: 512, offset: 128)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "pat_min", scope: !2090, file: !2014, line: 119, baseType: !1763, size: 64, offset: 640)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "pat_max", scope: !2090, file: !2014, line: 119, baseType: !1763, size: 64, offset: 704)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !2090, file: !2014, line: 125, baseType: !1763, size: 64, offset: 768)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !2090, file: !2014, line: 125, baseType: !1763, size: 64, offset: 832)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2090, file: !2014, line: 127, baseType: !1763, size: 64, offset: 896)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !2090, file: !2014, line: 130, baseType: !1224, size: 32, offset: 960)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !2090, file: !2014, line: 131, baseType: !1224, size: 32, offset: 992)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !2090, file: !2014, line: 132, baseType: !2104, size: 64, offset: 1024)
!2104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2105, size: 64)
!2105 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingMarker", file: !2014, line: 106, baseType: !2106)
!2106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingMarker", file: !2014, line: 81, size: 512, elements: !2107)
!2107 = !{!2108, !2109, !2112, !2113, !2114, !2115}
!2108 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2106, file: !2014, line: 82, baseType: !1763, size: 64)
!2109 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_corners", scope: !2106, file: !2014, line: 97, baseType: !2110, size: 256, offset: 64)
!2110 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1537, size: 256, elements: !2111)
!2111 = !{!1646, !1421}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !2106, file: !2014, line: 102, baseType: !1763, size: 64, offset: 320)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !2106, file: !2014, line: 102, baseType: !1763, size: 64, offset: 384)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !2106, file: !2014, line: 104, baseType: !1224, size: 32, offset: 448)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2106, file: !2014, line: 105, baseType: !1224, size: 32, offset: 480)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_pos", scope: !2090, file: !2014, line: 135, baseType: !1572, size: 96, offset: 1088)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !2090, file: !2014, line: 136, baseType: !1537, size: 32, offset: 1184)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2090, file: !2014, line: 139, baseType: !1224, size: 32, offset: 1216)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "pat_flag", scope: !2090, file: !2014, line: 139, baseType: !1224, size: 32, offset: 1248)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "search_flag", scope: !2090, file: !2014, line: 139, baseType: !1224, size: 32, offset: 1280)
!2121 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !2090, file: !2014, line: 140, baseType: !1572, size: 96, offset: 1312)
!2122 = !DIDerivedType(tag: DW_TAG_member, name: "frames_limit", scope: !2090, file: !2014, line: 143, baseType: !1460, size: 16, offset: 1408)
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !2090, file: !2014, line: 144, baseType: !1460, size: 16, offset: 1424)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_match", scope: !2090, file: !2014, line: 145, baseType: !1460, size: 16, offset: 1440)
!2125 = !DIDerivedType(tag: DW_TAG_member, name: "motion_model", scope: !2090, file: !2014, line: 148, baseType: !1460, size: 16, offset: 1456)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "algorithm_flag", scope: !2090, file: !2014, line: 149, baseType: !1224, size: 32, offset: 1472)
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "minimum_correlation", scope: !2090, file: !2014, line: 150, baseType: !1537, size: 32, offset: 1504)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !2090, file: !2014, line: 152, baseType: !1603, size: 64, offset: 1536)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2090, file: !2014, line: 163, baseType: !1537, size: 32, offset: 1600)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2090, file: !2014, line: 163, baseType: !1537, size: 32, offset: 1632)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "locinf", scope: !2081, file: !2014, line: 261, baseType: !1537, size: 32, offset: 192)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "scaleinf", scope: !2081, file: !2014, line: 261, baseType: !1537, size: 32, offset: 224)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "rotinf", scope: !2081, file: !2014, line: 261, baseType: !1537, size: 32, offset: 256)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2081, file: !2014, line: 263, baseType: !1224, size: 32, offset: 288)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2081, file: !2014, line: 266, baseType: !1224, size: 32, offset: 320)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !2081, file: !2014, line: 267, baseType: !1537, size: 32, offset: 352)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !2013, file: !2014, line: 347, baseType: !2088, size: 64, offset: 1856)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "act_plane_track", scope: !2013, file: !2014, line: 348, baseType: !2139, size: 64, offset: 1920)
!2139 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2140, size: 64)
!2140 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneTrack", file: !2014, line: 205, baseType: !2141)
!2141 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneTrack", file: !2014, line: 186, size: 1024, elements: !2142)
!2142 = !{!2143, !2145, !2146, !2147, !2149, !2150, !2151, !2159, !2160, !2161, !2235, !2236}
!2143 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2141, file: !2014, line: 187, baseType: !2144, size: 64)
!2144 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2141, size: 64)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2141, file: !2014, line: 187, baseType: !2144, size: 64, offset: 64)
!2146 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2141, file: !2014, line: 189, baseType: !1476, size: 512, offset: 128)
!2147 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracks", scope: !2141, file: !2014, line: 191, baseType: !2148, size: 64, offset: 640)
!2148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2088, size: 64)
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracksnr", scope: !2141, file: !2014, line: 193, baseType: !1224, size: 32, offset: 704)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2141, file: !2014, line: 193, baseType: !1224, size: 32, offset: 736)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !2141, file: !2014, line: 195, baseType: !2152, size: 64, offset: 768)
!2152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2153, size: 64)
!2153 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneMarker", file: !2014, line: 184, baseType: !2154)
!2154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneMarker", file: !2014, line: 166, size: 320, elements: !2155)
!2155 = !{!2156, !2157, !2158}
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "corners", scope: !2154, file: !2014, line: 180, baseType: !2110, size: 256)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !2154, file: !2014, line: 182, baseType: !1224, size: 32, offset: 256)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2154, file: !2014, line: 183, baseType: !1224, size: 32, offset: 288)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !2141, file: !2014, line: 196, baseType: !1224, size: 32, offset: 832)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2141, file: !2014, line: 198, baseType: !1224, size: 32, offset: 864)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !2141, file: !2014, line: 200, baseType: !2162, size: 64, offset: 896)
!2162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2163, size: 64)
!2163 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !1767, line: 77, size: 15424, elements: !2164)
!2164 = !{!2165, !2166, !2167, !2170, !2173, !2174, !2177, !2180, !2181, !2182, !2183, !2184, !2185, !2186, !2187, !2188, !2189, !2190, !2191, !2192, !2193, !2194, !2196, !2197, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2229}
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2163, file: !1767, line: 78, baseType: !1428, size: 960)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2163, file: !1767, line: 80, baseType: !1446, size: 8192, offset: 960)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !2163, file: !1767, line: 82, baseType: !2168, size: 64, offset: 9152)
!2168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2169, size: 64)
!2169 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !1767, line: 43, flags: DIFlagFwdDecl)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !2163, file: !1767, line: 83, baseType: !2171, size: 64, offset: 9216)
!2171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2172, size: 64)
!2172 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !1429, line: 46, flags: DIFlagFwdDecl)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !2163, file: !1767, line: 86, baseType: !1952, size: 64, offset: 9280)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !2163, file: !1767, line: 87, baseType: !2175, size: 64, offset: 9344)
!2175 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2176, size: 64)
!2176 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !1767, line: 44, flags: DIFlagFwdDecl)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !2163, file: !1767, line: 89, baseType: !2178, size: 512, offset: 9408)
!2178 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2175, size: 512, elements: !2179)
!2179 = !{!1539}
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !2163, file: !1767, line: 90, baseType: !1460, size: 16, offset: 9920)
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !2163, file: !1767, line: 90, baseType: !1460, size: 16, offset: 9936)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2163, file: !1767, line: 92, baseType: !1460, size: 16, offset: 9952)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2163, file: !1767, line: 92, baseType: !1460, size: 16, offset: 9968)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2163, file: !1767, line: 93, baseType: !1460, size: 16, offset: 9984)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2163, file: !1767, line: 93, baseType: !1460, size: 16, offset: 10000)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !2163, file: !1767, line: 94, baseType: !1224, size: 32, offset: 10016)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !2163, file: !1767, line: 97, baseType: !1460, size: 16, offset: 10048)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !2163, file: !1767, line: 97, baseType: !1460, size: 16, offset: 10064)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !2163, file: !1767, line: 98, baseType: !1460, size: 16, offset: 10080)
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !2163, file: !1767, line: 98, baseType: !1460, size: 16, offset: 10096)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !2163, file: !1767, line: 99, baseType: !1460, size: 16, offset: 10112)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !2163, file: !1767, line: 99, baseType: !1460, size: 16, offset: 10128)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !2163, file: !1767, line: 100, baseType: !7, size: 32, offset: 10144)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !2163, file: !1767, line: 101, baseType: !2195, size: 64, offset: 10176)
!2195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !2163, file: !1767, line: 103, baseType: !1453, size: 64, offset: 10240)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !2163, file: !1767, line: 104, baseType: !2198, size: 64, offset: 10304)
!2198 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2199, size: 64)
!2199 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !1429, line: 159, size: 448, elements: !2200)
!2200 = !{!2201, !2203, !2204, !2206, !2207, !2209}
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !2199, file: !1429, line: 161, baseType: !2202, size: 64)
!2202 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !1420)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !2199, file: !1429, line: 162, baseType: !2202, size: 64, offset: 64)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !2199, file: !1429, line: 163, baseType: !2205, size: 32, offset: 128)
!2205 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1460, size: 32, elements: !1420)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !2199, file: !1429, line: 164, baseType: !2205, size: 32, offset: 160)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !2199, file: !1429, line: 165, baseType: !2208, size: 128, offset: 192)
!2208 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2195, size: 128, elements: !1420)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !2199, file: !1429, line: 166, baseType: !2210, size: 128, offset: 320)
!2210 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2171, size: 128, elements: !1420)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !2163, file: !1767, line: 107, baseType: !1537, size: 32, offset: 10368)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !2163, file: !1767, line: 108, baseType: !1224, size: 32, offset: 10400)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !2163, file: !1767, line: 109, baseType: !1460, size: 16, offset: 10432)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2163, file: !1767, line: 110, baseType: !1460, size: 16, offset: 10448)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !2163, file: !1767, line: 113, baseType: !1224, size: 32, offset: 10464)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !2163, file: !1767, line: 113, baseType: !1224, size: 32, offset: 10496)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !2163, file: !1767, line: 114, baseType: !1447, size: 8, offset: 10528)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !2163, file: !1767, line: 114, baseType: !1447, size: 8, offset: 10536)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !2163, file: !1767, line: 115, baseType: !1460, size: 16, offset: 10544)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !2163, file: !1767, line: 116, baseType: !1644, size: 128, offset: 10560)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !2163, file: !1767, line: 119, baseType: !1537, size: 32, offset: 10688)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !2163, file: !1767, line: 119, baseType: !1537, size: 32, offset: 10720)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !2163, file: !1767, line: 122, baseType: !1985, size: 512, offset: 10752)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !2163, file: !1767, line: 123, baseType: !1447, size: 8, offset: 11264)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2163, file: !1767, line: 125, baseType: !2226, size: 56, offset: 11272)
!2226 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1447, size: 56, elements: !2227)
!2227 = !{!2228}
!2228 = !DISubrange(count: 7)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !2163, file: !1767, line: 126, baseType: !2230, size: 4096, offset: 11328)
!2230 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2231, size: 4096, elements: !2179)
!2231 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !1767, line: 69, baseType: !2232)
!2232 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !1767, line: 67, size: 512, elements: !2233)
!2233 = !{!2234}
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2232, file: !1767, line: 68, baseType: !1476, size: 512)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "image_opacity", scope: !2141, file: !2014, line: 201, baseType: !1537, size: 32, offset: 960)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !2141, file: !2014, line: 204, baseType: !1224, size: 32, offset: 992)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !2013, file: !2014, line: 350, baseType: !1486, size: 128, offset: 1984)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "objectnr", scope: !2013, file: !2014, line: 351, baseType: !1224, size: 32, offset: 2112)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "tot_object", scope: !2013, file: !2014, line: 351, baseType: !1224, size: 32, offset: 2144)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !2013, file: !2014, line: 353, baseType: !2241, size: 64, offset: 2176)
!2241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2242, size: 64)
!2242 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStats", file: !2014, line: 297, baseType: !2243)
!2243 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStats", file: !2014, line: 295, size: 2048, elements: !2244)
!2244 = !{!2245}
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !2243, file: !2014, line: 296, baseType: !1935, size: 2048)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "dopesheet", scope: !2013, file: !2014, line: 355, baseType: !2247, size: 384, offset: 2240)
!2247 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingDopesheet", file: !2014, line: 338, baseType: !2248)
!2248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingDopesheet", file: !2014, line: 322, size: 384, elements: !2249)
!2249 = !{!2250, !2251, !2252, !2253, !2254, !2255, !2256}
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !2248, file: !2014, line: 323, baseType: !1224, size: 32)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "sort_method", scope: !2248, file: !2014, line: 325, baseType: !1460, size: 16, offset: 32)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2248, file: !2014, line: 326, baseType: !1460, size: 16, offset: 48)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "coverage_segments", scope: !2248, file: !2014, line: 331, baseType: !1486, size: 128, offset: 64)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !2248, file: !2014, line: 334, baseType: !1486, size: 128, offset: 192)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "tot_channel", scope: !2248, file: !2014, line: 335, baseType: !1224, size: 32, offset: 320)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2248, file: !2014, line: 337, baseType: !1224, size: 32, offset: 352)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "tracking_context", scope: !1995, file: !1996, line: 81, baseType: !1391, size: 64, offset: 12224)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !1995, file: !1996, line: 85, baseType: !2259, size: 6208, offset: 12288)
!2259 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipProxy", file: !1996, line: 55, size: 6208, elements: !2260)
!2260 = !{!2261, !2262, !2263, !2264, !2265}
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2259, file: !1996, line: 56, baseType: !1941, size: 6144)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !2259, file: !1996, line: 58, baseType: !1460, size: 16, offset: 6144)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2259, file: !1996, line: 59, baseType: !1460, size: 16, offset: 6160)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flag", scope: !2259, file: !1996, line: 60, baseType: !1460, size: 16, offset: 6176)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flag", scope: !2259, file: !1996, line: 61, baseType: !1460, size: 16, offset: 6192)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1995, file: !1996, line: 86, baseType: !1224, size: 32, offset: 18496)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1995, file: !1996, line: 88, baseType: !1224, size: 32, offset: 18528)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1995, file: !1996, line: 90, baseType: !1224, size: 32, offset: 18560)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "frame_offset", scope: !1995, file: !1996, line: 94, baseType: !1224, size: 32, offset: 18592)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1995, file: !1996, line: 100, baseType: !1985, size: 512, offset: 18624)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !1890, file: !1882, line: 154, baseType: !2272, size: 64, offset: 1664)
!2272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2273, size: 64)
!2273 = !DICompositeType(tag: DW_TAG_structure_type, name: "Mask", file: !1416, line: 264, flags: DIFlagFwdDecl)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1890, file: !1882, line: 156, baseType: !1952, size: 64, offset: 1728)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "effect_fader", scope: !1890, file: !1882, line: 158, baseType: !1537, size: 32, offset: 1792)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "speed_fader", scope: !1890, file: !1882, line: 159, baseType: !1537, size: 32, offset: 1824)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "seq1", scope: !1890, file: !1882, line: 162, baseType: !1893, size: 64, offset: 1856)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "seq2", scope: !1890, file: !1882, line: 162, baseType: !1893, size: 64, offset: 1920)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "seq3", scope: !1890, file: !1882, line: 162, baseType: !1893, size: 64, offset: 1984)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !1890, file: !1882, line: 164, baseType: !1486, size: 128, offset: 2048)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !1890, file: !1882, line: 166, baseType: !2282, size: 64, offset: 2176)
!2282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2283, size: 64)
!2283 = !DICompositeType(tag: DW_TAG_structure_type, name: "bSound", file: !1882, line: 51, flags: DIFlagFwdDecl)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "scene_sound", scope: !1890, file: !1882, line: 167, baseType: !1391, size: 64, offset: 2240)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1890, file: !1882, line: 168, baseType: !1537, size: 32, offset: 2304)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "pitch", scope: !1890, file: !1882, line: 170, baseType: !1537, size: 32, offset: 2336)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "pan", scope: !1890, file: !1882, line: 170, baseType: !1537, size: 32, offset: 2368)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "strobe", scope: !1890, file: !1882, line: 171, baseType: !1537, size: 32, offset: 2400)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "effectdata", scope: !1890, file: !1882, line: 173, baseType: !1391, size: 64, offset: 2432)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "anim_startofs", scope: !1890, file: !1882, line: 175, baseType: !1224, size: 32, offset: 2496)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "anim_endofs", scope: !1890, file: !1882, line: 176, baseType: !1224, size: 32, offset: 2528)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "blend_mode", scope: !1890, file: !1882, line: 179, baseType: !1224, size: 32, offset: 2560)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "blend_opacity", scope: !1890, file: !1882, line: 180, baseType: !1537, size: 32, offset: 2592)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1890, file: !1882, line: 183, baseType: !1224, size: 32, offset: 2624)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !1890, file: !1882, line: 185, baseType: !1447, size: 8, offset: 2656)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1890, file: !1882, line: 186, baseType: !2297, size: 24, offset: 2664)
!2297 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1447, size: 24, elements: !1573)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !1890, file: !1882, line: 189, baseType: !1486, size: 128, offset: 2688)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "act_imagedir", scope: !1881, file: !1882, line: 207, baseType: !1446, size: 8192, offset: 384)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "act_sounddir", scope: !1881, file: !1882, line: 208, baseType: !1446, size: 8192, offset: 8576)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "over_ofs", scope: !1881, file: !1882, line: 210, baseType: !1224, size: 32, offset: 16768)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "over_cfra", scope: !1881, file: !1882, line: 210, baseType: !1224, size: 32, offset: 16800)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "over_flag", scope: !1881, file: !1882, line: 211, baseType: !1224, size: 32, offset: 16832)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1881, file: !1882, line: 211, baseType: !1224, size: 32, offset: 16864)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "over_border", scope: !1881, file: !1882, line: 212, baseType: !1840, size: 128, offset: 16896)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !1772, file: !1773, line: 1246, baseType: !2307, size: 64, offset: 2112)
!2307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2308, size: 64)
!2308 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !1773, line: 1067, size: 5184, elements: !2309)
!2309 = !{!2310, !2340, !2341, !2356, !2362, !2363, !2364, !2365, !2366, !2367, !2368, !2369, !2370, !2371, !2372, !2373, !2374, !2378, !2394, !2421, !2422, !2423, !2424, !2425, !2426, !2427, !2428, !2429, !2430, !2431, !2432, !2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2441, !2442, !2443, !2444, !2445, !2446, !2447, !2448, !2449, !2451, !2452, !2453, !2454, !2455, !2456, !2457, !2458, !2459, !2460, !2461, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472, !2473, !2474, !2475, !2476, !2504}
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !2308, file: !1773, line: 1068, baseType: !2311, size: 64)
!2311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2312, size: 64)
!2312 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !1773, line: 934, baseType: !2313)
!2313 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !1773, line: 925, size: 576, elements: !2314)
!2314 = !{!2315, !2332, !2333, !2334, !2335, !2336, !2339}
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2313, file: !1773, line: 926, baseType: !2316, size: 320)
!2316 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !1773, line: 830, baseType: !2317)
!2317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !1773, line: 813, size: 320, elements: !2318)
!2318 = !{!2319, !2322, !2325, !2326, !2329, !2330, !2331}
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !2317, file: !1773, line: 814, baseType: !2320, size: 64)
!2320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2321, size: 64)
!2321 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !1773, line: 51, flags: DIFlagFwdDecl)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !2317, file: !1773, line: 815, baseType: !2323, size: 64, offset: 64)
!2323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2324, size: 64)
!2324 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !1773, line: 815, flags: DIFlagFwdDecl)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !2317, file: !1773, line: 818, baseType: !1391, size: 64, offset: 128)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !2317, file: !1773, line: 819, baseType: !2327, size: 32, offset: 192)
!2327 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2328, size: 32, elements: !1645)
!2328 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2317, file: !1773, line: 822, baseType: !1224, size: 32, offset: 224)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !2317, file: !1773, line: 826, baseType: !1224, size: 32, offset: 256)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !2317, file: !1773, line: 829, baseType: !1224, size: 32, offset: 288)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2313, file: !1773, line: 928, baseType: !1460, size: 16, offset: 320)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2313, file: !1773, line: 928, baseType: !1460, size: 16, offset: 336)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !2313, file: !1773, line: 929, baseType: !1224, size: 32, offset: 352)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !2313, file: !1773, line: 930, baseType: !2195, size: 64, offset: 384)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !2313, file: !1773, line: 931, baseType: !2337, size: 64, offset: 448)
!2337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2338, size: 64)
!2338 = !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !1773, line: 931, flags: DIFlagFwdDecl)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !2313, file: !1773, line: 933, baseType: !1391, size: 64, offset: 512)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !2308, file: !1773, line: 1069, baseType: !2311, size: 64, offset: 64)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !2308, file: !1773, line: 1070, baseType: !2342, size: 64, offset: 128)
!2342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2343, size: 64)
!2343 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !1773, line: 916, baseType: !2344)
!2344 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !1773, line: 891, size: 704, elements: !2345)
!2345 = !{!2346, !2347, !2348, !2350, !2351, !2352, !2353, !2354, !2355}
!2346 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2344, file: !1773, line: 892, baseType: !2316, size: 320)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2344, file: !1773, line: 896, baseType: !1224, size: 32, offset: 320)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !2344, file: !1773, line: 900, baseType: !2349, size: 96, offset: 352)
!2349 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1224, size: 96, elements: !1573)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !2344, file: !1773, line: 903, baseType: !1537, size: 32, offset: 448)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !2344, file: !1773, line: 906, baseType: !1224, size: 32, offset: 480)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !2344, file: !1773, line: 909, baseType: !1537, size: 32, offset: 512)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !2344, file: !1773, line: 912, baseType: !1537, size: 32, offset: 544)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !2344, file: !1773, line: 914, baseType: !1523, size: 64, offset: 576)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2344, file: !1773, line: 915, baseType: !1391, size: 64, offset: 640)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !2308, file: !1773, line: 1071, baseType: !2357, size: 64, offset: 192)
!2357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2358, size: 64)
!2358 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !1773, line: 920, baseType: !2359)
!2359 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !1773, line: 918, size: 320, elements: !2360)
!2360 = !{!2361}
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2359, file: !1773, line: 919, baseType: !2316, size: 320)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !2308, file: !1773, line: 1075, baseType: !1537, size: 32, offset: 256)
!2363 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !2308, file: !1773, line: 1077, baseType: !1537, size: 32, offset: 288)
!2364 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !2308, file: !1773, line: 1078, baseType: !1537, size: 32, offset: 320)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !2308, file: !1773, line: 1079, baseType: !1460, size: 16, offset: 352)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !2308, file: !1773, line: 1082, baseType: !1460, size: 16, offset: 368)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !2308, file: !1773, line: 1085, baseType: !1447, size: 8, offset: 384)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !2308, file: !1773, line: 1086, baseType: !1447, size: 8, offset: 392)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !2308, file: !1773, line: 1087, baseType: !1447, size: 8, offset: 400)
!2370 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !2308, file: !1773, line: 1088, baseType: !1447, size: 8, offset: 408)
!2371 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !2308, file: !1773, line: 1090, baseType: !1537, size: 32, offset: 416)
!2372 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !2308, file: !1773, line: 1093, baseType: !1460, size: 16, offset: 448)
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !2308, file: !1773, line: 1096, baseType: !1447, size: 8, offset: 464)
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2308, file: !1773, line: 1098, baseType: !2375, size: 40, offset: 472)
!2375 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1447, size: 40, elements: !2376)
!2376 = !{!2377}
!2377 = !DISubrange(count: 5)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !2308, file: !1773, line: 1101, baseType: !2379, size: 832, offset: 512)
!2379 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !1773, line: 836, size: 832, elements: !2380)
!2380 = !{!2381, !2382, !2383, !2384, !2385, !2386, !2387, !2388, !2389, !2390, !2391, !2392, !2393}
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !2379, file: !1773, line: 837, baseType: !2316, size: 320)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2379, file: !1773, line: 839, baseType: !1460, size: 16, offset: 320)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !2379, file: !1773, line: 839, baseType: !1460, size: 16, offset: 336)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !2379, file: !1773, line: 842, baseType: !1460, size: 16, offset: 352)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !2379, file: !1773, line: 842, baseType: !1460, size: 16, offset: 368)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !2379, file: !1773, line: 843, baseType: !2205, size: 32, offset: 384)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2379, file: !1773, line: 845, baseType: !1224, size: 32, offset: 416)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !2379, file: !1773, line: 847, baseType: !1391, size: 64, offset: 448)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !2379, file: !1773, line: 848, baseType: !2162, size: 64, offset: 512)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !2379, file: !1773, line: 849, baseType: !2162, size: 64, offset: 576)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !2379, file: !1773, line: 850, baseType: !2162, size: 64, offset: 640)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !2379, file: !1773, line: 851, baseType: !1572, size: 96, offset: 704)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2379, file: !1773, line: 852, baseType: !1537, size: 32, offset: 800)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !2308, file: !1773, line: 1104, baseType: !2395, size: 1344, offset: 1344)
!2395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !1773, line: 867, size: 1344, elements: !2396)
!2396 = !{!2397, !2398, !2399, !2400, !2401, !2412, !2413, !2414, !2415, !2416, !2417, !2418, !2419, !2420}
!2397 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2395, file: !1773, line: 868, baseType: !1460, size: 16)
!2398 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !2395, file: !1773, line: 869, baseType: !1460, size: 16, offset: 16)
!2399 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !2395, file: !1773, line: 870, baseType: !1460, size: 16, offset: 32)
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !2395, file: !1773, line: 871, baseType: !1460, size: 16, offset: 48)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !2395, file: !1773, line: 873, baseType: !2402, size: 896, offset: 64)
!2402 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2403, size: 896, elements: !2227)
!2403 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !1773, line: 864, baseType: !2404)
!2404 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !1773, line: 859, size: 128, elements: !2405)
!2405 = !{!2406, !2407, !2408, !2409, !2410, !2411}
!2406 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2404, file: !1773, line: 860, baseType: !1460, size: 16)
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !2404, file: !1773, line: 861, baseType: !1460, size: 16, offset: 16)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !2404, file: !1773, line: 861, baseType: !1460, size: 16, offset: 32)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2404, file: !1773, line: 861, baseType: !1460, size: 16, offset: 48)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2404, file: !1773, line: 862, baseType: !1224, size: 32, offset: 64)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !2404, file: !1773, line: 863, baseType: !1537, size: 32, offset: 96)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !2395, file: !1773, line: 874, baseType: !1391, size: 64, offset: 960)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !2395, file: !1773, line: 876, baseType: !1537, size: 32, offset: 1024)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2395, file: !1773, line: 876, baseType: !1537, size: 32, offset: 1056)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !2395, file: !1773, line: 878, baseType: !1224, size: 32, offset: 1088)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !2395, file: !1773, line: 879, baseType: !1224, size: 32, offset: 1120)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !2395, file: !1773, line: 881, baseType: !1224, size: 32, offset: 1152)
!2418 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !2395, file: !1773, line: 881, baseType: !1224, size: 32, offset: 1184)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2395, file: !1773, line: 883, baseType: !1771, size: 64, offset: 1216)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2395, file: !1773, line: 884, baseType: !1523, size: 64, offset: 1280)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !2308, file: !1773, line: 1107, baseType: !1537, size: 32, offset: 2688)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !2308, file: !1773, line: 1110, baseType: !1537, size: 32, offset: 2720)
!2423 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !2308, file: !1773, line: 1113, baseType: !1460, size: 16, offset: 2752)
!2424 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !2308, file: !1773, line: 1113, baseType: !1460, size: 16, offset: 2768)
!2425 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !2308, file: !1773, line: 1116, baseType: !1447, size: 8, offset: 2784)
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2308, file: !1773, line: 1117, baseType: !1806, size: 8, offset: 2792)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !2308, file: !1773, line: 1120, baseType: !1460, size: 16, offset: 2800)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !2308, file: !1773, line: 1121, baseType: !1537, size: 32, offset: 2816)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !2308, file: !1773, line: 1122, baseType: !1537, size: 32, offset: 2848)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !2308, file: !1773, line: 1123, baseType: !1537, size: 32, offset: 2880)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !2308, file: !1773, line: 1124, baseType: !1537, size: 32, offset: 2912)
!2432 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !2308, file: !1773, line: 1125, baseType: !1537, size: 32, offset: 2944)
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !2308, file: !1773, line: 1126, baseType: !1537, size: 32, offset: 2976)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !2308, file: !1773, line: 1127, baseType: !1537, size: 32, offset: 3008)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !2308, file: !1773, line: 1128, baseType: !1537, size: 32, offset: 3040)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !2308, file: !1773, line: 1129, baseType: !1537, size: 32, offset: 3072)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !2308, file: !1773, line: 1130, baseType: !1537, size: 32, offset: 3104)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !2308, file: !1773, line: 1131, baseType: !1460, size: 16, offset: 3136)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !2308, file: !1773, line: 1132, baseType: !1447, size: 8, offset: 3152)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !2308, file: !1773, line: 1133, baseType: !1447, size: 8, offset: 3160)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !2308, file: !1773, line: 1134, baseType: !2297, size: 24, offset: 3168)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !2308, file: !1773, line: 1135, baseType: !1447, size: 8, offset: 3192)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !2308, file: !1773, line: 1138, baseType: !1523, size: 64, offset: 3200)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !2308, file: !1773, line: 1139, baseType: !1447, size: 8, offset: 3264)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !2308, file: !1773, line: 1140, baseType: !1447, size: 8, offset: 3272)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !2308, file: !1773, line: 1141, baseType: !1447, size: 8, offset: 3280)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !2308, file: !1773, line: 1142, baseType: !1447, size: 8, offset: 3288)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !2308, file: !1773, line: 1143, baseType: !1447, size: 8, offset: 3296)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !2308, file: !1773, line: 1144, baseType: !2450, size: 64, offset: 3304)
!2450 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1447, size: 64, elements: !2179)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !2308, file: !1773, line: 1145, baseType: !2450, size: 64, offset: 3368)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !2308, file: !1773, line: 1148, baseType: !1447, size: 8, offset: 3432)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !2308, file: !1773, line: 1149, baseType: !1447, size: 8, offset: 3440)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !2308, file: !1773, line: 1152, baseType: !1447, size: 8, offset: 3448)
!2455 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !2308, file: !1773, line: 1152, baseType: !1447, size: 8, offset: 3456)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !2308, file: !1773, line: 1153, baseType: !1447, size: 8, offset: 3464)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !2308, file: !1773, line: 1154, baseType: !1460, size: 16, offset: 3472)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !2308, file: !1773, line: 1154, baseType: !1460, size: 16, offset: 3488)
!2459 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !2308, file: !1773, line: 1155, baseType: !1460, size: 16, offset: 3504)
!2460 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !2308, file: !1773, line: 1155, baseType: !1460, size: 16, offset: 3520)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !2308, file: !1773, line: 1156, baseType: !1447, size: 8, offset: 3536)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !2308, file: !1773, line: 1157, baseType: !1447, size: 8, offset: 3544)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !2308, file: !1773, line: 1159, baseType: !1447, size: 8, offset: 3552)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !2308, file: !1773, line: 1160, baseType: !1447, size: 8, offset: 3560)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !2308, file: !1773, line: 1161, baseType: !1447, size: 8, offset: 3568)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !2308, file: !1773, line: 1162, baseType: !1447, size: 8, offset: 3576)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !2308, file: !1773, line: 1165, baseType: !1224, size: 32, offset: 3584)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !2308, file: !1773, line: 1166, baseType: !1224, size: 32, offset: 3616)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !2308, file: !1773, line: 1167, baseType: !1224, size: 32, offset: 3648)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !2308, file: !1773, line: 1168, baseType: !1224, size: 32, offset: 3680)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !2308, file: !1773, line: 1171, baseType: !1460, size: 16, offset: 3712)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !2308, file: !1773, line: 1171, baseType: !1460, size: 16, offset: 3728)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !2308, file: !1773, line: 1172, baseType: !1224, size: 32, offset: 3744)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !2308, file: !1773, line: 1173, baseType: !1537, size: 32, offset: 3776)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !2308, file: !1773, line: 1174, baseType: !1537, size: 32, offset: 3808)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !2308, file: !1773, line: 1177, baseType: !2477, size: 1024, offset: 3840)
!2477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !1773, line: 963, size: 1024, elements: !2478)
!2478 = !{!2479, !2480, !2481, !2482, !2483, !2484, !2485, !2486, !2487, !2488, !2489, !2490, !2491, !2492, !2493, !2494, !2495, !2496, !2497, !2498, !2499, !2502, !2503}
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2477, file: !1773, line: 965, baseType: !1224, size: 32)
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !2477, file: !1773, line: 968, baseType: !1537, size: 32, offset: 32)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !2477, file: !1773, line: 971, baseType: !1537, size: 32, offset: 64)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !2477, file: !1773, line: 974, baseType: !1537, size: 32, offset: 96)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !2477, file: !1773, line: 977, baseType: !1572, size: 96, offset: 128)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !2477, file: !1773, line: 979, baseType: !1572, size: 96, offset: 224)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2477, file: !1773, line: 982, baseType: !1224, size: 32, offset: 320)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !2477, file: !1773, line: 987, baseType: !1763, size: 64, offset: 352)
!2487 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !2477, file: !1773, line: 989, baseType: !1537, size: 32, offset: 416)
!2488 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !2477, file: !1773, line: 994, baseType: !1224, size: 32, offset: 448)
!2489 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !2477, file: !1773, line: 995, baseType: !1224, size: 32, offset: 480)
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !2477, file: !1773, line: 997, baseType: !1447, size: 8, offset: 512)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2477, file: !1773, line: 998, baseType: !2226, size: 56, offset: 520)
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !2477, file: !1773, line: 1000, baseType: !1537, size: 32, offset: 576)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !2477, file: !1773, line: 1003, baseType: !1763, size: 64, offset: 608)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !2477, file: !1773, line: 1006, baseType: !1224, size: 32, offset: 672)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !2477, file: !1773, line: 1009, baseType: !1537, size: 32, offset: 704)
!2496 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !2477, file: !1773, line: 1012, baseType: !1763, size: 64, offset: 736)
!2497 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !2477, file: !1773, line: 1015, baseType: !1763, size: 64, offset: 800)
!2498 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !2477, file: !1773, line: 1018, baseType: !1224, size: 32, offset: 864)
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !2477, file: !1773, line: 1019, baseType: !2500, size: 64, offset: 896)
!2500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2501, size: 64)
!2501 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !1773, line: 63, flags: DIFlagFwdDecl)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !2477, file: !1773, line: 1023, baseType: !1537, size: 32, offset: 960)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2477, file: !1773, line: 1024, baseType: !1224, size: 32, offset: 992)
!2504 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !2308, file: !1773, line: 1179, baseType: !2505, size: 320, offset: 4864)
!2505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !1773, line: 1043, size: 320, elements: !2506)
!2506 = !{!2507, !2508, !2510, !2511, !2512, !2513, !2514, !2515, !2516, !2517, !2518, !2519, !2520}
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2505, file: !1773, line: 1044, baseType: !1447, size: 8)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !2505, file: !1773, line: 1045, baseType: !2509, size: 16, offset: 8)
!2509 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1447, size: 16, elements: !1420)
!2510 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !2505, file: !1773, line: 1048, baseType: !1447, size: 8, offset: 24)
!2511 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !2505, file: !1773, line: 1049, baseType: !1537, size: 32, offset: 32)
!2512 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !2505, file: !1773, line: 1049, baseType: !1537, size: 32, offset: 64)
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !2505, file: !1773, line: 1052, baseType: !1537, size: 32, offset: 96)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !2505, file: !1773, line: 1052, baseType: !1537, size: 32, offset: 128)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !2505, file: !1773, line: 1053, baseType: !1447, size: 8, offset: 160)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !2505, file: !1773, line: 1054, baseType: !2297, size: 24, offset: 168)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !2505, file: !1773, line: 1057, baseType: !1537, size: 32, offset: 192)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !2505, file: !1773, line: 1057, baseType: !1537, size: 32, offset: 224)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !2505, file: !1773, line: 1060, baseType: !1537, size: 32, offset: 256)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !2505, file: !1773, line: 1060, baseType: !1537, size: 32, offset: 288)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !1772, file: !1773, line: 1247, baseType: !2522, size: 64, offset: 2176)
!2522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2523, size: 64)
!2523 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !1773, line: 60, flags: DIFlagFwdDecl)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1772, file: !1773, line: 1251, baseType: !2525, size: 31872, offset: 2240)
!2525 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !1773, line: 403, size: 31872, elements: !2526)
!2526 = !{!2527, !2602, !2622, !2631, !2651, !2671, !2672, !2673, !2674, !2675, !2676, !2677, !2678, !2679, !2680, !2681, !2682, !2683, !2684, !2685, !2686, !2687, !2688, !2689, !2690, !2691, !2692, !2693, !2694, !2695, !2696, !2697, !2698, !2699, !2700, !2701, !2702, !2703, !2704, !2705, !2706, !2707, !2708, !2709, !2710, !2711, !2712, !2713, !2714, !2715, !2716, !2717, !2718, !2719, !2720, !2721, !2722, !2723, !2724, !2725, !2733, !2734, !2735, !2736, !2737, !2738, !2739, !2740, !2741, !2742, !2743, !2744, !2745, !2746, !2747, !2748, !2749, !2750, !2751, !2752, !2753, !2754, !2755, !2756, !2757, !2758, !2759, !2760, !2761, !2762, !2763, !2764, !2765, !2766, !2767, !2768, !2769, !2770, !2771, !2772, !2773, !2774, !2775, !2776, !2777, !2778, !2779, !2780, !2781, !2782, !2783, !2784, !2785, !2789, !2790, !2791, !2795, !2811, !2812}
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !2525, file: !1773, line: 404, baseType: !2528, size: 1984)
!2528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !1773, line: 259, size: 1984, elements: !2529)
!2529 = !{!2530, !2531, !2532, !2533, !2534, !2535, !2536, !2537, !2538, !2539, !2540, !2541, !2542, !2543, !2547, !2597}
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !2528, file: !1773, line: 260, baseType: !1447, size: 8)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2528, file: !1773, line: 263, baseType: !1447, size: 8, offset: 8)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !2528, file: !1773, line: 266, baseType: !1447, size: 8, offset: 16)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2528, file: !1773, line: 267, baseType: !1447, size: 8, offset: 24)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2528, file: !1773, line: 269, baseType: !1447, size: 8, offset: 32)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !2528, file: !1773, line: 270, baseType: !1447, size: 8, offset: 40)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !2528, file: !1773, line: 276, baseType: !1447, size: 8, offset: 48)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !2528, file: !1773, line: 279, baseType: !1447, size: 8, offset: 56)
!2538 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !2528, file: !1773, line: 280, baseType: !1460, size: 16, offset: 64)
!2539 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !2528, file: !1773, line: 280, baseType: !1460, size: 16, offset: 80)
!2540 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !2528, file: !1773, line: 281, baseType: !1537, size: 32, offset: 96)
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !2528, file: !1773, line: 284, baseType: !1447, size: 8, offset: 128)
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !2528, file: !1773, line: 285, baseType: !1447, size: 8, offset: 136)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2528, file: !1773, line: 287, baseType: !2544, size: 48, offset: 144)
!2544 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1447, size: 48, elements: !2545)
!2545 = !{!2546}
!2546 = !DISubrange(count: 6)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !2528, file: !1773, line: 290, baseType: !2548, size: 1280, offset: 192)
!2548 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !1986, line: 174, baseType: !2549)
!2549 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !1986, line: 166, size: 1280, elements: !2550)
!2550 = !{!2551, !2552, !2553, !2554, !2555, !2556, !2557, !2596}
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2549, file: !1986, line: 167, baseType: !1224, size: 32)
!2552 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2549, file: !1986, line: 167, baseType: !1224, size: 32, offset: 32)
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !2549, file: !1986, line: 168, baseType: !1476, size: 512, offset: 64)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !2549, file: !1986, line: 169, baseType: !1476, size: 512, offset: 576)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !2549, file: !1986, line: 170, baseType: !1537, size: 32, offset: 1088)
!2556 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !2549, file: !1986, line: 171, baseType: !1537, size: 32, offset: 1120)
!2557 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !2549, file: !1986, line: 172, baseType: !2558, size: 64, offset: 1152)
!2558 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2559, size: 64)
!2559 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !1986, line: 72, size: 3072, elements: !2560)
!2560 = !{!2561, !2562, !2563, !2564, !2565, !2566, !2567, !2592, !2593, !2594, !2595}
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2559, file: !1986, line: 73, baseType: !1224, size: 32)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !2559, file: !1986, line: 73, baseType: !1224, size: 32, offset: 32)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !2559, file: !1986, line: 74, baseType: !1224, size: 32, offset: 64)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !2559, file: !1986, line: 75, baseType: !1224, size: 32, offset: 96)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !2559, file: !1986, line: 77, baseType: !1840, size: 128, offset: 128)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !2559, file: !1986, line: 77, baseType: !1840, size: 128, offset: 256)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !2559, file: !1986, line: 79, baseType: !2568, size: 2304, offset: 384)
!2568 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2569, size: 2304, elements: !1645)
!2569 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !1986, line: 67, baseType: !2570)
!2570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !1986, line: 55, size: 576, elements: !2571)
!2571 = !{!2572, !2573, !2574, !2575, !2576, !2577, !2578, !2579, !2588, !2589, !2590, !2591}
!2572 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !2570, file: !1986, line: 56, baseType: !1460, size: 16)
!2573 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2570, file: !1986, line: 56, baseType: !1460, size: 16, offset: 16)
!2574 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !2570, file: !1986, line: 58, baseType: !1537, size: 32, offset: 32)
!2575 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !2570, file: !1986, line: 59, baseType: !1537, size: 32, offset: 64)
!2576 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !2570, file: !1986, line: 59, baseType: !1537, size: 32, offset: 96)
!2577 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !2570, file: !1986, line: 60, baseType: !1763, size: 64, offset: 128)
!2578 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !2570, file: !1986, line: 60, baseType: !1763, size: 64, offset: 192)
!2579 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !2570, file: !1986, line: 61, baseType: !2580, size: 64, offset: 256)
!2580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2581, size: 64)
!2581 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !1986, line: 47, baseType: !2582)
!2582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !1986, line: 44, size: 96, elements: !2583)
!2583 = !{!2584, !2585, !2586, !2587}
!2584 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2582, file: !1986, line: 45, baseType: !1537, size: 32)
!2585 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !2582, file: !1986, line: 45, baseType: !1537, size: 32, offset: 32)
!2586 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2582, file: !1986, line: 46, baseType: !1460, size: 16, offset: 64)
!2587 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !2582, file: !1986, line: 46, baseType: !1460, size: 16, offset: 80)
!2588 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !2570, file: !1986, line: 62, baseType: !2580, size: 64, offset: 320)
!2589 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !2570, file: !1986, line: 64, baseType: !2580, size: 64, offset: 384)
!2590 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !2570, file: !1986, line: 65, baseType: !1763, size: 64, offset: 448)
!2591 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !2570, file: !1986, line: 66, baseType: !1763, size: 64, offset: 512)
!2592 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !2559, file: !1986, line: 80, baseType: !1572, size: 96, offset: 2688)
!2593 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !2559, file: !1986, line: 80, baseType: !1572, size: 96, offset: 2784)
!2594 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !2559, file: !1986, line: 81, baseType: !1572, size: 96, offset: 2880)
!2595 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !2559, file: !1986, line: 83, baseType: !1572, size: 96, offset: 2976)
!2596 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2549, file: !1986, line: 173, baseType: !1391, size: 64, offset: 1216)
!2597 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !2528, file: !1773, line: 291, baseType: !2598, size: 512, offset: 1472)
!2598 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !1986, line: 178, baseType: !2599)
!2599 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !1986, line: 176, size: 512, elements: !2600)
!2600 = !{!2601}
!2601 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !2599, file: !1986, line: 177, baseType: !1476, size: 512)
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !2525, file: !1773, line: 406, baseType: !2603, size: 64, offset: 1984)
!2603 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2604, size: 64)
!2604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !1773, line: 80, size: 1472, elements: !2605)
!2605 = !{!2606, !2607, !2608, !2609, !2610, !2611, !2612, !2613, !2614, !2615, !2616, !2617, !2618}
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !2604, file: !1773, line: 81, baseType: !1391, size: 64)
!2607 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !2604, file: !1773, line: 82, baseType: !1391, size: 64, offset: 64)
!2608 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !2604, file: !1773, line: 83, baseType: !7, size: 32, offset: 128)
!2609 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !2604, file: !1773, line: 84, baseType: !7, size: 32, offset: 160)
!2610 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !2604, file: !1773, line: 86, baseType: !7, size: 32, offset: 192)
!2611 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !2604, file: !1773, line: 87, baseType: !7, size: 32, offset: 224)
!2612 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !2604, file: !1773, line: 88, baseType: !7, size: 32, offset: 256)
!2613 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !2604, file: !1773, line: 89, baseType: !7, size: 32, offset: 288)
!2614 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !2604, file: !1773, line: 90, baseType: !7, size: 32, offset: 320)
!2615 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !2604, file: !1773, line: 91, baseType: !7, size: 32, offset: 352)
!2616 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !2604, file: !1773, line: 92, baseType: !7, size: 32, offset: 384)
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2604, file: !1773, line: 93, baseType: !7, size: 32, offset: 416)
!2618 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !2604, file: !1773, line: 95, baseType: !2619, size: 1024, offset: 448)
!2619 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1447, size: 1024, elements: !2620)
!2620 = !{!2621}
!2621 = !DISubrange(count: 128)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !2525, file: !1773, line: 407, baseType: !2623, size: 64, offset: 2048)
!2623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2624, size: 64)
!2624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !1773, line: 98, size: 1216, elements: !2625)
!2625 = !{!2626, !2627, !2628, !2629, !2630}
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !2624, file: !1773, line: 100, baseType: !1391, size: 64)
!2627 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2624, file: !1773, line: 101, baseType: !1391, size: 64, offset: 64)
!2628 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !2624, file: !1773, line: 103, baseType: !7, size: 32, offset: 128)
!2629 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2624, file: !1773, line: 104, baseType: !7, size: 32, offset: 160)
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !2624, file: !1773, line: 106, baseType: !2619, size: 1024, offset: 192)
!2631 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !2525, file: !1773, line: 408, baseType: !2632, size: 512, offset: 2112)
!2632 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !1773, line: 109, size: 512, elements: !2633)
!2633 = !{!2634, !2635, !2636, !2637, !2638, !2639, !2640, !2641, !2642, !2643, !2644, !2645, !2646, !2647, !2648, !2649, !2650}
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !2632, file: !1773, line: 111, baseType: !1224, size: 32)
!2635 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !2632, file: !1773, line: 112, baseType: !1224, size: 32, offset: 32)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2632, file: !1773, line: 115, baseType: !1224, size: 32, offset: 64)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !2632, file: !1773, line: 116, baseType: !1224, size: 32, offset: 96)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !2632, file: !1773, line: 117, baseType: !1224, size: 32, offset: 128)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !2632, file: !1773, line: 118, baseType: !1224, size: 32, offset: 160)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !2632, file: !1773, line: 119, baseType: !1224, size: 32, offset: 192)
!2641 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !2632, file: !1773, line: 120, baseType: !1224, size: 32, offset: 224)
!2642 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !2632, file: !1773, line: 121, baseType: !1224, size: 32, offset: 256)
!2643 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !2632, file: !1773, line: 122, baseType: !1224, size: 32, offset: 288)
!2644 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !2632, file: !1773, line: 125, baseType: !1224, size: 32, offset: 320)
!2645 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !2632, file: !1773, line: 126, baseType: !1224, size: 32, offset: 352)
!2646 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !2632, file: !1773, line: 127, baseType: !1460, size: 16, offset: 384)
!2647 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !2632, file: !1773, line: 128, baseType: !1460, size: 16, offset: 400)
!2648 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !2632, file: !1773, line: 129, baseType: !1224, size: 32, offset: 416)
!2649 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !2632, file: !1773, line: 130, baseType: !1224, size: 32, offset: 448)
!2650 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2632, file: !1773, line: 131, baseType: !1224, size: 32, offset: 480)
!2651 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !2525, file: !1773, line: 409, baseType: !2652, size: 576, offset: 2624)
!2652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !1773, line: 134, size: 576, elements: !2653)
!2653 = !{!2654, !2655, !2656, !2657, !2658, !2659, !2660, !2661, !2662, !2663, !2664, !2665, !2666, !2667, !2668, !2669, !2670}
!2654 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2652, file: !1773, line: 135, baseType: !1224, size: 32)
!2655 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !2652, file: !1773, line: 136, baseType: !1224, size: 32, offset: 32)
!2656 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !2652, file: !1773, line: 137, baseType: !1224, size: 32, offset: 64)
!2657 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !2652, file: !1773, line: 138, baseType: !1224, size: 32, offset: 96)
!2658 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !2652, file: !1773, line: 139, baseType: !1224, size: 32, offset: 128)
!2659 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !2652, file: !1773, line: 140, baseType: !1224, size: 32, offset: 160)
!2660 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !2652, file: !1773, line: 141, baseType: !1224, size: 32, offset: 192)
!2661 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !2652, file: !1773, line: 142, baseType: !1224, size: 32, offset: 224)
!2662 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !2652, file: !1773, line: 143, baseType: !1537, size: 32, offset: 256)
!2663 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !2652, file: !1773, line: 144, baseType: !1224, size: 32, offset: 288)
!2664 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2652, file: !1773, line: 145, baseType: !1224, size: 32, offset: 320)
!2665 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !2652, file: !1773, line: 147, baseType: !1224, size: 32, offset: 352)
!2666 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !2652, file: !1773, line: 148, baseType: !1224, size: 32, offset: 384)
!2667 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !2652, file: !1773, line: 149, baseType: !1224, size: 32, offset: 416)
!2668 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !2652, file: !1773, line: 150, baseType: !1224, size: 32, offset: 448)
!2669 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !2652, file: !1773, line: 151, baseType: !1224, size: 32, offset: 480)
!2670 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !2652, file: !1773, line: 152, baseType: !1465, size: 64, offset: 512)
!2671 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !2525, file: !1773, line: 411, baseType: !1224, size: 32, offset: 3200)
!2672 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !2525, file: !1773, line: 411, baseType: !1224, size: 32, offset: 3232)
!2673 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !2525, file: !1773, line: 411, baseType: !1224, size: 32, offset: 3264)
!2674 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !2525, file: !1773, line: 412, baseType: !1537, size: 32, offset: 3296)
!2675 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !2525, file: !1773, line: 413, baseType: !1224, size: 32, offset: 3328)
!2676 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !2525, file: !1773, line: 413, baseType: !1224, size: 32, offset: 3360)
!2677 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !2525, file: !1773, line: 415, baseType: !1224, size: 32, offset: 3392)
!2678 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !2525, file: !1773, line: 415, baseType: !1224, size: 32, offset: 3424)
!2679 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2525, file: !1773, line: 416, baseType: !1460, size: 16, offset: 3456)
!2680 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !2525, file: !1773, line: 416, baseType: !1460, size: 16, offset: 3472)
!2681 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !2525, file: !1773, line: 418, baseType: !1537, size: 32, offset: 3488)
!2682 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !2525, file: !1773, line: 418, baseType: !1537, size: 32, offset: 3520)
!2683 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !2525, file: !1773, line: 421, baseType: !1537, size: 32, offset: 3552)
!2684 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !2525, file: !1773, line: 421, baseType: !1537, size: 32, offset: 3584)
!2685 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !2525, file: !1773, line: 421, baseType: !1537, size: 32, offset: 3616)
!2686 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !2525, file: !1773, line: 425, baseType: !1460, size: 16, offset: 3648)
!2687 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !2525, file: !1773, line: 425, baseType: !1460, size: 16, offset: 3664)
!2688 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !2525, file: !1773, line: 425, baseType: !1460, size: 16, offset: 3680)
!2689 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !2525, file: !1773, line: 426, baseType: !1460, size: 16, offset: 3696)
!2690 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2525, file: !1773, line: 428, baseType: !1460, size: 16, offset: 3712)
!2691 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !2525, file: !1773, line: 428, baseType: !1460, size: 16, offset: 3728)
!2692 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !2525, file: !1773, line: 431, baseType: !1224, size: 32, offset: 3744)
!2693 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !2525, file: !1773, line: 433, baseType: !1460, size: 16, offset: 3776)
!2694 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !2525, file: !1773, line: 435, baseType: !1460, size: 16, offset: 3792)
!2695 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !2525, file: !1773, line: 437, baseType: !1460, size: 16, offset: 3808)
!2696 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2525, file: !1773, line: 439, baseType: !1460, size: 16, offset: 3824)
!2697 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !2525, file: !1773, line: 441, baseType: !1460, size: 16, offset: 3840)
!2698 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !2525, file: !1773, line: 443, baseType: !1460, size: 16, offset: 3856)
!2699 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !2525, file: !1773, line: 449, baseType: !1224, size: 32, offset: 3872)
!2700 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !2525, file: !1773, line: 453, baseType: !1224, size: 32, offset: 3904)
!2701 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !2525, file: !1773, line: 458, baseType: !1460, size: 16, offset: 3936)
!2702 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !2525, file: !1773, line: 462, baseType: !1460, size: 16, offset: 3952)
!2703 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !2525, file: !1773, line: 467, baseType: !1224, size: 32, offset: 3968)
!2704 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !2525, file: !1773, line: 467, baseType: !1224, size: 32, offset: 4000)
!2705 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !2525, file: !1773, line: 469, baseType: !1460, size: 16, offset: 4032)
!2706 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !2525, file: !1773, line: 469, baseType: !1460, size: 16, offset: 4048)
!2707 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !2525, file: !1773, line: 469, baseType: !1460, size: 16, offset: 4064)
!2708 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !2525, file: !1773, line: 469, baseType: !1460, size: 16, offset: 4080)
!2709 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !2525, file: !1773, line: 474, baseType: !1460, size: 16, offset: 4096)
!2710 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !2525, file: !1773, line: 475, baseType: !1447, size: 8, offset: 4112)
!2711 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !2525, file: !1773, line: 476, baseType: !1447, size: 8, offset: 4120)
!2712 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !2525, file: !1773, line: 481, baseType: !1224, size: 32, offset: 4128)
!2713 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2525, file: !1773, line: 486, baseType: !1224, size: 32, offset: 4160)
!2714 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !2525, file: !1773, line: 491, baseType: !1224, size: 32, offset: 4192)
!2715 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !2525, file: !1773, line: 496, baseType: !1460, size: 16, offset: 4224)
!2716 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2525, file: !1773, line: 498, baseType: !1460, size: 16, offset: 4240)
!2717 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !2525, file: !1773, line: 501, baseType: !1460, size: 16, offset: 4256)
!2718 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2525, file: !1773, line: 502, baseType: !1460, size: 16, offset: 4272)
!2719 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !2525, file: !1773, line: 508, baseType: !1460, size: 16, offset: 4288)
!2720 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !2525, file: !1773, line: 513, baseType: !1460, size: 16, offset: 4304)
!2721 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !2525, file: !1773, line: 515, baseType: !1460, size: 16, offset: 4320)
!2722 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !2525, file: !1773, line: 515, baseType: !1460, size: 16, offset: 4336)
!2723 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !2525, file: !1773, line: 519, baseType: !1840, size: 128, offset: 4352)
!2724 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !2525, file: !1773, line: 519, baseType: !1840, size: 128, offset: 4480)
!2725 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !2525, file: !1773, line: 520, baseType: !2726, size: 128, offset: 4608)
!2726 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !1841, line: 89, baseType: !2727)
!2727 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !1841, line: 86, size: 128, elements: !2728)
!2728 = !{!2729, !2730, !2731, !2732}
!2729 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !2727, file: !1841, line: 87, baseType: !1224, size: 32)
!2730 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !2727, file: !1841, line: 87, baseType: !1224, size: 32, offset: 32)
!2731 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !2727, file: !1841, line: 88, baseType: !1224, size: 32, offset: 64)
!2732 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !2727, file: !1841, line: 88, baseType: !1224, size: 32, offset: 96)
!2733 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !2525, file: !1773, line: 523, baseType: !1486, size: 128, offset: 4736)
!2734 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !2525, file: !1773, line: 524, baseType: !1460, size: 16, offset: 4864)
!2735 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !2525, file: !1773, line: 527, baseType: !1460, size: 16, offset: 4880)
!2736 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !2525, file: !1773, line: 532, baseType: !1537, size: 32, offset: 4896)
!2737 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !2525, file: !1773, line: 532, baseType: !1537, size: 32, offset: 4928)
!2738 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !2525, file: !1773, line: 534, baseType: !1537, size: 32, offset: 4960)
!2739 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !2525, file: !1773, line: 538, baseType: !1537, size: 32, offset: 4992)
!2740 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !2525, file: !1773, line: 542, baseType: !1224, size: 32, offset: 5024)
!2741 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !2525, file: !1773, line: 545, baseType: !1537, size: 32, offset: 5056)
!2742 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !2525, file: !1773, line: 545, baseType: !1537, size: 32, offset: 5088)
!2743 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !2525, file: !1773, line: 545, baseType: !1537, size: 32, offset: 5120)
!2744 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !2525, file: !1773, line: 548, baseType: !1537, size: 32, offset: 5152)
!2745 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !2525, file: !1773, line: 551, baseType: !1460, size: 16, offset: 5184)
!2746 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !2525, file: !1773, line: 551, baseType: !1460, size: 16, offset: 5200)
!2747 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !2525, file: !1773, line: 551, baseType: !1460, size: 16, offset: 5216)
!2748 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !2525, file: !1773, line: 551, baseType: !1460, size: 16, offset: 5232)
!2749 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !2525, file: !1773, line: 552, baseType: !1460, size: 16, offset: 5248)
!2750 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !2525, file: !1773, line: 552, baseType: !1460, size: 16, offset: 5264)
!2751 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !2525, file: !1773, line: 553, baseType: !1537, size: 32, offset: 5280)
!2752 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !2525, file: !1773, line: 553, baseType: !1537, size: 32, offset: 5312)
!2753 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !2525, file: !1773, line: 554, baseType: !1460, size: 16, offset: 5344)
!2754 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !2525, file: !1773, line: 554, baseType: !1460, size: 16, offset: 5360)
!2755 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !2525, file: !1773, line: 555, baseType: !1537, size: 32, offset: 5376)
!2756 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !2525, file: !1773, line: 555, baseType: !1537, size: 32, offset: 5408)
!2757 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !2525, file: !1773, line: 558, baseType: !1446, size: 8192, offset: 5440)
!2758 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !2525, file: !1773, line: 561, baseType: !1224, size: 32, offset: 13632)
!2759 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !2525, file: !1773, line: 562, baseType: !1460, size: 16, offset: 13664)
!2760 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2525, file: !1773, line: 562, baseType: !1460, size: 16, offset: 13680)
!2761 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !2525, file: !1773, line: 565, baseType: !1941, size: 6144, offset: 13696)
!2762 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !2525, file: !1773, line: 568, baseType: !1644, size: 128, offset: 19840)
!2763 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !2525, file: !1773, line: 569, baseType: !1644, size: 128, offset: 19968)
!2764 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !2525, file: !1773, line: 572, baseType: !1447, size: 8, offset: 20096)
!2765 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !2525, file: !1773, line: 573, baseType: !1447, size: 8, offset: 20104)
!2766 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !2525, file: !1773, line: 574, baseType: !1447, size: 8, offset: 20112)
!2767 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !2525, file: !1773, line: 575, baseType: !2375, size: 40, offset: 20120)
!2768 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !2525, file: !1773, line: 578, baseType: !1224, size: 32, offset: 20160)
!2769 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !2525, file: !1773, line: 579, baseType: !1460, size: 16, offset: 20192)
!2770 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !2525, file: !1773, line: 580, baseType: !1460, size: 16, offset: 20208)
!2771 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !2525, file: !1773, line: 581, baseType: !1537, size: 32, offset: 20224)
!2772 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !2525, file: !1773, line: 582, baseType: !1537, size: 32, offset: 20256)
!2773 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !2525, file: !1773, line: 585, baseType: !1460, size: 16, offset: 20288)
!2774 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !2525, file: !1773, line: 585, baseType: !1460, size: 16, offset: 20304)
!2775 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !2525, file: !1773, line: 586, baseType: !1537, size: 32, offset: 20320)
!2776 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !2525, file: !1773, line: 589, baseType: !1460, size: 16, offset: 20352)
!2777 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !2525, file: !1773, line: 589, baseType: !1460, size: 16, offset: 20368)
!2778 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !2525, file: !1773, line: 590, baseType: !1224, size: 32, offset: 20384)
!2779 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !2525, file: !1773, line: 593, baseType: !1460, size: 16, offset: 20416)
!2780 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !2525, file: !1773, line: 593, baseType: !1460, size: 16, offset: 20432)
!2781 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !2525, file: !1773, line: 594, baseType: !1460, size: 16, offset: 20448)
!2782 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !2525, file: !1773, line: 594, baseType: !1460, size: 16, offset: 20464)
!2783 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !2525, file: !1773, line: 595, baseType: !1537, size: 32, offset: 20480)
!2784 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2525, file: !1773, line: 596, baseType: !1537, size: 32, offset: 20512)
!2785 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !2525, file: !1773, line: 597, baseType: !2786, size: 64, offset: 20544)
!2786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2787, size: 64)
!2787 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !2788, line: 44, flags: DIFlagFwdDecl)
!2788 = !DIFile(filename: "blender/source/blender/makesdna/DNA_freestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2789 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !2525, file: !1773, line: 600, baseType: !1224, size: 32, offset: 20608)
!2790 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !2525, file: !1773, line: 601, baseType: !1537, size: 32, offset: 20640)
!2791 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !2525, file: !1773, line: 604, baseType: !2792, size: 256, offset: 20672)
!2792 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1447, size: 256, elements: !2793)
!2793 = !{!2794}
!2794 = !DISubrange(count: 32)
!2795 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !2525, file: !1773, line: 607, baseType: !2796, size: 10880, offset: 20928)
!2796 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !1773, line: 364, size: 10880, elements: !2797)
!2797 = !{!2798, !2799, !2800, !2801, !2802, !2803, !2804, !2805, !2806, !2807, !2808, !2809, !2810}
!2798 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !2796, file: !1773, line: 365, baseType: !2528, size: 1984)
!2799 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !2796, file: !1773, line: 367, baseType: !1446, size: 8192, offset: 1984)
!2800 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2796, file: !1773, line: 369, baseType: !1460, size: 16, offset: 10176)
!2801 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2796, file: !1773, line: 369, baseType: !1460, size: 16, offset: 10192)
!2802 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !2796, file: !1773, line: 370, baseType: !1460, size: 16, offset: 10208)
!2803 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2796, file: !1773, line: 370, baseType: !1460, size: 16, offset: 10224)
!2804 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !2796, file: !1773, line: 372, baseType: !1537, size: 32, offset: 10240)
!2805 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2796, file: !1773, line: 373, baseType: !1537, size: 32, offset: 10272)
!2806 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !2796, file: !1773, line: 375, baseType: !2297, size: 24, offset: 10304)
!2807 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !2796, file: !1773, line: 376, baseType: !1447, size: 8, offset: 10328)
!2808 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !2796, file: !1773, line: 378, baseType: !1447, size: 8, offset: 10336)
!2809 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2796, file: !1773, line: 379, baseType: !2297, size: 24, offset: 10344)
!2810 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !2796, file: !1773, line: 381, baseType: !1476, size: 512, offset: 10368)
!2811 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !2525, file: !1773, line: 609, baseType: !1224, size: 32, offset: 31808)
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2525, file: !1773, line: 610, baseType: !1224, size: 32, offset: 31840)
!2813 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !1772, file: !1773, line: 1252, baseType: !2814, size: 256, offset: 34112)
!2814 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !1773, line: 158, size: 256, elements: !2815)
!2815 = !{!2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824}
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !2814, file: !1773, line: 159, baseType: !1224, size: 32)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !2814, file: !1773, line: 160, baseType: !1537, size: 32, offset: 32)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !2814, file: !1773, line: 161, baseType: !1537, size: 32, offset: 64)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !2814, file: !1773, line: 162, baseType: !1537, size: 32, offset: 96)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !2814, file: !1773, line: 163, baseType: !1224, size: 32, offset: 128)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2814, file: !1773, line: 164, baseType: !1460, size: 16, offset: 160)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2814, file: !1773, line: 165, baseType: !1460, size: 16, offset: 176)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !2814, file: !1773, line: 166, baseType: !1537, size: 32, offset: 192)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2814, file: !1773, line: 167, baseType: !1537, size: 32, offset: 224)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1772, file: !1773, line: 1254, baseType: !1486, size: 128, offset: 34368)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !1772, file: !1773, line: 1255, baseType: !1486, size: 128, offset: 34496)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !1772, file: !1773, line: 1257, baseType: !1391, size: 64, offset: 34624)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !1772, file: !1773, line: 1258, baseType: !1391, size: 64, offset: 34688)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !1772, file: !1773, line: 1259, baseType: !1391, size: 64, offset: 34752)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !1772, file: !1773, line: 1260, baseType: !1391, size: 64, offset: 34816)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !1772, file: !1773, line: 1262, baseType: !1391, size: 64, offset: 34880)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !1772, file: !1773, line: 1265, baseType: !2833, size: 64, offset: 34944)
!2833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2834, size: 64)
!2834 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !1773, line: 1265, flags: DIFlagFwdDecl)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !1772, file: !1773, line: 1266, baseType: !1460, size: 16, offset: 35008)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1772, file: !1773, line: 1267, baseType: !1460, size: 16, offset: 35024)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !1772, file: !1773, line: 1270, baseType: !1224, size: 32, offset: 35040)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !1772, file: !1773, line: 1271, baseType: !1486, size: 128, offset: 35072)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !1772, file: !1773, line: 1274, baseType: !2840, size: 128, offset: 35200)
!2840 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !1773, line: 650, size: 128, elements: !2841)
!2841 = !{!2842, !2843, !2844, !2845, !2846}
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !2840, file: !1773, line: 651, baseType: !1572, size: 96)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2840, file: !1773, line: 652, baseType: !1447, size: 8, offset: 96)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2840, file: !1773, line: 652, baseType: !1447, size: 8, offset: 104)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2840, file: !1773, line: 652, baseType: !1447, size: 8, offset: 112)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !2840, file: !1773, line: 652, baseType: !1447, size: 8, offset: 120)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !1772, file: !1773, line: 1275, baseType: !2848, size: 1472, offset: 35328)
!2848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !1773, line: 676, size: 1472, elements: !2849)
!2849 = !{!2850, !2851, !2852, !2853, !2854, !2855, !2856, !2857, !2858, !2859, !2860, !2862, !2872, !2873, !2874, !2875, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913}
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !2848, file: !1773, line: 679, baseType: !2840, size: 128)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !2848, file: !1773, line: 680, baseType: !1460, size: 16, offset: 128)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !2848, file: !1773, line: 680, baseType: !1460, size: 16, offset: 144)
!2853 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !2848, file: !1773, line: 680, baseType: !1460, size: 16, offset: 160)
!2854 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !2848, file: !1773, line: 680, baseType: !1460, size: 16, offset: 176)
!2855 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !2848, file: !1773, line: 681, baseType: !1460, size: 16, offset: 192)
!2856 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !2848, file: !1773, line: 681, baseType: !1460, size: 16, offset: 208)
!2857 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !2848, file: !1773, line: 681, baseType: !1460, size: 16, offset: 224)
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !2848, file: !1773, line: 681, baseType: !1460, size: 16, offset: 240)
!2859 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !2848, file: !1773, line: 682, baseType: !1460, size: 16, offset: 256)
!2860 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !2848, file: !1773, line: 682, baseType: !2861, size: 48, offset: 272)
!2861 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1460, size: 48, elements: !1573)
!2862 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !2848, file: !1773, line: 685, baseType: !2863, size: 192, offset: 320)
!2863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !1773, line: 633, size: 192, elements: !2864)
!2864 = !{!2865, !2866, !2867, !2868, !2869, !2870, !2871}
!2865 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !2863, file: !1773, line: 634, baseType: !1460, size: 16)
!2866 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2863, file: !1773, line: 634, baseType: !1460, size: 16, offset: 16)
!2867 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !2863, file: !1773, line: 635, baseType: !1460, size: 16, offset: 32)
!2868 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !2863, file: !1773, line: 635, baseType: !1460, size: 16, offset: 48)
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !2863, file: !1773, line: 636, baseType: !1537, size: 32, offset: 64)
!2870 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2863, file: !1773, line: 636, baseType: !1537, size: 32, offset: 96)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !2863, file: !1773, line: 637, baseType: !2786, size: 64, offset: 128)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !2848, file: !1773, line: 686, baseType: !1460, size: 16, offset: 512)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !2848, file: !1773, line: 686, baseType: !1460, size: 16, offset: 528)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !2848, file: !1773, line: 687, baseType: !1537, size: 32, offset: 544)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !2848, file: !1773, line: 688, baseType: !2876, size: 448, offset: 576)
!2876 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !1773, line: 674, baseType: !2877)
!2877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !1773, line: 659, size: 448, elements: !2878)
!2878 = !{!2879, !2880, !2881, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893}
!2879 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !2877, file: !1773, line: 660, baseType: !1537, size: 32)
!2880 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !2877, file: !1773, line: 661, baseType: !1537, size: 32, offset: 32)
!2881 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !2877, file: !1773, line: 662, baseType: !1537, size: 32, offset: 64)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !2877, file: !1773, line: 663, baseType: !1537, size: 32, offset: 96)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !2877, file: !1773, line: 664, baseType: !1537, size: 32, offset: 128)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !2877, file: !1773, line: 665, baseType: !1537, size: 32, offset: 160)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !2877, file: !1773, line: 666, baseType: !1537, size: 32, offset: 192)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !2877, file: !1773, line: 667, baseType: !1537, size: 32, offset: 224)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !2877, file: !1773, line: 668, baseType: !1537, size: 32, offset: 256)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !2877, file: !1773, line: 669, baseType: !1537, size: 32, offset: 288)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !2877, file: !1773, line: 670, baseType: !1224, size: 32, offset: 320)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !2877, file: !1773, line: 671, baseType: !1537, size: 32, offset: 352)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !2877, file: !1773, line: 672, baseType: !1537, size: 32, offset: 384)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !2877, file: !1773, line: 673, baseType: !1460, size: 16, offset: 416)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2877, file: !1773, line: 673, baseType: !1460, size: 16, offset: 432)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2848, file: !1773, line: 692, baseType: !1537, size: 32, offset: 1024)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !2848, file: !1773, line: 697, baseType: !1537, size: 32, offset: 1056)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2848, file: !1773, line: 703, baseType: !1224, size: 32, offset: 1088)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2848, file: !1773, line: 704, baseType: !1460, size: 16, offset: 1120)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !2848, file: !1773, line: 704, baseType: !1460, size: 16, offset: 1136)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !2848, file: !1773, line: 705, baseType: !1460, size: 16, offset: 1152)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !2848, file: !1773, line: 706, baseType: !1460, size: 16, offset: 1168)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !2848, file: !1773, line: 707, baseType: !1460, size: 16, offset: 1184)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !2848, file: !1773, line: 708, baseType: !1460, size: 16, offset: 1200)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !2848, file: !1773, line: 709, baseType: !1460, size: 16, offset: 1216)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !2848, file: !1773, line: 709, baseType: !1460, size: 16, offset: 1232)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !2848, file: !1773, line: 709, baseType: !1460, size: 16, offset: 1248)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !2848, file: !1773, line: 709, baseType: !1460, size: 16, offset: 1264)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !2848, file: !1773, line: 710, baseType: !1460, size: 16, offset: 1280)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !2848, file: !1773, line: 711, baseType: !1460, size: 16, offset: 1296)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !2848, file: !1773, line: 712, baseType: !1537, size: 32, offset: 1312)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !2848, file: !1773, line: 713, baseType: !1537, size: 32, offset: 1344)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !2848, file: !1773, line: 713, baseType: !1537, size: 32, offset: 1376)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !2848, file: !1773, line: 713, baseType: !1537, size: 32, offset: 1408)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2848, file: !1773, line: 713, baseType: !1537, size: 32, offset: 1440)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !1772, file: !1773, line: 1278, baseType: !2915, size: 64, offset: 36800)
!2915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !1773, line: 1197, size: 64, elements: !2916)
!2916 = !{!2917, !2918, !2919, !2920}
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !2915, file: !1773, line: 1199, baseType: !1537, size: 32)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !2915, file: !1773, line: 1200, baseType: !1447, size: 8, offset: 32)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !2915, file: !1773, line: 1201, baseType: !1447, size: 8, offset: 40)
!2920 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2915, file: !1773, line: 1202, baseType: !1460, size: 16, offset: 48)
!2921 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1772, file: !1773, line: 1281, baseType: !1603, size: 64, offset: 36864)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !1772, file: !1773, line: 1284, baseType: !2923, size: 192, offset: 36928)
!2923 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !1773, line: 1208, size: 192, elements: !2924)
!2924 = !{!2925, !2926, !2927, !2928}
!2925 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !2923, file: !1773, line: 1209, baseType: !1572, size: 96)
!2926 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2923, file: !1773, line: 1210, baseType: !1224, size: 32, offset: 96)
!2927 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !2923, file: !1773, line: 1210, baseType: !1224, size: 32, offset: 128)
!2928 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !2923, file: !1773, line: 1210, baseType: !1224, size: 32, offset: 160)
!2929 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !1772, file: !1773, line: 1287, baseType: !1994, size: 64, offset: 37120)
!2930 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !1772, file: !1773, line: 1289, baseType: !1744, size: 64, offset: 37184)
!2931 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !1772, file: !1773, line: 1290, baseType: !1744, size: 64, offset: 37248)
!2932 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1772, file: !1773, line: 1293, baseType: !2548, size: 1280, offset: 37312)
!2933 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1772, file: !1773, line: 1294, baseType: !2598, size: 512, offset: 38592)
!2934 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !1772, file: !1773, line: 1295, baseType: !1985, size: 512, offset: 39104)
!2935 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !1772, file: !1773, line: 1298, baseType: !2936, size: 64, offset: 39616)
!2936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2937, size: 64)
!2937 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !1773, line: 1298, flags: DIFlagFwdDecl)
!2938 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1768, file: !1767, line: 53, baseType: !1224, size: 32, offset: 64)
!2939 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !1768, file: !1767, line: 54, baseType: !1224, size: 32, offset: 96)
!2940 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1768, file: !1767, line: 55, baseType: !1224, size: 32, offset: 128)
!2941 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1768, file: !1767, line: 55, baseType: !1224, size: 32, offset: 160)
!2942 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !1768, file: !1767, line: 56, baseType: !1447, size: 8, offset: 192)
!2943 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !1768, file: !1767, line: 56, baseType: !1447, size: 8, offset: 200)
!2944 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1768, file: !1767, line: 57, baseType: !1447, size: 8, offset: 208)
!2945 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1768, file: !1767, line: 57, baseType: !1447, size: 8, offset: 216)
!2946 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !1768, file: !1767, line: 59, baseType: !1460, size: 16, offset: 224)
!2947 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !1768, file: !1767, line: 59, baseType: !1460, size: 16, offset: 240)
!2948 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !1768, file: !1767, line: 59, baseType: !1460, size: 16, offset: 256)
!2949 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1768, file: !1767, line: 61, baseType: !1460, size: 16, offset: 272)
!2950 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1768, file: !1767, line: 63, baseType: !1224, size: 32, offset: 288)
!2951 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !1506, file: !1372, line: 293, baseType: !1486, size: 128, offset: 11200)
!2952 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !1506, file: !1372, line: 294, baseType: !2953, size: 64, offset: 11328)
!2953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2954, size: 64)
!2954 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !1372, line: 113, baseType: !2955)
!2955 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !1372, line: 108, size: 256, elements: !2956)
!2956 = !{!2957, !2959, !2960, !2961, !2962}
!2957 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2955, file: !1372, line: 109, baseType: !2958, size: 64)
!2958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2955, size: 64)
!2959 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2955, file: !1372, line: 109, baseType: !2958, size: 64, offset: 64)
!2960 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2955, file: !1372, line: 110, baseType: !1523, size: 64, offset: 128)
!2961 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2955, file: !1372, line: 111, baseType: !1224, size: 32, offset: 192)
!2962 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !2955, file: !1372, line: 112, baseType: !1537, size: 32, offset: 224)
!2963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2964, size: 64)
!2964 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !1773, line: 1299, baseType: !1772)
!2965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2966, size: 64)
!2966 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmOperator", file: !41, line: 348, baseType: !2967)
!2967 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperator", file: !41, line: 328, size: 1344, elements: !2968)
!2968 = !{!2969, !2971, !2972, !2973, !2974, !3105, !3106, !3107, !3108, !3209, !3210, !3211, !3214, !3215}
!2969 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2967, file: !41, line: 329, baseType: !2970, size: 64)
!2970 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2967, size: 64)
!2971 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2967, file: !41, line: 329, baseType: !2970, size: 64, offset: 64)
!2972 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !2967, file: !41, line: 332, baseType: !1476, size: 512, offset: 128)
!2973 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !2967, file: !41, line: 333, baseType: !1465, size: 64, offset: 640)
!2974 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2967, file: !41, line: 336, baseType: !2975, size: 64, offset: 704)
!2975 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2976, size: 64)
!2976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperatorType", file: !936, line: 508, size: 1536, elements: !2977)
!2977 = !{!2978, !2981, !2982, !2983, !2984, !2988, !2992, !3038, !3042, !3043, !3044, !3045, !3046, !3047, !3048, !3049, !3064, !3065, !3069, !3104}
!2978 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2976, file: !936, line: 509, baseType: !2979, size: 64)
!2979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2980, size: 64)
!2980 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1447)
!2981 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !2976, file: !936, line: 510, baseType: !2979, size: 64, offset: 64)
!2982 = !DIDerivedType(tag: DW_TAG_member, name: "translation_context", scope: !2976, file: !936, line: 511, baseType: !2979, size: 64, offset: 128)
!2983 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !2976, file: !936, line: 512, baseType: !2979, size: 64, offset: 192)
!2984 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !2976, file: !936, line: 518, baseType: !2985, size: 64, offset: 256)
!2985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2986, size: 64)
!2986 = !DISubroutineType(types: !2987)
!2987 = !{!1224, !1408, !2970}
!2988 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !2976, file: !936, line: 524, baseType: !2989, size: 64, offset: 320)
!2989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2990, size: 64)
!2990 = !DISubroutineType(types: !2991)
!2991 = !{!2328, !1408, !2970}
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "invoke", scope: !2976, file: !936, line: 530, baseType: !2993, size: 64, offset: 384)
!2993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2994, size: 64)
!2994 = !DISubroutineType(types: !2995)
!2995 = !{!1224, !1408, !2970, !2996}
!2996 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2997, size: 64)
!2997 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2998)
!2998 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmEvent", file: !936, line: 421, size: 960, elements: !2999)
!2999 = !{!3000, !3002, !3003, !3004, !3005, !3006, !3007, !3008, !3009, !3010, !3011, !3012, !3013, !3014, !3015, !3017, !3018, !3019, !3020, !3021, !3022, !3023, !3024, !3025, !3026, !3034, !3035, !3036, !3037}
!3000 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2998, file: !936, line: 422, baseType: !3001, size: 64)
!3001 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2998, size: 64)
!3002 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2998, file: !936, line: 422, baseType: !3001, size: 64, offset: 64)
!3003 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2998, file: !936, line: 424, baseType: !1460, size: 16, offset: 128)
!3004 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !2998, file: !936, line: 425, baseType: !1460, size: 16, offset: 144)
!3005 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2998, file: !936, line: 426, baseType: !1224, size: 32, offset: 160)
!3006 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !2998, file: !936, line: 426, baseType: !1224, size: 32, offset: 192)
!3007 = !DIDerivedType(tag: DW_TAG_member, name: "mval", scope: !2998, file: !936, line: 427, baseType: !2004, size: 64, offset: 224)
!3008 = !DIDerivedType(tag: DW_TAG_member, name: "utf8_buf", scope: !2998, file: !936, line: 428, baseType: !2544, size: 48, offset: 288)
!3009 = !DIDerivedType(tag: DW_TAG_member, name: "ascii", scope: !2998, file: !936, line: 431, baseType: !1447, size: 8, offset: 336)
!3010 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2998, file: !936, line: 432, baseType: !1447, size: 8, offset: 344)
!3011 = !DIDerivedType(tag: DW_TAG_member, name: "prevtype", scope: !2998, file: !936, line: 435, baseType: !1460, size: 16, offset: 352)
!3012 = !DIDerivedType(tag: DW_TAG_member, name: "prevval", scope: !2998, file: !936, line: 436, baseType: !1460, size: 16, offset: 368)
!3013 = !DIDerivedType(tag: DW_TAG_member, name: "prevx", scope: !2998, file: !936, line: 437, baseType: !1224, size: 32, offset: 384)
!3014 = !DIDerivedType(tag: DW_TAG_member, name: "prevy", scope: !2998, file: !936, line: 437, baseType: !1224, size: 32, offset: 416)
!3015 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicktime", scope: !2998, file: !936, line: 438, baseType: !3016, size: 64, offset: 448)
!3016 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!3017 = !DIDerivedType(tag: DW_TAG_member, name: "prevclickx", scope: !2998, file: !936, line: 439, baseType: !1224, size: 32, offset: 512)
!3018 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicky", scope: !2998, file: !936, line: 439, baseType: !1224, size: 32, offset: 544)
!3019 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !2998, file: !936, line: 442, baseType: !1460, size: 16, offset: 576)
!3020 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl", scope: !2998, file: !936, line: 442, baseType: !1460, size: 16, offset: 592)
!3021 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !2998, file: !936, line: 442, baseType: !1460, size: 16, offset: 608)
!3022 = !DIDerivedType(tag: DW_TAG_member, name: "oskey", scope: !2998, file: !936, line: 442, baseType: !1460, size: 16, offset: 624)
!3023 = !DIDerivedType(tag: DW_TAG_member, name: "keymodifier", scope: !2998, file: !936, line: 443, baseType: !1460, size: 16, offset: 640)
!3024 = !DIDerivedType(tag: DW_TAG_member, name: "check_click", scope: !2998, file: !936, line: 446, baseType: !1460, size: 16, offset: 656)
!3025 = !DIDerivedType(tag: DW_TAG_member, name: "keymap_idname", scope: !2998, file: !936, line: 449, baseType: !2979, size: 64, offset: 704)
!3026 = !DIDerivedType(tag: DW_TAG_member, name: "tablet_data", scope: !2998, file: !936, line: 452, baseType: !3027, size: 64, offset: 768)
!3027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3028, size: 64)
!3028 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTabletData", file: !936, line: 463, size: 128, elements: !3029)
!3029 = !{!3030, !3031, !3032, !3033}
!3030 = !DIDerivedType(tag: DW_TAG_member, name: "Active", scope: !3028, file: !936, line: 464, baseType: !1224, size: 32)
!3031 = !DIDerivedType(tag: DW_TAG_member, name: "Pressure", scope: !3028, file: !936, line: 465, baseType: !1537, size: 32, offset: 32)
!3032 = !DIDerivedType(tag: DW_TAG_member, name: "Xtilt", scope: !3028, file: !936, line: 466, baseType: !1537, size: 32, offset: 64)
!3033 = !DIDerivedType(tag: DW_TAG_member, name: "Ytilt", scope: !3028, file: !936, line: 467, baseType: !1537, size: 32, offset: 96)
!3034 = !DIDerivedType(tag: DW_TAG_member, name: "custom", scope: !2998, file: !936, line: 455, baseType: !1460, size: 16, offset: 832)
!3035 = !DIDerivedType(tag: DW_TAG_member, name: "customdatafree", scope: !2998, file: !936, line: 456, baseType: !1460, size: 16, offset: 848)
!3036 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2998, file: !936, line: 457, baseType: !1224, size: 32, offset: 864)
!3037 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !2998, file: !936, line: 458, baseType: !1391, size: 64, offset: 896)
!3038 = !DIDerivedType(tag: DW_TAG_member, name: "cancel", scope: !2976, file: !936, line: 531, baseType: !3039, size: 64, offset: 448)
!3039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3040, size: 64)
!3040 = !DISubroutineType(types: !3041)
!3041 = !{null, !1408, !2970}
!3042 = !DIDerivedType(tag: DW_TAG_member, name: "modal", scope: !2976, file: !936, line: 532, baseType: !2993, size: 64, offset: 512)
!3043 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !2976, file: !936, line: 536, baseType: !1405, size: 64, offset: 576)
!3044 = !DIDerivedType(tag: DW_TAG_member, name: "ui", scope: !2976, file: !936, line: 539, baseType: !3039, size: 64, offset: 640)
!3045 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !2976, file: !936, line: 542, baseType: !1821, size: 64, offset: 704)
!3046 = !DIDerivedType(tag: DW_TAG_member, name: "last_properties", scope: !2976, file: !936, line: 545, baseType: !1470, size: 64, offset: 768)
!3047 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !2976, file: !936, line: 549, baseType: !1392, size: 64, offset: 832)
!3048 = !DIDerivedType(tag: DW_TAG_member, name: "macro", scope: !2976, file: !936, line: 552, baseType: !1486, size: 128, offset: 896)
!3049 = !DIDerivedType(tag: DW_TAG_member, name: "modalkeymap", scope: !2976, file: !936, line: 555, baseType: !3050, size: 64, offset: 1024)
!3050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3051, size: 64)
!3051 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmKeyMap", file: !41, line: 281, size: 1088, elements: !3052)
!3052 = !{!3053, !3054, !3055, !3056, !3057, !3058, !3059, !3060, !3061, !3062, !3063}
!3053 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3051, file: !41, line: 282, baseType: !3050, size: 64)
!3054 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3051, file: !41, line: 282, baseType: !3050, size: 64, offset: 64)
!3055 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !3051, file: !41, line: 284, baseType: !1486, size: 128, offset: 128)
!3056 = !DIDerivedType(tag: DW_TAG_member, name: "diff_items", scope: !3051, file: !41, line: 285, baseType: !1486, size: 128, offset: 256)
!3057 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !3051, file: !41, line: 287, baseType: !1476, size: 512, offset: 384)
!3058 = !DIDerivedType(tag: DW_TAG_member, name: "spaceid", scope: !3051, file: !41, line: 288, baseType: !1460, size: 16, offset: 896)
!3059 = !DIDerivedType(tag: DW_TAG_member, name: "regionid", scope: !3051, file: !41, line: 289, baseType: !1460, size: 16, offset: 912)
!3060 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3051, file: !41, line: 291, baseType: !1460, size: 16, offset: 928)
!3061 = !DIDerivedType(tag: DW_TAG_member, name: "kmi_id", scope: !3051, file: !41, line: 292, baseType: !1460, size: 16, offset: 944)
!3062 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !3051, file: !41, line: 295, baseType: !1405, size: 64, offset: 960)
!3063 = !DIDerivedType(tag: DW_TAG_member, name: "modal_items", scope: !3051, file: !41, line: 296, baseType: !1391, size: 64, offset: 1024)
!3064 = !DIDerivedType(tag: DW_TAG_member, name: "pyop_data", scope: !2976, file: !936, line: 559, baseType: !1391, size: 64, offset: 1088)
!3065 = !DIDerivedType(tag: DW_TAG_member, name: "pyop_poll", scope: !2976, file: !936, line: 560, baseType: !3066, size: 64, offset: 1152)
!3066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3067, size: 64)
!3067 = !DISubroutineType(types: !3068)
!3068 = !{!1224, !1408, !2975}
!3069 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !2976, file: !936, line: 563, baseType: !3070, size: 256, offset: 1216)
!3070 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExtensionRNA", file: !6, line: 436, baseType: !3071)
!3071 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ExtensionRNA", file: !6, line: 430, size: 256, elements: !3072)
!3072 = !{!3073, !3074, !3077, !3102}
!3073 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3071, file: !6, line: 431, baseType: !1391, size: 64)
!3074 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !3071, file: !6, line: 432, baseType: !3075, size: 64, offset: 64)
!3075 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3076, size: 64)
!3076 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructRNA", file: !6, line: 417, baseType: !1822)
!3077 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !3071, file: !6, line: 433, baseType: !3078, size: 64, offset: 128)
!3078 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructCallbackFunc", file: !6, line: 408, baseType: !3079)
!3079 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3080, size: 64)
!3080 = !DISubroutineType(types: !3081)
!3081 = !{!1224, !1408, !3082, !3091, !3093}
!3082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3083, size: 64)
!3083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointerRNA", file: !6, line: 55, size: 192, elements: !3084)
!3084 = !{!3085, !3089, !3090}
!3085 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3083, file: !6, line: 58, baseType: !3086, size: 64)
!3086 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3083, file: !6, line: 56, size: 64, elements: !3087)
!3087 = !{!3088}
!3088 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3086, file: !6, line: 57, baseType: !1391, size: 64)
!3089 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3083, file: !6, line: 60, baseType: !1821, size: 64, offset: 64)
!3090 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3083, file: !6, line: 61, baseType: !1391, size: 64, offset: 128)
!3091 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3092, size: 64)
!3092 = !DICompositeType(tag: DW_TAG_structure_type, name: "FunctionRNA", file: !6, line: 38, flags: DIFlagFwdDecl)
!3093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3094, size: 64)
!3094 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParameterList", file: !6, line: 348, baseType: !3095)
!3095 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParameterList", file: !6, line: 337, size: 256, elements: !3096)
!3096 = !{!3097, !3098, !3099, !3100, !3101}
!3097 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3095, file: !6, line: 339, baseType: !1391, size: 64)
!3098 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !3095, file: !6, line: 342, baseType: !3091, size: 64, offset: 64)
!3099 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_size", scope: !3095, file: !6, line: 345, baseType: !1224, size: 32, offset: 128)
!3100 = !DIDerivedType(tag: DW_TAG_member, name: "arg_count", scope: !3095, file: !6, line: 347, baseType: !1224, size: 32, offset: 160)
!3101 = !DIDerivedType(tag: DW_TAG_member, name: "ret_count", scope: !3095, file: !6, line: 347, baseType: !1224, size: 32, offset: 192)
!3102 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3071, file: !6, line: 434, baseType: !3103, size: 64, offset: 192)
!3103 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructFreeFunc", file: !6, line: 409, baseType: !1424)
!3104 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2976, file: !936, line: 566, baseType: !1460, size: 16, offset: 1472)
!3105 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !2967, file: !41, line: 337, baseType: !1391, size: 64, offset: 768)
!3106 = !DIDerivedType(tag: DW_TAG_member, name: "py_instance", scope: !2967, file: !41, line: 338, baseType: !1391, size: 64, offset: 832)
!3107 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !2967, file: !41, line: 340, baseType: !3082, size: 64, offset: 896)
!3108 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !2967, file: !41, line: 341, baseType: !3109, size: 64, offset: 960)
!3109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3110, size: 64)
!3110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ReportList", file: !41, line: 106, size: 320, elements: !3111)
!3111 = !{!3112, !3113, !3114, !3115, !3116, !3117}
!3112 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !3110, file: !41, line: 107, baseType: !1486, size: 128)
!3113 = !DIDerivedType(tag: DW_TAG_member, name: "printlevel", scope: !3110, file: !41, line: 108, baseType: !1224, size: 32, offset: 128)
!3114 = !DIDerivedType(tag: DW_TAG_member, name: "storelevel", scope: !3110, file: !41, line: 109, baseType: !1224, size: 32, offset: 160)
!3115 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3110, file: !41, line: 110, baseType: !1224, size: 32, offset: 192)
!3116 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3110, file: !41, line: 110, baseType: !1224, size: 32, offset: 224)
!3117 = !DIDerivedType(tag: DW_TAG_member, name: "reporttimer", scope: !3110, file: !41, line: 111, baseType: !3118, size: 64, offset: 256)
!3118 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3119, size: 64)
!3119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTimer", file: !936, line: 490, size: 768, elements: !3120)
!3120 = !{!3121, !3122, !3123, !3200, !3201, !3202, !3203, !3204, !3205, !3206, !3207, !3208}
!3121 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3119, file: !936, line: 491, baseType: !3118, size: 64)
!3122 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3119, file: !936, line: 491, baseType: !3118, size: 64, offset: 64)
!3123 = !DIDerivedType(tag: DW_TAG_member, name: "win", scope: !3119, file: !936, line: 493, baseType: !3124, size: 64, offset: 128)
!3124 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3125, size: 64)
!3125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmWindow", file: !41, line: 169, size: 2048, elements: !3126)
!3126 = !{!3127, !3128, !3129, !3130, !3157, !3158, !3159, !3160, !3161, !3162, !3163, !3164, !3165, !3166, !3167, !3168, !3169, !3170, !3171, !3172, !3173, !3174, !3175, !3178, !3192, !3193, !3194, !3195, !3196, !3197, !3198, !3199}
!3127 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3125, file: !41, line: 170, baseType: !3124, size: 64)
!3128 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3125, file: !41, line: 170, baseType: !3124, size: 64, offset: 64)
!3129 = !DIDerivedType(tag: DW_TAG_member, name: "ghostwin", scope: !3125, file: !41, line: 172, baseType: !1391, size: 64, offset: 128)
!3130 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !3125, file: !41, line: 174, baseType: !3131, size: 64, offset: 192)
!3131 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3132, size: 64)
!3132 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bScreen", file: !1302, line: 49, size: 1984, elements: !3133)
!3133 = !{!3134, !3135, !3136, !3137, !3138, !3139, !3140, !3141, !3142, !3143, !3144, !3145, !3146, !3147, !3148, !3149, !3150, !3151, !3152, !3153, !3154, !3155, !3156}
!3134 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3132, file: !1302, line: 50, baseType: !1428, size: 960)
!3135 = !DIDerivedType(tag: DW_TAG_member, name: "vertbase", scope: !3132, file: !1302, line: 52, baseType: !1486, size: 128, offset: 960)
!3136 = !DIDerivedType(tag: DW_TAG_member, name: "edgebase", scope: !3132, file: !1302, line: 53, baseType: !1486, size: 128, offset: 1088)
!3137 = !DIDerivedType(tag: DW_TAG_member, name: "areabase", scope: !3132, file: !1302, line: 54, baseType: !1486, size: 128, offset: 1216)
!3138 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !3132, file: !1302, line: 55, baseType: !1486, size: 128, offset: 1344)
!3139 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !3132, file: !1302, line: 57, baseType: !1771, size: 64, offset: 1472)
!3140 = !DIDerivedType(tag: DW_TAG_member, name: "newscene", scope: !3132, file: !1302, line: 58, baseType: !1771, size: 64, offset: 1536)
!3141 = !DIDerivedType(tag: DW_TAG_member, name: "redraws_flag", scope: !3132, file: !1302, line: 60, baseType: !1224, size: 32, offset: 1600)
!3142 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !3132, file: !1302, line: 61, baseType: !1224, size: 32, offset: 1632)
!3143 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !3132, file: !1302, line: 63, baseType: !1460, size: 16, offset: 1664)
!3144 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !3132, file: !1302, line: 64, baseType: !1460, size: 16, offset: 1680)
!3145 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !3132, file: !1302, line: 65, baseType: !1460, size: 16, offset: 1696)
!3146 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !3132, file: !1302, line: 66, baseType: !1460, size: 16, offset: 1712)
!3147 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !3132, file: !1302, line: 67, baseType: !1460, size: 16, offset: 1728)
!3148 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_gesture", scope: !3132, file: !1302, line: 68, baseType: !1460, size: 16, offset: 1744)
!3149 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_paintcursor", scope: !3132, file: !1302, line: 69, baseType: !1460, size: 16, offset: 1760)
!3150 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_drag", scope: !3132, file: !1302, line: 70, baseType: !1460, size: 16, offset: 1776)
!3151 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !3132, file: !1302, line: 71, baseType: !1460, size: 16, offset: 1792)
!3152 = !DIDerivedType(tag: DW_TAG_member, name: "mainwin", scope: !3132, file: !1302, line: 73, baseType: !1460, size: 16, offset: 1808)
!3153 = !DIDerivedType(tag: DW_TAG_member, name: "subwinactive", scope: !3132, file: !1302, line: 74, baseType: !1460, size: 16, offset: 1824)
!3154 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3132, file: !1302, line: 76, baseType: !1460, size: 16, offset: 1840)
!3155 = !DIDerivedType(tag: DW_TAG_member, name: "animtimer", scope: !3132, file: !1302, line: 78, baseType: !3118, size: 64, offset: 1856)
!3156 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !3132, file: !1302, line: 79, baseType: !1391, size: 64, offset: 1920)
!3157 = !DIDerivedType(tag: DW_TAG_member, name: "newscreen", scope: !3125, file: !41, line: 175, baseType: !3131, size: 64, offset: 256)
!3158 = !DIDerivedType(tag: DW_TAG_member, name: "screenname", scope: !3125, file: !41, line: 176, baseType: !1476, size: 512, offset: 320)
!3159 = !DIDerivedType(tag: DW_TAG_member, name: "posx", scope: !3125, file: !41, line: 178, baseType: !1460, size: 16, offset: 832)
!3160 = !DIDerivedType(tag: DW_TAG_member, name: "posy", scope: !3125, file: !41, line: 178, baseType: !1460, size: 16, offset: 848)
!3161 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !3125, file: !41, line: 178, baseType: !1460, size: 16, offset: 864)
!3162 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !3125, file: !41, line: 178, baseType: !1460, size: 16, offset: 880)
!3163 = !DIDerivedType(tag: DW_TAG_member, name: "windowstate", scope: !3125, file: !41, line: 179, baseType: !1460, size: 16, offset: 896)
!3164 = !DIDerivedType(tag: DW_TAG_member, name: "monitor", scope: !3125, file: !41, line: 180, baseType: !1460, size: 16, offset: 912)
!3165 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !3125, file: !41, line: 181, baseType: !1460, size: 16, offset: 928)
!3166 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !3125, file: !41, line: 182, baseType: !1460, size: 16, offset: 944)
!3167 = !DIDerivedType(tag: DW_TAG_member, name: "lastcursor", scope: !3125, file: !41, line: 183, baseType: !1460, size: 16, offset: 960)
!3168 = !DIDerivedType(tag: DW_TAG_member, name: "modalcursor", scope: !3125, file: !41, line: 184, baseType: !1460, size: 16, offset: 976)
!3169 = !DIDerivedType(tag: DW_TAG_member, name: "grabcursor", scope: !3125, file: !41, line: 185, baseType: !1460, size: 16, offset: 992)
!3170 = !DIDerivedType(tag: DW_TAG_member, name: "addmousemove", scope: !3125, file: !41, line: 186, baseType: !1460, size: 16, offset: 1008)
!3171 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !3125, file: !41, line: 188, baseType: !1224, size: 32, offset: 1024)
!3172 = !DIDerivedType(tag: DW_TAG_member, name: "lock_pie_event", scope: !3125, file: !41, line: 190, baseType: !1460, size: 16, offset: 1056)
!3173 = !DIDerivedType(tag: DW_TAG_member, name: "last_pie_event", scope: !3125, file: !41, line: 191, baseType: !1460, size: 16, offset: 1072)
!3174 = !DIDerivedType(tag: DW_TAG_member, name: "eventstate", scope: !3125, file: !41, line: 194, baseType: !3001, size: 64, offset: 1088)
!3175 = !DIDerivedType(tag: DW_TAG_member, name: "curswin", scope: !3125, file: !41, line: 196, baseType: !3176, size: 64, offset: 1152)
!3176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3177, size: 64)
!3177 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmSubWindow", file: !41, line: 55, flags: DIFlagFwdDecl)
!3178 = !DIDerivedType(tag: DW_TAG_member, name: "tweak", scope: !3125, file: !41, line: 198, baseType: !3179, size: 64, offset: 1216)
!3179 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3180, size: 64)
!3180 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmGesture", file: !936, line: 398, size: 448, elements: !3181)
!3181 = !{!3182, !3183, !3184, !3185, !3186, !3187, !3188, !3189, !3190, !3191}
!3182 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3180, file: !936, line: 399, baseType: !3179, size: 64)
!3183 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3180, file: !936, line: 399, baseType: !3179, size: 64, offset: 64)
!3184 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !3180, file: !936, line: 400, baseType: !1224, size: 32, offset: 128)
!3185 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3180, file: !936, line: 401, baseType: !1224, size: 32, offset: 160)
!3186 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3180, file: !936, line: 402, baseType: !1224, size: 32, offset: 192)
!3187 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !3180, file: !936, line: 403, baseType: !1224, size: 32, offset: 224)
!3188 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !3180, file: !936, line: 404, baseType: !1224, size: 32, offset: 256)
!3189 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3180, file: !936, line: 405, baseType: !1224, size: 32, offset: 288)
!3190 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !3180, file: !936, line: 407, baseType: !1391, size: 64, offset: 320)
!3191 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !3180, file: !936, line: 414, baseType: !1391, size: 64, offset: 384)
!3192 = !DIDerivedType(tag: DW_TAG_member, name: "drawmethod", scope: !3125, file: !41, line: 200, baseType: !1224, size: 32, offset: 1280)
!3193 = !DIDerivedType(tag: DW_TAG_member, name: "drawfail", scope: !3125, file: !41, line: 200, baseType: !1224, size: 32, offset: 1312)
!3194 = !DIDerivedType(tag: DW_TAG_member, name: "drawdata", scope: !3125, file: !41, line: 201, baseType: !1391, size: 64, offset: 1344)
!3195 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !3125, file: !41, line: 203, baseType: !1486, size: 128, offset: 1408)
!3196 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !3125, file: !41, line: 204, baseType: !1486, size: 128, offset: 1536)
!3197 = !DIDerivedType(tag: DW_TAG_member, name: "modalhandlers", scope: !3125, file: !41, line: 205, baseType: !1486, size: 128, offset: 1664)
!3198 = !DIDerivedType(tag: DW_TAG_member, name: "subwindows", scope: !3125, file: !41, line: 207, baseType: !1486, size: 128, offset: 1792)
!3199 = !DIDerivedType(tag: DW_TAG_member, name: "gesture", scope: !3125, file: !41, line: 208, baseType: !1486, size: 128, offset: 1920)
!3200 = !DIDerivedType(tag: DW_TAG_member, name: "timestep", scope: !3119, file: !936, line: 495, baseType: !3016, size: 64, offset: 192)
!3201 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !3119, file: !936, line: 496, baseType: !1224, size: 32, offset: 256)
!3202 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !3119, file: !936, line: 497, baseType: !1391, size: 64, offset: 320)
!3203 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !3119, file: !936, line: 499, baseType: !3016, size: 64, offset: 384)
!3204 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3119, file: !936, line: 500, baseType: !3016, size: 64, offset: 448)
!3205 = !DIDerivedType(tag: DW_TAG_member, name: "ltime", scope: !3119, file: !936, line: 502, baseType: !3016, size: 64, offset: 512)
!3206 = !DIDerivedType(tag: DW_TAG_member, name: "ntime", scope: !3119, file: !936, line: 503, baseType: !3016, size: 64, offset: 576)
!3207 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !3119, file: !936, line: 504, baseType: !3016, size: 64, offset: 640)
!3208 = !DIDerivedType(tag: DW_TAG_member, name: "sleep", scope: !3119, file: !936, line: 505, baseType: !1224, size: 32, offset: 704)
!3209 = !DIDerivedType(tag: DW_TAG_member, name: "macro", scope: !2967, file: !41, line: 343, baseType: !1486, size: 128, offset: 1024)
!3210 = !DIDerivedType(tag: DW_TAG_member, name: "opm", scope: !2967, file: !41, line: 344, baseType: !2970, size: 64, offset: 1152)
!3211 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !2967, file: !41, line: 345, baseType: !3212, size: 64, offset: 1216)
!3212 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3213, size: 64)
!3213 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiLayout", file: !1302, line: 46, flags: DIFlagFwdDecl)
!3214 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2967, file: !41, line: 346, baseType: !1460, size: 16, offset: 1280)
!3215 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2967, file: !41, line: 346, baseType: !2861, size: 48, offset: 1296)
!3216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3217, size: 64)
!3217 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmEvent", file: !936, line: 460, baseType: !2998)
!3218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3219, size: 64)
!3219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FileRuntime", file: !3, line: 2267, size: 8, elements: !3220)
!3220 = !{!3221}
!3221 = !DIDerivedType(tag: DW_TAG_member, name: "is_untrusted", scope: !3219, file: !3, line: 2268, baseType: !2328, size: 8)
!3222 = !{!3223, !3240, !3245, !3249, !0, !3251, !3528, !3531, !3534, !3544, !3547, !3550}
!3223 = !DIGlobalVariableExpression(var: !3224, expr: !DIExpression())
!3224 = distinct !DIGlobalVariable(name: "file_display_items", scope: !3225, file: !3, line: 1197, type: !3231, isLocal: true, isDefinition: true)
!3225 = distinct !DISubprogram(name: "WM_operator_properties_filesel", scope: !3, file: !3, line: 1193, type: !3226, scopeLine: 1194, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!3226 = !DISubroutineType(types: !3227)
!3227 = !{null, !3228, !1224, !1460, !1460, !1460, !1460}
!3228 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3229, size: 64)
!3229 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmOperatorType", file: !936, line: 568, baseType: !2976)
!3230 = !{}
!3231 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3232, size: 1600, elements: !2376)
!3232 = !DIDerivedType(tag: DW_TAG_typedef, name: "EnumPropertyItem", file: !6, line: 308, baseType: !3233)
!3233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnumPropertyItem", file: !6, line: 302, size: 320, elements: !3234)
!3234 = !{!3235, !3236, !3237, !3238, !3239}
!3235 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !3233, file: !6, line: 303, baseType: !1224, size: 32)
!3236 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !3233, file: !6, line: 304, baseType: !2979, size: 64, offset: 64)
!3237 = !DIDerivedType(tag: DW_TAG_member, name: "icon", scope: !3233, file: !6, line: 305, baseType: !1224, size: 32, offset: 128)
!3238 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3233, file: !6, line: 306, baseType: !2979, size: 64, offset: 192)
!3239 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !3233, file: !6, line: 307, baseType: !2979, size: 64, offset: 256)
!3240 = !DIGlobalVariableExpression(var: !3241, expr: !DIExpression())
!3241 = distinct !DIGlobalVariable(name: "select_actions", scope: !3242, file: !3, line: 1268, type: !3231, isLocal: true, isDefinition: true)
!3242 = distinct !DISubprogram(name: "WM_operator_properties_select_action", scope: !3, file: !3, line: 1266, type: !3243, scopeLine: 1267, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!3243 = !DISubroutineType(types: !3244)
!3244 = !{null, !3228, !1224}
!3245 = !DIGlobalVariableExpression(var: !3246, expr: !DIExpression())
!3246 = distinct !DIGlobalVariable(name: "select_actions", scope: !3247, file: !3, line: 1284, type: !3248, isLocal: true, isDefinition: true)
!3247 = distinct !DISubprogram(name: "WM_operator_properties_select_action_simple", scope: !3, file: !3, line: 1282, type: !3243, scopeLine: 1283, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!3248 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3232, size: 960, elements: !1573)
!3249 = !DIGlobalVariableExpression(var: !3250, expr: !DIExpression())
!3250 = distinct !DIGlobalVariable(name: "circle_select_size", scope: !2, file: !3, line: 3193, type: !1224, isLocal: false, isDefinition: true)
!3251 = !DIGlobalVariableExpression(var: !3252, expr: !DIExpression())
!3252 = distinct !DIGlobalVariable(name: "search", scope: !3253, file: !3, line: 1094, type: !1935, isLocal: true, isDefinition: true)
!3253 = distinct !DISubprogram(name: "wm_enum_search_menu", scope: !3, file: !3, line: 1092, type: !3254, scopeLine: 1093, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!3254 = !DISubroutineType(types: !3255)
!3255 = !{!3256, !1414, !3259, !1391}
!3256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3257, size: 64)
!3257 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiBlock", file: !1255, line: 83, baseType: !3258)
!3258 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiBlock", file: !41, line: 54, flags: DIFlagFwdDecl)
!3259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3260, size: 64)
!3260 = !DIDerivedType(tag: DW_TAG_typedef, name: "ARegion", file: !1302, line: 267, baseType: !3261)
!3261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ARegion", file: !1302, line: 230, size: 3072, elements: !3262)
!3262 = !{!3263, !3265, !3266, !3300, !3301, !3302, !3303, !3304, !3305, !3306, !3307, !3308, !3309, !3310, !3311, !3312, !3313, !3314, !3315, !3316, !3317, !3518, !3519, !3520, !3521, !3522, !3523, !3524, !3525, !3526, !3527}
!3263 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3261, file: !1302, line: 231, baseType: !3264, size: 64)
!3264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3261, size: 64)
!3265 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3261, file: !1302, line: 231, baseType: !3264, size: 64, offset: 64)
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !3261, file: !1302, line: 233, baseType: !3267, size: 1280, offset: 128)
!3267 = !DIDerivedType(tag: DW_TAG_typedef, name: "View2D", file: !3268, line: 71, baseType: !3269)
!3268 = !DIFile(filename: "blender/source/blender/makesdna/DNA_view2d_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "View2D", file: !3268, line: 40, size: 1280, elements: !3270)
!3270 = !{!3271, !3272, !3273, !3274, !3275, !3276, !3277, !3278, !3279, !3280, !3281, !3282, !3283, !3284, !3285, !3286, !3287, !3288, !3289, !3290, !3291, !3292, !3294, !3295, !3296, !3299}
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !3269, file: !3268, line: 41, baseType: !1840, size: 128)
!3272 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !3269, file: !3268, line: 41, baseType: !1840, size: 128, offset: 128)
!3273 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !3269, file: !3268, line: 42, baseType: !2726, size: 128, offset: 256)
!3274 = !DIDerivedType(tag: DW_TAG_member, name: "hor", scope: !3269, file: !3268, line: 42, baseType: !2726, size: 128, offset: 384)
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !3269, file: !3268, line: 43, baseType: !2726, size: 128, offset: 512)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !3269, file: !3268, line: 45, baseType: !1763, size: 64, offset: 640)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !3269, file: !3268, line: 45, baseType: !1763, size: 64, offset: 704)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "minzoom", scope: !3269, file: !3268, line: 46, baseType: !1537, size: 32, offset: 768)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "maxzoom", scope: !3269, file: !3268, line: 46, baseType: !1537, size: 32, offset: 800)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "scroll", scope: !3269, file: !3268, line: 48, baseType: !1460, size: 16, offset: 832)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "scroll_ui", scope: !3269, file: !3268, line: 49, baseType: !1460, size: 16, offset: 848)
!3282 = !DIDerivedType(tag: DW_TAG_member, name: "keeptot", scope: !3269, file: !3268, line: 51, baseType: !1460, size: 16, offset: 864)
!3283 = !DIDerivedType(tag: DW_TAG_member, name: "keepzoom", scope: !3269, file: !3268, line: 52, baseType: !1460, size: 16, offset: 880)
!3284 = !DIDerivedType(tag: DW_TAG_member, name: "keepofs", scope: !3269, file: !3268, line: 53, baseType: !1460, size: 16, offset: 896)
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3269, file: !3268, line: 55, baseType: !1460, size: 16, offset: 912)
!3286 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !3269, file: !3268, line: 56, baseType: !1460, size: 16, offset: 928)
!3287 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !3269, file: !3268, line: 58, baseType: !1460, size: 16, offset: 944)
!3288 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !3269, file: !3268, line: 58, baseType: !1460, size: 16, offset: 960)
!3289 = !DIDerivedType(tag: DW_TAG_member, name: "oldwinx", scope: !3269, file: !3268, line: 59, baseType: !1460, size: 16, offset: 976)
!3290 = !DIDerivedType(tag: DW_TAG_member, name: "oldwiny", scope: !3269, file: !3268, line: 59, baseType: !1460, size: 16, offset: 992)
!3291 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !3269, file: !3268, line: 61, baseType: !1460, size: 16, offset: 1008)
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "tab_offset", scope: !3269, file: !3268, line: 63, baseType: !3293, size: 64, offset: 1024)
!3293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1537, size: 64)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "tab_num", scope: !3269, file: !3268, line: 64, baseType: !1224, size: 32, offset: 1088)
!3295 = !DIDerivedType(tag: DW_TAG_member, name: "tab_cur", scope: !3269, file: !3268, line: 65, baseType: !1224, size: 32, offset: 1120)
!3296 = !DIDerivedType(tag: DW_TAG_member, name: "sms", scope: !3269, file: !3268, line: 68, baseType: !3297, size: 64, offset: 1152)
!3297 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3298, size: 64)
!3298 = !DICompositeType(tag: DW_TAG_structure_type, name: "SmoothView2DStore", file: !3268, line: 68, flags: DIFlagFwdDecl)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_timer", scope: !3269, file: !3268, line: 69, baseType: !3118, size: 64, offset: 1216)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "winrct", scope: !3261, file: !1302, line: 234, baseType: !2726, size: 128, offset: 1408)
!3301 = !DIDerivedType(tag: DW_TAG_member, name: "drawrct", scope: !3261, file: !1302, line: 235, baseType: !2726, size: 128, offset: 1536)
!3302 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !3261, file: !1302, line: 236, baseType: !1460, size: 16, offset: 1664)
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !3261, file: !1302, line: 236, baseType: !1460, size: 16, offset: 1680)
!3304 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !3261, file: !1302, line: 238, baseType: !1460, size: 16, offset: 1696)
!3305 = !DIDerivedType(tag: DW_TAG_member, name: "regiontype", scope: !3261, file: !1302, line: 239, baseType: !1460, size: 16, offset: 1712)
!3306 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !3261, file: !1302, line: 240, baseType: !1460, size: 16, offset: 1728)
!3307 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3261, file: !1302, line: 241, baseType: !1460, size: 16, offset: 1744)
!3308 = !DIDerivedType(tag: DW_TAG_member, name: "fsize", scope: !3261, file: !1302, line: 243, baseType: !1537, size: 32, offset: 1760)
!3309 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !3261, file: !1302, line: 244, baseType: !1460, size: 16, offset: 1792)
!3310 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !3261, file: !1302, line: 244, baseType: !1460, size: 16, offset: 1808)
!3311 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !3261, file: !1302, line: 246, baseType: !1460, size: 16, offset: 1824)
!3312 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_overlay", scope: !3261, file: !1302, line: 247, baseType: !1460, size: 16, offset: 1840)
!3313 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !3261, file: !1302, line: 248, baseType: !1460, size: 16, offset: 1856)
!3314 = !DIDerivedType(tag: DW_TAG_member, name: "overlap", scope: !3261, file: !1302, line: 249, baseType: !1460, size: 16, offset: 1872)
!3315 = !DIDerivedType(tag: DW_TAG_member, name: "flagfullscreen", scope: !3261, file: !1302, line: 250, baseType: !1460, size: 16, offset: 1888)
!3316 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3261, file: !1302, line: 251, baseType: !1460, size: 16, offset: 1904)
!3317 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3261, file: !1302, line: 253, baseType: !3318, size: 64, offset: 1920)
!3318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3319, size: 64)
!3319 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ARegionType", file: !3320, line: 116, size: 1472, elements: !3321)
!3320 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_screen.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3321 = !{!3322, !3323, !3324, !3325, !3363, !3364, !3370, !3492, !3496, !3500, !3501, !3502, !3506, !3507, !3508, !3509, !3510, !3511, !3512, !3513, !3514, !3515, !3516, !3517}
!3322 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3319, file: !3320, line: 117, baseType: !3318, size: 64)
!3323 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3319, file: !3320, line: 117, baseType: !3318, size: 64, offset: 64)
!3324 = !DIDerivedType(tag: DW_TAG_member, name: "regionid", scope: !3319, file: !3320, line: 119, baseType: !1224, size: 32, offset: 128)
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !3319, file: !3320, line: 122, baseType: !3326, size: 64, offset: 192)
!3326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3327, size: 64)
!3327 = !DISubroutineType(types: !3328)
!3328 = !{null, !3329, !3264}
!3329 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3330, size: 64)
!3330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmWindowManager", file: !41, line: 128, size: 2816, elements: !3331)
!3331 = !{!3332, !3333, !3334, !3335, !3336, !3337, !3338, !3339, !3340, !3341, !3342, !3343, !3344, !3345, !3346, !3357, !3358, !3359, !3360, !3361, !3362}
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3330, file: !41, line: 129, baseType: !1428, size: 960)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "windrawable", scope: !3330, file: !41, line: 131, baseType: !3124, size: 64, offset: 960)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "winactive", scope: !3330, file: !41, line: 131, baseType: !3124, size: 64, offset: 1024)
!3335 = !DIDerivedType(tag: DW_TAG_member, name: "windows", scope: !3330, file: !41, line: 132, baseType: !1486, size: 128, offset: 1088)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !3330, file: !41, line: 134, baseType: !1224, size: 32, offset: 1216)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "file_saved", scope: !3330, file: !41, line: 135, baseType: !1460, size: 16, offset: 1248)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "op_undo_depth", scope: !3330, file: !41, line: 136, baseType: !1460, size: 16, offset: 1264)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "operators", scope: !3330, file: !41, line: 138, baseType: !1486, size: 128, offset: 1280)
!3340 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !3330, file: !41, line: 140, baseType: !1486, size: 128, offset: 1408)
!3341 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !3330, file: !41, line: 142, baseType: !3110, size: 320, offset: 1536)
!3342 = !DIDerivedType(tag: DW_TAG_member, name: "jobs", scope: !3330, file: !41, line: 144, baseType: !1486, size: 128, offset: 1856)
!3343 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursors", scope: !3330, file: !41, line: 146, baseType: !1486, size: 128, offset: 1984)
!3344 = !DIDerivedType(tag: DW_TAG_member, name: "drags", scope: !3330, file: !41, line: 148, baseType: !1486, size: 128, offset: 2112)
!3345 = !DIDerivedType(tag: DW_TAG_member, name: "keyconfigs", scope: !3330, file: !41, line: 150, baseType: !1486, size: 128, offset: 2240)
!3346 = !DIDerivedType(tag: DW_TAG_member, name: "defaultconf", scope: !3330, file: !41, line: 151, baseType: !3347, size: 64, offset: 2368)
!3347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3348, size: 64)
!3348 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmKeyConfig", file: !41, line: 310, size: 1344, elements: !3349)
!3349 = !{!3350, !3351, !3352, !3353, !3354, !3355, !3356}
!3350 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3348, file: !41, line: 311, baseType: !3347, size: 64)
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3348, file: !41, line: 311, baseType: !3347, size: 64, offset: 64)
!3352 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !3348, file: !41, line: 313, baseType: !1476, size: 512, offset: 128)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "basename", scope: !3348, file: !41, line: 314, baseType: !1476, size: 512, offset: 640)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "keymaps", scope: !3348, file: !41, line: 316, baseType: !1486, size: 128, offset: 1152)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "actkeymap", scope: !3348, file: !41, line: 317, baseType: !1224, size: 32, offset: 1280)
!3356 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3348, file: !41, line: 317, baseType: !1224, size: 32, offset: 1312)
!3357 = !DIDerivedType(tag: DW_TAG_member, name: "addonconf", scope: !3330, file: !41, line: 152, baseType: !3347, size: 64, offset: 2432)
!3358 = !DIDerivedType(tag: DW_TAG_member, name: "userconf", scope: !3330, file: !41, line: 153, baseType: !3347, size: 64, offset: 2496)
!3359 = !DIDerivedType(tag: DW_TAG_member, name: "timers", scope: !3330, file: !41, line: 155, baseType: !1486, size: 128, offset: 2560)
!3360 = !DIDerivedType(tag: DW_TAG_member, name: "autosavetimer", scope: !3330, file: !41, line: 156, baseType: !3118, size: 64, offset: 2688)
!3361 = !DIDerivedType(tag: DW_TAG_member, name: "is_interface_locked", scope: !3330, file: !41, line: 158, baseType: !1447, size: 8, offset: 2752)
!3362 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !3330, file: !41, line: 159, baseType: !2226, size: 56, offset: 2760)
!3363 = !DIDerivedType(tag: DW_TAG_member, name: "exit", scope: !3319, file: !3320, line: 124, baseType: !3326, size: 64, offset: 256)
!3364 = !DIDerivedType(tag: DW_TAG_member, name: "draw", scope: !3319, file: !3320, line: 126, baseType: !3365, size: 64, offset: 320)
!3365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3366, size: 64)
!3366 = !DISubroutineType(types: !3367)
!3367 = !{null, !3368, !3264}
!3368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3369, size: 64)
!3369 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1409)
!3370 = !DIDerivedType(tag: DW_TAG_member, name: "listener", scope: !3319, file: !3320, line: 128, baseType: !3371, size: 64, offset: 384)
!3371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3372, size: 64)
!3372 = !DISubroutineType(types: !3373)
!3373 = !{null, !3131, !3374, !3264, !3449}
!3374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3375, size: 64)
!3375 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrArea", file: !1302, line: 203, size: 1280, elements: !3376)
!3376 = !{!3377, !3378, !3379, !3396, !3397, !3398, !3399, !3402, !3403, !3404, !3405, !3406, !3407, !3408, !3409, !3410, !3411, !3412, !3413, !3488, !3489, !3490, !3491}
!3377 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3375, file: !1302, line: 204, baseType: !3374, size: 64)
!3378 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3375, file: !1302, line: 204, baseType: !3374, size: 64, offset: 64)
!3379 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3375, file: !1302, line: 206, baseType: !3380, size: 64, offset: 128)
!3380 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3381, size: 64)
!3381 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScrVert", file: !1302, line: 87, baseType: !3382)
!3382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrVert", file: !1302, line: 82, size: 256, elements: !3383)
!3383 = !{!3384, !3386, !3387, !3388, !3394, !3395}
!3384 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3382, file: !1302, line: 83, baseType: !3385, size: 64)
!3385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3382, size: 64)
!3386 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3382, file: !1302, line: 83, baseType: !3385, size: 64, offset: 64)
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "newv", scope: !3382, file: !1302, line: 83, baseType: !3385, size: 64, offset: 128)
!3388 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !3382, file: !1302, line: 84, baseType: !3389, size: 32, offset: 192)
!3389 = !DIDerivedType(tag: DW_TAG_typedef, name: "vec2s", file: !1841, line: 43, baseType: !3390)
!3390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vec2s", file: !1841, line: 41, size: 32, elements: !3391)
!3391 = !{!3392, !3393}
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !3390, file: !1841, line: 42, baseType: !1460, size: 16)
!3393 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !3390, file: !1841, line: 42, baseType: !1460, size: 16, offset: 16)
!3394 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3382, file: !1302, line: 86, baseType: !1460, size: 16, offset: 224)
!3395 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !3382, file: !1302, line: 86, baseType: !1460, size: 16, offset: 240)
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3375, file: !1302, line: 206, baseType: !3380, size: 64, offset: 192)
!3397 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3375, file: !1302, line: 206, baseType: !3380, size: 64, offset: 256)
!3398 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3375, file: !1302, line: 206, baseType: !3380, size: 64, offset: 320)
!3399 = !DIDerivedType(tag: DW_TAG_member, name: "full", scope: !3375, file: !1302, line: 207, baseType: !3400, size: 64, offset: 384)
!3400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3401, size: 64)
!3401 = !DIDerivedType(tag: DW_TAG_typedef, name: "bScreen", file: !1302, line: 80, baseType: !3132)
!3402 = !DIDerivedType(tag: DW_TAG_member, name: "totrct", scope: !3375, file: !1302, line: 209, baseType: !2726, size: 128, offset: 448)
!3403 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !3375, file: !1302, line: 211, baseType: !1447, size: 8, offset: 576)
!3404 = !DIDerivedType(tag: DW_TAG_member, name: "butspacetype", scope: !3375, file: !1302, line: 211, baseType: !1447, size: 8, offset: 584)
!3405 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !3375, file: !1302, line: 212, baseType: !1460, size: 16, offset: 592)
!3406 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !3375, file: !1302, line: 212, baseType: !1460, size: 16, offset: 608)
!3407 = !DIDerivedType(tag: DW_TAG_member, name: "headertype", scope: !3375, file: !1302, line: 214, baseType: !1460, size: 16, offset: 624)
!3408 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !3375, file: !1302, line: 215, baseType: !1460, size: 16, offset: 640)
!3409 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3375, file: !1302, line: 216, baseType: !1460, size: 16, offset: 656)
!3410 = !DIDerivedType(tag: DW_TAG_member, name: "region_active_win", scope: !3375, file: !1302, line: 217, baseType: !1460, size: 16, offset: 672)
!3411 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !3375, file: !1302, line: 219, baseType: !1447, size: 8, offset: 688)
!3412 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3375, file: !1302, line: 219, baseType: !1447, size: 8, offset: 696)
!3413 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3375, file: !1302, line: 221, baseType: !3414, size: 64, offset: 704)
!3414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3415, size: 64)
!3415 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceType", file: !3320, line: 66, size: 1728, elements: !3416)
!3416 = !{!3417, !3418, !3419, !3420, !3421, !3422, !3436, !3440, !3444, !3445, !3462, !3466, !3470, !3474, !3478, !3479, !3485, !3486, !3487}
!3417 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3415, file: !3320, line: 67, baseType: !3414, size: 64)
!3418 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3415, file: !3320, line: 67, baseType: !3414, size: 64, offset: 64)
!3419 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3415, file: !3320, line: 69, baseType: !1476, size: 512, offset: 128)
!3420 = !DIDerivedType(tag: DW_TAG_member, name: "spaceid", scope: !3415, file: !3320, line: 70, baseType: !1224, size: 32, offset: 640)
!3421 = !DIDerivedType(tag: DW_TAG_member, name: "iconid", scope: !3415, file: !3320, line: 71, baseType: !1224, size: 32, offset: 672)
!3422 = !DIDerivedType(tag: DW_TAG_member, name: "new", scope: !3415, file: !3320, line: 74, baseType: !3423, size: 64, offset: 704)
!3423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3424, size: 64)
!3424 = !DISubroutineType(types: !3425)
!3425 = !{!3426, !3368}
!3426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3427, size: 64)
!3427 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceLink", file: !959, line: 85, size: 448, elements: !3428)
!3428 = !{!3429, !3430, !3431, !3432, !3433, !3434}
!3429 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3427, file: !959, line: 86, baseType: !3426, size: 64)
!3430 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3427, file: !959, line: 86, baseType: !3426, size: 64, offset: 64)
!3431 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !3427, file: !959, line: 87, baseType: !1486, size: 128, offset: 128)
!3432 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !3427, file: !959, line: 88, baseType: !1224, size: 32, offset: 256)
!3433 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !3427, file: !959, line: 89, baseType: !1537, size: 32, offset: 288)
!3434 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !3427, file: !959, line: 90, baseType: !3435, size: 128, offset: 320)
!3435 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1460, size: 128, elements: !2179)
!3436 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3415, file: !3320, line: 76, baseType: !3437, size: 64, offset: 768)
!3437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3438, size: 64)
!3438 = !DISubroutineType(types: !3439)
!3439 = !{null, !3426}
!3440 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !3415, file: !3320, line: 79, baseType: !3441, size: 64, offset: 832)
!3441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3442, size: 64)
!3442 = !DISubroutineType(types: !3443)
!3443 = !{null, !3329, !3374}
!3444 = !DIDerivedType(tag: DW_TAG_member, name: "exit", scope: !3415, file: !3320, line: 81, baseType: !3441, size: 64, offset: 896)
!3445 = !DIDerivedType(tag: DW_TAG_member, name: "listener", scope: !3415, file: !3320, line: 83, baseType: !3446, size: 64, offset: 960)
!3446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3447, size: 64)
!3447 = !DISubroutineType(types: !3448)
!3448 = !{null, !3131, !3374, !3449}
!3449 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3450, size: 64)
!3450 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmNotifier", file: !936, line: 195, size: 512, elements: !3451)
!3451 = !{!3452, !3453, !3454, !3455, !3456, !3457, !3458, !3459, !3460, !3461}
!3452 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3450, file: !936, line: 196, baseType: !3449, size: 64)
!3453 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3450, file: !936, line: 196, baseType: !3449, size: 64, offset: 64)
!3454 = !DIDerivedType(tag: DW_TAG_member, name: "wm", scope: !3450, file: !936, line: 198, baseType: !3329, size: 64, offset: 128)
!3455 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !3450, file: !936, line: 199, baseType: !3124, size: 64, offset: 192)
!3456 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !3450, file: !936, line: 201, baseType: !1224, size: 32, offset: 256)
!3457 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !3450, file: !936, line: 202, baseType: !7, size: 32, offset: 288)
!3458 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3450, file: !936, line: 202, baseType: !7, size: 32, offset: 320)
!3459 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !3450, file: !936, line: 202, baseType: !7, size: 32, offset: 352)
!3460 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !3450, file: !936, line: 202, baseType: !7, size: 32, offset: 384)
!3461 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !3450, file: !936, line: 204, baseType: !1391, size: 64, offset: 448)
!3462 = !DIDerivedType(tag: DW_TAG_member, name: "refresh", scope: !3415, file: !3320, line: 86, baseType: !3463, size: 64, offset: 1024)
!3463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3464, size: 64)
!3464 = !DISubroutineType(types: !3465)
!3465 = !{null, !3368, !3374}
!3466 = !DIDerivedType(tag: DW_TAG_member, name: "duplicate", scope: !3415, file: !3320, line: 89, baseType: !3467, size: 64, offset: 1088)
!3467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3468, size: 64)
!3468 = !DISubroutineType(types: !3469)
!3469 = !{!3426, !3426}
!3470 = !DIDerivedType(tag: DW_TAG_member, name: "operatortypes", scope: !3415, file: !3320, line: 92, baseType: !3471, size: 64, offset: 1152)
!3471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3472, size: 64)
!3472 = !DISubroutineType(types: !3473)
!3473 = !{null}
!3474 = !DIDerivedType(tag: DW_TAG_member, name: "keymap", scope: !3415, file: !3320, line: 94, baseType: !3475, size: 64, offset: 1216)
!3475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3476, size: 64)
!3476 = !DISubroutineType(types: !3477)
!3477 = !{null, !3347}
!3478 = !DIDerivedType(tag: DW_TAG_member, name: "dropboxes", scope: !3415, file: !3320, line: 96, baseType: !3471, size: 64, offset: 1280)
!3479 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !3415, file: !3320, line: 99, baseType: !3480, size: 64, offset: 1344)
!3480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3481, size: 64)
!3481 = !DISubroutineType(types: !3482)
!3482 = !{!1224, !3368, !2979, !3483}
!3483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3484, size: 64)
!3484 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContextDataResult", file: !1416, line: 71, flags: DIFlagFwdDecl)
!3485 = !DIDerivedType(tag: DW_TAG_member, name: "regiontypes", scope: !3415, file: !3320, line: 102, baseType: !1486, size: 128, offset: 1408)
!3486 = !DIDerivedType(tag: DW_TAG_member, name: "toolshelf", scope: !3415, file: !3320, line: 105, baseType: !1486, size: 128, offset: 1536)
!3487 = !DIDerivedType(tag: DW_TAG_member, name: "keymapflag", scope: !3415, file: !3320, line: 110, baseType: !1224, size: 32, offset: 1664)
!3488 = !DIDerivedType(tag: DW_TAG_member, name: "spacedata", scope: !3375, file: !1302, line: 223, baseType: !1486, size: 128, offset: 768)
!3489 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !3375, file: !1302, line: 224, baseType: !1486, size: 128, offset: 896)
!3490 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !3375, file: !1302, line: 225, baseType: !1486, size: 128, offset: 1024)
!3491 = !DIDerivedType(tag: DW_TAG_member, name: "actionzones", scope: !3375, file: !1302, line: 227, baseType: !1486, size: 128, offset: 1152)
!3492 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3319, file: !3320, line: 130, baseType: !3493, size: 64, offset: 448)
!3493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3494, size: 64)
!3494 = !DISubroutineType(types: !3495)
!3495 = !{null, !3264}
!3496 = !DIDerivedType(tag: DW_TAG_member, name: "duplicate", scope: !3319, file: !3320, line: 133, baseType: !3497, size: 64, offset: 512)
!3497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3498, size: 64)
!3498 = !DISubroutineType(types: !3499)
!3499 = !{!1391, !1391}
!3500 = !DIDerivedType(tag: DW_TAG_member, name: "operatortypes", scope: !3319, file: !3320, line: 137, baseType: !3471, size: 64, offset: 576)
!3501 = !DIDerivedType(tag: DW_TAG_member, name: "keymap", scope: !3319, file: !3320, line: 139, baseType: !3475, size: 64, offset: 640)
!3502 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !3319, file: !3320, line: 141, baseType: !3503, size: 64, offset: 704)
!3503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3504, size: 64)
!3504 = !DISubroutineType(types: !3505)
!3505 = !{null, !3124, !3374, !3264}
!3506 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !3319, file: !3320, line: 144, baseType: !3480, size: 64, offset: 768)
!3507 = !DIDerivedType(tag: DW_TAG_member, name: "drawcalls", scope: !3319, file: !3320, line: 147, baseType: !1486, size: 128, offset: 832)
!3508 = !DIDerivedType(tag: DW_TAG_member, name: "paneltypes", scope: !3319, file: !3320, line: 150, baseType: !1486, size: 128, offset: 960)
!3509 = !DIDerivedType(tag: DW_TAG_member, name: "headertypes", scope: !3319, file: !3320, line: 153, baseType: !1486, size: 128, offset: 1088)
!3510 = !DIDerivedType(tag: DW_TAG_member, name: "minsizex", scope: !3319, file: !3320, line: 156, baseType: !1224, size: 32, offset: 1216)
!3511 = !DIDerivedType(tag: DW_TAG_member, name: "minsizey", scope: !3319, file: !3320, line: 156, baseType: !1224, size: 32, offset: 1248)
!3512 = !DIDerivedType(tag: DW_TAG_member, name: "prefsizex", scope: !3319, file: !3320, line: 158, baseType: !1224, size: 32, offset: 1280)
!3513 = !DIDerivedType(tag: DW_TAG_member, name: "prefsizey", scope: !3319, file: !3320, line: 158, baseType: !1224, size: 32, offset: 1312)
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "keymapflag", scope: !3319, file: !3320, line: 160, baseType: !1224, size: 32, offset: 1344)
!3515 = !DIDerivedType(tag: DW_TAG_member, name: "do_lock", scope: !3319, file: !3320, line: 162, baseType: !1460, size: 16, offset: 1376)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3319, file: !3320, line: 162, baseType: !1460, size: 16, offset: 1392)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "event_cursor", scope: !3319, file: !3320, line: 164, baseType: !1460, size: 16, offset: 1408)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "uiblocks", scope: !3261, file: !1302, line: 255, baseType: !1486, size: 128, offset: 1984)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "panels", scope: !3261, file: !1302, line: 256, baseType: !1486, size: 128, offset: 2112)
!3520 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category_active", scope: !3261, file: !1302, line: 257, baseType: !1486, size: 128, offset: 2240)
!3521 = !DIDerivedType(tag: DW_TAG_member, name: "ui_lists", scope: !3261, file: !1302, line: 258, baseType: !1486, size: 128, offset: 2368)
!3522 = !DIDerivedType(tag: DW_TAG_member, name: "ui_previews", scope: !3261, file: !1302, line: 259, baseType: !1486, size: 128, offset: 2496)
!3523 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !3261, file: !1302, line: 260, baseType: !1486, size: 128, offset: 2624)
!3524 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category", scope: !3261, file: !1302, line: 261, baseType: !1486, size: 128, offset: 2752)
!3525 = !DIDerivedType(tag: DW_TAG_member, name: "regiontimer", scope: !3261, file: !1302, line: 263, baseType: !3118, size: 64, offset: 2880)
!3526 = !DIDerivedType(tag: DW_TAG_member, name: "headerstr", scope: !3261, file: !1302, line: 265, baseType: !1502, size: 64, offset: 2944)
!3527 = !DIDerivedType(tag: DW_TAG_member, name: "regiondata", scope: !3261, file: !1302, line: 266, baseType: !1391, size: 64, offset: 3008)
!3528 = !DIGlobalVariableExpression(var: !3529, expr: !DIExpression())
!3529 = distinct !DIGlobalVariable(name: "redraw_timer_type_items", scope: !2, file: !3, line: 4384, type: !3530, isLocal: true, isDefinition: true)
!3530 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3232, size: 2560, elements: !2179)
!3531 = !DIGlobalVariableExpression(var: !3532, expr: !DIExpression())
!3532 = distinct !DIGlobalVariable(name: "search", scope: !3533, file: !3, line: 1988, type: !1935, isLocal: true, isDefinition: true)
!3533 = distinct !DISubprogram(name: "wm_block_search_menu", scope: !3, file: !3, line: 1986, type: !3254, scopeLine: 1987, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!3534 = !DIGlobalVariableExpression(var: !3535, expr: !DIExpression())
!3535 = distinct !DIGlobalVariable(name: "modal_items", scope: !3536, file: !3, line: 4614, type: !3541, isLocal: true, isDefinition: true)
!3536 = distinct !DISubprogram(name: "gesture_circle_modal_keymap", scope: !3, file: !3, line: 4612, type: !3537, scopeLine: 4613, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!3537 = !DISubroutineType(types: !3538)
!3538 = !{null, !3539}
!3539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3540, size: 64)
!3540 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmKeyConfig", file: !41, line: 318, baseType: !3348)
!3541 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3232, size: 2880, elements: !3542)
!3542 = !{!3543}
!3543 = !DISubrange(count: 9)
!3544 = !DIGlobalVariableExpression(var: !3545, expr: !DIExpression())
!3545 = distinct !DIGlobalVariable(name: "modal_items", scope: !3546, file: !3, line: 4703, type: !3231, isLocal: true, isDefinition: true)
!3546 = distinct !DISubprogram(name: "gesture_border_modal_keymap", scope: !3, file: !3, line: 4701, type: !3537, scopeLine: 4702, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!3547 = !DIGlobalVariableExpression(var: !3548, expr: !DIExpression())
!3548 = distinct !DIGlobalVariable(name: "modal_items", scope: !3549, file: !3, line: 4767, type: !3231, isLocal: true, isDefinition: true)
!3549 = distinct !DISubprogram(name: "gesture_zoom_border_modal_keymap", scope: !3, file: !3, line: 4765, type: !3537, scopeLine: 4766, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!3550 = !DIGlobalVariableExpression(var: !3551, expr: !DIExpression())
!3551 = distinct !DIGlobalVariable(name: "modal_items", scope: !3552, file: !3, line: 4672, type: !3553, isLocal: true, isDefinition: true)
!3552 = distinct !DISubprogram(name: "gesture_straightline_modal_keymap", scope: !3, file: !3, line: 4670, type: !3537, scopeLine: 4671, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!3553 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3232, size: 1280, elements: !1645)
!3554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3555, size: 64)
!3555 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHash", file: !1423, line: 48, baseType: !1565)
!3556 = !{i32 7, !"Dwarf Version", i32 4}
!3557 = !{i32 2, !"Debug Info Version", i32 3}
!3558 = !{i32 1, !"wchar_size", i32 4}
!3559 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!3560 = distinct !DISubprogram(name: "WM_operatortype_find", scope: !3, file: !3, line: 122, type: !3561, scopeLine: 123, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!3561 = !DISubroutineType(types: !3562)
!3562 = !{!2975, !2979, !2328}
!3563 = !DILocalVariable(name: "idname", arg: 1, scope: !3560, file: !3, line: 122, type: !2979)
!3564 = !DILocation(line: 122, column: 50, scope: !3560)
!3565 = !DILocalVariable(name: "quiet", arg: 2, scope: !3560, file: !3, line: 122, type: !2328)
!3566 = !DILocation(line: 122, column: 63, scope: !3560)
!3567 = !DILocation(line: 124, column: 6, scope: !3568)
!3568 = distinct !DILexicalBlock(scope: !3560, file: !3, line: 124, column: 6)
!3569 = !DILocation(line: 124, column: 6, scope: !3560)
!3570 = !DILocalVariable(name: "ot", scope: !3571, file: !3, line: 125, type: !3228)
!3571 = distinct !DILexicalBlock(scope: !3568, file: !3, line: 124, column: 17)
!3572 = !DILocation(line: 125, column: 19, scope: !3571)
!3573 = !DILocalVariable(name: "idname_bl", scope: !3571, file: !3, line: 128, type: !1476)
!3574 = !DILocation(line: 128, column: 8, scope: !3571)
!3575 = !DILocation(line: 129, column: 25, scope: !3571)
!3576 = !DILocation(line: 129, column: 36, scope: !3571)
!3577 = !DILocation(line: 129, column: 3, scope: !3571)
!3578 = !DILocation(line: 131, column: 25, scope: !3571)
!3579 = !DILocation(line: 131, column: 42, scope: !3571)
!3580 = !DILocation(line: 131, column: 8, scope: !3571)
!3581 = !DILocation(line: 131, column: 6, scope: !3571)
!3582 = !DILocation(line: 132, column: 7, scope: !3583)
!3583 = distinct !DILexicalBlock(scope: !3571, file: !3, line: 132, column: 7)
!3584 = !DILocation(line: 132, column: 7, scope: !3571)
!3585 = !DILocation(line: 133, column: 11, scope: !3586)
!3586 = distinct !DILexicalBlock(scope: !3583, file: !3, line: 132, column: 11)
!3587 = !DILocation(line: 133, column: 4, scope: !3586)
!3588 = !DILocation(line: 136, column: 8, scope: !3589)
!3589 = distinct !DILexicalBlock(scope: !3571, file: !3, line: 136, column: 7)
!3590 = !DILocation(line: 136, column: 7, scope: !3571)
!3591 = !DILocation(line: 140, column: 3, scope: !3592)
!3592 = distinct !DILexicalBlock(scope: !3589, file: !3, line: 136, column: 15)
!3593 = !DILocation(line: 141, column: 2, scope: !3571)
!3594 = !DILocation(line: 143, column: 8, scope: !3595)
!3595 = distinct !DILexicalBlock(scope: !3596, file: !3, line: 143, column: 7)
!3596 = distinct !DILexicalBlock(scope: !3568, file: !3, line: 142, column: 7)
!3597 = !DILocation(line: 143, column: 7, scope: !3596)
!3598 = !DILocation(line: 144, column: 4, scope: !3599)
!3599 = distinct !DILexicalBlock(scope: !3595, file: !3, line: 143, column: 15)
!3600 = !DILocation(line: 145, column: 3, scope: !3599)
!3601 = !DILocation(line: 148, column: 2, scope: !3560)
!3602 = !DILocation(line: 149, column: 1, scope: !3560)
!3603 = distinct !DISubprogram(name: "WM_operator_bl_idname", scope: !3, file: !3, line: 542, type: !3604, scopeLine: 543, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!3604 = !DISubroutineType(types: !3605)
!3605 = !{null, !1502, !2979}
!3606 = !DILocalVariable(name: "to", arg: 1, scope: !3603, file: !3, line: 542, type: !1502)
!3607 = !DILocation(line: 542, column: 34, scope: !3603)
!3608 = !DILocalVariable(name: "from", arg: 2, scope: !3603, file: !3, line: 542, type: !2979)
!3609 = !DILocation(line: 542, column: 50, scope: !3603)
!3610 = !DILocation(line: 544, column: 6, scope: !3611)
!3611 = distinct !DILexicalBlock(scope: !3603, file: !3, line: 544, column: 6)
!3612 = !DILocation(line: 544, column: 6, scope: !3603)
!3613 = !DILocalVariable(name: "sep", scope: !3614, file: !3, line: 545, type: !2979)
!3614 = distinct !DILexicalBlock(scope: !3611, file: !3, line: 544, column: 12)
!3615 = !DILocation(line: 545, column: 15, scope: !3614)
!3616 = !DILocation(line: 545, column: 28, scope: !3614)
!3617 = !DILocation(line: 545, column: 21, scope: !3614)
!3618 = !DILocation(line: 547, column: 7, scope: !3619)
!3619 = distinct !DILexicalBlock(scope: !3614, file: !3, line: 547, column: 7)
!3620 = !DILocation(line: 547, column: 7, scope: !3614)
!3621 = !DILocalVariable(name: "ofs", scope: !3622, file: !3, line: 548, type: !1224)
!3622 = distinct !DILexicalBlock(scope: !3619, file: !3, line: 547, column: 12)
!3623 = !DILocation(line: 548, column: 8, scope: !3622)
!3624 = !DILocation(line: 548, column: 15, scope: !3622)
!3625 = !DILocation(line: 548, column: 21, scope: !3622)
!3626 = !DILocation(line: 548, column: 19, scope: !3622)
!3627 = !DILocation(line: 548, column: 14, scope: !3622)
!3628 = !DILocation(line: 550, column: 11, scope: !3622)
!3629 = !DILocation(line: 550, column: 15, scope: !3622)
!3630 = !DILocation(line: 550, column: 36, scope: !3622)
!3631 = !DILocation(line: 550, column: 34, scope: !3622)
!3632 = !DILocation(line: 550, column: 4, scope: !3622)
!3633 = !DILocation(line: 551, column: 25, scope: !3622)
!3634 = !DILocation(line: 551, column: 29, scope: !3622)
!3635 = !DILocation(line: 551, column: 4, scope: !3622)
!3636 = !DILocation(line: 552, column: 11, scope: !3622)
!3637 = !DILocation(line: 552, column: 16, scope: !3622)
!3638 = !DILocation(line: 552, column: 14, scope: !3622)
!3639 = !DILocation(line: 552, column: 4, scope: !3622)
!3640 = !DILocation(line: 553, column: 11, scope: !3622)
!3641 = !DILocation(line: 553, column: 17, scope: !3622)
!3642 = !DILocation(line: 553, column: 21, scope: !3622)
!3643 = !DILocation(line: 553, column: 14, scope: !3622)
!3644 = !DILocation(line: 553, column: 27, scope: !3622)
!3645 = !DILocation(line: 553, column: 31, scope: !3622)
!3646 = !DILocation(line: 553, column: 4, scope: !3622)
!3647 = !DILocation(line: 554, column: 3, scope: !3622)
!3648 = !DILocation(line: 557, column: 16, scope: !3649)
!3649 = distinct !DILexicalBlock(scope: !3619, file: !3, line: 555, column: 8)
!3650 = !DILocation(line: 557, column: 20, scope: !3649)
!3651 = !DILocation(line: 557, column: 4, scope: !3649)
!3652 = !DILocation(line: 559, column: 2, scope: !3614)
!3653 = !DILocation(line: 561, column: 3, scope: !3611)
!3654 = !DILocation(line: 561, column: 9, scope: !3611)
!3655 = !DILocation(line: 562, column: 1, scope: !3603)
!3656 = distinct !DISubprogram(name: "WM_operatortype_iter", scope: !3, file: !3, line: 152, type: !3657, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!3657 = !DISubroutineType(types: !3658)
!3658 = !{null, !3659}
!3659 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3660, size: 64)
!3660 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHashIterator", file: !1423, line: 54, baseType: !3661)
!3661 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GHashIterator", file: !1423, line: 50, size: 192, elements: !3662)
!3662 = !{!3663, !3664, !3667}
!3663 = !DIDerivedType(tag: DW_TAG_member, name: "gh", scope: !3661, file: !1423, line: 51, baseType: !3554, size: 64)
!3664 = !DIDerivedType(tag: DW_TAG_member, name: "curEntry", scope: !3661, file: !1423, line: 52, baseType: !3665, size: 64, offset: 64)
!3665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3666, size: 64)
!3666 = !DICompositeType(tag: DW_TAG_structure_type, name: "Entry", file: !1423, line: 52, flags: DIFlagFwdDecl)
!3667 = !DIDerivedType(tag: DW_TAG_member, name: "curBucket", scope: !3661, file: !1423, line: 53, baseType: !7, size: 32, offset: 128)
!3668 = !DILocalVariable(name: "ghi", arg: 1, scope: !3656, file: !3, line: 152, type: !3659)
!3669 = !DILocation(line: 152, column: 42, scope: !3656)
!3670 = !DILocation(line: 154, column: 25, scope: !3656)
!3671 = !DILocation(line: 154, column: 30, scope: !3656)
!3672 = !DILocation(line: 154, column: 2, scope: !3656)
!3673 = !DILocation(line: 155, column: 1, scope: !3656)
!3674 = distinct !DISubprogram(name: "WM_operatortype_append", scope: !3, file: !3, line: 158, type: !3675, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!3675 = !DISubroutineType(types: !3676)
!3676 = !{null, !3677}
!3677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3678, size: 64)
!3678 = !DISubroutineType(types: !3679)
!3679 = !{null, !3228}
!3680 = !DILocalVariable(name: "opfunc", arg: 1, scope: !3674, file: !3, line: 158, type: !3677)
!3681 = !DILocation(line: 158, column: 36, scope: !3674)
!3682 = !DILocalVariable(name: "ot", scope: !3674, file: !3, line: 160, type: !3228)
!3683 = !DILocation(line: 160, column: 18, scope: !3674)
!3684 = !DILocation(line: 162, column: 7, scope: !3674)
!3685 = !DILocation(line: 162, column: 5, scope: !3674)
!3686 = !DILocation(line: 163, column: 13, scope: !3674)
!3687 = !DILocation(line: 163, column: 2, scope: !3674)
!3688 = !DILocation(line: 163, column: 6, scope: !3674)
!3689 = !DILocation(line: 163, column: 11, scope: !3674)
!3690 = !DILocation(line: 165, column: 37, scope: !3674)
!3691 = !DILocation(line: 165, column: 41, scope: !3674)
!3692 = !DILocation(line: 165, column: 2, scope: !3674)
!3693 = !DILocation(line: 166, column: 2, scope: !3674)
!3694 = !DILocation(line: 166, column: 9, scope: !3674)
!3695 = !DILocation(line: 168, column: 6, scope: !3696)
!3696 = distinct !DILexicalBlock(scope: !3674, file: !3, line: 168, column: 6)
!3697 = !DILocation(line: 168, column: 10, scope: !3696)
!3698 = !DILocation(line: 168, column: 15, scope: !3696)
!3699 = !DILocation(line: 168, column: 6, scope: !3674)
!3700 = !DILocation(line: 169, column: 11, scope: !3701)
!3701 = distinct !DILexicalBlock(scope: !3696, file: !3, line: 168, column: 24)
!3702 = !DILocation(line: 169, column: 65, scope: !3701)
!3703 = !DILocation(line: 169, column: 69, scope: !3701)
!3704 = !DILocation(line: 169, column: 3, scope: !3701)
!3705 = !DILocation(line: 170, column: 3, scope: !3701)
!3706 = !DILocation(line: 170, column: 7, scope: !3701)
!3707 = !DILocation(line: 170, column: 12, scope: !3701)
!3708 = !DILocation(line: 171, column: 2, scope: !3701)
!3709 = !DILocation(line: 174, column: 25, scope: !3674)
!3710 = !DILocation(line: 174, column: 29, scope: !3674)
!3711 = !DILocation(line: 174, column: 35, scope: !3674)
!3712 = !DILocation(line: 174, column: 39, scope: !3674)
!3713 = !DILocation(line: 174, column: 45, scope: !3674)
!3714 = !DILocation(line: 174, column: 49, scope: !3674)
!3715 = !DILocation(line: 174, column: 63, scope: !3674)
!3716 = !DILocation(line: 174, column: 67, scope: !3674)
!3717 = !DILocation(line: 174, column: 2, scope: !3674)
!3718 = !DILocation(line: 175, column: 28, scope: !3674)
!3719 = !DILocation(line: 175, column: 32, scope: !3674)
!3720 = !DILocation(line: 175, column: 38, scope: !3674)
!3721 = !DILocation(line: 175, column: 42, scope: !3674)
!3722 = !DILocation(line: 175, column: 2, scope: !3674)
!3723 = !DILocation(line: 177, column: 19, scope: !3674)
!3724 = !DILocation(line: 177, column: 44, scope: !3674)
!3725 = !DILocation(line: 177, column: 48, scope: !3674)
!3726 = !DILocation(line: 177, column: 56, scope: !3674)
!3727 = !DILocation(line: 177, column: 2, scope: !3674)
!3728 = !DILocation(line: 178, column: 1, scope: !3674)
!3729 = distinct !DISubprogram(name: "WM_operatortype_append_ptr", scope: !3, file: !3, line: 180, type: !3730, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!3730 = !DISubroutineType(types: !3731)
!3731 = !{null, !3732, !1391}
!3732 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3733, size: 64)
!3733 = !DISubroutineType(types: !3734)
!3734 = !{null, !3228, !1391}
!3735 = !DILocalVariable(name: "opfunc", arg: 1, scope: !3729, file: !3, line: 180, type: !3732)
!3736 = !DILocation(line: 180, column: 40, scope: !3729)
!3737 = !DILocalVariable(name: "userdata", arg: 2, scope: !3729, file: !3, line: 180, type: !1391)
!3738 = !DILocation(line: 180, column: 81, scope: !3729)
!3739 = !DILocalVariable(name: "ot", scope: !3729, file: !3, line: 182, type: !3228)
!3740 = !DILocation(line: 182, column: 18, scope: !3729)
!3741 = !DILocation(line: 184, column: 7, scope: !3729)
!3742 = !DILocation(line: 184, column: 5, scope: !3729)
!3743 = !DILocation(line: 185, column: 13, scope: !3729)
!3744 = !DILocation(line: 185, column: 2, scope: !3729)
!3745 = !DILocation(line: 185, column: 6, scope: !3729)
!3746 = !DILocation(line: 185, column: 11, scope: !3729)
!3747 = !DILocation(line: 187, column: 37, scope: !3729)
!3748 = !DILocation(line: 187, column: 41, scope: !3729)
!3749 = !DILocation(line: 187, column: 2, scope: !3729)
!3750 = !DILocation(line: 188, column: 2, scope: !3729)
!3751 = !DILocation(line: 188, column: 9, scope: !3729)
!3752 = !DILocation(line: 188, column: 13, scope: !3729)
!3753 = !DILocation(line: 189, column: 25, scope: !3729)
!3754 = !DILocation(line: 189, column: 29, scope: !3729)
!3755 = !DILocation(line: 189, column: 35, scope: !3729)
!3756 = !DILocation(line: 189, column: 39, scope: !3729)
!3757 = !DILocation(line: 189, column: 45, scope: !3729)
!3758 = !DILocation(line: 189, column: 49, scope: !3729)
!3759 = !DILocation(line: 189, column: 63, scope: !3729)
!3760 = !DILocation(line: 189, column: 67, scope: !3729)
!3761 = !DILocation(line: 189, column: 2, scope: !3729)
!3762 = !DILocation(line: 190, column: 28, scope: !3729)
!3763 = !DILocation(line: 190, column: 32, scope: !3729)
!3764 = !DILocation(line: 190, column: 38, scope: !3729)
!3765 = !DILocation(line: 190, column: 42, scope: !3729)
!3766 = !DILocation(line: 190, column: 2, scope: !3729)
!3767 = !DILocation(line: 192, column: 19, scope: !3729)
!3768 = !DILocation(line: 192, column: 44, scope: !3729)
!3769 = !DILocation(line: 192, column: 48, scope: !3729)
!3770 = !DILocation(line: 192, column: 56, scope: !3729)
!3771 = !DILocation(line: 192, column: 2, scope: !3729)
!3772 = !DILocation(line: 193, column: 1, scope: !3729)
!3773 = distinct !DISubprogram(name: "WM_operatortype_append_macro", scope: !3, file: !3, line: 365, type: !3774, scopeLine: 366, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!3774 = !DISubroutineType(types: !3775)
!3775 = !{!2975, !2979, !2979, !2979, !1224}
!3776 = !DILocalVariable(name: "idname", arg: 1, scope: !3773, file: !3, line: 365, type: !2979)
!3777 = !DILocation(line: 365, column: 58, scope: !3773)
!3778 = !DILocalVariable(name: "name", arg: 2, scope: !3773, file: !3, line: 365, type: !2979)
!3779 = !DILocation(line: 365, column: 78, scope: !3773)
!3780 = !DILocalVariable(name: "description", arg: 3, scope: !3773, file: !3, line: 365, type: !2979)
!3781 = !DILocation(line: 365, column: 96, scope: !3773)
!3782 = !DILocalVariable(name: "flag", arg: 4, scope: !3773, file: !3, line: 365, type: !1224)
!3783 = !DILocation(line: 365, column: 113, scope: !3773)
!3784 = !DILocalVariable(name: "ot", scope: !3773, file: !3, line: 367, type: !3228)
!3785 = !DILocation(line: 367, column: 18, scope: !3773)
!3786 = !DILocation(line: 369, column: 27, scope: !3787)
!3787 = distinct !DILexicalBlock(scope: !3773, file: !3, line: 369, column: 6)
!3788 = !DILocation(line: 369, column: 6, scope: !3787)
!3789 = !DILocation(line: 369, column: 6, scope: !3773)
!3790 = !DILocation(line: 370, column: 61, scope: !3791)
!3791 = distinct !DILexicalBlock(scope: !3787, file: !3, line: 369, column: 42)
!3792 = !DILocation(line: 370, column: 3, scope: !3791)
!3793 = !DILocation(line: 371, column: 3, scope: !3791)
!3794 = !DILocation(line: 374, column: 7, scope: !3773)
!3795 = !DILocation(line: 374, column: 5, scope: !3773)
!3796 = !DILocation(line: 375, column: 13, scope: !3773)
!3797 = !DILocation(line: 375, column: 2, scope: !3773)
!3798 = !DILocation(line: 375, column: 6, scope: !3773)
!3799 = !DILocation(line: 375, column: 11, scope: !3773)
!3800 = !DILocation(line: 377, column: 15, scope: !3773)
!3801 = !DILocation(line: 377, column: 2, scope: !3773)
!3802 = !DILocation(line: 377, column: 6, scope: !3773)
!3803 = !DILocation(line: 377, column: 13, scope: !3773)
!3804 = !DILocation(line: 378, column: 13, scope: !3773)
!3805 = !DILocation(line: 378, column: 2, scope: !3773)
!3806 = !DILocation(line: 378, column: 6, scope: !3773)
!3807 = !DILocation(line: 378, column: 11, scope: !3773)
!3808 = !DILocation(line: 379, column: 20, scope: !3773)
!3809 = !DILocation(line: 379, column: 2, scope: !3773)
!3810 = !DILocation(line: 379, column: 6, scope: !3773)
!3811 = !DILocation(line: 379, column: 18, scope: !3773)
!3812 = !DILocation(line: 380, column: 28, scope: !3773)
!3813 = !DILocation(line: 380, column: 26, scope: !3773)
!3814 = !DILocation(line: 380, column: 13, scope: !3773)
!3815 = !DILocation(line: 380, column: 2, scope: !3773)
!3816 = !DILocation(line: 380, column: 6, scope: !3773)
!3817 = !DILocation(line: 380, column: 11, scope: !3773)
!3818 = !DILocation(line: 382, column: 2, scope: !3773)
!3819 = !DILocation(line: 382, column: 6, scope: !3773)
!3820 = !DILocation(line: 382, column: 11, scope: !3773)
!3821 = !DILocation(line: 383, column: 2, scope: !3773)
!3822 = !DILocation(line: 383, column: 6, scope: !3773)
!3823 = !DILocation(line: 383, column: 13, scope: !3773)
!3824 = !DILocation(line: 384, column: 2, scope: !3773)
!3825 = !DILocation(line: 384, column: 6, scope: !3773)
!3826 = !DILocation(line: 384, column: 12, scope: !3773)
!3827 = !DILocation(line: 385, column: 2, scope: !3773)
!3828 = !DILocation(line: 385, column: 6, scope: !3773)
!3829 = !DILocation(line: 385, column: 13, scope: !3773)
!3830 = !DILocation(line: 386, column: 2, scope: !3773)
!3831 = !DILocation(line: 386, column: 6, scope: !3773)
!3832 = !DILocation(line: 386, column: 11, scope: !3773)
!3833 = !DILocation(line: 388, column: 7, scope: !3834)
!3834 = distinct !DILexicalBlock(scope: !3773, file: !3, line: 388, column: 6)
!3835 = !DILocation(line: 388, column: 11, scope: !3834)
!3836 = !DILocation(line: 388, column: 6, scope: !3773)
!3837 = !DILocation(line: 389, column: 3, scope: !3834)
!3838 = !DILocation(line: 389, column: 7, scope: !3834)
!3839 = !DILocation(line: 389, column: 19, scope: !3834)
!3840 = !DILocation(line: 391, column: 25, scope: !3773)
!3841 = !DILocation(line: 391, column: 29, scope: !3773)
!3842 = !DILocation(line: 391, column: 35, scope: !3773)
!3843 = !DILocation(line: 391, column: 39, scope: !3773)
!3844 = !DILocation(line: 391, column: 45, scope: !3773)
!3845 = !DILocation(line: 391, column: 49, scope: !3773)
!3846 = !DILocation(line: 391, column: 2, scope: !3773)
!3847 = !DILocation(line: 392, column: 28, scope: !3773)
!3848 = !DILocation(line: 392, column: 32, scope: !3773)
!3849 = !DILocation(line: 392, column: 38, scope: !3773)
!3850 = !DILocation(line: 392, column: 42, scope: !3773)
!3851 = !DILocation(line: 392, column: 2, scope: !3773)
!3852 = !DILocation(line: 394, column: 37, scope: !3773)
!3853 = !DILocation(line: 394, column: 41, scope: !3773)
!3854 = !DILocation(line: 394, column: 47, scope: !3773)
!3855 = !DILocation(line: 394, column: 51, scope: !3773)
!3856 = !DILocation(line: 394, column: 55, scope: !3773)
!3857 = !DILocation(line: 394, column: 93, scope: !3773)
!3858 = !DILocation(line: 394, column: 97, scope: !3773)
!3859 = !DILocation(line: 394, column: 101, scope: !3773)
!3860 = !DILocation(line: 394, column: 62, scope: !3773)
!3861 = !DILocation(line: 394, column: 2, scope: !3773)
!3862 = !DILocation(line: 397, column: 19, scope: !3773)
!3863 = !DILocation(line: 397, column: 44, scope: !3773)
!3864 = !DILocation(line: 397, column: 48, scope: !3773)
!3865 = !DILocation(line: 397, column: 56, scope: !3773)
!3866 = !DILocation(line: 397, column: 2, scope: !3773)
!3867 = !DILocation(line: 399, column: 9, scope: !3773)
!3868 = !DILocation(line: 399, column: 2, scope: !3773)
!3869 = !DILocation(line: 400, column: 1, scope: !3773)
!3870 = distinct !DISubprogram(name: "wm_macro_exec", scope: !3, file: !3, line: 231, type: !3871, scopeLine: 232, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!3871 = !DISubroutineType(types: !3872)
!3872 = !{!1224, !1414, !2965}
!3873 = !DILocalVariable(name: "C", arg: 1, scope: !3870, file: !3, line: 231, type: !1414)
!3874 = !DILocation(line: 231, column: 36, scope: !3870)
!3875 = !DILocalVariable(name: "op", arg: 2, scope: !3870, file: !3, line: 231, type: !2965)
!3876 = !DILocation(line: 231, column: 51, scope: !3870)
!3877 = !DILocalVariable(name: "opm", scope: !3870, file: !3, line: 233, type: !2965)
!3878 = !DILocation(line: 233, column: 14, scope: !3870)
!3879 = !DILocalVariable(name: "retval", scope: !3870, file: !3, line: 234, type: !1224)
!3880 = !DILocation(line: 234, column: 6, scope: !3870)
!3881 = !DILocation(line: 236, column: 17, scope: !3870)
!3882 = !DILocation(line: 236, column: 2, scope: !3870)
!3883 = !DILocation(line: 238, column: 13, scope: !3884)
!3884 = distinct !DILexicalBlock(scope: !3870, file: !3, line: 238, column: 2)
!3885 = !DILocation(line: 238, column: 17, scope: !3884)
!3886 = !DILocation(line: 238, column: 23, scope: !3884)
!3887 = !DILocation(line: 238, column: 11, scope: !3884)
!3888 = !DILocation(line: 238, column: 7, scope: !3884)
!3889 = !DILocation(line: 238, column: 30, scope: !3890)
!3890 = distinct !DILexicalBlock(scope: !3884, file: !3, line: 238, column: 2)
!3891 = !DILocation(line: 238, column: 2, scope: !3884)
!3892 = !DILocation(line: 240, column: 7, scope: !3893)
!3893 = distinct !DILexicalBlock(scope: !3894, file: !3, line: 240, column: 7)
!3894 = distinct !DILexicalBlock(scope: !3890, file: !3, line: 238, column: 52)
!3895 = !DILocation(line: 240, column: 12, scope: !3893)
!3896 = !DILocation(line: 240, column: 18, scope: !3893)
!3897 = !DILocation(line: 240, column: 7, scope: !3894)
!3898 = !DILocation(line: 241, column: 13, scope: !3899)
!3899 = distinct !DILexicalBlock(scope: !3893, file: !3, line: 240, column: 24)
!3900 = !DILocation(line: 241, column: 18, scope: !3899)
!3901 = !DILocation(line: 241, column: 24, scope: !3899)
!3902 = !DILocation(line: 241, column: 29, scope: !3899)
!3903 = !DILocation(line: 241, column: 32, scope: !3899)
!3904 = !DILocation(line: 241, column: 11, scope: !3899)
!3905 = !DILocation(line: 242, column: 4, scope: !3899)
!3906 = !DILocation(line: 244, column: 8, scope: !3907)
!3907 = distinct !DILexicalBlock(scope: !3899, file: !3, line: 244, column: 8)
!3908 = !DILocation(line: 244, column: 15, scope: !3907)
!3909 = !DILocation(line: 244, column: 8, scope: !3899)
!3910 = !DILocalVariable(name: "md", scope: !3911, file: !3, line: 245, type: !3912)
!3911 = distinct !DILexicalBlock(scope: !3907, file: !3, line: 244, column: 36)
!3912 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3913, size: 64)
!3913 = !DIDerivedType(tag: DW_TAG_typedef, name: "MacroData", file: !3, line: 199, baseType: !3914)
!3914 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 197, size: 32, elements: !3915)
!3915 = !{!3916}
!3916 = !DIDerivedType(tag: DW_TAG_member, name: "retval", scope: !3914, file: !3, line: 198, baseType: !1224, size: 32)
!3917 = !DILocation(line: 245, column: 16, scope: !3911)
!3918 = !DILocation(line: 245, column: 21, scope: !3911)
!3919 = !DILocation(line: 245, column: 25, scope: !3911)
!3920 = !DILocation(line: 246, column: 5, scope: !3911)
!3921 = !DILocation(line: 246, column: 9, scope: !3911)
!3922 = !DILocation(line: 246, column: 16, scope: !3911)
!3923 = !DILocation(line: 247, column: 4, scope: !3911)
!3924 = !DILocation(line: 249, column: 5, scope: !3925)
!3925 = distinct !DILexicalBlock(scope: !3907, file: !3, line: 248, column: 9)
!3926 = !DILocation(line: 251, column: 3, scope: !3899)
!3927 = !DILocation(line: 253, column: 51, scope: !3928)
!3928 = distinct !DILexicalBlock(scope: !3893, file: !3, line: 252, column: 8)
!3929 = !DILocation(line: 253, column: 56, scope: !3928)
!3930 = !DILocation(line: 253, column: 62, scope: !3928)
!3931 = !DILocation(line: 253, column: 4, scope: !3928)
!3932 = !DILocation(line: 255, column: 2, scope: !3894)
!3933 = !DILocation(line: 238, column: 41, scope: !3890)
!3934 = !DILocation(line: 238, column: 46, scope: !3890)
!3935 = !DILocation(line: 238, column: 39, scope: !3890)
!3936 = !DILocation(line: 238, column: 2, scope: !3890)
!3937 = distinct !{!3937, !3891, !3938}
!3938 = !DILocation(line: 255, column: 2, scope: !3884)
!3939 = !DILocation(line: 257, column: 22, scope: !3870)
!3940 = !DILocation(line: 257, column: 26, scope: !3870)
!3941 = !DILocation(line: 257, column: 9, scope: !3870)
!3942 = !DILocation(line: 257, column: 2, scope: !3870)
!3943 = distinct !DISubprogram(name: "wm_macro_invoke", scope: !3, file: !3, line: 287, type: !3944, scopeLine: 288, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!3944 = !DISubroutineType(types: !3945)
!3945 = !{!1224, !1414, !2965, !3946}
!3946 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3947, size: 64)
!3947 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3217)
!3948 = !DILocalVariable(name: "C", arg: 1, scope: !3943, file: !3, line: 287, type: !1414)
!3949 = !DILocation(line: 287, column: 38, scope: !3943)
!3950 = !DILocalVariable(name: "op", arg: 2, scope: !3943, file: !3, line: 287, type: !2965)
!3951 = !DILocation(line: 287, column: 53, scope: !3943)
!3952 = !DILocalVariable(name: "event", arg: 3, scope: !3943, file: !3, line: 287, type: !3946)
!3953 = !DILocation(line: 287, column: 72, scope: !3943)
!3954 = !DILocation(line: 289, column: 17, scope: !3943)
!3955 = !DILocation(line: 289, column: 2, scope: !3943)
!3956 = !DILocation(line: 290, column: 34, scope: !3943)
!3957 = !DILocation(line: 290, column: 37, scope: !3943)
!3958 = !DILocation(line: 290, column: 41, scope: !3943)
!3959 = !DILocation(line: 290, column: 48, scope: !3943)
!3960 = !DILocation(line: 290, column: 52, scope: !3943)
!3961 = !DILocation(line: 290, column: 58, scope: !3943)
!3962 = !DILocation(line: 290, column: 9, scope: !3943)
!3963 = !DILocation(line: 290, column: 2, scope: !3943)
!3964 = distinct !DISubprogram(name: "wm_macro_modal", scope: !3, file: !3, line: 293, type: !3944, scopeLine: 294, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!3965 = !DILocalVariable(name: "C", arg: 1, scope: !3964, file: !3, line: 293, type: !1414)
!3966 = !DILocation(line: 293, column: 37, scope: !3964)
!3967 = !DILocalVariable(name: "op", arg: 2, scope: !3964, file: !3, line: 293, type: !2965)
!3968 = !DILocation(line: 293, column: 52, scope: !3964)
!3969 = !DILocalVariable(name: "event", arg: 3, scope: !3964, file: !3, line: 293, type: !3946)
!3970 = !DILocation(line: 293, column: 71, scope: !3964)
!3971 = !DILocalVariable(name: "opm", scope: !3964, file: !3, line: 295, type: !2965)
!3972 = !DILocation(line: 295, column: 14, scope: !3964)
!3973 = !DILocation(line: 295, column: 20, scope: !3964)
!3974 = !DILocation(line: 295, column: 24, scope: !3964)
!3975 = !DILocalVariable(name: "retval", scope: !3964, file: !3, line: 296, type: !1224)
!3976 = !DILocation(line: 296, column: 6, scope: !3964)
!3977 = !DILocation(line: 298, column: 6, scope: !3978)
!3978 = distinct !DILexicalBlock(scope: !3964, file: !3, line: 298, column: 6)
!3979 = !DILocation(line: 298, column: 10, scope: !3978)
!3980 = !DILocation(line: 298, column: 6, scope: !3964)
!3981 = !DILocation(line: 299, column: 3, scope: !3978)
!3982 = !DILocation(line: 301, column: 12, scope: !3983)
!3983 = distinct !DILexicalBlock(scope: !3978, file: !3, line: 300, column: 7)
!3984 = !DILocation(line: 301, column: 17, scope: !3983)
!3985 = !DILocation(line: 301, column: 23, scope: !3983)
!3986 = !DILocation(line: 301, column: 29, scope: !3983)
!3987 = !DILocation(line: 301, column: 32, scope: !3983)
!3988 = !DILocation(line: 301, column: 37, scope: !3983)
!3989 = !DILocation(line: 301, column: 10, scope: !3983)
!3990 = !DILocation(line: 302, column: 3, scope: !3983)
!3991 = !DILocation(line: 305, column: 7, scope: !3992)
!3992 = distinct !DILexicalBlock(scope: !3983, file: !3, line: 305, column: 7)
!3993 = !DILocation(line: 305, column: 14, scope: !3992)
!3994 = !DILocation(line: 305, column: 7, scope: !3983)
!3995 = !DILocation(line: 306, column: 33, scope: !3996)
!3996 = distinct !DILexicalBlock(scope: !3992, file: !3, line: 305, column: 36)
!3997 = !DILocation(line: 306, column: 38, scope: !3996)
!3998 = !DILocation(line: 306, column: 4, scope: !3996)
!3999 = !DILocation(line: 307, column: 3, scope: !3996)
!4000 = !DILocation(line: 310, column: 8, scope: !4001)
!4001 = distinct !DILexicalBlock(scope: !3983, file: !3, line: 310, column: 7)
!4002 = !DILocation(line: 310, column: 15, scope: !4001)
!4003 = !DILocation(line: 310, column: 36, scope: !4001)
!4004 = !DILocation(line: 310, column: 39, scope: !4001)
!4005 = !DILocation(line: 310, column: 44, scope: !4001)
!4006 = !DILocation(line: 310, column: 7, scope: !3983)
!4007 = !DILocalVariable(name: "md", scope: !4008, file: !3, line: 311, type: !3912)
!4008 = distinct !DILexicalBlock(scope: !4001, file: !3, line: 310, column: 50)
!4009 = !DILocation(line: 311, column: 15, scope: !4008)
!4010 = !DILocation(line: 311, column: 20, scope: !4008)
!4011 = !DILocation(line: 311, column: 24, scope: !4008)
!4012 = !DILocation(line: 313, column: 4, scope: !4008)
!4013 = !DILocation(line: 313, column: 8, scope: !4008)
!4014 = !DILocation(line: 313, column: 15, scope: !4008)
!4015 = !DILocation(line: 315, column: 38, scope: !4008)
!4016 = !DILocation(line: 315, column: 41, scope: !4008)
!4017 = !DILocation(line: 315, column: 45, scope: !4008)
!4018 = !DILocation(line: 315, column: 52, scope: !4008)
!4019 = !DILocation(line: 315, column: 57, scope: !4008)
!4020 = !DILocation(line: 315, column: 13, scope: !4008)
!4021 = !DILocation(line: 315, column: 11, scope: !4008)
!4022 = !DILocation(line: 318, column: 8, scope: !4023)
!4023 = distinct !DILexicalBlock(scope: !4008, file: !3, line: 318, column: 8)
!4024 = !DILocation(line: 318, column: 15, scope: !4023)
!4025 = !DILocation(line: 318, column: 40, scope: !4023)
!4026 = !DILocation(line: 318, column: 43, scope: !4023)
!4027 = !DILocation(line: 318, column: 47, scope: !4023)
!4028 = !DILocation(line: 318, column: 54, scope: !4023)
!4029 = !DILocation(line: 318, column: 51, scope: !4023)
!4030 = !DILocation(line: 318, column: 8, scope: !4008)
!4031 = !DILocalVariable(name: "win", scope: !4032, file: !3, line: 319, type: !4033)
!4032 = distinct !DILexicalBlock(scope: !4023, file: !3, line: 318, column: 59)
!4033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4034, size: 64)
!4034 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmWindow", file: !41, line: 209, baseType: !3125)
!4035 = !DILocation(line: 319, column: 15, scope: !4032)
!4036 = !DILocation(line: 319, column: 35, scope: !4032)
!4037 = !DILocation(line: 319, column: 21, scope: !4032)
!4038 = !DILocalVariable(name: "handler", scope: !4032, file: !3, line: 320, type: !4039)
!4039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4040, size: 64)
!4040 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmEventHandler", file: !4041, line: 74, baseType: !4042)
!4041 = !DIFile(filename: "blender/source/blender/windowmanager/wm_event_system.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4042 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmEventHandler", file: !4041, line: 45, size: 1088, elements: !4043)
!4043 = !{!4044, !4046, !4047, !4048, !4049, !4052, !4055, !4056, !4057, !4058, !4059, !4064, !4069, !4070, !4071, !4072, !4073, !4074}
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4042, file: !4041, line: 46, baseType: !4045, size: 64)
!4045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4042, size: 64)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4042, file: !4041, line: 46, baseType: !4045, size: 64, offset: 64)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4042, file: !4041, line: 48, baseType: !1224, size: 32, offset: 128)
!4048 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4042, file: !4041, line: 49, baseType: !1224, size: 32, offset: 160)
!4049 = !DIDerivedType(tag: DW_TAG_member, name: "keymap", scope: !4042, file: !4041, line: 52, baseType: !4050, size: 64, offset: 192)
!4050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4051, size: 64)
!4051 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmKeyMap", file: !41, line: 297, baseType: !3051)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "bblocal", scope: !4042, file: !4041, line: 53, baseType: !4053, size: 64, offset: 256)
!4053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4054, size: 64)
!4054 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2726)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "bbwin", scope: !4042, file: !4041, line: 53, baseType: !4053, size: 64, offset: 320)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !4042, file: !4041, line: 56, baseType: !2965, size: 64, offset: 384)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "op_area", scope: !4042, file: !4041, line: 57, baseType: !3374, size: 64, offset: 448)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "op_region", scope: !4042, file: !4041, line: 58, baseType: !3264, size: 64, offset: 512)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "ui_handle", scope: !4042, file: !4041, line: 61, baseType: !4060, size: 64, offset: 576)
!4060 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmUIHandlerFunc", file: !980, line: 149, baseType: !4061)
!4061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4062, size: 64)
!4062 = !DISubroutineType(types: !4063)
!4063 = !{!1224, !1408, !2996, !1391}
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "ui_remove", scope: !4042, file: !4041, line: 62, baseType: !4065, size: 64, offset: 640)
!4065 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmUIHandlerRemoveFunc", file: !980, line: 150, baseType: !4066)
!4066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4067, size: 64)
!4067 = !DISubroutineType(types: !4068)
!4068 = !{null, !1408, !1391}
!4069 = !DIDerivedType(tag: DW_TAG_member, name: "ui_userdata", scope: !4042, file: !4041, line: 63, baseType: !1391, size: 64, offset: 704)
!4070 = !DIDerivedType(tag: DW_TAG_member, name: "ui_area", scope: !4042, file: !4041, line: 64, baseType: !3374, size: 64, offset: 768)
!4071 = !DIDerivedType(tag: DW_TAG_member, name: "ui_region", scope: !4042, file: !4041, line: 65, baseType: !3264, size: 64, offset: 832)
!4072 = !DIDerivedType(tag: DW_TAG_member, name: "ui_menu", scope: !4042, file: !4041, line: 66, baseType: !3264, size: 64, offset: 896)
!4073 = !DIDerivedType(tag: DW_TAG_member, name: "filescreen", scope: !4042, file: !4041, line: 69, baseType: !3131, size: 64, offset: 960)
!4074 = !DIDerivedType(tag: DW_TAG_member, name: "dropboxes", scope: !4042, file: !4041, line: 72, baseType: !1755, size: 64, offset: 1024)
!4075 = !DILocation(line: 320, column: 21, scope: !4032)
!4076 = !DILocation(line: 322, column: 28, scope: !4032)
!4077 = !DILocation(line: 322, column: 33, scope: !4032)
!4078 = !DILocation(line: 322, column: 48, scope: !4032)
!4079 = !DILocation(line: 322, column: 15, scope: !4032)
!4080 = !DILocation(line: 322, column: 13, scope: !4032)
!4081 = !DILocation(line: 323, column: 9, scope: !4082)
!4082 = distinct !DILexicalBlock(scope: !4032, file: !3, line: 323, column: 9)
!4083 = !DILocation(line: 323, column: 9, scope: !4032)
!4084 = !DILocation(line: 324, column: 19, scope: !4085)
!4085 = distinct !DILexicalBlock(scope: !4082, file: !3, line: 323, column: 18)
!4086 = !DILocation(line: 324, column: 24, scope: !4085)
!4087 = !DILocation(line: 324, column: 39, scope: !4085)
!4088 = !DILocation(line: 324, column: 6, scope: !4085)
!4089 = !DILocation(line: 325, column: 28, scope: !4085)
!4090 = !DILocation(line: 325, column: 6, scope: !4085)
!4091 = !DILocation(line: 326, column: 5, scope: !4085)
!4092 = !DILocation(line: 331, column: 9, scope: !4093)
!4093 = distinct !DILexicalBlock(scope: !4032, file: !3, line: 331, column: 9)
!4094 = !DILocation(line: 331, column: 13, scope: !4093)
!4095 = !DILocation(line: 331, column: 18, scope: !4093)
!4096 = !DILocation(line: 331, column: 24, scope: !4093)
!4097 = !DILocation(line: 331, column: 29, scope: !4093)
!4098 = !DILocation(line: 331, column: 9, scope: !4032)
!4099 = !DILocalVariable(name: "bounds", scope: !4100, file: !3, line: 332, type: !4101)
!4100 = distinct !DILexicalBlock(scope: !4093, file: !3, line: 331, column: 48)
!4101 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1224, size: 128, elements: !1645)
!4102 = !DILocation(line: 332, column: 10, scope: !4100)
!4103 = !DILocalVariable(name: "wrap", scope: !4100, file: !3, line: 333, type: !1224)
!4104 = !DILocation(line: 333, column: 10, scope: !4100)
!4105 = !DILocation(line: 333, column: 20, scope: !4100)
!4106 = !DILocation(line: 333, column: 27, scope: !4100)
!4107 = !DILocation(line: 333, column: 52, scope: !4100)
!4108 = !DILocation(line: 333, column: 57, scope: !4100)
!4109 = !DILocation(line: 333, column: 61, scope: !4100)
!4110 = !DILocation(line: 333, column: 66, scope: !4100)
!4111 = !DILocation(line: 333, column: 71, scope: !4100)
!4112 = !DILocation(line: 333, column: 90, scope: !4100)
!4113 = !DILocation(line: 333, column: 94, scope: !4100)
!4114 = !DILocation(line: 333, column: 98, scope: !4100)
!4115 = !DILocation(line: 333, column: 103, scope: !4100)
!4116 = !DILocation(line: 333, column: 109, scope: !4100)
!4117 = !DILocation(line: 333, column: 114, scope: !4100)
!4118 = !DILocation(line: 0, scope: !4100)
!4119 = !DILocation(line: 335, column: 10, scope: !4120)
!4120 = distinct !DILexicalBlock(scope: !4100, file: !3, line: 335, column: 10)
!4121 = !DILocation(line: 335, column: 10, scope: !4100)
!4122 = !DILocalVariable(name: "ar", scope: !4123, file: !3, line: 336, type: !3259)
!4123 = distinct !DILexicalBlock(scope: !4120, file: !3, line: 335, column: 16)
!4124 = !DILocation(line: 336, column: 16, scope: !4123)
!4125 = !DILocation(line: 336, column: 35, scope: !4123)
!4126 = !DILocation(line: 336, column: 21, scope: !4123)
!4127 = !DILocation(line: 337, column: 11, scope: !4128)
!4128 = distinct !DILexicalBlock(scope: !4123, file: !3, line: 337, column: 11)
!4129 = !DILocation(line: 337, column: 11, scope: !4123)
!4130 = !DILocation(line: 338, column: 20, scope: !4131)
!4131 = distinct !DILexicalBlock(scope: !4128, file: !3, line: 337, column: 15)
!4132 = !DILocation(line: 338, column: 24, scope: !4131)
!4133 = !DILocation(line: 338, column: 31, scope: !4131)
!4134 = !DILocation(line: 338, column: 8, scope: !4131)
!4135 = !DILocation(line: 338, column: 18, scope: !4131)
!4136 = !DILocation(line: 339, column: 20, scope: !4131)
!4137 = !DILocation(line: 339, column: 24, scope: !4131)
!4138 = !DILocation(line: 339, column: 31, scope: !4131)
!4139 = !DILocation(line: 339, column: 8, scope: !4131)
!4140 = !DILocation(line: 339, column: 18, scope: !4131)
!4141 = !DILocation(line: 340, column: 20, scope: !4131)
!4142 = !DILocation(line: 340, column: 24, scope: !4131)
!4143 = !DILocation(line: 340, column: 31, scope: !4131)
!4144 = !DILocation(line: 340, column: 8, scope: !4131)
!4145 = !DILocation(line: 340, column: 18, scope: !4131)
!4146 = !DILocation(line: 341, column: 20, scope: !4131)
!4147 = !DILocation(line: 341, column: 24, scope: !4131)
!4148 = !DILocation(line: 341, column: 31, scope: !4131)
!4149 = !DILocation(line: 341, column: 8, scope: !4131)
!4150 = !DILocation(line: 341, column: 18, scope: !4131)
!4151 = !DILocation(line: 342, column: 7, scope: !4131)
!4152 = !DILocation(line: 343, column: 6, scope: !4123)
!4153 = !DILocation(line: 345, column: 28, scope: !4100)
!4154 = !DILocation(line: 345, column: 33, scope: !4100)
!4155 = !DILocation(line: 345, column: 46, scope: !4100)
!4156 = !DILocation(line: 345, column: 6, scope: !4100)
!4157 = !DILocation(line: 346, column: 5, scope: !4100)
!4158 = !DILocation(line: 347, column: 4, scope: !4032)
!4159 = !DILocation(line: 348, column: 3, scope: !4008)
!4160 = !DILocation(line: 351, column: 22, scope: !3964)
!4161 = !DILocation(line: 351, column: 26, scope: !3964)
!4162 = !DILocation(line: 351, column: 9, scope: !3964)
!4163 = !DILocation(line: 351, column: 2, scope: !3964)
!4164 = distinct !DISubprogram(name: "wm_macro_cancel", scope: !3, file: !3, line: 354, type: !4165, scopeLine: 355, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!4165 = !DISubroutineType(types: !4166)
!4166 = !{null, !1414, !2965}
!4167 = !DILocalVariable(name: "C", arg: 1, scope: !4164, file: !3, line: 354, type: !1414)
!4168 = !DILocation(line: 354, column: 39, scope: !4164)
!4169 = !DILocalVariable(name: "op", arg: 2, scope: !4164, file: !3, line: 354, type: !2965)
!4170 = !DILocation(line: 354, column: 54, scope: !4164)
!4171 = !DILocation(line: 357, column: 6, scope: !4172)
!4172 = distinct !DILexicalBlock(scope: !4164, file: !3, line: 357, column: 6)
!4173 = !DILocation(line: 357, column: 10, scope: !4172)
!4174 = !DILocation(line: 357, column: 14, scope: !4172)
!4175 = !DILocation(line: 357, column: 17, scope: !4172)
!4176 = !DILocation(line: 357, column: 21, scope: !4172)
!4177 = !DILocation(line: 357, column: 26, scope: !4172)
!4178 = !DILocation(line: 357, column: 32, scope: !4172)
!4179 = !DILocation(line: 357, column: 6, scope: !4164)
!4180 = !DILocation(line: 358, column: 3, scope: !4181)
!4181 = distinct !DILexicalBlock(scope: !4172, file: !3, line: 357, column: 40)
!4182 = !DILocation(line: 358, column: 7, scope: !4181)
!4183 = !DILocation(line: 358, column: 12, scope: !4181)
!4184 = !DILocation(line: 358, column: 18, scope: !4181)
!4185 = !DILocation(line: 358, column: 25, scope: !4181)
!4186 = !DILocation(line: 358, column: 28, scope: !4181)
!4187 = !DILocation(line: 358, column: 32, scope: !4181)
!4188 = !DILocation(line: 359, column: 2, scope: !4181)
!4189 = !DILocation(line: 361, column: 15, scope: !4164)
!4190 = !DILocation(line: 361, column: 2, scope: !4164)
!4191 = !DILocation(line: 362, column: 1, scope: !4164)
!4192 = distinct !DISubprogram(name: "WM_operatortype_append_macro_ptr", scope: !3, file: !3, line: 402, type: !3730, scopeLine: 403, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!4193 = !DILocalVariable(name: "opfunc", arg: 1, scope: !4192, file: !3, line: 402, type: !3732)
!4194 = !DILocation(line: 402, column: 46, scope: !4192)
!4195 = !DILocalVariable(name: "userdata", arg: 2, scope: !4192, file: !3, line: 402, type: !1391)
!4196 = !DILocation(line: 402, column: 87, scope: !4192)
!4197 = !DILocalVariable(name: "ot", scope: !4192, file: !3, line: 404, type: !3228)
!4198 = !DILocation(line: 404, column: 18, scope: !4192)
!4199 = !DILocation(line: 406, column: 7, scope: !4192)
!4200 = !DILocation(line: 406, column: 5, scope: !4192)
!4201 = !DILocation(line: 407, column: 13, scope: !4192)
!4202 = !DILocation(line: 407, column: 2, scope: !4192)
!4203 = !DILocation(line: 407, column: 6, scope: !4192)
!4204 = !DILocation(line: 407, column: 11, scope: !4192)
!4205 = !DILocation(line: 409, column: 2, scope: !4192)
!4206 = !DILocation(line: 409, column: 6, scope: !4192)
!4207 = !DILocation(line: 409, column: 11, scope: !4192)
!4208 = !DILocation(line: 410, column: 2, scope: !4192)
!4209 = !DILocation(line: 410, column: 6, scope: !4192)
!4210 = !DILocation(line: 410, column: 11, scope: !4192)
!4211 = !DILocation(line: 411, column: 2, scope: !4192)
!4212 = !DILocation(line: 411, column: 6, scope: !4192)
!4213 = !DILocation(line: 411, column: 13, scope: !4192)
!4214 = !DILocation(line: 412, column: 2, scope: !4192)
!4215 = !DILocation(line: 412, column: 6, scope: !4192)
!4216 = !DILocation(line: 412, column: 12, scope: !4192)
!4217 = !DILocation(line: 413, column: 2, scope: !4192)
!4218 = !DILocation(line: 413, column: 6, scope: !4192)
!4219 = !DILocation(line: 413, column: 13, scope: !4192)
!4220 = !DILocation(line: 414, column: 2, scope: !4192)
!4221 = !DILocation(line: 414, column: 6, scope: !4192)
!4222 = !DILocation(line: 414, column: 11, scope: !4192)
!4223 = !DILocation(line: 416, column: 7, scope: !4224)
!4224 = distinct !DILexicalBlock(scope: !4192, file: !3, line: 416, column: 6)
!4225 = !DILocation(line: 416, column: 11, scope: !4224)
!4226 = !DILocation(line: 416, column: 6, scope: !4192)
!4227 = !DILocation(line: 417, column: 3, scope: !4224)
!4228 = !DILocation(line: 417, column: 7, scope: !4224)
!4229 = !DILocation(line: 417, column: 19, scope: !4224)
!4230 = !DILocation(line: 420, column: 37, scope: !4192)
!4231 = !DILocation(line: 420, column: 41, scope: !4192)
!4232 = !DILocation(line: 420, column: 2, scope: !4192)
!4233 = !DILocation(line: 421, column: 2, scope: !4192)
!4234 = !DILocation(line: 421, column: 9, scope: !4192)
!4235 = !DILocation(line: 421, column: 13, scope: !4192)
!4236 = !DILocation(line: 423, column: 25, scope: !4192)
!4237 = !DILocation(line: 423, column: 29, scope: !4192)
!4238 = !DILocation(line: 423, column: 35, scope: !4192)
!4239 = !DILocation(line: 423, column: 39, scope: !4192)
!4240 = !DILocation(line: 423, column: 45, scope: !4192)
!4241 = !DILocation(line: 423, column: 49, scope: !4192)
!4242 = !DILocation(line: 423, column: 2, scope: !4192)
!4243 = !DILocation(line: 424, column: 28, scope: !4192)
!4244 = !DILocation(line: 424, column: 32, scope: !4192)
!4245 = !DILocation(line: 424, column: 38, scope: !4192)
!4246 = !DILocation(line: 424, column: 42, scope: !4192)
!4247 = !DILocation(line: 424, column: 2, scope: !4192)
!4248 = !DILocation(line: 426, column: 19, scope: !4192)
!4249 = !DILocation(line: 426, column: 44, scope: !4192)
!4250 = !DILocation(line: 426, column: 48, scope: !4192)
!4251 = !DILocation(line: 426, column: 56, scope: !4192)
!4252 = !DILocation(line: 426, column: 2, scope: !4192)
!4253 = !DILocation(line: 427, column: 1, scope: !4192)
!4254 = distinct !DISubprogram(name: "WM_operatortype_macro_define", scope: !3, file: !3, line: 429, type: !4255, scopeLine: 430, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!4255 = !DISubroutineType(types: !4256)
!4256 = !{!4257, !3228, !2979}
!4257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4258, size: 64)
!4258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperatorTypeMacro", file: !41, line: 216, size: 768, elements: !4259)
!4259 = !{!4260, !4261, !4262, !4263, !4264}
!4260 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4258, file: !41, line: 217, baseType: !4257, size: 64)
!4261 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4258, file: !41, line: 217, baseType: !4257, size: 64, offset: 64)
!4262 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !4258, file: !41, line: 220, baseType: !1476, size: 512, offset: 128)
!4263 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !4258, file: !41, line: 222, baseType: !1470, size: 64, offset: 640)
!4264 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4258, file: !41, line: 223, baseType: !3082, size: 64, offset: 704)
!4265 = !DILocalVariable(name: "ot", arg: 1, scope: !4254, file: !3, line: 429, type: !3228)
!4266 = !DILocation(line: 429, column: 67, scope: !4254)
!4267 = !DILocalVariable(name: "idname", arg: 2, scope: !4254, file: !3, line: 429, type: !2979)
!4268 = !DILocation(line: 429, column: 83, scope: !4254)
!4269 = !DILocalVariable(name: "otmacro", scope: !4254, file: !3, line: 431, type: !4270)
!4270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4271, size: 64)
!4271 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmOperatorTypeMacro", file: !41, line: 224, baseType: !4258)
!4272 = !DILocation(line: 431, column: 23, scope: !4254)
!4273 = !DILocation(line: 431, column: 33, scope: !4254)
!4274 = !DILocation(line: 433, column: 14, scope: !4254)
!4275 = !DILocation(line: 433, column: 23, scope: !4254)
!4276 = !DILocation(line: 433, column: 31, scope: !4254)
!4277 = !DILocation(line: 433, column: 2, scope: !4254)
!4278 = !DILocation(line: 436, column: 33, scope: !4254)
!4279 = !DILocation(line: 436, column: 42, scope: !4254)
!4280 = !DILocation(line: 436, column: 50, scope: !4254)
!4281 = !DILocation(line: 436, column: 59, scope: !4254)
!4282 = !DILocation(line: 436, column: 72, scope: !4254)
!4283 = !DILocation(line: 436, column: 2, scope: !4254)
!4284 = !DILocation(line: 437, column: 34, scope: !4254)
!4285 = !DILocation(line: 437, column: 43, scope: !4254)
!4286 = !DILocation(line: 437, column: 2, scope: !4254)
!4287 = !DILocation(line: 439, column: 15, scope: !4254)
!4288 = !DILocation(line: 439, column: 19, scope: !4254)
!4289 = !DILocation(line: 439, column: 26, scope: !4254)
!4290 = !DILocation(line: 439, column: 2, scope: !4254)
!4291 = !DILocalVariable(name: "otsub", scope: !4292, file: !3, line: 443, type: !3228)
!4292 = distinct !DILexicalBlock(scope: !4254, file: !3, line: 441, column: 2)
!4293 = !DILocation(line: 443, column: 19, scope: !4292)
!4294 = !DILocation(line: 443, column: 48, scope: !4292)
!4295 = !DILocation(line: 443, column: 27, scope: !4292)
!4296 = !DILocation(line: 444, column: 7, scope: !4297)
!4297 = distinct !DILexicalBlock(scope: !4292, file: !3, line: 444, column: 7)
!4298 = !DILocation(line: 444, column: 7, scope: !4292)
!4299 = !DILocation(line: 445, column: 28, scope: !4300)
!4300 = distinct !DILexicalBlock(scope: !4297, file: !3, line: 444, column: 14)
!4301 = !DILocation(line: 445, column: 32, scope: !4300)
!4302 = !DILocation(line: 445, column: 38, scope: !4300)
!4303 = !DILocation(line: 445, column: 45, scope: !4300)
!4304 = !DILocation(line: 445, column: 53, scope: !4300)
!4305 = !DILocation(line: 445, column: 60, scope: !4300)
!4306 = !DILocation(line: 446, column: 28, scope: !4300)
!4307 = !DILocation(line: 446, column: 35, scope: !4300)
!4308 = !DILocation(line: 446, column: 41, scope: !4300)
!4309 = !DILocation(line: 446, column: 48, scope: !4300)
!4310 = !DILocation(line: 445, column: 4, scope: !4300)
!4311 = !DILocation(line: 447, column: 3, scope: !4300)
!4312 = !DILocation(line: 450, column: 9, scope: !4254)
!4313 = !DILocation(line: 450, column: 2, scope: !4254)
!4314 = distinct !DISubprogram(name: "WM_operator_properties_alloc", scope: !3, file: !3, line: 901, type: !4315, scopeLine: 902, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!4315 = !DISubroutineType(types: !4316)
!4316 = !{null, !4317, !4320, !2979}
!4317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4318, size: 64)
!4318 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4319, size: 64)
!4319 = !DIDerivedType(tag: DW_TAG_typedef, name: "PointerRNA", file: !6, line: 62, baseType: !3083)
!4320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1465, size: 64)
!4321 = !DILocalVariable(name: "ptr", arg: 1, scope: !4314, file: !3, line: 901, type: !4317)
!4322 = !DILocation(line: 901, column: 48, scope: !4314)
!4323 = !DILocalVariable(name: "properties", arg: 2, scope: !4314, file: !3, line: 901, type: !4320)
!4324 = !DILocation(line: 901, column: 66, scope: !4314)
!4325 = !DILocalVariable(name: "opstring", arg: 3, scope: !4314, file: !3, line: 901, type: !2979)
!4326 = !DILocation(line: 901, column: 90, scope: !4314)
!4327 = !DILocation(line: 903, column: 7, scope: !4328)
!4328 = distinct !DILexicalBlock(scope: !4314, file: !3, line: 903, column: 6)
!4329 = !DILocation(line: 903, column: 6, scope: !4328)
!4330 = !DILocation(line: 903, column: 18, scope: !4328)
!4331 = !DILocation(line: 903, column: 6, scope: !4314)
!4332 = !DILocalVariable(name: "val", scope: !4333, file: !3, line: 904, type: !4334)
!4333 = distinct !DILexicalBlock(scope: !4328, file: !3, line: 903, column: 27)
!4334 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyTemplate", file: !4335, line: 56, baseType: !4336)
!4335 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_idprop.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4336 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "IDPropertyTemplate", file: !4335, line: 38, size: 128, elements: !4337)
!4337 = !{!4338, !4339, !4340, !4341, !4347, !4348, !4353}
!4338 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !4336, file: !4335, line: 39, baseType: !1224, size: 32)
!4339 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !4336, file: !4335, line: 40, baseType: !1537, size: 32)
!4340 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4336, file: !4335, line: 41, baseType: !3016, size: 64)
!4341 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !4336, file: !4335, line: 46, baseType: !4342, size: 128)
!4342 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4336, file: !4335, line: 42, size: 128, elements: !4343)
!4343 = !{!4344, !4345, !4346}
!4344 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4342, file: !4335, line: 43, baseType: !1502, size: 64)
!4345 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4342, file: !4335, line: 44, baseType: !1460, size: 16, offset: 64)
!4346 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !4342, file: !4335, line: 45, baseType: !1447, size: 8, offset: 80)
!4347 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4336, file: !4335, line: 47, baseType: !1435, size: 64)
!4348 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !4336, file: !4335, line: 51, baseType: !4349, size: 32)
!4349 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4336, file: !4335, line: 48, size: 32, elements: !4350)
!4350 = !{!4351, !4352}
!4351 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4349, file: !4335, line: 49, baseType: !1460, size: 16)
!4352 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4349, file: !4335, line: 50, baseType: !1460, size: 16, offset: 16)
!4353 = !DIDerivedType(tag: DW_TAG_member, name: "matrix_or_vector", scope: !4336, file: !4335, line: 55, baseType: !4354, size: 128)
!4354 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4336, file: !4335, line: 52, size: 128, elements: !4355)
!4355 = !{!4356, !4357}
!4356 = !DIDerivedType(tag: DW_TAG_member, name: "matvec_size", scope: !4354, file: !4335, line: 53, baseType: !1224, size: 32)
!4357 = !DIDerivedType(tag: DW_TAG_member, name: "example", scope: !4354, file: !4335, line: 54, baseType: !3293, size: 64, offset: 64)
!4358 = !DILocation(line: 904, column: 22, scope: !4333)
!4359 = !DILocation(line: 905, column: 17, scope: !4333)
!4360 = !DILocation(line: 905, column: 4, scope: !4333)
!4361 = !DILocation(line: 905, column: 15, scope: !4333)
!4362 = !DILocation(line: 906, column: 2, scope: !4333)
!4363 = !DILocation(line: 908, column: 7, scope: !4364)
!4364 = distinct !DILexicalBlock(scope: !4314, file: !3, line: 908, column: 6)
!4365 = !DILocation(line: 908, column: 6, scope: !4364)
!4366 = !DILocation(line: 908, column: 11, scope: !4364)
!4367 = !DILocation(line: 908, column: 6, scope: !4314)
!4368 = !DILocation(line: 909, column: 10, scope: !4369)
!4369 = distinct !DILexicalBlock(scope: !4364, file: !3, line: 908, column: 20)
!4370 = !DILocation(line: 909, column: 4, scope: !4369)
!4371 = !DILocation(line: 909, column: 8, scope: !4369)
!4372 = !DILocation(line: 910, column: 34, scope: !4369)
!4373 = !DILocation(line: 910, column: 33, scope: !4369)
!4374 = !DILocation(line: 910, column: 39, scope: !4369)
!4375 = !DILocation(line: 910, column: 3, scope: !4369)
!4376 = !DILocation(line: 911, column: 2, scope: !4369)
!4377 = !DILocation(line: 913, column: 18, scope: !4314)
!4378 = !DILocation(line: 913, column: 17, scope: !4314)
!4379 = !DILocation(line: 913, column: 4, scope: !4314)
!4380 = !DILocation(line: 913, column: 3, scope: !4314)
!4381 = !DILocation(line: 913, column: 10, scope: !4314)
!4382 = !DILocation(line: 913, column: 15, scope: !4314)
!4383 = !DILocation(line: 915, column: 1, scope: !4314)
!4384 = distinct !DISubprogram(name: "WM_operator_properties_sanitize", scope: !3, file: !3, line: 917, type: !4385, scopeLine: 918, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!4385 = !DISubroutineType(types: !4386)
!4386 = !{null, !4318, !4387}
!4387 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2328)
!4388 = !DILocalVariable(name: "ptr", arg: 1, scope: !4384, file: !3, line: 917, type: !4318)
!4389 = !DILocation(line: 917, column: 50, scope: !4384)
!4390 = !DILocalVariable(name: "no_context", arg: 2, scope: !4384, file: !3, line: 917, type: !4387)
!4391 = !DILocation(line: 917, column: 66, scope: !4384)
!4392 = !DILocalVariable(name: "rna_macro_iter", scope: !4393, file: !3, line: 919, type: !4394)
!4393 = distinct !DILexicalBlock(scope: !4384, file: !3, line: 919, column: 2)
!4394 = !DIDerivedType(tag: DW_TAG_typedef, name: "CollectionPropertyIterator", file: !6, line: 279, baseType: !4395)
!4395 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CollectionPropertyIterator", file: !6, line: 264, size: 1088, elements: !4396)
!4396 = !{!4397, !4398, !4399, !4401, !4431, !4432, !4433, !4434}
!4397 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4395, file: !6, line: 266, baseType: !4319, size: 192)
!4398 = !DIDerivedType(tag: DW_TAG_member, name: "builtin_parent", scope: !4395, file: !6, line: 267, baseType: !4319, size: 192, offset: 192)
!4399 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !4395, file: !6, line: 268, baseType: !4400, size: 64, offset: 384)
!4400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1394, size: 64)
!4401 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !4395, file: !6, line: 272, baseType: !4402, size: 320, offset: 448)
!4402 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4395, file: !6, line: 269, size: 320, elements: !4403)
!4403 = !{!4404, !4419}
!4404 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !4402, file: !6, line: 270, baseType: !4405, size: 320)
!4405 = !DIDerivedType(tag: DW_TAG_typedef, name: "ArrayIterator", file: !6, line: 262, baseType: !4406)
!4406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ArrayIterator", file: !6, line: 249, size: 320, elements: !4407)
!4407 = !{!4408, !4409, !4410, !4411, !4412, !4413}
!4408 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4406, file: !6, line: 250, baseType: !1502, size: 64)
!4409 = !DIDerivedType(tag: DW_TAG_member, name: "endptr", scope: !4406, file: !6, line: 251, baseType: !1502, size: 64, offset: 64)
!4410 = !DIDerivedType(tag: DW_TAG_member, name: "free_ptr", scope: !4406, file: !6, line: 252, baseType: !1391, size: 64, offset: 128)
!4411 = !DIDerivedType(tag: DW_TAG_member, name: "itemsize", scope: !4406, file: !6, line: 253, baseType: !1224, size: 32, offset: 192)
!4412 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4406, file: !6, line: 257, baseType: !1224, size: 32, offset: 224)
!4413 = !DIDerivedType(tag: DW_TAG_member, name: "skip", scope: !4406, file: !6, line: 261, baseType: !4414, size: 64, offset: 256)
!4414 = !DIDerivedType(tag: DW_TAG_typedef, name: "IteratorSkipFunc", file: !6, line: 241, baseType: !4415)
!4415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4416, size: 64)
!4416 = !DISubroutineType(types: !4417)
!4417 = !{!1224, !4418, !1391}
!4418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4395, size: 64)
!4419 = !DIDerivedType(tag: DW_TAG_member, name: "listbase", scope: !4402, file: !6, line: 271, baseType: !4420, size: 192)
!4420 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBaseIterator", file: !6, line: 247, baseType: !4421)
!4421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBaseIterator", file: !6, line: 243, size: 192, elements: !4422)
!4422 = !{!4423, !4429, !4430}
!4423 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !4421, file: !6, line: 244, baseType: !4424, size: 64)
!4424 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4425, size: 64)
!4425 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Link", file: !1487, line: 57, size: 128, elements: !4426)
!4426 = !{!4427, !4428}
!4427 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4425, file: !1487, line: 58, baseType: !4424, size: 64)
!4428 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4425, file: !1487, line: 58, baseType: !4424, size: 64, offset: 64)
!4429 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4421, file: !6, line: 245, baseType: !1224, size: 32, offset: 64)
!4430 = !DIDerivedType(tag: DW_TAG_member, name: "skip", scope: !4421, file: !6, line: 246, baseType: !4414, size: 64, offset: 128)
!4431 = !DIDerivedType(tag: DW_TAG_member, name: "idprop", scope: !4395, file: !6, line: 273, baseType: !1224, size: 32, offset: 768)
!4432 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !4395, file: !6, line: 274, baseType: !1224, size: 32, offset: 800)
!4433 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4395, file: !6, line: 277, baseType: !4319, size: 192, offset: 832)
!4434 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !4395, file: !6, line: 278, baseType: !1224, size: 32, offset: 1024)
!4435 = !DILocation(line: 919, column: 2, scope: !4393)
!4436 = !DILocation(line: 919, column: 2, scope: !4437)
!4437 = distinct !DILexicalBlock(scope: !4393, file: !3, line: 919, column: 2)
!4438 = !DILocation(line: 919, column: 2, scope: !4439)
!4439 = distinct !DILexicalBlock(scope: !4437, file: !3, line: 919, column: 2)
!4440 = !DILocalVariable(name: "prop", scope: !4441, file: !3, line: 919, type: !1392)
!4441 = distinct !DILexicalBlock(scope: !4439, file: !3, line: 919, column: 2)
!4442 = !DILocation(line: 919, column: 2, scope: !4441)
!4443 = !DILocation(line: 921, column: 29, scope: !4444)
!4444 = distinct !DILexicalBlock(scope: !4441, file: !3, line: 920, column: 2)
!4445 = !DILocation(line: 921, column: 11, scope: !4444)
!4446 = !DILocation(line: 921, column: 3, scope: !4444)
!4447 = !DILocation(line: 923, column: 9, scope: !4448)
!4448 = distinct !DILexicalBlock(scope: !4449, file: !3, line: 923, column: 9)
!4449 = distinct !DILexicalBlock(scope: !4444, file: !3, line: 921, column: 36)
!4450 = !DILocation(line: 923, column: 9, scope: !4449)
!4451 = !DILocation(line: 924, column: 28, scope: !4448)
!4452 = !DILocation(line: 924, column: 6, scope: !4448)
!4453 = !DILocation(line: 926, column: 34, scope: !4448)
!4454 = !DILocation(line: 926, column: 6, scope: !4448)
!4455 = !DILocation(line: 927, column: 5, scope: !4449)
!4456 = !DILocalVariable(name: "ptype", scope: !4457, file: !3, line: 930, type: !3075)
!4457 = distinct !DILexicalBlock(scope: !4449, file: !3, line: 929, column: 4)
!4458 = !DILocation(line: 930, column: 16, scope: !4457)
!4459 = !DILocation(line: 930, column: 50, scope: !4457)
!4460 = !DILocation(line: 930, column: 55, scope: !4457)
!4461 = !DILocation(line: 930, column: 24, scope: !4457)
!4462 = !DILocation(line: 933, column: 25, scope: !4463)
!4463 = distinct !DILexicalBlock(scope: !4457, file: !3, line: 933, column: 9)
!4464 = !DILocation(line: 933, column: 9, scope: !4463)
!4465 = !DILocation(line: 933, column: 9, scope: !4457)
!4466 = !DILocalVariable(name: "opptr", scope: !4467, file: !3, line: 934, type: !4319)
!4467 = distinct !DILexicalBlock(scope: !4463, file: !3, line: 933, column: 58)
!4468 = !DILocation(line: 934, column: 17, scope: !4467)
!4469 = !DILocation(line: 934, column: 50, scope: !4467)
!4470 = !DILocation(line: 934, column: 55, scope: !4467)
!4471 = !DILocation(line: 934, column: 25, scope: !4467)
!4472 = !DILocation(line: 935, column: 46, scope: !4467)
!4473 = !DILocation(line: 935, column: 6, scope: !4467)
!4474 = !DILocation(line: 936, column: 5, scope: !4467)
!4475 = !DILocation(line: 937, column: 5, scope: !4457)
!4476 = !DILocation(line: 940, column: 5, scope: !4449)
!4477 = !DILocation(line: 943, column: 2, scope: !4441)
!4478 = distinct !{!4478, !4436, !4479}
!4479 = !DILocation(line: 943, column: 2, scope: !4437)
!4480 = !DILocation(line: 943, column: 2, scope: !4393)
!4481 = !DILocation(line: 944, column: 1, scope: !4384)
!4482 = distinct !DISubprogram(name: "WM_operatortype_remove_ptr", scope: !3, file: !3, line: 466, type: !3678, scopeLine: 467, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!4483 = !DILocalVariable(name: "ot", arg: 1, scope: !4482, file: !3, line: 466, type: !3228)
!4484 = !DILocation(line: 466, column: 49, scope: !4482)
!4485 = !DILocation(line: 470, column: 32, scope: !4482)
!4486 = !DILocation(line: 470, column: 36, scope: !4482)
!4487 = !DILocation(line: 470, column: 2, scope: !4482)
!4488 = !DILocation(line: 472, column: 6, scope: !4489)
!4489 = distinct !DILexicalBlock(scope: !4482, file: !3, line: 472, column: 6)
!4490 = !DILocation(line: 472, column: 10, scope: !4489)
!4491 = !DILocation(line: 472, column: 6, scope: !4482)
!4492 = !DILocation(line: 473, column: 20, scope: !4493)
!4493 = distinct !DILexicalBlock(scope: !4489, file: !3, line: 472, column: 27)
!4494 = !DILocation(line: 473, column: 24, scope: !4493)
!4495 = !DILocation(line: 473, column: 3, scope: !4493)
!4496 = !DILocation(line: 474, column: 3, scope: !4493)
!4497 = !DILocation(line: 474, column: 13, scope: !4493)
!4498 = !DILocation(line: 474, column: 17, scope: !4493)
!4499 = !DILocation(line: 475, column: 2, scope: !4493)
!4500 = !DILocation(line: 477, column: 6, scope: !4501)
!4501 = distinct !DILexicalBlock(scope: !4482, file: !3, line: 477, column: 6)
!4502 = !DILocation(line: 477, column: 10, scope: !4501)
!4503 = !DILocation(line: 477, column: 16, scope: !4501)
!4504 = !DILocation(line: 477, column: 6, scope: !4482)
!4505 = !DILocation(line: 478, column: 30, scope: !4501)
!4506 = !DILocation(line: 478, column: 3, scope: !4501)
!4507 = !DILocation(line: 480, column: 19, scope: !4482)
!4508 = !DILocation(line: 480, column: 44, scope: !4482)
!4509 = !DILocation(line: 480, column: 48, scope: !4482)
!4510 = !DILocation(line: 480, column: 2, scope: !4482)
!4511 = !DILocation(line: 482, column: 2, scope: !4482)
!4512 = !DILocation(line: 484, column: 2, scope: !4482)
!4513 = !DILocation(line: 484, column: 12, scope: !4482)
!4514 = !DILocation(line: 485, column: 1, scope: !4482)
!4515 = distinct !DISubprogram(name: "wm_operatortype_free_macro", scope: !3, file: !3, line: 453, type: !3678, scopeLine: 454, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!4516 = !DILocalVariable(name: "ot", arg: 1, scope: !4515, file: !3, line: 453, type: !3228)
!4517 = !DILocation(line: 453, column: 56, scope: !4515)
!4518 = !DILocalVariable(name: "otmacro", scope: !4515, file: !3, line: 455, type: !4270)
!4519 = !DILocation(line: 455, column: 23, scope: !4515)
!4520 = !DILocation(line: 457, column: 17, scope: !4521)
!4521 = distinct !DILexicalBlock(scope: !4515, file: !3, line: 457, column: 2)
!4522 = !DILocation(line: 457, column: 21, scope: !4521)
!4523 = !DILocation(line: 457, column: 27, scope: !4521)
!4524 = !DILocation(line: 457, column: 15, scope: !4521)
!4525 = !DILocation(line: 457, column: 7, scope: !4521)
!4526 = !DILocation(line: 457, column: 34, scope: !4527)
!4527 = distinct !DILexicalBlock(scope: !4521, file: !3, line: 457, column: 2)
!4528 = !DILocation(line: 457, column: 2, scope: !4521)
!4529 = !DILocation(line: 458, column: 7, scope: !4530)
!4530 = distinct !DILexicalBlock(scope: !4531, file: !3, line: 458, column: 7)
!4531 = distinct !DILexicalBlock(scope: !4527, file: !3, line: 457, column: 68)
!4532 = !DILocation(line: 458, column: 16, scope: !4530)
!4533 = !DILocation(line: 458, column: 7, scope: !4531)
!4534 = !DILocation(line: 459, column: 32, scope: !4535)
!4535 = distinct !DILexicalBlock(scope: !4530, file: !3, line: 458, column: 21)
!4536 = !DILocation(line: 459, column: 41, scope: !4535)
!4537 = !DILocation(line: 459, column: 4, scope: !4535)
!4538 = !DILocation(line: 460, column: 4, scope: !4535)
!4539 = !DILocation(line: 460, column: 14, scope: !4535)
!4540 = !DILocation(line: 460, column: 23, scope: !4535)
!4541 = !DILocation(line: 461, column: 3, scope: !4535)
!4542 = !DILocation(line: 462, column: 2, scope: !4531)
!4543 = !DILocation(line: 457, column: 53, scope: !4527)
!4544 = !DILocation(line: 457, column: 62, scope: !4527)
!4545 = !DILocation(line: 457, column: 51, scope: !4527)
!4546 = !DILocation(line: 457, column: 2, scope: !4527)
!4547 = distinct !{!4547, !4528, !4548}
!4548 = !DILocation(line: 462, column: 2, scope: !4521)
!4549 = !DILocation(line: 463, column: 17, scope: !4515)
!4550 = !DILocation(line: 463, column: 21, scope: !4515)
!4551 = !DILocation(line: 463, column: 2, scope: !4515)
!4552 = !DILocation(line: 464, column: 1, scope: !4515)
!4553 = distinct !DISubprogram(name: "WM_operatortype_remove", scope: !3, file: !3, line: 487, type: !4554, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!4554 = !DISubroutineType(types: !4555)
!4555 = !{!2328, !2979}
!4556 = !DILocalVariable(name: "idname", arg: 1, scope: !4553, file: !3, line: 487, type: !2979)
!4557 = !DILocation(line: 487, column: 41, scope: !4553)
!4558 = !DILocalVariable(name: "ot", scope: !4553, file: !3, line: 489, type: !3228)
!4559 = !DILocation(line: 489, column: 18, scope: !4553)
!4560 = !DILocation(line: 489, column: 44, scope: !4553)
!4561 = !DILocation(line: 489, column: 23, scope: !4553)
!4562 = !DILocation(line: 491, column: 6, scope: !4563)
!4563 = distinct !DILexicalBlock(scope: !4553, file: !3, line: 491, column: 6)
!4564 = !DILocation(line: 491, column: 9, scope: !4563)
!4565 = !DILocation(line: 491, column: 6, scope: !4553)
!4566 = !DILocation(line: 492, column: 3, scope: !4563)
!4567 = !DILocation(line: 494, column: 29, scope: !4553)
!4568 = !DILocation(line: 494, column: 2, scope: !4553)
!4569 = !DILocation(line: 496, column: 2, scope: !4553)
!4570 = !DILocation(line: 497, column: 1, scope: !4553)
!4571 = distinct !DISubprogram(name: "WM_operatortype_last_properties_clear_all", scope: !3, file: !3, line: 502, type: !3472, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!4572 = !DILocalVariable(name: "iter", scope: !4571, file: !3, line: 504, type: !3660)
!4573 = !DILocation(line: 504, column: 16, scope: !4571)
!4574 = !DILocation(line: 506, column: 7, scope: !4575)
!4575 = distinct !DILexicalBlock(scope: !4571, file: !3, line: 506, column: 2)
!4576 = !DILocation(line: 507, column: 9, scope: !4577)
!4577 = distinct !DILexicalBlock(scope: !4575, file: !3, line: 506, column: 2)
!4578 = !DILocation(line: 507, column: 8, scope: !4577)
!4579 = !DILocation(line: 506, column: 2, scope: !4575)
!4580 = !DILocalVariable(name: "ot", scope: !4581, file: !3, line: 510, type: !3228)
!4581 = distinct !DILexicalBlock(scope: !4577, file: !3, line: 509, column: 2)
!4582 = !DILocation(line: 510, column: 19, scope: !4581)
!4583 = !DILocation(line: 510, column: 24, scope: !4581)
!4584 = !DILocation(line: 512, column: 7, scope: !4585)
!4585 = distinct !DILexicalBlock(scope: !4581, file: !3, line: 512, column: 7)
!4586 = !DILocation(line: 512, column: 11, scope: !4585)
!4587 = !DILocation(line: 512, column: 7, scope: !4581)
!4588 = !DILocation(line: 513, column: 21, scope: !4589)
!4589 = distinct !DILexicalBlock(scope: !4585, file: !3, line: 512, column: 28)
!4590 = !DILocation(line: 513, column: 25, scope: !4589)
!4591 = !DILocation(line: 513, column: 4, scope: !4589)
!4592 = !DILocation(line: 514, column: 4, scope: !4589)
!4593 = !DILocation(line: 514, column: 14, scope: !4589)
!4594 = !DILocation(line: 514, column: 18, scope: !4589)
!4595 = !DILocation(line: 515, column: 4, scope: !4589)
!4596 = !DILocation(line: 515, column: 8, scope: !4589)
!4597 = !DILocation(line: 515, column: 24, scope: !4589)
!4598 = !DILocation(line: 516, column: 3, scope: !4589)
!4599 = !DILocation(line: 517, column: 2, scope: !4581)
!4600 = !DILocation(line: 508, column: 8, scope: !4577)
!4601 = !DILocation(line: 506, column: 2, scope: !4577)
!4602 = distinct !{!4602, !4579, !4603}
!4603 = !DILocation(line: 517, column: 2, scope: !4575)
!4604 = !DILocation(line: 518, column: 1, scope: !4571)
!4605 = distinct !DISubprogram(name: "BLI_ghashIterator_done", scope: !1423, file: !1423, line: 98, type: !4606, scopeLine: 98, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!4606 = !DISubroutineType(types: !4607)
!4607 = !{!2328, !3659}
!4608 = !DILocalVariable(name: "ghi", arg: 1, scope: !4605, file: !1423, line: 98, type: !3659)
!4609 = !DILocation(line: 98, column: 57, scope: !4605)
!4610 = !DILocation(line: 98, column: 78, scope: !4605)
!4611 = !DILocation(line: 98, column: 83, scope: !4605)
!4612 = !DILocation(line: 98, column: 77, scope: !4605)
!4613 = !DILocation(line: 98, column: 70, scope: !4605)
!4614 = distinct !DISubprogram(name: "BLI_ghashIterator_getValue", scope: !1423, file: !1423, line: 96, type: !4615, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!4615 = !DISubroutineType(types: !4616)
!4616 = !{!1391, !3659}
!4617 = !DILocalVariable(name: "ghi", arg: 1, scope: !4614, file: !1423, line: 96, type: !3659)
!4618 = !DILocation(line: 96, column: 61, scope: !4614)
!4619 = !DILocation(line: 96, column: 99, scope: !4614)
!4620 = !DILocation(line: 96, column: 104, scope: !4614)
!4621 = !DILocation(line: 96, column: 115, scope: !4614)
!4622 = !DILocation(line: 96, column: 70, scope: !4614)
!4623 = distinct !DISubprogram(name: "WM_operator_py_idname", scope: !3, file: !3, line: 521, type: !3604, scopeLine: 522, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!4624 = !DILocalVariable(name: "to", arg: 1, scope: !4623, file: !3, line: 521, type: !1502)
!4625 = !DILocation(line: 521, column: 34, scope: !4623)
!4626 = !DILocalVariable(name: "from", arg: 2, scope: !4623, file: !3, line: 521, type: !2979)
!4627 = !DILocation(line: 521, column: 50, scope: !4623)
!4628 = !DILocalVariable(name: "sep", scope: !4623, file: !3, line: 523, type: !2979)
!4629 = !DILocation(line: 523, column: 14, scope: !4623)
!4630 = !DILocation(line: 523, column: 27, scope: !4623)
!4631 = !DILocation(line: 523, column: 20, scope: !4623)
!4632 = !DILocation(line: 524, column: 6, scope: !4633)
!4633 = distinct !DILexicalBlock(scope: !4623, file: !3, line: 524, column: 6)
!4634 = !DILocation(line: 524, column: 6, scope: !4623)
!4635 = !DILocalVariable(name: "ofs", scope: !4636, file: !3, line: 525, type: !1224)
!4636 = distinct !DILexicalBlock(scope: !4633, file: !3, line: 524, column: 11)
!4637 = !DILocation(line: 525, column: 7, scope: !4636)
!4638 = !DILocation(line: 525, column: 14, scope: !4636)
!4639 = !DILocation(line: 525, column: 20, scope: !4636)
!4640 = !DILocation(line: 525, column: 18, scope: !4636)
!4641 = !DILocation(line: 525, column: 13, scope: !4636)
!4642 = !DILocation(line: 529, column: 10, scope: !4636)
!4643 = !DILocation(line: 529, column: 14, scope: !4636)
!4644 = !DILocation(line: 529, column: 35, scope: !4636)
!4645 = !DILocation(line: 529, column: 33, scope: !4636)
!4646 = !DILocation(line: 529, column: 3, scope: !4636)
!4647 = !DILocation(line: 530, column: 24, scope: !4636)
!4648 = !DILocation(line: 530, column: 28, scope: !4636)
!4649 = !DILocation(line: 530, column: 3, scope: !4636)
!4650 = !DILocation(line: 532, column: 3, scope: !4636)
!4651 = !DILocation(line: 532, column: 6, scope: !4636)
!4652 = !DILocation(line: 532, column: 11, scope: !4636)
!4653 = !DILocation(line: 533, column: 15, scope: !4636)
!4654 = !DILocation(line: 533, column: 21, scope: !4636)
!4655 = !DILocation(line: 533, column: 25, scope: !4636)
!4656 = !DILocation(line: 533, column: 18, scope: !4636)
!4657 = !DILocation(line: 533, column: 31, scope: !4636)
!4658 = !DILocation(line: 533, column: 35, scope: !4636)
!4659 = !DILocation(line: 533, column: 59, scope: !4636)
!4660 = !DILocation(line: 533, column: 63, scope: !4636)
!4661 = !DILocation(line: 533, column: 56, scope: !4636)
!4662 = !DILocation(line: 533, column: 40, scope: !4636)
!4663 = !DILocation(line: 533, column: 3, scope: !4636)
!4664 = !DILocation(line: 534, column: 2, scope: !4636)
!4665 = !DILocation(line: 537, column: 15, scope: !4666)
!4666 = distinct !DILexicalBlock(scope: !4633, file: !3, line: 535, column: 7)
!4667 = !DILocation(line: 537, column: 19, scope: !4666)
!4668 = !DILocation(line: 537, column: 3, scope: !4666)
!4669 = !DILocation(line: 539, column: 1, scope: !4623)
!4670 = distinct !DISubprogram(name: "WM_operator_pystring_ex", scope: !3, file: !3, line: 571, type: !4671, scopeLine: 573, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!4671 = !DISubroutineType(types: !4672)
!4672 = !{!1502, !1414, !2965, !4387, !4387, !3228, !4318}
!4673 = !DILocalVariable(name: "C", arg: 1, scope: !4670, file: !3, line: 571, type: !1414)
!4674 = !DILocation(line: 571, column: 41, scope: !4670)
!4675 = !DILocalVariable(name: "op", arg: 2, scope: !4670, file: !3, line: 571, type: !2965)
!4676 = !DILocation(line: 571, column: 56, scope: !4670)
!4677 = !DILocalVariable(name: "all_args", arg: 3, scope: !4670, file: !3, line: 571, type: !4387)
!4678 = !DILocation(line: 571, column: 71, scope: !4670)
!4679 = !DILocalVariable(name: "macro_args", arg: 4, scope: !4670, file: !3, line: 571, type: !4387)
!4680 = !DILocation(line: 571, column: 92, scope: !4670)
!4681 = !DILocalVariable(name: "ot", arg: 5, scope: !4670, file: !3, line: 572, type: !3228)
!4682 = !DILocation(line: 572, column: 47, scope: !4670)
!4683 = !DILocalVariable(name: "opptr", arg: 6, scope: !4670, file: !3, line: 572, type: !4318)
!4684 = !DILocation(line: 572, column: 63, scope: !4670)
!4685 = !DILocalVariable(name: "idname_py", scope: !4670, file: !3, line: 574, type: !1476)
!4686 = !DILocation(line: 574, column: 7, scope: !4670)
!4687 = !DILocalVariable(name: "dynstr", scope: !4670, file: !3, line: 577, type: !4688)
!4688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4689, size: 64)
!4689 = !DIDerivedType(tag: DW_TAG_typedef, name: "DynStr", file: !4690, line: 48, baseType: !4691)
!4690 = !DIFile(filename: "blender/source/blender/blenlib/BLI_dynstr.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4691 = !DICompositeType(tag: DW_TAG_structure_type, name: "DynStr", file: !4690, line: 45, flags: DIFlagFwdDecl)
!4692 = !DILocation(line: 577, column: 10, scope: !4670)
!4693 = !DILocation(line: 577, column: 19, scope: !4670)
!4694 = !DILocalVariable(name: "cstring", scope: !4670, file: !3, line: 578, type: !1502)
!4695 = !DILocation(line: 578, column: 8, scope: !4670)
!4696 = !DILocalVariable(name: "cstring_args", scope: !4670, file: !3, line: 579, type: !1502)
!4697 = !DILocation(line: 579, column: 8, scope: !4670)
!4698 = !DILocalVariable(name: "max_prop_length", scope: !4670, file: !3, line: 582, type: !1224)
!4699 = !DILocation(line: 582, column: 6, scope: !4670)
!4700 = !DILocation(line: 584, column: 24, scope: !4670)
!4701 = !DILocation(line: 584, column: 35, scope: !4670)
!4702 = !DILocation(line: 584, column: 39, scope: !4670)
!4703 = !DILocation(line: 584, column: 2, scope: !4670)
!4704 = !DILocation(line: 585, column: 21, scope: !4670)
!4705 = !DILocation(line: 585, column: 44, scope: !4670)
!4706 = !DILocation(line: 585, column: 2, scope: !4670)
!4707 = !DILocation(line: 587, column: 6, scope: !4708)
!4708 = distinct !DILexicalBlock(scope: !4670, file: !3, line: 587, column: 6)
!4709 = !DILocation(line: 587, column: 9, scope: !4708)
!4710 = !DILocation(line: 587, column: 12, scope: !4708)
!4711 = !DILocation(line: 587, column: 16, scope: !4708)
!4712 = !DILocation(line: 587, column: 22, scope: !4708)
!4713 = !DILocation(line: 587, column: 6, scope: !4670)
!4714 = !DILocalVariable(name: "opm", scope: !4715, file: !3, line: 589, type: !2965)
!4715 = distinct !DILexicalBlock(scope: !4708, file: !3, line: 587, column: 29)
!4716 = !DILocation(line: 589, column: 15, scope: !4715)
!4717 = !DILocalVariable(name: "first_op", scope: !4715, file: !3, line: 590, type: !2328)
!4718 = !DILocation(line: 590, column: 8, scope: !4715)
!4719 = !DILocation(line: 592, column: 9, scope: !4715)
!4720 = !DILocation(line: 592, column: 22, scope: !4715)
!4721 = !DILocation(line: 592, column: 26, scope: !4715)
!4722 = !DILocation(line: 592, column: 32, scope: !4715)
!4723 = !DILocation(line: 592, column: 7, scope: !4715)
!4724 = !DILocation(line: 594, column: 3, scope: !4715)
!4725 = !DILocation(line: 594, column: 10, scope: !4726)
!4726 = distinct !DILexicalBlock(scope: !4727, file: !3, line: 594, column: 3)
!4727 = distinct !DILexicalBlock(scope: !4715, file: !3, line: 594, column: 3)
!4728 = !DILocation(line: 594, column: 3, scope: !4727)
!4729 = !DILocalVariable(name: "opmptr", scope: !4730, file: !3, line: 595, type: !4318)
!4730 = distinct !DILexicalBlock(scope: !4726, file: !3, line: 594, column: 32)
!4731 = !DILocation(line: 595, column: 16, scope: !4730)
!4732 = !DILocation(line: 595, column: 25, scope: !4730)
!4733 = !DILocation(line: 595, column: 30, scope: !4730)
!4734 = !DILocalVariable(name: "opmptr_default", scope: !4730, file: !3, line: 596, type: !4319)
!4735 = !DILocation(line: 596, column: 15, scope: !4730)
!4736 = !DILocation(line: 597, column: 8, scope: !4737)
!4737 = distinct !DILexicalBlock(scope: !4730, file: !3, line: 597, column: 8)
!4738 = !DILocation(line: 597, column: 15, scope: !4737)
!4739 = !DILocation(line: 597, column: 8, scope: !4730)
!4740 = !DILocation(line: 598, column: 56, scope: !4741)
!4741 = distinct !DILexicalBlock(scope: !4737, file: !3, line: 597, column: 24)
!4742 = !DILocation(line: 598, column: 61, scope: !4741)
!4743 = !DILocation(line: 598, column: 5, scope: !4741)
!4744 = !DILocation(line: 599, column: 12, scope: !4741)
!4745 = !DILocation(line: 600, column: 4, scope: !4741)
!4746 = !DILocation(line: 602, column: 44, scope: !4730)
!4747 = !DILocation(line: 602, column: 47, scope: !4730)
!4748 = !DILocation(line: 602, column: 19, scope: !4730)
!4749 = !DILocation(line: 602, column: 17, scope: !4730)
!4750 = !DILocation(line: 603, column: 8, scope: !4751)
!4751 = distinct !DILexicalBlock(scope: !4730, file: !3, line: 603, column: 8)
!4752 = !DILocation(line: 603, column: 8, scope: !4730)
!4753 = !DILocation(line: 604, column: 24, scope: !4754)
!4754 = distinct !DILexicalBlock(scope: !4751, file: !3, line: 603, column: 18)
!4755 = !DILocation(line: 604, column: 41, scope: !4754)
!4756 = !DILocation(line: 604, column: 46, scope: !4754)
!4757 = !DILocation(line: 604, column: 52, scope: !4754)
!4758 = !DILocation(line: 604, column: 60, scope: !4754)
!4759 = !DILocation(line: 604, column: 5, scope: !4754)
!4760 = !DILocation(line: 605, column: 14, scope: !4754)
!4761 = !DILocation(line: 606, column: 4, scope: !4754)
!4762 = !DILocation(line: 608, column: 24, scope: !4763)
!4763 = distinct !DILexicalBlock(scope: !4751, file: !3, line: 607, column: 9)
!4764 = !DILocation(line: 608, column: 43, scope: !4763)
!4765 = !DILocation(line: 608, column: 48, scope: !4763)
!4766 = !DILocation(line: 608, column: 54, scope: !4763)
!4767 = !DILocation(line: 608, column: 62, scope: !4763)
!4768 = !DILocation(line: 608, column: 5, scope: !4763)
!4769 = !DILocation(line: 610, column: 4, scope: !4730)
!4770 = !DILocation(line: 610, column: 14, scope: !4730)
!4771 = !DILocation(line: 612, column: 8, scope: !4772)
!4772 = distinct !DILexicalBlock(scope: !4730, file: !3, line: 612, column: 8)
!4773 = !DILocation(line: 612, column: 15, scope: !4772)
!4774 = !DILocation(line: 612, column: 8, scope: !4730)
!4775 = !DILocation(line: 613, column: 5, scope: !4776)
!4776 = distinct !DILexicalBlock(scope: !4772, file: !3, line: 612, column: 35)
!4777 = !DILocation(line: 614, column: 4, scope: !4776)
!4778 = !DILocation(line: 615, column: 3, scope: !4730)
!4779 = !DILocation(line: 594, column: 21, scope: !4726)
!4780 = !DILocation(line: 594, column: 26, scope: !4726)
!4781 = !DILocation(line: 594, column: 19, scope: !4726)
!4782 = !DILocation(line: 594, column: 3, scope: !4726)
!4783 = distinct !{!4783, !4728, !4784}
!4784 = !DILocation(line: 615, column: 3, scope: !4727)
!4785 = !DILocation(line: 616, column: 2, scope: !4715)
!4786 = !DILocalVariable(name: "opptr_default", scope: !4787, file: !3, line: 619, type: !4319)
!4787 = distinct !DILexicalBlock(scope: !4708, file: !3, line: 617, column: 7)
!4788 = !DILocation(line: 619, column: 14, scope: !4787)
!4789 = !DILocalVariable(name: "macro_args_test", scope: !4787, file: !3, line: 620, type: !4387)
!4790 = !DILocation(line: 620, column: 14, scope: !4787)
!4791 = !DILocation(line: 620, column: 32, scope: !4787)
!4792 = !DILocation(line: 620, column: 36, scope: !4787)
!4793 = !DILocation(line: 620, column: 42, scope: !4787)
!4794 = !DILocation(line: 620, column: 50, scope: !4787)
!4795 = !DILocation(line: 622, column: 7, scope: !4796)
!4796 = distinct !DILexicalBlock(scope: !4787, file: !3, line: 622, column: 7)
!4797 = !DILocation(line: 622, column: 13, scope: !4796)
!4798 = !DILocation(line: 622, column: 7, scope: !4787)
!4799 = !DILocation(line: 623, column: 54, scope: !4800)
!4800 = distinct !DILexicalBlock(scope: !4796, file: !3, line: 622, column: 22)
!4801 = !DILocation(line: 623, column: 4, scope: !4800)
!4802 = !DILocation(line: 624, column: 10, scope: !4800)
!4803 = !DILocation(line: 625, column: 3, scope: !4800)
!4804 = !DILocation(line: 627, column: 49, scope: !4787)
!4805 = !DILocation(line: 627, column: 52, scope: !4787)
!4806 = !DILocation(line: 627, column: 66, scope: !4787)
!4807 = !DILocation(line: 627, column: 76, scope: !4787)
!4808 = !DILocation(line: 627, column: 93, scope: !4787)
!4809 = !DILocation(line: 627, column: 18, scope: !4787)
!4810 = !DILocation(line: 627, column: 16, scope: !4787)
!4811 = !DILocation(line: 628, column: 21, scope: !4787)
!4812 = !DILocation(line: 628, column: 29, scope: !4787)
!4813 = !DILocation(line: 628, column: 3, scope: !4787)
!4814 = !DILocation(line: 629, column: 3, scope: !4787)
!4815 = !DILocation(line: 629, column: 13, scope: !4787)
!4816 = !DILocation(line: 631, column: 7, scope: !4817)
!4817 = distinct !DILexicalBlock(scope: !4787, file: !3, line: 631, column: 7)
!4818 = !DILocation(line: 631, column: 13, scope: !4817)
!4819 = !DILocation(line: 631, column: 7, scope: !4787)
!4820 = !DILocation(line: 632, column: 4, scope: !4821)
!4821 = distinct !DILexicalBlock(scope: !4817, file: !3, line: 631, column: 32)
!4822 = !DILocation(line: 633, column: 3, scope: !4821)
!4823 = !DILocation(line: 636, column: 20, scope: !4670)
!4824 = !DILocation(line: 636, column: 2, scope: !4670)
!4825 = !DILocation(line: 638, column: 35, scope: !4670)
!4826 = !DILocation(line: 638, column: 12, scope: !4670)
!4827 = !DILocation(line: 638, column: 10, scope: !4670)
!4828 = !DILocation(line: 639, column: 18, scope: !4670)
!4829 = !DILocation(line: 639, column: 2, scope: !4670)
!4830 = !DILocation(line: 640, column: 9, scope: !4670)
!4831 = !DILocation(line: 640, column: 2, scope: !4670)
!4832 = distinct !DISubprogram(name: "WM_operator_properties_create_ptr", scope: !3, file: !3, line: 884, type: !4833, scopeLine: 885, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!4833 = !DISubroutineType(types: !4834)
!4834 = !{null, !4318, !3228}
!4835 = !DILocalVariable(name: "ptr", arg: 1, scope: !4832, file: !3, line: 884, type: !4318)
!4836 = !DILocation(line: 884, column: 52, scope: !4832)
!4837 = !DILocalVariable(name: "ot", arg: 2, scope: !4832, file: !3, line: 884, type: !3228)
!4838 = !DILocation(line: 884, column: 73, scope: !4832)
!4839 = !DILocation(line: 886, column: 27, scope: !4832)
!4840 = !DILocation(line: 886, column: 31, scope: !4832)
!4841 = !DILocation(line: 886, column: 43, scope: !4832)
!4842 = !DILocation(line: 886, column: 2, scope: !4832)
!4843 = !DILocation(line: 887, column: 1, scope: !4832)
!4844 = distinct !DISubprogram(name: "WM_operator_properties_free", scope: !3, file: !3, line: 1011, type: !4845, scopeLine: 1012, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!4845 = !DISubroutineType(types: !4846)
!4846 = !{null, !4318}
!4847 = !DILocalVariable(name: "ptr", arg: 1, scope: !4844, file: !3, line: 1011, type: !4318)
!4848 = !DILocation(line: 1011, column: 46, scope: !4844)
!4849 = !DILocalVariable(name: "properties", scope: !4844, file: !3, line: 1013, type: !1465)
!4850 = !DILocation(line: 1013, column: 14, scope: !4844)
!4851 = !DILocation(line: 1013, column: 27, scope: !4844)
!4852 = !DILocation(line: 1013, column: 32, scope: !4844)
!4853 = !DILocation(line: 1015, column: 6, scope: !4854)
!4854 = distinct !DILexicalBlock(scope: !4844, file: !3, line: 1015, column: 6)
!4855 = !DILocation(line: 1015, column: 6, scope: !4844)
!4856 = !DILocation(line: 1016, column: 20, scope: !4857)
!4857 = distinct !DILexicalBlock(scope: !4854, file: !3, line: 1015, column: 18)
!4858 = !DILocation(line: 1016, column: 3, scope: !4857)
!4859 = !DILocation(line: 1017, column: 3, scope: !4857)
!4860 = !DILocation(line: 1017, column: 13, scope: !4857)
!4861 = !DILocation(line: 1018, column: 3, scope: !4857)
!4862 = !DILocation(line: 1018, column: 8, scope: !4857)
!4863 = !DILocation(line: 1018, column: 13, scope: !4857)
!4864 = !DILocation(line: 1019, column: 2, scope: !4857)
!4865 = !DILocation(line: 1020, column: 1, scope: !4844)
!4866 = distinct !DISubprogram(name: "WM_operator_pystring", scope: !3, file: !3, line: 643, type: !4867, scopeLine: 645, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!4867 = !DISubroutineType(types: !4868)
!4868 = !{!1502, !1414, !2965, !4387, !4387}
!4869 = !DILocalVariable(name: "C", arg: 1, scope: !4866, file: !3, line: 643, type: !1414)
!4870 = !DILocation(line: 643, column: 38, scope: !4866)
!4871 = !DILocalVariable(name: "op", arg: 2, scope: !4866, file: !3, line: 643, type: !2965)
!4872 = !DILocation(line: 643, column: 53, scope: !4866)
!4873 = !DILocalVariable(name: "all_args", arg: 3, scope: !4866, file: !3, line: 644, type: !4387)
!4874 = !DILocation(line: 644, column: 39, scope: !4866)
!4875 = !DILocalVariable(name: "macro_args", arg: 4, scope: !4866, file: !3, line: 644, type: !4387)
!4876 = !DILocation(line: 644, column: 60, scope: !4866)
!4877 = !DILocation(line: 646, column: 33, scope: !4866)
!4878 = !DILocation(line: 646, column: 36, scope: !4866)
!4879 = !DILocation(line: 646, column: 40, scope: !4866)
!4880 = !DILocation(line: 646, column: 50, scope: !4866)
!4881 = !DILocation(line: 646, column: 62, scope: !4866)
!4882 = !DILocation(line: 646, column: 66, scope: !4866)
!4883 = !DILocation(line: 646, column: 72, scope: !4866)
!4884 = !DILocation(line: 646, column: 76, scope: !4866)
!4885 = !DILocation(line: 646, column: 9, scope: !4866)
!4886 = !DILocation(line: 646, column: 2, scope: !4866)
!4887 = distinct !DISubprogram(name: "WM_operator_pystring_abbreviate", scope: !3, file: !3, line: 653, type: !4888, scopeLine: 654, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!4888 = !DISubroutineType(types: !4889)
!4889 = !{!2328, !1502, !1224}
!4890 = !DILocalVariable(name: "str", arg: 1, scope: !4887, file: !3, line: 653, type: !1502)
!4891 = !DILocation(line: 653, column: 44, scope: !4887)
!4892 = !DILocalVariable(name: "str_len_max", arg: 2, scope: !4887, file: !3, line: 653, type: !1224)
!4893 = !DILocation(line: 653, column: 53, scope: !4887)
!4894 = !DILocalVariable(name: "str_len", scope: !4887, file: !3, line: 655, type: !1419)
!4895 = !DILocation(line: 655, column: 12, scope: !4887)
!4896 = !DILocation(line: 655, column: 29, scope: !4887)
!4897 = !DILocation(line: 655, column: 22, scope: !4887)
!4898 = !DILocalVariable(name: "parens_start", scope: !4887, file: !3, line: 656, type: !2979)
!4899 = !DILocation(line: 656, column: 14, scope: !4887)
!4900 = !DILocation(line: 656, column: 36, scope: !4887)
!4901 = !DILocation(line: 656, column: 29, scope: !4887)
!4902 = !DILocation(line: 658, column: 6, scope: !4903)
!4903 = distinct !DILexicalBlock(scope: !4887, file: !3, line: 658, column: 6)
!4904 = !DILocation(line: 658, column: 6, scope: !4887)
!4905 = !DILocalVariable(name: "parens_start_pos", scope: !4906, file: !3, line: 659, type: !1419)
!4906 = distinct !DILexicalBlock(scope: !4903, file: !3, line: 658, column: 20)
!4907 = !DILocation(line: 659, column: 13, scope: !4906)
!4908 = !DILocation(line: 659, column: 32, scope: !4906)
!4909 = !DILocation(line: 659, column: 47, scope: !4906)
!4910 = !DILocation(line: 659, column: 45, scope: !4906)
!4911 = !DILocalVariable(name: "parens_end", scope: !4906, file: !3, line: 660, type: !2979)
!4912 = !DILocation(line: 660, column: 15, scope: !4906)
!4913 = !DILocation(line: 660, column: 36, scope: !4906)
!4914 = !DILocation(line: 660, column: 49, scope: !4906)
!4915 = !DILocation(line: 660, column: 28, scope: !4906)
!4916 = !DILocation(line: 662, column: 7, scope: !4917)
!4917 = distinct !DILexicalBlock(scope: !4906, file: !3, line: 662, column: 7)
!4918 = !DILocation(line: 662, column: 7, scope: !4906)
!4919 = !DILocalVariable(name: "parens_len", scope: !4920, file: !3, line: 663, type: !1419)
!4920 = distinct !DILexicalBlock(scope: !4917, file: !3, line: 662, column: 19)
!4921 = !DILocation(line: 663, column: 14, scope: !4920)
!4922 = !DILocation(line: 663, column: 27, scope: !4920)
!4923 = !DILocation(line: 663, column: 40, scope: !4920)
!4924 = !DILocation(line: 663, column: 38, scope: !4920)
!4925 = !DILocation(line: 665, column: 8, scope: !4926)
!4926 = distinct !DILexicalBlock(scope: !4920, file: !3, line: 665, column: 8)
!4927 = !DILocation(line: 665, column: 21, scope: !4926)
!4928 = !DILocation(line: 665, column: 19, scope: !4926)
!4929 = !DILocation(line: 665, column: 8, scope: !4920)
!4930 = !DILocalVariable(name: "comma_first", scope: !4931, file: !3, line: 666, type: !2979)
!4931 = distinct !DILexicalBlock(scope: !4926, file: !3, line: 665, column: 34)
!4932 = !DILocation(line: 666, column: 17, scope: !4931)
!4933 = !DILocation(line: 666, column: 38, scope: !4931)
!4934 = !DILocation(line: 666, column: 31, scope: !4931)
!4935 = !DILocation(line: 669, column: 9, scope: !4936)
!4936 = distinct !DILexicalBlock(scope: !4931, file: !3, line: 669, column: 9)
!4937 = !DILocation(line: 669, column: 9, scope: !4931)
!4938 = !DILocalVariable(name: "end_str", scope: !4939, file: !3, line: 670, type: !4940)
!4939 = distinct !DILexicalBlock(scope: !4936, file: !3, line: 669, column: 22)
!4940 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2980, size: 56, elements: !2227)
!4941 = !DILocation(line: 670, column: 17, scope: !4939)
!4942 = !DILocalVariable(name: "end_str_len", scope: !4939, file: !3, line: 671, type: !1419)
!4943 = !DILocation(line: 671, column: 16, scope: !4939)
!4944 = !DILocalVariable(name: "new_str_len", scope: !4939, file: !3, line: 674, type: !1419)
!4945 = !DILocation(line: 674, column: 16, scope: !4939)
!4946 = !DILocation(line: 674, column: 31, scope: !4939)
!4947 = !DILocation(line: 674, column: 45, scope: !4939)
!4948 = !DILocation(line: 674, column: 43, scope: !4939)
!4949 = !DILocation(line: 674, column: 59, scope: !4939)
!4950 = !DILocation(line: 674, column: 30, scope: !4939)
!4951 = !DILocation(line: 676, column: 10, scope: !4952)
!4952 = distinct !DILexicalBlock(scope: !4939, file: !3, line: 676, column: 10)
!4953 = !DILocation(line: 676, column: 21, scope: !4952)
!4954 = !DILocation(line: 676, column: 35, scope: !4952)
!4955 = !DILocation(line: 676, column: 33, scope: !4952)
!4956 = !DILocation(line: 676, column: 52, scope: !4952)
!4957 = !DILocation(line: 676, column: 66, scope: !4952)
!4958 = !DILocation(line: 676, column: 18, scope: !4952)
!4959 = !DILocation(line: 676, column: 10, scope: !4939)
!4960 = !DILocation(line: 678, column: 14, scope: !4961)
!4961 = distinct !DILexicalBlock(scope: !4952, file: !3, line: 676, column: 71)
!4962 = !DILocation(line: 678, column: 20, scope: !4961)
!4963 = !DILocation(line: 678, column: 18, scope: !4961)
!4964 = !DILocation(line: 678, column: 34, scope: !4961)
!4965 = !DILocation(line: 678, column: 32, scope: !4961)
!4966 = !DILocation(line: 678, column: 7, scope: !4961)
!4967 = !DILocation(line: 680, column: 7, scope: !4961)
!4968 = !DILocation(line: 682, column: 5, scope: !4939)
!4969 = !DILocation(line: 683, column: 4, scope: !4931)
!4970 = !DILocation(line: 684, column: 3, scope: !4920)
!4971 = !DILocation(line: 685, column: 2, scope: !4906)
!4972 = !DILocation(line: 687, column: 2, scope: !4887)
!4973 = !DILocation(line: 688, column: 1, scope: !4887)
!4974 = distinct !DISubprogram(name: "WM_prop_pystring_assign", scope: !3, file: !3, line: 857, type: !4975, scopeLine: 858, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!4975 = !DISubroutineType(types: !4976)
!4976 = !{!1502, !1414, !4318, !1392, !1224}
!4977 = !DILocalVariable(name: "C", arg: 1, scope: !4974, file: !3, line: 857, type: !1414)
!4978 = !DILocation(line: 857, column: 41, scope: !4974)
!4979 = !DILocalVariable(name: "ptr", arg: 2, scope: !4974, file: !3, line: 857, type: !4318)
!4980 = !DILocation(line: 857, column: 56, scope: !4974)
!4981 = !DILocalVariable(name: "prop", arg: 3, scope: !4974, file: !3, line: 857, type: !1392)
!4982 = !DILocation(line: 857, column: 74, scope: !4974)
!4983 = !DILocalVariable(name: "index", arg: 4, scope: !4974, file: !3, line: 857, type: !1224)
!4984 = !DILocation(line: 857, column: 84, scope: !4974)
!4985 = !DILocalVariable(name: "lhs", scope: !4974, file: !3, line: 859, type: !1502)
!4986 = !DILocation(line: 859, column: 8, scope: !4974)
!4987 = !DILocalVariable(name: "rhs", scope: !4974, file: !3, line: 859, type: !1502)
!4988 = !DILocation(line: 859, column: 14, scope: !4974)
!4989 = !DILocalVariable(name: "ret", scope: !4974, file: !3, line: 859, type: !1502)
!4990 = !DILocation(line: 859, column: 20, scope: !4974)
!4991 = !DILocation(line: 861, column: 8, scope: !4974)
!4992 = !DILocation(line: 861, column: 42, scope: !4974)
!4993 = !DILocation(line: 861, column: 45, scope: !4974)
!4994 = !DILocation(line: 861, column: 50, scope: !4974)
!4995 = !DILocation(line: 861, column: 56, scope: !4974)
!4996 = !DILocation(line: 861, column: 12, scope: !4974)
!4997 = !DILocation(line: 861, column: 6, scope: !4974)
!4998 = !DILocation(line: 863, column: 6, scope: !4999)
!4999 = distinct !DILexicalBlock(scope: !4974, file: !3, line: 863, column: 6)
!5000 = !DILocation(line: 863, column: 10, scope: !4999)
!5001 = !DILocation(line: 863, column: 6, scope: !4974)
!5002 = !DILocation(line: 865, column: 35, scope: !5003)
!5003 = distinct !DILexicalBlock(scope: !4999, file: !3, line: 863, column: 19)
!5004 = !DILocation(line: 865, column: 40, scope: !5003)
!5005 = !DILocation(line: 865, column: 46, scope: !5003)
!5006 = !DILocation(line: 865, column: 9, scope: !5003)
!5007 = !DILocation(line: 865, column: 7, scope: !5003)
!5008 = !DILocation(line: 866, column: 2, scope: !5003)
!5009 = !DILocation(line: 868, column: 7, scope: !5010)
!5010 = distinct !DILexicalBlock(scope: !4974, file: !3, line: 868, column: 6)
!5011 = !DILocation(line: 868, column: 6, scope: !4974)
!5012 = !DILocation(line: 869, column: 3, scope: !5013)
!5013 = distinct !DILexicalBlock(scope: !5010, file: !3, line: 868, column: 12)
!5014 = !DILocation(line: 872, column: 31, scope: !4974)
!5015 = !DILocation(line: 872, column: 34, scope: !4974)
!5016 = !DILocation(line: 872, column: 39, scope: !4974)
!5017 = !DILocation(line: 872, column: 45, scope: !4974)
!5018 = !DILocation(line: 872, column: 8, scope: !4974)
!5019 = !DILocation(line: 872, column: 6, scope: !4974)
!5020 = !DILocation(line: 873, column: 7, scope: !5021)
!5021 = distinct !DILexicalBlock(scope: !4974, file: !3, line: 873, column: 6)
!5022 = !DILocation(line: 873, column: 6, scope: !4974)
!5023 = !DILocation(line: 874, column: 3, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !5021, file: !3, line: 873, column: 12)
!5025 = !DILocation(line: 874, column: 13, scope: !5024)
!5026 = !DILocation(line: 875, column: 3, scope: !5024)
!5027 = !DILocation(line: 878, column: 32, scope: !4974)
!5028 = !DILocation(line: 878, column: 37, scope: !4974)
!5029 = !DILocation(line: 878, column: 8, scope: !4974)
!5030 = !DILocation(line: 878, column: 6, scope: !4974)
!5031 = !DILocation(line: 879, column: 2, scope: !4974)
!5032 = !DILocation(line: 879, column: 12, scope: !4974)
!5033 = !DILocation(line: 880, column: 2, scope: !4974)
!5034 = !DILocation(line: 880, column: 12, scope: !4974)
!5035 = !DILocation(line: 881, column: 9, scope: !4974)
!5036 = !DILocation(line: 881, column: 2, scope: !4974)
!5037 = !DILocation(line: 882, column: 1, scope: !4974)
!5038 = distinct !DISubprogram(name: "wm_prop_pystring_from_context", scope: !3, file: !3, line: 758, type: !4975, scopeLine: 759, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!5039 = !DILocalVariable(name: "C", arg: 1, scope: !5038, file: !3, line: 758, type: !1414)
!5040 = !DILocation(line: 758, column: 54, scope: !5038)
!5041 = !DILocalVariable(name: "ptr", arg: 2, scope: !5038, file: !3, line: 758, type: !4318)
!5042 = !DILocation(line: 758, column: 69, scope: !5038)
!5043 = !DILocalVariable(name: "prop", arg: 3, scope: !5038, file: !3, line: 758, type: !1392)
!5044 = !DILocation(line: 758, column: 87, scope: !5038)
!5045 = !DILocalVariable(name: "index", arg: 4, scope: !5038, file: !3, line: 758, type: !1224)
!5046 = !DILocation(line: 758, column: 97, scope: !5038)
!5047 = !DILocalVariable(name: "member_id", scope: !5038, file: !3, line: 760, type: !2979)
!5048 = !DILocation(line: 760, column: 14, scope: !5038)
!5049 = !DILocalVariable(name: "prop_str", scope: !5038, file: !3, line: 762, type: !1502)
!5050 = !DILocation(line: 762, column: 8, scope: !5038)
!5051 = !DILocalVariable(name: "ret", scope: !5038, file: !3, line: 763, type: !1502)
!5052 = !DILocation(line: 763, column: 8, scope: !5038)
!5053 = !DILocation(line: 765, column: 6, scope: !5054)
!5054 = distinct !DILexicalBlock(scope: !5038, file: !3, line: 765, column: 6)
!5055 = !DILocation(line: 765, column: 11, scope: !5054)
!5056 = !DILocation(line: 765, column: 14, scope: !5054)
!5057 = !DILocation(line: 765, column: 6, scope: !5038)
!5058 = !DILocation(line: 797, column: 11, scope: !5059)
!5059 = distinct !DILexicalBlock(scope: !5054, file: !3, line: 765, column: 20)
!5060 = !DILocation(line: 797, column: 3, scope: !5059)
!5061 = !DILocalVariable(name: "ctx_member", scope: !5062, file: !3, line: 800, type: !2979)
!5062 = distinct !DILexicalBlock(scope: !5063, file: !3, line: 800, column: 5)
!5063 = distinct !DILexicalBlock(scope: !5064, file: !3, line: 799, column: 4)
!5064 = distinct !DILexicalBlock(scope: !5059, file: !3, line: 797, column: 43)
!5065 = !DILocation(line: 800, column: 5, scope: !5062)
!5066 = !DILocalVariable(name: "ctx_item_ptr", scope: !5062, file: !3, line: 800, type: !4319)
!5067 = !DILocation(line: 800, column: 5, scope: !5068)
!5068 = distinct !DILexicalBlock(scope: !5062, file: !3, line: 800, column: 5)
!5069 = !DILocation(line: 800, column: 5, scope: !5070)
!5070 = distinct !DILexicalBlock(scope: !5068, file: !3, line: 800, column: 5)
!5071 = !DILocation(line: 801, column: 5, scope: !5063)
!5072 = !DILocalVariable(name: "ctx_member", scope: !5073, file: !3, line: 805, type: !2979)
!5073 = distinct !DILexicalBlock(scope: !5074, file: !3, line: 805, column: 5)
!5074 = distinct !DILexicalBlock(scope: !5064, file: !3, line: 804, column: 4)
!5075 = !DILocation(line: 805, column: 5, scope: !5073)
!5076 = !DILocalVariable(name: "ctx_item_ptr", scope: !5073, file: !3, line: 805, type: !4319)
!5077 = !DILocation(line: 805, column: 5, scope: !5078)
!5078 = distinct !DILexicalBlock(scope: !5073, file: !3, line: 805, column: 5)
!5079 = !DILocation(line: 805, column: 5, scope: !5080)
!5080 = distinct !DILexicalBlock(scope: !5078, file: !3, line: 805, column: 5)
!5081 = !DILocation(line: 806, column: 5, scope: !5074)
!5082 = !DILocalVariable(name: "ctx_member", scope: !5083, file: !3, line: 812, type: !2979)
!5083 = distinct !DILexicalBlock(scope: !5084, file: !3, line: 812, column: 5)
!5084 = distinct !DILexicalBlock(scope: !5064, file: !3, line: 810, column: 4)
!5085 = !DILocation(line: 812, column: 5, scope: !5083)
!5086 = !DILocalVariable(name: "ctx_member_full", scope: !5083, file: !3, line: 812, type: !2979)
!5087 = !DILocalVariable(name: "ctx_item_ptr", scope: !5083, file: !3, line: 812, type: !4319)
!5088 = !DILocation(line: 812, column: 5, scope: !5089)
!5089 = distinct !DILexicalBlock(scope: !5083, file: !3, line: 812, column: 5)
!5090 = !DILocation(line: 812, column: 5, scope: !5091)
!5091 = distinct !DILexicalBlock(scope: !5089, file: !3, line: 812, column: 5)
!5092 = !DILocation(line: 813, column: 5, scope: !5084)
!5093 = !DILocalVariable(name: "ctx_member", scope: !5094, file: !3, line: 819, type: !2979)
!5094 = distinct !DILexicalBlock(scope: !5095, file: !3, line: 819, column: 5)
!5095 = distinct !DILexicalBlock(scope: !5064, file: !3, line: 817, column: 4)
!5096 = !DILocation(line: 819, column: 5, scope: !5094)
!5097 = !DILocalVariable(name: "ctx_member_full", scope: !5094, file: !3, line: 819, type: !2979)
!5098 = !DILocalVariable(name: "ctx_item_ptr", scope: !5094, file: !3, line: 819, type: !4319)
!5099 = !DILocation(line: 819, column: 5, scope: !5100)
!5100 = distinct !DILexicalBlock(scope: !5094, file: !3, line: 819, column: 5)
!5101 = !DILocation(line: 819, column: 5, scope: !5102)
!5102 = distinct !DILexicalBlock(scope: !5100, file: !3, line: 819, column: 5)
!5103 = !DILocation(line: 820, column: 5, scope: !5095)
!5104 = !DILocalVariable(name: "ctx_member", scope: !5105, file: !3, line: 826, type: !2979)
!5105 = distinct !DILexicalBlock(scope: !5106, file: !3, line: 826, column: 5)
!5106 = distinct !DILexicalBlock(scope: !5064, file: !3, line: 824, column: 4)
!5107 = !DILocation(line: 826, column: 5, scope: !5105)
!5108 = !DILocalVariable(name: "ctx_member_full", scope: !5105, file: !3, line: 826, type: !2979)
!5109 = !DILocalVariable(name: "ctx_item_ptr", scope: !5105, file: !3, line: 826, type: !4319)
!5110 = !DILocation(line: 826, column: 5, scope: !5111)
!5111 = distinct !DILexicalBlock(scope: !5105, file: !3, line: 826, column: 5)
!5112 = !DILocation(line: 826, column: 5, scope: !5113)
!5113 = distinct !DILexicalBlock(scope: !5111, file: !3, line: 826, column: 5)
!5114 = !DILocation(line: 827, column: 5, scope: !5106)
!5115 = !DILocalVariable(name: "ctx_member", scope: !5116, file: !3, line: 832, type: !2979)
!5116 = distinct !DILexicalBlock(scope: !5117, file: !3, line: 832, column: 5)
!5117 = distinct !DILexicalBlock(scope: !5064, file: !3, line: 831, column: 4)
!5118 = !DILocation(line: 832, column: 5, scope: !5116)
!5119 = !DILocalVariable(name: "ctx_item_ptr", scope: !5116, file: !3, line: 832, type: !4319)
!5120 = !DILocation(line: 832, column: 5, scope: !5121)
!5121 = distinct !DILexicalBlock(scope: !5116, file: !3, line: 832, column: 5)
!5122 = !DILocation(line: 832, column: 5, scope: !5123)
!5123 = distinct !DILexicalBlock(scope: !5121, file: !3, line: 832, column: 5)
!5124 = !DILocalVariable(name: "ctx_member", scope: !5125, file: !3, line: 834, type: !2979)
!5125 = distinct !DILexicalBlock(scope: !5117, file: !3, line: 834, column: 5)
!5126 = !DILocation(line: 834, column: 5, scope: !5125)
!5127 = !DILocation(line: 834, column: 5, scope: !5128)
!5128 = distinct !DILexicalBlock(scope: !5125, file: !3, line: 834, column: 5)
!5129 = !DILocation(line: 834, column: 5, scope: !5130)
!5130 = distinct !DILexicalBlock(scope: !5128, file: !3, line: 834, column: 5)
!5131 = !DILocalVariable(name: "ctx_member", scope: !5132, file: !3, line: 835, type: !2979)
!5132 = distinct !DILexicalBlock(scope: !5117, file: !3, line: 835, column: 5)
!5133 = !DILocation(line: 835, column: 5, scope: !5132)
!5134 = !DILocation(line: 835, column: 5, scope: !5135)
!5135 = distinct !DILexicalBlock(scope: !5132, file: !3, line: 835, column: 5)
!5136 = !DILocation(line: 835, column: 5, scope: !5137)
!5137 = distinct !DILexicalBlock(scope: !5135, file: !3, line: 835, column: 5)
!5138 = !DILocalVariable(name: "ctx_member", scope: !5139, file: !3, line: 836, type: !2979)
!5139 = distinct !DILexicalBlock(scope: !5117, file: !3, line: 836, column: 5)
!5140 = !DILocation(line: 836, column: 5, scope: !5139)
!5141 = !DILocation(line: 836, column: 5, scope: !5142)
!5142 = distinct !DILexicalBlock(scope: !5139, file: !3, line: 836, column: 5)
!5143 = !DILocation(line: 836, column: 5, scope: !5144)
!5144 = distinct !DILexicalBlock(scope: !5142, file: !3, line: 836, column: 5)
!5145 = !DILocation(line: 838, column: 5, scope: !5117)
!5146 = !DILocation(line: 842, column: 7, scope: !5147)
!5147 = distinct !DILexicalBlock(scope: !5059, file: !3, line: 842, column: 7)
!5148 = !DILocation(line: 842, column: 7, scope: !5059)
!5149 = !DILocation(line: 843, column: 43, scope: !5150)
!5150 = distinct !DILexicalBlock(scope: !5147, file: !3, line: 842, column: 18)
!5151 = !DILocation(line: 843, column: 48, scope: !5150)
!5152 = !DILocation(line: 843, column: 54, scope: !5150)
!5153 = !DILocation(line: 843, column: 15, scope: !5150)
!5154 = !DILocation(line: 843, column: 13, scope: !5150)
!5155 = !DILocation(line: 844, column: 8, scope: !5156)
!5156 = distinct !DILexicalBlock(scope: !5150, file: !3, line: 844, column: 8)
!5157 = !DILocation(line: 844, column: 8, scope: !5150)
!5158 = !DILocation(line: 845, column: 45, scope: !5159)
!5159 = distinct !DILexicalBlock(scope: !5156, file: !3, line: 844, column: 18)
!5160 = !DILocation(line: 845, column: 56, scope: !5159)
!5161 = !DILocation(line: 845, column: 11, scope: !5159)
!5162 = !DILocation(line: 845, column: 9, scope: !5159)
!5163 = !DILocation(line: 846, column: 5, scope: !5159)
!5164 = !DILocation(line: 846, column: 15, scope: !5159)
!5165 = !DILocation(line: 847, column: 4, scope: !5159)
!5166 = !DILocation(line: 848, column: 3, scope: !5150)
!5167 = !DILocation(line: 851, column: 2, scope: !5059)
!5168 = !DILocation(line: 853, column: 9, scope: !5038)
!5169 = !DILocation(line: 853, column: 2, scope: !5038)
!5170 = distinct !DISubprogram(name: "WM_operator_properties_create", scope: !3, file: !3, line: 889, type: !5171, scopeLine: 890, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!5171 = !DISubroutineType(types: !5172)
!5172 = !{null, !4318, !2979}
!5173 = !DILocalVariable(name: "ptr", arg: 1, scope: !5170, file: !3, line: 889, type: !4318)
!5174 = !DILocation(line: 889, column: 48, scope: !5170)
!5175 = !DILocalVariable(name: "opstring", arg: 2, scope: !5170, file: !3, line: 889, type: !2979)
!5176 = !DILocation(line: 889, column: 65, scope: !5170)
!5177 = !DILocalVariable(name: "ot", scope: !5170, file: !3, line: 891, type: !3228)
!5178 = !DILocation(line: 891, column: 18, scope: !5170)
!5179 = !DILocation(line: 891, column: 44, scope: !5170)
!5180 = !DILocation(line: 891, column: 23, scope: !5170)
!5181 = !DILocation(line: 893, column: 6, scope: !5182)
!5182 = distinct !DILexicalBlock(scope: !5170, file: !3, line: 893, column: 6)
!5183 = !DILocation(line: 893, column: 6, scope: !5170)
!5184 = !DILocation(line: 894, column: 37, scope: !5182)
!5185 = !DILocation(line: 894, column: 42, scope: !5182)
!5186 = !DILocation(line: 894, column: 3, scope: !5182)
!5187 = !DILocation(line: 896, column: 59, scope: !5182)
!5188 = !DILocation(line: 896, column: 3, scope: !5182)
!5189 = !DILocation(line: 897, column: 1, scope: !5170)
!5190 = distinct !DISubprogram(name: "WM_operator_properties_default", scope: !3, file: !3, line: 953, type: !5191, scopeLine: 954, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!5191 = !DISubroutineType(types: !5192)
!5192 = !{!2328, !4318, !4387}
!5193 = !DILocalVariable(name: "ptr", arg: 1, scope: !5190, file: !3, line: 953, type: !4318)
!5194 = !DILocation(line: 953, column: 49, scope: !5190)
!5195 = !DILocalVariable(name: "do_update", arg: 2, scope: !5190, file: !3, line: 953, type: !4387)
!5196 = !DILocation(line: 953, column: 65, scope: !5190)
!5197 = !DILocalVariable(name: "changed", scope: !5190, file: !3, line: 955, type: !2328)
!5198 = !DILocation(line: 955, column: 7, scope: !5190)
!5199 = !DILocalVariable(name: "rna_macro_iter", scope: !5200, file: !3, line: 956, type: !4394)
!5200 = distinct !DILexicalBlock(scope: !5190, file: !3, line: 956, column: 2)
!5201 = !DILocation(line: 956, column: 2, scope: !5200)
!5202 = !DILocation(line: 956, column: 2, scope: !5203)
!5203 = distinct !DILexicalBlock(scope: !5200, file: !3, line: 956, column: 2)
!5204 = !DILocation(line: 956, column: 2, scope: !5205)
!5205 = distinct !DILexicalBlock(scope: !5203, file: !3, line: 956, column: 2)
!5206 = !DILocalVariable(name: "prop", scope: !5207, file: !3, line: 956, type: !1392)
!5207 = distinct !DILexicalBlock(scope: !5205, file: !3, line: 956, column: 2)
!5208 = !DILocation(line: 956, column: 2, scope: !5207)
!5209 = !DILocation(line: 958, column: 29, scope: !5210)
!5210 = distinct !DILexicalBlock(scope: !5207, file: !3, line: 957, column: 2)
!5211 = !DILocation(line: 958, column: 11, scope: !5210)
!5212 = !DILocation(line: 958, column: 3, scope: !5210)
!5213 = !DILocalVariable(name: "ptype", scope: !5214, file: !3, line: 961, type: !3075)
!5214 = distinct !DILexicalBlock(scope: !5215, file: !3, line: 960, column: 4)
!5215 = distinct !DILexicalBlock(scope: !5210, file: !3, line: 958, column: 36)
!5216 = !DILocation(line: 961, column: 16, scope: !5214)
!5217 = !DILocation(line: 961, column: 50, scope: !5214)
!5218 = !DILocation(line: 961, column: 55, scope: !5214)
!5219 = !DILocation(line: 961, column: 24, scope: !5214)
!5220 = !DILocation(line: 962, column: 9, scope: !5221)
!5221 = distinct !DILexicalBlock(scope: !5214, file: !3, line: 962, column: 9)
!5222 = !DILocation(line: 962, column: 15, scope: !5221)
!5223 = !DILocation(line: 962, column: 9, scope: !5214)
!5224 = !DILocalVariable(name: "opptr", scope: !5225, file: !3, line: 963, type: !4319)
!5225 = distinct !DILexicalBlock(scope: !5221, file: !3, line: 962, column: 31)
!5226 = !DILocation(line: 963, column: 17, scope: !5225)
!5227 = !DILocation(line: 963, column: 50, scope: !5225)
!5228 = !DILocation(line: 963, column: 55, scope: !5225)
!5229 = !DILocation(line: 963, column: 25, scope: !5225)
!5230 = !DILocation(line: 964, column: 56, scope: !5225)
!5231 = !DILocation(line: 964, column: 17, scope: !5225)
!5232 = !DILocation(line: 964, column: 14, scope: !5225)
!5233 = !DILocation(line: 965, column: 5, scope: !5225)
!5234 = !DILocation(line: 966, column: 5, scope: !5214)
!5235 = !DILocation(line: 969, column: 10, scope: !5236)
!5236 = distinct !DILexicalBlock(scope: !5215, file: !3, line: 969, column: 9)
!5237 = !DILocation(line: 969, column: 20, scope: !5236)
!5238 = !DILocation(line: 969, column: 30, scope: !5236)
!5239 = !DILocation(line: 969, column: 54, scope: !5236)
!5240 = !DILocation(line: 969, column: 59, scope: !5236)
!5241 = !DILocation(line: 969, column: 34, scope: !5236)
!5242 = !DILocation(line: 969, column: 65, scope: !5236)
!5243 = !DILocation(line: 969, column: 9, scope: !5215)
!5244 = !DILocation(line: 970, column: 29, scope: !5245)
!5245 = distinct !DILexicalBlock(scope: !5246, file: !3, line: 970, column: 10)
!5246 = distinct !DILexicalBlock(scope: !5236, file: !3, line: 969, column: 76)
!5247 = !DILocation(line: 970, column: 34, scope: !5245)
!5248 = !DILocation(line: 970, column: 10, scope: !5245)
!5249 = !DILocation(line: 970, column: 10, scope: !5246)
!5250 = !DILocation(line: 971, column: 15, scope: !5251)
!5251 = distinct !DILexicalBlock(scope: !5245, file: !3, line: 970, column: 45)
!5252 = !DILocation(line: 972, column: 6, scope: !5251)
!5253 = !DILocation(line: 973, column: 5, scope: !5246)
!5254 = !DILocation(line: 974, column: 5, scope: !5215)
!5255 = !DILocation(line: 977, column: 2, scope: !5207)
!5256 = distinct !{!5256, !5202, !5257}
!5257 = !DILocation(line: 977, column: 2, scope: !5203)
!5258 = !DILocation(line: 977, column: 2, scope: !5200)
!5259 = !DILocation(line: 979, column: 9, scope: !5190)
!5260 = !DILocation(line: 979, column: 2, scope: !5190)
!5261 = distinct !DISubprogram(name: "WM_operator_properties_reset", scope: !3, file: !3, line: 983, type: !5262, scopeLine: 984, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!5262 = !DISubroutineType(types: !5263)
!5263 = !{null, !2965}
!5264 = !DILocalVariable(name: "op", arg: 1, scope: !5261, file: !3, line: 983, type: !2965)
!5265 = !DILocation(line: 983, column: 47, scope: !5261)
!5266 = !DILocation(line: 985, column: 6, scope: !5267)
!5267 = distinct !DILexicalBlock(scope: !5261, file: !3, line: 985, column: 6)
!5268 = !DILocation(line: 985, column: 10, scope: !5267)
!5269 = !DILocation(line: 985, column: 15, scope: !5267)
!5270 = !DILocation(line: 985, column: 6, scope: !5261)
!5271 = !DILocalVariable(name: "iterprop", scope: !5272, file: !3, line: 986, type: !1392)
!5272 = distinct !DILexicalBlock(scope: !5267, file: !3, line: 985, column: 21)
!5273 = !DILocation(line: 986, column: 16, scope: !5272)
!5274 = !DILocation(line: 987, column: 43, scope: !5272)
!5275 = !DILocation(line: 987, column: 47, scope: !5272)
!5276 = !DILocation(line: 987, column: 53, scope: !5272)
!5277 = !DILocation(line: 987, column: 14, scope: !5272)
!5278 = !DILocation(line: 987, column: 12, scope: !5272)
!5279 = !DILocalVariable(name: "rna_macro_iter", scope: !5280, file: !3, line: 989, type: !4394)
!5280 = distinct !DILexicalBlock(scope: !5272, file: !3, line: 989, column: 3)
!5281 = !DILocation(line: 989, column: 3, scope: !5280)
!5282 = !DILocation(line: 989, column: 3, scope: !5283)
!5283 = distinct !DILexicalBlock(scope: !5280, file: !3, line: 989, column: 3)
!5284 = !DILocation(line: 989, column: 3, scope: !5285)
!5285 = distinct !DILexicalBlock(scope: !5283, file: !3, line: 989, column: 3)
!5286 = !DILocalVariable(name: "itemptr", scope: !5287, file: !3, line: 989, type: !4319)
!5287 = distinct !DILexicalBlock(scope: !5285, file: !3, line: 989, column: 3)
!5288 = !DILocation(line: 989, column: 3, scope: !5287)
!5289 = !DILocalVariable(name: "prop", scope: !5290, file: !3, line: 991, type: !1392)
!5290 = distinct !DILexicalBlock(scope: !5287, file: !3, line: 990, column: 3)
!5291 = !DILocation(line: 991, column: 17, scope: !5290)
!5292 = !DILocation(line: 991, column: 32, scope: !5290)
!5293 = !DILocation(line: 991, column: 24, scope: !5290)
!5294 = !DILocation(line: 993, column: 27, scope: !5295)
!5295 = distinct !DILexicalBlock(scope: !5290, file: !3, line: 993, column: 8)
!5296 = !DILocation(line: 993, column: 9, scope: !5295)
!5297 = !DILocation(line: 993, column: 33, scope: !5295)
!5298 = !DILocation(line: 993, column: 51, scope: !5295)
!5299 = !DILocation(line: 993, column: 8, scope: !5290)
!5300 = !DILocalVariable(name: "identifier", scope: !5301, file: !3, line: 994, type: !2979)
!5301 = distinct !DILexicalBlock(scope: !5295, file: !3, line: 993, column: 57)
!5302 = !DILocation(line: 994, column: 17, scope: !5301)
!5303 = !DILocation(line: 994, column: 54, scope: !5301)
!5304 = !DILocation(line: 994, column: 30, scope: !5301)
!5305 = !DILocation(line: 995, column: 30, scope: !5301)
!5306 = !DILocation(line: 995, column: 34, scope: !5301)
!5307 = !DILocation(line: 995, column: 39, scope: !5301)
!5308 = !DILocation(line: 995, column: 5, scope: !5301)
!5309 = !DILocation(line: 996, column: 4, scope: !5301)
!5310 = !DILocation(line: 998, column: 3, scope: !5287)
!5311 = distinct !{!5311, !5282, !5312}
!5312 = !DILocation(line: 998, column: 3, scope: !5283)
!5313 = !DILocation(line: 998, column: 3, scope: !5280)
!5314 = !DILocation(line: 999, column: 2, scope: !5272)
!5315 = !DILocation(line: 1000, column: 1, scope: !5261)
!5316 = distinct !DISubprogram(name: "WM_operator_properties_clear", scope: !3, file: !3, line: 1002, type: !4845, scopeLine: 1003, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!5317 = !DILocalVariable(name: "ptr", arg: 1, scope: !5316, file: !3, line: 1002, type: !4318)
!5318 = !DILocation(line: 1002, column: 47, scope: !5316)
!5319 = !DILocalVariable(name: "properties", scope: !5316, file: !3, line: 1004, type: !1465)
!5320 = !DILocation(line: 1004, column: 14, scope: !5316)
!5321 = !DILocation(line: 1004, column: 27, scope: !5316)
!5322 = !DILocation(line: 1004, column: 32, scope: !5316)
!5323 = !DILocation(line: 1006, column: 6, scope: !5324)
!5324 = distinct !DILexicalBlock(scope: !5316, file: !3, line: 1006, column: 6)
!5325 = !DILocation(line: 1006, column: 6, scope: !5316)
!5326 = !DILocation(line: 1007, column: 21, scope: !5327)
!5327 = distinct !DILexicalBlock(scope: !5324, file: !3, line: 1006, column: 18)
!5328 = !DILocation(line: 1007, column: 3, scope: !5327)
!5329 = !DILocation(line: 1008, column: 2, scope: !5327)
!5330 = !DILocation(line: 1009, column: 1, scope: !5316)
!5331 = distinct !DISubprogram(name: "WM_operator_view3d_unit_defaults", scope: !3, file: !3, line: 1024, type: !3040, scopeLine: 1025, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!5332 = !DILocalVariable(name: "C", arg: 1, scope: !5331, file: !3, line: 1024, type: !1408)
!5333 = !DILocation(line: 1024, column: 56, scope: !5331)
!5334 = !DILocalVariable(name: "op", arg: 2, scope: !5331, file: !3, line: 1024, type: !2970)
!5335 = !DILocation(line: 1024, column: 78, scope: !5331)
!5336 = !DILocation(line: 1026, column: 6, scope: !5337)
!5337 = distinct !DILexicalBlock(scope: !5331, file: !3, line: 1026, column: 6)
!5338 = !DILocation(line: 1026, column: 10, scope: !5337)
!5339 = !DILocation(line: 1026, column: 15, scope: !5337)
!5340 = !DILocation(line: 1026, column: 6, scope: !5331)
!5341 = !DILocalVariable(name: "scene", scope: !5342, file: !3, line: 1027, type: !2963)
!5342 = distinct !DILexicalBlock(scope: !5337, file: !3, line: 1026, column: 31)
!5343 = !DILocation(line: 1027, column: 10, scope: !5342)
!5344 = !DILocation(line: 1027, column: 33, scope: !5342)
!5345 = !DILocation(line: 1027, column: 18, scope: !5342)
!5346 = !DILocalVariable(name: "v3d", scope: !5342, file: !3, line: 1028, type: !5347)
!5347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5348, size: 64)
!5348 = !DIDerivedType(tag: DW_TAG_typedef, name: "View3D", file: !5349, line: 221, baseType: !5350)
!5349 = !DIFile(filename: "blender/source/blender/makesdna/DNA_view3d_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "View3D", file: !5349, line: 151, size: 3008, elements: !5351)
!5351 = !{!5352, !5353, !5354, !5355, !5356, !5357, !5358, !5359, !5360, !5361, !5362, !5363, !5364, !5365, !5366, !5367, !5368, !5369, !5370, !5371, !5394, !5396, !5397, !5398, !5399, !5400, !5401, !5402, !5403, !5404, !5405, !5406, !5407, !5408, !5409, !5410, !5411, !5412, !5413, !5414, !5415, !5416, !5417, !5418, !5419, !5420, !5421, !5422, !5423, !5424, !5425, !5426, !5427, !5428}
!5352 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5350, file: !5349, line: 152, baseType: !3426, size: 64)
!5353 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5350, file: !5349, line: 152, baseType: !3426, size: 64, offset: 64)
!5354 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !5350, file: !5349, line: 153, baseType: !1486, size: 128, offset: 128)
!5355 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !5350, file: !5349, line: 154, baseType: !1224, size: 32, offset: 256)
!5356 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !5350, file: !5349, line: 155, baseType: !1537, size: 32, offset: 288)
!5357 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !5350, file: !5349, line: 156, baseType: !3435, size: 128, offset: 320)
!5358 = !DIDerivedType(tag: DW_TAG_member, name: "viewquat", scope: !5350, file: !5349, line: 158, baseType: !1644, size: 128, offset: 448)
!5359 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !5350, file: !5349, line: 159, baseType: !1537, size: 32, offset: 576)
!5360 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_size", scope: !5350, file: !5349, line: 161, baseType: !1537, size: 32, offset: 608)
!5361 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_drawtype", scope: !5350, file: !5349, line: 162, baseType: !1447, size: 8, offset: 640)
!5362 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5350, file: !5349, line: 163, baseType: !2297, size: 24, offset: 648)
!5363 = !DIDerivedType(tag: DW_TAG_member, name: "lay_prev", scope: !5350, file: !5349, line: 165, baseType: !7, size: 32, offset: 672)
!5364 = !DIDerivedType(tag: DW_TAG_member, name: "lay_used", scope: !5350, file: !5349, line: 166, baseType: !7, size: 32, offset: 704)
!5365 = !DIDerivedType(tag: DW_TAG_member, name: "persp", scope: !5350, file: !5349, line: 168, baseType: !1460, size: 16, offset: 736)
!5366 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !5350, file: !5349, line: 169, baseType: !1460, size: 16, offset: 752)
!5367 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !5350, file: !5349, line: 171, baseType: !1523, size: 64, offset: 768)
!5368 = !DIDerivedType(tag: DW_TAG_member, name: "ob_centre", scope: !5350, file: !5349, line: 171, baseType: !1523, size: 64, offset: 832)
!5369 = !DIDerivedType(tag: DW_TAG_member, name: "render_border", scope: !5350, file: !5349, line: 172, baseType: !1840, size: 128, offset: 896)
!5370 = !DIDerivedType(tag: DW_TAG_member, name: "bgpicbase", scope: !5350, file: !5349, line: 174, baseType: !1488, size: 128, offset: 1024)
!5371 = !DIDerivedType(tag: DW_TAG_member, name: "bgpic", scope: !5350, file: !5349, line: 175, baseType: !5372, size: 64, offset: 1152)
!5372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5373, size: 64)
!5373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BGpic", file: !5349, line: 70, size: 832, elements: !5374)
!5374 = !{!5375, !5376, !5377, !5378, !5379, !5380, !5386, !5387, !5388, !5389, !5390, !5391, !5392, !5393}
!5375 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5373, file: !5349, line: 71, baseType: !5372, size: 64)
!5376 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5373, file: !5349, line: 71, baseType: !5372, size: 64, offset: 64)
!5377 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !5373, file: !5349, line: 73, baseType: !2162, size: 64, offset: 128)
!5378 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !5373, file: !5349, line: 74, baseType: !1768, size: 320, offset: 192)
!5379 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !5373, file: !5349, line: 75, baseType: !1994, size: 64, offset: 512)
!5380 = !DIDerivedType(tag: DW_TAG_member, name: "cuser", scope: !5373, file: !5349, line: 76, baseType: !5381, size: 64, offset: 576)
!5381 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipUser", file: !1996, line: 50, size: 64, elements: !5382)
!5382 = !{!5383, !5384, !5385}
!5383 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !5381, file: !1996, line: 51, baseType: !1224, size: 32)
!5384 = !DIDerivedType(tag: DW_TAG_member, name: "render_size", scope: !5381, file: !1996, line: 52, baseType: !1460, size: 16, offset: 32)
!5385 = !DIDerivedType(tag: DW_TAG_member, name: "render_flag", scope: !5381, file: !1996, line: 52, baseType: !1460, size: 16, offset: 48)
!5386 = !DIDerivedType(tag: DW_TAG_member, name: "xof", scope: !5373, file: !5349, line: 77, baseType: !1537, size: 32, offset: 640)
!5387 = !DIDerivedType(tag: DW_TAG_member, name: "yof", scope: !5373, file: !5349, line: 77, baseType: !1537, size: 32, offset: 672)
!5388 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5373, file: !5349, line: 77, baseType: !1537, size: 32, offset: 704)
!5389 = !DIDerivedType(tag: DW_TAG_member, name: "blend", scope: !5373, file: !5349, line: 77, baseType: !1537, size: 32, offset: 736)
!5390 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !5373, file: !5349, line: 78, baseType: !1460, size: 16, offset: 768)
!5391 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5373, file: !5349, line: 79, baseType: !1460, size: 16, offset: 784)
!5392 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !5373, file: !5349, line: 80, baseType: !1460, size: 16, offset: 800)
!5393 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5373, file: !5349, line: 80, baseType: !1460, size: 16, offset: 816)
!5394 = !DIDerivedType(tag: DW_TAG_member, name: "localvd", scope: !5350, file: !5349, line: 177, baseType: !5395, size: 64, offset: 1216)
!5395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5350, size: 64)
!5396 = !DIDerivedType(tag: DW_TAG_member, name: "ob_centre_bone", scope: !5350, file: !5349, line: 179, baseType: !1476, size: 512, offset: 1280)
!5397 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !5350, file: !5349, line: 181, baseType: !7, size: 32, offset: 1792)
!5398 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !5350, file: !5349, line: 182, baseType: !1224, size: 32, offset: 1824)
!5399 = !DIDerivedType(tag: DW_TAG_member, name: "drawtype", scope: !5350, file: !5349, line: 187, baseType: !1460, size: 16, offset: 1856)
!5400 = !DIDerivedType(tag: DW_TAG_member, name: "ob_centre_cursor", scope: !5350, file: !5349, line: 188, baseType: !1460, size: 16, offset: 1872)
!5401 = !DIDerivedType(tag: DW_TAG_member, name: "scenelock", scope: !5350, file: !5349, line: 189, baseType: !1460, size: 16, offset: 1888)
!5402 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !5350, file: !5349, line: 189, baseType: !1460, size: 16, offset: 1904)
!5403 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5350, file: !5349, line: 190, baseType: !1460, size: 16, offset: 1920)
!5404 = !DIDerivedType(tag: DW_TAG_member, name: "flag2", scope: !5350, file: !5349, line: 190, baseType: !1460, size: 16, offset: 1936)
!5405 = !DIDerivedType(tag: DW_TAG_member, name: "lens", scope: !5350, file: !5349, line: 192, baseType: !1537, size: 32, offset: 1952)
!5406 = !DIDerivedType(tag: DW_TAG_member, name: "grid", scope: !5350, file: !5349, line: 192, baseType: !1537, size: 32, offset: 1984)
!5407 = !DIDerivedType(tag: DW_TAG_member, name: "near", scope: !5350, file: !5349, line: 193, baseType: !1537, size: 32, offset: 2016)
!5408 = !DIDerivedType(tag: DW_TAG_member, name: "far", scope: !5350, file: !5349, line: 193, baseType: !1537, size: 32, offset: 2048)
!5409 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !5350, file: !5349, line: 194, baseType: !1572, size: 96, offset: 2080)
!5410 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !5350, file: !5349, line: 195, baseType: !1572, size: 96, offset: 2176)
!5411 = !DIDerivedType(tag: DW_TAG_member, name: "matcap_icon", scope: !5350, file: !5349, line: 197, baseType: !1460, size: 16, offset: 2272)
!5412 = !DIDerivedType(tag: DW_TAG_member, name: "gridlines", scope: !5350, file: !5349, line: 199, baseType: !1460, size: 16, offset: 2288)
!5413 = !DIDerivedType(tag: DW_TAG_member, name: "gridsubdiv", scope: !5350, file: !5349, line: 200, baseType: !1460, size: 16, offset: 2304)
!5414 = !DIDerivedType(tag: DW_TAG_member, name: "gridflag", scope: !5350, file: !5349, line: 201, baseType: !1447, size: 8, offset: 2320)
!5415 = !DIDerivedType(tag: DW_TAG_member, name: "twtype", scope: !5350, file: !5349, line: 204, baseType: !1447, size: 8, offset: 2328)
!5416 = !DIDerivedType(tag: DW_TAG_member, name: "twmode", scope: !5350, file: !5349, line: 204, baseType: !1447, size: 8, offset: 2336)
!5417 = !DIDerivedType(tag: DW_TAG_member, name: "twflag", scope: !5350, file: !5349, line: 204, baseType: !1447, size: 8, offset: 2344)
!5418 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !5350, file: !5349, line: 204, baseType: !2509, size: 16, offset: 2352)
!5419 = !DIDerivedType(tag: DW_TAG_member, name: "afterdraw_transp", scope: !5350, file: !5349, line: 207, baseType: !1488, size: 128, offset: 2368)
!5420 = !DIDerivedType(tag: DW_TAG_member, name: "afterdraw_xray", scope: !5350, file: !5349, line: 208, baseType: !1488, size: 128, offset: 2496)
!5421 = !DIDerivedType(tag: DW_TAG_member, name: "afterdraw_xraytransp", scope: !5350, file: !5349, line: 209, baseType: !1488, size: 128, offset: 2624)
!5422 = !DIDerivedType(tag: DW_TAG_member, name: "zbuf", scope: !5350, file: !5349, line: 212, baseType: !1447, size: 8, offset: 2752)
!5423 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !5350, file: !5349, line: 212, baseType: !1447, size: 8, offset: 2760)
!5424 = !DIDerivedType(tag: DW_TAG_member, name: "xray", scope: !5350, file: !5349, line: 212, baseType: !1447, size: 8, offset: 2768)
!5425 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !5350, file: !5349, line: 213, baseType: !2375, size: 40, offset: 2776)
!5426 = !DIDerivedType(tag: DW_TAG_member, name: "properties_storage", scope: !5350, file: !5349, line: 215, baseType: !1391, size: 64, offset: 2816)
!5427 = !DIDerivedType(tag: DW_TAG_member, name: "defmaterial", scope: !5350, file: !5349, line: 216, baseType: !1630, size: 64, offset: 2880)
!5428 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !5350, file: !5349, line: 219, baseType: !1603, size: 64, offset: 2944)
!5429 = !DILocation(line: 1028, column: 11, scope: !5342)
!5430 = !DILocation(line: 1028, column: 31, scope: !5342)
!5431 = !DILocation(line: 1028, column: 17, scope: !5342)
!5432 = !DILocalVariable(name: "dia", scope: !5342, file: !3, line: 1030, type: !5433)
!5433 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1537)
!5434 = !DILocation(line: 1030, column: 15, scope: !5342)
!5435 = !DILocation(line: 1030, column: 21, scope: !5342)
!5436 = !DILocation(line: 1030, column: 48, scope: !5342)
!5437 = !DILocation(line: 1030, column: 55, scope: !5342)
!5438 = !DILocation(line: 1030, column: 27, scope: !5342)
!5439 = !DILocation(line: 1030, column: 88, scope: !5342)
!5440 = !DILocation(line: 1030, column: 68, scope: !5342)
!5441 = !DILocalVariable(name: "rna_macro_iter", scope: !5442, file: !3, line: 1034, type: !4394)
!5442 = distinct !DILexicalBlock(scope: !5342, file: !3, line: 1034, column: 3)
!5443 = !DILocation(line: 1034, column: 3, scope: !5442)
!5444 = !DILocation(line: 1034, column: 3, scope: !5445)
!5445 = distinct !DILexicalBlock(scope: !5442, file: !3, line: 1034, column: 3)
!5446 = !DILocation(line: 1034, column: 3, scope: !5447)
!5447 = distinct !DILexicalBlock(scope: !5445, file: !3, line: 1034, column: 3)
!5448 = !DILocalVariable(name: "prop", scope: !5449, file: !3, line: 1034, type: !1392)
!5449 = distinct !DILexicalBlock(scope: !5447, file: !3, line: 1034, column: 3)
!5450 = !DILocation(line: 1034, column: 3, scope: !5449)
!5451 = !DILocation(line: 1036, column: 26, scope: !5452)
!5452 = distinct !DILexicalBlock(scope: !5453, file: !3, line: 1036, column: 8)
!5453 = distinct !DILexicalBlock(scope: !5449, file: !3, line: 1035, column: 3)
!5454 = !DILocation(line: 1036, column: 8, scope: !5452)
!5455 = !DILocation(line: 1036, column: 32, scope: !5452)
!5456 = !DILocation(line: 1036, column: 8, scope: !5453)
!5457 = !DILocalVariable(name: "pstype", scope: !5458, file: !3, line: 1037, type: !5459)
!5458 = distinct !DILexicalBlock(scope: !5452, file: !3, line: 1036, column: 47)
!5459 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropertySubType", file: !6, line: 147, baseType: !54)
!5460 = !DILocation(line: 1037, column: 21, scope: !5458)
!5461 = !DILocation(line: 1037, column: 51, scope: !5458)
!5462 = !DILocation(line: 1037, column: 30, scope: !5458)
!5463 = !DILocation(line: 1038, column: 9, scope: !5464)
!5464 = distinct !DILexicalBlock(scope: !5458, file: !3, line: 1038, column: 9)
!5465 = !DILocation(line: 1038, column: 16, scope: !5464)
!5466 = !DILocation(line: 1038, column: 9, scope: !5458)
!5467 = !DILocation(line: 1042, column: 34, scope: !5468)
!5468 = distinct !DILexicalBlock(scope: !5469, file: !3, line: 1042, column: 10)
!5469 = distinct !DILexicalBlock(scope: !5464, file: !3, line: 1038, column: 34)
!5470 = !DILocation(line: 1042, column: 38, scope: !5468)
!5471 = !DILocation(line: 1042, column: 43, scope: !5468)
!5472 = !DILocation(line: 1042, column: 11, scope: !5468)
!5473 = !DILocation(line: 1042, column: 10, scope: !5469)
!5474 = !DILocalVariable(name: "value", scope: !5475, file: !3, line: 1043, type: !5433)
!5475 = distinct !DILexicalBlock(scope: !5468, file: !3, line: 1042, column: 57)
!5476 = !DILocation(line: 1043, column: 19, scope: !5475)
!5477 = !DILocation(line: 1043, column: 58, scope: !5475)
!5478 = !DILocation(line: 1043, column: 62, scope: !5475)
!5479 = !DILocation(line: 1043, column: 67, scope: !5475)
!5480 = !DILocation(line: 1043, column: 27, scope: !5475)
!5481 = !DILocation(line: 1043, column: 75, scope: !5475)
!5482 = !DILocation(line: 1043, column: 73, scope: !5475)
!5483 = !DILocation(line: 1044, column: 30, scope: !5475)
!5484 = !DILocation(line: 1044, column: 34, scope: !5475)
!5485 = !DILocation(line: 1044, column: 39, scope: !5475)
!5486 = !DILocation(line: 1044, column: 45, scope: !5475)
!5487 = !DILocation(line: 1044, column: 7, scope: !5475)
!5488 = !DILocation(line: 1045, column: 6, scope: !5475)
!5489 = !DILocation(line: 1046, column: 5, scope: !5469)
!5490 = !DILocation(line: 1047, column: 4, scope: !5458)
!5491 = !DILocation(line: 1049, column: 3, scope: !5449)
!5492 = distinct !{!5492, !5444, !5493}
!5493 = !DILocation(line: 1049, column: 3, scope: !5445)
!5494 = !DILocation(line: 1049, column: 3, scope: !5442)
!5495 = !DILocation(line: 1050, column: 2, scope: !5342)
!5496 = !DILocation(line: 1051, column: 1, scope: !5331)
!5497 = distinct !DISubprogram(name: "WM_operator_smooth_viewtx_get", scope: !3, file: !3, line: 1053, type: !5498, scopeLine: 1054, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!5498 = !DISubroutineType(types: !5499)
!5499 = !{!1224, !5500}
!5500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5501, size: 64)
!5501 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2966)
!5502 = !DILocalVariable(name: "op", arg: 1, scope: !5497, file: !3, line: 1053, type: !5500)
!5503 = !DILocation(line: 1053, column: 53, scope: !5497)
!5504 = !DILocation(line: 1055, column: 10, scope: !5497)
!5505 = !DILocation(line: 1055, column: 14, scope: !5497)
!5506 = !DILocation(line: 1055, column: 19, scope: !5497)
!5507 = !DILocation(line: 1055, column: 9, scope: !5497)
!5508 = !DILocation(line: 1055, column: 39, scope: !5497)
!5509 = !DILocation(line: 1055, column: 37, scope: !5497)
!5510 = !DILocation(line: 1055, column: 2, scope: !5497)
!5511 = distinct !DISubprogram(name: "WM_menu_invoke", scope: !3, file: !3, line: 1059, type: !3944, scopeLine: 1060, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!5512 = !DILocalVariable(name: "C", arg: 1, scope: !5511, file: !3, line: 1059, type: !1414)
!5513 = !DILocation(line: 1059, column: 30, scope: !5511)
!5514 = !DILocalVariable(name: "op", arg: 2, scope: !5511, file: !3, line: 1059, type: !2965)
!5515 = !DILocation(line: 1059, column: 45, scope: !5511)
!5516 = !DILocalVariable(name: "UNUSED_event", arg: 3, scope: !5511, file: !3, line: 1059, type: !3946)
!5517 = !DILocation(line: 1059, column: 64, scope: !5511)
!5518 = !DILocalVariable(name: "prop", scope: !5511, file: !3, line: 1061, type: !1392)
!5519 = !DILocation(line: 1061, column: 15, scope: !5511)
!5520 = !DILocation(line: 1061, column: 22, scope: !5511)
!5521 = !DILocation(line: 1061, column: 26, scope: !5511)
!5522 = !DILocation(line: 1061, column: 32, scope: !5511)
!5523 = !DILocalVariable(name: "pup", scope: !5511, file: !3, line: 1062, type: !5524)
!5524 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5525, size: 64)
!5525 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiPopupMenu", file: !1255, line: 355, baseType: !5526)
!5526 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiPopupMenu", file: !1255, line: 355, flags: DIFlagFwdDecl)
!5527 = !DILocation(line: 1062, column: 15, scope: !5511)
!5528 = !DILocalVariable(name: "layout", scope: !5511, file: !3, line: 1063, type: !5529)
!5529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5530, size: 64)
!5530 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiLayout", file: !1255, line: 85, baseType: !3213)
!5531 = !DILocation(line: 1063, column: 12, scope: !5511)
!5532 = !DILocation(line: 1065, column: 6, scope: !5533)
!5533 = distinct !DILexicalBlock(scope: !5511, file: !3, line: 1065, column: 6)
!5534 = !DILocation(line: 1065, column: 11, scope: !5533)
!5535 = !DILocation(line: 1065, column: 6, scope: !5511)
!5536 = !DILocation(line: 1066, column: 57, scope: !5537)
!5537 = distinct !DILexicalBlock(scope: !5533, file: !3, line: 1065, column: 20)
!5538 = !DILocation(line: 1066, column: 61, scope: !5537)
!5539 = !DILocation(line: 1066, column: 67, scope: !5537)
!5540 = !DILocation(line: 1066, column: 3, scope: !5537)
!5541 = !DILocation(line: 1067, column: 2, scope: !5537)
!5542 = !DILocation(line: 1068, column: 29, scope: !5543)
!5543 = distinct !DILexicalBlock(scope: !5533, file: !3, line: 1068, column: 11)
!5544 = !DILocation(line: 1068, column: 11, scope: !5543)
!5545 = !DILocation(line: 1068, column: 35, scope: !5543)
!5546 = !DILocation(line: 1068, column: 11, scope: !5533)
!5547 = !DILocation(line: 1070, column: 20, scope: !5548)
!5548 = distinct !DILexicalBlock(scope: !5543, file: !3, line: 1068, column: 49)
!5549 = !DILocation(line: 1070, column: 24, scope: !5548)
!5550 = !DILocation(line: 1070, column: 30, scope: !5548)
!5551 = !DILocation(line: 1070, column: 62, scope: !5548)
!5552 = !DILocation(line: 1070, column: 38, scope: !5548)
!5553 = !DILocation(line: 1069, column: 3, scope: !5548)
!5554 = !DILocation(line: 1071, column: 2, scope: !5548)
!5555 = !DILocation(line: 1072, column: 31, scope: !5556)
!5556 = distinct !DILexicalBlock(scope: !5543, file: !3, line: 1072, column: 11)
!5557 = !DILocation(line: 1072, column: 35, scope: !5556)
!5558 = !DILocation(line: 1072, column: 40, scope: !5556)
!5559 = !DILocation(line: 1072, column: 11, scope: !5556)
!5560 = !DILocation(line: 1072, column: 11, scope: !5543)
!5561 = !DILocalVariable(name: "retval", scope: !5562, file: !3, line: 1073, type: !1419)
!5562 = distinct !DILexicalBlock(scope: !5556, file: !3, line: 1072, column: 47)
!5563 = !DILocation(line: 1073, column: 13, scope: !5562)
!5564 = !DILocation(line: 1073, column: 22, scope: !5562)
!5565 = !DILocation(line: 1073, column: 26, scope: !5562)
!5566 = !DILocation(line: 1073, column: 32, scope: !5562)
!5567 = !DILocation(line: 1073, column: 37, scope: !5562)
!5568 = !DILocation(line: 1073, column: 40, scope: !5562)
!5569 = !DILocation(line: 1074, column: 3, scope: !5562)
!5570 = !DILocation(line: 1075, column: 10, scope: !5562)
!5571 = !DILocation(line: 1075, column: 3, scope: !5562)
!5572 = !DILocation(line: 1078, column: 24, scope: !5573)
!5573 = distinct !DILexicalBlock(scope: !5556, file: !3, line: 1077, column: 7)
!5574 = !DILocation(line: 1078, column: 46, scope: !5573)
!5575 = !DILocation(line: 1078, column: 50, scope: !5573)
!5576 = !DILocation(line: 1078, column: 56, scope: !5573)
!5577 = !DILocation(line: 1078, column: 27, scope: !5573)
!5578 = !DILocation(line: 1078, column: 9, scope: !5573)
!5579 = !DILocation(line: 1078, column: 7, scope: !5573)
!5580 = !DILocation(line: 1079, column: 28, scope: !5573)
!5581 = !DILocation(line: 1079, column: 12, scope: !5573)
!5582 = !DILocation(line: 1079, column: 10, scope: !5573)
!5583 = !DILocation(line: 1081, column: 30, scope: !5573)
!5584 = !DILocation(line: 1081, column: 3, scope: !5573)
!5585 = !DILocation(line: 1082, column: 20, scope: !5573)
!5586 = !DILocation(line: 1082, column: 28, scope: !5573)
!5587 = !DILocation(line: 1082, column: 32, scope: !5573)
!5588 = !DILocation(line: 1082, column: 38, scope: !5573)
!5589 = !DILocation(line: 1082, column: 70, scope: !5573)
!5590 = !DILocation(line: 1082, column: 46, scope: !5573)
!5591 = !DILocation(line: 1082, column: 77, scope: !5573)
!5592 = !DILocation(line: 1082, column: 81, scope: !5573)
!5593 = !DILocation(line: 1082, column: 86, scope: !5573)
!5594 = !DILocation(line: 1082, column: 3, scope: !5573)
!5595 = !DILocation(line: 1083, column: 16, scope: !5573)
!5596 = !DILocation(line: 1083, column: 19, scope: !5573)
!5597 = !DILocation(line: 1083, column: 3, scope: !5573)
!5598 = !DILocation(line: 1084, column: 3, scope: !5573)
!5599 = !DILocation(line: 1087, column: 2, scope: !5511)
!5600 = !DILocation(line: 1088, column: 1, scope: !5511)
!5601 = distinct !DISubprogram(name: "WM_enum_search_invoke", scope: !3, file: !3, line: 1126, type: !3944, scopeLine: 1127, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!5602 = !DILocalVariable(name: "C", arg: 1, scope: !5601, file: !3, line: 1126, type: !1414)
!5603 = !DILocation(line: 1126, column: 37, scope: !5601)
!5604 = !DILocalVariable(name: "op", arg: 2, scope: !5601, file: !3, line: 1126, type: !2965)
!5605 = !DILocation(line: 1126, column: 52, scope: !5601)
!5606 = !DILocalVariable(name: "UNUSED_event", arg: 3, scope: !5601, file: !3, line: 1126, type: !3946)
!5607 = !DILocation(line: 1126, column: 71, scope: !5601)
!5608 = !DILocation(line: 1128, column: 13, scope: !5601)
!5609 = !DILocation(line: 1128, column: 37, scope: !5601)
!5610 = !DILocation(line: 1128, column: 2, scope: !5601)
!5611 = !DILocation(line: 1129, column: 2, scope: !5601)
!5612 = !DILocalVariable(name: "C", arg: 1, scope: !3253, file: !3, line: 1092, type: !1414)
!5613 = !DILocation(line: 1092, column: 47, scope: !3253)
!5614 = !DILocalVariable(name: "ar", arg: 2, scope: !3253, file: !3, line: 1092, type: !3259)
!5615 = !DILocation(line: 1092, column: 59, scope: !3253)
!5616 = !DILocalVariable(name: "arg_op", arg: 3, scope: !3253, file: !3, line: 1092, type: !1391)
!5617 = !DILocation(line: 1092, column: 69, scope: !3253)
!5618 = !DILocalVariable(name: "event", scope: !3253, file: !3, line: 1095, type: !3217)
!5619 = !DILocation(line: 1095, column: 10, scope: !3253)
!5620 = !DILocalVariable(name: "win", scope: !3253, file: !3, line: 1096, type: !4033)
!5621 = !DILocation(line: 1096, column: 12, scope: !3253)
!5622 = !DILocation(line: 1096, column: 32, scope: !3253)
!5623 = !DILocation(line: 1096, column: 18, scope: !3253)
!5624 = !DILocalVariable(name: "block", scope: !3253, file: !3, line: 1097, type: !3256)
!5625 = !DILocation(line: 1097, column: 11, scope: !3253)
!5626 = !DILocalVariable(name: "but", scope: !3253, file: !3, line: 1098, type: !5627)
!5627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5628, size: 64)
!5628 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiBut", file: !1255, line: 82, baseType: !5629)
!5629 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiBut", file: !1255, line: 82, flags: DIFlagFwdDecl)
!5630 = !DILocation(line: 1098, column: 9, scope: !3253)
!5631 = !DILocalVariable(name: "op", scope: !3253, file: !3, line: 1099, type: !2965)
!5632 = !DILocation(line: 1099, column: 14, scope: !3253)
!5633 = !DILocation(line: 1099, column: 33, scope: !3253)
!5634 = !DILocation(line: 1099, column: 19, scope: !3253)
!5635 = !DILocation(line: 1101, column: 23, scope: !3253)
!5636 = !DILocation(line: 1101, column: 26, scope: !3253)
!5637 = !DILocation(line: 1101, column: 10, scope: !3253)
!5638 = !DILocation(line: 1101, column: 8, scope: !3253)
!5639 = !DILocation(line: 1102, column: 17, scope: !3253)
!5640 = !DILocation(line: 1102, column: 2, scope: !3253)
!5641 = !DILocation(line: 1107, column: 28, scope: !3253)
!5642 = !DILocation(line: 1107, column: 35, scope: !3253)
!5643 = !DILocation(line: 1107, column: 39, scope: !3253)
!5644 = !DILocation(line: 1107, column: 45, scope: !3253)
!5645 = !DILocation(line: 1107, column: 49, scope: !3253)
!5646 = !DILocation(line: 1107, column: 54, scope: !3253)
!5647 = !DILocation(line: 1108, column: 36, scope: !3253)
!5648 = !DILocation(line: 1108, column: 56, scope: !3253)
!5649 = !DILocation(line: 1107, column: 8, scope: !3253)
!5650 = !DILocation(line: 1107, column: 6, scope: !3253)
!5651 = !DILocation(line: 1111, column: 11, scope: !3253)
!5652 = !DILocation(line: 1111, column: 41, scope: !3253)
!5653 = !DILocation(line: 1111, column: 39, scope: !3253)
!5654 = !DILocation(line: 1111, column: 62, scope: !3253)
!5655 = !DILocation(line: 1111, column: 82, scope: !3253)
!5656 = !DILocation(line: 1111, column: 2, scope: !3253)
!5657 = !DILocation(line: 1113, column: 21, scope: !3253)
!5658 = !DILocation(line: 1113, column: 35, scope: !3253)
!5659 = !DILocation(line: 1113, column: 34, scope: !3253)
!5660 = !DILocation(line: 1113, column: 2, scope: !3253)
!5661 = !DILocation(line: 1115, column: 28, scope: !3253)
!5662 = !DILocation(line: 1115, column: 2, scope: !3253)
!5663 = !DILocation(line: 1116, column: 8, scope: !3253)
!5664 = !DILocation(line: 1116, column: 13, scope: !3253)
!5665 = !DILocation(line: 1117, column: 8, scope: !3253)
!5666 = !DILocation(line: 1117, column: 12, scope: !3253)
!5667 = !DILocation(line: 1118, column: 21, scope: !3253)
!5668 = !DILocation(line: 1118, column: 8, scope: !3253)
!5669 = !DILocation(line: 1118, column: 19, scope: !3253)
!5670 = !DILocation(line: 1119, column: 8, scope: !3253)
!5671 = !DILocation(line: 1119, column: 23, scope: !3253)
!5672 = !DILocation(line: 1120, column: 15, scope: !3253)
!5673 = !DILocation(line: 1120, column: 2, scope: !3253)
!5674 = !DILocation(line: 1122, column: 9, scope: !3253)
!5675 = !DILocation(line: 1122, column: 2, scope: !3253)
!5676 = distinct !DISubprogram(name: "WM_operator_confirm_message_ex", scope: !3, file: !3, line: 1133, type: !5677, scopeLine: 1136, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!5677 = !DISubroutineType(types: !5678)
!5678 = !{!1224, !1414, !2965, !2979, !1419, !2979}
!5679 = !DILocalVariable(name: "C", arg: 1, scope: !5676, file: !3, line: 1133, type: !1414)
!5680 = !DILocation(line: 1133, column: 46, scope: !5676)
!5681 = !DILocalVariable(name: "op", arg: 2, scope: !5676, file: !3, line: 1133, type: !2965)
!5682 = !DILocation(line: 1133, column: 61, scope: !5676)
!5683 = !DILocalVariable(name: "title", arg: 3, scope: !5676, file: !3, line: 1134, type: !2979)
!5684 = !DILocation(line: 1134, column: 48, scope: !5676)
!5685 = !DILocalVariable(name: "icon", arg: 4, scope: !5676, file: !3, line: 1134, type: !1419)
!5686 = !DILocation(line: 1134, column: 65, scope: !5676)
!5687 = !DILocalVariable(name: "message", arg: 5, scope: !5676, file: !3, line: 1135, type: !2979)
!5688 = !DILocation(line: 1135, column: 48, scope: !5676)
!5689 = !DILocalVariable(name: "pup", scope: !5676, file: !3, line: 1137, type: !5524)
!5690 = !DILocation(line: 1137, column: 15, scope: !5676)
!5691 = !DILocalVariable(name: "layout", scope: !5676, file: !3, line: 1138, type: !5529)
!5692 = !DILocation(line: 1138, column: 12, scope: !5676)
!5693 = !DILocalVariable(name: "properties", scope: !5676, file: !3, line: 1139, type: !1465)
!5694 = !DILocation(line: 1139, column: 14, scope: !5676)
!5695 = !DILocation(line: 1139, column: 27, scope: !5676)
!5696 = !DILocation(line: 1139, column: 31, scope: !5676)
!5697 = !DILocation(line: 1139, column: 36, scope: !5676)
!5698 = !DILocation(line: 1141, column: 6, scope: !5699)
!5699 = distinct !DILexicalBlock(scope: !5676, file: !3, line: 1141, column: 6)
!5700 = !DILocation(line: 1141, column: 17, scope: !5699)
!5701 = !DILocation(line: 1141, column: 20, scope: !5699)
!5702 = !DILocation(line: 1141, column: 32, scope: !5699)
!5703 = !DILocation(line: 1141, column: 6, scope: !5676)
!5704 = !DILocation(line: 1142, column: 33, scope: !5699)
!5705 = !DILocation(line: 1142, column: 37, scope: !5699)
!5706 = !DILocation(line: 1142, column: 42, scope: !5699)
!5707 = !DILocation(line: 1142, column: 16, scope: !5699)
!5708 = !DILocation(line: 1142, column: 14, scope: !5699)
!5709 = !DILocation(line: 1142, column: 3, scope: !5699)
!5710 = !DILocation(line: 1144, column: 14, scope: !5699)
!5711 = !DILocation(line: 1146, column: 23, scope: !5676)
!5712 = !DILocation(line: 1146, column: 26, scope: !5676)
!5713 = !DILocation(line: 1146, column: 33, scope: !5676)
!5714 = !DILocation(line: 1146, column: 8, scope: !5676)
!5715 = !DILocation(line: 1146, column: 6, scope: !5676)
!5716 = !DILocation(line: 1147, column: 27, scope: !5676)
!5717 = !DILocation(line: 1147, column: 11, scope: !5676)
!5718 = !DILocation(line: 1147, column: 9, scope: !5676)
!5719 = !DILocation(line: 1148, column: 18, scope: !5676)
!5720 = !DILocation(line: 1148, column: 26, scope: !5676)
!5721 = !DILocation(line: 1148, column: 30, scope: !5676)
!5722 = !DILocation(line: 1148, column: 36, scope: !5676)
!5723 = !DILocation(line: 1148, column: 56, scope: !5676)
!5724 = !DILocation(line: 1148, column: 2, scope: !5676)
!5725 = !DILocation(line: 1149, column: 15, scope: !5676)
!5726 = !DILocation(line: 1149, column: 18, scope: !5676)
!5727 = !DILocation(line: 1149, column: 2, scope: !5676)
!5728 = !DILocation(line: 1151, column: 2, scope: !5676)
!5729 = distinct !DISubprogram(name: "WM_operator_confirm_message", scope: !3, file: !3, line: 1154, type: !5730, scopeLine: 1155, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!5730 = !DISubroutineType(types: !5731)
!5731 = !{!1224, !1414, !2965, !2979}
!5732 = !DILocalVariable(name: "C", arg: 1, scope: !5729, file: !3, line: 1154, type: !1414)
!5733 = !DILocation(line: 1154, column: 43, scope: !5729)
!5734 = !DILocalVariable(name: "op", arg: 2, scope: !5729, file: !3, line: 1154, type: !2965)
!5735 = !DILocation(line: 1154, column: 58, scope: !5729)
!5736 = !DILocalVariable(name: "message", arg: 3, scope: !5729, file: !3, line: 1154, type: !2979)
!5737 = !DILocation(line: 1154, column: 74, scope: !5729)
!5738 = !DILocation(line: 1156, column: 40, scope: !5729)
!5739 = !DILocation(line: 1156, column: 43, scope: !5729)
!5740 = !DILocation(line: 1156, column: 77, scope: !5729)
!5741 = !DILocation(line: 1156, column: 9, scope: !5729)
!5742 = !DILocation(line: 1156, column: 2, scope: !5729)
!5743 = distinct !DISubprogram(name: "WM_operator_confirm", scope: !3, file: !3, line: 1159, type: !3944, scopeLine: 1160, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!5744 = !DILocalVariable(name: "C", arg: 1, scope: !5743, file: !3, line: 1159, type: !1414)
!5745 = !DILocation(line: 1159, column: 35, scope: !5743)
!5746 = !DILocalVariable(name: "op", arg: 2, scope: !5743, file: !3, line: 1159, type: !2965)
!5747 = !DILocation(line: 1159, column: 50, scope: !5743)
!5748 = !DILocalVariable(name: "UNUSED_event", arg: 3, scope: !5743, file: !3, line: 1159, type: !3946)
!5749 = !DILocation(line: 1159, column: 69, scope: !5743)
!5750 = !DILocation(line: 1161, column: 37, scope: !5743)
!5751 = !DILocation(line: 1161, column: 40, scope: !5743)
!5752 = !DILocation(line: 1161, column: 9, scope: !5743)
!5753 = !DILocation(line: 1161, column: 2, scope: !5743)
!5754 = distinct !DISubprogram(name: "WM_operator_filesel", scope: !3, file: !3, line: 1165, type: !3944, scopeLine: 1166, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!5755 = !DILocalVariable(name: "C", arg: 1, scope: !5754, file: !3, line: 1165, type: !1414)
!5756 = !DILocation(line: 1165, column: 35, scope: !5754)
!5757 = !DILocalVariable(name: "op", arg: 2, scope: !5754, file: !3, line: 1165, type: !2965)
!5758 = !DILocation(line: 1165, column: 50, scope: !5754)
!5759 = !DILocalVariable(name: "UNUSED_event", arg: 3, scope: !5754, file: !3, line: 1165, type: !3946)
!5760 = !DILocation(line: 1165, column: 69, scope: !5754)
!5761 = !DILocation(line: 1167, column: 33, scope: !5762)
!5762 = distinct !DILexicalBlock(scope: !5754, file: !3, line: 1167, column: 6)
!5763 = !DILocation(line: 1167, column: 37, scope: !5762)
!5764 = !DILocation(line: 1167, column: 6, scope: !5762)
!5765 = !DILocation(line: 1167, column: 6, scope: !5754)
!5766 = !DILocation(line: 1168, column: 34, scope: !5767)
!5767 = distinct !DILexicalBlock(scope: !5762, file: !3, line: 1167, column: 55)
!5768 = !DILocation(line: 1168, column: 37, scope: !5767)
!5769 = !DILocation(line: 1168, column: 10, scope: !5767)
!5770 = !DILocation(line: 1168, column: 3, scope: !5767)
!5771 = !DILocation(line: 1171, column: 27, scope: !5772)
!5772 = distinct !DILexicalBlock(scope: !5762, file: !3, line: 1170, column: 7)
!5773 = !DILocation(line: 1171, column: 30, scope: !5772)
!5774 = !DILocation(line: 1171, column: 3, scope: !5772)
!5775 = !DILocation(line: 1172, column: 3, scope: !5772)
!5776 = !DILocation(line: 1174, column: 1, scope: !5754)
!5777 = distinct !DISubprogram(name: "WM_operator_filesel_ensure_ext_imtype", scope: !3, file: !3, line: 1176, type: !5778, scopeLine: 1177, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!5778 = !DISubroutineType(types: !5779)
!5779 = !{!2328, !2965, !5780}
!5780 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5781, size: 64)
!5781 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2528)
!5782 = !DILocalVariable(name: "op", arg: 1, scope: !5777, file: !3, line: 1176, type: !2965)
!5783 = !DILocation(line: 1176, column: 56, scope: !5777)
!5784 = !DILocalVariable(name: "im_format", arg: 2, scope: !5777, file: !3, line: 1176, type: !5780)
!5785 = !DILocation(line: 1176, column: 90, scope: !5777)
!5786 = !DILocalVariable(name: "prop", scope: !5777, file: !3, line: 1178, type: !1392)
!5787 = !DILocation(line: 1178, column: 15, scope: !5777)
!5788 = !DILocalVariable(name: "filepath", scope: !5777, file: !3, line: 1179, type: !1446)
!5789 = !DILocation(line: 1179, column: 7, scope: !5777)
!5790 = !DILocation(line: 1181, column: 34, scope: !5777)
!5791 = !DILocation(line: 1181, column: 38, scope: !5777)
!5792 = !DILocation(line: 1181, column: 9, scope: !5777)
!5793 = !DILocation(line: 1181, column: 7, scope: !5777)
!5794 = !DILocation(line: 1182, column: 26, scope: !5777)
!5795 = !DILocation(line: 1182, column: 30, scope: !5777)
!5796 = !DILocation(line: 1182, column: 35, scope: !5777)
!5797 = !DILocation(line: 1182, column: 41, scope: !5777)
!5798 = !DILocation(line: 1182, column: 2, scope: !5777)
!5799 = !DILocation(line: 1183, column: 30, scope: !5800)
!5800 = distinct !DILexicalBlock(scope: !5777, file: !3, line: 1183, column: 6)
!5801 = !DILocation(line: 1183, column: 40, scope: !5800)
!5802 = !DILocation(line: 1183, column: 6, scope: !5800)
!5803 = !DILocation(line: 1183, column: 6, scope: !5777)
!5804 = !DILocation(line: 1184, column: 27, scope: !5805)
!5805 = distinct !DILexicalBlock(scope: !5800, file: !3, line: 1183, column: 52)
!5806 = !DILocation(line: 1184, column: 31, scope: !5805)
!5807 = !DILocation(line: 1184, column: 36, scope: !5805)
!5808 = !DILocation(line: 1184, column: 42, scope: !5805)
!5809 = !DILocation(line: 1184, column: 3, scope: !5805)
!5810 = !DILocation(line: 1187, column: 3, scope: !5805)
!5811 = !DILocation(line: 1189, column: 2, scope: !5777)
!5812 = !DILocation(line: 1190, column: 1, scope: !5777)
!5813 = !DILocalVariable(name: "ot", arg: 1, scope: !3225, file: !3, line: 1193, type: !3228)
!5814 = !DILocation(line: 1193, column: 53, scope: !3225)
!5815 = !DILocalVariable(name: "filter", arg: 2, scope: !3225, file: !3, line: 1193, type: !1224)
!5816 = !DILocation(line: 1193, column: 61, scope: !3225)
!5817 = !DILocalVariable(name: "type", arg: 3, scope: !3225, file: !3, line: 1193, type: !1460)
!5818 = !DILocation(line: 1193, column: 75, scope: !3225)
!5819 = !DILocalVariable(name: "action", arg: 4, scope: !3225, file: !3, line: 1193, type: !1460)
!5820 = !DILocation(line: 1193, column: 87, scope: !3225)
!5821 = !DILocalVariable(name: "flag", arg: 5, scope: !3225, file: !3, line: 1193, type: !1460)
!5822 = !DILocation(line: 1193, column: 101, scope: !3225)
!5823 = !DILocalVariable(name: "display", arg: 6, scope: !3225, file: !3, line: 1193, type: !1460)
!5824 = !DILocation(line: 1193, column: 113, scope: !3225)
!5825 = !DILocalVariable(name: "prop", scope: !3225, file: !3, line: 1195, type: !1392)
!5826 = !DILocation(line: 1195, column: 15, scope: !3225)
!5827 = !DILocation(line: 1206, column: 6, scope: !5828)
!5828 = distinct !DILexicalBlock(scope: !3225, file: !3, line: 1206, column: 6)
!5829 = !DILocation(line: 1206, column: 11, scope: !5828)
!5830 = !DILocation(line: 1206, column: 6, scope: !3225)
!5831 = !DILocation(line: 1207, column: 28, scope: !5828)
!5832 = !DILocation(line: 1207, column: 32, scope: !5828)
!5833 = !DILocation(line: 1207, column: 3, scope: !5828)
!5834 = !DILocation(line: 1209, column: 6, scope: !5835)
!5835 = distinct !DILexicalBlock(scope: !3225, file: !3, line: 1209, column: 6)
!5836 = !DILocation(line: 1209, column: 11, scope: !5835)
!5837 = !DILocation(line: 1209, column: 6, scope: !3225)
!5838 = !DILocation(line: 1210, column: 27, scope: !5835)
!5839 = !DILocation(line: 1210, column: 31, scope: !5835)
!5840 = !DILocation(line: 1210, column: 3, scope: !5835)
!5841 = !DILocation(line: 1212, column: 6, scope: !5842)
!5842 = distinct !DILexicalBlock(scope: !3225, file: !3, line: 1212, column: 6)
!5843 = !DILocation(line: 1212, column: 11, scope: !5842)
!5844 = !DILocation(line: 1212, column: 6, scope: !3225)
!5845 = !DILocation(line: 1213, column: 28, scope: !5842)
!5846 = !DILocation(line: 1213, column: 32, scope: !5842)
!5847 = !DILocation(line: 1213, column: 3, scope: !5842)
!5848 = !DILocation(line: 1215, column: 6, scope: !5849)
!5849 = distinct !DILexicalBlock(scope: !3225, file: !3, line: 1215, column: 6)
!5850 = !DILocation(line: 1215, column: 11, scope: !5849)
!5851 = !DILocation(line: 1215, column: 6, scope: !3225)
!5852 = !DILocation(line: 1216, column: 30, scope: !5849)
!5853 = !DILocation(line: 1216, column: 34, scope: !5849)
!5854 = !DILocation(line: 1216, column: 3, scope: !5849)
!5855 = !DILocation(line: 1218, column: 6, scope: !5856)
!5856 = distinct !DILexicalBlock(scope: !3225, file: !3, line: 1218, column: 6)
!5857 = !DILocation(line: 1218, column: 13, scope: !5856)
!5858 = !DILocation(line: 1218, column: 6, scope: !3225)
!5859 = !DILocation(line: 1221, column: 26, scope: !5860)
!5860 = distinct !DILexicalBlock(scope: !5856, file: !3, line: 1218, column: 27)
!5861 = !DILocation(line: 1221, column: 30, scope: !5860)
!5862 = !DILocation(line: 1221, column: 10, scope: !5860)
!5863 = !DILocation(line: 1221, column: 8, scope: !5860)
!5864 = !DILocation(line: 1222, column: 25, scope: !5860)
!5865 = !DILocation(line: 1222, column: 3, scope: !5860)
!5866 = !DILocation(line: 1223, column: 2, scope: !5860)
!5867 = !DILocation(line: 1225, column: 25, scope: !3225)
!5868 = !DILocation(line: 1225, column: 29, scope: !3225)
!5869 = !DILocation(line: 1225, column: 54, scope: !3225)
!5870 = !DILocation(line: 1225, column: 61, scope: !3225)
!5871 = !DILocation(line: 1225, column: 9, scope: !3225)
!5872 = !DILocation(line: 1225, column: 7, scope: !3225)
!5873 = !DILocation(line: 1226, column: 24, scope: !3225)
!5874 = !DILocation(line: 1226, column: 2, scope: !3225)
!5875 = !DILocation(line: 1227, column: 25, scope: !3225)
!5876 = !DILocation(line: 1227, column: 29, scope: !3225)
!5877 = !DILocation(line: 1227, column: 53, scope: !3225)
!5878 = !DILocation(line: 1227, column: 60, scope: !3225)
!5879 = !DILocation(line: 1227, column: 9, scope: !3225)
!5880 = !DILocation(line: 1227, column: 7, scope: !3225)
!5881 = !DILocation(line: 1228, column: 24, scope: !3225)
!5882 = !DILocation(line: 1228, column: 2, scope: !3225)
!5883 = !DILocation(line: 1229, column: 25, scope: !3225)
!5884 = !DILocation(line: 1229, column: 29, scope: !3225)
!5885 = !DILocation(line: 1229, column: 52, scope: !3225)
!5886 = !DILocation(line: 1229, column: 59, scope: !3225)
!5887 = !DILocation(line: 1229, column: 9, scope: !3225)
!5888 = !DILocation(line: 1229, column: 7, scope: !3225)
!5889 = !DILocation(line: 1230, column: 24, scope: !3225)
!5890 = !DILocation(line: 1230, column: 2, scope: !3225)
!5891 = !DILocation(line: 1231, column: 25, scope: !3225)
!5892 = !DILocation(line: 1231, column: 29, scope: !3225)
!5893 = !DILocation(line: 1231, column: 52, scope: !3225)
!5894 = !DILocation(line: 1231, column: 59, scope: !3225)
!5895 = !DILocation(line: 1231, column: 9, scope: !3225)
!5896 = !DILocation(line: 1231, column: 7, scope: !3225)
!5897 = !DILocation(line: 1232, column: 24, scope: !3225)
!5898 = !DILocation(line: 1232, column: 2, scope: !3225)
!5899 = !DILocation(line: 1233, column: 25, scope: !3225)
!5900 = !DILocation(line: 1233, column: 29, scope: !3225)
!5901 = !DILocation(line: 1233, column: 53, scope: !3225)
!5902 = !DILocation(line: 1233, column: 60, scope: !3225)
!5903 = !DILocation(line: 1233, column: 9, scope: !3225)
!5904 = !DILocation(line: 1233, column: 7, scope: !3225)
!5905 = !DILocation(line: 1234, column: 24, scope: !3225)
!5906 = !DILocation(line: 1234, column: 2, scope: !3225)
!5907 = !DILocation(line: 1235, column: 25, scope: !3225)
!5908 = !DILocation(line: 1235, column: 29, scope: !3225)
!5909 = !DILocation(line: 1235, column: 51, scope: !3225)
!5910 = !DILocation(line: 1235, column: 58, scope: !3225)
!5911 = !DILocation(line: 1235, column: 9, scope: !3225)
!5912 = !DILocation(line: 1235, column: 7, scope: !3225)
!5913 = !DILocation(line: 1236, column: 24, scope: !3225)
!5914 = !DILocation(line: 1236, column: 2, scope: !3225)
!5915 = !DILocation(line: 1237, column: 25, scope: !3225)
!5916 = !DILocation(line: 1237, column: 29, scope: !3225)
!5917 = !DILocation(line: 1237, column: 52, scope: !3225)
!5918 = !DILocation(line: 1237, column: 59, scope: !3225)
!5919 = !DILocation(line: 1237, column: 9, scope: !3225)
!5920 = !DILocation(line: 1237, column: 7, scope: !3225)
!5921 = !DILocation(line: 1238, column: 24, scope: !3225)
!5922 = !DILocation(line: 1238, column: 2, scope: !3225)
!5923 = !DILocation(line: 1239, column: 25, scope: !3225)
!5924 = !DILocation(line: 1239, column: 29, scope: !3225)
!5925 = !DILocation(line: 1239, column: 51, scope: !3225)
!5926 = !DILocation(line: 1239, column: 58, scope: !3225)
!5927 = !DILocation(line: 1239, column: 9, scope: !3225)
!5928 = !DILocation(line: 1239, column: 7, scope: !3225)
!5929 = !DILocation(line: 1240, column: 24, scope: !3225)
!5930 = !DILocation(line: 1240, column: 2, scope: !3225)
!5931 = !DILocation(line: 1241, column: 25, scope: !3225)
!5932 = !DILocation(line: 1241, column: 29, scope: !3225)
!5933 = !DILocation(line: 1241, column: 50, scope: !3225)
!5934 = !DILocation(line: 1241, column: 57, scope: !3225)
!5935 = !DILocation(line: 1241, column: 9, scope: !3225)
!5936 = !DILocation(line: 1241, column: 7, scope: !3225)
!5937 = !DILocation(line: 1242, column: 24, scope: !3225)
!5938 = !DILocation(line: 1242, column: 2, scope: !3225)
!5939 = !DILocation(line: 1243, column: 25, scope: !3225)
!5940 = !DILocation(line: 1243, column: 29, scope: !3225)
!5941 = !DILocation(line: 1243, column: 54, scope: !3225)
!5942 = !DILocation(line: 1243, column: 61, scope: !3225)
!5943 = !DILocation(line: 1243, column: 9, scope: !3225)
!5944 = !DILocation(line: 1243, column: 7, scope: !3225)
!5945 = !DILocation(line: 1244, column: 24, scope: !3225)
!5946 = !DILocation(line: 1244, column: 2, scope: !3225)
!5947 = !DILocation(line: 1245, column: 25, scope: !3225)
!5948 = !DILocation(line: 1245, column: 29, scope: !3225)
!5949 = !DILocation(line: 1245, column: 53, scope: !3225)
!5950 = !DILocation(line: 1245, column: 60, scope: !3225)
!5951 = !DILocation(line: 1245, column: 9, scope: !3225)
!5952 = !DILocation(line: 1245, column: 7, scope: !3225)
!5953 = !DILocation(line: 1246, column: 24, scope: !3225)
!5954 = !DILocation(line: 1246, column: 2, scope: !3225)
!5955 = !DILocation(line: 1248, column: 21, scope: !3225)
!5956 = !DILocation(line: 1248, column: 25, scope: !3225)
!5957 = !DILocation(line: 1248, column: 43, scope: !3225)
!5958 = !DILocation(line: 1248, column: 9, scope: !3225)
!5959 = !DILocation(line: 1248, column: 7, scope: !3225)
!5960 = !DILocation(line: 1251, column: 24, scope: !3225)
!5961 = !DILocation(line: 1251, column: 2, scope: !3225)
!5962 = !DILocation(line: 1253, column: 6, scope: !5963)
!5963 = distinct !DILexicalBlock(scope: !3225, file: !3, line: 1253, column: 6)
!5964 = !DILocation(line: 1253, column: 11, scope: !5963)
!5965 = !DILocation(line: 1253, column: 6, scope: !3225)
!5966 = !DILocation(line: 1254, column: 19, scope: !5963)
!5967 = !DILocation(line: 1254, column: 23, scope: !5963)
!5968 = !DILocation(line: 1254, column: 3, scope: !5963)
!5969 = !DILocation(line: 1256, column: 22, scope: !3225)
!5970 = !DILocation(line: 1256, column: 26, scope: !3225)
!5971 = !DILocation(line: 1256, column: 68, scope: !3225)
!5972 = !DILocation(line: 1256, column: 9, scope: !3225)
!5973 = !DILocation(line: 1256, column: 7, scope: !3225)
!5974 = !DILocation(line: 1257, column: 24, scope: !3225)
!5975 = !DILocation(line: 1257, column: 2, scope: !3225)
!5976 = !DILocation(line: 1258, column: 1, scope: !3225)
!5977 = !DILocalVariable(name: "ot", arg: 1, scope: !3242, file: !3, line: 1266, type: !3228)
!5978 = !DILocation(line: 1266, column: 59, scope: !3242)
!5979 = !DILocalVariable(name: "default_action", arg: 2, scope: !3242, file: !3, line: 1266, type: !1224)
!5980 = !DILocation(line: 1266, column: 67, scope: !3242)
!5981 = !DILocation(line: 1276, column: 42, scope: !3242)
!5982 = !DILocation(line: 1276, column: 46, scope: !3242)
!5983 = !DILocation(line: 1276, column: 2, scope: !3242)
!5984 = !DILocation(line: 1277, column: 1, scope: !3242)
!5985 = distinct !DISubprogram(name: "wm_operator_properties_select_action_ex", scope: !3, file: !3, line: 1260, type: !5986, scopeLine: 1262, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!5986 = !DISubroutineType(types: !5987)
!5987 = !{null, !3228, !1224, !5988}
!5988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5989, size: 64)
!5989 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !3232)
!5990 = !DILocalVariable(name: "ot", arg: 1, scope: !5985, file: !3, line: 1260, type: !3228)
!5991 = !DILocation(line: 1260, column: 69, scope: !5985)
!5992 = !DILocalVariable(name: "default_action", arg: 2, scope: !5985, file: !3, line: 1260, type: !1224)
!5993 = !DILocation(line: 1260, column: 77, scope: !5985)
!5994 = !DILocalVariable(name: "select_actions", arg: 3, scope: !5985, file: !3, line: 1261, type: !5988)
!5995 = !DILocation(line: 1261, column: 77, scope: !5985)
!5996 = !DILocation(line: 1263, column: 15, scope: !5985)
!5997 = !DILocation(line: 1263, column: 19, scope: !5985)
!5998 = !DILocation(line: 1263, column: 35, scope: !5985)
!5999 = !DILocation(line: 1263, column: 51, scope: !5985)
!6000 = !DILocation(line: 1263, column: 2, scope: !5985)
!6001 = !DILocation(line: 1264, column: 1, scope: !5985)
!6002 = !DILocalVariable(name: "ot", arg: 1, scope: !3247, file: !3, line: 1282, type: !3228)
!6003 = !DILocation(line: 1282, column: 66, scope: !3247)
!6004 = !DILocalVariable(name: "default_action", arg: 2, scope: !3247, file: !3, line: 1282, type: !1224)
!6005 = !DILocation(line: 1282, column: 74, scope: !3247)
!6006 = !DILocation(line: 1290, column: 42, scope: !3247)
!6007 = !DILocation(line: 1290, column: 46, scope: !3247)
!6008 = !DILocation(line: 1290, column: 2, scope: !3247)
!6009 = !DILocation(line: 1291, column: 1, scope: !3247)
!6010 = distinct !DISubprogram(name: "WM_operator_properties_select_all", scope: !3, file: !3, line: 1293, type: !3678, scopeLine: 1294, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!6011 = !DILocalVariable(name: "ot", arg: 1, scope: !6010, file: !3, line: 1293, type: !3228)
!6012 = !DILocation(line: 1293, column: 56, scope: !6010)
!6013 = !DILocation(line: 1295, column: 39, scope: !6010)
!6014 = !DILocation(line: 1295, column: 2, scope: !6010)
!6015 = !DILocation(line: 1296, column: 1, scope: !6010)
!6016 = distinct !DISubprogram(name: "WM_operator_properties_border", scope: !3, file: !3, line: 1298, type: !3678, scopeLine: 1299, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!6017 = !DILocalVariable(name: "ot", arg: 1, scope: !6016, file: !3, line: 1298, type: !3228)
!6018 = !DILocation(line: 1298, column: 52, scope: !6016)
!6019 = !DILocalVariable(name: "prop", scope: !6016, file: !3, line: 1300, type: !1392)
!6020 = !DILocation(line: 1300, column: 15, scope: !6016)
!6021 = !DILocation(line: 1302, column: 21, scope: !6016)
!6022 = !DILocation(line: 1302, column: 25, scope: !6016)
!6023 = !DILocation(line: 1302, column: 9, scope: !6016)
!6024 = !DILocation(line: 1302, column: 7, scope: !6016)
!6025 = !DILocation(line: 1303, column: 24, scope: !6016)
!6026 = !DILocation(line: 1303, column: 2, scope: !6016)
!6027 = !DILocation(line: 1304, column: 21, scope: !6016)
!6028 = !DILocation(line: 1304, column: 25, scope: !6016)
!6029 = !DILocation(line: 1304, column: 9, scope: !6016)
!6030 = !DILocation(line: 1304, column: 7, scope: !6016)
!6031 = !DILocation(line: 1305, column: 24, scope: !6016)
!6032 = !DILocation(line: 1305, column: 2, scope: !6016)
!6033 = !DILocation(line: 1306, column: 21, scope: !6016)
!6034 = !DILocation(line: 1306, column: 25, scope: !6016)
!6035 = !DILocation(line: 1306, column: 9, scope: !6016)
!6036 = !DILocation(line: 1306, column: 7, scope: !6016)
!6037 = !DILocation(line: 1307, column: 24, scope: !6016)
!6038 = !DILocation(line: 1307, column: 2, scope: !6016)
!6039 = !DILocation(line: 1308, column: 21, scope: !6016)
!6040 = !DILocation(line: 1308, column: 25, scope: !6016)
!6041 = !DILocation(line: 1308, column: 9, scope: !6016)
!6042 = !DILocation(line: 1308, column: 7, scope: !6016)
!6043 = !DILocation(line: 1309, column: 24, scope: !6016)
!6044 = !DILocation(line: 1309, column: 2, scope: !6016)
!6045 = !DILocation(line: 1310, column: 1, scope: !6016)
!6046 = distinct !DISubprogram(name: "WM_operator_properties_border_to_rcti", scope: !3, file: !3, line: 1312, type: !6047, scopeLine: 1313, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!6047 = !DISubroutineType(types: !6048)
!6048 = !{null, !2970, !6049}
!6049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2726, size: 64)
!6050 = !DILocalVariable(name: "op", arg: 1, scope: !6046, file: !3, line: 1312, type: !2970)
!6051 = !DILocation(line: 1312, column: 63, scope: !6046)
!6052 = !DILocalVariable(name: "rect", arg: 2, scope: !6046, file: !3, line: 1312, type: !6049)
!6053 = !DILocation(line: 1312, column: 73, scope: !6046)
!6054 = !DILocation(line: 1314, column: 27, scope: !6046)
!6055 = !DILocation(line: 1314, column: 31, scope: !6046)
!6056 = !DILocation(line: 1314, column: 15, scope: !6046)
!6057 = !DILocation(line: 1314, column: 2, scope: !6046)
!6058 = !DILocation(line: 1314, column: 8, scope: !6046)
!6059 = !DILocation(line: 1314, column: 13, scope: !6046)
!6060 = !DILocation(line: 1315, column: 27, scope: !6046)
!6061 = !DILocation(line: 1315, column: 31, scope: !6046)
!6062 = !DILocation(line: 1315, column: 15, scope: !6046)
!6063 = !DILocation(line: 1315, column: 2, scope: !6046)
!6064 = !DILocation(line: 1315, column: 8, scope: !6046)
!6065 = !DILocation(line: 1315, column: 13, scope: !6046)
!6066 = !DILocation(line: 1316, column: 27, scope: !6046)
!6067 = !DILocation(line: 1316, column: 31, scope: !6046)
!6068 = !DILocation(line: 1316, column: 15, scope: !6046)
!6069 = !DILocation(line: 1316, column: 2, scope: !6046)
!6070 = !DILocation(line: 1316, column: 8, scope: !6046)
!6071 = !DILocation(line: 1316, column: 13, scope: !6046)
!6072 = !DILocation(line: 1317, column: 27, scope: !6046)
!6073 = !DILocation(line: 1317, column: 31, scope: !6046)
!6074 = !DILocation(line: 1317, column: 15, scope: !6046)
!6075 = !DILocation(line: 1317, column: 2, scope: !6046)
!6076 = !DILocation(line: 1317, column: 8, scope: !6046)
!6077 = !DILocation(line: 1317, column: 13, scope: !6046)
!6078 = !DILocation(line: 1318, column: 1, scope: !6046)
!6079 = distinct !DISubprogram(name: "WM_operator_properties_border_to_rctf", scope: !3, file: !3, line: 1320, type: !6080, scopeLine: 1321, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!6080 = !DISubroutineType(types: !6081)
!6081 = !{null, !2970, !6082}
!6082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1840, size: 64)
!6083 = !DILocalVariable(name: "op", arg: 1, scope: !6079, file: !3, line: 1320, type: !2970)
!6084 = !DILocation(line: 1320, column: 63, scope: !6079)
!6085 = !DILocalVariable(name: "rect", arg: 2, scope: !6079, file: !3, line: 1320, type: !6082)
!6086 = !DILocation(line: 1320, column: 73, scope: !6079)
!6087 = !DILocalVariable(name: "rect_i", scope: !6079, file: !3, line: 1322, type: !2726)
!6088 = !DILocation(line: 1322, column: 7, scope: !6079)
!6089 = !DILocation(line: 1323, column: 40, scope: !6079)
!6090 = !DILocation(line: 1323, column: 2, scope: !6079)
!6091 = !DILocation(line: 1324, column: 21, scope: !6079)
!6092 = !DILocation(line: 1324, column: 2, scope: !6079)
!6093 = !DILocation(line: 1325, column: 1, scope: !6079)
!6094 = distinct !DISubprogram(name: "WM_operator_properties_gesture_border", scope: !3, file: !3, line: 1327, type: !6095, scopeLine: 1328, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!6095 = !DISubroutineType(types: !6096)
!6096 = !{null, !3228, !2328}
!6097 = !DILocalVariable(name: "ot", arg: 1, scope: !6094, file: !3, line: 1327, type: !3228)
!6098 = !DILocation(line: 1327, column: 60, scope: !6094)
!6099 = !DILocalVariable(name: "extend", arg: 2, scope: !6094, file: !3, line: 1327, type: !2328)
!6100 = !DILocation(line: 1327, column: 69, scope: !6094)
!6101 = !DILocation(line: 1329, column: 14, scope: !6094)
!6102 = !DILocation(line: 1329, column: 18, scope: !6094)
!6103 = !DILocation(line: 1329, column: 2, scope: !6094)
!6104 = !DILocation(line: 1331, column: 32, scope: !6094)
!6105 = !DILocation(line: 1331, column: 2, scope: !6094)
!6106 = !DILocation(line: 1333, column: 6, scope: !6107)
!6107 = distinct !DILexicalBlock(scope: !6094, file: !3, line: 1333, column: 6)
!6108 = !DILocation(line: 1333, column: 6, scope: !6094)
!6109 = !DILocation(line: 1334, column: 19, scope: !6110)
!6110 = distinct !DILexicalBlock(scope: !6107, file: !3, line: 1333, column: 14)
!6111 = !DILocation(line: 1334, column: 23, scope: !6110)
!6112 = !DILocation(line: 1334, column: 3, scope: !6110)
!6113 = !DILocation(line: 1335, column: 2, scope: !6110)
!6114 = !DILocation(line: 1336, column: 1, scope: !6094)
!6115 = distinct !DISubprogram(name: "WM_operator_properties_mouse_select", scope: !3, file: !3, line: 1338, type: !3678, scopeLine: 1339, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!6116 = !DILocalVariable(name: "ot", arg: 1, scope: !6115, file: !3, line: 1338, type: !3228)
!6117 = !DILocation(line: 1338, column: 58, scope: !6115)
!6118 = !DILocalVariable(name: "prop", scope: !6115, file: !3, line: 1340, type: !1392)
!6119 = !DILocation(line: 1340, column: 15, scope: !6115)
!6120 = !DILocation(line: 1342, column: 25, scope: !6115)
!6121 = !DILocation(line: 1342, column: 29, scope: !6115)
!6122 = !DILocation(line: 1342, column: 9, scope: !6115)
!6123 = !DILocation(line: 1342, column: 7, scope: !6115)
!6124 = !DILocation(line: 1343, column: 24, scope: !6115)
!6125 = !DILocation(line: 1343, column: 2, scope: !6115)
!6126 = !DILocation(line: 1344, column: 25, scope: !6115)
!6127 = !DILocation(line: 1344, column: 29, scope: !6115)
!6128 = !DILocation(line: 1344, column: 9, scope: !6115)
!6129 = !DILocation(line: 1344, column: 7, scope: !6115)
!6130 = !DILocation(line: 1345, column: 24, scope: !6115)
!6131 = !DILocation(line: 1345, column: 2, scope: !6115)
!6132 = !DILocation(line: 1346, column: 25, scope: !6115)
!6133 = !DILocation(line: 1346, column: 29, scope: !6115)
!6134 = !DILocation(line: 1346, column: 9, scope: !6115)
!6135 = !DILocation(line: 1346, column: 7, scope: !6115)
!6136 = !DILocation(line: 1347, column: 24, scope: !6115)
!6137 = !DILocation(line: 1347, column: 2, scope: !6115)
!6138 = !DILocation(line: 1348, column: 1, scope: !6115)
!6139 = distinct !DISubprogram(name: "WM_operator_properties_gesture_straightline", scope: !3, file: !3, line: 1350, type: !3243, scopeLine: 1351, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!6140 = !DILocalVariable(name: "ot", arg: 1, scope: !6139, file: !3, line: 1350, type: !3228)
!6141 = !DILocation(line: 1350, column: 66, scope: !6139)
!6142 = !DILocalVariable(name: "cursor", arg: 2, scope: !6139, file: !3, line: 1350, type: !1224)
!6143 = !DILocation(line: 1350, column: 74, scope: !6139)
!6144 = !DILocalVariable(name: "prop", scope: !6139, file: !3, line: 1352, type: !1392)
!6145 = !DILocation(line: 1352, column: 15, scope: !6139)
!6146 = !DILocation(line: 1354, column: 21, scope: !6139)
!6147 = !DILocation(line: 1354, column: 25, scope: !6139)
!6148 = !DILocation(line: 1354, column: 9, scope: !6139)
!6149 = !DILocation(line: 1354, column: 7, scope: !6139)
!6150 = !DILocation(line: 1355, column: 24, scope: !6139)
!6151 = !DILocation(line: 1355, column: 2, scope: !6139)
!6152 = !DILocation(line: 1356, column: 21, scope: !6139)
!6153 = !DILocation(line: 1356, column: 25, scope: !6139)
!6154 = !DILocation(line: 1356, column: 9, scope: !6139)
!6155 = !DILocation(line: 1356, column: 7, scope: !6139)
!6156 = !DILocation(line: 1357, column: 24, scope: !6139)
!6157 = !DILocation(line: 1357, column: 2, scope: !6139)
!6158 = !DILocation(line: 1358, column: 21, scope: !6139)
!6159 = !DILocation(line: 1358, column: 25, scope: !6139)
!6160 = !DILocation(line: 1358, column: 9, scope: !6139)
!6161 = !DILocation(line: 1358, column: 7, scope: !6139)
!6162 = !DILocation(line: 1359, column: 24, scope: !6139)
!6163 = !DILocation(line: 1359, column: 2, scope: !6139)
!6164 = !DILocation(line: 1360, column: 21, scope: !6139)
!6165 = !DILocation(line: 1360, column: 25, scope: !6139)
!6166 = !DILocation(line: 1360, column: 9, scope: !6139)
!6167 = !DILocation(line: 1360, column: 7, scope: !6139)
!6168 = !DILocation(line: 1361, column: 24, scope: !6139)
!6169 = !DILocation(line: 1361, column: 2, scope: !6139)
!6170 = !DILocation(line: 1363, column: 6, scope: !6171)
!6171 = distinct !DILexicalBlock(scope: !6139, file: !3, line: 1363, column: 6)
!6172 = !DILocation(line: 1363, column: 6, scope: !6139)
!6173 = !DILocation(line: 1364, column: 22, scope: !6174)
!6174 = distinct !DILexicalBlock(scope: !6171, file: !3, line: 1363, column: 14)
!6175 = !DILocation(line: 1364, column: 26, scope: !6174)
!6176 = !DILocation(line: 1364, column: 42, scope: !6174)
!6177 = !DILocation(line: 1364, column: 10, scope: !6174)
!6178 = !DILocation(line: 1364, column: 8, scope: !6174)
!6179 = !DILocation(line: 1366, column: 25, scope: !6174)
!6180 = !DILocation(line: 1366, column: 3, scope: !6174)
!6181 = !DILocation(line: 1367, column: 2, scope: !6174)
!6182 = !DILocation(line: 1368, column: 1, scope: !6139)
!6183 = distinct !DISubprogram(name: "WM_operator_winactive", scope: !3, file: !3, line: 1372, type: !6184, scopeLine: 1373, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!6184 = !DISubroutineType(types: !6185)
!6185 = !{!1224, !1414}
!6186 = !DILocalVariable(name: "C", arg: 1, scope: !6183, file: !3, line: 1372, type: !1414)
!6187 = !DILocation(line: 1372, column: 37, scope: !6183)
!6188 = !DILocation(line: 1374, column: 20, scope: !6189)
!6189 = distinct !DILexicalBlock(scope: !6183, file: !3, line: 1374, column: 6)
!6190 = !DILocation(line: 1374, column: 6, scope: !6189)
!6191 = !DILocation(line: 1374, column: 23, scope: !6189)
!6192 = !DILocation(line: 1374, column: 6, scope: !6183)
!6193 = !DILocation(line: 1374, column: 32, scope: !6189)
!6194 = !DILocation(line: 1375, column: 2, scope: !6183)
!6195 = !DILocation(line: 1376, column: 1, scope: !6183)
!6196 = distinct !DISubprogram(name: "WM_operator_check_ui_enabled", scope: !3, file: !3, line: 1379, type: !6197, scopeLine: 1380, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!6197 = !DISubroutineType(types: !6198)
!6198 = !{!2328, !6199, !2979}
!6199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6200, size: 64)
!6200 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1415)
!6201 = !DILocalVariable(name: "C", arg: 1, scope: !6196, file: !3, line: 1379, type: !6199)
!6202 = !DILocation(line: 1379, column: 51, scope: !6196)
!6203 = !DILocalVariable(name: "idname", arg: 2, scope: !6196, file: !3, line: 1379, type: !2979)
!6204 = !DILocation(line: 1379, column: 66, scope: !6196)
!6205 = !DILocalVariable(name: "wm", scope: !6196, file: !3, line: 1381, type: !6206)
!6206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6207, size: 64)
!6207 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmWindowManager", file: !41, line: 160, baseType: !3330)
!6208 = !DILocation(line: 1381, column: 19, scope: !6196)
!6209 = !DILocation(line: 1381, column: 39, scope: !6196)
!6210 = !DILocation(line: 1381, column: 24, scope: !6196)
!6211 = !DILocalVariable(name: "scene", scope: !6196, file: !3, line: 1382, type: !2963)
!6212 = !DILocation(line: 1382, column: 9, scope: !6196)
!6213 = !DILocation(line: 1382, column: 32, scope: !6196)
!6214 = !DILocation(line: 1382, column: 17, scope: !6196)
!6215 = !DILocation(line: 1384, column: 25, scope: !6196)
!6216 = !DILocation(line: 1384, column: 28, scope: !6196)
!6217 = !DILocation(line: 1384, column: 11, scope: !6196)
!6218 = !DILocation(line: 1384, column: 36, scope: !6196)
!6219 = !DILocation(line: 1384, column: 41, scope: !6196)
!6220 = !DILocation(line: 1384, column: 57, scope: !6196)
!6221 = !DILocation(line: 1384, column: 61, scope: !6196)
!6222 = !DILocation(line: 1384, column: 44, scope: !6196)
!6223 = !DILocation(line: 1384, column: 9, scope: !6196)
!6224 = !DILocation(line: 1384, column: 2, scope: !6196)
!6225 = distinct !DISubprogram(name: "WM_operator_last_redo", scope: !3, file: !3, line: 1387, type: !6226, scopeLine: 1388, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!6226 = !DISubroutineType(types: !6227)
!6227 = !{!2965, !6199}
!6228 = !DILocalVariable(name: "C", arg: 1, scope: !6225, file: !3, line: 1387, type: !6199)
!6229 = !DILocation(line: 1387, column: 51, scope: !6225)
!6230 = !DILocalVariable(name: "wm", scope: !6225, file: !3, line: 1389, type: !6206)
!6231 = !DILocation(line: 1389, column: 19, scope: !6225)
!6232 = !DILocation(line: 1389, column: 39, scope: !6225)
!6233 = !DILocation(line: 1389, column: 24, scope: !6225)
!6234 = !DILocalVariable(name: "op", scope: !6225, file: !3, line: 1390, type: !2965)
!6235 = !DILocation(line: 1390, column: 14, scope: !6225)
!6236 = !DILocation(line: 1393, column: 12, scope: !6237)
!6237 = distinct !DILexicalBlock(scope: !6225, file: !3, line: 1393, column: 2)
!6238 = !DILocation(line: 1393, column: 16, scope: !6237)
!6239 = !DILocation(line: 1393, column: 26, scope: !6237)
!6240 = !DILocation(line: 1393, column: 10, scope: !6237)
!6241 = !DILocation(line: 1393, column: 7, scope: !6237)
!6242 = !DILocation(line: 1393, column: 32, scope: !6243)
!6243 = distinct !DILexicalBlock(scope: !6237, file: !3, line: 1393, column: 2)
!6244 = !DILocation(line: 1393, column: 2, scope: !6237)
!6245 = !DILocation(line: 1394, column: 8, scope: !6246)
!6246 = distinct !DILexicalBlock(scope: !6243, file: !3, line: 1394, column: 7)
!6247 = !DILocation(line: 1394, column: 12, scope: !6246)
!6248 = !DILocation(line: 1394, column: 18, scope: !6246)
!6249 = !DILocation(line: 1394, column: 23, scope: !6246)
!6250 = !DILocation(line: 1394, column: 42, scope: !6246)
!6251 = !DILocation(line: 1394, column: 46, scope: !6246)
!6252 = !DILocation(line: 1394, column: 50, scope: !6246)
!6253 = !DILocation(line: 1394, column: 56, scope: !6246)
!6254 = !DILocation(line: 1394, column: 61, scope: !6246)
!6255 = !DILocation(line: 1394, column: 7, scope: !6243)
!6256 = !DILocation(line: 1395, column: 4, scope: !6246)
!6257 = !DILocation(line: 1394, column: 74, scope: !6246)
!6258 = !DILocation(line: 1393, column: 41, scope: !6243)
!6259 = !DILocation(line: 1393, column: 45, scope: !6243)
!6260 = !DILocation(line: 1393, column: 39, scope: !6243)
!6261 = !DILocation(line: 1393, column: 2, scope: !6243)
!6262 = distinct !{!6262, !6244, !6263}
!6263 = !DILocation(line: 1395, column: 4, scope: !6237)
!6264 = !DILocation(line: 1397, column: 9, scope: !6225)
!6265 = !DILocation(line: 1397, column: 2, scope: !6225)
!6266 = distinct !DISubprogram(name: "WM_operator_ui_popup", scope: !3, file: !3, line: 1597, type: !6267, scopeLine: 1598, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!6267 = !DISubroutineType(types: !6268)
!6268 = !{!1224, !1414, !2965, !1224, !1224}
!6269 = !DILocalVariable(name: "C", arg: 1, scope: !6266, file: !3, line: 1597, type: !1414)
!6270 = !DILocation(line: 1597, column: 36, scope: !6266)
!6271 = !DILocalVariable(name: "op", arg: 2, scope: !6266, file: !3, line: 1597, type: !2965)
!6272 = !DILocation(line: 1597, column: 51, scope: !6266)
!6273 = !DILocalVariable(name: "width", arg: 3, scope: !6266, file: !3, line: 1597, type: !1224)
!6274 = !DILocation(line: 1597, column: 59, scope: !6266)
!6275 = !DILocalVariable(name: "height", arg: 4, scope: !6266, file: !3, line: 1597, type: !1224)
!6276 = !DILocation(line: 1597, column: 70, scope: !6266)
!6277 = !DILocalVariable(name: "data", scope: !6266, file: !3, line: 1599, type: !6278)
!6278 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6279, size: 64)
!6279 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmOpPopUp", file: !3, line: 1468, baseType: !6280)
!6280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOpPopUp", file: !3, line: 1463, size: 192, elements: !6281)
!6281 = !{!6282, !6283, !6284, !6285}
!6282 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !6280, file: !3, line: 1464, baseType: !2965, size: 64)
!6283 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !6280, file: !3, line: 1465, baseType: !1224, size: 32, offset: 64)
!6284 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !6280, file: !3, line: 1466, baseType: !1224, size: 32, offset: 96)
!6285 = !DIDerivedType(tag: DW_TAG_member, name: "free_op", scope: !6280, file: !3, line: 1467, baseType: !1224, size: 32, offset: 128)
!6286 = !DILocation(line: 1599, column: 13, scope: !6266)
!6287 = !DILocation(line: 1599, column: 20, scope: !6266)
!6288 = !DILocation(line: 1600, column: 13, scope: !6266)
!6289 = !DILocation(line: 1600, column: 2, scope: !6266)
!6290 = !DILocation(line: 1600, column: 8, scope: !6266)
!6291 = !DILocation(line: 1600, column: 11, scope: !6266)
!6292 = !DILocation(line: 1601, column: 16, scope: !6266)
!6293 = !DILocation(line: 1601, column: 2, scope: !6266)
!6294 = !DILocation(line: 1601, column: 8, scope: !6266)
!6295 = !DILocation(line: 1601, column: 14, scope: !6266)
!6296 = !DILocation(line: 1602, column: 17, scope: !6266)
!6297 = !DILocation(line: 1602, column: 2, scope: !6266)
!6298 = !DILocation(line: 1602, column: 8, scope: !6266)
!6299 = !DILocation(line: 1602, column: 15, scope: !6266)
!6300 = !DILocation(line: 1603, column: 2, scope: !6266)
!6301 = !DILocation(line: 1603, column: 8, scope: !6266)
!6302 = !DILocation(line: 1603, column: 16, scope: !6266)
!6303 = !DILocation(line: 1604, column: 15, scope: !6266)
!6304 = !DILocation(line: 1604, column: 76, scope: !6266)
!6305 = !DILocation(line: 1604, column: 2, scope: !6266)
!6306 = !DILocation(line: 1605, column: 2, scope: !6266)
!6307 = distinct !DISubprogram(name: "wm_operator_ui_create", scope: !3, file: !3, line: 1546, type: !3254, scopeLine: 1547, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!6308 = !DILocalVariable(name: "C", arg: 1, scope: !6307, file: !3, line: 1546, type: !1414)
!6309 = !DILocation(line: 1546, column: 49, scope: !6307)
!6310 = !DILocalVariable(name: "ar", arg: 2, scope: !6307, file: !3, line: 1546, type: !3259)
!6311 = !DILocation(line: 1546, column: 61, scope: !6307)
!6312 = !DILocalVariable(name: "userData", arg: 3, scope: !6307, file: !3, line: 1546, type: !1391)
!6313 = !DILocation(line: 1546, column: 71, scope: !6307)
!6314 = !DILocalVariable(name: "data", scope: !6307, file: !3, line: 1548, type: !6278)
!6315 = !DILocation(line: 1548, column: 13, scope: !6307)
!6316 = !DILocation(line: 1548, column: 20, scope: !6307)
!6317 = !DILocalVariable(name: "op", scope: !6307, file: !3, line: 1549, type: !2965)
!6318 = !DILocation(line: 1549, column: 14, scope: !6307)
!6319 = !DILocation(line: 1549, column: 19, scope: !6307)
!6320 = !DILocation(line: 1549, column: 25, scope: !6307)
!6321 = !DILocalVariable(name: "block", scope: !6307, file: !3, line: 1550, type: !3256)
!6322 = !DILocation(line: 1550, column: 11, scope: !6307)
!6323 = !DILocalVariable(name: "layout", scope: !6307, file: !3, line: 1551, type: !5529)
!6324 = !DILocation(line: 1551, column: 12, scope: !6307)
!6325 = !DILocalVariable(name: "style", scope: !6307, file: !3, line: 1552, type: !6326)
!6326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6327, size: 64)
!6327 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiStyle", file: !1223, line: 120, baseType: !6328)
!6328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiStyle", file: !1223, line: 96, size: 1856, elements: !6329)
!6329 = !{!6330, !6332, !6333, !6334, !6350, !6351, !6352, !6353, !6354, !6355, !6356, !6357, !6358, !6359, !6360, !6361, !6362, !6363}
!6330 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6328, file: !1223, line: 97, baseType: !6331, size: 64)
!6331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6328, size: 64)
!6332 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6328, file: !1223, line: 97, baseType: !6331, size: 64, offset: 64)
!6333 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6328, file: !1223, line: 99, baseType: !1476, size: 512, offset: 128)
!6334 = !DIDerivedType(tag: DW_TAG_member, name: "paneltitle", scope: !6328, file: !1223, line: 101, baseType: !6335, size: 256, offset: 640)
!6335 = !DIDerivedType(tag: DW_TAG_typedef, name: "uiFontStyle", file: !1223, line: 84, baseType: !6336)
!6336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "uiFontStyle", file: !1223, line: 73, size: 256, elements: !6337)
!6337 = !{!6338, !6339, !6340, !6341, !6342, !6343, !6344, !6345, !6346, !6347, !6348, !6349}
!6338 = !DIDerivedType(tag: DW_TAG_member, name: "uifont_id", scope: !6336, file: !1223, line: 74, baseType: !1460, size: 16)
!6339 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !6336, file: !1223, line: 75, baseType: !1460, size: 16, offset: 16)
!6340 = !DIDerivedType(tag: DW_TAG_member, name: "kerning", scope: !6336, file: !1223, line: 76, baseType: !1460, size: 16, offset: 32)
!6341 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !6336, file: !1223, line: 77, baseType: !2544, size: 48, offset: 48)
!6342 = !DIDerivedType(tag: DW_TAG_member, name: "italic", scope: !6336, file: !1223, line: 78, baseType: !1460, size: 16, offset: 96)
!6343 = !DIDerivedType(tag: DW_TAG_member, name: "bold", scope: !6336, file: !1223, line: 78, baseType: !1460, size: 16, offset: 112)
!6344 = !DIDerivedType(tag: DW_TAG_member, name: "shadow", scope: !6336, file: !1223, line: 79, baseType: !1460, size: 16, offset: 128)
!6345 = !DIDerivedType(tag: DW_TAG_member, name: "shadx", scope: !6336, file: !1223, line: 80, baseType: !1460, size: 16, offset: 144)
!6346 = !DIDerivedType(tag: DW_TAG_member, name: "shady", scope: !6336, file: !1223, line: 80, baseType: !1460, size: 16, offset: 160)
!6347 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !6336, file: !1223, line: 81, baseType: !1460, size: 16, offset: 176)
!6348 = !DIDerivedType(tag: DW_TAG_member, name: "shadowalpha", scope: !6336, file: !1223, line: 82, baseType: !1537, size: 32, offset: 192)
!6349 = !DIDerivedType(tag: DW_TAG_member, name: "shadowcolor", scope: !6336, file: !1223, line: 83, baseType: !1537, size: 32, offset: 224)
!6350 = !DIDerivedType(tag: DW_TAG_member, name: "grouplabel", scope: !6328, file: !1223, line: 102, baseType: !6335, size: 256, offset: 896)
!6351 = !DIDerivedType(tag: DW_TAG_member, name: "widgetlabel", scope: !6328, file: !1223, line: 103, baseType: !6335, size: 256, offset: 1152)
!6352 = !DIDerivedType(tag: DW_TAG_member, name: "widget", scope: !6328, file: !1223, line: 104, baseType: !6335, size: 256, offset: 1408)
!6353 = !DIDerivedType(tag: DW_TAG_member, name: "panelzoom", scope: !6328, file: !1223, line: 106, baseType: !1537, size: 32, offset: 1664)
!6354 = !DIDerivedType(tag: DW_TAG_member, name: "minlabelchars", scope: !6328, file: !1223, line: 108, baseType: !1460, size: 16, offset: 1696)
!6355 = !DIDerivedType(tag: DW_TAG_member, name: "minwidgetchars", scope: !6328, file: !1223, line: 109, baseType: !1460, size: 16, offset: 1712)
!6356 = !DIDerivedType(tag: DW_TAG_member, name: "columnspace", scope: !6328, file: !1223, line: 111, baseType: !1460, size: 16, offset: 1728)
!6357 = !DIDerivedType(tag: DW_TAG_member, name: "templatespace", scope: !6328, file: !1223, line: 112, baseType: !1460, size: 16, offset: 1744)
!6358 = !DIDerivedType(tag: DW_TAG_member, name: "boxspace", scope: !6328, file: !1223, line: 113, baseType: !1460, size: 16, offset: 1760)
!6359 = !DIDerivedType(tag: DW_TAG_member, name: "buttonspacex", scope: !6328, file: !1223, line: 114, baseType: !1460, size: 16, offset: 1776)
!6360 = !DIDerivedType(tag: DW_TAG_member, name: "buttonspacey", scope: !6328, file: !1223, line: 115, baseType: !1460, size: 16, offset: 1792)
!6361 = !DIDerivedType(tag: DW_TAG_member, name: "panelspace", scope: !6328, file: !1223, line: 116, baseType: !1460, size: 16, offset: 1808)
!6362 = !DIDerivedType(tag: DW_TAG_member, name: "panelouter", scope: !6328, file: !1223, line: 117, baseType: !1460, size: 16, offset: 1824)
!6363 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !6328, file: !1223, line: 119, baseType: !1460, size: 16, offset: 1840)
!6364 = !DILocation(line: 1552, column: 11, scope: !6307)
!6365 = !DILocation(line: 1552, column: 19, scope: !6307)
!6366 = !DILocation(line: 1554, column: 23, scope: !6307)
!6367 = !DILocation(line: 1554, column: 26, scope: !6307)
!6368 = !DILocation(line: 1554, column: 10, scope: !6307)
!6369 = !DILocation(line: 1554, column: 8, scope: !6307)
!6370 = !DILocation(line: 1555, column: 19, scope: !6307)
!6371 = !DILocation(line: 1555, column: 2, scope: !6307)
!6372 = !DILocation(line: 1556, column: 17, scope: !6307)
!6373 = !DILocation(line: 1556, column: 2, scope: !6307)
!6374 = !DILocation(line: 1558, column: 25, scope: !6307)
!6375 = !DILocation(line: 1558, column: 75, scope: !6307)
!6376 = !DILocation(line: 1558, column: 81, scope: !6307)
!6377 = !DILocation(line: 1558, column: 88, scope: !6307)
!6378 = !DILocation(line: 1558, column: 94, scope: !6307)
!6379 = !DILocation(line: 1558, column: 105, scope: !6307)
!6380 = !DILocation(line: 1558, column: 11, scope: !6307)
!6381 = !DILocation(line: 1558, column: 9, scope: !6307)
!6382 = !DILocation(line: 1561, column: 23, scope: !6307)
!6383 = !DILocation(line: 1561, column: 26, scope: !6307)
!6384 = !DILocation(line: 1561, column: 34, scope: !6307)
!6385 = !DILocation(line: 1561, column: 2, scope: !6307)
!6386 = !DILocation(line: 1563, column: 21, scope: !6307)
!6387 = !DILocation(line: 1563, column: 2, scope: !6307)
!6388 = !DILocation(line: 1565, column: 9, scope: !6307)
!6389 = !DILocation(line: 1565, column: 2, scope: !6307)
!6390 = distinct !DISubprogram(name: "wm_operator_ui_popup_cancel", scope: !3, file: !3, line: 1568, type: !4067, scopeLine: 1569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!6391 = !DILocalVariable(name: "C", arg: 1, scope: !6390, file: !3, line: 1568, type: !1408)
!6392 = !DILocation(line: 1568, column: 58, scope: !6390)
!6393 = !DILocalVariable(name: "userData", arg: 2, scope: !6390, file: !3, line: 1568, type: !1391)
!6394 = !DILocation(line: 1568, column: 67, scope: !6390)
!6395 = !DILocalVariable(name: "data", scope: !6390, file: !3, line: 1570, type: !6278)
!6396 = !DILocation(line: 1570, column: 13, scope: !6390)
!6397 = !DILocation(line: 1570, column: 20, scope: !6390)
!6398 = !DILocalVariable(name: "op", scope: !6390, file: !3, line: 1571, type: !2965)
!6399 = !DILocation(line: 1571, column: 14, scope: !6390)
!6400 = !DILocation(line: 1571, column: 19, scope: !6390)
!6401 = !DILocation(line: 1571, column: 25, scope: !6390)
!6402 = !DILocation(line: 1573, column: 6, scope: !6403)
!6403 = distinct !DILexicalBlock(scope: !6390, file: !3, line: 1573, column: 6)
!6404 = !DILocation(line: 1573, column: 6, scope: !6390)
!6405 = !DILocation(line: 1574, column: 7, scope: !6406)
!6406 = distinct !DILexicalBlock(scope: !6407, file: !3, line: 1574, column: 7)
!6407 = distinct !DILexicalBlock(scope: !6403, file: !3, line: 1573, column: 10)
!6408 = !DILocation(line: 1574, column: 11, scope: !6406)
!6409 = !DILocation(line: 1574, column: 17, scope: !6406)
!6410 = !DILocation(line: 1574, column: 7, scope: !6407)
!6411 = !DILocation(line: 1575, column: 4, scope: !6412)
!6412 = distinct !DILexicalBlock(scope: !6406, file: !3, line: 1574, column: 25)
!6413 = !DILocation(line: 1575, column: 8, scope: !6412)
!6414 = !DILocation(line: 1575, column: 14, scope: !6412)
!6415 = !DILocation(line: 1575, column: 21, scope: !6412)
!6416 = !DILocation(line: 1575, column: 24, scope: !6412)
!6417 = !DILocation(line: 1576, column: 3, scope: !6412)
!6418 = !DILocation(line: 1578, column: 7, scope: !6419)
!6419 = distinct !DILexicalBlock(scope: !6407, file: !3, line: 1578, column: 7)
!6420 = !DILocation(line: 1578, column: 13, scope: !6419)
!6421 = !DILocation(line: 1578, column: 7, scope: !6407)
!6422 = !DILocation(line: 1579, column: 21, scope: !6423)
!6423 = distinct !DILexicalBlock(scope: !6419, file: !3, line: 1578, column: 22)
!6424 = !DILocation(line: 1579, column: 4, scope: !6423)
!6425 = !DILocation(line: 1580, column: 3, scope: !6423)
!6426 = !DILocation(line: 1581, column: 2, scope: !6407)
!6427 = !DILocation(line: 1583, column: 2, scope: !6390)
!6428 = !DILocation(line: 1583, column: 12, scope: !6390)
!6429 = !DILocation(line: 1584, column: 1, scope: !6390)
!6430 = distinct !DISubprogram(name: "WM_operator_props_popup_confirm", scope: !3, file: !3, line: 1645, type: !3944, scopeLine: 1646, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!6431 = !DILocalVariable(name: "C", arg: 1, scope: !6430, file: !3, line: 1645, type: !1414)
!6432 = !DILocation(line: 1645, column: 47, scope: !6430)
!6433 = !DILocalVariable(name: "op", arg: 2, scope: !6430, file: !3, line: 1645, type: !2965)
!6434 = !DILocation(line: 1645, column: 62, scope: !6430)
!6435 = !DILocalVariable(name: "UNUSED_event", arg: 3, scope: !6430, file: !3, line: 1645, type: !3946)
!6436 = !DILocation(line: 1645, column: 81, scope: !6430)
!6437 = !DILocation(line: 1647, column: 36, scope: !6430)
!6438 = !DILocation(line: 1647, column: 39, scope: !6430)
!6439 = !DILocation(line: 1647, column: 9, scope: !6430)
!6440 = !DILocation(line: 1647, column: 2, scope: !6430)
!6441 = distinct !DISubprogram(name: "wm_operator_props_popup_ex", scope: !3, file: !3, line: 1612, type: !6442, scopeLine: 1614, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!6442 = !DISubroutineType(types: !6443)
!6443 = !{!1224, !1414, !2965, !4387, !4387}
!6444 = !DILocalVariable(name: "C", arg: 1, scope: !6441, file: !3, line: 1612, type: !1414)
!6445 = !DILocation(line: 1612, column: 49, scope: !6441)
!6446 = !DILocalVariable(name: "op", arg: 2, scope: !6441, file: !3, line: 1612, type: !2965)
!6447 = !DILocation(line: 1612, column: 64, scope: !6441)
!6448 = !DILocalVariable(name: "do_call", arg: 3, scope: !6441, file: !3, line: 1613, type: !4387)
!6449 = !DILocation(line: 1613, column: 50, scope: !6441)
!6450 = !DILocalVariable(name: "do_redo", arg: 4, scope: !6441, file: !3, line: 1613, type: !4387)
!6451 = !DILocation(line: 1613, column: 70, scope: !6441)
!6452 = !DILocation(line: 1615, column: 7, scope: !6453)
!6453 = distinct !DILexicalBlock(scope: !6441, file: !3, line: 1615, column: 6)
!6454 = !DILocation(line: 1615, column: 11, scope: !6453)
!6455 = !DILocation(line: 1615, column: 17, scope: !6453)
!6456 = !DILocation(line: 1615, column: 22, scope: !6453)
!6457 = !DILocation(line: 1615, column: 41, scope: !6453)
!6458 = !DILocation(line: 1615, column: 6, scope: !6441)
!6459 = !DILocation(line: 1616, column: 15, scope: !6460)
!6460 = distinct !DILexicalBlock(scope: !6453, file: !3, line: 1615, column: 47)
!6461 = !DILocation(line: 1616, column: 19, scope: !6460)
!6462 = !DILocation(line: 1617, column: 90, scope: !6460)
!6463 = !DILocation(line: 1617, column: 94, scope: !6460)
!6464 = !DILocation(line: 1617, column: 100, scope: !6460)
!6465 = !DILocation(line: 1616, column: 3, scope: !6460)
!6466 = !DILocation(line: 1618, column: 3, scope: !6460)
!6467 = !DILocation(line: 1621, column: 6, scope: !6468)
!6468 = distinct !DILexicalBlock(scope: !6441, file: !3, line: 1621, column: 6)
!6469 = !DILocation(line: 1621, column: 6, scope: !6441)
!6470 = !DILocation(line: 1622, column: 8, scope: !6471)
!6471 = distinct !DILexicalBlock(scope: !6472, file: !3, line: 1622, column: 7)
!6472 = distinct !DILexicalBlock(scope: !6468, file: !3, line: 1621, column: 15)
!6473 = !DILocation(line: 1622, column: 12, scope: !6471)
!6474 = !DILocation(line: 1622, column: 18, scope: !6471)
!6475 = !DILocation(line: 1622, column: 23, scope: !6471)
!6476 = !DILocation(line: 1622, column: 38, scope: !6471)
!6477 = !DILocation(line: 1622, column: 7, scope: !6472)
!6478 = !DILocation(line: 1623, column: 16, scope: !6479)
!6479 = distinct !DILexicalBlock(scope: !6471, file: !3, line: 1622, column: 44)
!6480 = !DILocation(line: 1623, column: 20, scope: !6479)
!6481 = !DILocation(line: 1624, column: 87, scope: !6479)
!6482 = !DILocation(line: 1624, column: 91, scope: !6479)
!6483 = !DILocation(line: 1624, column: 97, scope: !6479)
!6484 = !DILocation(line: 1623, column: 4, scope: !6479)
!6485 = !DILocation(line: 1625, column: 4, scope: !6479)
!6486 = !DILocation(line: 1627, column: 2, scope: !6472)
!6487 = !DILocation(line: 1631, column: 7, scope: !6488)
!6488 = distinct !DILexicalBlock(scope: !6441, file: !3, line: 1631, column: 6)
!6489 = !DILocation(line: 1631, column: 15, scope: !6488)
!6490 = !DILocation(line: 1631, column: 22, scope: !6488)
!6491 = !DILocation(line: 1631, column: 29, scope: !6488)
!6492 = !DILocation(line: 1631, column: 6, scope: !6441)
!6493 = !DILocation(line: 1632, column: 41, scope: !6488)
!6494 = !DILocation(line: 1632, column: 44, scope: !6488)
!6495 = !DILocation(line: 1632, column: 53, scope: !6488)
!6496 = !DILocation(line: 1632, column: 51, scope: !6488)
!6497 = !DILocation(line: 1632, column: 64, scope: !6488)
!6498 = !DILocation(line: 1632, column: 10, scope: !6488)
!6499 = !DILocation(line: 1632, column: 3, scope: !6488)
!6500 = !DILocation(line: 1634, column: 15, scope: !6441)
!6501 = !DILocation(line: 1634, column: 71, scope: !6441)
!6502 = !DILocation(line: 1634, column: 2, scope: !6441)
!6503 = !DILocation(line: 1636, column: 6, scope: !6504)
!6504 = distinct !DILexicalBlock(scope: !6441, file: !3, line: 1636, column: 6)
!6505 = !DILocation(line: 1636, column: 6, scope: !6441)
!6506 = !DILocation(line: 1637, column: 20, scope: !6504)
!6507 = !DILocation(line: 1637, column: 23, scope: !6504)
!6508 = !DILocation(line: 1637, column: 3, scope: !6504)
!6509 = !DILocation(line: 1639, column: 2, scope: !6441)
!6510 = !DILocation(line: 1640, column: 1, scope: !6441)
!6511 = distinct !DISubprogram(name: "WM_operator_props_popup_call", scope: !3, file: !3, line: 1654, type: !3944, scopeLine: 1655, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!6512 = !DILocalVariable(name: "C", arg: 1, scope: !6511, file: !3, line: 1654, type: !1414)
!6513 = !DILocation(line: 1654, column: 44, scope: !6511)
!6514 = !DILocalVariable(name: "op", arg: 2, scope: !6511, file: !3, line: 1654, type: !2965)
!6515 = !DILocation(line: 1654, column: 59, scope: !6511)
!6516 = !DILocalVariable(name: "UNUSED_event", arg: 3, scope: !6511, file: !3, line: 1654, type: !3946)
!6517 = !DILocation(line: 1654, column: 78, scope: !6511)
!6518 = !DILocation(line: 1656, column: 36, scope: !6511)
!6519 = !DILocation(line: 1656, column: 39, scope: !6511)
!6520 = !DILocation(line: 1656, column: 9, scope: !6511)
!6521 = !DILocation(line: 1656, column: 2, scope: !6511)
!6522 = distinct !DISubprogram(name: "WM_operator_props_popup", scope: !3, file: !3, line: 1659, type: !3944, scopeLine: 1660, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!6523 = !DILocalVariable(name: "C", arg: 1, scope: !6522, file: !3, line: 1659, type: !1414)
!6524 = !DILocation(line: 1659, column: 39, scope: !6522)
!6525 = !DILocalVariable(name: "op", arg: 2, scope: !6522, file: !3, line: 1659, type: !2965)
!6526 = !DILocation(line: 1659, column: 54, scope: !6522)
!6527 = !DILocalVariable(name: "UNUSED_event", arg: 3, scope: !6522, file: !3, line: 1659, type: !3946)
!6528 = !DILocation(line: 1659, column: 73, scope: !6522)
!6529 = !DILocation(line: 1661, column: 36, scope: !6522)
!6530 = !DILocation(line: 1661, column: 39, scope: !6522)
!6531 = !DILocation(line: 1661, column: 9, scope: !6522)
!6532 = !DILocation(line: 1661, column: 2, scope: !6522)
!6533 = distinct !DISubprogram(name: "WM_operator_props_dialog_popup", scope: !3, file: !3, line: 1664, type: !6267, scopeLine: 1665, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!6534 = !DILocalVariable(name: "C", arg: 1, scope: !6533, file: !3, line: 1664, type: !1414)
!6535 = !DILocation(line: 1664, column: 46, scope: !6533)
!6536 = !DILocalVariable(name: "op", arg: 2, scope: !6533, file: !3, line: 1664, type: !2965)
!6537 = !DILocation(line: 1664, column: 61, scope: !6533)
!6538 = !DILocalVariable(name: "width", arg: 3, scope: !6533, file: !3, line: 1664, type: !1224)
!6539 = !DILocation(line: 1664, column: 69, scope: !6533)
!6540 = !DILocalVariable(name: "height", arg: 4, scope: !6533, file: !3, line: 1664, type: !1224)
!6541 = !DILocation(line: 1664, column: 80, scope: !6533)
!6542 = !DILocalVariable(name: "data", scope: !6533, file: !3, line: 1666, type: !6278)
!6543 = !DILocation(line: 1666, column: 13, scope: !6533)
!6544 = !DILocation(line: 1666, column: 20, scope: !6533)
!6545 = !DILocation(line: 1668, column: 13, scope: !6533)
!6546 = !DILocation(line: 1668, column: 2, scope: !6533)
!6547 = !DILocation(line: 1668, column: 8, scope: !6533)
!6548 = !DILocation(line: 1668, column: 11, scope: !6533)
!6549 = !DILocation(line: 1669, column: 16, scope: !6533)
!6550 = !DILocation(line: 1669, column: 2, scope: !6533)
!6551 = !DILocation(line: 1669, column: 8, scope: !6533)
!6552 = !DILocation(line: 1669, column: 14, scope: !6533)
!6553 = !DILocation(line: 1670, column: 17, scope: !6533)
!6554 = !DILocation(line: 1670, column: 2, scope: !6533)
!6555 = !DILocation(line: 1670, column: 8, scope: !6533)
!6556 = !DILocation(line: 1670, column: 15, scope: !6533)
!6557 = !DILocation(line: 1671, column: 2, scope: !6533)
!6558 = !DILocation(line: 1671, column: 8, scope: !6533)
!6559 = !DILocation(line: 1671, column: 16, scope: !6533)
!6560 = !DILocation(line: 1674, column: 15, scope: !6533)
!6561 = !DILocation(line: 1674, column: 96, scope: !6533)
!6562 = !DILocation(line: 1674, column: 2, scope: !6533)
!6563 = !DILocation(line: 1676, column: 2, scope: !6533)
!6564 = distinct !DISubprogram(name: "wm_block_dialog_create", scope: !3, file: !3, line: 1503, type: !3254, scopeLine: 1504, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!6565 = !DILocalVariable(name: "C", arg: 1, scope: !6564, file: !3, line: 1503, type: !1414)
!6566 = !DILocation(line: 1503, column: 50, scope: !6564)
!6567 = !DILocalVariable(name: "ar", arg: 2, scope: !6564, file: !3, line: 1503, type: !3259)
!6568 = !DILocation(line: 1503, column: 62, scope: !6564)
!6569 = !DILocalVariable(name: "userData", arg: 3, scope: !6564, file: !3, line: 1503, type: !1391)
!6570 = !DILocation(line: 1503, column: 72, scope: !6564)
!6571 = !DILocalVariable(name: "data", scope: !6564, file: !3, line: 1505, type: !6278)
!6572 = !DILocation(line: 1505, column: 13, scope: !6564)
!6573 = !DILocation(line: 1505, column: 20, scope: !6564)
!6574 = !DILocalVariable(name: "op", scope: !6564, file: !3, line: 1506, type: !2965)
!6575 = !DILocation(line: 1506, column: 14, scope: !6564)
!6576 = !DILocation(line: 1506, column: 19, scope: !6564)
!6577 = !DILocation(line: 1506, column: 25, scope: !6564)
!6578 = !DILocalVariable(name: "block", scope: !6564, file: !3, line: 1507, type: !3256)
!6579 = !DILocation(line: 1507, column: 11, scope: !6564)
!6580 = !DILocalVariable(name: "layout", scope: !6564, file: !3, line: 1508, type: !5529)
!6581 = !DILocation(line: 1508, column: 12, scope: !6564)
!6582 = !DILocalVariable(name: "style", scope: !6564, file: !3, line: 1509, type: !6326)
!6583 = !DILocation(line: 1509, column: 11, scope: !6564)
!6584 = !DILocation(line: 1509, column: 19, scope: !6564)
!6585 = !DILocation(line: 1511, column: 23, scope: !6564)
!6586 = !DILocation(line: 1511, column: 26, scope: !6564)
!6587 = !DILocation(line: 1511, column: 10, scope: !6564)
!6588 = !DILocation(line: 1511, column: 8, scope: !6564)
!6589 = !DILocation(line: 1512, column: 19, scope: !6564)
!6590 = !DILocation(line: 1512, column: 2, scope: !6564)
!6591 = !DILocation(line: 1516, column: 17, scope: !6564)
!6592 = !DILocation(line: 1516, column: 2, scope: !6564)
!6593 = !DILocation(line: 1518, column: 25, scope: !6564)
!6594 = !DILocation(line: 1518, column: 75, scope: !6564)
!6595 = !DILocation(line: 1518, column: 81, scope: !6564)
!6596 = !DILocation(line: 1518, column: 88, scope: !6564)
!6597 = !DILocation(line: 1518, column: 94, scope: !6564)
!6598 = !DILocation(line: 1518, column: 105, scope: !6564)
!6599 = !DILocation(line: 1518, column: 11, scope: !6564)
!6600 = !DILocation(line: 1518, column: 9, scope: !6564)
!6601 = !DILocation(line: 1520, column: 17, scope: !6564)
!6602 = !DILocation(line: 1520, column: 41, scope: !6564)
!6603 = !DILocation(line: 1520, column: 2, scope: !6564)
!6604 = !DILocation(line: 1522, column: 23, scope: !6564)
!6605 = !DILocation(line: 1522, column: 26, scope: !6564)
!6606 = !DILocation(line: 1522, column: 34, scope: !6564)
!6607 = !DILocation(line: 1522, column: 2, scope: !6564)
!6608 = !DILocation(line: 1525, column: 17, scope: !6564)
!6609 = !DILocation(line: 1525, column: 2, scope: !6564)
!6610 = !DILocalVariable(name: "col_block", scope: !6611, file: !3, line: 1529, type: !3256)
!6611 = distinct !DILexicalBlock(scope: !6564, file: !3, line: 1528, column: 2)
!6612 = !DILocation(line: 1529, column: 12, scope: !6611)
!6613 = !DILocalVariable(name: "col", scope: !6611, file: !3, line: 1530, type: !5529)
!6614 = !DILocation(line: 1530, column: 13, scope: !6611)
!6615 = !DILocalVariable(name: "btn", scope: !6611, file: !3, line: 1531, type: !5627)
!6616 = !DILocation(line: 1531, column: 10, scope: !6611)
!6617 = !DILocation(line: 1533, column: 24, scope: !6611)
!6618 = !DILocation(line: 1533, column: 9, scope: !6611)
!6619 = !DILocation(line: 1533, column: 7, scope: !6611)
!6620 = !DILocation(line: 1534, column: 32, scope: !6611)
!6621 = !DILocation(line: 1534, column: 15, scope: !6611)
!6622 = !DILocation(line: 1534, column: 13, scope: !6611)
!6623 = !DILocation(line: 1536, column: 18, scope: !6611)
!6624 = !DILocation(line: 1536, column: 62, scope: !6611)
!6625 = !DILocation(line: 1536, column: 9, scope: !6611)
!6626 = !DILocation(line: 1536, column: 7, scope: !6611)
!6627 = !DILocation(line: 1537, column: 16, scope: !6611)
!6628 = !DILocation(line: 1537, column: 37, scope: !6611)
!6629 = !DILocation(line: 1537, column: 43, scope: !6611)
!6630 = !DILocation(line: 1537, column: 3, scope: !6611)
!6631 = !DILocation(line: 1541, column: 21, scope: !6564)
!6632 = !DILocation(line: 1541, column: 31, scope: !6564)
!6633 = !DILocation(line: 1541, column: 37, scope: !6564)
!6634 = !DILocation(line: 1541, column: 43, scope: !6564)
!6635 = !DILocation(line: 1541, column: 49, scope: !6564)
!6636 = !DILocation(line: 1541, column: 55, scope: !6564)
!6637 = !DILocation(line: 1541, column: 62, scope: !6564)
!6638 = !DILocation(line: 1541, column: 2, scope: !6564)
!6639 = !DILocation(line: 1543, column: 9, scope: !6564)
!6640 = !DILocation(line: 1543, column: 2, scope: !6564)
!6641 = distinct !DISubprogram(name: "wm_operator_ui_popup_ok", scope: !3, file: !3, line: 1586, type: !6642, scopeLine: 1587, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!6642 = !DISubroutineType(types: !6643)
!6643 = !{null, !1408, !1391, !1224}
!6644 = !DILocalVariable(name: "C", arg: 1, scope: !6641, file: !3, line: 1586, type: !1408)
!6645 = !DILocation(line: 1586, column: 54, scope: !6641)
!6646 = !DILocalVariable(name: "arg", arg: 2, scope: !6641, file: !3, line: 1586, type: !1391)
!6647 = !DILocation(line: 1586, column: 63, scope: !6641)
!6648 = !DILocalVariable(name: "retval", arg: 3, scope: !6641, file: !3, line: 1586, type: !1224)
!6649 = !DILocation(line: 1586, column: 72, scope: !6641)
!6650 = !DILocalVariable(name: "data", scope: !6641, file: !3, line: 1588, type: !6278)
!6651 = !DILocation(line: 1588, column: 13, scope: !6641)
!6652 = !DILocation(line: 1588, column: 20, scope: !6641)
!6653 = !DILocalVariable(name: "op", scope: !6641, file: !3, line: 1589, type: !2965)
!6654 = !DILocation(line: 1589, column: 14, scope: !6641)
!6655 = !DILocation(line: 1589, column: 19, scope: !6641)
!6656 = !DILocation(line: 1589, column: 25, scope: !6641)
!6657 = !DILocation(line: 1591, column: 6, scope: !6658)
!6658 = distinct !DILexicalBlock(scope: !6641, file: !3, line: 1591, column: 6)
!6659 = !DILocation(line: 1591, column: 9, scope: !6658)
!6660 = !DILocation(line: 1591, column: 12, scope: !6658)
!6661 = !DILocation(line: 1591, column: 19, scope: !6658)
!6662 = !DILocation(line: 1591, column: 6, scope: !6641)
!6663 = !DILocation(line: 1592, column: 23, scope: !6658)
!6664 = !DILocation(line: 1592, column: 26, scope: !6658)
!6665 = !DILocation(line: 1592, column: 3, scope: !6658)
!6666 = !DILocation(line: 1594, column: 2, scope: !6641)
!6667 = !DILocation(line: 1594, column: 12, scope: !6641)
!6668 = !DILocation(line: 1595, column: 1, scope: !6641)
!6669 = distinct !DISubprogram(name: "WM_operator_redo_popup", scope: !3, file: !3, line: 1679, type: !3871, scopeLine: 1680, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!6670 = !DILocalVariable(name: "C", arg: 1, scope: !6669, file: !3, line: 1679, type: !1414)
!6671 = !DILocation(line: 1679, column: 38, scope: !6669)
!6672 = !DILocalVariable(name: "op", arg: 2, scope: !6669, file: !3, line: 1679, type: !2965)
!6673 = !DILocation(line: 1679, column: 53, scope: !6669)
!6674 = !DILocation(line: 1682, column: 7, scope: !6675)
!6675 = distinct !DILexicalBlock(scope: !6669, file: !3, line: 1682, column: 6)
!6676 = !DILocation(line: 1682, column: 11, scope: !6675)
!6677 = !DILocation(line: 1682, column: 17, scope: !6675)
!6678 = !DILocation(line: 1682, column: 22, scope: !6675)
!6679 = !DILocation(line: 1682, column: 41, scope: !6675)
!6680 = !DILocation(line: 1682, column: 6, scope: !6669)
!6681 = !DILocation(line: 1683, column: 30, scope: !6682)
!6682 = distinct !DILexicalBlock(scope: !6675, file: !3, line: 1682, column: 47)
!6683 = !DILocation(line: 1683, column: 15, scope: !6682)
!6684 = !DILocation(line: 1684, column: 95, scope: !6682)
!6685 = !DILocation(line: 1684, column: 99, scope: !6682)
!6686 = !DILocation(line: 1684, column: 105, scope: !6682)
!6687 = !DILocation(line: 1683, column: 3, scope: !6682)
!6688 = !DILocation(line: 1685, column: 3, scope: !6682)
!6689 = !DILocation(line: 1687, column: 6, scope: !6690)
!6690 = distinct !DILexicalBlock(scope: !6669, file: !3, line: 1687, column: 6)
!6691 = !DILocation(line: 1687, column: 10, scope: !6690)
!6692 = !DILocation(line: 1687, column: 16, scope: !6690)
!6693 = !DILocation(line: 1687, column: 21, scope: !6690)
!6694 = !DILocation(line: 1687, column: 24, scope: !6690)
!6695 = !DILocation(line: 1687, column: 28, scope: !6690)
!6696 = !DILocation(line: 1687, column: 34, scope: !6690)
!6697 = !DILocation(line: 1687, column: 39, scope: !6690)
!6698 = !DILocation(line: 1687, column: 42, scope: !6690)
!6699 = !DILocation(line: 1687, column: 6, scope: !6669)
!6700 = !DILocation(line: 1688, column: 30, scope: !6701)
!6701 = distinct !DILexicalBlock(scope: !6690, file: !3, line: 1687, column: 48)
!6702 = !DILocation(line: 1688, column: 15, scope: !6701)
!6703 = !DILocation(line: 1688, column: 82, scope: !6701)
!6704 = !DILocation(line: 1688, column: 86, scope: !6701)
!6705 = !DILocation(line: 1688, column: 92, scope: !6701)
!6706 = !DILocation(line: 1688, column: 3, scope: !6701)
!6707 = !DILocation(line: 1689, column: 3, scope: !6701)
!6708 = !DILocation(line: 1692, column: 13, scope: !6669)
!6709 = !DILocation(line: 1692, column: 38, scope: !6669)
!6710 = !DILocation(line: 1692, column: 2, scope: !6669)
!6711 = !DILocation(line: 1694, column: 2, scope: !6669)
!6712 = !DILocation(line: 1695, column: 1, scope: !6669)
!6713 = distinct !DISubprogram(name: "wm_block_create_redo", scope: !3, file: !3, line: 1426, type: !3254, scopeLine: 1427, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!6714 = !DILocalVariable(name: "C", arg: 1, scope: !6713, file: !3, line: 1426, type: !1414)
!6715 = !DILocation(line: 1426, column: 48, scope: !6713)
!6716 = !DILocalVariable(name: "ar", arg: 2, scope: !6713, file: !3, line: 1426, type: !3259)
!6717 = !DILocation(line: 1426, column: 60, scope: !6713)
!6718 = !DILocalVariable(name: "arg_op", arg: 3, scope: !6713, file: !3, line: 1426, type: !1391)
!6719 = !DILocation(line: 1426, column: 70, scope: !6713)
!6720 = !DILocalVariable(name: "op", scope: !6713, file: !3, line: 1428, type: !2965)
!6721 = !DILocation(line: 1428, column: 14, scope: !6713)
!6722 = !DILocation(line: 1428, column: 19, scope: !6713)
!6723 = !DILocalVariable(name: "block", scope: !6713, file: !3, line: 1429, type: !3256)
!6724 = !DILocation(line: 1429, column: 11, scope: !6713)
!6725 = !DILocalVariable(name: "layout", scope: !6713, file: !3, line: 1430, type: !5529)
!6726 = !DILocation(line: 1430, column: 12, scope: !6713)
!6727 = !DILocalVariable(name: "style", scope: !6713, file: !3, line: 1431, type: !6326)
!6728 = !DILocation(line: 1431, column: 11, scope: !6713)
!6729 = !DILocation(line: 1431, column: 19, scope: !6713)
!6730 = !DILocalVariable(name: "width", scope: !6713, file: !3, line: 1432, type: !1224)
!6731 = !DILocation(line: 1432, column: 6, scope: !6713)
!6732 = !DILocation(line: 1432, column: 19, scope: !6713)
!6733 = !DILocation(line: 1432, column: 17, scope: !6713)
!6734 = !DILocation(line: 1434, column: 23, scope: !6713)
!6735 = !DILocation(line: 1434, column: 26, scope: !6713)
!6736 = !DILocation(line: 1434, column: 10, scope: !6713)
!6737 = !DILocation(line: 1434, column: 8, scope: !6713)
!6738 = !DILocation(line: 1435, column: 19, scope: !6713)
!6739 = !DILocation(line: 1435, column: 2, scope: !6713)
!6740 = !DILocation(line: 1436, column: 17, scope: !6713)
!6741 = !DILocation(line: 1436, column: 2, scope: !6713)
!6742 = !DILocation(line: 1442, column: 23, scope: !6713)
!6743 = !DILocation(line: 1442, column: 48, scope: !6713)
!6744 = !DILocation(line: 1442, column: 2, scope: !6713)
!6745 = !DILocation(line: 1443, column: 25, scope: !6713)
!6746 = !DILocation(line: 1443, column: 75, scope: !6713)
!6747 = !DILocation(line: 1443, column: 82, scope: !6713)
!6748 = !DILocation(line: 1443, column: 96, scope: !6713)
!6749 = !DILocation(line: 1443, column: 11, scope: !6713)
!6750 = !DILocation(line: 1443, column: 9, scope: !6713)
!6751 = !DILocation(line: 1445, column: 6, scope: !6752)
!6752 = distinct !DILexicalBlock(scope: !6713, file: !3, line: 1445, column: 6)
!6753 = !DILocation(line: 1445, column: 34, scope: !6752)
!6754 = !DILocation(line: 1445, column: 12, scope: !6752)
!6755 = !DILocation(line: 1445, column: 9, scope: !6752)
!6756 = !DILocation(line: 1445, column: 6, scope: !6713)
!6757 = !DILocation(line: 1446, column: 37, scope: !6758)
!6758 = distinct !DILexicalBlock(scope: !6752, file: !3, line: 1446, column: 7)
!6759 = !DILocation(line: 1446, column: 40, scope: !6758)
!6760 = !DILocation(line: 1446, column: 44, scope: !6758)
!6761 = !DILocation(line: 1446, column: 50, scope: !6758)
!6762 = !DILocation(line: 1446, column: 8, scope: !6758)
!6763 = !DILocation(line: 1446, column: 7, scope: !6752)
!6764 = !DILocation(line: 1447, column: 23, scope: !6758)
!6765 = !DILocation(line: 1447, column: 4, scope: !6758)
!6766 = !DILocation(line: 1446, column: 54, scope: !6758)
!6767 = !DILocation(line: 1449, column: 6, scope: !6768)
!6768 = distinct !DILexicalBlock(scope: !6713, file: !3, line: 1449, column: 6)
!6769 = !DILocation(line: 1449, column: 10, scope: !6768)
!6770 = !DILocation(line: 1449, column: 16, scope: !6768)
!6771 = !DILocation(line: 1449, column: 21, scope: !6768)
!6772 = !DILocation(line: 1449, column: 6, scope: !6713)
!6773 = !DILocation(line: 1450, column: 13, scope: !6774)
!6774 = distinct !DILexicalBlock(scope: !6775, file: !3, line: 1450, column: 3)
!6775 = distinct !DILexicalBlock(scope: !6768, file: !3, line: 1449, column: 37)
!6776 = !DILocation(line: 1450, column: 17, scope: !6774)
!6777 = !DILocation(line: 1450, column: 23, scope: !6774)
!6778 = !DILocation(line: 1450, column: 11, scope: !6774)
!6779 = !DILocation(line: 1450, column: 8, scope: !6774)
!6780 = !DILocation(line: 1450, column: 30, scope: !6781)
!6781 = distinct !DILexicalBlock(scope: !6774, file: !3, line: 1450, column: 3)
!6782 = !DILocation(line: 1450, column: 3, scope: !6774)
!6783 = !DILocation(line: 1451, column: 25, scope: !6784)
!6784 = distinct !DILexicalBlock(scope: !6781, file: !3, line: 1450, column: 49)
!6785 = !DILocation(line: 1451, column: 28, scope: !6784)
!6786 = !DILocation(line: 1451, column: 36, scope: !6784)
!6787 = !DILocation(line: 1451, column: 4, scope: !6784)
!6788 = !DILocation(line: 1452, column: 3, scope: !6784)
!6789 = !DILocation(line: 1450, column: 39, scope: !6781)
!6790 = !DILocation(line: 1450, column: 43, scope: !6781)
!6791 = !DILocation(line: 1450, column: 37, scope: !6781)
!6792 = !DILocation(line: 1450, column: 3, scope: !6781)
!6793 = distinct !{!6793, !6782, !6794}
!6794 = !DILocation(line: 1452, column: 3, scope: !6774)
!6795 = !DILocation(line: 1453, column: 2, scope: !6775)
!6796 = !DILocation(line: 1455, column: 24, scope: !6797)
!6797 = distinct !DILexicalBlock(scope: !6768, file: !3, line: 1454, column: 7)
!6798 = !DILocation(line: 1455, column: 27, scope: !6797)
!6799 = !DILocation(line: 1455, column: 35, scope: !6797)
!6800 = !DILocation(line: 1455, column: 3, scope: !6797)
!6801 = !DILocation(line: 1458, column: 21, scope: !6713)
!6802 = !DILocation(line: 1458, column: 2, scope: !6713)
!6803 = !DILocation(line: 1460, column: 9, scope: !6713)
!6804 = !DILocation(line: 1460, column: 2, scope: !6713)
!6805 = distinct !DISubprogram(name: "WM_recover_last_session", scope: !3, file: !3, line: 2684, type: !6806, scopeLine: 2685, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!6806 = !DISubroutineType(types: !6807)
!6807 = !{null, !1414, !6808}
!6808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6809, size: 64)
!6809 = !DIDerivedType(tag: DW_TAG_typedef, name: "ReportList", file: !41, line: 112, baseType: !3110)
!6810 = !DILocalVariable(name: "C", arg: 1, scope: !6805, file: !3, line: 2684, type: !1414)
!6811 = !DILocation(line: 2684, column: 40, scope: !6805)
!6812 = !DILocalVariable(name: "reports", arg: 2, scope: !6805, file: !3, line: 2684, type: !6808)
!6813 = !DILocation(line: 2684, column: 55, scope: !6805)
!6814 = !DILocalVariable(name: "filepath", scope: !6805, file: !3, line: 2686, type: !1446)
!6815 = !DILocation(line: 2686, column: 7, scope: !6805)
!6816 = !DILocation(line: 2688, column: 28, scope: !6805)
!6817 = !DILocation(line: 2688, column: 38, scope: !6805)
!6818 = !DILocation(line: 2688, column: 2, scope: !6805)
!6819 = !DILocation(line: 2690, column: 6, scope: !6820)
!6820 = distinct !DILexicalBlock(scope: !6805, file: !3, line: 2690, column: 6)
!6821 = !DILocation(line: 2690, column: 14, scope: !6820)
!6822 = !DILocation(line: 2690, column: 28, scope: !6820)
!6823 = !DILocation(line: 2690, column: 17, scope: !6820)
!6824 = !DILocation(line: 2690, column: 6, scope: !6805)
!6825 = !DILocation(line: 2691, column: 15, scope: !6826)
!6826 = distinct !DILexicalBlock(scope: !6820, file: !3, line: 2690, column: 39)
!6827 = !DILocation(line: 2693, column: 23, scope: !6826)
!6828 = !DILocation(line: 2693, column: 26, scope: !6826)
!6829 = !DILocation(line: 2693, column: 36, scope: !6826)
!6830 = !DILocation(line: 2693, column: 3, scope: !6826)
!6831 = !DILocation(line: 2695, column: 15, scope: !6826)
!6832 = !DILocation(line: 2698, column: 9, scope: !6833)
!6833 = distinct !DILexicalBlock(scope: !6826, file: !3, line: 2698, column: 7)
!6834 = !DILocation(line: 2698, column: 15, scope: !6833)
!6835 = !DILocation(line: 2698, column: 7, scope: !6833)
!6836 = !DILocation(line: 2698, column: 7, scope: !6826)
!6837 = !DILocation(line: 2699, column: 18, scope: !6833)
!6838 = !DILocation(line: 2699, column: 4, scope: !6833)
!6839 = !DILocation(line: 2701, column: 20, scope: !6840)
!6840 = distinct !DILexicalBlock(scope: !6833, file: !3, line: 2700, column: 8)
!6841 = !DILocation(line: 2702, column: 16, scope: !6840)
!6842 = !DILocation(line: 2705, column: 2, scope: !6826)
!6843 = !DILocation(line: 2706, column: 1, scope: !6805)
!6844 = distinct !DISubprogram(name: "wm_file_read_opwrap", scope: !3, file: !3, line: 2248, type: !6845, scopeLine: 2250, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!6845 = !DISubroutineType(types: !6846)
!6846 = !{!2328, !1414, !2979, !6808, !4387}
!6847 = !DILocalVariable(name: "C", arg: 1, scope: !6844, file: !3, line: 2248, type: !1414)
!6848 = !DILocation(line: 2248, column: 43, scope: !6844)
!6849 = !DILocalVariable(name: "filepath", arg: 2, scope: !6844, file: !3, line: 2248, type: !2979)
!6850 = !DILocation(line: 2248, column: 58, scope: !6844)
!6851 = !DILocalVariable(name: "reports", arg: 3, scope: !6844, file: !3, line: 2248, type: !6808)
!6852 = !DILocation(line: 2248, column: 80, scope: !6844)
!6853 = !DILocalVariable(name: "autoexec_init", arg: 4, scope: !6844, file: !3, line: 2249, type: !4387)
!6854 = !DILocation(line: 2249, column: 44, scope: !6844)
!6855 = !DILocalVariable(name: "success", scope: !6844, file: !3, line: 2251, type: !2328)
!6856 = !DILocation(line: 2251, column: 7, scope: !6844)
!6857 = !DILocation(line: 2255, column: 24, scope: !6844)
!6858 = !DILocation(line: 2255, column: 2, scope: !6844)
!6859 = !DILocation(line: 2257, column: 6, scope: !6860)
!6860 = distinct !DILexicalBlock(scope: !6844, file: !3, line: 2257, column: 6)
!6861 = !DILocation(line: 2257, column: 6, scope: !6844)
!6862 = !DILocation(line: 2258, column: 25, scope: !6863)
!6863 = distinct !DILexicalBlock(scope: !6860, file: !3, line: 2257, column: 21)
!6864 = !DILocation(line: 2258, column: 3, scope: !6863)
!6865 = !DILocation(line: 2259, column: 2, scope: !6863)
!6866 = !DILocation(line: 2261, column: 25, scope: !6844)
!6867 = !DILocation(line: 2261, column: 28, scope: !6844)
!6868 = !DILocation(line: 2261, column: 38, scope: !6844)
!6869 = !DILocation(line: 2261, column: 12, scope: !6844)
!6870 = !DILocation(line: 2261, column: 10, scope: !6844)
!6871 = !DILocation(line: 2263, column: 9, scope: !6844)
!6872 = !DILocation(line: 2263, column: 2, scope: !6844)
!6873 = distinct !DISubprogram(name: "WM_paint_cursor_activate", scope: !3, file: !3, line: 3024, type: !6874, scopeLine: 3026, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!6874 = !DISubroutineType(types: !6875)
!6875 = !{!1391, !6206, !6876, !6877, !1391}
!6876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6184, size: 64)
!6877 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmPaintCursorDraw", file: !936, line: 572, baseType: !6878)
!6878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6879, size: 64)
!6879 = !DISubroutineType(types: !6880)
!6880 = !{null, !1408, !1224, !1224, !1391}
!6881 = !DILocalVariable(name: "wm", arg: 1, scope: !6873, file: !3, line: 3024, type: !6206)
!6882 = !DILocation(line: 3024, column: 49, scope: !6873)
!6883 = !DILocalVariable(name: "poll", arg: 2, scope: !6873, file: !3, line: 3024, type: !6876)
!6884 = !DILocation(line: 3024, column: 59, scope: !6873)
!6885 = !DILocalVariable(name: "draw", arg: 3, scope: !6873, file: !3, line: 3025, type: !6877)
!6886 = !DILocation(line: 3025, column: 50, scope: !6873)
!6887 = !DILocalVariable(name: "customdata", arg: 4, scope: !6873, file: !3, line: 3025, type: !1391)
!6888 = !DILocation(line: 3025, column: 62, scope: !6873)
!6889 = !DILocalVariable(name: "pc", scope: !6873, file: !3, line: 3027, type: !1395)
!6890 = !DILocation(line: 3027, column: 17, scope: !6873)
!6891 = !DILocation(line: 3027, column: 22, scope: !6873)
!6892 = !DILocation(line: 3029, column: 15, scope: !6873)
!6893 = !DILocation(line: 3029, column: 19, scope: !6873)
!6894 = !DILocation(line: 3029, column: 33, scope: !6873)
!6895 = !DILocation(line: 3029, column: 2, scope: !6873)
!6896 = !DILocation(line: 3031, column: 19, scope: !6873)
!6897 = !DILocation(line: 3031, column: 2, scope: !6873)
!6898 = !DILocation(line: 3031, column: 6, scope: !6873)
!6899 = !DILocation(line: 3031, column: 17, scope: !6873)
!6900 = !DILocation(line: 3032, column: 13, scope: !6873)
!6901 = !DILocation(line: 3032, column: 2, scope: !6873)
!6902 = !DILocation(line: 3032, column: 6, scope: !6873)
!6903 = !DILocation(line: 3032, column: 11, scope: !6873)
!6904 = !DILocation(line: 3033, column: 13, scope: !6873)
!6905 = !DILocation(line: 3033, column: 2, scope: !6873)
!6906 = !DILocation(line: 3033, column: 6, scope: !6873)
!6907 = !DILocation(line: 3033, column: 11, scope: !6873)
!6908 = !DILocation(line: 3035, column: 9, scope: !6873)
!6909 = !DILocation(line: 3035, column: 2, scope: !6873)
!6910 = distinct !DISubprogram(name: "WM_paint_cursor_end", scope: !3, file: !3, line: 3038, type: !6911, scopeLine: 3039, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!6911 = !DISubroutineType(types: !6912)
!6912 = !{null, !6206, !1391}
!6913 = !DILocalVariable(name: "wm", arg: 1, scope: !6910, file: !3, line: 3038, type: !6206)
!6914 = !DILocation(line: 3038, column: 43, scope: !6910)
!6915 = !DILocalVariable(name: "handle", arg: 2, scope: !6910, file: !3, line: 3038, type: !1391)
!6916 = !DILocation(line: 3038, column: 53, scope: !6910)
!6917 = !DILocalVariable(name: "pc", scope: !6910, file: !3, line: 3040, type: !1395)
!6918 = !DILocation(line: 3040, column: 17, scope: !6910)
!6919 = !DILocation(line: 3042, column: 12, scope: !6920)
!6920 = distinct !DILexicalBlock(scope: !6910, file: !3, line: 3042, column: 2)
!6921 = !DILocation(line: 3042, column: 16, scope: !6920)
!6922 = !DILocation(line: 3042, column: 29, scope: !6920)
!6923 = !DILocation(line: 3042, column: 10, scope: !6920)
!6924 = !DILocation(line: 3042, column: 7, scope: !6920)
!6925 = !DILocation(line: 3042, column: 36, scope: !6926)
!6926 = distinct !DILexicalBlock(scope: !6920, file: !3, line: 3042, column: 2)
!6927 = !DILocation(line: 3042, column: 2, scope: !6920)
!6928 = !DILocation(line: 3043, column: 7, scope: !6929)
!6929 = distinct !DILexicalBlock(scope: !6930, file: !3, line: 3043, column: 7)
!6930 = distinct !DILexicalBlock(scope: !6926, file: !3, line: 3042, column: 55)
!6931 = !DILocation(line: 3043, column: 30, scope: !6929)
!6932 = !DILocation(line: 3043, column: 13, scope: !6929)
!6933 = !DILocation(line: 3043, column: 10, scope: !6929)
!6934 = !DILocation(line: 3043, column: 7, scope: !6930)
!6935 = !DILocation(line: 3044, column: 17, scope: !6936)
!6936 = distinct !DILexicalBlock(scope: !6929, file: !3, line: 3043, column: 38)
!6937 = !DILocation(line: 3044, column: 21, scope: !6936)
!6938 = !DILocation(line: 3044, column: 35, scope: !6936)
!6939 = !DILocation(line: 3044, column: 4, scope: !6936)
!6940 = !DILocation(line: 3045, column: 4, scope: !6936)
!6941 = !DILocation(line: 3045, column: 14, scope: !6936)
!6942 = !DILocation(line: 3046, column: 4, scope: !6936)
!6943 = !DILocation(line: 3048, column: 2, scope: !6930)
!6944 = !DILocation(line: 3042, column: 45, scope: !6926)
!6945 = !DILocation(line: 3042, column: 49, scope: !6926)
!6946 = !DILocation(line: 3042, column: 43, scope: !6926)
!6947 = !DILocation(line: 3042, column: 2, scope: !6926)
!6948 = distinct !{!6948, !6927, !6949}
!6949 = !DILocation(line: 3048, column: 2, scope: !6920)
!6950 = !DILocation(line: 3049, column: 1, scope: !6910)
!6951 = distinct !DISubprogram(name: "WM_border_select_invoke", scope: !3, file: !3, line: 3115, type: !3944, scopeLine: 3116, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!6952 = !DILocalVariable(name: "C", arg: 1, scope: !6951, file: !3, line: 3115, type: !1414)
!6953 = !DILocation(line: 3115, column: 39, scope: !6951)
!6954 = !DILocalVariable(name: "op", arg: 2, scope: !6951, file: !3, line: 3115, type: !2965)
!6955 = !DILocation(line: 3115, column: 54, scope: !6951)
!6956 = !DILocalVariable(name: "event", arg: 3, scope: !6951, file: !3, line: 3115, type: !3946)
!6957 = !DILocation(line: 3115, column: 73, scope: !6951)
!6958 = !DILocation(line: 3117, column: 6, scope: !6959)
!6959 = distinct !DILexicalBlock(scope: !6951, file: !3, line: 3117, column: 6)
!6960 = !DILocation(line: 3117, column: 6, scope: !6951)
!6961 = !DILocation(line: 3118, column: 35, scope: !6959)
!6962 = !DILocation(line: 3118, column: 38, scope: !6959)
!6963 = !DILocation(line: 3118, column: 20, scope: !6959)
!6964 = !DILocation(line: 3118, column: 3, scope: !6959)
!6965 = !DILocation(line: 3118, column: 7, scope: !6959)
!6966 = !DILocation(line: 3118, column: 18, scope: !6959)
!6967 = !DILocation(line: 3120, column: 35, scope: !6959)
!6968 = !DILocation(line: 3120, column: 38, scope: !6959)
!6969 = !DILocation(line: 3120, column: 20, scope: !6959)
!6970 = !DILocation(line: 3120, column: 3, scope: !6959)
!6971 = !DILocation(line: 3120, column: 7, scope: !6959)
!6972 = !DILocation(line: 3120, column: 18, scope: !6959)
!6973 = !DILocation(line: 3123, column: 29, scope: !6951)
!6974 = !DILocation(line: 3123, column: 32, scope: !6951)
!6975 = !DILocation(line: 3123, column: 2, scope: !6951)
!6976 = !DILocation(line: 3125, column: 24, scope: !6951)
!6977 = !DILocation(line: 3125, column: 2, scope: !6951)
!6978 = !DILocation(line: 3127, column: 2, scope: !6951)
!6979 = distinct !DISubprogram(name: "WM_border_select_modal", scope: !3, file: !3, line: 3130, type: !3944, scopeLine: 3131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!6980 = !DILocalVariable(name: "C", arg: 1, scope: !6979, file: !3, line: 3130, type: !1414)
!6981 = !DILocation(line: 3130, column: 38, scope: !6979)
!6982 = !DILocalVariable(name: "op", arg: 2, scope: !6979, file: !3, line: 3130, type: !2965)
!6983 = !DILocation(line: 3130, column: 53, scope: !6979)
!6984 = !DILocalVariable(name: "event", arg: 3, scope: !6979, file: !3, line: 3130, type: !3946)
!6985 = !DILocation(line: 3130, column: 72, scope: !6979)
!6986 = !DILocalVariable(name: "gesture", scope: !6979, file: !3, line: 3132, type: !6987)
!6987 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6988, size: 64)
!6988 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmGesture", file: !936, line: 415, baseType: !3180)
!6989 = !DILocation(line: 3132, column: 13, scope: !6979)
!6990 = !DILocation(line: 3132, column: 23, scope: !6979)
!6991 = !DILocation(line: 3132, column: 27, scope: !6979)
!6992 = !DILocalVariable(name: "rect", scope: !6979, file: !3, line: 3133, type: !6049)
!6993 = !DILocation(line: 3133, column: 8, scope: !6979)
!6994 = !DILocation(line: 3133, column: 15, scope: !6979)
!6995 = !DILocation(line: 3133, column: 24, scope: !6979)
!6996 = !DILocalVariable(name: "sx", scope: !6979, file: !3, line: 3134, type: !1224)
!6997 = !DILocation(line: 3134, column: 6, scope: !6979)
!6998 = !DILocalVariable(name: "sy", scope: !6979, file: !3, line: 3134, type: !1224)
!6999 = !DILocation(line: 3134, column: 10, scope: !6979)
!7000 = !DILocation(line: 3136, column: 6, scope: !7001)
!7001 = distinct !DILexicalBlock(scope: !6979, file: !3, line: 3136, column: 6)
!7002 = !DILocation(line: 3136, column: 13, scope: !7001)
!7003 = !DILocation(line: 3136, column: 18, scope: !7001)
!7004 = !DILocation(line: 3136, column: 6, scope: !6979)
!7005 = !DILocation(line: 3137, column: 41, scope: !7006)
!7006 = distinct !DILexicalBlock(scope: !7001, file: !3, line: 3136, column: 32)
!7007 = !DILocation(line: 3137, column: 27, scope: !7006)
!7008 = !DILocation(line: 3137, column: 45, scope: !7006)
!7009 = !DILocation(line: 3137, column: 54, scope: !7006)
!7010 = !DILocation(line: 3137, column: 3, scope: !7006)
!7011 = !DILocation(line: 3139, column: 7, scope: !7012)
!7012 = distinct !DILexicalBlock(scope: !7006, file: !3, line: 3139, column: 7)
!7013 = !DILocation(line: 3139, column: 16, scope: !7012)
!7014 = !DILocation(line: 3139, column: 21, scope: !7012)
!7015 = !DILocation(line: 3139, column: 46, scope: !7012)
!7016 = !DILocation(line: 3139, column: 49, scope: !7012)
!7017 = !DILocation(line: 3139, column: 58, scope: !7012)
!7018 = !DILocation(line: 3139, column: 63, scope: !7012)
!7019 = !DILocation(line: 3139, column: 7, scope: !7006)
!7020 = !DILocation(line: 3140, column: 30, scope: !7021)
!7021 = distinct !DILexicalBlock(scope: !7012, file: !3, line: 3139, column: 69)
!7022 = !DILocation(line: 3140, column: 37, scope: !7021)
!7023 = !DILocation(line: 3140, column: 41, scope: !7021)
!7024 = !DILocation(line: 3140, column: 39, scope: !7021)
!7025 = !DILocation(line: 3140, column: 17, scope: !7021)
!7026 = !DILocation(line: 3140, column: 23, scope: !7021)
!7027 = !DILocation(line: 3140, column: 28, scope: !7021)
!7028 = !DILocation(line: 3140, column: 4, scope: !7021)
!7029 = !DILocation(line: 3140, column: 10, scope: !7021)
!7030 = !DILocation(line: 3140, column: 15, scope: !7021)
!7031 = !DILocation(line: 3141, column: 30, scope: !7021)
!7032 = !DILocation(line: 3141, column: 37, scope: !7021)
!7033 = !DILocation(line: 3141, column: 41, scope: !7021)
!7034 = !DILocation(line: 3141, column: 39, scope: !7021)
!7035 = !DILocation(line: 3141, column: 17, scope: !7021)
!7036 = !DILocation(line: 3141, column: 23, scope: !7021)
!7037 = !DILocation(line: 3141, column: 28, scope: !7021)
!7038 = !DILocation(line: 3141, column: 4, scope: !7021)
!7039 = !DILocation(line: 3141, column: 10, scope: !7021)
!7040 = !DILocation(line: 3141, column: 15, scope: !7021)
!7041 = !DILocation(line: 3142, column: 3, scope: !7021)
!7042 = !DILocation(line: 3144, column: 17, scope: !7043)
!7043 = distinct !DILexicalBlock(scope: !7012, file: !3, line: 3143, column: 8)
!7044 = !DILocation(line: 3144, column: 24, scope: !7043)
!7045 = !DILocation(line: 3144, column: 28, scope: !7043)
!7046 = !DILocation(line: 3144, column: 26, scope: !7043)
!7047 = !DILocation(line: 3144, column: 4, scope: !7043)
!7048 = !DILocation(line: 3144, column: 10, scope: !7043)
!7049 = !DILocation(line: 3144, column: 15, scope: !7043)
!7050 = !DILocation(line: 3145, column: 17, scope: !7043)
!7051 = !DILocation(line: 3145, column: 24, scope: !7043)
!7052 = !DILocation(line: 3145, column: 28, scope: !7043)
!7053 = !DILocation(line: 3145, column: 26, scope: !7043)
!7054 = !DILocation(line: 3145, column: 4, scope: !7043)
!7055 = !DILocation(line: 3145, column: 10, scope: !7043)
!7056 = !DILocation(line: 3145, column: 15, scope: !7043)
!7057 = !DILocation(line: 3147, column: 21, scope: !7006)
!7058 = !DILocation(line: 3147, column: 3, scope: !7006)
!7059 = !DILocation(line: 3149, column: 25, scope: !7006)
!7060 = !DILocation(line: 3149, column: 3, scope: !7006)
!7061 = !DILocation(line: 3150, column: 2, scope: !7006)
!7062 = !DILocation(line: 3151, column: 11, scope: !7063)
!7063 = distinct !DILexicalBlock(scope: !7001, file: !3, line: 3151, column: 11)
!7064 = !DILocation(line: 3151, column: 18, scope: !7063)
!7065 = !DILocation(line: 3151, column: 23, scope: !7063)
!7066 = !DILocation(line: 3151, column: 11, scope: !7001)
!7067 = !DILocation(line: 3152, column: 11, scope: !7068)
!7068 = distinct !DILexicalBlock(scope: !7063, file: !3, line: 3151, column: 41)
!7069 = !DILocation(line: 3152, column: 18, scope: !7068)
!7070 = !DILocation(line: 3152, column: 3, scope: !7068)
!7071 = !DILocation(line: 3154, column: 9, scope: !7072)
!7072 = distinct !DILexicalBlock(scope: !7073, file: !3, line: 3154, column: 9)
!7073 = distinct !DILexicalBlock(scope: !7068, file: !3, line: 3152, column: 23)
!7074 = !DILocation(line: 3154, column: 18, scope: !7072)
!7075 = !DILocation(line: 3154, column: 23, scope: !7072)
!7076 = !DILocation(line: 3154, column: 48, scope: !7072)
!7077 = !DILocation(line: 3154, column: 51, scope: !7072)
!7078 = !DILocation(line: 3154, column: 60, scope: !7072)
!7079 = !DILocation(line: 3154, column: 65, scope: !7072)
!7080 = !DILocation(line: 3154, column: 9, scope: !7073)
!7081 = !DILocation(line: 3155, column: 6, scope: !7082)
!7082 = distinct !DILexicalBlock(scope: !7072, file: !3, line: 3154, column: 71)
!7083 = !DILocation(line: 3155, column: 15, scope: !7082)
!7084 = !DILocation(line: 3155, column: 20, scope: !7082)
!7085 = !DILocation(line: 3156, column: 28, scope: !7082)
!7086 = !DILocation(line: 3156, column: 6, scope: !7082)
!7087 = !DILocation(line: 3157, column: 5, scope: !7082)
!7088 = !DILocation(line: 3158, column: 5, scope: !7073)
!7089 = !DILocation(line: 3163, column: 22, scope: !7090)
!7090 = distinct !DILexicalBlock(scope: !7073, file: !3, line: 3163, column: 9)
!7091 = !DILocation(line: 3163, column: 25, scope: !7090)
!7092 = !DILocation(line: 3163, column: 29, scope: !7090)
!7093 = !DILocation(line: 3163, column: 36, scope: !7090)
!7094 = !DILocation(line: 3163, column: 9, scope: !7090)
!7095 = !DILocation(line: 3163, column: 9, scope: !7073)
!7096 = !DILocation(line: 3164, column: 21, scope: !7097)
!7097 = distinct !DILexicalBlock(scope: !7090, file: !3, line: 3163, column: 42)
!7098 = !DILocation(line: 3164, column: 24, scope: !7097)
!7099 = !DILocation(line: 3164, column: 6, scope: !7097)
!7100 = !DILocation(line: 3165, column: 6, scope: !7097)
!7101 = !DILocation(line: 3167, column: 20, scope: !7073)
!7102 = !DILocation(line: 3167, column: 23, scope: !7073)
!7103 = !DILocation(line: 3167, column: 5, scope: !7073)
!7104 = !DILocation(line: 3168, column: 5, scope: !7073)
!7105 = !DILocation(line: 3171, column: 20, scope: !7073)
!7106 = !DILocation(line: 3171, column: 23, scope: !7073)
!7107 = !DILocation(line: 3171, column: 5, scope: !7073)
!7108 = !DILocation(line: 3172, column: 5, scope: !7073)
!7109 = !DILocation(line: 3175, column: 2, scope: !7068)
!7110 = !DILocation(line: 3181, column: 2, scope: !6979)
!7111 = !DILocation(line: 3182, column: 1, scope: !6979)
!7112 = distinct !DISubprogram(name: "border_apply_rect", scope: !3, file: !3, line: 3065, type: !7113, scopeLine: 3066, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!7113 = !DISubroutineType(types: !7114)
!7114 = !{!1224, !2965}
!7115 = !DILocalVariable(name: "op", arg: 1, scope: !7112, file: !3, line: 3065, type: !2965)
!7116 = !DILocation(line: 3065, column: 42, scope: !7112)
!7117 = !DILocalVariable(name: "gesture", scope: !7112, file: !3, line: 3067, type: !6987)
!7118 = !DILocation(line: 3067, column: 13, scope: !7112)
!7119 = !DILocation(line: 3067, column: 23, scope: !7112)
!7120 = !DILocation(line: 3067, column: 27, scope: !7112)
!7121 = !DILocalVariable(name: "rect", scope: !7112, file: !3, line: 3068, type: !6049)
!7122 = !DILocation(line: 3068, column: 8, scope: !7112)
!7123 = !DILocation(line: 3068, column: 15, scope: !7112)
!7124 = !DILocation(line: 3068, column: 24, scope: !7112)
!7125 = !DILocation(line: 3070, column: 6, scope: !7126)
!7126 = distinct !DILexicalBlock(scope: !7112, file: !3, line: 3070, column: 6)
!7127 = !DILocation(line: 3070, column: 12, scope: !7126)
!7128 = !DILocation(line: 3070, column: 20, scope: !7126)
!7129 = !DILocation(line: 3070, column: 26, scope: !7126)
!7130 = !DILocation(line: 3070, column: 17, scope: !7126)
!7131 = !DILocation(line: 3070, column: 31, scope: !7126)
!7132 = !DILocation(line: 3070, column: 34, scope: !7126)
!7133 = !DILocation(line: 3070, column: 40, scope: !7126)
!7134 = !DILocation(line: 3070, column: 48, scope: !7126)
!7135 = !DILocation(line: 3070, column: 54, scope: !7126)
!7136 = !DILocation(line: 3070, column: 45, scope: !7126)
!7137 = !DILocation(line: 3070, column: 6, scope: !7112)
!7138 = !DILocation(line: 3071, column: 3, scope: !7126)
!7139 = !DILocation(line: 3075, column: 14, scope: !7112)
!7140 = !DILocation(line: 3075, column: 18, scope: !7112)
!7141 = !DILocation(line: 3075, column: 38, scope: !7112)
!7142 = !DILocation(line: 3075, column: 44, scope: !7112)
!7143 = !DILocation(line: 3075, column: 50, scope: !7112)
!7144 = !DILocation(line: 3075, column: 56, scope: !7112)
!7145 = !DILocation(line: 3075, column: 31, scope: !7112)
!7146 = !DILocation(line: 3075, column: 2, scope: !7112)
!7147 = !DILocation(line: 3076, column: 14, scope: !7112)
!7148 = !DILocation(line: 3076, column: 18, scope: !7112)
!7149 = !DILocation(line: 3076, column: 38, scope: !7112)
!7150 = !DILocation(line: 3076, column: 44, scope: !7112)
!7151 = !DILocation(line: 3076, column: 50, scope: !7112)
!7152 = !DILocation(line: 3076, column: 56, scope: !7112)
!7153 = !DILocation(line: 3076, column: 31, scope: !7112)
!7154 = !DILocation(line: 3076, column: 2, scope: !7112)
!7155 = !DILocation(line: 3077, column: 14, scope: !7112)
!7156 = !DILocation(line: 3077, column: 18, scope: !7112)
!7157 = !DILocation(line: 3077, column: 38, scope: !7112)
!7158 = !DILocation(line: 3077, column: 44, scope: !7112)
!7159 = !DILocation(line: 3077, column: 50, scope: !7112)
!7160 = !DILocation(line: 3077, column: 56, scope: !7112)
!7161 = !DILocation(line: 3077, column: 31, scope: !7112)
!7162 = !DILocation(line: 3077, column: 2, scope: !7112)
!7163 = !DILocation(line: 3078, column: 14, scope: !7112)
!7164 = !DILocation(line: 3078, column: 18, scope: !7112)
!7165 = !DILocation(line: 3078, column: 38, scope: !7112)
!7166 = !DILocation(line: 3078, column: 44, scope: !7112)
!7167 = !DILocation(line: 3078, column: 50, scope: !7112)
!7168 = !DILocation(line: 3078, column: 56, scope: !7112)
!7169 = !DILocation(line: 3078, column: 31, scope: !7112)
!7170 = !DILocation(line: 3078, column: 2, scope: !7112)
!7171 = !DILocation(line: 3080, column: 2, scope: !7112)
!7172 = !DILocation(line: 3081, column: 1, scope: !7112)
!7173 = distinct !DISubprogram(name: "border_apply", scope: !3, file: !3, line: 3083, type: !7174, scopeLine: 3084, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!7174 = !DISubroutineType(types: !7175)
!7175 = !{!1224, !1414, !2965, !1224}
!7176 = !DILocalVariable(name: "C", arg: 1, scope: !7173, file: !3, line: 3083, type: !1414)
!7177 = !DILocation(line: 3083, column: 35, scope: !7173)
!7178 = !DILocalVariable(name: "op", arg: 2, scope: !7173, file: !3, line: 3083, type: !2965)
!7179 = !DILocation(line: 3083, column: 50, scope: !7173)
!7180 = !DILocalVariable(name: "gesture_mode", arg: 3, scope: !7173, file: !3, line: 3083, type: !1224)
!7181 = !DILocation(line: 3083, column: 58, scope: !7173)
!7182 = !DILocalVariable(name: "retval", scope: !7173, file: !3, line: 3085, type: !1224)
!7183 = !DILocation(line: 3085, column: 6, scope: !7173)
!7184 = !DILocation(line: 3087, column: 25, scope: !7185)
!7185 = distinct !DILexicalBlock(scope: !7173, file: !3, line: 3087, column: 6)
!7186 = !DILocation(line: 3087, column: 7, scope: !7185)
!7187 = !DILocation(line: 3087, column: 6, scope: !7173)
!7188 = !DILocation(line: 3088, column: 3, scope: !7185)
!7189 = !DILocation(line: 3091, column: 31, scope: !7190)
!7190 = distinct !DILexicalBlock(scope: !7173, file: !3, line: 3091, column: 6)
!7191 = !DILocation(line: 3091, column: 35, scope: !7190)
!7192 = !DILocation(line: 3091, column: 6, scope: !7190)
!7193 = !DILocation(line: 3091, column: 6, scope: !7173)
!7194 = !DILocation(line: 3092, column: 15, scope: !7195)
!7195 = distinct !DILexicalBlock(scope: !7190, file: !3, line: 3091, column: 57)
!7196 = !DILocation(line: 3092, column: 19, scope: !7195)
!7197 = !DILocation(line: 3092, column: 40, scope: !7195)
!7198 = !DILocation(line: 3092, column: 3, scope: !7195)
!7199 = !DILocation(line: 3093, column: 2, scope: !7195)
!7200 = !DILocation(line: 3095, column: 11, scope: !7173)
!7201 = !DILocation(line: 3095, column: 15, scope: !7173)
!7202 = !DILocation(line: 3095, column: 21, scope: !7173)
!7203 = !DILocation(line: 3095, column: 26, scope: !7173)
!7204 = !DILocation(line: 3095, column: 29, scope: !7173)
!7205 = !DILocation(line: 3095, column: 9, scope: !7173)
!7206 = !DILocation(line: 3096, column: 2, scope: !7173)
!7207 = !DILocation(line: 3098, column: 2, scope: !7173)
!7208 = !DILocation(line: 3099, column: 1, scope: !7173)
!7209 = distinct !DISubprogram(name: "wm_gesture_end", scope: !3, file: !3, line: 3101, type: !4165, scopeLine: 3102, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!7210 = !DILocalVariable(name: "C", arg: 1, scope: !7209, file: !3, line: 3101, type: !1414)
!7211 = !DILocation(line: 3101, column: 38, scope: !7209)
!7212 = !DILocalVariable(name: "op", arg: 2, scope: !7209, file: !3, line: 3101, type: !2965)
!7213 = !DILocation(line: 3101, column: 53, scope: !7209)
!7214 = !DILocalVariable(name: "gesture", scope: !7209, file: !3, line: 3103, type: !6987)
!7215 = !DILocation(line: 3103, column: 13, scope: !7209)
!7216 = !DILocation(line: 3103, column: 23, scope: !7209)
!7217 = !DILocation(line: 3103, column: 27, scope: !7209)
!7218 = !DILocation(line: 3105, column: 17, scope: !7209)
!7219 = !DILocation(line: 3105, column: 20, scope: !7209)
!7220 = !DILocation(line: 3105, column: 2, scope: !7209)
!7221 = !DILocation(line: 3106, column: 2, scope: !7209)
!7222 = !DILocation(line: 3106, column: 6, scope: !7209)
!7223 = !DILocation(line: 3106, column: 17, scope: !7209)
!7224 = !DILocation(line: 3108, column: 33, scope: !7209)
!7225 = !DILocation(line: 3108, column: 21, scope: !7209)
!7226 = !DILocation(line: 3108, column: 2, scope: !7209)
!7227 = !DILocation(line: 3110, column: 31, scope: !7228)
!7228 = distinct !DILexicalBlock(scope: !7209, file: !3, line: 3110, column: 6)
!7229 = !DILocation(line: 3110, column: 35, scope: !7228)
!7230 = !DILocation(line: 3110, column: 6, scope: !7228)
!7231 = !DILocation(line: 3110, column: 6, scope: !7209)
!7232 = !DILocation(line: 3111, column: 41, scope: !7233)
!7233 = distinct !DILexicalBlock(scope: !7228, file: !3, line: 3110, column: 51)
!7234 = !DILocation(line: 3111, column: 27, scope: !7233)
!7235 = !DILocation(line: 3111, column: 3, scope: !7233)
!7236 = !DILocation(line: 3112, column: 2, scope: !7233)
!7237 = !DILocation(line: 3113, column: 1, scope: !7209)
!7238 = distinct !DISubprogram(name: "WM_border_select_cancel", scope: !3, file: !3, line: 3184, type: !4165, scopeLine: 3185, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!7239 = !DILocalVariable(name: "C", arg: 1, scope: !7238, file: !3, line: 3184, type: !1414)
!7240 = !DILocation(line: 3184, column: 40, scope: !7238)
!7241 = !DILocalVariable(name: "op", arg: 2, scope: !7238, file: !3, line: 3184, type: !2965)
!7242 = !DILocation(line: 3184, column: 55, scope: !7238)
!7243 = !DILocation(line: 3186, column: 17, scope: !7238)
!7244 = !DILocation(line: 3186, column: 20, scope: !7238)
!7245 = !DILocation(line: 3186, column: 2, scope: !7238)
!7246 = !DILocation(line: 3187, column: 1, scope: !7238)
!7247 = distinct !DISubprogram(name: "WM_gesture_circle_invoke", scope: !3, file: !3, line: 3196, type: !3944, scopeLine: 3197, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!7248 = !DILocalVariable(name: "C", arg: 1, scope: !7247, file: !3, line: 3196, type: !1414)
!7249 = !DILocation(line: 3196, column: 40, scope: !7247)
!7250 = !DILocalVariable(name: "op", arg: 2, scope: !7247, file: !3, line: 3196, type: !2965)
!7251 = !DILocation(line: 3196, column: 55, scope: !7247)
!7252 = !DILocalVariable(name: "event", arg: 3, scope: !7247, file: !3, line: 3196, type: !3946)
!7253 = !DILocation(line: 3196, column: 74, scope: !7247)
!7254 = !DILocation(line: 3198, column: 34, scope: !7247)
!7255 = !DILocation(line: 3198, column: 37, scope: !7247)
!7256 = !DILocation(line: 3198, column: 19, scope: !7247)
!7257 = !DILocation(line: 3198, column: 2, scope: !7247)
!7258 = !DILocation(line: 3198, column: 6, scope: !7247)
!7259 = !DILocation(line: 3198, column: 17, scope: !7247)
!7260 = !DILocation(line: 3201, column: 29, scope: !7247)
!7261 = !DILocation(line: 3201, column: 32, scope: !7247)
!7262 = !DILocation(line: 3201, column: 2, scope: !7247)
!7263 = !DILocation(line: 3203, column: 24, scope: !7247)
!7264 = !DILocation(line: 3203, column: 2, scope: !7247)
!7265 = !DILocation(line: 3205, column: 2, scope: !7247)
!7266 = distinct !DISubprogram(name: "WM_gesture_circle_modal", scope: !3, file: !3, line: 3231, type: !3944, scopeLine: 3232, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!7267 = !DILocalVariable(name: "C", arg: 1, scope: !7266, file: !3, line: 3231, type: !1414)
!7268 = !DILocation(line: 3231, column: 39, scope: !7266)
!7269 = !DILocalVariable(name: "op", arg: 2, scope: !7266, file: !3, line: 3231, type: !2965)
!7270 = !DILocation(line: 3231, column: 54, scope: !7266)
!7271 = !DILocalVariable(name: "event", arg: 3, scope: !7266, file: !3, line: 3231, type: !3946)
!7272 = !DILocation(line: 3231, column: 73, scope: !7266)
!7273 = !DILocalVariable(name: "gesture", scope: !7266, file: !3, line: 3233, type: !6987)
!7274 = !DILocation(line: 3233, column: 13, scope: !7266)
!7275 = !DILocation(line: 3233, column: 23, scope: !7266)
!7276 = !DILocation(line: 3233, column: 27, scope: !7266)
!7277 = !DILocalVariable(name: "rect", scope: !7266, file: !3, line: 3234, type: !6049)
!7278 = !DILocation(line: 3234, column: 8, scope: !7266)
!7279 = !DILocation(line: 3234, column: 15, scope: !7266)
!7280 = !DILocation(line: 3234, column: 24, scope: !7266)
!7281 = !DILocalVariable(name: "sx", scope: !7266, file: !3, line: 3235, type: !1224)
!7282 = !DILocation(line: 3235, column: 6, scope: !7266)
!7283 = !DILocalVariable(name: "sy", scope: !7266, file: !3, line: 3235, type: !1224)
!7284 = !DILocation(line: 3235, column: 10, scope: !7266)
!7285 = !DILocation(line: 3237, column: 6, scope: !7286)
!7286 = distinct !DILexicalBlock(scope: !7266, file: !3, line: 3237, column: 6)
!7287 = !DILocation(line: 3237, column: 13, scope: !7286)
!7288 = !DILocation(line: 3237, column: 18, scope: !7286)
!7289 = !DILocation(line: 3237, column: 6, scope: !7266)
!7290 = !DILocation(line: 3238, column: 41, scope: !7291)
!7291 = distinct !DILexicalBlock(scope: !7286, file: !3, line: 3237, column: 32)
!7292 = !DILocation(line: 3238, column: 27, scope: !7291)
!7293 = !DILocation(line: 3238, column: 45, scope: !7291)
!7294 = !DILocation(line: 3238, column: 54, scope: !7291)
!7295 = !DILocation(line: 3238, column: 3, scope: !7291)
!7296 = !DILocation(line: 3240, column: 16, scope: !7291)
!7297 = !DILocation(line: 3240, column: 23, scope: !7291)
!7298 = !DILocation(line: 3240, column: 27, scope: !7291)
!7299 = !DILocation(line: 3240, column: 25, scope: !7291)
!7300 = !DILocation(line: 3240, column: 3, scope: !7291)
!7301 = !DILocation(line: 3240, column: 9, scope: !7291)
!7302 = !DILocation(line: 3240, column: 14, scope: !7291)
!7303 = !DILocation(line: 3241, column: 16, scope: !7291)
!7304 = !DILocation(line: 3241, column: 23, scope: !7291)
!7305 = !DILocation(line: 3241, column: 27, scope: !7291)
!7306 = !DILocation(line: 3241, column: 25, scope: !7291)
!7307 = !DILocation(line: 3241, column: 3, scope: !7291)
!7308 = !DILocation(line: 3241, column: 9, scope: !7291)
!7309 = !DILocation(line: 3241, column: 14, scope: !7291)
!7310 = !DILocation(line: 3243, column: 25, scope: !7291)
!7311 = !DILocation(line: 3243, column: 3, scope: !7291)
!7312 = !DILocation(line: 3245, column: 7, scope: !7313)
!7313 = distinct !DILexicalBlock(scope: !7291, file: !3, line: 3245, column: 7)
!7314 = !DILocation(line: 3245, column: 16, scope: !7313)
!7315 = !DILocation(line: 3245, column: 7, scope: !7291)
!7316 = !DILocation(line: 3246, column: 25, scope: !7313)
!7317 = !DILocation(line: 3246, column: 28, scope: !7313)
!7318 = !DILocation(line: 3246, column: 4, scope: !7313)
!7319 = !DILocation(line: 3247, column: 2, scope: !7291)
!7320 = !DILocation(line: 3248, column: 11, scope: !7321)
!7321 = distinct !DILexicalBlock(scope: !7286, file: !3, line: 3248, column: 11)
!7322 = !DILocation(line: 3248, column: 18, scope: !7321)
!7323 = !DILocation(line: 3248, column: 23, scope: !7321)
!7324 = !DILocation(line: 3248, column: 11, scope: !7286)
!7325 = !DILocalVariable(name: "fac", scope: !7326, file: !3, line: 3249, type: !1537)
!7326 = distinct !DILexicalBlock(scope: !7321, file: !3, line: 3248, column: 41)
!7327 = !DILocation(line: 3249, column: 9, scope: !7326)
!7328 = !DILocation(line: 3251, column: 11, scope: !7326)
!7329 = !DILocation(line: 3251, column: 18, scope: !7326)
!7330 = !DILocation(line: 3251, column: 3, scope: !7326)
!7331 = !DILocation(line: 3253, column: 19, scope: !7332)
!7332 = distinct !DILexicalBlock(scope: !7326, file: !3, line: 3251, column: 23)
!7333 = !DILocation(line: 3253, column: 26, scope: !7332)
!7334 = !DILocation(line: 3253, column: 30, scope: !7332)
!7335 = !DILocation(line: 3253, column: 37, scope: !7332)
!7336 = !DILocation(line: 3253, column: 28, scope: !7332)
!7337 = !DILocation(line: 3253, column: 18, scope: !7332)
!7338 = !DILocation(line: 3253, column: 16, scope: !7332)
!7339 = !DILocation(line: 3253, column: 9, scope: !7332)
!7340 = !DILocation(line: 3254, column: 9, scope: !7341)
!7341 = distinct !DILexicalBlock(scope: !7332, file: !3, line: 3254, column: 9)
!7342 = !DILocation(line: 3254, column: 13, scope: !7341)
!7343 = !DILocation(line: 3254, column: 9, scope: !7332)
!7344 = !DILocation(line: 3255, column: 25, scope: !7341)
!7345 = !DILocation(line: 3255, column: 20, scope: !7341)
!7346 = !DILocation(line: 3255, column: 6, scope: !7341)
!7347 = !DILocation(line: 3255, column: 12, scope: !7341)
!7348 = !DILocation(line: 3255, column: 17, scope: !7341)
!7349 = !DILocation(line: 3257, column: 26, scope: !7341)
!7350 = !DILocation(line: 3257, column: 20, scope: !7341)
!7351 = !DILocation(line: 3257, column: 6, scope: !7341)
!7352 = !DILocation(line: 3257, column: 12, scope: !7341)
!7353 = !DILocation(line: 3257, column: 17, scope: !7341)
!7354 = !DILocation(line: 3258, column: 9, scope: !7355)
!7355 = distinct !DILexicalBlock(scope: !7332, file: !3, line: 3258, column: 9)
!7356 = !DILocation(line: 3258, column: 15, scope: !7355)
!7357 = !DILocation(line: 3258, column: 20, scope: !7355)
!7358 = !DILocation(line: 3258, column: 9, scope: !7332)
!7359 = !DILocation(line: 3258, column: 25, scope: !7355)
!7360 = !DILocation(line: 3258, column: 31, scope: !7355)
!7361 = !DILocation(line: 3258, column: 36, scope: !7355)
!7362 = !DILocation(line: 3259, column: 27, scope: !7332)
!7363 = !DILocation(line: 3259, column: 5, scope: !7332)
!7364 = !DILocation(line: 3260, column: 5, scope: !7332)
!7365 = !DILocation(line: 3262, column: 23, scope: !7332)
!7366 = !DILocation(line: 3262, column: 29, scope: !7332)
!7367 = !DILocation(line: 3262, column: 34, scope: !7332)
!7368 = !DILocation(line: 3262, column: 21, scope: !7332)
!7369 = !DILocation(line: 3262, column: 5, scope: !7332)
!7370 = !DILocation(line: 3262, column: 11, scope: !7332)
!7371 = !DILocation(line: 3262, column: 16, scope: !7332)
!7372 = !DILocation(line: 3263, column: 27, scope: !7332)
!7373 = !DILocation(line: 3263, column: 5, scope: !7332)
!7374 = !DILocation(line: 3264, column: 5, scope: !7332)
!7375 = !DILocation(line: 3266, column: 23, scope: !7332)
!7376 = !DILocation(line: 3266, column: 29, scope: !7332)
!7377 = !DILocation(line: 3266, column: 34, scope: !7332)
!7378 = !DILocation(line: 3266, column: 21, scope: !7332)
!7379 = !DILocation(line: 3266, column: 5, scope: !7332)
!7380 = !DILocation(line: 3266, column: 11, scope: !7332)
!7381 = !DILocation(line: 3266, column: 16, scope: !7332)
!7382 = !DILocation(line: 3267, column: 9, scope: !7383)
!7383 = distinct !DILexicalBlock(scope: !7332, file: !3, line: 3267, column: 9)
!7384 = !DILocation(line: 3267, column: 15, scope: !7383)
!7385 = !DILocation(line: 3267, column: 20, scope: !7383)
!7386 = !DILocation(line: 3267, column: 9, scope: !7332)
!7387 = !DILocation(line: 3267, column: 25, scope: !7383)
!7388 = !DILocation(line: 3267, column: 31, scope: !7383)
!7389 = !DILocation(line: 3267, column: 36, scope: !7383)
!7390 = !DILocation(line: 3268, column: 27, scope: !7332)
!7391 = !DILocation(line: 3268, column: 5, scope: !7332)
!7392 = !DILocation(line: 3269, column: 5, scope: !7332)
!7393 = !DILocation(line: 3273, column: 34, scope: !7394)
!7394 = distinct !DILexicalBlock(scope: !7332, file: !3, line: 3273, column: 9)
!7395 = !DILocation(line: 3273, column: 38, scope: !7394)
!7396 = !DILocation(line: 3273, column: 9, scope: !7394)
!7397 = !DILocation(line: 3273, column: 9, scope: !7332)
!7398 = !DILocation(line: 3274, column: 18, scope: !7394)
!7399 = !DILocation(line: 3274, column: 22, scope: !7394)
!7400 = !DILocation(line: 3274, column: 43, scope: !7394)
!7401 = !DILocation(line: 3274, column: 50, scope: !7394)
!7402 = !DILocation(line: 3274, column: 6, scope: !7394)
!7403 = !DILocation(line: 3276, column: 9, scope: !7404)
!7404 = distinct !DILexicalBlock(scope: !7332, file: !3, line: 3276, column: 9)
!7405 = !DILocation(line: 3276, column: 16, scope: !7404)
!7406 = !DILocation(line: 3276, column: 20, scope: !7404)
!7407 = !DILocation(line: 3276, column: 9, scope: !7332)
!7408 = !DILocation(line: 3278, column: 27, scope: !7409)
!7409 = distinct !DILexicalBlock(scope: !7404, file: !3, line: 3276, column: 42)
!7410 = !DILocation(line: 3278, column: 30, scope: !7409)
!7411 = !DILocation(line: 3278, column: 6, scope: !7409)
!7412 = !DILocation(line: 3279, column: 6, scope: !7409)
!7413 = !DILocation(line: 3279, column: 15, scope: !7409)
!7414 = !DILocation(line: 3279, column: 20, scope: !7409)
!7415 = !DILocation(line: 3280, column: 28, scope: !7409)
!7416 = !DILocation(line: 3280, column: 6, scope: !7409)
!7417 = !DILocation(line: 3281, column: 5, scope: !7409)
!7418 = !DILocation(line: 3282, column: 5, scope: !7332)
!7419 = !DILocation(line: 3286, column: 20, scope: !7332)
!7420 = !DILocation(line: 3286, column: 23, scope: !7332)
!7421 = !DILocation(line: 3286, column: 5, scope: !7332)
!7422 = !DILocation(line: 3287, column: 5, scope: !7332)
!7423 = !DILocation(line: 3289, column: 2, scope: !7326)
!7424 = !DILocation(line: 3296, column: 2, scope: !7266)
!7425 = !DILocation(line: 3297, column: 1, scope: !7266)
!7426 = distinct !DISubprogram(name: "gesture_circle_apply", scope: !3, file: !3, line: 3208, type: !4165, scopeLine: 3209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!7427 = !DILocalVariable(name: "C", arg: 1, scope: !7426, file: !3, line: 3208, type: !1414)
!7428 = !DILocation(line: 3208, column: 44, scope: !7426)
!7429 = !DILocalVariable(name: "op", arg: 2, scope: !7426, file: !3, line: 3208, type: !2965)
!7430 = !DILocation(line: 3208, column: 59, scope: !7426)
!7431 = !DILocalVariable(name: "gesture", scope: !7426, file: !3, line: 3210, type: !6987)
!7432 = !DILocation(line: 3210, column: 13, scope: !7426)
!7433 = !DILocation(line: 3210, column: 23, scope: !7426)
!7434 = !DILocation(line: 3210, column: 27, scope: !7426)
!7435 = !DILocalVariable(name: "rect", scope: !7426, file: !3, line: 3211, type: !6049)
!7436 = !DILocation(line: 3211, column: 8, scope: !7426)
!7437 = !DILocation(line: 3211, column: 15, scope: !7426)
!7438 = !DILocation(line: 3211, column: 24, scope: !7426)
!7439 = !DILocation(line: 3213, column: 18, scope: !7440)
!7440 = distinct !DILexicalBlock(scope: !7426, file: !3, line: 3213, column: 6)
!7441 = !DILocation(line: 3213, column: 22, scope: !7440)
!7442 = !DILocation(line: 3213, column: 6, scope: !7440)
!7443 = !DILocation(line: 3213, column: 43, scope: !7440)
!7444 = !DILocation(line: 3213, column: 6, scope: !7426)
!7445 = !DILocation(line: 3214, column: 3, scope: !7440)
!7446 = !DILocation(line: 3217, column: 14, scope: !7426)
!7447 = !DILocation(line: 3217, column: 18, scope: !7426)
!7448 = !DILocation(line: 3217, column: 28, scope: !7426)
!7449 = !DILocation(line: 3217, column: 34, scope: !7426)
!7450 = !DILocation(line: 3217, column: 2, scope: !7426)
!7451 = !DILocation(line: 3218, column: 14, scope: !7426)
!7452 = !DILocation(line: 3218, column: 18, scope: !7426)
!7453 = !DILocation(line: 3218, column: 28, scope: !7426)
!7454 = !DILocation(line: 3218, column: 34, scope: !7426)
!7455 = !DILocation(line: 3218, column: 2, scope: !7426)
!7456 = !DILocation(line: 3219, column: 14, scope: !7426)
!7457 = !DILocation(line: 3219, column: 18, scope: !7426)
!7458 = !DILocation(line: 3219, column: 33, scope: !7426)
!7459 = !DILocation(line: 3219, column: 39, scope: !7426)
!7460 = !DILocation(line: 3219, column: 2, scope: !7426)
!7461 = !DILocation(line: 3221, column: 6, scope: !7462)
!7462 = distinct !DILexicalBlock(scope: !7426, file: !3, line: 3221, column: 6)
!7463 = !DILocation(line: 3221, column: 10, scope: !7462)
!7464 = !DILocation(line: 3221, column: 16, scope: !7462)
!7465 = !DILocation(line: 3221, column: 6, scope: !7426)
!7466 = !DILocalVariable(name: "retval", scope: !7467, file: !3, line: 3222, type: !1224)
!7467 = distinct !DILexicalBlock(scope: !7462, file: !3, line: 3221, column: 22)
!7468 = !DILocation(line: 3222, column: 7, scope: !7467)
!7469 = !DILocation(line: 3223, column: 12, scope: !7467)
!7470 = !DILocation(line: 3223, column: 16, scope: !7467)
!7471 = !DILocation(line: 3223, column: 22, scope: !7467)
!7472 = !DILocation(line: 3223, column: 27, scope: !7467)
!7473 = !DILocation(line: 3223, column: 30, scope: !7467)
!7474 = !DILocation(line: 3223, column: 10, scope: !7467)
!7475 = !DILocation(line: 3224, column: 3, scope: !7467)
!7476 = !DILocation(line: 3225, column: 2, scope: !7467)
!7477 = !DILocation(line: 3227, column: 23, scope: !7426)
!7478 = !DILocation(line: 3227, column: 29, scope: !7426)
!7479 = !DILocation(line: 3227, column: 21, scope: !7426)
!7480 = !DILocation(line: 3229, column: 1, scope: !7426)
!7481 = distinct !DISubprogram(name: "WM_gesture_circle_cancel", scope: !3, file: !3, line: 3299, type: !4165, scopeLine: 3300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!7482 = !DILocalVariable(name: "C", arg: 1, scope: !7481, file: !3, line: 3299, type: !1414)
!7483 = !DILocation(line: 3299, column: 41, scope: !7481)
!7484 = !DILocalVariable(name: "op", arg: 2, scope: !7481, file: !3, line: 3299, type: !2965)
!7485 = !DILocation(line: 3299, column: 56, scope: !7481)
!7486 = !DILocation(line: 3301, column: 17, scope: !7481)
!7487 = !DILocation(line: 3301, column: 20, scope: !7481)
!7488 = !DILocation(line: 3301, column: 2, scope: !7481)
!7489 = !DILocation(line: 3302, column: 1, scope: !7481)
!7490 = distinct !DISubprogram(name: "wm_tweakevent_test", scope: !3, file: !3, line: 3385, type: !7491, scopeLine: 3386, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!7491 = !DISubroutineType(types: !7492)
!7492 = !{null, !1414, !3216, !1224}
!7493 = !DILocalVariable(name: "C", arg: 1, scope: !7490, file: !3, line: 3385, type: !1414)
!7494 = !DILocation(line: 3385, column: 35, scope: !7490)
!7495 = !DILocalVariable(name: "event", arg: 2, scope: !7490, file: !3, line: 3385, type: !3216)
!7496 = !DILocation(line: 3385, column: 47, scope: !7490)
!7497 = !DILocalVariable(name: "action", arg: 3, scope: !7490, file: !3, line: 3385, type: !1224)
!7498 = !DILocation(line: 3385, column: 58, scope: !7490)
!7499 = !DILocalVariable(name: "win", scope: !7490, file: !3, line: 3387, type: !4033)
!7500 = !DILocation(line: 3387, column: 12, scope: !7490)
!7501 = !DILocation(line: 3387, column: 32, scope: !7490)
!7502 = !DILocation(line: 3387, column: 18, scope: !7490)
!7503 = !DILocation(line: 3389, column: 6, scope: !7504)
!7504 = distinct !DILexicalBlock(scope: !7490, file: !3, line: 3389, column: 6)
!7505 = !DILocation(line: 3389, column: 11, scope: !7504)
!7506 = !DILocation(line: 3389, column: 17, scope: !7504)
!7507 = !DILocation(line: 3389, column: 6, scope: !7490)
!7508 = !DILocation(line: 3390, column: 21, scope: !7509)
!7509 = distinct !DILexicalBlock(scope: !7510, file: !3, line: 3390, column: 7)
!7510 = distinct !DILexicalBlock(scope: !7504, file: !3, line: 3389, column: 26)
!7511 = !DILocation(line: 3390, column: 7, scope: !7509)
!7512 = !DILocation(line: 3390, column: 7, scope: !7510)
!7513 = !DILocation(line: 3391, column: 8, scope: !7514)
!7514 = distinct !DILexicalBlock(scope: !7515, file: !3, line: 3391, column: 8)
!7515 = distinct !DILexicalBlock(scope: !7509, file: !3, line: 3390, column: 25)
!7516 = !DILocation(line: 3391, column: 15, scope: !7514)
!7517 = !DILocation(line: 3391, column: 19, scope: !7514)
!7518 = !DILocation(line: 3391, column: 8, scope: !7515)
!7519 = !DILocation(line: 3392, column: 9, scope: !7520)
!7520 = distinct !DILexicalBlock(scope: !7521, file: !3, line: 3392, column: 9)
!7521 = distinct !DILexicalBlock(scope: !7514, file: !3, line: 3391, column: 32)
!7522 = !DILocation(line: 3392, column: 9, scope: !7521)
!7523 = !DILocation(line: 3393, column: 34, scope: !7524)
!7524 = distinct !DILexicalBlock(scope: !7520, file: !3, line: 3392, column: 64)
!7525 = !DILocation(line: 3393, column: 37, scope: !7524)
!7526 = !DILocation(line: 3393, column: 19, scope: !7524)
!7527 = !DILocation(line: 3393, column: 6, scope: !7524)
!7528 = !DILocation(line: 3393, column: 11, scope: !7524)
!7529 = !DILocation(line: 3393, column: 17, scope: !7524)
!7530 = !DILocation(line: 3394, column: 5, scope: !7524)
!7531 = !DILocation(line: 3395, column: 4, scope: !7521)
!7532 = !DILocation(line: 3396, column: 3, scope: !7515)
!7533 = !DILocation(line: 3397, column: 2, scope: !7510)
!7534 = !DILocation(line: 3400, column: 8, scope: !7535)
!7535 = distinct !DILexicalBlock(scope: !7536, file: !3, line: 3400, column: 7)
!7536 = distinct !DILexicalBlock(scope: !7504, file: !3, line: 3398, column: 7)
!7537 = !DILocation(line: 3400, column: 15, scope: !7535)
!7538 = !DILocation(line: 3400, column: 7, scope: !7536)
!7539 = !DILocation(line: 3401, column: 19, scope: !7540)
!7540 = distinct !DILexicalBlock(scope: !7535, file: !3, line: 3400, column: 36)
!7541 = !DILocation(line: 3401, column: 22, scope: !7540)
!7542 = !DILocation(line: 3401, column: 27, scope: !7540)
!7543 = !DILocation(line: 3401, column: 4, scope: !7540)
!7544 = !DILocation(line: 3402, column: 3, scope: !7540)
!7545 = !DILocation(line: 3404, column: 24, scope: !7535)
!7546 = !DILocation(line: 3404, column: 27, scope: !7535)
!7547 = !DILocation(line: 3404, column: 4, scope: !7535)
!7548 = !DILocation(line: 3406, column: 1, scope: !7490)
!7549 = distinct !DISubprogram(name: "tweak_gesture_modal", scope: !3, file: !3, line: 3326, type: !7550, scopeLine: 3327, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!7550 = !DISubroutineType(types: !7551)
!7551 = !{null, !1414, !3946}
!7552 = !DILocalVariable(name: "C", arg: 1, scope: !7549, file: !3, line: 3326, type: !1414)
!7553 = !DILocation(line: 3326, column: 43, scope: !7549)
!7554 = !DILocalVariable(name: "event", arg: 2, scope: !7549, file: !3, line: 3326, type: !3946)
!7555 = !DILocation(line: 3326, column: 61, scope: !7549)
!7556 = !DILocalVariable(name: "window", scope: !7549, file: !3, line: 3328, type: !4033)
!7557 = !DILocation(line: 3328, column: 12, scope: !7549)
!7558 = !DILocation(line: 3328, column: 35, scope: !7549)
!7559 = !DILocation(line: 3328, column: 21, scope: !7549)
!7560 = !DILocalVariable(name: "gesture", scope: !7549, file: !3, line: 3329, type: !6987)
!7561 = !DILocation(line: 3329, column: 13, scope: !7549)
!7562 = !DILocation(line: 3329, column: 23, scope: !7549)
!7563 = !DILocation(line: 3329, column: 31, scope: !7549)
!7564 = !DILocalVariable(name: "rect", scope: !7549, file: !3, line: 3330, type: !6049)
!7565 = !DILocation(line: 3330, column: 8, scope: !7549)
!7566 = !DILocation(line: 3330, column: 15, scope: !7549)
!7567 = !DILocation(line: 3330, column: 24, scope: !7549)
!7568 = !DILocalVariable(name: "sx", scope: !7549, file: !3, line: 3331, type: !1224)
!7569 = !DILocation(line: 3331, column: 6, scope: !7549)
!7570 = !DILocalVariable(name: "sy", scope: !7549, file: !3, line: 3331, type: !1224)
!7571 = !DILocation(line: 3331, column: 10, scope: !7549)
!7572 = !DILocalVariable(name: "val", scope: !7549, file: !3, line: 3331, type: !1224)
!7573 = !DILocation(line: 3331, column: 14, scope: !7549)
!7574 = !DILocation(line: 3333, column: 10, scope: !7549)
!7575 = !DILocation(line: 3333, column: 17, scope: !7549)
!7576 = !DILocation(line: 3333, column: 2, scope: !7549)
!7577 = !DILocation(line: 3337, column: 28, scope: !7578)
!7578 = distinct !DILexicalBlock(scope: !7549, file: !3, line: 3333, column: 23)
!7579 = !DILocation(line: 3337, column: 36, scope: !7578)
!7580 = !DILocation(line: 3337, column: 45, scope: !7578)
!7581 = !DILocation(line: 3337, column: 4, scope: !7578)
!7582 = !DILocation(line: 3339, column: 17, scope: !7578)
!7583 = !DILocation(line: 3339, column: 24, scope: !7578)
!7584 = !DILocation(line: 3339, column: 28, scope: !7578)
!7585 = !DILocation(line: 3339, column: 26, scope: !7578)
!7586 = !DILocation(line: 3339, column: 4, scope: !7578)
!7587 = !DILocation(line: 3339, column: 10, scope: !7578)
!7588 = !DILocation(line: 3339, column: 15, scope: !7578)
!7589 = !DILocation(line: 3340, column: 17, scope: !7578)
!7590 = !DILocation(line: 3340, column: 24, scope: !7578)
!7591 = !DILocation(line: 3340, column: 28, scope: !7578)
!7592 = !DILocation(line: 3340, column: 26, scope: !7578)
!7593 = !DILocation(line: 3340, column: 4, scope: !7578)
!7594 = !DILocation(line: 3340, column: 10, scope: !7578)
!7595 = !DILocation(line: 3340, column: 15, scope: !7578)
!7596 = !DILocation(line: 3342, column: 35, scope: !7597)
!7597 = distinct !DILexicalBlock(scope: !7578, file: !3, line: 3342, column: 8)
!7598 = !DILocation(line: 3342, column: 15, scope: !7597)
!7599 = !DILocation(line: 3342, column: 13, scope: !7597)
!7600 = !DILocation(line: 3342, column: 8, scope: !7578)
!7601 = !DILocalVariable(name: "tevent", scope: !7602, file: !3, line: 3343, type: !3217)
!7602 = distinct !DILexicalBlock(scope: !7597, file: !3, line: 3342, column: 46)
!7603 = !DILocation(line: 3343, column: 13, scope: !7602)
!7604 = !DILocation(line: 3345, column: 31, scope: !7602)
!7605 = !DILocation(line: 3345, column: 5, scope: !7602)
!7606 = !DILocation(line: 3347, column: 16, scope: !7602)
!7607 = !DILocation(line: 3347, column: 22, scope: !7602)
!7608 = !DILocation(line: 3347, column: 29, scope: !7602)
!7609 = !DILocation(line: 3347, column: 27, scope: !7602)
!7610 = !DILocation(line: 3347, column: 12, scope: !7602)
!7611 = !DILocation(line: 3347, column: 14, scope: !7602)
!7612 = !DILocation(line: 3348, column: 16, scope: !7602)
!7613 = !DILocation(line: 3348, column: 22, scope: !7602)
!7614 = !DILocation(line: 3348, column: 29, scope: !7602)
!7615 = !DILocation(line: 3348, column: 27, scope: !7602)
!7616 = !DILocation(line: 3348, column: 12, scope: !7602)
!7617 = !DILocation(line: 3348, column: 14, scope: !7602)
!7618 = !DILocation(line: 3349, column: 9, scope: !7619)
!7619 = distinct !DILexicalBlock(scope: !7602, file: !3, line: 3349, column: 9)
!7620 = !DILocation(line: 3349, column: 18, scope: !7619)
!7621 = !DILocation(line: 3349, column: 29, scope: !7619)
!7622 = !DILocation(line: 3349, column: 9, scope: !7602)
!7623 = !DILocation(line: 3350, column: 13, scope: !7619)
!7624 = !DILocation(line: 3350, column: 18, scope: !7619)
!7625 = !DILocation(line: 3350, column: 6, scope: !7619)
!7626 = !DILocation(line: 3351, column: 14, scope: !7627)
!7627 = distinct !DILexicalBlock(scope: !7619, file: !3, line: 3351, column: 14)
!7628 = !DILocation(line: 3351, column: 23, scope: !7627)
!7629 = !DILocation(line: 3351, column: 34, scope: !7627)
!7630 = !DILocation(line: 3351, column: 14, scope: !7619)
!7631 = !DILocation(line: 3352, column: 13, scope: !7627)
!7632 = !DILocation(line: 3352, column: 18, scope: !7627)
!7633 = !DILocation(line: 3352, column: 6, scope: !7627)
!7634 = !DILocation(line: 3354, column: 13, scope: !7627)
!7635 = !DILocation(line: 3354, column: 18, scope: !7627)
!7636 = !DILocation(line: 3355, column: 18, scope: !7602)
!7637 = !DILocation(line: 3355, column: 12, scope: !7602)
!7638 = !DILocation(line: 3355, column: 16, scope: !7602)
!7639 = !DILocation(line: 3357, column: 18, scope: !7602)
!7640 = !DILocation(line: 3357, column: 5, scope: !7602)
!7641 = !DILocation(line: 3359, column: 20, scope: !7602)
!7642 = !DILocation(line: 3359, column: 23, scope: !7602)
!7643 = !DILocation(line: 3359, column: 5, scope: !7602)
!7644 = !DILocation(line: 3360, column: 4, scope: !7602)
!7645 = !DILocation(line: 3362, column: 4, scope: !7578)
!7646 = !DILocation(line: 3367, column: 8, scope: !7647)
!7647 = distinct !DILexicalBlock(scope: !7578, file: !3, line: 3367, column: 8)
!7648 = !DILocation(line: 3367, column: 17, scope: !7647)
!7649 = !DILocation(line: 3367, column: 31, scope: !7647)
!7650 = !DILocation(line: 3367, column: 38, scope: !7647)
!7651 = !DILocation(line: 3367, column: 28, scope: !7647)
!7652 = !DILocation(line: 3367, column: 8, scope: !7578)
!7653 = !DILocation(line: 3368, column: 20, scope: !7654)
!7654 = distinct !DILexicalBlock(scope: !7647, file: !3, line: 3367, column: 44)
!7655 = !DILocation(line: 3368, column: 23, scope: !7654)
!7656 = !DILocation(line: 3368, column: 5, scope: !7654)
!7657 = !DILocation(line: 3373, column: 17, scope: !7654)
!7658 = !DILocation(line: 3373, column: 25, scope: !7654)
!7659 = !DILocation(line: 3373, column: 29, scope: !7654)
!7660 = !DILocation(line: 3374, column: 4, scope: !7654)
!7661 = !DILocation(line: 3375, column: 4, scope: !7578)
!7662 = !DILocation(line: 3377, column: 9, scope: !7663)
!7663 = distinct !DILexicalBlock(scope: !7578, file: !3, line: 3377, column: 8)
!7664 = !DILocation(line: 3377, column: 30, scope: !7663)
!7665 = !DILocation(line: 3377, column: 33, scope: !7663)
!7666 = !DILocation(line: 3377, column: 40, scope: !7663)
!7667 = !DILocation(line: 3377, column: 45, scope: !7663)
!7668 = !DILocation(line: 3377, column: 8, scope: !7578)
!7669 = !DILocation(line: 3378, column: 20, scope: !7670)
!7670 = distinct !DILexicalBlock(scope: !7663, file: !3, line: 3377, column: 60)
!7671 = !DILocation(line: 3378, column: 23, scope: !7670)
!7672 = !DILocation(line: 3378, column: 5, scope: !7670)
!7673 = !DILocation(line: 3379, column: 4, scope: !7670)
!7674 = !DILocation(line: 3380, column: 4, scope: !7578)
!7675 = !DILocation(line: 3382, column: 1, scope: !7549)
!7676 = distinct !DISubprogram(name: "WM_gesture_lasso_invoke", scope: !3, file: !3, line: 3410, type: !3944, scopeLine: 3411, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!7677 = !DILocalVariable(name: "C", arg: 1, scope: !7676, file: !3, line: 3410, type: !1414)
!7678 = !DILocation(line: 3410, column: 39, scope: !7676)
!7679 = !DILocalVariable(name: "op", arg: 2, scope: !7676, file: !3, line: 3410, type: !2965)
!7680 = !DILocation(line: 3410, column: 54, scope: !7676)
!7681 = !DILocalVariable(name: "event", arg: 3, scope: !7676, file: !3, line: 3410, type: !3946)
!7682 = !DILocation(line: 3410, column: 73, scope: !7676)
!7683 = !DILocation(line: 3412, column: 34, scope: !7676)
!7684 = !DILocation(line: 3412, column: 37, scope: !7676)
!7685 = !DILocation(line: 3412, column: 19, scope: !7676)
!7686 = !DILocation(line: 3412, column: 2, scope: !7676)
!7687 = !DILocation(line: 3412, column: 6, scope: !7676)
!7688 = !DILocation(line: 3412, column: 17, scope: !7676)
!7689 = !DILocation(line: 3415, column: 29, scope: !7676)
!7690 = !DILocation(line: 3415, column: 32, scope: !7676)
!7691 = !DILocation(line: 3415, column: 2, scope: !7676)
!7692 = !DILocation(line: 3417, column: 24, scope: !7676)
!7693 = !DILocation(line: 3417, column: 2, scope: !7676)
!7694 = !DILocation(line: 3419, column: 31, scope: !7695)
!7695 = distinct !DILexicalBlock(scope: !7676, file: !3, line: 3419, column: 6)
!7696 = !DILocation(line: 3419, column: 35, scope: !7695)
!7697 = !DILocation(line: 3419, column: 6, scope: !7695)
!7698 = !DILocation(line: 3419, column: 6, scope: !7676)
!7699 = !DILocation(line: 3420, column: 37, scope: !7700)
!7700 = distinct !DILexicalBlock(scope: !7695, file: !3, line: 3419, column: 51)
!7701 = !DILocation(line: 3420, column: 23, scope: !7700)
!7702 = !DILocation(line: 3420, column: 53, scope: !7700)
!7703 = !DILocation(line: 3420, column: 57, scope: !7700)
!7704 = !DILocation(line: 3420, column: 41, scope: !7700)
!7705 = !DILocation(line: 3420, column: 3, scope: !7700)
!7706 = !DILocation(line: 3421, column: 2, scope: !7700)
!7707 = !DILocation(line: 3423, column: 2, scope: !7676)
!7708 = distinct !DISubprogram(name: "WM_gesture_lines_invoke", scope: !3, file: !3, line: 3426, type: !3944, scopeLine: 3427, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!7709 = !DILocalVariable(name: "C", arg: 1, scope: !7708, file: !3, line: 3426, type: !1414)
!7710 = !DILocation(line: 3426, column: 39, scope: !7708)
!7711 = !DILocalVariable(name: "op", arg: 2, scope: !7708, file: !3, line: 3426, type: !2965)
!7712 = !DILocation(line: 3426, column: 54, scope: !7708)
!7713 = !DILocalVariable(name: "event", arg: 3, scope: !7708, file: !3, line: 3426, type: !3946)
!7714 = !DILocation(line: 3426, column: 73, scope: !7708)
!7715 = !DILocation(line: 3428, column: 34, scope: !7708)
!7716 = !DILocation(line: 3428, column: 37, scope: !7708)
!7717 = !DILocation(line: 3428, column: 19, scope: !7708)
!7718 = !DILocation(line: 3428, column: 2, scope: !7708)
!7719 = !DILocation(line: 3428, column: 6, scope: !7708)
!7720 = !DILocation(line: 3428, column: 17, scope: !7708)
!7721 = !DILocation(line: 3431, column: 29, scope: !7708)
!7722 = !DILocation(line: 3431, column: 32, scope: !7708)
!7723 = !DILocation(line: 3431, column: 2, scope: !7708)
!7724 = !DILocation(line: 3433, column: 24, scope: !7708)
!7725 = !DILocation(line: 3433, column: 2, scope: !7708)
!7726 = !DILocation(line: 3435, column: 31, scope: !7727)
!7727 = distinct !DILexicalBlock(scope: !7708, file: !3, line: 3435, column: 6)
!7728 = !DILocation(line: 3435, column: 35, scope: !7727)
!7729 = !DILocation(line: 3435, column: 6, scope: !7727)
!7730 = !DILocation(line: 3435, column: 6, scope: !7708)
!7731 = !DILocation(line: 3436, column: 37, scope: !7732)
!7732 = distinct !DILexicalBlock(scope: !7727, file: !3, line: 3435, column: 51)
!7733 = !DILocation(line: 3436, column: 23, scope: !7732)
!7734 = !DILocation(line: 3436, column: 53, scope: !7732)
!7735 = !DILocation(line: 3436, column: 57, scope: !7732)
!7736 = !DILocation(line: 3436, column: 41, scope: !7732)
!7737 = !DILocation(line: 3436, column: 3, scope: !7732)
!7738 = !DILocation(line: 3437, column: 2, scope: !7732)
!7739 = !DILocation(line: 3439, column: 2, scope: !7708)
!7740 = distinct !DISubprogram(name: "WM_gesture_lasso_modal", scope: !3, file: !3, line: 3469, type: !3944, scopeLine: 3470, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!7741 = !DILocalVariable(name: "C", arg: 1, scope: !7740, file: !3, line: 3469, type: !1414)
!7742 = !DILocation(line: 3469, column: 38, scope: !7740)
!7743 = !DILocalVariable(name: "op", arg: 2, scope: !7740, file: !3, line: 3469, type: !2965)
!7744 = !DILocation(line: 3469, column: 53, scope: !7740)
!7745 = !DILocalVariable(name: "event", arg: 3, scope: !7740, file: !3, line: 3469, type: !3946)
!7746 = !DILocation(line: 3469, column: 72, scope: !7740)
!7747 = !DILocalVariable(name: "gesture", scope: !7740, file: !3, line: 3471, type: !6987)
!7748 = !DILocation(line: 3471, column: 13, scope: !7740)
!7749 = !DILocation(line: 3471, column: 23, scope: !7740)
!7750 = !DILocation(line: 3471, column: 27, scope: !7740)
!7751 = !DILocalVariable(name: "sx", scope: !7740, file: !3, line: 3472, type: !1224)
!7752 = !DILocation(line: 3472, column: 6, scope: !7740)
!7753 = !DILocalVariable(name: "sy", scope: !7740, file: !3, line: 3472, type: !1224)
!7754 = !DILocation(line: 3472, column: 10, scope: !7740)
!7755 = !DILocation(line: 3474, column: 10, scope: !7740)
!7756 = !DILocation(line: 3474, column: 17, scope: !7740)
!7757 = !DILocation(line: 3474, column: 2, scope: !7740)
!7758 = !DILocation(line: 3478, column: 26, scope: !7759)
!7759 = distinct !DILexicalBlock(scope: !7740, file: !3, line: 3474, column: 23)
!7760 = !DILocation(line: 3478, column: 4, scope: !7759)
!7761 = !DILocation(line: 3480, column: 42, scope: !7759)
!7762 = !DILocation(line: 3480, column: 28, scope: !7759)
!7763 = !DILocation(line: 3480, column: 46, scope: !7759)
!7764 = !DILocation(line: 3480, column: 55, scope: !7759)
!7765 = !DILocation(line: 3480, column: 4, scope: !7759)
!7766 = !DILocation(line: 3482, column: 8, scope: !7767)
!7767 = distinct !DILexicalBlock(scope: !7759, file: !3, line: 3482, column: 8)
!7768 = !DILocation(line: 3482, column: 17, scope: !7767)
!7769 = !DILocation(line: 3482, column: 27, scope: !7767)
!7770 = !DILocation(line: 3482, column: 36, scope: !7767)
!7771 = !DILocation(line: 3482, column: 24, scope: !7767)
!7772 = !DILocation(line: 3482, column: 8, scope: !7759)
!7773 = !DILocalVariable(name: "old_lasso", scope: !7774, file: !3, line: 3483, type: !1503)
!7774 = distinct !DILexicalBlock(scope: !7767, file: !3, line: 3482, column: 42)
!7775 = !DILocation(line: 3483, column: 12, scope: !7774)
!7776 = !DILocation(line: 3483, column: 24, scope: !7774)
!7777 = !DILocation(line: 3483, column: 33, scope: !7774)
!7778 = !DILocation(line: 3484, column: 27, scope: !7774)
!7779 = !DILocation(line: 3484, column: 60, scope: !7774)
!7780 = !DILocation(line: 3484, column: 69, scope: !7774)
!7781 = !DILocation(line: 3484, column: 74, scope: !7774)
!7782 = !DILocation(line: 3484, column: 59, scope: !7774)
!7783 = !DILocation(line: 3484, column: 57, scope: !7774)
!7784 = !DILocation(line: 3484, column: 5, scope: !7774)
!7785 = !DILocation(line: 3484, column: 14, scope: !7774)
!7786 = !DILocation(line: 3484, column: 25, scope: !7774)
!7787 = !DILocation(line: 3485, column: 12, scope: !7774)
!7788 = !DILocation(line: 3485, column: 21, scope: !7774)
!7789 = !DILocation(line: 3485, column: 33, scope: !7774)
!7790 = !DILocation(line: 3485, column: 5, scope: !7774)
!7791 = !DILocation(line: 3485, column: 64, scope: !7774)
!7792 = !DILocation(line: 3485, column: 73, scope: !7774)
!7793 = !DILocation(line: 3485, column: 62, scope: !7774)
!7794 = !DILocation(line: 3486, column: 21, scope: !7774)
!7795 = !DILocation(line: 3486, column: 30, scope: !7774)
!7796 = !DILocation(line: 3486, column: 35, scope: !7774)
!7797 = !DILocation(line: 3486, column: 5, scope: !7774)
!7798 = !DILocation(line: 3486, column: 14, scope: !7774)
!7799 = !DILocation(line: 3486, column: 19, scope: !7774)
!7800 = !DILocation(line: 3487, column: 5, scope: !7774)
!7801 = !DILocation(line: 3487, column: 15, scope: !7774)
!7802 = !DILocation(line: 3489, column: 4, scope: !7774)
!7803 = !DILocalVariable(name: "x", scope: !7804, file: !3, line: 3492, type: !1224)
!7804 = distinct !DILexicalBlock(scope: !7759, file: !3, line: 3491, column: 4)
!7805 = !DILocation(line: 3492, column: 9, scope: !7804)
!7806 = !DILocalVariable(name: "y", scope: !7804, file: !3, line: 3492, type: !1224)
!7807 = !DILocation(line: 3492, column: 12, scope: !7804)
!7808 = !DILocalVariable(name: "lasso", scope: !7804, file: !3, line: 3493, type: !1503)
!7809 = !DILocation(line: 3493, column: 12, scope: !7804)
!7810 = !DILocation(line: 3493, column: 20, scope: !7804)
!7811 = !DILocation(line: 3493, column: 29, scope: !7804)
!7812 = !DILocation(line: 3495, column: 19, scope: !7804)
!7813 = !DILocation(line: 3495, column: 28, scope: !7804)
!7814 = !DILocation(line: 3495, column: 17, scope: !7804)
!7815 = !DILocation(line: 3495, column: 35, scope: !7804)
!7816 = !DILocation(line: 3495, column: 11, scope: !7804)
!7817 = !DILocation(line: 3496, column: 10, scope: !7804)
!7818 = !DILocation(line: 3496, column: 17, scope: !7804)
!7819 = !DILocation(line: 3496, column: 21, scope: !7804)
!7820 = !DILocation(line: 3496, column: 19, scope: !7804)
!7821 = !DILocation(line: 3496, column: 26, scope: !7804)
!7822 = !DILocation(line: 3496, column: 24, scope: !7804)
!7823 = !DILocation(line: 3496, column: 7, scope: !7804)
!7824 = !DILocation(line: 3497, column: 10, scope: !7804)
!7825 = !DILocation(line: 3497, column: 17, scope: !7804)
!7826 = !DILocation(line: 3497, column: 21, scope: !7804)
!7827 = !DILocation(line: 3497, column: 19, scope: !7804)
!7828 = !DILocation(line: 3497, column: 26, scope: !7804)
!7829 = !DILocation(line: 3497, column: 24, scope: !7804)
!7830 = !DILocation(line: 3497, column: 7, scope: !7804)
!7831 = !DILocation(line: 3501, column: 10, scope: !7832)
!7832 = distinct !DILexicalBlock(scope: !7804, file: !3, line: 3501, column: 9)
!7833 = !DILocation(line: 3501, column: 14, scope: !7832)
!7834 = !DILocation(line: 3501, column: 12, scope: !7832)
!7835 = !DILocation(line: 3501, column: 18, scope: !7832)
!7836 = !DILocation(line: 3501, column: 22, scope: !7832)
!7837 = !DILocation(line: 3501, column: 20, scope: !7832)
!7838 = !DILocation(line: 3501, column: 16, scope: !7832)
!7839 = !DILocation(line: 3501, column: 25, scope: !7832)
!7840 = !DILocation(line: 3501, column: 9, scope: !7804)
!7841 = !DILocation(line: 3502, column: 12, scope: !7842)
!7842 = distinct !DILexicalBlock(scope: !7832, file: !3, line: 3501, column: 30)
!7843 = !DILocation(line: 3503, column: 17, scope: !7842)
!7844 = !DILocation(line: 3503, column: 24, scope: !7842)
!7845 = !DILocation(line: 3503, column: 28, scope: !7842)
!7846 = !DILocation(line: 3503, column: 26, scope: !7842)
!7847 = !DILocation(line: 3503, column: 6, scope: !7842)
!7848 = !DILocation(line: 3503, column: 15, scope: !7842)
!7849 = !DILocation(line: 3504, column: 17, scope: !7842)
!7850 = !DILocation(line: 3504, column: 24, scope: !7842)
!7851 = !DILocation(line: 3504, column: 28, scope: !7842)
!7852 = !DILocation(line: 3504, column: 26, scope: !7842)
!7853 = !DILocation(line: 3504, column: 6, scope: !7842)
!7854 = !DILocation(line: 3504, column: 15, scope: !7842)
!7855 = !DILocation(line: 3505, column: 6, scope: !7842)
!7856 = !DILocation(line: 3505, column: 15, scope: !7842)
!7857 = !DILocation(line: 3505, column: 21, scope: !7842)
!7858 = !DILocation(line: 3506, column: 5, scope: !7842)
!7859 = !DILocation(line: 3508, column: 4, scope: !7759)
!7860 = !DILocation(line: 3513, column: 8, scope: !7861)
!7861 = distinct !DILexicalBlock(scope: !7759, file: !3, line: 3513, column: 8)
!7862 = !DILocation(line: 3513, column: 15, scope: !7861)
!7863 = !DILocation(line: 3513, column: 19, scope: !7861)
!7864 = !DILocation(line: 3513, column: 8, scope: !7759)
!7865 = !DILocation(line: 3514, column: 25, scope: !7866)
!7866 = distinct !DILexicalBlock(scope: !7861, file: !3, line: 3513, column: 34)
!7867 = !DILocation(line: 3514, column: 28, scope: !7866)
!7868 = !DILocation(line: 3514, column: 5, scope: !7866)
!7869 = !DILocation(line: 3515, column: 5, scope: !7866)
!7870 = !DILocation(line: 3517, column: 4, scope: !7759)
!7871 = !DILocation(line: 3519, column: 19, scope: !7759)
!7872 = !DILocation(line: 3519, column: 22, scope: !7759)
!7873 = !DILocation(line: 3519, column: 4, scope: !7759)
!7874 = !DILocation(line: 3520, column: 4, scope: !7759)
!7875 = !DILocation(line: 3522, column: 2, scope: !7740)
!7876 = !DILocation(line: 3523, column: 1, scope: !7740)
!7877 = distinct !DISubprogram(name: "gesture_lasso_apply", scope: !3, file: !3, line: 3443, type: !4165, scopeLine: 3444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!7878 = !DILocalVariable(name: "C", arg: 1, scope: !7877, file: !3, line: 3443, type: !1414)
!7879 = !DILocation(line: 3443, column: 43, scope: !7877)
!7880 = !DILocalVariable(name: "op", arg: 2, scope: !7877, file: !3, line: 3443, type: !2965)
!7881 = !DILocation(line: 3443, column: 58, scope: !7877)
!7882 = !DILocalVariable(name: "gesture", scope: !7877, file: !3, line: 3445, type: !6987)
!7883 = !DILocation(line: 3445, column: 13, scope: !7877)
!7884 = !DILocation(line: 3445, column: 23, scope: !7877)
!7885 = !DILocation(line: 3445, column: 27, scope: !7877)
!7886 = !DILocalVariable(name: "itemptr", scope: !7877, file: !3, line: 3446, type: !4319)
!7887 = !DILocation(line: 3446, column: 13, scope: !7877)
!7888 = !DILocalVariable(name: "loc", scope: !7877, file: !3, line: 3447, type: !1763)
!7889 = !DILocation(line: 3447, column: 8, scope: !7877)
!7890 = !DILocalVariable(name: "i", scope: !7877, file: !3, line: 3448, type: !1224)
!7891 = !DILocation(line: 3448, column: 6, scope: !7877)
!7892 = !DILocalVariable(name: "lasso", scope: !7877, file: !3, line: 3449, type: !7893)
!7893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7894, size: 64)
!7894 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1460)
!7895 = !DILocation(line: 3449, column: 15, scope: !7877)
!7896 = !DILocation(line: 3449, column: 23, scope: !7877)
!7897 = !DILocation(line: 3449, column: 32, scope: !7877)
!7898 = !DILocation(line: 3453, column: 23, scope: !7877)
!7899 = !DILocation(line: 3453, column: 27, scope: !7877)
!7900 = !DILocation(line: 3453, column: 2, scope: !7877)
!7901 = !DILocation(line: 3454, column: 9, scope: !7902)
!7902 = distinct !DILexicalBlock(scope: !7877, file: !3, line: 3454, column: 2)
!7903 = !DILocation(line: 3454, column: 7, scope: !7902)
!7904 = !DILocation(line: 3454, column: 14, scope: !7905)
!7905 = distinct !DILexicalBlock(scope: !7902, file: !3, line: 3454, column: 2)
!7906 = !DILocation(line: 3454, column: 18, scope: !7905)
!7907 = !DILocation(line: 3454, column: 27, scope: !7905)
!7908 = !DILocation(line: 3454, column: 16, scope: !7905)
!7909 = !DILocation(line: 3454, column: 2, scope: !7902)
!7910 = !DILocation(line: 3455, column: 12, scope: !7911)
!7911 = distinct !DILexicalBlock(scope: !7905, file: !3, line: 3454, column: 52)
!7912 = !DILocation(line: 3455, column: 3, scope: !7911)
!7913 = !DILocation(line: 3455, column: 10, scope: !7911)
!7914 = !DILocation(line: 3456, column: 12, scope: !7911)
!7915 = !DILocation(line: 3456, column: 3, scope: !7911)
!7916 = !DILocation(line: 3456, column: 10, scope: !7911)
!7917 = !DILocation(line: 3457, column: 22, scope: !7911)
!7918 = !DILocation(line: 3457, column: 26, scope: !7911)
!7919 = !DILocation(line: 3457, column: 3, scope: !7911)
!7920 = !DILocation(line: 3458, column: 40, scope: !7911)
!7921 = !DILocation(line: 3458, column: 3, scope: !7911)
!7922 = !DILocation(line: 3459, column: 2, scope: !7911)
!7923 = !DILocation(line: 3454, column: 36, scope: !7905)
!7924 = !DILocation(line: 3454, column: 46, scope: !7905)
!7925 = !DILocation(line: 3454, column: 2, scope: !7905)
!7926 = distinct !{!7926, !7909, !7927}
!7927 = !DILocation(line: 3459, column: 2, scope: !7902)
!7928 = !DILocation(line: 3461, column: 17, scope: !7877)
!7929 = !DILocation(line: 3461, column: 20, scope: !7877)
!7930 = !DILocation(line: 3461, column: 2, scope: !7877)
!7931 = !DILocation(line: 3463, column: 6, scope: !7932)
!7932 = distinct !DILexicalBlock(scope: !7877, file: !3, line: 3463, column: 6)
!7933 = !DILocation(line: 3463, column: 10, scope: !7932)
!7934 = !DILocation(line: 3463, column: 16, scope: !7932)
!7935 = !DILocation(line: 3463, column: 6, scope: !7877)
!7936 = !DILocalVariable(name: "retval", scope: !7937, file: !3, line: 3464, type: !1224)
!7937 = distinct !DILexicalBlock(scope: !7932, file: !3, line: 3463, column: 22)
!7938 = !DILocation(line: 3464, column: 7, scope: !7937)
!7939 = !DILocation(line: 3464, column: 16, scope: !7937)
!7940 = !DILocation(line: 3464, column: 20, scope: !7937)
!7941 = !DILocation(line: 3464, column: 26, scope: !7937)
!7942 = !DILocation(line: 3464, column: 31, scope: !7937)
!7943 = !DILocation(line: 3464, column: 34, scope: !7937)
!7944 = !DILocation(line: 3465, column: 3, scope: !7937)
!7945 = !DILocation(line: 3466, column: 2, scope: !7937)
!7946 = !DILocation(line: 3467, column: 1, scope: !7877)
!7947 = distinct !DISubprogram(name: "WM_gesture_lines_modal", scope: !3, file: !3, line: 3525, type: !3944, scopeLine: 3526, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!7948 = !DILocalVariable(name: "C", arg: 1, scope: !7947, file: !3, line: 3525, type: !1414)
!7949 = !DILocation(line: 3525, column: 38, scope: !7947)
!7950 = !DILocalVariable(name: "op", arg: 2, scope: !7947, file: !3, line: 3525, type: !2965)
!7951 = !DILocation(line: 3525, column: 53, scope: !7947)
!7952 = !DILocalVariable(name: "event", arg: 3, scope: !7947, file: !3, line: 3525, type: !3946)
!7953 = !DILocation(line: 3525, column: 72, scope: !7947)
!7954 = !DILocation(line: 3527, column: 32, scope: !7947)
!7955 = !DILocation(line: 3527, column: 35, scope: !7947)
!7956 = !DILocation(line: 3527, column: 39, scope: !7947)
!7957 = !DILocation(line: 3527, column: 9, scope: !7947)
!7958 = !DILocation(line: 3527, column: 2, scope: !7947)
!7959 = distinct !DISubprogram(name: "WM_gesture_lasso_cancel", scope: !3, file: !3, line: 3530, type: !4165, scopeLine: 3531, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!7960 = !DILocalVariable(name: "C", arg: 1, scope: !7959, file: !3, line: 3530, type: !1414)
!7961 = !DILocation(line: 3530, column: 40, scope: !7959)
!7962 = !DILocalVariable(name: "op", arg: 2, scope: !7959, file: !3, line: 3530, type: !2965)
!7963 = !DILocation(line: 3530, column: 55, scope: !7959)
!7964 = !DILocation(line: 3532, column: 17, scope: !7959)
!7965 = !DILocation(line: 3532, column: 20, scope: !7959)
!7966 = !DILocation(line: 3532, column: 2, scope: !7959)
!7967 = !DILocation(line: 3533, column: 1, scope: !7959)
!7968 = distinct !DISubprogram(name: "WM_gesture_lines_cancel", scope: !3, file: !3, line: 3535, type: !4165, scopeLine: 3536, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!7969 = !DILocalVariable(name: "C", arg: 1, scope: !7968, file: !3, line: 3535, type: !1414)
!7970 = !DILocation(line: 3535, column: 40, scope: !7968)
!7971 = !DILocalVariable(name: "op", arg: 2, scope: !7968, file: !3, line: 3535, type: !2965)
!7972 = !DILocation(line: 3535, column: 55, scope: !7968)
!7973 = !DILocation(line: 3537, column: 17, scope: !7968)
!7974 = !DILocation(line: 3537, column: 20, scope: !7968)
!7975 = !DILocation(line: 3537, column: 2, scope: !7968)
!7976 = !DILocation(line: 3538, column: 1, scope: !7968)
!7977 = distinct !DISubprogram(name: "WM_gesture_lasso_path_to_array", scope: !3, file: !3, line: 3545, type: !7978, scopeLine: 3546, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!7978 = !DISubroutineType(types: !7979)
!7979 = !{!1417, !1414, !2965, !7980}
!7980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1224, size: 64)
!7981 = !DILocalVariable(name: "UNUSED_C", arg: 1, scope: !7977, file: !3, line: 3545, type: !1414)
!7982 = !DILocation(line: 3545, column: 54, scope: !7977)
!7983 = !DILocalVariable(name: "op", arg: 2, scope: !7977, file: !3, line: 3545, type: !2965)
!7984 = !DILocation(line: 3545, column: 77, scope: !7977)
!7985 = !DILocalVariable(name: "mcords_tot", arg: 3, scope: !7977, file: !3, line: 3545, type: !7980)
!7986 = !DILocation(line: 3545, column: 86, scope: !7977)
!7987 = !DILocalVariable(name: "prop", scope: !7977, file: !3, line: 3547, type: !1392)
!7988 = !DILocation(line: 3547, column: 15, scope: !7977)
!7989 = !DILocation(line: 3547, column: 47, scope: !7977)
!7990 = !DILocation(line: 3547, column: 51, scope: !7977)
!7991 = !DILocation(line: 3547, column: 22, scope: !7977)
!7992 = !DILocalVariable(name: "mcords", scope: !7977, file: !3, line: 3548, type: !7993)
!7993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2004, size: 64)
!7994 = !DILocation(line: 3548, column: 8, scope: !7977)
!7995 = !DILocation(line: 3551, column: 6, scope: !7996)
!7996 = distinct !DILexicalBlock(scope: !7977, file: !3, line: 3551, column: 6)
!7997 = !DILocation(line: 3551, column: 6, scope: !7977)
!7998 = !DILocalVariable(name: "len", scope: !7999, file: !3, line: 3552, type: !1419)
!7999 = distinct !DILexicalBlock(scope: !7996, file: !3, line: 3551, column: 12)
!8000 = !DILocation(line: 3552, column: 13, scope: !7999)
!8001 = !DILocation(line: 3552, column: 50, scope: !7999)
!8002 = !DILocation(line: 3552, column: 54, scope: !7999)
!8003 = !DILocation(line: 3552, column: 59, scope: !7999)
!8004 = !DILocation(line: 3552, column: 19, scope: !7999)
!8005 = !DILocation(line: 3554, column: 7, scope: !8006)
!8006 = distinct !DILexicalBlock(scope: !7999, file: !3, line: 3554, column: 7)
!8007 = !DILocation(line: 3554, column: 7, scope: !7999)
!8008 = !DILocalVariable(name: "i", scope: !8009, file: !3, line: 3555, type: !1224)
!8009 = distinct !DILexicalBlock(scope: !8006, file: !3, line: 3554, column: 12)
!8010 = !DILocation(line: 3555, column: 8, scope: !8009)
!8011 = !DILocation(line: 3556, column: 13, scope: !8009)
!8012 = !DILocation(line: 3556, column: 43, scope: !8009)
!8013 = !DILocation(line: 3556, column: 41, scope: !8009)
!8014 = !DILocation(line: 3556, column: 11, scope: !8009)
!8015 = !DILocalVariable(name: "rna_macro_iter", scope: !8016, file: !3, line: 3558, type: !4394)
!8016 = distinct !DILexicalBlock(scope: !8009, file: !3, line: 3558, column: 4)
!8017 = !DILocation(line: 3558, column: 4, scope: !8016)
!8018 = !DILocation(line: 3558, column: 4, scope: !8019)
!8019 = distinct !DILexicalBlock(scope: !8016, file: !3, line: 3558, column: 4)
!8020 = !DILocation(line: 3558, column: 4, scope: !8021)
!8021 = distinct !DILexicalBlock(scope: !8019, file: !3, line: 3558, column: 4)
!8022 = !DILocalVariable(name: "itemptr", scope: !8023, file: !3, line: 3558, type: !4319)
!8023 = distinct !DILexicalBlock(scope: !8021, file: !3, line: 3558, column: 4)
!8024 = !DILocation(line: 3558, column: 4, scope: !8023)
!8025 = !DILocalVariable(name: "loc", scope: !8026, file: !3, line: 3560, type: !1763)
!8026 = distinct !DILexicalBlock(scope: !8023, file: !3, line: 3559, column: 4)
!8027 = !DILocation(line: 3560, column: 11, scope: !8026)
!8028 = !DILocation(line: 3562, column: 42, scope: !8026)
!8029 = !DILocation(line: 3562, column: 5, scope: !8026)
!8030 = !DILocation(line: 3563, column: 25, scope: !8026)
!8031 = !DILocation(line: 3563, column: 20, scope: !8026)
!8032 = !DILocation(line: 3563, column: 5, scope: !8026)
!8033 = !DILocation(line: 3563, column: 12, scope: !8026)
!8034 = !DILocation(line: 3563, column: 18, scope: !8026)
!8035 = !DILocation(line: 3564, column: 25, scope: !8026)
!8036 = !DILocation(line: 3564, column: 20, scope: !8026)
!8037 = !DILocation(line: 3564, column: 5, scope: !8026)
!8038 = !DILocation(line: 3564, column: 12, scope: !8026)
!8039 = !DILocation(line: 3564, column: 18, scope: !8026)
!8040 = !DILocation(line: 3565, column: 6, scope: !8026)
!8041 = !DILocation(line: 3567, column: 4, scope: !8023)
!8042 = distinct !{!8042, !8018, !8043}
!8043 = !DILocation(line: 3567, column: 4, scope: !8019)
!8044 = !DILocation(line: 3567, column: 4, scope: !8016)
!8045 = !DILocation(line: 3568, column: 3, scope: !8009)
!8046 = !DILocation(line: 3569, column: 17, scope: !7999)
!8047 = !DILocation(line: 3569, column: 4, scope: !7999)
!8048 = !DILocation(line: 3569, column: 15, scope: !7999)
!8049 = !DILocation(line: 3570, column: 2, scope: !7999)
!8050 = !DILocation(line: 3572, column: 4, scope: !8051)
!8051 = distinct !DILexicalBlock(scope: !7996, file: !3, line: 3571, column: 7)
!8052 = !DILocation(line: 3572, column: 15, scope: !8051)
!8053 = !DILocation(line: 3576, column: 27, scope: !7977)
!8054 = !DILocation(line: 3576, column: 2, scope: !7977)
!8055 = distinct !DISubprogram(name: "WM_gesture_straightline_invoke", scope: !3, file: !3, line: 3640, type: !3944, scopeLine: 3641, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!8056 = !DILocalVariable(name: "C", arg: 1, scope: !8055, file: !3, line: 3640, type: !1414)
!8057 = !DILocation(line: 3640, column: 46, scope: !8055)
!8058 = !DILocalVariable(name: "op", arg: 2, scope: !8055, file: !3, line: 3640, type: !2965)
!8059 = !DILocation(line: 3640, column: 61, scope: !8055)
!8060 = !DILocalVariable(name: "event", arg: 3, scope: !8055, file: !3, line: 3640, type: !3946)
!8061 = !DILocation(line: 3640, column: 80, scope: !8055)
!8062 = !DILocation(line: 3642, column: 34, scope: !8055)
!8063 = !DILocation(line: 3642, column: 37, scope: !8055)
!8064 = !DILocation(line: 3642, column: 19, scope: !8055)
!8065 = !DILocation(line: 3642, column: 2, scope: !8055)
!8066 = !DILocation(line: 3642, column: 6, scope: !8055)
!8067 = !DILocation(line: 3642, column: 17, scope: !8055)
!8068 = !DILocation(line: 3645, column: 29, scope: !8055)
!8069 = !DILocation(line: 3645, column: 32, scope: !8055)
!8070 = !DILocation(line: 3645, column: 2, scope: !8055)
!8071 = !DILocation(line: 3647, column: 24, scope: !8055)
!8072 = !DILocation(line: 3647, column: 2, scope: !8055)
!8073 = !DILocation(line: 3649, column: 31, scope: !8074)
!8074 = distinct !DILexicalBlock(scope: !8055, file: !3, line: 3649, column: 6)
!8075 = !DILocation(line: 3649, column: 35, scope: !8074)
!8076 = !DILocation(line: 3649, column: 6, scope: !8074)
!8077 = !DILocation(line: 3649, column: 6, scope: !8055)
!8078 = !DILocation(line: 3650, column: 37, scope: !8079)
!8079 = distinct !DILexicalBlock(scope: !8074, file: !3, line: 3649, column: 51)
!8080 = !DILocation(line: 3650, column: 23, scope: !8079)
!8081 = !DILocation(line: 3650, column: 53, scope: !8079)
!8082 = !DILocation(line: 3650, column: 57, scope: !8079)
!8083 = !DILocation(line: 3650, column: 41, scope: !8079)
!8084 = !DILocation(line: 3650, column: 3, scope: !8079)
!8085 = !DILocation(line: 3651, column: 2, scope: !8079)
!8086 = !DILocation(line: 3653, column: 2, scope: !8055)
!8087 = distinct !DISubprogram(name: "WM_gesture_straightline_modal", scope: !3, file: !3, line: 3656, type: !3944, scopeLine: 3657, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!8088 = !DILocalVariable(name: "C", arg: 1, scope: !8087, file: !3, line: 3656, type: !1414)
!8089 = !DILocation(line: 3656, column: 45, scope: !8087)
!8090 = !DILocalVariable(name: "op", arg: 2, scope: !8087, file: !3, line: 3656, type: !2965)
!8091 = !DILocation(line: 3656, column: 60, scope: !8087)
!8092 = !DILocalVariable(name: "event", arg: 3, scope: !8087, file: !3, line: 3656, type: !3946)
!8093 = !DILocation(line: 3656, column: 79, scope: !8087)
!8094 = !DILocalVariable(name: "gesture", scope: !8087, file: !3, line: 3658, type: !6987)
!8095 = !DILocation(line: 3658, column: 13, scope: !8087)
!8096 = !DILocation(line: 3658, column: 23, scope: !8087)
!8097 = !DILocation(line: 3658, column: 27, scope: !8087)
!8098 = !DILocalVariable(name: "rect", scope: !8087, file: !3, line: 3659, type: !6049)
!8099 = !DILocation(line: 3659, column: 8, scope: !8087)
!8100 = !DILocation(line: 3659, column: 15, scope: !8087)
!8101 = !DILocation(line: 3659, column: 24, scope: !8087)
!8102 = !DILocalVariable(name: "sx", scope: !8087, file: !3, line: 3660, type: !1224)
!8103 = !DILocation(line: 3660, column: 6, scope: !8087)
!8104 = !DILocalVariable(name: "sy", scope: !8087, file: !3, line: 3660, type: !1224)
!8105 = !DILocation(line: 3660, column: 10, scope: !8087)
!8106 = !DILocation(line: 3662, column: 6, scope: !8107)
!8107 = distinct !DILexicalBlock(scope: !8087, file: !3, line: 3662, column: 6)
!8108 = !DILocation(line: 3662, column: 13, scope: !8107)
!8109 = !DILocation(line: 3662, column: 18, scope: !8107)
!8110 = !DILocation(line: 3662, column: 6, scope: !8087)
!8111 = !DILocation(line: 3663, column: 41, scope: !8112)
!8112 = distinct !DILexicalBlock(scope: !8107, file: !3, line: 3662, column: 32)
!8113 = !DILocation(line: 3663, column: 27, scope: !8112)
!8114 = !DILocation(line: 3663, column: 45, scope: !8112)
!8115 = !DILocation(line: 3663, column: 54, scope: !8112)
!8116 = !DILocation(line: 3663, column: 3, scope: !8112)
!8117 = !DILocation(line: 3665, column: 7, scope: !8118)
!8118 = distinct !DILexicalBlock(scope: !8112, file: !3, line: 3665, column: 7)
!8119 = !DILocation(line: 3665, column: 16, scope: !8118)
!8120 = !DILocation(line: 3665, column: 21, scope: !8118)
!8121 = !DILocation(line: 3665, column: 7, scope: !8112)
!8122 = !DILocation(line: 3666, column: 30, scope: !8123)
!8123 = distinct !DILexicalBlock(scope: !8118, file: !3, line: 3665, column: 27)
!8124 = !DILocation(line: 3666, column: 37, scope: !8123)
!8125 = !DILocation(line: 3666, column: 41, scope: !8123)
!8126 = !DILocation(line: 3666, column: 39, scope: !8123)
!8127 = !DILocation(line: 3666, column: 17, scope: !8123)
!8128 = !DILocation(line: 3666, column: 23, scope: !8123)
!8129 = !DILocation(line: 3666, column: 28, scope: !8123)
!8130 = !DILocation(line: 3666, column: 4, scope: !8123)
!8131 = !DILocation(line: 3666, column: 10, scope: !8123)
!8132 = !DILocation(line: 3666, column: 15, scope: !8123)
!8133 = !DILocation(line: 3667, column: 30, scope: !8123)
!8134 = !DILocation(line: 3667, column: 37, scope: !8123)
!8135 = !DILocation(line: 3667, column: 41, scope: !8123)
!8136 = !DILocation(line: 3667, column: 39, scope: !8123)
!8137 = !DILocation(line: 3667, column: 17, scope: !8123)
!8138 = !DILocation(line: 3667, column: 23, scope: !8123)
!8139 = !DILocation(line: 3667, column: 28, scope: !8123)
!8140 = !DILocation(line: 3667, column: 4, scope: !8123)
!8141 = !DILocation(line: 3667, column: 10, scope: !8123)
!8142 = !DILocation(line: 3667, column: 15, scope: !8123)
!8143 = !DILocation(line: 3668, column: 3, scope: !8123)
!8144 = !DILocation(line: 3670, column: 17, scope: !8145)
!8145 = distinct !DILexicalBlock(scope: !8118, file: !3, line: 3669, column: 8)
!8146 = !DILocation(line: 3670, column: 24, scope: !8145)
!8147 = !DILocation(line: 3670, column: 28, scope: !8145)
!8148 = !DILocation(line: 3670, column: 26, scope: !8145)
!8149 = !DILocation(line: 3670, column: 4, scope: !8145)
!8150 = !DILocation(line: 3670, column: 10, scope: !8145)
!8151 = !DILocation(line: 3670, column: 15, scope: !8145)
!8152 = !DILocation(line: 3671, column: 17, scope: !8145)
!8153 = !DILocation(line: 3671, column: 24, scope: !8145)
!8154 = !DILocation(line: 3671, column: 28, scope: !8145)
!8155 = !DILocation(line: 3671, column: 26, scope: !8145)
!8156 = !DILocation(line: 3671, column: 4, scope: !8145)
!8157 = !DILocation(line: 3671, column: 10, scope: !8145)
!8158 = !DILocation(line: 3671, column: 15, scope: !8145)
!8159 = !DILocation(line: 3672, column: 23, scope: !8145)
!8160 = !DILocation(line: 3672, column: 26, scope: !8145)
!8161 = !DILocation(line: 3672, column: 4, scope: !8145)
!8162 = !DILocation(line: 3675, column: 25, scope: !8112)
!8163 = !DILocation(line: 3675, column: 3, scope: !8112)
!8164 = !DILocation(line: 3676, column: 2, scope: !8112)
!8165 = !DILocation(line: 3677, column: 11, scope: !8166)
!8166 = distinct !DILexicalBlock(scope: !8107, file: !3, line: 3677, column: 11)
!8167 = !DILocation(line: 3677, column: 18, scope: !8166)
!8168 = !DILocation(line: 3677, column: 23, scope: !8166)
!8169 = !DILocation(line: 3677, column: 11, scope: !8107)
!8170 = !DILocation(line: 3678, column: 11, scope: !8171)
!8171 = distinct !DILexicalBlock(scope: !8166, file: !3, line: 3677, column: 41)
!8172 = !DILocation(line: 3678, column: 18, scope: !8171)
!8173 = !DILocation(line: 3678, column: 3, scope: !8171)
!8174 = !DILocation(line: 3680, column: 9, scope: !8175)
!8175 = distinct !DILexicalBlock(scope: !8176, file: !3, line: 3680, column: 9)
!8176 = distinct !DILexicalBlock(scope: !8171, file: !3, line: 3678, column: 23)
!8177 = !DILocation(line: 3680, column: 18, scope: !8175)
!8178 = !DILocation(line: 3680, column: 23, scope: !8175)
!8179 = !DILocation(line: 3680, column: 9, scope: !8176)
!8180 = !DILocation(line: 3681, column: 6, scope: !8181)
!8181 = distinct !DILexicalBlock(scope: !8175, file: !3, line: 3680, column: 29)
!8182 = !DILocation(line: 3681, column: 15, scope: !8181)
!8183 = !DILocation(line: 3681, column: 20, scope: !8181)
!8184 = !DILocation(line: 3682, column: 28, scope: !8181)
!8185 = !DILocation(line: 3682, column: 6, scope: !8181)
!8186 = !DILocation(line: 3683, column: 5, scope: !8181)
!8187 = !DILocation(line: 3684, column: 5, scope: !8176)
!8188 = !DILocation(line: 3686, column: 28, scope: !8189)
!8189 = distinct !DILexicalBlock(scope: !8176, file: !3, line: 3686, column: 9)
!8190 = !DILocation(line: 3686, column: 31, scope: !8189)
!8191 = !DILocation(line: 3686, column: 9, scope: !8189)
!8192 = !DILocation(line: 3686, column: 9, scope: !8176)
!8193 = !DILocation(line: 3687, column: 21, scope: !8194)
!8194 = distinct !DILexicalBlock(scope: !8189, file: !3, line: 3686, column: 36)
!8195 = !DILocation(line: 3687, column: 24, scope: !8194)
!8196 = !DILocation(line: 3687, column: 6, scope: !8194)
!8197 = !DILocation(line: 3688, column: 6, scope: !8194)
!8198 = !DILocation(line: 3690, column: 20, scope: !8176)
!8199 = !DILocation(line: 3690, column: 23, scope: !8176)
!8200 = !DILocation(line: 3690, column: 5, scope: !8176)
!8201 = !DILocation(line: 3691, column: 5, scope: !8176)
!8202 = !DILocation(line: 3694, column: 20, scope: !8176)
!8203 = !DILocation(line: 3694, column: 23, scope: !8176)
!8204 = !DILocation(line: 3694, column: 5, scope: !8176)
!8205 = !DILocation(line: 3695, column: 5, scope: !8176)
!8206 = !DILocation(line: 3698, column: 2, scope: !8171)
!8207 = !DILocation(line: 3700, column: 2, scope: !8087)
!8208 = !DILocation(line: 3701, column: 1, scope: !8087)
!8209 = distinct !DISubprogram(name: "straightline_apply", scope: !3, file: !3, line: 3617, type: !3871, scopeLine: 3618, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!8210 = !DILocalVariable(name: "C", arg: 1, scope: !8209, file: !3, line: 3617, type: !1414)
!8211 = !DILocation(line: 3617, column: 41, scope: !8209)
!8212 = !DILocalVariable(name: "op", arg: 2, scope: !8209, file: !3, line: 3617, type: !2965)
!8213 = !DILocation(line: 3617, column: 56, scope: !8209)
!8214 = !DILocalVariable(name: "gesture", scope: !8209, file: !3, line: 3619, type: !6987)
!8215 = !DILocation(line: 3619, column: 13, scope: !8209)
!8216 = !DILocation(line: 3619, column: 23, scope: !8209)
!8217 = !DILocation(line: 3619, column: 27, scope: !8209)
!8218 = !DILocalVariable(name: "rect", scope: !8209, file: !3, line: 3620, type: !6049)
!8219 = !DILocation(line: 3620, column: 8, scope: !8209)
!8220 = !DILocation(line: 3620, column: 15, scope: !8209)
!8221 = !DILocation(line: 3620, column: 24, scope: !8209)
!8222 = !DILocation(line: 3622, column: 6, scope: !8223)
!8223 = distinct !DILexicalBlock(scope: !8209, file: !3, line: 3622, column: 6)
!8224 = !DILocation(line: 3622, column: 12, scope: !8223)
!8225 = !DILocation(line: 3622, column: 20, scope: !8223)
!8226 = !DILocation(line: 3622, column: 26, scope: !8223)
!8227 = !DILocation(line: 3622, column: 17, scope: !8223)
!8228 = !DILocation(line: 3622, column: 31, scope: !8223)
!8229 = !DILocation(line: 3622, column: 34, scope: !8223)
!8230 = !DILocation(line: 3622, column: 40, scope: !8223)
!8231 = !DILocation(line: 3622, column: 48, scope: !8223)
!8232 = !DILocation(line: 3622, column: 54, scope: !8223)
!8233 = !DILocation(line: 3622, column: 45, scope: !8223)
!8234 = !DILocation(line: 3622, column: 6, scope: !8209)
!8235 = !DILocation(line: 3623, column: 3, scope: !8223)
!8236 = !DILocation(line: 3626, column: 14, scope: !8209)
!8237 = !DILocation(line: 3626, column: 18, scope: !8209)
!8238 = !DILocation(line: 3626, column: 33, scope: !8209)
!8239 = !DILocation(line: 3626, column: 39, scope: !8209)
!8240 = !DILocation(line: 3626, column: 2, scope: !8209)
!8241 = !DILocation(line: 3627, column: 14, scope: !8209)
!8242 = !DILocation(line: 3627, column: 18, scope: !8209)
!8243 = !DILocation(line: 3627, column: 33, scope: !8209)
!8244 = !DILocation(line: 3627, column: 39, scope: !8209)
!8245 = !DILocation(line: 3627, column: 2, scope: !8209)
!8246 = !DILocation(line: 3628, column: 14, scope: !8209)
!8247 = !DILocation(line: 3628, column: 18, scope: !8209)
!8248 = !DILocation(line: 3628, column: 31, scope: !8209)
!8249 = !DILocation(line: 3628, column: 37, scope: !8209)
!8250 = !DILocation(line: 3628, column: 2, scope: !8209)
!8251 = !DILocation(line: 3629, column: 14, scope: !8209)
!8252 = !DILocation(line: 3629, column: 18, scope: !8209)
!8253 = !DILocation(line: 3629, column: 31, scope: !8209)
!8254 = !DILocation(line: 3629, column: 37, scope: !8209)
!8255 = !DILocation(line: 3629, column: 2, scope: !8209)
!8256 = !DILocation(line: 3631, column: 6, scope: !8257)
!8257 = distinct !DILexicalBlock(scope: !8209, file: !3, line: 3631, column: 6)
!8258 = !DILocation(line: 3631, column: 10, scope: !8257)
!8259 = !DILocation(line: 3631, column: 16, scope: !8257)
!8260 = !DILocation(line: 3631, column: 6, scope: !8209)
!8261 = !DILocalVariable(name: "retval", scope: !8262, file: !3, line: 3632, type: !1224)
!8262 = distinct !DILexicalBlock(scope: !8257, file: !3, line: 3631, column: 22)
!8263 = !DILocation(line: 3632, column: 7, scope: !8262)
!8264 = !DILocation(line: 3632, column: 16, scope: !8262)
!8265 = !DILocation(line: 3632, column: 20, scope: !8262)
!8266 = !DILocation(line: 3632, column: 26, scope: !8262)
!8267 = !DILocation(line: 3632, column: 31, scope: !8262)
!8268 = !DILocation(line: 3632, column: 34, scope: !8262)
!8269 = !DILocation(line: 3633, column: 3, scope: !8262)
!8270 = !DILocation(line: 3634, column: 2, scope: !8262)
!8271 = !DILocation(line: 3636, column: 2, scope: !8209)
!8272 = !DILocation(line: 3637, column: 1, scope: !8209)
!8273 = distinct !DISubprogram(name: "WM_gesture_straightline_cancel", scope: !3, file: !3, line: 3703, type: !4165, scopeLine: 3704, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!8274 = !DILocalVariable(name: "C", arg: 1, scope: !8273, file: !3, line: 3703, type: !1414)
!8275 = !DILocation(line: 3703, column: 47, scope: !8273)
!8276 = !DILocalVariable(name: "op", arg: 2, scope: !8273, file: !3, line: 3703, type: !2965)
!8277 = !DILocation(line: 3703, column: 62, scope: !8273)
!8278 = !DILocation(line: 3705, column: 17, scope: !8273)
!8279 = !DILocation(line: 3705, column: 20, scope: !8273)
!8280 = !DILocation(line: 3705, column: 2, scope: !8273)
!8281 = !DILocation(line: 3706, column: 1, scope: !8273)
!8282 = distinct !DISubprogram(name: "wm_operatortype_free", scope: !3, file: !3, line: 4566, type: !3472, scopeLine: 4567, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!8283 = !DILocation(line: 4568, column: 17, scope: !8282)
!8284 = !DILocation(line: 4568, column: 2, scope: !8282)
!8285 = !DILocation(line: 4569, column: 18, scope: !8282)
!8286 = !DILocation(line: 4570, column: 1, scope: !8282)
!8287 = distinct !DISubprogram(name: "operatortype_ghash_free_cb", scope: !3, file: !3, line: 4548, type: !3678, scopeLine: 4549, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!8288 = !DILocalVariable(name: "ot", arg: 1, scope: !8287, file: !3, line: 4548, type: !3228)
!8289 = !DILocation(line: 4548, column: 56, scope: !8287)
!8290 = !DILocation(line: 4550, column: 6, scope: !8291)
!8291 = distinct !DILexicalBlock(scope: !8287, file: !3, line: 4550, column: 6)
!8292 = !DILocation(line: 4550, column: 10, scope: !8291)
!8293 = !DILocation(line: 4550, column: 6, scope: !8287)
!8294 = !DILocation(line: 4551, column: 20, scope: !8295)
!8295 = distinct !DILexicalBlock(scope: !8291, file: !3, line: 4550, column: 27)
!8296 = !DILocation(line: 4551, column: 24, scope: !8295)
!8297 = !DILocation(line: 4551, column: 3, scope: !8295)
!8298 = !DILocation(line: 4552, column: 3, scope: !8295)
!8299 = !DILocation(line: 4552, column: 13, scope: !8295)
!8300 = !DILocation(line: 4552, column: 17, scope: !8295)
!8301 = !DILocation(line: 4553, column: 2, scope: !8295)
!8302 = !DILocation(line: 4555, column: 6, scope: !8303)
!8303 = distinct !DILexicalBlock(scope: !8287, file: !3, line: 4555, column: 6)
!8304 = !DILocation(line: 4555, column: 10, scope: !8303)
!8305 = !DILocation(line: 4555, column: 16, scope: !8303)
!8306 = !DILocation(line: 4555, column: 6, scope: !8287)
!8307 = !DILocation(line: 4556, column: 30, scope: !8303)
!8308 = !DILocation(line: 4556, column: 3, scope: !8303)
!8309 = !DILocation(line: 4558, column: 6, scope: !8310)
!8310 = distinct !DILexicalBlock(scope: !8287, file: !3, line: 4558, column: 6)
!8311 = !DILocation(line: 4558, column: 10, scope: !8310)
!8312 = !DILocation(line: 4558, column: 14, scope: !8310)
!8313 = !DILocation(line: 4558, column: 6, scope: !8287)
!8314 = !DILocation(line: 4559, column: 3, scope: !8310)
!8315 = !DILocation(line: 4559, column: 21, scope: !8310)
!8316 = !DILocation(line: 4559, column: 25, scope: !8310)
!8317 = !DILocation(line: 4561, column: 2, scope: !8287)
!8318 = !DILocation(line: 4561, column: 12, scope: !8287)
!8319 = !DILocation(line: 4562, column: 1, scope: !8287)
!8320 = distinct !DISubprogram(name: "wm_operatortype_init", scope: !3, file: !3, line: 4573, type: !3472, scopeLine: 4574, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!8321 = !DILocation(line: 4576, column: 20, scope: !8320)
!8322 = !DILocation(line: 4576, column: 18, scope: !8320)
!8323 = !DILocation(line: 4578, column: 2, scope: !8320)
!8324 = !DILocation(line: 4579, column: 2, scope: !8320)
!8325 = !DILocation(line: 4580, column: 2, scope: !8320)
!8326 = !DILocation(line: 4581, column: 2, scope: !8320)
!8327 = !DILocation(line: 4582, column: 2, scope: !8320)
!8328 = !DILocation(line: 4583, column: 2, scope: !8320)
!8329 = !DILocation(line: 4584, column: 2, scope: !8320)
!8330 = !DILocation(line: 4585, column: 2, scope: !8320)
!8331 = !DILocation(line: 4586, column: 2, scope: !8320)
!8332 = !DILocation(line: 4587, column: 2, scope: !8320)
!8333 = !DILocation(line: 4588, column: 2, scope: !8320)
!8334 = !DILocation(line: 4589, column: 2, scope: !8320)
!8335 = !DILocation(line: 4590, column: 2, scope: !8320)
!8336 = !DILocation(line: 4591, column: 2, scope: !8320)
!8337 = !DILocation(line: 4592, column: 2, scope: !8320)
!8338 = !DILocation(line: 4593, column: 2, scope: !8320)
!8339 = !DILocation(line: 4594, column: 2, scope: !8320)
!8340 = !DILocation(line: 4595, column: 2, scope: !8320)
!8341 = !DILocation(line: 4596, column: 2, scope: !8320)
!8342 = !DILocation(line: 4597, column: 2, scope: !8320)
!8343 = !DILocation(line: 4598, column: 2, scope: !8320)
!8344 = !DILocation(line: 4599, column: 2, scope: !8320)
!8345 = !DILocation(line: 4600, column: 2, scope: !8320)
!8346 = !DILocation(line: 4601, column: 2, scope: !8320)
!8347 = !DILocation(line: 4602, column: 2, scope: !8320)
!8348 = !DILocation(line: 4603, column: 2, scope: !8320)
!8349 = !DILocation(line: 4604, column: 2, scope: !8320)
!8350 = !DILocation(line: 4605, column: 2, scope: !8320)
!8351 = !DILocation(line: 4609, column: 1, scope: !8320)
!8352 = distinct !DISubprogram(name: "WM_OT_window_duplicate", scope: !3, file: !3, line: 2125, type: !3678, scopeLine: 2126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!8353 = !DILocalVariable(name: "ot", arg: 1, scope: !8352, file: !3, line: 2125, type: !3228)
!8354 = !DILocation(line: 2125, column: 52, scope: !8352)
!8355 = !DILocation(line: 2127, column: 2, scope: !8352)
!8356 = !DILocation(line: 2127, column: 6, scope: !8352)
!8357 = !DILocation(line: 2127, column: 11, scope: !8352)
!8358 = !DILocation(line: 2128, column: 2, scope: !8352)
!8359 = !DILocation(line: 2128, column: 6, scope: !8352)
!8360 = !DILocation(line: 2128, column: 13, scope: !8352)
!8361 = !DILocation(line: 2129, column: 2, scope: !8352)
!8362 = !DILocation(line: 2129, column: 6, scope: !8352)
!8363 = !DILocation(line: 2129, column: 18, scope: !8352)
!8364 = !DILocation(line: 2131, column: 2, scope: !8352)
!8365 = !DILocation(line: 2131, column: 6, scope: !8352)
!8366 = !DILocation(line: 2131, column: 11, scope: !8352)
!8367 = !DILocation(line: 2132, column: 2, scope: !8352)
!8368 = !DILocation(line: 2132, column: 6, scope: !8352)
!8369 = !DILocation(line: 2132, column: 11, scope: !8352)
!8370 = !DILocation(line: 2133, column: 1, scope: !8352)
!8371 = distinct !DISubprogram(name: "WM_OT_read_history", scope: !3, file: !3, line: 2196, type: !3678, scopeLine: 2197, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!8372 = !DILocalVariable(name: "ot", arg: 1, scope: !8371, file: !3, line: 2196, type: !3228)
!8373 = !DILocation(line: 2196, column: 48, scope: !8371)
!8374 = !DILocation(line: 2198, column: 2, scope: !8371)
!8375 = !DILocation(line: 2198, column: 6, scope: !8371)
!8376 = !DILocation(line: 2198, column: 11, scope: !8371)
!8377 = !DILocation(line: 2199, column: 2, scope: !8371)
!8378 = !DILocation(line: 2199, column: 6, scope: !8371)
!8379 = !DILocation(line: 2199, column: 13, scope: !8371)
!8380 = !DILocation(line: 2200, column: 2, scope: !8371)
!8381 = !DILocation(line: 2200, column: 6, scope: !8371)
!8382 = !DILocation(line: 2200, column: 18, scope: !8371)
!8383 = !DILocation(line: 2202, column: 2, scope: !8371)
!8384 = !DILocation(line: 2202, column: 6, scope: !8371)
!8385 = !DILocation(line: 2202, column: 13, scope: !8371)
!8386 = !DILocation(line: 2203, column: 2, scope: !8371)
!8387 = !DILocation(line: 2203, column: 6, scope: !8371)
!8388 = !DILocation(line: 2203, column: 11, scope: !8371)
!8389 = !DILocation(line: 2206, column: 2, scope: !8371)
!8390 = !DILocation(line: 2206, column: 6, scope: !8371)
!8391 = !DILocation(line: 2206, column: 11, scope: !8371)
!8392 = !DILocation(line: 2207, column: 1, scope: !8371)
!8393 = distinct !DISubprogram(name: "WM_OT_read_homefile", scope: !3, file: !3, line: 2209, type: !3678, scopeLine: 2210, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!8394 = !DILocalVariable(name: "ot", arg: 1, scope: !8393, file: !3, line: 2209, type: !3228)
!8395 = !DILocation(line: 2209, column: 49, scope: !8393)
!8396 = !DILocalVariable(name: "prop", scope: !8393, file: !3, line: 2211, type: !1392)
!8397 = !DILocation(line: 2211, column: 15, scope: !8393)
!8398 = !DILocation(line: 2212, column: 2, scope: !8393)
!8399 = !DILocation(line: 2212, column: 6, scope: !8393)
!8400 = !DILocation(line: 2212, column: 11, scope: !8393)
!8401 = !DILocation(line: 2213, column: 2, scope: !8393)
!8402 = !DILocation(line: 2213, column: 6, scope: !8393)
!8403 = !DILocation(line: 2213, column: 13, scope: !8393)
!8404 = !DILocation(line: 2214, column: 2, scope: !8393)
!8405 = !DILocation(line: 2214, column: 6, scope: !8393)
!8406 = !DILocation(line: 2214, column: 18, scope: !8393)
!8407 = !DILocation(line: 2216, column: 2, scope: !8393)
!8408 = !DILocation(line: 2216, column: 6, scope: !8393)
!8409 = !DILocation(line: 2216, column: 13, scope: !8393)
!8410 = !DILocation(line: 2217, column: 2, scope: !8393)
!8411 = !DILocation(line: 2217, column: 6, scope: !8393)
!8412 = !DILocation(line: 2217, column: 11, scope: !8393)
!8413 = !DILocation(line: 2219, column: 34, scope: !8393)
!8414 = !DILocation(line: 2219, column: 38, scope: !8393)
!8415 = !DILocation(line: 2219, column: 9, scope: !8393)
!8416 = !DILocation(line: 2219, column: 7, scope: !8393)
!8417 = !DILocation(line: 2222, column: 24, scope: !8393)
!8418 = !DILocation(line: 2222, column: 2, scope: !8393)
!8419 = !DILocation(line: 2225, column: 25, scope: !8393)
!8420 = !DILocation(line: 2225, column: 29, scope: !8393)
!8421 = !DILocation(line: 2225, column: 9, scope: !8393)
!8422 = !DILocation(line: 2225, column: 7, scope: !8393)
!8423 = !DILocation(line: 2227, column: 24, scope: !8393)
!8424 = !DILocation(line: 2227, column: 2, scope: !8393)
!8425 = !DILocation(line: 2230, column: 1, scope: !8393)
!8426 = distinct !DISubprogram(name: "WM_OT_read_factory_settings", scope: !3, file: !3, line: 2232, type: !3678, scopeLine: 2233, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!8427 = !DILocalVariable(name: "ot", arg: 1, scope: !8426, file: !3, line: 2232, type: !3228)
!8428 = !DILocation(line: 2232, column: 57, scope: !8426)
!8429 = !DILocation(line: 2234, column: 2, scope: !8426)
!8430 = !DILocation(line: 2234, column: 6, scope: !8426)
!8431 = !DILocation(line: 2234, column: 11, scope: !8426)
!8432 = !DILocation(line: 2235, column: 2, scope: !8426)
!8433 = !DILocation(line: 2235, column: 6, scope: !8426)
!8434 = !DILocation(line: 2235, column: 13, scope: !8426)
!8435 = !DILocation(line: 2236, column: 2, scope: !8426)
!8436 = !DILocation(line: 2236, column: 6, scope: !8426)
!8437 = !DILocation(line: 2236, column: 18, scope: !8426)
!8438 = !DILocation(line: 2238, column: 2, scope: !8426)
!8439 = !DILocation(line: 2238, column: 6, scope: !8426)
!8440 = !DILocation(line: 2238, column: 13, scope: !8426)
!8441 = !DILocation(line: 2239, column: 2, scope: !8426)
!8442 = !DILocation(line: 2239, column: 6, scope: !8426)
!8443 = !DILocation(line: 2239, column: 11, scope: !8426)
!8444 = !DILocation(line: 2241, column: 1, scope: !8426)
!8445 = distinct !DISubprogram(name: "WM_OT_save_homefile", scope: !3, file: !3, line: 2135, type: !3678, scopeLine: 2136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!8446 = !DILocalVariable(name: "ot", arg: 1, scope: !8445, file: !3, line: 2135, type: !3228)
!8447 = !DILocation(line: 2135, column: 49, scope: !8445)
!8448 = !DILocation(line: 2137, column: 2, scope: !8445)
!8449 = !DILocation(line: 2137, column: 6, scope: !8445)
!8450 = !DILocation(line: 2137, column: 11, scope: !8445)
!8451 = !DILocation(line: 2138, column: 2, scope: !8445)
!8452 = !DILocation(line: 2138, column: 6, scope: !8445)
!8453 = !DILocation(line: 2138, column: 13, scope: !8445)
!8454 = !DILocation(line: 2139, column: 2, scope: !8445)
!8455 = !DILocation(line: 2139, column: 6, scope: !8445)
!8456 = !DILocation(line: 2139, column: 18, scope: !8445)
!8457 = !DILocation(line: 2141, column: 2, scope: !8445)
!8458 = !DILocation(line: 2141, column: 6, scope: !8445)
!8459 = !DILocation(line: 2141, column: 13, scope: !8445)
!8460 = !DILocation(line: 2142, column: 2, scope: !8445)
!8461 = !DILocation(line: 2142, column: 6, scope: !8445)
!8462 = !DILocation(line: 2142, column: 11, scope: !8445)
!8463 = !DILocation(line: 2143, column: 1, scope: !8445)
!8464 = distinct !DISubprogram(name: "WM_OT_save_userpref", scope: !3, file: !3, line: 2186, type: !3678, scopeLine: 2187, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!8465 = !DILocalVariable(name: "ot", arg: 1, scope: !8464, file: !3, line: 2186, type: !3228)
!8466 = !DILocation(line: 2186, column: 49, scope: !8464)
!8467 = !DILocation(line: 2188, column: 2, scope: !8464)
!8468 = !DILocation(line: 2188, column: 6, scope: !8464)
!8469 = !DILocation(line: 2188, column: 11, scope: !8464)
!8470 = !DILocation(line: 2189, column: 2, scope: !8464)
!8471 = !DILocation(line: 2189, column: 6, scope: !8464)
!8472 = !DILocation(line: 2189, column: 13, scope: !8464)
!8473 = !DILocation(line: 2190, column: 2, scope: !8464)
!8474 = !DILocation(line: 2190, column: 6, scope: !8464)
!8475 = !DILocation(line: 2190, column: 18, scope: !8464)
!8476 = !DILocation(line: 2192, column: 2, scope: !8464)
!8477 = !DILocation(line: 2192, column: 6, scope: !8464)
!8478 = !DILocation(line: 2192, column: 13, scope: !8464)
!8479 = !DILocation(line: 2193, column: 2, scope: !8464)
!8480 = !DILocation(line: 2193, column: 6, scope: !8464)
!8481 = !DILocation(line: 2193, column: 11, scope: !8464)
!8482 = !DILocation(line: 2194, column: 1, scope: !8464)
!8483 = distinct !DISubprogram(name: "WM_OT_userpref_autoexec_path_add", scope: !3, file: !3, line: 2152, type: !3678, scopeLine: 2153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!8484 = !DILocalVariable(name: "ot", arg: 1, scope: !8483, file: !3, line: 2152, type: !3228)
!8485 = !DILocation(line: 2152, column: 62, scope: !8483)
!8486 = !DILocation(line: 2154, column: 2, scope: !8483)
!8487 = !DILocation(line: 2154, column: 6, scope: !8483)
!8488 = !DILocation(line: 2154, column: 11, scope: !8483)
!8489 = !DILocation(line: 2155, column: 2, scope: !8483)
!8490 = !DILocation(line: 2155, column: 6, scope: !8483)
!8491 = !DILocation(line: 2155, column: 13, scope: !8483)
!8492 = !DILocation(line: 2156, column: 2, scope: !8483)
!8493 = !DILocation(line: 2156, column: 6, scope: !8483)
!8494 = !DILocation(line: 2156, column: 18, scope: !8483)
!8495 = !DILocation(line: 2158, column: 2, scope: !8483)
!8496 = !DILocation(line: 2158, column: 6, scope: !8483)
!8497 = !DILocation(line: 2158, column: 11, scope: !8483)
!8498 = !DILocation(line: 2160, column: 2, scope: !8483)
!8499 = !DILocation(line: 2160, column: 6, scope: !8483)
!8500 = !DILocation(line: 2160, column: 11, scope: !8483)
!8501 = !DILocation(line: 2161, column: 1, scope: !8483)
!8502 = distinct !DISubprogram(name: "WM_OT_userpref_autoexec_path_remove", scope: !3, file: !3, line: 2173, type: !3678, scopeLine: 2174, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!8503 = !DILocalVariable(name: "ot", arg: 1, scope: !8502, file: !3, line: 2173, type: !3228)
!8504 = !DILocation(line: 2173, column: 65, scope: !8502)
!8505 = !DILocation(line: 2175, column: 2, scope: !8502)
!8506 = !DILocation(line: 2175, column: 6, scope: !8502)
!8507 = !DILocation(line: 2175, column: 11, scope: !8502)
!8508 = !DILocation(line: 2176, column: 2, scope: !8502)
!8509 = !DILocation(line: 2176, column: 6, scope: !8502)
!8510 = !DILocation(line: 2176, column: 13, scope: !8502)
!8511 = !DILocation(line: 2177, column: 2, scope: !8502)
!8512 = !DILocation(line: 2177, column: 6, scope: !8502)
!8513 = !DILocation(line: 2177, column: 18, scope: !8502)
!8514 = !DILocation(line: 2179, column: 2, scope: !8502)
!8515 = !DILocation(line: 2179, column: 6, scope: !8502)
!8516 = !DILocation(line: 2179, column: 11, scope: !8502)
!8517 = !DILocation(line: 2181, column: 2, scope: !8502)
!8518 = !DILocation(line: 2181, column: 6, scope: !8502)
!8519 = !DILocation(line: 2181, column: 11, scope: !8502)
!8520 = !DILocation(line: 2183, column: 14, scope: !8502)
!8521 = !DILocation(line: 2183, column: 18, scope: !8502)
!8522 = !DILocation(line: 2183, column: 2, scope: !8502)
!8523 = !DILocation(line: 2184, column: 1, scope: !8502)
!8524 = distinct !DISubprogram(name: "WM_OT_window_fullscreen_toggle", scope: !3, file: !3, line: 2965, type: !3678, scopeLine: 2966, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!8525 = !DILocalVariable(name: "ot", arg: 1, scope: !8524, file: !3, line: 2965, type: !3228)
!8526 = !DILocation(line: 2965, column: 60, scope: !8524)
!8527 = !DILocation(line: 2967, column: 2, scope: !8524)
!8528 = !DILocation(line: 2967, column: 6, scope: !8524)
!8529 = !DILocation(line: 2967, column: 11, scope: !8524)
!8530 = !DILocation(line: 2968, column: 2, scope: !8524)
!8531 = !DILocation(line: 2968, column: 6, scope: !8524)
!8532 = !DILocation(line: 2968, column: 13, scope: !8524)
!8533 = !DILocation(line: 2969, column: 2, scope: !8524)
!8534 = !DILocation(line: 2969, column: 6, scope: !8524)
!8535 = !DILocation(line: 2969, column: 18, scope: !8524)
!8536 = !DILocation(line: 2971, column: 2, scope: !8524)
!8537 = !DILocation(line: 2971, column: 6, scope: !8524)
!8538 = !DILocation(line: 2971, column: 11, scope: !8524)
!8539 = !DILocation(line: 2972, column: 2, scope: !8524)
!8540 = !DILocation(line: 2972, column: 6, scope: !8524)
!8541 = !DILocation(line: 2972, column: 11, scope: !8524)
!8542 = !DILocation(line: 2973, column: 1, scope: !8524)
!8543 = distinct !DISubprogram(name: "WM_OT_quit_blender", scope: !3, file: !3, line: 2984, type: !3678, scopeLine: 2985, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!8544 = !DILocalVariable(name: "ot", arg: 1, scope: !8543, file: !3, line: 2984, type: !3228)
!8545 = !DILocation(line: 2984, column: 48, scope: !8543)
!8546 = !DILocation(line: 2986, column: 2, scope: !8543)
!8547 = !DILocation(line: 2986, column: 6, scope: !8543)
!8548 = !DILocation(line: 2986, column: 11, scope: !8543)
!8549 = !DILocation(line: 2987, column: 2, scope: !8543)
!8550 = !DILocation(line: 2987, column: 6, scope: !8543)
!8551 = !DILocation(line: 2987, column: 13, scope: !8543)
!8552 = !DILocation(line: 2988, column: 2, scope: !8543)
!8553 = !DILocation(line: 2988, column: 6, scope: !8543)
!8554 = !DILocation(line: 2988, column: 18, scope: !8543)
!8555 = !DILocation(line: 2990, column: 2, scope: !8543)
!8556 = !DILocation(line: 2990, column: 6, scope: !8543)
!8557 = !DILocation(line: 2990, column: 13, scope: !8543)
!8558 = !DILocation(line: 2991, column: 2, scope: !8543)
!8559 = !DILocation(line: 2991, column: 6, scope: !8543)
!8560 = !DILocation(line: 2991, column: 11, scope: !8543)
!8561 = !DILocation(line: 2992, column: 1, scope: !8543)
!8562 = distinct !DISubprogram(name: "WM_OT_open_mainfile", scope: !3, file: !3, line: 2383, type: !3678, scopeLine: 2384, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!8563 = !DILocalVariable(name: "ot", arg: 1, scope: !8562, file: !3, line: 2383, type: !3228)
!8564 = !DILocation(line: 2383, column: 49, scope: !8562)
!8565 = !DILocation(line: 2385, column: 2, scope: !8562)
!8566 = !DILocation(line: 2385, column: 6, scope: !8562)
!8567 = !DILocation(line: 2385, column: 11, scope: !8562)
!8568 = !DILocation(line: 2386, column: 2, scope: !8562)
!8569 = !DILocation(line: 2386, column: 6, scope: !8562)
!8570 = !DILocation(line: 2386, column: 13, scope: !8562)
!8571 = !DILocation(line: 2387, column: 2, scope: !8562)
!8572 = !DILocation(line: 2387, column: 6, scope: !8562)
!8573 = !DILocation(line: 2387, column: 18, scope: !8562)
!8574 = !DILocation(line: 2389, column: 2, scope: !8562)
!8575 = !DILocation(line: 2389, column: 6, scope: !8562)
!8576 = !DILocation(line: 2389, column: 13, scope: !8562)
!8577 = !DILocation(line: 2390, column: 2, scope: !8562)
!8578 = !DILocation(line: 2390, column: 6, scope: !8562)
!8579 = !DILocation(line: 2390, column: 11, scope: !8562)
!8580 = !DILocation(line: 2391, column: 2, scope: !8562)
!8581 = !DILocation(line: 2391, column: 6, scope: !8562)
!8582 = !DILocation(line: 2391, column: 12, scope: !8562)
!8583 = !DILocation(line: 2392, column: 2, scope: !8562)
!8584 = !DILocation(line: 2392, column: 6, scope: !8562)
!8585 = !DILocation(line: 2392, column: 9, scope: !8562)
!8586 = !DILocation(line: 2395, column: 33, scope: !8562)
!8587 = !DILocation(line: 2395, column: 2, scope: !8562)
!8588 = !DILocation(line: 2398, column: 18, scope: !8562)
!8589 = !DILocation(line: 2398, column: 22, scope: !8562)
!8590 = !DILocation(line: 2398, column: 2, scope: !8562)
!8591 = !DILocation(line: 2399, column: 18, scope: !8562)
!8592 = !DILocation(line: 2399, column: 22, scope: !8562)
!8593 = !DILocation(line: 2399, column: 2, scope: !8562)
!8594 = !DILocation(line: 2401, column: 1, scope: !8562)
!8595 = distinct !DISubprogram(name: "WM_OT_revert_mainfile", scope: !3, file: !3, line: 2432, type: !3678, scopeLine: 2433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!8596 = !DILocalVariable(name: "ot", arg: 1, scope: !8595, file: !3, line: 2432, type: !3228)
!8597 = !DILocation(line: 2432, column: 51, scope: !8595)
!8598 = !DILocation(line: 2434, column: 2, scope: !8595)
!8599 = !DILocation(line: 2434, column: 6, scope: !8595)
!8600 = !DILocation(line: 2434, column: 11, scope: !8595)
!8601 = !DILocation(line: 2435, column: 2, scope: !8595)
!8602 = !DILocation(line: 2435, column: 6, scope: !8595)
!8603 = !DILocation(line: 2435, column: 13, scope: !8595)
!8604 = !DILocation(line: 2436, column: 2, scope: !8595)
!8605 = !DILocation(line: 2436, column: 6, scope: !8595)
!8606 = !DILocation(line: 2436, column: 18, scope: !8595)
!8607 = !DILocation(line: 2437, column: 2, scope: !8595)
!8608 = !DILocation(line: 2437, column: 6, scope: !8595)
!8609 = !DILocation(line: 2437, column: 13, scope: !8595)
!8610 = !DILocation(line: 2439, column: 18, scope: !8595)
!8611 = !DILocation(line: 2439, column: 22, scope: !8595)
!8612 = !DILocation(line: 2439, column: 2, scope: !8595)
!8613 = !DILocation(line: 2442, column: 2, scope: !8595)
!8614 = !DILocation(line: 2442, column: 6, scope: !8595)
!8615 = !DILocation(line: 2442, column: 11, scope: !8595)
!8616 = !DILocation(line: 2443, column: 2, scope: !8595)
!8617 = !DILocation(line: 2443, column: 6, scope: !8595)
!8618 = !DILocation(line: 2443, column: 11, scope: !8595)
!8619 = !DILocation(line: 2444, column: 1, scope: !8595)
!8620 = distinct !DISubprogram(name: "WM_OT_link", scope: !3, file: !3, line: 2642, type: !3678, scopeLine: 2643, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!8621 = !DILocalVariable(name: "ot", arg: 1, scope: !8620, file: !3, line: 2642, type: !3228)
!8622 = !DILocation(line: 2642, column: 40, scope: !8620)
!8623 = !DILocation(line: 2644, column: 2, scope: !8620)
!8624 = !DILocation(line: 2644, column: 6, scope: !8620)
!8625 = !DILocation(line: 2644, column: 11, scope: !8620)
!8626 = !DILocation(line: 2645, column: 2, scope: !8620)
!8627 = !DILocation(line: 2645, column: 6, scope: !8620)
!8628 = !DILocation(line: 2645, column: 13, scope: !8620)
!8629 = !DILocation(line: 2646, column: 2, scope: !8620)
!8630 = !DILocation(line: 2646, column: 6, scope: !8620)
!8631 = !DILocation(line: 2646, column: 18, scope: !8620)
!8632 = !DILocation(line: 2648, column: 2, scope: !8620)
!8633 = !DILocation(line: 2648, column: 6, scope: !8620)
!8634 = !DILocation(line: 2648, column: 13, scope: !8620)
!8635 = !DILocation(line: 2649, column: 2, scope: !8620)
!8636 = !DILocation(line: 2649, column: 6, scope: !8620)
!8637 = !DILocation(line: 2649, column: 11, scope: !8620)
!8638 = !DILocation(line: 2650, column: 2, scope: !8620)
!8639 = !DILocation(line: 2650, column: 6, scope: !8620)
!8640 = !DILocation(line: 2650, column: 11, scope: !8620)
!8641 = !DILocation(line: 2652, column: 2, scope: !8620)
!8642 = !DILocation(line: 2652, column: 6, scope: !8620)
!8643 = !DILocation(line: 2652, column: 11, scope: !8620)
!8644 = !DILocation(line: 2655, column: 10, scope: !8620)
!8645 = !DILocation(line: 2654, column: 2, scope: !8620)
!8646 = !DILocation(line: 2659, column: 35, scope: !8620)
!8647 = !DILocation(line: 2659, column: 2, scope: !8620)
!8648 = !DILocation(line: 2660, column: 1, scope: !8620)
!8649 = distinct !DISubprogram(name: "WM_OT_append", scope: !3, file: !3, line: 2662, type: !3678, scopeLine: 2663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!8650 = !DILocalVariable(name: "ot", arg: 1, scope: !8649, file: !3, line: 2662, type: !3228)
!8651 = !DILocation(line: 2662, column: 42, scope: !8649)
!8652 = !DILocation(line: 2664, column: 2, scope: !8649)
!8653 = !DILocation(line: 2664, column: 6, scope: !8649)
!8654 = !DILocation(line: 2664, column: 11, scope: !8649)
!8655 = !DILocation(line: 2665, column: 2, scope: !8649)
!8656 = !DILocation(line: 2665, column: 6, scope: !8649)
!8657 = !DILocation(line: 2665, column: 13, scope: !8649)
!8658 = !DILocation(line: 2666, column: 2, scope: !8649)
!8659 = !DILocation(line: 2666, column: 6, scope: !8649)
!8660 = !DILocation(line: 2666, column: 18, scope: !8649)
!8661 = !DILocation(line: 2668, column: 2, scope: !8649)
!8662 = !DILocation(line: 2668, column: 6, scope: !8649)
!8663 = !DILocation(line: 2668, column: 13, scope: !8649)
!8664 = !DILocation(line: 2669, column: 2, scope: !8649)
!8665 = !DILocation(line: 2669, column: 6, scope: !8649)
!8666 = !DILocation(line: 2669, column: 11, scope: !8649)
!8667 = !DILocation(line: 2670, column: 2, scope: !8649)
!8668 = !DILocation(line: 2670, column: 6, scope: !8649)
!8669 = !DILocation(line: 2670, column: 11, scope: !8649)
!8670 = !DILocation(line: 2672, column: 2, scope: !8649)
!8671 = !DILocation(line: 2672, column: 6, scope: !8649)
!8672 = !DILocation(line: 2672, column: 11, scope: !8649)
!8673 = !DILocation(line: 2675, column: 3, scope: !8649)
!8674 = !DILocation(line: 2674, column: 2, scope: !8649)
!8675 = !DILocation(line: 2679, column: 35, scope: !8649)
!8676 = !DILocation(line: 2679, column: 2, scope: !8649)
!8677 = !DILocation(line: 2680, column: 1, scope: !8649)
!8678 = distinct !DISubprogram(name: "WM_OT_recover_last_session", scope: !3, file: !3, line: 2714, type: !3678, scopeLine: 2715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!8679 = !DILocalVariable(name: "ot", arg: 1, scope: !8678, file: !3, line: 2714, type: !3228)
!8680 = !DILocation(line: 2714, column: 56, scope: !8678)
!8681 = !DILocation(line: 2716, column: 2, scope: !8678)
!8682 = !DILocation(line: 2716, column: 6, scope: !8678)
!8683 = !DILocation(line: 2716, column: 11, scope: !8678)
!8684 = !DILocation(line: 2717, column: 2, scope: !8678)
!8685 = !DILocation(line: 2717, column: 6, scope: !8678)
!8686 = !DILocation(line: 2717, column: 13, scope: !8678)
!8687 = !DILocation(line: 2718, column: 2, scope: !8678)
!8688 = !DILocation(line: 2718, column: 6, scope: !8678)
!8689 = !DILocation(line: 2718, column: 18, scope: !8678)
!8690 = !DILocation(line: 2719, column: 2, scope: !8678)
!8691 = !DILocation(line: 2719, column: 6, scope: !8678)
!8692 = !DILocation(line: 2719, column: 13, scope: !8678)
!8693 = !DILocation(line: 2721, column: 2, scope: !8678)
!8694 = !DILocation(line: 2721, column: 6, scope: !8678)
!8695 = !DILocation(line: 2721, column: 11, scope: !8678)
!8696 = !DILocation(line: 2722, column: 1, scope: !8678)
!8697 = distinct !DISubprogram(name: "WM_OT_recover_auto_save", scope: !3, file: !3, line: 2758, type: !3678, scopeLine: 2759, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!8698 = !DILocalVariable(name: "ot", arg: 1, scope: !8697, file: !3, line: 2758, type: !3228)
!8699 = !DILocation(line: 2758, column: 53, scope: !8697)
!8700 = !DILocation(line: 2760, column: 2, scope: !8697)
!8701 = !DILocation(line: 2760, column: 6, scope: !8697)
!8702 = !DILocation(line: 2760, column: 11, scope: !8697)
!8703 = !DILocation(line: 2761, column: 2, scope: !8697)
!8704 = !DILocation(line: 2761, column: 6, scope: !8697)
!8705 = !DILocation(line: 2761, column: 13, scope: !8697)
!8706 = !DILocation(line: 2762, column: 2, scope: !8697)
!8707 = !DILocation(line: 2762, column: 6, scope: !8697)
!8708 = !DILocation(line: 2762, column: 18, scope: !8697)
!8709 = !DILocation(line: 2764, column: 2, scope: !8697)
!8710 = !DILocation(line: 2764, column: 6, scope: !8697)
!8711 = !DILocation(line: 2764, column: 11, scope: !8697)
!8712 = !DILocation(line: 2765, column: 2, scope: !8697)
!8713 = !DILocation(line: 2765, column: 6, scope: !8697)
!8714 = !DILocation(line: 2765, column: 13, scope: !8697)
!8715 = !DILocation(line: 2767, column: 33, scope: !8697)
!8716 = !DILocation(line: 2767, column: 2, scope: !8697)
!8717 = !DILocation(line: 2769, column: 1, scope: !8697)
!8718 = distinct !DISubprogram(name: "WM_OT_save_as_mainfile", scope: !3, file: !3, line: 2870, type: !3678, scopeLine: 2871, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!8719 = !DILocalVariable(name: "ot", arg: 1, scope: !8718, file: !3, line: 2870, type: !3228)
!8720 = !DILocation(line: 2870, column: 52, scope: !8718)
!8721 = !DILocalVariable(name: "prop", scope: !8718, file: !3, line: 2872, type: !1392)
!8722 = !DILocation(line: 2872, column: 15, scope: !8718)
!8723 = !DILocation(line: 2874, column: 2, scope: !8718)
!8724 = !DILocation(line: 2874, column: 6, scope: !8718)
!8725 = !DILocation(line: 2874, column: 11, scope: !8718)
!8726 = !DILocation(line: 2875, column: 2, scope: !8718)
!8727 = !DILocation(line: 2875, column: 6, scope: !8718)
!8728 = !DILocation(line: 2875, column: 13, scope: !8718)
!8729 = !DILocation(line: 2876, column: 2, scope: !8718)
!8730 = !DILocation(line: 2876, column: 6, scope: !8718)
!8731 = !DILocation(line: 2876, column: 18, scope: !8718)
!8732 = !DILocation(line: 2878, column: 2, scope: !8718)
!8733 = !DILocation(line: 2878, column: 6, scope: !8718)
!8734 = !DILocation(line: 2878, column: 13, scope: !8718)
!8735 = !DILocation(line: 2879, column: 2, scope: !8718)
!8736 = !DILocation(line: 2879, column: 6, scope: !8718)
!8737 = !DILocation(line: 2879, column: 11, scope: !8718)
!8738 = !DILocation(line: 2880, column: 2, scope: !8718)
!8739 = !DILocation(line: 2880, column: 6, scope: !8718)
!8740 = !DILocation(line: 2880, column: 12, scope: !8718)
!8741 = !DILocation(line: 2883, column: 33, scope: !8718)
!8742 = !DILocation(line: 2883, column: 2, scope: !8718)
!8743 = !DILocation(line: 2885, column: 18, scope: !8718)
!8744 = !DILocation(line: 2885, column: 22, scope: !8718)
!8745 = !DILocation(line: 2885, column: 2, scope: !8718)
!8746 = !DILocation(line: 2886, column: 18, scope: !8718)
!8747 = !DILocation(line: 2886, column: 22, scope: !8718)
!8748 = !DILocation(line: 2886, column: 2, scope: !8718)
!8749 = !DILocation(line: 2888, column: 25, scope: !8718)
!8750 = !DILocation(line: 2888, column: 29, scope: !8718)
!8751 = !DILocation(line: 2888, column: 9, scope: !8718)
!8752 = !DILocation(line: 2888, column: 7, scope: !8718)
!8753 = !DILocation(line: 2890, column: 24, scope: !8718)
!8754 = !DILocation(line: 2890, column: 2, scope: !8718)
!8755 = !DILocation(line: 2892, column: 18, scope: !8718)
!8756 = !DILocation(line: 2892, column: 22, scope: !8718)
!8757 = !DILocation(line: 2892, column: 2, scope: !8718)
!8758 = !DILocation(line: 2896, column: 1, scope: !8718)
!8759 = distinct !DISubprogram(name: "WM_OT_save_mainfile", scope: !3, file: !3, line: 2948, type: !3678, scopeLine: 2949, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!8760 = !DILocalVariable(name: "ot", arg: 1, scope: !8759, file: !3, line: 2948, type: !3228)
!8761 = !DILocation(line: 2948, column: 49, scope: !8759)
!8762 = !DILocation(line: 2950, column: 2, scope: !8759)
!8763 = !DILocation(line: 2950, column: 6, scope: !8759)
!8764 = !DILocation(line: 2950, column: 11, scope: !8759)
!8765 = !DILocation(line: 2951, column: 2, scope: !8759)
!8766 = !DILocation(line: 2951, column: 6, scope: !8759)
!8767 = !DILocation(line: 2951, column: 13, scope: !8759)
!8768 = !DILocation(line: 2952, column: 2, scope: !8759)
!8769 = !DILocation(line: 2952, column: 6, scope: !8759)
!8770 = !DILocation(line: 2952, column: 18, scope: !8759)
!8771 = !DILocation(line: 2954, column: 2, scope: !8759)
!8772 = !DILocation(line: 2954, column: 6, scope: !8759)
!8773 = !DILocation(line: 2954, column: 13, scope: !8759)
!8774 = !DILocation(line: 2955, column: 2, scope: !8759)
!8775 = !DILocation(line: 2955, column: 6, scope: !8759)
!8776 = !DILocation(line: 2955, column: 11, scope: !8759)
!8777 = !DILocation(line: 2956, column: 2, scope: !8759)
!8778 = !DILocation(line: 2956, column: 6, scope: !8759)
!8779 = !DILocation(line: 2956, column: 12, scope: !8759)
!8780 = !DILocation(line: 2959, column: 33, scope: !8759)
!8781 = !DILocation(line: 2959, column: 2, scope: !8759)
!8782 = !DILocation(line: 2961, column: 18, scope: !8759)
!8783 = !DILocation(line: 2961, column: 22, scope: !8759)
!8784 = !DILocation(line: 2961, column: 2, scope: !8759)
!8785 = !DILocation(line: 2962, column: 18, scope: !8759)
!8786 = !DILocation(line: 2962, column: 22, scope: !8759)
!8787 = !DILocation(line: 2962, column: 2, scope: !8759)
!8788 = !DILocation(line: 2963, column: 1, scope: !8759)
!8789 = distinct !DISubprogram(name: "WM_OT_redraw_timer", scope: !3, file: !3, line: 4492, type: !3678, scopeLine: 4493, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!8790 = !DILocalVariable(name: "ot", arg: 1, scope: !8789, file: !3, line: 4492, type: !3228)
!8791 = !DILocation(line: 4492, column: 48, scope: !8789)
!8792 = !DILocation(line: 4494, column: 2, scope: !8789)
!8793 = !DILocation(line: 4494, column: 6, scope: !8789)
!8794 = !DILocation(line: 4494, column: 11, scope: !8789)
!8795 = !DILocation(line: 4495, column: 2, scope: !8789)
!8796 = !DILocation(line: 4495, column: 6, scope: !8789)
!8797 = !DILocation(line: 4495, column: 13, scope: !8789)
!8798 = !DILocation(line: 4496, column: 2, scope: !8789)
!8799 = !DILocation(line: 4496, column: 6, scope: !8789)
!8800 = !DILocation(line: 4496, column: 18, scope: !8789)
!8801 = !DILocation(line: 4498, column: 2, scope: !8789)
!8802 = !DILocation(line: 4498, column: 6, scope: !8789)
!8803 = !DILocation(line: 4498, column: 13, scope: !8789)
!8804 = !DILocation(line: 4499, column: 2, scope: !8789)
!8805 = !DILocation(line: 4499, column: 6, scope: !8789)
!8806 = !DILocation(line: 4499, column: 11, scope: !8789)
!8807 = !DILocation(line: 4500, column: 2, scope: !8789)
!8808 = !DILocation(line: 4500, column: 6, scope: !8789)
!8809 = !DILocation(line: 4500, column: 11, scope: !8789)
!8810 = !DILocation(line: 4502, column: 26, scope: !8789)
!8811 = !DILocation(line: 4502, column: 30, scope: !8789)
!8812 = !DILocation(line: 4502, column: 13, scope: !8789)
!8813 = !DILocation(line: 4502, column: 2, scope: !8789)
!8814 = !DILocation(line: 4502, column: 6, scope: !8789)
!8815 = !DILocation(line: 4502, column: 11, scope: !8789)
!8816 = !DILocation(line: 4503, column: 14, scope: !8789)
!8817 = !DILocation(line: 4503, column: 18, scope: !8789)
!8818 = !DILocation(line: 4503, column: 2, scope: !8789)
!8819 = !DILocation(line: 4505, column: 1, scope: !8789)
!8820 = distinct !DISubprogram(name: "WM_OT_memory_statistics", scope: !3, file: !3, line: 4515, type: !3678, scopeLine: 4516, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!8821 = !DILocalVariable(name: "ot", arg: 1, scope: !8820, file: !3, line: 4515, type: !3228)
!8822 = !DILocation(line: 4515, column: 53, scope: !8820)
!8823 = !DILocation(line: 4517, column: 2, scope: !8820)
!8824 = !DILocation(line: 4517, column: 6, scope: !8820)
!8825 = !DILocation(line: 4517, column: 11, scope: !8820)
!8826 = !DILocation(line: 4518, column: 2, scope: !8820)
!8827 = !DILocation(line: 4518, column: 6, scope: !8820)
!8828 = !DILocation(line: 4518, column: 13, scope: !8820)
!8829 = !DILocation(line: 4519, column: 2, scope: !8820)
!8830 = !DILocation(line: 4519, column: 6, scope: !8820)
!8831 = !DILocation(line: 4519, column: 18, scope: !8820)
!8832 = !DILocation(line: 4521, column: 2, scope: !8820)
!8833 = !DILocation(line: 4521, column: 6, scope: !8820)
!8834 = !DILocation(line: 4521, column: 11, scope: !8820)
!8835 = !DILocation(line: 4522, column: 1, scope: !8820)
!8836 = distinct !DISubprogram(name: "WM_OT_dependency_relations", scope: !3, file: !3, line: 4537, type: !3678, scopeLine: 4538, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!8837 = !DILocalVariable(name: "ot", arg: 1, scope: !8836, file: !3, line: 4537, type: !3228)
!8838 = !DILocation(line: 4537, column: 56, scope: !8836)
!8839 = !DILocation(line: 4539, column: 2, scope: !8836)
!8840 = !DILocation(line: 4539, column: 6, scope: !8836)
!8841 = !DILocation(line: 4539, column: 11, scope: !8836)
!8842 = !DILocation(line: 4540, column: 2, scope: !8836)
!8843 = !DILocation(line: 4540, column: 6, scope: !8836)
!8844 = !DILocation(line: 4540, column: 13, scope: !8836)
!8845 = !DILocation(line: 4541, column: 2, scope: !8836)
!8846 = !DILocation(line: 4541, column: 6, scope: !8836)
!8847 = !DILocation(line: 4541, column: 18, scope: !8836)
!8848 = !DILocation(line: 4543, column: 2, scope: !8836)
!8849 = !DILocation(line: 4543, column: 6, scope: !8836)
!8850 = !DILocation(line: 4543, column: 11, scope: !8836)
!8851 = !DILocation(line: 4544, column: 1, scope: !8836)
!8852 = distinct !DISubprogram(name: "WM_OT_debug_menu", scope: !3, file: !3, line: 1714, type: !3678, scopeLine: 1715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!8853 = !DILocalVariable(name: "ot", arg: 1, scope: !8852, file: !3, line: 1714, type: !3228)
!8854 = !DILocation(line: 1714, column: 46, scope: !8852)
!8855 = !DILocation(line: 1716, column: 2, scope: !8852)
!8856 = !DILocation(line: 1716, column: 6, scope: !8852)
!8857 = !DILocation(line: 1716, column: 11, scope: !8852)
!8858 = !DILocation(line: 1717, column: 2, scope: !8852)
!8859 = !DILocation(line: 1717, column: 6, scope: !8852)
!8860 = !DILocation(line: 1717, column: 13, scope: !8852)
!8861 = !DILocation(line: 1718, column: 2, scope: !8852)
!8862 = !DILocation(line: 1718, column: 6, scope: !8852)
!8863 = !DILocation(line: 1718, column: 18, scope: !8852)
!8864 = !DILocation(line: 1720, column: 2, scope: !8852)
!8865 = !DILocation(line: 1720, column: 6, scope: !8852)
!8866 = !DILocation(line: 1720, column: 13, scope: !8852)
!8867 = !DILocation(line: 1721, column: 2, scope: !8852)
!8868 = !DILocation(line: 1721, column: 6, scope: !8852)
!8869 = !DILocation(line: 1721, column: 11, scope: !8852)
!8870 = !DILocation(line: 1722, column: 2, scope: !8852)
!8871 = !DILocation(line: 1722, column: 6, scope: !8852)
!8872 = !DILocation(line: 1722, column: 11, scope: !8852)
!8873 = !DILocation(line: 1724, column: 14, scope: !8852)
!8874 = !DILocation(line: 1724, column: 18, scope: !8852)
!8875 = !DILocation(line: 1724, column: 2, scope: !8852)
!8876 = !DILocation(line: 1725, column: 1, scope: !8852)
!8877 = distinct !DISubprogram(name: "WM_OT_operator_defaults", scope: !3, file: !3, line: 1742, type: !3678, scopeLine: 1743, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!8878 = !DILocalVariable(name: "ot", arg: 1, scope: !8877, file: !3, line: 1742, type: !3228)
!8879 = !DILocation(line: 1742, column: 53, scope: !8877)
!8880 = !DILocation(line: 1744, column: 2, scope: !8877)
!8881 = !DILocation(line: 1744, column: 6, scope: !8877)
!8882 = !DILocation(line: 1744, column: 11, scope: !8877)
!8883 = !DILocation(line: 1745, column: 2, scope: !8877)
!8884 = !DILocation(line: 1745, column: 6, scope: !8877)
!8885 = !DILocation(line: 1745, column: 13, scope: !8877)
!8886 = !DILocation(line: 1746, column: 2, scope: !8877)
!8887 = !DILocation(line: 1746, column: 6, scope: !8877)
!8888 = !DILocation(line: 1746, column: 18, scope: !8877)
!8889 = !DILocation(line: 1748, column: 2, scope: !8877)
!8890 = !DILocation(line: 1748, column: 6, scope: !8877)
!8891 = !DILocation(line: 1748, column: 11, scope: !8877)
!8892 = !DILocation(line: 1750, column: 2, scope: !8877)
!8893 = !DILocation(line: 1750, column: 6, scope: !8877)
!8894 = !DILocation(line: 1750, column: 11, scope: !8877)
!8895 = !DILocation(line: 1751, column: 1, scope: !8877)
!8896 = distinct !DISubprogram(name: "WM_OT_splash", scope: !3, file: !3, line: 1974, type: !3678, scopeLine: 1975, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!8897 = !DILocalVariable(name: "ot", arg: 1, scope: !8896, file: !3, line: 1974, type: !3228)
!8898 = !DILocation(line: 1974, column: 42, scope: !8896)
!8899 = !DILocation(line: 1976, column: 2, scope: !8896)
!8900 = !DILocation(line: 1976, column: 6, scope: !8896)
!8901 = !DILocation(line: 1976, column: 11, scope: !8896)
!8902 = !DILocation(line: 1977, column: 2, scope: !8896)
!8903 = !DILocation(line: 1977, column: 6, scope: !8896)
!8904 = !DILocation(line: 1977, column: 13, scope: !8896)
!8905 = !DILocation(line: 1978, column: 2, scope: !8896)
!8906 = !DILocation(line: 1978, column: 6, scope: !8896)
!8907 = !DILocation(line: 1978, column: 18, scope: !8896)
!8908 = !DILocation(line: 1980, column: 2, scope: !8896)
!8909 = !DILocation(line: 1980, column: 6, scope: !8896)
!8910 = !DILocation(line: 1980, column: 13, scope: !8896)
!8911 = !DILocation(line: 1981, column: 2, scope: !8896)
!8912 = !DILocation(line: 1981, column: 6, scope: !8896)
!8913 = !DILocation(line: 1981, column: 11, scope: !8896)
!8914 = !DILocation(line: 1982, column: 1, scope: !8896)
!8915 = distinct !DISubprogram(name: "WM_OT_search_menu", scope: !3, file: !3, line: 2047, type: !3678, scopeLine: 2048, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!8916 = !DILocalVariable(name: "ot", arg: 1, scope: !8915, file: !3, line: 2047, type: !3228)
!8917 = !DILocation(line: 2047, column: 47, scope: !8915)
!8918 = !DILocation(line: 2049, column: 2, scope: !8915)
!8919 = !DILocation(line: 2049, column: 6, scope: !8915)
!8920 = !DILocation(line: 2049, column: 11, scope: !8915)
!8921 = !DILocation(line: 2050, column: 2, scope: !8915)
!8922 = !DILocation(line: 2050, column: 6, scope: !8915)
!8923 = !DILocation(line: 2050, column: 13, scope: !8915)
!8924 = !DILocation(line: 2051, column: 2, scope: !8915)
!8925 = !DILocation(line: 2051, column: 6, scope: !8915)
!8926 = !DILocation(line: 2051, column: 18, scope: !8915)
!8927 = !DILocation(line: 2053, column: 2, scope: !8915)
!8928 = !DILocation(line: 2053, column: 6, scope: !8915)
!8929 = !DILocation(line: 2053, column: 13, scope: !8915)
!8930 = !DILocation(line: 2054, column: 2, scope: !8915)
!8931 = !DILocation(line: 2054, column: 6, scope: !8915)
!8932 = !DILocation(line: 2054, column: 11, scope: !8915)
!8933 = !DILocation(line: 2055, column: 2, scope: !8915)
!8934 = !DILocation(line: 2055, column: 6, scope: !8915)
!8935 = !DILocation(line: 2055, column: 11, scope: !8915)
!8936 = !DILocation(line: 2056, column: 1, scope: !8915)
!8937 = distinct !DISubprogram(name: "WM_OT_call_menu", scope: !3, file: !3, line: 2066, type: !3678, scopeLine: 2067, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!8938 = !DILocalVariable(name: "ot", arg: 1, scope: !8937, file: !3, line: 2066, type: !3228)
!8939 = !DILocation(line: 2066, column: 45, scope: !8937)
!8940 = !DILocation(line: 2068, column: 2, scope: !8937)
!8941 = !DILocation(line: 2068, column: 6, scope: !8937)
!8942 = !DILocation(line: 2068, column: 11, scope: !8937)
!8943 = !DILocation(line: 2069, column: 2, scope: !8937)
!8944 = !DILocation(line: 2069, column: 6, scope: !8937)
!8945 = !DILocation(line: 2069, column: 13, scope: !8937)
!8946 = !DILocation(line: 2070, column: 2, scope: !8937)
!8947 = !DILocation(line: 2070, column: 6, scope: !8937)
!8948 = !DILocation(line: 2070, column: 18, scope: !8937)
!8949 = !DILocation(line: 2072, column: 2, scope: !8937)
!8950 = !DILocation(line: 2072, column: 6, scope: !8937)
!8951 = !DILocation(line: 2072, column: 11, scope: !8937)
!8952 = !DILocation(line: 2073, column: 2, scope: !8937)
!8953 = !DILocation(line: 2073, column: 6, scope: !8937)
!8954 = !DILocation(line: 2073, column: 11, scope: !8937)
!8955 = !DILocation(line: 2075, column: 2, scope: !8937)
!8956 = !DILocation(line: 2075, column: 6, scope: !8937)
!8957 = !DILocation(line: 2075, column: 11, scope: !8937)
!8958 = !DILocation(line: 2077, column: 17, scope: !8937)
!8959 = !DILocation(line: 2077, column: 21, scope: !8937)
!8960 = !DILocation(line: 2077, column: 2, scope: !8937)
!8961 = !DILocation(line: 2078, column: 1, scope: !8937)
!8962 = distinct !DISubprogram(name: "WM_OT_call_menu_pie", scope: !3, file: !3, line: 2096, type: !3678, scopeLine: 2097, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!8963 = !DILocalVariable(name: "ot", arg: 1, scope: !8962, file: !3, line: 2096, type: !3228)
!8964 = !DILocation(line: 2096, column: 49, scope: !8962)
!8965 = !DILocation(line: 2098, column: 2, scope: !8962)
!8966 = !DILocation(line: 2098, column: 6, scope: !8962)
!8967 = !DILocation(line: 2098, column: 11, scope: !8962)
!8968 = !DILocation(line: 2099, column: 2, scope: !8962)
!8969 = !DILocation(line: 2099, column: 6, scope: !8962)
!8970 = !DILocation(line: 2099, column: 13, scope: !8962)
!8971 = !DILocation(line: 2100, column: 2, scope: !8962)
!8972 = !DILocation(line: 2100, column: 6, scope: !8962)
!8973 = !DILocation(line: 2100, column: 18, scope: !8962)
!8974 = !DILocation(line: 2102, column: 2, scope: !8962)
!8975 = !DILocation(line: 2102, column: 6, scope: !8962)
!8976 = !DILocation(line: 2102, column: 13, scope: !8962)
!8977 = !DILocation(line: 2103, column: 2, scope: !8962)
!8978 = !DILocation(line: 2103, column: 6, scope: !8962)
!8979 = !DILocation(line: 2103, column: 11, scope: !8962)
!8980 = !DILocation(line: 2104, column: 2, scope: !8962)
!8981 = !DILocation(line: 2104, column: 6, scope: !8962)
!8982 = !DILocation(line: 2104, column: 11, scope: !8962)
!8983 = !DILocation(line: 2106, column: 2, scope: !8962)
!8984 = !DILocation(line: 2106, column: 6, scope: !8962)
!8985 = !DILocation(line: 2106, column: 11, scope: !8962)
!8986 = !DILocation(line: 2108, column: 17, scope: !8962)
!8987 = !DILocation(line: 2108, column: 21, scope: !8962)
!8988 = !DILocation(line: 2108, column: 2, scope: !8962)
!8989 = !DILocation(line: 2109, column: 1, scope: !8962)
!8990 = distinct !DISubprogram(name: "WM_OT_radial_control", scope: !3, file: !3, line: 4335, type: !3678, scopeLine: 4336, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!8991 = !DILocalVariable(name: "ot", arg: 1, scope: !8990, file: !3, line: 4335, type: !3228)
!8992 = !DILocation(line: 4335, column: 50, scope: !8990)
!8993 = !DILocation(line: 4337, column: 2, scope: !8990)
!8994 = !DILocation(line: 4337, column: 6, scope: !8990)
!8995 = !DILocation(line: 4337, column: 11, scope: !8990)
!8996 = !DILocation(line: 4338, column: 2, scope: !8990)
!8997 = !DILocation(line: 4338, column: 6, scope: !8990)
!8998 = !DILocation(line: 4338, column: 13, scope: !8990)
!8999 = !DILocation(line: 4339, column: 2, scope: !8990)
!9000 = !DILocation(line: 4339, column: 6, scope: !8990)
!9001 = !DILocation(line: 4339, column: 18, scope: !8990)
!9002 = !DILocation(line: 4341, column: 2, scope: !8990)
!9003 = !DILocation(line: 4341, column: 6, scope: !8990)
!9004 = !DILocation(line: 4341, column: 13, scope: !8990)
!9005 = !DILocation(line: 4342, column: 2, scope: !8990)
!9006 = !DILocation(line: 4342, column: 6, scope: !8990)
!9007 = !DILocation(line: 4342, column: 12, scope: !8990)
!9008 = !DILocation(line: 4343, column: 2, scope: !8990)
!9009 = !DILocation(line: 4343, column: 6, scope: !8990)
!9010 = !DILocation(line: 4343, column: 13, scope: !8990)
!9011 = !DILocation(line: 4345, column: 2, scope: !8990)
!9012 = !DILocation(line: 4345, column: 6, scope: !8990)
!9013 = !DILocation(line: 4345, column: 11, scope: !8990)
!9014 = !DILocation(line: 4348, column: 17, scope: !8990)
!9015 = !DILocation(line: 4348, column: 21, scope: !8990)
!9016 = !DILocation(line: 4348, column: 2, scope: !8990)
!9017 = !DILocation(line: 4350, column: 17, scope: !8990)
!9018 = !DILocation(line: 4350, column: 21, scope: !8990)
!9019 = !DILocation(line: 4350, column: 2, scope: !8990)
!9020 = !DILocation(line: 4352, column: 17, scope: !8990)
!9021 = !DILocation(line: 4352, column: 21, scope: !8990)
!9022 = !DILocation(line: 4352, column: 2, scope: !8990)
!9023 = !DILocation(line: 4354, column: 17, scope: !8990)
!9024 = !DILocation(line: 4354, column: 21, scope: !8990)
!9025 = !DILocation(line: 4354, column: 2, scope: !8990)
!9026 = !DILocation(line: 4356, column: 17, scope: !8990)
!9027 = !DILocation(line: 4356, column: 21, scope: !8990)
!9028 = !DILocation(line: 4356, column: 2, scope: !8990)
!9029 = !DILocation(line: 4358, column: 17, scope: !8990)
!9030 = !DILocation(line: 4358, column: 21, scope: !8990)
!9031 = !DILocation(line: 4358, column: 2, scope: !8990)
!9032 = !DILocation(line: 4360, column: 17, scope: !8990)
!9033 = !DILocation(line: 4360, column: 21, scope: !8990)
!9034 = !DILocation(line: 4360, column: 2, scope: !8990)
!9035 = !DILocation(line: 4362, column: 17, scope: !8990)
!9036 = !DILocation(line: 4362, column: 21, scope: !8990)
!9037 = !DILocation(line: 4362, column: 2, scope: !8990)
!9038 = !DILocation(line: 4364, column: 18, scope: !8990)
!9039 = !DILocation(line: 4364, column: 22, scope: !8990)
!9040 = !DILocation(line: 4364, column: 2, scope: !8990)
!9041 = !DILocation(line: 4365, column: 1, scope: !8990)
!9042 = distinct !DISubprogram(name: "wm_window_keymap", scope: !3, file: !3, line: 4798, type: !3537, scopeLine: 4799, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!9043 = !DILocalVariable(name: "keyconf", arg: 1, scope: !9042, file: !3, line: 4798, type: !3539)
!9044 = !DILocation(line: 4798, column: 36, scope: !9042)
!9045 = !DILocalVariable(name: "keymap", scope: !9042, file: !3, line: 4800, type: !4050)
!9046 = !DILocation(line: 4800, column: 12, scope: !9042)
!9047 = !DILocation(line: 4800, column: 36, scope: !9042)
!9048 = !DILocation(line: 4800, column: 21, scope: !9042)
!9049 = !DILocalVariable(name: "kmi", scope: !9042, file: !3, line: 4801, type: !9050)
!9050 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9051, size: 64)
!9051 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmKeyMapItem", file: !41, line: 252, baseType: !9052)
!9052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmKeyMapItem", file: !41, line: 227, size: 1472, elements: !9053)
!9053 = !{!9054, !9056, !9057, !9058, !9059, !9060, !9061, !9062, !9063, !9064, !9065, !9066, !9067, !9068, !9069, !9070, !9071, !9072}
!9054 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9052, file: !41, line: 228, baseType: !9055, size: 64)
!9055 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9052, size: 64)
!9056 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9052, file: !41, line: 228, baseType: !9055, size: 64, offset: 64)
!9057 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !9052, file: !41, line: 231, baseType: !1476, size: 512, offset: 128)
!9058 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !9052, file: !41, line: 232, baseType: !1465, size: 64, offset: 640)
!9059 = !DIDerivedType(tag: DW_TAG_member, name: "propvalue_str", scope: !9052, file: !41, line: 235, baseType: !1476, size: 512, offset: 704)
!9060 = !DIDerivedType(tag: DW_TAG_member, name: "propvalue", scope: !9052, file: !41, line: 236, baseType: !1460, size: 16, offset: 1216)
!9061 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !9052, file: !41, line: 239, baseType: !1460, size: 16, offset: 1232)
!9062 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !9052, file: !41, line: 240, baseType: !1460, size: 16, offset: 1248)
!9063 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !9052, file: !41, line: 241, baseType: !1460, size: 16, offset: 1264)
!9064 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl", scope: !9052, file: !41, line: 241, baseType: !1460, size: 16, offset: 1280)
!9065 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !9052, file: !41, line: 241, baseType: !1460, size: 16, offset: 1296)
!9066 = !DIDerivedType(tag: DW_TAG_member, name: "oskey", scope: !9052, file: !41, line: 241, baseType: !1460, size: 16, offset: 1312)
!9067 = !DIDerivedType(tag: DW_TAG_member, name: "keymodifier", scope: !9052, file: !41, line: 242, baseType: !1460, size: 16, offset: 1328)
!9068 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !9052, file: !41, line: 245, baseType: !1460, size: 16, offset: 1344)
!9069 = !DIDerivedType(tag: DW_TAG_member, name: "maptype", scope: !9052, file: !41, line: 248, baseType: !1460, size: 16, offset: 1360)
!9070 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !9052, file: !41, line: 249, baseType: !1460, size: 16, offset: 1376)
!9071 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !9052, file: !41, line: 250, baseType: !1460, size: 16, offset: 1392)
!9072 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !9052, file: !41, line: 251, baseType: !3082, size: 64, offset: 1408)
!9073 = !DILocation(line: 4801, column: 16, scope: !9042)
!9074 = !DILocalVariable(name: "data_path", scope: !9042, file: !3, line: 4802, type: !2979)
!9075 = !DILocation(line: 4802, column: 14, scope: !9042)
!9076 = !DILocation(line: 4805, column: 24, scope: !9042)
!9077 = !DILocation(line: 4805, column: 2, scope: !9042)
!9078 = !DILocation(line: 4814, column: 21, scope: !9042)
!9079 = !DILocation(line: 4814, column: 2, scope: !9042)
!9080 = !DILocation(line: 4815, column: 21, scope: !9042)
!9081 = !DILocation(line: 4815, column: 2, scope: !9042)
!9082 = !DILocation(line: 4816, column: 21, scope: !9042)
!9083 = !DILocation(line: 4816, column: 2, scope: !9042)
!9084 = !DILocation(line: 4817, column: 21, scope: !9042)
!9085 = !DILocation(line: 4817, column: 2, scope: !9042)
!9086 = !DILocation(line: 4818, column: 21, scope: !9042)
!9087 = !DILocation(line: 4818, column: 2, scope: !9042)
!9088 = !DILocation(line: 4819, column: 21, scope: !9042)
!9089 = !DILocation(line: 4819, column: 2, scope: !9042)
!9090 = !DILocation(line: 4820, column: 21, scope: !9042)
!9091 = !DILocation(line: 4820, column: 2, scope: !9042)
!9092 = !DILocation(line: 4822, column: 21, scope: !9042)
!9093 = !DILocation(line: 4822, column: 2, scope: !9042)
!9094 = !DILocation(line: 4823, column: 21, scope: !9042)
!9095 = !DILocation(line: 4823, column: 2, scope: !9042)
!9096 = !DILocation(line: 4824, column: 21, scope: !9042)
!9097 = !DILocation(line: 4824, column: 2, scope: !9042)
!9098 = !DILocation(line: 4825, column: 21, scope: !9042)
!9099 = !DILocation(line: 4825, column: 2, scope: !9042)
!9100 = !DILocation(line: 4826, column: 27, scope: !9042)
!9101 = !DILocation(line: 4826, column: 8, scope: !9042)
!9102 = !DILocation(line: 4826, column: 6, scope: !9042)
!9103 = !DILocation(line: 4827, column: 18, scope: !9042)
!9104 = !DILocation(line: 4827, column: 23, scope: !9042)
!9105 = !DILocation(line: 4827, column: 2, scope: !9042)
!9106 = !DILocation(line: 4829, column: 24, scope: !9042)
!9107 = !DILocation(line: 4829, column: 2, scope: !9042)
!9108 = !DILocation(line: 4830, column: 21, scope: !9042)
!9109 = !DILocation(line: 4830, column: 2, scope: !9042)
!9110 = !DILocation(line: 4833, column: 24, scope: !9042)
!9111 = !DILocation(line: 4833, column: 2, scope: !9042)
!9112 = !DILocation(line: 4834, column: 24, scope: !9042)
!9113 = !DILocation(line: 4834, column: 2, scope: !9042)
!9114 = !DILocation(line: 4837, column: 24, scope: !9042)
!9115 = !DILocation(line: 4837, column: 2, scope: !9042)
!9116 = !DILocation(line: 4838, column: 21, scope: !9042)
!9117 = !DILocation(line: 4838, column: 2, scope: !9042)
!9118 = !DILocation(line: 4841, column: 27, scope: !9042)
!9119 = !DILocation(line: 4841, column: 8, scope: !9042)
!9120 = !DILocation(line: 4841, column: 6, scope: !9042)
!9121 = !DILocation(line: 4842, column: 17, scope: !9042)
!9122 = !DILocation(line: 4842, column: 22, scope: !9042)
!9123 = !DILocation(line: 4842, column: 2, scope: !9042)
!9124 = !DILocation(line: 4843, column: 17, scope: !9042)
!9125 = !DILocation(line: 4843, column: 22, scope: !9042)
!9126 = !DILocation(line: 4843, column: 2, scope: !9042)
!9127 = !DILocation(line: 4845, column: 27, scope: !9042)
!9128 = !DILocation(line: 4845, column: 8, scope: !9042)
!9129 = !DILocation(line: 4845, column: 6, scope: !9042)
!9130 = !DILocation(line: 4846, column: 17, scope: !9042)
!9131 = !DILocation(line: 4846, column: 22, scope: !9042)
!9132 = !DILocation(line: 4846, column: 2, scope: !9042)
!9133 = !DILocation(line: 4847, column: 17, scope: !9042)
!9134 = !DILocation(line: 4847, column: 22, scope: !9042)
!9135 = !DILocation(line: 4847, column: 2, scope: !9042)
!9136 = !DILocation(line: 4849, column: 27, scope: !9042)
!9137 = !DILocation(line: 4849, column: 8, scope: !9042)
!9138 = !DILocation(line: 4849, column: 6, scope: !9042)
!9139 = !DILocation(line: 4850, column: 17, scope: !9042)
!9140 = !DILocation(line: 4850, column: 22, scope: !9042)
!9141 = !DILocation(line: 4850, column: 2, scope: !9042)
!9142 = !DILocation(line: 4851, column: 17, scope: !9042)
!9143 = !DILocation(line: 4851, column: 22, scope: !9042)
!9144 = !DILocation(line: 4851, column: 2, scope: !9042)
!9145 = !DILocation(line: 4853, column: 27, scope: !9042)
!9146 = !DILocation(line: 4853, column: 8, scope: !9042)
!9147 = !DILocation(line: 4853, column: 6, scope: !9042)
!9148 = !DILocation(line: 4854, column: 17, scope: !9042)
!9149 = !DILocation(line: 4854, column: 22, scope: !9042)
!9150 = !DILocation(line: 4854, column: 2, scope: !9042)
!9151 = !DILocation(line: 4855, column: 17, scope: !9042)
!9152 = !DILocation(line: 4855, column: 22, scope: !9042)
!9153 = !DILocation(line: 4855, column: 2, scope: !9042)
!9154 = !DILocation(line: 4857, column: 27, scope: !9042)
!9155 = !DILocation(line: 4857, column: 8, scope: !9042)
!9156 = !DILocation(line: 4857, column: 6, scope: !9042)
!9157 = !DILocation(line: 4858, column: 17, scope: !9042)
!9158 = !DILocation(line: 4858, column: 22, scope: !9042)
!9159 = !DILocation(line: 4858, column: 2, scope: !9042)
!9160 = !DILocation(line: 4859, column: 17, scope: !9042)
!9161 = !DILocation(line: 4859, column: 22, scope: !9042)
!9162 = !DILocation(line: 4859, column: 2, scope: !9042)
!9163 = !DILocation(line: 4861, column: 27, scope: !9042)
!9164 = !DILocation(line: 4861, column: 8, scope: !9042)
!9165 = !DILocation(line: 4861, column: 6, scope: !9042)
!9166 = !DILocation(line: 4862, column: 17, scope: !9042)
!9167 = !DILocation(line: 4862, column: 22, scope: !9042)
!9168 = !DILocation(line: 4862, column: 2, scope: !9042)
!9169 = !DILocation(line: 4863, column: 17, scope: !9042)
!9170 = !DILocation(line: 4863, column: 22, scope: !9042)
!9171 = !DILocation(line: 4863, column: 2, scope: !9042)
!9172 = !DILocation(line: 4865, column: 27, scope: !9042)
!9173 = !DILocation(line: 4865, column: 8, scope: !9042)
!9174 = !DILocation(line: 4865, column: 6, scope: !9042)
!9175 = !DILocation(line: 4866, column: 17, scope: !9042)
!9176 = !DILocation(line: 4866, column: 22, scope: !9042)
!9177 = !DILocation(line: 4866, column: 2, scope: !9042)
!9178 = !DILocation(line: 4867, column: 17, scope: !9042)
!9179 = !DILocation(line: 4867, column: 22, scope: !9042)
!9180 = !DILocation(line: 4867, column: 2, scope: !9042)
!9181 = !DILocation(line: 4869, column: 27, scope: !9042)
!9182 = !DILocation(line: 4869, column: 8, scope: !9042)
!9183 = !DILocation(line: 4869, column: 6, scope: !9042)
!9184 = !DILocation(line: 4870, column: 17, scope: !9042)
!9185 = !DILocation(line: 4870, column: 22, scope: !9042)
!9186 = !DILocation(line: 4870, column: 2, scope: !9042)
!9187 = !DILocation(line: 4871, column: 17, scope: !9042)
!9188 = !DILocation(line: 4871, column: 22, scope: !9042)
!9189 = !DILocation(line: 4871, column: 2, scope: !9042)
!9190 = !DILocation(line: 4873, column: 27, scope: !9042)
!9191 = !DILocation(line: 4873, column: 8, scope: !9042)
!9192 = !DILocation(line: 4873, column: 6, scope: !9042)
!9193 = !DILocation(line: 4874, column: 17, scope: !9042)
!9194 = !DILocation(line: 4874, column: 22, scope: !9042)
!9195 = !DILocation(line: 4874, column: 2, scope: !9042)
!9196 = !DILocation(line: 4875, column: 17, scope: !9042)
!9197 = !DILocation(line: 4875, column: 22, scope: !9042)
!9198 = !DILocation(line: 4875, column: 2, scope: !9042)
!9199 = !DILocation(line: 4877, column: 27, scope: !9042)
!9200 = !DILocation(line: 4877, column: 8, scope: !9042)
!9201 = !DILocation(line: 4877, column: 6, scope: !9042)
!9202 = !DILocation(line: 4878, column: 17, scope: !9042)
!9203 = !DILocation(line: 4878, column: 22, scope: !9042)
!9204 = !DILocation(line: 4878, column: 2, scope: !9042)
!9205 = !DILocation(line: 4879, column: 17, scope: !9042)
!9206 = !DILocation(line: 4879, column: 22, scope: !9042)
!9207 = !DILocation(line: 4879, column: 2, scope: !9042)
!9208 = !DILocation(line: 4881, column: 27, scope: !9042)
!9209 = !DILocation(line: 4881, column: 8, scope: !9042)
!9210 = !DILocation(line: 4881, column: 6, scope: !9042)
!9211 = !DILocation(line: 4882, column: 17, scope: !9042)
!9212 = !DILocation(line: 4882, column: 22, scope: !9042)
!9213 = !DILocation(line: 4882, column: 2, scope: !9042)
!9214 = !DILocation(line: 4883, column: 17, scope: !9042)
!9215 = !DILocation(line: 4883, column: 22, scope: !9042)
!9216 = !DILocation(line: 4883, column: 2, scope: !9042)
!9217 = !DILocation(line: 4886, column: 12, scope: !9042)
!9218 = !DILocation(line: 4887, column: 27, scope: !9042)
!9219 = !DILocation(line: 4887, column: 8, scope: !9042)
!9220 = !DILocation(line: 4887, column: 6, scope: !9042)
!9221 = !DILocation(line: 4888, column: 17, scope: !9042)
!9222 = !DILocation(line: 4888, column: 22, scope: !9042)
!9223 = !DILocation(line: 4888, column: 40, scope: !9042)
!9224 = !DILocation(line: 4888, column: 2, scope: !9042)
!9225 = !DILocation(line: 4889, column: 16, scope: !9042)
!9226 = !DILocation(line: 4889, column: 21, scope: !9042)
!9227 = !DILocation(line: 4889, column: 2, scope: !9042)
!9228 = !DILocation(line: 4891, column: 27, scope: !9042)
!9229 = !DILocation(line: 4891, column: 8, scope: !9042)
!9230 = !DILocation(line: 4891, column: 6, scope: !9042)
!9231 = !DILocation(line: 4892, column: 17, scope: !9042)
!9232 = !DILocation(line: 4892, column: 22, scope: !9042)
!9233 = !DILocation(line: 4892, column: 40, scope: !9042)
!9234 = !DILocation(line: 4892, column: 2, scope: !9042)
!9235 = !DILocation(line: 4893, column: 16, scope: !9042)
!9236 = !DILocation(line: 4893, column: 21, scope: !9042)
!9237 = !DILocation(line: 4893, column: 2, scope: !9042)
!9238 = !DILocation(line: 4895, column: 27, scope: !9042)
!9239 = !DILocation(line: 4895, column: 8, scope: !9042)
!9240 = !DILocation(line: 4895, column: 6, scope: !9042)
!9241 = !DILocation(line: 4896, column: 17, scope: !9042)
!9242 = !DILocation(line: 4896, column: 22, scope: !9042)
!9243 = !DILocation(line: 4896, column: 40, scope: !9042)
!9244 = !DILocation(line: 4896, column: 2, scope: !9042)
!9245 = !DILocation(line: 4897, column: 16, scope: !9042)
!9246 = !DILocation(line: 4897, column: 21, scope: !9042)
!9247 = !DILocation(line: 4897, column: 2, scope: !9042)
!9248 = !DILocation(line: 4899, column: 27, scope: !9042)
!9249 = !DILocation(line: 4899, column: 8, scope: !9042)
!9250 = !DILocation(line: 4899, column: 6, scope: !9042)
!9251 = !DILocation(line: 4900, column: 17, scope: !9042)
!9252 = !DILocation(line: 4900, column: 22, scope: !9042)
!9253 = !DILocation(line: 4900, column: 40, scope: !9042)
!9254 = !DILocation(line: 4900, column: 2, scope: !9042)
!9255 = !DILocation(line: 4901, column: 16, scope: !9042)
!9256 = !DILocation(line: 4901, column: 21, scope: !9042)
!9257 = !DILocation(line: 4901, column: 2, scope: !9042)
!9258 = !DILocation(line: 4902, column: 12, scope: !9042)
!9259 = !DILocation(line: 4903, column: 8, scope: !9042)
!9260 = !DILocation(line: 4906, column: 30, scope: !9042)
!9261 = !DILocation(line: 4906, column: 2, scope: !9042)
!9262 = !DILocation(line: 4907, column: 30, scope: !9042)
!9263 = !DILocation(line: 4907, column: 2, scope: !9042)
!9264 = !DILocation(line: 4908, column: 35, scope: !9042)
!9265 = !DILocation(line: 4908, column: 2, scope: !9042)
!9266 = !DILocation(line: 4909, column: 36, scope: !9042)
!9267 = !DILocation(line: 4909, column: 2, scope: !9042)
!9268 = !DILocation(line: 4910, column: 1, scope: !9042)
!9269 = !DILocalVariable(name: "keyconf", arg: 1, scope: !3536, file: !3, line: 4612, type: !3539)
!9270 = !DILocation(line: 4612, column: 54, scope: !3536)
!9271 = !DILocalVariable(name: "keymap", scope: !3536, file: !3, line: 4629, type: !4050)
!9272 = !DILocation(line: 4629, column: 12, scope: !3536)
!9273 = !DILocation(line: 4629, column: 40, scope: !3536)
!9274 = !DILocation(line: 4629, column: 21, scope: !3536)
!9275 = !DILocation(line: 4632, column: 6, scope: !9276)
!9276 = distinct !DILexicalBlock(scope: !3536, file: !3, line: 4632, column: 6)
!9277 = !DILocation(line: 4632, column: 13, scope: !9276)
!9278 = !DILocation(line: 4632, column: 16, scope: !9276)
!9279 = !DILocation(line: 4632, column: 24, scope: !9276)
!9280 = !DILocation(line: 4632, column: 6, scope: !3536)
!9281 = !DILocation(line: 4632, column: 37, scope: !9276)
!9282 = !DILocation(line: 4634, column: 30, scope: !3536)
!9283 = !DILocation(line: 4634, column: 11, scope: !3536)
!9284 = !DILocation(line: 4634, column: 9, scope: !3536)
!9285 = !DILocation(line: 4637, column: 26, scope: !3536)
!9286 = !DILocation(line: 4637, column: 2, scope: !3536)
!9287 = !DILocation(line: 4638, column: 26, scope: !3536)
!9288 = !DILocation(line: 4638, column: 2, scope: !3536)
!9289 = !DILocation(line: 4640, column: 26, scope: !3536)
!9290 = !DILocation(line: 4640, column: 2, scope: !3536)
!9291 = !DILocation(line: 4641, column: 26, scope: !3536)
!9292 = !DILocation(line: 4641, column: 2, scope: !3536)
!9293 = !DILocation(line: 4643, column: 26, scope: !3536)
!9294 = !DILocation(line: 4643, column: 2, scope: !3536)
!9295 = !DILocation(line: 4646, column: 26, scope: !3536)
!9296 = !DILocation(line: 4646, column: 2, scope: !3536)
!9297 = !DILocation(line: 4647, column: 26, scope: !3536)
!9298 = !DILocation(line: 4647, column: 2, scope: !3536)
!9299 = !DILocation(line: 4649, column: 26, scope: !3536)
!9300 = !DILocation(line: 4649, column: 2, scope: !3536)
!9301 = !DILocation(line: 4650, column: 26, scope: !3536)
!9302 = !DILocation(line: 4650, column: 2, scope: !3536)
!9303 = !DILocation(line: 4652, column: 26, scope: !3536)
!9304 = !DILocation(line: 4652, column: 2, scope: !3536)
!9305 = !DILocation(line: 4654, column: 26, scope: !3536)
!9306 = !DILocation(line: 4654, column: 2, scope: !3536)
!9307 = !DILocation(line: 4655, column: 26, scope: !3536)
!9308 = !DILocation(line: 4655, column: 2, scope: !3536)
!9309 = !DILocation(line: 4656, column: 26, scope: !3536)
!9310 = !DILocation(line: 4656, column: 2, scope: !3536)
!9311 = !DILocation(line: 4657, column: 26, scope: !3536)
!9312 = !DILocation(line: 4657, column: 2, scope: !3536)
!9313 = !DILocation(line: 4658, column: 26, scope: !3536)
!9314 = !DILocation(line: 4658, column: 2, scope: !3536)
!9315 = !DILocation(line: 4661, column: 24, scope: !3536)
!9316 = !DILocation(line: 4661, column: 2, scope: !3536)
!9317 = !DILocation(line: 4662, column: 24, scope: !3536)
!9318 = !DILocation(line: 4662, column: 2, scope: !3536)
!9319 = !DILocation(line: 4663, column: 24, scope: !3536)
!9320 = !DILocation(line: 4663, column: 2, scope: !3536)
!9321 = !DILocation(line: 4664, column: 24, scope: !3536)
!9322 = !DILocation(line: 4664, column: 2, scope: !3536)
!9323 = !DILocation(line: 4665, column: 24, scope: !3536)
!9324 = !DILocation(line: 4665, column: 2, scope: !3536)
!9325 = !DILocation(line: 4667, column: 1, scope: !3536)
!9326 = !DILocalVariable(name: "keyconf", arg: 1, scope: !3546, file: !3, line: 4701, type: !3539)
!9327 = !DILocation(line: 4701, column: 54, scope: !3546)
!9328 = !DILocalVariable(name: "keymap", scope: !3546, file: !3, line: 4711, type: !4050)
!9329 = !DILocation(line: 4711, column: 12, scope: !3546)
!9330 = !DILocation(line: 4711, column: 40, scope: !3546)
!9331 = !DILocation(line: 4711, column: 21, scope: !3546)
!9332 = !DILocation(line: 4714, column: 6, scope: !9333)
!9333 = distinct !DILexicalBlock(scope: !3546, file: !3, line: 4714, column: 6)
!9334 = !DILocation(line: 4714, column: 13, scope: !9333)
!9335 = !DILocation(line: 4714, column: 16, scope: !9333)
!9336 = !DILocation(line: 4714, column: 24, scope: !9333)
!9337 = !DILocation(line: 4714, column: 6, scope: !3546)
!9338 = !DILocation(line: 4714, column: 37, scope: !9333)
!9339 = !DILocation(line: 4716, column: 30, scope: !3546)
!9340 = !DILocation(line: 4716, column: 11, scope: !3546)
!9341 = !DILocation(line: 4716, column: 9, scope: !3546)
!9342 = !DILocation(line: 4719, column: 26, scope: !3546)
!9343 = !DILocation(line: 4719, column: 2, scope: !3546)
!9344 = !DILocation(line: 4722, column: 26, scope: !3546)
!9345 = !DILocation(line: 4722, column: 2, scope: !3546)
!9346 = !DILocation(line: 4723, column: 26, scope: !3546)
!9347 = !DILocation(line: 4723, column: 2, scope: !3546)
!9348 = !DILocation(line: 4726, column: 26, scope: !3546)
!9349 = !DILocation(line: 4726, column: 2, scope: !3546)
!9350 = !DILocation(line: 4727, column: 26, scope: !3546)
!9351 = !DILocation(line: 4727, column: 2, scope: !3546)
!9352 = !DILocation(line: 4730, column: 26, scope: !3546)
!9353 = !DILocation(line: 4730, column: 2, scope: !3546)
!9354 = !DILocation(line: 4731, column: 26, scope: !3546)
!9355 = !DILocation(line: 4731, column: 2, scope: !3546)
!9356 = !DILocation(line: 4733, column: 26, scope: !3546)
!9357 = !DILocation(line: 4733, column: 2, scope: !3546)
!9358 = !DILocation(line: 4734, column: 26, scope: !3546)
!9359 = !DILocation(line: 4734, column: 2, scope: !3546)
!9360 = !DILocation(line: 4737, column: 24, scope: !3546)
!9361 = !DILocation(line: 4737, column: 2, scope: !3546)
!9362 = !DILocation(line: 4738, column: 24, scope: !3546)
!9363 = !DILocation(line: 4738, column: 2, scope: !3546)
!9364 = !DILocation(line: 4739, column: 24, scope: !3546)
!9365 = !DILocation(line: 4739, column: 2, scope: !3546)
!9366 = !DILocation(line: 4740, column: 24, scope: !3546)
!9367 = !DILocation(line: 4740, column: 2, scope: !3546)
!9368 = !DILocation(line: 4741, column: 24, scope: !3546)
!9369 = !DILocation(line: 4741, column: 2, scope: !3546)
!9370 = !DILocation(line: 4742, column: 24, scope: !3546)
!9371 = !DILocation(line: 4742, column: 2, scope: !3546)
!9372 = !DILocation(line: 4743, column: 24, scope: !3546)
!9373 = !DILocation(line: 4743, column: 2, scope: !3546)
!9374 = !DILocation(line: 4744, column: 24, scope: !3546)
!9375 = !DILocation(line: 4744, column: 2, scope: !3546)
!9376 = !DILocation(line: 4745, column: 24, scope: !3546)
!9377 = !DILocation(line: 4745, column: 2, scope: !3546)
!9378 = !DILocation(line: 4746, column: 24, scope: !3546)
!9379 = !DILocation(line: 4746, column: 2, scope: !3546)
!9380 = !DILocation(line: 4747, column: 24, scope: !3546)
!9381 = !DILocation(line: 4747, column: 2, scope: !3546)
!9382 = !DILocation(line: 4748, column: 24, scope: !3546)
!9383 = !DILocation(line: 4748, column: 2, scope: !3546)
!9384 = !DILocation(line: 4750, column: 24, scope: !3546)
!9385 = !DILocation(line: 4750, column: 2, scope: !3546)
!9386 = !DILocation(line: 4751, column: 24, scope: !3546)
!9387 = !DILocation(line: 4751, column: 2, scope: !3546)
!9388 = !DILocation(line: 4752, column: 24, scope: !3546)
!9389 = !DILocation(line: 4752, column: 2, scope: !3546)
!9390 = !DILocation(line: 4753, column: 24, scope: !3546)
!9391 = !DILocation(line: 4753, column: 2, scope: !3546)
!9392 = !DILocation(line: 4754, column: 24, scope: !3546)
!9393 = !DILocation(line: 4754, column: 2, scope: !3546)
!9394 = !DILocation(line: 4755, column: 24, scope: !3546)
!9395 = !DILocation(line: 4755, column: 2, scope: !3546)
!9396 = !DILocation(line: 4756, column: 24, scope: !3546)
!9397 = !DILocation(line: 4756, column: 2, scope: !3546)
!9398 = !DILocation(line: 4757, column: 24, scope: !3546)
!9399 = !DILocation(line: 4757, column: 2, scope: !3546)
!9400 = !DILocation(line: 4758, column: 24, scope: !3546)
!9401 = !DILocation(line: 4758, column: 2, scope: !3546)
!9402 = !DILocation(line: 4759, column: 24, scope: !3546)
!9403 = !DILocation(line: 4759, column: 2, scope: !3546)
!9404 = !DILocation(line: 4760, column: 24, scope: !3546)
!9405 = !DILocation(line: 4760, column: 2, scope: !3546)
!9406 = !DILocation(line: 4761, column: 24, scope: !3546)
!9407 = !DILocation(line: 4761, column: 2, scope: !3546)
!9408 = !DILocation(line: 4762, column: 1, scope: !3546)
!9409 = !DILocalVariable(name: "keyconf", arg: 1, scope: !3549, file: !3, line: 4765, type: !3539)
!9410 = !DILocation(line: 4765, column: 59, scope: !3549)
!9411 = !DILocalVariable(name: "keymap", scope: !3549, file: !3, line: 4775, type: !4050)
!9412 = !DILocation(line: 4775, column: 12, scope: !3549)
!9413 = !DILocation(line: 4775, column: 40, scope: !3549)
!9414 = !DILocation(line: 4775, column: 21, scope: !3549)
!9415 = !DILocation(line: 4778, column: 6, scope: !9416)
!9416 = distinct !DILexicalBlock(scope: !3549, file: !3, line: 4778, column: 6)
!9417 = !DILocation(line: 4778, column: 13, scope: !9416)
!9418 = !DILocation(line: 4778, column: 16, scope: !9416)
!9419 = !DILocation(line: 4778, column: 24, scope: !9416)
!9420 = !DILocation(line: 4778, column: 6, scope: !3549)
!9421 = !DILocation(line: 4778, column: 37, scope: !9416)
!9422 = !DILocation(line: 4780, column: 30, scope: !3549)
!9423 = !DILocation(line: 4780, column: 11, scope: !3549)
!9424 = !DILocation(line: 4780, column: 9, scope: !3549)
!9425 = !DILocation(line: 4783, column: 26, scope: !3549)
!9426 = !DILocation(line: 4783, column: 2, scope: !3549)
!9427 = !DILocation(line: 4784, column: 26, scope: !3549)
!9428 = !DILocation(line: 4784, column: 2, scope: !3549)
!9429 = !DILocation(line: 4786, column: 26, scope: !3549)
!9430 = !DILocation(line: 4786, column: 2, scope: !3549)
!9431 = !DILocation(line: 4787, column: 26, scope: !3549)
!9432 = !DILocation(line: 4787, column: 2, scope: !3549)
!9433 = !DILocation(line: 4789, column: 26, scope: !3549)
!9434 = !DILocation(line: 4789, column: 2, scope: !3549)
!9435 = !DILocation(line: 4790, column: 26, scope: !3549)
!9436 = !DILocation(line: 4790, column: 2, scope: !3549)
!9437 = !DILocation(line: 4793, column: 24, scope: !3549)
!9438 = !DILocation(line: 4793, column: 2, scope: !3549)
!9439 = !DILocation(line: 4794, column: 24, scope: !3549)
!9440 = !DILocation(line: 4794, column: 2, scope: !3549)
!9441 = !DILocation(line: 4795, column: 1, scope: !3549)
!9442 = !DILocalVariable(name: "keyconf", arg: 1, scope: !3552, file: !3, line: 4670, type: !3539)
!9443 = !DILocation(line: 4670, column: 60, scope: !3552)
!9444 = !DILocalVariable(name: "keymap", scope: !3552, file: !3, line: 4679, type: !4050)
!9445 = !DILocation(line: 4679, column: 12, scope: !3552)
!9446 = !DILocation(line: 4679, column: 40, scope: !3552)
!9447 = !DILocation(line: 4679, column: 21, scope: !3552)
!9448 = !DILocation(line: 4682, column: 6, scope: !9449)
!9449 = distinct !DILexicalBlock(scope: !3552, file: !3, line: 4682, column: 6)
!9450 = !DILocation(line: 4682, column: 13, scope: !9449)
!9451 = !DILocation(line: 4682, column: 16, scope: !9449)
!9452 = !DILocation(line: 4682, column: 24, scope: !9449)
!9453 = !DILocation(line: 4682, column: 6, scope: !3552)
!9454 = !DILocation(line: 4682, column: 37, scope: !9449)
!9455 = !DILocation(line: 4684, column: 30, scope: !3552)
!9456 = !DILocation(line: 4684, column: 11, scope: !3552)
!9457 = !DILocation(line: 4684, column: 9, scope: !3552)
!9458 = !DILocation(line: 4687, column: 26, scope: !3552)
!9459 = !DILocation(line: 4687, column: 2, scope: !3552)
!9460 = !DILocation(line: 4688, column: 26, scope: !3552)
!9461 = !DILocation(line: 4688, column: 2, scope: !3552)
!9462 = !DILocation(line: 4690, column: 26, scope: !3552)
!9463 = !DILocation(line: 4690, column: 2, scope: !3552)
!9464 = !DILocation(line: 4691, column: 26, scope: !3552)
!9465 = !DILocation(line: 4691, column: 2, scope: !3552)
!9466 = !DILocation(line: 4694, column: 24, scope: !3552)
!9467 = !DILocation(line: 4694, column: 2, scope: !3552)
!9468 = !DILocation(line: 4695, column: 24, scope: !3552)
!9469 = !DILocation(line: 4695, column: 2, scope: !3552)
!9470 = !DILocation(line: 4696, column: 24, scope: !3552)
!9471 = !DILocation(line: 4696, column: 2, scope: !3552)
!9472 = !DILocation(line: 4697, column: 1, scope: !3552)
!9473 = distinct !DISubprogram(name: "RNA_action_itemf", scope: !3, file: !3, line: 4934, type: !9474, scopeLine: 4935, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!9474 = !DISubroutineType(types: !9475)
!9475 = !{!9476, !1414, !4318, !1392, !9477}
!9476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3232, size: 64)
!9477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2328, size: 64)
!9478 = !DILocalVariable(name: "C", arg: 1, scope: !9473, file: !3, line: 4934, type: !1414)
!9479 = !DILocation(line: 4934, column: 46, scope: !9473)
!9480 = !DILocalVariable(name: "ptr", arg: 2, scope: !9473, file: !3, line: 4934, type: !4318)
!9481 = !DILocation(line: 4934, column: 61, scope: !9473)
!9482 = !DILocalVariable(name: "UNUSED_prop", arg: 3, scope: !9473, file: !3, line: 4934, type: !1392)
!9483 = !DILocation(line: 4934, column: 79, scope: !9473)
!9484 = !DILocalVariable(name: "r_free", arg: 4, scope: !9473, file: !3, line: 4934, type: !9477)
!9485 = !DILocation(line: 4934, column: 99, scope: !9473)
!9486 = !DILocation(line: 4936, column: 22, scope: !9473)
!9487 = !DILocation(line: 4936, column: 25, scope: !9473)
!9488 = !DILocation(line: 4936, column: 30, scope: !9473)
!9489 = !DILocation(line: 4936, column: 38, scope: !9473)
!9490 = !DILocation(line: 4936, column: 62, scope: !9473)
!9491 = !DILocation(line: 4936, column: 48, scope: !9473)
!9492 = !DILocation(line: 4936, column: 66, scope: !9473)
!9493 = !DILocation(line: 4936, column: 73, scope: !9473)
!9494 = !DILocation(line: 4936, column: 42, scope: !9473)
!9495 = !DILocation(line: 4936, column: 9, scope: !9473)
!9496 = !DILocation(line: 4936, column: 2, scope: !9473)
!9497 = distinct !DISubprogram(name: "rna_id_itemf", scope: !3, file: !3, line: 4913, type: !9498, scopeLine: 4914, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!9498 = !DISubroutineType(types: !9499)
!9499 = !{!9476, !1414, !4318, !9477, !1427, !2328}
!9500 = !DILocalVariable(name: "UNUSED_C", arg: 1, scope: !9497, file: !3, line: 4913, type: !1414)
!9501 = !DILocation(line: 4913, column: 49, scope: !9497)
!9502 = !DILocalVariable(name: "UNUSED_ptr", arg: 2, scope: !9497, file: !3, line: 4913, type: !4318)
!9503 = !DILocation(line: 4913, column: 72, scope: !9497)
!9504 = !DILocalVariable(name: "r_free", arg: 3, scope: !9497, file: !3, line: 4913, type: !9477)
!9505 = !DILocation(line: 4913, column: 91, scope: !9497)
!9506 = !DILocalVariable(name: "id", arg: 4, scope: !9497, file: !3, line: 4913, type: !1427)
!9507 = !DILocation(line: 4913, column: 103, scope: !9497)
!9508 = !DILocalVariable(name: "local", arg: 5, scope: !9497, file: !3, line: 4913, type: !2328)
!9509 = !DILocation(line: 4913, column: 112, scope: !9497)
!9510 = !DILocalVariable(name: "item_tmp", scope: !9497, file: !3, line: 4915, type: !3232)
!9511 = !DILocation(line: 4915, column: 19, scope: !9497)
!9512 = !DILocalVariable(name: "item", scope: !9497, file: !3, line: 4915, type: !9476)
!9513 = !DILocation(line: 4915, column: 36, scope: !9497)
!9514 = !DILocalVariable(name: "totitem", scope: !9497, file: !3, line: 4916, type: !1224)
!9515 = !DILocation(line: 4916, column: 6, scope: !9497)
!9516 = !DILocalVariable(name: "i", scope: !9497, file: !3, line: 4917, type: !1224)
!9517 = !DILocation(line: 4917, column: 6, scope: !9497)
!9518 = !DILocation(line: 4919, column: 2, scope: !9497)
!9519 = !DILocation(line: 4919, column: 9, scope: !9520)
!9520 = distinct !DILexicalBlock(scope: !9521, file: !3, line: 4919, column: 2)
!9521 = distinct !DILexicalBlock(scope: !9497, file: !3, line: 4919, column: 2)
!9522 = !DILocation(line: 4919, column: 2, scope: !9521)
!9523 = !DILocation(line: 4920, column: 7, scope: !9524)
!9524 = distinct !DILexicalBlock(scope: !9525, file: !3, line: 4920, column: 7)
!9525 = distinct !DILexicalBlock(scope: !9520, file: !3, line: 4919, column: 28)
!9526 = !DILocation(line: 4920, column: 13, scope: !9524)
!9527 = !DILocation(line: 4920, column: 22, scope: !9524)
!9528 = !DILocation(line: 4920, column: 25, scope: !9524)
!9529 = !DILocation(line: 4920, column: 29, scope: !9524)
!9530 = !DILocation(line: 4920, column: 33, scope: !9524)
!9531 = !DILocation(line: 4920, column: 7, scope: !9525)
!9532 = !DILocation(line: 4921, column: 42, scope: !9533)
!9533 = distinct !DILexicalBlock(scope: !9524, file: !3, line: 4920, column: 42)
!9534 = !DILocation(line: 4921, column: 46, scope: !9533)
!9535 = !DILocation(line: 4921, column: 51, scope: !9533)
!9536 = !DILocation(line: 4921, column: 35, scope: !9533)
!9537 = !DILocation(line: 4921, column: 40, scope: !9533)
!9538 = !DILocation(line: 4921, column: 13, scope: !9533)
!9539 = !DILocation(line: 4921, column: 24, scope: !9533)
!9540 = !DILocation(line: 4922, column: 22, scope: !9533)
!9541 = !DILocation(line: 4922, column: 13, scope: !9533)
!9542 = !DILocation(line: 4922, column: 19, scope: !9533)
!9543 = !DILocation(line: 4923, column: 4, scope: !9533)
!9544 = !DILocation(line: 4924, column: 3, scope: !9533)
!9545 = !DILocation(line: 4925, column: 2, scope: !9525)
!9546 = !DILocation(line: 4919, column: 18, scope: !9520)
!9547 = !DILocation(line: 4919, column: 22, scope: !9520)
!9548 = !DILocation(line: 4919, column: 16, scope: !9520)
!9549 = !DILocation(line: 4919, column: 2, scope: !9520)
!9550 = distinct !{!9550, !9522, !9551}
!9551 = !DILocation(line: 4925, column: 2, scope: !9521)
!9552 = !DILocation(line: 4927, column: 2, scope: !9497)
!9553 = !DILocation(line: 4928, column: 3, scope: !9497)
!9554 = !DILocation(line: 4928, column: 10, scope: !9497)
!9555 = !DILocation(line: 4930, column: 9, scope: !9497)
!9556 = !DILocation(line: 4930, column: 2, scope: !9497)
!9557 = distinct !DISubprogram(name: "RNA_group_itemf", scope: !3, file: !3, line: 4945, type: !9474, scopeLine: 4946, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!9558 = !DILocalVariable(name: "C", arg: 1, scope: !9557, file: !3, line: 4945, type: !1414)
!9559 = !DILocation(line: 4945, column: 45, scope: !9557)
!9560 = !DILocalVariable(name: "ptr", arg: 2, scope: !9557, file: !3, line: 4945, type: !4318)
!9561 = !DILocation(line: 4945, column: 60, scope: !9557)
!9562 = !DILocalVariable(name: "UNUSED_prop", arg: 3, scope: !9557, file: !3, line: 4945, type: !1392)
!9563 = !DILocation(line: 4945, column: 78, scope: !9557)
!9564 = !DILocalVariable(name: "r_free", arg: 4, scope: !9557, file: !3, line: 4945, type: !9477)
!9565 = !DILocation(line: 4945, column: 98, scope: !9557)
!9566 = !DILocation(line: 4947, column: 22, scope: !9557)
!9567 = !DILocation(line: 4947, column: 25, scope: !9557)
!9568 = !DILocation(line: 4947, column: 30, scope: !9557)
!9569 = !DILocation(line: 4947, column: 38, scope: !9557)
!9570 = !DILocation(line: 4947, column: 62, scope: !9557)
!9571 = !DILocation(line: 4947, column: 48, scope: !9557)
!9572 = !DILocation(line: 4947, column: 66, scope: !9557)
!9573 = !DILocation(line: 4947, column: 72, scope: !9557)
!9574 = !DILocation(line: 4947, column: 42, scope: !9557)
!9575 = !DILocation(line: 4947, column: 9, scope: !9557)
!9576 = !DILocation(line: 4947, column: 2, scope: !9557)
!9577 = distinct !DISubprogram(name: "RNA_group_local_itemf", scope: !3, file: !3, line: 4949, type: !9474, scopeLine: 4950, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!9578 = !DILocalVariable(name: "C", arg: 1, scope: !9577, file: !3, line: 4949, type: !1414)
!9579 = !DILocation(line: 4949, column: 51, scope: !9577)
!9580 = !DILocalVariable(name: "ptr", arg: 2, scope: !9577, file: !3, line: 4949, type: !4318)
!9581 = !DILocation(line: 4949, column: 66, scope: !9577)
!9582 = !DILocalVariable(name: "UNUSED_prop", arg: 3, scope: !9577, file: !3, line: 4949, type: !1392)
!9583 = !DILocation(line: 4949, column: 84, scope: !9577)
!9584 = !DILocalVariable(name: "r_free", arg: 4, scope: !9577, file: !3, line: 4949, type: !9477)
!9585 = !DILocation(line: 4949, column: 104, scope: !9577)
!9586 = !DILocation(line: 4951, column: 22, scope: !9577)
!9587 = !DILocation(line: 4951, column: 25, scope: !9577)
!9588 = !DILocation(line: 4951, column: 30, scope: !9577)
!9589 = !DILocation(line: 4951, column: 38, scope: !9577)
!9590 = !DILocation(line: 4951, column: 62, scope: !9577)
!9591 = !DILocation(line: 4951, column: 48, scope: !9577)
!9592 = !DILocation(line: 4951, column: 66, scope: !9577)
!9593 = !DILocation(line: 4951, column: 72, scope: !9577)
!9594 = !DILocation(line: 4951, column: 42, scope: !9577)
!9595 = !DILocation(line: 4951, column: 9, scope: !9577)
!9596 = !DILocation(line: 4951, column: 2, scope: !9577)
!9597 = distinct !DISubprogram(name: "RNA_image_itemf", scope: !3, file: !3, line: 4954, type: !9474, scopeLine: 4955, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!9598 = !DILocalVariable(name: "C", arg: 1, scope: !9597, file: !3, line: 4954, type: !1414)
!9599 = !DILocation(line: 4954, column: 45, scope: !9597)
!9600 = !DILocalVariable(name: "ptr", arg: 2, scope: !9597, file: !3, line: 4954, type: !4318)
!9601 = !DILocation(line: 4954, column: 60, scope: !9597)
!9602 = !DILocalVariable(name: "UNUSED_prop", arg: 3, scope: !9597, file: !3, line: 4954, type: !1392)
!9603 = !DILocation(line: 4954, column: 78, scope: !9597)
!9604 = !DILocalVariable(name: "r_free", arg: 4, scope: !9597, file: !3, line: 4954, type: !9477)
!9605 = !DILocation(line: 4954, column: 98, scope: !9597)
!9606 = !DILocation(line: 4956, column: 22, scope: !9597)
!9607 = !DILocation(line: 4956, column: 25, scope: !9597)
!9608 = !DILocation(line: 4956, column: 30, scope: !9597)
!9609 = !DILocation(line: 4956, column: 38, scope: !9597)
!9610 = !DILocation(line: 4956, column: 62, scope: !9597)
!9611 = !DILocation(line: 4956, column: 48, scope: !9597)
!9612 = !DILocation(line: 4956, column: 66, scope: !9597)
!9613 = !DILocation(line: 4956, column: 72, scope: !9597)
!9614 = !DILocation(line: 4956, column: 42, scope: !9597)
!9615 = !DILocation(line: 4956, column: 9, scope: !9597)
!9616 = !DILocation(line: 4956, column: 2, scope: !9597)
!9617 = distinct !DISubprogram(name: "RNA_image_local_itemf", scope: !3, file: !3, line: 4958, type: !9474, scopeLine: 4959, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!9618 = !DILocalVariable(name: "C", arg: 1, scope: !9617, file: !3, line: 4958, type: !1414)
!9619 = !DILocation(line: 4958, column: 51, scope: !9617)
!9620 = !DILocalVariable(name: "ptr", arg: 2, scope: !9617, file: !3, line: 4958, type: !4318)
!9621 = !DILocation(line: 4958, column: 66, scope: !9617)
!9622 = !DILocalVariable(name: "UNUSED_prop", arg: 3, scope: !9617, file: !3, line: 4958, type: !1392)
!9623 = !DILocation(line: 4958, column: 84, scope: !9617)
!9624 = !DILocalVariable(name: "r_free", arg: 4, scope: !9617, file: !3, line: 4958, type: !9477)
!9625 = !DILocation(line: 4958, column: 104, scope: !9617)
!9626 = !DILocation(line: 4960, column: 22, scope: !9617)
!9627 = !DILocation(line: 4960, column: 25, scope: !9617)
!9628 = !DILocation(line: 4960, column: 30, scope: !9617)
!9629 = !DILocation(line: 4960, column: 38, scope: !9617)
!9630 = !DILocation(line: 4960, column: 62, scope: !9617)
!9631 = !DILocation(line: 4960, column: 48, scope: !9617)
!9632 = !DILocation(line: 4960, column: 66, scope: !9617)
!9633 = !DILocation(line: 4960, column: 72, scope: !9617)
!9634 = !DILocation(line: 4960, column: 42, scope: !9617)
!9635 = !DILocation(line: 4960, column: 9, scope: !9617)
!9636 = !DILocation(line: 4960, column: 2, scope: !9617)
!9637 = distinct !DISubprogram(name: "RNA_scene_itemf", scope: !3, file: !3, line: 4963, type: !9474, scopeLine: 4964, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!9638 = !DILocalVariable(name: "C", arg: 1, scope: !9637, file: !3, line: 4963, type: !1414)
!9639 = !DILocation(line: 4963, column: 45, scope: !9637)
!9640 = !DILocalVariable(name: "ptr", arg: 2, scope: !9637, file: !3, line: 4963, type: !4318)
!9641 = !DILocation(line: 4963, column: 60, scope: !9637)
!9642 = !DILocalVariable(name: "UNUSED_prop", arg: 3, scope: !9637, file: !3, line: 4963, type: !1392)
!9643 = !DILocation(line: 4963, column: 78, scope: !9637)
!9644 = !DILocalVariable(name: "r_free", arg: 4, scope: !9637, file: !3, line: 4963, type: !9477)
!9645 = !DILocation(line: 4963, column: 98, scope: !9637)
!9646 = !DILocation(line: 4965, column: 22, scope: !9637)
!9647 = !DILocation(line: 4965, column: 25, scope: !9637)
!9648 = !DILocation(line: 4965, column: 30, scope: !9637)
!9649 = !DILocation(line: 4965, column: 38, scope: !9637)
!9650 = !DILocation(line: 4965, column: 62, scope: !9637)
!9651 = !DILocation(line: 4965, column: 48, scope: !9637)
!9652 = !DILocation(line: 4965, column: 66, scope: !9637)
!9653 = !DILocation(line: 4965, column: 72, scope: !9637)
!9654 = !DILocation(line: 4965, column: 42, scope: !9637)
!9655 = !DILocation(line: 4965, column: 9, scope: !9637)
!9656 = !DILocation(line: 4965, column: 2, scope: !9637)
!9657 = distinct !DISubprogram(name: "RNA_scene_local_itemf", scope: !3, file: !3, line: 4967, type: !9474, scopeLine: 4968, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!9658 = !DILocalVariable(name: "C", arg: 1, scope: !9657, file: !3, line: 4967, type: !1414)
!9659 = !DILocation(line: 4967, column: 51, scope: !9657)
!9660 = !DILocalVariable(name: "ptr", arg: 2, scope: !9657, file: !3, line: 4967, type: !4318)
!9661 = !DILocation(line: 4967, column: 66, scope: !9657)
!9662 = !DILocalVariable(name: "UNUSED_prop", arg: 3, scope: !9657, file: !3, line: 4967, type: !1392)
!9663 = !DILocation(line: 4967, column: 84, scope: !9657)
!9664 = !DILocalVariable(name: "r_free", arg: 4, scope: !9657, file: !3, line: 4967, type: !9477)
!9665 = !DILocation(line: 4967, column: 104, scope: !9657)
!9666 = !DILocation(line: 4969, column: 22, scope: !9657)
!9667 = !DILocation(line: 4969, column: 25, scope: !9657)
!9668 = !DILocation(line: 4969, column: 30, scope: !9657)
!9669 = !DILocation(line: 4969, column: 38, scope: !9657)
!9670 = !DILocation(line: 4969, column: 62, scope: !9657)
!9671 = !DILocation(line: 4969, column: 48, scope: !9657)
!9672 = !DILocation(line: 4969, column: 66, scope: !9657)
!9673 = !DILocation(line: 4969, column: 72, scope: !9657)
!9674 = !DILocation(line: 4969, column: 42, scope: !9657)
!9675 = !DILocation(line: 4969, column: 9, scope: !9657)
!9676 = !DILocation(line: 4969, column: 2, scope: !9657)
!9677 = distinct !DISubprogram(name: "RNA_movieclip_itemf", scope: !3, file: !3, line: 4972, type: !9474, scopeLine: 4973, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!9678 = !DILocalVariable(name: "C", arg: 1, scope: !9677, file: !3, line: 4972, type: !1414)
!9679 = !DILocation(line: 4972, column: 49, scope: !9677)
!9680 = !DILocalVariable(name: "ptr", arg: 2, scope: !9677, file: !3, line: 4972, type: !4318)
!9681 = !DILocation(line: 4972, column: 64, scope: !9677)
!9682 = !DILocalVariable(name: "UNUSED_prop", arg: 3, scope: !9677, file: !3, line: 4972, type: !1392)
!9683 = !DILocation(line: 4972, column: 82, scope: !9677)
!9684 = !DILocalVariable(name: "r_free", arg: 4, scope: !9677, file: !3, line: 4972, type: !9477)
!9685 = !DILocation(line: 4972, column: 102, scope: !9677)
!9686 = !DILocation(line: 4974, column: 22, scope: !9677)
!9687 = !DILocation(line: 4974, column: 25, scope: !9677)
!9688 = !DILocation(line: 4974, column: 30, scope: !9677)
!9689 = !DILocation(line: 4974, column: 38, scope: !9677)
!9690 = !DILocation(line: 4974, column: 62, scope: !9677)
!9691 = !DILocation(line: 4974, column: 48, scope: !9677)
!9692 = !DILocation(line: 4974, column: 66, scope: !9677)
!9693 = !DILocation(line: 4974, column: 76, scope: !9677)
!9694 = !DILocation(line: 4974, column: 42, scope: !9677)
!9695 = !DILocation(line: 4974, column: 9, scope: !9677)
!9696 = !DILocation(line: 4974, column: 2, scope: !9677)
!9697 = distinct !DISubprogram(name: "RNA_movieclip_local_itemf", scope: !3, file: !3, line: 4976, type: !9474, scopeLine: 4977, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!9698 = !DILocalVariable(name: "C", arg: 1, scope: !9697, file: !3, line: 4976, type: !1414)
!9699 = !DILocation(line: 4976, column: 55, scope: !9697)
!9700 = !DILocalVariable(name: "ptr", arg: 2, scope: !9697, file: !3, line: 4976, type: !4318)
!9701 = !DILocation(line: 4976, column: 70, scope: !9697)
!9702 = !DILocalVariable(name: "UNUSED_prop", arg: 3, scope: !9697, file: !3, line: 4976, type: !1392)
!9703 = !DILocation(line: 4976, column: 88, scope: !9697)
!9704 = !DILocalVariable(name: "r_free", arg: 4, scope: !9697, file: !3, line: 4976, type: !9477)
!9705 = !DILocation(line: 4976, column: 108, scope: !9697)
!9706 = !DILocation(line: 4978, column: 22, scope: !9697)
!9707 = !DILocation(line: 4978, column: 25, scope: !9697)
!9708 = !DILocation(line: 4978, column: 30, scope: !9697)
!9709 = !DILocation(line: 4978, column: 38, scope: !9697)
!9710 = !DILocation(line: 4978, column: 62, scope: !9697)
!9711 = !DILocation(line: 4978, column: 48, scope: !9697)
!9712 = !DILocation(line: 4978, column: 66, scope: !9697)
!9713 = !DILocation(line: 4978, column: 76, scope: !9697)
!9714 = !DILocation(line: 4978, column: 42, scope: !9697)
!9715 = !DILocation(line: 4978, column: 9, scope: !9697)
!9716 = !DILocation(line: 4978, column: 2, scope: !9697)
!9717 = distinct !DISubprogram(name: "RNA_mask_itemf", scope: !3, file: !3, line: 4981, type: !9474, scopeLine: 4982, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!9718 = !DILocalVariable(name: "C", arg: 1, scope: !9717, file: !3, line: 4981, type: !1414)
!9719 = !DILocation(line: 4981, column: 44, scope: !9717)
!9720 = !DILocalVariable(name: "ptr", arg: 2, scope: !9717, file: !3, line: 4981, type: !4318)
!9721 = !DILocation(line: 4981, column: 59, scope: !9717)
!9722 = !DILocalVariable(name: "UNUSED_prop", arg: 3, scope: !9717, file: !3, line: 4981, type: !1392)
!9723 = !DILocation(line: 4981, column: 77, scope: !9717)
!9724 = !DILocalVariable(name: "r_free", arg: 4, scope: !9717, file: !3, line: 4981, type: !9477)
!9725 = !DILocation(line: 4981, column: 97, scope: !9717)
!9726 = !DILocation(line: 4983, column: 22, scope: !9717)
!9727 = !DILocation(line: 4983, column: 25, scope: !9717)
!9728 = !DILocation(line: 4983, column: 30, scope: !9717)
!9729 = !DILocation(line: 4983, column: 38, scope: !9717)
!9730 = !DILocation(line: 4983, column: 62, scope: !9717)
!9731 = !DILocation(line: 4983, column: 48, scope: !9717)
!9732 = !DILocation(line: 4983, column: 66, scope: !9717)
!9733 = !DILocation(line: 4983, column: 71, scope: !9717)
!9734 = !DILocation(line: 4983, column: 42, scope: !9717)
!9735 = !DILocation(line: 4983, column: 9, scope: !9717)
!9736 = !DILocation(line: 4983, column: 2, scope: !9717)
!9737 = distinct !DISubprogram(name: "RNA_mask_local_itemf", scope: !3, file: !3, line: 4985, type: !9474, scopeLine: 4986, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!9738 = !DILocalVariable(name: "C", arg: 1, scope: !9737, file: !3, line: 4985, type: !1414)
!9739 = !DILocation(line: 4985, column: 50, scope: !9737)
!9740 = !DILocalVariable(name: "ptr", arg: 2, scope: !9737, file: !3, line: 4985, type: !4318)
!9741 = !DILocation(line: 4985, column: 65, scope: !9737)
!9742 = !DILocalVariable(name: "UNUSED_prop", arg: 3, scope: !9737, file: !3, line: 4985, type: !1392)
!9743 = !DILocation(line: 4985, column: 83, scope: !9737)
!9744 = !DILocalVariable(name: "r_free", arg: 4, scope: !9737, file: !3, line: 4985, type: !9477)
!9745 = !DILocation(line: 4985, column: 103, scope: !9737)
!9746 = !DILocation(line: 4987, column: 22, scope: !9737)
!9747 = !DILocation(line: 4987, column: 25, scope: !9737)
!9748 = !DILocation(line: 4987, column: 30, scope: !9737)
!9749 = !DILocation(line: 4987, column: 38, scope: !9737)
!9750 = !DILocation(line: 4987, column: 62, scope: !9737)
!9751 = !DILocation(line: 4987, column: 48, scope: !9737)
!9752 = !DILocation(line: 4987, column: 66, scope: !9737)
!9753 = !DILocation(line: 4987, column: 71, scope: !9737)
!9754 = !DILocation(line: 4987, column: 42, scope: !9737)
!9755 = !DILocation(line: 4987, column: 9, scope: !9737)
!9756 = !DILocation(line: 4987, column: 2, scope: !9737)
!9757 = distinct !DISubprogram(name: "wm_macro_start", scope: !3, file: !3, line: 201, type: !5262, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!9758 = !DILocalVariable(name: "op", arg: 1, scope: !9757, file: !3, line: 201, type: !2965)
!9759 = !DILocation(line: 201, column: 40, scope: !9757)
!9760 = !DILocation(line: 203, column: 6, scope: !9761)
!9761 = distinct !DILexicalBlock(scope: !9757, file: !3, line: 203, column: 6)
!9762 = !DILocation(line: 203, column: 10, scope: !9761)
!9763 = !DILocation(line: 203, column: 21, scope: !9761)
!9764 = !DILocation(line: 203, column: 6, scope: !9757)
!9765 = !DILocation(line: 204, column: 20, scope: !9766)
!9766 = distinct !DILexicalBlock(scope: !9761, file: !3, line: 203, column: 30)
!9767 = !DILocation(line: 204, column: 3, scope: !9766)
!9768 = !DILocation(line: 204, column: 7, scope: !9766)
!9769 = !DILocation(line: 204, column: 18, scope: !9766)
!9770 = !DILocation(line: 205, column: 2, scope: !9766)
!9771 = !DILocation(line: 206, column: 1, scope: !9757)
!9772 = distinct !DISubprogram(name: "wm_macro_end", scope: !3, file: !3, line: 208, type: !9773, scopeLine: 209, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!9773 = !DISubroutineType(types: !9774)
!9774 = !{!1224, !2965, !1224}
!9775 = !DILocalVariable(name: "op", arg: 1, scope: !9772, file: !3, line: 208, type: !2965)
!9776 = !DILocation(line: 208, column: 37, scope: !9772)
!9777 = !DILocalVariable(name: "retval", arg: 2, scope: !9772, file: !3, line: 208, type: !1224)
!9778 = !DILocation(line: 208, column: 45, scope: !9772)
!9779 = !DILocation(line: 210, column: 6, scope: !9780)
!9780 = distinct !DILexicalBlock(scope: !9772, file: !3, line: 210, column: 6)
!9781 = !DILocation(line: 210, column: 13, scope: !9780)
!9782 = !DILocation(line: 210, column: 6, scope: !9772)
!9783 = !DILocalVariable(name: "md", scope: !9784, file: !3, line: 211, type: !3912)
!9784 = distinct !DILexicalBlock(scope: !9780, file: !3, line: 210, column: 35)
!9785 = !DILocation(line: 211, column: 14, scope: !9784)
!9786 = !DILocation(line: 211, column: 19, scope: !9784)
!9787 = !DILocation(line: 211, column: 23, scope: !9784)
!9788 = !DILocation(line: 213, column: 7, scope: !9789)
!9789 = distinct !DILexicalBlock(scope: !9784, file: !3, line: 213, column: 7)
!9790 = !DILocation(line: 213, column: 11, scope: !9789)
!9791 = !DILocation(line: 213, column: 18, scope: !9789)
!9792 = !DILocation(line: 213, column: 7, scope: !9784)
!9793 = !DILocation(line: 214, column: 11, scope: !9794)
!9794 = distinct !DILexicalBlock(scope: !9789, file: !3, line: 213, column: 39)
!9795 = !DILocation(line: 215, column: 11, scope: !9794)
!9796 = !DILocation(line: 216, column: 3, scope: !9794)
!9797 = !DILocation(line: 217, column: 2, scope: !9784)
!9798 = !DILocation(line: 220, column: 6, scope: !9799)
!9799 = distinct !DILexicalBlock(scope: !9772, file: !3, line: 220, column: 6)
!9800 = !DILocation(line: 220, column: 13, scope: !9799)
!9801 = !DILocation(line: 220, column: 6, scope: !9772)
!9802 = !DILocation(line: 221, column: 7, scope: !9803)
!9803 = distinct !DILexicalBlock(scope: !9804, file: !3, line: 221, column: 7)
!9804 = distinct !DILexicalBlock(scope: !9799, file: !3, line: 220, column: 57)
!9805 = !DILocation(line: 221, column: 11, scope: !9803)
!9806 = !DILocation(line: 221, column: 7, scope: !9804)
!9807 = !DILocation(line: 222, column: 4, scope: !9808)
!9808 = distinct !DILexicalBlock(scope: !9803, file: !3, line: 221, column: 23)
!9809 = !DILocation(line: 222, column: 14, scope: !9808)
!9810 = !DILocation(line: 222, column: 18, scope: !9808)
!9811 = !DILocation(line: 223, column: 4, scope: !9808)
!9812 = !DILocation(line: 223, column: 8, scope: !9808)
!9813 = !DILocation(line: 223, column: 19, scope: !9808)
!9814 = !DILocation(line: 224, column: 3, scope: !9808)
!9815 = !DILocation(line: 225, column: 2, scope: !9804)
!9816 = !DILocation(line: 227, column: 9, scope: !9772)
!9817 = !DILocation(line: 227, column: 2, scope: !9772)
!9818 = distinct !DISubprogram(name: "wm_macro_invoke_internal", scope: !3, file: !3, line: 260, type: !9819, scopeLine: 261, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!9819 = !DISubroutineType(types: !9820)
!9820 = !{!1224, !1414, !2965, !3946, !2965}
!9821 = !DILocalVariable(name: "C", arg: 1, scope: !9818, file: !3, line: 260, type: !1414)
!9822 = !DILocation(line: 260, column: 47, scope: !9818)
!9823 = !DILocalVariable(name: "op", arg: 2, scope: !9818, file: !3, line: 260, type: !2965)
!9824 = !DILocation(line: 260, column: 62, scope: !9818)
!9825 = !DILocalVariable(name: "event", arg: 3, scope: !9818, file: !3, line: 260, type: !3946)
!9826 = !DILocation(line: 260, column: 81, scope: !9818)
!9827 = !DILocalVariable(name: "opm", arg: 4, scope: !9818, file: !3, line: 260, type: !2965)
!9828 = !DILocation(line: 260, column: 100, scope: !9818)
!9829 = !DILocalVariable(name: "retval", scope: !9818, file: !3, line: 262, type: !1224)
!9830 = !DILocation(line: 262, column: 6, scope: !9818)
!9831 = !DILocation(line: 265, column: 2, scope: !9818)
!9832 = !DILocation(line: 265, column: 9, scope: !9833)
!9833 = distinct !DILexicalBlock(scope: !9834, file: !3, line: 265, column: 2)
!9834 = distinct !DILexicalBlock(scope: !9818, file: !3, line: 265, column: 2)
!9835 = !DILocation(line: 265, column: 2, scope: !9834)
!9836 = !DILocation(line: 266, column: 7, scope: !9837)
!9837 = distinct !DILexicalBlock(scope: !9838, file: !3, line: 266, column: 7)
!9838 = distinct !DILexicalBlock(scope: !9833, file: !3, line: 265, column: 31)
!9839 = !DILocation(line: 266, column: 12, scope: !9837)
!9840 = !DILocation(line: 266, column: 18, scope: !9837)
!9841 = !DILocation(line: 266, column: 7, scope: !9838)
!9842 = !DILocation(line: 267, column: 13, scope: !9837)
!9843 = !DILocation(line: 267, column: 18, scope: !9837)
!9844 = !DILocation(line: 267, column: 24, scope: !9837)
!9845 = !DILocation(line: 267, column: 31, scope: !9837)
!9846 = !DILocation(line: 267, column: 34, scope: !9837)
!9847 = !DILocation(line: 267, column: 39, scope: !9837)
!9848 = !DILocation(line: 267, column: 11, scope: !9837)
!9849 = !DILocation(line: 267, column: 4, scope: !9837)
!9850 = !DILocation(line: 268, column: 12, scope: !9851)
!9851 = distinct !DILexicalBlock(scope: !9837, file: !3, line: 268, column: 12)
!9852 = !DILocation(line: 268, column: 17, scope: !9851)
!9853 = !DILocation(line: 268, column: 23, scope: !9851)
!9854 = !DILocation(line: 268, column: 12, scope: !9837)
!9855 = !DILocation(line: 269, column: 13, scope: !9851)
!9856 = !DILocation(line: 269, column: 18, scope: !9851)
!9857 = !DILocation(line: 269, column: 24, scope: !9851)
!9858 = !DILocation(line: 269, column: 29, scope: !9851)
!9859 = !DILocation(line: 269, column: 32, scope: !9851)
!9860 = !DILocation(line: 269, column: 11, scope: !9851)
!9861 = !DILocation(line: 269, column: 4, scope: !9851)
!9862 = !DILocation(line: 271, column: 3, scope: !9838)
!9863 = !DILocation(line: 273, column: 23, scope: !9838)
!9864 = !DILocation(line: 273, column: 27, scope: !9838)
!9865 = !DILocation(line: 273, column: 36, scope: !9838)
!9866 = !DILocation(line: 273, column: 43, scope: !9838)
!9867 = !DILocation(line: 273, column: 48, scope: !9838)
!9868 = !DILocation(line: 273, column: 57, scope: !9838)
!9869 = !DILocation(line: 273, column: 3, scope: !9838)
!9870 = !DILocation(line: 275, column: 7, scope: !9871)
!9871 = distinct !DILexicalBlock(scope: !9838, file: !3, line: 275, column: 7)
!9872 = !DILocation(line: 275, column: 14, scope: !9871)
!9873 = !DILocation(line: 275, column: 7, scope: !9838)
!9874 = !DILocalVariable(name: "md", scope: !9875, file: !3, line: 276, type: !3912)
!9875 = distinct !DILexicalBlock(scope: !9871, file: !3, line: 275, column: 35)
!9876 = !DILocation(line: 276, column: 15, scope: !9875)
!9877 = !DILocation(line: 276, column: 20, scope: !9875)
!9878 = !DILocation(line: 276, column: 24, scope: !9875)
!9879 = !DILocation(line: 277, column: 4, scope: !9875)
!9880 = !DILocation(line: 277, column: 8, scope: !9875)
!9881 = !DILocation(line: 277, column: 15, scope: !9875)
!9882 = !DILocation(line: 278, column: 3, scope: !9875)
!9883 = !DILocation(line: 280, column: 4, scope: !9884)
!9884 = distinct !DILexicalBlock(scope: !9871, file: !3, line: 279, column: 8)
!9885 = !DILocation(line: 282, column: 2, scope: !9838)
!9886 = !DILocation(line: 265, column: 20, scope: !9833)
!9887 = !DILocation(line: 265, column: 25, scope: !9833)
!9888 = !DILocation(line: 265, column: 18, scope: !9833)
!9889 = !DILocation(line: 265, column: 2, scope: !9833)
!9890 = distinct !{!9890, !9835, !9891}
!9891 = !DILocation(line: 282, column: 2, scope: !9834)
!9892 = !DILocation(line: 284, column: 22, scope: !9818)
!9893 = !DILocation(line: 284, column: 26, scope: !9818)
!9894 = !DILocation(line: 284, column: 9, scope: !9818)
!9895 = !DILocation(line: 284, column: 2, scope: !9818)
!9896 = distinct !DISubprogram(name: "wm_block_redo_cancel_cb", scope: !3, file: !3, line: 1417, type: !9897, scopeLine: 1418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!9897 = !DISubroutineType(types: !9898)
!9898 = !{null, !1414, !1391}
!9899 = !DILocalVariable(name: "C", arg: 1, scope: !9896, file: !3, line: 1417, type: !1414)
!9900 = !DILocation(line: 1417, column: 47, scope: !9896)
!9901 = !DILocalVariable(name: "arg_op", arg: 2, scope: !9896, file: !3, line: 1417, type: !1391)
!9902 = !DILocation(line: 1417, column: 56, scope: !9896)
!9903 = !DILocalVariable(name: "op", scope: !9896, file: !3, line: 1419, type: !2965)
!9904 = !DILocation(line: 1419, column: 14, scope: !9896)
!9905 = !DILocation(line: 1419, column: 19, scope: !9896)
!9906 = !DILocation(line: 1422, column: 6, scope: !9907)
!9907 = distinct !DILexicalBlock(scope: !9896, file: !3, line: 1422, column: 6)
!9908 = !DILocation(line: 1422, column: 34, scope: !9907)
!9909 = !DILocation(line: 1422, column: 12, scope: !9907)
!9910 = !DILocation(line: 1422, column: 9, scope: !9907)
!9911 = !DILocation(line: 1422, column: 6, scope: !9896)
!9912 = !DILocation(line: 1423, column: 20, scope: !9907)
!9913 = !DILocation(line: 1423, column: 3, scope: !9907)
!9914 = !DILocation(line: 1424, column: 1, scope: !9896)
!9915 = distinct !DISubprogram(name: "wm_block_redo_cb", scope: !3, file: !3, line: 1400, type: !9916, scopeLine: 1401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!9916 = !DISubroutineType(types: !9917)
!9917 = !{null, !1414, !1391, !1224}
!9918 = !DILocalVariable(name: "C", arg: 1, scope: !9915, file: !3, line: 1400, type: !1414)
!9919 = !DILocation(line: 1400, column: 40, scope: !9915)
!9920 = !DILocalVariable(name: "arg_op", arg: 2, scope: !9915, file: !3, line: 1400, type: !1391)
!9921 = !DILocation(line: 1400, column: 49, scope: !9915)
!9922 = !DILocalVariable(name: "UNUSED_arg_event", arg: 3, scope: !9915, file: !3, line: 1400, type: !1224)
!9923 = !DILocation(line: 1400, column: 61, scope: !9915)
!9924 = !DILocalVariable(name: "op", scope: !9915, file: !3, line: 1402, type: !2965)
!9925 = !DILocation(line: 1402, column: 14, scope: !9915)
!9926 = !DILocation(line: 1402, column: 19, scope: !9915)
!9927 = !DILocation(line: 1404, column: 6, scope: !9928)
!9928 = distinct !DILexicalBlock(scope: !9915, file: !3, line: 1404, column: 6)
!9929 = !DILocation(line: 1404, column: 34, scope: !9928)
!9930 = !DILocation(line: 1404, column: 12, scope: !9928)
!9931 = !DILocation(line: 1404, column: 9, scope: !9928)
!9932 = !DILocation(line: 1404, column: 6, scope: !9915)
!9933 = !DILocation(line: 1406, column: 27, scope: !9934)
!9934 = distinct !DILexicalBlock(scope: !9928, file: !3, line: 1404, column: 38)
!9935 = !DILocation(line: 1406, column: 30, scope: !9934)
!9936 = !DILocation(line: 1406, column: 3, scope: !9934)
!9937 = !DILocation(line: 1407, column: 2, scope: !9934)
!9938 = !DILocation(line: 1410, column: 19, scope: !9939)
!9939 = distinct !DILexicalBlock(scope: !9928, file: !3, line: 1408, column: 7)
!9940 = !DILocation(line: 1410, column: 22, scope: !9939)
!9941 = !DILocation(line: 1410, column: 3, scope: !9939)
!9942 = !DILocation(line: 1411, column: 24, scope: !9939)
!9943 = !DILocation(line: 1411, column: 27, scope: !9939)
!9944 = !DILocation(line: 1411, column: 3, scope: !9939)
!9945 = !DILocation(line: 1413, column: 22, scope: !9939)
!9946 = !DILocation(line: 1413, column: 25, scope: !9939)
!9947 = !DILocation(line: 1413, column: 3, scope: !9939)
!9948 = !DILocation(line: 1415, column: 1, scope: !9915)
!9949 = distinct !DISubprogram(name: "dialog_check_cb", scope: !3, file: !3, line: 1488, type: !9950, scopeLine: 1489, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!9950 = !DISubroutineType(types: !9951)
!9951 = !{null, !1414, !1391, !1391}
!9952 = !DILocalVariable(name: "C", arg: 1, scope: !9949, file: !3, line: 1488, type: !1414)
!9953 = !DILocation(line: 1488, column: 39, scope: !9949)
!9954 = !DILocalVariable(name: "op_ptr", arg: 2, scope: !9949, file: !3, line: 1488, type: !1391)
!9955 = !DILocation(line: 1488, column: 48, scope: !9949)
!9956 = !DILocalVariable(name: "UNUSED_arg", arg: 3, scope: !9949, file: !3, line: 1488, type: !1391)
!9957 = !DILocation(line: 1488, column: 62, scope: !9949)
!9958 = !DILocalVariable(name: "op", scope: !9949, file: !3, line: 1490, type: !2965)
!9959 = !DILocation(line: 1490, column: 14, scope: !9949)
!9960 = !DILocation(line: 1490, column: 19, scope: !9949)
!9961 = !DILocation(line: 1491, column: 6, scope: !9962)
!9962 = distinct !DILexicalBlock(scope: !9949, file: !3, line: 1491, column: 6)
!9963 = !DILocation(line: 1491, column: 10, scope: !9962)
!9964 = !DILocation(line: 1491, column: 16, scope: !9962)
!9965 = !DILocation(line: 1491, column: 6, scope: !9949)
!9966 = !DILocation(line: 1492, column: 7, scope: !9967)
!9967 = distinct !DILexicalBlock(scope: !9968, file: !3, line: 1492, column: 7)
!9968 = distinct !DILexicalBlock(scope: !9962, file: !3, line: 1491, column: 23)
!9969 = !DILocation(line: 1492, column: 11, scope: !9967)
!9970 = !DILocation(line: 1492, column: 17, scope: !9967)
!9971 = !DILocation(line: 1492, column: 23, scope: !9967)
!9972 = !DILocation(line: 1492, column: 26, scope: !9967)
!9973 = !DILocation(line: 1492, column: 7, scope: !9968)
!9974 = !DILocalVariable(name: "ar_menu", scope: !9975, file: !3, line: 1494, type: !3259)
!9975 = distinct !DILexicalBlock(scope: !9967, file: !3, line: 1492, column: 31)
!9976 = !DILocation(line: 1494, column: 13, scope: !9975)
!9977 = !DILocation(line: 1494, column: 35, scope: !9975)
!9978 = !DILocation(line: 1494, column: 23, scope: !9975)
!9979 = !DILocation(line: 1495, column: 8, scope: !9980)
!9980 = distinct !DILexicalBlock(scope: !9975, file: !3, line: 1495, column: 8)
!9981 = !DILocation(line: 1495, column: 8, scope: !9975)
!9982 = !DILocation(line: 1496, column: 30, scope: !9983)
!9983 = distinct !DILexicalBlock(scope: !9980, file: !3, line: 1495, column: 17)
!9984 = !DILocation(line: 1496, column: 5, scope: !9983)
!9985 = !DILocation(line: 1497, column: 4, scope: !9983)
!9986 = !DILocation(line: 1498, column: 3, scope: !9975)
!9987 = !DILocation(line: 1499, column: 2, scope: !9968)
!9988 = !DILocation(line: 1500, column: 1, scope: !9949)
!9989 = distinct !DISubprogram(name: "dialog_exec_cb", scope: !3, file: !3, line: 1471, type: !9950, scopeLine: 1472, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!9990 = !DILocalVariable(name: "C", arg: 1, scope: !9989, file: !3, line: 1471, type: !1414)
!9991 = !DILocation(line: 1471, column: 38, scope: !9989)
!9992 = !DILocalVariable(name: "arg1", arg: 2, scope: !9989, file: !3, line: 1471, type: !1391)
!9993 = !DILocation(line: 1471, column: 47, scope: !9989)
!9994 = !DILocalVariable(name: "arg2", arg: 3, scope: !9989, file: !3, line: 1471, type: !1391)
!9995 = !DILocation(line: 1471, column: 59, scope: !9989)
!9996 = !DILocalVariable(name: "data", scope: !9989, file: !3, line: 1473, type: !6278)
!9997 = !DILocation(line: 1473, column: 13, scope: !9989)
!9998 = !DILocation(line: 1473, column: 20, scope: !9989)
!9999 = !DILocalVariable(name: "block", scope: !9989, file: !3, line: 1474, type: !3256)
!10000 = !DILocation(line: 1474, column: 11, scope: !9989)
!10001 = !DILocation(line: 1474, column: 19, scope: !9989)
!10002 = !DILocation(line: 1476, column: 22, scope: !9989)
!10003 = !DILocation(line: 1476, column: 25, scope: !9989)
!10004 = !DILocation(line: 1476, column: 31, scope: !9989)
!10005 = !DILocation(line: 1476, column: 2, scope: !9989)
!10006 = !DILocation(line: 1483, column: 2, scope: !9989)
!10007 = !DILocation(line: 1483, column: 12, scope: !9989)
!10008 = !DILocation(line: 1485, column: 18, scope: !9989)
!10009 = !DILocation(line: 1485, column: 21, scope: !9989)
!10010 = !DILocation(line: 1485, column: 2, scope: !9989)
!10011 = !DILocation(line: 1486, column: 1, scope: !9989)
!10012 = distinct !DISubprogram(name: "min_ii", scope: !10013, file: !10013, line: 211, type: !10014, scopeLine: 212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!10013 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_base_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!10014 = !DISubroutineType(types: !10015)
!10015 = !{!1224, !1224, !1224}
!10016 = !DILocalVariable(name: "a", arg: 1, scope: !10012, file: !10013, line: 211, type: !1224)
!10017 = !DILocation(line: 211, column: 24, scope: !10012)
!10018 = !DILocalVariable(name: "b", arg: 2, scope: !10012, file: !10013, line: 211, type: !1224)
!10019 = !DILocation(line: 211, column: 31, scope: !10012)
!10020 = !DILocation(line: 213, column: 10, scope: !10012)
!10021 = !DILocation(line: 213, column: 14, scope: !10012)
!10022 = !DILocation(line: 213, column: 12, scope: !10012)
!10023 = !DILocation(line: 213, column: 9, scope: !10012)
!10024 = !DILocation(line: 213, column: 19, scope: !10012)
!10025 = !DILocation(line: 213, column: 23, scope: !10012)
!10026 = !DILocation(line: 213, column: 2, scope: !10012)
!10027 = distinct !DISubprogram(name: "max_ii", scope: !10013, file: !10013, line: 215, type: !10014, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!10028 = !DILocalVariable(name: "a", arg: 1, scope: !10027, file: !10013, line: 215, type: !1224)
!10029 = !DILocation(line: 215, column: 24, scope: !10027)
!10030 = !DILocalVariable(name: "b", arg: 2, scope: !10027, file: !10013, line: 215, type: !1224)
!10031 = !DILocation(line: 215, column: 31, scope: !10027)
!10032 = !DILocation(line: 217, column: 10, scope: !10027)
!10033 = !DILocation(line: 217, column: 14, scope: !10027)
!10034 = !DILocation(line: 217, column: 12, scope: !10027)
!10035 = !DILocation(line: 217, column: 9, scope: !10027)
!10036 = !DILocation(line: 217, column: 19, scope: !10027)
!10037 = !DILocation(line: 217, column: 23, scope: !10027)
!10038 = !DILocation(line: 217, column: 2, scope: !10027)
!10039 = distinct !DISubprogram(name: "wm_operator_winactive_normal", scope: !3, file: !3, line: 2115, type: !6184, scopeLine: 2116, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!10040 = !DILocalVariable(name: "C", arg: 1, scope: !10039, file: !3, line: 2115, type: !1414)
!10041 = !DILocation(line: 2115, column: 51, scope: !10039)
!10042 = !DILocalVariable(name: "win", scope: !10039, file: !3, line: 2117, type: !4033)
!10043 = !DILocation(line: 2117, column: 12, scope: !10039)
!10044 = !DILocation(line: 2117, column: 32, scope: !10039)
!10045 = !DILocation(line: 2117, column: 18, scope: !10039)
!10046 = !DILocation(line: 2119, column: 6, scope: !10047)
!10047 = distinct !DILexicalBlock(scope: !10039, file: !3, line: 2119, column: 6)
!10048 = !DILocation(line: 2119, column: 10, scope: !10047)
!10049 = !DILocation(line: 2119, column: 18, scope: !10047)
!10050 = !DILocation(line: 2119, column: 21, scope: !10047)
!10051 = !DILocation(line: 2119, column: 26, scope: !10047)
!10052 = !DILocation(line: 2119, column: 33, scope: !10047)
!10053 = !DILocation(line: 2119, column: 41, scope: !10047)
!10054 = !DILocation(line: 2119, column: 44, scope: !10047)
!10055 = !DILocation(line: 2119, column: 49, scope: !10047)
!10056 = !DILocation(line: 2119, column: 57, scope: !10047)
!10057 = !DILocation(line: 2119, column: 63, scope: !10047)
!10058 = !DILocation(line: 2119, column: 6, scope: !10039)
!10059 = !DILocation(line: 2120, column: 3, scope: !10047)
!10060 = !DILocation(line: 2122, column: 2, scope: !10039)
!10061 = !DILocation(line: 2123, column: 1, scope: !10039)
!10062 = distinct !DISubprogram(name: "wm_userpref_autoexec_add_exec", scope: !3, file: !3, line: 2145, type: !3871, scopeLine: 2146, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!10063 = !DILocalVariable(name: "UNUSED_C", arg: 1, scope: !10062, file: !3, line: 2145, type: !1414)
!10064 = !DILocation(line: 2145, column: 52, scope: !10062)
!10065 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !10062, file: !3, line: 2145, type: !2965)
!10066 = !DILocation(line: 2145, column: 75, scope: !10062)
!10067 = !DILocalVariable(name: "path_cmp", scope: !10062, file: !3, line: 2147, type: !10068)
!10068 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10069, size: 64)
!10069 = !DIDerivedType(tag: DW_TAG_typedef, name: "bPathCompare", file: !1223, line: 403, baseType: !10070)
!10070 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPathCompare", file: !1223, line: 399, size: 6336, elements: !10071)
!10071 = !{!10072, !10074, !10075, !10076, !10077}
!10072 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10070, file: !1223, line: 400, baseType: !10073, size: 64)
!10073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10070, size: 64)
!10074 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10070, file: !1223, line: 400, baseType: !10073, size: 64, offset: 64)
!10075 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !10070, file: !1223, line: 401, baseType: !1941, size: 6144, offset: 128)
!10076 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !10070, file: !1223, line: 402, baseType: !1447, size: 8, offset: 6272)
!10077 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !10070, file: !1223, line: 402, baseType: !2226, size: 56, offset: 6280)
!10078 = !DILocation(line: 2147, column: 16, scope: !10062)
!10079 = !DILocation(line: 2147, column: 27, scope: !10062)
!10080 = !DILocation(line: 2148, column: 33, scope: !10062)
!10081 = !DILocation(line: 2148, column: 2, scope: !10062)
!10082 = !DILocation(line: 2149, column: 2, scope: !10062)
!10083 = distinct !DISubprogram(name: "wm_userpref_autoexec_remove_exec", scope: !3, file: !3, line: 2163, type: !3871, scopeLine: 2164, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!10084 = !DILocalVariable(name: "UNUSED_C", arg: 1, scope: !10083, file: !3, line: 2163, type: !1414)
!10085 = !DILocation(line: 2163, column: 55, scope: !10083)
!10086 = !DILocalVariable(name: "op", arg: 2, scope: !10083, file: !3, line: 2163, type: !2965)
!10087 = !DILocation(line: 2163, column: 78, scope: !10083)
!10088 = !DILocalVariable(name: "index", scope: !10083, file: !3, line: 2165, type: !1419)
!10089 = !DILocation(line: 2165, column: 12, scope: !10083)
!10090 = !DILocation(line: 2165, column: 32, scope: !10083)
!10091 = !DILocation(line: 2165, column: 36, scope: !10083)
!10092 = !DILocation(line: 2165, column: 20, scope: !10083)
!10093 = !DILocalVariable(name: "path_cmp", scope: !10083, file: !3, line: 2166, type: !10068)
!10094 = !DILocation(line: 2166, column: 16, scope: !10083)
!10095 = !DILocation(line: 2166, column: 59, scope: !10083)
!10096 = !DILocation(line: 2166, column: 27, scope: !10083)
!10097 = !DILocation(line: 2167, column: 6, scope: !10098)
!10098 = distinct !DILexicalBlock(scope: !10083, file: !3, line: 2167, column: 6)
!10099 = !DILocation(line: 2167, column: 6, scope: !10083)
!10100 = !DILocation(line: 2168, column: 36, scope: !10101)
!10101 = distinct !DILexicalBlock(scope: !10098, file: !3, line: 2167, column: 16)
!10102 = !DILocation(line: 2168, column: 3, scope: !10101)
!10103 = !DILocation(line: 2169, column: 2, scope: !10101)
!10104 = !DILocation(line: 2170, column: 2, scope: !10083)
!10105 = distinct !DISubprogram(name: "wm_exit_blender_exec", scope: !3, file: !3, line: 2975, type: !3871, scopeLine: 2976, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!10106 = !DILocalVariable(name: "C", arg: 1, scope: !10105, file: !3, line: 2975, type: !1414)
!10107 = !DILocation(line: 2975, column: 43, scope: !10105)
!10108 = !DILocalVariable(name: "op", arg: 2, scope: !10105, file: !3, line: 2975, type: !2965)
!10109 = !DILocation(line: 2975, column: 58, scope: !10105)
!10110 = !DILocation(line: 2977, column: 19, scope: !10105)
!10111 = !DILocation(line: 2977, column: 2, scope: !10105)
!10112 = !DILocation(line: 2979, column: 10, scope: !10105)
!10113 = !DILocation(line: 2979, column: 2, scope: !10105)
!10114 = !DILocation(line: 2981, column: 2, scope: !10105)
!10115 = distinct !DISubprogram(name: "wm_open_mainfile_invoke", scope: !3, file: !3, line: 2271, type: !3944, scopeLine: 2272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!10116 = !DILocalVariable(name: "C", arg: 1, scope: !10115, file: !3, line: 2271, type: !1414)
!10117 = !DILocation(line: 2271, column: 46, scope: !10115)
!10118 = !DILocalVariable(name: "op", arg: 2, scope: !10115, file: !3, line: 2271, type: !2965)
!10119 = !DILocation(line: 2271, column: 61, scope: !10115)
!10120 = !DILocalVariable(name: "UNUSED_event", arg: 3, scope: !10115, file: !3, line: 2271, type: !3946)
!10121 = !DILocation(line: 2271, column: 80, scope: !10115)
!10122 = !DILocalVariable(name: "openname", scope: !10115, file: !3, line: 2273, type: !2979)
!10123 = !DILocation(line: 2273, column: 14, scope: !10115)
!10124 = !DILocation(line: 2273, column: 27, scope: !10115)
!10125 = !DILocation(line: 2273, column: 33, scope: !10115)
!10126 = !DILocation(line: 2273, column: 25, scope: !10115)
!10127 = !DILocation(line: 2275, column: 20, scope: !10128)
!10128 = distinct !DILexicalBlock(scope: !10115, file: !3, line: 2275, column: 6)
!10129 = !DILocation(line: 2275, column: 6, scope: !10128)
!10130 = !DILocation(line: 2275, column: 23, scope: !10128)
!10131 = !DILocation(line: 2275, column: 6, scope: !10115)
!10132 = !DILocation(line: 2279, column: 14, scope: !10133)
!10133 = distinct !DILexicalBlock(scope: !10128, file: !3, line: 2275, column: 32)
!10134 = !DILocation(line: 2279, column: 18, scope: !10133)
!10135 = !DILocation(line: 2279, column: 3, scope: !10133)
!10136 = !DILocation(line: 2280, column: 3, scope: !10133)
!10137 = !DILocation(line: 2284, column: 21, scope: !10138)
!10138 = distinct !DILexicalBlock(scope: !10115, file: !3, line: 2284, column: 6)
!10139 = !DILocation(line: 2284, column: 6, scope: !10138)
!10140 = !DILocation(line: 2284, column: 6, scope: !10115)
!10141 = !DILocalVariable(name: "recent", scope: !10142, file: !3, line: 2285, type: !10143)
!10142 = distinct !DILexicalBlock(scope: !10138, file: !3, line: 2284, column: 28)
!10143 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10144, size: 64)
!10144 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecentFile", file: !936, line: 649, size: 192, elements: !10145)
!10145 = !{!10146, !10147, !10148}
!10146 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10144, file: !936, line: 650, baseType: !10143, size: 64)
!10147 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10144, file: !936, line: 650, baseType: !10143, size: 64, offset: 64)
!10148 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !10144, file: !936, line: 651, baseType: !1502, size: 64, offset: 128)
!10149 = !DILocation(line: 2285, column: 22, scope: !10142)
!10150 = !DILocation(line: 2285, column: 46, scope: !10142)
!10151 = !DILocation(line: 2285, column: 31, scope: !10142)
!10152 = !DILocation(line: 2286, column: 14, scope: !10142)
!10153 = !DILocation(line: 2286, column: 22, scope: !10142)
!10154 = !DILocation(line: 2286, column: 12, scope: !10142)
!10155 = !DILocation(line: 2287, column: 2, scope: !10142)
!10156 = !DILocation(line: 2289, column: 17, scope: !10115)
!10157 = !DILocation(line: 2289, column: 21, scope: !10115)
!10158 = !DILocation(line: 2289, column: 38, scope: !10115)
!10159 = !DILocation(line: 2289, column: 2, scope: !10115)
!10160 = !DILocation(line: 2290, column: 23, scope: !10115)
!10161 = !DILocation(line: 2290, column: 2, scope: !10115)
!10162 = !DILocation(line: 2291, column: 27, scope: !10115)
!10163 = !DILocation(line: 2291, column: 2, scope: !10115)
!10164 = !DILocation(line: 2292, column: 2, scope: !10115)
!10165 = !DILocation(line: 2292, column: 6, scope: !10115)
!10166 = !DILocation(line: 2292, column: 17, scope: !10115)
!10167 = !DILocation(line: 2294, column: 26, scope: !10115)
!10168 = !DILocation(line: 2294, column: 29, scope: !10115)
!10169 = !DILocation(line: 2294, column: 2, scope: !10115)
!10170 = !DILocation(line: 2296, column: 2, scope: !10115)
!10171 = !DILocation(line: 2297, column: 1, scope: !10115)
!10172 = distinct !DISubprogram(name: "wm_open_mainfile_exec", scope: !3, file: !3, line: 2299, type: !3871, scopeLine: 2300, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!10173 = !DILocalVariable(name: "C", arg: 1, scope: !10172, file: !3, line: 2299, type: !1414)
!10174 = !DILocation(line: 2299, column: 44, scope: !10172)
!10175 = !DILocalVariable(name: "op", arg: 2, scope: !10172, file: !3, line: 2299, type: !2965)
!10176 = !DILocation(line: 2299, column: 59, scope: !10172)
!10177 = !DILocalVariable(name: "filepath", scope: !10172, file: !3, line: 2301, type: !1446)
!10178 = !DILocation(line: 2301, column: 7, scope: !10172)
!10179 = !DILocalVariable(name: "success", scope: !10172, file: !3, line: 2302, type: !2328)
!10180 = !DILocation(line: 2302, column: 7, scope: !10172)
!10181 = !DILocation(line: 2304, column: 17, scope: !10172)
!10182 = !DILocation(line: 2304, column: 21, scope: !10172)
!10183 = !DILocation(line: 2304, column: 38, scope: !10172)
!10184 = !DILocation(line: 2304, column: 2, scope: !10172)
!10185 = !DILocation(line: 2307, column: 23, scope: !10172)
!10186 = !DILocation(line: 2307, column: 2, scope: !10172)
!10187 = !DILocation(line: 2308, column: 27, scope: !10172)
!10188 = !DILocation(line: 2308, column: 2, scope: !10172)
!10189 = !DILocation(line: 2310, column: 22, scope: !10190)
!10190 = distinct !DILexicalBlock(scope: !10172, file: !3, line: 2310, column: 6)
!10191 = !DILocation(line: 2310, column: 26, scope: !10190)
!10192 = !DILocation(line: 2310, column: 6, scope: !10190)
!10193 = !DILocation(line: 2310, column: 6, scope: !10172)
!10194 = !DILocation(line: 2311, column: 15, scope: !10190)
!10195 = !DILocation(line: 2311, column: 3, scope: !10190)
!10196 = !DILocation(line: 2313, column: 15, scope: !10190)
!10197 = !DILocation(line: 2315, column: 22, scope: !10198)
!10198 = distinct !DILexicalBlock(scope: !10172, file: !3, line: 2315, column: 6)
!10199 = !DILocation(line: 2315, column: 26, scope: !10198)
!10200 = !DILocation(line: 2315, column: 6, scope: !10198)
!10201 = !DILocation(line: 2315, column: 6, scope: !10172)
!10202 = !DILocation(line: 2316, column: 7, scope: !10198)
!10203 = !DILocation(line: 2316, column: 3, scope: !10198)
!10204 = !DILocation(line: 2318, column: 7, scope: !10198)
!10205 = !DILocation(line: 2320, column: 32, scope: !10172)
!10206 = !DILocation(line: 2320, column: 35, scope: !10172)
!10207 = !DILocation(line: 2320, column: 45, scope: !10172)
!10208 = !DILocation(line: 2320, column: 49, scope: !10172)
!10209 = !DILocation(line: 2320, column: 62, scope: !10172)
!10210 = !DILocation(line: 2320, column: 64, scope: !10172)
!10211 = !DILocation(line: 2320, column: 58, scope: !10172)
!10212 = !DILocation(line: 2320, column: 12, scope: !10172)
!10213 = !DILocation(line: 2320, column: 10, scope: !10172)
!10214 = !DILocation(line: 2323, column: 29, scope: !10172)
!10215 = !DILocation(line: 2323, column: 33, scope: !10172)
!10216 = !DILocation(line: 2323, column: 2, scope: !10172)
!10217 = !DILocation(line: 2325, column: 6, scope: !10218)
!10218 = distinct !DILexicalBlock(scope: !10172, file: !3, line: 2325, column: 6)
!10219 = !DILocation(line: 2325, column: 6, scope: !10172)
!10220 = !DILocation(line: 2326, column: 3, scope: !10221)
!10221 = distinct !DILexicalBlock(scope: !10218, file: !3, line: 2325, column: 15)
!10222 = !DILocation(line: 2329, column: 3, scope: !10223)
!10223 = distinct !DILexicalBlock(scope: !10218, file: !3, line: 2328, column: 7)
!10224 = !DILocation(line: 2331, column: 1, scope: !10172)
!10225 = distinct !DISubprogram(name: "wm_open_mainfile_check", scope: !3, file: !3, line: 2333, type: !10226, scopeLine: 2334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!10226 = !DISubroutineType(types: !10227)
!10227 = !{!2328, !1414, !2965}
!10228 = !DILocalVariable(name: "UNUSED_C", arg: 1, scope: !10225, file: !3, line: 2333, type: !1414)
!10229 = !DILocation(line: 2333, column: 46, scope: !10225)
!10230 = !DILocalVariable(name: "op", arg: 2, scope: !10225, file: !3, line: 2333, type: !2965)
!10231 = !DILocation(line: 2333, column: 69, scope: !10225)
!10232 = !DILocalVariable(name: "file_info", scope: !10225, file: !3, line: 2335, type: !3218)
!10233 = !DILocation(line: 2335, column: 22, scope: !10225)
!10234 = !DILocation(line: 2335, column: 57, scope: !10225)
!10235 = !DILocation(line: 2335, column: 61, scope: !10225)
!10236 = !DILocation(line: 2335, column: 34, scope: !10225)
!10237 = !DILocalVariable(name: "prop", scope: !10225, file: !3, line: 2336, type: !1392)
!10238 = !DILocation(line: 2336, column: 15, scope: !10225)
!10239 = !DILocation(line: 2336, column: 47, scope: !10225)
!10240 = !DILocation(line: 2336, column: 51, scope: !10225)
!10241 = !DILocation(line: 2336, column: 22, scope: !10225)
!10242 = !DILocalVariable(name: "is_untrusted", scope: !10225, file: !3, line: 2337, type: !2328)
!10243 = !DILocation(line: 2337, column: 7, scope: !10225)
!10244 = !DILocalVariable(name: "path", scope: !10225, file: !3, line: 2338, type: !1446)
!10245 = !DILocation(line: 2338, column: 7, scope: !10225)
!10246 = !DILocalVariable(name: "lslash", scope: !10225, file: !3, line: 2339, type: !1502)
!10247 = !DILocation(line: 2339, column: 8, scope: !10225)
!10248 = !DILocation(line: 2341, column: 17, scope: !10225)
!10249 = !DILocation(line: 2341, column: 21, scope: !10225)
!10250 = !DILocation(line: 2341, column: 38, scope: !10225)
!10251 = !DILocation(line: 2341, column: 2, scope: !10225)
!10252 = !DILocation(line: 2344, column: 34, scope: !10225)
!10253 = !DILocation(line: 2344, column: 19, scope: !10225)
!10254 = !DILocation(line: 2344, column: 9, scope: !10225)
!10255 = !DILocation(line: 2345, column: 6, scope: !10256)
!10256 = distinct !DILexicalBlock(scope: !10225, file: !3, line: 2345, column: 6)
!10257 = !DILocation(line: 2345, column: 6, scope: !10225)
!10258 = !DILocation(line: 2345, column: 16, scope: !10256)
!10259 = !DILocation(line: 2345, column: 23, scope: !10256)
!10260 = !DILocation(line: 2345, column: 28, scope: !10256)
!10261 = !DILocation(line: 2345, column: 14, scope: !10256)
!10262 = !DILocation(line: 2347, column: 9, scope: !10263)
!10263 = distinct !DILexicalBlock(scope: !10225, file: !3, line: 2347, column: 6)
!10264 = !DILocation(line: 2347, column: 14, scope: !10263)
!10265 = !DILocation(line: 2347, column: 46, scope: !10263)
!10266 = !DILocation(line: 2347, column: 6, scope: !10225)
!10267 = !DILocation(line: 2348, column: 26, scope: !10268)
!10268 = distinct !DILexicalBlock(scope: !10269, file: !3, line: 2348, column: 7)
!10269 = distinct !DILexicalBlock(scope: !10263, file: !3, line: 2347, column: 52)
!10270 = !DILocation(line: 2348, column: 7, scope: !10268)
!10271 = !DILocation(line: 2348, column: 32, scope: !10268)
!10272 = !DILocation(line: 2348, column: 7, scope: !10269)
!10273 = !DILocation(line: 2349, column: 29, scope: !10274)
!10274 = distinct !DILexicalBlock(scope: !10268, file: !3, line: 2348, column: 41)
!10275 = !DILocation(line: 2349, column: 33, scope: !10274)
!10276 = !DILocation(line: 2349, column: 38, scope: !10274)
!10277 = !DILocation(line: 2349, column: 4, scope: !10274)
!10278 = !DILocation(line: 2350, column: 17, scope: !10274)
!10279 = !DILocation(line: 2351, column: 3, scope: !10274)
!10280 = !DILocation(line: 2352, column: 2, scope: !10269)
!10281 = !DILocation(line: 2354, column: 6, scope: !10282)
!10282 = distinct !DILexicalBlock(scope: !10225, file: !3, line: 2354, column: 6)
!10283 = !DILocation(line: 2354, column: 6, scope: !10225)
!10284 = !DILocation(line: 2355, column: 29, scope: !10285)
!10285 = distinct !DILexicalBlock(scope: !10282, file: !3, line: 2354, column: 17)
!10286 = !DILocation(line: 2355, column: 3, scope: !10285)
!10287 = !DILocation(line: 2355, column: 14, scope: !10285)
!10288 = !DILocation(line: 2355, column: 27, scope: !10285)
!10289 = !DILocation(line: 2356, column: 2, scope: !10285)
!10290 = !DILocation(line: 2358, column: 9, scope: !10225)
!10291 = !DILocation(line: 2358, column: 2, scope: !10225)
!10292 = distinct !DISubprogram(name: "wm_open_mainfile_ui", scope: !3, file: !3, line: 2361, type: !4165, scopeLine: 2362, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!10293 = !DILocalVariable(name: "UNUSED_C", arg: 1, scope: !10292, file: !3, line: 2361, type: !1414)
!10294 = !DILocation(line: 2361, column: 43, scope: !10292)
!10295 = !DILocalVariable(name: "op", arg: 2, scope: !10292, file: !3, line: 2361, type: !2965)
!10296 = !DILocation(line: 2361, column: 66, scope: !10292)
!10297 = !DILocalVariable(name: "file_info", scope: !10292, file: !3, line: 2363, type: !3218)
!10298 = !DILocation(line: 2363, column: 22, scope: !10292)
!10299 = !DILocation(line: 2363, column: 57, scope: !10292)
!10300 = !DILocation(line: 2363, column: 61, scope: !10292)
!10301 = !DILocation(line: 2363, column: 34, scope: !10292)
!10302 = !DILocalVariable(name: "layout", scope: !10292, file: !3, line: 2364, type: !5529)
!10303 = !DILocation(line: 2364, column: 12, scope: !10292)
!10304 = !DILocation(line: 2364, column: 21, scope: !10292)
!10305 = !DILocation(line: 2364, column: 25, scope: !10292)
!10306 = !DILocalVariable(name: "col", scope: !10292, file: !3, line: 2365, type: !5529)
!10307 = !DILocation(line: 2365, column: 12, scope: !10292)
!10308 = !DILocation(line: 2365, column: 18, scope: !10292)
!10309 = !DILocation(line: 2365, column: 22, scope: !10292)
!10310 = !DILocalVariable(name: "autoexec_text", scope: !10292, file: !3, line: 2366, type: !2979)
!10311 = !DILocation(line: 2366, column: 14, scope: !10292)
!10312 = !DILocation(line: 2368, column: 10, scope: !10292)
!10313 = !DILocation(line: 2368, column: 18, scope: !10292)
!10314 = !DILocation(line: 2368, column: 22, scope: !10292)
!10315 = !DILocation(line: 2368, column: 2, scope: !10292)
!10316 = !DILocation(line: 2370, column: 23, scope: !10292)
!10317 = !DILocation(line: 2370, column: 8, scope: !10292)
!10318 = !DILocation(line: 2370, column: 6, scope: !10292)
!10319 = !DILocation(line: 2371, column: 6, scope: !10320)
!10320 = distinct !DILexicalBlock(scope: !10292, file: !3, line: 2371, column: 6)
!10321 = !DILocation(line: 2371, column: 17, scope: !10320)
!10322 = !DILocation(line: 2371, column: 6, scope: !10292)
!10323 = !DILocation(line: 2372, column: 17, scope: !10324)
!10324 = distinct !DILexicalBlock(scope: !10320, file: !3, line: 2371, column: 31)
!10325 = !DILocation(line: 2373, column: 21, scope: !10324)
!10326 = !DILocation(line: 2373, column: 3, scope: !10324)
!10327 = !DILocation(line: 2374, column: 22, scope: !10324)
!10328 = !DILocation(line: 2374, column: 3, scope: !10324)
!10329 = !DILocation(line: 2375, column: 2, scope: !10324)
!10330 = !DILocation(line: 2377, column: 17, scope: !10331)
!10331 = distinct !DILexicalBlock(scope: !10320, file: !3, line: 2376, column: 7)
!10332 = !DILocation(line: 2380, column: 10, scope: !10292)
!10333 = !DILocation(line: 2380, column: 15, scope: !10292)
!10334 = !DILocation(line: 2380, column: 19, scope: !10292)
!10335 = !DILocation(line: 2380, column: 42, scope: !10292)
!10336 = !DILocation(line: 2380, column: 2, scope: !10292)
!10337 = !DILocation(line: 2381, column: 1, scope: !10292)
!10338 = distinct !DISubprogram(name: "wm_revert_mainfile_exec", scope: !3, file: !3, line: 2406, type: !3871, scopeLine: 2407, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!10339 = !DILocalVariable(name: "C", arg: 1, scope: !10338, file: !3, line: 2406, type: !1414)
!10340 = !DILocation(line: 2406, column: 46, scope: !10338)
!10341 = !DILocalVariable(name: "op", arg: 2, scope: !10338, file: !3, line: 2406, type: !2965)
!10342 = !DILocation(line: 2406, column: 61, scope: !10338)
!10343 = !DILocalVariable(name: "success", scope: !10338, file: !3, line: 2408, type: !2328)
!10344 = !DILocation(line: 2408, column: 7, scope: !10338)
!10345 = !DILocation(line: 2410, column: 27, scope: !10338)
!10346 = !DILocation(line: 2410, column: 2, scope: !10338)
!10347 = !DILocation(line: 2412, column: 22, scope: !10348)
!10348 = distinct !DILexicalBlock(scope: !10338, file: !3, line: 2412, column: 6)
!10349 = !DILocation(line: 2412, column: 26, scope: !10348)
!10350 = !DILocation(line: 2412, column: 6, scope: !10348)
!10351 = !DILocation(line: 2412, column: 6, scope: !10338)
!10352 = !DILocation(line: 2413, column: 7, scope: !10348)
!10353 = !DILocation(line: 2413, column: 3, scope: !10348)
!10354 = !DILocation(line: 2415, column: 7, scope: !10348)
!10355 = !DILocation(line: 2417, column: 32, scope: !10338)
!10356 = !DILocation(line: 2417, column: 37, scope: !10338)
!10357 = !DILocation(line: 2417, column: 43, scope: !10338)
!10358 = !DILocation(line: 2417, column: 35, scope: !10338)
!10359 = !DILocation(line: 2417, column: 49, scope: !10338)
!10360 = !DILocation(line: 2417, column: 53, scope: !10338)
!10361 = !DILocation(line: 2417, column: 66, scope: !10338)
!10362 = !DILocation(line: 2417, column: 68, scope: !10338)
!10363 = !DILocation(line: 2417, column: 62, scope: !10338)
!10364 = !DILocation(line: 2417, column: 12, scope: !10338)
!10365 = !DILocation(line: 2417, column: 10, scope: !10338)
!10366 = !DILocation(line: 2419, column: 6, scope: !10367)
!10367 = distinct !DILexicalBlock(scope: !10338, file: !3, line: 2419, column: 6)
!10368 = !DILocation(line: 2419, column: 6, scope: !10338)
!10369 = !DILocation(line: 2420, column: 3, scope: !10370)
!10370 = distinct !DILexicalBlock(scope: !10367, file: !3, line: 2419, column: 15)
!10371 = !DILocation(line: 2423, column: 3, scope: !10372)
!10372 = distinct !DILexicalBlock(scope: !10367, file: !3, line: 2422, column: 7)
!10373 = !DILocation(line: 2425, column: 1, scope: !10338)
!10374 = distinct !DISubprogram(name: "wm_revert_mainfile_poll", scope: !3, file: !3, line: 2427, type: !6184, scopeLine: 2428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!10375 = !DILocalVariable(name: "UNUSED_C", arg: 1, scope: !10374, file: !3, line: 2427, type: !1414)
!10376 = !DILocation(line: 2427, column: 46, scope: !10374)
!10377 = !DILocation(line: 2429, column: 11, scope: !10374)
!10378 = !DILocation(line: 2429, column: 9, scope: !10374)
!10379 = !DILocation(line: 2429, column: 2, scope: !10374)
!10380 = distinct !DISubprogram(name: "wm_link_append_invoke", scope: !3, file: !3, line: 2464, type: !3944, scopeLine: 2465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!10381 = !DILocalVariable(name: "C", arg: 1, scope: !10380, file: !3, line: 2464, type: !1414)
!10382 = !DILocation(line: 2464, column: 44, scope: !10380)
!10383 = !DILocalVariable(name: "op", arg: 2, scope: !10380, file: !3, line: 2464, type: !2965)
!10384 = !DILocation(line: 2464, column: 59, scope: !10380)
!10385 = !DILocalVariable(name: "UNUSED_event", arg: 3, scope: !10380, file: !3, line: 2464, type: !3946)
!10386 = !DILocation(line: 2464, column: 78, scope: !10380)
!10387 = !DILocation(line: 2466, column: 33, scope: !10388)
!10388 = distinct !DILexicalBlock(scope: !10380, file: !3, line: 2466, column: 6)
!10389 = !DILocation(line: 2466, column: 37, scope: !10388)
!10390 = !DILocation(line: 2466, column: 6, scope: !10388)
!10391 = !DILocation(line: 2466, column: 6, scope: !10380)
!10392 = !DILocation(line: 2467, column: 34, scope: !10393)
!10393 = distinct !DILexicalBlock(scope: !10388, file: !3, line: 2466, column: 55)
!10394 = !DILocation(line: 2467, column: 37, scope: !10393)
!10395 = !DILocation(line: 2467, column: 10, scope: !10393)
!10396 = !DILocation(line: 2467, column: 3, scope: !10393)
!10397 = !DILocation(line: 2471, column: 7, scope: !10398)
!10398 = distinct !DILexicalBlock(scope: !10399, file: !3, line: 2471, column: 7)
!10399 = distinct !DILexicalBlock(scope: !10388, file: !3, line: 2469, column: 7)
!10400 = !DILocation(line: 2471, column: 16, scope: !10398)
!10401 = !DILocation(line: 2471, column: 7, scope: !10399)
!10402 = !DILocation(line: 2472, column: 19, scope: !10403)
!10403 = distinct !DILexicalBlock(scope: !10398, file: !3, line: 2471, column: 25)
!10404 = !DILocation(line: 2472, column: 23, scope: !10403)
!10405 = !DILocation(line: 2472, column: 4, scope: !10403)
!10406 = !DILocation(line: 2473, column: 3, scope: !10403)
!10407 = !DILocation(line: 2474, column: 14, scope: !10408)
!10408 = distinct !DILexicalBlock(scope: !10398, file: !3, line: 2474, column: 12)
!10409 = !DILocation(line: 2474, column: 12, scope: !10408)
!10410 = !DILocation(line: 2474, column: 12, scope: !10398)
!10411 = !DILocalVariable(name: "path", scope: !10412, file: !3, line: 2475, type: !1446)
!10412 = distinct !DILexicalBlock(scope: !10408, file: !3, line: 2474, column: 29)
!10413 = !DILocation(line: 2475, column: 9, scope: !10412)
!10414 = !DILocation(line: 2476, column: 16, scope: !10412)
!10415 = !DILocation(line: 2476, column: 24, scope: !10412)
!10416 = !DILocation(line: 2476, column: 30, scope: !10412)
!10417 = !DILocation(line: 2476, column: 22, scope: !10412)
!10418 = !DILocation(line: 2476, column: 4, scope: !10412)
!10419 = !DILocation(line: 2477, column: 19, scope: !10412)
!10420 = !DILocation(line: 2477, column: 4, scope: !10412)
!10421 = !DILocation(line: 2478, column: 19, scope: !10412)
!10422 = !DILocation(line: 2478, column: 23, scope: !10412)
!10423 = !DILocation(line: 2478, column: 40, scope: !10412)
!10424 = !DILocation(line: 2478, column: 4, scope: !10412)
!10425 = !DILocation(line: 2479, column: 3, scope: !10412)
!10426 = !DILocation(line: 2480, column: 27, scope: !10399)
!10427 = !DILocation(line: 2480, column: 30, scope: !10399)
!10428 = !DILocation(line: 2480, column: 3, scope: !10399)
!10429 = !DILocation(line: 2481, column: 3, scope: !10399)
!10430 = !DILocation(line: 2483, column: 1, scope: !10380)
!10431 = distinct !DISubprogram(name: "wm_link_append_exec", scope: !3, file: !3, line: 2498, type: !3871, scopeLine: 2499, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!10432 = !DILocalVariable(name: "C", arg: 1, scope: !10431, file: !3, line: 2498, type: !1414)
!10433 = !DILocation(line: 2498, column: 42, scope: !10431)
!10434 = !DILocalVariable(name: "op", arg: 2, scope: !10431, file: !3, line: 2498, type: !2965)
!10435 = !DILocation(line: 2498, column: 57, scope: !10431)
!10436 = !DILocalVariable(name: "bmain", scope: !10431, file: !3, line: 2500, type: !10437)
!10437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10438, size: 64)
!10438 = !DIDerivedType(tag: DW_TAG_typedef, name: "Main", file: !10439, line: 104, baseType: !10440)
!10439 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_main.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!10440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Main", file: !10439, line: 53, size: 15232, elements: !10441)
!10441 = !{!10442, !10444, !10445, !10446, !10447, !10448, !10449, !10450, !10451, !10455, !10456, !10457, !10458, !10459, !10460, !10461, !10462, !10463, !10464, !10465, !10466, !10467, !10468, !10469, !10470, !10471, !10472, !10473, !10474, !10475, !10476, !10477, !10478, !10479, !10480, !10481, !10482, !10483, !10484, !10485, !10486, !10487, !10488, !10489, !10490, !10491, !10492, !10498}
!10442 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10440, file: !10439, line: 54, baseType: !10443, size: 64)
!10443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10440, size: 64)
!10444 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10440, file: !10439, line: 54, baseType: !10443, size: 64, offset: 64)
!10445 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !10440, file: !10439, line: 55, baseType: !1446, size: 8192, offset: 128)
!10446 = !DIDerivedType(tag: DW_TAG_member, name: "versionfile", scope: !10440, file: !10439, line: 56, baseType: !1460, size: 16, offset: 8320)
!10447 = !DIDerivedType(tag: DW_TAG_member, name: "subversionfile", scope: !10440, file: !10439, line: 56, baseType: !1460, size: 16, offset: 8336)
!10448 = !DIDerivedType(tag: DW_TAG_member, name: "minversionfile", scope: !10440, file: !10439, line: 57, baseType: !1460, size: 16, offset: 8352)
!10449 = !DIDerivedType(tag: DW_TAG_member, name: "minsubversionfile", scope: !10440, file: !10439, line: 57, baseType: !1460, size: 16, offset: 8368)
!10450 = !DIDerivedType(tag: DW_TAG_member, name: "build_commit_timestamp", scope: !10440, file: !10439, line: 58, baseType: !1744, size: 64, offset: 8384)
!10451 = !DIDerivedType(tag: DW_TAG_member, name: "build_hash", scope: !10440, file: !10439, line: 59, baseType: !10452, size: 128, offset: 8448)
!10452 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1447, size: 128, elements: !10453)
!10453 = !{!10454}
!10454 = !DISubrange(count: 16)
!10455 = !DIDerivedType(tag: DW_TAG_member, name: "recovered", scope: !10440, file: !10439, line: 60, baseType: !1460, size: 16, offset: 8576)
!10456 = !DIDerivedType(tag: DW_TAG_member, name: "curlib", scope: !10440, file: !10439, line: 62, baseType: !1437, size: 64, offset: 8640)
!10457 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !10440, file: !10439, line: 63, baseType: !1486, size: 128, offset: 8704)
!10458 = !DIDerivedType(tag: DW_TAG_member, name: "library", scope: !10440, file: !10439, line: 64, baseType: !1486, size: 128, offset: 8832)
!10459 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !10440, file: !10439, line: 65, baseType: !1486, size: 128, offset: 8960)
!10460 = !DIDerivedType(tag: DW_TAG_member, name: "mesh", scope: !10440, file: !10439, line: 66, baseType: !1486, size: 128, offset: 9088)
!10461 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !10440, file: !10439, line: 67, baseType: !1486, size: 128, offset: 9216)
!10462 = !DIDerivedType(tag: DW_TAG_member, name: "mball", scope: !10440, file: !10439, line: 68, baseType: !1486, size: 128, offset: 9344)
!10463 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !10440, file: !10439, line: 69, baseType: !1486, size: 128, offset: 9472)
!10464 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !10440, file: !10439, line: 70, baseType: !1486, size: 128, offset: 9600)
!10465 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !10440, file: !10439, line: 71, baseType: !1486, size: 128, offset: 9728)
!10466 = !DIDerivedType(tag: DW_TAG_member, name: "latt", scope: !10440, file: !10439, line: 72, baseType: !1486, size: 128, offset: 9856)
!10467 = !DIDerivedType(tag: DW_TAG_member, name: "lamp", scope: !10440, file: !10439, line: 73, baseType: !1486, size: 128, offset: 9984)
!10468 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !10440, file: !10439, line: 74, baseType: !1486, size: 128, offset: 10112)
!10469 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !10440, file: !10439, line: 75, baseType: !1486, size: 128, offset: 10240)
!10470 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !10440, file: !10439, line: 76, baseType: !1486, size: 128, offset: 10368)
!10471 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !10440, file: !10439, line: 77, baseType: !1486, size: 128, offset: 10496)
!10472 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !10440, file: !10439, line: 78, baseType: !1486, size: 128, offset: 10624)
!10473 = !DIDerivedType(tag: DW_TAG_member, name: "script", scope: !10440, file: !10439, line: 79, baseType: !1486, size: 128, offset: 10752)
!10474 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !10440, file: !10439, line: 80, baseType: !1486, size: 128, offset: 10880)
!10475 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !10440, file: !10439, line: 81, baseType: !1486, size: 128, offset: 11008)
!10476 = !DIDerivedType(tag: DW_TAG_member, name: "speaker", scope: !10440, file: !10439, line: 82, baseType: !1486, size: 128, offset: 11136)
!10477 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !10440, file: !10439, line: 83, baseType: !1486, size: 128, offset: 11264)
!10478 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !10440, file: !10439, line: 84, baseType: !1486, size: 128, offset: 11392)
!10479 = !DIDerivedType(tag: DW_TAG_member, name: "armature", scope: !10440, file: !10439, line: 85, baseType: !1486, size: 128, offset: 11520)
!10480 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !10440, file: !10439, line: 86, baseType: !1486, size: 128, offset: 11648)
!10481 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !10440, file: !10439, line: 87, baseType: !1486, size: 128, offset: 11776)
!10482 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !10440, file: !10439, line: 88, baseType: !1486, size: 128, offset: 11904)
!10483 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !10440, file: !10439, line: 89, baseType: !1486, size: 128, offset: 12032)
!10484 = !DIDerivedType(tag: DW_TAG_member, name: "palettes", scope: !10440, file: !10439, line: 90, baseType: !1486, size: 128, offset: 12160)
!10485 = !DIDerivedType(tag: DW_TAG_member, name: "paintcurves", scope: !10440, file: !10439, line: 91, baseType: !1486, size: 128, offset: 12288)
!10486 = !DIDerivedType(tag: DW_TAG_member, name: "wm", scope: !10440, file: !10439, line: 92, baseType: !1486, size: 128, offset: 12416)
!10487 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil", scope: !10440, file: !10439, line: 93, baseType: !1486, size: 128, offset: 12544)
!10488 = !DIDerivedType(tag: DW_TAG_member, name: "movieclip", scope: !10440, file: !10439, line: 94, baseType: !1486, size: 128, offset: 12672)
!10489 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !10440, file: !10439, line: 95, baseType: !1486, size: 128, offset: 12800)
!10490 = !DIDerivedType(tag: DW_TAG_member, name: "linestyle", scope: !10440, file: !10439, line: 96, baseType: !1486, size: 128, offset: 12928)
!10491 = !DIDerivedType(tag: DW_TAG_member, name: "id_tag_update", scope: !10440, file: !10439, line: 98, baseType: !1935, size: 2048, offset: 13056)
!10492 = !DIDerivedType(tag: DW_TAG_member, name: "eval_ctx", scope: !10440, file: !10439, line: 101, baseType: !10493, size: 64, offset: 15104)
!10493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10494, size: 64)
!10494 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EvaluationContext", file: !10495, line: 58, size: 32, elements: !10496)
!10495 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_depsgraph.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!10496 = !{!10497}
!10497 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !10494, file: !10495, line: 59, baseType: !1224, size: 32)
!10498 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !10440, file: !10439, line: 103, baseType: !10499, size: 64, offset: 15168)
!10499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10500, size: 64)
!10500 = !DICompositeType(tag: DW_TAG_structure_type, name: "MainLock", file: !10439, line: 51, flags: DIFlagFwdDecl)
!10501 = !DILocation(line: 2500, column: 8, scope: !10431)
!10502 = !DILocation(line: 2500, column: 30, scope: !10431)
!10503 = !DILocation(line: 2500, column: 16, scope: !10431)
!10504 = !DILocalVariable(name: "scene", scope: !10431, file: !3, line: 2501, type: !2963)
!10505 = !DILocation(line: 2501, column: 9, scope: !10431)
!10506 = !DILocation(line: 2501, column: 32, scope: !10431)
!10507 = !DILocation(line: 2501, column: 17, scope: !10431)
!10508 = !DILocalVariable(name: "mainl", scope: !10431, file: !3, line: 2502, type: !10437)
!10509 = !DILocation(line: 2502, column: 8, scope: !10431)
!10510 = !DILocalVariable(name: "bh", scope: !10431, file: !3, line: 2503, type: !10511)
!10511 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10512, size: 64)
!10512 = !DIDerivedType(tag: DW_TAG_typedef, name: "BlendHandle", file: !10513, line: 52, baseType: !10514)
!10513 = !DIFile(filename: "blender/source/blender/blenloader/BLO_readfile.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!10514 = !DICompositeType(tag: DW_TAG_structure_type, name: "BlendHandle", file: !10513, line: 52, flags: DIFlagFwdDecl)
!10515 = !DILocation(line: 2503, column: 15, scope: !10431)
!10516 = !DILocalVariable(name: "lib", scope: !10431, file: !3, line: 2504, type: !10517)
!10517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10518, size: 64)
!10518 = !DIDerivedType(tag: DW_TAG_typedef, name: "Library", file: !1429, line: 151, baseType: !1438)
!10519 = !DILocation(line: 2504, column: 11, scope: !10431)
!10520 = !DILocalVariable(name: "prop", scope: !10431, file: !3, line: 2505, type: !1392)
!10521 = !DILocation(line: 2505, column: 15, scope: !10431)
!10522 = !DILocalVariable(name: "name", scope: !10431, file: !3, line: 2506, type: !1446)
!10523 = !DILocation(line: 2506, column: 7, scope: !10431)
!10524 = !DILocalVariable(name: "dir", scope: !10431, file: !3, line: 2506, type: !1446)
!10525 = !DILocation(line: 2506, column: 23, scope: !10431)
!10526 = !DILocalVariable(name: "libname", scope: !10431, file: !3, line: 2506, type: !1446)
!10527 = !DILocation(line: 2506, column: 38, scope: !10431)
!10528 = !DILocalVariable(name: "group", scope: !10431, file: !3, line: 2506, type: !2792)
!10529 = !DILocation(line: 2506, column: 57, scope: !10431)
!10530 = !DILocalVariable(name: "idcode", scope: !10431, file: !3, line: 2507, type: !1224)
!10531 = !DILocation(line: 2507, column: 6, scope: !10431)
!10532 = !DILocalVariable(name: "totfiles", scope: !10431, file: !3, line: 2507, type: !1224)
!10533 = !DILocation(line: 2507, column: 14, scope: !10431)
!10534 = !DILocalVariable(name: "flag", scope: !10431, file: !3, line: 2508, type: !1460)
!10535 = !DILocation(line: 2508, column: 8, scope: !10431)
!10536 = !DILocation(line: 2510, column: 17, scope: !10431)
!10537 = !DILocation(line: 2510, column: 21, scope: !10431)
!10538 = !DILocation(line: 2510, column: 38, scope: !10431)
!10539 = !DILocation(line: 2510, column: 2, scope: !10431)
!10540 = !DILocation(line: 2511, column: 17, scope: !10431)
!10541 = !DILocation(line: 2511, column: 21, scope: !10431)
!10542 = !DILocation(line: 2511, column: 39, scope: !10431)
!10543 = !DILocation(line: 2511, column: 2, scope: !10431)
!10544 = !DILocation(line: 2514, column: 23, scope: !10545)
!10545 = distinct !DILexicalBlock(scope: !10431, file: !3, line: 2514, column: 6)
!10546 = !DILocation(line: 2514, column: 28, scope: !10545)
!10547 = !DILocation(line: 2514, column: 37, scope: !10545)
!10548 = !DILocation(line: 2514, column: 6, scope: !10545)
!10549 = !DILocation(line: 2514, column: 44, scope: !10545)
!10550 = !DILocation(line: 2514, column: 6, scope: !10431)
!10551 = !DILocation(line: 2515, column: 14, scope: !10552)
!10552 = distinct !DILexicalBlock(scope: !10545, file: !3, line: 2514, column: 50)
!10553 = !DILocation(line: 2515, column: 18, scope: !10552)
!10554 = !DILocation(line: 2515, column: 3, scope: !10552)
!10555 = !DILocation(line: 2516, column: 3, scope: !10552)
!10556 = !DILocation(line: 2518, column: 11, scope: !10557)
!10557 = distinct !DILexicalBlock(scope: !10545, file: !3, line: 2518, column: 11)
!10558 = !DILocation(line: 2518, column: 20, scope: !10557)
!10559 = !DILocation(line: 2518, column: 11, scope: !10545)
!10560 = !DILocation(line: 2519, column: 14, scope: !10561)
!10561 = distinct !DILexicalBlock(scope: !10557, file: !3, line: 2518, column: 26)
!10562 = !DILocation(line: 2519, column: 18, scope: !10561)
!10563 = !DILocation(line: 2519, column: 3, scope: !10561)
!10564 = !DILocation(line: 2520, column: 3, scope: !10561)
!10565 = !DILocation(line: 2522, column: 24, scope: !10566)
!10566 = distinct !DILexicalBlock(scope: !10557, file: !3, line: 2522, column: 11)
!10567 = !DILocation(line: 2522, column: 31, scope: !10566)
!10568 = !DILocation(line: 2522, column: 37, scope: !10566)
!10569 = !DILocation(line: 2522, column: 11, scope: !10566)
!10570 = !DILocation(line: 2522, column: 46, scope: !10566)
!10571 = !DILocation(line: 2522, column: 11, scope: !10557)
!10572 = !DILocation(line: 2523, column: 14, scope: !10573)
!10573 = distinct !DILexicalBlock(scope: !10566, file: !3, line: 2522, column: 52)
!10574 = !DILocation(line: 2523, column: 18, scope: !10573)
!10575 = !DILocation(line: 2523, column: 3, scope: !10573)
!10576 = !DILocation(line: 2524, column: 3, scope: !10573)
!10577 = !DILocation(line: 2528, column: 34, scope: !10431)
!10578 = !DILocation(line: 2528, column: 38, scope: !10431)
!10579 = !DILocation(line: 2528, column: 9, scope: !10431)
!10580 = !DILocation(line: 2528, column: 7, scope: !10431)
!10581 = !DILocation(line: 2529, column: 6, scope: !10582)
!10582 = distinct !DILexicalBlock(scope: !10431, file: !3, line: 2529, column: 6)
!10583 = !DILocation(line: 2529, column: 6, scope: !10431)
!10584 = !DILocation(line: 2530, column: 45, scope: !10585)
!10585 = distinct !DILexicalBlock(scope: !10582, file: !3, line: 2529, column: 12)
!10586 = !DILocation(line: 2530, column: 49, scope: !10585)
!10587 = !DILocation(line: 2530, column: 54, scope: !10585)
!10588 = !DILocation(line: 2530, column: 14, scope: !10585)
!10589 = !DILocation(line: 2530, column: 12, scope: !10585)
!10590 = !DILocation(line: 2531, column: 7, scope: !10591)
!10591 = distinct !DILexicalBlock(scope: !10585, file: !3, line: 2531, column: 7)
!10592 = !DILocation(line: 2531, column: 16, scope: !10591)
!10593 = !DILocation(line: 2531, column: 7, scope: !10585)
!10594 = !DILocation(line: 2532, column: 8, scope: !10595)
!10595 = distinct !DILexicalBlock(scope: !10596, file: !3, line: 2532, column: 8)
!10596 = distinct !DILexicalBlock(scope: !10591, file: !3, line: 2531, column: 22)
!10597 = !DILocation(line: 2532, column: 16, scope: !10595)
!10598 = !DILocation(line: 2532, column: 8, scope: !10596)
!10599 = !DILocation(line: 2533, column: 16, scope: !10600)
!10600 = distinct !DILexicalBlock(scope: !10595, file: !3, line: 2532, column: 25)
!10601 = !DILocation(line: 2533, column: 20, scope: !10600)
!10602 = !DILocation(line: 2533, column: 5, scope: !10600)
!10603 = !DILocation(line: 2534, column: 5, scope: !10600)
!10604 = !DILocation(line: 2536, column: 3, scope: !10596)
!10605 = !DILocation(line: 2537, column: 2, scope: !10585)
!10606 = !DILocation(line: 2538, column: 11, scope: !10607)
!10607 = distinct !DILexicalBlock(scope: !10582, file: !3, line: 2538, column: 11)
!10608 = !DILocation(line: 2538, column: 19, scope: !10607)
!10609 = !DILocation(line: 2538, column: 11, scope: !10582)
!10610 = !DILocation(line: 2539, column: 14, scope: !10611)
!10611 = distinct !DILexicalBlock(scope: !10607, file: !3, line: 2538, column: 28)
!10612 = !DILocation(line: 2539, column: 18, scope: !10611)
!10613 = !DILocation(line: 2539, column: 3, scope: !10611)
!10614 = !DILocation(line: 2540, column: 3, scope: !10611)
!10615 = !DILocation(line: 2543, column: 33, scope: !10431)
!10616 = !DILocation(line: 2543, column: 42, scope: !10431)
!10617 = !DILocation(line: 2543, column: 46, scope: !10431)
!10618 = !DILocation(line: 2543, column: 7, scope: !10431)
!10619 = !DILocation(line: 2543, column: 5, scope: !10431)
!10620 = !DILocation(line: 2545, column: 6, scope: !10621)
!10621 = distinct !DILexicalBlock(scope: !10431, file: !3, line: 2545, column: 6)
!10622 = !DILocation(line: 2545, column: 9, scope: !10621)
!10623 = !DILocation(line: 2545, column: 6, scope: !10431)
!10624 = !DILocation(line: 2548, column: 3, scope: !10625)
!10625 = distinct !DILexicalBlock(scope: !10621, file: !3, line: 2545, column: 18)
!10626 = !DILocation(line: 2554, column: 32, scope: !10431)
!10627 = !DILocation(line: 2554, column: 11, scope: !10431)
!10628 = !DILocation(line: 2554, column: 9, scope: !10431)
!10629 = !DILocation(line: 2557, column: 22, scope: !10630)
!10630 = distinct !DILexicalBlock(scope: !10431, file: !3, line: 2557, column: 6)
!10631 = !DILocation(line: 2557, column: 26, scope: !10630)
!10632 = !DILocation(line: 2557, column: 6, scope: !10630)
!10633 = !DILocation(line: 2557, column: 6, scope: !10431)
!10634 = !DILocation(line: 2558, column: 31, scope: !10630)
!10635 = !DILocation(line: 2558, column: 3, scope: !10630)
!10636 = !DILocation(line: 2561, column: 29, scope: !10431)
!10637 = !DILocation(line: 2561, column: 9, scope: !10431)
!10638 = !DILocation(line: 2561, column: 7, scope: !10431)
!10639 = !DILocation(line: 2564, column: 6, scope: !10640)
!10640 = distinct !DILexicalBlock(scope: !10431, file: !3, line: 2564, column: 6)
!10641 = !DILocation(line: 2564, column: 13, scope: !10640)
!10642 = !DILocation(line: 2564, column: 16, scope: !10640)
!10643 = !DILocation(line: 2564, column: 20, scope: !10640)
!10644 = !DILocation(line: 2564, column: 24, scope: !10640)
!10645 = !DILocation(line: 2564, column: 29, scope: !10640)
!10646 = !DILocation(line: 2564, column: 6, scope: !10431)
!10647 = !DILocation(line: 2566, column: 15, scope: !10648)
!10648 = distinct !DILexicalBlock(scope: !10640, file: !3, line: 2564, column: 53)
!10649 = !DILocation(line: 2566, column: 19, scope: !10648)
!10650 = !DILocation(line: 2566, column: 90, scope: !10648)
!10651 = !DILocation(line: 2566, column: 97, scope: !10648)
!10652 = !DILocation(line: 2566, column: 100, scope: !10648)
!10653 = !DILocation(line: 2566, column: 105, scope: !10648)
!10654 = !DILocation(line: 2566, column: 3, scope: !10648)
!10655 = !DILocation(line: 2567, column: 8, scope: !10648)
!10656 = !DILocation(line: 2568, column: 2, scope: !10648)
!10657 = !DILocation(line: 2575, column: 23, scope: !10431)
!10658 = !DILocation(line: 2575, column: 2, scope: !10431)
!10659 = !DILocation(line: 2578, column: 35, scope: !10431)
!10660 = !DILocation(line: 2578, column: 47, scope: !10431)
!10661 = !DILocation(line: 2578, column: 10, scope: !10431)
!10662 = !DILocation(line: 2578, column: 8, scope: !10431)
!10663 = !DILocation(line: 2579, column: 8, scope: !10431)
!10664 = !DILocation(line: 2579, column: 15, scope: !10431)
!10665 = !DILocation(line: 2579, column: 6, scope: !10431)
!10666 = !DILocation(line: 2582, column: 6, scope: !10667)
!10667 = distinct !DILexicalBlock(scope: !10431, file: !3, line: 2582, column: 6)
!10668 = !DILocation(line: 2582, column: 15, scope: !10667)
!10669 = !DILocation(line: 2582, column: 6, scope: !10431)
!10670 = !DILocation(line: 2583, column: 36, scope: !10671)
!10671 = distinct !DILexicalBlock(scope: !10667, file: !3, line: 2582, column: 21)
!10672 = !DILocation(line: 2583, column: 39, scope: !10671)
!10673 = !DILocation(line: 2583, column: 51, scope: !10671)
!10674 = !DILocation(line: 2583, column: 57, scope: !10671)
!10675 = !DILocation(line: 2583, column: 65, scope: !10671)
!10676 = !DILocation(line: 2583, column: 3, scope: !10671)
!10677 = !DILocation(line: 2584, column: 2, scope: !10671)
!10678 = !DILocalVariable(name: "rna_macro_iter", scope: !10679, file: !3, line: 2586, type: !4394)
!10679 = distinct !DILexicalBlock(scope: !10680, file: !3, line: 2586, column: 3)
!10680 = distinct !DILexicalBlock(scope: !10667, file: !3, line: 2585, column: 7)
!10681 = !DILocation(line: 2586, column: 3, scope: !10679)
!10682 = !DILocation(line: 2586, column: 3, scope: !10683)
!10683 = distinct !DILexicalBlock(scope: !10679, file: !3, line: 2586, column: 3)
!10684 = !DILocation(line: 2586, column: 3, scope: !10685)
!10685 = distinct !DILexicalBlock(scope: !10683, file: !3, line: 2586, column: 3)
!10686 = !DILocalVariable(name: "itemptr", scope: !10687, file: !3, line: 2586, type: !4319)
!10687 = distinct !DILexicalBlock(scope: !10685, file: !3, line: 2586, column: 3)
!10688 = !DILocation(line: 2586, column: 3, scope: !10687)
!10689 = !DILocation(line: 2588, column: 37, scope: !10690)
!10690 = distinct !DILexicalBlock(scope: !10687, file: !3, line: 2587, column: 3)
!10691 = !DILocation(line: 2588, column: 4, scope: !10690)
!10692 = !DILocation(line: 2589, column: 37, scope: !10690)
!10693 = !DILocation(line: 2589, column: 40, scope: !10690)
!10694 = !DILocation(line: 2589, column: 52, scope: !10690)
!10695 = !DILocation(line: 2589, column: 58, scope: !10690)
!10696 = !DILocation(line: 2589, column: 66, scope: !10690)
!10697 = !DILocation(line: 2589, column: 4, scope: !10690)
!10698 = !DILocation(line: 2591, column: 3, scope: !10687)
!10699 = distinct !{!10699, !10682, !10700}
!10700 = !DILocation(line: 2591, column: 3, scope: !10683)
!10701 = !DILocation(line: 2591, column: 3, scope: !10679)
!10702 = !DILocation(line: 2593, column: 25, scope: !10431)
!10703 = !DILocation(line: 2593, column: 28, scope: !10431)
!10704 = !DILocation(line: 2593, column: 40, scope: !10431)
!10705 = !DILocation(line: 2593, column: 48, scope: !10431)
!10706 = !DILocation(line: 2593, column: 2, scope: !10431)
!10707 = !DILocation(line: 2596, column: 34, scope: !10431)
!10708 = !DILocation(line: 2596, column: 2, scope: !10431)
!10709 = !DILocation(line: 2597, column: 40, scope: !10431)
!10710 = !DILocation(line: 2597, column: 2, scope: !10431)
!10711 = !DILocation(line: 2600, column: 7, scope: !10712)
!10712 = distinct !DILexicalBlock(scope: !10431, file: !3, line: 2600, column: 6)
!10713 = !DILocation(line: 2600, column: 12, scope: !10712)
!10714 = !DILocation(line: 2600, column: 25, scope: !10712)
!10715 = !DILocation(line: 2600, column: 6, scope: !10431)
!10716 = !DILocation(line: 2602, column: 26, scope: !10717)
!10717 = distinct !DILexicalBlock(scope: !10712, file: !3, line: 2600, column: 31)
!10718 = !DILocation(line: 2602, column: 33, scope: !10717)
!10719 = !DILocation(line: 2602, column: 3, scope: !10717)
!10720 = !DILocation(line: 2603, column: 2, scope: !10717)
!10721 = !DILocation(line: 2607, column: 23, scope: !10431)
!10722 = !DILocation(line: 2607, column: 2, scope: !10431)
!10723 = !DILocation(line: 2610, column: 30, scope: !10431)
!10724 = !DILocation(line: 2610, column: 37, scope: !10431)
!10725 = !DILocation(line: 2610, column: 2, scope: !10431)
!10726 = !DILocation(line: 2612, column: 24, scope: !10431)
!10727 = !DILocation(line: 2612, column: 2, scope: !10431)
!10728 = !DILocation(line: 2615, column: 21, scope: !10431)
!10729 = !DILocation(line: 2615, column: 2, scope: !10431)
!10730 = !DILocation(line: 2617, column: 24, scope: !10431)
!10731 = !DILocation(line: 2617, column: 2, scope: !10431)
!10732 = !DILocation(line: 2619, column: 2, scope: !10431)
!10733 = !DILocation(line: 2620, column: 1, scope: !10431)
!10734 = distinct !DISubprogram(name: "wm_link_append_poll", scope: !3, file: !3, line: 2448, type: !6184, scopeLine: 2449, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!10735 = !DILocalVariable(name: "C", arg: 1, scope: !10734, file: !3, line: 2448, type: !1414)
!10736 = !DILocation(line: 2448, column: 42, scope: !10734)
!10737 = !DILocation(line: 2450, column: 28, scope: !10738)
!10738 = distinct !DILexicalBlock(scope: !10734, file: !3, line: 2450, column: 6)
!10739 = !DILocation(line: 2450, column: 6, scope: !10738)
!10740 = !DILocation(line: 2450, column: 6, scope: !10734)
!10741 = !DILocation(line: 2455, column: 28, scope: !10742)
!10742 = distinct !DILexicalBlock(scope: !10743, file: !3, line: 2455, column: 7)
!10743 = distinct !DILexicalBlock(scope: !10738, file: !3, line: 2450, column: 32)
!10744 = !DILocation(line: 2455, column: 7, scope: !10742)
!10745 = !DILocation(line: 2455, column: 7, scope: !10743)
!10746 = !DILocation(line: 2456, column: 4, scope: !10742)
!10747 = !DILocation(line: 2458, column: 3, scope: !10743)
!10748 = !DILocation(line: 2461, column: 2, scope: !10734)
!10749 = !DILocation(line: 2462, column: 1, scope: !10734)
!10750 = distinct !DISubprogram(name: "wm_link_append_properties_common", scope: !3, file: !3, line: 2622, type: !6095, scopeLine: 2623, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!10751 = !DILocalVariable(name: "ot", arg: 1, scope: !10750, file: !3, line: 2622, type: !3228)
!10752 = !DILocation(line: 2622, column: 62, scope: !10750)
!10753 = !DILocalVariable(name: "is_link", arg: 2, scope: !10750, file: !3, line: 2622, type: !2328)
!10754 = !DILocation(line: 2622, column: 71, scope: !10750)
!10755 = !DILocalVariable(name: "prop", scope: !10750, file: !3, line: 2624, type: !1392)
!10756 = !DILocation(line: 2624, column: 15, scope: !10750)
!10757 = !DILocation(line: 2628, column: 25, scope: !10750)
!10758 = !DILocation(line: 2628, column: 29, scope: !10750)
!10759 = !DILocation(line: 2628, column: 43, scope: !10750)
!10760 = !DILocation(line: 2628, column: 9, scope: !10750)
!10761 = !DILocation(line: 2628, column: 7, scope: !10750)
!10762 = !DILocation(line: 2630, column: 24, scope: !10750)
!10763 = !DILocation(line: 2630, column: 2, scope: !10750)
!10764 = !DILocation(line: 2631, column: 25, scope: !10750)
!10765 = !DILocation(line: 2631, column: 29, scope: !10750)
!10766 = !DILocation(line: 2631, column: 9, scope: !10750)
!10767 = !DILocation(line: 2631, column: 7, scope: !10750)
!10768 = !DILocation(line: 2633, column: 24, scope: !10750)
!10769 = !DILocation(line: 2633, column: 2, scope: !10750)
!10770 = !DILocation(line: 2634, column: 25, scope: !10750)
!10771 = !DILocation(line: 2634, column: 29, scope: !10750)
!10772 = !DILocation(line: 2634, column: 9, scope: !10750)
!10773 = !DILocation(line: 2634, column: 7, scope: !10750)
!10774 = !DILocation(line: 2636, column: 24, scope: !10750)
!10775 = !DILocation(line: 2636, column: 2, scope: !10750)
!10776 = !DILocation(line: 2637, column: 25, scope: !10750)
!10777 = !DILocation(line: 2637, column: 29, scope: !10750)
!10778 = !DILocation(line: 2637, column: 54, scope: !10750)
!10779 = !DILocation(line: 2637, column: 9, scope: !10750)
!10780 = !DILocation(line: 2637, column: 7, scope: !10750)
!10781 = !DILocation(line: 2639, column: 24, scope: !10750)
!10782 = !DILocation(line: 2639, column: 2, scope: !10750)
!10783 = !DILocation(line: 2640, column: 1, scope: !10750)
!10784 = distinct !DISubprogram(name: "wm_link_append_flag", scope: !3, file: !3, line: 2485, type: !10785, scopeLine: 2486, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!10785 = !DISubroutineType(types: !10786)
!10786 = !{!1460, !2965}
!10787 = !DILocalVariable(name: "op", arg: 1, scope: !10784, file: !3, line: 2485, type: !2965)
!10788 = !DILocation(line: 2485, column: 46, scope: !10784)
!10789 = !DILocalVariable(name: "flag", scope: !10784, file: !3, line: 2487, type: !1460)
!10790 = !DILocation(line: 2487, column: 8, scope: !10784)
!10791 = !DILocation(line: 2489, column: 22, scope: !10792)
!10792 = distinct !DILexicalBlock(scope: !10784, file: !3, line: 2489, column: 6)
!10793 = !DILocation(line: 2489, column: 26, scope: !10792)
!10794 = !DILocation(line: 2489, column: 6, scope: !10792)
!10795 = !DILocation(line: 2489, column: 6, scope: !10784)
!10796 = !DILocation(line: 2489, column: 51, scope: !10792)
!10797 = !DILocation(line: 2489, column: 46, scope: !10792)
!10798 = !DILocation(line: 2490, column: 22, scope: !10799)
!10799 = distinct !DILexicalBlock(scope: !10784, file: !3, line: 2490, column: 6)
!10800 = !DILocation(line: 2490, column: 26, scope: !10799)
!10801 = !DILocation(line: 2490, column: 6, scope: !10799)
!10802 = !DILocation(line: 2490, column: 6, scope: !10784)
!10803 = !DILocation(line: 2490, column: 53, scope: !10799)
!10804 = !DILocation(line: 2490, column: 48, scope: !10799)
!10805 = !DILocation(line: 2491, column: 31, scope: !10806)
!10806 = distinct !DILexicalBlock(scope: !10784, file: !3, line: 2491, column: 6)
!10807 = !DILocation(line: 2491, column: 35, scope: !10806)
!10808 = !DILocation(line: 2491, column: 6, scope: !10806)
!10809 = !DILocation(line: 2491, column: 57, scope: !10806)
!10810 = !DILocation(line: 2491, column: 76, scope: !10806)
!10811 = !DILocation(line: 2491, column: 80, scope: !10806)
!10812 = !DILocation(line: 2491, column: 60, scope: !10806)
!10813 = !DILocation(line: 2491, column: 6, scope: !10784)
!10814 = !DILocation(line: 2491, column: 108, scope: !10806)
!10815 = !DILocation(line: 2491, column: 103, scope: !10806)
!10816 = !DILocation(line: 2492, column: 22, scope: !10817)
!10817 = distinct !DILexicalBlock(scope: !10784, file: !3, line: 2492, column: 6)
!10818 = !DILocation(line: 2492, column: 26, scope: !10817)
!10819 = !DILocation(line: 2492, column: 6, scope: !10817)
!10820 = !DILocation(line: 2492, column: 6, scope: !10784)
!10821 = !DILocation(line: 2492, column: 45, scope: !10817)
!10822 = !DILocation(line: 2492, column: 40, scope: !10817)
!10823 = !DILocation(line: 2493, column: 22, scope: !10824)
!10824 = distinct !DILexicalBlock(scope: !10784, file: !3, line: 2493, column: 6)
!10825 = !DILocation(line: 2493, column: 26, scope: !10824)
!10826 = !DILocation(line: 2493, column: 6, scope: !10824)
!10827 = !DILocation(line: 2493, column: 6, scope: !10784)
!10828 = !DILocation(line: 2493, column: 56, scope: !10824)
!10829 = !DILocation(line: 2493, column: 51, scope: !10824)
!10830 = !DILocation(line: 2495, column: 9, scope: !10784)
!10831 = !DILocation(line: 2495, column: 2, scope: !10784)
!10832 = distinct !DISubprogram(name: "wm_recover_last_session_exec", scope: !3, file: !3, line: 2708, type: !3871, scopeLine: 2709, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!10833 = !DILocalVariable(name: "C", arg: 1, scope: !10832, file: !3, line: 2708, type: !1414)
!10834 = !DILocation(line: 2708, column: 51, scope: !10832)
!10835 = !DILocalVariable(name: "op", arg: 2, scope: !10832, file: !3, line: 2708, type: !2965)
!10836 = !DILocation(line: 2708, column: 66, scope: !10832)
!10837 = !DILocation(line: 2710, column: 26, scope: !10832)
!10838 = !DILocation(line: 2710, column: 29, scope: !10832)
!10839 = !DILocation(line: 2710, column: 33, scope: !10832)
!10840 = !DILocation(line: 2710, column: 2, scope: !10832)
!10841 = !DILocation(line: 2711, column: 2, scope: !10832)
!10842 = distinct !DISubprogram(name: "wm_recover_auto_save_exec", scope: !3, file: !3, line: 2726, type: !3871, scopeLine: 2727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!10843 = !DILocalVariable(name: "C", arg: 1, scope: !10842, file: !3, line: 2726, type: !1414)
!10844 = !DILocation(line: 2726, column: 48, scope: !10842)
!10845 = !DILocalVariable(name: "op", arg: 2, scope: !10842, file: !3, line: 2726, type: !2965)
!10846 = !DILocation(line: 2726, column: 63, scope: !10842)
!10847 = !DILocalVariable(name: "filepath", scope: !10842, file: !3, line: 2728, type: !1446)
!10848 = !DILocation(line: 2728, column: 7, scope: !10842)
!10849 = !DILocalVariable(name: "success", scope: !10842, file: !3, line: 2729, type: !2328)
!10850 = !DILocation(line: 2729, column: 7, scope: !10842)
!10851 = !DILocation(line: 2731, column: 17, scope: !10842)
!10852 = !DILocation(line: 2731, column: 21, scope: !10842)
!10853 = !DILocation(line: 2731, column: 38, scope: !10842)
!10854 = !DILocation(line: 2731, column: 2, scope: !10842)
!10855 = !DILocation(line: 2733, column: 14, scope: !10842)
!10856 = !DILocation(line: 2735, column: 32, scope: !10842)
!10857 = !DILocation(line: 2735, column: 35, scope: !10842)
!10858 = !DILocation(line: 2735, column: 45, scope: !10842)
!10859 = !DILocation(line: 2735, column: 49, scope: !10842)
!10860 = !DILocation(line: 2735, column: 12, scope: !10842)
!10861 = !DILocation(line: 2735, column: 10, scope: !10842)
!10862 = !DILocation(line: 2737, column: 14, scope: !10842)
!10863 = !DILocation(line: 2739, column: 6, scope: !10864)
!10864 = distinct !DILexicalBlock(scope: !10842, file: !3, line: 2739, column: 6)
!10865 = !DILocation(line: 2739, column: 6, scope: !10842)
!10866 = !DILocation(line: 2740, column: 3, scope: !10867)
!10867 = distinct !DILexicalBlock(scope: !10864, file: !3, line: 2739, column: 15)
!10868 = !DILocation(line: 2743, column: 3, scope: !10869)
!10869 = distinct !DILexicalBlock(scope: !10864, file: !3, line: 2742, column: 7)
!10870 = !DILocation(line: 2745, column: 1, scope: !10842)
!10871 = distinct !DISubprogram(name: "wm_recover_auto_save_invoke", scope: !3, file: !3, line: 2747, type: !3944, scopeLine: 2748, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!10872 = !DILocalVariable(name: "C", arg: 1, scope: !10871, file: !3, line: 2747, type: !1414)
!10873 = !DILocation(line: 2747, column: 50, scope: !10871)
!10874 = !DILocalVariable(name: "op", arg: 2, scope: !10871, file: !3, line: 2747, type: !2965)
!10875 = !DILocation(line: 2747, column: 65, scope: !10871)
!10876 = !DILocalVariable(name: "UNUSED_event", arg: 3, scope: !10871, file: !3, line: 2747, type: !3946)
!10877 = !DILocation(line: 2747, column: 84, scope: !10871)
!10878 = !DILocalVariable(name: "filename", scope: !10871, file: !3, line: 2749, type: !1446)
!10879 = !DILocation(line: 2749, column: 7, scope: !10871)
!10880 = !DILocation(line: 2751, column: 23, scope: !10871)
!10881 = !DILocation(line: 2751, column: 2, scope: !10871)
!10882 = !DILocation(line: 2752, column: 17, scope: !10871)
!10883 = !DILocation(line: 2752, column: 21, scope: !10871)
!10884 = !DILocation(line: 2752, column: 38, scope: !10871)
!10885 = !DILocation(line: 2752, column: 2, scope: !10871)
!10886 = !DILocation(line: 2753, column: 26, scope: !10871)
!10887 = !DILocation(line: 2753, column: 29, scope: !10871)
!10888 = !DILocation(line: 2753, column: 2, scope: !10871)
!10889 = !DILocation(line: 2755, column: 2, scope: !10871)
!10890 = distinct !DISubprogram(name: "wm_save_as_mainfile_invoke", scope: !3, file: !3, line: 2790, type: !3944, scopeLine: 2791, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!10891 = !DILocalVariable(name: "C", arg: 1, scope: !10890, file: !3, line: 2790, type: !1414)
!10892 = !DILocation(line: 2790, column: 49, scope: !10890)
!10893 = !DILocalVariable(name: "op", arg: 2, scope: !10890, file: !3, line: 2790, type: !2965)
!10894 = !DILocation(line: 2790, column: 64, scope: !10890)
!10895 = !DILocalVariable(name: "UNUSED_event", arg: 3, scope: !10890, file: !3, line: 2790, type: !3946)
!10896 = !DILocation(line: 2790, column: 83, scope: !10890)
!10897 = !DILocalVariable(name: "name", scope: !10890, file: !3, line: 2792, type: !1446)
!10898 = !DILocation(line: 2792, column: 7, scope: !10890)
!10899 = !DILocation(line: 2794, column: 20, scope: !10890)
!10900 = !DILocation(line: 2794, column: 2, scope: !10890)
!10901 = !DILocation(line: 2797, column: 8, scope: !10902)
!10902 = distinct !DILexicalBlock(scope: !10890, file: !3, line: 2797, column: 6)
!10903 = !DILocation(line: 2797, column: 14, scope: !10902)
!10904 = !DILocation(line: 2797, column: 6, scope: !10902)
!10905 = !DILocation(line: 2797, column: 22, scope: !10902)
!10906 = !DILocation(line: 2797, column: 27, scope: !10902)
!10907 = !DILocation(line: 2797, column: 45, scope: !10902)
!10908 = !DILocation(line: 2797, column: 30, scope: !10902)
!10909 = !DILocation(line: 2797, column: 6, scope: !10890)
!10910 = !DILocalVariable(name: "recent", scope: !10911, file: !3, line: 2798, type: !10143)
!10911 = distinct !DILexicalBlock(scope: !10902, file: !3, line: 2797, column: 52)
!10912 = !DILocation(line: 2798, column: 22, scope: !10911)
!10913 = !DILocation(line: 2798, column: 46, scope: !10911)
!10914 = !DILocation(line: 2798, column: 31, scope: !10911)
!10915 = !DILocation(line: 2799, column: 15, scope: !10911)
!10916 = !DILocation(line: 2799, column: 21, scope: !10911)
!10917 = !DILocation(line: 2799, column: 29, scope: !10911)
!10918 = !DILocation(line: 2799, column: 3, scope: !10911)
!10919 = !DILocation(line: 2800, column: 2, scope: !10911)
!10920 = !DILocation(line: 2802, column: 15, scope: !10902)
!10921 = !DILocation(line: 2802, column: 23, scope: !10902)
!10922 = !DILocation(line: 2802, column: 29, scope: !10902)
!10923 = !DILocation(line: 2802, column: 21, scope: !10902)
!10924 = !DILocation(line: 2802, column: 3, scope: !10902)
!10925 = !DILocation(line: 2804, column: 22, scope: !10890)
!10926 = !DILocation(line: 2804, column: 2, scope: !10890)
!10927 = !DILocation(line: 2805, column: 17, scope: !10890)
!10928 = !DILocation(line: 2805, column: 21, scope: !10890)
!10929 = !DILocation(line: 2805, column: 38, scope: !10890)
!10930 = !DILocation(line: 2805, column: 2, scope: !10890)
!10931 = !DILocation(line: 2807, column: 26, scope: !10890)
!10932 = !DILocation(line: 2807, column: 29, scope: !10890)
!10933 = !DILocation(line: 2807, column: 2, scope: !10890)
!10934 = !DILocation(line: 2809, column: 2, scope: !10890)
!10935 = distinct !DISubprogram(name: "wm_save_as_mainfile_exec", scope: !3, file: !3, line: 2813, type: !3871, scopeLine: 2814, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!10936 = !DILocalVariable(name: "C", arg: 1, scope: !10935, file: !3, line: 2813, type: !1414)
!10937 = !DILocation(line: 2813, column: 47, scope: !10935)
!10938 = !DILocalVariable(name: "op", arg: 2, scope: !10935, file: !3, line: 2813, type: !2965)
!10939 = !DILocation(line: 2813, column: 62, scope: !10935)
!10940 = !DILocalVariable(name: "path", scope: !10935, file: !3, line: 2815, type: !1446)
!10941 = !DILocation(line: 2815, column: 7, scope: !10935)
!10942 = !DILocalVariable(name: "fileflags", scope: !10935, file: !3, line: 2816, type: !1224)
!10943 = !DILocation(line: 2816, column: 6, scope: !10935)
!10944 = !DILocation(line: 2818, column: 20, scope: !10935)
!10945 = !DILocation(line: 2818, column: 2, scope: !10935)
!10946 = !DILocation(line: 2820, column: 33, scope: !10947)
!10947 = distinct !DILexicalBlock(scope: !10935, file: !3, line: 2820, column: 6)
!10948 = !DILocation(line: 2820, column: 37, scope: !10947)
!10949 = !DILocation(line: 2820, column: 6, scope: !10947)
!10950 = !DILocation(line: 2820, column: 6, scope: !10935)
!10951 = !DILocation(line: 2821, column: 18, scope: !10952)
!10952 = distinct !DILexicalBlock(scope: !10947, file: !3, line: 2820, column: 55)
!10953 = !DILocation(line: 2821, column: 22, scope: !10952)
!10954 = !DILocation(line: 2821, column: 39, scope: !10952)
!10955 = !DILocation(line: 2821, column: 3, scope: !10952)
!10956 = !DILocation(line: 2822, column: 2, scope: !10952)
!10957 = !DILocation(line: 2824, column: 15, scope: !10958)
!10958 = distinct !DILexicalBlock(scope: !10947, file: !3, line: 2823, column: 7)
!10959 = !DILocation(line: 2824, column: 23, scope: !10958)
!10960 = !DILocation(line: 2824, column: 29, scope: !10958)
!10961 = !DILocation(line: 2824, column: 21, scope: !10958)
!10962 = !DILocation(line: 2824, column: 3, scope: !10958)
!10963 = !DILocation(line: 2825, column: 23, scope: !10958)
!10964 = !DILocation(line: 2825, column: 3, scope: !10958)
!10965 = !DILocation(line: 2828, column: 16, scope: !10935)
!10966 = !DILocation(line: 2828, column: 26, scope: !10935)
!10967 = !DILocation(line: 2828, column: 12, scope: !10935)
!10968 = !DILocation(line: 2831, column: 2, scope: !10969)
!10969 = distinct !DILexicalBlock(scope: !10970, file: !3, line: 2831, column: 2)
!10970 = distinct !DILexicalBlock(scope: !10935, file: !3, line: 2831, column: 2)
!10971 = !DILocation(line: 2831, column: 2, scope: !10970)
!10972 = !DILocation(line: 2833, column: 2, scope: !10973)
!10973 = distinct !DILexicalBlock(scope: !10974, file: !3, line: 2833, column: 2)
!10974 = distinct !DILexicalBlock(scope: !10935, file: !3, line: 2833, column: 2)
!10975 = !DILocation(line: 2833, column: 2, scope: !10974)
!10976 = !DILocation(line: 2835, column: 2, scope: !10977)
!10977 = distinct !DILexicalBlock(scope: !10978, file: !3, line: 2835, column: 2)
!10978 = distinct !DILexicalBlock(scope: !10935, file: !3, line: 2835, column: 2)
!10979 = !DILocation(line: 2835, column: 2, scope: !10978)
!10980 = !DILocation(line: 2841, column: 2, scope: !10981)
!10981 = distinct !DILexicalBlock(scope: !10982, file: !3, line: 2841, column: 2)
!10982 = distinct !DILexicalBlock(scope: !10935, file: !3, line: 2841, column: 2)
!10983 = !DILocation(line: 2841, column: 2, scope: !10982)
!10984 = !DILocation(line: 2847, column: 20, scope: !10985)
!10985 = distinct !DILexicalBlock(scope: !10935, file: !3, line: 2847, column: 6)
!10986 = !DILocation(line: 2847, column: 23, scope: !10985)
!10987 = !DILocation(line: 2847, column: 29, scope: !10985)
!10988 = !DILocation(line: 2847, column: 40, scope: !10985)
!10989 = !DILocation(line: 2847, column: 44, scope: !10985)
!10990 = !DILocation(line: 2847, column: 6, scope: !10985)
!10991 = !DILocation(line: 2847, column: 53, scope: !10985)
!10992 = !DILocation(line: 2847, column: 6, scope: !10935)
!10993 = !DILocation(line: 2848, column: 3, scope: !10985)
!10994 = !DILocation(line: 2850, column: 24, scope: !10935)
!10995 = !DILocation(line: 2850, column: 2, scope: !10935)
!10996 = !DILocation(line: 2852, column: 2, scope: !10935)
!10997 = !DILocation(line: 2853, column: 1, scope: !10935)
!10998 = distinct !DISubprogram(name: "blend_save_check", scope: !3, file: !3, line: 2856, type: !10226, scopeLine: 2857, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!10999 = !DILocalVariable(name: "UNUSED_C", arg: 1, scope: !10998, file: !3, line: 2856, type: !1414)
!11000 = !DILocation(line: 2856, column: 40, scope: !10998)
!11001 = !DILocalVariable(name: "op", arg: 2, scope: !10998, file: !3, line: 2856, type: !2965)
!11002 = !DILocation(line: 2856, column: 63, scope: !10998)
!11003 = !DILocalVariable(name: "filepath", scope: !10998, file: !3, line: 2858, type: !1446)
!11004 = !DILocation(line: 2858, column: 7, scope: !10998)
!11005 = !DILocation(line: 2859, column: 17, scope: !10998)
!11006 = !DILocation(line: 2859, column: 21, scope: !10998)
!11007 = !DILocation(line: 2859, column: 38, scope: !10998)
!11008 = !DILocation(line: 2859, column: 2, scope: !10998)
!11009 = !DILocation(line: 2860, column: 31, scope: !11010)
!11010 = distinct !DILexicalBlock(scope: !10998, file: !3, line: 2860, column: 6)
!11011 = !DILocation(line: 2860, column: 7, scope: !11010)
!11012 = !DILocation(line: 2860, column: 6, scope: !10998)
!11013 = !DILocation(line: 2863, column: 24, scope: !11014)
!11014 = distinct !DILexicalBlock(scope: !11010, file: !3, line: 2860, column: 42)
!11015 = !DILocation(line: 2863, column: 3, scope: !11014)
!11016 = !DILocation(line: 2864, column: 18, scope: !11014)
!11017 = !DILocation(line: 2864, column: 22, scope: !11014)
!11018 = !DILocation(line: 2864, column: 39, scope: !11014)
!11019 = !DILocation(line: 2864, column: 3, scope: !11014)
!11020 = !DILocation(line: 2865, column: 3, scope: !11014)
!11021 = !DILocation(line: 2867, column: 2, scope: !10998)
!11022 = !DILocation(line: 2868, column: 1, scope: !10998)
!11023 = distinct !DISubprogram(name: "save_set_compress", scope: !3, file: !3, line: 2780, type: !5262, scopeLine: 2781, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!11024 = !DILocalVariable(name: "op", arg: 1, scope: !11023, file: !3, line: 2780, type: !2965)
!11025 = !DILocation(line: 2780, column: 43, scope: !11023)
!11026 = !DILocation(line: 2782, column: 34, scope: !11027)
!11027 = distinct !DILexicalBlock(scope: !11023, file: !3, line: 2782, column: 6)
!11028 = !DILocation(line: 2782, column: 38, scope: !11027)
!11029 = !DILocation(line: 2782, column: 7, scope: !11027)
!11030 = !DILocation(line: 2782, column: 6, scope: !11023)
!11031 = !DILocation(line: 2783, column: 9, scope: !11032)
!11032 = distinct !DILexicalBlock(scope: !11033, file: !3, line: 2783, column: 7)
!11033 = distinct !DILexicalBlock(scope: !11027, file: !3, line: 2782, column: 56)
!11034 = !DILocation(line: 2783, column: 7, scope: !11032)
!11035 = !DILocation(line: 2783, column: 7, scope: !11033)
!11036 = !DILocation(line: 2784, column: 20, scope: !11032)
!11037 = !DILocation(line: 2784, column: 24, scope: !11032)
!11038 = !DILocation(line: 2784, column: 43, scope: !11032)
!11039 = !DILocation(line: 2784, column: 53, scope: !11032)
!11040 = !DILocation(line: 2784, column: 4, scope: !11032)
!11041 = !DILocation(line: 2786, column: 20, scope: !11032)
!11042 = !DILocation(line: 2786, column: 24, scope: !11032)
!11043 = !DILocation(line: 2786, column: 43, scope: !11032)
!11044 = !DILocation(line: 2786, column: 48, scope: !11032)
!11045 = !DILocation(line: 2786, column: 4, scope: !11032)
!11046 = !DILocation(line: 2787, column: 2, scope: !11033)
!11047 = !DILocation(line: 2788, column: 1, scope: !11023)
!11048 = distinct !DISubprogram(name: "wm_filepath_default", scope: !3, file: !3, line: 2773, type: !11049, scopeLine: 2774, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!11049 = !DISubroutineType(types: !11050)
!11050 = !{null, !1502}
!11051 = !DILocalVariable(name: "filepath", arg: 1, scope: !11048, file: !3, line: 2773, type: !1502)
!11052 = !DILocation(line: 2773, column: 39, scope: !11048)
!11053 = !DILocation(line: 2775, column: 8, scope: !11054)
!11054 = distinct !DILexicalBlock(scope: !11048, file: !3, line: 2775, column: 6)
!11055 = !DILocation(line: 2775, column: 6, scope: !11054)
!11056 = !DILocation(line: 2775, column: 18, scope: !11054)
!11057 = !DILocation(line: 2775, column: 6, scope: !11048)
!11058 = !DILocation(line: 2776, column: 23, scope: !11059)
!11059 = distinct !DILexicalBlock(scope: !11054, file: !3, line: 2775, column: 28)
!11060 = !DILocation(line: 2776, column: 3, scope: !11059)
!11061 = !DILocation(line: 2777, column: 2, scope: !11059)
!11062 = !DILocation(line: 2778, column: 1, scope: !11048)
!11063 = distinct !DISubprogram(name: "wm_save_mainfile_invoke", scope: !3, file: !3, line: 2900, type: !3944, scopeLine: 2901, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!11064 = !DILocalVariable(name: "C", arg: 1, scope: !11063, file: !3, line: 2900, type: !1414)
!11065 = !DILocation(line: 2900, column: 46, scope: !11063)
!11066 = !DILocalVariable(name: "op", arg: 2, scope: !11063, file: !3, line: 2900, type: !2965)
!11067 = !DILocation(line: 2900, column: 61, scope: !11063)
!11068 = !DILocalVariable(name: "UNUSED_event", arg: 3, scope: !11063, file: !3, line: 2900, type: !3946)
!11069 = !DILocation(line: 2900, column: 80, scope: !11063)
!11070 = !DILocalVariable(name: "name", scope: !11063, file: !3, line: 2902, type: !1446)
!11071 = !DILocation(line: 2902, column: 7, scope: !11063)
!11072 = !DILocalVariable(name: "ret", scope: !11063, file: !3, line: 2903, type: !1224)
!11073 = !DILocation(line: 2903, column: 6, scope: !11063)
!11074 = !DILocation(line: 2906, column: 20, scope: !11075)
!11075 = distinct !DILexicalBlock(scope: !11063, file: !3, line: 2906, column: 6)
!11076 = !DILocation(line: 2906, column: 6, scope: !11075)
!11077 = !DILocation(line: 2906, column: 23, scope: !11075)
!11078 = !DILocation(line: 2906, column: 6, scope: !11063)
!11079 = !DILocation(line: 2907, column: 3, scope: !11075)
!11080 = !DILocation(line: 2909, column: 20, scope: !11063)
!11081 = !DILocation(line: 2909, column: 2, scope: !11063)
!11082 = !DILocation(line: 2912, column: 8, scope: !11083)
!11083 = distinct !DILexicalBlock(scope: !11063, file: !3, line: 2912, column: 6)
!11084 = !DILocation(line: 2912, column: 14, scope: !11083)
!11085 = !DILocation(line: 2912, column: 6, scope: !11083)
!11086 = !DILocation(line: 2912, column: 22, scope: !11083)
!11087 = !DILocation(line: 2912, column: 27, scope: !11083)
!11088 = !DILocation(line: 2912, column: 45, scope: !11083)
!11089 = !DILocation(line: 2912, column: 30, scope: !11083)
!11090 = !DILocation(line: 2912, column: 6, scope: !11063)
!11091 = !DILocalVariable(name: "recent", scope: !11092, file: !3, line: 2913, type: !10143)
!11092 = distinct !DILexicalBlock(scope: !11083, file: !3, line: 2912, column: 52)
!11093 = !DILocation(line: 2913, column: 22, scope: !11092)
!11094 = !DILocation(line: 2913, column: 46, scope: !11092)
!11095 = !DILocation(line: 2913, column: 31, scope: !11092)
!11096 = !DILocation(line: 2914, column: 15, scope: !11092)
!11097 = !DILocation(line: 2914, column: 21, scope: !11092)
!11098 = !DILocation(line: 2914, column: 29, scope: !11092)
!11099 = !DILocation(line: 2914, column: 3, scope: !11092)
!11100 = !DILocation(line: 2915, column: 2, scope: !11092)
!11101 = !DILocation(line: 2917, column: 15, scope: !11083)
!11102 = !DILocation(line: 2917, column: 23, scope: !11083)
!11103 = !DILocation(line: 2917, column: 29, scope: !11083)
!11104 = !DILocation(line: 2917, column: 21, scope: !11083)
!11105 = !DILocation(line: 2917, column: 3, scope: !11083)
!11106 = !DILocation(line: 2919, column: 22, scope: !11063)
!11107 = !DILocation(line: 2919, column: 2, scope: !11063)
!11108 = !DILocation(line: 2921, column: 17, scope: !11063)
!11109 = !DILocation(line: 2921, column: 21, scope: !11063)
!11110 = !DILocation(line: 2921, column: 38, scope: !11063)
!11111 = !DILocation(line: 2921, column: 2, scope: !11063)
!11112 = !DILocation(line: 2925, column: 9, scope: !11113)
!11113 = distinct !DILexicalBlock(scope: !11063, file: !3, line: 2925, column: 6)
!11114 = !DILocation(line: 2925, column: 7, scope: !11113)
!11115 = !DILocation(line: 2925, column: 23, scope: !11113)
!11116 = !DILocation(line: 2925, column: 33, scope: !11113)
!11117 = !DILocation(line: 2925, column: 39, scope: !11113)
!11118 = !DILocation(line: 2925, column: 44, scope: !11113)
!11119 = !DILocation(line: 2925, column: 6, scope: !11063)
!11120 = !DILocalVariable(name: "prop", scope: !11121, file: !3, line: 2926, type: !1392)
!11121 = distinct !DILexicalBlock(scope: !11113, file: !3, line: 2925, column: 62)
!11122 = !DILocation(line: 2926, column: 16, scope: !11121)
!11123 = !DILocation(line: 2926, column: 48, scope: !11121)
!11124 = !DILocation(line: 2926, column: 52, scope: !11121)
!11125 = !DILocation(line: 2926, column: 23, scope: !11121)
!11126 = !DILocation(line: 2927, column: 28, scope: !11127)
!11127 = distinct !DILexicalBlock(scope: !11121, file: !3, line: 2927, column: 7)
!11128 = !DILocation(line: 2927, column: 32, scope: !11127)
!11129 = !DILocation(line: 2927, column: 37, scope: !11127)
!11130 = !DILocation(line: 2927, column: 8, scope: !11127)
!11131 = !DILocation(line: 2927, column: 7, scope: !11121)
!11132 = !DILocation(line: 2928, column: 29, scope: !11133)
!11133 = distinct !DILexicalBlock(scope: !11127, file: !3, line: 2927, column: 44)
!11134 = !DILocation(line: 2928, column: 33, scope: !11133)
!11135 = !DILocation(line: 2928, column: 38, scope: !11133)
!11136 = !DILocation(line: 2928, column: 4, scope: !11133)
!11137 = !DILocation(line: 2929, column: 3, scope: !11133)
!11138 = !DILocation(line: 2930, column: 2, scope: !11121)
!11139 = !DILocation(line: 2932, column: 8, scope: !11140)
!11140 = distinct !DILexicalBlock(scope: !11063, file: !3, line: 2932, column: 6)
!11141 = !DILocation(line: 2932, column: 6, scope: !11140)
!11142 = !DILocation(line: 2932, column: 6, scope: !11063)
!11143 = !DILocation(line: 2933, column: 18, scope: !11144)
!11144 = distinct !DILexicalBlock(scope: !11145, file: !3, line: 2933, column: 7)
!11145 = distinct !DILexicalBlock(scope: !11140, file: !3, line: 2932, column: 19)
!11146 = !DILocation(line: 2933, column: 7, scope: !11144)
!11147 = !DILocation(line: 2933, column: 7, scope: !11145)
!11148 = !DILocation(line: 2934, column: 41, scope: !11149)
!11149 = distinct !DILexicalBlock(scope: !11144, file: !3, line: 2933, column: 25)
!11150 = !DILocation(line: 2934, column: 44, scope: !11149)
!11151 = !DILocation(line: 2934, column: 85, scope: !11149)
!11152 = !DILocation(line: 2934, column: 10, scope: !11149)
!11153 = !DILocation(line: 2934, column: 8, scope: !11149)
!11154 = !DILocation(line: 2935, column: 3, scope: !11149)
!11155 = !DILocation(line: 2937, column: 35, scope: !11156)
!11156 = distinct !DILexicalBlock(scope: !11144, file: !3, line: 2936, column: 8)
!11157 = !DILocation(line: 2937, column: 38, scope: !11156)
!11158 = !DILocation(line: 2937, column: 10, scope: !11156)
!11159 = !DILocation(line: 2937, column: 8, scope: !11156)
!11160 = !DILocation(line: 2939, column: 2, scope: !11145)
!11161 = !DILocation(line: 2941, column: 27, scope: !11162)
!11162 = distinct !DILexicalBlock(scope: !11140, file: !3, line: 2940, column: 7)
!11163 = !DILocation(line: 2941, column: 30, scope: !11162)
!11164 = !DILocation(line: 2941, column: 3, scope: !11162)
!11165 = !DILocation(line: 2942, column: 7, scope: !11162)
!11166 = !DILocation(line: 2945, column: 9, scope: !11063)
!11167 = !DILocation(line: 2945, column: 2, scope: !11063)
!11168 = !DILocation(line: 2946, column: 1, scope: !11063)
!11169 = distinct !DISubprogram(name: "redraw_timer_exec", scope: !3, file: !3, line: 4395, type: !3871, scopeLine: 4396, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!11170 = !DILocalVariable(name: "C", arg: 1, scope: !11169, file: !3, line: 4395, type: !1414)
!11171 = !DILocation(line: 4395, column: 40, scope: !11169)
!11172 = !DILocalVariable(name: "op", arg: 2, scope: !11169, file: !3, line: 4395, type: !2965)
!11173 = !DILocation(line: 4395, column: 55, scope: !11169)
!11174 = !DILocalVariable(name: "ar", scope: !11169, file: !3, line: 4397, type: !3259)
!11175 = !DILocation(line: 4397, column: 11, scope: !11169)
!11176 = !DILocation(line: 4397, column: 30, scope: !11169)
!11177 = !DILocation(line: 4397, column: 16, scope: !11169)
!11178 = !DILocalVariable(name: "stime", scope: !11169, file: !3, line: 4398, type: !3016)
!11179 = !DILocation(line: 4398, column: 9, scope: !11169)
!11180 = !DILocation(line: 4398, column: 17, scope: !11169)
!11181 = !DILocalVariable(name: "type", scope: !11169, file: !3, line: 4399, type: !1224)
!11182 = !DILocation(line: 4399, column: 6, scope: !11169)
!11183 = !DILocation(line: 4399, column: 26, scope: !11169)
!11184 = !DILocation(line: 4399, column: 30, scope: !11169)
!11185 = !DILocation(line: 4399, column: 13, scope: !11169)
!11186 = !DILocalVariable(name: "iter", scope: !11169, file: !3, line: 4400, type: !1224)
!11187 = !DILocation(line: 4400, column: 6, scope: !11169)
!11188 = !DILocation(line: 4400, column: 25, scope: !11169)
!11189 = !DILocation(line: 4400, column: 29, scope: !11169)
!11190 = !DILocation(line: 4400, column: 13, scope: !11169)
!11191 = !DILocalVariable(name: "a", scope: !11169, file: !3, line: 4401, type: !1224)
!11192 = !DILocation(line: 4401, column: 6, scope: !11169)
!11193 = !DILocalVariable(name: "time", scope: !11169, file: !3, line: 4402, type: !1537)
!11194 = !DILocation(line: 4402, column: 8, scope: !11169)
!11195 = !DILocalVariable(name: "infostr", scope: !11169, file: !3, line: 4403, type: !2979)
!11196 = !DILocation(line: 4403, column: 14, scope: !11169)
!11197 = !DILocation(line: 4405, column: 2, scope: !11169)
!11198 = !DILocation(line: 4407, column: 9, scope: !11199)
!11199 = distinct !DILexicalBlock(scope: !11169, file: !3, line: 4407, column: 2)
!11200 = !DILocation(line: 4407, column: 7, scope: !11199)
!11201 = !DILocation(line: 4407, column: 14, scope: !11202)
!11202 = distinct !DILexicalBlock(scope: !11199, file: !3, line: 4407, column: 2)
!11203 = !DILocation(line: 4407, column: 18, scope: !11202)
!11204 = !DILocation(line: 4407, column: 16, scope: !11202)
!11205 = !DILocation(line: 4407, column: 2, scope: !11199)
!11206 = !DILocation(line: 4408, column: 7, scope: !11207)
!11207 = distinct !DILexicalBlock(scope: !11208, file: !3, line: 4408, column: 7)
!11208 = distinct !DILexicalBlock(scope: !11202, file: !3, line: 4407, column: 29)
!11209 = !DILocation(line: 4408, column: 12, scope: !11207)
!11210 = !DILocation(line: 4408, column: 7, scope: !11208)
!11211 = !DILocation(line: 4409, column: 8, scope: !11212)
!11212 = distinct !DILexicalBlock(scope: !11213, file: !3, line: 4409, column: 8)
!11213 = distinct !DILexicalBlock(scope: !11207, file: !3, line: 4408, column: 18)
!11214 = !DILocation(line: 4409, column: 8, scope: !11213)
!11215 = !DILocation(line: 4410, column: 23, scope: !11212)
!11216 = !DILocation(line: 4410, column: 26, scope: !11212)
!11217 = !DILocation(line: 4410, column: 5, scope: !11212)
!11218 = !DILocation(line: 4411, column: 3, scope: !11213)
!11219 = !DILocation(line: 4412, column: 12, scope: !11220)
!11220 = distinct !DILexicalBlock(scope: !11207, file: !3, line: 4412, column: 12)
!11221 = !DILocation(line: 4412, column: 17, scope: !11220)
!11222 = !DILocation(line: 4412, column: 12, scope: !11207)
!11223 = !DILocalVariable(name: "win", scope: !11224, file: !3, line: 4413, type: !4033)
!11224 = distinct !DILexicalBlock(scope: !11220, file: !3, line: 4412, column: 23)
!11225 = !DILocation(line: 4413, column: 14, scope: !11224)
!11226 = !DILocation(line: 4413, column: 34, scope: !11224)
!11227 = !DILocation(line: 4413, column: 20, scope: !11224)
!11228 = !DILocation(line: 4414, column: 20, scope: !11224)
!11229 = !DILocation(line: 4414, column: 4, scope: !11224)
!11230 = !DILocation(line: 4416, column: 25, scope: !11224)
!11231 = !DILocation(line: 4416, column: 4, scope: !11224)
!11232 = !DILocation(line: 4417, column: 19, scope: !11224)
!11233 = !DILocation(line: 4417, column: 4, scope: !11224)
!11234 = !DILocation(line: 4419, column: 22, scope: !11224)
!11235 = !DILocation(line: 4419, column: 25, scope: !11224)
!11236 = !DILocation(line: 4419, column: 4, scope: !11224)
!11237 = !DILocation(line: 4420, column: 3, scope: !11224)
!11238 = !DILocation(line: 4421, column: 12, scope: !11239)
!11239 = distinct !DILexicalBlock(scope: !11220, file: !3, line: 4421, column: 12)
!11240 = !DILocation(line: 4421, column: 17, scope: !11239)
!11241 = !DILocation(line: 4421, column: 12, scope: !11220)
!11242 = !DILocalVariable(name: "win", scope: !11243, file: !3, line: 4422, type: !4033)
!11243 = distinct !DILexicalBlock(scope: !11239, file: !3, line: 4421, column: 23)
!11244 = !DILocation(line: 4422, column: 14, scope: !11243)
!11245 = !DILocation(line: 4422, column: 34, scope: !11243)
!11246 = !DILocation(line: 4422, column: 20, scope: !11243)
!11247 = !DILocalVariable(name: "sa", scope: !11243, file: !3, line: 4423, type: !11248)
!11248 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11249, size: 64)
!11249 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScrArea", file: !1302, line: 228, baseType: !3375)
!11250 = !DILocation(line: 4423, column: 13, scope: !11243)
!11251 = !DILocalVariable(name: "sa_back", scope: !11243, file: !3, line: 4425, type: !11248)
!11252 = !DILocation(line: 4425, column: 13, scope: !11243)
!11253 = !DILocation(line: 4425, column: 35, scope: !11243)
!11254 = !DILocation(line: 4425, column: 23, scope: !11243)
!11255 = !DILocalVariable(name: "ar_back", scope: !11243, file: !3, line: 4426, type: !3259)
!11256 = !DILocation(line: 4426, column: 13, scope: !11243)
!11257 = !DILocation(line: 4426, column: 37, scope: !11243)
!11258 = !DILocation(line: 4426, column: 23, scope: !11243)
!11259 = !DILocation(line: 4428, column: 20, scope: !11243)
!11260 = !DILocation(line: 4428, column: 4, scope: !11243)
!11261 = !DILocation(line: 4430, column: 28, scope: !11262)
!11262 = distinct !DILexicalBlock(scope: !11243, file: !3, line: 4430, column: 4)
!11263 = !DILocation(line: 4430, column: 14, scope: !11262)
!11264 = !DILocation(line: 4430, column: 32, scope: !11262)
!11265 = !DILocation(line: 4430, column: 41, scope: !11262)
!11266 = !DILocation(line: 4430, column: 12, scope: !11262)
!11267 = !DILocation(line: 4430, column: 9, scope: !11262)
!11268 = !DILocation(line: 4430, column: 48, scope: !11269)
!11269 = distinct !DILexicalBlock(scope: !11262, file: !3, line: 4430, column: 4)
!11270 = !DILocation(line: 4430, column: 4, scope: !11262)
!11271 = !DILocalVariable(name: "ar_iter", scope: !11272, file: !3, line: 4431, type: !3259)
!11272 = distinct !DILexicalBlock(scope: !11269, file: !3, line: 4430, column: 67)
!11273 = !DILocation(line: 4431, column: 14, scope: !11272)
!11274 = !DILocation(line: 4432, column: 21, scope: !11272)
!11275 = !DILocation(line: 4432, column: 24, scope: !11272)
!11276 = !DILocation(line: 4432, column: 5, scope: !11272)
!11277 = !DILocation(line: 4434, column: 20, scope: !11278)
!11278 = distinct !DILexicalBlock(scope: !11272, file: !3, line: 4434, column: 5)
!11279 = !DILocation(line: 4434, column: 24, scope: !11278)
!11280 = !DILocation(line: 4434, column: 35, scope: !11278)
!11281 = !DILocation(line: 4434, column: 18, scope: !11278)
!11282 = !DILocation(line: 4434, column: 10, scope: !11278)
!11283 = !DILocation(line: 4434, column: 42, scope: !11284)
!11284 = distinct !DILexicalBlock(scope: !11278, file: !3, line: 4434, column: 5)
!11285 = !DILocation(line: 4434, column: 5, scope: !11278)
!11286 = !DILocation(line: 4435, column: 10, scope: !11287)
!11287 = distinct !DILexicalBlock(scope: !11288, file: !3, line: 4435, column: 10)
!11288 = distinct !DILexicalBlock(scope: !11284, file: !3, line: 4434, column: 76)
!11289 = !DILocation(line: 4435, column: 19, scope: !11287)
!11290 = !DILocation(line: 4435, column: 10, scope: !11288)
!11291 = !DILocation(line: 4436, column: 25, scope: !11292)
!11292 = distinct !DILexicalBlock(scope: !11287, file: !3, line: 4435, column: 27)
!11293 = !DILocation(line: 4436, column: 28, scope: !11292)
!11294 = !DILocation(line: 4436, column: 7, scope: !11292)
!11295 = !DILocation(line: 4437, column: 25, scope: !11292)
!11296 = !DILocation(line: 4437, column: 28, scope: !11292)
!11297 = !DILocation(line: 4437, column: 7, scope: !11292)
!11298 = !DILocation(line: 4438, column: 6, scope: !11292)
!11299 = !DILocation(line: 4439, column: 5, scope: !11288)
!11300 = !DILocation(line: 4434, column: 61, scope: !11284)
!11301 = !DILocation(line: 4434, column: 70, scope: !11284)
!11302 = !DILocation(line: 4434, column: 59, scope: !11284)
!11303 = !DILocation(line: 4434, column: 5, scope: !11284)
!11304 = distinct !{!11304, !11285, !11305}
!11305 = !DILocation(line: 4439, column: 5, scope: !11278)
!11306 = !DILocation(line: 4440, column: 4, scope: !11272)
!11307 = !DILocation(line: 4430, column: 57, scope: !11269)
!11308 = !DILocation(line: 4430, column: 61, scope: !11269)
!11309 = !DILocation(line: 4430, column: 55, scope: !11269)
!11310 = !DILocation(line: 4430, column: 4, scope: !11269)
!11311 = distinct !{!11311, !11270, !11312}
!11312 = !DILocation(line: 4440, column: 4, scope: !11262)
!11313 = !DILocation(line: 4442, column: 22, scope: !11243)
!11314 = !DILocation(line: 4442, column: 25, scope: !11243)
!11315 = !DILocation(line: 4442, column: 4, scope: !11243)
!11316 = !DILocation(line: 4444, column: 20, scope: !11243)
!11317 = !DILocation(line: 4444, column: 23, scope: !11243)
!11318 = !DILocation(line: 4444, column: 4, scope: !11243)
!11319 = !DILocation(line: 4445, column: 22, scope: !11243)
!11320 = !DILocation(line: 4445, column: 25, scope: !11243)
!11321 = !DILocation(line: 4445, column: 4, scope: !11243)
!11322 = !DILocation(line: 4446, column: 3, scope: !11243)
!11323 = !DILocation(line: 4447, column: 12, scope: !11324)
!11324 = distinct !DILexicalBlock(scope: !11239, file: !3, line: 4447, column: 12)
!11325 = !DILocation(line: 4447, column: 17, scope: !11324)
!11326 = !DILocation(line: 4447, column: 12, scope: !11239)
!11327 = !DILocation(line: 4448, column: 29, scope: !11328)
!11328 = distinct !DILexicalBlock(scope: !11324, file: !3, line: 4447, column: 23)
!11329 = !DILocation(line: 4448, column: 4, scope: !11328)
!11330 = !DILocation(line: 4449, column: 3, scope: !11328)
!11331 = !DILocation(line: 4450, column: 12, scope: !11332)
!11332 = distinct !DILexicalBlock(scope: !11324, file: !3, line: 4450, column: 12)
!11333 = !DILocation(line: 4450, column: 17, scope: !11332)
!11334 = !DILocation(line: 4450, column: 12, scope: !11324)
!11335 = !DILocalVariable(name: "bmain", scope: !11336, file: !3, line: 4451, type: !10437)
!11336 = distinct !DILexicalBlock(scope: !11332, file: !3, line: 4450, column: 23)
!11337 = !DILocation(line: 4451, column: 10, scope: !11336)
!11338 = !DILocation(line: 4451, column: 32, scope: !11336)
!11339 = !DILocation(line: 4451, column: 18, scope: !11336)
!11340 = !DILocalVariable(name: "scene", scope: !11336, file: !3, line: 4452, type: !2963)
!11341 = !DILocation(line: 4452, column: 11, scope: !11336)
!11342 = !DILocation(line: 4452, column: 34, scope: !11336)
!11343 = !DILocation(line: 4452, column: 19, scope: !11336)
!11344 = !DILocation(line: 4454, column: 8, scope: !11345)
!11345 = distinct !DILexicalBlock(scope: !11336, file: !3, line: 4454, column: 8)
!11346 = !DILocation(line: 4454, column: 10, scope: !11345)
!11347 = !DILocation(line: 4454, column: 8, scope: !11336)
!11348 = !DILocation(line: 4454, column: 15, scope: !11345)
!11349 = !DILocation(line: 4454, column: 22, scope: !11345)
!11350 = !DILocation(line: 4454, column: 24, scope: !11345)
!11351 = !DILocation(line: 4454, column: 28, scope: !11345)
!11352 = !DILocation(line: 4455, column: 9, scope: !11345)
!11353 = !DILocation(line: 4455, column: 16, scope: !11345)
!11354 = !DILocation(line: 4455, column: 18, scope: !11345)
!11355 = !DILocation(line: 4455, column: 22, scope: !11345)
!11356 = !DILocation(line: 4456, column: 34, scope: !11336)
!11357 = !DILocation(line: 4456, column: 41, scope: !11336)
!11358 = !DILocation(line: 4456, column: 51, scope: !11336)
!11359 = !DILocation(line: 4456, column: 58, scope: !11336)
!11360 = !DILocation(line: 4456, column: 65, scope: !11336)
!11361 = !DILocation(line: 4456, column: 72, scope: !11336)
!11362 = !DILocation(line: 4456, column: 4, scope: !11336)
!11363 = !DILocation(line: 4457, column: 3, scope: !11336)
!11364 = !DILocation(line: 4458, column: 12, scope: !11365)
!11365 = distinct !DILexicalBlock(scope: !11332, file: !3, line: 4458, column: 12)
!11366 = !DILocation(line: 4458, column: 17, scope: !11365)
!11367 = !DILocation(line: 4458, column: 12, scope: !11332)
!11368 = !DILocalVariable(name: "bmain", scope: !11369, file: !3, line: 4461, type: !10437)
!11369 = distinct !DILexicalBlock(scope: !11365, file: !3, line: 4458, column: 23)
!11370 = !DILocation(line: 4461, column: 10, scope: !11369)
!11371 = !DILocation(line: 4461, column: 32, scope: !11369)
!11372 = !DILocation(line: 4461, column: 18, scope: !11369)
!11373 = !DILocalVariable(name: "scene", scope: !11369, file: !3, line: 4462, type: !2963)
!11374 = !DILocation(line: 4462, column: 11, scope: !11369)
!11375 = !DILocation(line: 4462, column: 34, scope: !11369)
!11376 = !DILocation(line: 4462, column: 19, scope: !11369)
!11377 = !DILocalVariable(name: "tot", scope: !11369, file: !3, line: 4463, type: !1224)
!11378 = !DILocation(line: 4463, column: 8, scope: !11369)
!11379 = !DILocation(line: 4463, column: 15, scope: !11369)
!11380 = !DILocation(line: 4463, column: 22, scope: !11369)
!11381 = !DILocation(line: 4463, column: 24, scope: !11369)
!11382 = !DILocation(line: 4463, column: 31, scope: !11369)
!11383 = !DILocation(line: 4463, column: 38, scope: !11369)
!11384 = !DILocation(line: 4463, column: 40, scope: !11369)
!11385 = !DILocation(line: 4463, column: 29, scope: !11369)
!11386 = !DILocation(line: 4463, column: 46, scope: !11369)
!11387 = !DILocation(line: 4465, column: 4, scope: !11369)
!11388 = !DILocation(line: 4465, column: 14, scope: !11369)
!11389 = !DILocation(line: 4467, column: 5, scope: !11390)
!11390 = distinct !DILexicalBlock(scope: !11369, file: !3, line: 4465, column: 18)
!11391 = !DILocation(line: 4467, column: 12, scope: !11390)
!11392 = !DILocation(line: 4467, column: 14, scope: !11390)
!11393 = !DILocation(line: 4467, column: 18, scope: !11390)
!11394 = !DILocation(line: 4468, column: 9, scope: !11395)
!11395 = distinct !DILexicalBlock(scope: !11390, file: !3, line: 4468, column: 9)
!11396 = !DILocation(line: 4468, column: 16, scope: !11395)
!11397 = !DILocation(line: 4468, column: 18, scope: !11395)
!11398 = !DILocation(line: 4468, column: 25, scope: !11395)
!11399 = !DILocation(line: 4468, column: 32, scope: !11395)
!11400 = !DILocation(line: 4468, column: 34, scope: !11395)
!11401 = !DILocation(line: 4468, column: 23, scope: !11395)
!11402 = !DILocation(line: 4468, column: 9, scope: !11390)
!11403 = !DILocation(line: 4469, column: 22, scope: !11395)
!11404 = !DILocation(line: 4469, column: 29, scope: !11395)
!11405 = !DILocation(line: 4469, column: 31, scope: !11395)
!11406 = !DILocation(line: 4469, column: 6, scope: !11395)
!11407 = !DILocation(line: 4469, column: 13, scope: !11395)
!11408 = !DILocation(line: 4469, column: 15, scope: !11395)
!11409 = !DILocation(line: 4469, column: 20, scope: !11395)
!11410 = !DILocation(line: 4471, column: 35, scope: !11390)
!11411 = !DILocation(line: 4471, column: 42, scope: !11390)
!11412 = !DILocation(line: 4471, column: 52, scope: !11390)
!11413 = !DILocation(line: 4471, column: 59, scope: !11390)
!11414 = !DILocation(line: 4471, column: 66, scope: !11390)
!11415 = !DILocation(line: 4471, column: 73, scope: !11390)
!11416 = !DILocation(line: 4471, column: 5, scope: !11390)
!11417 = !DILocation(line: 4472, column: 30, scope: !11390)
!11418 = !DILocation(line: 4472, column: 5, scope: !11390)
!11419 = distinct !{!11419, !11387, !11420}
!11420 = !DILocation(line: 4473, column: 4, scope: !11369)
!11421 = !DILocation(line: 4474, column: 3, scope: !11369)
!11422 = !DILocation(line: 4476, column: 16, scope: !11423)
!11423 = distinct !DILexicalBlock(scope: !11365, file: !3, line: 4475, column: 8)
!11424 = !DILocation(line: 4476, column: 4, scope: !11423)
!11425 = !DILocation(line: 4477, column: 17, scope: !11423)
!11426 = !DILocation(line: 4477, column: 4, scope: !11423)
!11427 = !DILocation(line: 4479, column: 2, scope: !11208)
!11428 = !DILocation(line: 4407, column: 25, scope: !11202)
!11429 = !DILocation(line: 4407, column: 2, scope: !11202)
!11430 = distinct !{!11430, !11205, !11431}
!11431 = !DILocation(line: 4479, column: 2, scope: !11199)
!11432 = !DILocation(line: 4481, column: 18, scope: !11169)
!11433 = !DILocation(line: 4481, column: 46, scope: !11169)
!11434 = !DILocation(line: 4481, column: 44, scope: !11169)
!11435 = !DILocation(line: 4481, column: 53, scope: !11169)
!11436 = !DILocation(line: 4481, column: 9, scope: !11169)
!11437 = !DILocation(line: 4481, column: 7, scope: !11169)
!11438 = !DILocation(line: 4483, column: 48, scope: !11169)
!11439 = !DILocation(line: 4483, column: 2, scope: !11169)
!11440 = !DILocation(line: 4485, column: 2, scope: !11169)
!11441 = !DILocation(line: 4487, column: 14, scope: !11169)
!11442 = !DILocation(line: 4487, column: 18, scope: !11169)
!11443 = !DILocation(line: 4487, column: 76, scope: !11169)
!11444 = !DILocation(line: 4487, column: 82, scope: !11169)
!11445 = !DILocation(line: 4487, column: 91, scope: !11169)
!11446 = !DILocation(line: 4487, column: 97, scope: !11169)
!11447 = !DILocation(line: 4487, column: 104, scope: !11169)
!11448 = !DILocation(line: 4487, column: 102, scope: !11169)
!11449 = !DILocation(line: 4487, column: 2, scope: !11169)
!11450 = !DILocation(line: 4489, column: 2, scope: !11169)
!11451 = distinct !DISubprogram(name: "redraw_timer_window_swap", scope: !3, file: !3, line: 4371, type: !11452, scopeLine: 4372, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!11452 = !DISubroutineType(types: !11453)
!11453 = !{null, !1414}
!11454 = !DILocalVariable(name: "C", arg: 1, scope: !11451, file: !3, line: 4371, type: !1414)
!11455 = !DILocation(line: 4371, column: 48, scope: !11451)
!11456 = !DILocalVariable(name: "win", scope: !11451, file: !3, line: 4373, type: !4033)
!11457 = !DILocation(line: 4373, column: 12, scope: !11451)
!11458 = !DILocation(line: 4373, column: 32, scope: !11451)
!11459 = !DILocation(line: 4373, column: 18, scope: !11451)
!11460 = !DILocalVariable(name: "sa", scope: !11451, file: !3, line: 4374, type: !11248)
!11461 = !DILocation(line: 4374, column: 11, scope: !11451)
!11462 = !DILocation(line: 4375, column: 18, scope: !11451)
!11463 = !DILocation(line: 4375, column: 2, scope: !11451)
!11464 = !DILocation(line: 4377, column: 26, scope: !11465)
!11465 = distinct !DILexicalBlock(scope: !11451, file: !3, line: 4377, column: 2)
!11466 = !DILocation(line: 4377, column: 12, scope: !11465)
!11467 = !DILocation(line: 4377, column: 30, scope: !11465)
!11468 = !DILocation(line: 4377, column: 39, scope: !11465)
!11469 = !DILocation(line: 4377, column: 10, scope: !11465)
!11470 = !DILocation(line: 4377, column: 7, scope: !11465)
!11471 = !DILocation(line: 4377, column: 46, scope: !11472)
!11472 = distinct !DILexicalBlock(scope: !11465, file: !3, line: 4377, column: 2)
!11473 = !DILocation(line: 4377, column: 2, scope: !11465)
!11474 = !DILocation(line: 4378, column: 22, scope: !11472)
!11475 = !DILocation(line: 4378, column: 3, scope: !11472)
!11476 = !DILocation(line: 4377, column: 55, scope: !11472)
!11477 = !DILocation(line: 4377, column: 59, scope: !11472)
!11478 = !DILocation(line: 4377, column: 53, scope: !11472)
!11479 = !DILocation(line: 4377, column: 2, scope: !11472)
!11480 = distinct !{!11480, !11473, !11481}
!11481 = !DILocation(line: 4378, column: 24, scope: !11465)
!11482 = !DILocation(line: 4379, column: 17, scope: !11451)
!11483 = !DILocation(line: 4379, column: 2, scope: !11451)
!11484 = !DILocation(line: 4381, column: 20, scope: !11451)
!11485 = !DILocation(line: 4381, column: 23, scope: !11451)
!11486 = !DILocation(line: 4381, column: 2, scope: !11451)
!11487 = !DILocation(line: 4382, column: 1, scope: !11451)
!11488 = distinct !DISubprogram(name: "memory_statistics_exec", scope: !3, file: !3, line: 4509, type: !3871, scopeLine: 4510, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!11489 = !DILocalVariable(name: "UNUSED_C", arg: 1, scope: !11488, file: !3, line: 4509, type: !1414)
!11490 = !DILocation(line: 4509, column: 45, scope: !11488)
!11491 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !11488, file: !3, line: 4509, type: !2965)
!11492 = !DILocation(line: 4509, column: 68, scope: !11488)
!11493 = !DILocation(line: 4511, column: 2, scope: !11488)
!11494 = !DILocation(line: 4512, column: 2, scope: !11488)
!11495 = distinct !DISubprogram(name: "dependency_relations_exec", scope: !3, file: !3, line: 4526, type: !3871, scopeLine: 4527, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!11496 = !DILocalVariable(name: "C", arg: 1, scope: !11495, file: !3, line: 4526, type: !1414)
!11497 = !DILocation(line: 4526, column: 48, scope: !11495)
!11498 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !11495, file: !3, line: 4526, type: !2965)
!11499 = !DILocation(line: 4526, column: 63, scope: !11495)
!11500 = !DILocalVariable(name: "bmain", scope: !11495, file: !3, line: 4528, type: !10437)
!11501 = !DILocation(line: 4528, column: 8, scope: !11495)
!11502 = !DILocation(line: 4528, column: 30, scope: !11495)
!11503 = !DILocation(line: 4528, column: 16, scope: !11495)
!11504 = !DILocalVariable(name: "scene", scope: !11495, file: !3, line: 4529, type: !2963)
!11505 = !DILocation(line: 4529, column: 9, scope: !11495)
!11506 = !DILocation(line: 4529, column: 32, scope: !11495)
!11507 = !DILocation(line: 4529, column: 17, scope: !11495)
!11508 = !DILocalVariable(name: "ob", scope: !11495, file: !3, line: 4530, type: !1504)
!11509 = !DILocation(line: 4530, column: 10, scope: !11495)
!11510 = !DILocation(line: 4530, column: 38, scope: !11495)
!11511 = !DILocation(line: 4530, column: 15, scope: !11495)
!11512 = !DILocation(line: 4532, column: 25, scope: !11495)
!11513 = !DILocation(line: 4532, column: 32, scope: !11495)
!11514 = !DILocation(line: 4532, column: 39, scope: !11495)
!11515 = !DILocation(line: 4532, column: 2, scope: !11495)
!11516 = !DILocation(line: 4534, column: 2, scope: !11495)
!11517 = distinct !DISubprogram(name: "wm_debug_menu_invoke", scope: !3, file: !3, line: 1708, type: !3944, scopeLine: 1709, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!11518 = !DILocalVariable(name: "C", arg: 1, scope: !11517, file: !3, line: 1708, type: !1414)
!11519 = !DILocation(line: 1708, column: 43, scope: !11517)
!11520 = !DILocalVariable(name: "op", arg: 2, scope: !11517, file: !3, line: 1708, type: !2965)
!11521 = !DILocation(line: 1708, column: 58, scope: !11517)
!11522 = !DILocalVariable(name: "UNUSED_event", arg: 3, scope: !11517, file: !3, line: 1708, type: !3946)
!11523 = !DILocation(line: 1708, column: 77, scope: !11517)
!11524 = !DILocation(line: 1710, column: 14, scope: !11517)
!11525 = !DILocation(line: 1710, column: 18, scope: !11517)
!11526 = !DILocation(line: 1710, column: 40, scope: !11517)
!11527 = !DILocation(line: 1710, column: 38, scope: !11517)
!11528 = !DILocation(line: 1710, column: 2, scope: !11517)
!11529 = !DILocation(line: 1711, column: 40, scope: !11517)
!11530 = !DILocation(line: 1711, column: 43, scope: !11517)
!11531 = !DILocation(line: 1711, column: 51, scope: !11517)
!11532 = !DILocation(line: 1711, column: 49, scope: !11517)
!11533 = !DILocation(line: 1711, column: 62, scope: !11517)
!11534 = !DILocation(line: 1711, column: 9, scope: !11517)
!11535 = !DILocation(line: 1711, column: 2, scope: !11517)
!11536 = distinct !DISubprogram(name: "wm_debug_menu_exec", scope: !3, file: !3, line: 1699, type: !3871, scopeLine: 1700, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!11537 = !DILocalVariable(name: "C", arg: 1, scope: !11536, file: !3, line: 1699, type: !1414)
!11538 = !DILocation(line: 1699, column: 41, scope: !11536)
!11539 = !DILocalVariable(name: "op", arg: 2, scope: !11536, file: !3, line: 1699, type: !2965)
!11540 = !DILocation(line: 1699, column: 56, scope: !11536)
!11541 = !DILocation(line: 1701, column: 30, scope: !11536)
!11542 = !DILocation(line: 1701, column: 34, scope: !11536)
!11543 = !DILocation(line: 1701, column: 18, scope: !11536)
!11544 = !DILocation(line: 1701, column: 16, scope: !11536)
!11545 = !DILocation(line: 1702, column: 35, scope: !11536)
!11546 = !DILocation(line: 1702, column: 20, scope: !11536)
!11547 = !DILocation(line: 1702, column: 53, scope: !11536)
!11548 = !DILocation(line: 1702, column: 39, scope: !11536)
!11549 = !DILocation(line: 1702, column: 2, scope: !11536)
!11550 = !DILocation(line: 1703, column: 24, scope: !11536)
!11551 = !DILocation(line: 1703, column: 2, scope: !11536)
!11552 = !DILocation(line: 1705, column: 2, scope: !11536)
!11553 = distinct !DISubprogram(name: "wm_operator_defaults_exec", scope: !3, file: !3, line: 1728, type: !3871, scopeLine: 1729, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!11554 = !DILocalVariable(name: "C", arg: 1, scope: !11553, file: !3, line: 1728, type: !1414)
!11555 = !DILocation(line: 1728, column: 48, scope: !11553)
!11556 = !DILocalVariable(name: "op", arg: 2, scope: !11553, file: !3, line: 1728, type: !2965)
!11557 = !DILocation(line: 1728, column: 63, scope: !11553)
!11558 = !DILocalVariable(name: "ptr", scope: !11553, file: !3, line: 1730, type: !4319)
!11559 = !DILocation(line: 1730, column: 13, scope: !11553)
!11560 = !DILocation(line: 1730, column: 45, scope: !11553)
!11561 = !DILocation(line: 1730, column: 19, scope: !11553)
!11562 = !DILocation(line: 1732, column: 11, scope: !11563)
!11563 = distinct !DILexicalBlock(scope: !11553, file: !3, line: 1732, column: 6)
!11564 = !DILocation(line: 1732, column: 7, scope: !11563)
!11565 = !DILocation(line: 1732, column: 6, scope: !11553)
!11566 = !DILocation(line: 1733, column: 14, scope: !11567)
!11567 = distinct !DILexicalBlock(scope: !11563, file: !3, line: 1732, column: 17)
!11568 = !DILocation(line: 1733, column: 18, scope: !11567)
!11569 = !DILocation(line: 1733, column: 3, scope: !11567)
!11570 = !DILocation(line: 1734, column: 3, scope: !11567)
!11571 = !DILocation(line: 1737, column: 49, scope: !11553)
!11572 = !DILocation(line: 1737, column: 31, scope: !11553)
!11573 = !DILocation(line: 1737, column: 2, scope: !11553)
!11574 = !DILocation(line: 1738, column: 2, scope: !11553)
!11575 = !DILocation(line: 1739, column: 1, scope: !11553)
!11576 = distinct !DISubprogram(name: "wm_splash_invoke", scope: !3, file: !3, line: 1967, type: !3944, scopeLine: 1968, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!11577 = !DILocalVariable(name: "C", arg: 1, scope: !11576, file: !3, line: 1967, type: !1414)
!11578 = !DILocation(line: 1967, column: 39, scope: !11576)
!11579 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !11576, file: !3, line: 1967, type: !2965)
!11580 = !DILocation(line: 1967, column: 54, scope: !11576)
!11581 = !DILocalVariable(name: "UNUSED_event", arg: 3, scope: !11576, file: !3, line: 1967, type: !3946)
!11582 = !DILocation(line: 1967, column: 81, scope: !11576)
!11583 = !DILocation(line: 1969, column: 13, scope: !11576)
!11584 = !DILocation(line: 1969, column: 2, scope: !11576)
!11585 = !DILocation(line: 1971, column: 2, scope: !11576)
!11586 = distinct !DISubprogram(name: "wm_block_create_splash", scope: !3, file: !3, line: 1797, type: !3254, scopeLine: 1798, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!11587 = !DILocalVariable(name: "C", arg: 1, scope: !11586, file: !3, line: 1797, type: !1414)
!11588 = !DILocation(line: 1797, column: 50, scope: !11586)
!11589 = !DILocalVariable(name: "ar", arg: 2, scope: !11586, file: !3, line: 1797, type: !3259)
!11590 = !DILocation(line: 1797, column: 62, scope: !11586)
!11591 = !DILocalVariable(name: "UNUSED_arg", arg: 3, scope: !11586, file: !3, line: 1797, type: !1391)
!11592 = !DILocation(line: 1797, column: 72, scope: !11586)
!11593 = !DILocalVariable(name: "block", scope: !11586, file: !3, line: 1799, type: !3256)
!11594 = !DILocation(line: 1799, column: 11, scope: !11586)
!11595 = !DILocalVariable(name: "but", scope: !11586, file: !3, line: 1800, type: !5627)
!11596 = !DILocation(line: 1800, column: 9, scope: !11586)
!11597 = !DILocalVariable(name: "layout", scope: !11586, file: !3, line: 1801, type: !5529)
!11598 = !DILocation(line: 1801, column: 12, scope: !11586)
!11599 = !DILocalVariable(name: "split", scope: !11586, file: !3, line: 1801, type: !5529)
!11600 = !DILocation(line: 1801, column: 21, scope: !11586)
!11601 = !DILocalVariable(name: "col", scope: !11586, file: !3, line: 1801, type: !5529)
!11602 = !DILocation(line: 1801, column: 29, scope: !11586)
!11603 = !DILocalVariable(name: "style", scope: !11586, file: !3, line: 1802, type: !6326)
!11604 = !DILocation(line: 1802, column: 11, scope: !11586)
!11605 = !DILocation(line: 1802, column: 19, scope: !11586)
!11606 = !DILocalVariable(name: "recent", scope: !11586, file: !3, line: 1803, type: !11607)
!11607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11608, size: 64)
!11608 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !10144)
!11609 = !DILocation(line: 1803, column: 27, scope: !11586)
!11610 = !DILocalVariable(name: "i", scope: !11586, file: !3, line: 1804, type: !1224)
!11611 = !DILocation(line: 1804, column: 6, scope: !11586)
!11612 = !DILocalVariable(name: "mt", scope: !11586, file: !3, line: 1805, type: !11613)
!11613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11614, size: 64)
!11614 = !DIDerivedType(tag: DW_TAG_typedef, name: "MenuType", file: !3320, line: 256, baseType: !11615)
!11615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MenuType", file: !3320, line: 241, size: 2112, elements: !11616)
!11616 = !{!11617, !11619, !11620, !11621, !11622, !11623, !11624, !11628, !11637}
!11617 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !11615, file: !3320, line: 242, baseType: !11618, size: 64)
!11618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11615, size: 64)
!11619 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !11615, file: !3320, line: 242, baseType: !11618, size: 64, offset: 64)
!11620 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !11615, file: !3320, line: 244, baseType: !1476, size: 512, offset: 128)
!11621 = !DIDerivedType(tag: DW_TAG_member, name: "label", scope: !11615, file: !3320, line: 245, baseType: !1476, size: 512, offset: 640)
!11622 = !DIDerivedType(tag: DW_TAG_member, name: "translation_context", scope: !11615, file: !3320, line: 246, baseType: !1476, size: 512, offset: 1152)
!11623 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !11615, file: !3320, line: 247, baseType: !2979, size: 64, offset: 1664)
!11624 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !11615, file: !3320, line: 250, baseType: !11625, size: 64, offset: 1728)
!11625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11626, size: 64)
!11626 = !DISubroutineType(types: !11627)
!11627 = !{!1224, !3368, !11618}
!11628 = !DIDerivedType(tag: DW_TAG_member, name: "draw", scope: !11615, file: !3320, line: 252, baseType: !11629, size: 64, offset: 1792)
!11629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11630, size: 64)
!11630 = !DISubroutineType(types: !11631)
!11631 = !{null, !3368, !11632}
!11632 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11633, size: 64)
!11633 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Menu", file: !3320, line: 258, size: 128, elements: !11634)
!11634 = !{!11635, !11636}
!11635 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !11633, file: !3320, line: 259, baseType: !11618, size: 64)
!11636 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !11633, file: !3320, line: 260, baseType: !3212, size: 64, offset: 64)
!11637 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !11615, file: !3320, line: 255, baseType: !3070, size: 256, offset: 1856)
!11638 = !DILocation(line: 1805, column: 12, scope: !11586)
!11639 = !DILocation(line: 1805, column: 17, scope: !11586)
!11640 = !DILocalVariable(name: "url", scope: !11586, file: !3, line: 1806, type: !11641)
!11641 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1447, size: 768, elements: !11642)
!11642 = !{!11643}
!11643 = !DISubrange(count: 96)
!11644 = !DILocation(line: 1806, column: 7, scope: !11586)
!11645 = !DILocalVariable(name: "version_suffix", scope: !11586, file: !3, line: 1807, type: !2979)
!11646 = !DILocation(line: 1807, column: 14, scope: !11586)
!11647 = !DILocalVariable(name: "ibuf", scope: !11586, file: !3, line: 1817, type: !11648)
!11648 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11649, size: 64)
!11649 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImBuf", file: !11650, line: 141, baseType: !11651)
!11650 = !DIFile(filename: "blender/source/blender/imbuf/IMB_imbuf_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!11651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !11650, line: 70, size: 19840, elements: !11652)
!11652 = !{!11653, !11655, !11656, !11657, !11658, !11659, !11660, !11661, !11662, !11663, !11664, !11666, !11667, !11668, !11669, !11670, !11672, !11673, !11674, !11675, !11679, !11680, !11681, !11682, !11683, !11686, !11687, !11688, !11689, !11690, !11693, !11694, !11695, !11696, !11697, !11698, !11699, !11700, !11703, !11704, !11705}
!11653 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !11651, file: !11650, line: 71, baseType: !11654, size: 64)
!11654 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11651, size: 64)
!11655 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !11651, file: !11650, line: 71, baseType: !11654, size: 64, offset: 64)
!11656 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !11651, file: !11650, line: 74, baseType: !1224, size: 32, offset: 128)
!11657 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !11651, file: !11650, line: 74, baseType: !1224, size: 32, offset: 160)
!11658 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !11651, file: !11650, line: 79, baseType: !2328, size: 8, offset: 192)
!11659 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !11651, file: !11650, line: 80, baseType: !1224, size: 32, offset: 224)
!11660 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !11651, file: !11650, line: 83, baseType: !1224, size: 32, offset: 256)
!11661 = !DIDerivedType(tag: DW_TAG_member, name: "mall", scope: !11651, file: !11650, line: 84, baseType: !1224, size: 32, offset: 288)
!11662 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !11651, file: !11650, line: 87, baseType: !2195, size: 64, offset: 320)
!11663 = !DIDerivedType(tag: DW_TAG_member, name: "rect_float", scope: !11651, file: !11650, line: 88, baseType: !3293, size: 64, offset: 384)
!11664 = !DIDerivedType(tag: DW_TAG_member, name: "ppm", scope: !11651, file: !11650, line: 93, baseType: !11665, size: 128, offset: 448)
!11665 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3016, size: 128, elements: !1420)
!11666 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !11651, file: !11650, line: 96, baseType: !1224, size: 32, offset: 576)
!11667 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !11651, file: !11650, line: 96, baseType: !1224, size: 32, offset: 608)
!11668 = !DIDerivedType(tag: DW_TAG_member, name: "xtiles", scope: !11651, file: !11650, line: 97, baseType: !1224, size: 32, offset: 640)
!11669 = !DIDerivedType(tag: DW_TAG_member, name: "ytiles", scope: !11651, file: !11650, line: 97, baseType: !1224, size: 32, offset: 672)
!11670 = !DIDerivedType(tag: DW_TAG_member, name: "tiles", scope: !11651, file: !11650, line: 98, baseType: !11671, size: 64, offset: 704)
!11671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2195, size: 64)
!11672 = !DIDerivedType(tag: DW_TAG_member, name: "zbuf", scope: !11651, file: !11650, line: 101, baseType: !7980, size: 64, offset: 768)
!11673 = !DIDerivedType(tag: DW_TAG_member, name: "zbuf_float", scope: !11651, file: !11650, line: 102, baseType: !3293, size: 64, offset: 832)
!11674 = !DIDerivedType(tag: DW_TAG_member, name: "dither", scope: !11651, file: !11650, line: 105, baseType: !1537, size: 32, offset: 896)
!11675 = !DIDerivedType(tag: DW_TAG_member, name: "mipmap", scope: !11651, file: !11650, line: 108, baseType: !11676, size: 1280, offset: 960)
!11676 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11654, size: 1280, elements: !11677)
!11677 = !{!11678}
!11678 = !DISubrange(count: 20)
!11679 = !DIDerivedType(tag: DW_TAG_member, name: "miptot", scope: !11651, file: !11650, line: 109, baseType: !1224, size: 32, offset: 2240)
!11680 = !DIDerivedType(tag: DW_TAG_member, name: "miplevel", scope: !11651, file: !11650, line: 109, baseType: !1224, size: 32, offset: 2272)
!11681 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !11651, file: !11650, line: 112, baseType: !1224, size: 32, offset: 2304)
!11682 = !DIDerivedType(tag: DW_TAG_member, name: "userflags", scope: !11651, file: !11650, line: 113, baseType: !1224, size: 32, offset: 2336)
!11683 = !DIDerivedType(tag: DW_TAG_member, name: "metadata", scope: !11651, file: !11650, line: 114, baseType: !11684, size: 64, offset: 2368)
!11684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11685, size: 64)
!11685 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImMetaData", file: !11650, line: 50, flags: DIFlagFwdDecl)
!11686 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !11651, file: !11650, line: 115, baseType: !1391, size: 64, offset: 2432)
!11687 = !DIDerivedType(tag: DW_TAG_member, name: "ftype", scope: !11651, file: !11650, line: 118, baseType: !1224, size: 32, offset: 2496)
!11688 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11651, file: !11650, line: 119, baseType: !1446, size: 8192, offset: 2528)
!11689 = !DIDerivedType(tag: DW_TAG_member, name: "cachename", scope: !11651, file: !11650, line: 120, baseType: !1446, size: 8192, offset: 10720)
!11690 = !DIDerivedType(tag: DW_TAG_member, name: "c_handle", scope: !11651, file: !11650, line: 123, baseType: !11691, size: 64, offset: 18944)
!11691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11692, size: 64)
!11692 = !DICompositeType(tag: DW_TAG_structure_type, name: "MEM_CacheLimiterHandle_s", file: !11650, line: 123, flags: DIFlagFwdDecl)
!11693 = !DIDerivedType(tag: DW_TAG_member, name: "refcounter", scope: !11651, file: !11650, line: 124, baseType: !1224, size: 32, offset: 19008)
!11694 = !DIDerivedType(tag: DW_TAG_member, name: "encodedbuffer", scope: !11651, file: !11650, line: 127, baseType: !9477, size: 64, offset: 19072)
!11695 = !DIDerivedType(tag: DW_TAG_member, name: "encodedsize", scope: !11651, file: !11650, line: 128, baseType: !7, size: 32, offset: 19136)
!11696 = !DIDerivedType(tag: DW_TAG_member, name: "encodedbuffersize", scope: !11651, file: !11650, line: 129, baseType: !7, size: 32, offset: 19168)
!11697 = !DIDerivedType(tag: DW_TAG_member, name: "rect_colorspace", scope: !11651, file: !11650, line: 132, baseType: !2500, size: 64, offset: 19200)
!11698 = !DIDerivedType(tag: DW_TAG_member, name: "float_colorspace", scope: !11651, file: !11650, line: 133, baseType: !2500, size: 64, offset: 19264)
!11699 = !DIDerivedType(tag: DW_TAG_member, name: "display_buffer_flags", scope: !11651, file: !11650, line: 134, baseType: !2195, size: 64, offset: 19328)
!11700 = !DIDerivedType(tag: DW_TAG_member, name: "colormanage_cache", scope: !11651, file: !11650, line: 135, baseType: !11701, size: 64, offset: 19392)
!11701 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11702, size: 64)
!11702 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColormanageCache", file: !11650, line: 135, flags: DIFlagFwdDecl)
!11703 = !DIDerivedType(tag: DW_TAG_member, name: "colormanage_flag", scope: !11651, file: !11650, line: 136, baseType: !1224, size: 32, offset: 19456)
!11704 = !DIDerivedType(tag: DW_TAG_member, name: "invalid_rect", scope: !11651, file: !11650, line: 137, baseType: !2726, size: 128, offset: 19488)
!11705 = !DIDerivedType(tag: DW_TAG_member, name: "dds_data", scope: !11651, file: !11650, line: 140, baseType: !11706, size: 192, offset: 19648)
!11706 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DDSData", file: !11650, line: 55, size: 192, elements: !11707)
!11707 = !{!11708, !11709, !11710, !11711}
!11708 = !DIDerivedType(tag: DW_TAG_member, name: "fourcc", scope: !11706, file: !11650, line: 56, baseType: !7, size: 32)
!11709 = !DIDerivedType(tag: DW_TAG_member, name: "nummipmaps", scope: !11706, file: !11650, line: 57, baseType: !7, size: 32, offset: 32)
!11710 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !11706, file: !11650, line: 58, baseType: !9477, size: 64, offset: 64)
!11711 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !11706, file: !11650, line: 59, baseType: !7, size: 32, offset: 128)
!11712 = !DILocation(line: 1817, column: 9, scope: !11586)
!11713 = !DILocation(line: 1848, column: 23, scope: !11586)
!11714 = !DILocation(line: 1848, column: 26, scope: !11586)
!11715 = !DILocation(line: 1848, column: 10, scope: !11586)
!11716 = !DILocation(line: 1848, column: 8, scope: !11586)
!11717 = !DILocation(line: 1853, column: 17, scope: !11586)
!11718 = !DILocation(line: 1853, column: 2, scope: !11586)
!11719 = !DILocation(line: 1856, column: 17, scope: !11586)
!11720 = !DILocation(line: 1856, column: 54, scope: !11586)
!11721 = !DILocation(line: 1856, column: 52, scope: !11586)
!11722 = !DILocation(line: 1856, column: 50, scope: !11586)
!11723 = !DILocation(line: 1856, column: 45, scope: !11586)
!11724 = !DILocation(line: 1856, column: 69, scope: !11586)
!11725 = !DILocation(line: 1856, column: 79, scope: !11586)
!11726 = !DILocation(line: 1856, column: 67, scope: !11586)
!11727 = !DILocation(line: 1856, column: 88, scope: !11586)
!11728 = !DILocation(line: 1856, column: 98, scope: !11586)
!11729 = !DILocation(line: 1856, column: 86, scope: !11586)
!11730 = !DILocation(line: 1856, column: 105, scope: !11586)
!11731 = !DILocation(line: 1856, column: 8, scope: !11586)
!11732 = !DILocation(line: 1856, column: 6, scope: !11586)
!11733 = !DILocation(line: 1857, column: 15, scope: !11586)
!11734 = !DILocation(line: 1857, column: 43, scope: !11586)
!11735 = !DILocation(line: 1857, column: 2, scope: !11586)
!11736 = !DILocation(line: 1858, column: 17, scope: !11586)
!11737 = !DILocation(line: 1858, column: 53, scope: !11586)
!11738 = !DILocation(line: 1858, column: 2, scope: !11586)
!11739 = !DILocation(line: 1868, column: 6, scope: !11740)
!11740 = distinct !DILexicalBlock(scope: !11586, file: !3, line: 1868, column: 6)
!11741 = !DILocation(line: 1868, column: 21, scope: !11740)
!11742 = !DILocation(line: 1868, column: 29, scope: !11740)
!11743 = !DILocation(line: 1868, column: 32, scope: !11740)
!11744 = !DILocation(line: 1868, column: 6, scope: !11586)
!11745 = !DILocalVariable(name: "x", scope: !11746, file: !3, line: 1871, type: !1224)
!11746 = distinct !DILexicalBlock(scope: !11740, file: !3, line: 1868, column: 51)
!11747 = !DILocation(line: 1871, column: 7, scope: !11746)
!11748 = !DILocation(line: 1871, column: 22, scope: !11746)
!11749 = !DILocation(line: 1871, column: 20, scope: !11746)
!11750 = !DILocation(line: 1871, column: 15, scope: !11746)
!11751 = !DILocation(line: 1871, column: 11, scope: !11746)
!11752 = !DILocalVariable(name: "y", scope: !11746, file: !3, line: 1872, type: !1224)
!11753 = !DILocation(line: 1872, column: 7, scope: !11746)
!11754 = !DILocation(line: 1872, column: 22, scope: !11746)
!11755 = !DILocation(line: 1872, column: 20, scope: !11746)
!11756 = !DILocation(line: 1872, column: 15, scope: !11746)
!11757 = !DILocation(line: 1872, column: 11, scope: !11746)
!11758 = !DILocalVariable(name: "w", scope: !11746, file: !3, line: 1873, type: !1224)
!11759 = !DILocation(line: 1873, column: 7, scope: !11746)
!11760 = !DILocation(line: 1876, column: 20, scope: !11746)
!11761 = !DILocation(line: 1876, column: 3, scope: !11746)
!11762 = !DILocation(line: 1877, column: 18, scope: !11746)
!11763 = !DILocation(line: 1877, column: 35, scope: !11746)
!11764 = !DILocation(line: 1877, column: 51, scope: !11746)
!11765 = !DILocation(line: 1877, column: 57, scope: !11746)
!11766 = !DILocation(line: 1877, column: 53, scope: !11746)
!11767 = !DILocation(line: 1877, column: 68, scope: !11746)
!11768 = !DILocation(line: 1877, column: 74, scope: !11746)
!11769 = !DILocation(line: 1877, column: 70, scope: !11746)
!11770 = !DILocation(line: 1877, column: 85, scope: !11746)
!11771 = !DILocation(line: 1877, column: 91, scope: !11746)
!11772 = !DILocation(line: 1877, column: 87, scope: !11746)
!11773 = !DILocation(line: 1877, column: 102, scope: !11746)
!11774 = !DILocation(line: 1877, column: 9, scope: !11746)
!11775 = !DILocation(line: 1877, column: 7, scope: !11746)
!11776 = !DILocation(line: 1879, column: 16, scope: !11746)
!11777 = !DILocation(line: 1879, column: 3, scope: !11746)
!11778 = !DILocation(line: 1880, column: 20, scope: !11746)
!11779 = !DILocation(line: 1880, column: 3, scope: !11746)
!11780 = !DILocation(line: 1881, column: 2, scope: !11746)
!11781 = !DILocation(line: 1899, column: 25, scope: !11586)
!11782 = !DILocation(line: 1899, column: 78, scope: !11586)
!11783 = !DILocation(line: 1899, column: 88, scope: !11586)
!11784 = !DILocation(line: 1899, column: 76, scope: !11586)
!11785 = !DILocation(line: 1899, column: 97, scope: !11586)
!11786 = !DILocation(line: 1899, column: 107, scope: !11586)
!11787 = !DILocation(line: 1899, column: 95, scope: !11586)
!11788 = !DILocation(line: 1899, column: 117, scope: !11586)
!11789 = !DILocation(line: 1899, column: 11, scope: !11586)
!11790 = !DILocation(line: 1899, column: 9, scope: !11586)
!11791 = !DILocation(line: 1901, column: 19, scope: !11586)
!11792 = !DILocation(line: 1901, column: 2, scope: !11586)
!11793 = !DILocation(line: 1903, column: 6, scope: !11794)
!11794 = distinct !DILexicalBlock(scope: !11586, file: !3, line: 1903, column: 6)
!11795 = !DILocation(line: 1903, column: 6, scope: !11586)
!11796 = !DILocalVariable(name: "menu", scope: !11797, file: !3, line: 1904, type: !11798)
!11797 = distinct !DILexicalBlock(scope: !11794, file: !3, line: 1903, column: 10)
!11798 = !DIDerivedType(tag: DW_TAG_typedef, name: "Menu", file: !3320, line: 261, baseType: !11633)
!11799 = !DILocation(line: 1904, column: 8, scope: !11797)
!11800 = !DILocation(line: 1905, column: 17, scope: !11797)
!11801 = !DILocation(line: 1905, column: 8, scope: !11797)
!11802 = !DILocation(line: 1905, column: 15, scope: !11797)
!11803 = !DILocation(line: 1906, column: 15, scope: !11797)
!11804 = !DILocation(line: 1906, column: 8, scope: !11797)
!11805 = !DILocation(line: 1906, column: 13, scope: !11797)
!11806 = !DILocation(line: 1907, column: 3, scope: !11797)
!11807 = !DILocation(line: 1907, column: 7, scope: !11797)
!11808 = !DILocation(line: 1907, column: 12, scope: !11797)
!11809 = !DILocation(line: 1911, column: 2, scope: !11797)
!11810 = !DILocation(line: 1913, column: 19, scope: !11586)
!11811 = !DILocation(line: 1913, column: 2, scope: !11586)
!11812 = !DILocation(line: 1914, column: 29, scope: !11586)
!11813 = !DILocation(line: 1914, column: 2, scope: !11586)
!11814 = !DILocation(line: 1916, column: 24, scope: !11586)
!11815 = !DILocation(line: 1916, column: 10, scope: !11586)
!11816 = !DILocation(line: 1916, column: 8, scope: !11586)
!11817 = !DILocation(line: 1917, column: 23, scope: !11586)
!11818 = !DILocation(line: 1917, column: 8, scope: !11586)
!11819 = !DILocation(line: 1917, column: 6, scope: !11586)
!11820 = !DILocation(line: 1918, column: 10, scope: !11586)
!11821 = !DILocation(line: 1918, column: 2, scope: !11586)
!11822 = !DILocation(line: 1919, column: 16, scope: !11586)
!11823 = !DILocation(line: 1919, column: 2, scope: !11586)
!11824 = !DILocation(line: 1921, column: 16, scope: !11586)
!11825 = !DILocation(line: 1921, column: 2, scope: !11586)
!11826 = !DILocation(line: 1923, column: 16, scope: !11586)
!11827 = !DILocation(line: 1923, column: 2, scope: !11586)
!11828 = !DILocation(line: 1925, column: 15, scope: !11586)
!11829 = !DILocation(line: 1925, column: 2, scope: !11586)
!11830 = !DILocation(line: 1927, column: 16, scope: !11586)
!11831 = !DILocation(line: 1927, column: 79, scope: !11586)
!11832 = !DILocation(line: 1927, column: 2, scope: !11586)
!11833 = !DILocation(line: 1928, column: 16, scope: !11586)
!11834 = !DILocation(line: 1928, column: 2, scope: !11586)
!11835 = !DILocation(line: 1930, column: 16, scope: !11586)
!11836 = !DILocation(line: 1930, column: 2, scope: !11586)
!11837 = !DILocation(line: 1937, column: 16, scope: !11838)
!11838 = distinct !DILexicalBlock(scope: !11839, file: !3, line: 1936, column: 7)
!11839 = distinct !DILexicalBlock(scope: !11586, file: !3, line: 1931, column: 6)
!11840 = !DILocation(line: 1937, column: 3, scope: !11838)
!11841 = !DILocation(line: 1940, column: 16, scope: !11586)
!11842 = !DILocation(line: 1940, column: 88, scope: !11586)
!11843 = !DILocation(line: 1940, column: 2, scope: !11586)
!11844 = !DILocation(line: 1941, column: 10, scope: !11586)
!11845 = !DILocation(line: 1941, column: 2, scope: !11586)
!11846 = !DILocation(line: 1943, column: 23, scope: !11586)
!11847 = !DILocation(line: 1943, column: 8, scope: !11586)
!11848 = !DILocation(line: 1943, column: 6, scope: !11586)
!11849 = !DILocation(line: 1945, column: 6, scope: !11850)
!11850 = distinct !DILexicalBlock(scope: !11586, file: !3, line: 1945, column: 6)
!11851 = !DILocation(line: 1945, column: 6, scope: !11586)
!11852 = !DILocation(line: 1946, column: 11, scope: !11853)
!11853 = distinct !DILexicalBlock(scope: !11850, file: !3, line: 1945, column: 32)
!11854 = !DILocation(line: 1946, column: 3, scope: !11853)
!11855 = !DILocation(line: 1947, column: 11, scope: !11853)
!11856 = !DILocation(line: 1947, column: 3, scope: !11853)
!11857 = !DILocation(line: 1948, column: 2, scope: !11853)
!11858 = !DILocation(line: 1950, column: 10, scope: !11586)
!11859 = !DILocation(line: 1950, column: 2, scope: !11586)
!11860 = !DILocation(line: 1951, column: 31, scope: !11861)
!11861 = distinct !DILexicalBlock(scope: !11586, file: !3, line: 1951, column: 2)
!11862 = !DILocation(line: 1951, column: 16, scope: !11861)
!11863 = !DILocation(line: 1951, column: 14, scope: !11861)
!11864 = !DILocation(line: 1951, column: 40, scope: !11861)
!11865 = !DILocation(line: 1951, column: 7, scope: !11861)
!11866 = !DILocation(line: 1951, column: 46, scope: !11867)
!11867 = distinct !DILexicalBlock(scope: !11861, file: !3, line: 1951, column: 2)
!11868 = !DILocation(line: 1951, column: 48, scope: !11867)
!11869 = !DILocation(line: 1951, column: 53, scope: !11867)
!11870 = !DILocation(line: 1951, column: 57, scope: !11867)
!11871 = !DILocation(line: 0, scope: !11867)
!11872 = !DILocation(line: 1951, column: 2, scope: !11861)
!11873 = !DILocalVariable(name: "filename", scope: !11874, file: !3, line: 1952, type: !2979)
!11874 = distinct !DILexicalBlock(scope: !11867, file: !3, line: 1951, column: 94)
!11875 = !DILocation(line: 1952, column: 15, scope: !11874)
!11876 = !DILocation(line: 1952, column: 44, scope: !11874)
!11877 = !DILocation(line: 1952, column: 52, scope: !11874)
!11878 = !DILocation(line: 1952, column: 26, scope: !11874)
!11879 = !DILocation(line: 1953, column: 17, scope: !11874)
!11880 = !DILocation(line: 1953, column: 22, scope: !11874)
!11881 = !DILocation(line: 1954, column: 41, scope: !11874)
!11882 = !DILocation(line: 1954, column: 17, scope: !11874)
!11883 = !DILocation(line: 1955, column: 52, scope: !11874)
!11884 = !DILocation(line: 1955, column: 60, scope: !11874)
!11885 = !DILocation(line: 1953, column: 3, scope: !11874)
!11886 = !DILocation(line: 1956, column: 2, scope: !11874)
!11887 = !DILocation(line: 1951, column: 75, scope: !11867)
!11888 = !DILocation(line: 1951, column: 83, scope: !11867)
!11889 = !DILocation(line: 1951, column: 73, scope: !11867)
!11890 = !DILocation(line: 1951, column: 90, scope: !11867)
!11891 = !DILocation(line: 1951, column: 2, scope: !11867)
!11892 = distinct !{!11892, !11872, !11893}
!11893 = !DILocation(line: 1956, column: 2, scope: !11861)
!11894 = !DILocation(line: 1958, column: 10, scope: !11586)
!11895 = !DILocation(line: 1958, column: 2, scope: !11586)
!11896 = !DILocation(line: 1959, column: 10, scope: !11586)
!11897 = !DILocation(line: 1959, column: 2, scope: !11586)
!11898 = !DILocation(line: 1960, column: 10, scope: !11586)
!11899 = !DILocation(line: 1960, column: 2, scope: !11586)
!11900 = !DILocation(line: 1962, column: 24, scope: !11586)
!11901 = !DILocation(line: 1962, column: 2, scope: !11586)
!11902 = !DILocation(line: 1964, column: 9, scope: !11586)
!11903 = !DILocation(line: 1964, column: 2, scope: !11586)
!11904 = distinct !DISubprogram(name: "wm_block_splash_close", scope: !3, file: !3, line: 1755, type: !9950, scopeLine: 1756, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!11905 = !DILocalVariable(name: "C", arg: 1, scope: !11904, file: !3, line: 1755, type: !1414)
!11906 = !DILocation(line: 1755, column: 45, scope: !11904)
!11907 = !DILocalVariable(name: "arg_block", arg: 2, scope: !11904, file: !3, line: 1755, type: !1391)
!11908 = !DILocation(line: 1755, column: 54, scope: !11904)
!11909 = !DILocalVariable(name: "UNUSED_arg", arg: 3, scope: !11904, file: !3, line: 1755, type: !1391)
!11910 = !DILocation(line: 1755, column: 71, scope: !11904)
!11911 = !DILocation(line: 1757, column: 18, scope: !11904)
!11912 = !DILocation(line: 1757, column: 21, scope: !11904)
!11913 = !DILocation(line: 1757, column: 2, scope: !11904)
!11914 = !DILocation(line: 1758, column: 1, scope: !11904)
!11915 = distinct !DISubprogram(name: "wm_block_splash_refreshmenu", scope: !3, file: !3, line: 1764, type: !9950, scopeLine: 1765, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!11916 = !DILocalVariable(name: "UNUSED_C", arg: 1, scope: !11915, file: !3, line: 1764, type: !1414)
!11917 = !DILocation(line: 1764, column: 51, scope: !11915)
!11918 = !DILocalVariable(name: "UNUSED_arg_block", arg: 2, scope: !11915, file: !3, line: 1764, type: !1391)
!11919 = !DILocation(line: 1764, column: 68, scope: !11915)
!11920 = !DILocalVariable(name: "UNUSED_arg", arg: 3, scope: !11915, file: !3, line: 1764, type: !1391)
!11921 = !DILocation(line: 1764, column: 93, scope: !11915)
!11922 = !DILocation(line: 1772, column: 1, scope: !11915)
!11923 = distinct !DISubprogram(name: "wm_resource_check_prev", scope: !3, file: !3, line: 1774, type: !11924, scopeLine: 1775, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!11924 = !DISubroutineType(types: !11925)
!11925 = !{!1224}
!11926 = !DILocalVariable(name: "res", scope: !11923, file: !3, line: 1777, type: !2979)
!11927 = !DILocation(line: 1777, column: 14, scope: !11923)
!11928 = !DILocation(line: 1777, column: 20, scope: !11923)
!11929 = !DILocation(line: 1789, column: 6, scope: !11930)
!11930 = distinct !DILexicalBlock(scope: !11923, file: !3, line: 1789, column: 6)
!11931 = !DILocation(line: 1789, column: 6, scope: !11923)
!11932 = !DILocation(line: 1790, column: 3, scope: !11933)
!11933 = distinct !DILexicalBlock(scope: !11930, file: !3, line: 1789, column: 11)
!11934 = !DILocation(line: 1793, column: 11, scope: !11935)
!11935 = distinct !DILexicalBlock(scope: !11930, file: !3, line: 1792, column: 7)
!11936 = !DILocation(line: 1793, column: 89, scope: !11935)
!11937 = !DILocation(line: 1793, column: 3, scope: !11935)
!11938 = !DILocation(line: 1795, column: 1, scope: !11923)
!11939 = distinct !DISubprogram(name: "wm_search_menu_invoke", scope: !3, file: !3, line: 2020, type: !3944, scopeLine: 2021, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!11940 = !DILocalVariable(name: "C", arg: 1, scope: !11939, file: !3, line: 2020, type: !1414)
!11941 = !DILocation(line: 2020, column: 44, scope: !11939)
!11942 = !DILocalVariable(name: "op", arg: 2, scope: !11939, file: !3, line: 2020, type: !2965)
!11943 = !DILocation(line: 2020, column: 59, scope: !11939)
!11944 = !DILocalVariable(name: "UNUSED_event", arg: 3, scope: !11939, file: !3, line: 2020, type: !3946)
!11945 = !DILocation(line: 2020, column: 78, scope: !11939)
!11946 = !DILocation(line: 2022, column: 13, scope: !11939)
!11947 = !DILocation(line: 2022, column: 38, scope: !11939)
!11948 = !DILocation(line: 2022, column: 2, scope: !11939)
!11949 = !DILocation(line: 2024, column: 2, scope: !11939)
!11950 = distinct !DISubprogram(name: "wm_search_menu_exec", scope: !3, file: !3, line: 2015, type: !3871, scopeLine: 2016, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!11951 = !DILocalVariable(name: "UNUSED_C", arg: 1, scope: !11950, file: !3, line: 2015, type: !1414)
!11952 = !DILocation(line: 2015, column: 42, scope: !11950)
!11953 = !DILocalVariable(name: "UNUSED_op", arg: 2, scope: !11950, file: !3, line: 2015, type: !2965)
!11954 = !DILocation(line: 2015, column: 65, scope: !11950)
!11955 = !DILocation(line: 2017, column: 2, scope: !11950)
!11956 = distinct !DISubprogram(name: "wm_search_menu_poll", scope: !3, file: !3, line: 2028, type: !6184, scopeLine: 2029, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!11957 = !DILocalVariable(name: "C", arg: 1, scope: !11956, file: !3, line: 2028, type: !1414)
!11958 = !DILocation(line: 2028, column: 42, scope: !11956)
!11959 = !DILocation(line: 2030, column: 20, scope: !11960)
!11960 = distinct !DILexicalBlock(scope: !11956, file: !3, line: 2030, column: 6)
!11961 = !DILocation(line: 2030, column: 6, scope: !11960)
!11962 = !DILocation(line: 2030, column: 23, scope: !11960)
!11963 = !DILocation(line: 2030, column: 6, scope: !11956)
!11964 = !DILocation(line: 2031, column: 3, scope: !11965)
!11965 = distinct !DILexicalBlock(scope: !11960, file: !3, line: 2030, column: 32)
!11966 = !DILocalVariable(name: "sa", scope: !11967, file: !3, line: 2034, type: !11248)
!11967 = distinct !DILexicalBlock(scope: !11960, file: !3, line: 2033, column: 7)
!11968 = !DILocation(line: 2034, column: 12, scope: !11967)
!11969 = !DILocation(line: 2034, column: 29, scope: !11967)
!11970 = !DILocation(line: 2034, column: 17, scope: !11967)
!11971 = !DILocation(line: 2035, column: 7, scope: !11972)
!11972 = distinct !DILexicalBlock(scope: !11967, file: !3, line: 2035, column: 7)
!11973 = !DILocation(line: 2035, column: 7, scope: !11967)
!11974 = !DILocation(line: 2036, column: 8, scope: !11975)
!11975 = distinct !DILexicalBlock(scope: !11976, file: !3, line: 2036, column: 8)
!11976 = distinct !DILexicalBlock(scope: !11972, file: !3, line: 2035, column: 11)
!11977 = !DILocation(line: 2036, column: 12, scope: !11975)
!11978 = !DILocation(line: 2036, column: 22, scope: !11975)
!11979 = !DILocation(line: 2036, column: 8, scope: !11976)
!11980 = !DILocation(line: 2036, column: 40, scope: !11975)
!11981 = !DILocation(line: 2037, column: 8, scope: !11982)
!11982 = distinct !DILexicalBlock(scope: !11976, file: !3, line: 2037, column: 8)
!11983 = !DILocation(line: 2037, column: 12, scope: !11982)
!11984 = !DILocation(line: 2037, column: 22, scope: !11982)
!11985 = !DILocation(line: 2037, column: 8, scope: !11976)
!11986 = !DILocation(line: 2037, column: 37, scope: !11982)
!11987 = !DILocation(line: 2038, column: 3, scope: !11976)
!11988 = !DILocalVariable(name: "editob", scope: !11989, file: !3, line: 2040, type: !1504)
!11989 = distinct !DILexicalBlock(scope: !11972, file: !3, line: 2039, column: 8)
!11990 = !DILocation(line: 2040, column: 12, scope: !11989)
!11991 = !DILocation(line: 2040, column: 42, scope: !11989)
!11992 = !DILocation(line: 2040, column: 21, scope: !11989)
!11993 = !DILocation(line: 2041, column: 8, scope: !11994)
!11994 = distinct !DILexicalBlock(scope: !11989, file: !3, line: 2041, column: 8)
!11995 = !DILocation(line: 2041, column: 15, scope: !11994)
!11996 = !DILocation(line: 2041, column: 18, scope: !11994)
!11997 = !DILocation(line: 2041, column: 26, scope: !11994)
!11998 = !DILocation(line: 2041, column: 31, scope: !11994)
!11999 = !DILocation(line: 2041, column: 8, scope: !11989)
!12000 = !DILocation(line: 2041, column: 43, scope: !11994)
!12001 = !DILocation(line: 2044, column: 2, scope: !11956)
!12002 = !DILocation(line: 2045, column: 1, scope: !11956)
!12003 = !DILocalVariable(name: "C", arg: 1, scope: !3533, file: !3, line: 1986, type: !1414)
!12004 = !DILocation(line: 1986, column: 48, scope: !3533)
!12005 = !DILocalVariable(name: "ar", arg: 2, scope: !3533, file: !3, line: 1986, type: !3259)
!12006 = !DILocation(line: 1986, column: 60, scope: !3533)
!12007 = !DILocalVariable(name: "UNUSED_arg_op", arg: 3, scope: !3533, file: !3, line: 1986, type: !1391)
!12008 = !DILocation(line: 1986, column: 70, scope: !3533)
!12009 = !DILocalVariable(name: "event", scope: !3533, file: !3, line: 1989, type: !3217)
!12010 = !DILocation(line: 1989, column: 10, scope: !3533)
!12011 = !DILocalVariable(name: "win", scope: !3533, file: !3, line: 1990, type: !4033)
!12012 = !DILocation(line: 1990, column: 12, scope: !3533)
!12013 = !DILocation(line: 1990, column: 32, scope: !3533)
!12014 = !DILocation(line: 1990, column: 18, scope: !3533)
!12015 = !DILocalVariable(name: "block", scope: !3533, file: !3, line: 1991, type: !3256)
!12016 = !DILocation(line: 1991, column: 11, scope: !3533)
!12017 = !DILocalVariable(name: "but", scope: !3533, file: !3, line: 1992, type: !5627)
!12018 = !DILocation(line: 1992, column: 9, scope: !3533)
!12019 = !DILocation(line: 1994, column: 23, scope: !3533)
!12020 = !DILocation(line: 1994, column: 26, scope: !3533)
!12021 = !DILocation(line: 1994, column: 10, scope: !3533)
!12022 = !DILocation(line: 1994, column: 8, scope: !3533)
!12023 = !DILocation(line: 1995, column: 17, scope: !3533)
!12024 = !DILocation(line: 1995, column: 2, scope: !3533)
!12025 = !DILocation(line: 1997, column: 23, scope: !3533)
!12026 = !DILocation(line: 1997, column: 80, scope: !3533)
!12027 = !DILocation(line: 1997, column: 100, scope: !3533)
!12028 = !DILocation(line: 1997, column: 8, scope: !3533)
!12029 = !DILocation(line: 1997, column: 6, scope: !3533)
!12030 = !DILocation(line: 1998, column: 23, scope: !3533)
!12031 = !DILocation(line: 1998, column: 2, scope: !3533)
!12032 = !DILocation(line: 2001, column: 11, scope: !3533)
!12033 = !DILocation(line: 2001, column: 41, scope: !3533)
!12034 = !DILocation(line: 2001, column: 39, scope: !3533)
!12035 = !DILocation(line: 2001, column: 62, scope: !3533)
!12036 = !DILocation(line: 2001, column: 82, scope: !3533)
!12037 = !DILocation(line: 2001, column: 2, scope: !3533)
!12038 = !DILocation(line: 2003, column: 21, scope: !3533)
!12039 = !DILocation(line: 2003, column: 35, scope: !3533)
!12040 = !DILocation(line: 2003, column: 34, scope: !3533)
!12041 = !DILocation(line: 2003, column: 2, scope: !3533)
!12042 = !DILocation(line: 2005, column: 28, scope: !3533)
!12043 = !DILocation(line: 2005, column: 2, scope: !3533)
!12044 = !DILocation(line: 2006, column: 8, scope: !3533)
!12045 = !DILocation(line: 2006, column: 13, scope: !3533)
!12046 = !DILocation(line: 2007, column: 8, scope: !3533)
!12047 = !DILocation(line: 2007, column: 12, scope: !3533)
!12048 = !DILocation(line: 2008, column: 21, scope: !3533)
!12049 = !DILocation(line: 2008, column: 8, scope: !3533)
!12050 = !DILocation(line: 2008, column: 19, scope: !3533)
!12051 = !DILocation(line: 2009, column: 8, scope: !3533)
!12052 = !DILocation(line: 2009, column: 23, scope: !3533)
!12053 = !DILocation(line: 2010, column: 15, scope: !3533)
!12054 = !DILocation(line: 2010, column: 2, scope: !3533)
!12055 = !DILocation(line: 2012, column: 9, scope: !3533)
!12056 = !DILocation(line: 2012, column: 2, scope: !3533)
!12057 = distinct !DISubprogram(name: "wm_call_menu_exec", scope: !3, file: !3, line: 2058, type: !3871, scopeLine: 2059, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!12058 = !DILocalVariable(name: "C", arg: 1, scope: !12057, file: !3, line: 2058, type: !1414)
!12059 = !DILocation(line: 2058, column: 40, scope: !12057)
!12060 = !DILocalVariable(name: "op", arg: 2, scope: !12057, file: !3, line: 2058, type: !2965)
!12061 = !DILocation(line: 2058, column: 55, scope: !12057)
!12062 = !DILocalVariable(name: "idname", scope: !12057, file: !3, line: 2060, type: !1476)
!12063 = !DILocation(line: 2060, column: 7, scope: !12057)
!12064 = !DILocation(line: 2061, column: 17, scope: !12057)
!12065 = !DILocation(line: 2061, column: 21, scope: !12057)
!12066 = !DILocation(line: 2061, column: 34, scope: !12057)
!12067 = !DILocation(line: 2061, column: 2, scope: !12057)
!12068 = !DILocation(line: 2063, column: 25, scope: !12057)
!12069 = !DILocation(line: 2063, column: 28, scope: !12057)
!12070 = !DILocation(line: 2063, column: 36, scope: !12057)
!12071 = !DILocation(line: 2063, column: 40, scope: !12057)
!12072 = !DILocation(line: 2063, column: 9, scope: !12057)
!12073 = !DILocation(line: 2063, column: 2, scope: !12057)
!12074 = distinct !DISubprogram(name: "wm_call_pie_menu_invoke", scope: !3, file: !3, line: 2080, type: !3944, scopeLine: 2081, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!12075 = !DILocalVariable(name: "C", arg: 1, scope: !12074, file: !3, line: 2080, type: !1414)
!12076 = !DILocation(line: 2080, column: 46, scope: !12074)
!12077 = !DILocalVariable(name: "op", arg: 2, scope: !12074, file: !3, line: 2080, type: !2965)
!12078 = !DILocation(line: 2080, column: 61, scope: !12074)
!12079 = !DILocalVariable(name: "event", arg: 3, scope: !12074, file: !3, line: 2080, type: !3946)
!12080 = !DILocation(line: 2080, column: 80, scope: !12074)
!12081 = !DILocalVariable(name: "idname", scope: !12074, file: !3, line: 2082, type: !1476)
!12082 = !DILocation(line: 2082, column: 7, scope: !12074)
!12083 = !DILocation(line: 2083, column: 17, scope: !12074)
!12084 = !DILocation(line: 2083, column: 21, scope: !12074)
!12085 = !DILocation(line: 2083, column: 34, scope: !12074)
!12086 = !DILocation(line: 2083, column: 2, scope: !12074)
!12087 = !DILocation(line: 2085, column: 25, scope: !12074)
!12088 = !DILocation(line: 2085, column: 28, scope: !12074)
!12089 = !DILocation(line: 2085, column: 36, scope: !12074)
!12090 = !DILocation(line: 2085, column: 9, scope: !12074)
!12091 = !DILocation(line: 2085, column: 2, scope: !12074)
!12092 = distinct !DISubprogram(name: "wm_call_pie_menu_exec", scope: !3, file: !3, line: 2088, type: !3871, scopeLine: 2089, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!12093 = !DILocalVariable(name: "C", arg: 1, scope: !12092, file: !3, line: 2088, type: !1414)
!12094 = !DILocation(line: 2088, column: 44, scope: !12092)
!12095 = !DILocalVariable(name: "op", arg: 2, scope: !12092, file: !3, line: 2088, type: !2965)
!12096 = !DILocation(line: 2088, column: 59, scope: !12092)
!12097 = !DILocalVariable(name: "idname", scope: !12092, file: !3, line: 2090, type: !1476)
!12098 = !DILocation(line: 2090, column: 7, scope: !12092)
!12099 = !DILocation(line: 2091, column: 17, scope: !12092)
!12100 = !DILocation(line: 2091, column: 21, scope: !12092)
!12101 = !DILocation(line: 2091, column: 34, scope: !12092)
!12102 = !DILocation(line: 2091, column: 2, scope: !12092)
!12103 = !DILocation(line: 2093, column: 25, scope: !12092)
!12104 = !DILocation(line: 2093, column: 28, scope: !12092)
!12105 = !DILocation(line: 2093, column: 50, scope: !12092)
!12106 = !DILocation(line: 2093, column: 36, scope: !12092)
!12107 = !DILocation(line: 2093, column: 54, scope: !12092)
!12108 = !DILocation(line: 2093, column: 9, scope: !12092)
!12109 = !DILocation(line: 2093, column: 2, scope: !12092)
!12110 = distinct !DISubprogram(name: "radial_control_invoke", scope: !3, file: !3, line: 4099, type: !3944, scopeLine: 4100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!12111 = !DILocalVariable(name: "C", arg: 1, scope: !12110, file: !3, line: 4099, type: !1414)
!12112 = !DILocation(line: 4099, column: 44, scope: !12110)
!12113 = !DILocalVariable(name: "op", arg: 2, scope: !12110, file: !3, line: 4099, type: !2965)
!12114 = !DILocation(line: 4099, column: 59, scope: !12110)
!12115 = !DILocalVariable(name: "event", arg: 3, scope: !12110, file: !3, line: 4099, type: !3946)
!12116 = !DILocation(line: 4099, column: 78, scope: !12110)
!12117 = !DILocalVariable(name: "wm", scope: !12110, file: !3, line: 4101, type: !6206)
!12118 = !DILocation(line: 4101, column: 19, scope: !12110)
!12119 = !DILocalVariable(name: "rc", scope: !12110, file: !3, line: 4102, type: !12120)
!12120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12121, size: 64)
!12121 = !DIDerivedType(tag: DW_TAG_typedef, name: "RadialControl", file: !3, line: 3750, baseType: !12122)
!12122 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !3, line: 3735, size: 2304, elements: !12123)
!12123 = !{!12124, !12126, !12127, !12128, !12129, !12130, !12131, !12132, !12133, !12134, !12135, !12136, !12137, !12138, !12139, !12140, !12141, !12142, !12143, !12144, !12145, !12146, !12151, !12152, !12153, !12154}
!12124 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !12122, file: !3, line: 3736, baseType: !12125, size: 32)
!12125 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropertyType", file: !6, line: 79, baseType: !45)
!12126 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !12122, file: !3, line: 3737, baseType: !5459, size: 32, offset: 32)
!12127 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !12122, file: !3, line: 3738, baseType: !4319, size: 192, offset: 64)
!12128 = !DIDerivedType(tag: DW_TAG_member, name: "col_ptr", scope: !12122, file: !3, line: 3738, baseType: !4319, size: 192, offset: 256)
!12129 = !DIDerivedType(tag: DW_TAG_member, name: "fill_col_ptr", scope: !12122, file: !3, line: 3738, baseType: !4319, size: 192, offset: 448)
!12130 = !DIDerivedType(tag: DW_TAG_member, name: "rot_ptr", scope: !12122, file: !3, line: 3738, baseType: !4319, size: 192, offset: 640)
!12131 = !DIDerivedType(tag: DW_TAG_member, name: "zoom_ptr", scope: !12122, file: !3, line: 3738, baseType: !4319, size: 192, offset: 832)
!12132 = !DIDerivedType(tag: DW_TAG_member, name: "image_id_ptr", scope: !12122, file: !3, line: 3738, baseType: !4319, size: 192, offset: 1024)
!12133 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !12122, file: !3, line: 3739, baseType: !1392, size: 64, offset: 1216)
!12134 = !DIDerivedType(tag: DW_TAG_member, name: "col_prop", scope: !12122, file: !3, line: 3739, baseType: !1392, size: 64, offset: 1280)
!12135 = !DIDerivedType(tag: DW_TAG_member, name: "fill_col_prop", scope: !12122, file: !3, line: 3739, baseType: !1392, size: 64, offset: 1344)
!12136 = !DIDerivedType(tag: DW_TAG_member, name: "rot_prop", scope: !12122, file: !3, line: 3739, baseType: !1392, size: 64, offset: 1408)
!12137 = !DIDerivedType(tag: DW_TAG_member, name: "zoom_prop", scope: !12122, file: !3, line: 3739, baseType: !1392, size: 64, offset: 1472)
!12138 = !DIDerivedType(tag: DW_TAG_member, name: "image_id_srna", scope: !12122, file: !3, line: 3740, baseType: !3075, size: 64, offset: 1536)
!12139 = !DIDerivedType(tag: DW_TAG_member, name: "initial_value", scope: !12122, file: !3, line: 3741, baseType: !1537, size: 32, offset: 1600)
!12140 = !DIDerivedType(tag: DW_TAG_member, name: "current_value", scope: !12122, file: !3, line: 3741, baseType: !1537, size: 32, offset: 1632)
!12141 = !DIDerivedType(tag: DW_TAG_member, name: "min_value", scope: !12122, file: !3, line: 3741, baseType: !1537, size: 32, offset: 1664)
!12142 = !DIDerivedType(tag: DW_TAG_member, name: "max_value", scope: !12122, file: !3, line: 3741, baseType: !1537, size: 32, offset: 1696)
!12143 = !DIDerivedType(tag: DW_TAG_member, name: "initial_mouse", scope: !12122, file: !3, line: 3742, baseType: !2004, size: 64, offset: 1728)
!12144 = !DIDerivedType(tag: DW_TAG_member, name: "slow_mouse", scope: !12122, file: !3, line: 3743, baseType: !2004, size: 64, offset: 1792)
!12145 = !DIDerivedType(tag: DW_TAG_member, name: "slow_mode", scope: !12122, file: !3, line: 3744, baseType: !2328, size: 8, offset: 1856)
!12146 = !DIDerivedType(tag: DW_TAG_member, name: "dial", scope: !12122, file: !3, line: 3745, baseType: !12147, size: 64, offset: 1920)
!12147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12148, size: 64)
!12148 = !DIDerivedType(tag: DW_TAG_typedef, name: "Dial", file: !12149, line: 53, baseType: !12150)
!12149 = !DIFile(filename: "blender/source/blender/blenlib/BLI_dial.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!12150 = !DICompositeType(tag: DW_TAG_structure_type, name: "Dial", file: !12149, line: 53, flags: DIFlagFwdDecl)
!12151 = !DIDerivedType(tag: DW_TAG_member, name: "gltex", scope: !12122, file: !3, line: 3746, baseType: !7, size: 32, offset: 1984)
!12152 = !DIDerivedType(tag: DW_TAG_member, name: "orig_paintcursors", scope: !12122, file: !3, line: 3747, baseType: !1486, size: 128, offset: 2048)
!12153 = !DIDerivedType(tag: DW_TAG_member, name: "use_secondary_tex", scope: !12122, file: !3, line: 3748, baseType: !2328, size: 8, offset: 2176)
!12154 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !12122, file: !3, line: 3749, baseType: !1391, size: 64, offset: 2240)
!12155 = !DILocation(line: 4102, column: 17, scope: !12110)
!12156 = !DILocalVariable(name: "min_value_int", scope: !12110, file: !3, line: 4103, type: !1224)
!12157 = !DILocation(line: 4103, column: 6, scope: !12110)
!12158 = !DILocalVariable(name: "max_value_int", scope: !12110, file: !3, line: 4103, type: !1224)
!12159 = !DILocation(line: 4103, column: 21, scope: !12110)
!12160 = !DILocalVariable(name: "step_int", scope: !12110, file: !3, line: 4103, type: !1224)
!12161 = !DILocation(line: 4103, column: 36, scope: !12110)
!12162 = !DILocalVariable(name: "step_float", scope: !12110, file: !3, line: 4104, type: !1537)
!12163 = !DILocation(line: 4104, column: 8, scope: !12110)
!12164 = !DILocalVariable(name: "precision", scope: !12110, file: !3, line: 4104, type: !1537)
!12165 = !DILocation(line: 4104, column: 20, scope: !12110)
!12166 = !DILocation(line: 4106, column: 30, scope: !12167)
!12167 = distinct !DILexicalBlock(scope: !12110, file: !3, line: 4106, column: 6)
!12168 = !DILocation(line: 4106, column: 28, scope: !12167)
!12169 = !DILocation(line: 4106, column: 25, scope: !12167)
!12170 = !DILocation(line: 4106, column: 8, scope: !12167)
!12171 = !DILocation(line: 4106, column: 12, scope: !12167)
!12172 = !DILocation(line: 4106, column: 23, scope: !12167)
!12173 = !DILocation(line: 4106, column: 6, scope: !12110)
!12174 = !DILocation(line: 4107, column: 3, scope: !12167)
!12175 = !DILocation(line: 4109, column: 37, scope: !12176)
!12176 = distinct !DILexicalBlock(scope: !12110, file: !3, line: 4109, column: 6)
!12177 = !DILocation(line: 4109, column: 40, scope: !12176)
!12178 = !DILocation(line: 4109, column: 7, scope: !12176)
!12179 = !DILocation(line: 4109, column: 6, scope: !12110)
!12180 = !DILocation(line: 4110, column: 3, scope: !12181)
!12181 = distinct !DILexicalBlock(scope: !12176, file: !3, line: 4109, column: 45)
!12182 = !DILocation(line: 4110, column: 13, scope: !12181)
!12183 = !DILocation(line: 4111, column: 3, scope: !12181)
!12184 = !DILocation(line: 4115, column: 40, scope: !12110)
!12185 = !DILocation(line: 4115, column: 44, scope: !12110)
!12186 = !DILocation(line: 4115, column: 22, scope: !12110)
!12187 = !DILocation(line: 4115, column: 11, scope: !12110)
!12188 = !DILocation(line: 4115, column: 15, scope: !12110)
!12189 = !DILocation(line: 4115, column: 20, scope: !12110)
!12190 = !DILocation(line: 4115, column: 2, scope: !12110)
!12191 = !DILocation(line: 4117, column: 46, scope: !12192)
!12192 = distinct !DILexicalBlock(scope: !12110, file: !3, line: 4115, column: 52)
!12193 = !DILocation(line: 4117, column: 50, scope: !12192)
!12194 = !DILocation(line: 4117, column: 55, scope: !12192)
!12195 = !DILocation(line: 4117, column: 59, scope: !12192)
!12196 = !DILocation(line: 4117, column: 24, scope: !12192)
!12197 = !DILocation(line: 4117, column: 4, scope: !12192)
!12198 = !DILocation(line: 4117, column: 8, scope: !12192)
!12199 = !DILocation(line: 4117, column: 22, scope: !12192)
!12200 = !DILocation(line: 4118, column: 31, scope: !12192)
!12201 = !DILocation(line: 4118, column: 35, scope: !12192)
!12202 = !DILocation(line: 4118, column: 40, scope: !12192)
!12203 = !DILocation(line: 4118, column: 44, scope: !12192)
!12204 = !DILocation(line: 4118, column: 4, scope: !12192)
!12205 = !DILocation(line: 4120, column: 20, scope: !12192)
!12206 = !DILocation(line: 4120, column: 4, scope: !12192)
!12207 = !DILocation(line: 4120, column: 8, scope: !12192)
!12208 = !DILocation(line: 4120, column: 18, scope: !12192)
!12209 = !DILocation(line: 4121, column: 20, scope: !12192)
!12210 = !DILocation(line: 4121, column: 4, scope: !12192)
!12211 = !DILocation(line: 4121, column: 8, scope: !12192)
!12212 = !DILocation(line: 4121, column: 18, scope: !12192)
!12213 = !DILocation(line: 4122, column: 4, scope: !12192)
!12214 = !DILocation(line: 4124, column: 48, scope: !12192)
!12215 = !DILocation(line: 4124, column: 52, scope: !12192)
!12216 = !DILocation(line: 4124, column: 57, scope: !12192)
!12217 = !DILocation(line: 4124, column: 61, scope: !12192)
!12218 = !DILocation(line: 4124, column: 24, scope: !12192)
!12219 = !DILocation(line: 4124, column: 4, scope: !12192)
!12220 = !DILocation(line: 4124, column: 8, scope: !12192)
!12221 = !DILocation(line: 4124, column: 22, scope: !12192)
!12222 = !DILocation(line: 4125, column: 33, scope: !12192)
!12223 = !DILocation(line: 4125, column: 37, scope: !12192)
!12224 = !DILocation(line: 4125, column: 42, scope: !12192)
!12225 = !DILocation(line: 4125, column: 46, scope: !12192)
!12226 = !DILocation(line: 4125, column: 53, scope: !12192)
!12227 = !DILocation(line: 4125, column: 57, scope: !12192)
!12228 = !DILocation(line: 4126, column: 33, scope: !12192)
!12229 = !DILocation(line: 4126, column: 37, scope: !12192)
!12230 = !DILocation(line: 4125, column: 4, scope: !12192)
!12231 = !DILocation(line: 4127, column: 4, scope: !12192)
!12232 = !DILocation(line: 4129, column: 15, scope: !12192)
!12233 = !DILocation(line: 4129, column: 19, scope: !12192)
!12234 = !DILocation(line: 4129, column: 4, scope: !12192)
!12235 = !DILocation(line: 4130, column: 4, scope: !12192)
!12236 = !DILocation(line: 4130, column: 14, scope: !12192)
!12237 = !DILocation(line: 4131, column: 4, scope: !12192)
!12238 = !DILocation(line: 4135, column: 37, scope: !12110)
!12239 = !DILocation(line: 4135, column: 41, scope: !12110)
!12240 = !DILocation(line: 4135, column: 16, scope: !12110)
!12241 = !DILocation(line: 4135, column: 2, scope: !12110)
!12242 = !DILocation(line: 4135, column: 6, scope: !12110)
!12243 = !DILocation(line: 4135, column: 14, scope: !12110)
!12244 = !DILocation(line: 4136, column: 7, scope: !12245)
!12245 = distinct !DILexicalBlock(scope: !12110, file: !3, line: 4136, column: 6)
!12246 = !DILocation(line: 4136, column: 6, scope: !12110)
!12247 = !DILocation(line: 4137, column: 14, scope: !12248)
!12248 = distinct !DILexicalBlock(scope: !12245, file: !3, line: 4136, column: 89)
!12249 = !DILocation(line: 4137, column: 18, scope: !12248)
!12250 = !DILocation(line: 4137, column: 3, scope: !12248)
!12251 = !DILocation(line: 4138, column: 3, scope: !12248)
!12252 = !DILocation(line: 4138, column: 13, scope: !12248)
!12253 = !DILocation(line: 4139, column: 3, scope: !12248)
!12254 = !DILocation(line: 4142, column: 22, scope: !12110)
!12255 = !DILocation(line: 4142, column: 26, scope: !12110)
!12256 = !DILocation(line: 4142, column: 2, scope: !12110)
!12257 = !DILocation(line: 4142, column: 6, scope: !12110)
!12258 = !DILocation(line: 4142, column: 20, scope: !12110)
!12259 = !DILocation(line: 4143, column: 35, scope: !12110)
!12260 = !DILocation(line: 4143, column: 39, scope: !12110)
!12261 = !DILocation(line: 4143, column: 2, scope: !12110)
!12262 = !DILocation(line: 4144, column: 25, scope: !12110)
!12263 = !DILocation(line: 4144, column: 2, scope: !12110)
!12264 = !DILocation(line: 4147, column: 22, scope: !12110)
!12265 = !DILocation(line: 4147, column: 7, scope: !12110)
!12266 = !DILocation(line: 4147, column: 5, scope: !12110)
!12267 = !DILocation(line: 4148, column: 2, scope: !12110)
!12268 = !DILocation(line: 4148, column: 6, scope: !12110)
!12269 = !DILocation(line: 4148, column: 26, scope: !12110)
!12270 = !DILocation(line: 4148, column: 30, scope: !12110)
!12271 = !DILocation(line: 4149, column: 22, scope: !12110)
!12272 = !DILocation(line: 4149, column: 26, scope: !12110)
!12273 = !DILocation(line: 4149, column: 2, scope: !12110)
!12274 = !DILocation(line: 4152, column: 40, scope: !12110)
!12275 = !DILocation(line: 4152, column: 44, scope: !12110)
!12276 = !DILocation(line: 4152, column: 48, scope: !12110)
!12277 = !DILocation(line: 4152, column: 54, scope: !12110)
!12278 = !DILocation(line: 4153, column: 69, scope: !12110)
!12279 = !DILocation(line: 4152, column: 15, scope: !12110)
!12280 = !DILocation(line: 4152, column: 2, scope: !12110)
!12281 = !DILocation(line: 4152, column: 6, scope: !12110)
!12282 = !DILocation(line: 4152, column: 13, scope: !12110)
!12283 = !DILocation(line: 4155, column: 29, scope: !12110)
!12284 = !DILocation(line: 4155, column: 32, scope: !12110)
!12285 = !DILocation(line: 4155, column: 2, scope: !12110)
!12286 = !DILocation(line: 4157, column: 2, scope: !12110)
!12287 = !DILocation(line: 4158, column: 1, scope: !12110)
!12288 = distinct !DISubprogram(name: "radial_control_modal", scope: !3, file: !3, line: 4199, type: !3944, scopeLine: 4200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!12289 = !DILocalVariable(name: "C", arg: 1, scope: !12288, file: !3, line: 4199, type: !1414)
!12290 = !DILocation(line: 4199, column: 43, scope: !12288)
!12291 = !DILocalVariable(name: "op", arg: 2, scope: !12288, file: !3, line: 4199, type: !2965)
!12292 = !DILocation(line: 4199, column: 58, scope: !12288)
!12293 = !DILocalVariable(name: "event", arg: 3, scope: !12288, file: !3, line: 4199, type: !3946)
!12294 = !DILocation(line: 4199, column: 77, scope: !12288)
!12295 = !DILocalVariable(name: "rc", scope: !12288, file: !3, line: 4201, type: !12120)
!12296 = !DILocation(line: 4201, column: 17, scope: !12288)
!12297 = !DILocation(line: 4201, column: 22, scope: !12288)
!12298 = !DILocation(line: 4201, column: 26, scope: !12288)
!12299 = !DILocalVariable(name: "new_value", scope: !12288, file: !3, line: 4202, type: !1537)
!12300 = !DILocation(line: 4202, column: 8, scope: !12288)
!12301 = !DILocalVariable(name: "dist", scope: !12288, file: !3, line: 4202, type: !1537)
!12302 = !DILocation(line: 4202, column: 19, scope: !12288)
!12303 = !DILocalVariable(name: "zoom", scope: !12288, file: !3, line: 4202, type: !1763)
!12304 = !DILocation(line: 4202, column: 25, scope: !12288)
!12305 = !DILocalVariable(name: "delta", scope: !12288, file: !3, line: 4203, type: !1763)
!12306 = !DILocation(line: 4203, column: 8, scope: !12288)
!12307 = !DILocalVariable(name: "ret", scope: !12288, file: !3, line: 4203, type: !1537)
!12308 = !DILocation(line: 4203, column: 18, scope: !12288)
!12309 = !DILocalVariable(name: "snap", scope: !12288, file: !3, line: 4204, type: !2328)
!12310 = !DILocation(line: 4204, column: 7, scope: !12288)
!12311 = !DILocalVariable(name: "angle_precision", scope: !12288, file: !3, line: 4205, type: !1537)
!12312 = !DILocation(line: 4205, column: 8, scope: !12288)
!12313 = !DILocation(line: 4208, column: 9, scope: !12288)
!12314 = !DILocation(line: 4208, column: 16, scope: !12288)
!12315 = !DILocation(line: 4208, column: 21, scope: !12288)
!12316 = !DILocation(line: 4208, column: 7, scope: !12288)
!12317 = !DILocation(line: 4210, column: 10, scope: !12288)
!12318 = !DILocation(line: 4210, column: 17, scope: !12288)
!12319 = !DILocation(line: 4210, column: 2, scope: !12288)
!12320 = !DILocation(line: 4212, column: 8, scope: !12321)
!12321 = distinct !DILexicalBlock(scope: !12322, file: !3, line: 4212, column: 8)
!12322 = distinct !DILexicalBlock(scope: !12288, file: !3, line: 4210, column: 23)
!12323 = !DILocation(line: 4212, column: 12, scope: !12321)
!12324 = !DILocation(line: 4212, column: 8, scope: !12322)
!12325 = !DILocation(line: 4213, column: 9, scope: !12326)
!12326 = distinct !DILexicalBlock(scope: !12327, file: !3, line: 4213, column: 9)
!12327 = distinct !DILexicalBlock(scope: !12321, file: !3, line: 4212, column: 23)
!12328 = !DILocation(line: 4213, column: 13, scope: !12326)
!12329 = !DILocation(line: 4213, column: 21, scope: !12326)
!12330 = !DILocation(line: 4213, column: 9, scope: !12327)
!12331 = !DILocalVariable(name: "position", scope: !12332, file: !3, line: 4214, type: !1763)
!12332 = distinct !DILexicalBlock(scope: !12326, file: !3, line: 4213, column: 36)
!12333 = !DILocation(line: 4214, column: 12, scope: !12332)
!12334 = !DILocation(line: 4214, column: 26, scope: !12332)
!12335 = !DILocation(line: 4214, column: 27, scope: !12332)
!12336 = !DILocation(line: 4214, column: 34, scope: !12332)
!12337 = !DILocation(line: 4214, column: 37, scope: !12332)
!12338 = !DILocation(line: 4214, column: 44, scope: !12332)
!12339 = !DILocation(line: 4217, column: 17, scope: !12332)
!12340 = !DILocation(line: 4217, column: 21, scope: !12332)
!12341 = !DILocation(line: 4217, column: 40, scope: !12332)
!12342 = !DILocation(line: 4217, column: 44, scope: !12332)
!12343 = !DILocation(line: 4217, column: 38, scope: !12332)
!12344 = !DILocation(line: 4217, column: 6, scope: !12332)
!12345 = !DILocation(line: 4217, column: 15, scope: !12332)
!12346 = !DILocation(line: 4218, column: 17, scope: !12332)
!12347 = !DILocation(line: 4218, column: 21, scope: !12332)
!12348 = !DILocation(line: 4218, column: 40, scope: !12332)
!12349 = !DILocation(line: 4218, column: 44, scope: !12332)
!12350 = !DILocation(line: 4218, column: 38, scope: !12332)
!12351 = !DILocation(line: 4218, column: 6, scope: !12332)
!12352 = !DILocation(line: 4218, column: 15, scope: !12332)
!12353 = !DILocation(line: 4221, column: 47, scope: !12332)
!12354 = !DILocation(line: 4221, column: 51, scope: !12332)
!12355 = !DILocation(line: 4221, column: 57, scope: !12332)
!12356 = !DILocation(line: 4221, column: 32, scope: !12332)
!12357 = !DILocation(line: 4221, column: 30, scope: !12332)
!12358 = !DILocation(line: 4221, column: 22, scope: !12332)
!12359 = !DILocation(line: 4222, column: 5, scope: !12332)
!12360 = !DILocation(line: 4224, column: 17, scope: !12361)
!12361 = distinct !DILexicalBlock(scope: !12326, file: !3, line: 4223, column: 10)
!12362 = !DILocation(line: 4224, column: 21, scope: !12361)
!12363 = !DILocation(line: 4224, column: 40, scope: !12361)
!12364 = !DILocation(line: 4224, column: 44, scope: !12361)
!12365 = !DILocation(line: 4224, column: 38, scope: !12361)
!12366 = !DILocation(line: 4224, column: 6, scope: !12361)
!12367 = !DILocation(line: 4224, column: 15, scope: !12361)
!12368 = !DILocation(line: 4225, column: 17, scope: !12361)
!12369 = !DILocation(line: 4225, column: 21, scope: !12361)
!12370 = !DILocation(line: 4225, column: 40, scope: !12361)
!12371 = !DILocation(line: 4225, column: 44, scope: !12361)
!12372 = !DILocation(line: 4225, column: 38, scope: !12361)
!12373 = !DILocation(line: 4225, column: 6, scope: !12361)
!12374 = !DILocation(line: 4225, column: 15, scope: !12361)
!12375 = !DILocation(line: 4227, column: 10, scope: !12376)
!12376 = distinct !DILexicalBlock(scope: !12361, file: !3, line: 4227, column: 10)
!12377 = !DILocation(line: 4227, column: 14, scope: !12376)
!12378 = !DILocation(line: 4227, column: 10, scope: !12361)
!12379 = !DILocation(line: 4228, column: 37, scope: !12380)
!12380 = distinct !DILexicalBlock(scope: !12376, file: !3, line: 4227, column: 25)
!12381 = !DILocation(line: 4228, column: 41, scope: !12380)
!12382 = !DILocation(line: 4228, column: 51, scope: !12380)
!12383 = !DILocation(line: 4228, column: 55, scope: !12380)
!12384 = !DILocation(line: 4228, column: 66, scope: !12380)
!12385 = !DILocation(line: 4228, column: 7, scope: !12380)
!12386 = !DILocation(line: 4229, column: 19, scope: !12380)
!12387 = !DILocation(line: 4229, column: 7, scope: !12380)
!12388 = !DILocation(line: 4229, column: 16, scope: !12380)
!12389 = !DILocation(line: 4230, column: 19, scope: !12380)
!12390 = !DILocation(line: 4230, column: 7, scope: !12380)
!12391 = !DILocation(line: 4230, column: 16, scope: !12380)
!12392 = !DILocation(line: 4231, column: 6, scope: !12380)
!12393 = !DILocation(line: 4233, column: 20, scope: !12361)
!12394 = !DILocation(line: 4233, column: 13, scope: !12361)
!12395 = !DILocation(line: 4233, column: 11, scope: !12361)
!12396 = !DILocation(line: 4235, column: 17, scope: !12361)
!12397 = !DILocation(line: 4235, column: 24, scope: !12361)
!12398 = !DILocation(line: 4235, column: 28, scope: !12361)
!12399 = !DILocation(line: 4235, column: 32, scope: !12361)
!12400 = !DILocation(line: 4235, column: 26, scope: !12361)
!12401 = !DILocation(line: 4235, column: 6, scope: !12361)
!12402 = !DILocation(line: 4235, column: 15, scope: !12361)
!12403 = !DILocation(line: 4236, column: 17, scope: !12361)
!12404 = !DILocation(line: 4236, column: 24, scope: !12361)
!12405 = !DILocation(line: 4236, column: 28, scope: !12361)
!12406 = !DILocation(line: 4236, column: 32, scope: !12361)
!12407 = !DILocation(line: 4236, column: 26, scope: !12361)
!12408 = !DILocation(line: 4236, column: 6, scope: !12361)
!12409 = !DILocation(line: 4236, column: 15, scope: !12361)
!12410 = !DILocation(line: 4238, column: 10, scope: !12411)
!12411 = distinct !DILexicalBlock(scope: !12361, file: !3, line: 4238, column: 10)
!12412 = !DILocation(line: 4238, column: 14, scope: !12411)
!12413 = !DILocation(line: 4238, column: 10, scope: !12361)
!12414 = !DILocation(line: 4239, column: 19, scope: !12415)
!12415 = distinct !DILexicalBlock(scope: !12411, file: !3, line: 4238, column: 25)
!12416 = !DILocation(line: 4239, column: 7, scope: !12415)
!12417 = !DILocation(line: 4239, column: 16, scope: !12415)
!12418 = !DILocation(line: 4240, column: 19, scope: !12415)
!12419 = !DILocation(line: 4240, column: 7, scope: !12415)
!12420 = !DILocation(line: 4240, column: 16, scope: !12415)
!12421 = !DILocation(line: 4241, column: 6, scope: !12415)
!12422 = !DILocation(line: 4243, column: 13, scope: !12361)
!12423 = !DILocation(line: 4243, column: 28, scope: !12361)
!12424 = !DILocation(line: 4243, column: 39, scope: !12361)
!12425 = !DILocation(line: 4243, column: 37, scope: !12361)
!12426 = !DILocation(line: 4243, column: 25, scope: !12361)
!12427 = !DILocation(line: 4243, column: 18, scope: !12361)
!12428 = !DILocation(line: 4243, column: 11, scope: !12361)
!12429 = !DILocation(line: 4245, column: 4, scope: !12327)
!12430 = !DILocation(line: 4247, column: 16, scope: !12431)
!12431 = distinct !DILexicalBlock(scope: !12321, file: !3, line: 4246, column: 9)
!12432 = !DILocation(line: 4247, column: 20, scope: !12431)
!12433 = !DILocation(line: 4247, column: 39, scope: !12431)
!12434 = !DILocation(line: 4247, column: 46, scope: !12431)
!12435 = !DILocation(line: 4247, column: 37, scope: !12431)
!12436 = !DILocation(line: 4247, column: 5, scope: !12431)
!12437 = !DILocation(line: 4247, column: 14, scope: !12431)
!12438 = !DILocation(line: 4248, column: 16, scope: !12431)
!12439 = !DILocation(line: 4248, column: 20, scope: !12431)
!12440 = !DILocation(line: 4248, column: 39, scope: !12431)
!12441 = !DILocation(line: 4248, column: 46, scope: !12431)
!12442 = !DILocation(line: 4248, column: 37, scope: !12431)
!12443 = !DILocation(line: 4248, column: 5, scope: !12431)
!12444 = !DILocation(line: 4248, column: 14, scope: !12431)
!12445 = !DILocation(line: 4250, column: 9, scope: !12446)
!12446 = distinct !DILexicalBlock(scope: !12431, file: !3, line: 4250, column: 9)
!12447 = !DILocation(line: 4250, column: 13, scope: !12446)
!12448 = !DILocation(line: 4250, column: 9, scope: !12431)
!12449 = !DILocation(line: 4251, column: 36, scope: !12450)
!12450 = distinct !DILexicalBlock(scope: !12446, file: !3, line: 4250, column: 24)
!12451 = !DILocation(line: 4251, column: 40, scope: !12450)
!12452 = !DILocation(line: 4251, column: 50, scope: !12450)
!12453 = !DILocation(line: 4251, column: 54, scope: !12450)
!12454 = !DILocation(line: 4251, column: 65, scope: !12450)
!12455 = !DILocation(line: 4251, column: 6, scope: !12450)
!12456 = !DILocation(line: 4252, column: 18, scope: !12450)
!12457 = !DILocation(line: 4252, column: 6, scope: !12450)
!12458 = !DILocation(line: 4252, column: 15, scope: !12450)
!12459 = !DILocation(line: 4253, column: 18, scope: !12450)
!12460 = !DILocation(line: 4253, column: 6, scope: !12450)
!12461 = !DILocation(line: 4253, column: 15, scope: !12450)
!12462 = !DILocation(line: 4254, column: 5, scope: !12450)
!12463 = !DILocation(line: 4256, column: 19, scope: !12431)
!12464 = !DILocation(line: 4256, column: 12, scope: !12431)
!12465 = !DILocation(line: 4256, column: 10, scope: !12431)
!12466 = !DILocation(line: 4260, column: 12, scope: !12322)
!12467 = !DILocation(line: 4260, column: 16, scope: !12322)
!12468 = !DILocation(line: 4260, column: 4, scope: !12322)
!12469 = !DILocation(line: 4264, column: 18, scope: !12470)
!12470 = distinct !DILexicalBlock(scope: !12322, file: !3, line: 4260, column: 25)
!12471 = !DILocation(line: 4264, column: 16, scope: !12470)
!12472 = !DILocation(line: 4265, column: 10, scope: !12473)
!12473 = distinct !DILexicalBlock(scope: !12470, file: !3, line: 4265, column: 10)
!12474 = !DILocation(line: 4265, column: 10, scope: !12470)
!12475 = !DILocation(line: 4265, column: 34, scope: !12473)
!12476 = !DILocation(line: 4265, column: 29, scope: !12473)
!12477 = !DILocation(line: 4265, column: 44, scope: !12473)
!12478 = !DILocation(line: 4265, column: 49, scope: !12473)
!12479 = !DILocation(line: 4265, column: 54, scope: !12473)
!12480 = !DILocation(line: 4265, column: 28, scope: !12473)
!12481 = !DILocation(line: 4265, column: 26, scope: !12473)
!12482 = !DILocation(line: 4265, column: 16, scope: !12473)
!12483 = !DILocation(line: 4266, column: 6, scope: !12470)
!12484 = !DILocation(line: 4268, column: 52, scope: !12470)
!12485 = !DILocation(line: 4268, column: 50, scope: !12470)
!12486 = !DILocation(line: 4268, column: 58, scope: !12470)
!12487 = !DILocation(line: 4268, column: 16, scope: !12470)
!12488 = !DILocation(line: 4269, column: 10, scope: !12489)
!12489 = distinct !DILexicalBlock(scope: !12470, file: !3, line: 4269, column: 10)
!12490 = !DILocation(line: 4269, column: 10, scope: !12470)
!12491 = !DILocation(line: 4269, column: 39, scope: !12489)
!12492 = !DILocation(line: 4269, column: 49, scope: !12489)
!12493 = !DILocation(line: 4269, column: 34, scope: !12489)
!12494 = !DILocation(line: 4269, column: 29, scope: !12489)
!12495 = !DILocation(line: 4269, column: 57, scope: !12489)
!12496 = !DILocation(line: 4269, column: 66, scope: !12489)
!12497 = !DILocation(line: 4269, column: 26, scope: !12489)
!12498 = !DILocation(line: 4269, column: 16, scope: !12489)
!12499 = !DILocation(line: 4270, column: 6, scope: !12470)
!12500 = !DILocation(line: 4272, column: 25, scope: !12470)
!12501 = !DILocation(line: 4272, column: 35, scope: !12470)
!12502 = !DILocation(line: 4272, column: 18, scope: !12470)
!12503 = !DILocation(line: 4272, column: 45, scope: !12470)
!12504 = !DILocation(line: 4272, column: 54, scope: !12470)
!12505 = !DILocation(line: 4272, column: 52, scope: !12470)
!12506 = !DILocation(line: 4272, column: 16, scope: !12470)
!12507 = !DILocation(line: 4273, column: 23, scope: !12470)
!12508 = !DILocation(line: 4273, column: 18, scope: !12470)
!12509 = !DILocation(line: 4273, column: 16, scope: !12470)
!12510 = !DILocation(line: 4274, column: 10, scope: !12511)
!12511 = distinct !DILexicalBlock(scope: !12470, file: !3, line: 4274, column: 10)
!12512 = !DILocation(line: 4274, column: 20, scope: !12511)
!12513 = !DILocation(line: 4274, column: 10, scope: !12470)
!12514 = !DILocation(line: 4275, column: 17, scope: !12511)
!12515 = !DILocation(line: 4275, column: 7, scope: !12511)
!12516 = !DILocation(line: 4276, column: 10, scope: !12517)
!12517 = distinct !DILexicalBlock(scope: !12470, file: !3, line: 4276, column: 10)
!12518 = !DILocation(line: 4276, column: 10, scope: !12470)
!12519 = !DILocation(line: 4276, column: 28, scope: !12517)
!12520 = !DILocation(line: 4276, column: 26, scope: !12517)
!12521 = !DILocation(line: 4276, column: 16, scope: !12517)
!12522 = !DILocation(line: 4277, column: 6, scope: !12470)
!12523 = !DILocation(line: 4279, column: 18, scope: !12470)
!12524 = !DILocation(line: 4279, column: 16, scope: !12470)
!12525 = !DILocation(line: 4280, column: 6, scope: !12470)
!12526 = !DILocation(line: 4284, column: 4, scope: !12527)
!12527 = distinct !DILexicalBlock(scope: !12528, file: !3, line: 4284, column: 4)
!12528 = distinct !DILexicalBlock(scope: !12322, file: !3, line: 4284, column: 4)
!12529 = !DILocation(line: 4284, column: 4, scope: !12528)
!12530 = !DILocation(line: 4284, column: 4, scope: !12531)
!12531 = distinct !DILexicalBlock(scope: !12527, file: !3, line: 4284, column: 4)
!12532 = !DILocation(line: 4285, column: 29, scope: !12322)
!12533 = !DILocation(line: 4285, column: 33, scope: !12322)
!12534 = !DILocation(line: 4285, column: 4, scope: !12322)
!12535 = !DILocation(line: 4286, column: 24, scope: !12322)
!12536 = !DILocation(line: 4286, column: 4, scope: !12322)
!12537 = !DILocation(line: 4286, column: 8, scope: !12322)
!12538 = !DILocation(line: 4286, column: 22, scope: !12322)
!12539 = !DILocation(line: 4287, column: 4, scope: !12322)
!12540 = !DILocation(line: 4292, column: 29, scope: !12322)
!12541 = !DILocation(line: 4292, column: 33, scope: !12322)
!12542 = !DILocation(line: 4292, column: 37, scope: !12322)
!12543 = !DILocation(line: 4292, column: 4, scope: !12322)
!12544 = !DILocation(line: 4293, column: 8, scope: !12322)
!12545 = !DILocation(line: 4294, column: 4, scope: !12322)
!12546 = !DILocation(line: 4299, column: 24, scope: !12322)
!12547 = !DILocation(line: 4299, column: 28, scope: !12322)
!12548 = !DILocation(line: 4299, column: 32, scope: !12322)
!12549 = !DILocation(line: 4299, column: 37, scope: !12322)
!12550 = !DILocation(line: 4299, column: 41, scope: !12322)
!12551 = !DILocation(line: 4299, column: 4, scope: !12322)
!12552 = !DILocation(line: 4300, column: 8, scope: !12322)
!12553 = !DILocation(line: 4301, column: 4, scope: !12322)
!12554 = !DILocation(line: 4305, column: 8, scope: !12555)
!12555 = distinct !DILexicalBlock(scope: !12322, file: !3, line: 4305, column: 8)
!12556 = !DILocation(line: 4305, column: 15, scope: !12555)
!12557 = !DILocation(line: 4305, column: 19, scope: !12555)
!12558 = !DILocation(line: 4305, column: 8, scope: !12322)
!12559 = !DILocation(line: 4306, column: 25, scope: !12560)
!12560 = distinct !DILexicalBlock(scope: !12555, file: !3, line: 4305, column: 32)
!12561 = !DILocation(line: 4306, column: 32, scope: !12560)
!12562 = !DILocation(line: 4306, column: 5, scope: !12560)
!12563 = !DILocation(line: 4306, column: 9, scope: !12560)
!12564 = !DILocation(line: 4306, column: 23, scope: !12560)
!12565 = !DILocation(line: 4307, column: 25, scope: !12560)
!12566 = !DILocation(line: 4307, column: 32, scope: !12560)
!12567 = !DILocation(line: 4307, column: 5, scope: !12560)
!12568 = !DILocation(line: 4307, column: 9, scope: !12560)
!12569 = !DILocation(line: 4307, column: 23, scope: !12560)
!12570 = !DILocation(line: 4308, column: 5, scope: !12560)
!12571 = !DILocation(line: 4308, column: 9, scope: !12560)
!12572 = !DILocation(line: 4308, column: 19, scope: !12560)
!12573 = !DILocation(line: 4309, column: 9, scope: !12574)
!12574 = distinct !DILexicalBlock(scope: !12560, file: !3, line: 4309, column: 9)
!12575 = !DILocation(line: 4309, column: 13, scope: !12574)
!12576 = !DILocation(line: 4309, column: 21, scope: !12574)
!12577 = !DILocation(line: 4309, column: 9, scope: !12560)
!12578 = !DILocalVariable(name: "initial_position", scope: !12579, file: !3, line: 4310, type: !1763)
!12579 = distinct !DILexicalBlock(scope: !12574, file: !3, line: 4309, column: 36)
!12580 = !DILocation(line: 4310, column: 12, scope: !12579)
!12581 = !DILocation(line: 4310, column: 34, scope: !12579)
!12582 = !DILocation(line: 4310, column: 35, scope: !12579)
!12583 = !DILocalVariable(name: "current_position", scope: !12579, file: !3, line: 4311, type: !1763)
!12584 = !DILocation(line: 4311, column: 12, scope: !12579)
!12585 = !DILocation(line: 4311, column: 34, scope: !12579)
!12586 = !DILocation(line: 4311, column: 35, scope: !12579)
!12587 = !DILocation(line: 4312, column: 37, scope: !12579)
!12588 = !DILocation(line: 4312, column: 17, scope: !12579)
!12589 = !DILocation(line: 4312, column: 6, scope: !12579)
!12590 = !DILocation(line: 4312, column: 10, scope: !12579)
!12591 = !DILocation(line: 4312, column: 15, scope: !12579)
!12592 = !DILocation(line: 4314, column: 21, scope: !12579)
!12593 = !DILocation(line: 4314, column: 25, scope: !12579)
!12594 = !DILocation(line: 4314, column: 31, scope: !12579)
!12595 = !DILocation(line: 4314, column: 6, scope: !12579)
!12596 = !DILocation(line: 4315, column: 5, scope: !12579)
!12597 = !DILocation(line: 4316, column: 4, scope: !12560)
!12598 = !DILocation(line: 4317, column: 8, scope: !12599)
!12599 = distinct !DILexicalBlock(scope: !12322, file: !3, line: 4317, column: 8)
!12600 = !DILocation(line: 4317, column: 15, scope: !12599)
!12601 = !DILocation(line: 4317, column: 19, scope: !12599)
!12602 = !DILocation(line: 4317, column: 8, scope: !12322)
!12603 = !DILocation(line: 4318, column: 5, scope: !12604)
!12604 = distinct !DILexicalBlock(scope: !12599, file: !3, line: 4317, column: 34)
!12605 = !DILocation(line: 4318, column: 9, scope: !12604)
!12606 = !DILocation(line: 4318, column: 19, scope: !12604)
!12607 = !DILocation(line: 4319, column: 9, scope: !12608)
!12608 = distinct !DILexicalBlock(scope: !12604, file: !3, line: 4319, column: 9)
!12609 = !DILocation(line: 4319, column: 13, scope: !12608)
!12610 = !DILocation(line: 4319, column: 9, scope: !12604)
!12611 = !DILocation(line: 4320, column: 6, scope: !12612)
!12612 = distinct !DILexicalBlock(scope: !12608, file: !3, line: 4319, column: 19)
!12613 = !DILocation(line: 4320, column: 16, scope: !12612)
!12614 = !DILocation(line: 4320, column: 20, scope: !12612)
!12615 = !DILocation(line: 4321, column: 6, scope: !12612)
!12616 = !DILocation(line: 4321, column: 10, scope: !12612)
!12617 = !DILocation(line: 4321, column: 15, scope: !12612)
!12618 = !DILocation(line: 4322, column: 5, scope: !12612)
!12619 = !DILocation(line: 4323, column: 4, scope: !12604)
!12620 = !DILocation(line: 4324, column: 4, scope: !12322)
!12621 = !DILocation(line: 4327, column: 37, scope: !12288)
!12622 = !DILocation(line: 4327, column: 23, scope: !12288)
!12623 = !DILocation(line: 4327, column: 2, scope: !12288)
!12624 = !DILocation(line: 4329, column: 6, scope: !12625)
!12625 = distinct !DILexicalBlock(scope: !12288, file: !3, line: 4329, column: 6)
!12626 = !DILocation(line: 4329, column: 10, scope: !12625)
!12627 = !DILocation(line: 4329, column: 6, scope: !12288)
!12628 = !DILocation(line: 4330, column: 25, scope: !12625)
!12629 = !DILocation(line: 4330, column: 28, scope: !12625)
!12630 = !DILocation(line: 4330, column: 3, scope: !12625)
!12631 = !DILocation(line: 4332, column: 9, scope: !12288)
!12632 = !DILocation(line: 4332, column: 2, scope: !12288)
!12633 = distinct !DISubprogram(name: "radial_control_cancel", scope: !3, file: !3, line: 4174, type: !4165, scopeLine: 4175, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!12634 = !DILocalVariable(name: "C", arg: 1, scope: !12633, file: !3, line: 4174, type: !1414)
!12635 = !DILocation(line: 4174, column: 45, scope: !12633)
!12636 = !DILocalVariable(name: "op", arg: 2, scope: !12633, file: !3, line: 4174, type: !2965)
!12637 = !DILocation(line: 4174, column: 60, scope: !12633)
!12638 = !DILocalVariable(name: "rc", scope: !12633, file: !3, line: 4176, type: !12120)
!12639 = !DILocation(line: 4176, column: 17, scope: !12633)
!12640 = !DILocation(line: 4176, column: 22, scope: !12633)
!12641 = !DILocation(line: 4176, column: 26, scope: !12633)
!12642 = !DILocalVariable(name: "wm", scope: !12633, file: !3, line: 4177, type: !6206)
!12643 = !DILocation(line: 4177, column: 19, scope: !12633)
!12644 = !DILocation(line: 4177, column: 39, scope: !12633)
!12645 = !DILocation(line: 4177, column: 24, scope: !12633)
!12646 = !DILocation(line: 4179, column: 6, scope: !12647)
!12647 = distinct !DILexicalBlock(scope: !12633, file: !3, line: 4179, column: 6)
!12648 = !DILocation(line: 4179, column: 10, scope: !12647)
!12649 = !DILocation(line: 4179, column: 6, scope: !12633)
!12650 = !DILocation(line: 4180, column: 3, scope: !12651)
!12651 = distinct !DILexicalBlock(scope: !12647, file: !3, line: 4179, column: 16)
!12652 = !DILocation(line: 4180, column: 13, scope: !12651)
!12653 = !DILocation(line: 4180, column: 17, scope: !12651)
!12654 = !DILocation(line: 4181, column: 3, scope: !12651)
!12655 = !DILocation(line: 4181, column: 7, scope: !12651)
!12656 = !DILocation(line: 4181, column: 12, scope: !12651)
!12657 = !DILocation(line: 4182, column: 2, scope: !12651)
!12658 = !DILocation(line: 4184, column: 22, scope: !12633)
!12659 = !DILocation(line: 4184, column: 26, scope: !12633)
!12660 = !DILocation(line: 4184, column: 30, scope: !12633)
!12661 = !DILocation(line: 4184, column: 2, scope: !12633)
!12662 = !DILocation(line: 4187, column: 2, scope: !12633)
!12663 = !DILocation(line: 4187, column: 6, scope: !12633)
!12664 = !DILocation(line: 4187, column: 21, scope: !12633)
!12665 = !DILocation(line: 4187, column: 25, scope: !12633)
!12666 = !DILocation(line: 4192, column: 24, scope: !12633)
!12667 = !DILocation(line: 4192, column: 2, scope: !12633)
!12668 = !DILocation(line: 4194, column: 23, scope: !12633)
!12669 = !DILocation(line: 4194, column: 27, scope: !12633)
!12670 = !DILocation(line: 4194, column: 2, scope: !12633)
!12671 = !DILocation(line: 4196, column: 2, scope: !12633)
!12672 = !DILocation(line: 4196, column: 12, scope: !12633)
!12673 = !DILocation(line: 4197, column: 1, scope: !12633)
!12674 = distinct !DISubprogram(name: "radial_control_get_properties", scope: !3, file: !3, line: 4032, type: !3871, scopeLine: 4033, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!12675 = !DILocalVariable(name: "C", arg: 1, scope: !12674, file: !3, line: 4032, type: !1414)
!12676 = !DILocation(line: 4032, column: 52, scope: !12674)
!12677 = !DILocalVariable(name: "op", arg: 2, scope: !12674, file: !3, line: 4032, type: !2965)
!12678 = !DILocation(line: 4032, column: 67, scope: !12674)
!12679 = !DILocalVariable(name: "rc", scope: !12674, file: !3, line: 4034, type: !12120)
!12680 = !DILocation(line: 4034, column: 17, scope: !12674)
!12681 = !DILocation(line: 4034, column: 22, scope: !12674)
!12682 = !DILocation(line: 4034, column: 26, scope: !12674)
!12683 = !DILocalVariable(name: "ctx_ptr", scope: !12674, file: !3, line: 4035, type: !4319)
!12684 = !DILocation(line: 4035, column: 13, scope: !12674)
!12685 = !DILocalVariable(name: "use_secondary_ptr", scope: !12674, file: !3, line: 4035, type: !4319)
!12686 = !DILocation(line: 4035, column: 22, scope: !12674)
!12687 = !DILocalVariable(name: "use_secondary_prop", scope: !12674, file: !3, line: 4036, type: !1392)
!12688 = !DILocation(line: 4036, column: 15, scope: !12674)
!12689 = !DILocalVariable(name: "data_path", scope: !12674, file: !3, line: 4037, type: !2979)
!12690 = !DILocation(line: 4037, column: 14, scope: !12674)
!12691 = !DILocation(line: 4039, column: 41, scope: !12674)
!12692 = !DILocation(line: 4039, column: 2, scope: !12674)
!12693 = !DILocation(line: 4042, column: 41, scope: !12694)
!12694 = distinct !DILexicalBlock(scope: !12674, file: !3, line: 4042, column: 6)
!12695 = !DILocation(line: 4042, column: 7, scope: !12694)
!12696 = !DILocation(line: 4042, column: 6, scope: !12674)
!12697 = !DILocation(line: 4047, column: 3, scope: !12698)
!12698 = distinct !DILexicalBlock(scope: !12694, file: !3, line: 4046, column: 2)
!12699 = !DILocation(line: 4050, column: 7, scope: !12700)
!12700 = distinct !DILexicalBlock(scope: !12701, file: !3, line: 4050, column: 7)
!12701 = distinct !DILexicalBlock(scope: !12694, file: !3, line: 4049, column: 7)
!12702 = !DILocation(line: 4050, column: 26, scope: !12700)
!12703 = !DILocation(line: 4051, column: 52, scope: !12700)
!12704 = !DILocation(line: 4051, column: 7, scope: !12700)
!12705 = !DILocation(line: 4050, column: 7, scope: !12701)
!12706 = !DILocation(line: 4053, column: 14, scope: !12707)
!12707 = distinct !DILexicalBlock(scope: !12700, file: !3, line: 4052, column: 3)
!12708 = !DILocation(line: 4054, column: 3, scope: !12707)
!12709 = !DILocation(line: 4056, column: 14, scope: !12710)
!12710 = distinct !DILexicalBlock(scope: !12700, file: !3, line: 4055, column: 8)
!12711 = !DILocation(line: 4060, column: 41, scope: !12712)
!12712 = distinct !DILexicalBlock(scope: !12674, file: !3, line: 4060, column: 6)
!12713 = !DILocation(line: 4060, column: 45, scope: !12712)
!12714 = !DILocation(line: 4060, column: 57, scope: !12712)
!12715 = !DILocation(line: 4060, column: 61, scope: !12712)
!12716 = !DILocation(line: 4060, column: 67, scope: !12712)
!12717 = !DILocation(line: 4060, column: 71, scope: !12712)
!12718 = !DILocation(line: 4060, column: 7, scope: !12712)
!12719 = !DILocation(line: 4060, column: 6, scope: !12674)
!12720 = !DILocation(line: 4061, column: 3, scope: !12712)
!12721 = !DILocation(line: 4064, column: 7, scope: !12722)
!12722 = distinct !DILexicalBlock(scope: !12674, file: !3, line: 4064, column: 6)
!12723 = !DILocation(line: 4064, column: 11, scope: !12722)
!12724 = !DILocation(line: 4064, column: 6, scope: !12674)
!12725 = !DILocation(line: 4065, column: 3, scope: !12722)
!12726 = !DILocation(line: 4067, column: 41, scope: !12727)
!12727 = distinct !DILexicalBlock(scope: !12674, file: !3, line: 4067, column: 6)
!12728 = !DILocation(line: 4067, column: 63, scope: !12727)
!12729 = !DILocation(line: 4067, column: 67, scope: !12727)
!12730 = !DILocation(line: 4067, column: 77, scope: !12727)
!12731 = !DILocation(line: 4067, column: 81, scope: !12727)
!12732 = !DILocation(line: 4067, column: 7, scope: !12727)
!12733 = !DILocation(line: 4067, column: 6, scope: !12674)
!12734 = !DILocation(line: 4068, column: 3, scope: !12727)
!12735 = !DILocation(line: 4069, column: 41, scope: !12736)
!12736 = distinct !DILexicalBlock(scope: !12674, file: !3, line: 4069, column: 6)
!12737 = !DILocation(line: 4069, column: 60, scope: !12736)
!12738 = !DILocation(line: 4069, column: 64, scope: !12736)
!12739 = !DILocation(line: 4069, column: 74, scope: !12736)
!12740 = !DILocation(line: 4069, column: 78, scope: !12736)
!12741 = !DILocation(line: 4069, column: 7, scope: !12736)
!12742 = !DILocation(line: 4069, column: 6, scope: !12674)
!12743 = !DILocation(line: 4070, column: 3, scope: !12736)
!12744 = !DILocation(line: 4071, column: 41, scope: !12745)
!12745 = distinct !DILexicalBlock(scope: !12674, file: !3, line: 4071, column: 6)
!12746 = !DILocation(line: 4071, column: 65, scope: !12745)
!12747 = !DILocation(line: 4071, column: 69, scope: !12745)
!12748 = !DILocation(line: 4071, column: 84, scope: !12745)
!12749 = !DILocation(line: 4071, column: 88, scope: !12745)
!12750 = !DILocation(line: 4071, column: 7, scope: !12745)
!12751 = !DILocation(line: 4071, column: 6, scope: !12674)
!12752 = !DILocation(line: 4072, column: 3, scope: !12745)
!12753 = !DILocation(line: 4077, column: 41, scope: !12754)
!12754 = distinct !DILexicalBlock(scope: !12674, file: !3, line: 4077, column: 6)
!12755 = !DILocation(line: 4078, column: 32, scope: !12754)
!12756 = !DILocation(line: 4078, column: 36, scope: !12754)
!12757 = !DILocation(line: 4078, column: 47, scope: !12754)
!12758 = !DILocation(line: 4078, column: 51, scope: !12754)
!12759 = !DILocation(line: 4077, column: 7, scope: !12754)
!12760 = !DILocation(line: 4077, column: 6, scope: !12674)
!12761 = !DILocation(line: 4081, column: 3, scope: !12762)
!12762 = distinct !DILexicalBlock(scope: !12754, file: !3, line: 4080, column: 2)
!12763 = !DILocation(line: 4084, column: 41, scope: !12764)
!12764 = distinct !DILexicalBlock(scope: !12674, file: !3, line: 4084, column: 6)
!12765 = !DILocation(line: 4084, column: 58, scope: !12764)
!12766 = !DILocation(line: 4084, column: 62, scope: !12764)
!12767 = !DILocation(line: 4084, column: 7, scope: !12764)
!12768 = !DILocation(line: 4084, column: 6, scope: !12674)
!12769 = !DILocation(line: 4085, column: 3, scope: !12764)
!12770 = !DILocation(line: 4086, column: 11, scope: !12771)
!12771 = distinct !DILexicalBlock(scope: !12764, file: !3, line: 4086, column: 11)
!12772 = !DILocation(line: 4086, column: 15, scope: !12771)
!12773 = !DILocation(line: 4086, column: 28, scope: !12771)
!12774 = !DILocation(line: 4086, column: 11, scope: !12764)
!12775 = !DILocation(line: 4088, column: 25, scope: !12776)
!12776 = distinct !DILexicalBlock(scope: !12777, file: !3, line: 4088, column: 7)
!12777 = distinct !DILexicalBlock(scope: !12771, file: !3, line: 4086, column: 34)
!12778 = !DILocation(line: 4088, column: 29, scope: !12776)
!12779 = !DILocation(line: 4088, column: 42, scope: !12776)
!12780 = !DILocation(line: 4088, column: 8, scope: !12776)
!12781 = !DILocation(line: 4088, column: 7, scope: !12777)
!12782 = !DILocation(line: 4089, column: 15, scope: !12783)
!12783 = distinct !DILexicalBlock(scope: !12776, file: !3, line: 4088, column: 49)
!12784 = !DILocation(line: 4089, column: 19, scope: !12783)
!12785 = !DILocation(line: 4089, column: 4, scope: !12783)
!12786 = !DILocation(line: 4090, column: 4, scope: !12783)
!12787 = !DILocation(line: 4092, column: 2, scope: !12777)
!12788 = !DILocation(line: 4094, column: 42, scope: !12674)
!12789 = !DILocation(line: 4094, column: 46, scope: !12674)
!12790 = !DILocation(line: 4094, column: 26, scope: !12674)
!12791 = !DILocation(line: 4094, column: 2, scope: !12674)
!12792 = !DILocation(line: 4094, column: 6, scope: !12674)
!12793 = !DILocation(line: 4094, column: 24, scope: !12674)
!12794 = !DILocation(line: 4096, column: 2, scope: !12674)
!12795 = !DILocation(line: 4097, column: 1, scope: !12674)
!12796 = distinct !DISubprogram(name: "radial_control_set_initial_mouse", scope: !3, file: !3, line: 3752, type: !12797, scopeLine: 3753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!12797 = !DISubroutineType(types: !12798)
!12798 = !{null, !12120, !3946}
!12799 = !DILocalVariable(name: "rc", arg: 1, scope: !12796, file: !3, line: 3752, type: !12120)
!12800 = !DILocation(line: 3752, column: 61, scope: !12796)
!12801 = !DILocalVariable(name: "event", arg: 2, scope: !12796, file: !3, line: 3752, type: !3946)
!12802 = !DILocation(line: 3752, column: 80, scope: !12796)
!12803 = !DILocalVariable(name: "d", scope: !12796, file: !3, line: 3754, type: !1763)
!12804 = !DILocation(line: 3754, column: 8, scope: !12796)
!12805 = !DILocalVariable(name: "zoom", scope: !12796, file: !3, line: 3755, type: !1763)
!12806 = !DILocation(line: 3755, column: 8, scope: !12796)
!12807 = !DILocation(line: 3757, column: 25, scope: !12796)
!12808 = !DILocation(line: 3757, column: 32, scope: !12796)
!12809 = !DILocation(line: 3757, column: 2, scope: !12796)
!12810 = !DILocation(line: 3757, column: 6, scope: !12796)
!12811 = !DILocation(line: 3757, column: 23, scope: !12796)
!12812 = !DILocation(line: 3758, column: 25, scope: !12796)
!12813 = !DILocation(line: 3758, column: 32, scope: !12796)
!12814 = !DILocation(line: 3758, column: 2, scope: !12796)
!12815 = !DILocation(line: 3758, column: 6, scope: !12796)
!12816 = !DILocation(line: 3758, column: 23, scope: !12796)
!12817 = !DILocation(line: 3760, column: 10, scope: !12796)
!12818 = !DILocation(line: 3760, column: 14, scope: !12796)
!12819 = !DILocation(line: 3760, column: 2, scope: !12796)
!12820 = !DILocation(line: 3764, column: 11, scope: !12821)
!12821 = distinct !DILexicalBlock(scope: !12796, file: !3, line: 3760, column: 23)
!12822 = !DILocation(line: 3764, column: 15, scope: !12821)
!12823 = !DILocation(line: 3764, column: 4, scope: !12821)
!12824 = !DILocation(line: 3764, column: 9, scope: !12821)
!12825 = !DILocation(line: 3765, column: 4, scope: !12821)
!12826 = !DILocation(line: 3767, column: 16, scope: !12821)
!12827 = !DILocation(line: 3767, column: 20, scope: !12821)
!12828 = !DILocation(line: 3767, column: 14, scope: !12821)
!12829 = !DILocation(line: 3767, column: 35, scope: !12821)
!12830 = !DILocation(line: 3767, column: 69, scope: !12821)
!12831 = !DILocation(line: 3767, column: 4, scope: !12821)
!12832 = !DILocation(line: 3767, column: 9, scope: !12821)
!12833 = !DILocation(line: 3768, column: 4, scope: !12821)
!12834 = !DILocation(line: 3770, column: 49, scope: !12821)
!12835 = !DILocation(line: 3770, column: 53, scope: !12821)
!12836 = !DILocation(line: 3770, column: 44, scope: !12821)
!12837 = !DILocation(line: 3770, column: 42, scope: !12821)
!12838 = !DILocation(line: 3770, column: 4, scope: !12821)
!12839 = !DILocation(line: 3770, column: 9, scope: !12821)
!12840 = !DILocation(line: 3771, column: 49, scope: !12821)
!12841 = !DILocation(line: 3771, column: 53, scope: !12821)
!12842 = !DILocation(line: 3771, column: 44, scope: !12821)
!12843 = !DILocation(line: 3771, column: 42, scope: !12821)
!12844 = !DILocation(line: 3771, column: 4, scope: !12821)
!12845 = !DILocation(line: 3771, column: 9, scope: !12821)
!12846 = !DILocation(line: 3772, column: 4, scope: !12821)
!12847 = !DILocation(line: 3774, column: 4, scope: !12821)
!12848 = !DILocation(line: 3777, column: 6, scope: !12849)
!12849 = distinct !DILexicalBlock(scope: !12796, file: !3, line: 3777, column: 6)
!12850 = !DILocation(line: 3777, column: 10, scope: !12849)
!12851 = !DILocation(line: 3777, column: 6, scope: !12796)
!12852 = !DILocation(line: 3778, column: 33, scope: !12853)
!12853 = distinct !DILexicalBlock(scope: !12849, file: !3, line: 3777, column: 21)
!12854 = !DILocation(line: 3778, column: 37, scope: !12853)
!12855 = !DILocation(line: 3778, column: 47, scope: !12853)
!12856 = !DILocation(line: 3778, column: 51, scope: !12853)
!12857 = !DILocation(line: 3778, column: 62, scope: !12853)
!12858 = !DILocation(line: 3778, column: 3, scope: !12853)
!12859 = !DILocation(line: 3779, column: 11, scope: !12853)
!12860 = !DILocation(line: 3779, column: 3, scope: !12853)
!12861 = !DILocation(line: 3779, column: 8, scope: !12853)
!12862 = !DILocation(line: 3780, column: 11, scope: !12853)
!12863 = !DILocation(line: 3780, column: 3, scope: !12853)
!12864 = !DILocation(line: 3780, column: 8, scope: !12853)
!12865 = !DILocation(line: 3781, column: 2, scope: !12853)
!12866 = !DILocation(line: 3783, column: 26, scope: !12796)
!12867 = !DILocation(line: 3783, column: 2, scope: !12796)
!12868 = !DILocation(line: 3783, column: 6, scope: !12796)
!12869 = !DILocation(line: 3783, column: 23, scope: !12796)
!12870 = !DILocation(line: 3784, column: 26, scope: !12796)
!12871 = !DILocation(line: 3784, column: 2, scope: !12796)
!12872 = !DILocation(line: 3784, column: 6, scope: !12796)
!12873 = !DILocation(line: 3784, column: 23, scope: !12796)
!12874 = !DILocation(line: 3785, column: 1, scope: !12796)
!12875 = distinct !DISubprogram(name: "radial_control_set_tex", scope: !3, file: !3, line: 3787, type: !12876, scopeLine: 3788, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!12876 = !DISubroutineType(types: !12877)
!12877 = !{null, !12120}
!12878 = !DILocalVariable(name: "rc", arg: 1, scope: !12875, file: !3, line: 3787, type: !12120)
!12879 = !DILocation(line: 3787, column: 51, scope: !12875)
!12880 = !DILocalVariable(name: "ibuf", scope: !12875, file: !3, line: 3789, type: !11648)
!12881 = !DILocation(line: 3789, column: 9, scope: !12875)
!12882 = !DILocation(line: 3791, column: 30, scope: !12875)
!12883 = !DILocation(line: 3791, column: 34, scope: !12875)
!12884 = !DILocation(line: 3791, column: 47, scope: !12875)
!12885 = !DILocation(line: 3791, column: 10, scope: !12875)
!12886 = !DILocation(line: 3791, column: 2, scope: !12875)
!12887 = !DILocation(line: 3793, column: 51, scope: !12888)
!12888 = distinct !DILexicalBlock(scope: !12889, file: !3, line: 3793, column: 8)
!12889 = distinct !DILexicalBlock(scope: !12875, file: !3, line: 3791, column: 54)
!12890 = !DILocation(line: 3793, column: 55, scope: !12888)
!12891 = !DILocation(line: 3793, column: 68, scope: !12888)
!12892 = !DILocation(line: 3793, column: 74, scope: !12888)
!12893 = !DILocation(line: 3793, column: 78, scope: !12888)
!12894 = !DILocation(line: 3793, column: 16, scope: !12888)
!12895 = !DILocation(line: 3793, column: 14, scope: !12888)
!12896 = !DILocation(line: 3793, column: 8, scope: !12889)
!12897 = !DILocation(line: 3794, column: 23, scope: !12898)
!12898 = distinct !DILexicalBlock(scope: !12888, file: !3, line: 3793, column: 99)
!12899 = !DILocation(line: 3794, column: 27, scope: !12898)
!12900 = !DILocation(line: 3794, column: 5, scope: !12898)
!12901 = !DILocation(line: 3795, column: 34, scope: !12898)
!12902 = !DILocation(line: 3795, column: 38, scope: !12898)
!12903 = !DILocation(line: 3795, column: 5, scope: !12898)
!12904 = !DILocation(line: 3796, column: 46, scope: !12898)
!12905 = !DILocation(line: 3796, column: 52, scope: !12898)
!12906 = !DILocation(line: 3796, column: 55, scope: !12898)
!12907 = !DILocation(line: 3796, column: 61, scope: !12898)
!12908 = !DILocation(line: 3797, column: 38, scope: !12898)
!12909 = !DILocation(line: 3797, column: 44, scope: !12898)
!12910 = !DILocation(line: 3796, column: 5, scope: !12898)
!12911 = !DILocation(line: 3798, column: 5, scope: !12898)
!12912 = !DILocation(line: 3798, column: 15, scope: !12898)
!12913 = !DILocation(line: 3798, column: 21, scope: !12898)
!12914 = !DILocation(line: 3799, column: 5, scope: !12898)
!12915 = !DILocation(line: 3799, column: 15, scope: !12898)
!12916 = !DILocation(line: 3800, column: 4, scope: !12898)
!12917 = !DILocation(line: 3801, column: 4, scope: !12889)
!12918 = !DILocation(line: 3803, column: 4, scope: !12889)
!12919 = !DILocation(line: 3805, column: 1, scope: !12875)
!12920 = distinct !DISubprogram(name: "BLI_listbase_clear", scope: !12921, file: !12921, line: 89, type: !12922, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!12921 = !DIFile(filename: "blender/source/blender/blenlib/BLI_listbase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!12922 = !DISubroutineType(types: !12923)
!12923 = !{null, !12924}
!12924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1488, size: 64)
!12925 = !DILocalVariable(name: "lb", arg: 1, scope: !12920, file: !12921, line: 89, type: !12924)
!12926 = !DILocation(line: 89, column: 53, scope: !12920)
!12927 = !DILocation(line: 89, column: 71, scope: !12920)
!12928 = !DILocation(line: 89, column: 75, scope: !12920)
!12929 = !DILocation(line: 89, column: 80, scope: !12920)
!12930 = !DILocation(line: 89, column: 59, scope: !12920)
!12931 = !DILocation(line: 89, column: 63, scope: !12920)
!12932 = !DILocation(line: 89, column: 69, scope: !12920)
!12933 = !DILocation(line: 89, column: 93, scope: !12920)
!12934 = distinct !DISubprogram(name: "radial_control_paint_cursor", scope: !3, file: !3, line: 3854, type: !1412, scopeLine: 3855, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!12935 = !DILocalVariable(name: "C", arg: 1, scope: !12934, file: !3, line: 3854, type: !1414)
!12936 = !DILocation(line: 3854, column: 51, scope: !12934)
!12937 = !DILocalVariable(name: "x", arg: 2, scope: !12934, file: !3, line: 3854, type: !1224)
!12938 = !DILocation(line: 3854, column: 58, scope: !12934)
!12939 = !DILocalVariable(name: "y", arg: 3, scope: !12934, file: !3, line: 3854, type: !1224)
!12940 = !DILocation(line: 3854, column: 65, scope: !12934)
!12941 = !DILocalVariable(name: "customdata", arg: 4, scope: !12934, file: !3, line: 3854, type: !1391)
!12942 = !DILocation(line: 3854, column: 74, scope: !12934)
!12943 = !DILocalVariable(name: "rc", scope: !12934, file: !3, line: 3856, type: !12120)
!12944 = !DILocation(line: 3856, column: 17, scope: !12934)
!12945 = !DILocation(line: 3856, column: 22, scope: !12934)
!12946 = !DILocalVariable(name: "ar", scope: !12934, file: !3, line: 3857, type: !3259)
!12947 = !DILocation(line: 3857, column: 11, scope: !12934)
!12948 = !DILocation(line: 3857, column: 30, scope: !12934)
!12949 = !DILocation(line: 3857, column: 16, scope: !12934)
!12950 = !DILocalVariable(name: "style", scope: !12934, file: !3, line: 3858, type: !6326)
!12951 = !DILocation(line: 3858, column: 11, scope: !12934)
!12952 = !DILocation(line: 3858, column: 19, scope: !12934)
!12953 = !DILocalVariable(name: "fstyle", scope: !12934, file: !3, line: 3859, type: !12954)
!12954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12955, size: 64)
!12955 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !6335)
!12956 = !DILocation(line: 3859, column: 21, scope: !12934)
!12957 = !DILocation(line: 3859, column: 31, scope: !12934)
!12958 = !DILocation(line: 3859, column: 38, scope: !12934)
!12959 = !DILocalVariable(name: "fontid", scope: !12934, file: !3, line: 3860, type: !1419)
!12960 = !DILocation(line: 3860, column: 12, scope: !12934)
!12961 = !DILocation(line: 3860, column: 21, scope: !12934)
!12962 = !DILocation(line: 3860, column: 29, scope: !12934)
!12963 = !DILocalVariable(name: "fstyle_points", scope: !12934, file: !3, line: 3861, type: !1460)
!12964 = !DILocation(line: 3861, column: 8, scope: !12934)
!12965 = !DILocation(line: 3861, column: 24, scope: !12934)
!12966 = !DILocation(line: 3861, column: 32, scope: !12934)
!12967 = !DILocalVariable(name: "str", scope: !12934, file: !3, line: 3862, type: !2544)
!12968 = !DILocation(line: 3862, column: 7, scope: !12934)
!12969 = !DILocalVariable(name: "strdrawlen", scope: !12934, file: !3, line: 3863, type: !1460)
!12970 = !DILocation(line: 3863, column: 8, scope: !12934)
!12971 = !DILocalVariable(name: "strwidth", scope: !12934, file: !3, line: 3864, type: !1537)
!12972 = !DILocation(line: 3864, column: 8, scope: !12934)
!12973 = !DILocalVariable(name: "strheight", scope: !12934, file: !3, line: 3864, type: !1537)
!12974 = !DILocation(line: 3864, column: 18, scope: !12934)
!12975 = !DILocalVariable(name: "r1", scope: !12934, file: !3, line: 3865, type: !1537)
!12976 = !DILocation(line: 3865, column: 8, scope: !12934)
!12977 = !DILocalVariable(name: "r2", scope: !12934, file: !3, line: 3865, type: !1537)
!12978 = !DILocation(line: 3865, column: 19, scope: !12934)
!12979 = !DILocalVariable(name: "rmin", scope: !12934, file: !3, line: 3865, type: !1537)
!12980 = !DILocation(line: 3865, column: 30, scope: !12934)
!12981 = !DILocalVariable(name: "tex_radius", scope: !12934, file: !3, line: 3865, type: !1537)
!12982 = !DILocation(line: 3865, column: 42, scope: !12934)
!12983 = !DILocalVariable(name: "alpha", scope: !12934, file: !3, line: 3865, type: !1537)
!12984 = !DILocation(line: 3865, column: 54, scope: !12934)
!12985 = !DILocalVariable(name: "zoom", scope: !12934, file: !3, line: 3866, type: !1763)
!12986 = !DILocation(line: 3866, column: 8, scope: !12934)
!12987 = !DILocalVariable(name: "col", scope: !12934, file: !3, line: 3866, type: !1572)
!12988 = !DILocation(line: 3866, column: 17, scope: !12934)
!12989 = !DILocation(line: 3868, column: 10, scope: !12934)
!12990 = !DILocation(line: 3868, column: 14, scope: !12934)
!12991 = !DILocation(line: 3868, column: 2, scope: !12934)
!12992 = !DILocation(line: 3872, column: 9, scope: !12993)
!12993 = distinct !DILexicalBlock(scope: !12934, file: !3, line: 3868, column: 23)
!12994 = !DILocation(line: 3872, column: 13, scope: !12993)
!12995 = !DILocation(line: 3872, column: 7, scope: !12993)
!12996 = !DILocation(line: 3873, column: 9, scope: !12993)
!12997 = !DILocation(line: 3873, column: 13, scope: !12993)
!12998 = !DILocation(line: 3873, column: 7, scope: !12993)
!12999 = !DILocation(line: 3874, column: 17, scope: !12993)
!13000 = !DILocation(line: 3874, column: 15, scope: !12993)
!13001 = !DILocation(line: 3875, column: 10, scope: !12993)
!13002 = !DILocation(line: 3876, column: 4, scope: !12993)
!13003 = !DILocation(line: 3878, column: 14, scope: !12993)
!13004 = !DILocation(line: 3878, column: 18, scope: !12993)
!13005 = !DILocation(line: 3878, column: 12, scope: !12993)
!13006 = !DILocation(line: 3878, column: 33, scope: !12993)
!13007 = !DILocation(line: 3878, column: 67, scope: !12993)
!13008 = !DILocation(line: 3878, column: 7, scope: !12993)
!13009 = !DILocation(line: 3879, column: 20, scope: !12993)
!13010 = !DILocation(line: 3879, column: 7, scope: !12993)
!13011 = !DILocation(line: 3880, column: 9, scope: !12993)
!13012 = !DILocation(line: 3881, column: 12, scope: !12993)
!13013 = !DILocation(line: 3881, column: 16, scope: !12993)
!13014 = !DILocation(line: 3881, column: 30, scope: !12993)
!13015 = !DILocation(line: 3881, column: 37, scope: !12993)
!13016 = !DILocation(line: 3881, column: 10, scope: !12993)
!13017 = !DILocation(line: 3882, column: 17, scope: !12993)
!13018 = !DILocation(line: 3882, column: 50, scope: !12993)
!13019 = !DILocation(line: 3882, column: 54, scope: !12993)
!13020 = !DILocation(line: 3882, column: 4, scope: !12993)
!13021 = !DILocation(line: 3883, column: 33, scope: !12993)
!13022 = !DILocation(line: 3883, column: 17, scope: !12993)
!13023 = !DILocation(line: 3883, column: 15, scope: !12993)
!13024 = !DILocation(line: 3884, column: 4, scope: !12993)
!13025 = !DILocation(line: 3886, column: 25, scope: !12993)
!13026 = !DILocation(line: 3886, column: 12, scope: !12993)
!13027 = !DILocation(line: 3886, column: 7, scope: !12993)
!13028 = !DILocation(line: 3887, column: 10, scope: !12993)
!13029 = !DILocation(line: 3888, column: 9, scope: !12993)
!13030 = !DILocation(line: 3889, column: 17, scope: !12993)
!13031 = !DILocation(line: 3889, column: 48, scope: !12993)
!13032 = !DILocation(line: 3889, column: 4, scope: !12993)
!13033 = !DILocation(line: 3890, column: 33, scope: !12993)
!13034 = !DILocation(line: 3890, column: 17, scope: !12993)
!13035 = !DILocation(line: 3890, column: 15, scope: !12993)
!13036 = !DILocation(line: 3891, column: 4, scope: !12993)
!13037 = !DILocation(line: 3893, column: 15, scope: !12993)
!13038 = !DILocation(line: 3894, column: 10, scope: !12993)
!13039 = !DILocation(line: 3895, column: 4, scope: !12993)
!13040 = !DILocation(line: 3899, column: 10, scope: !12934)
!13041 = !DILocation(line: 3899, column: 5, scope: !12934)
!13042 = !DILocation(line: 3900, column: 10, scope: !12934)
!13043 = !DILocation(line: 3900, column: 5, scope: !12934)
!13044 = !DILocation(line: 3901, column: 18, scope: !12934)
!13045 = !DILocation(line: 3901, column: 13, scope: !12934)
!13046 = !DILocation(line: 3904, column: 6, scope: !12934)
!13047 = !DILocation(line: 3904, column: 10, scope: !12934)
!13048 = !DILocation(line: 3904, column: 29, scope: !12934)
!13049 = !DILocation(line: 3904, column: 33, scope: !12934)
!13050 = !DILocation(line: 3904, column: 40, scope: !12934)
!13051 = !DILocation(line: 3904, column: 27, scope: !12934)
!13052 = !DILocation(line: 3904, column: 4, scope: !12934)
!13053 = !DILocation(line: 3905, column: 6, scope: !12934)
!13054 = !DILocation(line: 3905, column: 10, scope: !12934)
!13055 = !DILocation(line: 3905, column: 29, scope: !12934)
!13056 = !DILocation(line: 3905, column: 33, scope: !12934)
!13057 = !DILocation(line: 3905, column: 40, scope: !12934)
!13058 = !DILocation(line: 3905, column: 27, scope: !12934)
!13059 = !DILocation(line: 3905, column: 4, scope: !12934)
!13060 = !DILocation(line: 3906, column: 22, scope: !12934)
!13061 = !DILocation(line: 3906, column: 15, scope: !12934)
!13062 = !DILocation(line: 3906, column: 32, scope: !12934)
!13063 = !DILocation(line: 3906, column: 25, scope: !12934)
!13064 = !DILocation(line: 3906, column: 2, scope: !12934)
!13065 = !DILocation(line: 3908, column: 2, scope: !12934)
!13066 = !DILocation(line: 3909, column: 2, scope: !12934)
!13067 = !DILocation(line: 3912, column: 6, scope: !13068)
!13068 = distinct !DILexicalBlock(scope: !12934, file: !3, line: 3912, column: 6)
!13069 = !DILocation(line: 3912, column: 10, scope: !13068)
!13070 = !DILocation(line: 3912, column: 6, scope: !12934)
!13071 = !DILocation(line: 3913, column: 33, scope: !13072)
!13072 = distinct !DILexicalBlock(scope: !13068, file: !3, line: 3912, column: 21)
!13073 = !DILocation(line: 3913, column: 37, scope: !13072)
!13074 = !DILocation(line: 3913, column: 47, scope: !13072)
!13075 = !DILocation(line: 3913, column: 51, scope: !13072)
!13076 = !DILocation(line: 3913, column: 62, scope: !13072)
!13077 = !DILocation(line: 3913, column: 3, scope: !13072)
!13078 = !DILocation(line: 3914, column: 12, scope: !13072)
!13079 = !DILocation(line: 3914, column: 21, scope: !13072)
!13080 = !DILocation(line: 3914, column: 3, scope: !13072)
!13081 = !DILocation(line: 3915, column: 2, scope: !13072)
!13082 = !DILocation(line: 3918, column: 27, scope: !12934)
!13083 = !DILocation(line: 3918, column: 31, scope: !12934)
!13084 = !DILocation(line: 3918, column: 43, scope: !12934)
!13085 = !DILocation(line: 3918, column: 2, scope: !12934)
!13086 = !DILocation(line: 3921, column: 6, scope: !13087)
!13087 = distinct !DILexicalBlock(scope: !12934, file: !3, line: 3921, column: 6)
!13088 = !DILocation(line: 3921, column: 10, scope: !13087)
!13089 = !DILocation(line: 3921, column: 6, scope: !12934)
!13090 = !DILocation(line: 3922, column: 33, scope: !13087)
!13091 = !DILocation(line: 3922, column: 37, scope: !13087)
!13092 = !DILocation(line: 3922, column: 46, scope: !13087)
!13093 = !DILocation(line: 3922, column: 50, scope: !13087)
!13094 = !DILocation(line: 3922, column: 60, scope: !13087)
!13095 = !DILocation(line: 3922, column: 3, scope: !13087)
!13096 = !DILocation(line: 3923, column: 12, scope: !12934)
!13097 = !DILocation(line: 3923, column: 20, scope: !12934)
!13098 = !DILocation(line: 3923, column: 28, scope: !12934)
!13099 = !DILocation(line: 3923, column: 2, scope: !12934)
!13100 = !DILocation(line: 3925, column: 6, scope: !13101)
!13101 = distinct !DILexicalBlock(scope: !12934, file: !3, line: 3925, column: 6)
!13102 = !DILocation(line: 3925, column: 10, scope: !13101)
!13103 = !DILocation(line: 3925, column: 18, scope: !13101)
!13104 = !DILocation(line: 3925, column: 6, scope: !12934)
!13105 = !DILocation(line: 3926, column: 3, scope: !13106)
!13106 = distinct !DILexicalBlock(scope: !13101, file: !3, line: 3925, column: 33)
!13107 = !DILocation(line: 3928, column: 13, scope: !13106)
!13108 = !DILocation(line: 3928, column: 3, scope: !13106)
!13109 = !DILocation(line: 3929, column: 3, scope: !13106)
!13110 = !DILocation(line: 3931, column: 13, scope: !13106)
!13111 = !DILocation(line: 3931, column: 3, scope: !13106)
!13112 = !DILocation(line: 3932, column: 3, scope: !13106)
!13113 = !DILocation(line: 3933, column: 3, scope: !13106)
!13114 = !DILocation(line: 3934, column: 2, scope: !13106)
!13115 = !DILocation(line: 3937, column: 50, scope: !12934)
!13116 = !DILocation(line: 3937, column: 2, scope: !12934)
!13117 = !DILocation(line: 3938, column: 50, scope: !12934)
!13118 = !DILocation(line: 3938, column: 2, scope: !12934)
!13119 = !DILocation(line: 3939, column: 6, scope: !13120)
!13120 = distinct !DILexicalBlock(scope: !12934, file: !3, line: 3939, column: 6)
!13121 = !DILocation(line: 3939, column: 11, scope: !13120)
!13122 = !DILocation(line: 3939, column: 6, scope: !12934)
!13123 = !DILocation(line: 3940, column: 51, scope: !13120)
!13124 = !DILocation(line: 3940, column: 3, scope: !13120)
!13125 = !DILocation(line: 3942, column: 11, scope: !12934)
!13126 = !DILocation(line: 3942, column: 25, scope: !12934)
!13127 = !DILocation(line: 3942, column: 23, scope: !12934)
!13128 = !DILocation(line: 3942, column: 19, scope: !12934)
!13129 = !DILocation(line: 3942, column: 49, scope: !12934)
!13130 = !DILocation(line: 3942, column: 47, scope: !12934)
!13131 = !DILocation(line: 3942, column: 45, scope: !12934)
!13132 = !DILocation(line: 3942, column: 40, scope: !12934)
!13133 = !DILocation(line: 3942, column: 2, scope: !12934)
!13134 = !DILocation(line: 3943, column: 23, scope: !12934)
!13135 = !DILocation(line: 3943, column: 31, scope: !12934)
!13136 = !DILocation(line: 3943, column: 36, scope: !12934)
!13137 = !DILocation(line: 3943, column: 2, scope: !12934)
!13138 = !DILocation(line: 3944, column: 13, scope: !12934)
!13139 = !DILocation(line: 3944, column: 2, scope: !12934)
!13140 = !DILocation(line: 3945, column: 13, scope: !12934)
!13141 = !DILocation(line: 3945, column: 2, scope: !12934)
!13142 = !DILocation(line: 3946, column: 20, scope: !12934)
!13143 = !DILocation(line: 3946, column: 2, scope: !12934)
!13144 = !DILocation(line: 3949, column: 15, scope: !12934)
!13145 = !DILocation(line: 3949, column: 31, scope: !12934)
!13146 = !DILocation(line: 3949, column: 29, scope: !12934)
!13147 = !DILocation(line: 3949, column: 49, scope: !12934)
!13148 = !DILocation(line: 3949, column: 47, scope: !12934)
!13149 = !DILocation(line: 3949, column: 2, scope: !12934)
!13150 = !DILocation(line: 3950, column: 11, scope: !12934)
!13151 = !DILocation(line: 3950, column: 19, scope: !12934)
!13152 = !DILocation(line: 3950, column: 24, scope: !12934)
!13153 = !DILocation(line: 3950, column: 2, scope: !12934)
!13154 = !DILocation(line: 3952, column: 14, scope: !12934)
!13155 = !DILocation(line: 3952, column: 2, scope: !12934)
!13156 = !DILocation(line: 3954, column: 2, scope: !12934)
!13157 = !DILocation(line: 3955, column: 2, scope: !12934)
!13158 = !DILocation(line: 3956, column: 1, scope: !12934)
!13159 = distinct !DISubprogram(name: "radial_control_get_path", scope: !3, file: !3, line: 3967, type: !13160, scopeLine: 3970, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!13160 = !DISubroutineType(types: !13161)
!13161 = !{!1224, !4318, !2965, !2979, !4318, !13162, !1224, !13163}
!13162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1392, size: 64)
!13163 = !DIDerivedType(tag: DW_TAG_typedef, name: "RCPropFlags", file: !3, line: 3962, baseType: !1385)
!13164 = !DILocalVariable(name: "ctx_ptr", arg: 1, scope: !13159, file: !3, line: 3967, type: !4318)
!13165 = !DILocation(line: 3967, column: 48, scope: !13159)
!13166 = !DILocalVariable(name: "op", arg: 2, scope: !13159, file: !3, line: 3967, type: !2965)
!13167 = !DILocation(line: 3967, column: 69, scope: !13159)
!13168 = !DILocalVariable(name: "name", arg: 3, scope: !13159, file: !3, line: 3968, type: !2979)
!13169 = !DILocation(line: 3968, column: 48, scope: !13159)
!13170 = !DILocalVariable(name: "r_ptr", arg: 4, scope: !13159, file: !3, line: 3968, type: !4318)
!13171 = !DILocation(line: 3968, column: 66, scope: !13159)
!13172 = !DILocalVariable(name: "r_prop", arg: 5, scope: !13159, file: !3, line: 3969, type: !13162)
!13173 = !DILocation(line: 3969, column: 50, scope: !13159)
!13174 = !DILocalVariable(name: "req_length", arg: 6, scope: !13159, file: !3, line: 3969, type: !1224)
!13175 = !DILocation(line: 3969, column: 62, scope: !13159)
!13176 = !DILocalVariable(name: "flags", arg: 7, scope: !13159, file: !3, line: 3969, type: !13163)
!13177 = !DILocation(line: 3969, column: 86, scope: !13159)
!13178 = !DILocalVariable(name: "unused_prop", scope: !13159, file: !3, line: 3971, type: !1392)
!13179 = !DILocation(line: 3971, column: 15, scope: !13159)
!13180 = !DILocalVariable(name: "len", scope: !13159, file: !3, line: 3972, type: !1224)
!13181 = !DILocation(line: 3972, column: 6, scope: !13159)
!13182 = !DILocalVariable(name: "str", scope: !13159, file: !3, line: 3973, type: !1502)
!13183 = !DILocation(line: 3973, column: 8, scope: !13159)
!13184 = !DILocation(line: 3976, column: 7, scope: !13185)
!13185 = distinct !DILexicalBlock(scope: !13159, file: !3, line: 3976, column: 6)
!13186 = !DILocation(line: 3976, column: 13, scope: !13185)
!13187 = !DILocation(line: 3976, column: 37, scope: !13185)
!13188 = !DILocation(line: 3976, column: 41, scope: !13185)
!13189 = !DILocation(line: 3976, column: 47, scope: !13185)
!13190 = !DILocation(line: 3976, column: 6, scope: !13159)
!13191 = !DILocation(line: 3977, column: 14, scope: !13192)
!13192 = distinct !DILexicalBlock(scope: !13185, file: !3, line: 3976, column: 73)
!13193 = !DILocation(line: 3977, column: 18, scope: !13192)
!13194 = !DILocation(line: 3977, column: 3, scope: !13192)
!13195 = !DILocation(line: 3978, column: 3, scope: !13192)
!13196 = !DILocation(line: 3982, column: 35, scope: !13197)
!13197 = distinct !DILexicalBlock(scope: !13159, file: !3, line: 3982, column: 6)
!13198 = !DILocation(line: 3982, column: 39, scope: !13197)
!13199 = !DILocation(line: 3982, column: 44, scope: !13197)
!13200 = !DILocation(line: 3982, column: 14, scope: !13197)
!13201 = !DILocation(line: 3982, column: 12, scope: !13197)
!13202 = !DILocation(line: 3982, column: 6, scope: !13159)
!13203 = !DILocation(line: 3983, column: 3, scope: !13197)
!13204 = !DILocation(line: 3985, column: 6, scope: !13205)
!13205 = distinct !DILexicalBlock(scope: !13159, file: !3, line: 3985, column: 6)
!13206 = !DILocation(line: 3985, column: 13, scope: !13205)
!13207 = !DILocation(line: 3985, column: 6, scope: !13159)
!13208 = !DILocation(line: 3986, column: 7, scope: !13209)
!13209 = distinct !DILexicalBlock(scope: !13210, file: !3, line: 3986, column: 7)
!13210 = distinct !DILexicalBlock(scope: !13205, file: !3, line: 3985, column: 22)
!13211 = !DILocation(line: 3986, column: 7, scope: !13210)
!13212 = !DILocation(line: 3986, column: 16, scope: !13209)
!13213 = !DILocation(line: 3986, column: 23, scope: !13209)
!13214 = !DILocation(line: 3986, column: 15, scope: !13209)
!13215 = !DILocation(line: 3987, column: 3, scope: !13210)
!13216 = !DILocation(line: 3987, column: 13, scope: !13210)
!13217 = !DILocation(line: 3988, column: 3, scope: !13210)
!13218 = !DILocation(line: 3991, column: 7, scope: !13219)
!13219 = distinct !DILexicalBlock(scope: !13159, file: !3, line: 3991, column: 6)
!13220 = !DILocation(line: 3991, column: 6, scope: !13159)
!13221 = !DILocation(line: 3992, column: 10, scope: !13219)
!13222 = !DILocation(line: 3992, column: 3, scope: !13219)
!13223 = !DILocation(line: 3995, column: 24, scope: !13224)
!13224 = distinct !DILexicalBlock(scope: !13159, file: !3, line: 3995, column: 6)
!13225 = !DILocation(line: 3995, column: 33, scope: !13224)
!13226 = !DILocation(line: 3995, column: 38, scope: !13224)
!13227 = !DILocation(line: 3995, column: 45, scope: !13224)
!13228 = !DILocation(line: 3995, column: 7, scope: !13224)
!13229 = !DILocation(line: 3995, column: 6, scope: !13159)
!13230 = !DILocation(line: 3996, column: 3, scope: !13231)
!13231 = distinct !DILexicalBlock(scope: !13224, file: !3, line: 3995, column: 54)
!13232 = !DILocation(line: 3996, column: 13, scope: !13231)
!13233 = !DILocation(line: 3997, column: 7, scope: !13234)
!13234 = distinct !DILexicalBlock(scope: !13231, file: !3, line: 3997, column: 7)
!13235 = !DILocation(line: 3997, column: 13, scope: !13234)
!13236 = !DILocation(line: 3997, column: 7, scope: !13231)
!13237 = !DILocation(line: 3998, column: 4, scope: !13234)
!13238 = !DILocation(line: 4000, column: 16, scope: !13239)
!13239 = distinct !DILexicalBlock(scope: !13234, file: !3, line: 3999, column: 8)
!13240 = !DILocation(line: 4000, column: 20, scope: !13239)
!13241 = !DILocation(line: 4000, column: 71, scope: !13239)
!13242 = !DILocation(line: 4000, column: 4, scope: !13239)
!13243 = !DILocation(line: 4001, column: 4, scope: !13239)
!13244 = !DILocation(line: 4006, column: 6, scope: !13245)
!13245 = distinct !DILexicalBlock(scope: !13159, file: !3, line: 4006, column: 6)
!13246 = !DILocation(line: 4006, column: 12, scope: !13245)
!13247 = !DILocation(line: 4006, column: 6, scope: !13159)
!13248 = !DILocalVariable(name: "prop_type", scope: !13249, file: !3, line: 4007, type: !12125)
!13249 = distinct !DILexicalBlock(scope: !13245, file: !3, line: 4006, column: 62)
!13250 = !DILocation(line: 4007, column: 16, scope: !13249)
!13251 = !DILocation(line: 4007, column: 47, scope: !13249)
!13252 = !DILocation(line: 4007, column: 46, scope: !13249)
!13253 = !DILocation(line: 4007, column: 28, scope: !13249)
!13254 = !DILocation(line: 4009, column: 9, scope: !13255)
!13255 = distinct !DILexicalBlock(scope: !13249, file: !3, line: 4009, column: 7)
!13256 = !DILocation(line: 4009, column: 15, scope: !13255)
!13257 = !DILocation(line: 4009, column: 39, scope: !13255)
!13258 = !DILocation(line: 4009, column: 43, scope: !13255)
!13259 = !DILocation(line: 4009, column: 53, scope: !13255)
!13260 = !DILocation(line: 4009, column: 71, scope: !13255)
!13261 = !DILocation(line: 4010, column: 9, scope: !13255)
!13262 = !DILocation(line: 4010, column: 15, scope: !13255)
!13263 = !DILocation(line: 4010, column: 40, scope: !13255)
!13264 = !DILocation(line: 4010, column: 43, scope: !13255)
!13265 = !DILocation(line: 4010, column: 53, scope: !13255)
!13266 = !DILocation(line: 4009, column: 7, scope: !13249)
!13267 = !DILocation(line: 4012, column: 4, scope: !13268)
!13268 = distinct !DILexicalBlock(scope: !13255, file: !3, line: 4011, column: 3)
!13269 = !DILocation(line: 4012, column: 14, scope: !13268)
!13270 = !DILocation(line: 4013, column: 16, scope: !13268)
!13271 = !DILocation(line: 4013, column: 20, scope: !13268)
!13272 = !DILocation(line: 4013, column: 82, scope: !13268)
!13273 = !DILocation(line: 4013, column: 4, scope: !13268)
!13274 = !DILocation(line: 4014, column: 4, scope: !13268)
!13275 = !DILocation(line: 4016, column: 2, scope: !13249)
!13276 = !DILocation(line: 4019, column: 7, scope: !13277)
!13277 = distinct !DILexicalBlock(scope: !13159, file: !3, line: 4019, column: 6)
!13278 = !DILocation(line: 4019, column: 6, scope: !13277)
!13279 = !DILocation(line: 4019, column: 14, scope: !13277)
!13280 = !DILocation(line: 4019, column: 50, scope: !13277)
!13281 = !DILocation(line: 4019, column: 58, scope: !13277)
!13282 = !DILocation(line: 4019, column: 57, scope: !13277)
!13283 = !DILocation(line: 4019, column: 24, scope: !13277)
!13284 = !DILocation(line: 4019, column: 22, scope: !13277)
!13285 = !DILocation(line: 4019, column: 70, scope: !13277)
!13286 = !DILocation(line: 4019, column: 67, scope: !13277)
!13287 = !DILocation(line: 4019, column: 6, scope: !13159)
!13288 = !DILocation(line: 4020, column: 3, scope: !13289)
!13289 = distinct !DILexicalBlock(scope: !13277, file: !3, line: 4019, column: 82)
!13290 = !DILocation(line: 4020, column: 13, scope: !13289)
!13291 = !DILocation(line: 4021, column: 15, scope: !13289)
!13292 = !DILocation(line: 4021, column: 19, scope: !13289)
!13293 = !DILocation(line: 4022, column: 15, scope: !13289)
!13294 = !DILocation(line: 4022, column: 21, scope: !13289)
!13295 = !DILocation(line: 4022, column: 26, scope: !13289)
!13296 = !DILocation(line: 4021, column: 3, scope: !13289)
!13297 = !DILocation(line: 4023, column: 3, scope: !13289)
!13298 = !DILocation(line: 4027, column: 2, scope: !13159)
!13299 = !DILocation(line: 4027, column: 12, scope: !13159)
!13300 = !DILocation(line: 4028, column: 2, scope: !13159)
!13301 = !DILocation(line: 4029, column: 1, scope: !13159)
!13302 = distinct !DISubprogram(name: "radial_control_paint_tex", scope: !3, file: !3, line: 3807, type: !13303, scopeLine: 3808, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!13303 = !DISubroutineType(types: !13304)
!13304 = !{null, !12120, !1537, !1537}
!13305 = !DILocalVariable(name: "rc", arg: 1, scope: !13302, file: !3, line: 3807, type: !12120)
!13306 = !DILocation(line: 3807, column: 53, scope: !13302)
!13307 = !DILocalVariable(name: "radius", arg: 2, scope: !13302, file: !3, line: 3807, type: !1537)
!13308 = !DILocation(line: 3807, column: 63, scope: !13302)
!13309 = !DILocalVariable(name: "alpha", arg: 3, scope: !13302, file: !3, line: 3807, type: !1537)
!13310 = !DILocation(line: 3807, column: 77, scope: !13302)
!13311 = !DILocalVariable(name: "col", scope: !13302, file: !3, line: 3809, type: !1572)
!13312 = !DILocation(line: 3809, column: 8, scope: !13302)
!13313 = !DILocalVariable(name: "rot", scope: !13302, file: !3, line: 3810, type: !1537)
!13314 = !DILocation(line: 3810, column: 8, scope: !13302)
!13315 = !DILocation(line: 3813, column: 6, scope: !13316)
!13316 = distinct !DILexicalBlock(scope: !13302, file: !3, line: 3813, column: 6)
!13317 = !DILocation(line: 3813, column: 10, scope: !13316)
!13318 = !DILocation(line: 3813, column: 6, scope: !13302)
!13319 = !DILocation(line: 3814, column: 33, scope: !13316)
!13320 = !DILocation(line: 3814, column: 37, scope: !13316)
!13321 = !DILocation(line: 3814, column: 51, scope: !13316)
!13322 = !DILocation(line: 3814, column: 55, scope: !13316)
!13323 = !DILocation(line: 3814, column: 70, scope: !13316)
!13324 = !DILocation(line: 3814, column: 3, scope: !13316)
!13325 = !DILocation(line: 3815, column: 12, scope: !13302)
!13326 = !DILocation(line: 3815, column: 20, scope: !13302)
!13327 = !DILocation(line: 3815, column: 28, scope: !13302)
!13328 = !DILocation(line: 3815, column: 36, scope: !13302)
!13329 = !DILocation(line: 3815, column: 2, scope: !13302)
!13330 = !DILocation(line: 3817, column: 6, scope: !13331)
!13331 = distinct !DILexicalBlock(scope: !13302, file: !3, line: 3817, column: 6)
!13332 = !DILocation(line: 3817, column: 10, scope: !13331)
!13333 = !DILocation(line: 3817, column: 6, scope: !13302)
!13334 = !DILocation(line: 3818, column: 32, scope: !13335)
!13335 = distinct !DILexicalBlock(scope: !13331, file: !3, line: 3817, column: 17)
!13336 = !DILocation(line: 3818, column: 36, scope: !13335)
!13337 = !DILocation(line: 3818, column: 3, scope: !13335)
!13338 = !DILocation(line: 3820, column: 3, scope: !13335)
!13339 = !DILocation(line: 3821, column: 3, scope: !13335)
!13340 = !DILocation(line: 3824, column: 7, scope: !13341)
!13341 = distinct !DILexicalBlock(scope: !13335, file: !3, line: 3824, column: 7)
!13342 = !DILocation(line: 3824, column: 11, scope: !13341)
!13343 = !DILocation(line: 3824, column: 7, scope: !13335)
!13344 = !DILocation(line: 3825, column: 34, scope: !13345)
!13345 = distinct !DILexicalBlock(scope: !13341, file: !3, line: 3824, column: 21)
!13346 = !DILocation(line: 3825, column: 38, scope: !13345)
!13347 = !DILocation(line: 3825, column: 47, scope: !13345)
!13348 = !DILocation(line: 3825, column: 51, scope: !13345)
!13349 = !DILocation(line: 3825, column: 10, scope: !13345)
!13350 = !DILocation(line: 3825, column: 8, scope: !13345)
!13351 = !DILocation(line: 3826, column: 4, scope: !13345)
!13352 = !DILocation(line: 3827, column: 14, scope: !13345)
!13353 = !DILocation(line: 3827, column: 4, scope: !13345)
!13354 = !DILocation(line: 3828, column: 3, scope: !13345)
!13355 = !DILocation(line: 3831, column: 3, scope: !13335)
!13356 = !DILocation(line: 3832, column: 3, scope: !13335)
!13357 = !DILocation(line: 3833, column: 3, scope: !13335)
!13358 = !DILocation(line: 3834, column: 15, scope: !13335)
!13359 = !DILocation(line: 3834, column: 14, scope: !13335)
!13360 = !DILocation(line: 3834, column: 24, scope: !13335)
!13361 = !DILocation(line: 3834, column: 23, scope: !13335)
!13362 = !DILocation(line: 3834, column: 3, scope: !13335)
!13363 = !DILocation(line: 3835, column: 3, scope: !13335)
!13364 = !DILocation(line: 3836, column: 14, scope: !13335)
!13365 = !DILocation(line: 3836, column: 23, scope: !13335)
!13366 = !DILocation(line: 3836, column: 22, scope: !13335)
!13367 = !DILocation(line: 3836, column: 3, scope: !13335)
!13368 = !DILocation(line: 3837, column: 3, scope: !13335)
!13369 = !DILocation(line: 3838, column: 14, scope: !13335)
!13370 = !DILocation(line: 3838, column: 22, scope: !13335)
!13371 = !DILocation(line: 3838, column: 3, scope: !13335)
!13372 = !DILocation(line: 3839, column: 3, scope: !13335)
!13373 = !DILocation(line: 3840, column: 15, scope: !13335)
!13374 = !DILocation(line: 3840, column: 14, scope: !13335)
!13375 = !DILocation(line: 3840, column: 23, scope: !13335)
!13376 = !DILocation(line: 3840, column: 3, scope: !13335)
!13377 = !DILocation(line: 3841, column: 3, scope: !13335)
!13378 = !DILocation(line: 3842, column: 3, scope: !13335)
!13379 = !DILocation(line: 3845, column: 7, scope: !13380)
!13380 = distinct !DILexicalBlock(scope: !13335, file: !3, line: 3845, column: 7)
!13381 = !DILocation(line: 3845, column: 11, scope: !13380)
!13382 = !DILocation(line: 3845, column: 7, scope: !13335)
!13383 = !DILocation(line: 3846, column: 4, scope: !13380)
!13384 = !DILocation(line: 3847, column: 2, scope: !13335)
!13385 = !DILocation(line: 3850, column: 39, scope: !13386)
!13386 = distinct !DILexicalBlock(scope: !13331, file: !3, line: 3848, column: 7)
!13387 = !DILocation(line: 3850, column: 3, scope: !13386)
!13388 = !DILocation(line: 3852, column: 1, scope: !13302)
!13389 = distinct !DISubprogram(name: "len_v2", scope: !13390, file: !13390, line: 691, type: !13391, scopeLine: 692, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!13390 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!13391 = !DISubroutineType(types: !13392)
!13392 = !{!1537, !13393}
!13393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5433, size: 64)
!13394 = !DILocalVariable(name: "v", arg: 1, scope: !13389, file: !13390, line: 691, type: !13393)
!13395 = !DILocation(line: 691, column: 34, scope: !13389)
!13396 = !DILocation(line: 693, column: 15, scope: !13389)
!13397 = !DILocation(line: 693, column: 22, scope: !13389)
!13398 = !DILocation(line: 693, column: 20, scope: !13389)
!13399 = !DILocation(line: 693, column: 29, scope: !13389)
!13400 = !DILocation(line: 693, column: 36, scope: !13389)
!13401 = !DILocation(line: 693, column: 34, scope: !13389)
!13402 = !DILocation(line: 693, column: 27, scope: !13389)
!13403 = !DILocation(line: 693, column: 9, scope: !13389)
!13404 = !DILocation(line: 693, column: 2, scope: !13389)
!13405 = distinct !DISubprogram(name: "radial_control_set_value", scope: !3, file: !3, line: 4160, type: !13406, scopeLine: 4161, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !3230)
!13406 = !DISubroutineType(types: !13407)
!13407 = !{null, !12120, !1537}
!13408 = !DILocalVariable(name: "rc", arg: 1, scope: !13405, file: !3, line: 4160, type: !12120)
!13409 = !DILocation(line: 4160, column: 53, scope: !13405)
!13410 = !DILocalVariable(name: "val", arg: 2, scope: !13405, file: !3, line: 4160, type: !1537)
!13411 = !DILocation(line: 4160, column: 63, scope: !13405)
!13412 = !DILocation(line: 4162, column: 10, scope: !13405)
!13413 = !DILocation(line: 4162, column: 14, scope: !13405)
!13414 = !DILocation(line: 4162, column: 2, scope: !13405)
!13415 = !DILocation(line: 4164, column: 26, scope: !13416)
!13416 = distinct !DILexicalBlock(scope: !13405, file: !3, line: 4162, column: 20)
!13417 = !DILocation(line: 4164, column: 30, scope: !13416)
!13418 = !DILocation(line: 4164, column: 35, scope: !13416)
!13419 = !DILocation(line: 4164, column: 39, scope: !13416)
!13420 = !DILocation(line: 4164, column: 45, scope: !13416)
!13421 = !DILocation(line: 4164, column: 4, scope: !13416)
!13422 = !DILocation(line: 4165, column: 4, scope: !13416)
!13423 = !DILocation(line: 4167, column: 28, scope: !13416)
!13424 = !DILocation(line: 4167, column: 32, scope: !13416)
!13425 = !DILocation(line: 4167, column: 37, scope: !13416)
!13426 = !DILocation(line: 4167, column: 41, scope: !13416)
!13427 = !DILocation(line: 4167, column: 47, scope: !13416)
!13428 = !DILocation(line: 4167, column: 4, scope: !13416)
!13429 = !DILocation(line: 4168, column: 4, scope: !13416)
!13430 = !DILocation(line: 4170, column: 4, scope: !13416)
!13431 = !DILocation(line: 4172, column: 1, scope: !13405)
