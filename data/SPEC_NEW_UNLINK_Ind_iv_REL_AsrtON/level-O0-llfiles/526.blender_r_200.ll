; ModuleID = 'blender/source/blender/blenkernel/intern/subsurf_ccg.c'
source_filename = "blender/source/blender/blenkernel/intern/subsurf_ccg.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.Global = type { %struct.Main*, [1024 x i8], [1024 x i8], i8, i8, i8, %struct.ListBase, i8, i8, i8, i16, i16, i16, i8, i16, i32, i32, i8, i32, i32, [200 x i8] }
%struct.Main = type opaque
%struct.ListBase = type { i8*, i8* }
%struct.DerivedMesh = type { %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, %struct.LinkNode*, %struct.GPUDrawObject*, i32, float, i32, i32, %struct.Material**, i8, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, float)*, void (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i32, %struct.MVert*)*, void (%struct.DerivedMesh*, i32, %struct.MEdge*)*, void (%struct.DerivedMesh*, i32, %struct.MFace*)*, %struct.MVert* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, %struct.MVert*)*, void (%struct.DerivedMesh*, %struct.MEdge*)*, void (%struct.DerivedMesh*, %struct.MFace*)*, void (%struct.DerivedMesh*, %struct.MLoop*)*, void (%struct.DerivedMesh*, %struct.MPoly*)*, %struct.MVert* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, %struct.CCGElem** (%struct.DerivedMesh*)*, %struct.DMGridAdjacency* (%struct.DerivedMesh*)*, i32* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, %struct.CCGKey*)*, %struct.DMFlagMat* (%struct.DerivedMesh*)*, i32** (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*, i16*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*)*, void (%struct.DerivedMesh*, void (i8*, i32, i32, float*, float*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*, i32)*, void (%struct.DerivedMesh*, float*, float*)*, void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, [3 x float]*)*, void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, i32, float*)*, %struct.MeshElemMap* (%struct.Object*, %struct.DerivedMesh*)*, %struct.PBVH* (%struct.Object*, %struct.DerivedMesh*)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i8, i8)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, [4 x float]*, i8, i32 (i32, i8*)*)*, void (%struct.DerivedMesh*, i32 (%struct.MTFace*, i8, i32)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i32, i8*)*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i32, i8*)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i32, i8*)*, i32 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, void (i8*, i32, float)*, i8*)*, void (%struct.DerivedMesh*, void (i8*, i32, i8*)*, i8 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*)* }
%struct.CustomData = type { %struct.CustomDataLayer*, [41 x i32], i32, i32, i32, %struct.BLI_mempool*, %struct.CustomDataExternal* }
%struct.CustomDataLayer = type { i32, i32, i32, i32, i32, i32, i32, i32, [64 x i8], i8* }
%struct.BLI_mempool = type opaque
%struct.CustomDataExternal = type { [1024 x i8] }
%struct.LinkNode = type opaque
%struct.GPUDrawObject = type opaque
%struct.Material = type { %struct.ID, %struct.AnimData*, i16, i16, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, %struct.VolumeSettings, %struct.GameSettings, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, float, float, i16, i16, float, float, float, float, i16, i16, i32, i32, i32, i32, i16, i16, i16, i16, float, float, float, float, float, float, float, float, float, float, [64 x i8], float, float, float, i32, i8, i8, i8, i8, i16, i16, i16, i8, i8, i16, i16, float, float, [4 x float], float, float, i16, i16, %struct.ColorBand*, %struct.ColorBand*, i8, i8, i8, i8, i16, i16, float, float, [18 x %struct.MTex*], %struct.bNodeTree*, %struct.Ipo*, %struct.Group*, %struct.PreviewImage*, float, float, float, float, float, i16, i16, [3 x float], [3 x float], float, float, float, float, float, float, float, i16, i16, i32, i16, i16, [4 x float], i16, i16, i16, i16, i16, [3 x i16], %struct.TexPaintSlot*, %struct.ListBase }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.AnimData = type opaque
%struct.VolumeSettings = type { float, float, float, float, [3 x float], [3 x float], [3 x float], float, float, float, i16, i16, i16, i16, float, float, float, float }
%struct.GameSettings = type { i32, i32, i32, i32 }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.MTex = type { i16, i16, i16, i16, %struct.Object*, %struct.Tex*, [64 x i8], i8, i8, i8, i8, [3 x float], [3 x float], float, i16, i16, i16, i16, i16, i16, i8, [7 x i8], float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float }
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.SculptSession = type { %struct.MultiresModifierData*, %struct.MVert*, %struct.MPoly*, %struct.MLoop*, i32, i32, [3 x float]*, %struct.KeyBlock*, float*, %struct.MeshElemMap*, %struct.BMesh*, i32, i32, i8, %struct.BMLog*, %struct.PBVH*, i8, i8, [3 x float]*, [3 x float]*, [3 x [3 x float]]*, i8, i32, i32*, i32, %struct.ImagePool*, [3 x float]*, %struct.SculptStroke*, %struct.StrokeCache*, i8, [3 x float], [3 x float], i32 }
%struct.MultiresModifierData = type { %struct.ModifierData, i8, i8, i8, i8, i8, i8, [2 x i8] }
%struct.ModifierData = type { %struct.ModifierData*, %struct.ModifierData*, i32, i32, i32, i32, [64 x i8], %struct.Scene*, i8* }
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.World = type opaque
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.Editing = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type { %struct.ID, %struct.BrushClone, %struct.CurveMapping*, %struct.MTex, %struct.MTex, %struct.Brush*, %struct.ImBuf*, %struct.PreviewImage*, %struct.ColorBand*, %struct.PaintCurve*, [1024 x i8], float, i16, i16, float, i32, i32, i32, float, i32, i32, i32, i32, float, float, [3 x float], float, [3 x float], i32, float, float, i32, i32, i32, i8, i8, i8, i8, float, float, float, float, float, i32, i32, i32, float, float, i32, i32, float, [3 x float], [3 x float], [2 x float], [2 x float], [2 x float], [2 x float] }
%struct.BrushClone = type { %struct.Image*, [2 x float], float, float }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.anim = type opaque
%struct.RenderResult = type opaque
%struct.RenderSlot = type { [64 x i8] }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.rctf = type { float, float, float, float }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.ImBuf = type opaque
%struct.PaintCurve = type { %struct.ID, %struct.PaintCurvePoint*, i32, i32 }
%struct.PaintCurvePoint = type { %struct.BezTriple, float }
%struct.BezTriple = type { [3 x [3 x float]], float, float, float, i8, i8, i8, i8, i8, i8, i8, i8, float, float, float, [4 x i8] }
%struct.Palette = type { %struct.ID, %struct.ListBase, %struct.ListBase, i32, i32 }
%struct.MDeformVert = type { %struct.MDeformWeight*, i32, i32 }
%struct.MDeformWeight = type { i32, float }
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.Text = type opaque
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type opaque
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.MLoop = type { i32, i32 }
%struct.KeyBlock = type opaque
%struct.MeshElemMap = type { i32*, i32 }
%struct.BMesh = type opaque
%struct.BMLog = type opaque
%struct.PBVH = type opaque
%struct.ImagePool = type opaque
%struct.SculptStroke = type opaque
%struct.StrokeCache = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.GHash = type opaque
%struct.bGPdata = type opaque
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.BulletSoftBody = type opaque
%struct.PartDeflect = type opaque
%struct.SoftBody = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type opaque
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.Tex = type { %struct.ID, %struct.AnimData*, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, float, float, float, %struct.ImageUser, %struct.bNodeTree*, %struct.Ipo*, %struct.Image*, %struct.ColorBand*, %struct.EnvMap*, %struct.PreviewImage*, %struct.PointDensity*, %struct.VoxelData*, %struct.OceanTex*, i8, [7 x i8] }
%struct.EnvMap = type { %struct.Object*, %struct.Image*, [6 x %struct.ImBuf*], [4 x [4 x float]], [3 x [3 x float]], i16, i16, float, float, float, i32, i16, i16, i32, i32, i16, i16 }
%struct.PointDensity = type { i16, i16, float, float, i16, i16, i32, i32, %struct.Object*, i32, i16, i16, i8*, float*, float, i16, i16, i16, [3 x i16], float, float, float, float, %struct.ColorBand*, %struct.CurveMapping* }
%struct.VoxelData = type { [3 x i32], i32, i16, i16, i16, i16, i16, i16, i32, %struct.Object*, float, i32, [1024 x i8], float*, i32, i32 }
%struct.OceanTex = type { %struct.Object*, [64 x i8], i32, i32 }
%struct.bNodeTree = type opaque
%struct.Ipo = type opaque
%struct.Group = type opaque
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.TexPaintSlot = type { %struct.Image*, i8*, i32, i32 }
%struct.MEdge = type { i32, i32, i8, i8, i16 }
%struct.MFace = type { i32, i32, i32, i32, i16, i8, i8 }
%struct.CCGElem = type opaque
%struct.DMGridAdjacency = type { [4 x i32], [4 x i32] }
%struct.CCGKey = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.DMFlagMat = type { i16, i8 }
%struct.MTFace = type { [4 x [2 x float]], %struct.Image*, i8, i8, i16, i16, i16 }
%struct.MPoly = type { i32, i32, i16, i8, i8 }
%struct.MVert = type { [3 x float], [3 x i16], i8, i8 }
%struct.MDisps = type { i32, i32, [3 x float]*, i32* }
%struct.CCGDerivedMesh = type { %struct.DerivedMesh, %struct.CCGSubSurf*, i32, i32, i32, %struct.anon*, %struct.anon.0*, %struct.anon.1*, i16*, %struct.DMFlagMat*, i32*, %struct.PBVH*, %struct.MeshElemMap*, i32*, %struct.CCGElem**, %struct.DMGridAdjacency*, i32*, %struct.CCGFace**, %struct.DMFlagMat*, i32**, %struct.anon.2, %struct.EdgeHash* }
%struct.CCGSubSurf = type opaque
%struct.anon = type { i32, %struct.CCGVert* }
%struct.CCGVert = type opaque
%struct.anon.0 = type { i32, i32, %struct.CCGEdge* }
%struct.CCGEdge = type opaque
%struct.anon.1 = type { i32, i32, i32, %struct.CCGFace* }
%struct.CCGFace = type opaque
%struct.anon.2 = type { %struct.MultiresModifierData*, i32, i32, i32, [3 x float]*, %struct.Object*, i32 }
%struct.EdgeHash = type opaque
%struct.GridPaintMask = type { float*, i32, i32 }
%struct.SubsurfModifierData = type { %struct.ModifierData, i16, i16, i16, i16, i8*, i8* }
%struct.CCGMeshIFC = type { i32, i32, i32, i32, i32, i32 }
%struct.CCGAllocatorIFC = type { i8* (i8*, i32)*, i8* (i8*, i8*, i32, i32)*, void (i8*, i8*)*, void (i8*)* }
%struct.MemArena = type opaque
%struct.CCGVertIterator = type opaque
%struct.CCGEdgeIterator = type opaque
%struct.CCGFaceIterator = type opaque
%struct.WeightTable = type { %struct.FaceVertWeightEntry*, i32 }
%struct.FaceVertWeightEntry = type { [50 x [50 x float]]*, float*, i32 }
%struct.Mesh = type { %struct.ID, %struct.AnimData*, %struct.BoundBox*, %struct.Ipo*, %struct.Key*, %struct.Material**, %struct.MSelect*, %struct.MPoly*, %struct.MTexPoly*, %struct.MLoop*, %struct.MLoopUV*, %struct.MLoopCol*, %struct.MFace*, %struct.MTFace*, %struct.TFace*, %struct.MVert*, %struct.MEdge*, %struct.MDeformVert*, %struct.MCol*, %struct.Mesh*, %struct.BMEditMesh*, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, [3 x float], [3 x float], [3 x float], i32, i16, i16, float, i32, i8, i8, i8, i8, i8, i8, i16, %struct.Multires* }
%struct.Key = type opaque
%struct.MSelect = type { i32, i32 }
%struct.MTexPoly = type { %struct.Image*, i8, i8, i16, i16, i16 }
%struct.MLoopUV = type { [2 x float], i32 }
%struct.MLoopCol = type { i8, i8, i8, i8 }
%struct.TFace = type { i8*, [4 x [2 x float]], [4 x i32], i8, i8, i16, i16, i16 }
%struct.MCol = type { i8, i8, i8, i8 }
%struct.BMEditMesh = type opaque
%struct.Multires = type { %struct.ListBase, %struct.MVert*, i8, i8, i8, i8, i8, i8, i8, i8, %struct.CustomData, %struct.CustomData, i16*, i8* }
%struct.GPUVertexAttribs = type { [32 x %struct.anon.3], i32 }
%struct.anon.3 = type { i32, i32, i32, i32, [64 x i8] }
%struct.DMVertexAttribs = type { [8 x %struct.anon.4], [8 x %struct.anon.5], %struct.anon.6, %struct.anon.7, i32, i32, i32, i32 }
%struct.anon.4 = type { %struct.MTFace*, i32, i32, i32 }
%struct.anon.5 = type { %struct.MCol*, i32, i32 }
%struct.anon.6 = type { [4 x float]*, i32, i32 }
%struct.anon.7 = type { [3 x float]*, i32, i32, i32 }
%struct.OrigSpaceFace = type { [4 x [2 x float]] }
%struct.OrigSpaceLoop = type { [2 x float] }
%struct.UvMapVert = type { %struct.UvMapVert*, i32, i8, i8, i8 }
%struct.UvVertMap = type { %struct.UvMapVert**, %struct.UvMapVert* }
%struct.EdgeSet = type opaque

@.str = private unnamed_addr constant [14 x i8] c"subsurf arena\00", align 1
@ss_sync_from_derivedmesh.hasGivenError = internal global i32 0, align 4, !dbg !0
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.1 = private unnamed_addr constant [6 x i8] c"ccgdm\00", align 1
@MEM_mallocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.2 = private unnamed_addr constant [8 x i8] c"vertMap\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"edgeMap\00", align 1
@.str.4 = private unnamed_addr constant [8 x i8] c"faceMap\00", align 1
@.str.5 = private unnamed_addr constant [15 x i8] c"reverseFaceMap\00", align 1
@.str.6 = private unnamed_addr constant [10 x i8] c"edgeFlags\00", align 1
@.str.7 = private unnamed_addr constant [10 x i8] c"faceFlags\00", align 1
@loops_cache_rwlock = internal global i32 0, align 4, !dbg !2380
@__func__.ccgDM_copyFinalLoopArray = private unnamed_addr constant [25 x i8] c"ccgDM_copyFinalLoopArray\00", align 1
@origindex_cache_rwlock = internal global i32 0, align 4, !dbg !2388
@.str.8 = private unnamed_addr constant [17 x i8] c"ccgdm.gridOffset\00", align 1
@.str.9 = private unnamed_addr constant [15 x i8] c"ccgdm.gridData\00", align 1
@.str.10 = private unnamed_addr constant [20 x i8] c"ccgdm.gridAdjacency\00", align 1
@.str.11 = private unnamed_addr constant [16 x i8] c"ccgdm.gridFaces\00", align 1
@.str.12 = private unnamed_addr constant [19 x i8] c"ccgdm.gridFlagMats\00", align 1
@.str.13 = private unnamed_addr constant [17 x i8] c"ccgdm.gridHidden\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"vertmap\00", align 1
@.str.15 = private unnamed_addr constant [8 x i8] c"edgemap\00", align 1
@.str.16 = private unnamed_addr constant [8 x i8] c"facemap\00", align 1
@MEM_freeN = external dso_local global void (i8*)*, align 8
@G = external dso_local global %struct.Global, align 8
@__glewMultiTexCoord2fv = external dso_local global void (i32, float*)*, align 8
@stipple_quarttone = external dso_local global [128 x i8], align 16
@__glewVertexAttrib3fvARB = external dso_local global void (i32, float*)*, align 8
@__glewVertexAttrib2fvARB = external dso_local global void (i32, float*)*, align 8
@__glewVertexAttrib4ubvARB = external dso_local global void (i32, i8*)*, align 8
@__glewVertexAttrib4fvARB = external dso_local global void (i32, float*)*, align 8
@.str.17 = private unnamed_addr constant [21 x i8] c"weight table alloc 2\00", align 1
@.str.18 = private unnamed_addr constant [19 x i8] c"weight table alloc\00", align 1
@.str.19 = private unnamed_addr constant [10 x i8] c"facemapuv\00", align 1
@__func__.ss_sync_from_uv = private unnamed_addr constant [16 x i8] c"ss_sync_from_uv\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local void @subsurf_copy_grid_hidden(%struct.DerivedMesh* %dm, %struct.MPoly* %mpoly, %struct.MVert* %mvert, %struct.MDisps* %mdisps) #0 !dbg !2395 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %mpoly.addr = alloca %struct.MPoly*, align 8
  %mvert.addr = alloca %struct.MVert*, align 8
  %mdisps.addr = alloca %struct.MDisps*, align 8
  %ccgdm = alloca %struct.CCGDerivedMesh*, align 8
  %ss = alloca %struct.CCGSubSurf*, align 8
  %level = alloca i32, align 4
  %gridSize = alloca i32, align 4
  %edgeSize = alloca i32, align 4
  %totface = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %f = alloca %struct.CCGFace*, align 8
  %md = alloca %struct.MDisps*, align 8
  %hidden_gridsize = alloca i32, align 4
  %factor = alloca i32, align 4
  %vndx = alloca i32, align 4
  %offset = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !2411, metadata !DIExpression()), !dbg !2412
  store %struct.MPoly* %mpoly, %struct.MPoly** %mpoly.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpoly.addr, metadata !2413, metadata !DIExpression()), !dbg !2414
  store %struct.MVert* %mvert, %struct.MVert** %mvert.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert.addr, metadata !2415, metadata !DIExpression()), !dbg !2416
  store %struct.MDisps* %mdisps, %struct.MDisps** %mdisps.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MDisps** %mdisps.addr, metadata !2417, metadata !DIExpression()), !dbg !2418
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm, metadata !2419, metadata !DIExpression()), !dbg !2420
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2421
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CCGDerivedMesh*, !dbg !2422
  store %struct.CCGDerivedMesh* %1, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !2420
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss, metadata !2423, metadata !DIExpression()), !dbg !2424
  %2 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !2425
  %ss1 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %2, i32 0, i32 1, !dbg !2426
  %3 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss1, align 8, !dbg !2426
  store %struct.CCGSubSurf* %3, %struct.CCGSubSurf** %ss, align 8, !dbg !2424
  call void @llvm.dbg.declare(metadata i32* %level, metadata !2427, metadata !DIExpression()), !dbg !2428
  %4 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !2429
  %call = call i32 @ccgSubSurf_getSubdivisionLevels(%struct.CCGSubSurf* %4), !dbg !2430
  store i32 %call, i32* %level, align 4, !dbg !2428
  call void @llvm.dbg.declare(metadata i32* %gridSize, metadata !2431, metadata !DIExpression()), !dbg !2432
  %5 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !2433
  %call2 = call i32 @ccgSubSurf_getGridSize(%struct.CCGSubSurf* %5), !dbg !2434
  store i32 %call2, i32* %gridSize, align 4, !dbg !2432
  call void @llvm.dbg.declare(metadata i32* %edgeSize, metadata !2435, metadata !DIExpression()), !dbg !2436
  %6 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !2437
  %call3 = call i32 @ccgSubSurf_getEdgeSize(%struct.CCGSubSurf* %6), !dbg !2438
  store i32 %call3, i32* %edgeSize, align 4, !dbg !2436
  call void @llvm.dbg.declare(metadata i32* %totface, metadata !2439, metadata !DIExpression()), !dbg !2440
  %7 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !2441
  %call4 = call i32 @ccgSubSurf_getNumFaces(%struct.CCGSubSurf* %7), !dbg !2442
  store i32 %call4, i32* %totface, align 4, !dbg !2440
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2443, metadata !DIExpression()), !dbg !2444
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2445, metadata !DIExpression()), !dbg !2446
  call void @llvm.dbg.declare(metadata i32* %x, metadata !2447, metadata !DIExpression()), !dbg !2448
  call void @llvm.dbg.declare(metadata i32* %y, metadata !2449, metadata !DIExpression()), !dbg !2450
  store i32 0, i32* %i, align 4, !dbg !2451
  br label %for.cond, !dbg !2453

for.cond:                                         ; preds = %for.inc44, %entry
  %8 = load i32, i32* %i, align 4, !dbg !2454
  %9 = load i32, i32* %totface, align 4, !dbg !2456
  %cmp = icmp slt i32 %8, %9, !dbg !2457
  br i1 %cmp, label %for.body, label %for.end46, !dbg !2458

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f, metadata !2459, metadata !DIExpression()), !dbg !2463
  %10 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !2464
  %faceMap = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %10, i32 0, i32 7, !dbg !2465
  %11 = load %struct.anon.1*, %struct.anon.1** %faceMap, align 8, !dbg !2465
  %12 = load i32, i32* %i, align 4, !dbg !2466
  %idxprom = sext i32 %12 to i64, !dbg !2464
  %arrayidx = getelementptr inbounds %struct.anon.1, %struct.anon.1* %11, i64 %idxprom, !dbg !2464
  %face = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx, i32 0, i32 3, !dbg !2467
  %13 = load %struct.CCGFace*, %struct.CCGFace** %face, align 8, !dbg !2467
  store %struct.CCGFace* %13, %struct.CCGFace** %f, align 8, !dbg !2463
  store i32 0, i32* %j, align 4, !dbg !2468
  br label %for.cond5, !dbg !2470

for.cond5:                                        ; preds = %for.inc41, %for.body
  %14 = load i32, i32* %j, align 4, !dbg !2471
  %15 = load %struct.MPoly*, %struct.MPoly** %mpoly.addr, align 8, !dbg !2473
  %16 = load i32, i32* %i, align 4, !dbg !2474
  %idxprom6 = sext i32 %16 to i64, !dbg !2473
  %arrayidx7 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %15, i64 %idxprom6, !dbg !2473
  %totloop = getelementptr inbounds %struct.MPoly, %struct.MPoly* %arrayidx7, i32 0, i32 1, !dbg !2475
  %17 = load i32, i32* %totloop, align 4, !dbg !2475
  %cmp8 = icmp slt i32 %14, %17, !dbg !2476
  br i1 %cmp8, label %for.body9, label %for.end43, !dbg !2477

for.body9:                                        ; preds = %for.cond5
  call void @llvm.dbg.declare(metadata %struct.MDisps** %md, metadata !2478, metadata !DIExpression()), !dbg !2480
  %18 = load %struct.MDisps*, %struct.MDisps** %mdisps.addr, align 8, !dbg !2481
  %19 = load %struct.MPoly*, %struct.MPoly** %mpoly.addr, align 8, !dbg !2482
  %20 = load i32, i32* %i, align 4, !dbg !2483
  %idxprom10 = sext i32 %20 to i64, !dbg !2482
  %arrayidx11 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %19, i64 %idxprom10, !dbg !2482
  %loopstart = getelementptr inbounds %struct.MPoly, %struct.MPoly* %arrayidx11, i32 0, i32 0, !dbg !2484
  %21 = load i32, i32* %loopstart, align 4, !dbg !2484
  %22 = load i32, i32* %j, align 4, !dbg !2485
  %add = add nsw i32 %21, %22, !dbg !2486
  %idxprom12 = sext i32 %add to i64, !dbg !2481
  %arrayidx13 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %18, i64 %idxprom12, !dbg !2481
  store %struct.MDisps* %arrayidx13, %struct.MDisps** %md, align 8, !dbg !2480
  call void @llvm.dbg.declare(metadata i32* %hidden_gridsize, metadata !2487, metadata !DIExpression()), !dbg !2488
  %23 = load %struct.MDisps*, %struct.MDisps** %md, align 8, !dbg !2489
  %level14 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %23, i32 0, i32 1, !dbg !2490
  %24 = load i32, i32* %level14, align 4, !dbg !2490
  %call15 = call i32 @BKE_ccg_gridsize(i32 %24), !dbg !2491
  store i32 %call15, i32* %hidden_gridsize, align 4, !dbg !2488
  call void @llvm.dbg.declare(metadata i32* %factor, metadata !2492, metadata !DIExpression()), !dbg !2493
  %25 = load i32, i32* %level, align 4, !dbg !2494
  %26 = load %struct.MDisps*, %struct.MDisps** %md, align 8, !dbg !2495
  %level16 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %26, i32 0, i32 1, !dbg !2496
  %27 = load i32, i32* %level16, align 4, !dbg !2496
  %call17 = call i32 @BKE_ccg_factor(i32 %25, i32 %27), !dbg !2497
  store i32 %call17, i32* %factor, align 4, !dbg !2493
  %28 = load %struct.MDisps*, %struct.MDisps** %md, align 8, !dbg !2498
  %hidden = getelementptr inbounds %struct.MDisps, %struct.MDisps* %28, i32 0, i32 3, !dbg !2500
  %29 = load i32*, i32** %hidden, align 8, !dbg !2500
  %tobool = icmp ne i32* %29, null, !dbg !2498
  br i1 %tobool, label %if.end, label %if.then, !dbg !2501

if.then:                                          ; preds = %for.body9
  br label %for.inc41, !dbg !2502

if.end:                                           ; preds = %for.body9
  store i32 0, i32* %y, align 4, !dbg !2503
  br label %for.cond18, !dbg !2505

for.cond18:                                       ; preds = %for.inc38, %if.end
  %30 = load i32, i32* %y, align 4, !dbg !2506
  %31 = load i32, i32* %gridSize, align 4, !dbg !2508
  %cmp19 = icmp slt i32 %30, %31, !dbg !2509
  br i1 %cmp19, label %for.body20, label %for.end40, !dbg !2510

for.body20:                                       ; preds = %for.cond18
  store i32 0, i32* %x, align 4, !dbg !2511
  br label %for.cond21, !dbg !2514

for.cond21:                                       ; preds = %for.inc, %for.body20
  %32 = load i32, i32* %x, align 4, !dbg !2515
  %33 = load i32, i32* %gridSize, align 4, !dbg !2517
  %cmp22 = icmp slt i32 %32, %33, !dbg !2518
  br i1 %cmp22, label %for.body23, label %for.end, !dbg !2519

for.body23:                                       ; preds = %for.cond21
  call void @llvm.dbg.declare(metadata i32* %vndx, metadata !2520, metadata !DIExpression()), !dbg !2522
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !2523, metadata !DIExpression()), !dbg !2524
  %34 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !2525
  %35 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !2526
  %36 = load i32, i32* %j, align 4, !dbg !2527
  %37 = load i32, i32* %x, align 4, !dbg !2528
  %38 = load i32, i32* %y, align 4, !dbg !2529
  %39 = load i32, i32* %edgeSize, align 4, !dbg !2530
  %40 = load i32, i32* %gridSize, align 4, !dbg !2531
  %call24 = call i32 @getFaceIndex(%struct.CCGSubSurf* %34, %struct.CCGFace* %35, i32 %36, i32 %37, i32 %38, i32 %39, i32 %40), !dbg !2532
  store i32 %call24, i32* %vndx, align 4, !dbg !2533
  %41 = load i32, i32* %y, align 4, !dbg !2534
  %42 = load i32, i32* %factor, align 4, !dbg !2535
  %mul = mul nsw i32 %41, %42, !dbg !2536
  %43 = load i32, i32* %hidden_gridsize, align 4, !dbg !2537
  %mul25 = mul nsw i32 %mul, %43, !dbg !2538
  %44 = load i32, i32* %x, align 4, !dbg !2539
  %45 = load i32, i32* %factor, align 4, !dbg !2540
  %mul26 = mul nsw i32 %44, %45, !dbg !2541
  %add27 = add nsw i32 %mul25, %mul26, !dbg !2542
  store i32 %add27, i32* %offset, align 4, !dbg !2543
  %46 = load %struct.MDisps*, %struct.MDisps** %md, align 8, !dbg !2544
  %hidden28 = getelementptr inbounds %struct.MDisps, %struct.MDisps* %46, i32 0, i32 3, !dbg !2544
  %47 = load i32*, i32** %hidden28, align 8, !dbg !2544
  %48 = load i32, i32* %offset, align 4, !dbg !2544
  %shr = ashr i32 %48, 5, !dbg !2544
  %idxprom29 = sext i32 %shr to i64, !dbg !2544
  %arrayidx30 = getelementptr inbounds i32, i32* %47, i64 %idxprom29, !dbg !2544
  %49 = load i32, i32* %arrayidx30, align 4, !dbg !2544
  %50 = load i32, i32* %offset, align 4, !dbg !2544
  %and = and i32 %50, 31, !dbg !2544
  %shl = shl i32 1, %and, !dbg !2544
  %and31 = and i32 %49, %shl, !dbg !2544
  %tobool32 = icmp ne i32 %and31, 0, !dbg !2544
  br i1 %tobool32, label %if.then33, label %if.end37, !dbg !2546

if.then33:                                        ; preds = %for.body23
  %51 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !2547
  %52 = load i32, i32* %vndx, align 4, !dbg !2548
  %idxprom34 = sext i32 %52 to i64, !dbg !2547
  %arrayidx35 = getelementptr inbounds %struct.MVert, %struct.MVert* %51, i64 %idxprom34, !dbg !2547
  %flag = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx35, i32 0, i32 2, !dbg !2549
  %53 = load i8, i8* %flag, align 2, !dbg !2550
  %conv = zext i8 %53 to i32, !dbg !2550
  %or = or i32 %conv, 16, !dbg !2550
  %conv36 = trunc i32 %or to i8, !dbg !2550
  store i8 %conv36, i8* %flag, align 2, !dbg !2550
  br label %if.end37, !dbg !2547

if.end37:                                         ; preds = %if.then33, %for.body23
  br label %for.inc, !dbg !2551

for.inc:                                          ; preds = %if.end37
  %54 = load i32, i32* %x, align 4, !dbg !2552
  %inc = add nsw i32 %54, 1, !dbg !2552
  store i32 %inc, i32* %x, align 4, !dbg !2552
  br label %for.cond21, !dbg !2553, !llvm.loop !2554

for.end:                                          ; preds = %for.cond21
  br label %for.inc38, !dbg !2556

for.inc38:                                        ; preds = %for.end
  %55 = load i32, i32* %y, align 4, !dbg !2557
  %inc39 = add nsw i32 %55, 1, !dbg !2557
  store i32 %inc39, i32* %y, align 4, !dbg !2557
  br label %for.cond18, !dbg !2558, !llvm.loop !2559

for.end40:                                        ; preds = %for.cond18
  br label %for.inc41, !dbg !2561

for.inc41:                                        ; preds = %for.end40, %if.then
  %56 = load i32, i32* %j, align 4, !dbg !2562
  %inc42 = add nsw i32 %56, 1, !dbg !2562
  store i32 %inc42, i32* %j, align 4, !dbg !2562
  br label %for.cond5, !dbg !2563, !llvm.loop !2564

for.end43:                                        ; preds = %for.cond5
  br label %for.inc44, !dbg !2566

for.inc44:                                        ; preds = %for.end43
  %57 = load i32, i32* %i, align 4, !dbg !2567
  %inc45 = add nsw i32 %57, 1, !dbg !2567
  store i32 %inc45, i32* %i, align 4, !dbg !2567
  br label %for.cond, !dbg !2568, !llvm.loop !2569

for.end46:                                        ; preds = %for.cond
  ret void, !dbg !2571
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @ccgSubSurf_getSubdivisionLevels(%struct.CCGSubSurf*) #2

declare dso_local i32 @ccgSubSurf_getGridSize(%struct.CCGSubSurf*) #2

declare dso_local i32 @ccgSubSurf_getEdgeSize(%struct.CCGSubSurf*) #2

declare dso_local i32 @ccgSubSurf_getNumFaces(%struct.CCGSubSurf*) #2

declare dso_local i32 @BKE_ccg_gridsize(i32) #2

declare dso_local i32 @BKE_ccg_factor(i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @getFaceIndex(%struct.CCGSubSurf* %ss, %struct.CCGFace* %f, i32 %S, i32 %x, i32 %y, i32 %edgeSize, i32 %gridSize) #0 !dbg !2572 {
entry:
  %retval = alloca i32, align 4
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %f.addr = alloca %struct.CCGFace*, align 8
  %S.addr = alloca i32, align 4
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  %edgeSize.addr = alloca i32, align 4
  %gridSize.addr = alloca i32, align 4
  %faceBase = alloca i32, align 4
  %numVerts = alloca i32, align 4
  %v = alloca %struct.CCGVert*, align 8
  %v9 = alloca %struct.CCGVert*, align 8
  %e = alloca %struct.CCGEdge*, align 8
  %edgeBase = alloca i32, align 4
  %v31 = alloca %struct.CCGVert*, align 8
  %e33 = alloca %struct.CCGEdge*, align 8
  %edgeBase37 = alloca i32, align 4
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !2575, metadata !DIExpression()), !dbg !2576
  store %struct.CCGFace* %f, %struct.CCGFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f.addr, metadata !2577, metadata !DIExpression()), !dbg !2578
  store i32 %S, i32* %S.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %S.addr, metadata !2579, metadata !DIExpression()), !dbg !2580
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !2581, metadata !DIExpression()), !dbg !2582
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !2583, metadata !DIExpression()), !dbg !2584
  store i32 %edgeSize, i32* %edgeSize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %edgeSize.addr, metadata !2585, metadata !DIExpression()), !dbg !2586
  store i32 %gridSize, i32* %gridSize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gridSize.addr, metadata !2587, metadata !DIExpression()), !dbg !2588
  call void @llvm.dbg.declare(metadata i32* %faceBase, metadata !2589, metadata !DIExpression()), !dbg !2590
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2591
  %1 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !2592
  %call = call i8* @ccgSubSurf_getFaceUserData(%struct.CCGSubSurf* %0, %struct.CCGFace* %1), !dbg !2593
  %2 = bitcast i8* %call to i32*, !dbg !2594
  %3 = load i32, i32* %2, align 4, !dbg !2595
  store i32 %3, i32* %faceBase, align 4, !dbg !2590
  call void @llvm.dbg.declare(metadata i32* %numVerts, metadata !2596, metadata !DIExpression()), !dbg !2597
  %4 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !2598
  %call1 = call i32 @ccgSubSurf_getFaceNumVerts(%struct.CCGFace* %4), !dbg !2599
  store i32 %call1, i32* %numVerts, align 4, !dbg !2597
  %5 = load i32, i32* %x.addr, align 4, !dbg !2600
  %6 = load i32, i32* %gridSize.addr, align 4, !dbg !2602
  %sub = sub nsw i32 %6, 1, !dbg !2603
  %cmp = icmp eq i32 %5, %sub, !dbg !2604
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !2605

land.lhs.true:                                    ; preds = %entry
  %7 = load i32, i32* %y.addr, align 4, !dbg !2606
  %8 = load i32, i32* %gridSize.addr, align 4, !dbg !2607
  %sub2 = sub nsw i32 %8, 1, !dbg !2608
  %cmp3 = icmp eq i32 %7, %sub2, !dbg !2609
  br i1 %cmp3, label %if.then, label %if.else, !dbg !2610

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v, metadata !2611, metadata !DIExpression()), !dbg !2615
  %9 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !2616
  %10 = load i32, i32* %S.addr, align 4, !dbg !2617
  %call4 = call %struct.CCGVert* @ccgSubSurf_getFaceVert(%struct.CCGFace* %9, i32 %10), !dbg !2618
  store %struct.CCGVert* %call4, %struct.CCGVert** %v, align 8, !dbg !2615
  %11 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2619
  %12 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !2620
  %call5 = call i8* @ccgSubSurf_getVertUserData(%struct.CCGSubSurf* %11, %struct.CCGVert* %12), !dbg !2621
  %13 = bitcast i8* %call5 to i32*, !dbg !2622
  %14 = load i32, i32* %13, align 4, !dbg !2623
  store i32 %14, i32* %retval, align 4, !dbg !2624
  br label %return, !dbg !2624

if.else:                                          ; preds = %land.lhs.true, %entry
  %15 = load i32, i32* %x.addr, align 4, !dbg !2625
  %16 = load i32, i32* %gridSize.addr, align 4, !dbg !2627
  %sub6 = sub nsw i32 %16, 1, !dbg !2628
  %cmp7 = icmp eq i32 %15, %sub6, !dbg !2629
  br i1 %cmp7, label %if.then8, label %if.else27, !dbg !2630

if.then8:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v9, metadata !2631, metadata !DIExpression()), !dbg !2633
  %17 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !2634
  %18 = load i32, i32* %S.addr, align 4, !dbg !2635
  %call10 = call %struct.CCGVert* @ccgSubSurf_getFaceVert(%struct.CCGFace* %17, i32 %18), !dbg !2636
  store %struct.CCGVert* %call10, %struct.CCGVert** %v9, align 8, !dbg !2633
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e, metadata !2637, metadata !DIExpression()), !dbg !2640
  %19 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !2641
  %20 = load i32, i32* %S.addr, align 4, !dbg !2642
  %call11 = call %struct.CCGEdge* @ccgSubSurf_getFaceEdge(%struct.CCGFace* %19, i32 %20), !dbg !2643
  store %struct.CCGEdge* %call11, %struct.CCGEdge** %e, align 8, !dbg !2640
  call void @llvm.dbg.declare(metadata i32* %edgeBase, metadata !2644, metadata !DIExpression()), !dbg !2645
  %21 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2646
  %22 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !2647
  %call12 = call i8* @ccgSubSurf_getEdgeUserData(%struct.CCGSubSurf* %21, %struct.CCGEdge* %22), !dbg !2648
  %23 = bitcast i8* %call12 to i32*, !dbg !2649
  %24 = load i32, i32* %23, align 4, !dbg !2650
  store i32 %24, i32* %edgeBase, align 4, !dbg !2645
  %25 = load %struct.CCGVert*, %struct.CCGVert** %v9, align 8, !dbg !2651
  %26 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !2653
  %call13 = call %struct.CCGVert* @ccgSubSurf_getEdgeVert0(%struct.CCGEdge* %26), !dbg !2654
  %cmp14 = icmp eq %struct.CCGVert* %25, %call13, !dbg !2655
  br i1 %cmp14, label %if.then15, label %if.else19, !dbg !2656

if.then15:                                        ; preds = %if.then8
  %27 = load i32, i32* %edgeBase, align 4, !dbg !2657
  %28 = load i32, i32* %gridSize.addr, align 4, !dbg !2659
  %sub16 = sub nsw i32 %28, 1, !dbg !2660
  %29 = load i32, i32* %y.addr, align 4, !dbg !2661
  %sub17 = sub nsw i32 %sub16, %29, !dbg !2662
  %add = add nsw i32 %27, %sub17, !dbg !2663
  %sub18 = sub nsw i32 %add, 1, !dbg !2664
  store i32 %sub18, i32* %retval, align 4, !dbg !2665
  br label %return, !dbg !2665

if.else19:                                        ; preds = %if.then8
  %30 = load i32, i32* %edgeBase, align 4, !dbg !2666
  %31 = load i32, i32* %edgeSize.addr, align 4, !dbg !2668
  %sub20 = sub nsw i32 %31, 2, !dbg !2669
  %sub21 = sub nsw i32 %sub20, 1, !dbg !2670
  %add22 = add nsw i32 %30, %sub21, !dbg !2671
  %32 = load i32, i32* %gridSize.addr, align 4, !dbg !2672
  %sub23 = sub nsw i32 %32, 1, !dbg !2673
  %33 = load i32, i32* %y.addr, align 4, !dbg !2674
  %sub24 = sub nsw i32 %sub23, %33, !dbg !2675
  %sub25 = sub nsw i32 %sub24, 1, !dbg !2676
  %sub26 = sub nsw i32 %add22, %sub25, !dbg !2677
  store i32 %sub26, i32* %retval, align 4, !dbg !2678
  br label %return, !dbg !2678

if.else27:                                        ; preds = %if.else
  %34 = load i32, i32* %y.addr, align 4, !dbg !2679
  %35 = load i32, i32* %gridSize.addr, align 4, !dbg !2681
  %sub28 = sub nsw i32 %35, 1, !dbg !2682
  %cmp29 = icmp eq i32 %34, %sub28, !dbg !2683
  br i1 %cmp29, label %if.then30, label %if.else54, !dbg !2684

if.then30:                                        ; preds = %if.else27
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v31, metadata !2685, metadata !DIExpression()), !dbg !2687
  %36 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !2688
  %37 = load i32, i32* %S.addr, align 4, !dbg !2689
  %call32 = call %struct.CCGVert* @ccgSubSurf_getFaceVert(%struct.CCGFace* %36, i32 %37), !dbg !2690
  store %struct.CCGVert* %call32, %struct.CCGVert** %v31, align 8, !dbg !2687
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e33, metadata !2691, metadata !DIExpression()), !dbg !2692
  %38 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !2693
  %39 = load i32, i32* %S.addr, align 4, !dbg !2694
  %40 = load i32, i32* %numVerts, align 4, !dbg !2695
  %add34 = add nsw i32 %39, %40, !dbg !2696
  %sub35 = sub nsw i32 %add34, 1, !dbg !2697
  %41 = load i32, i32* %numVerts, align 4, !dbg !2698
  %rem = srem i32 %sub35, %41, !dbg !2699
  %call36 = call %struct.CCGEdge* @ccgSubSurf_getFaceEdge(%struct.CCGFace* %38, i32 %rem), !dbg !2700
  store %struct.CCGEdge* %call36, %struct.CCGEdge** %e33, align 8, !dbg !2692
  call void @llvm.dbg.declare(metadata i32* %edgeBase37, metadata !2701, metadata !DIExpression()), !dbg !2702
  %42 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !2703
  %43 = load %struct.CCGEdge*, %struct.CCGEdge** %e33, align 8, !dbg !2704
  %call38 = call i8* @ccgSubSurf_getEdgeUserData(%struct.CCGSubSurf* %42, %struct.CCGEdge* %43), !dbg !2705
  %44 = bitcast i8* %call38 to i32*, !dbg !2706
  %45 = load i32, i32* %44, align 4, !dbg !2707
  store i32 %45, i32* %edgeBase37, align 4, !dbg !2702
  %46 = load %struct.CCGVert*, %struct.CCGVert** %v31, align 8, !dbg !2708
  %47 = load %struct.CCGEdge*, %struct.CCGEdge** %e33, align 8, !dbg !2710
  %call39 = call %struct.CCGVert* @ccgSubSurf_getEdgeVert0(%struct.CCGEdge* %47), !dbg !2711
  %cmp40 = icmp eq %struct.CCGVert* %46, %call39, !dbg !2712
  br i1 %cmp40, label %if.then41, label %if.else46, !dbg !2713

if.then41:                                        ; preds = %if.then30
  %48 = load i32, i32* %edgeBase37, align 4, !dbg !2714
  %49 = load i32, i32* %gridSize.addr, align 4, !dbg !2716
  %sub42 = sub nsw i32 %49, 1, !dbg !2717
  %50 = load i32, i32* %x.addr, align 4, !dbg !2718
  %sub43 = sub nsw i32 %sub42, %50, !dbg !2719
  %add44 = add nsw i32 %48, %sub43, !dbg !2720
  %sub45 = sub nsw i32 %add44, 1, !dbg !2721
  store i32 %sub45, i32* %retval, align 4, !dbg !2722
  br label %return, !dbg !2722

if.else46:                                        ; preds = %if.then30
  %51 = load i32, i32* %edgeBase37, align 4, !dbg !2723
  %52 = load i32, i32* %edgeSize.addr, align 4, !dbg !2725
  %sub47 = sub nsw i32 %52, 2, !dbg !2726
  %sub48 = sub nsw i32 %sub47, 1, !dbg !2727
  %add49 = add nsw i32 %51, %sub48, !dbg !2728
  %53 = load i32, i32* %gridSize.addr, align 4, !dbg !2729
  %sub50 = sub nsw i32 %53, 1, !dbg !2730
  %54 = load i32, i32* %x.addr, align 4, !dbg !2731
  %sub51 = sub nsw i32 %sub50, %54, !dbg !2732
  %sub52 = sub nsw i32 %sub51, 1, !dbg !2733
  %sub53 = sub nsw i32 %add49, %sub52, !dbg !2734
  store i32 %sub53, i32* %retval, align 4, !dbg !2735
  br label %return, !dbg !2735

if.else54:                                        ; preds = %if.else27
  %55 = load i32, i32* %x.addr, align 4, !dbg !2736
  %cmp55 = icmp eq i32 %55, 0, !dbg !2738
  br i1 %cmp55, label %land.lhs.true56, label %if.else59, !dbg !2739

land.lhs.true56:                                  ; preds = %if.else54
  %56 = load i32, i32* %y.addr, align 4, !dbg !2740
  %cmp57 = icmp eq i32 %56, 0, !dbg !2741
  br i1 %cmp57, label %if.then58, label %if.else59, !dbg !2742

if.then58:                                        ; preds = %land.lhs.true56
  %57 = load i32, i32* %faceBase, align 4, !dbg !2743
  store i32 %57, i32* %retval, align 4, !dbg !2745
  br label %return, !dbg !2745

if.else59:                                        ; preds = %land.lhs.true56, %if.else54
  %58 = load i32, i32* %x.addr, align 4, !dbg !2746
  %cmp60 = icmp eq i32 %58, 0, !dbg !2748
  br i1 %cmp60, label %if.then61, label %if.else70, !dbg !2749

if.then61:                                        ; preds = %if.else59
  %59 = load i32, i32* %S.addr, align 4, !dbg !2750
  %60 = load i32, i32* %numVerts, align 4, !dbg !2752
  %add62 = add nsw i32 %59, %60, !dbg !2753
  %sub63 = sub nsw i32 %add62, 1, !dbg !2754
  %61 = load i32, i32* %numVerts, align 4, !dbg !2755
  %rem64 = srem i32 %sub63, %61, !dbg !2756
  store i32 %rem64, i32* %S.addr, align 4, !dbg !2757
  %62 = load i32, i32* %faceBase, align 4, !dbg !2758
  %add65 = add nsw i32 %62, 1, !dbg !2759
  %63 = load i32, i32* %gridSize.addr, align 4, !dbg !2760
  %sub66 = sub nsw i32 %63, 2, !dbg !2761
  %64 = load i32, i32* %S.addr, align 4, !dbg !2762
  %mul = mul nsw i32 %sub66, %64, !dbg !2763
  %add67 = add nsw i32 %add65, %mul, !dbg !2764
  %65 = load i32, i32* %y.addr, align 4, !dbg !2765
  %sub68 = sub nsw i32 %65, 1, !dbg !2766
  %add69 = add nsw i32 %add67, %sub68, !dbg !2767
  store i32 %add69, i32* %retval, align 4, !dbg !2768
  br label %return, !dbg !2768

if.else70:                                        ; preds = %if.else59
  %66 = load i32, i32* %y.addr, align 4, !dbg !2769
  %cmp71 = icmp eq i32 %66, 0, !dbg !2771
  br i1 %cmp71, label %if.then72, label %if.else79, !dbg !2772

if.then72:                                        ; preds = %if.else70
  %67 = load i32, i32* %faceBase, align 4, !dbg !2773
  %add73 = add nsw i32 %67, 1, !dbg !2775
  %68 = load i32, i32* %gridSize.addr, align 4, !dbg !2776
  %sub74 = sub nsw i32 %68, 2, !dbg !2777
  %69 = load i32, i32* %S.addr, align 4, !dbg !2778
  %mul75 = mul nsw i32 %sub74, %69, !dbg !2779
  %add76 = add nsw i32 %add73, %mul75, !dbg !2780
  %70 = load i32, i32* %x.addr, align 4, !dbg !2781
  %sub77 = sub nsw i32 %70, 1, !dbg !2782
  %add78 = add nsw i32 %add76, %sub77, !dbg !2783
  store i32 %add78, i32* %retval, align 4, !dbg !2784
  br label %return, !dbg !2784

if.else79:                                        ; preds = %if.else70
  %71 = load i32, i32* %faceBase, align 4, !dbg !2785
  %add80 = add nsw i32 %71, 1, !dbg !2787
  %72 = load i32, i32* %gridSize.addr, align 4, !dbg !2788
  %sub81 = sub nsw i32 %72, 2, !dbg !2789
  %73 = load i32, i32* %numVerts, align 4, !dbg !2790
  %mul82 = mul nsw i32 %sub81, %73, !dbg !2791
  %add83 = add nsw i32 %add80, %mul82, !dbg !2792
  %74 = load i32, i32* %S.addr, align 4, !dbg !2793
  %75 = load i32, i32* %gridSize.addr, align 4, !dbg !2794
  %sub84 = sub nsw i32 %75, 2, !dbg !2795
  %mul85 = mul nsw i32 %74, %sub84, !dbg !2796
  %76 = load i32, i32* %gridSize.addr, align 4, !dbg !2797
  %sub86 = sub nsw i32 %76, 2, !dbg !2798
  %mul87 = mul nsw i32 %mul85, %sub86, !dbg !2799
  %add88 = add nsw i32 %add83, %mul87, !dbg !2800
  %77 = load i32, i32* %y.addr, align 4, !dbg !2801
  %sub89 = sub nsw i32 %77, 1, !dbg !2802
  %78 = load i32, i32* %gridSize.addr, align 4, !dbg !2803
  %sub90 = sub nsw i32 %78, 2, !dbg !2804
  %mul91 = mul nsw i32 %sub89, %sub90, !dbg !2805
  %add92 = add nsw i32 %add88, %mul91, !dbg !2806
  %79 = load i32, i32* %x.addr, align 4, !dbg !2807
  %sub93 = sub nsw i32 %79, 1, !dbg !2808
  %add94 = add nsw i32 %add92, %sub93, !dbg !2809
  store i32 %add94, i32* %retval, align 4, !dbg !2810
  br label %return, !dbg !2810

return:                                           ; preds = %if.else79, %if.then72, %if.then61, %if.then58, %if.else46, %if.then41, %if.else19, %if.then15, %if.then
  %80 = load i32, i32* %retval, align 4, !dbg !2811
  ret i32 %80, !dbg !2811
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @subsurf_copy_grid_paint_mask(%struct.DerivedMesh* %dm, %struct.MPoly* %mpoly, float* %paint_mask, %struct.GridPaintMask* %grid_paint_mask) #0 !dbg !2812 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %mpoly.addr = alloca %struct.MPoly*, align 8
  %paint_mask.addr = alloca float*, align 8
  %grid_paint_mask.addr = alloca %struct.GridPaintMask*, align 8
  %ccgdm = alloca %struct.CCGDerivedMesh*, align 8
  %ss = alloca %struct.CCGSubSurf*, align 8
  %level = alloca i32, align 4
  %gridSize = alloca i32, align 4
  %edgeSize = alloca i32, align 4
  %totface = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %factor = alloca i32, align 4
  %gpm_gridsize = alloca i32, align 4
  %f = alloca %struct.CCGFace*, align 8
  %p = alloca %struct.MPoly*, align 8
  %gpm = alloca %struct.GridPaintMask*, align 8
  %vndx = alloca i32, align 4
  %offset = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !2823, metadata !DIExpression()), !dbg !2824
  store %struct.MPoly* %mpoly, %struct.MPoly** %mpoly.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpoly.addr, metadata !2825, metadata !DIExpression()), !dbg !2826
  store float* %paint_mask, float** %paint_mask.addr, align 8
  call void @llvm.dbg.declare(metadata float** %paint_mask.addr, metadata !2827, metadata !DIExpression()), !dbg !2828
  store %struct.GridPaintMask* %grid_paint_mask, %struct.GridPaintMask** %grid_paint_mask.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GridPaintMask** %grid_paint_mask.addr, metadata !2829, metadata !DIExpression()), !dbg !2830
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm, metadata !2831, metadata !DIExpression()), !dbg !2832
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2833
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CCGDerivedMesh*, !dbg !2834
  store %struct.CCGDerivedMesh* %1, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !2832
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss, metadata !2835, metadata !DIExpression()), !dbg !2836
  %2 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !2837
  %ss1 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %2, i32 0, i32 1, !dbg !2838
  %3 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss1, align 8, !dbg !2838
  store %struct.CCGSubSurf* %3, %struct.CCGSubSurf** %ss, align 8, !dbg !2836
  call void @llvm.dbg.declare(metadata i32* %level, metadata !2839, metadata !DIExpression()), !dbg !2840
  %4 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !2841
  %call = call i32 @ccgSubSurf_getSubdivisionLevels(%struct.CCGSubSurf* %4), !dbg !2842
  store i32 %call, i32* %level, align 4, !dbg !2840
  call void @llvm.dbg.declare(metadata i32* %gridSize, metadata !2843, metadata !DIExpression()), !dbg !2844
  %5 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !2845
  %call2 = call i32 @ccgSubSurf_getGridSize(%struct.CCGSubSurf* %5), !dbg !2846
  store i32 %call2, i32* %gridSize, align 4, !dbg !2844
  call void @llvm.dbg.declare(metadata i32* %edgeSize, metadata !2847, metadata !DIExpression()), !dbg !2848
  %6 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !2849
  %call3 = call i32 @ccgSubSurf_getEdgeSize(%struct.CCGSubSurf* %6), !dbg !2850
  store i32 %call3, i32* %edgeSize, align 4, !dbg !2848
  call void @llvm.dbg.declare(metadata i32* %totface, metadata !2851, metadata !DIExpression()), !dbg !2852
  %7 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !2853
  %call4 = call i32 @ccgSubSurf_getNumFaces(%struct.CCGSubSurf* %7), !dbg !2854
  store i32 %call4, i32* %totface, align 4, !dbg !2852
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2855, metadata !DIExpression()), !dbg !2856
  call void @llvm.dbg.declare(metadata i32* %j, metadata !2857, metadata !DIExpression()), !dbg !2858
  call void @llvm.dbg.declare(metadata i32* %x, metadata !2859, metadata !DIExpression()), !dbg !2860
  call void @llvm.dbg.declare(metadata i32* %y, metadata !2861, metadata !DIExpression()), !dbg !2862
  call void @llvm.dbg.declare(metadata i32* %factor, metadata !2863, metadata !DIExpression()), !dbg !2864
  call void @llvm.dbg.declare(metadata i32* %gpm_gridsize, metadata !2865, metadata !DIExpression()), !dbg !2866
  store i32 0, i32* %i, align 4, !dbg !2867
  br label %for.cond, !dbg !2869

for.cond:                                         ; preds = %for.inc37, %entry
  %8 = load i32, i32* %i, align 4, !dbg !2870
  %9 = load i32, i32* %totface, align 4, !dbg !2872
  %cmp = icmp slt i32 %8, %9, !dbg !2873
  br i1 %cmp, label %for.body, label %for.end39, !dbg !2874

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f, metadata !2875, metadata !DIExpression()), !dbg !2877
  %10 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !2878
  %faceMap = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %10, i32 0, i32 7, !dbg !2879
  %11 = load %struct.anon.1*, %struct.anon.1** %faceMap, align 8, !dbg !2879
  %12 = load i32, i32* %i, align 4, !dbg !2880
  %idxprom = sext i32 %12 to i64, !dbg !2878
  %arrayidx = getelementptr inbounds %struct.anon.1, %struct.anon.1* %11, i64 %idxprom, !dbg !2878
  %face = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx, i32 0, i32 3, !dbg !2881
  %13 = load %struct.CCGFace*, %struct.CCGFace** %face, align 8, !dbg !2881
  store %struct.CCGFace* %13, %struct.CCGFace** %f, align 8, !dbg !2877
  call void @llvm.dbg.declare(metadata %struct.MPoly** %p, metadata !2882, metadata !DIExpression()), !dbg !2883
  %14 = load %struct.MPoly*, %struct.MPoly** %mpoly.addr, align 8, !dbg !2884
  %15 = load i32, i32* %i, align 4, !dbg !2885
  %idxprom5 = sext i32 %15 to i64, !dbg !2884
  %arrayidx6 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %14, i64 %idxprom5, !dbg !2884
  store %struct.MPoly* %arrayidx6, %struct.MPoly** %p, align 8, !dbg !2883
  store i32 0, i32* %j, align 4, !dbg !2886
  br label %for.cond7, !dbg !2888

for.cond7:                                        ; preds = %for.inc34, %for.body
  %16 = load i32, i32* %j, align 4, !dbg !2889
  %17 = load %struct.MPoly*, %struct.MPoly** %p, align 8, !dbg !2891
  %totloop = getelementptr inbounds %struct.MPoly, %struct.MPoly* %17, i32 0, i32 1, !dbg !2892
  %18 = load i32, i32* %totloop, align 4, !dbg !2892
  %cmp8 = icmp slt i32 %16, %18, !dbg !2893
  br i1 %cmp8, label %for.body9, label %for.end36, !dbg !2894

for.body9:                                        ; preds = %for.cond7
  call void @llvm.dbg.declare(metadata %struct.GridPaintMask** %gpm, metadata !2895, metadata !DIExpression()), !dbg !2897
  %19 = load %struct.GridPaintMask*, %struct.GridPaintMask** %grid_paint_mask.addr, align 8, !dbg !2898
  %20 = load %struct.MPoly*, %struct.MPoly** %p, align 8, !dbg !2899
  %loopstart = getelementptr inbounds %struct.MPoly, %struct.MPoly* %20, i32 0, i32 0, !dbg !2900
  %21 = load i32, i32* %loopstart, align 4, !dbg !2900
  %22 = load i32, i32* %j, align 4, !dbg !2901
  %add = add nsw i32 %21, %22, !dbg !2902
  %idxprom10 = sext i32 %add to i64, !dbg !2898
  %arrayidx11 = getelementptr inbounds %struct.GridPaintMask, %struct.GridPaintMask* %19, i64 %idxprom10, !dbg !2898
  store %struct.GridPaintMask* %arrayidx11, %struct.GridPaintMask** %gpm, align 8, !dbg !2897
  %23 = load %struct.GridPaintMask*, %struct.GridPaintMask** %gpm, align 8, !dbg !2903
  %data = getelementptr inbounds %struct.GridPaintMask, %struct.GridPaintMask* %23, i32 0, i32 0, !dbg !2905
  %24 = load float*, float** %data, align 8, !dbg !2905
  %tobool = icmp ne float* %24, null, !dbg !2903
  br i1 %tobool, label %if.end, label %if.then, !dbg !2906

if.then:                                          ; preds = %for.body9
  br label %for.inc34, !dbg !2907

if.end:                                           ; preds = %for.body9
  %25 = load i32, i32* %level, align 4, !dbg !2908
  %26 = load %struct.GridPaintMask*, %struct.GridPaintMask** %gpm, align 8, !dbg !2909
  %level12 = getelementptr inbounds %struct.GridPaintMask, %struct.GridPaintMask* %26, i32 0, i32 1, !dbg !2910
  %27 = load i32, i32* %level12, align 8, !dbg !2910
  %call13 = call i32 @BKE_ccg_factor(i32 %25, i32 %27), !dbg !2911
  store i32 %call13, i32* %factor, align 4, !dbg !2912
  %28 = load %struct.GridPaintMask*, %struct.GridPaintMask** %gpm, align 8, !dbg !2913
  %level14 = getelementptr inbounds %struct.GridPaintMask, %struct.GridPaintMask* %28, i32 0, i32 1, !dbg !2914
  %29 = load i32, i32* %level14, align 8, !dbg !2914
  %call15 = call i32 @BKE_ccg_gridsize(i32 %29), !dbg !2915
  store i32 %call15, i32* %gpm_gridsize, align 4, !dbg !2916
  store i32 0, i32* %y, align 4, !dbg !2917
  br label %for.cond16, !dbg !2919

for.cond16:                                       ; preds = %for.inc31, %if.end
  %30 = load i32, i32* %y, align 4, !dbg !2920
  %31 = load i32, i32* %gridSize, align 4, !dbg !2922
  %cmp17 = icmp slt i32 %30, %31, !dbg !2923
  br i1 %cmp17, label %for.body18, label %for.end33, !dbg !2924

for.body18:                                       ; preds = %for.cond16
  store i32 0, i32* %x, align 4, !dbg !2925
  br label %for.cond19, !dbg !2928

for.cond19:                                       ; preds = %for.inc, %for.body18
  %32 = load i32, i32* %x, align 4, !dbg !2929
  %33 = load i32, i32* %gridSize, align 4, !dbg !2931
  %cmp20 = icmp slt i32 %32, %33, !dbg !2932
  br i1 %cmp20, label %for.body21, label %for.end, !dbg !2933

for.body21:                                       ; preds = %for.cond19
  call void @llvm.dbg.declare(metadata i32* %vndx, metadata !2934, metadata !DIExpression()), !dbg !2936
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !2937, metadata !DIExpression()), !dbg !2938
  %34 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !2939
  %35 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !2940
  %36 = load i32, i32* %j, align 4, !dbg !2941
  %37 = load i32, i32* %x, align 4, !dbg !2942
  %38 = load i32, i32* %y, align 4, !dbg !2943
  %39 = load i32, i32* %edgeSize, align 4, !dbg !2944
  %40 = load i32, i32* %gridSize, align 4, !dbg !2945
  %call22 = call i32 @getFaceIndex(%struct.CCGSubSurf* %34, %struct.CCGFace* %35, i32 %36, i32 %37, i32 %38, i32 %39, i32 %40), !dbg !2946
  store i32 %call22, i32* %vndx, align 4, !dbg !2947
  %41 = load i32, i32* %y, align 4, !dbg !2948
  %42 = load i32, i32* %factor, align 4, !dbg !2949
  %mul = mul nsw i32 %41, %42, !dbg !2950
  %43 = load i32, i32* %gpm_gridsize, align 4, !dbg !2951
  %mul23 = mul nsw i32 %mul, %43, !dbg !2952
  %44 = load i32, i32* %x, align 4, !dbg !2953
  %45 = load i32, i32* %factor, align 4, !dbg !2954
  %mul24 = mul nsw i32 %44, %45, !dbg !2955
  %add25 = add nsw i32 %mul23, %mul24, !dbg !2956
  store i32 %add25, i32* %offset, align 4, !dbg !2957
  %46 = load %struct.GridPaintMask*, %struct.GridPaintMask** %gpm, align 8, !dbg !2958
  %data26 = getelementptr inbounds %struct.GridPaintMask, %struct.GridPaintMask* %46, i32 0, i32 0, !dbg !2959
  %47 = load float*, float** %data26, align 8, !dbg !2959
  %48 = load i32, i32* %offset, align 4, !dbg !2960
  %idxprom27 = sext i32 %48 to i64, !dbg !2958
  %arrayidx28 = getelementptr inbounds float, float* %47, i64 %idxprom27, !dbg !2958
  %49 = load float, float* %arrayidx28, align 4, !dbg !2958
  %50 = load float*, float** %paint_mask.addr, align 8, !dbg !2961
  %51 = load i32, i32* %vndx, align 4, !dbg !2962
  %idxprom29 = sext i32 %51 to i64, !dbg !2961
  %arrayidx30 = getelementptr inbounds float, float* %50, i64 %idxprom29, !dbg !2961
  store float %49, float* %arrayidx30, align 4, !dbg !2963
  br label %for.inc, !dbg !2964

for.inc:                                          ; preds = %for.body21
  %52 = load i32, i32* %x, align 4, !dbg !2965
  %inc = add nsw i32 %52, 1, !dbg !2965
  store i32 %inc, i32* %x, align 4, !dbg !2965
  br label %for.cond19, !dbg !2966, !llvm.loop !2967

for.end:                                          ; preds = %for.cond19
  br label %for.inc31, !dbg !2969

for.inc31:                                        ; preds = %for.end
  %53 = load i32, i32* %y, align 4, !dbg !2970
  %inc32 = add nsw i32 %53, 1, !dbg !2970
  store i32 %inc32, i32* %y, align 4, !dbg !2970
  br label %for.cond16, !dbg !2971, !llvm.loop !2972

for.end33:                                        ; preds = %for.cond16
  br label %for.inc34, !dbg !2974

for.inc34:                                        ; preds = %for.end33, %if.then
  %54 = load i32, i32* %j, align 4, !dbg !2975
  %inc35 = add nsw i32 %54, 1, !dbg !2975
  store i32 %inc35, i32* %j, align 4, !dbg !2975
  br label %for.cond7, !dbg !2976, !llvm.loop !2977

for.end36:                                        ; preds = %for.cond7
  br label %for.inc37, !dbg !2979

for.inc37:                                        ; preds = %for.end36
  %55 = load i32, i32* %i, align 4, !dbg !2980
  %inc38 = add nsw i32 %55, 1, !dbg !2980
  store i32 %inc38, i32* %i, align 4, !dbg !2980
  br label %for.cond, !dbg !2981, !llvm.loop !2982

for.end39:                                        ; preds = %for.cond
  ret void, !dbg !2984
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.DerivedMesh* @subsurf_make_derived_from_derived(%struct.DerivedMesh* %dm, %struct.SubsurfModifierData* %smd, [3 x float]* %vertCos, i32 %flags) #0 !dbg !2985 {
entry:
  %retval = alloca %struct.DerivedMesh*, align 8
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %smd.addr = alloca %struct.SubsurfModifierData*, align 8
  %vertCos.addr = alloca [3 x float]*, align 8
  %flags.addr = alloca i32, align 4
  %useSimple = alloca i32, align 4
  %useAging = alloca i32, align 4
  %useSubsurfUv = alloca i32, align 4
  %drawInteriorEdges = alloca i32, align 4
  %result = alloca %struct.CCGDerivedMesh*, align 8
  %levels = alloca i32, align 4
  %ss = alloca %struct.CCGSubSurf*, align 8
  %levels31 = alloca i32, align 4
  %useIncremental = alloca i32, align 4
  %levels57 = alloca i32, align 4
  %ss73 = alloca %struct.CCGSubSurf*, align 8
  %ccg_flags = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !2999, metadata !DIExpression()), !dbg !3000
  store %struct.SubsurfModifierData* %smd, %struct.SubsurfModifierData** %smd.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.SubsurfModifierData** %smd.addr, metadata !3001, metadata !DIExpression()), !dbg !3002
  store [3 x float]* %vertCos, [3 x float]** %vertCos.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %vertCos.addr, metadata !3003, metadata !DIExpression()), !dbg !3004
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !3005, metadata !DIExpression()), !dbg !3006
  call void @llvm.dbg.declare(metadata i32* %useSimple, metadata !3007, metadata !DIExpression()), !dbg !3008
  %0 = load %struct.SubsurfModifierData*, %struct.SubsurfModifierData** %smd.addr, align 8, !dbg !3009
  %subdivType = getelementptr inbounds %struct.SubsurfModifierData, %struct.SubsurfModifierData* %0, i32 0, i32 1, !dbg !3010
  %1 = load i16, i16* %subdivType, align 8, !dbg !3010
  %conv = sext i16 %1 to i32, !dbg !3009
  %cmp = icmp eq i32 %conv, 1, !dbg !3011
  %2 = zext i1 %cmp to i64, !dbg !3012
  %cond = select i1 %cmp, i32 16, i32 0, !dbg !3012
  store i32 %cond, i32* %useSimple, align 4, !dbg !3008
  call void @llvm.dbg.declare(metadata i32* %useAging, metadata !3013, metadata !DIExpression()), !dbg !3015
  %3 = load %struct.SubsurfModifierData*, %struct.SubsurfModifierData** %smd.addr, align 8, !dbg !3016
  %flags2 = getelementptr inbounds %struct.SubsurfModifierData, %struct.SubsurfModifierData* %3, i32 0, i32 4, !dbg !3017
  %4 = load i16, i16* %flags2, align 2, !dbg !3017
  %conv3 = sext i16 %4 to i32, !dbg !3016
  %and = and i32 %conv3, 2, !dbg !3018
  %tobool = icmp ne i32 %and, 0, !dbg !3016
  %5 = zext i1 %tobool to i64, !dbg !3016
  %cond4 = select i1 %tobool, i32 1, i32 0, !dbg !3016
  store i32 %cond4, i32* %useAging, align 4, !dbg !3015
  call void @llvm.dbg.declare(metadata i32* %useSubsurfUv, metadata !3019, metadata !DIExpression()), !dbg !3020
  %6 = load %struct.SubsurfModifierData*, %struct.SubsurfModifierData** %smd.addr, align 8, !dbg !3021
  %flags5 = getelementptr inbounds %struct.SubsurfModifierData, %struct.SubsurfModifierData* %6, i32 0, i32 4, !dbg !3022
  %7 = load i16, i16* %flags5, align 2, !dbg !3022
  %conv6 = sext i16 %7 to i32, !dbg !3021
  %and7 = and i32 %conv6, 8, !dbg !3023
  store i32 %and7, i32* %useSubsurfUv, align 4, !dbg !3020
  call void @llvm.dbg.declare(metadata i32* %drawInteriorEdges, metadata !3024, metadata !DIExpression()), !dbg !3025
  %8 = load %struct.SubsurfModifierData*, %struct.SubsurfModifierData** %smd.addr, align 8, !dbg !3026
  %flags8 = getelementptr inbounds %struct.SubsurfModifierData, %struct.SubsurfModifierData* %8, i32 0, i32 4, !dbg !3027
  %9 = load i16, i16* %flags8, align 2, !dbg !3027
  %conv9 = sext i16 %9 to i32, !dbg !3026
  %and10 = and i32 %conv9, 4, !dbg !3028
  %tobool11 = icmp ne i32 %and10, 0, !dbg !3029
  %lnot = xor i1 %tobool11, true, !dbg !3029
  %lnot.ext = zext i1 %lnot to i32, !dbg !3029
  store i32 %lnot.ext, i32* %drawInteriorEdges, align 4, !dbg !3025
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %result, metadata !3030, metadata !DIExpression()), !dbg !3031
  %10 = load i32, i32* %flags.addr, align 4, !dbg !3032
  %and12 = and i32 %10, 4, !dbg !3034
  %tobool13 = icmp ne i32 %and12, 0, !dbg !3034
  br i1 %tobool13, label %if.then, label %if.else, !dbg !3035

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %levels, metadata !3036, metadata !DIExpression()), !dbg !3038
  %11 = load %struct.SubsurfModifierData*, %struct.SubsurfModifierData** %smd.addr, align 8, !dbg !3039
  %modifier = getelementptr inbounds %struct.SubsurfModifierData, %struct.SubsurfModifierData* %11, i32 0, i32 0, !dbg !3040
  %scene = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %modifier, i32 0, i32 7, !dbg !3041
  %12 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !3041
  %tobool14 = icmp ne %struct.Scene* %12, null, !dbg !3042
  br i1 %tobool14, label %cond.true, label %cond.false, !dbg !3042

cond.true:                                        ; preds = %if.then
  %13 = load %struct.SubsurfModifierData*, %struct.SubsurfModifierData** %smd.addr, align 8, !dbg !3043
  %modifier15 = getelementptr inbounds %struct.SubsurfModifierData, %struct.SubsurfModifierData* %13, i32 0, i32 0, !dbg !3044
  %scene16 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %modifier15, i32 0, i32 7, !dbg !3045
  %14 = load %struct.Scene*, %struct.Scene** %scene16, align 8, !dbg !3045
  %r = getelementptr inbounds %struct.Scene, %struct.Scene* %14, i32 0, i32 22, !dbg !3046
  %15 = load %struct.SubsurfModifierData*, %struct.SubsurfModifierData** %smd.addr, align 8, !dbg !3047
  %levels17 = getelementptr inbounds %struct.SubsurfModifierData, %struct.SubsurfModifierData* %15, i32 0, i32 2, !dbg !3048
  %16 = load i16, i16* %levels17, align 2, !dbg !3048
  %conv18 = sext i16 %16 to i32, !dbg !3047
  %call = call i32 @get_render_subsurf_level(%struct.RenderData* %r, i32 %conv18), !dbg !3049
  br label %cond.end, !dbg !3042

cond.false:                                       ; preds = %if.then
  %17 = load %struct.SubsurfModifierData*, %struct.SubsurfModifierData** %smd.addr, align 8, !dbg !3050
  %levels19 = getelementptr inbounds %struct.SubsurfModifierData, %struct.SubsurfModifierData* %17, i32 0, i32 2, !dbg !3051
  %18 = load i16, i16* %levels19, align 2, !dbg !3051
  %conv20 = sext i16 %18 to i32, !dbg !3050
  br label %cond.end, !dbg !3042

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond21 = phi i32 [ %call, %cond.true ], [ %conv20, %cond.false ], !dbg !3042
  store i32 %cond21, i32* %levels, align 4, !dbg !3038
  %19 = load %struct.SubsurfModifierData*, %struct.SubsurfModifierData** %smd.addr, align 8, !dbg !3052
  %emCache = getelementptr inbounds %struct.SubsurfModifierData, %struct.SubsurfModifierData* %19, i32 0, i32 5, !dbg !3053
  %20 = load i8*, i8** %emCache, align 8, !dbg !3053
  %21 = bitcast i8* %20 to %struct.CCGSubSurf*, !dbg !3052
  %22 = load i32, i32* %levels, align 4, !dbg !3054
  %23 = load i32, i32* %useSimple, align 4, !dbg !3055
  %24 = load i32, i32* %useAging, align 4, !dbg !3056
  %or = or i32 %23, %24, !dbg !3057
  %or22 = or i32 %or, 4, !dbg !3058
  %call23 = call %struct.CCGSubSurf* @_getSubSurf(%struct.CCGSubSurf* %21, i32 %22, i32 3, i32 %or22), !dbg !3059
  %25 = bitcast %struct.CCGSubSurf* %call23 to i8*, !dbg !3059
  %26 = load %struct.SubsurfModifierData*, %struct.SubsurfModifierData** %smd.addr, align 8, !dbg !3060
  %emCache24 = getelementptr inbounds %struct.SubsurfModifierData, %struct.SubsurfModifierData* %26, i32 0, i32 5, !dbg !3061
  store i8* %25, i8** %emCache24, align 8, !dbg !3062
  %27 = load %struct.SubsurfModifierData*, %struct.SubsurfModifierData** %smd.addr, align 8, !dbg !3063
  %emCache25 = getelementptr inbounds %struct.SubsurfModifierData, %struct.SubsurfModifierData* %27, i32 0, i32 5, !dbg !3064
  %28 = load i8*, i8** %emCache25, align 8, !dbg !3064
  %29 = bitcast i8* %28 to %struct.CCGSubSurf*, !dbg !3063
  %30 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3065
  %31 = load [3 x float]*, [3 x float]** %vertCos.addr, align 8, !dbg !3066
  %32 = load i32, i32* %useSimple, align 4, !dbg !3067
  call void @ss_sync_from_derivedmesh(%struct.CCGSubSurf* %29, %struct.DerivedMesh* %30, [3 x float]* %31, i32 %32), !dbg !3068
  %33 = load %struct.SubsurfModifierData*, %struct.SubsurfModifierData** %smd.addr, align 8, !dbg !3069
  %emCache26 = getelementptr inbounds %struct.SubsurfModifierData, %struct.SubsurfModifierData* %33, i32 0, i32 5, !dbg !3070
  %34 = load i8*, i8** %emCache26, align 8, !dbg !3070
  %35 = bitcast i8* %34 to %struct.CCGSubSurf*, !dbg !3069
  %36 = load i32, i32* %drawInteriorEdges, align 4, !dbg !3071
  %37 = load i32, i32* %useSubsurfUv, align 4, !dbg !3072
  %38 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3073
  %call27 = call %struct.CCGDerivedMesh* @getCCGDerivedMesh(%struct.CCGSubSurf* %35, i32 %36, i32 %37, %struct.DerivedMesh* %38), !dbg !3074
  store %struct.CCGDerivedMesh* %call27, %struct.CCGDerivedMesh** %result, align 8, !dbg !3075
  br label %if.end125, !dbg !3076

if.else:                                          ; preds = %entry
  %39 = load i32, i32* %flags.addr, align 4, !dbg !3077
  %and28 = and i32 %39, 1, !dbg !3079
  %tobool29 = icmp ne i32 %and28, 0, !dbg !3079
  br i1 %tobool29, label %if.then30, label %if.else53, !dbg !3080

if.then30:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss, metadata !3081, metadata !DIExpression()), !dbg !3083
  call void @llvm.dbg.declare(metadata i32* %levels31, metadata !3084, metadata !DIExpression()), !dbg !3085
  %40 = load %struct.SubsurfModifierData*, %struct.SubsurfModifierData** %smd.addr, align 8, !dbg !3086
  %modifier32 = getelementptr inbounds %struct.SubsurfModifierData, %struct.SubsurfModifierData* %40, i32 0, i32 0, !dbg !3087
  %scene33 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %modifier32, i32 0, i32 7, !dbg !3088
  %41 = load %struct.Scene*, %struct.Scene** %scene33, align 8, !dbg !3088
  %tobool34 = icmp ne %struct.Scene* %41, null, !dbg !3089
  br i1 %tobool34, label %cond.true35, label %cond.false41, !dbg !3089

cond.true35:                                      ; preds = %if.then30
  %42 = load %struct.SubsurfModifierData*, %struct.SubsurfModifierData** %smd.addr, align 8, !dbg !3090
  %modifier36 = getelementptr inbounds %struct.SubsurfModifierData, %struct.SubsurfModifierData* %42, i32 0, i32 0, !dbg !3091
  %scene37 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %modifier36, i32 0, i32 7, !dbg !3092
  %43 = load %struct.Scene*, %struct.Scene** %scene37, align 8, !dbg !3092
  %r38 = getelementptr inbounds %struct.Scene, %struct.Scene* %43, i32 0, i32 22, !dbg !3093
  %44 = load %struct.SubsurfModifierData*, %struct.SubsurfModifierData** %smd.addr, align 8, !dbg !3094
  %renderLevels = getelementptr inbounds %struct.SubsurfModifierData, %struct.SubsurfModifierData* %44, i32 0, i32 3, !dbg !3095
  %45 = load i16, i16* %renderLevels, align 4, !dbg !3095
  %conv39 = sext i16 %45 to i32, !dbg !3094
  %call40 = call i32 @get_render_subsurf_level(%struct.RenderData* %r38, i32 %conv39), !dbg !3096
  br label %cond.end44, !dbg !3089

cond.false41:                                     ; preds = %if.then30
  %46 = load %struct.SubsurfModifierData*, %struct.SubsurfModifierData** %smd.addr, align 8, !dbg !3097
  %renderLevels42 = getelementptr inbounds %struct.SubsurfModifierData, %struct.SubsurfModifierData* %46, i32 0, i32 3, !dbg !3098
  %47 = load i16, i16* %renderLevels42, align 4, !dbg !3098
  %conv43 = sext i16 %47 to i32, !dbg !3097
  br label %cond.end44, !dbg !3089

cond.end44:                                       ; preds = %cond.false41, %cond.true35
  %cond45 = phi i32 [ %call40, %cond.true35 ], [ %conv43, %cond.false41 ], !dbg !3089
  store i32 %cond45, i32* %levels31, align 4, !dbg !3085
  %48 = load i32, i32* %levels31, align 4, !dbg !3099
  %cmp46 = icmp eq i32 %48, 0, !dbg !3101
  br i1 %cmp46, label %if.then48, label %if.end, !dbg !3102

if.then48:                                        ; preds = %cond.end44
  %49 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3103
  store %struct.DerivedMesh* %49, %struct.DerivedMesh** %retval, align 8, !dbg !3104
  br label %return, !dbg !3104

if.end:                                           ; preds = %cond.end44
  %50 = load i32, i32* %levels31, align 4, !dbg !3105
  %51 = load i32, i32* %useSimple, align 4, !dbg !3106
  %or49 = or i32 %51, 2, !dbg !3107
  %or50 = or i32 %or49, 4, !dbg !3108
  %call51 = call %struct.CCGSubSurf* @_getSubSurf(%struct.CCGSubSurf* null, i32 %50, i32 3, i32 %or50), !dbg !3109
  store %struct.CCGSubSurf* %call51, %struct.CCGSubSurf** %ss, align 8, !dbg !3110
  %52 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !3111
  %53 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3112
  %54 = load [3 x float]*, [3 x float]** %vertCos.addr, align 8, !dbg !3113
  %55 = load i32, i32* %useSimple, align 4, !dbg !3114
  call void @ss_sync_from_derivedmesh(%struct.CCGSubSurf* %52, %struct.DerivedMesh* %53, [3 x float]* %54, i32 %55), !dbg !3115
  %56 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !3116
  %57 = load i32, i32* %drawInteriorEdges, align 4, !dbg !3117
  %58 = load i32, i32* %useSubsurfUv, align 4, !dbg !3118
  %59 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3119
  %call52 = call %struct.CCGDerivedMesh* @getCCGDerivedMesh(%struct.CCGSubSurf* %56, i32 %57, i32 %58, %struct.DerivedMesh* %59), !dbg !3120
  store %struct.CCGDerivedMesh* %call52, %struct.CCGDerivedMesh** %result, align 8, !dbg !3121
  %60 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %result, align 8, !dbg !3122
  %freeSS = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %60, i32 0, i32 2, !dbg !3123
  store i32 1, i32* %freeSS, align 8, !dbg !3124
  br label %if.end124, !dbg !3125

if.else53:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %useIncremental, metadata !3126, metadata !DIExpression()), !dbg !3128
  %61 = load %struct.SubsurfModifierData*, %struct.SubsurfModifierData** %smd.addr, align 8, !dbg !3129
  %flags54 = getelementptr inbounds %struct.SubsurfModifierData, %struct.SubsurfModifierData* %61, i32 0, i32 4, !dbg !3130
  %62 = load i16, i16* %flags54, align 2, !dbg !3130
  %conv55 = sext i16 %62 to i32, !dbg !3129
  %and56 = and i32 %conv55, 1, !dbg !3131
  store i32 %and56, i32* %useIncremental, align 4, !dbg !3128
  call void @llvm.dbg.declare(metadata i32* %levels57, metadata !3132, metadata !DIExpression()), !dbg !3133
  %63 = load %struct.SubsurfModifierData*, %struct.SubsurfModifierData** %smd.addr, align 8, !dbg !3134
  %modifier58 = getelementptr inbounds %struct.SubsurfModifierData, %struct.SubsurfModifierData* %63, i32 0, i32 0, !dbg !3135
  %scene59 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %modifier58, i32 0, i32 7, !dbg !3136
  %64 = load %struct.Scene*, %struct.Scene** %scene59, align 8, !dbg !3136
  %tobool60 = icmp ne %struct.Scene* %64, null, !dbg !3137
  br i1 %tobool60, label %cond.true61, label %cond.false68, !dbg !3137

cond.true61:                                      ; preds = %if.else53
  %65 = load %struct.SubsurfModifierData*, %struct.SubsurfModifierData** %smd.addr, align 8, !dbg !3138
  %modifier62 = getelementptr inbounds %struct.SubsurfModifierData, %struct.SubsurfModifierData* %65, i32 0, i32 0, !dbg !3139
  %scene63 = getelementptr inbounds %struct.ModifierData, %struct.ModifierData* %modifier62, i32 0, i32 7, !dbg !3140
  %66 = load %struct.Scene*, %struct.Scene** %scene63, align 8, !dbg !3140
  %r64 = getelementptr inbounds %struct.Scene, %struct.Scene* %66, i32 0, i32 22, !dbg !3141
  %67 = load %struct.SubsurfModifierData*, %struct.SubsurfModifierData** %smd.addr, align 8, !dbg !3142
  %levels65 = getelementptr inbounds %struct.SubsurfModifierData, %struct.SubsurfModifierData* %67, i32 0, i32 2, !dbg !3143
  %68 = load i16, i16* %levels65, align 2, !dbg !3143
  %conv66 = sext i16 %68 to i32, !dbg !3142
  %call67 = call i32 @get_render_subsurf_level(%struct.RenderData* %r64, i32 %conv66), !dbg !3144
  br label %cond.end71, !dbg !3137

cond.false68:                                     ; preds = %if.else53
  %69 = load %struct.SubsurfModifierData*, %struct.SubsurfModifierData** %smd.addr, align 8, !dbg !3145
  %levels69 = getelementptr inbounds %struct.SubsurfModifierData, %struct.SubsurfModifierData* %69, i32 0, i32 2, !dbg !3146
  %70 = load i16, i16* %levels69, align 2, !dbg !3146
  %conv70 = sext i16 %70 to i32, !dbg !3145
  br label %cond.end71, !dbg !3137

cond.end71:                                       ; preds = %cond.false68, %cond.true61
  %cond72 = phi i32 [ %call67, %cond.true61 ], [ %conv70, %cond.false68 ], !dbg !3137
  store i32 %cond72, i32* %levels57, align 4, !dbg !3133
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss73, metadata !3147, metadata !DIExpression()), !dbg !3148
  %71 = load i32, i32* %flags.addr, align 4, !dbg !3149
  %and74 = and i32 %71, 8, !dbg !3151
  %tobool75 = icmp ne i32 %and74, 0, !dbg !3151
  br i1 %tobool75, label %if.end81, label %land.lhs.true, !dbg !3152

land.lhs.true:                                    ; preds = %cond.end71
  %72 = load %struct.SubsurfModifierData*, %struct.SubsurfModifierData** %smd.addr, align 8, !dbg !3153
  %emCache76 = getelementptr inbounds %struct.SubsurfModifierData, %struct.SubsurfModifierData* %72, i32 0, i32 5, !dbg !3154
  %73 = load i8*, i8** %emCache76, align 8, !dbg !3154
  %tobool77 = icmp ne i8* %73, null, !dbg !3153
  br i1 %tobool77, label %if.then78, label %if.end81, !dbg !3155

if.then78:                                        ; preds = %land.lhs.true
  %74 = load %struct.SubsurfModifierData*, %struct.SubsurfModifierData** %smd.addr, align 8, !dbg !3156
  %emCache79 = getelementptr inbounds %struct.SubsurfModifierData, %struct.SubsurfModifierData* %74, i32 0, i32 5, !dbg !3158
  %75 = load i8*, i8** %emCache79, align 8, !dbg !3158
  %76 = bitcast i8* %75 to %struct.CCGSubSurf*, !dbg !3156
  call void @ccgSubSurf_free(%struct.CCGSubSurf* %76), !dbg !3159
  %77 = load %struct.SubsurfModifierData*, %struct.SubsurfModifierData** %smd.addr, align 8, !dbg !3160
  %emCache80 = getelementptr inbounds %struct.SubsurfModifierData, %struct.SubsurfModifierData* %77, i32 0, i32 5, !dbg !3161
  store i8* null, i8** %emCache80, align 8, !dbg !3162
  br label %if.end81, !dbg !3163

if.end81:                                         ; preds = %if.then78, %land.lhs.true, %cond.end71
  %78 = load i32, i32* %useIncremental, align 4, !dbg !3164
  %tobool82 = icmp ne i32 %78, 0, !dbg !3164
  br i1 %tobool82, label %land.lhs.true83, label %if.else93, !dbg !3166

land.lhs.true83:                                  ; preds = %if.end81
  %79 = load i32, i32* %flags.addr, align 4, !dbg !3167
  %and84 = and i32 %79, 2, !dbg !3168
  %tobool85 = icmp ne i32 %and84, 0, !dbg !3168
  br i1 %tobool85, label %if.then86, label %if.else93, !dbg !3169

if.then86:                                        ; preds = %land.lhs.true83
  %80 = load %struct.SubsurfModifierData*, %struct.SubsurfModifierData** %smd.addr, align 8, !dbg !3170
  %mCache = getelementptr inbounds %struct.SubsurfModifierData, %struct.SubsurfModifierData* %80, i32 0, i32 6, !dbg !3172
  %81 = load i8*, i8** %mCache, align 8, !dbg !3172
  %82 = bitcast i8* %81 to %struct.CCGSubSurf*, !dbg !3170
  %83 = load i32, i32* %levels57, align 4, !dbg !3173
  %84 = load i32, i32* %useSimple, align 4, !dbg !3174
  %85 = load i32, i32* %useAging, align 4, !dbg !3175
  %or87 = or i32 %84, %85, !dbg !3176
  %or88 = or i32 %or87, 4, !dbg !3177
  %call89 = call %struct.CCGSubSurf* @_getSubSurf(%struct.CCGSubSurf* %82, i32 %83, i32 3, i32 %or88), !dbg !3178
  store %struct.CCGSubSurf* %call89, %struct.CCGSubSurf** %ss73, align 8, !dbg !3179
  %86 = bitcast %struct.CCGSubSurf* %call89 to i8*, !dbg !3180
  %87 = load %struct.SubsurfModifierData*, %struct.SubsurfModifierData** %smd.addr, align 8, !dbg !3181
  %mCache90 = getelementptr inbounds %struct.SubsurfModifierData, %struct.SubsurfModifierData* %87, i32 0, i32 6, !dbg !3182
  store i8* %86, i8** %mCache90, align 8, !dbg !3183
  %88 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss73, align 8, !dbg !3184
  %89 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3185
  %90 = load [3 x float]*, [3 x float]** %vertCos.addr, align 8, !dbg !3186
  %91 = load i32, i32* %useSimple, align 4, !dbg !3187
  call void @ss_sync_from_derivedmesh(%struct.CCGSubSurf* %88, %struct.DerivedMesh* %89, [3 x float]* %90, i32 %91), !dbg !3188
  %92 = load %struct.SubsurfModifierData*, %struct.SubsurfModifierData** %smd.addr, align 8, !dbg !3189
  %mCache91 = getelementptr inbounds %struct.SubsurfModifierData, %struct.SubsurfModifierData* %92, i32 0, i32 6, !dbg !3190
  %93 = load i8*, i8** %mCache91, align 8, !dbg !3190
  %94 = bitcast i8* %93 to %struct.CCGSubSurf*, !dbg !3189
  %95 = load i32, i32* %drawInteriorEdges, align 4, !dbg !3191
  %96 = load i32, i32* %useSubsurfUv, align 4, !dbg !3192
  %97 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3193
  %call92 = call %struct.CCGDerivedMesh* @getCCGDerivedMesh(%struct.CCGSubSurf* %94, i32 %95, i32 %96, %struct.DerivedMesh* %97), !dbg !3194
  store %struct.CCGDerivedMesh* %call92, %struct.CCGDerivedMesh** %result, align 8, !dbg !3195
  br label %if.end123, !dbg !3196

if.else93:                                        ; preds = %land.lhs.true83, %if.end81
  call void @llvm.dbg.declare(metadata i32* %ccg_flags, metadata !3197, metadata !DIExpression()), !dbg !3199
  %98 = load i32, i32* %useSimple, align 4, !dbg !3200
  %or94 = or i32 %98, 2, !dbg !3201
  %or95 = or i32 %or94, 4, !dbg !3202
  store i32 %or95, i32* %ccg_flags, align 4, !dbg !3199
  %99 = load %struct.SubsurfModifierData*, %struct.SubsurfModifierData** %smd.addr, align 8, !dbg !3203
  %mCache96 = getelementptr inbounds %struct.SubsurfModifierData, %struct.SubsurfModifierData* %99, i32 0, i32 6, !dbg !3205
  %100 = load i8*, i8** %mCache96, align 8, !dbg !3205
  %tobool97 = icmp ne i8* %100, null, !dbg !3203
  br i1 %tobool97, label %land.lhs.true98, label %if.end104, !dbg !3206

land.lhs.true98:                                  ; preds = %if.else93
  %101 = load i32, i32* %flags.addr, align 4, !dbg !3207
  %and99 = and i32 %101, 2, !dbg !3208
  %tobool100 = icmp ne i32 %and99, 0, !dbg !3208
  br i1 %tobool100, label %if.then101, label %if.end104, !dbg !3209

if.then101:                                       ; preds = %land.lhs.true98
  %102 = load %struct.SubsurfModifierData*, %struct.SubsurfModifierData** %smd.addr, align 8, !dbg !3210
  %mCache102 = getelementptr inbounds %struct.SubsurfModifierData, %struct.SubsurfModifierData* %102, i32 0, i32 6, !dbg !3212
  %103 = load i8*, i8** %mCache102, align 8, !dbg !3212
  %104 = bitcast i8* %103 to %struct.CCGSubSurf*, !dbg !3210
  call void @ccgSubSurf_free(%struct.CCGSubSurf* %104), !dbg !3213
  %105 = load %struct.SubsurfModifierData*, %struct.SubsurfModifierData** %smd.addr, align 8, !dbg !3214
  %mCache103 = getelementptr inbounds %struct.SubsurfModifierData, %struct.SubsurfModifierData* %105, i32 0, i32 6, !dbg !3215
  store i8* null, i8** %mCache103, align 8, !dbg !3216
  br label %if.end104, !dbg !3217

if.end104:                                        ; preds = %if.then101, %land.lhs.true98, %if.else93
  %106 = load i32, i32* %flags.addr, align 4, !dbg !3218
  %and105 = and i32 %106, 16, !dbg !3220
  %tobool106 = icmp ne i32 %and105, 0, !dbg !3220
  br i1 %tobool106, label %if.then107, label %if.end109, !dbg !3221

if.then107:                                       ; preds = %if.end104
  %107 = load i32, i32* %ccg_flags, align 4, !dbg !3222
  %or108 = or i32 %107, 8, !dbg !3222
  store i32 %or108, i32* %ccg_flags, align 4, !dbg !3222
  br label %if.end109, !dbg !3223

if.end109:                                        ; preds = %if.then107, %if.end104
  %108 = load i32, i32* %levels57, align 4, !dbg !3224
  %109 = load i32, i32* %ccg_flags, align 4, !dbg !3225
  %call110 = call %struct.CCGSubSurf* @_getSubSurf(%struct.CCGSubSurf* null, i32 %108, i32 3, i32 %109), !dbg !3226
  store %struct.CCGSubSurf* %call110, %struct.CCGSubSurf** %ss73, align 8, !dbg !3227
  %110 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss73, align 8, !dbg !3228
  %111 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3229
  %112 = load [3 x float]*, [3 x float]** %vertCos.addr, align 8, !dbg !3230
  %113 = load i32, i32* %useSimple, align 4, !dbg !3231
  call void @ss_sync_from_derivedmesh(%struct.CCGSubSurf* %110, %struct.DerivedMesh* %111, [3 x float]* %112, i32 %113), !dbg !3232
  %114 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss73, align 8, !dbg !3233
  %115 = load i32, i32* %drawInteriorEdges, align 4, !dbg !3234
  %116 = load i32, i32* %useSubsurfUv, align 4, !dbg !3235
  %117 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3236
  %call111 = call %struct.CCGDerivedMesh* @getCCGDerivedMesh(%struct.CCGSubSurf* %114, i32 %115, i32 %116, %struct.DerivedMesh* %117), !dbg !3237
  store %struct.CCGDerivedMesh* %call111, %struct.CCGDerivedMesh** %result, align 8, !dbg !3238
  %118 = load i32, i32* %flags.addr, align 4, !dbg !3239
  %and112 = and i32 %118, 2, !dbg !3241
  %tobool113 = icmp ne i32 %and112, 0, !dbg !3241
  br i1 %tobool113, label %if.then114, label %if.else116, !dbg !3242

if.then114:                                       ; preds = %if.end109
  %119 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss73, align 8, !dbg !3243
  %120 = bitcast %struct.CCGSubSurf* %119 to i8*, !dbg !3243
  %121 = load %struct.SubsurfModifierData*, %struct.SubsurfModifierData** %smd.addr, align 8, !dbg !3244
  %mCache115 = getelementptr inbounds %struct.SubsurfModifierData, %struct.SubsurfModifierData* %121, i32 0, i32 6, !dbg !3245
  store i8* %120, i8** %mCache115, align 8, !dbg !3246
  br label %if.end118, !dbg !3244

if.else116:                                       ; preds = %if.end109
  %122 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %result, align 8, !dbg !3247
  %freeSS117 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %122, i32 0, i32 2, !dbg !3248
  store i32 1, i32* %freeSS117, align 8, !dbg !3249
  br label %if.end118

if.end118:                                        ; preds = %if.else116, %if.then114
  %123 = load i32, i32* %flags.addr, align 4, !dbg !3250
  %and119 = and i32 %123, 16, !dbg !3252
  %tobool120 = icmp ne i32 %and119, 0, !dbg !3252
  br i1 %tobool120, label %if.then121, label %if.end122, !dbg !3253

if.then121:                                       ; preds = %if.end118
  %124 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss73, align 8, !dbg !3254
  call void @ccgSubSurf_setNumLayers(%struct.CCGSubSurf* %124, i32 4), !dbg !3255
  br label %if.end122, !dbg !3255

if.end122:                                        ; preds = %if.then121, %if.end118
  br label %if.end123

if.end123:                                        ; preds = %if.end122, %if.then86
  br label %if.end124

if.end124:                                        ; preds = %if.end123, %if.end
  br label %if.end125

if.end125:                                        ; preds = %if.end124, %cond.end
  %125 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %result, align 8, !dbg !3256
  %126 = bitcast %struct.CCGDerivedMesh* %125 to %struct.DerivedMesh*, !dbg !3257
  store %struct.DerivedMesh* %126, %struct.DerivedMesh** %retval, align 8, !dbg !3258
  br label %return, !dbg !3258

return:                                           ; preds = %if.end125, %if.then48
  %127 = load %struct.DerivedMesh*, %struct.DerivedMesh** %retval, align 8, !dbg !3259
  ret %struct.DerivedMesh* %127, !dbg !3259
}

declare dso_local i32 @get_render_subsurf_level(%struct.RenderData*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.CCGSubSurf* @_getSubSurf(%struct.CCGSubSurf* %prevSS, i32 %subdivLevels, i32 %numLayers, i32 %flags) #0 !dbg !3260 {
entry:
  %retval = alloca %struct.CCGSubSurf*, align 8
  %prevSS.addr = alloca %struct.CCGSubSurf*, align 8
  %subdivLevels.addr = alloca i32, align 4
  %numLayers.addr = alloca i32, align 4
  %flags.addr = alloca i32, align 4
  %ifc = alloca %struct.CCGMeshIFC, align 4
  %ccgSS = alloca %struct.CCGSubSurf*, align 8
  %useAging = alloca i32, align 4
  %useArena = alloca i32, align 4
  %normalOffset = alloca i32, align 4
  %oldUseAging = alloca i32, align 4
  %allocatorIFC = alloca %struct.CCGAllocatorIFC, align 8
  %allocator = alloca i8*, align 8
  store %struct.CCGSubSurf* %prevSS, %struct.CCGSubSurf** %prevSS.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %prevSS.addr, metadata !3263, metadata !DIExpression()), !dbg !3264
  store i32 %subdivLevels, i32* %subdivLevels.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %subdivLevels.addr, metadata !3265, metadata !DIExpression()), !dbg !3266
  store i32 %numLayers, i32* %numLayers.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numLayers.addr, metadata !3267, metadata !DIExpression()), !dbg !3268
  store i32 %flags, i32* %flags.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flags.addr, metadata !3269, metadata !DIExpression()), !dbg !3270
  call void @llvm.dbg.declare(metadata %struct.CCGMeshIFC* %ifc, metadata !3271, metadata !DIExpression()), !dbg !3281
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ccgSS, metadata !3282, metadata !DIExpression()), !dbg !3283
  call void @llvm.dbg.declare(metadata i32* %useAging, metadata !3284, metadata !DIExpression()), !dbg !3285
  %0 = load i32, i32* %flags.addr, align 4, !dbg !3286
  %and = and i32 %0, 1, !dbg !3287
  %tobool = icmp ne i32 %and, 0, !dbg !3288
  %lnot = xor i1 %tobool, true, !dbg !3288
  %lnot1 = xor i1 %lnot, true, !dbg !3289
  %lnot.ext = zext i1 %lnot1 to i32, !dbg !3289
  store i32 %lnot.ext, i32* %useAging, align 4, !dbg !3285
  call void @llvm.dbg.declare(metadata i32* %useArena, metadata !3290, metadata !DIExpression()), !dbg !3291
  %1 = load i32, i32* %flags.addr, align 4, !dbg !3292
  %and2 = and i32 %1, 2, !dbg !3293
  store i32 %and2, i32* %useArena, align 4, !dbg !3291
  call void @llvm.dbg.declare(metadata i32* %normalOffset, metadata !3294, metadata !DIExpression()), !dbg !3295
  store i32 0, i32* %normalOffset, align 4, !dbg !3295
  %2 = load i32, i32* %subdivLevels.addr, align 4, !dbg !3296
  %cmp = icmp sgt i32 %2, 1, !dbg !3296
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !3296

cond.true:                                        ; preds = %entry
  %3 = load i32, i32* %subdivLevels.addr, align 4, !dbg !3296
  br label %cond.end, !dbg !3296

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !3296

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %3, %cond.true ], [ 1, %cond.false ], !dbg !3296
  store i32 %cond, i32* %subdivLevels.addr, align 4, !dbg !3297
  %4 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %prevSS.addr, align 8, !dbg !3298
  %tobool3 = icmp ne %struct.CCGSubSurf* %4, null, !dbg !3298
  br i1 %tobool3, label %if.then, label %if.end14, !dbg !3300

if.then:                                          ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i32* %oldUseAging, metadata !3301, metadata !DIExpression()), !dbg !3303
  %5 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %prevSS.addr, align 8, !dbg !3304
  call void @ccgSubSurf_getUseAgeCounts(%struct.CCGSubSurf* %5, i32* %oldUseAging, i32* null, i32* null, i32* null), !dbg !3305
  %6 = load i32, i32* %oldUseAging, align 4, !dbg !3306
  %7 = load i32, i32* %useAging, align 4, !dbg !3308
  %cmp4 = icmp ne i32 %6, %7, !dbg !3309
  br i1 %cmp4, label %if.then12, label %lor.lhs.false, !dbg !3310

lor.lhs.false:                                    ; preds = %if.then
  %8 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %prevSS.addr, align 8, !dbg !3311
  %call = call i32 @ccgSubSurf_getSimpleSubdiv(%struct.CCGSubSurf* %8), !dbg !3312
  %9 = load i32, i32* %flags.addr, align 4, !dbg !3313
  %and5 = and i32 %9, 16, !dbg !3314
  %tobool6 = icmp ne i32 %and5, 0, !dbg !3315
  %lnot7 = xor i1 %tobool6, true, !dbg !3315
  %lnot9 = xor i1 %lnot7, true, !dbg !3316
  %lnot.ext10 = zext i1 %lnot9 to i32, !dbg !3316
  %cmp11 = icmp ne i32 %call, %lnot.ext10, !dbg !3317
  br i1 %cmp11, label %if.then12, label %if.else, !dbg !3318

if.then12:                                        ; preds = %lor.lhs.false, %if.then
  %10 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %prevSS.addr, align 8, !dbg !3319
  call void @ccgSubSurf_free(%struct.CCGSubSurf* %10), !dbg !3321
  br label %if.end, !dbg !3322

if.else:                                          ; preds = %lor.lhs.false
  %11 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %prevSS.addr, align 8, !dbg !3323
  %12 = load i32, i32* %subdivLevels.addr, align 4, !dbg !3325
  %call13 = call i32 @ccgSubSurf_setSubdivisionLevels(%struct.CCGSubSurf* %11, i32 %12), !dbg !3326
  %13 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %prevSS.addr, align 8, !dbg !3327
  store %struct.CCGSubSurf* %13, %struct.CCGSubSurf** %retval, align 8, !dbg !3328
  br label %return, !dbg !3328

if.end:                                           ; preds = %if.then12
  br label %if.end14, !dbg !3329

if.end14:                                         ; preds = %if.end, %cond.end
  %14 = load i32, i32* %useAging, align 4, !dbg !3330
  %tobool15 = icmp ne i32 %14, 0, !dbg !3330
  br i1 %tobool15, label %if.then16, label %if.else17, !dbg !3332

if.then16:                                        ; preds = %if.end14
  %faceUserSize = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %ifc, i32 0, i32 2, !dbg !3333
  store i32 12, i32* %faceUserSize, align 4, !dbg !3335
  %edgeUserSize = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %ifc, i32 0, i32 1, !dbg !3336
  store i32 12, i32* %edgeUserSize, align 4, !dbg !3337
  %vertUserSize = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %ifc, i32 0, i32 0, !dbg !3338
  store i32 12, i32* %vertUserSize, align 4, !dbg !3339
  br label %if.end21, !dbg !3340

if.else17:                                        ; preds = %if.end14
  %faceUserSize18 = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %ifc, i32 0, i32 2, !dbg !3341
  store i32 8, i32* %faceUserSize18, align 4, !dbg !3343
  %edgeUserSize19 = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %ifc, i32 0, i32 1, !dbg !3344
  store i32 8, i32* %edgeUserSize19, align 4, !dbg !3345
  %vertUserSize20 = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %ifc, i32 0, i32 0, !dbg !3346
  store i32 8, i32* %vertUserSize20, align 4, !dbg !3347
  br label %if.end21

if.end21:                                         ; preds = %if.else17, %if.then16
  %15 = load i32, i32* %numLayers.addr, align 4, !dbg !3348
  %numLayers22 = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %ifc, i32 0, i32 3, !dbg !3349
  store i32 %15, i32* %numLayers22, align 4, !dbg !3350
  %16 = load i32, i32* %numLayers.addr, align 4, !dbg !3351
  %conv = sext i32 %16 to i64, !dbg !3351
  %mul = mul i64 4, %conv, !dbg !3352
  %conv23 = trunc i64 %mul to i32, !dbg !3353
  %vertDataSize = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %ifc, i32 0, i32 4, !dbg !3354
  store i32 %conv23, i32* %vertDataSize, align 4, !dbg !3355
  %17 = load i32, i32* %numLayers.addr, align 4, !dbg !3356
  %conv24 = sext i32 %17 to i64, !dbg !3356
  %mul25 = mul i64 4, %conv24, !dbg !3357
  %18 = load i32, i32* %normalOffset, align 4, !dbg !3358
  %conv26 = sext i32 %18 to i64, !dbg !3358
  %add = add i64 %conv26, %mul25, !dbg !3358
  %conv27 = trunc i64 %add to i32, !dbg !3358
  store i32 %conv27, i32* %normalOffset, align 4, !dbg !3358
  %19 = load i32, i32* %flags.addr, align 4, !dbg !3359
  %and28 = and i32 %19, 4, !dbg !3361
  %tobool29 = icmp ne i32 %and28, 0, !dbg !3361
  br i1 %tobool29, label %if.then30, label %if.end35, !dbg !3362

if.then30:                                        ; preds = %if.end21
  %vertDataSize31 = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %ifc, i32 0, i32 4, !dbg !3363
  %20 = load i32, i32* %vertDataSize31, align 4, !dbg !3364
  %conv32 = sext i32 %20 to i64, !dbg !3364
  %add33 = add i64 %conv32, 12, !dbg !3364
  %conv34 = trunc i64 %add33 to i32, !dbg !3364
  store i32 %conv34, i32* %vertDataSize31, align 4, !dbg !3364
  br label %if.end35, !dbg !3365

if.end35:                                         ; preds = %if.then30, %if.end21
  %21 = load i32, i32* %flags.addr, align 4, !dbg !3366
  %and36 = and i32 %21, 8, !dbg !3368
  %tobool37 = icmp ne i32 %and36, 0, !dbg !3368
  br i1 %tobool37, label %if.then38, label %if.end43, !dbg !3369

if.then38:                                        ; preds = %if.end35
  %vertDataSize39 = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %ifc, i32 0, i32 4, !dbg !3370
  %22 = load i32, i32* %vertDataSize39, align 4, !dbg !3371
  %conv40 = sext i32 %22 to i64, !dbg !3371
  %add41 = add i64 %conv40, 4, !dbg !3371
  %conv42 = trunc i64 %add41 to i32, !dbg !3371
  store i32 %conv42, i32* %vertDataSize39, align 4, !dbg !3371
  br label %if.end43, !dbg !3372

if.end43:                                         ; preds = %if.then38, %if.end35
  %23 = load i32, i32* %flags.addr, align 4, !dbg !3373
  %and44 = and i32 %23, 16, !dbg !3374
  %tobool45 = icmp ne i32 %and44, 0, !dbg !3375
  %lnot46 = xor i1 %tobool45, true, !dbg !3375
  %lnot48 = xor i1 %lnot46, true, !dbg !3376
  %lnot.ext49 = zext i1 %lnot48 to i32, !dbg !3376
  %simpleSubdiv = getelementptr inbounds %struct.CCGMeshIFC, %struct.CCGMeshIFC* %ifc, i32 0, i32 5, !dbg !3377
  store i32 %lnot.ext49, i32* %simpleSubdiv, align 4, !dbg !3378
  %24 = load i32, i32* %useArena, align 4, !dbg !3379
  %tobool50 = icmp ne i32 %24, 0, !dbg !3379
  br i1 %tobool50, label %if.then51, label %if.else54, !dbg !3381

if.then51:                                        ; preds = %if.end43
  call void @llvm.dbg.declare(metadata %struct.CCGAllocatorIFC* %allocatorIFC, metadata !3382, metadata !DIExpression()), !dbg !3404
  call void @llvm.dbg.declare(metadata i8** %allocator, metadata !3405, metadata !DIExpression()), !dbg !3406
  %call52 = call %struct.MemArena* @BLI_memarena_new(i64 65528, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0)), !dbg !3407
  %25 = bitcast %struct.MemArena* %call52 to i8*, !dbg !3407
  store i8* %25, i8** %allocator, align 8, !dbg !3406
  %alloc = getelementptr inbounds %struct.CCGAllocatorIFC, %struct.CCGAllocatorIFC* %allocatorIFC, i32 0, i32 0, !dbg !3408
  store i8* (i8*, i32)* @arena_alloc, i8* (i8*, i32)** %alloc, align 8, !dbg !3409
  %realloc = getelementptr inbounds %struct.CCGAllocatorIFC, %struct.CCGAllocatorIFC* %allocatorIFC, i32 0, i32 1, !dbg !3410
  store i8* (i8*, i8*, i32, i32)* @arena_realloc, i8* (i8*, i8*, i32, i32)** %realloc, align 8, !dbg !3411
  %free = getelementptr inbounds %struct.CCGAllocatorIFC, %struct.CCGAllocatorIFC* %allocatorIFC, i32 0, i32 2, !dbg !3412
  store void (i8*, i8*)* @arena_free, void (i8*, i8*)** %free, align 8, !dbg !3413
  %release = getelementptr inbounds %struct.CCGAllocatorIFC, %struct.CCGAllocatorIFC* %allocatorIFC, i32 0, i32 3, !dbg !3414
  store void (i8*)* @arena_release, void (i8*)** %release, align 8, !dbg !3415
  %26 = load i32, i32* %subdivLevels.addr, align 4, !dbg !3416
  %27 = load i8*, i8** %allocator, align 8, !dbg !3417
  %call53 = call %struct.CCGSubSurf* @ccgSubSurf_new(%struct.CCGMeshIFC* %ifc, i32 %26, %struct.CCGAllocatorIFC* %allocatorIFC, i8* %27), !dbg !3418
  store %struct.CCGSubSurf* %call53, %struct.CCGSubSurf** %ccgSS, align 8, !dbg !3419
  br label %if.end56, !dbg !3420

if.else54:                                        ; preds = %if.end43
  %28 = load i32, i32* %subdivLevels.addr, align 4, !dbg !3421
  %call55 = call %struct.CCGSubSurf* @ccgSubSurf_new(%struct.CCGMeshIFC* %ifc, i32 %28, %struct.CCGAllocatorIFC* null, i8* null), !dbg !3423
  store %struct.CCGSubSurf* %call55, %struct.CCGSubSurf** %ccgSS, align 8, !dbg !3424
  br label %if.end56

if.end56:                                         ; preds = %if.else54, %if.then51
  %29 = load i32, i32* %useAging, align 4, !dbg !3425
  %tobool57 = icmp ne i32 %29, 0, !dbg !3425
  br i1 %tobool57, label %if.then58, label %if.end60, !dbg !3427

if.then58:                                        ; preds = %if.end56
  %30 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ccgSS, align 8, !dbg !3428
  %call59 = call i32 @ccgSubSurf_setUseAgeCounts(%struct.CCGSubSurf* %30, i32 1, i32 8, i32 8, i32 8), !dbg !3430
  br label %if.end60, !dbg !3431

if.end60:                                         ; preds = %if.then58, %if.end56
  %31 = load i32, i32* %flags.addr, align 4, !dbg !3432
  %and61 = and i32 %31, 8, !dbg !3434
  %tobool62 = icmp ne i32 %and61, 0, !dbg !3434
  br i1 %tobool62, label %if.then63, label %if.end70, !dbg !3435

if.then63:                                        ; preds = %if.end60
  %32 = load i32, i32* %normalOffset, align 4, !dbg !3436
  %conv64 = sext i32 %32 to i64, !dbg !3436
  %add65 = add i64 %conv64, 4, !dbg !3436
  %conv66 = trunc i64 %add65 to i32, !dbg !3436
  store i32 %conv66, i32* %normalOffset, align 4, !dbg !3436
  %33 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ccgSS, align 8, !dbg !3438
  %34 = load i32, i32* %numLayers.addr, align 4, !dbg !3439
  %conv67 = sext i32 %34 to i64, !dbg !3439
  %mul68 = mul i64 4, %conv67, !dbg !3440
  %conv69 = trunc i64 %mul68 to i32, !dbg !3441
  call void @ccgSubSurf_setAllocMask(%struct.CCGSubSurf* %33, i32 1, i32 %conv69), !dbg !3442
  br label %if.end70, !dbg !3443

if.end70:                                         ; preds = %if.then63, %if.end60
  %35 = load i32, i32* %flags.addr, align 4, !dbg !3444
  %and71 = and i32 %35, 4, !dbg !3446
  %tobool72 = icmp ne i32 %and71, 0, !dbg !3446
  br i1 %tobool72, label %if.then73, label %if.else75, !dbg !3447

if.then73:                                        ; preds = %if.end70
  %36 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ccgSS, align 8, !dbg !3448
  %37 = load i32, i32* %normalOffset, align 4, !dbg !3449
  %call74 = call i32 @ccgSubSurf_setCalcVertexNormals(%struct.CCGSubSurf* %36, i32 1, i32 %37), !dbg !3450
  br label %if.end77, !dbg !3450

if.else75:                                        ; preds = %if.end70
  %38 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ccgSS, align 8, !dbg !3451
  %call76 = call i32 @ccgSubSurf_setCalcVertexNormals(%struct.CCGSubSurf* %38, i32 0, i32 0), !dbg !3452
  br label %if.end77

if.end77:                                         ; preds = %if.else75, %if.then73
  %39 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ccgSS, align 8, !dbg !3453
  store %struct.CCGSubSurf* %39, %struct.CCGSubSurf** %retval, align 8, !dbg !3454
  br label %return, !dbg !3454

return:                                           ; preds = %if.end77, %if.else
  %40 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %retval, align 8, !dbg !3455
  ret %struct.CCGSubSurf* %40, !dbg !3455
}

; Function Attrs: noinline nounwind uwtable
define internal void @ss_sync_from_derivedmesh(%struct.CCGSubSurf* %ss, %struct.DerivedMesh* %dm, [3 x float]* %vertexCos, i32 %useFlatSubdiv) #0 !dbg !2 {
entry:
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %vertexCos.addr = alloca [3 x float]*, align 8
  %useFlatSubdiv.addr = alloca i32, align 4
  %creaseFactor = alloca float, align 4
  %mvert = alloca %struct.MVert*, align 8
  %medge = alloca %struct.MEdge*, align 8
  %mv = alloca %struct.MVert*, align 8
  %me = alloca %struct.MEdge*, align 8
  %mloop = alloca %struct.MLoop*, align 8
  %ml = alloca %struct.MLoop*, align 8
  %mpoly = alloca %struct.MPoly*, align 8
  %mp = alloca %struct.MPoly*, align 8
  %totvert = alloca i32, align 4
  %totedge = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %index = alloca i32*, align 8
  %v = alloca %struct.CCGVert*, align 8
  %e = alloca %struct.CCGEdge*, align 8
  %crease = alloca float, align 4
  %f = alloca %struct.CCGFace*, align 8
  %saved_stack = alloca i8*, align 8
  %__vla_expr0 = alloca i64, align 8
  %cleanup.dest.slot = alloca i32, align 4
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !3456, metadata !DIExpression()), !dbg !3457
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3458, metadata !DIExpression()), !dbg !3459
  store [3 x float]* %vertexCos, [3 x float]** %vertexCos.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %vertexCos.addr, metadata !3460, metadata !DIExpression()), !dbg !3461
  store i32 %useFlatSubdiv, i32* %useFlatSubdiv.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %useFlatSubdiv.addr, metadata !3462, metadata !DIExpression()), !dbg !3463
  call void @llvm.dbg.declare(metadata float* %creaseFactor, metadata !3464, metadata !DIExpression()), !dbg !3465
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3466
  %call = call i32 @ccgSubSurf_getSubdivisionLevels(%struct.CCGSubSurf* %0), !dbg !3467
  %conv = sitofp i32 %call to float, !dbg !3468
  store float %conv, float* %creaseFactor, align 4, !dbg !3465
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert, metadata !3469, metadata !DIExpression()), !dbg !3470
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3471
  %getVertArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %1, i32 0, i32 31, !dbg !3472
  %2 = load %struct.MVert* (%struct.DerivedMesh*)*, %struct.MVert* (%struct.DerivedMesh*)** %getVertArray, align 8, !dbg !3472
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3473
  %call1 = call %struct.MVert* %2(%struct.DerivedMesh* %3), !dbg !3471
  store %struct.MVert* %call1, %struct.MVert** %mvert, align 8, !dbg !3470
  call void @llvm.dbg.declare(metadata %struct.MEdge** %medge, metadata !3474, metadata !DIExpression()), !dbg !3477
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3478
  %getEdgeArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %4, i32 0, i32 32, !dbg !3479
  %5 = load %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)** %getEdgeArray, align 8, !dbg !3479
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3480
  %call2 = call %struct.MEdge* %5(%struct.DerivedMesh* %6), !dbg !3478
  store %struct.MEdge* %call2, %struct.MEdge** %medge, align 8, !dbg !3477
  call void @llvm.dbg.declare(metadata %struct.MVert** %mv, metadata !3481, metadata !DIExpression()), !dbg !3482
  call void @llvm.dbg.declare(metadata %struct.MEdge** %me, metadata !3483, metadata !DIExpression()), !dbg !3484
  call void @llvm.dbg.declare(metadata %struct.MLoop** %mloop, metadata !3485, metadata !DIExpression()), !dbg !3488
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3489
  %getLoopArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %7, i32 0, i32 34, !dbg !3490
  %8 = load %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)** %getLoopArray, align 8, !dbg !3490
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3491
  %call3 = call %struct.MLoop* %8(%struct.DerivedMesh* %9), !dbg !3489
  store %struct.MLoop* %call3, %struct.MLoop** %mloop, align 8, !dbg !3488
  call void @llvm.dbg.declare(metadata %struct.MLoop** %ml, metadata !3492, metadata !DIExpression()), !dbg !3493
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpoly, metadata !3494, metadata !DIExpression()), !dbg !3495
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3496
  %getPolyArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %10, i32 0, i32 35, !dbg !3497
  %11 = load %struct.MPoly* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)** %getPolyArray, align 8, !dbg !3497
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3498
  %call4 = call %struct.MPoly* %11(%struct.DerivedMesh* %12), !dbg !3496
  store %struct.MPoly* %call4, %struct.MPoly** %mpoly, align 8, !dbg !3495
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mp, metadata !3499, metadata !DIExpression()), !dbg !3500
  call void @llvm.dbg.declare(metadata i32* %totvert, metadata !3501, metadata !DIExpression()), !dbg !3502
  %13 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3503
  %getNumVerts = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %13, i32 0, i32 23, !dbg !3504
  %14 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumVerts, align 8, !dbg !3504
  %15 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3505
  %call5 = call i32 %14(%struct.DerivedMesh* %15), !dbg !3503
  store i32 %call5, i32* %totvert, align 4, !dbg !3502
  call void @llvm.dbg.declare(metadata i32* %totedge, metadata !3506, metadata !DIExpression()), !dbg !3507
  %16 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3508
  %getNumEdges = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %16, i32 0, i32 24, !dbg !3509
  %17 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumEdges, align 8, !dbg !3509
  %18 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3510
  %call6 = call i32 %17(%struct.DerivedMesh* %18), !dbg !3508
  store i32 %call6, i32* %totedge, align 4, !dbg !3507
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3511, metadata !DIExpression()), !dbg !3512
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3513, metadata !DIExpression()), !dbg !3514
  call void @llvm.dbg.declare(metadata i32** %index, metadata !3515, metadata !DIExpression()), !dbg !3516
  %19 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3517
  %call7 = call i32 @ccgSubSurf_initFullSync(%struct.CCGSubSurf* %19), !dbg !3518
  %20 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !3519
  store %struct.MVert* %20, %struct.MVert** %mv, align 8, !dbg !3520
  %21 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3521
  %getVertDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %21, i32 0, i32 50, !dbg !3522
  %22 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getVertDataArray, align 8, !dbg !3522
  %23 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3523
  %call8 = call i8* %22(%struct.DerivedMesh* %23, i32 7), !dbg !3521
  %24 = bitcast i8* %call8 to i32*, !dbg !3524
  store i32* %24, i32** %index, align 8, !dbg !3525
  store i32 0, i32* %i, align 4, !dbg !3526
  br label %for.cond, !dbg !3528

for.cond:                                         ; preds = %for.inc, %entry
  %25 = load i32, i32* %i, align 4, !dbg !3529
  %26 = load i32, i32* %totvert, align 4, !dbg !3531
  %cmp = icmp slt i32 %25, %26, !dbg !3532
  br i1 %cmp, label %for.body, label %for.end, !dbg !3533

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v, metadata !3534, metadata !DIExpression()), !dbg !3536
  %27 = load [3 x float]*, [3 x float]** %vertexCos.addr, align 8, !dbg !3537
  %tobool = icmp ne [3 x float]* %27, null, !dbg !3537
  br i1 %tobool, label %if.then, label %if.else, !dbg !3539

if.then:                                          ; preds = %for.body
  %28 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3540
  %29 = load i32, i32* %i, align 4, !dbg !3542
  %conv10 = sext i32 %29 to i64, !dbg !3542
  %30 = inttoptr i64 %conv10 to i8*, !dbg !3542
  %31 = load [3 x float]*, [3 x float]** %vertexCos.addr, align 8, !dbg !3543
  %32 = load i32, i32* %i, align 4, !dbg !3544
  %idxprom = sext i32 %32 to i64, !dbg !3543
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %31, i64 %idxprom, !dbg !3543
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !3543
  %33 = bitcast float* %arraydecay to i8*, !dbg !3543
  %call11 = call i32 @ccgSubSurf_syncVert(%struct.CCGSubSurf* %28, i8* %30, i8* %33, i32 0, %struct.CCGVert** %v), !dbg !3545
  br label %if.end, !dbg !3546

if.else:                                          ; preds = %for.body
  %34 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3547
  %35 = load i32, i32* %i, align 4, !dbg !3549
  %conv12 = sext i32 %35 to i64, !dbg !3549
  %36 = inttoptr i64 %conv12 to i8*, !dbg !3549
  %37 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !3550
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %37, i32 0, i32 0, !dbg !3551
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !3550
  %38 = bitcast float* %arraydecay13 to i8*, !dbg !3550
  %call14 = call i32 @ccgSubSurf_syncVert(%struct.CCGSubSurf* %34, i8* %36, i8* %38, i32 0, %struct.CCGVert** %v), !dbg !3552
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %39 = load i32*, i32** %index, align 8, !dbg !3553
  %tobool15 = icmp ne i32* %39, null, !dbg !3554
  br i1 %tobool15, label %cond.true, label %cond.false, !dbg !3554

cond.true:                                        ; preds = %if.end
  %40 = load i32*, i32** %index, align 8, !dbg !3555
  %incdec.ptr = getelementptr inbounds i32, i32* %40, i32 1, !dbg !3555
  store i32* %incdec.ptr, i32** %index, align 8, !dbg !3555
  %41 = load i32, i32* %40, align 4, !dbg !3556
  br label %cond.end, !dbg !3554

cond.false:                                       ; preds = %if.end
  %42 = load i32, i32* %i, align 4, !dbg !3557
  br label %cond.end, !dbg !3554

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %41, %cond.true ], [ %42, %cond.false ], !dbg !3554
  %43 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3558
  %44 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !3559
  %call16 = call i8* @ccgSubSurf_getVertUserData(%struct.CCGSubSurf* %43, %struct.CCGVert* %44), !dbg !3560
  %45 = bitcast i8* %call16 to i32*, !dbg !3561
  %arrayidx17 = getelementptr inbounds i32, i32* %45, i64 1, !dbg !3562
  store i32 %cond, i32* %arrayidx17, align 4, !dbg !3563
  br label %for.inc, !dbg !3564

for.inc:                                          ; preds = %cond.end
  %46 = load i32, i32* %i, align 4, !dbg !3565
  %inc = add nsw i32 %46, 1, !dbg !3565
  store i32 %inc, i32* %i, align 4, !dbg !3565
  %47 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !3566
  %incdec.ptr18 = getelementptr inbounds %struct.MVert, %struct.MVert* %47, i32 1, !dbg !3566
  store %struct.MVert* %incdec.ptr18, %struct.MVert** %mv, align 8, !dbg !3566
  br label %for.cond, !dbg !3567, !llvm.loop !3568

for.end:                                          ; preds = %for.cond
  %48 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !3570
  store %struct.MEdge* %48, %struct.MEdge** %me, align 8, !dbg !3571
  %49 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3572
  %getEdgeDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %49, i32 0, i32 51, !dbg !3573
  %50 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getEdgeDataArray, align 8, !dbg !3573
  %51 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3574
  %call19 = call i8* %50(%struct.DerivedMesh* %51, i32 7), !dbg !3572
  %52 = bitcast i8* %call19 to i32*, !dbg !3575
  store i32* %52, i32** %index, align 8, !dbg !3576
  store i32 0, i32* %i, align 4, !dbg !3577
  br label %for.cond20, !dbg !3579

for.cond20:                                       ; preds = %for.inc44, %for.end
  %53 = load i32, i32* %i, align 4, !dbg !3580
  %54 = load i32, i32* %totedge, align 4, !dbg !3582
  %cmp21 = icmp slt i32 %53, %54, !dbg !3583
  br i1 %cmp21, label %for.body23, label %for.end47, !dbg !3584

for.body23:                                       ; preds = %for.cond20
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e, metadata !3585, metadata !DIExpression()), !dbg !3587
  call void @llvm.dbg.declare(metadata float* %crease, metadata !3588, metadata !DIExpression()), !dbg !3589
  %55 = load i32, i32* %useFlatSubdiv.addr, align 4, !dbg !3590
  %tobool24 = icmp ne i32 %55, 0, !dbg !3590
  br i1 %tobool24, label %cond.true25, label %cond.false26, !dbg !3590

cond.true25:                                      ; preds = %for.body23
  %56 = load float, float* %creaseFactor, align 4, !dbg !3591
  br label %cond.end30, !dbg !3590

cond.false26:                                     ; preds = %for.body23
  %57 = load %struct.MEdge*, %struct.MEdge** %me, align 8, !dbg !3592
  %crease27 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %57, i32 0, i32 2, !dbg !3593
  %58 = load i8, i8* %crease27, align 4, !dbg !3593
  %conv28 = zext i8 %58 to i32, !dbg !3592
  %conv29 = sitofp i32 %conv28 to float, !dbg !3592
  %59 = load float, float* %creaseFactor, align 4, !dbg !3594
  %mul = fmul float %conv29, %59, !dbg !3595
  %div = fdiv float %mul, 2.550000e+02, !dbg !3596
  br label %cond.end30, !dbg !3590

cond.end30:                                       ; preds = %cond.false26, %cond.true25
  %cond31 = phi float [ %56, %cond.true25 ], [ %div, %cond.false26 ], !dbg !3590
  store float %cond31, float* %crease, align 4, !dbg !3597
  %60 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3598
  %61 = load i32, i32* %i, align 4, !dbg !3599
  %conv32 = sext i32 %61 to i64, !dbg !3599
  %62 = inttoptr i64 %conv32 to i8*, !dbg !3599
  %63 = load %struct.MEdge*, %struct.MEdge** %me, align 8, !dbg !3600
  %v1 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %63, i32 0, i32 0, !dbg !3600
  %64 = load i32, i32* %v1, align 4, !dbg !3600
  %conv33 = zext i32 %64 to i64, !dbg !3600
  %65 = inttoptr i64 %conv33 to i8*, !dbg !3600
  %66 = load %struct.MEdge*, %struct.MEdge** %me, align 8, !dbg !3601
  %v2 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %66, i32 0, i32 1, !dbg !3601
  %67 = load i32, i32* %v2, align 4, !dbg !3601
  %conv34 = zext i32 %67 to i64, !dbg !3601
  %68 = inttoptr i64 %conv34 to i8*, !dbg !3601
  %69 = load float, float* %crease, align 4, !dbg !3602
  %call35 = call i32 @ccgSubSurf_syncEdge(%struct.CCGSubSurf* %60, i8* %62, i8* %65, i8* %68, float %69, %struct.CCGEdge** %e), !dbg !3603
  %70 = load i32*, i32** %index, align 8, !dbg !3604
  %tobool36 = icmp ne i32* %70, null, !dbg !3605
  br i1 %tobool36, label %cond.true37, label %cond.false39, !dbg !3605

cond.true37:                                      ; preds = %cond.end30
  %71 = load i32*, i32** %index, align 8, !dbg !3606
  %incdec.ptr38 = getelementptr inbounds i32, i32* %71, i32 1, !dbg !3606
  store i32* %incdec.ptr38, i32** %index, align 8, !dbg !3606
  %72 = load i32, i32* %71, align 4, !dbg !3607
  br label %cond.end40, !dbg !3605

cond.false39:                                     ; preds = %cond.end30
  %73 = load i32, i32* %i, align 4, !dbg !3608
  br label %cond.end40, !dbg !3605

cond.end40:                                       ; preds = %cond.false39, %cond.true37
  %cond41 = phi i32 [ %72, %cond.true37 ], [ %73, %cond.false39 ], !dbg !3605
  %74 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3609
  %75 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !3610
  %call42 = call i8* @ccgSubSurf_getEdgeUserData(%struct.CCGSubSurf* %74, %struct.CCGEdge* %75), !dbg !3611
  %76 = bitcast i8* %call42 to i32*, !dbg !3612
  %arrayidx43 = getelementptr inbounds i32, i32* %76, i64 1, !dbg !3613
  store i32 %cond41, i32* %arrayidx43, align 4, !dbg !3614
  br label %for.inc44, !dbg !3615

for.inc44:                                        ; preds = %cond.end40
  %77 = load i32, i32* %i, align 4, !dbg !3616
  %inc45 = add nsw i32 %77, 1, !dbg !3616
  store i32 %inc45, i32* %i, align 4, !dbg !3616
  %78 = load %struct.MEdge*, %struct.MEdge** %me, align 8, !dbg !3617
  %incdec.ptr46 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %78, i32 1, !dbg !3617
  store %struct.MEdge* %incdec.ptr46, %struct.MEdge** %me, align 8, !dbg !3617
  br label %for.cond20, !dbg !3618, !llvm.loop !3619

for.end47:                                        ; preds = %for.cond20
  %79 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !3621
  store %struct.MPoly* %79, %struct.MPoly** %mp, align 8, !dbg !3622
  %80 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3623
  %getPolyDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %80, i32 0, i32 54, !dbg !3624
  %81 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getPolyDataArray, align 8, !dbg !3624
  %82 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3625
  %call48 = call i8* %81(%struct.DerivedMesh* %82, i32 7), !dbg !3623
  %83 = bitcast i8* %call48 to i32*, !dbg !3626
  store i32* %83, i32** %index, align 8, !dbg !3627
  store i32 0, i32* %i, align 4, !dbg !3628
  br label %for.cond49, !dbg !3630

for.cond49:                                       ; preds = %for.inc84, %for.end47
  %84 = load i32, i32* %i, align 4, !dbg !3631
  %85 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3633
  %numPolyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %85, i32 0, i32 9, !dbg !3634
  %86 = load i32, i32* %numPolyData, align 8, !dbg !3634
  %cmp50 = icmp slt i32 %84, %86, !dbg !3635
  br i1 %cmp50, label %for.body52, label %for.end87, !dbg !3636

for.body52:                                       ; preds = %for.cond49
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f, metadata !3637, metadata !DIExpression()), !dbg !3639
  %87 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !3640
  %totloop = getelementptr inbounds %struct.MPoly, %struct.MPoly* %87, i32 0, i32 1, !dbg !3641
  %88 = load i32, i32* %totloop, align 4, !dbg !3641
  %89 = zext i32 %88 to i64, !dbg !3642
  %90 = call i8* @llvm.stacksave(), !dbg !3642
  store i8* %90, i8** %saved_stack, align 8, !dbg !3642
  %vla = alloca i8*, i64 %89, align 16, !dbg !3642
  store i64 %89, i64* %__vla_expr0, align 8, !dbg !3642
  call void @llvm.dbg.declare(metadata i64* %__vla_expr0, metadata !3643, metadata !DIExpression()), !dbg !3644
  call void @llvm.dbg.declare(metadata i8** %vla, metadata !3645, metadata !DIExpression()), !dbg !3650
  %91 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !3651
  %92 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !3652
  %loopstart = getelementptr inbounds %struct.MPoly, %struct.MPoly* %92, i32 0, i32 0, !dbg !3653
  %93 = load i32, i32* %loopstart, align 4, !dbg !3653
  %idx.ext = sext i32 %93 to i64, !dbg !3654
  %add.ptr = getelementptr inbounds %struct.MLoop, %struct.MLoop* %91, i64 %idx.ext, !dbg !3654
  store %struct.MLoop* %add.ptr, %struct.MLoop** %ml, align 8, !dbg !3655
  store i32 0, i32* %j, align 4, !dbg !3656
  br label %for.cond53, !dbg !3658

for.cond53:                                       ; preds = %for.inc62, %for.body52
  %94 = load i32, i32* %j, align 4, !dbg !3659
  %95 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !3661
  %totloop54 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %95, i32 0, i32 1, !dbg !3662
  %96 = load i32, i32* %totloop54, align 4, !dbg !3662
  %cmp55 = icmp slt i32 %94, %96, !dbg !3663
  br i1 %cmp55, label %for.body57, label %for.end65, !dbg !3664

for.body57:                                       ; preds = %for.cond53
  %97 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !3665
  %v58 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %97, i32 0, i32 0, !dbg !3665
  %98 = load i32, i32* %v58, align 4, !dbg !3665
  %conv59 = zext i32 %98 to i64, !dbg !3665
  %99 = inttoptr i64 %conv59 to i8*, !dbg !3665
  %100 = load i32, i32* %j, align 4, !dbg !3667
  %idxprom60 = sext i32 %100 to i64, !dbg !3668
  %arrayidx61 = getelementptr inbounds i8*, i8** %vla, i64 %idxprom60, !dbg !3668
  store i8* %99, i8** %arrayidx61, align 8, !dbg !3669
  br label %for.inc62, !dbg !3670

for.inc62:                                        ; preds = %for.body57
  %101 = load i32, i32* %j, align 4, !dbg !3671
  %inc63 = add nsw i32 %101, 1, !dbg !3671
  store i32 %inc63, i32* %j, align 4, !dbg !3671
  %102 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !3672
  %incdec.ptr64 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %102, i32 1, !dbg !3672
  store %struct.MLoop* %incdec.ptr64, %struct.MLoop** %ml, align 8, !dbg !3672
  br label %for.cond53, !dbg !3673, !llvm.loop !3674

for.end65:                                        ; preds = %for.cond53
  %103 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3676
  %104 = load i32, i32* %i, align 4, !dbg !3678
  %conv66 = sext i32 %104 to i64, !dbg !3678
  %105 = inttoptr i64 %conv66 to i8*, !dbg !3678
  %106 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !3679
  %totloop67 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %106, i32 0, i32 1, !dbg !3680
  %107 = load i32, i32* %totloop67, align 4, !dbg !3680
  %call68 = call i32 @ccgSubSurf_syncFace(%struct.CCGSubSurf* %103, i8* %105, i32 %107, i8** %vla, %struct.CCGFace** %f), !dbg !3681
  %cmp69 = icmp eq i32 %call68, 2, !dbg !3682
  br i1 %cmp69, label %if.then71, label %if.end75, !dbg !3683

if.then71:                                        ; preds = %for.end65
  %108 = load i32, i32* @ss_sync_from_derivedmesh.hasGivenError, align 4, !dbg !3684
  %tobool72 = icmp ne i32 %108, 0, !dbg !3684
  br i1 %tobool72, label %if.end74, label %if.then73, !dbg !3687

if.then73:                                        ; preds = %if.then71
  store i32 1, i32* @ss_sync_from_derivedmesh.hasGivenError, align 4, !dbg !3688
  br label %if.end74, !dbg !3690

if.end74:                                         ; preds = %if.then73, %if.then71
  store i32 1, i32* %cleanup.dest.slot, align 4
  br label %cleanup, !dbg !3691

if.end75:                                         ; preds = %for.end65
  %109 = load i32*, i32** %index, align 8, !dbg !3692
  %tobool76 = icmp ne i32* %109, null, !dbg !3693
  br i1 %tobool76, label %cond.true77, label %cond.false79, !dbg !3693

cond.true77:                                      ; preds = %if.end75
  %110 = load i32*, i32** %index, align 8, !dbg !3694
  %incdec.ptr78 = getelementptr inbounds i32, i32* %110, i32 1, !dbg !3694
  store i32* %incdec.ptr78, i32** %index, align 8, !dbg !3694
  %111 = load i32, i32* %110, align 4, !dbg !3695
  br label %cond.end80, !dbg !3693

cond.false79:                                     ; preds = %if.end75
  %112 = load i32, i32* %i, align 4, !dbg !3696
  br label %cond.end80, !dbg !3693

cond.end80:                                       ; preds = %cond.false79, %cond.true77
  %cond81 = phi i32 [ %111, %cond.true77 ], [ %112, %cond.false79 ], !dbg !3693
  %113 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3697
  %114 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !3698
  %call82 = call i8* @ccgSubSurf_getFaceUserData(%struct.CCGSubSurf* %113, %struct.CCGFace* %114), !dbg !3699
  %115 = bitcast i8* %call82 to i32*, !dbg !3700
  %arrayidx83 = getelementptr inbounds i32, i32* %115, i64 1, !dbg !3701
  store i32 %cond81, i32* %arrayidx83, align 4, !dbg !3702
  store i32 0, i32* %cleanup.dest.slot, align 4, !dbg !3703
  br label %cleanup, !dbg !3703

cleanup:                                          ; preds = %cond.end80, %if.end74
  %116 = load i8*, i8** %saved_stack, align 8, !dbg !3703
  call void @llvm.stackrestore(i8* %116), !dbg !3703
  %cleanup.dest = load i32, i32* %cleanup.dest.slot, align 4
  switch i32 %cleanup.dest, label %unreachable [
    i32 0, label %cleanup.cont
    i32 1, label %return
  ]

cleanup.cont:                                     ; preds = %cleanup
  br label %for.inc84, !dbg !3704

for.inc84:                                        ; preds = %cleanup.cont
  %117 = load i32, i32* %i, align 4, !dbg !3705
  %inc85 = add nsw i32 %117, 1, !dbg !3705
  store i32 %inc85, i32* %i, align 4, !dbg !3705
  %118 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !3706
  %incdec.ptr86 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %118, i32 1, !dbg !3706
  store %struct.MPoly* %incdec.ptr86, %struct.MPoly** %mp, align 8, !dbg !3706
  br label %for.cond49, !dbg !3707, !llvm.loop !3708

for.end87:                                        ; preds = %for.cond49
  %119 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3710
  %call88 = call i32 @ccgSubSurf_processSync(%struct.CCGSubSurf* %119), !dbg !3711
  br label %return, !dbg !3712

return:                                           ; preds = %for.end87, %cleanup
  ret void, !dbg !3712

unreachable:                                      ; preds = %cleanup
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.CCGDerivedMesh* @getCCGDerivedMesh(%struct.CCGSubSurf* %ss, i32 %drawInteriorEdges, i32 %useSubsurfUv, %struct.DerivedMesh* %dm) #0 !dbg !3713 {
entry:
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %drawInteriorEdges.addr = alloca i32, align 4
  %useSubsurfUv.addr = alloca i32, align 4
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %ccgdm = alloca %struct.CCGDerivedMesh*, align 8
  %vi = alloca %struct.CCGVertIterator*, align 8
  %ei = alloca %struct.CCGEdgeIterator*, align 8
  %fi = alloca %struct.CCGFaceIterator*, align 8
  %index = alloca i32, align 4
  %totvert = alloca i32, align 4
  %totedge = alloca i32, align 4
  %totface = alloca i32, align 4
  %i = alloca i32, align 4
  %vertNum = alloca i32, align 4
  %edgeNum = alloca i32, align 4
  %faceNum = alloca i32, align 4
  %vertOrigIndex = alloca i32*, align 8
  %faceOrigIndex = alloca i32*, align 8
  %polyOrigIndex = alloca i32*, align 8
  %base_polyOrigIndex = alloca i32*, align 8
  %edgeOrigIndex = alloca i32*, align 8
  %edgeFlags = alloca i16*, align 8
  %faceFlags = alloca %struct.DMFlagMat*, align 8
  %polyidx = alloca i32*, align 8
  %loopindex = alloca i32, align 4
  %loopindex2 = alloca i32, align 4
  %edgeSize = alloca i32, align 4
  %gridSize = alloca i32, align 4
  %gridFaces = alloca i32, align 4
  %gridCuts = alloca i32, align 4
  %gridSideEdges = alloca i32, align 4
  %numTex = alloca i32, align 4
  %numCol = alloca i32, align 4
  %hasPCol = alloca i32, align 4
  %hasOrigSpace = alloca i32, align 4
  %gridInternalEdges = alloca i32, align 4
  %wtable = alloca %struct.WeightTable, align 8
  %medge = alloca %struct.MEdge*, align 8
  %mpoly = alloca %struct.MPoly*, align 8
  %has_edge_cd = alloca i8, align 1
  %v = alloca %struct.CCGVert*, align 8
  %e = alloca %struct.CCGEdge*, align 8
  %f = alloca %struct.CCGFace*, align 8
  %f205 = alloca %struct.CCGFace*, align 8
  %numVerts = alloca i32, align 4
  %numFinalEdges = alloca i32, align 4
  %origIndex = alloca i32, align 4
  %g2_wid = alloca i32, align 4
  %w = alloca float*, align 8
  %w2 = alloca float*, align 8
  %s = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %saved_stack = alloca i8*, align 8
  %__vla_expr0 = alloca i64, align 8
  %__vla_expr1 = alloca i64, align 8
  %v257 = alloca %struct.CCGVert*, align 8
  %e468 = alloca %struct.CCGEdge*, align 8
  %numFinalEdges473 = alloca i32, align 4
  %mapIndex = alloca i32, align 4
  %x476 = alloca i32, align 4
  %vertIdx = alloca [2 x i32], align 4
  %edgeIdx = alloca i32, align 4
  %v479 = alloca %struct.CCGVert*, align 8
  %w513 = alloca [2 x float], align 4
  %ldata = alloca %struct.CustomData*, align 8
  %dmldata = alloca %struct.CustomData*, align 8
  %numlayer = alloca i32, align 4
  %dmnumlayer = alloca i32, align 4
  %v584 = alloca %struct.CCGVert*, align 8
  %mapIndex589 = alloca i32, align 4
  %vertIdx592 = alloca i32, align 4
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !3716, metadata !DIExpression()), !dbg !3717
  store i32 %drawInteriorEdges, i32* %drawInteriorEdges.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %drawInteriorEdges.addr, metadata !3718, metadata !DIExpression()), !dbg !3719
  store i32 %useSubsurfUv, i32* %useSubsurfUv.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %useSubsurfUv.addr, metadata !3720, metadata !DIExpression()), !dbg !3721
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3722, metadata !DIExpression()), !dbg !3723
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm, metadata !3724, metadata !DIExpression()), !dbg !3725
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3726
  %call = call i8* %0(i64 1888, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0)), !dbg !3726
  %1 = bitcast i8* %call to %struct.CCGDerivedMesh*, !dbg !3726
  store %struct.CCGDerivedMesh* %1, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !3725
  call void @llvm.dbg.declare(metadata %struct.CCGVertIterator** %vi, metadata !3727, metadata !DIExpression()), !dbg !3731
  call void @llvm.dbg.declare(metadata %struct.CCGEdgeIterator** %ei, metadata !3732, metadata !DIExpression()), !dbg !3736
  call void @llvm.dbg.declare(metadata %struct.CCGFaceIterator** %fi, metadata !3737, metadata !DIExpression()), !dbg !3741
  call void @llvm.dbg.declare(metadata i32* %index, metadata !3742, metadata !DIExpression()), !dbg !3743
  call void @llvm.dbg.declare(metadata i32* %totvert, metadata !3744, metadata !DIExpression()), !dbg !3745
  call void @llvm.dbg.declare(metadata i32* %totedge, metadata !3746, metadata !DIExpression()), !dbg !3747
  call void @llvm.dbg.declare(metadata i32* %totface, metadata !3748, metadata !DIExpression()), !dbg !3749
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3750, metadata !DIExpression()), !dbg !3751
  call void @llvm.dbg.declare(metadata i32* %vertNum, metadata !3752, metadata !DIExpression()), !dbg !3753
  call void @llvm.dbg.declare(metadata i32* %edgeNum, metadata !3754, metadata !DIExpression()), !dbg !3755
  call void @llvm.dbg.declare(metadata i32* %faceNum, metadata !3756, metadata !DIExpression()), !dbg !3757
  call void @llvm.dbg.declare(metadata i32** %vertOrigIndex, metadata !3758, metadata !DIExpression()), !dbg !3759
  call void @llvm.dbg.declare(metadata i32** %faceOrigIndex, metadata !3760, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.declare(metadata i32** %polyOrigIndex, metadata !3762, metadata !DIExpression()), !dbg !3763
  call void @llvm.dbg.declare(metadata i32** %base_polyOrigIndex, metadata !3764, metadata !DIExpression()), !dbg !3765
  call void @llvm.dbg.declare(metadata i32** %edgeOrigIndex, metadata !3766, metadata !DIExpression()), !dbg !3767
  call void @llvm.dbg.declare(metadata i16** %edgeFlags, metadata !3768, metadata !DIExpression()), !dbg !3769
  call void @llvm.dbg.declare(metadata %struct.DMFlagMat** %faceFlags, metadata !3770, metadata !DIExpression()), !dbg !3771
  call void @llvm.dbg.declare(metadata i32** %polyidx, metadata !3772, metadata !DIExpression()), !dbg !3773
  store i32* null, i32** %polyidx, align 8, !dbg !3773
  call void @llvm.dbg.declare(metadata i32* %loopindex, metadata !3774, metadata !DIExpression()), !dbg !3775
  call void @llvm.dbg.declare(metadata i32* %loopindex2, metadata !3776, metadata !DIExpression()), !dbg !3777
  call void @llvm.dbg.declare(metadata i32* %edgeSize, metadata !3778, metadata !DIExpression()), !dbg !3779
  call void @llvm.dbg.declare(metadata i32* %gridSize, metadata !3780, metadata !DIExpression()), !dbg !3781
  call void @llvm.dbg.declare(metadata i32* %gridFaces, metadata !3782, metadata !DIExpression()), !dbg !3783
  call void @llvm.dbg.declare(metadata i32* %gridCuts, metadata !3784, metadata !DIExpression()), !dbg !3785
  call void @llvm.dbg.declare(metadata i32* %gridSideEdges, metadata !3786, metadata !DIExpression()), !dbg !3787
  call void @llvm.dbg.declare(metadata i32* %numTex, metadata !3788, metadata !DIExpression()), !dbg !3789
  call void @llvm.dbg.declare(metadata i32* %numCol, metadata !3790, metadata !DIExpression()), !dbg !3791
  call void @llvm.dbg.declare(metadata i32* %hasPCol, metadata !3792, metadata !DIExpression()), !dbg !3793
  call void @llvm.dbg.declare(metadata i32* %hasOrigSpace, metadata !3794, metadata !DIExpression()), !dbg !3795
  call void @llvm.dbg.declare(metadata i32* %gridInternalEdges, metadata !3796, metadata !DIExpression()), !dbg !3797
  call void @llvm.dbg.declare(metadata %struct.WeightTable* %wtable, metadata !3798, metadata !DIExpression()), !dbg !3816
  %2 = bitcast %struct.WeightTable* %wtable to i8*, !dbg !3816
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false), !dbg !3816
  call void @llvm.dbg.declare(metadata %struct.MEdge** %medge, metadata !3817, metadata !DIExpression()), !dbg !3818
  store %struct.MEdge* null, %struct.MEdge** %medge, align 8, !dbg !3818
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpoly, metadata !3819, metadata !DIExpression()), !dbg !3820
  store %struct.MPoly* null, %struct.MPoly** %mpoly, align 8, !dbg !3820
  call void @llvm.dbg.declare(metadata i8* %has_edge_cd, metadata !3821, metadata !DIExpression()), !dbg !3822
  %3 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !3823
  %dm1 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %3, i32 0, i32 0, !dbg !3824
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3825
  %5 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3826
  %call2 = call i32 @ccgSubSurf_getNumFinalVerts(%struct.CCGSubSurf* %5), !dbg !3827
  %6 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3828
  %call3 = call i32 @ccgSubSurf_getNumFinalEdges(%struct.CCGSubSurf* %6), !dbg !3829
  %7 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3830
  %call4 = call i32 @ccgSubSurf_getNumFinalFaces(%struct.CCGSubSurf* %7), !dbg !3831
  %8 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3832
  %call5 = call i32 @ccgSubSurf_getNumFinalFaces(%struct.CCGSubSurf* %8), !dbg !3833
  %mul = mul nsw i32 %call5, 4, !dbg !3834
  %9 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3835
  %call6 = call i32 @ccgSubSurf_getNumFinalFaces(%struct.CCGSubSurf* %9), !dbg !3836
  call void @DM_from_template(%struct.DerivedMesh* %dm1, %struct.DerivedMesh* %4, i32 2, i32 %call2, i32 %call3, i32 %call4, i32 %mul, i32 %call6), !dbg !3837
  %10 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !3838
  %dm7 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %10, i32 0, i32 0, !dbg !3839
  %polyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm7, i32 0, i32 4, !dbg !3840
  %11 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !3841
  %dm8 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %11, i32 0, i32 0, !dbg !3842
  %numPolyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm8, i32 0, i32 9, !dbg !3843
  %12 = load i32, i32* %numPolyData, align 8, !dbg !3843
  %call9 = call zeroext i8 @CustomData_free_layer_active(%struct.CustomData* %polyData, i32 8, i32 %12), !dbg !3844
  %13 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !3845
  %dm10 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %13, i32 0, i32 0, !dbg !3846
  %loopData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm10, i32 0, i32 3, !dbg !3847
  %call11 = call i32 @CustomData_number_of_layers(%struct.CustomData* %loopData, i32 16), !dbg !3848
  store i32 %call11, i32* %numTex, align 4, !dbg !3849
  %14 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !3850
  %dm12 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %14, i32 0, i32 0, !dbg !3851
  %loopData13 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm12, i32 0, i32 3, !dbg !3852
  %call14 = call i32 @CustomData_number_of_layers(%struct.CustomData* %loopData13, i32 17), !dbg !3853
  store i32 %call14, i32* %numCol, align 4, !dbg !3854
  %15 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !3855
  %dm15 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %15, i32 0, i32 0, !dbg !3856
  %loopData16 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm15, i32 0, i32 3, !dbg !3857
  %call17 = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %loopData16, i32 32), !dbg !3858
  %conv = zext i8 %call17 to i32, !dbg !3858
  store i32 %conv, i32* %hasPCol, align 4, !dbg !3859
  %16 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !3860
  %dm18 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %16, i32 0, i32 0, !dbg !3861
  %loopData19 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm18, i32 0, i32 3, !dbg !3862
  %call20 = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %loopData19, i32 31), !dbg !3863
  %conv21 = zext i8 %call20 to i32, !dbg !3863
  store i32 %conv21, i32* %hasOrigSpace, align 4, !dbg !3864
  %17 = load i32, i32* %numTex, align 4, !dbg !3865
  %tobool = icmp ne i32 %17, 0, !dbg !3865
  br i1 %tobool, label %land.lhs.true, label %lor.lhs.false, !dbg !3867

land.lhs.true:                                    ; preds = %entry
  %18 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !3868
  %dm22 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %18, i32 0, i32 0, !dbg !3869
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm22, i32 0, i32 2, !dbg !3870
  %call23 = call i32 @CustomData_number_of_layers(%struct.CustomData* %faceData, i32 5), !dbg !3871
  %19 = load i32, i32* %numTex, align 4, !dbg !3872
  %cmp = icmp ne i32 %call23, %19, !dbg !3873
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3874

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %20 = load i32, i32* %numCol, align 4, !dbg !3875
  %tobool25 = icmp ne i32 %20, 0, !dbg !3875
  br i1 %tobool25, label %land.lhs.true26, label %lor.lhs.false32, !dbg !3876

land.lhs.true26:                                  ; preds = %lor.lhs.false
  %21 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !3877
  %dm27 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %21, i32 0, i32 0, !dbg !3878
  %faceData28 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm27, i32 0, i32 2, !dbg !3879
  %call29 = call i32 @CustomData_number_of_layers(%struct.CustomData* %faceData28, i32 6), !dbg !3880
  %22 = load i32, i32* %numCol, align 4, !dbg !3881
  %cmp30 = icmp ne i32 %call29, %22, !dbg !3882
  br i1 %cmp30, label %if.then, label %lor.lhs.false32, !dbg !3883

lor.lhs.false32:                                  ; preds = %land.lhs.true26, %lor.lhs.false
  %23 = load i32, i32* %hasPCol, align 4, !dbg !3884
  %tobool33 = icmp ne i32 %23, 0, !dbg !3884
  br i1 %tobool33, label %land.lhs.true34, label %lor.lhs.false39, !dbg !3885

land.lhs.true34:                                  ; preds = %lor.lhs.false32
  %24 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !3886
  %dm35 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %24, i32 0, i32 0, !dbg !3887
  %faceData36 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm35, i32 0, i32 2, !dbg !3888
  %call37 = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %faceData36, i32 20), !dbg !3889
  %tobool38 = icmp ne i8 %call37, 0, !dbg !3889
  br i1 %tobool38, label %lor.lhs.false39, label %if.then, !dbg !3890

lor.lhs.false39:                                  ; preds = %land.lhs.true34, %lor.lhs.false32
  %25 = load i32, i32* %hasOrigSpace, align 4, !dbg !3891
  %tobool40 = icmp ne i32 %25, 0, !dbg !3891
  br i1 %tobool40, label %land.lhs.true41, label %if.end, !dbg !3892

land.lhs.true41:                                  ; preds = %lor.lhs.false39
  %26 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !3893
  %dm42 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %26, i32 0, i32 0, !dbg !3894
  %faceData43 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm42, i32 0, i32 2, !dbg !3895
  %call44 = call zeroext i8 @CustomData_has_layer(%struct.CustomData* %faceData43, i32 13), !dbg !3896
  %tobool45 = icmp ne i8 %call44, 0, !dbg !3896
  br i1 %tobool45, label %if.end, label %if.then, !dbg !3897

if.then:                                          ; preds = %land.lhs.true41, %land.lhs.true34, %land.lhs.true26, %land.lhs.true
  %27 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !3898
  %dm46 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %27, i32 0, i32 0, !dbg !3900
  %faceData47 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm46, i32 0, i32 2, !dbg !3901
  %28 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !3902
  %dm48 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %28, i32 0, i32 0, !dbg !3903
  %polyData49 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm48, i32 0, i32 4, !dbg !3904
  %29 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !3905
  %dm50 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %29, i32 0, i32 0, !dbg !3906
  %loopData51 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm50, i32 0, i32 3, !dbg !3907
  %30 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3908
  %call52 = call i32 @ccgSubSurf_getNumFinalFaces(%struct.CCGSubSurf* %30), !dbg !3909
  call void @CustomData_from_bmeshpoly(%struct.CustomData* %faceData47, %struct.CustomData* %polyData49, %struct.CustomData* %loopData51, i32 %call52), !dbg !3910
  br label %if.end, !dbg !3911

if.end:                                           ; preds = %if.then, %land.lhs.true41, %lor.lhs.false39
  %31 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !3912
  %dm53 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %31, i32 0, i32 0, !dbg !3913
  %faceData54 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm53, i32 0, i32 2, !dbg !3914
  %32 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !3915
  %call55 = call i32 @ccgSubSurf_getNumFinalFaces(%struct.CCGSubSurf* %32), !dbg !3916
  %call56 = call i8* @CustomData_add_layer(%struct.CustomData* %faceData54, i32 7, i32 1, i8* null, i32 %call55), !dbg !3917
  %33 = bitcast i8* %call56 to i32*, !dbg !3917
  store i32* %33, i32** %polyidx, align 8, !dbg !3918
  %34 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !3919
  %dm57 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %34, i32 0, i32 0, !dbg !3920
  %getMinMax = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm57, i32 0, i32 75, !dbg !3921
  store void (%struct.DerivedMesh*, float*, float*)* @ccgDM_getMinMax, void (%struct.DerivedMesh*, float*, float*)** %getMinMax, align 8, !dbg !3922
  %35 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !3923
  %dm58 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %35, i32 0, i32 0, !dbg !3924
  %getNumVerts = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm58, i32 0, i32 23, !dbg !3925
  store i32 (%struct.DerivedMesh*)* @ccgDM_getNumVerts, i32 (%struct.DerivedMesh*)** %getNumVerts, align 8, !dbg !3926
  %36 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !3927
  %dm59 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %36, i32 0, i32 0, !dbg !3928
  %getNumEdges = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm59, i32 0, i32 24, !dbg !3929
  store i32 (%struct.DerivedMesh*)* @ccgDM_getNumEdges, i32 (%struct.DerivedMesh*)** %getNumEdges, align 8, !dbg !3930
  %37 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !3931
  %dm60 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %37, i32 0, i32 0, !dbg !3932
  %getNumTessFaces = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm60, i32 0, i32 25, !dbg !3933
  store i32 (%struct.DerivedMesh*)* @ccgDM_getNumTessFaces, i32 (%struct.DerivedMesh*)** %getNumTessFaces, align 8, !dbg !3934
  %38 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !3935
  %dm61 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %38, i32 0, i32 0, !dbg !3936
  %getNumLoops = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm61, i32 0, i32 26, !dbg !3937
  store i32 (%struct.DerivedMesh*)* @ccgDM_getNumLoops, i32 (%struct.DerivedMesh*)** %getNumLoops, align 8, !dbg !3938
  %39 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !3939
  %dm62 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %39, i32 0, i32 0, !dbg !3940
  %getNumPolys = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm62, i32 0, i32 27, !dbg !3941
  store i32 (%struct.DerivedMesh*)* @ccgDM_getNumTessFaces, i32 (%struct.DerivedMesh*)** %getNumPolys, align 8, !dbg !3942
  %40 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !3943
  %dm63 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %40, i32 0, i32 0, !dbg !3944
  %getVert = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm63, i32 0, i32 28, !dbg !3945
  store void (%struct.DerivedMesh*, i32, %struct.MVert*)* @ccgDM_getFinalVert, void (%struct.DerivedMesh*, i32, %struct.MVert*)** %getVert, align 8, !dbg !3946
  %41 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !3947
  %dm64 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %41, i32 0, i32 0, !dbg !3948
  %getEdge = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm64, i32 0, i32 29, !dbg !3949
  store void (%struct.DerivedMesh*, i32, %struct.MEdge*)* @ccgDM_getFinalEdge, void (%struct.DerivedMesh*, i32, %struct.MEdge*)** %getEdge, align 8, !dbg !3950
  %42 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !3951
  %dm65 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %42, i32 0, i32 0, !dbg !3952
  %getTessFace = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm65, i32 0, i32 30, !dbg !3953
  store void (%struct.DerivedMesh*, i32, %struct.MFace*)* @ccgDM_getFinalFace, void (%struct.DerivedMesh*, i32, %struct.MFace*)** %getTessFace, align 8, !dbg !3954
  %43 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !3955
  %dm66 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %43, i32 0, i32 0, !dbg !3956
  %getVertCo = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm66, i32 0, i32 76, !dbg !3957
  store void (%struct.DerivedMesh*, i32, float*)* @ccgDM_getFinalVertCo, void (%struct.DerivedMesh*, i32, float*)** %getVertCo, align 8, !dbg !3958
  %44 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !3959
  %dm67 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %44, i32 0, i32 0, !dbg !3960
  %getVertNo = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm67, i32 0, i32 78, !dbg !3961
  store void (%struct.DerivedMesh*, i32, float*)* @ccgDM_getFinalVertNo, void (%struct.DerivedMesh*, i32, float*)** %getVertNo, align 8, !dbg !3962
  %45 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !3963
  %dm68 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %45, i32 0, i32 0, !dbg !3964
  %copyVertArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm68, i32 0, i32 36, !dbg !3965
  store void (%struct.DerivedMesh*, %struct.MVert*)* @ccgDM_copyFinalVertArray, void (%struct.DerivedMesh*, %struct.MVert*)** %copyVertArray, align 8, !dbg !3966
  %46 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !3967
  %dm69 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %46, i32 0, i32 0, !dbg !3968
  %copyEdgeArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm69, i32 0, i32 37, !dbg !3969
  store void (%struct.DerivedMesh*, %struct.MEdge*)* @ccgDM_copyFinalEdgeArray, void (%struct.DerivedMesh*, %struct.MEdge*)** %copyEdgeArray, align 8, !dbg !3970
  %47 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !3971
  %dm70 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %47, i32 0, i32 0, !dbg !3972
  %copyTessFaceArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm70, i32 0, i32 38, !dbg !3973
  store void (%struct.DerivedMesh*, %struct.MFace*)* @ccgDM_copyFinalFaceArray, void (%struct.DerivedMesh*, %struct.MFace*)** %copyTessFaceArray, align 8, !dbg !3974
  %48 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !3975
  %dm71 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %48, i32 0, i32 0, !dbg !3976
  %copyLoopArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm71, i32 0, i32 39, !dbg !3977
  store void (%struct.DerivedMesh*, %struct.MLoop*)* @ccgDM_copyFinalLoopArray, void (%struct.DerivedMesh*, %struct.MLoop*)** %copyLoopArray, align 8, !dbg !3978
  %49 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !3979
  %dm72 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %49, i32 0, i32 0, !dbg !3980
  %copyPolyArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm72, i32 0, i32 40, !dbg !3981
  store void (%struct.DerivedMesh*, %struct.MPoly*)* @ccgDM_copyFinalPolyArray, void (%struct.DerivedMesh*, %struct.MPoly*)** %copyPolyArray, align 8, !dbg !3982
  %50 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !3983
  %dm73 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %50, i32 0, i32 0, !dbg !3984
  %getVertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm73, i32 0, i32 46, !dbg !3985
  store i8* (%struct.DerivedMesh*, i32, i32)* @ccgDM_get_vert_data, i8* (%struct.DerivedMesh*, i32, i32)** %getVertData, align 8, !dbg !3986
  %51 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !3987
  %dm74 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %51, i32 0, i32 0, !dbg !3988
  %getEdgeData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm74, i32 0, i32 47, !dbg !3989
  store i8* (%struct.DerivedMesh*, i32, i32)* @ccgDM_get_edge_data, i8* (%struct.DerivedMesh*, i32, i32)** %getEdgeData, align 8, !dbg !3990
  %52 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !3991
  %dm75 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %52, i32 0, i32 0, !dbg !3992
  %getTessFaceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm75, i32 0, i32 48, !dbg !3993
  store i8* (%struct.DerivedMesh*, i32, i32)* @ccgDM_get_tessface_data, i8* (%struct.DerivedMesh*, i32, i32)** %getTessFaceData, align 8, !dbg !3994
  %53 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !3995
  %dm76 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %53, i32 0, i32 0, !dbg !3996
  %getPolyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm76, i32 0, i32 49, !dbg !3997
  store i8* (%struct.DerivedMesh*, i32, i32)* @ccgDM_get_poly_data, i8* (%struct.DerivedMesh*, i32, i32)** %getPolyData, align 8, !dbg !3998
  %54 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !3999
  %dm77 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %54, i32 0, i32 0, !dbg !4000
  %getVertDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm77, i32 0, i32 50, !dbg !4001
  store i8* (%struct.DerivedMesh*, i32)* @ccgDM_get_vert_data_layer, i8* (%struct.DerivedMesh*, i32)** %getVertDataArray, align 8, !dbg !4002
  %55 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4003
  %dm78 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %55, i32 0, i32 0, !dbg !4004
  %getEdgeDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm78, i32 0, i32 51, !dbg !4005
  store i8* (%struct.DerivedMesh*, i32)* @ccgDM_get_edge_data_layer, i8* (%struct.DerivedMesh*, i32)** %getEdgeDataArray, align 8, !dbg !4006
  %56 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4007
  %dm79 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %56, i32 0, i32 0, !dbg !4008
  %getTessFaceDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm79, i32 0, i32 52, !dbg !4009
  store i8* (%struct.DerivedMesh*, i32)* @ccgDM_get_tessface_data_layer, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray, align 8, !dbg !4010
  %57 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4011
  %dm80 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %57, i32 0, i32 0, !dbg !4012
  %getPolyDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm80, i32 0, i32 54, !dbg !4013
  store i8* (%struct.DerivedMesh*, i32)* @ccgDM_get_poly_data_layer, i8* (%struct.DerivedMesh*, i32)** %getPolyDataArray, align 8, !dbg !4014
  %58 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4015
  %dm81 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %58, i32 0, i32 0, !dbg !4016
  %getNumGrids = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm81, i32 0, i32 63, !dbg !4017
  store i32 (%struct.DerivedMesh*)* @ccgDM_getNumGrids, i32 (%struct.DerivedMesh*)** %getNumGrids, align 8, !dbg !4018
  %59 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4019
  %dm82 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %59, i32 0, i32 0, !dbg !4020
  %getGridSize = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm82, i32 0, i32 64, !dbg !4021
  store i32 (%struct.DerivedMesh*)* @ccgDM_getGridSize, i32 (%struct.DerivedMesh*)** %getGridSize, align 8, !dbg !4022
  %60 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4023
  %dm83 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %60, i32 0, i32 0, !dbg !4024
  %getGridData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm83, i32 0, i32 65, !dbg !4025
  store %struct.CCGElem** (%struct.DerivedMesh*)* @ccgDM_getGridData, %struct.CCGElem** (%struct.DerivedMesh*)** %getGridData, align 8, !dbg !4026
  %61 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4027
  %dm84 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %61, i32 0, i32 0, !dbg !4028
  %getGridAdjacency = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm84, i32 0, i32 66, !dbg !4029
  store %struct.DMGridAdjacency* (%struct.DerivedMesh*)* @ccgDM_getGridAdjacency, %struct.DMGridAdjacency* (%struct.DerivedMesh*)** %getGridAdjacency, align 8, !dbg !4030
  %62 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4031
  %dm85 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %62, i32 0, i32 0, !dbg !4032
  %getGridOffset = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm85, i32 0, i32 67, !dbg !4033
  store i32* (%struct.DerivedMesh*)* @ccgDM_getGridOffset, i32* (%struct.DerivedMesh*)** %getGridOffset, align 8, !dbg !4034
  %63 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4035
  %dm86 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %63, i32 0, i32 0, !dbg !4036
  %getGridKey = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm86, i32 0, i32 68, !dbg !4037
  store void (%struct.DerivedMesh*, %struct.CCGKey*)* @ccgDM_getGridKey, void (%struct.DerivedMesh*, %struct.CCGKey*)** %getGridKey, align 8, !dbg !4038
  %64 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4039
  %dm87 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %64, i32 0, i32 0, !dbg !4040
  %getGridFlagMats = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm87, i32 0, i32 69, !dbg !4041
  store %struct.DMFlagMat* (%struct.DerivedMesh*)* @ccgDM_getGridFlagMats, %struct.DMFlagMat* (%struct.DerivedMesh*)** %getGridFlagMats, align 8, !dbg !4042
  %65 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4043
  %dm88 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %65, i32 0, i32 0, !dbg !4044
  %getGridHidden = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm88, i32 0, i32 70, !dbg !4045
  store i32** (%struct.DerivedMesh*)* @ccgDM_getGridHidden, i32** (%struct.DerivedMesh*)** %getGridHidden, align 8, !dbg !4046
  %66 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4047
  %dm89 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %66, i32 0, i32 0, !dbg !4048
  %getPolyMap = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm89, i32 0, i32 80, !dbg !4049
  store %struct.MeshElemMap* (%struct.Object*, %struct.DerivedMesh*)* @ccgDM_getPolyMap, %struct.MeshElemMap* (%struct.Object*, %struct.DerivedMesh*)** %getPolyMap, align 8, !dbg !4050
  %67 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4051
  %dm90 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %67, i32 0, i32 0, !dbg !4052
  %getPBVH = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm90, i32 0, i32 81, !dbg !4053
  store %struct.PBVH* (%struct.Object*, %struct.DerivedMesh*)* @ccgDM_getPBVH, %struct.PBVH* (%struct.Object*, %struct.DerivedMesh*)** %getPBVH, align 8, !dbg !4054
  %68 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4055
  %dm91 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %68, i32 0, i32 0, !dbg !4056
  %calcNormals = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm91, i32 0, i32 20, !dbg !4057
  store void (%struct.DerivedMesh*)* @ccgDM_calcNormals, void (%struct.DerivedMesh*)** %calcNormals, align 8, !dbg !4058
  %69 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4059
  %dm92 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %69, i32 0, i32 0, !dbg !4060
  %calcLoopNormals = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm92, i32 0, i32 21, !dbg !4061
  store void (%struct.DerivedMesh*, float)* @CDDM_calc_loop_normals, void (%struct.DerivedMesh*, float)** %calcLoopNormals, align 8, !dbg !4062
  %70 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4063
  %dm93 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %70, i32 0, i32 0, !dbg !4064
  %recalcTessellation = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm93, i32 0, i32 22, !dbg !4065
  store void (%struct.DerivedMesh*)* @ccgDM_recalcTessellation, void (%struct.DerivedMesh*)** %recalcTessellation, align 8, !dbg !4066
  %71 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4067
  %dm94 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %71, i32 0, i32 0, !dbg !4068
  %getVertCos = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm94, i32 0, i32 77, !dbg !4069
  store void (%struct.DerivedMesh*, [3 x float]*)* @ccgdm_getVertCos, void (%struct.DerivedMesh*, [3 x float]*)** %getVertCos, align 8, !dbg !4070
  %72 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4071
  %dm95 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %72, i32 0, i32 0, !dbg !4072
  %foreachMappedVert = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm95, i32 0, i32 71, !dbg !4073
  store void (%struct.DerivedMesh*, void (i8*, i32, float*, float*, i16*)*, i8*, i32)* @ccgDM_foreachMappedVert, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*, i16*)*, i8*, i32)** %foreachMappedVert, align 8, !dbg !4074
  %73 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4075
  %dm96 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %73, i32 0, i32 0, !dbg !4076
  %foreachMappedEdge = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm96, i32 0, i32 72, !dbg !4077
  store void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*)* @ccgDM_foreachMappedEdge, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*)** %foreachMappedEdge, align 8, !dbg !4078
  %74 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4079
  %dm97 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %74, i32 0, i32 0, !dbg !4080
  %foreachMappedLoop = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm97, i32 0, i32 73, !dbg !4081
  store void (%struct.DerivedMesh*, void (i8*, i32, i32, float*, float*)*, i8*, i32)* @ccgDM_foreachMappedLoop, void (%struct.DerivedMesh*, void (i8*, i32, i32, float*, float*)*, i8*, i32)** %foreachMappedLoop, align 8, !dbg !4082
  %75 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4083
  %dm98 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %75, i32 0, i32 0, !dbg !4084
  %foreachMappedFaceCenter = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm98, i32 0, i32 74, !dbg !4085
  store void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*, i32)* @ccgDM_foreachMappedFaceCenter, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*, i32)** %foreachMappedFaceCenter, align 8, !dbg !4086
  %76 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4087
  %dm99 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %76, i32 0, i32 0, !dbg !4088
  %drawVerts = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm99, i32 0, i32 82, !dbg !4089
  store void (%struct.DerivedMesh*)* @ccgDM_drawVerts, void (%struct.DerivedMesh*)** %drawVerts, align 8, !dbg !4090
  %77 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4091
  %dm100 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %77, i32 0, i32 0, !dbg !4092
  %drawEdges = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm100, i32 0, i32 84, !dbg !4093
  store void (%struct.DerivedMesh*, i8, i8)* @ccgDM_drawEdges, void (%struct.DerivedMesh*, i8, i8)** %drawEdges, align 8, !dbg !4094
  %78 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4095
  %dm101 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %78, i32 0, i32 0, !dbg !4096
  %drawLooseEdges = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm101, i32 0, i32 85, !dbg !4097
  store void (%struct.DerivedMesh*)* @ccgDM_drawLooseEdges, void (%struct.DerivedMesh*)** %drawLooseEdges, align 8, !dbg !4098
  %79 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4099
  %dm102 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %79, i32 0, i32 0, !dbg !4100
  %drawFacesSolid = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm102, i32 0, i32 86, !dbg !4101
  store void (%struct.DerivedMesh*, [4 x float]*, i8, i32 (i32, i8*)*)* @ccgDM_drawFacesSolid, void (%struct.DerivedMesh*, [4 x float]*, i8, i32 (i32, i8*)*)** %drawFacesSolid, align 8, !dbg !4102
  %80 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4103
  %dm103 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %80, i32 0, i32 0, !dbg !4104
  %drawFacesTex = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm103, i32 0, i32 87, !dbg !4105
  store void (%struct.DerivedMesh*, i32 (%struct.MTFace*, i8, i32)*, i32 (i8*, i32, i32)*, i8*, i32)* @ccgDM_drawFacesTex, void (%struct.DerivedMesh*, i32 (%struct.MTFace*, i8, i32)*, i32 (i8*, i32, i32)*, i8*, i32)** %drawFacesTex, align 8, !dbg !4106
  %81 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4107
  %dm104 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %81, i32 0, i32 0, !dbg !4108
  %drawFacesGLSL = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm104, i32 0, i32 88, !dbg !4109
  store void (%struct.DerivedMesh*, i32 (i32, i8*)*)* @ccgDM_drawFacesGLSL, void (%struct.DerivedMesh*, i32 (i32, i8*)*)** %drawFacesGLSL, align 8, !dbg !4110
  %82 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4111
  %dm105 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %82, i32 0, i32 0, !dbg !4112
  %drawMappedFaces = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm105, i32 0, i32 89, !dbg !4113
  store void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i32, i8*)*, i32 (i8*, i32, i32)*, i8*, i32)* @ccgDM_drawMappedFaces, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i32, i8*)*, i32 (i8*, i32, i32)*, i8*, i32)** %drawMappedFaces, align 8, !dbg !4114
  %83 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4115
  %dm106 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %83, i32 0, i32 0, !dbg !4116
  %drawMappedFacesTex = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm106, i32 0, i32 90, !dbg !4117
  store void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i8*, i32, i32)*, i8*, i32)* @ccgDM_drawMappedFacesTex, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i8*, i32, i32)*, i8*, i32)** %drawMappedFacesTex, align 8, !dbg !4118
  %84 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4119
  %dm107 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %84, i32 0, i32 0, !dbg !4120
  %drawMappedFacesGLSL = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm107, i32 0, i32 91, !dbg !4121
  store void (%struct.DerivedMesh*, i32 (i32, i8*)*, i32 (i8*, i32)*, i8*)* @ccgDM_drawMappedFacesGLSL, void (%struct.DerivedMesh*, i32 (i32, i8*)*, i32 (i8*, i32)*, i8*)** %drawMappedFacesGLSL, align 8, !dbg !4122
  %85 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4123
  %dm108 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %85, i32 0, i32 0, !dbg !4124
  %drawMappedFacesMat = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm108, i32 0, i32 94, !dbg !4125
  store void (%struct.DerivedMesh*, void (i8*, i32, i8*)*, i8 (i8*, i32)*, i8*)* @ccgDM_drawMappedFacesMat, void (%struct.DerivedMesh*, void (i8*, i32, i8*)*, i8 (i8*, i32)*, i8*)** %drawMappedFacesMat, align 8, !dbg !4126
  %86 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4127
  %dm109 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %86, i32 0, i32 0, !dbg !4128
  %drawUVEdges = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm109, i32 0, i32 83, !dbg !4129
  store void (%struct.DerivedMesh*)* @ccgDM_drawUVEdges, void (%struct.DerivedMesh*)** %drawUVEdges, align 8, !dbg !4130
  %87 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4131
  %dm110 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %87, i32 0, i32 0, !dbg !4132
  %drawMappedEdgesInterp = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm110, i32 0, i32 93, !dbg !4133
  store void (%struct.DerivedMesh*, i32 (i8*, i32)*, void (i8*, i32, float)*, i8*)* @ccgDM_drawMappedEdgesInterp, void (%struct.DerivedMesh*, i32 (i8*, i32)*, void (i8*, i32, float)*, i8*)** %drawMappedEdgesInterp, align 8, !dbg !4134
  %88 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4135
  %dm111 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %88, i32 0, i32 0, !dbg !4136
  %drawMappedEdges = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm111, i32 0, i32 92, !dbg !4137
  store void (%struct.DerivedMesh*, i32 (i8*, i32)*, i8*)* @ccgDM_drawMappedEdges, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i8*)** %drawMappedEdges, align 8, !dbg !4138
  %89 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4139
  %dm112 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %89, i32 0, i32 0, !dbg !4140
  %release = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm112, i32 0, i32 95, !dbg !4141
  store void (%struct.DerivedMesh*)* @ccgDM_release, void (%struct.DerivedMesh*)** %release, align 8, !dbg !4142
  %90 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !4143
  %91 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4144
  %ss113 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %91, i32 0, i32 1, !dbg !4145
  store %struct.CCGSubSurf* %90, %struct.CCGSubSurf** %ss113, align 8, !dbg !4146
  %92 = load i32, i32* %drawInteriorEdges.addr, align 4, !dbg !4147
  %93 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4148
  %drawInteriorEdges114 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %93, i32 0, i32 3, !dbg !4149
  store i32 %92, i32* %drawInteriorEdges114, align 4, !dbg !4150
  %94 = load i32, i32* %useSubsurfUv.addr, align 4, !dbg !4151
  %95 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4152
  %useSubsurfUv115 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %95, i32 0, i32 4, !dbg !4153
  store i32 %94, i32* %useSubsurfUv115, align 8, !dbg !4154
  %96 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !4155
  %call116 = call i32 @ccgSubSurf_getNumVerts(%struct.CCGSubSurf* %96), !dbg !4156
  store i32 %call116, i32* %totvert, align 4, !dbg !4157
  %97 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4158
  %98 = load i32, i32* %totvert, align 4, !dbg !4159
  %conv117 = sext i32 %98 to i64, !dbg !4159
  %mul118 = mul i64 %conv117, 16, !dbg !4160
  %call119 = call i8* %97(i64 %mul118, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0)), !dbg !4158
  %99 = bitcast i8* %call119 to %struct.anon*, !dbg !4158
  %100 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4161
  %vertMap = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %100, i32 0, i32 5, !dbg !4162
  store %struct.anon* %99, %struct.anon** %vertMap, align 8, !dbg !4163
  %101 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !4164
  %call120 = call %struct.CCGVertIterator* @ccgSubSurf_getVertIterator(%struct.CCGSubSurf* %101), !dbg !4166
  store %struct.CCGVertIterator* %call120, %struct.CCGVertIterator** %vi, align 8, !dbg !4167
  br label %for.cond, !dbg !4168

for.cond:                                         ; preds = %for.inc, %if.end
  %102 = load %struct.CCGVertIterator*, %struct.CCGVertIterator** %vi, align 8, !dbg !4169
  %call121 = call i32 @ccgVertIterator_isStopped(%struct.CCGVertIterator* %102), !dbg !4171
  %tobool122 = icmp ne i32 %call121, 0, !dbg !4172
  %lnot = xor i1 %tobool122, true, !dbg !4172
  br i1 %lnot, label %for.body, label %for.end, !dbg !4173

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v, metadata !4174, metadata !DIExpression()), !dbg !4176
  %103 = load %struct.CCGVertIterator*, %struct.CCGVertIterator** %vi, align 8, !dbg !4177
  %call123 = call %struct.CCGVert* @ccgVertIterator_getCurrent(%struct.CCGVertIterator* %103), !dbg !4178
  store %struct.CCGVert* %call123, %struct.CCGVert** %v, align 8, !dbg !4176
  %104 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !4179
  %105 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4180
  %vertMap124 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %105, i32 0, i32 5, !dbg !4181
  %106 = load %struct.anon*, %struct.anon** %vertMap124, align 8, !dbg !4181
  %107 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !4182
  %call125 = call i8* @ccgSubSurf_getVertVertHandle(%struct.CCGVert* %107), !dbg !4182
  %108 = ptrtoint i8* %call125 to i64, !dbg !4182
  %conv126 = trunc i64 %108 to i32, !dbg !4182
  %idxprom = sext i32 %conv126 to i64, !dbg !4180
  %arrayidx = getelementptr inbounds %struct.anon, %struct.anon* %106, i64 %idxprom, !dbg !4180
  %vert = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx, i32 0, i32 1, !dbg !4183
  store %struct.CCGVert* %104, %struct.CCGVert** %vert, align 8, !dbg !4184
  br label %for.inc, !dbg !4185

for.inc:                                          ; preds = %for.body
  %109 = load %struct.CCGVertIterator*, %struct.CCGVertIterator** %vi, align 8, !dbg !4186
  call void @ccgVertIterator_next(%struct.CCGVertIterator* %109), !dbg !4187
  br label %for.cond, !dbg !4188, !llvm.loop !4189

for.end:                                          ; preds = %for.cond
  %110 = load %struct.CCGVertIterator*, %struct.CCGVertIterator** %vi, align 8, !dbg !4191
  call void @ccgVertIterator_free(%struct.CCGVertIterator* %110), !dbg !4192
  %111 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !4193
  %call127 = call i32 @ccgSubSurf_getNumEdges(%struct.CCGSubSurf* %111), !dbg !4194
  store i32 %call127, i32* %totedge, align 4, !dbg !4195
  %112 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4196
  %113 = load i32, i32* %totedge, align 4, !dbg !4197
  %conv128 = sext i32 %113 to i64, !dbg !4197
  %mul129 = mul i64 %conv128, 16, !dbg !4198
  %call130 = call i8* %112(i64 %mul129, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0)), !dbg !4196
  %114 = bitcast i8* %call130 to %struct.anon.0*, !dbg !4196
  %115 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4199
  %edgeMap = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %115, i32 0, i32 6, !dbg !4200
  store %struct.anon.0* %114, %struct.anon.0** %edgeMap, align 8, !dbg !4201
  %116 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !4202
  %call131 = call %struct.CCGEdgeIterator* @ccgSubSurf_getEdgeIterator(%struct.CCGSubSurf* %116), !dbg !4204
  store %struct.CCGEdgeIterator* %call131, %struct.CCGEdgeIterator** %ei, align 8, !dbg !4205
  br label %for.cond132, !dbg !4206

for.cond132:                                      ; preds = %for.inc143, %for.end
  %117 = load %struct.CCGEdgeIterator*, %struct.CCGEdgeIterator** %ei, align 8, !dbg !4207
  %call133 = call i32 @ccgEdgeIterator_isStopped(%struct.CCGEdgeIterator* %117), !dbg !4209
  %tobool134 = icmp ne i32 %call133, 0, !dbg !4210
  %lnot135 = xor i1 %tobool134, true, !dbg !4210
  br i1 %lnot135, label %for.body136, label %for.end144, !dbg !4211

for.body136:                                      ; preds = %for.cond132
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e, metadata !4212, metadata !DIExpression()), !dbg !4214
  %118 = load %struct.CCGEdgeIterator*, %struct.CCGEdgeIterator** %ei, align 8, !dbg !4215
  %call137 = call %struct.CCGEdge* @ccgEdgeIterator_getCurrent(%struct.CCGEdgeIterator* %118), !dbg !4216
  store %struct.CCGEdge* %call137, %struct.CCGEdge** %e, align 8, !dbg !4214
  %119 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !4217
  %120 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4218
  %edgeMap138 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %120, i32 0, i32 6, !dbg !4219
  %121 = load %struct.anon.0*, %struct.anon.0** %edgeMap138, align 8, !dbg !4219
  %122 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !4220
  %call139 = call i8* @ccgSubSurf_getEdgeEdgeHandle(%struct.CCGEdge* %122), !dbg !4220
  %123 = ptrtoint i8* %call139 to i64, !dbg !4220
  %conv140 = trunc i64 %123 to i32, !dbg !4220
  %idxprom141 = sext i32 %conv140 to i64, !dbg !4218
  %arrayidx142 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %121, i64 %idxprom141, !dbg !4218
  %edge = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx142, i32 0, i32 2, !dbg !4221
  store %struct.CCGEdge* %119, %struct.CCGEdge** %edge, align 8, !dbg !4222
  br label %for.inc143, !dbg !4223

for.inc143:                                       ; preds = %for.body136
  %124 = load %struct.CCGEdgeIterator*, %struct.CCGEdgeIterator** %ei, align 8, !dbg !4224
  call void @ccgEdgeIterator_next(%struct.CCGEdgeIterator* %124), !dbg !4225
  br label %for.cond132, !dbg !4226, !llvm.loop !4227

for.end144:                                       ; preds = %for.cond132
  %125 = load %struct.CCGEdgeIterator*, %struct.CCGEdgeIterator** %ei, align 8, !dbg !4229
  call void @ccgEdgeIterator_free(%struct.CCGEdgeIterator* %125), !dbg !4230
  %126 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !4231
  %call145 = call i32 @ccgSubSurf_getNumFaces(%struct.CCGSubSurf* %126), !dbg !4232
  store i32 %call145, i32* %totface, align 4, !dbg !4233
  %127 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4234
  %128 = load i32, i32* %totface, align 4, !dbg !4235
  %conv146 = sext i32 %128 to i64, !dbg !4235
  %mul147 = mul i64 %conv146, 24, !dbg !4236
  %call148 = call i8* %127(i64 %mul147, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.4, i64 0, i64 0)), !dbg !4234
  %129 = bitcast i8* %call148 to %struct.anon.1*, !dbg !4234
  %130 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4237
  %faceMap = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %130, i32 0, i32 7, !dbg !4238
  store %struct.anon.1* %129, %struct.anon.1** %faceMap, align 8, !dbg !4239
  %131 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !4240
  %call149 = call %struct.CCGFaceIterator* @ccgSubSurf_getFaceIterator(%struct.CCGSubSurf* %131), !dbg !4242
  store %struct.CCGFaceIterator* %call149, %struct.CCGFaceIterator** %fi, align 8, !dbg !4243
  br label %for.cond150, !dbg !4244

for.cond150:                                      ; preds = %for.inc161, %for.end144
  %132 = load %struct.CCGFaceIterator*, %struct.CCGFaceIterator** %fi, align 8, !dbg !4245
  %call151 = call i32 @ccgFaceIterator_isStopped(%struct.CCGFaceIterator* %132), !dbg !4247
  %tobool152 = icmp ne i32 %call151, 0, !dbg !4248
  %lnot153 = xor i1 %tobool152, true, !dbg !4248
  br i1 %lnot153, label %for.body154, label %for.end162, !dbg !4249

for.body154:                                      ; preds = %for.cond150
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f, metadata !4250, metadata !DIExpression()), !dbg !4252
  %133 = load %struct.CCGFaceIterator*, %struct.CCGFaceIterator** %fi, align 8, !dbg !4253
  %call155 = call %struct.CCGFace* @ccgFaceIterator_getCurrent(%struct.CCGFaceIterator* %133), !dbg !4254
  store %struct.CCGFace* %call155, %struct.CCGFace** %f, align 8, !dbg !4252
  %134 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4255
  %135 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4256
  %faceMap156 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %135, i32 0, i32 7, !dbg !4257
  %136 = load %struct.anon.1*, %struct.anon.1** %faceMap156, align 8, !dbg !4257
  %137 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !4258
  %call157 = call i8* @ccgSubSurf_getFaceFaceHandle(%struct.CCGFace* %137), !dbg !4258
  %138 = ptrtoint i8* %call157 to i64, !dbg !4258
  %conv158 = trunc i64 %138 to i32, !dbg !4258
  %idxprom159 = sext i32 %conv158 to i64, !dbg !4256
  %arrayidx160 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %136, i64 %idxprom159, !dbg !4256
  %face = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx160, i32 0, i32 3, !dbg !4259
  store %struct.CCGFace* %134, %struct.CCGFace** %face, align 8, !dbg !4260
  br label %for.inc161, !dbg !4261

for.inc161:                                       ; preds = %for.body154
  %139 = load %struct.CCGFaceIterator*, %struct.CCGFaceIterator** %fi, align 8, !dbg !4262
  call void @ccgFaceIterator_next(%struct.CCGFaceIterator* %139), !dbg !4263
  br label %for.cond150, !dbg !4264, !llvm.loop !4265

for.end162:                                       ; preds = %for.cond150
  %140 = load %struct.CCGFaceIterator*, %struct.CCGFaceIterator** %fi, align 8, !dbg !4267
  call void @ccgFaceIterator_free(%struct.CCGFaceIterator* %140), !dbg !4268
  %141 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4269
  %142 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !4270
  %call163 = call i32 @ccgSubSurf_getNumFinalFaces(%struct.CCGSubSurf* %142), !dbg !4271
  %conv164 = sext i32 %call163 to i64, !dbg !4271
  %mul165 = mul i64 4, %conv164, !dbg !4272
  %call166 = call i8* %141(i64 %mul165, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0)), !dbg !4269
  %143 = bitcast i8* %call166 to i32*, !dbg !4269
  %144 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4273
  %reverseFaceMap = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %144, i32 0, i32 10, !dbg !4274
  store i32* %143, i32** %reverseFaceMap, align 8, !dbg !4275
  %145 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !4276
  %call167 = call i32 @ccgSubSurf_getEdgeSize(%struct.CCGSubSurf* %145), !dbg !4277
  store i32 %call167, i32* %edgeSize, align 4, !dbg !4278
  %146 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !4279
  %call168 = call i32 @ccgSubSurf_getGridSize(%struct.CCGSubSurf* %146), !dbg !4280
  store i32 %call168, i32* %gridSize, align 4, !dbg !4281
  %147 = load i32, i32* %gridSize, align 4, !dbg !4282
  %sub = sub nsw i32 %147, 1, !dbg !4283
  store i32 %sub, i32* %gridFaces, align 4, !dbg !4284
  %148 = load i32, i32* %gridSize, align 4, !dbg !4285
  %sub169 = sub nsw i32 %148, 2, !dbg !4286
  store i32 %sub169, i32* %gridCuts, align 4, !dbg !4287
  %149 = load i32, i32* %gridSize, align 4, !dbg !4288
  %sub170 = sub nsw i32 %149, 1, !dbg !4289
  store i32 %sub170, i32* %gridSideEdges, align 4, !dbg !4290
  %150 = load i32, i32* %gridSideEdges, align 4, !dbg !4291
  %sub171 = sub nsw i32 %150, 1, !dbg !4292
  %151 = load i32, i32* %gridSideEdges, align 4, !dbg !4293
  %mul172 = mul nsw i32 %sub171, %151, !dbg !4294
  %mul173 = mul nsw i32 %mul172, 2, !dbg !4295
  store i32 %mul173, i32* %gridInternalEdges, align 4, !dbg !4296
  store i32 0, i32* %vertNum, align 4, !dbg !4297
  store i32 0, i32* %edgeNum, align 4, !dbg !4298
  store i32 0, i32* %faceNum, align 4, !dbg !4299
  %152 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4300
  %getEdgeArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %152, i32 0, i32 32, !dbg !4301
  %153 = load %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)** %getEdgeArray, align 8, !dbg !4301
  %154 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4302
  %call174 = call %struct.MEdge* %153(%struct.DerivedMesh* %154), !dbg !4300
  store %struct.MEdge* %call174, %struct.MEdge** %medge, align 8, !dbg !4303
  %155 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4304
  %polyData175 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %155, i32 0, i32 4, !dbg !4305
  %call176 = call i8* @CustomData_get_layer(%struct.CustomData* %polyData175, i32 25), !dbg !4306
  %156 = bitcast i8* %call176 to %struct.MPoly*, !dbg !4306
  store %struct.MPoly* %156, %struct.MPoly** %mpoly, align 8, !dbg !4307
  %157 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4308
  %polyData177 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %157, i32 0, i32 4, !dbg !4309
  %call178 = call i8* @CustomData_get_layer(%struct.CustomData* %polyData177, i32 7), !dbg !4310
  %158 = bitcast i8* %call178 to i32*, !dbg !4310
  store i32* %158, i32** %base_polyOrigIndex, align 8, !dbg !4311
  %159 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4312
  %160 = load i32, i32* %totedge, align 4, !dbg !4313
  %conv179 = sext i32 %160 to i64, !dbg !4313
  %mul180 = mul i64 2, %conv179, !dbg !4314
  %call181 = call i8* %159(i64 %mul180, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i64 0, i64 0)), !dbg !4312
  %161 = bitcast i8* %call181 to i16*, !dbg !4312
  %162 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4315
  %edgeFlags182 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %162, i32 0, i32 8, !dbg !4316
  store i16* %161, i16** %edgeFlags182, align 8, !dbg !4317
  store i16* %161, i16** %edgeFlags, align 8, !dbg !4318
  %163 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4319
  %164 = load i32, i32* %totface, align 4, !dbg !4320
  %conv183 = sext i32 %164 to i64, !dbg !4320
  %mul184 = mul i64 4, %conv183, !dbg !4321
  %call185 = call i8* %163(i64 %mul184, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i64 0, i64 0)), !dbg !4319
  %165 = bitcast i8* %call185 to %struct.DMFlagMat*, !dbg !4319
  %166 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4322
  %faceFlags186 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %166, i32 0, i32 9, !dbg !4323
  store %struct.DMFlagMat* %165, %struct.DMFlagMat** %faceFlags186, align 8, !dbg !4324
  store %struct.DMFlagMat* %165, %struct.DMFlagMat** %faceFlags, align 8, !dbg !4325
  %167 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4326
  %dm187 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %167, i32 0, i32 0, !dbg !4327
  %call188 = call i8* @DM_get_vert_data_layer(%struct.DerivedMesh* %dm187, i32 7), !dbg !4328
  %168 = bitcast i8* %call188 to i32*, !dbg !4328
  store i32* %168, i32** %vertOrigIndex, align 8, !dbg !4329
  %169 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4330
  %dm189 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %169, i32 0, i32 0, !dbg !4331
  %call190 = call i8* @DM_get_edge_data_layer(%struct.DerivedMesh* %dm189, i32 7), !dbg !4332
  %170 = bitcast i8* %call190 to i32*, !dbg !4332
  store i32* %170, i32** %edgeOrigIndex, align 8, !dbg !4333
  %171 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4334
  %dm191 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %171, i32 0, i32 0, !dbg !4335
  %call192 = call i8* @DM_get_tessface_data_layer(%struct.DerivedMesh* %dm191, i32 7), !dbg !4336
  %172 = bitcast i8* %call192 to i32*, !dbg !4336
  store i32* %172, i32** %faceOrigIndex, align 8, !dbg !4337
  %173 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4338
  %dm193 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %173, i32 0, i32 0, !dbg !4339
  %call194 = call i8* @DM_get_poly_data_layer(%struct.DerivedMesh* %dm193, i32 7), !dbg !4340
  %174 = bitcast i8* %call194 to i32*, !dbg !4340
  store i32* %174, i32** %polyOrigIndex, align 8, !dbg !4341
  %175 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4342
  %dm195 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %175, i32 0, i32 0, !dbg !4343
  %edgeData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm195, i32 0, i32 1, !dbg !4344
  %totlayer = getelementptr inbounds %struct.CustomData, %struct.CustomData* %edgeData, i32 0, i32 2, !dbg !4345
  %176 = load i32, i32* %totlayer, align 4, !dbg !4345
  %177 = load i32*, i32** %edgeOrigIndex, align 8, !dbg !4346
  %tobool196 = icmp ne i32* %177, null, !dbg !4346
  %178 = zext i1 %tobool196 to i64, !dbg !4346
  %cond = select i1 %tobool196, i32 1, i32 0, !dbg !4346
  %sub197 = sub nsw i32 %176, %cond, !dbg !4347
  %cmp198 = icmp ne i32 %sub197, 0, !dbg !4348
  %conv199 = zext i1 %cmp198 to i32, !dbg !4348
  %conv200 = trunc i32 %conv199 to i8, !dbg !4349
  store i8 %conv200, i8* %has_edge_cd, align 1, !dbg !4350
  store i32 0, i32* %loopindex2, align 4, !dbg !4351
  store i32 0, i32* %loopindex, align 4, !dbg !4352
  store i32 0, i32* %index, align 4, !dbg !4353
  br label %for.cond201, !dbg !4355

for.cond201:                                      ; preds = %for.inc461, %for.end162
  %179 = load i32, i32* %index, align 4, !dbg !4356
  %180 = load i32, i32* %totface, align 4, !dbg !4358
  %cmp202 = icmp slt i32 %179, %180, !dbg !4359
  br i1 %cmp202, label %for.body204, label %for.end463, !dbg !4360

for.body204:                                      ; preds = %for.cond201
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f205, metadata !4361, metadata !DIExpression()), !dbg !4363
  %181 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4364
  %faceMap206 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %181, i32 0, i32 7, !dbg !4365
  %182 = load %struct.anon.1*, %struct.anon.1** %faceMap206, align 8, !dbg !4365
  %183 = load i32, i32* %index, align 4, !dbg !4366
  %idxprom207 = sext i32 %183 to i64, !dbg !4364
  %arrayidx208 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %182, i64 %idxprom207, !dbg !4364
  %face209 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx208, i32 0, i32 3, !dbg !4367
  %184 = load %struct.CCGFace*, %struct.CCGFace** %face209, align 8, !dbg !4367
  store %struct.CCGFace* %184, %struct.CCGFace** %f205, align 8, !dbg !4363
  call void @llvm.dbg.declare(metadata i32* %numVerts, metadata !4368, metadata !DIExpression()), !dbg !4369
  %185 = load %struct.CCGFace*, %struct.CCGFace** %f205, align 8, !dbg !4370
  %call210 = call i32 @ccgSubSurf_getFaceNumVerts(%struct.CCGFace* %185), !dbg !4371
  store i32 %call210, i32* %numVerts, align 4, !dbg !4369
  call void @llvm.dbg.declare(metadata i32* %numFinalEdges, metadata !4372, metadata !DIExpression()), !dbg !4373
  %186 = load i32, i32* %numVerts, align 4, !dbg !4374
  %187 = load i32, i32* %gridSideEdges, align 4, !dbg !4375
  %188 = load i32, i32* %gridInternalEdges, align 4, !dbg !4376
  %add = add nsw i32 %187, %188, !dbg !4377
  %mul211 = mul nsw i32 %186, %add, !dbg !4378
  store i32 %mul211, i32* %numFinalEdges, align 4, !dbg !4373
  call void @llvm.dbg.declare(metadata i32* %origIndex, metadata !4379, metadata !DIExpression()), !dbg !4380
  %189 = load %struct.CCGFace*, %struct.CCGFace** %f205, align 8, !dbg !4381
  %call212 = call i8* @ccgSubSurf_getFaceFaceHandle(%struct.CCGFace* %189), !dbg !4381
  %190 = ptrtoint i8* %call212 to i64, !dbg !4381
  %conv213 = trunc i64 %190 to i32, !dbg !4381
  store i32 %conv213, i32* %origIndex, align 4, !dbg !4380
  call void @llvm.dbg.declare(metadata i32* %g2_wid, metadata !4382, metadata !DIExpression()), !dbg !4383
  %191 = load i32, i32* %gridCuts, align 4, !dbg !4384
  %add214 = add nsw i32 %191, 2, !dbg !4385
  store i32 %add214, i32* %g2_wid, align 4, !dbg !4383
  call void @llvm.dbg.declare(metadata float** %w, metadata !4386, metadata !DIExpression()), !dbg !4387
  call void @llvm.dbg.declare(metadata float** %w2, metadata !4388, metadata !DIExpression()), !dbg !4389
  call void @llvm.dbg.declare(metadata i32* %s, metadata !4390, metadata !DIExpression()), !dbg !4391
  call void @llvm.dbg.declare(metadata i32* %x, metadata !4392, metadata !DIExpression()), !dbg !4393
  call void @llvm.dbg.declare(metadata i32* %y, metadata !4394, metadata !DIExpression()), !dbg !4395
  %192 = load i32, i32* %numVerts, align 4, !dbg !4396
  %193 = zext i32 %192 to i64, !dbg !4397
  %194 = call i8* @llvm.stacksave(), !dbg !4397
  store i8* %194, i8** %saved_stack, align 8, !dbg !4397
  %vla = alloca i32, i64 %193, align 16, !dbg !4397
  store i64 %193, i64* %__vla_expr0, align 8, !dbg !4397
  call void @llvm.dbg.declare(metadata i64* %__vla_expr0, metadata !4398, metadata !DIExpression()), !dbg !4399
  call void @llvm.dbg.declare(metadata i32* %vla, metadata !4400, metadata !DIExpression()), !dbg !4404
  %195 = load i32, i32* %numVerts, align 4, !dbg !4405
  %196 = zext i32 %195 to i64, !dbg !4397
  %vla215 = alloca i32, i64 %196, align 16, !dbg !4397
  store i64 %196, i64* %__vla_expr1, align 8, !dbg !4397
  call void @llvm.dbg.declare(metadata i64* %__vla_expr1, metadata !4406, metadata !DIExpression()), !dbg !4399
  call void @llvm.dbg.declare(metadata i32* %vla215, metadata !4407, metadata !DIExpression()), !dbg !4411
  %197 = load i32, i32* %gridCuts, align 4, !dbg !4412
  %198 = load i32, i32* %numVerts, align 4, !dbg !4413
  %call216 = call float* @get_ss_weights(%struct.WeightTable* %wtable, i32 %197, i32 %198), !dbg !4414
  store float* %call216, float** %w, align 8, !dbg !4415
  %199 = load i32, i32* %vertNum, align 4, !dbg !4416
  %200 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4417
  %faceMap217 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %200, i32 0, i32 7, !dbg !4418
  %201 = load %struct.anon.1*, %struct.anon.1** %faceMap217, align 8, !dbg !4418
  %202 = load i32, i32* %index, align 4, !dbg !4419
  %idxprom218 = sext i32 %202 to i64, !dbg !4417
  %arrayidx219 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %201, i64 %idxprom218, !dbg !4417
  %startVert = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx219, i32 0, i32 0, !dbg !4420
  store i32 %199, i32* %startVert, align 8, !dbg !4421
  %203 = load i32, i32* %edgeNum, align 4, !dbg !4422
  %204 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4423
  %faceMap220 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %204, i32 0, i32 7, !dbg !4424
  %205 = load %struct.anon.1*, %struct.anon.1** %faceMap220, align 8, !dbg !4424
  %206 = load i32, i32* %index, align 4, !dbg !4425
  %idxprom221 = sext i32 %206 to i64, !dbg !4423
  %arrayidx222 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %205, i64 %idxprom221, !dbg !4423
  %startEdge = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx222, i32 0, i32 1, !dbg !4426
  store i32 %203, i32* %startEdge, align 4, !dbg !4427
  %207 = load i32, i32* %faceNum, align 4, !dbg !4428
  %208 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4429
  %faceMap223 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %208, i32 0, i32 7, !dbg !4430
  %209 = load %struct.anon.1*, %struct.anon.1** %faceMap223, align 8, !dbg !4430
  %210 = load i32, i32* %index, align 4, !dbg !4431
  %idxprom224 = sext i32 %210 to i64, !dbg !4429
  %arrayidx225 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %209, i64 %idxprom224, !dbg !4429
  %startFace = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx225, i32 0, i32 2, !dbg !4432
  store i32 %207, i32* %startFace, align 8, !dbg !4433
  %211 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !4434
  %tobool226 = icmp ne %struct.MPoly* %211, null, !dbg !4434
  br i1 %tobool226, label %cond.true, label %cond.false, !dbg !4434

cond.true:                                        ; preds = %for.body204
  %212 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !4435
  %213 = load i32, i32* %origIndex, align 4, !dbg !4436
  %idxprom227 = sext i32 %213 to i64, !dbg !4435
  %arrayidx228 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %212, i64 %idxprom227, !dbg !4435
  %flag = getelementptr inbounds %struct.MPoly, %struct.MPoly* %arrayidx228, i32 0, i32 3, !dbg !4437
  %214 = load i8, i8* %flag, align 2, !dbg !4437
  %conv229 = zext i8 %214 to i32, !dbg !4435
  br label %cond.end, !dbg !4434

cond.false:                                       ; preds = %for.body204
  br label %cond.end, !dbg !4434

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond230 = phi i32 [ %conv229, %cond.true ], [ 0, %cond.false ], !dbg !4434
  %conv231 = trunc i32 %cond230 to i8, !dbg !4434
  %215 = load %struct.DMFlagMat*, %struct.DMFlagMat** %faceFlags, align 8, !dbg !4438
  %flag232 = getelementptr inbounds %struct.DMFlagMat, %struct.DMFlagMat* %215, i32 0, i32 1, !dbg !4439
  store i8 %conv231, i8* %flag232, align 2, !dbg !4440
  %216 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !4441
  %tobool233 = icmp ne %struct.MPoly* %216, null, !dbg !4441
  br i1 %tobool233, label %cond.true234, label %cond.false238, !dbg !4441

cond.true234:                                     ; preds = %cond.end
  %217 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !4442
  %218 = load i32, i32* %origIndex, align 4, !dbg !4443
  %idxprom235 = sext i32 %218 to i64, !dbg !4442
  %arrayidx236 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %217, i64 %idxprom235, !dbg !4442
  %mat_nr = getelementptr inbounds %struct.MPoly, %struct.MPoly* %arrayidx236, i32 0, i32 2, !dbg !4444
  %219 = load i16, i16* %mat_nr, align 4, !dbg !4444
  %conv237 = sext i16 %219 to i32, !dbg !4442
  br label %cond.end239, !dbg !4441

cond.false238:                                    ; preds = %cond.end
  br label %cond.end239, !dbg !4441

cond.end239:                                      ; preds = %cond.false238, %cond.true234
  %cond240 = phi i32 [ %conv237, %cond.true234 ], [ 0, %cond.false238 ], !dbg !4441
  %conv241 = trunc i32 %cond240 to i16, !dbg !4441
  %220 = load %struct.DMFlagMat*, %struct.DMFlagMat** %faceFlags, align 8, !dbg !4445
  %mat_nr242 = getelementptr inbounds %struct.DMFlagMat, %struct.DMFlagMat* %220, i32 0, i32 0, !dbg !4446
  store i16 %conv241, i16* %mat_nr242, align 2, !dbg !4447
  %221 = load %struct.DMFlagMat*, %struct.DMFlagMat** %faceFlags, align 8, !dbg !4448
  %incdec.ptr = getelementptr inbounds %struct.DMFlagMat, %struct.DMFlagMat* %221, i32 1, !dbg !4448
  store %struct.DMFlagMat* %incdec.ptr, %struct.DMFlagMat** %faceFlags, align 8, !dbg !4448
  %222 = load i32, i32* %vertNum, align 4, !dbg !4449
  %223 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !4450
  %224 = load %struct.CCGFace*, %struct.CCGFace** %f205, align 8, !dbg !4451
  %call243 = call i8* @ccgSubSurf_getFaceUserData(%struct.CCGSubSurf* %223, %struct.CCGFace* %224), !dbg !4452
  %225 = bitcast i8* %call243 to i32*, !dbg !4453
  store i32 %222, i32* %225, align 4, !dbg !4454
  store i32 0, i32* %s, align 4, !dbg !4455
  br label %for.cond244, !dbg !4457

for.cond244:                                      ; preds = %for.inc250, %cond.end239
  %226 = load i32, i32* %s, align 4, !dbg !4458
  %227 = load i32, i32* %numVerts, align 4, !dbg !4460
  %cmp245 = icmp slt i32 %226, %227, !dbg !4461
  br i1 %cmp245, label %for.body247, label %for.end252, !dbg !4462

for.body247:                                      ; preds = %for.cond244
  %228 = load i32, i32* %loopindex, align 4, !dbg !4463
  %inc = add nsw i32 %228, 1, !dbg !4463
  store i32 %inc, i32* %loopindex, align 4, !dbg !4463
  %229 = load i32, i32* %s, align 4, !dbg !4465
  %idxprom248 = sext i32 %229 to i64, !dbg !4466
  %arrayidx249 = getelementptr inbounds i32, i32* %vla, i64 %idxprom248, !dbg !4466
  store i32 %228, i32* %arrayidx249, align 4, !dbg !4467
  br label %for.inc250, !dbg !4468

for.inc250:                                       ; preds = %for.body247
  %230 = load i32, i32* %s, align 4, !dbg !4469
  %inc251 = add nsw i32 %230, 1, !dbg !4469
  store i32 %inc251, i32* %s, align 4, !dbg !4469
  br label %for.cond244, !dbg !4470, !llvm.loop !4471

for.end252:                                       ; preds = %for.cond244
  store i32 0, i32* %s, align 4, !dbg !4473
  br label %for.cond253, !dbg !4475

for.cond253:                                      ; preds = %for.inc263, %for.end252
  %231 = load i32, i32* %s, align 4, !dbg !4476
  %232 = load i32, i32* %numVerts, align 4, !dbg !4478
  %cmp254 = icmp slt i32 %231, %232, !dbg !4479
  br i1 %cmp254, label %for.body256, label %for.end265, !dbg !4480

for.body256:                                      ; preds = %for.cond253
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v257, metadata !4481, metadata !DIExpression()), !dbg !4483
  %233 = load %struct.CCGFace*, %struct.CCGFace** %f205, align 8, !dbg !4484
  %234 = load i32, i32* %s, align 4, !dbg !4485
  %call258 = call %struct.CCGVert* @ccgSubSurf_getFaceVert(%struct.CCGFace* %233, i32 %234), !dbg !4486
  store %struct.CCGVert* %call258, %struct.CCGVert** %v257, align 8, !dbg !4483
  %235 = load %struct.CCGVert*, %struct.CCGVert** %v257, align 8, !dbg !4487
  %call259 = call i8* @ccgSubSurf_getVertVertHandle(%struct.CCGVert* %235), !dbg !4487
  %236 = ptrtoint i8* %call259 to i64, !dbg !4487
  %conv260 = trunc i64 %236 to i32, !dbg !4487
  %237 = load i32, i32* %s, align 4, !dbg !4488
  %idxprom261 = sext i32 %237 to i64, !dbg !4489
  %arrayidx262 = getelementptr inbounds i32, i32* %vla215, i64 %idxprom261, !dbg !4489
  store i32 %conv260, i32* %arrayidx262, align 4, !dbg !4490
  br label %for.inc263, !dbg !4491

for.inc263:                                       ; preds = %for.body256
  %238 = load i32, i32* %s, align 4, !dbg !4492
  %inc264 = add nsw i32 %238, 1, !dbg !4492
  store i32 %inc264, i32* %s, align 4, !dbg !4492
  br label %for.cond253, !dbg !4493, !llvm.loop !4494

for.end265:                                       ; preds = %for.cond253
  %239 = load float*, float** %w, align 8, !dbg !4496
  store float* %239, float** %w2, align 8, !dbg !4497
  %240 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4498
  %241 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4499
  %dm266 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %241, i32 0, i32 0, !dbg !4500
  %242 = load float*, float** %w2, align 8, !dbg !4501
  %243 = load i32, i32* %numVerts, align 4, !dbg !4502
  %244 = load i32, i32* %vertNum, align 4, !dbg !4503
  call void @DM_interp_vert_data(%struct.DerivedMesh* %240, %struct.DerivedMesh* %dm266, i32* %vla215, float* %242, i32 %243, i32 %244), !dbg !4504
  %245 = load i32*, i32** %vertOrigIndex, align 8, !dbg !4505
  %tobool267 = icmp ne i32* %245, null, !dbg !4505
  br i1 %tobool267, label %if.then268, label %if.end270, !dbg !4507

if.then268:                                       ; preds = %for.end265
  %246 = load i32*, i32** %vertOrigIndex, align 8, !dbg !4508
  store i32 -1, i32* %246, align 4, !dbg !4510
  %247 = load i32*, i32** %vertOrigIndex, align 8, !dbg !4511
  %incdec.ptr269 = getelementptr inbounds i32, i32* %247, i32 1, !dbg !4511
  store i32* %incdec.ptr269, i32** %vertOrigIndex, align 8, !dbg !4511
  br label %if.end270, !dbg !4512

if.end270:                                        ; preds = %if.then268, %for.end265
  %248 = load i32, i32* %vertNum, align 4, !dbg !4513
  %inc271 = add nsw i32 %248, 1, !dbg !4513
  store i32 %inc271, i32* %vertNum, align 4, !dbg !4513
  store i32 0, i32* %s, align 4, !dbg !4514
  br label %for.cond272, !dbg !4516

for.cond272:                                      ; preds = %for.inc295, %if.end270
  %249 = load i32, i32* %s, align 4, !dbg !4517
  %250 = load i32, i32* %numVerts, align 4, !dbg !4519
  %cmp273 = icmp slt i32 %249, %250, !dbg !4520
  br i1 %cmp273, label %for.body275, label %for.end297, !dbg !4521

for.body275:                                      ; preds = %for.cond272
  store i32 1, i32* %x, align 4, !dbg !4522
  br label %for.cond276, !dbg !4525

for.cond276:                                      ; preds = %for.inc292, %for.body275
  %251 = load i32, i32* %x, align 4, !dbg !4526
  %252 = load i32, i32* %gridFaces, align 4, !dbg !4528
  %cmp277 = icmp slt i32 %251, %252, !dbg !4529
  br i1 %cmp277, label %for.body279, label %for.end294, !dbg !4530

for.body279:                                      ; preds = %for.cond276
  %253 = load float*, float** %w, align 8, !dbg !4531
  %254 = load i32, i32* %s, align 4, !dbg !4533
  %255 = load i32, i32* %numVerts, align 4, !dbg !4534
  %mul280 = mul nsw i32 %254, %255, !dbg !4535
  %256 = load i32, i32* %g2_wid, align 4, !dbg !4536
  %mul281 = mul nsw i32 %mul280, %256, !dbg !4537
  %257 = load i32, i32* %g2_wid, align 4, !dbg !4538
  %mul282 = mul nsw i32 %mul281, %257, !dbg !4539
  %idx.ext = sext i32 %mul282 to i64, !dbg !4540
  %add.ptr = getelementptr inbounds float, float* %253, i64 %idx.ext, !dbg !4540
  %258 = load i32, i32* %x, align 4, !dbg !4541
  %259 = load i32, i32* %numVerts, align 4, !dbg !4542
  %mul283 = mul nsw i32 %258, %259, !dbg !4543
  %idx.ext284 = sext i32 %mul283 to i64, !dbg !4544
  %add.ptr285 = getelementptr inbounds float, float* %add.ptr, i64 %idx.ext284, !dbg !4544
  store float* %add.ptr285, float** %w2, align 8, !dbg !4545
  %260 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4546
  %261 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4547
  %dm286 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %261, i32 0, i32 0, !dbg !4548
  %262 = load float*, float** %w2, align 8, !dbg !4549
  %263 = load i32, i32* %numVerts, align 4, !dbg !4550
  %264 = load i32, i32* %vertNum, align 4, !dbg !4551
  call void @DM_interp_vert_data(%struct.DerivedMesh* %260, %struct.DerivedMesh* %dm286, i32* %vla215, float* %262, i32 %263, i32 %264), !dbg !4552
  %265 = load i32*, i32** %vertOrigIndex, align 8, !dbg !4553
  %tobool287 = icmp ne i32* %265, null, !dbg !4553
  br i1 %tobool287, label %if.then288, label %if.end290, !dbg !4555

if.then288:                                       ; preds = %for.body279
  %266 = load i32*, i32** %vertOrigIndex, align 8, !dbg !4556
  store i32 -1, i32* %266, align 4, !dbg !4558
  %267 = load i32*, i32** %vertOrigIndex, align 8, !dbg !4559
  %incdec.ptr289 = getelementptr inbounds i32, i32* %267, i32 1, !dbg !4559
  store i32* %incdec.ptr289, i32** %vertOrigIndex, align 8, !dbg !4559
  br label %if.end290, !dbg !4560

if.end290:                                        ; preds = %if.then288, %for.body279
  %268 = load i32, i32* %vertNum, align 4, !dbg !4561
  %inc291 = add nsw i32 %268, 1, !dbg !4561
  store i32 %inc291, i32* %vertNum, align 4, !dbg !4561
  br label %for.inc292, !dbg !4562

for.inc292:                                       ; preds = %if.end290
  %269 = load i32, i32* %x, align 4, !dbg !4563
  %inc293 = add nsw i32 %269, 1, !dbg !4563
  store i32 %inc293, i32* %x, align 4, !dbg !4563
  br label %for.cond276, !dbg !4564, !llvm.loop !4565

for.end294:                                       ; preds = %for.cond276
  br label %for.inc295, !dbg !4567

for.inc295:                                       ; preds = %for.end294
  %270 = load i32, i32* %s, align 4, !dbg !4568
  %inc296 = add nsw i32 %270, 1, !dbg !4568
  store i32 %inc296, i32* %s, align 4, !dbg !4568
  br label %for.cond272, !dbg !4569, !llvm.loop !4570

for.end297:                                       ; preds = %for.cond272
  store i32 0, i32* %s, align 4, !dbg !4572
  br label %for.cond298, !dbg !4574

for.cond298:                                      ; preds = %for.inc332, %for.end297
  %271 = load i32, i32* %s, align 4, !dbg !4575
  %272 = load i32, i32* %numVerts, align 4, !dbg !4577
  %cmp299 = icmp slt i32 %271, %272, !dbg !4578
  br i1 %cmp299, label %for.body301, label %for.end334, !dbg !4579

for.body301:                                      ; preds = %for.cond298
  store i32 1, i32* %y, align 4, !dbg !4580
  br label %for.cond302, !dbg !4583

for.cond302:                                      ; preds = %for.inc329, %for.body301
  %273 = load i32, i32* %y, align 4, !dbg !4584
  %274 = load i32, i32* %gridFaces, align 4, !dbg !4586
  %cmp303 = icmp slt i32 %273, %274, !dbg !4587
  br i1 %cmp303, label %for.body305, label %for.end331, !dbg !4588

for.body305:                                      ; preds = %for.cond302
  store i32 1, i32* %x, align 4, !dbg !4589
  br label %for.cond306, !dbg !4592

for.cond306:                                      ; preds = %for.inc326, %for.body305
  %275 = load i32, i32* %x, align 4, !dbg !4593
  %276 = load i32, i32* %gridFaces, align 4, !dbg !4595
  %cmp307 = icmp slt i32 %275, %276, !dbg !4596
  br i1 %cmp307, label %for.body309, label %for.end328, !dbg !4597

for.body309:                                      ; preds = %for.cond306
  %277 = load float*, float** %w, align 8, !dbg !4598
  %278 = load i32, i32* %s, align 4, !dbg !4600
  %279 = load i32, i32* %numVerts, align 4, !dbg !4601
  %mul310 = mul nsw i32 %278, %279, !dbg !4602
  %280 = load i32, i32* %g2_wid, align 4, !dbg !4603
  %mul311 = mul nsw i32 %mul310, %280, !dbg !4604
  %281 = load i32, i32* %g2_wid, align 4, !dbg !4605
  %mul312 = mul nsw i32 %mul311, %281, !dbg !4606
  %idx.ext313 = sext i32 %mul312 to i64, !dbg !4607
  %add.ptr314 = getelementptr inbounds float, float* %277, i64 %idx.ext313, !dbg !4607
  %282 = load i32, i32* %y, align 4, !dbg !4608
  %283 = load i32, i32* %g2_wid, align 4, !dbg !4609
  %mul315 = mul nsw i32 %282, %283, !dbg !4610
  %284 = load i32, i32* %x, align 4, !dbg !4611
  %add316 = add nsw i32 %mul315, %284, !dbg !4612
  %285 = load i32, i32* %numVerts, align 4, !dbg !4613
  %mul317 = mul nsw i32 %add316, %285, !dbg !4614
  %idx.ext318 = sext i32 %mul317 to i64, !dbg !4615
  %add.ptr319 = getelementptr inbounds float, float* %add.ptr314, i64 %idx.ext318, !dbg !4615
  store float* %add.ptr319, float** %w2, align 8, !dbg !4616
  %286 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4617
  %287 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4618
  %dm320 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %287, i32 0, i32 0, !dbg !4619
  %288 = load float*, float** %w2, align 8, !dbg !4620
  %289 = load i32, i32* %numVerts, align 4, !dbg !4621
  %290 = load i32, i32* %vertNum, align 4, !dbg !4622
  call void @DM_interp_vert_data(%struct.DerivedMesh* %286, %struct.DerivedMesh* %dm320, i32* %vla215, float* %288, i32 %289, i32 %290), !dbg !4623
  %291 = load i32*, i32** %vertOrigIndex, align 8, !dbg !4624
  %tobool321 = icmp ne i32* %291, null, !dbg !4624
  br i1 %tobool321, label %if.then322, label %if.end324, !dbg !4626

if.then322:                                       ; preds = %for.body309
  %292 = load i32*, i32** %vertOrigIndex, align 8, !dbg !4627
  store i32 -1, i32* %292, align 4, !dbg !4629
  %293 = load i32*, i32** %vertOrigIndex, align 8, !dbg !4630
  %incdec.ptr323 = getelementptr inbounds i32, i32* %293, i32 1, !dbg !4630
  store i32* %incdec.ptr323, i32** %vertOrigIndex, align 8, !dbg !4630
  br label %if.end324, !dbg !4631

if.end324:                                        ; preds = %if.then322, %for.body309
  %294 = load i32, i32* %vertNum, align 4, !dbg !4632
  %inc325 = add nsw i32 %294, 1, !dbg !4632
  store i32 %inc325, i32* %vertNum, align 4, !dbg !4632
  br label %for.inc326, !dbg !4633

for.inc326:                                       ; preds = %if.end324
  %295 = load i32, i32* %x, align 4, !dbg !4634
  %inc327 = add nsw i32 %295, 1, !dbg !4634
  store i32 %inc327, i32* %x, align 4, !dbg !4634
  br label %for.cond306, !dbg !4635, !llvm.loop !4636

for.end328:                                       ; preds = %for.cond306
  br label %for.inc329, !dbg !4638

for.inc329:                                       ; preds = %for.end328
  %296 = load i32, i32* %y, align 4, !dbg !4639
  %inc330 = add nsw i32 %296, 1, !dbg !4639
  store i32 %inc330, i32* %y, align 4, !dbg !4639
  br label %for.cond302, !dbg !4640, !llvm.loop !4641

for.end331:                                       ; preds = %for.cond302
  br label %for.inc332, !dbg !4643

for.inc332:                                       ; preds = %for.end331
  %297 = load i32, i32* %s, align 4, !dbg !4644
  %inc333 = add nsw i32 %297, 1, !dbg !4644
  store i32 %inc333, i32* %s, align 4, !dbg !4644
  br label %for.cond298, !dbg !4645, !llvm.loop !4646

for.end334:                                       ; preds = %for.cond298
  %298 = load i32*, i32** %edgeOrigIndex, align 8, !dbg !4648
  %tobool335 = icmp ne i32* %298, null, !dbg !4648
  br i1 %tobool335, label %if.then336, label %if.end347, !dbg !4650

if.then336:                                       ; preds = %for.end334
  store i32 0, i32* %i, align 4, !dbg !4651
  br label %for.cond337, !dbg !4654

for.cond337:                                      ; preds = %for.inc344, %if.then336
  %299 = load i32, i32* %i, align 4, !dbg !4655
  %300 = load i32, i32* %numFinalEdges, align 4, !dbg !4657
  %cmp338 = icmp slt i32 %299, %300, !dbg !4658
  br i1 %cmp338, label %for.body340, label %for.end346, !dbg !4659

for.body340:                                      ; preds = %for.cond337
  %301 = load i32*, i32** %edgeOrigIndex, align 8, !dbg !4660
  %302 = load i32, i32* %edgeNum, align 4, !dbg !4662
  %303 = load i32, i32* %i, align 4, !dbg !4663
  %add341 = add nsw i32 %302, %303, !dbg !4664
  %idxprom342 = sext i32 %add341 to i64, !dbg !4660
  %arrayidx343 = getelementptr inbounds i32, i32* %301, i64 %idxprom342, !dbg !4660
  store i32 -1, i32* %arrayidx343, align 4, !dbg !4665
  br label %for.inc344, !dbg !4666

for.inc344:                                       ; preds = %for.body340
  %304 = load i32, i32* %i, align 4, !dbg !4667
  %inc345 = add nsw i32 %304, 1, !dbg !4667
  store i32 %inc345, i32* %i, align 4, !dbg !4667
  br label %for.cond337, !dbg !4668, !llvm.loop !4669

for.end346:                                       ; preds = %for.cond337
  br label %if.end347, !dbg !4671

if.end347:                                        ; preds = %for.end346, %for.end334
  store i32 0, i32* %s, align 4, !dbg !4672
  br label %for.cond348, !dbg !4674

for.cond348:                                      ; preds = %for.inc457, %if.end347
  %305 = load i32, i32* %s, align 4, !dbg !4675
  %306 = load i32, i32* %numVerts, align 4, !dbg !4677
  %cmp349 = icmp slt i32 %305, %306, !dbg !4678
  br i1 %cmp349, label %for.body351, label %for.end459, !dbg !4679

for.body351:                                      ; preds = %for.cond348
  store i32 0, i32* %y, align 4, !dbg !4680
  br label %for.cond352, !dbg !4683

for.cond352:                                      ; preds = %for.inc454, %for.body351
  %307 = load i32, i32* %y, align 4, !dbg !4684
  %308 = load i32, i32* %gridFaces, align 4, !dbg !4686
  %cmp353 = icmp slt i32 %307, %308, !dbg !4687
  br i1 %cmp353, label %for.body355, label %for.end456, !dbg !4688

for.body355:                                      ; preds = %for.cond352
  store i32 0, i32* %x, align 4, !dbg !4689
  br label %for.cond356, !dbg !4692

for.cond356:                                      ; preds = %for.inc451, %for.body355
  %309 = load i32, i32* %x, align 4, !dbg !4693
  %310 = load i32, i32* %gridFaces, align 4, !dbg !4695
  %cmp357 = icmp slt i32 %309, %310, !dbg !4696
  br i1 %cmp357, label %for.body359, label %for.end453, !dbg !4697

for.body359:                                      ; preds = %for.cond356
  %311 = load float*, float** %w, align 8, !dbg !4698
  %312 = load i32, i32* %s, align 4, !dbg !4700
  %313 = load i32, i32* %numVerts, align 4, !dbg !4701
  %mul360 = mul nsw i32 %312, %313, !dbg !4702
  %314 = load i32, i32* %g2_wid, align 4, !dbg !4703
  %mul361 = mul nsw i32 %mul360, %314, !dbg !4704
  %315 = load i32, i32* %g2_wid, align 4, !dbg !4705
  %mul362 = mul nsw i32 %mul361, %315, !dbg !4706
  %idx.ext363 = sext i32 %mul362 to i64, !dbg !4707
  %add.ptr364 = getelementptr inbounds float, float* %311, i64 %idx.ext363, !dbg !4707
  %316 = load i32, i32* %y, align 4, !dbg !4708
  %317 = load i32, i32* %g2_wid, align 4, !dbg !4709
  %mul365 = mul nsw i32 %316, %317, !dbg !4710
  %318 = load i32, i32* %x, align 4, !dbg !4711
  %add366 = add nsw i32 %mul365, %318, !dbg !4712
  %319 = load i32, i32* %numVerts, align 4, !dbg !4713
  %mul367 = mul nsw i32 %add366, %319, !dbg !4714
  %idx.ext368 = sext i32 %mul367 to i64, !dbg !4715
  %add.ptr369 = getelementptr inbounds float, float* %add.ptr364, i64 %idx.ext368, !dbg !4715
  store float* %add.ptr369, float** %w2, align 8, !dbg !4716
  %320 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4717
  %loopData370 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %320, i32 0, i32 3, !dbg !4718
  %321 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4719
  %dm371 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %321, i32 0, i32 0, !dbg !4720
  %loopData372 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm371, i32 0, i32 3, !dbg !4721
  %322 = load float*, float** %w2, align 8, !dbg !4722
  %323 = load i32, i32* %numVerts, align 4, !dbg !4723
  %324 = load i32, i32* %loopindex2, align 4, !dbg !4724
  call void @CustomData_interp(%struct.CustomData* %loopData370, %struct.CustomData* %loopData372, i32* %vla, float* %322, float* null, i32 %323, i32 %324), !dbg !4725
  %325 = load i32, i32* %loopindex2, align 4, !dbg !4726
  %inc373 = add nsw i32 %325, 1, !dbg !4726
  store i32 %inc373, i32* %loopindex2, align 4, !dbg !4726
  %326 = load float*, float** %w, align 8, !dbg !4727
  %327 = load i32, i32* %s, align 4, !dbg !4728
  %328 = load i32, i32* %numVerts, align 4, !dbg !4729
  %mul374 = mul nsw i32 %327, %328, !dbg !4730
  %329 = load i32, i32* %g2_wid, align 4, !dbg !4731
  %mul375 = mul nsw i32 %mul374, %329, !dbg !4732
  %330 = load i32, i32* %g2_wid, align 4, !dbg !4733
  %mul376 = mul nsw i32 %mul375, %330, !dbg !4734
  %idx.ext377 = sext i32 %mul376 to i64, !dbg !4735
  %add.ptr378 = getelementptr inbounds float, float* %326, i64 %idx.ext377, !dbg !4735
  %331 = load i32, i32* %y, align 4, !dbg !4736
  %add379 = add nsw i32 %331, 1, !dbg !4737
  %332 = load i32, i32* %g2_wid, align 4, !dbg !4738
  %mul380 = mul nsw i32 %add379, %332, !dbg !4739
  %333 = load i32, i32* %x, align 4, !dbg !4740
  %add381 = add nsw i32 %mul380, %333, !dbg !4741
  %334 = load i32, i32* %numVerts, align 4, !dbg !4742
  %mul382 = mul nsw i32 %add381, %334, !dbg !4743
  %idx.ext383 = sext i32 %mul382 to i64, !dbg !4744
  %add.ptr384 = getelementptr inbounds float, float* %add.ptr378, i64 %idx.ext383, !dbg !4744
  store float* %add.ptr384, float** %w2, align 8, !dbg !4745
  %335 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4746
  %loopData385 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %335, i32 0, i32 3, !dbg !4747
  %336 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4748
  %dm386 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %336, i32 0, i32 0, !dbg !4749
  %loopData387 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm386, i32 0, i32 3, !dbg !4750
  %337 = load float*, float** %w2, align 8, !dbg !4751
  %338 = load i32, i32* %numVerts, align 4, !dbg !4752
  %339 = load i32, i32* %loopindex2, align 4, !dbg !4753
  call void @CustomData_interp(%struct.CustomData* %loopData385, %struct.CustomData* %loopData387, i32* %vla, float* %337, float* null, i32 %338, i32 %339), !dbg !4754
  %340 = load i32, i32* %loopindex2, align 4, !dbg !4755
  %inc388 = add nsw i32 %340, 1, !dbg !4755
  store i32 %inc388, i32* %loopindex2, align 4, !dbg !4755
  %341 = load float*, float** %w, align 8, !dbg !4756
  %342 = load i32, i32* %s, align 4, !dbg !4757
  %343 = load i32, i32* %numVerts, align 4, !dbg !4758
  %mul389 = mul nsw i32 %342, %343, !dbg !4759
  %344 = load i32, i32* %g2_wid, align 4, !dbg !4760
  %mul390 = mul nsw i32 %mul389, %344, !dbg !4761
  %345 = load i32, i32* %g2_wid, align 4, !dbg !4762
  %mul391 = mul nsw i32 %mul390, %345, !dbg !4763
  %idx.ext392 = sext i32 %mul391 to i64, !dbg !4764
  %add.ptr393 = getelementptr inbounds float, float* %341, i64 %idx.ext392, !dbg !4764
  %346 = load i32, i32* %y, align 4, !dbg !4765
  %add394 = add nsw i32 %346, 1, !dbg !4766
  %347 = load i32, i32* %g2_wid, align 4, !dbg !4767
  %mul395 = mul nsw i32 %add394, %347, !dbg !4768
  %348 = load i32, i32* %x, align 4, !dbg !4769
  %add396 = add nsw i32 %348, 1, !dbg !4770
  %add397 = add nsw i32 %mul395, %add396, !dbg !4771
  %349 = load i32, i32* %numVerts, align 4, !dbg !4772
  %mul398 = mul nsw i32 %add397, %349, !dbg !4773
  %idx.ext399 = sext i32 %mul398 to i64, !dbg !4774
  %add.ptr400 = getelementptr inbounds float, float* %add.ptr393, i64 %idx.ext399, !dbg !4774
  store float* %add.ptr400, float** %w2, align 8, !dbg !4775
  %350 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4776
  %loopData401 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %350, i32 0, i32 3, !dbg !4777
  %351 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4778
  %dm402 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %351, i32 0, i32 0, !dbg !4779
  %loopData403 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm402, i32 0, i32 3, !dbg !4780
  %352 = load float*, float** %w2, align 8, !dbg !4781
  %353 = load i32, i32* %numVerts, align 4, !dbg !4782
  %354 = load i32, i32* %loopindex2, align 4, !dbg !4783
  call void @CustomData_interp(%struct.CustomData* %loopData401, %struct.CustomData* %loopData403, i32* %vla, float* %352, float* null, i32 %353, i32 %354), !dbg !4784
  %355 = load i32, i32* %loopindex2, align 4, !dbg !4785
  %inc404 = add nsw i32 %355, 1, !dbg !4785
  store i32 %inc404, i32* %loopindex2, align 4, !dbg !4785
  %356 = load float*, float** %w, align 8, !dbg !4786
  %357 = load i32, i32* %s, align 4, !dbg !4787
  %358 = load i32, i32* %numVerts, align 4, !dbg !4788
  %mul405 = mul nsw i32 %357, %358, !dbg !4789
  %359 = load i32, i32* %g2_wid, align 4, !dbg !4790
  %mul406 = mul nsw i32 %mul405, %359, !dbg !4791
  %360 = load i32, i32* %g2_wid, align 4, !dbg !4792
  %mul407 = mul nsw i32 %mul406, %360, !dbg !4793
  %idx.ext408 = sext i32 %mul407 to i64, !dbg !4794
  %add.ptr409 = getelementptr inbounds float, float* %356, i64 %idx.ext408, !dbg !4794
  %361 = load i32, i32* %y, align 4, !dbg !4795
  %362 = load i32, i32* %g2_wid, align 4, !dbg !4796
  %mul410 = mul nsw i32 %361, %362, !dbg !4797
  %363 = load i32, i32* %x, align 4, !dbg !4798
  %add411 = add nsw i32 %363, 1, !dbg !4799
  %add412 = add nsw i32 %mul410, %add411, !dbg !4800
  %364 = load i32, i32* %numVerts, align 4, !dbg !4801
  %mul413 = mul nsw i32 %add412, %364, !dbg !4802
  %idx.ext414 = sext i32 %mul413 to i64, !dbg !4803
  %add.ptr415 = getelementptr inbounds float, float* %add.ptr409, i64 %idx.ext414, !dbg !4803
  store float* %add.ptr415, float** %w2, align 8, !dbg !4804
  %365 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4805
  %loopData416 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %365, i32 0, i32 3, !dbg !4806
  %366 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4807
  %dm417 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %366, i32 0, i32 0, !dbg !4808
  %loopData418 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm417, i32 0, i32 3, !dbg !4809
  %367 = load float*, float** %w2, align 8, !dbg !4810
  %368 = load i32, i32* %numVerts, align 4, !dbg !4811
  %369 = load i32, i32* %loopindex2, align 4, !dbg !4812
  call void @CustomData_interp(%struct.CustomData* %loopData416, %struct.CustomData* %loopData418, i32* %vla, float* %367, float* null, i32 %368, i32 %369), !dbg !4813
  %370 = load i32, i32* %loopindex2, align 4, !dbg !4814
  %inc419 = add nsw i32 %370, 1, !dbg !4814
  store i32 %inc419, i32* %loopindex2, align 4, !dbg !4814
  %371 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4815
  %polyData420 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %371, i32 0, i32 4, !dbg !4816
  %372 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4817
  %dm421 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %372, i32 0, i32 0, !dbg !4818
  %polyData422 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm421, i32 0, i32 4, !dbg !4819
  %373 = load i32, i32* %origIndex, align 4, !dbg !4820
  %374 = load i32, i32* %faceNum, align 4, !dbg !4821
  call void @CustomData_copy_data(%struct.CustomData* %polyData420, %struct.CustomData* %polyData422, i32 %373, i32 %374, i32 1), !dbg !4822
  %375 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4823
  %dm423 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %375, i32 0, i32 0, !dbg !4824
  %faceData424 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm423, i32 0, i32 2, !dbg !4825
  %376 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4826
  %dm425 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %376, i32 0, i32 0, !dbg !4827
  %loopData426 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm425, i32 0, i32 3, !dbg !4828
  %377 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4829
  %dm427 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %377, i32 0, i32 0, !dbg !4830
  %polyData428 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm427, i32 0, i32 4, !dbg !4831
  %378 = load i32, i32* %loopindex2, align 4, !dbg !4832
  %sub429 = sub nsw i32 %378, 4, !dbg !4833
  %379 = load i32, i32* %faceNum, align 4, !dbg !4834
  %380 = load i32, i32* %faceNum, align 4, !dbg !4835
  %381 = load i32, i32* %numTex, align 4, !dbg !4836
  %382 = load i32, i32* %numCol, align 4, !dbg !4837
  %383 = load i32, i32* %hasPCol, align 4, !dbg !4838
  %384 = load i32, i32* %hasOrigSpace, align 4, !dbg !4839
  call void @ccg_loops_to_corners(%struct.CustomData* %faceData424, %struct.CustomData* %loopData426, %struct.CustomData* %polyData428, i32 %sub429, i32 %379, i32 %380, i32 %381, i32 %382, i32 %383, i32 %384), !dbg !4840
  %385 = load i32*, i32** %faceOrigIndex, align 8, !dbg !4841
  %tobool430 = icmp ne i32* %385, null, !dbg !4841
  br i1 %tobool430, label %if.then431, label %if.end433, !dbg !4843

if.then431:                                       ; preds = %for.body359
  %386 = load i32, i32* %faceNum, align 4, !dbg !4844
  %387 = load i32*, i32** %faceOrigIndex, align 8, !dbg !4846
  store i32 %386, i32* %387, align 4, !dbg !4847
  %388 = load i32*, i32** %faceOrigIndex, align 8, !dbg !4848
  %incdec.ptr432 = getelementptr inbounds i32, i32* %388, i32 1, !dbg !4848
  store i32* %incdec.ptr432, i32** %faceOrigIndex, align 8, !dbg !4848
  br label %if.end433, !dbg !4849

if.end433:                                        ; preds = %if.then431, %for.body359
  %389 = load i32*, i32** %polyOrigIndex, align 8, !dbg !4850
  %tobool434 = icmp ne i32* %389, null, !dbg !4850
  br i1 %tobool434, label %if.then435, label %if.end444, !dbg !4852

if.then435:                                       ; preds = %if.end433
  %390 = load i32*, i32** %base_polyOrigIndex, align 8, !dbg !4853
  %tobool436 = icmp ne i32* %390, null, !dbg !4853
  br i1 %tobool436, label %cond.true437, label %cond.false440, !dbg !4853

cond.true437:                                     ; preds = %if.then435
  %391 = load i32*, i32** %base_polyOrigIndex, align 8, !dbg !4855
  %392 = load i32, i32* %origIndex, align 4, !dbg !4856
  %idxprom438 = sext i32 %392 to i64, !dbg !4855
  %arrayidx439 = getelementptr inbounds i32, i32* %391, i64 %idxprom438, !dbg !4855
  %393 = load i32, i32* %arrayidx439, align 4, !dbg !4855
  br label %cond.end441, !dbg !4853

cond.false440:                                    ; preds = %if.then435
  %394 = load i32, i32* %origIndex, align 4, !dbg !4857
  br label %cond.end441, !dbg !4853

cond.end441:                                      ; preds = %cond.false440, %cond.true437
  %cond442 = phi i32 [ %393, %cond.true437 ], [ %394, %cond.false440 ], !dbg !4853
  %395 = load i32*, i32** %polyOrigIndex, align 8, !dbg !4858
  store i32 %cond442, i32* %395, align 4, !dbg !4859
  %396 = load i32*, i32** %polyOrigIndex, align 8, !dbg !4860
  %incdec.ptr443 = getelementptr inbounds i32, i32* %396, i32 1, !dbg !4860
  store i32* %incdec.ptr443, i32** %polyOrigIndex, align 8, !dbg !4860
  br label %if.end444, !dbg !4861

if.end444:                                        ; preds = %cond.end441, %if.end433
  %397 = load i32, i32* %index, align 4, !dbg !4862
  %398 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4863
  %reverseFaceMap445 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %398, i32 0, i32 10, !dbg !4864
  %399 = load i32*, i32** %reverseFaceMap445, align 8, !dbg !4864
  %400 = load i32, i32* %faceNum, align 4, !dbg !4865
  %idxprom446 = sext i32 %400 to i64, !dbg !4863
  %arrayidx447 = getelementptr inbounds i32, i32* %399, i64 %idxprom446, !dbg !4863
  store i32 %397, i32* %arrayidx447, align 4, !dbg !4866
  %401 = load i32, i32* %faceNum, align 4, !dbg !4867
  %402 = load i32*, i32** %polyidx, align 8, !dbg !4868
  %403 = load i32, i32* %faceNum, align 4, !dbg !4869
  %idxprom448 = sext i32 %403 to i64, !dbg !4868
  %arrayidx449 = getelementptr inbounds i32, i32* %402, i64 %idxprom448, !dbg !4868
  store i32 %401, i32* %arrayidx449, align 4, !dbg !4870
  %404 = load i32, i32* %faceNum, align 4, !dbg !4871
  %inc450 = add nsw i32 %404, 1, !dbg !4871
  store i32 %inc450, i32* %faceNum, align 4, !dbg !4871
  br label %for.inc451, !dbg !4872

for.inc451:                                       ; preds = %if.end444
  %405 = load i32, i32* %x, align 4, !dbg !4873
  %inc452 = add nsw i32 %405, 1, !dbg !4873
  store i32 %inc452, i32* %x, align 4, !dbg !4873
  br label %for.cond356, !dbg !4874, !llvm.loop !4875

for.end453:                                       ; preds = %for.cond356
  br label %for.inc454, !dbg !4877

for.inc454:                                       ; preds = %for.end453
  %406 = load i32, i32* %y, align 4, !dbg !4878
  %inc455 = add nsw i32 %406, 1, !dbg !4878
  store i32 %inc455, i32* %y, align 4, !dbg !4878
  br label %for.cond352, !dbg !4879, !llvm.loop !4880

for.end456:                                       ; preds = %for.cond352
  br label %for.inc457, !dbg !4882

for.inc457:                                       ; preds = %for.end456
  %407 = load i32, i32* %s, align 4, !dbg !4883
  %inc458 = add nsw i32 %407, 1, !dbg !4883
  store i32 %inc458, i32* %s, align 4, !dbg !4883
  br label %for.cond348, !dbg !4884, !llvm.loop !4885

for.end459:                                       ; preds = %for.cond348
  %408 = load i32, i32* %numFinalEdges, align 4, !dbg !4887
  %409 = load i32, i32* %edgeNum, align 4, !dbg !4888
  %add460 = add nsw i32 %409, %408, !dbg !4888
  store i32 %add460, i32* %edgeNum, align 4, !dbg !4888
  %410 = load i8*, i8** %saved_stack, align 8, !dbg !4889
  call void @llvm.stackrestore(i8* %410), !dbg !4889
  br label %for.inc461, !dbg !4890

for.inc461:                                       ; preds = %for.end459
  %411 = load i32, i32* %index, align 4, !dbg !4891
  %inc462 = add nsw i32 %411, 1, !dbg !4891
  store i32 %inc462, i32* %index, align 4, !dbg !4891
  br label %for.cond201, !dbg !4892, !llvm.loop !4893

for.end463:                                       ; preds = %for.cond201
  store i32 0, i32* %index, align 4, !dbg !4895
  br label %for.cond464, !dbg !4897

for.cond464:                                      ; preds = %for.inc559, %for.end463
  %412 = load i32, i32* %index, align 4, !dbg !4898
  %413 = load i32, i32* %totedge, align 4, !dbg !4900
  %cmp465 = icmp slt i32 %412, %413, !dbg !4901
  br i1 %cmp465, label %for.body467, label %for.end561, !dbg !4902

for.body467:                                      ; preds = %for.cond464
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e468, metadata !4903, metadata !DIExpression()), !dbg !4905
  %414 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4906
  %edgeMap469 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %414, i32 0, i32 6, !dbg !4907
  %415 = load %struct.anon.0*, %struct.anon.0** %edgeMap469, align 8, !dbg !4907
  %416 = load i32, i32* %index, align 4, !dbg !4908
  %idxprom470 = sext i32 %416 to i64, !dbg !4906
  %arrayidx471 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %415, i64 %idxprom470, !dbg !4906
  %edge472 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx471, i32 0, i32 2, !dbg !4909
  %417 = load %struct.CCGEdge*, %struct.CCGEdge** %edge472, align 8, !dbg !4909
  store %struct.CCGEdge* %417, %struct.CCGEdge** %e468, align 8, !dbg !4905
  call void @llvm.dbg.declare(metadata i32* %numFinalEdges473, metadata !4910, metadata !DIExpression()), !dbg !4911
  %418 = load i32, i32* %edgeSize, align 4, !dbg !4912
  %sub474 = sub nsw i32 %418, 1, !dbg !4913
  store i32 %sub474, i32* %numFinalEdges473, align 4, !dbg !4911
  call void @llvm.dbg.declare(metadata i32* %mapIndex, metadata !4914, metadata !DIExpression()), !dbg !4915
  %419 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !4916
  %420 = load %struct.CCGEdge*, %struct.CCGEdge** %e468, align 8, !dbg !4917
  %call475 = call i32 @ccgDM_getEdgeMapIndex(%struct.CCGSubSurf* %419, %struct.CCGEdge* %420), !dbg !4918
  store i32 %call475, i32* %mapIndex, align 4, !dbg !4915
  call void @llvm.dbg.declare(metadata i32* %x476, metadata !4919, metadata !DIExpression()), !dbg !4920
  call void @llvm.dbg.declare(metadata [2 x i32]* %vertIdx, metadata !4921, metadata !DIExpression()), !dbg !4923
  call void @llvm.dbg.declare(metadata i32* %edgeIdx, metadata !4924, metadata !DIExpression()), !dbg !4925
  %421 = load %struct.CCGEdge*, %struct.CCGEdge** %e468, align 8, !dbg !4926
  %call477 = call i8* @ccgSubSurf_getEdgeEdgeHandle(%struct.CCGEdge* %421), !dbg !4926
  %422 = ptrtoint i8* %call477 to i64, !dbg !4926
  %conv478 = trunc i64 %422 to i32, !dbg !4926
  store i32 %conv478, i32* %edgeIdx, align 4, !dbg !4925
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v479, metadata !4927, metadata !DIExpression()), !dbg !4928
  %423 = load %struct.CCGEdge*, %struct.CCGEdge** %e468, align 8, !dbg !4929
  %call480 = call %struct.CCGVert* @ccgSubSurf_getEdgeVert0(%struct.CCGEdge* %423), !dbg !4930
  store %struct.CCGVert* %call480, %struct.CCGVert** %v479, align 8, !dbg !4931
  %424 = load %struct.CCGVert*, %struct.CCGVert** %v479, align 8, !dbg !4932
  %call481 = call i8* @ccgSubSurf_getVertVertHandle(%struct.CCGVert* %424), !dbg !4932
  %425 = ptrtoint i8* %call481 to i64, !dbg !4932
  %conv482 = trunc i64 %425 to i32, !dbg !4932
  %arrayidx483 = getelementptr inbounds [2 x i32], [2 x i32]* %vertIdx, i64 0, i64 0, !dbg !4933
  store i32 %conv482, i32* %arrayidx483, align 4, !dbg !4934
  %426 = load %struct.CCGEdge*, %struct.CCGEdge** %e468, align 8, !dbg !4935
  %call484 = call %struct.CCGVert* @ccgSubSurf_getEdgeVert1(%struct.CCGEdge* %426), !dbg !4936
  store %struct.CCGVert* %call484, %struct.CCGVert** %v479, align 8, !dbg !4937
  %427 = load %struct.CCGVert*, %struct.CCGVert** %v479, align 8, !dbg !4938
  %call485 = call i8* @ccgSubSurf_getVertVertHandle(%struct.CCGVert* %427), !dbg !4938
  %428 = ptrtoint i8* %call485 to i64, !dbg !4938
  %conv486 = trunc i64 %428 to i32, !dbg !4938
  %arrayidx487 = getelementptr inbounds [2 x i32], [2 x i32]* %vertIdx, i64 0, i64 1, !dbg !4939
  store i32 %conv486, i32* %arrayidx487, align 4, !dbg !4940
  %429 = load i32, i32* %vertNum, align 4, !dbg !4941
  %430 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4942
  %edgeMap488 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %430, i32 0, i32 6, !dbg !4943
  %431 = load %struct.anon.0*, %struct.anon.0** %edgeMap488, align 8, !dbg !4943
  %432 = load i32, i32* %index, align 4, !dbg !4944
  %idxprom489 = sext i32 %432 to i64, !dbg !4942
  %arrayidx490 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %431, i64 %idxprom489, !dbg !4942
  %startVert491 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx490, i32 0, i32 0, !dbg !4945
  store i32 %429, i32* %startVert491, align 8, !dbg !4946
  %433 = load i32, i32* %edgeNum, align 4, !dbg !4947
  %434 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4948
  %edgeMap492 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %434, i32 0, i32 6, !dbg !4949
  %435 = load %struct.anon.0*, %struct.anon.0** %edgeMap492, align 8, !dbg !4949
  %436 = load i32, i32* %index, align 4, !dbg !4950
  %idxprom493 = sext i32 %436 to i64, !dbg !4948
  %arrayidx494 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %435, i64 %idxprom493, !dbg !4948
  %startEdge495 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx494, i32 0, i32 1, !dbg !4951
  store i32 %433, i32* %startEdge495, align 4, !dbg !4952
  %437 = load i32, i32* %edgeIdx, align 4, !dbg !4953
  %cmp496 = icmp sge i32 %437, 0, !dbg !4955
  br i1 %cmp496, label %land.lhs.true498, label %if.end506, !dbg !4956

land.lhs.true498:                                 ; preds = %for.body467
  %438 = load i16*, i16** %edgeFlags, align 8, !dbg !4957
  %tobool499 = icmp ne i16* %438, null, !dbg !4957
  br i1 %tobool499, label %if.then500, label %if.end506, !dbg !4958

if.then500:                                       ; preds = %land.lhs.true498
  %439 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !4959
  %440 = load i32, i32* %edgeIdx, align 4, !dbg !4960
  %idxprom501 = sext i32 %440 to i64, !dbg !4959
  %arrayidx502 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %439, i64 %idxprom501, !dbg !4959
  %flag503 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %arrayidx502, i32 0, i32 4, !dbg !4961
  %441 = load i16, i16* %flag503, align 2, !dbg !4961
  %442 = load i16*, i16** %edgeFlags, align 8, !dbg !4962
  %443 = load i32, i32* %edgeIdx, align 4, !dbg !4963
  %idxprom504 = sext i32 %443 to i64, !dbg !4962
  %arrayidx505 = getelementptr inbounds i16, i16* %442, i64 %idxprom504, !dbg !4962
  store i16 %441, i16* %arrayidx505, align 2, !dbg !4964
  br label %if.end506, !dbg !4962

if.end506:                                        ; preds = %if.then500, %land.lhs.true498, %for.body467
  %444 = load i32, i32* %vertNum, align 4, !dbg !4965
  %445 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !4966
  %446 = load %struct.CCGEdge*, %struct.CCGEdge** %e468, align 8, !dbg !4967
  %call507 = call i8* @ccgSubSurf_getEdgeUserData(%struct.CCGSubSurf* %445, %struct.CCGEdge* %446), !dbg !4968
  %447 = bitcast i8* %call507 to i32*, !dbg !4969
  store i32 %444, i32* %447, align 4, !dbg !4970
  store i32 1, i32* %x476, align 4, !dbg !4971
  br label %for.cond508, !dbg !4973

for.cond508:                                      ; preds = %for.inc528, %if.end506
  %448 = load i32, i32* %x476, align 4, !dbg !4974
  %449 = load i32, i32* %edgeSize, align 4, !dbg !4976
  %sub509 = sub nsw i32 %449, 1, !dbg !4977
  %cmp510 = icmp slt i32 %448, %sub509, !dbg !4978
  br i1 %cmp510, label %for.body512, label %for.end530, !dbg !4979

for.body512:                                      ; preds = %for.cond508
  call void @llvm.dbg.declare(metadata [2 x float]* %w513, metadata !4980, metadata !DIExpression()), !dbg !4982
  %450 = load i32, i32* %x476, align 4, !dbg !4983
  %conv514 = sitofp i32 %450 to float, !dbg !4984
  %451 = load i32, i32* %edgeSize, align 4, !dbg !4985
  %sub515 = sub nsw i32 %451, 1, !dbg !4986
  %conv516 = sitofp i32 %sub515 to float, !dbg !4987
  %div = fdiv float %conv514, %conv516, !dbg !4988
  %arrayidx517 = getelementptr inbounds [2 x float], [2 x float]* %w513, i64 0, i64 1, !dbg !4989
  store float %div, float* %arrayidx517, align 4, !dbg !4990
  %arrayidx518 = getelementptr inbounds [2 x float], [2 x float]* %w513, i64 0, i64 1, !dbg !4991
  %452 = load float, float* %arrayidx518, align 4, !dbg !4991
  %sub519 = fsub float 1.000000e+00, %452, !dbg !4992
  %arrayidx520 = getelementptr inbounds [2 x float], [2 x float]* %w513, i64 0, i64 0, !dbg !4993
  store float %sub519, float* %arrayidx520, align 4, !dbg !4994
  %453 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4995
  %454 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !4996
  %dm521 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %454, i32 0, i32 0, !dbg !4997
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %vertIdx, i64 0, i64 0, !dbg !4998
  %arraydecay522 = getelementptr inbounds [2 x float], [2 x float]* %w513, i64 0, i64 0, !dbg !4999
  %455 = load i32, i32* %vertNum, align 4, !dbg !5000
  call void @DM_interp_vert_data(%struct.DerivedMesh* %453, %struct.DerivedMesh* %dm521, i32* %arraydecay, float* %arraydecay522, i32 2, i32 %455), !dbg !5001
  %456 = load i32*, i32** %vertOrigIndex, align 8, !dbg !5002
  %tobool523 = icmp ne i32* %456, null, !dbg !5002
  br i1 %tobool523, label %if.then524, label %if.end526, !dbg !5004

if.then524:                                       ; preds = %for.body512
  %457 = load i32*, i32** %vertOrigIndex, align 8, !dbg !5005
  store i32 -1, i32* %457, align 4, !dbg !5007
  %458 = load i32*, i32** %vertOrigIndex, align 8, !dbg !5008
  %incdec.ptr525 = getelementptr inbounds i32, i32* %458, i32 1, !dbg !5008
  store i32* %incdec.ptr525, i32** %vertOrigIndex, align 8, !dbg !5008
  br label %if.end526, !dbg !5009

if.end526:                                        ; preds = %if.then524, %for.body512
  %459 = load i32, i32* %vertNum, align 4, !dbg !5010
  %inc527 = add nsw i32 %459, 1, !dbg !5010
  store i32 %inc527, i32* %vertNum, align 4, !dbg !5010
  br label %for.inc528, !dbg !5011

for.inc528:                                       ; preds = %if.end526
  %460 = load i32, i32* %x476, align 4, !dbg !5012
  %inc529 = add nsw i32 %460, 1, !dbg !5012
  store i32 %inc529, i32* %x476, align 4, !dbg !5012
  br label %for.cond508, !dbg !5013, !llvm.loop !5014

for.end530:                                       ; preds = %for.cond508
  %461 = load i8, i8* %has_edge_cd, align 1, !dbg !5016
  %tobool531 = icmp ne i8 %461, 0, !dbg !5016
  br i1 %tobool531, label %if.then532, label %if.end544, !dbg !5018

if.then532:                                       ; preds = %for.end530
  store i32 0, i32* %i, align 4, !dbg !5019
  br label %for.cond533, !dbg !5022

for.cond533:                                      ; preds = %for.inc541, %if.then532
  %462 = load i32, i32* %i, align 4, !dbg !5023
  %463 = load i32, i32* %numFinalEdges473, align 4, !dbg !5025
  %cmp534 = icmp slt i32 %462, %463, !dbg !5026
  br i1 %cmp534, label %for.body536, label %for.end543, !dbg !5027

for.body536:                                      ; preds = %for.cond533
  %464 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5028
  %edgeData537 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %464, i32 0, i32 1, !dbg !5030
  %465 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !5031
  %dm538 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %465, i32 0, i32 0, !dbg !5032
  %edgeData539 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm538, i32 0, i32 1, !dbg !5033
  %466 = load i32, i32* %edgeIdx, align 4, !dbg !5034
  %467 = load i32, i32* %edgeNum, align 4, !dbg !5035
  %468 = load i32, i32* %i, align 4, !dbg !5036
  %add540 = add nsw i32 %467, %468, !dbg !5037
  call void @CustomData_copy_data(%struct.CustomData* %edgeData537, %struct.CustomData* %edgeData539, i32 %466, i32 %add540, i32 1), !dbg !5038
  br label %for.inc541, !dbg !5039

for.inc541:                                       ; preds = %for.body536
  %469 = load i32, i32* %i, align 4, !dbg !5040
  %inc542 = add nsw i32 %469, 1, !dbg !5040
  store i32 %inc542, i32* %i, align 4, !dbg !5040
  br label %for.cond533, !dbg !5041, !llvm.loop !5042

for.end543:                                       ; preds = %for.cond533
  br label %if.end544, !dbg !5044

if.end544:                                        ; preds = %for.end543, %for.end530
  %470 = load i32*, i32** %edgeOrigIndex, align 8, !dbg !5045
  %tobool545 = icmp ne i32* %470, null, !dbg !5045
  br i1 %tobool545, label %if.then546, label %if.end557, !dbg !5047

if.then546:                                       ; preds = %if.end544
  store i32 0, i32* %i, align 4, !dbg !5048
  br label %for.cond547, !dbg !5051

for.cond547:                                      ; preds = %for.inc554, %if.then546
  %471 = load i32, i32* %i, align 4, !dbg !5052
  %472 = load i32, i32* %numFinalEdges473, align 4, !dbg !5054
  %cmp548 = icmp slt i32 %471, %472, !dbg !5055
  br i1 %cmp548, label %for.body550, label %for.end556, !dbg !5056

for.body550:                                      ; preds = %for.cond547
  %473 = load i32, i32* %mapIndex, align 4, !dbg !5057
  %474 = load i32*, i32** %edgeOrigIndex, align 8, !dbg !5059
  %475 = load i32, i32* %edgeNum, align 4, !dbg !5060
  %476 = load i32, i32* %i, align 4, !dbg !5061
  %add551 = add nsw i32 %475, %476, !dbg !5062
  %idxprom552 = sext i32 %add551 to i64, !dbg !5059
  %arrayidx553 = getelementptr inbounds i32, i32* %474, i64 %idxprom552, !dbg !5059
  store i32 %473, i32* %arrayidx553, align 4, !dbg !5063
  br label %for.inc554, !dbg !5064

for.inc554:                                       ; preds = %for.body550
  %477 = load i32, i32* %i, align 4, !dbg !5065
  %inc555 = add nsw i32 %477, 1, !dbg !5065
  store i32 %inc555, i32* %i, align 4, !dbg !5065
  br label %for.cond547, !dbg !5066, !llvm.loop !5067

for.end556:                                       ; preds = %for.cond547
  br label %if.end557, !dbg !5069

if.end557:                                        ; preds = %for.end556, %if.end544
  %478 = load i32, i32* %numFinalEdges473, align 4, !dbg !5070
  %479 = load i32, i32* %edgeNum, align 4, !dbg !5071
  %add558 = add nsw i32 %479, %478, !dbg !5071
  store i32 %add558, i32* %edgeNum, align 4, !dbg !5071
  br label %for.inc559, !dbg !5072

for.inc559:                                       ; preds = %if.end557
  %480 = load i32, i32* %index, align 4, !dbg !5073
  %inc560 = add nsw i32 %480, 1, !dbg !5073
  store i32 %inc560, i32* %index, align 4, !dbg !5073
  br label %for.cond464, !dbg !5074, !llvm.loop !5075

for.end561:                                       ; preds = %for.cond464
  %481 = load i32, i32* %useSubsurfUv.addr, align 4, !dbg !5077
  %tobool562 = icmp ne i32 %481, 0, !dbg !5077
  br i1 %tobool562, label %if.then563, label %if.end579, !dbg !5079

if.then563:                                       ; preds = %for.end561
  call void @llvm.dbg.declare(metadata %struct.CustomData** %ldata, metadata !5080, metadata !DIExpression()), !dbg !5082
  %482 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !5083
  %dm564 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %482, i32 0, i32 0, !dbg !5084
  %loopData565 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm564, i32 0, i32 3, !dbg !5085
  store %struct.CustomData* %loopData565, %struct.CustomData** %ldata, align 8, !dbg !5082
  call void @llvm.dbg.declare(metadata %struct.CustomData** %dmldata, metadata !5086, metadata !DIExpression()), !dbg !5087
  %483 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5088
  %loopData566 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %483, i32 0, i32 3, !dbg !5089
  store %struct.CustomData* %loopData566, %struct.CustomData** %dmldata, align 8, !dbg !5087
  call void @llvm.dbg.declare(metadata i32* %numlayer, metadata !5090, metadata !DIExpression()), !dbg !5091
  %484 = load %struct.CustomData*, %struct.CustomData** %ldata, align 8, !dbg !5092
  %call567 = call i32 @CustomData_number_of_layers(%struct.CustomData* %484, i32 16), !dbg !5093
  store i32 %call567, i32* %numlayer, align 4, !dbg !5091
  call void @llvm.dbg.declare(metadata i32* %dmnumlayer, metadata !5094, metadata !DIExpression()), !dbg !5095
  %485 = load %struct.CustomData*, %struct.CustomData** %dmldata, align 8, !dbg !5096
  %call568 = call i32 @CustomData_number_of_layers(%struct.CustomData* %485, i32 16), !dbg !5097
  store i32 %call568, i32* %dmnumlayer, align 4, !dbg !5095
  store i32 0, i32* %i, align 4, !dbg !5098
  br label %for.cond569, !dbg !5100

for.cond569:                                      ; preds = %for.inc576, %if.then563
  %486 = load i32, i32* %i, align 4, !dbg !5101
  %487 = load i32, i32* %numlayer, align 4, !dbg !5103
  %cmp570 = icmp slt i32 %486, %487, !dbg !5104
  br i1 %cmp570, label %land.rhs, label %land.end, !dbg !5105

land.rhs:                                         ; preds = %for.cond569
  %488 = load i32, i32* %i, align 4, !dbg !5106
  %489 = load i32, i32* %dmnumlayer, align 4, !dbg !5107
  %cmp572 = icmp slt i32 %488, %489, !dbg !5108
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond569
  %490 = phi i1 [ false, %for.cond569 ], [ %cmp572, %land.rhs ], !dbg !5109
  br i1 %490, label %for.body574, label %for.end578, !dbg !5110

for.body574:                                      ; preds = %land.end
  %491 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !5111
  %492 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5112
  %493 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !5113
  %dm575 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %493, i32 0, i32 0, !dbg !5114
  %494 = load i32, i32* %i, align 4, !dbg !5115
  call void @set_subsurf_uv(%struct.CCGSubSurf* %491, %struct.DerivedMesh* %492, %struct.DerivedMesh* %dm575, i32 %494), !dbg !5116
  br label %for.inc576, !dbg !5116

for.inc576:                                       ; preds = %for.body574
  %495 = load i32, i32* %i, align 4, !dbg !5117
  %inc577 = add nsw i32 %495, 1, !dbg !5117
  store i32 %inc577, i32* %i, align 4, !dbg !5117
  br label %for.cond569, !dbg !5118, !llvm.loop !5119

for.end578:                                       ; preds = %land.end
  br label %if.end579, !dbg !5121

if.end579:                                        ; preds = %for.end578, %for.end561
  store i32 0, i32* %index, align 4, !dbg !5122
  br label %for.cond580, !dbg !5124

for.cond580:                                      ; preds = %for.inc606, %if.end579
  %496 = load i32, i32* %index, align 4, !dbg !5125
  %497 = load i32, i32* %totvert, align 4, !dbg !5127
  %cmp581 = icmp slt i32 %496, %497, !dbg !5128
  br i1 %cmp581, label %for.body583, label %for.end608, !dbg !5129

for.body583:                                      ; preds = %for.cond580
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v584, metadata !5130, metadata !DIExpression()), !dbg !5132
  %498 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !5133
  %vertMap585 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %498, i32 0, i32 5, !dbg !5134
  %499 = load %struct.anon*, %struct.anon** %vertMap585, align 8, !dbg !5134
  %500 = load i32, i32* %index, align 4, !dbg !5135
  %idxprom586 = sext i32 %500 to i64, !dbg !5133
  %arrayidx587 = getelementptr inbounds %struct.anon, %struct.anon* %499, i64 %idxprom586, !dbg !5133
  %vert588 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx587, i32 0, i32 1, !dbg !5136
  %501 = load %struct.CCGVert*, %struct.CCGVert** %vert588, align 8, !dbg !5136
  store %struct.CCGVert* %501, %struct.CCGVert** %v584, align 8, !dbg !5132
  call void @llvm.dbg.declare(metadata i32* %mapIndex589, metadata !5137, metadata !DIExpression()), !dbg !5138
  %502 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !5139
  %ss590 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %502, i32 0, i32 1, !dbg !5140
  %503 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss590, align 8, !dbg !5140
  %504 = load %struct.CCGVert*, %struct.CCGVert** %v584, align 8, !dbg !5141
  %call591 = call i32 @ccgDM_getVertMapIndex(%struct.CCGSubSurf* %503, %struct.CCGVert* %504), !dbg !5142
  store i32 %call591, i32* %mapIndex589, align 4, !dbg !5138
  call void @llvm.dbg.declare(metadata i32* %vertIdx592, metadata !5143, metadata !DIExpression()), !dbg !5144
  %505 = load %struct.CCGVert*, %struct.CCGVert** %v584, align 8, !dbg !5145
  %call593 = call i8* @ccgSubSurf_getVertVertHandle(%struct.CCGVert* %505), !dbg !5145
  %506 = ptrtoint i8* %call593 to i64, !dbg !5145
  %conv594 = trunc i64 %506 to i32, !dbg !5145
  store i32 %conv594, i32* %vertIdx592, align 4, !dbg !5146
  %507 = load i32, i32* %vertNum, align 4, !dbg !5147
  %508 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !5148
  %vertMap595 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %508, i32 0, i32 5, !dbg !5149
  %509 = load %struct.anon*, %struct.anon** %vertMap595, align 8, !dbg !5149
  %510 = load i32, i32* %index, align 4, !dbg !5150
  %idxprom596 = sext i32 %510 to i64, !dbg !5148
  %arrayidx597 = getelementptr inbounds %struct.anon, %struct.anon* %509, i64 %idxprom596, !dbg !5148
  %startVert598 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx597, i32 0, i32 0, !dbg !5151
  store i32 %507, i32* %startVert598, align 8, !dbg !5152
  %511 = load i32, i32* %vertNum, align 4, !dbg !5153
  %512 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !5154
  %513 = load %struct.CCGVert*, %struct.CCGVert** %v584, align 8, !dbg !5155
  %call599 = call i8* @ccgSubSurf_getVertUserData(%struct.CCGSubSurf* %512, %struct.CCGVert* %513), !dbg !5156
  %514 = bitcast i8* %call599 to i32*, !dbg !5157
  store i32 %511, i32* %514, align 4, !dbg !5158
  %515 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5159
  %516 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !5160
  %dm600 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %516, i32 0, i32 0, !dbg !5161
  %517 = load i32, i32* %vertIdx592, align 4, !dbg !5162
  %518 = load i32, i32* %vertNum, align 4, !dbg !5163
  call void @DM_copy_vert_data(%struct.DerivedMesh* %515, %struct.DerivedMesh* %dm600, i32 %517, i32 %518, i32 1), !dbg !5164
  %519 = load i32*, i32** %vertOrigIndex, align 8, !dbg !5165
  %tobool601 = icmp ne i32* %519, null, !dbg !5165
  br i1 %tobool601, label %if.then602, label %if.end604, !dbg !5167

if.then602:                                       ; preds = %for.body583
  %520 = load i32, i32* %mapIndex589, align 4, !dbg !5168
  %521 = load i32*, i32** %vertOrigIndex, align 8, !dbg !5170
  store i32 %520, i32* %521, align 4, !dbg !5171
  %522 = load i32*, i32** %vertOrigIndex, align 8, !dbg !5172
  %incdec.ptr603 = getelementptr inbounds i32, i32* %522, i32 1, !dbg !5172
  store i32* %incdec.ptr603, i32** %vertOrigIndex, align 8, !dbg !5172
  br label %if.end604, !dbg !5173

if.end604:                                        ; preds = %if.then602, %for.body583
  %523 = load i32, i32* %vertNum, align 4, !dbg !5174
  %inc605 = add nsw i32 %523, 1, !dbg !5174
  store i32 %inc605, i32* %vertNum, align 4, !dbg !5174
  br label %for.inc606, !dbg !5175

for.inc606:                                       ; preds = %if.end604
  %524 = load i32, i32* %index, align 4, !dbg !5176
  %inc607 = add nsw i32 %524, 1, !dbg !5176
  store i32 %inc607, i32* %index, align 4, !dbg !5176
  br label %for.cond580, !dbg !5177, !llvm.loop !5178

for.end608:                                       ; preds = %for.cond580
  %525 = load i32, i32* %vertNum, align 4, !dbg !5180
  %526 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !5181
  %dm609 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %526, i32 0, i32 0, !dbg !5182
  %numVertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm609, i32 0, i32 5, !dbg !5183
  store i32 %525, i32* %numVertData, align 8, !dbg !5184
  %527 = load i32, i32* %edgeNum, align 4, !dbg !5185
  %528 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !5186
  %dm610 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %528, i32 0, i32 0, !dbg !5187
  %numEdgeData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm610, i32 0, i32 6, !dbg !5188
  store i32 %527, i32* %numEdgeData, align 4, !dbg !5189
  %529 = load i32, i32* %faceNum, align 4, !dbg !5190
  %530 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !5191
  %dm611 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %530, i32 0, i32 0, !dbg !5192
  %numTessFaceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm611, i32 0, i32 7, !dbg !5193
  store i32 %529, i32* %numTessFaceData, align 8, !dbg !5194
  %531 = load i32, i32* %loopindex2, align 4, !dbg !5195
  %532 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !5196
  %dm612 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %532, i32 0, i32 0, !dbg !5197
  %numLoopData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm612, i32 0, i32 8, !dbg !5198
  store i32 %531, i32* %numLoopData, align 4, !dbg !5199
  %533 = load i32, i32* %faceNum, align 4, !dbg !5200
  %534 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !5201
  %dm613 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %534, i32 0, i32 0, !dbg !5202
  %numPolyData614 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm613, i32 0, i32 9, !dbg !5203
  store i32 %533, i32* %numPolyData614, align 8, !dbg !5204
  %535 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !5205
  %dm615 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %535, i32 0, i32 0, !dbg !5206
  %dirty = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm615, i32 0, i32 16, !dbg !5207
  %536 = load i32, i32* %dirty, align 8, !dbg !5208
  %and = and i32 %536, -2, !dbg !5208
  store i32 %and, i32* %dirty, align 8, !dbg !5208
  call void @free_ss_weights(%struct.WeightTable* %wtable), !dbg !5209
  %537 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !5210
  ret %struct.CCGDerivedMesh* %537, !dbg !5211
}

declare dso_local void @ccgSubSurf_free(%struct.CCGSubSurf*) #2

declare dso_local void @ccgSubSurf_setNumLayers(%struct.CCGSubSurf*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @subsurf_calculate_limit_positions(%struct.Mesh* %me, [3 x float]* %r_positions) #0 !dbg !5212 {
entry:
  %me.addr = alloca %struct.Mesh*, align 8
  %r_positions.addr = alloca [3 x float]*, align 8
  %ss = alloca %struct.CCGSubSurf*, align 8
  %edge_sum = alloca [3 x float], align 4
  %face_sum = alloca [3 x float], align 4
  %vi = alloca %struct.CCGVertIterator*, align 8
  %dm = alloca %struct.DerivedMesh*, align 8
  %v = alloca %struct.CCGVert*, align 8
  %idx = alloca i32, align 4
  %N = alloca i32, align 4
  %numFaces = alloca i32, align 4
  %co = alloca float*, align 8
  %i = alloca i32, align 4
  %e = alloca %struct.CCGEdge*, align 8
  %f = alloca %struct.CCGFace*, align 8
  store %struct.Mesh* %me, %struct.Mesh** %me.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me.addr, metadata !5336, metadata !DIExpression()), !dbg !5337
  store [3 x float]* %r_positions, [3 x float]** %r_positions.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %r_positions.addr, metadata !5338, metadata !DIExpression()), !dbg !5339
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss, metadata !5340, metadata !DIExpression()), !dbg !5341
  %call = call %struct.CCGSubSurf* @_getSubSurf(%struct.CCGSubSurf* null, i32 1, i32 3, i32 2), !dbg !5342
  store %struct.CCGSubSurf* %call, %struct.CCGSubSurf** %ss, align 8, !dbg !5341
  call void @llvm.dbg.declare(metadata [3 x float]* %edge_sum, metadata !5343, metadata !DIExpression()), !dbg !5344
  call void @llvm.dbg.declare(metadata [3 x float]* %face_sum, metadata !5345, metadata !DIExpression()), !dbg !5346
  call void @llvm.dbg.declare(metadata %struct.CCGVertIterator** %vi, metadata !5347, metadata !DIExpression()), !dbg !5348
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm, metadata !5349, metadata !DIExpression()), !dbg !5350
  %0 = load %struct.Mesh*, %struct.Mesh** %me.addr, align 8, !dbg !5351
  %call1 = call %struct.DerivedMesh* @CDDM_from_mesh(%struct.Mesh* %0), !dbg !5352
  store %struct.DerivedMesh* %call1, %struct.DerivedMesh** %dm, align 8, !dbg !5350
  %1 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !5353
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !5354
  call void @ss_sync_from_derivedmesh(%struct.CCGSubSurf* %1, %struct.DerivedMesh* %2, [3 x float]* null, i32 0), !dbg !5355
  %3 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !5356
  %call2 = call %struct.CCGVertIterator* @ccgSubSurf_getVertIterator(%struct.CCGSubSurf* %3), !dbg !5358
  store %struct.CCGVertIterator* %call2, %struct.CCGVertIterator** %vi, align 8, !dbg !5359
  br label %for.cond, !dbg !5360

for.cond:                                         ; preds = %for.inc80, %entry
  %4 = load %struct.CCGVertIterator*, %struct.CCGVertIterator** %vi, align 8, !dbg !5361
  %call3 = call i32 @ccgVertIterator_isStopped(%struct.CCGVertIterator* %4), !dbg !5363
  %tobool = icmp ne i32 %call3, 0, !dbg !5364
  %lnot = xor i1 %tobool, true, !dbg !5364
  br i1 %lnot, label %for.body, label %for.end81, !dbg !5365

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v, metadata !5366, metadata !DIExpression()), !dbg !5368
  %5 = load %struct.CCGVertIterator*, %struct.CCGVertIterator** %vi, align 8, !dbg !5369
  %call4 = call %struct.CCGVert* @ccgVertIterator_getCurrent(%struct.CCGVertIterator* %5), !dbg !5370
  store %struct.CCGVert* %call4, %struct.CCGVert** %v, align 8, !dbg !5368
  call void @llvm.dbg.declare(metadata i32* %idx, metadata !5371, metadata !DIExpression()), !dbg !5372
  %6 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !5373
  %call5 = call i8* @ccgSubSurf_getVertVertHandle(%struct.CCGVert* %6), !dbg !5373
  %7 = ptrtoint i8* %call5 to i64, !dbg !5373
  %conv = trunc i64 %7 to i32, !dbg !5373
  store i32 %conv, i32* %idx, align 4, !dbg !5372
  call void @llvm.dbg.declare(metadata i32* %N, metadata !5374, metadata !DIExpression()), !dbg !5375
  %8 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !5376
  %call6 = call i32 @ccgSubSurf_getVertNumEdges(%struct.CCGVert* %8), !dbg !5377
  store i32 %call6, i32* %N, align 4, !dbg !5375
  call void @llvm.dbg.declare(metadata i32* %numFaces, metadata !5378, metadata !DIExpression()), !dbg !5379
  %9 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !5380
  %call7 = call i32 @ccgSubSurf_getVertNumFaces(%struct.CCGVert* %9), !dbg !5381
  store i32 %call7, i32* %numFaces, align 4, !dbg !5379
  call void @llvm.dbg.declare(metadata float** %co, metadata !5382, metadata !DIExpression()), !dbg !5383
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5384, metadata !DIExpression()), !dbg !5385
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %edge_sum, i64 0, i64 0, !dbg !5386
  call void @zero_v3(float* %arraydecay), !dbg !5387
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %face_sum, i64 0, i64 0, !dbg !5388
  call void @zero_v3(float* %arraydecay8), !dbg !5389
  store i32 0, i32* %i, align 4, !dbg !5390
  br label %for.cond9, !dbg !5392

for.cond9:                                        ; preds = %for.inc, %for.body
  %10 = load i32, i32* %i, align 4, !dbg !5393
  %11 = load i32, i32* %N, align 4, !dbg !5395
  %cmp = icmp slt i32 %10, %11, !dbg !5396
  br i1 %cmp, label %for.body11, label %for.end, !dbg !5397

for.body11:                                       ; preds = %for.cond9
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e, metadata !5398, metadata !DIExpression()), !dbg !5400
  %12 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !5401
  %13 = load i32, i32* %i, align 4, !dbg !5402
  %call12 = call %struct.CCGEdge* @ccgSubSurf_getVertEdge(%struct.CCGVert* %12, i32 %13), !dbg !5403
  store %struct.CCGEdge* %call12, %struct.CCGEdge** %e, align 8, !dbg !5400
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %edge_sum, i64 0, i64 0, !dbg !5404
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %edge_sum, i64 0, i64 0, !dbg !5405
  %14 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !5406
  %15 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !5407
  %call15 = call i8* @ccgSubSurf_getEdgeData(%struct.CCGSubSurf* %14, %struct.CCGEdge* %15, i32 1), !dbg !5408
  %16 = bitcast i8* %call15 to float*, !dbg !5408
  call void @add_v3_v3v3(float* %arraydecay13, float* %arraydecay14, float* %16), !dbg !5409
  br label %for.inc, !dbg !5410

for.inc:                                          ; preds = %for.body11
  %17 = load i32, i32* %i, align 4, !dbg !5411
  %inc = add nsw i32 %17, 1, !dbg !5411
  store i32 %inc, i32* %i, align 4, !dbg !5411
  br label %for.cond9, !dbg !5412, !llvm.loop !5413

for.end:                                          ; preds = %for.cond9
  store i32 0, i32* %i, align 4, !dbg !5415
  br label %for.cond16, !dbg !5417

for.cond16:                                       ; preds = %for.inc23, %for.end
  %18 = load i32, i32* %i, align 4, !dbg !5418
  %19 = load i32, i32* %numFaces, align 4, !dbg !5420
  %cmp17 = icmp slt i32 %18, %19, !dbg !5421
  br i1 %cmp17, label %for.body19, label %for.end25, !dbg !5422

for.body19:                                       ; preds = %for.cond16
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f, metadata !5423, metadata !DIExpression()), !dbg !5425
  %20 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !5426
  %21 = load i32, i32* %i, align 4, !dbg !5427
  %call20 = call %struct.CCGFace* @ccgSubSurf_getVertFace(%struct.CCGVert* %20, i32 %21), !dbg !5428
  store %struct.CCGFace* %call20, %struct.CCGFace** %f, align 8, !dbg !5425
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %face_sum, i64 0, i64 0, !dbg !5429
  %22 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !5430
  %call22 = call i8* @ccgSubSurf_getFaceCenterData(%struct.CCGFace* %22), !dbg !5431
  %23 = bitcast i8* %call22 to float*, !dbg !5431
  call void @add_v3_v3(float* %arraydecay21, float* %23), !dbg !5432
  br label %for.inc23, !dbg !5433

for.inc23:                                        ; preds = %for.body19
  %24 = load i32, i32* %i, align 4, !dbg !5434
  %inc24 = add nsw i32 %24, 1, !dbg !5434
  store i32 %inc24, i32* %i, align 4, !dbg !5434
  br label %for.cond16, !dbg !5435, !llvm.loop !5436

for.end25:                                        ; preds = %for.cond16
  %25 = load i32, i32* %numFaces, align 4, !dbg !5438
  %tobool26 = icmp ne i32 %25, 0, !dbg !5438
  br i1 %tobool26, label %land.lhs.true, label %if.end, !dbg !5440

land.lhs.true:                                    ; preds = %for.end25
  %26 = load i32, i32* %numFaces, align 4, !dbg !5441
  %27 = load i32, i32* %N, align 4, !dbg !5442
  %cmp27 = icmp ne i32 %26, %27, !dbg !5443
  br i1 %cmp27, label %if.then, label %if.end, !dbg !5444

if.then:                                          ; preds = %land.lhs.true
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %face_sum, i64 0, i64 0, !dbg !5445
  %28 = load i32, i32* %N, align 4, !dbg !5446
  %conv30 = sitofp i32 %28 to float, !dbg !5447
  %29 = load i32, i32* %numFaces, align 4, !dbg !5448
  %conv31 = sitofp i32 %29 to float, !dbg !5449
  %div = fdiv float %conv30, %conv31, !dbg !5450
  call void @mul_v3_fl(float* %arraydecay29, float %div), !dbg !5451
  br label %if.end, !dbg !5451

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.end25
  %30 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !5452
  %31 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !5453
  %call32 = call i8* @ccgSubSurf_getVertData(%struct.CCGSubSurf* %30, %struct.CCGVert* %31), !dbg !5454
  %32 = bitcast i8* %call32 to float*, !dbg !5454
  store float* %32, float** %co, align 8, !dbg !5455
  %33 = load float*, float** %co, align 8, !dbg !5456
  %arrayidx = getelementptr inbounds float, float* %33, i64 0, !dbg !5456
  %34 = load float, float* %arrayidx, align 4, !dbg !5456
  %35 = load i32, i32* %N, align 4, !dbg !5457
  %conv33 = sitofp i32 %35 to float, !dbg !5457
  %mul = fmul float %34, %conv33, !dbg !5458
  %36 = load i32, i32* %N, align 4, !dbg !5459
  %conv34 = sitofp i32 %36 to float, !dbg !5459
  %mul35 = fmul float %mul, %conv34, !dbg !5460
  %arrayidx36 = getelementptr inbounds [3 x float], [3 x float]* %edge_sum, i64 0, i64 0, !dbg !5461
  %37 = load float, float* %arrayidx36, align 4, !dbg !5461
  %mul37 = fmul float %37, 4.000000e+00, !dbg !5462
  %add = fadd float %mul35, %mul37, !dbg !5463
  %arrayidx38 = getelementptr inbounds [3 x float], [3 x float]* %face_sum, i64 0, i64 0, !dbg !5464
  %38 = load float, float* %arrayidx38, align 4, !dbg !5464
  %add39 = fadd float %add, %38, !dbg !5465
  %39 = load i32, i32* %N, align 4, !dbg !5466
  %40 = load i32, i32* %N, align 4, !dbg !5467
  %add40 = add nsw i32 %40, 5, !dbg !5468
  %mul41 = mul nsw i32 %39, %add40, !dbg !5469
  %conv42 = sitofp i32 %mul41 to float, !dbg !5470
  %div43 = fdiv float %add39, %conv42, !dbg !5471
  %41 = load [3 x float]*, [3 x float]** %r_positions.addr, align 8, !dbg !5472
  %42 = load i32, i32* %idx, align 4, !dbg !5473
  %idxprom = sext i32 %42 to i64, !dbg !5472
  %arrayidx44 = getelementptr inbounds [3 x float], [3 x float]* %41, i64 %idxprom, !dbg !5472
  %arrayidx45 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx44, i64 0, i64 0, !dbg !5472
  store float %div43, float* %arrayidx45, align 4, !dbg !5474
  %43 = load float*, float** %co, align 8, !dbg !5475
  %arrayidx46 = getelementptr inbounds float, float* %43, i64 1, !dbg !5475
  %44 = load float, float* %arrayidx46, align 4, !dbg !5475
  %45 = load i32, i32* %N, align 4, !dbg !5476
  %conv47 = sitofp i32 %45 to float, !dbg !5476
  %mul48 = fmul float %44, %conv47, !dbg !5477
  %46 = load i32, i32* %N, align 4, !dbg !5478
  %conv49 = sitofp i32 %46 to float, !dbg !5478
  %mul50 = fmul float %mul48, %conv49, !dbg !5479
  %arrayidx51 = getelementptr inbounds [3 x float], [3 x float]* %edge_sum, i64 0, i64 1, !dbg !5480
  %47 = load float, float* %arrayidx51, align 4, !dbg !5480
  %mul52 = fmul float %47, 4.000000e+00, !dbg !5481
  %add53 = fadd float %mul50, %mul52, !dbg !5482
  %arrayidx54 = getelementptr inbounds [3 x float], [3 x float]* %face_sum, i64 0, i64 1, !dbg !5483
  %48 = load float, float* %arrayidx54, align 4, !dbg !5483
  %add55 = fadd float %add53, %48, !dbg !5484
  %49 = load i32, i32* %N, align 4, !dbg !5485
  %50 = load i32, i32* %N, align 4, !dbg !5486
  %add56 = add nsw i32 %50, 5, !dbg !5487
  %mul57 = mul nsw i32 %49, %add56, !dbg !5488
  %conv58 = sitofp i32 %mul57 to float, !dbg !5489
  %div59 = fdiv float %add55, %conv58, !dbg !5490
  %51 = load [3 x float]*, [3 x float]** %r_positions.addr, align 8, !dbg !5491
  %52 = load i32, i32* %idx, align 4, !dbg !5492
  %idxprom60 = sext i32 %52 to i64, !dbg !5491
  %arrayidx61 = getelementptr inbounds [3 x float], [3 x float]* %51, i64 %idxprom60, !dbg !5491
  %arrayidx62 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx61, i64 0, i64 1, !dbg !5491
  store float %div59, float* %arrayidx62, align 4, !dbg !5493
  %53 = load float*, float** %co, align 8, !dbg !5494
  %arrayidx63 = getelementptr inbounds float, float* %53, i64 2, !dbg !5494
  %54 = load float, float* %arrayidx63, align 4, !dbg !5494
  %55 = load i32, i32* %N, align 4, !dbg !5495
  %conv64 = sitofp i32 %55 to float, !dbg !5495
  %mul65 = fmul float %54, %conv64, !dbg !5496
  %56 = load i32, i32* %N, align 4, !dbg !5497
  %conv66 = sitofp i32 %56 to float, !dbg !5497
  %mul67 = fmul float %mul65, %conv66, !dbg !5498
  %arrayidx68 = getelementptr inbounds [3 x float], [3 x float]* %edge_sum, i64 0, i64 2, !dbg !5499
  %57 = load float, float* %arrayidx68, align 4, !dbg !5499
  %mul69 = fmul float %57, 4.000000e+00, !dbg !5500
  %add70 = fadd float %mul67, %mul69, !dbg !5501
  %arrayidx71 = getelementptr inbounds [3 x float], [3 x float]* %face_sum, i64 0, i64 2, !dbg !5502
  %58 = load float, float* %arrayidx71, align 4, !dbg !5502
  %add72 = fadd float %add70, %58, !dbg !5503
  %59 = load i32, i32* %N, align 4, !dbg !5504
  %60 = load i32, i32* %N, align 4, !dbg !5505
  %add73 = add nsw i32 %60, 5, !dbg !5506
  %mul74 = mul nsw i32 %59, %add73, !dbg !5507
  %conv75 = sitofp i32 %mul74 to float, !dbg !5508
  %div76 = fdiv float %add72, %conv75, !dbg !5509
  %61 = load [3 x float]*, [3 x float]** %r_positions.addr, align 8, !dbg !5510
  %62 = load i32, i32* %idx, align 4, !dbg !5511
  %idxprom77 = sext i32 %62 to i64, !dbg !5510
  %arrayidx78 = getelementptr inbounds [3 x float], [3 x float]* %61, i64 %idxprom77, !dbg !5510
  %arrayidx79 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx78, i64 0, i64 2, !dbg !5510
  store float %div76, float* %arrayidx79, align 4, !dbg !5512
  br label %for.inc80, !dbg !5513

for.inc80:                                        ; preds = %if.end
  %63 = load %struct.CCGVertIterator*, %struct.CCGVertIterator** %vi, align 8, !dbg !5514
  call void @ccgVertIterator_next(%struct.CCGVertIterator* %63), !dbg !5515
  br label %for.cond, !dbg !5516, !llvm.loop !5517

for.end81:                                        ; preds = %for.cond
  %64 = load %struct.CCGVertIterator*, %struct.CCGVertIterator** %vi, align 8, !dbg !5519
  call void @ccgVertIterator_free(%struct.CCGVertIterator* %64), !dbg !5520
  %65 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !5521
  call void @ccgSubSurf_free(%struct.CCGSubSurf* %65), !dbg !5522
  %66 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !5523
  %release = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %66, i32 0, i32 95, !dbg !5524
  %67 = load void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)** %release, align 8, !dbg !5524
  %68 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm, align 8, !dbg !5525
  call void %67(%struct.DerivedMesh* %68), !dbg !5523
  ret void, !dbg !5526
}

declare dso_local %struct.DerivedMesh* @CDDM_from_mesh(%struct.Mesh*) #2

declare dso_local %struct.CCGVertIterator* @ccgSubSurf_getVertIterator(%struct.CCGSubSurf*) #2

declare dso_local i32 @ccgVertIterator_isStopped(%struct.CCGVertIterator*) #2

declare dso_local %struct.CCGVert* @ccgVertIterator_getCurrent(%struct.CCGVertIterator*) #2

declare dso_local i8* @ccgSubSurf_getVertVertHandle(%struct.CCGVert*) #2

declare dso_local i32 @ccgSubSurf_getVertNumEdges(%struct.CCGVert*) #2

declare dso_local i32 @ccgSubSurf_getVertNumFaces(%struct.CCGVert*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v3(float* %r) #0 !dbg !5527 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5531, metadata !DIExpression()), !dbg !5532
  %0 = load float*, float** %r.addr, align 8, !dbg !5533
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5533
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !5534
  %1 = load float*, float** %r.addr, align 8, !dbg !5535
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !5535
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !5536
  %2 = load float*, float** %r.addr, align 8, !dbg !5537
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 2, !dbg !5537
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !5538
  ret void, !dbg !5539
}

declare dso_local %struct.CCGEdge* @ccgSubSurf_getVertEdge(%struct.CCGVert*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !5540 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5543, metadata !DIExpression()), !dbg !5544
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5545, metadata !DIExpression()), !dbg !5546
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !5547, metadata !DIExpression()), !dbg !5548
  %0 = load float*, float** %a.addr, align 8, !dbg !5549
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5549
  %1 = load float, float* %arrayidx, align 4, !dbg !5549
  %2 = load float*, float** %b.addr, align 8, !dbg !5550
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !5550
  %3 = load float, float* %arrayidx1, align 4, !dbg !5550
  %add = fadd float %1, %3, !dbg !5551
  %4 = load float*, float** %r.addr, align 8, !dbg !5552
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !5552
  store float %add, float* %arrayidx2, align 4, !dbg !5553
  %5 = load float*, float** %a.addr, align 8, !dbg !5554
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !5554
  %6 = load float, float* %arrayidx3, align 4, !dbg !5554
  %7 = load float*, float** %b.addr, align 8, !dbg !5555
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !5555
  %8 = load float, float* %arrayidx4, align 4, !dbg !5555
  %add5 = fadd float %6, %8, !dbg !5556
  %9 = load float*, float** %r.addr, align 8, !dbg !5557
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !5557
  store float %add5, float* %arrayidx6, align 4, !dbg !5558
  %10 = load float*, float** %a.addr, align 8, !dbg !5559
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !5559
  %11 = load float, float* %arrayidx7, align 4, !dbg !5559
  %12 = load float*, float** %b.addr, align 8, !dbg !5560
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !5560
  %13 = load float, float* %arrayidx8, align 4, !dbg !5560
  %add9 = fadd float %11, %13, !dbg !5561
  %14 = load float*, float** %r.addr, align 8, !dbg !5562
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !5562
  store float %add9, float* %arrayidx10, align 4, !dbg !5563
  ret void, !dbg !5564
}

declare dso_local i8* @ccgSubSurf_getEdgeData(%struct.CCGSubSurf*, %struct.CCGEdge*, i32) #2

declare dso_local %struct.CCGFace* @ccgSubSurf_getVertFace(%struct.CCGVert*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3(float* %r, float* %a) #0 !dbg !5565 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5568, metadata !DIExpression()), !dbg !5569
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5570, metadata !DIExpression()), !dbg !5571
  %0 = load float*, float** %a.addr, align 8, !dbg !5572
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5572
  %1 = load float, float* %arrayidx, align 4, !dbg !5572
  %2 = load float*, float** %r.addr, align 8, !dbg !5573
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !5573
  %3 = load float, float* %arrayidx1, align 4, !dbg !5574
  %add = fadd float %3, %1, !dbg !5574
  store float %add, float* %arrayidx1, align 4, !dbg !5574
  %4 = load float*, float** %a.addr, align 8, !dbg !5575
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !5575
  %5 = load float, float* %arrayidx2, align 4, !dbg !5575
  %6 = load float*, float** %r.addr, align 8, !dbg !5576
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !5576
  %7 = load float, float* %arrayidx3, align 4, !dbg !5577
  %add4 = fadd float %7, %5, !dbg !5577
  store float %add4, float* %arrayidx3, align 4, !dbg !5577
  %8 = load float*, float** %a.addr, align 8, !dbg !5578
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !5578
  %9 = load float, float* %arrayidx5, align 4, !dbg !5578
  %10 = load float*, float** %r.addr, align 8, !dbg !5579
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !5579
  %11 = load float, float* %arrayidx6, align 4, !dbg !5580
  %add7 = fadd float %11, %9, !dbg !5580
  store float %add7, float* %arrayidx6, align 4, !dbg !5580
  ret void, !dbg !5581
}

declare dso_local i8* @ccgSubSurf_getFaceCenterData(%struct.CCGFace*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_fl(float* %r, float %f) #0 !dbg !5582 {
entry:
  %r.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5585, metadata !DIExpression()), !dbg !5586
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !5587, metadata !DIExpression()), !dbg !5588
  %0 = load float, float* %f.addr, align 4, !dbg !5589
  %1 = load float*, float** %r.addr, align 8, !dbg !5590
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !5590
  %2 = load float, float* %arrayidx, align 4, !dbg !5591
  %mul = fmul float %2, %0, !dbg !5591
  store float %mul, float* %arrayidx, align 4, !dbg !5591
  %3 = load float, float* %f.addr, align 4, !dbg !5592
  %4 = load float*, float** %r.addr, align 8, !dbg !5593
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 1, !dbg !5593
  %5 = load float, float* %arrayidx1, align 4, !dbg !5594
  %mul2 = fmul float %5, %3, !dbg !5594
  store float %mul2, float* %arrayidx1, align 4, !dbg !5594
  %6 = load float, float* %f.addr, align 4, !dbg !5595
  %7 = load float*, float** %r.addr, align 8, !dbg !5596
  %arrayidx3 = getelementptr inbounds float, float* %7, i64 2, !dbg !5596
  %8 = load float, float* %arrayidx3, align 4, !dbg !5597
  %mul4 = fmul float %8, %6, !dbg !5597
  store float %mul4, float* %arrayidx3, align 4, !dbg !5597
  ret void, !dbg !5598
}

declare dso_local i8* @ccgSubSurf_getVertData(%struct.CCGSubSurf*, %struct.CCGVert*) #2

declare dso_local void @ccgVertIterator_next(%struct.CCGVertIterator*) #2

declare dso_local void @ccgVertIterator_free(%struct.CCGVertIterator*) #2

declare dso_local i8* @ccgSubSurf_getFaceUserData(%struct.CCGSubSurf*, %struct.CCGFace*) #2

declare dso_local i32 @ccgSubSurf_getFaceNumVerts(%struct.CCGFace*) #2

declare dso_local %struct.CCGVert* @ccgSubSurf_getFaceVert(%struct.CCGFace*, i32) #2

declare dso_local i8* @ccgSubSurf_getVertUserData(%struct.CCGSubSurf*, %struct.CCGVert*) #2

declare dso_local %struct.CCGEdge* @ccgSubSurf_getFaceEdge(%struct.CCGFace*, i32) #2

declare dso_local i8* @ccgSubSurf_getEdgeUserData(%struct.CCGSubSurf*, %struct.CCGEdge*) #2

declare dso_local %struct.CCGVert* @ccgSubSurf_getEdgeVert0(%struct.CCGEdge*) #2

declare dso_local void @ccgSubSurf_getUseAgeCounts(%struct.CCGSubSurf*, i32*, i32*, i32*, i32*) #2

declare dso_local i32 @ccgSubSurf_getSimpleSubdiv(%struct.CCGSubSurf*) #2

declare dso_local i32 @ccgSubSurf_setSubdivisionLevels(%struct.CCGSubSurf*, i32) #2

declare dso_local %struct.MemArena* @BLI_memarena_new(i64, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal i8* @arena_alloc(i8* %a, i32 %numBytes) #0 !dbg !5599 {
entry:
  %a.addr = alloca i8*, align 8
  %numBytes.addr = alloca i32, align 4
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !5600, metadata !DIExpression()), !dbg !5601
  store i32 %numBytes, i32* %numBytes.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numBytes.addr, metadata !5602, metadata !DIExpression()), !dbg !5603
  %0 = load i8*, i8** %a.addr, align 8, !dbg !5604
  %1 = bitcast i8* %0 to %struct.MemArena*, !dbg !5604
  %2 = load i32, i32* %numBytes.addr, align 4, !dbg !5605
  %conv = sext i32 %2 to i64, !dbg !5605
  %call = call i8* @BLI_memarena_alloc(%struct.MemArena* %1, i64 %conv), !dbg !5606
  ret i8* %call, !dbg !5607
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @arena_realloc(i8* %a, i8* %ptr, i32 %newSize, i32 %oldSize) #0 !dbg !5608 {
entry:
  %a.addr = alloca i8*, align 8
  %ptr.addr = alloca i8*, align 8
  %newSize.addr = alloca i32, align 4
  %oldSize.addr = alloca i32, align 4
  %p2 = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !5609, metadata !DIExpression()), !dbg !5610
  store i8* %ptr, i8** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ptr.addr, metadata !5611, metadata !DIExpression()), !dbg !5612
  store i32 %newSize, i32* %newSize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %newSize.addr, metadata !5613, metadata !DIExpression()), !dbg !5614
  store i32 %oldSize, i32* %oldSize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %oldSize.addr, metadata !5615, metadata !DIExpression()), !dbg !5616
  call void @llvm.dbg.declare(metadata i8** %p2, metadata !5617, metadata !DIExpression()), !dbg !5618
  %0 = load i8*, i8** %a.addr, align 8, !dbg !5619
  %1 = bitcast i8* %0 to %struct.MemArena*, !dbg !5619
  %2 = load i32, i32* %newSize.addr, align 4, !dbg !5620
  %conv = sext i32 %2 to i64, !dbg !5620
  %call = call i8* @BLI_memarena_alloc(%struct.MemArena* %1, i64 %conv), !dbg !5621
  store i8* %call, i8** %p2, align 8, !dbg !5618
  %3 = load i8*, i8** %ptr.addr, align 8, !dbg !5622
  %tobool = icmp ne i8* %3, null, !dbg !5622
  br i1 %tobool, label %if.then, label %if.end, !dbg !5624

if.then:                                          ; preds = %entry
  %4 = load i8*, i8** %p2, align 8, !dbg !5625
  %5 = load i8*, i8** %ptr.addr, align 8, !dbg !5627
  %6 = load i32, i32* %oldSize.addr, align 4, !dbg !5628
  %conv1 = sext i32 %6 to i64, !dbg !5628
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %4, i8* align 1 %5, i64 %conv1, i1 false), !dbg !5629
  br label %if.end, !dbg !5630

if.end:                                           ; preds = %if.then, %entry
  %7 = load i8*, i8** %p2, align 8, !dbg !5631
  ret i8* %7, !dbg !5632
}

; Function Attrs: noinline nounwind uwtable
define internal void @arena_free(i8* %UNUSED_a, i8* %UNUSED_ptr) #0 !dbg !5633 {
entry:
  %UNUSED_a.addr = alloca i8*, align 8
  %UNUSED_ptr.addr = alloca i8*, align 8
  store i8* %UNUSED_a, i8** %UNUSED_a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_a.addr, metadata !5634, metadata !DIExpression()), !dbg !5635
  store i8* %UNUSED_ptr, i8** %UNUSED_ptr.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %UNUSED_ptr.addr, metadata !5636, metadata !DIExpression()), !dbg !5637
  ret void, !dbg !5638
}

; Function Attrs: noinline nounwind uwtable
define internal void @arena_release(i8* %a) #0 !dbg !5639 {
entry:
  %a.addr = alloca i8*, align 8
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !5640, metadata !DIExpression()), !dbg !5641
  %0 = load i8*, i8** %a.addr, align 8, !dbg !5642
  %1 = bitcast i8* %0 to %struct.MemArena*, !dbg !5642
  call void @BLI_memarena_free(%struct.MemArena* %1), !dbg !5643
  ret void, !dbg !5644
}

declare dso_local %struct.CCGSubSurf* @ccgSubSurf_new(%struct.CCGMeshIFC*, i32, %struct.CCGAllocatorIFC*, i8*) #2

declare dso_local i32 @ccgSubSurf_setUseAgeCounts(%struct.CCGSubSurf*, i32, i32, i32, i32) #2

declare dso_local void @ccgSubSurf_setAllocMask(%struct.CCGSubSurf*, i32, i32) #2

declare dso_local i32 @ccgSubSurf_setCalcVertexNormals(%struct.CCGSubSurf*, i32, i32) #2

declare dso_local i8* @BLI_memarena_alloc(%struct.MemArena*, i64) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

declare dso_local void @BLI_memarena_free(%struct.MemArena*) #2

declare dso_local i32 @ccgSubSurf_initFullSync(%struct.CCGSubSurf*) #2

declare dso_local i32 @ccgSubSurf_syncVert(%struct.CCGSubSurf*, i8*, i8*, i32, %struct.CCGVert**) #2

declare dso_local i32 @ccgSubSurf_syncEdge(%struct.CCGSubSurf*, i8*, i8*, i8*, float, %struct.CCGEdge**) #2

; Function Attrs: nounwind
declare i8* @llvm.stacksave() #4

declare dso_local i32 @ccgSubSurf_syncFace(%struct.CCGSubSurf*, i8*, i32, i8**, %struct.CCGFace**) #2

; Function Attrs: nounwind
declare void @llvm.stackrestore(i8*) #4

declare dso_local i32 @ccgSubSurf_processSync(%struct.CCGSubSurf*) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare dso_local void @DM_from_template(%struct.DerivedMesh*, %struct.DerivedMesh*, i32, i32, i32, i32, i32, i32) #2

declare dso_local i32 @ccgSubSurf_getNumFinalVerts(%struct.CCGSubSurf*) #2

declare dso_local i32 @ccgSubSurf_getNumFinalEdges(%struct.CCGSubSurf*) #2

declare dso_local i32 @ccgSubSurf_getNumFinalFaces(%struct.CCGSubSurf*) #2

declare dso_local zeroext i8 @CustomData_free_layer_active(%struct.CustomData*, i32, i32) #2

declare dso_local i32 @CustomData_number_of_layers(%struct.CustomData*, i32) #2

declare dso_local zeroext i8 @CustomData_has_layer(%struct.CustomData*, i32) #2

declare dso_local void @CustomData_from_bmeshpoly(%struct.CustomData*, %struct.CustomData*, %struct.CustomData*, i32) #2

declare dso_local i8* @CustomData_add_layer(%struct.CustomData*, i32, i32, i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @ccgDM_getMinMax(%struct.DerivedMesh* %dm, float* %r_min, float* %r_max) #0 !dbg !5645 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %r_min.addr = alloca float*, align 8
  %r_max.addr = alloca float*, align 8
  %ccgdm = alloca %struct.CCGDerivedMesh*, align 8
  %ss = alloca %struct.CCGSubSurf*, align 8
  %vi = alloca %struct.CCGVertIterator*, align 8
  %ei = alloca %struct.CCGEdgeIterator*, align 8
  %fi = alloca %struct.CCGFaceIterator*, align 8
  %key = alloca %struct.CCGKey, align 4
  %i = alloca i32, align 4
  %edgeSize = alloca i32, align 4
  %gridSize = alloca i32, align 4
  %v = alloca %struct.CCGVert*, align 8
  %co = alloca float*, align 8
  %e = alloca %struct.CCGEdge*, align 8
  %edgeData = alloca %struct.CCGElem*, align 8
  %f = alloca %struct.CCGFace*, align 8
  %S = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %numVerts = alloca i32, align 4
  %faceGridData = alloca %struct.CCGElem*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !5646, metadata !DIExpression()), !dbg !5647
  store float* %r_min, float** %r_min.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_min.addr, metadata !5648, metadata !DIExpression()), !dbg !5649
  store float* %r_max, float** %r_max.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_max.addr, metadata !5650, metadata !DIExpression()), !dbg !5651
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm, metadata !5652, metadata !DIExpression()), !dbg !5653
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5654
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CCGDerivedMesh*, !dbg !5655
  store %struct.CCGDerivedMesh* %1, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !5653
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss, metadata !5656, metadata !DIExpression()), !dbg !5657
  %2 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !5658
  %ss1 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %2, i32 0, i32 1, !dbg !5659
  %3 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss1, align 8, !dbg !5659
  store %struct.CCGSubSurf* %3, %struct.CCGSubSurf** %ss, align 8, !dbg !5657
  call void @llvm.dbg.declare(metadata %struct.CCGVertIterator** %vi, metadata !5660, metadata !DIExpression()), !dbg !5661
  call void @llvm.dbg.declare(metadata %struct.CCGEdgeIterator** %ei, metadata !5662, metadata !DIExpression()), !dbg !5663
  call void @llvm.dbg.declare(metadata %struct.CCGFaceIterator** %fi, metadata !5664, metadata !DIExpression()), !dbg !5665
  call void @llvm.dbg.declare(metadata %struct.CCGKey* %key, metadata !5666, metadata !DIExpression()), !dbg !5668
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5669, metadata !DIExpression()), !dbg !5670
  call void @llvm.dbg.declare(metadata i32* %edgeSize, metadata !5671, metadata !DIExpression()), !dbg !5672
  %4 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !5673
  %call = call i32 @ccgSubSurf_getEdgeSize(%struct.CCGSubSurf* %4), !dbg !5674
  store i32 %call, i32* %edgeSize, align 4, !dbg !5672
  call void @llvm.dbg.declare(metadata i32* %gridSize, metadata !5675, metadata !DIExpression()), !dbg !5676
  %5 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !5677
  %call2 = call i32 @ccgSubSurf_getGridSize(%struct.CCGSubSurf* %5), !dbg !5678
  store i32 %call2, i32* %gridSize, align 4, !dbg !5676
  %6 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !5679
  call void @CCG_key_top_level(%struct.CCGKey* %key, %struct.CCGSubSurf* %6), !dbg !5680
  %7 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !5681
  %call3 = call i32 @ccgSubSurf_getNumVerts(%struct.CCGSubSurf* %7), !dbg !5683
  %tobool = icmp ne i32 %call3, 0, !dbg !5683
  br i1 %tobool, label %if.end, label %if.then, !dbg !5684

if.then:                                          ; preds = %entry
  %8 = load float*, float** %r_max.addr, align 8, !dbg !5685
  %arrayidx = getelementptr inbounds float, float* %8, i64 2, !dbg !5685
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !5686
  %9 = load float*, float** %r_max.addr, align 8, !dbg !5687
  %arrayidx4 = getelementptr inbounds float, float* %9, i64 1, !dbg !5687
  store float 0.000000e+00, float* %arrayidx4, align 4, !dbg !5688
  %10 = load float*, float** %r_max.addr, align 8, !dbg !5689
  %arrayidx5 = getelementptr inbounds float, float* %10, i64 0, !dbg !5689
  store float 0.000000e+00, float* %arrayidx5, align 4, !dbg !5690
  %11 = load float*, float** %r_min.addr, align 8, !dbg !5691
  %arrayidx6 = getelementptr inbounds float, float* %11, i64 2, !dbg !5691
  store float 0.000000e+00, float* %arrayidx6, align 4, !dbg !5692
  %12 = load float*, float** %r_min.addr, align 8, !dbg !5693
  %arrayidx7 = getelementptr inbounds float, float* %12, i64 1, !dbg !5693
  store float 0.000000e+00, float* %arrayidx7, align 4, !dbg !5694
  %13 = load float*, float** %r_min.addr, align 8, !dbg !5695
  %arrayidx8 = getelementptr inbounds float, float* %13, i64 0, !dbg !5695
  store float 0.000000e+00, float* %arrayidx8, align 4, !dbg !5696
  br label %if.end, !dbg !5695

if.end:                                           ; preds = %if.then, %entry
  %14 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !5697
  %call9 = call %struct.CCGVertIterator* @ccgSubSurf_getVertIterator(%struct.CCGSubSurf* %14), !dbg !5699
  store %struct.CCGVertIterator* %call9, %struct.CCGVertIterator** %vi, align 8, !dbg !5700
  br label %for.cond, !dbg !5701

for.cond:                                         ; preds = %for.inc, %if.end
  %15 = load %struct.CCGVertIterator*, %struct.CCGVertIterator** %vi, align 8, !dbg !5702
  %call10 = call i32 @ccgVertIterator_isStopped(%struct.CCGVertIterator* %15), !dbg !5704
  %tobool11 = icmp ne i32 %call10, 0, !dbg !5705
  %lnot = xor i1 %tobool11, true, !dbg !5705
  br i1 %lnot, label %for.body, label %for.end, !dbg !5706

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v, metadata !5707, metadata !DIExpression()), !dbg !5709
  %16 = load %struct.CCGVertIterator*, %struct.CCGVertIterator** %vi, align 8, !dbg !5710
  %call12 = call %struct.CCGVert* @ccgVertIterator_getCurrent(%struct.CCGVertIterator* %16), !dbg !5711
  store %struct.CCGVert* %call12, %struct.CCGVert** %v, align 8, !dbg !5709
  call void @llvm.dbg.declare(metadata float** %co, metadata !5712, metadata !DIExpression()), !dbg !5713
  %17 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !5714
  %18 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !5715
  %call13 = call i8* @ccgSubSurf_getVertData(%struct.CCGSubSurf* %17, %struct.CCGVert* %18), !dbg !5716
  %19 = bitcast i8* %call13 to float*, !dbg !5716
  store float* %19, float** %co, align 8, !dbg !5713
  %20 = load float*, float** %co, align 8, !dbg !5717
  %21 = load float*, float** %r_min.addr, align 8, !dbg !5718
  %22 = load float*, float** %r_max.addr, align 8, !dbg !5719
  call void @minmax_v3_v3v3(float* %20, float* %21, float* %22), !dbg !5720
  br label %for.inc, !dbg !5721

for.inc:                                          ; preds = %for.body
  %23 = load %struct.CCGVertIterator*, %struct.CCGVertIterator** %vi, align 8, !dbg !5722
  call void @ccgVertIterator_next(%struct.CCGVertIterator* %23), !dbg !5723
  br label %for.cond, !dbg !5724, !llvm.loop !5725

for.end:                                          ; preds = %for.cond
  %24 = load %struct.CCGVertIterator*, %struct.CCGVertIterator** %vi, align 8, !dbg !5727
  call void @ccgVertIterator_free(%struct.CCGVertIterator* %24), !dbg !5728
  %25 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !5729
  %call14 = call %struct.CCGEdgeIterator* @ccgSubSurf_getEdgeIterator(%struct.CCGSubSurf* %25), !dbg !5731
  store %struct.CCGEdgeIterator* %call14, %struct.CCGEdgeIterator** %ei, align 8, !dbg !5732
  br label %for.cond15, !dbg !5733

for.cond15:                                       ; preds = %for.inc27, %for.end
  %26 = load %struct.CCGEdgeIterator*, %struct.CCGEdgeIterator** %ei, align 8, !dbg !5734
  %call16 = call i32 @ccgEdgeIterator_isStopped(%struct.CCGEdgeIterator* %26), !dbg !5736
  %tobool17 = icmp ne i32 %call16, 0, !dbg !5737
  %lnot18 = xor i1 %tobool17, true, !dbg !5737
  br i1 %lnot18, label %for.body19, label %for.end28, !dbg !5738

for.body19:                                       ; preds = %for.cond15
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e, metadata !5739, metadata !DIExpression()), !dbg !5741
  %27 = load %struct.CCGEdgeIterator*, %struct.CCGEdgeIterator** %ei, align 8, !dbg !5742
  %call20 = call %struct.CCGEdge* @ccgEdgeIterator_getCurrent(%struct.CCGEdgeIterator* %27), !dbg !5743
  store %struct.CCGEdge* %call20, %struct.CCGEdge** %e, align 8, !dbg !5741
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %edgeData, metadata !5744, metadata !DIExpression()), !dbg !5745
  %28 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !5746
  %29 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !5747
  %call21 = call i8* @ccgSubSurf_getEdgeDataArray(%struct.CCGSubSurf* %28, %struct.CCGEdge* %29), !dbg !5748
  %30 = bitcast i8* %call21 to %struct.CCGElem*, !dbg !5748
  store %struct.CCGElem* %30, %struct.CCGElem** %edgeData, align 8, !dbg !5745
  store i32 0, i32* %i, align 4, !dbg !5749
  br label %for.cond22, !dbg !5751

for.cond22:                                       ; preds = %for.inc25, %for.body19
  %31 = load i32, i32* %i, align 4, !dbg !5752
  %32 = load i32, i32* %edgeSize, align 4, !dbg !5754
  %cmp = icmp slt i32 %31, %32, !dbg !5755
  br i1 %cmp, label %for.body23, label %for.end26, !dbg !5756

for.body23:                                       ; preds = %for.cond22
  %33 = load %struct.CCGElem*, %struct.CCGElem** %edgeData, align 8, !dbg !5757
  %34 = load i32, i32* %i, align 4, !dbg !5758
  %call24 = call float* @CCG_elem_offset_co(%struct.CCGKey* %key, %struct.CCGElem* %33, i32 %34), !dbg !5759
  %35 = load float*, float** %r_min.addr, align 8, !dbg !5760
  %36 = load float*, float** %r_max.addr, align 8, !dbg !5761
  call void @minmax_v3_v3v3(float* %call24, float* %35, float* %36), !dbg !5762
  br label %for.inc25, !dbg !5762

for.inc25:                                        ; preds = %for.body23
  %37 = load i32, i32* %i, align 4, !dbg !5763
  %inc = add nsw i32 %37, 1, !dbg !5763
  store i32 %inc, i32* %i, align 4, !dbg !5763
  br label %for.cond22, !dbg !5764, !llvm.loop !5765

for.end26:                                        ; preds = %for.cond22
  br label %for.inc27, !dbg !5767

for.inc27:                                        ; preds = %for.end26
  %38 = load %struct.CCGEdgeIterator*, %struct.CCGEdgeIterator** %ei, align 8, !dbg !5768
  call void @ccgEdgeIterator_next(%struct.CCGEdgeIterator* %38), !dbg !5769
  br label %for.cond15, !dbg !5770, !llvm.loop !5771

for.end28:                                        ; preds = %for.cond15
  %39 = load %struct.CCGEdgeIterator*, %struct.CCGEdgeIterator** %ei, align 8, !dbg !5773
  call void @ccgEdgeIterator_free(%struct.CCGEdgeIterator* %39), !dbg !5774
  %40 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !5775
  %call29 = call %struct.CCGFaceIterator* @ccgSubSurf_getFaceIterator(%struct.CCGSubSurf* %40), !dbg !5777
  store %struct.CCGFaceIterator* %call29, %struct.CCGFaceIterator** %fi, align 8, !dbg !5778
  br label %for.cond30, !dbg !5779

for.cond30:                                       ; preds = %for.inc57, %for.end28
  %41 = load %struct.CCGFaceIterator*, %struct.CCGFaceIterator** %fi, align 8, !dbg !5780
  %call31 = call i32 @ccgFaceIterator_isStopped(%struct.CCGFaceIterator* %41), !dbg !5782
  %tobool32 = icmp ne i32 %call31, 0, !dbg !5783
  %lnot33 = xor i1 %tobool32, true, !dbg !5783
  br i1 %lnot33, label %for.body34, label %for.end58, !dbg !5784

for.body34:                                       ; preds = %for.cond30
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f, metadata !5785, metadata !DIExpression()), !dbg !5787
  %42 = load %struct.CCGFaceIterator*, %struct.CCGFaceIterator** %fi, align 8, !dbg !5788
  %call35 = call %struct.CCGFace* @ccgFaceIterator_getCurrent(%struct.CCGFaceIterator* %42), !dbg !5789
  store %struct.CCGFace* %call35, %struct.CCGFace** %f, align 8, !dbg !5787
  call void @llvm.dbg.declare(metadata i32* %S, metadata !5790, metadata !DIExpression()), !dbg !5791
  call void @llvm.dbg.declare(metadata i32* %x, metadata !5792, metadata !DIExpression()), !dbg !5793
  call void @llvm.dbg.declare(metadata i32* %y, metadata !5794, metadata !DIExpression()), !dbg !5795
  call void @llvm.dbg.declare(metadata i32* %numVerts, metadata !5796, metadata !DIExpression()), !dbg !5797
  %43 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !5798
  %call36 = call i32 @ccgSubSurf_getFaceNumVerts(%struct.CCGFace* %43), !dbg !5799
  store i32 %call36, i32* %numVerts, align 4, !dbg !5797
  store i32 0, i32* %S, align 4, !dbg !5800
  br label %for.cond37, !dbg !5802

for.cond37:                                       ; preds = %for.inc54, %for.body34
  %44 = load i32, i32* %S, align 4, !dbg !5803
  %45 = load i32, i32* %numVerts, align 4, !dbg !5805
  %cmp38 = icmp slt i32 %44, %45, !dbg !5806
  br i1 %cmp38, label %for.body39, label %for.end56, !dbg !5807

for.body39:                                       ; preds = %for.cond37
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %faceGridData, metadata !5808, metadata !DIExpression()), !dbg !5810
  %46 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !5811
  %47 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !5812
  %48 = load i32, i32* %S, align 4, !dbg !5813
  %call40 = call i8* @ccgSubSurf_getFaceGridDataArray(%struct.CCGSubSurf* %46, %struct.CCGFace* %47, i32 %48), !dbg !5814
  %49 = bitcast i8* %call40 to %struct.CCGElem*, !dbg !5814
  store %struct.CCGElem* %49, %struct.CCGElem** %faceGridData, align 8, !dbg !5810
  store i32 0, i32* %y, align 4, !dbg !5815
  br label %for.cond41, !dbg !5817

for.cond41:                                       ; preds = %for.inc51, %for.body39
  %50 = load i32, i32* %y, align 4, !dbg !5818
  %51 = load i32, i32* %gridSize, align 4, !dbg !5820
  %cmp42 = icmp slt i32 %50, %51, !dbg !5821
  br i1 %cmp42, label %for.body43, label %for.end53, !dbg !5822

for.body43:                                       ; preds = %for.cond41
  store i32 0, i32* %x, align 4, !dbg !5823
  br label %for.cond44, !dbg !5825

for.cond44:                                       ; preds = %for.inc48, %for.body43
  %52 = load i32, i32* %x, align 4, !dbg !5826
  %53 = load i32, i32* %gridSize, align 4, !dbg !5828
  %cmp45 = icmp slt i32 %52, %53, !dbg !5829
  br i1 %cmp45, label %for.body46, label %for.end50, !dbg !5830

for.body46:                                       ; preds = %for.cond44
  %54 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !5831
  %55 = load i32, i32* %x, align 4, !dbg !5832
  %56 = load i32, i32* %y, align 4, !dbg !5833
  %call47 = call float* @CCG_grid_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %54, i32 %55, i32 %56), !dbg !5834
  %57 = load float*, float** %r_min.addr, align 8, !dbg !5835
  %58 = load float*, float** %r_max.addr, align 8, !dbg !5836
  call void @minmax_v3_v3v3(float* %call47, float* %57, float* %58), !dbg !5837
  br label %for.inc48, !dbg !5837

for.inc48:                                        ; preds = %for.body46
  %59 = load i32, i32* %x, align 4, !dbg !5838
  %inc49 = add nsw i32 %59, 1, !dbg !5838
  store i32 %inc49, i32* %x, align 4, !dbg !5838
  br label %for.cond44, !dbg !5839, !llvm.loop !5840

for.end50:                                        ; preds = %for.cond44
  br label %for.inc51, !dbg !5841

for.inc51:                                        ; preds = %for.end50
  %60 = load i32, i32* %y, align 4, !dbg !5842
  %inc52 = add nsw i32 %60, 1, !dbg !5842
  store i32 %inc52, i32* %y, align 4, !dbg !5842
  br label %for.cond41, !dbg !5843, !llvm.loop !5844

for.end53:                                        ; preds = %for.cond41
  br label %for.inc54, !dbg !5846

for.inc54:                                        ; preds = %for.end53
  %61 = load i32, i32* %S, align 4, !dbg !5847
  %inc55 = add nsw i32 %61, 1, !dbg !5847
  store i32 %inc55, i32* %S, align 4, !dbg !5847
  br label %for.cond37, !dbg !5848, !llvm.loop !5849

for.end56:                                        ; preds = %for.cond37
  br label %for.inc57, !dbg !5851

for.inc57:                                        ; preds = %for.end56
  %62 = load %struct.CCGFaceIterator*, %struct.CCGFaceIterator** %fi, align 8, !dbg !5852
  call void @ccgFaceIterator_next(%struct.CCGFaceIterator* %62), !dbg !5853
  br label %for.cond30, !dbg !5854, !llvm.loop !5855

for.end58:                                        ; preds = %for.cond30
  %63 = load %struct.CCGFaceIterator*, %struct.CCGFaceIterator** %fi, align 8, !dbg !5857
  call void @ccgFaceIterator_free(%struct.CCGFaceIterator* %63), !dbg !5858
  ret void, !dbg !5859
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ccgDM_getNumVerts(%struct.DerivedMesh* %dm) #0 !dbg !5860 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %ccgdm = alloca %struct.CCGDerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !5861, metadata !DIExpression()), !dbg !5862
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm, metadata !5863, metadata !DIExpression()), !dbg !5864
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5865
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CCGDerivedMesh*, !dbg !5866
  store %struct.CCGDerivedMesh* %1, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !5864
  %2 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !5867
  %ss = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %2, i32 0, i32 1, !dbg !5868
  %3 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !5868
  %call = call i32 @ccgSubSurf_getNumFinalVerts(%struct.CCGSubSurf* %3), !dbg !5869
  ret i32 %call, !dbg !5870
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ccgDM_getNumEdges(%struct.DerivedMesh* %dm) #0 !dbg !5871 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %ccgdm = alloca %struct.CCGDerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !5872, metadata !DIExpression()), !dbg !5873
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm, metadata !5874, metadata !DIExpression()), !dbg !5875
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5876
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CCGDerivedMesh*, !dbg !5877
  store %struct.CCGDerivedMesh* %1, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !5875
  %2 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !5878
  %ss = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %2, i32 0, i32 1, !dbg !5879
  %3 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !5879
  %call = call i32 @ccgSubSurf_getNumFinalEdges(%struct.CCGSubSurf* %3), !dbg !5880
  ret i32 %call, !dbg !5881
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ccgDM_getNumTessFaces(%struct.DerivedMesh* %dm) #0 !dbg !5882 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %ccgdm = alloca %struct.CCGDerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !5883, metadata !DIExpression()), !dbg !5884
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm, metadata !5885, metadata !DIExpression()), !dbg !5886
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5887
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CCGDerivedMesh*, !dbg !5888
  store %struct.CCGDerivedMesh* %1, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !5886
  %2 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !5889
  %ss = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %2, i32 0, i32 1, !dbg !5890
  %3 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !5890
  %call = call i32 @ccgSubSurf_getNumFinalFaces(%struct.CCGSubSurf* %3), !dbg !5891
  ret i32 %call, !dbg !5892
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ccgDM_getNumLoops(%struct.DerivedMesh* %dm) #0 !dbg !5893 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %ccgdm = alloca %struct.CCGDerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !5894, metadata !DIExpression()), !dbg !5895
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm, metadata !5896, metadata !DIExpression()), !dbg !5897
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5898
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CCGDerivedMesh*, !dbg !5899
  store %struct.CCGDerivedMesh* %1, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !5897
  %2 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !5900
  %ss = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %2, i32 0, i32 1, !dbg !5901
  %3 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !5901
  %call = call i32 @ccgSubSurf_getNumFinalFaces(%struct.CCGSubSurf* %3), !dbg !5902
  %mul = mul nsw i32 4, %call, !dbg !5903
  ret i32 %mul, !dbg !5904
}

; Function Attrs: noinline nounwind uwtable
define internal void @ccgDM_getFinalVert(%struct.DerivedMesh* %dm, i32 %vertNum, %struct.MVert* %mv) #0 !dbg !5905 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %vertNum.addr = alloca i32, align 4
  %mv.addr = alloca %struct.MVert*, align 8
  %ccgdm = alloca %struct.CCGDerivedMesh*, align 8
  %ss = alloca %struct.CCGSubSurf*, align 8
  %vd = alloca %struct.CCGElem*, align 8
  %key = alloca %struct.CCGKey, align 4
  %i = alloca i32, align 4
  %lastface = alloca i32, align 4
  %f = alloca %struct.CCGFace*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %grid = alloca i32, align 4
  %numVerts = alloca i32, align 4
  %offset = alloca i32, align 4
  %gridSize = alloca i32, align 4
  %gridSideVerts = alloca i32, align 4
  %gridInternalVerts = alloca i32, align 4
  %gridSideEnd = alloca i32, align 4
  %gridInternalEnd = alloca i32, align 4
  %e = alloca %struct.CCGEdge*, align 8
  %lastedge = alloca i32, align 4
  %x69 = alloca i32, align 4
  %v = alloca %struct.CCGVert*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !5908, metadata !DIExpression()), !dbg !5909
  store i32 %vertNum, i32* %vertNum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vertNum.addr, metadata !5910, metadata !DIExpression()), !dbg !5911
  store %struct.MVert* %mv, %struct.MVert** %mv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MVert** %mv.addr, metadata !5912, metadata !DIExpression()), !dbg !5913
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm, metadata !5914, metadata !DIExpression()), !dbg !5915
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5916
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CCGDerivedMesh*, !dbg !5917
  store %struct.CCGDerivedMesh* %1, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !5915
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss, metadata !5918, metadata !DIExpression()), !dbg !5919
  %2 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !5920
  %ss1 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %2, i32 0, i32 1, !dbg !5921
  %3 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss1, align 8, !dbg !5921
  store %struct.CCGSubSurf* %3, %struct.CCGSubSurf** %ss, align 8, !dbg !5919
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %vd, metadata !5922, metadata !DIExpression()), !dbg !5923
  call void @llvm.dbg.declare(metadata %struct.CCGKey* %key, metadata !5924, metadata !DIExpression()), !dbg !5925
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5926, metadata !DIExpression()), !dbg !5927
  %4 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !5928
  call void @CCG_key_top_level(%struct.CCGKey* %key, %struct.CCGSubSurf* %4), !dbg !5929
  %5 = load %struct.MVert*, %struct.MVert** %mv.addr, align 8, !dbg !5930
  %6 = bitcast %struct.MVert* %5 to i8*, !dbg !5931
  call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 0, i64 20, i1 false), !dbg !5931
  %7 = load i32, i32* %vertNum.addr, align 4, !dbg !5932
  %8 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !5934
  %edgeMap = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %8, i32 0, i32 6, !dbg !5935
  %9 = load %struct.anon.0*, %struct.anon.0** %edgeMap, align 8, !dbg !5935
  %arrayidx = getelementptr inbounds %struct.anon.0, %struct.anon.0* %9, i64 0, !dbg !5934
  %startVert = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx, i32 0, i32 0, !dbg !5936
  %10 = load i32, i32* %startVert, align 8, !dbg !5936
  %cmp = icmp slt i32 %7, %10, !dbg !5937
  br i1 %cmp, label %land.lhs.true, label %if.else59, !dbg !5938

land.lhs.true:                                    ; preds = %entry
  %11 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !5939
  %call = call i32 @ccgSubSurf_getNumFaces(%struct.CCGSubSurf* %11), !dbg !5940
  %cmp2 = icmp sgt i32 %call, 0, !dbg !5941
  br i1 %cmp2, label %if.then, label %if.else59, !dbg !5942

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %lastface, metadata !5943, metadata !DIExpression()), !dbg !5945
  %12 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !5946
  %call3 = call i32 @ccgSubSurf_getNumFaces(%struct.CCGSubSurf* %12), !dbg !5947
  %sub = sub nsw i32 %call3, 1, !dbg !5948
  store i32 %sub, i32* %lastface, align 4, !dbg !5945
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f, metadata !5949, metadata !DIExpression()), !dbg !5950
  call void @llvm.dbg.declare(metadata i32* %x, metadata !5951, metadata !DIExpression()), !dbg !5952
  call void @llvm.dbg.declare(metadata i32* %y, metadata !5953, metadata !DIExpression()), !dbg !5954
  call void @llvm.dbg.declare(metadata i32* %grid, metadata !5955, metadata !DIExpression()), !dbg !5956
  call void @llvm.dbg.declare(metadata i32* %numVerts, metadata !5957, metadata !DIExpression()), !dbg !5958
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !5959, metadata !DIExpression()), !dbg !5960
  call void @llvm.dbg.declare(metadata i32* %gridSize, metadata !5961, metadata !DIExpression()), !dbg !5962
  %13 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !5963
  %call4 = call i32 @ccgSubSurf_getGridSize(%struct.CCGSubSurf* %13), !dbg !5964
  store i32 %call4, i32* %gridSize, align 4, !dbg !5962
  call void @llvm.dbg.declare(metadata i32* %gridSideVerts, metadata !5965, metadata !DIExpression()), !dbg !5966
  call void @llvm.dbg.declare(metadata i32* %gridInternalVerts, metadata !5967, metadata !DIExpression()), !dbg !5968
  call void @llvm.dbg.declare(metadata i32* %gridSideEnd, metadata !5969, metadata !DIExpression()), !dbg !5970
  call void @llvm.dbg.declare(metadata i32* %gridInternalEnd, metadata !5971, metadata !DIExpression()), !dbg !5972
  store i32 0, i32* %i, align 4, !dbg !5973
  br label %while.cond, !dbg !5974

while.cond:                                       ; preds = %while.body, %if.then
  %14 = load i32, i32* %i, align 4, !dbg !5975
  %15 = load i32, i32* %lastface, align 4, !dbg !5976
  %cmp5 = icmp slt i32 %14, %15, !dbg !5977
  br i1 %cmp5, label %land.rhs, label %land.end, !dbg !5978

land.rhs:                                         ; preds = %while.cond
  %16 = load i32, i32* %vertNum.addr, align 4, !dbg !5979
  %17 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !5980
  %faceMap = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %17, i32 0, i32 7, !dbg !5981
  %18 = load %struct.anon.1*, %struct.anon.1** %faceMap, align 8, !dbg !5981
  %19 = load i32, i32* %i, align 4, !dbg !5982
  %add = add nsw i32 %19, 1, !dbg !5983
  %idxprom = sext i32 %add to i64, !dbg !5980
  %arrayidx6 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %18, i64 %idxprom, !dbg !5980
  %startVert7 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx6, i32 0, i32 0, !dbg !5984
  %20 = load i32, i32* %startVert7, align 8, !dbg !5984
  %cmp8 = icmp sge i32 %16, %20, !dbg !5985
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %21 = phi i1 [ false, %while.cond ], [ %cmp8, %land.rhs ], !dbg !5986
  br i1 %21, label %while.body, label %while.end, !dbg !5974

while.body:                                       ; preds = %land.end
  %22 = load i32, i32* %i, align 4, !dbg !5987
  %inc = add nsw i32 %22, 1, !dbg !5987
  store i32 %inc, i32* %i, align 4, !dbg !5987
  br label %while.cond, !dbg !5974, !llvm.loop !5989

while.end:                                        ; preds = %land.end
  %23 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !5991
  %faceMap9 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %23, i32 0, i32 7, !dbg !5992
  %24 = load %struct.anon.1*, %struct.anon.1** %faceMap9, align 8, !dbg !5992
  %25 = load i32, i32* %i, align 4, !dbg !5993
  %idxprom10 = sext i32 %25 to i64, !dbg !5991
  %arrayidx11 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %24, i64 %idxprom10, !dbg !5991
  %face = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx11, i32 0, i32 3, !dbg !5994
  %26 = load %struct.CCGFace*, %struct.CCGFace** %face, align 8, !dbg !5994
  store %struct.CCGFace* %26, %struct.CCGFace** %f, align 8, !dbg !5995
  %27 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !5996
  %call12 = call i32 @ccgSubSurf_getFaceNumVerts(%struct.CCGFace* %27), !dbg !5997
  store i32 %call12, i32* %numVerts, align 4, !dbg !5998
  %28 = load i32, i32* %gridSize, align 4, !dbg !5999
  %sub13 = sub nsw i32 %28, 2, !dbg !6000
  store i32 %sub13, i32* %gridSideVerts, align 4, !dbg !6001
  %29 = load i32, i32* %gridSideVerts, align 4, !dbg !6002
  %30 = load i32, i32* %gridSideVerts, align 4, !dbg !6003
  %mul = mul nsw i32 %29, %30, !dbg !6004
  store i32 %mul, i32* %gridInternalVerts, align 4, !dbg !6005
  %31 = load i32, i32* %numVerts, align 4, !dbg !6006
  %32 = load i32, i32* %gridSideVerts, align 4, !dbg !6007
  %mul14 = mul nsw i32 %31, %32, !dbg !6008
  %add15 = add nsw i32 1, %mul14, !dbg !6009
  store i32 %add15, i32* %gridSideEnd, align 4, !dbg !6010
  %33 = load i32, i32* %gridSideEnd, align 4, !dbg !6011
  %34 = load i32, i32* %numVerts, align 4, !dbg !6012
  %35 = load i32, i32* %gridInternalVerts, align 4, !dbg !6013
  %mul16 = mul nsw i32 %34, %35, !dbg !6014
  %add17 = add nsw i32 %33, %mul16, !dbg !6015
  store i32 %add17, i32* %gridInternalEnd, align 4, !dbg !6016
  %36 = load i32, i32* %vertNum.addr, align 4, !dbg !6017
  %37 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !6018
  %faceMap18 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %37, i32 0, i32 7, !dbg !6019
  %38 = load %struct.anon.1*, %struct.anon.1** %faceMap18, align 8, !dbg !6019
  %39 = load i32, i32* %i, align 4, !dbg !6020
  %idxprom19 = sext i32 %39 to i64, !dbg !6018
  %arrayidx20 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %38, i64 %idxprom19, !dbg !6018
  %startVert21 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx20, i32 0, i32 0, !dbg !6021
  %40 = load i32, i32* %startVert21, align 8, !dbg !6021
  %sub22 = sub nsw i32 %36, %40, !dbg !6022
  store i32 %sub22, i32* %offset, align 4, !dbg !6023
  %41 = load i32, i32* %offset, align 4, !dbg !6024
  %cmp23 = icmp slt i32 %41, 1, !dbg !6026
  br i1 %cmp23, label %if.then24, label %if.else, !dbg !6027

if.then24:                                        ; preds = %while.end
  %42 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !6028
  %call25 = call i8* @ccgSubSurf_getFaceCenterData(%struct.CCGFace* %42), !dbg !6030
  %43 = bitcast i8* %call25 to %struct.CCGElem*, !dbg !6030
  store %struct.CCGElem* %43, %struct.CCGElem** %vd, align 8, !dbg !6031
  %44 = load %struct.MVert*, %struct.MVert** %mv.addr, align 8, !dbg !6032
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %44, i32 0, i32 0, !dbg !6033
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !6032
  %45 = load %struct.CCGElem*, %struct.CCGElem** %vd, align 8, !dbg !6034
  %call26 = call float* @CCG_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %45), !dbg !6035
  call void @copy_v3_v3(float* %arraydecay, float* %call26), !dbg !6036
  %46 = load %struct.MVert*, %struct.MVert** %mv.addr, align 8, !dbg !6037
  %no = getelementptr inbounds %struct.MVert, %struct.MVert* %46, i32 0, i32 1, !dbg !6038
  %arraydecay27 = getelementptr inbounds [3 x i16], [3 x i16]* %no, i64 0, i64 0, !dbg !6037
  %47 = load %struct.CCGElem*, %struct.CCGElem** %vd, align 8, !dbg !6039
  %call28 = call float* @CCG_elem_no(%struct.CCGKey* %key, %struct.CCGElem* %47), !dbg !6040
  call void @normal_float_to_short_v3(i16* %arraydecay27, float* %call28), !dbg !6041
  br label %if.end58, !dbg !6042

if.else:                                          ; preds = %while.end
  %48 = load i32, i32* %offset, align 4, !dbg !6043
  %49 = load i32, i32* %gridSideEnd, align 4, !dbg !6045
  %cmp29 = icmp slt i32 %48, %49, !dbg !6046
  br i1 %cmp29, label %if.then30, label %if.else40, !dbg !6047

if.then30:                                        ; preds = %if.else
  %50 = load i32, i32* %offset, align 4, !dbg !6048
  %sub31 = sub nsw i32 %50, 1, !dbg !6048
  store i32 %sub31, i32* %offset, align 4, !dbg !6048
  %51 = load i32, i32* %offset, align 4, !dbg !6050
  %52 = load i32, i32* %gridSideVerts, align 4, !dbg !6051
  %div = sdiv i32 %51, %52, !dbg !6052
  store i32 %div, i32* %grid, align 4, !dbg !6053
  %53 = load i32, i32* %offset, align 4, !dbg !6054
  %54 = load i32, i32* %gridSideVerts, align 4, !dbg !6055
  %rem = srem i32 %53, %54, !dbg !6056
  %add32 = add nsw i32 %rem, 1, !dbg !6057
  store i32 %add32, i32* %x, align 4, !dbg !6058
  %55 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !6059
  %56 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !6060
  %57 = load i32, i32* %grid, align 4, !dbg !6061
  %58 = load i32, i32* %x, align 4, !dbg !6062
  %call33 = call i8* @ccgSubSurf_getFaceGridEdgeData(%struct.CCGSubSurf* %55, %struct.CCGFace* %56, i32 %57, i32 %58), !dbg !6063
  %59 = bitcast i8* %call33 to %struct.CCGElem*, !dbg !6063
  store %struct.CCGElem* %59, %struct.CCGElem** %vd, align 8, !dbg !6064
  %60 = load %struct.MVert*, %struct.MVert** %mv.addr, align 8, !dbg !6065
  %co34 = getelementptr inbounds %struct.MVert, %struct.MVert* %60, i32 0, i32 0, !dbg !6066
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %co34, i64 0, i64 0, !dbg !6065
  %61 = load %struct.CCGElem*, %struct.CCGElem** %vd, align 8, !dbg !6067
  %call36 = call float* @CCG_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %61), !dbg !6068
  call void @copy_v3_v3(float* %arraydecay35, float* %call36), !dbg !6069
  %62 = load %struct.MVert*, %struct.MVert** %mv.addr, align 8, !dbg !6070
  %no37 = getelementptr inbounds %struct.MVert, %struct.MVert* %62, i32 0, i32 1, !dbg !6071
  %arraydecay38 = getelementptr inbounds [3 x i16], [3 x i16]* %no37, i64 0, i64 0, !dbg !6070
  %63 = load %struct.CCGElem*, %struct.CCGElem** %vd, align 8, !dbg !6072
  %call39 = call float* @CCG_elem_no(%struct.CCGKey* %key, %struct.CCGElem* %63), !dbg !6073
  call void @normal_float_to_short_v3(i16* %arraydecay38, float* %call39), !dbg !6074
  br label %if.end57, !dbg !6075

if.else40:                                        ; preds = %if.else
  %64 = load i32, i32* %offset, align 4, !dbg !6076
  %65 = load i32, i32* %gridInternalEnd, align 4, !dbg !6078
  %cmp41 = icmp slt i32 %64, %65, !dbg !6079
  br i1 %cmp41, label %if.then42, label %if.end, !dbg !6080

if.then42:                                        ; preds = %if.else40
  %66 = load i32, i32* %gridSideEnd, align 4, !dbg !6081
  %67 = load i32, i32* %offset, align 4, !dbg !6083
  %sub43 = sub nsw i32 %67, %66, !dbg !6083
  store i32 %sub43, i32* %offset, align 4, !dbg !6083
  %68 = load i32, i32* %offset, align 4, !dbg !6084
  %69 = load i32, i32* %gridInternalVerts, align 4, !dbg !6085
  %div44 = sdiv i32 %68, %69, !dbg !6086
  store i32 %div44, i32* %grid, align 4, !dbg !6087
  %70 = load i32, i32* %gridInternalVerts, align 4, !dbg !6088
  %71 = load i32, i32* %offset, align 4, !dbg !6089
  %rem45 = srem i32 %71, %70, !dbg !6089
  store i32 %rem45, i32* %offset, align 4, !dbg !6089
  %72 = load i32, i32* %offset, align 4, !dbg !6090
  %73 = load i32, i32* %gridSideVerts, align 4, !dbg !6091
  %div46 = sdiv i32 %72, %73, !dbg !6092
  %add47 = add nsw i32 %div46, 1, !dbg !6093
  store i32 %add47, i32* %y, align 4, !dbg !6094
  %74 = load i32, i32* %offset, align 4, !dbg !6095
  %75 = load i32, i32* %gridSideVerts, align 4, !dbg !6096
  %rem48 = srem i32 %74, %75, !dbg !6097
  %add49 = add nsw i32 %rem48, 1, !dbg !6098
  store i32 %add49, i32* %x, align 4, !dbg !6099
  %76 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !6100
  %77 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !6101
  %78 = load i32, i32* %grid, align 4, !dbg !6102
  %79 = load i32, i32* %x, align 4, !dbg !6103
  %80 = load i32, i32* %y, align 4, !dbg !6104
  %call50 = call i8* @ccgSubSurf_getFaceGridData(%struct.CCGSubSurf* %76, %struct.CCGFace* %77, i32 %78, i32 %79, i32 %80), !dbg !6105
  %81 = bitcast i8* %call50 to %struct.CCGElem*, !dbg !6105
  store %struct.CCGElem* %81, %struct.CCGElem** %vd, align 8, !dbg !6106
  %82 = load %struct.MVert*, %struct.MVert** %mv.addr, align 8, !dbg !6107
  %co51 = getelementptr inbounds %struct.MVert, %struct.MVert* %82, i32 0, i32 0, !dbg !6108
  %arraydecay52 = getelementptr inbounds [3 x float], [3 x float]* %co51, i64 0, i64 0, !dbg !6107
  %83 = load %struct.CCGElem*, %struct.CCGElem** %vd, align 8, !dbg !6109
  %call53 = call float* @CCG_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %83), !dbg !6110
  call void @copy_v3_v3(float* %arraydecay52, float* %call53), !dbg !6111
  %84 = load %struct.MVert*, %struct.MVert** %mv.addr, align 8, !dbg !6112
  %no54 = getelementptr inbounds %struct.MVert, %struct.MVert* %84, i32 0, i32 1, !dbg !6113
  %arraydecay55 = getelementptr inbounds [3 x i16], [3 x i16]* %no54, i64 0, i64 0, !dbg !6112
  %85 = load %struct.CCGElem*, %struct.CCGElem** %vd, align 8, !dbg !6114
  %call56 = call float* @CCG_elem_no(%struct.CCGKey* %key, %struct.CCGElem* %85), !dbg !6115
  call void @normal_float_to_short_v3(i16* %arraydecay55, float* %call56), !dbg !6116
  br label %if.end, !dbg !6117

if.end:                                           ; preds = %if.then42, %if.else40
  br label %if.end57

if.end57:                                         ; preds = %if.end, %if.then30
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.then24
  br label %if.end115, !dbg !6118

if.else59:                                        ; preds = %land.lhs.true, %entry
  %86 = load i32, i32* %vertNum.addr, align 4, !dbg !6119
  %87 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !6121
  %vertMap = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %87, i32 0, i32 5, !dbg !6122
  %88 = load %struct.anon*, %struct.anon** %vertMap, align 8, !dbg !6122
  %arrayidx60 = getelementptr inbounds %struct.anon, %struct.anon* %88, i64 0, !dbg !6121
  %startVert61 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx60, i32 0, i32 0, !dbg !6123
  %89 = load i32, i32* %startVert61, align 8, !dbg !6123
  %cmp62 = icmp slt i32 %86, %89, !dbg !6124
  br i1 %cmp62, label %land.lhs.true63, label %if.else99, !dbg !6125

land.lhs.true63:                                  ; preds = %if.else59
  %90 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !6126
  %call64 = call i32 @ccgSubSurf_getNumEdges(%struct.CCGSubSurf* %90), !dbg !6127
  %cmp65 = icmp sgt i32 %call64, 0, !dbg !6128
  br i1 %cmp65, label %if.then66, label %if.else99, !dbg !6129

if.then66:                                        ; preds = %land.lhs.true63
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e, metadata !6130, metadata !DIExpression()), !dbg !6132
  call void @llvm.dbg.declare(metadata i32* %lastedge, metadata !6133, metadata !DIExpression()), !dbg !6134
  %91 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !6135
  %call67 = call i32 @ccgSubSurf_getNumEdges(%struct.CCGSubSurf* %91), !dbg !6136
  %sub68 = sub nsw i32 %call67, 1, !dbg !6137
  store i32 %sub68, i32* %lastedge, align 4, !dbg !6134
  call void @llvm.dbg.declare(metadata i32* %x69, metadata !6138, metadata !DIExpression()), !dbg !6139
  store i32 0, i32* %i, align 4, !dbg !6140
  br label %while.cond70, !dbg !6141

while.cond70:                                     ; preds = %while.body80, %if.then66
  %92 = load i32, i32* %i, align 4, !dbg !6142
  %93 = load i32, i32* %lastedge, align 4, !dbg !6143
  %cmp71 = icmp slt i32 %92, %93, !dbg !6144
  br i1 %cmp71, label %land.rhs72, label %land.end79, !dbg !6145

land.rhs72:                                       ; preds = %while.cond70
  %94 = load i32, i32* %vertNum.addr, align 4, !dbg !6146
  %95 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !6147
  %edgeMap73 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %95, i32 0, i32 6, !dbg !6148
  %96 = load %struct.anon.0*, %struct.anon.0** %edgeMap73, align 8, !dbg !6148
  %97 = load i32, i32* %i, align 4, !dbg !6149
  %add74 = add nsw i32 %97, 1, !dbg !6150
  %idxprom75 = sext i32 %add74 to i64, !dbg !6147
  %arrayidx76 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %96, i64 %idxprom75, !dbg !6147
  %startVert77 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx76, i32 0, i32 0, !dbg !6151
  %98 = load i32, i32* %startVert77, align 8, !dbg !6151
  %cmp78 = icmp sge i32 %94, %98, !dbg !6152
  br label %land.end79

land.end79:                                       ; preds = %land.rhs72, %while.cond70
  %99 = phi i1 [ false, %while.cond70 ], [ %cmp78, %land.rhs72 ], !dbg !6153
  br i1 %99, label %while.body80, label %while.end82, !dbg !6141

while.body80:                                     ; preds = %land.end79
  %100 = load i32, i32* %i, align 4, !dbg !6154
  %inc81 = add nsw i32 %100, 1, !dbg !6154
  store i32 %inc81, i32* %i, align 4, !dbg !6154
  br label %while.cond70, !dbg !6141, !llvm.loop !6156

while.end82:                                      ; preds = %land.end79
  %101 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !6158
  %edgeMap83 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %101, i32 0, i32 6, !dbg !6159
  %102 = load %struct.anon.0*, %struct.anon.0** %edgeMap83, align 8, !dbg !6159
  %103 = load i32, i32* %i, align 4, !dbg !6160
  %idxprom84 = sext i32 %103 to i64, !dbg !6158
  %arrayidx85 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %102, i64 %idxprom84, !dbg !6158
  %edge = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx85, i32 0, i32 2, !dbg !6161
  %104 = load %struct.CCGEdge*, %struct.CCGEdge** %edge, align 8, !dbg !6161
  store %struct.CCGEdge* %104, %struct.CCGEdge** %e, align 8, !dbg !6162
  %105 = load i32, i32* %vertNum.addr, align 4, !dbg !6163
  %106 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !6164
  %edgeMap86 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %106, i32 0, i32 6, !dbg !6165
  %107 = load %struct.anon.0*, %struct.anon.0** %edgeMap86, align 8, !dbg !6165
  %108 = load i32, i32* %i, align 4, !dbg !6166
  %idxprom87 = sext i32 %108 to i64, !dbg !6164
  %arrayidx88 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %107, i64 %idxprom87, !dbg !6164
  %startVert89 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx88, i32 0, i32 0, !dbg !6167
  %109 = load i32, i32* %startVert89, align 8, !dbg !6167
  %sub90 = sub nsw i32 %105, %109, !dbg !6168
  %add91 = add nsw i32 %sub90, 1, !dbg !6169
  store i32 %add91, i32* %x69, align 4, !dbg !6170
  %110 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !6171
  %111 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !6172
  %112 = load i32, i32* %x69, align 4, !dbg !6173
  %call92 = call i8* @ccgSubSurf_getEdgeData(%struct.CCGSubSurf* %110, %struct.CCGEdge* %111, i32 %112), !dbg !6174
  %113 = bitcast i8* %call92 to %struct.CCGElem*, !dbg !6174
  store %struct.CCGElem* %113, %struct.CCGElem** %vd, align 8, !dbg !6175
  %114 = load %struct.MVert*, %struct.MVert** %mv.addr, align 8, !dbg !6176
  %co93 = getelementptr inbounds %struct.MVert, %struct.MVert* %114, i32 0, i32 0, !dbg !6177
  %arraydecay94 = getelementptr inbounds [3 x float], [3 x float]* %co93, i64 0, i64 0, !dbg !6176
  %115 = load %struct.CCGElem*, %struct.CCGElem** %vd, align 8, !dbg !6178
  %call95 = call float* @CCG_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %115), !dbg !6179
  call void @copy_v3_v3(float* %arraydecay94, float* %call95), !dbg !6180
  %116 = load %struct.MVert*, %struct.MVert** %mv.addr, align 8, !dbg !6181
  %no96 = getelementptr inbounds %struct.MVert, %struct.MVert* %116, i32 0, i32 1, !dbg !6182
  %arraydecay97 = getelementptr inbounds [3 x i16], [3 x i16]* %no96, i64 0, i64 0, !dbg !6181
  %117 = load %struct.CCGElem*, %struct.CCGElem** %vd, align 8, !dbg !6183
  %call98 = call float* @CCG_elem_no(%struct.CCGKey* %key, %struct.CCGElem* %117), !dbg !6184
  call void @normal_float_to_short_v3(i16* %arraydecay97, float* %call98), !dbg !6185
  br label %if.end114, !dbg !6186

if.else99:                                        ; preds = %land.lhs.true63, %if.else59
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v, metadata !6187, metadata !DIExpression()), !dbg !6189
  %118 = load i32, i32* %vertNum.addr, align 4, !dbg !6190
  %119 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !6191
  %vertMap100 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %119, i32 0, i32 5, !dbg !6192
  %120 = load %struct.anon*, %struct.anon** %vertMap100, align 8, !dbg !6192
  %arrayidx101 = getelementptr inbounds %struct.anon, %struct.anon* %120, i64 0, !dbg !6191
  %startVert102 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx101, i32 0, i32 0, !dbg !6193
  %121 = load i32, i32* %startVert102, align 8, !dbg !6193
  %sub103 = sub nsw i32 %118, %121, !dbg !6194
  store i32 %sub103, i32* %i, align 4, !dbg !6195
  %122 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !6196
  %vertMap104 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %122, i32 0, i32 5, !dbg !6197
  %123 = load %struct.anon*, %struct.anon** %vertMap104, align 8, !dbg !6197
  %124 = load i32, i32* %i, align 4, !dbg !6198
  %idxprom105 = sext i32 %124 to i64, !dbg !6196
  %arrayidx106 = getelementptr inbounds %struct.anon, %struct.anon* %123, i64 %idxprom105, !dbg !6196
  %vert = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx106, i32 0, i32 1, !dbg !6199
  %125 = load %struct.CCGVert*, %struct.CCGVert** %vert, align 8, !dbg !6199
  store %struct.CCGVert* %125, %struct.CCGVert** %v, align 8, !dbg !6200
  %126 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !6201
  %127 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !6202
  %call107 = call i8* @ccgSubSurf_getVertData(%struct.CCGSubSurf* %126, %struct.CCGVert* %127), !dbg !6203
  %128 = bitcast i8* %call107 to %struct.CCGElem*, !dbg !6203
  store %struct.CCGElem* %128, %struct.CCGElem** %vd, align 8, !dbg !6204
  %129 = load %struct.MVert*, %struct.MVert** %mv.addr, align 8, !dbg !6205
  %co108 = getelementptr inbounds %struct.MVert, %struct.MVert* %129, i32 0, i32 0, !dbg !6206
  %arraydecay109 = getelementptr inbounds [3 x float], [3 x float]* %co108, i64 0, i64 0, !dbg !6205
  %130 = load %struct.CCGElem*, %struct.CCGElem** %vd, align 8, !dbg !6207
  %call110 = call float* @CCG_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %130), !dbg !6208
  call void @copy_v3_v3(float* %arraydecay109, float* %call110), !dbg !6209
  %131 = load %struct.MVert*, %struct.MVert** %mv.addr, align 8, !dbg !6210
  %no111 = getelementptr inbounds %struct.MVert, %struct.MVert* %131, i32 0, i32 1, !dbg !6211
  %arraydecay112 = getelementptr inbounds [3 x i16], [3 x i16]* %no111, i64 0, i64 0, !dbg !6210
  %132 = load %struct.CCGElem*, %struct.CCGElem** %vd, align 8, !dbg !6212
  %call113 = call float* @CCG_elem_no(%struct.CCGKey* %key, %struct.CCGElem* %132), !dbg !6213
  call void @normal_float_to_short_v3(i16* %arraydecay112, float* %call113), !dbg !6214
  br label %if.end114

if.end114:                                        ; preds = %if.else99, %while.end82
  br label %if.end115

if.end115:                                        ; preds = %if.end114, %if.end58
  ret void, !dbg !6215
}

; Function Attrs: noinline nounwind uwtable
define internal void @ccgDM_getFinalEdge(%struct.DerivedMesh* %dm, i32 %edgeNum, %struct.MEdge* %med) #0 !dbg !6216 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %edgeNum.addr = alloca i32, align 4
  %med.addr = alloca %struct.MEdge*, align 8
  %ccgdm = alloca %struct.CCGDerivedMesh*, align 8
  %ss = alloca %struct.CCGSubSurf*, align 8
  %i = alloca i32, align 4
  %lastface = alloca i32, align 4
  %f = alloca %struct.CCGFace*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %grid = alloca i32, align 4
  %offset = alloca i32, align 4
  %gridSize = alloca i32, align 4
  %edgeSize = alloca i32, align 4
  %gridSideEdges = alloca i32, align 4
  %gridInternalEdges = alloca i32, align 4
  %e = alloca %struct.CCGEdge*, align 8
  %edgeSize48 = alloca i32, align 4
  %x50 = alloca i32, align 4
  %edgeFlag = alloca i16*, align 8
  %flags = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !6219, metadata !DIExpression()), !dbg !6220
  store i32 %edgeNum, i32* %edgeNum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %edgeNum.addr, metadata !6221, metadata !DIExpression()), !dbg !6222
  store %struct.MEdge* %med, %struct.MEdge** %med.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MEdge** %med.addr, metadata !6223, metadata !DIExpression()), !dbg !6224
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm, metadata !6225, metadata !DIExpression()), !dbg !6226
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6227
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CCGDerivedMesh*, !dbg !6228
  store %struct.CCGDerivedMesh* %1, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !6226
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss, metadata !6229, metadata !DIExpression()), !dbg !6230
  %2 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !6231
  %ss1 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %2, i32 0, i32 1, !dbg !6232
  %3 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss1, align 8, !dbg !6232
  store %struct.CCGSubSurf* %3, %struct.CCGSubSurf** %ss, align 8, !dbg !6230
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6233, metadata !DIExpression()), !dbg !6234
  %4 = load %struct.MEdge*, %struct.MEdge** %med.addr, align 8, !dbg !6235
  %5 = bitcast %struct.MEdge* %4 to i8*, !dbg !6236
  call void @llvm.memset.p0i8.i64(i8* align 4 %5, i8 0, i64 12, i1 false), !dbg !6236
  %6 = load i32, i32* %edgeNum.addr, align 4, !dbg !6237
  %7 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !6239
  %edgeMap = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %7, i32 0, i32 6, !dbg !6240
  %8 = load %struct.anon.0*, %struct.anon.0** %edgeMap, align 8, !dbg !6240
  %arrayidx = getelementptr inbounds %struct.anon.0, %struct.anon.0* %8, i64 0, !dbg !6239
  %startEdge = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx, i32 0, i32 1, !dbg !6241
  %9 = load i32, i32* %startEdge, align 4, !dbg !6241
  %cmp = icmp slt i32 %6, %9, !dbg !6242
  br i1 %cmp, label %if.then, label %if.else47, !dbg !6243

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %lastface, metadata !6244, metadata !DIExpression()), !dbg !6246
  %10 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !6247
  %call = call i32 @ccgSubSurf_getNumFaces(%struct.CCGSubSurf* %10), !dbg !6248
  %sub = sub nsw i32 %call, 1, !dbg !6249
  store i32 %sub, i32* %lastface, align 4, !dbg !6246
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f, metadata !6250, metadata !DIExpression()), !dbg !6251
  call void @llvm.dbg.declare(metadata i32* %x, metadata !6252, metadata !DIExpression()), !dbg !6253
  call void @llvm.dbg.declare(metadata i32* %y, metadata !6254, metadata !DIExpression()), !dbg !6255
  call void @llvm.dbg.declare(metadata i32* %grid, metadata !6256, metadata !DIExpression()), !dbg !6257
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !6258, metadata !DIExpression()), !dbg !6259
  call void @llvm.dbg.declare(metadata i32* %gridSize, metadata !6260, metadata !DIExpression()), !dbg !6261
  %11 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !6262
  %call2 = call i32 @ccgSubSurf_getGridSize(%struct.CCGSubSurf* %11), !dbg !6263
  store i32 %call2, i32* %gridSize, align 4, !dbg !6261
  call void @llvm.dbg.declare(metadata i32* %edgeSize, metadata !6264, metadata !DIExpression()), !dbg !6265
  %12 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !6266
  %call3 = call i32 @ccgSubSurf_getEdgeSize(%struct.CCGSubSurf* %12), !dbg !6267
  store i32 %call3, i32* %edgeSize, align 4, !dbg !6265
  call void @llvm.dbg.declare(metadata i32* %gridSideEdges, metadata !6268, metadata !DIExpression()), !dbg !6269
  call void @llvm.dbg.declare(metadata i32* %gridInternalEdges, metadata !6270, metadata !DIExpression()), !dbg !6271
  store i32 0, i32* %i, align 4, !dbg !6272
  br label %while.cond, !dbg !6273

while.cond:                                       ; preds = %while.body, %if.then
  %13 = load i32, i32* %i, align 4, !dbg !6274
  %14 = load i32, i32* %lastface, align 4, !dbg !6275
  %cmp4 = icmp slt i32 %13, %14, !dbg !6276
  br i1 %cmp4, label %land.rhs, label %land.end, !dbg !6277

land.rhs:                                         ; preds = %while.cond
  %15 = load i32, i32* %edgeNum.addr, align 4, !dbg !6278
  %16 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !6279
  %faceMap = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %16, i32 0, i32 7, !dbg !6280
  %17 = load %struct.anon.1*, %struct.anon.1** %faceMap, align 8, !dbg !6280
  %18 = load i32, i32* %i, align 4, !dbg !6281
  %add = add nsw i32 %18, 1, !dbg !6282
  %idxprom = sext i32 %add to i64, !dbg !6279
  %arrayidx5 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %17, i64 %idxprom, !dbg !6279
  %startEdge6 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx5, i32 0, i32 1, !dbg !6283
  %19 = load i32, i32* %startEdge6, align 4, !dbg !6283
  %cmp7 = icmp sge i32 %15, %19, !dbg !6284
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %20 = phi i1 [ false, %while.cond ], [ %cmp7, %land.rhs ], !dbg !6285
  br i1 %20, label %while.body, label %while.end, !dbg !6273

while.body:                                       ; preds = %land.end
  %21 = load i32, i32* %i, align 4, !dbg !6286
  %inc = add nsw i32 %21, 1, !dbg !6286
  store i32 %inc, i32* %i, align 4, !dbg !6286
  br label %while.cond, !dbg !6273, !llvm.loop !6288

while.end:                                        ; preds = %land.end
  %22 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !6290
  %faceMap8 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %22, i32 0, i32 7, !dbg !6291
  %23 = load %struct.anon.1*, %struct.anon.1** %faceMap8, align 8, !dbg !6291
  %24 = load i32, i32* %i, align 4, !dbg !6292
  %idxprom9 = sext i32 %24 to i64, !dbg !6290
  %arrayidx10 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %23, i64 %idxprom9, !dbg !6290
  %face = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx10, i32 0, i32 3, !dbg !6293
  %25 = load %struct.CCGFace*, %struct.CCGFace** %face, align 8, !dbg !6293
  store %struct.CCGFace* %25, %struct.CCGFace** %f, align 8, !dbg !6294
  %26 = load i32, i32* %gridSize, align 4, !dbg !6295
  %sub11 = sub nsw i32 %26, 1, !dbg !6296
  store i32 %sub11, i32* %gridSideEdges, align 4, !dbg !6297
  %27 = load i32, i32* %gridSideEdges, align 4, !dbg !6298
  %sub12 = sub nsw i32 %27, 1, !dbg !6299
  %28 = load i32, i32* %gridSideEdges, align 4, !dbg !6300
  %mul = mul nsw i32 %sub12, %28, !dbg !6301
  %mul13 = mul nsw i32 %mul, 2, !dbg !6302
  store i32 %mul13, i32* %gridInternalEdges, align 4, !dbg !6303
  %29 = load i32, i32* %edgeNum.addr, align 4, !dbg !6304
  %30 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !6305
  %faceMap14 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %30, i32 0, i32 7, !dbg !6306
  %31 = load %struct.anon.1*, %struct.anon.1** %faceMap14, align 8, !dbg !6306
  %32 = load i32, i32* %i, align 4, !dbg !6307
  %idxprom15 = sext i32 %32 to i64, !dbg !6305
  %arrayidx16 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %31, i64 %idxprom15, !dbg !6305
  %startEdge17 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx16, i32 0, i32 1, !dbg !6308
  %33 = load i32, i32* %startEdge17, align 4, !dbg !6308
  %sub18 = sub nsw i32 %29, %33, !dbg !6309
  store i32 %sub18, i32* %offset, align 4, !dbg !6310
  %34 = load i32, i32* %offset, align 4, !dbg !6311
  %35 = load i32, i32* %gridSideEdges, align 4, !dbg !6312
  %36 = load i32, i32* %gridInternalEdges, align 4, !dbg !6313
  %add19 = add nsw i32 %35, %36, !dbg !6314
  %div = sdiv i32 %34, %add19, !dbg !6315
  store i32 %div, i32* %grid, align 4, !dbg !6316
  %37 = load i32, i32* %gridSideEdges, align 4, !dbg !6317
  %38 = load i32, i32* %gridInternalEdges, align 4, !dbg !6318
  %add20 = add nsw i32 %37, %38, !dbg !6319
  %39 = load i32, i32* %offset, align 4, !dbg !6320
  %rem = srem i32 %39, %add20, !dbg !6320
  store i32 %rem, i32* %offset, align 4, !dbg !6320
  %40 = load i32, i32* %offset, align 4, !dbg !6321
  %41 = load i32, i32* %gridSideEdges, align 4, !dbg !6323
  %cmp21 = icmp slt i32 %40, %41, !dbg !6324
  br i1 %cmp21, label %if.then22, label %if.else, !dbg !6325

if.then22:                                        ; preds = %while.end
  %42 = load i32, i32* %offset, align 4, !dbg !6326
  store i32 %42, i32* %x, align 4, !dbg !6328
  %43 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !6329
  %44 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !6330
  %45 = load i32, i32* %grid, align 4, !dbg !6331
  %46 = load i32, i32* %x, align 4, !dbg !6332
  %47 = load i32, i32* %edgeSize, align 4, !dbg !6333
  %48 = load i32, i32* %gridSize, align 4, !dbg !6334
  %call23 = call i32 @getFaceIndex(%struct.CCGSubSurf* %43, %struct.CCGFace* %44, i32 %45, i32 %46, i32 0, i32 %47, i32 %48), !dbg !6335
  %49 = load %struct.MEdge*, %struct.MEdge** %med.addr, align 8, !dbg !6336
  %v1 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %49, i32 0, i32 0, !dbg !6337
  store i32 %call23, i32* %v1, align 4, !dbg !6338
  %50 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !6339
  %51 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !6340
  %52 = load i32, i32* %grid, align 4, !dbg !6341
  %53 = load i32, i32* %x, align 4, !dbg !6342
  %add24 = add nsw i32 %53, 1, !dbg !6343
  %54 = load i32, i32* %edgeSize, align 4, !dbg !6344
  %55 = load i32, i32* %gridSize, align 4, !dbg !6345
  %call25 = call i32 @getFaceIndex(%struct.CCGSubSurf* %50, %struct.CCGFace* %51, i32 %52, i32 %add24, i32 0, i32 %54, i32 %55), !dbg !6346
  %56 = load %struct.MEdge*, %struct.MEdge** %med.addr, align 8, !dbg !6347
  %v2 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %56, i32 0, i32 1, !dbg !6348
  store i32 %call25, i32* %v2, align 4, !dbg !6349
  br label %if.end46, !dbg !6350

if.else:                                          ; preds = %while.end
  %57 = load i32, i32* %gridSideEdges, align 4, !dbg !6351
  %58 = load i32, i32* %offset, align 4, !dbg !6353
  %sub26 = sub nsw i32 %58, %57, !dbg !6353
  store i32 %sub26, i32* %offset, align 4, !dbg !6353
  %59 = load i32, i32* %offset, align 4, !dbg !6354
  %div27 = sdiv i32 %59, 2, !dbg !6355
  %60 = load i32, i32* %gridSideEdges, align 4, !dbg !6356
  %div28 = sdiv i32 %div27, %60, !dbg !6357
  %add29 = add nsw i32 %div28, 1, !dbg !6358
  store i32 %add29, i32* %x, align 4, !dbg !6359
  %61 = load i32, i32* %offset, align 4, !dbg !6360
  %div30 = sdiv i32 %61, 2, !dbg !6361
  %62 = load i32, i32* %gridSideEdges, align 4, !dbg !6362
  %rem31 = srem i32 %div30, %62, !dbg !6363
  store i32 %rem31, i32* %y, align 4, !dbg !6364
  %63 = load i32, i32* %offset, align 4, !dbg !6365
  %rem32 = srem i32 %63, 2, !dbg !6367
  %cmp33 = icmp eq i32 %rem32, 0, !dbg !6368
  br i1 %cmp33, label %if.then34, label %if.else40, !dbg !6369

if.then34:                                        ; preds = %if.else
  %64 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !6370
  %65 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !6372
  %66 = load i32, i32* %grid, align 4, !dbg !6373
  %67 = load i32, i32* %x, align 4, !dbg !6374
  %68 = load i32, i32* %y, align 4, !dbg !6375
  %69 = load i32, i32* %edgeSize, align 4, !dbg !6376
  %70 = load i32, i32* %gridSize, align 4, !dbg !6377
  %call35 = call i32 @getFaceIndex(%struct.CCGSubSurf* %64, %struct.CCGFace* %65, i32 %66, i32 %67, i32 %68, i32 %69, i32 %70), !dbg !6378
  %71 = load %struct.MEdge*, %struct.MEdge** %med.addr, align 8, !dbg !6379
  %v136 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %71, i32 0, i32 0, !dbg !6380
  store i32 %call35, i32* %v136, align 4, !dbg !6381
  %72 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !6382
  %73 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !6383
  %74 = load i32, i32* %grid, align 4, !dbg !6384
  %75 = load i32, i32* %x, align 4, !dbg !6385
  %76 = load i32, i32* %y, align 4, !dbg !6386
  %add37 = add nsw i32 %76, 1, !dbg !6387
  %77 = load i32, i32* %edgeSize, align 4, !dbg !6388
  %78 = load i32, i32* %gridSize, align 4, !dbg !6389
  %call38 = call i32 @getFaceIndex(%struct.CCGSubSurf* %72, %struct.CCGFace* %73, i32 %74, i32 %75, i32 %add37, i32 %77, i32 %78), !dbg !6390
  %79 = load %struct.MEdge*, %struct.MEdge** %med.addr, align 8, !dbg !6391
  %v239 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %79, i32 0, i32 1, !dbg !6392
  store i32 %call38, i32* %v239, align 4, !dbg !6393
  br label %if.end, !dbg !6394

if.else40:                                        ; preds = %if.else
  %80 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !6395
  %81 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !6397
  %82 = load i32, i32* %grid, align 4, !dbg !6398
  %83 = load i32, i32* %y, align 4, !dbg !6399
  %84 = load i32, i32* %x, align 4, !dbg !6400
  %85 = load i32, i32* %edgeSize, align 4, !dbg !6401
  %86 = load i32, i32* %gridSize, align 4, !dbg !6402
  %call41 = call i32 @getFaceIndex(%struct.CCGSubSurf* %80, %struct.CCGFace* %81, i32 %82, i32 %83, i32 %84, i32 %85, i32 %86), !dbg !6403
  %87 = load %struct.MEdge*, %struct.MEdge** %med.addr, align 8, !dbg !6404
  %v142 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %87, i32 0, i32 0, !dbg !6405
  store i32 %call41, i32* %v142, align 4, !dbg !6406
  %88 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !6407
  %89 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !6408
  %90 = load i32, i32* %grid, align 4, !dbg !6409
  %91 = load i32, i32* %y, align 4, !dbg !6410
  %add43 = add nsw i32 %91, 1, !dbg !6411
  %92 = load i32, i32* %x, align 4, !dbg !6412
  %93 = load i32, i32* %edgeSize, align 4, !dbg !6413
  %94 = load i32, i32* %gridSize, align 4, !dbg !6414
  %call44 = call i32 @getFaceIndex(%struct.CCGSubSurf* %88, %struct.CCGFace* %89, i32 %90, i32 %add43, i32 %92, i32 %93, i32 %94), !dbg !6415
  %95 = load %struct.MEdge*, %struct.MEdge** %med.addr, align 8, !dbg !6416
  %v245 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %95, i32 0, i32 1, !dbg !6417
  store i32 %call44, i32* %v245, align 4, !dbg !6418
  br label %if.end

if.end:                                           ; preds = %if.else40, %if.then34
  br label %if.end46

if.end46:                                         ; preds = %if.end, %if.then22
  br label %if.end86, !dbg !6419

if.else47:                                        ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e, metadata !6420, metadata !DIExpression()), !dbg !6422
  call void @llvm.dbg.declare(metadata i32* %edgeSize48, metadata !6423, metadata !DIExpression()), !dbg !6424
  %96 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !6425
  %call49 = call i32 @ccgSubSurf_getEdgeSize(%struct.CCGSubSurf* %96), !dbg !6426
  store i32 %call49, i32* %edgeSize48, align 4, !dbg !6424
  call void @llvm.dbg.declare(metadata i32* %x50, metadata !6427, metadata !DIExpression()), !dbg !6428
  call void @llvm.dbg.declare(metadata i16** %edgeFlag, metadata !6429, metadata !DIExpression()), !dbg !6430
  call void @llvm.dbg.declare(metadata i32* %flags, metadata !6431, metadata !DIExpression()), !dbg !6432
  store i32 0, i32* %flags, align 4, !dbg !6432
  %97 = load i32, i32* %edgeNum.addr, align 4, !dbg !6433
  %98 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !6434
  %edgeMap51 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %98, i32 0, i32 6, !dbg !6435
  %99 = load %struct.anon.0*, %struct.anon.0** %edgeMap51, align 8, !dbg !6435
  %arrayidx52 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %99, i64 0, !dbg !6434
  %startEdge53 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx52, i32 0, i32 1, !dbg !6436
  %100 = load i32, i32* %startEdge53, align 4, !dbg !6436
  %sub54 = sub nsw i32 %97, %100, !dbg !6437
  %101 = load i32, i32* %edgeSize48, align 4, !dbg !6438
  %sub55 = sub nsw i32 %101, 1, !dbg !6439
  %div56 = sdiv i32 %sub54, %sub55, !dbg !6440
  store i32 %div56, i32* %i, align 4, !dbg !6441
  %102 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !6442
  %edgeMap57 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %102, i32 0, i32 6, !dbg !6443
  %103 = load %struct.anon.0*, %struct.anon.0** %edgeMap57, align 8, !dbg !6443
  %104 = load i32, i32* %i, align 4, !dbg !6444
  %idxprom58 = sext i32 %104 to i64, !dbg !6442
  %arrayidx59 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %103, i64 %idxprom58, !dbg !6442
  %edge = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx59, i32 0, i32 2, !dbg !6445
  %105 = load %struct.CCGEdge*, %struct.CCGEdge** %edge, align 8, !dbg !6445
  store %struct.CCGEdge* %105, %struct.CCGEdge** %e, align 8, !dbg !6446
  %106 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !6447
  %call60 = call i32 @ccgSubSurf_getEdgeNumFaces(%struct.CCGEdge* %106), !dbg !6449
  %tobool = icmp ne i32 %call60, 0, !dbg !6449
  br i1 %tobool, label %if.end62, label %if.then61, !dbg !6450

if.then61:                                        ; preds = %if.else47
  %107 = load i32, i32* %flags, align 4, !dbg !6451
  %or = or i32 %107, 128, !dbg !6451
  store i32 %or, i32* %flags, align 4, !dbg !6451
  br label %if.end62, !dbg !6452

if.end62:                                         ; preds = %if.then61, %if.else47
  %108 = load i32, i32* %edgeNum.addr, align 4, !dbg !6453
  %109 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !6454
  %edgeMap63 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %109, i32 0, i32 6, !dbg !6455
  %110 = load %struct.anon.0*, %struct.anon.0** %edgeMap63, align 8, !dbg !6455
  %111 = load i32, i32* %i, align 4, !dbg !6456
  %idxprom64 = sext i32 %111 to i64, !dbg !6454
  %arrayidx65 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %110, i64 %idxprom64, !dbg !6454
  %startEdge66 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx65, i32 0, i32 1, !dbg !6457
  %112 = load i32, i32* %startEdge66, align 4, !dbg !6457
  %sub67 = sub nsw i32 %108, %112, !dbg !6458
  store i32 %sub67, i32* %x50, align 4, !dbg !6459
  %113 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !6460
  %114 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !6461
  %115 = load i32, i32* %x50, align 4, !dbg !6462
  %116 = load i32, i32* %edgeSize48, align 4, !dbg !6463
  %call68 = call i32 @getEdgeIndex(%struct.CCGSubSurf* %113, %struct.CCGEdge* %114, i32 %115, i32 %116), !dbg !6464
  %117 = load %struct.MEdge*, %struct.MEdge** %med.addr, align 8, !dbg !6465
  %v169 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %117, i32 0, i32 0, !dbg !6466
  store i32 %call68, i32* %v169, align 4, !dbg !6467
  %118 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !6468
  %119 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !6469
  %120 = load i32, i32* %x50, align 4, !dbg !6470
  %add70 = add nsw i32 %120, 1, !dbg !6471
  %121 = load i32, i32* %edgeSize48, align 4, !dbg !6472
  %call71 = call i32 @getEdgeIndex(%struct.CCGSubSurf* %118, %struct.CCGEdge* %119, i32 %add70, i32 %121), !dbg !6473
  %122 = load %struct.MEdge*, %struct.MEdge** %med.addr, align 8, !dbg !6474
  %v272 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %122, i32 0, i32 1, !dbg !6475
  store i32 %call71, i32* %v272, align 4, !dbg !6476
  %123 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !6477
  %edgeFlags = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %123, i32 0, i32 8, !dbg !6478
  %124 = load i16*, i16** %edgeFlags, align 8, !dbg !6478
  %tobool73 = icmp ne i16* %124, null, !dbg !6479
  br i1 %tobool73, label %cond.true, label %cond.false, !dbg !6479

cond.true:                                        ; preds = %if.end62
  %125 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !6480
  %edgeFlags74 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %125, i32 0, i32 8, !dbg !6481
  %126 = load i16*, i16** %edgeFlags74, align 8, !dbg !6481
  %127 = load i32, i32* %i, align 4, !dbg !6482
  %idxprom75 = sext i32 %127 to i64, !dbg !6480
  %arrayidx76 = getelementptr inbounds i16, i16* %126, i64 %idxprom75, !dbg !6480
  br label %cond.end, !dbg !6479

cond.false:                                       ; preds = %if.end62
  br label %cond.end, !dbg !6479

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i16* [ %arrayidx76, %cond.true ], [ null, %cond.false ], !dbg !6479
  store i16* %cond, i16** %edgeFlag, align 8, !dbg !6483
  %128 = load i16*, i16** %edgeFlag, align 8, !dbg !6484
  %tobool77 = icmp ne i16* %128, null, !dbg !6484
  br i1 %tobool77, label %if.then78, label %if.else82, !dbg !6486

if.then78:                                        ; preds = %cond.end
  %129 = load i16*, i16** %edgeFlag, align 8, !dbg !6487
  %130 = load i16, i16* %129, align 2, !dbg !6488
  %conv = sext i16 %130 to i32, !dbg !6488
  %and = and i32 %conv, 516, !dbg !6489
  %or79 = or i32 %and, 2, !dbg !6490
  %or80 = or i32 %or79, 32, !dbg !6491
  %131 = load i32, i32* %flags, align 4, !dbg !6492
  %or81 = or i32 %131, %or80, !dbg !6492
  store i32 %or81, i32* %flags, align 4, !dbg !6492
  br label %if.end84, !dbg !6493

if.else82:                                        ; preds = %cond.end
  %132 = load i32, i32* %flags, align 4, !dbg !6494
  %or83 = or i32 %132, 34, !dbg !6494
  store i32 %or83, i32* %flags, align 4, !dbg !6494
  br label %if.end84

if.end84:                                         ; preds = %if.else82, %if.then78
  %133 = load i32, i32* %flags, align 4, !dbg !6495
  %conv85 = trunc i32 %133 to i16, !dbg !6495
  %134 = load %struct.MEdge*, %struct.MEdge** %med.addr, align 8, !dbg !6496
  %flag = getelementptr inbounds %struct.MEdge, %struct.MEdge* %134, i32 0, i32 4, !dbg !6497
  store i16 %conv85, i16* %flag, align 2, !dbg !6498
  br label %if.end86

if.end86:                                         ; preds = %if.end84, %if.end46
  ret void, !dbg !6499
}

; Function Attrs: noinline nounwind uwtable
define internal void @ccgDM_getFinalFace(%struct.DerivedMesh* %dm, i32 %faceNum, %struct.MFace* %mf) #0 !dbg !6500 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %faceNum.addr = alloca i32, align 4
  %mf.addr = alloca %struct.MFace*, align 8
  %ccgdm = alloca %struct.CCGDerivedMesh*, align 8
  %ss = alloca %struct.CCGSubSurf*, align 8
  %gridSize = alloca i32, align 4
  %edgeSize = alloca i32, align 4
  %gridSideEdges = alloca i32, align 4
  %gridFaces = alloca i32, align 4
  %i = alloca i32, align 4
  %f = alloca %struct.CCGFace*, align 8
  %offset = alloca i32, align 4
  %grid = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %faceFlags = alloca %struct.DMFlagMat*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !6505, metadata !DIExpression()), !dbg !6506
  store i32 %faceNum, i32* %faceNum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %faceNum.addr, metadata !6507, metadata !DIExpression()), !dbg !6508
  store %struct.MFace* %mf, %struct.MFace** %mf.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MFace** %mf.addr, metadata !6509, metadata !DIExpression()), !dbg !6510
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm, metadata !6511, metadata !DIExpression()), !dbg !6512
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6513
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CCGDerivedMesh*, !dbg !6514
  store %struct.CCGDerivedMesh* %1, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !6512
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss, metadata !6515, metadata !DIExpression()), !dbg !6516
  %2 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !6517
  %ss1 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %2, i32 0, i32 1, !dbg !6518
  %3 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss1, align 8, !dbg !6518
  store %struct.CCGSubSurf* %3, %struct.CCGSubSurf** %ss, align 8, !dbg !6516
  call void @llvm.dbg.declare(metadata i32* %gridSize, metadata !6519, metadata !DIExpression()), !dbg !6520
  %4 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !6521
  %call = call i32 @ccgSubSurf_getGridSize(%struct.CCGSubSurf* %4), !dbg !6522
  store i32 %call, i32* %gridSize, align 4, !dbg !6520
  call void @llvm.dbg.declare(metadata i32* %edgeSize, metadata !6523, metadata !DIExpression()), !dbg !6524
  %5 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !6525
  %call2 = call i32 @ccgSubSurf_getEdgeSize(%struct.CCGSubSurf* %5), !dbg !6526
  store i32 %call2, i32* %edgeSize, align 4, !dbg !6524
  call void @llvm.dbg.declare(metadata i32* %gridSideEdges, metadata !6527, metadata !DIExpression()), !dbg !6528
  %6 = load i32, i32* %gridSize, align 4, !dbg !6529
  %sub = sub nsw i32 %6, 1, !dbg !6530
  store i32 %sub, i32* %gridSideEdges, align 4, !dbg !6528
  call void @llvm.dbg.declare(metadata i32* %gridFaces, metadata !6531, metadata !DIExpression()), !dbg !6532
  %7 = load i32, i32* %gridSideEdges, align 4, !dbg !6533
  %8 = load i32, i32* %gridSideEdges, align 4, !dbg !6534
  %mul = mul nsw i32 %7, %8, !dbg !6535
  store i32 %mul, i32* %gridFaces, align 4, !dbg !6532
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6536, metadata !DIExpression()), !dbg !6537
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f, metadata !6538, metadata !DIExpression()), !dbg !6539
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !6540, metadata !DIExpression()), !dbg !6541
  call void @llvm.dbg.declare(metadata i32* %grid, metadata !6542, metadata !DIExpression()), !dbg !6543
  call void @llvm.dbg.declare(metadata i32* %x, metadata !6544, metadata !DIExpression()), !dbg !6545
  call void @llvm.dbg.declare(metadata i32* %y, metadata !6546, metadata !DIExpression()), !dbg !6547
  call void @llvm.dbg.declare(metadata %struct.DMFlagMat** %faceFlags, metadata !6548, metadata !DIExpression()), !dbg !6549
  %9 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !6550
  %faceFlags3 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %9, i32 0, i32 9, !dbg !6551
  %10 = load %struct.DMFlagMat*, %struct.DMFlagMat** %faceFlags3, align 8, !dbg !6551
  store %struct.DMFlagMat* %10, %struct.DMFlagMat** %faceFlags, align 8, !dbg !6549
  %11 = load %struct.MFace*, %struct.MFace** %mf.addr, align 8, !dbg !6552
  %12 = bitcast %struct.MFace* %11 to i8*, !dbg !6553
  call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 0, i64 20, i1 false), !dbg !6553
  %13 = load i32, i32* %faceNum.addr, align 4, !dbg !6554
  %14 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !6556
  %dm4 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %14, i32 0, i32 0, !dbg !6557
  %numTessFaceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm4, i32 0, i32 7, !dbg !6558
  %15 = load i32, i32* %numTessFaceData, align 8, !dbg !6558
  %cmp = icmp sge i32 %13, %15, !dbg !6559
  br i1 %cmp, label %if.then, label %if.end, !dbg !6560

if.then:                                          ; preds = %entry
  br label %return, !dbg !6561

if.end:                                           ; preds = %entry
  %16 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !6562
  %reverseFaceMap = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %16, i32 0, i32 10, !dbg !6563
  %17 = load i32*, i32** %reverseFaceMap, align 8, !dbg !6563
  %18 = load i32, i32* %faceNum.addr, align 4, !dbg !6564
  %idxprom = sext i32 %18 to i64, !dbg !6562
  %arrayidx = getelementptr inbounds i32, i32* %17, i64 %idxprom, !dbg !6562
  %19 = load i32, i32* %arrayidx, align 4, !dbg !6562
  store i32 %19, i32* %i, align 4, !dbg !6565
  %20 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !6566
  %faceMap = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %20, i32 0, i32 7, !dbg !6567
  %21 = load %struct.anon.1*, %struct.anon.1** %faceMap, align 8, !dbg !6567
  %22 = load i32, i32* %i, align 4, !dbg !6568
  %idxprom5 = sext i32 %22 to i64, !dbg !6566
  %arrayidx6 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %21, i64 %idxprom5, !dbg !6566
  %face = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx6, i32 0, i32 3, !dbg !6569
  %23 = load %struct.CCGFace*, %struct.CCGFace** %face, align 8, !dbg !6569
  store %struct.CCGFace* %23, %struct.CCGFace** %f, align 8, !dbg !6570
  %24 = load i32, i32* %faceNum.addr, align 4, !dbg !6571
  %25 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !6572
  %faceMap7 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %25, i32 0, i32 7, !dbg !6573
  %26 = load %struct.anon.1*, %struct.anon.1** %faceMap7, align 8, !dbg !6573
  %27 = load i32, i32* %i, align 4, !dbg !6574
  %idxprom8 = sext i32 %27 to i64, !dbg !6572
  %arrayidx9 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %26, i64 %idxprom8, !dbg !6572
  %startFace = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx9, i32 0, i32 2, !dbg !6575
  %28 = load i32, i32* %startFace, align 8, !dbg !6575
  %sub10 = sub nsw i32 %24, %28, !dbg !6576
  store i32 %sub10, i32* %offset, align 4, !dbg !6577
  %29 = load i32, i32* %offset, align 4, !dbg !6578
  %30 = load i32, i32* %gridFaces, align 4, !dbg !6579
  %div = sdiv i32 %29, %30, !dbg !6580
  store i32 %div, i32* %grid, align 4, !dbg !6581
  %31 = load i32, i32* %gridFaces, align 4, !dbg !6582
  %32 = load i32, i32* %offset, align 4, !dbg !6583
  %rem = srem i32 %32, %31, !dbg !6583
  store i32 %rem, i32* %offset, align 4, !dbg !6583
  %33 = load i32, i32* %offset, align 4, !dbg !6584
  %34 = load i32, i32* %gridSideEdges, align 4, !dbg !6585
  %div11 = sdiv i32 %33, %34, !dbg !6586
  store i32 %div11, i32* %y, align 4, !dbg !6587
  %35 = load i32, i32* %offset, align 4, !dbg !6588
  %36 = load i32, i32* %gridSideEdges, align 4, !dbg !6589
  %rem12 = srem i32 %35, %36, !dbg !6590
  store i32 %rem12, i32* %x, align 4, !dbg !6591
  %37 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !6592
  %38 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !6593
  %39 = load i32, i32* %grid, align 4, !dbg !6594
  %40 = load i32, i32* %x, align 4, !dbg !6595
  %add = add nsw i32 %40, 0, !dbg !6596
  %41 = load i32, i32* %y, align 4, !dbg !6597
  %add13 = add nsw i32 %41, 0, !dbg !6598
  %42 = load i32, i32* %edgeSize, align 4, !dbg !6599
  %43 = load i32, i32* %gridSize, align 4, !dbg !6600
  %call14 = call i32 @getFaceIndex(%struct.CCGSubSurf* %37, %struct.CCGFace* %38, i32 %39, i32 %add, i32 %add13, i32 %42, i32 %43), !dbg !6601
  %44 = load %struct.MFace*, %struct.MFace** %mf.addr, align 8, !dbg !6602
  %v1 = getelementptr inbounds %struct.MFace, %struct.MFace* %44, i32 0, i32 0, !dbg !6603
  store i32 %call14, i32* %v1, align 4, !dbg !6604
  %45 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !6605
  %46 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !6606
  %47 = load i32, i32* %grid, align 4, !dbg !6607
  %48 = load i32, i32* %x, align 4, !dbg !6608
  %add15 = add nsw i32 %48, 0, !dbg !6609
  %49 = load i32, i32* %y, align 4, !dbg !6610
  %add16 = add nsw i32 %49, 1, !dbg !6611
  %50 = load i32, i32* %edgeSize, align 4, !dbg !6612
  %51 = load i32, i32* %gridSize, align 4, !dbg !6613
  %call17 = call i32 @getFaceIndex(%struct.CCGSubSurf* %45, %struct.CCGFace* %46, i32 %47, i32 %add15, i32 %add16, i32 %50, i32 %51), !dbg !6614
  %52 = load %struct.MFace*, %struct.MFace** %mf.addr, align 8, !dbg !6615
  %v2 = getelementptr inbounds %struct.MFace, %struct.MFace* %52, i32 0, i32 1, !dbg !6616
  store i32 %call17, i32* %v2, align 4, !dbg !6617
  %53 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !6618
  %54 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !6619
  %55 = load i32, i32* %grid, align 4, !dbg !6620
  %56 = load i32, i32* %x, align 4, !dbg !6621
  %add18 = add nsw i32 %56, 1, !dbg !6622
  %57 = load i32, i32* %y, align 4, !dbg !6623
  %add19 = add nsw i32 %57, 1, !dbg !6624
  %58 = load i32, i32* %edgeSize, align 4, !dbg !6625
  %59 = load i32, i32* %gridSize, align 4, !dbg !6626
  %call20 = call i32 @getFaceIndex(%struct.CCGSubSurf* %53, %struct.CCGFace* %54, i32 %55, i32 %add18, i32 %add19, i32 %58, i32 %59), !dbg !6627
  %60 = load %struct.MFace*, %struct.MFace** %mf.addr, align 8, !dbg !6628
  %v3 = getelementptr inbounds %struct.MFace, %struct.MFace* %60, i32 0, i32 2, !dbg !6629
  store i32 %call20, i32* %v3, align 4, !dbg !6630
  %61 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !6631
  %62 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !6632
  %63 = load i32, i32* %grid, align 4, !dbg !6633
  %64 = load i32, i32* %x, align 4, !dbg !6634
  %add21 = add nsw i32 %64, 1, !dbg !6635
  %65 = load i32, i32* %y, align 4, !dbg !6636
  %add22 = add nsw i32 %65, 0, !dbg !6637
  %66 = load i32, i32* %edgeSize, align 4, !dbg !6638
  %67 = load i32, i32* %gridSize, align 4, !dbg !6639
  %call23 = call i32 @getFaceIndex(%struct.CCGSubSurf* %61, %struct.CCGFace* %62, i32 %63, i32 %add21, i32 %add22, i32 %66, i32 %67), !dbg !6640
  %68 = load %struct.MFace*, %struct.MFace** %mf.addr, align 8, !dbg !6641
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %68, i32 0, i32 3, !dbg !6642
  store i32 %call23, i32* %v4, align 4, !dbg !6643
  %69 = load %struct.DMFlagMat*, %struct.DMFlagMat** %faceFlags, align 8, !dbg !6644
  %tobool = icmp ne %struct.DMFlagMat* %69, null, !dbg !6644
  br i1 %tobool, label %if.then24, label %if.else, !dbg !6646

if.then24:                                        ; preds = %if.end
  %70 = load %struct.DMFlagMat*, %struct.DMFlagMat** %faceFlags, align 8, !dbg !6647
  %71 = load i32, i32* %i, align 4, !dbg !6649
  %idxprom25 = sext i32 %71 to i64, !dbg !6647
  %arrayidx26 = getelementptr inbounds %struct.DMFlagMat, %struct.DMFlagMat* %70, i64 %idxprom25, !dbg !6647
  %flag = getelementptr inbounds %struct.DMFlagMat, %struct.DMFlagMat* %arrayidx26, i32 0, i32 1, !dbg !6650
  %72 = load i8, i8* %flag, align 2, !dbg !6650
  %73 = load %struct.MFace*, %struct.MFace** %mf.addr, align 8, !dbg !6651
  %flag27 = getelementptr inbounds %struct.MFace, %struct.MFace* %73, i32 0, i32 6, !dbg !6652
  store i8 %72, i8* %flag27, align 1, !dbg !6653
  %74 = load %struct.DMFlagMat*, %struct.DMFlagMat** %faceFlags, align 8, !dbg !6654
  %75 = load i32, i32* %i, align 4, !dbg !6655
  %idxprom28 = sext i32 %75 to i64, !dbg !6654
  %arrayidx29 = getelementptr inbounds %struct.DMFlagMat, %struct.DMFlagMat* %74, i64 %idxprom28, !dbg !6654
  %mat_nr = getelementptr inbounds %struct.DMFlagMat, %struct.DMFlagMat* %arrayidx29, i32 0, i32 0, !dbg !6656
  %76 = load i16, i16* %mat_nr, align 2, !dbg !6656
  %77 = load %struct.MFace*, %struct.MFace** %mf.addr, align 8, !dbg !6657
  %mat_nr30 = getelementptr inbounds %struct.MFace, %struct.MFace* %77, i32 0, i32 4, !dbg !6658
  store i16 %76, i16* %mat_nr30, align 4, !dbg !6659
  br label %if.end32, !dbg !6660

if.else:                                          ; preds = %if.end
  %78 = load %struct.MFace*, %struct.MFace** %mf.addr, align 8, !dbg !6661
  %flag31 = getelementptr inbounds %struct.MFace, %struct.MFace* %78, i32 0, i32 6, !dbg !6663
  store i8 1, i8* %flag31, align 1, !dbg !6664
  br label %if.end32

if.end32:                                         ; preds = %if.else, %if.then24
  %79 = load %struct.MFace*, %struct.MFace** %mf.addr, align 8, !dbg !6665
  %edcode = getelementptr inbounds %struct.MFace, %struct.MFace* %79, i32 0, i32 5, !dbg !6666
  store i8 0, i8* %edcode, align 2, !dbg !6667
  br label %return, !dbg !6668

return:                                           ; preds = %if.end32, %if.then
  ret void, !dbg !6668
}

; Function Attrs: noinline nounwind uwtable
define internal void @ccgDM_getFinalVertCo(%struct.DerivedMesh* %dm, i32 %vertNum, float* %r_co) #0 !dbg !6669 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %vertNum.addr = alloca i32, align 4
  %r_co.addr = alloca float*, align 8
  %mvert = alloca %struct.MVert, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !6670, metadata !DIExpression()), !dbg !6671
  store i32 %vertNum, i32* %vertNum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vertNum.addr, metadata !6672, metadata !DIExpression()), !dbg !6673
  store float* %r_co, float** %r_co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_co.addr, metadata !6674, metadata !DIExpression()), !dbg !6675
  call void @llvm.dbg.declare(metadata %struct.MVert* %mvert, metadata !6676, metadata !DIExpression()), !dbg !6677
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6678
  %1 = load i32, i32* %vertNum.addr, align 4, !dbg !6679
  call void @ccgDM_getFinalVert(%struct.DerivedMesh* %0, i32 %1, %struct.MVert* %mvert), !dbg !6680
  %2 = load float*, float** %r_co.addr, align 8, !dbg !6681
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %mvert, i32 0, i32 0, !dbg !6682
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !6683
  call void @copy_v3_v3(float* %2, float* %arraydecay), !dbg !6684
  ret void, !dbg !6685
}

; Function Attrs: noinline nounwind uwtable
define internal void @ccgDM_getFinalVertNo(%struct.DerivedMesh* %dm, i32 %vertNum, float* %r_no) #0 !dbg !6686 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %vertNum.addr = alloca i32, align 4
  %r_no.addr = alloca float*, align 8
  %mvert = alloca %struct.MVert, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !6687, metadata !DIExpression()), !dbg !6688
  store i32 %vertNum, i32* %vertNum.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vertNum.addr, metadata !6689, metadata !DIExpression()), !dbg !6690
  store float* %r_no, float** %r_no.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_no.addr, metadata !6691, metadata !DIExpression()), !dbg !6692
  call void @llvm.dbg.declare(metadata %struct.MVert* %mvert, metadata !6693, metadata !DIExpression()), !dbg !6694
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6695
  %1 = load i32, i32* %vertNum.addr, align 4, !dbg !6696
  call void @ccgDM_getFinalVert(%struct.DerivedMesh* %0, i32 %1, %struct.MVert* %mvert), !dbg !6697
  %2 = load float*, float** %r_no.addr, align 8, !dbg !6698
  %no = getelementptr inbounds %struct.MVert, %struct.MVert* %mvert, i32 0, i32 1, !dbg !6699
  %arraydecay = getelementptr inbounds [3 x i16], [3 x i16]* %no, i64 0, i64 0, !dbg !6700
  call void @normal_short_to_float_v3(float* %2, i16* %arraydecay), !dbg !6701
  ret void, !dbg !6702
}

; Function Attrs: noinline nounwind uwtable
define internal void @ccgDM_copyFinalVertArray(%struct.DerivedMesh* %dm, %struct.MVert* %mvert) #0 !dbg !6703 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %mvert.addr = alloca %struct.MVert*, align 8
  %ccgdm = alloca %struct.CCGDerivedMesh*, align 8
  %ss = alloca %struct.CCGSubSurf*, align 8
  %vd = alloca %struct.CCGElem*, align 8
  %key = alloca %struct.CCGKey, align 4
  %index = alloca i32, align 4
  %totvert = alloca i32, align 4
  %totedge = alloca i32, align 4
  %totface = alloca i32, align 4
  %gridSize = alloca i32, align 4
  %edgeSize = alloca i32, align 4
  %i = alloca i32, align 4
  %f = alloca %struct.CCGFace*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %S = alloca i32, align 4
  %numVerts = alloca i32, align 4
  %e = alloca %struct.CCGEdge*, align 8
  %x55 = alloca i32, align 4
  %v = alloca %struct.CCGVert*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !6706, metadata !DIExpression()), !dbg !6707
  store %struct.MVert* %mvert, %struct.MVert** %mvert.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert.addr, metadata !6708, metadata !DIExpression()), !dbg !6709
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm, metadata !6710, metadata !DIExpression()), !dbg !6711
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6712
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CCGDerivedMesh*, !dbg !6713
  store %struct.CCGDerivedMesh* %1, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !6711
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss, metadata !6714, metadata !DIExpression()), !dbg !6715
  %2 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !6716
  %ss1 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %2, i32 0, i32 1, !dbg !6717
  %3 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss1, align 8, !dbg !6717
  store %struct.CCGSubSurf* %3, %struct.CCGSubSurf** %ss, align 8, !dbg !6715
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %vd, metadata !6718, metadata !DIExpression()), !dbg !6719
  call void @llvm.dbg.declare(metadata %struct.CCGKey* %key, metadata !6720, metadata !DIExpression()), !dbg !6721
  call void @llvm.dbg.declare(metadata i32* %index, metadata !6722, metadata !DIExpression()), !dbg !6723
  call void @llvm.dbg.declare(metadata i32* %totvert, metadata !6724, metadata !DIExpression()), !dbg !6725
  call void @llvm.dbg.declare(metadata i32* %totedge, metadata !6726, metadata !DIExpression()), !dbg !6727
  call void @llvm.dbg.declare(metadata i32* %totface, metadata !6728, metadata !DIExpression()), !dbg !6729
  call void @llvm.dbg.declare(metadata i32* %gridSize, metadata !6730, metadata !DIExpression()), !dbg !6731
  %4 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !6732
  %call = call i32 @ccgSubSurf_getGridSize(%struct.CCGSubSurf* %4), !dbg !6733
  store i32 %call, i32* %gridSize, align 4, !dbg !6731
  call void @llvm.dbg.declare(metadata i32* %edgeSize, metadata !6734, metadata !DIExpression()), !dbg !6735
  %5 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !6736
  %call2 = call i32 @ccgSubSurf_getEdgeSize(%struct.CCGSubSurf* %5), !dbg !6737
  store i32 %call2, i32* %edgeSize, align 4, !dbg !6735
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6738, metadata !DIExpression()), !dbg !6739
  store i32 0, i32* %i, align 4, !dbg !6739
  %6 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !6740
  call void @CCG_key_top_level(%struct.CCGKey* %key, %struct.CCGSubSurf* %6), !dbg !6741
  %7 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !6742
  %call3 = call i32 @ccgSubSurf_getNumFaces(%struct.CCGSubSurf* %7), !dbg !6743
  store i32 %call3, i32* %totface, align 4, !dbg !6744
  store i32 0, i32* %index, align 4, !dbg !6745
  br label %for.cond, !dbg !6747

for.cond:                                         ; preds = %for.inc46, %entry
  %8 = load i32, i32* %index, align 4, !dbg !6748
  %9 = load i32, i32* %totface, align 4, !dbg !6750
  %cmp = icmp slt i32 %8, %9, !dbg !6751
  br i1 %cmp, label %for.body, label %for.end48, !dbg !6752

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f, metadata !6753, metadata !DIExpression()), !dbg !6755
  %10 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !6756
  %faceMap = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %10, i32 0, i32 7, !dbg !6757
  %11 = load %struct.anon.1*, %struct.anon.1** %faceMap, align 8, !dbg !6757
  %12 = load i32, i32* %index, align 4, !dbg !6758
  %idxprom = sext i32 %12 to i64, !dbg !6756
  %arrayidx = getelementptr inbounds %struct.anon.1, %struct.anon.1* %11, i64 %idxprom, !dbg !6756
  %face = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx, i32 0, i32 3, !dbg !6759
  %13 = load %struct.CCGFace*, %struct.CCGFace** %face, align 8, !dbg !6759
  store %struct.CCGFace* %13, %struct.CCGFace** %f, align 8, !dbg !6755
  call void @llvm.dbg.declare(metadata i32* %x, metadata !6760, metadata !DIExpression()), !dbg !6761
  call void @llvm.dbg.declare(metadata i32* %y, metadata !6762, metadata !DIExpression()), !dbg !6763
  call void @llvm.dbg.declare(metadata i32* %S, metadata !6764, metadata !DIExpression()), !dbg !6765
  call void @llvm.dbg.declare(metadata i32* %numVerts, metadata !6766, metadata !DIExpression()), !dbg !6767
  %14 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !6768
  %call4 = call i32 @ccgSubSurf_getFaceNumVerts(%struct.CCGFace* %14), !dbg !6769
  store i32 %call4, i32* %numVerts, align 4, !dbg !6767
  %15 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !6770
  %call5 = call i8* @ccgSubSurf_getFaceCenterData(%struct.CCGFace* %15), !dbg !6771
  %16 = bitcast i8* %call5 to %struct.CCGElem*, !dbg !6771
  store %struct.CCGElem* %16, %struct.CCGElem** %vd, align 8, !dbg !6772
  %17 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !6773
  %18 = load i32, i32* %i, align 4, !dbg !6774
  %inc = add i32 %18, 1, !dbg !6774
  store i32 %inc, i32* %i, align 4, !dbg !6774
  %idxprom6 = zext i32 %18 to i64, !dbg !6773
  %arrayidx7 = getelementptr inbounds %struct.MVert, %struct.MVert* %17, i64 %idxprom6, !dbg !6773
  %19 = load %struct.CCGElem*, %struct.CCGElem** %vd, align 8, !dbg !6775
  call void @ccgDM_to_MVert(%struct.MVert* %arrayidx7, %struct.CCGKey* %key, %struct.CCGElem* %19), !dbg !6776
  store i32 0, i32* %S, align 4, !dbg !6777
  br label %for.cond8, !dbg !6779

for.cond8:                                        ; preds = %for.inc19, %for.body
  %20 = load i32, i32* %S, align 4, !dbg !6780
  %21 = load i32, i32* %numVerts, align 4, !dbg !6782
  %cmp9 = icmp slt i32 %20, %21, !dbg !6783
  br i1 %cmp9, label %for.body10, label %for.end21, !dbg !6784

for.body10:                                       ; preds = %for.cond8
  store i32 1, i32* %x, align 4, !dbg !6785
  br label %for.cond11, !dbg !6788

for.cond11:                                       ; preds = %for.inc, %for.body10
  %22 = load i32, i32* %x, align 4, !dbg !6789
  %23 = load i32, i32* %gridSize, align 4, !dbg !6791
  %sub = sub nsw i32 %23, 1, !dbg !6792
  %cmp12 = icmp slt i32 %22, %sub, !dbg !6793
  br i1 %cmp12, label %for.body13, label %for.end, !dbg !6794

for.body13:                                       ; preds = %for.cond11
  %24 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !6795
  %25 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !6797
  %26 = load i32, i32* %S, align 4, !dbg !6798
  %27 = load i32, i32* %x, align 4, !dbg !6799
  %call14 = call i8* @ccgSubSurf_getFaceGridEdgeData(%struct.CCGSubSurf* %24, %struct.CCGFace* %25, i32 %26, i32 %27), !dbg !6800
  %28 = bitcast i8* %call14 to %struct.CCGElem*, !dbg !6800
  store %struct.CCGElem* %28, %struct.CCGElem** %vd, align 8, !dbg !6801
  %29 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !6802
  %30 = load i32, i32* %i, align 4, !dbg !6803
  %inc15 = add i32 %30, 1, !dbg !6803
  store i32 %inc15, i32* %i, align 4, !dbg !6803
  %idxprom16 = zext i32 %30 to i64, !dbg !6802
  %arrayidx17 = getelementptr inbounds %struct.MVert, %struct.MVert* %29, i64 %idxprom16, !dbg !6802
  %31 = load %struct.CCGElem*, %struct.CCGElem** %vd, align 8, !dbg !6804
  call void @ccgDM_to_MVert(%struct.MVert* %arrayidx17, %struct.CCGKey* %key, %struct.CCGElem* %31), !dbg !6805
  br label %for.inc, !dbg !6806

for.inc:                                          ; preds = %for.body13
  %32 = load i32, i32* %x, align 4, !dbg !6807
  %inc18 = add nsw i32 %32, 1, !dbg !6807
  store i32 %inc18, i32* %x, align 4, !dbg !6807
  br label %for.cond11, !dbg !6808, !llvm.loop !6809

for.end:                                          ; preds = %for.cond11
  br label %for.inc19, !dbg !6811

for.inc19:                                        ; preds = %for.end
  %33 = load i32, i32* %S, align 4, !dbg !6812
  %inc20 = add nsw i32 %33, 1, !dbg !6812
  store i32 %inc20, i32* %S, align 4, !dbg !6812
  br label %for.cond8, !dbg !6813, !llvm.loop !6814

for.end21:                                        ; preds = %for.cond8
  store i32 0, i32* %S, align 4, !dbg !6816
  br label %for.cond22, !dbg !6818

for.cond22:                                       ; preds = %for.inc43, %for.end21
  %34 = load i32, i32* %S, align 4, !dbg !6819
  %35 = load i32, i32* %numVerts, align 4, !dbg !6821
  %cmp23 = icmp slt i32 %34, %35, !dbg !6822
  br i1 %cmp23, label %for.body24, label %for.end45, !dbg !6823

for.body24:                                       ; preds = %for.cond22
  store i32 1, i32* %y, align 4, !dbg !6824
  br label %for.cond25, !dbg !6827

for.cond25:                                       ; preds = %for.inc40, %for.body24
  %36 = load i32, i32* %y, align 4, !dbg !6828
  %37 = load i32, i32* %gridSize, align 4, !dbg !6830
  %sub26 = sub nsw i32 %37, 1, !dbg !6831
  %cmp27 = icmp slt i32 %36, %sub26, !dbg !6832
  br i1 %cmp27, label %for.body28, label %for.end42, !dbg !6833

for.body28:                                       ; preds = %for.cond25
  store i32 1, i32* %x, align 4, !dbg !6834
  br label %for.cond29, !dbg !6837

for.cond29:                                       ; preds = %for.inc37, %for.body28
  %38 = load i32, i32* %x, align 4, !dbg !6838
  %39 = load i32, i32* %gridSize, align 4, !dbg !6840
  %sub30 = sub nsw i32 %39, 1, !dbg !6841
  %cmp31 = icmp slt i32 %38, %sub30, !dbg !6842
  br i1 %cmp31, label %for.body32, label %for.end39, !dbg !6843

for.body32:                                       ; preds = %for.cond29
  %40 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !6844
  %41 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !6846
  %42 = load i32, i32* %S, align 4, !dbg !6847
  %43 = load i32, i32* %x, align 4, !dbg !6848
  %44 = load i32, i32* %y, align 4, !dbg !6849
  %call33 = call i8* @ccgSubSurf_getFaceGridData(%struct.CCGSubSurf* %40, %struct.CCGFace* %41, i32 %42, i32 %43, i32 %44), !dbg !6850
  %45 = bitcast i8* %call33 to %struct.CCGElem*, !dbg !6850
  store %struct.CCGElem* %45, %struct.CCGElem** %vd, align 8, !dbg !6851
  %46 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !6852
  %47 = load i32, i32* %i, align 4, !dbg !6853
  %inc34 = add i32 %47, 1, !dbg !6853
  store i32 %inc34, i32* %i, align 4, !dbg !6853
  %idxprom35 = zext i32 %47 to i64, !dbg !6852
  %arrayidx36 = getelementptr inbounds %struct.MVert, %struct.MVert* %46, i64 %idxprom35, !dbg !6852
  %48 = load %struct.CCGElem*, %struct.CCGElem** %vd, align 8, !dbg !6854
  call void @ccgDM_to_MVert(%struct.MVert* %arrayidx36, %struct.CCGKey* %key, %struct.CCGElem* %48), !dbg !6855
  br label %for.inc37, !dbg !6856

for.inc37:                                        ; preds = %for.body32
  %49 = load i32, i32* %x, align 4, !dbg !6857
  %inc38 = add nsw i32 %49, 1, !dbg !6857
  store i32 %inc38, i32* %x, align 4, !dbg !6857
  br label %for.cond29, !dbg !6858, !llvm.loop !6859

for.end39:                                        ; preds = %for.cond29
  br label %for.inc40, !dbg !6861

for.inc40:                                        ; preds = %for.end39
  %50 = load i32, i32* %y, align 4, !dbg !6862
  %inc41 = add nsw i32 %50, 1, !dbg !6862
  store i32 %inc41, i32* %y, align 4, !dbg !6862
  br label %for.cond25, !dbg !6863, !llvm.loop !6864

for.end42:                                        ; preds = %for.cond25
  br label %for.inc43, !dbg !6866

for.inc43:                                        ; preds = %for.end42
  %51 = load i32, i32* %S, align 4, !dbg !6867
  %inc44 = add nsw i32 %51, 1, !dbg !6867
  store i32 %inc44, i32* %S, align 4, !dbg !6867
  br label %for.cond22, !dbg !6868, !llvm.loop !6869

for.end45:                                        ; preds = %for.cond22
  br label %for.inc46, !dbg !6871

for.inc46:                                        ; preds = %for.end45
  %52 = load i32, i32* %index, align 4, !dbg !6872
  %inc47 = add nsw i32 %52, 1, !dbg !6872
  store i32 %inc47, i32* %index, align 4, !dbg !6872
  br label %for.cond, !dbg !6873, !llvm.loop !6874

for.end48:                                        ; preds = %for.cond
  %53 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !6876
  %call49 = call i32 @ccgSubSurf_getNumEdges(%struct.CCGSubSurf* %53), !dbg !6877
  store i32 %call49, i32* %totedge, align 4, !dbg !6878
  store i32 0, i32* %index, align 4, !dbg !6879
  br label %for.cond50, !dbg !6881

for.cond50:                                       ; preds = %for.inc67, %for.end48
  %54 = load i32, i32* %index, align 4, !dbg !6882
  %55 = load i32, i32* %totedge, align 4, !dbg !6884
  %cmp51 = icmp slt i32 %54, %55, !dbg !6885
  br i1 %cmp51, label %for.body52, label %for.end69, !dbg !6886

for.body52:                                       ; preds = %for.cond50
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e, metadata !6887, metadata !DIExpression()), !dbg !6889
  %56 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !6890
  %edgeMap = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %56, i32 0, i32 6, !dbg !6891
  %57 = load %struct.anon.0*, %struct.anon.0** %edgeMap, align 8, !dbg !6891
  %58 = load i32, i32* %index, align 4, !dbg !6892
  %idxprom53 = sext i32 %58 to i64, !dbg !6890
  %arrayidx54 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %57, i64 %idxprom53, !dbg !6890
  %edge = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx54, i32 0, i32 2, !dbg !6893
  %59 = load %struct.CCGEdge*, %struct.CCGEdge** %edge, align 8, !dbg !6893
  store %struct.CCGEdge* %59, %struct.CCGEdge** %e, align 8, !dbg !6889
  call void @llvm.dbg.declare(metadata i32* %x55, metadata !6894, metadata !DIExpression()), !dbg !6895
  store i32 1, i32* %x55, align 4, !dbg !6896
  br label %for.cond56, !dbg !6898

for.cond56:                                       ; preds = %for.inc64, %for.body52
  %60 = load i32, i32* %x55, align 4, !dbg !6899
  %61 = load i32, i32* %edgeSize, align 4, !dbg !6901
  %sub57 = sub nsw i32 %61, 1, !dbg !6902
  %cmp58 = icmp slt i32 %60, %sub57, !dbg !6903
  br i1 %cmp58, label %for.body59, label %for.end66, !dbg !6904

for.body59:                                       ; preds = %for.cond56
  %62 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !6905
  %63 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !6907
  %64 = load i32, i32* %x55, align 4, !dbg !6908
  %call60 = call i8* @ccgSubSurf_getEdgeData(%struct.CCGSubSurf* %62, %struct.CCGEdge* %63, i32 %64), !dbg !6909
  %65 = bitcast i8* %call60 to %struct.CCGElem*, !dbg !6909
  store %struct.CCGElem* %65, %struct.CCGElem** %vd, align 8, !dbg !6910
  %66 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !6911
  %67 = load i32, i32* %i, align 4, !dbg !6912
  %inc61 = add i32 %67, 1, !dbg !6912
  store i32 %inc61, i32* %i, align 4, !dbg !6912
  %idxprom62 = zext i32 %67 to i64, !dbg !6911
  %arrayidx63 = getelementptr inbounds %struct.MVert, %struct.MVert* %66, i64 %idxprom62, !dbg !6911
  %68 = load %struct.CCGElem*, %struct.CCGElem** %vd, align 8, !dbg !6913
  call void @ccgDM_to_MVert(%struct.MVert* %arrayidx63, %struct.CCGKey* %key, %struct.CCGElem* %68), !dbg !6914
  br label %for.inc64, !dbg !6915

for.inc64:                                        ; preds = %for.body59
  %69 = load i32, i32* %x55, align 4, !dbg !6916
  %inc65 = add nsw i32 %69, 1, !dbg !6916
  store i32 %inc65, i32* %x55, align 4, !dbg !6916
  br label %for.cond56, !dbg !6917, !llvm.loop !6918

for.end66:                                        ; preds = %for.cond56
  br label %for.inc67, !dbg !6920

for.inc67:                                        ; preds = %for.end66
  %70 = load i32, i32* %index, align 4, !dbg !6921
  %inc68 = add nsw i32 %70, 1, !dbg !6921
  store i32 %inc68, i32* %index, align 4, !dbg !6921
  br label %for.cond50, !dbg !6922, !llvm.loop !6923

for.end69:                                        ; preds = %for.cond50
  %71 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !6925
  %call70 = call i32 @ccgSubSurf_getNumVerts(%struct.CCGSubSurf* %71), !dbg !6926
  store i32 %call70, i32* %totvert, align 4, !dbg !6927
  store i32 0, i32* %index, align 4, !dbg !6928
  br label %for.cond71, !dbg !6930

for.cond71:                                       ; preds = %for.inc80, %for.end69
  %72 = load i32, i32* %index, align 4, !dbg !6931
  %73 = load i32, i32* %totvert, align 4, !dbg !6933
  %cmp72 = icmp slt i32 %72, %73, !dbg !6934
  br i1 %cmp72, label %for.body73, label %for.end82, !dbg !6935

for.body73:                                       ; preds = %for.cond71
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v, metadata !6936, metadata !DIExpression()), !dbg !6938
  %74 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !6939
  %vertMap = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %74, i32 0, i32 5, !dbg !6940
  %75 = load %struct.anon*, %struct.anon** %vertMap, align 8, !dbg !6940
  %76 = load i32, i32* %index, align 4, !dbg !6941
  %idxprom74 = sext i32 %76 to i64, !dbg !6939
  %arrayidx75 = getelementptr inbounds %struct.anon, %struct.anon* %75, i64 %idxprom74, !dbg !6939
  %vert = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx75, i32 0, i32 1, !dbg !6942
  %77 = load %struct.CCGVert*, %struct.CCGVert** %vert, align 8, !dbg !6942
  store %struct.CCGVert* %77, %struct.CCGVert** %v, align 8, !dbg !6938
  %78 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !6943
  %79 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !6944
  %call76 = call i8* @ccgSubSurf_getVertData(%struct.CCGSubSurf* %78, %struct.CCGVert* %79), !dbg !6945
  %80 = bitcast i8* %call76 to %struct.CCGElem*, !dbg !6945
  store %struct.CCGElem* %80, %struct.CCGElem** %vd, align 8, !dbg !6946
  %81 = load %struct.MVert*, %struct.MVert** %mvert.addr, align 8, !dbg !6947
  %82 = load i32, i32* %i, align 4, !dbg !6948
  %inc77 = add i32 %82, 1, !dbg !6948
  store i32 %inc77, i32* %i, align 4, !dbg !6948
  %idxprom78 = zext i32 %82 to i64, !dbg !6947
  %arrayidx79 = getelementptr inbounds %struct.MVert, %struct.MVert* %81, i64 %idxprom78, !dbg !6947
  %83 = load %struct.CCGElem*, %struct.CCGElem** %vd, align 8, !dbg !6949
  call void @ccgDM_to_MVert(%struct.MVert* %arrayidx79, %struct.CCGKey* %key, %struct.CCGElem* %83), !dbg !6950
  br label %for.inc80, !dbg !6951

for.inc80:                                        ; preds = %for.body73
  %84 = load i32, i32* %index, align 4, !dbg !6952
  %inc81 = add nsw i32 %84, 1, !dbg !6952
  store i32 %inc81, i32* %index, align 4, !dbg !6952
  br label %for.cond71, !dbg !6953, !llvm.loop !6954

for.end82:                                        ; preds = %for.cond71
  ret void, !dbg !6956
}

; Function Attrs: noinline nounwind uwtable
define internal void @ccgDM_copyFinalEdgeArray(%struct.DerivedMesh* %dm, %struct.MEdge* %medge) #0 !dbg !6957 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %medge.addr = alloca %struct.MEdge*, align 8
  %ccgdm = alloca %struct.CCGDerivedMesh*, align 8
  %ss = alloca %struct.CCGSubSurf*, align 8
  %index = alloca i32, align 4
  %totedge = alloca i32, align 4
  %totface = alloca i32, align 4
  %gridSize = alloca i32, align 4
  %edgeSize = alloca i32, align 4
  %i = alloca i32, align 4
  %edgeFlags = alloca i16*, align 8
  %ed_interior_flag = alloca i16, align 2
  %f = alloca %struct.CCGFace*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %S = alloca i32, align 4
  %numVerts = alloca i32, align 4
  %e = alloca %struct.CCGEdge*, align 8
  %ed_flag = alloca i16, align 2
  %x61 = alloca i32, align 4
  %edgeIdx = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !6960, metadata !DIExpression()), !dbg !6961
  store %struct.MEdge* %medge, %struct.MEdge** %medge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MEdge** %medge.addr, metadata !6962, metadata !DIExpression()), !dbg !6963
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm, metadata !6964, metadata !DIExpression()), !dbg !6965
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !6966
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CCGDerivedMesh*, !dbg !6967
  store %struct.CCGDerivedMesh* %1, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !6965
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss, metadata !6968, metadata !DIExpression()), !dbg !6969
  %2 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !6970
  %ss1 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %2, i32 0, i32 1, !dbg !6971
  %3 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss1, align 8, !dbg !6971
  store %struct.CCGSubSurf* %3, %struct.CCGSubSurf** %ss, align 8, !dbg !6969
  call void @llvm.dbg.declare(metadata i32* %index, metadata !6972, metadata !DIExpression()), !dbg !6973
  call void @llvm.dbg.declare(metadata i32* %totedge, metadata !6974, metadata !DIExpression()), !dbg !6975
  call void @llvm.dbg.declare(metadata i32* %totface, metadata !6976, metadata !DIExpression()), !dbg !6977
  call void @llvm.dbg.declare(metadata i32* %gridSize, metadata !6978, metadata !DIExpression()), !dbg !6979
  %4 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !6980
  %call = call i32 @ccgSubSurf_getGridSize(%struct.CCGSubSurf* %4), !dbg !6981
  store i32 %call, i32* %gridSize, align 4, !dbg !6979
  call void @llvm.dbg.declare(metadata i32* %edgeSize, metadata !6982, metadata !DIExpression()), !dbg !6983
  %5 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !6984
  %call2 = call i32 @ccgSubSurf_getEdgeSize(%struct.CCGSubSurf* %5), !dbg !6985
  store i32 %call2, i32* %edgeSize, align 4, !dbg !6983
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6986, metadata !DIExpression()), !dbg !6987
  store i32 0, i32* %i, align 4, !dbg !6987
  call void @llvm.dbg.declare(metadata i16** %edgeFlags, metadata !6988, metadata !DIExpression()), !dbg !6989
  %6 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !6990
  %edgeFlags3 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %6, i32 0, i32 8, !dbg !6991
  %7 = load i16*, i16** %edgeFlags3, align 8, !dbg !6991
  store i16* %7, i16** %edgeFlags, align 8, !dbg !6989
  call void @llvm.dbg.declare(metadata i16* %ed_interior_flag, metadata !6992, metadata !DIExpression()), !dbg !6993
  %8 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !6994
  %drawInteriorEdges = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %8, i32 0, i32 3, !dbg !6995
  %9 = load i32, i32* %drawInteriorEdges, align 4, !dbg !6995
  %tobool = icmp ne i32 %9, 0, !dbg !6994
  %10 = zext i1 %tobool to i64, !dbg !6994
  %cond = select i1 %tobool, i32 34, i32 0, !dbg !6994
  %conv = trunc i32 %cond to i16, !dbg !6994
  store i16 %conv, i16* %ed_interior_flag, align 2, !dbg !6993
  %11 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !6996
  %call4 = call i32 @ccgSubSurf_getNumFaces(%struct.CCGSubSurf* %11), !dbg !6997
  store i32 %call4, i32* %totface, align 4, !dbg !6998
  store i32 0, i32* %index, align 4, !dbg !6999
  br label %for.cond, !dbg !7001

for.cond:                                         ; preds = %for.inc51, %entry
  %12 = load i32, i32* %index, align 4, !dbg !7002
  %13 = load i32, i32* %totface, align 4, !dbg !7004
  %cmp = icmp slt i32 %12, %13, !dbg !7005
  br i1 %cmp, label %for.body, label %for.end53, !dbg !7006

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f, metadata !7007, metadata !DIExpression()), !dbg !7009
  %14 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !7010
  %faceMap = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %14, i32 0, i32 7, !dbg !7011
  %15 = load %struct.anon.1*, %struct.anon.1** %faceMap, align 8, !dbg !7011
  %16 = load i32, i32* %index, align 4, !dbg !7012
  %idxprom = sext i32 %16 to i64, !dbg !7010
  %arrayidx = getelementptr inbounds %struct.anon.1, %struct.anon.1* %15, i64 %idxprom, !dbg !7010
  %face = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx, i32 0, i32 3, !dbg !7013
  %17 = load %struct.CCGFace*, %struct.CCGFace** %face, align 8, !dbg !7013
  store %struct.CCGFace* %17, %struct.CCGFace** %f, align 8, !dbg !7009
  call void @llvm.dbg.declare(metadata i32* %x, metadata !7014, metadata !DIExpression()), !dbg !7015
  call void @llvm.dbg.declare(metadata i32* %y, metadata !7016, metadata !DIExpression()), !dbg !7017
  call void @llvm.dbg.declare(metadata i32* %S, metadata !7018, metadata !DIExpression()), !dbg !7019
  call void @llvm.dbg.declare(metadata i32* %numVerts, metadata !7020, metadata !DIExpression()), !dbg !7021
  %18 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !7022
  %call6 = call i32 @ccgSubSurf_getFaceNumVerts(%struct.CCGFace* %18), !dbg !7023
  store i32 %call6, i32* %numVerts, align 4, !dbg !7021
  store i32 0, i32* %S, align 4, !dbg !7024
  br label %for.cond7, !dbg !7026

for.cond7:                                        ; preds = %for.inc48, %for.body
  %19 = load i32, i32* %S, align 4, !dbg !7027
  %20 = load i32, i32* %numVerts, align 4, !dbg !7029
  %cmp8 = icmp slt i32 %19, %20, !dbg !7030
  br i1 %cmp8, label %for.body10, label %for.end50, !dbg !7031

for.body10:                                       ; preds = %for.cond7
  store i32 0, i32* %x, align 4, !dbg !7032
  br label %for.cond11, !dbg !7035

for.cond11:                                       ; preds = %for.inc, %for.body10
  %21 = load i32, i32* %x, align 4, !dbg !7036
  %22 = load i32, i32* %gridSize, align 4, !dbg !7038
  %sub = sub nsw i32 %22, 1, !dbg !7039
  %cmp12 = icmp slt i32 %21, %sub, !dbg !7040
  br i1 %cmp12, label %for.body14, label %for.end, !dbg !7041

for.body14:                                       ; preds = %for.cond11
  %23 = load %struct.MEdge*, %struct.MEdge** %medge.addr, align 8, !dbg !7042
  %24 = load i32, i32* %i, align 4, !dbg !7044
  %inc = add i32 %24, 1, !dbg !7044
  store i32 %inc, i32* %i, align 4, !dbg !7044
  %idxprom15 = zext i32 %24 to i64, !dbg !7042
  %arrayidx16 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %23, i64 %idxprom15, !dbg !7042
  %25 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !7045
  %26 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !7046
  %27 = load i32, i32* %S, align 4, !dbg !7047
  %28 = load i32, i32* %x, align 4, !dbg !7048
  %29 = load i32, i32* %edgeSize, align 4, !dbg !7049
  %30 = load i32, i32* %gridSize, align 4, !dbg !7050
  %call17 = call i32 @getFaceIndex(%struct.CCGSubSurf* %25, %struct.CCGFace* %26, i32 %27, i32 %28, i32 0, i32 %29, i32 %30), !dbg !7051
  %31 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !7052
  %32 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !7053
  %33 = load i32, i32* %S, align 4, !dbg !7054
  %34 = load i32, i32* %x, align 4, !dbg !7055
  %add = add nsw i32 %34, 1, !dbg !7056
  %35 = load i32, i32* %edgeSize, align 4, !dbg !7057
  %36 = load i32, i32* %gridSize, align 4, !dbg !7058
  %call18 = call i32 @getFaceIndex(%struct.CCGSubSurf* %31, %struct.CCGFace* %32, i32 %33, i32 %add, i32 0, i32 %35, i32 %36), !dbg !7059
  %37 = load i16, i16* %ed_interior_flag, align 2, !dbg !7060
  call void @ccgDM_to_MEdge(%struct.MEdge* %arrayidx16, i32 %call17, i32 %call18, i16 signext %37), !dbg !7061
  br label %for.inc, !dbg !7062

for.inc:                                          ; preds = %for.body14
  %38 = load i32, i32* %x, align 4, !dbg !7063
  %inc19 = add nsw i32 %38, 1, !dbg !7063
  store i32 %inc19, i32* %x, align 4, !dbg !7063
  br label %for.cond11, !dbg !7064, !llvm.loop !7065

for.end:                                          ; preds = %for.cond11
  store i32 1, i32* %x, align 4, !dbg !7067
  br label %for.cond20, !dbg !7069

for.cond20:                                       ; preds = %for.inc45, %for.end
  %39 = load i32, i32* %x, align 4, !dbg !7070
  %40 = load i32, i32* %gridSize, align 4, !dbg !7072
  %sub21 = sub nsw i32 %40, 1, !dbg !7073
  %cmp22 = icmp slt i32 %39, %sub21, !dbg !7074
  br i1 %cmp22, label %for.body24, label %for.end47, !dbg !7075

for.body24:                                       ; preds = %for.cond20
  store i32 0, i32* %y, align 4, !dbg !7076
  br label %for.cond25, !dbg !7079

for.cond25:                                       ; preds = %for.inc42, %for.body24
  %41 = load i32, i32* %y, align 4, !dbg !7080
  %42 = load i32, i32* %gridSize, align 4, !dbg !7082
  %sub26 = sub nsw i32 %42, 1, !dbg !7083
  %cmp27 = icmp slt i32 %41, %sub26, !dbg !7084
  br i1 %cmp27, label %for.body29, label %for.end44, !dbg !7085

for.body29:                                       ; preds = %for.cond25
  %43 = load %struct.MEdge*, %struct.MEdge** %medge.addr, align 8, !dbg !7086
  %44 = load i32, i32* %i, align 4, !dbg !7088
  %inc30 = add i32 %44, 1, !dbg !7088
  store i32 %inc30, i32* %i, align 4, !dbg !7088
  %idxprom31 = zext i32 %44 to i64, !dbg !7086
  %arrayidx32 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %43, i64 %idxprom31, !dbg !7086
  %45 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !7089
  %46 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !7090
  %47 = load i32, i32* %S, align 4, !dbg !7091
  %48 = load i32, i32* %x, align 4, !dbg !7092
  %49 = load i32, i32* %y, align 4, !dbg !7093
  %50 = load i32, i32* %edgeSize, align 4, !dbg !7094
  %51 = load i32, i32* %gridSize, align 4, !dbg !7095
  %call33 = call i32 @getFaceIndex(%struct.CCGSubSurf* %45, %struct.CCGFace* %46, i32 %47, i32 %48, i32 %49, i32 %50, i32 %51), !dbg !7096
  %52 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !7097
  %53 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !7098
  %54 = load i32, i32* %S, align 4, !dbg !7099
  %55 = load i32, i32* %x, align 4, !dbg !7100
  %56 = load i32, i32* %y, align 4, !dbg !7101
  %add34 = add nsw i32 %56, 1, !dbg !7102
  %57 = load i32, i32* %edgeSize, align 4, !dbg !7103
  %58 = load i32, i32* %gridSize, align 4, !dbg !7104
  %call35 = call i32 @getFaceIndex(%struct.CCGSubSurf* %52, %struct.CCGFace* %53, i32 %54, i32 %55, i32 %add34, i32 %57, i32 %58), !dbg !7105
  %59 = load i16, i16* %ed_interior_flag, align 2, !dbg !7106
  call void @ccgDM_to_MEdge(%struct.MEdge* %arrayidx32, i32 %call33, i32 %call35, i16 signext %59), !dbg !7107
  %60 = load %struct.MEdge*, %struct.MEdge** %medge.addr, align 8, !dbg !7108
  %61 = load i32, i32* %i, align 4, !dbg !7109
  %inc36 = add i32 %61, 1, !dbg !7109
  store i32 %inc36, i32* %i, align 4, !dbg !7109
  %idxprom37 = zext i32 %61 to i64, !dbg !7108
  %arrayidx38 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %60, i64 %idxprom37, !dbg !7108
  %62 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !7110
  %63 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !7111
  %64 = load i32, i32* %S, align 4, !dbg !7112
  %65 = load i32, i32* %y, align 4, !dbg !7113
  %66 = load i32, i32* %x, align 4, !dbg !7114
  %67 = load i32, i32* %edgeSize, align 4, !dbg !7115
  %68 = load i32, i32* %gridSize, align 4, !dbg !7116
  %call39 = call i32 @getFaceIndex(%struct.CCGSubSurf* %62, %struct.CCGFace* %63, i32 %64, i32 %65, i32 %66, i32 %67, i32 %68), !dbg !7117
  %69 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !7118
  %70 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !7119
  %71 = load i32, i32* %S, align 4, !dbg !7120
  %72 = load i32, i32* %y, align 4, !dbg !7121
  %add40 = add nsw i32 %72, 1, !dbg !7122
  %73 = load i32, i32* %x, align 4, !dbg !7123
  %74 = load i32, i32* %edgeSize, align 4, !dbg !7124
  %75 = load i32, i32* %gridSize, align 4, !dbg !7125
  %call41 = call i32 @getFaceIndex(%struct.CCGSubSurf* %69, %struct.CCGFace* %70, i32 %71, i32 %add40, i32 %73, i32 %74, i32 %75), !dbg !7126
  %76 = load i16, i16* %ed_interior_flag, align 2, !dbg !7127
  call void @ccgDM_to_MEdge(%struct.MEdge* %arrayidx38, i32 %call39, i32 %call41, i16 signext %76), !dbg !7128
  br label %for.inc42, !dbg !7129

for.inc42:                                        ; preds = %for.body29
  %77 = load i32, i32* %y, align 4, !dbg !7130
  %inc43 = add nsw i32 %77, 1, !dbg !7130
  store i32 %inc43, i32* %y, align 4, !dbg !7130
  br label %for.cond25, !dbg !7131, !llvm.loop !7132

for.end44:                                        ; preds = %for.cond25
  br label %for.inc45, !dbg !7134

for.inc45:                                        ; preds = %for.end44
  %78 = load i32, i32* %x, align 4, !dbg !7135
  %inc46 = add nsw i32 %78, 1, !dbg !7135
  store i32 %inc46, i32* %x, align 4, !dbg !7135
  br label %for.cond20, !dbg !7136, !llvm.loop !7137

for.end47:                                        ; preds = %for.cond20
  br label %for.inc48, !dbg !7139

for.inc48:                                        ; preds = %for.end47
  %79 = load i32, i32* %S, align 4, !dbg !7140
  %inc49 = add nsw i32 %79, 1, !dbg !7140
  store i32 %inc49, i32* %S, align 4, !dbg !7140
  br label %for.cond7, !dbg !7141, !llvm.loop !7142

for.end50:                                        ; preds = %for.cond7
  br label %for.inc51, !dbg !7144

for.inc51:                                        ; preds = %for.end50
  %80 = load i32, i32* %index, align 4, !dbg !7145
  %inc52 = add nsw i32 %80, 1, !dbg !7145
  store i32 %inc52, i32* %index, align 4, !dbg !7145
  br label %for.cond, !dbg !7146, !llvm.loop !7147

for.end53:                                        ; preds = %for.cond
  %81 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !7149
  %call54 = call i32 @ccgSubSurf_getNumEdges(%struct.CCGSubSurf* %81), !dbg !7150
  store i32 %call54, i32* %totedge, align 4, !dbg !7151
  store i32 0, i32* %index, align 4, !dbg !7152
  br label %for.cond55, !dbg !7154

for.cond55:                                       ; preds = %for.inc100, %for.end53
  %82 = load i32, i32* %index, align 4, !dbg !7155
  %83 = load i32, i32* %totedge, align 4, !dbg !7157
  %cmp56 = icmp slt i32 %82, %83, !dbg !7158
  br i1 %cmp56, label %for.body58, label %for.end102, !dbg !7159

for.body58:                                       ; preds = %for.cond55
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e, metadata !7160, metadata !DIExpression()), !dbg !7162
  %84 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !7163
  %edgeMap = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %84, i32 0, i32 6, !dbg !7164
  %85 = load %struct.anon.0*, %struct.anon.0** %edgeMap, align 8, !dbg !7164
  %86 = load i32, i32* %index, align 4, !dbg !7165
  %idxprom59 = sext i32 %86 to i64, !dbg !7163
  %arrayidx60 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %85, i64 %idxprom59, !dbg !7163
  %edge = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx60, i32 0, i32 2, !dbg !7166
  %87 = load %struct.CCGEdge*, %struct.CCGEdge** %edge, align 8, !dbg !7166
  store %struct.CCGEdge* %87, %struct.CCGEdge** %e, align 8, !dbg !7162
  call void @llvm.dbg.declare(metadata i16* %ed_flag, metadata !7167, metadata !DIExpression()), !dbg !7168
  store i16 0, i16* %ed_flag, align 2, !dbg !7168
  call void @llvm.dbg.declare(metadata i32* %x61, metadata !7169, metadata !DIExpression()), !dbg !7170
  call void @llvm.dbg.declare(metadata i32* %edgeIdx, metadata !7171, metadata !DIExpression()), !dbg !7172
  %88 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !7173
  %call62 = call i8* @ccgSubSurf_getEdgeEdgeHandle(%struct.CCGEdge* %88), !dbg !7173
  %89 = ptrtoint i8* %call62 to i64, !dbg !7173
  %conv63 = trunc i64 %89 to i32, !dbg !7173
  store i32 %conv63, i32* %edgeIdx, align 4, !dbg !7172
  %90 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !7174
  %call64 = call i32 @ccgSubSurf_getEdgeNumFaces(%struct.CCGEdge* %90), !dbg !7176
  %tobool65 = icmp ne i32 %call64, 0, !dbg !7176
  br i1 %tobool65, label %if.end, label %if.then, !dbg !7177

if.then:                                          ; preds = %for.body58
  %91 = load i16, i16* %ed_flag, align 2, !dbg !7178
  %conv66 = sext i16 %91 to i32, !dbg !7178
  %or = or i32 %conv66, 128, !dbg !7178
  %conv67 = trunc i32 %or to i16, !dbg !7178
  store i16 %conv67, i16* %ed_flag, align 2, !dbg !7178
  br label %if.end, !dbg !7180

if.end:                                           ; preds = %if.then, %for.body58
  %92 = load i16*, i16** %edgeFlags, align 8, !dbg !7181
  %tobool68 = icmp ne i16* %92, null, !dbg !7181
  br i1 %tobool68, label %if.then69, label %if.else, !dbg !7183

if.then69:                                        ; preds = %if.end
  %93 = load i32, i32* %edgeIdx, align 4, !dbg !7184
  %cmp70 = icmp ne i32 %93, -1, !dbg !7187
  br i1 %cmp70, label %if.then72, label %if.end81, !dbg !7188

if.then72:                                        ; preds = %if.then69
  %94 = load i16*, i16** %edgeFlags, align 8, !dbg !7189
  %95 = load i32, i32* %index, align 4, !dbg !7191
  %idxprom73 = sext i32 %95 to i64, !dbg !7189
  %arrayidx74 = getelementptr inbounds i16, i16* %94, i64 %idxprom73, !dbg !7189
  %96 = load i16, i16* %arrayidx74, align 2, !dbg !7189
  %conv75 = sext i16 %96 to i32, !dbg !7189
  %and = and i32 %conv75, 516, !dbg !7192
  %or76 = or i32 %and, 2, !dbg !7193
  %or77 = or i32 %or76, 32, !dbg !7194
  %97 = load i16, i16* %ed_flag, align 2, !dbg !7195
  %conv78 = sext i16 %97 to i32, !dbg !7195
  %or79 = or i32 %conv78, %or77, !dbg !7195
  %conv80 = trunc i32 %or79 to i16, !dbg !7195
  store i16 %conv80, i16* %ed_flag, align 2, !dbg !7195
  br label %if.end81, !dbg !7196

if.end81:                                         ; preds = %if.then72, %if.then69
  br label %if.end85, !dbg !7197

if.else:                                          ; preds = %if.end
  %98 = load i16, i16* %ed_flag, align 2, !dbg !7198
  %conv82 = sext i16 %98 to i32, !dbg !7198
  %or83 = or i32 %conv82, 34, !dbg !7198
  %conv84 = trunc i32 %or83 to i16, !dbg !7198
  store i16 %conv84, i16* %ed_flag, align 2, !dbg !7198
  br label %if.end85

if.end85:                                         ; preds = %if.else, %if.end81
  store i32 0, i32* %x61, align 4, !dbg !7200
  br label %for.cond86, !dbg !7202

for.cond86:                                       ; preds = %for.inc97, %if.end85
  %99 = load i32, i32* %x61, align 4, !dbg !7203
  %100 = load i32, i32* %edgeSize, align 4, !dbg !7205
  %sub87 = sub nsw i32 %100, 1, !dbg !7206
  %cmp88 = icmp slt i32 %99, %sub87, !dbg !7207
  br i1 %cmp88, label %for.body90, label %for.end99, !dbg !7208

for.body90:                                       ; preds = %for.cond86
  %101 = load %struct.MEdge*, %struct.MEdge** %medge.addr, align 8, !dbg !7209
  %102 = load i32, i32* %i, align 4, !dbg !7211
  %inc91 = add i32 %102, 1, !dbg !7211
  store i32 %inc91, i32* %i, align 4, !dbg !7211
  %idxprom92 = zext i32 %102 to i64, !dbg !7209
  %arrayidx93 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %101, i64 %idxprom92, !dbg !7209
  %103 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !7212
  %104 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !7213
  %105 = load i32, i32* %x61, align 4, !dbg !7214
  %106 = load i32, i32* %edgeSize, align 4, !dbg !7215
  %call94 = call i32 @getEdgeIndex(%struct.CCGSubSurf* %103, %struct.CCGEdge* %104, i32 %105, i32 %106), !dbg !7216
  %107 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !7217
  %108 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !7218
  %109 = load i32, i32* %x61, align 4, !dbg !7219
  %add95 = add nsw i32 %109, 1, !dbg !7220
  %110 = load i32, i32* %edgeSize, align 4, !dbg !7221
  %call96 = call i32 @getEdgeIndex(%struct.CCGSubSurf* %107, %struct.CCGEdge* %108, i32 %add95, i32 %110), !dbg !7222
  %111 = load i16, i16* %ed_flag, align 2, !dbg !7223
  call void @ccgDM_to_MEdge(%struct.MEdge* %arrayidx93, i32 %call94, i32 %call96, i16 signext %111), !dbg !7224
  br label %for.inc97, !dbg !7225

for.inc97:                                        ; preds = %for.body90
  %112 = load i32, i32* %x61, align 4, !dbg !7226
  %inc98 = add nsw i32 %112, 1, !dbg !7226
  store i32 %inc98, i32* %x61, align 4, !dbg !7226
  br label %for.cond86, !dbg !7227, !llvm.loop !7228

for.end99:                                        ; preds = %for.cond86
  br label %for.inc100, !dbg !7230

for.inc100:                                       ; preds = %for.end99
  %113 = load i32, i32* %index, align 4, !dbg !7231
  %inc101 = add nsw i32 %113, 1, !dbg !7231
  store i32 %inc101, i32* %index, align 4, !dbg !7231
  br label %for.cond55, !dbg !7232, !llvm.loop !7233

for.end102:                                       ; preds = %for.cond55
  ret void, !dbg !7235
}

; Function Attrs: noinline nounwind uwtable
define internal void @ccgDM_copyFinalFaceArray(%struct.DerivedMesh* %dm, %struct.MFace* %mface) #0 !dbg !7236 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %mface.addr = alloca %struct.MFace*, align 8
  %ccgdm = alloca %struct.CCGDerivedMesh*, align 8
  %ss = alloca %struct.CCGSubSurf*, align 8
  %index = alloca i32, align 4
  %totface = alloca i32, align 4
  %gridSize = alloca i32, align 4
  %edgeSize = alloca i32, align 4
  %i = alloca i32, align 4
  %faceFlags = alloca %struct.DMFlagMat*, align 8
  %f = alloca %struct.CCGFace*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %S = alloca i32, align 4
  %numVerts = alloca i32, align 4
  %flag = alloca i8, align 1
  %mat_nr = alloca i16, align 2
  %mf = alloca %struct.MFace*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !7239, metadata !DIExpression()), !dbg !7240
  store %struct.MFace* %mface, %struct.MFace** %mface.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MFace** %mface.addr, metadata !7241, metadata !DIExpression()), !dbg !7242
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm, metadata !7243, metadata !DIExpression()), !dbg !7244
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7245
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CCGDerivedMesh*, !dbg !7246
  store %struct.CCGDerivedMesh* %1, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !7244
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss, metadata !7247, metadata !DIExpression()), !dbg !7248
  %2 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !7249
  %ss1 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %2, i32 0, i32 1, !dbg !7250
  %3 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss1, align 8, !dbg !7250
  store %struct.CCGSubSurf* %3, %struct.CCGSubSurf** %ss, align 8, !dbg !7248
  call void @llvm.dbg.declare(metadata i32* %index, metadata !7251, metadata !DIExpression()), !dbg !7252
  call void @llvm.dbg.declare(metadata i32* %totface, metadata !7253, metadata !DIExpression()), !dbg !7254
  call void @llvm.dbg.declare(metadata i32* %gridSize, metadata !7255, metadata !DIExpression()), !dbg !7256
  %4 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !7257
  %call = call i32 @ccgSubSurf_getGridSize(%struct.CCGSubSurf* %4), !dbg !7258
  store i32 %call, i32* %gridSize, align 4, !dbg !7256
  call void @llvm.dbg.declare(metadata i32* %edgeSize, metadata !7259, metadata !DIExpression()), !dbg !7260
  %5 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !7261
  %call2 = call i32 @ccgSubSurf_getEdgeSize(%struct.CCGSubSurf* %5), !dbg !7262
  store i32 %call2, i32* %edgeSize, align 4, !dbg !7260
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7263, metadata !DIExpression()), !dbg !7264
  store i32 0, i32* %i, align 4, !dbg !7264
  call void @llvm.dbg.declare(metadata %struct.DMFlagMat** %faceFlags, metadata !7265, metadata !DIExpression()), !dbg !7266
  %6 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !7267
  %faceFlags3 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %6, i32 0, i32 9, !dbg !7268
  %7 = load %struct.DMFlagMat*, %struct.DMFlagMat** %faceFlags3, align 8, !dbg !7268
  store %struct.DMFlagMat* %7, %struct.DMFlagMat** %faceFlags, align 8, !dbg !7266
  %8 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !7269
  %call4 = call i32 @ccgSubSurf_getNumFaces(%struct.CCGSubSurf* %8), !dbg !7270
  store i32 %call4, i32* %totface, align 4, !dbg !7271
  store i32 0, i32* %index, align 4, !dbg !7272
  br label %for.cond, !dbg !7274

for.cond:                                         ; preds = %for.inc55, %entry
  %9 = load i32, i32* %index, align 4, !dbg !7275
  %10 = load i32, i32* %totface, align 4, !dbg !7277
  %cmp = icmp slt i32 %9, %10, !dbg !7278
  br i1 %cmp, label %for.body, label %for.end57, !dbg !7279

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f, metadata !7280, metadata !DIExpression()), !dbg !7282
  %11 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !7283
  %faceMap = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %11, i32 0, i32 7, !dbg !7284
  %12 = load %struct.anon.1*, %struct.anon.1** %faceMap, align 8, !dbg !7284
  %13 = load i32, i32* %index, align 4, !dbg !7285
  %idxprom = sext i32 %13 to i64, !dbg !7283
  %arrayidx = getelementptr inbounds %struct.anon.1, %struct.anon.1* %12, i64 %idxprom, !dbg !7283
  %face = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx, i32 0, i32 3, !dbg !7286
  %14 = load %struct.CCGFace*, %struct.CCGFace** %face, align 8, !dbg !7286
  store %struct.CCGFace* %14, %struct.CCGFace** %f, align 8, !dbg !7282
  call void @llvm.dbg.declare(metadata i32* %x, metadata !7287, metadata !DIExpression()), !dbg !7288
  call void @llvm.dbg.declare(metadata i32* %y, metadata !7289, metadata !DIExpression()), !dbg !7290
  call void @llvm.dbg.declare(metadata i32* %S, metadata !7291, metadata !DIExpression()), !dbg !7292
  call void @llvm.dbg.declare(metadata i32* %numVerts, metadata !7293, metadata !DIExpression()), !dbg !7294
  %15 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !7295
  %call5 = call i32 @ccgSubSurf_getFaceNumVerts(%struct.CCGFace* %15), !dbg !7296
  store i32 %call5, i32* %numVerts, align 4, !dbg !7294
  call void @llvm.dbg.declare(metadata i8* %flag, metadata !7297, metadata !DIExpression()), !dbg !7298
  %16 = load %struct.DMFlagMat*, %struct.DMFlagMat** %faceFlags, align 8, !dbg !7299
  %tobool = icmp ne %struct.DMFlagMat* %16, null, !dbg !7300
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7300

cond.true:                                        ; preds = %for.body
  %17 = load %struct.DMFlagMat*, %struct.DMFlagMat** %faceFlags, align 8, !dbg !7301
  %18 = load i32, i32* %index, align 4, !dbg !7302
  %idxprom6 = sext i32 %18 to i64, !dbg !7301
  %arrayidx7 = getelementptr inbounds %struct.DMFlagMat, %struct.DMFlagMat* %17, i64 %idxprom6, !dbg !7301
  %flag8 = getelementptr inbounds %struct.DMFlagMat, %struct.DMFlagMat* %arrayidx7, i32 0, i32 1, !dbg !7303
  %19 = load i8, i8* %flag8, align 2, !dbg !7303
  %conv = zext i8 %19 to i32, !dbg !7301
  br label %cond.end, !dbg !7300

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !7300

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ 1, %cond.false ], !dbg !7300
  %conv9 = trunc i32 %cond to i8, !dbg !7300
  store i8 %conv9, i8* %flag, align 1, !dbg !7298
  call void @llvm.dbg.declare(metadata i16* %mat_nr, metadata !7304, metadata !DIExpression()), !dbg !7305
  %20 = load %struct.DMFlagMat*, %struct.DMFlagMat** %faceFlags, align 8, !dbg !7306
  %tobool10 = icmp ne %struct.DMFlagMat* %20, null, !dbg !7307
  br i1 %tobool10, label %cond.true11, label %cond.false16, !dbg !7307

cond.true11:                                      ; preds = %cond.end
  %21 = load %struct.DMFlagMat*, %struct.DMFlagMat** %faceFlags, align 8, !dbg !7308
  %22 = load i32, i32* %index, align 4, !dbg !7309
  %idxprom12 = sext i32 %22 to i64, !dbg !7308
  %arrayidx13 = getelementptr inbounds %struct.DMFlagMat, %struct.DMFlagMat* %21, i64 %idxprom12, !dbg !7308
  %mat_nr14 = getelementptr inbounds %struct.DMFlagMat, %struct.DMFlagMat* %arrayidx13, i32 0, i32 0, !dbg !7310
  %23 = load i16, i16* %mat_nr14, align 2, !dbg !7310
  %conv15 = sext i16 %23 to i32, !dbg !7308
  br label %cond.end17, !dbg !7307

cond.false16:                                     ; preds = %cond.end
  br label %cond.end17, !dbg !7307

cond.end17:                                       ; preds = %cond.false16, %cond.true11
  %cond18 = phi i32 [ %conv15, %cond.true11 ], [ 0, %cond.false16 ], !dbg !7307
  %conv19 = trunc i32 %cond18 to i16, !dbg !7307
  store i16 %conv19, i16* %mat_nr, align 2, !dbg !7305
  store i32 0, i32* %S, align 4, !dbg !7311
  br label %for.cond20, !dbg !7313

for.cond20:                                       ; preds = %for.inc52, %cond.end17
  %24 = load i32, i32* %S, align 4, !dbg !7314
  %25 = load i32, i32* %numVerts, align 4, !dbg !7316
  %cmp21 = icmp slt i32 %24, %25, !dbg !7317
  br i1 %cmp21, label %for.body23, label %for.end54, !dbg !7318

for.body23:                                       ; preds = %for.cond20
  store i32 0, i32* %y, align 4, !dbg !7319
  br label %for.cond24, !dbg !7322

for.cond24:                                       ; preds = %for.inc49, %for.body23
  %26 = load i32, i32* %y, align 4, !dbg !7323
  %27 = load i32, i32* %gridSize, align 4, !dbg !7325
  %sub = sub nsw i32 %27, 1, !dbg !7326
  %cmp25 = icmp slt i32 %26, %sub, !dbg !7327
  br i1 %cmp25, label %for.body27, label %for.end51, !dbg !7328

for.body27:                                       ; preds = %for.cond24
  store i32 0, i32* %x, align 4, !dbg !7329
  br label %for.cond28, !dbg !7332

for.cond28:                                       ; preds = %for.inc, %for.body27
  %28 = load i32, i32* %x, align 4, !dbg !7333
  %29 = load i32, i32* %gridSize, align 4, !dbg !7335
  %sub29 = sub nsw i32 %29, 1, !dbg !7336
  %cmp30 = icmp slt i32 %28, %sub29, !dbg !7337
  br i1 %cmp30, label %for.body32, label %for.end, !dbg !7338

for.body32:                                       ; preds = %for.cond28
  call void @llvm.dbg.declare(metadata %struct.MFace** %mf, metadata !7339, metadata !DIExpression()), !dbg !7341
  %30 = load %struct.MFace*, %struct.MFace** %mface.addr, align 8, !dbg !7342
  %31 = load i32, i32* %i, align 4, !dbg !7343
  %idxprom33 = sext i32 %31 to i64, !dbg !7342
  %arrayidx34 = getelementptr inbounds %struct.MFace, %struct.MFace* %30, i64 %idxprom33, !dbg !7342
  store %struct.MFace* %arrayidx34, %struct.MFace** %mf, align 8, !dbg !7341
  %32 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !7344
  %33 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !7345
  %34 = load i32, i32* %S, align 4, !dbg !7346
  %35 = load i32, i32* %x, align 4, !dbg !7347
  %add = add nsw i32 %35, 0, !dbg !7348
  %36 = load i32, i32* %y, align 4, !dbg !7349
  %add35 = add nsw i32 %36, 0, !dbg !7350
  %37 = load i32, i32* %edgeSize, align 4, !dbg !7351
  %38 = load i32, i32* %gridSize, align 4, !dbg !7352
  %call36 = call i32 @getFaceIndex(%struct.CCGSubSurf* %32, %struct.CCGFace* %33, i32 %34, i32 %add, i32 %add35, i32 %37, i32 %38), !dbg !7353
  %39 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !7354
  %v1 = getelementptr inbounds %struct.MFace, %struct.MFace* %39, i32 0, i32 0, !dbg !7355
  store i32 %call36, i32* %v1, align 4, !dbg !7356
  %40 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !7357
  %41 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !7358
  %42 = load i32, i32* %S, align 4, !dbg !7359
  %43 = load i32, i32* %x, align 4, !dbg !7360
  %add37 = add nsw i32 %43, 0, !dbg !7361
  %44 = load i32, i32* %y, align 4, !dbg !7362
  %add38 = add nsw i32 %44, 1, !dbg !7363
  %45 = load i32, i32* %edgeSize, align 4, !dbg !7364
  %46 = load i32, i32* %gridSize, align 4, !dbg !7365
  %call39 = call i32 @getFaceIndex(%struct.CCGSubSurf* %40, %struct.CCGFace* %41, i32 %42, i32 %add37, i32 %add38, i32 %45, i32 %46), !dbg !7366
  %47 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !7367
  %v2 = getelementptr inbounds %struct.MFace, %struct.MFace* %47, i32 0, i32 1, !dbg !7368
  store i32 %call39, i32* %v2, align 4, !dbg !7369
  %48 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !7370
  %49 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !7371
  %50 = load i32, i32* %S, align 4, !dbg !7372
  %51 = load i32, i32* %x, align 4, !dbg !7373
  %add40 = add nsw i32 %51, 1, !dbg !7374
  %52 = load i32, i32* %y, align 4, !dbg !7375
  %add41 = add nsw i32 %52, 1, !dbg !7376
  %53 = load i32, i32* %edgeSize, align 4, !dbg !7377
  %54 = load i32, i32* %gridSize, align 4, !dbg !7378
  %call42 = call i32 @getFaceIndex(%struct.CCGSubSurf* %48, %struct.CCGFace* %49, i32 %50, i32 %add40, i32 %add41, i32 %53, i32 %54), !dbg !7379
  %55 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !7380
  %v3 = getelementptr inbounds %struct.MFace, %struct.MFace* %55, i32 0, i32 2, !dbg !7381
  store i32 %call42, i32* %v3, align 4, !dbg !7382
  %56 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !7383
  %57 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !7384
  %58 = load i32, i32* %S, align 4, !dbg !7385
  %59 = load i32, i32* %x, align 4, !dbg !7386
  %add43 = add nsw i32 %59, 1, !dbg !7387
  %60 = load i32, i32* %y, align 4, !dbg !7388
  %add44 = add nsw i32 %60, 0, !dbg !7389
  %61 = load i32, i32* %edgeSize, align 4, !dbg !7390
  %62 = load i32, i32* %gridSize, align 4, !dbg !7391
  %call45 = call i32 @getFaceIndex(%struct.CCGSubSurf* %56, %struct.CCGFace* %57, i32 %58, i32 %add43, i32 %add44, i32 %61, i32 %62), !dbg !7392
  %63 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !7393
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %63, i32 0, i32 3, !dbg !7394
  store i32 %call45, i32* %v4, align 4, !dbg !7395
  %64 = load i16, i16* %mat_nr, align 2, !dbg !7396
  %65 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !7397
  %mat_nr46 = getelementptr inbounds %struct.MFace, %struct.MFace* %65, i32 0, i32 4, !dbg !7398
  store i16 %64, i16* %mat_nr46, align 4, !dbg !7399
  %66 = load i8, i8* %flag, align 1, !dbg !7400
  %67 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !7401
  %flag47 = getelementptr inbounds %struct.MFace, %struct.MFace* %67, i32 0, i32 6, !dbg !7402
  store i8 %66, i8* %flag47, align 1, !dbg !7403
  %68 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !7404
  %edcode = getelementptr inbounds %struct.MFace, %struct.MFace* %68, i32 0, i32 5, !dbg !7405
  store i8 0, i8* %edcode, align 2, !dbg !7406
  %69 = load i32, i32* %i, align 4, !dbg !7407
  %inc = add nsw i32 %69, 1, !dbg !7407
  store i32 %inc, i32* %i, align 4, !dbg !7407
  br label %for.inc, !dbg !7408

for.inc:                                          ; preds = %for.body32
  %70 = load i32, i32* %x, align 4, !dbg !7409
  %inc48 = add nsw i32 %70, 1, !dbg !7409
  store i32 %inc48, i32* %x, align 4, !dbg !7409
  br label %for.cond28, !dbg !7410, !llvm.loop !7411

for.end:                                          ; preds = %for.cond28
  br label %for.inc49, !dbg !7413

for.inc49:                                        ; preds = %for.end
  %71 = load i32, i32* %y, align 4, !dbg !7414
  %inc50 = add nsw i32 %71, 1, !dbg !7414
  store i32 %inc50, i32* %y, align 4, !dbg !7414
  br label %for.cond24, !dbg !7415, !llvm.loop !7416

for.end51:                                        ; preds = %for.cond24
  br label %for.inc52, !dbg !7418

for.inc52:                                        ; preds = %for.end51
  %72 = load i32, i32* %S, align 4, !dbg !7419
  %inc53 = add nsw i32 %72, 1, !dbg !7419
  store i32 %inc53, i32* %S, align 4, !dbg !7419
  br label %for.cond20, !dbg !7420, !llvm.loop !7421

for.end54:                                        ; preds = %for.cond20
  br label %for.inc55, !dbg !7423

for.inc55:                                        ; preds = %for.end54
  %73 = load i32, i32* %index, align 4, !dbg !7424
  %inc56 = add nsw i32 %73, 1, !dbg !7424
  store i32 %inc56, i32* %index, align 4, !dbg !7424
  br label %for.cond, !dbg !7425, !llvm.loop !7426

for.end57:                                        ; preds = %for.cond
  ret void, !dbg !7428
}

; Function Attrs: noinline nounwind uwtable
define internal void @ccgDM_copyFinalLoopArray(%struct.DerivedMesh* %dm, %struct.MLoop* %mloop) #0 !dbg !7429 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %mloop.addr = alloca %struct.MLoop*, align 8
  %ccgdm = alloca %struct.CCGDerivedMesh*, align 8
  %ss = alloca %struct.CCGSubSurf*, align 8
  %index = alloca i32, align 4
  %totface = alloca i32, align 4
  %gridSize = alloca i32, align 4
  %edgeSize = alloca i32, align 4
  %i = alloca i32, align 4
  %mv = alloca %struct.MLoop*, align 8
  %medge = alloca %struct.MEdge*, align 8
  %f = alloca %struct.CCGFace*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %S = alloca i32, align 4
  %numVerts = alloca i32, align 4
  %v138 = alloca i32, align 4
  %v239 = alloca i32, align 4
  %v3 = alloca i32, align 4
  %v4 = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !7432, metadata !DIExpression()), !dbg !7433
  store %struct.MLoop* %mloop, %struct.MLoop** %mloop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLoop** %mloop.addr, metadata !7434, metadata !DIExpression()), !dbg !7435
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm, metadata !7436, metadata !DIExpression()), !dbg !7437
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7438
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CCGDerivedMesh*, !dbg !7439
  store %struct.CCGDerivedMesh* %1, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !7437
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss, metadata !7440, metadata !DIExpression()), !dbg !7441
  %2 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !7442
  %ss1 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %2, i32 0, i32 1, !dbg !7443
  %3 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss1, align 8, !dbg !7443
  store %struct.CCGSubSurf* %3, %struct.CCGSubSurf** %ss, align 8, !dbg !7441
  call void @llvm.dbg.declare(metadata i32* %index, metadata !7444, metadata !DIExpression()), !dbg !7445
  call void @llvm.dbg.declare(metadata i32* %totface, metadata !7446, metadata !DIExpression()), !dbg !7447
  call void @llvm.dbg.declare(metadata i32* %gridSize, metadata !7448, metadata !DIExpression()), !dbg !7449
  %4 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !7450
  %call = call i32 @ccgSubSurf_getGridSize(%struct.CCGSubSurf* %4), !dbg !7451
  store i32 %call, i32* %gridSize, align 4, !dbg !7449
  call void @llvm.dbg.declare(metadata i32* %edgeSize, metadata !7452, metadata !DIExpression()), !dbg !7453
  %5 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !7454
  %call2 = call i32 @ccgSubSurf_getEdgeSize(%struct.CCGSubSurf* %5), !dbg !7455
  store i32 %call2, i32* %edgeSize, align 4, !dbg !7453
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7456, metadata !DIExpression()), !dbg !7457
  store i32 0, i32* %i, align 4, !dbg !7457
  call void @llvm.dbg.declare(metadata %struct.MLoop** %mv, metadata !7458, metadata !DIExpression()), !dbg !7459
  %6 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !7460
  %ehash = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %6, i32 0, i32 21, !dbg !7462
  %7 = load %struct.EdgeHash*, %struct.EdgeHash** %ehash, align 8, !dbg !7462
  %tobool = icmp ne %struct.EdgeHash* %7, null, !dbg !7460
  br i1 %tobool, label %if.end16, label %if.then, !dbg !7463

if.then:                                          ; preds = %entry
  call void @BLI_rw_mutex_lock(i32* @loops_cache_rwlock, i32 2), !dbg !7464
  %8 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !7466
  %ehash3 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %8, i32 0, i32 21, !dbg !7468
  %9 = load %struct.EdgeHash*, %struct.EdgeHash** %ehash3, align 8, !dbg !7468
  %tobool4 = icmp ne %struct.EdgeHash* %9, null, !dbg !7466
  br i1 %tobool4, label %if.end, label %if.then5, !dbg !7469

if.then5:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.MEdge** %medge, metadata !7470, metadata !DIExpression()), !dbg !7472
  %10 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !7473
  %dm6 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %10, i32 0, i32 0, !dbg !7474
  %numEdgeData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm6, i32 0, i32 6, !dbg !7475
  %11 = load i32, i32* %numEdgeData, align 4, !dbg !7475
  %call7 = call %struct.EdgeHash* @BLI_edgehash_new_ex(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__func__.ccgDM_copyFinalLoopArray, i64 0, i64 0), i32 %11), !dbg !7476
  %12 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !7477
  %ehash8 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %12, i32 0, i32 21, !dbg !7478
  store %struct.EdgeHash* %call7, %struct.EdgeHash** %ehash8, align 8, !dbg !7479
  %13 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !7480
  %dm9 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %13, i32 0, i32 0, !dbg !7481
  %getEdgeArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm9, i32 0, i32 32, !dbg !7482
  %14 = load %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)** %getEdgeArray, align 8, !dbg !7482
  %15 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !7483
  %16 = bitcast %struct.CCGDerivedMesh* %15 to %struct.DerivedMesh*, !dbg !7484
  %call10 = call %struct.MEdge* %14(%struct.DerivedMesh* %16), !dbg !7480
  store %struct.MEdge* %call10, %struct.MEdge** %medge, align 8, !dbg !7485
  store i32 0, i32* %i, align 4, !dbg !7486
  br label %for.cond, !dbg !7488

for.cond:                                         ; preds = %for.inc, %if.then5
  %17 = load i32, i32* %i, align 4, !dbg !7489
  %18 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !7491
  %dm11 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %18, i32 0, i32 0, !dbg !7492
  %numEdgeData12 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm11, i32 0, i32 6, !dbg !7493
  %19 = load i32, i32* %numEdgeData12, align 4, !dbg !7493
  %cmp = icmp slt i32 %17, %19, !dbg !7494
  br i1 %cmp, label %for.body, label %for.end, !dbg !7495

for.body:                                         ; preds = %for.cond
  %20 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !7496
  %ehash13 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %20, i32 0, i32 21, !dbg !7498
  %21 = load %struct.EdgeHash*, %struct.EdgeHash** %ehash13, align 8, !dbg !7498
  %22 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !7499
  %23 = load i32, i32* %i, align 4, !dbg !7500
  %idxprom = sext i32 %23 to i64, !dbg !7499
  %arrayidx = getelementptr inbounds %struct.MEdge, %struct.MEdge* %22, i64 %idxprom, !dbg !7499
  %v1 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %arrayidx, i32 0, i32 0, !dbg !7501
  %24 = load i32, i32* %v1, align 4, !dbg !7501
  %25 = load %struct.MEdge*, %struct.MEdge** %medge, align 8, !dbg !7502
  %26 = load i32, i32* %i, align 4, !dbg !7503
  %idxprom14 = sext i32 %26 to i64, !dbg !7502
  %arrayidx15 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %25, i64 %idxprom14, !dbg !7502
  %v2 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %arrayidx15, i32 0, i32 1, !dbg !7504
  %27 = load i32, i32* %v2, align 4, !dbg !7504
  %28 = load i32, i32* %i, align 4, !dbg !7505
  %conv = sext i32 %28 to i64, !dbg !7505
  %29 = inttoptr i64 %conv to i8*, !dbg !7505
  call void @BLI_edgehash_insert(%struct.EdgeHash* %21, i32 %24, i32 %27, i8* %29), !dbg !7506
  br label %for.inc, !dbg !7507

for.inc:                                          ; preds = %for.body
  %30 = load i32, i32* %i, align 4, !dbg !7508
  %inc = add nsw i32 %30, 1, !dbg !7508
  store i32 %inc, i32* %i, align 4, !dbg !7508
  br label %for.cond, !dbg !7509, !llvm.loop !7510

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !7512

if.end:                                           ; preds = %for.end, %if.then
  call void @BLI_rw_mutex_unlock(i32* @loops_cache_rwlock), !dbg !7513
  br label %if.end16, !dbg !7514

if.end16:                                         ; preds = %if.end, %entry
  call void @BLI_rw_mutex_lock(i32* @loops_cache_rwlock, i32 1), !dbg !7515
  %31 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !7516
  %call17 = call i32 @ccgSubSurf_getNumFaces(%struct.CCGSubSurf* %31), !dbg !7517
  store i32 %call17, i32* %totface, align 4, !dbg !7518
  %32 = load %struct.MLoop*, %struct.MLoop** %mloop.addr, align 8, !dbg !7519
  store %struct.MLoop* %32, %struct.MLoop** %mv, align 8, !dbg !7520
  store i32 0, i32* %index, align 4, !dbg !7521
  br label %for.cond18, !dbg !7523

for.cond18:                                       ; preds = %for.inc85, %if.end16
  %33 = load i32, i32* %index, align 4, !dbg !7524
  %34 = load i32, i32* %totface, align 4, !dbg !7526
  %cmp19 = icmp slt i32 %33, %34, !dbg !7527
  br i1 %cmp19, label %for.body21, label %for.end87, !dbg !7528

for.body21:                                       ; preds = %for.cond18
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f, metadata !7529, metadata !DIExpression()), !dbg !7531
  %35 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !7532
  %faceMap = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %35, i32 0, i32 7, !dbg !7533
  %36 = load %struct.anon.1*, %struct.anon.1** %faceMap, align 8, !dbg !7533
  %37 = load i32, i32* %index, align 4, !dbg !7534
  %idxprom22 = sext i32 %37 to i64, !dbg !7532
  %arrayidx23 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %36, i64 %idxprom22, !dbg !7532
  %face = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx23, i32 0, i32 3, !dbg !7535
  %38 = load %struct.CCGFace*, %struct.CCGFace** %face, align 8, !dbg !7535
  store %struct.CCGFace* %38, %struct.CCGFace** %f, align 8, !dbg !7531
  call void @llvm.dbg.declare(metadata i32* %x, metadata !7536, metadata !DIExpression()), !dbg !7537
  call void @llvm.dbg.declare(metadata i32* %y, metadata !7538, metadata !DIExpression()), !dbg !7539
  call void @llvm.dbg.declare(metadata i32* %S, metadata !7540, metadata !DIExpression()), !dbg !7541
  call void @llvm.dbg.declare(metadata i32* %numVerts, metadata !7542, metadata !DIExpression()), !dbg !7543
  %39 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !7544
  %call24 = call i32 @ccgSubSurf_getFaceNumVerts(%struct.CCGFace* %39), !dbg !7545
  store i32 %call24, i32* %numVerts, align 4, !dbg !7543
  store i32 0, i32* %S, align 4, !dbg !7546
  br label %for.cond25, !dbg !7548

for.cond25:                                       ; preds = %for.inc82, %for.body21
  %40 = load i32, i32* %S, align 4, !dbg !7549
  %41 = load i32, i32* %numVerts, align 4, !dbg !7551
  %cmp26 = icmp slt i32 %40, %41, !dbg !7552
  br i1 %cmp26, label %for.body28, label %for.end84, !dbg !7553

for.body28:                                       ; preds = %for.cond25
  store i32 0, i32* %y, align 4, !dbg !7554
  br label %for.cond29, !dbg !7557

for.cond29:                                       ; preds = %for.inc79, %for.body28
  %42 = load i32, i32* %y, align 4, !dbg !7558
  %43 = load i32, i32* %gridSize, align 4, !dbg !7560
  %sub = sub nsw i32 %43, 1, !dbg !7561
  %cmp30 = icmp slt i32 %42, %sub, !dbg !7562
  br i1 %cmp30, label %for.body32, label %for.end81, !dbg !7563

for.body32:                                       ; preds = %for.cond29
  store i32 0, i32* %x, align 4, !dbg !7564
  br label %for.cond33, !dbg !7567

for.cond33:                                       ; preds = %for.inc76, %for.body32
  %44 = load i32, i32* %x, align 4, !dbg !7568
  %45 = load i32, i32* %gridSize, align 4, !dbg !7570
  %sub34 = sub nsw i32 %45, 1, !dbg !7571
  %cmp35 = icmp slt i32 %44, %sub34, !dbg !7572
  br i1 %cmp35, label %for.body37, label %for.end78, !dbg !7573

for.body37:                                       ; preds = %for.cond33
  call void @llvm.dbg.declare(metadata i32* %v138, metadata !7574, metadata !DIExpression()), !dbg !7576
  call void @llvm.dbg.declare(metadata i32* %v239, metadata !7577, metadata !DIExpression()), !dbg !7578
  call void @llvm.dbg.declare(metadata i32* %v3, metadata !7579, metadata !DIExpression()), !dbg !7580
  call void @llvm.dbg.declare(metadata i32* %v4, metadata !7581, metadata !DIExpression()), !dbg !7582
  %46 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !7583
  %47 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !7584
  %48 = load i32, i32* %S, align 4, !dbg !7585
  %49 = load i32, i32* %x, align 4, !dbg !7586
  %add = add nsw i32 %49, 0, !dbg !7587
  %50 = load i32, i32* %y, align 4, !dbg !7588
  %add40 = add nsw i32 %50, 0, !dbg !7589
  %51 = load i32, i32* %edgeSize, align 4, !dbg !7590
  %52 = load i32, i32* %gridSize, align 4, !dbg !7591
  %call41 = call i32 @getFaceIndex(%struct.CCGSubSurf* %46, %struct.CCGFace* %47, i32 %48, i32 %add, i32 %add40, i32 %51, i32 %52), !dbg !7592
  store i32 %call41, i32* %v138, align 4, !dbg !7593
  %53 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !7594
  %54 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !7595
  %55 = load i32, i32* %S, align 4, !dbg !7596
  %56 = load i32, i32* %x, align 4, !dbg !7597
  %add42 = add nsw i32 %56, 0, !dbg !7598
  %57 = load i32, i32* %y, align 4, !dbg !7599
  %add43 = add nsw i32 %57, 1, !dbg !7600
  %58 = load i32, i32* %edgeSize, align 4, !dbg !7601
  %59 = load i32, i32* %gridSize, align 4, !dbg !7602
  %call44 = call i32 @getFaceIndex(%struct.CCGSubSurf* %53, %struct.CCGFace* %54, i32 %55, i32 %add42, i32 %add43, i32 %58, i32 %59), !dbg !7603
  store i32 %call44, i32* %v239, align 4, !dbg !7604
  %60 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !7605
  %61 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !7606
  %62 = load i32, i32* %S, align 4, !dbg !7607
  %63 = load i32, i32* %x, align 4, !dbg !7608
  %add45 = add nsw i32 %63, 1, !dbg !7609
  %64 = load i32, i32* %y, align 4, !dbg !7610
  %add46 = add nsw i32 %64, 1, !dbg !7611
  %65 = load i32, i32* %edgeSize, align 4, !dbg !7612
  %66 = load i32, i32* %gridSize, align 4, !dbg !7613
  %call47 = call i32 @getFaceIndex(%struct.CCGSubSurf* %60, %struct.CCGFace* %61, i32 %62, i32 %add45, i32 %add46, i32 %65, i32 %66), !dbg !7614
  store i32 %call47, i32* %v3, align 4, !dbg !7615
  %67 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !7616
  %68 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !7617
  %69 = load i32, i32* %S, align 4, !dbg !7618
  %70 = load i32, i32* %x, align 4, !dbg !7619
  %add48 = add nsw i32 %70, 1, !dbg !7620
  %71 = load i32, i32* %y, align 4, !dbg !7621
  %add49 = add nsw i32 %71, 0, !dbg !7622
  %72 = load i32, i32* %edgeSize, align 4, !dbg !7623
  %73 = load i32, i32* %gridSize, align 4, !dbg !7624
  %call50 = call i32 @getFaceIndex(%struct.CCGSubSurf* %67, %struct.CCGFace* %68, i32 %69, i32 %add48, i32 %add49, i32 %72, i32 %73), !dbg !7625
  store i32 %call50, i32* %v4, align 4, !dbg !7626
  %74 = load i32, i32* %v138, align 4, !dbg !7627
  %75 = load %struct.MLoop*, %struct.MLoop** %mv, align 8, !dbg !7628
  %v = getelementptr inbounds %struct.MLoop, %struct.MLoop* %75, i32 0, i32 0, !dbg !7629
  store i32 %74, i32* %v, align 4, !dbg !7630
  %76 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !7631
  %ehash51 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %76, i32 0, i32 21, !dbg !7631
  %77 = load %struct.EdgeHash*, %struct.EdgeHash** %ehash51, align 8, !dbg !7631
  %78 = load i32, i32* %v138, align 4, !dbg !7631
  %79 = load i32, i32* %v239, align 4, !dbg !7631
  %call52 = call i8* @BLI_edgehash_lookup(%struct.EdgeHash* %77, i32 %78, i32 %79), !dbg !7631
  %80 = ptrtoint i8* %call52 to i64, !dbg !7631
  %conv53 = trunc i64 %80 to i32, !dbg !7631
  %81 = load %struct.MLoop*, %struct.MLoop** %mv, align 8, !dbg !7632
  %e = getelementptr inbounds %struct.MLoop, %struct.MLoop* %81, i32 0, i32 1, !dbg !7633
  store i32 %conv53, i32* %e, align 4, !dbg !7634
  %82 = load %struct.MLoop*, %struct.MLoop** %mv, align 8, !dbg !7635
  %incdec.ptr = getelementptr inbounds %struct.MLoop, %struct.MLoop* %82, i32 1, !dbg !7635
  store %struct.MLoop* %incdec.ptr, %struct.MLoop** %mv, align 8, !dbg !7635
  %83 = load i32, i32* %i, align 4, !dbg !7636
  %inc54 = add nsw i32 %83, 1, !dbg !7636
  store i32 %inc54, i32* %i, align 4, !dbg !7636
  %84 = load i32, i32* %v239, align 4, !dbg !7637
  %85 = load %struct.MLoop*, %struct.MLoop** %mv, align 8, !dbg !7638
  %v55 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %85, i32 0, i32 0, !dbg !7639
  store i32 %84, i32* %v55, align 4, !dbg !7640
  %86 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !7641
  %ehash56 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %86, i32 0, i32 21, !dbg !7641
  %87 = load %struct.EdgeHash*, %struct.EdgeHash** %ehash56, align 8, !dbg !7641
  %88 = load i32, i32* %v239, align 4, !dbg !7641
  %89 = load i32, i32* %v3, align 4, !dbg !7641
  %call57 = call i8* @BLI_edgehash_lookup(%struct.EdgeHash* %87, i32 %88, i32 %89), !dbg !7641
  %90 = ptrtoint i8* %call57 to i64, !dbg !7641
  %conv58 = trunc i64 %90 to i32, !dbg !7641
  %91 = load %struct.MLoop*, %struct.MLoop** %mv, align 8, !dbg !7642
  %e59 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %91, i32 0, i32 1, !dbg !7643
  store i32 %conv58, i32* %e59, align 4, !dbg !7644
  %92 = load %struct.MLoop*, %struct.MLoop** %mv, align 8, !dbg !7645
  %incdec.ptr60 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %92, i32 1, !dbg !7645
  store %struct.MLoop* %incdec.ptr60, %struct.MLoop** %mv, align 8, !dbg !7645
  %93 = load i32, i32* %i, align 4, !dbg !7646
  %inc61 = add nsw i32 %93, 1, !dbg !7646
  store i32 %inc61, i32* %i, align 4, !dbg !7646
  %94 = load i32, i32* %v3, align 4, !dbg !7647
  %95 = load %struct.MLoop*, %struct.MLoop** %mv, align 8, !dbg !7648
  %v62 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %95, i32 0, i32 0, !dbg !7649
  store i32 %94, i32* %v62, align 4, !dbg !7650
  %96 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !7651
  %ehash63 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %96, i32 0, i32 21, !dbg !7651
  %97 = load %struct.EdgeHash*, %struct.EdgeHash** %ehash63, align 8, !dbg !7651
  %98 = load i32, i32* %v3, align 4, !dbg !7651
  %99 = load i32, i32* %v4, align 4, !dbg !7651
  %call64 = call i8* @BLI_edgehash_lookup(%struct.EdgeHash* %97, i32 %98, i32 %99), !dbg !7651
  %100 = ptrtoint i8* %call64 to i64, !dbg !7651
  %conv65 = trunc i64 %100 to i32, !dbg !7651
  %101 = load %struct.MLoop*, %struct.MLoop** %mv, align 8, !dbg !7652
  %e66 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %101, i32 0, i32 1, !dbg !7653
  store i32 %conv65, i32* %e66, align 4, !dbg !7654
  %102 = load %struct.MLoop*, %struct.MLoop** %mv, align 8, !dbg !7655
  %incdec.ptr67 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %102, i32 1, !dbg !7655
  store %struct.MLoop* %incdec.ptr67, %struct.MLoop** %mv, align 8, !dbg !7655
  %103 = load i32, i32* %i, align 4, !dbg !7656
  %inc68 = add nsw i32 %103, 1, !dbg !7656
  store i32 %inc68, i32* %i, align 4, !dbg !7656
  %104 = load i32, i32* %v4, align 4, !dbg !7657
  %105 = load %struct.MLoop*, %struct.MLoop** %mv, align 8, !dbg !7658
  %v69 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %105, i32 0, i32 0, !dbg !7659
  store i32 %104, i32* %v69, align 4, !dbg !7660
  %106 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !7661
  %ehash70 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %106, i32 0, i32 21, !dbg !7661
  %107 = load %struct.EdgeHash*, %struct.EdgeHash** %ehash70, align 8, !dbg !7661
  %108 = load i32, i32* %v4, align 4, !dbg !7661
  %109 = load i32, i32* %v138, align 4, !dbg !7661
  %call71 = call i8* @BLI_edgehash_lookup(%struct.EdgeHash* %107, i32 %108, i32 %109), !dbg !7661
  %110 = ptrtoint i8* %call71 to i64, !dbg !7661
  %conv72 = trunc i64 %110 to i32, !dbg !7661
  %111 = load %struct.MLoop*, %struct.MLoop** %mv, align 8, !dbg !7662
  %e73 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %111, i32 0, i32 1, !dbg !7663
  store i32 %conv72, i32* %e73, align 4, !dbg !7664
  %112 = load %struct.MLoop*, %struct.MLoop** %mv, align 8, !dbg !7665
  %incdec.ptr74 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %112, i32 1, !dbg !7665
  store %struct.MLoop* %incdec.ptr74, %struct.MLoop** %mv, align 8, !dbg !7665
  %113 = load i32, i32* %i, align 4, !dbg !7666
  %inc75 = add nsw i32 %113, 1, !dbg !7666
  store i32 %inc75, i32* %i, align 4, !dbg !7666
  br label %for.inc76, !dbg !7667

for.inc76:                                        ; preds = %for.body37
  %114 = load i32, i32* %x, align 4, !dbg !7668
  %inc77 = add nsw i32 %114, 1, !dbg !7668
  store i32 %inc77, i32* %x, align 4, !dbg !7668
  br label %for.cond33, !dbg !7669, !llvm.loop !7670

for.end78:                                        ; preds = %for.cond33
  br label %for.inc79, !dbg !7672

for.inc79:                                        ; preds = %for.end78
  %115 = load i32, i32* %y, align 4, !dbg !7673
  %inc80 = add nsw i32 %115, 1, !dbg !7673
  store i32 %inc80, i32* %y, align 4, !dbg !7673
  br label %for.cond29, !dbg !7674, !llvm.loop !7675

for.end81:                                        ; preds = %for.cond29
  br label %for.inc82, !dbg !7677

for.inc82:                                        ; preds = %for.end81
  %116 = load i32, i32* %S, align 4, !dbg !7678
  %inc83 = add nsw i32 %116, 1, !dbg !7678
  store i32 %inc83, i32* %S, align 4, !dbg !7678
  br label %for.cond25, !dbg !7679, !llvm.loop !7680

for.end84:                                        ; preds = %for.cond25
  br label %for.inc85, !dbg !7682

for.inc85:                                        ; preds = %for.end84
  %117 = load i32, i32* %index, align 4, !dbg !7683
  %inc86 = add nsw i32 %117, 1, !dbg !7683
  store i32 %inc86, i32* %index, align 4, !dbg !7683
  br label %for.cond18, !dbg !7684, !llvm.loop !7685

for.end87:                                        ; preds = %for.cond18
  call void @BLI_rw_mutex_unlock(i32* @loops_cache_rwlock), !dbg !7687
  ret void, !dbg !7688
}

; Function Attrs: noinline nounwind uwtable
define internal void @ccgDM_copyFinalPolyArray(%struct.DerivedMesh* %dm, %struct.MPoly* %mpoly) #0 !dbg !7689 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %mpoly.addr = alloca %struct.MPoly*, align 8
  %ccgdm = alloca %struct.CCGDerivedMesh*, align 8
  %ss = alloca %struct.CCGSubSurf*, align 8
  %index = alloca i32, align 4
  %totface = alloca i32, align 4
  %gridSize = alloca i32, align 4
  %i = alloca i32, align 4
  %k = alloca i32, align 4
  %faceFlags = alloca %struct.DMFlagMat*, align 8
  %f = alloca %struct.CCGFace*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %S = alloca i32, align 4
  %numVerts = alloca i32, align 4
  %flag = alloca i32, align 4
  %mat_nr = alloca i32, align 4
  %mp = alloca %struct.MPoly*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !7692, metadata !DIExpression()), !dbg !7693
  store %struct.MPoly* %mpoly, %struct.MPoly** %mpoly.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpoly.addr, metadata !7694, metadata !DIExpression()), !dbg !7695
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm, metadata !7696, metadata !DIExpression()), !dbg !7697
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7698
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CCGDerivedMesh*, !dbg !7699
  store %struct.CCGDerivedMesh* %1, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !7697
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss, metadata !7700, metadata !DIExpression()), !dbg !7701
  %2 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !7702
  %ss1 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %2, i32 0, i32 1, !dbg !7703
  %3 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss1, align 8, !dbg !7703
  store %struct.CCGSubSurf* %3, %struct.CCGSubSurf** %ss, align 8, !dbg !7701
  call void @llvm.dbg.declare(metadata i32* %index, metadata !7704, metadata !DIExpression()), !dbg !7705
  call void @llvm.dbg.declare(metadata i32* %totface, metadata !7706, metadata !DIExpression()), !dbg !7707
  call void @llvm.dbg.declare(metadata i32* %gridSize, metadata !7708, metadata !DIExpression()), !dbg !7709
  %4 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !7710
  %call = call i32 @ccgSubSurf_getGridSize(%struct.CCGSubSurf* %4), !dbg !7711
  store i32 %call, i32* %gridSize, align 4, !dbg !7709
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7712, metadata !DIExpression()), !dbg !7713
  store i32 0, i32* %i, align 4, !dbg !7713
  call void @llvm.dbg.declare(metadata i32* %k, metadata !7714, metadata !DIExpression()), !dbg !7715
  store i32 0, i32* %k, align 4, !dbg !7715
  call void @llvm.dbg.declare(metadata %struct.DMFlagMat** %faceFlags, metadata !7716, metadata !DIExpression()), !dbg !7717
  %5 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !7718
  %faceFlags2 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %5, i32 0, i32 9, !dbg !7719
  %6 = load %struct.DMFlagMat*, %struct.DMFlagMat** %faceFlags2, align 8, !dbg !7719
  store %struct.DMFlagMat* %6, %struct.DMFlagMat** %faceFlags, align 8, !dbg !7717
  %7 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !7720
  %call3 = call i32 @ccgSubSurf_getNumFaces(%struct.CCGSubSurf* %7), !dbg !7721
  store i32 %call3, i32* %totface, align 4, !dbg !7722
  store i32 0, i32* %index, align 4, !dbg !7723
  br label %for.cond, !dbg !7725

for.cond:                                         ; preds = %for.inc43, %entry
  %8 = load i32, i32* %index, align 4, !dbg !7726
  %9 = load i32, i32* %totface, align 4, !dbg !7728
  %cmp = icmp slt i32 %8, %9, !dbg !7729
  br i1 %cmp, label %for.body, label %for.end45, !dbg !7730

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f, metadata !7731, metadata !DIExpression()), !dbg !7733
  %10 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !7734
  %faceMap = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %10, i32 0, i32 7, !dbg !7735
  %11 = load %struct.anon.1*, %struct.anon.1** %faceMap, align 8, !dbg !7735
  %12 = load i32, i32* %index, align 4, !dbg !7736
  %idxprom = sext i32 %12 to i64, !dbg !7734
  %arrayidx = getelementptr inbounds %struct.anon.1, %struct.anon.1* %11, i64 %idxprom, !dbg !7734
  %face = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx, i32 0, i32 3, !dbg !7737
  %13 = load %struct.CCGFace*, %struct.CCGFace** %face, align 8, !dbg !7737
  store %struct.CCGFace* %13, %struct.CCGFace** %f, align 8, !dbg !7733
  call void @llvm.dbg.declare(metadata i32* %x, metadata !7738, metadata !DIExpression()), !dbg !7739
  call void @llvm.dbg.declare(metadata i32* %y, metadata !7740, metadata !DIExpression()), !dbg !7741
  call void @llvm.dbg.declare(metadata i32* %S, metadata !7742, metadata !DIExpression()), !dbg !7743
  call void @llvm.dbg.declare(metadata i32* %numVerts, metadata !7744, metadata !DIExpression()), !dbg !7745
  %14 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !7746
  %call4 = call i32 @ccgSubSurf_getFaceNumVerts(%struct.CCGFace* %14), !dbg !7747
  store i32 %call4, i32* %numVerts, align 4, !dbg !7745
  call void @llvm.dbg.declare(metadata i32* %flag, metadata !7748, metadata !DIExpression()), !dbg !7749
  %15 = load %struct.DMFlagMat*, %struct.DMFlagMat** %faceFlags, align 8, !dbg !7750
  %tobool = icmp ne %struct.DMFlagMat* %15, null, !dbg !7751
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7751

cond.true:                                        ; preds = %for.body
  %16 = load %struct.DMFlagMat*, %struct.DMFlagMat** %faceFlags, align 8, !dbg !7752
  %17 = load i32, i32* %index, align 4, !dbg !7753
  %idxprom5 = sext i32 %17 to i64, !dbg !7752
  %arrayidx6 = getelementptr inbounds %struct.DMFlagMat, %struct.DMFlagMat* %16, i64 %idxprom5, !dbg !7752
  %flag7 = getelementptr inbounds %struct.DMFlagMat, %struct.DMFlagMat* %arrayidx6, i32 0, i32 1, !dbg !7754
  %18 = load i8, i8* %flag7, align 2, !dbg !7754
  %conv = zext i8 %18 to i32, !dbg !7752
  br label %cond.end, !dbg !7751

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !7751

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv, %cond.true ], [ 1, %cond.false ], !dbg !7751
  store i32 %cond, i32* %flag, align 4, !dbg !7749
  call void @llvm.dbg.declare(metadata i32* %mat_nr, metadata !7755, metadata !DIExpression()), !dbg !7756
  %19 = load %struct.DMFlagMat*, %struct.DMFlagMat** %faceFlags, align 8, !dbg !7757
  %tobool8 = icmp ne %struct.DMFlagMat* %19, null, !dbg !7758
  br i1 %tobool8, label %cond.true9, label %cond.false14, !dbg !7758

cond.true9:                                       ; preds = %cond.end
  %20 = load %struct.DMFlagMat*, %struct.DMFlagMat** %faceFlags, align 8, !dbg !7759
  %21 = load i32, i32* %index, align 4, !dbg !7760
  %idxprom10 = sext i32 %21 to i64, !dbg !7759
  %arrayidx11 = getelementptr inbounds %struct.DMFlagMat, %struct.DMFlagMat* %20, i64 %idxprom10, !dbg !7759
  %mat_nr12 = getelementptr inbounds %struct.DMFlagMat, %struct.DMFlagMat* %arrayidx11, i32 0, i32 0, !dbg !7761
  %22 = load i16, i16* %mat_nr12, align 2, !dbg !7761
  %conv13 = sext i16 %22 to i32, !dbg !7759
  br label %cond.end15, !dbg !7758

cond.false14:                                     ; preds = %cond.end
  br label %cond.end15, !dbg !7758

cond.end15:                                       ; preds = %cond.false14, %cond.true9
  %cond16 = phi i32 [ %conv13, %cond.true9 ], [ 0, %cond.false14 ], !dbg !7758
  store i32 %cond16, i32* %mat_nr, align 4, !dbg !7756
  store i32 0, i32* %S, align 4, !dbg !7762
  br label %for.cond17, !dbg !7764

for.cond17:                                       ; preds = %for.inc40, %cond.end15
  %23 = load i32, i32* %S, align 4, !dbg !7765
  %24 = load i32, i32* %numVerts, align 4, !dbg !7767
  %cmp18 = icmp slt i32 %23, %24, !dbg !7768
  br i1 %cmp18, label %for.body20, label %for.end42, !dbg !7769

for.body20:                                       ; preds = %for.cond17
  store i32 0, i32* %y, align 4, !dbg !7770
  br label %for.cond21, !dbg !7773

for.cond21:                                       ; preds = %for.inc37, %for.body20
  %25 = load i32, i32* %y, align 4, !dbg !7774
  %26 = load i32, i32* %gridSize, align 4, !dbg !7776
  %sub = sub nsw i32 %26, 1, !dbg !7777
  %cmp22 = icmp slt i32 %25, %sub, !dbg !7778
  br i1 %cmp22, label %for.body24, label %for.end39, !dbg !7779

for.body24:                                       ; preds = %for.cond21
  store i32 0, i32* %x, align 4, !dbg !7780
  br label %for.cond25, !dbg !7783

for.cond25:                                       ; preds = %for.inc, %for.body24
  %27 = load i32, i32* %x, align 4, !dbg !7784
  %28 = load i32, i32* %gridSize, align 4, !dbg !7786
  %sub26 = sub nsw i32 %28, 1, !dbg !7787
  %cmp27 = icmp slt i32 %27, %sub26, !dbg !7788
  br i1 %cmp27, label %for.body29, label %for.end, !dbg !7789

for.body29:                                       ; preds = %for.cond25
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mp, metadata !7790, metadata !DIExpression()), !dbg !7792
  %29 = load %struct.MPoly*, %struct.MPoly** %mpoly.addr, align 8, !dbg !7793
  %30 = load i32, i32* %i, align 4, !dbg !7794
  %idxprom30 = sext i32 %30 to i64, !dbg !7793
  %arrayidx31 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %29, i64 %idxprom30, !dbg !7793
  store %struct.MPoly* %arrayidx31, %struct.MPoly** %mp, align 8, !dbg !7792
  %31 = load i32, i32* %mat_nr, align 4, !dbg !7795
  %conv32 = trunc i32 %31 to i16, !dbg !7795
  %32 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !7796
  %mat_nr33 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %32, i32 0, i32 2, !dbg !7797
  store i16 %conv32, i16* %mat_nr33, align 4, !dbg !7798
  %33 = load i32, i32* %flag, align 4, !dbg !7799
  %conv34 = trunc i32 %33 to i8, !dbg !7799
  %34 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !7800
  %flag35 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %34, i32 0, i32 3, !dbg !7801
  store i8 %conv34, i8* %flag35, align 2, !dbg !7802
  %35 = load i32, i32* %k, align 4, !dbg !7803
  %36 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !7804
  %loopstart = getelementptr inbounds %struct.MPoly, %struct.MPoly* %36, i32 0, i32 0, !dbg !7805
  store i32 %35, i32* %loopstart, align 4, !dbg !7806
  %37 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !7807
  %totloop = getelementptr inbounds %struct.MPoly, %struct.MPoly* %37, i32 0, i32 1, !dbg !7808
  store i32 4, i32* %totloop, align 4, !dbg !7809
  %38 = load i32, i32* %k, align 4, !dbg !7810
  %add = add nsw i32 %38, 4, !dbg !7810
  store i32 %add, i32* %k, align 4, !dbg !7810
  %39 = load i32, i32* %i, align 4, !dbg !7811
  %inc = add nsw i32 %39, 1, !dbg !7811
  store i32 %inc, i32* %i, align 4, !dbg !7811
  br label %for.inc, !dbg !7812

for.inc:                                          ; preds = %for.body29
  %40 = load i32, i32* %x, align 4, !dbg !7813
  %inc36 = add nsw i32 %40, 1, !dbg !7813
  store i32 %inc36, i32* %x, align 4, !dbg !7813
  br label %for.cond25, !dbg !7814, !llvm.loop !7815

for.end:                                          ; preds = %for.cond25
  br label %for.inc37, !dbg !7817

for.inc37:                                        ; preds = %for.end
  %41 = load i32, i32* %y, align 4, !dbg !7818
  %inc38 = add nsw i32 %41, 1, !dbg !7818
  store i32 %inc38, i32* %y, align 4, !dbg !7818
  br label %for.cond21, !dbg !7819, !llvm.loop !7820

for.end39:                                        ; preds = %for.cond21
  br label %for.inc40, !dbg !7822

for.inc40:                                        ; preds = %for.end39
  %42 = load i32, i32* %S, align 4, !dbg !7823
  %inc41 = add nsw i32 %42, 1, !dbg !7823
  store i32 %inc41, i32* %S, align 4, !dbg !7823
  br label %for.cond17, !dbg !7824, !llvm.loop !7825

for.end42:                                        ; preds = %for.cond17
  br label %for.inc43, !dbg !7827

for.inc43:                                        ; preds = %for.end42
  %43 = load i32, i32* %index, align 4, !dbg !7828
  %inc44 = add nsw i32 %43, 1, !dbg !7828
  store i32 %inc44, i32* %index, align 4, !dbg !7828
  br label %for.cond, !dbg !7829, !llvm.loop !7830

for.end45:                                        ; preds = %for.cond
  ret void, !dbg !7832
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @ccgDM_get_vert_data(%struct.DerivedMesh* %dm, i32 %index, i32 %type) #0 !dbg !7833 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %index.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !7834, metadata !DIExpression()), !dbg !7835
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !7836, metadata !DIExpression()), !dbg !7837
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !7838, metadata !DIExpression()), !dbg !7839
  %0 = load i32, i32* %type.addr, align 4, !dbg !7840
  %cmp = icmp eq i32 %0, 7, !dbg !7842
  br i1 %cmp, label %if.then, label %if.end, !dbg !7843

if.then:                                          ; preds = %entry
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7844
  %2 = load i32, i32* %type.addr, align 4, !dbg !7846
  %call = call i8* @ccgDM_get_vert_data_layer(%struct.DerivedMesh* %1, i32 %2), !dbg !7847
  br label %if.end, !dbg !7848

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7849
  %4 = load i32, i32* %index.addr, align 4, !dbg !7850
  %5 = load i32, i32* %type.addr, align 4, !dbg !7851
  %call1 = call i8* @DM_get_vert_data(%struct.DerivedMesh* %3, i32 %4, i32 %5), !dbg !7852
  ret i8* %call1, !dbg !7853
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @ccgDM_get_edge_data(%struct.DerivedMesh* %dm, i32 %index, i32 %type) #0 !dbg !7854 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %index.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !7855, metadata !DIExpression()), !dbg !7856
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !7857, metadata !DIExpression()), !dbg !7858
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !7859, metadata !DIExpression()), !dbg !7860
  %0 = load i32, i32* %type.addr, align 4, !dbg !7861
  %cmp = icmp eq i32 %0, 7, !dbg !7863
  br i1 %cmp, label %if.then, label %if.end, !dbg !7864

if.then:                                          ; preds = %entry
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7865
  %2 = load i32, i32* %type.addr, align 4, !dbg !7867
  %call = call i8* @ccgDM_get_edge_data_layer(%struct.DerivedMesh* %1, i32 %2), !dbg !7868
  br label %if.end, !dbg !7869

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7870
  %4 = load i32, i32* %index.addr, align 4, !dbg !7871
  %5 = load i32, i32* %type.addr, align 4, !dbg !7872
  %call1 = call i8* @DM_get_edge_data(%struct.DerivedMesh* %3, i32 %4, i32 %5), !dbg !7873
  ret i8* %call1, !dbg !7874
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @ccgDM_get_tessface_data(%struct.DerivedMesh* %dm, i32 %index, i32 %type) #0 !dbg !7875 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %index.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !7876, metadata !DIExpression()), !dbg !7877
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !7878, metadata !DIExpression()), !dbg !7879
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !7880, metadata !DIExpression()), !dbg !7881
  %0 = load i32, i32* %type.addr, align 4, !dbg !7882
  %cmp = icmp eq i32 %0, 7, !dbg !7882
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !7882

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %type.addr, align 4, !dbg !7882
  %cmp1 = icmp eq i32 %1, 40, !dbg !7882
  br i1 %cmp1, label %if.then, label %if.end, !dbg !7884

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7885
  %3 = load i32, i32* %type.addr, align 4, !dbg !7887
  %call = call i8* @ccgDM_get_tessface_data_layer(%struct.DerivedMesh* %2, i32 %3), !dbg !7888
  br label %if.end, !dbg !7889

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7890
  %5 = load i32, i32* %index.addr, align 4, !dbg !7891
  %6 = load i32, i32* %type.addr, align 4, !dbg !7892
  %call2 = call i8* @DM_get_tessface_data(%struct.DerivedMesh* %4, i32 %5, i32 %6), !dbg !7893
  ret i8* %call2, !dbg !7894
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @ccgDM_get_poly_data(%struct.DerivedMesh* %dm, i32 %index, i32 %type) #0 !dbg !7895 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %index.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !7896, metadata !DIExpression()), !dbg !7897
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !7898, metadata !DIExpression()), !dbg !7899
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !7900, metadata !DIExpression()), !dbg !7901
  %0 = load i32, i32* %type.addr, align 4, !dbg !7902
  %cmp = icmp eq i32 %0, 7, !dbg !7904
  br i1 %cmp, label %if.then, label %if.end, !dbg !7905

if.then:                                          ; preds = %entry
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7906
  %2 = load i32, i32* %type.addr, align 4, !dbg !7908
  %call = call i8* @ccgDM_get_tessface_data_layer(%struct.DerivedMesh* %1, i32 %2), !dbg !7909
  br label %if.end, !dbg !7910

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7911
  %4 = load i32, i32* %index.addr, align 4, !dbg !7912
  %5 = load i32, i32* %type.addr, align 4, !dbg !7913
  %call1 = call i8* @DM_get_poly_data(%struct.DerivedMesh* %3, i32 %4, i32 %5), !dbg !7914
  ret i8* %call1, !dbg !7915
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @ccgDM_get_vert_data_layer(%struct.DerivedMesh* %dm, i32 %type) #0 !dbg !7916 {
entry:
  %retval = alloca i8*, align 8
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %type.addr = alloca i32, align 4
  %ccgdm = alloca %struct.CCGDerivedMesh*, align 8
  %ss = alloca %struct.CCGSubSurf*, align 8
  %origindex = alloca i32*, align 8
  %a = alloca i32, align 4
  %index = alloca i32, align 4
  %totnone = alloca i32, align 4
  %totorig = alloca i32, align 4
  %v = alloca %struct.CCGVert*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !7917, metadata !DIExpression()), !dbg !7918
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !7919, metadata !DIExpression()), !dbg !7920
  %0 = load i32, i32* %type.addr, align 4, !dbg !7921
  %cmp = icmp eq i32 %0, 7, !dbg !7923
  br i1 %cmp, label %if.then, label %if.end19, !dbg !7924

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm, metadata !7925, metadata !DIExpression()), !dbg !7927
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7928
  %2 = bitcast %struct.DerivedMesh* %1 to %struct.CCGDerivedMesh*, !dbg !7929
  store %struct.CCGDerivedMesh* %2, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !7927
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss, metadata !7930, metadata !DIExpression()), !dbg !7931
  %3 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !7932
  %ss1 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %3, i32 0, i32 1, !dbg !7933
  %4 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss1, align 8, !dbg !7933
  store %struct.CCGSubSurf* %4, %struct.CCGSubSurf** %ss, align 8, !dbg !7931
  call void @llvm.dbg.declare(metadata i32** %origindex, metadata !7934, metadata !DIExpression()), !dbg !7935
  call void @llvm.dbg.declare(metadata i32* %a, metadata !7936, metadata !DIExpression()), !dbg !7937
  call void @llvm.dbg.declare(metadata i32* %index, metadata !7938, metadata !DIExpression()), !dbg !7939
  call void @llvm.dbg.declare(metadata i32* %totnone, metadata !7940, metadata !DIExpression()), !dbg !7941
  call void @llvm.dbg.declare(metadata i32* %totorig, metadata !7942, metadata !DIExpression()), !dbg !7943
  call void @BLI_rw_mutex_lock(i32* @origindex_cache_rwlock, i32 1), !dbg !7944
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7945
  %call = call i8* @DM_get_vert_data_layer(%struct.DerivedMesh* %5, i32 7), !dbg !7946
  %6 = bitcast i8* %call to i32*, !dbg !7946
  store i32* %6, i32** %origindex, align 8, !dbg !7947
  call void @BLI_rw_mutex_unlock(i32* @origindex_cache_rwlock), !dbg !7948
  %7 = load i32*, i32** %origindex, align 8, !dbg !7949
  %tobool = icmp ne i32* %7, null, !dbg !7949
  br i1 %tobool, label %if.then2, label %if.end, !dbg !7951

if.then2:                                         ; preds = %if.then
  %8 = load i32*, i32** %origindex, align 8, !dbg !7952
  %9 = bitcast i32* %8 to i8*, !dbg !7952
  store i8* %9, i8** %retval, align 8, !dbg !7954
  br label %return, !dbg !7954

if.end:                                           ; preds = %if.then
  call void @BLI_rw_mutex_lock(i32* @origindex_cache_rwlock, i32 2), !dbg !7955
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7956
  call void @DM_add_vert_layer(%struct.DerivedMesh* %10, i32 7, i32 1, i8* null), !dbg !7957
  %11 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7958
  %call3 = call i8* @DM_get_vert_data_layer(%struct.DerivedMesh* %11, i32 7), !dbg !7959
  %12 = bitcast i8* %call3 to i32*, !dbg !7959
  store i32* %12, i32** %origindex, align 8, !dbg !7960
  %13 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !7961
  %call4 = call i32 @ccgSubSurf_getNumVerts(%struct.CCGSubSurf* %13), !dbg !7962
  store i32 %call4, i32* %totorig, align 4, !dbg !7963
  %14 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7964
  %numVertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %14, i32 0, i32 5, !dbg !7965
  %15 = load i32, i32* %numVertData, align 8, !dbg !7965
  %16 = load i32, i32* %totorig, align 4, !dbg !7966
  %sub = sub nsw i32 %15, %16, !dbg !7967
  store i32 %sub, i32* %totnone, align 4, !dbg !7968
  store i32 0, i32* %a, align 4, !dbg !7969
  br label %for.cond, !dbg !7971

for.cond:                                         ; preds = %for.inc, %if.end
  %17 = load i32, i32* %a, align 4, !dbg !7972
  %18 = load i32, i32* %totnone, align 4, !dbg !7974
  %cmp5 = icmp slt i32 %17, %18, !dbg !7975
  br i1 %cmp5, label %for.body, label %for.end, !dbg !7976

for.body:                                         ; preds = %for.cond
  %19 = load i32*, i32** %origindex, align 8, !dbg !7977
  %20 = load i32, i32* %a, align 4, !dbg !7978
  %idxprom = sext i32 %20 to i64, !dbg !7977
  %arrayidx = getelementptr inbounds i32, i32* %19, i64 %idxprom, !dbg !7977
  store i32 -1, i32* %arrayidx, align 4, !dbg !7979
  br label %for.inc, !dbg !7977

for.inc:                                          ; preds = %for.body
  %21 = load i32, i32* %a, align 4, !dbg !7980
  %inc = add nsw i32 %21, 1, !dbg !7980
  store i32 %inc, i32* %a, align 4, !dbg !7980
  br label %for.cond, !dbg !7981, !llvm.loop !7982

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %index, align 4, !dbg !7984
  br label %for.cond6, !dbg !7986

for.cond6:                                        ; preds = %for.inc15, %for.end
  %22 = load i32, i32* %index, align 4, !dbg !7987
  %23 = load i32, i32* %totorig, align 4, !dbg !7989
  %cmp7 = icmp slt i32 %22, %23, !dbg !7990
  br i1 %cmp7, label %for.body8, label %for.end18, !dbg !7991

for.body8:                                        ; preds = %for.cond6
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v, metadata !7992, metadata !DIExpression()), !dbg !7994
  %24 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !7995
  %vertMap = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %24, i32 0, i32 5, !dbg !7996
  %25 = load %struct.anon*, %struct.anon** %vertMap, align 8, !dbg !7996
  %26 = load i32, i32* %index, align 4, !dbg !7997
  %idxprom9 = sext i32 %26 to i64, !dbg !7995
  %arrayidx10 = getelementptr inbounds %struct.anon, %struct.anon* %25, i64 %idxprom9, !dbg !7995
  %vert = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx10, i32 0, i32 1, !dbg !7998
  %27 = load %struct.CCGVert*, %struct.CCGVert** %vert, align 8, !dbg !7998
  store %struct.CCGVert* %27, %struct.CCGVert** %v, align 8, !dbg !7994
  %28 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !7999
  %ss11 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %28, i32 0, i32 1, !dbg !8000
  %29 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss11, align 8, !dbg !8000
  %30 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !8001
  %call12 = call i32 @ccgDM_getVertMapIndex(%struct.CCGSubSurf* %29, %struct.CCGVert* %30), !dbg !8002
  %31 = load i32*, i32** %origindex, align 8, !dbg !8003
  %32 = load i32, i32* %a, align 4, !dbg !8004
  %idxprom13 = sext i32 %32 to i64, !dbg !8003
  %arrayidx14 = getelementptr inbounds i32, i32* %31, i64 %idxprom13, !dbg !8003
  store i32 %call12, i32* %arrayidx14, align 4, !dbg !8005
  br label %for.inc15, !dbg !8006

for.inc15:                                        ; preds = %for.body8
  %33 = load i32, i32* %index, align 4, !dbg !8007
  %inc16 = add nsw i32 %33, 1, !dbg !8007
  store i32 %inc16, i32* %index, align 4, !dbg !8007
  %34 = load i32, i32* %a, align 4, !dbg !8008
  %inc17 = add nsw i32 %34, 1, !dbg !8008
  store i32 %inc17, i32* %a, align 4, !dbg !8008
  br label %for.cond6, !dbg !8009, !llvm.loop !8010

for.end18:                                        ; preds = %for.cond6
  call void @BLI_rw_mutex_unlock(i32* @origindex_cache_rwlock), !dbg !8012
  %35 = load i32*, i32** %origindex, align 8, !dbg !8013
  %36 = bitcast i32* %35 to i8*, !dbg !8013
  store i8* %36, i8** %retval, align 8, !dbg !8014
  br label %return, !dbg !8014

if.end19:                                         ; preds = %entry
  %37 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8015
  %38 = load i32, i32* %type.addr, align 4, !dbg !8016
  %call20 = call i8* @DM_get_vert_data_layer(%struct.DerivedMesh* %37, i32 %38), !dbg !8017
  store i8* %call20, i8** %retval, align 8, !dbg !8018
  br label %return, !dbg !8018

return:                                           ; preds = %if.end19, %for.end18, %if.then2
  %39 = load i8*, i8** %retval, align 8, !dbg !8019
  ret i8* %39, !dbg !8019
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @ccgDM_get_edge_data_layer(%struct.DerivedMesh* %dm, i32 %type) #0 !dbg !8020 {
entry:
  %retval = alloca i8*, align 8
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %type.addr = alloca i32, align 4
  %ccgdm = alloca %struct.CCGDerivedMesh*, align 8
  %ss = alloca %struct.CCGSubSurf*, align 8
  %origindex = alloca i32*, align 8
  %a = alloca i32, align 4
  %i = alloca i32, align 4
  %index = alloca i32, align 4
  %totnone = alloca i32, align 4
  %totorig = alloca i32, align 4
  %totedge = alloca i32, align 4
  %edgeSize = alloca i32, align 4
  %e = alloca %struct.CCGEdge*, align 8
  %mapIndex = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !8021, metadata !DIExpression()), !dbg !8022
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !8023, metadata !DIExpression()), !dbg !8024
  %0 = load i32, i32* %type.addr, align 4, !dbg !8025
  %cmp = icmp eq i32 %0, 7, !dbg !8027
  br i1 %cmp, label %if.then, label %if.end27, !dbg !8028

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm, metadata !8029, metadata !DIExpression()), !dbg !8031
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8032
  %2 = bitcast %struct.DerivedMesh* %1 to %struct.CCGDerivedMesh*, !dbg !8033
  store %struct.CCGDerivedMesh* %2, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8031
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss, metadata !8034, metadata !DIExpression()), !dbg !8035
  %3 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8036
  %ss1 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %3, i32 0, i32 1, !dbg !8037
  %4 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss1, align 8, !dbg !8037
  store %struct.CCGSubSurf* %4, %struct.CCGSubSurf** %ss, align 8, !dbg !8035
  call void @llvm.dbg.declare(metadata i32** %origindex, metadata !8038, metadata !DIExpression()), !dbg !8039
  call void @llvm.dbg.declare(metadata i32* %a, metadata !8040, metadata !DIExpression()), !dbg !8041
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8042, metadata !DIExpression()), !dbg !8043
  call void @llvm.dbg.declare(metadata i32* %index, metadata !8044, metadata !DIExpression()), !dbg !8045
  call void @llvm.dbg.declare(metadata i32* %totnone, metadata !8046, metadata !DIExpression()), !dbg !8047
  call void @llvm.dbg.declare(metadata i32* %totorig, metadata !8048, metadata !DIExpression()), !dbg !8049
  call void @llvm.dbg.declare(metadata i32* %totedge, metadata !8050, metadata !DIExpression()), !dbg !8051
  call void @llvm.dbg.declare(metadata i32* %edgeSize, metadata !8052, metadata !DIExpression()), !dbg !8053
  %5 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !8054
  %call = call i32 @ccgSubSurf_getEdgeSize(%struct.CCGSubSurf* %5), !dbg !8055
  store i32 %call, i32* %edgeSize, align 4, !dbg !8053
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8056
  %call2 = call i8* @DM_get_edge_data_layer(%struct.DerivedMesh* %6, i32 7), !dbg !8057
  %7 = bitcast i8* %call2 to i32*, !dbg !8057
  store i32* %7, i32** %origindex, align 8, !dbg !8058
  %8 = load i32*, i32** %origindex, align 8, !dbg !8059
  %tobool = icmp ne i32* %8, null, !dbg !8059
  br i1 %tobool, label %if.then3, label %if.end, !dbg !8061

if.then3:                                         ; preds = %if.then
  %9 = load i32*, i32** %origindex, align 8, !dbg !8062
  %10 = bitcast i32* %9 to i8*, !dbg !8062
  store i8* %10, i8** %retval, align 8, !dbg !8064
  br label %return, !dbg !8064

if.end:                                           ; preds = %if.then
  %11 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8065
  call void @DM_add_edge_layer(%struct.DerivedMesh* %11, i32 7, i32 1, i8* null), !dbg !8066
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8067
  %call4 = call i8* @DM_get_edge_data_layer(%struct.DerivedMesh* %12, i32 7), !dbg !8068
  %13 = bitcast i8* %call4 to i32*, !dbg !8068
  store i32* %13, i32** %origindex, align 8, !dbg !8069
  %14 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !8070
  %call5 = call i32 @ccgSubSurf_getNumEdges(%struct.CCGSubSurf* %14), !dbg !8071
  store i32 %call5, i32* %totedge, align 4, !dbg !8072
  %15 = load i32, i32* %totedge, align 4, !dbg !8073
  %16 = load i32, i32* %edgeSize, align 4, !dbg !8074
  %sub = sub nsw i32 %16, 1, !dbg !8075
  %mul = mul nsw i32 %15, %sub, !dbg !8076
  store i32 %mul, i32* %totorig, align 4, !dbg !8077
  %17 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8078
  %numEdgeData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %17, i32 0, i32 6, !dbg !8079
  %18 = load i32, i32* %numEdgeData, align 4, !dbg !8079
  %19 = load i32, i32* %totorig, align 4, !dbg !8080
  %sub6 = sub nsw i32 %18, %19, !dbg !8081
  store i32 %sub6, i32* %totnone, align 4, !dbg !8082
  store i32 0, i32* %a, align 4, !dbg !8083
  br label %for.cond, !dbg !8085

for.cond:                                         ; preds = %for.inc, %if.end
  %20 = load i32, i32* %a, align 4, !dbg !8086
  %21 = load i32, i32* %totnone, align 4, !dbg !8088
  %cmp7 = icmp slt i32 %20, %21, !dbg !8089
  br i1 %cmp7, label %for.body, label %for.end, !dbg !8090

for.body:                                         ; preds = %for.cond
  %22 = load i32*, i32** %origindex, align 8, !dbg !8091
  %23 = load i32, i32* %a, align 4, !dbg !8092
  %idxprom = sext i32 %23 to i64, !dbg !8091
  %arrayidx = getelementptr inbounds i32, i32* %22, i64 %idxprom, !dbg !8091
  store i32 -1, i32* %arrayidx, align 4, !dbg !8093
  br label %for.inc, !dbg !8091

for.inc:                                          ; preds = %for.body
  %24 = load i32, i32* %a, align 4, !dbg !8094
  %inc = add nsw i32 %24, 1, !dbg !8094
  store i32 %inc, i32* %a, align 4, !dbg !8094
  br label %for.cond, !dbg !8095, !llvm.loop !8096

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %index, align 4, !dbg !8098
  br label %for.cond8, !dbg !8100

for.cond8:                                        ; preds = %for.inc24, %for.end
  %25 = load i32, i32* %index, align 4, !dbg !8101
  %26 = load i32, i32* %totedge, align 4, !dbg !8103
  %cmp9 = icmp slt i32 %25, %26, !dbg !8104
  br i1 %cmp9, label %for.body10, label %for.end26, !dbg !8105

for.body10:                                       ; preds = %for.cond8
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e, metadata !8106, metadata !DIExpression()), !dbg !8108
  %27 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8109
  %edgeMap = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %27, i32 0, i32 6, !dbg !8110
  %28 = load %struct.anon.0*, %struct.anon.0** %edgeMap, align 8, !dbg !8110
  %29 = load i32, i32* %index, align 4, !dbg !8111
  %idxprom11 = sext i32 %29 to i64, !dbg !8109
  %arrayidx12 = getelementptr inbounds %struct.anon.0, %struct.anon.0* %28, i64 %idxprom11, !dbg !8109
  %edge = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx12, i32 0, i32 2, !dbg !8112
  %30 = load %struct.CCGEdge*, %struct.CCGEdge** %edge, align 8, !dbg !8112
  store %struct.CCGEdge* %30, %struct.CCGEdge** %e, align 8, !dbg !8108
  call void @llvm.dbg.declare(metadata i32* %mapIndex, metadata !8113, metadata !DIExpression()), !dbg !8114
  %31 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !8115
  %32 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !8116
  %call13 = call i32 @ccgDM_getEdgeMapIndex(%struct.CCGSubSurf* %31, %struct.CCGEdge* %32), !dbg !8117
  store i32 %call13, i32* %mapIndex, align 4, !dbg !8114
  store i32 0, i32* %i, align 4, !dbg !8118
  br label %for.cond14, !dbg !8120

for.cond14:                                       ; preds = %for.inc20, %for.body10
  %33 = load i32, i32* %i, align 4, !dbg !8121
  %34 = load i32, i32* %edgeSize, align 4, !dbg !8123
  %sub15 = sub nsw i32 %34, 1, !dbg !8124
  %cmp16 = icmp slt i32 %33, %sub15, !dbg !8125
  br i1 %cmp16, label %for.body17, label %for.end23, !dbg !8126

for.body17:                                       ; preds = %for.cond14
  %35 = load i32, i32* %mapIndex, align 4, !dbg !8127
  %36 = load i32*, i32** %origindex, align 8, !dbg !8128
  %37 = load i32, i32* %a, align 4, !dbg !8129
  %idxprom18 = sext i32 %37 to i64, !dbg !8128
  %arrayidx19 = getelementptr inbounds i32, i32* %36, i64 %idxprom18, !dbg !8128
  store i32 %35, i32* %arrayidx19, align 4, !dbg !8130
  br label %for.inc20, !dbg !8128

for.inc20:                                        ; preds = %for.body17
  %38 = load i32, i32* %i, align 4, !dbg !8131
  %inc21 = add nsw i32 %38, 1, !dbg !8131
  store i32 %inc21, i32* %i, align 4, !dbg !8131
  %39 = load i32, i32* %a, align 4, !dbg !8132
  %inc22 = add nsw i32 %39, 1, !dbg !8132
  store i32 %inc22, i32* %a, align 4, !dbg !8132
  br label %for.cond14, !dbg !8133, !llvm.loop !8134

for.end23:                                        ; preds = %for.cond14
  br label %for.inc24, !dbg !8136

for.inc24:                                        ; preds = %for.end23
  %40 = load i32, i32* %index, align 4, !dbg !8137
  %inc25 = add nsw i32 %40, 1, !dbg !8137
  store i32 %inc25, i32* %index, align 4, !dbg !8137
  br label %for.cond8, !dbg !8138, !llvm.loop !8139

for.end26:                                        ; preds = %for.cond8
  %41 = load i32*, i32** %origindex, align 8, !dbg !8141
  %42 = bitcast i32* %41 to i8*, !dbg !8141
  store i8* %42, i8** %retval, align 8, !dbg !8142
  br label %return, !dbg !8142

if.end27:                                         ; preds = %entry
  %43 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8143
  %44 = load i32, i32* %type.addr, align 4, !dbg !8144
  %call28 = call i8* @DM_get_edge_data_layer(%struct.DerivedMesh* %43, i32 %44), !dbg !8145
  store i8* %call28, i8** %retval, align 8, !dbg !8146
  br label %return, !dbg !8146

return:                                           ; preds = %if.end27, %for.end26, %if.then3
  %45 = load i8*, i8** %retval, align 8, !dbg !8147
  ret i8* %45, !dbg !8147
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @ccgDM_get_tessface_data_layer(%struct.DerivedMesh* %dm, i32 %type) #0 !dbg !8148 {
entry:
  %retval = alloca i8*, align 8
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %type.addr = alloca i32, align 4
  %origindex = alloca i32*, align 8
  %tlnors = alloca [3 x i16]*, align 8
  %lnors = alloca [3 x float]*, align 8
  %tlnors_it = alloca [3 x i16]*, align 8
  %numLoops = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !8149, metadata !DIExpression()), !dbg !8150
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !8151, metadata !DIExpression()), !dbg !8152
  %0 = load i32, i32* %type.addr, align 4, !dbg !8153
  %cmp = icmp eq i32 %0, 7, !dbg !8155
  br i1 %cmp, label %if.then, label %if.end4, !dbg !8156

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32** %origindex, metadata !8157, metadata !DIExpression()), !dbg !8159
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8160
  %call = call i8* @DM_get_tessface_data_layer(%struct.DerivedMesh* %1, i32 7), !dbg !8161
  %2 = bitcast i8* %call to i32*, !dbg !8161
  store i32* %2, i32** %origindex, align 8, !dbg !8162
  %3 = load i32*, i32** %origindex, align 8, !dbg !8163
  %tobool = icmp ne i32* %3, null, !dbg !8163
  br i1 %tobool, label %if.then1, label %if.end, !dbg !8165

if.then1:                                         ; preds = %if.then
  %4 = load i32*, i32** %origindex, align 8, !dbg !8166
  %5 = bitcast i32* %4 to i8*, !dbg !8166
  store i8* %5, i8** %retval, align 8, !dbg !8168
  br label %return, !dbg !8168

if.end:                                           ; preds = %if.then
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8169
  call void @DM_add_tessface_layer(%struct.DerivedMesh* %6, i32 7, i32 1, i8* null), !dbg !8170
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8171
  %call2 = call i8* @DM_get_tessface_data_layer(%struct.DerivedMesh* %7, i32 7), !dbg !8172
  %8 = bitcast i8* %call2 to i32*, !dbg !8172
  store i32* %8, i32** %origindex, align 8, !dbg !8173
  %9 = load i32*, i32** %origindex, align 8, !dbg !8174
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8175
  %getNumTessFaces = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %10, i32 0, i32 25, !dbg !8176
  %11 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumTessFaces, align 8, !dbg !8176
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8177
  %call3 = call i32 %11(%struct.DerivedMesh* %12), !dbg !8175
  call void @range_vn_i(i32* %9, i32 %call3, i32 0), !dbg !8178
  %13 = load i32*, i32** %origindex, align 8, !dbg !8179
  %14 = bitcast i32* %13 to i8*, !dbg !8179
  store i8* %14, i8** %retval, align 8, !dbg !8180
  br label %return, !dbg !8180

if.end4:                                          ; preds = %entry
  %15 = load i32, i32* %type.addr, align 4, !dbg !8181
  %cmp5 = icmp eq i32 %15, 40, !dbg !8183
  br i1 %cmp5, label %if.then6, label %if.end20, !dbg !8184

if.then6:                                         ; preds = %if.end4
  call void @llvm.dbg.declare(metadata [3 x i16]** %tlnors, metadata !8185, metadata !DIExpression()), !dbg !8187
  %16 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8188
  %call7 = call i8* @DM_get_tessface_data_layer(%struct.DerivedMesh* %16, i32 40), !dbg !8189
  %17 = bitcast i8* %call7 to [3 x i16]*, !dbg !8189
  store [3 x i16]* %17, [3 x i16]** %tlnors, align 8, !dbg !8190
  %18 = load [3 x i16]*, [3 x i16]** %tlnors, align 8, !dbg !8191
  %tobool8 = icmp ne [3 x i16]* %18, null, !dbg !8191
  br i1 %tobool8, label %if.end19, label %if.then9, !dbg !8193

if.then9:                                         ; preds = %if.then6
  call void @llvm.dbg.declare(metadata [3 x float]** %lnors, metadata !8194, metadata !DIExpression()), !dbg !8196
  call void @llvm.dbg.declare(metadata [3 x i16]** %tlnors_it, metadata !8197, metadata !DIExpression()), !dbg !8198
  call void @llvm.dbg.declare(metadata i32* %numLoops, metadata !8199, metadata !DIExpression()), !dbg !8201
  %19 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8202
  %call10 = call i32 @ccgDM_getNumLoops(%struct.DerivedMesh* %19), !dbg !8203
  store i32 %call10, i32* %numLoops, align 4, !dbg !8201
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8204, metadata !DIExpression()), !dbg !8205
  %20 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8206
  %getLoopDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %20, i32 0, i32 53, !dbg !8207
  %21 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getLoopDataArray, align 8, !dbg !8207
  %22 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8208
  %call11 = call i8* %21(%struct.DerivedMesh* %22, i32 8), !dbg !8206
  %23 = bitcast i8* %call11 to [3 x float]*, !dbg !8206
  store [3 x float]* %23, [3 x float]** %lnors, align 8, !dbg !8209
  %24 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !8210
  %tobool12 = icmp ne [3 x float]* %24, null, !dbg !8210
  br i1 %tobool12, label %if.end14, label %if.then13, !dbg !8212

if.then13:                                        ; preds = %if.then9
  store i8* null, i8** %retval, align 8, !dbg !8213
  br label %return, !dbg !8213

if.end14:                                         ; preds = %if.then9
  %25 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8215
  call void @DM_add_tessface_layer(%struct.DerivedMesh* %25, i32 40, i32 1, i8* null), !dbg !8216
  %26 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8217
  %call15 = call i8* @DM_get_tessface_data_layer(%struct.DerivedMesh* %26, i32 40), !dbg !8218
  %27 = bitcast i8* %call15 to [3 x i16]*, !dbg !8219
  store [3 x i16]* %27, [3 x i16]** %tlnors_it, align 8, !dbg !8220
  store [3 x i16]* %27, [3 x i16]** %tlnors, align 8, !dbg !8221
  store i32 0, i32* %i, align 4, !dbg !8222
  br label %for.cond, !dbg !8224

for.cond:                                         ; preds = %for.inc, %if.end14
  %28 = load i32, i32* %i, align 4, !dbg !8225
  %29 = load i32, i32* %numLoops, align 4, !dbg !8227
  %cmp16 = icmp slt i32 %28, %29, !dbg !8228
  br i1 %cmp16, label %for.body, label %for.end, !dbg !8229

for.body:                                         ; preds = %for.cond
  %30 = load [3 x i16]*, [3 x i16]** %tlnors_it, align 8, !dbg !8230
  %arraydecay = getelementptr inbounds [3 x i16], [3 x i16]* %30, i64 0, i64 0, !dbg !8232
  %31 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !8233
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %31, i64 0, i64 0, !dbg !8234
  call void @normal_float_to_short_v3(i16* %arraydecay, float* %arraydecay17), !dbg !8235
  br label %for.inc, !dbg !8236

for.inc:                                          ; preds = %for.body
  %32 = load i32, i32* %i, align 4, !dbg !8237
  %inc = add nsw i32 %32, 1, !dbg !8237
  store i32 %inc, i32* %i, align 4, !dbg !8237
  %33 = load [3 x i16]*, [3 x i16]** %tlnors_it, align 8, !dbg !8238
  %incdec.ptr = getelementptr inbounds [3 x i16], [3 x i16]* %33, i32 1, !dbg !8238
  store [3 x i16]* %incdec.ptr, [3 x i16]** %tlnors_it, align 8, !dbg !8238
  %34 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !8239
  %incdec.ptr18 = getelementptr inbounds [3 x float], [3 x float]* %34, i32 1, !dbg !8239
  store [3 x float]* %incdec.ptr18, [3 x float]** %lnors, align 8, !dbg !8239
  br label %for.cond, !dbg !8240, !llvm.loop !8241

for.end:                                          ; preds = %for.cond
  br label %if.end19, !dbg !8243

if.end19:                                         ; preds = %for.end, %if.then6
  %35 = load [3 x i16]*, [3 x i16]** %tlnors, align 8, !dbg !8244
  %36 = bitcast [3 x i16]* %35 to i8*, !dbg !8244
  store i8* %36, i8** %retval, align 8, !dbg !8245
  br label %return, !dbg !8245

if.end20:                                         ; preds = %if.end4
  %37 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8246
  %38 = load i32, i32* %type.addr, align 4, !dbg !8247
  %call21 = call i8* @DM_get_tessface_data_layer(%struct.DerivedMesh* %37, i32 %38), !dbg !8248
  store i8* %call21, i8** %retval, align 8, !dbg !8249
  br label %return, !dbg !8249

return:                                           ; preds = %if.end20, %if.end19, %if.then13, %if.end, %if.then1
  %39 = load i8*, i8** %retval, align 8, !dbg !8250
  ret i8* %39, !dbg !8250
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @ccgDM_get_poly_data_layer(%struct.DerivedMesh* %dm, i32 %type) #0 !dbg !8251 {
entry:
  %retval = alloca i8*, align 8
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %type.addr = alloca i32, align 4
  %ccgdm = alloca %struct.CCGDerivedMesh*, align 8
  %ss = alloca %struct.CCGSubSurf*, align 8
  %origindex = alloca i32*, align 8
  %a = alloca i32, align 4
  %i = alloca i32, align 4
  %index = alloca i32, align 4
  %totface = alloca i32, align 4
  %gridFaces = alloca i32, align 4
  %f = alloca %struct.CCGFace*, align 8
  %numVerts = alloca i32, align 4
  %mapIndex = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !8252, metadata !DIExpression()), !dbg !8253
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !8254, metadata !DIExpression()), !dbg !8255
  %0 = load i32, i32* %type.addr, align 4, !dbg !8256
  %cmp = icmp eq i32 %0, 7, !dbg !8258
  br i1 %cmp, label %if.then, label %if.end19, !dbg !8259

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm, metadata !8260, metadata !DIExpression()), !dbg !8262
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8263
  %2 = bitcast %struct.DerivedMesh* %1 to %struct.CCGDerivedMesh*, !dbg !8264
  store %struct.CCGDerivedMesh* %2, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8262
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss, metadata !8265, metadata !DIExpression()), !dbg !8266
  %3 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8267
  %ss1 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %3, i32 0, i32 1, !dbg !8268
  %4 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss1, align 8, !dbg !8268
  store %struct.CCGSubSurf* %4, %struct.CCGSubSurf** %ss, align 8, !dbg !8266
  call void @llvm.dbg.declare(metadata i32** %origindex, metadata !8269, metadata !DIExpression()), !dbg !8270
  call void @llvm.dbg.declare(metadata i32* %a, metadata !8271, metadata !DIExpression()), !dbg !8272
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8273, metadata !DIExpression()), !dbg !8274
  call void @llvm.dbg.declare(metadata i32* %index, metadata !8275, metadata !DIExpression()), !dbg !8276
  call void @llvm.dbg.declare(metadata i32* %totface, metadata !8277, metadata !DIExpression()), !dbg !8278
  call void @llvm.dbg.declare(metadata i32* %gridFaces, metadata !8279, metadata !DIExpression()), !dbg !8280
  %5 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !8281
  %call = call i32 @ccgSubSurf_getGridSize(%struct.CCGSubSurf* %5), !dbg !8282
  %sub = sub nsw i32 %call, 1, !dbg !8283
  store i32 %sub, i32* %gridFaces, align 4, !dbg !8280
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8284
  %call2 = call i8* @DM_get_poly_data_layer(%struct.DerivedMesh* %6, i32 7), !dbg !8285
  %7 = bitcast i8* %call2 to i32*, !dbg !8285
  store i32* %7, i32** %origindex, align 8, !dbg !8286
  %8 = load i32*, i32** %origindex, align 8, !dbg !8287
  %tobool = icmp ne i32* %8, null, !dbg !8287
  br i1 %tobool, label %if.then3, label %if.end, !dbg !8289

if.then3:                                         ; preds = %if.then
  %9 = load i32*, i32** %origindex, align 8, !dbg !8290
  %10 = bitcast i32* %9 to i8*, !dbg !8290
  store i8* %10, i8** %retval, align 8, !dbg !8292
  br label %return, !dbg !8292

if.end:                                           ; preds = %if.then
  %11 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8293
  call void @DM_add_poly_layer(%struct.DerivedMesh* %11, i32 7, i32 1, i8* null), !dbg !8294
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8295
  %call4 = call i8* @DM_get_poly_data_layer(%struct.DerivedMesh* %12, i32 7), !dbg !8296
  %13 = bitcast i8* %call4 to i32*, !dbg !8296
  store i32* %13, i32** %origindex, align 8, !dbg !8297
  %14 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !8298
  %call5 = call i32 @ccgSubSurf_getNumFaces(%struct.CCGSubSurf* %14), !dbg !8299
  store i32 %call5, i32* %totface, align 4, !dbg !8300
  store i32 0, i32* %a, align 4, !dbg !8301
  store i32 0, i32* %index, align 4, !dbg !8303
  br label %for.cond, !dbg !8304

for.cond:                                         ; preds = %for.inc16, %if.end
  %15 = load i32, i32* %index, align 4, !dbg !8305
  %16 = load i32, i32* %totface, align 4, !dbg !8307
  %cmp6 = icmp slt i32 %15, %16, !dbg !8308
  br i1 %cmp6, label %for.body, label %for.end18, !dbg !8309

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f, metadata !8310, metadata !DIExpression()), !dbg !8312
  %17 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8313
  %faceMap = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %17, i32 0, i32 7, !dbg !8314
  %18 = load %struct.anon.1*, %struct.anon.1** %faceMap, align 8, !dbg !8314
  %19 = load i32, i32* %index, align 4, !dbg !8315
  %idxprom = sext i32 %19 to i64, !dbg !8313
  %arrayidx = getelementptr inbounds %struct.anon.1, %struct.anon.1* %18, i64 %idxprom, !dbg !8313
  %face = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx, i32 0, i32 3, !dbg !8316
  %20 = load %struct.CCGFace*, %struct.CCGFace** %face, align 8, !dbg !8316
  store %struct.CCGFace* %20, %struct.CCGFace** %f, align 8, !dbg !8312
  call void @llvm.dbg.declare(metadata i32* %numVerts, metadata !8317, metadata !DIExpression()), !dbg !8318
  %21 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !8319
  %call7 = call i32 @ccgSubSurf_getFaceNumVerts(%struct.CCGFace* %21), !dbg !8320
  store i32 %call7, i32* %numVerts, align 4, !dbg !8318
  call void @llvm.dbg.declare(metadata i32* %mapIndex, metadata !8321, metadata !DIExpression()), !dbg !8322
  %22 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !8323
  %23 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !8324
  %call8 = call i32 @ccgDM_getFaceMapIndex(%struct.CCGSubSurf* %22, %struct.CCGFace* %23), !dbg !8325
  store i32 %call8, i32* %mapIndex, align 4, !dbg !8322
  store i32 0, i32* %i, align 4, !dbg !8326
  br label %for.cond9, !dbg !8328

for.cond9:                                        ; preds = %for.inc, %for.body
  %24 = load i32, i32* %i, align 4, !dbg !8329
  %25 = load i32, i32* %gridFaces, align 4, !dbg !8331
  %26 = load i32, i32* %gridFaces, align 4, !dbg !8332
  %mul = mul nsw i32 %25, %26, !dbg !8333
  %27 = load i32, i32* %numVerts, align 4, !dbg !8334
  %mul10 = mul nsw i32 %mul, %27, !dbg !8335
  %cmp11 = icmp slt i32 %24, %mul10, !dbg !8336
  br i1 %cmp11, label %for.body12, label %for.end, !dbg !8337

for.body12:                                       ; preds = %for.cond9
  %28 = load i32, i32* %mapIndex, align 4, !dbg !8338
  %29 = load i32*, i32** %origindex, align 8, !dbg !8339
  %30 = load i32, i32* %a, align 4, !dbg !8340
  %idxprom13 = sext i32 %30 to i64, !dbg !8339
  %arrayidx14 = getelementptr inbounds i32, i32* %29, i64 %idxprom13, !dbg !8339
  store i32 %28, i32* %arrayidx14, align 4, !dbg !8341
  br label %for.inc, !dbg !8339

for.inc:                                          ; preds = %for.body12
  %31 = load i32, i32* %i, align 4, !dbg !8342
  %inc = add nsw i32 %31, 1, !dbg !8342
  store i32 %inc, i32* %i, align 4, !dbg !8342
  %32 = load i32, i32* %a, align 4, !dbg !8343
  %inc15 = add nsw i32 %32, 1, !dbg !8343
  store i32 %inc15, i32* %a, align 4, !dbg !8343
  br label %for.cond9, !dbg !8344, !llvm.loop !8345

for.end:                                          ; preds = %for.cond9
  br label %for.inc16, !dbg !8347

for.inc16:                                        ; preds = %for.end
  %33 = load i32, i32* %index, align 4, !dbg !8348
  %inc17 = add nsw i32 %33, 1, !dbg !8348
  store i32 %inc17, i32* %index, align 4, !dbg !8348
  br label %for.cond, !dbg !8349, !llvm.loop !8350

for.end18:                                        ; preds = %for.cond
  %34 = load i32*, i32** %origindex, align 8, !dbg !8352
  %35 = bitcast i32* %34 to i8*, !dbg !8352
  store i8* %35, i8** %retval, align 8, !dbg !8353
  br label %return, !dbg !8353

if.end19:                                         ; preds = %entry
  %36 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8354
  %37 = load i32, i32* %type.addr, align 4, !dbg !8355
  %call20 = call i8* @DM_get_poly_data_layer(%struct.DerivedMesh* %36, i32 %37), !dbg !8356
  store i8* %call20, i8** %retval, align 8, !dbg !8357
  br label %return, !dbg !8357

return:                                           ; preds = %if.end19, %for.end18, %if.then3
  %38 = load i8*, i8** %retval, align 8, !dbg !8358
  ret i8* %38, !dbg !8358
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ccgDM_getNumGrids(%struct.DerivedMesh* %dm) #0 !dbg !8359 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %ccgdm = alloca %struct.CCGDerivedMesh*, align 8
  %index = alloca i32, align 4
  %numFaces = alloca i32, align 4
  %numGrids = alloca i32, align 4
  %f = alloca %struct.CCGFace*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !8360, metadata !DIExpression()), !dbg !8361
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm, metadata !8362, metadata !DIExpression()), !dbg !8363
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8364
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CCGDerivedMesh*, !dbg !8365
  store %struct.CCGDerivedMesh* %1, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8363
  call void @llvm.dbg.declare(metadata i32* %index, metadata !8366, metadata !DIExpression()), !dbg !8367
  call void @llvm.dbg.declare(metadata i32* %numFaces, metadata !8368, metadata !DIExpression()), !dbg !8369
  call void @llvm.dbg.declare(metadata i32* %numGrids, metadata !8370, metadata !DIExpression()), !dbg !8371
  %2 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8372
  %ss = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %2, i32 0, i32 1, !dbg !8373
  %3 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !8373
  %call = call i32 @ccgSubSurf_getNumFaces(%struct.CCGSubSurf* %3), !dbg !8374
  store i32 %call, i32* %numFaces, align 4, !dbg !8375
  store i32 0, i32* %numGrids, align 4, !dbg !8376
  store i32 0, i32* %index, align 4, !dbg !8377
  br label %for.cond, !dbg !8379

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load i32, i32* %index, align 4, !dbg !8380
  %5 = load i32, i32* %numFaces, align 4, !dbg !8382
  %cmp = icmp slt i32 %4, %5, !dbg !8383
  br i1 %cmp, label %for.body, label %for.end, !dbg !8384

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f, metadata !8385, metadata !DIExpression()), !dbg !8387
  %6 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8388
  %faceMap = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %6, i32 0, i32 7, !dbg !8389
  %7 = load %struct.anon.1*, %struct.anon.1** %faceMap, align 8, !dbg !8389
  %8 = load i32, i32* %index, align 4, !dbg !8390
  %idxprom = sext i32 %8 to i64, !dbg !8388
  %arrayidx = getelementptr inbounds %struct.anon.1, %struct.anon.1* %7, i64 %idxprom, !dbg !8388
  %face = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx, i32 0, i32 3, !dbg !8391
  %9 = load %struct.CCGFace*, %struct.CCGFace** %face, align 8, !dbg !8391
  store %struct.CCGFace* %9, %struct.CCGFace** %f, align 8, !dbg !8387
  %10 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !8392
  %call1 = call i32 @ccgSubSurf_getFaceNumVerts(%struct.CCGFace* %10), !dbg !8393
  %11 = load i32, i32* %numGrids, align 4, !dbg !8394
  %add = add nsw i32 %11, %call1, !dbg !8394
  store i32 %add, i32* %numGrids, align 4, !dbg !8394
  br label %for.inc, !dbg !8395

for.inc:                                          ; preds = %for.body
  %12 = load i32, i32* %index, align 4, !dbg !8396
  %inc = add nsw i32 %12, 1, !dbg !8396
  store i32 %inc, i32* %index, align 4, !dbg !8396
  br label %for.cond, !dbg !8397, !llvm.loop !8398

for.end:                                          ; preds = %for.cond
  %13 = load i32, i32* %numGrids, align 4, !dbg !8400
  ret i32 %13, !dbg !8401
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ccgDM_getGridSize(%struct.DerivedMesh* %dm) #0 !dbg !8402 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %ccgdm = alloca %struct.CCGDerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !8403, metadata !DIExpression()), !dbg !8404
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm, metadata !8405, metadata !DIExpression()), !dbg !8406
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8407
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CCGDerivedMesh*, !dbg !8408
  store %struct.CCGDerivedMesh* %1, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8406
  %2 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8409
  %ss = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %2, i32 0, i32 1, !dbg !8410
  %3 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !8410
  %call = call i32 @ccgSubSurf_getGridSize(%struct.CCGSubSurf* %3), !dbg !8411
  ret i32 %call, !dbg !8412
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.CCGElem** @ccgDM_getGridData(%struct.DerivedMesh* %dm) #0 !dbg !8413 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %ccgdm = alloca %struct.CCGDerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !8417, metadata !DIExpression()), !dbg !8418
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm, metadata !8419, metadata !DIExpression()), !dbg !8420
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8421
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CCGDerivedMesh*, !dbg !8422
  store %struct.CCGDerivedMesh* %1, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8420
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8423
  call void @ccgdm_create_grids(%struct.DerivedMesh* %2), !dbg !8424
  %3 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8425
  %gridData = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %3, i32 0, i32 14, !dbg !8426
  %4 = load %struct.CCGElem**, %struct.CCGElem*** %gridData, align 8, !dbg !8426
  ret %struct.CCGElem** %4, !dbg !8427
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.DMGridAdjacency* @ccgDM_getGridAdjacency(%struct.DerivedMesh* %dm) #0 !dbg !8428 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %ccgdm = alloca %struct.CCGDerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !8429, metadata !DIExpression()), !dbg !8430
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm, metadata !8431, metadata !DIExpression()), !dbg !8432
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8433
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CCGDerivedMesh*, !dbg !8434
  store %struct.CCGDerivedMesh* %1, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8432
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8435
  call void @ccgdm_create_grids(%struct.DerivedMesh* %2), !dbg !8436
  %3 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8437
  %gridAdjacency = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %3, i32 0, i32 15, !dbg !8438
  %4 = load %struct.DMGridAdjacency*, %struct.DMGridAdjacency** %gridAdjacency, align 8, !dbg !8438
  ret %struct.DMGridAdjacency* %4, !dbg !8439
}

; Function Attrs: noinline nounwind uwtable
define internal i32* @ccgDM_getGridOffset(%struct.DerivedMesh* %dm) #0 !dbg !8440 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %ccgdm = alloca %struct.CCGDerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !8441, metadata !DIExpression()), !dbg !8442
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm, metadata !8443, metadata !DIExpression()), !dbg !8444
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8445
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CCGDerivedMesh*, !dbg !8446
  store %struct.CCGDerivedMesh* %1, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8444
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8447
  call void @ccgdm_create_grids(%struct.DerivedMesh* %2), !dbg !8448
  %3 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8449
  %gridOffset = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %3, i32 0, i32 16, !dbg !8450
  %4 = load i32*, i32** %gridOffset, align 8, !dbg !8450
  ret i32* %4, !dbg !8451
}

; Function Attrs: noinline nounwind uwtable
define internal void @ccgDM_getGridKey(%struct.DerivedMesh* %dm, %struct.CCGKey* %key) #0 !dbg !8452 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %key.addr = alloca %struct.CCGKey*, align 8
  %ccgdm = alloca %struct.CCGDerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !8456, metadata !DIExpression()), !dbg !8457
  store %struct.CCGKey* %key, %struct.CCGKey** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGKey** %key.addr, metadata !8458, metadata !DIExpression()), !dbg !8459
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm, metadata !8460, metadata !DIExpression()), !dbg !8461
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8462
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CCGDerivedMesh*, !dbg !8463
  store %struct.CCGDerivedMesh* %1, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8461
  %2 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !8464
  %3 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8465
  %ss = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %3, i32 0, i32 1, !dbg !8466
  %4 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !8466
  call void @CCG_key_top_level(%struct.CCGKey* %2, %struct.CCGSubSurf* %4), !dbg !8467
  ret void, !dbg !8468
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.DMFlagMat* @ccgDM_getGridFlagMats(%struct.DerivedMesh* %dm) #0 !dbg !8469 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %ccgdm = alloca %struct.CCGDerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !8470, metadata !DIExpression()), !dbg !8471
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm, metadata !8472, metadata !DIExpression()), !dbg !8473
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8474
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CCGDerivedMesh*, !dbg !8475
  store %struct.CCGDerivedMesh* %1, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8473
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8476
  call void @ccgdm_create_grids(%struct.DerivedMesh* %2), !dbg !8477
  %3 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8478
  %gridFlagMats = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %3, i32 0, i32 18, !dbg !8479
  %4 = load %struct.DMFlagMat*, %struct.DMFlagMat** %gridFlagMats, align 8, !dbg !8479
  ret %struct.DMFlagMat* %4, !dbg !8480
}

; Function Attrs: noinline nounwind uwtable
define internal i32** @ccgDM_getGridHidden(%struct.DerivedMesh* %dm) #0 !dbg !8481 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %ccgdm = alloca %struct.CCGDerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !8485, metadata !DIExpression()), !dbg !8486
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm, metadata !8487, metadata !DIExpression()), !dbg !8488
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8489
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CCGDerivedMesh*, !dbg !8490
  store %struct.CCGDerivedMesh* %1, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8488
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8491
  call void @ccgdm_create_grids(%struct.DerivedMesh* %2), !dbg !8492
  %3 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8493
  %gridHidden = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %3, i32 0, i32 19, !dbg !8494
  %4 = load i32**, i32*** %gridHidden, align 8, !dbg !8494
  ret i32** %4, !dbg !8495
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.MeshElemMap* @ccgDM_getPolyMap(%struct.Object* %ob, %struct.DerivedMesh* %dm) #0 !dbg !8496 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %ccgdm = alloca %struct.CCGDerivedMesh*, align 8
  %me = alloca %struct.Mesh*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !8504, metadata !DIExpression()), !dbg !8505
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !8506, metadata !DIExpression()), !dbg !8507
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm, metadata !8508, metadata !DIExpression()), !dbg !8509
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8510
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CCGDerivedMesh*, !dbg !8511
  store %struct.CCGDerivedMesh* %1, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8509
  %2 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8512
  %multires = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %2, i32 0, i32 20, !dbg !8514
  %mmd = getelementptr inbounds %struct.anon.2, %struct.anon.2* %multires, i32 0, i32 0, !dbg !8515
  %3 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd, align 8, !dbg !8515
  %tobool = icmp ne %struct.MultiresModifierData* %3, null, !dbg !8512
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !8516

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8517
  %pmap = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %4, i32 0, i32 12, !dbg !8518
  %5 = load %struct.MeshElemMap*, %struct.MeshElemMap** %pmap, align 8, !dbg !8518
  %tobool1 = icmp ne %struct.MeshElemMap* %5, null, !dbg !8517
  br i1 %tobool1, label %if.end, label %land.lhs.true2, !dbg !8519

land.lhs.true2:                                   ; preds = %land.lhs.true
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8520
  %type = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 3, !dbg !8521
  %7 = load i16, i16* %type, align 8, !dbg !8521
  %conv = sext i16 %7 to i32, !dbg !8520
  %cmp = icmp eq i32 %conv, 1, !dbg !8522
  br i1 %cmp, label %if.then, label %if.end, !dbg !8523

if.then:                                          ; preds = %land.lhs.true2
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !8524, metadata !DIExpression()), !dbg !8526
  %8 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8527
  %data = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 19, !dbg !8528
  %9 = load i8*, i8** %data, align 8, !dbg !8528
  %10 = bitcast i8* %9 to %struct.Mesh*, !dbg !8527
  store %struct.Mesh* %10, %struct.Mesh** %me, align 8, !dbg !8526
  %11 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8529
  %pmap4 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %11, i32 0, i32 12, !dbg !8530
  %12 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8531
  %pmap_mem = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %12, i32 0, i32 13, !dbg !8532
  %13 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8533
  %mpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %13, i32 0, i32 7, !dbg !8534
  %14 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !8534
  %15 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8535
  %mloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %15, i32 0, i32 9, !dbg !8536
  %16 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !8536
  %17 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8537
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %17, i32 0, i32 26, !dbg !8538
  %18 = load i32, i32* %totvert, align 8, !dbg !8538
  %19 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8539
  %totpoly = getelementptr inbounds %struct.Mesh, %struct.Mesh* %19, i32 0, i32 30, !dbg !8540
  %20 = load i32, i32* %totpoly, align 8, !dbg !8540
  %21 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8541
  %totloop = getelementptr inbounds %struct.Mesh, %struct.Mesh* %21, i32 0, i32 31, !dbg !8542
  %22 = load i32, i32* %totloop, align 4, !dbg !8542
  call void @BKE_mesh_vert_poly_map_create(%struct.MeshElemMap** %pmap4, i32** %pmap_mem, %struct.MPoly* %14, %struct.MLoop* %16, i32 %18, i32 %20, i32 %22), !dbg !8543
  br label %if.end, !dbg !8544

if.end:                                           ; preds = %if.then, %land.lhs.true2, %land.lhs.true, %entry
  %23 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8545
  %pmap5 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %23, i32 0, i32 12, !dbg !8546
  %24 = load %struct.MeshElemMap*, %struct.MeshElemMap** %pmap5, align 8, !dbg !8546
  ret %struct.MeshElemMap* %24, !dbg !8547
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.PBVH* @ccgDM_getPBVH(%struct.Object* %ob, %struct.DerivedMesh* %dm) #0 !dbg !8548 {
entry:
  %retval = alloca %struct.PBVH*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %ccgdm = alloca %struct.CCGDerivedMesh*, align 8
  %key = alloca %struct.CCGKey, align 4
  %numGrids = alloca i32, align 4
  %grid_pbvh = alloca i32, align 4
  %me = alloca %struct.Mesh*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !8551, metadata !DIExpression()), !dbg !8552
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !8553, metadata !DIExpression()), !dbg !8554
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm, metadata !8555, metadata !DIExpression()), !dbg !8556
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8557
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CCGDerivedMesh*, !dbg !8558
  store %struct.CCGDerivedMesh* %1, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8556
  call void @llvm.dbg.declare(metadata %struct.CCGKey* %key, metadata !8559, metadata !DIExpression()), !dbg !8560
  call void @llvm.dbg.declare(metadata i32* %numGrids, metadata !8561, metadata !DIExpression()), !dbg !8562
  call void @llvm.dbg.declare(metadata i32* %grid_pbvh, metadata !8563, metadata !DIExpression()), !dbg !8564
  %2 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8565
  %ss = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %2, i32 0, i32 1, !dbg !8566
  %3 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !8566
  call void @CCG_key_top_level(%struct.CCGKey* %key, %struct.CCGSubSurf* %3), !dbg !8567
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8568
  %tobool = icmp ne %struct.Object* %4, null, !dbg !8568
  br i1 %tobool, label %if.end, label %if.then, !dbg !8570

if.then:                                          ; preds = %entry
  %5 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8571
  %pbvh = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %5, i32 0, i32 11, !dbg !8573
  store %struct.PBVH* null, %struct.PBVH** %pbvh, align 8, !dbg !8574
  store %struct.PBVH* null, %struct.PBVH** %retval, align 8, !dbg !8575
  br label %return, !dbg !8575

if.end:                                           ; preds = %entry
  %6 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8576
  %sculpt = getelementptr inbounds %struct.Object, %struct.Object* %6, i32 0, i32 2, !dbg !8578
  %7 = load %struct.SculptSession*, %struct.SculptSession** %sculpt, align 8, !dbg !8578
  %tobool1 = icmp ne %struct.SculptSession* %7, null, !dbg !8576
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !8579

if.then2:                                         ; preds = %if.end
  store %struct.PBVH* null, %struct.PBVH** %retval, align 8, !dbg !8580
  br label %return, !dbg !8580

if.end3:                                          ; preds = %if.end
  %8 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8581
  %call = call i32 @ccgDM_use_grid_pbvh(%struct.CCGDerivedMesh* %8), !dbg !8582
  store i32 %call, i32* %grid_pbvh, align 4, !dbg !8583
  %9 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8584
  %sculpt4 = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 2, !dbg !8586
  %10 = load %struct.SculptSession*, %struct.SculptSession** %sculpt4, align 8, !dbg !8586
  %pbvh5 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %10, i32 0, i32 15, !dbg !8587
  %11 = load %struct.PBVH*, %struct.PBVH** %pbvh5, align 8, !dbg !8587
  %tobool6 = icmp ne %struct.PBVH* %11, null, !dbg !8584
  br i1 %tobool6, label %if.then7, label %if.end16, !dbg !8588

if.then7:                                         ; preds = %if.end3
  %12 = load i32, i32* %grid_pbvh, align 4, !dbg !8589
  %tobool8 = icmp ne i32 %12, 0, !dbg !8589
  br i1 %tobool8, label %if.then9, label %if.end12, !dbg !8592

if.then9:                                         ; preds = %if.then7
  %13 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8593
  call void @ccgdm_create_grids(%struct.DerivedMesh* %13), !dbg !8595
  %14 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8596
  %sculpt10 = getelementptr inbounds %struct.Object, %struct.Object* %14, i32 0, i32 2, !dbg !8597
  %15 = load %struct.SculptSession*, %struct.SculptSession** %sculpt10, align 8, !dbg !8597
  %pbvh11 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %15, i32 0, i32 15, !dbg !8598
  %16 = load %struct.PBVH*, %struct.PBVH** %pbvh11, align 8, !dbg !8598
  %17 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8599
  %gridData = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %17, i32 0, i32 14, !dbg !8600
  %18 = load %struct.CCGElem**, %struct.CCGElem*** %gridData, align 8, !dbg !8600
  %19 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8601
  %gridAdjacency = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %19, i32 0, i32 15, !dbg !8602
  %20 = load %struct.DMGridAdjacency*, %struct.DMGridAdjacency** %gridAdjacency, align 8, !dbg !8602
  %21 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8603
  %gridFaces = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %21, i32 0, i32 17, !dbg !8604
  %22 = load %struct.CCGFace**, %struct.CCGFace*** %gridFaces, align 8, !dbg !8604
  %23 = bitcast %struct.CCGFace** %22 to i8**, !dbg !8605
  %24 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8606
  %gridFlagMats = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %24, i32 0, i32 18, !dbg !8607
  %25 = load %struct.DMFlagMat*, %struct.DMFlagMat** %gridFlagMats, align 8, !dbg !8607
  %26 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8608
  %gridHidden = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %26, i32 0, i32 19, !dbg !8609
  %27 = load i32**, i32*** %gridHidden, align 8, !dbg !8609
  call void @BKE_pbvh_grids_update(%struct.PBVH* %16, %struct.CCGElem** %18, %struct.DMGridAdjacency* %20, i8** %23, %struct.DMFlagMat* %25, i32** %27), !dbg !8610
  br label %if.end12, !dbg !8611

if.end12:                                         ; preds = %if.then9, %if.then7
  %28 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8612
  %sculpt13 = getelementptr inbounds %struct.Object, %struct.Object* %28, i32 0, i32 2, !dbg !8613
  %29 = load %struct.SculptSession*, %struct.SculptSession** %sculpt13, align 8, !dbg !8613
  %pbvh14 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %29, i32 0, i32 15, !dbg !8614
  %30 = load %struct.PBVH*, %struct.PBVH** %pbvh14, align 8, !dbg !8614
  %31 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8615
  %pbvh15 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %31, i32 0, i32 11, !dbg !8616
  store %struct.PBVH* %30, %struct.PBVH** %pbvh15, align 8, !dbg !8617
  br label %if.end16, !dbg !8618

if.end16:                                         ; preds = %if.end12, %if.end3
  %32 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8619
  %pbvh17 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %32, i32 0, i32 11, !dbg !8621
  %33 = load %struct.PBVH*, %struct.PBVH** %pbvh17, align 8, !dbg !8621
  %tobool18 = icmp ne %struct.PBVH* %33, null, !dbg !8619
  br i1 %tobool18, label %if.then19, label %if.end21, !dbg !8622

if.then19:                                        ; preds = %if.end16
  %34 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8623
  %pbvh20 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %34, i32 0, i32 11, !dbg !8624
  %35 = load %struct.PBVH*, %struct.PBVH** %pbvh20, align 8, !dbg !8624
  store %struct.PBVH* %35, %struct.PBVH** %retval, align 8, !dbg !8625
  br label %return, !dbg !8625

if.end21:                                         ; preds = %if.end16
  %36 = load i32, i32* %grid_pbvh, align 4, !dbg !8626
  %tobool22 = icmp ne i32 %36, 0, !dbg !8626
  br i1 %tobool22, label %if.then23, label %if.else, !dbg !8628

if.then23:                                        ; preds = %if.end21
  %37 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8629
  call void @ccgdm_create_grids(%struct.DerivedMesh* %37), !dbg !8631
  %38 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8632
  %call24 = call i32 @ccgDM_getNumGrids(%struct.DerivedMesh* %38), !dbg !8633
  store i32 %call24, i32* %numGrids, align 4, !dbg !8634
  %call25 = call %struct.PBVH* @BKE_pbvh_new(), !dbg !8635
  %39 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8636
  %pbvh26 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %39, i32 0, i32 11, !dbg !8637
  store %struct.PBVH* %call25, %struct.PBVH** %pbvh26, align 8, !dbg !8638
  %40 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8639
  %sculpt27 = getelementptr inbounds %struct.Object, %struct.Object* %40, i32 0, i32 2, !dbg !8640
  %41 = load %struct.SculptSession*, %struct.SculptSession** %sculpt27, align 8, !dbg !8640
  %pbvh28 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %41, i32 0, i32 15, !dbg !8641
  store %struct.PBVH* %call25, %struct.PBVH** %pbvh28, align 8, !dbg !8642
  %42 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8643
  %pbvh29 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %42, i32 0, i32 11, !dbg !8644
  %43 = load %struct.PBVH*, %struct.PBVH** %pbvh29, align 8, !dbg !8644
  %44 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8645
  %gridData30 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %44, i32 0, i32 14, !dbg !8646
  %45 = load %struct.CCGElem**, %struct.CCGElem*** %gridData30, align 8, !dbg !8646
  %46 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8647
  %gridAdjacency31 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %46, i32 0, i32 15, !dbg !8648
  %47 = load %struct.DMGridAdjacency*, %struct.DMGridAdjacency** %gridAdjacency31, align 8, !dbg !8648
  %48 = load i32, i32* %numGrids, align 4, !dbg !8649
  %49 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8650
  %gridFaces32 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %49, i32 0, i32 17, !dbg !8651
  %50 = load %struct.CCGFace**, %struct.CCGFace*** %gridFaces32, align 8, !dbg !8651
  %51 = bitcast %struct.CCGFace** %50 to i8**, !dbg !8652
  %52 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8653
  %gridFlagMats33 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %52, i32 0, i32 18, !dbg !8654
  %53 = load %struct.DMFlagMat*, %struct.DMFlagMat** %gridFlagMats33, align 8, !dbg !8654
  %54 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8655
  %gridHidden34 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %54, i32 0, i32 19, !dbg !8656
  %55 = load i32**, i32*** %gridHidden34, align 8, !dbg !8656
  call void @BKE_pbvh_build_grids(%struct.PBVH* %43, %struct.CCGElem** %45, %struct.DMGridAdjacency* %47, i32 %48, %struct.CCGKey* %key, i8** %51, %struct.DMFlagMat* %53, i32** %55), !dbg !8657
  br label %if.end43, !dbg !8658

if.else:                                          ; preds = %if.end21
  %56 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8659
  %type = getelementptr inbounds %struct.Object, %struct.Object* %56, i32 0, i32 3, !dbg !8661
  %57 = load i16, i16* %type, align 8, !dbg !8661
  %conv = sext i16 %57 to i32, !dbg !8659
  %cmp = icmp eq i32 %conv, 1, !dbg !8662
  br i1 %cmp, label %if.then36, label %if.end42, !dbg !8663

if.then36:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !8664, metadata !DIExpression()), !dbg !8666
  %58 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8667
  %data = getelementptr inbounds %struct.Object, %struct.Object* %58, i32 0, i32 19, !dbg !8668
  %59 = load i8*, i8** %data, align 8, !dbg !8668
  %60 = bitcast i8* %59 to %struct.Mesh*, !dbg !8667
  store %struct.Mesh* %60, %struct.Mesh** %me, align 8, !dbg !8666
  %call37 = call %struct.PBVH* @BKE_pbvh_new(), !dbg !8669
  %61 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8670
  %pbvh38 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %61, i32 0, i32 11, !dbg !8671
  store %struct.PBVH* %call37, %struct.PBVH** %pbvh38, align 8, !dbg !8672
  %62 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8673
  %sculpt39 = getelementptr inbounds %struct.Object, %struct.Object* %62, i32 0, i32 2, !dbg !8674
  %63 = load %struct.SculptSession*, %struct.SculptSession** %sculpt39, align 8, !dbg !8674
  %pbvh40 = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %63, i32 0, i32 15, !dbg !8675
  store %struct.PBVH* %call37, %struct.PBVH** %pbvh40, align 8, !dbg !8676
  %64 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8677
  %pbvh41 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %64, i32 0, i32 11, !dbg !8678
  %65 = load %struct.PBVH*, %struct.PBVH** %pbvh41, align 8, !dbg !8678
  %66 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8679
  %mface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %66, i32 0, i32 12, !dbg !8680
  %67 = load %struct.MFace*, %struct.MFace** %mface, align 8, !dbg !8680
  %68 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8681
  %mvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %68, i32 0, i32 15, !dbg !8682
  %69 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !8682
  %70 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8683
  %totface = getelementptr inbounds %struct.Mesh, %struct.Mesh* %70, i32 0, i32 28, !dbg !8684
  %71 = load i32, i32* %totface, align 8, !dbg !8684
  %72 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8685
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %72, i32 0, i32 26, !dbg !8686
  %73 = load i32, i32* %totvert, align 8, !dbg !8686
  %74 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !8687
  %vdata = getelementptr inbounds %struct.Mesh, %struct.Mesh* %74, i32 0, i32 21, !dbg !8688
  call void @BKE_pbvh_build_mesh(%struct.PBVH* %65, %struct.MFace* %67, %struct.MVert* %69, i32 %71, i32 %73, %struct.CustomData* %vdata), !dbg !8689
  br label %if.end42, !dbg !8690

if.end42:                                         ; preds = %if.then36, %if.else
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.then23
  %75 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8691
  %pbvh44 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %75, i32 0, i32 11, !dbg !8693
  %76 = load %struct.PBVH*, %struct.PBVH** %pbvh44, align 8, !dbg !8693
  %tobool45 = icmp ne %struct.PBVH* %76, null, !dbg !8691
  br i1 %tobool45, label %if.then46, label %if.end49, !dbg !8694

if.then46:                                        ; preds = %if.end43
  %77 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8695
  %pbvh47 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %77, i32 0, i32 11, !dbg !8696
  %78 = load %struct.PBVH*, %struct.PBVH** %pbvh47, align 8, !dbg !8696
  %79 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8697
  %sculpt48 = getelementptr inbounds %struct.Object, %struct.Object* %79, i32 0, i32 2, !dbg !8698
  %80 = load %struct.SculptSession*, %struct.SculptSession** %sculpt48, align 8, !dbg !8698
  %show_diffuse_color = getelementptr inbounds %struct.SculptSession, %struct.SculptSession* %80, i32 0, i32 16, !dbg !8699
  %81 = load i8, i8* %show_diffuse_color, align 8, !dbg !8699
  call void @pbvh_show_diffuse_color_set(%struct.PBVH* %78, i8 zeroext %81), !dbg !8700
  br label %if.end49, !dbg !8700

if.end49:                                         ; preds = %if.then46, %if.end43
  %82 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8701
  %pbvh50 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %82, i32 0, i32 11, !dbg !8702
  %83 = load %struct.PBVH*, %struct.PBVH** %pbvh50, align 8, !dbg !8702
  store %struct.PBVH* %83, %struct.PBVH** %retval, align 8, !dbg !8703
  br label %return, !dbg !8703

return:                                           ; preds = %if.end49, %if.then19, %if.then2, %if.then
  %84 = load %struct.PBVH*, %struct.PBVH** %retval, align 8, !dbg !8704
  ret %struct.PBVH* %84, !dbg !8704
}

; Function Attrs: noinline nounwind uwtable
define internal void @ccgDM_calcNormals(%struct.DerivedMesh* %dm) #0 !dbg !8705 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !8706, metadata !DIExpression()), !dbg !8707
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8708
  %dirty = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 16, !dbg !8709
  %1 = load i32, i32* %dirty, align 8, !dbg !8710
  %and = and i32 %1, -5, !dbg !8710
  store i32 %and, i32* %dirty, align 8, !dbg !8710
  ret void, !dbg !8711
}

declare dso_local void @CDDM_calc_loop_normals(%struct.DerivedMesh*, float) #2

; Function Attrs: noinline nounwind uwtable
define internal void @ccgDM_recalcTessellation(%struct.DerivedMesh* %UNUSED_dm) #0 !dbg !8712 {
entry:
  %UNUSED_dm.addr = alloca %struct.DerivedMesh*, align 8
  store %struct.DerivedMesh* %UNUSED_dm, %struct.DerivedMesh** %UNUSED_dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %UNUSED_dm.addr, metadata !8713, metadata !DIExpression()), !dbg !8714
  ret void, !dbg !8715
}

; Function Attrs: noinline nounwind uwtable
define internal void @ccgdm_getVertCos(%struct.DerivedMesh* %dm, [3 x float]* %cos) #0 !dbg !8716 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %cos.addr = alloca [3 x float]*, align 8
  %ccgdm = alloca %struct.CCGDerivedMesh*, align 8
  %ss = alloca %struct.CCGSubSurf*, align 8
  %edgeSize = alloca i32, align 4
  %gridSize = alloca i32, align 4
  %i = alloca i32, align 4
  %vi = alloca %struct.CCGVertIterator*, align 8
  %ei = alloca %struct.CCGEdgeIterator*, align 8
  %fi = alloca %struct.CCGFaceIterator*, align 8
  %faceMap2 = alloca %struct.CCGFace**, align 8
  %edgeMap2 = alloca %struct.CCGEdge**, align 8
  %vertMap2 = alloca %struct.CCGVert**, align 8
  %index = alloca i32, align 4
  %totvert = alloca i32, align 4
  %totedge = alloca i32, align 4
  %totface = alloca i32, align 4
  %v = alloca %struct.CCGVert*, align 8
  %e = alloca %struct.CCGEdge*, align 8
  %f = alloca %struct.CCGFace*, align 8
  %f47 = alloca %struct.CCGFace*, align 8
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %S = alloca i32, align 4
  %numVerts = alloca i32, align 4
  %e109 = alloca %struct.CCGEdge*, align 8
  %x112 = alloca i32, align 4
  %v133 = alloca %struct.CCGVert*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !8717, metadata !DIExpression()), !dbg !8718
  store [3 x float]* %cos, [3 x float]** %cos.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %cos.addr, metadata !8719, metadata !DIExpression()), !dbg !8720
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm, metadata !8721, metadata !DIExpression()), !dbg !8722
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !8723
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CCGDerivedMesh*, !dbg !8724
  store %struct.CCGDerivedMesh* %1, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8722
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss, metadata !8725, metadata !DIExpression()), !dbg !8726
  %2 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !8727
  %ss1 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %2, i32 0, i32 1, !dbg !8728
  %3 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss1, align 8, !dbg !8728
  store %struct.CCGSubSurf* %3, %struct.CCGSubSurf** %ss, align 8, !dbg !8726
  call void @llvm.dbg.declare(metadata i32* %edgeSize, metadata !8729, metadata !DIExpression()), !dbg !8730
  %4 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !8731
  %call = call i32 @ccgSubSurf_getEdgeSize(%struct.CCGSubSurf* %4), !dbg !8732
  store i32 %call, i32* %edgeSize, align 4, !dbg !8730
  call void @llvm.dbg.declare(metadata i32* %gridSize, metadata !8733, metadata !DIExpression()), !dbg !8734
  %5 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !8735
  %call2 = call i32 @ccgSubSurf_getGridSize(%struct.CCGSubSurf* %5), !dbg !8736
  store i32 %call2, i32* %gridSize, align 4, !dbg !8734
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8737, metadata !DIExpression()), !dbg !8738
  call void @llvm.dbg.declare(metadata %struct.CCGVertIterator** %vi, metadata !8739, metadata !DIExpression()), !dbg !8740
  call void @llvm.dbg.declare(metadata %struct.CCGEdgeIterator** %ei, metadata !8741, metadata !DIExpression()), !dbg !8742
  call void @llvm.dbg.declare(metadata %struct.CCGFaceIterator** %fi, metadata !8743, metadata !DIExpression()), !dbg !8744
  call void @llvm.dbg.declare(metadata %struct.CCGFace*** %faceMap2, metadata !8745, metadata !DIExpression()), !dbg !8747
  call void @llvm.dbg.declare(metadata %struct.CCGEdge*** %edgeMap2, metadata !8748, metadata !DIExpression()), !dbg !8750
  call void @llvm.dbg.declare(metadata %struct.CCGVert*** %vertMap2, metadata !8751, metadata !DIExpression()), !dbg !8753
  call void @llvm.dbg.declare(metadata i32* %index, metadata !8754, metadata !DIExpression()), !dbg !8755
  call void @llvm.dbg.declare(metadata i32* %totvert, metadata !8756, metadata !DIExpression()), !dbg !8757
  call void @llvm.dbg.declare(metadata i32* %totedge, metadata !8758, metadata !DIExpression()), !dbg !8759
  call void @llvm.dbg.declare(metadata i32* %totface, metadata !8760, metadata !DIExpression()), !dbg !8761
  %6 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !8762
  %call3 = call i32 @ccgSubSurf_getNumVerts(%struct.CCGSubSurf* %6), !dbg !8763
  store i32 %call3, i32* %totvert, align 4, !dbg !8764
  %7 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !8765
  %8 = load i32, i32* %totvert, align 4, !dbg !8766
  %conv = sext i32 %8 to i64, !dbg !8766
  %mul = mul i64 %conv, 8, !dbg !8767
  %call4 = call i8* %7(i64 %mul, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0)), !dbg !8765
  %9 = bitcast i8* %call4 to %struct.CCGVert**, !dbg !8765
  store %struct.CCGVert** %9, %struct.CCGVert*** %vertMap2, align 8, !dbg !8768
  %10 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !8769
  %call5 = call %struct.CCGVertIterator* @ccgSubSurf_getVertIterator(%struct.CCGSubSurf* %10), !dbg !8771
  store %struct.CCGVertIterator* %call5, %struct.CCGVertIterator** %vi, align 8, !dbg !8772
  br label %for.cond, !dbg !8773

for.cond:                                         ; preds = %for.inc, %entry
  %11 = load %struct.CCGVertIterator*, %struct.CCGVertIterator** %vi, align 8, !dbg !8774
  %call6 = call i32 @ccgVertIterator_isStopped(%struct.CCGVertIterator* %11), !dbg !8776
  %tobool = icmp ne i32 %call6, 0, !dbg !8777
  %lnot = xor i1 %tobool, true, !dbg !8777
  br i1 %lnot, label %for.body, label %for.end, !dbg !8778

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v, metadata !8779, metadata !DIExpression()), !dbg !8781
  %12 = load %struct.CCGVertIterator*, %struct.CCGVertIterator** %vi, align 8, !dbg !8782
  %call7 = call %struct.CCGVert* @ccgVertIterator_getCurrent(%struct.CCGVertIterator* %12), !dbg !8783
  store %struct.CCGVert* %call7, %struct.CCGVert** %v, align 8, !dbg !8781
  %13 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !8784
  %14 = load %struct.CCGVert**, %struct.CCGVert*** %vertMap2, align 8, !dbg !8785
  %15 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !8786
  %call8 = call i8* @ccgSubSurf_getVertVertHandle(%struct.CCGVert* %15), !dbg !8786
  %16 = ptrtoint i8* %call8 to i64, !dbg !8786
  %conv9 = trunc i64 %16 to i32, !dbg !8786
  %idxprom = sext i32 %conv9 to i64, !dbg !8785
  %arrayidx = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %14, i64 %idxprom, !dbg !8785
  store %struct.CCGVert* %13, %struct.CCGVert** %arrayidx, align 8, !dbg !8787
  br label %for.inc, !dbg !8788

for.inc:                                          ; preds = %for.body
  %17 = load %struct.CCGVertIterator*, %struct.CCGVertIterator** %vi, align 8, !dbg !8789
  call void @ccgVertIterator_next(%struct.CCGVertIterator* %17), !dbg !8790
  br label %for.cond, !dbg !8791, !llvm.loop !8792

for.end:                                          ; preds = %for.cond
  %18 = load %struct.CCGVertIterator*, %struct.CCGVertIterator** %vi, align 8, !dbg !8794
  call void @ccgVertIterator_free(%struct.CCGVertIterator* %18), !dbg !8795
  %19 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !8796
  %call10 = call i32 @ccgSubSurf_getNumEdges(%struct.CCGSubSurf* %19), !dbg !8797
  store i32 %call10, i32* %totedge, align 4, !dbg !8798
  %20 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !8799
  %21 = load i32, i32* %totedge, align 4, !dbg !8800
  %conv11 = sext i32 %21 to i64, !dbg !8800
  %mul12 = mul i64 %conv11, 8, !dbg !8801
  %call13 = call i8* %20(i64 %mul12, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15, i64 0, i64 0)), !dbg !8799
  %22 = bitcast i8* %call13 to %struct.CCGEdge**, !dbg !8799
  store %struct.CCGEdge** %22, %struct.CCGEdge*** %edgeMap2, align 8, !dbg !8802
  %23 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !8803
  %call14 = call %struct.CCGEdgeIterator* @ccgSubSurf_getEdgeIterator(%struct.CCGSubSurf* %23), !dbg !8805
  store %struct.CCGEdgeIterator* %call14, %struct.CCGEdgeIterator** %ei, align 8, !dbg !8806
  store i32 0, i32* %i, align 4, !dbg !8807
  br label %for.cond15, !dbg !8808

for.cond15:                                       ; preds = %for.inc25, %for.end
  %24 = load %struct.CCGEdgeIterator*, %struct.CCGEdgeIterator** %ei, align 8, !dbg !8809
  %call16 = call i32 @ccgEdgeIterator_isStopped(%struct.CCGEdgeIterator* %24), !dbg !8811
  %tobool17 = icmp ne i32 %call16, 0, !dbg !8812
  %lnot18 = xor i1 %tobool17, true, !dbg !8812
  br i1 %lnot18, label %for.body19, label %for.end26, !dbg !8813

for.body19:                                       ; preds = %for.cond15
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e, metadata !8814, metadata !DIExpression()), !dbg !8816
  %25 = load %struct.CCGEdgeIterator*, %struct.CCGEdgeIterator** %ei, align 8, !dbg !8817
  %call20 = call %struct.CCGEdge* @ccgEdgeIterator_getCurrent(%struct.CCGEdgeIterator* %25), !dbg !8818
  store %struct.CCGEdge* %call20, %struct.CCGEdge** %e, align 8, !dbg !8816
  %26 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !8819
  %27 = load %struct.CCGEdge**, %struct.CCGEdge*** %edgeMap2, align 8, !dbg !8820
  %28 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !8821
  %call21 = call i8* @ccgSubSurf_getEdgeEdgeHandle(%struct.CCGEdge* %28), !dbg !8821
  %29 = ptrtoint i8* %call21 to i64, !dbg !8821
  %conv22 = trunc i64 %29 to i32, !dbg !8821
  %idxprom23 = sext i32 %conv22 to i64, !dbg !8820
  %arrayidx24 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %27, i64 %idxprom23, !dbg !8820
  store %struct.CCGEdge* %26, %struct.CCGEdge** %arrayidx24, align 8, !dbg !8822
  br label %for.inc25, !dbg !8823

for.inc25:                                        ; preds = %for.body19
  %30 = load i32, i32* %i, align 4, !dbg !8824
  %inc = add nsw i32 %30, 1, !dbg !8824
  store i32 %inc, i32* %i, align 4, !dbg !8824
  %31 = load %struct.CCGEdgeIterator*, %struct.CCGEdgeIterator** %ei, align 8, !dbg !8825
  call void @ccgEdgeIterator_next(%struct.CCGEdgeIterator* %31), !dbg !8826
  br label %for.cond15, !dbg !8827, !llvm.loop !8828

for.end26:                                        ; preds = %for.cond15
  %32 = load %struct.CCGEdgeIterator*, %struct.CCGEdgeIterator** %ei, align 8, !dbg !8830
  call void @ccgEdgeIterator_free(%struct.CCGEdgeIterator* %32), !dbg !8831
  %33 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !8832
  %call27 = call i32 @ccgSubSurf_getNumFaces(%struct.CCGSubSurf* %33), !dbg !8833
  store i32 %call27, i32* %totface, align 4, !dbg !8834
  %34 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !8835
  %35 = load i32, i32* %totface, align 4, !dbg !8836
  %conv28 = sext i32 %35 to i64, !dbg !8836
  %mul29 = mul i64 %conv28, 8, !dbg !8837
  %call30 = call i8* %34(i64 %mul29, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16, i64 0, i64 0)), !dbg !8835
  %36 = bitcast i8* %call30 to %struct.CCGFace**, !dbg !8835
  store %struct.CCGFace** %36, %struct.CCGFace*** %faceMap2, align 8, !dbg !8838
  %37 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !8839
  %call31 = call %struct.CCGFaceIterator* @ccgSubSurf_getFaceIterator(%struct.CCGSubSurf* %37), !dbg !8841
  store %struct.CCGFaceIterator* %call31, %struct.CCGFaceIterator** %fi, align 8, !dbg !8842
  br label %for.cond32, !dbg !8843

for.cond32:                                       ; preds = %for.inc42, %for.end26
  %38 = load %struct.CCGFaceIterator*, %struct.CCGFaceIterator** %fi, align 8, !dbg !8844
  %call33 = call i32 @ccgFaceIterator_isStopped(%struct.CCGFaceIterator* %38), !dbg !8846
  %tobool34 = icmp ne i32 %call33, 0, !dbg !8847
  %lnot35 = xor i1 %tobool34, true, !dbg !8847
  br i1 %lnot35, label %for.body36, label %for.end43, !dbg !8848

for.body36:                                       ; preds = %for.cond32
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f, metadata !8849, metadata !DIExpression()), !dbg !8851
  %39 = load %struct.CCGFaceIterator*, %struct.CCGFaceIterator** %fi, align 8, !dbg !8852
  %call37 = call %struct.CCGFace* @ccgFaceIterator_getCurrent(%struct.CCGFaceIterator* %39), !dbg !8853
  store %struct.CCGFace* %call37, %struct.CCGFace** %f, align 8, !dbg !8851
  %40 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !8854
  %41 = load %struct.CCGFace**, %struct.CCGFace*** %faceMap2, align 8, !dbg !8855
  %42 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !8856
  %call38 = call i8* @ccgSubSurf_getFaceFaceHandle(%struct.CCGFace* %42), !dbg !8856
  %43 = ptrtoint i8* %call38 to i64, !dbg !8856
  %conv39 = trunc i64 %43 to i32, !dbg !8856
  %idxprom40 = sext i32 %conv39 to i64, !dbg !8855
  %arrayidx41 = getelementptr inbounds %struct.CCGFace*, %struct.CCGFace** %41, i64 %idxprom40, !dbg !8855
  store %struct.CCGFace* %40, %struct.CCGFace** %arrayidx41, align 8, !dbg !8857
  br label %for.inc42, !dbg !8858

for.inc42:                                        ; preds = %for.body36
  %44 = load %struct.CCGFaceIterator*, %struct.CCGFaceIterator** %fi, align 8, !dbg !8859
  call void @ccgFaceIterator_next(%struct.CCGFaceIterator* %44), !dbg !8860
  br label %for.cond32, !dbg !8861, !llvm.loop !8862

for.end43:                                        ; preds = %for.cond32
  %45 = load %struct.CCGFaceIterator*, %struct.CCGFaceIterator** %fi, align 8, !dbg !8864
  call void @ccgFaceIterator_free(%struct.CCGFaceIterator* %45), !dbg !8865
  store i32 0, i32* %i, align 4, !dbg !8866
  store i32 0, i32* %index, align 4, !dbg !8867
  br label %for.cond44, !dbg !8869

for.cond44:                                       ; preds = %for.inc102, %for.end43
  %46 = load i32, i32* %index, align 4, !dbg !8870
  %47 = load i32, i32* %totface, align 4, !dbg !8872
  %cmp = icmp slt i32 %46, %47, !dbg !8873
  br i1 %cmp, label %for.body46, label %for.end104, !dbg !8874

for.body46:                                       ; preds = %for.cond44
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f47, metadata !8875, metadata !DIExpression()), !dbg !8877
  %48 = load %struct.CCGFace**, %struct.CCGFace*** %faceMap2, align 8, !dbg !8878
  %49 = load i32, i32* %index, align 4, !dbg !8879
  %idxprom48 = sext i32 %49 to i64, !dbg !8878
  %arrayidx49 = getelementptr inbounds %struct.CCGFace*, %struct.CCGFace** %48, i64 %idxprom48, !dbg !8878
  %50 = load %struct.CCGFace*, %struct.CCGFace** %arrayidx49, align 8, !dbg !8878
  store %struct.CCGFace* %50, %struct.CCGFace** %f47, align 8, !dbg !8877
  call void @llvm.dbg.declare(metadata i32* %x, metadata !8880, metadata !DIExpression()), !dbg !8881
  call void @llvm.dbg.declare(metadata i32* %y, metadata !8882, metadata !DIExpression()), !dbg !8883
  call void @llvm.dbg.declare(metadata i32* %S, metadata !8884, metadata !DIExpression()), !dbg !8885
  call void @llvm.dbg.declare(metadata i32* %numVerts, metadata !8886, metadata !DIExpression()), !dbg !8887
  %51 = load %struct.CCGFace*, %struct.CCGFace** %f47, align 8, !dbg !8888
  %call50 = call i32 @ccgSubSurf_getFaceNumVerts(%struct.CCGFace* %51), !dbg !8889
  store i32 %call50, i32* %numVerts, align 4, !dbg !8887
  %52 = load [3 x float]*, [3 x float]** %cos.addr, align 8, !dbg !8890
  %53 = load i32, i32* %i, align 4, !dbg !8891
  %inc51 = add nsw i32 %53, 1, !dbg !8891
  store i32 %inc51, i32* %i, align 4, !dbg !8891
  %idxprom52 = sext i32 %53 to i64, !dbg !8890
  %arrayidx53 = getelementptr inbounds [3 x float], [3 x float]* %52, i64 %idxprom52, !dbg !8890
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx53, i64 0, i64 0, !dbg !8890
  %54 = load %struct.CCGFace*, %struct.CCGFace** %f47, align 8, !dbg !8892
  %call54 = call i8* @ccgSubSurf_getFaceCenterData(%struct.CCGFace* %54), !dbg !8893
  %55 = bitcast i8* %call54 to float*, !dbg !8893
  call void @copy_v3_v3(float* %arraydecay, float* %55), !dbg !8894
  store i32 0, i32* %S, align 4, !dbg !8895
  br label %for.cond55, !dbg !8897

for.cond55:                                       ; preds = %for.inc71, %for.body46
  %56 = load i32, i32* %S, align 4, !dbg !8898
  %57 = load i32, i32* %numVerts, align 4, !dbg !8900
  %cmp56 = icmp slt i32 %56, %57, !dbg !8901
  br i1 %cmp56, label %for.body58, label %for.end73, !dbg !8902

for.body58:                                       ; preds = %for.cond55
  store i32 1, i32* %x, align 4, !dbg !8903
  br label %for.cond59, !dbg !8906

for.cond59:                                       ; preds = %for.inc68, %for.body58
  %58 = load i32, i32* %x, align 4, !dbg !8907
  %59 = load i32, i32* %gridSize, align 4, !dbg !8909
  %sub = sub nsw i32 %59, 1, !dbg !8910
  %cmp60 = icmp slt i32 %58, %sub, !dbg !8911
  br i1 %cmp60, label %for.body62, label %for.end70, !dbg !8912

for.body62:                                       ; preds = %for.cond59
  %60 = load [3 x float]*, [3 x float]** %cos.addr, align 8, !dbg !8913
  %61 = load i32, i32* %i, align 4, !dbg !8915
  %inc63 = add nsw i32 %61, 1, !dbg !8915
  store i32 %inc63, i32* %i, align 4, !dbg !8915
  %idxprom64 = sext i32 %61 to i64, !dbg !8913
  %arrayidx65 = getelementptr inbounds [3 x float], [3 x float]* %60, i64 %idxprom64, !dbg !8913
  %arraydecay66 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx65, i64 0, i64 0, !dbg !8913
  %62 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !8916
  %63 = load %struct.CCGFace*, %struct.CCGFace** %f47, align 8, !dbg !8917
  %64 = load i32, i32* %S, align 4, !dbg !8918
  %65 = load i32, i32* %x, align 4, !dbg !8919
  %call67 = call i8* @ccgSubSurf_getFaceGridEdgeData(%struct.CCGSubSurf* %62, %struct.CCGFace* %63, i32 %64, i32 %65), !dbg !8920
  %66 = bitcast i8* %call67 to float*, !dbg !8920
  call void @copy_v3_v3(float* %arraydecay66, float* %66), !dbg !8921
  br label %for.inc68, !dbg !8922

for.inc68:                                        ; preds = %for.body62
  %67 = load i32, i32* %x, align 4, !dbg !8923
  %inc69 = add nsw i32 %67, 1, !dbg !8923
  store i32 %inc69, i32* %x, align 4, !dbg !8923
  br label %for.cond59, !dbg !8924, !llvm.loop !8925

for.end70:                                        ; preds = %for.cond59
  br label %for.inc71, !dbg !8927

for.inc71:                                        ; preds = %for.end70
  %68 = load i32, i32* %S, align 4, !dbg !8928
  %inc72 = add nsw i32 %68, 1, !dbg !8928
  store i32 %inc72, i32* %S, align 4, !dbg !8928
  br label %for.cond55, !dbg !8929, !llvm.loop !8930

for.end73:                                        ; preds = %for.cond55
  store i32 0, i32* %S, align 4, !dbg !8932
  br label %for.cond74, !dbg !8934

for.cond74:                                       ; preds = %for.inc99, %for.end73
  %69 = load i32, i32* %S, align 4, !dbg !8935
  %70 = load i32, i32* %numVerts, align 4, !dbg !8937
  %cmp75 = icmp slt i32 %69, %70, !dbg !8938
  br i1 %cmp75, label %for.body77, label %for.end101, !dbg !8939

for.body77:                                       ; preds = %for.cond74
  store i32 1, i32* %y, align 4, !dbg !8940
  br label %for.cond78, !dbg !8943

for.cond78:                                       ; preds = %for.inc96, %for.body77
  %71 = load i32, i32* %y, align 4, !dbg !8944
  %72 = load i32, i32* %gridSize, align 4, !dbg !8946
  %sub79 = sub nsw i32 %72, 1, !dbg !8947
  %cmp80 = icmp slt i32 %71, %sub79, !dbg !8948
  br i1 %cmp80, label %for.body82, label %for.end98, !dbg !8949

for.body82:                                       ; preds = %for.cond78
  store i32 1, i32* %x, align 4, !dbg !8950
  br label %for.cond83, !dbg !8953

for.cond83:                                       ; preds = %for.inc93, %for.body82
  %73 = load i32, i32* %x, align 4, !dbg !8954
  %74 = load i32, i32* %gridSize, align 4, !dbg !8956
  %sub84 = sub nsw i32 %74, 1, !dbg !8957
  %cmp85 = icmp slt i32 %73, %sub84, !dbg !8958
  br i1 %cmp85, label %for.body87, label %for.end95, !dbg !8959

for.body87:                                       ; preds = %for.cond83
  %75 = load [3 x float]*, [3 x float]** %cos.addr, align 8, !dbg !8960
  %76 = load i32, i32* %i, align 4, !dbg !8962
  %inc88 = add nsw i32 %76, 1, !dbg !8962
  store i32 %inc88, i32* %i, align 4, !dbg !8962
  %idxprom89 = sext i32 %76 to i64, !dbg !8960
  %arrayidx90 = getelementptr inbounds [3 x float], [3 x float]* %75, i64 %idxprom89, !dbg !8960
  %arraydecay91 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx90, i64 0, i64 0, !dbg !8960
  %77 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !8963
  %78 = load %struct.CCGFace*, %struct.CCGFace** %f47, align 8, !dbg !8964
  %79 = load i32, i32* %S, align 4, !dbg !8965
  %80 = load i32, i32* %x, align 4, !dbg !8966
  %81 = load i32, i32* %y, align 4, !dbg !8967
  %call92 = call i8* @ccgSubSurf_getFaceGridData(%struct.CCGSubSurf* %77, %struct.CCGFace* %78, i32 %79, i32 %80, i32 %81), !dbg !8968
  %82 = bitcast i8* %call92 to float*, !dbg !8968
  call void @copy_v3_v3(float* %arraydecay91, float* %82), !dbg !8969
  br label %for.inc93, !dbg !8970

for.inc93:                                        ; preds = %for.body87
  %83 = load i32, i32* %x, align 4, !dbg !8971
  %inc94 = add nsw i32 %83, 1, !dbg !8971
  store i32 %inc94, i32* %x, align 4, !dbg !8971
  br label %for.cond83, !dbg !8972, !llvm.loop !8973

for.end95:                                        ; preds = %for.cond83
  br label %for.inc96, !dbg !8975

for.inc96:                                        ; preds = %for.end95
  %84 = load i32, i32* %y, align 4, !dbg !8976
  %inc97 = add nsw i32 %84, 1, !dbg !8976
  store i32 %inc97, i32* %y, align 4, !dbg !8976
  br label %for.cond78, !dbg !8977, !llvm.loop !8978

for.end98:                                        ; preds = %for.cond78
  br label %for.inc99, !dbg !8980

for.inc99:                                        ; preds = %for.end98
  %85 = load i32, i32* %S, align 4, !dbg !8981
  %inc100 = add nsw i32 %85, 1, !dbg !8981
  store i32 %inc100, i32* %S, align 4, !dbg !8981
  br label %for.cond74, !dbg !8982, !llvm.loop !8983

for.end101:                                       ; preds = %for.cond74
  br label %for.inc102, !dbg !8985

for.inc102:                                       ; preds = %for.end101
  %86 = load i32, i32* %index, align 4, !dbg !8986
  %inc103 = add nsw i32 %86, 1, !dbg !8986
  store i32 %inc103, i32* %index, align 4, !dbg !8986
  br label %for.cond44, !dbg !8987, !llvm.loop !8988

for.end104:                                       ; preds = %for.cond44
  store i32 0, i32* %index, align 4, !dbg !8990
  br label %for.cond105, !dbg !8992

for.cond105:                                      ; preds = %for.inc126, %for.end104
  %87 = load i32, i32* %index, align 4, !dbg !8993
  %88 = load i32, i32* %totedge, align 4, !dbg !8995
  %cmp106 = icmp slt i32 %87, %88, !dbg !8996
  br i1 %cmp106, label %for.body108, label %for.end128, !dbg !8997

for.body108:                                      ; preds = %for.cond105
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e109, metadata !8998, metadata !DIExpression()), !dbg !9000
  %89 = load %struct.CCGEdge**, %struct.CCGEdge*** %edgeMap2, align 8, !dbg !9001
  %90 = load i32, i32* %index, align 4, !dbg !9002
  %idxprom110 = sext i32 %90 to i64, !dbg !9001
  %arrayidx111 = getelementptr inbounds %struct.CCGEdge*, %struct.CCGEdge** %89, i64 %idxprom110, !dbg !9001
  %91 = load %struct.CCGEdge*, %struct.CCGEdge** %arrayidx111, align 8, !dbg !9001
  store %struct.CCGEdge* %91, %struct.CCGEdge** %e109, align 8, !dbg !9000
  call void @llvm.dbg.declare(metadata i32* %x112, metadata !9003, metadata !DIExpression()), !dbg !9004
  store i32 1, i32* %x112, align 4, !dbg !9005
  br label %for.cond113, !dbg !9007

for.cond113:                                      ; preds = %for.inc123, %for.body108
  %92 = load i32, i32* %x112, align 4, !dbg !9008
  %93 = load i32, i32* %edgeSize, align 4, !dbg !9010
  %sub114 = sub nsw i32 %93, 1, !dbg !9011
  %cmp115 = icmp slt i32 %92, %sub114, !dbg !9012
  br i1 %cmp115, label %for.body117, label %for.end125, !dbg !9013

for.body117:                                      ; preds = %for.cond113
  %94 = load [3 x float]*, [3 x float]** %cos.addr, align 8, !dbg !9014
  %95 = load i32, i32* %i, align 4, !dbg !9016
  %inc118 = add nsw i32 %95, 1, !dbg !9016
  store i32 %inc118, i32* %i, align 4, !dbg !9016
  %idxprom119 = sext i32 %95 to i64, !dbg !9014
  %arrayidx120 = getelementptr inbounds [3 x float], [3 x float]* %94, i64 %idxprom119, !dbg !9014
  %arraydecay121 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx120, i64 0, i64 0, !dbg !9014
  %96 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !9017
  %97 = load %struct.CCGEdge*, %struct.CCGEdge** %e109, align 8, !dbg !9018
  %98 = load i32, i32* %x112, align 4, !dbg !9019
  %call122 = call i8* @ccgSubSurf_getEdgeData(%struct.CCGSubSurf* %96, %struct.CCGEdge* %97, i32 %98), !dbg !9020
  %99 = bitcast i8* %call122 to float*, !dbg !9020
  call void @copy_v3_v3(float* %arraydecay121, float* %99), !dbg !9021
  br label %for.inc123, !dbg !9022

for.inc123:                                       ; preds = %for.body117
  %100 = load i32, i32* %x112, align 4, !dbg !9023
  %inc124 = add nsw i32 %100, 1, !dbg !9023
  store i32 %inc124, i32* %x112, align 4, !dbg !9023
  br label %for.cond113, !dbg !9024, !llvm.loop !9025

for.end125:                                       ; preds = %for.cond113
  br label %for.inc126, !dbg !9027

for.inc126:                                       ; preds = %for.end125
  %101 = load i32, i32* %index, align 4, !dbg !9028
  %inc127 = add nsw i32 %101, 1, !dbg !9028
  store i32 %inc127, i32* %index, align 4, !dbg !9028
  br label %for.cond105, !dbg !9029, !llvm.loop !9030

for.end128:                                       ; preds = %for.cond105
  store i32 0, i32* %index, align 4, !dbg !9032
  br label %for.cond129, !dbg !9034

for.cond129:                                      ; preds = %for.inc141, %for.end128
  %102 = load i32, i32* %index, align 4, !dbg !9035
  %103 = load i32, i32* %totvert, align 4, !dbg !9037
  %cmp130 = icmp slt i32 %102, %103, !dbg !9038
  br i1 %cmp130, label %for.body132, label %for.end143, !dbg !9039

for.body132:                                      ; preds = %for.cond129
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v133, metadata !9040, metadata !DIExpression()), !dbg !9042
  %104 = load %struct.CCGVert**, %struct.CCGVert*** %vertMap2, align 8, !dbg !9043
  %105 = load i32, i32* %index, align 4, !dbg !9044
  %idxprom134 = sext i32 %105 to i64, !dbg !9043
  %arrayidx135 = getelementptr inbounds %struct.CCGVert*, %struct.CCGVert** %104, i64 %idxprom134, !dbg !9043
  %106 = load %struct.CCGVert*, %struct.CCGVert** %arrayidx135, align 8, !dbg !9043
  store %struct.CCGVert* %106, %struct.CCGVert** %v133, align 8, !dbg !9042
  %107 = load [3 x float]*, [3 x float]** %cos.addr, align 8, !dbg !9045
  %108 = load i32, i32* %i, align 4, !dbg !9046
  %inc136 = add nsw i32 %108, 1, !dbg !9046
  store i32 %inc136, i32* %i, align 4, !dbg !9046
  %idxprom137 = sext i32 %108 to i64, !dbg !9045
  %arrayidx138 = getelementptr inbounds [3 x float], [3 x float]* %107, i64 %idxprom137, !dbg !9045
  %arraydecay139 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx138, i64 0, i64 0, !dbg !9045
  %109 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !9047
  %110 = load %struct.CCGVert*, %struct.CCGVert** %v133, align 8, !dbg !9048
  %call140 = call i8* @ccgSubSurf_getVertData(%struct.CCGSubSurf* %109, %struct.CCGVert* %110), !dbg !9049
  %111 = bitcast i8* %call140 to float*, !dbg !9049
  call void @copy_v3_v3(float* %arraydecay139, float* %111), !dbg !9050
  br label %for.inc141, !dbg !9051

for.inc141:                                       ; preds = %for.body132
  %112 = load i32, i32* %index, align 4, !dbg !9052
  %inc142 = add nsw i32 %112, 1, !dbg !9052
  store i32 %inc142, i32* %index, align 4, !dbg !9052
  br label %for.cond129, !dbg !9053, !llvm.loop !9054

for.end143:                                       ; preds = %for.cond129
  %113 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !9056
  %114 = load %struct.CCGVert**, %struct.CCGVert*** %vertMap2, align 8, !dbg !9057
  %115 = bitcast %struct.CCGVert** %114 to i8*, !dbg !9057
  call void %113(i8* %115), !dbg !9056
  %116 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !9058
  %117 = load %struct.CCGEdge**, %struct.CCGEdge*** %edgeMap2, align 8, !dbg !9059
  %118 = bitcast %struct.CCGEdge** %117 to i8*, !dbg !9059
  call void %116(i8* %118), !dbg !9058
  %119 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !9060
  %120 = load %struct.CCGFace**, %struct.CCGFace*** %faceMap2, align 8, !dbg !9061
  %121 = bitcast %struct.CCGFace** %120 to i8*, !dbg !9061
  call void %119(i8* %121), !dbg !9060
  ret void, !dbg !9062
}

; Function Attrs: noinline nounwind uwtable
define internal void @ccgDM_foreachMappedVert(%struct.DerivedMesh* %dm, void (i8*, i32, float*, float*, i16*)* %func, i8* %userData, i32 %flag) #0 !dbg !9063 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %func.addr = alloca void (i8*, i32, float*, float*, i16*)*, align 8
  %userData.addr = alloca i8*, align 8
  %flag.addr = alloca i32, align 4
  %ccgdm = alloca %struct.CCGDerivedMesh*, align 8
  %vi = alloca %struct.CCGVertIterator*, align 8
  %key = alloca %struct.CCGKey, align 4
  %v = alloca %struct.CCGVert*, align 8
  %index = alloca i32, align 4
  %vd = alloca %struct.CCGElem*, align 8
  %no = alloca float*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !9064, metadata !DIExpression()), !dbg !9065
  store void (i8*, i32, float*, float*, i16*)* %func, void (i8*, i32, float*, float*, i16*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i32, float*, float*, i16*)** %func.addr, metadata !9066, metadata !DIExpression()), !dbg !9067
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !9068, metadata !DIExpression()), !dbg !9069
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !9070, metadata !DIExpression()), !dbg !9071
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm, metadata !9072, metadata !DIExpression()), !dbg !9073
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9074
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CCGDerivedMesh*, !dbg !9075
  store %struct.CCGDerivedMesh* %1, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !9073
  call void @llvm.dbg.declare(metadata %struct.CCGVertIterator** %vi, metadata !9076, metadata !DIExpression()), !dbg !9077
  call void @llvm.dbg.declare(metadata %struct.CCGKey* %key, metadata !9078, metadata !DIExpression()), !dbg !9079
  %2 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !9080
  %ss = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %2, i32 0, i32 1, !dbg !9081
  %3 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !9081
  call void @CCG_key_top_level(%struct.CCGKey* %key, %struct.CCGSubSurf* %3), !dbg !9082
  %4 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !9083
  %ss1 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %4, i32 0, i32 1, !dbg !9085
  %5 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss1, align 8, !dbg !9085
  %call = call %struct.CCGVertIterator* @ccgSubSurf_getVertIterator(%struct.CCGSubSurf* %5), !dbg !9086
  store %struct.CCGVertIterator* %call, %struct.CCGVertIterator** %vi, align 8, !dbg !9087
  br label %for.cond, !dbg !9088

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load %struct.CCGVertIterator*, %struct.CCGVertIterator** %vi, align 8, !dbg !9089
  %call2 = call i32 @ccgVertIterator_isStopped(%struct.CCGVertIterator* %6), !dbg !9091
  %tobool = icmp ne i32 %call2, 0, !dbg !9092
  %lnot = xor i1 %tobool, true, !dbg !9092
  br i1 %lnot, label %for.body, label %for.end, !dbg !9093

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v, metadata !9094, metadata !DIExpression()), !dbg !9096
  %7 = load %struct.CCGVertIterator*, %struct.CCGVertIterator** %vi, align 8, !dbg !9097
  %call3 = call %struct.CCGVert* @ccgVertIterator_getCurrent(%struct.CCGVertIterator* %7), !dbg !9098
  store %struct.CCGVert* %call3, %struct.CCGVert** %v, align 8, !dbg !9096
  call void @llvm.dbg.declare(metadata i32* %index, metadata !9099, metadata !DIExpression()), !dbg !9100
  %8 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !9101
  %ss4 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %8, i32 0, i32 1, !dbg !9102
  %9 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss4, align 8, !dbg !9102
  %10 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !9103
  %call5 = call i32 @ccgDM_getVertMapIndex(%struct.CCGSubSurf* %9, %struct.CCGVert* %10), !dbg !9104
  store i32 %call5, i32* %index, align 4, !dbg !9100
  %11 = load i32, i32* %index, align 4, !dbg !9105
  %cmp = icmp ne i32 %11, -1, !dbg !9107
  br i1 %cmp, label %if.then, label %if.end, !dbg !9108

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %vd, metadata !9109, metadata !DIExpression()), !dbg !9111
  %12 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !9112
  %ss6 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %12, i32 0, i32 1, !dbg !9113
  %13 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss6, align 8, !dbg !9113
  %14 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !9114
  %call7 = call i8* @ccgSubSurf_getVertData(%struct.CCGSubSurf* %13, %struct.CCGVert* %14), !dbg !9115
  %15 = bitcast i8* %call7 to %struct.CCGElem*, !dbg !9115
  store %struct.CCGElem* %15, %struct.CCGElem** %vd, align 8, !dbg !9111
  call void @llvm.dbg.declare(metadata float** %no, metadata !9116, metadata !DIExpression()), !dbg !9117
  %16 = load i32, i32* %flag.addr, align 4, !dbg !9118
  %and = and i32 %16, 1, !dbg !9119
  %tobool8 = icmp ne i32 %and, 0, !dbg !9119
  br i1 %tobool8, label %cond.true, label %cond.false, !dbg !9120

cond.true:                                        ; preds = %if.then
  %17 = load %struct.CCGElem*, %struct.CCGElem** %vd, align 8, !dbg !9121
  %call9 = call float* @CCG_elem_no(%struct.CCGKey* %key, %struct.CCGElem* %17), !dbg !9122
  br label %cond.end, !dbg !9120

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !9120

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float* [ %call9, %cond.true ], [ null, %cond.false ], !dbg !9120
  store float* %cond, float** %no, align 8, !dbg !9117
  %18 = load void (i8*, i32, float*, float*, i16*)*, void (i8*, i32, float*, float*, i16*)** %func.addr, align 8, !dbg !9123
  %19 = load i8*, i8** %userData.addr, align 8, !dbg !9124
  %20 = load i32, i32* %index, align 4, !dbg !9125
  %21 = load %struct.CCGElem*, %struct.CCGElem** %vd, align 8, !dbg !9126
  %call10 = call float* @CCG_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %21), !dbg !9127
  %22 = load float*, float** %no, align 8, !dbg !9128
  call void %18(i8* %19, i32 %20, float* %call10, float* %22, i16* null), !dbg !9123
  br label %if.end, !dbg !9129

if.end:                                           ; preds = %cond.end, %for.body
  br label %for.inc, !dbg !9130

for.inc:                                          ; preds = %if.end
  %23 = load %struct.CCGVertIterator*, %struct.CCGVertIterator** %vi, align 8, !dbg !9131
  call void @ccgVertIterator_next(%struct.CCGVertIterator* %23), !dbg !9132
  br label %for.cond, !dbg !9133, !llvm.loop !9134

for.end:                                          ; preds = %for.cond
  %24 = load %struct.CCGVertIterator*, %struct.CCGVertIterator** %vi, align 8, !dbg !9136
  call void @ccgVertIterator_free(%struct.CCGVertIterator* %24), !dbg !9137
  ret void, !dbg !9138
}

; Function Attrs: noinline nounwind uwtable
define internal void @ccgDM_foreachMappedEdge(%struct.DerivedMesh* %dm, void (i8*, i32, float*, float*)* %func, i8* %userData) #0 !dbg !9139 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %func.addr = alloca void (i8*, i32, float*, float*)*, align 8
  %userData.addr = alloca i8*, align 8
  %ccgdm = alloca %struct.CCGDerivedMesh*, align 8
  %ss = alloca %struct.CCGSubSurf*, align 8
  %ei = alloca %struct.CCGEdgeIterator*, align 8
  %key = alloca %struct.CCGKey, align 4
  %i = alloca i32, align 4
  %edgeSize = alloca i32, align 4
  %e = alloca %struct.CCGEdge*, align 8
  %index = alloca i32, align 4
  %edgeData = alloca %struct.CCGElem*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !9140, metadata !DIExpression()), !dbg !9141
  store void (i8*, i32, float*, float*)* %func, void (i8*, i32, float*, float*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i32, float*, float*)** %func.addr, metadata !9142, metadata !DIExpression()), !dbg !9143
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !9144, metadata !DIExpression()), !dbg !9145
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm, metadata !9146, metadata !DIExpression()), !dbg !9147
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9148
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CCGDerivedMesh*, !dbg !9149
  store %struct.CCGDerivedMesh* %1, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !9147
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss, metadata !9150, metadata !DIExpression()), !dbg !9151
  %2 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !9152
  %ss1 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %2, i32 0, i32 1, !dbg !9153
  %3 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss1, align 8, !dbg !9153
  store %struct.CCGSubSurf* %3, %struct.CCGSubSurf** %ss, align 8, !dbg !9151
  call void @llvm.dbg.declare(metadata %struct.CCGEdgeIterator** %ei, metadata !9154, metadata !DIExpression()), !dbg !9155
  call void @llvm.dbg.declare(metadata %struct.CCGKey* %key, metadata !9156, metadata !DIExpression()), !dbg !9157
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9158, metadata !DIExpression()), !dbg !9159
  call void @llvm.dbg.declare(metadata i32* %edgeSize, metadata !9160, metadata !DIExpression()), !dbg !9161
  %4 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !9162
  %call = call i32 @ccgSubSurf_getEdgeSize(%struct.CCGSubSurf* %4), !dbg !9163
  store i32 %call, i32* %edgeSize, align 4, !dbg !9161
  %5 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !9164
  call void @CCG_key_top_level(%struct.CCGKey* %key, %struct.CCGSubSurf* %5), !dbg !9165
  %6 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !9166
  %call2 = call %struct.CCGEdgeIterator* @ccgSubSurf_getEdgeIterator(%struct.CCGSubSurf* %6), !dbg !9168
  store %struct.CCGEdgeIterator* %call2, %struct.CCGEdgeIterator** %ei, align 8, !dbg !9169
  br label %for.cond, !dbg !9170

for.cond:                                         ; preds = %for.inc12, %entry
  %7 = load %struct.CCGEdgeIterator*, %struct.CCGEdgeIterator** %ei, align 8, !dbg !9171
  %call3 = call i32 @ccgEdgeIterator_isStopped(%struct.CCGEdgeIterator* %7), !dbg !9173
  %tobool = icmp ne i32 %call3, 0, !dbg !9174
  %lnot = xor i1 %tobool, true, !dbg !9174
  br i1 %lnot, label %for.body, label %for.end13, !dbg !9175

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e, metadata !9176, metadata !DIExpression()), !dbg !9178
  %8 = load %struct.CCGEdgeIterator*, %struct.CCGEdgeIterator** %ei, align 8, !dbg !9179
  %call4 = call %struct.CCGEdge* @ccgEdgeIterator_getCurrent(%struct.CCGEdgeIterator* %8), !dbg !9180
  store %struct.CCGEdge* %call4, %struct.CCGEdge** %e, align 8, !dbg !9178
  call void @llvm.dbg.declare(metadata i32* %index, metadata !9181, metadata !DIExpression()), !dbg !9182
  %9 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !9183
  %10 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !9184
  %call5 = call i32 @ccgDM_getEdgeMapIndex(%struct.CCGSubSurf* %9, %struct.CCGEdge* %10), !dbg !9185
  store i32 %call5, i32* %index, align 4, !dbg !9182
  %11 = load i32, i32* %index, align 4, !dbg !9186
  %cmp = icmp ne i32 %11, -1, !dbg !9188
  br i1 %cmp, label %if.then, label %if.end, !dbg !9189

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %edgeData, metadata !9190, metadata !DIExpression()), !dbg !9192
  %12 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !9193
  %13 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !9194
  %call6 = call i8* @ccgSubSurf_getEdgeDataArray(%struct.CCGSubSurf* %12, %struct.CCGEdge* %13), !dbg !9195
  %14 = bitcast i8* %call6 to %struct.CCGElem*, !dbg !9195
  store %struct.CCGElem* %14, %struct.CCGElem** %edgeData, align 8, !dbg !9192
  store i32 0, i32* %i, align 4, !dbg !9196
  br label %for.cond7, !dbg !9198

for.cond7:                                        ; preds = %for.inc, %if.then
  %15 = load i32, i32* %i, align 4, !dbg !9199
  %16 = load i32, i32* %edgeSize, align 4, !dbg !9201
  %sub = sub nsw i32 %16, 1, !dbg !9202
  %cmp8 = icmp slt i32 %15, %sub, !dbg !9203
  br i1 %cmp8, label %for.body9, label %for.end, !dbg !9204

for.body9:                                        ; preds = %for.cond7
  %17 = load void (i8*, i32, float*, float*)*, void (i8*, i32, float*, float*)** %func.addr, align 8, !dbg !9205
  %18 = load i8*, i8** %userData.addr, align 8, !dbg !9207
  %19 = load i32, i32* %index, align 4, !dbg !9208
  %20 = load %struct.CCGElem*, %struct.CCGElem** %edgeData, align 8, !dbg !9209
  %21 = load i32, i32* %i, align 4, !dbg !9210
  %call10 = call float* @CCG_elem_offset_co(%struct.CCGKey* %key, %struct.CCGElem* %20, i32 %21), !dbg !9211
  %22 = load %struct.CCGElem*, %struct.CCGElem** %edgeData, align 8, !dbg !9212
  %23 = load i32, i32* %i, align 4, !dbg !9213
  %add = add nsw i32 %23, 1, !dbg !9214
  %call11 = call float* @CCG_elem_offset_co(%struct.CCGKey* %key, %struct.CCGElem* %22, i32 %add), !dbg !9215
  call void %17(i8* %18, i32 %19, float* %call10, float* %call11), !dbg !9205
  br label %for.inc, !dbg !9216

for.inc:                                          ; preds = %for.body9
  %24 = load i32, i32* %i, align 4, !dbg !9217
  %inc = add nsw i32 %24, 1, !dbg !9217
  store i32 %inc, i32* %i, align 4, !dbg !9217
  br label %for.cond7, !dbg !9218, !llvm.loop !9219

for.end:                                          ; preds = %for.cond7
  br label %if.end, !dbg !9221

if.end:                                           ; preds = %for.end, %for.body
  br label %for.inc12, !dbg !9222

for.inc12:                                        ; preds = %if.end
  %25 = load %struct.CCGEdgeIterator*, %struct.CCGEdgeIterator** %ei, align 8, !dbg !9223
  call void @ccgEdgeIterator_next(%struct.CCGEdgeIterator* %25), !dbg !9224
  br label %for.cond, !dbg !9225, !llvm.loop !9226

for.end13:                                        ; preds = %for.cond
  %26 = load %struct.CCGEdgeIterator*, %struct.CCGEdgeIterator** %ei, align 8, !dbg !9228
  call void @ccgEdgeIterator_free(%struct.CCGEdgeIterator* %26), !dbg !9229
  ret void, !dbg !9230
}

; Function Attrs: noinline nounwind uwtable
define internal void @ccgDM_foreachMappedLoop(%struct.DerivedMesh* %dm, void (i8*, i32, i32, float*, float*)* %func, i8* %userData, i32 %flag) #0 !dbg !9231 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %func.addr = alloca void (i8*, i32, i32, float*, float*)*, align 8
  %userData.addr = alloca i8*, align 8
  %flag.addr = alloca i32, align 4
  %lnors = alloca [3 x float]*, align 8
  %mv = alloca %struct.MVert*, align 8
  %ml = alloca %struct.MLoop*, align 8
  %mp = alloca %struct.MPoly*, align 8
  %v_index = alloca i32*, align 8
  %f_index = alloca i32*, align 8
  %p_idx = alloca i32, align 4
  %i = alloca i32, align 4
  %v_idx = alloca i32, align 4
  %f_idx = alloca i32, align 4
  %no = alloca float*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !9232, metadata !DIExpression()), !dbg !9233
  store void (i8*, i32, i32, float*, float*)* %func, void (i8*, i32, i32, float*, float*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i32, i32, float*, float*)** %func.addr, metadata !9234, metadata !DIExpression()), !dbg !9235
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !9236, metadata !DIExpression()), !dbg !9237
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !9238, metadata !DIExpression()), !dbg !9239
  call void @llvm.dbg.declare(metadata [3 x float]** %lnors, metadata !9240, metadata !DIExpression()), !dbg !9243
  %0 = load i32, i32* %flag.addr, align 4, !dbg !9244
  %and = and i32 %0, 1, !dbg !9245
  %tobool = icmp ne i32 %and, 0, !dbg !9245
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9246

cond.true:                                        ; preds = %entry
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9247
  %call = call i8* @DM_get_loop_data_layer(%struct.DerivedMesh* %1, i32 8), !dbg !9248
  br label %cond.end, !dbg !9246

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9246

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ null, %cond.false ], !dbg !9246
  %2 = bitcast i8* %cond to [3 x float]*, !dbg !9246
  store [3 x float]* %2, [3 x float]** %lnors, align 8, !dbg !9243
  call void @llvm.dbg.declare(metadata %struct.MVert** %mv, metadata !9249, metadata !DIExpression()), !dbg !9250
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9251
  %getVertArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %3, i32 0, i32 31, !dbg !9252
  %4 = load %struct.MVert* (%struct.DerivedMesh*)*, %struct.MVert* (%struct.DerivedMesh*)** %getVertArray, align 8, !dbg !9252
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9253
  %call1 = call %struct.MVert* %4(%struct.DerivedMesh* %5), !dbg !9251
  store %struct.MVert* %call1, %struct.MVert** %mv, align 8, !dbg !9250
  call void @llvm.dbg.declare(metadata %struct.MLoop** %ml, metadata !9254, metadata !DIExpression()), !dbg !9255
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9256
  %getLoopArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %6, i32 0, i32 34, !dbg !9257
  %7 = load %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)** %getLoopArray, align 8, !dbg !9257
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9258
  %call2 = call %struct.MLoop* %7(%struct.DerivedMesh* %8), !dbg !9256
  store %struct.MLoop* %call2, %struct.MLoop** %ml, align 8, !dbg !9255
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mp, metadata !9259, metadata !DIExpression()), !dbg !9260
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9261
  %getPolyArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %9, i32 0, i32 35, !dbg !9262
  %10 = load %struct.MPoly* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)** %getPolyArray, align 8, !dbg !9262
  %11 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9263
  %call3 = call %struct.MPoly* %10(%struct.DerivedMesh* %11), !dbg !9261
  store %struct.MPoly* %call3, %struct.MPoly** %mp, align 8, !dbg !9260
  call void @llvm.dbg.declare(metadata i32** %v_index, metadata !9264, metadata !DIExpression()), !dbg !9266
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9267
  %getVertDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %12, i32 0, i32 50, !dbg !9268
  %13 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getVertDataArray, align 8, !dbg !9268
  %14 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9269
  %call4 = call i8* %13(%struct.DerivedMesh* %14, i32 7), !dbg !9267
  %15 = bitcast i8* %call4 to i32*, !dbg !9267
  store i32* %15, i32** %v_index, align 8, !dbg !9266
  call void @llvm.dbg.declare(metadata i32** %f_index, metadata !9270, metadata !DIExpression()), !dbg !9271
  %16 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9272
  %getPolyDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %16, i32 0, i32 54, !dbg !9273
  %17 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getPolyDataArray, align 8, !dbg !9273
  %18 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9274
  %call5 = call i8* %17(%struct.DerivedMesh* %18, i32 7), !dbg !9272
  %19 = bitcast i8* %call5 to i32*, !dbg !9272
  store i32* %19, i32** %f_index, align 8, !dbg !9271
  call void @llvm.dbg.declare(metadata i32* %p_idx, metadata !9275, metadata !DIExpression()), !dbg !9276
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9277, metadata !DIExpression()), !dbg !9278
  store i32 0, i32* %p_idx, align 4, !dbg !9279
  br label %for.cond, !dbg !9281

for.cond:                                         ; preds = %for.inc34, %cond.end
  %20 = load i32, i32* %p_idx, align 4, !dbg !9282
  %21 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9284
  %numPolyData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %21, i32 0, i32 9, !dbg !9285
  %22 = load i32, i32* %numPolyData, align 8, !dbg !9285
  %cmp = icmp slt i32 %20, %22, !dbg !9286
  br i1 %cmp, label %for.body, label %for.end37, !dbg !9287

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !9288
  br label %for.cond6, !dbg !9291

for.cond6:                                        ; preds = %for.inc, %for.body
  %23 = load i32, i32* %i, align 4, !dbg !9292
  %24 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !9294
  %totloop = getelementptr inbounds %struct.MPoly, %struct.MPoly* %24, i32 0, i32 1, !dbg !9295
  %25 = load i32, i32* %totloop, align 4, !dbg !9295
  %cmp7 = icmp slt i32 %23, %25, !dbg !9296
  br i1 %cmp7, label %for.body8, label %for.end, !dbg !9297

for.body8:                                        ; preds = %for.cond6
  call void @llvm.dbg.declare(metadata i32* %v_idx, metadata !9298, metadata !DIExpression()), !dbg !9300
  %26 = load i32*, i32** %v_index, align 8, !dbg !9301
  %tobool9 = icmp ne i32* %26, null, !dbg !9301
  br i1 %tobool9, label %cond.true10, label %cond.false11, !dbg !9301

cond.true10:                                      ; preds = %for.body8
  %27 = load i32*, i32** %v_index, align 8, !dbg !9302
  %28 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !9303
  %v = getelementptr inbounds %struct.MLoop, %struct.MLoop* %28, i32 0, i32 0, !dbg !9304
  %29 = load i32, i32* %v, align 4, !dbg !9304
  %idxprom = zext i32 %29 to i64, !dbg !9302
  %arrayidx = getelementptr inbounds i32, i32* %27, i64 %idxprom, !dbg !9302
  %30 = load i32, i32* %arrayidx, align 4, !dbg !9302
  br label %cond.end13, !dbg !9301

cond.false11:                                     ; preds = %for.body8
  %31 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !9305
  %v12 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %31, i32 0, i32 0, !dbg !9306
  %32 = load i32, i32* %v12, align 4, !dbg !9306
  br label %cond.end13, !dbg !9301

cond.end13:                                       ; preds = %cond.false11, %cond.true10
  %cond14 = phi i32 [ %30, %cond.true10 ], [ %32, %cond.false11 ], !dbg !9301
  store i32 %cond14, i32* %v_idx, align 4, !dbg !9300
  call void @llvm.dbg.declare(metadata i32* %f_idx, metadata !9307, metadata !DIExpression()), !dbg !9308
  %33 = load i32*, i32** %f_index, align 8, !dbg !9309
  %tobool15 = icmp ne i32* %33, null, !dbg !9309
  br i1 %tobool15, label %cond.true16, label %cond.false19, !dbg !9309

cond.true16:                                      ; preds = %cond.end13
  %34 = load i32*, i32** %f_index, align 8, !dbg !9310
  %35 = load i32, i32* %p_idx, align 4, !dbg !9311
  %idxprom17 = sext i32 %35 to i64, !dbg !9310
  %arrayidx18 = getelementptr inbounds i32, i32* %34, i64 %idxprom17, !dbg !9310
  %36 = load i32, i32* %arrayidx18, align 4, !dbg !9310
  br label %cond.end20, !dbg !9309

cond.false19:                                     ; preds = %cond.end13
  %37 = load i32, i32* %p_idx, align 4, !dbg !9312
  br label %cond.end20, !dbg !9309

cond.end20:                                       ; preds = %cond.false19, %cond.true16
  %cond21 = phi i32 [ %36, %cond.true16 ], [ %37, %cond.false19 ], !dbg !9309
  store i32 %cond21, i32* %f_idx, align 4, !dbg !9308
  call void @llvm.dbg.declare(metadata float** %no, metadata !9313, metadata !DIExpression()), !dbg !9314
  %38 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !9315
  %tobool22 = icmp ne [3 x float]* %38, null, !dbg !9315
  br i1 %tobool22, label %cond.true23, label %cond.false24, !dbg !9315

cond.true23:                                      ; preds = %cond.end20
  %39 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !9316
  %incdec.ptr = getelementptr inbounds [3 x float], [3 x float]* %39, i32 1, !dbg !9316
  store [3 x float]* %incdec.ptr, [3 x float]** %lnors, align 8, !dbg !9316
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %39, i64 0, i64 0, !dbg !9317
  br label %cond.end25, !dbg !9315

cond.false24:                                     ; preds = %cond.end20
  br label %cond.end25, !dbg !9315

cond.end25:                                       ; preds = %cond.false24, %cond.true23
  %cond26 = phi float* [ %arraydecay, %cond.true23 ], [ null, %cond.false24 ], !dbg !9315
  store float* %cond26, float** %no, align 8, !dbg !9314
  %40 = load i32, i32* %v_idx, align 4, !dbg !9318
  %cmp27 = icmp eq i32 -1, %40, !dbg !9318
  br i1 %cmp27, label %if.end, label %lor.lhs.false, !dbg !9318

lor.lhs.false:                                    ; preds = %cond.end25
  %41 = load i32, i32* %f_idx, align 4, !dbg !9318
  %cmp28 = icmp eq i32 -1, %41, !dbg !9318
  br i1 %cmp28, label %if.end, label %if.then, !dbg !9320

if.then:                                          ; preds = %lor.lhs.false
  %42 = load void (i8*, i32, i32, float*, float*)*, void (i8*, i32, i32, float*, float*)** %func.addr, align 8, !dbg !9321
  %43 = load i8*, i8** %userData.addr, align 8, !dbg !9323
  %44 = load i32, i32* %v_idx, align 4, !dbg !9324
  %45 = load i32, i32* %f_idx, align 4, !dbg !9325
  %46 = load %struct.MVert*, %struct.MVert** %mv, align 8, !dbg !9326
  %47 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !9327
  %v29 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %47, i32 0, i32 0, !dbg !9328
  %48 = load i32, i32* %v29, align 4, !dbg !9328
  %idxprom30 = zext i32 %48 to i64, !dbg !9326
  %arrayidx31 = getelementptr inbounds %struct.MVert, %struct.MVert* %46, i64 %idxprom30, !dbg !9326
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %arrayidx31, i32 0, i32 0, !dbg !9329
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !9326
  %49 = load float*, float** %no, align 8, !dbg !9330
  call void %42(i8* %43, i32 %44, i32 %45, float* %arraydecay32, float* %49), !dbg !9321
  br label %if.end, !dbg !9331

if.end:                                           ; preds = %if.then, %lor.lhs.false, %cond.end25
  br label %for.inc, !dbg !9332

for.inc:                                          ; preds = %if.end
  %50 = load i32, i32* %i, align 4, !dbg !9333
  %inc = add nsw i32 %50, 1, !dbg !9333
  store i32 %inc, i32* %i, align 4, !dbg !9333
  %51 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !9334
  %incdec.ptr33 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %51, i32 1, !dbg !9334
  store %struct.MLoop* %incdec.ptr33, %struct.MLoop** %ml, align 8, !dbg !9334
  br label %for.cond6, !dbg !9335, !llvm.loop !9336

for.end:                                          ; preds = %for.cond6
  br label %for.inc34, !dbg !9338

for.inc34:                                        ; preds = %for.end
  %52 = load i32, i32* %p_idx, align 4, !dbg !9339
  %inc35 = add nsw i32 %52, 1, !dbg !9339
  store i32 %inc35, i32* %p_idx, align 4, !dbg !9339
  %53 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !9340
  %incdec.ptr36 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %53, i32 1, !dbg !9340
  store %struct.MPoly* %incdec.ptr36, %struct.MPoly** %mp, align 8, !dbg !9340
  br label %for.cond, !dbg !9341, !llvm.loop !9342

for.end37:                                        ; preds = %for.cond
  ret void, !dbg !9344
}

; Function Attrs: noinline nounwind uwtable
define internal void @ccgDM_foreachMappedFaceCenter(%struct.DerivedMesh* %dm, void (i8*, i32, float*, float*)* %func, i8* %userData, i32 %flag) #0 !dbg !9345 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %func.addr = alloca void (i8*, i32, float*, float*)*, align 8
  %userData.addr = alloca i8*, align 8
  %flag.addr = alloca i32, align 4
  %ccgdm = alloca %struct.CCGDerivedMesh*, align 8
  %ss = alloca %struct.CCGSubSurf*, align 8
  %key = alloca %struct.CCGKey, align 4
  %fi = alloca %struct.CCGFaceIterator*, align 8
  %f = alloca %struct.CCGFace*, align 8
  %index = alloca i32, align 4
  %vd = alloca %struct.CCGElem*, align 8
  %no = alloca float*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !9346, metadata !DIExpression()), !dbg !9347
  store void (i8*, i32, float*, float*)* %func, void (i8*, i32, float*, float*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i32, float*, float*)** %func.addr, metadata !9348, metadata !DIExpression()), !dbg !9349
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !9350, metadata !DIExpression()), !dbg !9351
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !9352, metadata !DIExpression()), !dbg !9353
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm, metadata !9354, metadata !DIExpression()), !dbg !9355
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9356
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CCGDerivedMesh*, !dbg !9357
  store %struct.CCGDerivedMesh* %1, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !9355
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss, metadata !9358, metadata !DIExpression()), !dbg !9359
  %2 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !9360
  %ss1 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %2, i32 0, i32 1, !dbg !9361
  %3 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss1, align 8, !dbg !9361
  store %struct.CCGSubSurf* %3, %struct.CCGSubSurf** %ss, align 8, !dbg !9359
  call void @llvm.dbg.declare(metadata %struct.CCGKey* %key, metadata !9362, metadata !DIExpression()), !dbg !9363
  call void @llvm.dbg.declare(metadata %struct.CCGFaceIterator** %fi, metadata !9364, metadata !DIExpression()), !dbg !9365
  %4 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !9366
  call void @CCG_key_top_level(%struct.CCGKey* %key, %struct.CCGSubSurf* %4), !dbg !9367
  %5 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !9368
  %call = call %struct.CCGFaceIterator* @ccgSubSurf_getFaceIterator(%struct.CCGSubSurf* %5), !dbg !9370
  store %struct.CCGFaceIterator* %call, %struct.CCGFaceIterator** %fi, align 8, !dbg !9371
  br label %for.cond, !dbg !9372

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load %struct.CCGFaceIterator*, %struct.CCGFaceIterator** %fi, align 8, !dbg !9373
  %call2 = call i32 @ccgFaceIterator_isStopped(%struct.CCGFaceIterator* %6), !dbg !9375
  %tobool = icmp ne i32 %call2, 0, !dbg !9376
  %lnot = xor i1 %tobool, true, !dbg !9376
  br i1 %lnot, label %for.body, label %for.end, !dbg !9377

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f, metadata !9378, metadata !DIExpression()), !dbg !9380
  %7 = load %struct.CCGFaceIterator*, %struct.CCGFaceIterator** %fi, align 8, !dbg !9381
  %call3 = call %struct.CCGFace* @ccgFaceIterator_getCurrent(%struct.CCGFaceIterator* %7), !dbg !9382
  store %struct.CCGFace* %call3, %struct.CCGFace** %f, align 8, !dbg !9380
  call void @llvm.dbg.declare(metadata i32* %index, metadata !9383, metadata !DIExpression()), !dbg !9384
  %8 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !9385
  %9 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !9386
  %call4 = call i32 @ccgDM_getFaceMapIndex(%struct.CCGSubSurf* %8, %struct.CCGFace* %9), !dbg !9387
  store i32 %call4, i32* %index, align 4, !dbg !9384
  %10 = load i32, i32* %index, align 4, !dbg !9388
  %cmp = icmp ne i32 %10, -1, !dbg !9390
  br i1 %cmp, label %if.then, label %if.end, !dbg !9391

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %vd, metadata !9392, metadata !DIExpression()), !dbg !9394
  %11 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !9395
  %12 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !9396
  %call5 = call i8* @ccgSubSurf_getFaceGridData(%struct.CCGSubSurf* %11, %struct.CCGFace* %12, i32 0, i32 0, i32 0), !dbg !9397
  %13 = bitcast i8* %call5 to %struct.CCGElem*, !dbg !9397
  store %struct.CCGElem* %13, %struct.CCGElem** %vd, align 8, !dbg !9394
  call void @llvm.dbg.declare(metadata float** %no, metadata !9398, metadata !DIExpression()), !dbg !9399
  %14 = load i32, i32* %flag.addr, align 4, !dbg !9400
  %and = and i32 %14, 1, !dbg !9401
  %tobool6 = icmp ne i32 %and, 0, !dbg !9401
  br i1 %tobool6, label %cond.true, label %cond.false, !dbg !9402

cond.true:                                        ; preds = %if.then
  %15 = load %struct.CCGElem*, %struct.CCGElem** %vd, align 8, !dbg !9403
  %call7 = call float* @CCG_elem_no(%struct.CCGKey* %key, %struct.CCGElem* %15), !dbg !9404
  br label %cond.end, !dbg !9402

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !9402

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float* [ %call7, %cond.true ], [ null, %cond.false ], !dbg !9402
  store float* %cond, float** %no, align 8, !dbg !9399
  %16 = load void (i8*, i32, float*, float*)*, void (i8*, i32, float*, float*)** %func.addr, align 8, !dbg !9405
  %17 = load i8*, i8** %userData.addr, align 8, !dbg !9406
  %18 = load i32, i32* %index, align 4, !dbg !9407
  %19 = load %struct.CCGElem*, %struct.CCGElem** %vd, align 8, !dbg !9408
  %call8 = call float* @CCG_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %19), !dbg !9409
  %20 = load float*, float** %no, align 8, !dbg !9410
  call void %16(i8* %17, i32 %18, float* %call8, float* %20), !dbg !9405
  br label %if.end, !dbg !9411

if.end:                                           ; preds = %cond.end, %for.body
  br label %for.inc, !dbg !9412

for.inc:                                          ; preds = %if.end
  %21 = load %struct.CCGFaceIterator*, %struct.CCGFaceIterator** %fi, align 8, !dbg !9413
  call void @ccgFaceIterator_next(%struct.CCGFaceIterator* %21), !dbg !9414
  br label %for.cond, !dbg !9415, !llvm.loop !9416

for.end:                                          ; preds = %for.cond
  %22 = load %struct.CCGFaceIterator*, %struct.CCGFaceIterator** %fi, align 8, !dbg !9418
  call void @ccgFaceIterator_free(%struct.CCGFaceIterator* %22), !dbg !9419
  ret void, !dbg !9420
}

; Function Attrs: noinline nounwind uwtable
define internal void @ccgDM_drawVerts(%struct.DerivedMesh* %dm) #0 !dbg !9421 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %ccgdm = alloca %struct.CCGDerivedMesh*, align 8
  %ss = alloca %struct.CCGSubSurf*, align 8
  %edgeSize = alloca i32, align 4
  %gridSize = alloca i32, align 4
  %vi = alloca %struct.CCGVertIterator*, align 8
  %ei = alloca %struct.CCGEdgeIterator*, align 8
  %fi = alloca %struct.CCGFaceIterator*, align 8
  %v = alloca %struct.CCGVert*, align 8
  %e = alloca %struct.CCGEdge*, align 8
  %x = alloca i32, align 4
  %f = alloca %struct.CCGFace*, align 8
  %x28 = alloca i32, align 4
  %y = alloca i32, align 4
  %S = alloca i32, align 4
  %numVerts = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !9422, metadata !DIExpression()), !dbg !9423
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm, metadata !9424, metadata !DIExpression()), !dbg !9425
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9426
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CCGDerivedMesh*, !dbg !9427
  store %struct.CCGDerivedMesh* %1, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !9425
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss, metadata !9428, metadata !DIExpression()), !dbg !9429
  %2 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !9430
  %ss1 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %2, i32 0, i32 1, !dbg !9431
  %3 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss1, align 8, !dbg !9431
  store %struct.CCGSubSurf* %3, %struct.CCGSubSurf** %ss, align 8, !dbg !9429
  call void @llvm.dbg.declare(metadata i32* %edgeSize, metadata !9432, metadata !DIExpression()), !dbg !9433
  %4 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !9434
  %call = call i32 @ccgSubSurf_getEdgeSize(%struct.CCGSubSurf* %4), !dbg !9435
  store i32 %call, i32* %edgeSize, align 4, !dbg !9433
  call void @llvm.dbg.declare(metadata i32* %gridSize, metadata !9436, metadata !DIExpression()), !dbg !9437
  %5 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !9438
  %call2 = call i32 @ccgSubSurf_getGridSize(%struct.CCGSubSurf* %5), !dbg !9439
  store i32 %call2, i32* %gridSize, align 4, !dbg !9437
  call void @llvm.dbg.declare(metadata %struct.CCGVertIterator** %vi, metadata !9440, metadata !DIExpression()), !dbg !9441
  call void @llvm.dbg.declare(metadata %struct.CCGEdgeIterator** %ei, metadata !9442, metadata !DIExpression()), !dbg !9443
  call void @llvm.dbg.declare(metadata %struct.CCGFaceIterator** %fi, metadata !9444, metadata !DIExpression()), !dbg !9445
  call void @glBegin(i32 0), !dbg !9446
  %6 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !9447
  %call3 = call %struct.CCGVertIterator* @ccgSubSurf_getVertIterator(%struct.CCGSubSurf* %6), !dbg !9449
  store %struct.CCGVertIterator* %call3, %struct.CCGVertIterator** %vi, align 8, !dbg !9450
  br label %for.cond, !dbg !9451

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load %struct.CCGVertIterator*, %struct.CCGVertIterator** %vi, align 8, !dbg !9452
  %call4 = call i32 @ccgVertIterator_isStopped(%struct.CCGVertIterator* %7), !dbg !9454
  %tobool = icmp ne i32 %call4, 0, !dbg !9455
  %lnot = xor i1 %tobool, true, !dbg !9455
  br i1 %lnot, label %for.body, label %for.end, !dbg !9456

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v, metadata !9457, metadata !DIExpression()), !dbg !9459
  %8 = load %struct.CCGVertIterator*, %struct.CCGVertIterator** %vi, align 8, !dbg !9460
  %call5 = call %struct.CCGVert* @ccgVertIterator_getCurrent(%struct.CCGVertIterator* %8), !dbg !9461
  store %struct.CCGVert* %call5, %struct.CCGVert** %v, align 8, !dbg !9459
  %9 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !9462
  %10 = load %struct.CCGVert*, %struct.CCGVert** %v, align 8, !dbg !9463
  %call6 = call i8* @ccgSubSurf_getVertData(%struct.CCGSubSurf* %9, %struct.CCGVert* %10), !dbg !9464
  %11 = bitcast i8* %call6 to float*, !dbg !9464
  call void @glVertex3fv(float* %11), !dbg !9465
  br label %for.inc, !dbg !9466

for.inc:                                          ; preds = %for.body
  %12 = load %struct.CCGVertIterator*, %struct.CCGVertIterator** %vi, align 8, !dbg !9467
  call void @ccgVertIterator_next(%struct.CCGVertIterator* %12), !dbg !9468
  br label %for.cond, !dbg !9469, !llvm.loop !9470

for.end:                                          ; preds = %for.cond
  %13 = load %struct.CCGVertIterator*, %struct.CCGVertIterator** %vi, align 8, !dbg !9472
  call void @ccgVertIterator_free(%struct.CCGVertIterator* %13), !dbg !9473
  %14 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !9474
  %call7 = call %struct.CCGEdgeIterator* @ccgSubSurf_getEdgeIterator(%struct.CCGSubSurf* %14), !dbg !9476
  store %struct.CCGEdgeIterator* %call7, %struct.CCGEdgeIterator** %ei, align 8, !dbg !9477
  br label %for.cond8, !dbg !9478

for.cond8:                                        ; preds = %for.inc19, %for.end
  %15 = load %struct.CCGEdgeIterator*, %struct.CCGEdgeIterator** %ei, align 8, !dbg !9479
  %call9 = call i32 @ccgEdgeIterator_isStopped(%struct.CCGEdgeIterator* %15), !dbg !9481
  %tobool10 = icmp ne i32 %call9, 0, !dbg !9482
  %lnot11 = xor i1 %tobool10, true, !dbg !9482
  br i1 %lnot11, label %for.body12, label %for.end20, !dbg !9483

for.body12:                                       ; preds = %for.cond8
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e, metadata !9484, metadata !DIExpression()), !dbg !9486
  %16 = load %struct.CCGEdgeIterator*, %struct.CCGEdgeIterator** %ei, align 8, !dbg !9487
  %call13 = call %struct.CCGEdge* @ccgEdgeIterator_getCurrent(%struct.CCGEdgeIterator* %16), !dbg !9488
  store %struct.CCGEdge* %call13, %struct.CCGEdge** %e, align 8, !dbg !9486
  call void @llvm.dbg.declare(metadata i32* %x, metadata !9489, metadata !DIExpression()), !dbg !9490
  store i32 1, i32* %x, align 4, !dbg !9491
  br label %for.cond14, !dbg !9493

for.cond14:                                       ; preds = %for.inc17, %for.body12
  %17 = load i32, i32* %x, align 4, !dbg !9494
  %18 = load i32, i32* %edgeSize, align 4, !dbg !9496
  %sub = sub nsw i32 %18, 1, !dbg !9497
  %cmp = icmp slt i32 %17, %sub, !dbg !9498
  br i1 %cmp, label %for.body15, label %for.end18, !dbg !9499

for.body15:                                       ; preds = %for.cond14
  %19 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !9500
  %20 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !9501
  %21 = load i32, i32* %x, align 4, !dbg !9502
  %call16 = call i8* @ccgSubSurf_getEdgeData(%struct.CCGSubSurf* %19, %struct.CCGEdge* %20, i32 %21), !dbg !9503
  %22 = bitcast i8* %call16 to float*, !dbg !9503
  call void @glVertex3fv(float* %22), !dbg !9504
  br label %for.inc17, !dbg !9504

for.inc17:                                        ; preds = %for.body15
  %23 = load i32, i32* %x, align 4, !dbg !9505
  %inc = add nsw i32 %23, 1, !dbg !9505
  store i32 %inc, i32* %x, align 4, !dbg !9505
  br label %for.cond14, !dbg !9506, !llvm.loop !9507

for.end18:                                        ; preds = %for.cond14
  br label %for.inc19, !dbg !9509

for.inc19:                                        ; preds = %for.end18
  %24 = load %struct.CCGEdgeIterator*, %struct.CCGEdgeIterator** %ei, align 8, !dbg !9510
  call void @ccgEdgeIterator_next(%struct.CCGEdgeIterator* %24), !dbg !9511
  br label %for.cond8, !dbg !9512, !llvm.loop !9513

for.end20:                                        ; preds = %for.cond8
  %25 = load %struct.CCGEdgeIterator*, %struct.CCGEdgeIterator** %ei, align 8, !dbg !9515
  call void @ccgEdgeIterator_free(%struct.CCGEdgeIterator* %25), !dbg !9516
  %26 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !9517
  %call21 = call %struct.CCGFaceIterator* @ccgSubSurf_getFaceIterator(%struct.CCGSubSurf* %26), !dbg !9519
  store %struct.CCGFaceIterator* %call21, %struct.CCGFaceIterator** %fi, align 8, !dbg !9520
  br label %for.cond22, !dbg !9521

for.cond22:                                       ; preds = %for.inc66, %for.end20
  %27 = load %struct.CCGFaceIterator*, %struct.CCGFaceIterator** %fi, align 8, !dbg !9522
  %call23 = call i32 @ccgFaceIterator_isStopped(%struct.CCGFaceIterator* %27), !dbg !9524
  %tobool24 = icmp ne i32 %call23, 0, !dbg !9525
  %lnot25 = xor i1 %tobool24, true, !dbg !9525
  br i1 %lnot25, label %for.body26, label %for.end67, !dbg !9526

for.body26:                                       ; preds = %for.cond22
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f, metadata !9527, metadata !DIExpression()), !dbg !9529
  %28 = load %struct.CCGFaceIterator*, %struct.CCGFaceIterator** %fi, align 8, !dbg !9530
  %call27 = call %struct.CCGFace* @ccgFaceIterator_getCurrent(%struct.CCGFaceIterator* %28), !dbg !9531
  store %struct.CCGFace* %call27, %struct.CCGFace** %f, align 8, !dbg !9529
  call void @llvm.dbg.declare(metadata i32* %x28, metadata !9532, metadata !DIExpression()), !dbg !9533
  call void @llvm.dbg.declare(metadata i32* %y, metadata !9534, metadata !DIExpression()), !dbg !9535
  call void @llvm.dbg.declare(metadata i32* %S, metadata !9536, metadata !DIExpression()), !dbg !9537
  call void @llvm.dbg.declare(metadata i32* %numVerts, metadata !9538, metadata !DIExpression()), !dbg !9539
  %29 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !9540
  %call29 = call i32 @ccgSubSurf_getFaceNumVerts(%struct.CCGFace* %29), !dbg !9541
  store i32 %call29, i32* %numVerts, align 4, !dbg !9539
  %30 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !9542
  %call30 = call i8* @ccgSubSurf_getFaceCenterData(%struct.CCGFace* %30), !dbg !9543
  %31 = bitcast i8* %call30 to float*, !dbg !9543
  call void @glVertex3fv(float* %31), !dbg !9544
  store i32 0, i32* %S, align 4, !dbg !9545
  br label %for.cond31, !dbg !9547

for.cond31:                                       ; preds = %for.inc42, %for.body26
  %32 = load i32, i32* %S, align 4, !dbg !9548
  %33 = load i32, i32* %numVerts, align 4, !dbg !9550
  %cmp32 = icmp slt i32 %32, %33, !dbg !9551
  br i1 %cmp32, label %for.body33, label %for.end44, !dbg !9552

for.body33:                                       ; preds = %for.cond31
  store i32 1, i32* %x28, align 4, !dbg !9553
  br label %for.cond34, !dbg !9555

for.cond34:                                       ; preds = %for.inc39, %for.body33
  %34 = load i32, i32* %x28, align 4, !dbg !9556
  %35 = load i32, i32* %gridSize, align 4, !dbg !9558
  %sub35 = sub nsw i32 %35, 1, !dbg !9559
  %cmp36 = icmp slt i32 %34, %sub35, !dbg !9560
  br i1 %cmp36, label %for.body37, label %for.end41, !dbg !9561

for.body37:                                       ; preds = %for.cond34
  %36 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !9562
  %37 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !9563
  %38 = load i32, i32* %S, align 4, !dbg !9564
  %39 = load i32, i32* %x28, align 4, !dbg !9565
  %call38 = call i8* @ccgSubSurf_getFaceGridEdgeData(%struct.CCGSubSurf* %36, %struct.CCGFace* %37, i32 %38, i32 %39), !dbg !9566
  %40 = bitcast i8* %call38 to float*, !dbg !9566
  call void @glVertex3fv(float* %40), !dbg !9567
  br label %for.inc39, !dbg !9567

for.inc39:                                        ; preds = %for.body37
  %41 = load i32, i32* %x28, align 4, !dbg !9568
  %inc40 = add nsw i32 %41, 1, !dbg !9568
  store i32 %inc40, i32* %x28, align 4, !dbg !9568
  br label %for.cond34, !dbg !9569, !llvm.loop !9570

for.end41:                                        ; preds = %for.cond34
  br label %for.inc42, !dbg !9571

for.inc42:                                        ; preds = %for.end41
  %42 = load i32, i32* %S, align 4, !dbg !9572
  %inc43 = add nsw i32 %42, 1, !dbg !9572
  store i32 %inc43, i32* %S, align 4, !dbg !9572
  br label %for.cond31, !dbg !9573, !llvm.loop !9574

for.end44:                                        ; preds = %for.cond31
  store i32 0, i32* %S, align 4, !dbg !9576
  br label %for.cond45, !dbg !9578

for.cond45:                                       ; preds = %for.inc63, %for.end44
  %43 = load i32, i32* %S, align 4, !dbg !9579
  %44 = load i32, i32* %numVerts, align 4, !dbg !9581
  %cmp46 = icmp slt i32 %43, %44, !dbg !9582
  br i1 %cmp46, label %for.body47, label %for.end65, !dbg !9583

for.body47:                                       ; preds = %for.cond45
  store i32 1, i32* %y, align 4, !dbg !9584
  br label %for.cond48, !dbg !9586

for.cond48:                                       ; preds = %for.inc60, %for.body47
  %45 = load i32, i32* %y, align 4, !dbg !9587
  %46 = load i32, i32* %gridSize, align 4, !dbg !9589
  %sub49 = sub nsw i32 %46, 1, !dbg !9590
  %cmp50 = icmp slt i32 %45, %sub49, !dbg !9591
  br i1 %cmp50, label %for.body51, label %for.end62, !dbg !9592

for.body51:                                       ; preds = %for.cond48
  store i32 1, i32* %x28, align 4, !dbg !9593
  br label %for.cond52, !dbg !9595

for.cond52:                                       ; preds = %for.inc57, %for.body51
  %47 = load i32, i32* %x28, align 4, !dbg !9596
  %48 = load i32, i32* %gridSize, align 4, !dbg !9598
  %sub53 = sub nsw i32 %48, 1, !dbg !9599
  %cmp54 = icmp slt i32 %47, %sub53, !dbg !9600
  br i1 %cmp54, label %for.body55, label %for.end59, !dbg !9601

for.body55:                                       ; preds = %for.cond52
  %49 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !9602
  %50 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !9603
  %51 = load i32, i32* %S, align 4, !dbg !9604
  %52 = load i32, i32* %x28, align 4, !dbg !9605
  %53 = load i32, i32* %y, align 4, !dbg !9606
  %call56 = call i8* @ccgSubSurf_getFaceGridData(%struct.CCGSubSurf* %49, %struct.CCGFace* %50, i32 %51, i32 %52, i32 %53), !dbg !9607
  %54 = bitcast i8* %call56 to float*, !dbg !9607
  call void @glVertex3fv(float* %54), !dbg !9608
  br label %for.inc57, !dbg !9608

for.inc57:                                        ; preds = %for.body55
  %55 = load i32, i32* %x28, align 4, !dbg !9609
  %inc58 = add nsw i32 %55, 1, !dbg !9609
  store i32 %inc58, i32* %x28, align 4, !dbg !9609
  br label %for.cond52, !dbg !9610, !llvm.loop !9611

for.end59:                                        ; preds = %for.cond52
  br label %for.inc60, !dbg !9612

for.inc60:                                        ; preds = %for.end59
  %56 = load i32, i32* %y, align 4, !dbg !9613
  %inc61 = add nsw i32 %56, 1, !dbg !9613
  store i32 %inc61, i32* %y, align 4, !dbg !9613
  br label %for.cond48, !dbg !9614, !llvm.loop !9615

for.end62:                                        ; preds = %for.cond48
  br label %for.inc63, !dbg !9616

for.inc63:                                        ; preds = %for.end62
  %57 = load i32, i32* %S, align 4, !dbg !9617
  %inc64 = add nsw i32 %57, 1, !dbg !9617
  store i32 %inc64, i32* %S, align 4, !dbg !9617
  br label %for.cond45, !dbg !9618, !llvm.loop !9619

for.end65:                                        ; preds = %for.cond45
  br label %for.inc66, !dbg !9621

for.inc66:                                        ; preds = %for.end65
  %58 = load %struct.CCGFaceIterator*, %struct.CCGFaceIterator** %fi, align 8, !dbg !9622
  call void @ccgFaceIterator_next(%struct.CCGFaceIterator* %58), !dbg !9623
  br label %for.cond22, !dbg !9624, !llvm.loop !9625

for.end67:                                        ; preds = %for.cond22
  %59 = load %struct.CCGFaceIterator*, %struct.CCGFaceIterator** %fi, align 8, !dbg !9627
  call void @ccgFaceIterator_free(%struct.CCGFaceIterator* %59), !dbg !9628
  call void @glEnd(), !dbg !9629
  ret void, !dbg !9630
}

; Function Attrs: noinline nounwind uwtable
define internal void @ccgDM_drawEdges(%struct.DerivedMesh* %dm, i8 zeroext %drawLooseEdges, i8 zeroext %drawAllEdges) #0 !dbg !9631 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %drawLooseEdges.addr = alloca i8, align 1
  %drawAllEdges.addr = alloca i8, align 1
  %ccgdm = alloca %struct.CCGDerivedMesh*, align 8
  %ss = alloca %struct.CCGSubSurf*, align 8
  %key = alloca %struct.CCGKey, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %edgeSize = alloca i32, align 4
  %totedge = alloca i32, align 4
  %gridSize = alloca i32, align 4
  %useAging = alloca i32, align 4
  %e = alloca %struct.CCGEdge*, align 8
  %edgeData = alloca %struct.CCGElem*, align 8
  %ageCol = alloca i32, align 4
  %totface = alloca i32, align 4
  %f = alloca %struct.CCGFace*, align 8
  %S = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %numVerts = alloca i32, align 4
  %faceGridData = alloca %struct.CCGElem*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !9632, metadata !DIExpression()), !dbg !9633
  store i8 %drawLooseEdges, i8* %drawLooseEdges.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %drawLooseEdges.addr, metadata !9634, metadata !DIExpression()), !dbg !9635
  store i8 %drawAllEdges, i8* %drawAllEdges.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %drawAllEdges.addr, metadata !9636, metadata !DIExpression()), !dbg !9637
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm, metadata !9638, metadata !DIExpression()), !dbg !9639
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9640
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CCGDerivedMesh*, !dbg !9641
  store %struct.CCGDerivedMesh* %1, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !9639
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss, metadata !9642, metadata !DIExpression()), !dbg !9643
  %2 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !9644
  %ss1 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %2, i32 0, i32 1, !dbg !9645
  %3 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss1, align 8, !dbg !9645
  store %struct.CCGSubSurf* %3, %struct.CCGSubSurf** %ss, align 8, !dbg !9643
  call void @llvm.dbg.declare(metadata %struct.CCGKey* %key, metadata !9646, metadata !DIExpression()), !dbg !9647
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9648, metadata !DIExpression()), !dbg !9649
  call void @llvm.dbg.declare(metadata i32* %j, metadata !9650, metadata !DIExpression()), !dbg !9651
  call void @llvm.dbg.declare(metadata i32* %edgeSize, metadata !9652, metadata !DIExpression()), !dbg !9653
  %4 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !9654
  %call = call i32 @ccgSubSurf_getEdgeSize(%struct.CCGSubSurf* %4), !dbg !9655
  store i32 %call, i32* %edgeSize, align 4, !dbg !9653
  call void @llvm.dbg.declare(metadata i32* %totedge, metadata !9656, metadata !DIExpression()), !dbg !9657
  %5 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !9658
  %call2 = call i32 @ccgSubSurf_getNumEdges(%struct.CCGSubSurf* %5), !dbg !9659
  store i32 %call2, i32* %totedge, align 4, !dbg !9657
  call void @llvm.dbg.declare(metadata i32* %gridSize, metadata !9660, metadata !DIExpression()), !dbg !9661
  %6 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !9662
  %call3 = call i32 @ccgSubSurf_getGridSize(%struct.CCGSubSurf* %6), !dbg !9663
  store i32 %call3, i32* %gridSize, align 4, !dbg !9661
  call void @llvm.dbg.declare(metadata i32* %useAging, metadata !9664, metadata !DIExpression()), !dbg !9665
  %7 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !9666
  call void @CCG_key_top_level(%struct.CCGKey* %key, %struct.CCGSubSurf* %7), !dbg !9667
  %8 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !9668
  call void @ccgdm_pbvh_update(%struct.CCGDerivedMesh* %8), !dbg !9669
  %9 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !9670
  call void @ccgSubSurf_getUseAgeCounts(%struct.CCGSubSurf* %9, i32* %useAging, i32* null, i32* null, i32* null), !dbg !9671
  store i32 0, i32* %j, align 4, !dbg !9672
  br label %for.cond, !dbg !9674

for.cond:                                         ; preds = %for.inc34, %entry
  %10 = load i32, i32* %j, align 4, !dbg !9675
  %11 = load i32, i32* %totedge, align 4, !dbg !9677
  %cmp = icmp slt i32 %10, %11, !dbg !9678
  br i1 %cmp, label %for.body, label %for.end36, !dbg !9679

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e, metadata !9680, metadata !DIExpression()), !dbg !9682
  %12 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !9683
  %edgeMap = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %12, i32 0, i32 6, !dbg !9684
  %13 = load %struct.anon.0*, %struct.anon.0** %edgeMap, align 8, !dbg !9684
  %14 = load i32, i32* %j, align 4, !dbg !9685
  %idxprom = sext i32 %14 to i64, !dbg !9683
  %arrayidx = getelementptr inbounds %struct.anon.0, %struct.anon.0* %13, i64 %idxprom, !dbg !9683
  %edge = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx, i32 0, i32 2, !dbg !9686
  %15 = load %struct.CCGEdge*, %struct.CCGEdge** %edge, align 8, !dbg !9686
  store %struct.CCGEdge* %15, %struct.CCGEdge** %e, align 8, !dbg !9682
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %edgeData, metadata !9687, metadata !DIExpression()), !dbg !9688
  %16 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !9689
  %17 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !9690
  %call4 = call i8* @ccgSubSurf_getEdgeDataArray(%struct.CCGSubSurf* %16, %struct.CCGEdge* %17), !dbg !9691
  %18 = bitcast i8* %call4 to %struct.CCGElem*, !dbg !9691
  store %struct.CCGElem* %18, %struct.CCGElem** %edgeData, align 8, !dbg !9688
  %19 = load i8, i8* %drawLooseEdges.addr, align 1, !dbg !9692
  %tobool = icmp ne i8 %19, 0, !dbg !9692
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !9694

land.lhs.true:                                    ; preds = %for.body
  %20 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !9695
  %call5 = call i32 @ccgSubSurf_getEdgeNumFaces(%struct.CCGEdge* %20), !dbg !9696
  %tobool6 = icmp ne i32 %call5, 0, !dbg !9696
  br i1 %tobool6, label %if.end, label %if.then, !dbg !9697

if.then:                                          ; preds = %land.lhs.true
  br label %for.inc34, !dbg !9698

if.end:                                           ; preds = %land.lhs.true, %for.body
  %21 = load i8, i8* %drawAllEdges.addr, align 1, !dbg !9699
  %tobool7 = icmp ne i8 %21, 0, !dbg !9699
  br i1 %tobool7, label %if.end16, label %land.lhs.true8, !dbg !9701

land.lhs.true8:                                   ; preds = %if.end
  %22 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !9702
  %edgeFlags = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %22, i32 0, i32 8, !dbg !9703
  %23 = load i16*, i16** %edgeFlags, align 8, !dbg !9703
  %tobool9 = icmp ne i16* %23, null, !dbg !9702
  br i1 %tobool9, label %land.lhs.true10, label %if.end16, !dbg !9704

land.lhs.true10:                                  ; preds = %land.lhs.true8
  %24 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !9705
  %edgeFlags11 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %24, i32 0, i32 8, !dbg !9706
  %25 = load i16*, i16** %edgeFlags11, align 8, !dbg !9706
  %26 = load i32, i32* %j, align 4, !dbg !9707
  %idxprom12 = sext i32 %26 to i64, !dbg !9705
  %arrayidx13 = getelementptr inbounds i16, i16* %25, i64 %idxprom12, !dbg !9705
  %27 = load i16, i16* %arrayidx13, align 2, !dbg !9705
  %conv = sext i16 %27 to i32, !dbg !9705
  %and = and i32 %conv, 2, !dbg !9708
  %tobool14 = icmp ne i32 %and, 0, !dbg !9708
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !9709

if.then15:                                        ; preds = %land.lhs.true10
  br label %for.inc34, !dbg !9710

if.end16:                                         ; preds = %land.lhs.true10, %land.lhs.true8, %if.end
  %28 = load i32, i32* %useAging, align 4, !dbg !9711
  %tobool17 = icmp ne i32 %28, 0, !dbg !9711
  br i1 %tobool17, label %land.lhs.true18, label %if.end26, !dbg !9713

land.lhs.true18:                                  ; preds = %if.end16
  %29 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 15), align 8, !dbg !9714
  %and19 = and i32 %29, 16, !dbg !9715
  %tobool20 = icmp ne i32 %and19, 0, !dbg !9715
  br i1 %tobool20, label %if.end26, label %if.then21, !dbg !9716

if.then21:                                        ; preds = %land.lhs.true18
  call void @llvm.dbg.declare(metadata i32* %ageCol, metadata !9717, metadata !DIExpression()), !dbg !9719
  %30 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !9720
  %31 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !9721
  %call22 = call i32 @ccgSubSurf_getEdgeAge(%struct.CCGSubSurf* %30, %struct.CCGEdge* %31), !dbg !9722
  %mul = mul nsw i32 %call22, 4, !dbg !9723
  %sub = sub nsw i32 255, %mul, !dbg !9724
  store i32 %sub, i32* %ageCol, align 4, !dbg !9719
  %32 = load i32, i32* %ageCol, align 4, !dbg !9725
  %cmp23 = icmp sgt i32 %32, 0, !dbg !9726
  br i1 %cmp23, label %cond.true, label %cond.false, !dbg !9725

cond.true:                                        ; preds = %if.then21
  %33 = load i32, i32* %ageCol, align 4, !dbg !9727
  br label %cond.end, !dbg !9725

cond.false:                                       ; preds = %if.then21
  br label %cond.end, !dbg !9725

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %33, %cond.true ], [ 0, %cond.false ], !dbg !9725
  %conv25 = trunc i32 %cond to i8, !dbg !9725
  call void @glColor3ub(i8 zeroext 0, i8 zeroext %conv25, i8 zeroext 0), !dbg !9728
  br label %if.end26, !dbg !9729

if.end26:                                         ; preds = %cond.end, %land.lhs.true18, %if.end16
  call void @glBegin(i32 3), !dbg !9730
  store i32 0, i32* %i, align 4, !dbg !9731
  br label %for.cond27, !dbg !9733

for.cond27:                                       ; preds = %for.inc, %if.end26
  %34 = load i32, i32* %i, align 4, !dbg !9734
  %35 = load i32, i32* %edgeSize, align 4, !dbg !9736
  %sub28 = sub nsw i32 %35, 1, !dbg !9737
  %cmp29 = icmp slt i32 %34, %sub28, !dbg !9738
  br i1 %cmp29, label %for.body31, label %for.end, !dbg !9739

for.body31:                                       ; preds = %for.cond27
  %36 = load %struct.CCGElem*, %struct.CCGElem** %edgeData, align 8, !dbg !9740
  %37 = load i32, i32* %i, align 4, !dbg !9742
  %call32 = call float* @CCG_elem_offset_co(%struct.CCGKey* %key, %struct.CCGElem* %36, i32 %37), !dbg !9743
  call void @glVertex3fv(float* %call32), !dbg !9744
  %38 = load %struct.CCGElem*, %struct.CCGElem** %edgeData, align 8, !dbg !9745
  %39 = load i32, i32* %i, align 4, !dbg !9746
  %add = add nsw i32 %39, 1, !dbg !9747
  %call33 = call float* @CCG_elem_offset_co(%struct.CCGKey* %key, %struct.CCGElem* %38, i32 %add), !dbg !9748
  call void @glVertex3fv(float* %call33), !dbg !9749
  br label %for.inc, !dbg !9750

for.inc:                                          ; preds = %for.body31
  %40 = load i32, i32* %i, align 4, !dbg !9751
  %inc = add nsw i32 %40, 1, !dbg !9751
  store i32 %inc, i32* %i, align 4, !dbg !9751
  br label %for.cond27, !dbg !9752, !llvm.loop !9753

for.end:                                          ; preds = %for.cond27
  call void @glEnd(), !dbg !9755
  br label %for.inc34, !dbg !9756

for.inc34:                                        ; preds = %for.end, %if.then15, %if.then
  %41 = load i32, i32* %j, align 4, !dbg !9757
  %inc35 = add nsw i32 %41, 1, !dbg !9757
  store i32 %inc35, i32* %j, align 4, !dbg !9757
  br label %for.cond, !dbg !9758, !llvm.loop !9759

for.end36:                                        ; preds = %for.cond
  %42 = load i32, i32* %useAging, align 4, !dbg !9761
  %tobool37 = icmp ne i32 %42, 0, !dbg !9761
  br i1 %tobool37, label %land.lhs.true38, label %if.end42, !dbg !9763

land.lhs.true38:                                  ; preds = %for.end36
  %43 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 15), align 8, !dbg !9764
  %and39 = and i32 %43, 16, !dbg !9765
  %tobool40 = icmp ne i32 %and39, 0, !dbg !9765
  br i1 %tobool40, label %if.end42, label %if.then41, !dbg !9766

if.then41:                                        ; preds = %land.lhs.true38
  call void @glColor3ub(i8 zeroext 0, i8 zeroext 0, i8 zeroext 0), !dbg !9767
  br label %if.end42, !dbg !9769

if.end42:                                         ; preds = %if.then41, %land.lhs.true38, %for.end36
  %44 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !9770
  %drawInteriorEdges = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %44, i32 0, i32 3, !dbg !9772
  %45 = load i32, i32* %drawInteriorEdges, align 4, !dbg !9772
  %tobool43 = icmp ne i32 %45, 0, !dbg !9770
  br i1 %tobool43, label %if.then44, label %if.end104, !dbg !9773

if.then44:                                        ; preds = %if.end42
  call void @llvm.dbg.declare(metadata i32* %totface, metadata !9774, metadata !DIExpression()), !dbg !9776
  %46 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !9777
  %call45 = call i32 @ccgSubSurf_getNumFaces(%struct.CCGSubSurf* %46), !dbg !9778
  store i32 %call45, i32* %totface, align 4, !dbg !9776
  store i32 0, i32* %j, align 4, !dbg !9779
  br label %for.cond46, !dbg !9781

for.cond46:                                       ; preds = %for.inc101, %if.then44
  %47 = load i32, i32* %j, align 4, !dbg !9782
  %48 = load i32, i32* %totface, align 4, !dbg !9784
  %cmp47 = icmp slt i32 %47, %48, !dbg !9785
  br i1 %cmp47, label %for.body49, label %for.end103, !dbg !9786

for.body49:                                       ; preds = %for.cond46
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f, metadata !9787, metadata !DIExpression()), !dbg !9789
  %49 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !9790
  %faceMap = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %49, i32 0, i32 7, !dbg !9791
  %50 = load %struct.anon.1*, %struct.anon.1** %faceMap, align 8, !dbg !9791
  %51 = load i32, i32* %j, align 4, !dbg !9792
  %idxprom50 = sext i32 %51 to i64, !dbg !9790
  %arrayidx51 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %50, i64 %idxprom50, !dbg !9790
  %face = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx51, i32 0, i32 3, !dbg !9793
  %52 = load %struct.CCGFace*, %struct.CCGFace** %face, align 8, !dbg !9793
  store %struct.CCGFace* %52, %struct.CCGFace** %f, align 8, !dbg !9789
  call void @llvm.dbg.declare(metadata i32* %S, metadata !9794, metadata !DIExpression()), !dbg !9795
  call void @llvm.dbg.declare(metadata i32* %x, metadata !9796, metadata !DIExpression()), !dbg !9797
  call void @llvm.dbg.declare(metadata i32* %y, metadata !9798, metadata !DIExpression()), !dbg !9799
  call void @llvm.dbg.declare(metadata i32* %numVerts, metadata !9800, metadata !DIExpression()), !dbg !9801
  %53 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !9802
  %call52 = call i32 @ccgSubSurf_getFaceNumVerts(%struct.CCGFace* %53), !dbg !9803
  store i32 %call52, i32* %numVerts, align 4, !dbg !9801
  store i32 0, i32* %S, align 4, !dbg !9804
  br label %for.cond53, !dbg !9806

for.cond53:                                       ; preds = %for.inc98, %for.body49
  %54 = load i32, i32* %S, align 4, !dbg !9807
  %55 = load i32, i32* %numVerts, align 4, !dbg !9809
  %cmp54 = icmp slt i32 %54, %55, !dbg !9810
  br i1 %cmp54, label %for.body56, label %for.end100, !dbg !9811

for.body56:                                       ; preds = %for.cond53
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %faceGridData, metadata !9812, metadata !DIExpression()), !dbg !9814
  %56 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !9815
  %57 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !9816
  %58 = load i32, i32* %S, align 4, !dbg !9817
  %call57 = call i8* @ccgSubSurf_getFaceGridDataArray(%struct.CCGSubSurf* %56, %struct.CCGFace* %57, i32 %58), !dbg !9818
  %59 = bitcast i8* %call57 to %struct.CCGElem*, !dbg !9818
  store %struct.CCGElem* %59, %struct.CCGElem** %faceGridData, align 8, !dbg !9814
  call void @glBegin(i32 3), !dbg !9819
  store i32 0, i32* %x, align 4, !dbg !9820
  br label %for.cond58, !dbg !9822

for.cond58:                                       ; preds = %for.inc63, %for.body56
  %60 = load i32, i32* %x, align 4, !dbg !9823
  %61 = load i32, i32* %gridSize, align 4, !dbg !9825
  %cmp59 = icmp slt i32 %60, %61, !dbg !9826
  br i1 %cmp59, label %for.body61, label %for.end65, !dbg !9827

for.body61:                                       ; preds = %for.cond58
  %62 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !9828
  %63 = load i32, i32* %x, align 4, !dbg !9829
  %call62 = call float* @CCG_elem_offset_co(%struct.CCGKey* %key, %struct.CCGElem* %62, i32 %63), !dbg !9830
  call void @glVertex3fv(float* %call62), !dbg !9831
  br label %for.inc63, !dbg !9831

for.inc63:                                        ; preds = %for.body61
  %64 = load i32, i32* %x, align 4, !dbg !9832
  %inc64 = add nsw i32 %64, 1, !dbg !9832
  store i32 %inc64, i32* %x, align 4, !dbg !9832
  br label %for.cond58, !dbg !9833, !llvm.loop !9834

for.end65:                                        ; preds = %for.cond58
  call void @glEnd(), !dbg !9836
  store i32 1, i32* %y, align 4, !dbg !9837
  br label %for.cond66, !dbg !9839

for.cond66:                                       ; preds = %for.inc79, %for.end65
  %65 = load i32, i32* %y, align 4, !dbg !9840
  %66 = load i32, i32* %gridSize, align 4, !dbg !9842
  %sub67 = sub nsw i32 %66, 1, !dbg !9843
  %cmp68 = icmp slt i32 %65, %sub67, !dbg !9844
  br i1 %cmp68, label %for.body70, label %for.end81, !dbg !9845

for.body70:                                       ; preds = %for.cond66
  call void @glBegin(i32 3), !dbg !9846
  store i32 0, i32* %x, align 4, !dbg !9848
  br label %for.cond71, !dbg !9850

for.cond71:                                       ; preds = %for.inc76, %for.body70
  %67 = load i32, i32* %x, align 4, !dbg !9851
  %68 = load i32, i32* %gridSize, align 4, !dbg !9853
  %cmp72 = icmp slt i32 %67, %68, !dbg !9854
  br i1 %cmp72, label %for.body74, label %for.end78, !dbg !9855

for.body74:                                       ; preds = %for.cond71
  %69 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !9856
  %70 = load i32, i32* %x, align 4, !dbg !9857
  %71 = load i32, i32* %y, align 4, !dbg !9858
  %call75 = call float* @CCG_grid_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %69, i32 %70, i32 %71), !dbg !9859
  call void @glVertex3fv(float* %call75), !dbg !9860
  br label %for.inc76, !dbg !9860

for.inc76:                                        ; preds = %for.body74
  %72 = load i32, i32* %x, align 4, !dbg !9861
  %inc77 = add nsw i32 %72, 1, !dbg !9861
  store i32 %inc77, i32* %x, align 4, !dbg !9861
  br label %for.cond71, !dbg !9862, !llvm.loop !9863

for.end78:                                        ; preds = %for.cond71
  call void @glEnd(), !dbg !9865
  br label %for.inc79, !dbg !9866

for.inc79:                                        ; preds = %for.end78
  %73 = load i32, i32* %y, align 4, !dbg !9867
  %inc80 = add nsw i32 %73, 1, !dbg !9867
  store i32 %inc80, i32* %y, align 4, !dbg !9867
  br label %for.cond66, !dbg !9868, !llvm.loop !9869

for.end81:                                        ; preds = %for.cond66
  store i32 1, i32* %x, align 4, !dbg !9871
  br label %for.cond82, !dbg !9873

for.cond82:                                       ; preds = %for.inc95, %for.end81
  %74 = load i32, i32* %x, align 4, !dbg !9874
  %75 = load i32, i32* %gridSize, align 4, !dbg !9876
  %sub83 = sub nsw i32 %75, 1, !dbg !9877
  %cmp84 = icmp slt i32 %74, %sub83, !dbg !9878
  br i1 %cmp84, label %for.body86, label %for.end97, !dbg !9879

for.body86:                                       ; preds = %for.cond82
  call void @glBegin(i32 3), !dbg !9880
  store i32 0, i32* %y, align 4, !dbg !9882
  br label %for.cond87, !dbg !9884

for.cond87:                                       ; preds = %for.inc92, %for.body86
  %76 = load i32, i32* %y, align 4, !dbg !9885
  %77 = load i32, i32* %gridSize, align 4, !dbg !9887
  %cmp88 = icmp slt i32 %76, %77, !dbg !9888
  br i1 %cmp88, label %for.body90, label %for.end94, !dbg !9889

for.body90:                                       ; preds = %for.cond87
  %78 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !9890
  %79 = load i32, i32* %x, align 4, !dbg !9891
  %80 = load i32, i32* %y, align 4, !dbg !9892
  %call91 = call float* @CCG_grid_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %78, i32 %79, i32 %80), !dbg !9893
  call void @glVertex3fv(float* %call91), !dbg !9894
  br label %for.inc92, !dbg !9894

for.inc92:                                        ; preds = %for.body90
  %81 = load i32, i32* %y, align 4, !dbg !9895
  %inc93 = add nsw i32 %81, 1, !dbg !9895
  store i32 %inc93, i32* %y, align 4, !dbg !9895
  br label %for.cond87, !dbg !9896, !llvm.loop !9897

for.end94:                                        ; preds = %for.cond87
  call void @glEnd(), !dbg !9899
  br label %for.inc95, !dbg !9900

for.inc95:                                        ; preds = %for.end94
  %82 = load i32, i32* %x, align 4, !dbg !9901
  %inc96 = add nsw i32 %82, 1, !dbg !9901
  store i32 %inc96, i32* %x, align 4, !dbg !9901
  br label %for.cond82, !dbg !9902, !llvm.loop !9903

for.end97:                                        ; preds = %for.cond82
  br label %for.inc98, !dbg !9905

for.inc98:                                        ; preds = %for.end97
  %83 = load i32, i32* %S, align 4, !dbg !9906
  %inc99 = add nsw i32 %83, 1, !dbg !9906
  store i32 %inc99, i32* %S, align 4, !dbg !9906
  br label %for.cond53, !dbg !9907, !llvm.loop !9908

for.end100:                                       ; preds = %for.cond53
  br label %for.inc101, !dbg !9910

for.inc101:                                       ; preds = %for.end100
  %84 = load i32, i32* %j, align 4, !dbg !9911
  %inc102 = add nsw i32 %84, 1, !dbg !9911
  store i32 %inc102, i32* %j, align 4, !dbg !9911
  br label %for.cond46, !dbg !9912, !llvm.loop !9913

for.end103:                                       ; preds = %for.cond46
  br label %if.end104, !dbg !9915

if.end104:                                        ; preds = %for.end103, %if.end42
  ret void, !dbg !9916
}

; Function Attrs: noinline nounwind uwtable
define internal void @ccgDM_drawLooseEdges(%struct.DerivedMesh* %dm) #0 !dbg !9917 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %ccgdm = alloca %struct.CCGDerivedMesh*, align 8
  %ss = alloca %struct.CCGSubSurf*, align 8
  %key = alloca %struct.CCGKey, align 4
  %totedge = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %edgeSize = alloca i32, align 4
  %e = alloca %struct.CCGEdge*, align 8
  %edgeData = alloca %struct.CCGElem*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !9918, metadata !DIExpression()), !dbg !9919
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm, metadata !9920, metadata !DIExpression()), !dbg !9921
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !9922
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CCGDerivedMesh*, !dbg !9923
  store %struct.CCGDerivedMesh* %1, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !9921
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss, metadata !9924, metadata !DIExpression()), !dbg !9925
  %2 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !9926
  %ss1 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %2, i32 0, i32 1, !dbg !9927
  %3 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss1, align 8, !dbg !9927
  store %struct.CCGSubSurf* %3, %struct.CCGSubSurf** %ss, align 8, !dbg !9925
  call void @llvm.dbg.declare(metadata %struct.CCGKey* %key, metadata !9928, metadata !DIExpression()), !dbg !9929
  call void @llvm.dbg.declare(metadata i32* %totedge, metadata !9930, metadata !DIExpression()), !dbg !9931
  %4 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !9932
  %call = call i32 @ccgSubSurf_getNumEdges(%struct.CCGSubSurf* %4), !dbg !9933
  store i32 %call, i32* %totedge, align 4, !dbg !9931
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9934, metadata !DIExpression()), !dbg !9935
  call void @llvm.dbg.declare(metadata i32* %j, metadata !9936, metadata !DIExpression()), !dbg !9937
  call void @llvm.dbg.declare(metadata i32* %edgeSize, metadata !9938, metadata !DIExpression()), !dbg !9939
  %5 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !9940
  %call2 = call i32 @ccgSubSurf_getEdgeSize(%struct.CCGSubSurf* %5), !dbg !9941
  store i32 %call2, i32* %edgeSize, align 4, !dbg !9939
  %6 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !9942
  call void @CCG_key_top_level(%struct.CCGKey* %key, %struct.CCGSubSurf* %6), !dbg !9943
  store i32 0, i32* %j, align 4, !dbg !9944
  br label %for.cond, !dbg !9946

for.cond:                                         ; preds = %for.inc10, %entry
  %7 = load i32, i32* %j, align 4, !dbg !9947
  %8 = load i32, i32* %totedge, align 4, !dbg !9949
  %cmp = icmp slt i32 %7, %8, !dbg !9950
  br i1 %cmp, label %for.body, label %for.end12, !dbg !9951

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e, metadata !9952, metadata !DIExpression()), !dbg !9954
  %9 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !9955
  %edgeMap = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %9, i32 0, i32 6, !dbg !9956
  %10 = load %struct.anon.0*, %struct.anon.0** %edgeMap, align 8, !dbg !9956
  %11 = load i32, i32* %j, align 4, !dbg !9957
  %idxprom = sext i32 %11 to i64, !dbg !9955
  %arrayidx = getelementptr inbounds %struct.anon.0, %struct.anon.0* %10, i64 %idxprom, !dbg !9955
  %edge = getelementptr inbounds %struct.anon.0, %struct.anon.0* %arrayidx, i32 0, i32 2, !dbg !9958
  %12 = load %struct.CCGEdge*, %struct.CCGEdge** %edge, align 8, !dbg !9958
  store %struct.CCGEdge* %12, %struct.CCGEdge** %e, align 8, !dbg !9954
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %edgeData, metadata !9959, metadata !DIExpression()), !dbg !9960
  %13 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !9961
  %14 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !9962
  %call3 = call i8* @ccgSubSurf_getEdgeDataArray(%struct.CCGSubSurf* %13, %struct.CCGEdge* %14), !dbg !9963
  %15 = bitcast i8* %call3 to %struct.CCGElem*, !dbg !9963
  store %struct.CCGElem* %15, %struct.CCGElem** %edgeData, align 8, !dbg !9960
  %16 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !9964
  %call4 = call i32 @ccgSubSurf_getEdgeNumFaces(%struct.CCGEdge* %16), !dbg !9966
  %tobool = icmp ne i32 %call4, 0, !dbg !9966
  br i1 %tobool, label %if.end, label %if.then, !dbg !9967

if.then:                                          ; preds = %for.body
  call void @glBegin(i32 3), !dbg !9968
  store i32 0, i32* %i, align 4, !dbg !9970
  br label %for.cond5, !dbg !9972

for.cond5:                                        ; preds = %for.inc, %if.then
  %17 = load i32, i32* %i, align 4, !dbg !9973
  %18 = load i32, i32* %edgeSize, align 4, !dbg !9975
  %sub = sub nsw i32 %18, 1, !dbg !9976
  %cmp6 = icmp slt i32 %17, %sub, !dbg !9977
  br i1 %cmp6, label %for.body7, label %for.end, !dbg !9978

for.body7:                                        ; preds = %for.cond5
  %19 = load %struct.CCGElem*, %struct.CCGElem** %edgeData, align 8, !dbg !9979
  %20 = load i32, i32* %i, align 4, !dbg !9981
  %call8 = call float* @CCG_elem_offset_co(%struct.CCGKey* %key, %struct.CCGElem* %19, i32 %20), !dbg !9982
  call void @glVertex3fv(float* %call8), !dbg !9983
  %21 = load %struct.CCGElem*, %struct.CCGElem** %edgeData, align 8, !dbg !9984
  %22 = load i32, i32* %i, align 4, !dbg !9985
  %add = add nsw i32 %22, 1, !dbg !9986
  %call9 = call float* @CCG_elem_offset_co(%struct.CCGKey* %key, %struct.CCGElem* %21, i32 %add), !dbg !9987
  call void @glVertex3fv(float* %call9), !dbg !9988
  br label %for.inc, !dbg !9989

for.inc:                                          ; preds = %for.body7
  %23 = load i32, i32* %i, align 4, !dbg !9990
  %inc = add nsw i32 %23, 1, !dbg !9990
  store i32 %inc, i32* %i, align 4, !dbg !9990
  br label %for.cond5, !dbg !9991, !llvm.loop !9992

for.end:                                          ; preds = %for.cond5
  call void @glEnd(), !dbg !9994
  br label %if.end, !dbg !9995

if.end:                                           ; preds = %for.end, %for.body
  br label %for.inc10, !dbg !9996

for.inc10:                                        ; preds = %if.end
  %24 = load i32, i32* %j, align 4, !dbg !9997
  %inc11 = add nsw i32 %24, 1, !dbg !9997
  store i32 %inc11, i32* %j, align 4, !dbg !9997
  br label %for.cond, !dbg !9998, !llvm.loop !9999

for.end12:                                        ; preds = %for.cond
  ret void, !dbg !10001
}

; Function Attrs: noinline nounwind uwtable
define internal void @ccgDM_drawFacesSolid(%struct.DerivedMesh* %dm, [4 x float]* %partial_redraw_planes, i8 zeroext %fast, i32 (i32, i8*)* %setMaterial) #0 !dbg !10002 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %partial_redraw_planes.addr = alloca [4 x float]*, align 8
  %fast.addr = alloca i8, align 1
  %setMaterial.addr = alloca i32 (i32, i8*)*, align 8
  %ccgdm = alloca %struct.CCGDerivedMesh*, align 8
  %ss = alloca %struct.CCGSubSurf*, align 8
  %key = alloca %struct.CCGKey, align 4
  %lnors = alloca [4 x [3 x i16]]*, align 8
  %gridSize = alloca i32, align 4
  %gridFaces = alloca i32, align 4
  %faceFlags = alloca %struct.DMFlagMat*, align 8
  %step = alloca i32, align 4
  %i = alloca i32, align 4
  %totface = alloca i32, align 4
  %drawcurrent = alloca i32, align 4
  %matnr = alloca i32, align 4
  %shademodel = alloca i32, align 4
  %f = alloca %struct.CCGFace*, align 8
  %S = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %numVerts = alloca i32, align 4
  %index = alloca i32, align 4
  %new_matnr = alloca i32, align 4
  %new_shademodel = alloca i32, align 4
  %ln = alloca [4 x [3 x i16]]*, align 8
  %faceGridData = alloca %struct.CCGElem*, align 8
  %a = alloca float*, align 8
  %b = alloca float*, align 8
  %c = alloca float*, align 8
  %d = alloca float*, align 8
  %a102 = alloca %struct.CCGElem*, align 8
  %b105 = alloca %struct.CCGElem*, align 8
  %a127 = alloca float*, align 8
  %b130 = alloca float*, align 8
  %c134 = alloca float*, align 8
  %d138 = alloca float*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !10003, metadata !DIExpression()), !dbg !10004
  store [4 x float]* %partial_redraw_planes, [4 x float]** %partial_redraw_planes.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %partial_redraw_planes.addr, metadata !10005, metadata !DIExpression()), !dbg !10006
  store i8 %fast, i8* %fast.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %fast.addr, metadata !10007, metadata !DIExpression()), !dbg !10008
  store i32 (i32, i8*)* %setMaterial, i32 (i32, i8*)** %setMaterial.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %setMaterial.addr, metadata !10009, metadata !DIExpression()), !dbg !10010
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm, metadata !10011, metadata !DIExpression()), !dbg !10012
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10013
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CCGDerivedMesh*, !dbg !10014
  store %struct.CCGDerivedMesh* %1, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !10012
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss, metadata !10015, metadata !DIExpression()), !dbg !10016
  %2 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !10017
  %ss1 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %2, i32 0, i32 1, !dbg !10018
  %3 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss1, align 8, !dbg !10018
  store %struct.CCGSubSurf* %3, %struct.CCGSubSurf** %ss, align 8, !dbg !10016
  call void @llvm.dbg.declare(metadata %struct.CCGKey* %key, metadata !10019, metadata !DIExpression()), !dbg !10020
  call void @llvm.dbg.declare(metadata [4 x [3 x i16]]** %lnors, metadata !10021, metadata !DIExpression()), !dbg !10025
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10026
  %getTessFaceDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %4, i32 0, i32 52, !dbg !10027
  %5 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray, align 8, !dbg !10027
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10028
  %call = call i8* %5(%struct.DerivedMesh* %6, i32 40), !dbg !10026
  %7 = bitcast i8* %call to [4 x [3 x i16]]*, !dbg !10026
  store [4 x [3 x i16]]* %7, [4 x [3 x i16]]** %lnors, align 8, !dbg !10025
  call void @llvm.dbg.declare(metadata i32* %gridSize, metadata !10029, metadata !DIExpression()), !dbg !10030
  %8 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !10031
  %call2 = call i32 @ccgSubSurf_getGridSize(%struct.CCGSubSurf* %8), !dbg !10032
  store i32 %call2, i32* %gridSize, align 4, !dbg !10030
  call void @llvm.dbg.declare(metadata i32* %gridFaces, metadata !10033, metadata !DIExpression()), !dbg !10034
  %9 = load i32, i32* %gridSize, align 4, !dbg !10035
  %sub = sub nsw i32 %9, 1, !dbg !10036
  store i32 %sub, i32* %gridFaces, align 4, !dbg !10034
  call void @llvm.dbg.declare(metadata %struct.DMFlagMat** %faceFlags, metadata !10037, metadata !DIExpression()), !dbg !10038
  %10 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !10039
  %faceFlags3 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %10, i32 0, i32 9, !dbg !10040
  %11 = load %struct.DMFlagMat*, %struct.DMFlagMat** %faceFlags3, align 8, !dbg !10040
  store %struct.DMFlagMat* %11, %struct.DMFlagMat** %faceFlags, align 8, !dbg !10038
  call void @llvm.dbg.declare(metadata i32* %step, metadata !10041, metadata !DIExpression()), !dbg !10042
  %12 = load i8, i8* %fast.addr, align 1, !dbg !10043
  %conv = zext i8 %12 to i32, !dbg !10044
  %tobool = icmp ne i32 %conv, 0, !dbg !10044
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !10044

cond.true:                                        ; preds = %entry
  %13 = load i32, i32* %gridSize, align 4, !dbg !10045
  %sub4 = sub nsw i32 %13, 1, !dbg !10046
  br label %cond.end, !dbg !10044

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !10044

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub4, %cond.true ], [ 1, %cond.false ], !dbg !10044
  store i32 %cond, i32* %step, align 4, !dbg !10042
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10047, metadata !DIExpression()), !dbg !10048
  call void @llvm.dbg.declare(metadata i32* %totface, metadata !10049, metadata !DIExpression()), !dbg !10050
  %14 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !10051
  %call5 = call i32 @ccgSubSurf_getNumFaces(%struct.CCGSubSurf* %14), !dbg !10052
  store i32 %call5, i32* %totface, align 4, !dbg !10050
  call void @llvm.dbg.declare(metadata i32* %drawcurrent, metadata !10053, metadata !DIExpression()), !dbg !10054
  store i32 0, i32* %drawcurrent, align 4, !dbg !10054
  call void @llvm.dbg.declare(metadata i32* %matnr, metadata !10055, metadata !DIExpression()), !dbg !10056
  store i32 -1, i32* %matnr, align 4, !dbg !10056
  call void @llvm.dbg.declare(metadata i32* %shademodel, metadata !10057, metadata !DIExpression()), !dbg !10058
  store i32 -1, i32* %shademodel, align 4, !dbg !10058
  %15 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !10059
  call void @CCG_key_top_level(%struct.CCGKey* %key, %struct.CCGSubSurf* %15), !dbg !10060
  %16 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !10061
  call void @ccgdm_pbvh_update(%struct.CCGDerivedMesh* %16), !dbg !10062
  %17 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !10063
  %pbvh = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %17, i32 0, i32 11, !dbg !10065
  %18 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !10065
  %tobool6 = icmp ne %struct.PBVH* %18, null, !dbg !10063
  br i1 %tobool6, label %land.lhs.true, label %if.end13, !dbg !10066

land.lhs.true:                                    ; preds = %cond.end
  %19 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !10067
  %multires = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %19, i32 0, i32 20, !dbg !10068
  %mmd = getelementptr inbounds %struct.anon.2, %struct.anon.2* %multires, i32 0, i32 0, !dbg !10069
  %20 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd, align 8, !dbg !10069
  %tobool7 = icmp ne %struct.MultiresModifierData* %20, null, !dbg !10067
  br i1 %tobool7, label %land.lhs.true8, label %if.end13, !dbg !10070

land.lhs.true8:                                   ; preds = %land.lhs.true
  %21 = load i8, i8* %fast.addr, align 1, !dbg !10071
  %tobool9 = icmp ne i8 %21, 0, !dbg !10071
  br i1 %tobool9, label %if.end13, label %if.then, !dbg !10072

if.then:                                          ; preds = %land.lhs.true8
  %22 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10073
  %numTessFaceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %22, i32 0, i32 7, !dbg !10076
  %23 = load i32, i32* %numTessFaceData, align 8, !dbg !10076
  %tobool10 = icmp ne i32 %23, 0, !dbg !10073
  br i1 %tobool10, label %if.then11, label %if.end, !dbg !10077

if.then11:                                        ; preds = %if.then
  %24 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !10078
  %pbvh12 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %24, i32 0, i32 11, !dbg !10080
  %25 = load %struct.PBVH*, %struct.PBVH** %pbvh12, align 8, !dbg !10080
  %26 = load [4 x float]*, [4 x float]** %partial_redraw_planes.addr, align 8, !dbg !10081
  %27 = load i32 (i32, i8*)*, i32 (i32, i8*)** %setMaterial.addr, align 8, !dbg !10082
  call void @BKE_pbvh_draw(%struct.PBVH* %25, [4 x float]* %26, [3 x float]* null, i32 (i32, i8*)* %27, i8 zeroext 0), !dbg !10083
  call void @glShadeModel(i32 7424), !dbg !10084
  br label %if.end, !dbg !10085

if.end:                                           ; preds = %if.then11, %if.then
  br label %for.end153, !dbg !10086

if.end13:                                         ; preds = %land.lhs.true8, %land.lhs.true, %cond.end
  store i32 0, i32* %i, align 4, !dbg !10087
  br label %for.cond, !dbg !10089

for.cond:                                         ; preds = %for.inc151, %if.end13
  %28 = load i32, i32* %i, align 4, !dbg !10090
  %29 = load i32, i32* %totface, align 4, !dbg !10092
  %cmp = icmp slt i32 %28, %29, !dbg !10093
  br i1 %cmp, label %for.body, label %for.end153, !dbg !10094

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f, metadata !10095, metadata !DIExpression()), !dbg !10097
  %30 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !10098
  %faceMap = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %30, i32 0, i32 7, !dbg !10099
  %31 = load %struct.anon.1*, %struct.anon.1** %faceMap, align 8, !dbg !10099
  %32 = load i32, i32* %i, align 4, !dbg !10100
  %idxprom = sext i32 %32 to i64, !dbg !10098
  %arrayidx = getelementptr inbounds %struct.anon.1, %struct.anon.1* %31, i64 %idxprom, !dbg !10098
  %face = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx, i32 0, i32 3, !dbg !10101
  %33 = load %struct.CCGFace*, %struct.CCGFace** %face, align 8, !dbg !10101
  store %struct.CCGFace* %33, %struct.CCGFace** %f, align 8, !dbg !10097
  call void @llvm.dbg.declare(metadata i32* %S, metadata !10102, metadata !DIExpression()), !dbg !10103
  call void @llvm.dbg.declare(metadata i32* %x, metadata !10104, metadata !DIExpression()), !dbg !10105
  call void @llvm.dbg.declare(metadata i32* %y, metadata !10106, metadata !DIExpression()), !dbg !10107
  call void @llvm.dbg.declare(metadata i32* %numVerts, metadata !10108, metadata !DIExpression()), !dbg !10109
  %34 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !10110
  %call15 = call i32 @ccgSubSurf_getFaceNumVerts(%struct.CCGFace* %34), !dbg !10111
  store i32 %call15, i32* %numVerts, align 4, !dbg !10109
  call void @llvm.dbg.declare(metadata i32* %index, metadata !10112, metadata !DIExpression()), !dbg !10113
  %35 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !10114
  %call16 = call i8* @ccgSubSurf_getFaceFaceHandle(%struct.CCGFace* %35), !dbg !10114
  %36 = ptrtoint i8* %call16 to i64, !dbg !10114
  %conv17 = trunc i64 %36 to i32, !dbg !10114
  store i32 %conv17, i32* %index, align 4, !dbg !10113
  call void @llvm.dbg.declare(metadata i32* %new_matnr, metadata !10115, metadata !DIExpression()), !dbg !10116
  call void @llvm.dbg.declare(metadata i32* %new_shademodel, metadata !10117, metadata !DIExpression()), !dbg !10118
  call void @llvm.dbg.declare(metadata [4 x [3 x i16]]** %ln, metadata !10119, metadata !DIExpression()), !dbg !10120
  store [4 x [3 x i16]]* null, [4 x [3 x i16]]** %ln, align 8, !dbg !10120
  %37 = load %struct.DMFlagMat*, %struct.DMFlagMat** %faceFlags, align 8, !dbg !10121
  %tobool18 = icmp ne %struct.DMFlagMat* %37, null, !dbg !10121
  br i1 %tobool18, label %if.then19, label %if.else, !dbg !10123

if.then19:                                        ; preds = %for.body
  %38 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !10124
  %tobool20 = icmp ne [4 x [3 x i16]]* %38, null, !dbg !10124
  br i1 %tobool20, label %lor.end, label %lor.rhs, !dbg !10126

lor.rhs:                                          ; preds = %if.then19
  %39 = load %struct.DMFlagMat*, %struct.DMFlagMat** %faceFlags, align 8, !dbg !10127
  %40 = load i32, i32* %index, align 4, !dbg !10128
  %idxprom21 = sext i32 %40 to i64, !dbg !10127
  %arrayidx22 = getelementptr inbounds %struct.DMFlagMat, %struct.DMFlagMat* %39, i64 %idxprom21, !dbg !10127
  %flag = getelementptr inbounds %struct.DMFlagMat, %struct.DMFlagMat* %arrayidx22, i32 0, i32 1, !dbg !10129
  %41 = load i8, i8* %flag, align 2, !dbg !10129
  %conv23 = zext i8 %41 to i32, !dbg !10127
  %and = and i32 %conv23, 1, !dbg !10130
  %tobool24 = icmp ne i32 %and, 0, !dbg !10126
  br label %lor.end, !dbg !10126

lor.end:                                          ; preds = %lor.rhs, %if.then19
  %42 = phi i1 [ true, %if.then19 ], [ %tobool24, %lor.rhs ]
  %43 = zext i1 %42 to i64, !dbg !10131
  %cond25 = select i1 %42, i32 7425, i32 7424, !dbg !10131
  store i32 %cond25, i32* %new_shademodel, align 4, !dbg !10132
  %44 = load %struct.DMFlagMat*, %struct.DMFlagMat** %faceFlags, align 8, !dbg !10133
  %45 = load i32, i32* %index, align 4, !dbg !10134
  %idxprom26 = sext i32 %45 to i64, !dbg !10133
  %arrayidx27 = getelementptr inbounds %struct.DMFlagMat, %struct.DMFlagMat* %44, i64 %idxprom26, !dbg !10133
  %mat_nr = getelementptr inbounds %struct.DMFlagMat, %struct.DMFlagMat* %arrayidx27, i32 0, i32 0, !dbg !10135
  %46 = load i16, i16* %mat_nr, align 2, !dbg !10135
  %conv28 = sext i16 %46 to i32, !dbg !10133
  store i32 %conv28, i32* %new_matnr, align 4, !dbg !10136
  br label %if.end29, !dbg !10137

if.else:                                          ; preds = %for.body
  store i32 7425, i32* %new_shademodel, align 4, !dbg !10138
  store i32 0, i32* %new_matnr, align 4, !dbg !10140
  br label %if.end29

if.end29:                                         ; preds = %if.else, %lor.end
  %47 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !10141
  %tobool30 = icmp ne [4 x [3 x i16]]* %47, null, !dbg !10141
  br i1 %tobool30, label %if.then31, label %if.end33, !dbg !10143

if.then31:                                        ; preds = %if.end29
  %48 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !10144
  store [4 x [3 x i16]]* %48, [4 x [3 x i16]]** %ln, align 8, !dbg !10146
  %49 = load i32, i32* %gridFaces, align 4, !dbg !10147
  %50 = load i32, i32* %gridFaces, align 4, !dbg !10148
  %mul = mul nsw i32 %49, %50, !dbg !10149
  %51 = load i32, i32* %numVerts, align 4, !dbg !10150
  %mul32 = mul nsw i32 %mul, %51, !dbg !10151
  %52 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !10152
  %idx.ext = sext i32 %mul32 to i64, !dbg !10152
  %add.ptr = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %52, i64 %idx.ext, !dbg !10152
  store [4 x [3 x i16]]* %add.ptr, [4 x [3 x i16]]** %lnors, align 8, !dbg !10152
  br label %if.end33, !dbg !10153

if.end33:                                         ; preds = %if.then31, %if.end29
  %53 = load i32, i32* %shademodel, align 4, !dbg !10154
  %54 = load i32, i32* %new_shademodel, align 4, !dbg !10156
  %cmp34 = icmp ne i32 %53, %54, !dbg !10157
  br i1 %cmp34, label %if.then38, label %lor.lhs.false, !dbg !10158

lor.lhs.false:                                    ; preds = %if.end33
  %55 = load i32, i32* %matnr, align 4, !dbg !10159
  %56 = load i32, i32* %new_matnr, align 4, !dbg !10160
  %cmp36 = icmp ne i32 %55, %56, !dbg !10161
  br i1 %cmp36, label %if.then38, label %if.end44, !dbg !10162

if.then38:                                        ; preds = %lor.lhs.false, %if.end33
  %57 = load i32, i32* %new_matnr, align 4, !dbg !10163
  store i32 %57, i32* %matnr, align 4, !dbg !10165
  %58 = load i32, i32* %new_shademodel, align 4, !dbg !10166
  store i32 %58, i32* %shademodel, align 4, !dbg !10167
  %59 = load i32 (i32, i8*)*, i32 (i32, i8*)** %setMaterial.addr, align 8, !dbg !10168
  %tobool39 = icmp ne i32 (i32, i8*)* %59, null, !dbg !10168
  br i1 %tobool39, label %if.then40, label %if.else42, !dbg !10170

if.then40:                                        ; preds = %if.then38
  %60 = load i32 (i32, i8*)*, i32 (i32, i8*)** %setMaterial.addr, align 8, !dbg !10171
  %61 = load i32, i32* %matnr, align 4, !dbg !10172
  %add = add nsw i32 %61, 1, !dbg !10173
  %call41 = call i32 %60(i32 %add, i8* null), !dbg !10171
  store i32 %call41, i32* %drawcurrent, align 4, !dbg !10174
  br label %if.end43, !dbg !10175

if.else42:                                        ; preds = %if.then38
  store i32 1, i32* %drawcurrent, align 4, !dbg !10176
  br label %if.end43

if.end43:                                         ; preds = %if.else42, %if.then40
  %62 = load i32, i32* %shademodel, align 4, !dbg !10177
  call void @glShadeModel(i32 %62), !dbg !10178
  br label %if.end44, !dbg !10179

if.end44:                                         ; preds = %if.end43, %lor.lhs.false
  %63 = load i32, i32* %drawcurrent, align 4, !dbg !10180
  %tobool45 = icmp ne i32 %63, 0, !dbg !10180
  br i1 %tobool45, label %if.end47, label %if.then46, !dbg !10182

if.then46:                                        ; preds = %if.end44
  br label %for.inc151, !dbg !10183

if.end47:                                         ; preds = %if.end44
  store i32 0, i32* %S, align 4, !dbg !10184
  br label %for.cond48, !dbg !10186

for.cond48:                                       ; preds = %for.inc149, %if.end47
  %64 = load i32, i32* %S, align 4, !dbg !10187
  %65 = load i32, i32* %numVerts, align 4, !dbg !10189
  %cmp49 = icmp slt i32 %64, %65, !dbg !10190
  br i1 %cmp49, label %for.body51, label %for.end150, !dbg !10191

for.body51:                                       ; preds = %for.cond48
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %faceGridData, metadata !10192, metadata !DIExpression()), !dbg !10194
  %66 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !10195
  %67 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !10196
  %68 = load i32, i32* %S, align 4, !dbg !10197
  %call52 = call i8* @ccgSubSurf_getFaceGridDataArray(%struct.CCGSubSurf* %66, %struct.CCGFace* %67, i32 %68), !dbg !10198
  %69 = bitcast i8* %call52 to %struct.CCGElem*, !dbg !10198
  store %struct.CCGElem* %69, %struct.CCGElem** %faceGridData, align 8, !dbg !10194
  %70 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %ln, align 8, !dbg !10199
  %tobool53 = icmp ne [4 x [3 x i16]]* %70, null, !dbg !10199
  br i1 %tobool53, label %if.then54, label %if.else90, !dbg !10201

if.then54:                                        ; preds = %for.body51
  call void @glBegin(i32 7), !dbg !10202
  store i32 0, i32* %y, align 4, !dbg !10204
  br label %for.cond55, !dbg !10206

for.cond55:                                       ; preds = %for.inc87, %if.then54
  %71 = load i32, i32* %y, align 4, !dbg !10207
  %72 = load i32, i32* %gridFaces, align 4, !dbg !10209
  %cmp56 = icmp slt i32 %71, %72, !dbg !10210
  br i1 %cmp56, label %for.body58, label %for.end89, !dbg !10211

for.body58:                                       ; preds = %for.cond55
  store i32 0, i32* %x, align 4, !dbg !10212
  br label %for.cond59, !dbg !10215

for.cond59:                                       ; preds = %for.inc, %for.body58
  %73 = load i32, i32* %x, align 4, !dbg !10216
  %74 = load i32, i32* %gridFaces, align 4, !dbg !10218
  %cmp60 = icmp slt i32 %73, %74, !dbg !10219
  br i1 %cmp60, label %for.body62, label %for.end, !dbg !10220

for.body62:                                       ; preds = %for.cond59
  call void @llvm.dbg.declare(metadata float** %a, metadata !10221, metadata !DIExpression()), !dbg !10223
  %75 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !10224
  %76 = load i32, i32* %x, align 4, !dbg !10225
  %77 = load i32, i32* %y, align 4, !dbg !10226
  %add63 = add nsw i32 %77, 0, !dbg !10227
  %call64 = call float* @CCG_grid_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %75, i32 %76, i32 %add63), !dbg !10228
  store float* %call64, float** %a, align 8, !dbg !10223
  call void @llvm.dbg.declare(metadata float** %b, metadata !10229, metadata !DIExpression()), !dbg !10230
  %78 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !10231
  %79 = load i32, i32* %x, align 4, !dbg !10232
  %80 = load i32, i32* %step, align 4, !dbg !10233
  %add65 = add nsw i32 %79, %80, !dbg !10234
  %81 = load i32, i32* %y, align 4, !dbg !10235
  %add66 = add nsw i32 %81, 0, !dbg !10236
  %call67 = call float* @CCG_grid_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %78, i32 %add65, i32 %add66), !dbg !10237
  store float* %call67, float** %b, align 8, !dbg !10230
  call void @llvm.dbg.declare(metadata float** %c, metadata !10238, metadata !DIExpression()), !dbg !10239
  %82 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !10240
  %83 = load i32, i32* %x, align 4, !dbg !10241
  %84 = load i32, i32* %step, align 4, !dbg !10242
  %add68 = add nsw i32 %83, %84, !dbg !10243
  %85 = load i32, i32* %y, align 4, !dbg !10244
  %86 = load i32, i32* %step, align 4, !dbg !10245
  %add69 = add nsw i32 %85, %86, !dbg !10246
  %call70 = call float* @CCG_grid_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %82, i32 %add68, i32 %add69), !dbg !10247
  store float* %call70, float** %c, align 8, !dbg !10239
  call void @llvm.dbg.declare(metadata float** %d, metadata !10248, metadata !DIExpression()), !dbg !10249
  %87 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !10250
  %88 = load i32, i32* %x, align 4, !dbg !10251
  %89 = load i32, i32* %y, align 4, !dbg !10252
  %90 = load i32, i32* %step, align 4, !dbg !10253
  %add71 = add nsw i32 %89, %90, !dbg !10254
  %call72 = call float* @CCG_grid_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %87, i32 %88, i32 %add71), !dbg !10255
  store float* %call72, float** %d, align 8, !dbg !10249
  %91 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %ln, align 8, !dbg !10256
  %arrayidx73 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %91, i64 0, !dbg !10256
  %arrayidx74 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %arrayidx73, i64 0, i64 1, !dbg !10256
  %arraydecay = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx74, i64 0, i64 0, !dbg !10256
  call void @glNormal3sv(i16* %arraydecay), !dbg !10257
  %92 = load float*, float** %d, align 8, !dbg !10258
  call void @glVertex3fv(float* %92), !dbg !10259
  %93 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %ln, align 8, !dbg !10260
  %arrayidx75 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %93, i64 0, !dbg !10260
  %arrayidx76 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %arrayidx75, i64 0, i64 2, !dbg !10260
  %arraydecay77 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx76, i64 0, i64 0, !dbg !10260
  call void @glNormal3sv(i16* %arraydecay77), !dbg !10261
  %94 = load float*, float** %c, align 8, !dbg !10262
  call void @glVertex3fv(float* %94), !dbg !10263
  %95 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %ln, align 8, !dbg !10264
  %arrayidx78 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %95, i64 0, !dbg !10264
  %arrayidx79 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %arrayidx78, i64 0, i64 3, !dbg !10264
  %arraydecay80 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx79, i64 0, i64 0, !dbg !10264
  call void @glNormal3sv(i16* %arraydecay80), !dbg !10265
  %96 = load float*, float** %b, align 8, !dbg !10266
  call void @glVertex3fv(float* %96), !dbg !10267
  %97 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %ln, align 8, !dbg !10268
  %arrayidx81 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %97, i64 0, !dbg !10268
  %arrayidx82 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %arrayidx81, i64 0, i64 0, !dbg !10268
  %arraydecay83 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx82, i64 0, i64 0, !dbg !10268
  call void @glNormal3sv(i16* %arraydecay83), !dbg !10269
  %98 = load float*, float** %a, align 8, !dbg !10270
  call void @glVertex3fv(float* %98), !dbg !10271
  %99 = load i32, i32* %step, align 4, !dbg !10272
  %100 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %ln, align 8, !dbg !10273
  %idx.ext84 = sext i32 %99 to i64, !dbg !10273
  %add.ptr85 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %100, i64 %idx.ext84, !dbg !10273
  store [4 x [3 x i16]]* %add.ptr85, [4 x [3 x i16]]** %ln, align 8, !dbg !10273
  br label %for.inc, !dbg !10274

for.inc:                                          ; preds = %for.body62
  %101 = load i32, i32* %step, align 4, !dbg !10275
  %102 = load i32, i32* %x, align 4, !dbg !10276
  %add86 = add nsw i32 %102, %101, !dbg !10276
  store i32 %add86, i32* %x, align 4, !dbg !10276
  br label %for.cond59, !dbg !10277, !llvm.loop !10278

for.end:                                          ; preds = %for.cond59
  br label %for.inc87, !dbg !10280

for.inc87:                                        ; preds = %for.end
  %103 = load i32, i32* %step, align 4, !dbg !10281
  %104 = load i32, i32* %y, align 4, !dbg !10282
  %add88 = add nsw i32 %104, %103, !dbg !10282
  store i32 %add88, i32* %y, align 4, !dbg !10282
  br label %for.cond55, !dbg !10283, !llvm.loop !10284

for.end89:                                        ; preds = %for.cond55
  call void @glEnd(), !dbg !10286
  br label %if.end148, !dbg !10287

if.else90:                                        ; preds = %for.body51
  %105 = load i32, i32* %shademodel, align 4, !dbg !10288
  %cmp91 = icmp eq i32 %105, 7425, !dbg !10290
  br i1 %cmp91, label %if.then93, label %if.else118, !dbg !10291

if.then93:                                        ; preds = %if.else90
  store i32 0, i32* %y, align 4, !dbg !10292
  br label %for.cond94, !dbg !10295

for.cond94:                                       ; preds = %for.inc115, %if.then93
  %106 = load i32, i32* %y, align 4, !dbg !10296
  %107 = load i32, i32* %gridFaces, align 4, !dbg !10298
  %cmp95 = icmp slt i32 %106, %107, !dbg !10299
  br i1 %cmp95, label %for.body97, label %for.end117, !dbg !10300

for.body97:                                       ; preds = %for.cond94
  call void @glBegin(i32 8), !dbg !10301
  store i32 0, i32* %x, align 4, !dbg !10303
  br label %for.cond98, !dbg !10305

for.cond98:                                       ; preds = %for.inc112, %for.body97
  %108 = load i32, i32* %x, align 4, !dbg !10306
  %109 = load i32, i32* %gridSize, align 4, !dbg !10308
  %cmp99 = icmp slt i32 %108, %109, !dbg !10309
  br i1 %cmp99, label %for.body101, label %for.end114, !dbg !10310

for.body101:                                      ; preds = %for.cond98
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %a102, metadata !10311, metadata !DIExpression()), !dbg !10313
  %110 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !10314
  %111 = load i32, i32* %x, align 4, !dbg !10315
  %112 = load i32, i32* %y, align 4, !dbg !10316
  %add103 = add nsw i32 %112, 0, !dbg !10317
  %call104 = call %struct.CCGElem* @CCG_grid_elem(%struct.CCGKey* %key, %struct.CCGElem* %110, i32 %111, i32 %add103), !dbg !10318
  store %struct.CCGElem* %call104, %struct.CCGElem** %a102, align 8, !dbg !10313
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %b105, metadata !10319, metadata !DIExpression()), !dbg !10320
  %113 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !10321
  %114 = load i32, i32* %x, align 4, !dbg !10322
  %115 = load i32, i32* %y, align 4, !dbg !10323
  %116 = load i32, i32* %step, align 4, !dbg !10324
  %add106 = add nsw i32 %115, %116, !dbg !10325
  %call107 = call %struct.CCGElem* @CCG_grid_elem(%struct.CCGKey* %key, %struct.CCGElem* %113, i32 %114, i32 %add106), !dbg !10326
  store %struct.CCGElem* %call107, %struct.CCGElem** %b105, align 8, !dbg !10320
  %117 = load %struct.CCGElem*, %struct.CCGElem** %a102, align 8, !dbg !10327
  %call108 = call float* @CCG_elem_no(%struct.CCGKey* %key, %struct.CCGElem* %117), !dbg !10328
  call void @glNormal3fv(float* %call108), !dbg !10329
  %118 = load %struct.CCGElem*, %struct.CCGElem** %a102, align 8, !dbg !10330
  %call109 = call float* @CCG_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %118), !dbg !10331
  call void @glVertex3fv(float* %call109), !dbg !10332
  %119 = load %struct.CCGElem*, %struct.CCGElem** %b105, align 8, !dbg !10333
  %call110 = call float* @CCG_elem_no(%struct.CCGKey* %key, %struct.CCGElem* %119), !dbg !10334
  call void @glNormal3fv(float* %call110), !dbg !10335
  %120 = load %struct.CCGElem*, %struct.CCGElem** %b105, align 8, !dbg !10336
  %call111 = call float* @CCG_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %120), !dbg !10337
  call void @glVertex3fv(float* %call111), !dbg !10338
  br label %for.inc112, !dbg !10339

for.inc112:                                       ; preds = %for.body101
  %121 = load i32, i32* %step, align 4, !dbg !10340
  %122 = load i32, i32* %x, align 4, !dbg !10341
  %add113 = add nsw i32 %122, %121, !dbg !10341
  store i32 %add113, i32* %x, align 4, !dbg !10341
  br label %for.cond98, !dbg !10342, !llvm.loop !10343

for.end114:                                       ; preds = %for.cond98
  call void @glEnd(), !dbg !10345
  br label %for.inc115, !dbg !10346

for.inc115:                                       ; preds = %for.end114
  %123 = load i32, i32* %step, align 4, !dbg !10347
  %124 = load i32, i32* %y, align 4, !dbg !10348
  %add116 = add nsw i32 %124, %123, !dbg !10348
  store i32 %add116, i32* %y, align 4, !dbg !10348
  br label %for.cond94, !dbg !10349, !llvm.loop !10350

for.end117:                                       ; preds = %for.cond94
  br label %if.end147, !dbg !10352

if.else118:                                       ; preds = %if.else90
  call void @glBegin(i32 7), !dbg !10353
  store i32 0, i32* %y, align 4, !dbg !10355
  br label %for.cond119, !dbg !10357

for.cond119:                                      ; preds = %for.inc144, %if.else118
  %125 = load i32, i32* %y, align 4, !dbg !10358
  %126 = load i32, i32* %gridFaces, align 4, !dbg !10360
  %cmp120 = icmp slt i32 %125, %126, !dbg !10361
  br i1 %cmp120, label %for.body122, label %for.end146, !dbg !10362

for.body122:                                      ; preds = %for.cond119
  store i32 0, i32* %x, align 4, !dbg !10363
  br label %for.cond123, !dbg !10366

for.cond123:                                      ; preds = %for.inc141, %for.body122
  %127 = load i32, i32* %x, align 4, !dbg !10367
  %128 = load i32, i32* %gridFaces, align 4, !dbg !10369
  %cmp124 = icmp slt i32 %127, %128, !dbg !10370
  br i1 %cmp124, label %for.body126, label %for.end143, !dbg !10371

for.body126:                                      ; preds = %for.cond123
  call void @llvm.dbg.declare(metadata float** %a127, metadata !10372, metadata !DIExpression()), !dbg !10374
  %129 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !10375
  %130 = load i32, i32* %x, align 4, !dbg !10376
  %131 = load i32, i32* %y, align 4, !dbg !10377
  %add128 = add nsw i32 %131, 0, !dbg !10378
  %call129 = call float* @CCG_grid_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %129, i32 %130, i32 %add128), !dbg !10379
  store float* %call129, float** %a127, align 8, !dbg !10374
  call void @llvm.dbg.declare(metadata float** %b130, metadata !10380, metadata !DIExpression()), !dbg !10381
  %132 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !10382
  %133 = load i32, i32* %x, align 4, !dbg !10383
  %134 = load i32, i32* %step, align 4, !dbg !10384
  %add131 = add nsw i32 %133, %134, !dbg !10385
  %135 = load i32, i32* %y, align 4, !dbg !10386
  %add132 = add nsw i32 %135, 0, !dbg !10387
  %call133 = call float* @CCG_grid_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %132, i32 %add131, i32 %add132), !dbg !10388
  store float* %call133, float** %b130, align 8, !dbg !10381
  call void @llvm.dbg.declare(metadata float** %c134, metadata !10389, metadata !DIExpression()), !dbg !10390
  %136 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !10391
  %137 = load i32, i32* %x, align 4, !dbg !10392
  %138 = load i32, i32* %step, align 4, !dbg !10393
  %add135 = add nsw i32 %137, %138, !dbg !10394
  %139 = load i32, i32* %y, align 4, !dbg !10395
  %140 = load i32, i32* %step, align 4, !dbg !10396
  %add136 = add nsw i32 %139, %140, !dbg !10397
  %call137 = call float* @CCG_grid_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %136, i32 %add135, i32 %add136), !dbg !10398
  store float* %call137, float** %c134, align 8, !dbg !10390
  call void @llvm.dbg.declare(metadata float** %d138, metadata !10399, metadata !DIExpression()), !dbg !10400
  %141 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !10401
  %142 = load i32, i32* %x, align 4, !dbg !10402
  %143 = load i32, i32* %y, align 4, !dbg !10403
  %144 = load i32, i32* %step, align 4, !dbg !10404
  %add139 = add nsw i32 %143, %144, !dbg !10405
  %call140 = call float* @CCG_grid_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %141, i32 %142, i32 %add139), !dbg !10406
  store float* %call140, float** %d138, align 8, !dbg !10400
  %145 = load float*, float** %a127, align 8, !dbg !10407
  %146 = load float*, float** %b130, align 8, !dbg !10408
  %147 = load float*, float** %c134, align 8, !dbg !10409
  %148 = load float*, float** %d138, align 8, !dbg !10410
  call void @ccgDM_glNormalFast(float* %145, float* %146, float* %147, float* %148), !dbg !10411
  %149 = load float*, float** %d138, align 8, !dbg !10412
  call void @glVertex3fv(float* %149), !dbg !10413
  %150 = load float*, float** %c134, align 8, !dbg !10414
  call void @glVertex3fv(float* %150), !dbg !10415
  %151 = load float*, float** %b130, align 8, !dbg !10416
  call void @glVertex3fv(float* %151), !dbg !10417
  %152 = load float*, float** %a127, align 8, !dbg !10418
  call void @glVertex3fv(float* %152), !dbg !10419
  br label %for.inc141, !dbg !10420

for.inc141:                                       ; preds = %for.body126
  %153 = load i32, i32* %step, align 4, !dbg !10421
  %154 = load i32, i32* %x, align 4, !dbg !10422
  %add142 = add nsw i32 %154, %153, !dbg !10422
  store i32 %add142, i32* %x, align 4, !dbg !10422
  br label %for.cond123, !dbg !10423, !llvm.loop !10424

for.end143:                                       ; preds = %for.cond123
  br label %for.inc144, !dbg !10426

for.inc144:                                       ; preds = %for.end143
  %155 = load i32, i32* %step, align 4, !dbg !10427
  %156 = load i32, i32* %y, align 4, !dbg !10428
  %add145 = add nsw i32 %156, %155, !dbg !10428
  store i32 %add145, i32* %y, align 4, !dbg !10428
  br label %for.cond119, !dbg !10429, !llvm.loop !10430

for.end146:                                       ; preds = %for.cond119
  call void @glEnd(), !dbg !10432
  br label %if.end147

if.end147:                                        ; preds = %for.end146, %for.end117
  br label %if.end148

if.end148:                                        ; preds = %if.end147, %for.end89
  br label %for.inc149, !dbg !10433

for.inc149:                                       ; preds = %if.end148
  %157 = load i32, i32* %S, align 4, !dbg !10434
  %inc = add nsw i32 %157, 1, !dbg !10434
  store i32 %inc, i32* %S, align 4, !dbg !10434
  br label %for.cond48, !dbg !10435, !llvm.loop !10436

for.end150:                                       ; preds = %for.cond48
  br label %for.inc151, !dbg !10438

for.inc151:                                       ; preds = %for.end150, %if.then46
  %158 = load i32, i32* %i, align 4, !dbg !10439
  %inc152 = add nsw i32 %158, 1, !dbg !10439
  store i32 %inc152, i32* %i, align 4, !dbg !10439
  br label %for.cond, !dbg !10440, !llvm.loop !10441

for.end153:                                       ; preds = %if.end, %for.cond
  ret void, !dbg !10443
}

; Function Attrs: noinline nounwind uwtable
define internal void @ccgDM_drawFacesTex(%struct.DerivedMesh* %dm, i32 (%struct.MTFace*, i8, i32)* %setDrawOptions, i32 (i8*, i32, i32)* %compareDrawOptions, i8* %userData, i32 %flag) #0 !dbg !10444 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %setDrawOptions.addr = alloca i32 (%struct.MTFace*, i8, i32)*, align 8
  %compareDrawOptions.addr = alloca i32 (i8*, i32, i32)*, align 8
  %userData.addr = alloca i8*, align 8
  %flag.addr = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !10445, metadata !DIExpression()), !dbg !10446
  store i32 (%struct.MTFace*, i8, i32)* %setDrawOptions, i32 (%struct.MTFace*, i8, i32)** %setDrawOptions.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.MTFace*, i8, i32)** %setDrawOptions.addr, metadata !10447, metadata !DIExpression()), !dbg !10448
  store i32 (i8*, i32, i32)* %compareDrawOptions, i32 (i8*, i32, i32)** %compareDrawOptions.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i32, i32)** %compareDrawOptions.addr, metadata !10449, metadata !DIExpression()), !dbg !10450
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !10451, metadata !DIExpression()), !dbg !10452
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !10453, metadata !DIExpression()), !dbg !10454
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10455
  %1 = load i32 (%struct.MTFace*, i8, i32)*, i32 (%struct.MTFace*, i8, i32)** %setDrawOptions.addr, align 8, !dbg !10456
  %2 = load i32 (i8*, i32, i32)*, i32 (i8*, i32, i32)** %compareDrawOptions.addr, align 8, !dbg !10457
  %3 = load i8*, i8** %userData.addr, align 8, !dbg !10458
  %4 = load i32, i32* %flag.addr, align 4, !dbg !10459
  call void @ccgDM_drawFacesTex_common(%struct.DerivedMesh* %0, i32 (%struct.MTFace*, i8, i32)* %1, i32 (i8*, i32)* null, i32 (i8*, i32, i32)* %2, i8* %3, i32 %4), !dbg !10460
  ret void, !dbg !10461
}

; Function Attrs: noinline nounwind uwtable
define internal void @ccgDM_drawFacesGLSL(%struct.DerivedMesh* %dm, i32 (i32, i8*)* %setMaterial) #0 !dbg !10462 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %setMaterial.addr = alloca i32 (i32, i8*)*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !10463, metadata !DIExpression()), !dbg !10464
  store i32 (i32, i8*)* %setMaterial, i32 (i32, i8*)** %setMaterial.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %setMaterial.addr, metadata !10465, metadata !DIExpression()), !dbg !10466
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10467
  %drawMappedFacesGLSL = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 91, !dbg !10468
  %1 = load void (%struct.DerivedMesh*, i32 (i32, i8*)*, i32 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*, i32 (i32, i8*)*, i32 (i8*, i32)*, i8*)** %drawMappedFacesGLSL, align 8, !dbg !10468
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10469
  %3 = load i32 (i32, i8*)*, i32 (i32, i8*)** %setMaterial.addr, align 8, !dbg !10470
  call void %1(%struct.DerivedMesh* %2, i32 (i32, i8*)* %3, i32 (i8*, i32)* null, i8* null), !dbg !10467
  ret void, !dbg !10471
}

; Function Attrs: noinline nounwind uwtable
define internal void @ccgDM_drawMappedFaces(%struct.DerivedMesh* %dm, i32 (i8*, i32)* %setDrawOptions, i32 (i32, i8*)* %setMaterial, i32 (i8*, i32, i32)* %compareDrawOptions, i8* %userData, i32 %flag) #0 !dbg !10472 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %setDrawOptions.addr = alloca i32 (i8*, i32)*, align 8
  %setMaterial.addr = alloca i32 (i32, i8*)*, align 8
  %compareDrawOptions.addr = alloca i32 (i8*, i32, i32)*, align 8
  %userData.addr = alloca i8*, align 8
  %flag.addr = alloca i32, align 4
  %ccgdm = alloca %struct.CCGDerivedMesh*, align 8
  %ss = alloca %struct.CCGSubSurf*, align 8
  %key = alloca %struct.CCGKey, align 4
  %mcol = alloca %struct.MCol*, align 8
  %lnors = alloca [4 x [3 x i16]]*, align 8
  %i = alloca i32, align 4
  %gridSize = alloca i32, align 4
  %faceFlags = alloca %struct.DMFlagMat*, align 8
  %useColors = alloca i32, align 4
  %gridFaces = alloca i32, align 4
  %totface = alloca i32, align 4
  %f = alloca %struct.CCGFace*, align 8
  %S = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %numVerts = alloca i32, align 4
  %drawSmooth = alloca i32, align 4
  %index = alloca i32, align 4
  %origIndex = alloca i32, align 4
  %cp = alloca i8*, align 8
  %ln = alloca [4 x [3 x i16]]*, align 8
  %draw_option = alloca i32, align 4
  %faceGridData = alloca %struct.CCGElem*, align 8
  %a = alloca float*, align 8
  %b = alloca float*, align 8
  %c = alloca float*, align 8
  %d = alloca float*, align 8
  %a137 = alloca %struct.CCGElem*, align 8
  %b138 = alloca %struct.CCGElem*, align 8
  %a211 = alloca float*, align 8
  %b214 = alloca float*, align 8
  %c218 = alloca float*, align 8
  %d222 = alloca float*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !10473, metadata !DIExpression()), !dbg !10474
  store i32 (i8*, i32)* %setDrawOptions, i32 (i8*, i32)** %setDrawOptions.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i32)** %setDrawOptions.addr, metadata !10475, metadata !DIExpression()), !dbg !10476
  store i32 (i32, i8*)* %setMaterial, i32 (i32, i8*)** %setMaterial.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %setMaterial.addr, metadata !10477, metadata !DIExpression()), !dbg !10478
  store i32 (i8*, i32, i32)* %compareDrawOptions, i32 (i8*, i32, i32)** %compareDrawOptions.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i32, i32)** %compareDrawOptions.addr, metadata !10479, metadata !DIExpression()), !dbg !10480
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !10481, metadata !DIExpression()), !dbg !10482
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !10483, metadata !DIExpression()), !dbg !10484
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm, metadata !10485, metadata !DIExpression()), !dbg !10486
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10487
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CCGDerivedMesh*, !dbg !10488
  store %struct.CCGDerivedMesh* %1, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !10486
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss, metadata !10489, metadata !DIExpression()), !dbg !10490
  %2 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !10491
  %ss1 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %2, i32 0, i32 1, !dbg !10492
  %3 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss1, align 8, !dbg !10492
  store %struct.CCGSubSurf* %3, %struct.CCGSubSurf** %ss, align 8, !dbg !10490
  call void @llvm.dbg.declare(metadata %struct.CCGKey* %key, metadata !10493, metadata !DIExpression()), !dbg !10494
  call void @llvm.dbg.declare(metadata %struct.MCol** %mcol, metadata !10495, metadata !DIExpression()), !dbg !10498
  store %struct.MCol* null, %struct.MCol** %mcol, align 8, !dbg !10498
  call void @llvm.dbg.declare(metadata [4 x [3 x i16]]** %lnors, metadata !10499, metadata !DIExpression()), !dbg !10500
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10501
  %getTessFaceDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %4, i32 0, i32 52, !dbg !10502
  %5 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray, align 8, !dbg !10502
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10503
  %call = call i8* %5(%struct.DerivedMesh* %6, i32 40), !dbg !10501
  %7 = bitcast i8* %call to [4 x [3 x i16]]*, !dbg !10501
  store [4 x [3 x i16]]* %7, [4 x [3 x i16]]** %lnors, align 8, !dbg !10500
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10504, metadata !DIExpression()), !dbg !10505
  call void @llvm.dbg.declare(metadata i32* %gridSize, metadata !10506, metadata !DIExpression()), !dbg !10507
  %8 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !10508
  %call2 = call i32 @ccgSubSurf_getGridSize(%struct.CCGSubSurf* %8), !dbg !10509
  store i32 %call2, i32* %gridSize, align 4, !dbg !10507
  call void @llvm.dbg.declare(metadata %struct.DMFlagMat** %faceFlags, metadata !10510, metadata !DIExpression()), !dbg !10511
  %9 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !10512
  %faceFlags3 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %9, i32 0, i32 9, !dbg !10513
  %10 = load %struct.DMFlagMat*, %struct.DMFlagMat** %faceFlags3, align 8, !dbg !10513
  store %struct.DMFlagMat* %10, %struct.DMFlagMat** %faceFlags, align 8, !dbg !10511
  call void @llvm.dbg.declare(metadata i32* %useColors, metadata !10514, metadata !DIExpression()), !dbg !10515
  %11 = load i32, i32* %flag.addr, align 4, !dbg !10516
  %and = and i32 %11, 1, !dbg !10517
  store i32 %and, i32* %useColors, align 4, !dbg !10515
  call void @llvm.dbg.declare(metadata i32* %gridFaces, metadata !10518, metadata !DIExpression()), !dbg !10519
  %12 = load i32, i32* %gridSize, align 4, !dbg !10520
  %sub = sub nsw i32 %12, 1, !dbg !10521
  store i32 %sub, i32* %gridFaces, align 4, !dbg !10519
  call void @llvm.dbg.declare(metadata i32* %totface, metadata !10522, metadata !DIExpression()), !dbg !10523
  %13 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !10524
  call void @CCG_key_top_level(%struct.CCGKey* %key, %struct.CCGSubSurf* %13), !dbg !10525
  %14 = load i32 (i8*, i32, i32)*, i32 (i8*, i32, i32)** %compareDrawOptions.addr, align 8, !dbg !10526
  %15 = load i32, i32* %useColors, align 4, !dbg !10527
  %tobool = icmp ne i32 %15, 0, !dbg !10527
  br i1 %tobool, label %if.then, label %if.end10, !dbg !10529

if.then:                                          ; preds = %entry
  %16 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10530
  %getTessFaceDataArray4 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %16, i32 0, i32 52, !dbg !10532
  %17 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray4, align 8, !dbg !10532
  %18 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10533
  %call5 = call i8* %17(%struct.DerivedMesh* %18, i32 20), !dbg !10530
  %19 = bitcast i8* %call5 to %struct.MCol*, !dbg !10530
  store %struct.MCol* %19, %struct.MCol** %mcol, align 8, !dbg !10534
  %20 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !10535
  %tobool6 = icmp ne %struct.MCol* %20, null, !dbg !10535
  br i1 %tobool6, label %if.end, label %if.then7, !dbg !10537

if.then7:                                         ; preds = %if.then
  %21 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10538
  %getTessFaceDataArray8 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %21, i32 0, i32 52, !dbg !10539
  %22 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray8, align 8, !dbg !10539
  %23 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !10540
  %call9 = call i8* %22(%struct.DerivedMesh* %23, i32 6), !dbg !10538
  %24 = bitcast i8* %call9 to %struct.MCol*, !dbg !10538
  store %struct.MCol* %24, %struct.MCol** %mcol, align 8, !dbg !10541
  br label %if.end, !dbg !10542

if.end:                                           ; preds = %if.then7, %if.then
  br label %if.end10, !dbg !10543

if.end10:                                         ; preds = %if.end, %entry
  %25 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !10544
  %call11 = call i32 @ccgSubSurf_getNumFaces(%struct.CCGSubSurf* %25), !dbg !10545
  store i32 %call11, i32* %totface, align 4, !dbg !10546
  store i32 0, i32* %i, align 4, !dbg !10547
  br label %for.cond, !dbg !10549

for.cond:                                         ; preds = %for.inc269, %if.end10
  %26 = load i32, i32* %i, align 4, !dbg !10550
  %27 = load i32, i32* %totface, align 4, !dbg !10552
  %cmp = icmp slt i32 %26, %27, !dbg !10553
  br i1 %cmp, label %for.body, label %for.end271, !dbg !10554

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f, metadata !10555, metadata !DIExpression()), !dbg !10557
  %28 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !10558
  %faceMap = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %28, i32 0, i32 7, !dbg !10559
  %29 = load %struct.anon.1*, %struct.anon.1** %faceMap, align 8, !dbg !10559
  %30 = load i32, i32* %i, align 4, !dbg !10560
  %idxprom = sext i32 %30 to i64, !dbg !10558
  %arrayidx = getelementptr inbounds %struct.anon.1, %struct.anon.1* %29, i64 %idxprom, !dbg !10558
  %face = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx, i32 0, i32 3, !dbg !10561
  %31 = load %struct.CCGFace*, %struct.CCGFace** %face, align 8, !dbg !10561
  store %struct.CCGFace* %31, %struct.CCGFace** %f, align 8, !dbg !10557
  call void @llvm.dbg.declare(metadata i32* %S, metadata !10562, metadata !DIExpression()), !dbg !10563
  call void @llvm.dbg.declare(metadata i32* %x, metadata !10564, metadata !DIExpression()), !dbg !10565
  call void @llvm.dbg.declare(metadata i32* %y, metadata !10566, metadata !DIExpression()), !dbg !10567
  call void @llvm.dbg.declare(metadata i32* %numVerts, metadata !10568, metadata !DIExpression()), !dbg !10569
  %32 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !10570
  %call12 = call i32 @ccgSubSurf_getFaceNumVerts(%struct.CCGFace* %32), !dbg !10571
  store i32 %call12, i32* %numVerts, align 4, !dbg !10569
  call void @llvm.dbg.declare(metadata i32* %drawSmooth, metadata !10572, metadata !DIExpression()), !dbg !10573
  call void @llvm.dbg.declare(metadata i32* %index, metadata !10574, metadata !DIExpression()), !dbg !10575
  %33 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !10576
  %34 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !10577
  %call13 = call i32 @ccgDM_getFaceMapIndex(%struct.CCGSubSurf* %33, %struct.CCGFace* %34), !dbg !10578
  store i32 %call13, i32* %index, align 4, !dbg !10575
  call void @llvm.dbg.declare(metadata i32* %origIndex, metadata !10579, metadata !DIExpression()), !dbg !10580
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !10581, metadata !DIExpression()), !dbg !10582
  store i8* null, i8** %cp, align 8, !dbg !10582
  call void @llvm.dbg.declare(metadata [4 x [3 x i16]]** %ln, metadata !10583, metadata !DIExpression()), !dbg !10584
  store [4 x [3 x i16]]* null, [4 x [3 x i16]]** %ln, align 8, !dbg !10584
  %35 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !10585
  %call14 = call i8* @ccgSubSurf_getFaceFaceHandle(%struct.CCGFace* %35), !dbg !10585
  %36 = ptrtoint i8* %call14 to i64, !dbg !10585
  %conv = trunc i64 %36 to i32, !dbg !10585
  store i32 %conv, i32* %origIndex, align 4, !dbg !10586
  %37 = load i32, i32* %flag.addr, align 4, !dbg !10587
  %and15 = and i32 %37, 2, !dbg !10589
  %tobool16 = icmp ne i32 %and15, 0, !dbg !10589
  br i1 %tobool16, label %if.then17, label %if.else, !dbg !10590

if.then17:                                        ; preds = %for.body
  store i32 1, i32* %drawSmooth, align 4, !dbg !10591
  br label %if.end29, !dbg !10592

if.else:                                          ; preds = %for.body
  %38 = load %struct.DMFlagMat*, %struct.DMFlagMat** %faceFlags, align 8, !dbg !10593
  %tobool18 = icmp ne %struct.DMFlagMat* %38, null, !dbg !10593
  br i1 %tobool18, label %if.then19, label %if.else27, !dbg !10595

if.then19:                                        ; preds = %if.else
  %39 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !10596
  %tobool20 = icmp ne [4 x [3 x i16]]* %39, null, !dbg !10596
  br i1 %tobool20, label %lor.end, label %lor.rhs, !dbg !10597

lor.rhs:                                          ; preds = %if.then19
  %40 = load %struct.DMFlagMat*, %struct.DMFlagMat** %faceFlags, align 8, !dbg !10598
  %41 = load i32, i32* %origIndex, align 4, !dbg !10599
  %idxprom21 = sext i32 %41 to i64, !dbg !10598
  %arrayidx22 = getelementptr inbounds %struct.DMFlagMat, %struct.DMFlagMat* %40, i64 %idxprom21, !dbg !10598
  %flag23 = getelementptr inbounds %struct.DMFlagMat, %struct.DMFlagMat* %arrayidx22, i32 0, i32 1, !dbg !10600
  %42 = load i8, i8* %flag23, align 2, !dbg !10600
  %conv24 = zext i8 %42 to i32, !dbg !10598
  %and25 = and i32 %conv24, 1, !dbg !10601
  %tobool26 = icmp ne i32 %and25, 0, !dbg !10597
  br label %lor.end, !dbg !10597

lor.end:                                          ; preds = %lor.rhs, %if.then19
  %43 = phi i1 [ true, %if.then19 ], [ %tobool26, %lor.rhs ]
  %lor.ext = zext i1 %43 to i32, !dbg !10597
  store i32 %lor.ext, i32* %drawSmooth, align 4, !dbg !10602
  br label %if.end28, !dbg !10603

if.else27:                                        ; preds = %if.else
  store i32 1, i32* %drawSmooth, align 4, !dbg !10604
  br label %if.end28

if.end28:                                         ; preds = %if.else27, %lor.end
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.then17
  %44 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !10605
  %tobool30 = icmp ne %struct.MCol* %44, null, !dbg !10605
  br i1 %tobool30, label %if.then31, label %if.end34, !dbg !10607

if.then31:                                        ; preds = %if.end29
  %45 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !10608
  %46 = bitcast %struct.MCol* %45 to i8*, !dbg !10610
  store i8* %46, i8** %cp, align 8, !dbg !10611
  %47 = load i32, i32* %gridFaces, align 4, !dbg !10612
  %48 = load i32, i32* %gridFaces, align 4, !dbg !10613
  %mul = mul nsw i32 %47, %48, !dbg !10614
  %49 = load i32, i32* %numVerts, align 4, !dbg !10615
  %mul32 = mul nsw i32 %mul, %49, !dbg !10616
  %mul33 = mul nsw i32 %mul32, 4, !dbg !10617
  %50 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !10618
  %idx.ext = sext i32 %mul33 to i64, !dbg !10618
  %add.ptr = getelementptr inbounds %struct.MCol, %struct.MCol* %50, i64 %idx.ext, !dbg !10618
  store %struct.MCol* %add.ptr, %struct.MCol** %mcol, align 8, !dbg !10618
  br label %if.end34, !dbg !10619

if.end34:                                         ; preds = %if.then31, %if.end29
  %51 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !10620
  %tobool35 = icmp ne [4 x [3 x i16]]* %51, null, !dbg !10620
  br i1 %tobool35, label %if.then36, label %if.end41, !dbg !10622

if.then36:                                        ; preds = %if.end34
  %52 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !10623
  store [4 x [3 x i16]]* %52, [4 x [3 x i16]]** %ln, align 8, !dbg !10625
  %53 = load i32, i32* %gridFaces, align 4, !dbg !10626
  %54 = load i32, i32* %gridFaces, align 4, !dbg !10627
  %mul37 = mul nsw i32 %53, %54, !dbg !10628
  %55 = load i32, i32* %numVerts, align 4, !dbg !10629
  %mul38 = mul nsw i32 %mul37, %55, !dbg !10630
  %56 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !10631
  %idx.ext39 = sext i32 %mul38 to i64, !dbg !10631
  %add.ptr40 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %56, i64 %idx.ext39, !dbg !10631
  store [4 x [3 x i16]]* %add.ptr40, [4 x [3 x i16]]** %lnors, align 8, !dbg !10631
  br label %if.end41, !dbg !10632

if.end41:                                         ; preds = %if.then36, %if.end34
  call void @llvm.dbg.declare(metadata i32* %draw_option, metadata !10633, metadata !DIExpression()), !dbg !10635
  store i32 1, i32* %draw_option, align 4, !dbg !10635
  %57 = load i32, i32* %index, align 4, !dbg !10636
  %cmp42 = icmp eq i32 %57, -1, !dbg !10638
  br i1 %cmp42, label %if.then44, label %if.else50, !dbg !10639

if.then44:                                        ; preds = %if.end41
  %58 = load i32 (i32, i8*)*, i32 (i32, i8*)** %setMaterial.addr, align 8, !dbg !10640
  %59 = load %struct.DMFlagMat*, %struct.DMFlagMat** %faceFlags, align 8, !dbg !10641
  %tobool45 = icmp ne %struct.DMFlagMat* %59, null, !dbg !10641
  br i1 %tobool45, label %cond.true, label %cond.false, !dbg !10641

cond.true:                                        ; preds = %if.then44
  %60 = load %struct.DMFlagMat*, %struct.DMFlagMat** %faceFlags, align 8, !dbg !10642
  %61 = load i32, i32* %origIndex, align 4, !dbg !10643
  %idxprom46 = sext i32 %61 to i64, !dbg !10642
  %arrayidx47 = getelementptr inbounds %struct.DMFlagMat, %struct.DMFlagMat* %60, i64 %idxprom46, !dbg !10642
  %mat_nr = getelementptr inbounds %struct.DMFlagMat, %struct.DMFlagMat* %arrayidx47, i32 0, i32 0, !dbg !10644
  %62 = load i16, i16* %mat_nr, align 2, !dbg !10644
  %conv48 = sext i16 %62 to i32, !dbg !10642
  %add = add nsw i32 %conv48, 1, !dbg !10645
  br label %cond.end, !dbg !10641

cond.false:                                       ; preds = %if.then44
  br label %cond.end, !dbg !10641

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %add, %cond.true ], [ 1, %cond.false ], !dbg !10641
  %call49 = call i32 %58(i32 %cond, i8* null), !dbg !10640
  store i32 %call49, i32* %draw_option, align 4, !dbg !10646
  br label %if.end55, !dbg !10647

if.else50:                                        ; preds = %if.end41
  %63 = load i32 (i8*, i32)*, i32 (i8*, i32)** %setDrawOptions.addr, align 8, !dbg !10648
  %tobool51 = icmp ne i32 (i8*, i32)* %63, null, !dbg !10648
  br i1 %tobool51, label %if.then52, label %if.end54, !dbg !10650

if.then52:                                        ; preds = %if.else50
  %64 = load i32 (i8*, i32)*, i32 (i8*, i32)** %setDrawOptions.addr, align 8, !dbg !10651
  %65 = load i8*, i8** %userData.addr, align 8, !dbg !10652
  %66 = load i32, i32* %index, align 4, !dbg !10653
  %call53 = call i32 %64(i8* %65, i32 %66), !dbg !10651
  store i32 %call53, i32* %draw_option, align 4, !dbg !10654
  br label %if.end54, !dbg !10655

if.end54:                                         ; preds = %if.then52, %if.else50
  br label %if.end55

if.end55:                                         ; preds = %if.end54, %cond.end
  %67 = load i32, i32* %draw_option, align 4, !dbg !10656
  %cmp56 = icmp ne i32 %67, 0, !dbg !10658
  br i1 %cmp56, label %if.then58, label %if.end268, !dbg !10659

if.then58:                                        ; preds = %if.end55
  %68 = load i32, i32* %draw_option, align 4, !dbg !10660
  %cmp59 = icmp eq i32 %68, 3, !dbg !10663
  br i1 %cmp59, label %if.then61, label %if.end62, !dbg !10664

if.then61:                                        ; preds = %if.then58
  call void @glEnable(i32 2882), !dbg !10665
  call void @glPolygonStipple(i8* getelementptr inbounds ([128 x i8], [128 x i8]* @stipple_quarttone, i64 0, i64 0)), !dbg !10667
  br label %if.end62, !dbg !10668

if.end62:                                         ; preds = %if.then61, %if.then58
  call void @glShadeModel(i32 7425), !dbg !10669
  store i32 0, i32* %S, align 4, !dbg !10670
  br label %for.cond63, !dbg !10672

for.cond63:                                       ; preds = %for.inc261, %if.end62
  %69 = load i32, i32* %S, align 4, !dbg !10673
  %70 = load i32, i32* %numVerts, align 4, !dbg !10675
  %cmp64 = icmp slt i32 %69, %70, !dbg !10676
  br i1 %cmp64, label %for.body66, label %for.end263, !dbg !10677

for.body66:                                       ; preds = %for.cond63
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %faceGridData, metadata !10678, metadata !DIExpression()), !dbg !10680
  %71 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !10681
  %72 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !10682
  %73 = load i32, i32* %S, align 4, !dbg !10683
  %call67 = call i8* @ccgSubSurf_getFaceGridDataArray(%struct.CCGSubSurf* %71, %struct.CCGFace* %72, i32 %73), !dbg !10684
  %74 = bitcast i8* %call67 to %struct.CCGElem*, !dbg !10684
  store %struct.CCGElem* %74, %struct.CCGElem** %faceGridData, align 8, !dbg !10680
  %75 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %ln, align 8, !dbg !10685
  %tobool68 = icmp ne [4 x [3 x i16]]* %75, null, !dbg !10685
  br i1 %tobool68, label %if.then69, label %if.else130, !dbg !10687

if.then69:                                        ; preds = %for.body66
  call void @glBegin(i32 7), !dbg !10688
  store i32 0, i32* %y, align 4, !dbg !10690
  br label %for.cond70, !dbg !10692

for.cond70:                                       ; preds = %for.inc127, %if.then69
  %76 = load i32, i32* %y, align 4, !dbg !10693
  %77 = load i32, i32* %gridFaces, align 4, !dbg !10695
  %cmp71 = icmp slt i32 %76, %77, !dbg !10696
  br i1 %cmp71, label %for.body73, label %for.end129, !dbg !10697

for.body73:                                       ; preds = %for.cond70
  store i32 0, i32* %x, align 4, !dbg !10698
  br label %for.cond74, !dbg !10701

for.cond74:                                       ; preds = %for.inc, %for.body73
  %78 = load i32, i32* %x, align 4, !dbg !10702
  %79 = load i32, i32* %gridFaces, align 4, !dbg !10704
  %cmp75 = icmp slt i32 %78, %79, !dbg !10705
  br i1 %cmp75, label %for.body77, label %for.end, !dbg !10706

for.body77:                                       ; preds = %for.cond74
  call void @llvm.dbg.declare(metadata float** %a, metadata !10707, metadata !DIExpression()), !dbg !10709
  %80 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !10710
  %81 = load i32, i32* %x, align 4, !dbg !10711
  %82 = load i32, i32* %y, align 4, !dbg !10712
  %add78 = add nsw i32 %82, 0, !dbg !10713
  %call79 = call float* @CCG_grid_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %80, i32 %81, i32 %add78), !dbg !10714
  store float* %call79, float** %a, align 8, !dbg !10709
  call void @llvm.dbg.declare(metadata float** %b, metadata !10715, metadata !DIExpression()), !dbg !10716
  %83 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !10717
  %84 = load i32, i32* %x, align 4, !dbg !10718
  %add80 = add nsw i32 %84, 1, !dbg !10719
  %85 = load i32, i32* %y, align 4, !dbg !10720
  %add81 = add nsw i32 %85, 0, !dbg !10721
  %call82 = call float* @CCG_grid_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %83, i32 %add80, i32 %add81), !dbg !10722
  store float* %call82, float** %b, align 8, !dbg !10716
  call void @llvm.dbg.declare(metadata float** %c, metadata !10723, metadata !DIExpression()), !dbg !10724
  %86 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !10725
  %87 = load i32, i32* %x, align 4, !dbg !10726
  %add83 = add nsw i32 %87, 1, !dbg !10727
  %88 = load i32, i32* %y, align 4, !dbg !10728
  %add84 = add nsw i32 %88, 1, !dbg !10729
  %call85 = call float* @CCG_grid_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %86, i32 %add83, i32 %add84), !dbg !10730
  store float* %call85, float** %c, align 8, !dbg !10724
  call void @llvm.dbg.declare(metadata float** %d, metadata !10731, metadata !DIExpression()), !dbg !10732
  %89 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !10733
  %90 = load i32, i32* %x, align 4, !dbg !10734
  %91 = load i32, i32* %y, align 4, !dbg !10735
  %add86 = add nsw i32 %91, 1, !dbg !10736
  %call87 = call float* @CCG_grid_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %89, i32 %90, i32 %add86), !dbg !10737
  store float* %call87, float** %d, align 8, !dbg !10732
  %92 = load i8*, i8** %cp, align 8, !dbg !10738
  %tobool88 = icmp ne i8* %92, null, !dbg !10738
  br i1 %tobool88, label %if.then89, label %if.end93, !dbg !10740

if.then89:                                        ; preds = %for.body77
  %93 = load i8*, i8** %cp, align 8, !dbg !10741
  %arrayidx90 = getelementptr inbounds i8, i8* %93, i64 7, !dbg !10741
  %94 = load i8, i8* %arrayidx90, align 1, !dbg !10741
  %95 = load i8*, i8** %cp, align 8, !dbg !10742
  %arrayidx91 = getelementptr inbounds i8, i8* %95, i64 6, !dbg !10742
  %96 = load i8, i8* %arrayidx91, align 1, !dbg !10742
  %97 = load i8*, i8** %cp, align 8, !dbg !10743
  %arrayidx92 = getelementptr inbounds i8, i8* %97, i64 5, !dbg !10743
  %98 = load i8, i8* %arrayidx92, align 1, !dbg !10743
  call void @glColor3ub(i8 zeroext %94, i8 zeroext %96, i8 zeroext %98), !dbg !10744
  br label %if.end93, !dbg !10744

if.end93:                                         ; preds = %if.then89, %for.body77
  %99 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %ln, align 8, !dbg !10745
  %arrayidx94 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %99, i64 0, !dbg !10745
  %arrayidx95 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %arrayidx94, i64 0, i64 1, !dbg !10745
  %arraydecay = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx95, i64 0, i64 0, !dbg !10745
  call void @glNormal3sv(i16* %arraydecay), !dbg !10746
  %100 = load float*, float** %d, align 8, !dbg !10747
  call void @glVertex3fv(float* %100), !dbg !10748
  %101 = load i8*, i8** %cp, align 8, !dbg !10749
  %tobool96 = icmp ne i8* %101, null, !dbg !10749
  br i1 %tobool96, label %if.then97, label %if.end101, !dbg !10751

if.then97:                                        ; preds = %if.end93
  %102 = load i8*, i8** %cp, align 8, !dbg !10752
  %arrayidx98 = getelementptr inbounds i8, i8* %102, i64 11, !dbg !10752
  %103 = load i8, i8* %arrayidx98, align 1, !dbg !10752
  %104 = load i8*, i8** %cp, align 8, !dbg !10753
  %arrayidx99 = getelementptr inbounds i8, i8* %104, i64 10, !dbg !10753
  %105 = load i8, i8* %arrayidx99, align 1, !dbg !10753
  %106 = load i8*, i8** %cp, align 8, !dbg !10754
  %arrayidx100 = getelementptr inbounds i8, i8* %106, i64 9, !dbg !10754
  %107 = load i8, i8* %arrayidx100, align 1, !dbg !10754
  call void @glColor3ub(i8 zeroext %103, i8 zeroext %105, i8 zeroext %107), !dbg !10755
  br label %if.end101, !dbg !10755

if.end101:                                        ; preds = %if.then97, %if.end93
  %108 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %ln, align 8, !dbg !10756
  %arrayidx102 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %108, i64 0, !dbg !10756
  %arrayidx103 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %arrayidx102, i64 0, i64 2, !dbg !10756
  %arraydecay104 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx103, i64 0, i64 0, !dbg !10756
  call void @glNormal3sv(i16* %arraydecay104), !dbg !10757
  %109 = load float*, float** %c, align 8, !dbg !10758
  call void @glVertex3fv(float* %109), !dbg !10759
  %110 = load i8*, i8** %cp, align 8, !dbg !10760
  %tobool105 = icmp ne i8* %110, null, !dbg !10760
  br i1 %tobool105, label %if.then106, label %if.end110, !dbg !10762

if.then106:                                       ; preds = %if.end101
  %111 = load i8*, i8** %cp, align 8, !dbg !10763
  %arrayidx107 = getelementptr inbounds i8, i8* %111, i64 15, !dbg !10763
  %112 = load i8, i8* %arrayidx107, align 1, !dbg !10763
  %113 = load i8*, i8** %cp, align 8, !dbg !10764
  %arrayidx108 = getelementptr inbounds i8, i8* %113, i64 14, !dbg !10764
  %114 = load i8, i8* %arrayidx108, align 1, !dbg !10764
  %115 = load i8*, i8** %cp, align 8, !dbg !10765
  %arrayidx109 = getelementptr inbounds i8, i8* %115, i64 13, !dbg !10765
  %116 = load i8, i8* %arrayidx109, align 1, !dbg !10765
  call void @glColor3ub(i8 zeroext %112, i8 zeroext %114, i8 zeroext %116), !dbg !10766
  br label %if.end110, !dbg !10766

if.end110:                                        ; preds = %if.then106, %if.end101
  %117 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %ln, align 8, !dbg !10767
  %arrayidx111 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %117, i64 0, !dbg !10767
  %arrayidx112 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %arrayidx111, i64 0, i64 3, !dbg !10767
  %arraydecay113 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx112, i64 0, i64 0, !dbg !10767
  call void @glNormal3sv(i16* %arraydecay113), !dbg !10768
  %118 = load float*, float** %b, align 8, !dbg !10769
  call void @glVertex3fv(float* %118), !dbg !10770
  %119 = load i8*, i8** %cp, align 8, !dbg !10771
  %tobool114 = icmp ne i8* %119, null, !dbg !10771
  br i1 %tobool114, label %if.then115, label %if.end119, !dbg !10773

if.then115:                                       ; preds = %if.end110
  %120 = load i8*, i8** %cp, align 8, !dbg !10774
  %arrayidx116 = getelementptr inbounds i8, i8* %120, i64 3, !dbg !10774
  %121 = load i8, i8* %arrayidx116, align 1, !dbg !10774
  %122 = load i8*, i8** %cp, align 8, !dbg !10775
  %arrayidx117 = getelementptr inbounds i8, i8* %122, i64 2, !dbg !10775
  %123 = load i8, i8* %arrayidx117, align 1, !dbg !10775
  %124 = load i8*, i8** %cp, align 8, !dbg !10776
  %arrayidx118 = getelementptr inbounds i8, i8* %124, i64 1, !dbg !10776
  %125 = load i8, i8* %arrayidx118, align 1, !dbg !10776
  call void @glColor3ub(i8 zeroext %121, i8 zeroext %123, i8 zeroext %125), !dbg !10777
  br label %if.end119, !dbg !10777

if.end119:                                        ; preds = %if.then115, %if.end110
  %126 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %ln, align 8, !dbg !10778
  %arrayidx120 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %126, i64 0, !dbg !10778
  %arrayidx121 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %arrayidx120, i64 0, i64 0, !dbg !10778
  %arraydecay122 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx121, i64 0, i64 0, !dbg !10778
  call void @glNormal3sv(i16* %arraydecay122), !dbg !10779
  %127 = load float*, float** %a, align 8, !dbg !10780
  call void @glVertex3fv(float* %127), !dbg !10781
  %128 = load i8*, i8** %cp, align 8, !dbg !10782
  %tobool123 = icmp ne i8* %128, null, !dbg !10782
  br i1 %tobool123, label %if.then124, label %if.end126, !dbg !10784

if.then124:                                       ; preds = %if.end119
  %129 = load i8*, i8** %cp, align 8, !dbg !10785
  %add.ptr125 = getelementptr inbounds i8, i8* %129, i64 16, !dbg !10785
  store i8* %add.ptr125, i8** %cp, align 8, !dbg !10785
  br label %if.end126, !dbg !10786

if.end126:                                        ; preds = %if.then124, %if.end119
  %130 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %ln, align 8, !dbg !10787
  %incdec.ptr = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %130, i32 1, !dbg !10787
  store [4 x [3 x i16]]* %incdec.ptr, [4 x [3 x i16]]** %ln, align 8, !dbg !10787
  br label %for.inc, !dbg !10788

for.inc:                                          ; preds = %if.end126
  %131 = load i32, i32* %x, align 4, !dbg !10789
  %inc = add nsw i32 %131, 1, !dbg !10789
  store i32 %inc, i32* %x, align 4, !dbg !10789
  br label %for.cond74, !dbg !10790, !llvm.loop !10791

for.end:                                          ; preds = %for.cond74
  br label %for.inc127, !dbg !10793

for.inc127:                                       ; preds = %for.end
  %132 = load i32, i32* %y, align 4, !dbg !10794
  %inc128 = add nsw i32 %132, 1, !dbg !10794
  store i32 %inc128, i32* %y, align 4, !dbg !10794
  br label %for.cond70, !dbg !10795, !llvm.loop !10796

for.end129:                                       ; preds = %for.cond70
  call void @glEnd(), !dbg !10798
  br label %if.end260, !dbg !10799

if.else130:                                       ; preds = %for.body66
  %133 = load i32, i32* %drawSmooth, align 4, !dbg !10800
  %tobool131 = icmp ne i32 %133, 0, !dbg !10800
  br i1 %tobool131, label %if.then132, label %if.else202, !dbg !10802

if.then132:                                       ; preds = %if.else130
  store i32 0, i32* %y, align 4, !dbg !10803
  br label %for.cond133, !dbg !10806

for.cond133:                                      ; preds = %for.inc199, %if.then132
  %134 = load i32, i32* %y, align 4, !dbg !10807
  %135 = load i32, i32* %gridFaces, align 4, !dbg !10809
  %cmp134 = icmp slt i32 %134, %135, !dbg !10810
  br i1 %cmp134, label %for.body136, label %for.end201, !dbg !10811

for.body136:                                      ; preds = %for.cond133
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %a137, metadata !10812, metadata !DIExpression()), !dbg !10814
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %b138, metadata !10815, metadata !DIExpression()), !dbg !10816
  call void @glBegin(i32 8), !dbg !10817
  store i32 0, i32* %x, align 4, !dbg !10818
  br label %for.cond139, !dbg !10820

for.cond139:                                      ; preds = %for.inc172, %for.body136
  %136 = load i32, i32* %x, align 4, !dbg !10821
  %137 = load i32, i32* %gridFaces, align 4, !dbg !10823
  %cmp140 = icmp slt i32 %136, %137, !dbg !10824
  br i1 %cmp140, label %for.body142, label %for.end174, !dbg !10825

for.body142:                                      ; preds = %for.cond139
  %138 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !10826
  %139 = load i32, i32* %x, align 4, !dbg !10828
  %140 = load i32, i32* %y, align 4, !dbg !10829
  %add143 = add nsw i32 %140, 0, !dbg !10830
  %call144 = call %struct.CCGElem* @CCG_grid_elem(%struct.CCGKey* %key, %struct.CCGElem* %138, i32 %139, i32 %add143), !dbg !10831
  store %struct.CCGElem* %call144, %struct.CCGElem** %a137, align 8, !dbg !10832
  %141 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !10833
  %142 = load i32, i32* %x, align 4, !dbg !10834
  %143 = load i32, i32* %y, align 4, !dbg !10835
  %add145 = add nsw i32 %143, 1, !dbg !10836
  %call146 = call %struct.CCGElem* @CCG_grid_elem(%struct.CCGKey* %key, %struct.CCGElem* %141, i32 %142, i32 %add145), !dbg !10837
  store %struct.CCGElem* %call146, %struct.CCGElem** %b138, align 8, !dbg !10838
  %144 = load i8*, i8** %cp, align 8, !dbg !10839
  %tobool147 = icmp ne i8* %144, null, !dbg !10839
  br i1 %tobool147, label %if.then148, label %if.end152, !dbg !10841

if.then148:                                       ; preds = %for.body142
  %145 = load i8*, i8** %cp, align 8, !dbg !10842
  %arrayidx149 = getelementptr inbounds i8, i8* %145, i64 3, !dbg !10842
  %146 = load i8, i8* %arrayidx149, align 1, !dbg !10842
  %147 = load i8*, i8** %cp, align 8, !dbg !10843
  %arrayidx150 = getelementptr inbounds i8, i8* %147, i64 2, !dbg !10843
  %148 = load i8, i8* %arrayidx150, align 1, !dbg !10843
  %149 = load i8*, i8** %cp, align 8, !dbg !10844
  %arrayidx151 = getelementptr inbounds i8, i8* %149, i64 1, !dbg !10844
  %150 = load i8, i8* %arrayidx151, align 1, !dbg !10844
  call void @glColor3ub(i8 zeroext %146, i8 zeroext %148, i8 zeroext %150), !dbg !10845
  br label %if.end152, !dbg !10845

if.end152:                                        ; preds = %if.then148, %for.body142
  %151 = load %struct.CCGElem*, %struct.CCGElem** %a137, align 8, !dbg !10846
  %call153 = call float* @CCG_elem_no(%struct.CCGKey* %key, %struct.CCGElem* %151), !dbg !10847
  call void @glNormal3fv(float* %call153), !dbg !10848
  %152 = load %struct.CCGElem*, %struct.CCGElem** %a137, align 8, !dbg !10849
  %call154 = call float* @CCG_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %152), !dbg !10850
  call void @glVertex3fv(float* %call154), !dbg !10851
  %153 = load i8*, i8** %cp, align 8, !dbg !10852
  %tobool155 = icmp ne i8* %153, null, !dbg !10852
  br i1 %tobool155, label %if.then156, label %if.end160, !dbg !10854

if.then156:                                       ; preds = %if.end152
  %154 = load i8*, i8** %cp, align 8, !dbg !10855
  %arrayidx157 = getelementptr inbounds i8, i8* %154, i64 7, !dbg !10855
  %155 = load i8, i8* %arrayidx157, align 1, !dbg !10855
  %156 = load i8*, i8** %cp, align 8, !dbg !10856
  %arrayidx158 = getelementptr inbounds i8, i8* %156, i64 6, !dbg !10856
  %157 = load i8, i8* %arrayidx158, align 1, !dbg !10856
  %158 = load i8*, i8** %cp, align 8, !dbg !10857
  %arrayidx159 = getelementptr inbounds i8, i8* %158, i64 5, !dbg !10857
  %159 = load i8, i8* %arrayidx159, align 1, !dbg !10857
  call void @glColor3ub(i8 zeroext %155, i8 zeroext %157, i8 zeroext %159), !dbg !10858
  br label %if.end160, !dbg !10858

if.end160:                                        ; preds = %if.then156, %if.end152
  %160 = load %struct.CCGElem*, %struct.CCGElem** %b138, align 8, !dbg !10859
  %call161 = call float* @CCG_elem_no(%struct.CCGKey* %key, %struct.CCGElem* %160), !dbg !10860
  call void @glNormal3fv(float* %call161), !dbg !10861
  %161 = load %struct.CCGElem*, %struct.CCGElem** %b138, align 8, !dbg !10862
  %call162 = call float* @CCG_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %161), !dbg !10863
  call void @glVertex3fv(float* %call162), !dbg !10864
  %162 = load i32, i32* %x, align 4, !dbg !10865
  %163 = load i32, i32* %gridFaces, align 4, !dbg !10867
  %sub163 = sub nsw i32 %163, 1, !dbg !10868
  %cmp164 = icmp ne i32 %162, %sub163, !dbg !10869
  br i1 %cmp164, label %if.then166, label %if.end171, !dbg !10870

if.then166:                                       ; preds = %if.end160
  %164 = load i8*, i8** %cp, align 8, !dbg !10871
  %tobool167 = icmp ne i8* %164, null, !dbg !10871
  br i1 %tobool167, label %if.then168, label %if.end170, !dbg !10874

if.then168:                                       ; preds = %if.then166
  %165 = load i8*, i8** %cp, align 8, !dbg !10875
  %add.ptr169 = getelementptr inbounds i8, i8* %165, i64 16, !dbg !10875
  store i8* %add.ptr169, i8** %cp, align 8, !dbg !10875
  br label %if.end170, !dbg !10876

if.end170:                                        ; preds = %if.then168, %if.then166
  br label %if.end171, !dbg !10877

if.end171:                                        ; preds = %if.end170, %if.end160
  br label %for.inc172, !dbg !10878

for.inc172:                                       ; preds = %if.end171
  %166 = load i32, i32* %x, align 4, !dbg !10879
  %inc173 = add nsw i32 %166, 1, !dbg !10879
  store i32 %inc173, i32* %x, align 4, !dbg !10879
  br label %for.cond139, !dbg !10880, !llvm.loop !10881

for.end174:                                       ; preds = %for.cond139
  %167 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !10883
  %168 = load i32, i32* %x, align 4, !dbg !10884
  %169 = load i32, i32* %y, align 4, !dbg !10885
  %add175 = add nsw i32 %169, 0, !dbg !10886
  %call176 = call %struct.CCGElem* @CCG_grid_elem(%struct.CCGKey* %key, %struct.CCGElem* %167, i32 %168, i32 %add175), !dbg !10887
  store %struct.CCGElem* %call176, %struct.CCGElem** %a137, align 8, !dbg !10888
  %170 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !10889
  %171 = load i32, i32* %x, align 4, !dbg !10890
  %172 = load i32, i32* %y, align 4, !dbg !10891
  %add177 = add nsw i32 %172, 1, !dbg !10892
  %call178 = call %struct.CCGElem* @CCG_grid_elem(%struct.CCGKey* %key, %struct.CCGElem* %170, i32 %171, i32 %add177), !dbg !10893
  store %struct.CCGElem* %call178, %struct.CCGElem** %b138, align 8, !dbg !10894
  %173 = load i8*, i8** %cp, align 8, !dbg !10895
  %tobool179 = icmp ne i8* %173, null, !dbg !10895
  br i1 %tobool179, label %if.then180, label %if.end184, !dbg !10897

if.then180:                                       ; preds = %for.end174
  %174 = load i8*, i8** %cp, align 8, !dbg !10898
  %arrayidx181 = getelementptr inbounds i8, i8* %174, i64 15, !dbg !10898
  %175 = load i8, i8* %arrayidx181, align 1, !dbg !10898
  %176 = load i8*, i8** %cp, align 8, !dbg !10899
  %arrayidx182 = getelementptr inbounds i8, i8* %176, i64 14, !dbg !10899
  %177 = load i8, i8* %arrayidx182, align 1, !dbg !10899
  %178 = load i8*, i8** %cp, align 8, !dbg !10900
  %arrayidx183 = getelementptr inbounds i8, i8* %178, i64 13, !dbg !10900
  %179 = load i8, i8* %arrayidx183, align 1, !dbg !10900
  call void @glColor3ub(i8 zeroext %175, i8 zeroext %177, i8 zeroext %179), !dbg !10901
  br label %if.end184, !dbg !10901

if.end184:                                        ; preds = %if.then180, %for.end174
  %180 = load %struct.CCGElem*, %struct.CCGElem** %a137, align 8, !dbg !10902
  %call185 = call float* @CCG_elem_no(%struct.CCGKey* %key, %struct.CCGElem* %180), !dbg !10903
  call void @glNormal3fv(float* %call185), !dbg !10904
  %181 = load %struct.CCGElem*, %struct.CCGElem** %a137, align 8, !dbg !10905
  %call186 = call float* @CCG_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %181), !dbg !10906
  call void @glVertex3fv(float* %call186), !dbg !10907
  %182 = load i8*, i8** %cp, align 8, !dbg !10908
  %tobool187 = icmp ne i8* %182, null, !dbg !10908
  br i1 %tobool187, label %if.then188, label %if.end192, !dbg !10910

if.then188:                                       ; preds = %if.end184
  %183 = load i8*, i8** %cp, align 8, !dbg !10911
  %arrayidx189 = getelementptr inbounds i8, i8* %183, i64 11, !dbg !10911
  %184 = load i8, i8* %arrayidx189, align 1, !dbg !10911
  %185 = load i8*, i8** %cp, align 8, !dbg !10912
  %arrayidx190 = getelementptr inbounds i8, i8* %185, i64 10, !dbg !10912
  %186 = load i8, i8* %arrayidx190, align 1, !dbg !10912
  %187 = load i8*, i8** %cp, align 8, !dbg !10913
  %arrayidx191 = getelementptr inbounds i8, i8* %187, i64 9, !dbg !10913
  %188 = load i8, i8* %arrayidx191, align 1, !dbg !10913
  call void @glColor3ub(i8 zeroext %184, i8 zeroext %186, i8 zeroext %188), !dbg !10914
  br label %if.end192, !dbg !10914

if.end192:                                        ; preds = %if.then188, %if.end184
  %189 = load %struct.CCGElem*, %struct.CCGElem** %b138, align 8, !dbg !10915
  %call193 = call float* @CCG_elem_no(%struct.CCGKey* %key, %struct.CCGElem* %189), !dbg !10916
  call void @glNormal3fv(float* %call193), !dbg !10917
  %190 = load %struct.CCGElem*, %struct.CCGElem** %b138, align 8, !dbg !10918
  %call194 = call float* @CCG_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %190), !dbg !10919
  call void @glVertex3fv(float* %call194), !dbg !10920
  %191 = load i8*, i8** %cp, align 8, !dbg !10921
  %tobool195 = icmp ne i8* %191, null, !dbg !10921
  br i1 %tobool195, label %if.then196, label %if.end198, !dbg !10923

if.then196:                                       ; preds = %if.end192
  %192 = load i8*, i8** %cp, align 8, !dbg !10924
  %add.ptr197 = getelementptr inbounds i8, i8* %192, i64 16, !dbg !10924
  store i8* %add.ptr197, i8** %cp, align 8, !dbg !10924
  br label %if.end198, !dbg !10925

if.end198:                                        ; preds = %if.then196, %if.end192
  call void @glEnd(), !dbg !10926
  br label %for.inc199, !dbg !10927

for.inc199:                                       ; preds = %if.end198
  %193 = load i32, i32* %y, align 4, !dbg !10928
  %inc200 = add nsw i32 %193, 1, !dbg !10928
  store i32 %inc200, i32* %y, align 4, !dbg !10928
  br label %for.cond133, !dbg !10929, !llvm.loop !10930

for.end201:                                       ; preds = %for.cond133
  br label %if.end259, !dbg !10932

if.else202:                                       ; preds = %if.else130
  call void @glBegin(i32 7), !dbg !10933
  store i32 0, i32* %y, align 4, !dbg !10935
  br label %for.cond203, !dbg !10937

for.cond203:                                      ; preds = %for.inc256, %if.else202
  %194 = load i32, i32* %y, align 4, !dbg !10938
  %195 = load i32, i32* %gridFaces, align 4, !dbg !10940
  %cmp204 = icmp slt i32 %194, %195, !dbg !10941
  br i1 %cmp204, label %for.body206, label %for.end258, !dbg !10942

for.body206:                                      ; preds = %for.cond203
  store i32 0, i32* %x, align 4, !dbg !10943
  br label %for.cond207, !dbg !10946

for.cond207:                                      ; preds = %for.inc253, %for.body206
  %196 = load i32, i32* %x, align 4, !dbg !10947
  %197 = load i32, i32* %gridFaces, align 4, !dbg !10949
  %cmp208 = icmp slt i32 %196, %197, !dbg !10950
  br i1 %cmp208, label %for.body210, label %for.end255, !dbg !10951

for.body210:                                      ; preds = %for.cond207
  call void @llvm.dbg.declare(metadata float** %a211, metadata !10952, metadata !DIExpression()), !dbg !10954
  %198 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !10955
  %199 = load i32, i32* %x, align 4, !dbg !10956
  %200 = load i32, i32* %y, align 4, !dbg !10957
  %add212 = add nsw i32 %200, 0, !dbg !10958
  %call213 = call float* @CCG_grid_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %198, i32 %199, i32 %add212), !dbg !10959
  store float* %call213, float** %a211, align 8, !dbg !10954
  call void @llvm.dbg.declare(metadata float** %b214, metadata !10960, metadata !DIExpression()), !dbg !10961
  %201 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !10962
  %202 = load i32, i32* %x, align 4, !dbg !10963
  %add215 = add nsw i32 %202, 1, !dbg !10964
  %203 = load i32, i32* %y, align 4, !dbg !10965
  %add216 = add nsw i32 %203, 0, !dbg !10966
  %call217 = call float* @CCG_grid_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %201, i32 %add215, i32 %add216), !dbg !10967
  store float* %call217, float** %b214, align 8, !dbg !10961
  call void @llvm.dbg.declare(metadata float** %c218, metadata !10968, metadata !DIExpression()), !dbg !10969
  %204 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !10970
  %205 = load i32, i32* %x, align 4, !dbg !10971
  %add219 = add nsw i32 %205, 1, !dbg !10972
  %206 = load i32, i32* %y, align 4, !dbg !10973
  %add220 = add nsw i32 %206, 1, !dbg !10974
  %call221 = call float* @CCG_grid_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %204, i32 %add219, i32 %add220), !dbg !10975
  store float* %call221, float** %c218, align 8, !dbg !10969
  call void @llvm.dbg.declare(metadata float** %d222, metadata !10976, metadata !DIExpression()), !dbg !10977
  %207 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !10978
  %208 = load i32, i32* %x, align 4, !dbg !10979
  %209 = load i32, i32* %y, align 4, !dbg !10980
  %add223 = add nsw i32 %209, 1, !dbg !10981
  %call224 = call float* @CCG_grid_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %207, i32 %208, i32 %add223), !dbg !10982
  store float* %call224, float** %d222, align 8, !dbg !10977
  %210 = load float*, float** %a211, align 8, !dbg !10983
  %211 = load float*, float** %b214, align 8, !dbg !10984
  %212 = load float*, float** %c218, align 8, !dbg !10985
  %213 = load float*, float** %d222, align 8, !dbg !10986
  call void @ccgDM_glNormalFast(float* %210, float* %211, float* %212, float* %213), !dbg !10987
  %214 = load i8*, i8** %cp, align 8, !dbg !10988
  %tobool225 = icmp ne i8* %214, null, !dbg !10988
  br i1 %tobool225, label %if.then226, label %if.end230, !dbg !10990

if.then226:                                       ; preds = %for.body210
  %215 = load i8*, i8** %cp, align 8, !dbg !10991
  %arrayidx227 = getelementptr inbounds i8, i8* %215, i64 7, !dbg !10991
  %216 = load i8, i8* %arrayidx227, align 1, !dbg !10991
  %217 = load i8*, i8** %cp, align 8, !dbg !10992
  %arrayidx228 = getelementptr inbounds i8, i8* %217, i64 6, !dbg !10992
  %218 = load i8, i8* %arrayidx228, align 1, !dbg !10992
  %219 = load i8*, i8** %cp, align 8, !dbg !10993
  %arrayidx229 = getelementptr inbounds i8, i8* %219, i64 5, !dbg !10993
  %220 = load i8, i8* %arrayidx229, align 1, !dbg !10993
  call void @glColor3ub(i8 zeroext %216, i8 zeroext %218, i8 zeroext %220), !dbg !10994
  br label %if.end230, !dbg !10994

if.end230:                                        ; preds = %if.then226, %for.body210
  %221 = load float*, float** %d222, align 8, !dbg !10995
  call void @glVertex3fv(float* %221), !dbg !10996
  %222 = load i8*, i8** %cp, align 8, !dbg !10997
  %tobool231 = icmp ne i8* %222, null, !dbg !10997
  br i1 %tobool231, label %if.then232, label %if.end236, !dbg !10999

if.then232:                                       ; preds = %if.end230
  %223 = load i8*, i8** %cp, align 8, !dbg !11000
  %arrayidx233 = getelementptr inbounds i8, i8* %223, i64 11, !dbg !11000
  %224 = load i8, i8* %arrayidx233, align 1, !dbg !11000
  %225 = load i8*, i8** %cp, align 8, !dbg !11001
  %arrayidx234 = getelementptr inbounds i8, i8* %225, i64 10, !dbg !11001
  %226 = load i8, i8* %arrayidx234, align 1, !dbg !11001
  %227 = load i8*, i8** %cp, align 8, !dbg !11002
  %arrayidx235 = getelementptr inbounds i8, i8* %227, i64 9, !dbg !11002
  %228 = load i8, i8* %arrayidx235, align 1, !dbg !11002
  call void @glColor3ub(i8 zeroext %224, i8 zeroext %226, i8 zeroext %228), !dbg !11003
  br label %if.end236, !dbg !11003

if.end236:                                        ; preds = %if.then232, %if.end230
  %229 = load float*, float** %c218, align 8, !dbg !11004
  call void @glVertex3fv(float* %229), !dbg !11005
  %230 = load i8*, i8** %cp, align 8, !dbg !11006
  %tobool237 = icmp ne i8* %230, null, !dbg !11006
  br i1 %tobool237, label %if.then238, label %if.end242, !dbg !11008

if.then238:                                       ; preds = %if.end236
  %231 = load i8*, i8** %cp, align 8, !dbg !11009
  %arrayidx239 = getelementptr inbounds i8, i8* %231, i64 15, !dbg !11009
  %232 = load i8, i8* %arrayidx239, align 1, !dbg !11009
  %233 = load i8*, i8** %cp, align 8, !dbg !11010
  %arrayidx240 = getelementptr inbounds i8, i8* %233, i64 14, !dbg !11010
  %234 = load i8, i8* %arrayidx240, align 1, !dbg !11010
  %235 = load i8*, i8** %cp, align 8, !dbg !11011
  %arrayidx241 = getelementptr inbounds i8, i8* %235, i64 13, !dbg !11011
  %236 = load i8, i8* %arrayidx241, align 1, !dbg !11011
  call void @glColor3ub(i8 zeroext %232, i8 zeroext %234, i8 zeroext %236), !dbg !11012
  br label %if.end242, !dbg !11012

if.end242:                                        ; preds = %if.then238, %if.end236
  %237 = load float*, float** %b214, align 8, !dbg !11013
  call void @glVertex3fv(float* %237), !dbg !11014
  %238 = load i8*, i8** %cp, align 8, !dbg !11015
  %tobool243 = icmp ne i8* %238, null, !dbg !11015
  br i1 %tobool243, label %if.then244, label %if.end248, !dbg !11017

if.then244:                                       ; preds = %if.end242
  %239 = load i8*, i8** %cp, align 8, !dbg !11018
  %arrayidx245 = getelementptr inbounds i8, i8* %239, i64 3, !dbg !11018
  %240 = load i8, i8* %arrayidx245, align 1, !dbg !11018
  %241 = load i8*, i8** %cp, align 8, !dbg !11019
  %arrayidx246 = getelementptr inbounds i8, i8* %241, i64 2, !dbg !11019
  %242 = load i8, i8* %arrayidx246, align 1, !dbg !11019
  %243 = load i8*, i8** %cp, align 8, !dbg !11020
  %arrayidx247 = getelementptr inbounds i8, i8* %243, i64 1, !dbg !11020
  %244 = load i8, i8* %arrayidx247, align 1, !dbg !11020
  call void @glColor3ub(i8 zeroext %240, i8 zeroext %242, i8 zeroext %244), !dbg !11021
  br label %if.end248, !dbg !11021

if.end248:                                        ; preds = %if.then244, %if.end242
  %245 = load float*, float** %a211, align 8, !dbg !11022
  call void @glVertex3fv(float* %245), !dbg !11023
  %246 = load i8*, i8** %cp, align 8, !dbg !11024
  %tobool249 = icmp ne i8* %246, null, !dbg !11024
  br i1 %tobool249, label %if.then250, label %if.end252, !dbg !11026

if.then250:                                       ; preds = %if.end248
  %247 = load i8*, i8** %cp, align 8, !dbg !11027
  %add.ptr251 = getelementptr inbounds i8, i8* %247, i64 16, !dbg !11027
  store i8* %add.ptr251, i8** %cp, align 8, !dbg !11027
  br label %if.end252, !dbg !11028

if.end252:                                        ; preds = %if.then250, %if.end248
  br label %for.inc253, !dbg !11029

for.inc253:                                       ; preds = %if.end252
  %248 = load i32, i32* %x, align 4, !dbg !11030
  %inc254 = add nsw i32 %248, 1, !dbg !11030
  store i32 %inc254, i32* %x, align 4, !dbg !11030
  br label %for.cond207, !dbg !11031, !llvm.loop !11032

for.end255:                                       ; preds = %for.cond207
  br label %for.inc256, !dbg !11034

for.inc256:                                       ; preds = %for.end255
  %249 = load i32, i32* %y, align 4, !dbg !11035
  %inc257 = add nsw i32 %249, 1, !dbg !11035
  store i32 %inc257, i32* %y, align 4, !dbg !11035
  br label %for.cond203, !dbg !11036, !llvm.loop !11037

for.end258:                                       ; preds = %for.cond203
  call void @glEnd(), !dbg !11039
  br label %if.end259

if.end259:                                        ; preds = %for.end258, %for.end201
  br label %if.end260

if.end260:                                        ; preds = %if.end259, %for.end129
  br label %for.inc261, !dbg !11040

for.inc261:                                       ; preds = %if.end260
  %250 = load i32, i32* %S, align 4, !dbg !11041
  %inc262 = add nsw i32 %250, 1, !dbg !11041
  store i32 %inc262, i32* %S, align 4, !dbg !11041
  br label %for.cond63, !dbg !11042, !llvm.loop !11043

for.end263:                                       ; preds = %for.cond63
  %251 = load i32, i32* %draw_option, align 4, !dbg !11045
  %cmp264 = icmp eq i32 %251, 3, !dbg !11047
  br i1 %cmp264, label %if.then266, label %if.end267, !dbg !11048

if.then266:                                       ; preds = %for.end263
  call void @glDisable(i32 2882), !dbg !11049
  br label %if.end267, !dbg !11049

if.end267:                                        ; preds = %if.then266, %for.end263
  br label %if.end268, !dbg !11050

if.end268:                                        ; preds = %if.end267, %if.end55
  br label %for.inc269, !dbg !11051

for.inc269:                                       ; preds = %if.end268
  %252 = load i32, i32* %i, align 4, !dbg !11052
  %inc270 = add nsw i32 %252, 1, !dbg !11052
  store i32 %inc270, i32* %i, align 4, !dbg !11052
  br label %for.cond, !dbg !11053, !llvm.loop !11054

for.end271:                                       ; preds = %for.cond
  ret void, !dbg !11056
}

; Function Attrs: noinline nounwind uwtable
define internal void @ccgDM_drawMappedFacesTex(%struct.DerivedMesh* %dm, i32 (i8*, i32)* %setDrawOptions, i32 (i8*, i32, i32)* %compareDrawOptions, i8* %userData, i32 %flag) #0 !dbg !11057 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %setDrawOptions.addr = alloca i32 (i8*, i32)*, align 8
  %compareDrawOptions.addr = alloca i32 (i8*, i32, i32)*, align 8
  %userData.addr = alloca i8*, align 8
  %flag.addr = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !11058, metadata !DIExpression()), !dbg !11059
  store i32 (i8*, i32)* %setDrawOptions, i32 (i8*, i32)** %setDrawOptions.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i32)** %setDrawOptions.addr, metadata !11060, metadata !DIExpression()), !dbg !11061
  store i32 (i8*, i32, i32)* %compareDrawOptions, i32 (i8*, i32, i32)** %compareDrawOptions.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i32, i32)** %compareDrawOptions.addr, metadata !11062, metadata !DIExpression()), !dbg !11063
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !11064, metadata !DIExpression()), !dbg !11065
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !11066, metadata !DIExpression()), !dbg !11067
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !11068
  %1 = load i32 (i8*, i32)*, i32 (i8*, i32)** %setDrawOptions.addr, align 8, !dbg !11069
  %2 = load i32 (i8*, i32, i32)*, i32 (i8*, i32, i32)** %compareDrawOptions.addr, align 8, !dbg !11070
  %3 = load i8*, i8** %userData.addr, align 8, !dbg !11071
  %4 = load i32, i32* %flag.addr, align 4, !dbg !11072
  call void @ccgDM_drawFacesTex_common(%struct.DerivedMesh* %0, i32 (%struct.MTFace*, i8, i32)* null, i32 (i8*, i32)* %1, i32 (i8*, i32, i32)* %2, i8* %3, i32 %4), !dbg !11073
  ret void, !dbg !11074
}

; Function Attrs: noinline nounwind uwtable
define internal void @ccgDM_drawMappedFacesGLSL(%struct.DerivedMesh* %dm, i32 (i32, i8*)* %setMaterial, i32 (i8*, i32)* %setDrawOptions, i8* %userData) #0 !dbg !11075 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %setMaterial.addr = alloca i32 (i32, i8*)*, align 8
  %setDrawOptions.addr = alloca i32 (i8*, i32)*, align 8
  %userData.addr = alloca i8*, align 8
  %ccgdm = alloca %struct.CCGDerivedMesh*, align 8
  %ss = alloca %struct.CCGSubSurf*, align 8
  %key = alloca %struct.CCGKey, align 4
  %gattribs = alloca %struct.GPUVertexAttribs, align 4
  %attribs = alloca %struct.DMVertexAttribs, align 8
  %gridSize = alloca i32, align 4
  %gridFaces = alloca i32, align 4
  %edgeSize = alloca i32, align 4
  %faceFlags = alloca %struct.DMFlagMat*, align 8
  %lnors = alloca [4 x [3 x i16]]*, align 8
  %a = alloca i32, align 4
  %i = alloca i32, align 4
  %do_draw = alloca i32, align 4
  %numVerts = alloca i32, align 4
  %matnr = alloca i32, align 4
  %new_matnr = alloca i32, align 4
  %totface = alloca i32, align 4
  %f = alloca %struct.CCGFace*, align 8
  %ln = alloca [4 x [3 x i16]]*, align 8
  %S = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %drawSmooth = alloca i32, align 4
  %index = alloca i32, align 4
  %origIndex = alloca i32, align 4
  %faceGridData = alloca %struct.CCGElem*, align 8
  %vda = alloca %struct.CCGElem*, align 8
  %vdb = alloca %struct.CCGElem*, align 8
  %aco = alloca float*, align 8
  %bco = alloca float*, align 8
  %cco = alloca float*, align 8
  %dco = alloca float*, align 8
  %aco193 = alloca float*, align 8
  %bco195 = alloca float*, align 8
  %cco198 = alloca float*, align 8
  %dco202 = alloca float*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !11076, metadata !DIExpression()), !dbg !11077
  store i32 (i32, i8*)* %setMaterial, i32 (i32, i8*)** %setMaterial.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %setMaterial.addr, metadata !11078, metadata !DIExpression()), !dbg !11079
  store i32 (i8*, i32)* %setDrawOptions, i32 (i8*, i32)** %setDrawOptions.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i32)** %setDrawOptions.addr, metadata !11080, metadata !DIExpression()), !dbg !11081
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !11082, metadata !DIExpression()), !dbg !11083
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm, metadata !11084, metadata !DIExpression()), !dbg !11085
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !11086
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CCGDerivedMesh*, !dbg !11087
  store %struct.CCGDerivedMesh* %1, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !11085
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss, metadata !11088, metadata !DIExpression()), !dbg !11089
  %2 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !11090
  %ss1 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %2, i32 0, i32 1, !dbg !11091
  %3 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss1, align 8, !dbg !11091
  store %struct.CCGSubSurf* %3, %struct.CCGSubSurf** %ss, align 8, !dbg !11089
  call void @llvm.dbg.declare(metadata %struct.CCGKey* %key, metadata !11092, metadata !DIExpression()), !dbg !11093
  call void @llvm.dbg.declare(metadata %struct.GPUVertexAttribs* %gattribs, metadata !11094, metadata !DIExpression()), !dbg !11109
  call void @llvm.dbg.declare(metadata %struct.DMVertexAttribs* %attribs, metadata !11110, metadata !DIExpression()), !dbg !11146
  %4 = bitcast %struct.DMVertexAttribs* %attribs to i8*, !dbg !11146
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 376, i1 false), !dbg !11146
  call void @llvm.dbg.declare(metadata i32* %gridSize, metadata !11147, metadata !DIExpression()), !dbg !11148
  %5 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !11149
  %call = call i32 @ccgSubSurf_getGridSize(%struct.CCGSubSurf* %5), !dbg !11150
  store i32 %call, i32* %gridSize, align 4, !dbg !11148
  call void @llvm.dbg.declare(metadata i32* %gridFaces, metadata !11151, metadata !DIExpression()), !dbg !11152
  %6 = load i32, i32* %gridSize, align 4, !dbg !11153
  %sub = sub nsw i32 %6, 1, !dbg !11154
  store i32 %sub, i32* %gridFaces, align 4, !dbg !11152
  call void @llvm.dbg.declare(metadata i32* %edgeSize, metadata !11155, metadata !DIExpression()), !dbg !11156
  %7 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !11157
  %call2 = call i32 @ccgSubSurf_getEdgeSize(%struct.CCGSubSurf* %7), !dbg !11158
  store i32 %call2, i32* %edgeSize, align 4, !dbg !11156
  call void @llvm.dbg.declare(metadata %struct.DMFlagMat** %faceFlags, metadata !11159, metadata !DIExpression()), !dbg !11160
  %8 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !11161
  %faceFlags3 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %8, i32 0, i32 9, !dbg !11162
  %9 = load %struct.DMFlagMat*, %struct.DMFlagMat** %faceFlags3, align 8, !dbg !11162
  store %struct.DMFlagMat* %9, %struct.DMFlagMat** %faceFlags, align 8, !dbg !11160
  call void @llvm.dbg.declare(metadata [4 x [3 x i16]]** %lnors, metadata !11163, metadata !DIExpression()), !dbg !11164
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !11165
  %getTessFaceDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %10, i32 0, i32 52, !dbg !11166
  %11 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray, align 8, !dbg !11166
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !11167
  %call4 = call i8* %11(%struct.DerivedMesh* %12, i32 40), !dbg !11165
  %13 = bitcast i8* %call4 to [4 x [3 x i16]]*, !dbg !11165
  store [4 x [3 x i16]]* %13, [4 x [3 x i16]]** %lnors, align 8, !dbg !11164
  call void @llvm.dbg.declare(metadata i32* %a, metadata !11168, metadata !DIExpression()), !dbg !11169
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11170, metadata !DIExpression()), !dbg !11171
  call void @llvm.dbg.declare(metadata i32* %do_draw, metadata !11172, metadata !DIExpression()), !dbg !11173
  call void @llvm.dbg.declare(metadata i32* %numVerts, metadata !11174, metadata !DIExpression()), !dbg !11175
  call void @llvm.dbg.declare(metadata i32* %matnr, metadata !11176, metadata !DIExpression()), !dbg !11177
  call void @llvm.dbg.declare(metadata i32* %new_matnr, metadata !11178, metadata !DIExpression()), !dbg !11179
  call void @llvm.dbg.declare(metadata i32* %totface, metadata !11180, metadata !DIExpression()), !dbg !11181
  %14 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !11182
  call void @CCG_key_top_level(%struct.CCGKey* %key, %struct.CCGSubSurf* %14), !dbg !11183
  %15 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !11184
  call void @ccgdm_pbvh_update(%struct.CCGDerivedMesh* %15), !dbg !11185
  store i32 0, i32* %do_draw, align 4, !dbg !11186
  store i32 -1, i32* %matnr, align 4, !dbg !11187
  %16 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !11188
  %call5 = call i32 @ccgSubSurf_getNumFaces(%struct.CCGSubSurf* %16), !dbg !11189
  store i32 %call5, i32* %totface, align 4, !dbg !11190
  store i32 0, i32* %a, align 4, !dbg !11191
  store i32 0, i32* %i, align 4, !dbg !11193
  br label %for.cond, !dbg !11194

for.cond:                                         ; preds = %for.inc249, %entry
  %17 = load i32, i32* %i, align 4, !dbg !11195
  %18 = load i32, i32* %totface, align 4, !dbg !11197
  %cmp = icmp slt i32 %17, %18, !dbg !11198
  br i1 %cmp, label %for.body, label %for.end251, !dbg !11199

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f, metadata !11200, metadata !DIExpression()), !dbg !11202
  %19 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !11203
  %faceMap = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %19, i32 0, i32 7, !dbg !11204
  %20 = load %struct.anon.1*, %struct.anon.1** %faceMap, align 8, !dbg !11204
  %21 = load i32, i32* %i, align 4, !dbg !11205
  %idxprom = sext i32 %21 to i64, !dbg !11203
  %arrayidx = getelementptr inbounds %struct.anon.1, %struct.anon.1* %20, i64 %idxprom, !dbg !11203
  %face = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx, i32 0, i32 3, !dbg !11206
  %22 = load %struct.CCGFace*, %struct.CCGFace** %face, align 8, !dbg !11206
  store %struct.CCGFace* %22, %struct.CCGFace** %f, align 8, !dbg !11202
  call void @llvm.dbg.declare(metadata [4 x [3 x i16]]** %ln, metadata !11207, metadata !DIExpression()), !dbg !11208
  store [4 x [3 x i16]]* null, [4 x [3 x i16]]** %ln, align 8, !dbg !11208
  call void @llvm.dbg.declare(metadata i32* %S, metadata !11209, metadata !DIExpression()), !dbg !11210
  call void @llvm.dbg.declare(metadata i32* %x, metadata !11211, metadata !DIExpression()), !dbg !11212
  call void @llvm.dbg.declare(metadata i32* %y, metadata !11213, metadata !DIExpression()), !dbg !11214
  call void @llvm.dbg.declare(metadata i32* %drawSmooth, metadata !11215, metadata !DIExpression()), !dbg !11216
  call void @llvm.dbg.declare(metadata i32* %index, metadata !11217, metadata !DIExpression()), !dbg !11218
  %23 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !11219
  %call6 = call i8* @ccgSubSurf_getFaceFaceHandle(%struct.CCGFace* %23), !dbg !11219
  %24 = ptrtoint i8* %call6 to i64, !dbg !11219
  %conv = trunc i64 %24 to i32, !dbg !11219
  store i32 %conv, i32* %index, align 4, !dbg !11218
  call void @llvm.dbg.declare(metadata i32* %origIndex, metadata !11220, metadata !DIExpression()), !dbg !11221
  %25 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !11222
  %26 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !11223
  %call7 = call i32 @ccgDM_getFaceMapIndex(%struct.CCGSubSurf* %25, %struct.CCGFace* %26), !dbg !11224
  store i32 %call7, i32* %origIndex, align 4, !dbg !11221
  %27 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !11225
  %call8 = call i32 @ccgSubSurf_getFaceNumVerts(%struct.CCGFace* %27), !dbg !11226
  store i32 %call8, i32* %numVerts, align 4, !dbg !11227
  %28 = load %struct.DMFlagMat*, %struct.DMFlagMat** %faceFlags, align 8, !dbg !11228
  %tobool = icmp ne %struct.DMFlagMat* %28, null, !dbg !11228
  br i1 %tobool, label %if.then, label %if.else, !dbg !11230

if.then:                                          ; preds = %for.body
  %29 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !11231
  %tobool9 = icmp ne [4 x [3 x i16]]* %29, null, !dbg !11231
  br i1 %tobool9, label %lor.end, label %lor.rhs, !dbg !11233

lor.rhs:                                          ; preds = %if.then
  %30 = load %struct.DMFlagMat*, %struct.DMFlagMat** %faceFlags, align 8, !dbg !11234
  %31 = load i32, i32* %index, align 4, !dbg !11235
  %idxprom10 = sext i32 %31 to i64, !dbg !11234
  %arrayidx11 = getelementptr inbounds %struct.DMFlagMat, %struct.DMFlagMat* %30, i64 %idxprom10, !dbg !11234
  %flag = getelementptr inbounds %struct.DMFlagMat, %struct.DMFlagMat* %arrayidx11, i32 0, i32 1, !dbg !11236
  %32 = load i8, i8* %flag, align 2, !dbg !11236
  %conv12 = zext i8 %32 to i32, !dbg !11234
  %and = and i32 %conv12, 1, !dbg !11237
  %tobool13 = icmp ne i32 %and, 0, !dbg !11233
  br label %lor.end, !dbg !11233

lor.end:                                          ; preds = %lor.rhs, %if.then
  %33 = phi i1 [ true, %if.then ], [ %tobool13, %lor.rhs ]
  %lor.ext = zext i1 %33 to i32, !dbg !11233
  store i32 %lor.ext, i32* %drawSmooth, align 4, !dbg !11238
  %34 = load %struct.DMFlagMat*, %struct.DMFlagMat** %faceFlags, align 8, !dbg !11239
  %35 = load i32, i32* %index, align 4, !dbg !11240
  %idxprom14 = sext i32 %35 to i64, !dbg !11239
  %arrayidx15 = getelementptr inbounds %struct.DMFlagMat, %struct.DMFlagMat* %34, i64 %idxprom14, !dbg !11239
  %mat_nr = getelementptr inbounds %struct.DMFlagMat, %struct.DMFlagMat* %arrayidx15, i32 0, i32 0, !dbg !11241
  %36 = load i16, i16* %mat_nr, align 2, !dbg !11241
  %conv16 = sext i16 %36 to i32, !dbg !11239
  %add = add nsw i32 %conv16, 1, !dbg !11242
  store i32 %add, i32* %new_matnr, align 4, !dbg !11243
  br label %if.end, !dbg !11244

if.else:                                          ; preds = %for.body
  store i32 1, i32* %drawSmooth, align 4, !dbg !11245
  store i32 1, i32* %new_matnr, align 4, !dbg !11247
  br label %if.end

if.end:                                           ; preds = %if.else, %lor.end
  %37 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !11248
  %tobool17 = icmp ne [4 x [3 x i16]]* %37, null, !dbg !11248
  br i1 %tobool17, label %if.then18, label %if.end20, !dbg !11250

if.then18:                                        ; preds = %if.end
  %38 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !11251
  store [4 x [3 x i16]]* %38, [4 x [3 x i16]]** %ln, align 8, !dbg !11253
  %39 = load i32, i32* %gridFaces, align 4, !dbg !11254
  %40 = load i32, i32* %gridFaces, align 4, !dbg !11255
  %mul = mul nsw i32 %39, %40, !dbg !11256
  %41 = load i32, i32* %numVerts, align 4, !dbg !11257
  %mul19 = mul nsw i32 %mul, %41, !dbg !11258
  %42 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !11259
  %idx.ext = sext i32 %mul19 to i64, !dbg !11259
  %add.ptr = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %42, i64 %idx.ext, !dbg !11259
  store [4 x [3 x i16]]* %add.ptr, [4 x [3 x i16]]** %lnors, align 8, !dbg !11259
  br label %if.end20, !dbg !11260

if.end20:                                         ; preds = %if.then18, %if.end
  %43 = load i32, i32* %new_matnr, align 4, !dbg !11261
  %44 = load i32, i32* %matnr, align 4, !dbg !11263
  %cmp21 = icmp ne i32 %43, %44, !dbg !11264
  br i1 %cmp21, label %if.then23, label %if.end28, !dbg !11265

if.then23:                                        ; preds = %if.end20
  %45 = load i32 (i32, i8*)*, i32 (i32, i8*)** %setMaterial.addr, align 8, !dbg !11266
  %46 = load i32, i32* %new_matnr, align 4, !dbg !11268
  store i32 %46, i32* %matnr, align 4, !dbg !11269
  %47 = bitcast %struct.GPUVertexAttribs* %gattribs to i8*, !dbg !11270
  %call24 = call i32 %45(i32 %46, i8* %47), !dbg !11266
  store i32 %call24, i32* %do_draw, align 4, !dbg !11271
  %48 = load i32, i32* %do_draw, align 4, !dbg !11272
  %tobool25 = icmp ne i32 %48, 0, !dbg !11272
  br i1 %tobool25, label %if.then26, label %if.end27, !dbg !11274

if.then26:                                        ; preds = %if.then23
  %49 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !11275
  call void @DM_vertex_attributes_from_gpu(%struct.DerivedMesh* %49, %struct.GPUVertexAttribs* %gattribs, %struct.DMVertexAttribs* %attribs), !dbg !11276
  br label %if.end27, !dbg !11276

if.end27:                                         ; preds = %if.then26, %if.then23
  br label %if.end28, !dbg !11277

if.end28:                                         ; preds = %if.end27, %if.end20
  %50 = load i32, i32* %do_draw, align 4, !dbg !11278
  %tobool29 = icmp ne i32 %50, 0, !dbg !11278
  br i1 %tobool29, label %lor.lhs.false, label %if.then37, !dbg !11280

lor.lhs.false:                                    ; preds = %if.end28
  %51 = load i32 (i8*, i32)*, i32 (i8*, i32)** %setDrawOptions.addr, align 8, !dbg !11281
  %tobool30 = icmp ne i32 (i8*, i32)* %51, null, !dbg !11281
  br i1 %tobool30, label %land.lhs.true, label %if.end41, !dbg !11282

land.lhs.true:                                    ; preds = %lor.lhs.false
  %52 = load i32, i32* %origIndex, align 4, !dbg !11283
  %cmp31 = icmp ne i32 %52, -1, !dbg !11284
  br i1 %cmp31, label %land.lhs.true33, label %if.end41, !dbg !11285

land.lhs.true33:                                  ; preds = %land.lhs.true
  %53 = load i32 (i8*, i32)*, i32 (i8*, i32)** %setDrawOptions.addr, align 8, !dbg !11286
  %54 = load i8*, i8** %userData.addr, align 8, !dbg !11287
  %55 = load i32, i32* %origIndex, align 4, !dbg !11288
  %call34 = call i32 %53(i8* %54, i32 %55), !dbg !11286
  %cmp35 = icmp eq i32 %call34, 0, !dbg !11289
  br i1 %cmp35, label %if.then37, label %if.end41, !dbg !11290

if.then37:                                        ; preds = %land.lhs.true33, %if.end28
  %56 = load i32, i32* %gridFaces, align 4, !dbg !11291
  %57 = load i32, i32* %gridFaces, align 4, !dbg !11293
  %mul38 = mul nsw i32 %56, %57, !dbg !11294
  %58 = load i32, i32* %numVerts, align 4, !dbg !11295
  %mul39 = mul nsw i32 %mul38, %58, !dbg !11296
  %59 = load i32, i32* %a, align 4, !dbg !11297
  %add40 = add nsw i32 %59, %mul39, !dbg !11297
  store i32 %add40, i32* %a, align 4, !dbg !11297
  br label %for.inc249, !dbg !11298

if.end41:                                         ; preds = %land.lhs.true33, %land.lhs.true, %lor.lhs.false
  %60 = load i32, i32* %drawSmooth, align 4, !dbg !11299
  %tobool42 = icmp ne i32 %60, 0, !dbg !11299
  %61 = zext i1 %tobool42 to i64, !dbg !11299
  %cond = select i1 %tobool42, i32 7425, i32 7424, !dbg !11299
  call void @glShadeModel(i32 %cond), !dbg !11300
  store i32 0, i32* %S, align 4, !dbg !11301
  br label %for.cond43, !dbg !11303

for.cond43:                                       ; preds = %for.inc246, %if.end41
  %62 = load i32, i32* %S, align 4, !dbg !11304
  %63 = load i32, i32* %numVerts, align 4, !dbg !11306
  %cmp44 = icmp slt i32 %62, %63, !dbg !11307
  br i1 %cmp44, label %for.body46, label %for.end248, !dbg !11308

for.body46:                                       ; preds = %for.cond43
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %faceGridData, metadata !11309, metadata !DIExpression()), !dbg !11311
  %64 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !11312
  %65 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !11313
  %66 = load i32, i32* %S, align 4, !dbg !11314
  %call47 = call i8* @ccgSubSurf_getFaceGridDataArray(%struct.CCGSubSurf* %64, %struct.CCGFace* %65, i32 %66), !dbg !11315
  %67 = bitcast i8* %call47 to %struct.CCGElem*, !dbg !11315
  store %struct.CCGElem* %67, %struct.CCGElem** %faceGridData, align 8, !dbg !11311
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %vda, metadata !11316, metadata !DIExpression()), !dbg !11317
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %vdb, metadata !11318, metadata !DIExpression()), !dbg !11319
  %68 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %ln, align 8, !dbg !11320
  %tobool48 = icmp ne [4 x [3 x i16]]* %68, null, !dbg !11320
  br i1 %tobool48, label %if.then49, label %if.else112, !dbg !11322

if.then49:                                        ; preds = %for.body46
  call void @glBegin(i32 7), !dbg !11323
  store i32 0, i32* %y, align 4, !dbg !11325
  br label %for.cond50, !dbg !11327

for.cond50:                                       ; preds = %for.inc109, %if.then49
  %69 = load i32, i32* %y, align 4, !dbg !11328
  %70 = load i32, i32* %gridFaces, align 4, !dbg !11330
  %cmp51 = icmp slt i32 %69, %70, !dbg !11331
  br i1 %cmp51, label %for.body53, label %for.end111, !dbg !11332

for.body53:                                       ; preds = %for.cond50
  store i32 0, i32* %x, align 4, !dbg !11333
  br label %for.cond54, !dbg !11336

for.cond54:                                       ; preds = %for.inc, %for.body53
  %71 = load i32, i32* %x, align 4, !dbg !11337
  %72 = load i32, i32* %gridFaces, align 4, !dbg !11339
  %cmp55 = icmp slt i32 %71, %72, !dbg !11340
  br i1 %cmp55, label %for.body57, label %for.end, !dbg !11341

for.body57:                                       ; preds = %for.cond54
  call void @llvm.dbg.declare(metadata float** %aco, metadata !11342, metadata !DIExpression()), !dbg !11344
  %73 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !11345
  %74 = load i32, i32* %x, align 4, !dbg !11346
  %75 = load i32, i32* %y, align 4, !dbg !11347
  %call58 = call float* @CCG_grid_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %73, i32 %74, i32 %75), !dbg !11348
  store float* %call58, float** %aco, align 8, !dbg !11344
  call void @llvm.dbg.declare(metadata float** %bco, metadata !11349, metadata !DIExpression()), !dbg !11350
  %76 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !11351
  %77 = load i32, i32* %x, align 4, !dbg !11352
  %add59 = add nsw i32 %77, 1, !dbg !11353
  %78 = load i32, i32* %y, align 4, !dbg !11354
  %call60 = call float* @CCG_grid_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %76, i32 %add59, i32 %78), !dbg !11355
  store float* %call60, float** %bco, align 8, !dbg !11350
  call void @llvm.dbg.declare(metadata float** %cco, metadata !11356, metadata !DIExpression()), !dbg !11357
  %79 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !11358
  %80 = load i32, i32* %x, align 4, !dbg !11359
  %add61 = add nsw i32 %80, 1, !dbg !11360
  %81 = load i32, i32* %y, align 4, !dbg !11361
  %add62 = add nsw i32 %81, 1, !dbg !11362
  %call63 = call float* @CCG_grid_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %79, i32 %add61, i32 %add62), !dbg !11363
  store float* %call63, float** %cco, align 8, !dbg !11357
  call void @llvm.dbg.declare(metadata float** %dco, metadata !11364, metadata !DIExpression()), !dbg !11365
  %82 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !11366
  %83 = load i32, i32* %x, align 4, !dbg !11367
  %84 = load i32, i32* %y, align 4, !dbg !11368
  %add64 = add nsw i32 %84, 1, !dbg !11369
  %call65 = call float* @CCG_grid_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %82, i32 %83, i32 %add64), !dbg !11370
  store float* %call65, float** %dco, align 8, !dbg !11365
  %totorco = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 7, !dbg !11371
  %85 = load i32, i32* %totorco, align 4, !dbg !11371
  %tobool66 = icmp ne i32 %85, 0, !dbg !11371
  br i1 %tobool66, label %if.then67, label %if.else71, !dbg !11374

if.then67:                                        ; preds = %for.body57
  %86 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !11371
  %87 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !11371
  %88 = load i32, i32* %S, align 4, !dbg !11371
  %89 = load i32, i32* %x, align 4, !dbg !11371
  %add68 = add nsw i32 %89, 0, !dbg !11371
  %90 = load i32, i32* %y, align 4, !dbg !11371
  %add69 = add nsw i32 %90, 1, !dbg !11371
  %91 = load i32, i32* %edgeSize, align 4, !dbg !11371
  %92 = load i32, i32* %gridSize, align 4, !dbg !11371
  %call70 = call i32 @getFaceIndex(%struct.CCGSubSurf* %86, %struct.CCGFace* %87, i32 %88, i32 %add68, i32 %add69, i32 %91, i32 %92), !dbg !11371
  store i32 %call70, i32* %index, align 4, !dbg !11371
  br label %if.end72, !dbg !11371

if.else71:                                        ; preds = %for.body57
  store i32 0, i32* %index, align 4, !dbg !11371
  br label %if.end72

if.end72:                                         ; preds = %if.else71, %if.then67
  %93 = load i32, i32* %a, align 4, !dbg !11374
  %94 = load i32, i32* %index, align 4, !dbg !11374
  call void @ccgdm_draw_attrib_vertex(%struct.DMVertexAttribs* %attribs, i32 %93, i32 %94, i32 1), !dbg !11374
  %95 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %ln, align 8, !dbg !11375
  %arrayidx73 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %95, i64 0, !dbg !11375
  %arrayidx74 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %arrayidx73, i64 0, i64 1, !dbg !11375
  %arraydecay = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx74, i64 0, i64 0, !dbg !11375
  call void @glNormal3sv(i16* %arraydecay), !dbg !11376
  %96 = load float*, float** %dco, align 8, !dbg !11377
  call void @glVertex3fv(float* %96), !dbg !11378
  %totorco75 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 7, !dbg !11379
  %97 = load i32, i32* %totorco75, align 4, !dbg !11379
  %tobool76 = icmp ne i32 %97, 0, !dbg !11379
  br i1 %tobool76, label %if.then77, label %if.else81, !dbg !11382

if.then77:                                        ; preds = %if.end72
  %98 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !11379
  %99 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !11379
  %100 = load i32, i32* %S, align 4, !dbg !11379
  %101 = load i32, i32* %x, align 4, !dbg !11379
  %add78 = add nsw i32 %101, 1, !dbg !11379
  %102 = load i32, i32* %y, align 4, !dbg !11379
  %add79 = add nsw i32 %102, 1, !dbg !11379
  %103 = load i32, i32* %edgeSize, align 4, !dbg !11379
  %104 = load i32, i32* %gridSize, align 4, !dbg !11379
  %call80 = call i32 @getFaceIndex(%struct.CCGSubSurf* %98, %struct.CCGFace* %99, i32 %100, i32 %add78, i32 %add79, i32 %103, i32 %104), !dbg !11379
  store i32 %call80, i32* %index, align 4, !dbg !11379
  br label %if.end82, !dbg !11379

if.else81:                                        ; preds = %if.end72
  store i32 0, i32* %index, align 4, !dbg !11379
  br label %if.end82

if.end82:                                         ; preds = %if.else81, %if.then77
  %105 = load i32, i32* %a, align 4, !dbg !11382
  %106 = load i32, i32* %index, align 4, !dbg !11382
  call void @ccgdm_draw_attrib_vertex(%struct.DMVertexAttribs* %attribs, i32 %105, i32 %106, i32 2), !dbg !11382
  %107 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %ln, align 8, !dbg !11383
  %arrayidx83 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %107, i64 0, !dbg !11383
  %arrayidx84 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %arrayidx83, i64 0, i64 2, !dbg !11383
  %arraydecay85 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx84, i64 0, i64 0, !dbg !11383
  call void @glNormal3sv(i16* %arraydecay85), !dbg !11384
  %108 = load float*, float** %cco, align 8, !dbg !11385
  call void @glVertex3fv(float* %108), !dbg !11386
  %totorco86 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 7, !dbg !11387
  %109 = load i32, i32* %totorco86, align 4, !dbg !11387
  %tobool87 = icmp ne i32 %109, 0, !dbg !11387
  br i1 %tobool87, label %if.then88, label %if.else92, !dbg !11390

if.then88:                                        ; preds = %if.end82
  %110 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !11387
  %111 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !11387
  %112 = load i32, i32* %S, align 4, !dbg !11387
  %113 = load i32, i32* %x, align 4, !dbg !11387
  %add89 = add nsw i32 %113, 1, !dbg !11387
  %114 = load i32, i32* %y, align 4, !dbg !11387
  %add90 = add nsw i32 %114, 0, !dbg !11387
  %115 = load i32, i32* %edgeSize, align 4, !dbg !11387
  %116 = load i32, i32* %gridSize, align 4, !dbg !11387
  %call91 = call i32 @getFaceIndex(%struct.CCGSubSurf* %110, %struct.CCGFace* %111, i32 %112, i32 %add89, i32 %add90, i32 %115, i32 %116), !dbg !11387
  store i32 %call91, i32* %index, align 4, !dbg !11387
  br label %if.end93, !dbg !11387

if.else92:                                        ; preds = %if.end82
  store i32 0, i32* %index, align 4, !dbg !11387
  br label %if.end93

if.end93:                                         ; preds = %if.else92, %if.then88
  %117 = load i32, i32* %a, align 4, !dbg !11390
  %118 = load i32, i32* %index, align 4, !dbg !11390
  call void @ccgdm_draw_attrib_vertex(%struct.DMVertexAttribs* %attribs, i32 %117, i32 %118, i32 3), !dbg !11390
  %119 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %ln, align 8, !dbg !11391
  %arrayidx94 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %119, i64 0, !dbg !11391
  %arrayidx95 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %arrayidx94, i64 0, i64 3, !dbg !11391
  %arraydecay96 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx95, i64 0, i64 0, !dbg !11391
  call void @glNormal3sv(i16* %arraydecay96), !dbg !11392
  %120 = load float*, float** %bco, align 8, !dbg !11393
  call void @glVertex3fv(float* %120), !dbg !11394
  %totorco97 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 7, !dbg !11395
  %121 = load i32, i32* %totorco97, align 4, !dbg !11395
  %tobool98 = icmp ne i32 %121, 0, !dbg !11395
  br i1 %tobool98, label %if.then99, label %if.else103, !dbg !11398

if.then99:                                        ; preds = %if.end93
  %122 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !11395
  %123 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !11395
  %124 = load i32, i32* %S, align 4, !dbg !11395
  %125 = load i32, i32* %x, align 4, !dbg !11395
  %add100 = add nsw i32 %125, 0, !dbg !11395
  %126 = load i32, i32* %y, align 4, !dbg !11395
  %add101 = add nsw i32 %126, 0, !dbg !11395
  %127 = load i32, i32* %edgeSize, align 4, !dbg !11395
  %128 = load i32, i32* %gridSize, align 4, !dbg !11395
  %call102 = call i32 @getFaceIndex(%struct.CCGSubSurf* %122, %struct.CCGFace* %123, i32 %124, i32 %add100, i32 %add101, i32 %127, i32 %128), !dbg !11395
  store i32 %call102, i32* %index, align 4, !dbg !11395
  br label %if.end104, !dbg !11395

if.else103:                                       ; preds = %if.end93
  store i32 0, i32* %index, align 4, !dbg !11395
  br label %if.end104

if.end104:                                        ; preds = %if.else103, %if.then99
  %129 = load i32, i32* %a, align 4, !dbg !11398
  %130 = load i32, i32* %index, align 4, !dbg !11398
  call void @ccgdm_draw_attrib_vertex(%struct.DMVertexAttribs* %attribs, i32 %129, i32 %130, i32 0), !dbg !11398
  %131 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %ln, align 8, !dbg !11399
  %arrayidx105 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %131, i64 0, !dbg !11399
  %arrayidx106 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %arrayidx105, i64 0, i64 0, !dbg !11399
  %arraydecay107 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx106, i64 0, i64 0, !dbg !11399
  call void @glNormal3sv(i16* %arraydecay107), !dbg !11400
  %132 = load float*, float** %aco, align 8, !dbg !11401
  call void @glVertex3fv(float* %132), !dbg !11402
  %133 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %ln, align 8, !dbg !11403
  %incdec.ptr = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %133, i32 1, !dbg !11403
  store [4 x [3 x i16]]* %incdec.ptr, [4 x [3 x i16]]** %ln, align 8, !dbg !11403
  %134 = load i32, i32* %a, align 4, !dbg !11404
  %inc = add nsw i32 %134, 1, !dbg !11404
  store i32 %inc, i32* %a, align 4, !dbg !11404
  br label %for.inc, !dbg !11405

for.inc:                                          ; preds = %if.end104
  %135 = load i32, i32* %x, align 4, !dbg !11406
  %inc108 = add nsw i32 %135, 1, !dbg !11406
  store i32 %inc108, i32* %x, align 4, !dbg !11406
  br label %for.cond54, !dbg !11407, !llvm.loop !11408

for.end:                                          ; preds = %for.cond54
  br label %for.inc109, !dbg !11410

for.inc109:                                       ; preds = %for.end
  %136 = load i32, i32* %y, align 4, !dbg !11411
  %inc110 = add nsw i32 %136, 1, !dbg !11411
  store i32 %inc110, i32* %y, align 4, !dbg !11411
  br label %for.cond50, !dbg !11412, !llvm.loop !11413

for.end111:                                       ; preds = %for.cond50
  call void @glEnd(), !dbg !11415
  br label %if.end245, !dbg !11416

if.else112:                                       ; preds = %for.body46
  %137 = load i32, i32* %drawSmooth, align 4, !dbg !11417
  %tobool113 = icmp ne i32 %137, 0, !dbg !11417
  br i1 %tobool113, label %if.then114, label %if.else184, !dbg !11419

if.then114:                                       ; preds = %if.else112
  store i32 0, i32* %y, align 4, !dbg !11420
  br label %for.cond115, !dbg !11423

for.cond115:                                      ; preds = %for.inc181, %if.then114
  %138 = load i32, i32* %y, align 4, !dbg !11424
  %139 = load i32, i32* %gridFaces, align 4, !dbg !11426
  %cmp116 = icmp slt i32 %138, %139, !dbg !11427
  br i1 %cmp116, label %for.body118, label %for.end183, !dbg !11428

for.body118:                                      ; preds = %for.cond115
  call void @glBegin(i32 8), !dbg !11429
  store i32 0, i32* %x, align 4, !dbg !11431
  br label %for.cond119, !dbg !11433

for.cond119:                                      ; preds = %for.inc153, %for.body118
  %140 = load i32, i32* %x, align 4, !dbg !11434
  %141 = load i32, i32* %gridFaces, align 4, !dbg !11436
  %cmp120 = icmp slt i32 %140, %141, !dbg !11437
  br i1 %cmp120, label %for.body122, label %for.end155, !dbg !11438

for.body122:                                      ; preds = %for.cond119
  %142 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !11439
  %143 = load i32, i32* %x, align 4, !dbg !11441
  %144 = load i32, i32* %y, align 4, !dbg !11442
  %add123 = add nsw i32 %144, 0, !dbg !11443
  %call124 = call %struct.CCGElem* @CCG_grid_elem(%struct.CCGKey* %key, %struct.CCGElem* %142, i32 %143, i32 %add123), !dbg !11444
  store %struct.CCGElem* %call124, %struct.CCGElem** %vda, align 8, !dbg !11445
  %145 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !11446
  %146 = load i32, i32* %x, align 4, !dbg !11447
  %147 = load i32, i32* %y, align 4, !dbg !11448
  %add125 = add nsw i32 %147, 1, !dbg !11449
  %call126 = call %struct.CCGElem* @CCG_grid_elem(%struct.CCGKey* %key, %struct.CCGElem* %145, i32 %146, i32 %add125), !dbg !11450
  store %struct.CCGElem* %call126, %struct.CCGElem** %vdb, align 8, !dbg !11451
  %totorco127 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 7, !dbg !11452
  %148 = load i32, i32* %totorco127, align 4, !dbg !11452
  %tobool128 = icmp ne i32 %148, 0, !dbg !11452
  br i1 %tobool128, label %if.then129, label %if.else133, !dbg !11455

if.then129:                                       ; preds = %for.body122
  %149 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !11452
  %150 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !11452
  %151 = load i32, i32* %S, align 4, !dbg !11452
  %152 = load i32, i32* %x, align 4, !dbg !11452
  %add130 = add nsw i32 %152, 0, !dbg !11452
  %153 = load i32, i32* %y, align 4, !dbg !11452
  %add131 = add nsw i32 %153, 0, !dbg !11452
  %154 = load i32, i32* %edgeSize, align 4, !dbg !11452
  %155 = load i32, i32* %gridSize, align 4, !dbg !11452
  %call132 = call i32 @getFaceIndex(%struct.CCGSubSurf* %149, %struct.CCGFace* %150, i32 %151, i32 %add130, i32 %add131, i32 %154, i32 %155), !dbg !11452
  store i32 %call132, i32* %index, align 4, !dbg !11452
  br label %if.end134, !dbg !11452

if.else133:                                       ; preds = %for.body122
  store i32 0, i32* %index, align 4, !dbg !11452
  br label %if.end134

if.end134:                                        ; preds = %if.else133, %if.then129
  %156 = load i32, i32* %a, align 4, !dbg !11455
  %157 = load i32, i32* %index, align 4, !dbg !11455
  call void @ccgdm_draw_attrib_vertex(%struct.DMVertexAttribs* %attribs, i32 %156, i32 %157, i32 0), !dbg !11455
  %158 = load %struct.CCGElem*, %struct.CCGElem** %vda, align 8, !dbg !11456
  %call135 = call float* @CCG_elem_no(%struct.CCGKey* %key, %struct.CCGElem* %158), !dbg !11457
  call void @glNormal3fv(float* %call135), !dbg !11458
  %159 = load %struct.CCGElem*, %struct.CCGElem** %vda, align 8, !dbg !11459
  %call136 = call float* @CCG_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %159), !dbg !11460
  call void @glVertex3fv(float* %call136), !dbg !11461
  %totorco137 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 7, !dbg !11462
  %160 = load i32, i32* %totorco137, align 4, !dbg !11462
  %tobool138 = icmp ne i32 %160, 0, !dbg !11462
  br i1 %tobool138, label %if.then139, label %if.else143, !dbg !11465

if.then139:                                       ; preds = %if.end134
  %161 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !11462
  %162 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !11462
  %163 = load i32, i32* %S, align 4, !dbg !11462
  %164 = load i32, i32* %x, align 4, !dbg !11462
  %add140 = add nsw i32 %164, 0, !dbg !11462
  %165 = load i32, i32* %y, align 4, !dbg !11462
  %add141 = add nsw i32 %165, 1, !dbg !11462
  %166 = load i32, i32* %edgeSize, align 4, !dbg !11462
  %167 = load i32, i32* %gridSize, align 4, !dbg !11462
  %call142 = call i32 @getFaceIndex(%struct.CCGSubSurf* %161, %struct.CCGFace* %162, i32 %163, i32 %add140, i32 %add141, i32 %166, i32 %167), !dbg !11462
  store i32 %call142, i32* %index, align 4, !dbg !11462
  br label %if.end144, !dbg !11462

if.else143:                                       ; preds = %if.end134
  store i32 0, i32* %index, align 4, !dbg !11462
  br label %if.end144

if.end144:                                        ; preds = %if.else143, %if.then139
  %168 = load i32, i32* %a, align 4, !dbg !11465
  %169 = load i32, i32* %index, align 4, !dbg !11465
  call void @ccgdm_draw_attrib_vertex(%struct.DMVertexAttribs* %attribs, i32 %168, i32 %169, i32 1), !dbg !11465
  %170 = load %struct.CCGElem*, %struct.CCGElem** %vdb, align 8, !dbg !11466
  %call145 = call float* @CCG_elem_no(%struct.CCGKey* %key, %struct.CCGElem* %170), !dbg !11467
  call void @glNormal3fv(float* %call145), !dbg !11468
  %171 = load %struct.CCGElem*, %struct.CCGElem** %vdb, align 8, !dbg !11469
  %call146 = call float* @CCG_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %171), !dbg !11470
  call void @glVertex3fv(float* %call146), !dbg !11471
  %172 = load i32, i32* %x, align 4, !dbg !11472
  %173 = load i32, i32* %gridFaces, align 4, !dbg !11474
  %sub147 = sub nsw i32 %173, 1, !dbg !11475
  %cmp148 = icmp ne i32 %172, %sub147, !dbg !11476
  br i1 %cmp148, label %if.then150, label %if.end152, !dbg !11477

if.then150:                                       ; preds = %if.end144
  %174 = load i32, i32* %a, align 4, !dbg !11478
  %inc151 = add nsw i32 %174, 1, !dbg !11478
  store i32 %inc151, i32* %a, align 4, !dbg !11478
  br label %if.end152, !dbg !11479

if.end152:                                        ; preds = %if.then150, %if.end144
  br label %for.inc153, !dbg !11480

for.inc153:                                       ; preds = %if.end152
  %175 = load i32, i32* %x, align 4, !dbg !11481
  %inc154 = add nsw i32 %175, 1, !dbg !11481
  store i32 %inc154, i32* %x, align 4, !dbg !11481
  br label %for.cond119, !dbg !11482, !llvm.loop !11483

for.end155:                                       ; preds = %for.cond119
  %176 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !11485
  %177 = load i32, i32* %x, align 4, !dbg !11486
  %178 = load i32, i32* %y, align 4, !dbg !11487
  %add156 = add nsw i32 %178, 0, !dbg !11488
  %call157 = call %struct.CCGElem* @CCG_grid_elem(%struct.CCGKey* %key, %struct.CCGElem* %176, i32 %177, i32 %add156), !dbg !11489
  store %struct.CCGElem* %call157, %struct.CCGElem** %vda, align 8, !dbg !11490
  %179 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !11491
  %180 = load i32, i32* %x, align 4, !dbg !11492
  %181 = load i32, i32* %y, align 4, !dbg !11493
  %add158 = add nsw i32 %181, 1, !dbg !11494
  %call159 = call %struct.CCGElem* @CCG_grid_elem(%struct.CCGKey* %key, %struct.CCGElem* %179, i32 %180, i32 %add158), !dbg !11495
  store %struct.CCGElem* %call159, %struct.CCGElem** %vdb, align 8, !dbg !11496
  %totorco160 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 7, !dbg !11497
  %182 = load i32, i32* %totorco160, align 4, !dbg !11497
  %tobool161 = icmp ne i32 %182, 0, !dbg !11497
  br i1 %tobool161, label %if.then162, label %if.else166, !dbg !11500

if.then162:                                       ; preds = %for.end155
  %183 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !11497
  %184 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !11497
  %185 = load i32, i32* %S, align 4, !dbg !11497
  %186 = load i32, i32* %x, align 4, !dbg !11497
  %add163 = add nsw i32 %186, 0, !dbg !11497
  %187 = load i32, i32* %y, align 4, !dbg !11497
  %add164 = add nsw i32 %187, 0, !dbg !11497
  %188 = load i32, i32* %edgeSize, align 4, !dbg !11497
  %189 = load i32, i32* %gridSize, align 4, !dbg !11497
  %call165 = call i32 @getFaceIndex(%struct.CCGSubSurf* %183, %struct.CCGFace* %184, i32 %185, i32 %add163, i32 %add164, i32 %188, i32 %189), !dbg !11497
  store i32 %call165, i32* %index, align 4, !dbg !11497
  br label %if.end167, !dbg !11497

if.else166:                                       ; preds = %for.end155
  store i32 0, i32* %index, align 4, !dbg !11497
  br label %if.end167

if.end167:                                        ; preds = %if.else166, %if.then162
  %190 = load i32, i32* %a, align 4, !dbg !11500
  %191 = load i32, i32* %index, align 4, !dbg !11500
  call void @ccgdm_draw_attrib_vertex(%struct.DMVertexAttribs* %attribs, i32 %190, i32 %191, i32 3), !dbg !11500
  %192 = load %struct.CCGElem*, %struct.CCGElem** %vda, align 8, !dbg !11501
  %call168 = call float* @CCG_elem_no(%struct.CCGKey* %key, %struct.CCGElem* %192), !dbg !11502
  call void @glNormal3fv(float* %call168), !dbg !11503
  %193 = load %struct.CCGElem*, %struct.CCGElem** %vda, align 8, !dbg !11504
  %call169 = call float* @CCG_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %193), !dbg !11505
  call void @glVertex3fv(float* %call169), !dbg !11506
  %totorco170 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 7, !dbg !11507
  %194 = load i32, i32* %totorco170, align 4, !dbg !11507
  %tobool171 = icmp ne i32 %194, 0, !dbg !11507
  br i1 %tobool171, label %if.then172, label %if.else176, !dbg !11510

if.then172:                                       ; preds = %if.end167
  %195 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !11507
  %196 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !11507
  %197 = load i32, i32* %S, align 4, !dbg !11507
  %198 = load i32, i32* %x, align 4, !dbg !11507
  %add173 = add nsw i32 %198, 0, !dbg !11507
  %199 = load i32, i32* %y, align 4, !dbg !11507
  %add174 = add nsw i32 %199, 1, !dbg !11507
  %200 = load i32, i32* %edgeSize, align 4, !dbg !11507
  %201 = load i32, i32* %gridSize, align 4, !dbg !11507
  %call175 = call i32 @getFaceIndex(%struct.CCGSubSurf* %195, %struct.CCGFace* %196, i32 %197, i32 %add173, i32 %add174, i32 %200, i32 %201), !dbg !11507
  store i32 %call175, i32* %index, align 4, !dbg !11507
  br label %if.end177, !dbg !11507

if.else176:                                       ; preds = %if.end167
  store i32 0, i32* %index, align 4, !dbg !11507
  br label %if.end177

if.end177:                                        ; preds = %if.else176, %if.then172
  %202 = load i32, i32* %a, align 4, !dbg !11510
  %203 = load i32, i32* %index, align 4, !dbg !11510
  call void @ccgdm_draw_attrib_vertex(%struct.DMVertexAttribs* %attribs, i32 %202, i32 %203, i32 2), !dbg !11510
  %204 = load %struct.CCGElem*, %struct.CCGElem** %vdb, align 8, !dbg !11511
  %call178 = call float* @CCG_elem_no(%struct.CCGKey* %key, %struct.CCGElem* %204), !dbg !11512
  call void @glNormal3fv(float* %call178), !dbg !11513
  %205 = load %struct.CCGElem*, %struct.CCGElem** %vdb, align 8, !dbg !11514
  %call179 = call float* @CCG_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %205), !dbg !11515
  call void @glVertex3fv(float* %call179), !dbg !11516
  call void @glEnd(), !dbg !11517
  %206 = load i32, i32* %a, align 4, !dbg !11518
  %inc180 = add nsw i32 %206, 1, !dbg !11518
  store i32 %inc180, i32* %a, align 4, !dbg !11518
  br label %for.inc181, !dbg !11519

for.inc181:                                       ; preds = %if.end177
  %207 = load i32, i32* %y, align 4, !dbg !11520
  %inc182 = add nsw i32 %207, 1, !dbg !11520
  store i32 %inc182, i32* %y, align 4, !dbg !11520
  br label %for.cond115, !dbg !11521, !llvm.loop !11522

for.end183:                                       ; preds = %for.cond115
  br label %if.end244, !dbg !11524

if.else184:                                       ; preds = %if.else112
  call void @glBegin(i32 7), !dbg !11525
  store i32 0, i32* %y, align 4, !dbg !11527
  br label %for.cond185, !dbg !11529

for.cond185:                                      ; preds = %for.inc241, %if.else184
  %208 = load i32, i32* %y, align 4, !dbg !11530
  %209 = load i32, i32* %gridFaces, align 4, !dbg !11532
  %cmp186 = icmp slt i32 %208, %209, !dbg !11533
  br i1 %cmp186, label %for.body188, label %for.end243, !dbg !11534

for.body188:                                      ; preds = %for.cond185
  store i32 0, i32* %x, align 4, !dbg !11535
  br label %for.cond189, !dbg !11538

for.cond189:                                      ; preds = %for.inc238, %for.body188
  %210 = load i32, i32* %x, align 4, !dbg !11539
  %211 = load i32, i32* %gridFaces, align 4, !dbg !11541
  %cmp190 = icmp slt i32 %210, %211, !dbg !11542
  br i1 %cmp190, label %for.body192, label %for.end240, !dbg !11543

for.body192:                                      ; preds = %for.cond189
  call void @llvm.dbg.declare(metadata float** %aco193, metadata !11544, metadata !DIExpression()), !dbg !11546
  %212 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !11547
  %213 = load i32, i32* %x, align 4, !dbg !11548
  %214 = load i32, i32* %y, align 4, !dbg !11549
  %call194 = call float* @CCG_grid_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %212, i32 %213, i32 %214), !dbg !11550
  store float* %call194, float** %aco193, align 8, !dbg !11546
  call void @llvm.dbg.declare(metadata float** %bco195, metadata !11551, metadata !DIExpression()), !dbg !11552
  %215 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !11553
  %216 = load i32, i32* %x, align 4, !dbg !11554
  %add196 = add nsw i32 %216, 1, !dbg !11555
  %217 = load i32, i32* %y, align 4, !dbg !11556
  %call197 = call float* @CCG_grid_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %215, i32 %add196, i32 %217), !dbg !11557
  store float* %call197, float** %bco195, align 8, !dbg !11552
  call void @llvm.dbg.declare(metadata float** %cco198, metadata !11558, metadata !DIExpression()), !dbg !11559
  %218 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !11560
  %219 = load i32, i32* %x, align 4, !dbg !11561
  %add199 = add nsw i32 %219, 1, !dbg !11562
  %220 = load i32, i32* %y, align 4, !dbg !11563
  %add200 = add nsw i32 %220, 1, !dbg !11564
  %call201 = call float* @CCG_grid_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %218, i32 %add199, i32 %add200), !dbg !11565
  store float* %call201, float** %cco198, align 8, !dbg !11559
  call void @llvm.dbg.declare(metadata float** %dco202, metadata !11566, metadata !DIExpression()), !dbg !11567
  %221 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !11568
  %222 = load i32, i32* %x, align 4, !dbg !11569
  %223 = load i32, i32* %y, align 4, !dbg !11570
  %add203 = add nsw i32 %223, 1, !dbg !11571
  %call204 = call float* @CCG_grid_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %221, i32 %222, i32 %add203), !dbg !11572
  store float* %call204, float** %dco202, align 8, !dbg !11567
  %224 = load float*, float** %aco193, align 8, !dbg !11573
  %225 = load float*, float** %bco195, align 8, !dbg !11574
  %226 = load float*, float** %cco198, align 8, !dbg !11575
  %227 = load float*, float** %dco202, align 8, !dbg !11576
  call void @ccgDM_glNormalFast(float* %224, float* %225, float* %226, float* %227), !dbg !11577
  %totorco205 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 7, !dbg !11578
  %228 = load i32, i32* %totorco205, align 4, !dbg !11578
  %tobool206 = icmp ne i32 %228, 0, !dbg !11578
  br i1 %tobool206, label %if.then207, label %if.else211, !dbg !11581

if.then207:                                       ; preds = %for.body192
  %229 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !11578
  %230 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !11578
  %231 = load i32, i32* %S, align 4, !dbg !11578
  %232 = load i32, i32* %x, align 4, !dbg !11578
  %add208 = add nsw i32 %232, 0, !dbg !11578
  %233 = load i32, i32* %y, align 4, !dbg !11578
  %add209 = add nsw i32 %233, 1, !dbg !11578
  %234 = load i32, i32* %edgeSize, align 4, !dbg !11578
  %235 = load i32, i32* %gridSize, align 4, !dbg !11578
  %call210 = call i32 @getFaceIndex(%struct.CCGSubSurf* %229, %struct.CCGFace* %230, i32 %231, i32 %add208, i32 %add209, i32 %234, i32 %235), !dbg !11578
  store i32 %call210, i32* %index, align 4, !dbg !11578
  br label %if.end212, !dbg !11578

if.else211:                                       ; preds = %for.body192
  store i32 0, i32* %index, align 4, !dbg !11578
  br label %if.end212

if.end212:                                        ; preds = %if.else211, %if.then207
  %236 = load i32, i32* %a, align 4, !dbg !11581
  %237 = load i32, i32* %index, align 4, !dbg !11581
  call void @ccgdm_draw_attrib_vertex(%struct.DMVertexAttribs* %attribs, i32 %236, i32 %237, i32 1), !dbg !11581
  %238 = load float*, float** %dco202, align 8, !dbg !11582
  call void @glVertex3fv(float* %238), !dbg !11583
  %totorco213 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 7, !dbg !11584
  %239 = load i32, i32* %totorco213, align 4, !dbg !11584
  %tobool214 = icmp ne i32 %239, 0, !dbg !11584
  br i1 %tobool214, label %if.then215, label %if.else219, !dbg !11587

if.then215:                                       ; preds = %if.end212
  %240 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !11584
  %241 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !11584
  %242 = load i32, i32* %S, align 4, !dbg !11584
  %243 = load i32, i32* %x, align 4, !dbg !11584
  %add216 = add nsw i32 %243, 1, !dbg !11584
  %244 = load i32, i32* %y, align 4, !dbg !11584
  %add217 = add nsw i32 %244, 1, !dbg !11584
  %245 = load i32, i32* %edgeSize, align 4, !dbg !11584
  %246 = load i32, i32* %gridSize, align 4, !dbg !11584
  %call218 = call i32 @getFaceIndex(%struct.CCGSubSurf* %240, %struct.CCGFace* %241, i32 %242, i32 %add216, i32 %add217, i32 %245, i32 %246), !dbg !11584
  store i32 %call218, i32* %index, align 4, !dbg !11584
  br label %if.end220, !dbg !11584

if.else219:                                       ; preds = %if.end212
  store i32 0, i32* %index, align 4, !dbg !11584
  br label %if.end220

if.end220:                                        ; preds = %if.else219, %if.then215
  %247 = load i32, i32* %a, align 4, !dbg !11587
  %248 = load i32, i32* %index, align 4, !dbg !11587
  call void @ccgdm_draw_attrib_vertex(%struct.DMVertexAttribs* %attribs, i32 %247, i32 %248, i32 2), !dbg !11587
  %249 = load float*, float** %cco198, align 8, !dbg !11588
  call void @glVertex3fv(float* %249), !dbg !11589
  %totorco221 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 7, !dbg !11590
  %250 = load i32, i32* %totorco221, align 4, !dbg !11590
  %tobool222 = icmp ne i32 %250, 0, !dbg !11590
  br i1 %tobool222, label %if.then223, label %if.else227, !dbg !11593

if.then223:                                       ; preds = %if.end220
  %251 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !11590
  %252 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !11590
  %253 = load i32, i32* %S, align 4, !dbg !11590
  %254 = load i32, i32* %x, align 4, !dbg !11590
  %add224 = add nsw i32 %254, 1, !dbg !11590
  %255 = load i32, i32* %y, align 4, !dbg !11590
  %add225 = add nsw i32 %255, 0, !dbg !11590
  %256 = load i32, i32* %edgeSize, align 4, !dbg !11590
  %257 = load i32, i32* %gridSize, align 4, !dbg !11590
  %call226 = call i32 @getFaceIndex(%struct.CCGSubSurf* %251, %struct.CCGFace* %252, i32 %253, i32 %add224, i32 %add225, i32 %256, i32 %257), !dbg !11590
  store i32 %call226, i32* %index, align 4, !dbg !11590
  br label %if.end228, !dbg !11590

if.else227:                                       ; preds = %if.end220
  store i32 0, i32* %index, align 4, !dbg !11590
  br label %if.end228

if.end228:                                        ; preds = %if.else227, %if.then223
  %258 = load i32, i32* %a, align 4, !dbg !11593
  %259 = load i32, i32* %index, align 4, !dbg !11593
  call void @ccgdm_draw_attrib_vertex(%struct.DMVertexAttribs* %attribs, i32 %258, i32 %259, i32 3), !dbg !11593
  %260 = load float*, float** %bco195, align 8, !dbg !11594
  call void @glVertex3fv(float* %260), !dbg !11595
  %totorco229 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 7, !dbg !11596
  %261 = load i32, i32* %totorco229, align 4, !dbg !11596
  %tobool230 = icmp ne i32 %261, 0, !dbg !11596
  br i1 %tobool230, label %if.then231, label %if.else235, !dbg !11599

if.then231:                                       ; preds = %if.end228
  %262 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !11596
  %263 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !11596
  %264 = load i32, i32* %S, align 4, !dbg !11596
  %265 = load i32, i32* %x, align 4, !dbg !11596
  %add232 = add nsw i32 %265, 0, !dbg !11596
  %266 = load i32, i32* %y, align 4, !dbg !11596
  %add233 = add nsw i32 %266, 0, !dbg !11596
  %267 = load i32, i32* %edgeSize, align 4, !dbg !11596
  %268 = load i32, i32* %gridSize, align 4, !dbg !11596
  %call234 = call i32 @getFaceIndex(%struct.CCGSubSurf* %262, %struct.CCGFace* %263, i32 %264, i32 %add232, i32 %add233, i32 %267, i32 %268), !dbg !11596
  store i32 %call234, i32* %index, align 4, !dbg !11596
  br label %if.end236, !dbg !11596

if.else235:                                       ; preds = %if.end228
  store i32 0, i32* %index, align 4, !dbg !11596
  br label %if.end236

if.end236:                                        ; preds = %if.else235, %if.then231
  %269 = load i32, i32* %a, align 4, !dbg !11599
  %270 = load i32, i32* %index, align 4, !dbg !11599
  call void @ccgdm_draw_attrib_vertex(%struct.DMVertexAttribs* %attribs, i32 %269, i32 %270, i32 0), !dbg !11599
  %271 = load float*, float** %aco193, align 8, !dbg !11600
  call void @glVertex3fv(float* %271), !dbg !11601
  %272 = load i32, i32* %a, align 4, !dbg !11602
  %inc237 = add nsw i32 %272, 1, !dbg !11602
  store i32 %inc237, i32* %a, align 4, !dbg !11602
  br label %for.inc238, !dbg !11603

for.inc238:                                       ; preds = %if.end236
  %273 = load i32, i32* %x, align 4, !dbg !11604
  %inc239 = add nsw i32 %273, 1, !dbg !11604
  store i32 %inc239, i32* %x, align 4, !dbg !11604
  br label %for.cond189, !dbg !11605, !llvm.loop !11606

for.end240:                                       ; preds = %for.cond189
  br label %for.inc241, !dbg !11608

for.inc241:                                       ; preds = %for.end240
  %274 = load i32, i32* %y, align 4, !dbg !11609
  %inc242 = add nsw i32 %274, 1, !dbg !11609
  store i32 %inc242, i32* %y, align 4, !dbg !11609
  br label %for.cond185, !dbg !11610, !llvm.loop !11611

for.end243:                                       ; preds = %for.cond185
  call void @glEnd(), !dbg !11613
  br label %if.end244

if.end244:                                        ; preds = %for.end243, %for.end183
  br label %if.end245

if.end245:                                        ; preds = %if.end244, %for.end111
  br label %for.inc246, !dbg !11614

for.inc246:                                       ; preds = %if.end245
  %275 = load i32, i32* %S, align 4, !dbg !11615
  %inc247 = add nsw i32 %275, 1, !dbg !11615
  store i32 %inc247, i32* %S, align 4, !dbg !11615
  br label %for.cond43, !dbg !11616, !llvm.loop !11617

for.end248:                                       ; preds = %for.cond43
  br label %for.inc249, !dbg !11619

for.inc249:                                       ; preds = %for.end248, %if.then37
  %276 = load i32, i32* %i, align 4, !dbg !11620
  %inc250 = add nsw i32 %276, 1, !dbg !11620
  store i32 %inc250, i32* %i, align 4, !dbg !11620
  br label %for.cond, !dbg !11621, !llvm.loop !11622

for.end251:                                       ; preds = %for.cond
  ret void, !dbg !11624
}

; Function Attrs: noinline nounwind uwtable
define internal void @ccgDM_drawMappedFacesMat(%struct.DerivedMesh* %dm, void (i8*, i32, i8*)* %setMaterial, i8 (i8*, i32)* %setFace, i8* %userData) #0 !dbg !11625 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %setMaterial.addr = alloca void (i8*, i32, i8*)*, align 8
  %setFace.addr = alloca i8 (i8*, i32)*, align 8
  %userData.addr = alloca i8*, align 8
  %ccgdm = alloca %struct.CCGDerivedMesh*, align 8
  %ss = alloca %struct.CCGSubSurf*, align 8
  %key = alloca %struct.CCGKey, align 4
  %gattribs = alloca %struct.GPUVertexAttribs, align 4
  %attribs = alloca %struct.DMVertexAttribs, align 8
  %gridSize = alloca i32, align 4
  %gridFaces = alloca i32, align 4
  %edgeSize = alloca i32, align 4
  %faceFlags = alloca %struct.DMFlagMat*, align 8
  %lnors = alloca [4 x [3 x i16]]*, align 8
  %a = alloca i32, align 4
  %i = alloca i32, align 4
  %numVerts = alloca i32, align 4
  %matnr = alloca i32, align 4
  %new_matnr = alloca i32, align 4
  %totface = alloca i32, align 4
  %f = alloca %struct.CCGFace*, align 8
  %ln = alloca [4 x [3 x i16]]*, align 8
  %S = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %drawSmooth = alloca i32, align 4
  %index = alloca i32, align 4
  %origIndex = alloca i32, align 4
  %faceGridData = alloca %struct.CCGElem*, align 8
  %vda = alloca %struct.CCGElem*, align 8
  %vdb = alloca %struct.CCGElem*, align 8
  %aco = alloca float*, align 8
  %bco = alloca float*, align 8
  %cco = alloca float*, align 8
  %dco = alloca float*, align 8
  %aco188 = alloca float*, align 8
  %bco191 = alloca float*, align 8
  %cco195 = alloca float*, align 8
  %dco199 = alloca float*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !11626, metadata !DIExpression()), !dbg !11627
  store void (i8*, i32, i8*)* %setMaterial, void (i8*, i32, i8*)** %setMaterial.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i32, i8*)** %setMaterial.addr, metadata !11628, metadata !DIExpression()), !dbg !11629
  store i8 (i8*, i32)* %setFace, i8 (i8*, i32)** %setFace.addr, align 8
  call void @llvm.dbg.declare(metadata i8 (i8*, i32)** %setFace.addr, metadata !11630, metadata !DIExpression()), !dbg !11631
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !11632, metadata !DIExpression()), !dbg !11633
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm, metadata !11634, metadata !DIExpression()), !dbg !11635
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !11636
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CCGDerivedMesh*, !dbg !11637
  store %struct.CCGDerivedMesh* %1, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !11635
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss, metadata !11638, metadata !DIExpression()), !dbg !11639
  %2 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !11640
  %ss1 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %2, i32 0, i32 1, !dbg !11641
  %3 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss1, align 8, !dbg !11641
  store %struct.CCGSubSurf* %3, %struct.CCGSubSurf** %ss, align 8, !dbg !11639
  call void @llvm.dbg.declare(metadata %struct.CCGKey* %key, metadata !11642, metadata !DIExpression()), !dbg !11643
  call void @llvm.dbg.declare(metadata %struct.GPUVertexAttribs* %gattribs, metadata !11644, metadata !DIExpression()), !dbg !11645
  call void @llvm.dbg.declare(metadata %struct.DMVertexAttribs* %attribs, metadata !11646, metadata !DIExpression()), !dbg !11647
  %4 = bitcast %struct.DMVertexAttribs* %attribs to i8*, !dbg !11647
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 376, i1 false), !dbg !11647
  call void @llvm.dbg.declare(metadata i32* %gridSize, metadata !11648, metadata !DIExpression()), !dbg !11649
  %5 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !11650
  %call = call i32 @ccgSubSurf_getGridSize(%struct.CCGSubSurf* %5), !dbg !11651
  store i32 %call, i32* %gridSize, align 4, !dbg !11649
  call void @llvm.dbg.declare(metadata i32* %gridFaces, metadata !11652, metadata !DIExpression()), !dbg !11653
  %6 = load i32, i32* %gridSize, align 4, !dbg !11654
  %sub = sub nsw i32 %6, 1, !dbg !11655
  store i32 %sub, i32* %gridFaces, align 4, !dbg !11653
  call void @llvm.dbg.declare(metadata i32* %edgeSize, metadata !11656, metadata !DIExpression()), !dbg !11657
  %7 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !11658
  %call2 = call i32 @ccgSubSurf_getEdgeSize(%struct.CCGSubSurf* %7), !dbg !11659
  store i32 %call2, i32* %edgeSize, align 4, !dbg !11657
  call void @llvm.dbg.declare(metadata %struct.DMFlagMat** %faceFlags, metadata !11660, metadata !DIExpression()), !dbg !11661
  %8 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !11662
  %faceFlags3 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %8, i32 0, i32 9, !dbg !11663
  %9 = load %struct.DMFlagMat*, %struct.DMFlagMat** %faceFlags3, align 8, !dbg !11663
  store %struct.DMFlagMat* %9, %struct.DMFlagMat** %faceFlags, align 8, !dbg !11661
  call void @llvm.dbg.declare(metadata [4 x [3 x i16]]** %lnors, metadata !11664, metadata !DIExpression()), !dbg !11665
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !11666
  %getTessFaceDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %10, i32 0, i32 52, !dbg !11667
  %11 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray, align 8, !dbg !11667
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !11668
  %call4 = call i8* %11(%struct.DerivedMesh* %12, i32 40), !dbg !11666
  %13 = bitcast i8* %call4 to [4 x [3 x i16]]*, !dbg !11666
  store [4 x [3 x i16]]* %13, [4 x [3 x i16]]** %lnors, align 8, !dbg !11665
  call void @llvm.dbg.declare(metadata i32* %a, metadata !11669, metadata !DIExpression()), !dbg !11670
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11671, metadata !DIExpression()), !dbg !11672
  call void @llvm.dbg.declare(metadata i32* %numVerts, metadata !11673, metadata !DIExpression()), !dbg !11674
  call void @llvm.dbg.declare(metadata i32* %matnr, metadata !11675, metadata !DIExpression()), !dbg !11676
  call void @llvm.dbg.declare(metadata i32* %new_matnr, metadata !11677, metadata !DIExpression()), !dbg !11678
  call void @llvm.dbg.declare(metadata i32* %totface, metadata !11679, metadata !DIExpression()), !dbg !11680
  %14 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !11681
  call void @CCG_key_top_level(%struct.CCGKey* %key, %struct.CCGSubSurf* %14), !dbg !11682
  %15 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !11683
  call void @ccgdm_pbvh_update(%struct.CCGDerivedMesh* %15), !dbg !11684
  store i32 -1, i32* %matnr, align 4, !dbg !11685
  %16 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !11686
  %call5 = call i32 @ccgSubSurf_getNumFaces(%struct.CCGSubSurf* %16), !dbg !11687
  store i32 %call5, i32* %totface, align 4, !dbg !11688
  store i32 0, i32* %a, align 4, !dbg !11689
  store i32 0, i32* %i, align 4, !dbg !11691
  br label %for.cond, !dbg !11692

for.cond:                                         ; preds = %for.inc246, %entry
  %17 = load i32, i32* %i, align 4, !dbg !11693
  %18 = load i32, i32* %totface, align 4, !dbg !11695
  %cmp = icmp slt i32 %17, %18, !dbg !11696
  br i1 %cmp, label %for.body, label %for.end248, !dbg !11697

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f, metadata !11698, metadata !DIExpression()), !dbg !11700
  %19 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !11701
  %faceMap = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %19, i32 0, i32 7, !dbg !11702
  %20 = load %struct.anon.1*, %struct.anon.1** %faceMap, align 8, !dbg !11702
  %21 = load i32, i32* %i, align 4, !dbg !11703
  %idxprom = sext i32 %21 to i64, !dbg !11701
  %arrayidx = getelementptr inbounds %struct.anon.1, %struct.anon.1* %20, i64 %idxprom, !dbg !11701
  %face = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx, i32 0, i32 3, !dbg !11704
  %22 = load %struct.CCGFace*, %struct.CCGFace** %face, align 8, !dbg !11704
  store %struct.CCGFace* %22, %struct.CCGFace** %f, align 8, !dbg !11700
  call void @llvm.dbg.declare(metadata [4 x [3 x i16]]** %ln, metadata !11705, metadata !DIExpression()), !dbg !11706
  store [4 x [3 x i16]]* null, [4 x [3 x i16]]** %ln, align 8, !dbg !11706
  call void @llvm.dbg.declare(metadata i32* %S, metadata !11707, metadata !DIExpression()), !dbg !11708
  call void @llvm.dbg.declare(metadata i32* %x, metadata !11709, metadata !DIExpression()), !dbg !11710
  call void @llvm.dbg.declare(metadata i32* %y, metadata !11711, metadata !DIExpression()), !dbg !11712
  call void @llvm.dbg.declare(metadata i32* %drawSmooth, metadata !11713, metadata !DIExpression()), !dbg !11714
  call void @llvm.dbg.declare(metadata i32* %index, metadata !11715, metadata !DIExpression()), !dbg !11716
  %23 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !11717
  %call6 = call i8* @ccgSubSurf_getFaceFaceHandle(%struct.CCGFace* %23), !dbg !11717
  %24 = ptrtoint i8* %call6 to i64, !dbg !11717
  %conv = trunc i64 %24 to i32, !dbg !11717
  store i32 %conv, i32* %index, align 4, !dbg !11716
  call void @llvm.dbg.declare(metadata i32* %origIndex, metadata !11718, metadata !DIExpression()), !dbg !11719
  %25 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !11720
  %26 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !11721
  %call7 = call i32 @ccgDM_getFaceMapIndex(%struct.CCGSubSurf* %25, %struct.CCGFace* %26), !dbg !11722
  store i32 %call7, i32* %origIndex, align 4, !dbg !11719
  %27 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !11723
  %call8 = call i32 @ccgSubSurf_getFaceNumVerts(%struct.CCGFace* %27), !dbg !11724
  store i32 %call8, i32* %numVerts, align 4, !dbg !11725
  %28 = load %struct.DMFlagMat*, %struct.DMFlagMat** %faceFlags, align 8, !dbg !11726
  %tobool = icmp ne %struct.DMFlagMat* %28, null, !dbg !11726
  br i1 %tobool, label %if.then, label %if.else, !dbg !11728

if.then:                                          ; preds = %for.body
  %29 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !11729
  %tobool9 = icmp ne [4 x [3 x i16]]* %29, null, !dbg !11729
  br i1 %tobool9, label %lor.end, label %lor.rhs, !dbg !11731

lor.rhs:                                          ; preds = %if.then
  %30 = load %struct.DMFlagMat*, %struct.DMFlagMat** %faceFlags, align 8, !dbg !11732
  %31 = load i32, i32* %index, align 4, !dbg !11733
  %idxprom10 = sext i32 %31 to i64, !dbg !11732
  %arrayidx11 = getelementptr inbounds %struct.DMFlagMat, %struct.DMFlagMat* %30, i64 %idxprom10, !dbg !11732
  %flag = getelementptr inbounds %struct.DMFlagMat, %struct.DMFlagMat* %arrayidx11, i32 0, i32 1, !dbg !11734
  %32 = load i8, i8* %flag, align 2, !dbg !11734
  %conv12 = zext i8 %32 to i32, !dbg !11732
  %and = and i32 %conv12, 1, !dbg !11735
  %tobool13 = icmp ne i32 %and, 0, !dbg !11731
  br label %lor.end, !dbg !11731

lor.end:                                          ; preds = %lor.rhs, %if.then
  %33 = phi i1 [ true, %if.then ], [ %tobool13, %lor.rhs ]
  %lor.ext = zext i1 %33 to i32, !dbg !11731
  store i32 %lor.ext, i32* %drawSmooth, align 4, !dbg !11736
  %34 = load %struct.DMFlagMat*, %struct.DMFlagMat** %faceFlags, align 8, !dbg !11737
  %35 = load i32, i32* %index, align 4, !dbg !11738
  %idxprom14 = sext i32 %35 to i64, !dbg !11737
  %arrayidx15 = getelementptr inbounds %struct.DMFlagMat, %struct.DMFlagMat* %34, i64 %idxprom14, !dbg !11737
  %mat_nr = getelementptr inbounds %struct.DMFlagMat, %struct.DMFlagMat* %arrayidx15, i32 0, i32 0, !dbg !11739
  %36 = load i16, i16* %mat_nr, align 2, !dbg !11739
  %conv16 = sext i16 %36 to i32, !dbg !11737
  %add = add nsw i32 %conv16, 1, !dbg !11740
  store i32 %add, i32* %new_matnr, align 4, !dbg !11741
  br label %if.end, !dbg !11742

if.else:                                          ; preds = %for.body
  store i32 1, i32* %drawSmooth, align 4, !dbg !11743
  store i32 1, i32* %new_matnr, align 4, !dbg !11745
  br label %if.end

if.end:                                           ; preds = %if.else, %lor.end
  %37 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !11746
  %tobool17 = icmp ne [4 x [3 x i16]]* %37, null, !dbg !11746
  br i1 %tobool17, label %if.then18, label %if.end20, !dbg !11748

if.then18:                                        ; preds = %if.end
  %38 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !11749
  store [4 x [3 x i16]]* %38, [4 x [3 x i16]]** %ln, align 8, !dbg !11751
  %39 = load i32, i32* %gridFaces, align 4, !dbg !11752
  %40 = load i32, i32* %gridFaces, align 4, !dbg !11753
  %mul = mul nsw i32 %39, %40, !dbg !11754
  %41 = load i32, i32* %numVerts, align 4, !dbg !11755
  %mul19 = mul nsw i32 %mul, %41, !dbg !11756
  %42 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !11757
  %idx.ext = sext i32 %mul19 to i64, !dbg !11757
  %add.ptr = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %42, i64 %idx.ext, !dbg !11757
  store [4 x [3 x i16]]* %add.ptr, [4 x [3 x i16]]** %lnors, align 8, !dbg !11757
  br label %if.end20, !dbg !11758

if.end20:                                         ; preds = %if.then18, %if.end
  %43 = load i32, i32* %new_matnr, align 4, !dbg !11759
  %44 = load i32, i32* %matnr, align 4, !dbg !11761
  %cmp21 = icmp ne i32 %43, %44, !dbg !11762
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !11763

if.then23:                                        ; preds = %if.end20
  %45 = load void (i8*, i32, i8*)*, void (i8*, i32, i8*)** %setMaterial.addr, align 8, !dbg !11764
  %46 = load i8*, i8** %userData.addr, align 8, !dbg !11766
  %47 = load i32, i32* %new_matnr, align 4, !dbg !11767
  store i32 %47, i32* %matnr, align 4, !dbg !11768
  %48 = bitcast %struct.GPUVertexAttribs* %gattribs to i8*, !dbg !11769
  call void %45(i8* %46, i32 %47, i8* %48), !dbg !11764
  %49 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !11770
  call void @DM_vertex_attributes_from_gpu(%struct.DerivedMesh* %49, %struct.GPUVertexAttribs* %gattribs, %struct.DMVertexAttribs* %attribs), !dbg !11771
  br label %if.end24, !dbg !11772

if.end24:                                         ; preds = %if.then23, %if.end20
  %50 = load i8 (i8*, i32)*, i8 (i8*, i32)** %setFace.addr, align 8, !dbg !11773
  %tobool25 = icmp ne i8 (i8*, i32)* %50, null, !dbg !11773
  br i1 %tobool25, label %land.lhs.true, label %if.end35, !dbg !11775

land.lhs.true:                                    ; preds = %if.end24
  %51 = load i32, i32* %origIndex, align 4, !dbg !11776
  %cmp26 = icmp ne i32 %51, -1, !dbg !11777
  br i1 %cmp26, label %land.lhs.true28, label %if.end35, !dbg !11778

land.lhs.true28:                                  ; preds = %land.lhs.true
  %52 = load i8 (i8*, i32)*, i8 (i8*, i32)** %setFace.addr, align 8, !dbg !11779
  %53 = load i8*, i8** %userData.addr, align 8, !dbg !11780
  %54 = load i32, i32* %origIndex, align 4, !dbg !11781
  %call29 = call zeroext i8 %52(i8* %53, i32 %54), !dbg !11779
  %tobool30 = icmp ne i8 %call29, 0, !dbg !11779
  br i1 %tobool30, label %if.end35, label %if.then31, !dbg !11782

if.then31:                                        ; preds = %land.lhs.true28
  %55 = load i32, i32* %gridFaces, align 4, !dbg !11783
  %56 = load i32, i32* %gridFaces, align 4, !dbg !11785
  %mul32 = mul nsw i32 %55, %56, !dbg !11786
  %57 = load i32, i32* %numVerts, align 4, !dbg !11787
  %mul33 = mul nsw i32 %mul32, %57, !dbg !11788
  %58 = load i32, i32* %a, align 4, !dbg !11789
  %add34 = add nsw i32 %58, %mul33, !dbg !11789
  store i32 %add34, i32* %a, align 4, !dbg !11789
  br label %for.inc246, !dbg !11790

if.end35:                                         ; preds = %land.lhs.true28, %land.lhs.true, %if.end24
  %59 = load i32, i32* %drawSmooth, align 4, !dbg !11791
  %tobool36 = icmp ne i32 %59, 0, !dbg !11791
  %60 = zext i1 %tobool36 to i64, !dbg !11791
  %cond = select i1 %tobool36, i32 7425, i32 7424, !dbg !11791
  call void @glShadeModel(i32 %cond), !dbg !11792
  store i32 0, i32* %S, align 4, !dbg !11793
  br label %for.cond37, !dbg !11795

for.cond37:                                       ; preds = %for.inc243, %if.end35
  %61 = load i32, i32* %S, align 4, !dbg !11796
  %62 = load i32, i32* %numVerts, align 4, !dbg !11798
  %cmp38 = icmp slt i32 %61, %62, !dbg !11799
  br i1 %cmp38, label %for.body40, label %for.end245, !dbg !11800

for.body40:                                       ; preds = %for.cond37
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %faceGridData, metadata !11801, metadata !DIExpression()), !dbg !11803
  %63 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !11804
  %64 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !11805
  %65 = load i32, i32* %S, align 4, !dbg !11806
  %call41 = call i8* @ccgSubSurf_getFaceGridDataArray(%struct.CCGSubSurf* %63, %struct.CCGFace* %64, i32 %65), !dbg !11807
  %66 = bitcast i8* %call41 to %struct.CCGElem*, !dbg !11807
  store %struct.CCGElem* %66, %struct.CCGElem** %faceGridData, align 8, !dbg !11803
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %vda, metadata !11808, metadata !DIExpression()), !dbg !11809
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %vdb, metadata !11810, metadata !DIExpression()), !dbg !11811
  %67 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %ln, align 8, !dbg !11812
  %tobool42 = icmp ne [4 x [3 x i16]]* %67, null, !dbg !11812
  br i1 %tobool42, label %if.then43, label %if.else108, !dbg !11814

if.then43:                                        ; preds = %for.body40
  call void @glBegin(i32 7), !dbg !11815
  store i32 0, i32* %y, align 4, !dbg !11817
  br label %for.cond44, !dbg !11819

for.cond44:                                       ; preds = %for.inc105, %if.then43
  %68 = load i32, i32* %y, align 4, !dbg !11820
  %69 = load i32, i32* %gridFaces, align 4, !dbg !11822
  %cmp45 = icmp slt i32 %68, %69, !dbg !11823
  br i1 %cmp45, label %for.body47, label %for.end107, !dbg !11824

for.body47:                                       ; preds = %for.cond44
  store i32 0, i32* %x, align 4, !dbg !11825
  br label %for.cond48, !dbg !11828

for.cond48:                                       ; preds = %for.inc, %for.body47
  %70 = load i32, i32* %x, align 4, !dbg !11829
  %71 = load i32, i32* %gridFaces, align 4, !dbg !11831
  %cmp49 = icmp slt i32 %70, %71, !dbg !11832
  br i1 %cmp49, label %for.body51, label %for.end, !dbg !11833

for.body51:                                       ; preds = %for.cond48
  call void @llvm.dbg.declare(metadata float** %aco, metadata !11834, metadata !DIExpression()), !dbg !11836
  %72 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !11837
  %73 = load i32, i32* %x, align 4, !dbg !11838
  %74 = load i32, i32* %y, align 4, !dbg !11839
  %add52 = add nsw i32 %74, 0, !dbg !11840
  %call53 = call float* @CCG_grid_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %72, i32 %73, i32 %add52), !dbg !11841
  store float* %call53, float** %aco, align 8, !dbg !11836
  call void @llvm.dbg.declare(metadata float** %bco, metadata !11842, metadata !DIExpression()), !dbg !11843
  %75 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !11844
  %76 = load i32, i32* %x, align 4, !dbg !11845
  %add54 = add nsw i32 %76, 1, !dbg !11846
  %77 = load i32, i32* %y, align 4, !dbg !11847
  %add55 = add nsw i32 %77, 0, !dbg !11848
  %call56 = call float* @CCG_grid_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %75, i32 %add54, i32 %add55), !dbg !11849
  store float* %call56, float** %bco, align 8, !dbg !11843
  call void @llvm.dbg.declare(metadata float** %cco, metadata !11850, metadata !DIExpression()), !dbg !11851
  %78 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !11852
  %79 = load i32, i32* %x, align 4, !dbg !11853
  %add57 = add nsw i32 %79, 1, !dbg !11854
  %80 = load i32, i32* %y, align 4, !dbg !11855
  %add58 = add nsw i32 %80, 1, !dbg !11856
  %call59 = call float* @CCG_grid_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %78, i32 %add57, i32 %add58), !dbg !11857
  store float* %call59, float** %cco, align 8, !dbg !11851
  call void @llvm.dbg.declare(metadata float** %dco, metadata !11858, metadata !DIExpression()), !dbg !11859
  %81 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !11860
  %82 = load i32, i32* %x, align 4, !dbg !11861
  %83 = load i32, i32* %y, align 4, !dbg !11862
  %add60 = add nsw i32 %83, 1, !dbg !11863
  %call61 = call float* @CCG_grid_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %81, i32 %82, i32 %add60), !dbg !11864
  store float* %call61, float** %dco, align 8, !dbg !11859
  %totorco = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 7, !dbg !11865
  %84 = load i32, i32* %totorco, align 4, !dbg !11865
  %tobool62 = icmp ne i32 %84, 0, !dbg !11865
  br i1 %tobool62, label %if.then63, label %if.else67, !dbg !11868

if.then63:                                        ; preds = %for.body51
  %85 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !11865
  %86 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !11865
  %87 = load i32, i32* %S, align 4, !dbg !11865
  %88 = load i32, i32* %x, align 4, !dbg !11865
  %add64 = add nsw i32 %88, 0, !dbg !11865
  %89 = load i32, i32* %y, align 4, !dbg !11865
  %add65 = add nsw i32 %89, 1, !dbg !11865
  %90 = load i32, i32* %edgeSize, align 4, !dbg !11865
  %91 = load i32, i32* %gridSize, align 4, !dbg !11865
  %call66 = call i32 @getFaceIndex(%struct.CCGSubSurf* %85, %struct.CCGFace* %86, i32 %87, i32 %add64, i32 %add65, i32 %90, i32 %91), !dbg !11865
  store i32 %call66, i32* %index, align 4, !dbg !11865
  br label %if.end68, !dbg !11865

if.else67:                                        ; preds = %for.body51
  store i32 0, i32* %index, align 4, !dbg !11865
  br label %if.end68

if.end68:                                         ; preds = %if.else67, %if.then63
  %92 = load i32, i32* %a, align 4, !dbg !11868
  %93 = load i32, i32* %index, align 4, !dbg !11868
  call void @ccgdm_draw_attrib_vertex(%struct.DMVertexAttribs* %attribs, i32 %92, i32 %93, i32 1), !dbg !11868
  %94 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %ln, align 8, !dbg !11869
  %arrayidx69 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %94, i64 0, !dbg !11869
  %arrayidx70 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %arrayidx69, i64 0, i64 1, !dbg !11869
  %arraydecay = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx70, i64 0, i64 0, !dbg !11869
  call void @glNormal3sv(i16* %arraydecay), !dbg !11870
  %95 = load float*, float** %dco, align 8, !dbg !11871
  call void @glVertex3fv(float* %95), !dbg !11872
  %totorco71 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 7, !dbg !11873
  %96 = load i32, i32* %totorco71, align 4, !dbg !11873
  %tobool72 = icmp ne i32 %96, 0, !dbg !11873
  br i1 %tobool72, label %if.then73, label %if.else77, !dbg !11876

if.then73:                                        ; preds = %if.end68
  %97 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !11873
  %98 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !11873
  %99 = load i32, i32* %S, align 4, !dbg !11873
  %100 = load i32, i32* %x, align 4, !dbg !11873
  %add74 = add nsw i32 %100, 1, !dbg !11873
  %101 = load i32, i32* %y, align 4, !dbg !11873
  %add75 = add nsw i32 %101, 1, !dbg !11873
  %102 = load i32, i32* %edgeSize, align 4, !dbg !11873
  %103 = load i32, i32* %gridSize, align 4, !dbg !11873
  %call76 = call i32 @getFaceIndex(%struct.CCGSubSurf* %97, %struct.CCGFace* %98, i32 %99, i32 %add74, i32 %add75, i32 %102, i32 %103), !dbg !11873
  store i32 %call76, i32* %index, align 4, !dbg !11873
  br label %if.end78, !dbg !11873

if.else77:                                        ; preds = %if.end68
  store i32 0, i32* %index, align 4, !dbg !11873
  br label %if.end78

if.end78:                                         ; preds = %if.else77, %if.then73
  %104 = load i32, i32* %a, align 4, !dbg !11876
  %105 = load i32, i32* %index, align 4, !dbg !11876
  call void @ccgdm_draw_attrib_vertex(%struct.DMVertexAttribs* %attribs, i32 %104, i32 %105, i32 2), !dbg !11876
  %106 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %ln, align 8, !dbg !11877
  %arrayidx79 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %106, i64 0, !dbg !11877
  %arrayidx80 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %arrayidx79, i64 0, i64 2, !dbg !11877
  %arraydecay81 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx80, i64 0, i64 0, !dbg !11877
  call void @glNormal3sv(i16* %arraydecay81), !dbg !11878
  %107 = load float*, float** %cco, align 8, !dbg !11879
  call void @glVertex3fv(float* %107), !dbg !11880
  %totorco82 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 7, !dbg !11881
  %108 = load i32, i32* %totorco82, align 4, !dbg !11881
  %tobool83 = icmp ne i32 %108, 0, !dbg !11881
  br i1 %tobool83, label %if.then84, label %if.else88, !dbg !11884

if.then84:                                        ; preds = %if.end78
  %109 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !11881
  %110 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !11881
  %111 = load i32, i32* %S, align 4, !dbg !11881
  %112 = load i32, i32* %x, align 4, !dbg !11881
  %add85 = add nsw i32 %112, 1, !dbg !11881
  %113 = load i32, i32* %y, align 4, !dbg !11881
  %add86 = add nsw i32 %113, 0, !dbg !11881
  %114 = load i32, i32* %edgeSize, align 4, !dbg !11881
  %115 = load i32, i32* %gridSize, align 4, !dbg !11881
  %call87 = call i32 @getFaceIndex(%struct.CCGSubSurf* %109, %struct.CCGFace* %110, i32 %111, i32 %add85, i32 %add86, i32 %114, i32 %115), !dbg !11881
  store i32 %call87, i32* %index, align 4, !dbg !11881
  br label %if.end89, !dbg !11881

if.else88:                                        ; preds = %if.end78
  store i32 0, i32* %index, align 4, !dbg !11881
  br label %if.end89

if.end89:                                         ; preds = %if.else88, %if.then84
  %116 = load i32, i32* %a, align 4, !dbg !11884
  %117 = load i32, i32* %index, align 4, !dbg !11884
  call void @ccgdm_draw_attrib_vertex(%struct.DMVertexAttribs* %attribs, i32 %116, i32 %117, i32 3), !dbg !11884
  %118 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %ln, align 8, !dbg !11885
  %arrayidx90 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %118, i64 0, !dbg !11885
  %arrayidx91 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %arrayidx90, i64 0, i64 3, !dbg !11885
  %arraydecay92 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx91, i64 0, i64 0, !dbg !11885
  call void @glNormal3sv(i16* %arraydecay92), !dbg !11886
  %119 = load float*, float** %bco, align 8, !dbg !11887
  call void @glVertex3fv(float* %119), !dbg !11888
  %totorco93 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 7, !dbg !11889
  %120 = load i32, i32* %totorco93, align 4, !dbg !11889
  %tobool94 = icmp ne i32 %120, 0, !dbg !11889
  br i1 %tobool94, label %if.then95, label %if.else99, !dbg !11892

if.then95:                                        ; preds = %if.end89
  %121 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !11889
  %122 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !11889
  %123 = load i32, i32* %S, align 4, !dbg !11889
  %124 = load i32, i32* %x, align 4, !dbg !11889
  %add96 = add nsw i32 %124, 0, !dbg !11889
  %125 = load i32, i32* %y, align 4, !dbg !11889
  %add97 = add nsw i32 %125, 0, !dbg !11889
  %126 = load i32, i32* %edgeSize, align 4, !dbg !11889
  %127 = load i32, i32* %gridSize, align 4, !dbg !11889
  %call98 = call i32 @getFaceIndex(%struct.CCGSubSurf* %121, %struct.CCGFace* %122, i32 %123, i32 %add96, i32 %add97, i32 %126, i32 %127), !dbg !11889
  store i32 %call98, i32* %index, align 4, !dbg !11889
  br label %if.end100, !dbg !11889

if.else99:                                        ; preds = %if.end89
  store i32 0, i32* %index, align 4, !dbg !11889
  br label %if.end100

if.end100:                                        ; preds = %if.else99, %if.then95
  %128 = load i32, i32* %a, align 4, !dbg !11892
  %129 = load i32, i32* %index, align 4, !dbg !11892
  call void @ccgdm_draw_attrib_vertex(%struct.DMVertexAttribs* %attribs, i32 %128, i32 %129, i32 0), !dbg !11892
  %130 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %ln, align 8, !dbg !11893
  %arrayidx101 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %130, i64 0, !dbg !11893
  %arrayidx102 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %arrayidx101, i64 0, i64 0, !dbg !11893
  %arraydecay103 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx102, i64 0, i64 0, !dbg !11893
  call void @glNormal3sv(i16* %arraydecay103), !dbg !11894
  %131 = load float*, float** %aco, align 8, !dbg !11895
  call void @glVertex3fv(float* %131), !dbg !11896
  %132 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %ln, align 8, !dbg !11897
  %incdec.ptr = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %132, i32 1, !dbg !11897
  store [4 x [3 x i16]]* %incdec.ptr, [4 x [3 x i16]]** %ln, align 8, !dbg !11897
  %133 = load i32, i32* %a, align 4, !dbg !11898
  %inc = add nsw i32 %133, 1, !dbg !11898
  store i32 %inc, i32* %a, align 4, !dbg !11898
  br label %for.inc, !dbg !11899

for.inc:                                          ; preds = %if.end100
  %134 = load i32, i32* %x, align 4, !dbg !11900
  %inc104 = add nsw i32 %134, 1, !dbg !11900
  store i32 %inc104, i32* %x, align 4, !dbg !11900
  br label %for.cond48, !dbg !11901, !llvm.loop !11902

for.end:                                          ; preds = %for.cond48
  br label %for.inc105, !dbg !11904

for.inc105:                                       ; preds = %for.end
  %135 = load i32, i32* %y, align 4, !dbg !11905
  %inc106 = add nsw i32 %135, 1, !dbg !11905
  store i32 %inc106, i32* %y, align 4, !dbg !11905
  br label %for.cond44, !dbg !11906, !llvm.loop !11907

for.end107:                                       ; preds = %for.cond44
  call void @glEnd(), !dbg !11909
  br label %if.end242, !dbg !11910

if.else108:                                       ; preds = %for.body40
  %136 = load i32, i32* %drawSmooth, align 4, !dbg !11911
  %tobool109 = icmp ne i32 %136, 0, !dbg !11911
  br i1 %tobool109, label %if.then110, label %if.else179, !dbg !11913

if.then110:                                       ; preds = %if.else108
  store i32 0, i32* %y, align 4, !dbg !11914
  br label %for.cond111, !dbg !11917

for.cond111:                                      ; preds = %for.inc176, %if.then110
  %137 = load i32, i32* %y, align 4, !dbg !11918
  %138 = load i32, i32* %gridFaces, align 4, !dbg !11920
  %cmp112 = icmp slt i32 %137, %138, !dbg !11921
  br i1 %cmp112, label %for.body114, label %for.end178, !dbg !11922

for.body114:                                      ; preds = %for.cond111
  call void @glBegin(i32 8), !dbg !11923
  store i32 0, i32* %x, align 4, !dbg !11925
  br label %for.cond115, !dbg !11927

for.cond115:                                      ; preds = %for.inc148, %for.body114
  %139 = load i32, i32* %x, align 4, !dbg !11928
  %140 = load i32, i32* %gridFaces, align 4, !dbg !11930
  %cmp116 = icmp slt i32 %139, %140, !dbg !11931
  br i1 %cmp116, label %for.body118, label %for.end150, !dbg !11932

for.body118:                                      ; preds = %for.cond115
  %141 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !11933
  %142 = load i32, i32* %x, align 4, !dbg !11935
  %143 = load i32, i32* %y, align 4, !dbg !11936
  %call119 = call %struct.CCGElem* @CCG_grid_elem(%struct.CCGKey* %key, %struct.CCGElem* %141, i32 %142, i32 %143), !dbg !11937
  store %struct.CCGElem* %call119, %struct.CCGElem** %vda, align 8, !dbg !11938
  %144 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !11939
  %145 = load i32, i32* %x, align 4, !dbg !11940
  %146 = load i32, i32* %y, align 4, !dbg !11941
  %add120 = add nsw i32 %146, 1, !dbg !11942
  %call121 = call %struct.CCGElem* @CCG_grid_elem(%struct.CCGKey* %key, %struct.CCGElem* %144, i32 %145, i32 %add120), !dbg !11943
  store %struct.CCGElem* %call121, %struct.CCGElem** %vdb, align 8, !dbg !11944
  %totorco122 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 7, !dbg !11945
  %147 = load i32, i32* %totorco122, align 4, !dbg !11945
  %tobool123 = icmp ne i32 %147, 0, !dbg !11945
  br i1 %tobool123, label %if.then124, label %if.else128, !dbg !11948

if.then124:                                       ; preds = %for.body118
  %148 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !11945
  %149 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !11945
  %150 = load i32, i32* %S, align 4, !dbg !11945
  %151 = load i32, i32* %x, align 4, !dbg !11945
  %add125 = add nsw i32 %151, 0, !dbg !11945
  %152 = load i32, i32* %y, align 4, !dbg !11945
  %add126 = add nsw i32 %152, 0, !dbg !11945
  %153 = load i32, i32* %edgeSize, align 4, !dbg !11945
  %154 = load i32, i32* %gridSize, align 4, !dbg !11945
  %call127 = call i32 @getFaceIndex(%struct.CCGSubSurf* %148, %struct.CCGFace* %149, i32 %150, i32 %add125, i32 %add126, i32 %153, i32 %154), !dbg !11945
  store i32 %call127, i32* %index, align 4, !dbg !11945
  br label %if.end129, !dbg !11945

if.else128:                                       ; preds = %for.body118
  store i32 0, i32* %index, align 4, !dbg !11945
  br label %if.end129

if.end129:                                        ; preds = %if.else128, %if.then124
  %155 = load i32, i32* %a, align 4, !dbg !11948
  %156 = load i32, i32* %index, align 4, !dbg !11948
  call void @ccgdm_draw_attrib_vertex(%struct.DMVertexAttribs* %attribs, i32 %155, i32 %156, i32 0), !dbg !11948
  %157 = load %struct.CCGElem*, %struct.CCGElem** %vda, align 8, !dbg !11949
  %call130 = call float* @CCG_elem_no(%struct.CCGKey* %key, %struct.CCGElem* %157), !dbg !11950
  call void @glNormal3fv(float* %call130), !dbg !11951
  %158 = load %struct.CCGElem*, %struct.CCGElem** %vda, align 8, !dbg !11952
  %call131 = call float* @CCG_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %158), !dbg !11953
  call void @glVertex3fv(float* %call131), !dbg !11954
  %totorco132 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 7, !dbg !11955
  %159 = load i32, i32* %totorco132, align 4, !dbg !11955
  %tobool133 = icmp ne i32 %159, 0, !dbg !11955
  br i1 %tobool133, label %if.then134, label %if.else138, !dbg !11958

if.then134:                                       ; preds = %if.end129
  %160 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !11955
  %161 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !11955
  %162 = load i32, i32* %S, align 4, !dbg !11955
  %163 = load i32, i32* %x, align 4, !dbg !11955
  %add135 = add nsw i32 %163, 0, !dbg !11955
  %164 = load i32, i32* %y, align 4, !dbg !11955
  %add136 = add nsw i32 %164, 1, !dbg !11955
  %165 = load i32, i32* %edgeSize, align 4, !dbg !11955
  %166 = load i32, i32* %gridSize, align 4, !dbg !11955
  %call137 = call i32 @getFaceIndex(%struct.CCGSubSurf* %160, %struct.CCGFace* %161, i32 %162, i32 %add135, i32 %add136, i32 %165, i32 %166), !dbg !11955
  store i32 %call137, i32* %index, align 4, !dbg !11955
  br label %if.end139, !dbg !11955

if.else138:                                       ; preds = %if.end129
  store i32 0, i32* %index, align 4, !dbg !11955
  br label %if.end139

if.end139:                                        ; preds = %if.else138, %if.then134
  %167 = load i32, i32* %a, align 4, !dbg !11958
  %168 = load i32, i32* %index, align 4, !dbg !11958
  call void @ccgdm_draw_attrib_vertex(%struct.DMVertexAttribs* %attribs, i32 %167, i32 %168, i32 1), !dbg !11958
  %169 = load %struct.CCGElem*, %struct.CCGElem** %vdb, align 8, !dbg !11959
  %call140 = call float* @CCG_elem_no(%struct.CCGKey* %key, %struct.CCGElem* %169), !dbg !11960
  call void @glNormal3fv(float* %call140), !dbg !11961
  %170 = load %struct.CCGElem*, %struct.CCGElem** %vdb, align 8, !dbg !11962
  %call141 = call float* @CCG_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %170), !dbg !11963
  call void @glVertex3fv(float* %call141), !dbg !11964
  %171 = load i32, i32* %x, align 4, !dbg !11965
  %172 = load i32, i32* %gridFaces, align 4, !dbg !11967
  %sub142 = sub nsw i32 %172, 1, !dbg !11968
  %cmp143 = icmp ne i32 %171, %sub142, !dbg !11969
  br i1 %cmp143, label %if.then145, label %if.end147, !dbg !11970

if.then145:                                       ; preds = %if.end139
  %173 = load i32, i32* %a, align 4, !dbg !11971
  %inc146 = add nsw i32 %173, 1, !dbg !11971
  store i32 %inc146, i32* %a, align 4, !dbg !11971
  br label %if.end147, !dbg !11972

if.end147:                                        ; preds = %if.then145, %if.end139
  br label %for.inc148, !dbg !11973

for.inc148:                                       ; preds = %if.end147
  %174 = load i32, i32* %x, align 4, !dbg !11974
  %inc149 = add nsw i32 %174, 1, !dbg !11974
  store i32 %inc149, i32* %x, align 4, !dbg !11974
  br label %for.cond115, !dbg !11975, !llvm.loop !11976

for.end150:                                       ; preds = %for.cond115
  %175 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !11978
  %176 = load i32, i32* %x, align 4, !dbg !11979
  %177 = load i32, i32* %y, align 4, !dbg !11980
  %add151 = add nsw i32 %177, 0, !dbg !11981
  %call152 = call %struct.CCGElem* @CCG_grid_elem(%struct.CCGKey* %key, %struct.CCGElem* %175, i32 %176, i32 %add151), !dbg !11982
  store %struct.CCGElem* %call152, %struct.CCGElem** %vda, align 8, !dbg !11983
  %178 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !11984
  %179 = load i32, i32* %x, align 4, !dbg !11985
  %180 = load i32, i32* %y, align 4, !dbg !11986
  %add153 = add nsw i32 %180, 1, !dbg !11987
  %call154 = call %struct.CCGElem* @CCG_grid_elem(%struct.CCGKey* %key, %struct.CCGElem* %178, i32 %179, i32 %add153), !dbg !11988
  store %struct.CCGElem* %call154, %struct.CCGElem** %vdb, align 8, !dbg !11989
  %totorco155 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 7, !dbg !11990
  %181 = load i32, i32* %totorco155, align 4, !dbg !11990
  %tobool156 = icmp ne i32 %181, 0, !dbg !11990
  br i1 %tobool156, label %if.then157, label %if.else161, !dbg !11993

if.then157:                                       ; preds = %for.end150
  %182 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !11990
  %183 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !11990
  %184 = load i32, i32* %S, align 4, !dbg !11990
  %185 = load i32, i32* %x, align 4, !dbg !11990
  %add158 = add nsw i32 %185, 0, !dbg !11990
  %186 = load i32, i32* %y, align 4, !dbg !11990
  %add159 = add nsw i32 %186, 0, !dbg !11990
  %187 = load i32, i32* %edgeSize, align 4, !dbg !11990
  %188 = load i32, i32* %gridSize, align 4, !dbg !11990
  %call160 = call i32 @getFaceIndex(%struct.CCGSubSurf* %182, %struct.CCGFace* %183, i32 %184, i32 %add158, i32 %add159, i32 %187, i32 %188), !dbg !11990
  store i32 %call160, i32* %index, align 4, !dbg !11990
  br label %if.end162, !dbg !11990

if.else161:                                       ; preds = %for.end150
  store i32 0, i32* %index, align 4, !dbg !11990
  br label %if.end162

if.end162:                                        ; preds = %if.else161, %if.then157
  %189 = load i32, i32* %a, align 4, !dbg !11993
  %190 = load i32, i32* %index, align 4, !dbg !11993
  call void @ccgdm_draw_attrib_vertex(%struct.DMVertexAttribs* %attribs, i32 %189, i32 %190, i32 3), !dbg !11993
  %191 = load %struct.CCGElem*, %struct.CCGElem** %vda, align 8, !dbg !11994
  %call163 = call float* @CCG_elem_no(%struct.CCGKey* %key, %struct.CCGElem* %191), !dbg !11995
  call void @glNormal3fv(float* %call163), !dbg !11996
  %192 = load %struct.CCGElem*, %struct.CCGElem** %vda, align 8, !dbg !11997
  %call164 = call float* @CCG_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %192), !dbg !11998
  call void @glVertex3fv(float* %call164), !dbg !11999
  %totorco165 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 7, !dbg !12000
  %193 = load i32, i32* %totorco165, align 4, !dbg !12000
  %tobool166 = icmp ne i32 %193, 0, !dbg !12000
  br i1 %tobool166, label %if.then167, label %if.else171, !dbg !12003

if.then167:                                       ; preds = %if.end162
  %194 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !12000
  %195 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !12000
  %196 = load i32, i32* %S, align 4, !dbg !12000
  %197 = load i32, i32* %x, align 4, !dbg !12000
  %add168 = add nsw i32 %197, 0, !dbg !12000
  %198 = load i32, i32* %y, align 4, !dbg !12000
  %add169 = add nsw i32 %198, 1, !dbg !12000
  %199 = load i32, i32* %edgeSize, align 4, !dbg !12000
  %200 = load i32, i32* %gridSize, align 4, !dbg !12000
  %call170 = call i32 @getFaceIndex(%struct.CCGSubSurf* %194, %struct.CCGFace* %195, i32 %196, i32 %add168, i32 %add169, i32 %199, i32 %200), !dbg !12000
  store i32 %call170, i32* %index, align 4, !dbg !12000
  br label %if.end172, !dbg !12000

if.else171:                                       ; preds = %if.end162
  store i32 0, i32* %index, align 4, !dbg !12000
  br label %if.end172

if.end172:                                        ; preds = %if.else171, %if.then167
  %201 = load i32, i32* %a, align 4, !dbg !12003
  %202 = load i32, i32* %index, align 4, !dbg !12003
  call void @ccgdm_draw_attrib_vertex(%struct.DMVertexAttribs* %attribs, i32 %201, i32 %202, i32 2), !dbg !12003
  %203 = load %struct.CCGElem*, %struct.CCGElem** %vdb, align 8, !dbg !12004
  %call173 = call float* @CCG_elem_no(%struct.CCGKey* %key, %struct.CCGElem* %203), !dbg !12005
  call void @glNormal3fv(float* %call173), !dbg !12006
  %204 = load %struct.CCGElem*, %struct.CCGElem** %vdb, align 8, !dbg !12007
  %call174 = call float* @CCG_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %204), !dbg !12008
  call void @glVertex3fv(float* %call174), !dbg !12009
  call void @glEnd(), !dbg !12010
  %205 = load i32, i32* %a, align 4, !dbg !12011
  %inc175 = add nsw i32 %205, 1, !dbg !12011
  store i32 %inc175, i32* %a, align 4, !dbg !12011
  br label %for.inc176, !dbg !12012

for.inc176:                                       ; preds = %if.end172
  %206 = load i32, i32* %y, align 4, !dbg !12013
  %inc177 = add nsw i32 %206, 1, !dbg !12013
  store i32 %inc177, i32* %y, align 4, !dbg !12013
  br label %for.cond111, !dbg !12014, !llvm.loop !12015

for.end178:                                       ; preds = %for.cond111
  br label %if.end241, !dbg !12017

if.else179:                                       ; preds = %if.else108
  call void @glBegin(i32 7), !dbg !12018
  store i32 0, i32* %y, align 4, !dbg !12020
  br label %for.cond180, !dbg !12022

for.cond180:                                      ; preds = %for.inc238, %if.else179
  %207 = load i32, i32* %y, align 4, !dbg !12023
  %208 = load i32, i32* %gridFaces, align 4, !dbg !12025
  %cmp181 = icmp slt i32 %207, %208, !dbg !12026
  br i1 %cmp181, label %for.body183, label %for.end240, !dbg !12027

for.body183:                                      ; preds = %for.cond180
  store i32 0, i32* %x, align 4, !dbg !12028
  br label %for.cond184, !dbg !12031

for.cond184:                                      ; preds = %for.inc235, %for.body183
  %209 = load i32, i32* %x, align 4, !dbg !12032
  %210 = load i32, i32* %gridFaces, align 4, !dbg !12034
  %cmp185 = icmp slt i32 %209, %210, !dbg !12035
  br i1 %cmp185, label %for.body187, label %for.end237, !dbg !12036

for.body187:                                      ; preds = %for.cond184
  call void @llvm.dbg.declare(metadata float** %aco188, metadata !12037, metadata !DIExpression()), !dbg !12039
  %211 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !12040
  %212 = load i32, i32* %x, align 4, !dbg !12041
  %213 = load i32, i32* %y, align 4, !dbg !12042
  %add189 = add nsw i32 %213, 0, !dbg !12043
  %call190 = call float* @CCG_grid_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %211, i32 %212, i32 %add189), !dbg !12044
  store float* %call190, float** %aco188, align 8, !dbg !12039
  call void @llvm.dbg.declare(metadata float** %bco191, metadata !12045, metadata !DIExpression()), !dbg !12046
  %214 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !12047
  %215 = load i32, i32* %x, align 4, !dbg !12048
  %add192 = add nsw i32 %215, 1, !dbg !12049
  %216 = load i32, i32* %y, align 4, !dbg !12050
  %add193 = add nsw i32 %216, 0, !dbg !12051
  %call194 = call float* @CCG_grid_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %214, i32 %add192, i32 %add193), !dbg !12052
  store float* %call194, float** %bco191, align 8, !dbg !12046
  call void @llvm.dbg.declare(metadata float** %cco195, metadata !12053, metadata !DIExpression()), !dbg !12054
  %217 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !12055
  %218 = load i32, i32* %x, align 4, !dbg !12056
  %add196 = add nsw i32 %218, 1, !dbg !12057
  %219 = load i32, i32* %y, align 4, !dbg !12058
  %add197 = add nsw i32 %219, 1, !dbg !12059
  %call198 = call float* @CCG_grid_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %217, i32 %add196, i32 %add197), !dbg !12060
  store float* %call198, float** %cco195, align 8, !dbg !12054
  call void @llvm.dbg.declare(metadata float** %dco199, metadata !12061, metadata !DIExpression()), !dbg !12062
  %220 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !12063
  %221 = load i32, i32* %x, align 4, !dbg !12064
  %222 = load i32, i32* %y, align 4, !dbg !12065
  %add200 = add nsw i32 %222, 1, !dbg !12066
  %call201 = call float* @CCG_grid_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %220, i32 %221, i32 %add200), !dbg !12067
  store float* %call201, float** %dco199, align 8, !dbg !12062
  %223 = load float*, float** %aco188, align 8, !dbg !12068
  %224 = load float*, float** %bco191, align 8, !dbg !12069
  %225 = load float*, float** %cco195, align 8, !dbg !12070
  %226 = load float*, float** %dco199, align 8, !dbg !12071
  call void @ccgDM_glNormalFast(float* %223, float* %224, float* %225, float* %226), !dbg !12072
  %totorco202 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 7, !dbg !12073
  %227 = load i32, i32* %totorco202, align 4, !dbg !12073
  %tobool203 = icmp ne i32 %227, 0, !dbg !12073
  br i1 %tobool203, label %if.then204, label %if.else208, !dbg !12076

if.then204:                                       ; preds = %for.body187
  %228 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !12073
  %229 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !12073
  %230 = load i32, i32* %S, align 4, !dbg !12073
  %231 = load i32, i32* %x, align 4, !dbg !12073
  %add205 = add nsw i32 %231, 0, !dbg !12073
  %232 = load i32, i32* %y, align 4, !dbg !12073
  %add206 = add nsw i32 %232, 1, !dbg !12073
  %233 = load i32, i32* %edgeSize, align 4, !dbg !12073
  %234 = load i32, i32* %gridSize, align 4, !dbg !12073
  %call207 = call i32 @getFaceIndex(%struct.CCGSubSurf* %228, %struct.CCGFace* %229, i32 %230, i32 %add205, i32 %add206, i32 %233, i32 %234), !dbg !12073
  store i32 %call207, i32* %index, align 4, !dbg !12073
  br label %if.end209, !dbg !12073

if.else208:                                       ; preds = %for.body187
  store i32 0, i32* %index, align 4, !dbg !12073
  br label %if.end209

if.end209:                                        ; preds = %if.else208, %if.then204
  %235 = load i32, i32* %a, align 4, !dbg !12076
  %236 = load i32, i32* %index, align 4, !dbg !12076
  call void @ccgdm_draw_attrib_vertex(%struct.DMVertexAttribs* %attribs, i32 %235, i32 %236, i32 1), !dbg !12076
  %237 = load float*, float** %dco199, align 8, !dbg !12077
  call void @glVertex3fv(float* %237), !dbg !12078
  %totorco210 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 7, !dbg !12079
  %238 = load i32, i32* %totorco210, align 4, !dbg !12079
  %tobool211 = icmp ne i32 %238, 0, !dbg !12079
  br i1 %tobool211, label %if.then212, label %if.else216, !dbg !12082

if.then212:                                       ; preds = %if.end209
  %239 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !12079
  %240 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !12079
  %241 = load i32, i32* %S, align 4, !dbg !12079
  %242 = load i32, i32* %x, align 4, !dbg !12079
  %add213 = add nsw i32 %242, 1, !dbg !12079
  %243 = load i32, i32* %y, align 4, !dbg !12079
  %add214 = add nsw i32 %243, 1, !dbg !12079
  %244 = load i32, i32* %edgeSize, align 4, !dbg !12079
  %245 = load i32, i32* %gridSize, align 4, !dbg !12079
  %call215 = call i32 @getFaceIndex(%struct.CCGSubSurf* %239, %struct.CCGFace* %240, i32 %241, i32 %add213, i32 %add214, i32 %244, i32 %245), !dbg !12079
  store i32 %call215, i32* %index, align 4, !dbg !12079
  br label %if.end217, !dbg !12079

if.else216:                                       ; preds = %if.end209
  store i32 0, i32* %index, align 4, !dbg !12079
  br label %if.end217

if.end217:                                        ; preds = %if.else216, %if.then212
  %246 = load i32, i32* %a, align 4, !dbg !12082
  %247 = load i32, i32* %index, align 4, !dbg !12082
  call void @ccgdm_draw_attrib_vertex(%struct.DMVertexAttribs* %attribs, i32 %246, i32 %247, i32 2), !dbg !12082
  %248 = load float*, float** %cco195, align 8, !dbg !12083
  call void @glVertex3fv(float* %248), !dbg !12084
  %totorco218 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 7, !dbg !12085
  %249 = load i32, i32* %totorco218, align 4, !dbg !12085
  %tobool219 = icmp ne i32 %249, 0, !dbg !12085
  br i1 %tobool219, label %if.then220, label %if.else224, !dbg !12088

if.then220:                                       ; preds = %if.end217
  %250 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !12085
  %251 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !12085
  %252 = load i32, i32* %S, align 4, !dbg !12085
  %253 = load i32, i32* %x, align 4, !dbg !12085
  %add221 = add nsw i32 %253, 1, !dbg !12085
  %254 = load i32, i32* %y, align 4, !dbg !12085
  %add222 = add nsw i32 %254, 0, !dbg !12085
  %255 = load i32, i32* %edgeSize, align 4, !dbg !12085
  %256 = load i32, i32* %gridSize, align 4, !dbg !12085
  %call223 = call i32 @getFaceIndex(%struct.CCGSubSurf* %250, %struct.CCGFace* %251, i32 %252, i32 %add221, i32 %add222, i32 %255, i32 %256), !dbg !12085
  store i32 %call223, i32* %index, align 4, !dbg !12085
  br label %if.end225, !dbg !12085

if.else224:                                       ; preds = %if.end217
  store i32 0, i32* %index, align 4, !dbg !12085
  br label %if.end225

if.end225:                                        ; preds = %if.else224, %if.then220
  %257 = load i32, i32* %a, align 4, !dbg !12088
  %258 = load i32, i32* %index, align 4, !dbg !12088
  call void @ccgdm_draw_attrib_vertex(%struct.DMVertexAttribs* %attribs, i32 %257, i32 %258, i32 3), !dbg !12088
  %259 = load float*, float** %bco191, align 8, !dbg !12089
  call void @glVertex3fv(float* %259), !dbg !12090
  %totorco226 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %attribs, i32 0, i32 7, !dbg !12091
  %260 = load i32, i32* %totorco226, align 4, !dbg !12091
  %tobool227 = icmp ne i32 %260, 0, !dbg !12091
  br i1 %tobool227, label %if.then228, label %if.else232, !dbg !12094

if.then228:                                       ; preds = %if.end225
  %261 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !12091
  %262 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !12091
  %263 = load i32, i32* %S, align 4, !dbg !12091
  %264 = load i32, i32* %x, align 4, !dbg !12091
  %add229 = add nsw i32 %264, 0, !dbg !12091
  %265 = load i32, i32* %y, align 4, !dbg !12091
  %add230 = add nsw i32 %265, 0, !dbg !12091
  %266 = load i32, i32* %edgeSize, align 4, !dbg !12091
  %267 = load i32, i32* %gridSize, align 4, !dbg !12091
  %call231 = call i32 @getFaceIndex(%struct.CCGSubSurf* %261, %struct.CCGFace* %262, i32 %263, i32 %add229, i32 %add230, i32 %266, i32 %267), !dbg !12091
  store i32 %call231, i32* %index, align 4, !dbg !12091
  br label %if.end233, !dbg !12091

if.else232:                                       ; preds = %if.end225
  store i32 0, i32* %index, align 4, !dbg !12091
  br label %if.end233

if.end233:                                        ; preds = %if.else232, %if.then228
  %268 = load i32, i32* %a, align 4, !dbg !12094
  %269 = load i32, i32* %index, align 4, !dbg !12094
  call void @ccgdm_draw_attrib_vertex(%struct.DMVertexAttribs* %attribs, i32 %268, i32 %269, i32 0), !dbg !12094
  %270 = load float*, float** %aco188, align 8, !dbg !12095
  call void @glVertex3fv(float* %270), !dbg !12096
  %271 = load i32, i32* %a, align 4, !dbg !12097
  %inc234 = add nsw i32 %271, 1, !dbg !12097
  store i32 %inc234, i32* %a, align 4, !dbg !12097
  br label %for.inc235, !dbg !12098

for.inc235:                                       ; preds = %if.end233
  %272 = load i32, i32* %x, align 4, !dbg !12099
  %inc236 = add nsw i32 %272, 1, !dbg !12099
  store i32 %inc236, i32* %x, align 4, !dbg !12099
  br label %for.cond184, !dbg !12100, !llvm.loop !12101

for.end237:                                       ; preds = %for.cond184
  br label %for.inc238, !dbg !12103

for.inc238:                                       ; preds = %for.end237
  %273 = load i32, i32* %y, align 4, !dbg !12104
  %inc239 = add nsw i32 %273, 1, !dbg !12104
  store i32 %inc239, i32* %y, align 4, !dbg !12104
  br label %for.cond180, !dbg !12105, !llvm.loop !12106

for.end240:                                       ; preds = %for.cond180
  call void @glEnd(), !dbg !12108
  br label %if.end241

if.end241:                                        ; preds = %for.end240, %for.end178
  br label %if.end242

if.end242:                                        ; preds = %if.end241, %for.end107
  br label %for.inc243, !dbg !12109

for.inc243:                                       ; preds = %if.end242
  %274 = load i32, i32* %S, align 4, !dbg !12110
  %inc244 = add nsw i32 %274, 1, !dbg !12110
  store i32 %inc244, i32* %S, align 4, !dbg !12110
  br label %for.cond37, !dbg !12111, !llvm.loop !12112

for.end245:                                       ; preds = %for.cond37
  br label %for.inc246, !dbg !12114

for.inc246:                                       ; preds = %for.end245, %if.then31
  %275 = load i32, i32* %i, align 4, !dbg !12115
  %inc247 = add nsw i32 %275, 1, !dbg !12115
  store i32 %inc247, i32* %i, align 4, !dbg !12115
  br label %for.cond, !dbg !12116, !llvm.loop !12117

for.end248:                                       ; preds = %for.cond
  ret void, !dbg !12119
}

; Function Attrs: noinline nounwind uwtable
define internal void @ccgDM_drawUVEdges(%struct.DerivedMesh* %dm) #0 !dbg !12120 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %mf = alloca %struct.MFace*, align 8
  %tf = alloca %struct.MTFace*, align 8
  %i = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !12121, metadata !DIExpression()), !dbg !12122
  call void @llvm.dbg.declare(metadata %struct.MFace** %mf, metadata !12123, metadata !DIExpression()), !dbg !12124
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !12125
  %getTessFaceArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 33, !dbg !12126
  %1 = load %struct.MFace* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)** %getTessFaceArray, align 8, !dbg !12126
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !12127
  %call = call %struct.MFace* %1(%struct.DerivedMesh* %2), !dbg !12125
  store %struct.MFace* %call, %struct.MFace** %mf, align 8, !dbg !12124
  call void @llvm.dbg.declare(metadata %struct.MTFace** %tf, metadata !12128, metadata !DIExpression()), !dbg !12131
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !12132
  %call1 = call i8* @DM_get_tessface_data_layer(%struct.DerivedMesh* %3, i32 5), !dbg !12133
  %4 = bitcast i8* %call1 to %struct.MTFace*, !dbg !12133
  store %struct.MTFace* %4, %struct.MTFace** %tf, align 8, !dbg !12131
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12134, metadata !DIExpression()), !dbg !12135
  %5 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !12136
  %tobool = icmp ne %struct.MTFace* %5, null, !dbg !12136
  br i1 %tobool, label %if.then, label %if.end35, !dbg !12138

if.then:                                          ; preds = %entry
  call void @glBegin(i32 1), !dbg !12139
  store i32 0, i32* %i, align 4, !dbg !12141
  br label %for.cond, !dbg !12143

for.cond:                                         ; preds = %for.inc, %if.then
  %6 = load i32, i32* %i, align 4, !dbg !12144
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !12146
  %numTessFaceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %7, i32 0, i32 7, !dbg !12147
  %8 = load i32, i32* %numTessFaceData, align 8, !dbg !12147
  %cmp = icmp slt i32 %6, %8, !dbg !12148
  br i1 %cmp, label %for.body, label %for.end, !dbg !12149

for.body:                                         ; preds = %for.cond
  %9 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !12150
  %flag = getelementptr inbounds %struct.MFace, %struct.MFace* %9, i32 0, i32 6, !dbg !12153
  %10 = load i8, i8* %flag, align 1, !dbg !12153
  %conv = zext i8 %10 to i32, !dbg !12150
  %and = and i32 %conv, 16, !dbg !12154
  %tobool2 = icmp ne i32 %and, 0, !dbg !12154
  br i1 %tobool2, label %if.end33, label %if.then3, !dbg !12155

if.then3:                                         ; preds = %for.body
  %11 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !12156
  %uv = getelementptr inbounds %struct.MTFace, %struct.MTFace* %11, i32 0, i32 0, !dbg !12158
  %arrayidx = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv, i64 0, i64 0, !dbg !12156
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %arrayidx, i64 0, i64 0, !dbg !12156
  call void @glVertex2fv(float* %arraydecay), !dbg !12159
  %12 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !12160
  %uv4 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %12, i32 0, i32 0, !dbg !12161
  %arrayidx5 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv4, i64 0, i64 1, !dbg !12160
  %arraydecay6 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx5, i64 0, i64 0, !dbg !12160
  call void @glVertex2fv(float* %arraydecay6), !dbg !12162
  %13 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !12163
  %uv7 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %13, i32 0, i32 0, !dbg !12164
  %arrayidx8 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv7, i64 0, i64 1, !dbg !12163
  %arraydecay9 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx8, i64 0, i64 0, !dbg !12163
  call void @glVertex2fv(float* %arraydecay9), !dbg !12165
  %14 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !12166
  %uv10 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %14, i32 0, i32 0, !dbg !12167
  %arrayidx11 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv10, i64 0, i64 2, !dbg !12166
  %arraydecay12 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx11, i64 0, i64 0, !dbg !12166
  call void @glVertex2fv(float* %arraydecay12), !dbg !12168
  %15 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !12169
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %15, i32 0, i32 3, !dbg !12171
  %16 = load i32, i32* %v4, align 4, !dbg !12171
  %tobool13 = icmp ne i32 %16, 0, !dbg !12169
  br i1 %tobool13, label %if.else, label %if.then14, !dbg !12172

if.then14:                                        ; preds = %if.then3
  %17 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !12173
  %uv15 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %17, i32 0, i32 0, !dbg !12175
  %arrayidx16 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv15, i64 0, i64 2, !dbg !12173
  %arraydecay17 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx16, i64 0, i64 0, !dbg !12173
  call void @glVertex2fv(float* %arraydecay17), !dbg !12176
  %18 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !12177
  %uv18 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %18, i32 0, i32 0, !dbg !12178
  %arrayidx19 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv18, i64 0, i64 0, !dbg !12177
  %arraydecay20 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx19, i64 0, i64 0, !dbg !12177
  call void @glVertex2fv(float* %arraydecay20), !dbg !12179
  br label %if.end, !dbg !12180

if.else:                                          ; preds = %if.then3
  %19 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !12181
  %uv21 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %19, i32 0, i32 0, !dbg !12183
  %arrayidx22 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv21, i64 0, i64 2, !dbg !12181
  %arraydecay23 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx22, i64 0, i64 0, !dbg !12181
  call void @glVertex2fv(float* %arraydecay23), !dbg !12184
  %20 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !12185
  %uv24 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %20, i32 0, i32 0, !dbg !12186
  %arrayidx25 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv24, i64 0, i64 3, !dbg !12185
  %arraydecay26 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx25, i64 0, i64 0, !dbg !12185
  call void @glVertex2fv(float* %arraydecay26), !dbg !12187
  %21 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !12188
  %uv27 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %21, i32 0, i32 0, !dbg !12189
  %arrayidx28 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv27, i64 0, i64 3, !dbg !12188
  %arraydecay29 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx28, i64 0, i64 0, !dbg !12188
  call void @glVertex2fv(float* %arraydecay29), !dbg !12190
  %22 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !12191
  %uv30 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %22, i32 0, i32 0, !dbg !12192
  %arrayidx31 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv30, i64 0, i64 0, !dbg !12191
  %arraydecay32 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx31, i64 0, i64 0, !dbg !12191
  call void @glVertex2fv(float* %arraydecay32), !dbg !12193
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then14
  br label %if.end33, !dbg !12194

if.end33:                                         ; preds = %if.end, %for.body
  br label %for.inc, !dbg !12195

for.inc:                                          ; preds = %if.end33
  %23 = load i32, i32* %i, align 4, !dbg !12196
  %inc = add nsw i32 %23, 1, !dbg !12196
  store i32 %inc, i32* %i, align 4, !dbg !12196
  %24 = load %struct.MFace*, %struct.MFace** %mf, align 8, !dbg !12197
  %incdec.ptr = getelementptr inbounds %struct.MFace, %struct.MFace* %24, i32 1, !dbg !12197
  store %struct.MFace* %incdec.ptr, %struct.MFace** %mf, align 8, !dbg !12197
  %25 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !12198
  %incdec.ptr34 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %25, i32 1, !dbg !12198
  store %struct.MTFace* %incdec.ptr34, %struct.MTFace** %tf, align 8, !dbg !12198
  br label %for.cond, !dbg !12199, !llvm.loop !12200

for.end:                                          ; preds = %for.cond
  call void @glEnd(), !dbg !12202
  br label %if.end35, !dbg !12203

if.end35:                                         ; preds = %for.end, %entry
  ret void, !dbg !12204
}

; Function Attrs: noinline nounwind uwtable
define internal void @ccgDM_drawMappedEdgesInterp(%struct.DerivedMesh* %dm, i32 (i8*, i32)* %setDrawOptions, void (i8*, i32, float)* %setDrawInterpOptions, i8* %userData) #0 !dbg !12205 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %setDrawOptions.addr = alloca i32 (i8*, i32)*, align 8
  %setDrawInterpOptions.addr = alloca void (i8*, i32, float)*, align 8
  %userData.addr = alloca i8*, align 8
  %ccgdm = alloca %struct.CCGDerivedMesh*, align 8
  %ss = alloca %struct.CCGSubSurf*, align 8
  %key = alloca %struct.CCGKey, align 4
  %ei = alloca %struct.CCGEdgeIterator*, align 8
  %i = alloca i32, align 4
  %useAging = alloca i32, align 4
  %edgeSize = alloca i32, align 4
  %e = alloca %struct.CCGEdge*, align 8
  %edgeData = alloca %struct.CCGElem*, align 8
  %index = alloca i32, align 4
  %ageCol = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !12206, metadata !DIExpression()), !dbg !12207
  store i32 (i8*, i32)* %setDrawOptions, i32 (i8*, i32)** %setDrawOptions.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i32)** %setDrawOptions.addr, metadata !12208, metadata !DIExpression()), !dbg !12209
  store void (i8*, i32, float)* %setDrawInterpOptions, void (i8*, i32, float)** %setDrawInterpOptions.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i32, float)** %setDrawInterpOptions.addr, metadata !12210, metadata !DIExpression()), !dbg !12211
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !12212, metadata !DIExpression()), !dbg !12213
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm, metadata !12214, metadata !DIExpression()), !dbg !12215
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !12216
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CCGDerivedMesh*, !dbg !12217
  store %struct.CCGDerivedMesh* %1, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !12215
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss, metadata !12218, metadata !DIExpression()), !dbg !12219
  %2 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !12220
  %ss1 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %2, i32 0, i32 1, !dbg !12221
  %3 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss1, align 8, !dbg !12221
  store %struct.CCGSubSurf* %3, %struct.CCGSubSurf** %ss, align 8, !dbg !12219
  call void @llvm.dbg.declare(metadata %struct.CCGKey* %key, metadata !12222, metadata !DIExpression()), !dbg !12223
  call void @llvm.dbg.declare(metadata %struct.CCGEdgeIterator** %ei, metadata !12224, metadata !DIExpression()), !dbg !12225
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12226, metadata !DIExpression()), !dbg !12227
  call void @llvm.dbg.declare(metadata i32* %useAging, metadata !12228, metadata !DIExpression()), !dbg !12229
  call void @llvm.dbg.declare(metadata i32* %edgeSize, metadata !12230, metadata !DIExpression()), !dbg !12231
  %4 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !12232
  %call = call i32 @ccgSubSurf_getEdgeSize(%struct.CCGSubSurf* %4), !dbg !12233
  store i32 %call, i32* %edgeSize, align 4, !dbg !12231
  %5 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !12234
  call void @CCG_key_top_level(%struct.CCGKey* %key, %struct.CCGSubSurf* %5), !dbg !12235
  %6 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !12236
  call void @ccgSubSurf_getUseAgeCounts(%struct.CCGSubSurf* %6, i32* %useAging, i32* null, i32* null, i32* null), !dbg !12237
  %7 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !12238
  %call2 = call %struct.CCGEdgeIterator* @ccgSubSurf_getEdgeIterator(%struct.CCGSubSurf* %7), !dbg !12240
  store %struct.CCGEdgeIterator* %call2, %struct.CCGEdgeIterator** %ei, align 8, !dbg !12241
  br label %for.cond, !dbg !12242

for.cond:                                         ; preds = %for.inc25, %entry
  %8 = load %struct.CCGEdgeIterator*, %struct.CCGEdgeIterator** %ei, align 8, !dbg !12243
  %call3 = call i32 @ccgEdgeIterator_isStopped(%struct.CCGEdgeIterator* %8), !dbg !12245
  %tobool = icmp ne i32 %call3, 0, !dbg !12246
  %lnot = xor i1 %tobool, true, !dbg !12246
  br i1 %lnot, label %for.body, label %for.end26, !dbg !12247

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e, metadata !12248, metadata !DIExpression()), !dbg !12250
  %9 = load %struct.CCGEdgeIterator*, %struct.CCGEdgeIterator** %ei, align 8, !dbg !12251
  %call4 = call %struct.CCGEdge* @ccgEdgeIterator_getCurrent(%struct.CCGEdgeIterator* %9), !dbg !12252
  store %struct.CCGEdge* %call4, %struct.CCGEdge** %e, align 8, !dbg !12250
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %edgeData, metadata !12253, metadata !DIExpression()), !dbg !12254
  %10 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !12255
  %11 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !12256
  %call5 = call i8* @ccgSubSurf_getEdgeDataArray(%struct.CCGSubSurf* %10, %struct.CCGEdge* %11), !dbg !12257
  %12 = bitcast i8* %call5 to %struct.CCGElem*, !dbg !12257
  store %struct.CCGElem* %12, %struct.CCGElem** %edgeData, align 8, !dbg !12254
  call void @llvm.dbg.declare(metadata i32* %index, metadata !12258, metadata !DIExpression()), !dbg !12259
  %13 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !12260
  %14 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !12261
  %call6 = call i32 @ccgDM_getEdgeMapIndex(%struct.CCGSubSurf* %13, %struct.CCGEdge* %14), !dbg !12262
  store i32 %call6, i32* %index, align 4, !dbg !12259
  call void @glBegin(i32 3), !dbg !12263
  %15 = load i32, i32* %index, align 4, !dbg !12264
  %cmp = icmp ne i32 %15, -1, !dbg !12266
  br i1 %cmp, label %land.lhs.true, label %if.end24, !dbg !12267

land.lhs.true:                                    ; preds = %for.body
  %16 = load i32 (i8*, i32)*, i32 (i8*, i32)** %setDrawOptions.addr, align 8, !dbg !12268
  %tobool7 = icmp ne i32 (i8*, i32)* %16, null, !dbg !12268
  br i1 %tobool7, label %lor.lhs.false, label %if.then, !dbg !12269

lor.lhs.false:                                    ; preds = %land.lhs.true
  %17 = load i32 (i8*, i32)*, i32 (i8*, i32)** %setDrawOptions.addr, align 8, !dbg !12270
  %18 = load i8*, i8** %userData.addr, align 8, !dbg !12271
  %19 = load i32, i32* %index, align 4, !dbg !12272
  %call8 = call i32 %17(i8* %18, i32 %19), !dbg !12270
  %cmp9 = icmp ne i32 %call8, 0, !dbg !12273
  br i1 %cmp9, label %if.then, label %if.end24, !dbg !12274

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  store i32 0, i32* %i, align 4, !dbg !12275
  br label %for.cond10, !dbg !12278

for.cond10:                                       ; preds = %for.inc, %if.then
  %20 = load i32, i32* %i, align 4, !dbg !12279
  %21 = load i32, i32* %edgeSize, align 4, !dbg !12281
  %cmp11 = icmp slt i32 %20, %21, !dbg !12282
  br i1 %cmp11, label %for.body12, label %for.end, !dbg !12283

for.body12:                                       ; preds = %for.cond10
  %22 = load void (i8*, i32, float)*, void (i8*, i32, float)** %setDrawInterpOptions.addr, align 8, !dbg !12284
  %23 = load i8*, i8** %userData.addr, align 8, !dbg !12286
  %24 = load i32, i32* %index, align 4, !dbg !12287
  %25 = load i32, i32* %i, align 4, !dbg !12288
  %conv = sitofp i32 %25 to float, !dbg !12289
  %26 = load i32, i32* %edgeSize, align 4, !dbg !12290
  %sub = sub nsw i32 %26, 1, !dbg !12291
  %conv13 = sitofp i32 %sub to float, !dbg !12292
  %div = fdiv float %conv, %conv13, !dbg !12293
  call void %22(i8* %23, i32 %24, float %div), !dbg !12284
  %27 = load i32, i32* %useAging, align 4, !dbg !12294
  %tobool14 = icmp ne i32 %27, 0, !dbg !12294
  br i1 %tobool14, label %land.lhs.true15, label %if.end, !dbg !12296

land.lhs.true15:                                  ; preds = %for.body12
  %28 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 15), align 8, !dbg !12297
  %and = and i32 %28, 16, !dbg !12298
  %tobool16 = icmp ne i32 %and, 0, !dbg !12298
  br i1 %tobool16, label %if.end, label %if.then17, !dbg !12299

if.then17:                                        ; preds = %land.lhs.true15
  call void @llvm.dbg.declare(metadata i32* %ageCol, metadata !12300, metadata !DIExpression()), !dbg !12302
  %29 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !12303
  %30 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !12304
  %call18 = call i32 @ccgSubSurf_getEdgeAge(%struct.CCGSubSurf* %29, %struct.CCGEdge* %30), !dbg !12305
  %mul = mul nsw i32 %call18, 4, !dbg !12306
  %sub19 = sub nsw i32 255, %mul, !dbg !12307
  store i32 %sub19, i32* %ageCol, align 4, !dbg !12302
  %31 = load i32, i32* %ageCol, align 4, !dbg !12308
  %cmp20 = icmp sgt i32 %31, 0, !dbg !12309
  br i1 %cmp20, label %cond.true, label %cond.false, !dbg !12308

cond.true:                                        ; preds = %if.then17
  %32 = load i32, i32* %ageCol, align 4, !dbg !12310
  br label %cond.end, !dbg !12308

cond.false:                                       ; preds = %if.then17
  br label %cond.end, !dbg !12308

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %32, %cond.true ], [ 0, %cond.false ], !dbg !12308
  %conv22 = trunc i32 %cond to i8, !dbg !12308
  call void @glColor3ub(i8 zeroext 0, i8 zeroext %conv22, i8 zeroext 0), !dbg !12311
  br label %if.end, !dbg !12312

if.end:                                           ; preds = %cond.end, %land.lhs.true15, %for.body12
  %33 = load %struct.CCGElem*, %struct.CCGElem** %edgeData, align 8, !dbg !12313
  %34 = load i32, i32* %i, align 4, !dbg !12314
  %call23 = call float* @CCG_elem_offset_co(%struct.CCGKey* %key, %struct.CCGElem* %33, i32 %34), !dbg !12315
  call void @glVertex3fv(float* %call23), !dbg !12316
  br label %for.inc, !dbg !12317

for.inc:                                          ; preds = %if.end
  %35 = load i32, i32* %i, align 4, !dbg !12318
  %inc = add nsw i32 %35, 1, !dbg !12318
  store i32 %inc, i32* %i, align 4, !dbg !12318
  br label %for.cond10, !dbg !12319, !llvm.loop !12320

for.end:                                          ; preds = %for.cond10
  br label %if.end24, !dbg !12322

if.end24:                                         ; preds = %for.end, %lor.lhs.false, %for.body
  call void @glEnd(), !dbg !12323
  br label %for.inc25, !dbg !12324

for.inc25:                                        ; preds = %if.end24
  %36 = load %struct.CCGEdgeIterator*, %struct.CCGEdgeIterator** %ei, align 8, !dbg !12325
  call void @ccgEdgeIterator_next(%struct.CCGEdgeIterator* %36), !dbg !12326
  br label %for.cond, !dbg !12327, !llvm.loop !12328

for.end26:                                        ; preds = %for.cond
  %37 = load %struct.CCGEdgeIterator*, %struct.CCGEdgeIterator** %ei, align 8, !dbg !12330
  call void @ccgEdgeIterator_free(%struct.CCGEdgeIterator* %37), !dbg !12331
  ret void, !dbg !12332
}

; Function Attrs: noinline nounwind uwtable
define internal void @ccgDM_drawMappedEdges(%struct.DerivedMesh* %dm, i32 (i8*, i32)* %setDrawOptions, i8* %userData) #0 !dbg !12333 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %setDrawOptions.addr = alloca i32 (i8*, i32)*, align 8
  %userData.addr = alloca i8*, align 8
  %ccgdm = alloca %struct.CCGDerivedMesh*, align 8
  %ss = alloca %struct.CCGSubSurf*, align 8
  %ei = alloca %struct.CCGEdgeIterator*, align 8
  %key = alloca %struct.CCGKey, align 4
  %i = alloca i32, align 4
  %useAging = alloca i32, align 4
  %edgeSize = alloca i32, align 4
  %e = alloca %struct.CCGEdge*, align 8
  %edgeData = alloca %struct.CCGElem*, align 8
  %index = alloca i32, align 4
  %ageCol = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !12334, metadata !DIExpression()), !dbg !12335
  store i32 (i8*, i32)* %setDrawOptions, i32 (i8*, i32)** %setDrawOptions.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i32)** %setDrawOptions.addr, metadata !12336, metadata !DIExpression()), !dbg !12337
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !12338, metadata !DIExpression()), !dbg !12339
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm, metadata !12340, metadata !DIExpression()), !dbg !12341
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !12342
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CCGDerivedMesh*, !dbg !12343
  store %struct.CCGDerivedMesh* %1, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !12341
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss, metadata !12344, metadata !DIExpression()), !dbg !12345
  %2 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !12346
  %ss1 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %2, i32 0, i32 1, !dbg !12347
  %3 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss1, align 8, !dbg !12347
  store %struct.CCGSubSurf* %3, %struct.CCGSubSurf** %ss, align 8, !dbg !12345
  call void @llvm.dbg.declare(metadata %struct.CCGEdgeIterator** %ei, metadata !12348, metadata !DIExpression()), !dbg !12349
  call void @llvm.dbg.declare(metadata %struct.CCGKey* %key, metadata !12350, metadata !DIExpression()), !dbg !12351
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12352, metadata !DIExpression()), !dbg !12353
  call void @llvm.dbg.declare(metadata i32* %useAging, metadata !12354, metadata !DIExpression()), !dbg !12355
  call void @llvm.dbg.declare(metadata i32* %edgeSize, metadata !12356, metadata !DIExpression()), !dbg !12357
  %4 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !12358
  %call = call i32 @ccgSubSurf_getEdgeSize(%struct.CCGSubSurf* %4), !dbg !12359
  store i32 %call, i32* %edgeSize, align 4, !dbg !12357
  %5 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !12360
  call void @CCG_key_top_level(%struct.CCGKey* %key, %struct.CCGSubSurf* %5), !dbg !12361
  %6 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !12362
  call void @ccgSubSurf_getUseAgeCounts(%struct.CCGSubSurf* %6, i32* %useAging, i32* null, i32* null, i32* null), !dbg !12363
  %7 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !12364
  %call2 = call %struct.CCGEdgeIterator* @ccgSubSurf_getEdgeIterator(%struct.CCGSubSurf* %7), !dbg !12366
  store %struct.CCGEdgeIterator* %call2, %struct.CCGEdgeIterator** %ei, align 8, !dbg !12367
  br label %for.cond, !dbg !12368

for.cond:                                         ; preds = %for.inc24, %entry
  %8 = load %struct.CCGEdgeIterator*, %struct.CCGEdgeIterator** %ei, align 8, !dbg !12369
  %call3 = call i32 @ccgEdgeIterator_isStopped(%struct.CCGEdgeIterator* %8), !dbg !12371
  %tobool = icmp ne i32 %call3, 0, !dbg !12372
  %lnot = xor i1 %tobool, true, !dbg !12372
  br i1 %lnot, label %for.body, label %for.end25, !dbg !12373

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e, metadata !12374, metadata !DIExpression()), !dbg !12376
  %9 = load %struct.CCGEdgeIterator*, %struct.CCGEdgeIterator** %ei, align 8, !dbg !12377
  %call4 = call %struct.CCGEdge* @ccgEdgeIterator_getCurrent(%struct.CCGEdgeIterator* %9), !dbg !12378
  store %struct.CCGEdge* %call4, %struct.CCGEdge** %e, align 8, !dbg !12376
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %edgeData, metadata !12379, metadata !DIExpression()), !dbg !12380
  %10 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !12381
  %11 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !12382
  %call5 = call i8* @ccgSubSurf_getEdgeDataArray(%struct.CCGSubSurf* %10, %struct.CCGEdge* %11), !dbg !12383
  %12 = bitcast i8* %call5 to %struct.CCGElem*, !dbg !12383
  store %struct.CCGElem* %12, %struct.CCGElem** %edgeData, align 8, !dbg !12380
  call void @llvm.dbg.declare(metadata i32* %index, metadata !12384, metadata !DIExpression()), !dbg !12385
  %13 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !12386
  %14 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !12387
  %call6 = call i32 @ccgDM_getEdgeMapIndex(%struct.CCGSubSurf* %13, %struct.CCGEdge* %14), !dbg !12388
  store i32 %call6, i32* %index, align 4, !dbg !12385
  call void @glBegin(i32 3), !dbg !12389
  %15 = load i32, i32* %index, align 4, !dbg !12390
  %cmp = icmp ne i32 %15, -1, !dbg !12392
  br i1 %cmp, label %land.lhs.true, label %if.end23, !dbg !12393

land.lhs.true:                                    ; preds = %for.body
  %16 = load i32 (i8*, i32)*, i32 (i8*, i32)** %setDrawOptions.addr, align 8, !dbg !12394
  %tobool7 = icmp ne i32 (i8*, i32)* %16, null, !dbg !12394
  br i1 %tobool7, label %lor.lhs.false, label %if.then, !dbg !12395

lor.lhs.false:                                    ; preds = %land.lhs.true
  %17 = load i32 (i8*, i32)*, i32 (i8*, i32)** %setDrawOptions.addr, align 8, !dbg !12396
  %18 = load i8*, i8** %userData.addr, align 8, !dbg !12397
  %19 = load i32, i32* %index, align 4, !dbg !12398
  %call8 = call i32 %17(i8* %18, i32 %19), !dbg !12396
  %cmp9 = icmp ne i32 %call8, 0, !dbg !12399
  br i1 %cmp9, label %if.then, label %if.end23, !dbg !12400

if.then:                                          ; preds = %lor.lhs.false, %land.lhs.true
  %20 = load i32, i32* %useAging, align 4, !dbg !12401
  %tobool10 = icmp ne i32 %20, 0, !dbg !12401
  br i1 %tobool10, label %land.lhs.true11, label %if.end, !dbg !12404

land.lhs.true11:                                  ; preds = %if.then
  %21 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 15), align 8, !dbg !12405
  %and = and i32 %21, 16, !dbg !12406
  %tobool12 = icmp ne i32 %and, 0, !dbg !12406
  br i1 %tobool12, label %if.end, label %if.then13, !dbg !12407

if.then13:                                        ; preds = %land.lhs.true11
  call void @llvm.dbg.declare(metadata i32* %ageCol, metadata !12408, metadata !DIExpression()), !dbg !12410
  %22 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !12411
  %23 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !12412
  %call14 = call i32 @ccgSubSurf_getEdgeAge(%struct.CCGSubSurf* %22, %struct.CCGEdge* %23), !dbg !12413
  %mul = mul nsw i32 %call14, 4, !dbg !12414
  %sub = sub nsw i32 255, %mul, !dbg !12415
  store i32 %sub, i32* %ageCol, align 4, !dbg !12410
  %24 = load i32, i32* %ageCol, align 4, !dbg !12416
  %cmp15 = icmp sgt i32 %24, 0, !dbg !12417
  br i1 %cmp15, label %cond.true, label %cond.false, !dbg !12416

cond.true:                                        ; preds = %if.then13
  %25 = load i32, i32* %ageCol, align 4, !dbg !12418
  br label %cond.end, !dbg !12416

cond.false:                                       ; preds = %if.then13
  br label %cond.end, !dbg !12416

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %25, %cond.true ], [ 0, %cond.false ], !dbg !12416
  %conv = trunc i32 %cond to i8, !dbg !12416
  call void @glColor3ub(i8 zeroext 0, i8 zeroext %conv, i8 zeroext 0), !dbg !12419
  br label %if.end, !dbg !12420

if.end:                                           ; preds = %cond.end, %land.lhs.true11, %if.then
  store i32 0, i32* %i, align 4, !dbg !12421
  br label %for.cond16, !dbg !12423

for.cond16:                                       ; preds = %for.inc, %if.end
  %26 = load i32, i32* %i, align 4, !dbg !12424
  %27 = load i32, i32* %edgeSize, align 4, !dbg !12426
  %sub17 = sub nsw i32 %27, 1, !dbg !12427
  %cmp18 = icmp slt i32 %26, %sub17, !dbg !12428
  br i1 %cmp18, label %for.body20, label %for.end, !dbg !12429

for.body20:                                       ; preds = %for.cond16
  %28 = load %struct.CCGElem*, %struct.CCGElem** %edgeData, align 8, !dbg !12430
  %29 = load i32, i32* %i, align 4, !dbg !12432
  %call21 = call float* @CCG_elem_offset_co(%struct.CCGKey* %key, %struct.CCGElem* %28, i32 %29), !dbg !12433
  call void @glVertex3fv(float* %call21), !dbg !12434
  %30 = load %struct.CCGElem*, %struct.CCGElem** %edgeData, align 8, !dbg !12435
  %31 = load i32, i32* %i, align 4, !dbg !12436
  %add = add nsw i32 %31, 1, !dbg !12437
  %call22 = call float* @CCG_elem_offset_co(%struct.CCGKey* %key, %struct.CCGElem* %30, i32 %add), !dbg !12438
  call void @glVertex3fv(float* %call22), !dbg !12439
  br label %for.inc, !dbg !12440

for.inc:                                          ; preds = %for.body20
  %32 = load i32, i32* %i, align 4, !dbg !12441
  %inc = add nsw i32 %32, 1, !dbg !12441
  store i32 %inc, i32* %i, align 4, !dbg !12441
  br label %for.cond16, !dbg !12442, !llvm.loop !12443

for.end:                                          ; preds = %for.cond16
  br label %if.end23, !dbg !12445

if.end23:                                         ; preds = %for.end, %lor.lhs.false, %for.body
  call void @glEnd(), !dbg !12446
  br label %for.inc24, !dbg !12447

for.inc24:                                        ; preds = %if.end23
  %33 = load %struct.CCGEdgeIterator*, %struct.CCGEdgeIterator** %ei, align 8, !dbg !12448
  call void @ccgEdgeIterator_next(%struct.CCGEdgeIterator* %33), !dbg !12449
  br label %for.cond, !dbg !12450, !llvm.loop !12451

for.end25:                                        ; preds = %for.cond
  %34 = load %struct.CCGEdgeIterator*, %struct.CCGEdgeIterator** %ei, align 8, !dbg !12453
  call void @ccgEdgeIterator_free(%struct.CCGEdgeIterator* %34), !dbg !12454
  ret void, !dbg !12455
}

; Function Attrs: noinline nounwind uwtable
define internal void @ccgDM_release(%struct.DerivedMesh* %dm) #0 !dbg !12456 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %ccgdm = alloca %struct.CCGDerivedMesh*, align 8
  %i = alloca i32, align 4
  %numGrids = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !12457, metadata !DIExpression()), !dbg !12458
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm, metadata !12459, metadata !DIExpression()), !dbg !12460
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !12461
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CCGDerivedMesh*, !dbg !12462
  store %struct.CCGDerivedMesh* %1, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !12460
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !12463
  %call = call i32 @DM_release(%struct.DerivedMesh* %2), !dbg !12465
  %tobool = icmp ne i32 %call, 0, !dbg !12465
  br i1 %tobool, label %if.then, label %if.end80, !dbg !12466

if.then:                                          ; preds = %entry
  %3 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !12467
  %multires = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %3, i32 0, i32 20, !dbg !12470
  %modified_flags = getelementptr inbounds %struct.anon.2, %struct.anon.2* %multires, i32 0, i32 6, !dbg !12471
  %4 = load i32, i32* %modified_flags, align 8, !dbg !12471
  %tobool1 = icmp ne i32 %4, 0, !dbg !12467
  br i1 %tobool1, label %if.then2, label %if.end27, !dbg !12472

if.then2:                                         ; preds = %if.then
  %5 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !12473
  %multires3 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %5, i32 0, i32 20, !dbg !12476
  %local_mmd = getelementptr inbounds %struct.anon.2, %struct.anon.2* %multires3, i32 0, i32 1, !dbg !12477
  %6 = load i32, i32* %local_mmd, align 8, !dbg !12477
  %tobool4 = icmp ne i32 %6, 0, !dbg !12473
  br i1 %tobool4, label %if.end, label %land.lhs.true, !dbg !12478

land.lhs.true:                                    ; preds = %if.then2
  %7 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !12479
  %multires5 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %7, i32 0, i32 20, !dbg !12480
  %ob = getelementptr inbounds %struct.anon.2, %struct.anon.2* %multires5, i32 0, i32 5, !dbg !12481
  %8 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !12481
  %modifiers = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 26, !dbg !12482
  %9 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !12483
  %multires6 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %9, i32 0, i32 20, !dbg !12484
  %mmd = getelementptr inbounds %struct.anon.2, %struct.anon.2* %multires6, i32 0, i32 0, !dbg !12485
  %10 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd, align 8, !dbg !12485
  %11 = bitcast %struct.MultiresModifierData* %10 to i8*, !dbg !12483
  %call7 = call i32 @BLI_findindex(%struct.ListBase* %modifiers, i8* %11), !dbg !12486
  %cmp = icmp slt i32 %call7, 0, !dbg !12487
  br i1 %cmp, label %if.then8, label %if.end, !dbg !12488

if.then8:                                         ; preds = %land.lhs.true
  %12 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !12489
  %multires9 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %12, i32 0, i32 20, !dbg !12491
  %mmd10 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %multires9, i32 0, i32 0, !dbg !12492
  store %struct.MultiresModifierData* null, %struct.MultiresModifierData** %mmd10, align 8, !dbg !12493
  br label %if.end, !dbg !12494

if.end:                                           ; preds = %if.then8, %land.lhs.true, %if.then2
  %13 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !12495
  %multires11 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %13, i32 0, i32 20, !dbg !12497
  %mmd12 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %multires11, i32 0, i32 0, !dbg !12498
  %14 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd12, align 8, !dbg !12498
  %tobool13 = icmp ne %struct.MultiresModifierData* %14, null, !dbg !12495
  br i1 %tobool13, label %if.then14, label %if.end26, !dbg !12499

if.then14:                                        ; preds = %if.end
  %15 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !12500
  %multires15 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %15, i32 0, i32 20, !dbg !12503
  %modified_flags16 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %multires15, i32 0, i32 6, !dbg !12504
  %16 = load i32, i32* %modified_flags16, align 8, !dbg !12504
  %and = and i32 %16, 1, !dbg !12505
  %tobool17 = icmp ne i32 %and, 0, !dbg !12505
  br i1 %tobool17, label %if.then18, label %if.end19, !dbg !12506

if.then18:                                        ; preds = %if.then14
  %17 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !12507
  call void @multires_modifier_update_mdisps(%struct.DerivedMesh* %17), !dbg !12508
  br label %if.end19, !dbg !12508

if.end19:                                         ; preds = %if.then18, %if.then14
  %18 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !12509
  %multires20 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %18, i32 0, i32 20, !dbg !12511
  %modified_flags21 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %multires20, i32 0, i32 6, !dbg !12512
  %19 = load i32, i32* %modified_flags21, align 8, !dbg !12512
  %and22 = and i32 %19, 2, !dbg !12513
  %tobool23 = icmp ne i32 %and22, 0, !dbg !12513
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !12514

if.then24:                                        ; preds = %if.end19
  %20 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !12515
  call void @multires_modifier_update_hidden(%struct.DerivedMesh* %20), !dbg !12516
  br label %if.end25, !dbg !12516

if.end25:                                         ; preds = %if.then24, %if.end19
  br label %if.end26, !dbg !12517

if.end26:                                         ; preds = %if.end25, %if.end
  br label %if.end27, !dbg !12518

if.end27:                                         ; preds = %if.end26, %if.then
  %21 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !12519
  %ehash = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %21, i32 0, i32 21, !dbg !12521
  %22 = load %struct.EdgeHash*, %struct.EdgeHash** %ehash, align 8, !dbg !12521
  %tobool28 = icmp ne %struct.EdgeHash* %22, null, !dbg !12519
  br i1 %tobool28, label %if.then29, label %if.end31, !dbg !12522

if.then29:                                        ; preds = %if.end27
  %23 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !12523
  %ehash30 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %23, i32 0, i32 21, !dbg !12524
  %24 = load %struct.EdgeHash*, %struct.EdgeHash** %ehash30, align 8, !dbg !12524
  call void @BLI_edgehash_free(%struct.EdgeHash* %24, void (i8*)* null), !dbg !12525
  br label %if.end31, !dbg !12525

if.end31:                                         ; preds = %if.then29, %if.end27
  %25 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !12526
  %reverseFaceMap = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %25, i32 0, i32 10, !dbg !12528
  %26 = load i32*, i32** %reverseFaceMap, align 8, !dbg !12528
  %tobool32 = icmp ne i32* %26, null, !dbg !12526
  br i1 %tobool32, label %if.then33, label %if.end35, !dbg !12529

if.then33:                                        ; preds = %if.end31
  %27 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12530
  %28 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !12531
  %reverseFaceMap34 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %28, i32 0, i32 10, !dbg !12532
  %29 = load i32*, i32** %reverseFaceMap34, align 8, !dbg !12532
  %30 = bitcast i32* %29 to i8*, !dbg !12531
  call void %27(i8* %30), !dbg !12530
  br label %if.end35, !dbg !12530

if.end35:                                         ; preds = %if.then33, %if.end31
  %31 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !12533
  %gridFaces = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %31, i32 0, i32 17, !dbg !12535
  %32 = load %struct.CCGFace**, %struct.CCGFace*** %gridFaces, align 8, !dbg !12535
  %tobool36 = icmp ne %struct.CCGFace** %32, null, !dbg !12533
  br i1 %tobool36, label %if.then37, label %if.end39, !dbg !12536

if.then37:                                        ; preds = %if.end35
  %33 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12537
  %34 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !12538
  %gridFaces38 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %34, i32 0, i32 17, !dbg !12539
  %35 = load %struct.CCGFace**, %struct.CCGFace*** %gridFaces38, align 8, !dbg !12539
  %36 = bitcast %struct.CCGFace** %35 to i8*, !dbg !12538
  call void %33(i8* %36), !dbg !12537
  br label %if.end39, !dbg !12537

if.end39:                                         ; preds = %if.then37, %if.end35
  %37 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !12540
  %gridData = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %37, i32 0, i32 14, !dbg !12542
  %38 = load %struct.CCGElem**, %struct.CCGElem*** %gridData, align 8, !dbg !12542
  %tobool40 = icmp ne %struct.CCGElem** %38, null, !dbg !12540
  br i1 %tobool40, label %if.then41, label %if.end43, !dbg !12543

if.then41:                                        ; preds = %if.end39
  %39 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12544
  %40 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !12545
  %gridData42 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %40, i32 0, i32 14, !dbg !12546
  %41 = load %struct.CCGElem**, %struct.CCGElem*** %gridData42, align 8, !dbg !12546
  %42 = bitcast %struct.CCGElem** %41 to i8*, !dbg !12545
  call void %39(i8* %42), !dbg !12544
  br label %if.end43, !dbg !12544

if.end43:                                         ; preds = %if.then41, %if.end39
  %43 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !12547
  %gridAdjacency = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %43, i32 0, i32 15, !dbg !12549
  %44 = load %struct.DMGridAdjacency*, %struct.DMGridAdjacency** %gridAdjacency, align 8, !dbg !12549
  %tobool44 = icmp ne %struct.DMGridAdjacency* %44, null, !dbg !12547
  br i1 %tobool44, label %if.then45, label %if.end47, !dbg !12550

if.then45:                                        ; preds = %if.end43
  %45 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12551
  %46 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !12552
  %gridAdjacency46 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %46, i32 0, i32 15, !dbg !12553
  %47 = load %struct.DMGridAdjacency*, %struct.DMGridAdjacency** %gridAdjacency46, align 8, !dbg !12553
  %48 = bitcast %struct.DMGridAdjacency* %47 to i8*, !dbg !12552
  call void %45(i8* %48), !dbg !12551
  br label %if.end47, !dbg !12551

if.end47:                                         ; preds = %if.then45, %if.end43
  %49 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !12554
  %gridOffset = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %49, i32 0, i32 16, !dbg !12556
  %50 = load i32*, i32** %gridOffset, align 8, !dbg !12556
  %tobool48 = icmp ne i32* %50, null, !dbg !12554
  br i1 %tobool48, label %if.then49, label %if.end51, !dbg !12557

if.then49:                                        ; preds = %if.end47
  %51 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12558
  %52 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !12559
  %gridOffset50 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %52, i32 0, i32 16, !dbg !12560
  %53 = load i32*, i32** %gridOffset50, align 8, !dbg !12560
  %54 = bitcast i32* %53 to i8*, !dbg !12559
  call void %51(i8* %54), !dbg !12558
  br label %if.end51, !dbg !12558

if.end51:                                         ; preds = %if.then49, %if.end47
  %55 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !12561
  %gridFlagMats = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %55, i32 0, i32 18, !dbg !12563
  %56 = load %struct.DMFlagMat*, %struct.DMFlagMat** %gridFlagMats, align 8, !dbg !12563
  %tobool52 = icmp ne %struct.DMFlagMat* %56, null, !dbg !12561
  br i1 %tobool52, label %if.then53, label %if.end55, !dbg !12564

if.then53:                                        ; preds = %if.end51
  %57 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12565
  %58 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !12566
  %gridFlagMats54 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %58, i32 0, i32 18, !dbg !12567
  %59 = load %struct.DMFlagMat*, %struct.DMFlagMat** %gridFlagMats54, align 8, !dbg !12567
  %60 = bitcast %struct.DMFlagMat* %59 to i8*, !dbg !12566
  call void %57(i8* %60), !dbg !12565
  br label %if.end55, !dbg !12565

if.end55:                                         ; preds = %if.then53, %if.end51
  %61 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !12568
  %gridHidden = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %61, i32 0, i32 19, !dbg !12570
  %62 = load i32**, i32*** %gridHidden, align 8, !dbg !12570
  %tobool56 = icmp ne i32** %62, null, !dbg !12568
  br i1 %tobool56, label %if.then57, label %if.end68, !dbg !12571

if.then57:                                        ; preds = %if.end55
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12572, metadata !DIExpression()), !dbg !12574
  call void @llvm.dbg.declare(metadata i32* %numGrids, metadata !12575, metadata !DIExpression()), !dbg !12576
  %63 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !12577
  %getNumGrids = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %63, i32 0, i32 63, !dbg !12578
  %64 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumGrids, align 8, !dbg !12578
  %65 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !12579
  %call58 = call i32 %64(%struct.DerivedMesh* %65), !dbg !12577
  store i32 %call58, i32* %numGrids, align 4, !dbg !12576
  store i32 0, i32* %i, align 4, !dbg !12580
  br label %for.cond, !dbg !12582

for.cond:                                         ; preds = %for.inc, %if.then57
  %66 = load i32, i32* %i, align 4, !dbg !12583
  %67 = load i32, i32* %numGrids, align 4, !dbg !12585
  %cmp59 = icmp slt i32 %66, %67, !dbg !12586
  br i1 %cmp59, label %for.body, label %for.end, !dbg !12587

for.body:                                         ; preds = %for.cond
  %68 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !12588
  %gridHidden60 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %68, i32 0, i32 19, !dbg !12591
  %69 = load i32**, i32*** %gridHidden60, align 8, !dbg !12591
  %70 = load i32, i32* %i, align 4, !dbg !12592
  %idxprom = sext i32 %70 to i64, !dbg !12588
  %arrayidx = getelementptr inbounds i32*, i32** %69, i64 %idxprom, !dbg !12588
  %71 = load i32*, i32** %arrayidx, align 8, !dbg !12588
  %tobool61 = icmp ne i32* %71, null, !dbg !12588
  br i1 %tobool61, label %if.then62, label %if.end66, !dbg !12593

if.then62:                                        ; preds = %for.body
  %72 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12594
  %73 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !12595
  %gridHidden63 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %73, i32 0, i32 19, !dbg !12596
  %74 = load i32**, i32*** %gridHidden63, align 8, !dbg !12596
  %75 = load i32, i32* %i, align 4, !dbg !12597
  %idxprom64 = sext i32 %75 to i64, !dbg !12595
  %arrayidx65 = getelementptr inbounds i32*, i32** %74, i64 %idxprom64, !dbg !12595
  %76 = load i32*, i32** %arrayidx65, align 8, !dbg !12595
  %77 = bitcast i32* %76 to i8*, !dbg !12595
  call void %72(i8* %77), !dbg !12594
  br label %if.end66, !dbg !12594

if.end66:                                         ; preds = %if.then62, %for.body
  br label %for.inc, !dbg !12598

for.inc:                                          ; preds = %if.end66
  %78 = load i32, i32* %i, align 4, !dbg !12599
  %inc = add nsw i32 %78, 1, !dbg !12599
  store i32 %inc, i32* %i, align 4, !dbg !12599
  br label %for.cond, !dbg !12600, !llvm.loop !12601

for.end:                                          ; preds = %for.cond
  %79 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12603
  %80 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !12604
  %gridHidden67 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %80, i32 0, i32 19, !dbg !12605
  %81 = load i32**, i32*** %gridHidden67, align 8, !dbg !12605
  %82 = bitcast i32** %81 to i8*, !dbg !12604
  call void %79(i8* %82), !dbg !12603
  br label %if.end68, !dbg !12606

if.end68:                                         ; preds = %for.end, %if.end55
  %83 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !12607
  %freeSS = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %83, i32 0, i32 2, !dbg !12609
  %84 = load i32, i32* %freeSS, align 8, !dbg !12609
  %tobool69 = icmp ne i32 %84, 0, !dbg !12607
  br i1 %tobool69, label %if.then70, label %if.end71, !dbg !12610

if.then70:                                        ; preds = %if.end68
  %85 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !12611
  %ss = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %85, i32 0, i32 1, !dbg !12612
  %86 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !12612
  call void @ccgSubSurf_free(%struct.CCGSubSurf* %86), !dbg !12613
  br label %if.end71, !dbg !12613

if.end71:                                         ; preds = %if.then70, %if.end68
  %87 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !12614
  %pmap = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %87, i32 0, i32 12, !dbg !12616
  %88 = load %struct.MeshElemMap*, %struct.MeshElemMap** %pmap, align 8, !dbg !12616
  %tobool72 = icmp ne %struct.MeshElemMap* %88, null, !dbg !12614
  br i1 %tobool72, label %if.then73, label %if.end75, !dbg !12617

if.then73:                                        ; preds = %if.end71
  %89 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12618
  %90 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !12619
  %pmap74 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %90, i32 0, i32 12, !dbg !12620
  %91 = load %struct.MeshElemMap*, %struct.MeshElemMap** %pmap74, align 8, !dbg !12620
  %92 = bitcast %struct.MeshElemMap* %91 to i8*, !dbg !12619
  call void %89(i8* %92), !dbg !12618
  br label %if.end75, !dbg !12618

if.end75:                                         ; preds = %if.then73, %if.end71
  %93 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !12621
  %pmap_mem = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %93, i32 0, i32 13, !dbg !12623
  %94 = load i32*, i32** %pmap_mem, align 8, !dbg !12623
  %tobool76 = icmp ne i32* %94, null, !dbg !12621
  br i1 %tobool76, label %if.then77, label %if.end79, !dbg !12624

if.then77:                                        ; preds = %if.end75
  %95 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12625
  %96 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !12626
  %pmap_mem78 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %96, i32 0, i32 13, !dbg !12627
  %97 = load i32*, i32** %pmap_mem78, align 8, !dbg !12627
  %98 = bitcast i32* %97 to i8*, !dbg !12626
  call void %95(i8* %98), !dbg !12625
  br label %if.end79, !dbg !12625

if.end79:                                         ; preds = %if.then77, %if.end75
  %99 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12628
  %100 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !12629
  %edgeFlags = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %100, i32 0, i32 8, !dbg !12630
  %101 = load i16*, i16** %edgeFlags, align 8, !dbg !12630
  %102 = bitcast i16* %101 to i8*, !dbg !12629
  call void %99(i8* %102), !dbg !12628
  %103 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12631
  %104 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !12632
  %faceFlags = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %104, i32 0, i32 9, !dbg !12633
  %105 = load %struct.DMFlagMat*, %struct.DMFlagMat** %faceFlags, align 8, !dbg !12633
  %106 = bitcast %struct.DMFlagMat* %105 to i8*, !dbg !12632
  call void %103(i8* %106), !dbg !12631
  %107 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12634
  %108 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !12635
  %vertMap = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %108, i32 0, i32 5, !dbg !12636
  %109 = load %struct.anon*, %struct.anon** %vertMap, align 8, !dbg !12636
  %110 = bitcast %struct.anon* %109 to i8*, !dbg !12635
  call void %107(i8* %110), !dbg !12634
  %111 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12637
  %112 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !12638
  %edgeMap = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %112, i32 0, i32 6, !dbg !12639
  %113 = load %struct.anon.0*, %struct.anon.0** %edgeMap, align 8, !dbg !12639
  %114 = bitcast %struct.anon.0* %113 to i8*, !dbg !12638
  call void %111(i8* %114), !dbg !12637
  %115 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12640
  %116 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !12641
  %faceMap = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %116, i32 0, i32 7, !dbg !12642
  %117 = load %struct.anon.1*, %struct.anon.1** %faceMap, align 8, !dbg !12642
  %118 = bitcast %struct.anon.1* %117 to i8*, !dbg !12641
  call void %115(i8* %118), !dbg !12640
  %119 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12643
  %120 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !12644
  %121 = bitcast %struct.CCGDerivedMesh* %120 to i8*, !dbg !12644
  call void %119(i8* %121), !dbg !12643
  br label %if.end80, !dbg !12645

if.end80:                                         ; preds = %if.end79, %entry
  ret void, !dbg !12646
}

declare dso_local i32 @ccgSubSurf_getNumVerts(%struct.CCGSubSurf*) #2

declare dso_local i32 @ccgSubSurf_getNumEdges(%struct.CCGSubSurf*) #2

declare dso_local %struct.CCGEdgeIterator* @ccgSubSurf_getEdgeIterator(%struct.CCGSubSurf*) #2

declare dso_local i32 @ccgEdgeIterator_isStopped(%struct.CCGEdgeIterator*) #2

declare dso_local %struct.CCGEdge* @ccgEdgeIterator_getCurrent(%struct.CCGEdgeIterator*) #2

declare dso_local i8* @ccgSubSurf_getEdgeEdgeHandle(%struct.CCGEdge*) #2

declare dso_local void @ccgEdgeIterator_next(%struct.CCGEdgeIterator*) #2

declare dso_local void @ccgEdgeIterator_free(%struct.CCGEdgeIterator*) #2

declare dso_local %struct.CCGFaceIterator* @ccgSubSurf_getFaceIterator(%struct.CCGSubSurf*) #2

declare dso_local i32 @ccgFaceIterator_isStopped(%struct.CCGFaceIterator*) #2

declare dso_local %struct.CCGFace* @ccgFaceIterator_getCurrent(%struct.CCGFaceIterator*) #2

declare dso_local i8* @ccgSubSurf_getFaceFaceHandle(%struct.CCGFace*) #2

declare dso_local void @ccgFaceIterator_next(%struct.CCGFaceIterator*) #2

declare dso_local void @ccgFaceIterator_free(%struct.CCGFaceIterator*) #2

declare dso_local i8* @CustomData_get_layer(%struct.CustomData*, i32) #2

declare dso_local i8* @DM_get_vert_data_layer(%struct.DerivedMesh*, i32) #2

declare dso_local i8* @DM_get_edge_data_layer(%struct.DerivedMesh*, i32) #2

declare dso_local i8* @DM_get_tessface_data_layer(%struct.DerivedMesh*, i32) #2

declare dso_local i8* @DM_get_poly_data_layer(%struct.DerivedMesh*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal float* @get_ss_weights(%struct.WeightTable* %wtable, i32 %gridCuts, i32 %faceLen) #0 !dbg !12647 {
entry:
  %wtable.addr = alloca %struct.WeightTable*, align 8
  %gridCuts.addr = alloca i32, align 4
  %faceLen.addr = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %w = alloca float*, align 8
  %w1 = alloca float, align 4
  %w2 = alloca float, align 4
  %w4 = alloca float, align 4
  %fac = alloca float, align 4
  %fac2 = alloca float, align 4
  %fx = alloca float, align 4
  %fy = alloca float, align 4
  %tmp = alloca i8*, align 8
  store %struct.WeightTable* %wtable, %struct.WeightTable** %wtable.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WeightTable** %wtable.addr, metadata !12651, metadata !DIExpression()), !dbg !12652
  store i32 %gridCuts, i32* %gridCuts.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %gridCuts.addr, metadata !12653, metadata !DIExpression()), !dbg !12654
  store i32 %faceLen, i32* %faceLen.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %faceLen.addr, metadata !12655, metadata !DIExpression()), !dbg !12656
  call void @llvm.dbg.declare(metadata i32* %x, metadata !12657, metadata !DIExpression()), !dbg !12658
  call void @llvm.dbg.declare(metadata i32* %y, metadata !12659, metadata !DIExpression()), !dbg !12660
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12661, metadata !DIExpression()), !dbg !12662
  call void @llvm.dbg.declare(metadata i32* %j, metadata !12663, metadata !DIExpression()), !dbg !12664
  call void @llvm.dbg.declare(metadata float** %w, metadata !12665, metadata !DIExpression()), !dbg !12666
  call void @llvm.dbg.declare(metadata float* %w1, metadata !12667, metadata !DIExpression()), !dbg !12668
  call void @llvm.dbg.declare(metadata float* %w2, metadata !12669, metadata !DIExpression()), !dbg !12670
  call void @llvm.dbg.declare(metadata float* %w4, metadata !12671, metadata !DIExpression()), !dbg !12672
  call void @llvm.dbg.declare(metadata float* %fac, metadata !12673, metadata !DIExpression()), !dbg !12674
  call void @llvm.dbg.declare(metadata float* %fac2, metadata !12675, metadata !DIExpression()), !dbg !12676
  call void @llvm.dbg.declare(metadata float* %fx, metadata !12677, metadata !DIExpression()), !dbg !12678
  call void @llvm.dbg.declare(metadata float* %fy, metadata !12679, metadata !DIExpression()), !dbg !12680
  %0 = load %struct.WeightTable*, %struct.WeightTable** %wtable.addr, align 8, !dbg !12681
  %len = getelementptr inbounds %struct.WeightTable, %struct.WeightTable* %0, i32 0, i32 1, !dbg !12683
  %1 = load i32, i32* %len, align 8, !dbg !12683
  %2 = load i32, i32* %faceLen.addr, align 4, !dbg !12684
  %cmp = icmp sle i32 %1, %2, !dbg !12685
  br i1 %cmp, label %if.then, label %if.end10, !dbg !12686

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %tmp, metadata !12687, metadata !DIExpression()), !dbg !12689
  %3 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !12690
  %4 = load i32, i32* %faceLen.addr, align 4, !dbg !12691
  %add = add nsw i32 %4, 1, !dbg !12692
  %conv = sext i32 %add to i64, !dbg !12693
  %mul = mul i64 24, %conv, !dbg !12694
  %call = call i8* %3(i64 %mul, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.17, i64 0, i64 0)), !dbg !12690
  store i8* %call, i8** %tmp, align 8, !dbg !12689
  %5 = load %struct.WeightTable*, %struct.WeightTable** %wtable.addr, align 8, !dbg !12695
  %len1 = getelementptr inbounds %struct.WeightTable, %struct.WeightTable* %5, i32 0, i32 1, !dbg !12697
  %6 = load i32, i32* %len1, align 8, !dbg !12697
  %tobool = icmp ne i32 %6, 0, !dbg !12695
  br i1 %tobool, label %if.then2, label %if.end, !dbg !12698

if.then2:                                         ; preds = %if.then
  %7 = load i8*, i8** %tmp, align 8, !dbg !12699
  %8 = load %struct.WeightTable*, %struct.WeightTable** %wtable.addr, align 8, !dbg !12701
  %weight_table = getelementptr inbounds %struct.WeightTable, %struct.WeightTable* %8, i32 0, i32 0, !dbg !12702
  %9 = load %struct.FaceVertWeightEntry*, %struct.FaceVertWeightEntry** %weight_table, align 8, !dbg !12702
  %10 = bitcast %struct.FaceVertWeightEntry* %9 to i8*, !dbg !12703
  %11 = load %struct.WeightTable*, %struct.WeightTable** %wtable.addr, align 8, !dbg !12704
  %len3 = getelementptr inbounds %struct.WeightTable, %struct.WeightTable* %11, i32 0, i32 1, !dbg !12705
  %12 = load i32, i32* %len3, align 8, !dbg !12705
  %conv4 = sext i32 %12 to i64, !dbg !12704
  %mul5 = mul i64 24, %conv4, !dbg !12706
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %7, i8* align 8 %10, i64 %mul5, i1 false), !dbg !12703
  %13 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !12707
  %14 = load %struct.WeightTable*, %struct.WeightTable** %wtable.addr, align 8, !dbg !12708
  %weight_table6 = getelementptr inbounds %struct.WeightTable, %struct.WeightTable* %14, i32 0, i32 0, !dbg !12709
  %15 = load %struct.FaceVertWeightEntry*, %struct.FaceVertWeightEntry** %weight_table6, align 8, !dbg !12709
  %16 = bitcast %struct.FaceVertWeightEntry* %15 to i8*, !dbg !12708
  call void %13(i8* %16), !dbg !12707
  br label %if.end, !dbg !12710

if.end:                                           ; preds = %if.then2, %if.then
  %17 = load i8*, i8** %tmp, align 8, !dbg !12711
  %18 = bitcast i8* %17 to %struct.FaceVertWeightEntry*, !dbg !12711
  %19 = load %struct.WeightTable*, %struct.WeightTable** %wtable.addr, align 8, !dbg !12712
  %weight_table7 = getelementptr inbounds %struct.WeightTable, %struct.WeightTable* %19, i32 0, i32 0, !dbg !12713
  store %struct.FaceVertWeightEntry* %18, %struct.FaceVertWeightEntry** %weight_table7, align 8, !dbg !12714
  %20 = load i32, i32* %faceLen.addr, align 4, !dbg !12715
  %add8 = add nsw i32 %20, 1, !dbg !12716
  %21 = load %struct.WeightTable*, %struct.WeightTable** %wtable.addr, align 8, !dbg !12717
  %len9 = getelementptr inbounds %struct.WeightTable, %struct.WeightTable* %21, i32 0, i32 1, !dbg !12718
  store i32 %add8, i32* %len9, align 8, !dbg !12719
  br label %if.end10, !dbg !12720

if.end10:                                         ; preds = %if.end, %entry
  %22 = load %struct.WeightTable*, %struct.WeightTable** %wtable.addr, align 8, !dbg !12721
  %weight_table11 = getelementptr inbounds %struct.WeightTable, %struct.WeightTable* %22, i32 0, i32 0, !dbg !12723
  %23 = load %struct.FaceVertWeightEntry*, %struct.FaceVertWeightEntry** %weight_table11, align 8, !dbg !12723
  %24 = load i32, i32* %faceLen.addr, align 4, !dbg !12724
  %idxprom = sext i32 %24 to i64, !dbg !12721
  %arrayidx = getelementptr inbounds %struct.FaceVertWeightEntry, %struct.FaceVertWeightEntry* %23, i64 %idxprom, !dbg !12721
  %valid = getelementptr inbounds %struct.FaceVertWeightEntry, %struct.FaceVertWeightEntry* %arrayidx, i32 0, i32 2, !dbg !12725
  %25 = load i32, i32* %valid, align 8, !dbg !12725
  %tobool12 = icmp ne i32 %25, 0, !dbg !12721
  br i1 %tobool12, label %if.end113, label %if.then13, !dbg !12726

if.then13:                                        ; preds = %if.end10
  %26 = load %struct.WeightTable*, %struct.WeightTable** %wtable.addr, align 8, !dbg !12727
  %weight_table14 = getelementptr inbounds %struct.WeightTable, %struct.WeightTable* %26, i32 0, i32 0, !dbg !12729
  %27 = load %struct.FaceVertWeightEntry*, %struct.FaceVertWeightEntry** %weight_table14, align 8, !dbg !12729
  %28 = load i32, i32* %faceLen.addr, align 4, !dbg !12730
  %idxprom15 = sext i32 %28 to i64, !dbg !12727
  %arrayidx16 = getelementptr inbounds %struct.FaceVertWeightEntry, %struct.FaceVertWeightEntry* %27, i64 %idxprom15, !dbg !12727
  %valid17 = getelementptr inbounds %struct.FaceVertWeightEntry, %struct.FaceVertWeightEntry* %arrayidx16, i32 0, i32 2, !dbg !12731
  store i32 1, i32* %valid17, align 8, !dbg !12732
  %29 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !12733
  %30 = load i32, i32* %faceLen.addr, align 4, !dbg !12734
  %conv18 = sext i32 %30 to i64, !dbg !12734
  %mul19 = mul i64 4, %conv18, !dbg !12735
  %31 = load i32, i32* %faceLen.addr, align 4, !dbg !12736
  %conv20 = sext i32 %31 to i64, !dbg !12736
  %mul21 = mul i64 %mul19, %conv20, !dbg !12737
  %32 = load i32, i32* %gridCuts.addr, align 4, !dbg !12738
  %add22 = add nsw i32 %32, 2, !dbg !12739
  %conv23 = sext i32 %add22 to i64, !dbg !12740
  %mul24 = mul i64 %mul21, %conv23, !dbg !12741
  %33 = load i32, i32* %gridCuts.addr, align 4, !dbg !12742
  %add25 = add nsw i32 %33, 2, !dbg !12743
  %conv26 = sext i32 %add25 to i64, !dbg !12744
  %mul27 = mul i64 %mul24, %conv26, !dbg !12745
  %call28 = call i8* %29(i64 %mul27, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.18, i64 0, i64 0)), !dbg !12733
  %34 = bitcast i8* %call28 to float*, !dbg !12733
  store float* %34, float** %w, align 8, !dbg !12746
  %35 = load %struct.WeightTable*, %struct.WeightTable** %wtable.addr, align 8, !dbg !12747
  %weight_table29 = getelementptr inbounds %struct.WeightTable, %struct.WeightTable* %35, i32 0, i32 0, !dbg !12748
  %36 = load %struct.FaceVertWeightEntry*, %struct.FaceVertWeightEntry** %weight_table29, align 8, !dbg !12748
  %37 = load i32, i32* %faceLen.addr, align 4, !dbg !12749
  %idxprom30 = sext i32 %37 to i64, !dbg !12747
  %arrayidx31 = getelementptr inbounds %struct.FaceVertWeightEntry, %struct.FaceVertWeightEntry* %36, i64 %idxprom30, !dbg !12747
  %w32 = getelementptr inbounds %struct.FaceVertWeightEntry, %struct.FaceVertWeightEntry* %arrayidx31, i32 0, i32 1, !dbg !12750
  store float* %34, float** %w32, align 8, !dbg !12751
  %38 = load i32, i32* %faceLen.addr, align 4, !dbg !12752
  %conv33 = sitofp i32 %38 to float, !dbg !12753
  %div = fdiv float 1.000000e+00, %conv33, !dbg !12754
  store float %div, float* %fac, align 4, !dbg !12755
  store i32 0, i32* %i, align 4, !dbg !12756
  br label %for.cond, !dbg !12758

for.cond:                                         ; preds = %for.inc110, %if.then13
  %39 = load i32, i32* %i, align 4, !dbg !12759
  %40 = load i32, i32* %faceLen.addr, align 4, !dbg !12761
  %cmp34 = icmp slt i32 %39, %40, !dbg !12762
  br i1 %cmp34, label %for.body, label %for.end112, !dbg !12763

for.body:                                         ; preds = %for.cond
  store i32 0, i32* %x, align 4, !dbg !12764
  br label %for.cond36, !dbg !12767

for.cond36:                                       ; preds = %for.inc107, %for.body
  %41 = load i32, i32* %x, align 4, !dbg !12768
  %42 = load i32, i32* %gridCuts.addr, align 4, !dbg !12770
  %add37 = add nsw i32 %42, 2, !dbg !12771
  %cmp38 = icmp slt i32 %41, %add37, !dbg !12772
  br i1 %cmp38, label %for.body40, label %for.end109, !dbg !12773

for.body40:                                       ; preds = %for.cond36
  store i32 0, i32* %y, align 4, !dbg !12774
  br label %for.cond41, !dbg !12777

for.cond41:                                       ; preds = %for.inc104, %for.body40
  %43 = load i32, i32* %y, align 4, !dbg !12778
  %44 = load i32, i32* %gridCuts.addr, align 4, !dbg !12780
  %add42 = add nsw i32 %44, 2, !dbg !12781
  %cmp43 = icmp slt i32 %43, %add42, !dbg !12782
  br i1 %cmp43, label %for.body45, label %for.end106, !dbg !12783

for.body45:                                       ; preds = %for.cond41
  %45 = load i32, i32* %x, align 4, !dbg !12784
  %conv46 = sitofp i32 %45 to float, !dbg !12786
  %46 = load i32, i32* %gridCuts.addr, align 4, !dbg !12787
  %add47 = add nsw i32 %46, 1, !dbg !12788
  %conv48 = sitofp i32 %add47 to float, !dbg !12789
  %div49 = fdiv float %conv46, %conv48, !dbg !12790
  %div50 = fdiv float %div49, 2.000000e+00, !dbg !12791
  %sub = fsub float 5.000000e-01, %div50, !dbg !12792
  store float %sub, float* %fx, align 4, !dbg !12793
  %47 = load i32, i32* %y, align 4, !dbg !12794
  %conv51 = sitofp i32 %47 to float, !dbg !12795
  %48 = load i32, i32* %gridCuts.addr, align 4, !dbg !12796
  %add52 = add nsw i32 %48, 1, !dbg !12797
  %conv53 = sitofp i32 %add52 to float, !dbg !12798
  %div54 = fdiv float %conv51, %conv53, !dbg !12799
  %div55 = fdiv float %div54, 2.000000e+00, !dbg !12800
  %sub56 = fsub float 5.000000e-01, %div55, !dbg !12801
  store float %sub56, float* %fy, align 4, !dbg !12802
  %49 = load i32, i32* %faceLen.addr, align 4, !dbg !12803
  %sub57 = sub nsw i32 %49, 4, !dbg !12804
  %conv58 = sitofp i32 %sub57 to float, !dbg !12803
  store float %conv58, float* %fac2, align 4, !dbg !12805
  %50 = load float, float* %fx, align 4, !dbg !12806
  %sub59 = fsub float 1.000000e+00, %50, !dbg !12807
  %51 = load float, float* %fy, align 4, !dbg !12808
  %sub60 = fsub float 1.000000e+00, %51, !dbg !12809
  %mul61 = fmul float %sub59, %sub60, !dbg !12810
  %52 = load float, float* %fac2, align 4, !dbg !12811
  %fneg = fneg float %52, !dbg !12812
  %53 = load float, float* %fx, align 4, !dbg !12813
  %mul62 = fmul float %fneg, %53, !dbg !12814
  %54 = load float, float* %fy, align 4, !dbg !12815
  %mul63 = fmul float %mul62, %54, !dbg !12816
  %55 = load float, float* %fac, align 4, !dbg !12817
  %mul64 = fmul float %mul63, %55, !dbg !12818
  %add65 = fadd float %mul61, %mul64, !dbg !12819
  store float %add65, float* %w1, align 4, !dbg !12820
  %56 = load float, float* %fx, align 4, !dbg !12821
  %sub66 = fsub float 1.000000e+00, %56, !dbg !12822
  %57 = load float, float* %fac2, align 4, !dbg !12823
  %58 = load float, float* %fx, align 4, !dbg !12824
  %mul67 = fmul float %57, %58, !dbg !12825
  %59 = load float, float* %fac, align 4, !dbg !12826
  %fneg68 = fneg float %59, !dbg !12827
  %mul69 = fmul float %mul67, %fneg68, !dbg !12828
  %add70 = fadd float %sub66, %mul69, !dbg !12829
  %60 = load float, float* %fy, align 4, !dbg !12830
  %mul71 = fmul float %add70, %60, !dbg !12831
  store float %mul71, float* %w2, align 4, !dbg !12832
  %61 = load float, float* %fx, align 4, !dbg !12833
  %62 = load float, float* %fy, align 4, !dbg !12834
  %sub72 = fsub float 1.000000e+00, %62, !dbg !12835
  %63 = load float, float* %fac2, align 4, !dbg !12836
  %fneg73 = fneg float %63, !dbg !12837
  %64 = load float, float* %fy, align 4, !dbg !12838
  %mul74 = fmul float %fneg73, %64, !dbg !12839
  %65 = load float, float* %fac, align 4, !dbg !12840
  %mul75 = fmul float %mul74, %65, !dbg !12841
  %add76 = fadd float %sub72, %mul75, !dbg !12842
  %mul77 = fmul float %61, %add76, !dbg !12843
  store float %mul77, float* %w4, align 4, !dbg !12844
  %66 = load i32, i32* %faceLen.addr, align 4, !dbg !12845
  %cmp78 = icmp sgt i32 %66, 3, !dbg !12847
  br i1 %cmp78, label %if.then80, label %if.end93, !dbg !12848

if.then80:                                        ; preds = %for.body45
  %67 = load float, float* %w1, align 4, !dbg !12849
  %68 = load float, float* %w2, align 4, !dbg !12851
  %add81 = fadd float %67, %68, !dbg !12852
  %69 = load float, float* %w4, align 4, !dbg !12853
  %add82 = fadd float %add81, %69, !dbg !12854
  %sub83 = fsub float 1.000000e+00, %add82, !dbg !12855
  store float %sub83, float* %fac2, align 4, !dbg !12856
  %70 = load float, float* %fac2, align 4, !dbg !12857
  %71 = load i32, i32* %faceLen.addr, align 4, !dbg !12858
  %sub84 = sub nsw i32 %71, 3, !dbg !12859
  %conv85 = sitofp i32 %sub84 to float, !dbg !12860
  %div86 = fdiv float %70, %conv85, !dbg !12861
  store float %div86, float* %fac2, align 4, !dbg !12862
  store i32 0, i32* %j, align 4, !dbg !12863
  br label %for.cond87, !dbg !12865

for.cond87:                                       ; preds = %for.inc, %if.then80
  %72 = load i32, i32* %j, align 4, !dbg !12866
  %73 = load i32, i32* %faceLen.addr, align 4, !dbg !12868
  %cmp88 = icmp slt i32 %72, %73, !dbg !12869
  br i1 %cmp88, label %for.body90, label %for.end, !dbg !12870

for.body90:                                       ; preds = %for.cond87
  %74 = load float, float* %fac2, align 4, !dbg !12871
  %75 = load float*, float** %w, align 8, !dbg !12873
  %76 = load i32, i32* %j, align 4, !dbg !12874
  %idxprom91 = sext i32 %76 to i64, !dbg !12873
  %arrayidx92 = getelementptr inbounds float, float* %75, i64 %idxprom91, !dbg !12873
  store float %74, float* %arrayidx92, align 4, !dbg !12875
  br label %for.inc, !dbg !12876

for.inc:                                          ; preds = %for.body90
  %77 = load i32, i32* %j, align 4, !dbg !12877
  %inc = add nsw i32 %77, 1, !dbg !12877
  store i32 %inc, i32* %j, align 4, !dbg !12877
  br label %for.cond87, !dbg !12878, !llvm.loop !12879

for.end:                                          ; preds = %for.cond87
  br label %if.end93, !dbg !12881

if.end93:                                         ; preds = %for.end, %for.body45
  %78 = load float, float* %w1, align 4, !dbg !12882
  %79 = load float*, float** %w, align 8, !dbg !12883
  %80 = load i32, i32* %i, align 4, !dbg !12884
  %idxprom94 = sext i32 %80 to i64, !dbg !12883
  %arrayidx95 = getelementptr inbounds float, float* %79, i64 %idxprom94, !dbg !12883
  store float %78, float* %arrayidx95, align 4, !dbg !12885
  %81 = load float, float* %w2, align 4, !dbg !12886
  %82 = load float*, float** %w, align 8, !dbg !12887
  %83 = load i32, i32* %i, align 4, !dbg !12888
  %sub96 = sub nsw i32 %83, 1, !dbg !12889
  %84 = load i32, i32* %faceLen.addr, align 4, !dbg !12890
  %add97 = add nsw i32 %sub96, %84, !dbg !12891
  %85 = load i32, i32* %faceLen.addr, align 4, !dbg !12892
  %rem = srem i32 %add97, %85, !dbg !12893
  %idxprom98 = sext i32 %rem to i64, !dbg !12887
  %arrayidx99 = getelementptr inbounds float, float* %82, i64 %idxprom98, !dbg !12887
  store float %81, float* %arrayidx99, align 4, !dbg !12894
  %86 = load float, float* %w4, align 4, !dbg !12895
  %87 = load float*, float** %w, align 8, !dbg !12896
  %88 = load i32, i32* %i, align 4, !dbg !12897
  %add100 = add nsw i32 %88, 1, !dbg !12898
  %89 = load i32, i32* %faceLen.addr, align 4, !dbg !12899
  %rem101 = srem i32 %add100, %89, !dbg !12900
  %idxprom102 = sext i32 %rem101 to i64, !dbg !12896
  %arrayidx103 = getelementptr inbounds float, float* %87, i64 %idxprom102, !dbg !12896
  store float %86, float* %arrayidx103, align 4, !dbg !12901
  %90 = load i32, i32* %faceLen.addr, align 4, !dbg !12902
  %91 = load float*, float** %w, align 8, !dbg !12903
  %idx.ext = sext i32 %90 to i64, !dbg !12903
  %add.ptr = getelementptr inbounds float, float* %91, i64 %idx.ext, !dbg !12903
  store float* %add.ptr, float** %w, align 8, !dbg !12903
  br label %for.inc104, !dbg !12904

for.inc104:                                       ; preds = %if.end93
  %92 = load i32, i32* %y, align 4, !dbg !12905
  %inc105 = add nsw i32 %92, 1, !dbg !12905
  store i32 %inc105, i32* %y, align 4, !dbg !12905
  br label %for.cond41, !dbg !12906, !llvm.loop !12907

for.end106:                                       ; preds = %for.cond41
  br label %for.inc107, !dbg !12909

for.inc107:                                       ; preds = %for.end106
  %93 = load i32, i32* %x, align 4, !dbg !12910
  %inc108 = add nsw i32 %93, 1, !dbg !12910
  store i32 %inc108, i32* %x, align 4, !dbg !12910
  br label %for.cond36, !dbg !12911, !llvm.loop !12912

for.end109:                                       ; preds = %for.cond36
  br label %for.inc110, !dbg !12914

for.inc110:                                       ; preds = %for.end109
  %94 = load i32, i32* %i, align 4, !dbg !12915
  %inc111 = add nsw i32 %94, 1, !dbg !12915
  store i32 %inc111, i32* %i, align 4, !dbg !12915
  br label %for.cond, !dbg !12916, !llvm.loop !12917

for.end112:                                       ; preds = %for.cond
  br label %if.end113, !dbg !12919

if.end113:                                        ; preds = %for.end112, %if.end10
  %95 = load %struct.WeightTable*, %struct.WeightTable** %wtable.addr, align 8, !dbg !12920
  %weight_table114 = getelementptr inbounds %struct.WeightTable, %struct.WeightTable* %95, i32 0, i32 0, !dbg !12921
  %96 = load %struct.FaceVertWeightEntry*, %struct.FaceVertWeightEntry** %weight_table114, align 8, !dbg !12921
  %97 = load i32, i32* %faceLen.addr, align 4, !dbg !12922
  %idxprom115 = sext i32 %97 to i64, !dbg !12920
  %arrayidx116 = getelementptr inbounds %struct.FaceVertWeightEntry, %struct.FaceVertWeightEntry* %96, i64 %idxprom115, !dbg !12920
  %w117 = getelementptr inbounds %struct.FaceVertWeightEntry, %struct.FaceVertWeightEntry* %arrayidx116, i32 0, i32 1, !dbg !12923
  %98 = load float*, float** %w117, align 8, !dbg !12923
  ret float* %98, !dbg !12924
}

declare dso_local void @DM_interp_vert_data(%struct.DerivedMesh*, %struct.DerivedMesh*, i32*, float*, i32, i32) #2

declare dso_local void @CustomData_interp(%struct.CustomData*, %struct.CustomData*, i32*, float*, float*, i32, i32) #2

declare dso_local void @CustomData_copy_data(%struct.CustomData*, %struct.CustomData*, i32, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @ccg_loops_to_corners(%struct.CustomData* %fdata, %struct.CustomData* %ldata, %struct.CustomData* %pdata, i32 %loopstart, i32 %findex, i32 %polyindex, i32 %numTex, i32 %numCol, i32 %hasPCol, i32 %hasOrigSpace) #0 !dbg !12925 {
entry:
  %fdata.addr = alloca %struct.CustomData*, align 8
  %ldata.addr = alloca %struct.CustomData*, align 8
  %pdata.addr = alloca %struct.CustomData*, align 8
  %loopstart.addr = alloca i32, align 4
  %findex.addr = alloca i32, align 4
  %polyindex.addr = alloca i32, align 4
  %numTex.addr = alloca i32, align 4
  %numCol.addr = alloca i32, align 4
  %hasPCol.addr = alloca i32, align 4
  %hasOrigSpace.addr = alloca i32, align 4
  %texface = alloca %struct.MTFace*, align 8
  %texpoly = alloca %struct.MTexPoly*, align 8
  %mcol = alloca %struct.MCol*, align 8
  %mloopcol = alloca %struct.MLoopCol*, align 8
  %mloopuv = alloca %struct.MLoopUV*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %mloopcol__tmp = alloca %struct.MLoopCol*, align 8
  %mcol__tmp = alloca %struct.MCol*, align 8
  %mloopcol__tmp42 = alloca %struct.MLoopCol*, align 8
  %mcol__tmp43 = alloca %struct.MCol*, align 8
  %of = alloca %struct.OrigSpaceFace*, align 8
  %lof = alloca %struct.OrigSpaceLoop*, align 8
  store %struct.CustomData* %fdata, %struct.CustomData** %fdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CustomData** %fdata.addr, metadata !12928, metadata !DIExpression()), !dbg !12929
  store %struct.CustomData* %ldata, %struct.CustomData** %ldata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CustomData** %ldata.addr, metadata !12930, metadata !DIExpression()), !dbg !12931
  store %struct.CustomData* %pdata, %struct.CustomData** %pdata.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CustomData** %pdata.addr, metadata !12932, metadata !DIExpression()), !dbg !12933
  store i32 %loopstart, i32* %loopstart.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %loopstart.addr, metadata !12934, metadata !DIExpression()), !dbg !12935
  store i32 %findex, i32* %findex.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %findex.addr, metadata !12936, metadata !DIExpression()), !dbg !12937
  store i32 %polyindex, i32* %polyindex.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %polyindex.addr, metadata !12938, metadata !DIExpression()), !dbg !12939
  store i32 %numTex, i32* %numTex.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numTex.addr, metadata !12940, metadata !DIExpression()), !dbg !12941
  store i32 %numCol, i32* %numCol.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numCol.addr, metadata !12942, metadata !DIExpression()), !dbg !12943
  store i32 %hasPCol, i32* %hasPCol.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %hasPCol.addr, metadata !12944, metadata !DIExpression()), !dbg !12945
  store i32 %hasOrigSpace, i32* %hasOrigSpace.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %hasOrigSpace.addr, metadata !12946, metadata !DIExpression()), !dbg !12947
  call void @llvm.dbg.declare(metadata %struct.MTFace** %texface, metadata !12948, metadata !DIExpression()), !dbg !12949
  call void @llvm.dbg.declare(metadata %struct.MTexPoly** %texpoly, metadata !12950, metadata !DIExpression()), !dbg !12953
  call void @llvm.dbg.declare(metadata %struct.MCol** %mcol, metadata !12954, metadata !DIExpression()), !dbg !12955
  call void @llvm.dbg.declare(metadata %struct.MLoopCol** %mloopcol, metadata !12956, metadata !DIExpression()), !dbg !12959
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %mloopuv, metadata !12960, metadata !DIExpression()), !dbg !12963
  call void @llvm.dbg.declare(metadata i32* %i, metadata !12964, metadata !DIExpression()), !dbg !12965
  call void @llvm.dbg.declare(metadata i32* %j, metadata !12966, metadata !DIExpression()), !dbg !12967
  store i32 0, i32* %i, align 4, !dbg !12968
  br label %for.cond, !dbg !12970

for.cond:                                         ; preds = %for.inc13, %entry
  %0 = load i32, i32* %i, align 4, !dbg !12971
  %1 = load i32, i32* %numTex.addr, align 4, !dbg !12973
  %cmp = icmp slt i32 %0, %1, !dbg !12974
  br i1 %cmp, label %for.body, label %for.end15, !dbg !12975

for.body:                                         ; preds = %for.cond
  %2 = load %struct.CustomData*, %struct.CustomData** %fdata.addr, align 8, !dbg !12976
  %3 = load i32, i32* %findex.addr, align 4, !dbg !12978
  %4 = load i32, i32* %i, align 4, !dbg !12979
  %call = call i8* @CustomData_get_n(%struct.CustomData* %2, i32 5, i32 %3, i32 %4), !dbg !12980
  %5 = bitcast i8* %call to %struct.MTFace*, !dbg !12980
  store %struct.MTFace* %5, %struct.MTFace** %texface, align 8, !dbg !12981
  %6 = load %struct.CustomData*, %struct.CustomData** %pdata.addr, align 8, !dbg !12982
  %7 = load i32, i32* %polyindex.addr, align 4, !dbg !12983
  %8 = load i32, i32* %i, align 4, !dbg !12984
  %call1 = call i8* @CustomData_get_n(%struct.CustomData* %6, i32 15, i32 %7, i32 %8), !dbg !12985
  %9 = bitcast i8* %call1 to %struct.MTexPoly*, !dbg !12985
  store %struct.MTexPoly* %9, %struct.MTexPoly** %texpoly, align 8, !dbg !12986
  %10 = load %struct.MTexPoly*, %struct.MTexPoly** %texpoly, align 8, !dbg !12987
  %tpage = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %10, i32 0, i32 0, !dbg !12987
  %11 = load %struct.Image*, %struct.Image** %tpage, align 8, !dbg !12987
  %12 = load %struct.MTFace*, %struct.MTFace** %texface, align 8, !dbg !12987
  %tpage2 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %12, i32 0, i32 1, !dbg !12987
  store %struct.Image* %11, %struct.Image** %tpage2, align 8, !dbg !12987
  %13 = load %struct.MTexPoly*, %struct.MTexPoly** %texpoly, align 8, !dbg !12987
  %flag = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %13, i32 0, i32 1, !dbg !12987
  %14 = load i8, i8* %flag, align 8, !dbg !12987
  %15 = load %struct.MTFace*, %struct.MTFace** %texface, align 8, !dbg !12987
  %flag3 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %15, i32 0, i32 2, !dbg !12987
  store i8 %14, i8* %flag3, align 8, !dbg !12987
  %16 = load %struct.MTexPoly*, %struct.MTexPoly** %texpoly, align 8, !dbg !12987
  %transp = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %16, i32 0, i32 2, !dbg !12987
  %17 = load i8, i8* %transp, align 1, !dbg !12987
  %18 = load %struct.MTFace*, %struct.MTFace** %texface, align 8, !dbg !12987
  %transp4 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %18, i32 0, i32 3, !dbg !12987
  store i8 %17, i8* %transp4, align 1, !dbg !12987
  %19 = load %struct.MTexPoly*, %struct.MTexPoly** %texpoly, align 8, !dbg !12987
  %mode = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %19, i32 0, i32 3, !dbg !12987
  %20 = load i16, i16* %mode, align 2, !dbg !12987
  %21 = load %struct.MTFace*, %struct.MTFace** %texface, align 8, !dbg !12987
  %mode5 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %21, i32 0, i32 4, !dbg !12987
  store i16 %20, i16* %mode5, align 2, !dbg !12987
  %22 = load %struct.MTexPoly*, %struct.MTexPoly** %texpoly, align 8, !dbg !12987
  %tile = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %22, i32 0, i32 4, !dbg !12987
  %23 = load i16, i16* %tile, align 4, !dbg !12987
  %24 = load %struct.MTFace*, %struct.MTFace** %texface, align 8, !dbg !12987
  %tile6 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %24, i32 0, i32 5, !dbg !12987
  store i16 %23, i16* %tile6, align 4, !dbg !12987
  %25 = load %struct.CustomData*, %struct.CustomData** %ldata.addr, align 8, !dbg !12989
  %26 = load i32, i32* %loopstart.addr, align 4, !dbg !12990
  %27 = load i32, i32* %i, align 4, !dbg !12991
  %call7 = call i8* @CustomData_get_n(%struct.CustomData* %25, i32 16, i32 %26, i32 %27), !dbg !12992
  %28 = bitcast i8* %call7 to %struct.MLoopUV*, !dbg !12992
  store %struct.MLoopUV* %28, %struct.MLoopUV** %mloopuv, align 8, !dbg !12993
  store i32 0, i32* %j, align 4, !dbg !12994
  br label %for.cond8, !dbg !12996

for.cond8:                                        ; preds = %for.inc, %for.body
  %29 = load i32, i32* %j, align 4, !dbg !12997
  %cmp9 = icmp slt i32 %29, 4, !dbg !12999
  br i1 %cmp9, label %for.body10, label %for.end, !dbg !13000

for.body10:                                       ; preds = %for.cond8
  %30 = load %struct.MTFace*, %struct.MTFace** %texface, align 8, !dbg !13001
  %uv = getelementptr inbounds %struct.MTFace, %struct.MTFace* %30, i32 0, i32 0, !dbg !13003
  %31 = load i32, i32* %j, align 4, !dbg !13004
  %idxprom = sext i32 %31 to i64, !dbg !13001
  %arrayidx = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv, i64 0, i64 %idxprom, !dbg !13001
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %arrayidx, i64 0, i64 0, !dbg !13001
  %32 = load %struct.MLoopUV*, %struct.MLoopUV** %mloopuv, align 8, !dbg !13005
  %uv11 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %32, i32 0, i32 0, !dbg !13006
  %arraydecay12 = getelementptr inbounds [2 x float], [2 x float]* %uv11, i64 0, i64 0, !dbg !13005
  call void @copy_v2_v2(float* %arraydecay, float* %arraydecay12), !dbg !13007
  br label %for.inc, !dbg !13008

for.inc:                                          ; preds = %for.body10
  %33 = load i32, i32* %j, align 4, !dbg !13009
  %inc = add nsw i32 %33, 1, !dbg !13009
  store i32 %inc, i32* %j, align 4, !dbg !13009
  %34 = load %struct.MLoopUV*, %struct.MLoopUV** %mloopuv, align 8, !dbg !13010
  %incdec.ptr = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %34, i32 1, !dbg !13010
  store %struct.MLoopUV* %incdec.ptr, %struct.MLoopUV** %mloopuv, align 8, !dbg !13010
  br label %for.cond8, !dbg !13011, !llvm.loop !13012

for.end:                                          ; preds = %for.cond8
  br label %for.inc13, !dbg !13014

for.inc13:                                        ; preds = %for.end
  %35 = load i32, i32* %i, align 4, !dbg !13015
  %inc14 = add nsw i32 %35, 1, !dbg !13015
  store i32 %inc14, i32* %i, align 4, !dbg !13015
  br label %for.cond, !dbg !13016, !llvm.loop !13017

for.end15:                                        ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !13019
  br label %for.cond16, !dbg !13021

for.cond16:                                       ; preds = %for.inc34, %for.end15
  %36 = load i32, i32* %i, align 4, !dbg !13022
  %37 = load i32, i32* %numCol.addr, align 4, !dbg !13024
  %cmp17 = icmp slt i32 %36, %37, !dbg !13025
  br i1 %cmp17, label %for.body18, label %for.end36, !dbg !13026

for.body18:                                       ; preds = %for.cond16
  %38 = load %struct.CustomData*, %struct.CustomData** %ldata.addr, align 8, !dbg !13027
  %39 = load i32, i32* %loopstart.addr, align 4, !dbg !13029
  %40 = load i32, i32* %i, align 4, !dbg !13030
  %call19 = call i8* @CustomData_get_n(%struct.CustomData* %38, i32 17, i32 %39, i32 %40), !dbg !13031
  %41 = bitcast i8* %call19 to %struct.MLoopCol*, !dbg !13031
  store %struct.MLoopCol* %41, %struct.MLoopCol** %mloopcol, align 8, !dbg !13032
  %42 = load %struct.CustomData*, %struct.CustomData** %fdata.addr, align 8, !dbg !13033
  %43 = load i32, i32* %findex.addr, align 4, !dbg !13034
  %44 = load i32, i32* %i, align 4, !dbg !13035
  %call20 = call i8* @CustomData_get_n(%struct.CustomData* %42, i32 6, i32 %43, i32 %44), !dbg !13036
  %45 = bitcast i8* %call20 to %struct.MCol*, !dbg !13036
  store %struct.MCol* %45, %struct.MCol** %mcol, align 8, !dbg !13037
  store i32 0, i32* %j, align 4, !dbg !13038
  br label %for.cond21, !dbg !13040

for.cond21:                                       ; preds = %for.inc30, %for.body18
  %46 = load i32, i32* %j, align 4, !dbg !13041
  %cmp22 = icmp slt i32 %46, 4, !dbg !13043
  br i1 %cmp22, label %for.body23, label %for.end33, !dbg !13044

for.body23:                                       ; preds = %for.cond21
  call void @llvm.dbg.declare(metadata %struct.MLoopCol** %mloopcol__tmp, metadata !13045, metadata !DIExpression()), !dbg !13050
  %47 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol, align 8, !dbg !13050
  store %struct.MLoopCol* %47, %struct.MLoopCol** %mloopcol__tmp, align 8, !dbg !13050
  call void @llvm.dbg.declare(metadata %struct.MCol** %mcol__tmp, metadata !13051, metadata !DIExpression()), !dbg !13050
  %48 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !13050
  %49 = load i32, i32* %j, align 4, !dbg !13050
  %idxprom24 = sext i32 %49 to i64, !dbg !13050
  %arrayidx25 = getelementptr inbounds %struct.MCol, %struct.MCol* %48, i64 %idxprom24, !dbg !13050
  store %struct.MCol* %arrayidx25, %struct.MCol** %mcol__tmp, align 8, !dbg !13050
  %50 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp, align 8, !dbg !13050
  %r = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %50, i32 0, i32 0, !dbg !13050
  %51 = load i8, i8* %r, align 1, !dbg !13050
  %52 = load %struct.MCol*, %struct.MCol** %mcol__tmp, align 8, !dbg !13050
  %b = getelementptr inbounds %struct.MCol, %struct.MCol* %52, i32 0, i32 3, !dbg !13050
  store i8 %51, i8* %b, align 1, !dbg !13050
  %53 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp, align 8, !dbg !13050
  %g = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %53, i32 0, i32 1, !dbg !13050
  %54 = load i8, i8* %g, align 1, !dbg !13050
  %55 = load %struct.MCol*, %struct.MCol** %mcol__tmp, align 8, !dbg !13050
  %g26 = getelementptr inbounds %struct.MCol, %struct.MCol* %55, i32 0, i32 2, !dbg !13050
  store i8 %54, i8* %g26, align 1, !dbg !13050
  %56 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp, align 8, !dbg !13050
  %b27 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %56, i32 0, i32 2, !dbg !13050
  %57 = load i8, i8* %b27, align 1, !dbg !13050
  %58 = load %struct.MCol*, %struct.MCol** %mcol__tmp, align 8, !dbg !13050
  %r28 = getelementptr inbounds %struct.MCol, %struct.MCol* %58, i32 0, i32 1, !dbg !13050
  store i8 %57, i8* %r28, align 1, !dbg !13050
  %59 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp, align 8, !dbg !13050
  %a = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %59, i32 0, i32 3, !dbg !13050
  %60 = load i8, i8* %a, align 1, !dbg !13050
  %61 = load %struct.MCol*, %struct.MCol** %mcol__tmp, align 8, !dbg !13050
  %a29 = getelementptr inbounds %struct.MCol, %struct.MCol* %61, i32 0, i32 0, !dbg !13050
  store i8 %60, i8* %a29, align 1, !dbg !13050
  br label %for.inc30, !dbg !13052

for.inc30:                                        ; preds = %for.body23
  %62 = load i32, i32* %j, align 4, !dbg !13053
  %inc31 = add nsw i32 %62, 1, !dbg !13053
  store i32 %inc31, i32* %j, align 4, !dbg !13053
  %63 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol, align 8, !dbg !13054
  %incdec.ptr32 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %63, i32 1, !dbg !13054
  store %struct.MLoopCol* %incdec.ptr32, %struct.MLoopCol** %mloopcol, align 8, !dbg !13054
  br label %for.cond21, !dbg !13055, !llvm.loop !13056

for.end33:                                        ; preds = %for.cond21
  br label %for.inc34, !dbg !13058

for.inc34:                                        ; preds = %for.end33
  %64 = load i32, i32* %i, align 4, !dbg !13059
  %inc35 = add nsw i32 %64, 1, !dbg !13059
  store i32 %inc35, i32* %i, align 4, !dbg !13059
  br label %for.cond16, !dbg !13060, !llvm.loop !13061

for.end36:                                        ; preds = %for.cond16
  %65 = load i32, i32* %hasPCol.addr, align 4, !dbg !13063
  %tobool = icmp ne i32 %65, 0, !dbg !13063
  br i1 %tobool, label %if.then, label %if.end, !dbg !13065

if.then:                                          ; preds = %for.end36
  %66 = load %struct.CustomData*, %struct.CustomData** %ldata.addr, align 8, !dbg !13066
  %67 = load i32, i32* %loopstart.addr, align 4, !dbg !13068
  %call37 = call i8* @CustomData_get(%struct.CustomData* %66, i32 %67, i32 32), !dbg !13069
  %68 = bitcast i8* %call37 to %struct.MLoopCol*, !dbg !13069
  store %struct.MLoopCol* %68, %struct.MLoopCol** %mloopcol, align 8, !dbg !13070
  %69 = load %struct.CustomData*, %struct.CustomData** %fdata.addr, align 8, !dbg !13071
  %70 = load i32, i32* %findex.addr, align 4, !dbg !13072
  %call38 = call i8* @CustomData_get(%struct.CustomData* %69, i32 %70, i32 20), !dbg !13073
  %71 = bitcast i8* %call38 to %struct.MCol*, !dbg !13073
  store %struct.MCol* %71, %struct.MCol** %mcol, align 8, !dbg !13074
  store i32 0, i32* %j, align 4, !dbg !13075
  br label %for.cond39, !dbg !13077

for.cond39:                                       ; preds = %for.inc54, %if.then
  %72 = load i32, i32* %j, align 4, !dbg !13078
  %cmp40 = icmp slt i32 %72, 4, !dbg !13080
  br i1 %cmp40, label %for.body41, label %for.end57, !dbg !13081

for.body41:                                       ; preds = %for.cond39
  call void @llvm.dbg.declare(metadata %struct.MLoopCol** %mloopcol__tmp42, metadata !13082, metadata !DIExpression()), !dbg !13085
  %73 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol, align 8, !dbg !13085
  store %struct.MLoopCol* %73, %struct.MLoopCol** %mloopcol__tmp42, align 8, !dbg !13085
  call void @llvm.dbg.declare(metadata %struct.MCol** %mcol__tmp43, metadata !13086, metadata !DIExpression()), !dbg !13085
  %74 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !13085
  %75 = load i32, i32* %j, align 4, !dbg !13085
  %idxprom44 = sext i32 %75 to i64, !dbg !13085
  %arrayidx45 = getelementptr inbounds %struct.MCol, %struct.MCol* %74, i64 %idxprom44, !dbg !13085
  store %struct.MCol* %arrayidx45, %struct.MCol** %mcol__tmp43, align 8, !dbg !13085
  %76 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp42, align 8, !dbg !13085
  %r46 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %76, i32 0, i32 0, !dbg !13085
  %77 = load i8, i8* %r46, align 1, !dbg !13085
  %78 = load %struct.MCol*, %struct.MCol** %mcol__tmp43, align 8, !dbg !13085
  %b47 = getelementptr inbounds %struct.MCol, %struct.MCol* %78, i32 0, i32 3, !dbg !13085
  store i8 %77, i8* %b47, align 1, !dbg !13085
  %79 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp42, align 8, !dbg !13085
  %g48 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %79, i32 0, i32 1, !dbg !13085
  %80 = load i8, i8* %g48, align 1, !dbg !13085
  %81 = load %struct.MCol*, %struct.MCol** %mcol__tmp43, align 8, !dbg !13085
  %g49 = getelementptr inbounds %struct.MCol, %struct.MCol* %81, i32 0, i32 2, !dbg !13085
  store i8 %80, i8* %g49, align 1, !dbg !13085
  %82 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp42, align 8, !dbg !13085
  %b50 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %82, i32 0, i32 2, !dbg !13085
  %83 = load i8, i8* %b50, align 1, !dbg !13085
  %84 = load %struct.MCol*, %struct.MCol** %mcol__tmp43, align 8, !dbg !13085
  %r51 = getelementptr inbounds %struct.MCol, %struct.MCol* %84, i32 0, i32 1, !dbg !13085
  store i8 %83, i8* %r51, align 1, !dbg !13085
  %85 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp42, align 8, !dbg !13085
  %a52 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %85, i32 0, i32 3, !dbg !13085
  %86 = load i8, i8* %a52, align 1, !dbg !13085
  %87 = load %struct.MCol*, %struct.MCol** %mcol__tmp43, align 8, !dbg !13085
  %a53 = getelementptr inbounds %struct.MCol, %struct.MCol* %87, i32 0, i32 0, !dbg !13085
  store i8 %86, i8* %a53, align 1, !dbg !13085
  br label %for.inc54, !dbg !13087

for.inc54:                                        ; preds = %for.body41
  %88 = load i32, i32* %j, align 4, !dbg !13088
  %inc55 = add nsw i32 %88, 1, !dbg !13088
  store i32 %inc55, i32* %j, align 4, !dbg !13088
  %89 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol, align 8, !dbg !13089
  %incdec.ptr56 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %89, i32 1, !dbg !13089
  store %struct.MLoopCol* %incdec.ptr56, %struct.MLoopCol** %mloopcol, align 8, !dbg !13089
  br label %for.cond39, !dbg !13090, !llvm.loop !13091

for.end57:                                        ; preds = %for.cond39
  br label %if.end, !dbg !13093

if.end:                                           ; preds = %for.end57, %for.end36
  %90 = load i32, i32* %hasOrigSpace.addr, align 4, !dbg !13094
  %tobool58 = icmp ne i32 %90, 0, !dbg !13094
  br i1 %tobool58, label %if.then59, label %if.end75, !dbg !13096

if.then59:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.OrigSpaceFace** %of, metadata !13097, metadata !DIExpression()), !dbg !13104
  %91 = load %struct.CustomData*, %struct.CustomData** %fdata.addr, align 8, !dbg !13105
  %92 = load i32, i32* %findex.addr, align 4, !dbg !13106
  %call60 = call i8* @CustomData_get(%struct.CustomData* %91, i32 %92, i32 13), !dbg !13107
  %93 = bitcast i8* %call60 to %struct.OrigSpaceFace*, !dbg !13107
  store %struct.OrigSpaceFace* %93, %struct.OrigSpaceFace** %of, align 8, !dbg !13104
  call void @llvm.dbg.declare(metadata %struct.OrigSpaceLoop** %lof, metadata !13108, metadata !DIExpression()), !dbg !13114
  %94 = load %struct.CustomData*, %struct.CustomData** %ldata.addr, align 8, !dbg !13115
  %95 = load i32, i32* %loopstart.addr, align 4, !dbg !13116
  %call61 = call i8* @CustomData_get(%struct.CustomData* %94, i32 %95, i32 31), !dbg !13117
  %96 = bitcast i8* %call61 to %struct.OrigSpaceLoop*, !dbg !13117
  store %struct.OrigSpaceLoop* %96, %struct.OrigSpaceLoop** %lof, align 8, !dbg !13118
  store i32 0, i32* %j, align 4, !dbg !13119
  br label %for.cond62, !dbg !13121

for.cond62:                                       ; preds = %for.inc71, %if.then59
  %97 = load i32, i32* %j, align 4, !dbg !13122
  %cmp63 = icmp slt i32 %97, 4, !dbg !13124
  br i1 %cmp63, label %for.body64, label %for.end74, !dbg !13125

for.body64:                                       ; preds = %for.cond62
  %98 = load %struct.OrigSpaceFace*, %struct.OrigSpaceFace** %of, align 8, !dbg !13126
  %uv65 = getelementptr inbounds %struct.OrigSpaceFace, %struct.OrigSpaceFace* %98, i32 0, i32 0, !dbg !13128
  %99 = load i32, i32* %j, align 4, !dbg !13129
  %idxprom66 = sext i32 %99 to i64, !dbg !13126
  %arrayidx67 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv65, i64 0, i64 %idxprom66, !dbg !13126
  %arraydecay68 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx67, i64 0, i64 0, !dbg !13126
  %100 = load %struct.OrigSpaceLoop*, %struct.OrigSpaceLoop** %lof, align 8, !dbg !13130
  %uv69 = getelementptr inbounds %struct.OrigSpaceLoop, %struct.OrigSpaceLoop* %100, i32 0, i32 0, !dbg !13131
  %arraydecay70 = getelementptr inbounds [2 x float], [2 x float]* %uv69, i64 0, i64 0, !dbg !13130
  call void @copy_v2_v2(float* %arraydecay68, float* %arraydecay70), !dbg !13132
  br label %for.inc71, !dbg !13133

for.inc71:                                        ; preds = %for.body64
  %101 = load i32, i32* %j, align 4, !dbg !13134
  %inc72 = add nsw i32 %101, 1, !dbg !13134
  store i32 %inc72, i32* %j, align 4, !dbg !13134
  %102 = load %struct.OrigSpaceLoop*, %struct.OrigSpaceLoop** %lof, align 8, !dbg !13135
  %incdec.ptr73 = getelementptr inbounds %struct.OrigSpaceLoop, %struct.OrigSpaceLoop* %102, i32 1, !dbg !13135
  store %struct.OrigSpaceLoop* %incdec.ptr73, %struct.OrigSpaceLoop** %lof, align 8, !dbg !13135
  br label %for.cond62, !dbg !13136, !llvm.loop !13137

for.end74:                                        ; preds = %for.cond62
  br label %if.end75, !dbg !13139

if.end75:                                         ; preds = %for.end74, %if.end
  ret void, !dbg !13140
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ccgDM_getEdgeMapIndex(%struct.CCGSubSurf* %ss, %struct.CCGEdge* %e) #0 !dbg !13141 {
entry:
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %e.addr = alloca %struct.CCGEdge*, align 8
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !13144, metadata !DIExpression()), !dbg !13145
  store %struct.CCGEdge* %e, %struct.CCGEdge** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e.addr, metadata !13146, metadata !DIExpression()), !dbg !13147
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !13148
  %1 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !13149
  %call = call i8* @ccgSubSurf_getEdgeUserData(%struct.CCGSubSurf* %0, %struct.CCGEdge* %1), !dbg !13150
  %2 = bitcast i8* %call to i32*, !dbg !13151
  %arrayidx = getelementptr inbounds i32, i32* %2, i64 1, !dbg !13152
  %3 = load i32, i32* %arrayidx, align 4, !dbg !13152
  ret i32 %3, !dbg !13153
}

declare dso_local %struct.CCGVert* @ccgSubSurf_getEdgeVert1(%struct.CCGEdge*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @set_subsurf_uv(%struct.CCGSubSurf* %ss, %struct.DerivedMesh* %dm, %struct.DerivedMesh* %result, i32 %n) #0 !dbg !13154 {
entry:
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %result.addr = alloca %struct.DerivedMesh*, align 8
  %n.addr = alloca i32, align 4
  %uvss = alloca %struct.CCGSubSurf*, align 8
  %faceMap = alloca %struct.CCGFace**, align 8
  %tf = alloca %struct.MTFace*, align 8
  %mluv = alloca %struct.MLoopUV*, align 8
  %fi = alloca %struct.CCGFaceIterator*, align 8
  %index = alloca i32, align 4
  %gridSize = alloca i32, align 4
  %gridFaces = alloca i32, align 4
  %totface = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %S = alloca i32, align 4
  %dmloopuv = alloca %struct.MLoopUV*, align 8
  %tface = alloca %struct.MTFace*, align 8
  %mloopuv = alloca %struct.MLoopUV*, align 8
  %f = alloca %struct.CCGFace*, align 8
  %f24 = alloca %struct.CCGFace*, align 8
  %numVerts = alloca i32, align 4
  %faceGridData = alloca [2 x float]*, align 8
  %a = alloca float*, align 8
  %b = alloca float*, align 8
  %c = alloca float*, align 8
  %d = alloca float*, align 8
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !13157, metadata !DIExpression()), !dbg !13158
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !13159, metadata !DIExpression()), !dbg !13160
  store %struct.DerivedMesh* %result, %struct.DerivedMesh** %result.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %result.addr, metadata !13161, metadata !DIExpression()), !dbg !13162
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !13163, metadata !DIExpression()), !dbg !13164
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %uvss, metadata !13165, metadata !DIExpression()), !dbg !13166
  call void @llvm.dbg.declare(metadata %struct.CCGFace*** %faceMap, metadata !13167, metadata !DIExpression()), !dbg !13168
  call void @llvm.dbg.declare(metadata %struct.MTFace** %tf, metadata !13169, metadata !DIExpression()), !dbg !13170
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %mluv, metadata !13171, metadata !DIExpression()), !dbg !13172
  call void @llvm.dbg.declare(metadata %struct.CCGFaceIterator** %fi, metadata !13173, metadata !DIExpression()), !dbg !13174
  call void @llvm.dbg.declare(metadata i32* %index, metadata !13175, metadata !DIExpression()), !dbg !13176
  call void @llvm.dbg.declare(metadata i32* %gridSize, metadata !13177, metadata !DIExpression()), !dbg !13178
  call void @llvm.dbg.declare(metadata i32* %gridFaces, metadata !13179, metadata !DIExpression()), !dbg !13180
  call void @llvm.dbg.declare(metadata i32* %totface, metadata !13181, metadata !DIExpression()), !dbg !13182
  call void @llvm.dbg.declare(metadata i32* %x, metadata !13183, metadata !DIExpression()), !dbg !13184
  call void @llvm.dbg.declare(metadata i32* %y, metadata !13185, metadata !DIExpression()), !dbg !13186
  call void @llvm.dbg.declare(metadata i32* %S, metadata !13187, metadata !DIExpression()), !dbg !13188
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %dmloopuv, metadata !13189, metadata !DIExpression()), !dbg !13190
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !13191
  %loopData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 3, !dbg !13192
  %1 = load i32, i32* %n.addr, align 4, !dbg !13193
  %call = call i8* @CustomData_get_layer_n(%struct.CustomData* %loopData, i32 16, i32 %1), !dbg !13194
  %2 = bitcast i8* %call to %struct.MLoopUV*, !dbg !13194
  store %struct.MLoopUV* %2, %struct.MLoopUV** %dmloopuv, align 8, !dbg !13190
  call void @llvm.dbg.declare(metadata %struct.MTFace** %tface, metadata !13195, metadata !DIExpression()), !dbg !13196
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %result.addr, align 8, !dbg !13197
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %3, i32 0, i32 2, !dbg !13198
  %4 = load i32, i32* %n.addr, align 4, !dbg !13199
  %call1 = call i8* @CustomData_get_layer_n(%struct.CustomData* %faceData, i32 5, i32 %4), !dbg !13200
  %5 = bitcast i8* %call1 to %struct.MTFace*, !dbg !13200
  store %struct.MTFace* %5, %struct.MTFace** %tface, align 8, !dbg !13196
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %mloopuv, metadata !13201, metadata !DIExpression()), !dbg !13202
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %result.addr, align 8, !dbg !13203
  %loopData2 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %6, i32 0, i32 3, !dbg !13204
  %7 = load i32, i32* %n.addr, align 4, !dbg !13205
  %call3 = call i8* @CustomData_get_layer_n(%struct.CustomData* %loopData2, i32 16, i32 %7), !dbg !13206
  %8 = bitcast i8* %call3 to %struct.MLoopUV*, !dbg !13206
  store %struct.MLoopUV* %8, %struct.MLoopUV** %mloopuv, align 8, !dbg !13202
  %9 = load %struct.MLoopUV*, %struct.MLoopUV** %dmloopuv, align 8, !dbg !13207
  %tobool = icmp ne %struct.MLoopUV* %9, null, !dbg !13207
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !13209

lor.lhs.false:                                    ; preds = %entry
  %10 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !13210
  %tobool4 = icmp ne %struct.MTFace* %10, null, !dbg !13210
  br i1 %tobool4, label %if.end, label %land.lhs.true, !dbg !13211

land.lhs.true:                                    ; preds = %lor.lhs.false
  %11 = load %struct.MLoopUV*, %struct.MLoopUV** %mloopuv, align 8, !dbg !13212
  %tobool5 = icmp ne %struct.MLoopUV* %11, null, !dbg !13212
  br i1 %tobool5, label %if.end, label %if.then, !dbg !13213

if.then:                                          ; preds = %land.lhs.true, %entry
  br label %return, !dbg !13214

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false
  %12 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !13215
  %call6 = call i32 @ccgSubSurf_getSubdivisionLevels(%struct.CCGSubSurf* %12), !dbg !13216
  %call7 = call %struct.CCGSubSurf* @_getSubSurf(%struct.CCGSubSurf* null, i32 %call6, i32 2, i32 2), !dbg !13217
  store %struct.CCGSubSurf* %call7, %struct.CCGSubSurf** %uvss, align 8, !dbg !13218
  %13 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %uvss, align 8, !dbg !13219
  %14 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !13221
  %15 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !13222
  %16 = load %struct.MLoopUV*, %struct.MLoopUV** %dmloopuv, align 8, !dbg !13223
  %call8 = call i32 @ss_sync_from_uv(%struct.CCGSubSurf* %13, %struct.CCGSubSurf* %14, %struct.DerivedMesh* %15, %struct.MLoopUV* %16), !dbg !13224
  %tobool9 = icmp ne i32 %call8, 0, !dbg !13224
  br i1 %tobool9, label %if.end11, label %if.then10, !dbg !13225

if.then10:                                        ; preds = %if.end
  %17 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %uvss, align 8, !dbg !13226
  call void @ccgSubSurf_free(%struct.CCGSubSurf* %17), !dbg !13228
  br label %return, !dbg !13229

if.end11:                                         ; preds = %if.end
  %18 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %uvss, align 8, !dbg !13230
  %call12 = call i32 @ccgSubSurf_getNumFaces(%struct.CCGSubSurf* %18), !dbg !13231
  store i32 %call12, i32* %totface, align 4, !dbg !13232
  %19 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %uvss, align 8, !dbg !13233
  %call13 = call i32 @ccgSubSurf_getGridSize(%struct.CCGSubSurf* %19), !dbg !13234
  store i32 %call13, i32* %gridSize, align 4, !dbg !13235
  %20 = load i32, i32* %gridSize, align 4, !dbg !13236
  %sub = sub nsw i32 %20, 1, !dbg !13237
  store i32 %sub, i32* %gridFaces, align 4, !dbg !13238
  %21 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !13239
  %22 = load i32, i32* %totface, align 4, !dbg !13240
  %conv = sext i32 %22 to i64, !dbg !13240
  %mul = mul i64 %conv, 8, !dbg !13241
  %call14 = call i8* %21(i64 %mul, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19, i64 0, i64 0)), !dbg !13239
  %23 = bitcast i8* %call14 to %struct.CCGFace**, !dbg !13239
  store %struct.CCGFace** %23, %struct.CCGFace*** %faceMap, align 8, !dbg !13242
  %24 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %uvss, align 8, !dbg !13243
  %call15 = call %struct.CCGFaceIterator* @ccgSubSurf_getFaceIterator(%struct.CCGSubSurf* %24), !dbg !13245
  store %struct.CCGFaceIterator* %call15, %struct.CCGFaceIterator** %fi, align 8, !dbg !13246
  br label %for.cond, !dbg !13247

for.cond:                                         ; preds = %for.inc, %if.end11
  %25 = load %struct.CCGFaceIterator*, %struct.CCGFaceIterator** %fi, align 8, !dbg !13248
  %call16 = call i32 @ccgFaceIterator_isStopped(%struct.CCGFaceIterator* %25), !dbg !13250
  %tobool17 = icmp ne i32 %call16, 0, !dbg !13251
  %lnot = xor i1 %tobool17, true, !dbg !13251
  br i1 %lnot, label %for.body, label %for.end, !dbg !13252

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f, metadata !13253, metadata !DIExpression()), !dbg !13255
  %26 = load %struct.CCGFaceIterator*, %struct.CCGFaceIterator** %fi, align 8, !dbg !13256
  %call18 = call %struct.CCGFace* @ccgFaceIterator_getCurrent(%struct.CCGFaceIterator* %26), !dbg !13257
  store %struct.CCGFace* %call18, %struct.CCGFace** %f, align 8, !dbg !13255
  %27 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !13258
  %28 = load %struct.CCGFace**, %struct.CCGFace*** %faceMap, align 8, !dbg !13259
  %29 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !13260
  %call19 = call i8* @ccgSubSurf_getFaceFaceHandle(%struct.CCGFace* %29), !dbg !13260
  %30 = ptrtoint i8* %call19 to i64, !dbg !13260
  %conv20 = trunc i64 %30 to i32, !dbg !13260
  %idxprom = sext i32 %conv20 to i64, !dbg !13259
  %arrayidx = getelementptr inbounds %struct.CCGFace*, %struct.CCGFace** %28, i64 %idxprom, !dbg !13259
  store %struct.CCGFace* %27, %struct.CCGFace** %arrayidx, align 8, !dbg !13261
  br label %for.inc, !dbg !13262

for.inc:                                          ; preds = %for.body
  %31 = load %struct.CCGFaceIterator*, %struct.CCGFaceIterator** %fi, align 8, !dbg !13263
  call void @ccgFaceIterator_next(%struct.CCGFaceIterator* %31), !dbg !13264
  br label %for.cond, !dbg !13265, !llvm.loop !13266

for.end:                                          ; preds = %for.cond
  %32 = load %struct.CCGFaceIterator*, %struct.CCGFaceIterator** %fi, align 8, !dbg !13268
  call void @ccgFaceIterator_free(%struct.CCGFaceIterator* %32), !dbg !13269
  %33 = load %struct.MTFace*, %struct.MTFace** %tface, align 8, !dbg !13270
  store %struct.MTFace* %33, %struct.MTFace** %tf, align 8, !dbg !13271
  %34 = load %struct.MLoopUV*, %struct.MLoopUV** %mloopuv, align 8, !dbg !13272
  store %struct.MLoopUV* %34, %struct.MLoopUV** %mluv, align 8, !dbg !13273
  store i32 0, i32* %index, align 4, !dbg !13274
  br label %for.cond21, !dbg !13276

for.cond21:                                       ; preds = %for.inc104, %for.end
  %35 = load i32, i32* %index, align 4, !dbg !13277
  %36 = load i32, i32* %totface, align 4, !dbg !13279
  %cmp = icmp slt i32 %35, %36, !dbg !13280
  br i1 %cmp, label %for.body23, label %for.end106, !dbg !13281

for.body23:                                       ; preds = %for.cond21
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f24, metadata !13282, metadata !DIExpression()), !dbg !13284
  %37 = load %struct.CCGFace**, %struct.CCGFace*** %faceMap, align 8, !dbg !13285
  %38 = load i32, i32* %index, align 4, !dbg !13286
  %idxprom25 = sext i32 %38 to i64, !dbg !13285
  %arrayidx26 = getelementptr inbounds %struct.CCGFace*, %struct.CCGFace** %37, i64 %idxprom25, !dbg !13285
  %39 = load %struct.CCGFace*, %struct.CCGFace** %arrayidx26, align 8, !dbg !13285
  store %struct.CCGFace* %39, %struct.CCGFace** %f24, align 8, !dbg !13284
  call void @llvm.dbg.declare(metadata i32* %numVerts, metadata !13287, metadata !DIExpression()), !dbg !13288
  %40 = load %struct.CCGFace*, %struct.CCGFace** %f24, align 8, !dbg !13289
  %call27 = call i32 @ccgSubSurf_getFaceNumVerts(%struct.CCGFace* %40), !dbg !13290
  store i32 %call27, i32* %numVerts, align 4, !dbg !13288
  store i32 0, i32* %S, align 4, !dbg !13291
  br label %for.cond28, !dbg !13293

for.cond28:                                       ; preds = %for.inc101, %for.body23
  %41 = load i32, i32* %S, align 4, !dbg !13294
  %42 = load i32, i32* %numVerts, align 4, !dbg !13296
  %cmp29 = icmp slt i32 %41, %42, !dbg !13297
  br i1 %cmp29, label %for.body31, label %for.end103, !dbg !13298

for.body31:                                       ; preds = %for.cond28
  call void @llvm.dbg.declare(metadata [2 x float]** %faceGridData, metadata !13299, metadata !DIExpression()), !dbg !13302
  %43 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %uvss, align 8, !dbg !13303
  %44 = load %struct.CCGFace*, %struct.CCGFace** %f24, align 8, !dbg !13304
  %45 = load i32, i32* %S, align 4, !dbg !13305
  %call32 = call i8* @ccgSubSurf_getFaceGridDataArray(%struct.CCGSubSurf* %43, %struct.CCGFace* %44, i32 %45), !dbg !13306
  %46 = bitcast i8* %call32 to [2 x float]*, !dbg !13306
  store [2 x float]* %46, [2 x float]** %faceGridData, align 8, !dbg !13302
  store i32 0, i32* %y, align 4, !dbg !13307
  br label %for.cond33, !dbg !13309

for.cond33:                                       ; preds = %for.inc98, %for.body31
  %47 = load i32, i32* %y, align 4, !dbg !13310
  %48 = load i32, i32* %gridFaces, align 4, !dbg !13312
  %cmp34 = icmp slt i32 %47, %48, !dbg !13313
  br i1 %cmp34, label %for.body36, label %for.end100, !dbg !13314

for.body36:                                       ; preds = %for.cond33
  store i32 0, i32* %x, align 4, !dbg !13315
  br label %for.cond37, !dbg !13318

for.cond37:                                       ; preds = %for.inc96, %for.body36
  %49 = load i32, i32* %x, align 4, !dbg !13319
  %50 = load i32, i32* %gridFaces, align 4, !dbg !13321
  %cmp38 = icmp slt i32 %49, %50, !dbg !13322
  br i1 %cmp38, label %for.body40, label %for.end97, !dbg !13323

for.body40:                                       ; preds = %for.cond37
  call void @llvm.dbg.declare(metadata float** %a, metadata !13324, metadata !DIExpression()), !dbg !13326
  %51 = load [2 x float]*, [2 x float]** %faceGridData, align 8, !dbg !13327
  %52 = load i32, i32* %y, align 4, !dbg !13328
  %add = add nsw i32 %52, 0, !dbg !13329
  %53 = load i32, i32* %gridSize, align 4, !dbg !13330
  %mul41 = mul nsw i32 %add, %53, !dbg !13331
  %54 = load i32, i32* %x, align 4, !dbg !13332
  %add42 = add nsw i32 %mul41, %54, !dbg !13333
  %add43 = add nsw i32 %add42, 0, !dbg !13334
  %idxprom44 = sext i32 %add43 to i64, !dbg !13327
  %arrayidx45 = getelementptr inbounds [2 x float], [2 x float]* %51, i64 %idxprom44, !dbg !13327
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %arrayidx45, i64 0, i64 0, !dbg !13327
  store float* %arraydecay, float** %a, align 8, !dbg !13326
  call void @llvm.dbg.declare(metadata float** %b, metadata !13335, metadata !DIExpression()), !dbg !13336
  %55 = load [2 x float]*, [2 x float]** %faceGridData, align 8, !dbg !13337
  %56 = load i32, i32* %y, align 4, !dbg !13338
  %add46 = add nsw i32 %56, 0, !dbg !13339
  %57 = load i32, i32* %gridSize, align 4, !dbg !13340
  %mul47 = mul nsw i32 %add46, %57, !dbg !13341
  %58 = load i32, i32* %x, align 4, !dbg !13342
  %add48 = add nsw i32 %mul47, %58, !dbg !13343
  %add49 = add nsw i32 %add48, 1, !dbg !13344
  %idxprom50 = sext i32 %add49 to i64, !dbg !13337
  %arrayidx51 = getelementptr inbounds [2 x float], [2 x float]* %55, i64 %idxprom50, !dbg !13337
  %arraydecay52 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx51, i64 0, i64 0, !dbg !13337
  store float* %arraydecay52, float** %b, align 8, !dbg !13336
  call void @llvm.dbg.declare(metadata float** %c, metadata !13345, metadata !DIExpression()), !dbg !13346
  %59 = load [2 x float]*, [2 x float]** %faceGridData, align 8, !dbg !13347
  %60 = load i32, i32* %y, align 4, !dbg !13348
  %add53 = add nsw i32 %60, 1, !dbg !13349
  %61 = load i32, i32* %gridSize, align 4, !dbg !13350
  %mul54 = mul nsw i32 %add53, %61, !dbg !13351
  %62 = load i32, i32* %x, align 4, !dbg !13352
  %add55 = add nsw i32 %mul54, %62, !dbg !13353
  %add56 = add nsw i32 %add55, 1, !dbg !13354
  %idxprom57 = sext i32 %add56 to i64, !dbg !13347
  %arrayidx58 = getelementptr inbounds [2 x float], [2 x float]* %59, i64 %idxprom57, !dbg !13347
  %arraydecay59 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx58, i64 0, i64 0, !dbg !13347
  store float* %arraydecay59, float** %c, align 8, !dbg !13346
  call void @llvm.dbg.declare(metadata float** %d, metadata !13355, metadata !DIExpression()), !dbg !13356
  %63 = load [2 x float]*, [2 x float]** %faceGridData, align 8, !dbg !13357
  %64 = load i32, i32* %y, align 4, !dbg !13358
  %add60 = add nsw i32 %64, 1, !dbg !13359
  %65 = load i32, i32* %gridSize, align 4, !dbg !13360
  %mul61 = mul nsw i32 %add60, %65, !dbg !13361
  %66 = load i32, i32* %x, align 4, !dbg !13362
  %add62 = add nsw i32 %mul61, %66, !dbg !13363
  %add63 = add nsw i32 %add62, 0, !dbg !13364
  %idxprom64 = sext i32 %add63 to i64, !dbg !13357
  %arrayidx65 = getelementptr inbounds [2 x float], [2 x float]* %63, i64 %idxprom64, !dbg !13357
  %arraydecay66 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx65, i64 0, i64 0, !dbg !13357
  store float* %arraydecay66, float** %d, align 8, !dbg !13356
  %67 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !13365
  %tobool67 = icmp ne %struct.MTFace* %67, null, !dbg !13365
  br i1 %tobool67, label %if.then68, label %if.end80, !dbg !13367

if.then68:                                        ; preds = %for.body40
  %68 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !13368
  %uv = getelementptr inbounds %struct.MTFace, %struct.MTFace* %68, i32 0, i32 0, !dbg !13370
  %arrayidx69 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv, i64 0, i64 0, !dbg !13368
  %arraydecay70 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx69, i64 0, i64 0, !dbg !13368
  %69 = load float*, float** %a, align 8, !dbg !13371
  call void @copy_v2_v2(float* %arraydecay70, float* %69), !dbg !13372
  %70 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !13373
  %uv71 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %70, i32 0, i32 0, !dbg !13374
  %arrayidx72 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv71, i64 0, i64 1, !dbg !13373
  %arraydecay73 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx72, i64 0, i64 0, !dbg !13373
  %71 = load float*, float** %d, align 8, !dbg !13375
  call void @copy_v2_v2(float* %arraydecay73, float* %71), !dbg !13376
  %72 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !13377
  %uv74 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %72, i32 0, i32 0, !dbg !13378
  %arrayidx75 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv74, i64 0, i64 2, !dbg !13377
  %arraydecay76 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx75, i64 0, i64 0, !dbg !13377
  %73 = load float*, float** %c, align 8, !dbg !13379
  call void @copy_v2_v2(float* %arraydecay76, float* %73), !dbg !13380
  %74 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !13381
  %uv77 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %74, i32 0, i32 0, !dbg !13382
  %arrayidx78 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv77, i64 0, i64 3, !dbg !13381
  %arraydecay79 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx78, i64 0, i64 0, !dbg !13381
  %75 = load float*, float** %b, align 8, !dbg !13383
  call void @copy_v2_v2(float* %arraydecay79, float* %75), !dbg !13384
  %76 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !13385
  %incdec.ptr = getelementptr inbounds %struct.MTFace, %struct.MTFace* %76, i32 1, !dbg !13385
  store %struct.MTFace* %incdec.ptr, %struct.MTFace** %tf, align 8, !dbg !13385
  br label %if.end80, !dbg !13386

if.end80:                                         ; preds = %if.then68, %for.body40
  %77 = load %struct.MLoopUV*, %struct.MLoopUV** %mluv, align 8, !dbg !13387
  %tobool81 = icmp ne %struct.MLoopUV* %77, null, !dbg !13387
  br i1 %tobool81, label %if.then82, label %if.end95, !dbg !13389

if.then82:                                        ; preds = %if.end80
  %78 = load %struct.MLoopUV*, %struct.MLoopUV** %mluv, align 8, !dbg !13390
  %arrayidx83 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %78, i64 0, !dbg !13390
  %uv84 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %arrayidx83, i32 0, i32 0, !dbg !13392
  %arraydecay85 = getelementptr inbounds [2 x float], [2 x float]* %uv84, i64 0, i64 0, !dbg !13390
  %79 = load float*, float** %a, align 8, !dbg !13393
  call void @copy_v2_v2(float* %arraydecay85, float* %79), !dbg !13394
  %80 = load %struct.MLoopUV*, %struct.MLoopUV** %mluv, align 8, !dbg !13395
  %arrayidx86 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %80, i64 1, !dbg !13395
  %uv87 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %arrayidx86, i32 0, i32 0, !dbg !13396
  %arraydecay88 = getelementptr inbounds [2 x float], [2 x float]* %uv87, i64 0, i64 0, !dbg !13395
  %81 = load float*, float** %d, align 8, !dbg !13397
  call void @copy_v2_v2(float* %arraydecay88, float* %81), !dbg !13398
  %82 = load %struct.MLoopUV*, %struct.MLoopUV** %mluv, align 8, !dbg !13399
  %arrayidx89 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %82, i64 2, !dbg !13399
  %uv90 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %arrayidx89, i32 0, i32 0, !dbg !13400
  %arraydecay91 = getelementptr inbounds [2 x float], [2 x float]* %uv90, i64 0, i64 0, !dbg !13399
  %83 = load float*, float** %c, align 8, !dbg !13401
  call void @copy_v2_v2(float* %arraydecay91, float* %83), !dbg !13402
  %84 = load %struct.MLoopUV*, %struct.MLoopUV** %mluv, align 8, !dbg !13403
  %arrayidx92 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %84, i64 3, !dbg !13403
  %uv93 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %arrayidx92, i32 0, i32 0, !dbg !13404
  %arraydecay94 = getelementptr inbounds [2 x float], [2 x float]* %uv93, i64 0, i64 0, !dbg !13403
  %85 = load float*, float** %b, align 8, !dbg !13405
  call void @copy_v2_v2(float* %arraydecay94, float* %85), !dbg !13406
  %86 = load %struct.MLoopUV*, %struct.MLoopUV** %mluv, align 8, !dbg !13407
  %add.ptr = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %86, i64 4, !dbg !13407
  store %struct.MLoopUV* %add.ptr, %struct.MLoopUV** %mluv, align 8, !dbg !13407
  br label %if.end95, !dbg !13408

if.end95:                                         ; preds = %if.then82, %if.end80
  br label %for.inc96, !dbg !13409

for.inc96:                                        ; preds = %if.end95
  %87 = load i32, i32* %x, align 4, !dbg !13410
  %inc = add nsw i32 %87, 1, !dbg !13410
  store i32 %inc, i32* %x, align 4, !dbg !13410
  br label %for.cond37, !dbg !13411, !llvm.loop !13412

for.end97:                                        ; preds = %for.cond37
  br label %for.inc98, !dbg !13414

for.inc98:                                        ; preds = %for.end97
  %88 = load i32, i32* %y, align 4, !dbg !13415
  %inc99 = add nsw i32 %88, 1, !dbg !13415
  store i32 %inc99, i32* %y, align 4, !dbg !13415
  br label %for.cond33, !dbg !13416, !llvm.loop !13417

for.end100:                                       ; preds = %for.cond33
  br label %for.inc101, !dbg !13419

for.inc101:                                       ; preds = %for.end100
  %89 = load i32, i32* %S, align 4, !dbg !13420
  %inc102 = add nsw i32 %89, 1, !dbg !13420
  store i32 %inc102, i32* %S, align 4, !dbg !13420
  br label %for.cond28, !dbg !13421, !llvm.loop !13422

for.end103:                                       ; preds = %for.cond28
  br label %for.inc104, !dbg !13424

for.inc104:                                       ; preds = %for.end103
  %90 = load i32, i32* %index, align 4, !dbg !13425
  %inc105 = add nsw i32 %90, 1, !dbg !13425
  store i32 %inc105, i32* %index, align 4, !dbg !13425
  br label %for.cond21, !dbg !13426, !llvm.loop !13427

for.end106:                                       ; preds = %for.cond21
  %91 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %uvss, align 8, !dbg !13429
  call void @ccgSubSurf_free(%struct.CCGSubSurf* %91), !dbg !13430
  %92 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !13431
  %93 = load %struct.CCGFace**, %struct.CCGFace*** %faceMap, align 8, !dbg !13432
  %94 = bitcast %struct.CCGFace** %93 to i8*, !dbg !13432
  call void %92(i8* %94), !dbg !13431
  br label %return, !dbg !13433

return:                                           ; preds = %for.end106, %if.then10, %if.then
  ret void, !dbg !13433
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ccgDM_getVertMapIndex(%struct.CCGSubSurf* %ss, %struct.CCGVert* %v) #0 !dbg !13434 {
entry:
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %v.addr = alloca %struct.CCGVert*, align 8
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !13437, metadata !DIExpression()), !dbg !13438
  store %struct.CCGVert* %v, %struct.CCGVert** %v.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v.addr, metadata !13439, metadata !DIExpression()), !dbg !13440
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !13441
  %1 = load %struct.CCGVert*, %struct.CCGVert** %v.addr, align 8, !dbg !13442
  %call = call i8* @ccgSubSurf_getVertUserData(%struct.CCGSubSurf* %0, %struct.CCGVert* %1), !dbg !13443
  %2 = bitcast i8* %call to i32*, !dbg !13444
  %arrayidx = getelementptr inbounds i32, i32* %2, i64 1, !dbg !13445
  %3 = load i32, i32* %arrayidx, align 4, !dbg !13445
  ret i32 %3, !dbg !13446
}

declare dso_local void @DM_copy_vert_data(%struct.DerivedMesh*, %struct.DerivedMesh*, i32, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @free_ss_weights(%struct.WeightTable* %wtable) #0 !dbg !13447 {
entry:
  %wtable.addr = alloca %struct.WeightTable*, align 8
  %i = alloca i32, align 4
  store %struct.WeightTable* %wtable, %struct.WeightTable** %wtable.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.WeightTable** %wtable.addr, metadata !13450, metadata !DIExpression()), !dbg !13451
  call void @llvm.dbg.declare(metadata i32* %i, metadata !13452, metadata !DIExpression()), !dbg !13453
  store i32 0, i32* %i, align 4, !dbg !13454
  br label %for.cond, !dbg !13456

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !13457
  %1 = load %struct.WeightTable*, %struct.WeightTable** %wtable.addr, align 8, !dbg !13459
  %len = getelementptr inbounds %struct.WeightTable, %struct.WeightTable* %1, i32 0, i32 1, !dbg !13460
  %2 = load i32, i32* %len, align 8, !dbg !13460
  %cmp = icmp slt i32 %0, %2, !dbg !13461
  br i1 %cmp, label %for.body, label %for.end, !dbg !13462

for.body:                                         ; preds = %for.cond
  %3 = load %struct.WeightTable*, %struct.WeightTable** %wtable.addr, align 8, !dbg !13463
  %weight_table = getelementptr inbounds %struct.WeightTable, %struct.WeightTable* %3, i32 0, i32 0, !dbg !13466
  %4 = load %struct.FaceVertWeightEntry*, %struct.FaceVertWeightEntry** %weight_table, align 8, !dbg !13466
  %5 = load i32, i32* %i, align 4, !dbg !13467
  %idxprom = sext i32 %5 to i64, !dbg !13463
  %arrayidx = getelementptr inbounds %struct.FaceVertWeightEntry, %struct.FaceVertWeightEntry* %4, i64 %idxprom, !dbg !13463
  %valid = getelementptr inbounds %struct.FaceVertWeightEntry, %struct.FaceVertWeightEntry* %arrayidx, i32 0, i32 2, !dbg !13468
  %6 = load i32, i32* %valid, align 8, !dbg !13468
  %tobool = icmp ne i32 %6, 0, !dbg !13463
  br i1 %tobool, label %if.then, label %if.end, !dbg !13469

if.then:                                          ; preds = %for.body
  %7 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !13470
  %8 = load %struct.WeightTable*, %struct.WeightTable** %wtable.addr, align 8, !dbg !13471
  %weight_table1 = getelementptr inbounds %struct.WeightTable, %struct.WeightTable* %8, i32 0, i32 0, !dbg !13472
  %9 = load %struct.FaceVertWeightEntry*, %struct.FaceVertWeightEntry** %weight_table1, align 8, !dbg !13472
  %10 = load i32, i32* %i, align 4, !dbg !13473
  %idxprom2 = sext i32 %10 to i64, !dbg !13471
  %arrayidx3 = getelementptr inbounds %struct.FaceVertWeightEntry, %struct.FaceVertWeightEntry* %9, i64 %idxprom2, !dbg !13471
  %w = getelementptr inbounds %struct.FaceVertWeightEntry, %struct.FaceVertWeightEntry* %arrayidx3, i32 0, i32 1, !dbg !13474
  %11 = load float*, float** %w, align 8, !dbg !13474
  %12 = bitcast float* %11 to i8*, !dbg !13471
  call void %7(i8* %12), !dbg !13470
  br label %if.end, !dbg !13470

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !13475

for.inc:                                          ; preds = %if.end
  %13 = load i32, i32* %i, align 4, !dbg !13476
  %inc = add nsw i32 %13, 1, !dbg !13476
  store i32 %inc, i32* %i, align 4, !dbg !13476
  br label %for.cond, !dbg !13477, !llvm.loop !13478

for.end:                                          ; preds = %for.cond
  %14 = load %struct.WeightTable*, %struct.WeightTable** %wtable.addr, align 8, !dbg !13480
  %weight_table4 = getelementptr inbounds %struct.WeightTable, %struct.WeightTable* %14, i32 0, i32 0, !dbg !13482
  %15 = load %struct.FaceVertWeightEntry*, %struct.FaceVertWeightEntry** %weight_table4, align 8, !dbg !13482
  %tobool5 = icmp ne %struct.FaceVertWeightEntry* %15, null, !dbg !13480
  br i1 %tobool5, label %if.then6, label %if.end8, !dbg !13483

if.then6:                                         ; preds = %for.end
  %16 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !13484
  %17 = load %struct.WeightTable*, %struct.WeightTable** %wtable.addr, align 8, !dbg !13485
  %weight_table7 = getelementptr inbounds %struct.WeightTable, %struct.WeightTable* %17, i32 0, i32 0, !dbg !13486
  %18 = load %struct.FaceVertWeightEntry*, %struct.FaceVertWeightEntry** %weight_table7, align 8, !dbg !13486
  %19 = bitcast %struct.FaceVertWeightEntry* %18 to i8*, !dbg !13485
  call void %16(i8* %19), !dbg !13484
  br label %if.end8, !dbg !13484

if.end8:                                          ; preds = %if.then6, %for.end
  ret void, !dbg !13487
}

declare dso_local void @CCG_key_top_level(%struct.CCGKey*, %struct.CCGSubSurf*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @minmax_v3_v3v3(float* %vec, float* %min, float* %max) #0 !dbg !13488 {
entry:
  %vec.addr = alloca float*, align 8
  %min.addr = alloca float*, align 8
  %max.addr = alloca float*, align 8
  store float* %vec, float** %vec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec.addr, metadata !13491, metadata !DIExpression()), !dbg !13492
  store float* %min, float** %min.addr, align 8
  call void @llvm.dbg.declare(metadata float** %min.addr, metadata !13493, metadata !DIExpression()), !dbg !13494
  store float* %max, float** %max.addr, align 8
  call void @llvm.dbg.declare(metadata float** %max.addr, metadata !13495, metadata !DIExpression()), !dbg !13496
  %0 = load float*, float** %min.addr, align 8, !dbg !13497
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !13497
  %1 = load float, float* %arrayidx, align 4, !dbg !13497
  %2 = load float*, float** %vec.addr, align 8, !dbg !13499
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !13499
  %3 = load float, float* %arrayidx1, align 4, !dbg !13499
  %cmp = fcmp ogt float %1, %3, !dbg !13500
  br i1 %cmp, label %if.then, label %if.end, !dbg !13501

if.then:                                          ; preds = %entry
  %4 = load float*, float** %vec.addr, align 8, !dbg !13502
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !13502
  %5 = load float, float* %arrayidx2, align 4, !dbg !13502
  %6 = load float*, float** %min.addr, align 8, !dbg !13503
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 0, !dbg !13503
  store float %5, float* %arrayidx3, align 4, !dbg !13504
  br label %if.end, !dbg !13503

if.end:                                           ; preds = %if.then, %entry
  %7 = load float*, float** %min.addr, align 8, !dbg !13505
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !13505
  %8 = load float, float* %arrayidx4, align 4, !dbg !13505
  %9 = load float*, float** %vec.addr, align 8, !dbg !13507
  %arrayidx5 = getelementptr inbounds float, float* %9, i64 1, !dbg !13507
  %10 = load float, float* %arrayidx5, align 4, !dbg !13507
  %cmp6 = fcmp ogt float %8, %10, !dbg !13508
  br i1 %cmp6, label %if.then7, label %if.end10, !dbg !13509

if.then7:                                         ; preds = %if.end
  %11 = load float*, float** %vec.addr, align 8, !dbg !13510
  %arrayidx8 = getelementptr inbounds float, float* %11, i64 1, !dbg !13510
  %12 = load float, float* %arrayidx8, align 4, !dbg !13510
  %13 = load float*, float** %min.addr, align 8, !dbg !13511
  %arrayidx9 = getelementptr inbounds float, float* %13, i64 1, !dbg !13511
  store float %12, float* %arrayidx9, align 4, !dbg !13512
  br label %if.end10, !dbg !13511

if.end10:                                         ; preds = %if.then7, %if.end
  %14 = load float*, float** %min.addr, align 8, !dbg !13513
  %arrayidx11 = getelementptr inbounds float, float* %14, i64 2, !dbg !13513
  %15 = load float, float* %arrayidx11, align 4, !dbg !13513
  %16 = load float*, float** %vec.addr, align 8, !dbg !13515
  %arrayidx12 = getelementptr inbounds float, float* %16, i64 2, !dbg !13515
  %17 = load float, float* %arrayidx12, align 4, !dbg !13515
  %cmp13 = fcmp ogt float %15, %17, !dbg !13516
  br i1 %cmp13, label %if.then14, label %if.end17, !dbg !13517

if.then14:                                        ; preds = %if.end10
  %18 = load float*, float** %vec.addr, align 8, !dbg !13518
  %arrayidx15 = getelementptr inbounds float, float* %18, i64 2, !dbg !13518
  %19 = load float, float* %arrayidx15, align 4, !dbg !13518
  %20 = load float*, float** %min.addr, align 8, !dbg !13519
  %arrayidx16 = getelementptr inbounds float, float* %20, i64 2, !dbg !13519
  store float %19, float* %arrayidx16, align 4, !dbg !13520
  br label %if.end17, !dbg !13519

if.end17:                                         ; preds = %if.then14, %if.end10
  %21 = load float*, float** %max.addr, align 8, !dbg !13521
  %arrayidx18 = getelementptr inbounds float, float* %21, i64 0, !dbg !13521
  %22 = load float, float* %arrayidx18, align 4, !dbg !13521
  %23 = load float*, float** %vec.addr, align 8, !dbg !13523
  %arrayidx19 = getelementptr inbounds float, float* %23, i64 0, !dbg !13523
  %24 = load float, float* %arrayidx19, align 4, !dbg !13523
  %cmp20 = fcmp olt float %22, %24, !dbg !13524
  br i1 %cmp20, label %if.then21, label %if.end24, !dbg !13525

if.then21:                                        ; preds = %if.end17
  %25 = load float*, float** %vec.addr, align 8, !dbg !13526
  %arrayidx22 = getelementptr inbounds float, float* %25, i64 0, !dbg !13526
  %26 = load float, float* %arrayidx22, align 4, !dbg !13526
  %27 = load float*, float** %max.addr, align 8, !dbg !13527
  %arrayidx23 = getelementptr inbounds float, float* %27, i64 0, !dbg !13527
  store float %26, float* %arrayidx23, align 4, !dbg !13528
  br label %if.end24, !dbg !13527

if.end24:                                         ; preds = %if.then21, %if.end17
  %28 = load float*, float** %max.addr, align 8, !dbg !13529
  %arrayidx25 = getelementptr inbounds float, float* %28, i64 1, !dbg !13529
  %29 = load float, float* %arrayidx25, align 4, !dbg !13529
  %30 = load float*, float** %vec.addr, align 8, !dbg !13531
  %arrayidx26 = getelementptr inbounds float, float* %30, i64 1, !dbg !13531
  %31 = load float, float* %arrayidx26, align 4, !dbg !13531
  %cmp27 = fcmp olt float %29, %31, !dbg !13532
  br i1 %cmp27, label %if.then28, label %if.end31, !dbg !13533

if.then28:                                        ; preds = %if.end24
  %32 = load float*, float** %vec.addr, align 8, !dbg !13534
  %arrayidx29 = getelementptr inbounds float, float* %32, i64 1, !dbg !13534
  %33 = load float, float* %arrayidx29, align 4, !dbg !13534
  %34 = load float*, float** %max.addr, align 8, !dbg !13535
  %arrayidx30 = getelementptr inbounds float, float* %34, i64 1, !dbg !13535
  store float %33, float* %arrayidx30, align 4, !dbg !13536
  br label %if.end31, !dbg !13535

if.end31:                                         ; preds = %if.then28, %if.end24
  %35 = load float*, float** %max.addr, align 8, !dbg !13537
  %arrayidx32 = getelementptr inbounds float, float* %35, i64 2, !dbg !13537
  %36 = load float, float* %arrayidx32, align 4, !dbg !13537
  %37 = load float*, float** %vec.addr, align 8, !dbg !13539
  %arrayidx33 = getelementptr inbounds float, float* %37, i64 2, !dbg !13539
  %38 = load float, float* %arrayidx33, align 4, !dbg !13539
  %cmp34 = fcmp olt float %36, %38, !dbg !13540
  br i1 %cmp34, label %if.then35, label %if.end38, !dbg !13541

if.then35:                                        ; preds = %if.end31
  %39 = load float*, float** %vec.addr, align 8, !dbg !13542
  %arrayidx36 = getelementptr inbounds float, float* %39, i64 2, !dbg !13542
  %40 = load float, float* %arrayidx36, align 4, !dbg !13542
  %41 = load float*, float** %max.addr, align 8, !dbg !13543
  %arrayidx37 = getelementptr inbounds float, float* %41, i64 2, !dbg !13543
  store float %40, float* %arrayidx37, align 4, !dbg !13544
  br label %if.end38, !dbg !13543

if.end38:                                         ; preds = %if.then35, %if.end31
  ret void, !dbg !13545
}

declare dso_local i8* @ccgSubSurf_getEdgeDataArray(%struct.CCGSubSurf*, %struct.CCGEdge*) #2

; Function Attrs: noinline nounwind uwtable
define internal float* @CCG_elem_offset_co(%struct.CCGKey* %key, %struct.CCGElem* %elem, i32 %offset) #0 !dbg !13546 {
entry:
  %key.addr = alloca %struct.CCGKey*, align 8
  %elem.addr = alloca %struct.CCGElem*, align 8
  %offset.addr = alloca i32, align 4
  store %struct.CCGKey* %key, %struct.CCGKey** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGKey** %key.addr, metadata !13551, metadata !DIExpression()), !dbg !13552
  store %struct.CCGElem* %elem, %struct.CCGElem** %elem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %elem.addr, metadata !13553, metadata !DIExpression()), !dbg !13554
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !13555, metadata !DIExpression()), !dbg !13556
  %0 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !13557
  %1 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !13558
  %2 = load %struct.CCGElem*, %struct.CCGElem** %elem.addr, align 8, !dbg !13559
  %3 = load i32, i32* %offset.addr, align 4, !dbg !13560
  %call = call %struct.CCGElem* @CCG_elem_offset(%struct.CCGKey* %1, %struct.CCGElem* %2, i32 %3), !dbg !13561
  %call1 = call float* @CCG_elem_co(%struct.CCGKey* %0, %struct.CCGElem* %call), !dbg !13562
  ret float* %call1, !dbg !13563
}

declare dso_local i8* @ccgSubSurf_getFaceGridDataArray(%struct.CCGSubSurf*, %struct.CCGFace*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal float* @CCG_grid_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %elem, i32 %x, i32 %y) #0 !dbg !13564 {
entry:
  %key.addr = alloca %struct.CCGKey*, align 8
  %elem.addr = alloca %struct.CCGElem*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  store %struct.CCGKey* %key, %struct.CCGKey** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGKey** %key.addr, metadata !13567, metadata !DIExpression()), !dbg !13568
  store %struct.CCGElem* %elem, %struct.CCGElem** %elem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %elem.addr, metadata !13569, metadata !DIExpression()), !dbg !13570
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !13571, metadata !DIExpression()), !dbg !13572
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !13573, metadata !DIExpression()), !dbg !13574
  %0 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !13575
  %1 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !13576
  %2 = load %struct.CCGElem*, %struct.CCGElem** %elem.addr, align 8, !dbg !13577
  %3 = load i32, i32* %x.addr, align 4, !dbg !13578
  %4 = load i32, i32* %y.addr, align 4, !dbg !13579
  %call = call %struct.CCGElem* @CCG_grid_elem(%struct.CCGKey* %1, %struct.CCGElem* %2, i32 %3, i32 %4), !dbg !13580
  %call1 = call float* @CCG_elem_co(%struct.CCGKey* %0, %struct.CCGElem* %call), !dbg !13581
  ret float* %call1, !dbg !13582
}

; Function Attrs: noinline nounwind uwtable
define internal float* @CCG_elem_co(%struct.CCGKey* %UNUSED_key, %struct.CCGElem* %elem) #0 !dbg !13583 {
entry:
  %UNUSED_key.addr = alloca %struct.CCGKey*, align 8
  %elem.addr = alloca %struct.CCGElem*, align 8
  store %struct.CCGKey* %UNUSED_key, %struct.CCGKey** %UNUSED_key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGKey** %UNUSED_key.addr, metadata !13586, metadata !DIExpression()), !dbg !13587
  store %struct.CCGElem* %elem, %struct.CCGElem** %elem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %elem.addr, metadata !13588, metadata !DIExpression()), !dbg !13589
  %0 = load %struct.CCGElem*, %struct.CCGElem** %elem.addr, align 8, !dbg !13590
  %1 = bitcast %struct.CCGElem* %0 to float*, !dbg !13591
  ret float* %1, !dbg !13592
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.CCGElem* @CCG_elem_offset(%struct.CCGKey* %key, %struct.CCGElem* %elem, i32 %offset) #0 !dbg !13593 {
entry:
  %key.addr = alloca %struct.CCGKey*, align 8
  %elem.addr = alloca %struct.CCGElem*, align 8
  %offset.addr = alloca i32, align 4
  store %struct.CCGKey* %key, %struct.CCGKey** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGKey** %key.addr, metadata !13596, metadata !DIExpression()), !dbg !13597
  store %struct.CCGElem* %elem, %struct.CCGElem** %elem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %elem.addr, metadata !13598, metadata !DIExpression()), !dbg !13599
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !13600, metadata !DIExpression()), !dbg !13601
  %0 = load %struct.CCGElem*, %struct.CCGElem** %elem.addr, align 8, !dbg !13602
  %1 = bitcast %struct.CCGElem* %0 to i8*, !dbg !13603
  %2 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !13604
  %elem_size = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %2, i32 0, i32 1, !dbg !13605
  %3 = load i32, i32* %elem_size, align 4, !dbg !13605
  %4 = load i32, i32* %offset.addr, align 4, !dbg !13606
  %mul = mul nsw i32 %3, %4, !dbg !13607
  %idx.ext = sext i32 %mul to i64, !dbg !13608
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %idx.ext, !dbg !13608
  %5 = bitcast i8* %add.ptr to %struct.CCGElem*, !dbg !13609
  ret %struct.CCGElem* %5, !dbg !13610
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.CCGElem* @CCG_grid_elem(%struct.CCGKey* %key, %struct.CCGElem* %elem, i32 %x, i32 %y) #0 !dbg !13611 {
entry:
  %key.addr = alloca %struct.CCGKey*, align 8
  %elem.addr = alloca %struct.CCGElem*, align 8
  %x.addr = alloca i32, align 4
  %y.addr = alloca i32, align 4
  store %struct.CCGKey* %key, %struct.CCGKey** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGKey** %key.addr, metadata !13614, metadata !DIExpression()), !dbg !13615
  store %struct.CCGElem* %elem, %struct.CCGElem** %elem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %elem.addr, metadata !13616, metadata !DIExpression()), !dbg !13617
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !13618, metadata !DIExpression()), !dbg !13619
  store i32 %y, i32* %y.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %y.addr, metadata !13620, metadata !DIExpression()), !dbg !13621
  %0 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !13622
  %1 = load %struct.CCGElem*, %struct.CCGElem** %elem.addr, align 8, !dbg !13623
  %2 = load i32, i32* %y.addr, align 4, !dbg !13624
  %3 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !13625
  %grid_size = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %3, i32 0, i32 2, !dbg !13626
  %4 = load i32, i32* %grid_size, align 4, !dbg !13626
  %mul = mul nsw i32 %2, %4, !dbg !13627
  %5 = load i32, i32* %x.addr, align 4, !dbg !13628
  %add = add nsw i32 %mul, %5, !dbg !13629
  %call = call %struct.CCGElem* @CCG_elem_offset(%struct.CCGKey* %0, %struct.CCGElem* %1, i32 %add), !dbg !13630
  ret %struct.CCGElem* %call, !dbg !13631
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3(float* %r, float* %a) #0 !dbg !13632 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !13633, metadata !DIExpression()), !dbg !13634
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !13635, metadata !DIExpression()), !dbg !13636
  %0 = load float*, float** %a.addr, align 8, !dbg !13637
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !13637
  %1 = load float, float* %arrayidx, align 4, !dbg !13637
  %2 = load float*, float** %r.addr, align 8, !dbg !13638
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !13638
  store float %1, float* %arrayidx1, align 4, !dbg !13639
  %3 = load float*, float** %a.addr, align 8, !dbg !13640
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !13640
  %4 = load float, float* %arrayidx2, align 4, !dbg !13640
  %5 = load float*, float** %r.addr, align 8, !dbg !13641
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !13641
  store float %4, float* %arrayidx3, align 4, !dbg !13642
  %6 = load float*, float** %a.addr, align 8, !dbg !13643
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !13643
  %7 = load float, float* %arrayidx4, align 4, !dbg !13643
  %8 = load float*, float** %r.addr, align 8, !dbg !13644
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !13644
  store float %7, float* %arrayidx5, align 4, !dbg !13645
  ret void, !dbg !13646
}

; Function Attrs: noinline nounwind uwtable
define internal void @normal_float_to_short_v3(i16* %out, float* %in) #0 !dbg !13647 {
entry:
  %out.addr = alloca i16*, align 8
  %in.addr = alloca float*, align 8
  store i16* %out, i16** %out.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %out.addr, metadata !13650, metadata !DIExpression()), !dbg !13651
  store float* %in, float** %in.addr, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr, metadata !13652, metadata !DIExpression()), !dbg !13653
  %0 = load float*, float** %in.addr, align 8, !dbg !13654
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !13654
  %1 = load float, float* %arrayidx, align 4, !dbg !13654
  %mul = fmul float %1, 3.276700e+04, !dbg !13655
  %conv = fptosi float %mul to i16, !dbg !13656
  %2 = load i16*, i16** %out.addr, align 8, !dbg !13657
  %arrayidx1 = getelementptr inbounds i16, i16* %2, i64 0, !dbg !13657
  store i16 %conv, i16* %arrayidx1, align 2, !dbg !13658
  %3 = load float*, float** %in.addr, align 8, !dbg !13659
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !13659
  %4 = load float, float* %arrayidx2, align 4, !dbg !13659
  %mul3 = fmul float %4, 3.276700e+04, !dbg !13660
  %conv4 = fptosi float %mul3 to i16, !dbg !13661
  %5 = load i16*, i16** %out.addr, align 8, !dbg !13662
  %arrayidx5 = getelementptr inbounds i16, i16* %5, i64 1, !dbg !13662
  store i16 %conv4, i16* %arrayidx5, align 2, !dbg !13663
  %6 = load float*, float** %in.addr, align 8, !dbg !13664
  %arrayidx6 = getelementptr inbounds float, float* %6, i64 2, !dbg !13664
  %7 = load float, float* %arrayidx6, align 4, !dbg !13664
  %mul7 = fmul float %7, 3.276700e+04, !dbg !13665
  %conv8 = fptosi float %mul7 to i16, !dbg !13666
  %8 = load i16*, i16** %out.addr, align 8, !dbg !13667
  %arrayidx9 = getelementptr inbounds i16, i16* %8, i64 2, !dbg !13667
  store i16 %conv8, i16* %arrayidx9, align 2, !dbg !13668
  ret void, !dbg !13669
}

; Function Attrs: noinline nounwind uwtable
define internal float* @CCG_elem_no(%struct.CCGKey* %key, %struct.CCGElem* %elem) #0 !dbg !13670 {
entry:
  %key.addr = alloca %struct.CCGKey*, align 8
  %elem.addr = alloca %struct.CCGElem*, align 8
  store %struct.CCGKey* %key, %struct.CCGKey** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGKey** %key.addr, metadata !13671, metadata !DIExpression()), !dbg !13672
  store %struct.CCGElem* %elem, %struct.CCGElem** %elem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %elem.addr, metadata !13673, metadata !DIExpression()), !dbg !13674
  %0 = load %struct.CCGElem*, %struct.CCGElem** %elem.addr, align 8, !dbg !13675
  %1 = bitcast %struct.CCGElem* %0 to i8*, !dbg !13676
  %2 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !13677
  %normal_offset = getelementptr inbounds %struct.CCGKey, %struct.CCGKey* %2, i32 0, i32 5, !dbg !13678
  %3 = load i32, i32* %normal_offset, align 4, !dbg !13678
  %idx.ext = sext i32 %3 to i64, !dbg !13679
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %idx.ext, !dbg !13679
  %4 = bitcast i8* %add.ptr to float*, !dbg !13680
  ret float* %4, !dbg !13681
}

declare dso_local i8* @ccgSubSurf_getFaceGridEdgeData(%struct.CCGSubSurf*, %struct.CCGFace*, i32, i32) #2

declare dso_local i8* @ccgSubSurf_getFaceGridData(%struct.CCGSubSurf*, %struct.CCGFace*, i32, i32, i32) #2

declare dso_local i32 @ccgSubSurf_getEdgeNumFaces(%struct.CCGEdge*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @getEdgeIndex(%struct.CCGSubSurf* %ss, %struct.CCGEdge* %e, i32 %x, i32 %edgeSize) #0 !dbg !13682 {
entry:
  %retval = alloca i32, align 4
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %e.addr = alloca %struct.CCGEdge*, align 8
  %x.addr = alloca i32, align 4
  %edgeSize.addr = alloca i32, align 4
  %v0 = alloca %struct.CCGVert*, align 8
  %v1 = alloca %struct.CCGVert*, align 8
  %v0idx = alloca i32, align 4
  %v1idx = alloca i32, align 4
  %edgeBase = alloca i32, align 4
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !13685, metadata !DIExpression()), !dbg !13686
  store %struct.CCGEdge* %e, %struct.CCGEdge** %e.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e.addr, metadata !13687, metadata !DIExpression()), !dbg !13688
  store i32 %x, i32* %x.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %x.addr, metadata !13689, metadata !DIExpression()), !dbg !13690
  store i32 %edgeSize, i32* %edgeSize.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %edgeSize.addr, metadata !13691, metadata !DIExpression()), !dbg !13692
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v0, metadata !13693, metadata !DIExpression()), !dbg !13694
  %0 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !13695
  %call = call %struct.CCGVert* @ccgSubSurf_getEdgeVert0(%struct.CCGEdge* %0), !dbg !13696
  store %struct.CCGVert* %call, %struct.CCGVert** %v0, align 8, !dbg !13694
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %v1, metadata !13697, metadata !DIExpression()), !dbg !13698
  %1 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !13699
  %call1 = call %struct.CCGVert* @ccgSubSurf_getEdgeVert1(%struct.CCGEdge* %1), !dbg !13700
  store %struct.CCGVert* %call1, %struct.CCGVert** %v1, align 8, !dbg !13698
  call void @llvm.dbg.declare(metadata i32* %v0idx, metadata !13701, metadata !DIExpression()), !dbg !13702
  %2 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !13703
  %3 = load %struct.CCGVert*, %struct.CCGVert** %v0, align 8, !dbg !13704
  %call2 = call i8* @ccgSubSurf_getVertUserData(%struct.CCGSubSurf* %2, %struct.CCGVert* %3), !dbg !13705
  %4 = bitcast i8* %call2 to i32*, !dbg !13706
  %5 = load i32, i32* %4, align 4, !dbg !13707
  store i32 %5, i32* %v0idx, align 4, !dbg !13702
  call void @llvm.dbg.declare(metadata i32* %v1idx, metadata !13708, metadata !DIExpression()), !dbg !13709
  %6 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !13710
  %7 = load %struct.CCGVert*, %struct.CCGVert** %v1, align 8, !dbg !13711
  %call3 = call i8* @ccgSubSurf_getVertUserData(%struct.CCGSubSurf* %6, %struct.CCGVert* %7), !dbg !13712
  %8 = bitcast i8* %call3 to i32*, !dbg !13713
  %9 = load i32, i32* %8, align 4, !dbg !13714
  store i32 %9, i32* %v1idx, align 4, !dbg !13709
  call void @llvm.dbg.declare(metadata i32* %edgeBase, metadata !13715, metadata !DIExpression()), !dbg !13716
  %10 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !13717
  %11 = load %struct.CCGEdge*, %struct.CCGEdge** %e.addr, align 8, !dbg !13718
  %call4 = call i8* @ccgSubSurf_getEdgeUserData(%struct.CCGSubSurf* %10, %struct.CCGEdge* %11), !dbg !13719
  %12 = bitcast i8* %call4 to i32*, !dbg !13720
  %13 = load i32, i32* %12, align 4, !dbg !13721
  store i32 %13, i32* %edgeBase, align 4, !dbg !13716
  %14 = load i32, i32* %x.addr, align 4, !dbg !13722
  %cmp = icmp eq i32 %14, 0, !dbg !13724
  br i1 %cmp, label %if.then, label %if.else, !dbg !13725

if.then:                                          ; preds = %entry
  %15 = load i32, i32* %v0idx, align 4, !dbg !13726
  store i32 %15, i32* %retval, align 4, !dbg !13728
  br label %return, !dbg !13728

if.else:                                          ; preds = %entry
  %16 = load i32, i32* %x.addr, align 4, !dbg !13729
  %17 = load i32, i32* %edgeSize.addr, align 4, !dbg !13731
  %sub = sub nsw i32 %17, 1, !dbg !13732
  %cmp5 = icmp eq i32 %16, %sub, !dbg !13733
  br i1 %cmp5, label %if.then6, label %if.else7, !dbg !13734

if.then6:                                         ; preds = %if.else
  %18 = load i32, i32* %v1idx, align 4, !dbg !13735
  store i32 %18, i32* %retval, align 4, !dbg !13737
  br label %return, !dbg !13737

if.else7:                                         ; preds = %if.else
  %19 = load i32, i32* %edgeBase, align 4, !dbg !13738
  %20 = load i32, i32* %x.addr, align 4, !dbg !13740
  %add = add nsw i32 %19, %20, !dbg !13741
  %sub8 = sub nsw i32 %add, 1, !dbg !13742
  store i32 %sub8, i32* %retval, align 4, !dbg !13743
  br label %return, !dbg !13743

return:                                           ; preds = %if.else7, %if.then6, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !13744
  ret i32 %21, !dbg !13744
}

; Function Attrs: noinline nounwind uwtable
define internal void @normal_short_to_float_v3(float* %out, i16* %in) #0 !dbg !13745 {
entry:
  %out.addr = alloca float*, align 8
  %in.addr = alloca i16*, align 8
  store float* %out, float** %out.addr, align 8
  call void @llvm.dbg.declare(metadata float** %out.addr, metadata !13748, metadata !DIExpression()), !dbg !13749
  store i16* %in, i16** %in.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %in.addr, metadata !13750, metadata !DIExpression()), !dbg !13751
  %0 = load i16*, i16** %in.addr, align 8, !dbg !13752
  %arrayidx = getelementptr inbounds i16, i16* %0, i64 0, !dbg !13752
  %1 = load i16, i16* %arrayidx, align 2, !dbg !13752
  %conv = sext i16 %1 to i32, !dbg !13752
  %conv1 = sitofp i32 %conv to float, !dbg !13752
  %mul = fmul float %conv1, 0x3F00002000000000, !dbg !13753
  %2 = load float*, float** %out.addr, align 8, !dbg !13754
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 0, !dbg !13754
  store float %mul, float* %arrayidx2, align 4, !dbg !13755
  %3 = load i16*, i16** %in.addr, align 8, !dbg !13756
  %arrayidx3 = getelementptr inbounds i16, i16* %3, i64 1, !dbg !13756
  %4 = load i16, i16* %arrayidx3, align 2, !dbg !13756
  %conv4 = sext i16 %4 to i32, !dbg !13756
  %conv5 = sitofp i32 %conv4 to float, !dbg !13756
  %mul6 = fmul float %conv5, 0x3F00002000000000, !dbg !13757
  %5 = load float*, float** %out.addr, align 8, !dbg !13758
  %arrayidx7 = getelementptr inbounds float, float* %5, i64 1, !dbg !13758
  store float %mul6, float* %arrayidx7, align 4, !dbg !13759
  %6 = load i16*, i16** %in.addr, align 8, !dbg !13760
  %arrayidx8 = getelementptr inbounds i16, i16* %6, i64 2, !dbg !13760
  %7 = load i16, i16* %arrayidx8, align 2, !dbg !13760
  %conv9 = sext i16 %7 to i32, !dbg !13760
  %conv10 = sitofp i32 %conv9 to float, !dbg !13760
  %mul11 = fmul float %conv10, 0x3F00002000000000, !dbg !13761
  %8 = load float*, float** %out.addr, align 8, !dbg !13762
  %arrayidx12 = getelementptr inbounds float, float* %8, i64 2, !dbg !13762
  store float %mul11, float* %arrayidx12, align 4, !dbg !13763
  ret void, !dbg !13764
}

; Function Attrs: noinline nounwind uwtable
define internal void @ccgDM_to_MVert(%struct.MVert* %mv, %struct.CCGKey* %key, %struct.CCGElem* %elem) #0 !dbg !13765 {
entry:
  %mv.addr = alloca %struct.MVert*, align 8
  %key.addr = alloca %struct.CCGKey*, align 8
  %elem.addr = alloca %struct.CCGElem*, align 8
  store %struct.MVert* %mv, %struct.MVert** %mv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MVert** %mv.addr, metadata !13768, metadata !DIExpression()), !dbg !13769
  store %struct.CCGKey* %key, %struct.CCGKey** %key.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGKey** %key.addr, metadata !13770, metadata !DIExpression()), !dbg !13771
  store %struct.CCGElem* %elem, %struct.CCGElem** %elem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %elem.addr, metadata !13772, metadata !DIExpression()), !dbg !13773
  %0 = load %struct.MVert*, %struct.MVert** %mv.addr, align 8, !dbg !13774
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %0, i32 0, i32 0, !dbg !13775
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !13774
  %1 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !13776
  %2 = load %struct.CCGElem*, %struct.CCGElem** %elem.addr, align 8, !dbg !13777
  %call = call float* @CCG_elem_co(%struct.CCGKey* %1, %struct.CCGElem* %2), !dbg !13778
  call void @copy_v3_v3(float* %arraydecay, float* %call), !dbg !13779
  %3 = load %struct.MVert*, %struct.MVert** %mv.addr, align 8, !dbg !13780
  %no = getelementptr inbounds %struct.MVert, %struct.MVert* %3, i32 0, i32 1, !dbg !13781
  %arraydecay1 = getelementptr inbounds [3 x i16], [3 x i16]* %no, i64 0, i64 0, !dbg !13780
  %4 = load %struct.CCGKey*, %struct.CCGKey** %key.addr, align 8, !dbg !13782
  %5 = load %struct.CCGElem*, %struct.CCGElem** %elem.addr, align 8, !dbg !13783
  %call2 = call float* @CCG_elem_no(%struct.CCGKey* %4, %struct.CCGElem* %5), !dbg !13784
  call void @normal_float_to_short_v3(i16* %arraydecay1, float* %call2), !dbg !13785
  %6 = load %struct.MVert*, %struct.MVert** %mv.addr, align 8, !dbg !13786
  %bweight = getelementptr inbounds %struct.MVert, %struct.MVert* %6, i32 0, i32 3, !dbg !13787
  store i8 0, i8* %bweight, align 1, !dbg !13788
  %7 = load %struct.MVert*, %struct.MVert** %mv.addr, align 8, !dbg !13789
  %flag = getelementptr inbounds %struct.MVert, %struct.MVert* %7, i32 0, i32 2, !dbg !13790
  store i8 0, i8* %flag, align 2, !dbg !13791
  ret void, !dbg !13792
}

; Function Attrs: noinline nounwind uwtable
define internal void @ccgDM_to_MEdge(%struct.MEdge* %med, i32 %v1, i32 %v2, i16 signext %flag) #0 !dbg !13793 {
entry:
  %med.addr = alloca %struct.MEdge*, align 8
  %v1.addr = alloca i32, align 4
  %v2.addr = alloca i32, align 4
  %flag.addr = alloca i16, align 2
  store %struct.MEdge* %med, %struct.MEdge** %med.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MEdge** %med.addr, metadata !13796, metadata !DIExpression()), !dbg !13797
  store i32 %v1, i32* %v1.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %v1.addr, metadata !13798, metadata !DIExpression()), !dbg !13799
  store i32 %v2, i32* %v2.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %v2.addr, metadata !13800, metadata !DIExpression()), !dbg !13801
  store i16 %flag, i16* %flag.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %flag.addr, metadata !13802, metadata !DIExpression()), !dbg !13803
  %0 = load i32, i32* %v1.addr, align 4, !dbg !13804
  %1 = load %struct.MEdge*, %struct.MEdge** %med.addr, align 8, !dbg !13805
  %v11 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %1, i32 0, i32 0, !dbg !13806
  store i32 %0, i32* %v11, align 4, !dbg !13807
  %2 = load i32, i32* %v2.addr, align 4, !dbg !13808
  %3 = load %struct.MEdge*, %struct.MEdge** %med.addr, align 8, !dbg !13809
  %v22 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %3, i32 0, i32 1, !dbg !13810
  store i32 %2, i32* %v22, align 4, !dbg !13811
  %4 = load %struct.MEdge*, %struct.MEdge** %med.addr, align 8, !dbg !13812
  %bweight = getelementptr inbounds %struct.MEdge, %struct.MEdge* %4, i32 0, i32 3, !dbg !13813
  store i8 0, i8* %bweight, align 1, !dbg !13814
  %5 = load %struct.MEdge*, %struct.MEdge** %med.addr, align 8, !dbg !13815
  %crease = getelementptr inbounds %struct.MEdge, %struct.MEdge* %5, i32 0, i32 2, !dbg !13816
  store i8 0, i8* %crease, align 4, !dbg !13817
  %6 = load i16, i16* %flag.addr, align 2, !dbg !13818
  %7 = load %struct.MEdge*, %struct.MEdge** %med.addr, align 8, !dbg !13819
  %flag3 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %7, i32 0, i32 4, !dbg !13820
  store i16 %6, i16* %flag3, align 2, !dbg !13821
  ret void, !dbg !13822
}

declare dso_local void @BLI_rw_mutex_lock(i32*, i32) #2

declare dso_local %struct.EdgeHash* @BLI_edgehash_new_ex(i8*, i32) #2

declare dso_local void @BLI_edgehash_insert(%struct.EdgeHash*, i32, i32, i8*) #2

declare dso_local void @BLI_rw_mutex_unlock(i32*) #2

declare dso_local i8* @BLI_edgehash_lookup(%struct.EdgeHash*, i32, i32) #2

declare dso_local i8* @DM_get_vert_data(%struct.DerivedMesh*, i32, i32) #2

declare dso_local i8* @DM_get_edge_data(%struct.DerivedMesh*, i32, i32) #2

declare dso_local i8* @DM_get_tessface_data(%struct.DerivedMesh*, i32, i32) #2

declare dso_local i8* @DM_get_poly_data(%struct.DerivedMesh*, i32, i32) #2

declare dso_local void @DM_add_vert_layer(%struct.DerivedMesh*, i32, i32, i8*) #2

declare dso_local void @DM_add_edge_layer(%struct.DerivedMesh*, i32, i32, i8*) #2

declare dso_local void @DM_add_tessface_layer(%struct.DerivedMesh*, i32, i32, i8*) #2

declare dso_local void @range_vn_i(i32*, i32, i32) #2

declare dso_local void @DM_add_poly_layer(%struct.DerivedMesh*, i32, i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @ccgDM_getFaceMapIndex(%struct.CCGSubSurf* %ss, %struct.CCGFace* %f) #0 !dbg !13823 {
entry:
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %f.addr = alloca %struct.CCGFace*, align 8
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !13826, metadata !DIExpression()), !dbg !13827
  store %struct.CCGFace* %f, %struct.CCGFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f.addr, metadata !13828, metadata !DIExpression()), !dbg !13829
  %0 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !13830
  %1 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !13831
  %call = call i8* @ccgSubSurf_getFaceUserData(%struct.CCGSubSurf* %0, %struct.CCGFace* %1), !dbg !13832
  %2 = bitcast i8* %call to i32*, !dbg !13833
  %arrayidx = getelementptr inbounds i32, i32* %2, i64 1, !dbg !13834
  %3 = load i32, i32* %arrayidx, align 4, !dbg !13834
  ret i32 %3, !dbg !13835
}

; Function Attrs: noinline nounwind uwtable
define internal void @ccgdm_create_grids(%struct.DerivedMesh* %dm) #0 !dbg !13836 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %ccgdm = alloca %struct.CCGDerivedMesh*, align 8
  %ss = alloca %struct.CCGSubSurf*, align 8
  %gridData = alloca %struct.CCGElem**, align 8
  %gridAdjacency = alloca %struct.DMGridAdjacency*, align 8
  %adj = alloca %struct.DMGridAdjacency*, align 8
  %gridFlagMats = alloca %struct.DMFlagMat*, align 8
  %gridFaces = alloca %struct.CCGFace**, align 8
  %gridOffset = alloca i32*, align 8
  %index = alloca i32, align 4
  %numFaces = alloca i32, align 4
  %numGrids = alloca i32, align 4
  %S = alloca i32, align 4
  %gIndex = alloca i32, align 4
  %f = alloca %struct.CCGFace*, align 8
  %numVerts = alloca i32, align 4
  %f28 = alloca %struct.CCGFace*, align 8
  %numVerts33 = alloca i32, align 4
  %prevS = alloca i32, align 4
  %nextS = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !13837, metadata !DIExpression()), !dbg !13838
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm, metadata !13839, metadata !DIExpression()), !dbg !13840
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !13841
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CCGDerivedMesh*, !dbg !13842
  store %struct.CCGDerivedMesh* %1, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !13840
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss, metadata !13843, metadata !DIExpression()), !dbg !13844
  %2 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !13845
  %ss1 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %2, i32 0, i32 1, !dbg !13846
  %3 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss1, align 8, !dbg !13846
  store %struct.CCGSubSurf* %3, %struct.CCGSubSurf** %ss, align 8, !dbg !13844
  call void @llvm.dbg.declare(metadata %struct.CCGElem*** %gridData, metadata !13847, metadata !DIExpression()), !dbg !13848
  call void @llvm.dbg.declare(metadata %struct.DMGridAdjacency** %gridAdjacency, metadata !13849, metadata !DIExpression()), !dbg !13850
  call void @llvm.dbg.declare(metadata %struct.DMGridAdjacency** %adj, metadata !13851, metadata !DIExpression()), !dbg !13852
  call void @llvm.dbg.declare(metadata %struct.DMFlagMat** %gridFlagMats, metadata !13853, metadata !DIExpression()), !dbg !13854
  call void @llvm.dbg.declare(metadata %struct.CCGFace*** %gridFaces, metadata !13855, metadata !DIExpression()), !dbg !13856
  call void @llvm.dbg.declare(metadata i32** %gridOffset, metadata !13857, metadata !DIExpression()), !dbg !13858
  call void @llvm.dbg.declare(metadata i32* %index, metadata !13859, metadata !DIExpression()), !dbg !13860
  call void @llvm.dbg.declare(metadata i32* %numFaces, metadata !13861, metadata !DIExpression()), !dbg !13862
  call void @llvm.dbg.declare(metadata i32* %numGrids, metadata !13863, metadata !DIExpression()), !dbg !13864
  call void @llvm.dbg.declare(metadata i32* %S, metadata !13865, metadata !DIExpression()), !dbg !13866
  call void @llvm.dbg.declare(metadata i32* %gIndex, metadata !13867, metadata !DIExpression()), !dbg !13868
  %4 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !13869
  %gridData2 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %4, i32 0, i32 14, !dbg !13871
  %5 = load %struct.CCGElem**, %struct.CCGElem*** %gridData2, align 8, !dbg !13871
  %tobool = icmp ne %struct.CCGElem** %5, null, !dbg !13869
  br i1 %tobool, label %if.then, label %if.end, !dbg !13872

if.then:                                          ; preds = %entry
  br label %return, !dbg !13873

if.end:                                           ; preds = %entry
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !13874
  %call = call i32 @ccgDM_getNumGrids(%struct.DerivedMesh* %6), !dbg !13875
  store i32 %call, i32* %numGrids, align 4, !dbg !13876
  %7 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !13877
  %call3 = call i32 @ccgSubSurf_getNumFaces(%struct.CCGSubSurf* %7), !dbg !13878
  store i32 %call3, i32* %numFaces, align 4, !dbg !13879
  %8 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !13880
  %9 = load i32, i32* %numFaces, align 4, !dbg !13881
  %conv = sext i32 %9 to i64, !dbg !13881
  %mul = mul i64 4, %conv, !dbg !13882
  %call4 = call i8* %8(i64 %mul, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.8, i64 0, i64 0)), !dbg !13880
  %10 = bitcast i8* %call4 to i32*, !dbg !13880
  store i32* %10, i32** %gridOffset, align 8, !dbg !13883
  store i32 0, i32* %gIndex, align 4, !dbg !13884
  store i32 0, i32* %index, align 4, !dbg !13886
  br label %for.cond, !dbg !13887

for.cond:                                         ; preds = %for.inc, %if.end
  %11 = load i32, i32* %index, align 4, !dbg !13888
  %12 = load i32, i32* %numFaces, align 4, !dbg !13890
  %cmp = icmp slt i32 %11, %12, !dbg !13891
  br i1 %cmp, label %for.body, label %for.end, !dbg !13892

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f, metadata !13893, metadata !DIExpression()), !dbg !13895
  %13 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !13896
  %faceMap = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %13, i32 0, i32 7, !dbg !13897
  %14 = load %struct.anon.1*, %struct.anon.1** %faceMap, align 8, !dbg !13897
  %15 = load i32, i32* %index, align 4, !dbg !13898
  %idxprom = sext i32 %15 to i64, !dbg !13896
  %arrayidx = getelementptr inbounds %struct.anon.1, %struct.anon.1* %14, i64 %idxprom, !dbg !13896
  %face = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx, i32 0, i32 3, !dbg !13899
  %16 = load %struct.CCGFace*, %struct.CCGFace** %face, align 8, !dbg !13899
  store %struct.CCGFace* %16, %struct.CCGFace** %f, align 8, !dbg !13895
  call void @llvm.dbg.declare(metadata i32* %numVerts, metadata !13900, metadata !DIExpression()), !dbg !13901
  %17 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !13902
  %call6 = call i32 @ccgSubSurf_getFaceNumVerts(%struct.CCGFace* %17), !dbg !13903
  store i32 %call6, i32* %numVerts, align 4, !dbg !13901
  %18 = load i32, i32* %gIndex, align 4, !dbg !13904
  %19 = load i32*, i32** %gridOffset, align 8, !dbg !13905
  %20 = load i32, i32* %index, align 4, !dbg !13906
  %idxprom7 = sext i32 %20 to i64, !dbg !13905
  %arrayidx8 = getelementptr inbounds i32, i32* %19, i64 %idxprom7, !dbg !13905
  store i32 %18, i32* %arrayidx8, align 4, !dbg !13907
  %21 = load i32, i32* %numVerts, align 4, !dbg !13908
  %22 = load i32, i32* %gIndex, align 4, !dbg !13909
  %add = add nsw i32 %22, %21, !dbg !13909
  store i32 %add, i32* %gIndex, align 4, !dbg !13909
  br label %for.inc, !dbg !13910

for.inc:                                          ; preds = %for.body
  %23 = load i32, i32* %index, align 4, !dbg !13911
  %inc = add nsw i32 %23, 1, !dbg !13911
  store i32 %inc, i32* %index, align 4, !dbg !13911
  br label %for.cond, !dbg !13912, !llvm.loop !13913

for.end:                                          ; preds = %for.cond
  %24 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !13915
  %25 = load i32, i32* %numGrids, align 4, !dbg !13916
  %conv9 = sext i32 %25 to i64, !dbg !13916
  %mul10 = mul i64 8, %conv9, !dbg !13917
  %call11 = call i8* %24(i64 %mul10, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i64 0, i64 0)), !dbg !13915
  %26 = bitcast i8* %call11 to %struct.CCGElem**, !dbg !13915
  store %struct.CCGElem** %26, %struct.CCGElem*** %gridData, align 8, !dbg !13918
  %27 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !13919
  %28 = load i32, i32* %numGrids, align 4, !dbg !13920
  %conv12 = sext i32 %28 to i64, !dbg !13920
  %mul13 = mul i64 32, %conv12, !dbg !13921
  %call14 = call i8* %27(i64 %mul13, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.10, i64 0, i64 0)), !dbg !13919
  %29 = bitcast i8* %call14 to %struct.DMGridAdjacency*, !dbg !13919
  store %struct.DMGridAdjacency* %29, %struct.DMGridAdjacency** %gridAdjacency, align 8, !dbg !13922
  %30 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !13923
  %31 = load i32, i32* %numGrids, align 4, !dbg !13924
  %conv15 = sext i32 %31 to i64, !dbg !13924
  %mul16 = mul i64 8, %conv15, !dbg !13925
  %call17 = call i8* %30(i64 %mul16, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i64 0, i64 0)), !dbg !13923
  %32 = bitcast i8* %call17 to %struct.CCGFace**, !dbg !13923
  store %struct.CCGFace** %32, %struct.CCGFace*** %gridFaces, align 8, !dbg !13926
  %33 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !13927
  %34 = load i32, i32* %numGrids, align 4, !dbg !13928
  %conv18 = sext i32 %34 to i64, !dbg !13928
  %mul19 = mul i64 4, %conv18, !dbg !13929
  %call20 = call i8* %33(i64 %mul19, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.12, i64 0, i64 0)), !dbg !13927
  %35 = bitcast i8* %call20 to %struct.DMFlagMat*, !dbg !13927
  store %struct.DMFlagMat* %35, %struct.DMFlagMat** %gridFlagMats, align 8, !dbg !13930
  %36 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !13931
  %37 = load i32, i32* %numGrids, align 4, !dbg !13932
  %conv21 = sext i32 %37 to i64, !dbg !13932
  %mul22 = mul i64 8, %conv21, !dbg !13933
  %call23 = call i8* %36(i64 %mul22, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.13, i64 0, i64 0)), !dbg !13931
  %38 = bitcast i8* %call23 to i32**, !dbg !13931
  %39 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !13934
  %gridHidden = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %39, i32 0, i32 19, !dbg !13935
  store i32** %38, i32*** %gridHidden, align 8, !dbg !13936
  store i32 0, i32* %gIndex, align 4, !dbg !13937
  store i32 0, i32* %index, align 4, !dbg !13939
  br label %for.cond24, !dbg !13940

for.cond24:                                       ; preds = %for.inc79, %for.end
  %40 = load i32, i32* %index, align 4, !dbg !13941
  %41 = load i32, i32* %numFaces, align 4, !dbg !13943
  %cmp25 = icmp slt i32 %40, %41, !dbg !13944
  br i1 %cmp25, label %for.body27, label %for.end81, !dbg !13945

for.body27:                                       ; preds = %for.cond24
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f28, metadata !13946, metadata !DIExpression()), !dbg !13948
  %42 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !13949
  %faceMap29 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %42, i32 0, i32 7, !dbg !13950
  %43 = load %struct.anon.1*, %struct.anon.1** %faceMap29, align 8, !dbg !13950
  %44 = load i32, i32* %index, align 4, !dbg !13951
  %idxprom30 = sext i32 %44 to i64, !dbg !13949
  %arrayidx31 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %43, i64 %idxprom30, !dbg !13949
  %face32 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx31, i32 0, i32 3, !dbg !13952
  %45 = load %struct.CCGFace*, %struct.CCGFace** %face32, align 8, !dbg !13952
  store %struct.CCGFace* %45, %struct.CCGFace** %f28, align 8, !dbg !13948
  call void @llvm.dbg.declare(metadata i32* %numVerts33, metadata !13953, metadata !DIExpression()), !dbg !13954
  %46 = load %struct.CCGFace*, %struct.CCGFace** %f28, align 8, !dbg !13955
  %call34 = call i32 @ccgSubSurf_getFaceNumVerts(%struct.CCGFace* %46), !dbg !13956
  store i32 %call34, i32* %numVerts33, align 4, !dbg !13954
  store i32 0, i32* %S, align 4, !dbg !13957
  br label %for.cond35, !dbg !13959

for.cond35:                                       ; preds = %for.inc75, %for.body27
  %47 = load i32, i32* %S, align 4, !dbg !13960
  %48 = load i32, i32* %numVerts33, align 4, !dbg !13962
  %cmp36 = icmp slt i32 %47, %48, !dbg !13963
  br i1 %cmp36, label %for.body38, label %for.end78, !dbg !13964

for.body38:                                       ; preds = %for.cond35
  call void @llvm.dbg.declare(metadata i32* %prevS, metadata !13965, metadata !DIExpression()), !dbg !13967
  %49 = load i32, i32* %S, align 4, !dbg !13968
  %sub = sub nsw i32 %49, 1, !dbg !13969
  %50 = load i32, i32* %numVerts33, align 4, !dbg !13970
  %add39 = add nsw i32 %sub, %50, !dbg !13971
  %51 = load i32, i32* %numVerts33, align 4, !dbg !13972
  %rem = srem i32 %add39, %51, !dbg !13973
  store i32 %rem, i32* %prevS, align 4, !dbg !13967
  call void @llvm.dbg.declare(metadata i32* %nextS, metadata !13974, metadata !DIExpression()), !dbg !13975
  %52 = load i32, i32* %S, align 4, !dbg !13976
  %add40 = add nsw i32 %52, 1, !dbg !13977
  %53 = load i32, i32* %numVerts33, align 4, !dbg !13978
  %add41 = add nsw i32 %add40, %53, !dbg !13979
  %54 = load i32, i32* %numVerts33, align 4, !dbg !13980
  %rem42 = srem i32 %add41, %54, !dbg !13981
  store i32 %rem42, i32* %nextS, align 4, !dbg !13975
  %55 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !13982
  %56 = load %struct.CCGFace*, %struct.CCGFace** %f28, align 8, !dbg !13983
  %57 = load i32, i32* %S, align 4, !dbg !13984
  %call43 = call i8* @ccgSubSurf_getFaceGridDataArray(%struct.CCGSubSurf* %55, %struct.CCGFace* %56, i32 %57), !dbg !13985
  %58 = bitcast i8* %call43 to %struct.CCGElem*, !dbg !13985
  %59 = load %struct.CCGElem**, %struct.CCGElem*** %gridData, align 8, !dbg !13986
  %60 = load i32, i32* %gIndex, align 4, !dbg !13987
  %idxprom44 = sext i32 %60 to i64, !dbg !13986
  %arrayidx45 = getelementptr inbounds %struct.CCGElem*, %struct.CCGElem** %59, i64 %idxprom44, !dbg !13986
  store %struct.CCGElem* %58, %struct.CCGElem** %arrayidx45, align 8, !dbg !13988
  %61 = load %struct.CCGFace*, %struct.CCGFace** %f28, align 8, !dbg !13989
  %62 = load %struct.CCGFace**, %struct.CCGFace*** %gridFaces, align 8, !dbg !13990
  %63 = load i32, i32* %gIndex, align 4, !dbg !13991
  %idxprom46 = sext i32 %63 to i64, !dbg !13990
  %arrayidx47 = getelementptr inbounds %struct.CCGFace*, %struct.CCGFace** %62, i64 %idxprom46, !dbg !13990
  store %struct.CCGFace* %61, %struct.CCGFace** %arrayidx47, align 8, !dbg !13992
  %64 = load %struct.DMFlagMat*, %struct.DMFlagMat** %gridFlagMats, align 8, !dbg !13993
  %65 = load i32, i32* %gIndex, align 4, !dbg !13994
  %idxprom48 = sext i32 %65 to i64, !dbg !13993
  %arrayidx49 = getelementptr inbounds %struct.DMFlagMat, %struct.DMFlagMat* %64, i64 %idxprom48, !dbg !13993
  %66 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !13995
  %faceFlags = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %66, i32 0, i32 9, !dbg !13996
  %67 = load %struct.DMFlagMat*, %struct.DMFlagMat** %faceFlags, align 8, !dbg !13996
  %68 = load i32, i32* %index, align 4, !dbg !13997
  %idxprom50 = sext i32 %68 to i64, !dbg !13995
  %arrayidx51 = getelementptr inbounds %struct.DMFlagMat, %struct.DMFlagMat* %67, i64 %idxprom50, !dbg !13995
  %69 = bitcast %struct.DMFlagMat* %arrayidx49 to i8*, !dbg !13995
  %70 = bitcast %struct.DMFlagMat* %arrayidx51 to i8*, !dbg !13995
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %69, i8* align 2 %70, i64 4, i1 false), !dbg !13995
  %71 = load %struct.DMGridAdjacency*, %struct.DMGridAdjacency** %gridAdjacency, align 8, !dbg !13998
  %72 = load i32, i32* %gIndex, align 4, !dbg !13999
  %idxprom52 = sext i32 %72 to i64, !dbg !13998
  %arrayidx53 = getelementptr inbounds %struct.DMGridAdjacency, %struct.DMGridAdjacency* %71, i64 %idxprom52, !dbg !13998
  store %struct.DMGridAdjacency* %arrayidx53, %struct.DMGridAdjacency** %adj, align 8, !dbg !14000
  %73 = load i32, i32* %gIndex, align 4, !dbg !14001
  %74 = load i32, i32* %S, align 4, !dbg !14002
  %sub54 = sub nsw i32 %73, %74, !dbg !14003
  %75 = load i32, i32* %nextS, align 4, !dbg !14004
  %add55 = add nsw i32 %sub54, %75, !dbg !14005
  %76 = load %struct.DMGridAdjacency*, %struct.DMGridAdjacency** %adj, align 8, !dbg !14006
  %index56 = getelementptr inbounds %struct.DMGridAdjacency, %struct.DMGridAdjacency* %76, i32 0, i32 0, !dbg !14007
  %arrayidx57 = getelementptr inbounds [4 x i32], [4 x i32]* %index56, i64 0, i64 0, !dbg !14006
  store i32 %add55, i32* %arrayidx57, align 4, !dbg !14008
  %77 = load %struct.DMGridAdjacency*, %struct.DMGridAdjacency** %adj, align 8, !dbg !14009
  %rotation = getelementptr inbounds %struct.DMGridAdjacency, %struct.DMGridAdjacency* %77, i32 0, i32 1, !dbg !14010
  %arrayidx58 = getelementptr inbounds [4 x i32], [4 x i32]* %rotation, i64 0, i64 0, !dbg !14009
  store i32 3, i32* %arrayidx58, align 4, !dbg !14011
  %78 = load i32*, i32** %gridOffset, align 8, !dbg !14012
  %79 = load %struct.CCGFace*, %struct.CCGFace** %f28, align 8, !dbg !14013
  %80 = load i32, i32* %prevS, align 4, !dbg !14014
  %call59 = call i32 @ccgdm_adjacent_grid(i32* %78, %struct.CCGFace* %79, i32 %80, i32 0), !dbg !14015
  %81 = load %struct.DMGridAdjacency*, %struct.DMGridAdjacency** %adj, align 8, !dbg !14016
  %index60 = getelementptr inbounds %struct.DMGridAdjacency, %struct.DMGridAdjacency* %81, i32 0, i32 0, !dbg !14017
  %arrayidx61 = getelementptr inbounds [4 x i32], [4 x i32]* %index60, i64 0, i64 1, !dbg !14016
  store i32 %call59, i32* %arrayidx61, align 4, !dbg !14018
  %82 = load %struct.DMGridAdjacency*, %struct.DMGridAdjacency** %adj, align 8, !dbg !14019
  %rotation62 = getelementptr inbounds %struct.DMGridAdjacency, %struct.DMGridAdjacency* %82, i32 0, i32 1, !dbg !14020
  %arrayidx63 = getelementptr inbounds [4 x i32], [4 x i32]* %rotation62, i64 0, i64 1, !dbg !14019
  store i32 1, i32* %arrayidx63, align 4, !dbg !14021
  %83 = load i32*, i32** %gridOffset, align 8, !dbg !14022
  %84 = load %struct.CCGFace*, %struct.CCGFace** %f28, align 8, !dbg !14023
  %85 = load i32, i32* %S, align 4, !dbg !14024
  %call64 = call i32 @ccgdm_adjacent_grid(i32* %83, %struct.CCGFace* %84, i32 %85, i32 1), !dbg !14025
  %86 = load %struct.DMGridAdjacency*, %struct.DMGridAdjacency** %adj, align 8, !dbg !14026
  %index65 = getelementptr inbounds %struct.DMGridAdjacency, %struct.DMGridAdjacency* %86, i32 0, i32 0, !dbg !14027
  %arrayidx66 = getelementptr inbounds [4 x i32], [4 x i32]* %index65, i64 0, i64 2, !dbg !14026
  store i32 %call64, i32* %arrayidx66, align 4, !dbg !14028
  %87 = load %struct.DMGridAdjacency*, %struct.DMGridAdjacency** %adj, align 8, !dbg !14029
  %rotation67 = getelementptr inbounds %struct.DMGridAdjacency, %struct.DMGridAdjacency* %87, i32 0, i32 1, !dbg !14030
  %arrayidx68 = getelementptr inbounds [4 x i32], [4 x i32]* %rotation67, i64 0, i64 2, !dbg !14029
  store i32 3, i32* %arrayidx68, align 4, !dbg !14031
  %88 = load i32, i32* %gIndex, align 4, !dbg !14032
  %89 = load i32, i32* %S, align 4, !dbg !14033
  %sub69 = sub nsw i32 %88, %89, !dbg !14034
  %90 = load i32, i32* %prevS, align 4, !dbg !14035
  %add70 = add nsw i32 %sub69, %90, !dbg !14036
  %91 = load %struct.DMGridAdjacency*, %struct.DMGridAdjacency** %adj, align 8, !dbg !14037
  %index71 = getelementptr inbounds %struct.DMGridAdjacency, %struct.DMGridAdjacency* %91, i32 0, i32 0, !dbg !14038
  %arrayidx72 = getelementptr inbounds [4 x i32], [4 x i32]* %index71, i64 0, i64 3, !dbg !14037
  store i32 %add70, i32* %arrayidx72, align 4, !dbg !14039
  %92 = load %struct.DMGridAdjacency*, %struct.DMGridAdjacency** %adj, align 8, !dbg !14040
  %rotation73 = getelementptr inbounds %struct.DMGridAdjacency, %struct.DMGridAdjacency* %92, i32 0, i32 1, !dbg !14041
  %arrayidx74 = getelementptr inbounds [4 x i32], [4 x i32]* %rotation73, i64 0, i64 3, !dbg !14040
  store i32 1, i32* %arrayidx74, align 4, !dbg !14042
  br label %for.inc75, !dbg !14043

for.inc75:                                        ; preds = %for.body38
  %93 = load i32, i32* %S, align 4, !dbg !14044
  %inc76 = add nsw i32 %93, 1, !dbg !14044
  store i32 %inc76, i32* %S, align 4, !dbg !14044
  %94 = load i32, i32* %gIndex, align 4, !dbg !14045
  %inc77 = add nsw i32 %94, 1, !dbg !14045
  store i32 %inc77, i32* %gIndex, align 4, !dbg !14045
  br label %for.cond35, !dbg !14046, !llvm.loop !14047

for.end78:                                        ; preds = %for.cond35
  br label %for.inc79, !dbg !14049

for.inc79:                                        ; preds = %for.end78
  %95 = load i32, i32* %index, align 4, !dbg !14050
  %inc80 = add nsw i32 %95, 1, !dbg !14050
  store i32 %inc80, i32* %index, align 4, !dbg !14050
  br label %for.cond24, !dbg !14051, !llvm.loop !14052

for.end81:                                        ; preds = %for.cond24
  %96 = load %struct.CCGElem**, %struct.CCGElem*** %gridData, align 8, !dbg !14054
  %97 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !14055
  %gridData82 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %97, i32 0, i32 14, !dbg !14056
  store %struct.CCGElem** %96, %struct.CCGElem*** %gridData82, align 8, !dbg !14057
  %98 = load %struct.CCGFace**, %struct.CCGFace*** %gridFaces, align 8, !dbg !14058
  %99 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !14059
  %gridFaces83 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %99, i32 0, i32 17, !dbg !14060
  store %struct.CCGFace** %98, %struct.CCGFace*** %gridFaces83, align 8, !dbg !14061
  %100 = load %struct.DMGridAdjacency*, %struct.DMGridAdjacency** %gridAdjacency, align 8, !dbg !14062
  %101 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !14063
  %gridAdjacency84 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %101, i32 0, i32 15, !dbg !14064
  store %struct.DMGridAdjacency* %100, %struct.DMGridAdjacency** %gridAdjacency84, align 8, !dbg !14065
  %102 = load i32*, i32** %gridOffset, align 8, !dbg !14066
  %103 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !14067
  %gridOffset85 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %103, i32 0, i32 16, !dbg !14068
  store i32* %102, i32** %gridOffset85, align 8, !dbg !14069
  %104 = load %struct.DMFlagMat*, %struct.DMFlagMat** %gridFlagMats, align 8, !dbg !14070
  %105 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !14071
  %gridFlagMats86 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %105, i32 0, i32 18, !dbg !14072
  store %struct.DMFlagMat* %104, %struct.DMFlagMat** %gridFlagMats86, align 8, !dbg !14073
  br label %return, !dbg !14074

return:                                           ; preds = %for.end81, %if.then
  ret void, !dbg !14074
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ccgdm_adjacent_grid(i32* %gridOffset, %struct.CCGFace* %f, i32 %S, i32 %offset) #0 !dbg !14075 {
entry:
  %retval = alloca i32, align 4
  %gridOffset.addr = alloca i32*, align 8
  %f.addr = alloca %struct.CCGFace*, align 8
  %S.addr = alloca i32, align 4
  %offset.addr = alloca i32, align 4
  %adjf = alloca %struct.CCGFace*, align 8
  %e = alloca %struct.CCGEdge*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %numFaces = alloca i32, align 4
  %fIndex = alloca i32, align 4
  %numEdges = alloca i32, align 4
  store i32* %gridOffset, i32** %gridOffset.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %gridOffset.addr, metadata !14078, metadata !DIExpression()), !dbg !14079
  store %struct.CCGFace* %f, %struct.CCGFace** %f.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f.addr, metadata !14080, metadata !DIExpression()), !dbg !14081
  store i32 %S, i32* %S.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %S.addr, metadata !14082, metadata !DIExpression()), !dbg !14083
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !14084, metadata !DIExpression()), !dbg !14085
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %adjf, metadata !14086, metadata !DIExpression()), !dbg !14087
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e, metadata !14088, metadata !DIExpression()), !dbg !14089
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14090, metadata !DIExpression()), !dbg !14091
  call void @llvm.dbg.declare(metadata i32* %j, metadata !14092, metadata !DIExpression()), !dbg !14093
  store i32 0, i32* %j, align 4, !dbg !14093
  call void @llvm.dbg.declare(metadata i32* %numFaces, metadata !14094, metadata !DIExpression()), !dbg !14095
  call void @llvm.dbg.declare(metadata i32* %fIndex, metadata !14096, metadata !DIExpression()), !dbg !14097
  call void @llvm.dbg.declare(metadata i32* %numEdges, metadata !14098, metadata !DIExpression()), !dbg !14099
  store i32 0, i32* %numEdges, align 4, !dbg !14099
  %0 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !14100
  %1 = load i32, i32* %S.addr, align 4, !dbg !14101
  %call = call %struct.CCGEdge* @ccgSubSurf_getFaceEdge(%struct.CCGFace* %0, i32 %1), !dbg !14102
  store %struct.CCGEdge* %call, %struct.CCGEdge** %e, align 8, !dbg !14103
  %2 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !14104
  %call1 = call i32 @ccgSubSurf_getEdgeNumFaces(%struct.CCGEdge* %2), !dbg !14105
  store i32 %call1, i32* %numFaces, align 4, !dbg !14106
  %3 = load i32, i32* %numFaces, align 4, !dbg !14107
  %cmp = icmp ne i32 %3, 2, !dbg !14109
  br i1 %cmp, label %if.then, label %if.end, !dbg !14110

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !14111
  br label %return, !dbg !14111

if.end:                                           ; preds = %entry
  store i32 0, i32* %i, align 4, !dbg !14112
  br label %for.cond, !dbg !14114

for.cond:                                         ; preds = %for.inc18, %if.end
  %4 = load i32, i32* %i, align 4, !dbg !14115
  %5 = load i32, i32* %numFaces, align 4, !dbg !14117
  %cmp2 = icmp slt i32 %4, %5, !dbg !14118
  br i1 %cmp2, label %for.body, label %for.end20, !dbg !14119

for.body:                                         ; preds = %for.cond
  %6 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !14120
  %7 = load i32, i32* %i, align 4, !dbg !14122
  %call3 = call %struct.CCGFace* @ccgSubSurf_getEdgeFace(%struct.CCGEdge* %6, i32 %7), !dbg !14123
  store %struct.CCGFace* %call3, %struct.CCGFace** %adjf, align 8, !dbg !14124
  %8 = load %struct.CCGFace*, %struct.CCGFace** %adjf, align 8, !dbg !14125
  %9 = load %struct.CCGFace*, %struct.CCGFace** %f.addr, align 8, !dbg !14127
  %cmp4 = icmp ne %struct.CCGFace* %8, %9, !dbg !14128
  br i1 %cmp4, label %if.then5, label %if.end17, !dbg !14129

if.then5:                                         ; preds = %for.body
  %10 = load %struct.CCGFace*, %struct.CCGFace** %adjf, align 8, !dbg !14130
  %call6 = call i32 @ccgSubSurf_getFaceNumVerts(%struct.CCGFace* %10), !dbg !14132
  store i32 %call6, i32* %numEdges, align 4, !dbg !14133
  store i32 0, i32* %j, align 4, !dbg !14134
  br label %for.cond7, !dbg !14136

for.cond7:                                        ; preds = %for.inc, %if.then5
  %11 = load i32, i32* %j, align 4, !dbg !14137
  %12 = load i32, i32* %numEdges, align 4, !dbg !14139
  %cmp8 = icmp slt i32 %11, %12, !dbg !14140
  br i1 %cmp8, label %for.body9, label %for.end, !dbg !14141

for.body9:                                        ; preds = %for.cond7
  %13 = load %struct.CCGFace*, %struct.CCGFace** %adjf, align 8, !dbg !14142
  %14 = load i32, i32* %j, align 4, !dbg !14144
  %call10 = call %struct.CCGEdge* @ccgSubSurf_getFaceEdge(%struct.CCGFace* %13, i32 %14), !dbg !14145
  %15 = load %struct.CCGEdge*, %struct.CCGEdge** %e, align 8, !dbg !14146
  %cmp11 = icmp eq %struct.CCGEdge* %call10, %15, !dbg !14147
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !14148

if.then12:                                        ; preds = %for.body9
  br label %for.end, !dbg !14149

if.end13:                                         ; preds = %for.body9
  br label %for.inc, !dbg !14146

for.inc:                                          ; preds = %if.end13
  %16 = load i32, i32* %j, align 4, !dbg !14150
  %inc = add nsw i32 %16, 1, !dbg !14150
  store i32 %inc, i32* %j, align 4, !dbg !14150
  br label %for.cond7, !dbg !14151, !llvm.loop !14152

for.end:                                          ; preds = %if.then12, %for.cond7
  %17 = load i32, i32* %j, align 4, !dbg !14154
  %18 = load i32, i32* %numEdges, align 4, !dbg !14156
  %cmp14 = icmp ne i32 %17, %18, !dbg !14157
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !14158

if.then15:                                        ; preds = %for.end
  br label %for.end20, !dbg !14159

if.end16:                                         ; preds = %for.end
  br label %if.end17, !dbg !14160

if.end17:                                         ; preds = %if.end16, %for.body
  br label %for.inc18, !dbg !14161

for.inc18:                                        ; preds = %if.end17
  %19 = load i32, i32* %i, align 4, !dbg !14162
  %inc19 = add nsw i32 %19, 1, !dbg !14162
  store i32 %inc19, i32* %i, align 4, !dbg !14162
  br label %for.cond, !dbg !14163, !llvm.loop !14164

for.end20:                                        ; preds = %if.then15, %for.cond
  %20 = load i32, i32* %numEdges, align 4, !dbg !14166
  %cmp21 = icmp eq i32 %20, 0, !dbg !14168
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !14169

if.then22:                                        ; preds = %for.end20
  store i32 -1, i32* %retval, align 4, !dbg !14170
  br label %return, !dbg !14170

if.end23:                                         ; preds = %for.end20
  %21 = load %struct.CCGFace*, %struct.CCGFace** %adjf, align 8, !dbg !14171
  %call24 = call i8* @ccgSubSurf_getFaceFaceHandle(%struct.CCGFace* %21), !dbg !14171
  %22 = ptrtoint i8* %call24 to i64, !dbg !14171
  %conv = trunc i64 %22 to i32, !dbg !14171
  store i32 %conv, i32* %fIndex, align 4, !dbg !14172
  %23 = load i32*, i32** %gridOffset.addr, align 8, !dbg !14173
  %24 = load i32, i32* %fIndex, align 4, !dbg !14174
  %idxprom = sext i32 %24 to i64, !dbg !14173
  %arrayidx = getelementptr inbounds i32, i32* %23, i64 %idxprom, !dbg !14173
  %25 = load i32, i32* %arrayidx, align 4, !dbg !14173
  %26 = load i32, i32* %j, align 4, !dbg !14175
  %27 = load i32, i32* %offset.addr, align 4, !dbg !14176
  %add = add nsw i32 %26, %27, !dbg !14177
  %28 = load i32, i32* %numEdges, align 4, !dbg !14178
  %rem = srem i32 %add, %28, !dbg !14179
  %add25 = add nsw i32 %25, %rem, !dbg !14180
  store i32 %add25, i32* %retval, align 4, !dbg !14181
  br label %return, !dbg !14181

return:                                           ; preds = %if.end23, %if.then22, %if.then
  %29 = load i32, i32* %retval, align 4, !dbg !14182
  ret i32 %29, !dbg !14182
}

declare dso_local %struct.CCGFace* @ccgSubSurf_getEdgeFace(%struct.CCGEdge*, i32) #2

declare dso_local void @BKE_mesh_vert_poly_map_create(%struct.MeshElemMap**, i32**, %struct.MPoly*, %struct.MLoop*, i32, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @ccgDM_use_grid_pbvh(%struct.CCGDerivedMesh* %ccgdm) #0 !dbg !14183 {
entry:
  %retval = alloca i32, align 4
  %ccgdm.addr = alloca %struct.CCGDerivedMesh*, align 8
  %mmd = alloca %struct.MultiresModifierData*, align 8
  store %struct.CCGDerivedMesh* %ccgdm, %struct.CCGDerivedMesh** %ccgdm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm.addr, metadata !14186, metadata !DIExpression()), !dbg !14187
  call void @llvm.dbg.declare(metadata %struct.MultiresModifierData** %mmd, metadata !14188, metadata !DIExpression()), !dbg !14191
  %0 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm.addr, align 8, !dbg !14192
  %multires = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %0, i32 0, i32 20, !dbg !14193
  %mmd1 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %multires, i32 0, i32 0, !dbg !14194
  %1 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd1, align 8, !dbg !14194
  store %struct.MultiresModifierData* %1, %struct.MultiresModifierData** %mmd, align 8, !dbg !14191
  %2 = load %struct.MultiresModifierData*, %struct.MultiresModifierData** %mmd, align 8, !dbg !14195
  %tobool = icmp ne %struct.MultiresModifierData* %2, null, !dbg !14195
  br i1 %tobool, label %if.end, label %if.then, !dbg !14197

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !14198
  br label %return, !dbg !14198

if.end:                                           ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !14199
  br label %return, !dbg !14199

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !14200
  ret i32 %3, !dbg !14200
}

declare dso_local void @BKE_pbvh_grids_update(%struct.PBVH*, %struct.CCGElem**, %struct.DMGridAdjacency*, i8**, %struct.DMFlagMat*, i32**) #2

declare dso_local %struct.PBVH* @BKE_pbvh_new() #2

declare dso_local void @BKE_pbvh_build_grids(%struct.PBVH*, %struct.CCGElem**, %struct.DMGridAdjacency*, i32, %struct.CCGKey*, i8**, %struct.DMFlagMat*, i32**) #2

declare dso_local void @BKE_pbvh_build_mesh(%struct.PBVH*, %struct.MFace*, %struct.MVert*, i32, i32, %struct.CustomData*) #2

declare dso_local void @pbvh_show_diffuse_color_set(%struct.PBVH*, i8 zeroext) #2

declare dso_local i8* @DM_get_loop_data_layer(%struct.DerivedMesh*, i32) #2

declare dso_local void @glBegin(i32) #2

declare dso_local void @glVertex3fv(float*) #2

declare dso_local void @glEnd() #2

; Function Attrs: noinline nounwind uwtable
define internal void @ccgdm_pbvh_update(%struct.CCGDerivedMesh* %ccgdm) #0 !dbg !14201 {
entry:
  %ccgdm.addr = alloca %struct.CCGDerivedMesh*, align 8
  %faces = alloca %struct.CCGFace**, align 8
  %totface = alloca i32, align 4
  store %struct.CCGDerivedMesh* %ccgdm, %struct.CCGDerivedMesh** %ccgdm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm.addr, metadata !14204, metadata !DIExpression()), !dbg !14205
  %0 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm.addr, align 8, !dbg !14206
  %pbvh = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %0, i32 0, i32 11, !dbg !14208
  %1 = load %struct.PBVH*, %struct.PBVH** %pbvh, align 8, !dbg !14208
  %tobool = icmp ne %struct.PBVH* %1, null, !dbg !14206
  br i1 %tobool, label %land.lhs.true, label %if.end8, !dbg !14209

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm.addr, align 8, !dbg !14210
  %call = call i32 @ccgDM_use_grid_pbvh(%struct.CCGDerivedMesh* %2), !dbg !14211
  %tobool1 = icmp ne i32 %call, 0, !dbg !14211
  br i1 %tobool1, label %if.then, label %if.end8, !dbg !14212

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.CCGFace*** %faces, metadata !14213, metadata !DIExpression()), !dbg !14215
  call void @llvm.dbg.declare(metadata i32* %totface, metadata !14216, metadata !DIExpression()), !dbg !14217
  %3 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm.addr, align 8, !dbg !14218
  %pbvh2 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %3, i32 0, i32 11, !dbg !14219
  %4 = load %struct.PBVH*, %struct.PBVH** %pbvh2, align 8, !dbg !14219
  %5 = bitcast %struct.CCGFace*** %faces to i8***, !dbg !14220
  call void @BKE_pbvh_get_grid_updates(%struct.PBVH* %4, i32 1, i8*** %5, i32* %totface), !dbg !14221
  %6 = load i32, i32* %totface, align 4, !dbg !14222
  %tobool3 = icmp ne i32 %6, 0, !dbg !14222
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !14224

if.then4:                                         ; preds = %if.then
  %7 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm.addr, align 8, !dbg !14225
  %ss = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %7, i32 0, i32 1, !dbg !14227
  %8 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !14227
  %9 = load %struct.CCGFace**, %struct.CCGFace*** %faces, align 8, !dbg !14228
  %10 = load i32, i32* %totface, align 4, !dbg !14229
  %call5 = call i32 @ccgSubSurf_updateFromFaces(%struct.CCGSubSurf* %8, i32 0, %struct.CCGFace** %9, i32 %10), !dbg !14230
  %11 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm.addr, align 8, !dbg !14231
  %ss6 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %11, i32 0, i32 1, !dbg !14232
  %12 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss6, align 8, !dbg !14232
  %13 = load %struct.CCGFace**, %struct.CCGFace*** %faces, align 8, !dbg !14233
  %14 = load i32, i32* %totface, align 4, !dbg !14234
  %call7 = call i32 @ccgSubSurf_updateNormals(%struct.CCGSubSurf* %12, %struct.CCGFace** %13, i32 %14), !dbg !14235
  %15 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !14236
  %16 = load %struct.CCGFace**, %struct.CCGFace*** %faces, align 8, !dbg !14237
  %17 = bitcast %struct.CCGFace** %16 to i8*, !dbg !14237
  call void %15(i8* %17), !dbg !14236
  br label %if.end, !dbg !14238

if.end:                                           ; preds = %if.then4, %if.then
  br label %if.end8, !dbg !14239

if.end8:                                          ; preds = %if.end, %land.lhs.true, %entry
  ret void, !dbg !14240
}

declare dso_local i32 @ccgSubSurf_getEdgeAge(%struct.CCGSubSurf*, %struct.CCGEdge*) #2

declare dso_local void @glColor3ub(i8 zeroext, i8 zeroext, i8 zeroext) #2

declare dso_local void @BKE_pbvh_get_grid_updates(%struct.PBVH*, i32, i8***, i32*) #2

declare dso_local i32 @ccgSubSurf_updateFromFaces(%struct.CCGSubSurf*, i32, %struct.CCGFace**, i32) #2

declare dso_local i32 @ccgSubSurf_updateNormals(%struct.CCGSubSurf*, %struct.CCGFace**, i32) #2

declare dso_local void @BKE_pbvh_draw(%struct.PBVH*, [4 x float]*, [3 x float]*, i32 (i32, i8*)*, i8 zeroext) #2

declare dso_local void @glShadeModel(i32) #2

declare dso_local void @glNormal3sv(i16*) #2

declare dso_local void @glNormal3fv(float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @ccgDM_glNormalFast(float* %a, float* %b, float* %c, float* %d) #0 !dbg !14241 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %c.addr = alloca float*, align 8
  %d.addr = alloca float*, align 8
  %a_cX = alloca float, align 4
  %a_cY = alloca float, align 4
  %a_cZ = alloca float, align 4
  %b_dX = alloca float, align 4
  %b_dY = alloca float, align 4
  %b_dZ = alloca float, align 4
  %no = alloca [3 x float], align 4
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !14244, metadata !DIExpression()), !dbg !14245
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !14246, metadata !DIExpression()), !dbg !14247
  store float* %c, float** %c.addr, align 8
  call void @llvm.dbg.declare(metadata float** %c.addr, metadata !14248, metadata !DIExpression()), !dbg !14249
  store float* %d, float** %d.addr, align 8
  call void @llvm.dbg.declare(metadata float** %d.addr, metadata !14250, metadata !DIExpression()), !dbg !14251
  call void @llvm.dbg.declare(metadata float* %a_cX, metadata !14252, metadata !DIExpression()), !dbg !14253
  %0 = load float*, float** %c.addr, align 8, !dbg !14254
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !14254
  %1 = load float, float* %arrayidx, align 4, !dbg !14254
  %2 = load float*, float** %a.addr, align 8, !dbg !14255
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !14255
  %3 = load float, float* %arrayidx1, align 4, !dbg !14255
  %sub = fsub float %1, %3, !dbg !14256
  store float %sub, float* %a_cX, align 4, !dbg !14253
  call void @llvm.dbg.declare(metadata float* %a_cY, metadata !14257, metadata !DIExpression()), !dbg !14258
  %4 = load float*, float** %c.addr, align 8, !dbg !14259
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !14259
  %5 = load float, float* %arrayidx2, align 4, !dbg !14259
  %6 = load float*, float** %a.addr, align 8, !dbg !14260
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !14260
  %7 = load float, float* %arrayidx3, align 4, !dbg !14260
  %sub4 = fsub float %5, %7, !dbg !14261
  store float %sub4, float* %a_cY, align 4, !dbg !14258
  call void @llvm.dbg.declare(metadata float* %a_cZ, metadata !14262, metadata !DIExpression()), !dbg !14263
  %8 = load float*, float** %c.addr, align 8, !dbg !14264
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !14264
  %9 = load float, float* %arrayidx5, align 4, !dbg !14264
  %10 = load float*, float** %a.addr, align 8, !dbg !14265
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !14265
  %11 = load float, float* %arrayidx6, align 4, !dbg !14265
  %sub7 = fsub float %9, %11, !dbg !14266
  store float %sub7, float* %a_cZ, align 4, !dbg !14263
  call void @llvm.dbg.declare(metadata float* %b_dX, metadata !14267, metadata !DIExpression()), !dbg !14268
  %12 = load float*, float** %d.addr, align 8, !dbg !14269
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 0, !dbg !14269
  %13 = load float, float* %arrayidx8, align 4, !dbg !14269
  %14 = load float*, float** %b.addr, align 8, !dbg !14270
  %arrayidx9 = getelementptr inbounds float, float* %14, i64 0, !dbg !14270
  %15 = load float, float* %arrayidx9, align 4, !dbg !14270
  %sub10 = fsub float %13, %15, !dbg !14271
  store float %sub10, float* %b_dX, align 4, !dbg !14268
  call void @llvm.dbg.declare(metadata float* %b_dY, metadata !14272, metadata !DIExpression()), !dbg !14273
  %16 = load float*, float** %d.addr, align 8, !dbg !14274
  %arrayidx11 = getelementptr inbounds float, float* %16, i64 1, !dbg !14274
  %17 = load float, float* %arrayidx11, align 4, !dbg !14274
  %18 = load float*, float** %b.addr, align 8, !dbg !14275
  %arrayidx12 = getelementptr inbounds float, float* %18, i64 1, !dbg !14275
  %19 = load float, float* %arrayidx12, align 4, !dbg !14275
  %sub13 = fsub float %17, %19, !dbg !14276
  store float %sub13, float* %b_dY, align 4, !dbg !14273
  call void @llvm.dbg.declare(metadata float* %b_dZ, metadata !14277, metadata !DIExpression()), !dbg !14278
  %20 = load float*, float** %d.addr, align 8, !dbg !14279
  %arrayidx14 = getelementptr inbounds float, float* %20, i64 2, !dbg !14279
  %21 = load float, float* %arrayidx14, align 4, !dbg !14279
  %22 = load float*, float** %b.addr, align 8, !dbg !14280
  %arrayidx15 = getelementptr inbounds float, float* %22, i64 2, !dbg !14280
  %23 = load float, float* %arrayidx15, align 4, !dbg !14280
  %sub16 = fsub float %21, %23, !dbg !14281
  store float %sub16, float* %b_dZ, align 4, !dbg !14278
  call void @llvm.dbg.declare(metadata [3 x float]* %no, metadata !14282, metadata !DIExpression()), !dbg !14283
  %24 = load float, float* %b_dY, align 4, !dbg !14284
  %25 = load float, float* %a_cZ, align 4, !dbg !14285
  %mul = fmul float %24, %25, !dbg !14286
  %26 = load float, float* %b_dZ, align 4, !dbg !14287
  %27 = load float, float* %a_cY, align 4, !dbg !14288
  %mul17 = fmul float %26, %27, !dbg !14289
  %sub18 = fsub float %mul, %mul17, !dbg !14290
  %arrayidx19 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !14291
  store float %sub18, float* %arrayidx19, align 4, !dbg !14292
  %28 = load float, float* %b_dZ, align 4, !dbg !14293
  %29 = load float, float* %a_cX, align 4, !dbg !14294
  %mul20 = fmul float %28, %29, !dbg !14295
  %30 = load float, float* %b_dX, align 4, !dbg !14296
  %31 = load float, float* %a_cZ, align 4, !dbg !14297
  %mul21 = fmul float %30, %31, !dbg !14298
  %sub22 = fsub float %mul20, %mul21, !dbg !14299
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 1, !dbg !14300
  store float %sub22, float* %arrayidx23, align 4, !dbg !14301
  %32 = load float, float* %b_dX, align 4, !dbg !14302
  %33 = load float, float* %a_cY, align 4, !dbg !14303
  %mul24 = fmul float %32, %33, !dbg !14304
  %34 = load float, float* %b_dY, align 4, !dbg !14305
  %35 = load float, float* %a_cX, align 4, !dbg !14306
  %mul25 = fmul float %34, %35, !dbg !14307
  %sub26 = fsub float %mul24, %mul25, !dbg !14308
  %arrayidx27 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 2, !dbg !14309
  store float %sub26, float* %arrayidx27, align 4, !dbg !14310
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !14311
  call void @glNormal3fv(float* %arraydecay), !dbg !14312
  ret void, !dbg !14313
}

; Function Attrs: noinline nounwind uwtable
define internal void @ccgDM_drawFacesTex_common(%struct.DerivedMesh* %dm, i32 (%struct.MTFace*, i8, i32)* %drawParams, i32 (i8*, i32)* %drawParamsMapped, i32 (i8*, i32, i32)* %compareDrawOptions, i8* %userData, i32 %flag) #0 !dbg !14314 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %drawParams.addr = alloca i32 (%struct.MTFace*, i8, i32)*, align 8
  %drawParamsMapped.addr = alloca i32 (i8*, i32)*, align 8
  %compareDrawOptions.addr = alloca i32 (i8*, i32, i32)*, align 8
  %userData.addr = alloca i8*, align 8
  %flag.addr = alloca i32, align 4
  %ccgdm = alloca %struct.CCGDerivedMesh*, align 8
  %ss = alloca %struct.CCGSubSurf*, align 8
  %key = alloca %struct.CCGKey, align 4
  %mcol = alloca %struct.MCol*, align 8
  %tf = alloca %struct.MTFace*, align 8
  %tf_stencil_base = alloca %struct.MTFace*, align 8
  %tf_stencil = alloca %struct.MTFace*, align 8
  %tf_base = alloca %struct.MTFace*, align 8
  %lnors = alloca [4 x [3 x i16]]*, align 8
  %faceFlags = alloca %struct.DMFlagMat*, align 8
  %draw_option = alloca i32, align 4
  %i = alloca i32, align 4
  %totface = alloca i32, align 4
  %gridSize = alloca i32, align 4
  %gridFaces = alloca i32, align 4
  %gridOffset = alloca i32, align 4
  %mat_nr_cache = alloca i32, align 4
  %stencil = alloca i32, align 4
  %f = alloca %struct.CCGFace*, align 8
  %S = alloca i32, align 4
  %x = alloca i32, align 4
  %y = alloca i32, align 4
  %numVerts = alloca i32, align 4
  %drawSmooth = alloca i32, align 4
  %index = alloca i32, align 4
  %origIndex = alloca i32, align 4
  %cp = alloca i8*, align 8
  %ln = alloca [4 x [3 x i16]]*, align 8
  %mat_nr = alloca i32, align 4
  %faceGridData = alloca %struct.CCGElem*, align 8
  %a = alloca %struct.CCGElem*, align 8
  %b = alloca %struct.CCGElem*, align 8
  %a_co = alloca float*, align 8
  %b_co = alloca float*, align 8
  %c_co = alloca float*, align 8
  %d_co = alloca float*, align 8
  %a_co383 = alloca float*, align 8
  %b_co386 = alloca float*, align 8
  %c_co390 = alloca float*, align 8
  %d_co394 = alloca float*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !14317, metadata !DIExpression()), !dbg !14318
  store i32 (%struct.MTFace*, i8, i32)* %drawParams, i32 (%struct.MTFace*, i8, i32)** %drawParams.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.MTFace*, i8, i32)** %drawParams.addr, metadata !14319, metadata !DIExpression()), !dbg !14320
  store i32 (i8*, i32)* %drawParamsMapped, i32 (i8*, i32)** %drawParamsMapped.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i32)** %drawParamsMapped.addr, metadata !14321, metadata !DIExpression()), !dbg !14322
  store i32 (i8*, i32, i32)* %compareDrawOptions, i32 (i8*, i32, i32)** %compareDrawOptions.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i32, i32)** %compareDrawOptions.addr, metadata !14323, metadata !DIExpression()), !dbg !14324
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !14325, metadata !DIExpression()), !dbg !14326
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !14327, metadata !DIExpression()), !dbg !14328
  call void @llvm.dbg.declare(metadata %struct.CCGDerivedMesh** %ccgdm, metadata !14329, metadata !DIExpression()), !dbg !14330
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !14331
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.CCGDerivedMesh*, !dbg !14332
  store %struct.CCGDerivedMesh* %1, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !14330
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss, metadata !14333, metadata !DIExpression()), !dbg !14334
  %2 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !14335
  %ss1 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %2, i32 0, i32 1, !dbg !14336
  %3 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss1, align 8, !dbg !14336
  store %struct.CCGSubSurf* %3, %struct.CCGSubSurf** %ss, align 8, !dbg !14334
  call void @llvm.dbg.declare(metadata %struct.CCGKey* %key, metadata !14337, metadata !DIExpression()), !dbg !14338
  call void @llvm.dbg.declare(metadata %struct.MCol** %mcol, metadata !14339, metadata !DIExpression()), !dbg !14340
  %4 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !14341
  %getTessFaceDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %4, i32 0, i32 52, !dbg !14342
  %5 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray, align 8, !dbg !14342
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !14343
  %call = call i8* %5(%struct.DerivedMesh* %6, i32 20), !dbg !14341
  %7 = bitcast i8* %call to %struct.MCol*, !dbg !14341
  store %struct.MCol* %7, %struct.MCol** %mcol, align 8, !dbg !14340
  call void @llvm.dbg.declare(metadata %struct.MTFace** %tf, metadata !14344, metadata !DIExpression()), !dbg !14345
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !14346
  %call2 = call i8* @DM_get_tessface_data_layer(%struct.DerivedMesh* %8, i32 5), !dbg !14347
  %9 = bitcast i8* %call2 to %struct.MTFace*, !dbg !14347
  store %struct.MTFace* %9, %struct.MTFace** %tf, align 8, !dbg !14345
  call void @llvm.dbg.declare(metadata %struct.MTFace** %tf_stencil_base, metadata !14348, metadata !DIExpression()), !dbg !14349
  store %struct.MTFace* null, %struct.MTFace** %tf_stencil_base, align 8, !dbg !14349
  call void @llvm.dbg.declare(metadata %struct.MTFace** %tf_stencil, metadata !14350, metadata !DIExpression()), !dbg !14351
  store %struct.MTFace* null, %struct.MTFace** %tf_stencil, align 8, !dbg !14351
  call void @llvm.dbg.declare(metadata %struct.MTFace** %tf_base, metadata !14352, metadata !DIExpression()), !dbg !14353
  call void @llvm.dbg.declare(metadata [4 x [3 x i16]]** %lnors, metadata !14354, metadata !DIExpression()), !dbg !14355
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !14356
  %getTessFaceDataArray3 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %10, i32 0, i32 52, !dbg !14357
  %11 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray3, align 8, !dbg !14357
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !14358
  %call4 = call i8* %11(%struct.DerivedMesh* %12, i32 40), !dbg !14356
  %13 = bitcast i8* %call4 to [4 x [3 x i16]]*, !dbg !14356
  store [4 x [3 x i16]]* %13, [4 x [3 x i16]]** %lnors, align 8, !dbg !14355
  call void @llvm.dbg.declare(metadata %struct.DMFlagMat** %faceFlags, metadata !14359, metadata !DIExpression()), !dbg !14360
  %14 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !14361
  %faceFlags5 = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %14, i32 0, i32 9, !dbg !14362
  %15 = load %struct.DMFlagMat*, %struct.DMFlagMat** %faceFlags5, align 8, !dbg !14362
  store %struct.DMFlagMat* %15, %struct.DMFlagMat** %faceFlags, align 8, !dbg !14360
  call void @llvm.dbg.declare(metadata i32* %draw_option, metadata !14363, metadata !DIExpression()), !dbg !14364
  call void @llvm.dbg.declare(metadata i32* %i, metadata !14365, metadata !DIExpression()), !dbg !14366
  call void @llvm.dbg.declare(metadata i32* %totface, metadata !14367, metadata !DIExpression()), !dbg !14368
  call void @llvm.dbg.declare(metadata i32* %gridSize, metadata !14369, metadata !DIExpression()), !dbg !14370
  %16 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !14371
  %call6 = call i32 @ccgSubSurf_getGridSize(%struct.CCGSubSurf* %16), !dbg !14372
  store i32 %call6, i32* %gridSize, align 4, !dbg !14370
  call void @llvm.dbg.declare(metadata i32* %gridFaces, metadata !14373, metadata !DIExpression()), !dbg !14374
  %17 = load i32, i32* %gridSize, align 4, !dbg !14375
  %sub = sub nsw i32 %17, 1, !dbg !14376
  store i32 %sub, i32* %gridFaces, align 4, !dbg !14374
  call void @llvm.dbg.declare(metadata i32* %gridOffset, metadata !14377, metadata !DIExpression()), !dbg !14378
  store i32 0, i32* %gridOffset, align 4, !dbg !14378
  call void @llvm.dbg.declare(metadata i32* %mat_nr_cache, metadata !14379, metadata !DIExpression()), !dbg !14380
  store i32 -1, i32* %mat_nr_cache, align 4, !dbg !14380
  %18 = load i32 (i8*, i32, i32)*, i32 (i8*, i32, i32)** %compareDrawOptions.addr, align 8, !dbg !14381
  %19 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !14382
  call void @CCG_key_top_level(%struct.CCGKey* %key, %struct.CCGSubSurf* %19), !dbg !14383
  %20 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !14384
  call void @ccgdm_pbvh_update(%struct.CCGDerivedMesh* %20), !dbg !14385
  %21 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !14386
  %tobool = icmp ne %struct.MCol* %21, null, !dbg !14386
  br i1 %tobool, label %if.end, label %if.then, !dbg !14388

if.then:                                          ; preds = %entry
  %22 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !14389
  %getTessFaceDataArray7 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %22, i32 0, i32 52, !dbg !14390
  %23 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray7, align 8, !dbg !14390
  %24 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !14391
  %call8 = call i8* %23(%struct.DerivedMesh* %24, i32 6), !dbg !14389
  %25 = bitcast i8* %call8 to %struct.MCol*, !dbg !14389
  store %struct.MCol* %25, %struct.MCol** %mcol, align 8, !dbg !14392
  br label %if.end, !dbg !14393

if.end:                                           ; preds = %if.then, %entry
  %26 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !14394
  %tobool9 = icmp ne %struct.MCol* %26, null, !dbg !14394
  br i1 %tobool9, label %if.end13, label %if.then10, !dbg !14396

if.then10:                                        ; preds = %if.end
  %27 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !14397
  %getTessFaceDataArray11 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %27, i32 0, i32 52, !dbg !14398
  %28 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray11, align 8, !dbg !14398
  %29 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !14399
  %call12 = call i8* %28(%struct.DerivedMesh* %29, i32 22), !dbg !14397
  %30 = bitcast i8* %call12 to %struct.MCol*, !dbg !14397
  store %struct.MCol* %30, %struct.MCol** %mcol, align 8, !dbg !14400
  br label %if.end13, !dbg !14401

if.end13:                                         ; preds = %if.then10, %if.end
  %31 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !14402
  %call14 = call i32 @ccgSubSurf_getNumFaces(%struct.CCGSubSurf* %31), !dbg !14403
  store i32 %call14, i32* %totface, align 4, !dbg !14404
  %32 = load i32, i32* %flag.addr, align 4, !dbg !14405
  %and = and i32 %32, 8, !dbg !14407
  %tobool15 = icmp ne i32 %and, 0, !dbg !14407
  br i1 %tobool15, label %if.then16, label %if.end20, !dbg !14408

if.then16:                                        ; preds = %if.end13
  call void @llvm.dbg.declare(metadata i32* %stencil, metadata !14409, metadata !DIExpression()), !dbg !14411
  %33 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !14412
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %33, i32 0, i32 2, !dbg !14413
  %call17 = call i32 @CustomData_get_stencil_layer(%struct.CustomData* %faceData, i32 5), !dbg !14414
  store i32 %call17, i32* %stencil, align 4, !dbg !14411
  %34 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !14415
  %faceData18 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %34, i32 0, i32 2, !dbg !14416
  %35 = load i32, i32* %stencil, align 4, !dbg !14417
  %call19 = call i8* @CustomData_get_layer_n(%struct.CustomData* %faceData18, i32 5, i32 %35), !dbg !14418
  %36 = bitcast i8* %call19 to %struct.MTFace*, !dbg !14418
  store %struct.MTFace* %36, %struct.MTFace** %tf_stencil_base, align 8, !dbg !14419
  br label %if.end20, !dbg !14420

if.end20:                                         ; preds = %if.then16, %if.end13
  store i32 0, i32* %i, align 4, !dbg !14421
  br label %for.cond, !dbg !14423

for.cond:                                         ; preds = %for.inc492, %if.end20
  %37 = load i32, i32* %i, align 4, !dbg !14424
  %38 = load i32, i32* %totface, align 4, !dbg !14426
  %cmp = icmp slt i32 %37, %38, !dbg !14427
  br i1 %cmp, label %for.body, label %for.end494, !dbg !14428

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f, metadata !14429, metadata !DIExpression()), !dbg !14431
  %39 = load %struct.CCGDerivedMesh*, %struct.CCGDerivedMesh** %ccgdm, align 8, !dbg !14432
  %faceMap = getelementptr inbounds %struct.CCGDerivedMesh, %struct.CCGDerivedMesh* %39, i32 0, i32 7, !dbg !14433
  %40 = load %struct.anon.1*, %struct.anon.1** %faceMap, align 8, !dbg !14433
  %41 = load i32, i32* %i, align 4, !dbg !14434
  %idxprom = sext i32 %41 to i64, !dbg !14432
  %arrayidx = getelementptr inbounds %struct.anon.1, %struct.anon.1* %40, i64 %idxprom, !dbg !14432
  %face = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx, i32 0, i32 3, !dbg !14435
  %42 = load %struct.CCGFace*, %struct.CCGFace** %face, align 8, !dbg !14435
  store %struct.CCGFace* %42, %struct.CCGFace** %f, align 8, !dbg !14431
  call void @llvm.dbg.declare(metadata i32* %S, metadata !14436, metadata !DIExpression()), !dbg !14437
  call void @llvm.dbg.declare(metadata i32* %x, metadata !14438, metadata !DIExpression()), !dbg !14439
  call void @llvm.dbg.declare(metadata i32* %y, metadata !14440, metadata !DIExpression()), !dbg !14441
  call void @llvm.dbg.declare(metadata i32* %numVerts, metadata !14442, metadata !DIExpression()), !dbg !14443
  %43 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !14444
  %call21 = call i32 @ccgSubSurf_getFaceNumVerts(%struct.CCGFace* %43), !dbg !14445
  store i32 %call21, i32* %numVerts, align 4, !dbg !14443
  call void @llvm.dbg.declare(metadata i32* %drawSmooth, metadata !14446, metadata !DIExpression()), !dbg !14447
  call void @llvm.dbg.declare(metadata i32* %index, metadata !14448, metadata !DIExpression()), !dbg !14449
  %44 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !14450
  %45 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !14451
  %call22 = call i32 @ccgDM_getFaceMapIndex(%struct.CCGSubSurf* %44, %struct.CCGFace* %45), !dbg !14452
  store i32 %call22, i32* %index, align 4, !dbg !14449
  call void @llvm.dbg.declare(metadata i32* %origIndex, metadata !14453, metadata !DIExpression()), !dbg !14454
  %46 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !14455
  %call23 = call i8* @ccgSubSurf_getFaceFaceHandle(%struct.CCGFace* %46), !dbg !14455
  %47 = ptrtoint i8* %call23 to i64, !dbg !14455
  %conv = trunc i64 %47 to i32, !dbg !14455
  store i32 %conv, i32* %origIndex, align 4, !dbg !14454
  call void @llvm.dbg.declare(metadata i8** %cp, metadata !14456, metadata !DIExpression()), !dbg !14457
  store i8* null, i8** %cp, align 8, !dbg !14457
  call void @llvm.dbg.declare(metadata [4 x [3 x i16]]** %ln, metadata !14458, metadata !DIExpression()), !dbg !14459
  store [4 x [3 x i16]]* null, [4 x [3 x i16]]** %ln, align 8, !dbg !14459
  call void @llvm.dbg.declare(metadata i32* %mat_nr, metadata !14460, metadata !DIExpression()), !dbg !14461
  %48 = load %struct.DMFlagMat*, %struct.DMFlagMat** %faceFlags, align 8, !dbg !14462
  %tobool24 = icmp ne %struct.DMFlagMat* %48, null, !dbg !14462
  br i1 %tobool24, label %if.then25, label %if.else, !dbg !14464

if.then25:                                        ; preds = %for.body
  %49 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !14465
  %tobool26 = icmp ne [4 x [3 x i16]]* %49, null, !dbg !14465
  br i1 %tobool26, label %lor.end, label %lor.rhs, !dbg !14467

lor.rhs:                                          ; preds = %if.then25
  %50 = load %struct.DMFlagMat*, %struct.DMFlagMat** %faceFlags, align 8, !dbg !14468
  %51 = load i32, i32* %origIndex, align 4, !dbg !14469
  %idxprom27 = sext i32 %51 to i64, !dbg !14468
  %arrayidx28 = getelementptr inbounds %struct.DMFlagMat, %struct.DMFlagMat* %50, i64 %idxprom27, !dbg !14468
  %flag29 = getelementptr inbounds %struct.DMFlagMat, %struct.DMFlagMat* %arrayidx28, i32 0, i32 1, !dbg !14470
  %52 = load i8, i8* %flag29, align 2, !dbg !14470
  %conv30 = zext i8 %52 to i32, !dbg !14468
  %and31 = and i32 %conv30, 1, !dbg !14471
  %tobool32 = icmp ne i32 %and31, 0, !dbg !14467
  br label %lor.end, !dbg !14467

lor.end:                                          ; preds = %lor.rhs, %if.then25
  %53 = phi i1 [ true, %if.then25 ], [ %tobool32, %lor.rhs ]
  %lor.ext = zext i1 %53 to i32, !dbg !14467
  store i32 %lor.ext, i32* %drawSmooth, align 4, !dbg !14472
  %54 = load %struct.DMFlagMat*, %struct.DMFlagMat** %faceFlags, align 8, !dbg !14473
  %55 = load i32, i32* %origIndex, align 4, !dbg !14474
  %idxprom33 = sext i32 %55 to i64, !dbg !14473
  %arrayidx34 = getelementptr inbounds %struct.DMFlagMat, %struct.DMFlagMat* %54, i64 %idxprom33, !dbg !14473
  %mat_nr35 = getelementptr inbounds %struct.DMFlagMat, %struct.DMFlagMat* %arrayidx34, i32 0, i32 0, !dbg !14475
  %56 = load i16, i16* %mat_nr35, align 2, !dbg !14475
  %conv36 = sext i16 %56 to i32, !dbg !14473
  store i32 %conv36, i32* %mat_nr, align 4, !dbg !14476
  br label %if.end37, !dbg !14477

if.else:                                          ; preds = %for.body
  store i32 1, i32* %drawSmooth, align 4, !dbg !14478
  store i32 0, i32* %mat_nr, align 4, !dbg !14480
  br label %if.end37

if.end37:                                         ; preds = %if.else, %lor.end
  %57 = load i32, i32* %flag.addr, align 4, !dbg !14481
  %and38 = and i32 %57, 8, !dbg !14483
  %tobool39 = icmp ne i32 %and38, 0, !dbg !14483
  br i1 %tobool39, label %if.then40, label %if.end55, !dbg !14484

if.then40:                                        ; preds = %if.end37
  %58 = load i32, i32* %mat_nr, align 4, !dbg !14485
  %59 = load i32, i32* %mat_nr_cache, align 4, !dbg !14488
  %cmp41 = icmp ne i32 %58, %59, !dbg !14489
  br i1 %cmp41, label %if.then43, label %if.end45, !dbg !14490

if.then43:                                        ; preds = %if.then40
  %60 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !14491
  %61 = load i32, i32* %mat_nr, align 4, !dbg !14493
  %call44 = call %struct.MTFace* @DM_paint_uvlayer_active_get(%struct.DerivedMesh* %60, i32 %61), !dbg !14494
  store %struct.MTFace* %call44, %struct.MTFace** %tf_base, align 8, !dbg !14495
  %62 = load i32, i32* %mat_nr, align 4, !dbg !14496
  store i32 %62, i32* %mat_nr_cache, align 4, !dbg !14497
  br label %if.end45, !dbg !14498

if.end45:                                         ; preds = %if.then43, %if.then40
  %63 = load %struct.MTFace*, %struct.MTFace** %tf_base, align 8, !dbg !14499
  %tobool46 = icmp ne %struct.MTFace* %63, null, !dbg !14499
  br i1 %tobool46, label %cond.true, label %cond.false, !dbg !14499

cond.true:                                        ; preds = %if.end45
  %64 = load %struct.MTFace*, %struct.MTFace** %tf_base, align 8, !dbg !14500
  %65 = load i32, i32* %gridOffset, align 4, !dbg !14501
  %idx.ext = sext i32 %65 to i64, !dbg !14502
  %add.ptr = getelementptr inbounds %struct.MTFace, %struct.MTFace* %64, i64 %idx.ext, !dbg !14502
  br label %cond.end, !dbg !14499

cond.false:                                       ; preds = %if.end45
  br label %cond.end, !dbg !14499

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.MTFace* [ %add.ptr, %cond.true ], [ null, %cond.false ], !dbg !14499
  store %struct.MTFace* %cond, %struct.MTFace** %tf, align 8, !dbg !14503
  %66 = load %struct.MTFace*, %struct.MTFace** %tf_stencil_base, align 8, !dbg !14504
  %tobool47 = icmp ne %struct.MTFace* %66, null, !dbg !14504
  br i1 %tobool47, label %cond.true48, label %cond.false51, !dbg !14504

cond.true48:                                      ; preds = %cond.end
  %67 = load %struct.MTFace*, %struct.MTFace** %tf_stencil_base, align 8, !dbg !14505
  %68 = load i32, i32* %gridOffset, align 4, !dbg !14506
  %idx.ext49 = sext i32 %68 to i64, !dbg !14507
  %add.ptr50 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %67, i64 %idx.ext49, !dbg !14507
  br label %cond.end52, !dbg !14504

cond.false51:                                     ; preds = %cond.end
  br label %cond.end52, !dbg !14504

cond.end52:                                       ; preds = %cond.false51, %cond.true48
  %cond53 = phi %struct.MTFace* [ %add.ptr50, %cond.true48 ], [ null, %cond.false51 ], !dbg !14504
  store %struct.MTFace* %cond53, %struct.MTFace** %tf_stencil, align 8, !dbg !14508
  %69 = load i32, i32* %gridFaces, align 4, !dbg !14509
  %70 = load i32, i32* %gridFaces, align 4, !dbg !14510
  %mul = mul nsw i32 %69, %70, !dbg !14511
  %71 = load i32, i32* %numVerts, align 4, !dbg !14512
  %mul54 = mul nsw i32 %mul, %71, !dbg !14513
  %72 = load i32, i32* %gridOffset, align 4, !dbg !14514
  %add = add nsw i32 %72, %mul54, !dbg !14514
  store i32 %add, i32* %gridOffset, align 4, !dbg !14514
  br label %if.end55, !dbg !14515

if.end55:                                         ; preds = %cond.end52, %if.end37
  %73 = load i32 (%struct.MTFace*, i8, i32)*, i32 (%struct.MTFace*, i8, i32)** %drawParams.addr, align 8, !dbg !14516
  %tobool56 = icmp ne i32 (%struct.MTFace*, i8, i32)* %73, null, !dbg !14516
  br i1 %tobool56, label %if.then57, label %if.else62, !dbg !14518

if.then57:                                        ; preds = %if.end55
  %74 = load i32 (%struct.MTFace*, i8, i32)*, i32 (%struct.MTFace*, i8, i32)** %drawParams.addr, align 8, !dbg !14519
  %75 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !14520
  %76 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !14521
  %cmp58 = icmp ne %struct.MCol* %76, null, !dbg !14522
  %conv59 = zext i1 %cmp58 to i32, !dbg !14522
  %conv60 = trunc i32 %conv59 to i8, !dbg !14523
  %77 = load i32, i32* %mat_nr, align 4, !dbg !14524
  %call61 = call i32 %74(%struct.MTFace* %75, i8 zeroext %conv60, i32 %77), !dbg !14519
  store i32 %call61, i32* %draw_option, align 4, !dbg !14525
  br label %if.end77, !dbg !14526

if.else62:                                        ; preds = %if.end55
  %78 = load i32, i32* %index, align 4, !dbg !14527
  %cmp63 = icmp ne i32 %78, -1, !dbg !14529
  br i1 %cmp63, label %if.then65, label %if.else72, !dbg !14530

if.then65:                                        ; preds = %if.else62
  %79 = load i32 (i8*, i32)*, i32 (i8*, i32)** %drawParamsMapped.addr, align 8, !dbg !14531
  %tobool66 = icmp ne i32 (i8*, i32)* %79, null, !dbg !14532
  br i1 %tobool66, label %cond.true67, label %cond.false69, !dbg !14532

cond.true67:                                      ; preds = %if.then65
  %80 = load i32 (i8*, i32)*, i32 (i8*, i32)** %drawParamsMapped.addr, align 8, !dbg !14533
  %81 = load i8*, i8** %userData.addr, align 8, !dbg !14534
  %82 = load i32, i32* %index, align 4, !dbg !14535
  %call68 = call i32 %80(i8* %81, i32 %82), !dbg !14533
  br label %cond.end70, !dbg !14532

cond.false69:                                     ; preds = %if.then65
  br label %cond.end70, !dbg !14532

cond.end70:                                       ; preds = %cond.false69, %cond.true67
  %cond71 = phi i32 [ %call68, %cond.true67 ], [ 1, %cond.false69 ], !dbg !14532
  store i32 %cond71, i32* %draw_option, align 4, !dbg !14536
  br label %if.end76, !dbg !14537

if.else72:                                        ; preds = %if.else62
  %83 = load i32, i32* %mat_nr, align 4, !dbg !14538
  %call73 = call i32 @GPU_enable_material(i32 %83, i8* null), !dbg !14539
  %tobool74 = icmp ne i32 %call73, 0, !dbg !14539
  %84 = zext i1 %tobool74 to i64, !dbg !14539
  %cond75 = select i1 %tobool74, i32 1, i32 0, !dbg !14539
  store i32 %cond75, i32* %draw_option, align 4, !dbg !14540
  br label %if.end76

if.end76:                                         ; preds = %if.else72, %cond.end70
  br label %if.end77

if.end77:                                         ; preds = %if.end76, %if.then57
  %85 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !14541
  %tobool78 = icmp ne [4 x [3 x i16]]* %85, null, !dbg !14541
  br i1 %tobool78, label %if.then79, label %if.end84, !dbg !14543

if.then79:                                        ; preds = %if.end77
  %86 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !14544
  store [4 x [3 x i16]]* %86, [4 x [3 x i16]]** %ln, align 8, !dbg !14546
  %87 = load i32, i32* %gridFaces, align 4, !dbg !14547
  %88 = load i32, i32* %gridFaces, align 4, !dbg !14548
  %mul80 = mul nsw i32 %87, %88, !dbg !14549
  %89 = load i32, i32* %numVerts, align 4, !dbg !14550
  %mul81 = mul nsw i32 %mul80, %89, !dbg !14551
  %90 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %lnors, align 8, !dbg !14552
  %idx.ext82 = sext i32 %mul81 to i64, !dbg !14552
  %add.ptr83 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %90, i64 %idx.ext82, !dbg !14552
  store [4 x [3 x i16]]* %add.ptr83, [4 x [3 x i16]]** %lnors, align 8, !dbg !14552
  br label %if.end84, !dbg !14553

if.end84:                                         ; preds = %if.then79, %if.end77
  %91 = load i32, i32* %draw_option, align 4, !dbg !14554
  %cmp85 = icmp eq i32 %91, 0, !dbg !14556
  br i1 %cmp85, label %if.then87, label %if.end103, !dbg !14557

if.then87:                                        ; preds = %if.end84
  %92 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !14558
  %tobool88 = icmp ne %struct.MTFace* %92, null, !dbg !14558
  br i1 %tobool88, label %if.then89, label %if.end94, !dbg !14561

if.then89:                                        ; preds = %if.then87
  %93 = load i32, i32* %gridFaces, align 4, !dbg !14562
  %94 = load i32, i32* %gridFaces, align 4, !dbg !14563
  %mul90 = mul nsw i32 %93, %94, !dbg !14564
  %95 = load i32, i32* %numVerts, align 4, !dbg !14565
  %mul91 = mul nsw i32 %mul90, %95, !dbg !14566
  %96 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !14567
  %idx.ext92 = sext i32 %mul91 to i64, !dbg !14567
  %add.ptr93 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %96, i64 %idx.ext92, !dbg !14567
  store %struct.MTFace* %add.ptr93, %struct.MTFace** %tf, align 8, !dbg !14567
  br label %if.end94, !dbg !14568

if.end94:                                         ; preds = %if.then89, %if.then87
  %97 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !14569
  %tobool95 = icmp ne %struct.MCol* %97, null, !dbg !14569
  br i1 %tobool95, label %if.then96, label %if.end102, !dbg !14571

if.then96:                                        ; preds = %if.end94
  %98 = load i32, i32* %gridFaces, align 4, !dbg !14572
  %99 = load i32, i32* %gridFaces, align 4, !dbg !14573
  %mul97 = mul nsw i32 %98, %99, !dbg !14574
  %100 = load i32, i32* %numVerts, align 4, !dbg !14575
  %mul98 = mul nsw i32 %mul97, %100, !dbg !14576
  %mul99 = mul nsw i32 %mul98, 4, !dbg !14577
  %101 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !14578
  %idx.ext100 = sext i32 %mul99 to i64, !dbg !14578
  %add.ptr101 = getelementptr inbounds %struct.MCol, %struct.MCol* %101, i64 %idx.ext100, !dbg !14578
  store %struct.MCol* %add.ptr101, %struct.MCol** %mcol, align 8, !dbg !14578
  br label %if.end102, !dbg !14579

if.end102:                                        ; preds = %if.then96, %if.end94
  br label %for.inc492, !dbg !14580

if.end103:                                        ; preds = %if.end84
  %102 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !14581
  %tobool104 = icmp ne %struct.MCol* %102, null, !dbg !14581
  br i1 %tobool104, label %if.then105, label %if.end115, !dbg !14583

if.then105:                                       ; preds = %if.end103
  %103 = load i32, i32* %draw_option, align 4, !dbg !14584
  %cmp106 = icmp ne i32 %103, 2, !dbg !14587
  br i1 %cmp106, label %if.then108, label %if.end109, !dbg !14588

if.then108:                                       ; preds = %if.then105
  %104 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !14589
  %105 = bitcast %struct.MCol* %104 to i8*, !dbg !14590
  store i8* %105, i8** %cp, align 8, !dbg !14591
  br label %if.end109, !dbg !14592

if.end109:                                        ; preds = %if.then108, %if.then105
  %106 = load i32, i32* %gridFaces, align 4, !dbg !14593
  %107 = load i32, i32* %gridFaces, align 4, !dbg !14594
  %mul110 = mul nsw i32 %106, %107, !dbg !14595
  %108 = load i32, i32* %numVerts, align 4, !dbg !14596
  %mul111 = mul nsw i32 %mul110, %108, !dbg !14597
  %mul112 = mul nsw i32 %mul111, 4, !dbg !14598
  %109 = load %struct.MCol*, %struct.MCol** %mcol, align 8, !dbg !14599
  %idx.ext113 = sext i32 %mul112 to i64, !dbg !14599
  %add.ptr114 = getelementptr inbounds %struct.MCol, %struct.MCol* %109, i64 %idx.ext113, !dbg !14599
  store %struct.MCol* %add.ptr114, %struct.MCol** %mcol, align 8, !dbg !14599
  br label %if.end115, !dbg !14600

if.end115:                                        ; preds = %if.end109, %if.end103
  store i32 0, i32* %S, align 4, !dbg !14601
  br label %for.cond116, !dbg !14603

for.cond116:                                      ; preds = %for.inc489, %if.end115
  %110 = load i32, i32* %S, align 4, !dbg !14604
  %111 = load i32, i32* %numVerts, align 4, !dbg !14606
  %cmp117 = icmp slt i32 %110, %111, !dbg !14607
  br i1 %cmp117, label %for.body119, label %for.end491, !dbg !14608

for.body119:                                      ; preds = %for.cond116
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %faceGridData, metadata !14609, metadata !DIExpression()), !dbg !14611
  %112 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss, align 8, !dbg !14612
  %113 = load %struct.CCGFace*, %struct.CCGFace** %f, align 8, !dbg !14613
  %114 = load i32, i32* %S, align 4, !dbg !14614
  %call120 = call i8* @ccgSubSurf_getFaceGridDataArray(%struct.CCGSubSurf* %112, %struct.CCGFace* %113, i32 %114), !dbg !14615
  %115 = bitcast i8* %call120 to %struct.CCGElem*, !dbg !14615
  store %struct.CCGElem* %115, %struct.CCGElem** %faceGridData, align 8, !dbg !14611
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %a, metadata !14616, metadata !DIExpression()), !dbg !14617
  call void @llvm.dbg.declare(metadata %struct.CCGElem** %b, metadata !14618, metadata !DIExpression()), !dbg !14619
  %116 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %ln, align 8, !dbg !14620
  %tobool121 = icmp ne [4 x [3 x i16]]* %116, null, !dbg !14620
  br i1 %tobool121, label %if.then122, label %if.else238, !dbg !14622

if.then122:                                       ; preds = %for.body119
  call void @glShadeModel(i32 7425), !dbg !14623
  call void @glBegin(i32 7), !dbg !14625
  store i32 0, i32* %y, align 4, !dbg !14626
  br label %for.cond123, !dbg !14628

for.cond123:                                      ; preds = %for.inc235, %if.then122
  %117 = load i32, i32* %y, align 4, !dbg !14629
  %118 = load i32, i32* %gridFaces, align 4, !dbg !14631
  %cmp124 = icmp slt i32 %117, %118, !dbg !14632
  br i1 %cmp124, label %for.body126, label %for.end237, !dbg !14633

for.body126:                                      ; preds = %for.cond123
  store i32 0, i32* %x, align 4, !dbg !14634
  br label %for.cond127, !dbg !14637

for.cond127:                                      ; preds = %for.inc, %for.body126
  %119 = load i32, i32* %x, align 4, !dbg !14638
  %120 = load i32, i32* %gridFaces, align 4, !dbg !14640
  %cmp128 = icmp slt i32 %119, %120, !dbg !14641
  br i1 %cmp128, label %for.body130, label %for.end, !dbg !14642

for.body130:                                      ; preds = %for.cond127
  call void @llvm.dbg.declare(metadata float** %a_co, metadata !14643, metadata !DIExpression()), !dbg !14645
  %121 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !14646
  %122 = load i32, i32* %x, align 4, !dbg !14647
  %123 = load i32, i32* %y, align 4, !dbg !14648
  %add131 = add nsw i32 %123, 0, !dbg !14649
  %call132 = call float* @CCG_grid_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %121, i32 %122, i32 %add131), !dbg !14650
  store float* %call132, float** %a_co, align 8, !dbg !14645
  call void @llvm.dbg.declare(metadata float** %b_co, metadata !14651, metadata !DIExpression()), !dbg !14652
  %124 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !14653
  %125 = load i32, i32* %x, align 4, !dbg !14654
  %add133 = add nsw i32 %125, 1, !dbg !14655
  %126 = load i32, i32* %y, align 4, !dbg !14656
  %add134 = add nsw i32 %126, 0, !dbg !14657
  %call135 = call float* @CCG_grid_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %124, i32 %add133, i32 %add134), !dbg !14658
  store float* %call135, float** %b_co, align 8, !dbg !14652
  call void @llvm.dbg.declare(metadata float** %c_co, metadata !14659, metadata !DIExpression()), !dbg !14660
  %127 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !14661
  %128 = load i32, i32* %x, align 4, !dbg !14662
  %add136 = add nsw i32 %128, 1, !dbg !14663
  %129 = load i32, i32* %y, align 4, !dbg !14664
  %add137 = add nsw i32 %129, 1, !dbg !14665
  %call138 = call float* @CCG_grid_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %127, i32 %add136, i32 %add137), !dbg !14666
  store float* %call138, float** %c_co, align 8, !dbg !14660
  call void @llvm.dbg.declare(metadata float** %d_co, metadata !14667, metadata !DIExpression()), !dbg !14668
  %130 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !14669
  %131 = load i32, i32* %x, align 4, !dbg !14670
  %132 = load i32, i32* %y, align 4, !dbg !14671
  %add139 = add nsw i32 %132, 1, !dbg !14672
  %call140 = call float* @CCG_grid_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %130, i32 %131, i32 %add139), !dbg !14673
  store float* %call140, float** %d_co, align 8, !dbg !14668
  %133 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !14674
  %tobool141 = icmp ne %struct.MTFace* %133, null, !dbg !14674
  br i1 %tobool141, label %if.then142, label %if.end144, !dbg !14676

if.then142:                                       ; preds = %for.body130
  %134 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !14677
  %uv = getelementptr inbounds %struct.MTFace, %struct.MTFace* %134, i32 0, i32 0, !dbg !14678
  %arrayidx143 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv, i64 0, i64 1, !dbg !14677
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %arrayidx143, i64 0, i64 0, !dbg !14677
  call void @glTexCoord2fv(float* %arraydecay), !dbg !14679
  br label %if.end144, !dbg !14679

if.end144:                                        ; preds = %if.then142, %for.body130
  %135 = load %struct.MTFace*, %struct.MTFace** %tf_stencil, align 8, !dbg !14680
  %tobool145 = icmp ne %struct.MTFace* %135, null, !dbg !14680
  br i1 %tobool145, label %if.then146, label %if.end150, !dbg !14682

if.then146:                                       ; preds = %if.end144
  %136 = load void (i32, float*)*, void (i32, float*)** @__glewMultiTexCoord2fv, align 8, !dbg !14683
  %137 = load %struct.MTFace*, %struct.MTFace** %tf_stencil, align 8, !dbg !14684
  %uv147 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %137, i32 0, i32 0, !dbg !14685
  %arrayidx148 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv147, i64 0, i64 1, !dbg !14684
  %arraydecay149 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx148, i64 0, i64 0, !dbg !14684
  call void %136(i32 33986, float* %arraydecay149), !dbg !14683
  br label %if.end150, !dbg !14683

if.end150:                                        ; preds = %if.then146, %if.end144
  %138 = load i8*, i8** %cp, align 8, !dbg !14686
  %tobool151 = icmp ne i8* %138, null, !dbg !14686
  br i1 %tobool151, label %if.then152, label %if.end156, !dbg !14688

if.then152:                                       ; preds = %if.end150
  %139 = load i8*, i8** %cp, align 8, !dbg !14689
  %arrayidx153 = getelementptr inbounds i8, i8* %139, i64 7, !dbg !14689
  %140 = load i8, i8* %arrayidx153, align 1, !dbg !14689
  %141 = load i8*, i8** %cp, align 8, !dbg !14690
  %arrayidx154 = getelementptr inbounds i8, i8* %141, i64 6, !dbg !14690
  %142 = load i8, i8* %arrayidx154, align 1, !dbg !14690
  %143 = load i8*, i8** %cp, align 8, !dbg !14691
  %arrayidx155 = getelementptr inbounds i8, i8* %143, i64 5, !dbg !14691
  %144 = load i8, i8* %arrayidx155, align 1, !dbg !14691
  call void @glColor3ub(i8 zeroext %140, i8 zeroext %142, i8 zeroext %144), !dbg !14692
  br label %if.end156, !dbg !14692

if.end156:                                        ; preds = %if.then152, %if.end150
  %145 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %ln, align 8, !dbg !14693
  %arrayidx157 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %145, i64 0, !dbg !14693
  %arrayidx158 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %arrayidx157, i64 0, i64 1, !dbg !14693
  %arraydecay159 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx158, i64 0, i64 0, !dbg !14693
  call void @glNormal3sv(i16* %arraydecay159), !dbg !14694
  %146 = load float*, float** %d_co, align 8, !dbg !14695
  call void @glVertex3fv(float* %146), !dbg !14696
  %147 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !14697
  %tobool160 = icmp ne %struct.MTFace* %147, null, !dbg !14697
  br i1 %tobool160, label %if.then161, label %if.end165, !dbg !14699

if.then161:                                       ; preds = %if.end156
  %148 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !14700
  %uv162 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %148, i32 0, i32 0, !dbg !14701
  %arrayidx163 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv162, i64 0, i64 2, !dbg !14700
  %arraydecay164 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx163, i64 0, i64 0, !dbg !14700
  call void @glTexCoord2fv(float* %arraydecay164), !dbg !14702
  br label %if.end165, !dbg !14702

if.end165:                                        ; preds = %if.then161, %if.end156
  %149 = load %struct.MTFace*, %struct.MTFace** %tf_stencil, align 8, !dbg !14703
  %tobool166 = icmp ne %struct.MTFace* %149, null, !dbg !14703
  br i1 %tobool166, label %if.then167, label %if.end171, !dbg !14705

if.then167:                                       ; preds = %if.end165
  %150 = load void (i32, float*)*, void (i32, float*)** @__glewMultiTexCoord2fv, align 8, !dbg !14706
  %151 = load %struct.MTFace*, %struct.MTFace** %tf_stencil, align 8, !dbg !14707
  %uv168 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %151, i32 0, i32 0, !dbg !14708
  %arrayidx169 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv168, i64 0, i64 2, !dbg !14707
  %arraydecay170 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx169, i64 0, i64 0, !dbg !14707
  call void %150(i32 33986, float* %arraydecay170), !dbg !14706
  br label %if.end171, !dbg !14706

if.end171:                                        ; preds = %if.then167, %if.end165
  %152 = load i8*, i8** %cp, align 8, !dbg !14709
  %tobool172 = icmp ne i8* %152, null, !dbg !14709
  br i1 %tobool172, label %if.then173, label %if.end177, !dbg !14711

if.then173:                                       ; preds = %if.end171
  %153 = load i8*, i8** %cp, align 8, !dbg !14712
  %arrayidx174 = getelementptr inbounds i8, i8* %153, i64 11, !dbg !14712
  %154 = load i8, i8* %arrayidx174, align 1, !dbg !14712
  %155 = load i8*, i8** %cp, align 8, !dbg !14713
  %arrayidx175 = getelementptr inbounds i8, i8* %155, i64 10, !dbg !14713
  %156 = load i8, i8* %arrayidx175, align 1, !dbg !14713
  %157 = load i8*, i8** %cp, align 8, !dbg !14714
  %arrayidx176 = getelementptr inbounds i8, i8* %157, i64 9, !dbg !14714
  %158 = load i8, i8* %arrayidx176, align 1, !dbg !14714
  call void @glColor3ub(i8 zeroext %154, i8 zeroext %156, i8 zeroext %158), !dbg !14715
  br label %if.end177, !dbg !14715

if.end177:                                        ; preds = %if.then173, %if.end171
  %159 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %ln, align 8, !dbg !14716
  %arrayidx178 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %159, i64 0, !dbg !14716
  %arrayidx179 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %arrayidx178, i64 0, i64 2, !dbg !14716
  %arraydecay180 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx179, i64 0, i64 0, !dbg !14716
  call void @glNormal3sv(i16* %arraydecay180), !dbg !14717
  %160 = load float*, float** %c_co, align 8, !dbg !14718
  call void @glVertex3fv(float* %160), !dbg !14719
  %161 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !14720
  %tobool181 = icmp ne %struct.MTFace* %161, null, !dbg !14720
  br i1 %tobool181, label %if.then182, label %if.end186, !dbg !14722

if.then182:                                       ; preds = %if.end177
  %162 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !14723
  %uv183 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %162, i32 0, i32 0, !dbg !14724
  %arrayidx184 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv183, i64 0, i64 3, !dbg !14723
  %arraydecay185 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx184, i64 0, i64 0, !dbg !14723
  call void @glTexCoord2fv(float* %arraydecay185), !dbg !14725
  br label %if.end186, !dbg !14725

if.end186:                                        ; preds = %if.then182, %if.end177
  %163 = load %struct.MTFace*, %struct.MTFace** %tf_stencil, align 8, !dbg !14726
  %tobool187 = icmp ne %struct.MTFace* %163, null, !dbg !14726
  br i1 %tobool187, label %if.then188, label %if.end192, !dbg !14728

if.then188:                                       ; preds = %if.end186
  %164 = load void (i32, float*)*, void (i32, float*)** @__glewMultiTexCoord2fv, align 8, !dbg !14729
  %165 = load %struct.MTFace*, %struct.MTFace** %tf_stencil, align 8, !dbg !14730
  %uv189 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %165, i32 0, i32 0, !dbg !14731
  %arrayidx190 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv189, i64 0, i64 3, !dbg !14730
  %arraydecay191 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx190, i64 0, i64 0, !dbg !14730
  call void %164(i32 33986, float* %arraydecay191), !dbg !14729
  br label %if.end192, !dbg !14729

if.end192:                                        ; preds = %if.then188, %if.end186
  %166 = load i8*, i8** %cp, align 8, !dbg !14732
  %tobool193 = icmp ne i8* %166, null, !dbg !14732
  br i1 %tobool193, label %if.then194, label %if.end198, !dbg !14734

if.then194:                                       ; preds = %if.end192
  %167 = load i8*, i8** %cp, align 8, !dbg !14735
  %arrayidx195 = getelementptr inbounds i8, i8* %167, i64 15, !dbg !14735
  %168 = load i8, i8* %arrayidx195, align 1, !dbg !14735
  %169 = load i8*, i8** %cp, align 8, !dbg !14736
  %arrayidx196 = getelementptr inbounds i8, i8* %169, i64 14, !dbg !14736
  %170 = load i8, i8* %arrayidx196, align 1, !dbg !14736
  %171 = load i8*, i8** %cp, align 8, !dbg !14737
  %arrayidx197 = getelementptr inbounds i8, i8* %171, i64 13, !dbg !14737
  %172 = load i8, i8* %arrayidx197, align 1, !dbg !14737
  call void @glColor3ub(i8 zeroext %168, i8 zeroext %170, i8 zeroext %172), !dbg !14738
  br label %if.end198, !dbg !14738

if.end198:                                        ; preds = %if.then194, %if.end192
  %173 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %ln, align 8, !dbg !14739
  %arrayidx199 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %173, i64 0, !dbg !14739
  %arrayidx200 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %arrayidx199, i64 0, i64 3, !dbg !14739
  %arraydecay201 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx200, i64 0, i64 0, !dbg !14739
  call void @glNormal3sv(i16* %arraydecay201), !dbg !14740
  %174 = load float*, float** %b_co, align 8, !dbg !14741
  call void @glVertex3fv(float* %174), !dbg !14742
  %175 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !14743
  %tobool202 = icmp ne %struct.MTFace* %175, null, !dbg !14743
  br i1 %tobool202, label %if.then203, label %if.end207, !dbg !14745

if.then203:                                       ; preds = %if.end198
  %176 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !14746
  %uv204 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %176, i32 0, i32 0, !dbg !14747
  %arrayidx205 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv204, i64 0, i64 0, !dbg !14746
  %arraydecay206 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx205, i64 0, i64 0, !dbg !14746
  call void @glTexCoord2fv(float* %arraydecay206), !dbg !14748
  br label %if.end207, !dbg !14748

if.end207:                                        ; preds = %if.then203, %if.end198
  %177 = load %struct.MTFace*, %struct.MTFace** %tf_stencil, align 8, !dbg !14749
  %tobool208 = icmp ne %struct.MTFace* %177, null, !dbg !14749
  br i1 %tobool208, label %if.then209, label %if.end213, !dbg !14751

if.then209:                                       ; preds = %if.end207
  %178 = load void (i32, float*)*, void (i32, float*)** @__glewMultiTexCoord2fv, align 8, !dbg !14752
  %179 = load %struct.MTFace*, %struct.MTFace** %tf_stencil, align 8, !dbg !14753
  %uv210 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %179, i32 0, i32 0, !dbg !14754
  %arrayidx211 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv210, i64 0, i64 0, !dbg !14753
  %arraydecay212 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx211, i64 0, i64 0, !dbg !14753
  call void %178(i32 33986, float* %arraydecay212), !dbg !14752
  br label %if.end213, !dbg !14752

if.end213:                                        ; preds = %if.then209, %if.end207
  %180 = load i8*, i8** %cp, align 8, !dbg !14755
  %tobool214 = icmp ne i8* %180, null, !dbg !14755
  br i1 %tobool214, label %if.then215, label %if.end219, !dbg !14757

if.then215:                                       ; preds = %if.end213
  %181 = load i8*, i8** %cp, align 8, !dbg !14758
  %arrayidx216 = getelementptr inbounds i8, i8* %181, i64 3, !dbg !14758
  %182 = load i8, i8* %arrayidx216, align 1, !dbg !14758
  %183 = load i8*, i8** %cp, align 8, !dbg !14759
  %arrayidx217 = getelementptr inbounds i8, i8* %183, i64 2, !dbg !14759
  %184 = load i8, i8* %arrayidx217, align 1, !dbg !14759
  %185 = load i8*, i8** %cp, align 8, !dbg !14760
  %arrayidx218 = getelementptr inbounds i8, i8* %185, i64 1, !dbg !14760
  %186 = load i8, i8* %arrayidx218, align 1, !dbg !14760
  call void @glColor3ub(i8 zeroext %182, i8 zeroext %184, i8 zeroext %186), !dbg !14761
  br label %if.end219, !dbg !14761

if.end219:                                        ; preds = %if.then215, %if.end213
  %187 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %ln, align 8, !dbg !14762
  %arrayidx220 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %187, i64 0, !dbg !14762
  %arrayidx221 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %arrayidx220, i64 0, i64 0, !dbg !14762
  %arraydecay222 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx221, i64 0, i64 0, !dbg !14762
  call void @glNormal3sv(i16* %arraydecay222), !dbg !14763
  %188 = load float*, float** %a_co, align 8, !dbg !14764
  call void @glVertex3fv(float* %188), !dbg !14765
  %189 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !14766
  %tobool223 = icmp ne %struct.MTFace* %189, null, !dbg !14766
  br i1 %tobool223, label %if.then224, label %if.end225, !dbg !14768

if.then224:                                       ; preds = %if.end219
  %190 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !14769
  %incdec.ptr = getelementptr inbounds %struct.MTFace, %struct.MTFace* %190, i32 1, !dbg !14769
  store %struct.MTFace* %incdec.ptr, %struct.MTFace** %tf, align 8, !dbg !14769
  br label %if.end225, !dbg !14770

if.end225:                                        ; preds = %if.then224, %if.end219
  %191 = load %struct.MTFace*, %struct.MTFace** %tf_stencil, align 8, !dbg !14771
  %tobool226 = icmp ne %struct.MTFace* %191, null, !dbg !14771
  br i1 %tobool226, label %if.then227, label %if.end229, !dbg !14773

if.then227:                                       ; preds = %if.end225
  %192 = load %struct.MTFace*, %struct.MTFace** %tf_stencil, align 8, !dbg !14774
  %incdec.ptr228 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %192, i32 1, !dbg !14774
  store %struct.MTFace* %incdec.ptr228, %struct.MTFace** %tf_stencil, align 8, !dbg !14774
  br label %if.end229, !dbg !14775

if.end229:                                        ; preds = %if.then227, %if.end225
  %193 = load i8*, i8** %cp, align 8, !dbg !14776
  %tobool230 = icmp ne i8* %193, null, !dbg !14776
  br i1 %tobool230, label %if.then231, label %if.end233, !dbg !14778

if.then231:                                       ; preds = %if.end229
  %194 = load i8*, i8** %cp, align 8, !dbg !14779
  %add.ptr232 = getelementptr inbounds i8, i8* %194, i64 16, !dbg !14779
  store i8* %add.ptr232, i8** %cp, align 8, !dbg !14779
  br label %if.end233, !dbg !14780

if.end233:                                        ; preds = %if.then231, %if.end229
  %195 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %ln, align 8, !dbg !14781
  %incdec.ptr234 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %195, i32 1, !dbg !14781
  store [4 x [3 x i16]]* %incdec.ptr234, [4 x [3 x i16]]** %ln, align 8, !dbg !14781
  br label %for.inc, !dbg !14782

for.inc:                                          ; preds = %if.end233
  %196 = load i32, i32* %x, align 4, !dbg !14783
  %inc = add nsw i32 %196, 1, !dbg !14783
  store i32 %inc, i32* %x, align 4, !dbg !14783
  br label %for.cond127, !dbg !14784, !llvm.loop !14785

for.end:                                          ; preds = %for.cond127
  br label %for.inc235, !dbg !14787

for.inc235:                                       ; preds = %for.end
  %197 = load i32, i32* %y, align 4, !dbg !14788
  %inc236 = add nsw i32 %197, 1, !dbg !14788
  store i32 %inc236, i32* %y, align 4, !dbg !14788
  br label %for.cond123, !dbg !14789, !llvm.loop !14790

for.end237:                                       ; preds = %for.cond123
  call void @glEnd(), !dbg !14792
  br label %if.end488, !dbg !14793

if.else238:                                       ; preds = %for.body119
  %198 = load i32, i32* %drawSmooth, align 4, !dbg !14794
  %tobool239 = icmp ne i32 %198, 0, !dbg !14794
  br i1 %tobool239, label %if.then240, label %if.else372, !dbg !14796

if.then240:                                       ; preds = %if.else238
  call void @glShadeModel(i32 7425), !dbg !14797
  store i32 0, i32* %y, align 4, !dbg !14799
  br label %for.cond241, !dbg !14801

for.cond241:                                      ; preds = %for.inc369, %if.then240
  %199 = load i32, i32* %y, align 4, !dbg !14802
  %200 = load i32, i32* %gridFaces, align 4, !dbg !14804
  %cmp242 = icmp slt i32 %199, %200, !dbg !14805
  br i1 %cmp242, label %for.body244, label %for.end371, !dbg !14806

for.body244:                                      ; preds = %for.cond241
  call void @glBegin(i32 8), !dbg !14807
  store i32 0, i32* %x, align 4, !dbg !14809
  br label %for.cond245, !dbg !14811

for.cond245:                                      ; preds = %for.inc310, %for.body244
  %201 = load i32, i32* %x, align 4, !dbg !14812
  %202 = load i32, i32* %gridFaces, align 4, !dbg !14814
  %cmp246 = icmp slt i32 %201, %202, !dbg !14815
  br i1 %cmp246, label %for.body248, label %for.end312, !dbg !14816

for.body248:                                      ; preds = %for.cond245
  %203 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !14817
  %204 = load i32, i32* %x, align 4, !dbg !14819
  %205 = load i32, i32* %y, align 4, !dbg !14820
  %add249 = add nsw i32 %205, 0, !dbg !14821
  %call250 = call %struct.CCGElem* @CCG_grid_elem(%struct.CCGKey* %key, %struct.CCGElem* %203, i32 %204, i32 %add249), !dbg !14822
  store %struct.CCGElem* %call250, %struct.CCGElem** %a, align 8, !dbg !14823
  %206 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !14824
  %207 = load i32, i32* %x, align 4, !dbg !14825
  %208 = load i32, i32* %y, align 4, !dbg !14826
  %add251 = add nsw i32 %208, 1, !dbg !14827
  %call252 = call %struct.CCGElem* @CCG_grid_elem(%struct.CCGKey* %key, %struct.CCGElem* %206, i32 %207, i32 %add251), !dbg !14828
  store %struct.CCGElem* %call252, %struct.CCGElem** %b, align 8, !dbg !14829
  %209 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !14830
  %tobool253 = icmp ne %struct.MTFace* %209, null, !dbg !14830
  br i1 %tobool253, label %if.then254, label %if.end258, !dbg !14832

if.then254:                                       ; preds = %for.body248
  %210 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !14833
  %uv255 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %210, i32 0, i32 0, !dbg !14834
  %arrayidx256 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv255, i64 0, i64 0, !dbg !14833
  %arraydecay257 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx256, i64 0, i64 0, !dbg !14833
  call void @glTexCoord2fv(float* %arraydecay257), !dbg !14835
  br label %if.end258, !dbg !14835

if.end258:                                        ; preds = %if.then254, %for.body248
  %211 = load %struct.MTFace*, %struct.MTFace** %tf_stencil, align 8, !dbg !14836
  %tobool259 = icmp ne %struct.MTFace* %211, null, !dbg !14836
  br i1 %tobool259, label %if.then260, label %if.end264, !dbg !14838

if.then260:                                       ; preds = %if.end258
  %212 = load void (i32, float*)*, void (i32, float*)** @__glewMultiTexCoord2fv, align 8, !dbg !14839
  %213 = load %struct.MTFace*, %struct.MTFace** %tf_stencil, align 8, !dbg !14840
  %uv261 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %213, i32 0, i32 0, !dbg !14841
  %arrayidx262 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv261, i64 0, i64 0, !dbg !14840
  %arraydecay263 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx262, i64 0, i64 0, !dbg !14840
  call void %212(i32 33986, float* %arraydecay263), !dbg !14839
  br label %if.end264, !dbg !14839

if.end264:                                        ; preds = %if.then260, %if.end258
  %214 = load i8*, i8** %cp, align 8, !dbg !14842
  %tobool265 = icmp ne i8* %214, null, !dbg !14842
  br i1 %tobool265, label %if.then266, label %if.end270, !dbg !14844

if.then266:                                       ; preds = %if.end264
  %215 = load i8*, i8** %cp, align 8, !dbg !14845
  %arrayidx267 = getelementptr inbounds i8, i8* %215, i64 3, !dbg !14845
  %216 = load i8, i8* %arrayidx267, align 1, !dbg !14845
  %217 = load i8*, i8** %cp, align 8, !dbg !14846
  %arrayidx268 = getelementptr inbounds i8, i8* %217, i64 2, !dbg !14846
  %218 = load i8, i8* %arrayidx268, align 1, !dbg !14846
  %219 = load i8*, i8** %cp, align 8, !dbg !14847
  %arrayidx269 = getelementptr inbounds i8, i8* %219, i64 1, !dbg !14847
  %220 = load i8, i8* %arrayidx269, align 1, !dbg !14847
  call void @glColor3ub(i8 zeroext %216, i8 zeroext %218, i8 zeroext %220), !dbg !14848
  br label %if.end270, !dbg !14848

if.end270:                                        ; preds = %if.then266, %if.end264
  %221 = load %struct.CCGElem*, %struct.CCGElem** %a, align 8, !dbg !14849
  %call271 = call float* @CCG_elem_no(%struct.CCGKey* %key, %struct.CCGElem* %221), !dbg !14850
  call void @glNormal3fv(float* %call271), !dbg !14851
  %222 = load %struct.CCGElem*, %struct.CCGElem** %a, align 8, !dbg !14852
  %call272 = call float* @CCG_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %222), !dbg !14853
  call void @glVertex3fv(float* %call272), !dbg !14854
  %223 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !14855
  %tobool273 = icmp ne %struct.MTFace* %223, null, !dbg !14855
  br i1 %tobool273, label %if.then274, label %if.end278, !dbg !14857

if.then274:                                       ; preds = %if.end270
  %224 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !14858
  %uv275 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %224, i32 0, i32 0, !dbg !14859
  %arrayidx276 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv275, i64 0, i64 1, !dbg !14858
  %arraydecay277 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx276, i64 0, i64 0, !dbg !14858
  call void @glTexCoord2fv(float* %arraydecay277), !dbg !14860
  br label %if.end278, !dbg !14860

if.end278:                                        ; preds = %if.then274, %if.end270
  %225 = load %struct.MTFace*, %struct.MTFace** %tf_stencil, align 8, !dbg !14861
  %tobool279 = icmp ne %struct.MTFace* %225, null, !dbg !14861
  br i1 %tobool279, label %if.then280, label %if.end284, !dbg !14863

if.then280:                                       ; preds = %if.end278
  %226 = load void (i32, float*)*, void (i32, float*)** @__glewMultiTexCoord2fv, align 8, !dbg !14864
  %227 = load %struct.MTFace*, %struct.MTFace** %tf_stencil, align 8, !dbg !14865
  %uv281 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %227, i32 0, i32 0, !dbg !14866
  %arrayidx282 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv281, i64 0, i64 1, !dbg !14865
  %arraydecay283 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx282, i64 0, i64 0, !dbg !14865
  call void %226(i32 33986, float* %arraydecay283), !dbg !14864
  br label %if.end284, !dbg !14864

if.end284:                                        ; preds = %if.then280, %if.end278
  %228 = load i8*, i8** %cp, align 8, !dbg !14867
  %tobool285 = icmp ne i8* %228, null, !dbg !14867
  br i1 %tobool285, label %if.then286, label %if.end290, !dbg !14869

if.then286:                                       ; preds = %if.end284
  %229 = load i8*, i8** %cp, align 8, !dbg !14870
  %arrayidx287 = getelementptr inbounds i8, i8* %229, i64 7, !dbg !14870
  %230 = load i8, i8* %arrayidx287, align 1, !dbg !14870
  %231 = load i8*, i8** %cp, align 8, !dbg !14871
  %arrayidx288 = getelementptr inbounds i8, i8* %231, i64 6, !dbg !14871
  %232 = load i8, i8* %arrayidx288, align 1, !dbg !14871
  %233 = load i8*, i8** %cp, align 8, !dbg !14872
  %arrayidx289 = getelementptr inbounds i8, i8* %233, i64 5, !dbg !14872
  %234 = load i8, i8* %arrayidx289, align 1, !dbg !14872
  call void @glColor3ub(i8 zeroext %230, i8 zeroext %232, i8 zeroext %234), !dbg !14873
  br label %if.end290, !dbg !14873

if.end290:                                        ; preds = %if.then286, %if.end284
  %235 = load %struct.CCGElem*, %struct.CCGElem** %b, align 8, !dbg !14874
  %call291 = call float* @CCG_elem_no(%struct.CCGKey* %key, %struct.CCGElem* %235), !dbg !14875
  call void @glNormal3fv(float* %call291), !dbg !14876
  %236 = load %struct.CCGElem*, %struct.CCGElem** %b, align 8, !dbg !14877
  %call292 = call float* @CCG_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %236), !dbg !14878
  call void @glVertex3fv(float* %call292), !dbg !14879
  %237 = load i32, i32* %x, align 4, !dbg !14880
  %238 = load i32, i32* %gridFaces, align 4, !dbg !14882
  %sub293 = sub nsw i32 %238, 1, !dbg !14883
  %cmp294 = icmp ne i32 %237, %sub293, !dbg !14884
  br i1 %cmp294, label %if.then296, label %if.end309, !dbg !14885

if.then296:                                       ; preds = %if.end290
  %239 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !14886
  %tobool297 = icmp ne %struct.MTFace* %239, null, !dbg !14886
  br i1 %tobool297, label %if.then298, label %if.end300, !dbg !14889

if.then298:                                       ; preds = %if.then296
  %240 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !14890
  %incdec.ptr299 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %240, i32 1, !dbg !14890
  store %struct.MTFace* %incdec.ptr299, %struct.MTFace** %tf, align 8, !dbg !14890
  br label %if.end300, !dbg !14891

if.end300:                                        ; preds = %if.then298, %if.then296
  %241 = load %struct.MTFace*, %struct.MTFace** %tf_stencil, align 8, !dbg !14892
  %tobool301 = icmp ne %struct.MTFace* %241, null, !dbg !14892
  br i1 %tobool301, label %if.then302, label %if.end304, !dbg !14894

if.then302:                                       ; preds = %if.end300
  %242 = load %struct.MTFace*, %struct.MTFace** %tf_stencil, align 8, !dbg !14895
  %incdec.ptr303 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %242, i32 1, !dbg !14895
  store %struct.MTFace* %incdec.ptr303, %struct.MTFace** %tf_stencil, align 8, !dbg !14895
  br label %if.end304, !dbg !14896

if.end304:                                        ; preds = %if.then302, %if.end300
  %243 = load i8*, i8** %cp, align 8, !dbg !14897
  %tobool305 = icmp ne i8* %243, null, !dbg !14897
  br i1 %tobool305, label %if.then306, label %if.end308, !dbg !14899

if.then306:                                       ; preds = %if.end304
  %244 = load i8*, i8** %cp, align 8, !dbg !14900
  %add.ptr307 = getelementptr inbounds i8, i8* %244, i64 16, !dbg !14900
  store i8* %add.ptr307, i8** %cp, align 8, !dbg !14900
  br label %if.end308, !dbg !14901

if.end308:                                        ; preds = %if.then306, %if.end304
  br label %if.end309, !dbg !14902

if.end309:                                        ; preds = %if.end308, %if.end290
  br label %for.inc310, !dbg !14903

for.inc310:                                       ; preds = %if.end309
  %245 = load i32, i32* %x, align 4, !dbg !14904
  %inc311 = add nsw i32 %245, 1, !dbg !14904
  store i32 %inc311, i32* %x, align 4, !dbg !14904
  br label %for.cond245, !dbg !14905, !llvm.loop !14906

for.end312:                                       ; preds = %for.cond245
  %246 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !14908
  %247 = load i32, i32* %x, align 4, !dbg !14909
  %248 = load i32, i32* %y, align 4, !dbg !14910
  %add313 = add nsw i32 %248, 0, !dbg !14911
  %call314 = call %struct.CCGElem* @CCG_grid_elem(%struct.CCGKey* %key, %struct.CCGElem* %246, i32 %247, i32 %add313), !dbg !14912
  store %struct.CCGElem* %call314, %struct.CCGElem** %a, align 8, !dbg !14913
  %249 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !14914
  %250 = load i32, i32* %x, align 4, !dbg !14915
  %251 = load i32, i32* %y, align 4, !dbg !14916
  %add315 = add nsw i32 %251, 1, !dbg !14917
  %call316 = call %struct.CCGElem* @CCG_grid_elem(%struct.CCGKey* %key, %struct.CCGElem* %249, i32 %250, i32 %add315), !dbg !14918
  store %struct.CCGElem* %call316, %struct.CCGElem** %b, align 8, !dbg !14919
  %252 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !14920
  %tobool317 = icmp ne %struct.MTFace* %252, null, !dbg !14920
  br i1 %tobool317, label %if.then318, label %if.end322, !dbg !14922

if.then318:                                       ; preds = %for.end312
  %253 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !14923
  %uv319 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %253, i32 0, i32 0, !dbg !14924
  %arrayidx320 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv319, i64 0, i64 3, !dbg !14923
  %arraydecay321 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx320, i64 0, i64 0, !dbg !14923
  call void @glTexCoord2fv(float* %arraydecay321), !dbg !14925
  br label %if.end322, !dbg !14925

if.end322:                                        ; preds = %if.then318, %for.end312
  %254 = load %struct.MTFace*, %struct.MTFace** %tf_stencil, align 8, !dbg !14926
  %tobool323 = icmp ne %struct.MTFace* %254, null, !dbg !14926
  br i1 %tobool323, label %if.then324, label %if.end328, !dbg !14928

if.then324:                                       ; preds = %if.end322
  %255 = load void (i32, float*)*, void (i32, float*)** @__glewMultiTexCoord2fv, align 8, !dbg !14929
  %256 = load %struct.MTFace*, %struct.MTFace** %tf_stencil, align 8, !dbg !14930
  %uv325 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %256, i32 0, i32 0, !dbg !14931
  %arrayidx326 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv325, i64 0, i64 3, !dbg !14930
  %arraydecay327 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx326, i64 0, i64 0, !dbg !14930
  call void %255(i32 33986, float* %arraydecay327), !dbg !14929
  br label %if.end328, !dbg !14929

if.end328:                                        ; preds = %if.then324, %if.end322
  %257 = load i8*, i8** %cp, align 8, !dbg !14932
  %tobool329 = icmp ne i8* %257, null, !dbg !14932
  br i1 %tobool329, label %if.then330, label %if.end334, !dbg !14934

if.then330:                                       ; preds = %if.end328
  %258 = load i8*, i8** %cp, align 8, !dbg !14935
  %arrayidx331 = getelementptr inbounds i8, i8* %258, i64 15, !dbg !14935
  %259 = load i8, i8* %arrayidx331, align 1, !dbg !14935
  %260 = load i8*, i8** %cp, align 8, !dbg !14936
  %arrayidx332 = getelementptr inbounds i8, i8* %260, i64 14, !dbg !14936
  %261 = load i8, i8* %arrayidx332, align 1, !dbg !14936
  %262 = load i8*, i8** %cp, align 8, !dbg !14937
  %arrayidx333 = getelementptr inbounds i8, i8* %262, i64 13, !dbg !14937
  %263 = load i8, i8* %arrayidx333, align 1, !dbg !14937
  call void @glColor3ub(i8 zeroext %259, i8 zeroext %261, i8 zeroext %263), !dbg !14938
  br label %if.end334, !dbg !14938

if.end334:                                        ; preds = %if.then330, %if.end328
  %264 = load %struct.CCGElem*, %struct.CCGElem** %a, align 8, !dbg !14939
  %call335 = call float* @CCG_elem_no(%struct.CCGKey* %key, %struct.CCGElem* %264), !dbg !14940
  call void @glNormal3fv(float* %call335), !dbg !14941
  %265 = load %struct.CCGElem*, %struct.CCGElem** %a, align 8, !dbg !14942
  %call336 = call float* @CCG_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %265), !dbg !14943
  call void @glVertex3fv(float* %call336), !dbg !14944
  %266 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !14945
  %tobool337 = icmp ne %struct.MTFace* %266, null, !dbg !14945
  br i1 %tobool337, label %if.then338, label %if.end342, !dbg !14947

if.then338:                                       ; preds = %if.end334
  %267 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !14948
  %uv339 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %267, i32 0, i32 0, !dbg !14949
  %arrayidx340 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv339, i64 0, i64 2, !dbg !14948
  %arraydecay341 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx340, i64 0, i64 0, !dbg !14948
  call void @glTexCoord2fv(float* %arraydecay341), !dbg !14950
  br label %if.end342, !dbg !14950

if.end342:                                        ; preds = %if.then338, %if.end334
  %268 = load %struct.MTFace*, %struct.MTFace** %tf_stencil, align 8, !dbg !14951
  %tobool343 = icmp ne %struct.MTFace* %268, null, !dbg !14951
  br i1 %tobool343, label %if.then344, label %if.end348, !dbg !14953

if.then344:                                       ; preds = %if.end342
  %269 = load void (i32, float*)*, void (i32, float*)** @__glewMultiTexCoord2fv, align 8, !dbg !14954
  %270 = load %struct.MTFace*, %struct.MTFace** %tf_stencil, align 8, !dbg !14955
  %uv345 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %270, i32 0, i32 0, !dbg !14956
  %arrayidx346 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv345, i64 0, i64 2, !dbg !14955
  %arraydecay347 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx346, i64 0, i64 0, !dbg !14955
  call void %269(i32 33986, float* %arraydecay347), !dbg !14954
  br label %if.end348, !dbg !14954

if.end348:                                        ; preds = %if.then344, %if.end342
  %271 = load i8*, i8** %cp, align 8, !dbg !14957
  %tobool349 = icmp ne i8* %271, null, !dbg !14957
  br i1 %tobool349, label %if.then350, label %if.end354, !dbg !14959

if.then350:                                       ; preds = %if.end348
  %272 = load i8*, i8** %cp, align 8, !dbg !14960
  %arrayidx351 = getelementptr inbounds i8, i8* %272, i64 11, !dbg !14960
  %273 = load i8, i8* %arrayidx351, align 1, !dbg !14960
  %274 = load i8*, i8** %cp, align 8, !dbg !14961
  %arrayidx352 = getelementptr inbounds i8, i8* %274, i64 10, !dbg !14961
  %275 = load i8, i8* %arrayidx352, align 1, !dbg !14961
  %276 = load i8*, i8** %cp, align 8, !dbg !14962
  %arrayidx353 = getelementptr inbounds i8, i8* %276, i64 9, !dbg !14962
  %277 = load i8, i8* %arrayidx353, align 1, !dbg !14962
  call void @glColor3ub(i8 zeroext %273, i8 zeroext %275, i8 zeroext %277), !dbg !14963
  br label %if.end354, !dbg !14963

if.end354:                                        ; preds = %if.then350, %if.end348
  %278 = load %struct.CCGElem*, %struct.CCGElem** %b, align 8, !dbg !14964
  %call355 = call float* @CCG_elem_no(%struct.CCGKey* %key, %struct.CCGElem* %278), !dbg !14965
  call void @glNormal3fv(float* %call355), !dbg !14966
  %279 = load %struct.CCGElem*, %struct.CCGElem** %b, align 8, !dbg !14967
  %call356 = call float* @CCG_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %279), !dbg !14968
  call void @glVertex3fv(float* %call356), !dbg !14969
  %280 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !14970
  %tobool357 = icmp ne %struct.MTFace* %280, null, !dbg !14970
  br i1 %tobool357, label %if.then358, label %if.end360, !dbg !14972

if.then358:                                       ; preds = %if.end354
  %281 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !14973
  %incdec.ptr359 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %281, i32 1, !dbg !14973
  store %struct.MTFace* %incdec.ptr359, %struct.MTFace** %tf, align 8, !dbg !14973
  br label %if.end360, !dbg !14974

if.end360:                                        ; preds = %if.then358, %if.end354
  %282 = load %struct.MTFace*, %struct.MTFace** %tf_stencil, align 8, !dbg !14975
  %tobool361 = icmp ne %struct.MTFace* %282, null, !dbg !14975
  br i1 %tobool361, label %if.then362, label %if.end364, !dbg !14977

if.then362:                                       ; preds = %if.end360
  %283 = load %struct.MTFace*, %struct.MTFace** %tf_stencil, align 8, !dbg !14978
  %incdec.ptr363 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %283, i32 1, !dbg !14978
  store %struct.MTFace* %incdec.ptr363, %struct.MTFace** %tf_stencil, align 8, !dbg !14978
  br label %if.end364, !dbg !14979

if.end364:                                        ; preds = %if.then362, %if.end360
  %284 = load i8*, i8** %cp, align 8, !dbg !14980
  %tobool365 = icmp ne i8* %284, null, !dbg !14980
  br i1 %tobool365, label %if.then366, label %if.end368, !dbg !14982

if.then366:                                       ; preds = %if.end364
  %285 = load i8*, i8** %cp, align 8, !dbg !14983
  %add.ptr367 = getelementptr inbounds i8, i8* %285, i64 16, !dbg !14983
  store i8* %add.ptr367, i8** %cp, align 8, !dbg !14983
  br label %if.end368, !dbg !14984

if.end368:                                        ; preds = %if.then366, %if.end364
  call void @glEnd(), !dbg !14985
  br label %for.inc369, !dbg !14986

for.inc369:                                       ; preds = %if.end368
  %286 = load i32, i32* %y, align 4, !dbg !14987
  %inc370 = add nsw i32 %286, 1, !dbg !14987
  store i32 %inc370, i32* %y, align 4, !dbg !14987
  br label %for.cond241, !dbg !14988, !llvm.loop !14989

for.end371:                                       ; preds = %for.cond241
  br label %if.end487, !dbg !14991

if.else372:                                       ; preds = %if.else238
  %287 = load i8*, i8** %cp, align 8, !dbg !14992
  %tobool373 = icmp ne i8* %287, null, !dbg !14994
  %288 = zext i1 %tobool373 to i64, !dbg !14994
  %cond374 = select i1 %tobool373, i32 7425, i32 7424, !dbg !14994
  call void @glShadeModel(i32 %cond374), !dbg !14995
  call void @glBegin(i32 7), !dbg !14996
  store i32 0, i32* %y, align 4, !dbg !14997
  br label %for.cond375, !dbg !14999

for.cond375:                                      ; preds = %for.inc484, %if.else372
  %289 = load i32, i32* %y, align 4, !dbg !15000
  %290 = load i32, i32* %gridFaces, align 4, !dbg !15002
  %cmp376 = icmp slt i32 %289, %290, !dbg !15003
  br i1 %cmp376, label %for.body378, label %for.end486, !dbg !15004

for.body378:                                      ; preds = %for.cond375
  store i32 0, i32* %x, align 4, !dbg !15005
  br label %for.cond379, !dbg !15008

for.cond379:                                      ; preds = %for.inc481, %for.body378
  %291 = load i32, i32* %x, align 4, !dbg !15009
  %292 = load i32, i32* %gridFaces, align 4, !dbg !15011
  %cmp380 = icmp slt i32 %291, %292, !dbg !15012
  br i1 %cmp380, label %for.body382, label %for.end483, !dbg !15013

for.body382:                                      ; preds = %for.cond379
  call void @llvm.dbg.declare(metadata float** %a_co383, metadata !15014, metadata !DIExpression()), !dbg !15016
  %293 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !15017
  %294 = load i32, i32* %x, align 4, !dbg !15018
  %295 = load i32, i32* %y, align 4, !dbg !15019
  %add384 = add nsw i32 %295, 0, !dbg !15020
  %call385 = call float* @CCG_grid_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %293, i32 %294, i32 %add384), !dbg !15021
  store float* %call385, float** %a_co383, align 8, !dbg !15016
  call void @llvm.dbg.declare(metadata float** %b_co386, metadata !15022, metadata !DIExpression()), !dbg !15023
  %296 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !15024
  %297 = load i32, i32* %x, align 4, !dbg !15025
  %add387 = add nsw i32 %297, 1, !dbg !15026
  %298 = load i32, i32* %y, align 4, !dbg !15027
  %add388 = add nsw i32 %298, 0, !dbg !15028
  %call389 = call float* @CCG_grid_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %296, i32 %add387, i32 %add388), !dbg !15029
  store float* %call389, float** %b_co386, align 8, !dbg !15023
  call void @llvm.dbg.declare(metadata float** %c_co390, metadata !15030, metadata !DIExpression()), !dbg !15031
  %299 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !15032
  %300 = load i32, i32* %x, align 4, !dbg !15033
  %add391 = add nsw i32 %300, 1, !dbg !15034
  %301 = load i32, i32* %y, align 4, !dbg !15035
  %add392 = add nsw i32 %301, 1, !dbg !15036
  %call393 = call float* @CCG_grid_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %299, i32 %add391, i32 %add392), !dbg !15037
  store float* %call393, float** %c_co390, align 8, !dbg !15031
  call void @llvm.dbg.declare(metadata float** %d_co394, metadata !15038, metadata !DIExpression()), !dbg !15039
  %302 = load %struct.CCGElem*, %struct.CCGElem** %faceGridData, align 8, !dbg !15040
  %303 = load i32, i32* %x, align 4, !dbg !15041
  %304 = load i32, i32* %y, align 4, !dbg !15042
  %add395 = add nsw i32 %304, 1, !dbg !15043
  %call396 = call float* @CCG_grid_elem_co(%struct.CCGKey* %key, %struct.CCGElem* %302, i32 %303, i32 %add395), !dbg !15044
  store float* %call396, float** %d_co394, align 8, !dbg !15039
  %305 = load float*, float** %a_co383, align 8, !dbg !15045
  %306 = load float*, float** %b_co386, align 8, !dbg !15046
  %307 = load float*, float** %c_co390, align 8, !dbg !15047
  %308 = load float*, float** %d_co394, align 8, !dbg !15048
  call void @ccgDM_glNormalFast(float* %305, float* %306, float* %307, float* %308), !dbg !15049
  %309 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !15050
  %tobool397 = icmp ne %struct.MTFace* %309, null, !dbg !15050
  br i1 %tobool397, label %if.then398, label %if.end402, !dbg !15052

if.then398:                                       ; preds = %for.body382
  %310 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !15053
  %uv399 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %310, i32 0, i32 0, !dbg !15054
  %arrayidx400 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv399, i64 0, i64 1, !dbg !15053
  %arraydecay401 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx400, i64 0, i64 0, !dbg !15053
  call void @glTexCoord2fv(float* %arraydecay401), !dbg !15055
  br label %if.end402, !dbg !15055

if.end402:                                        ; preds = %if.then398, %for.body382
  %311 = load %struct.MTFace*, %struct.MTFace** %tf_stencil, align 8, !dbg !15056
  %tobool403 = icmp ne %struct.MTFace* %311, null, !dbg !15056
  br i1 %tobool403, label %if.then404, label %if.end408, !dbg !15058

if.then404:                                       ; preds = %if.end402
  %312 = load void (i32, float*)*, void (i32, float*)** @__glewMultiTexCoord2fv, align 8, !dbg !15059
  %313 = load %struct.MTFace*, %struct.MTFace** %tf_stencil, align 8, !dbg !15060
  %uv405 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %313, i32 0, i32 0, !dbg !15061
  %arrayidx406 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv405, i64 0, i64 1, !dbg !15060
  %arraydecay407 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx406, i64 0, i64 0, !dbg !15060
  call void %312(i32 33986, float* %arraydecay407), !dbg !15059
  br label %if.end408, !dbg !15059

if.end408:                                        ; preds = %if.then404, %if.end402
  %314 = load i8*, i8** %cp, align 8, !dbg !15062
  %tobool409 = icmp ne i8* %314, null, !dbg !15062
  br i1 %tobool409, label %if.then410, label %if.end414, !dbg !15064

if.then410:                                       ; preds = %if.end408
  %315 = load i8*, i8** %cp, align 8, !dbg !15065
  %arrayidx411 = getelementptr inbounds i8, i8* %315, i64 7, !dbg !15065
  %316 = load i8, i8* %arrayidx411, align 1, !dbg !15065
  %317 = load i8*, i8** %cp, align 8, !dbg !15066
  %arrayidx412 = getelementptr inbounds i8, i8* %317, i64 6, !dbg !15066
  %318 = load i8, i8* %arrayidx412, align 1, !dbg !15066
  %319 = load i8*, i8** %cp, align 8, !dbg !15067
  %arrayidx413 = getelementptr inbounds i8, i8* %319, i64 5, !dbg !15067
  %320 = load i8, i8* %arrayidx413, align 1, !dbg !15067
  call void @glColor3ub(i8 zeroext %316, i8 zeroext %318, i8 zeroext %320), !dbg !15068
  br label %if.end414, !dbg !15068

if.end414:                                        ; preds = %if.then410, %if.end408
  %321 = load float*, float** %d_co394, align 8, !dbg !15069
  call void @glVertex3fv(float* %321), !dbg !15070
  %322 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !15071
  %tobool415 = icmp ne %struct.MTFace* %322, null, !dbg !15071
  br i1 %tobool415, label %if.then416, label %if.end420, !dbg !15073

if.then416:                                       ; preds = %if.end414
  %323 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !15074
  %uv417 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %323, i32 0, i32 0, !dbg !15075
  %arrayidx418 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv417, i64 0, i64 2, !dbg !15074
  %arraydecay419 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx418, i64 0, i64 0, !dbg !15074
  call void @glTexCoord2fv(float* %arraydecay419), !dbg !15076
  br label %if.end420, !dbg !15076

if.end420:                                        ; preds = %if.then416, %if.end414
  %324 = load %struct.MTFace*, %struct.MTFace** %tf_stencil, align 8, !dbg !15077
  %tobool421 = icmp ne %struct.MTFace* %324, null, !dbg !15077
  br i1 %tobool421, label %if.then422, label %if.end426, !dbg !15079

if.then422:                                       ; preds = %if.end420
  %325 = load void (i32, float*)*, void (i32, float*)** @__glewMultiTexCoord2fv, align 8, !dbg !15080
  %326 = load %struct.MTFace*, %struct.MTFace** %tf_stencil, align 8, !dbg !15081
  %uv423 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %326, i32 0, i32 0, !dbg !15082
  %arrayidx424 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv423, i64 0, i64 2, !dbg !15081
  %arraydecay425 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx424, i64 0, i64 0, !dbg !15081
  call void %325(i32 33986, float* %arraydecay425), !dbg !15080
  br label %if.end426, !dbg !15080

if.end426:                                        ; preds = %if.then422, %if.end420
  %327 = load i8*, i8** %cp, align 8, !dbg !15083
  %tobool427 = icmp ne i8* %327, null, !dbg !15083
  br i1 %tobool427, label %if.then428, label %if.end432, !dbg !15085

if.then428:                                       ; preds = %if.end426
  %328 = load i8*, i8** %cp, align 8, !dbg !15086
  %arrayidx429 = getelementptr inbounds i8, i8* %328, i64 11, !dbg !15086
  %329 = load i8, i8* %arrayidx429, align 1, !dbg !15086
  %330 = load i8*, i8** %cp, align 8, !dbg !15087
  %arrayidx430 = getelementptr inbounds i8, i8* %330, i64 10, !dbg !15087
  %331 = load i8, i8* %arrayidx430, align 1, !dbg !15087
  %332 = load i8*, i8** %cp, align 8, !dbg !15088
  %arrayidx431 = getelementptr inbounds i8, i8* %332, i64 9, !dbg !15088
  %333 = load i8, i8* %arrayidx431, align 1, !dbg !15088
  call void @glColor3ub(i8 zeroext %329, i8 zeroext %331, i8 zeroext %333), !dbg !15089
  br label %if.end432, !dbg !15089

if.end432:                                        ; preds = %if.then428, %if.end426
  %334 = load float*, float** %c_co390, align 8, !dbg !15090
  call void @glVertex3fv(float* %334), !dbg !15091
  %335 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !15092
  %tobool433 = icmp ne %struct.MTFace* %335, null, !dbg !15092
  br i1 %tobool433, label %if.then434, label %if.end438, !dbg !15094

if.then434:                                       ; preds = %if.end432
  %336 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !15095
  %uv435 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %336, i32 0, i32 0, !dbg !15096
  %arrayidx436 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv435, i64 0, i64 3, !dbg !15095
  %arraydecay437 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx436, i64 0, i64 0, !dbg !15095
  call void @glTexCoord2fv(float* %arraydecay437), !dbg !15097
  br label %if.end438, !dbg !15097

if.end438:                                        ; preds = %if.then434, %if.end432
  %337 = load %struct.MTFace*, %struct.MTFace** %tf_stencil, align 8, !dbg !15098
  %tobool439 = icmp ne %struct.MTFace* %337, null, !dbg !15098
  br i1 %tobool439, label %if.then440, label %if.end444, !dbg !15100

if.then440:                                       ; preds = %if.end438
  %338 = load void (i32, float*)*, void (i32, float*)** @__glewMultiTexCoord2fv, align 8, !dbg !15101
  %339 = load %struct.MTFace*, %struct.MTFace** %tf_stencil, align 8, !dbg !15102
  %uv441 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %339, i32 0, i32 0, !dbg !15103
  %arrayidx442 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv441, i64 0, i64 3, !dbg !15102
  %arraydecay443 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx442, i64 0, i64 0, !dbg !15102
  call void %338(i32 33986, float* %arraydecay443), !dbg !15101
  br label %if.end444, !dbg !15101

if.end444:                                        ; preds = %if.then440, %if.end438
  %340 = load i8*, i8** %cp, align 8, !dbg !15104
  %tobool445 = icmp ne i8* %340, null, !dbg !15104
  br i1 %tobool445, label %if.then446, label %if.end450, !dbg !15106

if.then446:                                       ; preds = %if.end444
  %341 = load i8*, i8** %cp, align 8, !dbg !15107
  %arrayidx447 = getelementptr inbounds i8, i8* %341, i64 15, !dbg !15107
  %342 = load i8, i8* %arrayidx447, align 1, !dbg !15107
  %343 = load i8*, i8** %cp, align 8, !dbg !15108
  %arrayidx448 = getelementptr inbounds i8, i8* %343, i64 14, !dbg !15108
  %344 = load i8, i8* %arrayidx448, align 1, !dbg !15108
  %345 = load i8*, i8** %cp, align 8, !dbg !15109
  %arrayidx449 = getelementptr inbounds i8, i8* %345, i64 13, !dbg !15109
  %346 = load i8, i8* %arrayidx449, align 1, !dbg !15109
  call void @glColor3ub(i8 zeroext %342, i8 zeroext %344, i8 zeroext %346), !dbg !15110
  br label %if.end450, !dbg !15110

if.end450:                                        ; preds = %if.then446, %if.end444
  %347 = load float*, float** %b_co386, align 8, !dbg !15111
  call void @glVertex3fv(float* %347), !dbg !15112
  %348 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !15113
  %tobool451 = icmp ne %struct.MTFace* %348, null, !dbg !15113
  br i1 %tobool451, label %if.then452, label %if.end456, !dbg !15115

if.then452:                                       ; preds = %if.end450
  %349 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !15116
  %uv453 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %349, i32 0, i32 0, !dbg !15117
  %arrayidx454 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv453, i64 0, i64 0, !dbg !15116
  %arraydecay455 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx454, i64 0, i64 0, !dbg !15116
  call void @glTexCoord2fv(float* %arraydecay455), !dbg !15118
  br label %if.end456, !dbg !15118

if.end456:                                        ; preds = %if.then452, %if.end450
  %350 = load %struct.MTFace*, %struct.MTFace** %tf_stencil, align 8, !dbg !15119
  %tobool457 = icmp ne %struct.MTFace* %350, null, !dbg !15119
  br i1 %tobool457, label %if.then458, label %if.end462, !dbg !15121

if.then458:                                       ; preds = %if.end456
  %351 = load void (i32, float*)*, void (i32, float*)** @__glewMultiTexCoord2fv, align 8, !dbg !15122
  %352 = load %struct.MTFace*, %struct.MTFace** %tf_stencil, align 8, !dbg !15123
  %uv459 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %352, i32 0, i32 0, !dbg !15124
  %arrayidx460 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv459, i64 0, i64 0, !dbg !15123
  %arraydecay461 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx460, i64 0, i64 0, !dbg !15123
  call void %351(i32 33986, float* %arraydecay461), !dbg !15122
  br label %if.end462, !dbg !15122

if.end462:                                        ; preds = %if.then458, %if.end456
  %353 = load i8*, i8** %cp, align 8, !dbg !15125
  %tobool463 = icmp ne i8* %353, null, !dbg !15125
  br i1 %tobool463, label %if.then464, label %if.end468, !dbg !15127

if.then464:                                       ; preds = %if.end462
  %354 = load i8*, i8** %cp, align 8, !dbg !15128
  %arrayidx465 = getelementptr inbounds i8, i8* %354, i64 3, !dbg !15128
  %355 = load i8, i8* %arrayidx465, align 1, !dbg !15128
  %356 = load i8*, i8** %cp, align 8, !dbg !15129
  %arrayidx466 = getelementptr inbounds i8, i8* %356, i64 2, !dbg !15129
  %357 = load i8, i8* %arrayidx466, align 1, !dbg !15129
  %358 = load i8*, i8** %cp, align 8, !dbg !15130
  %arrayidx467 = getelementptr inbounds i8, i8* %358, i64 1, !dbg !15130
  %359 = load i8, i8* %arrayidx467, align 1, !dbg !15130
  call void @glColor3ub(i8 zeroext %355, i8 zeroext %357, i8 zeroext %359), !dbg !15131
  br label %if.end468, !dbg !15131

if.end468:                                        ; preds = %if.then464, %if.end462
  %360 = load float*, float** %a_co383, align 8, !dbg !15132
  call void @glVertex3fv(float* %360), !dbg !15133
  %361 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !15134
  %tobool469 = icmp ne %struct.MTFace* %361, null, !dbg !15134
  br i1 %tobool469, label %if.then470, label %if.end472, !dbg !15136

if.then470:                                       ; preds = %if.end468
  %362 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !15137
  %incdec.ptr471 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %362, i32 1, !dbg !15137
  store %struct.MTFace* %incdec.ptr471, %struct.MTFace** %tf, align 8, !dbg !15137
  br label %if.end472, !dbg !15138

if.end472:                                        ; preds = %if.then470, %if.end468
  %363 = load %struct.MTFace*, %struct.MTFace** %tf_stencil, align 8, !dbg !15139
  %tobool473 = icmp ne %struct.MTFace* %363, null, !dbg !15139
  br i1 %tobool473, label %if.then474, label %if.end476, !dbg !15141

if.then474:                                       ; preds = %if.end472
  %364 = load %struct.MTFace*, %struct.MTFace** %tf_stencil, align 8, !dbg !15142
  %incdec.ptr475 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %364, i32 1, !dbg !15142
  store %struct.MTFace* %incdec.ptr475, %struct.MTFace** %tf_stencil, align 8, !dbg !15142
  br label %if.end476, !dbg !15143

if.end476:                                        ; preds = %if.then474, %if.end472
  %365 = load i8*, i8** %cp, align 8, !dbg !15144
  %tobool477 = icmp ne i8* %365, null, !dbg !15144
  br i1 %tobool477, label %if.then478, label %if.end480, !dbg !15146

if.then478:                                       ; preds = %if.end476
  %366 = load i8*, i8** %cp, align 8, !dbg !15147
  %add.ptr479 = getelementptr inbounds i8, i8* %366, i64 16, !dbg !15147
  store i8* %add.ptr479, i8** %cp, align 8, !dbg !15147
  br label %if.end480, !dbg !15148

if.end480:                                        ; preds = %if.then478, %if.end476
  br label %for.inc481, !dbg !15149

for.inc481:                                       ; preds = %if.end480
  %367 = load i32, i32* %x, align 4, !dbg !15150
  %inc482 = add nsw i32 %367, 1, !dbg !15150
  store i32 %inc482, i32* %x, align 4, !dbg !15150
  br label %for.cond379, !dbg !15151, !llvm.loop !15152

for.end483:                                       ; preds = %for.cond379
  br label %for.inc484, !dbg !15154

for.inc484:                                       ; preds = %for.end483
  %368 = load i32, i32* %y, align 4, !dbg !15155
  %inc485 = add nsw i32 %368, 1, !dbg !15155
  store i32 %inc485, i32* %y, align 4, !dbg !15155
  br label %for.cond375, !dbg !15156, !llvm.loop !15157

for.end486:                                       ; preds = %for.cond375
  call void @glEnd(), !dbg !15159
  br label %if.end487

if.end487:                                        ; preds = %for.end486, %for.end371
  br label %if.end488

if.end488:                                        ; preds = %if.end487, %for.end237
  br label %for.inc489, !dbg !15160

for.inc489:                                       ; preds = %if.end488
  %369 = load i32, i32* %S, align 4, !dbg !15161
  %inc490 = add nsw i32 %369, 1, !dbg !15161
  store i32 %inc490, i32* %S, align 4, !dbg !15161
  br label %for.cond116, !dbg !15162, !llvm.loop !15163

for.end491:                                       ; preds = %for.cond116
  br label %for.inc492, !dbg !15165

for.inc492:                                       ; preds = %for.end491, %if.end102
  %370 = load i32, i32* %i, align 4, !dbg !15166
  %inc493 = add nsw i32 %370, 1, !dbg !15166
  store i32 %inc493, i32* %i, align 4, !dbg !15166
  br label %for.cond, !dbg !15167, !llvm.loop !15168

for.end494:                                       ; preds = %for.cond
  ret void, !dbg !15170
}

declare dso_local i32 @CustomData_get_stencil_layer(%struct.CustomData*, i32) #2

declare dso_local i8* @CustomData_get_layer_n(%struct.CustomData*, i32, i32) #2

declare dso_local %struct.MTFace* @DM_paint_uvlayer_active_get(%struct.DerivedMesh*, i32) #2

declare dso_local i32 @GPU_enable_material(i32, i8*) #2

declare dso_local void @glTexCoord2fv(float*) #2

declare dso_local void @glEnable(i32) #2

declare dso_local void @glPolygonStipple(i8*) #2

declare dso_local void @glDisable(i32) #2

declare dso_local void @DM_vertex_attributes_from_gpu(%struct.DerivedMesh*, %struct.GPUVertexAttribs*, %struct.DMVertexAttribs*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @ccgdm_draw_attrib_vertex(%struct.DMVertexAttribs* %attribs, i32 %a, i32 %index, i32 %vert) #0 !dbg !15171 {
entry:
  %attribs.addr = alloca %struct.DMVertexAttribs*, align 8
  %a.addr = alloca i32, align 4
  %index.addr = alloca i32, align 4
  %vert.addr = alloca i32, align 4
  %zero = alloca [4 x float], align 16
  %b = alloca i32, align 4
  %array = alloca [3 x float]*, align 8
  %orco2 = alloca float*, align 8
  %uv = alloca float*, align 8
  %tf = alloca %struct.MTFace*, align 8
  %col = alloca [4 x i8], align 1
  %cp = alloca %struct.MCol*, align 8
  %array76 = alloca [4 x float]*, align 8
  %tang78 = alloca float*, align 8
  store %struct.DMVertexAttribs* %attribs, %struct.DMVertexAttribs** %attribs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DMVertexAttribs** %attribs.addr, metadata !15175, metadata !DIExpression()), !dbg !15176
  store i32 %a, i32* %a.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %a.addr, metadata !15177, metadata !DIExpression()), !dbg !15178
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !15179, metadata !DIExpression()), !dbg !15180
  store i32 %vert, i32* %vert.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %vert.addr, metadata !15181, metadata !DIExpression()), !dbg !15182
  call void @llvm.dbg.declare(metadata [4 x float]* %zero, metadata !15183, metadata !DIExpression()), !dbg !15185
  %0 = bitcast [4 x float]* %zero to i8*, !dbg !15185
  call void @llvm.memset.p0i8.i64(i8* align 16 %0, i8 0, i64 16, i1 false), !dbg !15185
  call void @llvm.dbg.declare(metadata i32* %b, metadata !15186, metadata !DIExpression()), !dbg !15187
  %1 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !15188
  %totorco = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %1, i32 0, i32 7, !dbg !15190
  %2 = load i32, i32* %totorco, align 4, !dbg !15190
  %tobool = icmp ne i32 %2, 0, !dbg !15188
  br i1 %tobool, label %if.then, label %if.end9, !dbg !15191

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [3 x float]** %array, metadata !15192, metadata !DIExpression()), !dbg !15194
  %3 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !15195
  %orco = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %3, i32 0, i32 3, !dbg !15196
  %array1 = getelementptr inbounds %struct.anon.7, %struct.anon.7* %orco, i32 0, i32 0, !dbg !15197
  %4 = load [3 x float]*, [3 x float]** %array1, align 8, !dbg !15197
  store [3 x float]* %4, [3 x float]** %array, align 8, !dbg !15194
  call void @llvm.dbg.declare(metadata float** %orco2, metadata !15198, metadata !DIExpression()), !dbg !15199
  %5 = load [3 x float]*, [3 x float]** %array, align 8, !dbg !15200
  %tobool3 = icmp ne [3 x float]* %5, null, !dbg !15201
  br i1 %tobool3, label %cond.true, label %cond.false, !dbg !15201

cond.true:                                        ; preds = %if.then
  %6 = load [3 x float]*, [3 x float]** %array, align 8, !dbg !15202
  %7 = load i32, i32* %index.addr, align 4, !dbg !15203
  %idxprom = sext i32 %7 to i64, !dbg !15202
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %6, i64 %idxprom, !dbg !15202
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !15202
  br label %cond.end, !dbg !15201

cond.false:                                       ; preds = %if.then
  %arraydecay4 = getelementptr inbounds [4 x float], [4 x float]* %zero, i64 0, i64 0, !dbg !15204
  br label %cond.end, !dbg !15201

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float* [ %arraydecay, %cond.true ], [ %arraydecay4, %cond.false ], !dbg !15201
  store float* %cond, float** %orco2, align 8, !dbg !15199
  %8 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !15205
  %orco5 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %8, i32 0, i32 3, !dbg !15207
  %gl_texco = getelementptr inbounds %struct.anon.7, %struct.anon.7* %orco5, i32 0, i32 3, !dbg !15208
  %9 = load i32, i32* %gl_texco, align 8, !dbg !15208
  %tobool6 = icmp ne i32 %9, 0, !dbg !15205
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !15209

if.then7:                                         ; preds = %cond.end
  %10 = load float*, float** %orco2, align 8, !dbg !15210
  call void @glTexCoord3fv(float* %10), !dbg !15211
  br label %if.end, !dbg !15211

if.else:                                          ; preds = %cond.end
  %11 = load void (i32, float*)*, void (i32, float*)** @__glewVertexAttrib3fvARB, align 8, !dbg !15212
  %12 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !15213
  %orco8 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %12, i32 0, i32 3, !dbg !15214
  %gl_index = getelementptr inbounds %struct.anon.7, %struct.anon.7* %orco8, i32 0, i32 2, !dbg !15215
  %13 = load i32, i32* %gl_index, align 4, !dbg !15215
  %14 = load float*, float** %orco2, align 8, !dbg !15216
  call void %11(i32 %13, float* %14), !dbg !15212
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then7
  br label %if.end9, !dbg !15217

if.end9:                                          ; preds = %if.end, %entry
  store i32 0, i32* %b, align 4, !dbg !15218
  br label %for.cond, !dbg !15220

for.cond:                                         ; preds = %for.inc, %if.end9
  %15 = load i32, i32* %b, align 4, !dbg !15221
  %16 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !15223
  %tottface = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %16, i32 0, i32 4, !dbg !15224
  %17 = load i32, i32* %tottface, align 8, !dbg !15224
  %cmp = icmp slt i32 %15, %17, !dbg !15225
  br i1 %cmp, label %for.body, label %for.end, !dbg !15226

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float** %uv, metadata !15227, metadata !DIExpression()), !dbg !15229
  %18 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !15230
  %tface = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %18, i32 0, i32 0, !dbg !15232
  %19 = load i32, i32* %b, align 4, !dbg !15233
  %idxprom10 = sext i32 %19 to i64, !dbg !15230
  %arrayidx11 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %tface, i64 0, i64 %idxprom10, !dbg !15230
  %array12 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %arrayidx11, i32 0, i32 0, !dbg !15234
  %20 = load %struct.MTFace*, %struct.MTFace** %array12, align 8, !dbg !15234
  %tobool13 = icmp ne %struct.MTFace* %20, null, !dbg !15230
  br i1 %tobool13, label %if.then14, label %if.else25, !dbg !15235

if.then14:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.MTFace** %tf, metadata !15236, metadata !DIExpression()), !dbg !15238
  %21 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !15239
  %tface15 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %21, i32 0, i32 0, !dbg !15240
  %22 = load i32, i32* %b, align 4, !dbg !15241
  %idxprom16 = sext i32 %22 to i64, !dbg !15239
  %arrayidx17 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %tface15, i64 0, i64 %idxprom16, !dbg !15239
  %array18 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %arrayidx17, i32 0, i32 0, !dbg !15242
  %23 = load %struct.MTFace*, %struct.MTFace** %array18, align 8, !dbg !15242
  %24 = load i32, i32* %a.addr, align 4, !dbg !15243
  %idxprom19 = sext i32 %24 to i64, !dbg !15239
  %arrayidx20 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %23, i64 %idxprom19, !dbg !15239
  store %struct.MTFace* %arrayidx20, %struct.MTFace** %tf, align 8, !dbg !15238
  %25 = load %struct.MTFace*, %struct.MTFace** %tf, align 8, !dbg !15244
  %uv21 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %25, i32 0, i32 0, !dbg !15245
  %26 = load i32, i32* %vert.addr, align 4, !dbg !15246
  %idxprom22 = sext i32 %26 to i64, !dbg !15244
  %arrayidx23 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv21, i64 0, i64 %idxprom22, !dbg !15244
  %arraydecay24 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx23, i64 0, i64 0, !dbg !15244
  store float* %arraydecay24, float** %uv, align 8, !dbg !15247
  br label %if.end27, !dbg !15248

if.else25:                                        ; preds = %for.body
  %arraydecay26 = getelementptr inbounds [4 x float], [4 x float]* %zero, i64 0, i64 0, !dbg !15249
  store float* %arraydecay26, float** %uv, align 8, !dbg !15251
  br label %if.end27

if.end27:                                         ; preds = %if.else25, %if.then14
  %27 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !15252
  %tface28 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %27, i32 0, i32 0, !dbg !15254
  %28 = load i32, i32* %b, align 4, !dbg !15255
  %idxprom29 = sext i32 %28 to i64, !dbg !15252
  %arrayidx30 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %tface28, i64 0, i64 %idxprom29, !dbg !15252
  %gl_texco31 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %arrayidx30, i32 0, i32 3, !dbg !15256
  %29 = load i32, i32* %gl_texco31, align 8, !dbg !15256
  %tobool32 = icmp ne i32 %29, 0, !dbg !15252
  br i1 %tobool32, label %if.then33, label %if.else34, !dbg !15257

if.then33:                                        ; preds = %if.end27
  %30 = load float*, float** %uv, align 8, !dbg !15258
  call void @glTexCoord2fv(float* %30), !dbg !15259
  br label %if.end39, !dbg !15259

if.else34:                                        ; preds = %if.end27
  %31 = load void (i32, float*)*, void (i32, float*)** @__glewVertexAttrib2fvARB, align 8, !dbg !15260
  %32 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !15261
  %tface35 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %32, i32 0, i32 0, !dbg !15262
  %33 = load i32, i32* %b, align 4, !dbg !15263
  %idxprom36 = sext i32 %33 to i64, !dbg !15261
  %arrayidx37 = getelementptr inbounds [8 x %struct.anon.4], [8 x %struct.anon.4]* %tface35, i64 0, i64 %idxprom36, !dbg !15261
  %gl_index38 = getelementptr inbounds %struct.anon.4, %struct.anon.4* %arrayidx37, i32 0, i32 2, !dbg !15264
  %34 = load i32, i32* %gl_index38, align 4, !dbg !15264
  %35 = load float*, float** %uv, align 8, !dbg !15265
  call void %31(i32 %34, float* %35), !dbg !15260
  br label %if.end39

if.end39:                                         ; preds = %if.else34, %if.then33
  br label %for.inc, !dbg !15266

for.inc:                                          ; preds = %if.end39
  %36 = load i32, i32* %b, align 4, !dbg !15267
  %inc = add nsw i32 %36, 1, !dbg !15267
  store i32 %inc, i32* %b, align 4, !dbg !15267
  br label %for.cond, !dbg !15268, !llvm.loop !15269

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %b, align 4, !dbg !15271
  br label %for.cond40, !dbg !15273

for.cond40:                                       ; preds = %for.inc71, %for.end
  %37 = load i32, i32* %b, align 4, !dbg !15274
  %38 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !15276
  %totmcol = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %38, i32 0, i32 5, !dbg !15277
  %39 = load i32, i32* %totmcol, align 4, !dbg !15277
  %cmp41 = icmp slt i32 %37, %39, !dbg !15278
  br i1 %cmp41, label %for.body42, label %for.end73, !dbg !15279

for.body42:                                       ; preds = %for.cond40
  call void @llvm.dbg.declare(metadata [4 x i8]* %col, metadata !15280, metadata !DIExpression()), !dbg !15285
  %40 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !15286
  %mcol = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %40, i32 0, i32 1, !dbg !15288
  %41 = load i32, i32* %b, align 4, !dbg !15289
  %idxprom43 = sext i32 %41 to i64, !dbg !15286
  %arrayidx44 = getelementptr inbounds [8 x %struct.anon.5], [8 x %struct.anon.5]* %mcol, i64 0, i64 %idxprom43, !dbg !15286
  %array45 = getelementptr inbounds %struct.anon.5, %struct.anon.5* %arrayidx44, i32 0, i32 0, !dbg !15290
  %42 = load %struct.MCol*, %struct.MCol** %array45, align 8, !dbg !15290
  %tobool46 = icmp ne %struct.MCol* %42, null, !dbg !15286
  br i1 %tobool46, label %if.then47, label %if.else60, !dbg !15291

if.then47:                                        ; preds = %for.body42
  call void @llvm.dbg.declare(metadata %struct.MCol** %cp, metadata !15292, metadata !DIExpression()), !dbg !15294
  %43 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !15295
  %mcol48 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %43, i32 0, i32 1, !dbg !15296
  %44 = load i32, i32* %b, align 4, !dbg !15297
  %idxprom49 = sext i32 %44 to i64, !dbg !15295
  %arrayidx50 = getelementptr inbounds [8 x %struct.anon.5], [8 x %struct.anon.5]* %mcol48, i64 0, i64 %idxprom49, !dbg !15295
  %array51 = getelementptr inbounds %struct.anon.5, %struct.anon.5* %arrayidx50, i32 0, i32 0, !dbg !15298
  %45 = load %struct.MCol*, %struct.MCol** %array51, align 8, !dbg !15298
  %46 = load i32, i32* %a.addr, align 4, !dbg !15299
  %mul = mul nsw i32 %46, 4, !dbg !15300
  %47 = load i32, i32* %vert.addr, align 4, !dbg !15301
  %add = add nsw i32 %mul, %47, !dbg !15302
  %idxprom52 = sext i32 %add to i64, !dbg !15295
  %arrayidx53 = getelementptr inbounds %struct.MCol, %struct.MCol* %45, i64 %idxprom52, !dbg !15295
  store %struct.MCol* %arrayidx53, %struct.MCol** %cp, align 8, !dbg !15294
  %48 = load %struct.MCol*, %struct.MCol** %cp, align 8, !dbg !15303
  %b54 = getelementptr inbounds %struct.MCol, %struct.MCol* %48, i32 0, i32 3, !dbg !15304
  %49 = load i8, i8* %b54, align 1, !dbg !15304
  %arrayidx55 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 0, !dbg !15305
  store i8 %49, i8* %arrayidx55, align 1, !dbg !15306
  %50 = load %struct.MCol*, %struct.MCol** %cp, align 8, !dbg !15307
  %g = getelementptr inbounds %struct.MCol, %struct.MCol* %50, i32 0, i32 2, !dbg !15308
  %51 = load i8, i8* %g, align 1, !dbg !15308
  %arrayidx56 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 1, !dbg !15309
  store i8 %51, i8* %arrayidx56, align 1, !dbg !15310
  %52 = load %struct.MCol*, %struct.MCol** %cp, align 8, !dbg !15311
  %r = getelementptr inbounds %struct.MCol, %struct.MCol* %52, i32 0, i32 1, !dbg !15312
  %53 = load i8, i8* %r, align 1, !dbg !15312
  %arrayidx57 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 2, !dbg !15313
  store i8 %53, i8* %arrayidx57, align 1, !dbg !15314
  %54 = load %struct.MCol*, %struct.MCol** %cp, align 8, !dbg !15315
  %a58 = getelementptr inbounds %struct.MCol, %struct.MCol* %54, i32 0, i32 0, !dbg !15316
  %55 = load i8, i8* %a58, align 1, !dbg !15316
  %arrayidx59 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 3, !dbg !15317
  store i8 %55, i8* %arrayidx59, align 1, !dbg !15318
  br label %if.end65, !dbg !15319

if.else60:                                        ; preds = %for.body42
  %arrayidx61 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 0, !dbg !15320
  store i8 0, i8* %arrayidx61, align 1, !dbg !15322
  %arrayidx62 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 1, !dbg !15323
  store i8 0, i8* %arrayidx62, align 1, !dbg !15324
  %arrayidx63 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 2, !dbg !15325
  store i8 0, i8* %arrayidx63, align 1, !dbg !15326
  %arrayidx64 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 3, !dbg !15327
  store i8 0, i8* %arrayidx64, align 1, !dbg !15328
  br label %if.end65

if.end65:                                         ; preds = %if.else60, %if.then47
  %56 = load void (i32, i8*)*, void (i32, i8*)** @__glewVertexAttrib4ubvARB, align 8, !dbg !15329
  %57 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !15330
  %mcol66 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %57, i32 0, i32 1, !dbg !15331
  %58 = load i32, i32* %b, align 4, !dbg !15332
  %idxprom67 = sext i32 %58 to i64, !dbg !15330
  %arrayidx68 = getelementptr inbounds [8 x %struct.anon.5], [8 x %struct.anon.5]* %mcol66, i64 0, i64 %idxprom67, !dbg !15330
  %gl_index69 = getelementptr inbounds %struct.anon.5, %struct.anon.5* %arrayidx68, i32 0, i32 2, !dbg !15333
  %59 = load i32, i32* %gl_index69, align 4, !dbg !15333
  %arraydecay70 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 0, !dbg !15334
  call void %56(i32 %59, i8* %arraydecay70), !dbg !15329
  br label %for.inc71, !dbg !15335

for.inc71:                                        ; preds = %if.end65
  %60 = load i32, i32* %b, align 4, !dbg !15336
  %inc72 = add nsw i32 %60, 1, !dbg !15336
  store i32 %inc72, i32* %b, align 4, !dbg !15336
  br label %for.cond40, !dbg !15337, !llvm.loop !15338

for.end73:                                        ; preds = %for.cond40
  %61 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !15340
  %tottang = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %61, i32 0, i32 6, !dbg !15342
  %62 = load i32, i32* %tottang, align 8, !dbg !15342
  %tobool74 = icmp ne i32 %62, 0, !dbg !15340
  br i1 %tobool74, label %if.then75, label %if.end92, !dbg !15343

if.then75:                                        ; preds = %for.end73
  call void @llvm.dbg.declare(metadata [4 x float]** %array76, metadata !15344, metadata !DIExpression()), !dbg !15346
  %63 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !15347
  %tang = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %63, i32 0, i32 2, !dbg !15348
  %array77 = getelementptr inbounds %struct.anon.6, %struct.anon.6* %tang, i32 0, i32 0, !dbg !15349
  %64 = load [4 x float]*, [4 x float]** %array77, align 8, !dbg !15349
  store [4 x float]* %64, [4 x float]** %array76, align 8, !dbg !15346
  call void @llvm.dbg.declare(metadata float** %tang78, metadata !15350, metadata !DIExpression()), !dbg !15351
  %65 = load [4 x float]*, [4 x float]** %array76, align 8, !dbg !15352
  %tobool79 = icmp ne [4 x float]* %65, null, !dbg !15353
  br i1 %tobool79, label %cond.true80, label %cond.false86, !dbg !15353

cond.true80:                                      ; preds = %if.then75
  %66 = load [4 x float]*, [4 x float]** %array76, align 8, !dbg !15354
  %67 = load i32, i32* %a.addr, align 4, !dbg !15355
  %mul81 = mul nsw i32 %67, 4, !dbg !15356
  %68 = load i32, i32* %vert.addr, align 4, !dbg !15357
  %add82 = add nsw i32 %mul81, %68, !dbg !15358
  %idxprom83 = sext i32 %add82 to i64, !dbg !15354
  %arrayidx84 = getelementptr inbounds [4 x float], [4 x float]* %66, i64 %idxprom83, !dbg !15354
  %arraydecay85 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx84, i64 0, i64 0, !dbg !15354
  br label %cond.end88, !dbg !15353

cond.false86:                                     ; preds = %if.then75
  %arraydecay87 = getelementptr inbounds [4 x float], [4 x float]* %zero, i64 0, i64 0, !dbg !15359
  br label %cond.end88, !dbg !15353

cond.end88:                                       ; preds = %cond.false86, %cond.true80
  %cond89 = phi float* [ %arraydecay85, %cond.true80 ], [ %arraydecay87, %cond.false86 ], !dbg !15353
  store float* %cond89, float** %tang78, align 8, !dbg !15351
  %69 = load void (i32, float*)*, void (i32, float*)** @__glewVertexAttrib4fvARB, align 8, !dbg !15360
  %70 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !15361
  %tang90 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %70, i32 0, i32 2, !dbg !15362
  %gl_index91 = getelementptr inbounds %struct.anon.6, %struct.anon.6* %tang90, i32 0, i32 2, !dbg !15363
  %71 = load i32, i32* %gl_index91, align 4, !dbg !15363
  %72 = load float*, float** %tang78, align 8, !dbg !15364
  call void %69(i32 %71, float* %72), !dbg !15360
  br label %if.end92, !dbg !15365

if.end92:                                         ; preds = %cond.end88, %for.end73
  ret void, !dbg !15366
}

declare dso_local void @glTexCoord3fv(float*) #2

declare dso_local void @glVertex2fv(float*) #2

declare dso_local i32 @DM_release(%struct.DerivedMesh*) #2

declare dso_local i32 @BLI_findindex(%struct.ListBase*, i8*) #2

declare dso_local void @multires_modifier_update_mdisps(%struct.DerivedMesh*) #2

declare dso_local void @multires_modifier_update_hidden(%struct.DerivedMesh*) #2

declare dso_local void @BLI_edgehash_free(%struct.EdgeHash*, void (i8*)*) #2

declare dso_local i8* @CustomData_get_n(%struct.CustomData*, i32, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v2_v2(float* %r, float* %a) #0 !dbg !15367 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !15368, metadata !DIExpression()), !dbg !15369
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !15370, metadata !DIExpression()), !dbg !15371
  %0 = load float*, float** %a.addr, align 8, !dbg !15372
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !15372
  %1 = load float, float* %arrayidx, align 4, !dbg !15372
  %2 = load float*, float** %r.addr, align 8, !dbg !15373
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !15373
  store float %1, float* %arrayidx1, align 4, !dbg !15374
  %3 = load float*, float** %a.addr, align 8, !dbg !15375
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !15375
  %4 = load float, float* %arrayidx2, align 4, !dbg !15375
  %5 = load float*, float** %r.addr, align 8, !dbg !15376
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !15376
  store float %4, float* %arrayidx3, align 4, !dbg !15377
  ret void, !dbg !15378
}

declare dso_local i8* @CustomData_get(%struct.CustomData*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @ss_sync_from_uv(%struct.CCGSubSurf* %ss, %struct.CCGSubSurf* %origss, %struct.DerivedMesh* %dm, %struct.MLoopUV* %mloopuv) #0 !dbg !15379 {
entry:
  %retval = alloca i32, align 4
  %ss.addr = alloca %struct.CCGSubSurf*, align 8
  %origss.addr = alloca %struct.CCGSubSurf*, align 8
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %mloopuv.addr = alloca %struct.MLoopUV*, align 8
  %mpoly = alloca %struct.MPoly*, align 8
  %mloop = alloca %struct.MLoop*, align 8
  %mvert = alloca %struct.MVert*, align 8
  %totvert = alloca i32, align 4
  %totface = alloca i32, align 4
  %i = alloca i32, align 4
  %seam = alloca i32, align 4
  %v = alloca %struct.UvMapVert*, align 8
  %vmap = alloca %struct.UvVertMap*, align 8
  %limit = alloca [2 x float], align 4
  %eset = alloca %struct.EdgeSet*, align 8
  %creaseFactor = alloca float, align 4
  %uv = alloca [3 x float], align 4
  %ssv = alloca %struct.CCGVert*, align 8
  %loopid = alloca i32, align 4
  %vhdl = alloca i8*, align 8
  %mp = alloca %struct.MPoly*, align 8
  %nverts = alloca i32, align 4
  %j = alloca i32, align 4
  %j_next = alloca i32, align 4
  %origf = alloca %struct.CCGFace*, align 8
  %ml = alloca %struct.MLoop*, align 8
  %saved_stack = alloca i8*, align 8
  %__vla_expr0 = alloca i64, align 8
  %v0 = alloca i32, align 4
  %v1 = alloca i32, align 4
  %mv0 = alloca %struct.MVert*, align 8
  %mv1 = alloca %struct.MVert*, align 8
  %e = alloca %struct.CCGEdge*, align 8
  %orige = alloca %struct.CCGEdge*, align 8
  %ehdl = alloca i8*, align 8
  %crease = alloca float, align 4
  %mp114 = alloca %struct.MPoly*, align 8
  %ml117 = alloca %struct.MLoop*, align 8
  %nverts121 = alloca i32, align 4
  %f123 = alloca %struct.CCGFace*, align 8
  %saved_stack124 = alloca i8*, align 8
  %__vla_expr1 = alloca i64, align 8
  store %struct.CCGSubSurf* %ss, %struct.CCGSubSurf** %ss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %ss.addr, metadata !15382, metadata !DIExpression()), !dbg !15383
  store %struct.CCGSubSurf* %origss, %struct.CCGSubSurf** %origss.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.CCGSubSurf** %origss.addr, metadata !15384, metadata !DIExpression()), !dbg !15385
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !15386, metadata !DIExpression()), !dbg !15387
  store %struct.MLoopUV* %mloopuv, %struct.MLoopUV** %mloopuv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %mloopuv.addr, metadata !15388, metadata !DIExpression()), !dbg !15389
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpoly, metadata !15390, metadata !DIExpression()), !dbg !15391
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !15392
  %getPolyArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 35, !dbg !15393
  %1 = load %struct.MPoly* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)** %getPolyArray, align 8, !dbg !15393
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !15394
  %call = call %struct.MPoly* %1(%struct.DerivedMesh* %2), !dbg !15392
  store %struct.MPoly* %call, %struct.MPoly** %mpoly, align 8, !dbg !15391
  call void @llvm.dbg.declare(metadata %struct.MLoop** %mloop, metadata !15395, metadata !DIExpression()), !dbg !15396
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !15397
  %getLoopArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %3, i32 0, i32 34, !dbg !15398
  %4 = load %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)** %getLoopArray, align 8, !dbg !15398
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !15399
  %call1 = call %struct.MLoop* %4(%struct.DerivedMesh* %5), !dbg !15397
  store %struct.MLoop* %call1, %struct.MLoop** %mloop, align 8, !dbg !15396
  call void @llvm.dbg.declare(metadata %struct.MVert** %mvert, metadata !15400, metadata !DIExpression()), !dbg !15401
  %6 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !15402
  %getVertArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %6, i32 0, i32 31, !dbg !15403
  %7 = load %struct.MVert* (%struct.DerivedMesh*)*, %struct.MVert* (%struct.DerivedMesh*)** %getVertArray, align 8, !dbg !15403
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !15404
  %call2 = call %struct.MVert* %7(%struct.DerivedMesh* %8), !dbg !15402
  store %struct.MVert* %call2, %struct.MVert** %mvert, align 8, !dbg !15401
  call void @llvm.dbg.declare(metadata i32* %totvert, metadata !15405, metadata !DIExpression()), !dbg !15406
  %9 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !15407
  %getNumVerts = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %9, i32 0, i32 23, !dbg !15408
  %10 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumVerts, align 8, !dbg !15408
  %11 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !15409
  %call3 = call i32 %10(%struct.DerivedMesh* %11), !dbg !15407
  store i32 %call3, i32* %totvert, align 4, !dbg !15406
  call void @llvm.dbg.declare(metadata i32* %totface, metadata !15410, metadata !DIExpression()), !dbg !15411
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !15412
  %getNumPolys = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %12, i32 0, i32 27, !dbg !15413
  %13 = load i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)** %getNumPolys, align 8, !dbg !15413
  %14 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !15414
  %call4 = call i32 %13(%struct.DerivedMesh* %14), !dbg !15412
  store i32 %call4, i32* %totface, align 4, !dbg !15411
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15415, metadata !DIExpression()), !dbg !15416
  call void @llvm.dbg.declare(metadata i32* %seam, metadata !15417, metadata !DIExpression()), !dbg !15418
  call void @llvm.dbg.declare(metadata %struct.UvMapVert** %v, metadata !15419, metadata !DIExpression()), !dbg !15430
  call void @llvm.dbg.declare(metadata %struct.UvVertMap** %vmap, metadata !15431, metadata !DIExpression()), !dbg !15439
  call void @llvm.dbg.declare(metadata [2 x float]* %limit, metadata !15440, metadata !DIExpression()), !dbg !15441
  call void @llvm.dbg.declare(metadata %struct.EdgeSet** %eset, metadata !15442, metadata !DIExpression()), !dbg !15446
  call void @llvm.dbg.declare(metadata float* %creaseFactor, metadata !15447, metadata !DIExpression()), !dbg !15448
  %15 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !15449
  %call5 = call i32 @ccgSubSurf_getSubdivisionLevels(%struct.CCGSubSurf* %15), !dbg !15450
  %conv = sitofp i32 %call5 to float, !dbg !15451
  store float %conv, float* %creaseFactor, align 4, !dbg !15448
  call void @llvm.dbg.declare(metadata [3 x float]* %uv, metadata !15452, metadata !DIExpression()), !dbg !15453
  %16 = bitcast [3 x float]* %uv to i8*, !dbg !15453
  call void @llvm.memset.p0i8.i64(i8* align 4 %16, i8 0, i64 12, i1 false), !dbg !15453
  %arrayidx = getelementptr inbounds [2 x float], [2 x float]* %limit, i64 0, i64 1, !dbg !15454
  store float 0x3F1A36E2E0000000, float* %arrayidx, align 4, !dbg !15455
  %arrayidx6 = getelementptr inbounds [2 x float], [2 x float]* %limit, i64 0, i64 0, !dbg !15456
  store float 0x3F1A36E2E0000000, float* %arrayidx6, align 4, !dbg !15457
  %17 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !15458
  %18 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !15459
  %19 = load %struct.MLoopUV*, %struct.MLoopUV** %mloopuv.addr, align 8, !dbg !15460
  %20 = load i32, i32* %totface, align 4, !dbg !15461
  %21 = load i32, i32* %totvert, align 4, !dbg !15462
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %limit, i64 0, i64 0, !dbg !15463
  %call7 = call %struct.UvVertMap* @BKE_mesh_uv_vert_map_create(%struct.MPoly* %17, %struct.MLoop* %18, %struct.MLoopUV* %19, i32 %20, i32 %21, i32 0, float* %arraydecay), !dbg !15464
  store %struct.UvVertMap* %call7, %struct.UvVertMap** %vmap, align 8, !dbg !15465
  %22 = load %struct.UvVertMap*, %struct.UvVertMap** %vmap, align 8, !dbg !15466
  %tobool = icmp ne %struct.UvVertMap* %22, null, !dbg !15466
  br i1 %tobool, label %if.end, label %if.then, !dbg !15468

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !15469
  br label %return, !dbg !15469

if.end:                                           ; preds = %entry
  %23 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !15470
  %call8 = call i32 @ccgSubSurf_initFullSync(%struct.CCGSubSurf* %23), !dbg !15471
  store i32 0, i32* %i, align 4, !dbg !15472
  br label %for.cond, !dbg !15474

for.cond:                                         ; preds = %for.inc47, %if.end
  %24 = load i32, i32* %i, align 4, !dbg !15475
  %25 = load i32, i32* %totvert, align 4, !dbg !15477
  %cmp = icmp slt i32 %24, %25, !dbg !15478
  br i1 %cmp, label %for.body, label %for.end48, !dbg !15479

for.body:                                         ; preds = %for.cond
  %26 = load %struct.UvVertMap*, %struct.UvVertMap** %vmap, align 8, !dbg !15480
  %27 = load i32, i32* %i, align 4, !dbg !15483
  %call10 = call %struct.UvMapVert* @BKE_mesh_uv_vert_map_get_vert(%struct.UvVertMap* %26, i32 %27), !dbg !15484
  %tobool11 = icmp ne %struct.UvMapVert* %call10, null, !dbg !15484
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !15485

if.then12:                                        ; preds = %for.body
  br label %for.inc47, !dbg !15486

if.end13:                                         ; preds = %for.body
  %28 = load %struct.UvVertMap*, %struct.UvVertMap** %vmap, align 8, !dbg !15487
  %29 = load i32, i32* %i, align 4, !dbg !15489
  %call14 = call %struct.UvMapVert* @BKE_mesh_uv_vert_map_get_vert(%struct.UvVertMap* %28, i32 %29), !dbg !15490
  %next = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %call14, i32 0, i32 0, !dbg !15491
  %30 = load %struct.UvMapVert*, %struct.UvMapVert** %next, align 8, !dbg !15491
  store %struct.UvMapVert* %30, %struct.UvMapVert** %v, align 8, !dbg !15492
  br label %for.cond15, !dbg !15493

for.cond15:                                       ; preds = %for.inc, %if.end13
  %31 = load %struct.UvMapVert*, %struct.UvMapVert** %v, align 8, !dbg !15494
  %tobool16 = icmp ne %struct.UvMapVert* %31, null, !dbg !15496
  br i1 %tobool16, label %for.body17, label %for.end, !dbg !15496

for.body17:                                       ; preds = %for.cond15
  %32 = load %struct.UvMapVert*, %struct.UvMapVert** %v, align 8, !dbg !15497
  %separate = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %32, i32 0, i32 3, !dbg !15499
  %33 = load i8, i8* %separate, align 1, !dbg !15499
  %tobool18 = icmp ne i8 %33, 0, !dbg !15497
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !15500

if.then19:                                        ; preds = %for.body17
  br label %for.end, !dbg !15501

if.end20:                                         ; preds = %for.body17
  br label %for.inc, !dbg !15499

for.inc:                                          ; preds = %if.end20
  %34 = load %struct.UvMapVert*, %struct.UvMapVert** %v, align 8, !dbg !15502
  %next21 = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %34, i32 0, i32 0, !dbg !15503
  %35 = load %struct.UvMapVert*, %struct.UvMapVert** %next21, align 8, !dbg !15503
  store %struct.UvMapVert* %35, %struct.UvMapVert** %v, align 8, !dbg !15504
  br label %for.cond15, !dbg !15505, !llvm.loop !15506

for.end:                                          ; preds = %if.then19, %for.cond15
  %36 = load %struct.UvMapVert*, %struct.UvMapVert** %v, align 8, !dbg !15508
  %cmp22 = icmp ne %struct.UvMapVert* %36, null, !dbg !15509
  br i1 %cmp22, label %lor.end, label %lor.rhs, !dbg !15510

lor.rhs:                                          ; preds = %for.end
  %37 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !15511
  %38 = load i32, i32* %i, align 4, !dbg !15512
  %idx.ext = sext i32 %38 to i64, !dbg !15513
  %add.ptr = getelementptr inbounds %struct.MVert, %struct.MVert* %37, i64 %idx.ext, !dbg !15513
  %flag = getelementptr inbounds %struct.MVert, %struct.MVert* %add.ptr, i32 0, i32 2, !dbg !15514
  %39 = load i8, i8* %flag, align 2, !dbg !15514
  %conv24 = zext i8 %39 to i32, !dbg !15515
  %and = and i32 %conv24, 64, !dbg !15516
  %tobool25 = icmp ne i32 %and, 0, !dbg !15510
  br label %lor.end, !dbg !15510

lor.end:                                          ; preds = %lor.rhs, %for.end
  %40 = phi i1 [ true, %for.end ], [ %tobool25, %lor.rhs ]
  %lor.ext = zext i1 %40 to i32, !dbg !15510
  store i32 %lor.ext, i32* %seam, align 4, !dbg !15517
  %41 = load %struct.UvVertMap*, %struct.UvVertMap** %vmap, align 8, !dbg !15518
  %42 = load i32, i32* %i, align 4, !dbg !15520
  %call26 = call %struct.UvMapVert* @BKE_mesh_uv_vert_map_get_vert(%struct.UvVertMap* %41, i32 %42), !dbg !15521
  store %struct.UvMapVert* %call26, %struct.UvMapVert** %v, align 8, !dbg !15522
  br label %for.cond27, !dbg !15523

for.cond27:                                       ; preds = %for.inc44, %lor.end
  %43 = load %struct.UvMapVert*, %struct.UvMapVert** %v, align 8, !dbg !15524
  %tobool28 = icmp ne %struct.UvMapVert* %43, null, !dbg !15526
  br i1 %tobool28, label %for.body29, label %for.end46, !dbg !15526

for.body29:                                       ; preds = %for.cond27
  %44 = load %struct.UvMapVert*, %struct.UvMapVert** %v, align 8, !dbg !15527
  %separate30 = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %44, i32 0, i32 3, !dbg !15530
  %45 = load i8, i8* %separate30, align 1, !dbg !15530
  %tobool31 = icmp ne i8 %45, 0, !dbg !15527
  br i1 %tobool31, label %if.then32, label %if.end43, !dbg !15531

if.then32:                                        ; preds = %for.body29
  call void @llvm.dbg.declare(metadata %struct.CCGVert** %ssv, metadata !15532, metadata !DIExpression()), !dbg !15534
  call void @llvm.dbg.declare(metadata i32* %loopid, metadata !15535, metadata !DIExpression()), !dbg !15536
  %46 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !15537
  %47 = load %struct.UvMapVert*, %struct.UvMapVert** %v, align 8, !dbg !15538
  %f = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %47, i32 0, i32 1, !dbg !15539
  %48 = load i32, i32* %f, align 8, !dbg !15539
  %idxprom = zext i32 %48 to i64, !dbg !15537
  %arrayidx33 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %46, i64 %idxprom, !dbg !15537
  %loopstart = getelementptr inbounds %struct.MPoly, %struct.MPoly* %arrayidx33, i32 0, i32 0, !dbg !15540
  %49 = load i32, i32* %loopstart, align 4, !dbg !15540
  %50 = load %struct.UvMapVert*, %struct.UvMapVert** %v, align 8, !dbg !15541
  %tfindex = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %50, i32 0, i32 2, !dbg !15542
  %51 = load i8, i8* %tfindex, align 4, !dbg !15542
  %conv34 = zext i8 %51 to i32, !dbg !15541
  %add = add nsw i32 %49, %conv34, !dbg !15543
  store i32 %add, i32* %loopid, align 4, !dbg !15536
  call void @llvm.dbg.declare(metadata i8** %vhdl, metadata !15544, metadata !DIExpression()), !dbg !15545
  %52 = load i32, i32* %loopid, align 4, !dbg !15546
  %conv35 = sext i32 %52 to i64, !dbg !15546
  %53 = inttoptr i64 %conv35 to i8*, !dbg !15546
  store i8* %53, i8** %vhdl, align 8, !dbg !15545
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %uv, i64 0, i64 0, !dbg !15547
  %54 = load %struct.MLoopUV*, %struct.MLoopUV** %mloopuv.addr, align 8, !dbg !15548
  %55 = load i32, i32* %loopid, align 4, !dbg !15549
  %idxprom37 = sext i32 %55 to i64, !dbg !15548
  %arrayidx38 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %54, i64 %idxprom37, !dbg !15548
  %uv39 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %arrayidx38, i32 0, i32 0, !dbg !15550
  %arraydecay40 = getelementptr inbounds [2 x float], [2 x float]* %uv39, i64 0, i64 0, !dbg !15548
  call void @copy_v2_v2(float* %arraydecay36, float* %arraydecay40), !dbg !15551
  %56 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !15552
  %57 = load i8*, i8** %vhdl, align 8, !dbg !15553
  %arraydecay41 = getelementptr inbounds [3 x float], [3 x float]* %uv, i64 0, i64 0, !dbg !15554
  %58 = bitcast float* %arraydecay41 to i8*, !dbg !15554
  %59 = load i32, i32* %seam, align 4, !dbg !15555
  %call42 = call i32 @ccgSubSurf_syncVert(%struct.CCGSubSurf* %56, i8* %57, i8* %58, i32 %59, %struct.CCGVert** %ssv), !dbg !15556
  br label %if.end43, !dbg !15557

if.end43:                                         ; preds = %if.then32, %for.body29
  br label %for.inc44, !dbg !15558

for.inc44:                                        ; preds = %if.end43
  %60 = load %struct.UvMapVert*, %struct.UvMapVert** %v, align 8, !dbg !15559
  %next45 = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %60, i32 0, i32 0, !dbg !15560
  %61 = load %struct.UvMapVert*, %struct.UvMapVert** %next45, align 8, !dbg !15560
  store %struct.UvMapVert* %61, %struct.UvMapVert** %v, align 8, !dbg !15561
  br label %for.cond27, !dbg !15562, !llvm.loop !15563

for.end46:                                        ; preds = %for.cond27
  br label %for.inc47, !dbg !15565

for.inc47:                                        ; preds = %for.end46, %if.then12
  %62 = load i32, i32* %i, align 4, !dbg !15566
  %inc = add nsw i32 %62, 1, !dbg !15566
  store i32 %inc, i32* %i, align 4, !dbg !15566
  br label %for.cond, !dbg !15567, !llvm.loop !15568

for.end48:                                        ; preds = %for.cond
  %63 = load i32, i32* %totface, align 4, !dbg !15570
  %mul = mul nsw i32 %63, 2, !dbg !15570
  %call49 = call %struct.EdgeSet* @BLI_edgeset_new_ex(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.ss_sync_from_uv, i64 0, i64 0), i32 %mul), !dbg !15571
  store %struct.EdgeSet* %call49, %struct.EdgeSet** %eset, align 8, !dbg !15572
  store i32 0, i32* %i, align 4, !dbg !15573
  br label %for.cond50, !dbg !15575

for.cond50:                                       ; preds = %for.inc107, %for.end48
  %64 = load i32, i32* %i, align 4, !dbg !15576
  %65 = load i32, i32* %totface, align 4, !dbg !15578
  %cmp51 = icmp slt i32 %64, %65, !dbg !15579
  br i1 %cmp51, label %for.body53, label %for.end109, !dbg !15580

for.body53:                                       ; preds = %for.cond50
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mp, metadata !15581, metadata !DIExpression()), !dbg !15583
  %66 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !15584
  %67 = load i32, i32* %i, align 4, !dbg !15585
  %idxprom54 = sext i32 %67 to i64, !dbg !15586
  %arrayidx55 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %66, i64 %idxprom54, !dbg !15586
  store %struct.MPoly* %arrayidx55, %struct.MPoly** %mp, align 8, !dbg !15583
  call void @llvm.dbg.declare(metadata i32* %nverts, metadata !15587, metadata !DIExpression()), !dbg !15588
  %68 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !15589
  %totloop = getelementptr inbounds %struct.MPoly, %struct.MPoly* %68, i32 0, i32 1, !dbg !15590
  %69 = load i32, i32* %totloop, align 4, !dbg !15590
  store i32 %69, i32* %nverts, align 4, !dbg !15588
  call void @llvm.dbg.declare(metadata i32* %j, metadata !15591, metadata !DIExpression()), !dbg !15592
  call void @llvm.dbg.declare(metadata i32* %j_next, metadata !15593, metadata !DIExpression()), !dbg !15594
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %origf, metadata !15595, metadata !DIExpression()), !dbg !15596
  %70 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %origss.addr, align 8, !dbg !15597
  %71 = load i32, i32* %i, align 4, !dbg !15598
  %conv56 = sext i32 %71 to i64, !dbg !15598
  %72 = inttoptr i64 %conv56 to i8*, !dbg !15598
  %call57 = call %struct.CCGFace* @ccgSubSurf_getFace(%struct.CCGSubSurf* %70, i8* %72), !dbg !15599
  store %struct.CCGFace* %call57, %struct.CCGFace** %origf, align 8, !dbg !15596
  call void @llvm.dbg.declare(metadata %struct.MLoop** %ml, metadata !15600, metadata !DIExpression()), !dbg !15601
  %73 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !15602
  %74 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !15603
  %loopstart58 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %74, i32 0, i32 0, !dbg !15604
  %75 = load i32, i32* %loopstart58, align 4, !dbg !15604
  %idx.ext59 = sext i32 %75 to i64, !dbg !15605
  %add.ptr60 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %73, i64 %idx.ext59, !dbg !15605
  store %struct.MLoop* %add.ptr60, %struct.MLoop** %ml, align 8, !dbg !15601
  %76 = load i32, i32* %nverts, align 4, !dbg !15606
  %77 = zext i32 %76 to i64, !dbg !15607
  %78 = call i8* @llvm.stacksave(), !dbg !15607
  store i8* %78, i8** %saved_stack, align 8, !dbg !15607
  %vla = alloca i8*, i64 %77, align 16, !dbg !15607
  store i64 %77, i64* %__vla_expr0, align 8, !dbg !15607
  call void @llvm.dbg.declare(metadata i64* %__vla_expr0, metadata !15608, metadata !DIExpression()), !dbg !15609
  call void @llvm.dbg.declare(metadata i8** %vla, metadata !15610, metadata !DIExpression()), !dbg !15614
  %79 = load %struct.UvVertMap*, %struct.UvVertMap** %vmap, align 8, !dbg !15615
  %80 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !15616
  %81 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !15617
  %82 = load i32, i32* %i, align 4, !dbg !15618
  call void @get_face_uv_map_vert(%struct.UvVertMap* %79, %struct.MPoly* %80, %struct.MLoop* %81, i32 %82, i8** %vla), !dbg !15619
  store i32 0, i32* %j, align 4, !dbg !15620
  %83 = load i32, i32* %nverts, align 4, !dbg !15622
  %sub = sub nsw i32 %83, 1, !dbg !15623
  store i32 %sub, i32* %j_next, align 4, !dbg !15624
  br label %for.cond61, !dbg !15625

for.cond61:                                       ; preds = %for.inc104, %for.body53
  %84 = load i32, i32* %j, align 4, !dbg !15626
  %85 = load i32, i32* %nverts, align 4, !dbg !15628
  %cmp62 = icmp slt i32 %84, %85, !dbg !15629
  br i1 %cmp62, label %for.body64, label %for.end106, !dbg !15630

for.body64:                                       ; preds = %for.cond61
  call void @llvm.dbg.declare(metadata i32* %v0, metadata !15631, metadata !DIExpression()), !dbg !15633
  %86 = load i32, i32* %j_next, align 4, !dbg !15634
  %idxprom65 = sext i32 %86 to i64, !dbg !15634
  %arrayidx66 = getelementptr inbounds i8*, i8** %vla, i64 %idxprom65, !dbg !15634
  %87 = load i8*, i8** %arrayidx66, align 8, !dbg !15634
  %88 = ptrtoint i8* %87 to i64, !dbg !15634
  %conv67 = trunc i64 %88 to i32, !dbg !15634
  store i32 %conv67, i32* %v0, align 4, !dbg !15633
  call void @llvm.dbg.declare(metadata i32* %v1, metadata !15635, metadata !DIExpression()), !dbg !15636
  %89 = load i32, i32* %j, align 4, !dbg !15637
  %idxprom68 = sext i32 %89 to i64, !dbg !15637
  %arrayidx69 = getelementptr inbounds i8*, i8** %vla, i64 %idxprom68, !dbg !15637
  %90 = load i8*, i8** %arrayidx69, align 8, !dbg !15637
  %91 = ptrtoint i8* %90 to i64, !dbg !15637
  %conv70 = trunc i64 %91 to i32, !dbg !15637
  store i32 %conv70, i32* %v1, align 4, !dbg !15636
  call void @llvm.dbg.declare(metadata %struct.MVert** %mv0, metadata !15638, metadata !DIExpression()), !dbg !15639
  %92 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !15640
  %93 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !15641
  %94 = load i32, i32* %j_next, align 4, !dbg !15642
  %idxprom71 = sext i32 %94 to i64, !dbg !15641
  %arrayidx72 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %93, i64 %idxprom71, !dbg !15641
  %v73 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx72, i32 0, i32 0, !dbg !15643
  %95 = load i32, i32* %v73, align 4, !dbg !15643
  %idx.ext74 = zext i32 %95 to i64, !dbg !15644
  %add.ptr75 = getelementptr inbounds %struct.MVert, %struct.MVert* %92, i64 %idx.ext74, !dbg !15644
  store %struct.MVert* %add.ptr75, %struct.MVert** %mv0, align 8, !dbg !15639
  call void @llvm.dbg.declare(metadata %struct.MVert** %mv1, metadata !15645, metadata !DIExpression()), !dbg !15646
  %96 = load %struct.MVert*, %struct.MVert** %mvert, align 8, !dbg !15647
  %97 = load %struct.MLoop*, %struct.MLoop** %ml, align 8, !dbg !15648
  %98 = load i32, i32* %j, align 4, !dbg !15649
  %idxprom76 = sext i32 %98 to i64, !dbg !15648
  %arrayidx77 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %97, i64 %idxprom76, !dbg !15648
  %v78 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx77, i32 0, i32 0, !dbg !15650
  %99 = load i32, i32* %v78, align 4, !dbg !15650
  %idx.ext79 = zext i32 %99 to i64, !dbg !15651
  %add.ptr80 = getelementptr inbounds %struct.MVert, %struct.MVert* %96, i64 %idx.ext79, !dbg !15651
  store %struct.MVert* %add.ptr80, %struct.MVert** %mv1, align 8, !dbg !15646
  %100 = load %struct.EdgeSet*, %struct.EdgeSet** %eset, align 8, !dbg !15652
  %101 = load i32, i32* %v0, align 4, !dbg !15654
  %102 = load i32, i32* %v1, align 4, !dbg !15655
  %call81 = call zeroext i8 @BLI_edgeset_add(%struct.EdgeSet* %100, i32 %101, i32 %102), !dbg !15656
  %tobool82 = icmp ne i8 %call81, 0, !dbg !15656
  br i1 %tobool82, label %if.then83, label %if.end103, !dbg !15657

if.then83:                                        ; preds = %for.body64
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %e, metadata !15658, metadata !DIExpression()), !dbg !15660
  call void @llvm.dbg.declare(metadata %struct.CCGEdge** %orige, metadata !15661, metadata !DIExpression()), !dbg !15662
  %103 = load %struct.CCGFace*, %struct.CCGFace** %origf, align 8, !dbg !15663
  %104 = load i32, i32* %j_next, align 4, !dbg !15664
  %call84 = call %struct.CCGEdge* @ccgSubSurf_getFaceEdge(%struct.CCGFace* %103, i32 %104), !dbg !15665
  store %struct.CCGEdge* %call84, %struct.CCGEdge** %orige, align 8, !dbg !15662
  call void @llvm.dbg.declare(metadata i8** %ehdl, metadata !15666, metadata !DIExpression()), !dbg !15668
  %105 = load %struct.MPoly*, %struct.MPoly** %mp, align 8, !dbg !15669
  %loopstart85 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %105, i32 0, i32 0, !dbg !15669
  %106 = load i32, i32* %loopstart85, align 4, !dbg !15669
  %107 = load i32, i32* %j_next, align 4, !dbg !15669
  %add86 = add nsw i32 %106, %107, !dbg !15669
  %conv87 = sext i32 %add86 to i64, !dbg !15669
  %108 = inttoptr i64 %conv87 to i8*, !dbg !15669
  store i8* %108, i8** %ehdl, align 8, !dbg !15668
  call void @llvm.dbg.declare(metadata float* %crease, metadata !15670, metadata !DIExpression()), !dbg !15671
  %109 = load %struct.MVert*, %struct.MVert** %mv0, align 8, !dbg !15672
  %flag88 = getelementptr inbounds %struct.MVert, %struct.MVert* %109, i32 0, i32 2, !dbg !15674
  %110 = load i8, i8* %flag88, align 2, !dbg !15674
  %conv89 = zext i8 %110 to i32, !dbg !15672
  %111 = load %struct.MVert*, %struct.MVert** %mv1, align 8, !dbg !15675
  %flag90 = getelementptr inbounds %struct.MVert, %struct.MVert* %111, i32 0, i32 2, !dbg !15676
  %112 = load i8, i8* %flag90, align 2, !dbg !15676
  %conv91 = zext i8 %112 to i32, !dbg !15675
  %and92 = and i32 %conv89, %conv91, !dbg !15677
  %and93 = and i32 %and92, 64, !dbg !15678
  %tobool94 = icmp ne i32 %and93, 0, !dbg !15678
  br i1 %tobool94, label %if.then95, label %if.else, !dbg !15679

if.then95:                                        ; preds = %if.then83
  %113 = load float, float* %creaseFactor, align 4, !dbg !15680
  store float %113, float* %crease, align 4, !dbg !15681
  br label %if.end97, !dbg !15682

if.else:                                          ; preds = %if.then83
  %114 = load %struct.CCGEdge*, %struct.CCGEdge** %orige, align 8, !dbg !15683
  %call96 = call float @ccgSubSurf_getEdgeCrease(%struct.CCGEdge* %114), !dbg !15684
  store float %call96, float* %crease, align 4, !dbg !15685
  br label %if.end97

if.end97:                                         ; preds = %if.else, %if.then95
  %115 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !15686
  %116 = load i8*, i8** %ehdl, align 8, !dbg !15687
  %117 = load i32, i32* %j_next, align 4, !dbg !15688
  %idxprom98 = sext i32 %117 to i64, !dbg !15689
  %arrayidx99 = getelementptr inbounds i8*, i8** %vla, i64 %idxprom98, !dbg !15689
  %118 = load i8*, i8** %arrayidx99, align 8, !dbg !15689
  %119 = load i32, i32* %j, align 4, !dbg !15690
  %idxprom100 = sext i32 %119 to i64, !dbg !15691
  %arrayidx101 = getelementptr inbounds i8*, i8** %vla, i64 %idxprom100, !dbg !15691
  %120 = load i8*, i8** %arrayidx101, align 8, !dbg !15691
  %121 = load float, float* %crease, align 4, !dbg !15692
  %call102 = call i32 @ccgSubSurf_syncEdge(%struct.CCGSubSurf* %115, i8* %116, i8* %118, i8* %120, float %121, %struct.CCGEdge** %e), !dbg !15693
  br label %if.end103, !dbg !15694

if.end103:                                        ; preds = %if.end97, %for.body64
  br label %for.inc104, !dbg !15695

for.inc104:                                       ; preds = %if.end103
  %122 = load i32, i32* %j, align 4, !dbg !15696
  %inc105 = add nsw i32 %122, 1, !dbg !15696
  store i32 %inc105, i32* %j, align 4, !dbg !15696
  store i32 %122, i32* %j_next, align 4, !dbg !15697
  br label %for.cond61, !dbg !15698, !llvm.loop !15699

for.end106:                                       ; preds = %for.cond61
  %123 = load i8*, i8** %saved_stack, align 8, !dbg !15701
  call void @llvm.stackrestore(i8* %123), !dbg !15701
  br label %for.inc107, !dbg !15702

for.inc107:                                       ; preds = %for.end106
  %124 = load i32, i32* %i, align 4, !dbg !15703
  %inc108 = add nsw i32 %124, 1, !dbg !15703
  store i32 %inc108, i32* %i, align 4, !dbg !15703
  br label %for.cond50, !dbg !15704, !llvm.loop !15705

for.end109:                                       ; preds = %for.cond50
  %125 = load %struct.EdgeSet*, %struct.EdgeSet** %eset, align 8, !dbg !15707
  call void @BLI_edgeset_free(%struct.EdgeSet* %125), !dbg !15708
  store i32 0, i32* %i, align 4, !dbg !15709
  br label %for.cond110, !dbg !15711

for.cond110:                                      ; preds = %for.inc128, %for.end109
  %126 = load i32, i32* %i, align 4, !dbg !15712
  %127 = load i32, i32* %totface, align 4, !dbg !15714
  %cmp111 = icmp slt i32 %126, %127, !dbg !15715
  br i1 %cmp111, label %for.body113, label %for.end130, !dbg !15716

for.body113:                                      ; preds = %for.cond110
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mp114, metadata !15717, metadata !DIExpression()), !dbg !15719
  %128 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !15720
  %129 = load i32, i32* %i, align 4, !dbg !15721
  %idxprom115 = sext i32 %129 to i64, !dbg !15720
  %arrayidx116 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %128, i64 %idxprom115, !dbg !15720
  store %struct.MPoly* %arrayidx116, %struct.MPoly** %mp114, align 8, !dbg !15719
  call void @llvm.dbg.declare(metadata %struct.MLoop** %ml117, metadata !15722, metadata !DIExpression()), !dbg !15723
  %130 = load %struct.MLoop*, %struct.MLoop** %mloop, align 8, !dbg !15724
  %131 = load %struct.MPoly*, %struct.MPoly** %mp114, align 8, !dbg !15725
  %loopstart118 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %131, i32 0, i32 0, !dbg !15726
  %132 = load i32, i32* %loopstart118, align 4, !dbg !15726
  %idxprom119 = sext i32 %132 to i64, !dbg !15724
  %arrayidx120 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %130, i64 %idxprom119, !dbg !15724
  store %struct.MLoop* %arrayidx120, %struct.MLoop** %ml117, align 8, !dbg !15723
  call void @llvm.dbg.declare(metadata i32* %nverts121, metadata !15727, metadata !DIExpression()), !dbg !15728
  %133 = load %struct.MPoly*, %struct.MPoly** %mp114, align 8, !dbg !15729
  %totloop122 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %133, i32 0, i32 1, !dbg !15730
  %134 = load i32, i32* %totloop122, align 4, !dbg !15730
  store i32 %134, i32* %nverts121, align 4, !dbg !15728
  call void @llvm.dbg.declare(metadata %struct.CCGFace** %f123, metadata !15731, metadata !DIExpression()), !dbg !15732
  %135 = load i32, i32* %nverts121, align 4, !dbg !15733
  %136 = zext i32 %135 to i64, !dbg !15734
  %137 = call i8* @llvm.stacksave(), !dbg !15734
  store i8* %137, i8** %saved_stack124, align 8, !dbg !15734
  %vla125 = alloca i8*, i64 %136, align 16, !dbg !15734
  store i64 %136, i64* %__vla_expr1, align 8, !dbg !15734
  call void @llvm.dbg.declare(metadata i64* %__vla_expr1, metadata !15735, metadata !DIExpression()), !dbg !15736
  call void @llvm.dbg.declare(metadata i8** %vla125, metadata !15737, metadata !DIExpression()), !dbg !15741
  %138 = load %struct.UvVertMap*, %struct.UvVertMap** %vmap, align 8, !dbg !15742
  %139 = load %struct.MPoly*, %struct.MPoly** %mpoly, align 8, !dbg !15743
  %140 = load %struct.MLoop*, %struct.MLoop** %ml117, align 8, !dbg !15744
  %141 = load i32, i32* %i, align 4, !dbg !15745
  call void @get_face_uv_map_vert(%struct.UvVertMap* %138, %struct.MPoly* %139, %struct.MLoop* %140, i32 %141, i8** %vla125), !dbg !15746
  %142 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !15747
  %143 = load i32, i32* %i, align 4, !dbg !15748
  %conv126 = sext i32 %143 to i64, !dbg !15748
  %144 = inttoptr i64 %conv126 to i8*, !dbg !15748
  %145 = load i32, i32* %nverts121, align 4, !dbg !15749
  %call127 = call i32 @ccgSubSurf_syncFace(%struct.CCGSubSurf* %142, i8* %144, i32 %145, i8** %vla125, %struct.CCGFace** %f123), !dbg !15750
  %146 = load i8*, i8** %saved_stack124, align 8, !dbg !15751
  call void @llvm.stackrestore(i8* %146), !dbg !15751
  br label %for.inc128, !dbg !15752

for.inc128:                                       ; preds = %for.body113
  %147 = load i32, i32* %i, align 4, !dbg !15753
  %inc129 = add nsw i32 %147, 1, !dbg !15753
  store i32 %inc129, i32* %i, align 4, !dbg !15753
  br label %for.cond110, !dbg !15754, !llvm.loop !15755

for.end130:                                       ; preds = %for.cond110
  %148 = load %struct.UvVertMap*, %struct.UvVertMap** %vmap, align 8, !dbg !15757
  call void @BKE_mesh_uv_vert_map_free(%struct.UvVertMap* %148), !dbg !15758
  %149 = load %struct.CCGSubSurf*, %struct.CCGSubSurf** %ss.addr, align 8, !dbg !15759
  %call131 = call i32 @ccgSubSurf_processSync(%struct.CCGSubSurf* %149), !dbg !15760
  store i32 1, i32* %retval, align 4, !dbg !15761
  br label %return, !dbg !15761

return:                                           ; preds = %for.end130, %if.then
  %150 = load i32, i32* %retval, align 4, !dbg !15762
  ret i32 %150, !dbg !15762
}

declare dso_local %struct.UvVertMap* @BKE_mesh_uv_vert_map_create(%struct.MPoly*, %struct.MLoop*, %struct.MLoopUV*, i32, i32, i32, float*) #2

declare dso_local %struct.UvMapVert* @BKE_mesh_uv_vert_map_get_vert(%struct.UvVertMap*, i32) #2

declare dso_local %struct.EdgeSet* @BLI_edgeset_new_ex(i8*, i32) #2

declare dso_local %struct.CCGFace* @ccgSubSurf_getFace(%struct.CCGSubSurf*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @get_face_uv_map_vert(%struct.UvVertMap* %vmap, %struct.MPoly* %mpoly, %struct.MLoop* %ml, i32 %fi, i8** %fverts) #0 !dbg !15763 {
entry:
  %vmap.addr = alloca %struct.UvVertMap*, align 8
  %mpoly.addr = alloca %struct.MPoly*, align 8
  %ml.addr = alloca %struct.MLoop*, align 8
  %fi.addr = alloca i32, align 4
  %fverts.addr = alloca i8**, align 8
  %v = alloca %struct.UvMapVert*, align 8
  %nv = alloca %struct.UvMapVert*, align 8
  %j = alloca i32, align 4
  %nverts = alloca i32, align 4
  store %struct.UvVertMap* %vmap, %struct.UvVertMap** %vmap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.UvVertMap** %vmap.addr, metadata !15767, metadata !DIExpression()), !dbg !15768
  store %struct.MPoly* %mpoly, %struct.MPoly** %mpoly.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPoly** %mpoly.addr, metadata !15769, metadata !DIExpression()), !dbg !15770
  store %struct.MLoop* %ml, %struct.MLoop** %ml.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLoop** %ml.addr, metadata !15771, metadata !DIExpression()), !dbg !15772
  store i32 %fi, i32* %fi.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fi.addr, metadata !15773, metadata !DIExpression()), !dbg !15774
  store i8** %fverts, i8*** %fverts.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %fverts.addr, metadata !15775, metadata !DIExpression()), !dbg !15776
  call void @llvm.dbg.declare(metadata %struct.UvMapVert** %v, metadata !15777, metadata !DIExpression()), !dbg !15778
  call void @llvm.dbg.declare(metadata %struct.UvMapVert** %nv, metadata !15779, metadata !DIExpression()), !dbg !15780
  call void @llvm.dbg.declare(metadata i32* %j, metadata !15781, metadata !DIExpression()), !dbg !15782
  call void @llvm.dbg.declare(metadata i32* %nverts, metadata !15783, metadata !DIExpression()), !dbg !15784
  %0 = load %struct.MPoly*, %struct.MPoly** %mpoly.addr, align 8, !dbg !15785
  %1 = load i32, i32* %fi.addr, align 4, !dbg !15786
  %idxprom = sext i32 %1 to i64, !dbg !15785
  %arrayidx = getelementptr inbounds %struct.MPoly, %struct.MPoly* %0, i64 %idxprom, !dbg !15785
  %totloop = getelementptr inbounds %struct.MPoly, %struct.MPoly* %arrayidx, i32 0, i32 1, !dbg !15787
  %2 = load i32, i32* %totloop, align 4, !dbg !15787
  store i32 %2, i32* %nverts, align 4, !dbg !15784
  store i32 0, i32* %j, align 4, !dbg !15788
  br label %for.cond, !dbg !15790

for.cond:                                         ; preds = %for.inc16, %entry
  %3 = load i32, i32* %j, align 4, !dbg !15791
  %4 = load i32, i32* %nverts, align 4, !dbg !15793
  %cmp = icmp slt i32 %3, %4, !dbg !15794
  br i1 %cmp, label %for.body, label %for.end17, !dbg !15795

for.body:                                         ; preds = %for.cond
  %5 = load %struct.UvVertMap*, %struct.UvVertMap** %vmap.addr, align 8, !dbg !15796
  %6 = load %struct.MLoop*, %struct.MLoop** %ml.addr, align 8, !dbg !15799
  %7 = load i32, i32* %j, align 4, !dbg !15800
  %idxprom1 = sext i32 %7 to i64, !dbg !15799
  %arrayidx2 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %6, i64 %idxprom1, !dbg !15799
  %v3 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %arrayidx2, i32 0, i32 0, !dbg !15801
  %8 = load i32, i32* %v3, align 4, !dbg !15801
  %call = call %struct.UvMapVert* @BKE_mesh_uv_vert_map_get_vert(%struct.UvVertMap* %5, i32 %8), !dbg !15802
  store %struct.UvMapVert* %call, %struct.UvMapVert** %v, align 8, !dbg !15803
  store %struct.UvMapVert* %call, %struct.UvMapVert** %nv, align 8, !dbg !15804
  br label %for.cond4, !dbg !15805

for.cond4:                                        ; preds = %for.inc, %for.body
  %9 = load %struct.UvMapVert*, %struct.UvMapVert** %v, align 8, !dbg !15806
  %tobool = icmp ne %struct.UvMapVert* %9, null, !dbg !15808
  br i1 %tobool, label %for.body5, label %for.end, !dbg !15808

for.body5:                                        ; preds = %for.cond4
  %10 = load %struct.UvMapVert*, %struct.UvMapVert** %v, align 8, !dbg !15809
  %separate = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %10, i32 0, i32 3, !dbg !15812
  %11 = load i8, i8* %separate, align 1, !dbg !15812
  %tobool6 = icmp ne i8 %11, 0, !dbg !15809
  br i1 %tobool6, label %if.then, label %if.end, !dbg !15813

if.then:                                          ; preds = %for.body5
  %12 = load %struct.UvMapVert*, %struct.UvMapVert** %v, align 8, !dbg !15814
  store %struct.UvMapVert* %12, %struct.UvMapVert** %nv, align 8, !dbg !15815
  br label %if.end, !dbg !15816

if.end:                                           ; preds = %if.then, %for.body5
  %13 = load %struct.UvMapVert*, %struct.UvMapVert** %v, align 8, !dbg !15817
  %f = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %13, i32 0, i32 1, !dbg !15819
  %14 = load i32, i32* %f, align 8, !dbg !15819
  %15 = load i32, i32* %fi.addr, align 4, !dbg !15820
  %cmp7 = icmp eq i32 %14, %15, !dbg !15821
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !15822

if.then8:                                         ; preds = %if.end
  br label %for.end, !dbg !15823

if.end9:                                          ; preds = %if.end
  br label %for.inc, !dbg !15824

for.inc:                                          ; preds = %if.end9
  %16 = load %struct.UvMapVert*, %struct.UvMapVert** %v, align 8, !dbg !15825
  %next = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %16, i32 0, i32 0, !dbg !15826
  %17 = load %struct.UvMapVert*, %struct.UvMapVert** %next, align 8, !dbg !15826
  store %struct.UvMapVert* %17, %struct.UvMapVert** %v, align 8, !dbg !15827
  br label %for.cond4, !dbg !15828, !llvm.loop !15829

for.end:                                          ; preds = %if.then8, %for.cond4
  %18 = load %struct.MPoly*, %struct.MPoly** %mpoly.addr, align 8, !dbg !15831
  %19 = load %struct.UvMapVert*, %struct.UvMapVert** %nv, align 8, !dbg !15831
  %f10 = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %19, i32 0, i32 1, !dbg !15831
  %20 = load i32, i32* %f10, align 8, !dbg !15831
  %idxprom11 = zext i32 %20 to i64, !dbg !15831
  %arrayidx12 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %18, i64 %idxprom11, !dbg !15831
  %loopstart = getelementptr inbounds %struct.MPoly, %struct.MPoly* %arrayidx12, i32 0, i32 0, !dbg !15831
  %21 = load i32, i32* %loopstart, align 4, !dbg !15831
  %22 = load %struct.UvMapVert*, %struct.UvMapVert** %nv, align 8, !dbg !15831
  %tfindex = getelementptr inbounds %struct.UvMapVert, %struct.UvMapVert* %22, i32 0, i32 2, !dbg !15831
  %23 = load i8, i8* %tfindex, align 4, !dbg !15831
  %conv = zext i8 %23 to i32, !dbg !15831
  %add = add nsw i32 %21, %conv, !dbg !15831
  %conv13 = sext i32 %add to i64, !dbg !15831
  %24 = inttoptr i64 %conv13 to i8*, !dbg !15831
  %25 = load i8**, i8*** %fverts.addr, align 8, !dbg !15832
  %26 = load i32, i32* %j, align 4, !dbg !15833
  %idxprom14 = sext i32 %26 to i64, !dbg !15832
  %arrayidx15 = getelementptr inbounds i8*, i8** %25, i64 %idxprom14, !dbg !15832
  store i8* %24, i8** %arrayidx15, align 8, !dbg !15834
  br label %for.inc16, !dbg !15835

for.inc16:                                        ; preds = %for.end
  %27 = load i32, i32* %j, align 4, !dbg !15836
  %inc = add nsw i32 %27, 1, !dbg !15836
  store i32 %inc, i32* %j, align 4, !dbg !15836
  br label %for.cond, !dbg !15837, !llvm.loop !15838

for.end17:                                        ; preds = %for.cond
  ret void, !dbg !15840
}

declare dso_local zeroext i8 @BLI_edgeset_add(%struct.EdgeSet*, i32, i32) #2

declare dso_local float @ccgSubSurf_getEdgeCrease(%struct.CCGEdge*) #2

declare dso_local void @BLI_edgeset_free(%struct.EdgeSet*) #2

declare dso_local void @BKE_mesh_uv_vert_map_free(%struct.UvVertMap*) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind }

!llvm.dbg.cu = !{!2188}
!llvm.module.flags = !{!2391, !2392, !2393}
!llvm.ident = !{!2394}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "hasGivenError", scope: !2, file: !3, line: 649, type: !27, isLocal: true, isDefinition: true)
!2 = distinct !DISubprogram(name: "ss_sync_from_derivedmesh", scope: !3, file: !3, line: 570, type: !4, scopeLine: 572, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!3 = !DIFile(filename: "blender/source/blender/blenkernel/intern/subsurf_ccg.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !DISubroutineType(types: !5)
!5 = !{null, !6, !11, !1301, !27}
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!7 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCGSubSurf", file: !8, line: 33, baseType: !9)
!8 = !DIFile(filename: "blender/source/blender/blenkernel/intern/CCGSubSurf.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!9 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGSubSurf", file: !10, line: 42, flags: DIFlagFwdDecl)
!10 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_ccg.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!11 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12, size: 64)
!12 = !DIDerivedType(tag: DW_TAG_typedef, name: "DerivedMesh", file: !13, line: 177, baseType: !14)
!13 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_DerivedMesh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!14 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !13, line: 178, size: 13504, elements: !15)
!15 = !{!16, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !78, !81, !89, !91, !98, !99, !1855, !1856, !1860, !1865, !1866, !1870, !1871, !1872, !1873, !1874, !1878, !1890, !1904, !1908, !1912, !1916, !1920, !1924, !1928, !1932, !1936, !1940, !1944, !1945, !1946, !1947, !1948, !1949, !1953, !1954, !1955, !1956, !1960, !1961, !1962, !1963, !1964, !1969, !1970, !1971, !1972, !1973, !1977, !1978, !1979, !1980, !1981, !1988, !1999, !2003, !2020, !2030, !2035, !2050, !2057, !2064, !2068, !2072, !2076, !2080, !2081, !2082, !2086, !2090, !2091, !2092, !2096, !2097, !2106, !2145, !2149, !2157, !2161, !2165, !2169, !2177, !2187}
!16 = !DIDerivedType(tag: DW_TAG_member, name: "vertData", scope: !14, file: !13, line: 180, baseType: !17, size: 1600)
!17 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomData", file: !18, line: 73, baseType: !19)
!18 = !DIFile(filename: "blender/source/blender/makesdna/DNA_customdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!19 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomData", file: !18, line: 64, size: 1600, elements: !20)
!20 = !{!21, !42, !46, !47, !48, !49, !52}
!21 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !19, file: !18, line: 65, baseType: !22, size: 64)
!22 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !23, size: 64)
!23 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataLayer", file: !18, line: 53, baseType: !24)
!24 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataLayer", file: !18, line: 42, size: 832, elements: !25)
!25 = !{!26, !28, !29, !30, !31, !32, !33, !34, !35, !40}
!26 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !24, file: !18, line: 43, baseType: !27, size: 32)
!27 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!28 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !24, file: !18, line: 44, baseType: !27, size: 32, offset: 32)
!29 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !24, file: !18, line: 45, baseType: !27, size: 32, offset: 64)
!30 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !24, file: !18, line: 46, baseType: !27, size: 32, offset: 96)
!31 = !DIDerivedType(tag: DW_TAG_member, name: "active_rnd", scope: !24, file: !18, line: 47, baseType: !27, size: 32, offset: 128)
!32 = !DIDerivedType(tag: DW_TAG_member, name: "active_clone", scope: !24, file: !18, line: 48, baseType: !27, size: 32, offset: 160)
!33 = !DIDerivedType(tag: DW_TAG_member, name: "active_mask", scope: !24, file: !18, line: 49, baseType: !27, size: 32, offset: 192)
!34 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !24, file: !18, line: 50, baseType: !27, size: 32, offset: 224)
!35 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !24, file: !18, line: 51, baseType: !36, size: 512, offset: 256)
!36 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 512, elements: !38)
!37 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!38 = !{!39}
!39 = !DISubrange(count: 64)
!40 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !24, file: !18, line: 52, baseType: !41, size: 64, offset: 768)
!41 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!42 = !DIDerivedType(tag: DW_TAG_member, name: "typemap", scope: !19, file: !18, line: 66, baseType: !43, size: 1312, offset: 64)
!43 = !DICompositeType(tag: DW_TAG_array_type, baseType: !27, size: 1312, elements: !44)
!44 = !{!45}
!45 = !DISubrange(count: 41)
!46 = !DIDerivedType(tag: DW_TAG_member, name: "totlayer", scope: !19, file: !18, line: 69, baseType: !27, size: 32, offset: 1376)
!47 = !DIDerivedType(tag: DW_TAG_member, name: "maxlayer", scope: !19, file: !18, line: 69, baseType: !27, size: 32, offset: 1408)
!48 = !DIDerivedType(tag: DW_TAG_member, name: "totsize", scope: !19, file: !18, line: 70, baseType: !27, size: 32, offset: 1440)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !19, file: !18, line: 71, baseType: !50, size: 64, offset: 1472)
!50 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !51, size: 64)
!51 = !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool", file: !18, line: 71, flags: DIFlagFwdDecl)
!52 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !19, file: !18, line: 72, baseType: !53, size: 64, offset: 1536)
!53 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !54, size: 64)
!54 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataExternal", file: !18, line: 59, baseType: !55)
!55 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataExternal", file: !18, line: 57, size: 8192, elements: !56)
!56 = !{!57}
!57 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !55, file: !18, line: 58, baseType: !58, size: 8192)
!58 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 8192, elements: !59)
!59 = !{!60}
!60 = !DISubrange(count: 1024)
!61 = !DIDerivedType(tag: DW_TAG_member, name: "edgeData", scope: !14, file: !13, line: 180, baseType: !17, size: 1600, offset: 1600)
!62 = !DIDerivedType(tag: DW_TAG_member, name: "faceData", scope: !14, file: !13, line: 180, baseType: !17, size: 1600, offset: 3200)
!63 = !DIDerivedType(tag: DW_TAG_member, name: "loopData", scope: !14, file: !13, line: 180, baseType: !17, size: 1600, offset: 4800)
!64 = !DIDerivedType(tag: DW_TAG_member, name: "polyData", scope: !14, file: !13, line: 180, baseType: !17, size: 1600, offset: 6400)
!65 = !DIDerivedType(tag: DW_TAG_member, name: "numVertData", scope: !14, file: !13, line: 181, baseType: !27, size: 32, offset: 8000)
!66 = !DIDerivedType(tag: DW_TAG_member, name: "numEdgeData", scope: !14, file: !13, line: 181, baseType: !27, size: 32, offset: 8032)
!67 = !DIDerivedType(tag: DW_TAG_member, name: "numTessFaceData", scope: !14, file: !13, line: 181, baseType: !27, size: 32, offset: 8064)
!68 = !DIDerivedType(tag: DW_TAG_member, name: "numLoopData", scope: !14, file: !13, line: 181, baseType: !27, size: 32, offset: 8096)
!69 = !DIDerivedType(tag: DW_TAG_member, name: "numPolyData", scope: !14, file: !13, line: 181, baseType: !27, size: 32, offset: 8128)
!70 = !DIDerivedType(tag: DW_TAG_member, name: "needsFree", scope: !14, file: !13, line: 182, baseType: !27, size: 32, offset: 8160)
!71 = !DIDerivedType(tag: DW_TAG_member, name: "deformedOnly", scope: !14, file: !13, line: 183, baseType: !27, size: 32, offset: 8192)
!72 = !DIDerivedType(tag: DW_TAG_member, name: "bvhCache", scope: !14, file: !13, line: 184, baseType: !73, size: 64, offset: 8256)
!73 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHCache", file: !74, line: 124, baseType: !75)
!74 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_bvhutils.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!75 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !76, size: 64)
!76 = !DICompositeType(tag: DW_TAG_structure_type, name: "LinkNode", file: !77, line: 118, flags: DIFlagFwdDecl)
!77 = !DIFile(filename: "blender/source/blender/blenlib/BLI_fileops.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!78 = !DIDerivedType(tag: DW_TAG_member, name: "drawObject", scope: !14, file: !13, line: 185, baseType: !79, size: 64, offset: 8320)
!79 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !80, size: 64)
!80 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUDrawObject", file: !13, line: 97, flags: DIFlagFwdDecl)
!81 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !14, file: !13, line: 186, baseType: !82, size: 32, offset: 8384)
!82 = !DIDerivedType(tag: DW_TAG_typedef, name: "DerivedMeshType", file: !13, line: 132, baseType: !83)
!83 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DerivedMeshType", file: !13, line: 128, baseType: !84, size: 32, elements: !85)
!84 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!85 = !{!86, !87, !88}
!86 = !DIEnumerator(name: "DM_TYPE_CDDM", value: 0, isUnsigned: true)
!87 = !DIEnumerator(name: "DM_TYPE_EDITBMESH", value: 1, isUnsigned: true)
!88 = !DIEnumerator(name: "DM_TYPE_CCGDM", value: 2, isUnsigned: true)
!89 = !DIDerivedType(tag: DW_TAG_member, name: "auto_bump_scale", scope: !14, file: !13, line: 187, baseType: !90, size: 32, offset: 8416)
!90 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!91 = !DIDerivedType(tag: DW_TAG_member, name: "dirty", scope: !14, file: !13, line: 188, baseType: !92, size: 32, offset: 8448)
!92 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDirtyFlag", file: !13, line: 175, baseType: !93)
!93 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDirtyFlag", file: !13, line: 164, baseType: !84, size: 32, elements: !94)
!94 = !{!95, !96, !97}
!95 = !DIEnumerator(name: "DM_DIRTY_TESS_CDLAYERS", value: 1, isUnsigned: true)
!96 = !DIEnumerator(name: "DM_DIRTY_MCOL_UPDATE_DRAW", value: 2, isUnsigned: true)
!97 = !DIEnumerator(name: "DM_DIRTY_NORMALS", value: 4, isUnsigned: true)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "totmat", scope: !14, file: !13, line: 189, baseType: !27, size: 32, offset: 8480)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !14, file: !13, line: 190, baseType: !100, size: 64, offset: 8512)
!100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !101, size: 64)
!101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !102, size: 64)
!102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !103, line: 93, size: 7552, elements: !104)
!103 = !DIFile(filename: "blender/source/blender/makesdna/DNA_material_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!104 = !{!105, !168, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !220, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !289, !290, !291, !292, !293, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1854}
!105 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !102, file: !103, line: 94, baseType: !106, size: 960)
!106 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !107, line: 130, baseType: !108)
!107 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !107, line: 117, size: 960, elements: !109)
!109 = !{!110, !111, !112, !114, !130, !134, !136, !137, !138, !139}
!110 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !108, file: !107, line: 118, baseType: !41, size: 64)
!111 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !108, file: !107, line: 118, baseType: !41, size: 64, offset: 64)
!112 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !108, file: !107, line: 119, baseType: !113, size: 64, offset: 128)
!113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !108, size: 64)
!114 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !108, file: !107, line: 120, baseType: !115, size: 64, offset: 192)
!115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !116, size: 64)
!116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !107, line: 136, size: 17600, elements: !117)
!117 = !{!118, !119, !121, !124, !125, !126, !127}
!118 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !116, file: !107, line: 137, baseType: !106, size: 960)
!119 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !116, file: !107, line: 138, baseType: !120, size: 64, offset: 960)
!120 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !106, size: 64)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !116, file: !107, line: 139, baseType: !122, size: 64, offset: 1024)
!122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !123, size: 64)
!123 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !107, line: 43, flags: DIFlagFwdDecl)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !116, file: !107, line: 140, baseType: !58, size: 8192, offset: 1088)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !116, file: !107, line: 141, baseType: !58, size: 8192, offset: 9280)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !116, file: !107, line: 148, baseType: !115, size: 64, offset: 17472)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !116, file: !107, line: 150, baseType: !128, size: 64, offset: 17536)
!128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !129, size: 64)
!129 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !107, line: 45, flags: DIFlagFwdDecl)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !108, file: !107, line: 121, baseType: !131, size: 528, offset: 256)
!131 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 528, elements: !132)
!132 = !{!133}
!133 = !DISubrange(count: 66)
!134 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !108, file: !107, line: 126, baseType: !135, size: 16, offset: 784)
!135 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !108, file: !107, line: 127, baseType: !27, size: 32, offset: 800)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !108, file: !107, line: 128, baseType: !27, size: 32, offset: 832)
!138 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !108, file: !107, line: 128, baseType: !27, size: 32, offset: 864)
!139 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !108, file: !107, line: 129, baseType: !140, size: 64, offset: 896)
!140 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !141, size: 64)
!141 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !107, line: 75, baseType: !142)
!142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !107, line: 62, size: 1024, elements: !143)
!143 = !{!144, !146, !147, !148, !149, !150, !151, !152, !166, !167}
!144 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !142, file: !107, line: 63, baseType: !145, size: 64)
!145 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !142, size: 64)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !142, file: !107, line: 63, baseType: !145, size: 64, offset: 64)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !142, file: !107, line: 64, baseType: !37, size: 8, offset: 128)
!148 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !142, file: !107, line: 64, baseType: !37, size: 8, offset: 136)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !142, file: !107, line: 65, baseType: !135, size: 16, offset: 144)
!150 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !142, file: !107, line: 66, baseType: !36, size: 512, offset: 160)
!151 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !142, file: !107, line: 67, baseType: !27, size: 32, offset: 672)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !142, file: !107, line: 69, baseType: !153, size: 256, offset: 704)
!153 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !107, line: 60, baseType: !154)
!154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !107, line: 48, size: 256, elements: !155)
!155 = !{!156, !157, !164, !165}
!156 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !154, file: !107, line: 49, baseType: !41, size: 64)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !154, file: !107, line: 58, baseType: !158, size: 128, offset: 64)
!158 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !159, line: 71, baseType: !160)
!159 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !159, line: 69, size: 128, elements: !161)
!161 = !{!162, !163}
!162 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !160, file: !159, line: 70, baseType: !41, size: 64)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !160, file: !159, line: 70, baseType: !41, size: 64, offset: 64)
!164 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !154, file: !107, line: 59, baseType: !27, size: 32, offset: 192)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !154, file: !107, line: 59, baseType: !27, size: 32, offset: 224)
!166 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !142, file: !107, line: 70, baseType: !27, size: 32, offset: 960)
!167 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !142, file: !107, line: 74, baseType: !27, size: 32, offset: 992)
!168 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !102, file: !103, line: 95, baseType: !169, size: 64, offset: 960)
!169 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !170, size: 64)
!170 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !103, line: 48, flags: DIFlagFwdDecl)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "material_type", scope: !102, file: !103, line: 97, baseType: !135, size: 16, offset: 1024)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !102, file: !103, line: 97, baseType: !135, size: 16, offset: 1040)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !102, file: !103, line: 99, baseType: !90, size: 32, offset: 1056)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !102, file: !103, line: 99, baseType: !90, size: 32, offset: 1088)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !102, file: !103, line: 99, baseType: !90, size: 32, offset: 1120)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "specr", scope: !102, file: !103, line: 100, baseType: !90, size: 32, offset: 1152)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "specg", scope: !102, file: !103, line: 100, baseType: !90, size: 32, offset: 1184)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "specb", scope: !102, file: !103, line: 100, baseType: !90, size: 32, offset: 1216)
!179 = !DIDerivedType(tag: DW_TAG_member, name: "mirr", scope: !102, file: !103, line: 101, baseType: !90, size: 32, offset: 1248)
!180 = !DIDerivedType(tag: DW_TAG_member, name: "mirg", scope: !102, file: !103, line: 101, baseType: !90, size: 32, offset: 1280)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "mirb", scope: !102, file: !103, line: 101, baseType: !90, size: 32, offset: 1312)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "ambr", scope: !102, file: !103, line: 102, baseType: !90, size: 32, offset: 1344)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "ambb", scope: !102, file: !103, line: 102, baseType: !90, size: 32, offset: 1376)
!184 = !DIDerivedType(tag: DW_TAG_member, name: "ambg", scope: !102, file: !103, line: 102, baseType: !90, size: 32, offset: 1408)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "amb", scope: !102, file: !103, line: 103, baseType: !90, size: 32, offset: 1440)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "emit", scope: !102, file: !103, line: 103, baseType: !90, size: 32, offset: 1472)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "ang", scope: !102, file: !103, line: 103, baseType: !90, size: 32, offset: 1504)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "spectra", scope: !102, file: !103, line: 103, baseType: !90, size: 32, offset: 1536)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "ray_mirror", scope: !102, file: !103, line: 103, baseType: !90, size: 32, offset: 1568)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !102, file: !103, line: 104, baseType: !90, size: 32, offset: 1600)
!191 = !DIDerivedType(tag: DW_TAG_member, name: "ref", scope: !102, file: !103, line: 104, baseType: !90, size: 32, offset: 1632)
!192 = !DIDerivedType(tag: DW_TAG_member, name: "spec", scope: !102, file: !103, line: 104, baseType: !90, size: 32, offset: 1664)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "zoffs", scope: !102, file: !103, line: 104, baseType: !90, size: 32, offset: 1696)
!194 = !DIDerivedType(tag: DW_TAG_member, name: "add", scope: !102, file: !103, line: 104, baseType: !90, size: 32, offset: 1728)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "translucency", scope: !102, file: !103, line: 105, baseType: !90, size: 32, offset: 1760)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "vol", scope: !102, file: !103, line: 108, baseType: !197, size: 704, offset: 1792)
!197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VolumeSettings", file: !103, line: 53, size: 704, elements: !198)
!198 = !{!199, !200, !201, !202, !203, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219}
!199 = !DIDerivedType(tag: DW_TAG_member, name: "density", scope: !197, file: !103, line: 54, baseType: !90, size: 32)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "emission", scope: !197, file: !103, line: 55, baseType: !90, size: 32, offset: 32)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "scattering", scope: !197, file: !103, line: 56, baseType: !90, size: 32, offset: 64)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "reflection", scope: !197, file: !103, line: 57, baseType: !90, size: 32, offset: 96)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "emission_col", scope: !197, file: !103, line: 59, baseType: !204, size: 96, offset: 128)
!204 = !DICompositeType(tag: DW_TAG_array_type, baseType: !90, size: 96, elements: !205)
!205 = !{!206}
!206 = !DISubrange(count: 3)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "transmission_col", scope: !197, file: !103, line: 60, baseType: !204, size: 96, offset: 224)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "reflection_col", scope: !197, file: !103, line: 61, baseType: !204, size: 96, offset: 320)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "density_scale", scope: !197, file: !103, line: 63, baseType: !90, size: 32, offset: 416)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "depth_cutoff", scope: !197, file: !103, line: 64, baseType: !90, size: 32, offset: 448)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "asymmetry", scope: !197, file: !103, line: 65, baseType: !90, size: 32, offset: 480)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize_type", scope: !197, file: !103, line: 67, baseType: !135, size: 16, offset: 512)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "shadeflag", scope: !197, file: !103, line: 68, baseType: !135, size: 16, offset: 528)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "shade_type", scope: !197, file: !103, line: 69, baseType: !135, size: 16, offset: 544)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "precache_resolution", scope: !197, file: !103, line: 70, baseType: !135, size: 16, offset: 560)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "stepsize", scope: !197, file: !103, line: 72, baseType: !90, size: 32, offset: 576)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "ms_diff", scope: !197, file: !103, line: 73, baseType: !90, size: 32, offset: 608)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "ms_intensity", scope: !197, file: !103, line: 74, baseType: !90, size: 32, offset: 640)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "ms_spread", scope: !197, file: !103, line: 75, baseType: !90, size: 32, offset: 672)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "game", scope: !102, file: !103, line: 109, baseType: !221, size: 128, offset: 2496)
!221 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameSettings", file: !103, line: 79, size: 128, elements: !222)
!222 = !{!223, !224, !225, !226}
!223 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !221, file: !103, line: 80, baseType: !27, size: 32)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_blend", scope: !221, file: !103, line: 81, baseType: !27, size: 32, offset: 32)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "face_orientation", scope: !221, file: !103, line: 82, baseType: !27, size: 32, offset: 64)
!226 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !221, file: !103, line: 83, baseType: !27, size: 32, offset: 96)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir", scope: !102, file: !103, line: 111, baseType: !90, size: 32, offset: 2624)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_mir_i", scope: !102, file: !103, line: 111, baseType: !90, size: 32, offset: 2656)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra", scope: !102, file: !103, line: 112, baseType: !90, size: 32, offset: 2688)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "fresnel_tra_i", scope: !102, file: !103, line: 112, baseType: !90, size: 32, offset: 2720)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !102, file: !103, line: 113, baseType: !90, size: 32, offset: 2752)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "tx_limit", scope: !102, file: !103, line: 114, baseType: !90, size: 32, offset: 2784)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "tx_falloff", scope: !102, file: !103, line: 114, baseType: !90, size: 32, offset: 2816)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth", scope: !102, file: !103, line: 115, baseType: !135, size: 16, offset: 2848)
!235 = !DIDerivedType(tag: DW_TAG_member, name: "ray_depth_tra", scope: !102, file: !103, line: 115, baseType: !135, size: 16, offset: 2864)
!236 = !DIDerivedType(tag: DW_TAG_member, name: "har", scope: !102, file: !103, line: 116, baseType: !135, size: 16, offset: 2880)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "seed1", scope: !102, file: !103, line: 117, baseType: !37, size: 8, offset: 2896)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "seed2", scope: !102, file: !103, line: 117, baseType: !37, size: 8, offset: 2904)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_mir", scope: !102, file: !103, line: 119, baseType: !90, size: 32, offset: 2912)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "gloss_tra", scope: !102, file: !103, line: 119, baseType: !90, size: 32, offset: 2944)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_mir", scope: !102, file: !103, line: 120, baseType: !135, size: 16, offset: 2976)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "samp_gloss_tra", scope: !102, file: !103, line: 120, baseType: !135, size: 16, offset: 2992)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_mir", scope: !102, file: !103, line: 121, baseType: !90, size: 32, offset: 3008)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "adapt_thresh_tra", scope: !102, file: !103, line: 121, baseType: !90, size: 32, offset: 3040)
!245 = !DIDerivedType(tag: DW_TAG_member, name: "aniso_gloss_mir", scope: !102, file: !103, line: 122, baseType: !90, size: 32, offset: 3072)
!246 = !DIDerivedType(tag: DW_TAG_member, name: "dist_mir", scope: !102, file: !103, line: 123, baseType: !90, size: 32, offset: 3104)
!247 = !DIDerivedType(tag: DW_TAG_member, name: "fadeto_mir", scope: !102, file: !103, line: 124, baseType: !135, size: 16, offset: 3136)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "shade_flag", scope: !102, file: !103, line: 125, baseType: !135, size: 16, offset: 3152)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !102, file: !103, line: 127, baseType: !27, size: 32, offset: 3168)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "mode_l", scope: !102, file: !103, line: 127, baseType: !27, size: 32, offset: 3200)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "mode2", scope: !102, file: !103, line: 128, baseType: !27, size: 32, offset: 3232)
!252 = !DIDerivedType(tag: DW_TAG_member, name: "mode2_l", scope: !102, file: !103, line: 128, baseType: !27, size: 32, offset: 3264)
!253 = !DIDerivedType(tag: DW_TAG_member, name: "flarec", scope: !102, file: !103, line: 129, baseType: !135, size: 16, offset: 3296)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "starc", scope: !102, file: !103, line: 129, baseType: !135, size: 16, offset: 3312)
!255 = !DIDerivedType(tag: DW_TAG_member, name: "linec", scope: !102, file: !103, line: 129, baseType: !135, size: 16, offset: 3328)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "ringc", scope: !102, file: !103, line: 129, baseType: !135, size: 16, offset: 3344)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "hasize", scope: !102, file: !103, line: 130, baseType: !90, size: 32, offset: 3360)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "flaresize", scope: !102, file: !103, line: 130, baseType: !90, size: 32, offset: 3392)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "subsize", scope: !102, file: !103, line: 130, baseType: !90, size: 32, offset: 3424)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "flareboost", scope: !102, file: !103, line: 130, baseType: !90, size: 32, offset: 3456)
!261 = !DIDerivedType(tag: DW_TAG_member, name: "strand_sta", scope: !102, file: !103, line: 131, baseType: !90, size: 32, offset: 3488)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "strand_end", scope: !102, file: !103, line: 131, baseType: !90, size: 32, offset: 3520)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "strand_ease", scope: !102, file: !103, line: 131, baseType: !90, size: 32, offset: 3552)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "strand_surfnor", scope: !102, file: !103, line: 131, baseType: !90, size: 32, offset: 3584)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "strand_min", scope: !102, file: !103, line: 132, baseType: !90, size: 32, offset: 3616)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "strand_widthfade", scope: !102, file: !103, line: 132, baseType: !90, size: 32, offset: 3648)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "strand_uvname", scope: !102, file: !103, line: 133, baseType: !36, size: 512, offset: 3680)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "sbias", scope: !102, file: !103, line: 135, baseType: !90, size: 32, offset: 4192)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "lbias", scope: !102, file: !103, line: 136, baseType: !90, size: 32, offset: 4224)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "shad_alpha", scope: !102, file: !103, line: 137, baseType: !90, size: 32, offset: 4256)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "septex", scope: !102, file: !103, line: 138, baseType: !27, size: 32, offset: 4288)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "rgbsel", scope: !102, file: !103, line: 141, baseType: !37, size: 8, offset: 4320)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "texact", scope: !102, file: !103, line: 141, baseType: !37, size: 8, offset: 4328)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "pr_type", scope: !102, file: !103, line: 141, baseType: !37, size: 8, offset: 4336)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !102, file: !103, line: 141, baseType: !37, size: 8, offset: 4344)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "pr_lamp", scope: !102, file: !103, line: 142, baseType: !135, size: 16, offset: 4352)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "pr_texture", scope: !102, file: !103, line: 142, baseType: !135, size: 16, offset: 4368)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "ml_flag", scope: !102, file: !103, line: 142, baseType: !135, size: 16, offset: 4384)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "mapflag", scope: !102, file: !103, line: 145, baseType: !37, size: 8, offset: 4400)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !102, file: !103, line: 145, baseType: !37, size: 8, offset: 4408)
!281 = !DIDerivedType(tag: DW_TAG_member, name: "diff_shader", scope: !102, file: !103, line: 148, baseType: !135, size: 16, offset: 4416)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "spec_shader", scope: !102, file: !103, line: 148, baseType: !135, size: 16, offset: 4432)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "roughness", scope: !102, file: !103, line: 149, baseType: !90, size: 32, offset: 4448)
!284 = !DIDerivedType(tag: DW_TAG_member, name: "refrac", scope: !102, file: !103, line: 149, baseType: !90, size: 32, offset: 4480)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "param", scope: !102, file: !103, line: 152, baseType: !286, size: 128, offset: 4512)
!286 = !DICompositeType(tag: DW_TAG_array_type, baseType: !90, size: 128, elements: !287)
!287 = !{!288}
!288 = !DISubrange(count: 4)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "rms", scope: !102, file: !103, line: 153, baseType: !90, size: 32, offset: 4640)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "darkness", scope: !102, file: !103, line: 154, baseType: !90, size: 32, offset: 4672)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !102, file: !103, line: 157, baseType: !135, size: 16, offset: 4704)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !102, file: !103, line: 157, baseType: !135, size: 16, offset: 4720)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_col", scope: !102, file: !103, line: 160, baseType: !294, size: 64, offset: 4736)
!294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !295, size: 64)
!295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorBand", file: !296, line: 113, size: 6208, elements: !297)
!296 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!297 = !{!298, !299, !300, !301, !302, !303, !307}
!298 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !295, file: !296, line: 114, baseType: !135, size: 16)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !295, file: !296, line: 114, baseType: !135, size: 16, offset: 16)
!300 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype", scope: !295, file: !296, line: 115, baseType: !37, size: 8, offset: 32)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "ipotype_hue", scope: !295, file: !296, line: 115, baseType: !37, size: 8, offset: 40)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "color_mode", scope: !295, file: !296, line: 116, baseType: !37, size: 8, offset: 48)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !295, file: !296, line: 117, baseType: !304, size: 8, offset: 56)
!304 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 8, elements: !305)
!305 = !{!306}
!306 = !DISubrange(count: 1)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !295, file: !296, line: 119, baseType: !308, size: 6144, offset: 64)
!308 = !DICompositeType(tag: DW_TAG_array_type, baseType: !309, size: 6144, elements: !318)
!309 = !DIDerivedType(tag: DW_TAG_typedef, name: "CBData", file: !296, line: 109, baseType: !310)
!310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CBData", file: !296, line: 106, size: 192, elements: !311)
!311 = !{!312, !313, !314, !315, !316, !317}
!312 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !310, file: !296, line: 107, baseType: !90, size: 32)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !310, file: !296, line: 107, baseType: !90, size: 32, offset: 32)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !310, file: !296, line: 107, baseType: !90, size: 32, offset: 64)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !310, file: !296, line: 107, baseType: !90, size: 32, offset: 96)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !310, file: !296, line: 107, baseType: !90, size: 32, offset: 128)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !310, file: !296, line: 108, baseType: !27, size: 32, offset: 160)
!318 = !{!319}
!319 = !DISubrange(count: 32)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_spec", scope: !102, file: !103, line: 161, baseType: !294, size: 64, offset: 4800)
!321 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_col", scope: !102, file: !103, line: 162, baseType: !37, size: 8, offset: 4864)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "rampin_spec", scope: !102, file: !103, line: 162, baseType: !37, size: 8, offset: 4872)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_col", scope: !102, file: !103, line: 163, baseType: !37, size: 8, offset: 4880)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "rampblend_spec", scope: !102, file: !103, line: 163, baseType: !37, size: 8, offset: 4888)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "ramp_show", scope: !102, file: !103, line: 164, baseType: !135, size: 16, offset: 4896)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !102, file: !103, line: 164, baseType: !135, size: 16, offset: 4912)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_col", scope: !102, file: !103, line: 165, baseType: !90, size: 32, offset: 4928)
!328 = !DIDerivedType(tag: DW_TAG_member, name: "rampfac_spec", scope: !102, file: !103, line: 165, baseType: !90, size: 32, offset: 4960)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !102, file: !103, line: 167, baseType: !330, size: 1152, offset: 4992)
!330 = !DICompositeType(tag: DW_TAG_array_type, baseType: !331, size: 1152, elements: !1812)
!331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !332, size: 64)
!332 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTex", file: !296, line: 57, size: 2496, elements: !333)
!333 = !{!334, !335, !336, !337, !338, !1611, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811}
!334 = !DIDerivedType(tag: DW_TAG_member, name: "texco", scope: !332, file: !296, line: 59, baseType: !135, size: 16)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "mapto", scope: !332, file: !296, line: 59, baseType: !135, size: 16, offset: 16)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "maptoneg", scope: !332, file: !296, line: 59, baseType: !135, size: 16, offset: 32)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "blendtype", scope: !332, file: !296, line: 59, baseType: !135, size: 16, offset: 48)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !332, file: !296, line: 60, baseType: !339, size: 64, offset: 64)
!339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !340, size: 64)
!340 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !341, line: 115, size: 11392, elements: !342)
!341 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!342 = !{!343, !344, !345, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1367, !1376, !1390, !1391, !1432, !1433, !1434, !1435, !1451, !1452, !1453, !1454, !1455, !1456, !1457, !1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1546, !1549, !1552, !1553, !1554, !1555, !1556, !1559, !1562, !1564, !1565, !1566, !1567, !1568, !1569, !1570, !1571, !1573, !1576, !1579, !1580, !1599, !1600}
!343 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !340, file: !341, line: 116, baseType: !106, size: 960)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !340, file: !341, line: 117, baseType: !169, size: 64, offset: 960)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !340, file: !341, line: 119, baseType: !346, size: 64, offset: 1024)
!346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !347, size: 64)
!347 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !348, line: 155, size: 1856, elements: !349)
!348 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_paint.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!349 = !{!350, !1275, !1283, !1292, !1298, !1299, !1300, !1302, !1305, !1307, !1316, !1320, !1321, !1322, !1323, !1326, !1329, !1330, !1331, !1332, !1333, !1335, !1336, !1337, !1338, !1339, !1342, !1343, !1346, !1349, !1350, !1351, !1352}
!350 = !DIDerivedType(tag: DW_TAG_member, name: "multires", scope: !347, file: !348, line: 157, baseType: !351, size: 64)
!351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !352, size: 64)
!352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MultiresModifierData", file: !353, line: 717, size: 960, elements: !354)
!353 = !DIFile(filename: "blender/source/blender/makesdna/DNA_modifier_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!354 = !{!355, !1268, !1269, !1270, !1271, !1272, !1273, !1274}
!355 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !352, file: !353, line: 718, baseType: !356, size: 896)
!356 = !DIDerivedType(tag: DW_TAG_typedef, name: "ModifierData", file: !353, line: 110, baseType: !357)
!357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ModifierData", file: !353, line: 99, size: 896, elements: !358)
!358 = !{!359, !361, !362, !363, !364, !365, !366, !367, !1266}
!359 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !357, file: !353, line: 100, baseType: !360, size: 64)
!360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !357, size: 64)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !357, file: !353, line: 100, baseType: !360, size: 64, offset: 64)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !357, file: !353, line: 102, baseType: !27, size: 32, offset: 128)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !357, file: !353, line: 102, baseType: !27, size: 32, offset: 160)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "stackindex", scope: !357, file: !353, line: 103, baseType: !27, size: 32, offset: 192)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !357, file: !353, line: 103, baseType: !27, size: 32, offset: 224)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !357, file: !353, line: 104, baseType: !36, size: 512, offset: 256)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !357, file: !353, line: 107, baseType: !368, size: 64, offset: 768)
!368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !369, size: 64)
!369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !370, line: 1216, size: 39680, elements: !371)
!370 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!371 = !{!372, !373, !374, !375, !378, !379, !380, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !406, !409, !877, !880, !1132, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1154, !1155, !1156, !1157, !1158, !1166, !1233, !1240, !1243, !1250, !1253, !1259, !1260, !1261, !1262, !1263}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !369, file: !370, line: 1217, baseType: !106, size: 960)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !369, file: !370, line: 1218, baseType: !169, size: 64, offset: 960)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !369, file: !370, line: 1220, baseType: !339, size: 64, offset: 1024)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !369, file: !370, line: 1221, baseType: !376, size: 64, offset: 1088)
!376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !377, size: 64)
!377 = !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !370, line: 52, flags: DIFlagFwdDecl)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !369, file: !370, line: 1223, baseType: !368, size: 64, offset: 1152)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !369, file: !370, line: 1225, baseType: !158, size: 128, offset: 1216)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !369, file: !370, line: 1226, baseType: !381, size: 64, offset: 1344)
!381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !382, size: 64)
!382 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !370, line: 69, size: 320, elements: !383)
!383 = !{!384, !385, !386, !387, !388, !389, !390, !391}
!384 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !382, file: !370, line: 70, baseType: !381, size: 64)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !382, file: !370, line: 70, baseType: !381, size: 64, offset: 64)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !382, file: !370, line: 71, baseType: !84, size: 32, offset: 128)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !382, file: !370, line: 71, baseType: !84, size: 32, offset: 160)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !382, file: !370, line: 72, baseType: !27, size: 32, offset: 192)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !382, file: !370, line: 73, baseType: !135, size: 16, offset: 224)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !382, file: !370, line: 73, baseType: !135, size: 16, offset: 240)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !382, file: !370, line: 74, baseType: !339, size: 64, offset: 256)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !369, file: !370, line: 1227, baseType: !339, size: 64, offset: 1408)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !369, file: !370, line: 1229, baseType: !204, size: 96, offset: 1472)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !369, file: !370, line: 1230, baseType: !204, size: 96, offset: 1568)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !369, file: !370, line: 1231, baseType: !204, size: 96, offset: 1664)
!396 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !369, file: !370, line: 1231, baseType: !204, size: 96, offset: 1760)
!397 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !369, file: !370, line: 1233, baseType: !84, size: 32, offset: 1856)
!398 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !369, file: !370, line: 1234, baseType: !27, size: 32, offset: 1888)
!399 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !369, file: !370, line: 1235, baseType: !84, size: 32, offset: 1920)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !369, file: !370, line: 1237, baseType: !135, size: 16, offset: 1952)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !369, file: !370, line: 1239, baseType: !37, size: 8, offset: 1968)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !369, file: !370, line: 1240, baseType: !304, size: 8, offset: 1976)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !369, file: !370, line: 1242, baseType: !404, size: 64, offset: 1984)
!404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !405, size: 64)
!405 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !103, line: 47, flags: DIFlagFwdDecl)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !369, file: !370, line: 1244, baseType: !407, size: 64, offset: 2048)
!407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !408, size: 64)
!408 = !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !370, line: 59, flags: DIFlagFwdDecl)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !369, file: !370, line: 1246, baseType: !410, size: 64, offset: 2112)
!410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !411, size: 64)
!411 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !370, line: 1067, size: 5184, elements: !412)
!412 = !{!413, !695, !696, !711, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !733, !749, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !798, !799, !800, !801, !802, !803, !804, !805, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !860}
!413 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !411, file: !370, line: 1068, baseType: !414, size: 64)
!414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !415, size: 64)
!415 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !370, line: 934, baseType: !416)
!416 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !370, line: 925, size: 576, elements: !417)
!417 = !{!418, !677, !678, !679, !680, !681, !694}
!418 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !416, file: !370, line: 926, baseType: !419, size: 320)
!419 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !370, line: 830, baseType: !420)
!420 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !370, line: 813, size: 320, elements: !421)
!421 = !{!422, !661, !670, !671, !674, !675, !676}
!422 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !420, file: !370, line: 814, baseType: !423, size: 64)
!423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !424, size: 64)
!424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !425, line: 54, size: 16448, elements: !426)
!425 = !DIFile(filename: "blender/source/blender/makesdna/DNA_brush_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!426 = !{!427, !428, !520, !567, !568, !569, !570, !573, !576, !577, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660}
!427 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !424, file: !425, line: 55, baseType: !106, size: 960)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !424, file: !425, line: 57, baseType: !429, size: 192, offset: 960)
!429 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BrushClone", file: !425, line: 48, size: 192, elements: !430)
!430 = !{!431, !516, !518, !519}
!431 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !429, file: !425, line: 49, baseType: !432, size: 64)
!432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !433, size: 64)
!433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !434, line: 77, size: 15424, elements: !435)
!434 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!435 = !{!436, !437, !438, !441, !444, !447, !450, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !470, !471, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !505, !506, !510}
!436 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !433, file: !434, line: 78, baseType: !106, size: 960)
!437 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !433, file: !434, line: 80, baseType: !58, size: 8192, offset: 960)
!438 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !433, file: !434, line: 82, baseType: !439, size: 64, offset: 9152)
!439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !440, size: 64)
!440 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !434, line: 43, flags: DIFlagFwdDecl)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !433, file: !434, line: 83, baseType: !442, size: 64, offset: 9216)
!442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !443, size: 64)
!443 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !107, line: 46, flags: DIFlagFwdDecl)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !433, file: !434, line: 86, baseType: !445, size: 64, offset: 9280)
!445 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !446, size: 64)
!446 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !434, line: 41, flags: DIFlagFwdDecl)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !433, file: !434, line: 87, baseType: !448, size: 64, offset: 9344)
!448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !449, size: 64)
!449 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !434, line: 44, flags: DIFlagFwdDecl)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !433, file: !434, line: 89, baseType: !451, size: 512, offset: 9408)
!451 = !DICompositeType(tag: DW_TAG_array_type, baseType: !448, size: 512, elements: !452)
!452 = !{!453}
!453 = !DISubrange(count: 8)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !433, file: !434, line: 90, baseType: !135, size: 16, offset: 9920)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !433, file: !434, line: 90, baseType: !135, size: 16, offset: 9936)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !433, file: !434, line: 92, baseType: !135, size: 16, offset: 9952)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !433, file: !434, line: 92, baseType: !135, size: 16, offset: 9968)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !433, file: !434, line: 93, baseType: !135, size: 16, offset: 9984)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !433, file: !434, line: 93, baseType: !135, size: 16, offset: 10000)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !433, file: !434, line: 94, baseType: !27, size: 32, offset: 10016)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !433, file: !434, line: 97, baseType: !135, size: 16, offset: 10048)
!462 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !433, file: !434, line: 97, baseType: !135, size: 16, offset: 10064)
!463 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !433, file: !434, line: 98, baseType: !135, size: 16, offset: 10080)
!464 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !433, file: !434, line: 98, baseType: !135, size: 16, offset: 10096)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !433, file: !434, line: 99, baseType: !135, size: 16, offset: 10112)
!466 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !433, file: !434, line: 99, baseType: !135, size: 16, offset: 10128)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !433, file: !434, line: 100, baseType: !84, size: 32, offset: 10144)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !433, file: !434, line: 101, baseType: !469, size: 64, offset: 10176)
!469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !84, size: 64)
!470 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !433, file: !434, line: 103, baseType: !128, size: 64, offset: 10240)
!471 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !433, file: !434, line: 104, baseType: !472, size: 64, offset: 10304)
!472 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !473, size: 64)
!473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !107, line: 159, size: 448, elements: !474)
!474 = !{!475, !479, !480, !482, !483, !485}
!475 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !473, file: !107, line: 161, baseType: !476, size: 64)
!476 = !DICompositeType(tag: DW_TAG_array_type, baseType: !84, size: 64, elements: !477)
!477 = !{!478}
!478 = !DISubrange(count: 2)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !473, file: !107, line: 162, baseType: !476, size: 64, offset: 64)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !473, file: !107, line: 163, baseType: !481, size: 32, offset: 128)
!481 = !DICompositeType(tag: DW_TAG_array_type, baseType: !135, size: 32, elements: !477)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !473, file: !107, line: 164, baseType: !481, size: 32, offset: 160)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !473, file: !107, line: 165, baseType: !484, size: 128, offset: 192)
!484 = !DICompositeType(tag: DW_TAG_array_type, baseType: !469, size: 128, elements: !477)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !473, file: !107, line: 166, baseType: !486, size: 128, offset: 320)
!486 = !DICompositeType(tag: DW_TAG_array_type, baseType: !442, size: 128, elements: !477)
!487 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !433, file: !434, line: 107, baseType: !90, size: 32, offset: 10368)
!488 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !433, file: !434, line: 108, baseType: !27, size: 32, offset: 10400)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !433, file: !434, line: 109, baseType: !135, size: 16, offset: 10432)
!490 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !433, file: !434, line: 110, baseType: !135, size: 16, offset: 10448)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !433, file: !434, line: 113, baseType: !27, size: 32, offset: 10464)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !433, file: !434, line: 113, baseType: !27, size: 32, offset: 10496)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !433, file: !434, line: 114, baseType: !37, size: 8, offset: 10528)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !433, file: !434, line: 114, baseType: !37, size: 8, offset: 10536)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !433, file: !434, line: 115, baseType: !135, size: 16, offset: 10544)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !433, file: !434, line: 116, baseType: !286, size: 128, offset: 10560)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !433, file: !434, line: 119, baseType: !90, size: 32, offset: 10688)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !433, file: !434, line: 119, baseType: !90, size: 32, offset: 10720)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !433, file: !434, line: 122, baseType: !500, size: 512, offset: 10752)
!500 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !501, line: 182, baseType: !502)
!501 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !501, line: 180, size: 512, elements: !503)
!503 = !{!504}
!504 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !502, file: !501, line: 181, baseType: !36, size: 512)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !433, file: !434, line: 123, baseType: !37, size: 8, offset: 11264)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !433, file: !434, line: 125, baseType: !507, size: 56, offset: 11272)
!507 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 56, elements: !508)
!508 = !{!509}
!509 = !DISubrange(count: 7)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !433, file: !434, line: 126, baseType: !511, size: 4096, offset: 11328)
!511 = !DICompositeType(tag: DW_TAG_array_type, baseType: !512, size: 4096, elements: !452)
!512 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !434, line: 69, baseType: !513)
!513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !434, line: 67, size: 512, elements: !514)
!514 = !{!515}
!515 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !513, file: !434, line: 68, baseType: !36, size: 512)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !429, file: !425, line: 50, baseType: !517, size: 64, offset: 64)
!517 = !DICompositeType(tag: DW_TAG_array_type, baseType: !90, size: 64, elements: !477)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !429, file: !425, line: 51, baseType: !90, size: 32, offset: 128)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !429, file: !425, line: 51, baseType: !90, size: 32, offset: 160)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !424, file: !425, line: 58, baseType: !521, size: 64, offset: 1152)
!521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !522, size: 64)
!522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !501, line: 72, size: 3072, elements: !523)
!523 = !{!524, !525, !526, !527, !528, !537, !538, !563, !564, !565, !566}
!524 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !522, file: !501, line: 73, baseType: !27, size: 32)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !522, file: !501, line: 73, baseType: !27, size: 32, offset: 32)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !522, file: !501, line: 74, baseType: !27, size: 32, offset: 64)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !522, file: !501, line: 75, baseType: !27, size: 32, offset: 96)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !522, file: !501, line: 77, baseType: !529, size: 128, offset: 128)
!529 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !530, line: 95, baseType: !531)
!530 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!531 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !530, line: 92, size: 128, elements: !532)
!532 = !{!533, !534, !535, !536}
!533 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !531, file: !530, line: 93, baseType: !90, size: 32)
!534 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !531, file: !530, line: 93, baseType: !90, size: 32, offset: 32)
!535 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !531, file: !530, line: 94, baseType: !90, size: 32, offset: 64)
!536 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !531, file: !530, line: 94, baseType: !90, size: 32, offset: 96)
!537 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !522, file: !501, line: 77, baseType: !529, size: 128, offset: 256)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !522, file: !501, line: 79, baseType: !539, size: 2304, offset: 384)
!539 = !DICompositeType(tag: DW_TAG_array_type, baseType: !540, size: 2304, elements: !287)
!540 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !501, line: 67, baseType: !541)
!541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !501, line: 55, size: 576, elements: !542)
!542 = !{!543, !544, !545, !546, !547, !548, !549, !550, !559, !560, !561, !562}
!543 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !541, file: !501, line: 56, baseType: !135, size: 16)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !541, file: !501, line: 56, baseType: !135, size: 16, offset: 16)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !541, file: !501, line: 58, baseType: !90, size: 32, offset: 32)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !541, file: !501, line: 59, baseType: !90, size: 32, offset: 64)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !541, file: !501, line: 59, baseType: !90, size: 32, offset: 96)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !541, file: !501, line: 60, baseType: !517, size: 64, offset: 128)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !541, file: !501, line: 60, baseType: !517, size: 64, offset: 192)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !541, file: !501, line: 61, baseType: !551, size: 64, offset: 256)
!551 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !552, size: 64)
!552 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !501, line: 47, baseType: !553)
!553 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !501, line: 44, size: 96, elements: !554)
!554 = !{!555, !556, !557, !558}
!555 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !553, file: !501, line: 45, baseType: !90, size: 32)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !553, file: !501, line: 45, baseType: !90, size: 32, offset: 32)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !553, file: !501, line: 46, baseType: !135, size: 16, offset: 64)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !553, file: !501, line: 46, baseType: !135, size: 16, offset: 80)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !541, file: !501, line: 62, baseType: !551, size: 64, offset: 320)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !541, file: !501, line: 64, baseType: !551, size: 64, offset: 384)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !541, file: !501, line: 65, baseType: !517, size: 64, offset: 448)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !541, file: !501, line: 66, baseType: !517, size: 64, offset: 512)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !522, file: !501, line: 80, baseType: !204, size: 96, offset: 2688)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !522, file: !501, line: 80, baseType: !204, size: 96, offset: 2784)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !522, file: !501, line: 81, baseType: !204, size: 96, offset: 2880)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !522, file: !501, line: 83, baseType: !204, size: 96, offset: 2976)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "mtex", scope: !424, file: !425, line: 59, baseType: !332, size: 2496, offset: 1216)
!568 = !DIDerivedType(tag: DW_TAG_member, name: "mask_mtex", scope: !424, file: !425, line: 60, baseType: !332, size: 2496, offset: 3712)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "toggle_brush", scope: !424, file: !425, line: 62, baseType: !423, size: 64, offset: 6208)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "icon_imbuf", scope: !424, file: !425, line: 64, baseType: !571, size: 64, offset: 6272)
!571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !572, size: 64)
!572 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !501, line: 136, flags: DIFlagFwdDecl)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !424, file: !425, line: 65, baseType: !574, size: 64, offset: 6336)
!574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !575, size: 64)
!575 = !DIDerivedType(tag: DW_TAG_typedef, name: "PreviewImage", file: !107, line: 167, baseType: !473)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "gradient", scope: !424, file: !425, line: 66, baseType: !294, size: 64, offset: 6400)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "paint_curve", scope: !424, file: !425, line: 67, baseType: !578, size: 64, offset: 6464)
!578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !579, size: 64)
!579 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PaintCurve", file: !425, line: 166, size: 1088, elements: !580)
!580 = !{!581, !582, !612, !613}
!581 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !579, file: !425, line: 168, baseType: !106, size: 960)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !579, file: !425, line: 169, baseType: !583, size: 64, offset: 960)
!583 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !584, size: 64)
!584 = !DIDerivedType(tag: DW_TAG_typedef, name: "PaintCurvePoint", file: !425, line: 164, baseType: !585)
!585 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PaintCurvePoint", file: !425, line: 160, size: 608, elements: !586)
!586 = !{!587, !611}
!587 = !DIDerivedType(tag: DW_TAG_member, name: "bez", scope: !585, file: !425, line: 162, baseType: !588, size: 576)
!588 = !DIDerivedType(tag: DW_TAG_typedef, name: "BezTriple", file: !589, line: 133, baseType: !590)
!589 = !DIFile(filename: "blender/source/blender/makesdna/DNA_curve_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BezTriple", file: !589, line: 117, size: 576, elements: !591)
!591 = !{!592, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609}
!592 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !590, file: !589, line: 118, baseType: !593, size: 288)
!593 = !DICompositeType(tag: DW_TAG_array_type, baseType: !90, size: 288, elements: !594)
!594 = !{!206, !206}
!595 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !590, file: !589, line: 119, baseType: !90, size: 32, offset: 288)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !590, file: !589, line: 119, baseType: !90, size: 32, offset: 320)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !590, file: !589, line: 119, baseType: !90, size: 32, offset: 352)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !590, file: !589, line: 121, baseType: !37, size: 8, offset: 384)
!599 = !DIDerivedType(tag: DW_TAG_member, name: "h1", scope: !590, file: !589, line: 123, baseType: !37, size: 8, offset: 392)
!600 = !DIDerivedType(tag: DW_TAG_member, name: "h2", scope: !590, file: !589, line: 123, baseType: !37, size: 8, offset: 400)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "f1", scope: !590, file: !589, line: 124, baseType: !37, size: 8, offset: 408)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "f2", scope: !590, file: !589, line: 124, baseType: !37, size: 8, offset: 416)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "f3", scope: !590, file: !589, line: 124, baseType: !37, size: 8, offset: 424)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "hide", scope: !590, file: !589, line: 126, baseType: !37, size: 8, offset: 432)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "easing", scope: !590, file: !589, line: 128, baseType: !37, size: 8, offset: 440)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "back", scope: !590, file: !589, line: 129, baseType: !90, size: 32, offset: 448)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "amplitude", scope: !590, file: !589, line: 130, baseType: !90, size: 32, offset: 480)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "period", scope: !590, file: !589, line: 130, baseType: !90, size: 32, offset: 512)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !590, file: !589, line: 132, baseType: !610, size: 32, offset: 544)
!610 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 32, elements: !287)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "pressure", scope: !585, file: !425, line: 163, baseType: !90, size: 32, offset: 576)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "tot_points", scope: !579, file: !425, line: 170, baseType: !27, size: 32, offset: 1024)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "add_index", scope: !579, file: !425, line: 171, baseType: !27, size: 32, offset: 1056)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "icon_filepath", scope: !424, file: !425, line: 69, baseType: !58, size: 8192, offset: 6528)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "normal_weight", scope: !424, file: !425, line: 71, baseType: !90, size: 32, offset: 14720)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "blend", scope: !424, file: !425, line: 73, baseType: !135, size: 16, offset: 14752)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "ob_mode", scope: !424, file: !425, line: 74, baseType: !135, size: 16, offset: 14768)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !424, file: !425, line: 75, baseType: !90, size: 32, offset: 14784)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !424, file: !425, line: 76, baseType: !27, size: 32, offset: 14816)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !424, file: !425, line: 77, baseType: !27, size: 32, offset: 14848)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "mask_pressure", scope: !424, file: !425, line: 78, baseType: !27, size: 32, offset: 14880)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "jitter", scope: !424, file: !425, line: 79, baseType: !90, size: 32, offset: 14912)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "jitter_absolute", scope: !424, file: !425, line: 80, baseType: !27, size: 32, offset: 14944)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "overlay_flags", scope: !424, file: !425, line: 81, baseType: !27, size: 32, offset: 14976)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "spacing", scope: !424, file: !425, line: 82, baseType: !27, size: 32, offset: 15008)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_stroke_radius", scope: !424, file: !425, line: 83, baseType: !27, size: 32, offset: 15040)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_stroke_factor", scope: !424, file: !425, line: 84, baseType: !90, size: 32, offset: 15072)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "rate", scope: !424, file: !425, line: 85, baseType: !90, size: 32, offset: 15104)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !424, file: !425, line: 87, baseType: !204, size: 96, offset: 15136)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !424, file: !425, line: 88, baseType: !90, size: 32, offset: 15232)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !424, file: !425, line: 90, baseType: !204, size: 96, offset: 15264)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_plane", scope: !424, file: !425, line: 92, baseType: !27, size: 32, offset: 15360)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "plane_offset", scope: !424, file: !425, line: 94, baseType: !90, size: 32, offset: 15392)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !424, file: !425, line: 96, baseType: !90, size: 32, offset: 15424)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "gradient_spacing", scope: !424, file: !425, line: 97, baseType: !27, size: 32, offset: 15456)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "gradient_stroke_mode", scope: !424, file: !425, line: 98, baseType: !27, size: 32, offset: 15488)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "gradient_fill_mode", scope: !424, file: !425, line: 99, baseType: !27, size: 32, offset: 15520)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_tool", scope: !424, file: !425, line: 101, baseType: !37, size: 8, offset: 15552)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "vertexpaint_tool", scope: !424, file: !425, line: 102, baseType: !37, size: 8, offset: 15560)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "imagepaint_tool", scope: !424, file: !425, line: 103, baseType: !37, size: 8, offset: 15568)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tool", scope: !424, file: !425, line: 104, baseType: !37, size: 8, offset: 15576)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "autosmooth_factor", scope: !424, file: !425, line: 106, baseType: !90, size: 32, offset: 15584)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "crease_pinch_factor", scope: !424, file: !425, line: 108, baseType: !90, size: 32, offset: 15616)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "plane_trim", scope: !424, file: !425, line: 110, baseType: !90, size: 32, offset: 15648)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !424, file: !425, line: 111, baseType: !90, size: 32, offset: 15680)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "texture_sample_bias", scope: !424, file: !425, line: 113, baseType: !90, size: 32, offset: 15712)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "texture_overlay_alpha", scope: !424, file: !425, line: 116, baseType: !27, size: 32, offset: 15744)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "mask_overlay_alpha", scope: !424, file: !425, line: 117, baseType: !27, size: 32, offset: 15776)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "cursor_overlay_alpha", scope: !424, file: !425, line: 118, baseType: !27, size: 32, offset: 15808)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !424, file: !425, line: 120, baseType: !90, size: 32, offset: 15840)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_threshold", scope: !424, file: !425, line: 123, baseType: !90, size: 32, offset: 15872)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "blur_kernel_radius", scope: !424, file: !425, line: 124, baseType: !27, size: 32, offset: 15904)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "blur_mode", scope: !424, file: !425, line: 125, baseType: !27, size: 32, offset: 15936)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "fill_threshold", scope: !424, file: !425, line: 128, baseType: !90, size: 32, offset: 15968)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "add_col", scope: !424, file: !425, line: 130, baseType: !204, size: 96, offset: 16000)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "sub_col", scope: !424, file: !425, line: 131, baseType: !204, size: 96, offset: 16096)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_pos", scope: !424, file: !425, line: 133, baseType: !517, size: 64, offset: 16192)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_dimension", scope: !424, file: !425, line: 134, baseType: !517, size: 64, offset: 16256)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "mask_stencil_pos", scope: !424, file: !425, line: 136, baseType: !517, size: 64, offset: 16320)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "mask_stencil_dimension", scope: !424, file: !425, line: 137, baseType: !517, size: 64, offset: 16384)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !420, file: !370, line: 815, baseType: !662, size: 64, offset: 64)
!662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !663, size: 64)
!663 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !425, line: 148, size: 1280, elements: !664)
!664 = !{!665, !666, !667, !668, !669}
!665 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !663, file: !425, line: 150, baseType: !106, size: 960)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "colors", scope: !663, file: !425, line: 153, baseType: !158, size: 128, offset: 960)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "deleted", scope: !663, file: !425, line: 154, baseType: !158, size: 128, offset: 1088)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "active_color", scope: !663, file: !425, line: 156, baseType: !27, size: 32, offset: 1216)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !663, file: !425, line: 157, baseType: !27, size: 32, offset: 1248)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !420, file: !370, line: 818, baseType: !41, size: 64, offset: 128)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !420, file: !370, line: 819, baseType: !672, size: 32, offset: 192)
!672 = !DICompositeType(tag: DW_TAG_array_type, baseType: !673, size: 32, elements: !287)
!673 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !420, file: !370, line: 822, baseType: !27, size: 32, offset: 224)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !420, file: !370, line: 826, baseType: !27, size: 32, offset: 256)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !420, file: !370, line: 829, baseType: !27, size: 32, offset: 288)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !416, file: !370, line: 928, baseType: !135, size: 16, offset: 320)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !416, file: !370, line: 928, baseType: !135, size: 16, offset: 336)
!679 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !416, file: !370, line: 929, baseType: !27, size: 32, offset: 352)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !416, file: !370, line: 930, baseType: !469, size: 64, offset: 384)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !416, file: !370, line: 931, baseType: !682, size: 64, offset: 448)
!682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !683, size: 64)
!683 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !684, line: 59, size: 128, elements: !685)
!684 = !DIFile(filename: "blender/source/blender/makesdna/DNA_meshdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!685 = !{!686, !692, !693}
!686 = !DIDerivedType(tag: DW_TAG_member, name: "dw", scope: !683, file: !684, line: 60, baseType: !687, size: 64)
!687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !688, size: 64)
!688 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformWeight", file: !684, line: 54, size: 64, elements: !689)
!689 = !{!690, !691}
!690 = !DIDerivedType(tag: DW_TAG_member, name: "def_nr", scope: !688, file: !684, line: 55, baseType: !27, size: 32)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !688, file: !684, line: 56, baseType: !90, size: 32, offset: 32)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "totweight", scope: !683, file: !684, line: 61, baseType: !27, size: 32, offset: 64)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !683, file: !684, line: 62, baseType: !27, size: 32, offset: 96)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !416, file: !370, line: 933, baseType: !41, size: 64, offset: 512)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !411, file: !370, line: 1069, baseType: !414, size: 64, offset: 64)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !411, file: !370, line: 1070, baseType: !697, size: 64, offset: 128)
!697 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !698, size: 64)
!698 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !370, line: 916, baseType: !699)
!699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !370, line: 891, size: 704, elements: !700)
!700 = !{!701, !702, !703, !705, !706, !707, !708, !709, !710}
!701 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !699, file: !370, line: 892, baseType: !419, size: 320)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !699, file: !370, line: 896, baseType: !27, size: 32, offset: 320)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !699, file: !370, line: 900, baseType: !704, size: 96, offset: 352)
!704 = !DICompositeType(tag: DW_TAG_array_type, baseType: !27, size: 96, elements: !205)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !699, file: !370, line: 903, baseType: !90, size: 32, offset: 448)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !699, file: !370, line: 906, baseType: !27, size: 32, offset: 480)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !699, file: !370, line: 909, baseType: !90, size: 32, offset: 512)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !699, file: !370, line: 912, baseType: !90, size: 32, offset: 544)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !699, file: !370, line: 914, baseType: !339, size: 64, offset: 576)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !699, file: !370, line: 915, baseType: !41, size: 64, offset: 640)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !411, file: !370, line: 1071, baseType: !712, size: 64, offset: 192)
!712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !713, size: 64)
!713 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !370, line: 920, baseType: !714)
!714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !370, line: 918, size: 320, elements: !715)
!715 = !{!716}
!716 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !714, file: !370, line: 919, baseType: !419, size: 320)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !411, file: !370, line: 1075, baseType: !90, size: 32, offset: 256)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !411, file: !370, line: 1077, baseType: !90, size: 32, offset: 288)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !411, file: !370, line: 1078, baseType: !90, size: 32, offset: 320)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !411, file: !370, line: 1079, baseType: !135, size: 16, offset: 352)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !411, file: !370, line: 1082, baseType: !135, size: 16, offset: 368)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !411, file: !370, line: 1085, baseType: !37, size: 8, offset: 384)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !411, file: !370, line: 1086, baseType: !37, size: 8, offset: 392)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !411, file: !370, line: 1087, baseType: !37, size: 8, offset: 400)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !411, file: !370, line: 1088, baseType: !37, size: 8, offset: 408)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !411, file: !370, line: 1090, baseType: !90, size: 32, offset: 416)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !411, file: !370, line: 1093, baseType: !135, size: 16, offset: 448)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !411, file: !370, line: 1096, baseType: !37, size: 8, offset: 464)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !411, file: !370, line: 1098, baseType: !730, size: 40, offset: 472)
!730 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 40, elements: !731)
!731 = !{!732}
!732 = !DISubrange(count: 5)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !411, file: !370, line: 1101, baseType: !734, size: 832, offset: 512)
!734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !370, line: 836, size: 832, elements: !735)
!735 = !{!736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748}
!736 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !734, file: !370, line: 837, baseType: !419, size: 320)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !734, file: !370, line: 839, baseType: !135, size: 16, offset: 320)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !734, file: !370, line: 839, baseType: !135, size: 16, offset: 336)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !734, file: !370, line: 842, baseType: !135, size: 16, offset: 352)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !734, file: !370, line: 842, baseType: !135, size: 16, offset: 368)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !734, file: !370, line: 843, baseType: !481, size: 32, offset: 384)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !734, file: !370, line: 845, baseType: !27, size: 32, offset: 416)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !734, file: !370, line: 847, baseType: !41, size: 64, offset: 448)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !734, file: !370, line: 848, baseType: !432, size: 64, offset: 512)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !734, file: !370, line: 849, baseType: !432, size: 64, offset: 576)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !734, file: !370, line: 850, baseType: !432, size: 64, offset: 640)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !734, file: !370, line: 851, baseType: !204, size: 96, offset: 704)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !734, file: !370, line: 852, baseType: !90, size: 32, offset: 800)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !411, file: !370, line: 1104, baseType: !750, size: 1344, offset: 1344)
!750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !370, line: 867, size: 1344, elements: !751)
!751 = !{!752, !753, !754, !755, !756, !767, !768, !769, !770, !771, !772, !773, !774, !775}
!752 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !750, file: !370, line: 868, baseType: !135, size: 16)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !750, file: !370, line: 869, baseType: !135, size: 16, offset: 16)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !750, file: !370, line: 870, baseType: !135, size: 16, offset: 32)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !750, file: !370, line: 871, baseType: !135, size: 16, offset: 48)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !750, file: !370, line: 873, baseType: !757, size: 896, offset: 64)
!757 = !DICompositeType(tag: DW_TAG_array_type, baseType: !758, size: 896, elements: !508)
!758 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !370, line: 864, baseType: !759)
!759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !370, line: 859, size: 128, elements: !760)
!760 = !{!761, !762, !763, !764, !765, !766}
!761 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !759, file: !370, line: 860, baseType: !135, size: 16)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !759, file: !370, line: 861, baseType: !135, size: 16, offset: 16)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !759, file: !370, line: 861, baseType: !135, size: 16, offset: 32)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !759, file: !370, line: 861, baseType: !135, size: 16, offset: 48)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !759, file: !370, line: 862, baseType: !27, size: 32, offset: 64)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !759, file: !370, line: 863, baseType: !90, size: 32, offset: 96)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !750, file: !370, line: 874, baseType: !41, size: 64, offset: 960)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !750, file: !370, line: 876, baseType: !90, size: 32, offset: 1024)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !750, file: !370, line: 876, baseType: !90, size: 32, offset: 1056)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !750, file: !370, line: 878, baseType: !27, size: 32, offset: 1088)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !750, file: !370, line: 879, baseType: !27, size: 32, offset: 1120)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !750, file: !370, line: 881, baseType: !27, size: 32, offset: 1152)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !750, file: !370, line: 881, baseType: !27, size: 32, offset: 1184)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !750, file: !370, line: 883, baseType: !368, size: 64, offset: 1216)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !750, file: !370, line: 884, baseType: !339, size: 64, offset: 1280)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !411, file: !370, line: 1107, baseType: !90, size: 32, offset: 2688)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !411, file: !370, line: 1110, baseType: !90, size: 32, offset: 2720)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !411, file: !370, line: 1113, baseType: !135, size: 16, offset: 2752)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !411, file: !370, line: 1113, baseType: !135, size: 16, offset: 2768)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !411, file: !370, line: 1116, baseType: !37, size: 8, offset: 2784)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !411, file: !370, line: 1117, baseType: !304, size: 8, offset: 2792)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !411, file: !370, line: 1120, baseType: !135, size: 16, offset: 2800)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !411, file: !370, line: 1121, baseType: !90, size: 32, offset: 2816)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !411, file: !370, line: 1122, baseType: !90, size: 32, offset: 2848)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !411, file: !370, line: 1123, baseType: !90, size: 32, offset: 2880)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !411, file: !370, line: 1124, baseType: !90, size: 32, offset: 2912)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !411, file: !370, line: 1125, baseType: !90, size: 32, offset: 2944)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !411, file: !370, line: 1126, baseType: !90, size: 32, offset: 2976)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !411, file: !370, line: 1127, baseType: !90, size: 32, offset: 3008)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !411, file: !370, line: 1128, baseType: !90, size: 32, offset: 3040)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !411, file: !370, line: 1129, baseType: !90, size: 32, offset: 3072)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !411, file: !370, line: 1130, baseType: !90, size: 32, offset: 3104)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !411, file: !370, line: 1131, baseType: !135, size: 16, offset: 3136)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !411, file: !370, line: 1132, baseType: !37, size: 8, offset: 3152)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !411, file: !370, line: 1133, baseType: !37, size: 8, offset: 3160)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !411, file: !370, line: 1134, baseType: !797, size: 24, offset: 3168)
!797 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 24, elements: !205)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !411, file: !370, line: 1135, baseType: !37, size: 8, offset: 3192)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !411, file: !370, line: 1138, baseType: !339, size: 64, offset: 3200)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !411, file: !370, line: 1139, baseType: !37, size: 8, offset: 3264)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !411, file: !370, line: 1140, baseType: !37, size: 8, offset: 3272)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !411, file: !370, line: 1141, baseType: !37, size: 8, offset: 3280)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !411, file: !370, line: 1142, baseType: !37, size: 8, offset: 3288)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !411, file: !370, line: 1143, baseType: !37, size: 8, offset: 3296)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !411, file: !370, line: 1144, baseType: !806, size: 64, offset: 3304)
!806 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 64, elements: !452)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !411, file: !370, line: 1145, baseType: !806, size: 64, offset: 3368)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !411, file: !370, line: 1148, baseType: !37, size: 8, offset: 3432)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !411, file: !370, line: 1149, baseType: !37, size: 8, offset: 3440)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !411, file: !370, line: 1152, baseType: !37, size: 8, offset: 3448)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !411, file: !370, line: 1152, baseType: !37, size: 8, offset: 3456)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !411, file: !370, line: 1153, baseType: !37, size: 8, offset: 3464)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !411, file: !370, line: 1154, baseType: !135, size: 16, offset: 3472)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !411, file: !370, line: 1154, baseType: !135, size: 16, offset: 3488)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !411, file: !370, line: 1155, baseType: !135, size: 16, offset: 3504)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !411, file: !370, line: 1155, baseType: !135, size: 16, offset: 3520)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !411, file: !370, line: 1156, baseType: !37, size: 8, offset: 3536)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !411, file: !370, line: 1157, baseType: !37, size: 8, offset: 3544)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !411, file: !370, line: 1159, baseType: !37, size: 8, offset: 3552)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !411, file: !370, line: 1160, baseType: !37, size: 8, offset: 3560)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !411, file: !370, line: 1161, baseType: !37, size: 8, offset: 3568)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !411, file: !370, line: 1162, baseType: !37, size: 8, offset: 3576)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !411, file: !370, line: 1165, baseType: !27, size: 32, offset: 3584)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !411, file: !370, line: 1166, baseType: !27, size: 32, offset: 3616)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !411, file: !370, line: 1167, baseType: !27, size: 32, offset: 3648)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !411, file: !370, line: 1168, baseType: !27, size: 32, offset: 3680)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !411, file: !370, line: 1171, baseType: !135, size: 16, offset: 3712)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !411, file: !370, line: 1171, baseType: !135, size: 16, offset: 3728)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !411, file: !370, line: 1172, baseType: !27, size: 32, offset: 3744)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !411, file: !370, line: 1173, baseType: !90, size: 32, offset: 3776)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !411, file: !370, line: 1174, baseType: !90, size: 32, offset: 3808)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !411, file: !370, line: 1177, baseType: !833, size: 1024, offset: 3840)
!833 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !370, line: 963, size: 1024, elements: !834)
!834 = !{!835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !858, !859}
!835 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !833, file: !370, line: 965, baseType: !27, size: 32)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !833, file: !370, line: 968, baseType: !90, size: 32, offset: 32)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !833, file: !370, line: 971, baseType: !90, size: 32, offset: 64)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !833, file: !370, line: 974, baseType: !90, size: 32, offset: 96)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !833, file: !370, line: 977, baseType: !204, size: 96, offset: 128)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !833, file: !370, line: 979, baseType: !204, size: 96, offset: 224)
!841 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !833, file: !370, line: 982, baseType: !27, size: 32, offset: 320)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !833, file: !370, line: 987, baseType: !517, size: 64, offset: 352)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !833, file: !370, line: 989, baseType: !90, size: 32, offset: 416)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !833, file: !370, line: 994, baseType: !27, size: 32, offset: 448)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !833, file: !370, line: 995, baseType: !27, size: 32, offset: 480)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !833, file: !370, line: 997, baseType: !37, size: 8, offset: 512)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !833, file: !370, line: 998, baseType: !507, size: 56, offset: 520)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !833, file: !370, line: 1000, baseType: !90, size: 32, offset: 576)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !833, file: !370, line: 1003, baseType: !517, size: 64, offset: 608)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !833, file: !370, line: 1006, baseType: !27, size: 32, offset: 672)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !833, file: !370, line: 1009, baseType: !90, size: 32, offset: 704)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !833, file: !370, line: 1012, baseType: !517, size: 64, offset: 736)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !833, file: !370, line: 1015, baseType: !517, size: 64, offset: 800)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !833, file: !370, line: 1018, baseType: !27, size: 32, offset: 864)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !833, file: !370, line: 1019, baseType: !856, size: 64, offset: 896)
!856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !857, size: 64)
!857 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !370, line: 63, flags: DIFlagFwdDecl)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !833, file: !370, line: 1023, baseType: !90, size: 32, offset: 960)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !833, file: !370, line: 1024, baseType: !27, size: 32, offset: 992)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !411, file: !370, line: 1179, baseType: !861, size: 320, offset: 4864)
!861 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !370, line: 1043, size: 320, elements: !862)
!862 = !{!863, !864, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876}
!863 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !861, file: !370, line: 1044, baseType: !37, size: 8)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !861, file: !370, line: 1045, baseType: !865, size: 16, offset: 8)
!865 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 16, elements: !477)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !861, file: !370, line: 1048, baseType: !37, size: 8, offset: 24)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !861, file: !370, line: 1049, baseType: !90, size: 32, offset: 32)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !861, file: !370, line: 1049, baseType: !90, size: 32, offset: 64)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !861, file: !370, line: 1052, baseType: !90, size: 32, offset: 96)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !861, file: !370, line: 1052, baseType: !90, size: 32, offset: 128)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !861, file: !370, line: 1053, baseType: !37, size: 8, offset: 160)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !861, file: !370, line: 1054, baseType: !797, size: 24, offset: 168)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !861, file: !370, line: 1057, baseType: !90, size: 32, offset: 192)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !861, file: !370, line: 1057, baseType: !90, size: 32, offset: 224)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !861, file: !370, line: 1060, baseType: !90, size: 32, offset: 256)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !861, file: !370, line: 1060, baseType: !90, size: 32, offset: 288)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !369, file: !370, line: 1247, baseType: !878, size: 64, offset: 2176)
!878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !879, size: 64)
!879 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !370, line: 60, flags: DIFlagFwdDecl)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !369, file: !370, line: 1251, baseType: !881, size: 31872, offset: 2240)
!881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !370, line: 403, size: 31872, elements: !882)
!882 = !{!883, !920, !940, !949, !969, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1110, !1111, !1112, !1114, !1130, !1131}
!883 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !881, file: !370, line: 404, baseType: !884, size: 1984)
!884 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !370, line: 259, size: 1984, elements: !885)
!885 = !{!886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !903, !915}
!886 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !884, file: !370, line: 260, baseType: !37, size: 8)
!887 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !884, file: !370, line: 263, baseType: !37, size: 8, offset: 8)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !884, file: !370, line: 266, baseType: !37, size: 8, offset: 16)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !884, file: !370, line: 267, baseType: !37, size: 8, offset: 24)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !884, file: !370, line: 269, baseType: !37, size: 8, offset: 32)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !884, file: !370, line: 270, baseType: !37, size: 8, offset: 40)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !884, file: !370, line: 276, baseType: !37, size: 8, offset: 48)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !884, file: !370, line: 279, baseType: !37, size: 8, offset: 56)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !884, file: !370, line: 280, baseType: !135, size: 16, offset: 64)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !884, file: !370, line: 280, baseType: !135, size: 16, offset: 80)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !884, file: !370, line: 281, baseType: !90, size: 32, offset: 96)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !884, file: !370, line: 284, baseType: !37, size: 8, offset: 128)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !884, file: !370, line: 285, baseType: !37, size: 8, offset: 136)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !884, file: !370, line: 287, baseType: !900, size: 48, offset: 144)
!900 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 48, elements: !901)
!901 = !{!902}
!902 = !DISubrange(count: 6)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !884, file: !370, line: 290, baseType: !904, size: 1280, offset: 192)
!904 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !501, line: 174, baseType: !905)
!905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !501, line: 166, size: 1280, elements: !906)
!906 = !{!907, !908, !909, !910, !911, !912, !913, !914}
!907 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !905, file: !501, line: 167, baseType: !27, size: 32)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !905, file: !501, line: 167, baseType: !27, size: 32, offset: 32)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !905, file: !501, line: 168, baseType: !36, size: 512, offset: 64)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !905, file: !501, line: 169, baseType: !36, size: 512, offset: 576)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !905, file: !501, line: 170, baseType: !90, size: 32, offset: 1088)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !905, file: !501, line: 171, baseType: !90, size: 32, offset: 1120)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !905, file: !501, line: 172, baseType: !521, size: 64, offset: 1152)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !905, file: !501, line: 173, baseType: !41, size: 64, offset: 1216)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !884, file: !370, line: 291, baseType: !916, size: 512, offset: 1472)
!916 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !501, line: 178, baseType: !917)
!917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !501, line: 176, size: 512, elements: !918)
!918 = !{!919}
!919 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !917, file: !501, line: 177, baseType: !36, size: 512)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !881, file: !370, line: 406, baseType: !921, size: 64, offset: 1984)
!921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 64)
!922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !370, line: 80, size: 1472, elements: !923)
!923 = !{!924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936}
!924 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !922, file: !370, line: 81, baseType: !41, size: 64)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !922, file: !370, line: 82, baseType: !41, size: 64, offset: 64)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !922, file: !370, line: 83, baseType: !84, size: 32, offset: 128)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !922, file: !370, line: 84, baseType: !84, size: 32, offset: 160)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !922, file: !370, line: 86, baseType: !84, size: 32, offset: 192)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !922, file: !370, line: 87, baseType: !84, size: 32, offset: 224)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !922, file: !370, line: 88, baseType: !84, size: 32, offset: 256)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !922, file: !370, line: 89, baseType: !84, size: 32, offset: 288)
!932 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !922, file: !370, line: 90, baseType: !84, size: 32, offset: 320)
!933 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !922, file: !370, line: 91, baseType: !84, size: 32, offset: 352)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !922, file: !370, line: 92, baseType: !84, size: 32, offset: 384)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !922, file: !370, line: 93, baseType: !84, size: 32, offset: 416)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !922, file: !370, line: 95, baseType: !937, size: 1024, offset: 448)
!937 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 1024, elements: !938)
!938 = !{!939}
!939 = !DISubrange(count: 128)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !881, file: !370, line: 407, baseType: !941, size: 64, offset: 2048)
!941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !942, size: 64)
!942 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !370, line: 98, size: 1216, elements: !943)
!943 = !{!944, !945, !946, !947, !948}
!944 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !942, file: !370, line: 100, baseType: !41, size: 64)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !942, file: !370, line: 101, baseType: !41, size: 64, offset: 64)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !942, file: !370, line: 103, baseType: !84, size: 32, offset: 128)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !942, file: !370, line: 104, baseType: !84, size: 32, offset: 160)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !942, file: !370, line: 106, baseType: !937, size: 1024, offset: 192)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !881, file: !370, line: 408, baseType: !950, size: 512, offset: 2112)
!950 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !370, line: 109, size: 512, elements: !951)
!951 = !{!952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968}
!952 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !950, file: !370, line: 111, baseType: !27, size: 32)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !950, file: !370, line: 112, baseType: !27, size: 32, offset: 32)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !950, file: !370, line: 115, baseType: !27, size: 32, offset: 64)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !950, file: !370, line: 116, baseType: !27, size: 32, offset: 96)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !950, file: !370, line: 117, baseType: !27, size: 32, offset: 128)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !950, file: !370, line: 118, baseType: !27, size: 32, offset: 160)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !950, file: !370, line: 119, baseType: !27, size: 32, offset: 192)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !950, file: !370, line: 120, baseType: !27, size: 32, offset: 224)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !950, file: !370, line: 121, baseType: !27, size: 32, offset: 256)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !950, file: !370, line: 122, baseType: !27, size: 32, offset: 288)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !950, file: !370, line: 125, baseType: !27, size: 32, offset: 320)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !950, file: !370, line: 126, baseType: !27, size: 32, offset: 352)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !950, file: !370, line: 127, baseType: !135, size: 16, offset: 384)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !950, file: !370, line: 128, baseType: !135, size: 16, offset: 400)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !950, file: !370, line: 129, baseType: !27, size: 32, offset: 416)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !950, file: !370, line: 130, baseType: !27, size: 32, offset: 448)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !950, file: !370, line: 131, baseType: !27, size: 32, offset: 480)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !881, file: !370, line: 409, baseType: !970, size: 576, offset: 2624)
!970 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !370, line: 134, size: 576, elements: !971)
!971 = !{!972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988}
!972 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !970, file: !370, line: 135, baseType: !27, size: 32)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !970, file: !370, line: 136, baseType: !27, size: 32, offset: 32)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !970, file: !370, line: 137, baseType: !27, size: 32, offset: 64)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !970, file: !370, line: 138, baseType: !27, size: 32, offset: 96)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !970, file: !370, line: 139, baseType: !27, size: 32, offset: 128)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !970, file: !370, line: 140, baseType: !27, size: 32, offset: 160)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !970, file: !370, line: 141, baseType: !27, size: 32, offset: 192)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !970, file: !370, line: 142, baseType: !27, size: 32, offset: 224)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !970, file: !370, line: 143, baseType: !90, size: 32, offset: 256)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !970, file: !370, line: 144, baseType: !27, size: 32, offset: 288)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !970, file: !370, line: 145, baseType: !27, size: 32, offset: 320)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !970, file: !370, line: 147, baseType: !27, size: 32, offset: 352)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !970, file: !370, line: 148, baseType: !27, size: 32, offset: 384)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !970, file: !370, line: 149, baseType: !27, size: 32, offset: 416)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !970, file: !370, line: 150, baseType: !27, size: 32, offset: 448)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !970, file: !370, line: 151, baseType: !27, size: 32, offset: 480)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !970, file: !370, line: 152, baseType: !140, size: 64, offset: 512)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !881, file: !370, line: 411, baseType: !27, size: 32, offset: 3200)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !881, file: !370, line: 411, baseType: !27, size: 32, offset: 3232)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !881, file: !370, line: 411, baseType: !27, size: 32, offset: 3264)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !881, file: !370, line: 412, baseType: !90, size: 32, offset: 3296)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !881, file: !370, line: 413, baseType: !27, size: 32, offset: 3328)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !881, file: !370, line: 413, baseType: !27, size: 32, offset: 3360)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !881, file: !370, line: 415, baseType: !27, size: 32, offset: 3392)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !881, file: !370, line: 415, baseType: !27, size: 32, offset: 3424)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !881, file: !370, line: 416, baseType: !135, size: 16, offset: 3456)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !881, file: !370, line: 416, baseType: !135, size: 16, offset: 3472)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !881, file: !370, line: 418, baseType: !90, size: 32, offset: 3488)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !881, file: !370, line: 418, baseType: !90, size: 32, offset: 3520)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !881, file: !370, line: 421, baseType: !90, size: 32, offset: 3552)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !881, file: !370, line: 421, baseType: !90, size: 32, offset: 3584)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !881, file: !370, line: 421, baseType: !90, size: 32, offset: 3616)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !881, file: !370, line: 425, baseType: !135, size: 16, offset: 3648)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !881, file: !370, line: 425, baseType: !135, size: 16, offset: 3664)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !881, file: !370, line: 425, baseType: !135, size: 16, offset: 3680)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !881, file: !370, line: 426, baseType: !135, size: 16, offset: 3696)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !881, file: !370, line: 428, baseType: !135, size: 16, offset: 3712)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !881, file: !370, line: 428, baseType: !135, size: 16, offset: 3728)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !881, file: !370, line: 431, baseType: !27, size: 32, offset: 3744)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !881, file: !370, line: 433, baseType: !135, size: 16, offset: 3776)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !881, file: !370, line: 435, baseType: !135, size: 16, offset: 3792)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !881, file: !370, line: 437, baseType: !135, size: 16, offset: 3808)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !881, file: !370, line: 439, baseType: !135, size: 16, offset: 3824)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !881, file: !370, line: 441, baseType: !135, size: 16, offset: 3840)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !881, file: !370, line: 443, baseType: !135, size: 16, offset: 3856)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !881, file: !370, line: 449, baseType: !27, size: 32, offset: 3872)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !881, file: !370, line: 453, baseType: !27, size: 32, offset: 3904)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !881, file: !370, line: 458, baseType: !135, size: 16, offset: 3936)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !881, file: !370, line: 462, baseType: !135, size: 16, offset: 3952)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !881, file: !370, line: 467, baseType: !27, size: 32, offset: 3968)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !881, file: !370, line: 467, baseType: !27, size: 32, offset: 4000)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !881, file: !370, line: 469, baseType: !135, size: 16, offset: 4032)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !881, file: !370, line: 469, baseType: !135, size: 16, offset: 4048)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !881, file: !370, line: 469, baseType: !135, size: 16, offset: 4064)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !881, file: !370, line: 469, baseType: !135, size: 16, offset: 4080)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !881, file: !370, line: 474, baseType: !135, size: 16, offset: 4096)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !881, file: !370, line: 475, baseType: !37, size: 8, offset: 4112)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !881, file: !370, line: 476, baseType: !37, size: 8, offset: 4120)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !881, file: !370, line: 481, baseType: !27, size: 32, offset: 4128)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !881, file: !370, line: 486, baseType: !27, size: 32, offset: 4160)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !881, file: !370, line: 491, baseType: !27, size: 32, offset: 4192)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !881, file: !370, line: 496, baseType: !135, size: 16, offset: 4224)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !881, file: !370, line: 498, baseType: !135, size: 16, offset: 4240)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !881, file: !370, line: 501, baseType: !135, size: 16, offset: 4256)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !881, file: !370, line: 502, baseType: !135, size: 16, offset: 4272)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !881, file: !370, line: 508, baseType: !135, size: 16, offset: 4288)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !881, file: !370, line: 513, baseType: !135, size: 16, offset: 4304)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !881, file: !370, line: 515, baseType: !135, size: 16, offset: 4320)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !881, file: !370, line: 515, baseType: !135, size: 16, offset: 4336)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !881, file: !370, line: 519, baseType: !529, size: 128, offset: 4352)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !881, file: !370, line: 519, baseType: !529, size: 128, offset: 4480)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !881, file: !370, line: 520, baseType: !1044, size: 128, offset: 4608)
!1044 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !530, line: 89, baseType: !1045)
!1045 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !530, line: 86, size: 128, elements: !1046)
!1046 = !{!1047, !1048, !1049, !1050}
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1045, file: !530, line: 87, baseType: !27, size: 32)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1045, file: !530, line: 87, baseType: !27, size: 32, offset: 32)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1045, file: !530, line: 88, baseType: !27, size: 32, offset: 64)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1045, file: !530, line: 88, baseType: !27, size: 32, offset: 96)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !881, file: !370, line: 523, baseType: !158, size: 128, offset: 4736)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !881, file: !370, line: 524, baseType: !135, size: 16, offset: 4864)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !881, file: !370, line: 527, baseType: !135, size: 16, offset: 4880)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !881, file: !370, line: 532, baseType: !90, size: 32, offset: 4896)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !881, file: !370, line: 532, baseType: !90, size: 32, offset: 4928)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !881, file: !370, line: 534, baseType: !90, size: 32, offset: 4960)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !881, file: !370, line: 538, baseType: !90, size: 32, offset: 4992)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !881, file: !370, line: 542, baseType: !27, size: 32, offset: 5024)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !881, file: !370, line: 545, baseType: !90, size: 32, offset: 5056)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !881, file: !370, line: 545, baseType: !90, size: 32, offset: 5088)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !881, file: !370, line: 545, baseType: !90, size: 32, offset: 5120)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !881, file: !370, line: 548, baseType: !90, size: 32, offset: 5152)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !881, file: !370, line: 551, baseType: !135, size: 16, offset: 5184)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !881, file: !370, line: 551, baseType: !135, size: 16, offset: 5200)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !881, file: !370, line: 551, baseType: !135, size: 16, offset: 5216)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !881, file: !370, line: 551, baseType: !135, size: 16, offset: 5232)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !881, file: !370, line: 552, baseType: !135, size: 16, offset: 5248)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !881, file: !370, line: 552, baseType: !135, size: 16, offset: 5264)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !881, file: !370, line: 553, baseType: !90, size: 32, offset: 5280)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !881, file: !370, line: 553, baseType: !90, size: 32, offset: 5312)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !881, file: !370, line: 554, baseType: !135, size: 16, offset: 5344)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !881, file: !370, line: 554, baseType: !135, size: 16, offset: 5360)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !881, file: !370, line: 555, baseType: !90, size: 32, offset: 5376)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !881, file: !370, line: 555, baseType: !90, size: 32, offset: 5408)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !881, file: !370, line: 558, baseType: !58, size: 8192, offset: 5440)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !881, file: !370, line: 561, baseType: !27, size: 32, offset: 13632)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !881, file: !370, line: 562, baseType: !135, size: 16, offset: 13664)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !881, file: !370, line: 562, baseType: !135, size: 16, offset: 13680)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !881, file: !370, line: 565, baseType: !1080, size: 6144, offset: 13696)
!1080 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 6144, elements: !1081)
!1081 = !{!1082}
!1082 = !DISubrange(count: 768)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !881, file: !370, line: 568, baseType: !286, size: 128, offset: 19840)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !881, file: !370, line: 569, baseType: !286, size: 128, offset: 19968)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !881, file: !370, line: 572, baseType: !37, size: 8, offset: 20096)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !881, file: !370, line: 573, baseType: !37, size: 8, offset: 20104)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !881, file: !370, line: 574, baseType: !37, size: 8, offset: 20112)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !881, file: !370, line: 575, baseType: !730, size: 40, offset: 20120)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !881, file: !370, line: 578, baseType: !27, size: 32, offset: 20160)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !881, file: !370, line: 579, baseType: !135, size: 16, offset: 20192)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !881, file: !370, line: 580, baseType: !135, size: 16, offset: 20208)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !881, file: !370, line: 581, baseType: !90, size: 32, offset: 20224)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !881, file: !370, line: 582, baseType: !90, size: 32, offset: 20256)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !881, file: !370, line: 585, baseType: !135, size: 16, offset: 20288)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !881, file: !370, line: 585, baseType: !135, size: 16, offset: 20304)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !881, file: !370, line: 586, baseType: !90, size: 32, offset: 20320)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !881, file: !370, line: 589, baseType: !135, size: 16, offset: 20352)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !881, file: !370, line: 589, baseType: !135, size: 16, offset: 20368)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !881, file: !370, line: 590, baseType: !27, size: 32, offset: 20384)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !881, file: !370, line: 593, baseType: !135, size: 16, offset: 20416)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !881, file: !370, line: 593, baseType: !135, size: 16, offset: 20432)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !881, file: !370, line: 594, baseType: !135, size: 16, offset: 20448)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !881, file: !370, line: 594, baseType: !135, size: 16, offset: 20464)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !881, file: !370, line: 595, baseType: !90, size: 32, offset: 20480)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !881, file: !370, line: 596, baseType: !90, size: 32, offset: 20512)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !881, file: !370, line: 597, baseType: !1107, size: 64, offset: 20544)
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 64)
!1108 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !1109, line: 44, flags: DIFlagFwdDecl)
!1109 = !DIFile(filename: "blender/source/blender/makesdna/DNA_freestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !881, file: !370, line: 600, baseType: !27, size: 32, offset: 20608)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !881, file: !370, line: 601, baseType: !90, size: 32, offset: 20640)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !881, file: !370, line: 604, baseType: !1113, size: 256, offset: 20672)
!1113 = !DICompositeType(tag: DW_TAG_array_type, baseType: !37, size: 256, elements: !318)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !881, file: !370, line: 607, baseType: !1115, size: 10880, offset: 20928)
!1115 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !370, line: 364, size: 10880, elements: !1116)
!1116 = !{!1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129}
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1115, file: !370, line: 365, baseType: !884, size: 1984)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !1115, file: !370, line: 367, baseType: !58, size: 8192, offset: 1984)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1115, file: !370, line: 369, baseType: !135, size: 16, offset: 10176)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1115, file: !370, line: 369, baseType: !135, size: 16, offset: 10192)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1115, file: !370, line: 370, baseType: !135, size: 16, offset: 10208)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1115, file: !370, line: 370, baseType: !135, size: 16, offset: 10224)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !1115, file: !370, line: 372, baseType: !90, size: 32, offset: 10240)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1115, file: !370, line: 373, baseType: !90, size: 32, offset: 10272)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !1115, file: !370, line: 375, baseType: !797, size: 24, offset: 10304)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !1115, file: !370, line: 376, baseType: !37, size: 8, offset: 10328)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !1115, file: !370, line: 378, baseType: !37, size: 8, offset: 10336)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1115, file: !370, line: 379, baseType: !797, size: 24, offset: 10344)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !1115, file: !370, line: 381, baseType: !36, size: 512, offset: 10368)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !881, file: !370, line: 609, baseType: !27, size: 32, offset: 31808)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !881, file: !370, line: 610, baseType: !27, size: 32, offset: 31840)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !369, file: !370, line: 1252, baseType: !1133, size: 256, offset: 34112)
!1133 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !370, line: 158, size: 256, elements: !1134)
!1134 = !{!1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142, !1143}
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !1133, file: !370, line: 159, baseType: !27, size: 32)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !1133, file: !370, line: 160, baseType: !90, size: 32, offset: 32)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !1133, file: !370, line: 161, baseType: !90, size: 32, offset: 64)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !1133, file: !370, line: 162, baseType: !90, size: 32, offset: 96)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !1133, file: !370, line: 163, baseType: !27, size: 32, offset: 128)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1133, file: !370, line: 164, baseType: !135, size: 16, offset: 160)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1133, file: !370, line: 165, baseType: !135, size: 16, offset: 176)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1133, file: !370, line: 166, baseType: !90, size: 32, offset: 192)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1133, file: !370, line: 167, baseType: !90, size: 32, offset: 224)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !369, file: !370, line: 1254, baseType: !158, size: 128, offset: 34368)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !369, file: !370, line: 1255, baseType: !158, size: 128, offset: 34496)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !369, file: !370, line: 1257, baseType: !41, size: 64, offset: 34624)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !369, file: !370, line: 1258, baseType: !41, size: 64, offset: 34688)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !369, file: !370, line: 1259, baseType: !41, size: 64, offset: 34752)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !369, file: !370, line: 1260, baseType: !41, size: 64, offset: 34816)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !369, file: !370, line: 1262, baseType: !41, size: 64, offset: 34880)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !369, file: !370, line: 1265, baseType: !1152, size: 64, offset: 34944)
!1152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1153, size: 64)
!1153 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !370, line: 1265, flags: DIFlagFwdDecl)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !369, file: !370, line: 1266, baseType: !135, size: 16, offset: 35008)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !369, file: !370, line: 1267, baseType: !135, size: 16, offset: 35024)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !369, file: !370, line: 1270, baseType: !27, size: 32, offset: 35040)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !369, file: !370, line: 1271, baseType: !158, size: 128, offset: 35072)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !369, file: !370, line: 1274, baseType: !1159, size: 128, offset: 35200)
!1159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !370, line: 650, size: 128, elements: !1160)
!1160 = !{!1161, !1162, !1163, !1164, !1165}
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1159, file: !370, line: 651, baseType: !204, size: 96)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1159, file: !370, line: 652, baseType: !37, size: 8, offset: 96)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1159, file: !370, line: 652, baseType: !37, size: 8, offset: 104)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1159, file: !370, line: 652, baseType: !37, size: 8, offset: 112)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1159, file: !370, line: 652, baseType: !37, size: 8, offset: 120)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !369, file: !370, line: 1275, baseType: !1167, size: 1472, offset: 35328)
!1167 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !370, line: 676, size: 1472, elements: !1168)
!1168 = !{!1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1181, !1191, !1192, !1193, !1194, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232}
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !1167, file: !370, line: 679, baseType: !1159, size: 128)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !1167, file: !370, line: 680, baseType: !135, size: 16, offset: 128)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1167, file: !370, line: 680, baseType: !135, size: 16, offset: 144)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1167, file: !370, line: 680, baseType: !135, size: 16, offset: 160)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1167, file: !370, line: 680, baseType: !135, size: 16, offset: 176)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1167, file: !370, line: 681, baseType: !135, size: 16, offset: 192)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1167, file: !370, line: 681, baseType: !135, size: 16, offset: 208)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !1167, file: !370, line: 681, baseType: !135, size: 16, offset: 224)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !1167, file: !370, line: 681, baseType: !135, size: 16, offset: 240)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !1167, file: !370, line: 682, baseType: !135, size: 16, offset: 256)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1167, file: !370, line: 682, baseType: !1180, size: 48, offset: 272)
!1180 = !DICompositeType(tag: DW_TAG_array_type, baseType: !135, size: 48, elements: !205)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !1167, file: !370, line: 685, baseType: !1182, size: 192, offset: 320)
!1182 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !370, line: 633, size: 192, elements: !1183)
!1183 = !{!1184, !1185, !1186, !1187, !1188, !1189, !1190}
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !1182, file: !370, line: 634, baseType: !135, size: 16)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1182, file: !370, line: 634, baseType: !135, size: 16, offset: 16)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !1182, file: !370, line: 635, baseType: !135, size: 16, offset: 32)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !1182, file: !370, line: 635, baseType: !135, size: 16, offset: 48)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !1182, file: !370, line: 636, baseType: !90, size: 32, offset: 64)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1182, file: !370, line: 636, baseType: !90, size: 32, offset: 96)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !1182, file: !370, line: 637, baseType: !1107, size: 64, offset: 128)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !1167, file: !370, line: 686, baseType: !135, size: 16, offset: 512)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1167, file: !370, line: 686, baseType: !135, size: 16, offset: 528)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !1167, file: !370, line: 687, baseType: !90, size: 32, offset: 544)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !1167, file: !370, line: 688, baseType: !1195, size: 448, offset: 576)
!1195 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !370, line: 674, baseType: !1196)
!1196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !370, line: 659, size: 448, elements: !1197)
!1197 = !{!1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212}
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !1196, file: !370, line: 660, baseType: !90, size: 32)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !1196, file: !370, line: 661, baseType: !90, size: 32, offset: 32)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !1196, file: !370, line: 662, baseType: !90, size: 32, offset: 64)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !1196, file: !370, line: 663, baseType: !90, size: 32, offset: 96)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !1196, file: !370, line: 664, baseType: !90, size: 32, offset: 128)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !1196, file: !370, line: 665, baseType: !90, size: 32, offset: 160)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !1196, file: !370, line: 666, baseType: !90, size: 32, offset: 192)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !1196, file: !370, line: 667, baseType: !90, size: 32, offset: 224)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !1196, file: !370, line: 668, baseType: !90, size: 32, offset: 256)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !1196, file: !370, line: 669, baseType: !90, size: 32, offset: 288)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !1196, file: !370, line: 670, baseType: !27, size: 32, offset: 320)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !1196, file: !370, line: 671, baseType: !90, size: 32, offset: 352)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !1196, file: !370, line: 672, baseType: !90, size: 32, offset: 384)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1196, file: !370, line: 673, baseType: !135, size: 16, offset: 416)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1196, file: !370, line: 673, baseType: !135, size: 16, offset: 432)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1167, file: !370, line: 692, baseType: !90, size: 32, offset: 1024)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !1167, file: !370, line: 697, baseType: !90, size: 32, offset: 1056)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1167, file: !370, line: 703, baseType: !27, size: 32, offset: 1088)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1167, file: !370, line: 704, baseType: !135, size: 16, offset: 1120)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !1167, file: !370, line: 704, baseType: !135, size: 16, offset: 1136)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !1167, file: !370, line: 705, baseType: !135, size: 16, offset: 1152)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !1167, file: !370, line: 706, baseType: !135, size: 16, offset: 1168)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !1167, file: !370, line: 707, baseType: !135, size: 16, offset: 1184)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !1167, file: !370, line: 708, baseType: !135, size: 16, offset: 1200)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !1167, file: !370, line: 709, baseType: !135, size: 16, offset: 1216)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !1167, file: !370, line: 709, baseType: !135, size: 16, offset: 1232)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !1167, file: !370, line: 709, baseType: !135, size: 16, offset: 1248)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !1167, file: !370, line: 709, baseType: !135, size: 16, offset: 1264)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !1167, file: !370, line: 710, baseType: !135, size: 16, offset: 1280)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !1167, file: !370, line: 711, baseType: !135, size: 16, offset: 1296)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !1167, file: !370, line: 712, baseType: !90, size: 32, offset: 1312)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !1167, file: !370, line: 713, baseType: !90, size: 32, offset: 1344)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !1167, file: !370, line: 713, baseType: !90, size: 32, offset: 1376)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !1167, file: !370, line: 713, baseType: !90, size: 32, offset: 1408)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1167, file: !370, line: 713, baseType: !90, size: 32, offset: 1440)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !369, file: !370, line: 1278, baseType: !1234, size: 64, offset: 36800)
!1234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !370, line: 1197, size: 64, elements: !1235)
!1235 = !{!1236, !1237, !1238, !1239}
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !1234, file: !370, line: 1199, baseType: !90, size: 32)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !1234, file: !370, line: 1200, baseType: !37, size: 8, offset: 32)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !1234, file: !370, line: 1201, baseType: !37, size: 8, offset: 40)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1234, file: !370, line: 1202, baseType: !135, size: 16, offset: 48)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !369, file: !370, line: 1281, baseType: !1241, size: 64, offset: 36864)
!1241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1242, size: 64)
!1242 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !341, line: 58, flags: DIFlagFwdDecl)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !369, file: !370, line: 1284, baseType: !1244, size: 192, offset: 36928)
!1244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !370, line: 1208, size: 192, elements: !1245)
!1245 = !{!1246, !1247, !1248, !1249}
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1244, file: !370, line: 1209, baseType: !204, size: 96)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1244, file: !370, line: 1210, baseType: !27, size: 32, offset: 96)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !1244, file: !370, line: 1210, baseType: !27, size: 32, offset: 128)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1244, file: !370, line: 1210, baseType: !27, size: 32, offset: 160)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !369, file: !370, line: 1287, baseType: !1251, size: 64, offset: 37120)
!1251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1252, size: 64)
!1252 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !370, line: 62, flags: DIFlagFwdDecl)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !369, file: !370, line: 1289, baseType: !1254, size: 64, offset: 37184)
!1254 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !1255, line: 27, baseType: !1256)
!1255 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!1256 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !1257, line: 45, baseType: !1258)
!1257 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!1258 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !369, file: !370, line: 1290, baseType: !1254, size: 64, offset: 37248)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !369, file: !370, line: 1293, baseType: !904, size: 1280, offset: 37312)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !369, file: !370, line: 1294, baseType: !916, size: 512, offset: 38592)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !369, file: !370, line: 1295, baseType: !500, size: 512, offset: 39104)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !369, file: !370, line: 1298, baseType: !1264, size: 64, offset: 39616)
!1264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1265, size: 64)
!1265 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !370, line: 1298, flags: DIFlagFwdDecl)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !357, file: !353, line: 109, baseType: !1267, size: 64, offset: 832)
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !37, size: 64)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "lvl", scope: !352, file: !353, line: 720, baseType: !37, size: 8, offset: 896)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "sculptlvl", scope: !352, file: !353, line: 720, baseType: !37, size: 8, offset: 904)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "renderlvl", scope: !352, file: !353, line: 720, baseType: !37, size: 8, offset: 912)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "totlvl", scope: !352, file: !353, line: 720, baseType: !37, size: 8, offset: 920)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "simple", scope: !352, file: !353, line: 721, baseType: !37, size: 8, offset: 928)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !352, file: !353, line: 721, baseType: !37, size: 8, offset: 936)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !352, file: !353, line: 721, baseType: !865, size: 16, offset: 944)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "mvert", scope: !347, file: !348, line: 158, baseType: !1276, size: 64, offset: 64)
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 64)
!1277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MVert", file: !684, line: 65, size: 160, elements: !1278)
!1278 = !{!1279, !1280, !1281, !1282}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !1277, file: !684, line: 66, baseType: !204, size: 96)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !1277, file: !684, line: 67, baseType: !1180, size: 48, offset: 96)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1277, file: !684, line: 68, baseType: !37, size: 8, offset: 144)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !1277, file: !684, line: 68, baseType: !37, size: 8, offset: 152)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "mpoly", scope: !347, file: !348, line: 159, baseType: !1284, size: 64, offset: 128)
!1284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1285, size: 64)
!1285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MPoly", file: !684, line: 79, size: 96, elements: !1286)
!1286 = !{!1287, !1288, !1289, !1290, !1291}
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "loopstart", scope: !1285, file: !684, line: 81, baseType: !27, size: 32)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !1285, file: !684, line: 82, baseType: !27, size: 32, offset: 32)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !1285, file: !684, line: 83, baseType: !135, size: 16, offset: 64)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1285, file: !684, line: 84, baseType: !37, size: 8, offset: 80)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1285, file: !684, line: 84, baseType: !37, size: 8, offset: 88)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "mloop", scope: !347, file: !348, line: 160, baseType: !1293, size: 64, offset: 192)
!1293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1294, size: 64)
!1294 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoop", file: !684, line: 88, size: 64, elements: !1295)
!1295 = !{!1296, !1297}
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !1294, file: !684, line: 89, baseType: !84, size: 32)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !1294, file: !684, line: 90, baseType: !84, size: 32, offset: 32)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !347, file: !348, line: 161, baseType: !27, size: 32, offset: 256)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "totpoly", scope: !347, file: !348, line: 161, baseType: !27, size: 32, offset: 288)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "face_normals", scope: !347, file: !348, line: 162, baseType: !1301, size: 64, offset: 320)
!1301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !204, size: 64)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "kb", scope: !347, file: !348, line: 163, baseType: !1303, size: 64, offset: 384)
!1303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1304, size: 64)
!1304 = !DICompositeType(tag: DW_TAG_structure_type, name: "KeyBlock", file: !13, line: 92, flags: DIFlagFwdDecl)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "vmask", scope: !347, file: !348, line: 164, baseType: !1306, size: 64, offset: 448)
!1306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !90, size: 64)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "pmap", scope: !347, file: !348, line: 167, baseType: !1308, size: 64, offset: 512)
!1308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1309, size: 64)
!1309 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1310)
!1310 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshElemMap", file: !1311, line: 96, size: 128, elements: !1312)
!1311 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_mesh_mapping.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1312 = !{!1313, !1315}
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "indices", scope: !1310, file: !1311, line: 97, baseType: !1314, size: 64)
!1314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !27, size: 64)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1310, file: !1311, line: 98, baseType: !27, size: 32, offset: 64)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "bm", scope: !347, file: !348, line: 170, baseType: !1317, size: 64, offset: 576)
!1317 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1318, size: 64)
!1318 = !DICompositeType(tag: DW_TAG_structure_type, name: "BMesh", file: !1319, line: 43, flags: DIFlagFwdDecl)
!1319 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_pbvh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "cd_vert_node_offset", scope: !347, file: !348, line: 171, baseType: !27, size: 32, offset: 640)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "cd_face_node_offset", scope: !347, file: !348, line: 172, baseType: !27, size: 32, offset: 672)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "bm_smooth_shading", scope: !347, file: !348, line: 173, baseType: !673, size: 8, offset: 704)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "bm_log", scope: !347, file: !348, line: 175, baseType: !1324, size: 64, offset: 768)
!1324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1325, size: 64)
!1325 = !DICompositeType(tag: DW_TAG_structure_type, name: "BMLog", file: !1319, line: 44, flags: DIFlagFwdDecl)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "pbvh", scope: !347, file: !348, line: 178, baseType: !1327, size: 64, offset: 832)
!1327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1328, size: 64)
!1328 = !DICompositeType(tag: DW_TAG_structure_type, name: "PBVH", file: !1319, line: 41, flags: DIFlagFwdDecl)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "show_diffuse_color", scope: !347, file: !348, line: 179, baseType: !673, size: 8, offset: 896)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers_active", scope: !347, file: !348, line: 182, baseType: !673, size: 8, offset: 904)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "orig_cos", scope: !347, file: !348, line: 183, baseType: !1301, size: 64, offset: 960)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "deform_cos", scope: !347, file: !348, line: 184, baseType: !1301, size: 64, offset: 1024)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "deform_imats", scope: !347, file: !348, line: 185, baseType: !1334, size: 64, offset: 1088)
!1334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !593, size: 64)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "partial_redraw", scope: !347, file: !348, line: 188, baseType: !673, size: 8, offset: 1152)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "texcache_side", scope: !347, file: !348, line: 191, baseType: !84, size: 32, offset: 1184)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "texcache", scope: !347, file: !348, line: 191, baseType: !469, size: 64, offset: 1216)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "texcache_actual", scope: !347, file: !348, line: 191, baseType: !84, size: 32, offset: 1280)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "tex_pool", scope: !347, file: !348, line: 192, baseType: !1340, size: 64, offset: 1344)
!1340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1341, size: 64)
!1341 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePool", file: !348, line: 61, flags: DIFlagFwdDecl)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "layer_co", scope: !347, file: !348, line: 195, baseType: !1301, size: 64, offset: 1408)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "stroke", scope: !347, file: !348, line: 197, baseType: !1344, size: 64, offset: 1472)
!1344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1345, size: 64)
!1345 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptStroke", file: !348, line: 197, flags: DIFlagFwdDecl)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !347, file: !348, line: 198, baseType: !1347, size: 64, offset: 1536)
!1347 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1348, size: 64)
!1348 = !DICompositeType(tag: DW_TAG_structure_type, name: "StrokeCache", file: !348, line: 59, flags: DIFlagFwdDecl)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "last_stroke_valid", scope: !347, file: !348, line: 201, baseType: !673, size: 8, offset: 1600)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "last_stroke", scope: !347, file: !348, line: 202, baseType: !204, size: 96, offset: 1632)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "average_stroke_accum", scope: !347, file: !348, line: 204, baseType: !204, size: 96, offset: 1728)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "average_stroke_counter", scope: !347, file: !348, line: 205, baseType: !27, size: 32, offset: 1824)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !340, file: !341, line: 121, baseType: !135, size: 16, offset: 1088)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !340, file: !341, line: 121, baseType: !135, size: 16, offset: 1104)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !340, file: !341, line: 122, baseType: !27, size: 32, offset: 1120)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !340, file: !341, line: 122, baseType: !27, size: 32, offset: 1152)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !340, file: !341, line: 122, baseType: !27, size: 32, offset: 1184)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !340, file: !341, line: 123, baseType: !36, size: 512, offset: 1216)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !340, file: !341, line: 124, baseType: !339, size: 64, offset: 1728)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !340, file: !341, line: 124, baseType: !339, size: 64, offset: 1792)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !340, file: !341, line: 127, baseType: !339, size: 64, offset: 1856)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !340, file: !341, line: 127, baseType: !339, size: 64, offset: 1920)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !340, file: !341, line: 127, baseType: !339, size: 64, offset: 1984)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !340, file: !341, line: 128, baseType: !1365, size: 64, offset: 2048)
!1365 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1366, size: 64)
!1366 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !103, line: 49, flags: DIFlagFwdDecl)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !340, file: !341, line: 130, baseType: !1368, size: 64, offset: 2112)
!1368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1369, size: 64)
!1369 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !341, line: 97, size: 832, elements: !1370)
!1370 = !{!1371, !1374, !1375}
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1369, file: !341, line: 98, baseType: !1372, size: 768)
!1372 = !DICompositeType(tag: DW_TAG_array_type, baseType: !90, size: 768, elements: !1373)
!1373 = !{!453, !206}
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1369, file: !341, line: 99, baseType: !27, size: 32, offset: 768)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1369, file: !341, line: 99, baseType: !27, size: 32, offset: 800)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !340, file: !341, line: 131, baseType: !1377, size: 64, offset: 2176)
!1377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1378, size: 64)
!1378 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !1379, line: 486, size: 1600, elements: !1380)
!1379 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1380 = !{!1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389}
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1378, file: !1379, line: 487, baseType: !106, size: 960)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !1378, file: !1379, line: 489, baseType: !158, size: 128, offset: 960)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !1378, file: !1379, line: 490, baseType: !158, size: 128, offset: 1088)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !1378, file: !1379, line: 491, baseType: !158, size: 128, offset: 1216)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1378, file: !1379, line: 492, baseType: !158, size: 128, offset: 1344)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1378, file: !1379, line: 494, baseType: !27, size: 32, offset: 1472)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !1378, file: !1379, line: 495, baseType: !27, size: 32, offset: 1504)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !1378, file: !1379, line: 497, baseType: !27, size: 32, offset: 1536)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1378, file: !1379, line: 498, baseType: !27, size: 32, offset: 1568)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !340, file: !341, line: 132, baseType: !1377, size: 64, offset: 2240)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !340, file: !341, line: 133, baseType: !1392, size: 64, offset: 2304)
!1392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1393, size: 64)
!1393 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !1379, line: 334, size: 1728, elements: !1394)
!1394 = !{!1395, !1396, !1399, !1400, !1401, !1402, !1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1431}
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !1393, file: !1379, line: 335, baseType: !158, size: 128)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !1393, file: !1379, line: 336, baseType: !1397, size: 64, offset: 128)
!1397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1398, size: 64)
!1398 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !1379, line: 47, flags: DIFlagFwdDecl)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1393, file: !1379, line: 338, baseType: !135, size: 16, offset: 192)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1393, file: !1379, line: 338, baseType: !135, size: 16, offset: 208)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !1393, file: !1379, line: 339, baseType: !84, size: 32, offset: 224)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1393, file: !1379, line: 340, baseType: !27, size: 32, offset: 256)
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !1393, file: !1379, line: 342, baseType: !90, size: 32, offset: 288)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !1393, file: !1379, line: 343, baseType: !204, size: 96, offset: 320)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !1393, file: !1379, line: 344, baseType: !204, size: 96, offset: 416)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !1393, file: !1379, line: 347, baseType: !158, size: 128, offset: 512)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !1393, file: !1379, line: 349, baseType: !27, size: 32, offset: 640)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !1393, file: !1379, line: 350, baseType: !27, size: 32, offset: 672)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !1393, file: !1379, line: 351, baseType: !41, size: 64, offset: 704)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !1393, file: !1379, line: 352, baseType: !41, size: 64, offset: 768)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !1393, file: !1379, line: 354, baseType: !1412, size: 384, offset: 832)
!1412 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !1379, line: 116, baseType: !1413)
!1413 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !1379, line: 94, size: 384, elements: !1414)
!1414 = !{!1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430}
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !1413, file: !1379, line: 96, baseType: !27, size: 32)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !1413, file: !1379, line: 96, baseType: !27, size: 32, offset: 32)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !1413, file: !1379, line: 97, baseType: !27, size: 32, offset: 64)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !1413, file: !1379, line: 97, baseType: !27, size: 32, offset: 96)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !1413, file: !1379, line: 99, baseType: !135, size: 16, offset: 128)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !1413, file: !1379, line: 100, baseType: !135, size: 16, offset: 144)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !1413, file: !1379, line: 102, baseType: !135, size: 16, offset: 160)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1413, file: !1379, line: 105, baseType: !135, size: 16, offset: 176)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !1413, file: !1379, line: 108, baseType: !135, size: 16, offset: 192)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !1413, file: !1379, line: 109, baseType: !135, size: 16, offset: 208)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !1413, file: !1379, line: 111, baseType: !135, size: 16, offset: 224)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !1413, file: !1379, line: 112, baseType: !135, size: 16, offset: 240)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !1413, file: !1379, line: 114, baseType: !27, size: 32, offset: 256)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !1413, file: !1379, line: 114, baseType: !27, size: 32, offset: 288)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !1413, file: !1379, line: 115, baseType: !27, size: 32, offset: 320)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !1413, file: !1379, line: 115, baseType: !27, size: 32, offset: 352)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !1393, file: !1379, line: 355, baseType: !36, size: 512, offset: 1216)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !340, file: !341, line: 134, baseType: !41, size: 64, offset: 2368)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !340, file: !341, line: 136, baseType: !1241, size: 64, offset: 2432)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !340, file: !341, line: 138, baseType: !1412, size: 384, offset: 2496)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !340, file: !341, line: 139, baseType: !1436, size: 64, offset: 2880)
!1436 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1437, size: 64)
!1437 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !1379, line: 80, baseType: !1438)
!1438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !1379, line: 72, size: 192, elements: !1439)
!1439 = !{!1440, !1447, !1448, !1449, !1450}
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !1438, file: !1379, line: 73, baseType: !1441, size: 64)
!1441 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1442, size: 64)
!1442 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !1379, line: 59, baseType: !1443)
!1443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !1379, line: 56, size: 128, elements: !1444)
!1444 = !{!1445, !1446}
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !1443, file: !1379, line: 57, baseType: !204, size: 96)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1443, file: !1379, line: 58, baseType: !27, size: 32, offset: 96)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1438, file: !1379, line: 74, baseType: !27, size: 32, offset: 64)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !1438, file: !1379, line: 76, baseType: !27, size: 32, offset: 96)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !1438, file: !1379, line: 77, baseType: !27, size: 32, offset: 128)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1438, file: !1379, line: 79, baseType: !27, size: 32, offset: 160)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !340, file: !341, line: 141, baseType: !158, size: 128, offset: 2944)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !340, file: !341, line: 142, baseType: !158, size: 128, offset: 3072)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !340, file: !341, line: 143, baseType: !158, size: 128, offset: 3200)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !340, file: !341, line: 144, baseType: !158, size: 128, offset: 3328)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !340, file: !341, line: 146, baseType: !27, size: 32, offset: 3456)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !340, file: !341, line: 147, baseType: !27, size: 32, offset: 3488)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !340, file: !341, line: 150, baseType: !100, size: 64, offset: 3520)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !340, file: !341, line: 151, baseType: !1267, size: 64, offset: 3584)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !340, file: !341, line: 152, baseType: !27, size: 32, offset: 3648)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !340, file: !341, line: 153, baseType: !27, size: 32, offset: 3680)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !340, file: !341, line: 156, baseType: !204, size: 96, offset: 3712)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !340, file: !341, line: 156, baseType: !204, size: 96, offset: 3808)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !340, file: !341, line: 156, baseType: !204, size: 96, offset: 3904)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !340, file: !341, line: 157, baseType: !204, size: 96, offset: 4000)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !340, file: !341, line: 158, baseType: !204, size: 96, offset: 4096)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !340, file: !341, line: 159, baseType: !204, size: 96, offset: 4192)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !340, file: !341, line: 160, baseType: !204, size: 96, offset: 4288)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !340, file: !341, line: 160, baseType: !204, size: 96, offset: 4384)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !340, file: !341, line: 161, baseType: !286, size: 128, offset: 4480)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !340, file: !341, line: 161, baseType: !286, size: 128, offset: 4608)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !340, file: !341, line: 162, baseType: !204, size: 96, offset: 4736)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !340, file: !341, line: 162, baseType: !204, size: 96, offset: 4832)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !340, file: !341, line: 163, baseType: !90, size: 32, offset: 4928)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !340, file: !341, line: 163, baseType: !90, size: 32, offset: 4960)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !340, file: !341, line: 164, baseType: !1476, size: 512, offset: 4992)
!1476 = !DICompositeType(tag: DW_TAG_array_type, baseType: !90, size: 512, elements: !1477)
!1477 = !{!288, !288}
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !340, file: !341, line: 165, baseType: !1476, size: 512, offset: 5504)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !340, file: !341, line: 166, baseType: !1476, size: 512, offset: 6016)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !340, file: !341, line: 167, baseType: !1476, size: 512, offset: 6528)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !340, file: !341, line: 176, baseType: !1476, size: 512, offset: 7040)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !340, file: !341, line: 178, baseType: !84, size: 32, offset: 7552)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !340, file: !341, line: 180, baseType: !135, size: 16, offset: 7584)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !340, file: !341, line: 181, baseType: !135, size: 16, offset: 7600)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !340, file: !341, line: 183, baseType: !135, size: 16, offset: 7616)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !340, file: !341, line: 183, baseType: !135, size: 16, offset: 7632)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !340, file: !341, line: 184, baseType: !135, size: 16, offset: 7648)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !340, file: !341, line: 184, baseType: !135, size: 16, offset: 7664)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !340, file: !341, line: 185, baseType: !135, size: 16, offset: 7680)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !340, file: !341, line: 186, baseType: !135, size: 16, offset: 7696)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !340, file: !341, line: 187, baseType: !135, size: 16, offset: 7712)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !340, file: !341, line: 188, baseType: !37, size: 8, offset: 7728)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !340, file: !341, line: 189, baseType: !37, size: 8, offset: 7736)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !340, file: !341, line: 192, baseType: !27, size: 32, offset: 7744)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !340, file: !341, line: 192, baseType: !27, size: 32, offset: 7776)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !340, file: !341, line: 192, baseType: !27, size: 32, offset: 7808)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !340, file: !341, line: 192, baseType: !27, size: 32, offset: 7840)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !340, file: !341, line: 194, baseType: !27, size: 32, offset: 7872)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !340, file: !341, line: 202, baseType: !90, size: 32, offset: 7904)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !340, file: !341, line: 202, baseType: !90, size: 32, offset: 7936)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !340, file: !341, line: 202, baseType: !90, size: 32, offset: 7968)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !340, file: !341, line: 211, baseType: !90, size: 32, offset: 8000)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !340, file: !341, line: 212, baseType: !90, size: 32, offset: 8032)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !340, file: !341, line: 213, baseType: !90, size: 32, offset: 8064)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !340, file: !341, line: 214, baseType: !90, size: 32, offset: 8096)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !340, file: !341, line: 215, baseType: !90, size: 32, offset: 8128)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !340, file: !341, line: 216, baseType: !90, size: 32, offset: 8160)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !340, file: !341, line: 219, baseType: !90, size: 32, offset: 8192)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !340, file: !341, line: 220, baseType: !90, size: 32, offset: 8224)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !340, file: !341, line: 221, baseType: !90, size: 32, offset: 8256)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !340, file: !341, line: 224, baseType: !1512, size: 16, offset: 8288)
!1512 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !340, file: !341, line: 224, baseType: !1512, size: 16, offset: 8304)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !340, file: !341, line: 226, baseType: !135, size: 16, offset: 8320)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !340, file: !341, line: 228, baseType: !37, size: 8, offset: 8336)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !340, file: !341, line: 229, baseType: !37, size: 8, offset: 8344)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !340, file: !341, line: 231, baseType: !135, size: 16, offset: 8352)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !340, file: !341, line: 232, baseType: !37, size: 8, offset: 8368)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !340, file: !341, line: 233, baseType: !37, size: 8, offset: 8376)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !340, file: !341, line: 234, baseType: !90, size: 32, offset: 8384)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !340, file: !341, line: 235, baseType: !90, size: 32, offset: 8416)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !340, file: !341, line: 237, baseType: !158, size: 128, offset: 8448)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !340, file: !341, line: 238, baseType: !158, size: 128, offset: 8576)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !340, file: !341, line: 239, baseType: !158, size: 128, offset: 8704)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !340, file: !341, line: 240, baseType: !158, size: 128, offset: 8832)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !340, file: !341, line: 242, baseType: !90, size: 32, offset: 8960)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !340, file: !341, line: 244, baseType: !135, size: 16, offset: 8992)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !340, file: !341, line: 245, baseType: !1512, size: 16, offset: 9008)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !340, file: !341, line: 246, baseType: !286, size: 128, offset: 9024)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !340, file: !341, line: 248, baseType: !27, size: 32, offset: 9152)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !340, file: !341, line: 249, baseType: !27, size: 32, offset: 9184)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !340, file: !341, line: 251, baseType: !1533, size: 64, offset: 9216)
!1533 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1534, size: 64)
!1534 = !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !341, line: 251, flags: DIFlagFwdDecl)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !340, file: !341, line: 253, baseType: !37, size: 8, offset: 9280)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !340, file: !341, line: 254, baseType: !37, size: 8, offset: 9288)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !340, file: !341, line: 255, baseType: !135, size: 16, offset: 9296)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !340, file: !341, line: 256, baseType: !204, size: 96, offset: 9312)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !340, file: !341, line: 258, baseType: !158, size: 128, offset: 9408)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !340, file: !341, line: 259, baseType: !158, size: 128, offset: 9536)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !340, file: !341, line: 260, baseType: !158, size: 128, offset: 9664)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !340, file: !341, line: 261, baseType: !158, size: 128, offset: 9792)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !340, file: !341, line: 263, baseType: !1544, size: 64, offset: 9920)
!1544 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1545, size: 64)
!1545 = !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !341, line: 52, flags: DIFlagFwdDecl)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !340, file: !341, line: 264, baseType: !1547, size: 64, offset: 9984)
!1547 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1548, size: 64)
!1548 = !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !341, line: 53, flags: DIFlagFwdDecl)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !340, file: !341, line: 265, baseType: !1550, size: 64, offset: 10048)
!1550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1551, size: 64)
!1551 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !103, line: 46, flags: DIFlagFwdDecl)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !340, file: !341, line: 267, baseType: !37, size: 8, offset: 10112)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !340, file: !341, line: 268, baseType: !37, size: 8, offset: 10120)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !340, file: !341, line: 269, baseType: !135, size: 16, offset: 10128)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !340, file: !341, line: 270, baseType: !90, size: 32, offset: 10144)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !340, file: !341, line: 272, baseType: !1557, size: 64, offset: 10176)
!1557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1558, size: 64)
!1558 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !353, line: 732, flags: DIFlagFwdDecl)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !340, file: !341, line: 275, baseType: !1560, size: 64, offset: 10240)
!1560 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1561, size: 64)
!1561 = !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !341, line: 275, flags: DIFlagFwdDecl)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !340, file: !341, line: 277, baseType: !1563, size: 64, offset: 10304)
!1563 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14, size: 64)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !340, file: !341, line: 277, baseType: !1563, size: 64, offset: 10368)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !340, file: !341, line: 278, baseType: !1254, size: 64, offset: 10432)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !340, file: !341, line: 279, baseType: !1254, size: 64, offset: 10496)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !340, file: !341, line: 280, baseType: !84, size: 32, offset: 10560)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !340, file: !341, line: 281, baseType: !84, size: 32, offset: 10592)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !340, file: !341, line: 283, baseType: !158, size: 128, offset: 10624)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !340, file: !341, line: 284, baseType: !158, size: 128, offset: 10752)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !340, file: !341, line: 285, baseType: !1572, size: 64, offset: 10880)
!1572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !158, size: 64)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !340, file: !341, line: 287, baseType: !1574, size: 64, offset: 10944)
!1574 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1575, size: 64)
!1575 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !341, line: 59, flags: DIFlagFwdDecl)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !340, file: !341, line: 288, baseType: !1577, size: 64, offset: 11008)
!1577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1578, size: 64)
!1578 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !341, line: 288, flags: DIFlagFwdDecl)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !340, file: !341, line: 290, baseType: !517, size: 64, offset: 11072)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !340, file: !341, line: 291, baseType: !1581, size: 64, offset: 11136)
!1581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1582, size: 64)
!1582 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !434, line: 65, baseType: !1583)
!1583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !434, line: 50, size: 320, elements: !1584)
!1584 = !{!1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598}
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1583, file: !434, line: 51, baseType: !368, size: 64)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1583, file: !434, line: 53, baseType: !27, size: 32, offset: 64)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !1583, file: !434, line: 54, baseType: !27, size: 32, offset: 96)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1583, file: !434, line: 55, baseType: !27, size: 32, offset: 128)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1583, file: !434, line: 55, baseType: !27, size: 32, offset: 160)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !1583, file: !434, line: 56, baseType: !37, size: 8, offset: 192)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !1583, file: !434, line: 56, baseType: !37, size: 8, offset: 200)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1583, file: !434, line: 57, baseType: !37, size: 8, offset: 208)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1583, file: !434, line: 57, baseType: !37, size: 8, offset: 216)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !1583, file: !434, line: 59, baseType: !135, size: 16, offset: 224)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !1583, file: !434, line: 59, baseType: !135, size: 16, offset: 240)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !1583, file: !434, line: 59, baseType: !135, size: 16, offset: 256)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1583, file: !434, line: 61, baseType: !135, size: 16, offset: 272)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1583, file: !434, line: 63, baseType: !27, size: 32, offset: 288)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !340, file: !341, line: 293, baseType: !158, size: 128, offset: 11200)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !340, file: !341, line: 294, baseType: !1601, size: 64, offset: 11328)
!1601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1602, size: 64)
!1602 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !341, line: 113, baseType: !1603)
!1603 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !341, line: 108, size: 256, elements: !1604)
!1604 = !{!1605, !1607, !1608, !1609, !1610}
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1603, file: !341, line: 109, baseType: !1606, size: 64)
!1606 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1603, size: 64)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1603, file: !341, line: 109, baseType: !1606, size: 64, offset: 64)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1603, file: !341, line: 110, baseType: !339, size: 64, offset: 128)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1603, file: !341, line: 111, baseType: !27, size: 32, offset: 192)
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !1603, file: !341, line: 112, baseType: !90, size: 32, offset: 224)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !332, file: !296, line: 61, baseType: !1612, size: 64, offset: 128)
!1612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1613, size: 64)
!1613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Tex", file: !296, line: 202, size: 3328, elements: !1614)
!1614 = !{!1615, !1616, !1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625, !1626, !1627, !1628, !1629, !1630, !1631, !1632, !1633, !1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664, !1665, !1666, !1667, !1668, !1669, !1670, !1671, !1693, !1694, !1723, !1743, !1751, !1752}
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1613, file: !296, line: 203, baseType: !106, size: 960)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1613, file: !296, line: 204, baseType: !169, size: 64, offset: 960)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "noisesize", scope: !1613, file: !296, line: 206, baseType: !90, size: 32, offset: 1024)
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "turbul", scope: !1613, file: !296, line: 206, baseType: !90, size: 32, offset: 1056)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "bright", scope: !1613, file: !296, line: 207, baseType: !90, size: 32, offset: 1088)
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "contrast", scope: !1613, file: !296, line: 207, baseType: !90, size: 32, offset: 1120)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "saturation", scope: !1613, file: !296, line: 207, baseType: !90, size: 32, offset: 1152)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "rfac", scope: !1613, file: !296, line: 207, baseType: !90, size: 32, offset: 1184)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "gfac", scope: !1613, file: !296, line: 207, baseType: !90, size: 32, offset: 1216)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "bfac", scope: !1613, file: !296, line: 207, baseType: !90, size: 32, offset: 1248)
!1625 = !DIDerivedType(tag: DW_TAG_member, name: "filtersize", scope: !1613, file: !296, line: 208, baseType: !90, size: 32, offset: 1280)
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1613, file: !296, line: 208, baseType: !90, size: 32, offset: 1312)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "mg_H", scope: !1613, file: !296, line: 211, baseType: !90, size: 32, offset: 1344)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "mg_lacunarity", scope: !1613, file: !296, line: 211, baseType: !90, size: 32, offset: 1376)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "mg_octaves", scope: !1613, file: !296, line: 211, baseType: !90, size: 32, offset: 1408)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "mg_offset", scope: !1613, file: !296, line: 211, baseType: !90, size: 32, offset: 1440)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "mg_gain", scope: !1613, file: !296, line: 211, baseType: !90, size: 32, offset: 1472)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "dist_amount", scope: !1613, file: !296, line: 214, baseType: !90, size: 32, offset: 1504)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "ns_outscale", scope: !1613, file: !296, line: 214, baseType: !90, size: 32, offset: 1536)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w1", scope: !1613, file: !296, line: 217, baseType: !90, size: 32, offset: 1568)
!1635 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w2", scope: !1613, file: !296, line: 218, baseType: !90, size: 32, offset: 1600)
!1636 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w3", scope: !1613, file: !296, line: 219, baseType: !90, size: 32, offset: 1632)
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "vn_w4", scope: !1613, file: !296, line: 220, baseType: !90, size: 32, offset: 1664)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "vn_mexp", scope: !1613, file: !296, line: 221, baseType: !90, size: 32, offset: 1696)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "vn_distm", scope: !1613, file: !296, line: 222, baseType: !135, size: 16, offset: 1728)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "vn_coltype", scope: !1613, file: !296, line: 222, baseType: !135, size: 16, offset: 1744)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "noisedepth", scope: !1613, file: !296, line: 224, baseType: !135, size: 16, offset: 1760)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "noisetype", scope: !1613, file: !296, line: 224, baseType: !135, size: 16, offset: 1776)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis", scope: !1613, file: !296, line: 227, baseType: !135, size: 16, offset: 1792)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "noisebasis2", scope: !1613, file: !296, line: 227, baseType: !135, size: 16, offset: 1808)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "imaflag", scope: !1613, file: !296, line: 229, baseType: !135, size: 16, offset: 1824)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1613, file: !296, line: 229, baseType: !135, size: 16, offset: 1840)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1613, file: !296, line: 230, baseType: !135, size: 16, offset: 1856)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !1613, file: !296, line: 230, baseType: !135, size: 16, offset: 1872)
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmin", scope: !1613, file: !296, line: 232, baseType: !90, size: 32, offset: 1888)
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "cropymin", scope: !1613, file: !296, line: 232, baseType: !90, size: 32, offset: 1920)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "cropxmax", scope: !1613, file: !296, line: 232, baseType: !90, size: 32, offset: 1952)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "cropymax", scope: !1613, file: !296, line: 232, baseType: !90, size: 32, offset: 1984)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "texfilter", scope: !1613, file: !296, line: 233, baseType: !27, size: 32, offset: 2016)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "afmax", scope: !1613, file: !296, line: 234, baseType: !27, size: 32, offset: 2048)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "xrepeat", scope: !1613, file: !296, line: 235, baseType: !135, size: 16, offset: 2080)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "yrepeat", scope: !1613, file: !296, line: 235, baseType: !135, size: 16, offset: 2096)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !1613, file: !296, line: 236, baseType: !135, size: 16, offset: 2112)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !1613, file: !296, line: 239, baseType: !135, size: 16, offset: 2128)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1613, file: !296, line: 240, baseType: !27, size: 32, offset: 2144)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !1613, file: !296, line: 241, baseType: !27, size: 32, offset: 2176)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1613, file: !296, line: 241, baseType: !27, size: 32, offset: 2208)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1613, file: !296, line: 241, baseType: !27, size: 32, offset: 2240)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "checkerdist", scope: !1613, file: !296, line: 243, baseType: !90, size: 32, offset: 2272)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "nabla", scope: !1613, file: !296, line: 243, baseType: !90, size: 32, offset: 2304)
!1665 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1613, file: !296, line: 244, baseType: !90, size: 32, offset: 2336)
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !1613, file: !296, line: 246, baseType: !1583, size: 320, offset: 2368)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !1613, file: !296, line: 248, baseType: !404, size: 64, offset: 2688)
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !1613, file: !296, line: 249, baseType: !1365, size: 64, offset: 2752)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !1613, file: !296, line: 250, baseType: !432, size: 64, offset: 2816)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !1613, file: !296, line: 251, baseType: !294, size: 64, offset: 2880)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "env", scope: !1613, file: !296, line: 252, baseType: !1672, size: 64, offset: 2944)
!1672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1673, size: 64)
!1673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EnvMap", file: !296, line: 122, size: 1600, elements: !1674)
!1674 = !{!1675, !1676, !1677, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692}
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1673, file: !296, line: 123, baseType: !339, size: 64)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !1673, file: !296, line: 124, baseType: !432, size: 64, offset: 64)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "cube", scope: !1673, file: !296, line: 125, baseType: !1678, size: 384, offset: 128)
!1678 = !DICompositeType(tag: DW_TAG_array_type, baseType: !571, size: 384, elements: !901)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !1673, file: !296, line: 126, baseType: !1476, size: 512, offset: 512)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "obimat", scope: !1673, file: !296, line: 127, baseType: !593, size: 288, offset: 1024)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1673, file: !296, line: 128, baseType: !135, size: 16, offset: 1312)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "stype", scope: !1673, file: !296, line: 128, baseType: !135, size: 16, offset: 1328)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "clipsta", scope: !1673, file: !296, line: 129, baseType: !90, size: 32, offset: 1344)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "clipend", scope: !1673, file: !296, line: 129, baseType: !90, size: 32, offset: 1376)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "viewscale", scope: !1673, file: !296, line: 130, baseType: !90, size: 32, offset: 1408)
!1686 = !DIDerivedType(tag: DW_TAG_member, name: "notlay", scope: !1673, file: !296, line: 131, baseType: !84, size: 32, offset: 1440)
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "cuberes", scope: !1673, file: !296, line: 132, baseType: !135, size: 16, offset: 1472)
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1673, file: !296, line: 132, baseType: !135, size: 16, offset: 1488)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1673, file: !296, line: 133, baseType: !27, size: 32, offset: 1504)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1673, file: !296, line: 133, baseType: !27, size: 32, offset: 1536)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1673, file: !296, line: 134, baseType: !135, size: 16, offset: 1568)
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !1673, file: !296, line: 134, baseType: !135, size: 16, offset: 1584)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1613, file: !296, line: 253, baseType: !472, size: 64, offset: 3008)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !1613, file: !296, line: 254, baseType: !1695, size: 64, offset: 3072)
!1695 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1696, size: 64)
!1696 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointDensity", file: !296, line: 137, size: 832, elements: !1697)
!1697 = !{!1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722}
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1696, file: !296, line: 138, baseType: !135, size: 16)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_type", scope: !1696, file: !296, line: 140, baseType: !135, size: 16, offset: 16)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_softness", scope: !1696, file: !296, line: 141, baseType: !90, size: 32, offset: 32)
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !1696, file: !296, line: 142, baseType: !90, size: 32, offset: 64)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1696, file: !296, line: 143, baseType: !135, size: 16, offset: 96)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "color_source", scope: !1696, file: !296, line: 144, baseType: !135, size: 16, offset: 112)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "totpoints", scope: !1696, file: !296, line: 145, baseType: !27, size: 32, offset: 128)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad", scope: !1696, file: !296, line: 147, baseType: !27, size: 32, offset: 160)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1696, file: !296, line: 149, baseType: !339, size: 64, offset: 192)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "psys", scope: !1696, file: !296, line: 150, baseType: !27, size: 32, offset: 256)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "psys_cache_space", scope: !1696, file: !296, line: 151, baseType: !135, size: 16, offset: 288)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "ob_cache_space", scope: !1696, file: !296, line: 152, baseType: !135, size: 16, offset: 304)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "point_tree", scope: !1696, file: !296, line: 154, baseType: !41, size: 64, offset: 320)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "point_data", scope: !1696, file: !296, line: 155, baseType: !1306, size: 64, offset: 384)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "noise_size", scope: !1696, file: !296, line: 157, baseType: !90, size: 32, offset: 448)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "noise_depth", scope: !1696, file: !296, line: 158, baseType: !135, size: 16, offset: 480)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "noise_influence", scope: !1696, file: !296, line: 159, baseType: !135, size: 16, offset: 496)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "noise_basis", scope: !1696, file: !296, line: 160, baseType: !135, size: 16, offset: 512)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad3", scope: !1696, file: !296, line: 161, baseType: !1180, size: 48, offset: 528)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "noise_fac", scope: !1696, file: !296, line: 162, baseType: !90, size: 32, offset: 576)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "speed_scale", scope: !1696, file: !296, line: 164, baseType: !90, size: 32, offset: 608)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_speed_scale", scope: !1696, file: !296, line: 164, baseType: !90, size: 32, offset: 640)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "pdpad2", scope: !1696, file: !296, line: 164, baseType: !90, size: 32, offset: 672)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "coba", scope: !1696, file: !296, line: 165, baseType: !294, size: 64, offset: 704)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "falloff_curve", scope: !1696, file: !296, line: 167, baseType: !521, size: 64, offset: 768)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "vd", scope: !1613, file: !296, line: 255, baseType: !1724, size: 64, offset: 3136)
!1724 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1725, size: 64)
!1725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VoxelData", file: !296, line: 170, size: 8704, elements: !1726)
!1726 = !{!1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742}
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "resol", scope: !1725, file: !296, line: 171, baseType: !704, size: 96)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "interp_type", scope: !1725, file: !296, line: 172, baseType: !27, size: 32, offset: 96)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "file_format", scope: !1725, file: !296, line: 173, baseType: !135, size: 16, offset: 128)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1725, file: !296, line: 174, baseType: !135, size: 16, offset: 144)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "extend", scope: !1725, file: !296, line: 175, baseType: !135, size: 16, offset: 160)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "smoked_type", scope: !1725, file: !296, line: 176, baseType: !135, size: 16, offset: 176)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "data_type", scope: !1725, file: !296, line: 177, baseType: !135, size: 16, offset: 192)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1725, file: !296, line: 178, baseType: !135, size: 16, offset: 208)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "_pad", scope: !1725, file: !296, line: 179, baseType: !27, size: 32, offset: 224)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1725, file: !296, line: 181, baseType: !339, size: 64, offset: 256)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "int_multiplier", scope: !1725, file: !296, line: 182, baseType: !90, size: 32, offset: 320)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "still_frame", scope: !1725, file: !296, line: 183, baseType: !27, size: 32, offset: 352)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "source_path", scope: !1725, file: !296, line: 184, baseType: !58, size: 8192, offset: 384)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "dataset", scope: !1725, file: !296, line: 187, baseType: !1306, size: 64, offset: 8576)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "cachedframe", scope: !1725, file: !296, line: 188, baseType: !27, size: 32, offset: 8640)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1725, file: !296, line: 189, baseType: !27, size: 32, offset: 8672)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "ot", scope: !1613, file: !296, line: 256, baseType: !1744, size: 64, offset: 3200)
!1744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1745, size: 64)
!1745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OceanTex", file: !296, line: 193, size: 640, elements: !1746)
!1746 = !{!1747, !1748, !1749, !1750}
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1745, file: !296, line: 194, baseType: !339, size: 64)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "oceanmod", scope: !1745, file: !296, line: 195, baseType: !36, size: 512, offset: 64)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "output", scope: !1745, file: !296, line: 197, baseType: !27, size: 32, offset: 576)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1745, file: !296, line: 198, baseType: !27, size: 32, offset: 608)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !1613, file: !296, line: 258, baseType: !37, size: 8, offset: 3264)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1613, file: !296, line: 259, baseType: !507, size: 56, offset: 3272)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !332, file: !296, line: 62, baseType: !36, size: 512, offset: 192)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "projx", scope: !332, file: !296, line: 64, baseType: !37, size: 8, offset: 704)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "projy", scope: !332, file: !296, line: 64, baseType: !37, size: 8, offset: 712)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "projz", scope: !332, file: !296, line: 64, baseType: !37, size: 8, offset: 720)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "mapping", scope: !332, file: !296, line: 64, baseType: !37, size: 8, offset: 728)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "ofs", scope: !332, file: !296, line: 65, baseType: !204, size: 96, offset: 736)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !332, file: !296, line: 65, baseType: !204, size: 96, offset: 832)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !332, file: !296, line: 65, baseType: !90, size: 32, offset: 928)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !332, file: !296, line: 67, baseType: !135, size: 16, offset: 960)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "colormodel", scope: !332, file: !296, line: 67, baseType: !135, size: 16, offset: 976)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "pmapto", scope: !332, file: !296, line: 67, baseType: !135, size: 16, offset: 992)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "pmaptoneg", scope: !332, file: !296, line: 67, baseType: !135, size: 16, offset: 1008)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "normapspace", scope: !332, file: !296, line: 68, baseType: !135, size: 16, offset: 1024)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "which_output", scope: !332, file: !296, line: 68, baseType: !135, size: 16, offset: 1040)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "brush_map_mode", scope: !332, file: !296, line: 69, baseType: !37, size: 8, offset: 1056)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !332, file: !296, line: 69, baseType: !507, size: 56, offset: 1064)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !332, file: !296, line: 70, baseType: !90, size: 32, offset: 1120)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !332, file: !296, line: 70, baseType: !90, size: 32, offset: 1152)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !332, file: !296, line: 70, baseType: !90, size: 32, offset: 1184)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "k", scope: !332, file: !296, line: 70, baseType: !90, size: 32, offset: 1216)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "def_var", scope: !332, file: !296, line: 71, baseType: !90, size: 32, offset: 1248)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !332, file: !296, line: 71, baseType: !90, size: 32, offset: 1280)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "colfac", scope: !332, file: !296, line: 74, baseType: !90, size: 32, offset: 1312)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "varfac", scope: !332, file: !296, line: 74, baseType: !90, size: 32, offset: 1344)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "norfac", scope: !332, file: !296, line: 77, baseType: !90, size: 32, offset: 1376)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "dispfac", scope: !332, file: !296, line: 77, baseType: !90, size: 32, offset: 1408)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "warpfac", scope: !332, file: !296, line: 77, baseType: !90, size: 32, offset: 1440)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "colspecfac", scope: !332, file: !296, line: 78, baseType: !90, size: 32, offset: 1472)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "mirrfac", scope: !332, file: !296, line: 78, baseType: !90, size: 32, offset: 1504)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "alphafac", scope: !332, file: !296, line: 78, baseType: !90, size: 32, offset: 1536)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "difffac", scope: !332, file: !296, line: 79, baseType: !90, size: 32, offset: 1568)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "specfac", scope: !332, file: !296, line: 79, baseType: !90, size: 32, offset: 1600)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "emitfac", scope: !332, file: !296, line: 79, baseType: !90, size: 32, offset: 1632)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "hardfac", scope: !332, file: !296, line: 79, baseType: !90, size: 32, offset: 1664)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "raymirrfac", scope: !332, file: !296, line: 80, baseType: !90, size: 32, offset: 1696)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "translfac", scope: !332, file: !296, line: 80, baseType: !90, size: 32, offset: 1728)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "ambfac", scope: !332, file: !296, line: 80, baseType: !90, size: 32, offset: 1760)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "colemitfac", scope: !332, file: !296, line: 81, baseType: !90, size: 32, offset: 1792)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "colreflfac", scope: !332, file: !296, line: 81, baseType: !90, size: 32, offset: 1824)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "coltransfac", scope: !332, file: !296, line: 81, baseType: !90, size: 32, offset: 1856)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "densfac", scope: !332, file: !296, line: 82, baseType: !90, size: 32, offset: 1888)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "scatterfac", scope: !332, file: !296, line: 82, baseType: !90, size: 32, offset: 1920)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "reflfac", scope: !332, file: !296, line: 82, baseType: !90, size: 32, offset: 1952)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "timefac", scope: !332, file: !296, line: 85, baseType: !90, size: 32, offset: 1984)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "lengthfac", scope: !332, file: !296, line: 85, baseType: !90, size: 32, offset: 2016)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "clumpfac", scope: !332, file: !296, line: 85, baseType: !90, size: 32, offset: 2048)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "dampfac", scope: !332, file: !296, line: 85, baseType: !90, size: 32, offset: 2080)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "kinkfac", scope: !332, file: !296, line: 86, baseType: !90, size: 32, offset: 2112)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "roughfac", scope: !332, file: !296, line: 86, baseType: !90, size: 32, offset: 2144)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "padensfac", scope: !332, file: !296, line: 86, baseType: !90, size: 32, offset: 2176)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "gravityfac", scope: !332, file: !296, line: 86, baseType: !90, size: 32, offset: 2208)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "lifefac", scope: !332, file: !296, line: 87, baseType: !90, size: 32, offset: 2240)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "sizefac", scope: !332, file: !296, line: 87, baseType: !90, size: 32, offset: 2272)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "ivelfac", scope: !332, file: !296, line: 87, baseType: !90, size: 32, offset: 2304)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "fieldfac", scope: !332, file: !296, line: 87, baseType: !90, size: 32, offset: 2336)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "shadowfac", scope: !332, file: !296, line: 90, baseType: !90, size: 32, offset: 2368)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "zenupfac", scope: !332, file: !296, line: 93, baseType: !90, size: 32, offset: 2400)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "zendownfac", scope: !332, file: !296, line: 93, baseType: !90, size: 32, offset: 2432)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "blendfac", scope: !332, file: !296, line: 93, baseType: !90, size: 32, offset: 2464)
!1812 = !{!1813}
!1813 = !DISubrange(count: 18)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !102, file: !103, line: 168, baseType: !404, size: 64, offset: 6144)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !102, file: !103, line: 169, baseType: !1365, size: 64, offset: 6208)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !102, file: !103, line: 170, baseType: !1550, size: 64, offset: 6272)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !102, file: !103, line: 171, baseType: !472, size: 64, offset: 6336)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "friction", scope: !102, file: !103, line: 174, baseType: !90, size: 32, offset: 6400)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "fh", scope: !102, file: !103, line: 174, baseType: !90, size: 32, offset: 6432)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "reflect", scope: !102, file: !103, line: 174, baseType: !90, size: 32, offset: 6464)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "fhdist", scope: !102, file: !103, line: 175, baseType: !90, size: 32, offset: 6496)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "xyfrict", scope: !102, file: !103, line: 175, baseType: !90, size: 32, offset: 6528)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "dynamode", scope: !102, file: !103, line: 176, baseType: !135, size: 16, offset: 6560)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !102, file: !103, line: 176, baseType: !135, size: 16, offset: 6576)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "sss_radius", scope: !102, file: !103, line: 179, baseType: !204, size: 96, offset: 6592)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "sss_col", scope: !102, file: !103, line: 179, baseType: !204, size: 96, offset: 6688)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "sss_error", scope: !102, file: !103, line: 180, baseType: !90, size: 32, offset: 6784)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "sss_scale", scope: !102, file: !103, line: 180, baseType: !90, size: 32, offset: 6816)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "sss_ior", scope: !102, file: !103, line: 180, baseType: !90, size: 32, offset: 6848)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "sss_colfac", scope: !102, file: !103, line: 181, baseType: !90, size: 32, offset: 6880)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "sss_texfac", scope: !102, file: !103, line: 181, baseType: !90, size: 32, offset: 6912)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "sss_front", scope: !102, file: !103, line: 182, baseType: !90, size: 32, offset: 6944)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "sss_back", scope: !102, file: !103, line: 182, baseType: !90, size: 32, offset: 6976)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "sss_flag", scope: !102, file: !103, line: 183, baseType: !135, size: 16, offset: 7008)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "sss_preset", scope: !102, file: !103, line: 183, baseType: !135, size: 16, offset: 7024)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "mapto_textured", scope: !102, file: !103, line: 185, baseType: !27, size: 32, offset: 7040)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "shadowonly_flag", scope: !102, file: !103, line: 186, baseType: !135, size: 16, offset: 7072)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !102, file: !103, line: 187, baseType: !135, size: 16, offset: 7088)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "line_col", scope: !102, file: !103, line: 190, baseType: !286, size: 128, offset: 7104)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "line_priority", scope: !102, file: !103, line: 191, baseType: !135, size: 16, offset: 7232)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "vcol_alpha", scope: !102, file: !103, line: 192, baseType: !135, size: 16, offset: 7248)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "paint_active_slot", scope: !102, file: !103, line: 195, baseType: !135, size: 16, offset: 7264)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "paint_clone_slot", scope: !102, file: !103, line: 196, baseType: !135, size: 16, offset: 7280)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "tot_slots", scope: !102, file: !103, line: 197, baseType: !135, size: 16, offset: 7296)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !102, file: !103, line: 198, baseType: !1180, size: 48, offset: 7312)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "texpaintslot", scope: !102, file: !103, line: 200, baseType: !1847, size: 64, offset: 7360)
!1847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1848, size: 64)
!1848 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TexPaintSlot", file: !103, line: 86, size: 192, elements: !1849)
!1849 = !{!1850, !1851, !1852, !1853}
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "ima", scope: !1848, file: !103, line: 87, baseType: !432, size: 64)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "uvname", scope: !1848, file: !103, line: 88, baseType: !1267, size: 64, offset: 64)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1848, file: !103, line: 89, baseType: !27, size: 32, offset: 128)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1848, file: !103, line: 90, baseType: !27, size: 32, offset: 160)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "gpumaterial", scope: !102, file: !103, line: 202, baseType: !158, size: 128, offset: 7424)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "cd_flag", scope: !14, file: !13, line: 193, baseType: !37, size: 8, offset: 8576)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "calcNormals", scope: !14, file: !13, line: 196, baseType: !1857, size: 64, offset: 8640)
!1857 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1858, size: 64)
!1858 = !DISubroutineType(types: !1859)
!1859 = !{null, !11}
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "calcLoopNormals", scope: !14, file: !13, line: 199, baseType: !1861, size: 64, offset: 8704)
!1861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1862, size: 64)
!1862 = !DISubroutineType(types: !1863)
!1863 = !{null, !11, !1864}
!1864 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !90)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "recalcTessellation", scope: !14, file: !13, line: 202, baseType: !1857, size: 64, offset: 8768)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "getNumVerts", scope: !14, file: !13, line: 207, baseType: !1867, size: 64, offset: 8832)
!1867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1868, size: 64)
!1868 = !DISubroutineType(types: !1869)
!1869 = !{!27, !11}
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "getNumEdges", scope: !14, file: !13, line: 208, baseType: !1867, size: 64, offset: 8896)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "getNumTessFaces", scope: !14, file: !13, line: 209, baseType: !1867, size: 64, offset: 8960)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "getNumLoops", scope: !14, file: !13, line: 210, baseType: !1867, size: 64, offset: 9024)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "getNumPolys", scope: !14, file: !13, line: 211, baseType: !1867, size: 64, offset: 9088)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "getVert", scope: !14, file: !13, line: 218, baseType: !1875, size: 64, offset: 9152)
!1875 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1876, size: 64)
!1876 = !DISubroutineType(types: !1877)
!1877 = !{null, !11, !27, !1276}
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "getEdge", scope: !14, file: !13, line: 219, baseType: !1879, size: 64, offset: 9216)
!1879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1880, size: 64)
!1880 = !DISubroutineType(types: !1881)
!1881 = !{null, !11, !27, !1882}
!1882 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1883, size: 64)
!1883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MEdge", file: !684, line: 48, size: 96, elements: !1884)
!1884 = !{!1885, !1886, !1887, !1888, !1889}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1883, file: !684, line: 49, baseType: !84, size: 32)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1883, file: !684, line: 49, baseType: !84, size: 32, offset: 32)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "crease", scope: !1883, file: !684, line: 50, baseType: !37, size: 8, offset: 64)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !1883, file: !684, line: 50, baseType: !37, size: 8, offset: 72)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1883, file: !684, line: 51, baseType: !135, size: 16, offset: 80)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFace", scope: !14, file: !13, line: 220, baseType: !1891, size: 64, offset: 9280)
!1891 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1892, size: 64)
!1892 = !DISubroutineType(types: !1893)
!1893 = !{null, !11, !27, !1894}
!1894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1895, size: 64)
!1895 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MFace", file: !684, line: 42, size: 160, elements: !1896)
!1896 = !{!1897, !1898, !1899, !1900, !1901, !1902, !1903}
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1895, file: !684, line: 43, baseType: !84, size: 32)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1895, file: !684, line: 43, baseType: !84, size: 32, offset: 32)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !1895, file: !684, line: 43, baseType: !84, size: 32, offset: 64)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !1895, file: !684, line: 43, baseType: !84, size: 32, offset: 96)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !1895, file: !684, line: 44, baseType: !135, size: 16, offset: 128)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "edcode", scope: !1895, file: !684, line: 45, baseType: !37, size: 8, offset: 144)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1895, file: !684, line: 45, baseType: !37, size: 8, offset: 152)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "getVertArray", scope: !14, file: !13, line: 227, baseType: !1905, size: 64, offset: 9344)
!1905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1906, size: 64)
!1906 = !DISubroutineType(types: !1907)
!1907 = !{!1276, !11}
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeArray", scope: !14, file: !13, line: 228, baseType: !1909, size: 64, offset: 9408)
!1909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1910, size: 64)
!1910 = !DISubroutineType(types: !1911)
!1911 = !{!1882, !11}
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceArray", scope: !14, file: !13, line: 229, baseType: !1913, size: 64, offset: 9472)
!1913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1914, size: 64)
!1914 = !DISubroutineType(types: !1915)
!1915 = !{!1894, !11}
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopArray", scope: !14, file: !13, line: 230, baseType: !1917, size: 64, offset: 9536)
!1917 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1918, size: 64)
!1918 = !DISubroutineType(types: !1919)
!1919 = !{!1293, !11}
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyArray", scope: !14, file: !13, line: 231, baseType: !1921, size: 64, offset: 9600)
!1921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1922, size: 64)
!1922 = !DISubroutineType(types: !1923)
!1923 = !{!1284, !11}
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "copyVertArray", scope: !14, file: !13, line: 236, baseType: !1925, size: 64, offset: 9664)
!1925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1926, size: 64)
!1926 = !DISubroutineType(types: !1927)
!1927 = !{null, !11, !1276}
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "copyEdgeArray", scope: !14, file: !13, line: 237, baseType: !1929, size: 64, offset: 9728)
!1929 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1930, size: 64)
!1930 = !DISubroutineType(types: !1931)
!1931 = !{null, !11, !1882}
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "copyTessFaceArray", scope: !14, file: !13, line: 238, baseType: !1933, size: 64, offset: 9792)
!1933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1934, size: 64)
!1934 = !DISubroutineType(types: !1935)
!1935 = !{null, !11, !1894}
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "copyLoopArray", scope: !14, file: !13, line: 239, baseType: !1937, size: 64, offset: 9856)
!1937 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1938, size: 64)
!1938 = !DISubroutineType(types: !1939)
!1939 = !{null, !11, !1293}
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "copyPolyArray", scope: !14, file: !13, line: 240, baseType: !1941, size: 64, offset: 9920)
!1941 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1942, size: 64)
!1942 = !DISubroutineType(types: !1943)
!1943 = !{null, !11, !1284}
!1944 = !DIDerivedType(tag: DW_TAG_member, name: "dupVertArray", scope: !14, file: !13, line: 245, baseType: !1905, size: 64, offset: 9984)
!1945 = !DIDerivedType(tag: DW_TAG_member, name: "dupEdgeArray", scope: !14, file: !13, line: 246, baseType: !1909, size: 64, offset: 10048)
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "dupTessFaceArray", scope: !14, file: !13, line: 247, baseType: !1913, size: 64, offset: 10112)
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "dupLoopArray", scope: !14, file: !13, line: 248, baseType: !1917, size: 64, offset: 10176)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "dupPolyArray", scope: !14, file: !13, line: 249, baseType: !1921, size: 64, offset: 10240)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "getVertData", scope: !14, file: !13, line: 255, baseType: !1950, size: 64, offset: 10304)
!1950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1951, size: 64)
!1951 = !DISubroutineType(types: !1952)
!1952 = !{!41, !11, !27, !27}
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeData", scope: !14, file: !13, line: 256, baseType: !1950, size: 64, offset: 10368)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceData", scope: !14, file: !13, line: 257, baseType: !1950, size: 64, offset: 10432)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyData", scope: !14, file: !13, line: 258, baseType: !1950, size: 64, offset: 10496)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "getVertDataArray", scope: !14, file: !13, line: 264, baseType: !1957, size: 64, offset: 10560)
!1957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1958, size: 64)
!1958 = !DISubroutineType(types: !1959)
!1959 = !{!41, !11, !27}
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeDataArray", scope: !14, file: !13, line: 265, baseType: !1957, size: 64, offset: 10624)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceDataArray", scope: !14, file: !13, line: 266, baseType: !1957, size: 64, offset: 10688)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopDataArray", scope: !14, file: !13, line: 267, baseType: !1957, size: 64, offset: 10752)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyDataArray", scope: !14, file: !13, line: 268, baseType: !1957, size: 64, offset: 10816)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "getVertDataLayout", scope: !14, file: !13, line: 272, baseType: !1965, size: 64, offset: 10880)
!1965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1966, size: 64)
!1966 = !DISubroutineType(types: !1967)
!1967 = !{!1968, !11}
!1968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17, size: 64)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeDataLayout", scope: !14, file: !13, line: 273, baseType: !1965, size: 64, offset: 10944)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceDataLayout", scope: !14, file: !13, line: 274, baseType: !1965, size: 64, offset: 11008)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopDataLayout", scope: !14, file: !13, line: 275, baseType: !1965, size: 64, offset: 11072)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyDataLayout", scope: !14, file: !13, line: 276, baseType: !1965, size: 64, offset: 11136)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromVertCData", scope: !14, file: !13, line: 279, baseType: !1974, size: 64, offset: 11200)
!1974 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1975, size: 64)
!1975 = !DISubroutineType(types: !1976)
!1976 = !{null, !11, !27, !1968, !27}
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromEdgeCData", scope: !14, file: !13, line: 280, baseType: !1974, size: 64, offset: 11264)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromFaceCData", scope: !14, file: !13, line: 281, baseType: !1974, size: 64, offset: 11328)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "getNumGrids", scope: !14, file: !13, line: 284, baseType: !1867, size: 64, offset: 11392)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "getGridSize", scope: !14, file: !13, line: 285, baseType: !1867, size: 64, offset: 11456)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "getGridData", scope: !14, file: !13, line: 286, baseType: !1982, size: 64, offset: 11520)
!1982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1983, size: 64)
!1983 = !DISubroutineType(types: !1984)
!1984 = !{!1985, !11}
!1985 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1986, size: 64)
!1986 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1987, size: 64)
!1987 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGElem", file: !1319, line: 33, flags: DIFlagFwdDecl)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "getGridAdjacency", scope: !14, file: !13, line: 287, baseType: !1989, size: 64, offset: 11584)
!1989 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1990, size: 64)
!1990 = !DISubroutineType(types: !1991)
!1991 = !{!1992, !11}
!1992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1993, size: 64)
!1993 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMGridAdjacency", file: !13, line: 120, baseType: !1994)
!1994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMGridAdjacency", file: !13, line: 117, size: 256, elements: !1995)
!1995 = !{!1996, !1998}
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1994, file: !13, line: 118, baseType: !1997, size: 128)
!1997 = !DICompositeType(tag: DW_TAG_array_type, baseType: !27, size: 128, elements: !287)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "rotation", scope: !1994, file: !13, line: 119, baseType: !1997, size: 128, offset: 128)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "getGridOffset", scope: !14, file: !13, line: 288, baseType: !2000, size: 64, offset: 11648)
!2000 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2001, size: 64)
!2001 = !DISubroutineType(types: !2002)
!2002 = !{!1314, !11}
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "getGridKey", scope: !14, file: !13, line: 289, baseType: !2004, size: 64, offset: 11712)
!2004 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2005, size: 64)
!2005 = !DISubroutineType(types: !2006)
!2006 = !{null, !11, !2007}
!2007 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2008, size: 64)
!2008 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CCGKey", file: !10, line: 53, size: 320, elements: !2009)
!2009 = !{!2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019}
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2008, file: !10, line: 54, baseType: !27, size: 32)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "elem_size", scope: !2008, file: !10, line: 58, baseType: !27, size: 32, offset: 32)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "grid_size", scope: !2008, file: !10, line: 61, baseType: !27, size: 32, offset: 64)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "grid_area", scope: !2008, file: !10, line: 63, baseType: !27, size: 32, offset: 96)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "grid_bytes", scope: !2008, file: !10, line: 65, baseType: !27, size: 32, offset: 128)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "normal_offset", scope: !2008, file: !10, line: 69, baseType: !27, size: 32, offset: 160)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "mask_offset", scope: !2008, file: !10, line: 73, baseType: !27, size: 32, offset: 192)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "num_layers", scope: !2008, file: !10, line: 75, baseType: !27, size: 32, offset: 224)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "has_normals", scope: !2008, file: !10, line: 76, baseType: !27, size: 32, offset: 256)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "has_mask", scope: !2008, file: !10, line: 77, baseType: !27, size: 32, offset: 288)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "getGridFlagMats", scope: !14, file: !13, line: 290, baseType: !2021, size: 64, offset: 11776)
!2021 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2022, size: 64)
!2022 = !DISubroutineType(types: !2023)
!2023 = !{!2024, !11}
!2024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2025, size: 64)
!2025 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMFlagMat", file: !13, line: 126, baseType: !2026)
!2026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMFlagMat", file: !13, line: 123, size: 32, elements: !2027)
!2027 = !{!2028, !2029}
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !2026, file: !13, line: 124, baseType: !135, size: 16)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2026, file: !13, line: 125, baseType: !37, size: 8, offset: 16)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "getGridHidden", scope: !14, file: !13, line: 291, baseType: !2031, size: 64, offset: 11840)
!2031 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2032, size: 64)
!2032 = !DISubroutineType(types: !2033)
!2033 = !{!2034, !11}
!2034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !469, size: 64)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedVert", scope: !14, file: !13, line: 299, baseType: !2036, size: 64, offset: 11904)
!2036 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2037, size: 64)
!2037 = !DISubroutineType(types: !2038)
!2038 = !{null, !11, !2039, !41, !2045}
!2039 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2040, size: 64)
!2040 = !DISubroutineType(types: !2041)
!2041 = !{null, !41, !27, !2042, !2042, !2043}
!2042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1864, size: 64)
!2043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2044, size: 64)
!2044 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !135)
!2045 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMForeachFlag", file: !13, line: 162, baseType: !2046)
!2046 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMForeachFlag", file: !13, line: 159, baseType: !84, size: 32, elements: !2047)
!2047 = !{!2048, !2049}
!2048 = !DIEnumerator(name: "DM_FOREACH_NOP", value: 0, isUnsigned: true)
!2049 = !DIEnumerator(name: "DM_FOREACH_USE_NORMAL", value: 1, isUnsigned: true)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedEdge", scope: !14, file: !13, line: 309, baseType: !2051, size: 64, offset: 11968)
!2051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2052, size: 64)
!2052 = !DISubroutineType(types: !2053)
!2053 = !{null, !11, !2054, !41}
!2054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2055, size: 64)
!2055 = !DISubroutineType(types: !2056)
!2056 = !{null, !41, !27, !2042, !2042}
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedLoop", scope: !14, file: !13, line: 317, baseType: !2058, size: 64, offset: 12032)
!2058 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2059, size: 64)
!2059 = !DISubroutineType(types: !2060)
!2060 = !{null, !11, !2061, !41, !2045}
!2061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2062, size: 64)
!2062 = !DISubroutineType(types: !2063)
!2063 = !{null, !41, !27, !27, !2042, !2042}
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedFaceCenter", scope: !14, file: !13, line: 327, baseType: !2065, size: 64, offset: 12096)
!2065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2066, size: 64)
!2066 = !DISubroutineType(types: !2067)
!2067 = !{null, !11, !2054, !41, !2045}
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "getMinMax", scope: !14, file: !13, line: 337, baseType: !2069, size: 64, offset: 12160)
!2069 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2070, size: 64)
!2070 = !DISubroutineType(types: !2071)
!2071 = !{null, !11, !1306, !1306}
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "getVertCo", scope: !14, file: !13, line: 344, baseType: !2073, size: 64, offset: 12224)
!2073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2074, size: 64)
!2074 = !DISubroutineType(types: !2075)
!2075 = !{null, !11, !27, !1306}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "getVertCos", scope: !14, file: !13, line: 347, baseType: !2077, size: 64, offset: 12288)
!2077 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2078, size: 64)
!2078 = !DISubroutineType(types: !2079)
!2079 = !{null, !11, !1301}
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "getVertNo", scope: !14, file: !13, line: 350, baseType: !2073, size: 64, offset: 12352)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyNo", scope: !14, file: !13, line: 351, baseType: !2073, size: 64, offset: 12416)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyMap", scope: !14, file: !13, line: 355, baseType: !2083, size: 64, offset: 12480)
!2083 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2084, size: 64)
!2084 = !DISubroutineType(types: !2085)
!2085 = !{!1308, !339, !11}
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "getPBVH", scope: !14, file: !13, line: 359, baseType: !2087, size: 64, offset: 12544)
!2087 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2088, size: 64)
!2088 = !DISubroutineType(types: !2089)
!2089 = !{!1327, !339, !11}
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "drawVerts", scope: !14, file: !13, line: 364, baseType: !1857, size: 64, offset: 12608)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "drawUVEdges", scope: !14, file: !13, line: 367, baseType: !1857, size: 64, offset: 12672)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "drawEdges", scope: !14, file: !13, line: 373, baseType: !2093, size: 64, offset: 12736)
!2093 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2094, size: 64)
!2094 = !DISubroutineType(types: !2095)
!2095 = !{null, !11, !673, !673}
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "drawLooseEdges", scope: !14, file: !13, line: 376, baseType: !1857, size: 64, offset: 12800)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesSolid", scope: !14, file: !13, line: 385, baseType: !2098, size: 64, offset: 12864)
!2098 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2099, size: 64)
!2099 = !DISubroutineType(types: !2100)
!2100 = !{null, !11, !2101, !673, !2102}
!2101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !286, size: 64)
!2102 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetMaterial", file: !13, line: 146, baseType: !2103)
!2103 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2104, size: 64)
!2104 = !DISubroutineType(types: !2105)
!2105 = !{!27, !27, !41}
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesTex", scope: !14, file: !13, line: 391, baseType: !2107, size: 64, offset: 12928)
!2107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2108, size: 64)
!2108 = !DISubroutineType(types: !2109)
!2109 = !{null, !11, !2110, !2134, !41, !2138}
!2110 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawOptionsTex", file: !13, line: 150, baseType: !2111)
!2111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2112, size: 64)
!2112 = !DISubroutineType(types: !2113)
!2113 = !{!2114, !2121, !2133, !27}
!2114 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDrawOption", file: !13, line: 143, baseType: !2115)
!2115 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDrawOption", file: !13, line: 134, baseType: !84, size: 32, elements: !2116)
!2116 = !{!2117, !2118, !2119, !2120}
!2117 = !DIEnumerator(name: "DM_DRAW_OPTION_SKIP", value: 0, isUnsigned: true)
!2118 = !DIEnumerator(name: "DM_DRAW_OPTION_NORMAL", value: 1, isUnsigned: true)
!2119 = !DIEnumerator(name: "DM_DRAW_OPTION_NO_MCOL", value: 2, isUnsigned: true)
!2120 = !DIEnumerator(name: "DM_DRAW_OPTION_STIPPLE", value: 3, isUnsigned: true)
!2121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2122, size: 64)
!2122 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTFace", file: !684, line: 160, size: 384, elements: !2123)
!2123 = !{!2124, !2127, !2128, !2129, !2130, !2131, !2132}
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !2122, file: !684, line: 161, baseType: !2125, size: 256)
!2125 = !DICompositeType(tag: DW_TAG_array_type, baseType: !90, size: 256, elements: !2126)
!2126 = !{!288, !478}
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !2122, file: !684, line: 162, baseType: !432, size: 64, offset: 256)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2122, file: !684, line: 163, baseType: !37, size: 8, offset: 320)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !2122, file: !684, line: 163, baseType: !37, size: 8, offset: 328)
!2130 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2122, file: !684, line: 164, baseType: !135, size: 16, offset: 336)
!2131 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !2122, file: !684, line: 164, baseType: !135, size: 16, offset: 352)
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !2122, file: !684, line: 164, baseType: !135, size: 16, offset: 368)
!2133 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !673)
!2134 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMCompareDrawOptions", file: !13, line: 147, baseType: !2135)
!2135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2136, size: 64)
!2136 = !DISubroutineType(types: !2137)
!2137 = !{!27, !41, !27, !27}
!2138 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDrawFlag", file: !13, line: 157, baseType: !2139)
!2139 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDrawFlag", file: !13, line: 152, baseType: !84, size: 32, elements: !2140)
!2140 = !{!2141, !2142, !2143, !2144}
!2141 = !DIEnumerator(name: "DM_DRAW_USE_COLORS", value: 1, isUnsigned: true)
!2142 = !DIEnumerator(name: "DM_DRAW_ALWAYS_SMOOTH", value: 2, isUnsigned: true)
!2143 = !DIEnumerator(name: "DM_DRAW_USE_ACTIVE_UV", value: 4, isUnsigned: true)
!2144 = !DIEnumerator(name: "DM_DRAW_USE_TEXPAINT_UV", value: 8, isUnsigned: true)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesGLSL", scope: !14, file: !13, line: 400, baseType: !2146, size: 64, offset: 12992)
!2146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2147, size: 64)
!2147 = !DISubroutineType(types: !2148)
!2148 = !{null, !11, !2102}
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFaces", scope: !14, file: !13, line: 415, baseType: !2150, size: 64, offset: 13056)
!2150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2151, size: 64)
!2151 = !DISubroutineType(types: !2152)
!2152 = !{null, !11, !2153, !2102, !2134, !41, !2138}
!2153 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawOptions", file: !13, line: 149, baseType: !2154)
!2154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2155, size: 64)
!2155 = !DISubroutineType(types: !2156)
!2156 = !{!2114, !41, !27}
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesTex", scope: !14, file: !13, line: 425, baseType: !2158, size: 64, offset: 13120)
!2158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2159, size: 64)
!2159 = !DISubroutineType(types: !2160)
!2160 = !{null, !11, !2153, !2134, !41, !2138}
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesGLSL", scope: !14, file: !13, line: 435, baseType: !2162, size: 64, offset: 13184)
!2162 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2163, size: 64)
!2163 = !DISubroutineType(types: !2164)
!2164 = !{null, !11, !2102, !2153, !41}
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedEdges", scope: !14, file: !13, line: 444, baseType: !2166, size: 64, offset: 13248)
!2166 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2167, size: 64)
!2167 = !DISubroutineType(types: !2168)
!2168 = !{null, !11, !2153, !41}
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedEdgesInterp", scope: !14, file: !13, line: 455, baseType: !2170, size: 64, offset: 13312)
!2170 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2171, size: 64)
!2171 = !DISubroutineType(types: !2172)
!2172 = !{null, !11, !2153, !2173, !41}
!2173 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawInterpOptions", file: !13, line: 148, baseType: !2174)
!2174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2175, size: 64)
!2175 = !DISubroutineType(types: !2176)
!2176 = !{null, !41, !27, !90}
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesMat", scope: !14, file: !13, line: 464, baseType: !2178, size: 64, offset: 13376)
!2178 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2179, size: 64)
!2179 = !DISubroutineType(types: !2180)
!2180 = !{null, !11, !2181, !2184, !41}
!2181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2182, size: 64)
!2182 = !DISubroutineType(types: !2183)
!2183 = !{null, !41, !27, !41}
!2184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2185, size: 64)
!2185 = !DISubroutineType(types: !2186)
!2186 = !{!673, !41, !27}
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !14, file: !13, line: 470, baseType: !1857, size: 64, offset: 13440)
!2188 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2189, retainedTypes: !2294, globals: !2379, splitDebugInlining: false, nameTableKind: None)
!2189 = !{!83, !93, !2046, !2115, !2139, !2190, !2195, !2201, !2208, !2215, !2221, !2264, !2269, !2277, !2281}
!2190 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "MultiresModifiedFlags", file: !2191, line: 90, baseType: !84, size: 32, elements: !2192)
!2191 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_subsurf.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2192 = !{!2193, !2194}
!2193 = !DIEnumerator(name: "MULTIRES_COORDS_MODIFIED", value: 1, isUnsigned: true)
!2194 = !DIEnumerator(name: "MULTIRES_HIDDEN_MODIFIED", value: 2, isUnsigned: true)
!2195 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !684, line: 304, baseType: !84, size: 32, elements: !2196)
!2196 = !{!2197, !2198, !2199, !2200}
!2197 = !DIEnumerator(name: "ME_VERT_TMP_TAG", value: 4, isUnsigned: true)
!2198 = !DIEnumerator(name: "ME_HIDE", value: 16, isUnsigned: true)
!2199 = !DIEnumerator(name: "ME_VERT_MERGED", value: 64, isUnsigned: true)
!2200 = !DIEnumerator(name: "ME_VERT_PBVH_UPDATE", value: 128, isUnsigned: true)
!2201 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !2191, line: 58, baseType: !84, size: 32, elements: !2202)
!2202 = !{!2203, !2204, !2205, !2206, !2207}
!2203 = !DIEnumerator(name: "SUBSURF_USE_RENDER_PARAMS", value: 1, isUnsigned: true)
!2204 = !DIEnumerator(name: "SUBSURF_IS_FINAL_CALC", value: 2, isUnsigned: true)
!2205 = !DIEnumerator(name: "SUBSURF_FOR_EDIT_MODE", value: 4, isUnsigned: true)
!2206 = !DIEnumerator(name: "SUBSURF_IN_EDIT_MODE", value: 8, isUnsigned: true)
!2207 = !DIEnumerator(name: "SUBSURF_ALLOC_PAINT_MASK", value: 16, isUnsigned: true)
!2208 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !3, line: 119, baseType: !84, size: 32, elements: !2209)
!2209 = !{!2210, !2211, !2212, !2213, !2214}
!2210 = !DIEnumerator(name: "CCG_USE_AGING", value: 1, isUnsigned: true)
!2211 = !DIEnumerator(name: "CCG_USE_ARENA", value: 2, isUnsigned: true)
!2212 = !DIEnumerator(name: "CCG_CALC_NORMALS", value: 4, isUnsigned: true)
!2213 = !DIEnumerator(name: "CCG_ALLOC_MASK", value: 8, isUnsigned: true)
!2214 = !DIEnumerator(name: "CCG_SIMPLE_SUBDIV", value: 16, isUnsigned: true)
!2215 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !353, line: 112, baseType: !84, size: 32, elements: !2216)
!2216 = !{!2217, !2218, !2219, !2220}
!2217 = !DIEnumerator(name: "eSubsurfModifierFlag_Incremental", value: 1, isUnsigned: true)
!2218 = !DIEnumerator(name: "eSubsurfModifierFlag_DebugIncr", value: 2, isUnsigned: true)
!2219 = !DIEnumerator(name: "eSubsurfModifierFlag_ControlEdges", value: 4, isUnsigned: true)
!2220 = !DIEnumerator(name: "eSubsurfModifierFlag_SubsurfUv", value: 8, isUnsigned: true)
!2221 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !18, line: 76, baseType: !84, size: 32, elements: !2222)
!2222 = !{!2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2263}
!2223 = !DIEnumerator(name: "CD_MVERT", value: 0, isUnsigned: true)
!2224 = !DIEnumerator(name: "CD_MSTICKY", value: 1, isUnsigned: true)
!2225 = !DIEnumerator(name: "CD_MDEFORMVERT", value: 2, isUnsigned: true)
!2226 = !DIEnumerator(name: "CD_MEDGE", value: 3, isUnsigned: true)
!2227 = !DIEnumerator(name: "CD_MFACE", value: 4, isUnsigned: true)
!2228 = !DIEnumerator(name: "CD_MTFACE", value: 5, isUnsigned: true)
!2229 = !DIEnumerator(name: "CD_MCOL", value: 6, isUnsigned: true)
!2230 = !DIEnumerator(name: "CD_ORIGINDEX", value: 7, isUnsigned: true)
!2231 = !DIEnumerator(name: "CD_NORMAL", value: 8, isUnsigned: true)
!2232 = !DIEnumerator(name: "CD_PROP_FLT", value: 10, isUnsigned: true)
!2233 = !DIEnumerator(name: "CD_PROP_INT", value: 11, isUnsigned: true)
!2234 = !DIEnumerator(name: "CD_PROP_STR", value: 12, isUnsigned: true)
!2235 = !DIEnumerator(name: "CD_ORIGSPACE", value: 13, isUnsigned: true)
!2236 = !DIEnumerator(name: "CD_ORCO", value: 14, isUnsigned: true)
!2237 = !DIEnumerator(name: "CD_MTEXPOLY", value: 15, isUnsigned: true)
!2238 = !DIEnumerator(name: "CD_MLOOPUV", value: 16, isUnsigned: true)
!2239 = !DIEnumerator(name: "CD_MLOOPCOL", value: 17, isUnsigned: true)
!2240 = !DIEnumerator(name: "CD_TANGENT", value: 18, isUnsigned: true)
!2241 = !DIEnumerator(name: "CD_MDISPS", value: 19, isUnsigned: true)
!2242 = !DIEnumerator(name: "CD_PREVIEW_MCOL", value: 20, isUnsigned: true)
!2243 = !DIEnumerator(name: "CD_ID_MCOL", value: 21, isUnsigned: true)
!2244 = !DIEnumerator(name: "CD_TEXTURE_MCOL", value: 22, isUnsigned: true)
!2245 = !DIEnumerator(name: "CD_CLOTH_ORCO", value: 23, isUnsigned: true)
!2246 = !DIEnumerator(name: "CD_RECAST", value: 24, isUnsigned: true)
!2247 = !DIEnumerator(name: "CD_MPOLY", value: 25, isUnsigned: true)
!2248 = !DIEnumerator(name: "CD_MLOOP", value: 26, isUnsigned: true)
!2249 = !DIEnumerator(name: "CD_SHAPE_KEYINDEX", value: 27, isUnsigned: true)
!2250 = !DIEnumerator(name: "CD_SHAPEKEY", value: 28, isUnsigned: true)
!2251 = !DIEnumerator(name: "CD_BWEIGHT", value: 29, isUnsigned: true)
!2252 = !DIEnumerator(name: "CD_CREASE", value: 30, isUnsigned: true)
!2253 = !DIEnumerator(name: "CD_ORIGSPACE_MLOOP", value: 31, isUnsigned: true)
!2254 = !DIEnumerator(name: "CD_PREVIEW_MLOOPCOL", value: 32, isUnsigned: true)
!2255 = !DIEnumerator(name: "CD_BM_ELEM_PYPTR", value: 33, isUnsigned: true)
!2256 = !DIEnumerator(name: "CD_PAINT_MASK", value: 34, isUnsigned: true)
!2257 = !DIEnumerator(name: "CD_GRID_PAINT_MASK", value: 35, isUnsigned: true)
!2258 = !DIEnumerator(name: "CD_MVERT_SKIN", value: 36, isUnsigned: true)
!2259 = !DIEnumerator(name: "CD_FREESTYLE_EDGE", value: 37, isUnsigned: true)
!2260 = !DIEnumerator(name: "CD_FREESTYLE_FACE", value: 38, isUnsigned: true)
!2261 = !DIEnumerator(name: "CD_MLOOPTANGENT", value: 39, isUnsigned: true)
!2262 = !DIEnumerator(name: "CD_TESSLOOPNORMAL", value: 40, isUnsigned: true)
!2263 = !DIEnumerator(name: "CD_NUMTYPES", value: 41, isUnsigned: true)
!2264 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !8, line: 58, baseType: !84, size: 32, elements: !2265)
!2265 = !{!2266, !2267, !2268}
!2266 = !DIEnumerator(name: "eCCGError_None", value: 0, isUnsigned: true)
!2267 = !DIEnumerator(name: "eCCGError_InvalidSyncState", value: 1, isUnsigned: true)
!2268 = !DIEnumerator(name: "eCCGError_InvalidValue", value: 2, isUnsigned: true)
!2269 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !684, line: 313, baseType: !84, size: 32, elements: !2270)
!2270 = !{!2271, !2272, !2273, !2274, !2275, !2276}
!2271 = !DIEnumerator(name: "ME_EDGEDRAW", value: 2, isUnsigned: true)
!2272 = !DIEnumerator(name: "ME_SEAM", value: 4, isUnsigned: true)
!2273 = !DIEnumerator(name: "ME_EDGERENDER", value: 32, isUnsigned: true)
!2274 = !DIEnumerator(name: "ME_LOOSEEDGE", value: 128, isUnsigned: true)
!2275 = !DIEnumerator(name: "ME_EDGE_TMP_TAG", value: 256, isUnsigned: true)
!2276 = !DIEnumerator(name: "ME_SHARP", value: 512, isUnsigned: true)
!2277 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !684, line: 341, baseType: !84, size: 32, elements: !2278)
!2278 = !{!2279, !2280}
!2279 = !DIEnumerator(name: "ME_SMOOTH", value: 1, isUnsigned: true)
!2280 = !DIEnumerator(name: "ME_FACE_SEL", value: 2, isUnsigned: true)
!2281 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !341, line: 339, baseType: !84, size: 32, elements: !2282)
!2282 = !{!2283, !2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293}
!2283 = !DIEnumerator(name: "OB_EMPTY", value: 0, isUnsigned: true)
!2284 = !DIEnumerator(name: "OB_MESH", value: 1, isUnsigned: true)
!2285 = !DIEnumerator(name: "OB_CURVE", value: 2, isUnsigned: true)
!2286 = !DIEnumerator(name: "OB_SURF", value: 3, isUnsigned: true)
!2287 = !DIEnumerator(name: "OB_FONT", value: 4, isUnsigned: true)
!2288 = !DIEnumerator(name: "OB_MBALL", value: 5, isUnsigned: true)
!2289 = !DIEnumerator(name: "OB_LAMP", value: 10, isUnsigned: true)
!2290 = !DIEnumerator(name: "OB_CAMERA", value: 11, isUnsigned: true)
!2291 = !DIEnumerator(name: "OB_SPEAKER", value: 12, isUnsigned: true)
!2292 = !DIEnumerator(name: "OB_LATTICE", value: 22, isUnsigned: true)
!2293 = !DIEnumerator(name: "OB_ARMATURE", value: 25, isUnsigned: true)
!2294 = !{!2295, !2364, !41, !11, !27, !2367, !90, !1314, !2370, !1306, !2371, !1267, !135, !84, !2373, !2374, !2375, !2376, !2377}
!2295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2296, size: 64)
!2296 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCGDerivedMesh", file: !2191, line: 141, baseType: !2297)
!2297 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CCGDerivedMesh", file: !2191, line: 100, size: 15104, elements: !2298)
!2298 = !{!2299, !2300, !2302, !2303, !2304, !2305, !2313, !2322, !2332, !2334, !2336, !2337, !2338, !2340, !2341, !2342, !2344, !2345, !2347, !2348, !2349, !2360}
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "dm", scope: !2297, file: !2191, line: 101, baseType: !12, size: 13504)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "ss", scope: !2297, file: !2191, line: 103, baseType: !2301, size: 64, offset: 13504)
!2301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9, size: 64)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "freeSS", scope: !2297, file: !2191, line: 104, baseType: !27, size: 32, offset: 13568)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "drawInteriorEdges", scope: !2297, file: !2191, line: 105, baseType: !27, size: 32, offset: 13600)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "useSubsurfUv", scope: !2297, file: !2191, line: 105, baseType: !27, size: 32, offset: 13632)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "vertMap", scope: !2297, file: !2191, line: 107, baseType: !2306, size: 64, offset: 13696)
!2306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2307, size: 64)
!2307 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2297, file: !2191, line: 107, size: 128, elements: !2308)
!2308 = !{!2309, !2310}
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "startVert", scope: !2307, file: !2191, line: 107, baseType: !27, size: 32)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !2307, file: !2191, line: 107, baseType: !2311, size: 64, offset: 64)
!2311 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2312, size: 64)
!2312 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGVert", file: !2191, line: 51, flags: DIFlagFwdDecl)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "edgeMap", scope: !2297, file: !2191, line: 108, baseType: !2314, size: 64, offset: 13760)
!2314 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2315, size: 64)
!2315 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2297, file: !2191, line: 108, size: 128, elements: !2316)
!2316 = !{!2317, !2318, !2319}
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "startVert", scope: !2315, file: !2191, line: 108, baseType: !27, size: 32)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "startEdge", scope: !2315, file: !2191, line: 108, baseType: !27, size: 32, offset: 32)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "edge", scope: !2315, file: !2191, line: 108, baseType: !2320, size: 64, offset: 64)
!2320 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2321, size: 64)
!2321 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGEdge", file: !2191, line: 48, flags: DIFlagFwdDecl)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "faceMap", scope: !2297, file: !2191, line: 110, baseType: !2323, size: 64, offset: 13824)
!2323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2324, size: 64)
!2324 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2297, file: !2191, line: 109, size: 192, elements: !2325)
!2325 = !{!2326, !2327, !2328, !2329}
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "startVert", scope: !2324, file: !2191, line: 109, baseType: !27, size: 32)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "startEdge", scope: !2324, file: !2191, line: 109, baseType: !27, size: 32, offset: 32)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "startFace", scope: !2324, file: !2191, line: 110, baseType: !27, size: 32, offset: 64)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "face", scope: !2324, file: !2191, line: 110, baseType: !2330, size: 64, offset: 128)
!2330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2331, size: 64)
!2331 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGFace", file: !2191, line: 49, flags: DIFlagFwdDecl)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "edgeFlags", scope: !2297, file: !2191, line: 112, baseType: !2333, size: 64, offset: 13888)
!2333 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !135, size: 64)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "faceFlags", scope: !2297, file: !2191, line: 113, baseType: !2335, size: 64, offset: 13952)
!2335 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2026, size: 64)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "reverseFaceMap", scope: !2297, file: !2191, line: 115, baseType: !1314, size: 64, offset: 14016)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "pbvh", scope: !2297, file: !2191, line: 117, baseType: !1327, size: 64, offset: 14080)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "pmap", scope: !2297, file: !2191, line: 119, baseType: !2339, size: 64, offset: 14144)
!2339 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1310, size: 64)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "pmap_mem", scope: !2297, file: !2191, line: 120, baseType: !1314, size: 64, offset: 14208)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "gridData", scope: !2297, file: !2191, line: 122, baseType: !1985, size: 64, offset: 14272)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "gridAdjacency", scope: !2297, file: !2191, line: 123, baseType: !2343, size: 64, offset: 14336)
!2343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1994, size: 64)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "gridOffset", scope: !2297, file: !2191, line: 124, baseType: !1314, size: 64, offset: 14400)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "gridFaces", scope: !2297, file: !2191, line: 125, baseType: !2346, size: 64, offset: 14464)
!2346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2330, size: 64)
!2347 = !DIDerivedType(tag: DW_TAG_member, name: "gridFlagMats", scope: !2297, file: !2191, line: 126, baseType: !2335, size: 64, offset: 14528)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "gridHidden", scope: !2297, file: !2191, line: 127, baseType: !2034, size: 64, offset: 14592)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "multires", scope: !2297, file: !2191, line: 138, baseType: !2350, size: 384, offset: 14656)
!2350 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2297, file: !2191, line: 129, size: 384, elements: !2351)
!2351 = !{!2352, !2353, !2354, !2355, !2356, !2357, !2358}
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "mmd", scope: !2350, file: !2191, line: 130, baseType: !351, size: 64)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "local_mmd", scope: !2350, file: !2191, line: 131, baseType: !27, size: 32, offset: 64)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "lvl", scope: !2350, file: !2191, line: 133, baseType: !27, size: 32, offset: 96)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "totlvl", scope: !2350, file: !2191, line: 133, baseType: !27, size: 32, offset: 128)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "orco", scope: !2350, file: !2191, line: 134, baseType: !1301, size: 64, offset: 192)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !2350, file: !2191, line: 136, baseType: !339, size: 64, offset: 256)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "modified_flags", scope: !2350, file: !2191, line: 137, baseType: !2359, size: 32, offset: 320)
!2359 = !DIDerivedType(tag: DW_TAG_typedef, name: "MultiresModifiedFlags", file: !2191, line: 96, baseType: !2190)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "ehash", scope: !2297, file: !2191, line: 140, baseType: !2361, size: 64, offset: 15040)
!2361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2362, size: 64)
!2362 = !DICompositeType(tag: DW_TAG_structure_type, name: "EdgeHash", file: !2363, line: 34, flags: DIFlagFwdDecl)
!2363 = !DIFile(filename: "blender/source/blender/blenlib/BLI_edgehash.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2365, size: 64)
!2365 = !DIDerivedType(tag: DW_TAG_typedef, name: "BLI_bitmap", file: !2366, line: 33, baseType: !84)
!2366 = !DIFile(filename: "blender/source/blender/blenlib/BLI_bitmap.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2367 = !DIDerivedType(tag: DW_TAG_typedef, name: "intptr_t", file: !2368, line: 87, baseType: !2369)
!2368 = !DIFile(filename: "/usr/include/stdint.h", directory: "")
!2369 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!2370 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !2368, line: 90, baseType: !1258)
!2371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2372, size: 64)
!2372 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCGElem", file: !10, line: 51, baseType: !1987)
!2373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1180, size: 64)
!2374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !41, size: 64)
!2375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2374, size: 64)
!2376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !673, size: 64)
!2377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2378, size: 64)
!2378 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPoly", file: !684, line: 85, baseType: !1285)
!2379 = !{!0, !2380, !2388}
!2380 = !DIGlobalVariableExpression(var: !2381, expr: !DIExpression())
!2381 = distinct !DIGlobalVariable(name: "loops_cache_rwlock", scope: !2188, file: !3, line: 84, type: !2382, isLocal: true, isDefinition: true)
!2382 = !DIDerivedType(tag: DW_TAG_typedef, name: "ThreadRWMutex", file: !2383, line: 148, baseType: !2384)
!2383 = !DIFile(filename: "blender/source/blender/blenlib/BLI_threads.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2384 = !DIDerivedType(tag: DW_TAG_typedef, name: "spec_null_rwlock_t", file: !2385, line: 10, baseType: !2386)
!2385 = !DIFile(filename: "include/spec_pthread.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2386 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !1255, line: 26, baseType: !2387)
!2387 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint32_t", file: !1257, line: 42, baseType: !84)
!2388 = !DIGlobalVariableExpression(var: !2389, expr: !DIExpression())
!2389 = distinct !DIGlobalVariable(name: "origindex_cache_rwlock", scope: !2188, file: !3, line: 85, type: !2382, isLocal: true, isDefinition: true)
!2390 = !{}
!2391 = !{i32 7, !"Dwarf Version", i32 4}
!2392 = !{i32 2, !"Debug Info Version", i32 3}
!2393 = !{i32 1, !"wchar_size", i32 4}
!2394 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!2395 = distinct !DISubprogram(name: "subsurf_copy_grid_hidden", scope: !3, file: !3, line: 1052, type: !2396, scopeLine: 1054, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!2396 = !DISubroutineType(types: !2397)
!2397 = !{null, !11, !2398, !2400, !2402}
!2398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2399, size: 64)
!2399 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2378)
!2400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2401, size: 64)
!2401 = !DIDerivedType(tag: DW_TAG_typedef, name: "MVert", file: !684, line: 69, baseType: !1277)
!2402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2403, size: 64)
!2403 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2404)
!2404 = !DIDerivedType(tag: DW_TAG_typedef, name: "MDisps", file: !684, line: 196, baseType: !2405)
!2405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDisps", file: !684, line: 186, size: 192, elements: !2406)
!2406 = !{!2407, !2408, !2409, !2410}
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "totdisp", scope: !2405, file: !684, line: 188, baseType: !27, size: 32)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2405, file: !684, line: 189, baseType: !27, size: 32, offset: 32)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "disps", scope: !2405, file: !684, line: 190, baseType: !1301, size: 64, offset: 64)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "hidden", scope: !2405, file: !684, line: 195, baseType: !469, size: 64, offset: 128)
!2411 = !DILocalVariable(name: "dm", arg: 1, scope: !2395, file: !3, line: 1052, type: !11)
!2412 = !DILocation(line: 1052, column: 44, scope: !2395)
!2413 = !DILocalVariable(name: "mpoly", arg: 2, scope: !2395, file: !3, line: 1052, type: !2398)
!2414 = !DILocation(line: 1052, column: 61, scope: !2395)
!2415 = !DILocalVariable(name: "mvert", arg: 3, scope: !2395, file: !3, line: 1053, type: !2400)
!2416 = !DILocation(line: 1053, column: 38, scope: !2395)
!2417 = !DILocalVariable(name: "mdisps", arg: 4, scope: !2395, file: !3, line: 1053, type: !2402)
!2418 = !DILocation(line: 1053, column: 59, scope: !2395)
!2419 = !DILocalVariable(name: "ccgdm", scope: !2395, file: !3, line: 1055, type: !2295)
!2420 = !DILocation(line: 1055, column: 18, scope: !2395)
!2421 = !DILocation(line: 1055, column: 44, scope: !2395)
!2422 = !DILocation(line: 1055, column: 26, scope: !2395)
!2423 = !DILocalVariable(name: "ss", scope: !2395, file: !3, line: 1056, type: !6)
!2424 = !DILocation(line: 1056, column: 14, scope: !2395)
!2425 = !DILocation(line: 1056, column: 19, scope: !2395)
!2426 = !DILocation(line: 1056, column: 26, scope: !2395)
!2427 = !DILocalVariable(name: "level", scope: !2395, file: !3, line: 1057, type: !27)
!2428 = !DILocation(line: 1057, column: 6, scope: !2395)
!2429 = !DILocation(line: 1057, column: 46, scope: !2395)
!2430 = !DILocation(line: 1057, column: 14, scope: !2395)
!2431 = !DILocalVariable(name: "gridSize", scope: !2395, file: !3, line: 1058, type: !27)
!2432 = !DILocation(line: 1058, column: 6, scope: !2395)
!2433 = !DILocation(line: 1058, column: 40, scope: !2395)
!2434 = !DILocation(line: 1058, column: 17, scope: !2395)
!2435 = !DILocalVariable(name: "edgeSize", scope: !2395, file: !3, line: 1059, type: !27)
!2436 = !DILocation(line: 1059, column: 6, scope: !2395)
!2437 = !DILocation(line: 1059, column: 40, scope: !2395)
!2438 = !DILocation(line: 1059, column: 17, scope: !2395)
!2439 = !DILocalVariable(name: "totface", scope: !2395, file: !3, line: 1060, type: !27)
!2440 = !DILocation(line: 1060, column: 6, scope: !2395)
!2441 = !DILocation(line: 1060, column: 39, scope: !2395)
!2442 = !DILocation(line: 1060, column: 16, scope: !2395)
!2443 = !DILocalVariable(name: "i", scope: !2395, file: !3, line: 1061, type: !27)
!2444 = !DILocation(line: 1061, column: 6, scope: !2395)
!2445 = !DILocalVariable(name: "j", scope: !2395, file: !3, line: 1061, type: !27)
!2446 = !DILocation(line: 1061, column: 9, scope: !2395)
!2447 = !DILocalVariable(name: "x", scope: !2395, file: !3, line: 1061, type: !27)
!2448 = !DILocation(line: 1061, column: 12, scope: !2395)
!2449 = !DILocalVariable(name: "y", scope: !2395, file: !3, line: 1061, type: !27)
!2450 = !DILocation(line: 1061, column: 15, scope: !2395)
!2451 = !DILocation(line: 1063, column: 9, scope: !2452)
!2452 = distinct !DILexicalBlock(scope: !2395, file: !3, line: 1063, column: 2)
!2453 = !DILocation(line: 1063, column: 7, scope: !2452)
!2454 = !DILocation(line: 1063, column: 14, scope: !2455)
!2455 = distinct !DILexicalBlock(scope: !2452, file: !3, line: 1063, column: 2)
!2456 = !DILocation(line: 1063, column: 18, scope: !2455)
!2457 = !DILocation(line: 1063, column: 16, scope: !2455)
!2458 = !DILocation(line: 1063, column: 2, scope: !2452)
!2459 = !DILocalVariable(name: "f", scope: !2460, file: !3, line: 1064, type: !2461)
!2460 = distinct !DILexicalBlock(scope: !2455, file: !3, line: 1063, column: 32)
!2461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2462, size: 64)
!2462 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCGFace", file: !8, line: 36, baseType: !2331)
!2463 = !DILocation(line: 1064, column: 12, scope: !2460)
!2464 = !DILocation(line: 1064, column: 16, scope: !2460)
!2465 = !DILocation(line: 1064, column: 23, scope: !2460)
!2466 = !DILocation(line: 1064, column: 31, scope: !2460)
!2467 = !DILocation(line: 1064, column: 34, scope: !2460)
!2468 = !DILocation(line: 1066, column: 10, scope: !2469)
!2469 = distinct !DILexicalBlock(scope: !2460, file: !3, line: 1066, column: 3)
!2470 = !DILocation(line: 1066, column: 8, scope: !2469)
!2471 = !DILocation(line: 1066, column: 15, scope: !2472)
!2472 = distinct !DILexicalBlock(scope: !2469, file: !3, line: 1066, column: 3)
!2473 = !DILocation(line: 1066, column: 19, scope: !2472)
!2474 = !DILocation(line: 1066, column: 25, scope: !2472)
!2475 = !DILocation(line: 1066, column: 28, scope: !2472)
!2476 = !DILocation(line: 1066, column: 17, scope: !2472)
!2477 = !DILocation(line: 1066, column: 3, scope: !2469)
!2478 = !DILocalVariable(name: "md", scope: !2479, file: !3, line: 1067, type: !2402)
!2479 = distinct !DILexicalBlock(scope: !2472, file: !3, line: 1066, column: 42)
!2480 = !DILocation(line: 1067, column: 18, scope: !2479)
!2481 = !DILocation(line: 1067, column: 24, scope: !2479)
!2482 = !DILocation(line: 1067, column: 31, scope: !2479)
!2483 = !DILocation(line: 1067, column: 37, scope: !2479)
!2484 = !DILocation(line: 1067, column: 40, scope: !2479)
!2485 = !DILocation(line: 1067, column: 52, scope: !2479)
!2486 = !DILocation(line: 1067, column: 50, scope: !2479)
!2487 = !DILocalVariable(name: "hidden_gridsize", scope: !2479, file: !3, line: 1068, type: !27)
!2488 = !DILocation(line: 1068, column: 8, scope: !2479)
!2489 = !DILocation(line: 1068, column: 43, scope: !2479)
!2490 = !DILocation(line: 1068, column: 47, scope: !2479)
!2491 = !DILocation(line: 1068, column: 26, scope: !2479)
!2492 = !DILocalVariable(name: "factor", scope: !2479, file: !3, line: 1069, type: !27)
!2493 = !DILocation(line: 1069, column: 8, scope: !2479)
!2494 = !DILocation(line: 1069, column: 32, scope: !2479)
!2495 = !DILocation(line: 1069, column: 39, scope: !2479)
!2496 = !DILocation(line: 1069, column: 43, scope: !2479)
!2497 = !DILocation(line: 1069, column: 17, scope: !2479)
!2498 = !DILocation(line: 1071, column: 9, scope: !2499)
!2499 = distinct !DILexicalBlock(scope: !2479, file: !3, line: 1071, column: 8)
!2500 = !DILocation(line: 1071, column: 13, scope: !2499)
!2501 = !DILocation(line: 1071, column: 8, scope: !2479)
!2502 = !DILocation(line: 1072, column: 5, scope: !2499)
!2503 = !DILocation(line: 1074, column: 11, scope: !2504)
!2504 = distinct !DILexicalBlock(scope: !2479, file: !3, line: 1074, column: 4)
!2505 = !DILocation(line: 1074, column: 9, scope: !2504)
!2506 = !DILocation(line: 1074, column: 16, scope: !2507)
!2507 = distinct !DILexicalBlock(scope: !2504, file: !3, line: 1074, column: 4)
!2508 = !DILocation(line: 1074, column: 20, scope: !2507)
!2509 = !DILocation(line: 1074, column: 18, scope: !2507)
!2510 = !DILocation(line: 1074, column: 4, scope: !2504)
!2511 = !DILocation(line: 1075, column: 12, scope: !2512)
!2512 = distinct !DILexicalBlock(scope: !2513, file: !3, line: 1075, column: 5)
!2513 = distinct !DILexicalBlock(scope: !2507, file: !3, line: 1074, column: 35)
!2514 = !DILocation(line: 1075, column: 10, scope: !2512)
!2515 = !DILocation(line: 1075, column: 17, scope: !2516)
!2516 = distinct !DILexicalBlock(scope: !2512, file: !3, line: 1075, column: 5)
!2517 = !DILocation(line: 1075, column: 21, scope: !2516)
!2518 = !DILocation(line: 1075, column: 19, scope: !2516)
!2519 = !DILocation(line: 1075, column: 5, scope: !2512)
!2520 = !DILocalVariable(name: "vndx", scope: !2521, file: !3, line: 1076, type: !27)
!2521 = distinct !DILexicalBlock(scope: !2516, file: !3, line: 1075, column: 36)
!2522 = !DILocation(line: 1076, column: 10, scope: !2521)
!2523 = !DILocalVariable(name: "offset", scope: !2521, file: !3, line: 1076, type: !27)
!2524 = !DILocation(line: 1076, column: 16, scope: !2521)
!2525 = !DILocation(line: 1078, column: 26, scope: !2521)
!2526 = !DILocation(line: 1078, column: 30, scope: !2521)
!2527 = !DILocation(line: 1078, column: 33, scope: !2521)
!2528 = !DILocation(line: 1078, column: 36, scope: !2521)
!2529 = !DILocation(line: 1078, column: 39, scope: !2521)
!2530 = !DILocation(line: 1078, column: 42, scope: !2521)
!2531 = !DILocation(line: 1078, column: 52, scope: !2521)
!2532 = !DILocation(line: 1078, column: 13, scope: !2521)
!2533 = !DILocation(line: 1078, column: 11, scope: !2521)
!2534 = !DILocation(line: 1079, column: 16, scope: !2521)
!2535 = !DILocation(line: 1079, column: 20, scope: !2521)
!2536 = !DILocation(line: 1079, column: 18, scope: !2521)
!2537 = !DILocation(line: 1079, column: 30, scope: !2521)
!2538 = !DILocation(line: 1079, column: 28, scope: !2521)
!2539 = !DILocation(line: 1079, column: 49, scope: !2521)
!2540 = !DILocation(line: 1079, column: 53, scope: !2521)
!2541 = !DILocation(line: 1079, column: 51, scope: !2521)
!2542 = !DILocation(line: 1079, column: 46, scope: !2521)
!2543 = !DILocation(line: 1079, column: 13, scope: !2521)
!2544 = !DILocation(line: 1080, column: 10, scope: !2545)
!2545 = distinct !DILexicalBlock(scope: !2521, file: !3, line: 1080, column: 10)
!2546 = !DILocation(line: 1080, column: 10, scope: !2521)
!2547 = !DILocation(line: 1081, column: 7, scope: !2545)
!2548 = !DILocation(line: 1081, column: 13, scope: !2545)
!2549 = !DILocation(line: 1081, column: 19, scope: !2545)
!2550 = !DILocation(line: 1081, column: 24, scope: !2545)
!2551 = !DILocation(line: 1082, column: 5, scope: !2521)
!2552 = !DILocation(line: 1075, column: 32, scope: !2516)
!2553 = !DILocation(line: 1075, column: 5, scope: !2516)
!2554 = distinct !{!2554, !2519, !2555}
!2555 = !DILocation(line: 1082, column: 5, scope: !2512)
!2556 = !DILocation(line: 1083, column: 4, scope: !2513)
!2557 = !DILocation(line: 1074, column: 31, scope: !2507)
!2558 = !DILocation(line: 1074, column: 4, scope: !2507)
!2559 = distinct !{!2559, !2510, !2560}
!2560 = !DILocation(line: 1083, column: 4, scope: !2504)
!2561 = !DILocation(line: 1084, column: 3, scope: !2479)
!2562 = !DILocation(line: 1066, column: 38, scope: !2472)
!2563 = !DILocation(line: 1066, column: 3, scope: !2472)
!2564 = distinct !{!2564, !2477, !2565}
!2565 = !DILocation(line: 1084, column: 3, scope: !2469)
!2566 = !DILocation(line: 1085, column: 2, scope: !2460)
!2567 = !DILocation(line: 1063, column: 28, scope: !2455)
!2568 = !DILocation(line: 1063, column: 2, scope: !2455)
!2569 = distinct !{!2569, !2458, !2570}
!2570 = !DILocation(line: 1085, column: 2, scope: !2452)
!2571 = !DILocation(line: 1086, column: 1, scope: !2395)
!2572 = distinct !DISubprogram(name: "getFaceIndex", scope: !3, file: !3, line: 224, type: !2573, scopeLine: 225, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!2573 = !DISubroutineType(types: !2574)
!2574 = !{!27, !6, !2461, !27, !27, !27, !27, !27}
!2575 = !DILocalVariable(name: "ss", arg: 1, scope: !2572, file: !3, line: 224, type: !6)
!2576 = !DILocation(line: 224, column: 37, scope: !2572)
!2577 = !DILocalVariable(name: "f", arg: 2, scope: !2572, file: !3, line: 224, type: !2461)
!2578 = !DILocation(line: 224, column: 50, scope: !2572)
!2579 = !DILocalVariable(name: "S", arg: 3, scope: !2572, file: !3, line: 224, type: !27)
!2580 = !DILocation(line: 224, column: 57, scope: !2572)
!2581 = !DILocalVariable(name: "x", arg: 4, scope: !2572, file: !3, line: 224, type: !27)
!2582 = !DILocation(line: 224, column: 64, scope: !2572)
!2583 = !DILocalVariable(name: "y", arg: 5, scope: !2572, file: !3, line: 224, type: !27)
!2584 = !DILocation(line: 224, column: 71, scope: !2572)
!2585 = !DILocalVariable(name: "edgeSize", arg: 6, scope: !2572, file: !3, line: 224, type: !27)
!2586 = !DILocation(line: 224, column: 78, scope: !2572)
!2587 = !DILocalVariable(name: "gridSize", arg: 7, scope: !2572, file: !3, line: 224, type: !27)
!2588 = !DILocation(line: 224, column: 92, scope: !2572)
!2589 = !DILocalVariable(name: "faceBase", scope: !2572, file: !3, line: 226, type: !27)
!2590 = !DILocation(line: 226, column: 6, scope: !2572)
!2591 = !DILocation(line: 226, column: 54, scope: !2572)
!2592 = !DILocation(line: 226, column: 58, scope: !2572)
!2593 = !DILocation(line: 226, column: 27, scope: !2572)
!2594 = !DILocation(line: 226, column: 19, scope: !2572)
!2595 = !DILocation(line: 226, column: 17, scope: !2572)
!2596 = !DILocalVariable(name: "numVerts", scope: !2572, file: !3, line: 227, type: !27)
!2597 = !DILocation(line: 227, column: 6, scope: !2572)
!2598 = !DILocation(line: 227, column: 44, scope: !2572)
!2599 = !DILocation(line: 227, column: 17, scope: !2572)
!2600 = !DILocation(line: 229, column: 6, scope: !2601)
!2601 = distinct !DILexicalBlock(scope: !2572, file: !3, line: 229, column: 6)
!2602 = !DILocation(line: 229, column: 11, scope: !2601)
!2603 = !DILocation(line: 229, column: 20, scope: !2601)
!2604 = !DILocation(line: 229, column: 8, scope: !2601)
!2605 = !DILocation(line: 229, column: 24, scope: !2601)
!2606 = !DILocation(line: 229, column: 27, scope: !2601)
!2607 = !DILocation(line: 229, column: 32, scope: !2601)
!2608 = !DILocation(line: 229, column: 41, scope: !2601)
!2609 = !DILocation(line: 229, column: 29, scope: !2601)
!2610 = !DILocation(line: 229, column: 6, scope: !2572)
!2611 = !DILocalVariable(name: "v", scope: !2612, file: !3, line: 230, type: !2613)
!2612 = distinct !DILexicalBlock(scope: !2601, file: !3, line: 229, column: 46)
!2613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2614, size: 64)
!2614 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCGVert", file: !8, line: 34, baseType: !2312)
!2615 = !DILocation(line: 230, column: 12, scope: !2612)
!2616 = !DILocation(line: 230, column: 39, scope: !2612)
!2617 = !DILocation(line: 230, column: 42, scope: !2612)
!2618 = !DILocation(line: 230, column: 16, scope: !2612)
!2619 = !DILocation(line: 231, column: 47, scope: !2612)
!2620 = !DILocation(line: 231, column: 51, scope: !2612)
!2621 = !DILocation(line: 231, column: 20, scope: !2612)
!2622 = !DILocation(line: 231, column: 12, scope: !2612)
!2623 = !DILocation(line: 231, column: 10, scope: !2612)
!2624 = !DILocation(line: 231, column: 3, scope: !2612)
!2625 = !DILocation(line: 233, column: 11, scope: !2626)
!2626 = distinct !DILexicalBlock(scope: !2601, file: !3, line: 233, column: 11)
!2627 = !DILocation(line: 233, column: 16, scope: !2626)
!2628 = !DILocation(line: 233, column: 25, scope: !2626)
!2629 = !DILocation(line: 233, column: 13, scope: !2626)
!2630 = !DILocation(line: 233, column: 11, scope: !2601)
!2631 = !DILocalVariable(name: "v", scope: !2632, file: !3, line: 234, type: !2613)
!2632 = distinct !DILexicalBlock(scope: !2626, file: !3, line: 233, column: 30)
!2633 = !DILocation(line: 234, column: 12, scope: !2632)
!2634 = !DILocation(line: 234, column: 39, scope: !2632)
!2635 = !DILocation(line: 234, column: 42, scope: !2632)
!2636 = !DILocation(line: 234, column: 16, scope: !2632)
!2637 = !DILocalVariable(name: "e", scope: !2632, file: !3, line: 235, type: !2638)
!2638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2639, size: 64)
!2639 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCGEdge", file: !8, line: 35, baseType: !2321)
!2640 = !DILocation(line: 235, column: 12, scope: !2632)
!2641 = !DILocation(line: 235, column: 39, scope: !2632)
!2642 = !DILocation(line: 235, column: 42, scope: !2632)
!2643 = !DILocation(line: 235, column: 16, scope: !2632)
!2644 = !DILocalVariable(name: "edgeBase", scope: !2632, file: !3, line: 236, type: !27)
!2645 = !DILocation(line: 236, column: 7, scope: !2632)
!2646 = !DILocation(line: 236, column: 55, scope: !2632)
!2647 = !DILocation(line: 236, column: 59, scope: !2632)
!2648 = !DILocation(line: 236, column: 28, scope: !2632)
!2649 = !DILocation(line: 236, column: 20, scope: !2632)
!2650 = !DILocation(line: 236, column: 18, scope: !2632)
!2651 = !DILocation(line: 237, column: 7, scope: !2652)
!2652 = distinct !DILexicalBlock(scope: !2632, file: !3, line: 237, column: 7)
!2653 = !DILocation(line: 237, column: 36, scope: !2652)
!2654 = !DILocation(line: 237, column: 12, scope: !2652)
!2655 = !DILocation(line: 237, column: 9, scope: !2652)
!2656 = !DILocation(line: 237, column: 7, scope: !2632)
!2657 = !DILocation(line: 238, column: 11, scope: !2658)
!2658 = distinct !DILexicalBlock(scope: !2652, file: !3, line: 237, column: 40)
!2659 = !DILocation(line: 238, column: 23, scope: !2658)
!2660 = !DILocation(line: 238, column: 32, scope: !2658)
!2661 = !DILocation(line: 238, column: 38, scope: !2658)
!2662 = !DILocation(line: 238, column: 36, scope: !2658)
!2663 = !DILocation(line: 238, column: 20, scope: !2658)
!2664 = !DILocation(line: 238, column: 41, scope: !2658)
!2665 = !DILocation(line: 238, column: 4, scope: !2658)
!2666 = !DILocation(line: 241, column: 11, scope: !2667)
!2667 = distinct !DILexicalBlock(scope: !2652, file: !3, line: 240, column: 8)
!2668 = !DILocation(line: 241, column: 23, scope: !2667)
!2669 = !DILocation(line: 241, column: 32, scope: !2667)
!2670 = !DILocation(line: 241, column: 36, scope: !2667)
!2671 = !DILocation(line: 241, column: 20, scope: !2667)
!2672 = !DILocation(line: 241, column: 45, scope: !2667)
!2673 = !DILocation(line: 241, column: 54, scope: !2667)
!2674 = !DILocation(line: 241, column: 60, scope: !2667)
!2675 = !DILocation(line: 241, column: 58, scope: !2667)
!2676 = !DILocation(line: 241, column: 63, scope: !2667)
!2677 = !DILocation(line: 241, column: 41, scope: !2667)
!2678 = !DILocation(line: 241, column: 4, scope: !2667)
!2679 = !DILocation(line: 244, column: 11, scope: !2680)
!2680 = distinct !DILexicalBlock(scope: !2626, file: !3, line: 244, column: 11)
!2681 = !DILocation(line: 244, column: 16, scope: !2680)
!2682 = !DILocation(line: 244, column: 25, scope: !2680)
!2683 = !DILocation(line: 244, column: 13, scope: !2680)
!2684 = !DILocation(line: 244, column: 11, scope: !2626)
!2685 = !DILocalVariable(name: "v", scope: !2686, file: !3, line: 245, type: !2613)
!2686 = distinct !DILexicalBlock(scope: !2680, file: !3, line: 244, column: 30)
!2687 = !DILocation(line: 245, column: 12, scope: !2686)
!2688 = !DILocation(line: 245, column: 39, scope: !2686)
!2689 = !DILocation(line: 245, column: 42, scope: !2686)
!2690 = !DILocation(line: 245, column: 16, scope: !2686)
!2691 = !DILocalVariable(name: "e", scope: !2686, file: !3, line: 246, type: !2638)
!2692 = !DILocation(line: 246, column: 12, scope: !2686)
!2693 = !DILocation(line: 246, column: 39, scope: !2686)
!2694 = !DILocation(line: 246, column: 43, scope: !2686)
!2695 = !DILocation(line: 246, column: 47, scope: !2686)
!2696 = !DILocation(line: 246, column: 45, scope: !2686)
!2697 = !DILocation(line: 246, column: 56, scope: !2686)
!2698 = !DILocation(line: 246, column: 63, scope: !2686)
!2699 = !DILocation(line: 246, column: 61, scope: !2686)
!2700 = !DILocation(line: 246, column: 16, scope: !2686)
!2701 = !DILocalVariable(name: "edgeBase", scope: !2686, file: !3, line: 247, type: !27)
!2702 = !DILocation(line: 247, column: 7, scope: !2686)
!2703 = !DILocation(line: 247, column: 55, scope: !2686)
!2704 = !DILocation(line: 247, column: 59, scope: !2686)
!2705 = !DILocation(line: 247, column: 28, scope: !2686)
!2706 = !DILocation(line: 247, column: 20, scope: !2686)
!2707 = !DILocation(line: 247, column: 18, scope: !2686)
!2708 = !DILocation(line: 248, column: 7, scope: !2709)
!2709 = distinct !DILexicalBlock(scope: !2686, file: !3, line: 248, column: 7)
!2710 = !DILocation(line: 248, column: 36, scope: !2709)
!2711 = !DILocation(line: 248, column: 12, scope: !2709)
!2712 = !DILocation(line: 248, column: 9, scope: !2709)
!2713 = !DILocation(line: 248, column: 7, scope: !2686)
!2714 = !DILocation(line: 249, column: 11, scope: !2715)
!2715 = distinct !DILexicalBlock(scope: !2709, file: !3, line: 248, column: 40)
!2716 = !DILocation(line: 249, column: 23, scope: !2715)
!2717 = !DILocation(line: 249, column: 32, scope: !2715)
!2718 = !DILocation(line: 249, column: 38, scope: !2715)
!2719 = !DILocation(line: 249, column: 36, scope: !2715)
!2720 = !DILocation(line: 249, column: 20, scope: !2715)
!2721 = !DILocation(line: 249, column: 41, scope: !2715)
!2722 = !DILocation(line: 249, column: 4, scope: !2715)
!2723 = !DILocation(line: 252, column: 11, scope: !2724)
!2724 = distinct !DILexicalBlock(scope: !2709, file: !3, line: 251, column: 8)
!2725 = !DILocation(line: 252, column: 23, scope: !2724)
!2726 = !DILocation(line: 252, column: 32, scope: !2724)
!2727 = !DILocation(line: 252, column: 36, scope: !2724)
!2728 = !DILocation(line: 252, column: 20, scope: !2724)
!2729 = !DILocation(line: 252, column: 45, scope: !2724)
!2730 = !DILocation(line: 252, column: 54, scope: !2724)
!2731 = !DILocation(line: 252, column: 60, scope: !2724)
!2732 = !DILocation(line: 252, column: 58, scope: !2724)
!2733 = !DILocation(line: 252, column: 63, scope: !2724)
!2734 = !DILocation(line: 252, column: 41, scope: !2724)
!2735 = !DILocation(line: 252, column: 4, scope: !2724)
!2736 = !DILocation(line: 255, column: 11, scope: !2737)
!2737 = distinct !DILexicalBlock(scope: !2680, file: !3, line: 255, column: 11)
!2738 = !DILocation(line: 255, column: 13, scope: !2737)
!2739 = !DILocation(line: 255, column: 18, scope: !2737)
!2740 = !DILocation(line: 255, column: 21, scope: !2737)
!2741 = !DILocation(line: 255, column: 23, scope: !2737)
!2742 = !DILocation(line: 255, column: 11, scope: !2680)
!2743 = !DILocation(line: 256, column: 10, scope: !2744)
!2744 = distinct !DILexicalBlock(scope: !2737, file: !3, line: 255, column: 29)
!2745 = !DILocation(line: 256, column: 3, scope: !2744)
!2746 = !DILocation(line: 258, column: 11, scope: !2747)
!2747 = distinct !DILexicalBlock(scope: !2737, file: !3, line: 258, column: 11)
!2748 = !DILocation(line: 258, column: 13, scope: !2747)
!2749 = !DILocation(line: 258, column: 11, scope: !2737)
!2750 = !DILocation(line: 259, column: 8, scope: !2751)
!2751 = distinct !DILexicalBlock(scope: !2747, file: !3, line: 258, column: 19)
!2752 = !DILocation(line: 259, column: 12, scope: !2751)
!2753 = !DILocation(line: 259, column: 10, scope: !2751)
!2754 = !DILocation(line: 259, column: 21, scope: !2751)
!2755 = !DILocation(line: 259, column: 28, scope: !2751)
!2756 = !DILocation(line: 259, column: 26, scope: !2751)
!2757 = !DILocation(line: 259, column: 5, scope: !2751)
!2758 = !DILocation(line: 260, column: 10, scope: !2751)
!2759 = !DILocation(line: 260, column: 19, scope: !2751)
!2760 = !DILocation(line: 260, column: 26, scope: !2751)
!2761 = !DILocation(line: 260, column: 35, scope: !2751)
!2762 = !DILocation(line: 260, column: 42, scope: !2751)
!2763 = !DILocation(line: 260, column: 40, scope: !2751)
!2764 = !DILocation(line: 260, column: 23, scope: !2751)
!2765 = !DILocation(line: 260, column: 47, scope: !2751)
!2766 = !DILocation(line: 260, column: 49, scope: !2751)
!2767 = !DILocation(line: 260, column: 44, scope: !2751)
!2768 = !DILocation(line: 260, column: 3, scope: !2751)
!2769 = !DILocation(line: 262, column: 11, scope: !2770)
!2770 = distinct !DILexicalBlock(scope: !2747, file: !3, line: 262, column: 11)
!2771 = !DILocation(line: 262, column: 13, scope: !2770)
!2772 = !DILocation(line: 262, column: 11, scope: !2747)
!2773 = !DILocation(line: 263, column: 10, scope: !2774)
!2774 = distinct !DILexicalBlock(scope: !2770, file: !3, line: 262, column: 19)
!2775 = !DILocation(line: 263, column: 19, scope: !2774)
!2776 = !DILocation(line: 263, column: 26, scope: !2774)
!2777 = !DILocation(line: 263, column: 35, scope: !2774)
!2778 = !DILocation(line: 263, column: 42, scope: !2774)
!2779 = !DILocation(line: 263, column: 40, scope: !2774)
!2780 = !DILocation(line: 263, column: 23, scope: !2774)
!2781 = !DILocation(line: 263, column: 47, scope: !2774)
!2782 = !DILocation(line: 263, column: 49, scope: !2774)
!2783 = !DILocation(line: 263, column: 44, scope: !2774)
!2784 = !DILocation(line: 263, column: 3, scope: !2774)
!2785 = !DILocation(line: 266, column: 10, scope: !2786)
!2786 = distinct !DILexicalBlock(scope: !2770, file: !3, line: 265, column: 7)
!2787 = !DILocation(line: 266, column: 19, scope: !2786)
!2788 = !DILocation(line: 266, column: 26, scope: !2786)
!2789 = !DILocation(line: 266, column: 35, scope: !2786)
!2790 = !DILocation(line: 266, column: 42, scope: !2786)
!2791 = !DILocation(line: 266, column: 40, scope: !2786)
!2792 = !DILocation(line: 266, column: 23, scope: !2786)
!2793 = !DILocation(line: 266, column: 53, scope: !2786)
!2794 = !DILocation(line: 266, column: 58, scope: !2786)
!2795 = !DILocation(line: 266, column: 67, scope: !2786)
!2796 = !DILocation(line: 266, column: 55, scope: !2786)
!2797 = !DILocation(line: 266, column: 75, scope: !2786)
!2798 = !DILocation(line: 266, column: 84, scope: !2786)
!2799 = !DILocation(line: 266, column: 72, scope: !2786)
!2800 = !DILocation(line: 266, column: 51, scope: !2786)
!2801 = !DILocation(line: 266, column: 92, scope: !2786)
!2802 = !DILocation(line: 266, column: 94, scope: !2786)
!2803 = !DILocation(line: 266, column: 102, scope: !2786)
!2804 = !DILocation(line: 266, column: 111, scope: !2786)
!2805 = !DILocation(line: 266, column: 99, scope: !2786)
!2806 = !DILocation(line: 266, column: 89, scope: !2786)
!2807 = !DILocation(line: 266, column: 119, scope: !2786)
!2808 = !DILocation(line: 266, column: 121, scope: !2786)
!2809 = !DILocation(line: 266, column: 116, scope: !2786)
!2810 = !DILocation(line: 266, column: 3, scope: !2786)
!2811 = !DILocation(line: 268, column: 1, scope: !2572)
!2812 = distinct !DISubprogram(name: "subsurf_copy_grid_paint_mask", scope: !3, file: !3, line: 1090, type: !2813, scopeLine: 1093, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!2813 = !DISubroutineType(types: !2814)
!2814 = !{null, !11, !2398, !1306, !2815}
!2815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2816, size: 64)
!2816 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2817)
!2817 = !DIDerivedType(tag: DW_TAG_typedef, name: "GridPaintMask", file: !684, line: 261, baseType: !2818)
!2818 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GridPaintMask", file: !684, line: 253, size: 128, elements: !2819)
!2819 = !{!2820, !2821, !2822}
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2818, file: !684, line: 255, baseType: !1306, size: 64)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !2818, file: !684, line: 258, baseType: !84, size: 32, offset: 64)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2818, file: !684, line: 260, baseType: !27, size: 32, offset: 96)
!2823 = !DILocalVariable(name: "dm", arg: 1, scope: !2812, file: !3, line: 1090, type: !11)
!2824 = !DILocation(line: 1090, column: 48, scope: !2812)
!2825 = !DILocalVariable(name: "mpoly", arg: 2, scope: !2812, file: !3, line: 1090, type: !2398)
!2826 = !DILocation(line: 1090, column: 65, scope: !2812)
!2827 = !DILocalVariable(name: "paint_mask", arg: 3, scope: !2812, file: !3, line: 1091, type: !1306)
!2828 = !DILocation(line: 1091, column: 42, scope: !2812)
!2829 = !DILocalVariable(name: "grid_paint_mask", arg: 4, scope: !2812, file: !3, line: 1092, type: !2815)
!2830 = !DILocation(line: 1092, column: 56, scope: !2812)
!2831 = !DILocalVariable(name: "ccgdm", scope: !2812, file: !3, line: 1094, type: !2295)
!2832 = !DILocation(line: 1094, column: 18, scope: !2812)
!2833 = !DILocation(line: 1094, column: 44, scope: !2812)
!2834 = !DILocation(line: 1094, column: 26, scope: !2812)
!2835 = !DILocalVariable(name: "ss", scope: !2812, file: !3, line: 1095, type: !6)
!2836 = !DILocation(line: 1095, column: 14, scope: !2812)
!2837 = !DILocation(line: 1095, column: 19, scope: !2812)
!2838 = !DILocation(line: 1095, column: 26, scope: !2812)
!2839 = !DILocalVariable(name: "level", scope: !2812, file: !3, line: 1096, type: !27)
!2840 = !DILocation(line: 1096, column: 6, scope: !2812)
!2841 = !DILocation(line: 1096, column: 46, scope: !2812)
!2842 = !DILocation(line: 1096, column: 14, scope: !2812)
!2843 = !DILocalVariable(name: "gridSize", scope: !2812, file: !3, line: 1097, type: !27)
!2844 = !DILocation(line: 1097, column: 6, scope: !2812)
!2845 = !DILocation(line: 1097, column: 40, scope: !2812)
!2846 = !DILocation(line: 1097, column: 17, scope: !2812)
!2847 = !DILocalVariable(name: "edgeSize", scope: !2812, file: !3, line: 1098, type: !27)
!2848 = !DILocation(line: 1098, column: 6, scope: !2812)
!2849 = !DILocation(line: 1098, column: 40, scope: !2812)
!2850 = !DILocation(line: 1098, column: 17, scope: !2812)
!2851 = !DILocalVariable(name: "totface", scope: !2812, file: !3, line: 1099, type: !27)
!2852 = !DILocation(line: 1099, column: 6, scope: !2812)
!2853 = !DILocation(line: 1099, column: 39, scope: !2812)
!2854 = !DILocation(line: 1099, column: 16, scope: !2812)
!2855 = !DILocalVariable(name: "i", scope: !2812, file: !3, line: 1100, type: !27)
!2856 = !DILocation(line: 1100, column: 6, scope: !2812)
!2857 = !DILocalVariable(name: "j", scope: !2812, file: !3, line: 1100, type: !27)
!2858 = !DILocation(line: 1100, column: 9, scope: !2812)
!2859 = !DILocalVariable(name: "x", scope: !2812, file: !3, line: 1100, type: !27)
!2860 = !DILocation(line: 1100, column: 12, scope: !2812)
!2861 = !DILocalVariable(name: "y", scope: !2812, file: !3, line: 1100, type: !27)
!2862 = !DILocation(line: 1100, column: 15, scope: !2812)
!2863 = !DILocalVariable(name: "factor", scope: !2812, file: !3, line: 1100, type: !27)
!2864 = !DILocation(line: 1100, column: 18, scope: !2812)
!2865 = !DILocalVariable(name: "gpm_gridsize", scope: !2812, file: !3, line: 1100, type: !27)
!2866 = !DILocation(line: 1100, column: 26, scope: !2812)
!2867 = !DILocation(line: 1102, column: 9, scope: !2868)
!2868 = distinct !DILexicalBlock(scope: !2812, file: !3, line: 1102, column: 2)
!2869 = !DILocation(line: 1102, column: 7, scope: !2868)
!2870 = !DILocation(line: 1102, column: 14, scope: !2871)
!2871 = distinct !DILexicalBlock(scope: !2868, file: !3, line: 1102, column: 2)
!2872 = !DILocation(line: 1102, column: 18, scope: !2871)
!2873 = !DILocation(line: 1102, column: 16, scope: !2871)
!2874 = !DILocation(line: 1102, column: 2, scope: !2868)
!2875 = !DILocalVariable(name: "f", scope: !2876, file: !3, line: 1103, type: !2461)
!2876 = distinct !DILexicalBlock(scope: !2871, file: !3, line: 1102, column: 32)
!2877 = !DILocation(line: 1103, column: 12, scope: !2876)
!2878 = !DILocation(line: 1103, column: 16, scope: !2876)
!2879 = !DILocation(line: 1103, column: 23, scope: !2876)
!2880 = !DILocation(line: 1103, column: 31, scope: !2876)
!2881 = !DILocation(line: 1103, column: 34, scope: !2876)
!2882 = !DILocalVariable(name: "p", scope: !2876, file: !3, line: 1104, type: !2398)
!2883 = !DILocation(line: 1104, column: 16, scope: !2876)
!2884 = !DILocation(line: 1104, column: 21, scope: !2876)
!2885 = !DILocation(line: 1104, column: 27, scope: !2876)
!2886 = !DILocation(line: 1106, column: 10, scope: !2887)
!2887 = distinct !DILexicalBlock(scope: !2876, file: !3, line: 1106, column: 3)
!2888 = !DILocation(line: 1106, column: 8, scope: !2887)
!2889 = !DILocation(line: 1106, column: 15, scope: !2890)
!2890 = distinct !DILexicalBlock(scope: !2887, file: !3, line: 1106, column: 3)
!2891 = !DILocation(line: 1106, column: 19, scope: !2890)
!2892 = !DILocation(line: 1106, column: 22, scope: !2890)
!2893 = !DILocation(line: 1106, column: 17, scope: !2890)
!2894 = !DILocation(line: 1106, column: 3, scope: !2887)
!2895 = !DILocalVariable(name: "gpm", scope: !2896, file: !3, line: 1107, type: !2815)
!2896 = distinct !DILexicalBlock(scope: !2890, file: !3, line: 1106, column: 36)
!2897 = !DILocation(line: 1107, column: 25, scope: !2896)
!2898 = !DILocation(line: 1107, column: 32, scope: !2896)
!2899 = !DILocation(line: 1107, column: 48, scope: !2896)
!2900 = !DILocation(line: 1107, column: 51, scope: !2896)
!2901 = !DILocation(line: 1107, column: 63, scope: !2896)
!2902 = !DILocation(line: 1107, column: 61, scope: !2896)
!2903 = !DILocation(line: 1108, column: 9, scope: !2904)
!2904 = distinct !DILexicalBlock(scope: !2896, file: !3, line: 1108, column: 8)
!2905 = !DILocation(line: 1108, column: 14, scope: !2904)
!2906 = !DILocation(line: 1108, column: 8, scope: !2896)
!2907 = !DILocation(line: 1109, column: 5, scope: !2904)
!2908 = !DILocation(line: 1111, column: 28, scope: !2896)
!2909 = !DILocation(line: 1111, column: 35, scope: !2896)
!2910 = !DILocation(line: 1111, column: 40, scope: !2896)
!2911 = !DILocation(line: 1111, column: 13, scope: !2896)
!2912 = !DILocation(line: 1111, column: 11, scope: !2896)
!2913 = !DILocation(line: 1112, column: 36, scope: !2896)
!2914 = !DILocation(line: 1112, column: 41, scope: !2896)
!2915 = !DILocation(line: 1112, column: 19, scope: !2896)
!2916 = !DILocation(line: 1112, column: 17, scope: !2896)
!2917 = !DILocation(line: 1114, column: 11, scope: !2918)
!2918 = distinct !DILexicalBlock(scope: !2896, file: !3, line: 1114, column: 4)
!2919 = !DILocation(line: 1114, column: 9, scope: !2918)
!2920 = !DILocation(line: 1114, column: 16, scope: !2921)
!2921 = distinct !DILexicalBlock(scope: !2918, file: !3, line: 1114, column: 4)
!2922 = !DILocation(line: 1114, column: 20, scope: !2921)
!2923 = !DILocation(line: 1114, column: 18, scope: !2921)
!2924 = !DILocation(line: 1114, column: 4, scope: !2918)
!2925 = !DILocation(line: 1115, column: 12, scope: !2926)
!2926 = distinct !DILexicalBlock(scope: !2927, file: !3, line: 1115, column: 5)
!2927 = distinct !DILexicalBlock(scope: !2921, file: !3, line: 1114, column: 35)
!2928 = !DILocation(line: 1115, column: 10, scope: !2926)
!2929 = !DILocation(line: 1115, column: 17, scope: !2930)
!2930 = distinct !DILexicalBlock(scope: !2926, file: !3, line: 1115, column: 5)
!2931 = !DILocation(line: 1115, column: 21, scope: !2930)
!2932 = !DILocation(line: 1115, column: 19, scope: !2930)
!2933 = !DILocation(line: 1115, column: 5, scope: !2926)
!2934 = !DILocalVariable(name: "vndx", scope: !2935, file: !3, line: 1116, type: !27)
!2935 = distinct !DILexicalBlock(scope: !2930, file: !3, line: 1115, column: 36)
!2936 = !DILocation(line: 1116, column: 10, scope: !2935)
!2937 = !DILocalVariable(name: "offset", scope: !2935, file: !3, line: 1116, type: !27)
!2938 = !DILocation(line: 1116, column: 16, scope: !2935)
!2939 = !DILocation(line: 1118, column: 26, scope: !2935)
!2940 = !DILocation(line: 1118, column: 30, scope: !2935)
!2941 = !DILocation(line: 1118, column: 33, scope: !2935)
!2942 = !DILocation(line: 1118, column: 36, scope: !2935)
!2943 = !DILocation(line: 1118, column: 39, scope: !2935)
!2944 = !DILocation(line: 1118, column: 42, scope: !2935)
!2945 = !DILocation(line: 1118, column: 52, scope: !2935)
!2946 = !DILocation(line: 1118, column: 13, scope: !2935)
!2947 = !DILocation(line: 1118, column: 11, scope: !2935)
!2948 = !DILocation(line: 1119, column: 15, scope: !2935)
!2949 = !DILocation(line: 1119, column: 19, scope: !2935)
!2950 = !DILocation(line: 1119, column: 17, scope: !2935)
!2951 = !DILocation(line: 1119, column: 28, scope: !2935)
!2952 = !DILocation(line: 1119, column: 26, scope: !2935)
!2953 = !DILocation(line: 1119, column: 43, scope: !2935)
!2954 = !DILocation(line: 1119, column: 47, scope: !2935)
!2955 = !DILocation(line: 1119, column: 45, scope: !2935)
!2956 = !DILocation(line: 1119, column: 41, scope: !2935)
!2957 = !DILocation(line: 1119, column: 13, scope: !2935)
!2958 = !DILocation(line: 1120, column: 25, scope: !2935)
!2959 = !DILocation(line: 1120, column: 30, scope: !2935)
!2960 = !DILocation(line: 1120, column: 35, scope: !2935)
!2961 = !DILocation(line: 1120, column: 6, scope: !2935)
!2962 = !DILocation(line: 1120, column: 17, scope: !2935)
!2963 = !DILocation(line: 1120, column: 23, scope: !2935)
!2964 = !DILocation(line: 1121, column: 5, scope: !2935)
!2965 = !DILocation(line: 1115, column: 32, scope: !2930)
!2966 = !DILocation(line: 1115, column: 5, scope: !2930)
!2967 = distinct !{!2967, !2933, !2968}
!2968 = !DILocation(line: 1121, column: 5, scope: !2926)
!2969 = !DILocation(line: 1122, column: 4, scope: !2927)
!2970 = !DILocation(line: 1114, column: 31, scope: !2921)
!2971 = !DILocation(line: 1114, column: 4, scope: !2921)
!2972 = distinct !{!2972, !2924, !2973}
!2973 = !DILocation(line: 1122, column: 4, scope: !2918)
!2974 = !DILocation(line: 1123, column: 3, scope: !2896)
!2975 = !DILocation(line: 1106, column: 32, scope: !2890)
!2976 = !DILocation(line: 1106, column: 3, scope: !2890)
!2977 = distinct !{!2977, !2894, !2978}
!2978 = !DILocation(line: 1123, column: 3, scope: !2887)
!2979 = !DILocation(line: 1124, column: 2, scope: !2876)
!2980 = !DILocation(line: 1102, column: 28, scope: !2871)
!2981 = !DILocation(line: 1102, column: 2, scope: !2871)
!2982 = distinct !{!2982, !2874, !2983}
!2983 = !DILocation(line: 1124, column: 2, scope: !2868)
!2984 = !DILocation(line: 1125, column: 1, scope: !2812)
!2985 = distinct !DISubprogram(name: "subsurf_make_derived_from_derived", scope: !3, file: !3, line: 3891, type: !2986, scopeLine: 3896, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!2986 = !DISubroutineType(types: !2987)
!2987 = !{!1563, !1563, !2988, !1301, !2998}
!2988 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2989, size: 64)
!2989 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SubsurfModifierData", file: !353, line: 130, size: 1088, elements: !2990)
!2990 = !{!2991, !2992, !2993, !2994, !2995, !2996, !2997}
!2991 = !DIDerivedType(tag: DW_TAG_member, name: "modifier", scope: !2989, file: !353, line: 131, baseType: !356, size: 896)
!2992 = !DIDerivedType(tag: DW_TAG_member, name: "subdivType", scope: !2989, file: !353, line: 133, baseType: !135, size: 16, offset: 896)
!2993 = !DIDerivedType(tag: DW_TAG_member, name: "levels", scope: !2989, file: !353, line: 133, baseType: !135, size: 16, offset: 912)
!2994 = !DIDerivedType(tag: DW_TAG_member, name: "renderLevels", scope: !2989, file: !353, line: 133, baseType: !135, size: 16, offset: 928)
!2995 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2989, file: !353, line: 133, baseType: !135, size: 16, offset: 944)
!2996 = !DIDerivedType(tag: DW_TAG_member, name: "emCache", scope: !2989, file: !353, line: 135, baseType: !41, size: 64, offset: 960)
!2997 = !DIDerivedType(tag: DW_TAG_member, name: "mCache", scope: !2989, file: !353, line: 135, baseType: !41, size: 64, offset: 1024)
!2998 = !DIDerivedType(tag: DW_TAG_typedef, name: "SubsurfFlags", file: !2191, line: 64, baseType: !2201)
!2999 = !DILocalVariable(name: "dm", arg: 1, scope: !2985, file: !3, line: 3892, type: !1563)
!3000 = !DILocation(line: 3892, column: 29, scope: !2985)
!3001 = !DILocalVariable(name: "smd", arg: 2, scope: !2985, file: !3, line: 3893, type: !2988)
!3002 = !DILocation(line: 3893, column: 37, scope: !2985)
!3003 = !DILocalVariable(name: "vertCos", arg: 3, scope: !2985, file: !3, line: 3894, type: !1301)
!3004 = !DILocation(line: 3894, column: 17, scope: !2985)
!3005 = !DILocalVariable(name: "flags", arg: 4, scope: !2985, file: !3, line: 3895, type: !2998)
!3006 = !DILocation(line: 3895, column: 22, scope: !2985)
!3007 = !DILocalVariable(name: "useSimple", scope: !2985, file: !3, line: 3897, type: !27)
!3008 = !DILocation(line: 3897, column: 6, scope: !2985)
!3009 = !DILocation(line: 3897, column: 19, scope: !2985)
!3010 = !DILocation(line: 3897, column: 24, scope: !2985)
!3011 = !DILocation(line: 3897, column: 35, scope: !2985)
!3012 = !DILocation(line: 3897, column: 18, scope: !2985)
!3013 = !DILocalVariable(name: "useAging", scope: !2985, file: !3, line: 3898, type: !3014)
!3014 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCGFlags", file: !3, line: 126, baseType: !2208)
!3015 = !DILocation(line: 3898, column: 11, scope: !2985)
!3016 = !DILocation(line: 3898, column: 22, scope: !2985)
!3017 = !DILocation(line: 3898, column: 27, scope: !2985)
!3018 = !DILocation(line: 3898, column: 33, scope: !2985)
!3019 = !DILocalVariable(name: "useSubsurfUv", scope: !2985, file: !3, line: 3899, type: !27)
!3020 = !DILocation(line: 3899, column: 6, scope: !2985)
!3021 = !DILocation(line: 3899, column: 21, scope: !2985)
!3022 = !DILocation(line: 3899, column: 26, scope: !2985)
!3023 = !DILocation(line: 3899, column: 32, scope: !2985)
!3024 = !DILocalVariable(name: "drawInteriorEdges", scope: !2985, file: !3, line: 3900, type: !27)
!3025 = !DILocation(line: 3900, column: 6, scope: !2985)
!3026 = !DILocation(line: 3900, column: 28, scope: !2985)
!3027 = !DILocation(line: 3900, column: 33, scope: !2985)
!3028 = !DILocation(line: 3900, column: 39, scope: !2985)
!3029 = !DILocation(line: 3900, column: 26, scope: !2985)
!3030 = !DILocalVariable(name: "result", scope: !2985, file: !3, line: 3901, type: !2295)
!3031 = !DILocation(line: 3901, column: 18, scope: !2985)
!3032 = !DILocation(line: 3905, column: 6, scope: !3033)
!3033 = distinct !DILexicalBlock(scope: !2985, file: !3, line: 3905, column: 6)
!3034 = !DILocation(line: 3905, column: 12, scope: !3033)
!3035 = !DILocation(line: 3905, column: 6, scope: !2985)
!3036 = !DILocalVariable(name: "levels", scope: !3037, file: !3, line: 3906, type: !27)
!3037 = distinct !DILexicalBlock(scope: !3033, file: !3, line: 3905, column: 37)
!3038 = !DILocation(line: 3906, column: 7, scope: !3037)
!3039 = !DILocation(line: 3906, column: 17, scope: !3037)
!3040 = !DILocation(line: 3906, column: 22, scope: !3037)
!3041 = !DILocation(line: 3906, column: 31, scope: !3037)
!3042 = !DILocation(line: 3906, column: 16, scope: !3037)
!3043 = !DILocation(line: 3906, column: 66, scope: !3037)
!3044 = !DILocation(line: 3906, column: 71, scope: !3037)
!3045 = !DILocation(line: 3906, column: 80, scope: !3037)
!3046 = !DILocation(line: 3906, column: 87, scope: !3037)
!3047 = !DILocation(line: 3906, column: 90, scope: !3037)
!3048 = !DILocation(line: 3906, column: 95, scope: !3037)
!3049 = !DILocation(line: 3906, column: 40, scope: !3037)
!3050 = !DILocation(line: 3906, column: 105, scope: !3037)
!3051 = !DILocation(line: 3906, column: 110, scope: !3037)
!3052 = !DILocation(line: 3908, column: 30, scope: !3037)
!3053 = !DILocation(line: 3908, column: 35, scope: !3037)
!3054 = !DILocation(line: 3908, column: 44, scope: !3037)
!3055 = !DILocation(line: 3908, column: 55, scope: !3037)
!3056 = !DILocation(line: 3908, column: 67, scope: !3037)
!3057 = !DILocation(line: 3908, column: 65, scope: !3037)
!3058 = !DILocation(line: 3908, column: 76, scope: !3037)
!3059 = !DILocation(line: 3908, column: 18, scope: !3037)
!3060 = !DILocation(line: 3908, column: 3, scope: !3037)
!3061 = !DILocation(line: 3908, column: 8, scope: !3037)
!3062 = !DILocation(line: 3908, column: 16, scope: !3037)
!3063 = !DILocation(line: 3909, column: 28, scope: !3037)
!3064 = !DILocation(line: 3909, column: 33, scope: !3037)
!3065 = !DILocation(line: 3909, column: 42, scope: !3037)
!3066 = !DILocation(line: 3909, column: 46, scope: !3037)
!3067 = !DILocation(line: 3909, column: 55, scope: !3037)
!3068 = !DILocation(line: 3909, column: 3, scope: !3037)
!3069 = !DILocation(line: 3911, column: 30, scope: !3037)
!3070 = !DILocation(line: 3911, column: 35, scope: !3037)
!3071 = !DILocation(line: 3912, column: 30, scope: !3037)
!3072 = !DILocation(line: 3913, column: 30, scope: !3037)
!3073 = !DILocation(line: 3913, column: 44, scope: !3037)
!3074 = !DILocation(line: 3911, column: 12, scope: !3037)
!3075 = !DILocation(line: 3911, column: 10, scope: !3037)
!3076 = !DILocation(line: 3914, column: 2, scope: !3037)
!3077 = !DILocation(line: 3915, column: 11, scope: !3078)
!3078 = distinct !DILexicalBlock(scope: !3033, file: !3, line: 3915, column: 11)
!3079 = !DILocation(line: 3915, column: 17, scope: !3078)
!3080 = !DILocation(line: 3915, column: 11, scope: !3033)
!3081 = !DILocalVariable(name: "ss", scope: !3082, file: !3, line: 3917, type: !6)
!3082 = distinct !DILexicalBlock(scope: !3078, file: !3, line: 3915, column: 46)
!3083 = !DILocation(line: 3917, column: 15, scope: !3082)
!3084 = !DILocalVariable(name: "levels", scope: !3082, file: !3, line: 3918, type: !27)
!3085 = !DILocation(line: 3918, column: 7, scope: !3082)
!3086 = !DILocation(line: 3918, column: 17, scope: !3082)
!3087 = !DILocation(line: 3918, column: 22, scope: !3082)
!3088 = !DILocation(line: 3918, column: 31, scope: !3082)
!3089 = !DILocation(line: 3918, column: 16, scope: !3082)
!3090 = !DILocation(line: 3918, column: 66, scope: !3082)
!3091 = !DILocation(line: 3918, column: 71, scope: !3082)
!3092 = !DILocation(line: 3918, column: 80, scope: !3082)
!3093 = !DILocation(line: 3918, column: 87, scope: !3082)
!3094 = !DILocation(line: 3918, column: 90, scope: !3082)
!3095 = !DILocation(line: 3918, column: 95, scope: !3082)
!3096 = !DILocation(line: 3918, column: 40, scope: !3082)
!3097 = !DILocation(line: 3918, column: 111, scope: !3082)
!3098 = !DILocation(line: 3918, column: 116, scope: !3082)
!3099 = !DILocation(line: 3920, column: 7, scope: !3100)
!3100 = distinct !DILexicalBlock(scope: !3082, file: !3, line: 3920, column: 7)
!3101 = !DILocation(line: 3920, column: 14, scope: !3100)
!3102 = !DILocation(line: 3920, column: 7, scope: !3082)
!3103 = !DILocation(line: 3921, column: 11, scope: !3100)
!3104 = !DILocation(line: 3921, column: 4, scope: !3100)
!3105 = !DILocation(line: 3923, column: 26, scope: !3082)
!3106 = !DILocation(line: 3923, column: 37, scope: !3082)
!3107 = !DILocation(line: 3923, column: 47, scope: !3082)
!3108 = !DILocation(line: 3923, column: 63, scope: !3082)
!3109 = !DILocation(line: 3923, column: 8, scope: !3082)
!3110 = !DILocation(line: 3923, column: 6, scope: !3082)
!3111 = !DILocation(line: 3925, column: 28, scope: !3082)
!3112 = !DILocation(line: 3925, column: 32, scope: !3082)
!3113 = !DILocation(line: 3925, column: 36, scope: !3082)
!3114 = !DILocation(line: 3925, column: 45, scope: !3082)
!3115 = !DILocation(line: 3925, column: 3, scope: !3082)
!3116 = !DILocation(line: 3927, column: 30, scope: !3082)
!3117 = !DILocation(line: 3928, column: 30, scope: !3082)
!3118 = !DILocation(line: 3928, column: 49, scope: !3082)
!3119 = !DILocation(line: 3928, column: 63, scope: !3082)
!3120 = !DILocation(line: 3927, column: 12, scope: !3082)
!3121 = !DILocation(line: 3927, column: 10, scope: !3082)
!3122 = !DILocation(line: 3930, column: 3, scope: !3082)
!3123 = !DILocation(line: 3930, column: 11, scope: !3082)
!3124 = !DILocation(line: 3930, column: 18, scope: !3082)
!3125 = !DILocation(line: 3931, column: 2, scope: !3082)
!3126 = !DILocalVariable(name: "useIncremental", scope: !3127, file: !3, line: 3933, type: !27)
!3127 = distinct !DILexicalBlock(scope: !3078, file: !3, line: 3932, column: 7)
!3128 = !DILocation(line: 3933, column: 7, scope: !3127)
!3129 = !DILocation(line: 3933, column: 25, scope: !3127)
!3130 = !DILocation(line: 3933, column: 30, scope: !3127)
!3131 = !DILocation(line: 3933, column: 36, scope: !3127)
!3132 = !DILocalVariable(name: "levels", scope: !3127, file: !3, line: 3934, type: !27)
!3133 = !DILocation(line: 3934, column: 7, scope: !3127)
!3134 = !DILocation(line: 3934, column: 17, scope: !3127)
!3135 = !DILocation(line: 3934, column: 22, scope: !3127)
!3136 = !DILocation(line: 3934, column: 31, scope: !3127)
!3137 = !DILocation(line: 3934, column: 16, scope: !3127)
!3138 = !DILocation(line: 3934, column: 66, scope: !3127)
!3139 = !DILocation(line: 3934, column: 71, scope: !3127)
!3140 = !DILocation(line: 3934, column: 80, scope: !3127)
!3141 = !DILocation(line: 3934, column: 87, scope: !3127)
!3142 = !DILocation(line: 3934, column: 90, scope: !3127)
!3143 = !DILocation(line: 3934, column: 95, scope: !3127)
!3144 = !DILocation(line: 3934, column: 40, scope: !3127)
!3145 = !DILocation(line: 3934, column: 105, scope: !3127)
!3146 = !DILocation(line: 3934, column: 110, scope: !3127)
!3147 = !DILocalVariable(name: "ss", scope: !3127, file: !3, line: 3935, type: !6)
!3148 = !DILocation(line: 3935, column: 15, scope: !3127)
!3149 = !DILocation(line: 3948, column: 9, scope: !3150)
!3150 = distinct !DILexicalBlock(scope: !3127, file: !3, line: 3948, column: 7)
!3151 = !DILocation(line: 3948, column: 15, scope: !3150)
!3152 = !DILocation(line: 3948, column: 39, scope: !3150)
!3153 = !DILocation(line: 3948, column: 42, scope: !3150)
!3154 = !DILocation(line: 3948, column: 47, scope: !3150)
!3155 = !DILocation(line: 3948, column: 7, scope: !3127)
!3156 = !DILocation(line: 3949, column: 20, scope: !3157)
!3157 = distinct !DILexicalBlock(scope: !3150, file: !3, line: 3948, column: 56)
!3158 = !DILocation(line: 3949, column: 25, scope: !3157)
!3159 = !DILocation(line: 3949, column: 4, scope: !3157)
!3160 = !DILocation(line: 3950, column: 4, scope: !3157)
!3161 = !DILocation(line: 3950, column: 9, scope: !3157)
!3162 = !DILocation(line: 3950, column: 17, scope: !3157)
!3163 = !DILocation(line: 3951, column: 3, scope: !3157)
!3164 = !DILocation(line: 3953, column: 7, scope: !3165)
!3165 = distinct !DILexicalBlock(scope: !3127, file: !3, line: 3953, column: 7)
!3166 = !DILocation(line: 3953, column: 22, scope: !3165)
!3167 = !DILocation(line: 3953, column: 26, scope: !3165)
!3168 = !DILocation(line: 3953, column: 32, scope: !3165)
!3169 = !DILocation(line: 3953, column: 7, scope: !3127)
!3170 = !DILocation(line: 3954, column: 35, scope: !3171)
!3171 = distinct !DILexicalBlock(scope: !3165, file: !3, line: 3953, column: 58)
!3172 = !DILocation(line: 3954, column: 40, scope: !3171)
!3173 = !DILocation(line: 3954, column: 48, scope: !3171)
!3174 = !DILocation(line: 3954, column: 59, scope: !3171)
!3175 = !DILocation(line: 3954, column: 71, scope: !3171)
!3176 = !DILocation(line: 3954, column: 69, scope: !3171)
!3177 = !DILocation(line: 3954, column: 80, scope: !3171)
!3178 = !DILocation(line: 3954, column: 23, scope: !3171)
!3179 = !DILocation(line: 3954, column: 21, scope: !3171)
!3180 = !DILocation(line: 3954, column: 18, scope: !3171)
!3181 = !DILocation(line: 3954, column: 4, scope: !3171)
!3182 = !DILocation(line: 3954, column: 9, scope: !3171)
!3183 = !DILocation(line: 3954, column: 16, scope: !3171)
!3184 = !DILocation(line: 3956, column: 29, scope: !3171)
!3185 = !DILocation(line: 3956, column: 33, scope: !3171)
!3186 = !DILocation(line: 3956, column: 37, scope: !3171)
!3187 = !DILocation(line: 3956, column: 46, scope: !3171)
!3188 = !DILocation(line: 3956, column: 4, scope: !3171)
!3189 = !DILocation(line: 3958, column: 31, scope: !3171)
!3190 = !DILocation(line: 3958, column: 36, scope: !3171)
!3191 = !DILocation(line: 3959, column: 31, scope: !3171)
!3192 = !DILocation(line: 3960, column: 31, scope: !3171)
!3193 = !DILocation(line: 3960, column: 45, scope: !3171)
!3194 = !DILocation(line: 3958, column: 13, scope: !3171)
!3195 = !DILocation(line: 3958, column: 11, scope: !3171)
!3196 = !DILocation(line: 3961, column: 3, scope: !3171)
!3197 = !DILocalVariable(name: "ccg_flags", scope: !3198, file: !3, line: 3963, type: !3014)
!3198 = distinct !DILexicalBlock(scope: !3165, file: !3, line: 3962, column: 8)
!3199 = !DILocation(line: 3963, column: 13, scope: !3198)
!3200 = !DILocation(line: 3963, column: 25, scope: !3198)
!3201 = !DILocation(line: 3963, column: 35, scope: !3198)
!3202 = !DILocation(line: 3963, column: 51, scope: !3198)
!3203 = !DILocation(line: 3965, column: 8, scope: !3204)
!3204 = distinct !DILexicalBlock(scope: !3198, file: !3, line: 3965, column: 8)
!3205 = !DILocation(line: 3965, column: 13, scope: !3204)
!3206 = !DILocation(line: 3965, column: 20, scope: !3204)
!3207 = !DILocation(line: 3965, column: 24, scope: !3204)
!3208 = !DILocation(line: 3965, column: 30, scope: !3204)
!3209 = !DILocation(line: 3965, column: 8, scope: !3198)
!3210 = !DILocation(line: 3966, column: 21, scope: !3211)
!3211 = distinct !DILexicalBlock(scope: !3204, file: !3, line: 3965, column: 56)
!3212 = !DILocation(line: 3966, column: 26, scope: !3211)
!3213 = !DILocation(line: 3966, column: 5, scope: !3211)
!3214 = !DILocation(line: 3967, column: 5, scope: !3211)
!3215 = !DILocation(line: 3967, column: 10, scope: !3211)
!3216 = !DILocation(line: 3967, column: 17, scope: !3211)
!3217 = !DILocation(line: 3968, column: 4, scope: !3211)
!3218 = !DILocation(line: 3970, column: 8, scope: !3219)
!3219 = distinct !DILexicalBlock(scope: !3198, file: !3, line: 3970, column: 8)
!3220 = !DILocation(line: 3970, column: 14, scope: !3219)
!3221 = !DILocation(line: 3970, column: 8, scope: !3198)
!3222 = !DILocation(line: 3971, column: 15, scope: !3219)
!3223 = !DILocation(line: 3971, column: 5, scope: !3219)
!3224 = !DILocation(line: 3973, column: 27, scope: !3198)
!3225 = !DILocation(line: 3973, column: 38, scope: !3198)
!3226 = !DILocation(line: 3973, column: 9, scope: !3198)
!3227 = !DILocation(line: 3973, column: 7, scope: !3198)
!3228 = !DILocation(line: 3974, column: 29, scope: !3198)
!3229 = !DILocation(line: 3974, column: 33, scope: !3198)
!3230 = !DILocation(line: 3974, column: 37, scope: !3198)
!3231 = !DILocation(line: 3974, column: 46, scope: !3198)
!3232 = !DILocation(line: 3974, column: 4, scope: !3198)
!3233 = !DILocation(line: 3976, column: 31, scope: !3198)
!3234 = !DILocation(line: 3976, column: 35, scope: !3198)
!3235 = !DILocation(line: 3976, column: 54, scope: !3198)
!3236 = !DILocation(line: 3976, column: 68, scope: !3198)
!3237 = !DILocation(line: 3976, column: 13, scope: !3198)
!3238 = !DILocation(line: 3976, column: 11, scope: !3198)
!3239 = !DILocation(line: 3978, column: 8, scope: !3240)
!3240 = distinct !DILexicalBlock(scope: !3198, file: !3, line: 3978, column: 8)
!3241 = !DILocation(line: 3978, column: 14, scope: !3240)
!3242 = !DILocation(line: 3978, column: 8, scope: !3198)
!3243 = !DILocation(line: 3979, column: 19, scope: !3240)
!3244 = !DILocation(line: 3979, column: 5, scope: !3240)
!3245 = !DILocation(line: 3979, column: 10, scope: !3240)
!3246 = !DILocation(line: 3979, column: 17, scope: !3240)
!3247 = !DILocation(line: 3981, column: 5, scope: !3240)
!3248 = !DILocation(line: 3981, column: 13, scope: !3240)
!3249 = !DILocation(line: 3981, column: 20, scope: !3240)
!3250 = !DILocation(line: 3983, column: 8, scope: !3251)
!3251 = distinct !DILexicalBlock(scope: !3198, file: !3, line: 3983, column: 8)
!3252 = !DILocation(line: 3983, column: 14, scope: !3251)
!3253 = !DILocation(line: 3983, column: 8, scope: !3198)
!3254 = !DILocation(line: 3984, column: 29, scope: !3251)
!3255 = !DILocation(line: 3984, column: 5, scope: !3251)
!3256 = !DILocation(line: 3988, column: 24, scope: !2985)
!3257 = !DILocation(line: 3988, column: 9, scope: !2985)
!3258 = !DILocation(line: 3988, column: 2, scope: !2985)
!3259 = !DILocation(line: 3989, column: 1, scope: !2985)
!3260 = distinct !DISubprogram(name: "_getSubSurf", scope: !3, file: !3, line: 128, type: !3261, scopeLine: 130, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!3261 = !DISubroutineType(types: !3262)
!3262 = !{!6, !6, !27, !27, !3014}
!3263 = !DILocalVariable(name: "prevSS", arg: 1, scope: !3260, file: !3, line: 128, type: !6)
!3264 = !DILocation(line: 128, column: 44, scope: !3260)
!3265 = !DILocalVariable(name: "subdivLevels", arg: 2, scope: !3260, file: !3, line: 128, type: !27)
!3266 = !DILocation(line: 128, column: 56, scope: !3260)
!3267 = !DILocalVariable(name: "numLayers", arg: 3, scope: !3260, file: !3, line: 129, type: !27)
!3268 = !DILocation(line: 129, column: 36, scope: !3260)
!3269 = !DILocalVariable(name: "flags", arg: 4, scope: !3260, file: !3, line: 129, type: !3014)
!3270 = !DILocation(line: 129, column: 56, scope: !3260)
!3271 = !DILocalVariable(name: "ifc", scope: !3260, file: !3, line: 131, type: !3272)
!3272 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCGMeshIFC", file: !8, line: 43, baseType: !3273)
!3273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CCGMeshIFC", file: !8, line: 38, size: 192, elements: !3274)
!3274 = !{!3275, !3276, !3277, !3278, !3279, !3280}
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "vertUserSize", scope: !3273, file: !8, line: 39, baseType: !27, size: 32)
!3276 = !DIDerivedType(tag: DW_TAG_member, name: "edgeUserSize", scope: !3273, file: !8, line: 39, baseType: !27, size: 32, offset: 32)
!3277 = !DIDerivedType(tag: DW_TAG_member, name: "faceUserSize", scope: !3273, file: !8, line: 39, baseType: !27, size: 32, offset: 64)
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "numLayers", scope: !3273, file: !8, line: 40, baseType: !27, size: 32, offset: 96)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "vertDataSize", scope: !3273, file: !8, line: 41, baseType: !27, size: 32, offset: 128)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "simpleSubdiv", scope: !3273, file: !8, line: 42, baseType: !27, size: 32, offset: 160)
!3281 = !DILocation(line: 131, column: 13, scope: !3260)
!3282 = !DILocalVariable(name: "ccgSS", scope: !3260, file: !3, line: 132, type: !6)
!3283 = !DILocation(line: 132, column: 14, scope: !3260)
!3284 = !DILocalVariable(name: "useAging", scope: !3260, file: !3, line: 133, type: !27)
!3285 = !DILocation(line: 133, column: 6, scope: !3260)
!3286 = !DILocation(line: 133, column: 20, scope: !3260)
!3287 = !DILocation(line: 133, column: 26, scope: !3260)
!3288 = !DILocation(line: 133, column: 18, scope: !3260)
!3289 = !DILocation(line: 133, column: 17, scope: !3260)
!3290 = !DILocalVariable(name: "useArena", scope: !3260, file: !3, line: 134, type: !27)
!3291 = !DILocation(line: 134, column: 6, scope: !3260)
!3292 = !DILocation(line: 134, column: 17, scope: !3260)
!3293 = !DILocation(line: 134, column: 23, scope: !3260)
!3294 = !DILocalVariable(name: "normalOffset", scope: !3260, file: !3, line: 135, type: !27)
!3295 = !DILocation(line: 135, column: 6, scope: !3260)
!3296 = !DILocation(line: 138, column: 17, scope: !3260)
!3297 = !DILocation(line: 138, column: 15, scope: !3260)
!3298 = !DILocation(line: 140, column: 6, scope: !3299)
!3299 = distinct !DILexicalBlock(scope: !3260, file: !3, line: 140, column: 6)
!3300 = !DILocation(line: 140, column: 6, scope: !3260)
!3301 = !DILocalVariable(name: "oldUseAging", scope: !3302, file: !3, line: 141, type: !27)
!3302 = distinct !DILexicalBlock(scope: !3299, file: !3, line: 140, column: 14)
!3303 = !DILocation(line: 141, column: 7, scope: !3302)
!3304 = !DILocation(line: 143, column: 30, scope: !3302)
!3305 = !DILocation(line: 143, column: 3, scope: !3302)
!3306 = !DILocation(line: 145, column: 8, scope: !3307)
!3307 = distinct !DILexicalBlock(scope: !3302, file: !3, line: 145, column: 7)
!3308 = !DILocation(line: 145, column: 23, scope: !3307)
!3309 = !DILocation(line: 145, column: 20, scope: !3307)
!3310 = !DILocation(line: 145, column: 33, scope: !3307)
!3311 = !DILocation(line: 146, column: 35, scope: !3307)
!3312 = !DILocation(line: 146, column: 8, scope: !3307)
!3313 = !DILocation(line: 146, column: 49, scope: !3307)
!3314 = !DILocation(line: 146, column: 55, scope: !3307)
!3315 = !DILocation(line: 146, column: 47, scope: !3307)
!3316 = !DILocation(line: 146, column: 46, scope: !3307)
!3317 = !DILocation(line: 146, column: 43, scope: !3307)
!3318 = !DILocation(line: 145, column: 7, scope: !3302)
!3319 = !DILocation(line: 148, column: 20, scope: !3320)
!3320 = distinct !DILexicalBlock(scope: !3307, file: !3, line: 147, column: 3)
!3321 = !DILocation(line: 148, column: 4, scope: !3320)
!3322 = !DILocation(line: 149, column: 3, scope: !3320)
!3323 = !DILocation(line: 151, column: 36, scope: !3324)
!3324 = distinct !DILexicalBlock(scope: !3307, file: !3, line: 150, column: 8)
!3325 = !DILocation(line: 151, column: 44, scope: !3324)
!3326 = !DILocation(line: 151, column: 4, scope: !3324)
!3327 = !DILocation(line: 153, column: 11, scope: !3324)
!3328 = !DILocation(line: 153, column: 4, scope: !3324)
!3329 = !DILocation(line: 155, column: 2, scope: !3302)
!3330 = !DILocation(line: 157, column: 6, scope: !3331)
!3331 = distinct !DILexicalBlock(scope: !3260, file: !3, line: 157, column: 6)
!3332 = !DILocation(line: 157, column: 6, scope: !3260)
!3333 = !DILocation(line: 158, column: 45, scope: !3334)
!3334 = distinct !DILexicalBlock(scope: !3331, file: !3, line: 157, column: 16)
!3335 = !DILocation(line: 158, column: 58, scope: !3334)
!3336 = !DILocation(line: 158, column: 26, scope: !3334)
!3337 = !DILocation(line: 158, column: 39, scope: !3334)
!3338 = !DILocation(line: 158, column: 7, scope: !3334)
!3339 = !DILocation(line: 158, column: 20, scope: !3334)
!3340 = !DILocation(line: 159, column: 2, scope: !3334)
!3341 = !DILocation(line: 161, column: 45, scope: !3342)
!3342 = distinct !DILexicalBlock(scope: !3331, file: !3, line: 160, column: 7)
!3343 = !DILocation(line: 161, column: 58, scope: !3342)
!3344 = !DILocation(line: 161, column: 26, scope: !3342)
!3345 = !DILocation(line: 161, column: 39, scope: !3342)
!3346 = !DILocation(line: 161, column: 7, scope: !3342)
!3347 = !DILocation(line: 161, column: 20, scope: !3342)
!3348 = !DILocation(line: 163, column: 18, scope: !3260)
!3349 = !DILocation(line: 163, column: 6, scope: !3260)
!3350 = !DILocation(line: 163, column: 16, scope: !3260)
!3351 = !DILocation(line: 164, column: 37, scope: !3260)
!3352 = !DILocation(line: 164, column: 35, scope: !3260)
!3353 = !DILocation(line: 164, column: 21, scope: !3260)
!3354 = !DILocation(line: 164, column: 6, scope: !3260)
!3355 = !DILocation(line: 164, column: 19, scope: !3260)
!3356 = !DILocation(line: 165, column: 34, scope: !3260)
!3357 = !DILocation(line: 165, column: 32, scope: !3260)
!3358 = !DILocation(line: 165, column: 15, scope: !3260)
!3359 = !DILocation(line: 166, column: 6, scope: !3360)
!3360 = distinct !DILexicalBlock(scope: !3260, file: !3, line: 166, column: 6)
!3361 = !DILocation(line: 166, column: 12, scope: !3360)
!3362 = !DILocation(line: 166, column: 6, scope: !3260)
!3363 = !DILocation(line: 167, column: 7, scope: !3360)
!3364 = !DILocation(line: 167, column: 20, scope: !3360)
!3365 = !DILocation(line: 167, column: 3, scope: !3360)
!3366 = !DILocation(line: 168, column: 6, scope: !3367)
!3367 = distinct !DILexicalBlock(scope: !3260, file: !3, line: 168, column: 6)
!3368 = !DILocation(line: 168, column: 12, scope: !3367)
!3369 = !DILocation(line: 168, column: 6, scope: !3260)
!3370 = !DILocation(line: 169, column: 7, scope: !3367)
!3371 = !DILocation(line: 169, column: 20, scope: !3367)
!3372 = !DILocation(line: 169, column: 3, scope: !3367)
!3373 = !DILocation(line: 170, column: 24, scope: !3260)
!3374 = !DILocation(line: 170, column: 30, scope: !3260)
!3375 = !DILocation(line: 170, column: 22, scope: !3260)
!3376 = !DILocation(line: 170, column: 21, scope: !3260)
!3377 = !DILocation(line: 170, column: 6, scope: !3260)
!3378 = !DILocation(line: 170, column: 19, scope: !3260)
!3379 = !DILocation(line: 172, column: 6, scope: !3380)
!3380 = distinct !DILexicalBlock(scope: !3260, file: !3, line: 172, column: 6)
!3381 = !DILocation(line: 172, column: 6, scope: !3260)
!3382 = !DILocalVariable(name: "allocatorIFC", scope: !3383, file: !3, line: 173, type: !3384)
!3383 = distinct !DILexicalBlock(scope: !3380, file: !3, line: 172, column: 16)
!3384 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCGAllocatorIFC", file: !8, line: 54, baseType: !3385)
!3385 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CCGAllocatorIFC", file: !8, line: 49, size: 256, elements: !3386)
!3386 = !{!3387, !3392, !3396, !3400}
!3387 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !3385, file: !8, line: 50, baseType: !3388, size: 64)
!3388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3389, size: 64)
!3389 = !DISubroutineType(types: !3390)
!3390 = !{!41, !3391, !27}
!3391 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCGAllocatorHDL", file: !8, line: 47, baseType: !41)
!3392 = !DIDerivedType(tag: DW_TAG_member, name: "realloc", scope: !3385, file: !8, line: 51, baseType: !3393, size: 64, offset: 64)
!3393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3394, size: 64)
!3394 = !DISubroutineType(types: !3395)
!3395 = !{!41, !3391, !41, !27, !27}
!3396 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !3385, file: !8, line: 52, baseType: !3397, size: 64, offset: 128)
!3397 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3398, size: 64)
!3398 = !DISubroutineType(types: !3399)
!3399 = !{null, !3391, !41}
!3400 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !3385, file: !8, line: 53, baseType: !3401, size: 64, offset: 192)
!3401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3402, size: 64)
!3402 = !DISubroutineType(types: !3403)
!3403 = !{null, !3391}
!3404 = !DILocation(line: 173, column: 19, scope: !3383)
!3405 = !DILocalVariable(name: "allocator", scope: !3383, file: !3, line: 174, type: !3391)
!3406 = !DILocation(line: 174, column: 19, scope: !3383)
!3407 = !DILocation(line: 174, column: 31, scope: !3383)
!3408 = !DILocation(line: 176, column: 16, scope: !3383)
!3409 = !DILocation(line: 176, column: 22, scope: !3383)
!3410 = !DILocation(line: 177, column: 16, scope: !3383)
!3411 = !DILocation(line: 177, column: 24, scope: !3383)
!3412 = !DILocation(line: 178, column: 16, scope: !3383)
!3413 = !DILocation(line: 178, column: 21, scope: !3383)
!3414 = !DILocation(line: 179, column: 16, scope: !3383)
!3415 = !DILocation(line: 179, column: 24, scope: !3383)
!3416 = !DILocation(line: 181, column: 32, scope: !3383)
!3417 = !DILocation(line: 181, column: 61, scope: !3383)
!3418 = !DILocation(line: 181, column: 11, scope: !3383)
!3419 = !DILocation(line: 181, column: 9, scope: !3383)
!3420 = !DILocation(line: 182, column: 2, scope: !3383)
!3421 = !DILocation(line: 184, column: 32, scope: !3422)
!3422 = distinct !DILexicalBlock(scope: !3380, file: !3, line: 183, column: 7)
!3423 = !DILocation(line: 184, column: 11, scope: !3422)
!3424 = !DILocation(line: 184, column: 9, scope: !3422)
!3425 = !DILocation(line: 187, column: 6, scope: !3426)
!3426 = distinct !DILexicalBlock(scope: !3260, file: !3, line: 187, column: 6)
!3427 = !DILocation(line: 187, column: 6, scope: !3260)
!3428 = !DILocation(line: 188, column: 30, scope: !3429)
!3429 = distinct !DILexicalBlock(scope: !3426, file: !3, line: 187, column: 16)
!3430 = !DILocation(line: 188, column: 3, scope: !3429)
!3431 = !DILocation(line: 189, column: 2, scope: !3429)
!3432 = !DILocation(line: 191, column: 6, scope: !3433)
!3433 = distinct !DILexicalBlock(scope: !3260, file: !3, line: 191, column: 6)
!3434 = !DILocation(line: 191, column: 12, scope: !3433)
!3435 = !DILocation(line: 191, column: 6, scope: !3260)
!3436 = !DILocation(line: 192, column: 16, scope: !3437)
!3437 = distinct !DILexicalBlock(scope: !3433, file: !3, line: 191, column: 30)
!3438 = !DILocation(line: 194, column: 27, scope: !3437)
!3439 = !DILocation(line: 194, column: 53, scope: !3437)
!3440 = !DILocation(line: 194, column: 51, scope: !3437)
!3441 = !DILocation(line: 194, column: 37, scope: !3437)
!3442 = !DILocation(line: 194, column: 3, scope: !3437)
!3443 = !DILocation(line: 195, column: 2, scope: !3437)
!3444 = !DILocation(line: 197, column: 6, scope: !3445)
!3445 = distinct !DILexicalBlock(scope: !3260, file: !3, line: 197, column: 6)
!3446 = !DILocation(line: 197, column: 12, scope: !3445)
!3447 = !DILocation(line: 197, column: 6, scope: !3260)
!3448 = !DILocation(line: 198, column: 35, scope: !3445)
!3449 = !DILocation(line: 198, column: 45, scope: !3445)
!3450 = !DILocation(line: 198, column: 3, scope: !3445)
!3451 = !DILocation(line: 200, column: 35, scope: !3445)
!3452 = !DILocation(line: 200, column: 3, scope: !3445)
!3453 = !DILocation(line: 202, column: 9, scope: !3260)
!3454 = !DILocation(line: 202, column: 2, scope: !3260)
!3455 = !DILocation(line: 203, column: 1, scope: !3260)
!3456 = !DILocalVariable(name: "ss", arg: 1, scope: !2, file: !3, line: 570, type: !6)
!3457 = !DILocation(line: 570, column: 50, scope: !2)
!3458 = !DILocalVariable(name: "dm", arg: 2, scope: !2, file: !3, line: 570, type: !11)
!3459 = !DILocation(line: 570, column: 67, scope: !2)
!3460 = !DILocalVariable(name: "vertexCos", arg: 3, scope: !2, file: !3, line: 571, type: !1301)
!3461 = !DILocation(line: 571, column: 46, scope: !2)
!3462 = !DILocalVariable(name: "useFlatSubdiv", arg: 4, scope: !2, file: !3, line: 571, type: !27)
!3463 = !DILocation(line: 571, column: 65, scope: !2)
!3464 = !DILocalVariable(name: "creaseFactor", scope: !2, file: !3, line: 573, type: !90)
!3465 = !DILocation(line: 573, column: 8, scope: !2)
!3466 = !DILocation(line: 573, column: 63, scope: !2)
!3467 = !DILocation(line: 573, column: 31, scope: !2)
!3468 = !DILocation(line: 573, column: 23, scope: !2)
!3469 = !DILocalVariable(name: "mvert", scope: !2, file: !3, line: 578, type: !2400)
!3470 = !DILocation(line: 578, column: 9, scope: !2)
!3471 = !DILocation(line: 578, column: 17, scope: !2)
!3472 = !DILocation(line: 578, column: 21, scope: !2)
!3473 = !DILocation(line: 578, column: 34, scope: !2)
!3474 = !DILocalVariable(name: "medge", scope: !2, file: !3, line: 579, type: !3475)
!3475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3476, size: 64)
!3476 = !DIDerivedType(tag: DW_TAG_typedef, name: "MEdge", file: !684, line: 52, baseType: !1883)
!3477 = !DILocation(line: 579, column: 9, scope: !2)
!3478 = !DILocation(line: 579, column: 17, scope: !2)
!3479 = !DILocation(line: 579, column: 21, scope: !2)
!3480 = !DILocation(line: 579, column: 34, scope: !2)
!3481 = !DILocalVariable(name: "mv", scope: !2, file: !3, line: 581, type: !2400)
!3482 = !DILocation(line: 581, column: 9, scope: !2)
!3483 = !DILocalVariable(name: "me", scope: !2, file: !3, line: 582, type: !3475)
!3484 = !DILocation(line: 582, column: 9, scope: !2)
!3485 = !DILocalVariable(name: "mloop", scope: !2, file: !3, line: 583, type: !3486)
!3486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3487, size: 64)
!3487 = !DIDerivedType(tag: DW_TAG_typedef, name: "MLoop", file: !684, line: 91, baseType: !1294)
!3488 = !DILocation(line: 583, column: 9, scope: !2)
!3489 = !DILocation(line: 583, column: 17, scope: !2)
!3490 = !DILocation(line: 583, column: 21, scope: !2)
!3491 = !DILocation(line: 583, column: 34, scope: !2)
!3492 = !DILocalVariable(name: "ml", scope: !2, file: !3, line: 583, type: !3486)
!3493 = !DILocation(line: 583, column: 40, scope: !2)
!3494 = !DILocalVariable(name: "mpoly", scope: !2, file: !3, line: 584, type: !2377)
!3495 = !DILocation(line: 584, column: 9, scope: !2)
!3496 = !DILocation(line: 584, column: 17, scope: !2)
!3497 = !DILocation(line: 584, column: 21, scope: !2)
!3498 = !DILocation(line: 584, column: 34, scope: !2)
!3499 = !DILocalVariable(name: "mp", scope: !2, file: !3, line: 584, type: !2377)
!3500 = !DILocation(line: 584, column: 40, scope: !2)
!3501 = !DILocalVariable(name: "totvert", scope: !2, file: !3, line: 586, type: !27)
!3502 = !DILocation(line: 586, column: 6, scope: !2)
!3503 = !DILocation(line: 586, column: 16, scope: !2)
!3504 = !DILocation(line: 586, column: 20, scope: !2)
!3505 = !DILocation(line: 586, column: 32, scope: !2)
!3506 = !DILocalVariable(name: "totedge", scope: !2, file: !3, line: 587, type: !27)
!3507 = !DILocation(line: 587, column: 6, scope: !2)
!3508 = !DILocation(line: 587, column: 16, scope: !2)
!3509 = !DILocation(line: 587, column: 20, scope: !2)
!3510 = !DILocation(line: 587, column: 32, scope: !2)
!3511 = !DILocalVariable(name: "i", scope: !2, file: !3, line: 590, type: !27)
!3512 = !DILocation(line: 590, column: 6, scope: !2)
!3513 = !DILocalVariable(name: "j", scope: !2, file: !3, line: 590, type: !27)
!3514 = !DILocation(line: 590, column: 9, scope: !2)
!3515 = !DILocalVariable(name: "index", scope: !2, file: !3, line: 591, type: !1314)
!3516 = !DILocation(line: 591, column: 7, scope: !2)
!3517 = !DILocation(line: 593, column: 26, scope: !2)
!3518 = !DILocation(line: 593, column: 2, scope: !2)
!3519 = !DILocation(line: 595, column: 7, scope: !2)
!3520 = !DILocation(line: 595, column: 5, scope: !2)
!3521 = !DILocation(line: 596, column: 17, scope: !2)
!3522 = !DILocation(line: 596, column: 21, scope: !2)
!3523 = !DILocation(line: 596, column: 38, scope: !2)
!3524 = !DILocation(line: 596, column: 10, scope: !2)
!3525 = !DILocation(line: 596, column: 8, scope: !2)
!3526 = !DILocation(line: 597, column: 9, scope: !3527)
!3527 = distinct !DILexicalBlock(scope: !2, file: !3, line: 597, column: 2)
!3528 = !DILocation(line: 597, column: 7, scope: !3527)
!3529 = !DILocation(line: 597, column: 14, scope: !3530)
!3530 = distinct !DILexicalBlock(scope: !3527, file: !3, line: 597, column: 2)
!3531 = !DILocation(line: 597, column: 18, scope: !3530)
!3532 = !DILocation(line: 597, column: 16, scope: !3530)
!3533 = !DILocation(line: 597, column: 2, scope: !3527)
!3534 = !DILocalVariable(name: "v", scope: !3535, file: !3, line: 598, type: !2613)
!3535 = distinct !DILexicalBlock(scope: !3530, file: !3, line: 597, column: 38)
!3536 = !DILocation(line: 598, column: 12, scope: !3535)
!3537 = !DILocation(line: 600, column: 7, scope: !3538)
!3538 = distinct !DILexicalBlock(scope: !3535, file: !3, line: 600, column: 7)
!3539 = !DILocation(line: 600, column: 7, scope: !3535)
!3540 = !DILocation(line: 601, column: 24, scope: !3541)
!3541 = distinct !DILexicalBlock(scope: !3538, file: !3, line: 600, column: 18)
!3542 = !DILocation(line: 601, column: 28, scope: !3541)
!3543 = !DILocation(line: 601, column: 51, scope: !3541)
!3544 = !DILocation(line: 601, column: 61, scope: !3541)
!3545 = !DILocation(line: 601, column: 4, scope: !3541)
!3546 = !DILocation(line: 602, column: 3, scope: !3541)
!3547 = !DILocation(line: 604, column: 24, scope: !3548)
!3548 = distinct !DILexicalBlock(scope: !3538, file: !3, line: 603, column: 8)
!3549 = !DILocation(line: 604, column: 28, scope: !3548)
!3550 = !DILocation(line: 604, column: 51, scope: !3548)
!3551 = !DILocation(line: 604, column: 55, scope: !3548)
!3552 = !DILocation(line: 604, column: 4, scope: !3548)
!3553 = !DILocation(line: 607, column: 52, scope: !3535)
!3554 = !DILocation(line: 607, column: 51, scope: !3535)
!3555 = !DILocation(line: 607, column: 67, scope: !3535)
!3556 = !DILocation(line: 607, column: 61, scope: !3535)
!3557 = !DILocation(line: 607, column: 72, scope: !3535)
!3558 = !DILocation(line: 607, column: 38, scope: !3535)
!3559 = !DILocation(line: 607, column: 42, scope: !3535)
!3560 = !DILocation(line: 607, column: 11, scope: !3535)
!3561 = !DILocation(line: 607, column: 4, scope: !3535)
!3562 = !DILocation(line: 607, column: 3, scope: !3535)
!3563 = !DILocation(line: 607, column: 49, scope: !3535)
!3564 = !DILocation(line: 608, column: 2, scope: !3535)
!3565 = !DILocation(line: 597, column: 28, scope: !3530)
!3566 = !DILocation(line: 597, column: 34, scope: !3530)
!3567 = !DILocation(line: 597, column: 2, scope: !3530)
!3568 = distinct !{!3568, !3533, !3569}
!3569 = !DILocation(line: 608, column: 2, scope: !3527)
!3570 = !DILocation(line: 610, column: 7, scope: !2)
!3571 = !DILocation(line: 610, column: 5, scope: !2)
!3572 = !DILocation(line: 611, column: 17, scope: !2)
!3573 = !DILocation(line: 611, column: 21, scope: !2)
!3574 = !DILocation(line: 611, column: 38, scope: !2)
!3575 = !DILocation(line: 611, column: 10, scope: !2)
!3576 = !DILocation(line: 611, column: 8, scope: !2)
!3577 = !DILocation(line: 612, column: 9, scope: !3578)
!3578 = distinct !DILexicalBlock(scope: !2, file: !3, line: 612, column: 2)
!3579 = !DILocation(line: 612, column: 7, scope: !3578)
!3580 = !DILocation(line: 612, column: 14, scope: !3581)
!3581 = distinct !DILexicalBlock(scope: !3578, file: !3, line: 612, column: 2)
!3582 = !DILocation(line: 612, column: 18, scope: !3581)
!3583 = !DILocation(line: 612, column: 16, scope: !3581)
!3584 = !DILocation(line: 612, column: 2, scope: !3578)
!3585 = !DILocalVariable(name: "e", scope: !3586, file: !3, line: 613, type: !2638)
!3586 = distinct !DILexicalBlock(scope: !3581, file: !3, line: 612, column: 38)
!3587 = !DILocation(line: 613, column: 12, scope: !3586)
!3588 = !DILocalVariable(name: "crease", scope: !3586, file: !3, line: 614, type: !90)
!3589 = !DILocation(line: 614, column: 9, scope: !3586)
!3590 = !DILocation(line: 616, column: 12, scope: !3586)
!3591 = !DILocation(line: 616, column: 28, scope: !3586)
!3592 = !DILocation(line: 617, column: 12, scope: !3586)
!3593 = !DILocation(line: 617, column: 16, scope: !3586)
!3594 = !DILocation(line: 617, column: 25, scope: !3586)
!3595 = !DILocation(line: 617, column: 23, scope: !3586)
!3596 = !DILocation(line: 617, column: 38, scope: !3586)
!3597 = !DILocation(line: 616, column: 10, scope: !3586)
!3598 = !DILocation(line: 619, column: 23, scope: !3586)
!3599 = !DILocation(line: 619, column: 27, scope: !3586)
!3600 = !DILocation(line: 619, column: 50, scope: !3586)
!3601 = !DILocation(line: 620, column: 23, scope: !3586)
!3602 = !DILocation(line: 620, column: 52, scope: !3586)
!3603 = !DILocation(line: 619, column: 3, scope: !3586)
!3604 = !DILocation(line: 622, column: 52, scope: !3586)
!3605 = !DILocation(line: 622, column: 51, scope: !3586)
!3606 = !DILocation(line: 622, column: 67, scope: !3586)
!3607 = !DILocation(line: 622, column: 61, scope: !3586)
!3608 = !DILocation(line: 622, column: 72, scope: !3586)
!3609 = !DILocation(line: 622, column: 38, scope: !3586)
!3610 = !DILocation(line: 622, column: 42, scope: !3586)
!3611 = !DILocation(line: 622, column: 11, scope: !3586)
!3612 = !DILocation(line: 622, column: 4, scope: !3586)
!3613 = !DILocation(line: 622, column: 3, scope: !3586)
!3614 = !DILocation(line: 622, column: 49, scope: !3586)
!3615 = !DILocation(line: 623, column: 2, scope: !3586)
!3616 = !DILocation(line: 612, column: 28, scope: !3581)
!3617 = !DILocation(line: 612, column: 34, scope: !3581)
!3618 = !DILocation(line: 612, column: 2, scope: !3581)
!3619 = distinct !{!3619, !3584, !3620}
!3620 = !DILocation(line: 623, column: 2, scope: !3578)
!3621 = !DILocation(line: 625, column: 7, scope: !2)
!3622 = !DILocation(line: 625, column: 5, scope: !2)
!3623 = !DILocation(line: 626, column: 17, scope: !2)
!3624 = !DILocation(line: 626, column: 21, scope: !2)
!3625 = !DILocation(line: 626, column: 38, scope: !2)
!3626 = !DILocation(line: 626, column: 10, scope: !2)
!3627 = !DILocation(line: 626, column: 8, scope: !2)
!3628 = !DILocation(line: 627, column: 9, scope: !3629)
!3629 = distinct !DILexicalBlock(scope: !2, file: !3, line: 627, column: 2)
!3630 = !DILocation(line: 627, column: 7, scope: !3629)
!3631 = !DILocation(line: 627, column: 14, scope: !3632)
!3632 = distinct !DILexicalBlock(scope: !3629, file: !3, line: 627, column: 2)
!3633 = !DILocation(line: 627, column: 18, scope: !3632)
!3634 = !DILocation(line: 627, column: 22, scope: !3632)
!3635 = !DILocation(line: 627, column: 16, scope: !3632)
!3636 = !DILocation(line: 627, column: 2, scope: !3629)
!3637 = !DILocalVariable(name: "f", scope: !3638, file: !3, line: 628, type: !2461)
!3638 = distinct !DILexicalBlock(scope: !3632, file: !3, line: 627, column: 46)
!3639 = !DILocation(line: 628, column: 12, scope: !3638)
!3640 = !DILocation(line: 631, column: 21, scope: !3638)
!3641 = !DILocation(line: 631, column: 25, scope: !3638)
!3642 = !DILocation(line: 631, column: 3, scope: !3638)
!3643 = !DILocalVariable(name: "__vla_expr0", scope: !3638, type: !1258, flags: DIFlagArtificial)
!3644 = !DILocation(line: 0, scope: !3638)
!3645 = !DILocalVariable(name: "fVerts", scope: !3638, file: !3, line: 631, type: !3646)
!3646 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3647, elements: !3648)
!3647 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCGVertHDL", file: !8, line: 29, baseType: !41)
!3648 = !{!3649}
!3649 = !DISubrange(count: !3643)
!3650 = !DILocation(line: 631, column: 14, scope: !3638)
!3651 = !DILocation(line: 637, column: 8, scope: !3638)
!3652 = !DILocation(line: 637, column: 16, scope: !3638)
!3653 = !DILocation(line: 637, column: 20, scope: !3638)
!3654 = !DILocation(line: 637, column: 14, scope: !3638)
!3655 = !DILocation(line: 637, column: 6, scope: !3638)
!3656 = !DILocation(line: 638, column: 10, scope: !3657)
!3657 = distinct !DILexicalBlock(scope: !3638, file: !3, line: 638, column: 3)
!3658 = !DILocation(line: 638, column: 8, scope: !3657)
!3659 = !DILocation(line: 638, column: 15, scope: !3660)
!3660 = distinct !DILexicalBlock(scope: !3657, file: !3, line: 638, column: 3)
!3661 = !DILocation(line: 638, column: 19, scope: !3660)
!3662 = !DILocation(line: 638, column: 23, scope: !3660)
!3663 = !DILocation(line: 638, column: 17, scope: !3660)
!3664 = !DILocation(line: 638, column: 3, scope: !3657)
!3665 = !DILocation(line: 639, column: 16, scope: !3666)
!3666 = distinct !DILexicalBlock(scope: !3660, file: !3, line: 638, column: 43)
!3667 = !DILocation(line: 639, column: 11, scope: !3666)
!3668 = !DILocation(line: 639, column: 4, scope: !3666)
!3669 = !DILocation(line: 639, column: 14, scope: !3666)
!3670 = !DILocation(line: 640, column: 3, scope: !3666)
!3671 = !DILocation(line: 638, column: 33, scope: !3660)
!3672 = !DILocation(line: 638, column: 39, scope: !3660)
!3673 = !DILocation(line: 638, column: 3, scope: !3660)
!3674 = distinct !{!3674, !3664, !3675}
!3675 = !DILocation(line: 640, column: 3, scope: !3657)
!3676 = !DILocation(line: 646, column: 27, scope: !3677)
!3677 = distinct !DILexicalBlock(scope: !3638, file: !3, line: 646, column: 7)
!3678 = !DILocation(line: 646, column: 31, scope: !3677)
!3679 = !DILocation(line: 646, column: 54, scope: !3677)
!3680 = !DILocation(line: 646, column: 58, scope: !3677)
!3681 = !DILocation(line: 646, column: 7, scope: !3677)
!3682 = !DILocation(line: 647, column: 39, scope: !3677)
!3683 = !DILocation(line: 646, column: 7, scope: !3638)
!3684 = !DILocation(line: 651, column: 9, scope: !3685)
!3685 = distinct !DILexicalBlock(scope: !3686, file: !3, line: 651, column: 8)
!3686 = distinct !DILexicalBlock(scope: !3677, file: !3, line: 648, column: 3)
!3687 = !DILocation(line: 651, column: 8, scope: !3686)
!3688 = !DILocation(line: 655, column: 19, scope: !3689)
!3689 = distinct !DILexicalBlock(scope: !3685, file: !3, line: 651, column: 24)
!3690 = !DILocation(line: 656, column: 4, scope: !3689)
!3691 = !DILocation(line: 658, column: 4, scope: !3686)
!3692 = !DILocation(line: 661, column: 52, scope: !3638)
!3693 = !DILocation(line: 661, column: 51, scope: !3638)
!3694 = !DILocation(line: 661, column: 67, scope: !3638)
!3695 = !DILocation(line: 661, column: 61, scope: !3638)
!3696 = !DILocation(line: 661, column: 72, scope: !3638)
!3697 = !DILocation(line: 661, column: 38, scope: !3638)
!3698 = !DILocation(line: 661, column: 42, scope: !3638)
!3699 = !DILocation(line: 661, column: 11, scope: !3638)
!3700 = !DILocation(line: 661, column: 4, scope: !3638)
!3701 = !DILocation(line: 661, column: 3, scope: !3638)
!3702 = !DILocation(line: 661, column: 49, scope: !3638)
!3703 = !DILocation(line: 662, column: 2, scope: !3632)
!3704 = !DILocation(line: 662, column: 2, scope: !3638)
!3705 = !DILocation(line: 627, column: 36, scope: !3632)
!3706 = !DILocation(line: 627, column: 42, scope: !3632)
!3707 = !DILocation(line: 627, column: 2, scope: !3632)
!3708 = distinct !{!3708, !3636, !3709}
!3709 = !DILocation(line: 662, column: 2, scope: !3629)
!3710 = !DILocation(line: 664, column: 25, scope: !2)
!3711 = !DILocation(line: 664, column: 2, scope: !2)
!3712 = !DILocation(line: 669, column: 1, scope: !2)
!3713 = distinct !DISubprogram(name: "getCCGDerivedMesh", scope: !3, file: !3, line: 3431, type: !3714, scopeLine: 3435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!3714 = !DISubroutineType(types: !3715)
!3715 = !{!2295, !6, !27, !27, !11}
!3716 = !DILocalVariable(name: "ss", arg: 1, scope: !3713, file: !3, line: 3431, type: !6)
!3717 = !DILocation(line: 3431, column: 54, scope: !3713)
!3718 = !DILocalVariable(name: "drawInteriorEdges", arg: 2, scope: !3713, file: !3, line: 3432, type: !27)
!3719 = !DILocation(line: 3432, column: 46, scope: !3713)
!3720 = !DILocalVariable(name: "useSubsurfUv", arg: 3, scope: !3713, file: !3, line: 3433, type: !27)
!3721 = !DILocation(line: 3433, column: 46, scope: !3713)
!3722 = !DILocalVariable(name: "dm", arg: 4, scope: !3713, file: !3, line: 3434, type: !11)
!3723 = !DILocation(line: 3434, column: 55, scope: !3713)
!3724 = !DILocalVariable(name: "ccgdm", scope: !3713, file: !3, line: 3436, type: !2295)
!3725 = !DILocation(line: 3436, column: 18, scope: !3713)
!3726 = !DILocation(line: 3436, column: 26, scope: !3713)
!3727 = !DILocalVariable(name: "vi", scope: !3713, file: !3, line: 3437, type: !3728)
!3728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3729, size: 64)
!3729 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCGVertIterator", file: !8, line: 166, baseType: !3730)
!3730 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGVertIterator", file: !8, line: 166, flags: DIFlagFwdDecl)
!3731 = !DILocation(line: 3437, column: 19, scope: !3713)
!3732 = !DILocalVariable(name: "ei", scope: !3713, file: !3, line: 3438, type: !3733)
!3733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3734, size: 64)
!3734 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCGEdgeIterator", file: !8, line: 167, baseType: !3735)
!3735 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGEdgeIterator", file: !8, line: 167, flags: DIFlagFwdDecl)
!3736 = !DILocation(line: 3438, column: 19, scope: !3713)
!3737 = !DILocalVariable(name: "fi", scope: !3713, file: !3, line: 3439, type: !3738)
!3738 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3739, size: 64)
!3739 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCGFaceIterator", file: !8, line: 168, baseType: !3740)
!3740 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGFaceIterator", file: !8, line: 168, flags: DIFlagFwdDecl)
!3741 = !DILocation(line: 3439, column: 19, scope: !3713)
!3742 = !DILocalVariable(name: "index", scope: !3713, file: !3, line: 3440, type: !27)
!3743 = !DILocation(line: 3440, column: 6, scope: !3713)
!3744 = !DILocalVariable(name: "totvert", scope: !3713, file: !3, line: 3440, type: !27)
!3745 = !DILocation(line: 3440, column: 13, scope: !3713)
!3746 = !DILocalVariable(name: "totedge", scope: !3713, file: !3, line: 3440, type: !27)
!3747 = !DILocation(line: 3440, column: 22, scope: !3713)
!3748 = !DILocalVariable(name: "totface", scope: !3713, file: !3, line: 3440, type: !27)
!3749 = !DILocation(line: 3440, column: 31, scope: !3713)
!3750 = !DILocalVariable(name: "i", scope: !3713, file: !3, line: 3441, type: !27)
!3751 = !DILocation(line: 3441, column: 6, scope: !3713)
!3752 = !DILocalVariable(name: "vertNum", scope: !3713, file: !3, line: 3442, type: !27)
!3753 = !DILocation(line: 3442, column: 6, scope: !3713)
!3754 = !DILocalVariable(name: "edgeNum", scope: !3713, file: !3, line: 3442, type: !27)
!3755 = !DILocation(line: 3442, column: 15, scope: !3713)
!3756 = !DILocalVariable(name: "faceNum", scope: !3713, file: !3, line: 3442, type: !27)
!3757 = !DILocation(line: 3442, column: 24, scope: !3713)
!3758 = !DILocalVariable(name: "vertOrigIndex", scope: !3713, file: !3, line: 3443, type: !1314)
!3759 = !DILocation(line: 3443, column: 7, scope: !3713)
!3760 = !DILocalVariable(name: "faceOrigIndex", scope: !3713, file: !3, line: 3443, type: !1314)
!3761 = !DILocation(line: 3443, column: 23, scope: !3713)
!3762 = !DILocalVariable(name: "polyOrigIndex", scope: !3713, file: !3, line: 3443, type: !1314)
!3763 = !DILocation(line: 3443, column: 39, scope: !3713)
!3764 = !DILocalVariable(name: "base_polyOrigIndex", scope: !3713, file: !3, line: 3443, type: !1314)
!3765 = !DILocation(line: 3443, column: 55, scope: !3713)
!3766 = !DILocalVariable(name: "edgeOrigIndex", scope: !3713, file: !3, line: 3443, type: !1314)
!3767 = !DILocation(line: 3443, column: 76, scope: !3713)
!3768 = !DILocalVariable(name: "edgeFlags", scope: !3713, file: !3, line: 3444, type: !2333)
!3769 = !DILocation(line: 3444, column: 9, scope: !3713)
!3770 = !DILocalVariable(name: "faceFlags", scope: !3713, file: !3, line: 3445, type: !2024)
!3771 = !DILocation(line: 3445, column: 13, scope: !3713)
!3772 = !DILocalVariable(name: "polyidx", scope: !3713, file: !3, line: 3446, type: !1314)
!3773 = !DILocation(line: 3446, column: 7, scope: !3713)
!3774 = !DILocalVariable(name: "loopindex", scope: !3713, file: !3, line: 3452, type: !27)
!3775 = !DILocation(line: 3452, column: 6, scope: !3713)
!3776 = !DILocalVariable(name: "loopindex2", scope: !3713, file: !3, line: 3452, type: !27)
!3777 = !DILocation(line: 3452, column: 17, scope: !3713)
!3778 = !DILocalVariable(name: "edgeSize", scope: !3713, file: !3, line: 3453, type: !27)
!3779 = !DILocation(line: 3453, column: 6, scope: !3713)
!3780 = !DILocalVariable(name: "gridSize", scope: !3713, file: !3, line: 3454, type: !27)
!3781 = !DILocation(line: 3454, column: 6, scope: !3713)
!3782 = !DILocalVariable(name: "gridFaces", scope: !3713, file: !3, line: 3455, type: !27)
!3783 = !DILocation(line: 3455, column: 6, scope: !3713)
!3784 = !DILocalVariable(name: "gridCuts", scope: !3713, file: !3, line: 3455, type: !27)
!3785 = !DILocation(line: 3455, column: 17, scope: !3713)
!3786 = !DILocalVariable(name: "gridSideEdges", scope: !3713, file: !3, line: 3457, type: !27)
!3787 = !DILocation(line: 3457, column: 6, scope: !3713)
!3788 = !DILocalVariable(name: "numTex", scope: !3713, file: !3, line: 3458, type: !27)
!3789 = !DILocation(line: 3458, column: 6, scope: !3713)
!3790 = !DILocalVariable(name: "numCol", scope: !3713, file: !3, line: 3458, type: !27)
!3791 = !DILocation(line: 3458, column: 14, scope: !3713)
!3792 = !DILocalVariable(name: "hasPCol", scope: !3713, file: !3, line: 3459, type: !27)
!3793 = !DILocation(line: 3459, column: 6, scope: !3713)
!3794 = !DILocalVariable(name: "hasOrigSpace", scope: !3713, file: !3, line: 3459, type: !27)
!3795 = !DILocation(line: 3459, column: 15, scope: !3713)
!3796 = !DILocalVariable(name: "gridInternalEdges", scope: !3713, file: !3, line: 3460, type: !27)
!3797 = !DILocation(line: 3460, column: 6, scope: !3713)
!3798 = !DILocalVariable(name: "wtable", scope: !3713, file: !3, line: 3461, type: !3799)
!3799 = !DIDerivedType(tag: DW_TAG_typedef, name: "WeightTable", file: !3, line: 500, baseType: !3800)
!3800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "WeightTable", file: !3, line: 497, size: 128, elements: !3801)
!3801 = !{!3802, !3815}
!3802 = !DIDerivedType(tag: DW_TAG_member, name: "weight_table", scope: !3800, file: !3, line: 498, baseType: !3803, size: 64)
!3803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3804, size: 64)
!3804 = !DIDerivedType(tag: DW_TAG_typedef, name: "FaceVertWeightEntry", file: !3, line: 495, baseType: !3805)
!3805 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FaceVertWeightEntry", file: !3, line: 491, size: 192, elements: !3806)
!3806 = !{!3807, !3813, !3814}
!3807 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !3805, file: !3, line: 492, baseType: !3808, size: 64)
!3808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3809, size: 64)
!3809 = !DIDerivedType(tag: DW_TAG_typedef, name: "FaceVertWeight", file: !13, line: 628, baseType: !3810)
!3810 = !DICompositeType(tag: DW_TAG_array_type, baseType: !90, size: 80000, elements: !3811)
!3811 = !{!3812, !3812}
!3812 = !DISubrange(count: 50)
!3813 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !3805, file: !3, line: 493, baseType: !1306, size: 64, offset: 64)
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !3805, file: !3, line: 494, baseType: !27, size: 32, offset: 128)
!3815 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !3800, file: !3, line: 499, baseType: !27, size: 32, offset: 64)
!3816 = !DILocation(line: 3461, column: 14, scope: !3713)
!3817 = !DILocalVariable(name: "medge", scope: !3713, file: !3, line: 3463, type: !3475)
!3818 = !DILocation(line: 3463, column: 9, scope: !3713)
!3819 = !DILocalVariable(name: "mpoly", scope: !3713, file: !3, line: 3465, type: !2377)
!3820 = !DILocation(line: 3465, column: 9, scope: !3713)
!3821 = !DILocalVariable(name: "has_edge_cd", scope: !3713, file: !3, line: 3466, type: !673)
!3822 = !DILocation(line: 3466, column: 7, scope: !3713)
!3823 = !DILocation(line: 3468, column: 20, scope: !3713)
!3824 = !DILocation(line: 3468, column: 27, scope: !3713)
!3825 = !DILocation(line: 3468, column: 31, scope: !3713)
!3826 = !DILocation(line: 3469, column: 47, scope: !3713)
!3827 = !DILocation(line: 3469, column: 19, scope: !3713)
!3828 = !DILocation(line: 3470, column: 47, scope: !3713)
!3829 = !DILocation(line: 3470, column: 19, scope: !3713)
!3830 = !DILocation(line: 3471, column: 47, scope: !3713)
!3831 = !DILocation(line: 3471, column: 19, scope: !3713)
!3832 = !DILocation(line: 3472, column: 47, scope: !3713)
!3833 = !DILocation(line: 3472, column: 19, scope: !3713)
!3834 = !DILocation(line: 3472, column: 51, scope: !3713)
!3835 = !DILocation(line: 3473, column: 47, scope: !3713)
!3836 = !DILocation(line: 3473, column: 19, scope: !3713)
!3837 = !DILocation(line: 3468, column: 2, scope: !3713)
!3838 = !DILocation(line: 3475, column: 32, scope: !3713)
!3839 = !DILocation(line: 3475, column: 39, scope: !3713)
!3840 = !DILocation(line: 3475, column: 42, scope: !3713)
!3841 = !DILocation(line: 3476, column: 31, scope: !3713)
!3842 = !DILocation(line: 3476, column: 38, scope: !3713)
!3843 = !DILocation(line: 3476, column: 41, scope: !3713)
!3844 = !DILocation(line: 3475, column: 2, scope: !3713)
!3845 = !DILocation(line: 3478, column: 40, scope: !3713)
!3846 = !DILocation(line: 3478, column: 47, scope: !3713)
!3847 = !DILocation(line: 3478, column: 50, scope: !3713)
!3848 = !DILocation(line: 3478, column: 11, scope: !3713)
!3849 = !DILocation(line: 3478, column: 9, scope: !3713)
!3850 = !DILocation(line: 3479, column: 40, scope: !3713)
!3851 = !DILocation(line: 3479, column: 47, scope: !3713)
!3852 = !DILocation(line: 3479, column: 50, scope: !3713)
!3853 = !DILocation(line: 3479, column: 11, scope: !3713)
!3854 = !DILocation(line: 3479, column: 9, scope: !3713)
!3855 = !DILocation(line: 3480, column: 34, scope: !3713)
!3856 = !DILocation(line: 3480, column: 41, scope: !3713)
!3857 = !DILocation(line: 3480, column: 44, scope: !3713)
!3858 = !DILocation(line: 3480, column: 12, scope: !3713)
!3859 = !DILocation(line: 3480, column: 10, scope: !3713)
!3860 = !DILocation(line: 3481, column: 39, scope: !3713)
!3861 = !DILocation(line: 3481, column: 46, scope: !3713)
!3862 = !DILocation(line: 3481, column: 49, scope: !3713)
!3863 = !DILocation(line: 3481, column: 17, scope: !3713)
!3864 = !DILocation(line: 3481, column: 15, scope: !3713)
!3865 = !DILocation(line: 3484, column: 7, scope: !3866)
!3866 = distinct !DILexicalBlock(scope: !3713, file: !3, line: 3484, column: 6)
!3867 = !DILocation(line: 3484, column: 14, scope: !3866)
!3868 = !DILocation(line: 3484, column: 46, scope: !3866)
!3869 = !DILocation(line: 3484, column: 53, scope: !3866)
!3870 = !DILocation(line: 3484, column: 56, scope: !3866)
!3871 = !DILocation(line: 3484, column: 17, scope: !3866)
!3872 = !DILocation(line: 3484, column: 80, scope: !3866)
!3873 = !DILocation(line: 3484, column: 77, scope: !3866)
!3874 = !DILocation(line: 3484, column: 89, scope: !3866)
!3875 = !DILocation(line: 3485, column: 7, scope: !3866)
!3876 = !DILocation(line: 3485, column: 14, scope: !3866)
!3877 = !DILocation(line: 3485, column: 46, scope: !3866)
!3878 = !DILocation(line: 3485, column: 53, scope: !3866)
!3879 = !DILocation(line: 3485, column: 56, scope: !3866)
!3880 = !DILocation(line: 3485, column: 17, scope: !3866)
!3881 = !DILocation(line: 3485, column: 78, scope: !3866)
!3882 = !DILocation(line: 3485, column: 75, scope: !3866)
!3883 = !DILocation(line: 3485, column: 89, scope: !3866)
!3884 = !DILocation(line: 3486, column: 7, scope: !3866)
!3885 = !DILocation(line: 3486, column: 15, scope: !3866)
!3886 = !DILocation(line: 3486, column: 41, scope: !3866)
!3887 = !DILocation(line: 3486, column: 48, scope: !3866)
!3888 = !DILocation(line: 3486, column: 51, scope: !3866)
!3889 = !DILocation(line: 3486, column: 19, scope: !3866)
!3890 = !DILocation(line: 3486, column: 90, scope: !3866)
!3891 = !DILocation(line: 3487, column: 7, scope: !3866)
!3892 = !DILocation(line: 3487, column: 20, scope: !3866)
!3893 = !DILocation(line: 3487, column: 46, scope: !3866)
!3894 = !DILocation(line: 3487, column: 53, scope: !3866)
!3895 = !DILocation(line: 3487, column: 56, scope: !3866)
!3896 = !DILocation(line: 3487, column: 24, scope: !3866)
!3897 = !DILocation(line: 3484, column: 6, scope: !3713)
!3898 = !DILocation(line: 3489, column: 30, scope: !3899)
!3899 = distinct !DILexicalBlock(scope: !3866, file: !3, line: 3488, column: 2)
!3900 = !DILocation(line: 3489, column: 37, scope: !3899)
!3901 = !DILocation(line: 3489, column: 40, scope: !3899)
!3902 = !DILocation(line: 3490, column: 30, scope: !3899)
!3903 = !DILocation(line: 3490, column: 37, scope: !3899)
!3904 = !DILocation(line: 3490, column: 40, scope: !3899)
!3905 = !DILocation(line: 3491, column: 30, scope: !3899)
!3906 = !DILocation(line: 3491, column: 37, scope: !3899)
!3907 = !DILocation(line: 3491, column: 40, scope: !3899)
!3908 = !DILocation(line: 3492, column: 57, scope: !3899)
!3909 = !DILocation(line: 3492, column: 29, scope: !3899)
!3910 = !DILocation(line: 3489, column: 3, scope: !3899)
!3911 = !DILocation(line: 3493, column: 2, scope: !3899)
!3912 = !DILocation(line: 3496, column: 34, scope: !3713)
!3913 = !DILocation(line: 3496, column: 41, scope: !3713)
!3914 = !DILocation(line: 3496, column: 44, scope: !3713)
!3915 = !DILocation(line: 3497, column: 67, scope: !3713)
!3916 = !DILocation(line: 3497, column: 39, scope: !3713)
!3917 = !DILocation(line: 3496, column: 12, scope: !3713)
!3918 = !DILocation(line: 3496, column: 10, scope: !3713)
!3919 = !DILocation(line: 3499, column: 2, scope: !3713)
!3920 = !DILocation(line: 3499, column: 9, scope: !3713)
!3921 = !DILocation(line: 3499, column: 12, scope: !3713)
!3922 = !DILocation(line: 3499, column: 22, scope: !3713)
!3923 = !DILocation(line: 3500, column: 2, scope: !3713)
!3924 = !DILocation(line: 3500, column: 9, scope: !3713)
!3925 = !DILocation(line: 3500, column: 12, scope: !3713)
!3926 = !DILocation(line: 3500, column: 24, scope: !3713)
!3927 = !DILocation(line: 3501, column: 2, scope: !3713)
!3928 = !DILocation(line: 3501, column: 9, scope: !3713)
!3929 = !DILocation(line: 3501, column: 12, scope: !3713)
!3930 = !DILocation(line: 3501, column: 24, scope: !3713)
!3931 = !DILocation(line: 3502, column: 2, scope: !3713)
!3932 = !DILocation(line: 3502, column: 9, scope: !3713)
!3933 = !DILocation(line: 3502, column: 12, scope: !3713)
!3934 = !DILocation(line: 3502, column: 28, scope: !3713)
!3935 = !DILocation(line: 3503, column: 2, scope: !3713)
!3936 = !DILocation(line: 3503, column: 9, scope: !3713)
!3937 = !DILocation(line: 3503, column: 12, scope: !3713)
!3938 = !DILocation(line: 3503, column: 24, scope: !3713)
!3939 = !DILocation(line: 3505, column: 2, scope: !3713)
!3940 = !DILocation(line: 3505, column: 9, scope: !3713)
!3941 = !DILocation(line: 3505, column: 12, scope: !3713)
!3942 = !DILocation(line: 3505, column: 24, scope: !3713)
!3943 = !DILocation(line: 3507, column: 2, scope: !3713)
!3944 = !DILocation(line: 3507, column: 9, scope: !3713)
!3945 = !DILocation(line: 3507, column: 12, scope: !3713)
!3946 = !DILocation(line: 3507, column: 20, scope: !3713)
!3947 = !DILocation(line: 3508, column: 2, scope: !3713)
!3948 = !DILocation(line: 3508, column: 9, scope: !3713)
!3949 = !DILocation(line: 3508, column: 12, scope: !3713)
!3950 = !DILocation(line: 3508, column: 20, scope: !3713)
!3951 = !DILocation(line: 3509, column: 2, scope: !3713)
!3952 = !DILocation(line: 3509, column: 9, scope: !3713)
!3953 = !DILocation(line: 3509, column: 12, scope: !3713)
!3954 = !DILocation(line: 3509, column: 24, scope: !3713)
!3955 = !DILocation(line: 3511, column: 2, scope: !3713)
!3956 = !DILocation(line: 3511, column: 9, scope: !3713)
!3957 = !DILocation(line: 3511, column: 12, scope: !3713)
!3958 = !DILocation(line: 3511, column: 22, scope: !3713)
!3959 = !DILocation(line: 3512, column: 2, scope: !3713)
!3960 = !DILocation(line: 3512, column: 9, scope: !3713)
!3961 = !DILocation(line: 3512, column: 12, scope: !3713)
!3962 = !DILocation(line: 3512, column: 22, scope: !3713)
!3963 = !DILocation(line: 3514, column: 2, scope: !3713)
!3964 = !DILocation(line: 3514, column: 9, scope: !3713)
!3965 = !DILocation(line: 3514, column: 12, scope: !3713)
!3966 = !DILocation(line: 3514, column: 26, scope: !3713)
!3967 = !DILocation(line: 3515, column: 2, scope: !3713)
!3968 = !DILocation(line: 3515, column: 9, scope: !3713)
!3969 = !DILocation(line: 3515, column: 12, scope: !3713)
!3970 = !DILocation(line: 3515, column: 26, scope: !3713)
!3971 = !DILocation(line: 3516, column: 2, scope: !3713)
!3972 = !DILocation(line: 3516, column: 9, scope: !3713)
!3973 = !DILocation(line: 3516, column: 12, scope: !3713)
!3974 = !DILocation(line: 3516, column: 30, scope: !3713)
!3975 = !DILocation(line: 3517, column: 2, scope: !3713)
!3976 = !DILocation(line: 3517, column: 9, scope: !3713)
!3977 = !DILocation(line: 3517, column: 12, scope: !3713)
!3978 = !DILocation(line: 3517, column: 26, scope: !3713)
!3979 = !DILocation(line: 3518, column: 2, scope: !3713)
!3980 = !DILocation(line: 3518, column: 9, scope: !3713)
!3981 = !DILocation(line: 3518, column: 12, scope: !3713)
!3982 = !DILocation(line: 3518, column: 26, scope: !3713)
!3983 = !DILocation(line: 3520, column: 2, scope: !3713)
!3984 = !DILocation(line: 3520, column: 9, scope: !3713)
!3985 = !DILocation(line: 3520, column: 12, scope: !3713)
!3986 = !DILocation(line: 3520, column: 24, scope: !3713)
!3987 = !DILocation(line: 3521, column: 2, scope: !3713)
!3988 = !DILocation(line: 3521, column: 9, scope: !3713)
!3989 = !DILocation(line: 3521, column: 12, scope: !3713)
!3990 = !DILocation(line: 3521, column: 24, scope: !3713)
!3991 = !DILocation(line: 3522, column: 2, scope: !3713)
!3992 = !DILocation(line: 3522, column: 9, scope: !3713)
!3993 = !DILocation(line: 3522, column: 12, scope: !3713)
!3994 = !DILocation(line: 3522, column: 28, scope: !3713)
!3995 = !DILocation(line: 3523, column: 2, scope: !3713)
!3996 = !DILocation(line: 3523, column: 9, scope: !3713)
!3997 = !DILocation(line: 3523, column: 12, scope: !3713)
!3998 = !DILocation(line: 3523, column: 24, scope: !3713)
!3999 = !DILocation(line: 3524, column: 2, scope: !3713)
!4000 = !DILocation(line: 3524, column: 9, scope: !3713)
!4001 = !DILocation(line: 3524, column: 12, scope: !3713)
!4002 = !DILocation(line: 3524, column: 29, scope: !3713)
!4003 = !DILocation(line: 3525, column: 2, scope: !3713)
!4004 = !DILocation(line: 3525, column: 9, scope: !3713)
!4005 = !DILocation(line: 3525, column: 12, scope: !3713)
!4006 = !DILocation(line: 3525, column: 29, scope: !3713)
!4007 = !DILocation(line: 3526, column: 2, scope: !3713)
!4008 = !DILocation(line: 3526, column: 9, scope: !3713)
!4009 = !DILocation(line: 3526, column: 12, scope: !3713)
!4010 = !DILocation(line: 3526, column: 33, scope: !3713)
!4011 = !DILocation(line: 3527, column: 2, scope: !3713)
!4012 = !DILocation(line: 3527, column: 9, scope: !3713)
!4013 = !DILocation(line: 3527, column: 12, scope: !3713)
!4014 = !DILocation(line: 3527, column: 29, scope: !3713)
!4015 = !DILocation(line: 3528, column: 2, scope: !3713)
!4016 = !DILocation(line: 3528, column: 9, scope: !3713)
!4017 = !DILocation(line: 3528, column: 12, scope: !3713)
!4018 = !DILocation(line: 3528, column: 24, scope: !3713)
!4019 = !DILocation(line: 3529, column: 2, scope: !3713)
!4020 = !DILocation(line: 3529, column: 9, scope: !3713)
!4021 = !DILocation(line: 3529, column: 12, scope: !3713)
!4022 = !DILocation(line: 3529, column: 24, scope: !3713)
!4023 = !DILocation(line: 3530, column: 2, scope: !3713)
!4024 = !DILocation(line: 3530, column: 9, scope: !3713)
!4025 = !DILocation(line: 3530, column: 12, scope: !3713)
!4026 = !DILocation(line: 3530, column: 24, scope: !3713)
!4027 = !DILocation(line: 3531, column: 2, scope: !3713)
!4028 = !DILocation(line: 3531, column: 9, scope: !3713)
!4029 = !DILocation(line: 3531, column: 12, scope: !3713)
!4030 = !DILocation(line: 3531, column: 29, scope: !3713)
!4031 = !DILocation(line: 3532, column: 2, scope: !3713)
!4032 = !DILocation(line: 3532, column: 9, scope: !3713)
!4033 = !DILocation(line: 3532, column: 12, scope: !3713)
!4034 = !DILocation(line: 3532, column: 26, scope: !3713)
!4035 = !DILocation(line: 3533, column: 2, scope: !3713)
!4036 = !DILocation(line: 3533, column: 9, scope: !3713)
!4037 = !DILocation(line: 3533, column: 12, scope: !3713)
!4038 = !DILocation(line: 3533, column: 23, scope: !3713)
!4039 = !DILocation(line: 3534, column: 2, scope: !3713)
!4040 = !DILocation(line: 3534, column: 9, scope: !3713)
!4041 = !DILocation(line: 3534, column: 12, scope: !3713)
!4042 = !DILocation(line: 3534, column: 28, scope: !3713)
!4043 = !DILocation(line: 3535, column: 2, scope: !3713)
!4044 = !DILocation(line: 3535, column: 9, scope: !3713)
!4045 = !DILocation(line: 3535, column: 12, scope: !3713)
!4046 = !DILocation(line: 3535, column: 26, scope: !3713)
!4047 = !DILocation(line: 3536, column: 2, scope: !3713)
!4048 = !DILocation(line: 3536, column: 9, scope: !3713)
!4049 = !DILocation(line: 3536, column: 12, scope: !3713)
!4050 = !DILocation(line: 3536, column: 23, scope: !3713)
!4051 = !DILocation(line: 3537, column: 2, scope: !3713)
!4052 = !DILocation(line: 3537, column: 9, scope: !3713)
!4053 = !DILocation(line: 3537, column: 12, scope: !3713)
!4054 = !DILocation(line: 3537, column: 20, scope: !3713)
!4055 = !DILocation(line: 3539, column: 2, scope: !3713)
!4056 = !DILocation(line: 3539, column: 9, scope: !3713)
!4057 = !DILocation(line: 3539, column: 12, scope: !3713)
!4058 = !DILocation(line: 3539, column: 24, scope: !3713)
!4059 = !DILocation(line: 3540, column: 2, scope: !3713)
!4060 = !DILocation(line: 3540, column: 9, scope: !3713)
!4061 = !DILocation(line: 3540, column: 12, scope: !3713)
!4062 = !DILocation(line: 3540, column: 28, scope: !3713)
!4063 = !DILocation(line: 3541, column: 2, scope: !3713)
!4064 = !DILocation(line: 3541, column: 9, scope: !3713)
!4065 = !DILocation(line: 3541, column: 12, scope: !3713)
!4066 = !DILocation(line: 3541, column: 31, scope: !3713)
!4067 = !DILocation(line: 3543, column: 2, scope: !3713)
!4068 = !DILocation(line: 3543, column: 9, scope: !3713)
!4069 = !DILocation(line: 3543, column: 12, scope: !3713)
!4070 = !DILocation(line: 3543, column: 23, scope: !3713)
!4071 = !DILocation(line: 3544, column: 2, scope: !3713)
!4072 = !DILocation(line: 3544, column: 9, scope: !3713)
!4073 = !DILocation(line: 3544, column: 12, scope: !3713)
!4074 = !DILocation(line: 3544, column: 30, scope: !3713)
!4075 = !DILocation(line: 3545, column: 2, scope: !3713)
!4076 = !DILocation(line: 3545, column: 9, scope: !3713)
!4077 = !DILocation(line: 3545, column: 12, scope: !3713)
!4078 = !DILocation(line: 3545, column: 30, scope: !3713)
!4079 = !DILocation(line: 3546, column: 2, scope: !3713)
!4080 = !DILocation(line: 3546, column: 9, scope: !3713)
!4081 = !DILocation(line: 3546, column: 12, scope: !3713)
!4082 = !DILocation(line: 3546, column: 30, scope: !3713)
!4083 = !DILocation(line: 3547, column: 2, scope: !3713)
!4084 = !DILocation(line: 3547, column: 9, scope: !3713)
!4085 = !DILocation(line: 3547, column: 12, scope: !3713)
!4086 = !DILocation(line: 3547, column: 36, scope: !3713)
!4087 = !DILocation(line: 3549, column: 2, scope: !3713)
!4088 = !DILocation(line: 3549, column: 9, scope: !3713)
!4089 = !DILocation(line: 3549, column: 12, scope: !3713)
!4090 = !DILocation(line: 3549, column: 22, scope: !3713)
!4091 = !DILocation(line: 3550, column: 2, scope: !3713)
!4092 = !DILocation(line: 3550, column: 9, scope: !3713)
!4093 = !DILocation(line: 3550, column: 12, scope: !3713)
!4094 = !DILocation(line: 3550, column: 22, scope: !3713)
!4095 = !DILocation(line: 3551, column: 2, scope: !3713)
!4096 = !DILocation(line: 3551, column: 9, scope: !3713)
!4097 = !DILocation(line: 3551, column: 12, scope: !3713)
!4098 = !DILocation(line: 3551, column: 27, scope: !3713)
!4099 = !DILocation(line: 3552, column: 2, scope: !3713)
!4100 = !DILocation(line: 3552, column: 9, scope: !3713)
!4101 = !DILocation(line: 3552, column: 12, scope: !3713)
!4102 = !DILocation(line: 3552, column: 27, scope: !3713)
!4103 = !DILocation(line: 3553, column: 2, scope: !3713)
!4104 = !DILocation(line: 3553, column: 9, scope: !3713)
!4105 = !DILocation(line: 3553, column: 12, scope: !3713)
!4106 = !DILocation(line: 3553, column: 25, scope: !3713)
!4107 = !DILocation(line: 3554, column: 2, scope: !3713)
!4108 = !DILocation(line: 3554, column: 9, scope: !3713)
!4109 = !DILocation(line: 3554, column: 12, scope: !3713)
!4110 = !DILocation(line: 3554, column: 26, scope: !3713)
!4111 = !DILocation(line: 3555, column: 2, scope: !3713)
!4112 = !DILocation(line: 3555, column: 9, scope: !3713)
!4113 = !DILocation(line: 3555, column: 12, scope: !3713)
!4114 = !DILocation(line: 3555, column: 28, scope: !3713)
!4115 = !DILocation(line: 3556, column: 2, scope: !3713)
!4116 = !DILocation(line: 3556, column: 9, scope: !3713)
!4117 = !DILocation(line: 3556, column: 12, scope: !3713)
!4118 = !DILocation(line: 3556, column: 31, scope: !3713)
!4119 = !DILocation(line: 3557, column: 2, scope: !3713)
!4120 = !DILocation(line: 3557, column: 9, scope: !3713)
!4121 = !DILocation(line: 3557, column: 12, scope: !3713)
!4122 = !DILocation(line: 3557, column: 32, scope: !3713)
!4123 = !DILocation(line: 3558, column: 2, scope: !3713)
!4124 = !DILocation(line: 3558, column: 9, scope: !3713)
!4125 = !DILocation(line: 3558, column: 12, scope: !3713)
!4126 = !DILocation(line: 3558, column: 31, scope: !3713)
!4127 = !DILocation(line: 3559, column: 2, scope: !3713)
!4128 = !DILocation(line: 3559, column: 9, scope: !3713)
!4129 = !DILocation(line: 3559, column: 12, scope: !3713)
!4130 = !DILocation(line: 3559, column: 24, scope: !3713)
!4131 = !DILocation(line: 3561, column: 2, scope: !3713)
!4132 = !DILocation(line: 3561, column: 9, scope: !3713)
!4133 = !DILocation(line: 3561, column: 12, scope: !3713)
!4134 = !DILocation(line: 3561, column: 34, scope: !3713)
!4135 = !DILocation(line: 3562, column: 2, scope: !3713)
!4136 = !DILocation(line: 3562, column: 9, scope: !3713)
!4137 = !DILocation(line: 3562, column: 12, scope: !3713)
!4138 = !DILocation(line: 3562, column: 28, scope: !3713)
!4139 = !DILocation(line: 3564, column: 2, scope: !3713)
!4140 = !DILocation(line: 3564, column: 9, scope: !3713)
!4141 = !DILocation(line: 3564, column: 12, scope: !3713)
!4142 = !DILocation(line: 3564, column: 20, scope: !3713)
!4143 = !DILocation(line: 3566, column: 14, scope: !3713)
!4144 = !DILocation(line: 3566, column: 2, scope: !3713)
!4145 = !DILocation(line: 3566, column: 9, scope: !3713)
!4146 = !DILocation(line: 3566, column: 12, scope: !3713)
!4147 = !DILocation(line: 3567, column: 29, scope: !3713)
!4148 = !DILocation(line: 3567, column: 2, scope: !3713)
!4149 = !DILocation(line: 3567, column: 9, scope: !3713)
!4150 = !DILocation(line: 3567, column: 27, scope: !3713)
!4151 = !DILocation(line: 3568, column: 24, scope: !3713)
!4152 = !DILocation(line: 3568, column: 2, scope: !3713)
!4153 = !DILocation(line: 3568, column: 9, scope: !3713)
!4154 = !DILocation(line: 3568, column: 22, scope: !3713)
!4155 = !DILocation(line: 3570, column: 35, scope: !3713)
!4156 = !DILocation(line: 3570, column: 12, scope: !3713)
!4157 = !DILocation(line: 3570, column: 10, scope: !3713)
!4158 = !DILocation(line: 3571, column: 19, scope: !3713)
!4159 = !DILocation(line: 3571, column: 31, scope: !3713)
!4160 = !DILocation(line: 3571, column: 39, scope: !3713)
!4161 = !DILocation(line: 3571, column: 2, scope: !3713)
!4162 = !DILocation(line: 3571, column: 9, scope: !3713)
!4163 = !DILocation(line: 3571, column: 17, scope: !3713)
!4164 = !DILocation(line: 3572, column: 39, scope: !4165)
!4165 = distinct !DILexicalBlock(scope: !3713, file: !3, line: 3572, column: 2)
!4166 = !DILocation(line: 3572, column: 12, scope: !4165)
!4167 = !DILocation(line: 3572, column: 10, scope: !4165)
!4168 = !DILocation(line: 3572, column: 7, scope: !4165)
!4169 = !DILocation(line: 3572, column: 71, scope: !4170)
!4170 = distinct !DILexicalBlock(scope: !4165, file: !3, line: 3572, column: 2)
!4171 = !DILocation(line: 3572, column: 45, scope: !4170)
!4172 = !DILocation(line: 3572, column: 44, scope: !4170)
!4173 = !DILocation(line: 3572, column: 2, scope: !4165)
!4174 = !DILocalVariable(name: "v", scope: !4175, file: !3, line: 3573, type: !2613)
!4175 = distinct !DILexicalBlock(scope: !4170, file: !3, line: 3572, column: 102)
!4176 = !DILocation(line: 3573, column: 12, scope: !4175)
!4177 = !DILocation(line: 3573, column: 43, scope: !4175)
!4178 = !DILocation(line: 3573, column: 16, scope: !4175)
!4179 = !DILocation(line: 3575, column: 80, scope: !4175)
!4180 = !DILocation(line: 3575, column: 3, scope: !4175)
!4181 = !DILocation(line: 3575, column: 10, scope: !4175)
!4182 = !DILocation(line: 3575, column: 18, scope: !4175)
!4183 = !DILocation(line: 3575, column: 73, scope: !4175)
!4184 = !DILocation(line: 3575, column: 78, scope: !4175)
!4185 = !DILocation(line: 3576, column: 2, scope: !4175)
!4186 = !DILocation(line: 3572, column: 97, scope: !4170)
!4187 = !DILocation(line: 3572, column: 76, scope: !4170)
!4188 = !DILocation(line: 3572, column: 2, scope: !4170)
!4189 = distinct !{!4189, !4173, !4190}
!4190 = !DILocation(line: 3576, column: 2, scope: !4165)
!4191 = !DILocation(line: 3577, column: 23, scope: !3713)
!4192 = !DILocation(line: 3577, column: 2, scope: !3713)
!4193 = !DILocation(line: 3579, column: 35, scope: !3713)
!4194 = !DILocation(line: 3579, column: 12, scope: !3713)
!4195 = !DILocation(line: 3579, column: 10, scope: !3713)
!4196 = !DILocation(line: 3580, column: 19, scope: !3713)
!4197 = !DILocation(line: 3580, column: 31, scope: !3713)
!4198 = !DILocation(line: 3580, column: 39, scope: !3713)
!4199 = !DILocation(line: 3580, column: 2, scope: !3713)
!4200 = !DILocation(line: 3580, column: 9, scope: !3713)
!4201 = !DILocation(line: 3580, column: 17, scope: !3713)
!4202 = !DILocation(line: 3581, column: 39, scope: !4203)
!4203 = distinct !DILexicalBlock(scope: !3713, file: !3, line: 3581, column: 2)
!4204 = !DILocation(line: 3581, column: 12, scope: !4203)
!4205 = !DILocation(line: 3581, column: 10, scope: !4203)
!4206 = !DILocation(line: 3581, column: 7, scope: !4203)
!4207 = !DILocation(line: 3581, column: 71, scope: !4208)
!4208 = distinct !DILexicalBlock(scope: !4203, file: !3, line: 3581, column: 2)
!4209 = !DILocation(line: 3581, column: 45, scope: !4208)
!4210 = !DILocation(line: 3581, column: 44, scope: !4208)
!4211 = !DILocation(line: 3581, column: 2, scope: !4203)
!4212 = !DILocalVariable(name: "e", scope: !4213, file: !3, line: 3582, type: !2638)
!4213 = distinct !DILexicalBlock(scope: !4208, file: !3, line: 3581, column: 102)
!4214 = !DILocation(line: 3582, column: 12, scope: !4213)
!4215 = !DILocation(line: 3582, column: 43, scope: !4213)
!4216 = !DILocation(line: 3582, column: 16, scope: !4213)
!4217 = !DILocation(line: 3584, column: 80, scope: !4213)
!4218 = !DILocation(line: 3584, column: 3, scope: !4213)
!4219 = !DILocation(line: 3584, column: 10, scope: !4213)
!4220 = !DILocation(line: 3584, column: 18, scope: !4213)
!4221 = !DILocation(line: 3584, column: 73, scope: !4213)
!4222 = !DILocation(line: 3584, column: 78, scope: !4213)
!4223 = !DILocation(line: 3585, column: 2, scope: !4213)
!4224 = !DILocation(line: 3581, column: 97, scope: !4208)
!4225 = !DILocation(line: 3581, column: 76, scope: !4208)
!4226 = !DILocation(line: 3581, column: 2, scope: !4208)
!4227 = distinct !{!4227, !4211, !4228}
!4228 = !DILocation(line: 3585, column: 2, scope: !4203)
!4229 = !DILocation(line: 3586, column: 23, scope: !3713)
!4230 = !DILocation(line: 3586, column: 2, scope: !3713)
!4231 = !DILocation(line: 3588, column: 35, scope: !3713)
!4232 = !DILocation(line: 3588, column: 12, scope: !3713)
!4233 = !DILocation(line: 3588, column: 10, scope: !3713)
!4234 = !DILocation(line: 3589, column: 19, scope: !3713)
!4235 = !DILocation(line: 3589, column: 31, scope: !3713)
!4236 = !DILocation(line: 3589, column: 39, scope: !3713)
!4237 = !DILocation(line: 3589, column: 2, scope: !3713)
!4238 = !DILocation(line: 3589, column: 9, scope: !3713)
!4239 = !DILocation(line: 3589, column: 17, scope: !3713)
!4240 = !DILocation(line: 3590, column: 39, scope: !4241)
!4241 = distinct !DILexicalBlock(scope: !3713, file: !3, line: 3590, column: 2)
!4242 = !DILocation(line: 3590, column: 12, scope: !4241)
!4243 = !DILocation(line: 3590, column: 10, scope: !4241)
!4244 = !DILocation(line: 3590, column: 7, scope: !4241)
!4245 = !DILocation(line: 3590, column: 71, scope: !4246)
!4246 = distinct !DILexicalBlock(scope: !4241, file: !3, line: 3590, column: 2)
!4247 = !DILocation(line: 3590, column: 45, scope: !4246)
!4248 = !DILocation(line: 3590, column: 44, scope: !4246)
!4249 = !DILocation(line: 3590, column: 2, scope: !4241)
!4250 = !DILocalVariable(name: "f", scope: !4251, file: !3, line: 3591, type: !2461)
!4251 = distinct !DILexicalBlock(scope: !4246, file: !3, line: 3590, column: 102)
!4252 = !DILocation(line: 3591, column: 12, scope: !4251)
!4253 = !DILocation(line: 3591, column: 43, scope: !4251)
!4254 = !DILocation(line: 3591, column: 16, scope: !4251)
!4255 = !DILocation(line: 3593, column: 80, scope: !4251)
!4256 = !DILocation(line: 3593, column: 3, scope: !4251)
!4257 = !DILocation(line: 3593, column: 10, scope: !4251)
!4258 = !DILocation(line: 3593, column: 18, scope: !4251)
!4259 = !DILocation(line: 3593, column: 73, scope: !4251)
!4260 = !DILocation(line: 3593, column: 78, scope: !4251)
!4261 = !DILocation(line: 3594, column: 2, scope: !4251)
!4262 = !DILocation(line: 3590, column: 97, scope: !4246)
!4263 = !DILocation(line: 3590, column: 76, scope: !4246)
!4264 = !DILocation(line: 3590, column: 2, scope: !4246)
!4265 = distinct !{!4265, !4249, !4266}
!4266 = !DILocation(line: 3594, column: 2, scope: !4241)
!4267 = !DILocation(line: 3595, column: 23, scope: !3713)
!4268 = !DILocation(line: 3595, column: 2, scope: !3713)
!4269 = !DILocation(line: 3597, column: 26, scope: !3713)
!4270 = !DILocation(line: 3597, column: 80, scope: !3713)
!4271 = !DILocation(line: 3597, column: 52, scope: !3713)
!4272 = !DILocation(line: 3597, column: 50, scope: !3713)
!4273 = !DILocation(line: 3597, column: 2, scope: !3713)
!4274 = !DILocation(line: 3597, column: 9, scope: !3713)
!4275 = !DILocation(line: 3597, column: 24, scope: !3713)
!4276 = !DILocation(line: 3599, column: 36, scope: !3713)
!4277 = !DILocation(line: 3599, column: 13, scope: !3713)
!4278 = !DILocation(line: 3599, column: 11, scope: !3713)
!4279 = !DILocation(line: 3600, column: 36, scope: !3713)
!4280 = !DILocation(line: 3600, column: 13, scope: !3713)
!4281 = !DILocation(line: 3600, column: 11, scope: !3713)
!4282 = !DILocation(line: 3601, column: 14, scope: !3713)
!4283 = !DILocation(line: 3601, column: 23, scope: !3713)
!4284 = !DILocation(line: 3601, column: 12, scope: !3713)
!4285 = !DILocation(line: 3602, column: 13, scope: !3713)
!4286 = !DILocation(line: 3602, column: 22, scope: !3713)
!4287 = !DILocation(line: 3602, column: 11, scope: !3713)
!4288 = !DILocation(line: 3604, column: 18, scope: !3713)
!4289 = !DILocation(line: 3604, column: 27, scope: !3713)
!4290 = !DILocation(line: 3604, column: 16, scope: !3713)
!4291 = !DILocation(line: 3605, column: 23, scope: !3713)
!4292 = !DILocation(line: 3605, column: 37, scope: !3713)
!4293 = !DILocation(line: 3605, column: 44, scope: !3713)
!4294 = !DILocation(line: 3605, column: 42, scope: !3713)
!4295 = !DILocation(line: 3605, column: 58, scope: !3713)
!4296 = !DILocation(line: 3605, column: 20, scope: !3713)
!4297 = !DILocation(line: 3607, column: 10, scope: !3713)
!4298 = !DILocation(line: 3608, column: 10, scope: !3713)
!4299 = !DILocation(line: 3609, column: 10, scope: !3713)
!4300 = !DILocation(line: 3612, column: 10, scope: !3713)
!4301 = !DILocation(line: 3612, column: 14, scope: !3713)
!4302 = !DILocation(line: 3612, column: 27, scope: !3713)
!4303 = !DILocation(line: 3612, column: 8, scope: !3713)
!4304 = !DILocation(line: 3615, column: 32, scope: !3713)
!4305 = !DILocation(line: 3615, column: 36, scope: !3713)
!4306 = !DILocation(line: 3615, column: 10, scope: !3713)
!4307 = !DILocation(line: 3615, column: 8, scope: !3713)
!4308 = !DILocation(line: 3616, column: 45, scope: !3713)
!4309 = !DILocation(line: 3616, column: 49, scope: !3713)
!4310 = !DILocation(line: 3616, column: 23, scope: !3713)
!4311 = !DILocation(line: 3616, column: 21, scope: !3713)
!4312 = !DILocation(line: 3619, column: 33, scope: !3713)
!4313 = !DILocation(line: 3619, column: 61, scope: !3713)
!4314 = !DILocation(line: 3619, column: 59, scope: !3713)
!4315 = !DILocation(line: 3619, column: 14, scope: !3713)
!4316 = !DILocation(line: 3619, column: 21, scope: !3713)
!4317 = !DILocation(line: 3619, column: 31, scope: !3713)
!4318 = !DILocation(line: 3619, column: 12, scope: !3713)
!4319 = !DILocation(line: 3620, column: 33, scope: !3713)
!4320 = !DILocation(line: 3620, column: 65, scope: !3713)
!4321 = !DILocation(line: 3620, column: 63, scope: !3713)
!4322 = !DILocation(line: 3620, column: 14, scope: !3713)
!4323 = !DILocation(line: 3620, column: 21, scope: !3713)
!4324 = !DILocation(line: 3620, column: 31, scope: !3713)
!4325 = !DILocation(line: 3620, column: 12, scope: !3713)
!4326 = !DILocation(line: 3622, column: 42, scope: !3713)
!4327 = !DILocation(line: 3622, column: 49, scope: !3713)
!4328 = !DILocation(line: 3622, column: 18, scope: !3713)
!4329 = !DILocation(line: 3622, column: 16, scope: !3713)
!4330 = !DILocation(line: 3623, column: 42, scope: !3713)
!4331 = !DILocation(line: 3623, column: 49, scope: !3713)
!4332 = !DILocation(line: 3623, column: 18, scope: !3713)
!4333 = !DILocation(line: 3623, column: 16, scope: !3713)
!4334 = !DILocation(line: 3625, column: 46, scope: !3713)
!4335 = !DILocation(line: 3625, column: 53, scope: !3713)
!4336 = !DILocation(line: 3625, column: 18, scope: !3713)
!4337 = !DILocation(line: 3625, column: 16, scope: !3713)
!4338 = !DILocation(line: 3626, column: 42, scope: !3713)
!4339 = !DILocation(line: 3626, column: 49, scope: !3713)
!4340 = !DILocation(line: 3626, column: 18, scope: !3713)
!4341 = !DILocation(line: 3626, column: 16, scope: !3713)
!4342 = !DILocation(line: 3628, column: 18, scope: !3713)
!4343 = !DILocation(line: 3628, column: 25, scope: !3713)
!4344 = !DILocation(line: 3628, column: 28, scope: !3713)
!4345 = !DILocation(line: 3628, column: 37, scope: !3713)
!4346 = !DILocation(line: 3628, column: 49, scope: !3713)
!4347 = !DILocation(line: 3628, column: 46, scope: !3713)
!4348 = !DILocation(line: 3628, column: 73, scope: !3713)
!4349 = !DILocation(line: 3628, column: 16, scope: !3713)
!4350 = !DILocation(line: 3628, column: 14, scope: !3713)
!4351 = !DILocation(line: 3638, column: 25, scope: !3713)
!4352 = !DILocation(line: 3638, column: 12, scope: !3713)
!4353 = !DILocation(line: 3639, column: 13, scope: !4354)
!4354 = distinct !DILexicalBlock(scope: !3713, file: !3, line: 3639, column: 2)
!4355 = !DILocation(line: 3639, column: 7, scope: !4354)
!4356 = !DILocation(line: 3639, column: 18, scope: !4357)
!4357 = distinct !DILexicalBlock(scope: !4354, file: !3, line: 3639, column: 2)
!4358 = !DILocation(line: 3639, column: 26, scope: !4357)
!4359 = !DILocation(line: 3639, column: 24, scope: !4357)
!4360 = !DILocation(line: 3639, column: 2, scope: !4354)
!4361 = !DILocalVariable(name: "f", scope: !4362, file: !3, line: 3640, type: !2461)
!4362 = distinct !DILexicalBlock(scope: !4357, file: !3, line: 3639, column: 44)
!4363 = !DILocation(line: 3640, column: 12, scope: !4362)
!4364 = !DILocation(line: 3640, column: 16, scope: !4362)
!4365 = !DILocation(line: 3640, column: 23, scope: !4362)
!4366 = !DILocation(line: 3640, column: 31, scope: !4362)
!4367 = !DILocation(line: 3640, column: 38, scope: !4362)
!4368 = !DILocalVariable(name: "numVerts", scope: !4362, file: !3, line: 3641, type: !27)
!4369 = !DILocation(line: 3641, column: 7, scope: !4362)
!4370 = !DILocation(line: 3641, column: 45, scope: !4362)
!4371 = !DILocation(line: 3641, column: 18, scope: !4362)
!4372 = !DILocalVariable(name: "numFinalEdges", scope: !4362, file: !3, line: 3642, type: !27)
!4373 = !DILocation(line: 3642, column: 7, scope: !4362)
!4374 = !DILocation(line: 3642, column: 23, scope: !4362)
!4375 = !DILocation(line: 3642, column: 35, scope: !4362)
!4376 = !DILocation(line: 3642, column: 51, scope: !4362)
!4377 = !DILocation(line: 3642, column: 49, scope: !4362)
!4378 = !DILocation(line: 3642, column: 32, scope: !4362)
!4379 = !DILocalVariable(name: "origIndex", scope: !4362, file: !3, line: 3643, type: !27)
!4380 = !DILocation(line: 3643, column: 7, scope: !4362)
!4381 = !DILocation(line: 3643, column: 19, scope: !4362)
!4382 = !DILocalVariable(name: "g2_wid", scope: !4362, file: !3, line: 3644, type: !27)
!4383 = !DILocation(line: 3644, column: 7, scope: !4362)
!4384 = !DILocation(line: 3644, column: 16, scope: !4362)
!4385 = !DILocation(line: 3644, column: 25, scope: !4362)
!4386 = !DILocalVariable(name: "w", scope: !4362, file: !3, line: 3645, type: !1306)
!4387 = !DILocation(line: 3645, column: 10, scope: !4362)
!4388 = !DILocalVariable(name: "w2", scope: !4362, file: !3, line: 3645, type: !1306)
!4389 = !DILocation(line: 3645, column: 14, scope: !4362)
!4390 = !DILocalVariable(name: "s", scope: !4362, file: !3, line: 3646, type: !27)
!4391 = !DILocation(line: 3646, column: 7, scope: !4362)
!4392 = !DILocalVariable(name: "x", scope: !4362, file: !3, line: 3646, type: !27)
!4393 = !DILocation(line: 3646, column: 10, scope: !4362)
!4394 = !DILocalVariable(name: "y", scope: !4362, file: !3, line: 3646, type: !27)
!4395 = !DILocation(line: 3646, column: 13, scope: !4362)
!4396 = !DILocation(line: 3648, column: 15, scope: !4362)
!4397 = !DILocation(line: 3648, column: 3, scope: !4362)
!4398 = !DILocalVariable(name: "__vla_expr0", scope: !4362, type: !1258, flags: DIFlagArtificial)
!4399 = !DILocation(line: 0, scope: !4362)
!4400 = !DILocalVariable(name: "loopidx", scope: !4362, file: !3, line: 3648, type: !4401)
!4401 = !DICompositeType(tag: DW_TAG_array_type, baseType: !27, elements: !4402)
!4402 = !{!4403}
!4403 = !DISubrange(count: !4398)
!4404 = !DILocation(line: 3648, column: 7, scope: !4362)
!4405 = !DILocation(line: 3648, column: 34, scope: !4362)
!4406 = !DILocalVariable(name: "__vla_expr1", scope: !4362, type: !1258, flags: DIFlagArtificial)
!4407 = !DILocalVariable(name: "vertidx", scope: !4362, file: !3, line: 3648, type: !4408)
!4408 = !DICompositeType(tag: DW_TAG_array_type, baseType: !27, elements: !4409)
!4409 = !{!4410}
!4410 = !DISubrange(count: !4406)
!4411 = !DILocation(line: 3648, column: 26, scope: !4362)
!4412 = !DILocation(line: 3651, column: 31, scope: !4362)
!4413 = !DILocation(line: 3651, column: 41, scope: !4362)
!4414 = !DILocation(line: 3651, column: 7, scope: !4362)
!4415 = !DILocation(line: 3651, column: 5, scope: !4362)
!4416 = !DILocation(line: 3653, column: 37, scope: !4362)
!4417 = !DILocation(line: 3653, column: 3, scope: !4362)
!4418 = !DILocation(line: 3653, column: 10, scope: !4362)
!4419 = !DILocation(line: 3653, column: 18, scope: !4362)
!4420 = !DILocation(line: 3653, column: 25, scope: !4362)
!4421 = !DILocation(line: 3653, column: 35, scope: !4362)
!4422 = !DILocation(line: 3654, column: 37, scope: !4362)
!4423 = !DILocation(line: 3654, column: 3, scope: !4362)
!4424 = !DILocation(line: 3654, column: 10, scope: !4362)
!4425 = !DILocation(line: 3654, column: 18, scope: !4362)
!4426 = !DILocation(line: 3654, column: 25, scope: !4362)
!4427 = !DILocation(line: 3654, column: 35, scope: !4362)
!4428 = !DILocation(line: 3655, column: 37, scope: !4362)
!4429 = !DILocation(line: 3655, column: 3, scope: !4362)
!4430 = !DILocation(line: 3655, column: 10, scope: !4362)
!4431 = !DILocation(line: 3655, column: 18, scope: !4362)
!4432 = !DILocation(line: 3655, column: 25, scope: !4362)
!4433 = !DILocation(line: 3655, column: 35, scope: !4362)
!4434 = !DILocation(line: 3657, column: 21, scope: !4362)
!4435 = !DILocation(line: 3657, column: 30, scope: !4362)
!4436 = !DILocation(line: 3657, column: 36, scope: !4362)
!4437 = !DILocation(line: 3657, column: 47, scope: !4362)
!4438 = !DILocation(line: 3657, column: 3, scope: !4362)
!4439 = !DILocation(line: 3657, column: 14, scope: !4362)
!4440 = !DILocation(line: 3657, column: 19, scope: !4362)
!4441 = !DILocation(line: 3658, column: 23, scope: !4362)
!4442 = !DILocation(line: 3658, column: 31, scope: !4362)
!4443 = !DILocation(line: 3658, column: 37, scope: !4362)
!4444 = !DILocation(line: 3658, column: 48, scope: !4362)
!4445 = !DILocation(line: 3658, column: 3, scope: !4362)
!4446 = !DILocation(line: 3658, column: 14, scope: !4362)
!4447 = !DILocation(line: 3658, column: 21, scope: !4362)
!4448 = !DILocation(line: 3659, column: 12, scope: !4362)
!4449 = !DILocation(line: 3662, column: 49, scope: !4362)
!4450 = !DILocation(line: 3662, column: 39, scope: !4362)
!4451 = !DILocation(line: 3662, column: 43, scope: !4362)
!4452 = !DILocation(line: 3662, column: 12, scope: !4362)
!4453 = !DILocation(line: 3662, column: 5, scope: !4362)
!4454 = !DILocation(line: 3662, column: 47, scope: !4362)
!4455 = !DILocation(line: 3668, column: 10, scope: !4456)
!4456 = distinct !DILexicalBlock(scope: !4362, file: !3, line: 3668, column: 3)
!4457 = !DILocation(line: 3668, column: 8, scope: !4456)
!4458 = !DILocation(line: 3668, column: 15, scope: !4459)
!4459 = distinct !DILexicalBlock(scope: !4456, file: !3, line: 3668, column: 3)
!4460 = !DILocation(line: 3668, column: 19, scope: !4459)
!4461 = !DILocation(line: 3668, column: 17, scope: !4459)
!4462 = !DILocation(line: 3668, column: 3, scope: !4456)
!4463 = !DILocation(line: 3669, column: 26, scope: !4464)
!4464 = distinct !DILexicalBlock(scope: !4459, file: !3, line: 3668, column: 34)
!4465 = !DILocation(line: 3669, column: 12, scope: !4464)
!4466 = !DILocation(line: 3669, column: 4, scope: !4464)
!4467 = !DILocation(line: 3669, column: 15, scope: !4464)
!4468 = !DILocation(line: 3670, column: 3, scope: !4464)
!4469 = !DILocation(line: 3668, column: 30, scope: !4459)
!4470 = !DILocation(line: 3668, column: 3, scope: !4459)
!4471 = distinct !{!4471, !4462, !4472}
!4472 = !DILocation(line: 3670, column: 3, scope: !4456)
!4473 = !DILocation(line: 3676, column: 10, scope: !4474)
!4474 = distinct !DILexicalBlock(scope: !4362, file: !3, line: 3676, column: 3)
!4475 = !DILocation(line: 3676, column: 8, scope: !4474)
!4476 = !DILocation(line: 3676, column: 15, scope: !4477)
!4477 = distinct !DILexicalBlock(scope: !4474, file: !3, line: 3676, column: 3)
!4478 = !DILocation(line: 3676, column: 19, scope: !4477)
!4479 = !DILocation(line: 3676, column: 17, scope: !4477)
!4480 = !DILocation(line: 3676, column: 3, scope: !4474)
!4481 = !DILocalVariable(name: "v", scope: !4482, file: !3, line: 3677, type: !2613)
!4482 = distinct !DILexicalBlock(scope: !4477, file: !3, line: 3676, column: 34)
!4483 = !DILocation(line: 3677, column: 13, scope: !4482)
!4484 = !DILocation(line: 3677, column: 40, scope: !4482)
!4485 = !DILocation(line: 3677, column: 43, scope: !4482)
!4486 = !DILocation(line: 3677, column: 17, scope: !4482)
!4487 = !DILocation(line: 3678, column: 17, scope: !4482)
!4488 = !DILocation(line: 3678, column: 12, scope: !4482)
!4489 = !DILocation(line: 3678, column: 4, scope: !4482)
!4490 = !DILocation(line: 3678, column: 15, scope: !4482)
!4491 = !DILocation(line: 3679, column: 3, scope: !4482)
!4492 = !DILocation(line: 3676, column: 30, scope: !4477)
!4493 = !DILocation(line: 3676, column: 3, scope: !4477)
!4494 = distinct !{!4494, !4480, !4495}
!4495 = !DILocation(line: 3679, column: 3, scope: !4474)
!4496 = !DILocation(line: 3683, column: 8, scope: !4362)
!4497 = !DILocation(line: 3683, column: 6, scope: !4362)
!4498 = !DILocation(line: 3684, column: 23, scope: !4362)
!4499 = !DILocation(line: 3684, column: 28, scope: !4362)
!4500 = !DILocation(line: 3684, column: 35, scope: !4362)
!4501 = !DILocation(line: 3684, column: 48, scope: !4362)
!4502 = !DILocation(line: 3685, column: 23, scope: !4362)
!4503 = !DILocation(line: 3685, column: 33, scope: !4362)
!4504 = !DILocation(line: 3684, column: 3, scope: !4362)
!4505 = !DILocation(line: 3686, column: 7, scope: !4506)
!4506 = distinct !DILexicalBlock(scope: !4362, file: !3, line: 3686, column: 7)
!4507 = !DILocation(line: 3686, column: 7, scope: !4362)
!4508 = !DILocation(line: 3687, column: 5, scope: !4509)
!4509 = distinct !DILexicalBlock(scope: !4506, file: !3, line: 3686, column: 22)
!4510 = !DILocation(line: 3687, column: 19, scope: !4509)
!4511 = !DILocation(line: 3688, column: 17, scope: !4509)
!4512 = !DILocation(line: 3689, column: 3, scope: !4509)
!4513 = !DILocation(line: 3691, column: 10, scope: !4362)
!4514 = !DILocation(line: 3694, column: 10, scope: !4515)
!4515 = distinct !DILexicalBlock(scope: !4362, file: !3, line: 3694, column: 3)
!4516 = !DILocation(line: 3694, column: 8, scope: !4515)
!4517 = !DILocation(line: 3694, column: 15, scope: !4518)
!4518 = distinct !DILexicalBlock(scope: !4515, file: !3, line: 3694, column: 3)
!4519 = !DILocation(line: 3694, column: 19, scope: !4518)
!4520 = !DILocation(line: 3694, column: 17, scope: !4518)
!4521 = !DILocation(line: 3694, column: 3, scope: !4515)
!4522 = !DILocation(line: 3695, column: 11, scope: !4523)
!4523 = distinct !DILexicalBlock(scope: !4524, file: !3, line: 3695, column: 4)
!4524 = distinct !DILexicalBlock(scope: !4518, file: !3, line: 3694, column: 34)
!4525 = !DILocation(line: 3695, column: 9, scope: !4523)
!4526 = !DILocation(line: 3695, column: 16, scope: !4527)
!4527 = distinct !DILexicalBlock(scope: !4523, file: !3, line: 3695, column: 4)
!4528 = !DILocation(line: 3695, column: 20, scope: !4527)
!4529 = !DILocation(line: 3695, column: 18, scope: !4527)
!4530 = !DILocation(line: 3695, column: 4, scope: !4523)
!4531 = !DILocation(line: 3696, column: 10, scope: !4532)
!4532 = distinct !DILexicalBlock(scope: !4527, file: !3, line: 3695, column: 36)
!4533 = !DILocation(line: 3696, column: 14, scope: !4532)
!4534 = !DILocation(line: 3696, column: 18, scope: !4532)
!4535 = !DILocation(line: 3696, column: 16, scope: !4532)
!4536 = !DILocation(line: 3696, column: 29, scope: !4532)
!4537 = !DILocation(line: 3696, column: 27, scope: !4532)
!4538 = !DILocation(line: 3696, column: 38, scope: !4532)
!4539 = !DILocation(line: 3696, column: 36, scope: !4532)
!4540 = !DILocation(line: 3696, column: 12, scope: !4532)
!4541 = !DILocation(line: 3696, column: 47, scope: !4532)
!4542 = !DILocation(line: 3696, column: 51, scope: !4532)
!4543 = !DILocation(line: 3696, column: 49, scope: !4532)
!4544 = !DILocation(line: 3696, column: 45, scope: !4532)
!4545 = !DILocation(line: 3696, column: 8, scope: !4532)
!4546 = !DILocation(line: 3697, column: 25, scope: !4532)
!4547 = !DILocation(line: 3697, column: 30, scope: !4532)
!4548 = !DILocation(line: 3697, column: 37, scope: !4532)
!4549 = !DILocation(line: 3697, column: 50, scope: !4532)
!4550 = !DILocation(line: 3698, column: 25, scope: !4532)
!4551 = !DILocation(line: 3698, column: 35, scope: !4532)
!4552 = !DILocation(line: 3697, column: 5, scope: !4532)
!4553 = !DILocation(line: 3700, column: 9, scope: !4554)
!4554 = distinct !DILexicalBlock(scope: !4532, file: !3, line: 3700, column: 9)
!4555 = !DILocation(line: 3700, column: 9, scope: !4532)
!4556 = !DILocation(line: 3701, column: 7, scope: !4557)
!4557 = distinct !DILexicalBlock(scope: !4554, file: !3, line: 3700, column: 24)
!4558 = !DILocation(line: 3701, column: 21, scope: !4557)
!4559 = !DILocation(line: 3702, column: 19, scope: !4557)
!4560 = !DILocation(line: 3703, column: 5, scope: !4557)
!4561 = !DILocation(line: 3705, column: 12, scope: !4532)
!4562 = !DILocation(line: 3706, column: 4, scope: !4532)
!4563 = !DILocation(line: 3695, column: 32, scope: !4527)
!4564 = !DILocation(line: 3695, column: 4, scope: !4527)
!4565 = distinct !{!4565, !4530, !4566}
!4566 = !DILocation(line: 3706, column: 4, scope: !4523)
!4567 = !DILocation(line: 3707, column: 3, scope: !4524)
!4568 = !DILocation(line: 3694, column: 30, scope: !4518)
!4569 = !DILocation(line: 3694, column: 3, scope: !4518)
!4570 = distinct !{!4570, !4521, !4571}
!4571 = !DILocation(line: 3707, column: 3, scope: !4515)
!4572 = !DILocation(line: 3710, column: 10, scope: !4573)
!4573 = distinct !DILexicalBlock(scope: !4362, file: !3, line: 3710, column: 3)
!4574 = !DILocation(line: 3710, column: 8, scope: !4573)
!4575 = !DILocation(line: 3710, column: 15, scope: !4576)
!4576 = distinct !DILexicalBlock(scope: !4573, file: !3, line: 3710, column: 3)
!4577 = !DILocation(line: 3710, column: 19, scope: !4576)
!4578 = !DILocation(line: 3710, column: 17, scope: !4576)
!4579 = !DILocation(line: 3710, column: 3, scope: !4573)
!4580 = !DILocation(line: 3711, column: 11, scope: !4581)
!4581 = distinct !DILexicalBlock(scope: !4582, file: !3, line: 3711, column: 4)
!4582 = distinct !DILexicalBlock(scope: !4576, file: !3, line: 3710, column: 34)
!4583 = !DILocation(line: 3711, column: 9, scope: !4581)
!4584 = !DILocation(line: 3711, column: 16, scope: !4585)
!4585 = distinct !DILexicalBlock(scope: !4581, file: !3, line: 3711, column: 4)
!4586 = !DILocation(line: 3711, column: 20, scope: !4585)
!4587 = !DILocation(line: 3711, column: 18, scope: !4585)
!4588 = !DILocation(line: 3711, column: 4, scope: !4581)
!4589 = !DILocation(line: 3712, column: 12, scope: !4590)
!4590 = distinct !DILexicalBlock(scope: !4591, file: !3, line: 3712, column: 5)
!4591 = distinct !DILexicalBlock(scope: !4585, file: !3, line: 3711, column: 36)
!4592 = !DILocation(line: 3712, column: 10, scope: !4590)
!4593 = !DILocation(line: 3712, column: 17, scope: !4594)
!4594 = distinct !DILexicalBlock(scope: !4590, file: !3, line: 3712, column: 5)
!4595 = !DILocation(line: 3712, column: 21, scope: !4594)
!4596 = !DILocation(line: 3712, column: 19, scope: !4594)
!4597 = !DILocation(line: 3712, column: 5, scope: !4590)
!4598 = !DILocation(line: 3713, column: 11, scope: !4599)
!4599 = distinct !DILexicalBlock(scope: !4594, file: !3, line: 3712, column: 37)
!4600 = !DILocation(line: 3713, column: 15, scope: !4599)
!4601 = !DILocation(line: 3713, column: 19, scope: !4599)
!4602 = !DILocation(line: 3713, column: 17, scope: !4599)
!4603 = !DILocation(line: 3713, column: 30, scope: !4599)
!4604 = !DILocation(line: 3713, column: 28, scope: !4599)
!4605 = !DILocation(line: 3713, column: 39, scope: !4599)
!4606 = !DILocation(line: 3713, column: 37, scope: !4599)
!4607 = !DILocation(line: 3713, column: 13, scope: !4599)
!4608 = !DILocation(line: 3713, column: 49, scope: !4599)
!4609 = !DILocation(line: 3713, column: 53, scope: !4599)
!4610 = !DILocation(line: 3713, column: 51, scope: !4599)
!4611 = !DILocation(line: 3713, column: 62, scope: !4599)
!4612 = !DILocation(line: 3713, column: 60, scope: !4599)
!4613 = !DILocation(line: 3713, column: 67, scope: !4599)
!4614 = !DILocation(line: 3713, column: 65, scope: !4599)
!4615 = !DILocation(line: 3713, column: 46, scope: !4599)
!4616 = !DILocation(line: 3713, column: 9, scope: !4599)
!4617 = !DILocation(line: 3714, column: 26, scope: !4599)
!4618 = !DILocation(line: 3714, column: 31, scope: !4599)
!4619 = !DILocation(line: 3714, column: 38, scope: !4599)
!4620 = !DILocation(line: 3714, column: 51, scope: !4599)
!4621 = !DILocation(line: 3715, column: 26, scope: !4599)
!4622 = !DILocation(line: 3715, column: 36, scope: !4599)
!4623 = !DILocation(line: 3714, column: 6, scope: !4599)
!4624 = !DILocation(line: 3717, column: 10, scope: !4625)
!4625 = distinct !DILexicalBlock(scope: !4599, file: !3, line: 3717, column: 10)
!4626 = !DILocation(line: 3717, column: 10, scope: !4599)
!4627 = !DILocation(line: 3718, column: 8, scope: !4628)
!4628 = distinct !DILexicalBlock(scope: !4625, file: !3, line: 3717, column: 25)
!4629 = !DILocation(line: 3718, column: 22, scope: !4628)
!4630 = !DILocation(line: 3719, column: 20, scope: !4628)
!4631 = !DILocation(line: 3720, column: 6, scope: !4628)
!4632 = !DILocation(line: 3722, column: 13, scope: !4599)
!4633 = !DILocation(line: 3723, column: 5, scope: !4599)
!4634 = !DILocation(line: 3712, column: 33, scope: !4594)
!4635 = !DILocation(line: 3712, column: 5, scope: !4594)
!4636 = distinct !{!4636, !4597, !4637}
!4637 = !DILocation(line: 3723, column: 5, scope: !4590)
!4638 = !DILocation(line: 3724, column: 4, scope: !4591)
!4639 = !DILocation(line: 3711, column: 32, scope: !4585)
!4640 = !DILocation(line: 3711, column: 4, scope: !4585)
!4641 = distinct !{!4641, !4588, !4642}
!4642 = !DILocation(line: 3724, column: 4, scope: !4581)
!4643 = !DILocation(line: 3725, column: 3, scope: !4582)
!4644 = !DILocation(line: 3710, column: 30, scope: !4576)
!4645 = !DILocation(line: 3710, column: 3, scope: !4576)
!4646 = distinct !{!4646, !4579, !4647}
!4647 = !DILocation(line: 3725, column: 3, scope: !4573)
!4648 = !DILocation(line: 3727, column: 7, scope: !4649)
!4649 = distinct !DILexicalBlock(scope: !4362, file: !3, line: 3727, column: 7)
!4650 = !DILocation(line: 3727, column: 7, scope: !4362)
!4651 = !DILocation(line: 3728, column: 11, scope: !4652)
!4652 = distinct !DILexicalBlock(scope: !4653, file: !3, line: 3728, column: 4)
!4653 = distinct !DILexicalBlock(scope: !4649, file: !3, line: 3727, column: 22)
!4654 = !DILocation(line: 3728, column: 9, scope: !4652)
!4655 = !DILocation(line: 3728, column: 16, scope: !4656)
!4656 = distinct !DILexicalBlock(scope: !4652, file: !3, line: 3728, column: 4)
!4657 = !DILocation(line: 3728, column: 20, scope: !4656)
!4658 = !DILocation(line: 3728, column: 18, scope: !4656)
!4659 = !DILocation(line: 3728, column: 4, scope: !4652)
!4660 = !DILocation(line: 3729, column: 5, scope: !4661)
!4661 = distinct !DILexicalBlock(scope: !4656, file: !3, line: 3728, column: 40)
!4662 = !DILocation(line: 3729, column: 19, scope: !4661)
!4663 = !DILocation(line: 3729, column: 29, scope: !4661)
!4664 = !DILocation(line: 3729, column: 27, scope: !4661)
!4665 = !DILocation(line: 3729, column: 32, scope: !4661)
!4666 = !DILocation(line: 3730, column: 4, scope: !4661)
!4667 = !DILocation(line: 3728, column: 35, scope: !4656)
!4668 = !DILocation(line: 3728, column: 4, scope: !4656)
!4669 = distinct !{!4669, !4659, !4670}
!4670 = !DILocation(line: 3730, column: 4, scope: !4652)
!4671 = !DILocation(line: 3731, column: 3, scope: !4653)
!4672 = !DILocation(line: 3733, column: 10, scope: !4673)
!4673 = distinct !DILexicalBlock(scope: !4362, file: !3, line: 3733, column: 3)
!4674 = !DILocation(line: 3733, column: 8, scope: !4673)
!4675 = !DILocation(line: 3733, column: 15, scope: !4676)
!4676 = distinct !DILexicalBlock(scope: !4673, file: !3, line: 3733, column: 3)
!4677 = !DILocation(line: 3733, column: 19, scope: !4676)
!4678 = !DILocation(line: 3733, column: 17, scope: !4676)
!4679 = !DILocation(line: 3733, column: 3, scope: !4673)
!4680 = !DILocation(line: 3735, column: 11, scope: !4681)
!4681 = distinct !DILexicalBlock(scope: !4682, file: !3, line: 3735, column: 4)
!4682 = distinct !DILexicalBlock(scope: !4676, file: !3, line: 3733, column: 34)
!4683 = !DILocation(line: 3735, column: 9, scope: !4681)
!4684 = !DILocation(line: 3735, column: 16, scope: !4685)
!4685 = distinct !DILexicalBlock(scope: !4681, file: !3, line: 3735, column: 4)
!4686 = !DILocation(line: 3735, column: 20, scope: !4685)
!4687 = !DILocation(line: 3735, column: 18, scope: !4685)
!4688 = !DILocation(line: 3735, column: 4, scope: !4681)
!4689 = !DILocation(line: 3736, column: 12, scope: !4690)
!4690 = distinct !DILexicalBlock(scope: !4691, file: !3, line: 3736, column: 5)
!4691 = distinct !DILexicalBlock(scope: !4685, file: !3, line: 3735, column: 36)
!4692 = !DILocation(line: 3736, column: 10, scope: !4690)
!4693 = !DILocation(line: 3736, column: 17, scope: !4694)
!4694 = distinct !DILexicalBlock(scope: !4690, file: !3, line: 3736, column: 5)
!4695 = !DILocation(line: 3736, column: 21, scope: !4694)
!4696 = !DILocation(line: 3736, column: 19, scope: !4694)
!4697 = !DILocation(line: 3736, column: 5, scope: !4690)
!4698 = !DILocation(line: 3737, column: 11, scope: !4699)
!4699 = distinct !DILexicalBlock(scope: !4694, file: !3, line: 3736, column: 37)
!4700 = !DILocation(line: 3737, column: 15, scope: !4699)
!4701 = !DILocation(line: 3737, column: 19, scope: !4699)
!4702 = !DILocation(line: 3737, column: 17, scope: !4699)
!4703 = !DILocation(line: 3737, column: 30, scope: !4699)
!4704 = !DILocation(line: 3737, column: 28, scope: !4699)
!4705 = !DILocation(line: 3737, column: 39, scope: !4699)
!4706 = !DILocation(line: 3737, column: 37, scope: !4699)
!4707 = !DILocation(line: 3737, column: 13, scope: !4699)
!4708 = !DILocation(line: 3737, column: 49, scope: !4699)
!4709 = !DILocation(line: 3737, column: 53, scope: !4699)
!4710 = !DILocation(line: 3737, column: 51, scope: !4699)
!4711 = !DILocation(line: 3737, column: 62, scope: !4699)
!4712 = !DILocation(line: 3737, column: 60, scope: !4699)
!4713 = !DILocation(line: 3737, column: 67, scope: !4699)
!4714 = !DILocation(line: 3737, column: 65, scope: !4699)
!4715 = !DILocation(line: 3737, column: 46, scope: !4699)
!4716 = !DILocation(line: 3737, column: 9, scope: !4699)
!4717 = !DILocation(line: 3738, column: 25, scope: !4699)
!4718 = !DILocation(line: 3738, column: 29, scope: !4699)
!4719 = !DILocation(line: 3738, column: 40, scope: !4699)
!4720 = !DILocation(line: 3738, column: 47, scope: !4699)
!4721 = !DILocation(line: 3738, column: 50, scope: !4699)
!4722 = !DILocation(line: 3739, column: 33, scope: !4699)
!4723 = !DILocation(line: 3739, column: 43, scope: !4699)
!4724 = !DILocation(line: 3739, column: 53, scope: !4699)
!4725 = !DILocation(line: 3738, column: 6, scope: !4699)
!4726 = !DILocation(line: 3740, column: 16, scope: !4699)
!4727 = !DILocation(line: 3742, column: 11, scope: !4699)
!4728 = !DILocation(line: 3742, column: 15, scope: !4699)
!4729 = !DILocation(line: 3742, column: 19, scope: !4699)
!4730 = !DILocation(line: 3742, column: 17, scope: !4699)
!4731 = !DILocation(line: 3742, column: 30, scope: !4699)
!4732 = !DILocation(line: 3742, column: 28, scope: !4699)
!4733 = !DILocation(line: 3742, column: 39, scope: !4699)
!4734 = !DILocation(line: 3742, column: 37, scope: !4699)
!4735 = !DILocation(line: 3742, column: 13, scope: !4699)
!4736 = !DILocation(line: 3742, column: 50, scope: !4699)
!4737 = !DILocation(line: 3742, column: 52, scope: !4699)
!4738 = !DILocation(line: 3742, column: 59, scope: !4699)
!4739 = !DILocation(line: 3742, column: 57, scope: !4699)
!4740 = !DILocation(line: 3742, column: 69, scope: !4699)
!4741 = !DILocation(line: 3742, column: 66, scope: !4699)
!4742 = !DILocation(line: 3742, column: 75, scope: !4699)
!4743 = !DILocation(line: 3742, column: 73, scope: !4699)
!4744 = !DILocation(line: 3742, column: 46, scope: !4699)
!4745 = !DILocation(line: 3742, column: 9, scope: !4699)
!4746 = !DILocation(line: 3743, column: 25, scope: !4699)
!4747 = !DILocation(line: 3743, column: 29, scope: !4699)
!4748 = !DILocation(line: 3743, column: 40, scope: !4699)
!4749 = !DILocation(line: 3743, column: 47, scope: !4699)
!4750 = !DILocation(line: 3743, column: 50, scope: !4699)
!4751 = !DILocation(line: 3744, column: 33, scope: !4699)
!4752 = !DILocation(line: 3744, column: 43, scope: !4699)
!4753 = !DILocation(line: 3744, column: 53, scope: !4699)
!4754 = !DILocation(line: 3743, column: 6, scope: !4699)
!4755 = !DILocation(line: 3745, column: 16, scope: !4699)
!4756 = !DILocation(line: 3747, column: 11, scope: !4699)
!4757 = !DILocation(line: 3747, column: 15, scope: !4699)
!4758 = !DILocation(line: 3747, column: 19, scope: !4699)
!4759 = !DILocation(line: 3747, column: 17, scope: !4699)
!4760 = !DILocation(line: 3747, column: 30, scope: !4699)
!4761 = !DILocation(line: 3747, column: 28, scope: !4699)
!4762 = !DILocation(line: 3747, column: 39, scope: !4699)
!4763 = !DILocation(line: 3747, column: 37, scope: !4699)
!4764 = !DILocation(line: 3747, column: 13, scope: !4699)
!4765 = !DILocation(line: 3747, column: 50, scope: !4699)
!4766 = !DILocation(line: 3747, column: 52, scope: !4699)
!4767 = !DILocation(line: 3747, column: 59, scope: !4699)
!4768 = !DILocation(line: 3747, column: 57, scope: !4699)
!4769 = !DILocation(line: 3747, column: 69, scope: !4699)
!4770 = !DILocation(line: 3747, column: 71, scope: !4699)
!4771 = !DILocation(line: 3747, column: 66, scope: !4699)
!4772 = !DILocation(line: 3747, column: 79, scope: !4699)
!4773 = !DILocation(line: 3747, column: 77, scope: !4699)
!4774 = !DILocation(line: 3747, column: 46, scope: !4699)
!4775 = !DILocation(line: 3747, column: 9, scope: !4699)
!4776 = !DILocation(line: 3748, column: 25, scope: !4699)
!4777 = !DILocation(line: 3748, column: 29, scope: !4699)
!4778 = !DILocation(line: 3748, column: 40, scope: !4699)
!4779 = !DILocation(line: 3748, column: 47, scope: !4699)
!4780 = !DILocation(line: 3748, column: 50, scope: !4699)
!4781 = !DILocation(line: 3749, column: 33, scope: !4699)
!4782 = !DILocation(line: 3749, column: 43, scope: !4699)
!4783 = !DILocation(line: 3749, column: 53, scope: !4699)
!4784 = !DILocation(line: 3748, column: 6, scope: !4699)
!4785 = !DILocation(line: 3750, column: 16, scope: !4699)
!4786 = !DILocation(line: 3752, column: 11, scope: !4699)
!4787 = !DILocation(line: 3752, column: 15, scope: !4699)
!4788 = !DILocation(line: 3752, column: 19, scope: !4699)
!4789 = !DILocation(line: 3752, column: 17, scope: !4699)
!4790 = !DILocation(line: 3752, column: 30, scope: !4699)
!4791 = !DILocation(line: 3752, column: 28, scope: !4699)
!4792 = !DILocation(line: 3752, column: 39, scope: !4699)
!4793 = !DILocation(line: 3752, column: 37, scope: !4699)
!4794 = !DILocation(line: 3752, column: 13, scope: !4699)
!4795 = !DILocation(line: 3752, column: 50, scope: !4699)
!4796 = !DILocation(line: 3752, column: 55, scope: !4699)
!4797 = !DILocation(line: 3752, column: 53, scope: !4699)
!4798 = !DILocation(line: 3752, column: 65, scope: !4699)
!4799 = !DILocation(line: 3752, column: 67, scope: !4699)
!4800 = !DILocation(line: 3752, column: 62, scope: !4699)
!4801 = !DILocation(line: 3752, column: 75, scope: !4699)
!4802 = !DILocation(line: 3752, column: 73, scope: !4699)
!4803 = !DILocation(line: 3752, column: 46, scope: !4699)
!4804 = !DILocation(line: 3752, column: 9, scope: !4699)
!4805 = !DILocation(line: 3753, column: 25, scope: !4699)
!4806 = !DILocation(line: 3753, column: 29, scope: !4699)
!4807 = !DILocation(line: 3753, column: 40, scope: !4699)
!4808 = !DILocation(line: 3753, column: 47, scope: !4699)
!4809 = !DILocation(line: 3753, column: 50, scope: !4699)
!4810 = !DILocation(line: 3754, column: 33, scope: !4699)
!4811 = !DILocation(line: 3754, column: 43, scope: !4699)
!4812 = !DILocation(line: 3754, column: 53, scope: !4699)
!4813 = !DILocation(line: 3753, column: 6, scope: !4699)
!4814 = !DILocation(line: 3755, column: 16, scope: !4699)
!4815 = !DILocation(line: 3758, column: 28, scope: !4699)
!4816 = !DILocation(line: 3758, column: 32, scope: !4699)
!4817 = !DILocation(line: 3758, column: 43, scope: !4699)
!4818 = !DILocation(line: 3758, column: 50, scope: !4699)
!4819 = !DILocation(line: 3758, column: 53, scope: !4699)
!4820 = !DILocation(line: 3758, column: 63, scope: !4699)
!4821 = !DILocation(line: 3758, column: 74, scope: !4699)
!4822 = !DILocation(line: 3758, column: 6, scope: !4699)
!4823 = !DILocation(line: 3761, column: 28, scope: !4699)
!4824 = !DILocation(line: 3761, column: 35, scope: !4699)
!4825 = !DILocation(line: 3761, column: 38, scope: !4699)
!4826 = !DILocation(line: 3761, column: 49, scope: !4699)
!4827 = !DILocation(line: 3761, column: 56, scope: !4699)
!4828 = !DILocation(line: 3761, column: 59, scope: !4699)
!4829 = !DILocation(line: 3762, column: 28, scope: !4699)
!4830 = !DILocation(line: 3762, column: 35, scope: !4699)
!4831 = !DILocation(line: 3762, column: 38, scope: !4699)
!4832 = !DILocation(line: 3762, column: 48, scope: !4699)
!4833 = !DILocation(line: 3762, column: 59, scope: !4699)
!4834 = !DILocation(line: 3762, column: 64, scope: !4699)
!4835 = !DILocation(line: 3762, column: 73, scope: !4699)
!4836 = !DILocation(line: 3763, column: 27, scope: !4699)
!4837 = !DILocation(line: 3763, column: 35, scope: !4699)
!4838 = !DILocation(line: 3763, column: 43, scope: !4699)
!4839 = !DILocation(line: 3763, column: 52, scope: !4699)
!4840 = !DILocation(line: 3761, column: 6, scope: !4699)
!4841 = !DILocation(line: 3766, column: 10, scope: !4842)
!4842 = distinct !DILexicalBlock(scope: !4699, file: !3, line: 3766, column: 10)
!4843 = !DILocation(line: 3766, column: 10, scope: !4699)
!4844 = !DILocation(line: 3768, column: 24, scope: !4845)
!4845 = distinct !DILexicalBlock(scope: !4842, file: !3, line: 3766, column: 25)
!4846 = !DILocation(line: 3768, column: 8, scope: !4845)
!4847 = !DILocation(line: 3768, column: 22, scope: !4845)
!4848 = !DILocation(line: 3769, column: 20, scope: !4845)
!4849 = !DILocation(line: 3770, column: 6, scope: !4845)
!4850 = !DILocation(line: 3771, column: 10, scope: !4851)
!4851 = distinct !DILexicalBlock(scope: !4699, file: !3, line: 3771, column: 10)
!4852 = !DILocation(line: 3771, column: 10, scope: !4699)
!4853 = !DILocation(line: 3772, column: 24, scope: !4854)
!4854 = distinct !DILexicalBlock(scope: !4851, file: !3, line: 3771, column: 25)
!4855 = !DILocation(line: 3772, column: 45, scope: !4854)
!4856 = !DILocation(line: 3772, column: 64, scope: !4854)
!4857 = !DILocation(line: 3772, column: 77, scope: !4854)
!4858 = !DILocation(line: 3772, column: 8, scope: !4854)
!4859 = !DILocation(line: 3772, column: 22, scope: !4854)
!4860 = !DILocation(line: 3773, column: 20, scope: !4854)
!4861 = !DILocation(line: 3774, column: 6, scope: !4854)
!4862 = !DILocation(line: 3776, column: 39, scope: !4699)
!4863 = !DILocation(line: 3776, column: 6, scope: !4699)
!4864 = !DILocation(line: 3776, column: 13, scope: !4699)
!4865 = !DILocation(line: 3776, column: 28, scope: !4699)
!4866 = !DILocation(line: 3776, column: 37, scope: !4699)
!4867 = !DILocation(line: 3779, column: 25, scope: !4699)
!4868 = !DILocation(line: 3779, column: 6, scope: !4699)
!4869 = !DILocation(line: 3779, column: 14, scope: !4699)
!4870 = !DILocation(line: 3779, column: 23, scope: !4699)
!4871 = !DILocation(line: 3781, column: 13, scope: !4699)
!4872 = !DILocation(line: 3782, column: 5, scope: !4699)
!4873 = !DILocation(line: 3736, column: 33, scope: !4694)
!4874 = !DILocation(line: 3736, column: 5, scope: !4694)
!4875 = distinct !{!4875, !4697, !4876}
!4876 = !DILocation(line: 3782, column: 5, scope: !4690)
!4877 = !DILocation(line: 3783, column: 4, scope: !4691)
!4878 = !DILocation(line: 3735, column: 32, scope: !4685)
!4879 = !DILocation(line: 3735, column: 4, scope: !4685)
!4880 = distinct !{!4880, !4688, !4881}
!4881 = !DILocation(line: 3783, column: 4, scope: !4681)
!4882 = !DILocation(line: 3784, column: 3, scope: !4682)
!4883 = !DILocation(line: 3733, column: 30, scope: !4676)
!4884 = !DILocation(line: 3733, column: 3, scope: !4676)
!4885 = distinct !{!4885, !4679, !4886}
!4886 = !DILocation(line: 3784, column: 3, scope: !4673)
!4887 = !DILocation(line: 3786, column: 14, scope: !4362)
!4888 = !DILocation(line: 3786, column: 11, scope: !4362)
!4889 = !DILocation(line: 3787, column: 2, scope: !4357)
!4890 = !DILocation(line: 3787, column: 2, scope: !4362)
!4891 = !DILocation(line: 3639, column: 40, scope: !4357)
!4892 = !DILocation(line: 3639, column: 2, scope: !4357)
!4893 = distinct !{!4893, !4360, !4894}
!4894 = !DILocation(line: 3787, column: 2, scope: !4354)
!4895 = !DILocation(line: 3789, column: 13, scope: !4896)
!4896 = distinct !DILexicalBlock(scope: !3713, file: !3, line: 3789, column: 2)
!4897 = !DILocation(line: 3789, column: 7, scope: !4896)
!4898 = !DILocation(line: 3789, column: 18, scope: !4899)
!4899 = distinct !DILexicalBlock(scope: !4896, file: !3, line: 3789, column: 2)
!4900 = !DILocation(line: 3789, column: 26, scope: !4899)
!4901 = !DILocation(line: 3789, column: 24, scope: !4899)
!4902 = !DILocation(line: 3789, column: 2, scope: !4896)
!4903 = !DILocalVariable(name: "e", scope: !4904, file: !3, line: 3790, type: !2638)
!4904 = distinct !DILexicalBlock(scope: !4899, file: !3, line: 3789, column: 44)
!4905 = !DILocation(line: 3790, column: 12, scope: !4904)
!4906 = !DILocation(line: 3790, column: 16, scope: !4904)
!4907 = !DILocation(line: 3790, column: 23, scope: !4904)
!4908 = !DILocation(line: 3790, column: 31, scope: !4904)
!4909 = !DILocation(line: 3790, column: 38, scope: !4904)
!4910 = !DILocalVariable(name: "numFinalEdges", scope: !4904, file: !3, line: 3791, type: !27)
!4911 = !DILocation(line: 3791, column: 7, scope: !4904)
!4912 = !DILocation(line: 3791, column: 23, scope: !4904)
!4913 = !DILocation(line: 3791, column: 32, scope: !4904)
!4914 = !DILocalVariable(name: "mapIndex", scope: !4904, file: !3, line: 3792, type: !27)
!4915 = !DILocation(line: 3792, column: 7, scope: !4904)
!4916 = !DILocation(line: 3792, column: 40, scope: !4904)
!4917 = !DILocation(line: 3792, column: 44, scope: !4904)
!4918 = !DILocation(line: 3792, column: 18, scope: !4904)
!4919 = !DILocalVariable(name: "x", scope: !4904, file: !3, line: 3793, type: !27)
!4920 = !DILocation(line: 3793, column: 7, scope: !4904)
!4921 = !DILocalVariable(name: "vertIdx", scope: !4904, file: !3, line: 3794, type: !4922)
!4922 = !DICompositeType(tag: DW_TAG_array_type, baseType: !27, size: 64, elements: !477)
!4923 = !DILocation(line: 3794, column: 7, scope: !4904)
!4924 = !DILocalVariable(name: "edgeIdx", scope: !4904, file: !3, line: 3795, type: !27)
!4925 = !DILocation(line: 3795, column: 7, scope: !4904)
!4926 = !DILocation(line: 3795, column: 17, scope: !4904)
!4927 = !DILocalVariable(name: "v", scope: !4904, file: !3, line: 3797, type: !2613)
!4928 = !DILocation(line: 3797, column: 12, scope: !4904)
!4929 = !DILocation(line: 3798, column: 31, scope: !4904)
!4930 = !DILocation(line: 3798, column: 7, scope: !4904)
!4931 = !DILocation(line: 3798, column: 5, scope: !4904)
!4932 = !DILocation(line: 3799, column: 16, scope: !4904)
!4933 = !DILocation(line: 3799, column: 3, scope: !4904)
!4934 = !DILocation(line: 3799, column: 14, scope: !4904)
!4935 = !DILocation(line: 3800, column: 31, scope: !4904)
!4936 = !DILocation(line: 3800, column: 7, scope: !4904)
!4937 = !DILocation(line: 3800, column: 5, scope: !4904)
!4938 = !DILocation(line: 3801, column: 16, scope: !4904)
!4939 = !DILocation(line: 3801, column: 3, scope: !4904)
!4940 = !DILocation(line: 3801, column: 14, scope: !4904)
!4941 = !DILocation(line: 3803, column: 37, scope: !4904)
!4942 = !DILocation(line: 3803, column: 3, scope: !4904)
!4943 = !DILocation(line: 3803, column: 10, scope: !4904)
!4944 = !DILocation(line: 3803, column: 18, scope: !4904)
!4945 = !DILocation(line: 3803, column: 25, scope: !4904)
!4946 = !DILocation(line: 3803, column: 35, scope: !4904)
!4947 = !DILocation(line: 3804, column: 37, scope: !4904)
!4948 = !DILocation(line: 3804, column: 3, scope: !4904)
!4949 = !DILocation(line: 3804, column: 10, scope: !4904)
!4950 = !DILocation(line: 3804, column: 18, scope: !4904)
!4951 = !DILocation(line: 3804, column: 25, scope: !4904)
!4952 = !DILocation(line: 3804, column: 35, scope: !4904)
!4953 = !DILocation(line: 3806, column: 7, scope: !4954)
!4954 = distinct !DILexicalBlock(scope: !4904, file: !3, line: 3806, column: 7)
!4955 = !DILocation(line: 3806, column: 15, scope: !4954)
!4956 = !DILocation(line: 3806, column: 20, scope: !4954)
!4957 = !DILocation(line: 3806, column: 23, scope: !4954)
!4958 = !DILocation(line: 3806, column: 7, scope: !4904)
!4959 = !DILocation(line: 3807, column: 25, scope: !4954)
!4960 = !DILocation(line: 3807, column: 31, scope: !4954)
!4961 = !DILocation(line: 3807, column: 40, scope: !4954)
!4962 = !DILocation(line: 3807, column: 4, scope: !4954)
!4963 = !DILocation(line: 3807, column: 14, scope: !4954)
!4964 = !DILocation(line: 3807, column: 23, scope: !4954)
!4965 = !DILocation(line: 3810, column: 49, scope: !4904)
!4966 = !DILocation(line: 3810, column: 39, scope: !4904)
!4967 = !DILocation(line: 3810, column: 43, scope: !4904)
!4968 = !DILocation(line: 3810, column: 12, scope: !4904)
!4969 = !DILocation(line: 3810, column: 5, scope: !4904)
!4970 = !DILocation(line: 3810, column: 47, scope: !4904)
!4971 = !DILocation(line: 3812, column: 10, scope: !4972)
!4972 = distinct !DILexicalBlock(scope: !4904, file: !3, line: 3812, column: 3)
!4973 = !DILocation(line: 3812, column: 8, scope: !4972)
!4974 = !DILocation(line: 3812, column: 15, scope: !4975)
!4975 = distinct !DILexicalBlock(scope: !4972, file: !3, line: 3812, column: 3)
!4976 = !DILocation(line: 3812, column: 19, scope: !4975)
!4977 = !DILocation(line: 3812, column: 28, scope: !4975)
!4978 = !DILocation(line: 3812, column: 17, scope: !4975)
!4979 = !DILocation(line: 3812, column: 3, scope: !4972)
!4980 = !DILocalVariable(name: "w", scope: !4981, file: !3, line: 3813, type: !517)
!4981 = distinct !DILexicalBlock(scope: !4975, file: !3, line: 3812, column: 38)
!4982 = !DILocation(line: 3813, column: 10, scope: !4981)
!4983 = !DILocation(line: 3814, column: 19, scope: !4981)
!4984 = !DILocation(line: 3814, column: 11, scope: !4981)
!4985 = !DILocation(line: 3814, column: 24, scope: !4981)
!4986 = !DILocation(line: 3814, column: 33, scope: !4981)
!4987 = !DILocation(line: 3814, column: 23, scope: !4981)
!4988 = !DILocation(line: 3814, column: 21, scope: !4981)
!4989 = !DILocation(line: 3814, column: 4, scope: !4981)
!4990 = !DILocation(line: 3814, column: 9, scope: !4981)
!4991 = !DILocation(line: 3815, column: 15, scope: !4981)
!4992 = !DILocation(line: 3815, column: 13, scope: !4981)
!4993 = !DILocation(line: 3815, column: 4, scope: !4981)
!4994 = !DILocation(line: 3815, column: 9, scope: !4981)
!4995 = !DILocation(line: 3816, column: 24, scope: !4981)
!4996 = !DILocation(line: 3816, column: 29, scope: !4981)
!4997 = !DILocation(line: 3816, column: 36, scope: !4981)
!4998 = !DILocation(line: 3816, column: 40, scope: !4981)
!4999 = !DILocation(line: 3816, column: 49, scope: !4981)
!5000 = !DILocation(line: 3816, column: 55, scope: !4981)
!5001 = !DILocation(line: 3816, column: 4, scope: !4981)
!5002 = !DILocation(line: 3817, column: 8, scope: !5003)
!5003 = distinct !DILexicalBlock(scope: !4981, file: !3, line: 3817, column: 8)
!5004 = !DILocation(line: 3817, column: 8, scope: !4981)
!5005 = !DILocation(line: 3818, column: 6, scope: !5006)
!5006 = distinct !DILexicalBlock(scope: !5003, file: !3, line: 3817, column: 23)
!5007 = !DILocation(line: 3818, column: 20, scope: !5006)
!5008 = !DILocation(line: 3819, column: 18, scope: !5006)
!5009 = !DILocation(line: 3820, column: 4, scope: !5006)
!5010 = !DILocation(line: 3821, column: 11, scope: !4981)
!5011 = !DILocation(line: 3822, column: 3, scope: !4981)
!5012 = !DILocation(line: 3812, column: 34, scope: !4975)
!5013 = !DILocation(line: 3812, column: 3, scope: !4975)
!5014 = distinct !{!5014, !4979, !5015}
!5015 = !DILocation(line: 3822, column: 3, scope: !4972)
!5016 = !DILocation(line: 3824, column: 7, scope: !5017)
!5017 = distinct !DILexicalBlock(scope: !4904, file: !3, line: 3824, column: 7)
!5018 = !DILocation(line: 3824, column: 7, scope: !4904)
!5019 = !DILocation(line: 3826, column: 11, scope: !5020)
!5020 = distinct !DILexicalBlock(scope: !5021, file: !3, line: 3826, column: 4)
!5021 = distinct !DILexicalBlock(scope: !5017, file: !3, line: 3824, column: 20)
!5022 = !DILocation(line: 3826, column: 9, scope: !5020)
!5023 = !DILocation(line: 3826, column: 16, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !5020, file: !3, line: 3826, column: 4)
!5025 = !DILocation(line: 3826, column: 20, scope: !5024)
!5026 = !DILocation(line: 3826, column: 18, scope: !5024)
!5027 = !DILocation(line: 3826, column: 4, scope: !5020)
!5028 = !DILocation(line: 3827, column: 27, scope: !5029)
!5029 = distinct !DILexicalBlock(scope: !5024, file: !3, line: 3826, column: 40)
!5030 = !DILocation(line: 3827, column: 31, scope: !5029)
!5031 = !DILocation(line: 3827, column: 42, scope: !5029)
!5032 = !DILocation(line: 3827, column: 49, scope: !5029)
!5033 = !DILocation(line: 3827, column: 52, scope: !5029)
!5034 = !DILocation(line: 3827, column: 62, scope: !5029)
!5035 = !DILocation(line: 3827, column: 71, scope: !5029)
!5036 = !DILocation(line: 3827, column: 81, scope: !5029)
!5037 = !DILocation(line: 3827, column: 79, scope: !5029)
!5038 = !DILocation(line: 3827, column: 5, scope: !5029)
!5039 = !DILocation(line: 3828, column: 4, scope: !5029)
!5040 = !DILocation(line: 3826, column: 35, scope: !5024)
!5041 = !DILocation(line: 3826, column: 4, scope: !5024)
!5042 = distinct !{!5042, !5027, !5043}
!5043 = !DILocation(line: 3828, column: 4, scope: !5020)
!5044 = !DILocation(line: 3829, column: 3, scope: !5021)
!5045 = !DILocation(line: 3831, column: 7, scope: !5046)
!5046 = distinct !DILexicalBlock(scope: !4904, file: !3, line: 3831, column: 7)
!5047 = !DILocation(line: 3831, column: 7, scope: !4904)
!5048 = !DILocation(line: 3832, column: 11, scope: !5049)
!5049 = distinct !DILexicalBlock(scope: !5050, file: !3, line: 3832, column: 4)
!5050 = distinct !DILexicalBlock(scope: !5046, file: !3, line: 3831, column: 22)
!5051 = !DILocation(line: 3832, column: 9, scope: !5049)
!5052 = !DILocation(line: 3832, column: 16, scope: !5053)
!5053 = distinct !DILexicalBlock(scope: !5049, file: !3, line: 3832, column: 4)
!5054 = !DILocation(line: 3832, column: 20, scope: !5053)
!5055 = !DILocation(line: 3832, column: 18, scope: !5053)
!5056 = !DILocation(line: 3832, column: 4, scope: !5049)
!5057 = !DILocation(line: 3833, column: 34, scope: !5058)
!5058 = distinct !DILexicalBlock(scope: !5053, file: !3, line: 3832, column: 40)
!5059 = !DILocation(line: 3833, column: 5, scope: !5058)
!5060 = !DILocation(line: 3833, column: 19, scope: !5058)
!5061 = !DILocation(line: 3833, column: 29, scope: !5058)
!5062 = !DILocation(line: 3833, column: 27, scope: !5058)
!5063 = !DILocation(line: 3833, column: 32, scope: !5058)
!5064 = !DILocation(line: 3834, column: 4, scope: !5058)
!5065 = !DILocation(line: 3832, column: 35, scope: !5053)
!5066 = !DILocation(line: 3832, column: 4, scope: !5053)
!5067 = distinct !{!5067, !5056, !5068}
!5068 = !DILocation(line: 3834, column: 4, scope: !5049)
!5069 = !DILocation(line: 3835, column: 3, scope: !5050)
!5070 = !DILocation(line: 3837, column: 14, scope: !4904)
!5071 = !DILocation(line: 3837, column: 11, scope: !4904)
!5072 = !DILocation(line: 3838, column: 2, scope: !4904)
!5073 = !DILocation(line: 3789, column: 35, scope: !4899)
!5074 = !DILocation(line: 3789, column: 2, scope: !4899)
!5075 = distinct !{!5075, !4902, !5076}
!5076 = !DILocation(line: 3838, column: 2, scope: !4896)
!5077 = !DILocation(line: 3840, column: 6, scope: !5078)
!5078 = distinct !DILexicalBlock(scope: !3713, file: !3, line: 3840, column: 6)
!5079 = !DILocation(line: 3840, column: 6, scope: !3713)
!5080 = !DILocalVariable(name: "ldata", scope: !5081, file: !3, line: 3841, type: !1968)
!5081 = distinct !DILexicalBlock(scope: !5078, file: !3, line: 3840, column: 20)
!5082 = !DILocation(line: 3841, column: 15, scope: !5081)
!5083 = !DILocation(line: 3841, column: 24, scope: !5081)
!5084 = !DILocation(line: 3841, column: 31, scope: !5081)
!5085 = !DILocation(line: 3841, column: 34, scope: !5081)
!5086 = !DILocalVariable(name: "dmldata", scope: !5081, file: !3, line: 3842, type: !1968)
!5087 = !DILocation(line: 3842, column: 15, scope: !5081)
!5088 = !DILocation(line: 3842, column: 26, scope: !5081)
!5089 = !DILocation(line: 3842, column: 30, scope: !5081)
!5090 = !DILocalVariable(name: "numlayer", scope: !5081, file: !3, line: 3843, type: !27)
!5091 = !DILocation(line: 3843, column: 7, scope: !5081)
!5092 = !DILocation(line: 3843, column: 46, scope: !5081)
!5093 = !DILocation(line: 3843, column: 18, scope: !5081)
!5094 = !DILocalVariable(name: "dmnumlayer", scope: !5081, file: !3, line: 3844, type: !27)
!5095 = !DILocation(line: 3844, column: 7, scope: !5081)
!5096 = !DILocation(line: 3844, column: 48, scope: !5081)
!5097 = !DILocation(line: 3844, column: 20, scope: !5081)
!5098 = !DILocation(line: 3846, column: 10, scope: !5099)
!5099 = distinct !DILexicalBlock(scope: !5081, file: !3, line: 3846, column: 3)
!5100 = !DILocation(line: 3846, column: 8, scope: !5099)
!5101 = !DILocation(line: 3846, column: 15, scope: !5102)
!5102 = distinct !DILexicalBlock(scope: !5099, file: !3, line: 3846, column: 3)
!5103 = !DILocation(line: 3846, column: 19, scope: !5102)
!5104 = !DILocation(line: 3846, column: 17, scope: !5102)
!5105 = !DILocation(line: 3846, column: 28, scope: !5102)
!5106 = !DILocation(line: 3846, column: 31, scope: !5102)
!5107 = !DILocation(line: 3846, column: 35, scope: !5102)
!5108 = !DILocation(line: 3846, column: 33, scope: !5102)
!5109 = !DILocation(line: 0, scope: !5102)
!5110 = !DILocation(line: 3846, column: 3, scope: !5099)
!5111 = !DILocation(line: 3847, column: 19, scope: !5102)
!5112 = !DILocation(line: 3847, column: 23, scope: !5102)
!5113 = !DILocation(line: 3847, column: 28, scope: !5102)
!5114 = !DILocation(line: 3847, column: 35, scope: !5102)
!5115 = !DILocation(line: 3847, column: 39, scope: !5102)
!5116 = !DILocation(line: 3847, column: 4, scope: !5102)
!5117 = !DILocation(line: 3846, column: 48, scope: !5102)
!5118 = !DILocation(line: 3846, column: 3, scope: !5102)
!5119 = distinct !{!5119, !5110, !5120}
!5120 = !DILocation(line: 3847, column: 40, scope: !5099)
!5121 = !DILocation(line: 3848, column: 2, scope: !5081)
!5122 = !DILocation(line: 3850, column: 13, scope: !5123)
!5123 = distinct !DILexicalBlock(scope: !3713, file: !3, line: 3850, column: 2)
!5124 = !DILocation(line: 3850, column: 7, scope: !5123)
!5125 = !DILocation(line: 3850, column: 18, scope: !5126)
!5126 = distinct !DILexicalBlock(scope: !5123, file: !3, line: 3850, column: 2)
!5127 = !DILocation(line: 3850, column: 26, scope: !5126)
!5128 = !DILocation(line: 3850, column: 24, scope: !5126)
!5129 = !DILocation(line: 3850, column: 2, scope: !5123)
!5130 = !DILocalVariable(name: "v", scope: !5131, file: !3, line: 3851, type: !2613)
!5131 = distinct !DILexicalBlock(scope: !5126, file: !3, line: 3850, column: 44)
!5132 = !DILocation(line: 3851, column: 12, scope: !5131)
!5133 = !DILocation(line: 3851, column: 16, scope: !5131)
!5134 = !DILocation(line: 3851, column: 23, scope: !5131)
!5135 = !DILocation(line: 3851, column: 31, scope: !5131)
!5136 = !DILocation(line: 3851, column: 38, scope: !5131)
!5137 = !DILocalVariable(name: "mapIndex", scope: !5131, file: !3, line: 3852, type: !27)
!5138 = !DILocation(line: 3852, column: 7, scope: !5131)
!5139 = !DILocation(line: 3852, column: 40, scope: !5131)
!5140 = !DILocation(line: 3852, column: 47, scope: !5131)
!5141 = !DILocation(line: 3852, column: 51, scope: !5131)
!5142 = !DILocation(line: 3852, column: 18, scope: !5131)
!5143 = !DILocalVariable(name: "vertIdx", scope: !5131, file: !3, line: 3853, type: !27)
!5144 = !DILocation(line: 3853, column: 7, scope: !5131)
!5145 = !DILocation(line: 3855, column: 13, scope: !5131)
!5146 = !DILocation(line: 3855, column: 11, scope: !5131)
!5147 = !DILocation(line: 3857, column: 37, scope: !5131)
!5148 = !DILocation(line: 3857, column: 3, scope: !5131)
!5149 = !DILocation(line: 3857, column: 10, scope: !5131)
!5150 = !DILocation(line: 3857, column: 18, scope: !5131)
!5151 = !DILocation(line: 3857, column: 25, scope: !5131)
!5152 = !DILocation(line: 3857, column: 35, scope: !5131)
!5153 = !DILocation(line: 3860, column: 50, scope: !5131)
!5154 = !DILocation(line: 3860, column: 40, scope: !5131)
!5155 = !DILocation(line: 3860, column: 44, scope: !5131)
!5156 = !DILocation(line: 3860, column: 13, scope: !5131)
!5157 = !DILocation(line: 3860, column: 5, scope: !5131)
!5158 = !DILocation(line: 3860, column: 48, scope: !5131)
!5159 = !DILocation(line: 3862, column: 21, scope: !5131)
!5160 = !DILocation(line: 3862, column: 26, scope: !5131)
!5161 = !DILocation(line: 3862, column: 33, scope: !5131)
!5162 = !DILocation(line: 3862, column: 37, scope: !5131)
!5163 = !DILocation(line: 3862, column: 46, scope: !5131)
!5164 = !DILocation(line: 3862, column: 3, scope: !5131)
!5165 = !DILocation(line: 3864, column: 7, scope: !5166)
!5166 = distinct !DILexicalBlock(scope: !5131, file: !3, line: 3864, column: 7)
!5167 = !DILocation(line: 3864, column: 7, scope: !5131)
!5168 = !DILocation(line: 3865, column: 21, scope: !5169)
!5169 = distinct !DILexicalBlock(scope: !5166, file: !3, line: 3864, column: 22)
!5170 = !DILocation(line: 3865, column: 5, scope: !5169)
!5171 = !DILocation(line: 3865, column: 19, scope: !5169)
!5172 = !DILocation(line: 3866, column: 17, scope: !5169)
!5173 = !DILocation(line: 3867, column: 3, scope: !5169)
!5174 = !DILocation(line: 3868, column: 10, scope: !5131)
!5175 = !DILocation(line: 3869, column: 2, scope: !5131)
!5176 = !DILocation(line: 3850, column: 35, scope: !5126)
!5177 = !DILocation(line: 3850, column: 2, scope: !5126)
!5178 = distinct !{!5178, !5129, !5179}
!5179 = !DILocation(line: 3869, column: 2, scope: !5123)
!5180 = !DILocation(line: 3871, column: 26, scope: !3713)
!5181 = !DILocation(line: 3871, column: 2, scope: !3713)
!5182 = !DILocation(line: 3871, column: 9, scope: !3713)
!5183 = !DILocation(line: 3871, column: 12, scope: !3713)
!5184 = !DILocation(line: 3871, column: 24, scope: !3713)
!5185 = !DILocation(line: 3872, column: 26, scope: !3713)
!5186 = !DILocation(line: 3872, column: 2, scope: !3713)
!5187 = !DILocation(line: 3872, column: 9, scope: !3713)
!5188 = !DILocation(line: 3872, column: 12, scope: !3713)
!5189 = !DILocation(line: 3872, column: 24, scope: !3713)
!5190 = !DILocation(line: 3873, column: 30, scope: !3713)
!5191 = !DILocation(line: 3873, column: 2, scope: !3713)
!5192 = !DILocation(line: 3873, column: 9, scope: !3713)
!5193 = !DILocation(line: 3873, column: 12, scope: !3713)
!5194 = !DILocation(line: 3873, column: 28, scope: !3713)
!5195 = !DILocation(line: 3874, column: 26, scope: !3713)
!5196 = !DILocation(line: 3874, column: 2, scope: !3713)
!5197 = !DILocation(line: 3874, column: 9, scope: !3713)
!5198 = !DILocation(line: 3874, column: 12, scope: !3713)
!5199 = !DILocation(line: 3874, column: 24, scope: !3713)
!5200 = !DILocation(line: 3875, column: 26, scope: !3713)
!5201 = !DILocation(line: 3875, column: 2, scope: !3713)
!5202 = !DILocation(line: 3875, column: 9, scope: !3713)
!5203 = !DILocation(line: 3875, column: 12, scope: !3713)
!5204 = !DILocation(line: 3875, column: 24, scope: !3713)
!5205 = !DILocation(line: 3878, column: 2, scope: !3713)
!5206 = !DILocation(line: 3878, column: 9, scope: !3713)
!5207 = !DILocation(line: 3878, column: 12, scope: !3713)
!5208 = !DILocation(line: 3878, column: 18, scope: !3713)
!5209 = !DILocation(line: 3884, column: 2, scope: !3713)
!5210 = !DILocation(line: 3886, column: 9, scope: !3713)
!5211 = !DILocation(line: 3886, column: 2, scope: !3713)
!5212 = distinct !DISubprogram(name: "subsurf_calculate_limit_positions", scope: !3, file: !3, line: 3991, type: !5213, scopeLine: 3992, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!5213 = !DISubroutineType(types: !5214)
!5214 = !{null, !5215, !1301}
!5215 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5216, size: 64)
!5216 = !DIDerivedType(tag: DW_TAG_typedef, name: "Mesh", file: !5217, line: 133, baseType: !5218)
!5217 = !DIFile(filename: "blender/source/blender/makesdna/DNA_mesh_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5218 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Mesh", file: !5217, line: 58, size: 11008, elements: !5219)
!5219 = !{!5220, !5221, !5222, !5223, !5224, !5227, !5228, !5234, !5235, !5245, !5246, !5252, !5260, !5261, !5262, !5275, !5276, !5277, !5278, !5286, !5288, !5291, !5292, !5293, !5294, !5295, !5296, !5297, !5298, !5299, !5300, !5301, !5302, !5303, !5304, !5305, !5306, !5307, !5308, !5309, !5310, !5311, !5312, !5313, !5314, !5315, !5316, !5317, !5318}
!5220 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !5218, file: !5217, line: 59, baseType: !106, size: 960)
!5221 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !5218, file: !5217, line: 60, baseType: !169, size: 64, offset: 960)
!5222 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !5218, file: !5217, line: 62, baseType: !1368, size: 64, offset: 1024)
!5223 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !5218, file: !5217, line: 64, baseType: !1365, size: 64, offset: 1088)
!5224 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !5218, file: !5217, line: 65, baseType: !5225, size: 64, offset: 1152)
!5225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5226, size: 64)
!5226 = !DICompositeType(tag: DW_TAG_structure_type, name: "Key", file: !5217, line: 42, flags: DIFlagFwdDecl)
!5227 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !5218, file: !5217, line: 66, baseType: !100, size: 64, offset: 1216)
!5228 = !DIDerivedType(tag: DW_TAG_member, name: "mselect", scope: !5218, file: !5217, line: 67, baseType: !5229, size: 64, offset: 1280)
!5229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5230, size: 64)
!5230 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MSelect", file: !684, line: 154, size: 64, elements: !5231)
!5231 = !{!5232, !5233}
!5232 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !5230, file: !684, line: 155, baseType: !27, size: 32)
!5233 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5230, file: !684, line: 156, baseType: !27, size: 32, offset: 32)
!5234 = !DIDerivedType(tag: DW_TAG_member, name: "mpoly", scope: !5218, file: !5217, line: 71, baseType: !1284, size: 64, offset: 1344)
!5235 = !DIDerivedType(tag: DW_TAG_member, name: "mtpoly", scope: !5218, file: !5217, line: 72, baseType: !5236, size: 64, offset: 1408)
!5236 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5237, size: 64)
!5237 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTexPoly", file: !684, line: 93, size: 128, elements: !5238)
!5238 = !{!5239, !5240, !5241, !5242, !5243, !5244}
!5239 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !5237, file: !684, line: 94, baseType: !432, size: 64)
!5240 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5237, file: !684, line: 95, baseType: !37, size: 8, offset: 64)
!5241 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !5237, file: !684, line: 95, baseType: !37, size: 8, offset: 72)
!5242 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !5237, file: !684, line: 96, baseType: !135, size: 16, offset: 80)
!5243 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !5237, file: !684, line: 96, baseType: !135, size: 16, offset: 96)
!5244 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5237, file: !684, line: 96, baseType: !135, size: 16, offset: 112)
!5245 = !DIDerivedType(tag: DW_TAG_member, name: "mloop", scope: !5218, file: !5217, line: 73, baseType: !1293, size: 64, offset: 1472)
!5246 = !DIDerivedType(tag: DW_TAG_member, name: "mloopuv", scope: !5218, file: !5217, line: 74, baseType: !5247, size: 64, offset: 1536)
!5247 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5248, size: 64)
!5248 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoopUV", file: !684, line: 109, size: 96, elements: !5249)
!5249 = !{!5250, !5251}
!5250 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !5248, file: !684, line: 110, baseType: !517, size: 64)
!5251 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5248, file: !684, line: 111, baseType: !27, size: 32, offset: 64)
!5252 = !DIDerivedType(tag: DW_TAG_member, name: "mloopcol", scope: !5218, file: !5217, line: 75, baseType: !5253, size: 64, offset: 1600)
!5253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5254, size: 64)
!5254 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoopCol", file: !684, line: 129, size: 32, elements: !5255)
!5255 = !{!5256, !5257, !5258, !5259}
!5256 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !5254, file: !684, line: 130, baseType: !37, size: 8)
!5257 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !5254, file: !684, line: 130, baseType: !37, size: 8, offset: 8)
!5258 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !5254, file: !684, line: 130, baseType: !37, size: 8, offset: 16)
!5259 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !5254, file: !684, line: 130, baseType: !37, size: 8, offset: 24)
!5260 = !DIDerivedType(tag: DW_TAG_member, name: "mface", scope: !5218, file: !5217, line: 80, baseType: !1894, size: 64, offset: 1664)
!5261 = !DIDerivedType(tag: DW_TAG_member, name: "mtface", scope: !5218, file: !5217, line: 81, baseType: !2121, size: 64, offset: 1728)
!5262 = !DIDerivedType(tag: DW_TAG_member, name: "tface", scope: !5218, file: !5217, line: 82, baseType: !5263, size: 64, offset: 1792)
!5263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5264, size: 64)
!5264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TFace", file: !5217, line: 136, size: 512, elements: !5265)
!5265 = !{!5266, !5267, !5268, !5270, !5271, !5272, !5273, !5274}
!5266 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !5264, file: !5217, line: 137, baseType: !41, size: 64)
!5267 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !5264, file: !5217, line: 138, baseType: !2125, size: 256, offset: 64)
!5268 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !5264, file: !5217, line: 139, baseType: !5269, size: 128, offset: 320)
!5269 = !DICompositeType(tag: DW_TAG_array_type, baseType: !84, size: 128, elements: !287)
!5270 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5264, file: !5217, line: 140, baseType: !37, size: 8, offset: 448)
!5271 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !5264, file: !5217, line: 140, baseType: !37, size: 8, offset: 456)
!5272 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !5264, file: !5217, line: 141, baseType: !135, size: 16, offset: 464)
!5273 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !5264, file: !5217, line: 141, baseType: !135, size: 16, offset: 480)
!5274 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !5264, file: !5217, line: 141, baseType: !135, size: 16, offset: 496)
!5275 = !DIDerivedType(tag: DW_TAG_member, name: "mvert", scope: !5218, file: !5217, line: 83, baseType: !1276, size: 64, offset: 1856)
!5276 = !DIDerivedType(tag: DW_TAG_member, name: "medge", scope: !5218, file: !5217, line: 84, baseType: !1882, size: 64, offset: 1920)
!5277 = !DIDerivedType(tag: DW_TAG_member, name: "dvert", scope: !5218, file: !5217, line: 85, baseType: !682, size: 64, offset: 1984)
!5278 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !5218, file: !5217, line: 89, baseType: !5279, size: 64, offset: 2048)
!5279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5280, size: 64)
!5280 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MCol", file: !684, line: 74, size: 32, elements: !5281)
!5281 = !{!5282, !5283, !5284, !5285}
!5282 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !5280, file: !684, line: 75, baseType: !37, size: 8)
!5283 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !5280, file: !684, line: 75, baseType: !37, size: 8, offset: 8)
!5284 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !5280, file: !684, line: 75, baseType: !37, size: 8, offset: 16)
!5285 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !5280, file: !684, line: 75, baseType: !37, size: 8, offset: 24)
!5286 = !DIDerivedType(tag: DW_TAG_member, name: "texcomesh", scope: !5218, file: !5217, line: 90, baseType: !5287, size: 64, offset: 2112)
!5287 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5218, size: 64)
!5288 = !DIDerivedType(tag: DW_TAG_member, name: "edit_btmesh", scope: !5218, file: !5217, line: 93, baseType: !5289, size: 64, offset: 2176)
!5289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5290, size: 64)
!5290 = !DICompositeType(tag: DW_TAG_structure_type, name: "BMEditMesh", file: !5217, line: 93, flags: DIFlagFwdDecl)
!5291 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !5218, file: !5217, line: 95, baseType: !19, size: 1600, offset: 2240)
!5292 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !5218, file: !5217, line: 95, baseType: !19, size: 1600, offset: 3840)
!5293 = !DIDerivedType(tag: DW_TAG_member, name: "fdata", scope: !5218, file: !5217, line: 95, baseType: !19, size: 1600, offset: 5440)
!5294 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !5218, file: !5217, line: 98, baseType: !19, size: 1600, offset: 7040)
!5295 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !5218, file: !5217, line: 98, baseType: !19, size: 1600, offset: 8640)
!5296 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !5218, file: !5217, line: 101, baseType: !27, size: 32, offset: 10240)
!5297 = !DIDerivedType(tag: DW_TAG_member, name: "totedge", scope: !5218, file: !5217, line: 101, baseType: !27, size: 32, offset: 10272)
!5298 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !5218, file: !5217, line: 101, baseType: !27, size: 32, offset: 10304)
!5299 = !DIDerivedType(tag: DW_TAG_member, name: "totselect", scope: !5218, file: !5217, line: 101, baseType: !27, size: 32, offset: 10336)
!5300 = !DIDerivedType(tag: DW_TAG_member, name: "totpoly", scope: !5218, file: !5217, line: 104, baseType: !27, size: 32, offset: 10368)
!5301 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !5218, file: !5217, line: 104, baseType: !27, size: 32, offset: 10400)
!5302 = !DIDerivedType(tag: DW_TAG_member, name: "act_face", scope: !5218, file: !5217, line: 111, baseType: !27, size: 32, offset: 10432)
!5303 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !5218, file: !5217, line: 114, baseType: !204, size: 96, offset: 10464)
!5304 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5218, file: !5217, line: 115, baseType: !204, size: 96, offset: 10560)
!5305 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !5218, file: !5217, line: 116, baseType: !204, size: 96, offset: 10656)
!5306 = !DIDerivedType(tag: DW_TAG_member, name: "drawflag", scope: !5218, file: !5217, line: 118, baseType: !27, size: 32, offset: 10752)
!5307 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !5218, file: !5217, line: 119, baseType: !135, size: 16, offset: 10784)
!5308 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5218, file: !5217, line: 119, baseType: !135, size: 16, offset: 10800)
!5309 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !5218, file: !5217, line: 120, baseType: !90, size: 32, offset: 10816)
!5310 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !5218, file: !5217, line: 121, baseType: !27, size: 32, offset: 10848)
!5311 = !DIDerivedType(tag: DW_TAG_member, name: "cd_flag", scope: !5218, file: !5217, line: 124, baseType: !37, size: 8, offset: 10880)
!5312 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !5218, file: !5217, line: 124, baseType: !37, size: 8, offset: 10888)
!5313 = !DIDerivedType(tag: DW_TAG_member, name: "subdiv", scope: !5218, file: !5217, line: 126, baseType: !37, size: 8, offset: 10896)
!5314 = !DIDerivedType(tag: DW_TAG_member, name: "subdivr", scope: !5218, file: !5217, line: 126, baseType: !37, size: 8, offset: 10904)
!5315 = !DIDerivedType(tag: DW_TAG_member, name: "subsurftype", scope: !5218, file: !5217, line: 127, baseType: !37, size: 8, offset: 10912)
!5316 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !5218, file: !5217, line: 128, baseType: !37, size: 8, offset: 10920)
!5317 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !5218, file: !5217, line: 130, baseType: !135, size: 16, offset: 10928)
!5318 = !DIDerivedType(tag: DW_TAG_member, name: "mr", scope: !5218, file: !5217, line: 132, baseType: !5319, size: 64, offset: 10944)
!5319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5320, size: 64)
!5320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Multires", file: !684, line: 233, size: 3584, elements: !5321)
!5321 = !{!5322, !5323, !5324, !5325, !5326, !5327, !5328, !5329, !5330, !5331, !5332, !5333, !5334, !5335}
!5322 = !DIDerivedType(tag: DW_TAG_member, name: "levels", scope: !5320, file: !684, line: 234, baseType: !158, size: 128)
!5323 = !DIDerivedType(tag: DW_TAG_member, name: "verts", scope: !5320, file: !684, line: 235, baseType: !2400, size: 64, offset: 128)
!5324 = !DIDerivedType(tag: DW_TAG_member, name: "level_count", scope: !5320, file: !684, line: 237, baseType: !673, size: 8, offset: 192)
!5325 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !5320, file: !684, line: 237, baseType: !673, size: 8, offset: 200)
!5326 = !DIDerivedType(tag: DW_TAG_member, name: "newlvl", scope: !5320, file: !684, line: 237, baseType: !673, size: 8, offset: 208)
!5327 = !DIDerivedType(tag: DW_TAG_member, name: "edgelvl", scope: !5320, file: !684, line: 237, baseType: !673, size: 8, offset: 216)
!5328 = !DIDerivedType(tag: DW_TAG_member, name: "pinlvl", scope: !5320, file: !684, line: 237, baseType: !673, size: 8, offset: 224)
!5329 = !DIDerivedType(tag: DW_TAG_member, name: "renderlvl", scope: !5320, file: !684, line: 237, baseType: !673, size: 8, offset: 232)
!5330 = !DIDerivedType(tag: DW_TAG_member, name: "use_col", scope: !5320, file: !684, line: 238, baseType: !673, size: 8, offset: 240)
!5331 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !5320, file: !684, line: 238, baseType: !673, size: 8, offset: 248)
!5332 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !5320, file: !684, line: 241, baseType: !17, size: 1600, offset: 256)
!5333 = !DIDerivedType(tag: DW_TAG_member, name: "fdata", scope: !5320, file: !684, line: 242, baseType: !17, size: 1600, offset: 1856)
!5334 = !DIDerivedType(tag: DW_TAG_member, name: "edge_flags", scope: !5320, file: !684, line: 243, baseType: !2333, size: 64, offset: 3456)
!5335 = !DIDerivedType(tag: DW_TAG_member, name: "edge_creases", scope: !5320, file: !684, line: 244, baseType: !1267, size: 64, offset: 3520)
!5336 = !DILocalVariable(name: "me", arg: 1, scope: !5212, file: !3, line: 3991, type: !5215)
!5337 = !DILocation(line: 3991, column: 46, scope: !5212)
!5338 = !DILocalVariable(name: "r_positions", arg: 2, scope: !5212, file: !3, line: 3991, type: !1301)
!5339 = !DILocation(line: 3991, column: 58, scope: !5212)
!5340 = !DILocalVariable(name: "ss", scope: !5212, file: !3, line: 3998, type: !6)
!5341 = !DILocation(line: 3998, column: 14, scope: !5212)
!5342 = !DILocation(line: 3998, column: 19, scope: !5212)
!5343 = !DILocalVariable(name: "edge_sum", scope: !5212, file: !3, line: 3999, type: !204)
!5344 = !DILocation(line: 3999, column: 8, scope: !5212)
!5345 = !DILocalVariable(name: "face_sum", scope: !5212, file: !3, line: 3999, type: !204)
!5346 = !DILocation(line: 3999, column: 21, scope: !5212)
!5347 = !DILocalVariable(name: "vi", scope: !5212, file: !3, line: 4000, type: !3728)
!5348 = !DILocation(line: 4000, column: 19, scope: !5212)
!5349 = !DILocalVariable(name: "dm", scope: !5212, file: !3, line: 4001, type: !11)
!5350 = !DILocation(line: 4001, column: 15, scope: !5212)
!5351 = !DILocation(line: 4001, column: 35, scope: !5212)
!5352 = !DILocation(line: 4001, column: 20, scope: !5212)
!5353 = !DILocation(line: 4003, column: 27, scope: !5212)
!5354 = !DILocation(line: 4003, column: 31, scope: !5212)
!5355 = !DILocation(line: 4003, column: 2, scope: !5212)
!5356 = !DILocation(line: 4005, column: 39, scope: !5357)
!5357 = distinct !DILexicalBlock(scope: !5212, file: !3, line: 4005, column: 2)
!5358 = !DILocation(line: 4005, column: 12, scope: !5357)
!5359 = !DILocation(line: 4005, column: 10, scope: !5357)
!5360 = !DILocation(line: 4005, column: 7, scope: !5357)
!5361 = !DILocation(line: 4005, column: 71, scope: !5362)
!5362 = distinct !DILexicalBlock(scope: !5357, file: !3, line: 4005, column: 2)
!5363 = !DILocation(line: 4005, column: 45, scope: !5362)
!5364 = !DILocation(line: 4005, column: 44, scope: !5362)
!5365 = !DILocation(line: 4005, column: 2, scope: !5357)
!5366 = !DILocalVariable(name: "v", scope: !5367, file: !3, line: 4006, type: !2613)
!5367 = distinct !DILexicalBlock(scope: !5362, file: !3, line: 4005, column: 102)
!5368 = !DILocation(line: 4006, column: 12, scope: !5367)
!5369 = !DILocation(line: 4006, column: 43, scope: !5367)
!5370 = !DILocation(line: 4006, column: 16, scope: !5367)
!5371 = !DILocalVariable(name: "idx", scope: !5367, file: !3, line: 4007, type: !27)
!5372 = !DILocation(line: 4007, column: 7, scope: !5367)
!5373 = !DILocation(line: 4007, column: 13, scope: !5367)
!5374 = !DILocalVariable(name: "N", scope: !5367, file: !3, line: 4008, type: !27)
!5375 = !DILocation(line: 4008, column: 7, scope: !5367)
!5376 = !DILocation(line: 4008, column: 38, scope: !5367)
!5377 = !DILocation(line: 4008, column: 11, scope: !5367)
!5378 = !DILocalVariable(name: "numFaces", scope: !5367, file: !3, line: 4009, type: !27)
!5379 = !DILocation(line: 4009, column: 7, scope: !5367)
!5380 = !DILocation(line: 4009, column: 45, scope: !5367)
!5381 = !DILocation(line: 4009, column: 18, scope: !5367)
!5382 = !DILocalVariable(name: "co", scope: !5367, file: !3, line: 4010, type: !1306)
!5383 = !DILocation(line: 4010, column: 10, scope: !5367)
!5384 = !DILocalVariable(name: "i", scope: !5367, file: !3, line: 4011, type: !27)
!5385 = !DILocation(line: 4011, column: 7, scope: !5367)
!5386 = !DILocation(line: 4013, column: 11, scope: !5367)
!5387 = !DILocation(line: 4013, column: 3, scope: !5367)
!5388 = !DILocation(line: 4014, column: 11, scope: !5367)
!5389 = !DILocation(line: 4014, column: 3, scope: !5367)
!5390 = !DILocation(line: 4016, column: 10, scope: !5391)
!5391 = distinct !DILexicalBlock(scope: !5367, file: !3, line: 4016, column: 3)
!5392 = !DILocation(line: 4016, column: 8, scope: !5391)
!5393 = !DILocation(line: 4016, column: 15, scope: !5394)
!5394 = distinct !DILexicalBlock(scope: !5391, file: !3, line: 4016, column: 3)
!5395 = !DILocation(line: 4016, column: 19, scope: !5394)
!5396 = !DILocation(line: 4016, column: 17, scope: !5394)
!5397 = !DILocation(line: 4016, column: 3, scope: !5391)
!5398 = !DILocalVariable(name: "e", scope: !5399, file: !3, line: 4017, type: !2638)
!5399 = distinct !DILexicalBlock(scope: !5394, file: !3, line: 4016, column: 27)
!5400 = !DILocation(line: 4017, column: 13, scope: !5399)
!5401 = !DILocation(line: 4017, column: 40, scope: !5399)
!5402 = !DILocation(line: 4017, column: 43, scope: !5399)
!5403 = !DILocation(line: 4017, column: 17, scope: !5399)
!5404 = !DILocation(line: 4018, column: 16, scope: !5399)
!5405 = !DILocation(line: 4018, column: 26, scope: !5399)
!5406 = !DILocation(line: 4018, column: 59, scope: !5399)
!5407 = !DILocation(line: 4018, column: 63, scope: !5399)
!5408 = !DILocation(line: 4018, column: 36, scope: !5399)
!5409 = !DILocation(line: 4018, column: 4, scope: !5399)
!5410 = !DILocation(line: 4019, column: 3, scope: !5399)
!5411 = !DILocation(line: 4016, column: 23, scope: !5394)
!5412 = !DILocation(line: 4016, column: 3, scope: !5394)
!5413 = distinct !{!5413, !5397, !5414}
!5414 = !DILocation(line: 4019, column: 3, scope: !5391)
!5415 = !DILocation(line: 4020, column: 10, scope: !5416)
!5416 = distinct !DILexicalBlock(scope: !5367, file: !3, line: 4020, column: 3)
!5417 = !DILocation(line: 4020, column: 8, scope: !5416)
!5418 = !DILocation(line: 4020, column: 15, scope: !5419)
!5419 = distinct !DILexicalBlock(scope: !5416, file: !3, line: 4020, column: 3)
!5420 = !DILocation(line: 4020, column: 19, scope: !5419)
!5421 = !DILocation(line: 4020, column: 17, scope: !5419)
!5422 = !DILocation(line: 4020, column: 3, scope: !5416)
!5423 = !DILocalVariable(name: "f", scope: !5424, file: !3, line: 4021, type: !2461)
!5424 = distinct !DILexicalBlock(scope: !5419, file: !3, line: 4020, column: 34)
!5425 = !DILocation(line: 4021, column: 13, scope: !5424)
!5426 = !DILocation(line: 4021, column: 40, scope: !5424)
!5427 = !DILocation(line: 4021, column: 43, scope: !5424)
!5428 = !DILocation(line: 4021, column: 17, scope: !5424)
!5429 = !DILocation(line: 4022, column: 14, scope: !5424)
!5430 = !DILocation(line: 4022, column: 53, scope: !5424)
!5431 = !DILocation(line: 4022, column: 24, scope: !5424)
!5432 = !DILocation(line: 4022, column: 4, scope: !5424)
!5433 = !DILocation(line: 4023, column: 3, scope: !5424)
!5434 = !DILocation(line: 4020, column: 30, scope: !5419)
!5435 = !DILocation(line: 4020, column: 3, scope: !5419)
!5436 = distinct !{!5436, !5422, !5437}
!5437 = !DILocation(line: 4023, column: 3, scope: !5416)
!5438 = !DILocation(line: 4027, column: 7, scope: !5439)
!5439 = distinct !DILexicalBlock(scope: !5367, file: !3, line: 4027, column: 7)
!5440 = !DILocation(line: 4027, column: 16, scope: !5439)
!5441 = !DILocation(line: 4027, column: 19, scope: !5439)
!5442 = !DILocation(line: 4027, column: 31, scope: !5439)
!5443 = !DILocation(line: 4027, column: 28, scope: !5439)
!5444 = !DILocation(line: 4027, column: 7, scope: !5367)
!5445 = !DILocation(line: 4028, column: 14, scope: !5439)
!5446 = !DILocation(line: 4028, column: 31, scope: !5439)
!5447 = !DILocation(line: 4028, column: 24, scope: !5439)
!5448 = !DILocation(line: 4028, column: 42, scope: !5439)
!5449 = !DILocation(line: 4028, column: 35, scope: !5439)
!5450 = !DILocation(line: 4028, column: 33, scope: !5439)
!5451 = !DILocation(line: 4028, column: 4, scope: !5439)
!5452 = !DILocation(line: 4030, column: 31, scope: !5367)
!5453 = !DILocation(line: 4030, column: 35, scope: !5367)
!5454 = !DILocation(line: 4030, column: 8, scope: !5367)
!5455 = !DILocation(line: 4030, column: 6, scope: !5367)
!5456 = !DILocation(line: 4031, column: 26, scope: !5367)
!5457 = !DILocation(line: 4031, column: 34, scope: !5367)
!5458 = !DILocation(line: 4031, column: 32, scope: !5367)
!5459 = !DILocation(line: 4031, column: 38, scope: !5367)
!5460 = !DILocation(line: 4031, column: 36, scope: !5367)
!5461 = !DILocation(line: 4031, column: 42, scope: !5367)
!5462 = !DILocation(line: 4031, column: 54, scope: !5367)
!5463 = !DILocation(line: 4031, column: 40, scope: !5367)
!5464 = !DILocation(line: 4031, column: 60, scope: !5367)
!5465 = !DILocation(line: 4031, column: 58, scope: !5367)
!5466 = !DILocation(line: 4031, column: 76, scope: !5367)
!5467 = !DILocation(line: 4031, column: 81, scope: !5367)
!5468 = !DILocation(line: 4031, column: 83, scope: !5367)
!5469 = !DILocation(line: 4031, column: 78, scope: !5367)
!5470 = !DILocation(line: 4031, column: 75, scope: !5367)
!5471 = !DILocation(line: 4031, column: 73, scope: !5367)
!5472 = !DILocation(line: 4031, column: 3, scope: !5367)
!5473 = !DILocation(line: 4031, column: 15, scope: !5367)
!5474 = !DILocation(line: 4031, column: 23, scope: !5367)
!5475 = !DILocation(line: 4032, column: 26, scope: !5367)
!5476 = !DILocation(line: 4032, column: 34, scope: !5367)
!5477 = !DILocation(line: 4032, column: 32, scope: !5367)
!5478 = !DILocation(line: 4032, column: 38, scope: !5367)
!5479 = !DILocation(line: 4032, column: 36, scope: !5367)
!5480 = !DILocation(line: 4032, column: 42, scope: !5367)
!5481 = !DILocation(line: 4032, column: 54, scope: !5367)
!5482 = !DILocation(line: 4032, column: 40, scope: !5367)
!5483 = !DILocation(line: 4032, column: 60, scope: !5367)
!5484 = !DILocation(line: 4032, column: 58, scope: !5367)
!5485 = !DILocation(line: 4032, column: 76, scope: !5367)
!5486 = !DILocation(line: 4032, column: 81, scope: !5367)
!5487 = !DILocation(line: 4032, column: 83, scope: !5367)
!5488 = !DILocation(line: 4032, column: 78, scope: !5367)
!5489 = !DILocation(line: 4032, column: 75, scope: !5367)
!5490 = !DILocation(line: 4032, column: 73, scope: !5367)
!5491 = !DILocation(line: 4032, column: 3, scope: !5367)
!5492 = !DILocation(line: 4032, column: 15, scope: !5367)
!5493 = !DILocation(line: 4032, column: 23, scope: !5367)
!5494 = !DILocation(line: 4033, column: 26, scope: !5367)
!5495 = !DILocation(line: 4033, column: 34, scope: !5367)
!5496 = !DILocation(line: 4033, column: 32, scope: !5367)
!5497 = !DILocation(line: 4033, column: 38, scope: !5367)
!5498 = !DILocation(line: 4033, column: 36, scope: !5367)
!5499 = !DILocation(line: 4033, column: 42, scope: !5367)
!5500 = !DILocation(line: 4033, column: 54, scope: !5367)
!5501 = !DILocation(line: 4033, column: 40, scope: !5367)
!5502 = !DILocation(line: 4033, column: 60, scope: !5367)
!5503 = !DILocation(line: 4033, column: 58, scope: !5367)
!5504 = !DILocation(line: 4033, column: 76, scope: !5367)
!5505 = !DILocation(line: 4033, column: 81, scope: !5367)
!5506 = !DILocation(line: 4033, column: 83, scope: !5367)
!5507 = !DILocation(line: 4033, column: 78, scope: !5367)
!5508 = !DILocation(line: 4033, column: 75, scope: !5367)
!5509 = !DILocation(line: 4033, column: 73, scope: !5367)
!5510 = !DILocation(line: 4033, column: 3, scope: !5367)
!5511 = !DILocation(line: 4033, column: 15, scope: !5367)
!5512 = !DILocation(line: 4033, column: 23, scope: !5367)
!5513 = !DILocation(line: 4034, column: 2, scope: !5367)
!5514 = !DILocation(line: 4005, column: 97, scope: !5362)
!5515 = !DILocation(line: 4005, column: 76, scope: !5362)
!5516 = !DILocation(line: 4005, column: 2, scope: !5362)
!5517 = distinct !{!5517, !5365, !5518}
!5518 = !DILocation(line: 4034, column: 2, scope: !5357)
!5519 = !DILocation(line: 4035, column: 23, scope: !5212)
!5520 = !DILocation(line: 4035, column: 2, scope: !5212)
!5521 = !DILocation(line: 4037, column: 18, scope: !5212)
!5522 = !DILocation(line: 4037, column: 2, scope: !5212)
!5523 = !DILocation(line: 4039, column: 2, scope: !5212)
!5524 = !DILocation(line: 4039, column: 6, scope: !5212)
!5525 = !DILocation(line: 4039, column: 14, scope: !5212)
!5526 = !DILocation(line: 4040, column: 1, scope: !5212)
!5527 = distinct !DISubprogram(name: "zero_v3", scope: !5528, file: !5528, line: 43, type: !5529, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!5528 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5529 = !DISubroutineType(types: !5530)
!5530 = !{null, !1306}
!5531 = !DILocalVariable(name: "r", arg: 1, scope: !5527, file: !5528, line: 43, type: !1306)
!5532 = !DILocation(line: 43, column: 28, scope: !5527)
!5533 = !DILocation(line: 45, column: 2, scope: !5527)
!5534 = !DILocation(line: 45, column: 7, scope: !5527)
!5535 = !DILocation(line: 46, column: 2, scope: !5527)
!5536 = !DILocation(line: 46, column: 7, scope: !5527)
!5537 = !DILocation(line: 47, column: 2, scope: !5527)
!5538 = !DILocation(line: 47, column: 7, scope: !5527)
!5539 = !DILocation(line: 48, column: 1, scope: !5527)
!5540 = distinct !DISubprogram(name: "add_v3_v3v3", scope: !5528, file: !5528, line: 309, type: !5541, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!5541 = !DISubroutineType(types: !5542)
!5542 = !{null, !1306, !2042, !2042}
!5543 = !DILocalVariable(name: "r", arg: 1, scope: !5540, file: !5528, line: 309, type: !1306)
!5544 = !DILocation(line: 309, column: 32, scope: !5540)
!5545 = !DILocalVariable(name: "a", arg: 2, scope: !5540, file: !5528, line: 309, type: !2042)
!5546 = !DILocation(line: 309, column: 50, scope: !5540)
!5547 = !DILocalVariable(name: "b", arg: 3, scope: !5540, file: !5528, line: 309, type: !2042)
!5548 = !DILocation(line: 309, column: 68, scope: !5540)
!5549 = !DILocation(line: 311, column: 9, scope: !5540)
!5550 = !DILocation(line: 311, column: 16, scope: !5540)
!5551 = !DILocation(line: 311, column: 14, scope: !5540)
!5552 = !DILocation(line: 311, column: 2, scope: !5540)
!5553 = !DILocation(line: 311, column: 7, scope: !5540)
!5554 = !DILocation(line: 312, column: 9, scope: !5540)
!5555 = !DILocation(line: 312, column: 16, scope: !5540)
!5556 = !DILocation(line: 312, column: 14, scope: !5540)
!5557 = !DILocation(line: 312, column: 2, scope: !5540)
!5558 = !DILocation(line: 312, column: 7, scope: !5540)
!5559 = !DILocation(line: 313, column: 9, scope: !5540)
!5560 = !DILocation(line: 313, column: 16, scope: !5540)
!5561 = !DILocation(line: 313, column: 14, scope: !5540)
!5562 = !DILocation(line: 313, column: 2, scope: !5540)
!5563 = !DILocation(line: 313, column: 7, scope: !5540)
!5564 = !DILocation(line: 314, column: 1, scope: !5540)
!5565 = distinct !DISubprogram(name: "add_v3_v3", scope: !5528, file: !5528, line: 302, type: !5566, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!5566 = !DISubroutineType(types: !5567)
!5567 = !{null, !1306, !2042}
!5568 = !DILocalVariable(name: "r", arg: 1, scope: !5565, file: !5528, line: 302, type: !1306)
!5569 = !DILocation(line: 302, column: 30, scope: !5565)
!5570 = !DILocalVariable(name: "a", arg: 2, scope: !5565, file: !5528, line: 302, type: !2042)
!5571 = !DILocation(line: 302, column: 48, scope: !5565)
!5572 = !DILocation(line: 304, column: 10, scope: !5565)
!5573 = !DILocation(line: 304, column: 2, scope: !5565)
!5574 = !DILocation(line: 304, column: 7, scope: !5565)
!5575 = !DILocation(line: 305, column: 10, scope: !5565)
!5576 = !DILocation(line: 305, column: 2, scope: !5565)
!5577 = !DILocation(line: 305, column: 7, scope: !5565)
!5578 = !DILocation(line: 306, column: 10, scope: !5565)
!5579 = !DILocation(line: 306, column: 2, scope: !5565)
!5580 = !DILocation(line: 306, column: 7, scope: !5565)
!5581 = !DILocation(line: 307, column: 1, scope: !5565)
!5582 = distinct !DISubprogram(name: "mul_v3_fl", scope: !5528, file: !5528, line: 392, type: !5583, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!5583 = !DISubroutineType(types: !5584)
!5584 = !{null, !1306, !90}
!5585 = !DILocalVariable(name: "r", arg: 1, scope: !5582, file: !5528, line: 392, type: !1306)
!5586 = !DILocation(line: 392, column: 30, scope: !5582)
!5587 = !DILocalVariable(name: "f", arg: 2, scope: !5582, file: !5528, line: 392, type: !90)
!5588 = !DILocation(line: 392, column: 42, scope: !5582)
!5589 = !DILocation(line: 394, column: 10, scope: !5582)
!5590 = !DILocation(line: 394, column: 2, scope: !5582)
!5591 = !DILocation(line: 394, column: 7, scope: !5582)
!5592 = !DILocation(line: 395, column: 10, scope: !5582)
!5593 = !DILocation(line: 395, column: 2, scope: !5582)
!5594 = !DILocation(line: 395, column: 7, scope: !5582)
!5595 = !DILocation(line: 396, column: 10, scope: !5582)
!5596 = !DILocation(line: 396, column: 2, scope: !5582)
!5597 = !DILocation(line: 396, column: 7, scope: !5582)
!5598 = !DILocation(line: 397, column: 1, scope: !5582)
!5599 = distinct !DISubprogram(name: "arena_alloc", scope: !3, file: !3, line: 95, type: !3389, scopeLine: 96, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!5600 = !DILocalVariable(name: "a", arg: 1, scope: !5599, file: !3, line: 95, type: !3391)
!5601 = !DILocation(line: 95, column: 42, scope: !5599)
!5602 = !DILocalVariable(name: "numBytes", arg: 2, scope: !5599, file: !3, line: 95, type: !27)
!5603 = !DILocation(line: 95, column: 49, scope: !5599)
!5604 = !DILocation(line: 97, column: 28, scope: !5599)
!5605 = !DILocation(line: 97, column: 31, scope: !5599)
!5606 = !DILocation(line: 97, column: 9, scope: !5599)
!5607 = !DILocation(line: 97, column: 2, scope: !5599)
!5608 = distinct !DISubprogram(name: "arena_realloc", scope: !3, file: !3, line: 100, type: !3394, scopeLine: 101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!5609 = !DILocalVariable(name: "a", arg: 1, scope: !5608, file: !3, line: 100, type: !3391)
!5610 = !DILocation(line: 100, column: 44, scope: !5608)
!5611 = !DILocalVariable(name: "ptr", arg: 2, scope: !5608, file: !3, line: 100, type: !41)
!5612 = !DILocation(line: 100, column: 53, scope: !5608)
!5613 = !DILocalVariable(name: "newSize", arg: 3, scope: !5608, file: !3, line: 100, type: !27)
!5614 = !DILocation(line: 100, column: 62, scope: !5608)
!5615 = !DILocalVariable(name: "oldSize", arg: 4, scope: !5608, file: !3, line: 100, type: !27)
!5616 = !DILocation(line: 100, column: 75, scope: !5608)
!5617 = !DILocalVariable(name: "p2", scope: !5608, file: !3, line: 102, type: !41)
!5618 = !DILocation(line: 102, column: 8, scope: !5608)
!5619 = !DILocation(line: 102, column: 32, scope: !5608)
!5620 = !DILocation(line: 102, column: 35, scope: !5608)
!5621 = !DILocation(line: 102, column: 13, scope: !5608)
!5622 = !DILocation(line: 103, column: 6, scope: !5623)
!5623 = distinct !DILexicalBlock(scope: !5608, file: !3, line: 103, column: 6)
!5624 = !DILocation(line: 103, column: 6, scope: !5608)
!5625 = !DILocation(line: 104, column: 10, scope: !5626)
!5626 = distinct !DILexicalBlock(scope: !5623, file: !3, line: 103, column: 11)
!5627 = !DILocation(line: 104, column: 14, scope: !5626)
!5628 = !DILocation(line: 104, column: 19, scope: !5626)
!5629 = !DILocation(line: 104, column: 3, scope: !5626)
!5630 = !DILocation(line: 105, column: 2, scope: !5626)
!5631 = !DILocation(line: 106, column: 9, scope: !5608)
!5632 = !DILocation(line: 106, column: 2, scope: !5608)
!5633 = distinct !DISubprogram(name: "arena_free", scope: !3, file: !3, line: 109, type: !3398, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!5634 = !DILocalVariable(name: "UNUSED_a", arg: 1, scope: !5633, file: !3, line: 109, type: !3391)
!5635 = !DILocation(line: 109, column: 40, scope: !5633)
!5636 = !DILocalVariable(name: "UNUSED_ptr", arg: 2, scope: !5633, file: !3, line: 109, type: !41)
!5637 = !DILocation(line: 109, column: 57, scope: !5633)
!5638 = !DILocation(line: 112, column: 1, scope: !5633)
!5639 = distinct !DISubprogram(name: "arena_release", scope: !3, file: !3, line: 114, type: !3402, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!5640 = !DILocalVariable(name: "a", arg: 1, scope: !5639, file: !3, line: 114, type: !3391)
!5641 = !DILocation(line: 114, column: 43, scope: !5639)
!5642 = !DILocation(line: 116, column: 20, scope: !5639)
!5643 = !DILocation(line: 116, column: 2, scope: !5639)
!5644 = !DILocation(line: 117, column: 1, scope: !5639)
!5645 = distinct !DISubprogram(name: "ccgDM_getMinMax", scope: !3, file: !3, line: 698, type: !2070, scopeLine: 699, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!5646 = !DILocalVariable(name: "dm", arg: 1, scope: !5645, file: !3, line: 698, type: !11)
!5647 = !DILocation(line: 698, column: 42, scope: !5645)
!5648 = !DILocalVariable(name: "r_min", arg: 2, scope: !5645, file: !3, line: 698, type: !1306)
!5649 = !DILocation(line: 698, column: 52, scope: !5645)
!5650 = !DILocalVariable(name: "r_max", arg: 3, scope: !5645, file: !3, line: 698, type: !1306)
!5651 = !DILocation(line: 698, column: 68, scope: !5645)
!5652 = !DILocalVariable(name: "ccgdm", scope: !5645, file: !3, line: 700, type: !2295)
!5653 = !DILocation(line: 700, column: 18, scope: !5645)
!5654 = !DILocation(line: 700, column: 45, scope: !5645)
!5655 = !DILocation(line: 700, column: 26, scope: !5645)
!5656 = !DILocalVariable(name: "ss", scope: !5645, file: !3, line: 701, type: !6)
!5657 = !DILocation(line: 701, column: 14, scope: !5645)
!5658 = !DILocation(line: 701, column: 19, scope: !5645)
!5659 = !DILocation(line: 701, column: 26, scope: !5645)
!5660 = !DILocalVariable(name: "vi", scope: !5645, file: !3, line: 702, type: !3728)
!5661 = !DILocation(line: 702, column: 19, scope: !5645)
!5662 = !DILocalVariable(name: "ei", scope: !5645, file: !3, line: 703, type: !3733)
!5663 = !DILocation(line: 703, column: 19, scope: !5645)
!5664 = !DILocalVariable(name: "fi", scope: !5645, file: !3, line: 704, type: !3738)
!5665 = !DILocation(line: 704, column: 19, scope: !5645)
!5666 = !DILocalVariable(name: "key", scope: !5645, file: !3, line: 705, type: !5667)
!5667 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCGKey", file: !10, line: 78, baseType: !2008)
!5668 = !DILocation(line: 705, column: 9, scope: !5645)
!5669 = !DILocalVariable(name: "i", scope: !5645, file: !3, line: 706, type: !27)
!5670 = !DILocation(line: 706, column: 6, scope: !5645)
!5671 = !DILocalVariable(name: "edgeSize", scope: !5645, file: !3, line: 706, type: !27)
!5672 = !DILocation(line: 706, column: 9, scope: !5645)
!5673 = !DILocation(line: 706, column: 43, scope: !5645)
!5674 = !DILocation(line: 706, column: 20, scope: !5645)
!5675 = !DILocalVariable(name: "gridSize", scope: !5645, file: !3, line: 707, type: !27)
!5676 = !DILocation(line: 707, column: 6, scope: !5645)
!5677 = !DILocation(line: 707, column: 40, scope: !5645)
!5678 = !DILocation(line: 707, column: 17, scope: !5645)
!5679 = !DILocation(line: 709, column: 26, scope: !5645)
!5680 = !DILocation(line: 709, column: 2, scope: !5645)
!5681 = !DILocation(line: 711, column: 30, scope: !5682)
!5682 = distinct !DILexicalBlock(scope: !5645, file: !3, line: 711, column: 6)
!5683 = !DILocation(line: 711, column: 7, scope: !5682)
!5684 = !DILocation(line: 711, column: 6, scope: !5645)
!5685 = !DILocation(line: 712, column: 58, scope: !5682)
!5686 = !DILocation(line: 712, column: 67, scope: !5682)
!5687 = !DILocation(line: 712, column: 47, scope: !5682)
!5688 = !DILocation(line: 712, column: 56, scope: !5682)
!5689 = !DILocation(line: 712, column: 36, scope: !5682)
!5690 = !DILocation(line: 712, column: 45, scope: !5682)
!5691 = !DILocation(line: 712, column: 25, scope: !5682)
!5692 = !DILocation(line: 712, column: 34, scope: !5682)
!5693 = !DILocation(line: 712, column: 14, scope: !5682)
!5694 = !DILocation(line: 712, column: 23, scope: !5682)
!5695 = !DILocation(line: 712, column: 3, scope: !5682)
!5696 = !DILocation(line: 712, column: 12, scope: !5682)
!5697 = !DILocation(line: 714, column: 39, scope: !5698)
!5698 = distinct !DILexicalBlock(scope: !5645, file: !3, line: 714, column: 2)
!5699 = !DILocation(line: 714, column: 12, scope: !5698)
!5700 = !DILocation(line: 714, column: 10, scope: !5698)
!5701 = !DILocation(line: 714, column: 7, scope: !5698)
!5702 = !DILocation(line: 714, column: 71, scope: !5703)
!5703 = distinct !DILexicalBlock(scope: !5698, file: !3, line: 714, column: 2)
!5704 = !DILocation(line: 714, column: 45, scope: !5703)
!5705 = !DILocation(line: 714, column: 44, scope: !5703)
!5706 = !DILocation(line: 714, column: 2, scope: !5698)
!5707 = !DILocalVariable(name: "v", scope: !5708, file: !3, line: 715, type: !2613)
!5708 = distinct !DILexicalBlock(scope: !5703, file: !3, line: 714, column: 102)
!5709 = !DILocation(line: 715, column: 12, scope: !5708)
!5710 = !DILocation(line: 715, column: 43, scope: !5708)
!5711 = !DILocation(line: 715, column: 16, scope: !5708)
!5712 = !DILocalVariable(name: "co", scope: !5708, file: !3, line: 716, type: !1306)
!5713 = !DILocation(line: 716, column: 10, scope: !5708)
!5714 = !DILocation(line: 716, column: 38, scope: !5708)
!5715 = !DILocation(line: 716, column: 42, scope: !5708)
!5716 = !DILocation(line: 716, column: 15, scope: !5708)
!5717 = !DILocation(line: 718, column: 18, scope: !5708)
!5718 = !DILocation(line: 718, column: 22, scope: !5708)
!5719 = !DILocation(line: 718, column: 29, scope: !5708)
!5720 = !DILocation(line: 718, column: 3, scope: !5708)
!5721 = !DILocation(line: 719, column: 2, scope: !5708)
!5722 = !DILocation(line: 714, column: 97, scope: !5703)
!5723 = !DILocation(line: 714, column: 76, scope: !5703)
!5724 = !DILocation(line: 714, column: 2, scope: !5703)
!5725 = distinct !{!5725, !5706, !5726}
!5726 = !DILocation(line: 719, column: 2, scope: !5698)
!5727 = !DILocation(line: 720, column: 23, scope: !5645)
!5728 = !DILocation(line: 720, column: 2, scope: !5645)
!5729 = !DILocation(line: 722, column: 39, scope: !5730)
!5730 = distinct !DILexicalBlock(scope: !5645, file: !3, line: 722, column: 2)
!5731 = !DILocation(line: 722, column: 12, scope: !5730)
!5732 = !DILocation(line: 722, column: 10, scope: !5730)
!5733 = !DILocation(line: 722, column: 7, scope: !5730)
!5734 = !DILocation(line: 722, column: 71, scope: !5735)
!5735 = distinct !DILexicalBlock(scope: !5730, file: !3, line: 722, column: 2)
!5736 = !DILocation(line: 722, column: 45, scope: !5735)
!5737 = !DILocation(line: 722, column: 44, scope: !5735)
!5738 = !DILocation(line: 722, column: 2, scope: !5730)
!5739 = !DILocalVariable(name: "e", scope: !5740, file: !3, line: 723, type: !2638)
!5740 = distinct !DILexicalBlock(scope: !5735, file: !3, line: 722, column: 102)
!5741 = !DILocation(line: 723, column: 12, scope: !5740)
!5742 = !DILocation(line: 723, column: 43, scope: !5740)
!5743 = !DILocation(line: 723, column: 16, scope: !5740)
!5744 = !DILocalVariable(name: "edgeData", scope: !5740, file: !3, line: 724, type: !2371)
!5745 = !DILocation(line: 724, column: 12, scope: !5740)
!5746 = !DILocation(line: 724, column: 51, scope: !5740)
!5747 = !DILocation(line: 724, column: 55, scope: !5740)
!5748 = !DILocation(line: 724, column: 23, scope: !5740)
!5749 = !DILocation(line: 726, column: 10, scope: !5750)
!5750 = distinct !DILexicalBlock(scope: !5740, file: !3, line: 726, column: 3)
!5751 = !DILocation(line: 726, column: 8, scope: !5750)
!5752 = !DILocation(line: 726, column: 15, scope: !5753)
!5753 = distinct !DILexicalBlock(scope: !5750, file: !3, line: 726, column: 3)
!5754 = !DILocation(line: 726, column: 19, scope: !5753)
!5755 = !DILocation(line: 726, column: 17, scope: !5753)
!5756 = !DILocation(line: 726, column: 3, scope: !5750)
!5757 = !DILocation(line: 727, column: 44, scope: !5753)
!5758 = !DILocation(line: 727, column: 54, scope: !5753)
!5759 = !DILocation(line: 727, column: 19, scope: !5753)
!5760 = !DILocation(line: 727, column: 58, scope: !5753)
!5761 = !DILocation(line: 727, column: 65, scope: !5753)
!5762 = !DILocation(line: 727, column: 4, scope: !5753)
!5763 = !DILocation(line: 726, column: 30, scope: !5753)
!5764 = !DILocation(line: 726, column: 3, scope: !5753)
!5765 = distinct !{!5765, !5756, !5766}
!5766 = !DILocation(line: 727, column: 70, scope: !5750)
!5767 = !DILocation(line: 728, column: 2, scope: !5740)
!5768 = !DILocation(line: 722, column: 97, scope: !5735)
!5769 = !DILocation(line: 722, column: 76, scope: !5735)
!5770 = !DILocation(line: 722, column: 2, scope: !5735)
!5771 = distinct !{!5771, !5738, !5772}
!5772 = !DILocation(line: 728, column: 2, scope: !5730)
!5773 = !DILocation(line: 729, column: 23, scope: !5645)
!5774 = !DILocation(line: 729, column: 2, scope: !5645)
!5775 = !DILocation(line: 731, column: 39, scope: !5776)
!5776 = distinct !DILexicalBlock(scope: !5645, file: !3, line: 731, column: 2)
!5777 = !DILocation(line: 731, column: 12, scope: !5776)
!5778 = !DILocation(line: 731, column: 10, scope: !5776)
!5779 = !DILocation(line: 731, column: 7, scope: !5776)
!5780 = !DILocation(line: 731, column: 71, scope: !5781)
!5781 = distinct !DILexicalBlock(scope: !5776, file: !3, line: 731, column: 2)
!5782 = !DILocation(line: 731, column: 45, scope: !5781)
!5783 = !DILocation(line: 731, column: 44, scope: !5781)
!5784 = !DILocation(line: 731, column: 2, scope: !5776)
!5785 = !DILocalVariable(name: "f", scope: !5786, file: !3, line: 732, type: !2461)
!5786 = distinct !DILexicalBlock(scope: !5781, file: !3, line: 731, column: 102)
!5787 = !DILocation(line: 732, column: 12, scope: !5786)
!5788 = !DILocation(line: 732, column: 43, scope: !5786)
!5789 = !DILocation(line: 732, column: 16, scope: !5786)
!5790 = !DILocalVariable(name: "S", scope: !5786, file: !3, line: 733, type: !27)
!5791 = !DILocation(line: 733, column: 7, scope: !5786)
!5792 = !DILocalVariable(name: "x", scope: !5786, file: !3, line: 733, type: !27)
!5793 = !DILocation(line: 733, column: 10, scope: !5786)
!5794 = !DILocalVariable(name: "y", scope: !5786, file: !3, line: 733, type: !27)
!5795 = !DILocation(line: 733, column: 13, scope: !5786)
!5796 = !DILocalVariable(name: "numVerts", scope: !5786, file: !3, line: 733, type: !27)
!5797 = !DILocation(line: 733, column: 16, scope: !5786)
!5798 = !DILocation(line: 733, column: 54, scope: !5786)
!5799 = !DILocation(line: 733, column: 27, scope: !5786)
!5800 = !DILocation(line: 735, column: 10, scope: !5801)
!5801 = distinct !DILexicalBlock(scope: !5786, file: !3, line: 735, column: 3)
!5802 = !DILocation(line: 735, column: 8, scope: !5801)
!5803 = !DILocation(line: 735, column: 15, scope: !5804)
!5804 = distinct !DILexicalBlock(scope: !5801, file: !3, line: 735, column: 3)
!5805 = !DILocation(line: 735, column: 19, scope: !5804)
!5806 = !DILocation(line: 735, column: 17, scope: !5804)
!5807 = !DILocation(line: 735, column: 3, scope: !5801)
!5808 = !DILocalVariable(name: "faceGridData", scope: !5809, file: !3, line: 736, type: !2371)
!5809 = distinct !DILexicalBlock(scope: !5804, file: !3, line: 735, column: 34)
!5810 = !DILocation(line: 736, column: 13, scope: !5809)
!5811 = !DILocation(line: 736, column: 60, scope: !5809)
!5812 = !DILocation(line: 736, column: 64, scope: !5809)
!5813 = !DILocation(line: 736, column: 67, scope: !5809)
!5814 = !DILocation(line: 736, column: 28, scope: !5809)
!5815 = !DILocation(line: 738, column: 11, scope: !5816)
!5816 = distinct !DILexicalBlock(scope: !5809, file: !3, line: 738, column: 4)
!5817 = !DILocation(line: 738, column: 9, scope: !5816)
!5818 = !DILocation(line: 738, column: 16, scope: !5819)
!5819 = distinct !DILexicalBlock(scope: !5816, file: !3, line: 738, column: 4)
!5820 = !DILocation(line: 738, column: 20, scope: !5819)
!5821 = !DILocation(line: 738, column: 18, scope: !5819)
!5822 = !DILocation(line: 738, column: 4, scope: !5816)
!5823 = !DILocation(line: 739, column: 12, scope: !5824)
!5824 = distinct !DILexicalBlock(scope: !5819, file: !3, line: 739, column: 5)
!5825 = !DILocation(line: 739, column: 10, scope: !5824)
!5826 = !DILocation(line: 739, column: 17, scope: !5827)
!5827 = distinct !DILexicalBlock(scope: !5824, file: !3, line: 739, column: 5)
!5828 = !DILocation(line: 739, column: 21, scope: !5827)
!5829 = !DILocation(line: 739, column: 19, scope: !5827)
!5830 = !DILocation(line: 739, column: 5, scope: !5824)
!5831 = !DILocation(line: 740, column: 44, scope: !5827)
!5832 = !DILocation(line: 740, column: 58, scope: !5827)
!5833 = !DILocation(line: 740, column: 61, scope: !5827)
!5834 = !DILocation(line: 740, column: 21, scope: !5827)
!5835 = !DILocation(line: 740, column: 65, scope: !5827)
!5836 = !DILocation(line: 740, column: 72, scope: !5827)
!5837 = !DILocation(line: 740, column: 6, scope: !5827)
!5838 = !DILocation(line: 739, column: 32, scope: !5827)
!5839 = !DILocation(line: 739, column: 5, scope: !5827)
!5840 = distinct !{!5840, !5830, !5841}
!5841 = !DILocation(line: 740, column: 77, scope: !5824)
!5842 = !DILocation(line: 738, column: 31, scope: !5819)
!5843 = !DILocation(line: 738, column: 4, scope: !5819)
!5844 = distinct !{!5844, !5822, !5845}
!5845 = !DILocation(line: 740, column: 77, scope: !5816)
!5846 = !DILocation(line: 741, column: 3, scope: !5809)
!5847 = !DILocation(line: 735, column: 30, scope: !5804)
!5848 = !DILocation(line: 735, column: 3, scope: !5804)
!5849 = distinct !{!5849, !5807, !5850}
!5850 = !DILocation(line: 741, column: 3, scope: !5801)
!5851 = !DILocation(line: 742, column: 2, scope: !5786)
!5852 = !DILocation(line: 731, column: 97, scope: !5781)
!5853 = !DILocation(line: 731, column: 76, scope: !5781)
!5854 = !DILocation(line: 731, column: 2, scope: !5781)
!5855 = distinct !{!5855, !5784, !5856}
!5856 = !DILocation(line: 742, column: 2, scope: !5776)
!5857 = !DILocation(line: 743, column: 23, scope: !5645)
!5858 = !DILocation(line: 743, column: 2, scope: !5645)
!5859 = !DILocation(line: 744, column: 1, scope: !5645)
!5860 = distinct !DISubprogram(name: "ccgDM_getNumVerts", scope: !3, file: !3, line: 746, type: !1868, scopeLine: 747, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!5861 = !DILocalVariable(name: "dm", arg: 1, scope: !5860, file: !3, line: 746, type: !11)
!5862 = !DILocation(line: 746, column: 43, scope: !5860)
!5863 = !DILocalVariable(name: "ccgdm", scope: !5860, file: !3, line: 748, type: !2295)
!5864 = !DILocation(line: 748, column: 18, scope: !5860)
!5865 = !DILocation(line: 748, column: 45, scope: !5860)
!5866 = !DILocation(line: 748, column: 26, scope: !5860)
!5867 = !DILocation(line: 750, column: 37, scope: !5860)
!5868 = !DILocation(line: 750, column: 44, scope: !5860)
!5869 = !DILocation(line: 750, column: 9, scope: !5860)
!5870 = !DILocation(line: 750, column: 2, scope: !5860)
!5871 = distinct !DISubprogram(name: "ccgDM_getNumEdges", scope: !3, file: !3, line: 753, type: !1868, scopeLine: 754, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!5872 = !DILocalVariable(name: "dm", arg: 1, scope: !5871, file: !3, line: 753, type: !11)
!5873 = !DILocation(line: 753, column: 43, scope: !5871)
!5874 = !DILocalVariable(name: "ccgdm", scope: !5871, file: !3, line: 755, type: !2295)
!5875 = !DILocation(line: 755, column: 18, scope: !5871)
!5876 = !DILocation(line: 755, column: 45, scope: !5871)
!5877 = !DILocation(line: 755, column: 26, scope: !5871)
!5878 = !DILocation(line: 757, column: 37, scope: !5871)
!5879 = !DILocation(line: 757, column: 44, scope: !5871)
!5880 = !DILocation(line: 757, column: 9, scope: !5871)
!5881 = !DILocation(line: 757, column: 2, scope: !5871)
!5882 = distinct !DISubprogram(name: "ccgDM_getNumTessFaces", scope: !3, file: !3, line: 760, type: !1868, scopeLine: 761, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!5883 = !DILocalVariable(name: "dm", arg: 1, scope: !5882, file: !3, line: 760, type: !11)
!5884 = !DILocation(line: 760, column: 47, scope: !5882)
!5885 = !DILocalVariable(name: "ccgdm", scope: !5882, file: !3, line: 762, type: !2295)
!5886 = !DILocation(line: 762, column: 18, scope: !5882)
!5887 = !DILocation(line: 762, column: 45, scope: !5882)
!5888 = !DILocation(line: 762, column: 26, scope: !5882)
!5889 = !DILocation(line: 764, column: 37, scope: !5882)
!5890 = !DILocation(line: 764, column: 44, scope: !5882)
!5891 = !DILocation(line: 764, column: 9, scope: !5882)
!5892 = !DILocation(line: 764, column: 2, scope: !5882)
!5893 = distinct !DISubprogram(name: "ccgDM_getNumLoops", scope: !3, file: !3, line: 767, type: !1868, scopeLine: 768, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!5894 = !DILocalVariable(name: "dm", arg: 1, scope: !5893, file: !3, line: 767, type: !11)
!5895 = !DILocation(line: 767, column: 43, scope: !5893)
!5896 = !DILocalVariable(name: "ccgdm", scope: !5893, file: !3, line: 769, type: !2295)
!5897 = !DILocation(line: 769, column: 18, scope: !5893)
!5898 = !DILocation(line: 769, column: 45, scope: !5893)
!5899 = !DILocation(line: 769, column: 26, scope: !5893)
!5900 = !DILocation(line: 772, column: 41, scope: !5893)
!5901 = !DILocation(line: 772, column: 48, scope: !5893)
!5902 = !DILocation(line: 772, column: 13, scope: !5893)
!5903 = !DILocation(line: 772, column: 11, scope: !5893)
!5904 = !DILocation(line: 772, column: 2, scope: !5893)
!5905 = distinct !DISubprogram(name: "ccgDM_getFinalVert", scope: !3, file: !3, line: 775, type: !5906, scopeLine: 776, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!5906 = !DISubroutineType(types: !5907)
!5907 = !{null, !11, !27, !2400}
!5908 = !DILocalVariable(name: "dm", arg: 1, scope: !5905, file: !3, line: 775, type: !11)
!5909 = !DILocation(line: 775, column: 45, scope: !5905)
!5910 = !DILocalVariable(name: "vertNum", arg: 2, scope: !5905, file: !3, line: 775, type: !27)
!5911 = !DILocation(line: 775, column: 53, scope: !5905)
!5912 = !DILocalVariable(name: "mv", arg: 3, scope: !5905, file: !3, line: 775, type: !2400)
!5913 = !DILocation(line: 775, column: 69, scope: !5905)
!5914 = !DILocalVariable(name: "ccgdm", scope: !5905, file: !3, line: 777, type: !2295)
!5915 = !DILocation(line: 777, column: 18, scope: !5905)
!5916 = !DILocation(line: 777, column: 45, scope: !5905)
!5917 = !DILocation(line: 777, column: 26, scope: !5905)
!5918 = !DILocalVariable(name: "ss", scope: !5905, file: !3, line: 778, type: !6)
!5919 = !DILocation(line: 778, column: 14, scope: !5905)
!5920 = !DILocation(line: 778, column: 19, scope: !5905)
!5921 = !DILocation(line: 778, column: 26, scope: !5905)
!5922 = !DILocalVariable(name: "vd", scope: !5905, file: !3, line: 779, type: !2371)
!5923 = !DILocation(line: 779, column: 11, scope: !5905)
!5924 = !DILocalVariable(name: "key", scope: !5905, file: !3, line: 780, type: !5667)
!5925 = !DILocation(line: 780, column: 9, scope: !5905)
!5926 = !DILocalVariable(name: "i", scope: !5905, file: !3, line: 781, type: !27)
!5927 = !DILocation(line: 781, column: 6, scope: !5905)
!5928 = !DILocation(line: 783, column: 26, scope: !5905)
!5929 = !DILocation(line: 783, column: 2, scope: !5905)
!5930 = !DILocation(line: 784, column: 9, scope: !5905)
!5931 = !DILocation(line: 784, column: 2, scope: !5905)
!5932 = !DILocation(line: 786, column: 7, scope: !5933)
!5933 = distinct !DILexicalBlock(scope: !5905, file: !3, line: 786, column: 6)
!5934 = !DILocation(line: 786, column: 17, scope: !5933)
!5935 = !DILocation(line: 786, column: 24, scope: !5933)
!5936 = !DILocation(line: 786, column: 35, scope: !5933)
!5937 = !DILocation(line: 786, column: 15, scope: !5933)
!5938 = !DILocation(line: 786, column: 46, scope: !5933)
!5939 = !DILocation(line: 786, column: 73, scope: !5933)
!5940 = !DILocation(line: 786, column: 50, scope: !5933)
!5941 = !DILocation(line: 786, column: 77, scope: !5933)
!5942 = !DILocation(line: 786, column: 6, scope: !5905)
!5943 = !DILocalVariable(name: "lastface", scope: !5944, file: !3, line: 788, type: !27)
!5944 = distinct !DILexicalBlock(scope: !5933, file: !3, line: 786, column: 83)
!5945 = !DILocation(line: 788, column: 7, scope: !5944)
!5946 = !DILocation(line: 788, column: 41, scope: !5944)
!5947 = !DILocation(line: 788, column: 18, scope: !5944)
!5948 = !DILocation(line: 788, column: 45, scope: !5944)
!5949 = !DILocalVariable(name: "f", scope: !5944, file: !3, line: 789, type: !2461)
!5950 = !DILocation(line: 789, column: 12, scope: !5944)
!5951 = !DILocalVariable(name: "x", scope: !5944, file: !3, line: 790, type: !27)
!5952 = !DILocation(line: 790, column: 7, scope: !5944)
!5953 = !DILocalVariable(name: "y", scope: !5944, file: !3, line: 790, type: !27)
!5954 = !DILocation(line: 790, column: 10, scope: !5944)
!5955 = !DILocalVariable(name: "grid", scope: !5944, file: !3, line: 790, type: !27)
!5956 = !DILocation(line: 790, column: 13, scope: !5944)
!5957 = !DILocalVariable(name: "numVerts", scope: !5944, file: !3, line: 790, type: !27)
!5958 = !DILocation(line: 790, column: 19, scope: !5944)
!5959 = !DILocalVariable(name: "offset", scope: !5944, file: !3, line: 791, type: !27)
!5960 = !DILocation(line: 791, column: 7, scope: !5944)
!5961 = !DILocalVariable(name: "gridSize", scope: !5944, file: !3, line: 792, type: !27)
!5962 = !DILocation(line: 792, column: 7, scope: !5944)
!5963 = !DILocation(line: 792, column: 41, scope: !5944)
!5964 = !DILocation(line: 792, column: 18, scope: !5944)
!5965 = !DILocalVariable(name: "gridSideVerts", scope: !5944, file: !3, line: 793, type: !27)
!5966 = !DILocation(line: 793, column: 7, scope: !5944)
!5967 = !DILocalVariable(name: "gridInternalVerts", scope: !5944, file: !3, line: 794, type: !27)
!5968 = !DILocation(line: 794, column: 7, scope: !5944)
!5969 = !DILocalVariable(name: "gridSideEnd", scope: !5944, file: !3, line: 795, type: !27)
!5970 = !DILocation(line: 795, column: 7, scope: !5944)
!5971 = !DILocalVariable(name: "gridInternalEnd", scope: !5944, file: !3, line: 796, type: !27)
!5972 = !DILocation(line: 796, column: 7, scope: !5944)
!5973 = !DILocation(line: 798, column: 5, scope: !5944)
!5974 = !DILocation(line: 799, column: 3, scope: !5944)
!5975 = !DILocation(line: 799, column: 10, scope: !5944)
!5976 = !DILocation(line: 799, column: 14, scope: !5944)
!5977 = !DILocation(line: 799, column: 12, scope: !5944)
!5978 = !DILocation(line: 799, column: 23, scope: !5944)
!5979 = !DILocation(line: 799, column: 26, scope: !5944)
!5980 = !DILocation(line: 799, column: 37, scope: !5944)
!5981 = !DILocation(line: 799, column: 44, scope: !5944)
!5982 = !DILocation(line: 799, column: 52, scope: !5944)
!5983 = !DILocation(line: 799, column: 54, scope: !5944)
!5984 = !DILocation(line: 799, column: 59, scope: !5944)
!5985 = !DILocation(line: 799, column: 34, scope: !5944)
!5986 = !DILocation(line: 0, scope: !5944)
!5987 = !DILocation(line: 800, column: 5, scope: !5988)
!5988 = distinct !DILexicalBlock(scope: !5944, file: !3, line: 799, column: 70)
!5989 = distinct !{!5989, !5974, !5990}
!5990 = !DILocation(line: 801, column: 3, scope: !5944)
!5991 = !DILocation(line: 803, column: 7, scope: !5944)
!5992 = !DILocation(line: 803, column: 14, scope: !5944)
!5993 = !DILocation(line: 803, column: 22, scope: !5944)
!5994 = !DILocation(line: 803, column: 25, scope: !5944)
!5995 = !DILocation(line: 803, column: 5, scope: !5944)
!5996 = !DILocation(line: 804, column: 41, scope: !5944)
!5997 = !DILocation(line: 804, column: 14, scope: !5944)
!5998 = !DILocation(line: 804, column: 12, scope: !5944)
!5999 = !DILocation(line: 806, column: 19, scope: !5944)
!6000 = !DILocation(line: 806, column: 28, scope: !5944)
!6001 = !DILocation(line: 806, column: 17, scope: !5944)
!6002 = !DILocation(line: 807, column: 23, scope: !5944)
!6003 = !DILocation(line: 807, column: 39, scope: !5944)
!6004 = !DILocation(line: 807, column: 37, scope: !5944)
!6005 = !DILocation(line: 807, column: 21, scope: !5944)
!6006 = !DILocation(line: 809, column: 21, scope: !5944)
!6007 = !DILocation(line: 809, column: 32, scope: !5944)
!6008 = !DILocation(line: 809, column: 30, scope: !5944)
!6009 = !DILocation(line: 809, column: 19, scope: !5944)
!6010 = !DILocation(line: 809, column: 15, scope: !5944)
!6011 = !DILocation(line: 810, column: 21, scope: !5944)
!6012 = !DILocation(line: 810, column: 35, scope: !5944)
!6013 = !DILocation(line: 810, column: 46, scope: !5944)
!6014 = !DILocation(line: 810, column: 44, scope: !5944)
!6015 = !DILocation(line: 810, column: 33, scope: !5944)
!6016 = !DILocation(line: 810, column: 19, scope: !5944)
!6017 = !DILocation(line: 812, column: 12, scope: !5944)
!6018 = !DILocation(line: 812, column: 22, scope: !5944)
!6019 = !DILocation(line: 812, column: 29, scope: !5944)
!6020 = !DILocation(line: 812, column: 37, scope: !5944)
!6021 = !DILocation(line: 812, column: 40, scope: !5944)
!6022 = !DILocation(line: 812, column: 20, scope: !5944)
!6023 = !DILocation(line: 812, column: 10, scope: !5944)
!6024 = !DILocation(line: 813, column: 7, scope: !6025)
!6025 = distinct !DILexicalBlock(scope: !5944, file: !3, line: 813, column: 7)
!6026 = !DILocation(line: 813, column: 14, scope: !6025)
!6027 = !DILocation(line: 813, column: 7, scope: !5944)
!6028 = !DILocation(line: 814, column: 38, scope: !6029)
!6029 = distinct !DILexicalBlock(scope: !6025, file: !3, line: 813, column: 19)
!6030 = !DILocation(line: 814, column: 9, scope: !6029)
!6031 = !DILocation(line: 814, column: 7, scope: !6029)
!6032 = !DILocation(line: 815, column: 15, scope: !6029)
!6033 = !DILocation(line: 815, column: 19, scope: !6029)
!6034 = !DILocation(line: 815, column: 41, scope: !6029)
!6035 = !DILocation(line: 815, column: 23, scope: !6029)
!6036 = !DILocation(line: 815, column: 4, scope: !6029)
!6037 = !DILocation(line: 816, column: 29, scope: !6029)
!6038 = !DILocation(line: 816, column: 33, scope: !6029)
!6039 = !DILocation(line: 816, column: 55, scope: !6029)
!6040 = !DILocation(line: 816, column: 37, scope: !6029)
!6041 = !DILocation(line: 816, column: 4, scope: !6029)
!6042 = !DILocation(line: 817, column: 3, scope: !6029)
!6043 = !DILocation(line: 818, column: 12, scope: !6044)
!6044 = distinct !DILexicalBlock(scope: !6025, file: !3, line: 818, column: 12)
!6045 = !DILocation(line: 818, column: 21, scope: !6044)
!6046 = !DILocation(line: 818, column: 19, scope: !6044)
!6047 = !DILocation(line: 818, column: 12, scope: !6025)
!6048 = !DILocation(line: 819, column: 11, scope: !6049)
!6049 = distinct !DILexicalBlock(scope: !6044, file: !3, line: 818, column: 34)
!6050 = !DILocation(line: 820, column: 11, scope: !6049)
!6051 = !DILocation(line: 820, column: 20, scope: !6049)
!6052 = !DILocation(line: 820, column: 18, scope: !6049)
!6053 = !DILocation(line: 820, column: 9, scope: !6049)
!6054 = !DILocation(line: 821, column: 8, scope: !6049)
!6055 = !DILocation(line: 821, column: 17, scope: !6049)
!6056 = !DILocation(line: 821, column: 15, scope: !6049)
!6057 = !DILocation(line: 821, column: 31, scope: !6049)
!6058 = !DILocation(line: 821, column: 6, scope: !6049)
!6059 = !DILocation(line: 822, column: 40, scope: !6049)
!6060 = !DILocation(line: 822, column: 44, scope: !6049)
!6061 = !DILocation(line: 822, column: 47, scope: !6049)
!6062 = !DILocation(line: 822, column: 53, scope: !6049)
!6063 = !DILocation(line: 822, column: 9, scope: !6049)
!6064 = !DILocation(line: 822, column: 7, scope: !6049)
!6065 = !DILocation(line: 823, column: 15, scope: !6049)
!6066 = !DILocation(line: 823, column: 19, scope: !6049)
!6067 = !DILocation(line: 823, column: 41, scope: !6049)
!6068 = !DILocation(line: 823, column: 23, scope: !6049)
!6069 = !DILocation(line: 823, column: 4, scope: !6049)
!6070 = !DILocation(line: 824, column: 29, scope: !6049)
!6071 = !DILocation(line: 824, column: 33, scope: !6049)
!6072 = !DILocation(line: 824, column: 55, scope: !6049)
!6073 = !DILocation(line: 824, column: 37, scope: !6049)
!6074 = !DILocation(line: 824, column: 4, scope: !6049)
!6075 = !DILocation(line: 825, column: 3, scope: !6049)
!6076 = !DILocation(line: 826, column: 12, scope: !6077)
!6077 = distinct !DILexicalBlock(scope: !6044, file: !3, line: 826, column: 12)
!6078 = !DILocation(line: 826, column: 21, scope: !6077)
!6079 = !DILocation(line: 826, column: 19, scope: !6077)
!6080 = !DILocation(line: 826, column: 12, scope: !6044)
!6081 = !DILocation(line: 827, column: 14, scope: !6082)
!6082 = distinct !DILexicalBlock(scope: !6077, file: !3, line: 826, column: 38)
!6083 = !DILocation(line: 827, column: 11, scope: !6082)
!6084 = !DILocation(line: 828, column: 11, scope: !6082)
!6085 = !DILocation(line: 828, column: 20, scope: !6082)
!6086 = !DILocation(line: 828, column: 18, scope: !6082)
!6087 = !DILocation(line: 828, column: 9, scope: !6082)
!6088 = !DILocation(line: 829, column: 14, scope: !6082)
!6089 = !DILocation(line: 829, column: 11, scope: !6082)
!6090 = !DILocation(line: 830, column: 8, scope: !6082)
!6091 = !DILocation(line: 830, column: 17, scope: !6082)
!6092 = !DILocation(line: 830, column: 15, scope: !6082)
!6093 = !DILocation(line: 830, column: 31, scope: !6082)
!6094 = !DILocation(line: 830, column: 6, scope: !6082)
!6095 = !DILocation(line: 831, column: 8, scope: !6082)
!6096 = !DILocation(line: 831, column: 17, scope: !6082)
!6097 = !DILocation(line: 831, column: 15, scope: !6082)
!6098 = !DILocation(line: 831, column: 31, scope: !6082)
!6099 = !DILocation(line: 831, column: 6, scope: !6082)
!6100 = !DILocation(line: 832, column: 36, scope: !6082)
!6101 = !DILocation(line: 832, column: 40, scope: !6082)
!6102 = !DILocation(line: 832, column: 43, scope: !6082)
!6103 = !DILocation(line: 832, column: 49, scope: !6082)
!6104 = !DILocation(line: 832, column: 52, scope: !6082)
!6105 = !DILocation(line: 832, column: 9, scope: !6082)
!6106 = !DILocation(line: 832, column: 7, scope: !6082)
!6107 = !DILocation(line: 833, column: 15, scope: !6082)
!6108 = !DILocation(line: 833, column: 19, scope: !6082)
!6109 = !DILocation(line: 833, column: 41, scope: !6082)
!6110 = !DILocation(line: 833, column: 23, scope: !6082)
!6111 = !DILocation(line: 833, column: 4, scope: !6082)
!6112 = !DILocation(line: 834, column: 29, scope: !6082)
!6113 = !DILocation(line: 834, column: 33, scope: !6082)
!6114 = !DILocation(line: 834, column: 55, scope: !6082)
!6115 = !DILocation(line: 834, column: 37, scope: !6082)
!6116 = !DILocation(line: 834, column: 4, scope: !6082)
!6117 = !DILocation(line: 835, column: 3, scope: !6082)
!6118 = !DILocation(line: 836, column: 2, scope: !5944)
!6119 = !DILocation(line: 837, column: 12, scope: !6120)
!6120 = distinct !DILexicalBlock(scope: !5933, file: !3, line: 837, column: 11)
!6121 = !DILocation(line: 837, column: 22, scope: !6120)
!6122 = !DILocation(line: 837, column: 29, scope: !6120)
!6123 = !DILocation(line: 837, column: 40, scope: !6120)
!6124 = !DILocation(line: 837, column: 20, scope: !6120)
!6125 = !DILocation(line: 837, column: 51, scope: !6120)
!6126 = !DILocation(line: 837, column: 78, scope: !6120)
!6127 = !DILocation(line: 837, column: 55, scope: !6120)
!6128 = !DILocation(line: 837, column: 82, scope: !6120)
!6129 = !DILocation(line: 837, column: 11, scope: !5933)
!6130 = !DILocalVariable(name: "e", scope: !6131, file: !3, line: 839, type: !2638)
!6131 = distinct !DILexicalBlock(scope: !6120, file: !3, line: 837, column: 88)
!6132 = !DILocation(line: 839, column: 12, scope: !6131)
!6133 = !DILocalVariable(name: "lastedge", scope: !6131, file: !3, line: 840, type: !27)
!6134 = !DILocation(line: 840, column: 7, scope: !6131)
!6135 = !DILocation(line: 840, column: 41, scope: !6131)
!6136 = !DILocation(line: 840, column: 18, scope: !6131)
!6137 = !DILocation(line: 840, column: 45, scope: !6131)
!6138 = !DILocalVariable(name: "x", scope: !6131, file: !3, line: 841, type: !27)
!6139 = !DILocation(line: 841, column: 7, scope: !6131)
!6140 = !DILocation(line: 843, column: 5, scope: !6131)
!6141 = !DILocation(line: 844, column: 3, scope: !6131)
!6142 = !DILocation(line: 844, column: 10, scope: !6131)
!6143 = !DILocation(line: 844, column: 14, scope: !6131)
!6144 = !DILocation(line: 844, column: 12, scope: !6131)
!6145 = !DILocation(line: 844, column: 23, scope: !6131)
!6146 = !DILocation(line: 844, column: 26, scope: !6131)
!6147 = !DILocation(line: 844, column: 37, scope: !6131)
!6148 = !DILocation(line: 844, column: 44, scope: !6131)
!6149 = !DILocation(line: 844, column: 52, scope: !6131)
!6150 = !DILocation(line: 844, column: 54, scope: !6131)
!6151 = !DILocation(line: 844, column: 59, scope: !6131)
!6152 = !DILocation(line: 844, column: 34, scope: !6131)
!6153 = !DILocation(line: 0, scope: !6131)
!6154 = !DILocation(line: 845, column: 5, scope: !6155)
!6155 = distinct !DILexicalBlock(scope: !6131, file: !3, line: 844, column: 70)
!6156 = distinct !{!6156, !6141, !6157}
!6157 = !DILocation(line: 846, column: 3, scope: !6131)
!6158 = !DILocation(line: 848, column: 7, scope: !6131)
!6159 = !DILocation(line: 848, column: 14, scope: !6131)
!6160 = !DILocation(line: 848, column: 22, scope: !6131)
!6161 = !DILocation(line: 848, column: 25, scope: !6131)
!6162 = !DILocation(line: 848, column: 5, scope: !6131)
!6163 = !DILocation(line: 850, column: 7, scope: !6131)
!6164 = !DILocation(line: 850, column: 17, scope: !6131)
!6165 = !DILocation(line: 850, column: 24, scope: !6131)
!6166 = !DILocation(line: 850, column: 32, scope: !6131)
!6167 = !DILocation(line: 850, column: 35, scope: !6131)
!6168 = !DILocation(line: 850, column: 15, scope: !6131)
!6169 = !DILocation(line: 850, column: 45, scope: !6131)
!6170 = !DILocation(line: 850, column: 5, scope: !6131)
!6171 = !DILocation(line: 851, column: 31, scope: !6131)
!6172 = !DILocation(line: 851, column: 35, scope: !6131)
!6173 = !DILocation(line: 851, column: 38, scope: !6131)
!6174 = !DILocation(line: 851, column: 8, scope: !6131)
!6175 = !DILocation(line: 851, column: 6, scope: !6131)
!6176 = !DILocation(line: 852, column: 14, scope: !6131)
!6177 = !DILocation(line: 852, column: 18, scope: !6131)
!6178 = !DILocation(line: 852, column: 40, scope: !6131)
!6179 = !DILocation(line: 852, column: 22, scope: !6131)
!6180 = !DILocation(line: 852, column: 3, scope: !6131)
!6181 = !DILocation(line: 853, column: 28, scope: !6131)
!6182 = !DILocation(line: 853, column: 32, scope: !6131)
!6183 = !DILocation(line: 853, column: 54, scope: !6131)
!6184 = !DILocation(line: 853, column: 36, scope: !6131)
!6185 = !DILocation(line: 853, column: 3, scope: !6131)
!6186 = !DILocation(line: 854, column: 2, scope: !6131)
!6187 = !DILocalVariable(name: "v", scope: !6188, file: !3, line: 857, type: !2613)
!6188 = distinct !DILexicalBlock(scope: !6120, file: !3, line: 855, column: 7)
!6189 = !DILocation(line: 857, column: 12, scope: !6188)
!6190 = !DILocation(line: 858, column: 7, scope: !6188)
!6191 = !DILocation(line: 858, column: 17, scope: !6188)
!6192 = !DILocation(line: 858, column: 24, scope: !6188)
!6193 = !DILocation(line: 858, column: 35, scope: !6188)
!6194 = !DILocation(line: 858, column: 15, scope: !6188)
!6195 = !DILocation(line: 858, column: 5, scope: !6188)
!6196 = !DILocation(line: 860, column: 7, scope: !6188)
!6197 = !DILocation(line: 860, column: 14, scope: !6188)
!6198 = !DILocation(line: 860, column: 22, scope: !6188)
!6199 = !DILocation(line: 860, column: 25, scope: !6188)
!6200 = !DILocation(line: 860, column: 5, scope: !6188)
!6201 = !DILocation(line: 861, column: 31, scope: !6188)
!6202 = !DILocation(line: 861, column: 35, scope: !6188)
!6203 = !DILocation(line: 861, column: 8, scope: !6188)
!6204 = !DILocation(line: 861, column: 6, scope: !6188)
!6205 = !DILocation(line: 862, column: 14, scope: !6188)
!6206 = !DILocation(line: 862, column: 18, scope: !6188)
!6207 = !DILocation(line: 862, column: 40, scope: !6188)
!6208 = !DILocation(line: 862, column: 22, scope: !6188)
!6209 = !DILocation(line: 862, column: 3, scope: !6188)
!6210 = !DILocation(line: 863, column: 28, scope: !6188)
!6211 = !DILocation(line: 863, column: 32, scope: !6188)
!6212 = !DILocation(line: 863, column: 54, scope: !6188)
!6213 = !DILocation(line: 863, column: 36, scope: !6188)
!6214 = !DILocation(line: 863, column: 3, scope: !6188)
!6215 = !DILocation(line: 865, column: 1, scope: !5905)
!6216 = distinct !DISubprogram(name: "ccgDM_getFinalEdge", scope: !3, file: !3, line: 883, type: !6217, scopeLine: 884, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!6217 = !DISubroutineType(types: !6218)
!6218 = !{null, !11, !27, !3475}
!6219 = !DILocalVariable(name: "dm", arg: 1, scope: !6216, file: !3, line: 883, type: !11)
!6220 = !DILocation(line: 883, column: 45, scope: !6216)
!6221 = !DILocalVariable(name: "edgeNum", arg: 2, scope: !6216, file: !3, line: 883, type: !27)
!6222 = !DILocation(line: 883, column: 53, scope: !6216)
!6223 = !DILocalVariable(name: "med", arg: 3, scope: !6216, file: !3, line: 883, type: !3475)
!6224 = !DILocation(line: 883, column: 69, scope: !6216)
!6225 = !DILocalVariable(name: "ccgdm", scope: !6216, file: !3, line: 885, type: !2295)
!6226 = !DILocation(line: 885, column: 18, scope: !6216)
!6227 = !DILocation(line: 885, column: 45, scope: !6216)
!6228 = !DILocation(line: 885, column: 26, scope: !6216)
!6229 = !DILocalVariable(name: "ss", scope: !6216, file: !3, line: 886, type: !6)
!6230 = !DILocation(line: 886, column: 14, scope: !6216)
!6231 = !DILocation(line: 886, column: 19, scope: !6216)
!6232 = !DILocation(line: 886, column: 26, scope: !6216)
!6233 = !DILocalVariable(name: "i", scope: !6216, file: !3, line: 887, type: !27)
!6234 = !DILocation(line: 887, column: 6, scope: !6216)
!6235 = !DILocation(line: 889, column: 9, scope: !6216)
!6236 = !DILocation(line: 889, column: 2, scope: !6216)
!6237 = !DILocation(line: 891, column: 6, scope: !6238)
!6238 = distinct !DILexicalBlock(scope: !6216, file: !3, line: 891, column: 6)
!6239 = !DILocation(line: 891, column: 16, scope: !6238)
!6240 = !DILocation(line: 891, column: 23, scope: !6238)
!6241 = !DILocation(line: 891, column: 34, scope: !6238)
!6242 = !DILocation(line: 891, column: 14, scope: !6238)
!6243 = !DILocation(line: 891, column: 6, scope: !6216)
!6244 = !DILocalVariable(name: "lastface", scope: !6245, file: !3, line: 893, type: !27)
!6245 = distinct !DILexicalBlock(scope: !6238, file: !3, line: 891, column: 45)
!6246 = !DILocation(line: 893, column: 7, scope: !6245)
!6247 = !DILocation(line: 893, column: 41, scope: !6245)
!6248 = !DILocation(line: 893, column: 18, scope: !6245)
!6249 = !DILocation(line: 893, column: 45, scope: !6245)
!6250 = !DILocalVariable(name: "f", scope: !6245, file: !3, line: 894, type: !2461)
!6251 = !DILocation(line: 894, column: 12, scope: !6245)
!6252 = !DILocalVariable(name: "x", scope: !6245, file: !3, line: 895, type: !27)
!6253 = !DILocation(line: 895, column: 7, scope: !6245)
!6254 = !DILocalVariable(name: "y", scope: !6245, file: !3, line: 895, type: !27)
!6255 = !DILocation(line: 895, column: 10, scope: !6245)
!6256 = !DILocalVariable(name: "grid", scope: !6245, file: !3, line: 895, type: !27)
!6257 = !DILocation(line: 895, column: 13, scope: !6245)
!6258 = !DILocalVariable(name: "offset", scope: !6245, file: !3, line: 896, type: !27)
!6259 = !DILocation(line: 896, column: 7, scope: !6245)
!6260 = !DILocalVariable(name: "gridSize", scope: !6245, file: !3, line: 897, type: !27)
!6261 = !DILocation(line: 897, column: 7, scope: !6245)
!6262 = !DILocation(line: 897, column: 41, scope: !6245)
!6263 = !DILocation(line: 897, column: 18, scope: !6245)
!6264 = !DILocalVariable(name: "edgeSize", scope: !6245, file: !3, line: 898, type: !27)
!6265 = !DILocation(line: 898, column: 7, scope: !6245)
!6266 = !DILocation(line: 898, column: 41, scope: !6245)
!6267 = !DILocation(line: 898, column: 18, scope: !6245)
!6268 = !DILocalVariable(name: "gridSideEdges", scope: !6245, file: !3, line: 899, type: !27)
!6269 = !DILocation(line: 899, column: 7, scope: !6245)
!6270 = !DILocalVariable(name: "gridInternalEdges", scope: !6245, file: !3, line: 900, type: !27)
!6271 = !DILocation(line: 900, column: 7, scope: !6245)
!6272 = !DILocation(line: 939, column: 5, scope: !6245)
!6273 = !DILocation(line: 940, column: 3, scope: !6245)
!6274 = !DILocation(line: 940, column: 10, scope: !6245)
!6275 = !DILocation(line: 940, column: 14, scope: !6245)
!6276 = !DILocation(line: 940, column: 12, scope: !6245)
!6277 = !DILocation(line: 940, column: 23, scope: !6245)
!6278 = !DILocation(line: 940, column: 26, scope: !6245)
!6279 = !DILocation(line: 940, column: 37, scope: !6245)
!6280 = !DILocation(line: 940, column: 44, scope: !6245)
!6281 = !DILocation(line: 940, column: 52, scope: !6245)
!6282 = !DILocation(line: 940, column: 54, scope: !6245)
!6283 = !DILocation(line: 940, column: 59, scope: !6245)
!6284 = !DILocation(line: 940, column: 34, scope: !6245)
!6285 = !DILocation(line: 0, scope: !6245)
!6286 = !DILocation(line: 941, column: 5, scope: !6287)
!6287 = distinct !DILexicalBlock(scope: !6245, file: !3, line: 940, column: 70)
!6288 = distinct !{!6288, !6273, !6289}
!6289 = !DILocation(line: 942, column: 3, scope: !6245)
!6290 = !DILocation(line: 944, column: 7, scope: !6245)
!6291 = !DILocation(line: 944, column: 14, scope: !6245)
!6292 = !DILocation(line: 944, column: 22, scope: !6245)
!6293 = !DILocation(line: 944, column: 25, scope: !6245)
!6294 = !DILocation(line: 944, column: 5, scope: !6245)
!6295 = !DILocation(line: 947, column: 19, scope: !6245)
!6296 = !DILocation(line: 947, column: 28, scope: !6245)
!6297 = !DILocation(line: 947, column: 17, scope: !6245)
!6298 = !DILocation(line: 948, column: 24, scope: !6245)
!6299 = !DILocation(line: 948, column: 38, scope: !6245)
!6300 = !DILocation(line: 948, column: 45, scope: !6245)
!6301 = !DILocation(line: 948, column: 43, scope: !6245)
!6302 = !DILocation(line: 948, column: 59, scope: !6245)
!6303 = !DILocation(line: 948, column: 21, scope: !6245)
!6304 = !DILocation(line: 950, column: 12, scope: !6245)
!6305 = !DILocation(line: 950, column: 22, scope: !6245)
!6306 = !DILocation(line: 950, column: 29, scope: !6245)
!6307 = !DILocation(line: 950, column: 37, scope: !6245)
!6308 = !DILocation(line: 950, column: 40, scope: !6245)
!6309 = !DILocation(line: 950, column: 20, scope: !6245)
!6310 = !DILocation(line: 950, column: 10, scope: !6245)
!6311 = !DILocation(line: 951, column: 10, scope: !6245)
!6312 = !DILocation(line: 951, column: 20, scope: !6245)
!6313 = !DILocation(line: 951, column: 36, scope: !6245)
!6314 = !DILocation(line: 951, column: 34, scope: !6245)
!6315 = !DILocation(line: 951, column: 17, scope: !6245)
!6316 = !DILocation(line: 951, column: 8, scope: !6245)
!6317 = !DILocation(line: 952, column: 14, scope: !6245)
!6318 = !DILocation(line: 952, column: 30, scope: !6245)
!6319 = !DILocation(line: 952, column: 28, scope: !6245)
!6320 = !DILocation(line: 952, column: 10, scope: !6245)
!6321 = !DILocation(line: 954, column: 7, scope: !6322)
!6322 = distinct !DILexicalBlock(scope: !6245, file: !3, line: 954, column: 7)
!6323 = !DILocation(line: 954, column: 16, scope: !6322)
!6324 = !DILocation(line: 954, column: 14, scope: !6322)
!6325 = !DILocation(line: 954, column: 7, scope: !6245)
!6326 = !DILocation(line: 955, column: 8, scope: !6327)
!6327 = distinct !DILexicalBlock(scope: !6322, file: !3, line: 954, column: 31)
!6328 = !DILocation(line: 955, column: 6, scope: !6327)
!6329 = !DILocation(line: 956, column: 27, scope: !6327)
!6330 = !DILocation(line: 956, column: 31, scope: !6327)
!6331 = !DILocation(line: 956, column: 34, scope: !6327)
!6332 = !DILocation(line: 956, column: 40, scope: !6327)
!6333 = !DILocation(line: 956, column: 46, scope: !6327)
!6334 = !DILocation(line: 956, column: 56, scope: !6327)
!6335 = !DILocation(line: 956, column: 14, scope: !6327)
!6336 = !DILocation(line: 956, column: 4, scope: !6327)
!6337 = !DILocation(line: 956, column: 9, scope: !6327)
!6338 = !DILocation(line: 956, column: 12, scope: !6327)
!6339 = !DILocation(line: 957, column: 27, scope: !6327)
!6340 = !DILocation(line: 957, column: 31, scope: !6327)
!6341 = !DILocation(line: 957, column: 34, scope: !6327)
!6342 = !DILocation(line: 957, column: 40, scope: !6327)
!6343 = !DILocation(line: 957, column: 42, scope: !6327)
!6344 = !DILocation(line: 957, column: 50, scope: !6327)
!6345 = !DILocation(line: 957, column: 60, scope: !6327)
!6346 = !DILocation(line: 957, column: 14, scope: !6327)
!6347 = !DILocation(line: 957, column: 4, scope: !6327)
!6348 = !DILocation(line: 957, column: 9, scope: !6327)
!6349 = !DILocation(line: 957, column: 12, scope: !6327)
!6350 = !DILocation(line: 958, column: 3, scope: !6327)
!6351 = !DILocation(line: 960, column: 14, scope: !6352)
!6352 = distinct !DILexicalBlock(scope: !6322, file: !3, line: 959, column: 8)
!6353 = !DILocation(line: 960, column: 11, scope: !6352)
!6354 = !DILocation(line: 961, column: 9, scope: !6352)
!6355 = !DILocation(line: 961, column: 16, scope: !6352)
!6356 = !DILocation(line: 961, column: 23, scope: !6352)
!6357 = !DILocation(line: 961, column: 21, scope: !6352)
!6358 = !DILocation(line: 961, column: 37, scope: !6352)
!6359 = !DILocation(line: 961, column: 6, scope: !6352)
!6360 = !DILocation(line: 962, column: 9, scope: !6352)
!6361 = !DILocation(line: 962, column: 16, scope: !6352)
!6362 = !DILocation(line: 962, column: 23, scope: !6352)
!6363 = !DILocation(line: 962, column: 21, scope: !6352)
!6364 = !DILocation(line: 962, column: 6, scope: !6352)
!6365 = !DILocation(line: 963, column: 8, scope: !6366)
!6366 = distinct !DILexicalBlock(scope: !6352, file: !3, line: 963, column: 8)
!6367 = !DILocation(line: 963, column: 15, scope: !6366)
!6368 = !DILocation(line: 963, column: 19, scope: !6366)
!6369 = !DILocation(line: 963, column: 8, scope: !6352)
!6370 = !DILocation(line: 964, column: 28, scope: !6371)
!6371 = distinct !DILexicalBlock(scope: !6366, file: !3, line: 963, column: 25)
!6372 = !DILocation(line: 964, column: 32, scope: !6371)
!6373 = !DILocation(line: 964, column: 35, scope: !6371)
!6374 = !DILocation(line: 964, column: 41, scope: !6371)
!6375 = !DILocation(line: 964, column: 44, scope: !6371)
!6376 = !DILocation(line: 964, column: 47, scope: !6371)
!6377 = !DILocation(line: 964, column: 57, scope: !6371)
!6378 = !DILocation(line: 964, column: 15, scope: !6371)
!6379 = !DILocation(line: 964, column: 5, scope: !6371)
!6380 = !DILocation(line: 964, column: 10, scope: !6371)
!6381 = !DILocation(line: 964, column: 13, scope: !6371)
!6382 = !DILocation(line: 965, column: 28, scope: !6371)
!6383 = !DILocation(line: 965, column: 32, scope: !6371)
!6384 = !DILocation(line: 965, column: 35, scope: !6371)
!6385 = !DILocation(line: 965, column: 41, scope: !6371)
!6386 = !DILocation(line: 965, column: 44, scope: !6371)
!6387 = !DILocation(line: 965, column: 46, scope: !6371)
!6388 = !DILocation(line: 965, column: 51, scope: !6371)
!6389 = !DILocation(line: 965, column: 61, scope: !6371)
!6390 = !DILocation(line: 965, column: 15, scope: !6371)
!6391 = !DILocation(line: 965, column: 5, scope: !6371)
!6392 = !DILocation(line: 965, column: 10, scope: !6371)
!6393 = !DILocation(line: 965, column: 13, scope: !6371)
!6394 = !DILocation(line: 966, column: 4, scope: !6371)
!6395 = !DILocation(line: 968, column: 28, scope: !6396)
!6396 = distinct !DILexicalBlock(scope: !6366, file: !3, line: 967, column: 9)
!6397 = !DILocation(line: 968, column: 32, scope: !6396)
!6398 = !DILocation(line: 968, column: 35, scope: !6396)
!6399 = !DILocation(line: 968, column: 41, scope: !6396)
!6400 = !DILocation(line: 968, column: 44, scope: !6396)
!6401 = !DILocation(line: 968, column: 47, scope: !6396)
!6402 = !DILocation(line: 968, column: 57, scope: !6396)
!6403 = !DILocation(line: 968, column: 15, scope: !6396)
!6404 = !DILocation(line: 968, column: 5, scope: !6396)
!6405 = !DILocation(line: 968, column: 10, scope: !6396)
!6406 = !DILocation(line: 968, column: 13, scope: !6396)
!6407 = !DILocation(line: 969, column: 28, scope: !6396)
!6408 = !DILocation(line: 969, column: 32, scope: !6396)
!6409 = !DILocation(line: 969, column: 35, scope: !6396)
!6410 = !DILocation(line: 969, column: 41, scope: !6396)
!6411 = !DILocation(line: 969, column: 43, scope: !6396)
!6412 = !DILocation(line: 969, column: 48, scope: !6396)
!6413 = !DILocation(line: 969, column: 51, scope: !6396)
!6414 = !DILocation(line: 969, column: 61, scope: !6396)
!6415 = !DILocation(line: 969, column: 15, scope: !6396)
!6416 = !DILocation(line: 969, column: 5, scope: !6396)
!6417 = !DILocation(line: 969, column: 10, scope: !6396)
!6418 = !DILocation(line: 969, column: 13, scope: !6396)
!6419 = !DILocation(line: 972, column: 2, scope: !6245)
!6420 = !DILocalVariable(name: "e", scope: !6421, file: !3, line: 975, type: !2638)
!6421 = distinct !DILexicalBlock(scope: !6238, file: !3, line: 973, column: 7)
!6422 = !DILocation(line: 975, column: 12, scope: !6421)
!6423 = !DILocalVariable(name: "edgeSize", scope: !6421, file: !3, line: 976, type: !27)
!6424 = !DILocation(line: 976, column: 7, scope: !6421)
!6425 = !DILocation(line: 976, column: 41, scope: !6421)
!6426 = !DILocation(line: 976, column: 18, scope: !6421)
!6427 = !DILocalVariable(name: "x", scope: !6421, file: !3, line: 977, type: !27)
!6428 = !DILocation(line: 977, column: 7, scope: !6421)
!6429 = !DILocalVariable(name: "edgeFlag", scope: !6421, file: !3, line: 978, type: !2333)
!6430 = !DILocation(line: 978, column: 10, scope: !6421)
!6431 = !DILocalVariable(name: "flags", scope: !6421, file: !3, line: 979, type: !84)
!6432 = !DILocation(line: 979, column: 16, scope: !6421)
!6433 = !DILocation(line: 981, column: 8, scope: !6421)
!6434 = !DILocation(line: 981, column: 18, scope: !6421)
!6435 = !DILocation(line: 981, column: 25, scope: !6421)
!6436 = !DILocation(line: 981, column: 36, scope: !6421)
!6437 = !DILocation(line: 981, column: 16, scope: !6421)
!6438 = !DILocation(line: 981, column: 50, scope: !6421)
!6439 = !DILocation(line: 981, column: 59, scope: !6421)
!6440 = !DILocation(line: 981, column: 47, scope: !6421)
!6441 = !DILocation(line: 981, column: 5, scope: !6421)
!6442 = !DILocation(line: 983, column: 7, scope: !6421)
!6443 = !DILocation(line: 983, column: 14, scope: !6421)
!6444 = !DILocation(line: 983, column: 22, scope: !6421)
!6445 = !DILocation(line: 983, column: 25, scope: !6421)
!6446 = !DILocation(line: 983, column: 5, scope: !6421)
!6447 = !DILocation(line: 985, column: 35, scope: !6448)
!6448 = distinct !DILexicalBlock(scope: !6421, file: !3, line: 985, column: 7)
!6449 = !DILocation(line: 985, column: 8, scope: !6448)
!6450 = !DILocation(line: 985, column: 7, scope: !6421)
!6451 = !DILocation(line: 985, column: 45, scope: !6448)
!6452 = !DILocation(line: 985, column: 39, scope: !6448)
!6453 = !DILocation(line: 987, column: 7, scope: !6421)
!6454 = !DILocation(line: 987, column: 17, scope: !6421)
!6455 = !DILocation(line: 987, column: 24, scope: !6421)
!6456 = !DILocation(line: 987, column: 32, scope: !6421)
!6457 = !DILocation(line: 987, column: 35, scope: !6421)
!6458 = !DILocation(line: 987, column: 15, scope: !6421)
!6459 = !DILocation(line: 987, column: 5, scope: !6421)
!6460 = !DILocation(line: 989, column: 26, scope: !6421)
!6461 = !DILocation(line: 989, column: 30, scope: !6421)
!6462 = !DILocation(line: 989, column: 33, scope: !6421)
!6463 = !DILocation(line: 989, column: 36, scope: !6421)
!6464 = !DILocation(line: 989, column: 13, scope: !6421)
!6465 = !DILocation(line: 989, column: 3, scope: !6421)
!6466 = !DILocation(line: 989, column: 8, scope: !6421)
!6467 = !DILocation(line: 989, column: 11, scope: !6421)
!6468 = !DILocation(line: 990, column: 26, scope: !6421)
!6469 = !DILocation(line: 990, column: 30, scope: !6421)
!6470 = !DILocation(line: 990, column: 33, scope: !6421)
!6471 = !DILocation(line: 990, column: 35, scope: !6421)
!6472 = !DILocation(line: 990, column: 40, scope: !6421)
!6473 = !DILocation(line: 990, column: 13, scope: !6421)
!6474 = !DILocation(line: 990, column: 3, scope: !6421)
!6475 = !DILocation(line: 990, column: 8, scope: !6421)
!6476 = !DILocation(line: 990, column: 11, scope: !6421)
!6477 = !DILocation(line: 992, column: 15, scope: !6421)
!6478 = !DILocation(line: 992, column: 22, scope: !6421)
!6479 = !DILocation(line: 992, column: 14, scope: !6421)
!6480 = !DILocation(line: 992, column: 36, scope: !6421)
!6481 = !DILocation(line: 992, column: 43, scope: !6421)
!6482 = !DILocation(line: 992, column: 53, scope: !6421)
!6483 = !DILocation(line: 992, column: 12, scope: !6421)
!6484 = !DILocation(line: 993, column: 7, scope: !6485)
!6485 = distinct !DILexicalBlock(scope: !6421, file: !3, line: 993, column: 7)
!6486 = !DILocation(line: 993, column: 7, scope: !6421)
!6487 = !DILocation(line: 994, column: 15, scope: !6485)
!6488 = !DILocation(line: 994, column: 14, scope: !6485)
!6489 = !DILocation(line: 994, column: 24, scope: !6485)
!6490 = !DILocation(line: 994, column: 48, scope: !6485)
!6491 = !DILocation(line: 994, column: 62, scope: !6485)
!6492 = !DILocation(line: 994, column: 10, scope: !6485)
!6493 = !DILocation(line: 994, column: 4, scope: !6485)
!6494 = !DILocation(line: 996, column: 10, scope: !6485)
!6495 = !DILocation(line: 998, column: 15, scope: !6421)
!6496 = !DILocation(line: 998, column: 3, scope: !6421)
!6497 = !DILocation(line: 998, column: 8, scope: !6421)
!6498 = !DILocation(line: 998, column: 13, scope: !6421)
!6499 = !DILocation(line: 1000, column: 1, scope: !6216)
!6500 = distinct !DISubprogram(name: "ccgDM_getFinalFace", scope: !3, file: !3, line: 1002, type: !6501, scopeLine: 1003, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!6501 = !DISubroutineType(types: !6502)
!6502 = !{null, !11, !27, !6503}
!6503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6504, size: 64)
!6504 = !DIDerivedType(tag: DW_TAG_typedef, name: "MFace", file: !684, line: 46, baseType: !1895)
!6505 = !DILocalVariable(name: "dm", arg: 1, scope: !6500, file: !3, line: 1002, type: !11)
!6506 = !DILocation(line: 1002, column: 45, scope: !6500)
!6507 = !DILocalVariable(name: "faceNum", arg: 2, scope: !6500, file: !3, line: 1002, type: !27)
!6508 = !DILocation(line: 1002, column: 53, scope: !6500)
!6509 = !DILocalVariable(name: "mf", arg: 3, scope: !6500, file: !3, line: 1002, type: !6503)
!6510 = !DILocation(line: 1002, column: 69, scope: !6500)
!6511 = !DILocalVariable(name: "ccgdm", scope: !6500, file: !3, line: 1004, type: !2295)
!6512 = !DILocation(line: 1004, column: 18, scope: !6500)
!6513 = !DILocation(line: 1004, column: 45, scope: !6500)
!6514 = !DILocation(line: 1004, column: 26, scope: !6500)
!6515 = !DILocalVariable(name: "ss", scope: !6500, file: !3, line: 1005, type: !6)
!6516 = !DILocation(line: 1005, column: 14, scope: !6500)
!6517 = !DILocation(line: 1005, column: 19, scope: !6500)
!6518 = !DILocation(line: 1005, column: 26, scope: !6500)
!6519 = !DILocalVariable(name: "gridSize", scope: !6500, file: !3, line: 1006, type: !27)
!6520 = !DILocation(line: 1006, column: 6, scope: !6500)
!6521 = !DILocation(line: 1006, column: 40, scope: !6500)
!6522 = !DILocation(line: 1006, column: 17, scope: !6500)
!6523 = !DILocalVariable(name: "edgeSize", scope: !6500, file: !3, line: 1007, type: !27)
!6524 = !DILocation(line: 1007, column: 6, scope: !6500)
!6525 = !DILocation(line: 1007, column: 40, scope: !6500)
!6526 = !DILocation(line: 1007, column: 17, scope: !6500)
!6527 = !DILocalVariable(name: "gridSideEdges", scope: !6500, file: !3, line: 1008, type: !27)
!6528 = !DILocation(line: 1008, column: 6, scope: !6500)
!6529 = !DILocation(line: 1008, column: 22, scope: !6500)
!6530 = !DILocation(line: 1008, column: 31, scope: !6500)
!6531 = !DILocalVariable(name: "gridFaces", scope: !6500, file: !3, line: 1009, type: !27)
!6532 = !DILocation(line: 1009, column: 6, scope: !6500)
!6533 = !DILocation(line: 1009, column: 18, scope: !6500)
!6534 = !DILocation(line: 1009, column: 34, scope: !6500)
!6535 = !DILocation(line: 1009, column: 32, scope: !6500)
!6536 = !DILocalVariable(name: "i", scope: !6500, file: !3, line: 1010, type: !27)
!6537 = !DILocation(line: 1010, column: 6, scope: !6500)
!6538 = !DILocalVariable(name: "f", scope: !6500, file: !3, line: 1011, type: !2461)
!6539 = !DILocation(line: 1011, column: 11, scope: !6500)
!6540 = !DILocalVariable(name: "offset", scope: !6500, file: !3, line: 1013, type: !27)
!6541 = !DILocation(line: 1013, column: 6, scope: !6500)
!6542 = !DILocalVariable(name: "grid", scope: !6500, file: !3, line: 1014, type: !27)
!6543 = !DILocation(line: 1014, column: 6, scope: !6500)
!6544 = !DILocalVariable(name: "x", scope: !6500, file: !3, line: 1015, type: !27)
!6545 = !DILocation(line: 1015, column: 6, scope: !6500)
!6546 = !DILocalVariable(name: "y", scope: !6500, file: !3, line: 1015, type: !27)
!6547 = !DILocation(line: 1015, column: 9, scope: !6500)
!6548 = !DILocalVariable(name: "faceFlags", scope: !6500, file: !3, line: 1017, type: !2024)
!6549 = !DILocation(line: 1017, column: 13, scope: !6500)
!6550 = !DILocation(line: 1017, column: 25, scope: !6500)
!6551 = !DILocation(line: 1017, column: 32, scope: !6500)
!6552 = !DILocation(line: 1019, column: 9, scope: !6500)
!6553 = !DILocation(line: 1019, column: 2, scope: !6500)
!6554 = !DILocation(line: 1020, column: 6, scope: !6555)
!6555 = distinct !DILexicalBlock(scope: !6500, file: !3, line: 1020, column: 6)
!6556 = !DILocation(line: 1020, column: 17, scope: !6555)
!6557 = !DILocation(line: 1020, column: 24, scope: !6555)
!6558 = !DILocation(line: 1020, column: 27, scope: !6555)
!6559 = !DILocation(line: 1020, column: 14, scope: !6555)
!6560 = !DILocation(line: 1020, column: 6, scope: !6500)
!6561 = !DILocation(line: 1021, column: 3, scope: !6555)
!6562 = !DILocation(line: 1023, column: 6, scope: !6500)
!6563 = !DILocation(line: 1023, column: 13, scope: !6500)
!6564 = !DILocation(line: 1023, column: 28, scope: !6500)
!6565 = !DILocation(line: 1023, column: 4, scope: !6500)
!6566 = !DILocation(line: 1025, column: 6, scope: !6500)
!6567 = !DILocation(line: 1025, column: 13, scope: !6500)
!6568 = !DILocation(line: 1025, column: 21, scope: !6500)
!6569 = !DILocation(line: 1025, column: 24, scope: !6500)
!6570 = !DILocation(line: 1025, column: 4, scope: !6500)
!6571 = !DILocation(line: 1028, column: 11, scope: !6500)
!6572 = !DILocation(line: 1028, column: 21, scope: !6500)
!6573 = !DILocation(line: 1028, column: 28, scope: !6500)
!6574 = !DILocation(line: 1028, column: 36, scope: !6500)
!6575 = !DILocation(line: 1028, column: 39, scope: !6500)
!6576 = !DILocation(line: 1028, column: 19, scope: !6500)
!6577 = !DILocation(line: 1028, column: 9, scope: !6500)
!6578 = !DILocation(line: 1029, column: 9, scope: !6500)
!6579 = !DILocation(line: 1029, column: 18, scope: !6500)
!6580 = !DILocation(line: 1029, column: 16, scope: !6500)
!6581 = !DILocation(line: 1029, column: 7, scope: !6500)
!6582 = !DILocation(line: 1030, column: 12, scope: !6500)
!6583 = !DILocation(line: 1030, column: 9, scope: !6500)
!6584 = !DILocation(line: 1031, column: 6, scope: !6500)
!6585 = !DILocation(line: 1031, column: 15, scope: !6500)
!6586 = !DILocation(line: 1031, column: 13, scope: !6500)
!6587 = !DILocation(line: 1031, column: 4, scope: !6500)
!6588 = !DILocation(line: 1032, column: 6, scope: !6500)
!6589 = !DILocation(line: 1032, column: 15, scope: !6500)
!6590 = !DILocation(line: 1032, column: 13, scope: !6500)
!6591 = !DILocation(line: 1032, column: 4, scope: !6500)
!6592 = !DILocation(line: 1034, column: 24, scope: !6500)
!6593 = !DILocation(line: 1034, column: 28, scope: !6500)
!6594 = !DILocation(line: 1034, column: 31, scope: !6500)
!6595 = !DILocation(line: 1034, column: 37, scope: !6500)
!6596 = !DILocation(line: 1034, column: 39, scope: !6500)
!6597 = !DILocation(line: 1034, column: 44, scope: !6500)
!6598 = !DILocation(line: 1034, column: 46, scope: !6500)
!6599 = !DILocation(line: 1034, column: 51, scope: !6500)
!6600 = !DILocation(line: 1034, column: 61, scope: !6500)
!6601 = !DILocation(line: 1034, column: 11, scope: !6500)
!6602 = !DILocation(line: 1034, column: 2, scope: !6500)
!6603 = !DILocation(line: 1034, column: 6, scope: !6500)
!6604 = !DILocation(line: 1034, column: 9, scope: !6500)
!6605 = !DILocation(line: 1035, column: 24, scope: !6500)
!6606 = !DILocation(line: 1035, column: 28, scope: !6500)
!6607 = !DILocation(line: 1035, column: 31, scope: !6500)
!6608 = !DILocation(line: 1035, column: 37, scope: !6500)
!6609 = !DILocation(line: 1035, column: 39, scope: !6500)
!6610 = !DILocation(line: 1035, column: 44, scope: !6500)
!6611 = !DILocation(line: 1035, column: 46, scope: !6500)
!6612 = !DILocation(line: 1035, column: 51, scope: !6500)
!6613 = !DILocation(line: 1035, column: 61, scope: !6500)
!6614 = !DILocation(line: 1035, column: 11, scope: !6500)
!6615 = !DILocation(line: 1035, column: 2, scope: !6500)
!6616 = !DILocation(line: 1035, column: 6, scope: !6500)
!6617 = !DILocation(line: 1035, column: 9, scope: !6500)
!6618 = !DILocation(line: 1036, column: 24, scope: !6500)
!6619 = !DILocation(line: 1036, column: 28, scope: !6500)
!6620 = !DILocation(line: 1036, column: 31, scope: !6500)
!6621 = !DILocation(line: 1036, column: 37, scope: !6500)
!6622 = !DILocation(line: 1036, column: 39, scope: !6500)
!6623 = !DILocation(line: 1036, column: 44, scope: !6500)
!6624 = !DILocation(line: 1036, column: 46, scope: !6500)
!6625 = !DILocation(line: 1036, column: 51, scope: !6500)
!6626 = !DILocation(line: 1036, column: 61, scope: !6500)
!6627 = !DILocation(line: 1036, column: 11, scope: !6500)
!6628 = !DILocation(line: 1036, column: 2, scope: !6500)
!6629 = !DILocation(line: 1036, column: 6, scope: !6500)
!6630 = !DILocation(line: 1036, column: 9, scope: !6500)
!6631 = !DILocation(line: 1037, column: 24, scope: !6500)
!6632 = !DILocation(line: 1037, column: 28, scope: !6500)
!6633 = !DILocation(line: 1037, column: 31, scope: !6500)
!6634 = !DILocation(line: 1037, column: 37, scope: !6500)
!6635 = !DILocation(line: 1037, column: 39, scope: !6500)
!6636 = !DILocation(line: 1037, column: 44, scope: !6500)
!6637 = !DILocation(line: 1037, column: 46, scope: !6500)
!6638 = !DILocation(line: 1037, column: 51, scope: !6500)
!6639 = !DILocation(line: 1037, column: 61, scope: !6500)
!6640 = !DILocation(line: 1037, column: 11, scope: !6500)
!6641 = !DILocation(line: 1037, column: 2, scope: !6500)
!6642 = !DILocation(line: 1037, column: 6, scope: !6500)
!6643 = !DILocation(line: 1037, column: 9, scope: !6500)
!6644 = !DILocation(line: 1039, column: 6, scope: !6645)
!6645 = distinct !DILexicalBlock(scope: !6500, file: !3, line: 1039, column: 6)
!6646 = !DILocation(line: 1039, column: 6, scope: !6500)
!6647 = !DILocation(line: 1040, column: 14, scope: !6648)
!6648 = distinct !DILexicalBlock(scope: !6645, file: !3, line: 1039, column: 17)
!6649 = !DILocation(line: 1040, column: 24, scope: !6648)
!6650 = !DILocation(line: 1040, column: 27, scope: !6648)
!6651 = !DILocation(line: 1040, column: 3, scope: !6648)
!6652 = !DILocation(line: 1040, column: 7, scope: !6648)
!6653 = !DILocation(line: 1040, column: 12, scope: !6648)
!6654 = !DILocation(line: 1041, column: 16, scope: !6648)
!6655 = !DILocation(line: 1041, column: 26, scope: !6648)
!6656 = !DILocation(line: 1041, column: 29, scope: !6648)
!6657 = !DILocation(line: 1041, column: 3, scope: !6648)
!6658 = !DILocation(line: 1041, column: 7, scope: !6648)
!6659 = !DILocation(line: 1041, column: 14, scope: !6648)
!6660 = !DILocation(line: 1042, column: 2, scope: !6648)
!6661 = !DILocation(line: 1044, column: 3, scope: !6662)
!6662 = distinct !DILexicalBlock(scope: !6645, file: !3, line: 1043, column: 7)
!6663 = !DILocation(line: 1044, column: 7, scope: !6662)
!6664 = !DILocation(line: 1044, column: 12, scope: !6662)
!6665 = !DILocation(line: 1047, column: 2, scope: !6500)
!6666 = !DILocation(line: 1047, column: 6, scope: !6500)
!6667 = !DILocation(line: 1047, column: 13, scope: !6500)
!6668 = !DILocation(line: 1048, column: 1, scope: !6500)
!6669 = distinct !DISubprogram(name: "ccgDM_getFinalVertCo", scope: !3, file: !3, line: 867, type: !2074, scopeLine: 868, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!6670 = !DILocalVariable(name: "dm", arg: 1, scope: !6669, file: !3, line: 867, type: !11)
!6671 = !DILocation(line: 867, column: 47, scope: !6669)
!6672 = !DILocalVariable(name: "vertNum", arg: 2, scope: !6669, file: !3, line: 867, type: !27)
!6673 = !DILocation(line: 867, column: 55, scope: !6669)
!6674 = !DILocalVariable(name: "r_co", arg: 3, scope: !6669, file: !3, line: 867, type: !1306)
!6675 = !DILocation(line: 867, column: 70, scope: !6669)
!6676 = !DILocalVariable(name: "mvert", scope: !6669, file: !3, line: 869, type: !2401)
!6677 = !DILocation(line: 869, column: 8, scope: !6669)
!6678 = !DILocation(line: 871, column: 21, scope: !6669)
!6679 = !DILocation(line: 871, column: 25, scope: !6669)
!6680 = !DILocation(line: 871, column: 2, scope: !6669)
!6681 = !DILocation(line: 872, column: 13, scope: !6669)
!6682 = !DILocation(line: 872, column: 25, scope: !6669)
!6683 = !DILocation(line: 872, column: 19, scope: !6669)
!6684 = !DILocation(line: 872, column: 2, scope: !6669)
!6685 = !DILocation(line: 873, column: 1, scope: !6669)
!6686 = distinct !DISubprogram(name: "ccgDM_getFinalVertNo", scope: !3, file: !3, line: 875, type: !2074, scopeLine: 876, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!6687 = !DILocalVariable(name: "dm", arg: 1, scope: !6686, file: !3, line: 875, type: !11)
!6688 = !DILocation(line: 875, column: 47, scope: !6686)
!6689 = !DILocalVariable(name: "vertNum", arg: 2, scope: !6686, file: !3, line: 875, type: !27)
!6690 = !DILocation(line: 875, column: 55, scope: !6686)
!6691 = !DILocalVariable(name: "r_no", arg: 3, scope: !6686, file: !3, line: 875, type: !1306)
!6692 = !DILocation(line: 875, column: 70, scope: !6686)
!6693 = !DILocalVariable(name: "mvert", scope: !6686, file: !3, line: 877, type: !2401)
!6694 = !DILocation(line: 877, column: 8, scope: !6686)
!6695 = !DILocation(line: 879, column: 21, scope: !6686)
!6696 = !DILocation(line: 879, column: 25, scope: !6686)
!6697 = !DILocation(line: 879, column: 2, scope: !6686)
!6698 = !DILocation(line: 880, column: 27, scope: !6686)
!6699 = !DILocation(line: 880, column: 39, scope: !6686)
!6700 = !DILocation(line: 880, column: 33, scope: !6686)
!6701 = !DILocation(line: 880, column: 2, scope: !6686)
!6702 = !DILocation(line: 881, column: 1, scope: !6686)
!6703 = distinct !DISubprogram(name: "ccgDM_copyFinalVertArray", scope: !3, file: !3, line: 1135, type: !6704, scopeLine: 1136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!6704 = !DISubroutineType(types: !6705)
!6705 = !{null, !11, !2400}
!6706 = !DILocalVariable(name: "dm", arg: 1, scope: !6703, file: !3, line: 1135, type: !11)
!6707 = !DILocation(line: 1135, column: 51, scope: !6703)
!6708 = !DILocalVariable(name: "mvert", arg: 2, scope: !6703, file: !3, line: 1135, type: !2400)
!6709 = !DILocation(line: 1135, column: 62, scope: !6703)
!6710 = !DILocalVariable(name: "ccgdm", scope: !6703, file: !3, line: 1137, type: !2295)
!6711 = !DILocation(line: 1137, column: 18, scope: !6703)
!6712 = !DILocation(line: 1137, column: 45, scope: !6703)
!6713 = !DILocation(line: 1137, column: 26, scope: !6703)
!6714 = !DILocalVariable(name: "ss", scope: !6703, file: !3, line: 1138, type: !6)
!6715 = !DILocation(line: 1138, column: 14, scope: !6703)
!6716 = !DILocation(line: 1138, column: 19, scope: !6703)
!6717 = !DILocation(line: 1138, column: 26, scope: !6703)
!6718 = !DILocalVariable(name: "vd", scope: !6703, file: !3, line: 1139, type: !2371)
!6719 = !DILocation(line: 1139, column: 11, scope: !6703)
!6720 = !DILocalVariable(name: "key", scope: !6703, file: !3, line: 1140, type: !5667)
!6721 = !DILocation(line: 1140, column: 9, scope: !6703)
!6722 = !DILocalVariable(name: "index", scope: !6703, file: !3, line: 1141, type: !27)
!6723 = !DILocation(line: 1141, column: 6, scope: !6703)
!6724 = !DILocalVariable(name: "totvert", scope: !6703, file: !3, line: 1142, type: !27)
!6725 = !DILocation(line: 1142, column: 6, scope: !6703)
!6726 = !DILocalVariable(name: "totedge", scope: !6703, file: !3, line: 1142, type: !27)
!6727 = !DILocation(line: 1142, column: 15, scope: !6703)
!6728 = !DILocalVariable(name: "totface", scope: !6703, file: !3, line: 1142, type: !27)
!6729 = !DILocation(line: 1142, column: 24, scope: !6703)
!6730 = !DILocalVariable(name: "gridSize", scope: !6703, file: !3, line: 1143, type: !27)
!6731 = !DILocation(line: 1143, column: 6, scope: !6703)
!6732 = !DILocation(line: 1143, column: 40, scope: !6703)
!6733 = !DILocation(line: 1143, column: 17, scope: !6703)
!6734 = !DILocalVariable(name: "edgeSize", scope: !6703, file: !3, line: 1144, type: !27)
!6735 = !DILocation(line: 1144, column: 6, scope: !6703)
!6736 = !DILocation(line: 1144, column: 40, scope: !6703)
!6737 = !DILocation(line: 1144, column: 17, scope: !6703)
!6738 = !DILocalVariable(name: "i", scope: !6703, file: !3, line: 1145, type: !84)
!6739 = !DILocation(line: 1145, column: 15, scope: !6703)
!6740 = !DILocation(line: 1147, column: 26, scope: !6703)
!6741 = !DILocation(line: 1147, column: 2, scope: !6703)
!6742 = !DILocation(line: 1149, column: 35, scope: !6703)
!6743 = !DILocation(line: 1149, column: 12, scope: !6703)
!6744 = !DILocation(line: 1149, column: 10, scope: !6703)
!6745 = !DILocation(line: 1150, column: 13, scope: !6746)
!6746 = distinct !DILexicalBlock(scope: !6703, file: !3, line: 1150, column: 2)
!6747 = !DILocation(line: 1150, column: 7, scope: !6746)
!6748 = !DILocation(line: 1150, column: 18, scope: !6749)
!6749 = distinct !DILexicalBlock(scope: !6746, file: !3, line: 1150, column: 2)
!6750 = !DILocation(line: 1150, column: 26, scope: !6749)
!6751 = !DILocation(line: 1150, column: 24, scope: !6749)
!6752 = !DILocation(line: 1150, column: 2, scope: !6746)
!6753 = !DILocalVariable(name: "f", scope: !6754, file: !3, line: 1151, type: !2461)
!6754 = distinct !DILexicalBlock(scope: !6749, file: !3, line: 1150, column: 44)
!6755 = !DILocation(line: 1151, column: 12, scope: !6754)
!6756 = !DILocation(line: 1151, column: 16, scope: !6754)
!6757 = !DILocation(line: 1151, column: 23, scope: !6754)
!6758 = !DILocation(line: 1151, column: 31, scope: !6754)
!6759 = !DILocation(line: 1151, column: 38, scope: !6754)
!6760 = !DILocalVariable(name: "x", scope: !6754, file: !3, line: 1152, type: !27)
!6761 = !DILocation(line: 1152, column: 7, scope: !6754)
!6762 = !DILocalVariable(name: "y", scope: !6754, file: !3, line: 1152, type: !27)
!6763 = !DILocation(line: 1152, column: 10, scope: !6754)
!6764 = !DILocalVariable(name: "S", scope: !6754, file: !3, line: 1152, type: !27)
!6765 = !DILocation(line: 1152, column: 13, scope: !6754)
!6766 = !DILocalVariable(name: "numVerts", scope: !6754, file: !3, line: 1152, type: !27)
!6767 = !DILocation(line: 1152, column: 16, scope: !6754)
!6768 = !DILocation(line: 1152, column: 54, scope: !6754)
!6769 = !DILocation(line: 1152, column: 27, scope: !6754)
!6770 = !DILocation(line: 1154, column: 37, scope: !6754)
!6771 = !DILocation(line: 1154, column: 8, scope: !6754)
!6772 = !DILocation(line: 1154, column: 6, scope: !6754)
!6773 = !DILocation(line: 1155, column: 19, scope: !6754)
!6774 = !DILocation(line: 1155, column: 26, scope: !6754)
!6775 = !DILocation(line: 1155, column: 37, scope: !6754)
!6776 = !DILocation(line: 1155, column: 3, scope: !6754)
!6777 = !DILocation(line: 1157, column: 10, scope: !6778)
!6778 = distinct !DILexicalBlock(scope: !6754, file: !3, line: 1157, column: 3)
!6779 = !DILocation(line: 1157, column: 8, scope: !6778)
!6780 = !DILocation(line: 1157, column: 15, scope: !6781)
!6781 = distinct !DILexicalBlock(scope: !6778, file: !3, line: 1157, column: 3)
!6782 = !DILocation(line: 1157, column: 19, scope: !6781)
!6783 = !DILocation(line: 1157, column: 17, scope: !6781)
!6784 = !DILocation(line: 1157, column: 3, scope: !6778)
!6785 = !DILocation(line: 1158, column: 11, scope: !6786)
!6786 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 1158, column: 4)
!6787 = distinct !DILexicalBlock(scope: !6781, file: !3, line: 1157, column: 34)
!6788 = !DILocation(line: 1158, column: 9, scope: !6786)
!6789 = !DILocation(line: 1158, column: 16, scope: !6790)
!6790 = distinct !DILexicalBlock(scope: !6786, file: !3, line: 1158, column: 4)
!6791 = !DILocation(line: 1158, column: 20, scope: !6790)
!6792 = !DILocation(line: 1158, column: 29, scope: !6790)
!6793 = !DILocation(line: 1158, column: 18, scope: !6790)
!6794 = !DILocation(line: 1158, column: 4, scope: !6786)
!6795 = !DILocation(line: 1159, column: 41, scope: !6796)
!6796 = distinct !DILexicalBlock(scope: !6790, file: !3, line: 1158, column: 39)
!6797 = !DILocation(line: 1159, column: 45, scope: !6796)
!6798 = !DILocation(line: 1159, column: 48, scope: !6796)
!6799 = !DILocation(line: 1159, column: 51, scope: !6796)
!6800 = !DILocation(line: 1159, column: 10, scope: !6796)
!6801 = !DILocation(line: 1159, column: 8, scope: !6796)
!6802 = !DILocation(line: 1160, column: 21, scope: !6796)
!6803 = !DILocation(line: 1160, column: 28, scope: !6796)
!6804 = !DILocation(line: 1160, column: 39, scope: !6796)
!6805 = !DILocation(line: 1160, column: 5, scope: !6796)
!6806 = !DILocation(line: 1161, column: 4, scope: !6796)
!6807 = !DILocation(line: 1158, column: 35, scope: !6790)
!6808 = !DILocation(line: 1158, column: 4, scope: !6790)
!6809 = distinct !{!6809, !6794, !6810}
!6810 = !DILocation(line: 1161, column: 4, scope: !6786)
!6811 = !DILocation(line: 1162, column: 3, scope: !6787)
!6812 = !DILocation(line: 1157, column: 30, scope: !6781)
!6813 = !DILocation(line: 1157, column: 3, scope: !6781)
!6814 = distinct !{!6814, !6784, !6815}
!6815 = !DILocation(line: 1162, column: 3, scope: !6778)
!6816 = !DILocation(line: 1164, column: 10, scope: !6817)
!6817 = distinct !DILexicalBlock(scope: !6754, file: !3, line: 1164, column: 3)
!6818 = !DILocation(line: 1164, column: 8, scope: !6817)
!6819 = !DILocation(line: 1164, column: 15, scope: !6820)
!6820 = distinct !DILexicalBlock(scope: !6817, file: !3, line: 1164, column: 3)
!6821 = !DILocation(line: 1164, column: 19, scope: !6820)
!6822 = !DILocation(line: 1164, column: 17, scope: !6820)
!6823 = !DILocation(line: 1164, column: 3, scope: !6817)
!6824 = !DILocation(line: 1165, column: 11, scope: !6825)
!6825 = distinct !DILexicalBlock(scope: !6826, file: !3, line: 1165, column: 4)
!6826 = distinct !DILexicalBlock(scope: !6820, file: !3, line: 1164, column: 34)
!6827 = !DILocation(line: 1165, column: 9, scope: !6825)
!6828 = !DILocation(line: 1165, column: 16, scope: !6829)
!6829 = distinct !DILexicalBlock(scope: !6825, file: !3, line: 1165, column: 4)
!6830 = !DILocation(line: 1165, column: 20, scope: !6829)
!6831 = !DILocation(line: 1165, column: 29, scope: !6829)
!6832 = !DILocation(line: 1165, column: 18, scope: !6829)
!6833 = !DILocation(line: 1165, column: 4, scope: !6825)
!6834 = !DILocation(line: 1166, column: 12, scope: !6835)
!6835 = distinct !DILexicalBlock(scope: !6836, file: !3, line: 1166, column: 5)
!6836 = distinct !DILexicalBlock(scope: !6829, file: !3, line: 1165, column: 39)
!6837 = !DILocation(line: 1166, column: 10, scope: !6835)
!6838 = !DILocation(line: 1166, column: 17, scope: !6839)
!6839 = distinct !DILexicalBlock(scope: !6835, file: !3, line: 1166, column: 5)
!6840 = !DILocation(line: 1166, column: 21, scope: !6839)
!6841 = !DILocation(line: 1166, column: 30, scope: !6839)
!6842 = !DILocation(line: 1166, column: 19, scope: !6839)
!6843 = !DILocation(line: 1166, column: 5, scope: !6835)
!6844 = !DILocation(line: 1167, column: 38, scope: !6845)
!6845 = distinct !DILexicalBlock(scope: !6839, file: !3, line: 1166, column: 40)
!6846 = !DILocation(line: 1167, column: 42, scope: !6845)
!6847 = !DILocation(line: 1167, column: 45, scope: !6845)
!6848 = !DILocation(line: 1167, column: 48, scope: !6845)
!6849 = !DILocation(line: 1167, column: 51, scope: !6845)
!6850 = !DILocation(line: 1167, column: 11, scope: !6845)
!6851 = !DILocation(line: 1167, column: 9, scope: !6845)
!6852 = !DILocation(line: 1168, column: 22, scope: !6845)
!6853 = !DILocation(line: 1168, column: 29, scope: !6845)
!6854 = !DILocation(line: 1168, column: 40, scope: !6845)
!6855 = !DILocation(line: 1168, column: 6, scope: !6845)
!6856 = !DILocation(line: 1169, column: 5, scope: !6845)
!6857 = !DILocation(line: 1166, column: 36, scope: !6839)
!6858 = !DILocation(line: 1166, column: 5, scope: !6839)
!6859 = distinct !{!6859, !6843, !6860}
!6860 = !DILocation(line: 1169, column: 5, scope: !6835)
!6861 = !DILocation(line: 1170, column: 4, scope: !6836)
!6862 = !DILocation(line: 1165, column: 35, scope: !6829)
!6863 = !DILocation(line: 1165, column: 4, scope: !6829)
!6864 = distinct !{!6864, !6833, !6865}
!6865 = !DILocation(line: 1170, column: 4, scope: !6825)
!6866 = !DILocation(line: 1171, column: 3, scope: !6826)
!6867 = !DILocation(line: 1164, column: 30, scope: !6820)
!6868 = !DILocation(line: 1164, column: 3, scope: !6820)
!6869 = distinct !{!6869, !6823, !6870}
!6870 = !DILocation(line: 1171, column: 3, scope: !6817)
!6871 = !DILocation(line: 1172, column: 2, scope: !6754)
!6872 = !DILocation(line: 1150, column: 40, scope: !6749)
!6873 = !DILocation(line: 1150, column: 2, scope: !6749)
!6874 = distinct !{!6874, !6752, !6875}
!6875 = !DILocation(line: 1172, column: 2, scope: !6746)
!6876 = !DILocation(line: 1174, column: 35, scope: !6703)
!6877 = !DILocation(line: 1174, column: 12, scope: !6703)
!6878 = !DILocation(line: 1174, column: 10, scope: !6703)
!6879 = !DILocation(line: 1175, column: 13, scope: !6880)
!6880 = distinct !DILexicalBlock(scope: !6703, file: !3, line: 1175, column: 2)
!6881 = !DILocation(line: 1175, column: 7, scope: !6880)
!6882 = !DILocation(line: 1175, column: 18, scope: !6883)
!6883 = distinct !DILexicalBlock(scope: !6880, file: !3, line: 1175, column: 2)
!6884 = !DILocation(line: 1175, column: 26, scope: !6883)
!6885 = !DILocation(line: 1175, column: 24, scope: !6883)
!6886 = !DILocation(line: 1175, column: 2, scope: !6880)
!6887 = !DILocalVariable(name: "e", scope: !6888, file: !3, line: 1176, type: !2638)
!6888 = distinct !DILexicalBlock(scope: !6883, file: !3, line: 1175, column: 44)
!6889 = !DILocation(line: 1176, column: 12, scope: !6888)
!6890 = !DILocation(line: 1176, column: 16, scope: !6888)
!6891 = !DILocation(line: 1176, column: 23, scope: !6888)
!6892 = !DILocation(line: 1176, column: 31, scope: !6888)
!6893 = !DILocation(line: 1176, column: 38, scope: !6888)
!6894 = !DILocalVariable(name: "x", scope: !6888, file: !3, line: 1177, type: !27)
!6895 = !DILocation(line: 1177, column: 7, scope: !6888)
!6896 = !DILocation(line: 1179, column: 10, scope: !6897)
!6897 = distinct !DILexicalBlock(scope: !6888, file: !3, line: 1179, column: 3)
!6898 = !DILocation(line: 1179, column: 8, scope: !6897)
!6899 = !DILocation(line: 1179, column: 15, scope: !6900)
!6900 = distinct !DILexicalBlock(scope: !6897, file: !3, line: 1179, column: 3)
!6901 = !DILocation(line: 1179, column: 19, scope: !6900)
!6902 = !DILocation(line: 1179, column: 28, scope: !6900)
!6903 = !DILocation(line: 1179, column: 17, scope: !6900)
!6904 = !DILocation(line: 1179, column: 3, scope: !6897)
!6905 = !DILocation(line: 1185, column: 32, scope: !6906)
!6906 = distinct !DILexicalBlock(scope: !6900, file: !3, line: 1179, column: 38)
!6907 = !DILocation(line: 1185, column: 36, scope: !6906)
!6908 = !DILocation(line: 1185, column: 39, scope: !6906)
!6909 = !DILocation(line: 1185, column: 9, scope: !6906)
!6910 = !DILocation(line: 1185, column: 7, scope: !6906)
!6911 = !DILocation(line: 1186, column: 20, scope: !6906)
!6912 = !DILocation(line: 1186, column: 27, scope: !6906)
!6913 = !DILocation(line: 1186, column: 38, scope: !6906)
!6914 = !DILocation(line: 1186, column: 4, scope: !6906)
!6915 = !DILocation(line: 1187, column: 3, scope: !6906)
!6916 = !DILocation(line: 1179, column: 34, scope: !6900)
!6917 = !DILocation(line: 1179, column: 3, scope: !6900)
!6918 = distinct !{!6918, !6904, !6919}
!6919 = !DILocation(line: 1187, column: 3, scope: !6897)
!6920 = !DILocation(line: 1188, column: 2, scope: !6888)
!6921 = !DILocation(line: 1175, column: 40, scope: !6883)
!6922 = !DILocation(line: 1175, column: 2, scope: !6883)
!6923 = distinct !{!6923, !6886, !6924}
!6924 = !DILocation(line: 1188, column: 2, scope: !6880)
!6925 = !DILocation(line: 1190, column: 35, scope: !6703)
!6926 = !DILocation(line: 1190, column: 12, scope: !6703)
!6927 = !DILocation(line: 1190, column: 10, scope: !6703)
!6928 = !DILocation(line: 1191, column: 13, scope: !6929)
!6929 = distinct !DILexicalBlock(scope: !6703, file: !3, line: 1191, column: 2)
!6930 = !DILocation(line: 1191, column: 7, scope: !6929)
!6931 = !DILocation(line: 1191, column: 18, scope: !6932)
!6932 = distinct !DILexicalBlock(scope: !6929, file: !3, line: 1191, column: 2)
!6933 = !DILocation(line: 1191, column: 26, scope: !6932)
!6934 = !DILocation(line: 1191, column: 24, scope: !6932)
!6935 = !DILocation(line: 1191, column: 2, scope: !6929)
!6936 = !DILocalVariable(name: "v", scope: !6937, file: !3, line: 1192, type: !2613)
!6937 = distinct !DILexicalBlock(scope: !6932, file: !3, line: 1191, column: 44)
!6938 = !DILocation(line: 1192, column: 12, scope: !6937)
!6939 = !DILocation(line: 1192, column: 16, scope: !6937)
!6940 = !DILocation(line: 1192, column: 23, scope: !6937)
!6941 = !DILocation(line: 1192, column: 31, scope: !6937)
!6942 = !DILocation(line: 1192, column: 38, scope: !6937)
!6943 = !DILocation(line: 1194, column: 31, scope: !6937)
!6944 = !DILocation(line: 1194, column: 35, scope: !6937)
!6945 = !DILocation(line: 1194, column: 8, scope: !6937)
!6946 = !DILocation(line: 1194, column: 6, scope: !6937)
!6947 = !DILocation(line: 1195, column: 19, scope: !6937)
!6948 = !DILocation(line: 1195, column: 26, scope: !6937)
!6949 = !DILocation(line: 1195, column: 37, scope: !6937)
!6950 = !DILocation(line: 1195, column: 3, scope: !6937)
!6951 = !DILocation(line: 1196, column: 2, scope: !6937)
!6952 = !DILocation(line: 1191, column: 40, scope: !6932)
!6953 = !DILocation(line: 1191, column: 2, scope: !6932)
!6954 = distinct !{!6954, !6935, !6955}
!6955 = !DILocation(line: 1196, column: 2, scope: !6929)
!6956 = !DILocation(line: 1197, column: 1, scope: !6703)
!6957 = distinct !DISubprogram(name: "ccgDM_copyFinalEdgeArray", scope: !3, file: !3, line: 1209, type: !6958, scopeLine: 1210, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!6958 = !DISubroutineType(types: !6959)
!6959 = !{null, !11, !3475}
!6960 = !DILocalVariable(name: "dm", arg: 1, scope: !6957, file: !3, line: 1209, type: !11)
!6961 = !DILocation(line: 1209, column: 51, scope: !6957)
!6962 = !DILocalVariable(name: "medge", arg: 2, scope: !6957, file: !3, line: 1209, type: !3475)
!6963 = !DILocation(line: 1209, column: 62, scope: !6957)
!6964 = !DILocalVariable(name: "ccgdm", scope: !6957, file: !3, line: 1211, type: !2295)
!6965 = !DILocation(line: 1211, column: 18, scope: !6957)
!6966 = !DILocation(line: 1211, column: 45, scope: !6957)
!6967 = !DILocation(line: 1211, column: 26, scope: !6957)
!6968 = !DILocalVariable(name: "ss", scope: !6957, file: !3, line: 1212, type: !6)
!6969 = !DILocation(line: 1212, column: 14, scope: !6957)
!6970 = !DILocation(line: 1212, column: 19, scope: !6957)
!6971 = !DILocation(line: 1212, column: 26, scope: !6957)
!6972 = !DILocalVariable(name: "index", scope: !6957, file: !3, line: 1213, type: !27)
!6973 = !DILocation(line: 1213, column: 6, scope: !6957)
!6974 = !DILocalVariable(name: "totedge", scope: !6957, file: !3, line: 1214, type: !27)
!6975 = !DILocation(line: 1214, column: 6, scope: !6957)
!6976 = !DILocalVariable(name: "totface", scope: !6957, file: !3, line: 1214, type: !27)
!6977 = !DILocation(line: 1214, column: 15, scope: !6957)
!6978 = !DILocalVariable(name: "gridSize", scope: !6957, file: !3, line: 1215, type: !27)
!6979 = !DILocation(line: 1215, column: 6, scope: !6957)
!6980 = !DILocation(line: 1215, column: 40, scope: !6957)
!6981 = !DILocation(line: 1215, column: 17, scope: !6957)
!6982 = !DILocalVariable(name: "edgeSize", scope: !6957, file: !3, line: 1216, type: !27)
!6983 = !DILocation(line: 1216, column: 6, scope: !6957)
!6984 = !DILocation(line: 1216, column: 40, scope: !6957)
!6985 = !DILocation(line: 1216, column: 17, scope: !6957)
!6986 = !DILocalVariable(name: "i", scope: !6957, file: !3, line: 1217, type: !84)
!6987 = !DILocation(line: 1217, column: 15, scope: !6957)
!6988 = !DILocalVariable(name: "edgeFlags", scope: !6957, file: !3, line: 1218, type: !2333)
!6989 = !DILocation(line: 1218, column: 9, scope: !6957)
!6990 = !DILocation(line: 1218, column: 21, scope: !6957)
!6991 = !DILocation(line: 1218, column: 28, scope: !6957)
!6992 = !DILocalVariable(name: "ed_interior_flag", scope: !6957, file: !3, line: 1219, type: !2044)
!6993 = !DILocation(line: 1219, column: 14, scope: !6957)
!6994 = !DILocation(line: 1219, column: 33, scope: !6957)
!6995 = !DILocation(line: 1219, column: 40, scope: !6957)
!6996 = !DILocation(line: 1221, column: 35, scope: !6957)
!6997 = !DILocation(line: 1221, column: 12, scope: !6957)
!6998 = !DILocation(line: 1221, column: 10, scope: !6957)
!6999 = !DILocation(line: 1222, column: 13, scope: !7000)
!7000 = distinct !DILexicalBlock(scope: !6957, file: !3, line: 1222, column: 2)
!7001 = !DILocation(line: 1222, column: 7, scope: !7000)
!7002 = !DILocation(line: 1222, column: 18, scope: !7003)
!7003 = distinct !DILexicalBlock(scope: !7000, file: !3, line: 1222, column: 2)
!7004 = !DILocation(line: 1222, column: 26, scope: !7003)
!7005 = !DILocation(line: 1222, column: 24, scope: !7003)
!7006 = !DILocation(line: 1222, column: 2, scope: !7000)
!7007 = !DILocalVariable(name: "f", scope: !7008, file: !3, line: 1223, type: !2461)
!7008 = distinct !DILexicalBlock(scope: !7003, file: !3, line: 1222, column: 44)
!7009 = !DILocation(line: 1223, column: 12, scope: !7008)
!7010 = !DILocation(line: 1223, column: 16, scope: !7008)
!7011 = !DILocation(line: 1223, column: 23, scope: !7008)
!7012 = !DILocation(line: 1223, column: 31, scope: !7008)
!7013 = !DILocation(line: 1223, column: 38, scope: !7008)
!7014 = !DILocalVariable(name: "x", scope: !7008, file: !3, line: 1224, type: !27)
!7015 = !DILocation(line: 1224, column: 7, scope: !7008)
!7016 = !DILocalVariable(name: "y", scope: !7008, file: !3, line: 1224, type: !27)
!7017 = !DILocation(line: 1224, column: 10, scope: !7008)
!7018 = !DILocalVariable(name: "S", scope: !7008, file: !3, line: 1224, type: !27)
!7019 = !DILocation(line: 1224, column: 13, scope: !7008)
!7020 = !DILocalVariable(name: "numVerts", scope: !7008, file: !3, line: 1224, type: !27)
!7021 = !DILocation(line: 1224, column: 16, scope: !7008)
!7022 = !DILocation(line: 1224, column: 54, scope: !7008)
!7023 = !DILocation(line: 1224, column: 27, scope: !7008)
!7024 = !DILocation(line: 1226, column: 10, scope: !7025)
!7025 = distinct !DILexicalBlock(scope: !7008, file: !3, line: 1226, column: 3)
!7026 = !DILocation(line: 1226, column: 8, scope: !7025)
!7027 = !DILocation(line: 1226, column: 15, scope: !7028)
!7028 = distinct !DILexicalBlock(scope: !7025, file: !3, line: 1226, column: 3)
!7029 = !DILocation(line: 1226, column: 19, scope: !7028)
!7030 = !DILocation(line: 1226, column: 17, scope: !7028)
!7031 = !DILocation(line: 1226, column: 3, scope: !7025)
!7032 = !DILocation(line: 1227, column: 11, scope: !7033)
!7033 = distinct !DILexicalBlock(scope: !7034, file: !3, line: 1227, column: 4)
!7034 = distinct !DILexicalBlock(scope: !7028, file: !3, line: 1226, column: 34)
!7035 = !DILocation(line: 1227, column: 9, scope: !7033)
!7036 = !DILocation(line: 1227, column: 16, scope: !7037)
!7037 = distinct !DILexicalBlock(scope: !7033, file: !3, line: 1227, column: 4)
!7038 = !DILocation(line: 1227, column: 20, scope: !7037)
!7039 = !DILocation(line: 1227, column: 29, scope: !7037)
!7040 = !DILocation(line: 1227, column: 18, scope: !7037)
!7041 = !DILocation(line: 1227, column: 4, scope: !7033)
!7042 = !DILocation(line: 1228, column: 21, scope: !7043)
!7043 = distinct !DILexicalBlock(scope: !7037, file: !3, line: 1227, column: 39)
!7044 = !DILocation(line: 1228, column: 28, scope: !7043)
!7045 = !DILocation(line: 1229, column: 33, scope: !7043)
!7046 = !DILocation(line: 1229, column: 37, scope: !7043)
!7047 = !DILocation(line: 1229, column: 40, scope: !7043)
!7048 = !DILocation(line: 1229, column: 43, scope: !7043)
!7049 = !DILocation(line: 1229, column: 53, scope: !7043)
!7050 = !DILocation(line: 1229, column: 63, scope: !7043)
!7051 = !DILocation(line: 1229, column: 20, scope: !7043)
!7052 = !DILocation(line: 1230, column: 33, scope: !7043)
!7053 = !DILocation(line: 1230, column: 37, scope: !7043)
!7054 = !DILocation(line: 1230, column: 40, scope: !7043)
!7055 = !DILocation(line: 1230, column: 43, scope: !7043)
!7056 = !DILocation(line: 1230, column: 45, scope: !7043)
!7057 = !DILocation(line: 1230, column: 53, scope: !7043)
!7058 = !DILocation(line: 1230, column: 63, scope: !7043)
!7059 = !DILocation(line: 1230, column: 20, scope: !7043)
!7060 = !DILocation(line: 1231, column: 20, scope: !7043)
!7061 = !DILocation(line: 1228, column: 5, scope: !7043)
!7062 = !DILocation(line: 1232, column: 4, scope: !7043)
!7063 = !DILocation(line: 1227, column: 35, scope: !7037)
!7064 = !DILocation(line: 1227, column: 4, scope: !7037)
!7065 = distinct !{!7065, !7041, !7066}
!7066 = !DILocation(line: 1232, column: 4, scope: !7033)
!7067 = !DILocation(line: 1234, column: 11, scope: !7068)
!7068 = distinct !DILexicalBlock(scope: !7034, file: !3, line: 1234, column: 4)
!7069 = !DILocation(line: 1234, column: 9, scope: !7068)
!7070 = !DILocation(line: 1234, column: 16, scope: !7071)
!7071 = distinct !DILexicalBlock(scope: !7068, file: !3, line: 1234, column: 4)
!7072 = !DILocation(line: 1234, column: 20, scope: !7071)
!7073 = !DILocation(line: 1234, column: 29, scope: !7071)
!7074 = !DILocation(line: 1234, column: 18, scope: !7071)
!7075 = !DILocation(line: 1234, column: 4, scope: !7068)
!7076 = !DILocation(line: 1235, column: 12, scope: !7077)
!7077 = distinct !DILexicalBlock(scope: !7078, file: !3, line: 1235, column: 5)
!7078 = distinct !DILexicalBlock(scope: !7071, file: !3, line: 1234, column: 39)
!7079 = !DILocation(line: 1235, column: 10, scope: !7077)
!7080 = !DILocation(line: 1235, column: 17, scope: !7081)
!7081 = distinct !DILexicalBlock(scope: !7077, file: !3, line: 1235, column: 5)
!7082 = !DILocation(line: 1235, column: 21, scope: !7081)
!7083 = !DILocation(line: 1235, column: 30, scope: !7081)
!7084 = !DILocation(line: 1235, column: 19, scope: !7081)
!7085 = !DILocation(line: 1235, column: 5, scope: !7077)
!7086 = !DILocation(line: 1236, column: 22, scope: !7087)
!7087 = distinct !DILexicalBlock(scope: !7081, file: !3, line: 1235, column: 40)
!7088 = !DILocation(line: 1236, column: 29, scope: !7087)
!7089 = !DILocation(line: 1237, column: 34, scope: !7087)
!7090 = !DILocation(line: 1237, column: 38, scope: !7087)
!7091 = !DILocation(line: 1237, column: 41, scope: !7087)
!7092 = !DILocation(line: 1237, column: 44, scope: !7087)
!7093 = !DILocation(line: 1237, column: 47, scope: !7087)
!7094 = !DILocation(line: 1237, column: 53, scope: !7087)
!7095 = !DILocation(line: 1237, column: 63, scope: !7087)
!7096 = !DILocation(line: 1237, column: 21, scope: !7087)
!7097 = !DILocation(line: 1238, column: 34, scope: !7087)
!7098 = !DILocation(line: 1238, column: 38, scope: !7087)
!7099 = !DILocation(line: 1238, column: 41, scope: !7087)
!7100 = !DILocation(line: 1238, column: 44, scope: !7087)
!7101 = !DILocation(line: 1238, column: 47, scope: !7087)
!7102 = !DILocation(line: 1238, column: 49, scope: !7087)
!7103 = !DILocation(line: 1238, column: 54, scope: !7087)
!7104 = !DILocation(line: 1238, column: 64, scope: !7087)
!7105 = !DILocation(line: 1238, column: 21, scope: !7087)
!7106 = !DILocation(line: 1239, column: 21, scope: !7087)
!7107 = !DILocation(line: 1236, column: 6, scope: !7087)
!7108 = !DILocation(line: 1240, column: 22, scope: !7087)
!7109 = !DILocation(line: 1240, column: 29, scope: !7087)
!7110 = !DILocation(line: 1241, column: 34, scope: !7087)
!7111 = !DILocation(line: 1241, column: 38, scope: !7087)
!7112 = !DILocation(line: 1241, column: 41, scope: !7087)
!7113 = !DILocation(line: 1241, column: 44, scope: !7087)
!7114 = !DILocation(line: 1241, column: 47, scope: !7087)
!7115 = !DILocation(line: 1241, column: 54, scope: !7087)
!7116 = !DILocation(line: 1241, column: 64, scope: !7087)
!7117 = !DILocation(line: 1241, column: 21, scope: !7087)
!7118 = !DILocation(line: 1242, column: 34, scope: !7087)
!7119 = !DILocation(line: 1242, column: 38, scope: !7087)
!7120 = !DILocation(line: 1242, column: 41, scope: !7087)
!7121 = !DILocation(line: 1242, column: 44, scope: !7087)
!7122 = !DILocation(line: 1242, column: 46, scope: !7087)
!7123 = !DILocation(line: 1242, column: 51, scope: !7087)
!7124 = !DILocation(line: 1242, column: 54, scope: !7087)
!7125 = !DILocation(line: 1242, column: 64, scope: !7087)
!7126 = !DILocation(line: 1242, column: 21, scope: !7087)
!7127 = !DILocation(line: 1243, column: 21, scope: !7087)
!7128 = !DILocation(line: 1240, column: 6, scope: !7087)
!7129 = !DILocation(line: 1244, column: 5, scope: !7087)
!7130 = !DILocation(line: 1235, column: 36, scope: !7081)
!7131 = !DILocation(line: 1235, column: 5, scope: !7081)
!7132 = distinct !{!7132, !7085, !7133}
!7133 = !DILocation(line: 1244, column: 5, scope: !7077)
!7134 = !DILocation(line: 1245, column: 4, scope: !7078)
!7135 = !DILocation(line: 1234, column: 35, scope: !7071)
!7136 = !DILocation(line: 1234, column: 4, scope: !7071)
!7137 = distinct !{!7137, !7075, !7138}
!7138 = !DILocation(line: 1245, column: 4, scope: !7068)
!7139 = !DILocation(line: 1246, column: 3, scope: !7034)
!7140 = !DILocation(line: 1226, column: 30, scope: !7028)
!7141 = !DILocation(line: 1226, column: 3, scope: !7028)
!7142 = distinct !{!7142, !7031, !7143}
!7143 = !DILocation(line: 1246, column: 3, scope: !7025)
!7144 = !DILocation(line: 1247, column: 2, scope: !7008)
!7145 = !DILocation(line: 1222, column: 40, scope: !7003)
!7146 = !DILocation(line: 1222, column: 2, scope: !7003)
!7147 = distinct !{!7147, !7006, !7148}
!7148 = !DILocation(line: 1247, column: 2, scope: !7000)
!7149 = !DILocation(line: 1249, column: 35, scope: !6957)
!7150 = !DILocation(line: 1249, column: 12, scope: !6957)
!7151 = !DILocation(line: 1249, column: 10, scope: !6957)
!7152 = !DILocation(line: 1250, column: 13, scope: !7153)
!7153 = distinct !DILexicalBlock(scope: !6957, file: !3, line: 1250, column: 2)
!7154 = !DILocation(line: 1250, column: 7, scope: !7153)
!7155 = !DILocation(line: 1250, column: 18, scope: !7156)
!7156 = distinct !DILexicalBlock(scope: !7153, file: !3, line: 1250, column: 2)
!7157 = !DILocation(line: 1250, column: 26, scope: !7156)
!7158 = !DILocation(line: 1250, column: 24, scope: !7156)
!7159 = !DILocation(line: 1250, column: 2, scope: !7153)
!7160 = !DILocalVariable(name: "e", scope: !7161, file: !3, line: 1251, type: !2638)
!7161 = distinct !DILexicalBlock(scope: !7156, file: !3, line: 1250, column: 44)
!7162 = !DILocation(line: 1251, column: 12, scope: !7161)
!7163 = !DILocation(line: 1251, column: 16, scope: !7161)
!7164 = !DILocation(line: 1251, column: 23, scope: !7161)
!7165 = !DILocation(line: 1251, column: 31, scope: !7161)
!7166 = !DILocation(line: 1251, column: 38, scope: !7161)
!7167 = !DILocalVariable(name: "ed_flag", scope: !7161, file: !3, line: 1252, type: !135)
!7168 = !DILocation(line: 1252, column: 9, scope: !7161)
!7169 = !DILocalVariable(name: "x", scope: !7161, file: !3, line: 1253, type: !27)
!7170 = !DILocation(line: 1253, column: 7, scope: !7161)
!7171 = !DILocalVariable(name: "edgeIdx", scope: !7161, file: !3, line: 1254, type: !27)
!7172 = !DILocation(line: 1254, column: 7, scope: !7161)
!7173 = !DILocation(line: 1254, column: 17, scope: !7161)
!7174 = !DILocation(line: 1256, column: 35, scope: !7175)
!7175 = distinct !DILexicalBlock(scope: !7161, file: !3, line: 1256, column: 7)
!7176 = !DILocation(line: 1256, column: 8, scope: !7175)
!7177 = !DILocation(line: 1256, column: 7, scope: !7161)
!7178 = !DILocation(line: 1257, column: 12, scope: !7179)
!7179 = distinct !DILexicalBlock(scope: !7175, file: !3, line: 1256, column: 39)
!7180 = !DILocation(line: 1258, column: 3, scope: !7179)
!7181 = !DILocation(line: 1260, column: 7, scope: !7182)
!7182 = distinct !DILexicalBlock(scope: !7161, file: !3, line: 1260, column: 7)
!7183 = !DILocation(line: 1260, column: 7, scope: !7161)
!7184 = !DILocation(line: 1261, column: 8, scope: !7185)
!7185 = distinct !DILexicalBlock(scope: !7186, file: !3, line: 1261, column: 8)
!7186 = distinct !DILexicalBlock(scope: !7182, file: !3, line: 1260, column: 18)
!7187 = !DILocation(line: 1261, column: 16, scope: !7185)
!7188 = !DILocation(line: 1261, column: 8, scope: !7186)
!7189 = !DILocation(line: 1262, column: 18, scope: !7190)
!7190 = distinct !DILexicalBlock(scope: !7185, file: !3, line: 1261, column: 23)
!7191 = !DILocation(line: 1262, column: 28, scope: !7190)
!7192 = !DILocation(line: 1262, column: 35, scope: !7190)
!7193 = !DILocation(line: 1262, column: 59, scope: !7190)
!7194 = !DILocation(line: 1262, column: 73, scope: !7190)
!7195 = !DILocation(line: 1262, column: 13, scope: !7190)
!7196 = !DILocation(line: 1263, column: 4, scope: !7190)
!7197 = !DILocation(line: 1264, column: 3, scope: !7186)
!7198 = !DILocation(line: 1266, column: 12, scope: !7199)
!7199 = distinct !DILexicalBlock(scope: !7182, file: !3, line: 1265, column: 8)
!7200 = !DILocation(line: 1269, column: 10, scope: !7201)
!7201 = distinct !DILexicalBlock(scope: !7161, file: !3, line: 1269, column: 3)
!7202 = !DILocation(line: 1269, column: 8, scope: !7201)
!7203 = !DILocation(line: 1269, column: 15, scope: !7204)
!7204 = distinct !DILexicalBlock(scope: !7201, file: !3, line: 1269, column: 3)
!7205 = !DILocation(line: 1269, column: 19, scope: !7204)
!7206 = !DILocation(line: 1269, column: 28, scope: !7204)
!7207 = !DILocation(line: 1269, column: 17, scope: !7204)
!7208 = !DILocation(line: 1269, column: 3, scope: !7201)
!7209 = !DILocation(line: 1270, column: 20, scope: !7210)
!7210 = distinct !DILexicalBlock(scope: !7204, file: !3, line: 1269, column: 38)
!7211 = !DILocation(line: 1270, column: 27, scope: !7210)
!7212 = !DILocation(line: 1271, column: 32, scope: !7210)
!7213 = !DILocation(line: 1271, column: 36, scope: !7210)
!7214 = !DILocation(line: 1271, column: 39, scope: !7210)
!7215 = !DILocation(line: 1271, column: 42, scope: !7210)
!7216 = !DILocation(line: 1271, column: 19, scope: !7210)
!7217 = !DILocation(line: 1272, column: 32, scope: !7210)
!7218 = !DILocation(line: 1272, column: 36, scope: !7210)
!7219 = !DILocation(line: 1272, column: 39, scope: !7210)
!7220 = !DILocation(line: 1272, column: 41, scope: !7210)
!7221 = !DILocation(line: 1272, column: 46, scope: !7210)
!7222 = !DILocation(line: 1272, column: 19, scope: !7210)
!7223 = !DILocation(line: 1273, column: 19, scope: !7210)
!7224 = !DILocation(line: 1270, column: 4, scope: !7210)
!7225 = !DILocation(line: 1274, column: 3, scope: !7210)
!7226 = !DILocation(line: 1269, column: 34, scope: !7204)
!7227 = !DILocation(line: 1269, column: 3, scope: !7204)
!7228 = distinct !{!7228, !7208, !7229}
!7229 = !DILocation(line: 1274, column: 3, scope: !7201)
!7230 = !DILocation(line: 1275, column: 2, scope: !7161)
!7231 = !DILocation(line: 1250, column: 40, scope: !7156)
!7232 = !DILocation(line: 1250, column: 2, scope: !7156)
!7233 = distinct !{!7233, !7159, !7234}
!7234 = !DILocation(line: 1275, column: 2, scope: !7153)
!7235 = !DILocation(line: 1276, column: 1, scope: !6957)
!7236 = distinct !DISubprogram(name: "ccgDM_copyFinalFaceArray", scope: !3, file: !3, line: 1278, type: !7237, scopeLine: 1279, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!7237 = !DISubroutineType(types: !7238)
!7238 = !{null, !11, !6503}
!7239 = !DILocalVariable(name: "dm", arg: 1, scope: !7236, file: !3, line: 1278, type: !11)
!7240 = !DILocation(line: 1278, column: 51, scope: !7236)
!7241 = !DILocalVariable(name: "mface", arg: 2, scope: !7236, file: !3, line: 1278, type: !6503)
!7242 = !DILocation(line: 1278, column: 62, scope: !7236)
!7243 = !DILocalVariable(name: "ccgdm", scope: !7236, file: !3, line: 1280, type: !2295)
!7244 = !DILocation(line: 1280, column: 18, scope: !7236)
!7245 = !DILocation(line: 1280, column: 45, scope: !7236)
!7246 = !DILocation(line: 1280, column: 26, scope: !7236)
!7247 = !DILocalVariable(name: "ss", scope: !7236, file: !3, line: 1281, type: !6)
!7248 = !DILocation(line: 1281, column: 14, scope: !7236)
!7249 = !DILocation(line: 1281, column: 19, scope: !7236)
!7250 = !DILocation(line: 1281, column: 26, scope: !7236)
!7251 = !DILocalVariable(name: "index", scope: !7236, file: !3, line: 1282, type: !27)
!7252 = !DILocation(line: 1282, column: 6, scope: !7236)
!7253 = !DILocalVariable(name: "totface", scope: !7236, file: !3, line: 1283, type: !27)
!7254 = !DILocation(line: 1283, column: 6, scope: !7236)
!7255 = !DILocalVariable(name: "gridSize", scope: !7236, file: !3, line: 1284, type: !27)
!7256 = !DILocation(line: 1284, column: 6, scope: !7236)
!7257 = !DILocation(line: 1284, column: 40, scope: !7236)
!7258 = !DILocation(line: 1284, column: 17, scope: !7236)
!7259 = !DILocalVariable(name: "edgeSize", scope: !7236, file: !3, line: 1285, type: !27)
!7260 = !DILocation(line: 1285, column: 6, scope: !7236)
!7261 = !DILocation(line: 1285, column: 40, scope: !7236)
!7262 = !DILocation(line: 1285, column: 17, scope: !7236)
!7263 = !DILocalVariable(name: "i", scope: !7236, file: !3, line: 1286, type: !27)
!7264 = !DILocation(line: 1286, column: 6, scope: !7236)
!7265 = !DILocalVariable(name: "faceFlags", scope: !7236, file: !3, line: 1287, type: !2024)
!7266 = !DILocation(line: 1287, column: 13, scope: !7236)
!7267 = !DILocation(line: 1287, column: 25, scope: !7236)
!7268 = !DILocation(line: 1287, column: 32, scope: !7236)
!7269 = !DILocation(line: 1289, column: 35, scope: !7236)
!7270 = !DILocation(line: 1289, column: 12, scope: !7236)
!7271 = !DILocation(line: 1289, column: 10, scope: !7236)
!7272 = !DILocation(line: 1290, column: 13, scope: !7273)
!7273 = distinct !DILexicalBlock(scope: !7236, file: !3, line: 1290, column: 2)
!7274 = !DILocation(line: 1290, column: 7, scope: !7273)
!7275 = !DILocation(line: 1290, column: 18, scope: !7276)
!7276 = distinct !DILexicalBlock(scope: !7273, file: !3, line: 1290, column: 2)
!7277 = !DILocation(line: 1290, column: 26, scope: !7276)
!7278 = !DILocation(line: 1290, column: 24, scope: !7276)
!7279 = !DILocation(line: 1290, column: 2, scope: !7273)
!7280 = !DILocalVariable(name: "f", scope: !7281, file: !3, line: 1291, type: !2461)
!7281 = distinct !DILexicalBlock(scope: !7276, file: !3, line: 1290, column: 44)
!7282 = !DILocation(line: 1291, column: 12, scope: !7281)
!7283 = !DILocation(line: 1291, column: 16, scope: !7281)
!7284 = !DILocation(line: 1291, column: 23, scope: !7281)
!7285 = !DILocation(line: 1291, column: 31, scope: !7281)
!7286 = !DILocation(line: 1291, column: 38, scope: !7281)
!7287 = !DILocalVariable(name: "x", scope: !7281, file: !3, line: 1292, type: !27)
!7288 = !DILocation(line: 1292, column: 7, scope: !7281)
!7289 = !DILocalVariable(name: "y", scope: !7281, file: !3, line: 1292, type: !27)
!7290 = !DILocation(line: 1292, column: 10, scope: !7281)
!7291 = !DILocalVariable(name: "S", scope: !7281, file: !3, line: 1292, type: !27)
!7292 = !DILocation(line: 1292, column: 13, scope: !7281)
!7293 = !DILocalVariable(name: "numVerts", scope: !7281, file: !3, line: 1292, type: !27)
!7294 = !DILocation(line: 1292, column: 16, scope: !7281)
!7295 = !DILocation(line: 1292, column: 54, scope: !7281)
!7296 = !DILocation(line: 1292, column: 27, scope: !7281)
!7297 = !DILocalVariable(name: "flag", scope: !7281, file: !3, line: 1294, type: !37)
!7298 = !DILocation(line: 1294, column: 8, scope: !7281)
!7299 = !DILocation(line: 1294, column: 16, scope: !7281)
!7300 = !DILocation(line: 1294, column: 15, scope: !7281)
!7301 = !DILocation(line: 1294, column: 29, scope: !7281)
!7302 = !DILocation(line: 1294, column: 39, scope: !7281)
!7303 = !DILocation(line: 1294, column: 46, scope: !7281)
!7304 = !DILocalVariable(name: "mat_nr", scope: !7281, file: !3, line: 1295, type: !135)
!7305 = !DILocation(line: 1295, column: 9, scope: !7281)
!7306 = !DILocation(line: 1295, column: 19, scope: !7281)
!7307 = !DILocation(line: 1295, column: 18, scope: !7281)
!7308 = !DILocation(line: 1295, column: 32, scope: !7281)
!7309 = !DILocation(line: 1295, column: 42, scope: !7281)
!7310 = !DILocation(line: 1295, column: 49, scope: !7281)
!7311 = !DILocation(line: 1297, column: 10, scope: !7312)
!7312 = distinct !DILexicalBlock(scope: !7281, file: !3, line: 1297, column: 3)
!7313 = !DILocation(line: 1297, column: 8, scope: !7312)
!7314 = !DILocation(line: 1297, column: 15, scope: !7315)
!7315 = distinct !DILexicalBlock(scope: !7312, file: !3, line: 1297, column: 3)
!7316 = !DILocation(line: 1297, column: 19, scope: !7315)
!7317 = !DILocation(line: 1297, column: 17, scope: !7315)
!7318 = !DILocation(line: 1297, column: 3, scope: !7312)
!7319 = !DILocation(line: 1298, column: 11, scope: !7320)
!7320 = distinct !DILexicalBlock(scope: !7321, file: !3, line: 1298, column: 4)
!7321 = distinct !DILexicalBlock(scope: !7315, file: !3, line: 1297, column: 34)
!7322 = !DILocation(line: 1298, column: 9, scope: !7320)
!7323 = !DILocation(line: 1298, column: 16, scope: !7324)
!7324 = distinct !DILexicalBlock(scope: !7320, file: !3, line: 1298, column: 4)
!7325 = !DILocation(line: 1298, column: 20, scope: !7324)
!7326 = !DILocation(line: 1298, column: 29, scope: !7324)
!7327 = !DILocation(line: 1298, column: 18, scope: !7324)
!7328 = !DILocation(line: 1298, column: 4, scope: !7320)
!7329 = !DILocation(line: 1299, column: 12, scope: !7330)
!7330 = distinct !DILexicalBlock(scope: !7331, file: !3, line: 1299, column: 5)
!7331 = distinct !DILexicalBlock(scope: !7324, file: !3, line: 1298, column: 39)
!7332 = !DILocation(line: 1299, column: 10, scope: !7330)
!7333 = !DILocation(line: 1299, column: 17, scope: !7334)
!7334 = distinct !DILexicalBlock(scope: !7330, file: !3, line: 1299, column: 5)
!7335 = !DILocation(line: 1299, column: 21, scope: !7334)
!7336 = !DILocation(line: 1299, column: 30, scope: !7334)
!7337 = !DILocation(line: 1299, column: 19, scope: !7334)
!7338 = !DILocation(line: 1299, column: 5, scope: !7330)
!7339 = !DILocalVariable(name: "mf", scope: !7340, file: !3, line: 1300, type: !6503)
!7340 = distinct !DILexicalBlock(scope: !7334, file: !3, line: 1299, column: 40)
!7341 = !DILocation(line: 1300, column: 13, scope: !7340)
!7342 = !DILocation(line: 1300, column: 19, scope: !7340)
!7343 = !DILocation(line: 1300, column: 25, scope: !7340)
!7344 = !DILocation(line: 1301, column: 28, scope: !7340)
!7345 = !DILocation(line: 1301, column: 32, scope: !7340)
!7346 = !DILocation(line: 1301, column: 35, scope: !7340)
!7347 = !DILocation(line: 1301, column: 38, scope: !7340)
!7348 = !DILocation(line: 1301, column: 40, scope: !7340)
!7349 = !DILocation(line: 1301, column: 45, scope: !7340)
!7350 = !DILocation(line: 1301, column: 47, scope: !7340)
!7351 = !DILocation(line: 1302, column: 28, scope: !7340)
!7352 = !DILocation(line: 1302, column: 38, scope: !7340)
!7353 = !DILocation(line: 1301, column: 15, scope: !7340)
!7354 = !DILocation(line: 1301, column: 6, scope: !7340)
!7355 = !DILocation(line: 1301, column: 10, scope: !7340)
!7356 = !DILocation(line: 1301, column: 13, scope: !7340)
!7357 = !DILocation(line: 1303, column: 28, scope: !7340)
!7358 = !DILocation(line: 1303, column: 32, scope: !7340)
!7359 = !DILocation(line: 1303, column: 35, scope: !7340)
!7360 = !DILocation(line: 1303, column: 38, scope: !7340)
!7361 = !DILocation(line: 1303, column: 40, scope: !7340)
!7362 = !DILocation(line: 1303, column: 45, scope: !7340)
!7363 = !DILocation(line: 1303, column: 47, scope: !7340)
!7364 = !DILocation(line: 1304, column: 28, scope: !7340)
!7365 = !DILocation(line: 1304, column: 38, scope: !7340)
!7366 = !DILocation(line: 1303, column: 15, scope: !7340)
!7367 = !DILocation(line: 1303, column: 6, scope: !7340)
!7368 = !DILocation(line: 1303, column: 10, scope: !7340)
!7369 = !DILocation(line: 1303, column: 13, scope: !7340)
!7370 = !DILocation(line: 1305, column: 28, scope: !7340)
!7371 = !DILocation(line: 1305, column: 32, scope: !7340)
!7372 = !DILocation(line: 1305, column: 35, scope: !7340)
!7373 = !DILocation(line: 1305, column: 38, scope: !7340)
!7374 = !DILocation(line: 1305, column: 40, scope: !7340)
!7375 = !DILocation(line: 1305, column: 45, scope: !7340)
!7376 = !DILocation(line: 1305, column: 47, scope: !7340)
!7377 = !DILocation(line: 1306, column: 28, scope: !7340)
!7378 = !DILocation(line: 1306, column: 38, scope: !7340)
!7379 = !DILocation(line: 1305, column: 15, scope: !7340)
!7380 = !DILocation(line: 1305, column: 6, scope: !7340)
!7381 = !DILocation(line: 1305, column: 10, scope: !7340)
!7382 = !DILocation(line: 1305, column: 13, scope: !7340)
!7383 = !DILocation(line: 1307, column: 28, scope: !7340)
!7384 = !DILocation(line: 1307, column: 32, scope: !7340)
!7385 = !DILocation(line: 1307, column: 35, scope: !7340)
!7386 = !DILocation(line: 1307, column: 38, scope: !7340)
!7387 = !DILocation(line: 1307, column: 40, scope: !7340)
!7388 = !DILocation(line: 1307, column: 45, scope: !7340)
!7389 = !DILocation(line: 1307, column: 47, scope: !7340)
!7390 = !DILocation(line: 1308, column: 28, scope: !7340)
!7391 = !DILocation(line: 1308, column: 38, scope: !7340)
!7392 = !DILocation(line: 1307, column: 15, scope: !7340)
!7393 = !DILocation(line: 1307, column: 6, scope: !7340)
!7394 = !DILocation(line: 1307, column: 10, scope: !7340)
!7395 = !DILocation(line: 1307, column: 13, scope: !7340)
!7396 = !DILocation(line: 1309, column: 19, scope: !7340)
!7397 = !DILocation(line: 1309, column: 6, scope: !7340)
!7398 = !DILocation(line: 1309, column: 10, scope: !7340)
!7399 = !DILocation(line: 1309, column: 17, scope: !7340)
!7400 = !DILocation(line: 1310, column: 17, scope: !7340)
!7401 = !DILocation(line: 1310, column: 6, scope: !7340)
!7402 = !DILocation(line: 1310, column: 10, scope: !7340)
!7403 = !DILocation(line: 1310, column: 15, scope: !7340)
!7404 = !DILocation(line: 1311, column: 6, scope: !7340)
!7405 = !DILocation(line: 1311, column: 10, scope: !7340)
!7406 = !DILocation(line: 1311, column: 17, scope: !7340)
!7407 = !DILocation(line: 1313, column: 7, scope: !7340)
!7408 = !DILocation(line: 1314, column: 5, scope: !7340)
!7409 = !DILocation(line: 1299, column: 36, scope: !7334)
!7410 = !DILocation(line: 1299, column: 5, scope: !7334)
!7411 = distinct !{!7411, !7338, !7412}
!7412 = !DILocation(line: 1314, column: 5, scope: !7330)
!7413 = !DILocation(line: 1315, column: 4, scope: !7331)
!7414 = !DILocation(line: 1298, column: 35, scope: !7324)
!7415 = !DILocation(line: 1298, column: 4, scope: !7324)
!7416 = distinct !{!7416, !7328, !7417}
!7417 = !DILocation(line: 1315, column: 4, scope: !7320)
!7418 = !DILocation(line: 1316, column: 3, scope: !7321)
!7419 = !DILocation(line: 1297, column: 30, scope: !7315)
!7420 = !DILocation(line: 1297, column: 3, scope: !7315)
!7421 = distinct !{!7421, !7318, !7422}
!7422 = !DILocation(line: 1316, column: 3, scope: !7312)
!7423 = !DILocation(line: 1317, column: 2, scope: !7281)
!7424 = !DILocation(line: 1290, column: 40, scope: !7276)
!7425 = !DILocation(line: 1290, column: 2, scope: !7276)
!7426 = distinct !{!7426, !7279, !7427}
!7427 = !DILocation(line: 1317, column: 2, scope: !7273)
!7428 = !DILocation(line: 1318, column: 1, scope: !7236)
!7429 = distinct !DISubprogram(name: "ccgDM_copyFinalLoopArray", scope: !3, file: !3, line: 1320, type: !7430, scopeLine: 1321, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!7430 = !DISubroutineType(types: !7431)
!7431 = !{null, !11, !3486}
!7432 = !DILocalVariable(name: "dm", arg: 1, scope: !7429, file: !3, line: 1320, type: !11)
!7433 = !DILocation(line: 1320, column: 51, scope: !7429)
!7434 = !DILocalVariable(name: "mloop", arg: 2, scope: !7429, file: !3, line: 1320, type: !3486)
!7435 = !DILocation(line: 1320, column: 62, scope: !7429)
!7436 = !DILocalVariable(name: "ccgdm", scope: !7429, file: !3, line: 1322, type: !2295)
!7437 = !DILocation(line: 1322, column: 18, scope: !7429)
!7438 = !DILocation(line: 1322, column: 45, scope: !7429)
!7439 = !DILocation(line: 1322, column: 26, scope: !7429)
!7440 = !DILocalVariable(name: "ss", scope: !7429, file: !3, line: 1323, type: !6)
!7441 = !DILocation(line: 1323, column: 14, scope: !7429)
!7442 = !DILocation(line: 1323, column: 19, scope: !7429)
!7443 = !DILocation(line: 1323, column: 26, scope: !7429)
!7444 = !DILocalVariable(name: "index", scope: !7429, file: !3, line: 1324, type: !27)
!7445 = !DILocation(line: 1324, column: 6, scope: !7429)
!7446 = !DILocalVariable(name: "totface", scope: !7429, file: !3, line: 1325, type: !27)
!7447 = !DILocation(line: 1325, column: 6, scope: !7429)
!7448 = !DILocalVariable(name: "gridSize", scope: !7429, file: !3, line: 1326, type: !27)
!7449 = !DILocation(line: 1326, column: 6, scope: !7429)
!7450 = !DILocation(line: 1326, column: 40, scope: !7429)
!7451 = !DILocation(line: 1326, column: 17, scope: !7429)
!7452 = !DILocalVariable(name: "edgeSize", scope: !7429, file: !3, line: 1327, type: !27)
!7453 = !DILocation(line: 1327, column: 6, scope: !7429)
!7454 = !DILocation(line: 1327, column: 40, scope: !7429)
!7455 = !DILocation(line: 1327, column: 17, scope: !7429)
!7456 = !DILocalVariable(name: "i", scope: !7429, file: !3, line: 1328, type: !27)
!7457 = !DILocation(line: 1328, column: 6, scope: !7429)
!7458 = !DILocalVariable(name: "mv", scope: !7429, file: !3, line: 1329, type: !3486)
!7459 = !DILocation(line: 1329, column: 9, scope: !7429)
!7460 = !DILocation(line: 1332, column: 7, scope: !7461)
!7461 = distinct !DILexicalBlock(scope: !7429, file: !3, line: 1332, column: 6)
!7462 = !DILocation(line: 1332, column: 14, scope: !7461)
!7463 = !DILocation(line: 1332, column: 6, scope: !7429)
!7464 = !DILocation(line: 1333, column: 3, scope: !7465)
!7465 = distinct !DILexicalBlock(scope: !7461, file: !3, line: 1332, column: 21)
!7466 = !DILocation(line: 1334, column: 8, scope: !7467)
!7467 = distinct !DILexicalBlock(scope: !7465, file: !3, line: 1334, column: 7)
!7468 = !DILocation(line: 1334, column: 15, scope: !7467)
!7469 = !DILocation(line: 1334, column: 7, scope: !7465)
!7470 = !DILocalVariable(name: "medge", scope: !7471, file: !3, line: 1335, type: !3475)
!7471 = distinct !DILexicalBlock(scope: !7467, file: !3, line: 1334, column: 22)
!7472 = !DILocation(line: 1335, column: 11, scope: !7471)
!7473 = !DILocation(line: 1337, column: 49, scope: !7471)
!7474 = !DILocation(line: 1337, column: 56, scope: !7471)
!7475 = !DILocation(line: 1337, column: 59, scope: !7471)
!7476 = !DILocation(line: 1337, column: 19, scope: !7471)
!7477 = !DILocation(line: 1337, column: 4, scope: !7471)
!7478 = !DILocation(line: 1337, column: 11, scope: !7471)
!7479 = !DILocation(line: 1337, column: 17, scope: !7471)
!7480 = !DILocation(line: 1338, column: 12, scope: !7471)
!7481 = !DILocation(line: 1338, column: 19, scope: !7471)
!7482 = !DILocation(line: 1338, column: 22, scope: !7471)
!7483 = !DILocation(line: 1338, column: 50, scope: !7471)
!7484 = !DILocation(line: 1338, column: 35, scope: !7471)
!7485 = !DILocation(line: 1338, column: 10, scope: !7471)
!7486 = !DILocation(line: 1340, column: 11, scope: !7487)
!7487 = distinct !DILexicalBlock(scope: !7471, file: !3, line: 1340, column: 4)
!7488 = !DILocation(line: 1340, column: 9, scope: !7487)
!7489 = !DILocation(line: 1340, column: 16, scope: !7490)
!7490 = distinct !DILexicalBlock(scope: !7487, file: !3, line: 1340, column: 4)
!7491 = !DILocation(line: 1340, column: 20, scope: !7490)
!7492 = !DILocation(line: 1340, column: 27, scope: !7490)
!7493 = !DILocation(line: 1340, column: 30, scope: !7490)
!7494 = !DILocation(line: 1340, column: 18, scope: !7490)
!7495 = !DILocation(line: 1340, column: 4, scope: !7487)
!7496 = !DILocation(line: 1341, column: 25, scope: !7497)
!7497 = distinct !DILexicalBlock(scope: !7490, file: !3, line: 1340, column: 48)
!7498 = !DILocation(line: 1341, column: 32, scope: !7497)
!7499 = !DILocation(line: 1341, column: 39, scope: !7497)
!7500 = !DILocation(line: 1341, column: 45, scope: !7497)
!7501 = !DILocation(line: 1341, column: 48, scope: !7497)
!7502 = !DILocation(line: 1341, column: 52, scope: !7497)
!7503 = !DILocation(line: 1341, column: 58, scope: !7497)
!7504 = !DILocation(line: 1341, column: 61, scope: !7497)
!7505 = !DILocation(line: 1341, column: 65, scope: !7497)
!7506 = !DILocation(line: 1341, column: 5, scope: !7497)
!7507 = !DILocation(line: 1342, column: 4, scope: !7497)
!7508 = !DILocation(line: 1340, column: 44, scope: !7490)
!7509 = !DILocation(line: 1340, column: 4, scope: !7490)
!7510 = distinct !{!7510, !7495, !7511}
!7511 = !DILocation(line: 1342, column: 4, scope: !7487)
!7512 = !DILocation(line: 1343, column: 3, scope: !7471)
!7513 = !DILocation(line: 1344, column: 3, scope: !7465)
!7514 = !DILocation(line: 1345, column: 2, scope: !7465)
!7515 = !DILocation(line: 1347, column: 2, scope: !7429)
!7516 = !DILocation(line: 1348, column: 35, scope: !7429)
!7517 = !DILocation(line: 1348, column: 12, scope: !7429)
!7518 = !DILocation(line: 1348, column: 10, scope: !7429)
!7519 = !DILocation(line: 1349, column: 7, scope: !7429)
!7520 = !DILocation(line: 1349, column: 5, scope: !7429)
!7521 = !DILocation(line: 1350, column: 13, scope: !7522)
!7522 = distinct !DILexicalBlock(scope: !7429, file: !3, line: 1350, column: 2)
!7523 = !DILocation(line: 1350, column: 7, scope: !7522)
!7524 = !DILocation(line: 1350, column: 18, scope: !7525)
!7525 = distinct !DILexicalBlock(scope: !7522, file: !3, line: 1350, column: 2)
!7526 = !DILocation(line: 1350, column: 26, scope: !7525)
!7527 = !DILocation(line: 1350, column: 24, scope: !7525)
!7528 = !DILocation(line: 1350, column: 2, scope: !7522)
!7529 = !DILocalVariable(name: "f", scope: !7530, file: !3, line: 1351, type: !2461)
!7530 = distinct !DILexicalBlock(scope: !7525, file: !3, line: 1350, column: 44)
!7531 = !DILocation(line: 1351, column: 12, scope: !7530)
!7532 = !DILocation(line: 1351, column: 16, scope: !7530)
!7533 = !DILocation(line: 1351, column: 23, scope: !7530)
!7534 = !DILocation(line: 1351, column: 31, scope: !7530)
!7535 = !DILocation(line: 1351, column: 38, scope: !7530)
!7536 = !DILocalVariable(name: "x", scope: !7530, file: !3, line: 1352, type: !27)
!7537 = !DILocation(line: 1352, column: 7, scope: !7530)
!7538 = !DILocalVariable(name: "y", scope: !7530, file: !3, line: 1352, type: !27)
!7539 = !DILocation(line: 1352, column: 10, scope: !7530)
!7540 = !DILocalVariable(name: "S", scope: !7530, file: !3, line: 1352, type: !27)
!7541 = !DILocation(line: 1352, column: 13, scope: !7530)
!7542 = !DILocalVariable(name: "numVerts", scope: !7530, file: !3, line: 1352, type: !27)
!7543 = !DILocation(line: 1352, column: 16, scope: !7530)
!7544 = !DILocation(line: 1352, column: 54, scope: !7530)
!7545 = !DILocation(line: 1352, column: 27, scope: !7530)
!7546 = !DILocation(line: 1356, column: 10, scope: !7547)
!7547 = distinct !DILexicalBlock(scope: !7530, file: !3, line: 1356, column: 3)
!7548 = !DILocation(line: 1356, column: 8, scope: !7547)
!7549 = !DILocation(line: 1356, column: 15, scope: !7550)
!7550 = distinct !DILexicalBlock(scope: !7547, file: !3, line: 1356, column: 3)
!7551 = !DILocation(line: 1356, column: 19, scope: !7550)
!7552 = !DILocation(line: 1356, column: 17, scope: !7550)
!7553 = !DILocation(line: 1356, column: 3, scope: !7547)
!7554 = !DILocation(line: 1357, column: 11, scope: !7555)
!7555 = distinct !DILexicalBlock(scope: !7556, file: !3, line: 1357, column: 4)
!7556 = distinct !DILexicalBlock(scope: !7550, file: !3, line: 1356, column: 34)
!7557 = !DILocation(line: 1357, column: 9, scope: !7555)
!7558 = !DILocation(line: 1357, column: 16, scope: !7559)
!7559 = distinct !DILexicalBlock(scope: !7555, file: !3, line: 1357, column: 4)
!7560 = !DILocation(line: 1357, column: 20, scope: !7559)
!7561 = !DILocation(line: 1357, column: 29, scope: !7559)
!7562 = !DILocation(line: 1357, column: 18, scope: !7559)
!7563 = !DILocation(line: 1357, column: 4, scope: !7555)
!7564 = !DILocation(line: 1358, column: 12, scope: !7565)
!7565 = distinct !DILexicalBlock(scope: !7566, file: !3, line: 1358, column: 5)
!7566 = distinct !DILexicalBlock(scope: !7559, file: !3, line: 1357, column: 39)
!7567 = !DILocation(line: 1358, column: 10, scope: !7565)
!7568 = !DILocation(line: 1358, column: 17, scope: !7569)
!7569 = distinct !DILexicalBlock(scope: !7565, file: !3, line: 1358, column: 5)
!7570 = !DILocation(line: 1358, column: 21, scope: !7569)
!7571 = !DILocation(line: 1358, column: 30, scope: !7569)
!7572 = !DILocation(line: 1358, column: 19, scope: !7569)
!7573 = !DILocation(line: 1358, column: 5, scope: !7565)
!7574 = !DILocalVariable(name: "v1", scope: !7575, file: !3, line: 1359, type: !84)
!7575 = distinct !DILexicalBlock(scope: !7569, file: !3, line: 1358, column: 40)
!7576 = !DILocation(line: 1359, column: 19, scope: !7575)
!7577 = !DILocalVariable(name: "v2", scope: !7575, file: !3, line: 1359, type: !84)
!7578 = !DILocation(line: 1359, column: 23, scope: !7575)
!7579 = !DILocalVariable(name: "v3", scope: !7575, file: !3, line: 1359, type: !84)
!7580 = !DILocation(line: 1359, column: 27, scope: !7575)
!7581 = !DILocalVariable(name: "v4", scope: !7575, file: !3, line: 1359, type: !84)
!7582 = !DILocation(line: 1359, column: 31, scope: !7575)
!7583 = !DILocation(line: 1361, column: 24, scope: !7575)
!7584 = !DILocation(line: 1361, column: 28, scope: !7575)
!7585 = !DILocation(line: 1361, column: 31, scope: !7575)
!7586 = !DILocation(line: 1361, column: 34, scope: !7575)
!7587 = !DILocation(line: 1361, column: 36, scope: !7575)
!7588 = !DILocation(line: 1361, column: 41, scope: !7575)
!7589 = !DILocation(line: 1361, column: 43, scope: !7575)
!7590 = !DILocation(line: 1362, column: 24, scope: !7575)
!7591 = !DILocation(line: 1362, column: 34, scope: !7575)
!7592 = !DILocation(line: 1361, column: 11, scope: !7575)
!7593 = !DILocation(line: 1361, column: 9, scope: !7575)
!7594 = !DILocation(line: 1364, column: 24, scope: !7575)
!7595 = !DILocation(line: 1364, column: 28, scope: !7575)
!7596 = !DILocation(line: 1364, column: 31, scope: !7575)
!7597 = !DILocation(line: 1364, column: 34, scope: !7575)
!7598 = !DILocation(line: 1364, column: 36, scope: !7575)
!7599 = !DILocation(line: 1364, column: 41, scope: !7575)
!7600 = !DILocation(line: 1364, column: 43, scope: !7575)
!7601 = !DILocation(line: 1365, column: 24, scope: !7575)
!7602 = !DILocation(line: 1365, column: 34, scope: !7575)
!7603 = !DILocation(line: 1364, column: 11, scope: !7575)
!7604 = !DILocation(line: 1364, column: 9, scope: !7575)
!7605 = !DILocation(line: 1366, column: 24, scope: !7575)
!7606 = !DILocation(line: 1366, column: 28, scope: !7575)
!7607 = !DILocation(line: 1366, column: 31, scope: !7575)
!7608 = !DILocation(line: 1366, column: 34, scope: !7575)
!7609 = !DILocation(line: 1366, column: 36, scope: !7575)
!7610 = !DILocation(line: 1366, column: 41, scope: !7575)
!7611 = !DILocation(line: 1366, column: 43, scope: !7575)
!7612 = !DILocation(line: 1367, column: 24, scope: !7575)
!7613 = !DILocation(line: 1367, column: 34, scope: !7575)
!7614 = !DILocation(line: 1366, column: 11, scope: !7575)
!7615 = !DILocation(line: 1366, column: 9, scope: !7575)
!7616 = !DILocation(line: 1368, column: 24, scope: !7575)
!7617 = !DILocation(line: 1368, column: 28, scope: !7575)
!7618 = !DILocation(line: 1368, column: 31, scope: !7575)
!7619 = !DILocation(line: 1368, column: 34, scope: !7575)
!7620 = !DILocation(line: 1368, column: 36, scope: !7575)
!7621 = !DILocation(line: 1368, column: 41, scope: !7575)
!7622 = !DILocation(line: 1368, column: 43, scope: !7575)
!7623 = !DILocation(line: 1369, column: 24, scope: !7575)
!7624 = !DILocation(line: 1369, column: 34, scope: !7575)
!7625 = !DILocation(line: 1368, column: 11, scope: !7575)
!7626 = !DILocation(line: 1368, column: 9, scope: !7575)
!7627 = !DILocation(line: 1371, column: 14, scope: !7575)
!7628 = !DILocation(line: 1371, column: 6, scope: !7575)
!7629 = !DILocation(line: 1371, column: 10, scope: !7575)
!7630 = !DILocation(line: 1371, column: 12, scope: !7575)
!7631 = !DILocation(line: 1372, column: 14, scope: !7575)
!7632 = !DILocation(line: 1372, column: 6, scope: !7575)
!7633 = !DILocation(line: 1372, column: 10, scope: !7575)
!7634 = !DILocation(line: 1372, column: 12, scope: !7575)
!7635 = !DILocation(line: 1373, column: 8, scope: !7575)
!7636 = !DILocation(line: 1373, column: 13, scope: !7575)
!7637 = !DILocation(line: 1375, column: 14, scope: !7575)
!7638 = !DILocation(line: 1375, column: 6, scope: !7575)
!7639 = !DILocation(line: 1375, column: 10, scope: !7575)
!7640 = !DILocation(line: 1375, column: 12, scope: !7575)
!7641 = !DILocation(line: 1376, column: 14, scope: !7575)
!7642 = !DILocation(line: 1376, column: 6, scope: !7575)
!7643 = !DILocation(line: 1376, column: 10, scope: !7575)
!7644 = !DILocation(line: 1376, column: 12, scope: !7575)
!7645 = !DILocation(line: 1377, column: 8, scope: !7575)
!7646 = !DILocation(line: 1377, column: 13, scope: !7575)
!7647 = !DILocation(line: 1379, column: 14, scope: !7575)
!7648 = !DILocation(line: 1379, column: 6, scope: !7575)
!7649 = !DILocation(line: 1379, column: 10, scope: !7575)
!7650 = !DILocation(line: 1379, column: 12, scope: !7575)
!7651 = !DILocation(line: 1380, column: 14, scope: !7575)
!7652 = !DILocation(line: 1380, column: 6, scope: !7575)
!7653 = !DILocation(line: 1380, column: 10, scope: !7575)
!7654 = !DILocation(line: 1380, column: 12, scope: !7575)
!7655 = !DILocation(line: 1381, column: 8, scope: !7575)
!7656 = !DILocation(line: 1381, column: 13, scope: !7575)
!7657 = !DILocation(line: 1383, column: 14, scope: !7575)
!7658 = !DILocation(line: 1383, column: 6, scope: !7575)
!7659 = !DILocation(line: 1383, column: 10, scope: !7575)
!7660 = !DILocation(line: 1383, column: 12, scope: !7575)
!7661 = !DILocation(line: 1384, column: 14, scope: !7575)
!7662 = !DILocation(line: 1384, column: 6, scope: !7575)
!7663 = !DILocation(line: 1384, column: 10, scope: !7575)
!7664 = !DILocation(line: 1384, column: 12, scope: !7575)
!7665 = !DILocation(line: 1385, column: 8, scope: !7575)
!7666 = !DILocation(line: 1385, column: 13, scope: !7575)
!7667 = !DILocation(line: 1386, column: 5, scope: !7575)
!7668 = !DILocation(line: 1358, column: 36, scope: !7569)
!7669 = !DILocation(line: 1358, column: 5, scope: !7569)
!7670 = distinct !{!7670, !7573, !7671}
!7671 = !DILocation(line: 1386, column: 5, scope: !7565)
!7672 = !DILocation(line: 1387, column: 4, scope: !7566)
!7673 = !DILocation(line: 1357, column: 35, scope: !7559)
!7674 = !DILocation(line: 1357, column: 4, scope: !7559)
!7675 = distinct !{!7675, !7563, !7676}
!7676 = !DILocation(line: 1387, column: 4, scope: !7555)
!7677 = !DILocation(line: 1388, column: 3, scope: !7556)
!7678 = !DILocation(line: 1356, column: 30, scope: !7550)
!7679 = !DILocation(line: 1356, column: 3, scope: !7550)
!7680 = distinct !{!7680, !7553, !7681}
!7681 = !DILocation(line: 1388, column: 3, scope: !7547)
!7682 = !DILocation(line: 1389, column: 2, scope: !7530)
!7683 = !DILocation(line: 1350, column: 40, scope: !7525)
!7684 = !DILocation(line: 1350, column: 2, scope: !7525)
!7685 = distinct !{!7685, !7528, !7686}
!7686 = !DILocation(line: 1389, column: 2, scope: !7522)
!7687 = !DILocation(line: 1390, column: 2, scope: !7429)
!7688 = !DILocation(line: 1391, column: 1, scope: !7429)
!7689 = distinct !DISubprogram(name: "ccgDM_copyFinalPolyArray", scope: !3, file: !3, line: 1393, type: !7690, scopeLine: 1394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!7690 = !DISubroutineType(types: !7691)
!7691 = !{null, !11, !2377}
!7692 = !DILocalVariable(name: "dm", arg: 1, scope: !7689, file: !3, line: 1393, type: !11)
!7693 = !DILocation(line: 1393, column: 51, scope: !7689)
!7694 = !DILocalVariable(name: "mpoly", arg: 2, scope: !7689, file: !3, line: 1393, type: !2377)
!7695 = !DILocation(line: 1393, column: 62, scope: !7689)
!7696 = !DILocalVariable(name: "ccgdm", scope: !7689, file: !3, line: 1395, type: !2295)
!7697 = !DILocation(line: 1395, column: 18, scope: !7689)
!7698 = !DILocation(line: 1395, column: 45, scope: !7689)
!7699 = !DILocation(line: 1395, column: 26, scope: !7689)
!7700 = !DILocalVariable(name: "ss", scope: !7689, file: !3, line: 1396, type: !6)
!7701 = !DILocation(line: 1396, column: 14, scope: !7689)
!7702 = !DILocation(line: 1396, column: 19, scope: !7689)
!7703 = !DILocation(line: 1396, column: 26, scope: !7689)
!7704 = !DILocalVariable(name: "index", scope: !7689, file: !3, line: 1397, type: !27)
!7705 = !DILocation(line: 1397, column: 6, scope: !7689)
!7706 = !DILocalVariable(name: "totface", scope: !7689, file: !3, line: 1398, type: !27)
!7707 = !DILocation(line: 1398, column: 6, scope: !7689)
!7708 = !DILocalVariable(name: "gridSize", scope: !7689, file: !3, line: 1399, type: !27)
!7709 = !DILocation(line: 1399, column: 6, scope: !7689)
!7710 = !DILocation(line: 1399, column: 40, scope: !7689)
!7711 = !DILocation(line: 1399, column: 17, scope: !7689)
!7712 = !DILocalVariable(name: "i", scope: !7689, file: !3, line: 1401, type: !27)
!7713 = !DILocation(line: 1401, column: 6, scope: !7689)
!7714 = !DILocalVariable(name: "k", scope: !7689, file: !3, line: 1401, type: !27)
!7715 = !DILocation(line: 1401, column: 13, scope: !7689)
!7716 = !DILocalVariable(name: "faceFlags", scope: !7689, file: !3, line: 1402, type: !2024)
!7717 = !DILocation(line: 1402, column: 13, scope: !7689)
!7718 = !DILocation(line: 1402, column: 25, scope: !7689)
!7719 = !DILocation(line: 1402, column: 32, scope: !7689)
!7720 = !DILocation(line: 1404, column: 35, scope: !7689)
!7721 = !DILocation(line: 1404, column: 12, scope: !7689)
!7722 = !DILocation(line: 1404, column: 10, scope: !7689)
!7723 = !DILocation(line: 1405, column: 13, scope: !7724)
!7724 = distinct !DILexicalBlock(scope: !7689, file: !3, line: 1405, column: 2)
!7725 = !DILocation(line: 1405, column: 7, scope: !7724)
!7726 = !DILocation(line: 1405, column: 18, scope: !7727)
!7727 = distinct !DILexicalBlock(scope: !7724, file: !3, line: 1405, column: 2)
!7728 = !DILocation(line: 1405, column: 26, scope: !7727)
!7729 = !DILocation(line: 1405, column: 24, scope: !7727)
!7730 = !DILocation(line: 1405, column: 2, scope: !7724)
!7731 = !DILocalVariable(name: "f", scope: !7732, file: !3, line: 1406, type: !2461)
!7732 = distinct !DILexicalBlock(scope: !7727, file: !3, line: 1405, column: 44)
!7733 = !DILocation(line: 1406, column: 12, scope: !7732)
!7734 = !DILocation(line: 1406, column: 16, scope: !7732)
!7735 = !DILocation(line: 1406, column: 23, scope: !7732)
!7736 = !DILocation(line: 1406, column: 31, scope: !7732)
!7737 = !DILocation(line: 1406, column: 38, scope: !7732)
!7738 = !DILocalVariable(name: "x", scope: !7732, file: !3, line: 1407, type: !27)
!7739 = !DILocation(line: 1407, column: 7, scope: !7732)
!7740 = !DILocalVariable(name: "y", scope: !7732, file: !3, line: 1407, type: !27)
!7741 = !DILocation(line: 1407, column: 10, scope: !7732)
!7742 = !DILocalVariable(name: "S", scope: !7732, file: !3, line: 1407, type: !27)
!7743 = !DILocation(line: 1407, column: 13, scope: !7732)
!7744 = !DILocalVariable(name: "numVerts", scope: !7732, file: !3, line: 1407, type: !27)
!7745 = !DILocation(line: 1407, column: 16, scope: !7732)
!7746 = !DILocation(line: 1407, column: 54, scope: !7732)
!7747 = !DILocation(line: 1407, column: 27, scope: !7732)
!7748 = !DILocalVariable(name: "flag", scope: !7732, file: !3, line: 1408, type: !27)
!7749 = !DILocation(line: 1408, column: 7, scope: !7732)
!7750 = !DILocation(line: 1408, column: 15, scope: !7732)
!7751 = !DILocation(line: 1408, column: 14, scope: !7732)
!7752 = !DILocation(line: 1408, column: 28, scope: !7732)
!7753 = !DILocation(line: 1408, column: 38, scope: !7732)
!7754 = !DILocation(line: 1408, column: 45, scope: !7732)
!7755 = !DILocalVariable(name: "mat_nr", scope: !7732, file: !3, line: 1409, type: !27)
!7756 = !DILocation(line: 1409, column: 7, scope: !7732)
!7757 = !DILocation(line: 1409, column: 17, scope: !7732)
!7758 = !DILocation(line: 1409, column: 16, scope: !7732)
!7759 = !DILocation(line: 1409, column: 30, scope: !7732)
!7760 = !DILocation(line: 1409, column: 40, scope: !7732)
!7761 = !DILocation(line: 1409, column: 47, scope: !7732)
!7762 = !DILocation(line: 1411, column: 10, scope: !7763)
!7763 = distinct !DILexicalBlock(scope: !7732, file: !3, line: 1411, column: 3)
!7764 = !DILocation(line: 1411, column: 8, scope: !7763)
!7765 = !DILocation(line: 1411, column: 15, scope: !7766)
!7766 = distinct !DILexicalBlock(scope: !7763, file: !3, line: 1411, column: 3)
!7767 = !DILocation(line: 1411, column: 19, scope: !7766)
!7768 = !DILocation(line: 1411, column: 17, scope: !7766)
!7769 = !DILocation(line: 1411, column: 3, scope: !7763)
!7770 = !DILocation(line: 1412, column: 11, scope: !7771)
!7771 = distinct !DILexicalBlock(scope: !7772, file: !3, line: 1412, column: 4)
!7772 = distinct !DILexicalBlock(scope: !7766, file: !3, line: 1411, column: 34)
!7773 = !DILocation(line: 1412, column: 9, scope: !7771)
!7774 = !DILocation(line: 1412, column: 16, scope: !7775)
!7775 = distinct !DILexicalBlock(scope: !7771, file: !3, line: 1412, column: 4)
!7776 = !DILocation(line: 1412, column: 20, scope: !7775)
!7777 = !DILocation(line: 1412, column: 29, scope: !7775)
!7778 = !DILocation(line: 1412, column: 18, scope: !7775)
!7779 = !DILocation(line: 1412, column: 4, scope: !7771)
!7780 = !DILocation(line: 1413, column: 12, scope: !7781)
!7781 = distinct !DILexicalBlock(scope: !7782, file: !3, line: 1413, column: 5)
!7782 = distinct !DILexicalBlock(scope: !7775, file: !3, line: 1412, column: 39)
!7783 = !DILocation(line: 1413, column: 10, scope: !7781)
!7784 = !DILocation(line: 1413, column: 17, scope: !7785)
!7785 = distinct !DILexicalBlock(scope: !7781, file: !3, line: 1413, column: 5)
!7786 = !DILocation(line: 1413, column: 21, scope: !7785)
!7787 = !DILocation(line: 1413, column: 30, scope: !7785)
!7788 = !DILocation(line: 1413, column: 19, scope: !7785)
!7789 = !DILocation(line: 1413, column: 5, scope: !7781)
!7790 = !DILocalVariable(name: "mp", scope: !7791, file: !3, line: 1414, type: !2377)
!7791 = distinct !DILexicalBlock(scope: !7785, file: !3, line: 1413, column: 40)
!7792 = !DILocation(line: 1414, column: 13, scope: !7791)
!7793 = !DILocation(line: 1414, column: 19, scope: !7791)
!7794 = !DILocation(line: 1414, column: 25, scope: !7791)
!7795 = !DILocation(line: 1416, column: 19, scope: !7791)
!7796 = !DILocation(line: 1416, column: 6, scope: !7791)
!7797 = !DILocation(line: 1416, column: 10, scope: !7791)
!7798 = !DILocation(line: 1416, column: 17, scope: !7791)
!7799 = !DILocation(line: 1417, column: 17, scope: !7791)
!7800 = !DILocation(line: 1417, column: 6, scope: !7791)
!7801 = !DILocation(line: 1417, column: 10, scope: !7791)
!7802 = !DILocation(line: 1417, column: 15, scope: !7791)
!7803 = !DILocation(line: 1418, column: 22, scope: !7791)
!7804 = !DILocation(line: 1418, column: 6, scope: !7791)
!7805 = !DILocation(line: 1418, column: 10, scope: !7791)
!7806 = !DILocation(line: 1418, column: 20, scope: !7791)
!7807 = !DILocation(line: 1419, column: 6, scope: !7791)
!7808 = !DILocation(line: 1419, column: 10, scope: !7791)
!7809 = !DILocation(line: 1419, column: 18, scope: !7791)
!7810 = !DILocation(line: 1421, column: 8, scope: !7791)
!7811 = !DILocation(line: 1422, column: 7, scope: !7791)
!7812 = !DILocation(line: 1423, column: 5, scope: !7791)
!7813 = !DILocation(line: 1413, column: 36, scope: !7785)
!7814 = !DILocation(line: 1413, column: 5, scope: !7785)
!7815 = distinct !{!7815, !7789, !7816}
!7816 = !DILocation(line: 1423, column: 5, scope: !7781)
!7817 = !DILocation(line: 1424, column: 4, scope: !7782)
!7818 = !DILocation(line: 1412, column: 35, scope: !7775)
!7819 = !DILocation(line: 1412, column: 4, scope: !7775)
!7820 = distinct !{!7820, !7779, !7821}
!7821 = !DILocation(line: 1424, column: 4, scope: !7771)
!7822 = !DILocation(line: 1425, column: 3, scope: !7772)
!7823 = !DILocation(line: 1411, column: 30, scope: !7766)
!7824 = !DILocation(line: 1411, column: 3, scope: !7766)
!7825 = distinct !{!7825, !7769, !7826}
!7826 = !DILocation(line: 1425, column: 3, scope: !7763)
!7827 = !DILocation(line: 1426, column: 2, scope: !7732)
!7828 = !DILocation(line: 1405, column: 40, scope: !7727)
!7829 = !DILocation(line: 1405, column: 2, scope: !7727)
!7830 = distinct !{!7830, !7730, !7831}
!7831 = !DILocation(line: 1426, column: 2, scope: !7724)
!7832 = !DILocation(line: 1427, column: 1, scope: !7689)
!7833 = distinct !DISubprogram(name: "ccgDM_get_vert_data", scope: !3, file: !3, line: 3121, type: !1951, scopeLine: 3122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!7834 = !DILocalVariable(name: "dm", arg: 1, scope: !7833, file: !3, line: 3121, type: !11)
!7835 = !DILocation(line: 3121, column: 47, scope: !7833)
!7836 = !DILocalVariable(name: "index", arg: 2, scope: !7833, file: !3, line: 3121, type: !27)
!7837 = !DILocation(line: 3121, column: 55, scope: !7833)
!7838 = !DILocalVariable(name: "type", arg: 3, scope: !7833, file: !3, line: 3121, type: !27)
!7839 = !DILocation(line: 3121, column: 66, scope: !7833)
!7840 = !DILocation(line: 3123, column: 6, scope: !7841)
!7841 = distinct !DILexicalBlock(scope: !7833, file: !3, line: 3123, column: 6)
!7842 = !DILocation(line: 3123, column: 11, scope: !7841)
!7843 = !DILocation(line: 3123, column: 6, scope: !7833)
!7844 = !DILocation(line: 3125, column: 29, scope: !7845)
!7845 = distinct !DILexicalBlock(scope: !7841, file: !3, line: 3123, column: 28)
!7846 = !DILocation(line: 3125, column: 33, scope: !7845)
!7847 = !DILocation(line: 3125, column: 3, scope: !7845)
!7848 = !DILocation(line: 3126, column: 2, scope: !7845)
!7849 = !DILocation(line: 3128, column: 26, scope: !7833)
!7850 = !DILocation(line: 3128, column: 30, scope: !7833)
!7851 = !DILocation(line: 3128, column: 37, scope: !7833)
!7852 = !DILocation(line: 3128, column: 9, scope: !7833)
!7853 = !DILocation(line: 3128, column: 2, scope: !7833)
!7854 = distinct !DISubprogram(name: "ccgDM_get_edge_data", scope: !3, file: !3, line: 3131, type: !1951, scopeLine: 3132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!7855 = !DILocalVariable(name: "dm", arg: 1, scope: !7854, file: !3, line: 3131, type: !11)
!7856 = !DILocation(line: 3131, column: 47, scope: !7854)
!7857 = !DILocalVariable(name: "index", arg: 2, scope: !7854, file: !3, line: 3131, type: !27)
!7858 = !DILocation(line: 3131, column: 55, scope: !7854)
!7859 = !DILocalVariable(name: "type", arg: 3, scope: !7854, file: !3, line: 3131, type: !27)
!7860 = !DILocation(line: 3131, column: 66, scope: !7854)
!7861 = !DILocation(line: 3133, column: 6, scope: !7862)
!7862 = distinct !DILexicalBlock(scope: !7854, file: !3, line: 3133, column: 6)
!7863 = !DILocation(line: 3133, column: 11, scope: !7862)
!7864 = !DILocation(line: 3133, column: 6, scope: !7854)
!7865 = !DILocation(line: 3135, column: 29, scope: !7866)
!7866 = distinct !DILexicalBlock(scope: !7862, file: !3, line: 3133, column: 28)
!7867 = !DILocation(line: 3135, column: 33, scope: !7866)
!7868 = !DILocation(line: 3135, column: 3, scope: !7866)
!7869 = !DILocation(line: 3136, column: 2, scope: !7866)
!7870 = !DILocation(line: 3138, column: 26, scope: !7854)
!7871 = !DILocation(line: 3138, column: 30, scope: !7854)
!7872 = !DILocation(line: 3138, column: 37, scope: !7854)
!7873 = !DILocation(line: 3138, column: 9, scope: !7854)
!7874 = !DILocation(line: 3138, column: 2, scope: !7854)
!7875 = distinct !DISubprogram(name: "ccgDM_get_tessface_data", scope: !3, file: !3, line: 3141, type: !1951, scopeLine: 3142, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!7876 = !DILocalVariable(name: "dm", arg: 1, scope: !7875, file: !3, line: 3141, type: !11)
!7877 = !DILocation(line: 3141, column: 51, scope: !7875)
!7878 = !DILocalVariable(name: "index", arg: 2, scope: !7875, file: !3, line: 3141, type: !27)
!7879 = !DILocation(line: 3141, column: 59, scope: !7875)
!7880 = !DILocalVariable(name: "type", arg: 3, scope: !7875, file: !3, line: 3141, type: !27)
!7881 = !DILocation(line: 3141, column: 70, scope: !7875)
!7882 = !DILocation(line: 3143, column: 6, scope: !7883)
!7883 = distinct !DILexicalBlock(scope: !7875, file: !3, line: 3143, column: 6)
!7884 = !DILocation(line: 3143, column: 6, scope: !7875)
!7885 = !DILocation(line: 3145, column: 33, scope: !7886)
!7886 = distinct !DILexicalBlock(scope: !7883, file: !3, line: 3143, column: 51)
!7887 = !DILocation(line: 3145, column: 37, scope: !7886)
!7888 = !DILocation(line: 3145, column: 3, scope: !7886)
!7889 = !DILocation(line: 3146, column: 2, scope: !7886)
!7890 = !DILocation(line: 3148, column: 30, scope: !7875)
!7891 = !DILocation(line: 3148, column: 34, scope: !7875)
!7892 = !DILocation(line: 3148, column: 41, scope: !7875)
!7893 = !DILocation(line: 3148, column: 9, scope: !7875)
!7894 = !DILocation(line: 3148, column: 2, scope: !7875)
!7895 = distinct !DISubprogram(name: "ccgDM_get_poly_data", scope: !3, file: !3, line: 3151, type: !1951, scopeLine: 3152, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!7896 = !DILocalVariable(name: "dm", arg: 1, scope: !7895, file: !3, line: 3151, type: !11)
!7897 = !DILocation(line: 3151, column: 47, scope: !7895)
!7898 = !DILocalVariable(name: "index", arg: 2, scope: !7895, file: !3, line: 3151, type: !27)
!7899 = !DILocation(line: 3151, column: 55, scope: !7895)
!7900 = !DILocalVariable(name: "type", arg: 3, scope: !7895, file: !3, line: 3151, type: !27)
!7901 = !DILocation(line: 3151, column: 66, scope: !7895)
!7902 = !DILocation(line: 3153, column: 6, scope: !7903)
!7903 = distinct !DILexicalBlock(scope: !7895, file: !3, line: 3153, column: 6)
!7904 = !DILocation(line: 3153, column: 11, scope: !7903)
!7905 = !DILocation(line: 3153, column: 6, scope: !7895)
!7906 = !DILocation(line: 3155, column: 33, scope: !7907)
!7907 = distinct !DILexicalBlock(scope: !7903, file: !3, line: 3153, column: 28)
!7908 = !DILocation(line: 3155, column: 37, scope: !7907)
!7909 = !DILocation(line: 3155, column: 3, scope: !7907)
!7910 = !DILocation(line: 3156, column: 2, scope: !7907)
!7911 = !DILocation(line: 3158, column: 26, scope: !7895)
!7912 = !DILocation(line: 3158, column: 30, scope: !7895)
!7913 = !DILocation(line: 3158, column: 37, scope: !7895)
!7914 = !DILocation(line: 3158, column: 9, scope: !7895)
!7915 = !DILocation(line: 3158, column: 2, scope: !7895)
!7916 = distinct !DISubprogram(name: "ccgDM_get_vert_data_layer", scope: !3, file: !3, line: 2947, type: !1958, scopeLine: 2948, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!7917 = !DILocalVariable(name: "dm", arg: 1, scope: !7916, file: !3, line: 2947, type: !11)
!7918 = !DILocation(line: 2947, column: 53, scope: !7916)
!7919 = !DILocalVariable(name: "type", arg: 2, scope: !7916, file: !3, line: 2947, type: !27)
!7920 = !DILocation(line: 2947, column: 61, scope: !7916)
!7921 = !DILocation(line: 2949, column: 6, scope: !7922)
!7922 = distinct !DILexicalBlock(scope: !7916, file: !3, line: 2949, column: 6)
!7923 = !DILocation(line: 2949, column: 11, scope: !7922)
!7924 = !DILocation(line: 2949, column: 6, scope: !7916)
!7925 = !DILocalVariable(name: "ccgdm", scope: !7926, file: !3, line: 2951, type: !2295)
!7926 = distinct !DILexicalBlock(scope: !7922, file: !3, line: 2949, column: 28)
!7927 = !DILocation(line: 2951, column: 19, scope: !7926)
!7928 = !DILocation(line: 2951, column: 45, scope: !7926)
!7929 = !DILocation(line: 2951, column: 27, scope: !7926)
!7930 = !DILocalVariable(name: "ss", scope: !7926, file: !3, line: 2952, type: !6)
!7931 = !DILocation(line: 2952, column: 15, scope: !7926)
!7932 = !DILocation(line: 2952, column: 20, scope: !7926)
!7933 = !DILocation(line: 2952, column: 27, scope: !7926)
!7934 = !DILocalVariable(name: "origindex", scope: !7926, file: !3, line: 2953, type: !1314)
!7935 = !DILocation(line: 2953, column: 8, scope: !7926)
!7936 = !DILocalVariable(name: "a", scope: !7926, file: !3, line: 2954, type: !27)
!7937 = !DILocation(line: 2954, column: 7, scope: !7926)
!7938 = !DILocalVariable(name: "index", scope: !7926, file: !3, line: 2954, type: !27)
!7939 = !DILocation(line: 2954, column: 10, scope: !7926)
!7940 = !DILocalVariable(name: "totnone", scope: !7926, file: !3, line: 2954, type: !27)
!7941 = !DILocation(line: 2954, column: 17, scope: !7926)
!7942 = !DILocalVariable(name: "totorig", scope: !7926, file: !3, line: 2954, type: !27)
!7943 = !DILocation(line: 2954, column: 26, scope: !7926)
!7944 = !DILocation(line: 2957, column: 3, scope: !7926)
!7945 = !DILocation(line: 2958, column: 38, scope: !7926)
!7946 = !DILocation(line: 2958, column: 15, scope: !7926)
!7947 = !DILocation(line: 2958, column: 13, scope: !7926)
!7948 = !DILocation(line: 2959, column: 3, scope: !7926)
!7949 = !DILocation(line: 2960, column: 7, scope: !7950)
!7950 = distinct !DILexicalBlock(scope: !7926, file: !3, line: 2960, column: 7)
!7951 = !DILocation(line: 2960, column: 7, scope: !7926)
!7952 = !DILocation(line: 2961, column: 11, scope: !7953)
!7953 = distinct !DILexicalBlock(scope: !7950, file: !3, line: 2960, column: 18)
!7954 = !DILocation(line: 2961, column: 4, scope: !7953)
!7955 = !DILocation(line: 2964, column: 3, scope: !7926)
!7956 = !DILocation(line: 2965, column: 21, scope: !7926)
!7957 = !DILocation(line: 2965, column: 3, scope: !7926)
!7958 = !DILocation(line: 2966, column: 38, scope: !7926)
!7959 = !DILocation(line: 2966, column: 15, scope: !7926)
!7960 = !DILocation(line: 2966, column: 13, scope: !7926)
!7961 = !DILocation(line: 2968, column: 36, scope: !7926)
!7962 = !DILocation(line: 2968, column: 13, scope: !7926)
!7963 = !DILocation(line: 2968, column: 11, scope: !7926)
!7964 = !DILocation(line: 2969, column: 13, scope: !7926)
!7965 = !DILocation(line: 2969, column: 17, scope: !7926)
!7966 = !DILocation(line: 2969, column: 31, scope: !7926)
!7967 = !DILocation(line: 2969, column: 29, scope: !7926)
!7968 = !DILocation(line: 2969, column: 11, scope: !7926)
!7969 = !DILocation(line: 2972, column: 10, scope: !7970)
!7970 = distinct !DILexicalBlock(scope: !7926, file: !3, line: 2972, column: 3)
!7971 = !DILocation(line: 2972, column: 8, scope: !7970)
!7972 = !DILocation(line: 2972, column: 15, scope: !7973)
!7973 = distinct !DILexicalBlock(scope: !7970, file: !3, line: 2972, column: 3)
!7974 = !DILocation(line: 2972, column: 19, scope: !7973)
!7975 = !DILocation(line: 2972, column: 17, scope: !7973)
!7976 = !DILocation(line: 2972, column: 3, scope: !7970)
!7977 = !DILocation(line: 2973, column: 4, scope: !7973)
!7978 = !DILocation(line: 2973, column: 14, scope: !7973)
!7979 = !DILocation(line: 2973, column: 17, scope: !7973)
!7980 = !DILocation(line: 2972, column: 29, scope: !7973)
!7981 = !DILocation(line: 2972, column: 3, scope: !7973)
!7982 = distinct !{!7982, !7976, !7983}
!7983 = !DILocation(line: 2973, column: 19, scope: !7970)
!7984 = !DILocation(line: 2975, column: 14, scope: !7985)
!7985 = distinct !DILexicalBlock(scope: !7926, file: !3, line: 2975, column: 3)
!7986 = !DILocation(line: 2975, column: 8, scope: !7985)
!7987 = !DILocation(line: 2975, column: 19, scope: !7988)
!7988 = distinct !DILexicalBlock(scope: !7985, file: !3, line: 2975, column: 3)
!7989 = !DILocation(line: 2975, column: 27, scope: !7988)
!7990 = !DILocation(line: 2975, column: 25, scope: !7988)
!7991 = !DILocation(line: 2975, column: 3, scope: !7985)
!7992 = !DILocalVariable(name: "v", scope: !7993, file: !3, line: 2976, type: !2613)
!7993 = distinct !DILexicalBlock(scope: !7988, file: !3, line: 2975, column: 50)
!7994 = !DILocation(line: 2976, column: 13, scope: !7993)
!7995 = !DILocation(line: 2976, column: 17, scope: !7993)
!7996 = !DILocation(line: 2976, column: 24, scope: !7993)
!7997 = !DILocation(line: 2976, column: 32, scope: !7993)
!7998 = !DILocation(line: 2976, column: 39, scope: !7993)
!7999 = !DILocation(line: 2977, column: 41, scope: !7993)
!8000 = !DILocation(line: 2977, column: 48, scope: !7993)
!8001 = !DILocation(line: 2977, column: 52, scope: !7993)
!8002 = !DILocation(line: 2977, column: 19, scope: !7993)
!8003 = !DILocation(line: 2977, column: 4, scope: !7993)
!8004 = !DILocation(line: 2977, column: 14, scope: !7993)
!8005 = !DILocation(line: 2977, column: 17, scope: !7993)
!8006 = !DILocation(line: 2978, column: 3, scope: !7993)
!8007 = !DILocation(line: 2975, column: 41, scope: !7988)
!8008 = !DILocation(line: 2975, column: 46, scope: !7988)
!8009 = !DILocation(line: 2975, column: 3, scope: !7988)
!8010 = distinct !{!8010, !7991, !8011}
!8011 = !DILocation(line: 2978, column: 3, scope: !7985)
!8012 = !DILocation(line: 2979, column: 3, scope: !7926)
!8013 = !DILocation(line: 2981, column: 10, scope: !7926)
!8014 = !DILocation(line: 2981, column: 3, scope: !7926)
!8015 = !DILocation(line: 2984, column: 32, scope: !7916)
!8016 = !DILocation(line: 2984, column: 36, scope: !7916)
!8017 = !DILocation(line: 2984, column: 9, scope: !7916)
!8018 = !DILocation(line: 2984, column: 2, scope: !7916)
!8019 = !DILocation(line: 2985, column: 1, scope: !7916)
!8020 = distinct !DISubprogram(name: "ccgDM_get_edge_data_layer", scope: !3, file: !3, line: 2987, type: !1958, scopeLine: 2988, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!8021 = !DILocalVariable(name: "dm", arg: 1, scope: !8020, file: !3, line: 2987, type: !11)
!8022 = !DILocation(line: 2987, column: 53, scope: !8020)
!8023 = !DILocalVariable(name: "type", arg: 2, scope: !8020, file: !3, line: 2987, type: !27)
!8024 = !DILocation(line: 2987, column: 61, scope: !8020)
!8025 = !DILocation(line: 2989, column: 6, scope: !8026)
!8026 = distinct !DILexicalBlock(scope: !8020, file: !3, line: 2989, column: 6)
!8027 = !DILocation(line: 2989, column: 11, scope: !8026)
!8028 = !DILocation(line: 2989, column: 6, scope: !8020)
!8029 = !DILocalVariable(name: "ccgdm", scope: !8030, file: !3, line: 2991, type: !2295)
!8030 = distinct !DILexicalBlock(scope: !8026, file: !3, line: 2989, column: 28)
!8031 = !DILocation(line: 2991, column: 19, scope: !8030)
!8032 = !DILocation(line: 2991, column: 45, scope: !8030)
!8033 = !DILocation(line: 2991, column: 27, scope: !8030)
!8034 = !DILocalVariable(name: "ss", scope: !8030, file: !3, line: 2992, type: !6)
!8035 = !DILocation(line: 2992, column: 15, scope: !8030)
!8036 = !DILocation(line: 2992, column: 20, scope: !8030)
!8037 = !DILocation(line: 2992, column: 27, scope: !8030)
!8038 = !DILocalVariable(name: "origindex", scope: !8030, file: !3, line: 2993, type: !1314)
!8039 = !DILocation(line: 2993, column: 8, scope: !8030)
!8040 = !DILocalVariable(name: "a", scope: !8030, file: !3, line: 2994, type: !27)
!8041 = !DILocation(line: 2994, column: 7, scope: !8030)
!8042 = !DILocalVariable(name: "i", scope: !8030, file: !3, line: 2994, type: !27)
!8043 = !DILocation(line: 2994, column: 10, scope: !8030)
!8044 = !DILocalVariable(name: "index", scope: !8030, file: !3, line: 2994, type: !27)
!8045 = !DILocation(line: 2994, column: 13, scope: !8030)
!8046 = !DILocalVariable(name: "totnone", scope: !8030, file: !3, line: 2994, type: !27)
!8047 = !DILocation(line: 2994, column: 20, scope: !8030)
!8048 = !DILocalVariable(name: "totorig", scope: !8030, file: !3, line: 2994, type: !27)
!8049 = !DILocation(line: 2994, column: 29, scope: !8030)
!8050 = !DILocalVariable(name: "totedge", scope: !8030, file: !3, line: 2994, type: !27)
!8051 = !DILocation(line: 2994, column: 38, scope: !8030)
!8052 = !DILocalVariable(name: "edgeSize", scope: !8030, file: !3, line: 2995, type: !27)
!8053 = !DILocation(line: 2995, column: 7, scope: !8030)
!8054 = !DILocation(line: 2995, column: 41, scope: !8030)
!8055 = !DILocation(line: 2995, column: 18, scope: !8030)
!8056 = !DILocation(line: 2998, column: 38, scope: !8030)
!8057 = !DILocation(line: 2998, column: 15, scope: !8030)
!8058 = !DILocation(line: 2998, column: 13, scope: !8030)
!8059 = !DILocation(line: 2999, column: 7, scope: !8060)
!8060 = distinct !DILexicalBlock(scope: !8030, file: !3, line: 2999, column: 7)
!8061 = !DILocation(line: 2999, column: 7, scope: !8030)
!8062 = !DILocation(line: 3000, column: 11, scope: !8063)
!8063 = distinct !DILexicalBlock(scope: !8060, file: !3, line: 2999, column: 18)
!8064 = !DILocation(line: 3000, column: 4, scope: !8063)
!8065 = !DILocation(line: 3003, column: 21, scope: !8030)
!8066 = !DILocation(line: 3003, column: 3, scope: !8030)
!8067 = !DILocation(line: 3004, column: 38, scope: !8030)
!8068 = !DILocation(line: 3004, column: 15, scope: !8030)
!8069 = !DILocation(line: 3004, column: 13, scope: !8030)
!8070 = !DILocation(line: 3006, column: 36, scope: !8030)
!8071 = !DILocation(line: 3006, column: 13, scope: !8030)
!8072 = !DILocation(line: 3006, column: 11, scope: !8030)
!8073 = !DILocation(line: 3007, column: 13, scope: !8030)
!8074 = !DILocation(line: 3007, column: 24, scope: !8030)
!8075 = !DILocation(line: 3007, column: 33, scope: !8030)
!8076 = !DILocation(line: 3007, column: 21, scope: !8030)
!8077 = !DILocation(line: 3007, column: 11, scope: !8030)
!8078 = !DILocation(line: 3008, column: 13, scope: !8030)
!8079 = !DILocation(line: 3008, column: 17, scope: !8030)
!8080 = !DILocation(line: 3008, column: 31, scope: !8030)
!8081 = !DILocation(line: 3008, column: 29, scope: !8030)
!8082 = !DILocation(line: 3008, column: 11, scope: !8030)
!8083 = !DILocation(line: 3011, column: 10, scope: !8084)
!8084 = distinct !DILexicalBlock(scope: !8030, file: !3, line: 3011, column: 3)
!8085 = !DILocation(line: 3011, column: 8, scope: !8084)
!8086 = !DILocation(line: 3011, column: 15, scope: !8087)
!8087 = distinct !DILexicalBlock(scope: !8084, file: !3, line: 3011, column: 3)
!8088 = !DILocation(line: 3011, column: 19, scope: !8087)
!8089 = !DILocation(line: 3011, column: 17, scope: !8087)
!8090 = !DILocation(line: 3011, column: 3, scope: !8084)
!8091 = !DILocation(line: 3012, column: 4, scope: !8087)
!8092 = !DILocation(line: 3012, column: 14, scope: !8087)
!8093 = !DILocation(line: 3012, column: 17, scope: !8087)
!8094 = !DILocation(line: 3011, column: 29, scope: !8087)
!8095 = !DILocation(line: 3011, column: 3, scope: !8087)
!8096 = distinct !{!8096, !8090, !8097}
!8097 = !DILocation(line: 3012, column: 19, scope: !8084)
!8098 = !DILocation(line: 3014, column: 14, scope: !8099)
!8099 = distinct !DILexicalBlock(scope: !8030, file: !3, line: 3014, column: 3)
!8100 = !DILocation(line: 3014, column: 8, scope: !8099)
!8101 = !DILocation(line: 3014, column: 19, scope: !8102)
!8102 = distinct !DILexicalBlock(scope: !8099, file: !3, line: 3014, column: 3)
!8103 = !DILocation(line: 3014, column: 27, scope: !8102)
!8104 = !DILocation(line: 3014, column: 25, scope: !8102)
!8105 = !DILocation(line: 3014, column: 3, scope: !8099)
!8106 = !DILocalVariable(name: "e", scope: !8107, file: !3, line: 3015, type: !2638)
!8107 = distinct !DILexicalBlock(scope: !8102, file: !3, line: 3014, column: 45)
!8108 = !DILocation(line: 3015, column: 13, scope: !8107)
!8109 = !DILocation(line: 3015, column: 17, scope: !8107)
!8110 = !DILocation(line: 3015, column: 24, scope: !8107)
!8111 = !DILocation(line: 3015, column: 32, scope: !8107)
!8112 = !DILocation(line: 3015, column: 39, scope: !8107)
!8113 = !DILocalVariable(name: "mapIndex", scope: !8107, file: !3, line: 3016, type: !27)
!8114 = !DILocation(line: 3016, column: 8, scope: !8107)
!8115 = !DILocation(line: 3016, column: 41, scope: !8107)
!8116 = !DILocation(line: 3016, column: 45, scope: !8107)
!8117 = !DILocation(line: 3016, column: 19, scope: !8107)
!8118 = !DILocation(line: 3018, column: 11, scope: !8119)
!8119 = distinct !DILexicalBlock(scope: !8107, file: !3, line: 3018, column: 4)
!8120 = !DILocation(line: 3018, column: 9, scope: !8119)
!8121 = !DILocation(line: 3018, column: 16, scope: !8122)
!8122 = distinct !DILexicalBlock(scope: !8119, file: !3, line: 3018, column: 4)
!8123 = !DILocation(line: 3018, column: 20, scope: !8122)
!8124 = !DILocation(line: 3018, column: 29, scope: !8122)
!8125 = !DILocation(line: 3018, column: 18, scope: !8122)
!8126 = !DILocation(line: 3018, column: 4, scope: !8119)
!8127 = !DILocation(line: 3019, column: 20, scope: !8122)
!8128 = !DILocation(line: 3019, column: 5, scope: !8122)
!8129 = !DILocation(line: 3019, column: 15, scope: !8122)
!8130 = !DILocation(line: 3019, column: 18, scope: !8122)
!8131 = !DILocation(line: 3018, column: 35, scope: !8122)
!8132 = !DILocation(line: 3018, column: 40, scope: !8122)
!8133 = !DILocation(line: 3018, column: 4, scope: !8122)
!8134 = distinct !{!8134, !8126, !8135}
!8135 = !DILocation(line: 3019, column: 20, scope: !8119)
!8136 = !DILocation(line: 3020, column: 3, scope: !8107)
!8137 = !DILocation(line: 3014, column: 41, scope: !8102)
!8138 = !DILocation(line: 3014, column: 3, scope: !8102)
!8139 = distinct !{!8139, !8105, !8140}
!8140 = !DILocation(line: 3020, column: 3, scope: !8099)
!8141 = !DILocation(line: 3022, column: 10, scope: !8030)
!8142 = !DILocation(line: 3022, column: 3, scope: !8030)
!8143 = !DILocation(line: 3025, column: 32, scope: !8020)
!8144 = !DILocation(line: 3025, column: 36, scope: !8020)
!8145 = !DILocation(line: 3025, column: 9, scope: !8020)
!8146 = !DILocation(line: 3025, column: 2, scope: !8020)
!8147 = !DILocation(line: 3026, column: 1, scope: !8020)
!8148 = distinct !DISubprogram(name: "ccgDM_get_tessface_data_layer", scope: !3, file: !3, line: 3028, type: !1958, scopeLine: 3029, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!8149 = !DILocalVariable(name: "dm", arg: 1, scope: !8148, file: !3, line: 3028, type: !11)
!8150 = !DILocation(line: 3028, column: 57, scope: !8148)
!8151 = !DILocalVariable(name: "type", arg: 2, scope: !8148, file: !3, line: 3028, type: !27)
!8152 = !DILocation(line: 3028, column: 65, scope: !8148)
!8153 = !DILocation(line: 3030, column: 6, scope: !8154)
!8154 = distinct !DILexicalBlock(scope: !8148, file: !3, line: 3030, column: 6)
!8155 = !DILocation(line: 3030, column: 11, scope: !8154)
!8156 = !DILocation(line: 3030, column: 6, scope: !8148)
!8157 = !DILocalVariable(name: "origindex", scope: !8158, file: !3, line: 3032, type: !1314)
!8158 = distinct !DILexicalBlock(scope: !8154, file: !3, line: 3030, column: 28)
!8159 = !DILocation(line: 3032, column: 8, scope: !8158)
!8160 = !DILocation(line: 3035, column: 42, scope: !8158)
!8161 = !DILocation(line: 3035, column: 15, scope: !8158)
!8162 = !DILocation(line: 3035, column: 13, scope: !8158)
!8163 = !DILocation(line: 3036, column: 7, scope: !8164)
!8164 = distinct !DILexicalBlock(scope: !8158, file: !3, line: 3036, column: 7)
!8165 = !DILocation(line: 3036, column: 7, scope: !8158)
!8166 = !DILocation(line: 3037, column: 11, scope: !8167)
!8167 = distinct !DILexicalBlock(scope: !8164, file: !3, line: 3036, column: 18)
!8168 = !DILocation(line: 3037, column: 4, scope: !8167)
!8169 = !DILocation(line: 3040, column: 25, scope: !8158)
!8170 = !DILocation(line: 3040, column: 3, scope: !8158)
!8171 = !DILocation(line: 3041, column: 42, scope: !8158)
!8172 = !DILocation(line: 3041, column: 15, scope: !8158)
!8173 = !DILocation(line: 3041, column: 13, scope: !8158)
!8174 = !DILocation(line: 3044, column: 14, scope: !8158)
!8175 = !DILocation(line: 3044, column: 25, scope: !8158)
!8176 = !DILocation(line: 3044, column: 29, scope: !8158)
!8177 = !DILocation(line: 3044, column: 45, scope: !8158)
!8178 = !DILocation(line: 3044, column: 3, scope: !8158)
!8179 = !DILocation(line: 3046, column: 10, scope: !8158)
!8180 = !DILocation(line: 3046, column: 3, scope: !8158)
!8181 = !DILocation(line: 3049, column: 6, scope: !8182)
!8182 = distinct !DILexicalBlock(scope: !8148, file: !3, line: 3049, column: 6)
!8183 = !DILocation(line: 3049, column: 11, scope: !8182)
!8184 = !DILocation(line: 3049, column: 6, scope: !8148)
!8185 = !DILocalVariable(name: "tlnors", scope: !8186, file: !3, line: 3055, type: !2373)
!8186 = distinct !DILexicalBlock(scope: !8182, file: !3, line: 3049, column: 33)
!8187 = !DILocation(line: 3055, column: 11, scope: !8186)
!8188 = !DILocation(line: 3058, column: 39, scope: !8186)
!8189 = !DILocation(line: 3058, column: 12, scope: !8186)
!8190 = !DILocation(line: 3058, column: 10, scope: !8186)
!8191 = !DILocation(line: 3059, column: 8, scope: !8192)
!8192 = distinct !DILexicalBlock(scope: !8186, file: !3, line: 3059, column: 7)
!8193 = !DILocation(line: 3059, column: 7, scope: !8186)
!8194 = !DILocalVariable(name: "lnors", scope: !8195, file: !3, line: 3060, type: !1301)
!8195 = distinct !DILexicalBlock(scope: !8192, file: !3, line: 3059, column: 16)
!8196 = !DILocation(line: 3060, column: 12, scope: !8195)
!8197 = !DILocalVariable(name: "tlnors_it", scope: !8195, file: !3, line: 3061, type: !2373)
!8198 = !DILocation(line: 3061, column: 12, scope: !8195)
!8199 = !DILocalVariable(name: "numLoops", scope: !8195, file: !3, line: 3062, type: !8200)
!8200 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !27)
!8201 = !DILocation(line: 3062, column: 14, scope: !8195)
!8202 = !DILocation(line: 3062, column: 43, scope: !8195)
!8203 = !DILocation(line: 3062, column: 25, scope: !8195)
!8204 = !DILocalVariable(name: "i", scope: !8195, file: !3, line: 3063, type: !27)
!8205 = !DILocation(line: 3063, column: 8, scope: !8195)
!8206 = !DILocation(line: 3065, column: 12, scope: !8195)
!8207 = !DILocation(line: 3065, column: 16, scope: !8195)
!8208 = !DILocation(line: 3065, column: 33, scope: !8195)
!8209 = !DILocation(line: 3065, column: 10, scope: !8195)
!8210 = !DILocation(line: 3066, column: 9, scope: !8211)
!8211 = distinct !DILexicalBlock(scope: !8195, file: !3, line: 3066, column: 8)
!8212 = !DILocation(line: 3066, column: 8, scope: !8195)
!8213 = !DILocation(line: 3067, column: 5, scope: !8214)
!8214 = distinct !DILexicalBlock(scope: !8211, file: !3, line: 3066, column: 16)
!8215 = !DILocation(line: 3070, column: 26, scope: !8195)
!8216 = !DILocation(line: 3070, column: 4, scope: !8195)
!8217 = !DILocation(line: 3071, column: 66, scope: !8195)
!8218 = !DILocation(line: 3071, column: 39, scope: !8195)
!8219 = !DILocation(line: 3071, column: 25, scope: !8195)
!8220 = !DILocation(line: 3071, column: 23, scope: !8195)
!8221 = !DILocation(line: 3071, column: 11, scope: !8195)
!8222 = !DILocation(line: 3074, column: 11, scope: !8223)
!8223 = distinct !DILexicalBlock(scope: !8195, file: !3, line: 3074, column: 4)
!8224 = !DILocation(line: 3074, column: 9, scope: !8223)
!8225 = !DILocation(line: 3074, column: 16, scope: !8226)
!8226 = distinct !DILexicalBlock(scope: !8223, file: !3, line: 3074, column: 4)
!8227 = !DILocation(line: 3074, column: 20, scope: !8226)
!8228 = !DILocation(line: 3074, column: 18, scope: !8226)
!8229 = !DILocation(line: 3074, column: 4, scope: !8223)
!8230 = !DILocation(line: 3075, column: 31, scope: !8231)
!8231 = distinct !DILexicalBlock(scope: !8226, file: !3, line: 3074, column: 57)
!8232 = !DILocation(line: 3075, column: 30, scope: !8231)
!8233 = !DILocation(line: 3075, column: 43, scope: !8231)
!8234 = !DILocation(line: 3075, column: 42, scope: !8231)
!8235 = !DILocation(line: 3075, column: 5, scope: !8231)
!8236 = !DILocation(line: 3076, column: 4, scope: !8231)
!8237 = !DILocation(line: 3074, column: 30, scope: !8226)
!8238 = !DILocation(line: 3074, column: 35, scope: !8226)
!8239 = !DILocation(line: 3074, column: 48, scope: !8226)
!8240 = !DILocation(line: 3074, column: 4, scope: !8226)
!8241 = distinct !{!8241, !8229, !8242}
!8242 = !DILocation(line: 3076, column: 4, scope: !8223)
!8243 = !DILocation(line: 3077, column: 3, scope: !8195)
!8244 = !DILocation(line: 3079, column: 10, scope: !8186)
!8245 = !DILocation(line: 3079, column: 3, scope: !8186)
!8246 = !DILocation(line: 3082, column: 36, scope: !8148)
!8247 = !DILocation(line: 3082, column: 40, scope: !8148)
!8248 = !DILocation(line: 3082, column: 9, scope: !8148)
!8249 = !DILocation(line: 3082, column: 2, scope: !8148)
!8250 = !DILocation(line: 3083, column: 1, scope: !8148)
!8251 = distinct !DISubprogram(name: "ccgDM_get_poly_data_layer", scope: !3, file: !3, line: 3085, type: !1958, scopeLine: 3086, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!8252 = !DILocalVariable(name: "dm", arg: 1, scope: !8251, file: !3, line: 3085, type: !11)
!8253 = !DILocation(line: 3085, column: 53, scope: !8251)
!8254 = !DILocalVariable(name: "type", arg: 2, scope: !8251, file: !3, line: 3085, type: !27)
!8255 = !DILocation(line: 3085, column: 61, scope: !8251)
!8256 = !DILocation(line: 3087, column: 6, scope: !8257)
!8257 = distinct !DILexicalBlock(scope: !8251, file: !3, line: 3087, column: 6)
!8258 = !DILocation(line: 3087, column: 11, scope: !8257)
!8259 = !DILocation(line: 3087, column: 6, scope: !8251)
!8260 = !DILocalVariable(name: "ccgdm", scope: !8261, file: !3, line: 3089, type: !2295)
!8261 = distinct !DILexicalBlock(scope: !8257, file: !3, line: 3087, column: 28)
!8262 = !DILocation(line: 3089, column: 19, scope: !8261)
!8263 = !DILocation(line: 3089, column: 45, scope: !8261)
!8264 = !DILocation(line: 3089, column: 27, scope: !8261)
!8265 = !DILocalVariable(name: "ss", scope: !8261, file: !3, line: 3090, type: !6)
!8266 = !DILocation(line: 3090, column: 15, scope: !8261)
!8267 = !DILocation(line: 3090, column: 20, scope: !8261)
!8268 = !DILocation(line: 3090, column: 27, scope: !8261)
!8269 = !DILocalVariable(name: "origindex", scope: !8261, file: !3, line: 3091, type: !1314)
!8270 = !DILocation(line: 3091, column: 8, scope: !8261)
!8271 = !DILocalVariable(name: "a", scope: !8261, file: !3, line: 3092, type: !27)
!8272 = !DILocation(line: 3092, column: 7, scope: !8261)
!8273 = !DILocalVariable(name: "i", scope: !8261, file: !3, line: 3092, type: !27)
!8274 = !DILocation(line: 3092, column: 10, scope: !8261)
!8275 = !DILocalVariable(name: "index", scope: !8261, file: !3, line: 3092, type: !27)
!8276 = !DILocation(line: 3092, column: 13, scope: !8261)
!8277 = !DILocalVariable(name: "totface", scope: !8261, file: !3, line: 3092, type: !27)
!8278 = !DILocation(line: 3092, column: 20, scope: !8261)
!8279 = !DILocalVariable(name: "gridFaces", scope: !8261, file: !3, line: 3093, type: !27)
!8280 = !DILocation(line: 3093, column: 7, scope: !8261)
!8281 = !DILocation(line: 3093, column: 42, scope: !8261)
!8282 = !DILocation(line: 3093, column: 19, scope: !8261)
!8283 = !DILocation(line: 3093, column: 46, scope: !8261)
!8284 = !DILocation(line: 3096, column: 38, scope: !8261)
!8285 = !DILocation(line: 3096, column: 15, scope: !8261)
!8286 = !DILocation(line: 3096, column: 13, scope: !8261)
!8287 = !DILocation(line: 3097, column: 7, scope: !8288)
!8288 = distinct !DILexicalBlock(scope: !8261, file: !3, line: 3097, column: 7)
!8289 = !DILocation(line: 3097, column: 7, scope: !8261)
!8290 = !DILocation(line: 3098, column: 11, scope: !8291)
!8291 = distinct !DILexicalBlock(scope: !8288, file: !3, line: 3097, column: 18)
!8292 = !DILocation(line: 3098, column: 4, scope: !8291)
!8293 = !DILocation(line: 3101, column: 21, scope: !8261)
!8294 = !DILocation(line: 3101, column: 3, scope: !8261)
!8295 = !DILocation(line: 3102, column: 38, scope: !8261)
!8296 = !DILocation(line: 3102, column: 15, scope: !8261)
!8297 = !DILocation(line: 3102, column: 13, scope: !8261)
!8298 = !DILocation(line: 3104, column: 36, scope: !8261)
!8299 = !DILocation(line: 3104, column: 13, scope: !8261)
!8300 = !DILocation(line: 3104, column: 11, scope: !8261)
!8301 = !DILocation(line: 3106, column: 10, scope: !8302)
!8302 = distinct !DILexicalBlock(scope: !8261, file: !3, line: 3106, column: 3)
!8303 = !DILocation(line: 3106, column: 21, scope: !8302)
!8304 = !DILocation(line: 3106, column: 8, scope: !8302)
!8305 = !DILocation(line: 3106, column: 26, scope: !8306)
!8306 = distinct !DILexicalBlock(scope: !8302, file: !3, line: 3106, column: 3)
!8307 = !DILocation(line: 3106, column: 34, scope: !8306)
!8308 = !DILocation(line: 3106, column: 32, scope: !8306)
!8309 = !DILocation(line: 3106, column: 3, scope: !8302)
!8310 = !DILocalVariable(name: "f", scope: !8311, file: !3, line: 3107, type: !2461)
!8311 = distinct !DILexicalBlock(scope: !8306, file: !3, line: 3106, column: 52)
!8312 = !DILocation(line: 3107, column: 13, scope: !8311)
!8313 = !DILocation(line: 3107, column: 17, scope: !8311)
!8314 = !DILocation(line: 3107, column: 24, scope: !8311)
!8315 = !DILocation(line: 3107, column: 32, scope: !8311)
!8316 = !DILocation(line: 3107, column: 39, scope: !8311)
!8317 = !DILocalVariable(name: "numVerts", scope: !8311, file: !3, line: 3108, type: !27)
!8318 = !DILocation(line: 3108, column: 8, scope: !8311)
!8319 = !DILocation(line: 3108, column: 46, scope: !8311)
!8320 = !DILocation(line: 3108, column: 19, scope: !8311)
!8321 = !DILocalVariable(name: "mapIndex", scope: !8311, file: !3, line: 3109, type: !27)
!8322 = !DILocation(line: 3109, column: 8, scope: !8311)
!8323 = !DILocation(line: 3109, column: 41, scope: !8311)
!8324 = !DILocation(line: 3109, column: 45, scope: !8311)
!8325 = !DILocation(line: 3109, column: 19, scope: !8311)
!8326 = !DILocation(line: 3111, column: 11, scope: !8327)
!8327 = distinct !DILexicalBlock(scope: !8311, file: !3, line: 3111, column: 4)
!8328 = !DILocation(line: 3111, column: 9, scope: !8327)
!8329 = !DILocation(line: 3111, column: 16, scope: !8330)
!8330 = distinct !DILexicalBlock(scope: !8327, file: !3, line: 3111, column: 4)
!8331 = !DILocation(line: 3111, column: 20, scope: !8330)
!8332 = !DILocation(line: 3111, column: 32, scope: !8330)
!8333 = !DILocation(line: 3111, column: 30, scope: !8330)
!8334 = !DILocation(line: 3111, column: 44, scope: !8330)
!8335 = !DILocation(line: 3111, column: 42, scope: !8330)
!8336 = !DILocation(line: 3111, column: 18, scope: !8330)
!8337 = !DILocation(line: 3111, column: 4, scope: !8327)
!8338 = !DILocation(line: 3112, column: 20, scope: !8330)
!8339 = !DILocation(line: 3112, column: 5, scope: !8330)
!8340 = !DILocation(line: 3112, column: 15, scope: !8330)
!8341 = !DILocation(line: 3112, column: 18, scope: !8330)
!8342 = !DILocation(line: 3111, column: 55, scope: !8330)
!8343 = !DILocation(line: 3111, column: 60, scope: !8330)
!8344 = !DILocation(line: 3111, column: 4, scope: !8330)
!8345 = distinct !{!8345, !8337, !8346}
!8346 = !DILocation(line: 3112, column: 20, scope: !8327)
!8347 = !DILocation(line: 3113, column: 3, scope: !8311)
!8348 = !DILocation(line: 3106, column: 48, scope: !8306)
!8349 = !DILocation(line: 3106, column: 3, scope: !8306)
!8350 = distinct !{!8350, !8309, !8351}
!8351 = !DILocation(line: 3113, column: 3, scope: !8302)
!8352 = !DILocation(line: 3115, column: 10, scope: !8261)
!8353 = !DILocation(line: 3115, column: 3, scope: !8261)
!8354 = !DILocation(line: 3118, column: 32, scope: !8251)
!8355 = !DILocation(line: 3118, column: 36, scope: !8251)
!8356 = !DILocation(line: 3118, column: 9, scope: !8251)
!8357 = !DILocation(line: 3118, column: 2, scope: !8251)
!8358 = !DILocation(line: 3119, column: 1, scope: !8251)
!8359 = distinct !DISubprogram(name: "ccgDM_getNumGrids", scope: !3, file: !3, line: 3161, type: !1868, scopeLine: 3162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!8360 = !DILocalVariable(name: "dm", arg: 1, scope: !8359, file: !3, line: 3161, type: !11)
!8361 = !DILocation(line: 3161, column: 43, scope: !8359)
!8362 = !DILocalVariable(name: "ccgdm", scope: !8359, file: !3, line: 3163, type: !2295)
!8363 = !DILocation(line: 3163, column: 18, scope: !8359)
!8364 = !DILocation(line: 3163, column: 44, scope: !8359)
!8365 = !DILocation(line: 3163, column: 26, scope: !8359)
!8366 = !DILocalVariable(name: "index", scope: !8359, file: !3, line: 3164, type: !27)
!8367 = !DILocation(line: 3164, column: 6, scope: !8359)
!8368 = !DILocalVariable(name: "numFaces", scope: !8359, file: !3, line: 3164, type: !27)
!8369 = !DILocation(line: 3164, column: 13, scope: !8359)
!8370 = !DILocalVariable(name: "numGrids", scope: !8359, file: !3, line: 3164, type: !27)
!8371 = !DILocation(line: 3164, column: 23, scope: !8359)
!8372 = !DILocation(line: 3166, column: 36, scope: !8359)
!8373 = !DILocation(line: 3166, column: 43, scope: !8359)
!8374 = !DILocation(line: 3166, column: 13, scope: !8359)
!8375 = !DILocation(line: 3166, column: 11, scope: !8359)
!8376 = !DILocation(line: 3167, column: 11, scope: !8359)
!8377 = !DILocation(line: 3169, column: 13, scope: !8378)
!8378 = distinct !DILexicalBlock(scope: !8359, file: !3, line: 3169, column: 2)
!8379 = !DILocation(line: 3169, column: 7, scope: !8378)
!8380 = !DILocation(line: 3169, column: 18, scope: !8381)
!8381 = distinct !DILexicalBlock(scope: !8378, file: !3, line: 3169, column: 2)
!8382 = !DILocation(line: 3169, column: 26, scope: !8381)
!8383 = !DILocation(line: 3169, column: 24, scope: !8381)
!8384 = !DILocation(line: 3169, column: 2, scope: !8378)
!8385 = !DILocalVariable(name: "f", scope: !8386, file: !3, line: 3170, type: !2461)
!8386 = distinct !DILexicalBlock(scope: !8381, file: !3, line: 3169, column: 45)
!8387 = !DILocation(line: 3170, column: 12, scope: !8386)
!8388 = !DILocation(line: 3170, column: 16, scope: !8386)
!8389 = !DILocation(line: 3170, column: 23, scope: !8386)
!8390 = !DILocation(line: 3170, column: 31, scope: !8386)
!8391 = !DILocation(line: 3170, column: 38, scope: !8386)
!8392 = !DILocation(line: 3171, column: 42, scope: !8386)
!8393 = !DILocation(line: 3171, column: 15, scope: !8386)
!8394 = !DILocation(line: 3171, column: 12, scope: !8386)
!8395 = !DILocation(line: 3172, column: 2, scope: !8386)
!8396 = !DILocation(line: 3169, column: 41, scope: !8381)
!8397 = !DILocation(line: 3169, column: 2, scope: !8381)
!8398 = distinct !{!8398, !8384, !8399}
!8399 = !DILocation(line: 3172, column: 2, scope: !8378)
!8400 = !DILocation(line: 3174, column: 9, scope: !8359)
!8401 = !DILocation(line: 3174, column: 2, scope: !8359)
!8402 = distinct !DISubprogram(name: "ccgDM_getGridSize", scope: !3, file: !3, line: 3177, type: !1868, scopeLine: 3178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!8403 = !DILocalVariable(name: "dm", arg: 1, scope: !8402, file: !3, line: 3177, type: !11)
!8404 = !DILocation(line: 3177, column: 43, scope: !8402)
!8405 = !DILocalVariable(name: "ccgdm", scope: !8402, file: !3, line: 3179, type: !2295)
!8406 = !DILocation(line: 3179, column: 18, scope: !8402)
!8407 = !DILocation(line: 3179, column: 44, scope: !8402)
!8408 = !DILocation(line: 3179, column: 26, scope: !8402)
!8409 = !DILocation(line: 3180, column: 32, scope: !8402)
!8410 = !DILocation(line: 3180, column: 39, scope: !8402)
!8411 = !DILocation(line: 3180, column: 9, scope: !8402)
!8412 = !DILocation(line: 3180, column: 2, scope: !8402)
!8413 = distinct !DISubprogram(name: "ccgDM_getGridData", scope: !3, file: !3, line: 3286, type: !8414, scopeLine: 3287, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!8414 = !DISubroutineType(types: !8415)
!8415 = !{!8416, !11}
!8416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2371, size: 64)
!8417 = !DILocalVariable(name: "dm", arg: 1, scope: !8413, file: !3, line: 3286, type: !11)
!8418 = !DILocation(line: 3286, column: 49, scope: !8413)
!8419 = !DILocalVariable(name: "ccgdm", scope: !8413, file: !3, line: 3288, type: !2295)
!8420 = !DILocation(line: 3288, column: 18, scope: !8413)
!8421 = !DILocation(line: 3288, column: 44, scope: !8413)
!8422 = !DILocation(line: 3288, column: 26, scope: !8413)
!8423 = !DILocation(line: 3290, column: 21, scope: !8413)
!8424 = !DILocation(line: 3290, column: 2, scope: !8413)
!8425 = !DILocation(line: 3291, column: 9, scope: !8413)
!8426 = !DILocation(line: 3291, column: 16, scope: !8413)
!8427 = !DILocation(line: 3291, column: 2, scope: !8413)
!8428 = distinct !DISubprogram(name: "ccgDM_getGridAdjacency", scope: !3, file: !3, line: 3294, type: !1990, scopeLine: 3295, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!8429 = !DILocalVariable(name: "dm", arg: 1, scope: !8428, file: !3, line: 3294, type: !11)
!8430 = !DILocation(line: 3294, column: 61, scope: !8428)
!8431 = !DILocalVariable(name: "ccgdm", scope: !8428, file: !3, line: 3296, type: !2295)
!8432 = !DILocation(line: 3296, column: 18, scope: !8428)
!8433 = !DILocation(line: 3296, column: 44, scope: !8428)
!8434 = !DILocation(line: 3296, column: 26, scope: !8428)
!8435 = !DILocation(line: 3298, column: 21, scope: !8428)
!8436 = !DILocation(line: 3298, column: 2, scope: !8428)
!8437 = !DILocation(line: 3299, column: 9, scope: !8428)
!8438 = !DILocation(line: 3299, column: 16, scope: !8428)
!8439 = !DILocation(line: 3299, column: 2, scope: !8428)
!8440 = distinct !DISubprogram(name: "ccgDM_getGridOffset", scope: !3, file: !3, line: 3302, type: !2001, scopeLine: 3303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!8441 = !DILocalVariable(name: "dm", arg: 1, scope: !8440, file: !3, line: 3302, type: !11)
!8442 = !DILocation(line: 3302, column: 46, scope: !8440)
!8443 = !DILocalVariable(name: "ccgdm", scope: !8440, file: !3, line: 3304, type: !2295)
!8444 = !DILocation(line: 3304, column: 18, scope: !8440)
!8445 = !DILocation(line: 3304, column: 44, scope: !8440)
!8446 = !DILocation(line: 3304, column: 26, scope: !8440)
!8447 = !DILocation(line: 3306, column: 21, scope: !8440)
!8448 = !DILocation(line: 3306, column: 2, scope: !8440)
!8449 = !DILocation(line: 3307, column: 9, scope: !8440)
!8450 = !DILocation(line: 3307, column: 16, scope: !8440)
!8451 = !DILocation(line: 3307, column: 2, scope: !8440)
!8452 = distinct !DISubprogram(name: "ccgDM_getGridKey", scope: !3, file: !3, line: 3310, type: !8453, scopeLine: 3311, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!8453 = !DISubroutineType(types: !8454)
!8454 = !{null, !11, !8455}
!8455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5667, size: 64)
!8456 = !DILocalVariable(name: "dm", arg: 1, scope: !8452, file: !3, line: 3310, type: !11)
!8457 = !DILocation(line: 3310, column: 43, scope: !8452)
!8458 = !DILocalVariable(name: "key", arg: 2, scope: !8452, file: !3, line: 3310, type: !8455)
!8459 = !DILocation(line: 3310, column: 55, scope: !8452)
!8460 = !DILocalVariable(name: "ccgdm", scope: !8452, file: !3, line: 3312, type: !2295)
!8461 = !DILocation(line: 3312, column: 18, scope: !8452)
!8462 = !DILocation(line: 3312, column: 44, scope: !8452)
!8463 = !DILocation(line: 3312, column: 26, scope: !8452)
!8464 = !DILocation(line: 3313, column: 20, scope: !8452)
!8465 = !DILocation(line: 3313, column: 25, scope: !8452)
!8466 = !DILocation(line: 3313, column: 32, scope: !8452)
!8467 = !DILocation(line: 3313, column: 2, scope: !8452)
!8468 = !DILocation(line: 3314, column: 1, scope: !8452)
!8469 = distinct !DISubprogram(name: "ccgDM_getGridFlagMats", scope: !3, file: !3, line: 3316, type: !2022, scopeLine: 3317, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!8470 = !DILocalVariable(name: "dm", arg: 1, scope: !8469, file: !3, line: 3316, type: !11)
!8471 = !DILocation(line: 3316, column: 54, scope: !8469)
!8472 = !DILocalVariable(name: "ccgdm", scope: !8469, file: !3, line: 3318, type: !2295)
!8473 = !DILocation(line: 3318, column: 18, scope: !8469)
!8474 = !DILocation(line: 3318, column: 44, scope: !8469)
!8475 = !DILocation(line: 3318, column: 26, scope: !8469)
!8476 = !DILocation(line: 3320, column: 21, scope: !8469)
!8477 = !DILocation(line: 3320, column: 2, scope: !8469)
!8478 = !DILocation(line: 3321, column: 9, scope: !8469)
!8479 = !DILocation(line: 3321, column: 16, scope: !8469)
!8480 = !DILocation(line: 3321, column: 2, scope: !8469)
!8481 = distinct !DISubprogram(name: "ccgDM_getGridHidden", scope: !3, file: !3, line: 3324, type: !8482, scopeLine: 3325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!8482 = !DISubroutineType(types: !8483)
!8483 = !{!8484, !11}
!8484 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2364, size: 64)
!8485 = !DILocalVariable(name: "dm", arg: 1, scope: !8481, file: !3, line: 3324, type: !11)
!8486 = !DILocation(line: 3324, column: 54, scope: !8481)
!8487 = !DILocalVariable(name: "ccgdm", scope: !8481, file: !3, line: 3326, type: !2295)
!8488 = !DILocation(line: 3326, column: 18, scope: !8481)
!8489 = !DILocation(line: 3326, column: 44, scope: !8481)
!8490 = !DILocation(line: 3326, column: 26, scope: !8481)
!8491 = !DILocation(line: 3328, column: 21, scope: !8481)
!8492 = !DILocation(line: 3328, column: 2, scope: !8481)
!8493 = !DILocation(line: 3329, column: 9, scope: !8481)
!8494 = !DILocation(line: 3329, column: 16, scope: !8481)
!8495 = !DILocation(line: 3329, column: 2, scope: !8481)
!8496 = distinct !DISubprogram(name: "ccgDM_getPolyMap", scope: !3, file: !3, line: 3332, type: !8497, scopeLine: 3333, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!8497 = !DISubroutineType(types: !8498)
!8498 = !{!8499, !8502, !11}
!8499 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8500, size: 64)
!8500 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8501)
!8501 = !DIDerivedType(tag: DW_TAG_typedef, name: "MeshElemMap", file: !1311, line: 99, baseType: !1310)
!8502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8503, size: 64)
!8503 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !341, line: 295, baseType: !340)
!8504 = !DILocalVariable(name: "ob", arg: 1, scope: !8496, file: !3, line: 3332, type: !8502)
!8505 = !DILocation(line: 3332, column: 52, scope: !8496)
!8506 = !DILocalVariable(name: "dm", arg: 2, scope: !8496, file: !3, line: 3332, type: !11)
!8507 = !DILocation(line: 3332, column: 69, scope: !8496)
!8508 = !DILocalVariable(name: "ccgdm", scope: !8496, file: !3, line: 3334, type: !2295)
!8509 = !DILocation(line: 3334, column: 18, scope: !8496)
!8510 = !DILocation(line: 3334, column: 44, scope: !8496)
!8511 = !DILocation(line: 3334, column: 26, scope: !8496)
!8512 = !DILocation(line: 3336, column: 7, scope: !8513)
!8513 = distinct !DILexicalBlock(scope: !8496, file: !3, line: 3336, column: 6)
!8514 = !DILocation(line: 3336, column: 14, scope: !8513)
!8515 = !DILocation(line: 3336, column: 23, scope: !8513)
!8516 = !DILocation(line: 3336, column: 27, scope: !8513)
!8517 = !DILocation(line: 3336, column: 31, scope: !8513)
!8518 = !DILocation(line: 3336, column: 38, scope: !8513)
!8519 = !DILocation(line: 3336, column: 43, scope: !8513)
!8520 = !DILocation(line: 3336, column: 46, scope: !8513)
!8521 = !DILocation(line: 3336, column: 50, scope: !8513)
!8522 = !DILocation(line: 3336, column: 55, scope: !8513)
!8523 = !DILocation(line: 3336, column: 6, scope: !8496)
!8524 = !DILocalVariable(name: "me", scope: !8525, file: !3, line: 3337, type: !5215)
!8525 = distinct !DILexicalBlock(scope: !8513, file: !3, line: 3336, column: 67)
!8526 = !DILocation(line: 3337, column: 9, scope: !8525)
!8527 = !DILocation(line: 3337, column: 14, scope: !8525)
!8528 = !DILocation(line: 3337, column: 18, scope: !8525)
!8529 = !DILocation(line: 3339, column: 34, scope: !8525)
!8530 = !DILocation(line: 3339, column: 41, scope: !8525)
!8531 = !DILocation(line: 3339, column: 48, scope: !8525)
!8532 = !DILocation(line: 3339, column: 55, scope: !8525)
!8533 = !DILocation(line: 3340, column: 24, scope: !8525)
!8534 = !DILocation(line: 3340, column: 28, scope: !8525)
!8535 = !DILocation(line: 3340, column: 35, scope: !8525)
!8536 = !DILocation(line: 3340, column: 39, scope: !8525)
!8537 = !DILocation(line: 3341, column: 24, scope: !8525)
!8538 = !DILocation(line: 3341, column: 28, scope: !8525)
!8539 = !DILocation(line: 3341, column: 37, scope: !8525)
!8540 = !DILocation(line: 3341, column: 41, scope: !8525)
!8541 = !DILocation(line: 3341, column: 50, scope: !8525)
!8542 = !DILocation(line: 3341, column: 54, scope: !8525)
!8543 = !DILocation(line: 3339, column: 3, scope: !8525)
!8544 = !DILocation(line: 3342, column: 2, scope: !8525)
!8545 = !DILocation(line: 3344, column: 9, scope: !8496)
!8546 = !DILocation(line: 3344, column: 16, scope: !8496)
!8547 = !DILocation(line: 3344, column: 2, scope: !8496)
!8548 = distinct !DISubprogram(name: "ccgDM_getPBVH", scope: !3, file: !3, line: 3359, type: !8549, scopeLine: 3360, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!8549 = !DISubroutineType(types: !8550)
!8550 = !{!1327, !8502, !11}
!8551 = !DILocalVariable(name: "ob", arg: 1, scope: !8548, file: !3, line: 3359, type: !8502)
!8552 = !DILocation(line: 3359, column: 43, scope: !8548)
!8553 = !DILocalVariable(name: "dm", arg: 2, scope: !8548, file: !3, line: 3359, type: !11)
!8554 = !DILocation(line: 3359, column: 60, scope: !8548)
!8555 = !DILocalVariable(name: "ccgdm", scope: !8548, file: !3, line: 3361, type: !2295)
!8556 = !DILocation(line: 3361, column: 18, scope: !8548)
!8557 = !DILocation(line: 3361, column: 44, scope: !8548)
!8558 = !DILocation(line: 3361, column: 26, scope: !8548)
!8559 = !DILocalVariable(name: "key", scope: !8548, file: !3, line: 3362, type: !5667)
!8560 = !DILocation(line: 3362, column: 9, scope: !8548)
!8561 = !DILocalVariable(name: "numGrids", scope: !8548, file: !3, line: 3363, type: !27)
!8562 = !DILocation(line: 3363, column: 6, scope: !8548)
!8563 = !DILocalVariable(name: "grid_pbvh", scope: !8548, file: !3, line: 3363, type: !27)
!8564 = !DILocation(line: 3363, column: 16, scope: !8548)
!8565 = !DILocation(line: 3365, column: 26, scope: !8548)
!8566 = !DILocation(line: 3365, column: 33, scope: !8548)
!8567 = !DILocation(line: 3365, column: 2, scope: !8548)
!8568 = !DILocation(line: 3367, column: 7, scope: !8569)
!8569 = distinct !DILexicalBlock(scope: !8548, file: !3, line: 3367, column: 6)
!8570 = !DILocation(line: 3367, column: 6, scope: !8548)
!8571 = !DILocation(line: 3368, column: 3, scope: !8572)
!8572 = distinct !DILexicalBlock(scope: !8569, file: !3, line: 3367, column: 11)
!8573 = !DILocation(line: 3368, column: 10, scope: !8572)
!8574 = !DILocation(line: 3368, column: 15, scope: !8572)
!8575 = !DILocation(line: 3369, column: 3, scope: !8572)
!8576 = !DILocation(line: 3372, column: 7, scope: !8577)
!8577 = distinct !DILexicalBlock(scope: !8548, file: !3, line: 3372, column: 6)
!8578 = !DILocation(line: 3372, column: 11, scope: !8577)
!8579 = !DILocation(line: 3372, column: 6, scope: !8548)
!8580 = !DILocation(line: 3373, column: 3, scope: !8577)
!8581 = !DILocation(line: 3375, column: 34, scope: !8548)
!8582 = !DILocation(line: 3375, column: 14, scope: !8548)
!8583 = !DILocation(line: 3375, column: 12, scope: !8548)
!8584 = !DILocation(line: 3377, column: 6, scope: !8585)
!8585 = distinct !DILexicalBlock(scope: !8548, file: !3, line: 3377, column: 6)
!8586 = !DILocation(line: 3377, column: 10, scope: !8585)
!8587 = !DILocation(line: 3377, column: 18, scope: !8585)
!8588 = !DILocation(line: 3377, column: 6, scope: !8548)
!8589 = !DILocation(line: 3378, column: 7, scope: !8590)
!8590 = distinct !DILexicalBlock(scope: !8591, file: !3, line: 3378, column: 7)
!8591 = distinct !DILexicalBlock(scope: !8585, file: !3, line: 3377, column: 24)
!8592 = !DILocation(line: 3378, column: 7, scope: !8591)
!8593 = !DILocation(line: 3383, column: 23, scope: !8594)
!8594 = distinct !DILexicalBlock(scope: !8590, file: !3, line: 3378, column: 18)
!8595 = !DILocation(line: 3383, column: 4, scope: !8594)
!8596 = !DILocation(line: 3384, column: 26, scope: !8594)
!8597 = !DILocation(line: 3384, column: 30, scope: !8594)
!8598 = !DILocation(line: 3384, column: 38, scope: !8594)
!8599 = !DILocation(line: 3384, column: 44, scope: !8594)
!8600 = !DILocation(line: 3384, column: 51, scope: !8594)
!8601 = !DILocation(line: 3384, column: 61, scope: !8594)
!8602 = !DILocation(line: 3384, column: 68, scope: !8594)
!8603 = !DILocation(line: 3384, column: 92, scope: !8594)
!8604 = !DILocation(line: 3384, column: 99, scope: !8594)
!8605 = !DILocation(line: 3384, column: 83, scope: !8594)
!8606 = !DILocation(line: 3385, column: 26, scope: !8594)
!8607 = !DILocation(line: 3385, column: 33, scope: !8594)
!8608 = !DILocation(line: 3385, column: 47, scope: !8594)
!8609 = !DILocation(line: 3385, column: 54, scope: !8594)
!8610 = !DILocation(line: 3384, column: 4, scope: !8594)
!8611 = !DILocation(line: 3386, column: 3, scope: !8594)
!8612 = !DILocation(line: 3388, column: 17, scope: !8591)
!8613 = !DILocation(line: 3388, column: 21, scope: !8591)
!8614 = !DILocation(line: 3388, column: 29, scope: !8591)
!8615 = !DILocation(line: 3388, column: 3, scope: !8591)
!8616 = !DILocation(line: 3388, column: 10, scope: !8591)
!8617 = !DILocation(line: 3388, column: 15, scope: !8591)
!8618 = !DILocation(line: 3389, column: 2, scope: !8591)
!8619 = !DILocation(line: 3391, column: 6, scope: !8620)
!8620 = distinct !DILexicalBlock(scope: !8548, file: !3, line: 3391, column: 6)
!8621 = !DILocation(line: 3391, column: 13, scope: !8620)
!8622 = !DILocation(line: 3391, column: 6, scope: !8548)
!8623 = !DILocation(line: 3392, column: 10, scope: !8620)
!8624 = !DILocation(line: 3392, column: 17, scope: !8620)
!8625 = !DILocation(line: 3392, column: 3, scope: !8620)
!8626 = !DILocation(line: 3397, column: 6, scope: !8627)
!8627 = distinct !DILexicalBlock(scope: !8548, file: !3, line: 3397, column: 6)
!8628 = !DILocation(line: 3397, column: 6, scope: !8548)
!8629 = !DILocation(line: 3398, column: 22, scope: !8630)
!8630 = distinct !DILexicalBlock(scope: !8627, file: !3, line: 3397, column: 17)
!8631 = !DILocation(line: 3398, column: 3, scope: !8630)
!8632 = !DILocation(line: 3400, column: 32, scope: !8630)
!8633 = !DILocation(line: 3400, column: 14, scope: !8630)
!8634 = !DILocation(line: 3400, column: 12, scope: !8630)
!8635 = !DILocation(line: 3402, column: 36, scope: !8630)
!8636 = !DILocation(line: 3402, column: 22, scope: !8630)
!8637 = !DILocation(line: 3402, column: 29, scope: !8630)
!8638 = !DILocation(line: 3402, column: 34, scope: !8630)
!8639 = !DILocation(line: 3402, column: 3, scope: !8630)
!8640 = !DILocation(line: 3402, column: 7, scope: !8630)
!8641 = !DILocation(line: 3402, column: 15, scope: !8630)
!8642 = !DILocation(line: 3402, column: 20, scope: !8630)
!8643 = !DILocation(line: 3403, column: 24, scope: !8630)
!8644 = !DILocation(line: 3403, column: 31, scope: !8630)
!8645 = !DILocation(line: 3403, column: 37, scope: !8630)
!8646 = !DILocation(line: 3403, column: 44, scope: !8630)
!8647 = !DILocation(line: 3403, column: 54, scope: !8630)
!8648 = !DILocation(line: 3403, column: 61, scope: !8630)
!8649 = !DILocation(line: 3404, column: 24, scope: !8630)
!8650 = !DILocation(line: 3404, column: 50, scope: !8630)
!8651 = !DILocation(line: 3404, column: 57, scope: !8630)
!8652 = !DILocation(line: 3404, column: 40, scope: !8630)
!8653 = !DILocation(line: 3404, column: 68, scope: !8630)
!8654 = !DILocation(line: 3404, column: 75, scope: !8630)
!8655 = !DILocation(line: 3404, column: 89, scope: !8630)
!8656 = !DILocation(line: 3404, column: 96, scope: !8630)
!8657 = !DILocation(line: 3403, column: 3, scope: !8630)
!8658 = !DILocation(line: 3405, column: 2, scope: !8630)
!8659 = !DILocation(line: 3406, column: 11, scope: !8660)
!8660 = distinct !DILexicalBlock(scope: !8627, file: !3, line: 3406, column: 11)
!8661 = !DILocation(line: 3406, column: 15, scope: !8660)
!8662 = !DILocation(line: 3406, column: 20, scope: !8660)
!8663 = !DILocation(line: 3406, column: 11, scope: !8627)
!8664 = !DILocalVariable(name: "me", scope: !8665, file: !3, line: 3407, type: !5215)
!8665 = distinct !DILexicalBlock(scope: !8660, file: !3, line: 3406, column: 32)
!8666 = !DILocation(line: 3407, column: 9, scope: !8665)
!8667 = !DILocation(line: 3407, column: 14, scope: !8665)
!8668 = !DILocation(line: 3407, column: 18, scope: !8665)
!8669 = !DILocation(line: 3408, column: 36, scope: !8665)
!8670 = !DILocation(line: 3408, column: 22, scope: !8665)
!8671 = !DILocation(line: 3408, column: 29, scope: !8665)
!8672 = !DILocation(line: 3408, column: 34, scope: !8665)
!8673 = !DILocation(line: 3408, column: 3, scope: !8665)
!8674 = !DILocation(line: 3408, column: 7, scope: !8665)
!8675 = !DILocation(line: 3408, column: 15, scope: !8665)
!8676 = !DILocation(line: 3408, column: 20, scope: !8665)
!8677 = !DILocation(line: 3410, column: 23, scope: !8665)
!8678 = !DILocation(line: 3410, column: 30, scope: !8665)
!8679 = !DILocation(line: 3410, column: 36, scope: !8665)
!8680 = !DILocation(line: 3410, column: 40, scope: !8665)
!8681 = !DILocation(line: 3410, column: 47, scope: !8665)
!8682 = !DILocation(line: 3410, column: 51, scope: !8665)
!8683 = !DILocation(line: 3411, column: 23, scope: !8665)
!8684 = !DILocation(line: 3411, column: 27, scope: !8665)
!8685 = !DILocation(line: 3411, column: 36, scope: !8665)
!8686 = !DILocation(line: 3411, column: 40, scope: !8665)
!8687 = !DILocation(line: 3411, column: 50, scope: !8665)
!8688 = !DILocation(line: 3411, column: 54, scope: !8665)
!8689 = !DILocation(line: 3410, column: 3, scope: !8665)
!8690 = !DILocation(line: 3412, column: 2, scope: !8665)
!8691 = !DILocation(line: 3414, column: 6, scope: !8692)
!8692 = distinct !DILexicalBlock(scope: !8548, file: !3, line: 3414, column: 6)
!8693 = !DILocation(line: 3414, column: 13, scope: !8692)
!8694 = !DILocation(line: 3414, column: 6, scope: !8548)
!8695 = !DILocation(line: 3415, column: 31, scope: !8692)
!8696 = !DILocation(line: 3415, column: 38, scope: !8692)
!8697 = !DILocation(line: 3415, column: 44, scope: !8692)
!8698 = !DILocation(line: 3415, column: 48, scope: !8692)
!8699 = !DILocation(line: 3415, column: 56, scope: !8692)
!8700 = !DILocation(line: 3415, column: 3, scope: !8692)
!8701 = !DILocation(line: 3417, column: 9, scope: !8548)
!8702 = !DILocation(line: 3417, column: 16, scope: !8548)
!8703 = !DILocation(line: 3417, column: 2, scope: !8548)
!8704 = !DILocation(line: 3418, column: 1, scope: !8548)
!8705 = distinct !DISubprogram(name: "ccgDM_calcNormals", scope: !3, file: !3, line: 3425, type: !1858, scopeLine: 3426, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!8706 = !DILocalVariable(name: "dm", arg: 1, scope: !8705, file: !3, line: 3425, type: !11)
!8707 = !DILocation(line: 3425, column: 44, scope: !8705)
!8708 = !DILocation(line: 3428, column: 2, scope: !8705)
!8709 = !DILocation(line: 3428, column: 6, scope: !8705)
!8710 = !DILocation(line: 3428, column: 12, scope: !8705)
!8711 = !DILocation(line: 3429, column: 1, scope: !8705)
!8712 = distinct !DISubprogram(name: "ccgDM_recalcTessellation", scope: !3, file: !3, line: 3420, type: !1858, scopeLine: 3421, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!8713 = !DILocalVariable(name: "UNUSED_dm", arg: 1, scope: !8712, file: !3, line: 3420, type: !11)
!8714 = !DILocation(line: 3420, column: 51, scope: !8712)
!8715 = !DILocation(line: 3423, column: 1, scope: !8712)
!8716 = distinct !DISubprogram(name: "ccgdm_getVertCos", scope: !3, file: !3, line: 1429, type: !2078, scopeLine: 1430, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!8717 = !DILocalVariable(name: "dm", arg: 1, scope: !8716, file: !3, line: 1429, type: !11)
!8718 = !DILocation(line: 1429, column: 43, scope: !8716)
!8719 = !DILocalVariable(name: "cos", arg: 2, scope: !8716, file: !3, line: 1429, type: !1301)
!8720 = !DILocation(line: 1429, column: 55, scope: !8716)
!8721 = !DILocalVariable(name: "ccgdm", scope: !8716, file: !3, line: 1431, type: !2295)
!8722 = !DILocation(line: 1431, column: 18, scope: !8716)
!8723 = !DILocation(line: 1431, column: 45, scope: !8716)
!8724 = !DILocation(line: 1431, column: 26, scope: !8716)
!8725 = !DILocalVariable(name: "ss", scope: !8716, file: !3, line: 1432, type: !6)
!8726 = !DILocation(line: 1432, column: 14, scope: !8716)
!8727 = !DILocation(line: 1432, column: 19, scope: !8716)
!8728 = !DILocation(line: 1432, column: 26, scope: !8716)
!8729 = !DILocalVariable(name: "edgeSize", scope: !8716, file: !3, line: 1433, type: !27)
!8730 = !DILocation(line: 1433, column: 6, scope: !8716)
!8731 = !DILocation(line: 1433, column: 40, scope: !8716)
!8732 = !DILocation(line: 1433, column: 17, scope: !8716)
!8733 = !DILocalVariable(name: "gridSize", scope: !8716, file: !3, line: 1434, type: !27)
!8734 = !DILocation(line: 1434, column: 6, scope: !8716)
!8735 = !DILocation(line: 1434, column: 40, scope: !8716)
!8736 = !DILocation(line: 1434, column: 17, scope: !8716)
!8737 = !DILocalVariable(name: "i", scope: !8716, file: !3, line: 1435, type: !27)
!8738 = !DILocation(line: 1435, column: 6, scope: !8716)
!8739 = !DILocalVariable(name: "vi", scope: !8716, file: !3, line: 1436, type: !3728)
!8740 = !DILocation(line: 1436, column: 19, scope: !8716)
!8741 = !DILocalVariable(name: "ei", scope: !8716, file: !3, line: 1437, type: !3733)
!8742 = !DILocation(line: 1437, column: 19, scope: !8716)
!8743 = !DILocalVariable(name: "fi", scope: !8716, file: !3, line: 1438, type: !3738)
!8744 = !DILocation(line: 1438, column: 19, scope: !8716)
!8745 = !DILocalVariable(name: "faceMap2", scope: !8716, file: !3, line: 1439, type: !8746)
!8746 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2461, size: 64)
!8747 = !DILocation(line: 1439, column: 12, scope: !8716)
!8748 = !DILocalVariable(name: "edgeMap2", scope: !8716, file: !3, line: 1440, type: !8749)
!8749 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2638, size: 64)
!8750 = !DILocation(line: 1440, column: 12, scope: !8716)
!8751 = !DILocalVariable(name: "vertMap2", scope: !8716, file: !3, line: 1441, type: !8752)
!8752 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2613, size: 64)
!8753 = !DILocation(line: 1441, column: 12, scope: !8716)
!8754 = !DILocalVariable(name: "index", scope: !8716, file: !3, line: 1442, type: !27)
!8755 = !DILocation(line: 1442, column: 6, scope: !8716)
!8756 = !DILocalVariable(name: "totvert", scope: !8716, file: !3, line: 1442, type: !27)
!8757 = !DILocation(line: 1442, column: 13, scope: !8716)
!8758 = !DILocalVariable(name: "totedge", scope: !8716, file: !3, line: 1442, type: !27)
!8759 = !DILocation(line: 1442, column: 22, scope: !8716)
!8760 = !DILocalVariable(name: "totface", scope: !8716, file: !3, line: 1442, type: !27)
!8761 = !DILocation(line: 1442, column: 31, scope: !8716)
!8762 = !DILocation(line: 1444, column: 35, scope: !8716)
!8763 = !DILocation(line: 1444, column: 12, scope: !8716)
!8764 = !DILocation(line: 1444, column: 10, scope: !8716)
!8765 = !DILocation(line: 1445, column: 13, scope: !8716)
!8766 = !DILocation(line: 1445, column: 25, scope: !8716)
!8767 = !DILocation(line: 1445, column: 33, scope: !8716)
!8768 = !DILocation(line: 1445, column: 11, scope: !8716)
!8769 = !DILocation(line: 1446, column: 39, scope: !8770)
!8770 = distinct !DILexicalBlock(scope: !8716, file: !3, line: 1446, column: 2)
!8771 = !DILocation(line: 1446, column: 12, scope: !8770)
!8772 = !DILocation(line: 1446, column: 10, scope: !8770)
!8773 = !DILocation(line: 1446, column: 7, scope: !8770)
!8774 = !DILocation(line: 1446, column: 71, scope: !8775)
!8775 = distinct !DILexicalBlock(scope: !8770, file: !3, line: 1446, column: 2)
!8776 = !DILocation(line: 1446, column: 45, scope: !8775)
!8777 = !DILocation(line: 1446, column: 44, scope: !8775)
!8778 = !DILocation(line: 1446, column: 2, scope: !8770)
!8779 = !DILocalVariable(name: "v", scope: !8780, file: !3, line: 1447, type: !2613)
!8780 = distinct !DILexicalBlock(scope: !8775, file: !3, line: 1446, column: 102)
!8781 = !DILocation(line: 1447, column: 12, scope: !8780)
!8782 = !DILocation(line: 1447, column: 43, scope: !8780)
!8783 = !DILocation(line: 1447, column: 16, scope: !8780)
!8784 = !DILocation(line: 1449, column: 69, scope: !8780)
!8785 = !DILocation(line: 1449, column: 3, scope: !8780)
!8786 = !DILocation(line: 1449, column: 12, scope: !8780)
!8787 = !DILocation(line: 1449, column: 67, scope: !8780)
!8788 = !DILocation(line: 1450, column: 2, scope: !8780)
!8789 = !DILocation(line: 1446, column: 97, scope: !8775)
!8790 = !DILocation(line: 1446, column: 76, scope: !8775)
!8791 = !DILocation(line: 1446, column: 2, scope: !8775)
!8792 = distinct !{!8792, !8778, !8793}
!8793 = !DILocation(line: 1450, column: 2, scope: !8770)
!8794 = !DILocation(line: 1451, column: 23, scope: !8716)
!8795 = !DILocation(line: 1451, column: 2, scope: !8716)
!8796 = !DILocation(line: 1453, column: 35, scope: !8716)
!8797 = !DILocation(line: 1453, column: 12, scope: !8716)
!8798 = !DILocation(line: 1453, column: 10, scope: !8716)
!8799 = !DILocation(line: 1454, column: 13, scope: !8716)
!8800 = !DILocation(line: 1454, column: 25, scope: !8716)
!8801 = !DILocation(line: 1454, column: 33, scope: !8716)
!8802 = !DILocation(line: 1454, column: 11, scope: !8716)
!8803 = !DILocation(line: 1455, column: 39, scope: !8804)
!8804 = distinct !DILexicalBlock(scope: !8716, file: !3, line: 1455, column: 2)
!8805 = !DILocation(line: 1455, column: 12, scope: !8804)
!8806 = !DILocation(line: 1455, column: 10, scope: !8804)
!8807 = !DILocation(line: 1455, column: 46, scope: !8804)
!8808 = !DILocation(line: 1455, column: 7, scope: !8804)
!8809 = !DILocation(line: 1455, column: 78, scope: !8810)
!8810 = distinct !DILexicalBlock(scope: !8804, file: !3, line: 1455, column: 2)
!8811 = !DILocation(line: 1455, column: 52, scope: !8810)
!8812 = !DILocation(line: 1455, column: 51, scope: !8810)
!8813 = !DILocation(line: 1455, column: 2, scope: !8804)
!8814 = !DILocalVariable(name: "e", scope: !8815, file: !3, line: 1456, type: !2638)
!8815 = distinct !DILexicalBlock(scope: !8810, file: !3, line: 1455, column: 114)
!8816 = !DILocation(line: 1456, column: 12, scope: !8815)
!8817 = !DILocation(line: 1456, column: 43, scope: !8815)
!8818 = !DILocation(line: 1456, column: 16, scope: !8815)
!8819 = !DILocation(line: 1458, column: 69, scope: !8815)
!8820 = !DILocation(line: 1458, column: 3, scope: !8815)
!8821 = !DILocation(line: 1458, column: 12, scope: !8815)
!8822 = !DILocation(line: 1458, column: 67, scope: !8815)
!8823 = !DILocation(line: 1459, column: 2, scope: !8815)
!8824 = !DILocation(line: 1455, column: 84, scope: !8810)
!8825 = !DILocation(line: 1455, column: 109, scope: !8810)
!8826 = !DILocation(line: 1455, column: 88, scope: !8810)
!8827 = !DILocation(line: 1455, column: 2, scope: !8810)
!8828 = distinct !{!8828, !8813, !8829}
!8829 = !DILocation(line: 1459, column: 2, scope: !8804)
!8830 = !DILocation(line: 1460, column: 23, scope: !8716)
!8831 = !DILocation(line: 1460, column: 2, scope: !8716)
!8832 = !DILocation(line: 1462, column: 35, scope: !8716)
!8833 = !DILocation(line: 1462, column: 12, scope: !8716)
!8834 = !DILocation(line: 1462, column: 10, scope: !8716)
!8835 = !DILocation(line: 1463, column: 13, scope: !8716)
!8836 = !DILocation(line: 1463, column: 25, scope: !8716)
!8837 = !DILocation(line: 1463, column: 33, scope: !8716)
!8838 = !DILocation(line: 1463, column: 11, scope: !8716)
!8839 = !DILocation(line: 1464, column: 39, scope: !8840)
!8840 = distinct !DILexicalBlock(scope: !8716, file: !3, line: 1464, column: 2)
!8841 = !DILocation(line: 1464, column: 12, scope: !8840)
!8842 = !DILocation(line: 1464, column: 10, scope: !8840)
!8843 = !DILocation(line: 1464, column: 7, scope: !8840)
!8844 = !DILocation(line: 1464, column: 71, scope: !8845)
!8845 = distinct !DILexicalBlock(scope: !8840, file: !3, line: 1464, column: 2)
!8846 = !DILocation(line: 1464, column: 45, scope: !8845)
!8847 = !DILocation(line: 1464, column: 44, scope: !8845)
!8848 = !DILocation(line: 1464, column: 2, scope: !8840)
!8849 = !DILocalVariable(name: "f", scope: !8850, file: !3, line: 1465, type: !2461)
!8850 = distinct !DILexicalBlock(scope: !8845, file: !3, line: 1464, column: 102)
!8851 = !DILocation(line: 1465, column: 12, scope: !8850)
!8852 = !DILocation(line: 1465, column: 43, scope: !8850)
!8853 = !DILocation(line: 1465, column: 16, scope: !8850)
!8854 = !DILocation(line: 1467, column: 69, scope: !8850)
!8855 = !DILocation(line: 1467, column: 3, scope: !8850)
!8856 = !DILocation(line: 1467, column: 12, scope: !8850)
!8857 = !DILocation(line: 1467, column: 67, scope: !8850)
!8858 = !DILocation(line: 1468, column: 2, scope: !8850)
!8859 = !DILocation(line: 1464, column: 97, scope: !8845)
!8860 = !DILocation(line: 1464, column: 76, scope: !8845)
!8861 = !DILocation(line: 1464, column: 2, scope: !8845)
!8862 = distinct !{!8862, !8848, !8863}
!8863 = !DILocation(line: 1468, column: 2, scope: !8840)
!8864 = !DILocation(line: 1469, column: 23, scope: !8716)
!8865 = !DILocation(line: 1469, column: 2, scope: !8716)
!8866 = !DILocation(line: 1471, column: 4, scope: !8716)
!8867 = !DILocation(line: 1472, column: 13, scope: !8868)
!8868 = distinct !DILexicalBlock(scope: !8716, file: !3, line: 1472, column: 2)
!8869 = !DILocation(line: 1472, column: 7, scope: !8868)
!8870 = !DILocation(line: 1472, column: 18, scope: !8871)
!8871 = distinct !DILexicalBlock(scope: !8868, file: !3, line: 1472, column: 2)
!8872 = !DILocation(line: 1472, column: 26, scope: !8871)
!8873 = !DILocation(line: 1472, column: 24, scope: !8871)
!8874 = !DILocation(line: 1472, column: 2, scope: !8868)
!8875 = !DILocalVariable(name: "f", scope: !8876, file: !3, line: 1473, type: !2461)
!8876 = distinct !DILexicalBlock(scope: !8871, file: !3, line: 1472, column: 44)
!8877 = !DILocation(line: 1473, column: 12, scope: !8876)
!8878 = !DILocation(line: 1473, column: 16, scope: !8876)
!8879 = !DILocation(line: 1473, column: 25, scope: !8876)
!8880 = !DILocalVariable(name: "x", scope: !8876, file: !3, line: 1474, type: !27)
!8881 = !DILocation(line: 1474, column: 7, scope: !8876)
!8882 = !DILocalVariable(name: "y", scope: !8876, file: !3, line: 1474, type: !27)
!8883 = !DILocation(line: 1474, column: 10, scope: !8876)
!8884 = !DILocalVariable(name: "S", scope: !8876, file: !3, line: 1474, type: !27)
!8885 = !DILocation(line: 1474, column: 13, scope: !8876)
!8886 = !DILocalVariable(name: "numVerts", scope: !8876, file: !3, line: 1474, type: !27)
!8887 = !DILocation(line: 1474, column: 16, scope: !8876)
!8888 = !DILocation(line: 1474, column: 54, scope: !8876)
!8889 = !DILocation(line: 1474, column: 27, scope: !8876)
!8890 = !DILocation(line: 1476, column: 14, scope: !8876)
!8891 = !DILocation(line: 1476, column: 19, scope: !8876)
!8892 = !DILocation(line: 1476, column: 53, scope: !8876)
!8893 = !DILocation(line: 1476, column: 24, scope: !8876)
!8894 = !DILocation(line: 1476, column: 3, scope: !8876)
!8895 = !DILocation(line: 1478, column: 10, scope: !8896)
!8896 = distinct !DILexicalBlock(scope: !8876, file: !3, line: 1478, column: 3)
!8897 = !DILocation(line: 1478, column: 8, scope: !8896)
!8898 = !DILocation(line: 1478, column: 15, scope: !8899)
!8899 = distinct !DILexicalBlock(scope: !8896, file: !3, line: 1478, column: 3)
!8900 = !DILocation(line: 1478, column: 19, scope: !8899)
!8901 = !DILocation(line: 1478, column: 17, scope: !8899)
!8902 = !DILocation(line: 1478, column: 3, scope: !8896)
!8903 = !DILocation(line: 1479, column: 11, scope: !8904)
!8904 = distinct !DILexicalBlock(scope: !8905, file: !3, line: 1479, column: 4)
!8905 = distinct !DILexicalBlock(scope: !8899, file: !3, line: 1478, column: 34)
!8906 = !DILocation(line: 1479, column: 9, scope: !8904)
!8907 = !DILocation(line: 1479, column: 16, scope: !8908)
!8908 = distinct !DILexicalBlock(scope: !8904, file: !3, line: 1479, column: 4)
!8909 = !DILocation(line: 1479, column: 20, scope: !8908)
!8910 = !DILocation(line: 1479, column: 29, scope: !8908)
!8911 = !DILocation(line: 1479, column: 18, scope: !8908)
!8912 = !DILocation(line: 1479, column: 4, scope: !8904)
!8913 = !DILocation(line: 1480, column: 16, scope: !8914)
!8914 = distinct !DILexicalBlock(scope: !8908, file: !3, line: 1479, column: 39)
!8915 = !DILocation(line: 1480, column: 21, scope: !8914)
!8916 = !DILocation(line: 1480, column: 57, scope: !8914)
!8917 = !DILocation(line: 1480, column: 61, scope: !8914)
!8918 = !DILocation(line: 1480, column: 64, scope: !8914)
!8919 = !DILocation(line: 1480, column: 67, scope: !8914)
!8920 = !DILocation(line: 1480, column: 26, scope: !8914)
!8921 = !DILocation(line: 1480, column: 5, scope: !8914)
!8922 = !DILocation(line: 1481, column: 4, scope: !8914)
!8923 = !DILocation(line: 1479, column: 35, scope: !8908)
!8924 = !DILocation(line: 1479, column: 4, scope: !8908)
!8925 = distinct !{!8925, !8912, !8926}
!8926 = !DILocation(line: 1481, column: 4, scope: !8904)
!8927 = !DILocation(line: 1482, column: 3, scope: !8905)
!8928 = !DILocation(line: 1478, column: 30, scope: !8899)
!8929 = !DILocation(line: 1478, column: 3, scope: !8899)
!8930 = distinct !{!8930, !8902, !8931}
!8931 = !DILocation(line: 1482, column: 3, scope: !8896)
!8932 = !DILocation(line: 1484, column: 10, scope: !8933)
!8933 = distinct !DILexicalBlock(scope: !8876, file: !3, line: 1484, column: 3)
!8934 = !DILocation(line: 1484, column: 8, scope: !8933)
!8935 = !DILocation(line: 1484, column: 15, scope: !8936)
!8936 = distinct !DILexicalBlock(scope: !8933, file: !3, line: 1484, column: 3)
!8937 = !DILocation(line: 1484, column: 19, scope: !8936)
!8938 = !DILocation(line: 1484, column: 17, scope: !8936)
!8939 = !DILocation(line: 1484, column: 3, scope: !8933)
!8940 = !DILocation(line: 1485, column: 11, scope: !8941)
!8941 = distinct !DILexicalBlock(scope: !8942, file: !3, line: 1485, column: 4)
!8942 = distinct !DILexicalBlock(scope: !8936, file: !3, line: 1484, column: 34)
!8943 = !DILocation(line: 1485, column: 9, scope: !8941)
!8944 = !DILocation(line: 1485, column: 16, scope: !8945)
!8945 = distinct !DILexicalBlock(scope: !8941, file: !3, line: 1485, column: 4)
!8946 = !DILocation(line: 1485, column: 20, scope: !8945)
!8947 = !DILocation(line: 1485, column: 29, scope: !8945)
!8948 = !DILocation(line: 1485, column: 18, scope: !8945)
!8949 = !DILocation(line: 1485, column: 4, scope: !8941)
!8950 = !DILocation(line: 1486, column: 12, scope: !8951)
!8951 = distinct !DILexicalBlock(scope: !8952, file: !3, line: 1486, column: 5)
!8952 = distinct !DILexicalBlock(scope: !8945, file: !3, line: 1485, column: 39)
!8953 = !DILocation(line: 1486, column: 10, scope: !8951)
!8954 = !DILocation(line: 1486, column: 17, scope: !8955)
!8955 = distinct !DILexicalBlock(scope: !8951, file: !3, line: 1486, column: 5)
!8956 = !DILocation(line: 1486, column: 21, scope: !8955)
!8957 = !DILocation(line: 1486, column: 30, scope: !8955)
!8958 = !DILocation(line: 1486, column: 19, scope: !8955)
!8959 = !DILocation(line: 1486, column: 5, scope: !8951)
!8960 = !DILocation(line: 1487, column: 17, scope: !8961)
!8961 = distinct !DILexicalBlock(scope: !8955, file: !3, line: 1486, column: 40)
!8962 = !DILocation(line: 1487, column: 22, scope: !8961)
!8963 = !DILocation(line: 1487, column: 54, scope: !8961)
!8964 = !DILocation(line: 1487, column: 58, scope: !8961)
!8965 = !DILocation(line: 1487, column: 61, scope: !8961)
!8966 = !DILocation(line: 1487, column: 64, scope: !8961)
!8967 = !DILocation(line: 1487, column: 67, scope: !8961)
!8968 = !DILocation(line: 1487, column: 27, scope: !8961)
!8969 = !DILocation(line: 1487, column: 6, scope: !8961)
!8970 = !DILocation(line: 1488, column: 5, scope: !8961)
!8971 = !DILocation(line: 1486, column: 36, scope: !8955)
!8972 = !DILocation(line: 1486, column: 5, scope: !8955)
!8973 = distinct !{!8973, !8959, !8974}
!8974 = !DILocation(line: 1488, column: 5, scope: !8951)
!8975 = !DILocation(line: 1489, column: 4, scope: !8952)
!8976 = !DILocation(line: 1485, column: 35, scope: !8945)
!8977 = !DILocation(line: 1485, column: 4, scope: !8945)
!8978 = distinct !{!8978, !8949, !8979}
!8979 = !DILocation(line: 1489, column: 4, scope: !8941)
!8980 = !DILocation(line: 1490, column: 3, scope: !8942)
!8981 = !DILocation(line: 1484, column: 30, scope: !8936)
!8982 = !DILocation(line: 1484, column: 3, scope: !8936)
!8983 = distinct !{!8983, !8939, !8984}
!8984 = !DILocation(line: 1490, column: 3, scope: !8933)
!8985 = !DILocation(line: 1491, column: 2, scope: !8876)
!8986 = !DILocation(line: 1472, column: 40, scope: !8871)
!8987 = !DILocation(line: 1472, column: 2, scope: !8871)
!8988 = distinct !{!8988, !8874, !8989}
!8989 = !DILocation(line: 1491, column: 2, scope: !8868)
!8990 = !DILocation(line: 1493, column: 13, scope: !8991)
!8991 = distinct !DILexicalBlock(scope: !8716, file: !3, line: 1493, column: 2)
!8992 = !DILocation(line: 1493, column: 7, scope: !8991)
!8993 = !DILocation(line: 1493, column: 18, scope: !8994)
!8994 = distinct !DILexicalBlock(scope: !8991, file: !3, line: 1493, column: 2)
!8995 = !DILocation(line: 1493, column: 26, scope: !8994)
!8996 = !DILocation(line: 1493, column: 24, scope: !8994)
!8997 = !DILocation(line: 1493, column: 2, scope: !8991)
!8998 = !DILocalVariable(name: "e", scope: !8999, file: !3, line: 1494, type: !2638)
!8999 = distinct !DILexicalBlock(scope: !8994, file: !3, line: 1493, column: 44)
!9000 = !DILocation(line: 1494, column: 12, scope: !8999)
!9001 = !DILocation(line: 1494, column: 16, scope: !8999)
!9002 = !DILocation(line: 1494, column: 25, scope: !8999)
!9003 = !DILocalVariable(name: "x", scope: !8999, file: !3, line: 1495, type: !27)
!9004 = !DILocation(line: 1495, column: 7, scope: !8999)
!9005 = !DILocation(line: 1497, column: 10, scope: !9006)
!9006 = distinct !DILexicalBlock(scope: !8999, file: !3, line: 1497, column: 3)
!9007 = !DILocation(line: 1497, column: 8, scope: !9006)
!9008 = !DILocation(line: 1497, column: 15, scope: !9009)
!9009 = distinct !DILexicalBlock(scope: !9006, file: !3, line: 1497, column: 3)
!9010 = !DILocation(line: 1497, column: 19, scope: !9009)
!9011 = !DILocation(line: 1497, column: 28, scope: !9009)
!9012 = !DILocation(line: 1497, column: 17, scope: !9009)
!9013 = !DILocation(line: 1497, column: 3, scope: !9006)
!9014 = !DILocation(line: 1498, column: 15, scope: !9015)
!9015 = distinct !DILexicalBlock(scope: !9009, file: !3, line: 1497, column: 38)
!9016 = !DILocation(line: 1498, column: 20, scope: !9015)
!9017 = !DILocation(line: 1498, column: 48, scope: !9015)
!9018 = !DILocation(line: 1498, column: 52, scope: !9015)
!9019 = !DILocation(line: 1498, column: 55, scope: !9015)
!9020 = !DILocation(line: 1498, column: 25, scope: !9015)
!9021 = !DILocation(line: 1498, column: 4, scope: !9015)
!9022 = !DILocation(line: 1499, column: 3, scope: !9015)
!9023 = !DILocation(line: 1497, column: 34, scope: !9009)
!9024 = !DILocation(line: 1497, column: 3, scope: !9009)
!9025 = distinct !{!9025, !9013, !9026}
!9026 = !DILocation(line: 1499, column: 3, scope: !9006)
!9027 = !DILocation(line: 1500, column: 2, scope: !8999)
!9028 = !DILocation(line: 1493, column: 40, scope: !8994)
!9029 = !DILocation(line: 1493, column: 2, scope: !8994)
!9030 = distinct !{!9030, !8997, !9031}
!9031 = !DILocation(line: 1500, column: 2, scope: !8991)
!9032 = !DILocation(line: 1502, column: 13, scope: !9033)
!9033 = distinct !DILexicalBlock(scope: !8716, file: !3, line: 1502, column: 2)
!9034 = !DILocation(line: 1502, column: 7, scope: !9033)
!9035 = !DILocation(line: 1502, column: 18, scope: !9036)
!9036 = distinct !DILexicalBlock(scope: !9033, file: !3, line: 1502, column: 2)
!9037 = !DILocation(line: 1502, column: 26, scope: !9036)
!9038 = !DILocation(line: 1502, column: 24, scope: !9036)
!9039 = !DILocation(line: 1502, column: 2, scope: !9033)
!9040 = !DILocalVariable(name: "v", scope: !9041, file: !3, line: 1503, type: !2613)
!9041 = distinct !DILexicalBlock(scope: !9036, file: !3, line: 1502, column: 44)
!9042 = !DILocation(line: 1503, column: 12, scope: !9041)
!9043 = !DILocation(line: 1503, column: 16, scope: !9041)
!9044 = !DILocation(line: 1503, column: 25, scope: !9041)
!9045 = !DILocation(line: 1504, column: 14, scope: !9041)
!9046 = !DILocation(line: 1504, column: 19, scope: !9041)
!9047 = !DILocation(line: 1504, column: 47, scope: !9041)
!9048 = !DILocation(line: 1504, column: 51, scope: !9041)
!9049 = !DILocation(line: 1504, column: 24, scope: !9041)
!9050 = !DILocation(line: 1504, column: 3, scope: !9041)
!9051 = !DILocation(line: 1505, column: 2, scope: !9041)
!9052 = !DILocation(line: 1502, column: 40, scope: !9036)
!9053 = !DILocation(line: 1502, column: 2, scope: !9036)
!9054 = distinct !{!9054, !9039, !9055}
!9055 = !DILocation(line: 1505, column: 2, scope: !9033)
!9056 = !DILocation(line: 1507, column: 2, scope: !8716)
!9057 = !DILocation(line: 1507, column: 12, scope: !8716)
!9058 = !DILocation(line: 1508, column: 2, scope: !8716)
!9059 = !DILocation(line: 1508, column: 12, scope: !8716)
!9060 = !DILocation(line: 1509, column: 2, scope: !8716)
!9061 = !DILocation(line: 1509, column: 12, scope: !8716)
!9062 = !DILocation(line: 1510, column: 1, scope: !8716)
!9063 = distinct !DISubprogram(name: "ccgDM_foreachMappedVert", scope: !3, file: !3, line: 1512, type: !2037, scopeLine: 1517, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!9064 = !DILocalVariable(name: "dm", arg: 1, scope: !9063, file: !3, line: 1513, type: !11)
!9065 = !DILocation(line: 1513, column: 22, scope: !9063)
!9066 = !DILocalVariable(name: "func", arg: 2, scope: !9063, file: !3, line: 1514, type: !2039)
!9067 = !DILocation(line: 1514, column: 16, scope: !9063)
!9068 = !DILocalVariable(name: "userData", arg: 3, scope: !9063, file: !3, line: 1515, type: !41)
!9069 = !DILocation(line: 1515, column: 15, scope: !9063)
!9070 = !DILocalVariable(name: "flag", arg: 4, scope: !9063, file: !3, line: 1516, type: !2045)
!9071 = !DILocation(line: 1516, column: 23, scope: !9063)
!9072 = !DILocalVariable(name: "ccgdm", scope: !9063, file: !3, line: 1518, type: !2295)
!9073 = !DILocation(line: 1518, column: 18, scope: !9063)
!9074 = !DILocation(line: 1518, column: 45, scope: !9063)
!9075 = !DILocation(line: 1518, column: 26, scope: !9063)
!9076 = !DILocalVariable(name: "vi", scope: !9063, file: !3, line: 1519, type: !3728)
!9077 = !DILocation(line: 1519, column: 19, scope: !9063)
!9078 = !DILocalVariable(name: "key", scope: !9063, file: !3, line: 1520, type: !5667)
!9079 = !DILocation(line: 1520, column: 9, scope: !9063)
!9080 = !DILocation(line: 1521, column: 26, scope: !9063)
!9081 = !DILocation(line: 1521, column: 33, scope: !9063)
!9082 = !DILocation(line: 1521, column: 2, scope: !9063)
!9083 = !DILocation(line: 1523, column: 39, scope: !9084)
!9084 = distinct !DILexicalBlock(scope: !9063, file: !3, line: 1523, column: 2)
!9085 = !DILocation(line: 1523, column: 46, scope: !9084)
!9086 = !DILocation(line: 1523, column: 12, scope: !9084)
!9087 = !DILocation(line: 1523, column: 10, scope: !9084)
!9088 = !DILocation(line: 1523, column: 7, scope: !9084)
!9089 = !DILocation(line: 1523, column: 78, scope: !9090)
!9090 = distinct !DILexicalBlock(scope: !9084, file: !3, line: 1523, column: 2)
!9091 = !DILocation(line: 1523, column: 52, scope: !9090)
!9092 = !DILocation(line: 1523, column: 51, scope: !9090)
!9093 = !DILocation(line: 1523, column: 2, scope: !9084)
!9094 = !DILocalVariable(name: "v", scope: !9095, file: !3, line: 1524, type: !2613)
!9095 = distinct !DILexicalBlock(scope: !9090, file: !3, line: 1523, column: 109)
!9096 = !DILocation(line: 1524, column: 12, scope: !9095)
!9097 = !DILocation(line: 1524, column: 43, scope: !9095)
!9098 = !DILocation(line: 1524, column: 16, scope: !9095)
!9099 = !DILocalVariable(name: "index", scope: !9095, file: !3, line: 1525, type: !8200)
!9100 = !DILocation(line: 1525, column: 13, scope: !9095)
!9101 = !DILocation(line: 1525, column: 43, scope: !9095)
!9102 = !DILocation(line: 1525, column: 50, scope: !9095)
!9103 = !DILocation(line: 1525, column: 54, scope: !9095)
!9104 = !DILocation(line: 1525, column: 21, scope: !9095)
!9105 = !DILocation(line: 1527, column: 7, scope: !9106)
!9106 = distinct !DILexicalBlock(scope: !9095, file: !3, line: 1527, column: 7)
!9107 = !DILocation(line: 1527, column: 13, scope: !9106)
!9108 = !DILocation(line: 1527, column: 7, scope: !9095)
!9109 = !DILocalVariable(name: "vd", scope: !9110, file: !3, line: 1528, type: !2371)
!9110 = distinct !DILexicalBlock(scope: !9106, file: !3, line: 1527, column: 20)
!9111 = !DILocation(line: 1528, column: 13, scope: !9110)
!9112 = !DILocation(line: 1528, column: 41, scope: !9110)
!9113 = !DILocation(line: 1528, column: 48, scope: !9110)
!9114 = !DILocation(line: 1528, column: 52, scope: !9110)
!9115 = !DILocation(line: 1528, column: 18, scope: !9110)
!9116 = !DILocalVariable(name: "no", scope: !9110, file: !3, line: 1529, type: !2042)
!9117 = !DILocation(line: 1529, column: 17, scope: !9110)
!9118 = !DILocation(line: 1529, column: 23, scope: !9110)
!9119 = !DILocation(line: 1529, column: 28, scope: !9110)
!9120 = !DILocation(line: 1529, column: 22, scope: !9110)
!9121 = !DILocation(line: 1529, column: 73, scope: !9110)
!9122 = !DILocation(line: 1529, column: 55, scope: !9110)
!9123 = !DILocation(line: 1530, column: 4, scope: !9110)
!9124 = !DILocation(line: 1530, column: 9, scope: !9110)
!9125 = !DILocation(line: 1530, column: 19, scope: !9110)
!9126 = !DILocation(line: 1530, column: 44, scope: !9110)
!9127 = !DILocation(line: 1530, column: 26, scope: !9110)
!9128 = !DILocation(line: 1530, column: 49, scope: !9110)
!9129 = !DILocation(line: 1531, column: 3, scope: !9110)
!9130 = !DILocation(line: 1532, column: 2, scope: !9095)
!9131 = !DILocation(line: 1523, column: 104, scope: !9090)
!9132 = !DILocation(line: 1523, column: 83, scope: !9090)
!9133 = !DILocation(line: 1523, column: 2, scope: !9090)
!9134 = distinct !{!9134, !9093, !9135}
!9135 = !DILocation(line: 1532, column: 2, scope: !9084)
!9136 = !DILocation(line: 1534, column: 23, scope: !9063)
!9137 = !DILocation(line: 1534, column: 2, scope: !9063)
!9138 = !DILocation(line: 1535, column: 1, scope: !9063)
!9139 = distinct !DISubprogram(name: "ccgDM_foreachMappedEdge", scope: !3, file: !3, line: 1537, type: !2052, scopeLine: 1541, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!9140 = !DILocalVariable(name: "dm", arg: 1, scope: !9139, file: !3, line: 1538, type: !11)
!9141 = !DILocation(line: 1538, column: 22, scope: !9139)
!9142 = !DILocalVariable(name: "func", arg: 2, scope: !9139, file: !3, line: 1539, type: !2054)
!9143 = !DILocation(line: 1539, column: 16, scope: !9139)
!9144 = !DILocalVariable(name: "userData", arg: 3, scope: !9139, file: !3, line: 1540, type: !41)
!9145 = !DILocation(line: 1540, column: 15, scope: !9139)
!9146 = !DILocalVariable(name: "ccgdm", scope: !9139, file: !3, line: 1542, type: !2295)
!9147 = !DILocation(line: 1542, column: 18, scope: !9139)
!9148 = !DILocation(line: 1542, column: 45, scope: !9139)
!9149 = !DILocation(line: 1542, column: 26, scope: !9139)
!9150 = !DILocalVariable(name: "ss", scope: !9139, file: !3, line: 1543, type: !6)
!9151 = !DILocation(line: 1543, column: 14, scope: !9139)
!9152 = !DILocation(line: 1543, column: 19, scope: !9139)
!9153 = !DILocation(line: 1543, column: 26, scope: !9139)
!9154 = !DILocalVariable(name: "ei", scope: !9139, file: !3, line: 1544, type: !3733)
!9155 = !DILocation(line: 1544, column: 19, scope: !9139)
!9156 = !DILocalVariable(name: "key", scope: !9139, file: !3, line: 1545, type: !5667)
!9157 = !DILocation(line: 1545, column: 9, scope: !9139)
!9158 = !DILocalVariable(name: "i", scope: !9139, file: !3, line: 1546, type: !27)
!9159 = !DILocation(line: 1546, column: 6, scope: !9139)
!9160 = !DILocalVariable(name: "edgeSize", scope: !9139, file: !3, line: 1546, type: !27)
!9161 = !DILocation(line: 1546, column: 9, scope: !9139)
!9162 = !DILocation(line: 1546, column: 43, scope: !9139)
!9163 = !DILocation(line: 1546, column: 20, scope: !9139)
!9164 = !DILocation(line: 1548, column: 26, scope: !9139)
!9165 = !DILocation(line: 1548, column: 2, scope: !9139)
!9166 = !DILocation(line: 1550, column: 39, scope: !9167)
!9167 = distinct !DILexicalBlock(scope: !9139, file: !3, line: 1550, column: 2)
!9168 = !DILocation(line: 1550, column: 12, scope: !9167)
!9169 = !DILocation(line: 1550, column: 10, scope: !9167)
!9170 = !DILocation(line: 1550, column: 7, scope: !9167)
!9171 = !DILocation(line: 1550, column: 71, scope: !9172)
!9172 = distinct !DILexicalBlock(scope: !9167, file: !3, line: 1550, column: 2)
!9173 = !DILocation(line: 1550, column: 45, scope: !9172)
!9174 = !DILocation(line: 1550, column: 44, scope: !9172)
!9175 = !DILocation(line: 1550, column: 2, scope: !9167)
!9176 = !DILocalVariable(name: "e", scope: !9177, file: !3, line: 1551, type: !2638)
!9177 = distinct !DILexicalBlock(scope: !9172, file: !3, line: 1550, column: 102)
!9178 = !DILocation(line: 1551, column: 12, scope: !9177)
!9179 = !DILocation(line: 1551, column: 43, scope: !9177)
!9180 = !DILocation(line: 1551, column: 16, scope: !9177)
!9181 = !DILocalVariable(name: "index", scope: !9177, file: !3, line: 1552, type: !8200)
!9182 = !DILocation(line: 1552, column: 13, scope: !9177)
!9183 = !DILocation(line: 1552, column: 43, scope: !9177)
!9184 = !DILocation(line: 1552, column: 47, scope: !9177)
!9185 = !DILocation(line: 1552, column: 21, scope: !9177)
!9186 = !DILocation(line: 1554, column: 7, scope: !9187)
!9187 = distinct !DILexicalBlock(scope: !9177, file: !3, line: 1554, column: 7)
!9188 = !DILocation(line: 1554, column: 13, scope: !9187)
!9189 = !DILocation(line: 1554, column: 7, scope: !9177)
!9190 = !DILocalVariable(name: "edgeData", scope: !9191, file: !3, line: 1555, type: !2371)
!9191 = distinct !DILexicalBlock(scope: !9187, file: !3, line: 1554, column: 20)
!9192 = !DILocation(line: 1555, column: 13, scope: !9191)
!9193 = !DILocation(line: 1555, column: 52, scope: !9191)
!9194 = !DILocation(line: 1555, column: 56, scope: !9191)
!9195 = !DILocation(line: 1555, column: 24, scope: !9191)
!9196 = !DILocation(line: 1556, column: 11, scope: !9197)
!9197 = distinct !DILexicalBlock(scope: !9191, file: !3, line: 1556, column: 4)
!9198 = !DILocation(line: 1556, column: 9, scope: !9197)
!9199 = !DILocation(line: 1556, column: 16, scope: !9200)
!9200 = distinct !DILexicalBlock(scope: !9197, file: !3, line: 1556, column: 4)
!9201 = !DILocation(line: 1556, column: 20, scope: !9200)
!9202 = !DILocation(line: 1556, column: 29, scope: !9200)
!9203 = !DILocation(line: 1556, column: 18, scope: !9200)
!9204 = !DILocation(line: 1556, column: 4, scope: !9197)
!9205 = !DILocation(line: 1557, column: 5, scope: !9206)
!9206 = distinct !DILexicalBlock(scope: !9200, file: !3, line: 1556, column: 39)
!9207 = !DILocation(line: 1557, column: 10, scope: !9206)
!9208 = !DILocation(line: 1557, column: 20, scope: !9206)
!9209 = !DILocation(line: 1557, column: 52, scope: !9206)
!9210 = !DILocation(line: 1557, column: 62, scope: !9206)
!9211 = !DILocation(line: 1557, column: 27, scope: !9206)
!9212 = !DILocation(line: 1557, column: 91, scope: !9206)
!9213 = !DILocation(line: 1557, column: 101, scope: !9206)
!9214 = !DILocation(line: 1557, column: 103, scope: !9206)
!9215 = !DILocation(line: 1557, column: 66, scope: !9206)
!9216 = !DILocation(line: 1558, column: 4, scope: !9206)
!9217 = !DILocation(line: 1556, column: 35, scope: !9200)
!9218 = !DILocation(line: 1556, column: 4, scope: !9200)
!9219 = distinct !{!9219, !9204, !9220}
!9220 = !DILocation(line: 1558, column: 4, scope: !9197)
!9221 = !DILocation(line: 1559, column: 3, scope: !9191)
!9222 = !DILocation(line: 1560, column: 2, scope: !9177)
!9223 = !DILocation(line: 1550, column: 97, scope: !9172)
!9224 = !DILocation(line: 1550, column: 76, scope: !9172)
!9225 = !DILocation(line: 1550, column: 2, scope: !9172)
!9226 = distinct !{!9226, !9175, !9227}
!9227 = !DILocation(line: 1560, column: 2, scope: !9167)
!9228 = !DILocation(line: 1562, column: 23, scope: !9139)
!9229 = !DILocation(line: 1562, column: 2, scope: !9139)
!9230 = !DILocation(line: 1563, column: 1, scope: !9139)
!9231 = distinct !DISubprogram(name: "ccgDM_foreachMappedLoop", scope: !3, file: !3, line: 1565, type: !2059, scopeLine: 1570, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!9232 = !DILocalVariable(name: "dm", arg: 1, scope: !9231, file: !3, line: 1566, type: !11)
!9233 = !DILocation(line: 1566, column: 22, scope: !9231)
!9234 = !DILocalVariable(name: "func", arg: 2, scope: !9231, file: !3, line: 1567, type: !2061)
!9235 = !DILocation(line: 1567, column: 16, scope: !9231)
!9236 = !DILocalVariable(name: "userData", arg: 3, scope: !9231, file: !3, line: 1568, type: !41)
!9237 = !DILocation(line: 1568, column: 15, scope: !9231)
!9238 = !DILocalVariable(name: "flag", arg: 4, scope: !9231, file: !3, line: 1569, type: !2045)
!9239 = !DILocation(line: 1569, column: 23, scope: !9231)
!9240 = !DILocalVariable(name: "lnors", scope: !9231, file: !3, line: 1573, type: !9241)
!9241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9242, size: 64)
!9242 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1864, size: 96, elements: !205)
!9243 = !DILocation(line: 1573, column: 16, scope: !9231)
!9244 = !DILocation(line: 1573, column: 29, scope: !9231)
!9245 = !DILocation(line: 1573, column: 34, scope: !9231)
!9246 = !DILocation(line: 1573, column: 28, scope: !9231)
!9247 = !DILocation(line: 1573, column: 84, scope: !9231)
!9248 = !DILocation(line: 1573, column: 61, scope: !9231)
!9249 = !DILocalVariable(name: "mv", scope: !9231, file: !3, line: 1575, type: !2400)
!9250 = !DILocation(line: 1575, column: 9, scope: !9231)
!9251 = !DILocation(line: 1575, column: 14, scope: !9231)
!9252 = !DILocation(line: 1575, column: 18, scope: !9231)
!9253 = !DILocation(line: 1575, column: 31, scope: !9231)
!9254 = !DILocalVariable(name: "ml", scope: !9231, file: !3, line: 1576, type: !3486)
!9255 = !DILocation(line: 1576, column: 9, scope: !9231)
!9256 = !DILocation(line: 1576, column: 14, scope: !9231)
!9257 = !DILocation(line: 1576, column: 18, scope: !9231)
!9258 = !DILocation(line: 1576, column: 31, scope: !9231)
!9259 = !DILocalVariable(name: "mp", scope: !9231, file: !3, line: 1577, type: !2377)
!9260 = !DILocation(line: 1577, column: 9, scope: !9231)
!9261 = !DILocation(line: 1577, column: 14, scope: !9231)
!9262 = !DILocation(line: 1577, column: 18, scope: !9231)
!9263 = !DILocation(line: 1577, column: 31, scope: !9231)
!9264 = !DILocalVariable(name: "v_index", scope: !9231, file: !3, line: 1578, type: !9265)
!9265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8200, size: 64)
!9266 = !DILocation(line: 1578, column: 13, scope: !9231)
!9267 = !DILocation(line: 1578, column: 23, scope: !9231)
!9268 = !DILocation(line: 1578, column: 27, scope: !9231)
!9269 = !DILocation(line: 1578, column: 44, scope: !9231)
!9270 = !DILocalVariable(name: "f_index", scope: !9231, file: !3, line: 1579, type: !9265)
!9271 = !DILocation(line: 1579, column: 13, scope: !9231)
!9272 = !DILocation(line: 1579, column: 23, scope: !9231)
!9273 = !DILocation(line: 1579, column: 27, scope: !9231)
!9274 = !DILocation(line: 1579, column: 44, scope: !9231)
!9275 = !DILocalVariable(name: "p_idx", scope: !9231, file: !3, line: 1580, type: !27)
!9276 = !DILocation(line: 1580, column: 6, scope: !9231)
!9277 = !DILocalVariable(name: "i", scope: !9231, file: !3, line: 1580, type: !27)
!9278 = !DILocation(line: 1580, column: 13, scope: !9231)
!9279 = !DILocation(line: 1582, column: 13, scope: !9280)
!9280 = distinct !DILexicalBlock(scope: !9231, file: !3, line: 1582, column: 2)
!9281 = !DILocation(line: 1582, column: 7, scope: !9280)
!9282 = !DILocation(line: 1582, column: 18, scope: !9283)
!9283 = distinct !DILexicalBlock(scope: !9280, file: !3, line: 1582, column: 2)
!9284 = !DILocation(line: 1582, column: 26, scope: !9283)
!9285 = !DILocation(line: 1582, column: 30, scope: !9283)
!9286 = !DILocation(line: 1582, column: 24, scope: !9283)
!9287 = !DILocation(line: 1582, column: 2, scope: !9280)
!9288 = !DILocation(line: 1583, column: 10, scope: !9289)
!9289 = distinct !DILexicalBlock(scope: !9290, file: !3, line: 1583, column: 3)
!9290 = distinct !DILexicalBlock(scope: !9283, file: !3, line: 1582, column: 58)
!9291 = !DILocation(line: 1583, column: 8, scope: !9289)
!9292 = !DILocation(line: 1583, column: 15, scope: !9293)
!9293 = distinct !DILexicalBlock(scope: !9289, file: !3, line: 1583, column: 3)
!9294 = !DILocation(line: 1583, column: 19, scope: !9293)
!9295 = !DILocation(line: 1583, column: 23, scope: !9293)
!9296 = !DILocation(line: 1583, column: 17, scope: !9293)
!9297 = !DILocation(line: 1583, column: 3, scope: !9289)
!9298 = !DILocalVariable(name: "v_idx", scope: !9299, file: !3, line: 1584, type: !8200)
!9299 = distinct !DILexicalBlock(scope: !9293, file: !3, line: 1583, column: 43)
!9300 = !DILocation(line: 1584, column: 14, scope: !9299)
!9301 = !DILocation(line: 1584, column: 22, scope: !9299)
!9302 = !DILocation(line: 1584, column: 32, scope: !9299)
!9303 = !DILocation(line: 1584, column: 40, scope: !9299)
!9304 = !DILocation(line: 1584, column: 44, scope: !9299)
!9305 = !DILocation(line: 1584, column: 49, scope: !9299)
!9306 = !DILocation(line: 1584, column: 53, scope: !9299)
!9307 = !DILocalVariable(name: "f_idx", scope: !9299, file: !3, line: 1585, type: !8200)
!9308 = !DILocation(line: 1585, column: 14, scope: !9299)
!9309 = !DILocation(line: 1585, column: 22, scope: !9299)
!9310 = !DILocation(line: 1585, column: 32, scope: !9299)
!9311 = !DILocation(line: 1585, column: 40, scope: !9299)
!9312 = !DILocation(line: 1585, column: 49, scope: !9299)
!9313 = !DILocalVariable(name: "no", scope: !9299, file: !3, line: 1586, type: !2042)
!9314 = !DILocation(line: 1586, column: 17, scope: !9299)
!9315 = !DILocation(line: 1586, column: 22, scope: !9299)
!9316 = !DILocation(line: 1586, column: 36, scope: !9299)
!9317 = !DILocation(line: 1586, column: 30, scope: !9299)
!9318 = !DILocation(line: 1587, column: 9, scope: !9319)
!9319 = distinct !DILexicalBlock(scope: !9299, file: !3, line: 1587, column: 8)
!9320 = !DILocation(line: 1587, column: 8, scope: !9299)
!9321 = !DILocation(line: 1588, column: 5, scope: !9322)
!9322 = distinct !DILexicalBlock(scope: !9319, file: !3, line: 1587, column: 45)
!9323 = !DILocation(line: 1588, column: 10, scope: !9322)
!9324 = !DILocation(line: 1588, column: 20, scope: !9322)
!9325 = !DILocation(line: 1588, column: 27, scope: !9322)
!9326 = !DILocation(line: 1588, column: 34, scope: !9322)
!9327 = !DILocation(line: 1588, column: 37, scope: !9322)
!9328 = !DILocation(line: 1588, column: 41, scope: !9322)
!9329 = !DILocation(line: 1588, column: 44, scope: !9322)
!9330 = !DILocation(line: 1588, column: 48, scope: !9322)
!9331 = !DILocation(line: 1589, column: 4, scope: !9322)
!9332 = !DILocation(line: 1590, column: 3, scope: !9299)
!9333 = !DILocation(line: 1583, column: 32, scope: !9293)
!9334 = !DILocation(line: 1583, column: 37, scope: !9293)
!9335 = !DILocation(line: 1583, column: 3, scope: !9293)
!9336 = distinct !{!9336, !9297, !9337}
!9337 = !DILocation(line: 1590, column: 3, scope: !9289)
!9338 = !DILocation(line: 1591, column: 2, scope: !9290)
!9339 = !DILocation(line: 1582, column: 43, scope: !9283)
!9340 = !DILocation(line: 1582, column: 52, scope: !9283)
!9341 = !DILocation(line: 1582, column: 2, scope: !9283)
!9342 = distinct !{!9342, !9287, !9343}
!9343 = !DILocation(line: 1591, column: 2, scope: !9280)
!9344 = !DILocation(line: 1592, column: 1, scope: !9231)
!9345 = distinct !DISubprogram(name: "ccgDM_foreachMappedFaceCenter", scope: !3, file: !3, line: 2816, type: !2066, scopeLine: 2821, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!9346 = !DILocalVariable(name: "dm", arg: 1, scope: !9345, file: !3, line: 2817, type: !11)
!9347 = !DILocation(line: 2817, column: 22, scope: !9345)
!9348 = !DILocalVariable(name: "func", arg: 2, scope: !9345, file: !3, line: 2818, type: !2054)
!9349 = !DILocation(line: 2818, column: 16, scope: !9345)
!9350 = !DILocalVariable(name: "userData", arg: 3, scope: !9345, file: !3, line: 2819, type: !41)
!9351 = !DILocation(line: 2819, column: 15, scope: !9345)
!9352 = !DILocalVariable(name: "flag", arg: 4, scope: !9345, file: !3, line: 2820, type: !2045)
!9353 = !DILocation(line: 2820, column: 23, scope: !9345)
!9354 = !DILocalVariable(name: "ccgdm", scope: !9345, file: !3, line: 2822, type: !2295)
!9355 = !DILocation(line: 2822, column: 18, scope: !9345)
!9356 = !DILocation(line: 2822, column: 45, scope: !9345)
!9357 = !DILocation(line: 2822, column: 26, scope: !9345)
!9358 = !DILocalVariable(name: "ss", scope: !9345, file: !3, line: 2823, type: !6)
!9359 = !DILocation(line: 2823, column: 14, scope: !9345)
!9360 = !DILocation(line: 2823, column: 19, scope: !9345)
!9361 = !DILocation(line: 2823, column: 26, scope: !9345)
!9362 = !DILocalVariable(name: "key", scope: !9345, file: !3, line: 2824, type: !5667)
!9363 = !DILocation(line: 2824, column: 9, scope: !9345)
!9364 = !DILocalVariable(name: "fi", scope: !9345, file: !3, line: 2825, type: !3738)
!9365 = !DILocation(line: 2825, column: 19, scope: !9345)
!9366 = !DILocation(line: 2827, column: 26, scope: !9345)
!9367 = !DILocation(line: 2827, column: 2, scope: !9345)
!9368 = !DILocation(line: 2829, column: 39, scope: !9369)
!9369 = distinct !DILexicalBlock(scope: !9345, file: !3, line: 2829, column: 2)
!9370 = !DILocation(line: 2829, column: 12, scope: !9369)
!9371 = !DILocation(line: 2829, column: 10, scope: !9369)
!9372 = !DILocation(line: 2829, column: 7, scope: !9369)
!9373 = !DILocation(line: 2829, column: 71, scope: !9374)
!9374 = distinct !DILexicalBlock(scope: !9369, file: !3, line: 2829, column: 2)
!9375 = !DILocation(line: 2829, column: 45, scope: !9374)
!9376 = !DILocation(line: 2829, column: 44, scope: !9374)
!9377 = !DILocation(line: 2829, column: 2, scope: !9369)
!9378 = !DILocalVariable(name: "f", scope: !9379, file: !3, line: 2830, type: !2461)
!9379 = distinct !DILexicalBlock(scope: !9374, file: !3, line: 2829, column: 102)
!9380 = !DILocation(line: 2830, column: 12, scope: !9379)
!9381 = !DILocation(line: 2830, column: 43, scope: !9379)
!9382 = !DILocation(line: 2830, column: 16, scope: !9379)
!9383 = !DILocalVariable(name: "index", scope: !9379, file: !3, line: 2831, type: !8200)
!9384 = !DILocation(line: 2831, column: 13, scope: !9379)
!9385 = !DILocation(line: 2831, column: 43, scope: !9379)
!9386 = !DILocation(line: 2831, column: 47, scope: !9379)
!9387 = !DILocation(line: 2831, column: 21, scope: !9379)
!9388 = !DILocation(line: 2833, column: 7, scope: !9389)
!9389 = distinct !DILexicalBlock(scope: !9379, file: !3, line: 2833, column: 7)
!9390 = !DILocation(line: 2833, column: 13, scope: !9389)
!9391 = !DILocation(line: 2833, column: 7, scope: !9379)
!9392 = !DILocalVariable(name: "vd", scope: !9393, file: !3, line: 2835, type: !2371)
!9393 = distinct !DILexicalBlock(scope: !9389, file: !3, line: 2833, column: 20)
!9394 = !DILocation(line: 2835, column: 13, scope: !9393)
!9395 = !DILocation(line: 2835, column: 45, scope: !9393)
!9396 = !DILocation(line: 2835, column: 49, scope: !9393)
!9397 = !DILocation(line: 2835, column: 18, scope: !9393)
!9398 = !DILocalVariable(name: "no", scope: !9393, file: !3, line: 2836, type: !2042)
!9399 = !DILocation(line: 2836, column: 17, scope: !9393)
!9400 = !DILocation(line: 2836, column: 23, scope: !9393)
!9401 = !DILocation(line: 2836, column: 28, scope: !9393)
!9402 = !DILocation(line: 2836, column: 22, scope: !9393)
!9403 = !DILocation(line: 2836, column: 73, scope: !9393)
!9404 = !DILocation(line: 2836, column: 55, scope: !9393)
!9405 = !DILocation(line: 2837, column: 4, scope: !9393)
!9406 = !DILocation(line: 2837, column: 9, scope: !9393)
!9407 = !DILocation(line: 2837, column: 19, scope: !9393)
!9408 = !DILocation(line: 2837, column: 44, scope: !9393)
!9409 = !DILocation(line: 2837, column: 26, scope: !9393)
!9410 = !DILocation(line: 2837, column: 49, scope: !9393)
!9411 = !DILocation(line: 2838, column: 3, scope: !9393)
!9412 = !DILocation(line: 2839, column: 2, scope: !9379)
!9413 = !DILocation(line: 2829, column: 97, scope: !9374)
!9414 = !DILocation(line: 2829, column: 76, scope: !9374)
!9415 = !DILocation(line: 2829, column: 2, scope: !9374)
!9416 = distinct !{!9416, !9377, !9417}
!9417 = !DILocation(line: 2839, column: 2, scope: !9369)
!9418 = !DILocation(line: 2841, column: 23, scope: !9345)
!9419 = !DILocation(line: 2841, column: 2, scope: !9345)
!9420 = !DILocation(line: 2842, column: 1, scope: !9345)
!9421 = distinct !DISubprogram(name: "ccgDM_drawVerts", scope: !3, file: !3, line: 1594, type: !1858, scopeLine: 1595, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!9422 = !DILocalVariable(name: "dm", arg: 1, scope: !9421, file: !3, line: 1594, type: !11)
!9423 = !DILocation(line: 1594, column: 42, scope: !9421)
!9424 = !DILocalVariable(name: "ccgdm", scope: !9421, file: !3, line: 1596, type: !2295)
!9425 = !DILocation(line: 1596, column: 18, scope: !9421)
!9426 = !DILocation(line: 1596, column: 45, scope: !9421)
!9427 = !DILocation(line: 1596, column: 26, scope: !9421)
!9428 = !DILocalVariable(name: "ss", scope: !9421, file: !3, line: 1597, type: !6)
!9429 = !DILocation(line: 1597, column: 14, scope: !9421)
!9430 = !DILocation(line: 1597, column: 19, scope: !9421)
!9431 = !DILocation(line: 1597, column: 26, scope: !9421)
!9432 = !DILocalVariable(name: "edgeSize", scope: !9421, file: !3, line: 1598, type: !27)
!9433 = !DILocation(line: 1598, column: 6, scope: !9421)
!9434 = !DILocation(line: 1598, column: 40, scope: !9421)
!9435 = !DILocation(line: 1598, column: 17, scope: !9421)
!9436 = !DILocalVariable(name: "gridSize", scope: !9421, file: !3, line: 1599, type: !27)
!9437 = !DILocation(line: 1599, column: 6, scope: !9421)
!9438 = !DILocation(line: 1599, column: 40, scope: !9421)
!9439 = !DILocation(line: 1599, column: 17, scope: !9421)
!9440 = !DILocalVariable(name: "vi", scope: !9421, file: !3, line: 1600, type: !3728)
!9441 = !DILocation(line: 1600, column: 19, scope: !9421)
!9442 = !DILocalVariable(name: "ei", scope: !9421, file: !3, line: 1601, type: !3733)
!9443 = !DILocation(line: 1601, column: 19, scope: !9421)
!9444 = !DILocalVariable(name: "fi", scope: !9421, file: !3, line: 1602, type: !3738)
!9445 = !DILocation(line: 1602, column: 19, scope: !9421)
!9446 = !DILocation(line: 1604, column: 2, scope: !9421)
!9447 = !DILocation(line: 1605, column: 39, scope: !9448)
!9448 = distinct !DILexicalBlock(scope: !9421, file: !3, line: 1605, column: 2)
!9449 = !DILocation(line: 1605, column: 12, scope: !9448)
!9450 = !DILocation(line: 1605, column: 10, scope: !9448)
!9451 = !DILocation(line: 1605, column: 7, scope: !9448)
!9452 = !DILocation(line: 1605, column: 71, scope: !9453)
!9453 = distinct !DILexicalBlock(scope: !9448, file: !3, line: 1605, column: 2)
!9454 = !DILocation(line: 1605, column: 45, scope: !9453)
!9455 = !DILocation(line: 1605, column: 44, scope: !9453)
!9456 = !DILocation(line: 1605, column: 2, scope: !9448)
!9457 = !DILocalVariable(name: "v", scope: !9458, file: !3, line: 1606, type: !2613)
!9458 = distinct !DILexicalBlock(scope: !9453, file: !3, line: 1605, column: 102)
!9459 = !DILocation(line: 1606, column: 12, scope: !9458)
!9460 = !DILocation(line: 1606, column: 43, scope: !9458)
!9461 = !DILocation(line: 1606, column: 16, scope: !9458)
!9462 = !DILocation(line: 1607, column: 38, scope: !9458)
!9463 = !DILocation(line: 1607, column: 42, scope: !9458)
!9464 = !DILocation(line: 1607, column: 15, scope: !9458)
!9465 = !DILocation(line: 1607, column: 3, scope: !9458)
!9466 = !DILocation(line: 1608, column: 2, scope: !9458)
!9467 = !DILocation(line: 1605, column: 97, scope: !9453)
!9468 = !DILocation(line: 1605, column: 76, scope: !9453)
!9469 = !DILocation(line: 1605, column: 2, scope: !9453)
!9470 = distinct !{!9470, !9456, !9471}
!9471 = !DILocation(line: 1608, column: 2, scope: !9448)
!9472 = !DILocation(line: 1609, column: 23, scope: !9421)
!9473 = !DILocation(line: 1609, column: 2, scope: !9421)
!9474 = !DILocation(line: 1611, column: 39, scope: !9475)
!9475 = distinct !DILexicalBlock(scope: !9421, file: !3, line: 1611, column: 2)
!9476 = !DILocation(line: 1611, column: 12, scope: !9475)
!9477 = !DILocation(line: 1611, column: 10, scope: !9475)
!9478 = !DILocation(line: 1611, column: 7, scope: !9475)
!9479 = !DILocation(line: 1611, column: 71, scope: !9480)
!9480 = distinct !DILexicalBlock(scope: !9475, file: !3, line: 1611, column: 2)
!9481 = !DILocation(line: 1611, column: 45, scope: !9480)
!9482 = !DILocation(line: 1611, column: 44, scope: !9480)
!9483 = !DILocation(line: 1611, column: 2, scope: !9475)
!9484 = !DILocalVariable(name: "e", scope: !9485, file: !3, line: 1612, type: !2638)
!9485 = distinct !DILexicalBlock(scope: !9480, file: !3, line: 1611, column: 102)
!9486 = !DILocation(line: 1612, column: 12, scope: !9485)
!9487 = !DILocation(line: 1612, column: 43, scope: !9485)
!9488 = !DILocation(line: 1612, column: 16, scope: !9485)
!9489 = !DILocalVariable(name: "x", scope: !9485, file: !3, line: 1613, type: !27)
!9490 = !DILocation(line: 1613, column: 7, scope: !9485)
!9491 = !DILocation(line: 1615, column: 10, scope: !9492)
!9492 = distinct !DILexicalBlock(scope: !9485, file: !3, line: 1615, column: 3)
!9493 = !DILocation(line: 1615, column: 8, scope: !9492)
!9494 = !DILocation(line: 1615, column: 15, scope: !9495)
!9495 = distinct !DILexicalBlock(scope: !9492, file: !3, line: 1615, column: 3)
!9496 = !DILocation(line: 1615, column: 19, scope: !9495)
!9497 = !DILocation(line: 1615, column: 28, scope: !9495)
!9498 = !DILocation(line: 1615, column: 17, scope: !9495)
!9499 = !DILocation(line: 1615, column: 3, scope: !9492)
!9500 = !DILocation(line: 1616, column: 39, scope: !9495)
!9501 = !DILocation(line: 1616, column: 43, scope: !9495)
!9502 = !DILocation(line: 1616, column: 46, scope: !9495)
!9503 = !DILocation(line: 1616, column: 16, scope: !9495)
!9504 = !DILocation(line: 1616, column: 4, scope: !9495)
!9505 = !DILocation(line: 1615, column: 34, scope: !9495)
!9506 = !DILocation(line: 1615, column: 3, scope: !9495)
!9507 = distinct !{!9507, !9499, !9508}
!9508 = !DILocation(line: 1616, column: 48, scope: !9492)
!9509 = !DILocation(line: 1617, column: 2, scope: !9485)
!9510 = !DILocation(line: 1611, column: 97, scope: !9480)
!9511 = !DILocation(line: 1611, column: 76, scope: !9480)
!9512 = !DILocation(line: 1611, column: 2, scope: !9480)
!9513 = distinct !{!9513, !9483, !9514}
!9514 = !DILocation(line: 1617, column: 2, scope: !9475)
!9515 = !DILocation(line: 1618, column: 23, scope: !9421)
!9516 = !DILocation(line: 1618, column: 2, scope: !9421)
!9517 = !DILocation(line: 1620, column: 39, scope: !9518)
!9518 = distinct !DILexicalBlock(scope: !9421, file: !3, line: 1620, column: 2)
!9519 = !DILocation(line: 1620, column: 12, scope: !9518)
!9520 = !DILocation(line: 1620, column: 10, scope: !9518)
!9521 = !DILocation(line: 1620, column: 7, scope: !9518)
!9522 = !DILocation(line: 1620, column: 71, scope: !9523)
!9523 = distinct !DILexicalBlock(scope: !9518, file: !3, line: 1620, column: 2)
!9524 = !DILocation(line: 1620, column: 45, scope: !9523)
!9525 = !DILocation(line: 1620, column: 44, scope: !9523)
!9526 = !DILocation(line: 1620, column: 2, scope: !9518)
!9527 = !DILocalVariable(name: "f", scope: !9528, file: !3, line: 1621, type: !2461)
!9528 = distinct !DILexicalBlock(scope: !9523, file: !3, line: 1620, column: 102)
!9529 = !DILocation(line: 1621, column: 12, scope: !9528)
!9530 = !DILocation(line: 1621, column: 43, scope: !9528)
!9531 = !DILocation(line: 1621, column: 16, scope: !9528)
!9532 = !DILocalVariable(name: "x", scope: !9528, file: !3, line: 1622, type: !27)
!9533 = !DILocation(line: 1622, column: 7, scope: !9528)
!9534 = !DILocalVariable(name: "y", scope: !9528, file: !3, line: 1622, type: !27)
!9535 = !DILocation(line: 1622, column: 10, scope: !9528)
!9536 = !DILocalVariable(name: "S", scope: !9528, file: !3, line: 1622, type: !27)
!9537 = !DILocation(line: 1622, column: 13, scope: !9528)
!9538 = !DILocalVariable(name: "numVerts", scope: !9528, file: !3, line: 1622, type: !27)
!9539 = !DILocation(line: 1622, column: 16, scope: !9528)
!9540 = !DILocation(line: 1622, column: 54, scope: !9528)
!9541 = !DILocation(line: 1622, column: 27, scope: !9528)
!9542 = !DILocation(line: 1624, column: 44, scope: !9528)
!9543 = !DILocation(line: 1624, column: 15, scope: !9528)
!9544 = !DILocation(line: 1624, column: 3, scope: !9528)
!9545 = !DILocation(line: 1625, column: 10, scope: !9546)
!9546 = distinct !DILexicalBlock(scope: !9528, file: !3, line: 1625, column: 3)
!9547 = !DILocation(line: 1625, column: 8, scope: !9546)
!9548 = !DILocation(line: 1625, column: 15, scope: !9549)
!9549 = distinct !DILexicalBlock(scope: !9546, file: !3, line: 1625, column: 3)
!9550 = !DILocation(line: 1625, column: 19, scope: !9549)
!9551 = !DILocation(line: 1625, column: 17, scope: !9549)
!9552 = !DILocation(line: 1625, column: 3, scope: !9546)
!9553 = !DILocation(line: 1626, column: 11, scope: !9554)
!9554 = distinct !DILexicalBlock(scope: !9549, file: !3, line: 1626, column: 4)
!9555 = !DILocation(line: 1626, column: 9, scope: !9554)
!9556 = !DILocation(line: 1626, column: 16, scope: !9557)
!9557 = distinct !DILexicalBlock(scope: !9554, file: !3, line: 1626, column: 4)
!9558 = !DILocation(line: 1626, column: 20, scope: !9557)
!9559 = !DILocation(line: 1626, column: 29, scope: !9557)
!9560 = !DILocation(line: 1626, column: 18, scope: !9557)
!9561 = !DILocation(line: 1626, column: 4, scope: !9554)
!9562 = !DILocation(line: 1627, column: 48, scope: !9557)
!9563 = !DILocation(line: 1627, column: 52, scope: !9557)
!9564 = !DILocation(line: 1627, column: 55, scope: !9557)
!9565 = !DILocation(line: 1627, column: 58, scope: !9557)
!9566 = !DILocation(line: 1627, column: 17, scope: !9557)
!9567 = !DILocation(line: 1627, column: 5, scope: !9557)
!9568 = !DILocation(line: 1626, column: 35, scope: !9557)
!9569 = !DILocation(line: 1626, column: 4, scope: !9557)
!9570 = distinct !{!9570, !9561, !9571}
!9571 = !DILocation(line: 1627, column: 60, scope: !9554)
!9572 = !DILocation(line: 1625, column: 30, scope: !9549)
!9573 = !DILocation(line: 1625, column: 3, scope: !9549)
!9574 = distinct !{!9574, !9552, !9575}
!9575 = !DILocation(line: 1627, column: 60, scope: !9546)
!9576 = !DILocation(line: 1628, column: 10, scope: !9577)
!9577 = distinct !DILexicalBlock(scope: !9528, file: !3, line: 1628, column: 3)
!9578 = !DILocation(line: 1628, column: 8, scope: !9577)
!9579 = !DILocation(line: 1628, column: 15, scope: !9580)
!9580 = distinct !DILexicalBlock(scope: !9577, file: !3, line: 1628, column: 3)
!9581 = !DILocation(line: 1628, column: 19, scope: !9580)
!9582 = !DILocation(line: 1628, column: 17, scope: !9580)
!9583 = !DILocation(line: 1628, column: 3, scope: !9577)
!9584 = !DILocation(line: 1629, column: 11, scope: !9585)
!9585 = distinct !DILexicalBlock(scope: !9580, file: !3, line: 1629, column: 4)
!9586 = !DILocation(line: 1629, column: 9, scope: !9585)
!9587 = !DILocation(line: 1629, column: 16, scope: !9588)
!9588 = distinct !DILexicalBlock(scope: !9585, file: !3, line: 1629, column: 4)
!9589 = !DILocation(line: 1629, column: 20, scope: !9588)
!9590 = !DILocation(line: 1629, column: 29, scope: !9588)
!9591 = !DILocation(line: 1629, column: 18, scope: !9588)
!9592 = !DILocation(line: 1629, column: 4, scope: !9585)
!9593 = !DILocation(line: 1630, column: 12, scope: !9594)
!9594 = distinct !DILexicalBlock(scope: !9588, file: !3, line: 1630, column: 5)
!9595 = !DILocation(line: 1630, column: 10, scope: !9594)
!9596 = !DILocation(line: 1630, column: 17, scope: !9597)
!9597 = distinct !DILexicalBlock(scope: !9594, file: !3, line: 1630, column: 5)
!9598 = !DILocation(line: 1630, column: 21, scope: !9597)
!9599 = !DILocation(line: 1630, column: 30, scope: !9597)
!9600 = !DILocation(line: 1630, column: 19, scope: !9597)
!9601 = !DILocation(line: 1630, column: 5, scope: !9594)
!9602 = !DILocation(line: 1631, column: 45, scope: !9597)
!9603 = !DILocation(line: 1631, column: 49, scope: !9597)
!9604 = !DILocation(line: 1631, column: 52, scope: !9597)
!9605 = !DILocation(line: 1631, column: 55, scope: !9597)
!9606 = !DILocation(line: 1631, column: 58, scope: !9597)
!9607 = !DILocation(line: 1631, column: 18, scope: !9597)
!9608 = !DILocation(line: 1631, column: 6, scope: !9597)
!9609 = !DILocation(line: 1630, column: 36, scope: !9597)
!9610 = !DILocation(line: 1630, column: 5, scope: !9597)
!9611 = distinct !{!9611, !9601, !9612}
!9612 = !DILocation(line: 1631, column: 60, scope: !9594)
!9613 = !DILocation(line: 1629, column: 35, scope: !9588)
!9614 = !DILocation(line: 1629, column: 4, scope: !9588)
!9615 = distinct !{!9615, !9592, !9616}
!9616 = !DILocation(line: 1631, column: 60, scope: !9585)
!9617 = !DILocation(line: 1628, column: 30, scope: !9580)
!9618 = !DILocation(line: 1628, column: 3, scope: !9580)
!9619 = distinct !{!9619, !9583, !9620}
!9620 = !DILocation(line: 1631, column: 60, scope: !9577)
!9621 = !DILocation(line: 1632, column: 2, scope: !9528)
!9622 = !DILocation(line: 1620, column: 97, scope: !9523)
!9623 = !DILocation(line: 1620, column: 76, scope: !9523)
!9624 = !DILocation(line: 1620, column: 2, scope: !9523)
!9625 = distinct !{!9625, !9526, !9626}
!9626 = !DILocation(line: 1632, column: 2, scope: !9518)
!9627 = !DILocation(line: 1633, column: 23, scope: !9421)
!9628 = !DILocation(line: 1633, column: 2, scope: !9421)
!9629 = !DILocation(line: 1634, column: 2, scope: !9421)
!9630 = !DILocation(line: 1635, column: 1, scope: !9421)
!9631 = distinct !DISubprogram(name: "ccgDM_drawEdges", scope: !3, file: !3, line: 1652, type: !2094, scopeLine: 1653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!9632 = !DILocalVariable(name: "dm", arg: 1, scope: !9631, file: !3, line: 1652, type: !11)
!9633 = !DILocation(line: 1652, column: 42, scope: !9631)
!9634 = !DILocalVariable(name: "drawLooseEdges", arg: 2, scope: !9631, file: !3, line: 1652, type: !673)
!9635 = !DILocation(line: 1652, column: 51, scope: !9631)
!9636 = !DILocalVariable(name: "drawAllEdges", arg: 3, scope: !9631, file: !3, line: 1652, type: !673)
!9637 = !DILocation(line: 1652, column: 72, scope: !9631)
!9638 = !DILocalVariable(name: "ccgdm", scope: !9631, file: !3, line: 1654, type: !2295)
!9639 = !DILocation(line: 1654, column: 18, scope: !9631)
!9640 = !DILocation(line: 1654, column: 45, scope: !9631)
!9641 = !DILocation(line: 1654, column: 26, scope: !9631)
!9642 = !DILocalVariable(name: "ss", scope: !9631, file: !3, line: 1655, type: !6)
!9643 = !DILocation(line: 1655, column: 14, scope: !9631)
!9644 = !DILocation(line: 1655, column: 19, scope: !9631)
!9645 = !DILocation(line: 1655, column: 26, scope: !9631)
!9646 = !DILocalVariable(name: "key", scope: !9631, file: !3, line: 1656, type: !5667)
!9647 = !DILocation(line: 1656, column: 9, scope: !9631)
!9648 = !DILocalVariable(name: "i", scope: !9631, file: !3, line: 1657, type: !27)
!9649 = !DILocation(line: 1657, column: 6, scope: !9631)
!9650 = !DILocalVariable(name: "j", scope: !9631, file: !3, line: 1657, type: !27)
!9651 = !DILocation(line: 1657, column: 9, scope: !9631)
!9652 = !DILocalVariable(name: "edgeSize", scope: !9631, file: !3, line: 1657, type: !27)
!9653 = !DILocation(line: 1657, column: 12, scope: !9631)
!9654 = !DILocation(line: 1657, column: 46, scope: !9631)
!9655 = !DILocation(line: 1657, column: 23, scope: !9631)
!9656 = !DILocalVariable(name: "totedge", scope: !9631, file: !3, line: 1658, type: !27)
!9657 = !DILocation(line: 1658, column: 6, scope: !9631)
!9658 = !DILocation(line: 1658, column: 39, scope: !9631)
!9659 = !DILocation(line: 1658, column: 16, scope: !9631)
!9660 = !DILocalVariable(name: "gridSize", scope: !9631, file: !3, line: 1659, type: !27)
!9661 = !DILocation(line: 1659, column: 6, scope: !9631)
!9662 = !DILocation(line: 1659, column: 40, scope: !9631)
!9663 = !DILocation(line: 1659, column: 17, scope: !9631)
!9664 = !DILocalVariable(name: "useAging", scope: !9631, file: !3, line: 1660, type: !27)
!9665 = !DILocation(line: 1660, column: 6, scope: !9631)
!9666 = !DILocation(line: 1662, column: 26, scope: !9631)
!9667 = !DILocation(line: 1662, column: 2, scope: !9631)
!9668 = !DILocation(line: 1663, column: 20, scope: !9631)
!9669 = !DILocation(line: 1663, column: 2, scope: !9631)
!9670 = !DILocation(line: 1665, column: 29, scope: !9631)
!9671 = !DILocation(line: 1665, column: 2, scope: !9631)
!9672 = !DILocation(line: 1667, column: 9, scope: !9673)
!9673 = distinct !DILexicalBlock(scope: !9631, file: !3, line: 1667, column: 2)
!9674 = !DILocation(line: 1667, column: 7, scope: !9673)
!9675 = !DILocation(line: 1667, column: 14, scope: !9676)
!9676 = distinct !DILexicalBlock(scope: !9673, file: !3, line: 1667, column: 2)
!9677 = !DILocation(line: 1667, column: 18, scope: !9676)
!9678 = !DILocation(line: 1667, column: 16, scope: !9676)
!9679 = !DILocation(line: 1667, column: 2, scope: !9673)
!9680 = !DILocalVariable(name: "e", scope: !9681, file: !3, line: 1668, type: !2638)
!9681 = distinct !DILexicalBlock(scope: !9676, file: !3, line: 1667, column: 32)
!9682 = !DILocation(line: 1668, column: 12, scope: !9681)
!9683 = !DILocation(line: 1668, column: 16, scope: !9681)
!9684 = !DILocation(line: 1668, column: 23, scope: !9681)
!9685 = !DILocation(line: 1668, column: 31, scope: !9681)
!9686 = !DILocation(line: 1668, column: 34, scope: !9681)
!9687 = !DILocalVariable(name: "edgeData", scope: !9681, file: !3, line: 1669, type: !2371)
!9688 = !DILocation(line: 1669, column: 12, scope: !9681)
!9689 = !DILocation(line: 1669, column: 51, scope: !9681)
!9690 = !DILocation(line: 1669, column: 55, scope: !9681)
!9691 = !DILocation(line: 1669, column: 23, scope: !9681)
!9692 = !DILocation(line: 1671, column: 8, scope: !9693)
!9693 = distinct !DILexicalBlock(scope: !9681, file: !3, line: 1671, column: 7)
!9694 = !DILocation(line: 1671, column: 23, scope: !9693)
!9695 = !DILocation(line: 1671, column: 54, scope: !9693)
!9696 = !DILocation(line: 1671, column: 27, scope: !9693)
!9697 = !DILocation(line: 1671, column: 7, scope: !9681)
!9698 = !DILocation(line: 1672, column: 4, scope: !9693)
!9699 = !DILocation(line: 1674, column: 8, scope: !9700)
!9700 = distinct !DILexicalBlock(scope: !9681, file: !3, line: 1674, column: 7)
!9701 = !DILocation(line: 1674, column: 21, scope: !9700)
!9702 = !DILocation(line: 1674, column: 24, scope: !9700)
!9703 = !DILocation(line: 1674, column: 31, scope: !9700)
!9704 = !DILocation(line: 1674, column: 41, scope: !9700)
!9705 = !DILocation(line: 1674, column: 46, scope: !9700)
!9706 = !DILocation(line: 1674, column: 53, scope: !9700)
!9707 = !DILocation(line: 1674, column: 63, scope: !9700)
!9708 = !DILocation(line: 1674, column: 66, scope: !9700)
!9709 = !DILocation(line: 1674, column: 7, scope: !9681)
!9710 = !DILocation(line: 1675, column: 4, scope: !9700)
!9711 = !DILocation(line: 1677, column: 7, scope: !9712)
!9712 = distinct !DILexicalBlock(scope: !9681, file: !3, line: 1677, column: 7)
!9713 = !DILocation(line: 1677, column: 16, scope: !9712)
!9714 = !DILocation(line: 1677, column: 23, scope: !9712)
!9715 = !DILocation(line: 1677, column: 25, scope: !9712)
!9716 = !DILocation(line: 1677, column: 7, scope: !9681)
!9717 = !DILocalVariable(name: "ageCol", scope: !9718, file: !3, line: 1678, type: !27)
!9718 = distinct !DILexicalBlock(scope: !9712, file: !3, line: 1677, column: 42)
!9719 = !DILocation(line: 1678, column: 8, scope: !9718)
!9720 = !DILocation(line: 1678, column: 45, scope: !9718)
!9721 = !DILocation(line: 1678, column: 49, scope: !9718)
!9722 = !DILocation(line: 1678, column: 23, scope: !9718)
!9723 = !DILocation(line: 1678, column: 52, scope: !9718)
!9724 = !DILocation(line: 1678, column: 21, scope: !9718)
!9725 = !DILocation(line: 1679, column: 18, scope: !9718)
!9726 = !DILocation(line: 1679, column: 25, scope: !9718)
!9727 = !DILocation(line: 1679, column: 31, scope: !9718)
!9728 = !DILocation(line: 1679, column: 4, scope: !9718)
!9729 = !DILocation(line: 1680, column: 3, scope: !9718)
!9730 = !DILocation(line: 1682, column: 3, scope: !9681)
!9731 = !DILocation(line: 1683, column: 10, scope: !9732)
!9732 = distinct !DILexicalBlock(scope: !9681, file: !3, line: 1683, column: 3)
!9733 = !DILocation(line: 1683, column: 8, scope: !9732)
!9734 = !DILocation(line: 1683, column: 15, scope: !9735)
!9735 = distinct !DILexicalBlock(scope: !9732, file: !3, line: 1683, column: 3)
!9736 = !DILocation(line: 1683, column: 19, scope: !9735)
!9737 = !DILocation(line: 1683, column: 28, scope: !9735)
!9738 = !DILocation(line: 1683, column: 17, scope: !9735)
!9739 = !DILocation(line: 1683, column: 3, scope: !9732)
!9740 = !DILocation(line: 1684, column: 41, scope: !9741)
!9741 = distinct !DILexicalBlock(scope: !9735, file: !3, line: 1683, column: 38)
!9742 = !DILocation(line: 1684, column: 51, scope: !9741)
!9743 = !DILocation(line: 1684, column: 16, scope: !9741)
!9744 = !DILocation(line: 1684, column: 4, scope: !9741)
!9745 = !DILocation(line: 1685, column: 41, scope: !9741)
!9746 = !DILocation(line: 1685, column: 51, scope: !9741)
!9747 = !DILocation(line: 1685, column: 53, scope: !9741)
!9748 = !DILocation(line: 1685, column: 16, scope: !9741)
!9749 = !DILocation(line: 1685, column: 4, scope: !9741)
!9750 = !DILocation(line: 1686, column: 3, scope: !9741)
!9751 = !DILocation(line: 1683, column: 34, scope: !9735)
!9752 = !DILocation(line: 1683, column: 3, scope: !9735)
!9753 = distinct !{!9753, !9739, !9754}
!9754 = !DILocation(line: 1686, column: 3, scope: !9732)
!9755 = !DILocation(line: 1687, column: 3, scope: !9681)
!9756 = !DILocation(line: 1688, column: 2, scope: !9681)
!9757 = !DILocation(line: 1667, column: 28, scope: !9676)
!9758 = !DILocation(line: 1667, column: 2, scope: !9676)
!9759 = distinct !{!9759, !9679, !9760}
!9760 = !DILocation(line: 1688, column: 2, scope: !9673)
!9761 = !DILocation(line: 1690, column: 6, scope: !9762)
!9762 = distinct !DILexicalBlock(scope: !9631, file: !3, line: 1690, column: 6)
!9763 = !DILocation(line: 1690, column: 15, scope: !9762)
!9764 = !DILocation(line: 1690, column: 22, scope: !9762)
!9765 = !DILocation(line: 1690, column: 24, scope: !9762)
!9766 = !DILocation(line: 1690, column: 6, scope: !9631)
!9767 = !DILocation(line: 1691, column: 3, scope: !9768)
!9768 = distinct !DILexicalBlock(scope: !9762, file: !3, line: 1690, column: 41)
!9769 = !DILocation(line: 1692, column: 2, scope: !9768)
!9770 = !DILocation(line: 1694, column: 6, scope: !9771)
!9771 = distinct !DILexicalBlock(scope: !9631, file: !3, line: 1694, column: 6)
!9772 = !DILocation(line: 1694, column: 13, scope: !9771)
!9773 = !DILocation(line: 1694, column: 6, scope: !9631)
!9774 = !DILocalVariable(name: "totface", scope: !9775, file: !3, line: 1695, type: !27)
!9775 = distinct !DILexicalBlock(scope: !9771, file: !3, line: 1694, column: 32)
!9776 = !DILocation(line: 1695, column: 7, scope: !9775)
!9777 = !DILocation(line: 1695, column: 40, scope: !9775)
!9778 = !DILocation(line: 1695, column: 17, scope: !9775)
!9779 = !DILocation(line: 1697, column: 10, scope: !9780)
!9780 = distinct !DILexicalBlock(scope: !9775, file: !3, line: 1697, column: 3)
!9781 = !DILocation(line: 1697, column: 8, scope: !9780)
!9782 = !DILocation(line: 1697, column: 15, scope: !9783)
!9783 = distinct !DILexicalBlock(scope: !9780, file: !3, line: 1697, column: 3)
!9784 = !DILocation(line: 1697, column: 19, scope: !9783)
!9785 = !DILocation(line: 1697, column: 17, scope: !9783)
!9786 = !DILocation(line: 1697, column: 3, scope: !9780)
!9787 = !DILocalVariable(name: "f", scope: !9788, file: !3, line: 1698, type: !2461)
!9788 = distinct !DILexicalBlock(scope: !9783, file: !3, line: 1697, column: 33)
!9789 = !DILocation(line: 1698, column: 13, scope: !9788)
!9790 = !DILocation(line: 1698, column: 17, scope: !9788)
!9791 = !DILocation(line: 1698, column: 24, scope: !9788)
!9792 = !DILocation(line: 1698, column: 32, scope: !9788)
!9793 = !DILocation(line: 1698, column: 35, scope: !9788)
!9794 = !DILocalVariable(name: "S", scope: !9788, file: !3, line: 1699, type: !27)
!9795 = !DILocation(line: 1699, column: 8, scope: !9788)
!9796 = !DILocalVariable(name: "x", scope: !9788, file: !3, line: 1699, type: !27)
!9797 = !DILocation(line: 1699, column: 11, scope: !9788)
!9798 = !DILocalVariable(name: "y", scope: !9788, file: !3, line: 1699, type: !27)
!9799 = !DILocation(line: 1699, column: 14, scope: !9788)
!9800 = !DILocalVariable(name: "numVerts", scope: !9788, file: !3, line: 1699, type: !27)
!9801 = !DILocation(line: 1699, column: 17, scope: !9788)
!9802 = !DILocation(line: 1699, column: 55, scope: !9788)
!9803 = !DILocation(line: 1699, column: 28, scope: !9788)
!9804 = !DILocation(line: 1701, column: 11, scope: !9805)
!9805 = distinct !DILexicalBlock(scope: !9788, file: !3, line: 1701, column: 4)
!9806 = !DILocation(line: 1701, column: 9, scope: !9805)
!9807 = !DILocation(line: 1701, column: 16, scope: !9808)
!9808 = distinct !DILexicalBlock(scope: !9805, file: !3, line: 1701, column: 4)
!9809 = !DILocation(line: 1701, column: 20, scope: !9808)
!9810 = !DILocation(line: 1701, column: 18, scope: !9808)
!9811 = !DILocation(line: 1701, column: 4, scope: !9805)
!9812 = !DILocalVariable(name: "faceGridData", scope: !9813, file: !3, line: 1702, type: !2371)
!9813 = distinct !DILexicalBlock(scope: !9808, file: !3, line: 1701, column: 35)
!9814 = !DILocation(line: 1702, column: 14, scope: !9813)
!9815 = !DILocation(line: 1702, column: 61, scope: !9813)
!9816 = !DILocation(line: 1702, column: 65, scope: !9813)
!9817 = !DILocation(line: 1702, column: 68, scope: !9813)
!9818 = !DILocation(line: 1702, column: 29, scope: !9813)
!9819 = !DILocation(line: 1704, column: 5, scope: !9813)
!9820 = !DILocation(line: 1705, column: 12, scope: !9821)
!9821 = distinct !DILexicalBlock(scope: !9813, file: !3, line: 1705, column: 5)
!9822 = !DILocation(line: 1705, column: 10, scope: !9821)
!9823 = !DILocation(line: 1705, column: 17, scope: !9824)
!9824 = distinct !DILexicalBlock(scope: !9821, file: !3, line: 1705, column: 5)
!9825 = !DILocation(line: 1705, column: 21, scope: !9824)
!9826 = !DILocation(line: 1705, column: 19, scope: !9824)
!9827 = !DILocation(line: 1705, column: 5, scope: !9821)
!9828 = !DILocation(line: 1706, column: 43, scope: !9824)
!9829 = !DILocation(line: 1706, column: 57, scope: !9824)
!9830 = !DILocation(line: 1706, column: 18, scope: !9824)
!9831 = !DILocation(line: 1706, column: 6, scope: !9824)
!9832 = !DILocation(line: 1705, column: 32, scope: !9824)
!9833 = !DILocation(line: 1705, column: 5, scope: !9824)
!9834 = distinct !{!9834, !9827, !9835}
!9835 = !DILocation(line: 1706, column: 59, scope: !9821)
!9836 = !DILocation(line: 1707, column: 5, scope: !9813)
!9837 = !DILocation(line: 1708, column: 12, scope: !9838)
!9838 = distinct !DILexicalBlock(scope: !9813, file: !3, line: 1708, column: 5)
!9839 = !DILocation(line: 1708, column: 10, scope: !9838)
!9840 = !DILocation(line: 1708, column: 17, scope: !9841)
!9841 = distinct !DILexicalBlock(scope: !9838, file: !3, line: 1708, column: 5)
!9842 = !DILocation(line: 1708, column: 21, scope: !9841)
!9843 = !DILocation(line: 1708, column: 30, scope: !9841)
!9844 = !DILocation(line: 1708, column: 19, scope: !9841)
!9845 = !DILocation(line: 1708, column: 5, scope: !9838)
!9846 = !DILocation(line: 1709, column: 6, scope: !9847)
!9847 = distinct !DILexicalBlock(scope: !9841, file: !3, line: 1708, column: 40)
!9848 = !DILocation(line: 1710, column: 13, scope: !9849)
!9849 = distinct !DILexicalBlock(scope: !9847, file: !3, line: 1710, column: 6)
!9850 = !DILocation(line: 1710, column: 11, scope: !9849)
!9851 = !DILocation(line: 1710, column: 18, scope: !9852)
!9852 = distinct !DILexicalBlock(scope: !9849, file: !3, line: 1710, column: 6)
!9853 = !DILocation(line: 1710, column: 22, scope: !9852)
!9854 = !DILocation(line: 1710, column: 20, scope: !9852)
!9855 = !DILocation(line: 1710, column: 6, scope: !9849)
!9856 = !DILocation(line: 1711, column: 42, scope: !9852)
!9857 = !DILocation(line: 1711, column: 56, scope: !9852)
!9858 = !DILocation(line: 1711, column: 59, scope: !9852)
!9859 = !DILocation(line: 1711, column: 19, scope: !9852)
!9860 = !DILocation(line: 1711, column: 7, scope: !9852)
!9861 = !DILocation(line: 1710, column: 33, scope: !9852)
!9862 = !DILocation(line: 1710, column: 6, scope: !9852)
!9863 = distinct !{!9863, !9855, !9864}
!9864 = !DILocation(line: 1711, column: 61, scope: !9849)
!9865 = !DILocation(line: 1712, column: 6, scope: !9847)
!9866 = !DILocation(line: 1713, column: 5, scope: !9847)
!9867 = !DILocation(line: 1708, column: 36, scope: !9841)
!9868 = !DILocation(line: 1708, column: 5, scope: !9841)
!9869 = distinct !{!9869, !9845, !9870}
!9870 = !DILocation(line: 1713, column: 5, scope: !9838)
!9871 = !DILocation(line: 1714, column: 12, scope: !9872)
!9872 = distinct !DILexicalBlock(scope: !9813, file: !3, line: 1714, column: 5)
!9873 = !DILocation(line: 1714, column: 10, scope: !9872)
!9874 = !DILocation(line: 1714, column: 17, scope: !9875)
!9875 = distinct !DILexicalBlock(scope: !9872, file: !3, line: 1714, column: 5)
!9876 = !DILocation(line: 1714, column: 21, scope: !9875)
!9877 = !DILocation(line: 1714, column: 30, scope: !9875)
!9878 = !DILocation(line: 1714, column: 19, scope: !9875)
!9879 = !DILocation(line: 1714, column: 5, scope: !9872)
!9880 = !DILocation(line: 1715, column: 6, scope: !9881)
!9881 = distinct !DILexicalBlock(scope: !9875, file: !3, line: 1714, column: 40)
!9882 = !DILocation(line: 1716, column: 13, scope: !9883)
!9883 = distinct !DILexicalBlock(scope: !9881, file: !3, line: 1716, column: 6)
!9884 = !DILocation(line: 1716, column: 11, scope: !9883)
!9885 = !DILocation(line: 1716, column: 18, scope: !9886)
!9886 = distinct !DILexicalBlock(scope: !9883, file: !3, line: 1716, column: 6)
!9887 = !DILocation(line: 1716, column: 22, scope: !9886)
!9888 = !DILocation(line: 1716, column: 20, scope: !9886)
!9889 = !DILocation(line: 1716, column: 6, scope: !9883)
!9890 = !DILocation(line: 1717, column: 42, scope: !9886)
!9891 = !DILocation(line: 1717, column: 56, scope: !9886)
!9892 = !DILocation(line: 1717, column: 59, scope: !9886)
!9893 = !DILocation(line: 1717, column: 19, scope: !9886)
!9894 = !DILocation(line: 1717, column: 7, scope: !9886)
!9895 = !DILocation(line: 1716, column: 33, scope: !9886)
!9896 = !DILocation(line: 1716, column: 6, scope: !9886)
!9897 = distinct !{!9897, !9889, !9898}
!9898 = !DILocation(line: 1717, column: 61, scope: !9883)
!9899 = !DILocation(line: 1718, column: 6, scope: !9881)
!9900 = !DILocation(line: 1719, column: 5, scope: !9881)
!9901 = !DILocation(line: 1714, column: 36, scope: !9875)
!9902 = !DILocation(line: 1714, column: 5, scope: !9875)
!9903 = distinct !{!9903, !9879, !9904}
!9904 = !DILocation(line: 1719, column: 5, scope: !9872)
!9905 = !DILocation(line: 1720, column: 4, scope: !9813)
!9906 = !DILocation(line: 1701, column: 31, scope: !9808)
!9907 = !DILocation(line: 1701, column: 4, scope: !9808)
!9908 = distinct !{!9908, !9811, !9909}
!9909 = !DILocation(line: 1720, column: 4, scope: !9805)
!9910 = !DILocation(line: 1721, column: 3, scope: !9788)
!9911 = !DILocation(line: 1697, column: 29, scope: !9783)
!9912 = !DILocation(line: 1697, column: 3, scope: !9783)
!9913 = distinct !{!9913, !9786, !9914}
!9914 = !DILocation(line: 1721, column: 3, scope: !9780)
!9915 = !DILocation(line: 1722, column: 2, scope: !9775)
!9916 = !DILocation(line: 1723, column: 1, scope: !9631)
!9917 = distinct !DISubprogram(name: "ccgDM_drawLooseEdges", scope: !3, file: !3, line: 1725, type: !1858, scopeLine: 1726, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!9918 = !DILocalVariable(name: "dm", arg: 1, scope: !9917, file: !3, line: 1725, type: !11)
!9919 = !DILocation(line: 1725, column: 47, scope: !9917)
!9920 = !DILocalVariable(name: "ccgdm", scope: !9917, file: !3, line: 1727, type: !2295)
!9921 = !DILocation(line: 1727, column: 18, scope: !9917)
!9922 = !DILocation(line: 1727, column: 45, scope: !9917)
!9923 = !DILocation(line: 1727, column: 26, scope: !9917)
!9924 = !DILocalVariable(name: "ss", scope: !9917, file: !3, line: 1728, type: !6)
!9925 = !DILocation(line: 1728, column: 14, scope: !9917)
!9926 = !DILocation(line: 1728, column: 19, scope: !9917)
!9927 = !DILocation(line: 1728, column: 26, scope: !9917)
!9928 = !DILocalVariable(name: "key", scope: !9917, file: !3, line: 1729, type: !5667)
!9929 = !DILocation(line: 1729, column: 9, scope: !9917)
!9930 = !DILocalVariable(name: "totedge", scope: !9917, file: !3, line: 1730, type: !27)
!9931 = !DILocation(line: 1730, column: 6, scope: !9917)
!9932 = !DILocation(line: 1730, column: 39, scope: !9917)
!9933 = !DILocation(line: 1730, column: 16, scope: !9917)
!9934 = !DILocalVariable(name: "i", scope: !9917, file: !3, line: 1731, type: !27)
!9935 = !DILocation(line: 1731, column: 6, scope: !9917)
!9936 = !DILocalVariable(name: "j", scope: !9917, file: !3, line: 1731, type: !27)
!9937 = !DILocation(line: 1731, column: 9, scope: !9917)
!9938 = !DILocalVariable(name: "edgeSize", scope: !9917, file: !3, line: 1731, type: !27)
!9939 = !DILocation(line: 1731, column: 12, scope: !9917)
!9940 = !DILocation(line: 1731, column: 46, scope: !9917)
!9941 = !DILocation(line: 1731, column: 23, scope: !9917)
!9942 = !DILocation(line: 1733, column: 26, scope: !9917)
!9943 = !DILocation(line: 1733, column: 2, scope: !9917)
!9944 = !DILocation(line: 1735, column: 9, scope: !9945)
!9945 = distinct !DILexicalBlock(scope: !9917, file: !3, line: 1735, column: 2)
!9946 = !DILocation(line: 1735, column: 7, scope: !9945)
!9947 = !DILocation(line: 1735, column: 14, scope: !9948)
!9948 = distinct !DILexicalBlock(scope: !9945, file: !3, line: 1735, column: 2)
!9949 = !DILocation(line: 1735, column: 18, scope: !9948)
!9950 = !DILocation(line: 1735, column: 16, scope: !9948)
!9951 = !DILocation(line: 1735, column: 2, scope: !9945)
!9952 = !DILocalVariable(name: "e", scope: !9953, file: !3, line: 1736, type: !2638)
!9953 = distinct !DILexicalBlock(scope: !9948, file: !3, line: 1735, column: 32)
!9954 = !DILocation(line: 1736, column: 12, scope: !9953)
!9955 = !DILocation(line: 1736, column: 16, scope: !9953)
!9956 = !DILocation(line: 1736, column: 23, scope: !9953)
!9957 = !DILocation(line: 1736, column: 31, scope: !9953)
!9958 = !DILocation(line: 1736, column: 34, scope: !9953)
!9959 = !DILocalVariable(name: "edgeData", scope: !9953, file: !3, line: 1737, type: !2371)
!9960 = !DILocation(line: 1737, column: 12, scope: !9953)
!9961 = !DILocation(line: 1737, column: 51, scope: !9953)
!9962 = !DILocation(line: 1737, column: 55, scope: !9953)
!9963 = !DILocation(line: 1737, column: 23, scope: !9953)
!9964 = !DILocation(line: 1739, column: 35, scope: !9965)
!9965 = distinct !DILexicalBlock(scope: !9953, file: !3, line: 1739, column: 7)
!9966 = !DILocation(line: 1739, column: 8, scope: !9965)
!9967 = !DILocation(line: 1739, column: 7, scope: !9953)
!9968 = !DILocation(line: 1740, column: 4, scope: !9969)
!9969 = distinct !DILexicalBlock(scope: !9965, file: !3, line: 1739, column: 39)
!9970 = !DILocation(line: 1741, column: 11, scope: !9971)
!9971 = distinct !DILexicalBlock(scope: !9969, file: !3, line: 1741, column: 4)
!9972 = !DILocation(line: 1741, column: 9, scope: !9971)
!9973 = !DILocation(line: 1741, column: 16, scope: !9974)
!9974 = distinct !DILexicalBlock(scope: !9971, file: !3, line: 1741, column: 4)
!9975 = !DILocation(line: 1741, column: 20, scope: !9974)
!9976 = !DILocation(line: 1741, column: 29, scope: !9974)
!9977 = !DILocation(line: 1741, column: 18, scope: !9974)
!9978 = !DILocation(line: 1741, column: 4, scope: !9971)
!9979 = !DILocation(line: 1742, column: 42, scope: !9980)
!9980 = distinct !DILexicalBlock(scope: !9974, file: !3, line: 1741, column: 39)
!9981 = !DILocation(line: 1742, column: 52, scope: !9980)
!9982 = !DILocation(line: 1742, column: 17, scope: !9980)
!9983 = !DILocation(line: 1742, column: 5, scope: !9980)
!9984 = !DILocation(line: 1743, column: 42, scope: !9980)
!9985 = !DILocation(line: 1743, column: 52, scope: !9980)
!9986 = !DILocation(line: 1743, column: 54, scope: !9980)
!9987 = !DILocation(line: 1743, column: 17, scope: !9980)
!9988 = !DILocation(line: 1743, column: 5, scope: !9980)
!9989 = !DILocation(line: 1744, column: 4, scope: !9980)
!9990 = !DILocation(line: 1741, column: 35, scope: !9974)
!9991 = !DILocation(line: 1741, column: 4, scope: !9974)
!9992 = distinct !{!9992, !9978, !9993}
!9993 = !DILocation(line: 1744, column: 4, scope: !9971)
!9994 = !DILocation(line: 1745, column: 4, scope: !9969)
!9995 = !DILocation(line: 1746, column: 3, scope: !9969)
!9996 = !DILocation(line: 1747, column: 2, scope: !9953)
!9997 = !DILocation(line: 1735, column: 28, scope: !9948)
!9998 = !DILocation(line: 1735, column: 2, scope: !9948)
!9999 = distinct !{!9999, !9951, !10000}
!10000 = !DILocation(line: 1747, column: 2, scope: !9945)
!10001 = !DILocation(line: 1748, column: 1, scope: !9917)
!10002 = distinct !DISubprogram(name: "ccgDM_drawFacesSolid", scope: !3, file: !3, line: 1765, type: !2099, scopeLine: 1766, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!10003 = !DILocalVariable(name: "dm", arg: 1, scope: !10002, file: !3, line: 1765, type: !11)
!10004 = !DILocation(line: 1765, column: 47, scope: !10002)
!10005 = !DILocalVariable(name: "partial_redraw_planes", arg: 2, scope: !10002, file: !3, line: 1765, type: !2101)
!10006 = !DILocation(line: 1765, column: 59, scope: !10002)
!10007 = !DILocalVariable(name: "fast", arg: 3, scope: !10002, file: !3, line: 1765, type: !673)
!10008 = !DILocation(line: 1765, column: 91, scope: !10002)
!10009 = !DILocalVariable(name: "setMaterial", arg: 4, scope: !10002, file: !3, line: 1765, type: !2102)
!10010 = !DILocation(line: 1765, column: 111, scope: !10002)
!10011 = !DILocalVariable(name: "ccgdm", scope: !10002, file: !3, line: 1767, type: !2295)
!10012 = !DILocation(line: 1767, column: 18, scope: !10002)
!10013 = !DILocation(line: 1767, column: 45, scope: !10002)
!10014 = !DILocation(line: 1767, column: 26, scope: !10002)
!10015 = !DILocalVariable(name: "ss", scope: !10002, file: !3, line: 1768, type: !6)
!10016 = !DILocation(line: 1768, column: 14, scope: !10002)
!10017 = !DILocation(line: 1768, column: 19, scope: !10002)
!10018 = !DILocation(line: 1768, column: 26, scope: !10002)
!10019 = !DILocalVariable(name: "key", scope: !10002, file: !3, line: 1769, type: !5667)
!10020 = !DILocation(line: 1769, column: 9, scope: !10002)
!10021 = !DILocalVariable(name: "lnors", scope: !10002, file: !3, line: 1770, type: !10022)
!10022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10023, size: 64)
!10023 = !DICompositeType(tag: DW_TAG_array_type, baseType: !135, size: 192, elements: !10024)
!10024 = !{!288, !206}
!10025 = !DILocation(line: 1770, column: 10, scope: !10002)
!10026 = !DILocation(line: 1770, column: 25, scope: !10002)
!10027 = !DILocation(line: 1770, column: 29, scope: !10002)
!10028 = !DILocation(line: 1770, column: 50, scope: !10002)
!10029 = !DILocalVariable(name: "gridSize", scope: !10002, file: !3, line: 1771, type: !27)
!10030 = !DILocation(line: 1771, column: 6, scope: !10002)
!10031 = !DILocation(line: 1771, column: 40, scope: !10002)
!10032 = !DILocation(line: 1771, column: 17, scope: !10002)
!10033 = !DILocalVariable(name: "gridFaces", scope: !10002, file: !3, line: 1772, type: !27)
!10034 = !DILocation(line: 1772, column: 6, scope: !10002)
!10035 = !DILocation(line: 1772, column: 18, scope: !10002)
!10036 = !DILocation(line: 1772, column: 27, scope: !10002)
!10037 = !DILocalVariable(name: "faceFlags", scope: !10002, file: !3, line: 1773, type: !2024)
!10038 = !DILocation(line: 1773, column: 13, scope: !10002)
!10039 = !DILocation(line: 1773, column: 25, scope: !10002)
!10040 = !DILocation(line: 1773, column: 32, scope: !10002)
!10041 = !DILocalVariable(name: "step", scope: !10002, file: !3, line: 1774, type: !27)
!10042 = !DILocation(line: 1774, column: 6, scope: !10002)
!10043 = !DILocation(line: 1774, column: 14, scope: !10002)
!10044 = !DILocation(line: 1774, column: 13, scope: !10002)
!10045 = !DILocation(line: 1774, column: 22, scope: !10002)
!10046 = !DILocation(line: 1774, column: 31, scope: !10002)
!10047 = !DILocalVariable(name: "i", scope: !10002, file: !3, line: 1775, type: !27)
!10048 = !DILocation(line: 1775, column: 6, scope: !10002)
!10049 = !DILocalVariable(name: "totface", scope: !10002, file: !3, line: 1775, type: !27)
!10050 = !DILocation(line: 1775, column: 9, scope: !10002)
!10051 = !DILocation(line: 1775, column: 42, scope: !10002)
!10052 = !DILocation(line: 1775, column: 19, scope: !10002)
!10053 = !DILocalVariable(name: "drawcurrent", scope: !10002, file: !3, line: 1776, type: !27)
!10054 = !DILocation(line: 1776, column: 6, scope: !10002)
!10055 = !DILocalVariable(name: "matnr", scope: !10002, file: !3, line: 1776, type: !27)
!10056 = !DILocation(line: 1776, column: 23, scope: !10002)
!10057 = !DILocalVariable(name: "shademodel", scope: !10002, file: !3, line: 1776, type: !27)
!10058 = !DILocation(line: 1776, column: 35, scope: !10002)
!10059 = !DILocation(line: 1778, column: 26, scope: !10002)
!10060 = !DILocation(line: 1778, column: 2, scope: !10002)
!10061 = !DILocation(line: 1779, column: 20, scope: !10002)
!10062 = !DILocation(line: 1779, column: 2, scope: !10002)
!10063 = !DILocation(line: 1781, column: 6, scope: !10064)
!10064 = distinct !DILexicalBlock(scope: !10002, file: !3, line: 1781, column: 6)
!10065 = !DILocation(line: 1781, column: 13, scope: !10064)
!10066 = !DILocation(line: 1781, column: 18, scope: !10064)
!10067 = !DILocation(line: 1781, column: 21, scope: !10064)
!10068 = !DILocation(line: 1781, column: 28, scope: !10064)
!10069 = !DILocation(line: 1781, column: 37, scope: !10064)
!10070 = !DILocation(line: 1781, column: 41, scope: !10064)
!10071 = !DILocation(line: 1781, column: 45, scope: !10064)
!10072 = !DILocation(line: 1781, column: 6, scope: !10002)
!10073 = !DILocation(line: 1782, column: 7, scope: !10074)
!10074 = distinct !DILexicalBlock(scope: !10075, file: !3, line: 1782, column: 7)
!10075 = distinct !DILexicalBlock(scope: !10064, file: !3, line: 1781, column: 51)
!10076 = !DILocation(line: 1782, column: 11, scope: !10074)
!10077 = !DILocation(line: 1782, column: 7, scope: !10075)
!10078 = !DILocation(line: 1783, column: 18, scope: !10079)
!10079 = distinct !DILexicalBlock(scope: !10074, file: !3, line: 1782, column: 28)
!10080 = !DILocation(line: 1783, column: 25, scope: !10079)
!10081 = !DILocation(line: 1783, column: 31, scope: !10079)
!10082 = !DILocation(line: 1784, column: 18, scope: !10079)
!10083 = !DILocation(line: 1783, column: 4, scope: !10079)
!10084 = !DILocation(line: 1785, column: 4, scope: !10079)
!10085 = !DILocation(line: 1786, column: 3, scope: !10079)
!10086 = !DILocation(line: 1788, column: 3, scope: !10075)
!10087 = !DILocation(line: 1791, column: 9, scope: !10088)
!10088 = distinct !DILexicalBlock(scope: !10002, file: !3, line: 1791, column: 2)
!10089 = !DILocation(line: 1791, column: 7, scope: !10088)
!10090 = !DILocation(line: 1791, column: 14, scope: !10091)
!10091 = distinct !DILexicalBlock(scope: !10088, file: !3, line: 1791, column: 2)
!10092 = !DILocation(line: 1791, column: 18, scope: !10091)
!10093 = !DILocation(line: 1791, column: 16, scope: !10091)
!10094 = !DILocation(line: 1791, column: 2, scope: !10088)
!10095 = !DILocalVariable(name: "f", scope: !10096, file: !3, line: 1792, type: !2461)
!10096 = distinct !DILexicalBlock(scope: !10091, file: !3, line: 1791, column: 32)
!10097 = !DILocation(line: 1792, column: 12, scope: !10096)
!10098 = !DILocation(line: 1792, column: 16, scope: !10096)
!10099 = !DILocation(line: 1792, column: 23, scope: !10096)
!10100 = !DILocation(line: 1792, column: 31, scope: !10096)
!10101 = !DILocation(line: 1792, column: 34, scope: !10096)
!10102 = !DILocalVariable(name: "S", scope: !10096, file: !3, line: 1793, type: !27)
!10103 = !DILocation(line: 1793, column: 7, scope: !10096)
!10104 = !DILocalVariable(name: "x", scope: !10096, file: !3, line: 1793, type: !27)
!10105 = !DILocation(line: 1793, column: 10, scope: !10096)
!10106 = !DILocalVariable(name: "y", scope: !10096, file: !3, line: 1793, type: !27)
!10107 = !DILocation(line: 1793, column: 13, scope: !10096)
!10108 = !DILocalVariable(name: "numVerts", scope: !10096, file: !3, line: 1793, type: !27)
!10109 = !DILocation(line: 1793, column: 16, scope: !10096)
!10110 = !DILocation(line: 1793, column: 54, scope: !10096)
!10111 = !DILocation(line: 1793, column: 27, scope: !10096)
!10112 = !DILocalVariable(name: "index", scope: !10096, file: !3, line: 1794, type: !27)
!10113 = !DILocation(line: 1794, column: 7, scope: !10096)
!10114 = !DILocation(line: 1794, column: 15, scope: !10096)
!10115 = !DILocalVariable(name: "new_matnr", scope: !10096, file: !3, line: 1795, type: !27)
!10116 = !DILocation(line: 1795, column: 7, scope: !10096)
!10117 = !DILocalVariable(name: "new_shademodel", scope: !10096, file: !3, line: 1795, type: !27)
!10118 = !DILocation(line: 1795, column: 18, scope: !10096)
!10119 = !DILocalVariable(name: "ln", scope: !10096, file: !3, line: 1796, type: !10022)
!10120 = !DILocation(line: 1796, column: 11, scope: !10096)
!10121 = !DILocation(line: 1798, column: 7, scope: !10122)
!10122 = distinct !DILexicalBlock(scope: !10096, file: !3, line: 1798, column: 7)
!10123 = !DILocation(line: 1798, column: 7, scope: !10096)
!10124 = !DILocation(line: 1799, column: 22, scope: !10125)
!10125 = distinct !DILexicalBlock(scope: !10122, file: !3, line: 1798, column: 18)
!10126 = !DILocation(line: 1799, column: 28, scope: !10125)
!10127 = !DILocation(line: 1799, column: 32, scope: !10125)
!10128 = !DILocation(line: 1799, column: 42, scope: !10125)
!10129 = !DILocation(line: 1799, column: 49, scope: !10125)
!10130 = !DILocation(line: 1799, column: 54, scope: !10125)
!10131 = !DILocation(line: 1799, column: 21, scope: !10125)
!10132 = !DILocation(line: 1799, column: 19, scope: !10125)
!10133 = !DILocation(line: 1800, column: 16, scope: !10125)
!10134 = !DILocation(line: 1800, column: 26, scope: !10125)
!10135 = !DILocation(line: 1800, column: 33, scope: !10125)
!10136 = !DILocation(line: 1800, column: 14, scope: !10125)
!10137 = !DILocation(line: 1801, column: 3, scope: !10125)
!10138 = !DILocation(line: 1803, column: 19, scope: !10139)
!10139 = distinct !DILexicalBlock(scope: !10122, file: !3, line: 1802, column: 8)
!10140 = !DILocation(line: 1804, column: 14, scope: !10139)
!10141 = !DILocation(line: 1807, column: 7, scope: !10142)
!10142 = distinct !DILexicalBlock(scope: !10096, file: !3, line: 1807, column: 7)
!10143 = !DILocation(line: 1807, column: 7, scope: !10096)
!10144 = !DILocation(line: 1808, column: 9, scope: !10145)
!10145 = distinct !DILexicalBlock(scope: !10142, file: !3, line: 1807, column: 14)
!10146 = !DILocation(line: 1808, column: 7, scope: !10145)
!10147 = !DILocation(line: 1809, column: 13, scope: !10145)
!10148 = !DILocation(line: 1809, column: 25, scope: !10145)
!10149 = !DILocation(line: 1809, column: 23, scope: !10145)
!10150 = !DILocation(line: 1809, column: 37, scope: !10145)
!10151 = !DILocation(line: 1809, column: 35, scope: !10145)
!10152 = !DILocation(line: 1809, column: 10, scope: !10145)
!10153 = !DILocation(line: 1810, column: 3, scope: !10145)
!10154 = !DILocation(line: 1812, column: 7, scope: !10155)
!10155 = distinct !DILexicalBlock(scope: !10096, file: !3, line: 1812, column: 7)
!10156 = !DILocation(line: 1812, column: 21, scope: !10155)
!10157 = !DILocation(line: 1812, column: 18, scope: !10155)
!10158 = !DILocation(line: 1812, column: 36, scope: !10155)
!10159 = !DILocation(line: 1812, column: 39, scope: !10155)
!10160 = !DILocation(line: 1812, column: 48, scope: !10155)
!10161 = !DILocation(line: 1812, column: 45, scope: !10155)
!10162 = !DILocation(line: 1812, column: 7, scope: !10096)
!10163 = !DILocation(line: 1813, column: 12, scope: !10164)
!10164 = distinct !DILexicalBlock(scope: !10155, file: !3, line: 1812, column: 59)
!10165 = !DILocation(line: 1813, column: 10, scope: !10164)
!10166 = !DILocation(line: 1814, column: 17, scope: !10164)
!10167 = !DILocation(line: 1814, column: 15, scope: !10164)
!10168 = !DILocation(line: 1816, column: 8, scope: !10169)
!10169 = distinct !DILexicalBlock(scope: !10164, file: !3, line: 1816, column: 8)
!10170 = !DILocation(line: 1816, column: 8, scope: !10164)
!10171 = !DILocation(line: 1817, column: 19, scope: !10169)
!10172 = !DILocation(line: 1817, column: 31, scope: !10169)
!10173 = !DILocation(line: 1817, column: 37, scope: !10169)
!10174 = !DILocation(line: 1817, column: 17, scope: !10169)
!10175 = !DILocation(line: 1817, column: 5, scope: !10169)
!10176 = !DILocation(line: 1819, column: 17, scope: !10169)
!10177 = !DILocation(line: 1821, column: 17, scope: !10164)
!10178 = !DILocation(line: 1821, column: 4, scope: !10164)
!10179 = !DILocation(line: 1822, column: 3, scope: !10164)
!10180 = !DILocation(line: 1824, column: 8, scope: !10181)
!10181 = distinct !DILexicalBlock(scope: !10096, file: !3, line: 1824, column: 7)
!10182 = !DILocation(line: 1824, column: 7, scope: !10096)
!10183 = !DILocation(line: 1825, column: 4, scope: !10181)
!10184 = !DILocation(line: 1827, column: 10, scope: !10185)
!10185 = distinct !DILexicalBlock(scope: !10096, file: !3, line: 1827, column: 3)
!10186 = !DILocation(line: 1827, column: 8, scope: !10185)
!10187 = !DILocation(line: 1827, column: 15, scope: !10188)
!10188 = distinct !DILexicalBlock(scope: !10185, file: !3, line: 1827, column: 3)
!10189 = !DILocation(line: 1827, column: 19, scope: !10188)
!10190 = !DILocation(line: 1827, column: 17, scope: !10188)
!10191 = !DILocation(line: 1827, column: 3, scope: !10185)
!10192 = !DILocalVariable(name: "faceGridData", scope: !10193, file: !3, line: 1828, type: !2371)
!10193 = distinct !DILexicalBlock(scope: !10188, file: !3, line: 1827, column: 34)
!10194 = !DILocation(line: 1828, column: 13, scope: !10193)
!10195 = !DILocation(line: 1828, column: 60, scope: !10193)
!10196 = !DILocation(line: 1828, column: 64, scope: !10193)
!10197 = !DILocation(line: 1828, column: 67, scope: !10193)
!10198 = !DILocation(line: 1828, column: 28, scope: !10193)
!10199 = !DILocation(line: 1830, column: 8, scope: !10200)
!10200 = distinct !DILexicalBlock(scope: !10193, file: !3, line: 1830, column: 8)
!10201 = !DILocation(line: 1830, column: 8, scope: !10193)
!10202 = !DILocation(line: 1832, column: 5, scope: !10203)
!10203 = distinct !DILexicalBlock(scope: !10200, file: !3, line: 1830, column: 12)
!10204 = !DILocation(line: 1833, column: 12, scope: !10205)
!10205 = distinct !DILexicalBlock(scope: !10203, file: !3, line: 1833, column: 5)
!10206 = !DILocation(line: 1833, column: 10, scope: !10205)
!10207 = !DILocation(line: 1833, column: 17, scope: !10208)
!10208 = distinct !DILexicalBlock(scope: !10205, file: !3, line: 1833, column: 5)
!10209 = !DILocation(line: 1833, column: 21, scope: !10208)
!10210 = !DILocation(line: 1833, column: 19, scope: !10208)
!10211 = !DILocation(line: 1833, column: 5, scope: !10205)
!10212 = !DILocation(line: 1834, column: 13, scope: !10213)
!10213 = distinct !DILexicalBlock(scope: !10214, file: !3, line: 1834, column: 6)
!10214 = distinct !DILexicalBlock(scope: !10208, file: !3, line: 1833, column: 43)
!10215 = !DILocation(line: 1834, column: 11, scope: !10213)
!10216 = !DILocation(line: 1834, column: 18, scope: !10217)
!10217 = distinct !DILexicalBlock(scope: !10213, file: !3, line: 1834, column: 6)
!10218 = !DILocation(line: 1834, column: 22, scope: !10217)
!10219 = !DILocation(line: 1834, column: 20, scope: !10217)
!10220 = !DILocation(line: 1834, column: 6, scope: !10213)
!10221 = !DILocalVariable(name: "a", scope: !10222, file: !3, line: 1835, type: !1306)
!10222 = distinct !DILexicalBlock(scope: !10217, file: !3, line: 1834, column: 44)
!10223 = !DILocation(line: 1835, column: 14, scope: !10222)
!10224 = !DILocation(line: 1835, column: 41, scope: !10222)
!10225 = !DILocation(line: 1835, column: 55, scope: !10222)
!10226 = !DILocation(line: 1835, column: 58, scope: !10222)
!10227 = !DILocation(line: 1835, column: 60, scope: !10222)
!10228 = !DILocation(line: 1835, column: 18, scope: !10222)
!10229 = !DILocalVariable(name: "b", scope: !10222, file: !3, line: 1836, type: !1306)
!10230 = !DILocation(line: 1836, column: 14, scope: !10222)
!10231 = !DILocation(line: 1836, column: 41, scope: !10222)
!10232 = !DILocation(line: 1836, column: 55, scope: !10222)
!10233 = !DILocation(line: 1836, column: 59, scope: !10222)
!10234 = !DILocation(line: 1836, column: 57, scope: !10222)
!10235 = !DILocation(line: 1836, column: 65, scope: !10222)
!10236 = !DILocation(line: 1836, column: 67, scope: !10222)
!10237 = !DILocation(line: 1836, column: 18, scope: !10222)
!10238 = !DILocalVariable(name: "c", scope: !10222, file: !3, line: 1837, type: !1306)
!10239 = !DILocation(line: 1837, column: 14, scope: !10222)
!10240 = !DILocation(line: 1837, column: 41, scope: !10222)
!10241 = !DILocation(line: 1837, column: 55, scope: !10222)
!10242 = !DILocation(line: 1837, column: 59, scope: !10222)
!10243 = !DILocation(line: 1837, column: 57, scope: !10222)
!10244 = !DILocation(line: 1837, column: 65, scope: !10222)
!10245 = !DILocation(line: 1837, column: 69, scope: !10222)
!10246 = !DILocation(line: 1837, column: 67, scope: !10222)
!10247 = !DILocation(line: 1837, column: 18, scope: !10222)
!10248 = !DILocalVariable(name: "d", scope: !10222, file: !3, line: 1838, type: !1306)
!10249 = !DILocation(line: 1838, column: 14, scope: !10222)
!10250 = !DILocation(line: 1838, column: 41, scope: !10222)
!10251 = !DILocation(line: 1838, column: 55, scope: !10222)
!10252 = !DILocation(line: 1838, column: 58, scope: !10222)
!10253 = !DILocation(line: 1838, column: 62, scope: !10222)
!10254 = !DILocation(line: 1838, column: 60, scope: !10222)
!10255 = !DILocation(line: 1838, column: 18, scope: !10222)
!10256 = !DILocation(line: 1840, column: 19, scope: !10222)
!10257 = !DILocation(line: 1840, column: 7, scope: !10222)
!10258 = !DILocation(line: 1841, column: 19, scope: !10222)
!10259 = !DILocation(line: 1841, column: 7, scope: !10222)
!10260 = !DILocation(line: 1842, column: 19, scope: !10222)
!10261 = !DILocation(line: 1842, column: 7, scope: !10222)
!10262 = !DILocation(line: 1843, column: 19, scope: !10222)
!10263 = !DILocation(line: 1843, column: 7, scope: !10222)
!10264 = !DILocation(line: 1844, column: 19, scope: !10222)
!10265 = !DILocation(line: 1844, column: 7, scope: !10222)
!10266 = !DILocation(line: 1845, column: 19, scope: !10222)
!10267 = !DILocation(line: 1845, column: 7, scope: !10222)
!10268 = !DILocation(line: 1846, column: 19, scope: !10222)
!10269 = !DILocation(line: 1846, column: 7, scope: !10222)
!10270 = !DILocation(line: 1847, column: 19, scope: !10222)
!10271 = !DILocation(line: 1847, column: 7, scope: !10222)
!10272 = !DILocation(line: 1848, column: 13, scope: !10222)
!10273 = !DILocation(line: 1848, column: 10, scope: !10222)
!10274 = !DILocation(line: 1849, column: 6, scope: !10222)
!10275 = !DILocation(line: 1834, column: 38, scope: !10217)
!10276 = !DILocation(line: 1834, column: 35, scope: !10217)
!10277 = !DILocation(line: 1834, column: 6, scope: !10217)
!10278 = distinct !{!10278, !10220, !10279}
!10279 = !DILocation(line: 1849, column: 6, scope: !10213)
!10280 = !DILocation(line: 1850, column: 5, scope: !10214)
!10281 = !DILocation(line: 1833, column: 37, scope: !10208)
!10282 = !DILocation(line: 1833, column: 34, scope: !10208)
!10283 = !DILocation(line: 1833, column: 5, scope: !10208)
!10284 = distinct !{!10284, !10211, !10285}
!10285 = !DILocation(line: 1850, column: 5, scope: !10205)
!10286 = !DILocation(line: 1851, column: 5, scope: !10203)
!10287 = !DILocation(line: 1852, column: 4, scope: !10203)
!10288 = !DILocation(line: 1853, column: 13, scope: !10289)
!10289 = distinct !DILexicalBlock(scope: !10200, file: !3, line: 1853, column: 13)
!10290 = !DILocation(line: 1853, column: 24, scope: !10289)
!10291 = !DILocation(line: 1853, column: 13, scope: !10200)
!10292 = !DILocation(line: 1854, column: 12, scope: !10293)
!10293 = distinct !DILexicalBlock(scope: !10294, file: !3, line: 1854, column: 5)
!10294 = distinct !DILexicalBlock(scope: !10289, file: !3, line: 1853, column: 38)
!10295 = !DILocation(line: 1854, column: 10, scope: !10293)
!10296 = !DILocation(line: 1854, column: 17, scope: !10297)
!10297 = distinct !DILexicalBlock(scope: !10293, file: !3, line: 1854, column: 5)
!10298 = !DILocation(line: 1854, column: 21, scope: !10297)
!10299 = !DILocation(line: 1854, column: 19, scope: !10297)
!10300 = !DILocation(line: 1854, column: 5, scope: !10293)
!10301 = !DILocation(line: 1855, column: 6, scope: !10302)
!10302 = distinct !DILexicalBlock(scope: !10297, file: !3, line: 1854, column: 43)
!10303 = !DILocation(line: 1856, column: 13, scope: !10304)
!10304 = distinct !DILexicalBlock(scope: !10302, file: !3, line: 1856, column: 6)
!10305 = !DILocation(line: 1856, column: 11, scope: !10304)
!10306 = !DILocation(line: 1856, column: 18, scope: !10307)
!10307 = distinct !DILexicalBlock(scope: !10304, file: !3, line: 1856, column: 6)
!10308 = !DILocation(line: 1856, column: 22, scope: !10307)
!10309 = !DILocation(line: 1856, column: 20, scope: !10307)
!10310 = !DILocation(line: 1856, column: 6, scope: !10304)
!10311 = !DILocalVariable(name: "a", scope: !10312, file: !3, line: 1857, type: !2371)
!10312 = distinct !DILexicalBlock(scope: !10307, file: !3, line: 1856, column: 43)
!10313 = !DILocation(line: 1857, column: 16, scope: !10312)
!10314 = !DILocation(line: 1857, column: 40, scope: !10312)
!10315 = !DILocation(line: 1857, column: 54, scope: !10312)
!10316 = !DILocation(line: 1857, column: 57, scope: !10312)
!10317 = !DILocation(line: 1857, column: 59, scope: !10312)
!10318 = !DILocation(line: 1857, column: 20, scope: !10312)
!10319 = !DILocalVariable(name: "b", scope: !10312, file: !3, line: 1858, type: !2371)
!10320 = !DILocation(line: 1858, column: 16, scope: !10312)
!10321 = !DILocation(line: 1858, column: 40, scope: !10312)
!10322 = !DILocation(line: 1858, column: 54, scope: !10312)
!10323 = !DILocation(line: 1858, column: 57, scope: !10312)
!10324 = !DILocation(line: 1858, column: 61, scope: !10312)
!10325 = !DILocation(line: 1858, column: 59, scope: !10312)
!10326 = !DILocation(line: 1858, column: 20, scope: !10312)
!10327 = !DILocation(line: 1860, column: 37, scope: !10312)
!10328 = !DILocation(line: 1860, column: 19, scope: !10312)
!10329 = !DILocation(line: 1860, column: 7, scope: !10312)
!10330 = !DILocation(line: 1861, column: 37, scope: !10312)
!10331 = !DILocation(line: 1861, column: 19, scope: !10312)
!10332 = !DILocation(line: 1861, column: 7, scope: !10312)
!10333 = !DILocation(line: 1862, column: 37, scope: !10312)
!10334 = !DILocation(line: 1862, column: 19, scope: !10312)
!10335 = !DILocation(line: 1862, column: 7, scope: !10312)
!10336 = !DILocation(line: 1863, column: 37, scope: !10312)
!10337 = !DILocation(line: 1863, column: 19, scope: !10312)
!10338 = !DILocation(line: 1863, column: 7, scope: !10312)
!10339 = !DILocation(line: 1864, column: 6, scope: !10312)
!10340 = !DILocation(line: 1856, column: 37, scope: !10307)
!10341 = !DILocation(line: 1856, column: 34, scope: !10307)
!10342 = !DILocation(line: 1856, column: 6, scope: !10307)
!10343 = distinct !{!10343, !10310, !10344}
!10344 = !DILocation(line: 1864, column: 6, scope: !10304)
!10345 = !DILocation(line: 1865, column: 6, scope: !10302)
!10346 = !DILocation(line: 1866, column: 5, scope: !10302)
!10347 = !DILocation(line: 1854, column: 37, scope: !10297)
!10348 = !DILocation(line: 1854, column: 34, scope: !10297)
!10349 = !DILocation(line: 1854, column: 5, scope: !10297)
!10350 = distinct !{!10350, !10300, !10351}
!10351 = !DILocation(line: 1866, column: 5, scope: !10293)
!10352 = !DILocation(line: 1867, column: 4, scope: !10294)
!10353 = !DILocation(line: 1869, column: 5, scope: !10354)
!10354 = distinct !DILexicalBlock(scope: !10289, file: !3, line: 1868, column: 9)
!10355 = !DILocation(line: 1870, column: 12, scope: !10356)
!10356 = distinct !DILexicalBlock(scope: !10354, file: !3, line: 1870, column: 5)
!10357 = !DILocation(line: 1870, column: 10, scope: !10356)
!10358 = !DILocation(line: 1870, column: 17, scope: !10359)
!10359 = distinct !DILexicalBlock(scope: !10356, file: !3, line: 1870, column: 5)
!10360 = !DILocation(line: 1870, column: 21, scope: !10359)
!10361 = !DILocation(line: 1870, column: 19, scope: !10359)
!10362 = !DILocation(line: 1870, column: 5, scope: !10356)
!10363 = !DILocation(line: 1871, column: 13, scope: !10364)
!10364 = distinct !DILexicalBlock(scope: !10365, file: !3, line: 1871, column: 6)
!10365 = distinct !DILexicalBlock(scope: !10359, file: !3, line: 1870, column: 43)
!10366 = !DILocation(line: 1871, column: 11, scope: !10364)
!10367 = !DILocation(line: 1871, column: 18, scope: !10368)
!10368 = distinct !DILexicalBlock(scope: !10364, file: !3, line: 1871, column: 6)
!10369 = !DILocation(line: 1871, column: 22, scope: !10368)
!10370 = !DILocation(line: 1871, column: 20, scope: !10368)
!10371 = !DILocation(line: 1871, column: 6, scope: !10364)
!10372 = !DILocalVariable(name: "a", scope: !10373, file: !3, line: 1872, type: !1306)
!10373 = distinct !DILexicalBlock(scope: !10368, file: !3, line: 1871, column: 44)
!10374 = !DILocation(line: 1872, column: 14, scope: !10373)
!10375 = !DILocation(line: 1872, column: 41, scope: !10373)
!10376 = !DILocation(line: 1872, column: 55, scope: !10373)
!10377 = !DILocation(line: 1872, column: 58, scope: !10373)
!10378 = !DILocation(line: 1872, column: 60, scope: !10373)
!10379 = !DILocation(line: 1872, column: 18, scope: !10373)
!10380 = !DILocalVariable(name: "b", scope: !10373, file: !3, line: 1873, type: !1306)
!10381 = !DILocation(line: 1873, column: 14, scope: !10373)
!10382 = !DILocation(line: 1873, column: 41, scope: !10373)
!10383 = !DILocation(line: 1873, column: 55, scope: !10373)
!10384 = !DILocation(line: 1873, column: 59, scope: !10373)
!10385 = !DILocation(line: 1873, column: 57, scope: !10373)
!10386 = !DILocation(line: 1873, column: 65, scope: !10373)
!10387 = !DILocation(line: 1873, column: 67, scope: !10373)
!10388 = !DILocation(line: 1873, column: 18, scope: !10373)
!10389 = !DILocalVariable(name: "c", scope: !10373, file: !3, line: 1874, type: !1306)
!10390 = !DILocation(line: 1874, column: 14, scope: !10373)
!10391 = !DILocation(line: 1874, column: 41, scope: !10373)
!10392 = !DILocation(line: 1874, column: 55, scope: !10373)
!10393 = !DILocation(line: 1874, column: 59, scope: !10373)
!10394 = !DILocation(line: 1874, column: 57, scope: !10373)
!10395 = !DILocation(line: 1874, column: 65, scope: !10373)
!10396 = !DILocation(line: 1874, column: 69, scope: !10373)
!10397 = !DILocation(line: 1874, column: 67, scope: !10373)
!10398 = !DILocation(line: 1874, column: 18, scope: !10373)
!10399 = !DILocalVariable(name: "d", scope: !10373, file: !3, line: 1875, type: !1306)
!10400 = !DILocation(line: 1875, column: 14, scope: !10373)
!10401 = !DILocation(line: 1875, column: 41, scope: !10373)
!10402 = !DILocation(line: 1875, column: 55, scope: !10373)
!10403 = !DILocation(line: 1875, column: 58, scope: !10373)
!10404 = !DILocation(line: 1875, column: 62, scope: !10373)
!10405 = !DILocation(line: 1875, column: 60, scope: !10373)
!10406 = !DILocation(line: 1875, column: 18, scope: !10373)
!10407 = !DILocation(line: 1877, column: 26, scope: !10373)
!10408 = !DILocation(line: 1877, column: 29, scope: !10373)
!10409 = !DILocation(line: 1877, column: 32, scope: !10373)
!10410 = !DILocation(line: 1877, column: 35, scope: !10373)
!10411 = !DILocation(line: 1877, column: 7, scope: !10373)
!10412 = !DILocation(line: 1879, column: 19, scope: !10373)
!10413 = !DILocation(line: 1879, column: 7, scope: !10373)
!10414 = !DILocation(line: 1880, column: 19, scope: !10373)
!10415 = !DILocation(line: 1880, column: 7, scope: !10373)
!10416 = !DILocation(line: 1881, column: 19, scope: !10373)
!10417 = !DILocation(line: 1881, column: 7, scope: !10373)
!10418 = !DILocation(line: 1882, column: 19, scope: !10373)
!10419 = !DILocation(line: 1882, column: 7, scope: !10373)
!10420 = !DILocation(line: 1883, column: 6, scope: !10373)
!10421 = !DILocation(line: 1871, column: 38, scope: !10368)
!10422 = !DILocation(line: 1871, column: 35, scope: !10368)
!10423 = !DILocation(line: 1871, column: 6, scope: !10368)
!10424 = distinct !{!10424, !10371, !10425}
!10425 = !DILocation(line: 1883, column: 6, scope: !10364)
!10426 = !DILocation(line: 1884, column: 5, scope: !10365)
!10427 = !DILocation(line: 1870, column: 37, scope: !10359)
!10428 = !DILocation(line: 1870, column: 34, scope: !10359)
!10429 = !DILocation(line: 1870, column: 5, scope: !10359)
!10430 = distinct !{!10430, !10362, !10431}
!10431 = !DILocation(line: 1884, column: 5, scope: !10356)
!10432 = !DILocation(line: 1885, column: 5, scope: !10354)
!10433 = !DILocation(line: 1887, column: 3, scope: !10193)
!10434 = !DILocation(line: 1827, column: 30, scope: !10188)
!10435 = !DILocation(line: 1827, column: 3, scope: !10188)
!10436 = distinct !{!10436, !10191, !10437}
!10437 = !DILocation(line: 1887, column: 3, scope: !10185)
!10438 = !DILocation(line: 1888, column: 2, scope: !10096)
!10439 = !DILocation(line: 1791, column: 28, scope: !10091)
!10440 = !DILocation(line: 1791, column: 2, scope: !10091)
!10441 = distinct !{!10441, !10094, !10442}
!10442 = !DILocation(line: 1888, column: 2, scope: !10088)
!10443 = !DILocation(line: 1889, column: 1, scope: !10002)
!10444 = distinct !DISubprogram(name: "ccgDM_drawFacesTex", scope: !3, file: !3, line: 2524, type: !2108, scopeLine: 2528, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!10445 = !DILocalVariable(name: "dm", arg: 1, scope: !10444, file: !3, line: 2524, type: !11)
!10446 = !DILocation(line: 2524, column: 45, scope: !10444)
!10447 = !DILocalVariable(name: "setDrawOptions", arg: 2, scope: !10444, file: !3, line: 2525, type: !2110)
!10448 = !DILocation(line: 2525, column: 52, scope: !10444)
!10449 = !DILocalVariable(name: "compareDrawOptions", arg: 3, scope: !10444, file: !3, line: 2526, type: !2134)
!10450 = !DILocation(line: 2526, column: 53, scope: !10444)
!10451 = !DILocalVariable(name: "userData", arg: 4, scope: !10444, file: !3, line: 2527, type: !41)
!10452 = !DILocation(line: 2527, column: 38, scope: !10444)
!10453 = !DILocalVariable(name: "flag", arg: 5, scope: !10444, file: !3, line: 2527, type: !2138)
!10454 = !DILocation(line: 2527, column: 59, scope: !10444)
!10455 = !DILocation(line: 2529, column: 28, scope: !10444)
!10456 = !DILocation(line: 2529, column: 32, scope: !10444)
!10457 = !DILocation(line: 2529, column: 54, scope: !10444)
!10458 = !DILocation(line: 2529, column: 74, scope: !10444)
!10459 = !DILocation(line: 2529, column: 84, scope: !10444)
!10460 = !DILocation(line: 2529, column: 2, scope: !10444)
!10461 = !DILocation(line: 2530, column: 1, scope: !10444)
!10462 = distinct !DISubprogram(name: "ccgDM_drawFacesGLSL", scope: !3, file: !3, line: 2118, type: !2147, scopeLine: 2119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!10463 = !DILocalVariable(name: "dm", arg: 1, scope: !10462, file: !3, line: 2118, type: !11)
!10464 = !DILocation(line: 2118, column: 46, scope: !10462)
!10465 = !DILocalVariable(name: "setMaterial", arg: 2, scope: !10462, file: !3, line: 2118, type: !2102)
!10466 = !DILocation(line: 2118, column: 64, scope: !10462)
!10467 = !DILocation(line: 2120, column: 2, scope: !10462)
!10468 = !DILocation(line: 2120, column: 6, scope: !10462)
!10469 = !DILocation(line: 2120, column: 26, scope: !10462)
!10470 = !DILocation(line: 2120, column: 30, scope: !10462)
!10471 = !DILocation(line: 2121, column: 1, scope: !10462)
!10472 = distinct !DISubprogram(name: "ccgDM_drawMappedFaces", scope: !3, file: !3, line: 2574, type: !2151, scopeLine: 2579, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!10473 = !DILocalVariable(name: "dm", arg: 1, scope: !10472, file: !3, line: 2574, type: !11)
!10474 = !DILocation(line: 2574, column: 48, scope: !10472)
!10475 = !DILocalVariable(name: "setDrawOptions", arg: 2, scope: !10472, file: !3, line: 2575, type: !2153)
!10476 = !DILocation(line: 2575, column: 52, scope: !10472)
!10477 = !DILocalVariable(name: "setMaterial", arg: 3, scope: !10472, file: !3, line: 2576, type: !2102)
!10478 = !DILocation(line: 2576, column: 49, scope: !10472)
!10479 = !DILocalVariable(name: "compareDrawOptions", arg: 4, scope: !10472, file: !3, line: 2577, type: !2134)
!10480 = !DILocation(line: 2577, column: 56, scope: !10472)
!10481 = !DILocalVariable(name: "userData", arg: 5, scope: !10472, file: !3, line: 2578, type: !41)
!10482 = !DILocation(line: 2578, column: 41, scope: !10472)
!10483 = !DILocalVariable(name: "flag", arg: 6, scope: !10472, file: !3, line: 2578, type: !2138)
!10484 = !DILocation(line: 2578, column: 62, scope: !10472)
!10485 = !DILocalVariable(name: "ccgdm", scope: !10472, file: !3, line: 2580, type: !2295)
!10486 = !DILocation(line: 2580, column: 18, scope: !10472)
!10487 = !DILocation(line: 2580, column: 45, scope: !10472)
!10488 = !DILocation(line: 2580, column: 26, scope: !10472)
!10489 = !DILocalVariable(name: "ss", scope: !10472, file: !3, line: 2581, type: !6)
!10490 = !DILocation(line: 2581, column: 14, scope: !10472)
!10491 = !DILocation(line: 2581, column: 19, scope: !10472)
!10492 = !DILocation(line: 2581, column: 26, scope: !10472)
!10493 = !DILocalVariable(name: "key", scope: !10472, file: !3, line: 2582, type: !5667)
!10494 = !DILocation(line: 2582, column: 9, scope: !10472)
!10495 = !DILocalVariable(name: "mcol", scope: !10472, file: !3, line: 2583, type: !10496)
!10496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10497, size: 64)
!10497 = !DIDerivedType(tag: DW_TAG_typedef, name: "MCol", file: !684, line: 76, baseType: !5280)
!10498 = !DILocation(line: 2583, column: 8, scope: !10472)
!10499 = !DILocalVariable(name: "lnors", scope: !10472, file: !3, line: 2584, type: !10022)
!10500 = !DILocation(line: 2584, column: 10, scope: !10472)
!10501 = !DILocation(line: 2584, column: 25, scope: !10472)
!10502 = !DILocation(line: 2584, column: 29, scope: !10472)
!10503 = !DILocation(line: 2584, column: 50, scope: !10472)
!10504 = !DILocalVariable(name: "i", scope: !10472, file: !3, line: 2585, type: !27)
!10505 = !DILocation(line: 2585, column: 6, scope: !10472)
!10506 = !DILocalVariable(name: "gridSize", scope: !10472, file: !3, line: 2585, type: !27)
!10507 = !DILocation(line: 2585, column: 9, scope: !10472)
!10508 = !DILocation(line: 2585, column: 43, scope: !10472)
!10509 = !DILocation(line: 2585, column: 20, scope: !10472)
!10510 = !DILocalVariable(name: "faceFlags", scope: !10472, file: !3, line: 2586, type: !2024)
!10511 = !DILocation(line: 2586, column: 13, scope: !10472)
!10512 = !DILocation(line: 2586, column: 25, scope: !10472)
!10513 = !DILocation(line: 2586, column: 32, scope: !10472)
!10514 = !DILocalVariable(name: "useColors", scope: !10472, file: !3, line: 2587, type: !27)
!10515 = !DILocation(line: 2587, column: 6, scope: !10472)
!10516 = !DILocation(line: 2587, column: 18, scope: !10472)
!10517 = !DILocation(line: 2587, column: 23, scope: !10472)
!10518 = !DILocalVariable(name: "gridFaces", scope: !10472, file: !3, line: 2588, type: !27)
!10519 = !DILocation(line: 2588, column: 6, scope: !10472)
!10520 = !DILocation(line: 2588, column: 18, scope: !10472)
!10521 = !DILocation(line: 2588, column: 27, scope: !10472)
!10522 = !DILocalVariable(name: "totface", scope: !10472, file: !3, line: 2588, type: !27)
!10523 = !DILocation(line: 2588, column: 32, scope: !10472)
!10524 = !DILocation(line: 2590, column: 26, scope: !10472)
!10525 = !DILocation(line: 2590, column: 2, scope: !10472)
!10526 = !DILocation(line: 2593, column: 8, scope: !10472)
!10527 = !DILocation(line: 2595, column: 6, scope: !10528)
!10528 = distinct !DILexicalBlock(scope: !10472, file: !3, line: 2595, column: 6)
!10529 = !DILocation(line: 2595, column: 6, scope: !10472)
!10530 = !DILocation(line: 2596, column: 10, scope: !10531)
!10531 = distinct !DILexicalBlock(scope: !10528, file: !3, line: 2595, column: 17)
!10532 = !DILocation(line: 2596, column: 14, scope: !10531)
!10533 = !DILocation(line: 2596, column: 35, scope: !10531)
!10534 = !DILocation(line: 2596, column: 8, scope: !10531)
!10535 = !DILocation(line: 2597, column: 8, scope: !10536)
!10536 = distinct !DILexicalBlock(scope: !10531, file: !3, line: 2597, column: 7)
!10537 = !DILocation(line: 2597, column: 7, scope: !10531)
!10538 = !DILocation(line: 2598, column: 11, scope: !10536)
!10539 = !DILocation(line: 2598, column: 15, scope: !10536)
!10540 = !DILocation(line: 2598, column: 36, scope: !10536)
!10541 = !DILocation(line: 2598, column: 9, scope: !10536)
!10542 = !DILocation(line: 2598, column: 4, scope: !10536)
!10543 = !DILocation(line: 2599, column: 2, scope: !10531)
!10544 = !DILocation(line: 2601, column: 35, scope: !10472)
!10545 = !DILocation(line: 2601, column: 12, scope: !10472)
!10546 = !DILocation(line: 2601, column: 10, scope: !10472)
!10547 = !DILocation(line: 2602, column: 9, scope: !10548)
!10548 = distinct !DILexicalBlock(scope: !10472, file: !3, line: 2602, column: 2)
!10549 = !DILocation(line: 2602, column: 7, scope: !10548)
!10550 = !DILocation(line: 2602, column: 14, scope: !10551)
!10551 = distinct !DILexicalBlock(scope: !10548, file: !3, line: 2602, column: 2)
!10552 = !DILocation(line: 2602, column: 18, scope: !10551)
!10553 = !DILocation(line: 2602, column: 16, scope: !10551)
!10554 = !DILocation(line: 2602, column: 2, scope: !10548)
!10555 = !DILocalVariable(name: "f", scope: !10556, file: !3, line: 2603, type: !2461)
!10556 = distinct !DILexicalBlock(scope: !10551, file: !3, line: 2602, column: 32)
!10557 = !DILocation(line: 2603, column: 12, scope: !10556)
!10558 = !DILocation(line: 2603, column: 16, scope: !10556)
!10559 = !DILocation(line: 2603, column: 23, scope: !10556)
!10560 = !DILocation(line: 2603, column: 31, scope: !10556)
!10561 = !DILocation(line: 2603, column: 34, scope: !10556)
!10562 = !DILocalVariable(name: "S", scope: !10556, file: !3, line: 2604, type: !27)
!10563 = !DILocation(line: 2604, column: 7, scope: !10556)
!10564 = !DILocalVariable(name: "x", scope: !10556, file: !3, line: 2604, type: !27)
!10565 = !DILocation(line: 2604, column: 10, scope: !10556)
!10566 = !DILocalVariable(name: "y", scope: !10556, file: !3, line: 2604, type: !27)
!10567 = !DILocation(line: 2604, column: 13, scope: !10556)
!10568 = !DILocalVariable(name: "numVerts", scope: !10556, file: !3, line: 2604, type: !27)
!10569 = !DILocation(line: 2604, column: 16, scope: !10556)
!10570 = !DILocation(line: 2604, column: 54, scope: !10556)
!10571 = !DILocation(line: 2604, column: 27, scope: !10556)
!10572 = !DILocalVariable(name: "drawSmooth", scope: !10556, file: !3, line: 2605, type: !27)
!10573 = !DILocation(line: 2605, column: 7, scope: !10556)
!10574 = !DILocalVariable(name: "index", scope: !10556, file: !3, line: 2605, type: !27)
!10575 = !DILocation(line: 2605, column: 19, scope: !10556)
!10576 = !DILocation(line: 2605, column: 49, scope: !10556)
!10577 = !DILocation(line: 2605, column: 53, scope: !10556)
!10578 = !DILocation(line: 2605, column: 27, scope: !10556)
!10579 = !DILocalVariable(name: "origIndex", scope: !10556, file: !3, line: 2606, type: !27)
!10580 = !DILocation(line: 2606, column: 7, scope: !10556)
!10581 = !DILocalVariable(name: "cp", scope: !10556, file: !3, line: 2607, type: !2376)
!10582 = !DILocation(line: 2607, column: 18, scope: !10556)
!10583 = !DILocalVariable(name: "ln", scope: !10556, file: !3, line: 2608, type: !10022)
!10584 = !DILocation(line: 2608, column: 11, scope: !10556)
!10585 = !DILocation(line: 2610, column: 15, scope: !10556)
!10586 = !DILocation(line: 2610, column: 13, scope: !10556)
!10587 = !DILocation(line: 2612, column: 7, scope: !10588)
!10588 = distinct !DILexicalBlock(scope: !10556, file: !3, line: 2612, column: 7)
!10589 = !DILocation(line: 2612, column: 12, scope: !10588)
!10590 = !DILocation(line: 2612, column: 7, scope: !10556)
!10591 = !DILocation(line: 2612, column: 48, scope: !10588)
!10592 = !DILocation(line: 2612, column: 37, scope: !10588)
!10593 = !DILocation(line: 2613, column: 12, scope: !10594)
!10594 = distinct !DILexicalBlock(scope: !10588, file: !3, line: 2613, column: 12)
!10595 = !DILocation(line: 2613, column: 12, scope: !10588)
!10596 = !DILocation(line: 2613, column: 37, scope: !10594)
!10597 = !DILocation(line: 2613, column: 43, scope: !10594)
!10598 = !DILocation(line: 2613, column: 47, scope: !10594)
!10599 = !DILocation(line: 2613, column: 57, scope: !10594)
!10600 = !DILocation(line: 2613, column: 68, scope: !10594)
!10601 = !DILocation(line: 2613, column: 73, scope: !10594)
!10602 = !DILocation(line: 2613, column: 34, scope: !10594)
!10603 = !DILocation(line: 2613, column: 23, scope: !10594)
!10604 = !DILocation(line: 2614, column: 19, scope: !10594)
!10605 = !DILocation(line: 2616, column: 7, scope: !10606)
!10606 = distinct !DILexicalBlock(scope: !10556, file: !3, line: 2616, column: 7)
!10607 = !DILocation(line: 2616, column: 7, scope: !10556)
!10608 = !DILocation(line: 2617, column: 26, scope: !10609)
!10609 = distinct !DILexicalBlock(scope: !10606, file: !3, line: 2616, column: 13)
!10610 = !DILocation(line: 2617, column: 9, scope: !10609)
!10611 = !DILocation(line: 2617, column: 7, scope: !10609)
!10612 = !DILocation(line: 2618, column: 12, scope: !10609)
!10613 = !DILocation(line: 2618, column: 24, scope: !10609)
!10614 = !DILocation(line: 2618, column: 22, scope: !10609)
!10615 = !DILocation(line: 2618, column: 36, scope: !10609)
!10616 = !DILocation(line: 2618, column: 34, scope: !10609)
!10617 = !DILocation(line: 2618, column: 45, scope: !10609)
!10618 = !DILocation(line: 2618, column: 9, scope: !10609)
!10619 = !DILocation(line: 2619, column: 3, scope: !10609)
!10620 = !DILocation(line: 2621, column: 7, scope: !10621)
!10621 = distinct !DILexicalBlock(scope: !10556, file: !3, line: 2621, column: 7)
!10622 = !DILocation(line: 2621, column: 7, scope: !10556)
!10623 = !DILocation(line: 2622, column: 9, scope: !10624)
!10624 = distinct !DILexicalBlock(scope: !10621, file: !3, line: 2621, column: 14)
!10625 = !DILocation(line: 2622, column: 7, scope: !10624)
!10626 = !DILocation(line: 2623, column: 13, scope: !10624)
!10627 = !DILocation(line: 2623, column: 25, scope: !10624)
!10628 = !DILocation(line: 2623, column: 23, scope: !10624)
!10629 = !DILocation(line: 2623, column: 37, scope: !10624)
!10630 = !DILocation(line: 2623, column: 35, scope: !10624)
!10631 = !DILocation(line: 2623, column: 10, scope: !10624)
!10632 = !DILocation(line: 2624, column: 3, scope: !10624)
!10633 = !DILocalVariable(name: "draw_option", scope: !10634, file: !3, line: 2627, type: !2114)
!10634 = distinct !DILexicalBlock(scope: !10556, file: !3, line: 2626, column: 3)
!10635 = !DILocation(line: 2627, column: 17, scope: !10634)
!10636 = !DILocation(line: 2629, column: 8, scope: !10637)
!10637 = distinct !DILexicalBlock(scope: !10634, file: !3, line: 2629, column: 8)
!10638 = !DILocation(line: 2629, column: 14, scope: !10637)
!10639 = !DILocation(line: 2629, column: 8, scope: !10634)
!10640 = !DILocation(line: 2630, column: 19, scope: !10637)
!10641 = !DILocation(line: 2630, column: 31, scope: !10637)
!10642 = !DILocation(line: 2630, column: 43, scope: !10637)
!10643 = !DILocation(line: 2630, column: 53, scope: !10637)
!10644 = !DILocation(line: 2630, column: 64, scope: !10637)
!10645 = !DILocation(line: 2630, column: 71, scope: !10637)
!10646 = !DILocation(line: 2630, column: 17, scope: !10637)
!10647 = !DILocation(line: 2630, column: 5, scope: !10637)
!10648 = !DILocation(line: 2631, column: 13, scope: !10649)
!10649 = distinct !DILexicalBlock(scope: !10637, file: !3, line: 2631, column: 13)
!10650 = !DILocation(line: 2631, column: 13, scope: !10637)
!10651 = !DILocation(line: 2632, column: 19, scope: !10649)
!10652 = !DILocation(line: 2632, column: 34, scope: !10649)
!10653 = !DILocation(line: 2632, column: 44, scope: !10649)
!10654 = !DILocation(line: 2632, column: 17, scope: !10649)
!10655 = !DILocation(line: 2632, column: 5, scope: !10649)
!10656 = !DILocation(line: 2634, column: 8, scope: !10657)
!10657 = distinct !DILexicalBlock(scope: !10634, file: !3, line: 2634, column: 8)
!10658 = !DILocation(line: 2634, column: 20, scope: !10657)
!10659 = !DILocation(line: 2634, column: 8, scope: !10634)
!10660 = !DILocation(line: 2635, column: 9, scope: !10661)
!10661 = distinct !DILexicalBlock(scope: !10662, file: !3, line: 2635, column: 9)
!10662 = distinct !DILexicalBlock(scope: !10657, file: !3, line: 2634, column: 44)
!10663 = !DILocation(line: 2635, column: 21, scope: !10661)
!10664 = !DILocation(line: 2635, column: 9, scope: !10662)
!10665 = !DILocation(line: 2636, column: 6, scope: !10666)
!10666 = distinct !DILexicalBlock(scope: !10661, file: !3, line: 2635, column: 48)
!10667 = !DILocation(line: 2637, column: 6, scope: !10666)
!10668 = !DILocation(line: 2638, column: 5, scope: !10666)
!10669 = !DILocation(line: 2642, column: 5, scope: !10662)
!10670 = !DILocation(line: 2644, column: 12, scope: !10671)
!10671 = distinct !DILexicalBlock(scope: !10662, file: !3, line: 2644, column: 5)
!10672 = !DILocation(line: 2644, column: 10, scope: !10671)
!10673 = !DILocation(line: 2644, column: 17, scope: !10674)
!10674 = distinct !DILexicalBlock(scope: !10671, file: !3, line: 2644, column: 5)
!10675 = !DILocation(line: 2644, column: 21, scope: !10674)
!10676 = !DILocation(line: 2644, column: 19, scope: !10674)
!10677 = !DILocation(line: 2644, column: 5, scope: !10671)
!10678 = !DILocalVariable(name: "faceGridData", scope: !10679, file: !3, line: 2645, type: !2371)
!10679 = distinct !DILexicalBlock(scope: !10674, file: !3, line: 2644, column: 36)
!10680 = !DILocation(line: 2645, column: 15, scope: !10679)
!10681 = !DILocation(line: 2645, column: 62, scope: !10679)
!10682 = !DILocation(line: 2645, column: 66, scope: !10679)
!10683 = !DILocation(line: 2645, column: 69, scope: !10679)
!10684 = !DILocation(line: 2645, column: 30, scope: !10679)
!10685 = !DILocation(line: 2646, column: 10, scope: !10686)
!10686 = distinct !DILexicalBlock(scope: !10679, file: !3, line: 2646, column: 10)
!10687 = !DILocation(line: 2646, column: 10, scope: !10679)
!10688 = !DILocation(line: 2647, column: 7, scope: !10689)
!10689 = distinct !DILexicalBlock(scope: !10686, file: !3, line: 2646, column: 14)
!10690 = !DILocation(line: 2648, column: 14, scope: !10691)
!10691 = distinct !DILexicalBlock(scope: !10689, file: !3, line: 2648, column: 7)
!10692 = !DILocation(line: 2648, column: 12, scope: !10691)
!10693 = !DILocation(line: 2648, column: 19, scope: !10694)
!10694 = distinct !DILexicalBlock(scope: !10691, file: !3, line: 2648, column: 7)
!10695 = !DILocation(line: 2648, column: 23, scope: !10694)
!10696 = !DILocation(line: 2648, column: 21, scope: !10694)
!10697 = !DILocation(line: 2648, column: 7, scope: !10691)
!10698 = !DILocation(line: 2649, column: 15, scope: !10699)
!10699 = distinct !DILexicalBlock(scope: !10700, file: !3, line: 2649, column: 8)
!10700 = distinct !DILexicalBlock(scope: !10694, file: !3, line: 2648, column: 39)
!10701 = !DILocation(line: 2649, column: 13, scope: !10699)
!10702 = !DILocation(line: 2649, column: 20, scope: !10703)
!10703 = distinct !DILexicalBlock(scope: !10699, file: !3, line: 2649, column: 8)
!10704 = !DILocation(line: 2649, column: 24, scope: !10703)
!10705 = !DILocation(line: 2649, column: 22, scope: !10703)
!10706 = !DILocation(line: 2649, column: 8, scope: !10699)
!10707 = !DILocalVariable(name: "a", scope: !10708, file: !3, line: 2650, type: !1306)
!10708 = distinct !DILexicalBlock(scope: !10703, file: !3, line: 2649, column: 40)
!10709 = !DILocation(line: 2650, column: 16, scope: !10708)
!10710 = !DILocation(line: 2650, column: 43, scope: !10708)
!10711 = !DILocation(line: 2650, column: 57, scope: !10708)
!10712 = !DILocation(line: 2650, column: 60, scope: !10708)
!10713 = !DILocation(line: 2650, column: 62, scope: !10708)
!10714 = !DILocation(line: 2650, column: 20, scope: !10708)
!10715 = !DILocalVariable(name: "b", scope: !10708, file: !3, line: 2651, type: !1306)
!10716 = !DILocation(line: 2651, column: 16, scope: !10708)
!10717 = !DILocation(line: 2651, column: 43, scope: !10708)
!10718 = !DILocation(line: 2651, column: 57, scope: !10708)
!10719 = !DILocation(line: 2651, column: 59, scope: !10708)
!10720 = !DILocation(line: 2651, column: 64, scope: !10708)
!10721 = !DILocation(line: 2651, column: 66, scope: !10708)
!10722 = !DILocation(line: 2651, column: 20, scope: !10708)
!10723 = !DILocalVariable(name: "c", scope: !10708, file: !3, line: 2652, type: !1306)
!10724 = !DILocation(line: 2652, column: 16, scope: !10708)
!10725 = !DILocation(line: 2652, column: 43, scope: !10708)
!10726 = !DILocation(line: 2652, column: 57, scope: !10708)
!10727 = !DILocation(line: 2652, column: 59, scope: !10708)
!10728 = !DILocation(line: 2652, column: 64, scope: !10708)
!10729 = !DILocation(line: 2652, column: 66, scope: !10708)
!10730 = !DILocation(line: 2652, column: 20, scope: !10708)
!10731 = !DILocalVariable(name: "d", scope: !10708, file: !3, line: 2653, type: !1306)
!10732 = !DILocation(line: 2653, column: 16, scope: !10708)
!10733 = !DILocation(line: 2653, column: 43, scope: !10708)
!10734 = !DILocation(line: 2653, column: 57, scope: !10708)
!10735 = !DILocation(line: 2653, column: 60, scope: !10708)
!10736 = !DILocation(line: 2653, column: 62, scope: !10708)
!10737 = !DILocation(line: 2653, column: 20, scope: !10708)
!10738 = !DILocation(line: 2655, column: 13, scope: !10739)
!10739 = distinct !DILexicalBlock(scope: !10708, file: !3, line: 2655, column: 13)
!10740 = !DILocation(line: 2655, column: 13, scope: !10708)
!10741 = !DILocation(line: 2655, column: 28, scope: !10739)
!10742 = !DILocation(line: 2655, column: 35, scope: !10739)
!10743 = !DILocation(line: 2655, column: 42, scope: !10739)
!10744 = !DILocation(line: 2655, column: 17, scope: !10739)
!10745 = !DILocation(line: 2656, column: 21, scope: !10708)
!10746 = !DILocation(line: 2656, column: 9, scope: !10708)
!10747 = !DILocation(line: 2657, column: 21, scope: !10708)
!10748 = !DILocation(line: 2657, column: 9, scope: !10708)
!10749 = !DILocation(line: 2658, column: 13, scope: !10750)
!10750 = distinct !DILexicalBlock(scope: !10708, file: !3, line: 2658, column: 13)
!10751 = !DILocation(line: 2658, column: 13, scope: !10708)
!10752 = !DILocation(line: 2658, column: 28, scope: !10750)
!10753 = !DILocation(line: 2658, column: 36, scope: !10750)
!10754 = !DILocation(line: 2658, column: 44, scope: !10750)
!10755 = !DILocation(line: 2658, column: 17, scope: !10750)
!10756 = !DILocation(line: 2659, column: 21, scope: !10708)
!10757 = !DILocation(line: 2659, column: 9, scope: !10708)
!10758 = !DILocation(line: 2660, column: 21, scope: !10708)
!10759 = !DILocation(line: 2660, column: 9, scope: !10708)
!10760 = !DILocation(line: 2661, column: 13, scope: !10761)
!10761 = distinct !DILexicalBlock(scope: !10708, file: !3, line: 2661, column: 13)
!10762 = !DILocation(line: 2661, column: 13, scope: !10708)
!10763 = !DILocation(line: 2661, column: 28, scope: !10761)
!10764 = !DILocation(line: 2661, column: 36, scope: !10761)
!10765 = !DILocation(line: 2661, column: 44, scope: !10761)
!10766 = !DILocation(line: 2661, column: 17, scope: !10761)
!10767 = !DILocation(line: 2662, column: 21, scope: !10708)
!10768 = !DILocation(line: 2662, column: 9, scope: !10708)
!10769 = !DILocation(line: 2663, column: 21, scope: !10708)
!10770 = !DILocation(line: 2663, column: 9, scope: !10708)
!10771 = !DILocation(line: 2664, column: 13, scope: !10772)
!10772 = distinct !DILexicalBlock(scope: !10708, file: !3, line: 2664, column: 13)
!10773 = !DILocation(line: 2664, column: 13, scope: !10708)
!10774 = !DILocation(line: 2664, column: 28, scope: !10772)
!10775 = !DILocation(line: 2664, column: 35, scope: !10772)
!10776 = !DILocation(line: 2664, column: 42, scope: !10772)
!10777 = !DILocation(line: 2664, column: 17, scope: !10772)
!10778 = !DILocation(line: 2665, column: 21, scope: !10708)
!10779 = !DILocation(line: 2665, column: 9, scope: !10708)
!10780 = !DILocation(line: 2666, column: 21, scope: !10708)
!10781 = !DILocation(line: 2666, column: 9, scope: !10708)
!10782 = !DILocation(line: 2668, column: 13, scope: !10783)
!10783 = distinct !DILexicalBlock(scope: !10708, file: !3, line: 2668, column: 13)
!10784 = !DILocation(line: 2668, column: 13, scope: !10708)
!10785 = !DILocation(line: 2668, column: 20, scope: !10783)
!10786 = !DILocation(line: 2668, column: 17, scope: !10783)
!10787 = !DILocation(line: 2669, column: 11, scope: !10708)
!10788 = !DILocation(line: 2670, column: 8, scope: !10708)
!10789 = !DILocation(line: 2649, column: 36, scope: !10703)
!10790 = !DILocation(line: 2649, column: 8, scope: !10703)
!10791 = distinct !{!10791, !10706, !10792}
!10792 = !DILocation(line: 2670, column: 8, scope: !10699)
!10793 = !DILocation(line: 2671, column: 7, scope: !10700)
!10794 = !DILocation(line: 2648, column: 35, scope: !10694)
!10795 = !DILocation(line: 2648, column: 7, scope: !10694)
!10796 = distinct !{!10796, !10697, !10797}
!10797 = !DILocation(line: 2671, column: 7, scope: !10691)
!10798 = !DILocation(line: 2672, column: 7, scope: !10689)
!10799 = !DILocation(line: 2673, column: 6, scope: !10689)
!10800 = !DILocation(line: 2674, column: 15, scope: !10801)
!10801 = distinct !DILexicalBlock(scope: !10686, file: !3, line: 2674, column: 15)
!10802 = !DILocation(line: 2674, column: 15, scope: !10686)
!10803 = !DILocation(line: 2675, column: 14, scope: !10804)
!10804 = distinct !DILexicalBlock(scope: !10805, file: !3, line: 2675, column: 7)
!10805 = distinct !DILexicalBlock(scope: !10801, file: !3, line: 2674, column: 27)
!10806 = !DILocation(line: 2675, column: 12, scope: !10804)
!10807 = !DILocation(line: 2675, column: 19, scope: !10808)
!10808 = distinct !DILexicalBlock(scope: !10804, file: !3, line: 2675, column: 7)
!10809 = !DILocation(line: 2675, column: 23, scope: !10808)
!10810 = !DILocation(line: 2675, column: 21, scope: !10808)
!10811 = !DILocation(line: 2675, column: 7, scope: !10804)
!10812 = !DILocalVariable(name: "a", scope: !10813, file: !3, line: 2676, type: !2371)
!10813 = distinct !DILexicalBlock(scope: !10808, file: !3, line: 2675, column: 39)
!10814 = !DILocation(line: 2676, column: 17, scope: !10813)
!10815 = !DILocalVariable(name: "b", scope: !10813, file: !3, line: 2676, type: !2371)
!10816 = !DILocation(line: 2676, column: 21, scope: !10813)
!10817 = !DILocation(line: 2677, column: 8, scope: !10813)
!10818 = !DILocation(line: 2678, column: 15, scope: !10819)
!10819 = distinct !DILexicalBlock(scope: !10813, file: !3, line: 2678, column: 8)
!10820 = !DILocation(line: 2678, column: 13, scope: !10819)
!10821 = !DILocation(line: 2678, column: 20, scope: !10822)
!10822 = distinct !DILexicalBlock(scope: !10819, file: !3, line: 2678, column: 8)
!10823 = !DILocation(line: 2678, column: 24, scope: !10822)
!10824 = !DILocation(line: 2678, column: 22, scope: !10822)
!10825 = !DILocation(line: 2678, column: 8, scope: !10819)
!10826 = !DILocation(line: 2679, column: 33, scope: !10827)
!10827 = distinct !DILexicalBlock(scope: !10822, file: !3, line: 2678, column: 40)
!10828 = !DILocation(line: 2679, column: 47, scope: !10827)
!10829 = !DILocation(line: 2679, column: 50, scope: !10827)
!10830 = !DILocation(line: 2679, column: 52, scope: !10827)
!10831 = !DILocation(line: 2679, column: 13, scope: !10827)
!10832 = !DILocation(line: 2679, column: 11, scope: !10827)
!10833 = !DILocation(line: 2680, column: 33, scope: !10827)
!10834 = !DILocation(line: 2680, column: 47, scope: !10827)
!10835 = !DILocation(line: 2680, column: 50, scope: !10827)
!10836 = !DILocation(line: 2680, column: 52, scope: !10827)
!10837 = !DILocation(line: 2680, column: 13, scope: !10827)
!10838 = !DILocation(line: 2680, column: 11, scope: !10827)
!10839 = !DILocation(line: 2682, column: 13, scope: !10840)
!10840 = distinct !DILexicalBlock(scope: !10827, file: !3, line: 2682, column: 13)
!10841 = !DILocation(line: 2682, column: 13, scope: !10827)
!10842 = !DILocation(line: 2682, column: 28, scope: !10840)
!10843 = !DILocation(line: 2682, column: 35, scope: !10840)
!10844 = !DILocation(line: 2682, column: 42, scope: !10840)
!10845 = !DILocation(line: 2682, column: 17, scope: !10840)
!10846 = !DILocation(line: 2683, column: 39, scope: !10827)
!10847 = !DILocation(line: 2683, column: 21, scope: !10827)
!10848 = !DILocation(line: 2683, column: 9, scope: !10827)
!10849 = !DILocation(line: 2684, column: 39, scope: !10827)
!10850 = !DILocation(line: 2684, column: 21, scope: !10827)
!10851 = !DILocation(line: 2684, column: 9, scope: !10827)
!10852 = !DILocation(line: 2685, column: 13, scope: !10853)
!10853 = distinct !DILexicalBlock(scope: !10827, file: !3, line: 2685, column: 13)
!10854 = !DILocation(line: 2685, column: 13, scope: !10827)
!10855 = !DILocation(line: 2685, column: 28, scope: !10853)
!10856 = !DILocation(line: 2685, column: 35, scope: !10853)
!10857 = !DILocation(line: 2685, column: 42, scope: !10853)
!10858 = !DILocation(line: 2685, column: 17, scope: !10853)
!10859 = !DILocation(line: 2686, column: 39, scope: !10827)
!10860 = !DILocation(line: 2686, column: 21, scope: !10827)
!10861 = !DILocation(line: 2686, column: 9, scope: !10827)
!10862 = !DILocation(line: 2687, column: 39, scope: !10827)
!10863 = !DILocation(line: 2687, column: 21, scope: !10827)
!10864 = !DILocation(line: 2687, column: 9, scope: !10827)
!10865 = !DILocation(line: 2689, column: 13, scope: !10866)
!10866 = distinct !DILexicalBlock(scope: !10827, file: !3, line: 2689, column: 13)
!10867 = !DILocation(line: 2689, column: 18, scope: !10866)
!10868 = !DILocation(line: 2689, column: 28, scope: !10866)
!10869 = !DILocation(line: 2689, column: 15, scope: !10866)
!10870 = !DILocation(line: 2689, column: 13, scope: !10827)
!10871 = !DILocation(line: 2690, column: 14, scope: !10872)
!10872 = distinct !DILexicalBlock(scope: !10873, file: !3, line: 2690, column: 14)
!10873 = distinct !DILexicalBlock(scope: !10866, file: !3, line: 2689, column: 33)
!10874 = !DILocation(line: 2690, column: 14, scope: !10873)
!10875 = !DILocation(line: 2690, column: 21, scope: !10872)
!10876 = !DILocation(line: 2690, column: 18, scope: !10872)
!10877 = !DILocation(line: 2691, column: 9, scope: !10873)
!10878 = !DILocation(line: 2692, column: 8, scope: !10827)
!10879 = !DILocation(line: 2678, column: 36, scope: !10822)
!10880 = !DILocation(line: 2678, column: 8, scope: !10822)
!10881 = distinct !{!10881, !10825, !10882}
!10882 = !DILocation(line: 2692, column: 8, scope: !10819)
!10883 = !DILocation(line: 2694, column: 32, scope: !10813)
!10884 = !DILocation(line: 2694, column: 46, scope: !10813)
!10885 = !DILocation(line: 2694, column: 49, scope: !10813)
!10886 = !DILocation(line: 2694, column: 51, scope: !10813)
!10887 = !DILocation(line: 2694, column: 12, scope: !10813)
!10888 = !DILocation(line: 2694, column: 10, scope: !10813)
!10889 = !DILocation(line: 2695, column: 32, scope: !10813)
!10890 = !DILocation(line: 2695, column: 46, scope: !10813)
!10891 = !DILocation(line: 2695, column: 49, scope: !10813)
!10892 = !DILocation(line: 2695, column: 51, scope: !10813)
!10893 = !DILocation(line: 2695, column: 12, scope: !10813)
!10894 = !DILocation(line: 2695, column: 10, scope: !10813)
!10895 = !DILocation(line: 2697, column: 12, scope: !10896)
!10896 = distinct !DILexicalBlock(scope: !10813, file: !3, line: 2697, column: 12)
!10897 = !DILocation(line: 2697, column: 12, scope: !10813)
!10898 = !DILocation(line: 2697, column: 27, scope: !10896)
!10899 = !DILocation(line: 2697, column: 35, scope: !10896)
!10900 = !DILocation(line: 2697, column: 43, scope: !10896)
!10901 = !DILocation(line: 2697, column: 16, scope: !10896)
!10902 = !DILocation(line: 2698, column: 38, scope: !10813)
!10903 = !DILocation(line: 2698, column: 20, scope: !10813)
!10904 = !DILocation(line: 2698, column: 8, scope: !10813)
!10905 = !DILocation(line: 2699, column: 38, scope: !10813)
!10906 = !DILocation(line: 2699, column: 20, scope: !10813)
!10907 = !DILocation(line: 2699, column: 8, scope: !10813)
!10908 = !DILocation(line: 2700, column: 12, scope: !10909)
!10909 = distinct !DILexicalBlock(scope: !10813, file: !3, line: 2700, column: 12)
!10910 = !DILocation(line: 2700, column: 12, scope: !10813)
!10911 = !DILocation(line: 2700, column: 27, scope: !10909)
!10912 = !DILocation(line: 2700, column: 35, scope: !10909)
!10913 = !DILocation(line: 2700, column: 43, scope: !10909)
!10914 = !DILocation(line: 2700, column: 16, scope: !10909)
!10915 = !DILocation(line: 2701, column: 38, scope: !10813)
!10916 = !DILocation(line: 2701, column: 20, scope: !10813)
!10917 = !DILocation(line: 2701, column: 8, scope: !10813)
!10918 = !DILocation(line: 2702, column: 38, scope: !10813)
!10919 = !DILocation(line: 2702, column: 20, scope: !10813)
!10920 = !DILocation(line: 2702, column: 8, scope: !10813)
!10921 = !DILocation(line: 2704, column: 12, scope: !10922)
!10922 = distinct !DILexicalBlock(scope: !10813, file: !3, line: 2704, column: 12)
!10923 = !DILocation(line: 2704, column: 12, scope: !10813)
!10924 = !DILocation(line: 2704, column: 19, scope: !10922)
!10925 = !DILocation(line: 2704, column: 16, scope: !10922)
!10926 = !DILocation(line: 2706, column: 8, scope: !10813)
!10927 = !DILocation(line: 2707, column: 7, scope: !10813)
!10928 = !DILocation(line: 2675, column: 35, scope: !10808)
!10929 = !DILocation(line: 2675, column: 7, scope: !10808)
!10930 = distinct !{!10930, !10811, !10931}
!10931 = !DILocation(line: 2707, column: 7, scope: !10804)
!10932 = !DILocation(line: 2708, column: 6, scope: !10805)
!10933 = !DILocation(line: 2710, column: 7, scope: !10934)
!10934 = distinct !DILexicalBlock(scope: !10801, file: !3, line: 2709, column: 11)
!10935 = !DILocation(line: 2711, column: 14, scope: !10936)
!10936 = distinct !DILexicalBlock(scope: !10934, file: !3, line: 2711, column: 7)
!10937 = !DILocation(line: 2711, column: 12, scope: !10936)
!10938 = !DILocation(line: 2711, column: 19, scope: !10939)
!10939 = distinct !DILexicalBlock(scope: !10936, file: !3, line: 2711, column: 7)
!10940 = !DILocation(line: 2711, column: 23, scope: !10939)
!10941 = !DILocation(line: 2711, column: 21, scope: !10939)
!10942 = !DILocation(line: 2711, column: 7, scope: !10936)
!10943 = !DILocation(line: 2712, column: 15, scope: !10944)
!10944 = distinct !DILexicalBlock(scope: !10945, file: !3, line: 2712, column: 8)
!10945 = distinct !DILexicalBlock(scope: !10939, file: !3, line: 2711, column: 39)
!10946 = !DILocation(line: 2712, column: 13, scope: !10944)
!10947 = !DILocation(line: 2712, column: 20, scope: !10948)
!10948 = distinct !DILexicalBlock(scope: !10944, file: !3, line: 2712, column: 8)
!10949 = !DILocation(line: 2712, column: 24, scope: !10948)
!10950 = !DILocation(line: 2712, column: 22, scope: !10948)
!10951 = !DILocation(line: 2712, column: 8, scope: !10944)
!10952 = !DILocalVariable(name: "a", scope: !10953, file: !3, line: 2713, type: !1306)
!10953 = distinct !DILexicalBlock(scope: !10948, file: !3, line: 2712, column: 40)
!10954 = !DILocation(line: 2713, column: 16, scope: !10953)
!10955 = !DILocation(line: 2713, column: 43, scope: !10953)
!10956 = !DILocation(line: 2713, column: 57, scope: !10953)
!10957 = !DILocation(line: 2713, column: 60, scope: !10953)
!10958 = !DILocation(line: 2713, column: 62, scope: !10953)
!10959 = !DILocation(line: 2713, column: 20, scope: !10953)
!10960 = !DILocalVariable(name: "b", scope: !10953, file: !3, line: 2714, type: !1306)
!10961 = !DILocation(line: 2714, column: 16, scope: !10953)
!10962 = !DILocation(line: 2714, column: 43, scope: !10953)
!10963 = !DILocation(line: 2714, column: 57, scope: !10953)
!10964 = !DILocation(line: 2714, column: 59, scope: !10953)
!10965 = !DILocation(line: 2714, column: 64, scope: !10953)
!10966 = !DILocation(line: 2714, column: 66, scope: !10953)
!10967 = !DILocation(line: 2714, column: 20, scope: !10953)
!10968 = !DILocalVariable(name: "c", scope: !10953, file: !3, line: 2715, type: !1306)
!10969 = !DILocation(line: 2715, column: 16, scope: !10953)
!10970 = !DILocation(line: 2715, column: 43, scope: !10953)
!10971 = !DILocation(line: 2715, column: 57, scope: !10953)
!10972 = !DILocation(line: 2715, column: 59, scope: !10953)
!10973 = !DILocation(line: 2715, column: 64, scope: !10953)
!10974 = !DILocation(line: 2715, column: 66, scope: !10953)
!10975 = !DILocation(line: 2715, column: 20, scope: !10953)
!10976 = !DILocalVariable(name: "d", scope: !10953, file: !3, line: 2716, type: !1306)
!10977 = !DILocation(line: 2716, column: 16, scope: !10953)
!10978 = !DILocation(line: 2716, column: 43, scope: !10953)
!10979 = !DILocation(line: 2716, column: 57, scope: !10953)
!10980 = !DILocation(line: 2716, column: 60, scope: !10953)
!10981 = !DILocation(line: 2716, column: 62, scope: !10953)
!10982 = !DILocation(line: 2716, column: 20, scope: !10953)
!10983 = !DILocation(line: 2718, column: 28, scope: !10953)
!10984 = !DILocation(line: 2718, column: 31, scope: !10953)
!10985 = !DILocation(line: 2718, column: 34, scope: !10953)
!10986 = !DILocation(line: 2718, column: 37, scope: !10953)
!10987 = !DILocation(line: 2718, column: 9, scope: !10953)
!10988 = !DILocation(line: 2720, column: 13, scope: !10989)
!10989 = distinct !DILexicalBlock(scope: !10953, file: !3, line: 2720, column: 13)
!10990 = !DILocation(line: 2720, column: 13, scope: !10953)
!10991 = !DILocation(line: 2720, column: 28, scope: !10989)
!10992 = !DILocation(line: 2720, column: 35, scope: !10989)
!10993 = !DILocation(line: 2720, column: 42, scope: !10989)
!10994 = !DILocation(line: 2720, column: 17, scope: !10989)
!10995 = !DILocation(line: 2721, column: 21, scope: !10953)
!10996 = !DILocation(line: 2721, column: 9, scope: !10953)
!10997 = !DILocation(line: 2722, column: 13, scope: !10998)
!10998 = distinct !DILexicalBlock(scope: !10953, file: !3, line: 2722, column: 13)
!10999 = !DILocation(line: 2722, column: 13, scope: !10953)
!11000 = !DILocation(line: 2722, column: 28, scope: !10998)
!11001 = !DILocation(line: 2722, column: 36, scope: !10998)
!11002 = !DILocation(line: 2722, column: 44, scope: !10998)
!11003 = !DILocation(line: 2722, column: 17, scope: !10998)
!11004 = !DILocation(line: 2723, column: 21, scope: !10953)
!11005 = !DILocation(line: 2723, column: 9, scope: !10953)
!11006 = !DILocation(line: 2724, column: 13, scope: !11007)
!11007 = distinct !DILexicalBlock(scope: !10953, file: !3, line: 2724, column: 13)
!11008 = !DILocation(line: 2724, column: 13, scope: !10953)
!11009 = !DILocation(line: 2724, column: 28, scope: !11007)
!11010 = !DILocation(line: 2724, column: 36, scope: !11007)
!11011 = !DILocation(line: 2724, column: 44, scope: !11007)
!11012 = !DILocation(line: 2724, column: 17, scope: !11007)
!11013 = !DILocation(line: 2725, column: 21, scope: !10953)
!11014 = !DILocation(line: 2725, column: 9, scope: !10953)
!11015 = !DILocation(line: 2726, column: 13, scope: !11016)
!11016 = distinct !DILexicalBlock(scope: !10953, file: !3, line: 2726, column: 13)
!11017 = !DILocation(line: 2726, column: 13, scope: !10953)
!11018 = !DILocation(line: 2726, column: 28, scope: !11016)
!11019 = !DILocation(line: 2726, column: 35, scope: !11016)
!11020 = !DILocation(line: 2726, column: 42, scope: !11016)
!11021 = !DILocation(line: 2726, column: 17, scope: !11016)
!11022 = !DILocation(line: 2727, column: 21, scope: !10953)
!11023 = !DILocation(line: 2727, column: 9, scope: !10953)
!11024 = !DILocation(line: 2729, column: 13, scope: !11025)
!11025 = distinct !DILexicalBlock(scope: !10953, file: !3, line: 2729, column: 13)
!11026 = !DILocation(line: 2729, column: 13, scope: !10953)
!11027 = !DILocation(line: 2729, column: 20, scope: !11025)
!11028 = !DILocation(line: 2729, column: 17, scope: !11025)
!11029 = !DILocation(line: 2730, column: 8, scope: !10953)
!11030 = !DILocation(line: 2712, column: 36, scope: !10948)
!11031 = !DILocation(line: 2712, column: 8, scope: !10948)
!11032 = distinct !{!11032, !10951, !11033}
!11033 = !DILocation(line: 2730, column: 8, scope: !10944)
!11034 = !DILocation(line: 2731, column: 7, scope: !10945)
!11035 = !DILocation(line: 2711, column: 35, scope: !10939)
!11036 = !DILocation(line: 2711, column: 7, scope: !10939)
!11037 = distinct !{!11037, !10942, !11038}
!11038 = !DILocation(line: 2731, column: 7, scope: !10936)
!11039 = !DILocation(line: 2732, column: 7, scope: !10934)
!11040 = !DILocation(line: 2734, column: 5, scope: !10679)
!11041 = !DILocation(line: 2644, column: 32, scope: !10674)
!11042 = !DILocation(line: 2644, column: 5, scope: !10674)
!11043 = distinct !{!11043, !10677, !11044}
!11044 = !DILocation(line: 2734, column: 5, scope: !10671)
!11045 = !DILocation(line: 2735, column: 9, scope: !11046)
!11046 = distinct !DILexicalBlock(scope: !10662, file: !3, line: 2735, column: 9)
!11047 = !DILocation(line: 2735, column: 21, scope: !11046)
!11048 = !DILocation(line: 2735, column: 9, scope: !10662)
!11049 = !DILocation(line: 2736, column: 6, scope: !11046)
!11050 = !DILocation(line: 2737, column: 4, scope: !10662)
!11051 = !DILocation(line: 2739, column: 2, scope: !10556)
!11052 = !DILocation(line: 2602, column: 28, scope: !10551)
!11053 = !DILocation(line: 2602, column: 2, scope: !10551)
!11054 = distinct !{!11054, !10554, !11055}
!11055 = !DILocation(line: 2739, column: 2, scope: !10548)
!11056 = !DILocation(line: 2740, column: 1, scope: !10472)
!11057 = distinct !DISubprogram(name: "ccgDM_drawMappedFacesTex", scope: !3, file: !3, line: 2532, type: !2159, scopeLine: 2536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!11058 = !DILocalVariable(name: "dm", arg: 1, scope: !11057, file: !3, line: 2532, type: !11)
!11059 = !DILocation(line: 2532, column: 51, scope: !11057)
!11060 = !DILocalVariable(name: "setDrawOptions", arg: 2, scope: !11057, file: !3, line: 2533, type: !2153)
!11061 = !DILocation(line: 2533, column: 55, scope: !11057)
!11062 = !DILocalVariable(name: "compareDrawOptions", arg: 3, scope: !11057, file: !3, line: 2534, type: !2134)
!11063 = !DILocation(line: 2534, column: 59, scope: !11057)
!11064 = !DILocalVariable(name: "userData", arg: 4, scope: !11057, file: !3, line: 2535, type: !41)
!11065 = !DILocation(line: 2535, column: 44, scope: !11057)
!11066 = !DILocalVariable(name: "flag", arg: 5, scope: !11057, file: !3, line: 2535, type: !2138)
!11067 = !DILocation(line: 2535, column: 65, scope: !11057)
!11068 = !DILocation(line: 2537, column: 28, scope: !11057)
!11069 = !DILocation(line: 2537, column: 38, scope: !11057)
!11070 = !DILocation(line: 2537, column: 54, scope: !11057)
!11071 = !DILocation(line: 2537, column: 74, scope: !11057)
!11072 = !DILocation(line: 2537, column: 84, scope: !11057)
!11073 = !DILocation(line: 2537, column: 2, scope: !11057)
!11074 = !DILocation(line: 2538, column: 1, scope: !11057)
!11075 = distinct !DISubprogram(name: "ccgDM_drawMappedFacesGLSL", scope: !3, file: !3, line: 1950, type: !2163, scopeLine: 1954, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!11076 = !DILocalVariable(name: "dm", arg: 1, scope: !11075, file: !3, line: 1950, type: !11)
!11077 = !DILocation(line: 1950, column: 52, scope: !11075)
!11078 = !DILocalVariable(name: "setMaterial", arg: 2, scope: !11075, file: !3, line: 1951, type: !2102)
!11079 = !DILocation(line: 1951, column: 53, scope: !11075)
!11080 = !DILocalVariable(name: "setDrawOptions", arg: 3, scope: !11075, file: !3, line: 1952, type: !2153)
!11081 = !DILocation(line: 1952, column: 56, scope: !11075)
!11082 = !DILocalVariable(name: "userData", arg: 4, scope: !11075, file: !3, line: 1953, type: !41)
!11083 = !DILocation(line: 1953, column: 45, scope: !11075)
!11084 = !DILocalVariable(name: "ccgdm", scope: !11075, file: !3, line: 1955, type: !2295)
!11085 = !DILocation(line: 1955, column: 18, scope: !11075)
!11086 = !DILocation(line: 1955, column: 45, scope: !11075)
!11087 = !DILocation(line: 1955, column: 26, scope: !11075)
!11088 = !DILocalVariable(name: "ss", scope: !11075, file: !3, line: 1956, type: !6)
!11089 = !DILocation(line: 1956, column: 14, scope: !11075)
!11090 = !DILocation(line: 1956, column: 19, scope: !11075)
!11091 = !DILocation(line: 1956, column: 26, scope: !11075)
!11092 = !DILocalVariable(name: "key", scope: !11075, file: !3, line: 1957, type: !5667)
!11093 = !DILocation(line: 1957, column: 9, scope: !11075)
!11094 = !DILocalVariable(name: "gattribs", scope: !11075, file: !3, line: 1958, type: !11095)
!11095 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPUVertexAttribs", file: !11096, line: 206, baseType: !11097)
!11096 = !DIFile(filename: "blender/source/blender/gpu/GPU_extensions.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!11097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GPUVertexAttribs", file: !11096, line: 196, size: 20512, elements: !11098)
!11098 = !{!11099, !11108}
!11099 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !11097, file: !11096, line: 203, baseType: !11100, size: 20480)
!11100 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11101, size: 20480, elements: !318)
!11101 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11097, file: !11096, line: 197, size: 640, elements: !11102)
!11102 = !{!11103, !11104, !11105, !11106, !11107}
!11103 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !11101, file: !11096, line: 198, baseType: !27, size: 32)
!11104 = !DIDerivedType(tag: DW_TAG_member, name: "glindex", scope: !11101, file: !11096, line: 199, baseType: !27, size: 32, offset: 32)
!11105 = !DIDerivedType(tag: DW_TAG_member, name: "gltexco", scope: !11101, file: !11096, line: 200, baseType: !27, size: 32, offset: 64)
!11106 = !DIDerivedType(tag: DW_TAG_member, name: "attribid", scope: !11101, file: !11096, line: 201, baseType: !27, size: 32, offset: 96)
!11107 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !11101, file: !11096, line: 202, baseType: !36, size: 512, offset: 128)
!11108 = !DIDerivedType(tag: DW_TAG_member, name: "totlayer", scope: !11097, file: !11096, line: 205, baseType: !27, size: 32, offset: 20480)
!11109 = !DILocation(line: 1958, column: 19, scope: !11075)
!11110 = !DILocalVariable(name: "attribs", scope: !11075, file: !3, line: 1959, type: !11111)
!11111 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMVertexAttribs", file: !13, line: 743, baseType: !11112)
!11112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMVertexAttribs", file: !13, line: 721, size: 3008, elements: !11113)
!11113 = !{!11114, !11122, !11129, !11135, !11142, !11143, !11144, !11145}
!11114 = !DIDerivedType(tag: DW_TAG_member, name: "tface", scope: !11112, file: !13, line: 725, baseType: !11115, size: 1536)
!11115 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11116, size: 1536, elements: !452)
!11116 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11112, file: !13, line: 722, size: 192, elements: !11117)
!11117 = !{!11118, !11119, !11120, !11121}
!11118 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !11116, file: !13, line: 723, baseType: !2121, size: 64)
!11119 = !DIDerivedType(tag: DW_TAG_member, name: "em_offset", scope: !11116, file: !13, line: 724, baseType: !27, size: 32, offset: 64)
!11120 = !DIDerivedType(tag: DW_TAG_member, name: "gl_index", scope: !11116, file: !13, line: 724, baseType: !27, size: 32, offset: 96)
!11121 = !DIDerivedType(tag: DW_TAG_member, name: "gl_texco", scope: !11116, file: !13, line: 724, baseType: !27, size: 32, offset: 128)
!11122 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !11112, file: !13, line: 730, baseType: !11123, size: 1024, offset: 1536)
!11123 = !DICompositeType(tag: DW_TAG_array_type, baseType: !11124, size: 1024, elements: !452)
!11124 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11112, file: !13, line: 727, size: 128, elements: !11125)
!11125 = !{!11126, !11127, !11128}
!11126 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !11124, file: !13, line: 728, baseType: !5279, size: 64)
!11127 = !DIDerivedType(tag: DW_TAG_member, name: "em_offset", scope: !11124, file: !13, line: 729, baseType: !27, size: 32, offset: 64)
!11128 = !DIDerivedType(tag: DW_TAG_member, name: "gl_index", scope: !11124, file: !13, line: 729, baseType: !27, size: 32, offset: 96)
!11129 = !DIDerivedType(tag: DW_TAG_member, name: "tang", scope: !11112, file: !13, line: 735, baseType: !11130, size: 128, offset: 2560)
!11130 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11112, file: !13, line: 732, size: 128, elements: !11131)
!11131 = !{!11132, !11133, !11134}
!11132 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !11130, file: !13, line: 733, baseType: !2101, size: 64)
!11133 = !DIDerivedType(tag: DW_TAG_member, name: "em_offset", scope: !11130, file: !13, line: 734, baseType: !27, size: 32, offset: 64)
!11134 = !DIDerivedType(tag: DW_TAG_member, name: "gl_index", scope: !11130, file: !13, line: 734, baseType: !27, size: 32, offset: 96)
!11135 = !DIDerivedType(tag: DW_TAG_member, name: "orco", scope: !11112, file: !13, line: 740, baseType: !11136, size: 192, offset: 2688)
!11136 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !11112, file: !13, line: 737, size: 192, elements: !11137)
!11137 = !{!11138, !11139, !11140, !11141}
!11138 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !11136, file: !13, line: 738, baseType: !1301, size: 64)
!11139 = !DIDerivedType(tag: DW_TAG_member, name: "em_offset", scope: !11136, file: !13, line: 739, baseType: !27, size: 32, offset: 64)
!11140 = !DIDerivedType(tag: DW_TAG_member, name: "gl_index", scope: !11136, file: !13, line: 739, baseType: !27, size: 32, offset: 96)
!11141 = !DIDerivedType(tag: DW_TAG_member, name: "gl_texco", scope: !11136, file: !13, line: 739, baseType: !27, size: 32, offset: 128)
!11142 = !DIDerivedType(tag: DW_TAG_member, name: "tottface", scope: !11112, file: !13, line: 742, baseType: !27, size: 32, offset: 2880)
!11143 = !DIDerivedType(tag: DW_TAG_member, name: "totmcol", scope: !11112, file: !13, line: 742, baseType: !27, size: 32, offset: 2912)
!11144 = !DIDerivedType(tag: DW_TAG_member, name: "tottang", scope: !11112, file: !13, line: 742, baseType: !27, size: 32, offset: 2944)
!11145 = !DIDerivedType(tag: DW_TAG_member, name: "totorco", scope: !11112, file: !13, line: 742, baseType: !27, size: 32, offset: 2976)
!11146 = !DILocation(line: 1959, column: 18, scope: !11075)
!11147 = !DILocalVariable(name: "gridSize", scope: !11075, file: !3, line: 1961, type: !27)
!11148 = !DILocation(line: 1961, column: 6, scope: !11075)
!11149 = !DILocation(line: 1961, column: 40, scope: !11075)
!11150 = !DILocation(line: 1961, column: 17, scope: !11075)
!11151 = !DILocalVariable(name: "gridFaces", scope: !11075, file: !3, line: 1962, type: !27)
!11152 = !DILocation(line: 1962, column: 6, scope: !11075)
!11153 = !DILocation(line: 1962, column: 18, scope: !11075)
!11154 = !DILocation(line: 1962, column: 27, scope: !11075)
!11155 = !DILocalVariable(name: "edgeSize", scope: !11075, file: !3, line: 1963, type: !27)
!11156 = !DILocation(line: 1963, column: 6, scope: !11075)
!11157 = !DILocation(line: 1963, column: 40, scope: !11075)
!11158 = !DILocation(line: 1963, column: 17, scope: !11075)
!11159 = !DILocalVariable(name: "faceFlags", scope: !11075, file: !3, line: 1964, type: !2024)
!11160 = !DILocation(line: 1964, column: 13, scope: !11075)
!11161 = !DILocation(line: 1964, column: 25, scope: !11075)
!11162 = !DILocation(line: 1964, column: 32, scope: !11075)
!11163 = !DILocalVariable(name: "lnors", scope: !11075, file: !3, line: 1965, type: !10022)
!11164 = !DILocation(line: 1965, column: 10, scope: !11075)
!11165 = !DILocation(line: 1965, column: 25, scope: !11075)
!11166 = !DILocation(line: 1965, column: 29, scope: !11075)
!11167 = !DILocation(line: 1965, column: 50, scope: !11075)
!11168 = !DILocalVariable(name: "a", scope: !11075, file: !3, line: 1966, type: !27)
!11169 = !DILocation(line: 1966, column: 6, scope: !11075)
!11170 = !DILocalVariable(name: "i", scope: !11075, file: !3, line: 1966, type: !27)
!11171 = !DILocation(line: 1966, column: 9, scope: !11075)
!11172 = !DILocalVariable(name: "do_draw", scope: !11075, file: !3, line: 1966, type: !27)
!11173 = !DILocation(line: 1966, column: 12, scope: !11075)
!11174 = !DILocalVariable(name: "numVerts", scope: !11075, file: !3, line: 1966, type: !27)
!11175 = !DILocation(line: 1966, column: 21, scope: !11075)
!11176 = !DILocalVariable(name: "matnr", scope: !11075, file: !3, line: 1966, type: !27)
!11177 = !DILocation(line: 1966, column: 31, scope: !11075)
!11178 = !DILocalVariable(name: "new_matnr", scope: !11075, file: !3, line: 1966, type: !27)
!11179 = !DILocation(line: 1966, column: 38, scope: !11075)
!11180 = !DILocalVariable(name: "totface", scope: !11075, file: !3, line: 1966, type: !27)
!11181 = !DILocation(line: 1966, column: 49, scope: !11075)
!11182 = !DILocation(line: 1968, column: 26, scope: !11075)
!11183 = !DILocation(line: 1968, column: 2, scope: !11075)
!11184 = !DILocation(line: 1969, column: 20, scope: !11075)
!11185 = !DILocation(line: 1969, column: 2, scope: !11075)
!11186 = !DILocation(line: 1971, column: 10, scope: !11075)
!11187 = !DILocation(line: 1972, column: 8, scope: !11075)
!11188 = !DILocation(line: 1982, column: 35, scope: !11075)
!11189 = !DILocation(line: 1982, column: 12, scope: !11075)
!11190 = !DILocation(line: 1982, column: 10, scope: !11075)
!11191 = !DILocation(line: 1983, column: 9, scope: !11192)
!11192 = distinct !DILexicalBlock(scope: !11075, file: !3, line: 1983, column: 2)
!11193 = !DILocation(line: 1983, column: 16, scope: !11192)
!11194 = !DILocation(line: 1983, column: 7, scope: !11192)
!11195 = !DILocation(line: 1983, column: 21, scope: !11196)
!11196 = distinct !DILexicalBlock(scope: !11192, file: !3, line: 1983, column: 2)
!11197 = !DILocation(line: 1983, column: 25, scope: !11196)
!11198 = !DILocation(line: 1983, column: 23, scope: !11196)
!11199 = !DILocation(line: 1983, column: 2, scope: !11192)
!11200 = !DILocalVariable(name: "f", scope: !11201, file: !3, line: 1984, type: !2461)
!11201 = distinct !DILexicalBlock(scope: !11196, file: !3, line: 1983, column: 39)
!11202 = !DILocation(line: 1984, column: 12, scope: !11201)
!11203 = !DILocation(line: 1984, column: 16, scope: !11201)
!11204 = !DILocation(line: 1984, column: 23, scope: !11201)
!11205 = !DILocation(line: 1984, column: 31, scope: !11201)
!11206 = !DILocation(line: 1984, column: 34, scope: !11201)
!11207 = !DILocalVariable(name: "ln", scope: !11201, file: !3, line: 1985, type: !10022)
!11208 = !DILocation(line: 1985, column: 11, scope: !11201)
!11209 = !DILocalVariable(name: "S", scope: !11201, file: !3, line: 1986, type: !27)
!11210 = !DILocation(line: 1986, column: 7, scope: !11201)
!11211 = !DILocalVariable(name: "x", scope: !11201, file: !3, line: 1986, type: !27)
!11212 = !DILocation(line: 1986, column: 10, scope: !11201)
!11213 = !DILocalVariable(name: "y", scope: !11201, file: !3, line: 1986, type: !27)
!11214 = !DILocation(line: 1986, column: 13, scope: !11201)
!11215 = !DILocalVariable(name: "drawSmooth", scope: !11201, file: !3, line: 1986, type: !27)
!11216 = !DILocation(line: 1986, column: 16, scope: !11201)
!11217 = !DILocalVariable(name: "index", scope: !11201, file: !3, line: 1987, type: !27)
!11218 = !DILocation(line: 1987, column: 7, scope: !11201)
!11219 = !DILocation(line: 1987, column: 15, scope: !11201)
!11220 = !DILocalVariable(name: "origIndex", scope: !11201, file: !3, line: 1988, type: !27)
!11221 = !DILocation(line: 1988, column: 7, scope: !11201)
!11222 = !DILocation(line: 1988, column: 41, scope: !11201)
!11223 = !DILocation(line: 1988, column: 45, scope: !11201)
!11224 = !DILocation(line: 1988, column: 19, scope: !11201)
!11225 = !DILocation(line: 1990, column: 41, scope: !11201)
!11226 = !DILocation(line: 1990, column: 14, scope: !11201)
!11227 = !DILocation(line: 1990, column: 12, scope: !11201)
!11228 = !DILocation(line: 1992, column: 7, scope: !11229)
!11229 = distinct !DILexicalBlock(scope: !11201, file: !3, line: 1992, column: 7)
!11230 = !DILocation(line: 1992, column: 7, scope: !11201)
!11231 = !DILocation(line: 1993, column: 18, scope: !11232)
!11232 = distinct !DILexicalBlock(scope: !11229, file: !3, line: 1992, column: 18)
!11233 = !DILocation(line: 1993, column: 24, scope: !11232)
!11234 = !DILocation(line: 1993, column: 28, scope: !11232)
!11235 = !DILocation(line: 1993, column: 38, scope: !11232)
!11236 = !DILocation(line: 1993, column: 45, scope: !11232)
!11237 = !DILocation(line: 1993, column: 50, scope: !11232)
!11238 = !DILocation(line: 1993, column: 15, scope: !11232)
!11239 = !DILocation(line: 1994, column: 16, scope: !11232)
!11240 = !DILocation(line: 1994, column: 26, scope: !11232)
!11241 = !DILocation(line: 1994, column: 33, scope: !11232)
!11242 = !DILocation(line: 1994, column: 40, scope: !11232)
!11243 = !DILocation(line: 1994, column: 14, scope: !11232)
!11244 = !DILocation(line: 1995, column: 3, scope: !11232)
!11245 = !DILocation(line: 1997, column: 15, scope: !11246)
!11246 = distinct !DILexicalBlock(scope: !11229, file: !3, line: 1996, column: 8)
!11247 = !DILocation(line: 1998, column: 14, scope: !11246)
!11248 = !DILocation(line: 2001, column: 7, scope: !11249)
!11249 = distinct !DILexicalBlock(scope: !11201, file: !3, line: 2001, column: 7)
!11250 = !DILocation(line: 2001, column: 7, scope: !11201)
!11251 = !DILocation(line: 2002, column: 9, scope: !11252)
!11252 = distinct !DILexicalBlock(scope: !11249, file: !3, line: 2001, column: 14)
!11253 = !DILocation(line: 2002, column: 7, scope: !11252)
!11254 = !DILocation(line: 2003, column: 13, scope: !11252)
!11255 = !DILocation(line: 2003, column: 25, scope: !11252)
!11256 = !DILocation(line: 2003, column: 23, scope: !11252)
!11257 = !DILocation(line: 2003, column: 37, scope: !11252)
!11258 = !DILocation(line: 2003, column: 35, scope: !11252)
!11259 = !DILocation(line: 2003, column: 10, scope: !11252)
!11260 = !DILocation(line: 2004, column: 3, scope: !11252)
!11261 = !DILocation(line: 2006, column: 7, scope: !11262)
!11262 = distinct !DILexicalBlock(scope: !11201, file: !3, line: 2006, column: 7)
!11263 = !DILocation(line: 2006, column: 20, scope: !11262)
!11264 = !DILocation(line: 2006, column: 17, scope: !11262)
!11265 = !DILocation(line: 2006, column: 7, scope: !11201)
!11266 = !DILocation(line: 2007, column: 14, scope: !11267)
!11267 = distinct !DILexicalBlock(scope: !11262, file: !3, line: 2006, column: 27)
!11268 = !DILocation(line: 2007, column: 34, scope: !11267)
!11269 = !DILocation(line: 2007, column: 32, scope: !11267)
!11270 = !DILocation(line: 2007, column: 45, scope: !11267)
!11271 = !DILocation(line: 2007, column: 12, scope: !11267)
!11272 = !DILocation(line: 2008, column: 8, scope: !11273)
!11273 = distinct !DILexicalBlock(scope: !11267, file: !3, line: 2008, column: 8)
!11274 = !DILocation(line: 2008, column: 8, scope: !11267)
!11275 = !DILocation(line: 2009, column: 35, scope: !11273)
!11276 = !DILocation(line: 2009, column: 5, scope: !11273)
!11277 = !DILocation(line: 2010, column: 3, scope: !11267)
!11278 = !DILocation(line: 2012, column: 8, scope: !11279)
!11279 = distinct !DILexicalBlock(scope: !11201, file: !3, line: 2012, column: 7)
!11280 = !DILocation(line: 2012, column: 16, scope: !11279)
!11281 = !DILocation(line: 2012, column: 20, scope: !11279)
!11282 = !DILocation(line: 2012, column: 35, scope: !11279)
!11283 = !DILocation(line: 2012, column: 39, scope: !11279)
!11284 = !DILocation(line: 2012, column: 49, scope: !11279)
!11285 = !DILocation(line: 2012, column: 68, scope: !11279)
!11286 = !DILocation(line: 2013, column: 20, scope: !11279)
!11287 = !DILocation(line: 2013, column: 35, scope: !11279)
!11288 = !DILocation(line: 2013, column: 45, scope: !11279)
!11289 = !DILocation(line: 2013, column: 56, scope: !11279)
!11290 = !DILocation(line: 2012, column: 7, scope: !11201)
!11291 = !DILocation(line: 2015, column: 9, scope: !11292)
!11292 = distinct !DILexicalBlock(scope: !11279, file: !3, line: 2014, column: 3)
!11293 = !DILocation(line: 2015, column: 21, scope: !11292)
!11294 = !DILocation(line: 2015, column: 19, scope: !11292)
!11295 = !DILocation(line: 2015, column: 33, scope: !11292)
!11296 = !DILocation(line: 2015, column: 31, scope: !11292)
!11297 = !DILocation(line: 2015, column: 6, scope: !11292)
!11298 = !DILocation(line: 2016, column: 4, scope: !11292)
!11299 = !DILocation(line: 2019, column: 16, scope: !11201)
!11300 = !DILocation(line: 2019, column: 3, scope: !11201)
!11301 = !DILocation(line: 2020, column: 10, scope: !11302)
!11302 = distinct !DILexicalBlock(scope: !11201, file: !3, line: 2020, column: 3)
!11303 = !DILocation(line: 2020, column: 8, scope: !11302)
!11304 = !DILocation(line: 2020, column: 15, scope: !11305)
!11305 = distinct !DILexicalBlock(scope: !11302, file: !3, line: 2020, column: 3)
!11306 = !DILocation(line: 2020, column: 19, scope: !11305)
!11307 = !DILocation(line: 2020, column: 17, scope: !11305)
!11308 = !DILocation(line: 2020, column: 3, scope: !11302)
!11309 = !DILocalVariable(name: "faceGridData", scope: !11310, file: !3, line: 2021, type: !2371)
!11310 = distinct !DILexicalBlock(scope: !11305, file: !3, line: 2020, column: 34)
!11311 = !DILocation(line: 2021, column: 13, scope: !11310)
!11312 = !DILocation(line: 2021, column: 60, scope: !11310)
!11313 = !DILocation(line: 2021, column: 64, scope: !11310)
!11314 = !DILocation(line: 2021, column: 67, scope: !11310)
!11315 = !DILocation(line: 2021, column: 28, scope: !11310)
!11316 = !DILocalVariable(name: "vda", scope: !11310, file: !3, line: 2022, type: !2371)
!11317 = !DILocation(line: 2022, column: 13, scope: !11310)
!11318 = !DILocalVariable(name: "vdb", scope: !11310, file: !3, line: 2022, type: !2371)
!11319 = !DILocation(line: 2022, column: 19, scope: !11310)
!11320 = !DILocation(line: 2024, column: 8, scope: !11321)
!11321 = distinct !DILexicalBlock(scope: !11310, file: !3, line: 2024, column: 8)
!11322 = !DILocation(line: 2024, column: 8, scope: !11310)
!11323 = !DILocation(line: 2025, column: 5, scope: !11324)
!11324 = distinct !DILexicalBlock(scope: !11321, file: !3, line: 2024, column: 12)
!11325 = !DILocation(line: 2026, column: 12, scope: !11326)
!11326 = distinct !DILexicalBlock(scope: !11324, file: !3, line: 2026, column: 5)
!11327 = !DILocation(line: 2026, column: 10, scope: !11326)
!11328 = !DILocation(line: 2026, column: 17, scope: !11329)
!11329 = distinct !DILexicalBlock(scope: !11326, file: !3, line: 2026, column: 5)
!11330 = !DILocation(line: 2026, column: 21, scope: !11329)
!11331 = !DILocation(line: 2026, column: 19, scope: !11329)
!11332 = !DILocation(line: 2026, column: 5, scope: !11326)
!11333 = !DILocation(line: 2027, column: 13, scope: !11334)
!11334 = distinct !DILexicalBlock(scope: !11335, file: !3, line: 2027, column: 6)
!11335 = distinct !DILexicalBlock(scope: !11329, file: !3, line: 2026, column: 37)
!11336 = !DILocation(line: 2027, column: 11, scope: !11334)
!11337 = !DILocation(line: 2027, column: 18, scope: !11338)
!11338 = distinct !DILexicalBlock(scope: !11334, file: !3, line: 2027, column: 6)
!11339 = !DILocation(line: 2027, column: 22, scope: !11338)
!11340 = !DILocation(line: 2027, column: 20, scope: !11338)
!11341 = !DILocation(line: 2027, column: 6, scope: !11334)
!11342 = !DILocalVariable(name: "aco", scope: !11343, file: !3, line: 2028, type: !1306)
!11343 = distinct !DILexicalBlock(scope: !11338, file: !3, line: 2027, column: 38)
!11344 = !DILocation(line: 2028, column: 14, scope: !11343)
!11345 = !DILocation(line: 2028, column: 43, scope: !11343)
!11346 = !DILocation(line: 2028, column: 57, scope: !11343)
!11347 = !DILocation(line: 2028, column: 60, scope: !11343)
!11348 = !DILocation(line: 2028, column: 20, scope: !11343)
!11349 = !DILocalVariable(name: "bco", scope: !11343, file: !3, line: 2029, type: !1306)
!11350 = !DILocation(line: 2029, column: 14, scope: !11343)
!11351 = !DILocation(line: 2029, column: 43, scope: !11343)
!11352 = !DILocation(line: 2029, column: 57, scope: !11343)
!11353 = !DILocation(line: 2029, column: 59, scope: !11343)
!11354 = !DILocation(line: 2029, column: 64, scope: !11343)
!11355 = !DILocation(line: 2029, column: 20, scope: !11343)
!11356 = !DILocalVariable(name: "cco", scope: !11343, file: !3, line: 2030, type: !1306)
!11357 = !DILocation(line: 2030, column: 14, scope: !11343)
!11358 = !DILocation(line: 2030, column: 43, scope: !11343)
!11359 = !DILocation(line: 2030, column: 57, scope: !11343)
!11360 = !DILocation(line: 2030, column: 59, scope: !11343)
!11361 = !DILocation(line: 2030, column: 64, scope: !11343)
!11362 = !DILocation(line: 2030, column: 66, scope: !11343)
!11363 = !DILocation(line: 2030, column: 20, scope: !11343)
!11364 = !DILocalVariable(name: "dco", scope: !11343, file: !3, line: 2031, type: !1306)
!11365 = !DILocation(line: 2031, column: 14, scope: !11343)
!11366 = !DILocation(line: 2031, column: 43, scope: !11343)
!11367 = !DILocation(line: 2031, column: 57, scope: !11343)
!11368 = !DILocation(line: 2031, column: 60, scope: !11343)
!11369 = !DILocation(line: 2031, column: 62, scope: !11343)
!11370 = !DILocation(line: 2031, column: 20, scope: !11343)
!11371 = !DILocation(line: 2033, column: 7, scope: !11372)
!11372 = distinct !DILexicalBlock(scope: !11373, file: !3, line: 2033, column: 7)
!11373 = distinct !DILexicalBlock(scope: !11343, file: !3, line: 2033, column: 7)
!11374 = !DILocation(line: 2033, column: 7, scope: !11373)
!11375 = !DILocation(line: 2034, column: 19, scope: !11343)
!11376 = !DILocation(line: 2034, column: 7, scope: !11343)
!11377 = !DILocation(line: 2035, column: 19, scope: !11343)
!11378 = !DILocation(line: 2035, column: 7, scope: !11343)
!11379 = !DILocation(line: 2036, column: 7, scope: !11380)
!11380 = distinct !DILexicalBlock(scope: !11381, file: !3, line: 2036, column: 7)
!11381 = distinct !DILexicalBlock(scope: !11343, file: !3, line: 2036, column: 7)
!11382 = !DILocation(line: 2036, column: 7, scope: !11381)
!11383 = !DILocation(line: 2037, column: 19, scope: !11343)
!11384 = !DILocation(line: 2037, column: 7, scope: !11343)
!11385 = !DILocation(line: 2038, column: 19, scope: !11343)
!11386 = !DILocation(line: 2038, column: 7, scope: !11343)
!11387 = !DILocation(line: 2039, column: 7, scope: !11388)
!11388 = distinct !DILexicalBlock(scope: !11389, file: !3, line: 2039, column: 7)
!11389 = distinct !DILexicalBlock(scope: !11343, file: !3, line: 2039, column: 7)
!11390 = !DILocation(line: 2039, column: 7, scope: !11389)
!11391 = !DILocation(line: 2040, column: 19, scope: !11343)
!11392 = !DILocation(line: 2040, column: 7, scope: !11343)
!11393 = !DILocation(line: 2041, column: 19, scope: !11343)
!11394 = !DILocation(line: 2041, column: 7, scope: !11343)
!11395 = !DILocation(line: 2042, column: 7, scope: !11396)
!11396 = distinct !DILexicalBlock(scope: !11397, file: !3, line: 2042, column: 7)
!11397 = distinct !DILexicalBlock(scope: !11343, file: !3, line: 2042, column: 7)
!11398 = !DILocation(line: 2042, column: 7, scope: !11397)
!11399 = !DILocation(line: 2043, column: 19, scope: !11343)
!11400 = !DILocation(line: 2043, column: 7, scope: !11343)
!11401 = !DILocation(line: 2044, column: 19, scope: !11343)
!11402 = !DILocation(line: 2044, column: 7, scope: !11343)
!11403 = !DILocation(line: 2046, column: 9, scope: !11343)
!11404 = !DILocation(line: 2047, column: 8, scope: !11343)
!11405 = !DILocation(line: 2048, column: 6, scope: !11343)
!11406 = !DILocation(line: 2027, column: 34, scope: !11338)
!11407 = !DILocation(line: 2027, column: 6, scope: !11338)
!11408 = distinct !{!11408, !11341, !11409}
!11409 = !DILocation(line: 2048, column: 6, scope: !11334)
!11410 = !DILocation(line: 2049, column: 5, scope: !11335)
!11411 = !DILocation(line: 2026, column: 33, scope: !11329)
!11412 = !DILocation(line: 2026, column: 5, scope: !11329)
!11413 = distinct !{!11413, !11332, !11414}
!11414 = !DILocation(line: 2049, column: 5, scope: !11326)
!11415 = !DILocation(line: 2050, column: 5, scope: !11324)
!11416 = !DILocation(line: 2051, column: 4, scope: !11324)
!11417 = !DILocation(line: 2052, column: 13, scope: !11418)
!11418 = distinct !DILexicalBlock(scope: !11321, file: !3, line: 2052, column: 13)
!11419 = !DILocation(line: 2052, column: 13, scope: !11321)
!11420 = !DILocation(line: 2053, column: 12, scope: !11421)
!11421 = distinct !DILexicalBlock(scope: !11422, file: !3, line: 2053, column: 5)
!11422 = distinct !DILexicalBlock(scope: !11418, file: !3, line: 2052, column: 25)
!11423 = !DILocation(line: 2053, column: 10, scope: !11421)
!11424 = !DILocation(line: 2053, column: 17, scope: !11425)
!11425 = distinct !DILexicalBlock(scope: !11421, file: !3, line: 2053, column: 5)
!11426 = !DILocation(line: 2053, column: 21, scope: !11425)
!11427 = !DILocation(line: 2053, column: 19, scope: !11425)
!11428 = !DILocation(line: 2053, column: 5, scope: !11421)
!11429 = !DILocation(line: 2054, column: 6, scope: !11430)
!11430 = distinct !DILexicalBlock(scope: !11425, file: !3, line: 2053, column: 37)
!11431 = !DILocation(line: 2055, column: 13, scope: !11432)
!11432 = distinct !DILexicalBlock(scope: !11430, file: !3, line: 2055, column: 6)
!11433 = !DILocation(line: 2055, column: 11, scope: !11432)
!11434 = !DILocation(line: 2055, column: 18, scope: !11435)
!11435 = distinct !DILexicalBlock(scope: !11432, file: !3, line: 2055, column: 6)
!11436 = !DILocation(line: 2055, column: 22, scope: !11435)
!11437 = !DILocation(line: 2055, column: 20, scope: !11435)
!11438 = !DILocation(line: 2055, column: 6, scope: !11432)
!11439 = !DILocation(line: 2056, column: 33, scope: !11440)
!11440 = distinct !DILexicalBlock(scope: !11435, file: !3, line: 2055, column: 38)
!11441 = !DILocation(line: 2056, column: 47, scope: !11440)
!11442 = !DILocation(line: 2056, column: 50, scope: !11440)
!11443 = !DILocation(line: 2056, column: 52, scope: !11440)
!11444 = !DILocation(line: 2056, column: 13, scope: !11440)
!11445 = !DILocation(line: 2056, column: 11, scope: !11440)
!11446 = !DILocation(line: 2057, column: 33, scope: !11440)
!11447 = !DILocation(line: 2057, column: 47, scope: !11440)
!11448 = !DILocation(line: 2057, column: 50, scope: !11440)
!11449 = !DILocation(line: 2057, column: 52, scope: !11440)
!11450 = !DILocation(line: 2057, column: 13, scope: !11440)
!11451 = !DILocation(line: 2057, column: 11, scope: !11440)
!11452 = !DILocation(line: 2059, column: 7, scope: !11453)
!11453 = distinct !DILexicalBlock(scope: !11454, file: !3, line: 2059, column: 7)
!11454 = distinct !DILexicalBlock(scope: !11440, file: !3, line: 2059, column: 7)
!11455 = !DILocation(line: 2059, column: 7, scope: !11454)
!11456 = !DILocation(line: 2060, column: 37, scope: !11440)
!11457 = !DILocation(line: 2060, column: 19, scope: !11440)
!11458 = !DILocation(line: 2060, column: 7, scope: !11440)
!11459 = !DILocation(line: 2061, column: 37, scope: !11440)
!11460 = !DILocation(line: 2061, column: 19, scope: !11440)
!11461 = !DILocation(line: 2061, column: 7, scope: !11440)
!11462 = !DILocation(line: 2063, column: 7, scope: !11463)
!11463 = distinct !DILexicalBlock(scope: !11464, file: !3, line: 2063, column: 7)
!11464 = distinct !DILexicalBlock(scope: !11440, file: !3, line: 2063, column: 7)
!11465 = !DILocation(line: 2063, column: 7, scope: !11464)
!11466 = !DILocation(line: 2064, column: 37, scope: !11440)
!11467 = !DILocation(line: 2064, column: 19, scope: !11440)
!11468 = !DILocation(line: 2064, column: 7, scope: !11440)
!11469 = !DILocation(line: 2065, column: 37, scope: !11440)
!11470 = !DILocation(line: 2065, column: 19, scope: !11440)
!11471 = !DILocation(line: 2065, column: 7, scope: !11440)
!11472 = !DILocation(line: 2067, column: 11, scope: !11473)
!11473 = distinct !DILexicalBlock(scope: !11440, file: !3, line: 2067, column: 11)
!11474 = !DILocation(line: 2067, column: 16, scope: !11473)
!11475 = !DILocation(line: 2067, column: 26, scope: !11473)
!11476 = !DILocation(line: 2067, column: 13, scope: !11473)
!11477 = !DILocation(line: 2067, column: 11, scope: !11440)
!11478 = !DILocation(line: 2068, column: 9, scope: !11473)
!11479 = !DILocation(line: 2068, column: 8, scope: !11473)
!11480 = !DILocation(line: 2069, column: 6, scope: !11440)
!11481 = !DILocation(line: 2055, column: 34, scope: !11435)
!11482 = !DILocation(line: 2055, column: 6, scope: !11435)
!11483 = distinct !{!11483, !11438, !11484}
!11484 = !DILocation(line: 2069, column: 6, scope: !11432)
!11485 = !DILocation(line: 2071, column: 32, scope: !11430)
!11486 = !DILocation(line: 2071, column: 46, scope: !11430)
!11487 = !DILocation(line: 2071, column: 49, scope: !11430)
!11488 = !DILocation(line: 2071, column: 51, scope: !11430)
!11489 = !DILocation(line: 2071, column: 12, scope: !11430)
!11490 = !DILocation(line: 2071, column: 10, scope: !11430)
!11491 = !DILocation(line: 2072, column: 32, scope: !11430)
!11492 = !DILocation(line: 2072, column: 46, scope: !11430)
!11493 = !DILocation(line: 2072, column: 49, scope: !11430)
!11494 = !DILocation(line: 2072, column: 51, scope: !11430)
!11495 = !DILocation(line: 2072, column: 12, scope: !11430)
!11496 = !DILocation(line: 2072, column: 10, scope: !11430)
!11497 = !DILocation(line: 2074, column: 6, scope: !11498)
!11498 = distinct !DILexicalBlock(scope: !11499, file: !3, line: 2074, column: 6)
!11499 = distinct !DILexicalBlock(scope: !11430, file: !3, line: 2074, column: 6)
!11500 = !DILocation(line: 2074, column: 6, scope: !11499)
!11501 = !DILocation(line: 2075, column: 36, scope: !11430)
!11502 = !DILocation(line: 2075, column: 18, scope: !11430)
!11503 = !DILocation(line: 2075, column: 6, scope: !11430)
!11504 = !DILocation(line: 2076, column: 36, scope: !11430)
!11505 = !DILocation(line: 2076, column: 18, scope: !11430)
!11506 = !DILocation(line: 2076, column: 6, scope: !11430)
!11507 = !DILocation(line: 2078, column: 6, scope: !11508)
!11508 = distinct !DILexicalBlock(scope: !11509, file: !3, line: 2078, column: 6)
!11509 = distinct !DILexicalBlock(scope: !11430, file: !3, line: 2078, column: 6)
!11510 = !DILocation(line: 2078, column: 6, scope: !11509)
!11511 = !DILocation(line: 2079, column: 36, scope: !11430)
!11512 = !DILocation(line: 2079, column: 18, scope: !11430)
!11513 = !DILocation(line: 2079, column: 6, scope: !11430)
!11514 = !DILocation(line: 2080, column: 36, scope: !11430)
!11515 = !DILocation(line: 2080, column: 18, scope: !11430)
!11516 = !DILocation(line: 2080, column: 6, scope: !11430)
!11517 = !DILocation(line: 2082, column: 6, scope: !11430)
!11518 = !DILocation(line: 2084, column: 7, scope: !11430)
!11519 = !DILocation(line: 2085, column: 5, scope: !11430)
!11520 = !DILocation(line: 2053, column: 33, scope: !11425)
!11521 = !DILocation(line: 2053, column: 5, scope: !11425)
!11522 = distinct !{!11522, !11428, !11523}
!11523 = !DILocation(line: 2085, column: 5, scope: !11421)
!11524 = !DILocation(line: 2086, column: 4, scope: !11422)
!11525 = !DILocation(line: 2088, column: 5, scope: !11526)
!11526 = distinct !DILexicalBlock(scope: !11418, file: !3, line: 2087, column: 9)
!11527 = !DILocation(line: 2089, column: 12, scope: !11528)
!11528 = distinct !DILexicalBlock(scope: !11526, file: !3, line: 2089, column: 5)
!11529 = !DILocation(line: 2089, column: 10, scope: !11528)
!11530 = !DILocation(line: 2089, column: 17, scope: !11531)
!11531 = distinct !DILexicalBlock(scope: !11528, file: !3, line: 2089, column: 5)
!11532 = !DILocation(line: 2089, column: 21, scope: !11531)
!11533 = !DILocation(line: 2089, column: 19, scope: !11531)
!11534 = !DILocation(line: 2089, column: 5, scope: !11528)
!11535 = !DILocation(line: 2090, column: 13, scope: !11536)
!11536 = distinct !DILexicalBlock(scope: !11537, file: !3, line: 2090, column: 6)
!11537 = distinct !DILexicalBlock(scope: !11531, file: !3, line: 2089, column: 37)
!11538 = !DILocation(line: 2090, column: 11, scope: !11536)
!11539 = !DILocation(line: 2090, column: 18, scope: !11540)
!11540 = distinct !DILexicalBlock(scope: !11536, file: !3, line: 2090, column: 6)
!11541 = !DILocation(line: 2090, column: 22, scope: !11540)
!11542 = !DILocation(line: 2090, column: 20, scope: !11540)
!11543 = !DILocation(line: 2090, column: 6, scope: !11536)
!11544 = !DILocalVariable(name: "aco", scope: !11545, file: !3, line: 2091, type: !1306)
!11545 = distinct !DILexicalBlock(scope: !11540, file: !3, line: 2090, column: 38)
!11546 = !DILocation(line: 2091, column: 14, scope: !11545)
!11547 = !DILocation(line: 2091, column: 43, scope: !11545)
!11548 = !DILocation(line: 2091, column: 57, scope: !11545)
!11549 = !DILocation(line: 2091, column: 60, scope: !11545)
!11550 = !DILocation(line: 2091, column: 20, scope: !11545)
!11551 = !DILocalVariable(name: "bco", scope: !11545, file: !3, line: 2092, type: !1306)
!11552 = !DILocation(line: 2092, column: 14, scope: !11545)
!11553 = !DILocation(line: 2092, column: 43, scope: !11545)
!11554 = !DILocation(line: 2092, column: 57, scope: !11545)
!11555 = !DILocation(line: 2092, column: 59, scope: !11545)
!11556 = !DILocation(line: 2092, column: 64, scope: !11545)
!11557 = !DILocation(line: 2092, column: 20, scope: !11545)
!11558 = !DILocalVariable(name: "cco", scope: !11545, file: !3, line: 2093, type: !1306)
!11559 = !DILocation(line: 2093, column: 14, scope: !11545)
!11560 = !DILocation(line: 2093, column: 43, scope: !11545)
!11561 = !DILocation(line: 2093, column: 57, scope: !11545)
!11562 = !DILocation(line: 2093, column: 59, scope: !11545)
!11563 = !DILocation(line: 2093, column: 64, scope: !11545)
!11564 = !DILocation(line: 2093, column: 66, scope: !11545)
!11565 = !DILocation(line: 2093, column: 20, scope: !11545)
!11566 = !DILocalVariable(name: "dco", scope: !11545, file: !3, line: 2094, type: !1306)
!11567 = !DILocation(line: 2094, column: 14, scope: !11545)
!11568 = !DILocation(line: 2094, column: 43, scope: !11545)
!11569 = !DILocation(line: 2094, column: 57, scope: !11545)
!11570 = !DILocation(line: 2094, column: 60, scope: !11545)
!11571 = !DILocation(line: 2094, column: 62, scope: !11545)
!11572 = !DILocation(line: 2094, column: 20, scope: !11545)
!11573 = !DILocation(line: 2096, column: 26, scope: !11545)
!11574 = !DILocation(line: 2096, column: 31, scope: !11545)
!11575 = !DILocation(line: 2096, column: 36, scope: !11545)
!11576 = !DILocation(line: 2096, column: 41, scope: !11545)
!11577 = !DILocation(line: 2096, column: 7, scope: !11545)
!11578 = !DILocation(line: 2098, column: 7, scope: !11579)
!11579 = distinct !DILexicalBlock(scope: !11580, file: !3, line: 2098, column: 7)
!11580 = distinct !DILexicalBlock(scope: !11545, file: !3, line: 2098, column: 7)
!11581 = !DILocation(line: 2098, column: 7, scope: !11580)
!11582 = !DILocation(line: 2099, column: 19, scope: !11545)
!11583 = !DILocation(line: 2099, column: 7, scope: !11545)
!11584 = !DILocation(line: 2100, column: 7, scope: !11585)
!11585 = distinct !DILexicalBlock(scope: !11586, file: !3, line: 2100, column: 7)
!11586 = distinct !DILexicalBlock(scope: !11545, file: !3, line: 2100, column: 7)
!11587 = !DILocation(line: 2100, column: 7, scope: !11586)
!11588 = !DILocation(line: 2101, column: 19, scope: !11545)
!11589 = !DILocation(line: 2101, column: 7, scope: !11545)
!11590 = !DILocation(line: 2102, column: 7, scope: !11591)
!11591 = distinct !DILexicalBlock(scope: !11592, file: !3, line: 2102, column: 7)
!11592 = distinct !DILexicalBlock(scope: !11545, file: !3, line: 2102, column: 7)
!11593 = !DILocation(line: 2102, column: 7, scope: !11592)
!11594 = !DILocation(line: 2103, column: 19, scope: !11545)
!11595 = !DILocation(line: 2103, column: 7, scope: !11545)
!11596 = !DILocation(line: 2104, column: 7, scope: !11597)
!11597 = distinct !DILexicalBlock(scope: !11598, file: !3, line: 2104, column: 7)
!11598 = distinct !DILexicalBlock(scope: !11545, file: !3, line: 2104, column: 7)
!11599 = !DILocation(line: 2104, column: 7, scope: !11598)
!11600 = !DILocation(line: 2105, column: 19, scope: !11545)
!11601 = !DILocation(line: 2105, column: 7, scope: !11545)
!11602 = !DILocation(line: 2107, column: 8, scope: !11545)
!11603 = !DILocation(line: 2108, column: 6, scope: !11545)
!11604 = !DILocation(line: 2090, column: 34, scope: !11540)
!11605 = !DILocation(line: 2090, column: 6, scope: !11540)
!11606 = distinct !{!11606, !11543, !11607}
!11607 = !DILocation(line: 2108, column: 6, scope: !11536)
!11608 = !DILocation(line: 2109, column: 5, scope: !11537)
!11609 = !DILocation(line: 2089, column: 33, scope: !11531)
!11610 = !DILocation(line: 2089, column: 5, scope: !11531)
!11611 = distinct !{!11611, !11534, !11612}
!11612 = !DILocation(line: 2109, column: 5, scope: !11528)
!11613 = !DILocation(line: 2110, column: 5, scope: !11526)
!11614 = !DILocation(line: 2112, column: 3, scope: !11310)
!11615 = !DILocation(line: 2020, column: 30, scope: !11305)
!11616 = !DILocation(line: 2020, column: 3, scope: !11305)
!11617 = distinct !{!11617, !11308, !11618}
!11618 = !DILocation(line: 2112, column: 3, scope: !11302)
!11619 = !DILocation(line: 2113, column: 2, scope: !11201)
!11620 = !DILocation(line: 1983, column: 35, scope: !11196)
!11621 = !DILocation(line: 1983, column: 2, scope: !11196)
!11622 = distinct !{!11622, !11199, !11623}
!11623 = !DILocation(line: 2113, column: 2, scope: !11192)
!11624 = !DILocation(line: 2116, column: 1, scope: !11075)
!11625 = distinct !DISubprogram(name: "ccgDM_drawMappedFacesMat", scope: !3, file: !3, line: 2124, type: !2179, scopeLine: 2127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!11626 = !DILocalVariable(name: "dm", arg: 1, scope: !11625, file: !3, line: 2124, type: !11)
!11627 = !DILocation(line: 2124, column: 51, scope: !11625)
!11628 = !DILocalVariable(name: "setMaterial", arg: 2, scope: !11625, file: !3, line: 2125, type: !2181)
!11629 = !DILocation(line: 2125, column: 45, scope: !11625)
!11630 = !DILocalVariable(name: "setFace", arg: 3, scope: !11625, file: !3, line: 2126, type: !2184)
!11631 = !DILocation(line: 2126, column: 45, scope: !11625)
!11632 = !DILocalVariable(name: "userData", arg: 4, scope: !11625, file: !3, line: 2126, type: !41)
!11633 = !DILocation(line: 2126, column: 88, scope: !11625)
!11634 = !DILocalVariable(name: "ccgdm", scope: !11625, file: !3, line: 2128, type: !2295)
!11635 = !DILocation(line: 2128, column: 18, scope: !11625)
!11636 = !DILocation(line: 2128, column: 45, scope: !11625)
!11637 = !DILocation(line: 2128, column: 26, scope: !11625)
!11638 = !DILocalVariable(name: "ss", scope: !11625, file: !3, line: 2129, type: !6)
!11639 = !DILocation(line: 2129, column: 14, scope: !11625)
!11640 = !DILocation(line: 2129, column: 19, scope: !11625)
!11641 = !DILocation(line: 2129, column: 26, scope: !11625)
!11642 = !DILocalVariable(name: "key", scope: !11625, file: !3, line: 2130, type: !5667)
!11643 = !DILocation(line: 2130, column: 9, scope: !11625)
!11644 = !DILocalVariable(name: "gattribs", scope: !11625, file: !3, line: 2131, type: !11095)
!11645 = !DILocation(line: 2131, column: 19, scope: !11625)
!11646 = !DILocalVariable(name: "attribs", scope: !11625, file: !3, line: 2132, type: !11111)
!11647 = !DILocation(line: 2132, column: 18, scope: !11625)
!11648 = !DILocalVariable(name: "gridSize", scope: !11625, file: !3, line: 2133, type: !27)
!11649 = !DILocation(line: 2133, column: 6, scope: !11625)
!11650 = !DILocation(line: 2133, column: 40, scope: !11625)
!11651 = !DILocation(line: 2133, column: 17, scope: !11625)
!11652 = !DILocalVariable(name: "gridFaces", scope: !11625, file: !3, line: 2134, type: !27)
!11653 = !DILocation(line: 2134, column: 6, scope: !11625)
!11654 = !DILocation(line: 2134, column: 18, scope: !11625)
!11655 = !DILocation(line: 2134, column: 27, scope: !11625)
!11656 = !DILocalVariable(name: "edgeSize", scope: !11625, file: !3, line: 2135, type: !27)
!11657 = !DILocation(line: 2135, column: 6, scope: !11625)
!11658 = !DILocation(line: 2135, column: 40, scope: !11625)
!11659 = !DILocation(line: 2135, column: 17, scope: !11625)
!11660 = !DILocalVariable(name: "faceFlags", scope: !11625, file: !3, line: 2136, type: !2024)
!11661 = !DILocation(line: 2136, column: 13, scope: !11625)
!11662 = !DILocation(line: 2136, column: 25, scope: !11625)
!11663 = !DILocation(line: 2136, column: 32, scope: !11625)
!11664 = !DILocalVariable(name: "lnors", scope: !11625, file: !3, line: 2137, type: !10022)
!11665 = !DILocation(line: 2137, column: 10, scope: !11625)
!11666 = !DILocation(line: 2137, column: 25, scope: !11625)
!11667 = !DILocation(line: 2137, column: 29, scope: !11625)
!11668 = !DILocation(line: 2137, column: 50, scope: !11625)
!11669 = !DILocalVariable(name: "a", scope: !11625, file: !3, line: 2138, type: !27)
!11670 = !DILocation(line: 2138, column: 6, scope: !11625)
!11671 = !DILocalVariable(name: "i", scope: !11625, file: !3, line: 2138, type: !27)
!11672 = !DILocation(line: 2138, column: 9, scope: !11625)
!11673 = !DILocalVariable(name: "numVerts", scope: !11625, file: !3, line: 2138, type: !27)
!11674 = !DILocation(line: 2138, column: 12, scope: !11625)
!11675 = !DILocalVariable(name: "matnr", scope: !11625, file: !3, line: 2138, type: !27)
!11676 = !DILocation(line: 2138, column: 22, scope: !11625)
!11677 = !DILocalVariable(name: "new_matnr", scope: !11625, file: !3, line: 2138, type: !27)
!11678 = !DILocation(line: 2138, column: 29, scope: !11625)
!11679 = !DILocalVariable(name: "totface", scope: !11625, file: !3, line: 2138, type: !27)
!11680 = !DILocation(line: 2138, column: 40, scope: !11625)
!11681 = !DILocation(line: 2140, column: 26, scope: !11625)
!11682 = !DILocation(line: 2140, column: 2, scope: !11625)
!11683 = !DILocation(line: 2141, column: 20, scope: !11625)
!11684 = !DILocation(line: 2141, column: 2, scope: !11625)
!11685 = !DILocation(line: 2143, column: 8, scope: !11625)
!11686 = !DILocation(line: 2153, column: 35, scope: !11625)
!11687 = !DILocation(line: 2153, column: 12, scope: !11625)
!11688 = !DILocation(line: 2153, column: 10, scope: !11625)
!11689 = !DILocation(line: 2154, column: 9, scope: !11690)
!11690 = distinct !DILexicalBlock(scope: !11625, file: !3, line: 2154, column: 2)
!11691 = !DILocation(line: 2154, column: 16, scope: !11690)
!11692 = !DILocation(line: 2154, column: 7, scope: !11690)
!11693 = !DILocation(line: 2154, column: 21, scope: !11694)
!11694 = distinct !DILexicalBlock(scope: !11690, file: !3, line: 2154, column: 2)
!11695 = !DILocation(line: 2154, column: 25, scope: !11694)
!11696 = !DILocation(line: 2154, column: 23, scope: !11694)
!11697 = !DILocation(line: 2154, column: 2, scope: !11690)
!11698 = !DILocalVariable(name: "f", scope: !11699, file: !3, line: 2155, type: !2461)
!11699 = distinct !DILexicalBlock(scope: !11694, file: !3, line: 2154, column: 39)
!11700 = !DILocation(line: 2155, column: 12, scope: !11699)
!11701 = !DILocation(line: 2155, column: 16, scope: !11699)
!11702 = !DILocation(line: 2155, column: 23, scope: !11699)
!11703 = !DILocation(line: 2155, column: 31, scope: !11699)
!11704 = !DILocation(line: 2155, column: 34, scope: !11699)
!11705 = !DILocalVariable(name: "ln", scope: !11699, file: !3, line: 2156, type: !10022)
!11706 = !DILocation(line: 2156, column: 11, scope: !11699)
!11707 = !DILocalVariable(name: "S", scope: !11699, file: !3, line: 2157, type: !27)
!11708 = !DILocation(line: 2157, column: 7, scope: !11699)
!11709 = !DILocalVariable(name: "x", scope: !11699, file: !3, line: 2157, type: !27)
!11710 = !DILocation(line: 2157, column: 10, scope: !11699)
!11711 = !DILocalVariable(name: "y", scope: !11699, file: !3, line: 2157, type: !27)
!11712 = !DILocation(line: 2157, column: 13, scope: !11699)
!11713 = !DILocalVariable(name: "drawSmooth", scope: !11699, file: !3, line: 2157, type: !27)
!11714 = !DILocation(line: 2157, column: 16, scope: !11699)
!11715 = !DILocalVariable(name: "index", scope: !11699, file: !3, line: 2158, type: !27)
!11716 = !DILocation(line: 2158, column: 7, scope: !11699)
!11717 = !DILocation(line: 2158, column: 15, scope: !11699)
!11718 = !DILocalVariable(name: "origIndex", scope: !11699, file: !3, line: 2159, type: !27)
!11719 = !DILocation(line: 2159, column: 7, scope: !11699)
!11720 = !DILocation(line: 2159, column: 41, scope: !11699)
!11721 = !DILocation(line: 2159, column: 45, scope: !11699)
!11722 = !DILocation(line: 2159, column: 19, scope: !11699)
!11723 = !DILocation(line: 2161, column: 41, scope: !11699)
!11724 = !DILocation(line: 2161, column: 14, scope: !11699)
!11725 = !DILocation(line: 2161, column: 12, scope: !11699)
!11726 = !DILocation(line: 2164, column: 7, scope: !11727)
!11727 = distinct !DILexicalBlock(scope: !11699, file: !3, line: 2164, column: 7)
!11728 = !DILocation(line: 2164, column: 7, scope: !11699)
!11729 = !DILocation(line: 2165, column: 18, scope: !11730)
!11730 = distinct !DILexicalBlock(scope: !11727, file: !3, line: 2164, column: 18)
!11731 = !DILocation(line: 2165, column: 24, scope: !11730)
!11732 = !DILocation(line: 2165, column: 28, scope: !11730)
!11733 = !DILocation(line: 2165, column: 38, scope: !11730)
!11734 = !DILocation(line: 2165, column: 45, scope: !11730)
!11735 = !DILocation(line: 2165, column: 50, scope: !11730)
!11736 = !DILocation(line: 2165, column: 15, scope: !11730)
!11737 = !DILocation(line: 2166, column: 16, scope: !11730)
!11738 = !DILocation(line: 2166, column: 26, scope: !11730)
!11739 = !DILocation(line: 2166, column: 33, scope: !11730)
!11740 = !DILocation(line: 2166, column: 40, scope: !11730)
!11741 = !DILocation(line: 2166, column: 14, scope: !11730)
!11742 = !DILocation(line: 2167, column: 3, scope: !11730)
!11743 = !DILocation(line: 2169, column: 15, scope: !11744)
!11744 = distinct !DILexicalBlock(scope: !11727, file: !3, line: 2168, column: 8)
!11745 = !DILocation(line: 2170, column: 14, scope: !11744)
!11746 = !DILocation(line: 2173, column: 7, scope: !11747)
!11747 = distinct !DILexicalBlock(scope: !11699, file: !3, line: 2173, column: 7)
!11748 = !DILocation(line: 2173, column: 7, scope: !11699)
!11749 = !DILocation(line: 2174, column: 9, scope: !11750)
!11750 = distinct !DILexicalBlock(scope: !11747, file: !3, line: 2173, column: 14)
!11751 = !DILocation(line: 2174, column: 7, scope: !11750)
!11752 = !DILocation(line: 2175, column: 13, scope: !11750)
!11753 = !DILocation(line: 2175, column: 25, scope: !11750)
!11754 = !DILocation(line: 2175, column: 23, scope: !11750)
!11755 = !DILocation(line: 2175, column: 37, scope: !11750)
!11756 = !DILocation(line: 2175, column: 35, scope: !11750)
!11757 = !DILocation(line: 2175, column: 10, scope: !11750)
!11758 = !DILocation(line: 2176, column: 3, scope: !11750)
!11759 = !DILocation(line: 2179, column: 7, scope: !11760)
!11760 = distinct !DILexicalBlock(scope: !11699, file: !3, line: 2179, column: 7)
!11761 = !DILocation(line: 2179, column: 20, scope: !11760)
!11762 = !DILocation(line: 2179, column: 17, scope: !11760)
!11763 = !DILocation(line: 2179, column: 7, scope: !11699)
!11764 = !DILocation(line: 2180, column: 4, scope: !11765)
!11765 = distinct !DILexicalBlock(scope: !11760, file: !3, line: 2179, column: 27)
!11766 = !DILocation(line: 2180, column: 16, scope: !11765)
!11767 = !DILocation(line: 2180, column: 34, scope: !11765)
!11768 = !DILocation(line: 2180, column: 32, scope: !11765)
!11769 = !DILocation(line: 2180, column: 45, scope: !11765)
!11770 = !DILocation(line: 2181, column: 34, scope: !11765)
!11771 = !DILocation(line: 2181, column: 4, scope: !11765)
!11772 = !DILocation(line: 2182, column: 3, scope: !11765)
!11773 = !DILocation(line: 2185, column: 8, scope: !11774)
!11774 = distinct !DILexicalBlock(scope: !11699, file: !3, line: 2185, column: 7)
!11775 = !DILocation(line: 2185, column: 16, scope: !11774)
!11776 = !DILocation(line: 2185, column: 20, scope: !11774)
!11777 = !DILocation(line: 2185, column: 30, scope: !11774)
!11778 = !DILocation(line: 2185, column: 49, scope: !11774)
!11779 = !DILocation(line: 2185, column: 53, scope: !11774)
!11780 = !DILocation(line: 2185, column: 61, scope: !11774)
!11781 = !DILocation(line: 2185, column: 71, scope: !11774)
!11782 = !DILocation(line: 2185, column: 7, scope: !11699)
!11783 = !DILocation(line: 2186, column: 9, scope: !11784)
!11784 = distinct !DILexicalBlock(scope: !11774, file: !3, line: 2185, column: 84)
!11785 = !DILocation(line: 2186, column: 21, scope: !11784)
!11786 = !DILocation(line: 2186, column: 19, scope: !11784)
!11787 = !DILocation(line: 2186, column: 33, scope: !11784)
!11788 = !DILocation(line: 2186, column: 31, scope: !11784)
!11789 = !DILocation(line: 2186, column: 6, scope: !11784)
!11790 = !DILocation(line: 2187, column: 4, scope: !11784)
!11791 = !DILocation(line: 2191, column: 16, scope: !11699)
!11792 = !DILocation(line: 2191, column: 3, scope: !11699)
!11793 = !DILocation(line: 2192, column: 10, scope: !11794)
!11794 = distinct !DILexicalBlock(scope: !11699, file: !3, line: 2192, column: 3)
!11795 = !DILocation(line: 2192, column: 8, scope: !11794)
!11796 = !DILocation(line: 2192, column: 15, scope: !11797)
!11797 = distinct !DILexicalBlock(scope: !11794, file: !3, line: 2192, column: 3)
!11798 = !DILocation(line: 2192, column: 19, scope: !11797)
!11799 = !DILocation(line: 2192, column: 17, scope: !11797)
!11800 = !DILocation(line: 2192, column: 3, scope: !11794)
!11801 = !DILocalVariable(name: "faceGridData", scope: !11802, file: !3, line: 2193, type: !2371)
!11802 = distinct !DILexicalBlock(scope: !11797, file: !3, line: 2192, column: 34)
!11803 = !DILocation(line: 2193, column: 13, scope: !11802)
!11804 = !DILocation(line: 2193, column: 60, scope: !11802)
!11805 = !DILocation(line: 2193, column: 64, scope: !11802)
!11806 = !DILocation(line: 2193, column: 67, scope: !11802)
!11807 = !DILocation(line: 2193, column: 28, scope: !11802)
!11808 = !DILocalVariable(name: "vda", scope: !11802, file: !3, line: 2194, type: !2371)
!11809 = !DILocation(line: 2194, column: 13, scope: !11802)
!11810 = !DILocalVariable(name: "vdb", scope: !11802, file: !3, line: 2194, type: !2371)
!11811 = !DILocation(line: 2194, column: 19, scope: !11802)
!11812 = !DILocation(line: 2196, column: 8, scope: !11813)
!11813 = distinct !DILexicalBlock(scope: !11802, file: !3, line: 2196, column: 8)
!11814 = !DILocation(line: 2196, column: 8, scope: !11802)
!11815 = !DILocation(line: 2197, column: 5, scope: !11816)
!11816 = distinct !DILexicalBlock(scope: !11813, file: !3, line: 2196, column: 12)
!11817 = !DILocation(line: 2198, column: 12, scope: !11818)
!11818 = distinct !DILexicalBlock(scope: !11816, file: !3, line: 2198, column: 5)
!11819 = !DILocation(line: 2198, column: 10, scope: !11818)
!11820 = !DILocation(line: 2198, column: 17, scope: !11821)
!11821 = distinct !DILexicalBlock(scope: !11818, file: !3, line: 2198, column: 5)
!11822 = !DILocation(line: 2198, column: 21, scope: !11821)
!11823 = !DILocation(line: 2198, column: 19, scope: !11821)
!11824 = !DILocation(line: 2198, column: 5, scope: !11818)
!11825 = !DILocation(line: 2199, column: 13, scope: !11826)
!11826 = distinct !DILexicalBlock(scope: !11827, file: !3, line: 2199, column: 6)
!11827 = distinct !DILexicalBlock(scope: !11821, file: !3, line: 2198, column: 37)
!11828 = !DILocation(line: 2199, column: 11, scope: !11826)
!11829 = !DILocation(line: 2199, column: 18, scope: !11830)
!11830 = distinct !DILexicalBlock(scope: !11826, file: !3, line: 2199, column: 6)
!11831 = !DILocation(line: 2199, column: 22, scope: !11830)
!11832 = !DILocation(line: 2199, column: 20, scope: !11830)
!11833 = !DILocation(line: 2199, column: 6, scope: !11826)
!11834 = !DILocalVariable(name: "aco", scope: !11835, file: !3, line: 2200, type: !1306)
!11835 = distinct !DILexicalBlock(scope: !11830, file: !3, line: 2199, column: 38)
!11836 = !DILocation(line: 2200, column: 14, scope: !11835)
!11837 = !DILocation(line: 2200, column: 43, scope: !11835)
!11838 = !DILocation(line: 2200, column: 57, scope: !11835)
!11839 = !DILocation(line: 2200, column: 60, scope: !11835)
!11840 = !DILocation(line: 2200, column: 62, scope: !11835)
!11841 = !DILocation(line: 2200, column: 20, scope: !11835)
!11842 = !DILocalVariable(name: "bco", scope: !11835, file: !3, line: 2201, type: !1306)
!11843 = !DILocation(line: 2201, column: 14, scope: !11835)
!11844 = !DILocation(line: 2201, column: 43, scope: !11835)
!11845 = !DILocation(line: 2201, column: 57, scope: !11835)
!11846 = !DILocation(line: 2201, column: 59, scope: !11835)
!11847 = !DILocation(line: 2201, column: 64, scope: !11835)
!11848 = !DILocation(line: 2201, column: 66, scope: !11835)
!11849 = !DILocation(line: 2201, column: 20, scope: !11835)
!11850 = !DILocalVariable(name: "cco", scope: !11835, file: !3, line: 2202, type: !1306)
!11851 = !DILocation(line: 2202, column: 14, scope: !11835)
!11852 = !DILocation(line: 2202, column: 43, scope: !11835)
!11853 = !DILocation(line: 2202, column: 57, scope: !11835)
!11854 = !DILocation(line: 2202, column: 59, scope: !11835)
!11855 = !DILocation(line: 2202, column: 64, scope: !11835)
!11856 = !DILocation(line: 2202, column: 66, scope: !11835)
!11857 = !DILocation(line: 2202, column: 20, scope: !11835)
!11858 = !DILocalVariable(name: "dco", scope: !11835, file: !3, line: 2203, type: !1306)
!11859 = !DILocation(line: 2203, column: 14, scope: !11835)
!11860 = !DILocation(line: 2203, column: 43, scope: !11835)
!11861 = !DILocation(line: 2203, column: 57, scope: !11835)
!11862 = !DILocation(line: 2203, column: 60, scope: !11835)
!11863 = !DILocation(line: 2203, column: 62, scope: !11835)
!11864 = !DILocation(line: 2203, column: 20, scope: !11835)
!11865 = !DILocation(line: 2205, column: 7, scope: !11866)
!11866 = distinct !DILexicalBlock(scope: !11867, file: !3, line: 2205, column: 7)
!11867 = distinct !DILexicalBlock(scope: !11835, file: !3, line: 2205, column: 7)
!11868 = !DILocation(line: 2205, column: 7, scope: !11867)
!11869 = !DILocation(line: 2206, column: 19, scope: !11835)
!11870 = !DILocation(line: 2206, column: 7, scope: !11835)
!11871 = !DILocation(line: 2207, column: 19, scope: !11835)
!11872 = !DILocation(line: 2207, column: 7, scope: !11835)
!11873 = !DILocation(line: 2208, column: 7, scope: !11874)
!11874 = distinct !DILexicalBlock(scope: !11875, file: !3, line: 2208, column: 7)
!11875 = distinct !DILexicalBlock(scope: !11835, file: !3, line: 2208, column: 7)
!11876 = !DILocation(line: 2208, column: 7, scope: !11875)
!11877 = !DILocation(line: 2209, column: 19, scope: !11835)
!11878 = !DILocation(line: 2209, column: 7, scope: !11835)
!11879 = !DILocation(line: 2210, column: 19, scope: !11835)
!11880 = !DILocation(line: 2210, column: 7, scope: !11835)
!11881 = !DILocation(line: 2211, column: 7, scope: !11882)
!11882 = distinct !DILexicalBlock(scope: !11883, file: !3, line: 2211, column: 7)
!11883 = distinct !DILexicalBlock(scope: !11835, file: !3, line: 2211, column: 7)
!11884 = !DILocation(line: 2211, column: 7, scope: !11883)
!11885 = !DILocation(line: 2212, column: 19, scope: !11835)
!11886 = !DILocation(line: 2212, column: 7, scope: !11835)
!11887 = !DILocation(line: 2213, column: 19, scope: !11835)
!11888 = !DILocation(line: 2213, column: 7, scope: !11835)
!11889 = !DILocation(line: 2214, column: 7, scope: !11890)
!11890 = distinct !DILexicalBlock(scope: !11891, file: !3, line: 2214, column: 7)
!11891 = distinct !DILexicalBlock(scope: !11835, file: !3, line: 2214, column: 7)
!11892 = !DILocation(line: 2214, column: 7, scope: !11891)
!11893 = !DILocation(line: 2215, column: 19, scope: !11835)
!11894 = !DILocation(line: 2215, column: 7, scope: !11835)
!11895 = !DILocation(line: 2216, column: 19, scope: !11835)
!11896 = !DILocation(line: 2216, column: 7, scope: !11835)
!11897 = !DILocation(line: 2218, column: 9, scope: !11835)
!11898 = !DILocation(line: 2219, column: 8, scope: !11835)
!11899 = !DILocation(line: 2220, column: 6, scope: !11835)
!11900 = !DILocation(line: 2199, column: 34, scope: !11830)
!11901 = !DILocation(line: 2199, column: 6, scope: !11830)
!11902 = distinct !{!11902, !11833, !11903}
!11903 = !DILocation(line: 2220, column: 6, scope: !11826)
!11904 = !DILocation(line: 2221, column: 5, scope: !11827)
!11905 = !DILocation(line: 2198, column: 33, scope: !11821)
!11906 = !DILocation(line: 2198, column: 5, scope: !11821)
!11907 = distinct !{!11907, !11824, !11908}
!11908 = !DILocation(line: 2221, column: 5, scope: !11818)
!11909 = !DILocation(line: 2222, column: 5, scope: !11816)
!11910 = !DILocation(line: 2223, column: 4, scope: !11816)
!11911 = !DILocation(line: 2224, column: 13, scope: !11912)
!11912 = distinct !DILexicalBlock(scope: !11813, file: !3, line: 2224, column: 13)
!11913 = !DILocation(line: 2224, column: 13, scope: !11813)
!11914 = !DILocation(line: 2225, column: 12, scope: !11915)
!11915 = distinct !DILexicalBlock(scope: !11916, file: !3, line: 2225, column: 5)
!11916 = distinct !DILexicalBlock(scope: !11912, file: !3, line: 2224, column: 25)
!11917 = !DILocation(line: 2225, column: 10, scope: !11915)
!11918 = !DILocation(line: 2225, column: 17, scope: !11919)
!11919 = distinct !DILexicalBlock(scope: !11915, file: !3, line: 2225, column: 5)
!11920 = !DILocation(line: 2225, column: 21, scope: !11919)
!11921 = !DILocation(line: 2225, column: 19, scope: !11919)
!11922 = !DILocation(line: 2225, column: 5, scope: !11915)
!11923 = !DILocation(line: 2226, column: 6, scope: !11924)
!11924 = distinct !DILexicalBlock(scope: !11919, file: !3, line: 2225, column: 37)
!11925 = !DILocation(line: 2227, column: 13, scope: !11926)
!11926 = distinct !DILexicalBlock(scope: !11924, file: !3, line: 2227, column: 6)
!11927 = !DILocation(line: 2227, column: 11, scope: !11926)
!11928 = !DILocation(line: 2227, column: 18, scope: !11929)
!11929 = distinct !DILexicalBlock(scope: !11926, file: !3, line: 2227, column: 6)
!11930 = !DILocation(line: 2227, column: 22, scope: !11929)
!11931 = !DILocation(line: 2227, column: 20, scope: !11929)
!11932 = !DILocation(line: 2227, column: 6, scope: !11926)
!11933 = !DILocation(line: 2228, column: 33, scope: !11934)
!11934 = distinct !DILexicalBlock(scope: !11929, file: !3, line: 2227, column: 38)
!11935 = !DILocation(line: 2228, column: 47, scope: !11934)
!11936 = !DILocation(line: 2228, column: 50, scope: !11934)
!11937 = !DILocation(line: 2228, column: 13, scope: !11934)
!11938 = !DILocation(line: 2228, column: 11, scope: !11934)
!11939 = !DILocation(line: 2229, column: 33, scope: !11934)
!11940 = !DILocation(line: 2229, column: 47, scope: !11934)
!11941 = !DILocation(line: 2229, column: 50, scope: !11934)
!11942 = !DILocation(line: 2229, column: 52, scope: !11934)
!11943 = !DILocation(line: 2229, column: 13, scope: !11934)
!11944 = !DILocation(line: 2229, column: 11, scope: !11934)
!11945 = !DILocation(line: 2231, column: 7, scope: !11946)
!11946 = distinct !DILexicalBlock(scope: !11947, file: !3, line: 2231, column: 7)
!11947 = distinct !DILexicalBlock(scope: !11934, file: !3, line: 2231, column: 7)
!11948 = !DILocation(line: 2231, column: 7, scope: !11947)
!11949 = !DILocation(line: 2232, column: 37, scope: !11934)
!11950 = !DILocation(line: 2232, column: 19, scope: !11934)
!11951 = !DILocation(line: 2232, column: 7, scope: !11934)
!11952 = !DILocation(line: 2233, column: 37, scope: !11934)
!11953 = !DILocation(line: 2233, column: 19, scope: !11934)
!11954 = !DILocation(line: 2233, column: 7, scope: !11934)
!11955 = !DILocation(line: 2235, column: 7, scope: !11956)
!11956 = distinct !DILexicalBlock(scope: !11957, file: !3, line: 2235, column: 7)
!11957 = distinct !DILexicalBlock(scope: !11934, file: !3, line: 2235, column: 7)
!11958 = !DILocation(line: 2235, column: 7, scope: !11957)
!11959 = !DILocation(line: 2236, column: 37, scope: !11934)
!11960 = !DILocation(line: 2236, column: 19, scope: !11934)
!11961 = !DILocation(line: 2236, column: 7, scope: !11934)
!11962 = !DILocation(line: 2237, column: 37, scope: !11934)
!11963 = !DILocation(line: 2237, column: 19, scope: !11934)
!11964 = !DILocation(line: 2237, column: 7, scope: !11934)
!11965 = !DILocation(line: 2239, column: 11, scope: !11966)
!11966 = distinct !DILexicalBlock(scope: !11934, file: !3, line: 2239, column: 11)
!11967 = !DILocation(line: 2239, column: 16, scope: !11966)
!11968 = !DILocation(line: 2239, column: 26, scope: !11966)
!11969 = !DILocation(line: 2239, column: 13, scope: !11966)
!11970 = !DILocation(line: 2239, column: 11, scope: !11934)
!11971 = !DILocation(line: 2240, column: 9, scope: !11966)
!11972 = !DILocation(line: 2240, column: 8, scope: !11966)
!11973 = !DILocation(line: 2241, column: 6, scope: !11934)
!11974 = !DILocation(line: 2227, column: 34, scope: !11929)
!11975 = !DILocation(line: 2227, column: 6, scope: !11929)
!11976 = distinct !{!11976, !11932, !11977}
!11977 = !DILocation(line: 2241, column: 6, scope: !11926)
!11978 = !DILocation(line: 2243, column: 32, scope: !11924)
!11979 = !DILocation(line: 2243, column: 46, scope: !11924)
!11980 = !DILocation(line: 2243, column: 49, scope: !11924)
!11981 = !DILocation(line: 2243, column: 51, scope: !11924)
!11982 = !DILocation(line: 2243, column: 12, scope: !11924)
!11983 = !DILocation(line: 2243, column: 10, scope: !11924)
!11984 = !DILocation(line: 2244, column: 32, scope: !11924)
!11985 = !DILocation(line: 2244, column: 46, scope: !11924)
!11986 = !DILocation(line: 2244, column: 49, scope: !11924)
!11987 = !DILocation(line: 2244, column: 51, scope: !11924)
!11988 = !DILocation(line: 2244, column: 12, scope: !11924)
!11989 = !DILocation(line: 2244, column: 10, scope: !11924)
!11990 = !DILocation(line: 2246, column: 6, scope: !11991)
!11991 = distinct !DILexicalBlock(scope: !11992, file: !3, line: 2246, column: 6)
!11992 = distinct !DILexicalBlock(scope: !11924, file: !3, line: 2246, column: 6)
!11993 = !DILocation(line: 2246, column: 6, scope: !11992)
!11994 = !DILocation(line: 2247, column: 36, scope: !11924)
!11995 = !DILocation(line: 2247, column: 18, scope: !11924)
!11996 = !DILocation(line: 2247, column: 6, scope: !11924)
!11997 = !DILocation(line: 2248, column: 36, scope: !11924)
!11998 = !DILocation(line: 2248, column: 18, scope: !11924)
!11999 = !DILocation(line: 2248, column: 6, scope: !11924)
!12000 = !DILocation(line: 2250, column: 6, scope: !12001)
!12001 = distinct !DILexicalBlock(scope: !12002, file: !3, line: 2250, column: 6)
!12002 = distinct !DILexicalBlock(scope: !11924, file: !3, line: 2250, column: 6)
!12003 = !DILocation(line: 2250, column: 6, scope: !12002)
!12004 = !DILocation(line: 2251, column: 36, scope: !11924)
!12005 = !DILocation(line: 2251, column: 18, scope: !11924)
!12006 = !DILocation(line: 2251, column: 6, scope: !11924)
!12007 = !DILocation(line: 2252, column: 36, scope: !11924)
!12008 = !DILocation(line: 2252, column: 18, scope: !11924)
!12009 = !DILocation(line: 2252, column: 6, scope: !11924)
!12010 = !DILocation(line: 2254, column: 6, scope: !11924)
!12011 = !DILocation(line: 2256, column: 7, scope: !11924)
!12012 = !DILocation(line: 2257, column: 5, scope: !11924)
!12013 = !DILocation(line: 2225, column: 33, scope: !11919)
!12014 = !DILocation(line: 2225, column: 5, scope: !11919)
!12015 = distinct !{!12015, !11922, !12016}
!12016 = !DILocation(line: 2257, column: 5, scope: !11915)
!12017 = !DILocation(line: 2258, column: 4, scope: !11916)
!12018 = !DILocation(line: 2260, column: 5, scope: !12019)
!12019 = distinct !DILexicalBlock(scope: !11912, file: !3, line: 2259, column: 9)
!12020 = !DILocation(line: 2261, column: 12, scope: !12021)
!12021 = distinct !DILexicalBlock(scope: !12019, file: !3, line: 2261, column: 5)
!12022 = !DILocation(line: 2261, column: 10, scope: !12021)
!12023 = !DILocation(line: 2261, column: 17, scope: !12024)
!12024 = distinct !DILexicalBlock(scope: !12021, file: !3, line: 2261, column: 5)
!12025 = !DILocation(line: 2261, column: 21, scope: !12024)
!12026 = !DILocation(line: 2261, column: 19, scope: !12024)
!12027 = !DILocation(line: 2261, column: 5, scope: !12021)
!12028 = !DILocation(line: 2262, column: 13, scope: !12029)
!12029 = distinct !DILexicalBlock(scope: !12030, file: !3, line: 2262, column: 6)
!12030 = distinct !DILexicalBlock(scope: !12024, file: !3, line: 2261, column: 37)
!12031 = !DILocation(line: 2262, column: 11, scope: !12029)
!12032 = !DILocation(line: 2262, column: 18, scope: !12033)
!12033 = distinct !DILexicalBlock(scope: !12029, file: !3, line: 2262, column: 6)
!12034 = !DILocation(line: 2262, column: 22, scope: !12033)
!12035 = !DILocation(line: 2262, column: 20, scope: !12033)
!12036 = !DILocation(line: 2262, column: 6, scope: !12029)
!12037 = !DILocalVariable(name: "aco", scope: !12038, file: !3, line: 2263, type: !1306)
!12038 = distinct !DILexicalBlock(scope: !12033, file: !3, line: 2262, column: 38)
!12039 = !DILocation(line: 2263, column: 14, scope: !12038)
!12040 = !DILocation(line: 2263, column: 43, scope: !12038)
!12041 = !DILocation(line: 2263, column: 57, scope: !12038)
!12042 = !DILocation(line: 2263, column: 60, scope: !12038)
!12043 = !DILocation(line: 2263, column: 62, scope: !12038)
!12044 = !DILocation(line: 2263, column: 20, scope: !12038)
!12045 = !DILocalVariable(name: "bco", scope: !12038, file: !3, line: 2264, type: !1306)
!12046 = !DILocation(line: 2264, column: 14, scope: !12038)
!12047 = !DILocation(line: 2264, column: 43, scope: !12038)
!12048 = !DILocation(line: 2264, column: 57, scope: !12038)
!12049 = !DILocation(line: 2264, column: 59, scope: !12038)
!12050 = !DILocation(line: 2264, column: 64, scope: !12038)
!12051 = !DILocation(line: 2264, column: 66, scope: !12038)
!12052 = !DILocation(line: 2264, column: 20, scope: !12038)
!12053 = !DILocalVariable(name: "cco", scope: !12038, file: !3, line: 2265, type: !1306)
!12054 = !DILocation(line: 2265, column: 14, scope: !12038)
!12055 = !DILocation(line: 2265, column: 43, scope: !12038)
!12056 = !DILocation(line: 2265, column: 57, scope: !12038)
!12057 = !DILocation(line: 2265, column: 59, scope: !12038)
!12058 = !DILocation(line: 2265, column: 64, scope: !12038)
!12059 = !DILocation(line: 2265, column: 66, scope: !12038)
!12060 = !DILocation(line: 2265, column: 20, scope: !12038)
!12061 = !DILocalVariable(name: "dco", scope: !12038, file: !3, line: 2266, type: !1306)
!12062 = !DILocation(line: 2266, column: 14, scope: !12038)
!12063 = !DILocation(line: 2266, column: 43, scope: !12038)
!12064 = !DILocation(line: 2266, column: 57, scope: !12038)
!12065 = !DILocation(line: 2266, column: 60, scope: !12038)
!12066 = !DILocation(line: 2266, column: 62, scope: !12038)
!12067 = !DILocation(line: 2266, column: 20, scope: !12038)
!12068 = !DILocation(line: 2268, column: 26, scope: !12038)
!12069 = !DILocation(line: 2268, column: 31, scope: !12038)
!12070 = !DILocation(line: 2268, column: 36, scope: !12038)
!12071 = !DILocation(line: 2268, column: 41, scope: !12038)
!12072 = !DILocation(line: 2268, column: 7, scope: !12038)
!12073 = !DILocation(line: 2270, column: 7, scope: !12074)
!12074 = distinct !DILexicalBlock(scope: !12075, file: !3, line: 2270, column: 7)
!12075 = distinct !DILexicalBlock(scope: !12038, file: !3, line: 2270, column: 7)
!12076 = !DILocation(line: 2270, column: 7, scope: !12075)
!12077 = !DILocation(line: 2271, column: 19, scope: !12038)
!12078 = !DILocation(line: 2271, column: 7, scope: !12038)
!12079 = !DILocation(line: 2272, column: 7, scope: !12080)
!12080 = distinct !DILexicalBlock(scope: !12081, file: !3, line: 2272, column: 7)
!12081 = distinct !DILexicalBlock(scope: !12038, file: !3, line: 2272, column: 7)
!12082 = !DILocation(line: 2272, column: 7, scope: !12081)
!12083 = !DILocation(line: 2273, column: 19, scope: !12038)
!12084 = !DILocation(line: 2273, column: 7, scope: !12038)
!12085 = !DILocation(line: 2274, column: 7, scope: !12086)
!12086 = distinct !DILexicalBlock(scope: !12087, file: !3, line: 2274, column: 7)
!12087 = distinct !DILexicalBlock(scope: !12038, file: !3, line: 2274, column: 7)
!12088 = !DILocation(line: 2274, column: 7, scope: !12087)
!12089 = !DILocation(line: 2275, column: 19, scope: !12038)
!12090 = !DILocation(line: 2275, column: 7, scope: !12038)
!12091 = !DILocation(line: 2276, column: 7, scope: !12092)
!12092 = distinct !DILexicalBlock(scope: !12093, file: !3, line: 2276, column: 7)
!12093 = distinct !DILexicalBlock(scope: !12038, file: !3, line: 2276, column: 7)
!12094 = !DILocation(line: 2276, column: 7, scope: !12093)
!12095 = !DILocation(line: 2277, column: 19, scope: !12038)
!12096 = !DILocation(line: 2277, column: 7, scope: !12038)
!12097 = !DILocation(line: 2279, column: 8, scope: !12038)
!12098 = !DILocation(line: 2280, column: 6, scope: !12038)
!12099 = !DILocation(line: 2262, column: 34, scope: !12033)
!12100 = !DILocation(line: 2262, column: 6, scope: !12033)
!12101 = distinct !{!12101, !12036, !12102}
!12102 = !DILocation(line: 2280, column: 6, scope: !12029)
!12103 = !DILocation(line: 2281, column: 5, scope: !12030)
!12104 = !DILocation(line: 2261, column: 33, scope: !12024)
!12105 = !DILocation(line: 2261, column: 5, scope: !12024)
!12106 = distinct !{!12106, !12027, !12107}
!12107 = !DILocation(line: 2281, column: 5, scope: !12021)
!12108 = !DILocation(line: 2282, column: 5, scope: !12019)
!12109 = !DILocation(line: 2284, column: 3, scope: !11802)
!12110 = !DILocation(line: 2192, column: 30, scope: !11797)
!12111 = !DILocation(line: 2192, column: 3, scope: !11797)
!12112 = distinct !{!12112, !11800, !12113}
!12113 = !DILocation(line: 2284, column: 3, scope: !11794)
!12114 = !DILocation(line: 2285, column: 2, scope: !11699)
!12115 = !DILocation(line: 2154, column: 35, scope: !11694)
!12116 = !DILocation(line: 2154, column: 2, scope: !11694)
!12117 = distinct !{!12117, !11697, !12118}
!12118 = !DILocation(line: 2285, column: 2, scope: !11690)
!12119 = !DILocation(line: 2288, column: 1, scope: !11625)
!12120 = distinct !DISubprogram(name: "ccgDM_drawUVEdges", scope: !3, file: !3, line: 2540, type: !1858, scopeLine: 2541, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!12121 = !DILocalVariable(name: "dm", arg: 1, scope: !12120, file: !3, line: 2540, type: !11)
!12122 = !DILocation(line: 2540, column: 44, scope: !12120)
!12123 = !DILocalVariable(name: "mf", scope: !12120, file: !3, line: 2543, type: !6503)
!12124 = !DILocation(line: 2543, column: 9, scope: !12120)
!12125 = !DILocation(line: 2543, column: 14, scope: !12120)
!12126 = !DILocation(line: 2543, column: 18, scope: !12120)
!12127 = !DILocation(line: 2543, column: 35, scope: !12120)
!12128 = !DILocalVariable(name: "tf", scope: !12120, file: !3, line: 2544, type: !12129)
!12129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12130, size: 64)
!12130 = !DIDerivedType(tag: DW_TAG_typedef, name: "MTFace", file: !684, line: 165, baseType: !2122)
!12131 = !DILocation(line: 2544, column: 10, scope: !12120)
!12132 = !DILocation(line: 2544, column: 42, scope: !12120)
!12133 = !DILocation(line: 2544, column: 15, scope: !12120)
!12134 = !DILocalVariable(name: "i", scope: !12120, file: !3, line: 2545, type: !27)
!12135 = !DILocation(line: 2545, column: 6, scope: !12120)
!12136 = !DILocation(line: 2547, column: 6, scope: !12137)
!12137 = distinct !DILexicalBlock(scope: !12120, file: !3, line: 2547, column: 6)
!12138 = !DILocation(line: 2547, column: 6, scope: !12120)
!12139 = !DILocation(line: 2548, column: 3, scope: !12140)
!12140 = distinct !DILexicalBlock(scope: !12137, file: !3, line: 2547, column: 10)
!12141 = !DILocation(line: 2549, column: 10, scope: !12142)
!12142 = distinct !DILexicalBlock(scope: !12140, file: !3, line: 2549, column: 3)
!12143 = !DILocation(line: 2549, column: 8, scope: !12142)
!12144 = !DILocation(line: 2549, column: 15, scope: !12145)
!12145 = distinct !DILexicalBlock(scope: !12142, file: !3, line: 2549, column: 3)
!12146 = !DILocation(line: 2549, column: 19, scope: !12145)
!12147 = !DILocation(line: 2549, column: 23, scope: !12145)
!12148 = !DILocation(line: 2549, column: 17, scope: !12145)
!12149 = !DILocation(line: 2549, column: 3, scope: !12142)
!12150 = !DILocation(line: 2550, column: 10, scope: !12151)
!12151 = distinct !DILexicalBlock(scope: !12152, file: !3, line: 2550, column: 8)
!12152 = distinct !DILexicalBlock(scope: !12145, file: !3, line: 2549, column: 57)
!12153 = !DILocation(line: 2550, column: 14, scope: !12151)
!12154 = !DILocation(line: 2550, column: 19, scope: !12151)
!12155 = !DILocation(line: 2550, column: 8, scope: !12152)
!12156 = !DILocation(line: 2551, column: 17, scope: !12157)
!12157 = distinct !DILexicalBlock(scope: !12151, file: !3, line: 2550, column: 31)
!12158 = !DILocation(line: 2551, column: 21, scope: !12157)
!12159 = !DILocation(line: 2551, column: 5, scope: !12157)
!12160 = !DILocation(line: 2552, column: 17, scope: !12157)
!12161 = !DILocation(line: 2552, column: 21, scope: !12157)
!12162 = !DILocation(line: 2552, column: 5, scope: !12157)
!12163 = !DILocation(line: 2554, column: 17, scope: !12157)
!12164 = !DILocation(line: 2554, column: 21, scope: !12157)
!12165 = !DILocation(line: 2554, column: 5, scope: !12157)
!12166 = !DILocation(line: 2555, column: 17, scope: !12157)
!12167 = !DILocation(line: 2555, column: 21, scope: !12157)
!12168 = !DILocation(line: 2555, column: 5, scope: !12157)
!12169 = !DILocation(line: 2557, column: 10, scope: !12170)
!12170 = distinct !DILexicalBlock(scope: !12157, file: !3, line: 2557, column: 9)
!12171 = !DILocation(line: 2557, column: 14, scope: !12170)
!12172 = !DILocation(line: 2557, column: 9, scope: !12157)
!12173 = !DILocation(line: 2558, column: 18, scope: !12174)
!12174 = distinct !DILexicalBlock(scope: !12170, file: !3, line: 2557, column: 18)
!12175 = !DILocation(line: 2558, column: 22, scope: !12174)
!12176 = !DILocation(line: 2558, column: 6, scope: !12174)
!12177 = !DILocation(line: 2559, column: 18, scope: !12174)
!12178 = !DILocation(line: 2559, column: 22, scope: !12174)
!12179 = !DILocation(line: 2559, column: 6, scope: !12174)
!12180 = !DILocation(line: 2560, column: 5, scope: !12174)
!12181 = !DILocation(line: 2562, column: 18, scope: !12182)
!12182 = distinct !DILexicalBlock(scope: !12170, file: !3, line: 2561, column: 10)
!12183 = !DILocation(line: 2562, column: 22, scope: !12182)
!12184 = !DILocation(line: 2562, column: 6, scope: !12182)
!12185 = !DILocation(line: 2563, column: 18, scope: !12182)
!12186 = !DILocation(line: 2563, column: 22, scope: !12182)
!12187 = !DILocation(line: 2563, column: 6, scope: !12182)
!12188 = !DILocation(line: 2565, column: 18, scope: !12182)
!12189 = !DILocation(line: 2565, column: 22, scope: !12182)
!12190 = !DILocation(line: 2565, column: 6, scope: !12182)
!12191 = !DILocation(line: 2566, column: 18, scope: !12182)
!12192 = !DILocation(line: 2566, column: 22, scope: !12182)
!12193 = !DILocation(line: 2566, column: 6, scope: !12182)
!12194 = !DILocation(line: 2568, column: 4, scope: !12157)
!12195 = !DILocation(line: 2569, column: 3, scope: !12152)
!12196 = !DILocation(line: 2549, column: 41, scope: !12145)
!12197 = !DILocation(line: 2549, column: 47, scope: !12145)
!12198 = !DILocation(line: 2549, column: 53, scope: !12145)
!12199 = !DILocation(line: 2549, column: 3, scope: !12145)
!12200 = distinct !{!12200, !12149, !12201}
!12201 = !DILocation(line: 2569, column: 3, scope: !12142)
!12202 = !DILocation(line: 2570, column: 3, scope: !12140)
!12203 = !DILocation(line: 2571, column: 2, scope: !12140)
!12204 = !DILocation(line: 2572, column: 1, scope: !12120)
!12205 = distinct !DISubprogram(name: "ccgDM_drawMappedEdgesInterp", scope: !3, file: !3, line: 2778, type: !2171, scopeLine: 2782, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!12206 = !DILocalVariable(name: "dm", arg: 1, scope: !12205, file: !3, line: 2778, type: !11)
!12207 = !DILocation(line: 2778, column: 54, scope: !12205)
!12208 = !DILocalVariable(name: "setDrawOptions", arg: 2, scope: !12205, file: !3, line: 2779, type: !2153)
!12209 = !DILocation(line: 2779, column: 58, scope: !12205)
!12210 = !DILocalVariable(name: "setDrawInterpOptions", arg: 3, scope: !12205, file: !3, line: 2780, type: !2173)
!12211 = !DILocation(line: 2780, column: 64, scope: !12205)
!12212 = !DILocalVariable(name: "userData", arg: 4, scope: !12205, file: !3, line: 2781, type: !41)
!12213 = !DILocation(line: 2781, column: 47, scope: !12205)
!12214 = !DILocalVariable(name: "ccgdm", scope: !12205, file: !3, line: 2783, type: !2295)
!12215 = !DILocation(line: 2783, column: 18, scope: !12205)
!12216 = !DILocation(line: 2783, column: 45, scope: !12205)
!12217 = !DILocation(line: 2783, column: 26, scope: !12205)
!12218 = !DILocalVariable(name: "ss", scope: !12205, file: !3, line: 2784, type: !6)
!12219 = !DILocation(line: 2784, column: 14, scope: !12205)
!12220 = !DILocation(line: 2784, column: 19, scope: !12205)
!12221 = !DILocation(line: 2784, column: 26, scope: !12205)
!12222 = !DILocalVariable(name: "key", scope: !12205, file: !3, line: 2785, type: !5667)
!12223 = !DILocation(line: 2785, column: 9, scope: !12205)
!12224 = !DILocalVariable(name: "ei", scope: !12205, file: !3, line: 2786, type: !3733)
!12225 = !DILocation(line: 2786, column: 19, scope: !12205)
!12226 = !DILocalVariable(name: "i", scope: !12205, file: !3, line: 2787, type: !27)
!12227 = !DILocation(line: 2787, column: 6, scope: !12205)
!12228 = !DILocalVariable(name: "useAging", scope: !12205, file: !3, line: 2787, type: !27)
!12229 = !DILocation(line: 2787, column: 9, scope: !12205)
!12230 = !DILocalVariable(name: "edgeSize", scope: !12205, file: !3, line: 2787, type: !27)
!12231 = !DILocation(line: 2787, column: 19, scope: !12205)
!12232 = !DILocation(line: 2787, column: 53, scope: !12205)
!12233 = !DILocation(line: 2787, column: 30, scope: !12205)
!12234 = !DILocation(line: 2789, column: 26, scope: !12205)
!12235 = !DILocation(line: 2789, column: 2, scope: !12205)
!12236 = !DILocation(line: 2790, column: 29, scope: !12205)
!12237 = !DILocation(line: 2790, column: 2, scope: !12205)
!12238 = !DILocation(line: 2792, column: 39, scope: !12239)
!12239 = distinct !DILexicalBlock(scope: !12205, file: !3, line: 2792, column: 2)
!12240 = !DILocation(line: 2792, column: 12, scope: !12239)
!12241 = !DILocation(line: 2792, column: 10, scope: !12239)
!12242 = !DILocation(line: 2792, column: 7, scope: !12239)
!12243 = !DILocation(line: 2792, column: 71, scope: !12244)
!12244 = distinct !DILexicalBlock(scope: !12239, file: !3, line: 2792, column: 2)
!12245 = !DILocation(line: 2792, column: 45, scope: !12244)
!12246 = !DILocation(line: 2792, column: 44, scope: !12244)
!12247 = !DILocation(line: 2792, column: 2, scope: !12239)
!12248 = !DILocalVariable(name: "e", scope: !12249, file: !3, line: 2793, type: !2638)
!12249 = distinct !DILexicalBlock(scope: !12244, file: !3, line: 2792, column: 102)
!12250 = !DILocation(line: 2793, column: 12, scope: !12249)
!12251 = !DILocation(line: 2793, column: 43, scope: !12249)
!12252 = !DILocation(line: 2793, column: 16, scope: !12249)
!12253 = !DILocalVariable(name: "edgeData", scope: !12249, file: !3, line: 2794, type: !2371)
!12254 = !DILocation(line: 2794, column: 12, scope: !12249)
!12255 = !DILocation(line: 2794, column: 51, scope: !12249)
!12256 = !DILocation(line: 2794, column: 55, scope: !12249)
!12257 = !DILocation(line: 2794, column: 23, scope: !12249)
!12258 = !DILocalVariable(name: "index", scope: !12249, file: !3, line: 2795, type: !27)
!12259 = !DILocation(line: 2795, column: 7, scope: !12249)
!12260 = !DILocation(line: 2795, column: 37, scope: !12249)
!12261 = !DILocation(line: 2795, column: 41, scope: !12249)
!12262 = !DILocation(line: 2795, column: 15, scope: !12249)
!12263 = !DILocation(line: 2797, column: 3, scope: !12249)
!12264 = !DILocation(line: 2798, column: 7, scope: !12265)
!12265 = distinct !DILexicalBlock(scope: !12249, file: !3, line: 2798, column: 7)
!12266 = !DILocation(line: 2798, column: 13, scope: !12265)
!12267 = !DILocation(line: 2798, column: 19, scope: !12265)
!12268 = !DILocation(line: 2798, column: 24, scope: !12265)
!12269 = !DILocation(line: 2798, column: 39, scope: !12265)
!12270 = !DILocation(line: 2798, column: 43, scope: !12265)
!12271 = !DILocation(line: 2798, column: 58, scope: !12265)
!12272 = !DILocation(line: 2798, column: 68, scope: !12265)
!12273 = !DILocation(line: 2798, column: 75, scope: !12265)
!12274 = !DILocation(line: 2798, column: 7, scope: !12249)
!12275 = !DILocation(line: 2799, column: 11, scope: !12276)
!12276 = distinct !DILexicalBlock(scope: !12277, file: !3, line: 2799, column: 4)
!12277 = distinct !DILexicalBlock(scope: !12265, file: !3, line: 2798, column: 101)
!12278 = !DILocation(line: 2799, column: 9, scope: !12276)
!12279 = !DILocation(line: 2799, column: 16, scope: !12280)
!12280 = distinct !DILexicalBlock(scope: !12276, file: !3, line: 2799, column: 4)
!12281 = !DILocation(line: 2799, column: 20, scope: !12280)
!12282 = !DILocation(line: 2799, column: 18, scope: !12280)
!12283 = !DILocation(line: 2799, column: 4, scope: !12276)
!12284 = !DILocation(line: 2800, column: 5, scope: !12285)
!12285 = distinct !DILexicalBlock(scope: !12280, file: !3, line: 2799, column: 35)
!12286 = !DILocation(line: 2800, column: 26, scope: !12285)
!12287 = !DILocation(line: 2800, column: 36, scope: !12285)
!12288 = !DILocation(line: 2800, column: 51, scope: !12285)
!12289 = !DILocation(line: 2800, column: 43, scope: !12285)
!12290 = !DILocation(line: 2800, column: 56, scope: !12285)
!12291 = !DILocation(line: 2800, column: 65, scope: !12285)
!12292 = !DILocation(line: 2800, column: 55, scope: !12285)
!12293 = !DILocation(line: 2800, column: 53, scope: !12285)
!12294 = !DILocation(line: 2802, column: 9, scope: !12295)
!12295 = distinct !DILexicalBlock(scope: !12285, file: !3, line: 2802, column: 9)
!12296 = !DILocation(line: 2802, column: 18, scope: !12295)
!12297 = !DILocation(line: 2802, column: 25, scope: !12295)
!12298 = !DILocation(line: 2802, column: 27, scope: !12295)
!12299 = !DILocation(line: 2802, column: 9, scope: !12285)
!12300 = !DILocalVariable(name: "ageCol", scope: !12301, file: !3, line: 2803, type: !27)
!12301 = distinct !DILexicalBlock(scope: !12295, file: !3, line: 2802, column: 44)
!12302 = !DILocation(line: 2803, column: 10, scope: !12301)
!12303 = !DILocation(line: 2803, column: 47, scope: !12301)
!12304 = !DILocation(line: 2803, column: 51, scope: !12301)
!12305 = !DILocation(line: 2803, column: 25, scope: !12301)
!12306 = !DILocation(line: 2803, column: 54, scope: !12301)
!12307 = !DILocation(line: 2803, column: 23, scope: !12301)
!12308 = !DILocation(line: 2804, column: 20, scope: !12301)
!12309 = !DILocation(line: 2804, column: 27, scope: !12301)
!12310 = !DILocation(line: 2804, column: 33, scope: !12301)
!12311 = !DILocation(line: 2804, column: 6, scope: !12301)
!12312 = !DILocation(line: 2805, column: 5, scope: !12301)
!12313 = !DILocation(line: 2807, column: 42, scope: !12285)
!12314 = !DILocation(line: 2807, column: 52, scope: !12285)
!12315 = !DILocation(line: 2807, column: 17, scope: !12285)
!12316 = !DILocation(line: 2807, column: 5, scope: !12285)
!12317 = !DILocation(line: 2808, column: 4, scope: !12285)
!12318 = !DILocation(line: 2799, column: 31, scope: !12280)
!12319 = !DILocation(line: 2799, column: 4, scope: !12280)
!12320 = distinct !{!12320, !12283, !12321}
!12321 = !DILocation(line: 2808, column: 4, scope: !12276)
!12322 = !DILocation(line: 2809, column: 3, scope: !12277)
!12323 = !DILocation(line: 2810, column: 3, scope: !12249)
!12324 = !DILocation(line: 2811, column: 2, scope: !12249)
!12325 = !DILocation(line: 2792, column: 97, scope: !12244)
!12326 = !DILocation(line: 2792, column: 76, scope: !12244)
!12327 = !DILocation(line: 2792, column: 2, scope: !12244)
!12328 = distinct !{!12328, !12247, !12329}
!12329 = !DILocation(line: 2811, column: 2, scope: !12239)
!12330 = !DILocation(line: 2813, column: 23, scope: !12205)
!12331 = !DILocation(line: 2813, column: 2, scope: !12205)
!12332 = !DILocation(line: 2814, column: 1, scope: !12205)
!12333 = distinct !DISubprogram(name: "ccgDM_drawMappedEdges", scope: !3, file: !3, line: 2742, type: !2167, scopeLine: 2745, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!12334 = !DILocalVariable(name: "dm", arg: 1, scope: !12333, file: !3, line: 2742, type: !11)
!12335 = !DILocation(line: 2742, column: 48, scope: !12333)
!12336 = !DILocalVariable(name: "setDrawOptions", arg: 2, scope: !12333, file: !3, line: 2743, type: !2153)
!12337 = !DILocation(line: 2743, column: 52, scope: !12333)
!12338 = !DILocalVariable(name: "userData", arg: 3, scope: !12333, file: !3, line: 2744, type: !41)
!12339 = !DILocation(line: 2744, column: 41, scope: !12333)
!12340 = !DILocalVariable(name: "ccgdm", scope: !12333, file: !3, line: 2746, type: !2295)
!12341 = !DILocation(line: 2746, column: 18, scope: !12333)
!12342 = !DILocation(line: 2746, column: 45, scope: !12333)
!12343 = !DILocation(line: 2746, column: 26, scope: !12333)
!12344 = !DILocalVariable(name: "ss", scope: !12333, file: !3, line: 2747, type: !6)
!12345 = !DILocation(line: 2747, column: 14, scope: !12333)
!12346 = !DILocation(line: 2747, column: 19, scope: !12333)
!12347 = !DILocation(line: 2747, column: 26, scope: !12333)
!12348 = !DILocalVariable(name: "ei", scope: !12333, file: !3, line: 2748, type: !3733)
!12349 = !DILocation(line: 2748, column: 19, scope: !12333)
!12350 = !DILocalVariable(name: "key", scope: !12333, file: !3, line: 2749, type: !5667)
!12351 = !DILocation(line: 2749, column: 9, scope: !12333)
!12352 = !DILocalVariable(name: "i", scope: !12333, file: !3, line: 2750, type: !27)
!12353 = !DILocation(line: 2750, column: 6, scope: !12333)
!12354 = !DILocalVariable(name: "useAging", scope: !12333, file: !3, line: 2750, type: !27)
!12355 = !DILocation(line: 2750, column: 9, scope: !12333)
!12356 = !DILocalVariable(name: "edgeSize", scope: !12333, file: !3, line: 2750, type: !27)
!12357 = !DILocation(line: 2750, column: 19, scope: !12333)
!12358 = !DILocation(line: 2750, column: 53, scope: !12333)
!12359 = !DILocation(line: 2750, column: 30, scope: !12333)
!12360 = !DILocation(line: 2752, column: 26, scope: !12333)
!12361 = !DILocation(line: 2752, column: 2, scope: !12333)
!12362 = !DILocation(line: 2753, column: 29, scope: !12333)
!12363 = !DILocation(line: 2753, column: 2, scope: !12333)
!12364 = !DILocation(line: 2755, column: 39, scope: !12365)
!12365 = distinct !DILexicalBlock(scope: !12333, file: !3, line: 2755, column: 2)
!12366 = !DILocation(line: 2755, column: 12, scope: !12365)
!12367 = !DILocation(line: 2755, column: 10, scope: !12365)
!12368 = !DILocation(line: 2755, column: 7, scope: !12365)
!12369 = !DILocation(line: 2755, column: 71, scope: !12370)
!12370 = distinct !DILexicalBlock(scope: !12365, file: !3, line: 2755, column: 2)
!12371 = !DILocation(line: 2755, column: 45, scope: !12370)
!12372 = !DILocation(line: 2755, column: 44, scope: !12370)
!12373 = !DILocation(line: 2755, column: 2, scope: !12365)
!12374 = !DILocalVariable(name: "e", scope: !12375, file: !3, line: 2756, type: !2638)
!12375 = distinct !DILexicalBlock(scope: !12370, file: !3, line: 2755, column: 102)
!12376 = !DILocation(line: 2756, column: 12, scope: !12375)
!12377 = !DILocation(line: 2756, column: 43, scope: !12375)
!12378 = !DILocation(line: 2756, column: 16, scope: !12375)
!12379 = !DILocalVariable(name: "edgeData", scope: !12375, file: !3, line: 2757, type: !2371)
!12380 = !DILocation(line: 2757, column: 12, scope: !12375)
!12381 = !DILocation(line: 2757, column: 51, scope: !12375)
!12382 = !DILocation(line: 2757, column: 55, scope: !12375)
!12383 = !DILocation(line: 2757, column: 23, scope: !12375)
!12384 = !DILocalVariable(name: "index", scope: !12375, file: !3, line: 2758, type: !27)
!12385 = !DILocation(line: 2758, column: 7, scope: !12375)
!12386 = !DILocation(line: 2758, column: 37, scope: !12375)
!12387 = !DILocation(line: 2758, column: 41, scope: !12375)
!12388 = !DILocation(line: 2758, column: 15, scope: !12375)
!12389 = !DILocation(line: 2760, column: 3, scope: !12375)
!12390 = !DILocation(line: 2761, column: 7, scope: !12391)
!12391 = distinct !DILexicalBlock(scope: !12375, file: !3, line: 2761, column: 7)
!12392 = !DILocation(line: 2761, column: 13, scope: !12391)
!12393 = !DILocation(line: 2761, column: 19, scope: !12391)
!12394 = !DILocation(line: 2761, column: 24, scope: !12391)
!12395 = !DILocation(line: 2761, column: 39, scope: !12391)
!12396 = !DILocation(line: 2761, column: 43, scope: !12391)
!12397 = !DILocation(line: 2761, column: 58, scope: !12391)
!12398 = !DILocation(line: 2761, column: 68, scope: !12391)
!12399 = !DILocation(line: 2761, column: 75, scope: !12391)
!12400 = !DILocation(line: 2761, column: 7, scope: !12375)
!12401 = !DILocation(line: 2762, column: 8, scope: !12402)
!12402 = distinct !DILexicalBlock(scope: !12403, file: !3, line: 2762, column: 8)
!12403 = distinct !DILexicalBlock(scope: !12391, file: !3, line: 2761, column: 101)
!12404 = !DILocation(line: 2762, column: 17, scope: !12402)
!12405 = !DILocation(line: 2762, column: 24, scope: !12402)
!12406 = !DILocation(line: 2762, column: 26, scope: !12402)
!12407 = !DILocation(line: 2762, column: 8, scope: !12403)
!12408 = !DILocalVariable(name: "ageCol", scope: !12409, file: !3, line: 2763, type: !27)
!12409 = distinct !DILexicalBlock(scope: !12402, file: !3, line: 2762, column: 43)
!12410 = !DILocation(line: 2763, column: 9, scope: !12409)
!12411 = !DILocation(line: 2763, column: 46, scope: !12409)
!12412 = !DILocation(line: 2763, column: 50, scope: !12409)
!12413 = !DILocation(line: 2763, column: 24, scope: !12409)
!12414 = !DILocation(line: 2763, column: 53, scope: !12409)
!12415 = !DILocation(line: 2763, column: 22, scope: !12409)
!12416 = !DILocation(line: 2764, column: 19, scope: !12409)
!12417 = !DILocation(line: 2764, column: 26, scope: !12409)
!12418 = !DILocation(line: 2764, column: 32, scope: !12409)
!12419 = !DILocation(line: 2764, column: 5, scope: !12409)
!12420 = !DILocation(line: 2765, column: 4, scope: !12409)
!12421 = !DILocation(line: 2767, column: 11, scope: !12422)
!12422 = distinct !DILexicalBlock(scope: !12403, file: !3, line: 2767, column: 4)
!12423 = !DILocation(line: 2767, column: 9, scope: !12422)
!12424 = !DILocation(line: 2767, column: 16, scope: !12425)
!12425 = distinct !DILexicalBlock(scope: !12422, file: !3, line: 2767, column: 4)
!12426 = !DILocation(line: 2767, column: 20, scope: !12425)
!12427 = !DILocation(line: 2767, column: 29, scope: !12425)
!12428 = !DILocation(line: 2767, column: 18, scope: !12425)
!12429 = !DILocation(line: 2767, column: 4, scope: !12422)
!12430 = !DILocation(line: 2768, column: 42, scope: !12431)
!12431 = distinct !DILexicalBlock(scope: !12425, file: !3, line: 2767, column: 39)
!12432 = !DILocation(line: 2768, column: 52, scope: !12431)
!12433 = !DILocation(line: 2768, column: 17, scope: !12431)
!12434 = !DILocation(line: 2768, column: 5, scope: !12431)
!12435 = !DILocation(line: 2769, column: 42, scope: !12431)
!12436 = !DILocation(line: 2769, column: 52, scope: !12431)
!12437 = !DILocation(line: 2769, column: 54, scope: !12431)
!12438 = !DILocation(line: 2769, column: 17, scope: !12431)
!12439 = !DILocation(line: 2769, column: 5, scope: !12431)
!12440 = !DILocation(line: 2770, column: 4, scope: !12431)
!12441 = !DILocation(line: 2767, column: 35, scope: !12425)
!12442 = !DILocation(line: 2767, column: 4, scope: !12425)
!12443 = distinct !{!12443, !12429, !12444}
!12444 = !DILocation(line: 2770, column: 4, scope: !12422)
!12445 = !DILocation(line: 2771, column: 3, scope: !12403)
!12446 = !DILocation(line: 2772, column: 3, scope: !12375)
!12447 = !DILocation(line: 2773, column: 2, scope: !12375)
!12448 = !DILocation(line: 2755, column: 97, scope: !12370)
!12449 = !DILocation(line: 2755, column: 76, scope: !12370)
!12450 = !DILocation(line: 2755, column: 2, scope: !12370)
!12451 = distinct !{!12451, !12373, !12452}
!12452 = !DILocation(line: 2773, column: 2, scope: !12365)
!12453 = !DILocation(line: 2775, column: 23, scope: !12333)
!12454 = !DILocation(line: 2775, column: 2, scope: !12333)
!12455 = !DILocation(line: 2776, column: 1, scope: !12333)
!12456 = distinct !DISubprogram(name: "ccgDM_release", scope: !3, file: !3, line: 2844, type: !1858, scopeLine: 2845, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!12457 = !DILocalVariable(name: "dm", arg: 1, scope: !12456, file: !3, line: 2844, type: !11)
!12458 = !DILocation(line: 2844, column: 40, scope: !12456)
!12459 = !DILocalVariable(name: "ccgdm", scope: !12456, file: !3, line: 2846, type: !2295)
!12460 = !DILocation(line: 2846, column: 18, scope: !12456)
!12461 = !DILocation(line: 2846, column: 45, scope: !12456)
!12462 = !DILocation(line: 2846, column: 26, scope: !12456)
!12463 = !DILocation(line: 2848, column: 17, scope: !12464)
!12464 = distinct !DILexicalBlock(scope: !12456, file: !3, line: 2848, column: 6)
!12465 = !DILocation(line: 2848, column: 6, scope: !12464)
!12466 = !DILocation(line: 2848, column: 6, scope: !12456)
!12467 = !DILocation(line: 2850, column: 7, scope: !12468)
!12468 = distinct !DILexicalBlock(scope: !12469, file: !3, line: 2850, column: 7)
!12469 = distinct !DILexicalBlock(scope: !12464, file: !3, line: 2848, column: 22)
!12470 = !DILocation(line: 2850, column: 14, scope: !12468)
!12471 = !DILocation(line: 2850, column: 23, scope: !12468)
!12472 = !DILocation(line: 2850, column: 7, scope: !12469)
!12473 = !DILocation(line: 2852, column: 9, scope: !12474)
!12474 = distinct !DILexicalBlock(scope: !12475, file: !3, line: 2852, column: 8)
!12475 = distinct !DILexicalBlock(scope: !12468, file: !3, line: 2850, column: 39)
!12476 = !DILocation(line: 2852, column: 16, scope: !12474)
!12477 = !DILocation(line: 2852, column: 25, scope: !12474)
!12478 = !DILocation(line: 2852, column: 35, scope: !12474)
!12479 = !DILocation(line: 2853, column: 23, scope: !12474)
!12480 = !DILocation(line: 2853, column: 30, scope: !12474)
!12481 = !DILocation(line: 2853, column: 39, scope: !12474)
!12482 = !DILocation(line: 2853, column: 43, scope: !12474)
!12483 = !DILocation(line: 2853, column: 54, scope: !12474)
!12484 = !DILocation(line: 2853, column: 61, scope: !12474)
!12485 = !DILocation(line: 2853, column: 70, scope: !12474)
!12486 = !DILocation(line: 2853, column: 8, scope: !12474)
!12487 = !DILocation(line: 2853, column: 75, scope: !12474)
!12488 = !DILocation(line: 2852, column: 8, scope: !12475)
!12489 = !DILocation(line: 2855, column: 5, scope: !12490)
!12490 = distinct !DILexicalBlock(scope: !12474, file: !3, line: 2854, column: 4)
!12491 = !DILocation(line: 2855, column: 12, scope: !12490)
!12492 = !DILocation(line: 2855, column: 21, scope: !12490)
!12493 = !DILocation(line: 2855, column: 25, scope: !12490)
!12494 = !DILocation(line: 2856, column: 4, scope: !12490)
!12495 = !DILocation(line: 2858, column: 8, scope: !12496)
!12496 = distinct !DILexicalBlock(scope: !12475, file: !3, line: 2858, column: 8)
!12497 = !DILocation(line: 2858, column: 15, scope: !12496)
!12498 = !DILocation(line: 2858, column: 24, scope: !12496)
!12499 = !DILocation(line: 2858, column: 8, scope: !12475)
!12500 = !DILocation(line: 2859, column: 9, scope: !12501)
!12501 = distinct !DILexicalBlock(scope: !12502, file: !3, line: 2859, column: 9)
!12502 = distinct !DILexicalBlock(scope: !12496, file: !3, line: 2858, column: 29)
!12503 = !DILocation(line: 2859, column: 16, scope: !12501)
!12504 = !DILocation(line: 2859, column: 25, scope: !12501)
!12505 = !DILocation(line: 2859, column: 40, scope: !12501)
!12506 = !DILocation(line: 2859, column: 9, scope: !12502)
!12507 = !DILocation(line: 2860, column: 38, scope: !12501)
!12508 = !DILocation(line: 2860, column: 6, scope: !12501)
!12509 = !DILocation(line: 2861, column: 9, scope: !12510)
!12510 = distinct !DILexicalBlock(scope: !12502, file: !3, line: 2861, column: 9)
!12511 = !DILocation(line: 2861, column: 16, scope: !12510)
!12512 = !DILocation(line: 2861, column: 25, scope: !12510)
!12513 = !DILocation(line: 2861, column: 40, scope: !12510)
!12514 = !DILocation(line: 2861, column: 9, scope: !12502)
!12515 = !DILocation(line: 2862, column: 38, scope: !12510)
!12516 = !DILocation(line: 2862, column: 6, scope: !12510)
!12517 = !DILocation(line: 2863, column: 4, scope: !12502)
!12518 = !DILocation(line: 2864, column: 3, scope: !12475)
!12519 = !DILocation(line: 2866, column: 7, scope: !12520)
!12520 = distinct !DILexicalBlock(scope: !12469, file: !3, line: 2866, column: 7)
!12521 = !DILocation(line: 2866, column: 14, scope: !12520)
!12522 = !DILocation(line: 2866, column: 7, scope: !12469)
!12523 = !DILocation(line: 2867, column: 22, scope: !12520)
!12524 = !DILocation(line: 2867, column: 29, scope: !12520)
!12525 = !DILocation(line: 2867, column: 4, scope: !12520)
!12526 = !DILocation(line: 2869, column: 7, scope: !12527)
!12527 = distinct !DILexicalBlock(scope: !12469, file: !3, line: 2869, column: 7)
!12528 = !DILocation(line: 2869, column: 14, scope: !12527)
!12529 = !DILocation(line: 2869, column: 7, scope: !12469)
!12530 = !DILocation(line: 2869, column: 30, scope: !12527)
!12531 = !DILocation(line: 2869, column: 40, scope: !12527)
!12532 = !DILocation(line: 2869, column: 47, scope: !12527)
!12533 = !DILocation(line: 2870, column: 7, scope: !12534)
!12534 = distinct !DILexicalBlock(scope: !12469, file: !3, line: 2870, column: 7)
!12535 = !DILocation(line: 2870, column: 14, scope: !12534)
!12536 = !DILocation(line: 2870, column: 7, scope: !12469)
!12537 = !DILocation(line: 2870, column: 25, scope: !12534)
!12538 = !DILocation(line: 2870, column: 35, scope: !12534)
!12539 = !DILocation(line: 2870, column: 42, scope: !12534)
!12540 = !DILocation(line: 2871, column: 7, scope: !12541)
!12541 = distinct !DILexicalBlock(scope: !12469, file: !3, line: 2871, column: 7)
!12542 = !DILocation(line: 2871, column: 14, scope: !12541)
!12543 = !DILocation(line: 2871, column: 7, scope: !12469)
!12544 = !DILocation(line: 2871, column: 24, scope: !12541)
!12545 = !DILocation(line: 2871, column: 34, scope: !12541)
!12546 = !DILocation(line: 2871, column: 41, scope: !12541)
!12547 = !DILocation(line: 2872, column: 7, scope: !12548)
!12548 = distinct !DILexicalBlock(scope: !12469, file: !3, line: 2872, column: 7)
!12549 = !DILocation(line: 2872, column: 14, scope: !12548)
!12550 = !DILocation(line: 2872, column: 7, scope: !12469)
!12551 = !DILocation(line: 2872, column: 29, scope: !12548)
!12552 = !DILocation(line: 2872, column: 39, scope: !12548)
!12553 = !DILocation(line: 2872, column: 46, scope: !12548)
!12554 = !DILocation(line: 2873, column: 7, scope: !12555)
!12555 = distinct !DILexicalBlock(scope: !12469, file: !3, line: 2873, column: 7)
!12556 = !DILocation(line: 2873, column: 14, scope: !12555)
!12557 = !DILocation(line: 2873, column: 7, scope: !12469)
!12558 = !DILocation(line: 2873, column: 26, scope: !12555)
!12559 = !DILocation(line: 2873, column: 36, scope: !12555)
!12560 = !DILocation(line: 2873, column: 43, scope: !12555)
!12561 = !DILocation(line: 2874, column: 7, scope: !12562)
!12562 = distinct !DILexicalBlock(scope: !12469, file: !3, line: 2874, column: 7)
!12563 = !DILocation(line: 2874, column: 14, scope: !12562)
!12564 = !DILocation(line: 2874, column: 7, scope: !12469)
!12565 = !DILocation(line: 2874, column: 28, scope: !12562)
!12566 = !DILocation(line: 2874, column: 38, scope: !12562)
!12567 = !DILocation(line: 2874, column: 45, scope: !12562)
!12568 = !DILocation(line: 2875, column: 7, scope: !12569)
!12569 = distinct !DILexicalBlock(scope: !12469, file: !3, line: 2875, column: 7)
!12570 = !DILocation(line: 2875, column: 14, scope: !12569)
!12571 = !DILocation(line: 2875, column: 7, scope: !12469)
!12572 = !DILocalVariable(name: "i", scope: !12573, file: !3, line: 2876, type: !27)
!12573 = distinct !DILexicalBlock(scope: !12569, file: !3, line: 2875, column: 26)
!12574 = !DILocation(line: 2876, column: 8, scope: !12573)
!12575 = !DILocalVariable(name: "numGrids", scope: !12573, file: !3, line: 2876, type: !27)
!12576 = !DILocation(line: 2876, column: 11, scope: !12573)
!12577 = !DILocation(line: 2876, column: 22, scope: !12573)
!12578 = !DILocation(line: 2876, column: 26, scope: !12573)
!12579 = !DILocation(line: 2876, column: 38, scope: !12573)
!12580 = !DILocation(line: 2877, column: 11, scope: !12581)
!12581 = distinct !DILexicalBlock(scope: !12573, file: !3, line: 2877, column: 4)
!12582 = !DILocation(line: 2877, column: 9, scope: !12581)
!12583 = !DILocation(line: 2877, column: 16, scope: !12584)
!12584 = distinct !DILexicalBlock(scope: !12581, file: !3, line: 2877, column: 4)
!12585 = !DILocation(line: 2877, column: 20, scope: !12584)
!12586 = !DILocation(line: 2877, column: 18, scope: !12584)
!12587 = !DILocation(line: 2877, column: 4, scope: !12581)
!12588 = !DILocation(line: 2878, column: 9, scope: !12589)
!12589 = distinct !DILexicalBlock(scope: !12590, file: !3, line: 2878, column: 9)
!12590 = distinct !DILexicalBlock(scope: !12584, file: !3, line: 2877, column: 35)
!12591 = !DILocation(line: 2878, column: 16, scope: !12589)
!12592 = !DILocation(line: 2878, column: 27, scope: !12589)
!12593 = !DILocation(line: 2878, column: 9, scope: !12590)
!12594 = !DILocation(line: 2879, column: 6, scope: !12589)
!12595 = !DILocation(line: 2879, column: 16, scope: !12589)
!12596 = !DILocation(line: 2879, column: 23, scope: !12589)
!12597 = !DILocation(line: 2879, column: 34, scope: !12589)
!12598 = !DILocation(line: 2880, column: 4, scope: !12590)
!12599 = !DILocation(line: 2877, column: 31, scope: !12584)
!12600 = !DILocation(line: 2877, column: 4, scope: !12584)
!12601 = distinct !{!12601, !12587, !12602}
!12602 = !DILocation(line: 2880, column: 4, scope: !12581)
!12603 = !DILocation(line: 2881, column: 4, scope: !12573)
!12604 = !DILocation(line: 2881, column: 14, scope: !12573)
!12605 = !DILocation(line: 2881, column: 21, scope: !12573)
!12606 = !DILocation(line: 2882, column: 3, scope: !12573)
!12607 = !DILocation(line: 2883, column: 7, scope: !12608)
!12608 = distinct !DILexicalBlock(scope: !12469, file: !3, line: 2883, column: 7)
!12609 = !DILocation(line: 2883, column: 14, scope: !12608)
!12610 = !DILocation(line: 2883, column: 7, scope: !12469)
!12611 = !DILocation(line: 2883, column: 38, scope: !12608)
!12612 = !DILocation(line: 2883, column: 45, scope: !12608)
!12613 = !DILocation(line: 2883, column: 22, scope: !12608)
!12614 = !DILocation(line: 2884, column: 7, scope: !12615)
!12615 = distinct !DILexicalBlock(scope: !12469, file: !3, line: 2884, column: 7)
!12616 = !DILocation(line: 2884, column: 14, scope: !12615)
!12617 = !DILocation(line: 2884, column: 7, scope: !12469)
!12618 = !DILocation(line: 2884, column: 20, scope: !12615)
!12619 = !DILocation(line: 2884, column: 30, scope: !12615)
!12620 = !DILocation(line: 2884, column: 37, scope: !12615)
!12621 = !DILocation(line: 2885, column: 7, scope: !12622)
!12622 = distinct !DILexicalBlock(scope: !12469, file: !3, line: 2885, column: 7)
!12623 = !DILocation(line: 2885, column: 14, scope: !12622)
!12624 = !DILocation(line: 2885, column: 7, scope: !12469)
!12625 = !DILocation(line: 2885, column: 24, scope: !12622)
!12626 = !DILocation(line: 2885, column: 34, scope: !12622)
!12627 = !DILocation(line: 2885, column: 41, scope: !12622)
!12628 = !DILocation(line: 2886, column: 3, scope: !12469)
!12629 = !DILocation(line: 2886, column: 13, scope: !12469)
!12630 = !DILocation(line: 2886, column: 20, scope: !12469)
!12631 = !DILocation(line: 2887, column: 3, scope: !12469)
!12632 = !DILocation(line: 2887, column: 13, scope: !12469)
!12633 = !DILocation(line: 2887, column: 20, scope: !12469)
!12634 = !DILocation(line: 2888, column: 3, scope: !12469)
!12635 = !DILocation(line: 2888, column: 13, scope: !12469)
!12636 = !DILocation(line: 2888, column: 20, scope: !12469)
!12637 = !DILocation(line: 2889, column: 3, scope: !12469)
!12638 = !DILocation(line: 2889, column: 13, scope: !12469)
!12639 = !DILocation(line: 2889, column: 20, scope: !12469)
!12640 = !DILocation(line: 2890, column: 3, scope: !12469)
!12641 = !DILocation(line: 2890, column: 13, scope: !12469)
!12642 = !DILocation(line: 2890, column: 20, scope: !12469)
!12643 = !DILocation(line: 2891, column: 3, scope: !12469)
!12644 = !DILocation(line: 2891, column: 13, scope: !12469)
!12645 = !DILocation(line: 2892, column: 2, scope: !12469)
!12646 = !DILocation(line: 2893, column: 1, scope: !12456)
!12647 = distinct !DISubprogram(name: "get_ss_weights", scope: !3, file: !3, line: 502, type: !12648, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!12648 = !DISubroutineType(types: !12649)
!12649 = !{!1306, !12650, !27, !27}
!12650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3799, size: 64)
!12651 = !DILocalVariable(name: "wtable", arg: 1, scope: !12647, file: !3, line: 502, type: !12650)
!12652 = !DILocation(line: 502, column: 43, scope: !12647)
!12653 = !DILocalVariable(name: "gridCuts", arg: 2, scope: !12647, file: !3, line: 502, type: !27)
!12654 = !DILocation(line: 502, column: 55, scope: !12647)
!12655 = !DILocalVariable(name: "faceLen", arg: 3, scope: !12647, file: !3, line: 502, type: !27)
!12656 = !DILocation(line: 502, column: 69, scope: !12647)
!12657 = !DILocalVariable(name: "x", scope: !12647, file: !3, line: 504, type: !27)
!12658 = !DILocation(line: 504, column: 6, scope: !12647)
!12659 = !DILocalVariable(name: "y", scope: !12647, file: !3, line: 504, type: !27)
!12660 = !DILocation(line: 504, column: 9, scope: !12647)
!12661 = !DILocalVariable(name: "i", scope: !12647, file: !3, line: 504, type: !27)
!12662 = !DILocation(line: 504, column: 12, scope: !12647)
!12663 = !DILocalVariable(name: "j", scope: !12647, file: !3, line: 504, type: !27)
!12664 = !DILocation(line: 504, column: 15, scope: !12647)
!12665 = !DILocalVariable(name: "w", scope: !12647, file: !3, line: 505, type: !1306)
!12666 = !DILocation(line: 505, column: 9, scope: !12647)
!12667 = !DILocalVariable(name: "w1", scope: !12647, file: !3, line: 505, type: !90)
!12668 = !DILocation(line: 505, column: 12, scope: !12647)
!12669 = !DILocalVariable(name: "w2", scope: !12647, file: !3, line: 505, type: !90)
!12670 = !DILocation(line: 505, column: 16, scope: !12647)
!12671 = !DILocalVariable(name: "w4", scope: !12647, file: !3, line: 505, type: !90)
!12672 = !DILocation(line: 505, column: 20, scope: !12647)
!12673 = !DILocalVariable(name: "fac", scope: !12647, file: !3, line: 505, type: !90)
!12674 = !DILocation(line: 505, column: 24, scope: !12647)
!12675 = !DILocalVariable(name: "fac2", scope: !12647, file: !3, line: 505, type: !90)
!12676 = !DILocation(line: 505, column: 29, scope: !12647)
!12677 = !DILocalVariable(name: "fx", scope: !12647, file: !3, line: 505, type: !90)
!12678 = !DILocation(line: 505, column: 35, scope: !12647)
!12679 = !DILocalVariable(name: "fy", scope: !12647, file: !3, line: 505, type: !90)
!12680 = !DILocation(line: 505, column: 39, scope: !12647)
!12681 = !DILocation(line: 507, column: 6, scope: !12682)
!12682 = distinct !DILexicalBlock(scope: !12647, file: !3, line: 507, column: 6)
!12683 = !DILocation(line: 507, column: 14, scope: !12682)
!12684 = !DILocation(line: 507, column: 21, scope: !12682)
!12685 = !DILocation(line: 507, column: 18, scope: !12682)
!12686 = !DILocation(line: 507, column: 6, scope: !12647)
!12687 = !DILocalVariable(name: "tmp", scope: !12688, file: !3, line: 508, type: !41)
!12688 = distinct !DILexicalBlock(scope: !12682, file: !3, line: 507, column: 30)
!12689 = !DILocation(line: 508, column: 9, scope: !12688)
!12690 = !DILocation(line: 508, column: 15, scope: !12688)
!12691 = !DILocation(line: 508, column: 58, scope: !12688)
!12692 = !DILocation(line: 508, column: 66, scope: !12688)
!12693 = !DILocation(line: 508, column: 57, scope: !12688)
!12694 = !DILocation(line: 508, column: 55, scope: !12688)
!12695 = !DILocation(line: 510, column: 7, scope: !12696)
!12696 = distinct !DILexicalBlock(scope: !12688, file: !3, line: 510, column: 7)
!12697 = !DILocation(line: 510, column: 15, scope: !12696)
!12698 = !DILocation(line: 510, column: 7, scope: !12688)
!12699 = !DILocation(line: 511, column: 11, scope: !12700)
!12700 = distinct !DILexicalBlock(scope: !12696, file: !3, line: 510, column: 20)
!12701 = !DILocation(line: 511, column: 16, scope: !12700)
!12702 = !DILocation(line: 511, column: 24, scope: !12700)
!12703 = !DILocation(line: 511, column: 4, scope: !12700)
!12704 = !DILocation(line: 511, column: 68, scope: !12700)
!12705 = !DILocation(line: 511, column: 76, scope: !12700)
!12706 = !DILocation(line: 511, column: 66, scope: !12700)
!12707 = !DILocation(line: 512, column: 4, scope: !12700)
!12708 = !DILocation(line: 512, column: 14, scope: !12700)
!12709 = !DILocation(line: 512, column: 22, scope: !12700)
!12710 = !DILocation(line: 513, column: 3, scope: !12700)
!12711 = !DILocation(line: 515, column: 26, scope: !12688)
!12712 = !DILocation(line: 515, column: 3, scope: !12688)
!12713 = !DILocation(line: 515, column: 11, scope: !12688)
!12714 = !DILocation(line: 515, column: 24, scope: !12688)
!12715 = !DILocation(line: 516, column: 17, scope: !12688)
!12716 = !DILocation(line: 516, column: 25, scope: !12688)
!12717 = !DILocation(line: 516, column: 3, scope: !12688)
!12718 = !DILocation(line: 516, column: 11, scope: !12688)
!12719 = !DILocation(line: 516, column: 15, scope: !12688)
!12720 = !DILocation(line: 517, column: 2, scope: !12688)
!12721 = !DILocation(line: 519, column: 7, scope: !12722)
!12722 = distinct !DILexicalBlock(scope: !12647, file: !3, line: 519, column: 6)
!12723 = !DILocation(line: 519, column: 15, scope: !12722)
!12724 = !DILocation(line: 519, column: 28, scope: !12722)
!12725 = !DILocation(line: 519, column: 37, scope: !12722)
!12726 = !DILocation(line: 519, column: 6, scope: !12647)
!12727 = !DILocation(line: 520, column: 3, scope: !12728)
!12728 = distinct !DILexicalBlock(scope: !12722, file: !3, line: 519, column: 44)
!12729 = !DILocation(line: 520, column: 11, scope: !12728)
!12730 = !DILocation(line: 520, column: 24, scope: !12728)
!12731 = !DILocation(line: 520, column: 33, scope: !12728)
!12732 = !DILocation(line: 520, column: 39, scope: !12728)
!12733 = !DILocation(line: 521, column: 41, scope: !12728)
!12734 = !DILocation(line: 521, column: 69, scope: !12728)
!12735 = !DILocation(line: 521, column: 67, scope: !12728)
!12736 = !DILocation(line: 521, column: 79, scope: !12728)
!12737 = !DILocation(line: 521, column: 77, scope: !12728)
!12738 = !DILocation(line: 521, column: 90, scope: !12728)
!12739 = !DILocation(line: 521, column: 99, scope: !12728)
!12740 = !DILocation(line: 521, column: 89, scope: !12728)
!12741 = !DILocation(line: 521, column: 87, scope: !12728)
!12742 = !DILocation(line: 521, column: 107, scope: !12728)
!12743 = !DILocation(line: 521, column: 116, scope: !12728)
!12744 = !DILocation(line: 521, column: 106, scope: !12728)
!12745 = !DILocation(line: 521, column: 104, scope: !12728)
!12746 = !DILocation(line: 521, column: 39, scope: !12728)
!12747 = !DILocation(line: 521, column: 3, scope: !12728)
!12748 = !DILocation(line: 521, column: 11, scope: !12728)
!12749 = !DILocation(line: 521, column: 24, scope: !12728)
!12750 = !DILocation(line: 521, column: 33, scope: !12728)
!12751 = !DILocation(line: 521, column: 35, scope: !12728)
!12752 = !DILocation(line: 522, column: 23, scope: !12728)
!12753 = !DILocation(line: 522, column: 16, scope: !12728)
!12754 = !DILocation(line: 522, column: 14, scope: !12728)
!12755 = !DILocation(line: 522, column: 7, scope: !12728)
!12756 = !DILocation(line: 524, column: 10, scope: !12757)
!12757 = distinct !DILexicalBlock(scope: !12728, file: !3, line: 524, column: 3)
!12758 = !DILocation(line: 524, column: 8, scope: !12757)
!12759 = !DILocation(line: 524, column: 15, scope: !12760)
!12760 = distinct !DILexicalBlock(scope: !12757, file: !3, line: 524, column: 3)
!12761 = !DILocation(line: 524, column: 19, scope: !12760)
!12762 = !DILocation(line: 524, column: 17, scope: !12760)
!12763 = !DILocation(line: 524, column: 3, scope: !12757)
!12764 = !DILocation(line: 525, column: 11, scope: !12765)
!12765 = distinct !DILexicalBlock(scope: !12766, file: !3, line: 525, column: 4)
!12766 = distinct !DILexicalBlock(scope: !12760, file: !3, line: 524, column: 33)
!12767 = !DILocation(line: 525, column: 9, scope: !12765)
!12768 = !DILocation(line: 525, column: 16, scope: !12769)
!12769 = distinct !DILexicalBlock(scope: !12765, file: !3, line: 525, column: 4)
!12770 = !DILocation(line: 525, column: 20, scope: !12769)
!12771 = !DILocation(line: 525, column: 29, scope: !12769)
!12772 = !DILocation(line: 525, column: 18, scope: !12769)
!12773 = !DILocation(line: 525, column: 4, scope: !12765)
!12774 = !DILocation(line: 526, column: 12, scope: !12775)
!12775 = distinct !DILexicalBlock(scope: !12776, file: !3, line: 526, column: 5)
!12776 = distinct !DILexicalBlock(scope: !12769, file: !3, line: 525, column: 39)
!12777 = !DILocation(line: 526, column: 10, scope: !12775)
!12778 = !DILocation(line: 526, column: 17, scope: !12779)
!12779 = distinct !DILexicalBlock(scope: !12775, file: !3, line: 526, column: 5)
!12780 = !DILocation(line: 526, column: 21, scope: !12779)
!12781 = !DILocation(line: 526, column: 30, scope: !12779)
!12782 = !DILocation(line: 526, column: 19, scope: !12779)
!12783 = !DILocation(line: 526, column: 5, scope: !12775)
!12784 = !DILocation(line: 527, column: 25, scope: !12785)
!12785 = distinct !DILexicalBlock(scope: !12779, file: !3, line: 526, column: 40)
!12786 = !DILocation(line: 527, column: 18, scope: !12785)
!12787 = !DILocation(line: 527, column: 37, scope: !12785)
!12788 = !DILocation(line: 527, column: 46, scope: !12785)
!12789 = !DILocation(line: 527, column: 29, scope: !12785)
!12790 = !DILocation(line: 527, column: 27, scope: !12785)
!12791 = !DILocation(line: 527, column: 51, scope: !12785)
!12792 = !DILocation(line: 527, column: 16, scope: !12785)
!12793 = !DILocation(line: 527, column: 9, scope: !12785)
!12794 = !DILocation(line: 528, column: 25, scope: !12785)
!12795 = !DILocation(line: 528, column: 18, scope: !12785)
!12796 = !DILocation(line: 528, column: 37, scope: !12785)
!12797 = !DILocation(line: 528, column: 46, scope: !12785)
!12798 = !DILocation(line: 528, column: 29, scope: !12785)
!12799 = !DILocation(line: 528, column: 27, scope: !12785)
!12800 = !DILocation(line: 528, column: 51, scope: !12785)
!12801 = !DILocation(line: 528, column: 16, scope: !12785)
!12802 = !DILocation(line: 528, column: 9, scope: !12785)
!12803 = !DILocation(line: 530, column: 13, scope: !12785)
!12804 = !DILocation(line: 530, column: 21, scope: !12785)
!12805 = !DILocation(line: 530, column: 11, scope: !12785)
!12806 = !DILocation(line: 531, column: 19, scope: !12785)
!12807 = !DILocation(line: 531, column: 17, scope: !12785)
!12808 = !DILocation(line: 531, column: 33, scope: !12785)
!12809 = !DILocation(line: 531, column: 31, scope: !12785)
!12810 = !DILocation(line: 531, column: 23, scope: !12785)
!12811 = !DILocation(line: 531, column: 41, scope: !12785)
!12812 = !DILocation(line: 531, column: 40, scope: !12785)
!12813 = !DILocation(line: 531, column: 48, scope: !12785)
!12814 = !DILocation(line: 531, column: 46, scope: !12785)
!12815 = !DILocation(line: 531, column: 53, scope: !12785)
!12816 = !DILocation(line: 531, column: 51, scope: !12785)
!12817 = !DILocation(line: 531, column: 58, scope: !12785)
!12818 = !DILocation(line: 531, column: 56, scope: !12785)
!12819 = !DILocation(line: 531, column: 37, scope: !12785)
!12820 = !DILocation(line: 531, column: 9, scope: !12785)
!12821 = !DILocation(line: 532, column: 19, scope: !12785)
!12822 = !DILocation(line: 532, column: 17, scope: !12785)
!12823 = !DILocation(line: 532, column: 24, scope: !12785)
!12824 = !DILocation(line: 532, column: 31, scope: !12785)
!12825 = !DILocation(line: 532, column: 29, scope: !12785)
!12826 = !DILocation(line: 532, column: 37, scope: !12785)
!12827 = !DILocation(line: 532, column: 36, scope: !12785)
!12828 = !DILocation(line: 532, column: 34, scope: !12785)
!12829 = !DILocation(line: 532, column: 22, scope: !12785)
!12830 = !DILocation(line: 532, column: 45, scope: !12785)
!12831 = !DILocation(line: 532, column: 42, scope: !12785)
!12832 = !DILocation(line: 532, column: 9, scope: !12785)
!12833 = !DILocation(line: 533, column: 12, scope: !12785)
!12834 = !DILocation(line: 533, column: 26, scope: !12785)
!12835 = !DILocation(line: 533, column: 24, scope: !12785)
!12836 = !DILocation(line: 533, column: 32, scope: !12785)
!12837 = !DILocation(line: 533, column: 31, scope: !12785)
!12838 = !DILocation(line: 533, column: 39, scope: !12785)
!12839 = !DILocation(line: 533, column: 37, scope: !12785)
!12840 = !DILocation(line: 533, column: 44, scope: !12785)
!12841 = !DILocation(line: 533, column: 42, scope: !12785)
!12842 = !DILocation(line: 533, column: 29, scope: !12785)
!12843 = !DILocation(line: 533, column: 16, scope: !12785)
!12844 = !DILocation(line: 533, column: 9, scope: !12785)
!12845 = !DILocation(line: 536, column: 10, scope: !12846)
!12846 = distinct !DILexicalBlock(scope: !12785, file: !3, line: 536, column: 10)
!12847 = !DILocation(line: 536, column: 18, scope: !12846)
!12848 = !DILocation(line: 536, column: 10, scope: !12785)
!12849 = !DILocation(line: 537, column: 22, scope: !12850)
!12850 = distinct !DILexicalBlock(scope: !12846, file: !3, line: 536, column: 23)
!12851 = !DILocation(line: 537, column: 27, scope: !12850)
!12852 = !DILocation(line: 537, column: 25, scope: !12850)
!12853 = !DILocation(line: 537, column: 32, scope: !12850)
!12854 = !DILocation(line: 537, column: 30, scope: !12850)
!12855 = !DILocation(line: 537, column: 19, scope: !12850)
!12856 = !DILocation(line: 537, column: 12, scope: !12850)
!12857 = !DILocation(line: 538, column: 14, scope: !12850)
!12858 = !DILocation(line: 538, column: 29, scope: !12850)
!12859 = !DILocation(line: 538, column: 37, scope: !12850)
!12860 = !DILocation(line: 538, column: 21, scope: !12850)
!12861 = !DILocation(line: 538, column: 19, scope: !12850)
!12862 = !DILocation(line: 538, column: 12, scope: !12850)
!12863 = !DILocation(line: 539, column: 14, scope: !12864)
!12864 = distinct !DILexicalBlock(scope: !12850, file: !3, line: 539, column: 7)
!12865 = !DILocation(line: 539, column: 12, scope: !12864)
!12866 = !DILocation(line: 539, column: 19, scope: !12867)
!12867 = distinct !DILexicalBlock(scope: !12864, file: !3, line: 539, column: 7)
!12868 = !DILocation(line: 539, column: 23, scope: !12867)
!12869 = !DILocation(line: 539, column: 21, scope: !12867)
!12870 = !DILocation(line: 539, column: 7, scope: !12864)
!12871 = !DILocation(line: 540, column: 15, scope: !12872)
!12872 = distinct !DILexicalBlock(scope: !12867, file: !3, line: 539, column: 37)
!12873 = !DILocation(line: 540, column: 8, scope: !12872)
!12874 = !DILocation(line: 540, column: 10, scope: !12872)
!12875 = !DILocation(line: 540, column: 13, scope: !12872)
!12876 = !DILocation(line: 541, column: 7, scope: !12872)
!12877 = !DILocation(line: 539, column: 33, scope: !12867)
!12878 = !DILocation(line: 539, column: 7, scope: !12867)
!12879 = distinct !{!12879, !12870, !12880}
!12880 = !DILocation(line: 541, column: 7, scope: !12864)
!12881 = !DILocation(line: 542, column: 6, scope: !12850)
!12882 = !DILocation(line: 544, column: 13, scope: !12785)
!12883 = !DILocation(line: 544, column: 6, scope: !12785)
!12884 = !DILocation(line: 544, column: 8, scope: !12785)
!12885 = !DILocation(line: 544, column: 11, scope: !12785)
!12886 = !DILocation(line: 545, column: 39, scope: !12785)
!12887 = !DILocation(line: 545, column: 6, scope: !12785)
!12888 = !DILocation(line: 545, column: 9, scope: !12785)
!12889 = !DILocation(line: 545, column: 11, scope: !12785)
!12890 = !DILocation(line: 545, column: 17, scope: !12785)
!12891 = !DILocation(line: 545, column: 15, scope: !12785)
!12892 = !DILocation(line: 545, column: 28, scope: !12785)
!12893 = !DILocation(line: 545, column: 26, scope: !12785)
!12894 = !DILocation(line: 545, column: 37, scope: !12785)
!12895 = !DILocation(line: 546, column: 29, scope: !12785)
!12896 = !DILocation(line: 546, column: 6, scope: !12785)
!12897 = !DILocation(line: 546, column: 9, scope: !12785)
!12898 = !DILocation(line: 546, column: 11, scope: !12785)
!12899 = !DILocation(line: 546, column: 18, scope: !12785)
!12900 = !DILocation(line: 546, column: 16, scope: !12785)
!12901 = !DILocation(line: 546, column: 27, scope: !12785)
!12902 = !DILocation(line: 548, column: 11, scope: !12785)
!12903 = !DILocation(line: 548, column: 8, scope: !12785)
!12904 = !DILocation(line: 549, column: 5, scope: !12785)
!12905 = !DILocation(line: 526, column: 36, scope: !12779)
!12906 = !DILocation(line: 526, column: 5, scope: !12779)
!12907 = distinct !{!12907, !12783, !12908}
!12908 = !DILocation(line: 549, column: 5, scope: !12775)
!12909 = !DILocation(line: 550, column: 4, scope: !12776)
!12910 = !DILocation(line: 525, column: 35, scope: !12769)
!12911 = !DILocation(line: 525, column: 4, scope: !12769)
!12912 = distinct !{!12912, !12773, !12913}
!12913 = !DILocation(line: 550, column: 4, scope: !12765)
!12914 = !DILocation(line: 551, column: 3, scope: !12766)
!12915 = !DILocation(line: 524, column: 29, scope: !12760)
!12916 = !DILocation(line: 524, column: 3, scope: !12760)
!12917 = distinct !{!12917, !12763, !12918}
!12918 = !DILocation(line: 551, column: 3, scope: !12757)
!12919 = !DILocation(line: 552, column: 2, scope: !12728)
!12920 = !DILocation(line: 554, column: 9, scope: !12647)
!12921 = !DILocation(line: 554, column: 17, scope: !12647)
!12922 = !DILocation(line: 554, column: 30, scope: !12647)
!12923 = !DILocation(line: 554, column: 39, scope: !12647)
!12924 = !DILocation(line: 554, column: 2, scope: !12647)
!12925 = distinct !DISubprogram(name: "ccg_loops_to_corners", scope: !3, file: !3, line: 2895, type: !12926, scopeLine: 2898, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!12926 = !DISubroutineType(types: !12927)
!12927 = !{null, !1968, !1968, !1968, !27, !27, !27, !8200, !8200, !8200, !8200}
!12928 = !DILocalVariable(name: "fdata", arg: 1, scope: !12925, file: !3, line: 2895, type: !1968)
!12929 = !DILocation(line: 2895, column: 46, scope: !12925)
!12930 = !DILocalVariable(name: "ldata", arg: 2, scope: !12925, file: !3, line: 2895, type: !1968)
!12931 = !DILocation(line: 2895, column: 65, scope: !12925)
!12932 = !DILocalVariable(name: "pdata", arg: 3, scope: !12925, file: !3, line: 2896, type: !1968)
!12933 = !DILocation(line: 2896, column: 46, scope: !12925)
!12934 = !DILocalVariable(name: "loopstart", arg: 4, scope: !12925, file: !3, line: 2896, type: !27)
!12935 = !DILocation(line: 2896, column: 57, scope: !12925)
!12936 = !DILocalVariable(name: "findex", arg: 5, scope: !12925, file: !3, line: 2896, type: !27)
!12937 = !DILocation(line: 2896, column: 72, scope: !12925)
!12938 = !DILocalVariable(name: "polyindex", arg: 6, scope: !12925, file: !3, line: 2896, type: !27)
!12939 = !DILocation(line: 2896, column: 85, scope: !12925)
!12940 = !DILocalVariable(name: "numTex", arg: 7, scope: !12925, file: !3, line: 2897, type: !8200)
!12941 = !DILocation(line: 2897, column: 44, scope: !12925)
!12942 = !DILocalVariable(name: "numCol", arg: 8, scope: !12925, file: !3, line: 2897, type: !8200)
!12943 = !DILocation(line: 2897, column: 62, scope: !12925)
!12944 = !DILocalVariable(name: "hasPCol", arg: 9, scope: !12925, file: !3, line: 2897, type: !8200)
!12945 = !DILocation(line: 2897, column: 80, scope: !12925)
!12946 = !DILocalVariable(name: "hasOrigSpace", arg: 10, scope: !12925, file: !3, line: 2897, type: !8200)
!12947 = !DILocation(line: 2897, column: 99, scope: !12925)
!12948 = !DILocalVariable(name: "texface", scope: !12925, file: !3, line: 2899, type: !12129)
!12949 = !DILocation(line: 2899, column: 10, scope: !12925)
!12950 = !DILocalVariable(name: "texpoly", scope: !12925, file: !3, line: 2900, type: !12951)
!12951 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12952, size: 64)
!12952 = !DIDerivedType(tag: DW_TAG_typedef, name: "MTexPoly", file: !684, line: 97, baseType: !5237)
!12953 = !DILocation(line: 2900, column: 12, scope: !12925)
!12954 = !DILocalVariable(name: "mcol", scope: !12925, file: !3, line: 2901, type: !10496)
!12955 = !DILocation(line: 2901, column: 8, scope: !12925)
!12956 = !DILocalVariable(name: "mloopcol", scope: !12925, file: !3, line: 2902, type: !12957)
!12957 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12958, size: 64)
!12958 = !DIDerivedType(tag: DW_TAG_typedef, name: "MLoopCol", file: !684, line: 131, baseType: !5254)
!12959 = !DILocation(line: 2902, column: 12, scope: !12925)
!12960 = !DILocalVariable(name: "mloopuv", scope: !12925, file: !3, line: 2903, type: !12961)
!12961 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !12962, size: 64)
!12962 = !DIDerivedType(tag: DW_TAG_typedef, name: "MLoopUV", file: !684, line: 112, baseType: !5248)
!12963 = !DILocation(line: 2903, column: 11, scope: !12925)
!12964 = !DILocalVariable(name: "i", scope: !12925, file: !3, line: 2904, type: !27)
!12965 = !DILocation(line: 2904, column: 6, scope: !12925)
!12966 = !DILocalVariable(name: "j", scope: !12925, file: !3, line: 2904, type: !27)
!12967 = !DILocation(line: 2904, column: 9, scope: !12925)
!12968 = !DILocation(line: 2906, column: 9, scope: !12969)
!12969 = distinct !DILexicalBlock(scope: !12925, file: !3, line: 2906, column: 2)
!12970 = !DILocation(line: 2906, column: 7, scope: !12969)
!12971 = !DILocation(line: 2906, column: 14, scope: !12972)
!12972 = distinct !DILexicalBlock(scope: !12969, file: !3, line: 2906, column: 2)
!12973 = !DILocation(line: 2906, column: 18, scope: !12972)
!12974 = !DILocation(line: 2906, column: 16, scope: !12972)
!12975 = !DILocation(line: 2906, column: 2, scope: !12969)
!12976 = !DILocation(line: 2907, column: 30, scope: !12977)
!12977 = distinct !DILexicalBlock(scope: !12972, file: !3, line: 2906, column: 31)
!12978 = !DILocation(line: 2907, column: 48, scope: !12977)
!12979 = !DILocation(line: 2907, column: 56, scope: !12977)
!12980 = !DILocation(line: 2907, column: 13, scope: !12977)
!12981 = !DILocation(line: 2907, column: 11, scope: !12977)
!12982 = !DILocation(line: 2908, column: 30, scope: !12977)
!12983 = !DILocation(line: 2908, column: 50, scope: !12977)
!12984 = !DILocation(line: 2908, column: 61, scope: !12977)
!12985 = !DILocation(line: 2908, column: 13, scope: !12977)
!12986 = !DILocation(line: 2908, column: 11, scope: !12977)
!12987 = !DILocation(line: 2910, column: 3, scope: !12988)
!12988 = distinct !DILexicalBlock(scope: !12977, file: !3, line: 2910, column: 3)
!12989 = !DILocation(line: 2912, column: 30, scope: !12977)
!12990 = !DILocation(line: 2912, column: 49, scope: !12977)
!12991 = !DILocation(line: 2912, column: 60, scope: !12977)
!12992 = !DILocation(line: 2912, column: 13, scope: !12977)
!12993 = !DILocation(line: 2912, column: 11, scope: !12977)
!12994 = !DILocation(line: 2913, column: 10, scope: !12995)
!12995 = distinct !DILexicalBlock(scope: !12977, file: !3, line: 2913, column: 3)
!12996 = !DILocation(line: 2913, column: 8, scope: !12995)
!12997 = !DILocation(line: 2913, column: 15, scope: !12998)
!12998 = distinct !DILexicalBlock(scope: !12995, file: !3, line: 2913, column: 3)
!12999 = !DILocation(line: 2913, column: 17, scope: !12998)
!13000 = !DILocation(line: 2913, column: 3, scope: !12995)
!13001 = !DILocation(line: 2914, column: 15, scope: !13002)
!13002 = distinct !DILexicalBlock(scope: !12998, file: !3, line: 2913, column: 38)
!13003 = !DILocation(line: 2914, column: 24, scope: !13002)
!13004 = !DILocation(line: 2914, column: 27, scope: !13002)
!13005 = !DILocation(line: 2914, column: 31, scope: !13002)
!13006 = !DILocation(line: 2914, column: 40, scope: !13002)
!13007 = !DILocation(line: 2914, column: 4, scope: !13002)
!13008 = !DILocation(line: 2915, column: 3, scope: !13002)
!13009 = !DILocation(line: 2913, column: 23, scope: !12998)
!13010 = !DILocation(line: 2913, column: 34, scope: !12998)
!13011 = !DILocation(line: 2913, column: 3, scope: !12998)
!13012 = distinct !{!13012, !13000, !13013}
!13013 = !DILocation(line: 2915, column: 3, scope: !12995)
!13014 = !DILocation(line: 2916, column: 2, scope: !12977)
!13015 = !DILocation(line: 2906, column: 27, scope: !12972)
!13016 = !DILocation(line: 2906, column: 2, scope: !12972)
!13017 = distinct !{!13017, !12975, !13018}
!13018 = !DILocation(line: 2916, column: 2, scope: !12969)
!13019 = !DILocation(line: 2918, column: 9, scope: !13020)
!13020 = distinct !DILexicalBlock(scope: !12925, file: !3, line: 2918, column: 2)
!13021 = !DILocation(line: 2918, column: 7, scope: !13020)
!13022 = !DILocation(line: 2918, column: 14, scope: !13023)
!13023 = distinct !DILexicalBlock(scope: !13020, file: !3, line: 2918, column: 2)
!13024 = !DILocation(line: 2918, column: 18, scope: !13023)
!13025 = !DILocation(line: 2918, column: 16, scope: !13023)
!13026 = !DILocation(line: 2918, column: 2, scope: !13020)
!13027 = !DILocation(line: 2919, column: 31, scope: !13028)
!13028 = distinct !DILexicalBlock(scope: !13023, file: !3, line: 2918, column: 31)
!13029 = !DILocation(line: 2919, column: 51, scope: !13028)
!13030 = !DILocation(line: 2919, column: 62, scope: !13028)
!13031 = !DILocation(line: 2919, column: 14, scope: !13028)
!13032 = !DILocation(line: 2919, column: 12, scope: !13028)
!13033 = !DILocation(line: 2920, column: 27, scope: !13028)
!13034 = !DILocation(line: 2920, column: 43, scope: !13028)
!13035 = !DILocation(line: 2920, column: 51, scope: !13028)
!13036 = !DILocation(line: 2920, column: 10, scope: !13028)
!13037 = !DILocation(line: 2920, column: 8, scope: !13028)
!13038 = !DILocation(line: 2922, column: 10, scope: !13039)
!13039 = distinct !DILexicalBlock(scope: !13028, file: !3, line: 2922, column: 3)
!13040 = !DILocation(line: 2922, column: 8, scope: !13039)
!13041 = !DILocation(line: 2922, column: 15, scope: !13042)
!13042 = distinct !DILexicalBlock(scope: !13039, file: !3, line: 2922, column: 3)
!13043 = !DILocation(line: 2922, column: 17, scope: !13042)
!13044 = !DILocation(line: 2922, column: 3, scope: !13039)
!13045 = !DILocalVariable(name: "mloopcol__tmp", scope: !13046, file: !3, line: 2923, type: !13048)
!13046 = distinct !DILexicalBlock(scope: !13047, file: !3, line: 2923, column: 4)
!13047 = distinct !DILexicalBlock(scope: !13042, file: !3, line: 2922, column: 39)
!13048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13049, size: 64)
!13049 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !12958)
!13050 = !DILocation(line: 2923, column: 4, scope: !13046)
!13051 = !DILocalVariable(name: "mcol__tmp", scope: !13046, file: !3, line: 2923, type: !10496)
!13052 = !DILocation(line: 2924, column: 3, scope: !13047)
!13053 = !DILocation(line: 2922, column: 23, scope: !13042)
!13054 = !DILocation(line: 2922, column: 35, scope: !13042)
!13055 = !DILocation(line: 2922, column: 3, scope: !13042)
!13056 = distinct !{!13056, !13044, !13057}
!13057 = !DILocation(line: 2924, column: 3, scope: !13039)
!13058 = !DILocation(line: 2925, column: 2, scope: !13028)
!13059 = !DILocation(line: 2918, column: 27, scope: !13023)
!13060 = !DILocation(line: 2918, column: 2, scope: !13023)
!13061 = distinct !{!13061, !13026, !13062}
!13062 = !DILocation(line: 2925, column: 2, scope: !13020)
!13063 = !DILocation(line: 2927, column: 6, scope: !13064)
!13064 = distinct !DILexicalBlock(scope: !12925, file: !3, line: 2927, column: 6)
!13065 = !DILocation(line: 2927, column: 6, scope: !12925)
!13066 = !DILocation(line: 2928, column: 29, scope: !13067)
!13067 = distinct !DILexicalBlock(scope: !13064, file: !3, line: 2927, column: 15)
!13068 = !DILocation(line: 2928, column: 36, scope: !13067)
!13069 = !DILocation(line: 2928, column: 14, scope: !13067)
!13070 = !DILocation(line: 2928, column: 12, scope: !13067)
!13071 = !DILocation(line: 2929, column: 25, scope: !13067)
!13072 = !DILocation(line: 2929, column: 32, scope: !13067)
!13073 = !DILocation(line: 2929, column: 10, scope: !13067)
!13074 = !DILocation(line: 2929, column: 8, scope: !13067)
!13075 = !DILocation(line: 2931, column: 10, scope: !13076)
!13076 = distinct !DILexicalBlock(scope: !13067, file: !3, line: 2931, column: 3)
!13077 = !DILocation(line: 2931, column: 8, scope: !13076)
!13078 = !DILocation(line: 2931, column: 15, scope: !13079)
!13079 = distinct !DILexicalBlock(scope: !13076, file: !3, line: 2931, column: 3)
!13080 = !DILocation(line: 2931, column: 17, scope: !13079)
!13081 = !DILocation(line: 2931, column: 3, scope: !13076)
!13082 = !DILocalVariable(name: "mloopcol__tmp", scope: !13083, file: !3, line: 2932, type: !13048)
!13083 = distinct !DILexicalBlock(scope: !13084, file: !3, line: 2932, column: 4)
!13084 = distinct !DILexicalBlock(scope: !13079, file: !3, line: 2931, column: 39)
!13085 = !DILocation(line: 2932, column: 4, scope: !13083)
!13086 = !DILocalVariable(name: "mcol__tmp", scope: !13083, file: !3, line: 2932, type: !10496)
!13087 = !DILocation(line: 2933, column: 3, scope: !13084)
!13088 = !DILocation(line: 2931, column: 23, scope: !13079)
!13089 = !DILocation(line: 2931, column: 35, scope: !13079)
!13090 = !DILocation(line: 2931, column: 3, scope: !13079)
!13091 = distinct !{!13091, !13081, !13092}
!13092 = !DILocation(line: 2933, column: 3, scope: !13076)
!13093 = !DILocation(line: 2934, column: 2, scope: !13067)
!13094 = !DILocation(line: 2936, column: 6, scope: !13095)
!13095 = distinct !DILexicalBlock(scope: !12925, file: !3, line: 2936, column: 6)
!13096 = !DILocation(line: 2936, column: 6, scope: !12925)
!13097 = !DILocalVariable(name: "of", scope: !13098, file: !3, line: 2937, type: !13099)
!13098 = distinct !DILexicalBlock(scope: !13095, file: !3, line: 2936, column: 20)
!13099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13100, size: 64)
!13100 = !DIDerivedType(tag: DW_TAG_typedef, name: "OrigSpaceFace", file: !684, line: 180, baseType: !13101)
!13101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OrigSpaceFace", file: !684, line: 178, size: 256, elements: !13102)
!13102 = !{!13103}
!13103 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !13101, file: !684, line: 179, baseType: !2125, size: 256)
!13104 = !DILocation(line: 2937, column: 18, scope: !13098)
!13105 = !DILocation(line: 2937, column: 38, scope: !13098)
!13106 = !DILocation(line: 2937, column: 45, scope: !13098)
!13107 = !DILocation(line: 2937, column: 23, scope: !13098)
!13108 = !DILocalVariable(name: "lof", scope: !13098, file: !3, line: 2938, type: !13109)
!13109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13110, size: 64)
!13110 = !DIDerivedType(tag: DW_TAG_typedef, name: "OrigSpaceLoop", file: !684, line: 184, baseType: !13111)
!13111 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "OrigSpaceLoop", file: !684, line: 182, size: 64, elements: !13112)
!13112 = !{!13113}
!13113 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !13111, file: !684, line: 183, baseType: !517, size: 64)
!13114 = !DILocation(line: 2938, column: 18, scope: !13098)
!13115 = !DILocation(line: 2940, column: 24, scope: !13098)
!13116 = !DILocation(line: 2940, column: 31, scope: !13098)
!13117 = !DILocation(line: 2940, column: 9, scope: !13098)
!13118 = !DILocation(line: 2940, column: 7, scope: !13098)
!13119 = !DILocation(line: 2941, column: 10, scope: !13120)
!13120 = distinct !DILexicalBlock(scope: !13098, file: !3, line: 2941, column: 3)
!13121 = !DILocation(line: 2941, column: 8, scope: !13120)
!13122 = !DILocation(line: 2941, column: 15, scope: !13123)
!13123 = distinct !DILexicalBlock(scope: !13120, file: !3, line: 2941, column: 3)
!13124 = !DILocation(line: 2941, column: 17, scope: !13123)
!13125 = !DILocation(line: 2941, column: 3, scope: !13120)
!13126 = !DILocation(line: 2942, column: 15, scope: !13127)
!13127 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 2941, column: 34)
!13128 = !DILocation(line: 2942, column: 19, scope: !13127)
!13129 = !DILocation(line: 2942, column: 22, scope: !13127)
!13130 = !DILocation(line: 2942, column: 26, scope: !13127)
!13131 = !DILocation(line: 2942, column: 31, scope: !13127)
!13132 = !DILocation(line: 2942, column: 4, scope: !13127)
!13133 = !DILocation(line: 2943, column: 3, scope: !13127)
!13134 = !DILocation(line: 2941, column: 23, scope: !13123)
!13135 = !DILocation(line: 2941, column: 30, scope: !13123)
!13136 = !DILocation(line: 2941, column: 3, scope: !13123)
!13137 = distinct !{!13137, !13125, !13138}
!13138 = !DILocation(line: 2943, column: 3, scope: !13120)
!13139 = !DILocation(line: 2944, column: 2, scope: !13098)
!13140 = !DILocation(line: 2945, column: 1, scope: !12925)
!13141 = distinct !DISubprogram(name: "ccgDM_getEdgeMapIndex", scope: !3, file: !3, line: 678, type: !13142, scopeLine: 679, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!13142 = !DISubroutineType(types: !13143)
!13143 = !{!27, !6, !2638}
!13144 = !DILocalVariable(name: "ss", arg: 1, scope: !13141, file: !3, line: 678, type: !6)
!13145 = !DILocation(line: 678, column: 46, scope: !13141)
!13146 = !DILocalVariable(name: "e", arg: 2, scope: !13141, file: !3, line: 678, type: !2638)
!13147 = !DILocation(line: 678, column: 59, scope: !13141)
!13148 = !DILocation(line: 680, column: 45, scope: !13141)
!13149 = !DILocation(line: 680, column: 49, scope: !13141)
!13150 = !DILocation(line: 680, column: 18, scope: !13141)
!13151 = !DILocation(line: 680, column: 10, scope: !13141)
!13152 = !DILocation(line: 680, column: 9, scope: !13141)
!13153 = !DILocation(line: 680, column: 2, scope: !13141)
!13154 = distinct !DISubprogram(name: "set_subsurf_uv", scope: !3, file: !3, line: 408, type: !13155, scopeLine: 409, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!13155 = !DISubroutineType(types: !13156)
!13156 = !{null, !6, !11, !11, !27}
!13157 = !DILocalVariable(name: "ss", arg: 1, scope: !13154, file: !3, line: 408, type: !6)
!13158 = !DILocation(line: 408, column: 40, scope: !13154)
!13159 = !DILocalVariable(name: "dm", arg: 2, scope: !13154, file: !3, line: 408, type: !11)
!13160 = !DILocation(line: 408, column: 57, scope: !13154)
!13161 = !DILocalVariable(name: "result", arg: 3, scope: !13154, file: !3, line: 408, type: !11)
!13162 = !DILocation(line: 408, column: 74, scope: !13154)
!13163 = !DILocalVariable(name: "n", arg: 4, scope: !13154, file: !3, line: 408, type: !27)
!13164 = !DILocation(line: 408, column: 86, scope: !13154)
!13165 = !DILocalVariable(name: "uvss", scope: !13154, file: !3, line: 410, type: !6)
!13166 = !DILocation(line: 410, column: 14, scope: !13154)
!13167 = !DILocalVariable(name: "faceMap", scope: !13154, file: !3, line: 411, type: !8746)
!13168 = !DILocation(line: 411, column: 12, scope: !13154)
!13169 = !DILocalVariable(name: "tf", scope: !13154, file: !3, line: 412, type: !12129)
!13170 = !DILocation(line: 412, column: 10, scope: !13154)
!13171 = !DILocalVariable(name: "mluv", scope: !13154, file: !3, line: 413, type: !12961)
!13172 = !DILocation(line: 413, column: 11, scope: !13154)
!13173 = !DILocalVariable(name: "fi", scope: !13154, file: !3, line: 414, type: !3738)
!13174 = !DILocation(line: 414, column: 19, scope: !13154)
!13175 = !DILocalVariable(name: "index", scope: !13154, file: !3, line: 415, type: !27)
!13176 = !DILocation(line: 415, column: 6, scope: !13154)
!13177 = !DILocalVariable(name: "gridSize", scope: !13154, file: !3, line: 415, type: !27)
!13178 = !DILocation(line: 415, column: 13, scope: !13154)
!13179 = !DILocalVariable(name: "gridFaces", scope: !13154, file: !3, line: 415, type: !27)
!13180 = !DILocation(line: 415, column: 23, scope: !13154)
!13181 = !DILocalVariable(name: "totface", scope: !13154, file: !3, line: 415, type: !27)
!13182 = !DILocation(line: 415, column: 48, scope: !13154)
!13183 = !DILocalVariable(name: "x", scope: !13154, file: !3, line: 415, type: !27)
!13184 = !DILocation(line: 415, column: 57, scope: !13154)
!13185 = !DILocalVariable(name: "y", scope: !13154, file: !3, line: 415, type: !27)
!13186 = !DILocation(line: 415, column: 60, scope: !13154)
!13187 = !DILocalVariable(name: "S", scope: !13154, file: !3, line: 415, type: !27)
!13188 = !DILocation(line: 415, column: 63, scope: !13154)
!13189 = !DILocalVariable(name: "dmloopuv", scope: !13154, file: !3, line: 416, type: !12961)
!13190 = !DILocation(line: 416, column: 11, scope: !13154)
!13191 = !DILocation(line: 416, column: 46, scope: !13154)
!13192 = !DILocation(line: 416, column: 50, scope: !13154)
!13193 = !DILocation(line: 416, column: 72, scope: !13154)
!13194 = !DILocation(line: 416, column: 22, scope: !13154)
!13195 = !DILocalVariable(name: "tface", scope: !13154, file: !3, line: 419, type: !12129)
!13196 = !DILocation(line: 419, column: 10, scope: !13154)
!13197 = !DILocation(line: 419, column: 42, scope: !13154)
!13198 = !DILocation(line: 419, column: 50, scope: !13154)
!13199 = !DILocation(line: 419, column: 71, scope: !13154)
!13200 = !DILocation(line: 419, column: 18, scope: !13154)
!13201 = !DILocalVariable(name: "mloopuv", scope: !13154, file: !3, line: 420, type: !12961)
!13202 = !DILocation(line: 420, column: 11, scope: !13154)
!13203 = !DILocation(line: 420, column: 45, scope: !13154)
!13204 = !DILocation(line: 420, column: 53, scope: !13154)
!13205 = !DILocation(line: 420, column: 75, scope: !13154)
!13206 = !DILocation(line: 420, column: 21, scope: !13154)
!13207 = !DILocation(line: 422, column: 7, scope: !13208)
!13208 = distinct !DILexicalBlock(scope: !13154, file: !3, line: 422, column: 6)
!13209 = !DILocation(line: 422, column: 16, scope: !13208)
!13210 = !DILocation(line: 422, column: 21, scope: !13208)
!13211 = !DILocation(line: 422, column: 27, scope: !13208)
!13212 = !DILocation(line: 422, column: 31, scope: !13208)
!13213 = !DILocation(line: 422, column: 6, scope: !13154)
!13214 = !DILocation(line: 423, column: 3, scope: !13208)
!13215 = !DILocation(line: 426, column: 59, scope: !13154)
!13216 = !DILocation(line: 426, column: 27, scope: !13154)
!13217 = !DILocation(line: 426, column: 9, scope: !13154)
!13218 = !DILocation(line: 426, column: 7, scope: !13154)
!13219 = !DILocation(line: 428, column: 23, scope: !13220)
!13220 = distinct !DILexicalBlock(scope: !13154, file: !3, line: 428, column: 6)
!13221 = !DILocation(line: 428, column: 29, scope: !13220)
!13222 = !DILocation(line: 428, column: 33, scope: !13220)
!13223 = !DILocation(line: 428, column: 37, scope: !13220)
!13224 = !DILocation(line: 428, column: 7, scope: !13220)
!13225 = !DILocation(line: 428, column: 6, scope: !13154)
!13226 = !DILocation(line: 429, column: 19, scope: !13227)
!13227 = distinct !DILexicalBlock(scope: !13220, file: !3, line: 428, column: 48)
!13228 = !DILocation(line: 429, column: 3, scope: !13227)
!13229 = !DILocation(line: 430, column: 3, scope: !13227)
!13230 = !DILocation(line: 434, column: 35, scope: !13154)
!13231 = !DILocation(line: 434, column: 12, scope: !13154)
!13232 = !DILocation(line: 434, column: 10, scope: !13154)
!13233 = !DILocation(line: 436, column: 36, scope: !13154)
!13234 = !DILocation(line: 436, column: 13, scope: !13154)
!13235 = !DILocation(line: 436, column: 11, scope: !13154)
!13236 = !DILocation(line: 437, column: 14, scope: !13154)
!13237 = !DILocation(line: 437, column: 23, scope: !13154)
!13238 = !DILocation(line: 437, column: 12, scope: !13154)
!13239 = !DILocation(line: 440, column: 12, scope: !13154)
!13240 = !DILocation(line: 440, column: 24, scope: !13154)
!13241 = !DILocation(line: 440, column: 32, scope: !13154)
!13242 = !DILocation(line: 440, column: 10, scope: !13154)
!13243 = !DILocation(line: 441, column: 39, scope: !13244)
!13244 = distinct !DILexicalBlock(scope: !13154, file: !3, line: 441, column: 2)
!13245 = !DILocation(line: 441, column: 12, scope: !13244)
!13246 = !DILocation(line: 441, column: 10, scope: !13244)
!13247 = !DILocation(line: 441, column: 7, scope: !13244)
!13248 = !DILocation(line: 441, column: 73, scope: !13249)
!13249 = distinct !DILexicalBlock(scope: !13244, file: !3, line: 441, column: 2)
!13250 = !DILocation(line: 441, column: 47, scope: !13249)
!13251 = !DILocation(line: 441, column: 46, scope: !13249)
!13252 = !DILocation(line: 441, column: 2, scope: !13244)
!13253 = !DILocalVariable(name: "f", scope: !13254, file: !3, line: 442, type: !2461)
!13254 = distinct !DILexicalBlock(scope: !13249, file: !3, line: 441, column: 104)
!13255 = !DILocation(line: 442, column: 12, scope: !13254)
!13256 = !DILocation(line: 442, column: 43, scope: !13254)
!13257 = !DILocation(line: 442, column: 16, scope: !13254)
!13258 = !DILocation(line: 443, column: 68, scope: !13254)
!13259 = !DILocation(line: 443, column: 3, scope: !13254)
!13260 = !DILocation(line: 443, column: 11, scope: !13254)
!13261 = !DILocation(line: 443, column: 66, scope: !13254)
!13262 = !DILocation(line: 444, column: 2, scope: !13254)
!13263 = !DILocation(line: 441, column: 99, scope: !13249)
!13264 = !DILocation(line: 441, column: 78, scope: !13249)
!13265 = !DILocation(line: 441, column: 2, scope: !13249)
!13266 = distinct !{!13266, !13252, !13267}
!13267 = !DILocation(line: 444, column: 2, scope: !13244)
!13268 = !DILocation(line: 445, column: 23, scope: !13154)
!13269 = !DILocation(line: 445, column: 2, scope: !13154)
!13270 = !DILocation(line: 448, column: 7, scope: !13154)
!13271 = !DILocation(line: 448, column: 5, scope: !13154)
!13272 = !DILocation(line: 449, column: 9, scope: !13154)
!13273 = !DILocation(line: 449, column: 7, scope: !13154)
!13274 = !DILocation(line: 451, column: 13, scope: !13275)
!13275 = distinct !DILexicalBlock(scope: !13154, file: !3, line: 451, column: 2)
!13276 = !DILocation(line: 451, column: 7, scope: !13275)
!13277 = !DILocation(line: 451, column: 18, scope: !13278)
!13278 = distinct !DILexicalBlock(scope: !13275, file: !3, line: 451, column: 2)
!13279 = !DILocation(line: 451, column: 26, scope: !13278)
!13280 = !DILocation(line: 451, column: 24, scope: !13278)
!13281 = !DILocation(line: 451, column: 2, scope: !13275)
!13282 = !DILocalVariable(name: "f", scope: !13283, file: !3, line: 452, type: !2461)
!13283 = distinct !DILexicalBlock(scope: !13278, file: !3, line: 451, column: 44)
!13284 = !DILocation(line: 452, column: 12, scope: !13283)
!13285 = !DILocation(line: 452, column: 16, scope: !13283)
!13286 = !DILocation(line: 452, column: 24, scope: !13283)
!13287 = !DILocalVariable(name: "numVerts", scope: !13283, file: !3, line: 453, type: !27)
!13288 = !DILocation(line: 453, column: 7, scope: !13283)
!13289 = !DILocation(line: 453, column: 45, scope: !13283)
!13290 = !DILocation(line: 453, column: 18, scope: !13283)
!13291 = !DILocation(line: 455, column: 10, scope: !13292)
!13292 = distinct !DILexicalBlock(scope: !13283, file: !3, line: 455, column: 3)
!13293 = !DILocation(line: 455, column: 8, scope: !13292)
!13294 = !DILocation(line: 455, column: 15, scope: !13295)
!13295 = distinct !DILexicalBlock(scope: !13292, file: !3, line: 455, column: 3)
!13296 = !DILocation(line: 455, column: 19, scope: !13295)
!13297 = !DILocation(line: 455, column: 17, scope: !13295)
!13298 = !DILocation(line: 455, column: 3, scope: !13292)
!13299 = !DILocalVariable(name: "faceGridData", scope: !13300, file: !3, line: 456, type: !13301)
!13300 = distinct !DILexicalBlock(scope: !13295, file: !3, line: 455, column: 34)
!13301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !517, size: 64)
!13302 = !DILocation(line: 456, column: 12, scope: !13300)
!13303 = !DILocation(line: 456, column: 63, scope: !13300)
!13304 = !DILocation(line: 456, column: 69, scope: !13300)
!13305 = !DILocation(line: 456, column: 72, scope: !13300)
!13306 = !DILocation(line: 456, column: 31, scope: !13300)
!13307 = !DILocation(line: 458, column: 11, scope: !13308)
!13308 = distinct !DILexicalBlock(scope: !13300, file: !3, line: 458, column: 4)
!13309 = !DILocation(line: 458, column: 9, scope: !13308)
!13310 = !DILocation(line: 458, column: 16, scope: !13311)
!13311 = distinct !DILexicalBlock(scope: !13308, file: !3, line: 458, column: 4)
!13312 = !DILocation(line: 458, column: 20, scope: !13311)
!13313 = !DILocation(line: 458, column: 18, scope: !13311)
!13314 = !DILocation(line: 458, column: 4, scope: !13308)
!13315 = !DILocation(line: 459, column: 12, scope: !13316)
!13316 = distinct !DILexicalBlock(scope: !13317, file: !3, line: 459, column: 5)
!13317 = distinct !DILexicalBlock(scope: !13311, file: !3, line: 458, column: 36)
!13318 = !DILocation(line: 459, column: 10, scope: !13316)
!13319 = !DILocation(line: 459, column: 17, scope: !13320)
!13320 = distinct !DILexicalBlock(scope: !13316, file: !3, line: 459, column: 5)
!13321 = !DILocation(line: 459, column: 21, scope: !13320)
!13322 = !DILocation(line: 459, column: 19, scope: !13320)
!13323 = !DILocation(line: 459, column: 5, scope: !13316)
!13324 = !DILocalVariable(name: "a", scope: !13325, file: !3, line: 460, type: !1306)
!13325 = distinct !DILexicalBlock(scope: !13320, file: !3, line: 459, column: 37)
!13326 = !DILocation(line: 460, column: 13, scope: !13325)
!13327 = !DILocation(line: 460, column: 17, scope: !13325)
!13328 = !DILocation(line: 460, column: 31, scope: !13325)
!13329 = !DILocation(line: 460, column: 33, scope: !13325)
!13330 = !DILocation(line: 460, column: 40, scope: !13325)
!13331 = !DILocation(line: 460, column: 38, scope: !13325)
!13332 = !DILocation(line: 460, column: 51, scope: !13325)
!13333 = !DILocation(line: 460, column: 49, scope: !13325)
!13334 = !DILocation(line: 460, column: 53, scope: !13325)
!13335 = !DILocalVariable(name: "b", scope: !13325, file: !3, line: 461, type: !1306)
!13336 = !DILocation(line: 461, column: 13, scope: !13325)
!13337 = !DILocation(line: 461, column: 17, scope: !13325)
!13338 = !DILocation(line: 461, column: 31, scope: !13325)
!13339 = !DILocation(line: 461, column: 33, scope: !13325)
!13340 = !DILocation(line: 461, column: 40, scope: !13325)
!13341 = !DILocation(line: 461, column: 38, scope: !13325)
!13342 = !DILocation(line: 461, column: 51, scope: !13325)
!13343 = !DILocation(line: 461, column: 49, scope: !13325)
!13344 = !DILocation(line: 461, column: 53, scope: !13325)
!13345 = !DILocalVariable(name: "c", scope: !13325, file: !3, line: 462, type: !1306)
!13346 = !DILocation(line: 462, column: 13, scope: !13325)
!13347 = !DILocation(line: 462, column: 17, scope: !13325)
!13348 = !DILocation(line: 462, column: 31, scope: !13325)
!13349 = !DILocation(line: 462, column: 33, scope: !13325)
!13350 = !DILocation(line: 462, column: 40, scope: !13325)
!13351 = !DILocation(line: 462, column: 38, scope: !13325)
!13352 = !DILocation(line: 462, column: 51, scope: !13325)
!13353 = !DILocation(line: 462, column: 49, scope: !13325)
!13354 = !DILocation(line: 462, column: 53, scope: !13325)
!13355 = !DILocalVariable(name: "d", scope: !13325, file: !3, line: 463, type: !1306)
!13356 = !DILocation(line: 463, column: 13, scope: !13325)
!13357 = !DILocation(line: 463, column: 17, scope: !13325)
!13358 = !DILocation(line: 463, column: 31, scope: !13325)
!13359 = !DILocation(line: 463, column: 33, scope: !13325)
!13360 = !DILocation(line: 463, column: 40, scope: !13325)
!13361 = !DILocation(line: 463, column: 38, scope: !13325)
!13362 = !DILocation(line: 463, column: 51, scope: !13325)
!13363 = !DILocation(line: 463, column: 49, scope: !13325)
!13364 = !DILocation(line: 463, column: 53, scope: !13325)
!13365 = !DILocation(line: 465, column: 10, scope: !13366)
!13366 = distinct !DILexicalBlock(scope: !13325, file: !3, line: 465, column: 10)
!13367 = !DILocation(line: 465, column: 10, scope: !13325)
!13368 = !DILocation(line: 466, column: 18, scope: !13369)
!13369 = distinct !DILexicalBlock(scope: !13366, file: !3, line: 465, column: 14)
!13370 = !DILocation(line: 466, column: 22, scope: !13369)
!13371 = !DILocation(line: 466, column: 29, scope: !13369)
!13372 = !DILocation(line: 466, column: 7, scope: !13369)
!13373 = !DILocation(line: 467, column: 18, scope: !13369)
!13374 = !DILocation(line: 467, column: 22, scope: !13369)
!13375 = !DILocation(line: 467, column: 29, scope: !13369)
!13376 = !DILocation(line: 467, column: 7, scope: !13369)
!13377 = !DILocation(line: 468, column: 18, scope: !13369)
!13378 = !DILocation(line: 468, column: 22, scope: !13369)
!13379 = !DILocation(line: 468, column: 29, scope: !13369)
!13380 = !DILocation(line: 468, column: 7, scope: !13369)
!13381 = !DILocation(line: 469, column: 18, scope: !13369)
!13382 = !DILocation(line: 469, column: 22, scope: !13369)
!13383 = !DILocation(line: 469, column: 29, scope: !13369)
!13384 = !DILocation(line: 469, column: 7, scope: !13369)
!13385 = !DILocation(line: 470, column: 9, scope: !13369)
!13386 = !DILocation(line: 471, column: 6, scope: !13369)
!13387 = !DILocation(line: 473, column: 10, scope: !13388)
!13388 = distinct !DILexicalBlock(scope: !13325, file: !3, line: 473, column: 10)
!13389 = !DILocation(line: 473, column: 10, scope: !13325)
!13390 = !DILocation(line: 474, column: 18, scope: !13391)
!13391 = distinct !DILexicalBlock(scope: !13388, file: !3, line: 473, column: 16)
!13392 = !DILocation(line: 474, column: 26, scope: !13391)
!13393 = !DILocation(line: 474, column: 30, scope: !13391)
!13394 = !DILocation(line: 474, column: 7, scope: !13391)
!13395 = !DILocation(line: 475, column: 18, scope: !13391)
!13396 = !DILocation(line: 475, column: 26, scope: !13391)
!13397 = !DILocation(line: 475, column: 30, scope: !13391)
!13398 = !DILocation(line: 475, column: 7, scope: !13391)
!13399 = !DILocation(line: 476, column: 18, scope: !13391)
!13400 = !DILocation(line: 476, column: 26, scope: !13391)
!13401 = !DILocation(line: 476, column: 30, scope: !13391)
!13402 = !DILocation(line: 476, column: 7, scope: !13391)
!13403 = !DILocation(line: 477, column: 18, scope: !13391)
!13404 = !DILocation(line: 477, column: 26, scope: !13391)
!13405 = !DILocation(line: 477, column: 30, scope: !13391)
!13406 = !DILocation(line: 477, column: 7, scope: !13391)
!13407 = !DILocation(line: 478, column: 12, scope: !13391)
!13408 = !DILocation(line: 479, column: 6, scope: !13391)
!13409 = !DILocation(line: 481, column: 5, scope: !13325)
!13410 = !DILocation(line: 459, column: 33, scope: !13320)
!13411 = !DILocation(line: 459, column: 5, scope: !13320)
!13412 = distinct !{!13412, !13323, !13413}
!13413 = !DILocation(line: 481, column: 5, scope: !13316)
!13414 = !DILocation(line: 482, column: 4, scope: !13317)
!13415 = !DILocation(line: 458, column: 32, scope: !13311)
!13416 = !DILocation(line: 458, column: 4, scope: !13311)
!13417 = distinct !{!13417, !13314, !13418}
!13418 = !DILocation(line: 482, column: 4, scope: !13308)
!13419 = !DILocation(line: 483, column: 3, scope: !13300)
!13420 = !DILocation(line: 455, column: 30, scope: !13295)
!13421 = !DILocation(line: 455, column: 3, scope: !13295)
!13422 = distinct !{!13422, !13298, !13423}
!13423 = !DILocation(line: 483, column: 3, scope: !13292)
!13424 = !DILocation(line: 484, column: 2, scope: !13283)
!13425 = !DILocation(line: 451, column: 40, scope: !13278)
!13426 = !DILocation(line: 451, column: 2, scope: !13278)
!13427 = distinct !{!13427, !13281, !13428}
!13428 = !DILocation(line: 484, column: 2, scope: !13275)
!13429 = !DILocation(line: 486, column: 18, scope: !13154)
!13430 = !DILocation(line: 486, column: 2, scope: !13154)
!13431 = !DILocation(line: 487, column: 2, scope: !13154)
!13432 = !DILocation(line: 487, column: 12, scope: !13154)
!13433 = !DILocation(line: 488, column: 1, scope: !13154)
!13434 = distinct !DISubprogram(name: "ccgDM_getVertMapIndex", scope: !3, file: !3, line: 673, type: !13435, scopeLine: 674, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!13435 = !DISubroutineType(types: !13436)
!13436 = !{!27, !6, !2613}
!13437 = !DILocalVariable(name: "ss", arg: 1, scope: !13434, file: !3, line: 673, type: !6)
!13438 = !DILocation(line: 673, column: 46, scope: !13434)
!13439 = !DILocalVariable(name: "v", arg: 2, scope: !13434, file: !3, line: 673, type: !2613)
!13440 = !DILocation(line: 673, column: 59, scope: !13434)
!13441 = !DILocation(line: 675, column: 45, scope: !13434)
!13442 = !DILocation(line: 675, column: 49, scope: !13434)
!13443 = !DILocation(line: 675, column: 18, scope: !13434)
!13444 = !DILocation(line: 675, column: 10, scope: !13434)
!13445 = !DILocation(line: 675, column: 9, scope: !13434)
!13446 = !DILocation(line: 675, column: 2, scope: !13434)
!13447 = distinct !DISubprogram(name: "free_ss_weights", scope: !3, file: !3, line: 557, type: !13448, scopeLine: 558, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!13448 = !DISubroutineType(types: !13449)
!13449 = !{null, !12650}
!13450 = !DILocalVariable(name: "wtable", arg: 1, scope: !13447, file: !3, line: 557, type: !12650)
!13451 = !DILocation(line: 557, column: 42, scope: !13447)
!13452 = !DILocalVariable(name: "i", scope: !13447, file: !3, line: 559, type: !27)
!13453 = !DILocation(line: 559, column: 6, scope: !13447)
!13454 = !DILocation(line: 561, column: 9, scope: !13455)
!13455 = distinct !DILexicalBlock(scope: !13447, file: !3, line: 561, column: 2)
!13456 = !DILocation(line: 561, column: 7, scope: !13455)
!13457 = !DILocation(line: 561, column: 14, scope: !13458)
!13458 = distinct !DILexicalBlock(scope: !13455, file: !3, line: 561, column: 2)
!13459 = !DILocation(line: 561, column: 18, scope: !13458)
!13460 = !DILocation(line: 561, column: 26, scope: !13458)
!13461 = !DILocation(line: 561, column: 16, scope: !13458)
!13462 = !DILocation(line: 561, column: 2, scope: !13455)
!13463 = !DILocation(line: 562, column: 7, scope: !13464)
!13464 = distinct !DILexicalBlock(scope: !13465, file: !3, line: 562, column: 7)
!13465 = distinct !DILexicalBlock(scope: !13458, file: !3, line: 561, column: 36)
!13466 = !DILocation(line: 562, column: 15, scope: !13464)
!13467 = !DILocation(line: 562, column: 28, scope: !13464)
!13468 = !DILocation(line: 562, column: 31, scope: !13464)
!13469 = !DILocation(line: 562, column: 7, scope: !13465)
!13470 = !DILocation(line: 563, column: 4, scope: !13464)
!13471 = !DILocation(line: 563, column: 14, scope: !13464)
!13472 = !DILocation(line: 563, column: 22, scope: !13464)
!13473 = !DILocation(line: 563, column: 35, scope: !13464)
!13474 = !DILocation(line: 563, column: 38, scope: !13464)
!13475 = !DILocation(line: 564, column: 2, scope: !13465)
!13476 = !DILocation(line: 561, column: 32, scope: !13458)
!13477 = !DILocation(line: 561, column: 2, scope: !13458)
!13478 = distinct !{!13478, !13462, !13479}
!13479 = !DILocation(line: 564, column: 2, scope: !13455)
!13480 = !DILocation(line: 566, column: 6, scope: !13481)
!13481 = distinct !DILexicalBlock(scope: !13447, file: !3, line: 566, column: 6)
!13482 = !DILocation(line: 566, column: 14, scope: !13481)
!13483 = !DILocation(line: 566, column: 6, scope: !13447)
!13484 = !DILocation(line: 567, column: 3, scope: !13481)
!13485 = !DILocation(line: 567, column: 13, scope: !13481)
!13486 = !DILocation(line: 567, column: 21, scope: !13481)
!13487 = !DILocation(line: 568, column: 1, scope: !13447)
!13488 = distinct !DISubprogram(name: "minmax_v3_v3v3", scope: !3, file: !3, line: 688, type: !13489, scopeLine: 689, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!13489 = !DISubroutineType(types: !13490)
!13490 = !{null, !2042, !1306, !1306}
!13491 = !DILocalVariable(name: "vec", arg: 1, scope: !13488, file: !3, line: 688, type: !2042)
!13492 = !DILocation(line: 688, column: 40, scope: !13488)
!13493 = !DILocalVariable(name: "min", arg: 2, scope: !13488, file: !3, line: 688, type: !1306)
!13494 = !DILocation(line: 688, column: 54, scope: !13488)
!13495 = !DILocalVariable(name: "max", arg: 3, scope: !13488, file: !3, line: 688, type: !1306)
!13496 = !DILocation(line: 688, column: 68, scope: !13488)
!13497 = !DILocation(line: 690, column: 6, scope: !13498)
!13498 = distinct !DILexicalBlock(scope: !13488, file: !3, line: 690, column: 6)
!13499 = !DILocation(line: 690, column: 15, scope: !13498)
!13500 = !DILocation(line: 690, column: 13, scope: !13498)
!13501 = !DILocation(line: 690, column: 6, scope: !13488)
!13502 = !DILocation(line: 690, column: 32, scope: !13498)
!13503 = !DILocation(line: 690, column: 23, scope: !13498)
!13504 = !DILocation(line: 690, column: 30, scope: !13498)
!13505 = !DILocation(line: 691, column: 6, scope: !13506)
!13506 = distinct !DILexicalBlock(scope: !13488, file: !3, line: 691, column: 6)
!13507 = !DILocation(line: 691, column: 15, scope: !13506)
!13508 = !DILocation(line: 691, column: 13, scope: !13506)
!13509 = !DILocation(line: 691, column: 6, scope: !13488)
!13510 = !DILocation(line: 691, column: 32, scope: !13506)
!13511 = !DILocation(line: 691, column: 23, scope: !13506)
!13512 = !DILocation(line: 691, column: 30, scope: !13506)
!13513 = !DILocation(line: 692, column: 6, scope: !13514)
!13514 = distinct !DILexicalBlock(scope: !13488, file: !3, line: 692, column: 6)
!13515 = !DILocation(line: 692, column: 15, scope: !13514)
!13516 = !DILocation(line: 692, column: 13, scope: !13514)
!13517 = !DILocation(line: 692, column: 6, scope: !13488)
!13518 = !DILocation(line: 692, column: 32, scope: !13514)
!13519 = !DILocation(line: 692, column: 23, scope: !13514)
!13520 = !DILocation(line: 692, column: 30, scope: !13514)
!13521 = !DILocation(line: 693, column: 6, scope: !13522)
!13522 = distinct !DILexicalBlock(scope: !13488, file: !3, line: 693, column: 6)
!13523 = !DILocation(line: 693, column: 15, scope: !13522)
!13524 = !DILocation(line: 693, column: 13, scope: !13522)
!13525 = !DILocation(line: 693, column: 6, scope: !13488)
!13526 = !DILocation(line: 693, column: 32, scope: !13522)
!13527 = !DILocation(line: 693, column: 23, scope: !13522)
!13528 = !DILocation(line: 693, column: 30, scope: !13522)
!13529 = !DILocation(line: 694, column: 6, scope: !13530)
!13530 = distinct !DILexicalBlock(scope: !13488, file: !3, line: 694, column: 6)
!13531 = !DILocation(line: 694, column: 15, scope: !13530)
!13532 = !DILocation(line: 694, column: 13, scope: !13530)
!13533 = !DILocation(line: 694, column: 6, scope: !13488)
!13534 = !DILocation(line: 694, column: 32, scope: !13530)
!13535 = !DILocation(line: 694, column: 23, scope: !13530)
!13536 = !DILocation(line: 694, column: 30, scope: !13530)
!13537 = !DILocation(line: 695, column: 6, scope: !13538)
!13538 = distinct !DILexicalBlock(scope: !13488, file: !3, line: 695, column: 6)
!13539 = !DILocation(line: 695, column: 15, scope: !13538)
!13540 = !DILocation(line: 695, column: 13, scope: !13538)
!13541 = !DILocation(line: 695, column: 6, scope: !13488)
!13542 = !DILocation(line: 695, column: 32, scope: !13538)
!13543 = !DILocation(line: 695, column: 23, scope: !13538)
!13544 = !DILocation(line: 695, column: 30, scope: !13538)
!13545 = !DILocation(line: 696, column: 1, scope: !13488)
!13546 = distinct !DISubprogram(name: "CCG_elem_offset_co", scope: !10, file: !10, line: 152, type: !13547, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!13547 = !DISubroutineType(types: !13548)
!13548 = !{!1306, !13549, !2371, !27}
!13549 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13550, size: 64)
!13550 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !5667)
!13551 = !DILocalVariable(name: "key", arg: 1, scope: !13546, file: !10, line: 152, type: !13549)
!13552 = !DILocation(line: 152, column: 52, scope: !13546)
!13553 = !DILocalVariable(name: "elem", arg: 2, scope: !13546, file: !10, line: 152, type: !2371)
!13554 = !DILocation(line: 152, column: 66, scope: !13546)
!13555 = !DILocalVariable(name: "offset", arg: 3, scope: !13546, file: !10, line: 152, type: !27)
!13556 = !DILocation(line: 152, column: 76, scope: !13546)
!13557 = !DILocation(line: 154, column: 21, scope: !13546)
!13558 = !DILocation(line: 154, column: 42, scope: !13546)
!13559 = !DILocation(line: 154, column: 47, scope: !13546)
!13560 = !DILocation(line: 154, column: 53, scope: !13546)
!13561 = !DILocation(line: 154, column: 26, scope: !13546)
!13562 = !DILocation(line: 154, column: 9, scope: !13546)
!13563 = !DILocation(line: 154, column: 2, scope: !13546)
!13564 = distinct !DISubprogram(name: "CCG_grid_elem_co", scope: !10, file: !10, line: 137, type: !13565, scopeLine: 138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!13565 = !DISubroutineType(types: !13566)
!13566 = !{!1306, !13549, !2371, !27, !27}
!13567 = !DILocalVariable(name: "key", arg: 1, scope: !13564, file: !10, line: 137, type: !13549)
!13568 = !DILocation(line: 137, column: 50, scope: !13564)
!13569 = !DILocalVariable(name: "elem", arg: 2, scope: !13564, file: !10, line: 137, type: !2371)
!13570 = !DILocation(line: 137, column: 64, scope: !13564)
!13571 = !DILocalVariable(name: "x", arg: 3, scope: !13564, file: !10, line: 137, type: !27)
!13572 = !DILocation(line: 137, column: 74, scope: !13564)
!13573 = !DILocalVariable(name: "y", arg: 4, scope: !13564, file: !10, line: 137, type: !27)
!13574 = !DILocation(line: 137, column: 81, scope: !13564)
!13575 = !DILocation(line: 139, column: 21, scope: !13564)
!13576 = !DILocation(line: 139, column: 40, scope: !13564)
!13577 = !DILocation(line: 139, column: 45, scope: !13564)
!13578 = !DILocation(line: 139, column: 51, scope: !13564)
!13579 = !DILocation(line: 139, column: 54, scope: !13564)
!13580 = !DILocation(line: 139, column: 26, scope: !13564)
!13581 = !DILocation(line: 139, column: 9, scope: !13564)
!13582 = !DILocation(line: 139, column: 2, scope: !13564)
!13583 = distinct !DISubprogram(name: "CCG_elem_co", scope: !10, file: !10, line: 109, type: !13584, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!13584 = !DISubroutineType(types: !13585)
!13585 = !{!1306, !13549, !2371}
!13586 = !DILocalVariable(name: "UNUSED_key", arg: 1, scope: !13583, file: !10, line: 109, type: !13549)
!13587 = !DILocation(line: 109, column: 45, scope: !13583)
!13588 = !DILocalVariable(name: "elem", arg: 2, scope: !13583, file: !10, line: 109, type: !2371)
!13589 = !DILocation(line: 109, column: 67, scope: !13583)
!13590 = !DILocation(line: 111, column: 18, scope: !13583)
!13591 = !DILocation(line: 111, column: 9, scope: !13583)
!13592 = !DILocation(line: 111, column: 2, scope: !13583)
!13593 = distinct !DISubprogram(name: "CCG_elem_offset", scope: !10, file: !10, line: 126, type: !13594, scopeLine: 127, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!13594 = !DISubroutineType(types: !13595)
!13595 = !{!2371, !13549, !2371, !27}
!13596 = !DILocalVariable(name: "key", arg: 1, scope: !13593, file: !10, line: 126, type: !13549)
!13597 = !DILocation(line: 126, column: 51, scope: !13593)
!13598 = !DILocalVariable(name: "elem", arg: 2, scope: !13593, file: !10, line: 126, type: !2371)
!13599 = !DILocation(line: 126, column: 65, scope: !13593)
!13600 = !DILocalVariable(name: "offset", arg: 3, scope: !13593, file: !10, line: 126, type: !27)
!13601 = !DILocation(line: 126, column: 75, scope: !13593)
!13602 = !DILocation(line: 128, column: 30, scope: !13593)
!13603 = !DILocation(line: 128, column: 22, scope: !13593)
!13604 = !DILocation(line: 128, column: 38, scope: !13593)
!13605 = !DILocation(line: 128, column: 43, scope: !13593)
!13606 = !DILocation(line: 128, column: 55, scope: !13593)
!13607 = !DILocation(line: 128, column: 53, scope: !13593)
!13608 = !DILocation(line: 128, column: 36, scope: !13593)
!13609 = !DILocation(line: 128, column: 9, scope: !13593)
!13610 = !DILocation(line: 128, column: 2, scope: !13593)
!13611 = distinct !DISubprogram(name: "CCG_grid_elem", scope: !10, file: !10, line: 131, type: !13612, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!13612 = !DISubroutineType(types: !13613)
!13613 = !{!2371, !13549, !2371, !27, !27}
!13614 = !DILocalVariable(name: "key", arg: 1, scope: !13611, file: !10, line: 131, type: !13549)
!13615 = !DILocation(line: 131, column: 49, scope: !13611)
!13616 = !DILocalVariable(name: "elem", arg: 2, scope: !13611, file: !10, line: 131, type: !2371)
!13617 = !DILocation(line: 131, column: 63, scope: !13611)
!13618 = !DILocalVariable(name: "x", arg: 3, scope: !13611, file: !10, line: 131, type: !27)
!13619 = !DILocation(line: 131, column: 73, scope: !13611)
!13620 = !DILocalVariable(name: "y", arg: 4, scope: !13611, file: !10, line: 131, type: !27)
!13621 = !DILocation(line: 131, column: 80, scope: !13611)
!13622 = !DILocation(line: 134, column: 25, scope: !13611)
!13623 = !DILocation(line: 134, column: 30, scope: !13611)
!13624 = !DILocation(line: 134, column: 37, scope: !13611)
!13625 = !DILocation(line: 134, column: 41, scope: !13611)
!13626 = !DILocation(line: 134, column: 46, scope: !13611)
!13627 = !DILocation(line: 134, column: 39, scope: !13611)
!13628 = !DILocation(line: 134, column: 58, scope: !13611)
!13629 = !DILocation(line: 134, column: 56, scope: !13611)
!13630 = !DILocation(line: 134, column: 9, scope: !13611)
!13631 = !DILocation(line: 134, column: 2, scope: !13611)
!13632 = distinct !DISubprogram(name: "copy_v3_v3", scope: !5528, file: !5528, line: 64, type: !5566, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!13633 = !DILocalVariable(name: "r", arg: 1, scope: !13632, file: !5528, line: 64, type: !1306)
!13634 = !DILocation(line: 64, column: 31, scope: !13632)
!13635 = !DILocalVariable(name: "a", arg: 2, scope: !13632, file: !5528, line: 64, type: !2042)
!13636 = !DILocation(line: 64, column: 49, scope: !13632)
!13637 = !DILocation(line: 66, column: 9, scope: !13632)
!13638 = !DILocation(line: 66, column: 2, scope: !13632)
!13639 = !DILocation(line: 66, column: 7, scope: !13632)
!13640 = !DILocation(line: 67, column: 9, scope: !13632)
!13641 = !DILocation(line: 67, column: 2, scope: !13632)
!13642 = !DILocation(line: 67, column: 7, scope: !13632)
!13643 = !DILocation(line: 68, column: 9, scope: !13632)
!13644 = !DILocation(line: 68, column: 2, scope: !13632)
!13645 = !DILocation(line: 68, column: 7, scope: !13632)
!13646 = !DILocation(line: 69, column: 1, scope: !13632)
!13647 = distinct !DISubprogram(name: "normal_float_to_short_v3", scope: !5528, file: !5528, line: 842, type: !13648, scopeLine: 843, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!13648 = !DISubroutineType(types: !13649)
!13649 = !{null, !2333, !2042}
!13650 = !DILocalVariable(name: "out", arg: 1, scope: !13647, file: !5528, line: 842, type: !2333)
!13651 = !DILocation(line: 842, column: 45, scope: !13647)
!13652 = !DILocalVariable(name: "in", arg: 2, scope: !13647, file: !5528, line: 842, type: !2042)
!13653 = !DILocation(line: 842, column: 65, scope: !13647)
!13654 = !DILocation(line: 844, column: 20, scope: !13647)
!13655 = !DILocation(line: 844, column: 26, scope: !13647)
!13656 = !DILocation(line: 844, column: 11, scope: !13647)
!13657 = !DILocation(line: 844, column: 2, scope: !13647)
!13658 = !DILocation(line: 844, column: 9, scope: !13647)
!13659 = !DILocation(line: 845, column: 20, scope: !13647)
!13660 = !DILocation(line: 845, column: 26, scope: !13647)
!13661 = !DILocation(line: 845, column: 11, scope: !13647)
!13662 = !DILocation(line: 845, column: 2, scope: !13647)
!13663 = !DILocation(line: 845, column: 9, scope: !13647)
!13664 = !DILocation(line: 846, column: 20, scope: !13647)
!13665 = !DILocation(line: 846, column: 26, scope: !13647)
!13666 = !DILocation(line: 846, column: 11, scope: !13647)
!13667 = !DILocation(line: 846, column: 2, scope: !13647)
!13668 = !DILocation(line: 846, column: 9, scope: !13647)
!13669 = !DILocation(line: 847, column: 1, scope: !13647)
!13670 = distinct !DISubprogram(name: "CCG_elem_no", scope: !10, file: !10, line: 114, type: !13584, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!13671 = !DILocalVariable(name: "key", arg: 1, scope: !13670, file: !10, line: 114, type: !13549)
!13672 = !DILocation(line: 114, column: 45, scope: !13670)
!13673 = !DILocalVariable(name: "elem", arg: 2, scope: !13670, file: !10, line: 114, type: !2371)
!13674 = !DILocation(line: 114, column: 59, scope: !13670)
!13675 = !DILocation(line: 117, column: 27, scope: !13670)
!13676 = !DILocation(line: 117, column: 19, scope: !13670)
!13677 = !DILocation(line: 117, column: 34, scope: !13670)
!13678 = !DILocation(line: 117, column: 39, scope: !13670)
!13679 = !DILocation(line: 117, column: 32, scope: !13670)
!13680 = !DILocation(line: 117, column: 9, scope: !13670)
!13681 = !DILocation(line: 117, column: 2, scope: !13670)
!13682 = distinct !DISubprogram(name: "getEdgeIndex", scope: !3, file: !3, line: 205, type: !13683, scopeLine: 206, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!13683 = !DISubroutineType(types: !13684)
!13684 = !{!27, !6, !2638, !27, !27}
!13685 = !DILocalVariable(name: "ss", arg: 1, scope: !13682, file: !3, line: 205, type: !6)
!13686 = !DILocation(line: 205, column: 37, scope: !13682)
!13687 = !DILocalVariable(name: "e", arg: 2, scope: !13682, file: !3, line: 205, type: !2638)
!13688 = !DILocation(line: 205, column: 50, scope: !13682)
!13689 = !DILocalVariable(name: "x", arg: 3, scope: !13682, file: !3, line: 205, type: !27)
!13690 = !DILocation(line: 205, column: 57, scope: !13682)
!13691 = !DILocalVariable(name: "edgeSize", arg: 4, scope: !13682, file: !3, line: 205, type: !27)
!13692 = !DILocation(line: 205, column: 64, scope: !13682)
!13693 = !DILocalVariable(name: "v0", scope: !13682, file: !3, line: 207, type: !2613)
!13694 = !DILocation(line: 207, column: 11, scope: !13682)
!13695 = !DILocation(line: 207, column: 40, scope: !13682)
!13696 = !DILocation(line: 207, column: 16, scope: !13682)
!13697 = !DILocalVariable(name: "v1", scope: !13682, file: !3, line: 208, type: !2613)
!13698 = !DILocation(line: 208, column: 11, scope: !13682)
!13699 = !DILocation(line: 208, column: 40, scope: !13682)
!13700 = !DILocation(line: 208, column: 16, scope: !13682)
!13701 = !DILocalVariable(name: "v0idx", scope: !13682, file: !3, line: 209, type: !27)
!13702 = !DILocation(line: 209, column: 6, scope: !13682)
!13703 = !DILocation(line: 209, column: 51, scope: !13682)
!13704 = !DILocation(line: 209, column: 55, scope: !13682)
!13705 = !DILocation(line: 209, column: 24, scope: !13682)
!13706 = !DILocation(line: 209, column: 16, scope: !13682)
!13707 = !DILocation(line: 209, column: 14, scope: !13682)
!13708 = !DILocalVariable(name: "v1idx", scope: !13682, file: !3, line: 210, type: !27)
!13709 = !DILocation(line: 210, column: 6, scope: !13682)
!13710 = !DILocation(line: 210, column: 51, scope: !13682)
!13711 = !DILocation(line: 210, column: 55, scope: !13682)
!13712 = !DILocation(line: 210, column: 24, scope: !13682)
!13713 = !DILocation(line: 210, column: 16, scope: !13682)
!13714 = !DILocation(line: 210, column: 14, scope: !13682)
!13715 = !DILocalVariable(name: "edgeBase", scope: !13682, file: !3, line: 211, type: !27)
!13716 = !DILocation(line: 211, column: 6, scope: !13682)
!13717 = !DILocation(line: 211, column: 54, scope: !13682)
!13718 = !DILocation(line: 211, column: 58, scope: !13682)
!13719 = !DILocation(line: 211, column: 27, scope: !13682)
!13720 = !DILocation(line: 211, column: 19, scope: !13682)
!13721 = !DILocation(line: 211, column: 17, scope: !13682)
!13722 = !DILocation(line: 213, column: 6, scope: !13723)
!13723 = distinct !DILexicalBlock(scope: !13682, file: !3, line: 213, column: 6)
!13724 = !DILocation(line: 213, column: 8, scope: !13723)
!13725 = !DILocation(line: 213, column: 6, scope: !13682)
!13726 = !DILocation(line: 214, column: 10, scope: !13727)
!13727 = distinct !DILexicalBlock(scope: !13723, file: !3, line: 213, column: 14)
!13728 = !DILocation(line: 214, column: 3, scope: !13727)
!13729 = !DILocation(line: 216, column: 11, scope: !13730)
!13730 = distinct !DILexicalBlock(scope: !13723, file: !3, line: 216, column: 11)
!13731 = !DILocation(line: 216, column: 16, scope: !13730)
!13732 = !DILocation(line: 216, column: 25, scope: !13730)
!13733 = !DILocation(line: 216, column: 13, scope: !13730)
!13734 = !DILocation(line: 216, column: 11, scope: !13723)
!13735 = !DILocation(line: 217, column: 10, scope: !13736)
!13736 = distinct !DILexicalBlock(scope: !13730, file: !3, line: 216, column: 30)
!13737 = !DILocation(line: 217, column: 3, scope: !13736)
!13738 = !DILocation(line: 220, column: 10, scope: !13739)
!13739 = distinct !DILexicalBlock(scope: !13730, file: !3, line: 219, column: 7)
!13740 = !DILocation(line: 220, column: 21, scope: !13739)
!13741 = !DILocation(line: 220, column: 19, scope: !13739)
!13742 = !DILocation(line: 220, column: 23, scope: !13739)
!13743 = !DILocation(line: 220, column: 3, scope: !13739)
!13744 = !DILocation(line: 222, column: 1, scope: !13682)
!13745 = distinct !DISubprogram(name: "normal_short_to_float_v3", scope: !5528, file: !5528, line: 835, type: !13746, scopeLine: 836, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!13746 = !DISubroutineType(types: !13747)
!13747 = !{null, !1306, !2043}
!13748 = !DILocalVariable(name: "out", arg: 1, scope: !13745, file: !5528, line: 835, type: !1306)
!13749 = !DILocation(line: 835, column: 45, scope: !13745)
!13750 = !DILocalVariable(name: "in", arg: 2, scope: !13745, file: !5528, line: 835, type: !2043)
!13751 = !DILocation(line: 835, column: 65, scope: !13745)
!13752 = !DILocation(line: 837, column: 11, scope: !13745)
!13753 = !DILocation(line: 837, column: 17, scope: !13745)
!13754 = !DILocation(line: 837, column: 2, scope: !13745)
!13755 = !DILocation(line: 837, column: 9, scope: !13745)
!13756 = !DILocation(line: 838, column: 11, scope: !13745)
!13757 = !DILocation(line: 838, column: 17, scope: !13745)
!13758 = !DILocation(line: 838, column: 2, scope: !13745)
!13759 = !DILocation(line: 838, column: 9, scope: !13745)
!13760 = !DILocation(line: 839, column: 11, scope: !13745)
!13761 = !DILocation(line: 839, column: 17, scope: !13745)
!13762 = !DILocation(line: 839, column: 2, scope: !13745)
!13763 = !DILocation(line: 839, column: 9, scope: !13745)
!13764 = !DILocation(line: 840, column: 1, scope: !13745)
!13765 = distinct !DISubprogram(name: "ccgDM_to_MVert", scope: !3, file: !3, line: 1128, type: !13766, scopeLine: 1129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!13766 = !DISubroutineType(types: !13767)
!13767 = !{null, !2400, !13549, !2371}
!13768 = !DILocalVariable(name: "mv", arg: 1, scope: !13765, file: !3, line: 1128, type: !2400)
!13769 = !DILocation(line: 1128, column: 39, scope: !13765)
!13770 = !DILocalVariable(name: "key", arg: 2, scope: !13765, file: !3, line: 1128, type: !13549)
!13771 = !DILocation(line: 1128, column: 57, scope: !13765)
!13772 = !DILocalVariable(name: "elem", arg: 3, scope: !13765, file: !3, line: 1128, type: !2371)
!13773 = !DILocation(line: 1128, column: 71, scope: !13765)
!13774 = !DILocation(line: 1130, column: 13, scope: !13765)
!13775 = !DILocation(line: 1130, column: 17, scope: !13765)
!13776 = !DILocation(line: 1130, column: 33, scope: !13765)
!13777 = !DILocation(line: 1130, column: 38, scope: !13765)
!13778 = !DILocation(line: 1130, column: 21, scope: !13765)
!13779 = !DILocation(line: 1130, column: 2, scope: !13765)
!13780 = !DILocation(line: 1131, column: 27, scope: !13765)
!13781 = !DILocation(line: 1131, column: 31, scope: !13765)
!13782 = !DILocation(line: 1131, column: 47, scope: !13765)
!13783 = !DILocation(line: 1131, column: 52, scope: !13765)
!13784 = !DILocation(line: 1131, column: 35, scope: !13765)
!13785 = !DILocation(line: 1131, column: 2, scope: !13765)
!13786 = !DILocation(line: 1132, column: 13, scope: !13765)
!13787 = !DILocation(line: 1132, column: 17, scope: !13765)
!13788 = !DILocation(line: 1132, column: 25, scope: !13765)
!13789 = !DILocation(line: 1132, column: 2, scope: !13765)
!13790 = !DILocation(line: 1132, column: 6, scope: !13765)
!13791 = !DILocation(line: 1132, column: 11, scope: !13765)
!13792 = !DILocation(line: 1133, column: 1, scope: !13765)
!13793 = distinct !DISubprogram(name: "ccgDM_to_MEdge", scope: !3, file: !3, line: 1201, type: !13794, scopeLine: 1202, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!13794 = !DISubroutineType(types: !13795)
!13795 = !{null, !3475, !8200, !8200, !2044}
!13796 = !DILocalVariable(name: "med", arg: 1, scope: !13793, file: !3, line: 1201, type: !3475)
!13797 = !DILocation(line: 1201, column: 39, scope: !13793)
!13798 = !DILocalVariable(name: "v1", arg: 2, scope: !13793, file: !3, line: 1201, type: !8200)
!13799 = !DILocation(line: 1201, column: 54, scope: !13793)
!13800 = !DILocalVariable(name: "v2", arg: 3, scope: !13793, file: !3, line: 1201, type: !8200)
!13801 = !DILocation(line: 1201, column: 68, scope: !13793)
!13802 = !DILocalVariable(name: "flag", arg: 4, scope: !13793, file: !3, line: 1201, type: !2044)
!13803 = !DILocation(line: 1201, column: 84, scope: !13793)
!13804 = !DILocation(line: 1203, column: 12, scope: !13793)
!13805 = !DILocation(line: 1203, column: 2, scope: !13793)
!13806 = !DILocation(line: 1203, column: 7, scope: !13793)
!13807 = !DILocation(line: 1203, column: 10, scope: !13793)
!13808 = !DILocation(line: 1204, column: 12, scope: !13793)
!13809 = !DILocation(line: 1204, column: 2, scope: !13793)
!13810 = !DILocation(line: 1204, column: 7, scope: !13793)
!13811 = !DILocation(line: 1204, column: 10, scope: !13793)
!13812 = !DILocation(line: 1205, column: 16, scope: !13793)
!13813 = !DILocation(line: 1205, column: 21, scope: !13793)
!13814 = !DILocation(line: 1205, column: 29, scope: !13793)
!13815 = !DILocation(line: 1205, column: 2, scope: !13793)
!13816 = !DILocation(line: 1205, column: 7, scope: !13793)
!13817 = !DILocation(line: 1205, column: 14, scope: !13793)
!13818 = !DILocation(line: 1206, column: 14, scope: !13793)
!13819 = !DILocation(line: 1206, column: 2, scope: !13793)
!13820 = !DILocation(line: 1206, column: 7, scope: !13793)
!13821 = !DILocation(line: 1206, column: 12, scope: !13793)
!13822 = !DILocation(line: 1207, column: 1, scope: !13793)
!13823 = distinct !DISubprogram(name: "ccgDM_getFaceMapIndex", scope: !3, file: !3, line: 683, type: !13824, scopeLine: 684, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!13824 = !DISubroutineType(types: !13825)
!13825 = !{!27, !6, !2461}
!13826 = !DILocalVariable(name: "ss", arg: 1, scope: !13823, file: !3, line: 683, type: !6)
!13827 = !DILocation(line: 683, column: 46, scope: !13823)
!13828 = !DILocalVariable(name: "f", arg: 2, scope: !13823, file: !3, line: 683, type: !2461)
!13829 = !DILocation(line: 683, column: 59, scope: !13823)
!13830 = !DILocation(line: 685, column: 45, scope: !13823)
!13831 = !DILocation(line: 685, column: 49, scope: !13823)
!13832 = !DILocation(line: 685, column: 18, scope: !13823)
!13833 = !DILocation(line: 685, column: 10, scope: !13823)
!13834 = !DILocation(line: 685, column: 9, scope: !13823)
!13835 = !DILocation(line: 685, column: 2, scope: !13823)
!13836 = distinct !DISubprogram(name: "ccgdm_create_grids", scope: !3, file: !3, line: 3217, type: !1858, scopeLine: 3218, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!13837 = !DILocalVariable(name: "dm", arg: 1, scope: !13836, file: !3, line: 3217, type: !11)
!13838 = !DILocation(line: 3217, column: 45, scope: !13836)
!13839 = !DILocalVariable(name: "ccgdm", scope: !13836, file: !3, line: 3219, type: !2295)
!13840 = !DILocation(line: 3219, column: 18, scope: !13836)
!13841 = !DILocation(line: 3219, column: 44, scope: !13836)
!13842 = !DILocation(line: 3219, column: 26, scope: !13836)
!13843 = !DILocalVariable(name: "ss", scope: !13836, file: !3, line: 3220, type: !6)
!13844 = !DILocation(line: 3220, column: 14, scope: !13836)
!13845 = !DILocation(line: 3220, column: 19, scope: !13836)
!13846 = !DILocation(line: 3220, column: 26, scope: !13836)
!13847 = !DILocalVariable(name: "gridData", scope: !13836, file: !3, line: 3221, type: !8416)
!13848 = !DILocation(line: 3221, column: 12, scope: !13836)
!13849 = !DILocalVariable(name: "gridAdjacency", scope: !13836, file: !3, line: 3222, type: !1992)
!13850 = !DILocation(line: 3222, column: 19, scope: !13836)
!13851 = !DILocalVariable(name: "adj", scope: !13836, file: !3, line: 3222, type: !1992)
!13852 = !DILocation(line: 3222, column: 35, scope: !13836)
!13853 = !DILocalVariable(name: "gridFlagMats", scope: !13836, file: !3, line: 3223, type: !2024)
!13854 = !DILocation(line: 3223, column: 13, scope: !13836)
!13855 = !DILocalVariable(name: "gridFaces", scope: !13836, file: !3, line: 3224, type: !8746)
!13856 = !DILocation(line: 3224, column: 12, scope: !13836)
!13857 = !DILocalVariable(name: "gridOffset", scope: !13836, file: !3, line: 3225, type: !1314)
!13858 = !DILocation(line: 3225, column: 7, scope: !13836)
!13859 = !DILocalVariable(name: "index", scope: !13836, file: !3, line: 3226, type: !27)
!13860 = !DILocation(line: 3226, column: 6, scope: !13836)
!13861 = !DILocalVariable(name: "numFaces", scope: !13836, file: !3, line: 3226, type: !27)
!13862 = !DILocation(line: 3226, column: 13, scope: !13836)
!13863 = !DILocalVariable(name: "numGrids", scope: !13836, file: !3, line: 3226, type: !27)
!13864 = !DILocation(line: 3226, column: 23, scope: !13836)
!13865 = !DILocalVariable(name: "S", scope: !13836, file: !3, line: 3226, type: !27)
!13866 = !DILocation(line: 3226, column: 33, scope: !13836)
!13867 = !DILocalVariable(name: "gIndex", scope: !13836, file: !3, line: 3226, type: !27)
!13868 = !DILocation(line: 3226, column: 36, scope: !13836)
!13869 = !DILocation(line: 3228, column: 6, scope: !13870)
!13870 = distinct !DILexicalBlock(scope: !13836, file: !3, line: 3228, column: 6)
!13871 = !DILocation(line: 3228, column: 13, scope: !13870)
!13872 = !DILocation(line: 3228, column: 6, scope: !13836)
!13873 = !DILocation(line: 3229, column: 3, scope: !13870)
!13874 = !DILocation(line: 3231, column: 31, scope: !13836)
!13875 = !DILocation(line: 3231, column: 13, scope: !13836)
!13876 = !DILocation(line: 3231, column: 11, scope: !13836)
!13877 = !DILocation(line: 3232, column: 36, scope: !13836)
!13878 = !DILocation(line: 3232, column: 13, scope: !13836)
!13879 = !DILocation(line: 3232, column: 11, scope: !13836)
!13880 = !DILocation(line: 3236, column: 15, scope: !13836)
!13881 = !DILocation(line: 3236, column: 41, scope: !13836)
!13882 = !DILocation(line: 3236, column: 39, scope: !13836)
!13883 = !DILocation(line: 3236, column: 13, scope: !13836)
!13884 = !DILocation(line: 3238, column: 14, scope: !13885)
!13885 = distinct !DILexicalBlock(scope: !13836, file: !3, line: 3238, column: 2)
!13886 = !DILocation(line: 3238, column: 25, scope: !13885)
!13887 = !DILocation(line: 3238, column: 7, scope: !13885)
!13888 = !DILocation(line: 3238, column: 30, scope: !13889)
!13889 = distinct !DILexicalBlock(scope: !13885, file: !3, line: 3238, column: 2)
!13890 = !DILocation(line: 3238, column: 38, scope: !13889)
!13891 = !DILocation(line: 3238, column: 36, scope: !13889)
!13892 = !DILocation(line: 3238, column: 2, scope: !13885)
!13893 = !DILocalVariable(name: "f", scope: !13894, file: !3, line: 3239, type: !2461)
!13894 = distinct !DILexicalBlock(scope: !13889, file: !3, line: 3238, column: 57)
!13895 = !DILocation(line: 3239, column: 12, scope: !13894)
!13896 = !DILocation(line: 3239, column: 16, scope: !13894)
!13897 = !DILocation(line: 3239, column: 23, scope: !13894)
!13898 = !DILocation(line: 3239, column: 31, scope: !13894)
!13899 = !DILocation(line: 3239, column: 38, scope: !13894)
!13900 = !DILocalVariable(name: "numVerts", scope: !13894, file: !3, line: 3240, type: !27)
!13901 = !DILocation(line: 3240, column: 7, scope: !13894)
!13902 = !DILocation(line: 3240, column: 45, scope: !13894)
!13903 = !DILocation(line: 3240, column: 18, scope: !13894)
!13904 = !DILocation(line: 3242, column: 23, scope: !13894)
!13905 = !DILocation(line: 3242, column: 3, scope: !13894)
!13906 = !DILocation(line: 3242, column: 14, scope: !13894)
!13907 = !DILocation(line: 3242, column: 21, scope: !13894)
!13908 = !DILocation(line: 3243, column: 13, scope: !13894)
!13909 = !DILocation(line: 3243, column: 10, scope: !13894)
!13910 = !DILocation(line: 3244, column: 2, scope: !13894)
!13911 = !DILocation(line: 3238, column: 53, scope: !13889)
!13912 = !DILocation(line: 3238, column: 2, scope: !13889)
!13913 = distinct !{!13913, !13892, !13914}
!13914 = !DILocation(line: 3244, column: 2, scope: !13885)
!13915 = !DILocation(line: 3247, column: 13, scope: !13836)
!13916 = !DILocation(line: 3247, column: 45, scope: !13836)
!13917 = !DILocation(line: 3247, column: 43, scope: !13836)
!13918 = !DILocation(line: 3247, column: 11, scope: !13836)
!13919 = !DILocation(line: 3248, column: 18, scope: !13836)
!13920 = !DILocation(line: 3248, column: 56, scope: !13836)
!13921 = !DILocation(line: 3248, column: 54, scope: !13836)
!13922 = !DILocation(line: 3248, column: 16, scope: !13836)
!13923 = !DILocation(line: 3249, column: 14, scope: !13836)
!13924 = !DILocation(line: 3249, column: 46, scope: !13836)
!13925 = !DILocation(line: 3249, column: 44, scope: !13836)
!13926 = !DILocation(line: 3249, column: 12, scope: !13836)
!13927 = !DILocation(line: 3250, column: 17, scope: !13836)
!13928 = !DILocation(line: 3250, column: 49, scope: !13836)
!13929 = !DILocation(line: 3250, column: 47, scope: !13836)
!13930 = !DILocation(line: 3250, column: 15, scope: !13836)
!13931 = !DILocation(line: 3252, column: 22, scope: !13836)
!13932 = !DILocation(line: 3252, column: 63, scope: !13836)
!13933 = !DILocation(line: 3252, column: 61, scope: !13836)
!13934 = !DILocation(line: 3252, column: 2, scope: !13836)
!13935 = !DILocation(line: 3252, column: 9, scope: !13836)
!13936 = !DILocation(line: 3252, column: 20, scope: !13836)
!13937 = !DILocation(line: 3254, column: 14, scope: !13938)
!13938 = distinct !DILexicalBlock(scope: !13836, file: !3, line: 3254, column: 2)
!13939 = !DILocation(line: 3254, column: 25, scope: !13938)
!13940 = !DILocation(line: 3254, column: 7, scope: !13938)
!13941 = !DILocation(line: 3254, column: 30, scope: !13942)
!13942 = distinct !DILexicalBlock(scope: !13938, file: !3, line: 3254, column: 2)
!13943 = !DILocation(line: 3254, column: 38, scope: !13942)
!13944 = !DILocation(line: 3254, column: 36, scope: !13942)
!13945 = !DILocation(line: 3254, column: 2, scope: !13938)
!13946 = !DILocalVariable(name: "f", scope: !13947, file: !3, line: 3255, type: !2461)
!13947 = distinct !DILexicalBlock(scope: !13942, file: !3, line: 3254, column: 57)
!13948 = !DILocation(line: 3255, column: 12, scope: !13947)
!13949 = !DILocation(line: 3255, column: 16, scope: !13947)
!13950 = !DILocation(line: 3255, column: 23, scope: !13947)
!13951 = !DILocation(line: 3255, column: 31, scope: !13947)
!13952 = !DILocation(line: 3255, column: 38, scope: !13947)
!13953 = !DILocalVariable(name: "numVerts", scope: !13947, file: !3, line: 3256, type: !27)
!13954 = !DILocation(line: 3256, column: 7, scope: !13947)
!13955 = !DILocation(line: 3256, column: 45, scope: !13947)
!13956 = !DILocation(line: 3256, column: 18, scope: !13947)
!13957 = !DILocation(line: 3258, column: 10, scope: !13958)
!13958 = distinct !DILexicalBlock(scope: !13947, file: !3, line: 3258, column: 3)
!13959 = !DILocation(line: 3258, column: 8, scope: !13958)
!13960 = !DILocation(line: 3258, column: 15, scope: !13961)
!13961 = distinct !DILexicalBlock(scope: !13958, file: !3, line: 3258, column: 3)
!13962 = !DILocation(line: 3258, column: 19, scope: !13961)
!13963 = !DILocation(line: 3258, column: 17, scope: !13961)
!13964 = !DILocation(line: 3258, column: 3, scope: !13958)
!13965 = !DILocalVariable(name: "prevS", scope: !13966, file: !3, line: 3259, type: !27)
!13966 = distinct !DILexicalBlock(scope: !13961, file: !3, line: 3258, column: 44)
!13967 = !DILocation(line: 3259, column: 8, scope: !13966)
!13968 = !DILocation(line: 3259, column: 17, scope: !13966)
!13969 = !DILocation(line: 3259, column: 19, scope: !13966)
!13970 = !DILocation(line: 3259, column: 25, scope: !13966)
!13971 = !DILocation(line: 3259, column: 23, scope: !13966)
!13972 = !DILocation(line: 3259, column: 37, scope: !13966)
!13973 = !DILocation(line: 3259, column: 35, scope: !13966)
!13974 = !DILocalVariable(name: "nextS", scope: !13966, file: !3, line: 3260, type: !27)
!13975 = !DILocation(line: 3260, column: 8, scope: !13966)
!13976 = !DILocation(line: 3260, column: 17, scope: !13966)
!13977 = !DILocation(line: 3260, column: 19, scope: !13966)
!13978 = !DILocation(line: 3260, column: 25, scope: !13966)
!13979 = !DILocation(line: 3260, column: 23, scope: !13966)
!13980 = !DILocation(line: 3260, column: 37, scope: !13966)
!13981 = !DILocation(line: 3260, column: 35, scope: !13966)
!13982 = !DILocation(line: 3262, column: 55, scope: !13966)
!13983 = !DILocation(line: 3262, column: 59, scope: !13966)
!13984 = !DILocation(line: 3262, column: 62, scope: !13966)
!13985 = !DILocation(line: 3262, column: 23, scope: !13966)
!13986 = !DILocation(line: 3262, column: 4, scope: !13966)
!13987 = !DILocation(line: 3262, column: 13, scope: !13966)
!13988 = !DILocation(line: 3262, column: 21, scope: !13966)
!13989 = !DILocation(line: 3263, column: 24, scope: !13966)
!13990 = !DILocation(line: 3263, column: 4, scope: !13966)
!13991 = !DILocation(line: 3263, column: 14, scope: !13966)
!13992 = !DILocation(line: 3263, column: 22, scope: !13966)
!13993 = !DILocation(line: 3264, column: 4, scope: !13966)
!13994 = !DILocation(line: 3264, column: 17, scope: !13966)
!13995 = !DILocation(line: 3264, column: 27, scope: !13966)
!13996 = !DILocation(line: 3264, column: 34, scope: !13966)
!13997 = !DILocation(line: 3264, column: 44, scope: !13966)
!13998 = !DILocation(line: 3266, column: 11, scope: !13966)
!13999 = !DILocation(line: 3266, column: 25, scope: !13966)
!14000 = !DILocation(line: 3266, column: 8, scope: !13966)
!14001 = !DILocation(line: 3268, column: 20, scope: !13966)
!14002 = !DILocation(line: 3268, column: 29, scope: !13966)
!14003 = !DILocation(line: 3268, column: 27, scope: !13966)
!14004 = !DILocation(line: 3268, column: 33, scope: !13966)
!14005 = !DILocation(line: 3268, column: 31, scope: !13966)
!14006 = !DILocation(line: 3268, column: 4, scope: !13966)
!14007 = !DILocation(line: 3268, column: 9, scope: !13966)
!14008 = !DILocation(line: 3268, column: 18, scope: !13966)
!14009 = !DILocation(line: 3269, column: 4, scope: !13966)
!14010 = !DILocation(line: 3269, column: 9, scope: !13966)
!14011 = !DILocation(line: 3269, column: 21, scope: !13966)
!14012 = !DILocation(line: 3270, column: 40, scope: !13966)
!14013 = !DILocation(line: 3270, column: 52, scope: !13966)
!14014 = !DILocation(line: 3270, column: 55, scope: !13966)
!14015 = !DILocation(line: 3270, column: 20, scope: !13966)
!14016 = !DILocation(line: 3270, column: 4, scope: !13966)
!14017 = !DILocation(line: 3270, column: 9, scope: !13966)
!14018 = !DILocation(line: 3270, column: 18, scope: !13966)
!14019 = !DILocation(line: 3271, column: 4, scope: !13966)
!14020 = !DILocation(line: 3271, column: 9, scope: !13966)
!14021 = !DILocation(line: 3271, column: 21, scope: !13966)
!14022 = !DILocation(line: 3272, column: 40, scope: !13966)
!14023 = !DILocation(line: 3272, column: 52, scope: !13966)
!14024 = !DILocation(line: 3272, column: 55, scope: !13966)
!14025 = !DILocation(line: 3272, column: 20, scope: !13966)
!14026 = !DILocation(line: 3272, column: 4, scope: !13966)
!14027 = !DILocation(line: 3272, column: 9, scope: !13966)
!14028 = !DILocation(line: 3272, column: 18, scope: !13966)
!14029 = !DILocation(line: 3273, column: 4, scope: !13966)
!14030 = !DILocation(line: 3273, column: 9, scope: !13966)
!14031 = !DILocation(line: 3273, column: 21, scope: !13966)
!14032 = !DILocation(line: 3274, column: 20, scope: !13966)
!14033 = !DILocation(line: 3274, column: 29, scope: !13966)
!14034 = !DILocation(line: 3274, column: 27, scope: !13966)
!14035 = !DILocation(line: 3274, column: 33, scope: !13966)
!14036 = !DILocation(line: 3274, column: 31, scope: !13966)
!14037 = !DILocation(line: 3274, column: 4, scope: !13966)
!14038 = !DILocation(line: 3274, column: 9, scope: !13966)
!14039 = !DILocation(line: 3274, column: 18, scope: !13966)
!14040 = !DILocation(line: 3275, column: 4, scope: !13966)
!14041 = !DILocation(line: 3275, column: 9, scope: !13966)
!14042 = !DILocation(line: 3275, column: 21, scope: !13966)
!14043 = !DILocation(line: 3276, column: 3, scope: !13966)
!14044 = !DILocation(line: 3258, column: 30, scope: !13961)
!14045 = !DILocation(line: 3258, column: 40, scope: !13961)
!14046 = !DILocation(line: 3258, column: 3, scope: !13961)
!14047 = distinct !{!14047, !13964, !14048}
!14048 = !DILocation(line: 3276, column: 3, scope: !13958)
!14049 = !DILocation(line: 3277, column: 2, scope: !13947)
!14050 = !DILocation(line: 3254, column: 53, scope: !13942)
!14051 = !DILocation(line: 3254, column: 2, scope: !13942)
!14052 = distinct !{!14052, !13945, !14053}
!14053 = !DILocation(line: 3277, column: 2, scope: !13938)
!14054 = !DILocation(line: 3279, column: 20, scope: !13836)
!14055 = !DILocation(line: 3279, column: 2, scope: !13836)
!14056 = !DILocation(line: 3279, column: 9, scope: !13836)
!14057 = !DILocation(line: 3279, column: 18, scope: !13836)
!14058 = !DILocation(line: 3280, column: 21, scope: !13836)
!14059 = !DILocation(line: 3280, column: 2, scope: !13836)
!14060 = !DILocation(line: 3280, column: 9, scope: !13836)
!14061 = !DILocation(line: 3280, column: 19, scope: !13836)
!14062 = !DILocation(line: 3281, column: 25, scope: !13836)
!14063 = !DILocation(line: 3281, column: 2, scope: !13836)
!14064 = !DILocation(line: 3281, column: 9, scope: !13836)
!14065 = !DILocation(line: 3281, column: 23, scope: !13836)
!14066 = !DILocation(line: 3282, column: 22, scope: !13836)
!14067 = !DILocation(line: 3282, column: 2, scope: !13836)
!14068 = !DILocation(line: 3282, column: 9, scope: !13836)
!14069 = !DILocation(line: 3282, column: 20, scope: !13836)
!14070 = !DILocation(line: 3283, column: 24, scope: !13836)
!14071 = !DILocation(line: 3283, column: 2, scope: !13836)
!14072 = !DILocation(line: 3283, column: 9, scope: !13836)
!14073 = !DILocation(line: 3283, column: 22, scope: !13836)
!14074 = !DILocation(line: 3284, column: 1, scope: !13836)
!14075 = distinct !DISubprogram(name: "ccgdm_adjacent_grid", scope: !3, file: !3, line: 3183, type: !14076, scopeLine: 3184, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!14076 = !DISubroutineType(types: !14077)
!14077 = !{!27, !1314, !2461, !27, !27}
!14078 = !DILocalVariable(name: "gridOffset", arg: 1, scope: !14075, file: !3, line: 3183, type: !1314)
!14079 = !DILocation(line: 3183, column: 37, scope: !14075)
!14080 = !DILocalVariable(name: "f", arg: 2, scope: !14075, file: !3, line: 3183, type: !2461)
!14081 = !DILocation(line: 3183, column: 58, scope: !14075)
!14082 = !DILocalVariable(name: "S", arg: 3, scope: !14075, file: !3, line: 3183, type: !27)
!14083 = !DILocation(line: 3183, column: 65, scope: !14075)
!14084 = !DILocalVariable(name: "offset", arg: 4, scope: !14075, file: !3, line: 3183, type: !27)
!14085 = !DILocation(line: 3183, column: 72, scope: !14075)
!14086 = !DILocalVariable(name: "adjf", scope: !14075, file: !3, line: 3185, type: !2461)
!14087 = !DILocation(line: 3185, column: 11, scope: !14075)
!14088 = !DILocalVariable(name: "e", scope: !14075, file: !3, line: 3186, type: !2638)
!14089 = !DILocation(line: 3186, column: 11, scope: !14075)
!14090 = !DILocalVariable(name: "i", scope: !14075, file: !3, line: 3187, type: !27)
!14091 = !DILocation(line: 3187, column: 6, scope: !14075)
!14092 = !DILocalVariable(name: "j", scope: !14075, file: !3, line: 3187, type: !27)
!14093 = !DILocation(line: 3187, column: 9, scope: !14075)
!14094 = !DILocalVariable(name: "numFaces", scope: !14075, file: !3, line: 3187, type: !27)
!14095 = !DILocation(line: 3187, column: 16, scope: !14075)
!14096 = !DILocalVariable(name: "fIndex", scope: !14075, file: !3, line: 3187, type: !27)
!14097 = !DILocation(line: 3187, column: 26, scope: !14075)
!14098 = !DILocalVariable(name: "numEdges", scope: !14075, file: !3, line: 3187, type: !27)
!14099 = !DILocation(line: 3187, column: 34, scope: !14075)
!14100 = !DILocation(line: 3189, column: 29, scope: !14075)
!14101 = !DILocation(line: 3189, column: 32, scope: !14075)
!14102 = !DILocation(line: 3189, column: 6, scope: !14075)
!14103 = !DILocation(line: 3189, column: 4, scope: !14075)
!14104 = !DILocation(line: 3190, column: 40, scope: !14075)
!14105 = !DILocation(line: 3190, column: 13, scope: !14075)
!14106 = !DILocation(line: 3190, column: 11, scope: !14075)
!14107 = !DILocation(line: 3192, column: 6, scope: !14108)
!14108 = distinct !DILexicalBlock(scope: !14075, file: !3, line: 3192, column: 6)
!14109 = !DILocation(line: 3192, column: 15, scope: !14108)
!14110 = !DILocation(line: 3192, column: 6, scope: !14075)
!14111 = !DILocation(line: 3193, column: 3, scope: !14108)
!14112 = !DILocation(line: 3195, column: 9, scope: !14113)
!14113 = distinct !DILexicalBlock(scope: !14075, file: !3, line: 3195, column: 2)
!14114 = !DILocation(line: 3195, column: 7, scope: !14113)
!14115 = !DILocation(line: 3195, column: 14, scope: !14116)
!14116 = distinct !DILexicalBlock(scope: !14113, file: !3, line: 3195, column: 2)
!14117 = !DILocation(line: 3195, column: 18, scope: !14116)
!14118 = !DILocation(line: 3195, column: 16, scope: !14116)
!14119 = !DILocation(line: 3195, column: 2, scope: !14113)
!14120 = !DILocation(line: 3196, column: 33, scope: !14121)
!14121 = distinct !DILexicalBlock(scope: !14116, file: !3, line: 3195, column: 33)
!14122 = !DILocation(line: 3196, column: 36, scope: !14121)
!14123 = !DILocation(line: 3196, column: 10, scope: !14121)
!14124 = !DILocation(line: 3196, column: 8, scope: !14121)
!14125 = !DILocation(line: 3198, column: 7, scope: !14126)
!14126 = distinct !DILexicalBlock(scope: !14121, file: !3, line: 3198, column: 7)
!14127 = !DILocation(line: 3198, column: 15, scope: !14126)
!14128 = !DILocation(line: 3198, column: 12, scope: !14126)
!14129 = !DILocation(line: 3198, column: 7, scope: !14121)
!14130 = !DILocation(line: 3199, column: 42, scope: !14131)
!14131 = distinct !DILexicalBlock(scope: !14126, file: !3, line: 3198, column: 18)
!14132 = !DILocation(line: 3199, column: 15, scope: !14131)
!14133 = !DILocation(line: 3199, column: 13, scope: !14131)
!14134 = !DILocation(line: 3200, column: 11, scope: !14135)
!14135 = distinct !DILexicalBlock(scope: !14131, file: !3, line: 3200, column: 4)
!14136 = !DILocation(line: 3200, column: 9, scope: !14135)
!14137 = !DILocation(line: 3200, column: 16, scope: !14138)
!14138 = distinct !DILexicalBlock(scope: !14135, file: !3, line: 3200, column: 4)
!14139 = !DILocation(line: 3200, column: 20, scope: !14138)
!14140 = !DILocation(line: 3200, column: 18, scope: !14138)
!14141 = !DILocation(line: 3200, column: 4, scope: !14135)
!14142 = !DILocation(line: 3201, column: 32, scope: !14143)
!14143 = distinct !DILexicalBlock(scope: !14138, file: !3, line: 3201, column: 9)
!14144 = !DILocation(line: 3201, column: 38, scope: !14143)
!14145 = !DILocation(line: 3201, column: 9, scope: !14143)
!14146 = !DILocation(line: 3201, column: 44, scope: !14143)
!14147 = !DILocation(line: 3201, column: 41, scope: !14143)
!14148 = !DILocation(line: 3201, column: 9, scope: !14138)
!14149 = !DILocation(line: 3202, column: 6, scope: !14143)
!14150 = !DILocation(line: 3200, column: 31, scope: !14138)
!14151 = !DILocation(line: 3200, column: 4, scope: !14138)
!14152 = distinct !{!14152, !14141, !14153}
!14153 = !DILocation(line: 3202, column: 6, scope: !14135)
!14154 = !DILocation(line: 3204, column: 8, scope: !14155)
!14155 = distinct !DILexicalBlock(scope: !14131, file: !3, line: 3204, column: 8)
!14156 = !DILocation(line: 3204, column: 13, scope: !14155)
!14157 = !DILocation(line: 3204, column: 10, scope: !14155)
!14158 = !DILocation(line: 3204, column: 8, scope: !14131)
!14159 = !DILocation(line: 3205, column: 5, scope: !14155)
!14160 = !DILocation(line: 3206, column: 3, scope: !14131)
!14161 = !DILocation(line: 3207, column: 2, scope: !14121)
!14162 = !DILocation(line: 3195, column: 29, scope: !14116)
!14163 = !DILocation(line: 3195, column: 2, scope: !14116)
!14164 = distinct !{!14164, !14119, !14165}
!14165 = !DILocation(line: 3207, column: 2, scope: !14113)
!14166 = !DILocation(line: 3209, column: 6, scope: !14167)
!14167 = distinct !DILexicalBlock(scope: !14075, file: !3, line: 3209, column: 6)
!14168 = !DILocation(line: 3209, column: 15, scope: !14167)
!14169 = !DILocation(line: 3209, column: 6, scope: !14075)
!14170 = !DILocation(line: 3210, column: 3, scope: !14167)
!14171 = !DILocation(line: 3212, column: 11, scope: !14075)
!14172 = !DILocation(line: 3212, column: 9, scope: !14075)
!14173 = !DILocation(line: 3214, column: 9, scope: !14075)
!14174 = !DILocation(line: 3214, column: 20, scope: !14075)
!14175 = !DILocation(line: 3214, column: 31, scope: !14075)
!14176 = !DILocation(line: 3214, column: 35, scope: !14075)
!14177 = !DILocation(line: 3214, column: 33, scope: !14075)
!14178 = !DILocation(line: 3214, column: 45, scope: !14075)
!14179 = !DILocation(line: 3214, column: 43, scope: !14075)
!14180 = !DILocation(line: 3214, column: 28, scope: !14075)
!14181 = !DILocation(line: 3214, column: 2, scope: !14075)
!14182 = !DILocation(line: 3215, column: 1, scope: !14075)
!14183 = distinct !DISubprogram(name: "ccgDM_use_grid_pbvh", scope: !3, file: !3, line: 3347, type: !14184, scopeLine: 3348, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!14184 = !DISubroutineType(types: !14185)
!14185 = !{!27, !2295}
!14186 = !DILocalVariable(name: "ccgdm", arg: 1, scope: !14183, file: !3, line: 3347, type: !2295)
!14187 = !DILocation(line: 3347, column: 48, scope: !14183)
!14188 = !DILocalVariable(name: "mmd", scope: !14183, file: !3, line: 3349, type: !14189)
!14189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14190, size: 64)
!14190 = !DIDerivedType(tag: DW_TAG_typedef, name: "MultiresModifierData", file: !353, line: 722, baseType: !352)
!14191 = !DILocation(line: 3349, column: 24, scope: !14183)
!14192 = !DILocation(line: 3349, column: 30, scope: !14183)
!14193 = !DILocation(line: 3349, column: 37, scope: !14183)
!14194 = !DILocation(line: 3349, column: 46, scope: !14183)
!14195 = !DILocation(line: 3353, column: 7, scope: !14196)
!14196 = distinct !DILexicalBlock(scope: !14183, file: !3, line: 3353, column: 6)
!14197 = !DILocation(line: 3353, column: 6, scope: !14183)
!14198 = !DILocation(line: 3354, column: 3, scope: !14196)
!14199 = !DILocation(line: 3356, column: 2, scope: !14183)
!14200 = !DILocation(line: 3357, column: 1, scope: !14183)
!14201 = distinct !DISubprogram(name: "ccgdm_pbvh_update", scope: !3, file: !3, line: 1637, type: !14202, scopeLine: 1638, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!14202 = !DISubroutineType(types: !14203)
!14203 = !{null, !2295}
!14204 = !DILocalVariable(name: "ccgdm", arg: 1, scope: !14201, file: !3, line: 1637, type: !2295)
!14205 = !DILocation(line: 1637, column: 47, scope: !14201)
!14206 = !DILocation(line: 1639, column: 6, scope: !14207)
!14207 = distinct !DILexicalBlock(scope: !14201, file: !3, line: 1639, column: 6)
!14208 = !DILocation(line: 1639, column: 13, scope: !14207)
!14209 = !DILocation(line: 1639, column: 18, scope: !14207)
!14210 = !DILocation(line: 1639, column: 41, scope: !14207)
!14211 = !DILocation(line: 1639, column: 21, scope: !14207)
!14212 = !DILocation(line: 1639, column: 6, scope: !14201)
!14213 = !DILocalVariable(name: "faces", scope: !14214, file: !3, line: 1640, type: !8746)
!14214 = distinct !DILexicalBlock(scope: !14207, file: !3, line: 1639, column: 49)
!14215 = !DILocation(line: 1640, column: 13, scope: !14214)
!14216 = !DILocalVariable(name: "totface", scope: !14214, file: !3, line: 1641, type: !27)
!14217 = !DILocation(line: 1641, column: 7, scope: !14214)
!14218 = !DILocation(line: 1643, column: 29, scope: !14214)
!14219 = !DILocation(line: 1643, column: 36, scope: !14214)
!14220 = !DILocation(line: 1643, column: 45, scope: !14214)
!14221 = !DILocation(line: 1643, column: 3, scope: !14214)
!14222 = !DILocation(line: 1644, column: 7, scope: !14223)
!14223 = distinct !DILexicalBlock(scope: !14214, file: !3, line: 1644, column: 7)
!14224 = !DILocation(line: 1644, column: 7, scope: !14214)
!14225 = !DILocation(line: 1645, column: 31, scope: !14226)
!14226 = distinct !DILexicalBlock(scope: !14223, file: !3, line: 1644, column: 16)
!14227 = !DILocation(line: 1645, column: 38, scope: !14226)
!14228 = !DILocation(line: 1645, column: 45, scope: !14226)
!14229 = !DILocation(line: 1645, column: 52, scope: !14226)
!14230 = !DILocation(line: 1645, column: 4, scope: !14226)
!14231 = !DILocation(line: 1646, column: 29, scope: !14226)
!14232 = !DILocation(line: 1646, column: 36, scope: !14226)
!14233 = !DILocation(line: 1646, column: 40, scope: !14226)
!14234 = !DILocation(line: 1646, column: 47, scope: !14226)
!14235 = !DILocation(line: 1646, column: 4, scope: !14226)
!14236 = !DILocation(line: 1647, column: 4, scope: !14226)
!14237 = !DILocation(line: 1647, column: 14, scope: !14226)
!14238 = !DILocation(line: 1648, column: 3, scope: !14226)
!14239 = !DILocation(line: 1649, column: 2, scope: !14214)
!14240 = !DILocation(line: 1650, column: 1, scope: !14201)
!14241 = distinct !DISubprogram(name: "ccgDM_glNormalFast", scope: !3, file: !3, line: 1750, type: !14242, scopeLine: 1751, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!14242 = !DISubroutineType(types: !14243)
!14243 = !{null, !1306, !1306, !1306, !1306}
!14244 = !DILocalVariable(name: "a", arg: 1, scope: !14241, file: !3, line: 1750, type: !1306)
!14245 = !DILocation(line: 1750, column: 39, scope: !14241)
!14246 = !DILocalVariable(name: "b", arg: 2, scope: !14241, file: !3, line: 1750, type: !1306)
!14247 = !DILocation(line: 1750, column: 49, scope: !14241)
!14248 = !DILocalVariable(name: "c", arg: 3, scope: !14241, file: !3, line: 1750, type: !1306)
!14249 = !DILocation(line: 1750, column: 59, scope: !14241)
!14250 = !DILocalVariable(name: "d", arg: 4, scope: !14241, file: !3, line: 1750, type: !1306)
!14251 = !DILocation(line: 1750, column: 69, scope: !14241)
!14252 = !DILocalVariable(name: "a_cX", scope: !14241, file: !3, line: 1752, type: !90)
!14253 = !DILocation(line: 1752, column: 8, scope: !14241)
!14254 = !DILocation(line: 1752, column: 15, scope: !14241)
!14255 = !DILocation(line: 1752, column: 22, scope: !14241)
!14256 = !DILocation(line: 1752, column: 20, scope: !14241)
!14257 = !DILocalVariable(name: "a_cY", scope: !14241, file: !3, line: 1752, type: !90)
!14258 = !DILocation(line: 1752, column: 28, scope: !14241)
!14259 = !DILocation(line: 1752, column: 35, scope: !14241)
!14260 = !DILocation(line: 1752, column: 42, scope: !14241)
!14261 = !DILocation(line: 1752, column: 40, scope: !14241)
!14262 = !DILocalVariable(name: "a_cZ", scope: !14241, file: !3, line: 1752, type: !90)
!14263 = !DILocation(line: 1752, column: 48, scope: !14241)
!14264 = !DILocation(line: 1752, column: 55, scope: !14241)
!14265 = !DILocation(line: 1752, column: 62, scope: !14241)
!14266 = !DILocation(line: 1752, column: 60, scope: !14241)
!14267 = !DILocalVariable(name: "b_dX", scope: !14241, file: !3, line: 1753, type: !90)
!14268 = !DILocation(line: 1753, column: 8, scope: !14241)
!14269 = !DILocation(line: 1753, column: 15, scope: !14241)
!14270 = !DILocation(line: 1753, column: 22, scope: !14241)
!14271 = !DILocation(line: 1753, column: 20, scope: !14241)
!14272 = !DILocalVariable(name: "b_dY", scope: !14241, file: !3, line: 1753, type: !90)
!14273 = !DILocation(line: 1753, column: 28, scope: !14241)
!14274 = !DILocation(line: 1753, column: 35, scope: !14241)
!14275 = !DILocation(line: 1753, column: 42, scope: !14241)
!14276 = !DILocation(line: 1753, column: 40, scope: !14241)
!14277 = !DILocalVariable(name: "b_dZ", scope: !14241, file: !3, line: 1753, type: !90)
!14278 = !DILocation(line: 1753, column: 48, scope: !14241)
!14279 = !DILocation(line: 1753, column: 55, scope: !14241)
!14280 = !DILocation(line: 1753, column: 62, scope: !14241)
!14281 = !DILocation(line: 1753, column: 60, scope: !14241)
!14282 = !DILocalVariable(name: "no", scope: !14241, file: !3, line: 1754, type: !204)
!14283 = !DILocation(line: 1754, column: 8, scope: !14241)
!14284 = !DILocation(line: 1756, column: 10, scope: !14241)
!14285 = !DILocation(line: 1756, column: 17, scope: !14241)
!14286 = !DILocation(line: 1756, column: 15, scope: !14241)
!14287 = !DILocation(line: 1756, column: 24, scope: !14241)
!14288 = !DILocation(line: 1756, column: 31, scope: !14241)
!14289 = !DILocation(line: 1756, column: 29, scope: !14241)
!14290 = !DILocation(line: 1756, column: 22, scope: !14241)
!14291 = !DILocation(line: 1756, column: 2, scope: !14241)
!14292 = !DILocation(line: 1756, column: 8, scope: !14241)
!14293 = !DILocation(line: 1757, column: 10, scope: !14241)
!14294 = !DILocation(line: 1757, column: 17, scope: !14241)
!14295 = !DILocation(line: 1757, column: 15, scope: !14241)
!14296 = !DILocation(line: 1757, column: 24, scope: !14241)
!14297 = !DILocation(line: 1757, column: 31, scope: !14241)
!14298 = !DILocation(line: 1757, column: 29, scope: !14241)
!14299 = !DILocation(line: 1757, column: 22, scope: !14241)
!14300 = !DILocation(line: 1757, column: 2, scope: !14241)
!14301 = !DILocation(line: 1757, column: 8, scope: !14241)
!14302 = !DILocation(line: 1758, column: 10, scope: !14241)
!14303 = !DILocation(line: 1758, column: 17, scope: !14241)
!14304 = !DILocation(line: 1758, column: 15, scope: !14241)
!14305 = !DILocation(line: 1758, column: 24, scope: !14241)
!14306 = !DILocation(line: 1758, column: 31, scope: !14241)
!14307 = !DILocation(line: 1758, column: 29, scope: !14241)
!14308 = !DILocation(line: 1758, column: 22, scope: !14241)
!14309 = !DILocation(line: 1758, column: 2, scope: !14241)
!14310 = !DILocation(line: 1758, column: 8, scope: !14241)
!14311 = !DILocation(line: 1761, column: 14, scope: !14241)
!14312 = !DILocation(line: 1761, column: 2, scope: !14241)
!14313 = !DILocation(line: 1762, column: 1, scope: !14241)
!14314 = distinct !DISubprogram(name: "ccgDM_drawFacesTex_common", scope: !3, file: !3, line: 2290, type: !14315, scopeLine: 2295, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!14315 = !DISubroutineType(types: !14316)
!14316 = !{null, !11, !2110, !2153, !2134, !41, !2138}
!14317 = !DILocalVariable(name: "dm", arg: 1, scope: !14314, file: !3, line: 2290, type: !11)
!14318 = !DILocation(line: 2290, column: 52, scope: !14314)
!14319 = !DILocalVariable(name: "drawParams", arg: 2, scope: !14314, file: !3, line: 2291, type: !2110)
!14320 = !DILocation(line: 2291, column: 59, scope: !14314)
!14321 = !DILocalVariable(name: "drawParamsMapped", arg: 3, scope: !14314, file: !3, line: 2292, type: !2153)
!14322 = !DILocation(line: 2292, column: 56, scope: !14314)
!14323 = !DILocalVariable(name: "compareDrawOptions", arg: 4, scope: !14314, file: !3, line: 2293, type: !2134)
!14324 = !DILocation(line: 2293, column: 60, scope: !14314)
!14325 = !DILocalVariable(name: "userData", arg: 5, scope: !14314, file: !3, line: 2294, type: !41)
!14326 = !DILocation(line: 2294, column: 45, scope: !14314)
!14327 = !DILocalVariable(name: "flag", arg: 6, scope: !14314, file: !3, line: 2294, type: !2138)
!14328 = !DILocation(line: 2294, column: 66, scope: !14314)
!14329 = !DILocalVariable(name: "ccgdm", scope: !14314, file: !3, line: 2296, type: !2295)
!14330 = !DILocation(line: 2296, column: 18, scope: !14314)
!14331 = !DILocation(line: 2296, column: 45, scope: !14314)
!14332 = !DILocation(line: 2296, column: 26, scope: !14314)
!14333 = !DILocalVariable(name: "ss", scope: !14314, file: !3, line: 2297, type: !6)
!14334 = !DILocation(line: 2297, column: 14, scope: !14314)
!14335 = !DILocation(line: 2297, column: 19, scope: !14314)
!14336 = !DILocation(line: 2297, column: 26, scope: !14314)
!14337 = !DILocalVariable(name: "key", scope: !14314, file: !3, line: 2298, type: !5667)
!14338 = !DILocation(line: 2298, column: 9, scope: !14314)
!14339 = !DILocalVariable(name: "mcol", scope: !14314, file: !3, line: 2299, type: !10496)
!14340 = !DILocation(line: 2299, column: 8, scope: !14314)
!14341 = !DILocation(line: 2299, column: 15, scope: !14314)
!14342 = !DILocation(line: 2299, column: 19, scope: !14314)
!14343 = !DILocation(line: 2299, column: 40, scope: !14314)
!14344 = !DILocalVariable(name: "tf", scope: !14314, file: !3, line: 2300, type: !12129)
!14345 = !DILocation(line: 2300, column: 10, scope: !14314)
!14346 = !DILocation(line: 2300, column: 42, scope: !14314)
!14347 = !DILocation(line: 2300, column: 15, scope: !14314)
!14348 = !DILocalVariable(name: "tf_stencil_base", scope: !14314, file: !3, line: 2301, type: !12129)
!14349 = !DILocation(line: 2301, column: 10, scope: !14314)
!14350 = !DILocalVariable(name: "tf_stencil", scope: !14314, file: !3, line: 2302, type: !12129)
!14351 = !DILocation(line: 2302, column: 10, scope: !14314)
!14352 = !DILocalVariable(name: "tf_base", scope: !14314, file: !3, line: 2303, type: !12129)
!14353 = !DILocation(line: 2303, column: 10, scope: !14314)
!14354 = !DILocalVariable(name: "lnors", scope: !14314, file: !3, line: 2304, type: !10022)
!14355 = !DILocation(line: 2304, column: 10, scope: !14314)
!14356 = !DILocation(line: 2304, column: 25, scope: !14314)
!14357 = !DILocation(line: 2304, column: 29, scope: !14314)
!14358 = !DILocation(line: 2304, column: 50, scope: !14314)
!14359 = !DILocalVariable(name: "faceFlags", scope: !14314, file: !3, line: 2305, type: !2024)
!14360 = !DILocation(line: 2305, column: 13, scope: !14314)
!14361 = !DILocation(line: 2305, column: 25, scope: !14314)
!14362 = !DILocation(line: 2305, column: 32, scope: !14314)
!14363 = !DILocalVariable(name: "draw_option", scope: !14314, file: !3, line: 2306, type: !2114)
!14364 = !DILocation(line: 2306, column: 15, scope: !14314)
!14365 = !DILocalVariable(name: "i", scope: !14314, file: !3, line: 2307, type: !27)
!14366 = !DILocation(line: 2307, column: 6, scope: !14314)
!14367 = !DILocalVariable(name: "totface", scope: !14314, file: !3, line: 2307, type: !27)
!14368 = !DILocation(line: 2307, column: 9, scope: !14314)
!14369 = !DILocalVariable(name: "gridSize", scope: !14314, file: !3, line: 2307, type: !27)
!14370 = !DILocation(line: 2307, column: 18, scope: !14314)
!14371 = !DILocation(line: 2307, column: 52, scope: !14314)
!14372 = !DILocation(line: 2307, column: 29, scope: !14314)
!14373 = !DILocalVariable(name: "gridFaces", scope: !14314, file: !3, line: 2308, type: !27)
!14374 = !DILocation(line: 2308, column: 6, scope: !14314)
!14375 = !DILocation(line: 2308, column: 18, scope: !14314)
!14376 = !DILocation(line: 2308, column: 27, scope: !14314)
!14377 = !DILocalVariable(name: "gridOffset", scope: !14314, file: !3, line: 2309, type: !27)
!14378 = !DILocation(line: 2309, column: 6, scope: !14314)
!14379 = !DILocalVariable(name: "mat_nr_cache", scope: !14314, file: !3, line: 2310, type: !27)
!14380 = !DILocation(line: 2310, column: 6, scope: !14314)
!14381 = !DILocation(line: 2312, column: 9, scope: !14314)
!14382 = !DILocation(line: 2314, column: 26, scope: !14314)
!14383 = !DILocation(line: 2314, column: 2, scope: !14314)
!14384 = !DILocation(line: 2315, column: 20, scope: !14314)
!14385 = !DILocation(line: 2315, column: 2, scope: !14314)
!14386 = !DILocation(line: 2317, column: 7, scope: !14387)
!14387 = distinct !DILexicalBlock(scope: !14314, file: !3, line: 2317, column: 6)
!14388 = !DILocation(line: 2317, column: 6, scope: !14314)
!14389 = !DILocation(line: 2318, column: 10, scope: !14387)
!14390 = !DILocation(line: 2318, column: 14, scope: !14387)
!14391 = !DILocation(line: 2318, column: 35, scope: !14387)
!14392 = !DILocation(line: 2318, column: 8, scope: !14387)
!14393 = !DILocation(line: 2318, column: 3, scope: !14387)
!14394 = !DILocation(line: 2320, column: 7, scope: !14395)
!14395 = distinct !DILexicalBlock(scope: !14314, file: !3, line: 2320, column: 6)
!14396 = !DILocation(line: 2320, column: 6, scope: !14314)
!14397 = !DILocation(line: 2321, column: 10, scope: !14395)
!14398 = !DILocation(line: 2321, column: 14, scope: !14395)
!14399 = !DILocation(line: 2321, column: 35, scope: !14395)
!14400 = !DILocation(line: 2321, column: 8, scope: !14395)
!14401 = !DILocation(line: 2321, column: 3, scope: !14395)
!14402 = !DILocation(line: 2323, column: 35, scope: !14314)
!14403 = !DILocation(line: 2323, column: 12, scope: !14314)
!14404 = !DILocation(line: 2323, column: 10, scope: !14314)
!14405 = !DILocation(line: 2325, column: 6, scope: !14406)
!14406 = distinct !DILexicalBlock(scope: !14314, file: !3, line: 2325, column: 6)
!14407 = !DILocation(line: 2325, column: 11, scope: !14406)
!14408 = !DILocation(line: 2325, column: 6, scope: !14314)
!14409 = !DILocalVariable(name: "stencil", scope: !14410, file: !3, line: 2326, type: !27)
!14410 = distinct !DILexicalBlock(scope: !14406, file: !3, line: 2325, column: 38)
!14411 = !DILocation(line: 2326, column: 7, scope: !14410)
!14412 = !DILocation(line: 2326, column: 47, scope: !14410)
!14413 = !DILocation(line: 2326, column: 51, scope: !14410)
!14414 = !DILocation(line: 2326, column: 17, scope: !14410)
!14415 = !DILocation(line: 2327, column: 45, scope: !14410)
!14416 = !DILocation(line: 2327, column: 49, scope: !14410)
!14417 = !DILocation(line: 2327, column: 70, scope: !14410)
!14418 = !DILocation(line: 2327, column: 21, scope: !14410)
!14419 = !DILocation(line: 2327, column: 19, scope: !14410)
!14420 = !DILocation(line: 2328, column: 2, scope: !14410)
!14421 = !DILocation(line: 2330, column: 9, scope: !14422)
!14422 = distinct !DILexicalBlock(scope: !14314, file: !3, line: 2330, column: 2)
!14423 = !DILocation(line: 2330, column: 7, scope: !14422)
!14424 = !DILocation(line: 2330, column: 14, scope: !14425)
!14425 = distinct !DILexicalBlock(scope: !14422, file: !3, line: 2330, column: 2)
!14426 = !DILocation(line: 2330, column: 18, scope: !14425)
!14427 = !DILocation(line: 2330, column: 16, scope: !14425)
!14428 = !DILocation(line: 2330, column: 2, scope: !14422)
!14429 = !DILocalVariable(name: "f", scope: !14430, file: !3, line: 2331, type: !2461)
!14430 = distinct !DILexicalBlock(scope: !14425, file: !3, line: 2330, column: 32)
!14431 = !DILocation(line: 2331, column: 12, scope: !14430)
!14432 = !DILocation(line: 2331, column: 16, scope: !14430)
!14433 = !DILocation(line: 2331, column: 23, scope: !14430)
!14434 = !DILocation(line: 2331, column: 31, scope: !14430)
!14435 = !DILocation(line: 2331, column: 34, scope: !14430)
!14436 = !DILocalVariable(name: "S", scope: !14430, file: !3, line: 2332, type: !27)
!14437 = !DILocation(line: 2332, column: 7, scope: !14430)
!14438 = !DILocalVariable(name: "x", scope: !14430, file: !3, line: 2332, type: !27)
!14439 = !DILocation(line: 2332, column: 10, scope: !14430)
!14440 = !DILocalVariable(name: "y", scope: !14430, file: !3, line: 2332, type: !27)
!14441 = !DILocation(line: 2332, column: 13, scope: !14430)
!14442 = !DILocalVariable(name: "numVerts", scope: !14430, file: !3, line: 2332, type: !27)
!14443 = !DILocation(line: 2332, column: 16, scope: !14430)
!14444 = !DILocation(line: 2332, column: 54, scope: !14430)
!14445 = !DILocation(line: 2332, column: 27, scope: !14430)
!14446 = !DILocalVariable(name: "drawSmooth", scope: !14430, file: !3, line: 2333, type: !27)
!14447 = !DILocation(line: 2333, column: 7, scope: !14430)
!14448 = !DILocalVariable(name: "index", scope: !14430, file: !3, line: 2333, type: !27)
!14449 = !DILocation(line: 2333, column: 19, scope: !14430)
!14450 = !DILocation(line: 2333, column: 49, scope: !14430)
!14451 = !DILocation(line: 2333, column: 53, scope: !14430)
!14452 = !DILocation(line: 2333, column: 27, scope: !14430)
!14453 = !DILocalVariable(name: "origIndex", scope: !14430, file: !3, line: 2334, type: !27)
!14454 = !DILocation(line: 2334, column: 7, scope: !14430)
!14455 = !DILocation(line: 2334, column: 19, scope: !14430)
!14456 = !DILocalVariable(name: "cp", scope: !14430, file: !3, line: 2335, type: !2376)
!14457 = !DILocation(line: 2335, column: 18, scope: !14430)
!14458 = !DILocalVariable(name: "ln", scope: !14430, file: !3, line: 2336, type: !10022)
!14459 = !DILocation(line: 2336, column: 11, scope: !14430)
!14460 = !DILocalVariable(name: "mat_nr", scope: !14430, file: !3, line: 2337, type: !27)
!14461 = !DILocation(line: 2337, column: 7, scope: !14430)
!14462 = !DILocation(line: 2339, column: 7, scope: !14463)
!14463 = distinct !DILexicalBlock(scope: !14430, file: !3, line: 2339, column: 7)
!14464 = !DILocation(line: 2339, column: 7, scope: !14430)
!14465 = !DILocation(line: 2340, column: 18, scope: !14466)
!14466 = distinct !DILexicalBlock(scope: !14463, file: !3, line: 2339, column: 18)
!14467 = !DILocation(line: 2340, column: 24, scope: !14466)
!14468 = !DILocation(line: 2340, column: 28, scope: !14466)
!14469 = !DILocation(line: 2340, column: 38, scope: !14466)
!14470 = !DILocation(line: 2340, column: 49, scope: !14466)
!14471 = !DILocation(line: 2340, column: 54, scope: !14466)
!14472 = !DILocation(line: 2340, column: 15, scope: !14466)
!14473 = !DILocation(line: 2341, column: 13, scope: !14466)
!14474 = !DILocation(line: 2341, column: 23, scope: !14466)
!14475 = !DILocation(line: 2341, column: 34, scope: !14466)
!14476 = !DILocation(line: 2341, column: 11, scope: !14466)
!14477 = !DILocation(line: 2342, column: 3, scope: !14466)
!14478 = !DILocation(line: 2344, column: 15, scope: !14479)
!14479 = distinct !DILexicalBlock(scope: !14463, file: !3, line: 2343, column: 8)
!14480 = !DILocation(line: 2345, column: 11, scope: !14479)
!14481 = !DILocation(line: 2349, column: 7, scope: !14482)
!14482 = distinct !DILexicalBlock(scope: !14430, file: !3, line: 2349, column: 7)
!14483 = !DILocation(line: 2349, column: 12, scope: !14482)
!14484 = !DILocation(line: 2349, column: 7, scope: !14430)
!14485 = !DILocation(line: 2350, column: 8, scope: !14486)
!14486 = distinct !DILexicalBlock(scope: !14487, file: !3, line: 2350, column: 8)
!14487 = distinct !DILexicalBlock(scope: !14482, file: !3, line: 2349, column: 39)
!14488 = !DILocation(line: 2350, column: 18, scope: !14486)
!14489 = !DILocation(line: 2350, column: 15, scope: !14486)
!14490 = !DILocation(line: 2350, column: 8, scope: !14487)
!14491 = !DILocation(line: 2351, column: 43, scope: !14492)
!14492 = distinct !DILexicalBlock(scope: !14486, file: !3, line: 2350, column: 32)
!14493 = !DILocation(line: 2351, column: 47, scope: !14492)
!14494 = !DILocation(line: 2351, column: 15, scope: !14492)
!14495 = !DILocation(line: 2351, column: 13, scope: !14492)
!14496 = !DILocation(line: 2353, column: 20, scope: !14492)
!14497 = !DILocation(line: 2353, column: 18, scope: !14492)
!14498 = !DILocation(line: 2354, column: 4, scope: !14492)
!14499 = !DILocation(line: 2356, column: 9, scope: !14487)
!14500 = !DILocation(line: 2356, column: 19, scope: !14487)
!14501 = !DILocation(line: 2356, column: 29, scope: !14487)
!14502 = !DILocation(line: 2356, column: 27, scope: !14487)
!14503 = !DILocation(line: 2356, column: 7, scope: !14487)
!14504 = !DILocation(line: 2357, column: 17, scope: !14487)
!14505 = !DILocation(line: 2357, column: 35, scope: !14487)
!14506 = !DILocation(line: 2357, column: 53, scope: !14487)
!14507 = !DILocation(line: 2357, column: 51, scope: !14487)
!14508 = !DILocation(line: 2357, column: 15, scope: !14487)
!14509 = !DILocation(line: 2358, column: 18, scope: !14487)
!14510 = !DILocation(line: 2358, column: 30, scope: !14487)
!14511 = !DILocation(line: 2358, column: 28, scope: !14487)
!14512 = !DILocation(line: 2358, column: 42, scope: !14487)
!14513 = !DILocation(line: 2358, column: 40, scope: !14487)
!14514 = !DILocation(line: 2358, column: 15, scope: !14487)
!14515 = !DILocation(line: 2359, column: 3, scope: !14487)
!14516 = !DILocation(line: 2361, column: 7, scope: !14517)
!14517 = distinct !DILexicalBlock(scope: !14430, file: !3, line: 2361, column: 7)
!14518 = !DILocation(line: 2361, column: 7, scope: !14430)
!14519 = !DILocation(line: 2362, column: 18, scope: !14517)
!14520 = !DILocation(line: 2362, column: 29, scope: !14517)
!14521 = !DILocation(line: 2362, column: 34, scope: !14517)
!14522 = !DILocation(line: 2362, column: 39, scope: !14517)
!14523 = !DILocation(line: 2362, column: 33, scope: !14517)
!14524 = !DILocation(line: 2362, column: 49, scope: !14517)
!14525 = !DILocation(line: 2362, column: 16, scope: !14517)
!14526 = !DILocation(line: 2362, column: 4, scope: !14517)
!14527 = !DILocation(line: 2363, column: 12, scope: !14528)
!14528 = distinct !DILexicalBlock(scope: !14517, file: !3, line: 2363, column: 12)
!14529 = !DILocation(line: 2363, column: 18, scope: !14528)
!14530 = !DILocation(line: 2363, column: 12, scope: !14517)
!14531 = !DILocation(line: 2364, column: 19, scope: !14528)
!14532 = !DILocation(line: 2364, column: 18, scope: !14528)
!14533 = !DILocation(line: 2364, column: 39, scope: !14528)
!14534 = !DILocation(line: 2364, column: 56, scope: !14528)
!14535 = !DILocation(line: 2364, column: 66, scope: !14528)
!14536 = !DILocation(line: 2364, column: 16, scope: !14528)
!14537 = !DILocation(line: 2364, column: 4, scope: !14528)
!14538 = !DILocation(line: 2366, column: 38, scope: !14528)
!14539 = !DILocation(line: 2366, column: 18, scope: !14528)
!14540 = !DILocation(line: 2366, column: 16, scope: !14528)
!14541 = !DILocation(line: 2368, column: 7, scope: !14542)
!14542 = distinct !DILexicalBlock(scope: !14430, file: !3, line: 2368, column: 7)
!14543 = !DILocation(line: 2368, column: 7, scope: !14430)
!14544 = !DILocation(line: 2369, column: 9, scope: !14545)
!14545 = distinct !DILexicalBlock(scope: !14542, file: !3, line: 2368, column: 14)
!14546 = !DILocation(line: 2369, column: 7, scope: !14545)
!14547 = !DILocation(line: 2370, column: 13, scope: !14545)
!14548 = !DILocation(line: 2370, column: 25, scope: !14545)
!14549 = !DILocation(line: 2370, column: 23, scope: !14545)
!14550 = !DILocation(line: 2370, column: 37, scope: !14545)
!14551 = !DILocation(line: 2370, column: 35, scope: !14545)
!14552 = !DILocation(line: 2370, column: 10, scope: !14545)
!14553 = !DILocation(line: 2371, column: 3, scope: !14545)
!14554 = !DILocation(line: 2373, column: 7, scope: !14555)
!14555 = distinct !DILexicalBlock(scope: !14430, file: !3, line: 2373, column: 7)
!14556 = !DILocation(line: 2373, column: 19, scope: !14555)
!14557 = !DILocation(line: 2373, column: 7, scope: !14430)
!14558 = !DILocation(line: 2374, column: 8, scope: !14559)
!14559 = distinct !DILexicalBlock(scope: !14560, file: !3, line: 2374, column: 8)
!14560 = distinct !DILexicalBlock(scope: !14555, file: !3, line: 2373, column: 43)
!14561 = !DILocation(line: 2374, column: 8, scope: !14560)
!14562 = !DILocation(line: 2374, column: 18, scope: !14559)
!14563 = !DILocation(line: 2374, column: 30, scope: !14559)
!14564 = !DILocation(line: 2374, column: 28, scope: !14559)
!14565 = !DILocation(line: 2374, column: 42, scope: !14559)
!14566 = !DILocation(line: 2374, column: 40, scope: !14559)
!14567 = !DILocation(line: 2374, column: 15, scope: !14559)
!14568 = !DILocation(line: 2374, column: 12, scope: !14559)
!14569 = !DILocation(line: 2375, column: 8, scope: !14570)
!14570 = distinct !DILexicalBlock(scope: !14560, file: !3, line: 2375, column: 8)
!14571 = !DILocation(line: 2375, column: 8, scope: !14560)
!14572 = !DILocation(line: 2375, column: 22, scope: !14570)
!14573 = !DILocation(line: 2375, column: 34, scope: !14570)
!14574 = !DILocation(line: 2375, column: 32, scope: !14570)
!14575 = !DILocation(line: 2375, column: 46, scope: !14570)
!14576 = !DILocation(line: 2375, column: 44, scope: !14570)
!14577 = !DILocation(line: 2375, column: 55, scope: !14570)
!14578 = !DILocation(line: 2375, column: 19, scope: !14570)
!14579 = !DILocation(line: 2375, column: 14, scope: !14570)
!14580 = !DILocation(line: 2376, column: 4, scope: !14560)
!14581 = !DILocation(line: 2380, column: 7, scope: !14582)
!14582 = distinct !DILexicalBlock(scope: !14430, file: !3, line: 2380, column: 7)
!14583 = !DILocation(line: 2380, column: 7, scope: !14430)
!14584 = !DILocation(line: 2381, column: 8, scope: !14585)
!14585 = distinct !DILexicalBlock(scope: !14586, file: !3, line: 2381, column: 8)
!14586 = distinct !DILexicalBlock(scope: !14582, file: !3, line: 2380, column: 13)
!14587 = !DILocation(line: 2381, column: 20, scope: !14585)
!14588 = !DILocation(line: 2381, column: 8, scope: !14586)
!14589 = !DILocation(line: 2382, column: 27, scope: !14585)
!14590 = !DILocation(line: 2382, column: 10, scope: !14585)
!14591 = !DILocation(line: 2382, column: 8, scope: !14585)
!14592 = !DILocation(line: 2382, column: 5, scope: !14585)
!14593 = !DILocation(line: 2383, column: 12, scope: !14586)
!14594 = !DILocation(line: 2383, column: 24, scope: !14586)
!14595 = !DILocation(line: 2383, column: 22, scope: !14586)
!14596 = !DILocation(line: 2383, column: 36, scope: !14586)
!14597 = !DILocation(line: 2383, column: 34, scope: !14586)
!14598 = !DILocation(line: 2383, column: 45, scope: !14586)
!14599 = !DILocation(line: 2383, column: 9, scope: !14586)
!14600 = !DILocation(line: 2384, column: 3, scope: !14586)
!14601 = !DILocation(line: 2386, column: 10, scope: !14602)
!14602 = distinct !DILexicalBlock(scope: !14430, file: !3, line: 2386, column: 3)
!14603 = !DILocation(line: 2386, column: 8, scope: !14602)
!14604 = !DILocation(line: 2386, column: 15, scope: !14605)
!14605 = distinct !DILexicalBlock(scope: !14602, file: !3, line: 2386, column: 3)
!14606 = !DILocation(line: 2386, column: 19, scope: !14605)
!14607 = !DILocation(line: 2386, column: 17, scope: !14605)
!14608 = !DILocation(line: 2386, column: 3, scope: !14602)
!14609 = !DILocalVariable(name: "faceGridData", scope: !14610, file: !3, line: 2387, type: !2371)
!14610 = distinct !DILexicalBlock(scope: !14605, file: !3, line: 2386, column: 34)
!14611 = !DILocation(line: 2387, column: 13, scope: !14610)
!14612 = !DILocation(line: 2387, column: 60, scope: !14610)
!14613 = !DILocation(line: 2387, column: 64, scope: !14610)
!14614 = !DILocation(line: 2387, column: 67, scope: !14610)
!14615 = !DILocation(line: 2387, column: 28, scope: !14610)
!14616 = !DILocalVariable(name: "a", scope: !14610, file: !3, line: 2388, type: !2371)
!14617 = !DILocation(line: 2388, column: 13, scope: !14610)
!14618 = !DILocalVariable(name: "b", scope: !14610, file: !3, line: 2388, type: !2371)
!14619 = !DILocation(line: 2388, column: 17, scope: !14610)
!14620 = !DILocation(line: 2390, column: 8, scope: !14621)
!14621 = distinct !DILexicalBlock(scope: !14610, file: !3, line: 2390, column: 8)
!14622 = !DILocation(line: 2390, column: 8, scope: !14610)
!14623 = !DILocation(line: 2391, column: 5, scope: !14624)
!14624 = distinct !DILexicalBlock(scope: !14621, file: !3, line: 2390, column: 12)
!14625 = !DILocation(line: 2392, column: 5, scope: !14624)
!14626 = !DILocation(line: 2393, column: 12, scope: !14627)
!14627 = distinct !DILexicalBlock(scope: !14624, file: !3, line: 2393, column: 5)
!14628 = !DILocation(line: 2393, column: 10, scope: !14627)
!14629 = !DILocation(line: 2393, column: 17, scope: !14630)
!14630 = distinct !DILexicalBlock(scope: !14627, file: !3, line: 2393, column: 5)
!14631 = !DILocation(line: 2393, column: 21, scope: !14630)
!14632 = !DILocation(line: 2393, column: 19, scope: !14630)
!14633 = !DILocation(line: 2393, column: 5, scope: !14627)
!14634 = !DILocation(line: 2394, column: 13, scope: !14635)
!14635 = distinct !DILexicalBlock(scope: !14636, file: !3, line: 2394, column: 6)
!14636 = distinct !DILexicalBlock(scope: !14630, file: !3, line: 2393, column: 37)
!14637 = !DILocation(line: 2394, column: 11, scope: !14635)
!14638 = !DILocation(line: 2394, column: 18, scope: !14639)
!14639 = distinct !DILexicalBlock(scope: !14635, file: !3, line: 2394, column: 6)
!14640 = !DILocation(line: 2394, column: 22, scope: !14639)
!14641 = !DILocation(line: 2394, column: 20, scope: !14639)
!14642 = !DILocation(line: 2394, column: 6, scope: !14635)
!14643 = !DILocalVariable(name: "a_co", scope: !14644, file: !3, line: 2395, type: !1306)
!14644 = distinct !DILexicalBlock(scope: !14639, file: !3, line: 2394, column: 38)
!14645 = !DILocation(line: 2395, column: 14, scope: !14644)
!14646 = !DILocation(line: 2395, column: 44, scope: !14644)
!14647 = !DILocation(line: 2395, column: 58, scope: !14644)
!14648 = !DILocation(line: 2395, column: 61, scope: !14644)
!14649 = !DILocation(line: 2395, column: 63, scope: !14644)
!14650 = !DILocation(line: 2395, column: 21, scope: !14644)
!14651 = !DILocalVariable(name: "b_co", scope: !14644, file: !3, line: 2396, type: !1306)
!14652 = !DILocation(line: 2396, column: 14, scope: !14644)
!14653 = !DILocation(line: 2396, column: 44, scope: !14644)
!14654 = !DILocation(line: 2396, column: 58, scope: !14644)
!14655 = !DILocation(line: 2396, column: 60, scope: !14644)
!14656 = !DILocation(line: 2396, column: 65, scope: !14644)
!14657 = !DILocation(line: 2396, column: 67, scope: !14644)
!14658 = !DILocation(line: 2396, column: 21, scope: !14644)
!14659 = !DILocalVariable(name: "c_co", scope: !14644, file: !3, line: 2397, type: !1306)
!14660 = !DILocation(line: 2397, column: 14, scope: !14644)
!14661 = !DILocation(line: 2397, column: 44, scope: !14644)
!14662 = !DILocation(line: 2397, column: 58, scope: !14644)
!14663 = !DILocation(line: 2397, column: 60, scope: !14644)
!14664 = !DILocation(line: 2397, column: 65, scope: !14644)
!14665 = !DILocation(line: 2397, column: 67, scope: !14644)
!14666 = !DILocation(line: 2397, column: 21, scope: !14644)
!14667 = !DILocalVariable(name: "d_co", scope: !14644, file: !3, line: 2398, type: !1306)
!14668 = !DILocation(line: 2398, column: 14, scope: !14644)
!14669 = !DILocation(line: 2398, column: 44, scope: !14644)
!14670 = !DILocation(line: 2398, column: 58, scope: !14644)
!14671 = !DILocation(line: 2398, column: 61, scope: !14644)
!14672 = !DILocation(line: 2398, column: 63, scope: !14644)
!14673 = !DILocation(line: 2398, column: 21, scope: !14644)
!14674 = !DILocation(line: 2400, column: 11, scope: !14675)
!14675 = distinct !DILexicalBlock(scope: !14644, file: !3, line: 2400, column: 11)
!14676 = !DILocation(line: 2400, column: 11, scope: !14644)
!14677 = !DILocation(line: 2400, column: 29, scope: !14675)
!14678 = !DILocation(line: 2400, column: 33, scope: !14675)
!14679 = !DILocation(line: 2400, column: 15, scope: !14675)
!14680 = !DILocation(line: 2401, column: 11, scope: !14681)
!14681 = distinct !DILexicalBlock(scope: !14644, file: !3, line: 2401, column: 11)
!14682 = !DILocation(line: 2401, column: 11, scope: !14644)
!14683 = !DILocation(line: 2401, column: 23, scope: !14681)
!14684 = !DILocation(line: 2401, column: 55, scope: !14681)
!14685 = !DILocation(line: 2401, column: 67, scope: !14681)
!14686 = !DILocation(line: 2402, column: 11, scope: !14687)
!14687 = distinct !DILexicalBlock(scope: !14644, file: !3, line: 2402, column: 11)
!14688 = !DILocation(line: 2402, column: 11, scope: !14644)
!14689 = !DILocation(line: 2402, column: 26, scope: !14687)
!14690 = !DILocation(line: 2402, column: 33, scope: !14687)
!14691 = !DILocation(line: 2402, column: 40, scope: !14687)
!14692 = !DILocation(line: 2402, column: 15, scope: !14687)
!14693 = !DILocation(line: 2403, column: 19, scope: !14644)
!14694 = !DILocation(line: 2403, column: 7, scope: !14644)
!14695 = !DILocation(line: 2404, column: 19, scope: !14644)
!14696 = !DILocation(line: 2404, column: 7, scope: !14644)
!14697 = !DILocation(line: 2406, column: 11, scope: !14698)
!14698 = distinct !DILexicalBlock(scope: !14644, file: !3, line: 2406, column: 11)
!14699 = !DILocation(line: 2406, column: 11, scope: !14644)
!14700 = !DILocation(line: 2406, column: 29, scope: !14698)
!14701 = !DILocation(line: 2406, column: 33, scope: !14698)
!14702 = !DILocation(line: 2406, column: 15, scope: !14698)
!14703 = !DILocation(line: 2407, column: 11, scope: !14704)
!14704 = distinct !DILexicalBlock(scope: !14644, file: !3, line: 2407, column: 11)
!14705 = !DILocation(line: 2407, column: 11, scope: !14644)
!14706 = !DILocation(line: 2407, column: 23, scope: !14704)
!14707 = !DILocation(line: 2407, column: 55, scope: !14704)
!14708 = !DILocation(line: 2407, column: 67, scope: !14704)
!14709 = !DILocation(line: 2408, column: 11, scope: !14710)
!14710 = distinct !DILexicalBlock(scope: !14644, file: !3, line: 2408, column: 11)
!14711 = !DILocation(line: 2408, column: 11, scope: !14644)
!14712 = !DILocation(line: 2408, column: 26, scope: !14710)
!14713 = !DILocation(line: 2408, column: 34, scope: !14710)
!14714 = !DILocation(line: 2408, column: 42, scope: !14710)
!14715 = !DILocation(line: 2408, column: 15, scope: !14710)
!14716 = !DILocation(line: 2409, column: 19, scope: !14644)
!14717 = !DILocation(line: 2409, column: 7, scope: !14644)
!14718 = !DILocation(line: 2410, column: 19, scope: !14644)
!14719 = !DILocation(line: 2410, column: 7, scope: !14644)
!14720 = !DILocation(line: 2412, column: 11, scope: !14721)
!14721 = distinct !DILexicalBlock(scope: !14644, file: !3, line: 2412, column: 11)
!14722 = !DILocation(line: 2412, column: 11, scope: !14644)
!14723 = !DILocation(line: 2412, column: 29, scope: !14721)
!14724 = !DILocation(line: 2412, column: 33, scope: !14721)
!14725 = !DILocation(line: 2412, column: 15, scope: !14721)
!14726 = !DILocation(line: 2413, column: 11, scope: !14727)
!14727 = distinct !DILexicalBlock(scope: !14644, file: !3, line: 2413, column: 11)
!14728 = !DILocation(line: 2413, column: 11, scope: !14644)
!14729 = !DILocation(line: 2413, column: 23, scope: !14727)
!14730 = !DILocation(line: 2413, column: 55, scope: !14727)
!14731 = !DILocation(line: 2413, column: 67, scope: !14727)
!14732 = !DILocation(line: 2414, column: 11, scope: !14733)
!14733 = distinct !DILexicalBlock(scope: !14644, file: !3, line: 2414, column: 11)
!14734 = !DILocation(line: 2414, column: 11, scope: !14644)
!14735 = !DILocation(line: 2414, column: 26, scope: !14733)
!14736 = !DILocation(line: 2414, column: 34, scope: !14733)
!14737 = !DILocation(line: 2414, column: 42, scope: !14733)
!14738 = !DILocation(line: 2414, column: 15, scope: !14733)
!14739 = !DILocation(line: 2415, column: 19, scope: !14644)
!14740 = !DILocation(line: 2415, column: 7, scope: !14644)
!14741 = !DILocation(line: 2416, column: 19, scope: !14644)
!14742 = !DILocation(line: 2416, column: 7, scope: !14644)
!14743 = !DILocation(line: 2418, column: 11, scope: !14744)
!14744 = distinct !DILexicalBlock(scope: !14644, file: !3, line: 2418, column: 11)
!14745 = !DILocation(line: 2418, column: 11, scope: !14644)
!14746 = !DILocation(line: 2418, column: 29, scope: !14744)
!14747 = !DILocation(line: 2418, column: 33, scope: !14744)
!14748 = !DILocation(line: 2418, column: 15, scope: !14744)
!14749 = !DILocation(line: 2419, column: 11, scope: !14750)
!14750 = distinct !DILexicalBlock(scope: !14644, file: !3, line: 2419, column: 11)
!14751 = !DILocation(line: 2419, column: 11, scope: !14644)
!14752 = !DILocation(line: 2419, column: 23, scope: !14750)
!14753 = !DILocation(line: 2419, column: 55, scope: !14750)
!14754 = !DILocation(line: 2419, column: 67, scope: !14750)
!14755 = !DILocation(line: 2420, column: 11, scope: !14756)
!14756 = distinct !DILexicalBlock(scope: !14644, file: !3, line: 2420, column: 11)
!14757 = !DILocation(line: 2420, column: 11, scope: !14644)
!14758 = !DILocation(line: 2420, column: 26, scope: !14756)
!14759 = !DILocation(line: 2420, column: 33, scope: !14756)
!14760 = !DILocation(line: 2420, column: 40, scope: !14756)
!14761 = !DILocation(line: 2420, column: 15, scope: !14756)
!14762 = !DILocation(line: 2421, column: 19, scope: !14644)
!14763 = !DILocation(line: 2421, column: 7, scope: !14644)
!14764 = !DILocation(line: 2422, column: 19, scope: !14644)
!14765 = !DILocation(line: 2422, column: 7, scope: !14644)
!14766 = !DILocation(line: 2424, column: 11, scope: !14767)
!14767 = distinct !DILexicalBlock(scope: !14644, file: !3, line: 2424, column: 11)
!14768 = !DILocation(line: 2424, column: 11, scope: !14644)
!14769 = !DILocation(line: 2424, column: 17, scope: !14767)
!14770 = !DILocation(line: 2424, column: 15, scope: !14767)
!14771 = !DILocation(line: 2425, column: 11, scope: !14772)
!14772 = distinct !DILexicalBlock(scope: !14644, file: !3, line: 2425, column: 11)
!14773 = !DILocation(line: 2425, column: 11, scope: !14644)
!14774 = !DILocation(line: 2425, column: 33, scope: !14772)
!14775 = !DILocation(line: 2425, column: 23, scope: !14772)
!14776 = !DILocation(line: 2426, column: 11, scope: !14777)
!14777 = distinct !DILexicalBlock(scope: !14644, file: !3, line: 2426, column: 11)
!14778 = !DILocation(line: 2426, column: 11, scope: !14644)
!14779 = !DILocation(line: 2426, column: 18, scope: !14777)
!14780 = !DILocation(line: 2426, column: 15, scope: !14777)
!14781 = !DILocation(line: 2427, column: 9, scope: !14644)
!14782 = !DILocation(line: 2428, column: 6, scope: !14644)
!14783 = !DILocation(line: 2394, column: 34, scope: !14639)
!14784 = !DILocation(line: 2394, column: 6, scope: !14639)
!14785 = distinct !{!14785, !14642, !14786}
!14786 = !DILocation(line: 2428, column: 6, scope: !14635)
!14787 = !DILocation(line: 2429, column: 5, scope: !14636)
!14788 = !DILocation(line: 2393, column: 33, scope: !14630)
!14789 = !DILocation(line: 2393, column: 5, scope: !14630)
!14790 = distinct !{!14790, !14633, !14791}
!14791 = !DILocation(line: 2429, column: 5, scope: !14627)
!14792 = !DILocation(line: 2430, column: 5, scope: !14624)
!14793 = !DILocation(line: 2431, column: 4, scope: !14624)
!14794 = !DILocation(line: 2432, column: 13, scope: !14795)
!14795 = distinct !DILexicalBlock(scope: !14621, file: !3, line: 2432, column: 13)
!14796 = !DILocation(line: 2432, column: 13, scope: !14621)
!14797 = !DILocation(line: 2433, column: 5, scope: !14798)
!14798 = distinct !DILexicalBlock(scope: !14795, file: !3, line: 2432, column: 25)
!14799 = !DILocation(line: 2434, column: 12, scope: !14800)
!14800 = distinct !DILexicalBlock(scope: !14798, file: !3, line: 2434, column: 5)
!14801 = !DILocation(line: 2434, column: 10, scope: !14800)
!14802 = !DILocation(line: 2434, column: 17, scope: !14803)
!14803 = distinct !DILexicalBlock(scope: !14800, file: !3, line: 2434, column: 5)
!14804 = !DILocation(line: 2434, column: 21, scope: !14803)
!14805 = !DILocation(line: 2434, column: 19, scope: !14803)
!14806 = !DILocation(line: 2434, column: 5, scope: !14800)
!14807 = !DILocation(line: 2435, column: 6, scope: !14808)
!14808 = distinct !DILexicalBlock(scope: !14803, file: !3, line: 2434, column: 37)
!14809 = !DILocation(line: 2436, column: 13, scope: !14810)
!14810 = distinct !DILexicalBlock(scope: !14808, file: !3, line: 2436, column: 6)
!14811 = !DILocation(line: 2436, column: 11, scope: !14810)
!14812 = !DILocation(line: 2436, column: 18, scope: !14813)
!14813 = distinct !DILexicalBlock(scope: !14810, file: !3, line: 2436, column: 6)
!14814 = !DILocation(line: 2436, column: 22, scope: !14813)
!14815 = !DILocation(line: 2436, column: 20, scope: !14813)
!14816 = !DILocation(line: 2436, column: 6, scope: !14810)
!14817 = !DILocation(line: 2437, column: 31, scope: !14818)
!14818 = distinct !DILexicalBlock(scope: !14813, file: !3, line: 2436, column: 38)
!14819 = !DILocation(line: 2437, column: 45, scope: !14818)
!14820 = !DILocation(line: 2437, column: 48, scope: !14818)
!14821 = !DILocation(line: 2437, column: 50, scope: !14818)
!14822 = !DILocation(line: 2437, column: 11, scope: !14818)
!14823 = !DILocation(line: 2437, column: 9, scope: !14818)
!14824 = !DILocation(line: 2438, column: 31, scope: !14818)
!14825 = !DILocation(line: 2438, column: 45, scope: !14818)
!14826 = !DILocation(line: 2438, column: 48, scope: !14818)
!14827 = !DILocation(line: 2438, column: 50, scope: !14818)
!14828 = !DILocation(line: 2438, column: 11, scope: !14818)
!14829 = !DILocation(line: 2438, column: 9, scope: !14818)
!14830 = !DILocation(line: 2440, column: 11, scope: !14831)
!14831 = distinct !DILexicalBlock(scope: !14818, file: !3, line: 2440, column: 11)
!14832 = !DILocation(line: 2440, column: 11, scope: !14818)
!14833 = !DILocation(line: 2440, column: 29, scope: !14831)
!14834 = !DILocation(line: 2440, column: 33, scope: !14831)
!14835 = !DILocation(line: 2440, column: 15, scope: !14831)
!14836 = !DILocation(line: 2441, column: 11, scope: !14837)
!14837 = distinct !DILexicalBlock(scope: !14818, file: !3, line: 2441, column: 11)
!14838 = !DILocation(line: 2441, column: 11, scope: !14818)
!14839 = !DILocation(line: 2441, column: 23, scope: !14837)
!14840 = !DILocation(line: 2441, column: 55, scope: !14837)
!14841 = !DILocation(line: 2441, column: 67, scope: !14837)
!14842 = !DILocation(line: 2442, column: 11, scope: !14843)
!14843 = distinct !DILexicalBlock(scope: !14818, file: !3, line: 2442, column: 11)
!14844 = !DILocation(line: 2442, column: 11, scope: !14818)
!14845 = !DILocation(line: 2442, column: 26, scope: !14843)
!14846 = !DILocation(line: 2442, column: 33, scope: !14843)
!14847 = !DILocation(line: 2442, column: 40, scope: !14843)
!14848 = !DILocation(line: 2442, column: 15, scope: !14843)
!14849 = !DILocation(line: 2443, column: 37, scope: !14818)
!14850 = !DILocation(line: 2443, column: 19, scope: !14818)
!14851 = !DILocation(line: 2443, column: 7, scope: !14818)
!14852 = !DILocation(line: 2444, column: 37, scope: !14818)
!14853 = !DILocation(line: 2444, column: 19, scope: !14818)
!14854 = !DILocation(line: 2444, column: 7, scope: !14818)
!14855 = !DILocation(line: 2446, column: 11, scope: !14856)
!14856 = distinct !DILexicalBlock(scope: !14818, file: !3, line: 2446, column: 11)
!14857 = !DILocation(line: 2446, column: 11, scope: !14818)
!14858 = !DILocation(line: 2446, column: 29, scope: !14856)
!14859 = !DILocation(line: 2446, column: 33, scope: !14856)
!14860 = !DILocation(line: 2446, column: 15, scope: !14856)
!14861 = !DILocation(line: 2447, column: 11, scope: !14862)
!14862 = distinct !DILexicalBlock(scope: !14818, file: !3, line: 2447, column: 11)
!14863 = !DILocation(line: 2447, column: 11, scope: !14818)
!14864 = !DILocation(line: 2447, column: 23, scope: !14862)
!14865 = !DILocation(line: 2447, column: 55, scope: !14862)
!14866 = !DILocation(line: 2447, column: 67, scope: !14862)
!14867 = !DILocation(line: 2448, column: 11, scope: !14868)
!14868 = distinct !DILexicalBlock(scope: !14818, file: !3, line: 2448, column: 11)
!14869 = !DILocation(line: 2448, column: 11, scope: !14818)
!14870 = !DILocation(line: 2448, column: 26, scope: !14868)
!14871 = !DILocation(line: 2448, column: 33, scope: !14868)
!14872 = !DILocation(line: 2448, column: 40, scope: !14868)
!14873 = !DILocation(line: 2448, column: 15, scope: !14868)
!14874 = !DILocation(line: 2449, column: 37, scope: !14818)
!14875 = !DILocation(line: 2449, column: 19, scope: !14818)
!14876 = !DILocation(line: 2449, column: 7, scope: !14818)
!14877 = !DILocation(line: 2450, column: 37, scope: !14818)
!14878 = !DILocation(line: 2450, column: 19, scope: !14818)
!14879 = !DILocation(line: 2450, column: 7, scope: !14818)
!14880 = !DILocation(line: 2452, column: 11, scope: !14881)
!14881 = distinct !DILexicalBlock(scope: !14818, file: !3, line: 2452, column: 11)
!14882 = !DILocation(line: 2452, column: 16, scope: !14881)
!14883 = !DILocation(line: 2452, column: 26, scope: !14881)
!14884 = !DILocation(line: 2452, column: 13, scope: !14881)
!14885 = !DILocation(line: 2452, column: 11, scope: !14818)
!14886 = !DILocation(line: 2453, column: 12, scope: !14887)
!14887 = distinct !DILexicalBlock(scope: !14888, file: !3, line: 2453, column: 12)
!14888 = distinct !DILexicalBlock(scope: !14881, file: !3, line: 2452, column: 31)
!14889 = !DILocation(line: 2453, column: 12, scope: !14888)
!14890 = !DILocation(line: 2453, column: 18, scope: !14887)
!14891 = !DILocation(line: 2453, column: 16, scope: !14887)
!14892 = !DILocation(line: 2454, column: 12, scope: !14893)
!14893 = distinct !DILexicalBlock(scope: !14888, file: !3, line: 2454, column: 12)
!14894 = !DILocation(line: 2454, column: 12, scope: !14888)
!14895 = !DILocation(line: 2454, column: 34, scope: !14893)
!14896 = !DILocation(line: 2454, column: 24, scope: !14893)
!14897 = !DILocation(line: 2455, column: 12, scope: !14898)
!14898 = distinct !DILexicalBlock(scope: !14888, file: !3, line: 2455, column: 12)
!14899 = !DILocation(line: 2455, column: 12, scope: !14888)
!14900 = !DILocation(line: 2455, column: 19, scope: !14898)
!14901 = !DILocation(line: 2455, column: 16, scope: !14898)
!14902 = !DILocation(line: 2456, column: 7, scope: !14888)
!14903 = !DILocation(line: 2457, column: 6, scope: !14818)
!14904 = !DILocation(line: 2436, column: 34, scope: !14813)
!14905 = !DILocation(line: 2436, column: 6, scope: !14813)
!14906 = distinct !{!14906, !14816, !14907}
!14907 = !DILocation(line: 2457, column: 6, scope: !14810)
!14908 = !DILocation(line: 2459, column: 30, scope: !14808)
!14909 = !DILocation(line: 2459, column: 44, scope: !14808)
!14910 = !DILocation(line: 2459, column: 47, scope: !14808)
!14911 = !DILocation(line: 2459, column: 49, scope: !14808)
!14912 = !DILocation(line: 2459, column: 10, scope: !14808)
!14913 = !DILocation(line: 2459, column: 8, scope: !14808)
!14914 = !DILocation(line: 2460, column: 30, scope: !14808)
!14915 = !DILocation(line: 2460, column: 44, scope: !14808)
!14916 = !DILocation(line: 2460, column: 47, scope: !14808)
!14917 = !DILocation(line: 2460, column: 49, scope: !14808)
!14918 = !DILocation(line: 2460, column: 10, scope: !14808)
!14919 = !DILocation(line: 2460, column: 8, scope: !14808)
!14920 = !DILocation(line: 2462, column: 10, scope: !14921)
!14921 = distinct !DILexicalBlock(scope: !14808, file: !3, line: 2462, column: 10)
!14922 = !DILocation(line: 2462, column: 10, scope: !14808)
!14923 = !DILocation(line: 2462, column: 28, scope: !14921)
!14924 = !DILocation(line: 2462, column: 32, scope: !14921)
!14925 = !DILocation(line: 2462, column: 14, scope: !14921)
!14926 = !DILocation(line: 2463, column: 10, scope: !14927)
!14927 = distinct !DILexicalBlock(scope: !14808, file: !3, line: 2463, column: 10)
!14928 = !DILocation(line: 2463, column: 10, scope: !14808)
!14929 = !DILocation(line: 2463, column: 22, scope: !14927)
!14930 = !DILocation(line: 2463, column: 54, scope: !14927)
!14931 = !DILocation(line: 2463, column: 66, scope: !14927)
!14932 = !DILocation(line: 2464, column: 10, scope: !14933)
!14933 = distinct !DILexicalBlock(scope: !14808, file: !3, line: 2464, column: 10)
!14934 = !DILocation(line: 2464, column: 10, scope: !14808)
!14935 = !DILocation(line: 2464, column: 25, scope: !14933)
!14936 = !DILocation(line: 2464, column: 33, scope: !14933)
!14937 = !DILocation(line: 2464, column: 41, scope: !14933)
!14938 = !DILocation(line: 2464, column: 14, scope: !14933)
!14939 = !DILocation(line: 2465, column: 36, scope: !14808)
!14940 = !DILocation(line: 2465, column: 18, scope: !14808)
!14941 = !DILocation(line: 2465, column: 6, scope: !14808)
!14942 = !DILocation(line: 2466, column: 36, scope: !14808)
!14943 = !DILocation(line: 2466, column: 18, scope: !14808)
!14944 = !DILocation(line: 2466, column: 6, scope: !14808)
!14945 = !DILocation(line: 2468, column: 10, scope: !14946)
!14946 = distinct !DILexicalBlock(scope: !14808, file: !3, line: 2468, column: 10)
!14947 = !DILocation(line: 2468, column: 10, scope: !14808)
!14948 = !DILocation(line: 2468, column: 28, scope: !14946)
!14949 = !DILocation(line: 2468, column: 32, scope: !14946)
!14950 = !DILocation(line: 2468, column: 14, scope: !14946)
!14951 = !DILocation(line: 2469, column: 10, scope: !14952)
!14952 = distinct !DILexicalBlock(scope: !14808, file: !3, line: 2469, column: 10)
!14953 = !DILocation(line: 2469, column: 10, scope: !14808)
!14954 = !DILocation(line: 2469, column: 22, scope: !14952)
!14955 = !DILocation(line: 2469, column: 54, scope: !14952)
!14956 = !DILocation(line: 2469, column: 66, scope: !14952)
!14957 = !DILocation(line: 2470, column: 10, scope: !14958)
!14958 = distinct !DILexicalBlock(scope: !14808, file: !3, line: 2470, column: 10)
!14959 = !DILocation(line: 2470, column: 10, scope: !14808)
!14960 = !DILocation(line: 2470, column: 25, scope: !14958)
!14961 = !DILocation(line: 2470, column: 33, scope: !14958)
!14962 = !DILocation(line: 2470, column: 41, scope: !14958)
!14963 = !DILocation(line: 2470, column: 14, scope: !14958)
!14964 = !DILocation(line: 2471, column: 36, scope: !14808)
!14965 = !DILocation(line: 2471, column: 18, scope: !14808)
!14966 = !DILocation(line: 2471, column: 6, scope: !14808)
!14967 = !DILocation(line: 2472, column: 36, scope: !14808)
!14968 = !DILocation(line: 2472, column: 18, scope: !14808)
!14969 = !DILocation(line: 2472, column: 6, scope: !14808)
!14970 = !DILocation(line: 2474, column: 10, scope: !14971)
!14971 = distinct !DILexicalBlock(scope: !14808, file: !3, line: 2474, column: 10)
!14972 = !DILocation(line: 2474, column: 10, scope: !14808)
!14973 = !DILocation(line: 2474, column: 16, scope: !14971)
!14974 = !DILocation(line: 2474, column: 14, scope: !14971)
!14975 = !DILocation(line: 2475, column: 10, scope: !14976)
!14976 = distinct !DILexicalBlock(scope: !14808, file: !3, line: 2475, column: 10)
!14977 = !DILocation(line: 2475, column: 10, scope: !14808)
!14978 = !DILocation(line: 2475, column: 32, scope: !14976)
!14979 = !DILocation(line: 2475, column: 22, scope: !14976)
!14980 = !DILocation(line: 2476, column: 10, scope: !14981)
!14981 = distinct !DILexicalBlock(scope: !14808, file: !3, line: 2476, column: 10)
!14982 = !DILocation(line: 2476, column: 10, scope: !14808)
!14983 = !DILocation(line: 2476, column: 17, scope: !14981)
!14984 = !DILocation(line: 2476, column: 14, scope: !14981)
!14985 = !DILocation(line: 2478, column: 6, scope: !14808)
!14986 = !DILocation(line: 2479, column: 5, scope: !14808)
!14987 = !DILocation(line: 2434, column: 33, scope: !14803)
!14988 = !DILocation(line: 2434, column: 5, scope: !14803)
!14989 = distinct !{!14989, !14806, !14990}
!14990 = !DILocation(line: 2479, column: 5, scope: !14800)
!14991 = !DILocation(line: 2480, column: 4, scope: !14798)
!14992 = !DILocation(line: 2482, column: 19, scope: !14993)
!14993 = distinct !DILexicalBlock(scope: !14795, file: !3, line: 2481, column: 9)
!14994 = !DILocation(line: 2482, column: 18, scope: !14993)
!14995 = !DILocation(line: 2482, column: 5, scope: !14993)
!14996 = !DILocation(line: 2483, column: 5, scope: !14993)
!14997 = !DILocation(line: 2484, column: 12, scope: !14998)
!14998 = distinct !DILexicalBlock(scope: !14993, file: !3, line: 2484, column: 5)
!14999 = !DILocation(line: 2484, column: 10, scope: !14998)
!15000 = !DILocation(line: 2484, column: 17, scope: !15001)
!15001 = distinct !DILexicalBlock(scope: !14998, file: !3, line: 2484, column: 5)
!15002 = !DILocation(line: 2484, column: 21, scope: !15001)
!15003 = !DILocation(line: 2484, column: 19, scope: !15001)
!15004 = !DILocation(line: 2484, column: 5, scope: !14998)
!15005 = !DILocation(line: 2485, column: 13, scope: !15006)
!15006 = distinct !DILexicalBlock(scope: !15007, file: !3, line: 2485, column: 6)
!15007 = distinct !DILexicalBlock(scope: !15001, file: !3, line: 2484, column: 37)
!15008 = !DILocation(line: 2485, column: 11, scope: !15006)
!15009 = !DILocation(line: 2485, column: 18, scope: !15010)
!15010 = distinct !DILexicalBlock(scope: !15006, file: !3, line: 2485, column: 6)
!15011 = !DILocation(line: 2485, column: 22, scope: !15010)
!15012 = !DILocation(line: 2485, column: 20, scope: !15010)
!15013 = !DILocation(line: 2485, column: 6, scope: !15006)
!15014 = !DILocalVariable(name: "a_co", scope: !15015, file: !3, line: 2486, type: !1306)
!15015 = distinct !DILexicalBlock(scope: !15010, file: !3, line: 2485, column: 38)
!15016 = !DILocation(line: 2486, column: 14, scope: !15015)
!15017 = !DILocation(line: 2486, column: 44, scope: !15015)
!15018 = !DILocation(line: 2486, column: 58, scope: !15015)
!15019 = !DILocation(line: 2486, column: 61, scope: !15015)
!15020 = !DILocation(line: 2486, column: 63, scope: !15015)
!15021 = !DILocation(line: 2486, column: 21, scope: !15015)
!15022 = !DILocalVariable(name: "b_co", scope: !15015, file: !3, line: 2487, type: !1306)
!15023 = !DILocation(line: 2487, column: 14, scope: !15015)
!15024 = !DILocation(line: 2487, column: 44, scope: !15015)
!15025 = !DILocation(line: 2487, column: 58, scope: !15015)
!15026 = !DILocation(line: 2487, column: 60, scope: !15015)
!15027 = !DILocation(line: 2487, column: 65, scope: !15015)
!15028 = !DILocation(line: 2487, column: 67, scope: !15015)
!15029 = !DILocation(line: 2487, column: 21, scope: !15015)
!15030 = !DILocalVariable(name: "c_co", scope: !15015, file: !3, line: 2488, type: !1306)
!15031 = !DILocation(line: 2488, column: 14, scope: !15015)
!15032 = !DILocation(line: 2488, column: 44, scope: !15015)
!15033 = !DILocation(line: 2488, column: 58, scope: !15015)
!15034 = !DILocation(line: 2488, column: 60, scope: !15015)
!15035 = !DILocation(line: 2488, column: 65, scope: !15015)
!15036 = !DILocation(line: 2488, column: 67, scope: !15015)
!15037 = !DILocation(line: 2488, column: 21, scope: !15015)
!15038 = !DILocalVariable(name: "d_co", scope: !15015, file: !3, line: 2489, type: !1306)
!15039 = !DILocation(line: 2489, column: 14, scope: !15015)
!15040 = !DILocation(line: 2489, column: 44, scope: !15015)
!15041 = !DILocation(line: 2489, column: 58, scope: !15015)
!15042 = !DILocation(line: 2489, column: 61, scope: !15015)
!15043 = !DILocation(line: 2489, column: 63, scope: !15015)
!15044 = !DILocation(line: 2489, column: 21, scope: !15015)
!15045 = !DILocation(line: 2491, column: 26, scope: !15015)
!15046 = !DILocation(line: 2491, column: 32, scope: !15015)
!15047 = !DILocation(line: 2491, column: 38, scope: !15015)
!15048 = !DILocation(line: 2491, column: 44, scope: !15015)
!15049 = !DILocation(line: 2491, column: 7, scope: !15015)
!15050 = !DILocation(line: 2493, column: 11, scope: !15051)
!15051 = distinct !DILexicalBlock(scope: !15015, file: !3, line: 2493, column: 11)
!15052 = !DILocation(line: 2493, column: 11, scope: !15015)
!15053 = !DILocation(line: 2493, column: 29, scope: !15051)
!15054 = !DILocation(line: 2493, column: 33, scope: !15051)
!15055 = !DILocation(line: 2493, column: 15, scope: !15051)
!15056 = !DILocation(line: 2494, column: 11, scope: !15057)
!15057 = distinct !DILexicalBlock(scope: !15015, file: !3, line: 2494, column: 11)
!15058 = !DILocation(line: 2494, column: 11, scope: !15015)
!15059 = !DILocation(line: 2494, column: 23, scope: !15057)
!15060 = !DILocation(line: 2494, column: 55, scope: !15057)
!15061 = !DILocation(line: 2494, column: 67, scope: !15057)
!15062 = !DILocation(line: 2495, column: 11, scope: !15063)
!15063 = distinct !DILexicalBlock(scope: !15015, file: !3, line: 2495, column: 11)
!15064 = !DILocation(line: 2495, column: 11, scope: !15015)
!15065 = !DILocation(line: 2495, column: 26, scope: !15063)
!15066 = !DILocation(line: 2495, column: 33, scope: !15063)
!15067 = !DILocation(line: 2495, column: 40, scope: !15063)
!15068 = !DILocation(line: 2495, column: 15, scope: !15063)
!15069 = !DILocation(line: 2496, column: 19, scope: !15015)
!15070 = !DILocation(line: 2496, column: 7, scope: !15015)
!15071 = !DILocation(line: 2498, column: 11, scope: !15072)
!15072 = distinct !DILexicalBlock(scope: !15015, file: !3, line: 2498, column: 11)
!15073 = !DILocation(line: 2498, column: 11, scope: !15015)
!15074 = !DILocation(line: 2498, column: 29, scope: !15072)
!15075 = !DILocation(line: 2498, column: 33, scope: !15072)
!15076 = !DILocation(line: 2498, column: 15, scope: !15072)
!15077 = !DILocation(line: 2499, column: 11, scope: !15078)
!15078 = distinct !DILexicalBlock(scope: !15015, file: !3, line: 2499, column: 11)
!15079 = !DILocation(line: 2499, column: 11, scope: !15015)
!15080 = !DILocation(line: 2499, column: 23, scope: !15078)
!15081 = !DILocation(line: 2499, column: 55, scope: !15078)
!15082 = !DILocation(line: 2499, column: 67, scope: !15078)
!15083 = !DILocation(line: 2500, column: 11, scope: !15084)
!15084 = distinct !DILexicalBlock(scope: !15015, file: !3, line: 2500, column: 11)
!15085 = !DILocation(line: 2500, column: 11, scope: !15015)
!15086 = !DILocation(line: 2500, column: 26, scope: !15084)
!15087 = !DILocation(line: 2500, column: 34, scope: !15084)
!15088 = !DILocation(line: 2500, column: 42, scope: !15084)
!15089 = !DILocation(line: 2500, column: 15, scope: !15084)
!15090 = !DILocation(line: 2501, column: 19, scope: !15015)
!15091 = !DILocation(line: 2501, column: 7, scope: !15015)
!15092 = !DILocation(line: 2503, column: 11, scope: !15093)
!15093 = distinct !DILexicalBlock(scope: !15015, file: !3, line: 2503, column: 11)
!15094 = !DILocation(line: 2503, column: 11, scope: !15015)
!15095 = !DILocation(line: 2503, column: 29, scope: !15093)
!15096 = !DILocation(line: 2503, column: 33, scope: !15093)
!15097 = !DILocation(line: 2503, column: 15, scope: !15093)
!15098 = !DILocation(line: 2504, column: 11, scope: !15099)
!15099 = distinct !DILexicalBlock(scope: !15015, file: !3, line: 2504, column: 11)
!15100 = !DILocation(line: 2504, column: 11, scope: !15015)
!15101 = !DILocation(line: 2504, column: 23, scope: !15099)
!15102 = !DILocation(line: 2504, column: 55, scope: !15099)
!15103 = !DILocation(line: 2504, column: 67, scope: !15099)
!15104 = !DILocation(line: 2505, column: 11, scope: !15105)
!15105 = distinct !DILexicalBlock(scope: !15015, file: !3, line: 2505, column: 11)
!15106 = !DILocation(line: 2505, column: 11, scope: !15015)
!15107 = !DILocation(line: 2505, column: 26, scope: !15105)
!15108 = !DILocation(line: 2505, column: 34, scope: !15105)
!15109 = !DILocation(line: 2505, column: 42, scope: !15105)
!15110 = !DILocation(line: 2505, column: 15, scope: !15105)
!15111 = !DILocation(line: 2506, column: 19, scope: !15015)
!15112 = !DILocation(line: 2506, column: 7, scope: !15015)
!15113 = !DILocation(line: 2508, column: 11, scope: !15114)
!15114 = distinct !DILexicalBlock(scope: !15015, file: !3, line: 2508, column: 11)
!15115 = !DILocation(line: 2508, column: 11, scope: !15015)
!15116 = !DILocation(line: 2508, column: 29, scope: !15114)
!15117 = !DILocation(line: 2508, column: 33, scope: !15114)
!15118 = !DILocation(line: 2508, column: 15, scope: !15114)
!15119 = !DILocation(line: 2509, column: 11, scope: !15120)
!15120 = distinct !DILexicalBlock(scope: !15015, file: !3, line: 2509, column: 11)
!15121 = !DILocation(line: 2509, column: 11, scope: !15015)
!15122 = !DILocation(line: 2509, column: 23, scope: !15120)
!15123 = !DILocation(line: 2509, column: 55, scope: !15120)
!15124 = !DILocation(line: 2509, column: 67, scope: !15120)
!15125 = !DILocation(line: 2510, column: 11, scope: !15126)
!15126 = distinct !DILexicalBlock(scope: !15015, file: !3, line: 2510, column: 11)
!15127 = !DILocation(line: 2510, column: 11, scope: !15015)
!15128 = !DILocation(line: 2510, column: 26, scope: !15126)
!15129 = !DILocation(line: 2510, column: 33, scope: !15126)
!15130 = !DILocation(line: 2510, column: 40, scope: !15126)
!15131 = !DILocation(line: 2510, column: 15, scope: !15126)
!15132 = !DILocation(line: 2511, column: 19, scope: !15015)
!15133 = !DILocation(line: 2511, column: 7, scope: !15015)
!15134 = !DILocation(line: 2513, column: 11, scope: !15135)
!15135 = distinct !DILexicalBlock(scope: !15015, file: !3, line: 2513, column: 11)
!15136 = !DILocation(line: 2513, column: 11, scope: !15015)
!15137 = !DILocation(line: 2513, column: 17, scope: !15135)
!15138 = !DILocation(line: 2513, column: 15, scope: !15135)
!15139 = !DILocation(line: 2514, column: 11, scope: !15140)
!15140 = distinct !DILexicalBlock(scope: !15015, file: !3, line: 2514, column: 11)
!15141 = !DILocation(line: 2514, column: 11, scope: !15015)
!15142 = !DILocation(line: 2514, column: 33, scope: !15140)
!15143 = !DILocation(line: 2514, column: 23, scope: !15140)
!15144 = !DILocation(line: 2515, column: 11, scope: !15145)
!15145 = distinct !DILexicalBlock(scope: !15015, file: !3, line: 2515, column: 11)
!15146 = !DILocation(line: 2515, column: 11, scope: !15015)
!15147 = !DILocation(line: 2515, column: 18, scope: !15145)
!15148 = !DILocation(line: 2515, column: 15, scope: !15145)
!15149 = !DILocation(line: 2516, column: 6, scope: !15015)
!15150 = !DILocation(line: 2485, column: 34, scope: !15010)
!15151 = !DILocation(line: 2485, column: 6, scope: !15010)
!15152 = distinct !{!15152, !15013, !15153}
!15153 = !DILocation(line: 2516, column: 6, scope: !15006)
!15154 = !DILocation(line: 2517, column: 5, scope: !15007)
!15155 = !DILocation(line: 2484, column: 33, scope: !15001)
!15156 = !DILocation(line: 2484, column: 5, scope: !15001)
!15157 = distinct !{!15157, !15004, !15158}
!15158 = !DILocation(line: 2517, column: 5, scope: !14998)
!15159 = !DILocation(line: 2518, column: 5, scope: !14993)
!15160 = !DILocation(line: 2520, column: 3, scope: !14610)
!15161 = !DILocation(line: 2386, column: 30, scope: !14605)
!15162 = !DILocation(line: 2386, column: 3, scope: !14605)
!15163 = distinct !{!15163, !14608, !15164}
!15164 = !DILocation(line: 2520, column: 3, scope: !14602)
!15165 = !DILocation(line: 2521, column: 2, scope: !14430)
!15166 = !DILocation(line: 2330, column: 28, scope: !14425)
!15167 = !DILocation(line: 2330, column: 2, scope: !14425)
!15168 = distinct !{!15168, !14428, !15169}
!15169 = !DILocation(line: 2521, column: 2, scope: !14422)
!15170 = !DILocation(line: 2522, column: 1, scope: !14314)
!15171 = distinct !DISubprogram(name: "ccgdm_draw_attrib_vertex", scope: !3, file: !3, line: 1891, type: !15172, scopeLine: 1892, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!15172 = !DISubroutineType(types: !15173)
!15173 = !{null, !15174, !27, !27, !27}
!15174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !11111, size: 64)
!15175 = !DILocalVariable(name: "attribs", arg: 1, scope: !15171, file: !3, line: 1891, type: !15174)
!15176 = !DILocation(line: 1891, column: 55, scope: !15171)
!15177 = !DILocalVariable(name: "a", arg: 2, scope: !15171, file: !3, line: 1891, type: !27)
!15178 = !DILocation(line: 1891, column: 68, scope: !15171)
!15179 = !DILocalVariable(name: "index", arg: 3, scope: !15171, file: !3, line: 1891, type: !27)
!15180 = !DILocation(line: 1891, column: 75, scope: !15171)
!15181 = !DILocalVariable(name: "vert", arg: 4, scope: !15171, file: !3, line: 1891, type: !27)
!15182 = !DILocation(line: 1891, column: 86, scope: !15171)
!15183 = !DILocalVariable(name: "zero", scope: !15171, file: !3, line: 1893, type: !15184)
!15184 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1864, size: 128, elements: !287)
!15185 = !DILocation(line: 1893, column: 14, scope: !15171)
!15186 = !DILocalVariable(name: "b", scope: !15171, file: !3, line: 1894, type: !27)
!15187 = !DILocation(line: 1894, column: 6, scope: !15171)
!15188 = !DILocation(line: 1897, column: 6, scope: !15189)
!15189 = distinct !DILexicalBlock(scope: !15171, file: !3, line: 1897, column: 6)
!15190 = !DILocation(line: 1897, column: 15, scope: !15189)
!15191 = !DILocation(line: 1897, column: 6, scope: !15171)
!15192 = !DILocalVariable(name: "array", scope: !15193, file: !3, line: 1898, type: !1301)
!15193 = distinct !DILexicalBlock(scope: !15189, file: !3, line: 1897, column: 24)
!15194 = !DILocation(line: 1898, column: 21, scope: !15193)
!15195 = !DILocation(line: 1898, column: 33, scope: !15193)
!15196 = !DILocation(line: 1898, column: 42, scope: !15193)
!15197 = !DILocation(line: 1898, column: 47, scope: !15193)
!15198 = !DILocalVariable(name: "orco", scope: !15193, file: !3, line: 1899, type: !2042)
!15199 = !DILocation(line: 1899, column: 16, scope: !15193)
!15200 = !DILocation(line: 1899, column: 24, scope: !15193)
!15201 = !DILocation(line: 1899, column: 23, scope: !15193)
!15202 = !DILocation(line: 1899, column: 33, scope: !15193)
!15203 = !DILocation(line: 1899, column: 39, scope: !15193)
!15204 = !DILocation(line: 1899, column: 48, scope: !15193)
!15205 = !DILocation(line: 1901, column: 7, scope: !15206)
!15206 = distinct !DILexicalBlock(scope: !15193, file: !3, line: 1901, column: 7)
!15207 = !DILocation(line: 1901, column: 16, scope: !15206)
!15208 = !DILocation(line: 1901, column: 21, scope: !15206)
!15209 = !DILocation(line: 1901, column: 7, scope: !15193)
!15210 = !DILocation(line: 1902, column: 18, scope: !15206)
!15211 = !DILocation(line: 1902, column: 4, scope: !15206)
!15212 = !DILocation(line: 1904, column: 4, scope: !15206)
!15213 = !DILocation(line: 1904, column: 25, scope: !15206)
!15214 = !DILocation(line: 1904, column: 34, scope: !15206)
!15215 = !DILocation(line: 1904, column: 39, scope: !15206)
!15216 = !DILocation(line: 1904, column: 49, scope: !15206)
!15217 = !DILocation(line: 1905, column: 2, scope: !15193)
!15218 = !DILocation(line: 1908, column: 9, scope: !15219)
!15219 = distinct !DILexicalBlock(scope: !15171, file: !3, line: 1908, column: 2)
!15220 = !DILocation(line: 1908, column: 7, scope: !15219)
!15221 = !DILocation(line: 1908, column: 14, scope: !15222)
!15222 = distinct !DILexicalBlock(scope: !15219, file: !3, line: 1908, column: 2)
!15223 = !DILocation(line: 1908, column: 18, scope: !15222)
!15224 = !DILocation(line: 1908, column: 27, scope: !15222)
!15225 = !DILocation(line: 1908, column: 16, scope: !15222)
!15226 = !DILocation(line: 1908, column: 2, scope: !15219)
!15227 = !DILocalVariable(name: "uv", scope: !15228, file: !3, line: 1909, type: !2042)
!15228 = distinct !DILexicalBlock(scope: !15222, file: !3, line: 1908, column: 42)
!15229 = !DILocation(line: 1909, column: 16, scope: !15228)
!15230 = !DILocation(line: 1911, column: 7, scope: !15231)
!15231 = distinct !DILexicalBlock(scope: !15228, file: !3, line: 1911, column: 7)
!15232 = !DILocation(line: 1911, column: 16, scope: !15231)
!15233 = !DILocation(line: 1911, column: 22, scope: !15231)
!15234 = !DILocation(line: 1911, column: 25, scope: !15231)
!15235 = !DILocation(line: 1911, column: 7, scope: !15228)
!15236 = !DILocalVariable(name: "tf", scope: !15237, file: !3, line: 1912, type: !12129)
!15237 = distinct !DILexicalBlock(scope: !15231, file: !3, line: 1911, column: 32)
!15238 = !DILocation(line: 1912, column: 12, scope: !15237)
!15239 = !DILocation(line: 1912, column: 18, scope: !15237)
!15240 = !DILocation(line: 1912, column: 27, scope: !15237)
!15241 = !DILocation(line: 1912, column: 33, scope: !15237)
!15242 = !DILocation(line: 1912, column: 36, scope: !15237)
!15243 = !DILocation(line: 1912, column: 42, scope: !15237)
!15244 = !DILocation(line: 1913, column: 9, scope: !15237)
!15245 = !DILocation(line: 1913, column: 13, scope: !15237)
!15246 = !DILocation(line: 1913, column: 16, scope: !15237)
!15247 = !DILocation(line: 1913, column: 7, scope: !15237)
!15248 = !DILocation(line: 1914, column: 3, scope: !15237)
!15249 = !DILocation(line: 1916, column: 9, scope: !15250)
!15250 = distinct !DILexicalBlock(scope: !15231, file: !3, line: 1915, column: 8)
!15251 = !DILocation(line: 1916, column: 7, scope: !15250)
!15252 = !DILocation(line: 1919, column: 7, scope: !15253)
!15253 = distinct !DILexicalBlock(scope: !15228, file: !3, line: 1919, column: 7)
!15254 = !DILocation(line: 1919, column: 16, scope: !15253)
!15255 = !DILocation(line: 1919, column: 22, scope: !15253)
!15256 = !DILocation(line: 1919, column: 25, scope: !15253)
!15257 = !DILocation(line: 1919, column: 7, scope: !15228)
!15258 = !DILocation(line: 1920, column: 18, scope: !15253)
!15259 = !DILocation(line: 1920, column: 4, scope: !15253)
!15260 = !DILocation(line: 1922, column: 4, scope: !15253)
!15261 = !DILocation(line: 1922, column: 25, scope: !15253)
!15262 = !DILocation(line: 1922, column: 34, scope: !15253)
!15263 = !DILocation(line: 1922, column: 40, scope: !15253)
!15264 = !DILocation(line: 1922, column: 43, scope: !15253)
!15265 = !DILocation(line: 1922, column: 53, scope: !15253)
!15266 = !DILocation(line: 1923, column: 2, scope: !15228)
!15267 = !DILocation(line: 1908, column: 38, scope: !15222)
!15268 = !DILocation(line: 1908, column: 2, scope: !15222)
!15269 = distinct !{!15269, !15226, !15270}
!15270 = !DILocation(line: 1923, column: 2, scope: !15219)
!15271 = !DILocation(line: 1926, column: 9, scope: !15272)
!15272 = distinct !DILexicalBlock(scope: !15171, file: !3, line: 1926, column: 2)
!15273 = !DILocation(line: 1926, column: 7, scope: !15272)
!15274 = !DILocation(line: 1926, column: 14, scope: !15275)
!15275 = distinct !DILexicalBlock(scope: !15272, file: !3, line: 1926, column: 2)
!15276 = !DILocation(line: 1926, column: 18, scope: !15275)
!15277 = !DILocation(line: 1926, column: 27, scope: !15275)
!15278 = !DILocation(line: 1926, column: 16, scope: !15275)
!15279 = !DILocation(line: 1926, column: 2, scope: !15272)
!15280 = !DILocalVariable(name: "col", scope: !15281, file: !3, line: 1927, type: !15282)
!15281 = distinct !DILexicalBlock(scope: !15275, file: !3, line: 1926, column: 41)
!15282 = !DICompositeType(tag: DW_TAG_array_type, baseType: !15283, size: 32, elements: !287)
!15283 = !DIDerivedType(tag: DW_TAG_typedef, name: "GLubyte", file: !15284, line: 278, baseType: !673)
!15284 = !DIFile(filename: "blender/extern/glew/include/GL/glew.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!15285 = !DILocation(line: 1927, column: 11, scope: !15281)
!15286 = !DILocation(line: 1929, column: 7, scope: !15287)
!15287 = distinct !DILexicalBlock(scope: !15281, file: !3, line: 1929, column: 7)
!15288 = !DILocation(line: 1929, column: 16, scope: !15287)
!15289 = !DILocation(line: 1929, column: 21, scope: !15287)
!15290 = !DILocation(line: 1929, column: 24, scope: !15287)
!15291 = !DILocation(line: 1929, column: 7, scope: !15281)
!15292 = !DILocalVariable(name: "cp", scope: !15293, file: !3, line: 1930, type: !10496)
!15293 = distinct !DILexicalBlock(scope: !15287, file: !3, line: 1929, column: 31)
!15294 = !DILocation(line: 1930, column: 10, scope: !15293)
!15295 = !DILocation(line: 1930, column: 16, scope: !15293)
!15296 = !DILocation(line: 1930, column: 25, scope: !15293)
!15297 = !DILocation(line: 1930, column: 30, scope: !15293)
!15298 = !DILocation(line: 1930, column: 33, scope: !15293)
!15299 = !DILocation(line: 1930, column: 39, scope: !15293)
!15300 = !DILocation(line: 1930, column: 41, scope: !15293)
!15301 = !DILocation(line: 1930, column: 47, scope: !15293)
!15302 = !DILocation(line: 1930, column: 45, scope: !15293)
!15303 = !DILocation(line: 1931, column: 13, scope: !15293)
!15304 = !DILocation(line: 1931, column: 17, scope: !15293)
!15305 = !DILocation(line: 1931, column: 4, scope: !15293)
!15306 = !DILocation(line: 1931, column: 11, scope: !15293)
!15307 = !DILocation(line: 1931, column: 29, scope: !15293)
!15308 = !DILocation(line: 1931, column: 33, scope: !15293)
!15309 = !DILocation(line: 1931, column: 20, scope: !15293)
!15310 = !DILocation(line: 1931, column: 27, scope: !15293)
!15311 = !DILocation(line: 1931, column: 45, scope: !15293)
!15312 = !DILocation(line: 1931, column: 49, scope: !15293)
!15313 = !DILocation(line: 1931, column: 36, scope: !15293)
!15314 = !DILocation(line: 1931, column: 43, scope: !15293)
!15315 = !DILocation(line: 1931, column: 61, scope: !15293)
!15316 = !DILocation(line: 1931, column: 65, scope: !15293)
!15317 = !DILocation(line: 1931, column: 52, scope: !15293)
!15318 = !DILocation(line: 1931, column: 59, scope: !15293)
!15319 = !DILocation(line: 1932, column: 3, scope: !15293)
!15320 = !DILocation(line: 1934, column: 4, scope: !15321)
!15321 = distinct !DILexicalBlock(scope: !15287, file: !3, line: 1933, column: 8)
!15322 = !DILocation(line: 1934, column: 11, scope: !15321)
!15323 = !DILocation(line: 1934, column: 16, scope: !15321)
!15324 = !DILocation(line: 1934, column: 23, scope: !15321)
!15325 = !DILocation(line: 1934, column: 28, scope: !15321)
!15326 = !DILocation(line: 1934, column: 35, scope: !15321)
!15327 = !DILocation(line: 1934, column: 40, scope: !15321)
!15328 = !DILocation(line: 1934, column: 47, scope: !15321)
!15329 = !DILocation(line: 1937, column: 3, scope: !15281)
!15330 = !DILocation(line: 1937, column: 25, scope: !15281)
!15331 = !DILocation(line: 1937, column: 34, scope: !15281)
!15332 = !DILocation(line: 1937, column: 39, scope: !15281)
!15333 = !DILocation(line: 1937, column: 42, scope: !15281)
!15334 = !DILocation(line: 1937, column: 52, scope: !15281)
!15335 = !DILocation(line: 1938, column: 2, scope: !15281)
!15336 = !DILocation(line: 1926, column: 37, scope: !15275)
!15337 = !DILocation(line: 1926, column: 2, scope: !15275)
!15338 = distinct !{!15338, !15279, !15339}
!15339 = !DILocation(line: 1938, column: 2, scope: !15272)
!15340 = !DILocation(line: 1941, column: 6, scope: !15341)
!15341 = distinct !DILexicalBlock(scope: !15171, file: !3, line: 1941, column: 6)
!15342 = !DILocation(line: 1941, column: 15, scope: !15341)
!15343 = !DILocation(line: 1941, column: 6, scope: !15171)
!15344 = !DILocalVariable(name: "array", scope: !15345, file: !3, line: 1942, type: !2101)
!15345 = distinct !DILexicalBlock(scope: !15341, file: !3, line: 1941, column: 24)
!15346 = !DILocation(line: 1942, column: 21, scope: !15345)
!15347 = !DILocation(line: 1942, column: 33, scope: !15345)
!15348 = !DILocation(line: 1942, column: 42, scope: !15345)
!15349 = !DILocation(line: 1942, column: 47, scope: !15345)
!15350 = !DILocalVariable(name: "tang", scope: !15345, file: !3, line: 1943, type: !2042)
!15351 = !DILocation(line: 1943, column: 16, scope: !15345)
!15352 = !DILocation(line: 1943, column: 24, scope: !15345)
!15353 = !DILocation(line: 1943, column: 23, scope: !15345)
!15354 = !DILocation(line: 1943, column: 33, scope: !15345)
!15355 = !DILocation(line: 1943, column: 39, scope: !15345)
!15356 = !DILocation(line: 1943, column: 41, scope: !15345)
!15357 = !DILocation(line: 1943, column: 47, scope: !15345)
!15358 = !DILocation(line: 1943, column: 45, scope: !15345)
!15359 = !DILocation(line: 1943, column: 55, scope: !15345)
!15360 = !DILocation(line: 1945, column: 3, scope: !15345)
!15361 = !DILocation(line: 1945, column: 24, scope: !15345)
!15362 = !DILocation(line: 1945, column: 33, scope: !15345)
!15363 = !DILocation(line: 1945, column: 38, scope: !15345)
!15364 = !DILocation(line: 1945, column: 48, scope: !15345)
!15365 = !DILocation(line: 1946, column: 2, scope: !15345)
!15366 = !DILocation(line: 1947, column: 1, scope: !15171)
!15367 = distinct !DISubprogram(name: "copy_v2_v2", scope: !5528, file: !5528, line: 58, type: !5566, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!15368 = !DILocalVariable(name: "r", arg: 1, scope: !15367, file: !5528, line: 58, type: !1306)
!15369 = !DILocation(line: 58, column: 31, scope: !15367)
!15370 = !DILocalVariable(name: "a", arg: 2, scope: !15367, file: !5528, line: 58, type: !2042)
!15371 = !DILocation(line: 58, column: 49, scope: !15367)
!15372 = !DILocation(line: 60, column: 9, scope: !15367)
!15373 = !DILocation(line: 60, column: 2, scope: !15367)
!15374 = !DILocation(line: 60, column: 7, scope: !15367)
!15375 = !DILocation(line: 61, column: 9, scope: !15367)
!15376 = !DILocation(line: 61, column: 2, scope: !15367)
!15377 = !DILocation(line: 61, column: 7, scope: !15367)
!15378 = !DILocation(line: 62, column: 1, scope: !15367)
!15379 = distinct !DISubprogram(name: "ss_sync_from_uv", scope: !3, file: !3, line: 287, type: !15380, scopeLine: 288, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!15380 = !DISubroutineType(types: !15381)
!15381 = !{!27, !6, !6, !11, !12961}
!15382 = !DILocalVariable(name: "ss", arg: 1, scope: !15379, file: !3, line: 287, type: !6)
!15383 = !DILocation(line: 287, column: 40, scope: !15379)
!15384 = !DILocalVariable(name: "origss", arg: 2, scope: !15379, file: !3, line: 287, type: !6)
!15385 = !DILocation(line: 287, column: 56, scope: !15379)
!15386 = !DILocalVariable(name: "dm", arg: 3, scope: !15379, file: !3, line: 287, type: !11)
!15387 = !DILocation(line: 287, column: 77, scope: !15379)
!15388 = !DILocalVariable(name: "mloopuv", arg: 4, scope: !15379, file: !3, line: 287, type: !12961)
!15389 = !DILocation(line: 287, column: 90, scope: !15379)
!15390 = !DILocalVariable(name: "mpoly", scope: !15379, file: !3, line: 289, type: !2377)
!15391 = !DILocation(line: 289, column: 9, scope: !15379)
!15392 = !DILocation(line: 289, column: 17, scope: !15379)
!15393 = !DILocation(line: 289, column: 21, scope: !15379)
!15394 = !DILocation(line: 289, column: 34, scope: !15379)
!15395 = !DILocalVariable(name: "mloop", scope: !15379, file: !3, line: 290, type: !3486)
!15396 = !DILocation(line: 290, column: 9, scope: !15379)
!15397 = !DILocation(line: 290, column: 17, scope: !15379)
!15398 = !DILocation(line: 290, column: 21, scope: !15379)
!15399 = !DILocation(line: 290, column: 34, scope: !15379)
!15400 = !DILocalVariable(name: "mvert", scope: !15379, file: !3, line: 291, type: !2400)
!15401 = !DILocation(line: 291, column: 9, scope: !15379)
!15402 = !DILocation(line: 291, column: 17, scope: !15379)
!15403 = !DILocation(line: 291, column: 21, scope: !15379)
!15404 = !DILocation(line: 291, column: 34, scope: !15379)
!15405 = !DILocalVariable(name: "totvert", scope: !15379, file: !3, line: 292, type: !27)
!15406 = !DILocation(line: 292, column: 6, scope: !15379)
!15407 = !DILocation(line: 292, column: 16, scope: !15379)
!15408 = !DILocation(line: 292, column: 20, scope: !15379)
!15409 = !DILocation(line: 292, column: 32, scope: !15379)
!15410 = !DILocalVariable(name: "totface", scope: !15379, file: !3, line: 293, type: !27)
!15411 = !DILocation(line: 293, column: 6, scope: !15379)
!15412 = !DILocation(line: 293, column: 16, scope: !15379)
!15413 = !DILocation(line: 293, column: 20, scope: !15379)
!15414 = !DILocation(line: 293, column: 32, scope: !15379)
!15415 = !DILocalVariable(name: "i", scope: !15379, file: !3, line: 294, type: !27)
!15416 = !DILocation(line: 294, column: 6, scope: !15379)
!15417 = !DILocalVariable(name: "seam", scope: !15379, file: !3, line: 294, type: !27)
!15418 = !DILocation(line: 294, column: 9, scope: !15379)
!15419 = !DILocalVariable(name: "v", scope: !15379, file: !3, line: 295, type: !15420)
!15420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15421, size: 64)
!15421 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvMapVert", file: !1311, line: 53, baseType: !15422)
!15422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvMapVert", file: !1311, line: 49, size: 128, elements: !15423)
!15423 = !{!15424, !15426, !15427, !15428, !15429}
!15424 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !15422, file: !1311, line: 50, baseType: !15425, size: 64)
!15425 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15422, size: 64)
!15426 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !15422, file: !1311, line: 51, baseType: !84, size: 32, offset: 64)
!15427 = !DIDerivedType(tag: DW_TAG_member, name: "tfindex", scope: !15422, file: !1311, line: 52, baseType: !673, size: 8, offset: 96)
!15428 = !DIDerivedType(tag: DW_TAG_member, name: "separate", scope: !15422, file: !1311, line: 52, baseType: !673, size: 8, offset: 104)
!15429 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !15422, file: !1311, line: 52, baseType: !673, size: 8, offset: 112)
!15430 = !DILocation(line: 295, column: 13, scope: !15379)
!15431 = !DILocalVariable(name: "vmap", scope: !15379, file: !3, line: 296, type: !15432)
!15432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15433, size: 64)
!15433 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvVertMap", file: !1311, line: 47, baseType: !15434)
!15434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvVertMap", file: !1311, line: 44, size: 128, elements: !15435)
!15435 = !{!15436, !15438}
!15436 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !15434, file: !1311, line: 45, baseType: !15437, size: 64)
!15437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15425, size: 64)
!15438 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !15434, file: !1311, line: 46, baseType: !15425, size: 64, offset: 64)
!15439 = !DILocation(line: 296, column: 13, scope: !15379)
!15440 = !DILocalVariable(name: "limit", scope: !15379, file: !3, line: 297, type: !517)
!15441 = !DILocation(line: 297, column: 8, scope: !15379)
!15442 = !DILocalVariable(name: "eset", scope: !15379, file: !3, line: 302, type: !15443)
!15443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !15444, size: 64)
!15444 = !DIDerivedType(tag: DW_TAG_typedef, name: "EdgeSet", file: !2363, line: 98, baseType: !15445)
!15445 = !DICompositeType(tag: DW_TAG_structure_type, name: "EdgeSet", file: !2363, line: 96, flags: DIFlagFwdDecl)
!15446 = !DILocation(line: 302, column: 11, scope: !15379)
!15447 = !DILocalVariable(name: "creaseFactor", scope: !15379, file: !3, line: 303, type: !90)
!15448 = !DILocation(line: 303, column: 8, scope: !15379)
!15449 = !DILocation(line: 303, column: 62, scope: !15379)
!15450 = !DILocation(line: 303, column: 30, scope: !15379)
!15451 = !DILocation(line: 303, column: 23, scope: !15379)
!15452 = !DILocalVariable(name: "uv", scope: !15379, file: !3, line: 304, type: !204)
!15453 = !DILocation(line: 304, column: 8, scope: !15379)
!15454 = !DILocation(line: 306, column: 13, scope: !15379)
!15455 = !DILocation(line: 306, column: 22, scope: !15379)
!15456 = !DILocation(line: 306, column: 2, scope: !15379)
!15457 = !DILocation(line: 306, column: 11, scope: !15379)
!15458 = !DILocation(line: 307, column: 37, scope: !15379)
!15459 = !DILocation(line: 307, column: 44, scope: !15379)
!15460 = !DILocation(line: 307, column: 51, scope: !15379)
!15461 = !DILocation(line: 307, column: 60, scope: !15379)
!15462 = !DILocation(line: 307, column: 69, scope: !15379)
!15463 = !DILocation(line: 307, column: 81, scope: !15379)
!15464 = !DILocation(line: 307, column: 9, scope: !15379)
!15465 = !DILocation(line: 307, column: 7, scope: !15379)
!15466 = !DILocation(line: 308, column: 7, scope: !15467)
!15467 = distinct !DILexicalBlock(scope: !15379, file: !3, line: 308, column: 6)
!15468 = !DILocation(line: 308, column: 6, scope: !15379)
!15469 = !DILocation(line: 309, column: 3, scope: !15467)
!15470 = !DILocation(line: 311, column: 26, scope: !15379)
!15471 = !DILocation(line: 311, column: 2, scope: !15379)
!15472 = !DILocation(line: 314, column: 9, scope: !15473)
!15473 = distinct !DILexicalBlock(scope: !15379, file: !3, line: 314, column: 2)
!15474 = !DILocation(line: 314, column: 7, scope: !15473)
!15475 = !DILocation(line: 314, column: 14, scope: !15476)
!15476 = distinct !DILexicalBlock(scope: !15473, file: !3, line: 314, column: 2)
!15477 = !DILocation(line: 314, column: 18, scope: !15476)
!15478 = !DILocation(line: 314, column: 16, scope: !15476)
!15479 = !DILocation(line: 314, column: 2, scope: !15473)
!15480 = !DILocation(line: 315, column: 38, scope: !15481)
!15481 = distinct !DILexicalBlock(scope: !15482, file: !3, line: 315, column: 7)
!15482 = distinct !DILexicalBlock(scope: !15476, file: !3, line: 314, column: 32)
!15483 = !DILocation(line: 315, column: 44, scope: !15481)
!15484 = !DILocation(line: 315, column: 8, scope: !15481)
!15485 = !DILocation(line: 315, column: 7, scope: !15482)
!15486 = !DILocation(line: 316, column: 4, scope: !15481)
!15487 = !DILocation(line: 318, column: 42, scope: !15488)
!15488 = distinct !DILexicalBlock(scope: !15482, file: !3, line: 318, column: 3)
!15489 = !DILocation(line: 318, column: 48, scope: !15488)
!15490 = !DILocation(line: 318, column: 12, scope: !15488)
!15491 = !DILocation(line: 318, column: 52, scope: !15488)
!15492 = !DILocation(line: 318, column: 10, scope: !15488)
!15493 = !DILocation(line: 318, column: 8, scope: !15488)
!15494 = !DILocation(line: 318, column: 58, scope: !15495)
!15495 = distinct !DILexicalBlock(scope: !15488, file: !3, line: 318, column: 3)
!15496 = !DILocation(line: 318, column: 3, scope: !15488)
!15497 = !DILocation(line: 319, column: 8, scope: !15498)
!15498 = distinct !DILexicalBlock(scope: !15495, file: !3, line: 319, column: 8)
!15499 = !DILocation(line: 319, column: 11, scope: !15498)
!15500 = !DILocation(line: 319, column: 8, scope: !15495)
!15501 = !DILocation(line: 320, column: 5, scope: !15498)
!15502 = !DILocation(line: 318, column: 65, scope: !15495)
!15503 = !DILocation(line: 318, column: 68, scope: !15495)
!15504 = !DILocation(line: 318, column: 63, scope: !15495)
!15505 = !DILocation(line: 318, column: 3, scope: !15495)
!15506 = distinct !{!15506, !15496, !15507}
!15507 = !DILocation(line: 320, column: 5, scope: !15488)
!15508 = !DILocation(line: 322, column: 11, scope: !15482)
!15509 = !DILocation(line: 322, column: 13, scope: !15482)
!15510 = !DILocation(line: 322, column: 22, scope: !15482)
!15511 = !DILocation(line: 322, column: 27, scope: !15482)
!15512 = !DILocation(line: 322, column: 35, scope: !15482)
!15513 = !DILocation(line: 322, column: 33, scope: !15482)
!15514 = !DILocation(line: 322, column: 39, scope: !15482)
!15515 = !DILocation(line: 322, column: 26, scope: !15482)
!15516 = !DILocation(line: 322, column: 44, scope: !15482)
!15517 = !DILocation(line: 322, column: 8, scope: !15482)
!15518 = !DILocation(line: 324, column: 42, scope: !15519)
!15519 = distinct !DILexicalBlock(scope: !15482, file: !3, line: 324, column: 3)
!15520 = !DILocation(line: 324, column: 48, scope: !15519)
!15521 = !DILocation(line: 324, column: 12, scope: !15519)
!15522 = !DILocation(line: 324, column: 10, scope: !15519)
!15523 = !DILocation(line: 324, column: 8, scope: !15519)
!15524 = !DILocation(line: 324, column: 52, scope: !15525)
!15525 = distinct !DILexicalBlock(scope: !15519, file: !3, line: 324, column: 3)
!15526 = !DILocation(line: 324, column: 3, scope: !15519)
!15527 = !DILocation(line: 325, column: 8, scope: !15528)
!15528 = distinct !DILexicalBlock(scope: !15529, file: !3, line: 325, column: 8)
!15529 = distinct !DILexicalBlock(scope: !15525, file: !3, line: 324, column: 68)
!15530 = !DILocation(line: 325, column: 11, scope: !15528)
!15531 = !DILocation(line: 325, column: 8, scope: !15529)
!15532 = !DILocalVariable(name: "ssv", scope: !15533, file: !3, line: 326, type: !2613)
!15533 = distinct !DILexicalBlock(scope: !15528, file: !3, line: 325, column: 21)
!15534 = !DILocation(line: 326, column: 14, scope: !15533)
!15535 = !DILocalVariable(name: "loopid", scope: !15533, file: !3, line: 327, type: !27)
!15536 = !DILocation(line: 327, column: 9, scope: !15533)
!15537 = !DILocation(line: 327, column: 18, scope: !15533)
!15538 = !DILocation(line: 327, column: 24, scope: !15533)
!15539 = !DILocation(line: 327, column: 27, scope: !15533)
!15540 = !DILocation(line: 327, column: 30, scope: !15533)
!15541 = !DILocation(line: 327, column: 42, scope: !15533)
!15542 = !DILocation(line: 327, column: 45, scope: !15533)
!15543 = !DILocation(line: 327, column: 40, scope: !15533)
!15544 = !DILocalVariable(name: "vhdl", scope: !15533, file: !3, line: 328, type: !3647)
!15545 = !DILocation(line: 328, column: 16, scope: !15533)
!15546 = !DILocation(line: 328, column: 23, scope: !15533)
!15547 = !DILocation(line: 330, column: 16, scope: !15533)
!15548 = !DILocation(line: 330, column: 20, scope: !15533)
!15549 = !DILocation(line: 330, column: 28, scope: !15533)
!15550 = !DILocation(line: 330, column: 36, scope: !15533)
!15551 = !DILocation(line: 330, column: 5, scope: !15533)
!15552 = !DILocation(line: 332, column: 25, scope: !15533)
!15553 = !DILocation(line: 332, column: 29, scope: !15533)
!15554 = !DILocation(line: 332, column: 35, scope: !15533)
!15555 = !DILocation(line: 332, column: 39, scope: !15533)
!15556 = !DILocation(line: 332, column: 5, scope: !15533)
!15557 = !DILocation(line: 333, column: 4, scope: !15533)
!15558 = !DILocation(line: 334, column: 3, scope: !15529)
!15559 = !DILocation(line: 324, column: 59, scope: !15525)
!15560 = !DILocation(line: 324, column: 62, scope: !15525)
!15561 = !DILocation(line: 324, column: 57, scope: !15525)
!15562 = !DILocation(line: 324, column: 3, scope: !15525)
!15563 = distinct !{!15563, !15526, !15564}
!15564 = !DILocation(line: 334, column: 3, scope: !15519)
!15565 = !DILocation(line: 335, column: 2, scope: !15482)
!15566 = !DILocation(line: 314, column: 28, scope: !15476)
!15567 = !DILocation(line: 314, column: 2, scope: !15476)
!15568 = distinct !{!15568, !15479, !15569}
!15569 = !DILocation(line: 335, column: 2, scope: !15473)
!15570 = !DILocation(line: 338, column: 38, scope: !15379)
!15571 = !DILocation(line: 338, column: 9, scope: !15379)
!15572 = !DILocation(line: 338, column: 7, scope: !15379)
!15573 = !DILocation(line: 340, column: 9, scope: !15574)
!15574 = distinct !DILexicalBlock(scope: !15379, file: !3, line: 340, column: 2)
!15575 = !DILocation(line: 340, column: 7, scope: !15574)
!15576 = !DILocation(line: 340, column: 14, scope: !15577)
!15577 = distinct !DILexicalBlock(scope: !15574, file: !3, line: 340, column: 2)
!15578 = !DILocation(line: 340, column: 18, scope: !15577)
!15579 = !DILocation(line: 340, column: 16, scope: !15577)
!15580 = !DILocation(line: 340, column: 2, scope: !15574)
!15581 = !DILocalVariable(name: "mp", scope: !15582, file: !3, line: 341, type: !2377)
!15582 = distinct !DILexicalBlock(scope: !15577, file: !3, line: 340, column: 32)
!15583 = !DILocation(line: 341, column: 10, scope: !15582)
!15584 = !DILocation(line: 341, column: 27, scope: !15582)
!15585 = !DILocation(line: 341, column: 34, scope: !15582)
!15586 = !DILocation(line: 341, column: 16, scope: !15582)
!15587 = !DILocalVariable(name: "nverts", scope: !15582, file: !3, line: 342, type: !27)
!15588 = !DILocation(line: 342, column: 7, scope: !15582)
!15589 = !DILocation(line: 342, column: 16, scope: !15582)
!15590 = !DILocation(line: 342, column: 20, scope: !15582)
!15591 = !DILocalVariable(name: "j", scope: !15582, file: !3, line: 343, type: !27)
!15592 = !DILocation(line: 343, column: 7, scope: !15582)
!15593 = !DILocalVariable(name: "j_next", scope: !15582, file: !3, line: 343, type: !27)
!15594 = !DILocation(line: 343, column: 10, scope: !15582)
!15595 = !DILocalVariable(name: "origf", scope: !15582, file: !3, line: 344, type: !2461)
!15596 = !DILocation(line: 344, column: 12, scope: !15582)
!15597 = !DILocation(line: 344, column: 39, scope: !15582)
!15598 = !DILocation(line: 344, column: 47, scope: !15582)
!15599 = !DILocation(line: 344, column: 20, scope: !15582)
!15600 = !DILocalVariable(name: "ml", scope: !15582, file: !3, line: 346, type: !3486)
!15601 = !DILocation(line: 346, column: 10, scope: !15582)
!15602 = !DILocation(line: 346, column: 15, scope: !15582)
!15603 = !DILocation(line: 346, column: 23, scope: !15582)
!15604 = !DILocation(line: 346, column: 27, scope: !15582)
!15605 = !DILocation(line: 346, column: 21, scope: !15582)
!15606 = !DILocation(line: 349, column: 21, scope: !15582)
!15607 = !DILocation(line: 349, column: 3, scope: !15582)
!15608 = !DILocalVariable(name: "__vla_expr0", scope: !15582, type: !1258, flags: DIFlagArtificial)
!15609 = !DILocation(line: 0, scope: !15582)
!15610 = !DILocalVariable(name: "fverts", scope: !15582, file: !3, line: 349, type: !15611)
!15611 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3647, elements: !15612)
!15612 = !{!15613}
!15613 = !DISubrange(count: !15608)
!15614 = !DILocation(line: 349, column: 14, scope: !15582)
!15615 = !DILocation(line: 355, column: 24, scope: !15582)
!15616 = !DILocation(line: 355, column: 30, scope: !15582)
!15617 = !DILocation(line: 355, column: 37, scope: !15582)
!15618 = !DILocation(line: 355, column: 41, scope: !15582)
!15619 = !DILocation(line: 355, column: 3, scope: !15582)
!15620 = !DILocation(line: 357, column: 10, scope: !15621)
!15621 = distinct !DILexicalBlock(scope: !15582, file: !3, line: 357, column: 3)
!15622 = !DILocation(line: 357, column: 24, scope: !15621)
!15623 = !DILocation(line: 357, column: 31, scope: !15621)
!15624 = !DILocation(line: 357, column: 22, scope: !15621)
!15625 = !DILocation(line: 357, column: 8, scope: !15621)
!15626 = !DILocation(line: 357, column: 36, scope: !15627)
!15627 = distinct !DILexicalBlock(scope: !15621, file: !3, line: 357, column: 3)
!15628 = !DILocation(line: 357, column: 40, scope: !15627)
!15629 = !DILocation(line: 357, column: 38, scope: !15627)
!15630 = !DILocation(line: 357, column: 3, scope: !15621)
!15631 = !DILocalVariable(name: "v0", scope: !15632, file: !3, line: 358, type: !84)
!15632 = distinct !DILexicalBlock(scope: !15627, file: !3, line: 357, column: 62)
!15633 = !DILocation(line: 358, column: 17, scope: !15632)
!15634 = !DILocation(line: 358, column: 22, scope: !15632)
!15635 = !DILocalVariable(name: "v1", scope: !15632, file: !3, line: 359, type: !84)
!15636 = !DILocation(line: 359, column: 17, scope: !15632)
!15637 = !DILocation(line: 359, column: 22, scope: !15632)
!15638 = !DILocalVariable(name: "mv0", scope: !15632, file: !3, line: 360, type: !2400)
!15639 = !DILocation(line: 360, column: 11, scope: !15632)
!15640 = !DILocation(line: 360, column: 17, scope: !15632)
!15641 = !DILocation(line: 360, column: 26, scope: !15632)
!15642 = !DILocation(line: 360, column: 29, scope: !15632)
!15643 = !DILocation(line: 360, column: 37, scope: !15632)
!15644 = !DILocation(line: 360, column: 23, scope: !15632)
!15645 = !DILocalVariable(name: "mv1", scope: !15632, file: !3, line: 361, type: !2400)
!15646 = !DILocation(line: 361, column: 11, scope: !15632)
!15647 = !DILocation(line: 361, column: 17, scope: !15632)
!15648 = !DILocation(line: 361, column: 26, scope: !15632)
!15649 = !DILocation(line: 361, column: 29, scope: !15632)
!15650 = !DILocation(line: 361, column: 32, scope: !15632)
!15651 = !DILocation(line: 361, column: 23, scope: !15632)
!15652 = !DILocation(line: 363, column: 24, scope: !15653)
!15653 = distinct !DILexicalBlock(scope: !15632, file: !3, line: 363, column: 8)
!15654 = !DILocation(line: 363, column: 30, scope: !15653)
!15655 = !DILocation(line: 363, column: 34, scope: !15653)
!15656 = !DILocation(line: 363, column: 8, scope: !15653)
!15657 = !DILocation(line: 363, column: 8, scope: !15632)
!15658 = !DILocalVariable(name: "e", scope: !15659, file: !3, line: 364, type: !2638)
!15659 = distinct !DILexicalBlock(scope: !15653, file: !3, line: 363, column: 39)
!15660 = !DILocation(line: 364, column: 14, scope: !15659)
!15661 = !DILocalVariable(name: "orige", scope: !15659, file: !3, line: 364, type: !2638)
!15662 = !DILocation(line: 364, column: 18, scope: !15659)
!15663 = !DILocation(line: 364, column: 49, scope: !15659)
!15664 = !DILocation(line: 364, column: 56, scope: !15659)
!15665 = !DILocation(line: 364, column: 26, scope: !15659)
!15666 = !DILocalVariable(name: "ehdl", scope: !15659, file: !3, line: 365, type: !15667)
!15667 = !DIDerivedType(tag: DW_TAG_typedef, name: "CCGEdgeHDL", file: !8, line: 30, baseType: !41)
!15668 = !DILocation(line: 365, column: 16, scope: !15659)
!15669 = !DILocation(line: 365, column: 23, scope: !15659)
!15670 = !DILocalVariable(name: "crease", scope: !15659, file: !3, line: 366, type: !90)
!15671 = !DILocation(line: 366, column: 11, scope: !15659)
!15672 = !DILocation(line: 368, column: 10, scope: !15673)
!15673 = distinct !DILexicalBlock(scope: !15659, file: !3, line: 368, column: 9)
!15674 = !DILocation(line: 368, column: 15, scope: !15673)
!15675 = !DILocation(line: 368, column: 22, scope: !15673)
!15676 = !DILocation(line: 368, column: 27, scope: !15673)
!15677 = !DILocation(line: 368, column: 20, scope: !15673)
!15678 = !DILocation(line: 368, column: 33, scope: !15673)
!15679 = !DILocation(line: 368, column: 9, scope: !15659)
!15680 = !DILocation(line: 369, column: 15, scope: !15673)
!15681 = !DILocation(line: 369, column: 13, scope: !15673)
!15682 = !DILocation(line: 369, column: 6, scope: !15673)
!15683 = !DILocation(line: 371, column: 40, scope: !15673)
!15684 = !DILocation(line: 371, column: 15, scope: !15673)
!15685 = !DILocation(line: 371, column: 13, scope: !15673)
!15686 = !DILocation(line: 373, column: 25, scope: !15659)
!15687 = !DILocation(line: 373, column: 29, scope: !15659)
!15688 = !DILocation(line: 373, column: 42, scope: !15659)
!15689 = !DILocation(line: 373, column: 35, scope: !15659)
!15690 = !DILocation(line: 373, column: 58, scope: !15659)
!15691 = !DILocation(line: 373, column: 51, scope: !15659)
!15692 = !DILocation(line: 373, column: 62, scope: !15659)
!15693 = !DILocation(line: 373, column: 5, scope: !15659)
!15694 = !DILocation(line: 374, column: 4, scope: !15659)
!15695 = !DILocation(line: 375, column: 3, scope: !15632)
!15696 = !DILocation(line: 357, column: 58, scope: !15627)
!15697 = !DILocation(line: 357, column: 55, scope: !15627)
!15698 = !DILocation(line: 357, column: 3, scope: !15627)
!15699 = distinct !{!15699, !15630, !15700}
!15700 = !DILocation(line: 375, column: 3, scope: !15621)
!15701 = !DILocation(line: 376, column: 2, scope: !15577)
!15702 = !DILocation(line: 376, column: 2, scope: !15582)
!15703 = !DILocation(line: 340, column: 28, scope: !15577)
!15704 = !DILocation(line: 340, column: 2, scope: !15577)
!15705 = distinct !{!15705, !15580, !15706}
!15706 = !DILocation(line: 376, column: 2, scope: !15574)
!15707 = !DILocation(line: 378, column: 19, scope: !15379)
!15708 = !DILocation(line: 378, column: 2, scope: !15379)
!15709 = !DILocation(line: 381, column: 9, scope: !15710)
!15710 = distinct !DILexicalBlock(scope: !15379, file: !3, line: 381, column: 2)
!15711 = !DILocation(line: 381, column: 7, scope: !15710)
!15712 = !DILocation(line: 381, column: 14, scope: !15713)
!15713 = distinct !DILexicalBlock(scope: !15710, file: !3, line: 381, column: 2)
!15714 = !DILocation(line: 381, column: 18, scope: !15713)
!15715 = !DILocation(line: 381, column: 16, scope: !15713)
!15716 = !DILocation(line: 381, column: 2, scope: !15710)
!15717 = !DILocalVariable(name: "mp", scope: !15718, file: !3, line: 382, type: !2377)
!15718 = distinct !DILexicalBlock(scope: !15713, file: !3, line: 381, column: 32)
!15719 = !DILocation(line: 382, column: 10, scope: !15718)
!15720 = !DILocation(line: 382, column: 16, scope: !15718)
!15721 = !DILocation(line: 382, column: 22, scope: !15718)
!15722 = !DILocalVariable(name: "ml", scope: !15718, file: !3, line: 383, type: !3486)
!15723 = !DILocation(line: 383, column: 10, scope: !15718)
!15724 = !DILocation(line: 383, column: 16, scope: !15718)
!15725 = !DILocation(line: 383, column: 22, scope: !15718)
!15726 = !DILocation(line: 383, column: 26, scope: !15718)
!15727 = !DILocalVariable(name: "nverts", scope: !15718, file: !3, line: 384, type: !27)
!15728 = !DILocation(line: 384, column: 7, scope: !15718)
!15729 = !DILocation(line: 384, column: 16, scope: !15718)
!15730 = !DILocation(line: 384, column: 20, scope: !15718)
!15731 = !DILocalVariable(name: "f", scope: !15718, file: !3, line: 385, type: !2461)
!15732 = !DILocation(line: 385, column: 12, scope: !15718)
!15733 = !DILocation(line: 388, column: 21, scope: !15718)
!15734 = !DILocation(line: 388, column: 3, scope: !15718)
!15735 = !DILocalVariable(name: "__vla_expr1", scope: !15718, type: !1258, flags: DIFlagArtificial)
!15736 = !DILocation(line: 0, scope: !15718)
!15737 = !DILocalVariable(name: "fverts", scope: !15718, file: !3, line: 388, type: !15738)
!15738 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3647, elements: !15739)
!15739 = !{!15740}
!15740 = !DISubrange(count: !15735)
!15741 = !DILocation(line: 388, column: 14, scope: !15718)
!15742 = !DILocation(line: 394, column: 24, scope: !15718)
!15743 = !DILocation(line: 394, column: 30, scope: !15718)
!15744 = !DILocation(line: 394, column: 37, scope: !15718)
!15745 = !DILocation(line: 394, column: 41, scope: !15718)
!15746 = !DILocation(line: 394, column: 3, scope: !15718)
!15747 = !DILocation(line: 395, column: 23, scope: !15718)
!15748 = !DILocation(line: 395, column: 27, scope: !15718)
!15749 = !DILocation(line: 395, column: 50, scope: !15718)
!15750 = !DILocation(line: 395, column: 3, scope: !15718)
!15751 = !DILocation(line: 396, column: 2, scope: !15713)
!15752 = !DILocation(line: 396, column: 2, scope: !15718)
!15753 = !DILocation(line: 381, column: 28, scope: !15713)
!15754 = !DILocation(line: 381, column: 2, scope: !15713)
!15755 = distinct !{!15755, !15716, !15756}
!15756 = !DILocation(line: 396, column: 2, scope: !15710)
!15757 = !DILocation(line: 402, column: 28, scope: !15379)
!15758 = !DILocation(line: 402, column: 2, scope: !15379)
!15759 = !DILocation(line: 403, column: 25, scope: !15379)
!15760 = !DILocation(line: 403, column: 2, scope: !15379)
!15761 = !DILocation(line: 405, column: 2, scope: !15379)
!15762 = !DILocation(line: 406, column: 1, scope: !15379)
!15763 = distinct !DISubprogram(name: "get_face_uv_map_vert", scope: !3, file: !3, line: 270, type: !15764, scopeLine: 271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2188, retainedNodes: !2390)
!15764 = !DISubroutineType(types: !15765)
!15765 = !{null, !15432, !1284, !1293, !27, !15766}
!15766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3647, size: 64)
!15767 = !DILocalVariable(name: "vmap", arg: 1, scope: !15763, file: !3, line: 270, type: !15432)
!15768 = !DILocation(line: 270, column: 45, scope: !15763)
!15769 = !DILocalVariable(name: "mpoly", arg: 2, scope: !15763, file: !3, line: 270, type: !1284)
!15770 = !DILocation(line: 270, column: 65, scope: !15763)
!15771 = !DILocalVariable(name: "ml", arg: 3, scope: !15763, file: !3, line: 270, type: !1293)
!15772 = !DILocation(line: 270, column: 86, scope: !15763)
!15773 = !DILocalVariable(name: "fi", arg: 4, scope: !15763, file: !3, line: 270, type: !27)
!15774 = !DILocation(line: 270, column: 94, scope: !15763)
!15775 = !DILocalVariable(name: "fverts", arg: 5, scope: !15763, file: !3, line: 270, type: !15766)
!15776 = !DILocation(line: 270, column: 110, scope: !15763)
!15777 = !DILocalVariable(name: "v", scope: !15763, file: !3, line: 272, type: !15420)
!15778 = !DILocation(line: 272, column: 13, scope: !15763)
!15779 = !DILocalVariable(name: "nv", scope: !15763, file: !3, line: 272, type: !15420)
!15780 = !DILocation(line: 272, column: 17, scope: !15763)
!15781 = !DILocalVariable(name: "j", scope: !15763, file: !3, line: 273, type: !27)
!15782 = !DILocation(line: 273, column: 6, scope: !15763)
!15783 = !DILocalVariable(name: "nverts", scope: !15763, file: !3, line: 273, type: !27)
!15784 = !DILocation(line: 273, column: 9, scope: !15763)
!15785 = !DILocation(line: 273, column: 18, scope: !15763)
!15786 = !DILocation(line: 273, column: 24, scope: !15763)
!15787 = !DILocation(line: 273, column: 28, scope: !15763)
!15788 = !DILocation(line: 275, column: 9, scope: !15789)
!15789 = distinct !DILexicalBlock(scope: !15763, file: !3, line: 275, column: 2)
!15790 = !DILocation(line: 275, column: 7, scope: !15789)
!15791 = !DILocation(line: 275, column: 14, scope: !15792)
!15792 = distinct !DILexicalBlock(scope: !15789, file: !3, line: 275, column: 2)
!15793 = !DILocation(line: 275, column: 18, scope: !15792)
!15794 = !DILocation(line: 275, column: 16, scope: !15792)
!15795 = !DILocation(line: 275, column: 2, scope: !15789)
!15796 = !DILocation(line: 276, column: 47, scope: !15797)
!15797 = distinct !DILexicalBlock(scope: !15798, file: !3, line: 276, column: 3)
!15798 = distinct !DILexicalBlock(scope: !15792, file: !3, line: 275, column: 31)
!15799 = !DILocation(line: 276, column: 53, scope: !15797)
!15800 = !DILocation(line: 276, column: 56, scope: !15797)
!15801 = !DILocation(line: 276, column: 59, scope: !15797)
!15802 = !DILocation(line: 276, column: 17, scope: !15797)
!15803 = !DILocation(line: 276, column: 15, scope: !15797)
!15804 = !DILocation(line: 276, column: 11, scope: !15797)
!15805 = !DILocation(line: 276, column: 8, scope: !15797)
!15806 = !DILocation(line: 276, column: 63, scope: !15807)
!15807 = distinct !DILexicalBlock(scope: !15797, file: !3, line: 276, column: 3)
!15808 = !DILocation(line: 276, column: 3, scope: !15797)
!15809 = !DILocation(line: 277, column: 8, scope: !15810)
!15810 = distinct !DILexicalBlock(scope: !15811, file: !3, line: 277, column: 8)
!15811 = distinct !DILexicalBlock(scope: !15807, file: !3, line: 276, column: 79)
!15812 = !DILocation(line: 277, column: 11, scope: !15810)
!15813 = !DILocation(line: 277, column: 8, scope: !15811)
!15814 = !DILocation(line: 278, column: 10, scope: !15810)
!15815 = !DILocation(line: 278, column: 8, scope: !15810)
!15816 = !DILocation(line: 278, column: 5, scope: !15810)
!15817 = !DILocation(line: 279, column: 8, scope: !15818)
!15818 = distinct !DILexicalBlock(scope: !15811, file: !3, line: 279, column: 8)
!15819 = !DILocation(line: 279, column: 11, scope: !15818)
!15820 = !DILocation(line: 279, column: 16, scope: !15818)
!15821 = !DILocation(line: 279, column: 13, scope: !15818)
!15822 = !DILocation(line: 279, column: 8, scope: !15811)
!15823 = !DILocation(line: 280, column: 5, scope: !15818)
!15824 = !DILocation(line: 281, column: 3, scope: !15811)
!15825 = !DILocation(line: 276, column: 70, scope: !15807)
!15826 = !DILocation(line: 276, column: 73, scope: !15807)
!15827 = !DILocation(line: 276, column: 68, scope: !15807)
!15828 = !DILocation(line: 276, column: 3, scope: !15807)
!15829 = distinct !{!15829, !15808, !15830}
!15830 = !DILocation(line: 281, column: 3, scope: !15797)
!15831 = !DILocation(line: 283, column: 15, scope: !15798)
!15832 = !DILocation(line: 283, column: 3, scope: !15798)
!15833 = !DILocation(line: 283, column: 10, scope: !15798)
!15834 = !DILocation(line: 283, column: 13, scope: !15798)
!15835 = !DILocation(line: 284, column: 2, scope: !15798)
!15836 = !DILocation(line: 275, column: 27, scope: !15792)
!15837 = !DILocation(line: 275, column: 2, scope: !15792)
!15838 = distinct !{!15838, !15795, !15839}
!15839 = !DILocation(line: 284, column: 2, scope: !15789)
!15840 = !DILocation(line: 285, column: 1, scope: !15763)
