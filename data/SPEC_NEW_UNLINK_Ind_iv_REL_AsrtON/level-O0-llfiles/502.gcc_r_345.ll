; ModuleID = 'var-tracking.c'
source_filename = "var-tracking.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.rtl_opt_pass = type { %struct.opt_pass }
%struct.opt_pass = type { i32, i8*, i8 ()*, i32 ()*, %struct.opt_pass*, %struct.opt_pass*, i32, i32, i32, i32, i32, i32, i32 }
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type opaque
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type opaque
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type { %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_d* }
%struct.gimple_seq_node_d = type { %union.gimple_statement_d*, %struct.gimple_seq_node_d*, %struct.gimple_seq_node_d* }
%union.gimple_statement_d = type { %struct.gimple_statement_phi }
%struct.gimple_statement_phi = type { %struct.gimple_statement_base, i32, i32, %union.tree_node*, [1 x %struct.phi_arg_d] }
%struct.gimple_statement_base = type { i32, i32, i32, i32, %struct.basic_block_def*, %union.tree_node* }
%struct.phi_arg_d = type { %struct.ssa_use_operand_d, %union.tree_node*, i32 }
%struct.ssa_use_operand_d = type { %struct.ssa_use_operand_d*, %struct.ssa_use_operand_d*, %union.anon, %union.tree_node** }
%union.anon = type { %union.gimple_statement_d* }
%struct.gimple_df = type { %struct.htab*, %struct.VEC_gimple_gc*, %struct.VEC_tree_gc*, %union.tree_node*, %struct.pt_solution, %struct.pt_solution, %struct.pointer_map_t*, %union.tree_node*, %struct.htab*, %struct.bitmap_head_def*, i8, %struct.ssa_operands }
%struct.VEC_gimple_gc = type { %struct.VEC_gimple_base }
%struct.VEC_gimple_base = type { i32, i32, [1 x %union.gimple_statement_d*] }
%struct.VEC_tree_gc = type { %struct.VEC_tree_base }
%struct.VEC_tree_base = type { i32, i32, [1 x %union.tree_node*] }
%struct.pt_solution = type { i8, %struct.bitmap_head_def* }
%struct.pointer_map_t = type opaque
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.ssa_operands = type { %struct.ssa_operand_memory_d*, i32, i32, i8, %struct.def_optype_d*, %struct.use_optype_d* }
%struct.ssa_operand_memory_d = type { %struct.ssa_operand_memory_d*, [1 x i8] }
%struct.def_optype_d = type { %struct.def_optype_d*, %union.tree_node** }
%struct.use_optype_d = type { %struct.use_optype_d*, %struct.ssa_use_operand_d }
%struct.loops = type opaque
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type { %struct.unnamed_section }
%struct.unnamed_section = type { %struct.section_common, void (i8*)*, i8*, %union.section* }
%struct.section_common = type { i32 }
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.alloc_pool_def = type { i8*, i64, %struct.alloc_pool_list_def*, i8*, i64, i64, i64, i64, %struct.alloc_pool_list_def*, i64, i64 }
%struct.alloc_pool_list_def = type { %struct.alloc_pool_list_def* }
%struct.shared_hash_def = type { i32, %struct.htab* }
%struct.VEC_rtx_heap = type { %struct.VEC_rtx_base }
%struct.rtl_data = type { %struct.expr_status, %struct.emit_status, %struct.varasm_status, %struct.incoming_args, %struct.function_subsections, %struct.rtl_eh, i32, %struct.rtx_def*, %struct.initial_value_struct*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %struct.rtx_def*, %struct.VEC_temp_slot_p_gc*, %struct.temp_slot*, i32, i32, i32, i32, i32, i32, %struct.rtx_def*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack*, i32, i32, i32, i32, i8* }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack* }
%struct.varasm_status = type { %struct.rtx_constant_pool*, i32 }
%struct.rtx_constant_pool = type opaque
%struct.incoming_args = type { i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def* }
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.function_subsections = type { i8*, i8*, i8*, i8*, i8* }
%struct.rtl_eh = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.VEC_uchar_gc*, [2 x %struct.VEC_call_site_record_gc*] }
%struct.VEC_uchar_gc = type { %struct.VEC_uchar_base }
%struct.VEC_uchar_base = type { i32, i32, [1 x i8] }
%struct.VEC_call_site_record_gc = type { %struct.VEC_call_site_record_base }
%struct.VEC_call_site_record_base = type { i32, i32, [1 x %struct.call_site_record_d*] }
%struct.call_site_record_d = type opaque
%struct.initial_value_struct = type opaque
%struct.VEC_temp_slot_p_gc = type { %struct.VEC_temp_slot_p_base }
%struct.VEC_temp_slot_p_base = type { i32, i32, [1 x %struct.temp_slot*] }
%struct.temp_slot = type opaque
%struct.cselib_set = type { %struct.rtx_def*, %struct.rtx_def*, %struct.cselib_val_struct*, %struct.cselib_val_struct* }
%struct.cselib_val_struct = type { i32, i32, %struct.rtx_def*, %struct.elt_loc_list*, %struct.elt_list*, %struct.cselib_val_struct* }
%struct.elt_loc_list = type { %struct.elt_loc_list*, %struct.rtx_def*, %struct.rtx_def* }
%struct.elt_list = type { %struct.elt_list*, %struct.cselib_val_struct* }
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %struct.vectorize, i32, void ()*, i8 (i64, i8*, i32)*, void ()*, i32 ()*, i32 ()*, i32 ()*, i32 ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void ()*, %union.tree_node* (i32, i8)*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, %union.tree_node* (i32, %union.tree_node*, i8*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, i8)*, %union.tree_node* (i32, i8, i8)*, i8* (%union.tree_node*)*, void ()*, i32 (%union.tree_node*, i8*, i32)*, i8 ()*, i32 ()*, i8 (i8)*, i8 ()*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, i8 (i32, %struct.rtx_def*, i8)*, i8 (i32, %struct.rtx_def*)*, i64, i64, i8 (%struct.rtx_def*)*, i8 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*, i32)*, i8* (i8*)*, i64 (i32)*, i32 (i32)*, i32 (i32, i32)*, i8 (i32)*, %struct.addr_space, i8 (i32)*, i8 (i32)*, i8 (%struct.rtx_def*, i32, i32, i32*, i8)*, i32 (%struct.rtx_def*, i8)*, %struct.rtx_def* (%struct.rtx_def*)*, i32 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, void (%union.tree_node*)*, i8 (i32*, i32*)*, i32 (i32, i32)*, void ()*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, i8* (i64*)*, i8* (i8*, i64)*, i8* (i32)*, i8 ()*, %struct.rtx_def* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i32 (%union.tree_node*)*, void (i8*, %struct.rtx_def*, i32)*, i8 (%struct.stdarg_info*, %union.gimple_statement_d*)*, %union.tree_node* ()*, %union.tree_node* ()*, i8* (%struct.rtx_def*)*, i8 (%union.tree_node*)*, i64, %struct.calls, i8* (%union.tree_node*, %union.tree_node*)*, i8* (i32, %union.tree_node*)*, i8* (i32, %union.tree_node*, %union.tree_node*)*, i8* (%union.tree_node*)*, i8* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i32* ()*, i32 (i8, %struct.rtx_def*, i32, i32, %struct.secondary_reload_info*)*, void ()*, void ()*, i8 (i32)*, i32 ()*, i8 ()*, i8 (i32, i32)*, %struct.c, %struct.cxx, %struct.emutls, %struct.target_option_hooks, void (%struct.bitmap_head_def*)*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i8 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i8*)*, void (%struct._IO_FILE*, %union.tree_node*)*, void (%struct._IO_FILE*, %union.tree_node*, i32, i32)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, %struct.rtx_def*)*, void (%struct._IO_FILE*, i8*, i64)*, i8 (%struct.rtx_def*)*, void (%union.tree_node*, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void ()*, void (i8*, i32, %union.tree_node*)*, i32 ()*, %union.section* (%union.tree_node*, i32, i64)*, %union.section* (i32, %struct.rtx_def*, i64)*, void (%union.tree_node*, i32)*, %union.section* (%union.tree_node*)*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i64, i64, %union.tree_node*)*, i8 (%union.tree_node*, i64, i64, %union.tree_node*)*, void ()*, void ()*, void ()*, void (%struct.rtx_def*)*, void (i8*)*, i32 (i32, i8*)*, i8*, void (%struct.rtx_def*)*, void (%struct._IO_FILE*, i32, %struct.rtx_def*)*, void (%struct._IO_FILE*, %struct.rtx_def*, %struct.rtx_def**, i32)*, void (%struct._IO_FILE*)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, void ()*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, void ()*, void ()*, i32 ()*, i32 (%struct.rtx_def*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (%struct._dep*, i32, i32)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32)*, void ()*, i8* ()*, void (i8*, i8)*, void (i8*)*, void (i8*)*, void (i8*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**)*, i8 (i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, i8 (%struct.rtx_def*)*, void (%struct.spec_info_def*)*, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i32 (%struct.ddg*)* }
%struct._dep = type opaque
%struct.spec_info_def = type opaque
%struct.ddg = type opaque
%struct.vectorize = type { %union.tree_node* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (i32, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i32 (i8)*, i8 (%union.tree_node*, i8)*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (i32, %union.tree_node*, i32, i8)* }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.addr_space = type { i32 (i8)*, i32 (i8)*, i8 (i32, i8)*, i8 (i32, %struct.rtx_def*, i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i8)*, i8 (i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %union.tree_node*, %union.tree_node*)* }
%struct.stdarg_info = type opaque
%struct.calls = type { i32 (%union.tree_node*, i32, i32*, %union.tree_node*, i32)*, i8 (%union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, i32)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, %struct.rtx_def* ()*, void (%struct.ix86_args*, i32, %union.tree_node*, i32*, i32)*, i8 (%struct.ix86_args*)*, i8 (%struct.ix86_args*)*, i8 (%union.tree_node*)*, i8 (i32, %union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i8* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, %union.tree_node*, i8)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, i8 ()*, %struct.rtx_def* (%union.tree_node*, i8)*, void (%struct.rtx_def*, %union.tree_node*, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*)* }
%struct.secondary_reload_info = type { i32, i32, %struct.secondary_reload_info*, i32 }
%struct.c = type { i32 (i8)* }
%struct.cxx = type { %union.tree_node* ()*, i8 ()*, %union.tree_node* (%union.tree_node*)*, i8 ()*, i32 (%union.tree_node*, i32)*, i8 ()*, i8 ()*, void (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void (%union.tree_node*)* }
%struct.emutls = type { i8*, i8*, i8*, i8*, i8*, i8*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i8, i8 }
%struct.target_option_hooks = type { i8 (%union.tree_node*, %union.tree_node*, %union.tree_node*, i32)*, void (%struct.cl_target_option*)*, void (%struct.cl_target_option*)*, void (%struct._IO_FILE*, i32, %struct.cl_target_option*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)* }
%struct.cl_target_option = type { i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8 }
%struct.variable_union_info = type { %struct.location_chain_def*, i32, i32 }
%struct.location_chain_def = type { %struct.location_chain_def*, %struct.rtx_def*, %struct.rtx_def*, i32 }
%struct.param_info = type { i8*, i32, i8, i32, i32, i8* }
%struct.VEC_variable_heap = type { %struct.VEC_variable_base }
%struct.VEC_variable_base = type { i32, i32, [1 x %struct.variable_def*] }
%struct.variable_def = type { i8*, i32, i8, i8, i8, [1 x %struct.variable_part_def] }
%struct.variable_part_def = type { %struct.location_chain_def*, %struct.rtx_def*, i64 }
%struct.rtl_bb_info = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32 }
%struct.micro_operation_def = type { i32, %struct.rtx_def*, %union.anon.0 }
%union.anon.0 = type { %struct.rtx_def* }
%struct.variable_tracking_info_def = type { %struct.VEC_micro_operation_heap*, %struct.dataflow_set_def, %struct.dataflow_set_def, %struct.dataflow_set_def*, i8, i8 }
%struct.VEC_micro_operation_heap = type { %struct.VEC_micro_operation_base }
%struct.VEC_micro_operation_base = type { i32, i32, [1 x %struct.micro_operation_def] }
%struct.dataflow_set_def = type { i64, [53 x %struct.attrs_def*], %struct.shared_hash_def*, %struct.shared_hash_def* }
%struct.attrs_def = type { %struct.attrs_def*, %struct.rtx_def*, i8*, i64 }
%struct.fibheap = type { i64, %struct.fibnode*, %struct.fibnode* }
%struct.fibnode = type { %struct.fibnode*, %struct.fibnode*, %struct.fibnode*, %struct.fibnode*, i64, i8*, i32 }
%struct.simple_bitmap_def = type { i8*, i32, i32, [1 x i64] }
%struct.edge_iterator = type { i32, %struct.VEC_edge_gc** }
%struct.value_chain_def = type { %struct.value_chain_def*, i8*, i32 }
%struct.count_use_info = type { %struct.rtx_def*, %struct.basic_block_def*, %struct.cselib_set*, i32, i8 }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }
%struct.adjust_mem_data = type { i8, i32, i64, %struct.rtx_def* }
%struct.tree_parm_decl = type { %struct.tree_decl_with_rtl, %struct.rtx_def*, %struct.var_ann_d* }
%struct.var_ann_d = type { i8, i32, %union.tree_node* }
%struct.reg_attrs = type { %union.tree_node*, i64 }
%struct.mem_attrs = type { %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32, i8 }
%struct.dfset_merge = type { %struct.dataflow_set_def*, %struct.dataflow_set_def*, %struct.dataflow_set_def*, i32 }
%struct.dfset_post_merge = type { %struct.dataflow_set_def*, %struct.dataflow_set_def** }
%struct.tree_type = type { %struct.tree_common, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32, i32, i32, i32, %union.tree_node*, %union.tree_node*, %union.tree_type_symtab, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_type* }
%union.tree_type_symtab = type { i8* }
%struct.lang_type = type opaque
%struct.tree_identifier = type { %struct.tree_common, %struct.ht_identifier }
%struct.ht_identifier = type { i8*, i32, i32 }
%struct.emit_note_data_def = type { %struct.rtx_def*, i32, %struct.htab* }
%struct.tree_int_cst = type { %struct.tree_common, %struct.double_int }
%struct.double_int = type { i64, i64 }
%struct.expand_loc_callback_data = type { %struct.htab*, i8, i8 }

@flag_var_tracking_assignments = external dso_local global i32, align 4
@.str = private unnamed_addr constant [9 x i8] c"vartrack\00", align 1
@pass_variable_tracking = dso_local global %struct.rtl_opt_pass { %struct.opt_pass { i32 1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i32 0, i32 0), i8 ()* @gate_handle_var_tracking, i32 ()* @variable_tracking_main, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 167, i32 0, i32 0, i32 0, i32 0, i32 1025 } }, align 8, !dbg !0
@cfun = external dso_local global %struct.function*, align 8
@.str.1 = private unnamed_addr constant [15 x i8] c"var-tracking.c\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@dump_file = external dso_local global %struct._IO_FILE*, align 8
@dump_flags = external dso_local global i32, align 4
@.str.3 = private unnamed_addr constant [15 x i8] c"attrs_def pool\00", align 1
@attrs_pool = internal global %struct.alloc_pool_def* null, align 8, !dbg !2546
@.str.4 = private unnamed_addr constant [18 x i8] c"variable_def pool\00", align 1
@var_pool = internal global %struct.alloc_pool_def* null, align 8, !dbg !2569
@.str.5 = private unnamed_addr constant [24 x i8] c"location_chain_def pool\00", align 1
@loc_chain_pool = internal global %struct.alloc_pool_def* null, align 8, !dbg !2571
@.str.6 = private unnamed_addr constant [21 x i8] c"shared_hash_def pool\00", align 1
@shared_hash_pool = internal global %struct.alloc_pool_def* null, align 8, !dbg !2573
@empty_shared_hash = internal global %struct.shared_hash_def* null, align 8, !dbg !2575
@changed_variables = internal global %struct.htab* null, align 8, !dbg !2577
@.str.7 = private unnamed_addr constant [21 x i8] c"value_chain_def pool\00", align 1
@value_chain_pool = internal global %struct.alloc_pool_def* null, align 8, !dbg !2579
@value_chains = internal global %struct.htab* null, align 8, !dbg !2581
@scratch_regs = internal global %struct.bitmap_head_def* null, align 8, !dbg !2583
@.str.8 = private unnamed_addr constant [24 x i8] c"small variable_def pool\00", align 1
@valvar_pool = internal global %struct.alloc_pool_def* null, align 8, !dbg !2585
@preserved_values = internal global %struct.VEC_rtx_heap* null, align 8, !dbg !2587
@x_rtl = external dso_local global %struct.rtl_data, align 8
@global_rtl = external dso_local global [11 x %struct.rtx_def*], align 16
@hard_frame_pointer_adjustment = internal global i64 -1, align 8, !dbg !2593
@cselib_record_sets_hook = external dso_local global void (%struct.rtx_def*, %struct.cselib_set*, i32)*, align 8
@.str.9 = private unnamed_addr constant [17 x i8] c"first value: %i\0A\00", align 1
@cselib_hook_called = internal global i8 0, align 1, !dbg !2601
@cfa_base_rtx = internal global %struct.rtx_def* null, align 8, !dbg !2603
@.str.10 = private unnamed_addr constant [16 x i8] c"./basic-block.h\00", align 1
@fixed_regs = external dso_local global [53 x i8], align 16
@tree_code_type = external dso_local constant [0 x i32], align 4
@flag_var_tracking_uninit = external dso_local global i32, align 4
@emit_notes = internal global i8 0, align 1, !dbg !2591
@rtx_format = external dso_local constant [139 x i8*], align 16
@rtx_length = external dso_local constant [139 x i8], align 16
@dst_can_be_shared = internal global i8 0, align 1, !dbg !2589
@rtx_class = external dso_local constant [139 x i32], align 16
@const_int_rtx = external dso_local global [129 x %struct.rtx_def*], align 16
@tree_contains_struct = external dso_local global [191 x [64 x i8]], align 16
@mode_size = external dso_local global [87 x i8], align 16
@regno_reg_rtx = external dso_local global %struct.rtx_def**, align 8
@mode_class = external dso_local constant [87 x i8], align 16
@hard_regno_nregs = external dso_local global [53 x [87 x i8]], align 16
@targetm = external dso_local global %struct.gcc_target, align 8
@.str.11 = private unnamed_addr constant [24 x i8] c"bb %i op %i insn %i %s \00", align 1
@micro_operation_type_name = internal constant [10 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.21, i32 0, i32 0)], align 16, !dbg !2595
@.str.12 = private unnamed_addr constant [7 x i8] c"MO_USE\00", align 1
@.str.13 = private unnamed_addr constant [14 x i8] c"MO_USE_NO_VAR\00", align 1
@.str.14 = private unnamed_addr constant [11 x i8] c"MO_VAL_USE\00", align 1
@.str.15 = private unnamed_addr constant [11 x i8] c"MO_VAL_LOC\00", align 1
@.str.16 = private unnamed_addr constant [11 x i8] c"MO_VAL_SET\00", align 1
@.str.17 = private unnamed_addr constant [7 x i8] c"MO_SET\00", align 1
@.str.18 = private unnamed_addr constant [8 x i8] c"MO_COPY\00", align 1
@.str.19 = private unnamed_addr constant [11 x i8] c"MO_CLOBBER\00", align 1
@.str.20 = private unnamed_addr constant [8 x i8] c"MO_CALL\00", align 1
@.str.21 = private unnamed_addr constant [10 x i8] c"MO_ADJUST\00", align 1
@current_function_decl = external dso_local global %union.tree_node*, align 8
@vui_vec = internal global %struct.variable_union_info* null, align 8, !dbg !2605
@vui_allocated = internal global i32 0, align 4, !dbg !2607
@compiler_params = external dso_local global %struct.param_info*, align 8
@.str.22 = private unnamed_addr constant [88 x i8] c"variable tracking size limit exceeded with -fvar-tracking-assignments, retrying without\00", align 1
@.str.23 = private unnamed_addr constant [38 x i8] c"variable tracking size limit exceeded\00", align 1
@.str.24 = private unnamed_addr constant [61 x i8] c"BB %i: in %i (was %i), out %i (was %i), rem %i + %i, tsz %i\0A\00", align 1
@.str.25 = private unnamed_addr constant [11 x i8] c"BB %i IN:\0A\00", align 1
@.str.26 = private unnamed_addr constant [12 x i8] c"BB %i OUT:\0A\00", align 1
@.str.27 = private unnamed_addr constant [36 x i8] c"Created new value %u:%u for reg %i\0A\00", align 1
@regs_invalidated_by_call = external dso_local global i64, align 8
@.str.28 = private unnamed_addr constant [5 x i8] c"%i: \00", align 1
@.str.29 = private unnamed_addr constant [7 x i8] c"head: \00", align 1
@.str.30 = private unnamed_addr constant [8 x i8] c" is at \00", align 1
@.str.31 = private unnamed_addr constant [12 x i8] c" stored in \00", align 1
@.str.32 = private unnamed_addr constant [6 x i8] c"\0A%i: \00", align 1
@.str.33 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@dataflow_set_different_value = internal global i8 0, align 1, !dbg !2609
@.str.34 = private unnamed_addr constant [40 x i8] c"dataflow difference found: removal of:\0A\00", align 1
@.str.35 = private unnamed_addr constant [48 x i8] c"dataflow difference found: old and new follow:\0A\00", align 1
@.str.36 = private unnamed_addr constant [11 x i8] c"  name: %s\00", align 1
@.str.37 = private unnamed_addr constant [5 x i8] c"D.%u\00", align 1
@.str.38 = private unnamed_addr constant [13 x i8] c"  name: D#%u\00", align 1
@.str.39 = private unnamed_addr constant [13 x i8] c"  name: D.%u\00", align 1
@.str.40 = private unnamed_addr constant [16 x i8] c"    offset %ld\0A\00", align 1
@.str.41 = private unnamed_addr constant [7 x i8] c"      \00", align 1
@.str.42 = private unnamed_addr constant [9 x i8] c"[uninit]\00", align 1
@.str.43 = private unnamed_addr constant [23 x i8] c"Stack adjustment: %ld\0A\00", align 1
@.str.44 = private unnamed_addr constant [8 x i8] c"Reg %d:\00", align 1
@.str.45 = private unnamed_addr constant [5 x i8] c"+%ld\00", align 1
@.str.46 = private unnamed_addr constant [12 x i8] c"Variables:\0A\00", align 1
@.str.47 = private unnamed_addr constant [18 x i8] c"\0ABasic block %d:\0A\00", align 1
@.str.48 = private unnamed_addr constant [5 x i8] c"IN:\0A\00", align 1
@.str.49 = private unnamed_addr constant [6 x i8] c"OUT:\0A\00", align 1
@changed_variables_stack = internal global %struct.VEC_variable_heap* null, align 8, !dbg !2611
@changed_values_stack = internal global %struct.VEC_rtx_heap* null, align 8, !dbg !2613
@mode_wider = external dso_local constant [87 x i8], align 16
@flag_var_tracking = external dso_local global i32, align 4

; Function Attrs: noinline nounwind uwtable
define dso_local void @debug_dv(i8* %dv) #0 !dbg !2645 {
entry:
  %dv.addr = alloca i8*, align 8
  store i8* %dv, i8** %dv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dv.addr, metadata !2649, metadata !DIExpression()), !dbg !2650
  %0 = load i8*, i8** %dv.addr, align 8, !dbg !2651
  %call = call zeroext i8 @dv_is_value_p(i8* %0), !dbg !2653
  %tobool = icmp ne i8 %call, 0, !dbg !2653
  br i1 %tobool, label %if.then, label %if.else, !dbg !2654

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %dv.addr, align 8, !dbg !2655
  %call1 = call %struct.rtx_def* @dv_as_value(i8* %1), !dbg !2656
  call void @debug_rtx(%struct.rtx_def* %call1), !dbg !2657
  br label %if.end, !dbg !2657

if.else:                                          ; preds = %entry
  %2 = load i8*, i8** %dv.addr, align 8, !dbg !2658
  %call2 = call %union.tree_node* @dv_as_decl(i8* %2), !dbg !2659
  call void @debug_generic_stmt(%union.tree_node* %call2), !dbg !2660
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !2661
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @dv_is_value_p(i8* %dv) #0 !dbg !2662 {
entry:
  %dv.addr = alloca i8*, align 8
  store i8* %dv, i8** %dv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dv.addr, metadata !2665, metadata !DIExpression()), !dbg !2666
  %0 = load i8*, i8** %dv.addr, align 8, !dbg !2667
  %tobool = icmp ne i8* %0, null, !dbg !2667
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !2668

land.rhs:                                         ; preds = %entry
  %1 = load i8*, i8** %dv.addr, align 8, !dbg !2669
  %call = call zeroext i8 @dv_is_decl_p(i8* %1), !dbg !2670
  %tobool1 = icmp ne i8 %call, 0, !dbg !2671
  %lnot = xor i1 %tobool1, true, !dbg !2671
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ], !dbg !2672
  %land.ext = zext i1 %2 to i32, !dbg !2668
  %conv = trunc i32 %land.ext to i8, !dbg !2667
  ret i8 %conv, !dbg !2673
}

declare dso_local void @debug_rtx(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @dv_as_value(i8* %dv) #0 !dbg !2674 {
entry:
  %dv.addr = alloca i8*, align 8
  store i8* %dv, i8** %dv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dv.addr, metadata !2677, metadata !DIExpression()), !dbg !2678
  %0 = load i8*, i8** %dv.addr, align 8, !dbg !2679
  %1 = bitcast i8* %0 to %struct.rtx_def*, !dbg !2680
  ret %struct.rtx_def* %1, !dbg !2681
}

declare dso_local void @debug_generic_stmt(%union.tree_node*) #2

; Function Attrs: noinline nounwind uwtable
define internal %union.tree_node* @dv_as_decl(i8* %dv) #0 !dbg !2682 {
entry:
  %dv.addr = alloca i8*, align 8
  store i8* %dv, i8** %dv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dv.addr, metadata !2685, metadata !DIExpression()), !dbg !2686
  %0 = load i8*, i8** %dv.addr, align 8, !dbg !2687
  %1 = bitcast i8* %0 to %union.tree_node*, !dbg !2688
  ret %union.tree_node* %1, !dbg !2689
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @variable_tracking_main() #0 !dbg !2690 {
entry:
  %ret = alloca i32, align 4
  %save = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %ret, metadata !2691, metadata !DIExpression()), !dbg !2692
  call void @llvm.dbg.declare(metadata i32* %save, metadata !2693, metadata !DIExpression()), !dbg !2694
  %0 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !2695
  store i32 %0, i32* %save, align 4, !dbg !2694
  %call = call i32 @variable_tracking_main_1(), !dbg !2696
  store i32 %call, i32* %ret, align 4, !dbg !2697
  %1 = load i32, i32* %save, align 4, !dbg !2698
  store i32 %1, i32* @flag_var_tracking_assignments, align 4, !dbg !2699
  %2 = load i32, i32* %ret, align 4, !dbg !2700
  ret i32 %2, !dbg !2701
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @variable_tracking_main_1() #0 !dbg !2702 {
entry:
  %retval = alloca i32, align 4
  %success = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %success, metadata !2703, metadata !DIExpression()), !dbg !2704
  %0 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !2705
  %cmp = icmp slt i32 %0, 0, !dbg !2707
  br i1 %cmp, label %if.then, label %if.end, !dbg !2708

if.then:                                          ; preds = %entry
  call void @delete_debug_insns(), !dbg !2709
  store i32 0, i32* %retval, align 4, !dbg !2711
  br label %return, !dbg !2711

if.end:                                           ; preds = %entry
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2712
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, !dbg !2712
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !2712
  %2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2712
  %x_n_basic_blocks = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %2, i32 0, i32 3, !dbg !2712
  %3 = load i32, i32* %x_n_basic_blocks, align 8, !dbg !2712
  %cmp1 = icmp sgt i32 %3, 500, !dbg !2714
  br i1 %cmp1, label %land.lhs.true, label %if.end9, !dbg !2715

land.lhs.true:                                    ; preds = %if.end
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2716
  %add.ptr2 = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, !dbg !2716
  %cfg3 = getelementptr inbounds %struct.function, %struct.function* %add.ptr2, i32 0, i32 1, !dbg !2716
  %5 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg3, align 8, !dbg !2716
  %x_n_edges = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i32 0, i32 4, !dbg !2716
  %6 = load i32, i32* %x_n_edges, align 4, !dbg !2716
  %7 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2717
  %add.ptr4 = getelementptr inbounds %struct.function, %struct.function* %7, i64 0, !dbg !2717
  %cfg5 = getelementptr inbounds %struct.function, %struct.function* %add.ptr4, i32 0, i32 1, !dbg !2717
  %8 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg5, align 8, !dbg !2717
  %x_n_basic_blocks6 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %8, i32 0, i32 3, !dbg !2717
  %9 = load i32, i32* %x_n_basic_blocks6, align 8, !dbg !2717
  %div = sdiv i32 %6, %9, !dbg !2718
  %cmp7 = icmp sge i32 %div, 20, !dbg !2719
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !2720

if.then8:                                         ; preds = %land.lhs.true
  call void @vt_debug_insns_local(i8 zeroext 1), !dbg !2721
  store i32 0, i32* %retval, align 4, !dbg !2723
  br label %return, !dbg !2723

if.end9:                                          ; preds = %land.lhs.true, %if.end
  %call = call zeroext i8 @mark_dfs_back_edges(), !dbg !2724
  %call10 = call zeroext i8 @vt_initialize(), !dbg !2725
  %tobool = icmp ne i8 %call10, 0, !dbg !2725
  br i1 %tobool, label %if.end12, label %if.then11, !dbg !2727

if.then11:                                        ; preds = %if.end9
  call void @vt_finalize(), !dbg !2728
  call void @vt_debug_insns_local(i8 zeroext 1), !dbg !2730
  store i32 0, i32* %retval, align 4, !dbg !2731
  br label %return, !dbg !2731

if.end12:                                         ; preds = %if.end9
  %call13 = call zeroext i8 @vt_find_locations(), !dbg !2732
  store i8 %call13, i8* %success, align 1, !dbg !2733
  %10 = load i8, i8* %success, align 1, !dbg !2734
  %tobool14 = icmp ne i8 %10, 0, !dbg !2734
  br i1 %tobool14, label %if.end21, label %land.lhs.true15, !dbg !2736

land.lhs.true15:                                  ; preds = %if.end12
  %11 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !2737
  %cmp16 = icmp sgt i32 %11, 0, !dbg !2738
  br i1 %cmp16, label %if.then17, label %if.end21, !dbg !2739

if.then17:                                        ; preds = %land.lhs.true15
  call void @vt_finalize(), !dbg !2740
  call void @delete_debug_insns(), !dbg !2742
  store i32 0, i32* @flag_var_tracking_assignments, align 4, !dbg !2743
  %call18 = call zeroext i8 @vt_initialize(), !dbg !2744
  store i8 %call18, i8* %success, align 1, !dbg !2745
  %12 = load i8, i8* %success, align 1, !dbg !2746
  %tobool19 = icmp ne i8 %12, 0, !dbg !2746
  br i1 %tobool19, label %cond.false, label %cond.true, !dbg !2746

cond.true:                                        ; preds = %if.then17
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 8468, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !2746
  br label %cond.end, !dbg !2746

cond.false:                                       ; preds = %if.then17
  br label %cond.end, !dbg !2746

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !2746
  %call20 = call zeroext i8 @vt_find_locations(), !dbg !2747
  store i8 %call20, i8* %success, align 1, !dbg !2748
  br label %if.end21, !dbg !2749

if.end21:                                         ; preds = %cond.end, %land.lhs.true15, %if.end12
  %13 = load i8, i8* %success, align 1, !dbg !2750
  %tobool22 = icmp ne i8 %13, 0, !dbg !2750
  br i1 %tobool22, label %if.end24, label %if.then23, !dbg !2752

if.then23:                                        ; preds = %if.end21
  call void @vt_finalize(), !dbg !2753
  call void @vt_debug_insns_local(i8 zeroext 0), !dbg !2755
  store i32 0, i32* %retval, align 4, !dbg !2756
  br label %return, !dbg !2756

if.end24:                                         ; preds = %if.end21
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2757
  %tobool25 = icmp ne %struct._IO_FILE* %14, null, !dbg !2757
  br i1 %tobool25, label %land.lhs.true26, label %if.end29, !dbg !2759

land.lhs.true26:                                  ; preds = %if.end24
  %15 = load i32, i32* @dump_flags, align 4, !dbg !2760
  %and = and i32 %15, 8, !dbg !2761
  %tobool27 = icmp ne i32 %and, 0, !dbg !2761
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !2762

if.then28:                                        ; preds = %land.lhs.true26
  call void @dump_dataflow_sets(), !dbg !2763
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !2765
  %17 = load i32, i32* @dump_flags, align 4, !dbg !2766
  call void @dump_flow_info(%struct._IO_FILE* %16, i32 %17), !dbg !2767
  br label %if.end29, !dbg !2768

if.end29:                                         ; preds = %if.then28, %land.lhs.true26, %if.end24
  call void @vt_emit_notes(), !dbg !2769
  call void @vt_finalize(), !dbg !2770
  call void @vt_debug_insns_local(i8 zeroext 0), !dbg !2771
  store i32 0, i32* %retval, align 4, !dbg !2772
  br label %return, !dbg !2772

return:                                           ; preds = %if.end29, %if.then23, %if.then11, %if.then8, %if.then
  %18 = load i32, i32* %retval, align 4, !dbg !2773
  ret i32 %18, !dbg !2773
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @gate_handle_var_tracking() #0 !dbg !2774 {
entry:
  %0 = load i32, i32* @flag_var_tracking, align 4, !dbg !2775
  %conv = trunc i32 %0 to i8, !dbg !2776
  ret i8 %conv, !dbg !2777
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @dv_is_decl_p(i8* %dv) #0 !dbg !2778 {
entry:
  %dv.addr = alloca i8*, align 8
  store i8* %dv, i8** %dv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dv.addr, metadata !2779, metadata !DIExpression()), !dbg !2780
  %0 = load i8*, i8** %dv.addr, align 8, !dbg !2781
  %tobool = icmp ne i8* %0, null, !dbg !2781
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !2782

lor.rhs:                                          ; preds = %entry
  %1 = load i8*, i8** %dv.addr, align 8, !dbg !2783
  %2 = bitcast i8* %1 to %union.tree_node*, !dbg !2783
  %base = bitcast %union.tree_node* %2 to %struct.tree_base*, !dbg !2783
  %3 = bitcast %struct.tree_base* %base to i64*, !dbg !2783
  %bf.load = load i64, i64* %3, align 8, !dbg !2783
  %bf.clear = and i64 %bf.load, 65535, !dbg !2783
  %bf.cast = trunc i64 %bf.clear to i32, !dbg !2783
  %cmp = icmp ne i32 %bf.cast, 1, !dbg !2784
  br label %lor.end, !dbg !2782

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %cmp, %lor.rhs ]
  %lor.ext = zext i1 %4 to i32, !dbg !2782
  %conv = trunc i32 %lor.ext to i8, !dbg !2785
  ret i8 %conv, !dbg !2786
}

; Function Attrs: noinline nounwind uwtable
define internal void @delete_debug_insns() #0 !dbg !2787 {
entry:
  %bb = alloca %struct.basic_block_def*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %next = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !2790, metadata !DIExpression()), !dbg !2791
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !2792, metadata !DIExpression()), !dbg !2793
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %next, metadata !2794, metadata !DIExpression()), !dbg !2795
  %0 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !2796
  %tobool = icmp ne i32 %0, 0, !dbg !2796
  br i1 %tobool, label %if.end, label %if.then, !dbg !2798

if.then:                                          ; preds = %entry
  br label %for.end28, !dbg !2799

if.end:                                           ; preds = %entry
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2800
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, !dbg !2800
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !2800
  %2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2800
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %2, i32 0, i32 0, !dbg !2800
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !2800
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %3, i32 0, i32 6, !dbg !2800
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !2800
  store %struct.basic_block_def* %4, %struct.basic_block_def** %bb, align 8, !dbg !2800
  br label %for.cond, !dbg !2800

for.cond:                                         ; preds = %for.inc26, %if.end
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !2802
  %6 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2802
  %add.ptr1 = getelementptr inbounds %struct.function, %struct.function* %6, i64 0, !dbg !2802
  %cfg2 = getelementptr inbounds %struct.function, %struct.function* %add.ptr1, i32 0, i32 1, !dbg !2802
  %7 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2, align 8, !dbg !2802
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %7, i32 0, i32 1, !dbg !2802
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !2802
  %cmp = icmp ne %struct.basic_block_def* %5, %8, !dbg !2802
  br i1 %cmp, label %for.body, label %for.end28, !dbg !2800

for.body:                                         ; preds = %for.cond
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !2804
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %9, i32 0, i32 7, !dbg !2804
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !2804
  %10 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !2804
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %10, i32 0, i32 0, !dbg !2804
  %11 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !2804
  store %struct.rtx_def* %11, %struct.rtx_def** %insn, align 8, !dbg !2804
  %12 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !2804
  %tobool3 = icmp ne %struct.rtx_def* %12, null, !dbg !2804
  br i1 %tobool3, label %cond.true, label %cond.false, !dbg !2804

cond.true:                                        ; preds = %for.body
  %13 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !2804
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i32 0, i32 1, !dbg !2804
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !2804
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 2, !dbg !2804
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !2804
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2804
  br label %cond.end, !dbg !2804

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !2804

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.rtx_def* [ %14, %cond.true ], [ null, %cond.false ], !dbg !2804
  store %struct.rtx_def* %cond, %struct.rtx_def** %next, align 8, !dbg !2804
  br label %for.cond4, !dbg !2804

for.cond4:                                        ; preds = %cond.end24, %cond.end
  %15 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !2807
  %tobool5 = icmp ne %struct.rtx_def* %15, null, !dbg !2807
  br i1 %tobool5, label %land.rhs, label %land.end, !dbg !2807

land.rhs:                                         ; preds = %for.cond4
  %16 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !2807
  %17 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !2807
  %il6 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %17, i32 0, i32 7, !dbg !2807
  %rtl7 = bitcast %union.basic_block_il_dependent* %il6 to %struct.rtl_bb_info**, !dbg !2807
  %18 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl7, align 8, !dbg !2807
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %18, i32 0, i32 1, !dbg !2807
  %19 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !2807
  %u8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1, !dbg !2807
  %fld9 = bitcast %union.u* %u8 to [1 x %union.rtunion_def]*, !dbg !2807
  %arrayidx10 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld9, i64 0, i64 2, !dbg !2807
  %rt_rtx11 = bitcast %union.rtunion_def* %arrayidx10 to %struct.rtx_def**, !dbg !2807
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx11, align 8, !dbg !2807
  %cmp12 = icmp ne %struct.rtx_def* %16, %20, !dbg !2807
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond4
  %21 = phi i1 [ false, %for.cond4 ], [ %cmp12, %land.rhs ], !dbg !2809
  br i1 %21, label %for.body13, label %for.end, !dbg !2804

for.body13:                                       ; preds = %land.end
  %22 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !2810
  %23 = bitcast %struct.rtx_def* %22 to i32*, !dbg !2810
  %bf.load = load i32, i32* %23, align 8, !dbg !2810
  %bf.clear = and i32 %bf.load, 65535, !dbg !2810
  %cmp14 = icmp eq i32 %bf.clear, 7, !dbg !2810
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !2812

if.then15:                                        ; preds = %for.body13
  %24 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !2813
  %call = call %struct.rtx_def* @delete_insn(%struct.rtx_def* %24), !dbg !2814
  br label %if.end16, !dbg !2814

if.end16:                                         ; preds = %if.then15, %for.body13
  br label %for.inc, !dbg !2810

for.inc:                                          ; preds = %if.end16
  %25 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8, !dbg !2807
  store %struct.rtx_def* %25, %struct.rtx_def** %insn, align 8, !dbg !2807
  %26 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !2807
  %tobool17 = icmp ne %struct.rtx_def* %26, null, !dbg !2807
  br i1 %tobool17, label %cond.true18, label %cond.false23, !dbg !2807

cond.true18:                                      ; preds = %for.inc
  %27 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !2807
  %u19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1, !dbg !2807
  %fld20 = bitcast %union.u* %u19 to [1 x %union.rtunion_def]*, !dbg !2807
  %arrayidx21 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld20, i64 0, i64 2, !dbg !2807
  %rt_rtx22 = bitcast %union.rtunion_def* %arrayidx21 to %struct.rtx_def**, !dbg !2807
  %28 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx22, align 8, !dbg !2807
  br label %cond.end24, !dbg !2807

cond.false23:                                     ; preds = %for.inc
  br label %cond.end24, !dbg !2807

cond.end24:                                       ; preds = %cond.false23, %cond.true18
  %cond25 = phi %struct.rtx_def* [ %28, %cond.true18 ], [ null, %cond.false23 ], !dbg !2807
  store %struct.rtx_def* %cond25, %struct.rtx_def** %next, align 8, !dbg !2807
  br label %for.cond4, !dbg !2807, !llvm.loop !2815

for.end:                                          ; preds = %land.end
  br label %for.inc26, !dbg !2817

for.inc26:                                        ; preds = %for.end
  %29 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !2802
  %next_bb27 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %29, i32 0, i32 6, !dbg !2802
  %30 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb27, align 8, !dbg !2802
  store %struct.basic_block_def* %30, %struct.basic_block_def** %bb, align 8, !dbg !2802
  br label %for.cond, !dbg !2802, !llvm.loop !2818

for.end28:                                        ; preds = %if.then, %for.cond
  ret void, !dbg !2820
}

; Function Attrs: noinline nounwind uwtable
define internal void @vt_debug_insns_local(i8 zeroext %skipped) #0 !dbg !2821 {
entry:
  %skipped.addr = alloca i8, align 1
  store i8 %skipped, i8* %skipped.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %skipped.addr, metadata !2824, metadata !DIExpression()), !dbg !2825
  call void @delete_debug_insns(), !dbg !2826
  ret void, !dbg !2827
}

declare dso_local zeroext i8 @mark_dfs_back_edges() #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @vt_initialize() #0 !dbg !2828 {
entry:
  %retval = alloca i8, align 1
  %bb = alloca %struct.basic_block_def*, align 8
  %prologue_bb = alloca %struct.basic_block_def*, align 8
  %fp_cfa_offset = alloca i64, align 8
  %reg = alloca %struct.rtx_def*, align 8
  %elim = alloca %struct.rtx_def*, align 8
  %reg38 = alloca %struct.rtx_def*, align 8
  %elim39 = alloca %struct.rtx_def*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %pre = alloca i64, align 8
  %post = alloca i64, align 8
  %first_bb = alloca %struct.basic_block_def*, align 8
  %last_bb = alloca %struct.basic_block_def*, align 8
  %e = alloca %struct.edge_def*, align 8
  %offset = alloca i64, align 8
  %mo = alloca %struct.micro_operation_def, align 8
  %mo198 = alloca %struct.micro_operation_def, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !2829, metadata !DIExpression()), !dbg !2830
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %prologue_bb, metadata !2831, metadata !DIExpression()), !dbg !2832
  store %struct.basic_block_def* null, %struct.basic_block_def** %prologue_bb, align 8, !dbg !2832
  call void @llvm.dbg.declare(metadata i64* %fp_cfa_offset, metadata !2833, metadata !DIExpression()), !dbg !2834
  store i64 -1, i64* %fp_cfa_offset, align 8, !dbg !2834
  call void @alloc_aux_for_blocks(i32 920), !dbg !2835
  %call = call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0), i64 32, i64 1024), !dbg !2836
  store %struct.alloc_pool_def* %call, %struct.alloc_pool_def** @attrs_pool, align 8, !dbg !2837
  %call1 = call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i64 400, i64 64), !dbg !2838
  store %struct.alloc_pool_def* %call1, %struct.alloc_pool_def** @var_pool, align 8, !dbg !2839
  %call2 = call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i64 32, i64 1024), !dbg !2840
  store %struct.alloc_pool_def* %call2, %struct.alloc_pool_def** @loc_chain_pool, align 8, !dbg !2841
  %call3 = call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0), i64 16, i64 256), !dbg !2842
  store %struct.alloc_pool_def* %call3, %struct.alloc_pool_def** @shared_hash_pool, align 8, !dbg !2843
  %0 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @shared_hash_pool, align 8, !dbg !2844
  %call4 = call i8* @pool_alloc(%struct.alloc_pool_def* %0), !dbg !2845
  %1 = bitcast i8* %call4 to %struct.shared_hash_def*, !dbg !2846
  store %struct.shared_hash_def* %1, %struct.shared_hash_def** @empty_shared_hash, align 8, !dbg !2847
  %2 = load %struct.shared_hash_def*, %struct.shared_hash_def** @empty_shared_hash, align 8, !dbg !2848
  %refcount = getelementptr inbounds %struct.shared_hash_def, %struct.shared_hash_def* %2, i32 0, i32 0, !dbg !2849
  store i32 1, i32* %refcount, align 8, !dbg !2850
  %call5 = call %struct.htab* @htab_create(i64 1, i32 (i8*)* @variable_htab_hash, i32 (i8*, i8*)* @variable_htab_eq, void (i8*)* @variable_htab_free), !dbg !2851
  %3 = load %struct.shared_hash_def*, %struct.shared_hash_def** @empty_shared_hash, align 8, !dbg !2852
  %htab = getelementptr inbounds %struct.shared_hash_def, %struct.shared_hash_def* %3, i32 0, i32 1, !dbg !2853
  store %struct.htab* %call5, %struct.htab** %htab, align 8, !dbg !2854
  %call6 = call %struct.htab* @htab_create(i64 10, i32 (i8*)* @variable_htab_hash, i32 (i8*, i8*)* @variable_htab_eq, void (i8*)* @variable_htab_free), !dbg !2855
  store %struct.htab* %call6, %struct.htab** @changed_variables, align 8, !dbg !2856
  %4 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !2857
  %tobool = icmp ne i32 %4, 0, !dbg !2857
  br i1 %tobool, label %if.then, label %if.end, !dbg !2859

if.then:                                          ; preds = %entry
  %call7 = call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.7, i64 0, i64 0), i64 24, i64 1024), !dbg !2860
  store %struct.alloc_pool_def* %call7, %struct.alloc_pool_def** @value_chain_pool, align 8, !dbg !2862
  %call8 = call %struct.htab* @htab_create(i64 32, i32 (i8*)* @value_chain_htab_hash, i32 (i8*, i8*)* @value_chain_htab_eq, void (i8*)* null), !dbg !2863
  store %struct.htab* %call8, %struct.htab** @value_chains, align 8, !dbg !2864
  br label %if.end, !dbg !2865

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2866
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %5, i64 0, !dbg !2866
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !2866
  %6 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !2866
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %6, i32 0, i32 0, !dbg !2866
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !2866
  store %struct.basic_block_def* %7, %struct.basic_block_def** %bb, align 8, !dbg !2866
  br label %for.cond, !dbg !2866

for.cond:                                         ; preds = %for.inc, %if.end
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !2868
  %tobool9 = icmp ne %struct.basic_block_def* %8, null, !dbg !2866
  br i1 %tobool9, label %for.body, label %for.end, !dbg !2866

for.body:                                         ; preds = %for.cond
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !2870
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %9, i32 0, i32 2, !dbg !2870
  %10 = load i8*, i8** %aux, align 8, !dbg !2870
  %11 = bitcast i8* %10 to %struct.variable_tracking_info_def*, !dbg !2870
  %visited = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %11, i32 0, i32 4, !dbg !2872
  store i8 0, i8* %visited, align 8, !dbg !2873
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !2874
  %aux10 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %12, i32 0, i32 2, !dbg !2874
  %13 = load i8*, i8** %aux10, align 8, !dbg !2874
  %14 = bitcast i8* %13 to %struct.variable_tracking_info_def*, !dbg !2874
  %flooded = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %14, i32 0, i32 5, !dbg !2875
  store i8 0, i8* %flooded, align 1, !dbg !2876
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !2877
  %aux11 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %15, i32 0, i32 2, !dbg !2877
  %16 = load i8*, i8** %aux11, align 8, !dbg !2877
  %17 = bitcast i8* %16 to %struct.variable_tracking_info_def*, !dbg !2877
  %in = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %17, i32 0, i32 1, !dbg !2878
  call void @dataflow_set_init(%struct.dataflow_set_def* %in), !dbg !2879
  %18 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !2880
  %aux12 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %18, i32 0, i32 2, !dbg !2880
  %19 = load i8*, i8** %aux12, align 8, !dbg !2880
  %20 = bitcast i8* %19 to %struct.variable_tracking_info_def*, !dbg !2880
  %out = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %20, i32 0, i32 2, !dbg !2881
  call void @dataflow_set_init(%struct.dataflow_set_def* %out), !dbg !2882
  %21 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !2883
  %aux13 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %21, i32 0, i32 2, !dbg !2883
  %22 = load i8*, i8** %aux13, align 8, !dbg !2883
  %23 = bitcast i8* %22 to %struct.variable_tracking_info_def*, !dbg !2883
  %permp = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %23, i32 0, i32 3, !dbg !2884
  store %struct.dataflow_set_def* null, %struct.dataflow_set_def** %permp, align 8, !dbg !2885
  br label %for.inc, !dbg !2886

for.inc:                                          ; preds = %for.body
  %24 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !2868
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %24, i32 0, i32 6, !dbg !2868
  %25 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !2868
  store %struct.basic_block_def* %25, %struct.basic_block_def** %bb, align 8, !dbg !2868
  br label %for.cond, !dbg !2868, !llvm.loop !2887

for.end:                                          ; preds = %for.cond
  %26 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !2889
  %tobool14 = icmp ne i32 %26, 0, !dbg !2889
  br i1 %tobool14, label %if.then15, label %if.else, !dbg !2891

if.then15:                                        ; preds = %for.end
  call void @cselib_init(i32 3), !dbg !2892
  %call16 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* null), !dbg !2894
  store %struct.bitmap_head_def* %call16, %struct.bitmap_head_def** @scratch_regs, align 8, !dbg !2895
  %call17 = call %struct.alloc_pool_def* @create_alloc_pool(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.8, i64 0, i64 0), i64 40, i64 256), !dbg !2896
  store %struct.alloc_pool_def* %call17, %struct.alloc_pool_def** @valvar_pool, align 8, !dbg !2897
  %call18 = call %struct.VEC_rtx_heap* @VEC_rtx_heap_alloc(i32 256), !dbg !2898
  store %struct.VEC_rtx_heap* %call18, %struct.VEC_rtx_heap** @preserved_values, align 8, !dbg !2899
  br label %if.end19, !dbg !2900

if.else:                                          ; preds = %for.end
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @scratch_regs, align 8, !dbg !2901
  store %struct.alloc_pool_def* null, %struct.alloc_pool_def** @valvar_pool, align 8, !dbg !2903
  br label %if.end19

if.end19:                                         ; preds = %if.else, %if.then15
  %27 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i32 0, i32 41), align 1, !dbg !2904
  %tobool20 = icmp ne i8 %27, 0, !dbg !2904
  br i1 %tobool20, label %if.else35, label %if.then21, !dbg !2906

if.then21:                                        ; preds = %if.end19
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %reg, metadata !2907, metadata !DIExpression()), !dbg !2909
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %elim, metadata !2910, metadata !DIExpression()), !dbg !2911
  %call22 = call zeroext i8 @vt_stack_adjustments(), !dbg !2912
  %tobool23 = icmp ne i8 %call22, 0, !dbg !2912
  br i1 %tobool23, label %if.end25, label %if.then24, !dbg !2914

if.then24:                                        ; preds = %if.then21
  store i8 0, i8* %retval, align 1, !dbg !2915
  br label %return, !dbg !2915

if.end25:                                         ; preds = %if.then21
  %28 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), align 8, !dbg !2916
  store %struct.rtx_def* %28, %struct.rtx_def** %reg, align 8, !dbg !2917
  %29 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !2918
  %call26 = call %struct.rtx_def* @eliminate_regs(%struct.rtx_def* %29, i32 0, %struct.rtx_def* null), !dbg !2919
  store %struct.rtx_def* %call26, %struct.rtx_def** %elim, align 8, !dbg !2920
  %30 = load %struct.rtx_def*, %struct.rtx_def** %elim, align 8, !dbg !2921
  %31 = load %struct.rtx_def*, %struct.rtx_def** %reg, align 8, !dbg !2923
  %cmp = icmp ne %struct.rtx_def* %30, %31, !dbg !2924
  br i1 %cmp, label %if.then27, label %if.end34, !dbg !2925

if.then27:                                        ; preds = %if.end25
  %32 = load %struct.rtx_def*, %struct.rtx_def** %elim, align 8, !dbg !2926
  %33 = bitcast %struct.rtx_def* %32 to i32*, !dbg !2926
  %bf.load = load i32, i32* %33, align 8, !dbg !2926
  %bf.clear = and i32 %bf.load, 65535, !dbg !2926
  %cmp28 = icmp eq i32 %bf.clear, 49, !dbg !2929
  br i1 %cmp28, label %if.then29, label %if.end30, !dbg !2930

if.then29:                                        ; preds = %if.then27
  %34 = load %struct.rtx_def*, %struct.rtx_def** %elim, align 8, !dbg !2931
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1, !dbg !2931
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !2931
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !2931
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !2931
  %35 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2931
  store %struct.rtx_def* %35, %struct.rtx_def** %elim, align 8, !dbg !2932
  br label %if.end30, !dbg !2933

if.end30:                                         ; preds = %if.then29, %if.then27
  %36 = load %struct.rtx_def*, %struct.rtx_def** %elim, align 8, !dbg !2934
  %37 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16, !dbg !2936
  %cmp31 = icmp eq %struct.rtx_def* %36, %37, !dbg !2937
  br i1 %cmp31, label %if.then32, label %if.end33, !dbg !2938

if.then32:                                        ; preds = %if.end30
  call void @vt_init_cfa_base(), !dbg !2939
  br label %if.end33, !dbg !2939

if.end33:                                         ; preds = %if.then32, %if.end30
  br label %if.end34, !dbg !2940

if.end34:                                         ; preds = %if.end33, %if.end25
  br label %if.end71, !dbg !2941

if.else35:                                        ; preds = %if.end19
  %38 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i32 0, i32 44), align 8, !dbg !2942
  %tobool36 = icmp ne i8 %38, 0, !dbg !2944
  br i1 %tobool36, label %if.end70, label %if.then37, !dbg !2945

if.then37:                                        ; preds = %if.else35
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %reg38, metadata !2946, metadata !DIExpression()), !dbg !2948
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %elim39, metadata !2949, metadata !DIExpression()), !dbg !2950
  %39 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), align 8, !dbg !2951
  store %struct.rtx_def* %39, %struct.rtx_def** %reg38, align 8, !dbg !2952
  %40 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i32 0, i32 3, i32 2), align 8, !dbg !2953
  %add = add nsw i32 0, %40, !dbg !2953
  %conv = sext i32 %add to i64, !dbg !2953
  store i64 %conv, i64* %fp_cfa_offset, align 8, !dbg !2954
  %41 = load %struct.rtx_def*, %struct.rtx_def** %reg38, align 8, !dbg !2955
  %call40 = call %struct.rtx_def* @eliminate_regs(%struct.rtx_def* %41, i32 0, %struct.rtx_def* null), !dbg !2956
  store %struct.rtx_def* %call40, %struct.rtx_def** %elim39, align 8, !dbg !2957
  %42 = load %struct.rtx_def*, %struct.rtx_def** %elim39, align 8, !dbg !2958
  %43 = load %struct.rtx_def*, %struct.rtx_def** %reg38, align 8, !dbg !2960
  %cmp41 = icmp ne %struct.rtx_def* %42, %43, !dbg !2961
  br i1 %cmp41, label %if.then43, label %if.end69, !dbg !2962

if.then43:                                        ; preds = %if.then37
  %44 = load %struct.rtx_def*, %struct.rtx_def** %elim39, align 8, !dbg !2963
  %45 = bitcast %struct.rtx_def* %44 to i32*, !dbg !2963
  %bf.load44 = load i32, i32* %45, align 8, !dbg !2963
  %bf.clear45 = and i32 %bf.load44, 65535, !dbg !2963
  %cmp46 = icmp eq i32 %bf.clear45, 49, !dbg !2966
  br i1 %cmp46, label %if.then48, label %if.end59, !dbg !2967

if.then48:                                        ; preds = %if.then43
  %46 = load %struct.rtx_def*, %struct.rtx_def** %elim39, align 8, !dbg !2968
  %u49 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %46, i32 0, i32 1, !dbg !2968
  %fld50 = bitcast %union.u* %u49 to [1 x %union.rtunion_def]*, !dbg !2968
  %arrayidx51 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld50, i64 0, i64 1, !dbg !2968
  %rt_rtx52 = bitcast %union.rtunion_def* %arrayidx51 to %struct.rtx_def**, !dbg !2968
  %47 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx52, align 8, !dbg !2968
  %u53 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %47, i32 0, i32 1, !dbg !2968
  %hwint = bitcast %union.u* %u53 to [1 x i64]*, !dbg !2968
  %arrayidx54 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 0, !dbg !2968
  %48 = load i64, i64* %arrayidx54, align 8, !dbg !2968
  %49 = load i64, i64* %fp_cfa_offset, align 8, !dbg !2970
  %sub = sub nsw i64 %49, %48, !dbg !2970
  store i64 %sub, i64* %fp_cfa_offset, align 8, !dbg !2970
  %50 = load %struct.rtx_def*, %struct.rtx_def** %elim39, align 8, !dbg !2971
  %u55 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %50, i32 0, i32 1, !dbg !2971
  %fld56 = bitcast %union.u* %u55 to [1 x %union.rtunion_def]*, !dbg !2971
  %arrayidx57 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld56, i64 0, i64 0, !dbg !2971
  %rt_rtx58 = bitcast %union.rtunion_def* %arrayidx57 to %struct.rtx_def**, !dbg !2971
  %51 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx58, align 8, !dbg !2971
  store %struct.rtx_def* %51, %struct.rtx_def** %elim39, align 8, !dbg !2972
  br label %if.end59, !dbg !2973

if.end59:                                         ; preds = %if.then48, %if.then43
  %52 = load %struct.rtx_def*, %struct.rtx_def** %elim39, align 8, !dbg !2974
  %53 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 16, !dbg !2976
  %cmp60 = icmp ne %struct.rtx_def* %52, %53, !dbg !2977
  br i1 %cmp60, label %if.then62, label %if.else63, !dbg !2978

if.then62:                                        ; preds = %if.end59
  store i64 -1, i64* %fp_cfa_offset, align 8, !dbg !2979
  br label %if.end68, !dbg !2980

if.else63:                                        ; preds = %if.end59
  %54 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2981
  %add.ptr64 = getelementptr inbounds %struct.function, %struct.function* %54, i64 0, !dbg !2981
  %cfg65 = getelementptr inbounds %struct.function, %struct.function* %add.ptr64, i32 0, i32 1, !dbg !2981
  %55 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg65, align 8, !dbg !2981
  %x_entry_block_ptr66 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %55, i32 0, i32 0, !dbg !2981
  %56 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr66, align 8, !dbg !2981
  %call67 = call %struct.basic_block_def* @single_succ(%struct.basic_block_def* %56), !dbg !2982
  store %struct.basic_block_def* %call67, %struct.basic_block_def** %prologue_bb, align 8, !dbg !2983
  br label %if.end68

if.end68:                                         ; preds = %if.else63, %if.then62
  br label %if.end69, !dbg !2984

if.end69:                                         ; preds = %if.end68, %if.then37
  br label %if.end70, !dbg !2985

if.end70:                                         ; preds = %if.end69, %if.else35
  br label %if.end71

if.end71:                                         ; preds = %if.end70, %if.end34
  store i64 -1, i64* @hard_frame_pointer_adjustment, align 8, !dbg !2986
  %57 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2987
  %add.ptr72 = getelementptr inbounds %struct.function, %struct.function* %57, i64 0, !dbg !2987
  %cfg73 = getelementptr inbounds %struct.function, %struct.function* %add.ptr72, i32 0, i32 1, !dbg !2987
  %58 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg73, align 8, !dbg !2987
  %x_entry_block_ptr74 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %58, i32 0, i32 0, !dbg !2987
  %59 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr74, align 8, !dbg !2987
  %next_bb75 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %59, i32 0, i32 6, !dbg !2987
  %60 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb75, align 8, !dbg !2987
  store %struct.basic_block_def* %60, %struct.basic_block_def** %bb, align 8, !dbg !2987
  br label %for.cond76, !dbg !2987

for.cond76:                                       ; preds = %for.inc255, %if.end71
  %61 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !2989
  %62 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !2989
  %add.ptr77 = getelementptr inbounds %struct.function, %struct.function* %62, i64 0, !dbg !2989
  %cfg78 = getelementptr inbounds %struct.function, %struct.function* %add.ptr77, i32 0, i32 1, !dbg !2989
  %63 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg78, align 8, !dbg !2989
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %63, i32 0, i32 1, !dbg !2989
  %64 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !2989
  %cmp79 = icmp ne %struct.basic_block_def* %61, %64, !dbg !2989
  br i1 %cmp79, label %for.body81, label %for.end257, !dbg !2987

for.body81:                                       ; preds = %for.cond76
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !2991, metadata !DIExpression()), !dbg !2993
  call void @llvm.dbg.declare(metadata i64* %pre, metadata !2994, metadata !DIExpression()), !dbg !2995
  call void @llvm.dbg.declare(metadata i64* %post, metadata !2996, metadata !DIExpression()), !dbg !2997
  store i64 0, i64* %post, align 8, !dbg !2997
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %first_bb, metadata !2998, metadata !DIExpression()), !dbg !2999
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %last_bb, metadata !3000, metadata !DIExpression()), !dbg !3001
  %65 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !3002
  %tobool82 = icmp ne i32 %65, 0, !dbg !3002
  br i1 %tobool82, label %if.then83, label %if.end90, !dbg !3004

if.then83:                                        ; preds = %for.body81
  store void (%struct.rtx_def*, %struct.cselib_set*, i32)* @add_with_sets, void (%struct.rtx_def*, %struct.cselib_set*, i32)** @cselib_record_sets_hook, align 8, !dbg !3005
  %66 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3007
  %tobool84 = icmp ne %struct._IO_FILE* %66, null, !dbg !3007
  br i1 %tobool84, label %land.lhs.true, label %if.end89, !dbg !3009

land.lhs.true:                                    ; preds = %if.then83
  %67 = load i32, i32* @dump_flags, align 4, !dbg !3010
  %and = and i32 %67, 8, !dbg !3011
  %tobool85 = icmp ne i32 %and, 0, !dbg !3011
  br i1 %tobool85, label %if.then86, label %if.end89, !dbg !3012

if.then86:                                        ; preds = %land.lhs.true
  %68 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3013
  %call87 = call i32 @cselib_get_next_uid(), !dbg !3014
  %call88 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %68, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.9, i64 0, i64 0), i32 %call87), !dbg !3015
  br label %if.end89, !dbg !3015

if.end89:                                         ; preds = %if.then86, %land.lhs.true, %if.then83
  br label %if.end90, !dbg !3016

if.end90:                                         ; preds = %if.end89, %for.body81
  %69 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3017
  store %struct.basic_block_def* %69, %struct.basic_block_def** %first_bb, align 8, !dbg !3018
  br label %for.cond91, !dbg !3019

for.cond91:                                       ; preds = %if.end111, %if.end90
  call void @llvm.dbg.declare(metadata %struct.edge_def** %e, metadata !3020, metadata !DIExpression()), !dbg !3024
  %70 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3025
  %next_bb92 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %70, i32 0, i32 6, !dbg !3027
  %71 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb92, align 8, !dbg !3027
  %72 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3028
  %add.ptr93 = getelementptr inbounds %struct.function, %struct.function* %72, i64 0, !dbg !3028
  %cfg94 = getelementptr inbounds %struct.function, %struct.function* %add.ptr93, i32 0, i32 1, !dbg !3028
  %73 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg94, align 8, !dbg !3028
  %x_exit_block_ptr95 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %73, i32 0, i32 1, !dbg !3028
  %74 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr95, align 8, !dbg !3028
  %cmp96 = icmp eq %struct.basic_block_def* %71, %74, !dbg !3029
  br i1 %cmp96, label %if.then101, label %lor.lhs.false, !dbg !3030

lor.lhs.false:                                    ; preds = %for.cond91
  %75 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3031
  %next_bb98 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %75, i32 0, i32 6, !dbg !3032
  %76 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb98, align 8, !dbg !3032
  %call99 = call zeroext i8 @single_pred_p(%struct.basic_block_def* %76), !dbg !3033
  %tobool100 = icmp ne i8 %call99, 0, !dbg !3033
  br i1 %tobool100, label %if.end102, label %if.then101, !dbg !3034

if.then101:                                       ; preds = %lor.lhs.false, %for.cond91
  br label %for.end113, !dbg !3035

if.end102:                                        ; preds = %lor.lhs.false
  %77 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3036
  %78 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3037
  %next_bb103 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %78, i32 0, i32 6, !dbg !3038
  %79 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb103, align 8, !dbg !3038
  %call104 = call %struct.edge_def* @find_edge(%struct.basic_block_def* %77, %struct.basic_block_def* %79), !dbg !3039
  store %struct.edge_def* %call104, %struct.edge_def** %e, align 8, !dbg !3040
  %80 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3041
  %tobool105 = icmp ne %struct.edge_def* %80, null, !dbg !3041
  br i1 %tobool105, label %lor.lhs.false106, label %if.then110, !dbg !3043

lor.lhs.false106:                                 ; preds = %if.end102
  %81 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3044
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %81, i32 0, i32 7, !dbg !3045
  %82 = load i32, i32* %flags, align 8, !dbg !3045
  %and107 = and i32 %82, 1, !dbg !3046
  %cmp108 = icmp eq i32 %and107, 0, !dbg !3047
  br i1 %cmp108, label %if.then110, label %if.end111, !dbg !3048

if.then110:                                       ; preds = %lor.lhs.false106, %if.end102
  br label %for.end113, !dbg !3049

if.end111:                                        ; preds = %lor.lhs.false106
  %83 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3050
  %next_bb112 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %83, i32 0, i32 6, !dbg !3051
  %84 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb112, align 8, !dbg !3051
  store %struct.basic_block_def* %84, %struct.basic_block_def** %bb, align 8, !dbg !3052
  br label %for.cond91, !dbg !3053, !llvm.loop !3054

for.end113:                                       ; preds = %if.then110, %if.then101
  %85 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3057
  store %struct.basic_block_def* %85, %struct.basic_block_def** %last_bb, align 8, !dbg !3058
  %86 = load %struct.basic_block_def*, %struct.basic_block_def** %first_bb, align 8, !dbg !3059
  store %struct.basic_block_def* %86, %struct.basic_block_def** %bb, align 8, !dbg !3059
  br label %for.cond114, !dbg !3059

for.cond114:                                      ; preds = %for.inc248, %for.end113
  %87 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3061
  %88 = load %struct.basic_block_def*, %struct.basic_block_def** %last_bb, align 8, !dbg !3061
  %next_bb115 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %88, i32 0, i32 6, !dbg !3061
  %89 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb115, align 8, !dbg !3061
  %cmp116 = icmp ne %struct.basic_block_def* %87, %89, !dbg !3061
  br i1 %cmp116, label %for.body118, label %for.end250, !dbg !3059

for.body118:                                      ; preds = %for.cond114
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !3063, metadata !DIExpression()), !dbg !3065
  %90 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3066
  %aux119 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %90, i32 0, i32 2, !dbg !3066
  %91 = load i8*, i8** %aux119, align 8, !dbg !3066
  %92 = bitcast i8* %91 to %struct.variable_tracking_info_def*, !dbg !3066
  %out120 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %92, i32 0, i32 2, !dbg !3067
  %stack_adjust = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %out120, i32 0, i32 0, !dbg !3068
  %93 = load i64, i64* %stack_adjust, align 8, !dbg !3068
  store i64 %93, i64* %offset, align 8, !dbg !3065
  %94 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3069
  %aux121 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %94, i32 0, i32 2, !dbg !3069
  %95 = load i8*, i8** %aux121, align 8, !dbg !3069
  %96 = bitcast i8* %95 to %struct.variable_tracking_info_def*, !dbg !3069
  %in122 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %96, i32 0, i32 1, !dbg !3070
  %stack_adjust123 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %in122, i32 0, i32 0, !dbg !3071
  %97 = load i64, i64* %stack_adjust123, align 8, !dbg !3071
  %98 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3072
  %aux124 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %98, i32 0, i32 2, !dbg !3072
  %99 = load i8*, i8** %aux124, align 8, !dbg !3072
  %100 = bitcast i8* %99 to %struct.variable_tracking_info_def*, !dbg !3072
  %out125 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %100, i32 0, i32 2, !dbg !3073
  %stack_adjust126 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %out125, i32 0, i32 0, !dbg !3074
  store i64 %97, i64* %stack_adjust126, align 8, !dbg !3075
  %101 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3076
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %101, i32 0, i32 7, !dbg !3076
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !3076
  %102 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3076
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %102, i32 0, i32 0, !dbg !3076
  %103 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !3076
  store %struct.rtx_def* %103, %struct.rtx_def** %insn, align 8, !dbg !3078
  br label %for.cond127, !dbg !3079

for.cond127:                                      ; preds = %for.inc237, %for.body118
  %104 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3080
  %105 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3082
  %il128 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %105, i32 0, i32 7, !dbg !3082
  %rtl129 = bitcast %union.basic_block_il_dependent* %il128 to %struct.rtl_bb_info**, !dbg !3082
  %106 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl129, align 8, !dbg !3082
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %106, i32 0, i32 1, !dbg !3082
  %107 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !3082
  %u130 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %107, i32 0, i32 1, !dbg !3082
  %fld131 = bitcast %union.u* %u130 to [1 x %union.rtunion_def]*, !dbg !3082
  %arrayidx132 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld131, i64 0, i64 2, !dbg !3082
  %rt_rtx133 = bitcast %union.rtunion_def* %arrayidx132 to %struct.rtx_def**, !dbg !3082
  %108 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx133, align 8, !dbg !3082
  %cmp134 = icmp ne %struct.rtx_def* %104, %108, !dbg !3083
  br i1 %cmp134, label %for.body136, label %for.end242, !dbg !3084

for.body136:                                      ; preds = %for.cond127
  %109 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3085
  %110 = bitcast %struct.rtx_def* %109 to i32*, !dbg !3085
  %bf.load137 = load i32, i32* %110, align 8, !dbg !3085
  %bf.clear138 = and i32 %bf.load137, 65535, !dbg !3085
  %cmp139 = icmp eq i32 %bf.clear138, 8, !dbg !3085
  br i1 %cmp139, label %if.then156, label %lor.lhs.false141, !dbg !3085

lor.lhs.false141:                                 ; preds = %for.body136
  %111 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3085
  %112 = bitcast %struct.rtx_def* %111 to i32*, !dbg !3085
  %bf.load142 = load i32, i32* %112, align 8, !dbg !3085
  %bf.clear143 = and i32 %bf.load142, 65535, !dbg !3085
  %cmp144 = icmp eq i32 %bf.clear143, 7, !dbg !3085
  br i1 %cmp144, label %if.then156, label %lor.lhs.false146, !dbg !3085

lor.lhs.false146:                                 ; preds = %lor.lhs.false141
  %113 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3085
  %114 = bitcast %struct.rtx_def* %113 to i32*, !dbg !3085
  %bf.load147 = load i32, i32* %114, align 8, !dbg !3085
  %bf.clear148 = and i32 %bf.load147, 65535, !dbg !3085
  %cmp149 = icmp eq i32 %bf.clear148, 9, !dbg !3085
  br i1 %cmp149, label %if.then156, label %lor.lhs.false151, !dbg !3085

lor.lhs.false151:                                 ; preds = %lor.lhs.false146
  %115 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3085
  %116 = bitcast %struct.rtx_def* %115 to i32*, !dbg !3085
  %bf.load152 = load i32, i32* %116, align 8, !dbg !3085
  %bf.clear153 = and i32 %bf.load152, 65535, !dbg !3085
  %cmp154 = icmp eq i32 %bf.clear153, 10, !dbg !3085
  br i1 %cmp154, label %if.then156, label %if.end236, !dbg !3088

if.then156:                                       ; preds = %lor.lhs.false151, %lor.lhs.false146, %lor.lhs.false141, %for.body136
  %117 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i32 0, i32 41), align 1, !dbg !3089
  %tobool157 = icmp ne i8 %117, 0, !dbg !3089
  br i1 %tobool157, label %if.end180, label %if.then158, !dbg !3092

if.then158:                                       ; preds = %if.then156
  %118 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3093
  call void @insn_stack_adjust_offset_pre_post(%struct.rtx_def* %118, i64* %pre, i64* %post), !dbg !3095
  %119 = load i64, i64* %pre, align 8, !dbg !3096
  %tobool159 = icmp ne i64 %119, 0, !dbg !3096
  br i1 %tobool159, label %if.then160, label %if.end179, !dbg !3098

if.then160:                                       ; preds = %if.then158
  call void @llvm.dbg.declare(metadata %struct.micro_operation_def* %mo, metadata !3099, metadata !DIExpression()), !dbg !3101
  %type = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 0, !dbg !3102
  store i32 9, i32* %type, align 8, !dbg !3103
  %120 = load i64, i64* %pre, align 8, !dbg !3104
  %u161 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 2, !dbg !3105
  %adjust = bitcast %union.anon.0* %u161 to i64*, !dbg !3106
  store i64 %120, i64* %adjust, align 8, !dbg !3107
  %121 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3108
  %insn162 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 1, !dbg !3109
  store %struct.rtx_def* %121, %struct.rtx_def** %insn162, align 8, !dbg !3110
  %122 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3111
  %tobool163 = icmp ne %struct._IO_FILE* %122, null, !dbg !3111
  br i1 %tobool163, label %land.lhs.true164, label %if.end172, !dbg !3113

land.lhs.true164:                                 ; preds = %if.then160
  %123 = load i32, i32* @dump_flags, align 4, !dbg !3114
  %and165 = and i32 %123, 8, !dbg !3115
  %tobool166 = icmp ne i32 %and165, 0, !dbg !3115
  br i1 %tobool166, label %if.then167, label %if.end172, !dbg !3116

if.then167:                                       ; preds = %land.lhs.true164
  %124 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3117
  %u168 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %124, i32 0, i32 1, !dbg !3117
  %fld169 = bitcast %union.u* %u168 to [1 x %union.rtunion_def]*, !dbg !3117
  %arrayidx170 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld169, i64 0, i64 5, !dbg !3117
  %rt_rtx171 = bitcast %union.rtunion_def* %arrayidx170 to %struct.rtx_def**, !dbg !3117
  %125 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx171, align 8, !dbg !3117
  %126 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3118
  %127 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3119
  %128 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3120
  call void @log_op_type(%struct.rtx_def* %125, %struct.basic_block_def* %126, %struct.rtx_def* %127, i32 9, %struct._IO_FILE* %128), !dbg !3121
  br label %if.end172, !dbg !3121

if.end172:                                        ; preds = %if.then167, %land.lhs.true164, %if.then160
  %129 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3122
  %aux173 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %129, i32 0, i32 2, !dbg !3122
  %130 = load i8*, i8** %aux173, align 8, !dbg !3122
  %131 = bitcast i8* %130 to %struct.variable_tracking_info_def*, !dbg !3122
  %mos = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %131, i32 0, i32 0, !dbg !3122
  %call174 = call %struct.micro_operation_def* @VEC_micro_operation_heap_safe_push(%struct.VEC_micro_operation_heap** %mos, %struct.micro_operation_def* %mo), !dbg !3122
  %132 = load i64, i64* %pre, align 8, !dbg !3123
  %133 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3124
  %aux175 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %133, i32 0, i32 2, !dbg !3124
  %134 = load i8*, i8** %aux175, align 8, !dbg !3124
  %135 = bitcast i8* %134 to %struct.variable_tracking_info_def*, !dbg !3124
  %out176 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %135, i32 0, i32 2, !dbg !3125
  %stack_adjust177 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %out176, i32 0, i32 0, !dbg !3126
  %136 = load i64, i64* %stack_adjust177, align 8, !dbg !3127
  %add178 = add nsw i64 %136, %132, !dbg !3127
  store i64 %add178, i64* %stack_adjust177, align 8, !dbg !3127
  br label %if.end179, !dbg !3128

if.end179:                                        ; preds = %if.end172, %if.then158
  br label %if.end180, !dbg !3129

if.end180:                                        ; preds = %if.end179, %if.then156
  store i8 0, i8* @cselib_hook_called, align 1, !dbg !3130
  %137 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3131
  %138 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3132
  call void @adjust_insn(%struct.basic_block_def* %137, %struct.rtx_def* %138), !dbg !3133
  %139 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !3134
  %tobool181 = icmp ne i32 %139, 0, !dbg !3134
  br i1 %tobool181, label %if.then182, label %if.end190, !dbg !3136

if.then182:                                       ; preds = %if.end180
  %140 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3137
  call void @cselib_process_insn(%struct.rtx_def* %140), !dbg !3139
  %141 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3140
  %tobool183 = icmp ne %struct._IO_FILE* %141, null, !dbg !3140
  br i1 %tobool183, label %land.lhs.true184, label %if.end189, !dbg !3142

land.lhs.true184:                                 ; preds = %if.then182
  %142 = load i32, i32* @dump_flags, align 4, !dbg !3143
  %and185 = and i32 %142, 8, !dbg !3144
  %tobool186 = icmp ne i32 %and185, 0, !dbg !3144
  br i1 %tobool186, label %if.then187, label %if.end189, !dbg !3145

if.then187:                                       ; preds = %land.lhs.true184
  %143 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3146
  %144 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3148
  %call188 = call i32 @print_rtl_single(%struct._IO_FILE* %143, %struct.rtx_def* %144), !dbg !3149
  %145 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3150
  call void @dump_cselib_table(%struct._IO_FILE* %145), !dbg !3151
  br label %if.end189, !dbg !3152

if.end189:                                        ; preds = %if.then187, %land.lhs.true184, %if.then182
  br label %if.end190, !dbg !3153

if.end190:                                        ; preds = %if.end189, %if.end180
  %146 = load i8, i8* @cselib_hook_called, align 1, !dbg !3154
  %tobool191 = icmp ne i8 %146, 0, !dbg !3154
  br i1 %tobool191, label %if.end193, label %if.then192, !dbg !3156

if.then192:                                       ; preds = %if.end190
  %147 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3157
  call void @add_with_sets(%struct.rtx_def* %147, %struct.cselib_set* null, i32 0), !dbg !3158
  br label %if.end193, !dbg !3158

if.end193:                                        ; preds = %if.then192, %if.end190
  call void @cancel_changes(i32 0), !dbg !3159
  %148 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i32 0, i32 41), align 1, !dbg !3160
  %tobool194 = icmp ne i8 %148, 0, !dbg !3160
  br i1 %tobool194, label %if.end220, label %land.lhs.true195, !dbg !3162

land.lhs.true195:                                 ; preds = %if.end193
  %149 = load i64, i64* %post, align 8, !dbg !3163
  %tobool196 = icmp ne i64 %149, 0, !dbg !3163
  br i1 %tobool196, label %if.then197, label %if.end220, !dbg !3164

if.then197:                                       ; preds = %land.lhs.true195
  call void @llvm.dbg.declare(metadata %struct.micro_operation_def* %mo198, metadata !3165, metadata !DIExpression()), !dbg !3167
  %type199 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo198, i32 0, i32 0, !dbg !3168
  store i32 9, i32* %type199, align 8, !dbg !3169
  %150 = load i64, i64* %post, align 8, !dbg !3170
  %u200 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo198, i32 0, i32 2, !dbg !3171
  %adjust201 = bitcast %union.anon.0* %u200 to i64*, !dbg !3172
  store i64 %150, i64* %adjust201, align 8, !dbg !3173
  %151 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3174
  %insn202 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo198, i32 0, i32 1, !dbg !3175
  store %struct.rtx_def* %151, %struct.rtx_def** %insn202, align 8, !dbg !3176
  %152 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3177
  %tobool203 = icmp ne %struct._IO_FILE* %152, null, !dbg !3177
  br i1 %tobool203, label %land.lhs.true204, label %if.end212, !dbg !3179

land.lhs.true204:                                 ; preds = %if.then197
  %153 = load i32, i32* @dump_flags, align 4, !dbg !3180
  %and205 = and i32 %153, 8, !dbg !3181
  %tobool206 = icmp ne i32 %and205, 0, !dbg !3181
  br i1 %tobool206, label %if.then207, label %if.end212, !dbg !3182

if.then207:                                       ; preds = %land.lhs.true204
  %154 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3183
  %u208 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %154, i32 0, i32 1, !dbg !3183
  %fld209 = bitcast %union.u* %u208 to [1 x %union.rtunion_def]*, !dbg !3183
  %arrayidx210 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld209, i64 0, i64 5, !dbg !3183
  %rt_rtx211 = bitcast %union.rtunion_def* %arrayidx210 to %struct.rtx_def**, !dbg !3183
  %155 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx211, align 8, !dbg !3183
  %156 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3184
  %157 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3185
  %158 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3186
  call void @log_op_type(%struct.rtx_def* %155, %struct.basic_block_def* %156, %struct.rtx_def* %157, i32 9, %struct._IO_FILE* %158), !dbg !3187
  br label %if.end212, !dbg !3187

if.end212:                                        ; preds = %if.then207, %land.lhs.true204, %if.then197
  %159 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3188
  %aux213 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %159, i32 0, i32 2, !dbg !3188
  %160 = load i8*, i8** %aux213, align 8, !dbg !3188
  %161 = bitcast i8* %160 to %struct.variable_tracking_info_def*, !dbg !3188
  %mos214 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %161, i32 0, i32 0, !dbg !3188
  %call215 = call %struct.micro_operation_def* @VEC_micro_operation_heap_safe_push(%struct.VEC_micro_operation_heap** %mos214, %struct.micro_operation_def* %mo198), !dbg !3188
  %162 = load i64, i64* %post, align 8, !dbg !3189
  %163 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3190
  %aux216 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %163, i32 0, i32 2, !dbg !3190
  %164 = load i8*, i8** %aux216, align 8, !dbg !3190
  %165 = bitcast i8* %164 to %struct.variable_tracking_info_def*, !dbg !3190
  %out217 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %165, i32 0, i32 2, !dbg !3191
  %stack_adjust218 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %out217, i32 0, i32 0, !dbg !3192
  %166 = load i64, i64* %stack_adjust218, align 8, !dbg !3193
  %add219 = add nsw i64 %166, %162, !dbg !3193
  store i64 %add219, i64* %stack_adjust218, align 8, !dbg !3193
  br label %if.end220, !dbg !3194

if.end220:                                        ; preds = %if.end212, %land.lhs.true195, %if.end193
  %167 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3195
  %168 = load %struct.basic_block_def*, %struct.basic_block_def** %prologue_bb, align 8, !dbg !3197
  %cmp221 = icmp eq %struct.basic_block_def* %167, %168, !dbg !3198
  br i1 %cmp221, label %land.lhs.true223, label %if.end235, !dbg !3199

land.lhs.true223:                                 ; preds = %if.end220
  %169 = load i64, i64* @hard_frame_pointer_adjustment, align 8, !dbg !3200
  %cmp224 = icmp eq i64 %169, -1, !dbg !3201
  br i1 %cmp224, label %land.lhs.true226, label %if.end235, !dbg !3202

land.lhs.true226:                                 ; preds = %land.lhs.true223
  %170 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3203
  %171 = bitcast %struct.rtx_def* %170 to i32*, !dbg !3203
  %bf.load227 = load i32, i32* %171, align 8, !dbg !3203
  %bf.lshr = lshr i32 %bf.load227, 30, !dbg !3203
  %bf.clear228 = and i32 %bf.lshr, 1, !dbg !3203
  %tobool229 = icmp ne i32 %bf.clear228, 0, !dbg !3203
  br i1 %tobool229, label %land.lhs.true230, label %if.end235, !dbg !3204

land.lhs.true230:                                 ; preds = %land.lhs.true226
  %172 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3205
  %call231 = call zeroext i8 @fp_setter(%struct.rtx_def* %172), !dbg !3206
  %conv232 = zext i8 %call231 to i32, !dbg !3206
  %tobool233 = icmp ne i32 %conv232, 0, !dbg !3206
  br i1 %tobool233, label %if.then234, label %if.end235, !dbg !3207

if.then234:                                       ; preds = %land.lhs.true230
  call void @vt_init_cfa_base(), !dbg !3208
  %173 = load i64, i64* %fp_cfa_offset, align 8, !dbg !3210
  store i64 %173, i64* @hard_frame_pointer_adjustment, align 8, !dbg !3211
  br label %if.end235, !dbg !3212

if.end235:                                        ; preds = %if.then234, %land.lhs.true230, %land.lhs.true226, %land.lhs.true223, %if.end220
  br label %if.end236, !dbg !3213

if.end236:                                        ; preds = %if.end235, %lor.lhs.false151
  br label %for.inc237, !dbg !3214

for.inc237:                                       ; preds = %if.end236
  %174 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !3215
  %u238 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %174, i32 0, i32 1, !dbg !3215
  %fld239 = bitcast %union.u* %u238 to [1 x %union.rtunion_def]*, !dbg !3215
  %arrayidx240 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld239, i64 0, i64 2, !dbg !3215
  %rt_rtx241 = bitcast %union.rtunion_def* %arrayidx240 to %struct.rtx_def**, !dbg !3215
  %175 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx241, align 8, !dbg !3215
  store %struct.rtx_def* %175, %struct.rtx_def** %insn, align 8, !dbg !3216
  br label %for.cond127, !dbg !3217, !llvm.loop !3218

for.end242:                                       ; preds = %for.cond127
  %176 = load i64, i64* %offset, align 8, !dbg !3220
  %177 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3220
  %aux243 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %177, i32 0, i32 2, !dbg !3220
  %178 = load i8*, i8** %aux243, align 8, !dbg !3220
  %179 = bitcast i8* %178 to %struct.variable_tracking_info_def*, !dbg !3220
  %out244 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %179, i32 0, i32 2, !dbg !3220
  %stack_adjust245 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %out244, i32 0, i32 0, !dbg !3220
  %180 = load i64, i64* %stack_adjust245, align 8, !dbg !3220
  %cmp246 = icmp eq i64 %176, %180, !dbg !3220
  br i1 %cmp246, label %cond.false, label %cond.true, !dbg !3220

cond.true:                                        ; preds = %for.end242
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 8330, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !3220
  br label %cond.end, !dbg !3220

cond.false:                                       ; preds = %for.end242
  br label %cond.end, !dbg !3220

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !3220
  br label %for.inc248, !dbg !3221

for.inc248:                                       ; preds = %cond.end
  %181 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3061
  %next_bb249 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %181, i32 0, i32 6, !dbg !3061
  %182 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb249, align 8, !dbg !3061
  store %struct.basic_block_def* %182, %struct.basic_block_def** %bb, align 8, !dbg !3061
  br label %for.cond114, !dbg !3061, !llvm.loop !3222

for.end250:                                       ; preds = %for.cond114
  %183 = load %struct.basic_block_def*, %struct.basic_block_def** %last_bb, align 8, !dbg !3224
  store %struct.basic_block_def* %183, %struct.basic_block_def** %bb, align 8, !dbg !3225
  %184 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !3226
  %tobool251 = icmp ne i32 %184, 0, !dbg !3226
  br i1 %tobool251, label %if.then252, label %if.end254, !dbg !3228

if.then252:                                       ; preds = %for.end250
  call void @cselib_preserve_only_values(), !dbg !3229
  %call253 = call i32 @cselib_get_next_uid(), !dbg !3231
  call void @cselib_reset_table(i32 %call253), !dbg !3232
  store void (%struct.rtx_def*, %struct.cselib_set*, i32)* null, void (%struct.rtx_def*, %struct.cselib_set*, i32)** @cselib_record_sets_hook, align 8, !dbg !3233
  br label %if.end254, !dbg !3234

if.end254:                                        ; preds = %if.then252, %for.end250
  br label %for.inc255, !dbg !3235

for.inc255:                                       ; preds = %if.end254
  %185 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !2989
  %next_bb256 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %185, i32 0, i32 6, !dbg !2989
  %186 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb256, align 8, !dbg !2989
  store %struct.basic_block_def* %186, %struct.basic_block_def** %bb, align 8, !dbg !2989
  br label %for.cond76, !dbg !2989, !llvm.loop !3236

for.end257:                                       ; preds = %for.cond76
  store i64 -1, i64* @hard_frame_pointer_adjustment, align 8, !dbg !3238
  %187 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3239
  %add.ptr258 = getelementptr inbounds %struct.function, %struct.function* %187, i64 0, !dbg !3239
  %cfg259 = getelementptr inbounds %struct.function, %struct.function* %add.ptr258, i32 0, i32 1, !dbg !3239
  %188 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg259, align 8, !dbg !3239
  %x_entry_block_ptr260 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %188, i32 0, i32 0, !dbg !3239
  %189 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr260, align 8, !dbg !3239
  %aux261 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %189, i32 0, i32 2, !dbg !3239
  %190 = load i8*, i8** %aux261, align 8, !dbg !3239
  %191 = bitcast i8* %190 to %struct.variable_tracking_info_def*, !dbg !3239
  %flooded262 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %191, i32 0, i32 5, !dbg !3240
  store i8 1, i8* %flooded262, align 1, !dbg !3241
  call void @vt_add_function_parameters(), !dbg !3242
  store %struct.rtx_def* null, %struct.rtx_def** @cfa_base_rtx, align 8, !dbg !3243
  store i8 1, i8* %retval, align 1, !dbg !3244
  br label %return, !dbg !3244

return:                                           ; preds = %for.end257, %if.then24
  %192 = load i8, i8* %retval, align 1, !dbg !3245
  ret i8 %192, !dbg !3245
}

; Function Attrs: noinline nounwind uwtable
define internal void @vt_finalize() #0 !dbg !3246 {
entry:
  %bb = alloca %struct.basic_block_def*, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !3247, metadata !DIExpression()), !dbg !3248
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3249
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, !dbg !3249
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !3249
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3249
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i32 0, i32 0, !dbg !3249
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !3249
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2, i32 0, i32 6, !dbg !3249
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !3249
  store %struct.basic_block_def* %3, %struct.basic_block_def** %bb, align 8, !dbg !3249
  br label %for.cond, !dbg !3249

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3251
  %5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3251
  %add.ptr1 = getelementptr inbounds %struct.function, %struct.function* %5, i64 0, !dbg !3251
  %cfg2 = getelementptr inbounds %struct.function, %struct.function* %add.ptr1, i32 0, i32 1, !dbg !3251
  %6 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2, align 8, !dbg !3251
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %6, i32 0, i32 1, !dbg !3251
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !3251
  %cmp = icmp ne %struct.basic_block_def* %4, %7, !dbg !3251
  br i1 %cmp, label %for.body, label %for.end, !dbg !3249

for.body:                                         ; preds = %for.cond
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3253
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %8, i32 0, i32 2, !dbg !3253
  %9 = load i8*, i8** %aux, align 8, !dbg !3253
  %10 = bitcast i8* %9 to %struct.variable_tracking_info_def*, !dbg !3253
  %mos = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %10, i32 0, i32 0, !dbg !3253
  call void @VEC_micro_operation_heap_free(%struct.VEC_micro_operation_heap** %mos), !dbg !3253
  br label %for.inc, !dbg !3255

for.inc:                                          ; preds = %for.body
  %11 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3251
  %next_bb3 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %11, i32 0, i32 6, !dbg !3251
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb3, align 8, !dbg !3251
  store %struct.basic_block_def* %12, %struct.basic_block_def** %bb, align 8, !dbg !3251
  br label %for.cond, !dbg !3251, !llvm.loop !3256

for.end:                                          ; preds = %for.cond
  %13 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3258
  %add.ptr4 = getelementptr inbounds %struct.function, %struct.function* %13, i64 0, !dbg !3258
  %cfg5 = getelementptr inbounds %struct.function, %struct.function* %add.ptr4, i32 0, i32 1, !dbg !3258
  %14 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg5, align 8, !dbg !3258
  %x_entry_block_ptr6 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %14, i32 0, i32 0, !dbg !3258
  %15 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr6, align 8, !dbg !3258
  store %struct.basic_block_def* %15, %struct.basic_block_def** %bb, align 8, !dbg !3258
  br label %for.cond7, !dbg !3258

for.cond7:                                        ; preds = %for.inc17, %for.end
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3260
  %tobool = icmp ne %struct.basic_block_def* %16, null, !dbg !3258
  br i1 %tobool, label %for.body8, label %for.end19, !dbg !3258

for.body8:                                        ; preds = %for.cond7
  %17 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3262
  %aux9 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %17, i32 0, i32 2, !dbg !3262
  %18 = load i8*, i8** %aux9, align 8, !dbg !3262
  %19 = bitcast i8* %18 to %struct.variable_tracking_info_def*, !dbg !3262
  %in = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %19, i32 0, i32 1, !dbg !3264
  call void @dataflow_set_destroy(%struct.dataflow_set_def* %in), !dbg !3265
  %20 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3266
  %aux10 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %20, i32 0, i32 2, !dbg !3266
  %21 = load i8*, i8** %aux10, align 8, !dbg !3266
  %22 = bitcast i8* %21 to %struct.variable_tracking_info_def*, !dbg !3266
  %out = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %22, i32 0, i32 2, !dbg !3267
  call void @dataflow_set_destroy(%struct.dataflow_set_def* %out), !dbg !3268
  %23 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3269
  %aux11 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %23, i32 0, i32 2, !dbg !3269
  %24 = load i8*, i8** %aux11, align 8, !dbg !3269
  %25 = bitcast i8* %24 to %struct.variable_tracking_info_def*, !dbg !3269
  %permp = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %25, i32 0, i32 3, !dbg !3271
  %26 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %permp, align 8, !dbg !3271
  %tobool12 = icmp ne %struct.dataflow_set_def* %26, null, !dbg !3269
  br i1 %tobool12, label %if.then, label %if.end, !dbg !3272

if.then:                                          ; preds = %for.body8
  %27 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3273
  %aux13 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %27, i32 0, i32 2, !dbg !3273
  %28 = load i8*, i8** %aux13, align 8, !dbg !3273
  %29 = bitcast i8* %28 to %struct.variable_tracking_info_def*, !dbg !3273
  %permp14 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %29, i32 0, i32 3, !dbg !3275
  %30 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %permp14, align 8, !dbg !3275
  call void @dataflow_set_destroy(%struct.dataflow_set_def* %30), !dbg !3276
  %31 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3277
  %aux15 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %31, i32 0, i32 2, !dbg !3277
  %32 = load i8*, i8** %aux15, align 8, !dbg !3277
  %33 = bitcast i8* %32 to %struct.variable_tracking_info_def*, !dbg !3277
  %permp16 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %33, i32 0, i32 3, !dbg !3277
  %34 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %permp16, align 8, !dbg !3277
  %35 = bitcast %struct.dataflow_set_def* %34 to i8*, !dbg !3277
  call void @free(i8* %35), !dbg !3277
  br label %if.end, !dbg !3278

if.end:                                           ; preds = %if.then, %for.body8
  br label %for.inc17, !dbg !3279

for.inc17:                                        ; preds = %if.end
  %36 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3260
  %next_bb18 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %36, i32 0, i32 6, !dbg !3260
  %37 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb18, align 8, !dbg !3260
  store %struct.basic_block_def* %37, %struct.basic_block_def** %bb, align 8, !dbg !3260
  br label %for.cond7, !dbg !3260, !llvm.loop !3280

for.end19:                                        ; preds = %for.cond7
  call void @free_aux_for_blocks(), !dbg !3282
  %38 = load %struct.shared_hash_def*, %struct.shared_hash_def** @empty_shared_hash, align 8, !dbg !3283
  %htab = getelementptr inbounds %struct.shared_hash_def, %struct.shared_hash_def* %38, i32 0, i32 1, !dbg !3284
  %39 = load %struct.htab*, %struct.htab** %htab, align 8, !dbg !3284
  call void @htab_delete(%struct.htab* %39), !dbg !3285
  %40 = load %struct.htab*, %struct.htab** @changed_variables, align 8, !dbg !3286
  call void @htab_delete(%struct.htab* %40), !dbg !3287
  %41 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @attrs_pool, align 8, !dbg !3288
  call void @free_alloc_pool(%struct.alloc_pool_def* %41), !dbg !3289
  %42 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @var_pool, align 8, !dbg !3290
  call void @free_alloc_pool(%struct.alloc_pool_def* %42), !dbg !3291
  %43 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @loc_chain_pool, align 8, !dbg !3292
  call void @free_alloc_pool(%struct.alloc_pool_def* %43), !dbg !3293
  %44 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @shared_hash_pool, align 8, !dbg !3294
  call void @free_alloc_pool(%struct.alloc_pool_def* %44), !dbg !3295
  %45 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !3296
  %tobool20 = icmp ne i32 %45, 0, !dbg !3296
  br i1 %tobool20, label %if.then21, label %if.end22, !dbg !3298

if.then21:                                        ; preds = %for.end19
  %46 = load %struct.htab*, %struct.htab** @value_chains, align 8, !dbg !3299
  call void @htab_delete(%struct.htab* %46), !dbg !3301
  %47 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @value_chain_pool, align 8, !dbg !3302
  call void @free_alloc_pool(%struct.alloc_pool_def* %47), !dbg !3303
  %48 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @valvar_pool, align 8, !dbg !3304
  call void @free_alloc_pool(%struct.alloc_pool_def* %48), !dbg !3305
  call void @VEC_rtx_heap_free(%struct.VEC_rtx_heap** @preserved_values), !dbg !3306
  call void @cselib_finish(), !dbg !3307
  %49 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @scratch_regs, align 8, !dbg !3308
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %49), !dbg !3308
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @scratch_regs, align 8, !dbg !3308
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** @scratch_regs, align 8, !dbg !3309
  br label %if.end22, !dbg !3310

if.end22:                                         ; preds = %if.then21, %for.end19
  %50 = load %struct.variable_union_info*, %struct.variable_union_info** @vui_vec, align 8, !dbg !3311
  %tobool23 = icmp ne %struct.variable_union_info* %50, null, !dbg !3311
  br i1 %tobool23, label %if.then24, label %if.end25, !dbg !3313

if.then24:                                        ; preds = %if.end22
  %51 = load %struct.variable_union_info*, %struct.variable_union_info** @vui_vec, align 8, !dbg !3314
  %52 = bitcast %struct.variable_union_info* %51 to i8*, !dbg !3314
  call void @free(i8* %52), !dbg !3314
  br label %if.end25, !dbg !3314

if.end25:                                         ; preds = %if.then24, %if.end22
  store %struct.variable_union_info* null, %struct.variable_union_info** @vui_vec, align 8, !dbg !3315
  store i32 0, i32* @vui_allocated, align 4, !dbg !3316
  ret void, !dbg !3317
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @vt_find_locations() #0 !dbg !3318 {
entry:
  %worklist = alloca %struct.fibheap*, align 8
  %pending = alloca %struct.fibheap*, align 8
  %fibheap_swap = alloca %struct.fibheap*, align 8
  %visited = alloca %struct.simple_bitmap_def*, align 8
  %in_worklist = alloca %struct.simple_bitmap_def*, align 8
  %in_pending = alloca %struct.simple_bitmap_def*, align 8
  %sbitmap_swap = alloca %struct.simple_bitmap_def*, align 8
  %bb = alloca %struct.basic_block_def*, align 8
  %e = alloca %struct.edge_def*, align 8
  %bb_order = alloca i32*, align 8
  %rc_order = alloca i32*, align 8
  %i = alloca i32, align 4
  %htabsz = alloca i32, align 4
  %htabmax = alloca i32, align 4
  %success = alloca i8, align 1
  %changed = alloca i8, align 1
  %ei = alloca %struct.edge_iterator, align 8
  %oldinsz = alloca i32, align 4
  %oldoutsz = alloca i32, align 4
  %in88 = alloca %struct.dataflow_set_def*, align 8
  %first_out = alloca %struct.dataflow_set_def*, align 8
  %first = alloca i8, align 1
  %adjust = alloca i8, align 1
  %tmp = alloca %struct.edge_iterator, align 8
  %tmp141 = alloca %struct.edge_iterator, align 8
  %tmp187 = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.declare(metadata %struct.fibheap** %worklist, metadata !3319, metadata !DIExpression()), !dbg !3340
  call void @llvm.dbg.declare(metadata %struct.fibheap** %pending, metadata !3341, metadata !DIExpression()), !dbg !3342
  call void @llvm.dbg.declare(metadata %struct.fibheap** %fibheap_swap, metadata !3343, metadata !DIExpression()), !dbg !3344
  call void @llvm.dbg.declare(metadata %struct.simple_bitmap_def** %visited, metadata !3345, metadata !DIExpression()), !dbg !3357
  call void @llvm.dbg.declare(metadata %struct.simple_bitmap_def** %in_worklist, metadata !3358, metadata !DIExpression()), !dbg !3359
  call void @llvm.dbg.declare(metadata %struct.simple_bitmap_def** %in_pending, metadata !3360, metadata !DIExpression()), !dbg !3361
  call void @llvm.dbg.declare(metadata %struct.simple_bitmap_def** %sbitmap_swap, metadata !3362, metadata !DIExpression()), !dbg !3363
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !3364, metadata !DIExpression()), !dbg !3365
  call void @llvm.dbg.declare(metadata %struct.edge_def** %e, metadata !3366, metadata !DIExpression()), !dbg !3367
  call void @llvm.dbg.declare(metadata i32** %bb_order, metadata !3368, metadata !DIExpression()), !dbg !3369
  call void @llvm.dbg.declare(metadata i32** %rc_order, metadata !3370, metadata !DIExpression()), !dbg !3371
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3372, metadata !DIExpression()), !dbg !3373
  call void @llvm.dbg.declare(metadata i32* %htabsz, metadata !3374, metadata !DIExpression()), !dbg !3375
  store i32 0, i32* %htabsz, align 4, !dbg !3375
  call void @llvm.dbg.declare(metadata i32* %htabmax, metadata !3376, metadata !DIExpression()), !dbg !3377
  %0 = load %struct.param_info*, %struct.param_info** @compiler_params, align 8, !dbg !3378
  %arrayidx = getelementptr inbounds %struct.param_info, %struct.param_info* %0, i64 116, !dbg !3378
  %value = getelementptr inbounds %struct.param_info, %struct.param_info* %arrayidx, i32 0, i32 1, !dbg !3378
  %1 = load i32, i32* %value, align 8, !dbg !3378
  store i32 %1, i32* %htabmax, align 4, !dbg !3377
  call void @llvm.dbg.declare(metadata i8* %success, metadata !3379, metadata !DIExpression()), !dbg !3380
  store i8 1, i8* %success, align 1, !dbg !3380
  %2 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3381
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %2, i64 0, !dbg !3381
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !3381
  %3 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3381
  %x_n_basic_blocks = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %3, i32 0, i32 3, !dbg !3381
  %4 = load i32, i32* %x_n_basic_blocks, align 8, !dbg !3381
  %sub = sub nsw i32 %4, 2, !dbg !3381
  %conv = sext i32 %sub to i64, !dbg !3381
  %mul = mul i64 4, %conv, !dbg !3381
  %call = call i8* @xmalloc(i64 %mul), !dbg !3381
  %5 = bitcast i8* %call to i32*, !dbg !3381
  store i32* %5, i32** %rc_order, align 8, !dbg !3382
  %6 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3383
  %add.ptr1 = getelementptr inbounds %struct.function, %struct.function* %6, i64 0, !dbg !3383
  %cfg2 = getelementptr inbounds %struct.function, %struct.function* %add.ptr1, i32 0, i32 1, !dbg !3383
  %7 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2, align 8, !dbg !3383
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %7, i32 0, i32 5, !dbg !3383
  %8 = load i32, i32* %x_last_basic_block, align 8, !dbg !3383
  %conv3 = sext i32 %8 to i64, !dbg !3383
  %mul4 = mul i64 4, %conv3, !dbg !3383
  %call5 = call i8* @xmalloc(i64 %mul4), !dbg !3383
  %9 = bitcast i8* %call5 to i32*, !dbg !3383
  store i32* %9, i32** %bb_order, align 8, !dbg !3384
  %10 = load i32*, i32** %rc_order, align 8, !dbg !3385
  %call6 = call i32 @pre_and_rev_post_order_compute(i32* null, i32* %10, i8 zeroext 0), !dbg !3386
  store i32 0, i32* %i, align 4, !dbg !3387
  br label %for.cond, !dbg !3389

for.cond:                                         ; preds = %for.inc, %entry
  %11 = load i32, i32* %i, align 4, !dbg !3390
  %12 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3392
  %add.ptr7 = getelementptr inbounds %struct.function, %struct.function* %12, i64 0, !dbg !3392
  %cfg8 = getelementptr inbounds %struct.function, %struct.function* %add.ptr7, i32 0, i32 1, !dbg !3392
  %13 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg8, align 8, !dbg !3392
  %x_n_basic_blocks9 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %13, i32 0, i32 3, !dbg !3392
  %14 = load i32, i32* %x_n_basic_blocks9, align 8, !dbg !3392
  %sub10 = sub nsw i32 %14, 2, !dbg !3393
  %cmp = icmp slt i32 %11, %sub10, !dbg !3394
  br i1 %cmp, label %for.body, label %for.end, !dbg !3395

for.body:                                         ; preds = %for.cond
  %15 = load i32, i32* %i, align 4, !dbg !3396
  %16 = load i32*, i32** %bb_order, align 8, !dbg !3397
  %17 = load i32*, i32** %rc_order, align 8, !dbg !3398
  %18 = load i32, i32* %i, align 4, !dbg !3399
  %idxprom = sext i32 %18 to i64, !dbg !3398
  %arrayidx12 = getelementptr inbounds i32, i32* %17, i64 %idxprom, !dbg !3398
  %19 = load i32, i32* %arrayidx12, align 4, !dbg !3398
  %idxprom13 = sext i32 %19 to i64, !dbg !3397
  %arrayidx14 = getelementptr inbounds i32, i32* %16, i64 %idxprom13, !dbg !3397
  store i32 %15, i32* %arrayidx14, align 4, !dbg !3400
  br label %for.inc, !dbg !3397

for.inc:                                          ; preds = %for.body
  %20 = load i32, i32* %i, align 4, !dbg !3401
  %inc = add nsw i32 %20, 1, !dbg !3401
  store i32 %inc, i32* %i, align 4, !dbg !3401
  br label %for.cond, !dbg !3402, !llvm.loop !3403

for.end:                                          ; preds = %for.cond
  %21 = load i32*, i32** %rc_order, align 8, !dbg !3405
  %22 = bitcast i32* %21 to i8*, !dbg !3405
  call void @free(i8* %22), !dbg !3406
  %call15 = call %struct.fibheap* @fibheap_new(), !dbg !3407
  store %struct.fibheap* %call15, %struct.fibheap** %worklist, align 8, !dbg !3408
  %call16 = call %struct.fibheap* @fibheap_new(), !dbg !3409
  store %struct.fibheap* %call16, %struct.fibheap** %pending, align 8, !dbg !3410
  %23 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3411
  %add.ptr17 = getelementptr inbounds %struct.function, %struct.function* %23, i64 0, !dbg !3411
  %cfg18 = getelementptr inbounds %struct.function, %struct.function* %add.ptr17, i32 0, i32 1, !dbg !3411
  %24 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg18, align 8, !dbg !3411
  %x_last_basic_block19 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %24, i32 0, i32 5, !dbg !3411
  %25 = load i32, i32* %x_last_basic_block19, align 8, !dbg !3411
  %call20 = call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %25), !dbg !3412
  store %struct.simple_bitmap_def* %call20, %struct.simple_bitmap_def** %visited, align 8, !dbg !3413
  %26 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3414
  %add.ptr21 = getelementptr inbounds %struct.function, %struct.function* %26, i64 0, !dbg !3414
  %cfg22 = getelementptr inbounds %struct.function, %struct.function* %add.ptr21, i32 0, i32 1, !dbg !3414
  %27 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg22, align 8, !dbg !3414
  %x_last_basic_block23 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %27, i32 0, i32 5, !dbg !3414
  %28 = load i32, i32* %x_last_basic_block23, align 8, !dbg !3414
  %call24 = call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %28), !dbg !3415
  store %struct.simple_bitmap_def* %call24, %struct.simple_bitmap_def** %in_worklist, align 8, !dbg !3416
  %29 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3417
  %add.ptr25 = getelementptr inbounds %struct.function, %struct.function* %29, i64 0, !dbg !3417
  %cfg26 = getelementptr inbounds %struct.function, %struct.function* %add.ptr25, i32 0, i32 1, !dbg !3417
  %30 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg26, align 8, !dbg !3417
  %x_last_basic_block27 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %30, i32 0, i32 5, !dbg !3417
  %31 = load i32, i32* %x_last_basic_block27, align 8, !dbg !3417
  %call28 = call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %31), !dbg !3418
  store %struct.simple_bitmap_def* %call28, %struct.simple_bitmap_def** %in_pending, align 8, !dbg !3419
  %32 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %in_worklist, align 8, !dbg !3420
  call void @sbitmap_zero(%struct.simple_bitmap_def* %32), !dbg !3421
  %33 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3422
  %add.ptr29 = getelementptr inbounds %struct.function, %struct.function* %33, i64 0, !dbg !3422
  %cfg30 = getelementptr inbounds %struct.function, %struct.function* %add.ptr29, i32 0, i32 1, !dbg !3422
  %34 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg30, align 8, !dbg !3422
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %34, i32 0, i32 0, !dbg !3422
  %35 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !3422
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %35, i32 0, i32 6, !dbg !3422
  %36 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !3422
  store %struct.basic_block_def* %36, %struct.basic_block_def** %bb, align 8, !dbg !3422
  br label %for.cond31, !dbg !3422

for.cond31:                                       ; preds = %for.inc41, %for.end
  %37 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3424
  %38 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3424
  %add.ptr32 = getelementptr inbounds %struct.function, %struct.function* %38, i64 0, !dbg !3424
  %cfg33 = getelementptr inbounds %struct.function, %struct.function* %add.ptr32, i32 0, i32 1, !dbg !3424
  %39 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg33, align 8, !dbg !3424
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %39, i32 0, i32 1, !dbg !3424
  %40 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !3424
  %cmp34 = icmp ne %struct.basic_block_def* %37, %40, !dbg !3424
  br i1 %cmp34, label %for.body36, label %for.end43, !dbg !3422

for.body36:                                       ; preds = %for.cond31
  %41 = load %struct.fibheap*, %struct.fibheap** %pending, align 8, !dbg !3426
  %42 = load i32*, i32** %bb_order, align 8, !dbg !3427
  %43 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3428
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %43, i32 0, i32 9, !dbg !3429
  %44 = load i32, i32* %index, align 8, !dbg !3429
  %idxprom37 = sext i32 %44 to i64, !dbg !3427
  %arrayidx38 = getelementptr inbounds i32, i32* %42, i64 %idxprom37, !dbg !3427
  %45 = load i32, i32* %arrayidx38, align 4, !dbg !3427
  %conv39 = sext i32 %45 to i64, !dbg !3427
  %46 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3430
  %47 = bitcast %struct.basic_block_def* %46 to i8*, !dbg !3430
  %call40 = call %struct.fibnode* @fibheap_insert(%struct.fibheap* %41, i64 %conv39, i8* %47), !dbg !3431
  br label %for.inc41, !dbg !3431

for.inc41:                                        ; preds = %for.body36
  %48 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3424
  %next_bb42 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %48, i32 0, i32 6, !dbg !3424
  %49 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb42, align 8, !dbg !3424
  store %struct.basic_block_def* %49, %struct.basic_block_def** %bb, align 8, !dbg !3424
  br label %for.cond31, !dbg !3424, !llvm.loop !3432

for.end43:                                        ; preds = %for.cond31
  %50 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %in_pending, align 8, !dbg !3434
  call void @sbitmap_ones(%struct.simple_bitmap_def* %50), !dbg !3435
  br label %while.cond, !dbg !3436

while.cond:                                       ; preds = %while.end, %for.end43
  %51 = load i8, i8* %success, align 1, !dbg !3437
  %conv44 = zext i8 %51 to i32, !dbg !3437
  %tobool = icmp ne i32 %conv44, 0, !dbg !3437
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !3438

land.rhs:                                         ; preds = %while.cond
  %52 = load %struct.fibheap*, %struct.fibheap** %pending, align 8, !dbg !3439
  %call45 = call i32 @fibheap_empty(%struct.fibheap* %52), !dbg !3440
  %tobool46 = icmp ne i32 %call45, 0, !dbg !3441
  %lnot = xor i1 %tobool46, true, !dbg !3441
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %53 = phi i1 [ false, %while.cond ], [ %lnot, %land.rhs ], !dbg !3442
  br i1 %53, label %while.body, label %while.end302, !dbg !3436

while.body:                                       ; preds = %land.end
  %54 = load %struct.fibheap*, %struct.fibheap** %pending, align 8, !dbg !3443
  store %struct.fibheap* %54, %struct.fibheap** %fibheap_swap, align 8, !dbg !3445
  %55 = load %struct.fibheap*, %struct.fibheap** %worklist, align 8, !dbg !3446
  store %struct.fibheap* %55, %struct.fibheap** %pending, align 8, !dbg !3447
  %56 = load %struct.fibheap*, %struct.fibheap** %fibheap_swap, align 8, !dbg !3448
  store %struct.fibheap* %56, %struct.fibheap** %worklist, align 8, !dbg !3449
  %57 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %in_pending, align 8, !dbg !3450
  store %struct.simple_bitmap_def* %57, %struct.simple_bitmap_def** %sbitmap_swap, align 8, !dbg !3451
  %58 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %in_worklist, align 8, !dbg !3452
  store %struct.simple_bitmap_def* %58, %struct.simple_bitmap_def** %in_pending, align 8, !dbg !3453
  %59 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %sbitmap_swap, align 8, !dbg !3454
  store %struct.simple_bitmap_def* %59, %struct.simple_bitmap_def** %in_worklist, align 8, !dbg !3455
  %60 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %visited, align 8, !dbg !3456
  call void @sbitmap_zero(%struct.simple_bitmap_def* %60), !dbg !3457
  br label %while.cond47, !dbg !3458

while.cond47:                                     ; preds = %if.end301, %while.body
  %61 = load %struct.fibheap*, %struct.fibheap** %worklist, align 8, !dbg !3459
  %call48 = call i32 @fibheap_empty(%struct.fibheap* %61), !dbg !3460
  %tobool49 = icmp ne i32 %call48, 0, !dbg !3461
  %lnot50 = xor i1 %tobool49, true, !dbg !3461
  br i1 %lnot50, label %while.body51, label %while.end, !dbg !3458

while.body51:                                     ; preds = %while.cond47
  %62 = load %struct.fibheap*, %struct.fibheap** %worklist, align 8, !dbg !3462
  %call52 = call i8* @fibheap_extract_min(%struct.fibheap* %62), !dbg !3464
  %63 = bitcast i8* %call52 to %struct.basic_block_def*, !dbg !3465
  store %struct.basic_block_def* %63, %struct.basic_block_def** %bb, align 8, !dbg !3466
  %64 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %in_worklist, align 8, !dbg !3467
  %65 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3468
  %index53 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %65, i32 0, i32 9, !dbg !3469
  %66 = load i32, i32* %index53, align 8, !dbg !3469
  call void @RESET_BIT(%struct.simple_bitmap_def* %64, i32 %66), !dbg !3470
  %67 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %visited, align 8, !dbg !3471
  %elms = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %67, i32 0, i32 3, !dbg !3471
  %68 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3471
  %index54 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %68, i32 0, i32 9, !dbg !3471
  %69 = load i32, i32* %index54, align 8, !dbg !3471
  %div = udiv i32 %69, 64, !dbg !3471
  %idxprom55 = zext i32 %div to i64, !dbg !3471
  %arrayidx56 = getelementptr inbounds [1 x i64], [1 x i64]* %elms, i64 0, i64 %idxprom55, !dbg !3471
  %70 = load i64, i64* %arrayidx56, align 8, !dbg !3471
  %71 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3471
  %index57 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %71, i32 0, i32 9, !dbg !3471
  %72 = load i32, i32* %index57, align 8, !dbg !3471
  %rem = urem i32 %72, 64, !dbg !3471
  %sh_prom = zext i32 %rem to i64, !dbg !3471
  %shr = lshr i64 %70, %sh_prom, !dbg !3471
  %and = and i64 %shr, 1, !dbg !3471
  %tobool58 = icmp ne i64 %and, 0, !dbg !3471
  br i1 %tobool58, label %if.end301, label %if.then, !dbg !3473

if.then:                                          ; preds = %while.body51
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !3474, metadata !DIExpression()), !dbg !3476
  call void @llvm.dbg.declare(metadata %struct.edge_iterator* %ei, metadata !3477, metadata !DIExpression()), !dbg !3478
  call void @llvm.dbg.declare(metadata i32* %oldinsz, metadata !3479, metadata !DIExpression()), !dbg !3480
  call void @llvm.dbg.declare(metadata i32* %oldoutsz, metadata !3481, metadata !DIExpression()), !dbg !3482
  %73 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %visited, align 8, !dbg !3483
  %74 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3484
  %index59 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %74, i32 0, i32 9, !dbg !3485
  %75 = load i32, i32* %index59, align 8, !dbg !3485
  call void @SET_BIT(%struct.simple_bitmap_def* %73, i32 %75), !dbg !3486
  %76 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3487
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %76, i32 0, i32 2, !dbg !3487
  %77 = load i8*, i8** %aux, align 8, !dbg !3487
  %78 = bitcast i8* %77 to %struct.variable_tracking_info_def*, !dbg !3487
  %in = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %78, i32 0, i32 1, !dbg !3489
  %vars = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %in, i32 0, i32 2, !dbg !3490
  %79 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars, align 8, !dbg !3490
  %tobool60 = icmp ne %struct.shared_hash_def* %79, null, !dbg !3487
  br i1 %tobool60, label %if.then61, label %if.else, !dbg !3491

if.then61:                                        ; preds = %if.then
  %80 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3492
  %aux62 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %80, i32 0, i32 2, !dbg !3492
  %81 = load i8*, i8** %aux62, align 8, !dbg !3492
  %82 = bitcast i8* %81 to %struct.variable_tracking_info_def*, !dbg !3492
  %in63 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %82, i32 0, i32 1, !dbg !3494
  %vars64 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %in63, i32 0, i32 2, !dbg !3495
  %83 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars64, align 8, !dbg !3495
  %call65 = call %struct.htab* @shared_hash_htab(%struct.shared_hash_def* %83), !dbg !3496
  %call66 = call i64 @htab_size(%struct.htab* %call65), !dbg !3497
  %84 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3498
  %aux67 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %84, i32 0, i32 2, !dbg !3498
  %85 = load i8*, i8** %aux67, align 8, !dbg !3498
  %86 = bitcast i8* %85 to %struct.variable_tracking_info_def*, !dbg !3498
  %out = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %86, i32 0, i32 2, !dbg !3499
  %vars68 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %out, i32 0, i32 2, !dbg !3500
  %87 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars68, align 8, !dbg !3500
  %call69 = call %struct.htab* @shared_hash_htab(%struct.shared_hash_def* %87), !dbg !3501
  %call70 = call i64 @htab_size(%struct.htab* %call69), !dbg !3502
  %add = add i64 %call66, %call70, !dbg !3503
  %88 = load i32, i32* %htabsz, align 4, !dbg !3504
  %conv71 = sext i32 %88 to i64, !dbg !3504
  %sub72 = sub i64 %conv71, %add, !dbg !3504
  %conv73 = trunc i64 %sub72 to i32, !dbg !3504
  store i32 %conv73, i32* %htabsz, align 4, !dbg !3504
  %89 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3505
  %aux74 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %89, i32 0, i32 2, !dbg !3505
  %90 = load i8*, i8** %aux74, align 8, !dbg !3505
  %91 = bitcast i8* %90 to %struct.variable_tracking_info_def*, !dbg !3505
  %in75 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %91, i32 0, i32 1, !dbg !3506
  %vars76 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %in75, i32 0, i32 2, !dbg !3507
  %92 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars76, align 8, !dbg !3507
  %call77 = call %struct.htab* @shared_hash_htab(%struct.shared_hash_def* %92), !dbg !3508
  %call78 = call i64 @htab_elements(%struct.htab* %call77), !dbg !3509
  %conv79 = trunc i64 %call78 to i32, !dbg !3509
  store i32 %conv79, i32* %oldinsz, align 4, !dbg !3510
  %93 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3511
  %aux80 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %93, i32 0, i32 2, !dbg !3511
  %94 = load i8*, i8** %aux80, align 8, !dbg !3511
  %95 = bitcast i8* %94 to %struct.variable_tracking_info_def*, !dbg !3511
  %out81 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %95, i32 0, i32 2, !dbg !3512
  %vars82 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %out81, i32 0, i32 2, !dbg !3513
  %96 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars82, align 8, !dbg !3513
  %call83 = call %struct.htab* @shared_hash_htab(%struct.shared_hash_def* %96), !dbg !3514
  %call84 = call i64 @htab_elements(%struct.htab* %call83), !dbg !3515
  %conv85 = trunc i64 %call84 to i32, !dbg !3515
  store i32 %conv85, i32* %oldoutsz, align 4, !dbg !3516
  br label %if.end, !dbg !3517

if.else:                                          ; preds = %if.then
  store i32 0, i32* %oldoutsz, align 4, !dbg !3518
  store i32 0, i32* %oldinsz, align 4, !dbg !3519
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then61
  %97 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !3520
  %tobool86 = icmp ne i32 %97, 0, !dbg !3520
  br i1 %tobool86, label %if.then87, label %if.else138, !dbg !3522

if.then87:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %in88, metadata !3523, metadata !DIExpression()), !dbg !3525
  %98 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3526
  %aux89 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %98, i32 0, i32 2, !dbg !3526
  %99 = load i8*, i8** %aux89, align 8, !dbg !3526
  %100 = bitcast i8* %99 to %struct.variable_tracking_info_def*, !dbg !3526
  %in90 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %100, i32 0, i32 1, !dbg !3527
  store %struct.dataflow_set_def* %in90, %struct.dataflow_set_def** %in88, align 8, !dbg !3525
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %first_out, metadata !3528, metadata !DIExpression()), !dbg !3529
  store %struct.dataflow_set_def* null, %struct.dataflow_set_def** %first_out, align 8, !dbg !3529
  call void @llvm.dbg.declare(metadata i8* %first, metadata !3530, metadata !DIExpression()), !dbg !3531
  store i8 1, i8* %first, align 1, !dbg !3531
  call void @llvm.dbg.declare(metadata i8* %adjust, metadata !3532, metadata !DIExpression()), !dbg !3533
  store i8 0, i8* %adjust, align 1, !dbg !3533
  %101 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %in88, align 8, !dbg !3534
  call void @dataflow_set_clear(%struct.dataflow_set_def* %101), !dbg !3535
  store i8 1, i8* @dst_can_be_shared, align 1, !dbg !3536
  %102 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3537
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %102, i32 0, i32 0, !dbg !3537
  %call91 = call { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds), !dbg !3537
  %103 = bitcast %struct.edge_iterator* %tmp to { i32, %struct.VEC_edge_gc** }*, !dbg !3537
  %104 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %103, i32 0, i32 0, !dbg !3537
  %105 = extractvalue { i32, %struct.VEC_edge_gc** } %call91, 0, !dbg !3537
  store i32 %105, i32* %104, align 8, !dbg !3537
  %106 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %103, i32 0, i32 1, !dbg !3537
  %107 = extractvalue { i32, %struct.VEC_edge_gc** } %call91, 1, !dbg !3537
  store %struct.VEC_edge_gc** %107, %struct.VEC_edge_gc*** %106, align 8, !dbg !3537
  %108 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !3537
  %109 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !3537
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %108, i8* align 8 %109, i64 16, i1 false), !dbg !3537
  br label %for.cond92, !dbg !3537

for.cond92:                                       ; preds = %for.inc123, %if.then87
  %110 = bitcast %struct.edge_iterator* %ei to { i32, %struct.VEC_edge_gc** }*, !dbg !3539
  %111 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %110, i32 0, i32 0, !dbg !3539
  %112 = load i32, i32* %111, align 8, !dbg !3539
  %113 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %110, i32 0, i32 1, !dbg !3539
  %114 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %113, align 8, !dbg !3539
  %call93 = call zeroext i8 @ei_cond(i32 %112, %struct.VEC_edge_gc** %114, %struct.edge_def** %e), !dbg !3539
  %tobool94 = icmp ne i8 %call93, 0, !dbg !3537
  br i1 %tobool94, label %for.body95, label %for.end124, !dbg !3537

for.body95:                                       ; preds = %for.cond92
  %115 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3541
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %115, i32 0, i32 0, !dbg !3541
  %116 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !3541
  %aux96 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %116, i32 0, i32 2, !dbg !3541
  %117 = load i8*, i8** %aux96, align 8, !dbg !3541
  %118 = bitcast i8* %117 to %struct.variable_tracking_info_def*, !dbg !3541
  %flooded = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %118, i32 0, i32 5, !dbg !3543
  %119 = load i8, i8* %flooded, align 1, !dbg !3543
  %tobool97 = icmp ne i8 %119, 0, !dbg !3541
  br i1 %tobool97, label %if.else108, label %if.then98, !dbg !3544

if.then98:                                        ; preds = %for.body95
  %120 = load i32*, i32** %bb_order, align 8, !dbg !3545
  %121 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3545
  %index99 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %121, i32 0, i32 9, !dbg !3545
  %122 = load i32, i32* %index99, align 8, !dbg !3545
  %idxprom100 = sext i32 %122 to i64, !dbg !3545
  %arrayidx101 = getelementptr inbounds i32, i32* %120, i64 %idxprom100, !dbg !3545
  %123 = load i32, i32* %arrayidx101, align 4, !dbg !3545
  %124 = load i32*, i32** %bb_order, align 8, !dbg !3545
  %125 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3545
  %src102 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %125, i32 0, i32 0, !dbg !3545
  %126 = load %struct.basic_block_def*, %struct.basic_block_def** %src102, align 8, !dbg !3545
  %index103 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %126, i32 0, i32 9, !dbg !3545
  %127 = load i32, i32* %index103, align 8, !dbg !3545
  %idxprom104 = sext i32 %127 to i64, !dbg !3545
  %arrayidx105 = getelementptr inbounds i32, i32* %124, i64 %idxprom104, !dbg !3545
  %128 = load i32, i32* %arrayidx105, align 4, !dbg !3545
  %cmp106 = icmp sle i32 %123, %128, !dbg !3545
  br i1 %cmp106, label %cond.false, label %cond.true, !dbg !3545

cond.true:                                        ; preds = %if.then98
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 6014, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !3545
  br label %cond.end, !dbg !3545

cond.false:                                       ; preds = %if.then98
  br label %cond.end, !dbg !3545

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !3545
  br label %if.end122, !dbg !3545

if.else108:                                       ; preds = %for.body95
  %129 = load i8, i8* %first, align 1, !dbg !3546
  %tobool109 = icmp ne i8 %129, 0, !dbg !3546
  br i1 %tobool109, label %if.then110, label %if.else117, !dbg !3548

if.then110:                                       ; preds = %if.else108
  %130 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %in88, align 8, !dbg !3549
  %131 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3551
  %src111 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %131, i32 0, i32 0, !dbg !3551
  %132 = load %struct.basic_block_def*, %struct.basic_block_def** %src111, align 8, !dbg !3551
  %aux112 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %132, i32 0, i32 2, !dbg !3551
  %133 = load i8*, i8** %aux112, align 8, !dbg !3551
  %134 = bitcast i8* %133 to %struct.variable_tracking_info_def*, !dbg !3551
  %out113 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %134, i32 0, i32 2, !dbg !3552
  call void @dataflow_set_copy(%struct.dataflow_set_def* %130, %struct.dataflow_set_def* %out113), !dbg !3553
  %135 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3554
  %src114 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %135, i32 0, i32 0, !dbg !3554
  %136 = load %struct.basic_block_def*, %struct.basic_block_def** %src114, align 8, !dbg !3554
  %aux115 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %136, i32 0, i32 2, !dbg !3554
  %137 = load i8*, i8** %aux115, align 8, !dbg !3554
  %138 = bitcast i8* %137 to %struct.variable_tracking_info_def*, !dbg !3554
  %out116 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %138, i32 0, i32 2, !dbg !3555
  store %struct.dataflow_set_def* %out116, %struct.dataflow_set_def** %first_out, align 8, !dbg !3556
  store i8 0, i8* %first, align 1, !dbg !3557
  br label %if.end121, !dbg !3558

if.else117:                                       ; preds = %if.else108
  %139 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %in88, align 8, !dbg !3559
  %140 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3561
  %src118 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %140, i32 0, i32 0, !dbg !3561
  %141 = load %struct.basic_block_def*, %struct.basic_block_def** %src118, align 8, !dbg !3561
  %aux119 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %141, i32 0, i32 2, !dbg !3561
  %142 = load i8*, i8** %aux119, align 8, !dbg !3561
  %143 = bitcast i8* %142 to %struct.variable_tracking_info_def*, !dbg !3561
  %out120 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %143, i32 0, i32 2, !dbg !3562
  call void @dataflow_set_merge(%struct.dataflow_set_def* %139, %struct.dataflow_set_def* %out120), !dbg !3563
  store i8 1, i8* %adjust, align 1, !dbg !3564
  br label %if.end121

if.end121:                                        ; preds = %if.else117, %if.then110
  br label %if.end122

if.end122:                                        ; preds = %if.end121, %cond.end
  br label %for.inc123, !dbg !3543

for.inc123:                                       ; preds = %if.end122
  call void @ei_next(%struct.edge_iterator* %ei), !dbg !3539
  br label %for.cond92, !dbg !3539, !llvm.loop !3565

for.end124:                                       ; preds = %for.cond92
  %144 = load i8, i8* %adjust, align 1, !dbg !3567
  %tobool125 = icmp ne i8 %144, 0, !dbg !3567
  br i1 %tobool125, label %if.then126, label %if.end135, !dbg !3569

if.then126:                                       ; preds = %for.end124
  %145 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %in88, align 8, !dbg !3570
  %146 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3572
  %aux127 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %146, i32 0, i32 2, !dbg !3572
  %147 = load i8*, i8** %aux127, align 8, !dbg !3572
  %148 = bitcast i8* %147 to %struct.variable_tracking_info_def*, !dbg !3572
  %permp = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %148, i32 0, i32 3, !dbg !3573
  call void @dataflow_post_merge_adjust(%struct.dataflow_set_def* %145, %struct.dataflow_set_def** %permp), !dbg !3574
  %149 = load i8, i8* @dst_can_be_shared, align 1, !dbg !3575
  %tobool128 = icmp ne i8 %149, 0, !dbg !3575
  br i1 %tobool128, label %if.then129, label %if.end134, !dbg !3577

if.then129:                                       ; preds = %if.then126
  %150 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %in88, align 8, !dbg !3578
  %vars130 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %150, i32 0, i32 2, !dbg !3580
  %151 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars130, align 8, !dbg !3580
  call void @shared_hash_destroy(%struct.shared_hash_def* %151), !dbg !3581
  %152 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %first_out, align 8, !dbg !3582
  %vars131 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %152, i32 0, i32 2, !dbg !3583
  %153 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars131, align 8, !dbg !3583
  %call132 = call %struct.shared_hash_def* @shared_hash_copy(%struct.shared_hash_def* %153), !dbg !3584
  %154 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %in88, align 8, !dbg !3585
  %vars133 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %154, i32 0, i32 2, !dbg !3586
  store %struct.shared_hash_def* %call132, %struct.shared_hash_def** %vars133, align 8, !dbg !3587
  br label %if.end134, !dbg !3588

if.end134:                                        ; preds = %if.then129, %if.then126
  br label %if.end135, !dbg !3589

if.end135:                                        ; preds = %if.end134, %for.end124
  %155 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3590
  %aux136 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %155, i32 0, i32 2, !dbg !3590
  %156 = load i8*, i8** %aux136, align 8, !dbg !3590
  %157 = bitcast i8* %156 to %struct.variable_tracking_info_def*, !dbg !3590
  %flooded137 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %157, i32 0, i32 5, !dbg !3591
  store i8 1, i8* %flooded137, align 1, !dbg !3592
  br label %if.end155, !dbg !3593

if.else138:                                       ; preds = %if.end
  %158 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3594
  %aux139 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %158, i32 0, i32 2, !dbg !3594
  %159 = load i8*, i8** %aux139, align 8, !dbg !3594
  %160 = bitcast i8* %159 to %struct.variable_tracking_info_def*, !dbg !3594
  %in140 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %160, i32 0, i32 1, !dbg !3596
  call void @dataflow_set_clear(%struct.dataflow_set_def* %in140), !dbg !3597
  %161 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3598
  %preds142 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %161, i32 0, i32 0, !dbg !3598
  %call143 = call { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %preds142), !dbg !3598
  %162 = bitcast %struct.edge_iterator* %tmp141 to { i32, %struct.VEC_edge_gc** }*, !dbg !3598
  %163 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %162, i32 0, i32 0, !dbg !3598
  %164 = extractvalue { i32, %struct.VEC_edge_gc** } %call143, 0, !dbg !3598
  store i32 %164, i32* %163, align 8, !dbg !3598
  %165 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %162, i32 0, i32 1, !dbg !3598
  %166 = extractvalue { i32, %struct.VEC_edge_gc** } %call143, 1, !dbg !3598
  store %struct.VEC_edge_gc** %166, %struct.VEC_edge_gc*** %165, align 8, !dbg !3598
  %167 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !3598
  %168 = bitcast %struct.edge_iterator* %tmp141 to i8*, !dbg !3598
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %167, i8* align 8 %168, i64 16, i1 false), !dbg !3598
  br label %for.cond144, !dbg !3598

for.cond144:                                      ; preds = %for.inc153, %if.else138
  %169 = bitcast %struct.edge_iterator* %ei to { i32, %struct.VEC_edge_gc** }*, !dbg !3600
  %170 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %169, i32 0, i32 0, !dbg !3600
  %171 = load i32, i32* %170, align 8, !dbg !3600
  %172 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %169, i32 0, i32 1, !dbg !3600
  %173 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %172, align 8, !dbg !3600
  %call145 = call zeroext i8 @ei_cond(i32 %171, %struct.VEC_edge_gc** %173, %struct.edge_def** %e), !dbg !3600
  %tobool146 = icmp ne i8 %call145, 0, !dbg !3598
  br i1 %tobool146, label %for.body147, label %for.end154, !dbg !3598

for.body147:                                      ; preds = %for.cond144
  %174 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3602
  %aux148 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %174, i32 0, i32 2, !dbg !3602
  %175 = load i8*, i8** %aux148, align 8, !dbg !3602
  %176 = bitcast i8* %175 to %struct.variable_tracking_info_def*, !dbg !3602
  %in149 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %176, i32 0, i32 1, !dbg !3603
  %177 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3604
  %src150 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %177, i32 0, i32 0, !dbg !3604
  %178 = load %struct.basic_block_def*, %struct.basic_block_def** %src150, align 8, !dbg !3604
  %aux151 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %178, i32 0, i32 2, !dbg !3604
  %179 = load i8*, i8** %aux151, align 8, !dbg !3604
  %180 = bitcast i8* %179 to %struct.variable_tracking_info_def*, !dbg !3604
  %out152 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %180, i32 0, i32 2, !dbg !3605
  call void @dataflow_set_union(%struct.dataflow_set_def* %in149, %struct.dataflow_set_def* %out152), !dbg !3606
  br label %for.inc153, !dbg !3606

for.inc153:                                       ; preds = %for.body147
  call void @ei_next(%struct.edge_iterator* %ei), !dbg !3600
  br label %for.cond144, !dbg !3600, !llvm.loop !3607

for.end154:                                       ; preds = %for.cond144
  br label %if.end155

if.end155:                                        ; preds = %for.end154, %if.end135
  %181 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3609
  %call156 = call zeroext i8 @compute_bb_dataflow(%struct.basic_block_def* %181), !dbg !3610
  store i8 %call156, i8* %changed, align 1, !dbg !3611
  %182 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3612
  %aux157 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %182, i32 0, i32 2, !dbg !3612
  %183 = load i8*, i8** %aux157, align 8, !dbg !3612
  %184 = bitcast i8* %183 to %struct.variable_tracking_info_def*, !dbg !3612
  %in158 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %184, i32 0, i32 1, !dbg !3613
  %vars159 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %in158, i32 0, i32 2, !dbg !3614
  %185 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars159, align 8, !dbg !3614
  %call160 = call %struct.htab* @shared_hash_htab(%struct.shared_hash_def* %185), !dbg !3615
  %call161 = call i64 @htab_size(%struct.htab* %call160), !dbg !3616
  %186 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3617
  %aux162 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %186, i32 0, i32 2, !dbg !3617
  %187 = load i8*, i8** %aux162, align 8, !dbg !3617
  %188 = bitcast i8* %187 to %struct.variable_tracking_info_def*, !dbg !3617
  %out163 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %188, i32 0, i32 2, !dbg !3618
  %vars164 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %out163, i32 0, i32 2, !dbg !3619
  %189 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars164, align 8, !dbg !3619
  %call165 = call %struct.htab* @shared_hash_htab(%struct.shared_hash_def* %189), !dbg !3620
  %call166 = call i64 @htab_size(%struct.htab* %call165), !dbg !3621
  %add167 = add i64 %call161, %call166, !dbg !3622
  %190 = load i32, i32* %htabsz, align 4, !dbg !3623
  %conv168 = sext i32 %190 to i64, !dbg !3623
  %add169 = add i64 %conv168, %add167, !dbg !3623
  %conv170 = trunc i64 %add169 to i32, !dbg !3623
  store i32 %conv170, i32* %htabsz, align 4, !dbg !3623
  %191 = load i32, i32* %htabmax, align 4, !dbg !3624
  %tobool171 = icmp ne i32 %191, 0, !dbg !3624
  br i1 %tobool171, label %land.lhs.true, label %if.end184, !dbg !3626

land.lhs.true:                                    ; preds = %if.end155
  %192 = load i32, i32* %htabsz, align 4, !dbg !3627
  %193 = load i32, i32* %htabmax, align 4, !dbg !3628
  %cmp172 = icmp sgt i32 %192, %193, !dbg !3629
  br i1 %cmp172, label %if.then174, label %if.end184, !dbg !3630

if.then174:                                       ; preds = %land.lhs.true
  %194 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !3631
  %tobool175 = icmp ne i32 %194, 0, !dbg !3631
  br i1 %tobool175, label %if.then176, label %if.else178, !dbg !3634

if.then176:                                       ; preds = %if.then174
  %195 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3635
  %add.ptr177 = getelementptr inbounds %struct.function, %struct.function* %195, i64 0, !dbg !3635
  %decl = getelementptr inbounds %struct.function, %struct.function* %add.ptr177, i32 0, i32 6, !dbg !3635
  %196 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !3635
  %decl_minimal = bitcast %union.tree_node* %196 to %struct.tree_decl_minimal*, !dbg !3635
  %locus = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %decl_minimal, i32 0, i32 1, !dbg !3635
  %197 = load i32, i32* %locus, align 8, !dbg !3635
  call void (i32, i8*, ...) @inform(i32 %197, i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.22, i64 0, i64 0)), !dbg !3636
  br label %if.end183, !dbg !3636

if.else178:                                       ; preds = %if.then174
  %198 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3637
  %add.ptr179 = getelementptr inbounds %struct.function, %struct.function* %198, i64 0, !dbg !3637
  %decl180 = getelementptr inbounds %struct.function, %struct.function* %add.ptr179, i32 0, i32 6, !dbg !3637
  %199 = load %union.tree_node*, %union.tree_node** %decl180, align 8, !dbg !3637
  %decl_minimal181 = bitcast %union.tree_node* %199 to %struct.tree_decl_minimal*, !dbg !3637
  %locus182 = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %decl_minimal181, i32 0, i32 1, !dbg !3637
  %200 = load i32, i32* %locus182, align 8, !dbg !3637
  call void (i32, i8*, ...) @inform(i32 %200, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.23, i64 0, i64 0)), !dbg !3638
  br label %if.end183

if.end183:                                        ; preds = %if.else178, %if.then176
  store i8 0, i8* %success, align 1, !dbg !3639
  br label %while.end, !dbg !3640

if.end184:                                        ; preds = %land.lhs.true, %if.end155
  %201 = load i8, i8* %changed, align 1, !dbg !3641
  %tobool185 = icmp ne i8 %201, 0, !dbg !3641
  br i1 %tobool185, label %if.then186, label %if.end266, !dbg !3643

if.then186:                                       ; preds = %if.end184
  %202 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3644
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %202, i32 0, i32 1, !dbg !3644
  %call188 = call { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %succs), !dbg !3644
  %203 = bitcast %struct.edge_iterator* %tmp187 to { i32, %struct.VEC_edge_gc** }*, !dbg !3644
  %204 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %203, i32 0, i32 0, !dbg !3644
  %205 = extractvalue { i32, %struct.VEC_edge_gc** } %call188, 0, !dbg !3644
  store i32 %205, i32* %204, align 8, !dbg !3644
  %206 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %203, i32 0, i32 1, !dbg !3644
  %207 = extractvalue { i32, %struct.VEC_edge_gc** } %call188, 1, !dbg !3644
  store %struct.VEC_edge_gc** %207, %struct.VEC_edge_gc*** %206, align 8, !dbg !3644
  %208 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !3644
  %209 = bitcast %struct.edge_iterator* %tmp187 to i8*, !dbg !3644
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %208, i8* align 8 %209, i64 16, i1 false), !dbg !3644
  br label %for.cond189, !dbg !3644

for.cond189:                                      ; preds = %for.inc264, %if.then186
  %210 = bitcast %struct.edge_iterator* %ei to { i32, %struct.VEC_edge_gc** }*, !dbg !3647
  %211 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %210, i32 0, i32 0, !dbg !3647
  %212 = load i32, i32* %211, align 8, !dbg !3647
  %213 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %210, i32 0, i32 1, !dbg !3647
  %214 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %213, align 8, !dbg !3647
  %call190 = call zeroext i8 @ei_cond(i32 %212, %struct.VEC_edge_gc** %214, %struct.edge_def** %e), !dbg !3647
  %tobool191 = icmp ne i8 %call190, 0, !dbg !3644
  br i1 %tobool191, label %for.body192, label %for.end265, !dbg !3644

for.body192:                                      ; preds = %for.cond189
  %215 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3649
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %215, i32 0, i32 1, !dbg !3652
  %216 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !3652
  %217 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3653
  %add.ptr193 = getelementptr inbounds %struct.function, %struct.function* %217, i64 0, !dbg !3653
  %cfg194 = getelementptr inbounds %struct.function, %struct.function* %add.ptr193, i32 0, i32 1, !dbg !3653
  %218 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg194, align 8, !dbg !3653
  %x_exit_block_ptr195 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %218, i32 0, i32 1, !dbg !3653
  %219 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr195, align 8, !dbg !3653
  %cmp196 = icmp eq %struct.basic_block_def* %216, %219, !dbg !3654
  br i1 %cmp196, label %if.then198, label %if.end199, !dbg !3655

if.then198:                                       ; preds = %for.body192
  br label %for.inc264, !dbg !3656

if.end199:                                        ; preds = %for.body192
  %220 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %visited, align 8, !dbg !3657
  %elms200 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %220, i32 0, i32 3, !dbg !3657
  %221 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3657
  %dest201 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %221, i32 0, i32 1, !dbg !3657
  %222 = load %struct.basic_block_def*, %struct.basic_block_def** %dest201, align 8, !dbg !3657
  %index202 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %222, i32 0, i32 9, !dbg !3657
  %223 = load i32, i32* %index202, align 8, !dbg !3657
  %div203 = udiv i32 %223, 64, !dbg !3657
  %idxprom204 = zext i32 %div203 to i64, !dbg !3657
  %arrayidx205 = getelementptr inbounds [1 x i64], [1 x i64]* %elms200, i64 0, i64 %idxprom204, !dbg !3657
  %224 = load i64, i64* %arrayidx205, align 8, !dbg !3657
  %225 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3657
  %dest206 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %225, i32 0, i32 1, !dbg !3657
  %226 = load %struct.basic_block_def*, %struct.basic_block_def** %dest206, align 8, !dbg !3657
  %index207 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %226, i32 0, i32 9, !dbg !3657
  %227 = load i32, i32* %index207, align 8, !dbg !3657
  %rem208 = urem i32 %227, 64, !dbg !3657
  %sh_prom209 = zext i32 %rem208 to i64, !dbg !3657
  %shr210 = lshr i64 %224, %sh_prom209, !dbg !3657
  %and211 = and i64 %shr210, 1, !dbg !3657
  %tobool212 = icmp ne i64 %and211, 0, !dbg !3657
  br i1 %tobool212, label %if.then213, label %if.else238, !dbg !3659

if.then213:                                       ; preds = %if.end199
  %228 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %in_pending, align 8, !dbg !3660
  %elms214 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %228, i32 0, i32 3, !dbg !3660
  %229 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3660
  %dest215 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %229, i32 0, i32 1, !dbg !3660
  %230 = load %struct.basic_block_def*, %struct.basic_block_def** %dest215, align 8, !dbg !3660
  %index216 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %230, i32 0, i32 9, !dbg !3660
  %231 = load i32, i32* %index216, align 8, !dbg !3660
  %div217 = udiv i32 %231, 64, !dbg !3660
  %idxprom218 = zext i32 %div217 to i64, !dbg !3660
  %arrayidx219 = getelementptr inbounds [1 x i64], [1 x i64]* %elms214, i64 0, i64 %idxprom218, !dbg !3660
  %232 = load i64, i64* %arrayidx219, align 8, !dbg !3660
  %233 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3660
  %dest220 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %233, i32 0, i32 1, !dbg !3660
  %234 = load %struct.basic_block_def*, %struct.basic_block_def** %dest220, align 8, !dbg !3660
  %index221 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %234, i32 0, i32 9, !dbg !3660
  %235 = load i32, i32* %index221, align 8, !dbg !3660
  %rem222 = urem i32 %235, 64, !dbg !3660
  %sh_prom223 = zext i32 %rem222 to i64, !dbg !3660
  %shr224 = lshr i64 %232, %sh_prom223, !dbg !3660
  %and225 = and i64 %shr224, 1, !dbg !3660
  %tobool226 = icmp ne i64 %and225, 0, !dbg !3660
  br i1 %tobool226, label %if.end237, label %if.then227, !dbg !3663

if.then227:                                       ; preds = %if.then213
  %236 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %in_pending, align 8, !dbg !3664
  %237 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3666
  %dest228 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %237, i32 0, i32 1, !dbg !3667
  %238 = load %struct.basic_block_def*, %struct.basic_block_def** %dest228, align 8, !dbg !3667
  %index229 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %238, i32 0, i32 9, !dbg !3668
  %239 = load i32, i32* %index229, align 8, !dbg !3668
  call void @SET_BIT(%struct.simple_bitmap_def* %236, i32 %239), !dbg !3669
  %240 = load %struct.fibheap*, %struct.fibheap** %pending, align 8, !dbg !3670
  %241 = load i32*, i32** %bb_order, align 8, !dbg !3671
  %242 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3672
  %dest230 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %242, i32 0, i32 1, !dbg !3673
  %243 = load %struct.basic_block_def*, %struct.basic_block_def** %dest230, align 8, !dbg !3673
  %index231 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %243, i32 0, i32 9, !dbg !3674
  %244 = load i32, i32* %index231, align 8, !dbg !3674
  %idxprom232 = sext i32 %244 to i64, !dbg !3671
  %arrayidx233 = getelementptr inbounds i32, i32* %241, i64 %idxprom232, !dbg !3671
  %245 = load i32, i32* %arrayidx233, align 4, !dbg !3671
  %conv234 = sext i32 %245 to i64, !dbg !3671
  %246 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3675
  %dest235 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %246, i32 0, i32 1, !dbg !3676
  %247 = load %struct.basic_block_def*, %struct.basic_block_def** %dest235, align 8, !dbg !3676
  %248 = bitcast %struct.basic_block_def* %247 to i8*, !dbg !3675
  %call236 = call %struct.fibnode* @fibheap_insert(%struct.fibheap* %240, i64 %conv234, i8* %248), !dbg !3677
  br label %if.end237, !dbg !3678

if.end237:                                        ; preds = %if.then227, %if.then213
  br label %if.end263, !dbg !3679

if.else238:                                       ; preds = %if.end199
  %249 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %in_worklist, align 8, !dbg !3680
  %elms239 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %249, i32 0, i32 3, !dbg !3680
  %250 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3680
  %dest240 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %250, i32 0, i32 1, !dbg !3680
  %251 = load %struct.basic_block_def*, %struct.basic_block_def** %dest240, align 8, !dbg !3680
  %index241 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %251, i32 0, i32 9, !dbg !3680
  %252 = load i32, i32* %index241, align 8, !dbg !3680
  %div242 = udiv i32 %252, 64, !dbg !3680
  %idxprom243 = zext i32 %div242 to i64, !dbg !3680
  %arrayidx244 = getelementptr inbounds [1 x i64], [1 x i64]* %elms239, i64 0, i64 %idxprom243, !dbg !3680
  %253 = load i64, i64* %arrayidx244, align 8, !dbg !3680
  %254 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3680
  %dest245 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %254, i32 0, i32 1, !dbg !3680
  %255 = load %struct.basic_block_def*, %struct.basic_block_def** %dest245, align 8, !dbg !3680
  %index246 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %255, i32 0, i32 9, !dbg !3680
  %256 = load i32, i32* %index246, align 8, !dbg !3680
  %rem247 = urem i32 %256, 64, !dbg !3680
  %sh_prom248 = zext i32 %rem247 to i64, !dbg !3680
  %shr249 = lshr i64 %253, %sh_prom248, !dbg !3680
  %and250 = and i64 %shr249, 1, !dbg !3680
  %tobool251 = icmp ne i64 %and250, 0, !dbg !3680
  br i1 %tobool251, label %if.end262, label %if.then252, !dbg !3682

if.then252:                                       ; preds = %if.else238
  %257 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %in_worklist, align 8, !dbg !3683
  %258 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3685
  %dest253 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %258, i32 0, i32 1, !dbg !3686
  %259 = load %struct.basic_block_def*, %struct.basic_block_def** %dest253, align 8, !dbg !3686
  %index254 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %259, i32 0, i32 9, !dbg !3687
  %260 = load i32, i32* %index254, align 8, !dbg !3687
  call void @SET_BIT(%struct.simple_bitmap_def* %257, i32 %260), !dbg !3688
  %261 = load %struct.fibheap*, %struct.fibheap** %worklist, align 8, !dbg !3689
  %262 = load i32*, i32** %bb_order, align 8, !dbg !3690
  %263 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3691
  %dest255 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %263, i32 0, i32 1, !dbg !3692
  %264 = load %struct.basic_block_def*, %struct.basic_block_def** %dest255, align 8, !dbg !3692
  %index256 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %264, i32 0, i32 9, !dbg !3693
  %265 = load i32, i32* %index256, align 8, !dbg !3693
  %idxprom257 = sext i32 %265 to i64, !dbg !3690
  %arrayidx258 = getelementptr inbounds i32, i32* %262, i64 %idxprom257, !dbg !3690
  %266 = load i32, i32* %arrayidx258, align 4, !dbg !3690
  %conv259 = sext i32 %266 to i64, !dbg !3690
  %267 = load %struct.edge_def*, %struct.edge_def** %e, align 8, !dbg !3694
  %dest260 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %267, i32 0, i32 1, !dbg !3695
  %268 = load %struct.basic_block_def*, %struct.basic_block_def** %dest260, align 8, !dbg !3695
  %269 = bitcast %struct.basic_block_def* %268 to i8*, !dbg !3694
  %call261 = call %struct.fibnode* @fibheap_insert(%struct.fibheap* %261, i64 %conv259, i8* %269), !dbg !3696
  br label %if.end262, !dbg !3697

if.end262:                                        ; preds = %if.then252, %if.else238
  br label %if.end263

if.end263:                                        ; preds = %if.end262, %if.end237
  br label %for.inc264, !dbg !3698

for.inc264:                                       ; preds = %if.end263, %if.then198
  call void @ei_next(%struct.edge_iterator* %ei), !dbg !3647
  br label %for.cond189, !dbg !3647, !llvm.loop !3699

for.end265:                                       ; preds = %for.cond189
  br label %if.end266, !dbg !3701

if.end266:                                        ; preds = %for.end265, %if.end184
  %270 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3702
  %tobool267 = icmp ne %struct._IO_FILE* %270, null, !dbg !3702
  br i1 %tobool267, label %if.then268, label %if.end286, !dbg !3704

if.then268:                                       ; preds = %if.end266
  %271 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3705
  %272 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3706
  %index269 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %272, i32 0, i32 9, !dbg !3707
  %273 = load i32, i32* %index269, align 8, !dbg !3707
  %274 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3708
  %aux270 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %274, i32 0, i32 2, !dbg !3708
  %275 = load i8*, i8** %aux270, align 8, !dbg !3708
  %276 = bitcast i8* %275 to %struct.variable_tracking_info_def*, !dbg !3708
  %in271 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %276, i32 0, i32 1, !dbg !3709
  %vars272 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %in271, i32 0, i32 2, !dbg !3710
  %277 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars272, align 8, !dbg !3710
  %call273 = call %struct.htab* @shared_hash_htab(%struct.shared_hash_def* %277), !dbg !3711
  %call274 = call i64 @htab_elements(%struct.htab* %call273), !dbg !3712
  %conv275 = trunc i64 %call274 to i32, !dbg !3713
  %278 = load i32, i32* %oldinsz, align 4, !dbg !3714
  %279 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3715
  %aux276 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %279, i32 0, i32 2, !dbg !3715
  %280 = load i8*, i8** %aux276, align 8, !dbg !3715
  %281 = bitcast i8* %280 to %struct.variable_tracking_info_def*, !dbg !3715
  %out277 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %281, i32 0, i32 2, !dbg !3716
  %vars278 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %out277, i32 0, i32 2, !dbg !3717
  %282 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars278, align 8, !dbg !3717
  %call279 = call %struct.htab* @shared_hash_htab(%struct.shared_hash_def* %282), !dbg !3718
  %call280 = call i64 @htab_elements(%struct.htab* %call279), !dbg !3719
  %conv281 = trunc i64 %call280 to i32, !dbg !3720
  %283 = load i32, i32* %oldoutsz, align 4, !dbg !3721
  %284 = load %struct.fibheap*, %struct.fibheap** %worklist, align 8, !dbg !3722
  %nodes = getelementptr inbounds %struct.fibheap, %struct.fibheap* %284, i32 0, i32 0, !dbg !3723
  %285 = load i64, i64* %nodes, align 8, !dbg !3723
  %conv282 = trunc i64 %285 to i32, !dbg !3724
  %286 = load %struct.fibheap*, %struct.fibheap** %pending, align 8, !dbg !3725
  %nodes283 = getelementptr inbounds %struct.fibheap, %struct.fibheap* %286, i32 0, i32 0, !dbg !3726
  %287 = load i64, i64* %nodes283, align 8, !dbg !3726
  %conv284 = trunc i64 %287 to i32, !dbg !3727
  %288 = load i32, i32* %htabsz, align 4, !dbg !3728
  %call285 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %271, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.24, i64 0, i64 0), i32 %273, i32 %conv275, i32 %278, i32 %conv281, i32 %283, i32 %conv282, i32 %conv284, i32 %288), !dbg !3729
  br label %if.end286, !dbg !3729

if.end286:                                        ; preds = %if.then268, %if.end266
  %289 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3730
  %tobool287 = icmp ne %struct._IO_FILE* %289, null, !dbg !3730
  br i1 %tobool287, label %land.lhs.true288, label %if.end300, !dbg !3732

land.lhs.true288:                                 ; preds = %if.end286
  %290 = load i32, i32* @dump_flags, align 4, !dbg !3733
  %and289 = and i32 %290, 8, !dbg !3734
  %tobool290 = icmp ne i32 %and289, 0, !dbg !3734
  br i1 %tobool290, label %if.then291, label %if.end300, !dbg !3735

if.then291:                                       ; preds = %land.lhs.true288
  %291 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3736
  %292 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3738
  %index292 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %292, i32 0, i32 9, !dbg !3739
  %293 = load i32, i32* %index292, align 8, !dbg !3739
  %call293 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %291, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.25, i64 0, i64 0), i32 %293), !dbg !3740
  %294 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3741
  %aux294 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %294, i32 0, i32 2, !dbg !3741
  %295 = load i8*, i8** %aux294, align 8, !dbg !3741
  %296 = bitcast i8* %295 to %struct.variable_tracking_info_def*, !dbg !3741
  %in295 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %296, i32 0, i32 1, !dbg !3742
  call void @dump_dataflow_set(%struct.dataflow_set_def* %in295), !dbg !3743
  %297 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3744
  %298 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3745
  %index296 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %298, i32 0, i32 9, !dbg !3746
  %299 = load i32, i32* %index296, align 8, !dbg !3746
  %call297 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %297, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.26, i64 0, i64 0), i32 %299), !dbg !3747
  %300 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3748
  %aux298 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %300, i32 0, i32 2, !dbg !3748
  %301 = load i8*, i8** %aux298, align 8, !dbg !3748
  %302 = bitcast i8* %301 to %struct.variable_tracking_info_def*, !dbg !3748
  %out299 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %302, i32 0, i32 2, !dbg !3749
  call void @dump_dataflow_set(%struct.dataflow_set_def* %out299), !dbg !3750
  br label %if.end300, !dbg !3751

if.end300:                                        ; preds = %if.then291, %land.lhs.true288, %if.end286
  br label %if.end301, !dbg !3752

if.end301:                                        ; preds = %if.end300, %while.body51
  br label %while.cond47, !dbg !3458, !llvm.loop !3753

while.end:                                        ; preds = %if.end183, %while.cond47
  br label %while.cond, !dbg !3436, !llvm.loop !3755

while.end302:                                     ; preds = %land.end
  %303 = load i8, i8* %success, align 1, !dbg !3757
  %conv303 = zext i8 %303 to i32, !dbg !3757
  %tobool304 = icmp ne i32 %conv303, 0, !dbg !3757
  br i1 %tobool304, label %land.lhs.true305, label %if.end329, !dbg !3759

land.lhs.true305:                                 ; preds = %while.end302
  %304 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !3760
  %tobool306 = icmp ne i32 %304, 0, !dbg !3760
  br i1 %tobool306, label %if.then307, label %if.end329, !dbg !3761

if.then307:                                       ; preds = %land.lhs.true305
  %305 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3762
  %add.ptr308 = getelementptr inbounds %struct.function, %struct.function* %305, i64 0, !dbg !3762
  %cfg309 = getelementptr inbounds %struct.function, %struct.function* %add.ptr308, i32 0, i32 1, !dbg !3762
  %306 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg309, align 8, !dbg !3762
  %x_entry_block_ptr310 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %306, i32 0, i32 0, !dbg !3762
  %307 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr310, align 8, !dbg !3762
  %next_bb311 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %307, i32 0, i32 6, !dbg !3762
  %308 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb311, align 8, !dbg !3762
  store %struct.basic_block_def* %308, %struct.basic_block_def** %bb, align 8, !dbg !3762
  br label %for.cond312, !dbg !3762

for.cond312:                                      ; preds = %for.inc326, %if.then307
  %309 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3764
  %310 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3764
  %add.ptr313 = getelementptr inbounds %struct.function, %struct.function* %310, i64 0, !dbg !3764
  %cfg314 = getelementptr inbounds %struct.function, %struct.function* %add.ptr313, i32 0, i32 1, !dbg !3764
  %311 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg314, align 8, !dbg !3764
  %x_exit_block_ptr315 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %311, i32 0, i32 1, !dbg !3764
  %312 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr315, align 8, !dbg !3764
  %cmp316 = icmp ne %struct.basic_block_def* %309, %312, !dbg !3764
  br i1 %cmp316, label %for.body318, label %for.end328, !dbg !3762

for.body318:                                      ; preds = %for.cond312
  %313 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3766
  %aux319 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %313, i32 0, i32 2, !dbg !3766
  %314 = load i8*, i8** %aux319, align 8, !dbg !3766
  %315 = bitcast i8* %314 to %struct.variable_tracking_info_def*, !dbg !3766
  %flooded320 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %315, i32 0, i32 5, !dbg !3766
  %316 = load i8, i8* %flooded320, align 1, !dbg !3766
  %tobool321 = icmp ne i8 %316, 0, !dbg !3766
  br i1 %tobool321, label %cond.false323, label %cond.true322, !dbg !3766

cond.true322:                                     ; preds = %for.body318
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 6122, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !3766
  br label %cond.end324, !dbg !3766

cond.false323:                                    ; preds = %for.body318
  br label %cond.end324, !dbg !3766

cond.end324:                                      ; preds = %cond.false323, %cond.true322
  %cond325 = phi i32 [ 0, %cond.true322 ], [ 0, %cond.false323 ], !dbg !3766
  br label %for.inc326, !dbg !3766

for.inc326:                                       ; preds = %cond.end324
  %317 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3764
  %next_bb327 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %317, i32 0, i32 6, !dbg !3764
  %318 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb327, align 8, !dbg !3764
  store %struct.basic_block_def* %318, %struct.basic_block_def** %bb, align 8, !dbg !3764
  br label %for.cond312, !dbg !3764, !llvm.loop !3767

for.end328:                                       ; preds = %for.cond312
  br label %if.end329, !dbg !3768

if.end329:                                        ; preds = %for.end328, %land.lhs.true305, %while.end302
  %319 = load i32*, i32** %bb_order, align 8, !dbg !3769
  %320 = bitcast i32* %319 to i8*, !dbg !3769
  call void @free(i8* %320), !dbg !3770
  %321 = load %struct.fibheap*, %struct.fibheap** %worklist, align 8, !dbg !3771
  call void @fibheap_delete(%struct.fibheap* %321), !dbg !3772
  %322 = load %struct.fibheap*, %struct.fibheap** %pending, align 8, !dbg !3773
  call void @fibheap_delete(%struct.fibheap* %322), !dbg !3774
  %323 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %visited, align 8, !dbg !3775
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %323, i32 0, i32 0, !dbg !3775
  %324 = load i8*, i8** %popcount, align 8, !dbg !3775
  call void @free(i8* %324), !dbg !3775
  %325 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %visited, align 8, !dbg !3775
  %326 = bitcast %struct.simple_bitmap_def* %325 to i8*, !dbg !3775
  call void @free(i8* %326), !dbg !3775
  %327 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %in_worklist, align 8, !dbg !3776
  %popcount330 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %327, i32 0, i32 0, !dbg !3776
  %328 = load i8*, i8** %popcount330, align 8, !dbg !3776
  call void @free(i8* %328), !dbg !3776
  %329 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %in_worklist, align 8, !dbg !3776
  %330 = bitcast %struct.simple_bitmap_def* %329 to i8*, !dbg !3776
  call void @free(i8* %330), !dbg !3776
  %331 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %in_pending, align 8, !dbg !3777
  %popcount331 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %331, i32 0, i32 0, !dbg !3777
  %332 = load i8*, i8** %popcount331, align 8, !dbg !3777
  call void @free(i8* %332), !dbg !3777
  %333 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %in_pending, align 8, !dbg !3777
  %334 = bitcast %struct.simple_bitmap_def* %333 to i8*, !dbg !3777
  call void @free(i8* %334), !dbg !3777
  %335 = load i8, i8* %success, align 1, !dbg !3778
  ret i8 %335, !dbg !3779
}

declare dso_local void @fancy_abort(i8*, i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @dump_dataflow_sets() #0 !dbg !3780 {
entry:
  %bb = alloca %struct.basic_block_def*, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !3781, metadata !DIExpression()), !dbg !3782
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3783
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, !dbg !3783
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !3783
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3783
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i32 0, i32 0, !dbg !3783
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !3783
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2, i32 0, i32 6, !dbg !3783
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !3783
  store %struct.basic_block_def* %3, %struct.basic_block_def** %bb, align 8, !dbg !3783
  br label %for.cond, !dbg !3783

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3785
  %5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3785
  %add.ptr1 = getelementptr inbounds %struct.function, %struct.function* %5, i64 0, !dbg !3785
  %cfg2 = getelementptr inbounds %struct.function, %struct.function* %add.ptr1, i32 0, i32 1, !dbg !3785
  %6 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2, align 8, !dbg !3785
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %6, i32 0, i32 1, !dbg !3785
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !3785
  %cmp = icmp ne %struct.basic_block_def* %4, %7, !dbg !3785
  br i1 %cmp, label %for.body, label %for.end, !dbg !3783

for.body:                                         ; preds = %for.cond
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3787
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3789
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %9, i32 0, i32 9, !dbg !3790
  %10 = load i32, i32* %index, align 8, !dbg !3790
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %8, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.47, i64 0, i64 0), i32 %10), !dbg !3791
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3792
  %call3 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.48, i64 0, i64 0)), !dbg !3793
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3794
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %12, i32 0, i32 2, !dbg !3794
  %13 = load i8*, i8** %aux, align 8, !dbg !3794
  %14 = bitcast i8* %13 to %struct.variable_tracking_info_def*, !dbg !3794
  %in = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %14, i32 0, i32 1, !dbg !3795
  call void @dump_dataflow_set(%struct.dataflow_set_def* %in), !dbg !3796
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !3797
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.49, i64 0, i64 0)), !dbg !3798
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3799
  %aux5 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %16, i32 0, i32 2, !dbg !3799
  %17 = load i8*, i8** %aux5, align 8, !dbg !3799
  %18 = bitcast i8* %17 to %struct.variable_tracking_info_def*, !dbg !3799
  %out = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %18, i32 0, i32 2, !dbg !3800
  call void @dump_dataflow_set(%struct.dataflow_set_def* %out), !dbg !3801
  br label %for.inc, !dbg !3802

for.inc:                                          ; preds = %for.body
  %19 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3785
  %next_bb6 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %19, i32 0, i32 6, !dbg !3785
  %20 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb6, align 8, !dbg !3785
  store %struct.basic_block_def* %20, %struct.basic_block_def** %bb, align 8, !dbg !3785
  br label %for.cond, !dbg !3785, !llvm.loop !3803

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3805
}

declare dso_local void @dump_flow_info(%struct._IO_FILE*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @vt_emit_notes() #0 !dbg !3806 {
entry:
  %bb = alloca %struct.basic_block_def*, align 8
  %cur = alloca %struct.dataflow_set_def, align 8
  %i = alloca i32, align 4
  %val = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !3807, metadata !DIExpression()), !dbg !3808
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def* %cur, metadata !3809, metadata !DIExpression()), !dbg !3810
  %0 = load %struct.htab*, %struct.htab** @changed_variables, align 8, !dbg !3811
  %call = call i64 @htab_elements(%struct.htab* %0), !dbg !3811
  %tobool = icmp ne i64 %call, 0, !dbg !3811
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3811

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 7851, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !3811
  br label %cond.end, !dbg !3811

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !3811

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !3811
  %1 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3812
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %1, i64 0, !dbg !3812
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !3812
  %2 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !3812
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %2, i32 0, i32 0, !dbg !3812
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !3812
  %next_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %3, i32 0, i32 6, !dbg !3812
  %4 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb, align 8, !dbg !3812
  store %struct.basic_block_def* %4, %struct.basic_block_def** %bb, align 8, !dbg !3812
  br label %for.cond, !dbg !3812

for.cond:                                         ; preds = %for.inc, %cond.end
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3814
  %6 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3814
  %add.ptr1 = getelementptr inbounds %struct.function, %struct.function* %6, i64 0, !dbg !3814
  %cfg2 = getelementptr inbounds %struct.function, %struct.function* %add.ptr1, i32 0, i32 1, !dbg !3814
  %7 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2, align 8, !dbg !3814
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %7, i32 0, i32 1, !dbg !3814
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !3814
  %cmp = icmp ne %struct.basic_block_def* %5, %8, !dbg !3814
  br i1 %cmp, label %for.body, label %for.end, !dbg !3812

for.body:                                         ; preds = %for.cond
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3816
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %9, i32 0, i32 2, !dbg !3816
  %10 = load i8*, i8** %aux, align 8, !dbg !3816
  %11 = bitcast i8* %10 to %struct.variable_tracking_info_def*, !dbg !3816
  %out = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %11, i32 0, i32 2, !dbg !3817
  call void @dataflow_set_clear(%struct.dataflow_set_def* %out), !dbg !3818
  br label %for.inc, !dbg !3818

for.inc:                                          ; preds = %for.body
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3814
  %next_bb3 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %12, i32 0, i32 6, !dbg !3814
  %13 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb3, align 8, !dbg !3814
  store %struct.basic_block_def* %13, %struct.basic_block_def** %bb, align 8, !dbg !3814
  br label %for.cond, !dbg !3814, !llvm.loop !3819

for.end:                                          ; preds = %for.cond
  store i8 1, i8* @emit_notes, align 1, !dbg !3821
  %14 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !3822
  %tobool4 = icmp ne i32 %14, 0, !dbg !3822
  br i1 %tobool4, label %if.then, label %if.end, !dbg !3824

if.then:                                          ; preds = %for.end
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3825, metadata !DIExpression()), !dbg !3827
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %val, metadata !3828, metadata !DIExpression()), !dbg !3829
  store i32 0, i32* %i, align 4, !dbg !3830
  br label %for.cond5, !dbg !3832

for.cond5:                                        ; preds = %for.inc15, %if.then
  %15 = load %struct.VEC_rtx_heap*, %struct.VEC_rtx_heap** @preserved_values, align 8, !dbg !3833
  %tobool6 = icmp ne %struct.VEC_rtx_heap* %15, null, !dbg !3833
  br i1 %tobool6, label %cond.true7, label %cond.false8, !dbg !3833

cond.true7:                                       ; preds = %for.cond5
  %16 = load %struct.VEC_rtx_heap*, %struct.VEC_rtx_heap** @preserved_values, align 8, !dbg !3833
  %base = getelementptr inbounds %struct.VEC_rtx_heap, %struct.VEC_rtx_heap* %16, i32 0, i32 0, !dbg !3833
  br label %cond.end9, !dbg !3833

cond.false8:                                      ; preds = %for.cond5
  br label %cond.end9, !dbg !3833

cond.end9:                                        ; preds = %cond.false8, %cond.true7
  %cond10 = phi %struct.VEC_rtx_base* [ %base, %cond.true7 ], [ null, %cond.false8 ], !dbg !3833
  %17 = load i32, i32* %i, align 4, !dbg !3833
  %call11 = call i32 @VEC_rtx_base_iterate(%struct.VEC_rtx_base* %cond10, i32 %17, %struct.rtx_def** %val), !dbg !3833
  %tobool12 = icmp ne i32 %call11, 0, !dbg !3835
  br i1 %tobool12, label %for.body13, label %for.end16, !dbg !3835

for.body13:                                       ; preds = %cond.end9
  %18 = load %struct.rtx_def*, %struct.rtx_def** %val, align 8, !dbg !3836
  %call14 = call i8* @dv_from_value(%struct.rtx_def* %18), !dbg !3837
  call void @add_cselib_value_chains(i8* %call14), !dbg !3838
  br label %for.inc15, !dbg !3838

for.inc15:                                        ; preds = %for.body13
  %19 = load i32, i32* %i, align 4, !dbg !3839
  %inc = add i32 %19, 1, !dbg !3839
  store i32 %inc, i32* %i, align 4, !dbg !3839
  br label %for.cond5, !dbg !3840, !llvm.loop !3841

for.end16:                                        ; preds = %cond.end9
  %call17 = call %struct.VEC_variable_heap* @VEC_variable_heap_alloc(i32 40), !dbg !3843
  store %struct.VEC_variable_heap* %call17, %struct.VEC_variable_heap** @changed_variables_stack, align 8, !dbg !3844
  %call18 = call %struct.VEC_rtx_heap* @VEC_rtx_heap_alloc(i32 40), !dbg !3845
  store %struct.VEC_rtx_heap* %call18, %struct.VEC_rtx_heap** @changed_values_stack, align 8, !dbg !3846
  br label %if.end, !dbg !3847

if.end:                                           ; preds = %for.end16, %for.end
  call void @dataflow_set_init(%struct.dataflow_set_def* %cur), !dbg !3848
  %20 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3849
  %add.ptr19 = getelementptr inbounds %struct.function, %struct.function* %20, i64 0, !dbg !3849
  %cfg20 = getelementptr inbounds %struct.function, %struct.function* %add.ptr19, i32 0, i32 1, !dbg !3849
  %21 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg20, align 8, !dbg !3849
  %x_entry_block_ptr21 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %21, i32 0, i32 0, !dbg !3849
  %22 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr21, align 8, !dbg !3849
  %next_bb22 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %22, i32 0, i32 6, !dbg !3849
  %23 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb22, align 8, !dbg !3849
  store %struct.basic_block_def* %23, %struct.basic_block_def** %bb, align 8, !dbg !3849
  br label %for.cond23, !dbg !3849

for.cond23:                                       ; preds = %for.inc32, %if.end
  %24 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3851
  %25 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !3851
  %add.ptr24 = getelementptr inbounds %struct.function, %struct.function* %25, i64 0, !dbg !3851
  %cfg25 = getelementptr inbounds %struct.function, %struct.function* %add.ptr24, i32 0, i32 1, !dbg !3851
  %26 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg25, align 8, !dbg !3851
  %x_exit_block_ptr26 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %26, i32 0, i32 1, !dbg !3851
  %27 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr26, align 8, !dbg !3851
  %cmp27 = icmp ne %struct.basic_block_def* %24, %27, !dbg !3851
  br i1 %cmp27, label %for.body28, label %for.end34, !dbg !3849

for.body28:                                       ; preds = %for.cond23
  %28 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3853
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %28, i32 0, i32 7, !dbg !3853
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !3853
  %29 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !3853
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %29, i32 0, i32 0, !dbg !3853
  %30 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !3853
  %31 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3855
  %aux29 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %31, i32 0, i32 2, !dbg !3855
  %32 = load i8*, i8** %aux29, align 8, !dbg !3855
  %33 = bitcast i8* %32 to %struct.variable_tracking_info_def*, !dbg !3855
  %in = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %33, i32 0, i32 1, !dbg !3856
  call void @emit_notes_for_differences(%struct.rtx_def* %30, %struct.dataflow_set_def* %cur, %struct.dataflow_set_def* %in), !dbg !3857
  %34 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3858
  call void @emit_notes_in_bb(%struct.basic_block_def* %34, %struct.dataflow_set_def* %cur), !dbg !3859
  %35 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3860
  %aux30 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %35, i32 0, i32 2, !dbg !3860
  %36 = load i8*, i8** %aux30, align 8, !dbg !3860
  %37 = bitcast i8* %36 to %struct.variable_tracking_info_def*, !dbg !3860
  %in31 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %37, i32 0, i32 1, !dbg !3861
  call void @dataflow_set_clear(%struct.dataflow_set_def* %in31), !dbg !3862
  br label %for.inc32, !dbg !3863

for.inc32:                                        ; preds = %for.body28
  %38 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !3851
  %next_bb33 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %38, i32 0, i32 6, !dbg !3851
  %39 = load %struct.basic_block_def*, %struct.basic_block_def** %next_bb33, align 8, !dbg !3851
  store %struct.basic_block_def* %39, %struct.basic_block_def** %bb, align 8, !dbg !3851
  br label %for.cond23, !dbg !3851, !llvm.loop !3864

for.end34:                                        ; preds = %for.cond23
  call void @dataflow_set_destroy(%struct.dataflow_set_def* %cur), !dbg !3866
  %40 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !3867
  %tobool35 = icmp ne i32 %40, 0, !dbg !3867
  br i1 %tobool35, label %if.then36, label %if.end37, !dbg !3869

if.then36:                                        ; preds = %for.end34
  call void @VEC_variable_heap_free(%struct.VEC_variable_heap** @changed_variables_stack), !dbg !3870
  call void @VEC_rtx_heap_free(%struct.VEC_rtx_heap** @changed_values_stack), !dbg !3872
  br label %if.end37, !dbg !3873

if.end37:                                         ; preds = %if.then36, %for.end34
  store i8 0, i8* @emit_notes, align 1, !dbg !3874
  ret void, !dbg !3875
}

declare dso_local %struct.rtx_def* @delete_insn(%struct.rtx_def*) #2

declare dso_local void @alloc_aux_for_blocks(i32) #2

declare dso_local %struct.alloc_pool_def* @create_alloc_pool(i8*, i64, i64) #2

declare dso_local i8* @pool_alloc(%struct.alloc_pool_def*) #2

declare dso_local %struct.htab* @htab_create(i64, i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @variable_htab_hash(i8* %x) #0 !dbg !3876 {
entry:
  %x.addr = alloca i8*, align 8
  %v = alloca %struct.variable_def*, align 8
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !3877, metadata !DIExpression()), !dbg !3878
  call void @llvm.dbg.declare(metadata %struct.variable_def** %v, metadata !3879, metadata !DIExpression()), !dbg !3881
  %0 = load i8*, i8** %x.addr, align 8, !dbg !3882
  %1 = bitcast i8* %0 to %struct.variable_def*, !dbg !3883
  store %struct.variable_def* %1, %struct.variable_def** %v, align 8, !dbg !3881
  %2 = load %struct.variable_def*, %struct.variable_def** %v, align 8, !dbg !3884
  %dv = getelementptr inbounds %struct.variable_def, %struct.variable_def* %2, i32 0, i32 0, !dbg !3885
  %3 = load i8*, i8** %dv, align 8, !dbg !3885
  %call = call i32 @dv_htab_hash(i8* %3), !dbg !3886
  ret i32 %call, !dbg !3887
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @variable_htab_eq(i8* %x, i8* %y) #0 !dbg !3888 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %v = alloca %struct.variable_def*, align 8
  %dv = alloca i8*, align 8
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !3889, metadata !DIExpression()), !dbg !3890
  store i8* %y, i8** %y.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !3891, metadata !DIExpression()), !dbg !3892
  call void @llvm.dbg.declare(metadata %struct.variable_def** %v, metadata !3893, metadata !DIExpression()), !dbg !3894
  %0 = load i8*, i8** %x.addr, align 8, !dbg !3895
  %1 = bitcast i8* %0 to %struct.variable_def*, !dbg !3896
  store %struct.variable_def* %1, %struct.variable_def** %v, align 8, !dbg !3894
  call void @llvm.dbg.declare(metadata i8** %dv, metadata !3897, metadata !DIExpression()), !dbg !3898
  %2 = load i8*, i8** %y.addr, align 8, !dbg !3899
  store i8* %2, i8** %dv, align 8, !dbg !3898
  %3 = load %struct.variable_def*, %struct.variable_def** %v, align 8, !dbg !3900
  %dv1 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %3, i32 0, i32 0, !dbg !3901
  %4 = load i8*, i8** %dv1, align 8, !dbg !3901
  %call = call i8* @dv_as_opaque(i8* %4), !dbg !3902
  %5 = load i8*, i8** %dv, align 8, !dbg !3903
  %call2 = call i8* @dv_as_opaque(i8* %5), !dbg !3904
  %cmp = icmp eq i8* %call, %call2, !dbg !3905
  %conv = zext i1 %cmp to i32, !dbg !3905
  ret i32 %conv, !dbg !3906
}

; Function Attrs: noinline nounwind uwtable
define internal void @variable_htab_free(i8* %elem) #0 !dbg !3907 {
entry:
  %elem.addr = alloca i8*, align 8
  %i = alloca i32, align 4
  %var = alloca %struct.variable_def*, align 8
  %node = alloca %struct.location_chain_def*, align 8
  %next = alloca %struct.location_chain_def*, align 8
  store i8* %elem, i8** %elem.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %elem.addr, metadata !3908, metadata !DIExpression()), !dbg !3909
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3910, metadata !DIExpression()), !dbg !3911
  call void @llvm.dbg.declare(metadata %struct.variable_def** %var, metadata !3912, metadata !DIExpression()), !dbg !3913
  %0 = load i8*, i8** %elem.addr, align 8, !dbg !3914
  %1 = bitcast i8* %0 to %struct.variable_def*, !dbg !3915
  store %struct.variable_def* %1, %struct.variable_def** %var, align 8, !dbg !3913
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %node, metadata !3916, metadata !DIExpression()), !dbg !3917
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %next, metadata !3918, metadata !DIExpression()), !dbg !3919
  %2 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !3920
  %refcount = getelementptr inbounds %struct.variable_def, %struct.variable_def* %2, i32 0, i32 1, !dbg !3920
  %3 = load i32, i32* %refcount, align 8, !dbg !3920
  %cmp = icmp sgt i32 %3, 0, !dbg !3920
  br i1 %cmp, label %cond.false, label %cond.true, !dbg !3920

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 1175, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !3920
  br label %cond.end, !dbg !3920

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !3920

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !3920
  %4 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !3921
  %refcount1 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %4, i32 0, i32 1, !dbg !3922
  %5 = load i32, i32* %refcount1, align 8, !dbg !3923
  %dec = add nsw i32 %5, -1, !dbg !3923
  store i32 %dec, i32* %refcount1, align 8, !dbg !3923
  %6 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !3924
  %refcount2 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %6, i32 0, i32 1, !dbg !3926
  %7 = load i32, i32* %refcount2, align 8, !dbg !3926
  %cmp3 = icmp sgt i32 %7, 0, !dbg !3927
  br i1 %cmp3, label %if.then, label %if.end, !dbg !3928

if.then:                                          ; preds = %cond.end
  br label %return, !dbg !3929

if.end:                                           ; preds = %cond.end
  store i32 0, i32* %i, align 4, !dbg !3930
  br label %for.cond, !dbg !3932

for.cond:                                         ; preds = %for.inc13, %if.end
  %8 = load i32, i32* %i, align 4, !dbg !3933
  %9 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !3935
  %n_var_parts = getelementptr inbounds %struct.variable_def, %struct.variable_def* %9, i32 0, i32 2, !dbg !3936
  %10 = load i8, i8* %n_var_parts, align 4, !dbg !3936
  %conv = sext i8 %10 to i32, !dbg !3935
  %cmp4 = icmp slt i32 %8, %conv, !dbg !3937
  br i1 %cmp4, label %for.body, label %for.end14, !dbg !3938

for.body:                                         ; preds = %for.cond
  %11 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !3939
  %var_part = getelementptr inbounds %struct.variable_def, %struct.variable_def* %11, i32 0, i32 5, !dbg !3942
  %12 = load i32, i32* %i, align 4, !dbg !3943
  %idxprom = sext i32 %12 to i64, !dbg !3939
  %arrayidx = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part, i64 0, i64 %idxprom, !dbg !3939
  %loc_chain = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx, i32 0, i32 0, !dbg !3944
  %13 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain, align 8, !dbg !3944
  store %struct.location_chain_def* %13, %struct.location_chain_def** %node, align 8, !dbg !3945
  br label %for.cond6, !dbg !3946

for.cond6:                                        ; preds = %for.inc, %for.body
  %14 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !3947
  %tobool = icmp ne %struct.location_chain_def* %14, null, !dbg !3949
  br i1 %tobool, label %for.body7, label %for.end, !dbg !3949

for.body7:                                        ; preds = %for.cond6
  %15 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !3950
  %next8 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %15, i32 0, i32 0, !dbg !3952
  %16 = load %struct.location_chain_def*, %struct.location_chain_def** %next8, align 8, !dbg !3952
  store %struct.location_chain_def* %16, %struct.location_chain_def** %next, align 8, !dbg !3953
  %17 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @loc_chain_pool, align 8, !dbg !3954
  %18 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !3955
  %19 = bitcast %struct.location_chain_def* %18 to i8*, !dbg !3955
  call void @pool_free(%struct.alloc_pool_def* %17, i8* %19), !dbg !3956
  br label %for.inc, !dbg !3957

for.inc:                                          ; preds = %for.body7
  %20 = load %struct.location_chain_def*, %struct.location_chain_def** %next, align 8, !dbg !3958
  store %struct.location_chain_def* %20, %struct.location_chain_def** %node, align 8, !dbg !3959
  br label %for.cond6, !dbg !3960, !llvm.loop !3961

for.end:                                          ; preds = %for.cond6
  %21 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !3963
  %var_part9 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %21, i32 0, i32 5, !dbg !3964
  %22 = load i32, i32* %i, align 4, !dbg !3965
  %idxprom10 = sext i32 %22 to i64, !dbg !3963
  %arrayidx11 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part9, i64 0, i64 %idxprom10, !dbg !3963
  %loc_chain12 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx11, i32 0, i32 0, !dbg !3966
  store %struct.location_chain_def* null, %struct.location_chain_def** %loc_chain12, align 8, !dbg !3967
  br label %for.inc13, !dbg !3968

for.inc13:                                        ; preds = %for.end
  %23 = load i32, i32* %i, align 4, !dbg !3969
  %inc = add nsw i32 %23, 1, !dbg !3969
  store i32 %inc, i32* %i, align 4, !dbg !3969
  br label %for.cond, !dbg !3970, !llvm.loop !3971

for.end14:                                        ; preds = %for.cond
  %24 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !3973
  %dv = getelementptr inbounds %struct.variable_def, %struct.variable_def* %24, i32 0, i32 0, !dbg !3974
  %25 = load i8*, i8** %dv, align 8, !dbg !3974
  %call = call %struct.alloc_pool_def* @dv_pool(i8* %25), !dbg !3975
  %26 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !3976
  %27 = bitcast %struct.variable_def* %26 to i8*, !dbg !3976
  call void @pool_free(%struct.alloc_pool_def* %call, i8* %27), !dbg !3977
  br label %return, !dbg !3978

return:                                           ; preds = %for.end14, %if.then
  ret void, !dbg !3978
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @value_chain_htab_hash(i8* %x) #0 !dbg !3979 {
entry:
  %x.addr = alloca i8*, align 8
  %v = alloca %struct.value_chain_def*, align 8
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !3980, metadata !DIExpression()), !dbg !3981
  call void @llvm.dbg.declare(metadata %struct.value_chain_def** %v, metadata !3982, metadata !DIExpression()), !dbg !3984
  %0 = load i8*, i8** %x.addr, align 8, !dbg !3985
  %1 = bitcast i8* %0 to %struct.value_chain_def*, !dbg !3986
  store %struct.value_chain_def* %1, %struct.value_chain_def** %v, align 8, !dbg !3984
  %2 = load %struct.value_chain_def*, %struct.value_chain_def** %v, align 8, !dbg !3987
  %dv = getelementptr inbounds %struct.value_chain_def, %struct.value_chain_def* %2, i32 0, i32 1, !dbg !3988
  %3 = load i8*, i8** %dv, align 8, !dbg !3988
  %call = call i32 @dv_htab_hash(i8* %3), !dbg !3989
  ret i32 %call, !dbg !3990
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @value_chain_htab_eq(i8* %x, i8* %y) #0 !dbg !3991 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %v = alloca %struct.value_chain_def*, align 8
  %dv = alloca i8*, align 8
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !3992, metadata !DIExpression()), !dbg !3993
  store i8* %y, i8** %y.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !3994, metadata !DIExpression()), !dbg !3995
  call void @llvm.dbg.declare(metadata %struct.value_chain_def** %v, metadata !3996, metadata !DIExpression()), !dbg !3997
  %0 = load i8*, i8** %x.addr, align 8, !dbg !3998
  %1 = bitcast i8* %0 to %struct.value_chain_def*, !dbg !3999
  store %struct.value_chain_def* %1, %struct.value_chain_def** %v, align 8, !dbg !3997
  call void @llvm.dbg.declare(metadata i8** %dv, metadata !4000, metadata !DIExpression()), !dbg !4001
  %2 = load i8*, i8** %y.addr, align 8, !dbg !4002
  store i8* %2, i8** %dv, align 8, !dbg !4001
  %3 = load %struct.value_chain_def*, %struct.value_chain_def** %v, align 8, !dbg !4003
  %dv1 = getelementptr inbounds %struct.value_chain_def, %struct.value_chain_def* %3, i32 0, i32 1, !dbg !4004
  %4 = load i8*, i8** %dv1, align 8, !dbg !4004
  %call = call i8* @dv_as_opaque(i8* %4), !dbg !4005
  %5 = load i8*, i8** %dv, align 8, !dbg !4006
  %call2 = call i8* @dv_as_opaque(i8* %5), !dbg !4007
  %cmp = icmp eq i8* %call, %call2, !dbg !4008
  %conv = zext i1 %cmp to i32, !dbg !4008
  ret i32 %conv, !dbg !4009
}

; Function Attrs: noinline nounwind uwtable
define internal void @dataflow_set_init(%struct.dataflow_set_def* %set) #0 !dbg !4010 {
entry:
  %set.addr = alloca %struct.dataflow_set_def*, align 8
  store %struct.dataflow_set_def* %set, %struct.dataflow_set_def** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %set.addr, metadata !4013, metadata !DIExpression()), !dbg !4014
  %0 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !4015
  %regs = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %0, i32 0, i32 1, !dbg !4016
  %arraydecay = getelementptr inbounds [53 x %struct.attrs_def*], [53 x %struct.attrs_def*]* %regs, i64 0, i64 0, !dbg !4015
  call void @init_attrs_list_set(%struct.attrs_def** %arraydecay), !dbg !4017
  %1 = load %struct.shared_hash_def*, %struct.shared_hash_def** @empty_shared_hash, align 8, !dbg !4018
  %call = call %struct.shared_hash_def* @shared_hash_copy(%struct.shared_hash_def* %1), !dbg !4019
  %2 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !4020
  %vars = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %2, i32 0, i32 2, !dbg !4021
  store %struct.shared_hash_def* %call, %struct.shared_hash_def** %vars, align 8, !dbg !4022
  %3 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !4023
  %stack_adjust = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %3, i32 0, i32 0, !dbg !4024
  store i64 0, i64* %stack_adjust, align 8, !dbg !4025
  %4 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !4026
  %traversed_vars = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %4, i32 0, i32 3, !dbg !4027
  store %struct.shared_hash_def* null, %struct.shared_hash_def** %traversed_vars, align 8, !dbg !4028
  ret void, !dbg !4029
}

declare dso_local void @cselib_init(i32) #2

declare dso_local %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.VEC_rtx_heap* @VEC_rtx_heap_alloc(i32 %alloc_) #0 !dbg !4030 {
entry:
  %alloc_.addr = alloca i32, align 4
  store i32 %alloc_, i32* %alloc_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %alloc_.addr, metadata !4033, metadata !DIExpression()), !dbg !4034
  %0 = load i32, i32* %alloc_.addr, align 4, !dbg !4034
  %call = call i8* @vec_heap_p_reserve_exact(i8* null, i32 %0), !dbg !4034
  %1 = bitcast i8* %call to %struct.VEC_rtx_heap*, !dbg !4034
  ret %struct.VEC_rtx_heap* %1, !dbg !4034
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @vt_stack_adjustments() #0 !dbg !4035 {
entry:
  %retval = alloca i8, align 1
  %stack = alloca %struct.edge_iterator*, align 8
  %sp = alloca i32, align 4
  %tmp = alloca %struct.edge_iterator, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %src = alloca %struct.basic_block_def*, align 8
  %dest = alloca %struct.basic_block_def*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %pre = alloca i64, align 8
  %post = alloca i64, align 8
  %offset = alloca i64, align 8
  %tmp79 = alloca %struct.edge_iterator, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_iterator** %stack, metadata !4036, metadata !DIExpression()), !dbg !4037
  call void @llvm.dbg.declare(metadata i32* %sp, metadata !4038, metadata !DIExpression()), !dbg !4039
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4040
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, !dbg !4040
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !4040
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4040
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i32 0, i32 0, !dbg !4040
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !4040
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2, i32 0, i32 2, !dbg !4040
  %3 = load i8*, i8** %aux, align 8, !dbg !4040
  %4 = bitcast i8* %3 to %struct.variable_tracking_info_def*, !dbg !4040
  %visited = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %4, i32 0, i32 4, !dbg !4041
  store i8 1, i8* %visited, align 8, !dbg !4042
  %5 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4043
  %add.ptr1 = getelementptr inbounds %struct.function, %struct.function* %5, i64 0, !dbg !4043
  %cfg2 = getelementptr inbounds %struct.function, %struct.function* %add.ptr1, i32 0, i32 1, !dbg !4043
  %6 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2, align 8, !dbg !4043
  %x_entry_block_ptr3 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %6, i32 0, i32 0, !dbg !4043
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr3, align 8, !dbg !4043
  %aux4 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %7, i32 0, i32 2, !dbg !4043
  %8 = load i8*, i8** %aux4, align 8, !dbg !4043
  %9 = bitcast i8* %8 to %struct.variable_tracking_info_def*, !dbg !4043
  %in = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %9, i32 0, i32 1, !dbg !4044
  %stack_adjust = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %in, i32 0, i32 0, !dbg !4045
  store i64 4, i64* %stack_adjust, align 8, !dbg !4046
  %10 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4047
  %add.ptr5 = getelementptr inbounds %struct.function, %struct.function* %10, i64 0, !dbg !4047
  %cfg6 = getelementptr inbounds %struct.function, %struct.function* %add.ptr5, i32 0, i32 1, !dbg !4047
  %11 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg6, align 8, !dbg !4047
  %x_entry_block_ptr7 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %11, i32 0, i32 0, !dbg !4047
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr7, align 8, !dbg !4047
  %aux8 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %12, i32 0, i32 2, !dbg !4047
  %13 = load i8*, i8** %aux8, align 8, !dbg !4047
  %14 = bitcast i8* %13 to %struct.variable_tracking_info_def*, !dbg !4047
  %out = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %14, i32 0, i32 2, !dbg !4048
  %stack_adjust9 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %out, i32 0, i32 0, !dbg !4049
  store i64 4, i64* %stack_adjust9, align 8, !dbg !4050
  %15 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4051
  %add.ptr10 = getelementptr inbounds %struct.function, %struct.function* %15, i64 0, !dbg !4051
  %cfg11 = getelementptr inbounds %struct.function, %struct.function* %add.ptr10, i32 0, i32 1, !dbg !4051
  %16 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg11, align 8, !dbg !4051
  %x_n_basic_blocks = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %16, i32 0, i32 3, !dbg !4051
  %17 = load i32, i32* %x_n_basic_blocks, align 8, !dbg !4051
  %add = add nsw i32 %17, 1, !dbg !4051
  %conv = sext i32 %add to i64, !dbg !4051
  %mul = mul i64 16, %conv, !dbg !4051
  %call = call i8* @xmalloc(i64 %mul), !dbg !4051
  %18 = bitcast i8* %call to %struct.edge_iterator*, !dbg !4051
  store %struct.edge_iterator* %18, %struct.edge_iterator** %stack, align 8, !dbg !4052
  store i32 0, i32* %sp, align 4, !dbg !4053
  %19 = load %struct.edge_iterator*, %struct.edge_iterator** %stack, align 8, !dbg !4054
  %20 = load i32, i32* %sp, align 4, !dbg !4055
  %inc = add nsw i32 %20, 1, !dbg !4055
  store i32 %inc, i32* %sp, align 4, !dbg !4055
  %idxprom = sext i32 %20 to i64, !dbg !4054
  %arrayidx = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %19, i64 %idxprom, !dbg !4054
  %21 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4056
  %add.ptr12 = getelementptr inbounds %struct.function, %struct.function* %21, i64 0, !dbg !4056
  %cfg13 = getelementptr inbounds %struct.function, %struct.function* %add.ptr12, i32 0, i32 1, !dbg !4056
  %22 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg13, align 8, !dbg !4056
  %x_entry_block_ptr14 = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %22, i32 0, i32 0, !dbg !4056
  %23 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr14, align 8, !dbg !4056
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %23, i32 0, i32 1, !dbg !4056
  %call15 = call { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %succs), !dbg !4056
  %24 = bitcast %struct.edge_iterator* %tmp to { i32, %struct.VEC_edge_gc** }*, !dbg !4056
  %25 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %24, i32 0, i32 0, !dbg !4056
  %26 = extractvalue { i32, %struct.VEC_edge_gc** } %call15, 0, !dbg !4056
  store i32 %26, i32* %25, align 8, !dbg !4056
  %27 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %24, i32 0, i32 1, !dbg !4056
  %28 = extractvalue { i32, %struct.VEC_edge_gc** } %call15, 1, !dbg !4056
  store %struct.VEC_edge_gc** %28, %struct.VEC_edge_gc*** %27, align 8, !dbg !4056
  %29 = bitcast %struct.edge_iterator* %arrayidx to i8*, !dbg !4056
  %30 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !4056
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 16, i1 false), !dbg !4056
  br label %while.cond, !dbg !4057

while.cond:                                       ; preds = %if.end101, %entry
  %31 = load i32, i32* %sp, align 4, !dbg !4058
  %tobool = icmp ne i32 %31, 0, !dbg !4057
  br i1 %tobool, label %while.body, label %while.end, !dbg !4057

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.edge_iterator* %ei, metadata !4059, metadata !DIExpression()), !dbg !4061
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %src, metadata !4062, metadata !DIExpression()), !dbg !4063
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %dest, metadata !4064, metadata !DIExpression()), !dbg !4065
  %32 = load %struct.edge_iterator*, %struct.edge_iterator** %stack, align 8, !dbg !4066
  %33 = load i32, i32* %sp, align 4, !dbg !4067
  %sub = sub nsw i32 %33, 1, !dbg !4068
  %idxprom16 = sext i32 %sub to i64, !dbg !4066
  %arrayidx17 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %32, i64 %idxprom16, !dbg !4066
  %34 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !4066
  %35 = bitcast %struct.edge_iterator* %arrayidx17 to i8*, !dbg !4066
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 16, i1 false), !dbg !4066
  %36 = bitcast %struct.edge_iterator* %ei to { i32, %struct.VEC_edge_gc** }*, !dbg !4069
  %37 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %36, i32 0, i32 0, !dbg !4069
  %38 = load i32, i32* %37, align 8, !dbg !4069
  %39 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %36, i32 0, i32 1, !dbg !4069
  %40 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %39, align 8, !dbg !4069
  %call18 = call %struct.edge_def* @ei_edge(i32 %38, %struct.VEC_edge_gc** %40), !dbg !4069
  %src19 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call18, i32 0, i32 0, !dbg !4070
  %41 = load %struct.basic_block_def*, %struct.basic_block_def** %src19, align 8, !dbg !4070
  store %struct.basic_block_def* %41, %struct.basic_block_def** %src, align 8, !dbg !4071
  %42 = bitcast %struct.edge_iterator* %ei to { i32, %struct.VEC_edge_gc** }*, !dbg !4072
  %43 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %42, i32 0, i32 0, !dbg !4072
  %44 = load i32, i32* %43, align 8, !dbg !4072
  %45 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %42, i32 0, i32 1, !dbg !4072
  %46 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %45, align 8, !dbg !4072
  %call20 = call %struct.edge_def* @ei_edge(i32 %44, %struct.VEC_edge_gc** %46), !dbg !4072
  %dest21 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call20, i32 0, i32 1, !dbg !4073
  %47 = load %struct.basic_block_def*, %struct.basic_block_def** %dest21, align 8, !dbg !4073
  store %struct.basic_block_def* %47, %struct.basic_block_def** %dest, align 8, !dbg !4074
  %48 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4075
  %aux22 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %48, i32 0, i32 2, !dbg !4075
  %49 = load i8*, i8** %aux22, align 8, !dbg !4075
  %50 = bitcast i8* %49 to %struct.variable_tracking_info_def*, !dbg !4075
  %visited23 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %50, i32 0, i32 4, !dbg !4077
  %51 = load i8, i8* %visited23, align 8, !dbg !4077
  %tobool24 = icmp ne i8 %51, 0, !dbg !4075
  br i1 %tobool24, label %if.else, label %if.then, !dbg !4078

if.then:                                          ; preds = %while.body
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !4079, metadata !DIExpression()), !dbg !4081
  call void @llvm.dbg.declare(metadata i64* %pre, metadata !4082, metadata !DIExpression()), !dbg !4083
  call void @llvm.dbg.declare(metadata i64* %post, metadata !4084, metadata !DIExpression()), !dbg !4085
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !4086, metadata !DIExpression()), !dbg !4087
  %52 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4088
  %aux25 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %52, i32 0, i32 2, !dbg !4088
  %53 = load i8*, i8** %aux25, align 8, !dbg !4088
  %54 = bitcast i8* %53 to %struct.variable_tracking_info_def*, !dbg !4088
  %visited26 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %54, i32 0, i32 4, !dbg !4089
  store i8 1, i8* %visited26, align 8, !dbg !4090
  %55 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !4091
  %aux27 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %55, i32 0, i32 2, !dbg !4091
  %56 = load i8*, i8** %aux27, align 8, !dbg !4091
  %57 = bitcast i8* %56 to %struct.variable_tracking_info_def*, !dbg !4091
  %out28 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %57, i32 0, i32 2, !dbg !4092
  %stack_adjust29 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %out28, i32 0, i32 0, !dbg !4093
  %58 = load i64, i64* %stack_adjust29, align 8, !dbg !4093
  store i64 %58, i64* %offset, align 8, !dbg !4094
  %59 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4095
  %aux30 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %59, i32 0, i32 2, !dbg !4095
  %60 = load i8*, i8** %aux30, align 8, !dbg !4095
  %61 = bitcast i8* %60 to %struct.variable_tracking_info_def*, !dbg !4095
  %in31 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %61, i32 0, i32 1, !dbg !4096
  %stack_adjust32 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %in31, i32 0, i32 0, !dbg !4097
  store i64 %58, i64* %stack_adjust32, align 8, !dbg !4098
  %62 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4099
  %63 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4101
  %add.ptr33 = getelementptr inbounds %struct.function, %struct.function* %63, i64 0, !dbg !4101
  %cfg34 = getelementptr inbounds %struct.function, %struct.function* %add.ptr33, i32 0, i32 1, !dbg !4101
  %64 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg34, align 8, !dbg !4101
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %64, i32 0, i32 1, !dbg !4101
  %65 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !4101
  %cmp = icmp ne %struct.basic_block_def* %62, %65, !dbg !4102
  br i1 %cmp, label %if.then36, label %if.end65, !dbg !4103

if.then36:                                        ; preds = %if.then
  %66 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4104
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %66, i32 0, i32 7, !dbg !4104
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !4104
  %67 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !4104
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %67, i32 0, i32 0, !dbg !4104
  %68 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !4104
  store %struct.rtx_def* %68, %struct.rtx_def** %insn, align 8, !dbg !4106
  br label %for.cond, !dbg !4107

for.cond:                                         ; preds = %for.inc, %if.then36
  %69 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4108
  %70 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4110
  %il37 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %70, i32 0, i32 7, !dbg !4110
  %rtl38 = bitcast %union.basic_block_il_dependent* %il37 to %struct.rtl_bb_info**, !dbg !4110
  %71 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl38, align 8, !dbg !4110
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %71, i32 0, i32 1, !dbg !4110
  %72 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !4110
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %72, i32 0, i32 1, !dbg !4110
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4110
  %arrayidx39 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 2, !dbg !4110
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx39 to %struct.rtx_def**, !dbg !4110
  %73 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4110
  %cmp40 = icmp ne %struct.rtx_def* %69, %73, !dbg !4111
  br i1 %cmp40, label %for.body, label %for.end, !dbg !4112

for.body:                                         ; preds = %for.cond
  %74 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4113
  %75 = bitcast %struct.rtx_def* %74 to i32*, !dbg !4113
  %bf.load = load i32, i32* %75, align 8, !dbg !4113
  %bf.clear = and i32 %bf.load, 65535, !dbg !4113
  %cmp42 = icmp eq i32 %bf.clear, 8, !dbg !4113
  br i1 %cmp42, label %if.then58, label %lor.lhs.false, !dbg !4113

lor.lhs.false:                                    ; preds = %for.body
  %76 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4113
  %77 = bitcast %struct.rtx_def* %76 to i32*, !dbg !4113
  %bf.load44 = load i32, i32* %77, align 8, !dbg !4113
  %bf.clear45 = and i32 %bf.load44, 65535, !dbg !4113
  %cmp46 = icmp eq i32 %bf.clear45, 7, !dbg !4113
  br i1 %cmp46, label %if.then58, label %lor.lhs.false48, !dbg !4113

lor.lhs.false48:                                  ; preds = %lor.lhs.false
  %78 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4113
  %79 = bitcast %struct.rtx_def* %78 to i32*, !dbg !4113
  %bf.load49 = load i32, i32* %79, align 8, !dbg !4113
  %bf.clear50 = and i32 %bf.load49, 65535, !dbg !4113
  %cmp51 = icmp eq i32 %bf.clear50, 9, !dbg !4113
  br i1 %cmp51, label %if.then58, label %lor.lhs.false53, !dbg !4113

lor.lhs.false53:                                  ; preds = %lor.lhs.false48
  %80 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4113
  %81 = bitcast %struct.rtx_def* %80 to i32*, !dbg !4113
  %bf.load54 = load i32, i32* %81, align 8, !dbg !4113
  %bf.clear55 = and i32 %bf.load54, 65535, !dbg !4113
  %cmp56 = icmp eq i32 %bf.clear55, 10, !dbg !4113
  br i1 %cmp56, label %if.then58, label %if.end, !dbg !4115

if.then58:                                        ; preds = %lor.lhs.false53, %lor.lhs.false48, %lor.lhs.false, %for.body
  %82 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4116
  call void @insn_stack_adjust_offset_pre_post(%struct.rtx_def* %82, i64* %pre, i64* %post), !dbg !4118
  %83 = load i64, i64* %pre, align 8, !dbg !4119
  %84 = load i64, i64* %post, align 8, !dbg !4120
  %add59 = add nsw i64 %83, %84, !dbg !4121
  %85 = load i64, i64* %offset, align 8, !dbg !4122
  %add60 = add nsw i64 %85, %add59, !dbg !4122
  store i64 %add60, i64* %offset, align 8, !dbg !4122
  br label %if.end, !dbg !4123

if.end:                                           ; preds = %if.then58, %lor.lhs.false53
  br label %for.inc, !dbg !4113

for.inc:                                          ; preds = %if.end
  %86 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4124
  %u61 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %86, i32 0, i32 1, !dbg !4124
  %fld62 = bitcast %union.u* %u61 to [1 x %union.rtunion_def]*, !dbg !4124
  %arrayidx63 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld62, i64 0, i64 2, !dbg !4124
  %rt_rtx64 = bitcast %union.rtunion_def* %arrayidx63 to %struct.rtx_def**, !dbg !4124
  %87 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx64, align 8, !dbg !4124
  store %struct.rtx_def* %87, %struct.rtx_def** %insn, align 8, !dbg !4125
  br label %for.cond, !dbg !4126, !llvm.loop !4127

for.end:                                          ; preds = %for.cond
  br label %if.end65, !dbg !4128

if.end65:                                         ; preds = %for.end, %if.then
  %88 = load i64, i64* %offset, align 8, !dbg !4129
  %89 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4130
  %aux66 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %89, i32 0, i32 2, !dbg !4130
  %90 = load i8*, i8** %aux66, align 8, !dbg !4130
  %91 = bitcast i8* %90 to %struct.variable_tracking_info_def*, !dbg !4130
  %out67 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %91, i32 0, i32 2, !dbg !4131
  %stack_adjust68 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %out67, i32 0, i32 0, !dbg !4132
  store i64 %88, i64* %stack_adjust68, align 8, !dbg !4133
  %92 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4134
  %succs69 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %92, i32 0, i32 1, !dbg !4134
  %93 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs69, align 8, !dbg !4134
  %tobool70 = icmp ne %struct.VEC_edge_gc* %93, null, !dbg !4134
  br i1 %tobool70, label %cond.true, label %cond.false, !dbg !4134

cond.true:                                        ; preds = %if.end65
  %94 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4134
  %succs71 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %94, i32 0, i32 1, !dbg !4134
  %95 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs71, align 8, !dbg !4134
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %95, i32 0, i32 0, !dbg !4134
  br label %cond.end, !dbg !4134

cond.false:                                       ; preds = %if.end65
  br label %cond.end, !dbg !4134

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !4134
  %call72 = call i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond), !dbg !4134
  %cmp73 = icmp ugt i32 %call72, 0, !dbg !4136
  br i1 %cmp73, label %if.then75, label %if.end82, !dbg !4137

if.then75:                                        ; preds = %cond.end
  %96 = load %struct.edge_iterator*, %struct.edge_iterator** %stack, align 8, !dbg !4138
  %97 = load i32, i32* %sp, align 4, !dbg !4139
  %inc76 = add nsw i32 %97, 1, !dbg !4139
  store i32 %inc76, i32* %sp, align 4, !dbg !4139
  %idxprom77 = sext i32 %97 to i64, !dbg !4138
  %arrayidx78 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %96, i64 %idxprom77, !dbg !4138
  %98 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4140
  %succs80 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %98, i32 0, i32 1, !dbg !4140
  %call81 = call { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %succs80), !dbg !4140
  %99 = bitcast %struct.edge_iterator* %tmp79 to { i32, %struct.VEC_edge_gc** }*, !dbg !4140
  %100 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %99, i32 0, i32 0, !dbg !4140
  %101 = extractvalue { i32, %struct.VEC_edge_gc** } %call81, 0, !dbg !4140
  store i32 %101, i32* %100, align 8, !dbg !4140
  %102 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %99, i32 0, i32 1, !dbg !4140
  %103 = extractvalue { i32, %struct.VEC_edge_gc** } %call81, 1, !dbg !4140
  store %struct.VEC_edge_gc** %103, %struct.VEC_edge_gc*** %102, align 8, !dbg !4140
  %104 = bitcast %struct.edge_iterator* %arrayidx78 to i8*, !dbg !4140
  %105 = bitcast %struct.edge_iterator* %tmp79 to i8*, !dbg !4140
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %104, i8* align 8 %105, i64 16, i1 false), !dbg !4140
  br label %if.end82, !dbg !4138

if.end82:                                         ; preds = %if.then75, %cond.end
  br label %if.end101, !dbg !4141

if.else:                                          ; preds = %while.body
  %106 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4142
  %aux83 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %106, i32 0, i32 2, !dbg !4142
  %107 = load i8*, i8** %aux83, align 8, !dbg !4142
  %108 = bitcast i8* %107 to %struct.variable_tracking_info_def*, !dbg !4142
  %in84 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %108, i32 0, i32 1, !dbg !4145
  %stack_adjust85 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %in84, i32 0, i32 0, !dbg !4146
  %109 = load i64, i64* %stack_adjust85, align 8, !dbg !4146
  %110 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !4147
  %aux86 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %110, i32 0, i32 2, !dbg !4147
  %111 = load i8*, i8** %aux86, align 8, !dbg !4147
  %112 = bitcast i8* %111 to %struct.variable_tracking_info_def*, !dbg !4147
  %out87 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %112, i32 0, i32 2, !dbg !4148
  %stack_adjust88 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %out87, i32 0, i32 0, !dbg !4149
  %113 = load i64, i64* %stack_adjust88, align 8, !dbg !4149
  %cmp89 = icmp ne i64 %109, %113, !dbg !4150
  br i1 %cmp89, label %if.then91, label %if.end92, !dbg !4151

if.then91:                                        ; preds = %if.else
  %114 = load %struct.edge_iterator*, %struct.edge_iterator** %stack, align 8, !dbg !4152
  %115 = bitcast %struct.edge_iterator* %114 to i8*, !dbg !4152
  call void @free(i8* %115), !dbg !4154
  store i8 0, i8* %retval, align 1, !dbg !4155
  br label %return, !dbg !4155

if.end92:                                         ; preds = %if.else
  %116 = bitcast %struct.edge_iterator* %ei to { i32, %struct.VEC_edge_gc** }*, !dbg !4156
  %117 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %116, i32 0, i32 0, !dbg !4156
  %118 = load i32, i32* %117, align 8, !dbg !4156
  %119 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %116, i32 0, i32 1, !dbg !4156
  %120 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %119, align 8, !dbg !4156
  %call93 = call zeroext i8 @ei_one_before_end_p(i32 %118, %struct.VEC_edge_gc** %120), !dbg !4156
  %tobool94 = icmp ne i8 %call93, 0, !dbg !4156
  br i1 %tobool94, label %if.else99, label %if.then95, !dbg !4158

if.then95:                                        ; preds = %if.end92
  %121 = load %struct.edge_iterator*, %struct.edge_iterator** %stack, align 8, !dbg !4159
  %122 = load i32, i32* %sp, align 4, !dbg !4160
  %sub96 = sub nsw i32 %122, 1, !dbg !4161
  %idxprom97 = sext i32 %sub96 to i64, !dbg !4159
  %arrayidx98 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %121, i64 %idxprom97, !dbg !4159
  call void @ei_next(%struct.edge_iterator* %arrayidx98), !dbg !4162
  br label %if.end100, !dbg !4162

if.else99:                                        ; preds = %if.end92
  %123 = load i32, i32* %sp, align 4, !dbg !4163
  %dec = add nsw i32 %123, -1, !dbg !4163
  store i32 %dec, i32* %sp, align 4, !dbg !4163
  br label %if.end100

if.end100:                                        ; preds = %if.else99, %if.then95
  br label %if.end101

if.end101:                                        ; preds = %if.end100, %if.end82
  br label %while.cond, !dbg !4057, !llvm.loop !4164

while.end:                                        ; preds = %while.cond
  %124 = load %struct.edge_iterator*, %struct.edge_iterator** %stack, align 8, !dbg !4166
  %125 = bitcast %struct.edge_iterator* %124 to i8*, !dbg !4166
  call void @free(i8* %125), !dbg !4167
  store i8 1, i8* %retval, align 1, !dbg !4168
  br label %return, !dbg !4168

return:                                           ; preds = %while.end, %if.then91
  %126 = load i8, i8* %retval, align 1, !dbg !4169
  ret i8 %126, !dbg !4169
}

declare dso_local %struct.rtx_def* @eliminate_regs(%struct.rtx_def*, i32, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @vt_init_cfa_base() #0 !dbg !4170 {
entry:
  %val = alloca %struct.cselib_val_struct*, align 8
  call void @llvm.dbg.declare(metadata %struct.cselib_val_struct** %val, metadata !4171, metadata !DIExpression()), !dbg !4172
  %0 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), align 8, !dbg !4173
  store %struct.rtx_def* %0, %struct.rtx_def** @cfa_base_rtx, align 8, !dbg !4174
  %1 = load %struct.rtx_def*, %struct.rtx_def** @cfa_base_rtx, align 8, !dbg !4175
  %2 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 16, !dbg !4177
  %cmp = icmp eq %struct.rtx_def* %1, %2, !dbg !4178
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4179

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** @cfa_base_rtx, align 8, !dbg !4180
  %call = call i32 @rhs_regno(%struct.rtx_def* %3), !dbg !4180
  %idxprom = zext i32 %call to i64, !dbg !4181
  %arrayidx = getelementptr inbounds [53 x i8], [53 x i8]* @fixed_regs, i64 0, i64 %idxprom, !dbg !4181
  %4 = load i8, i8* %arrayidx, align 1, !dbg !4181
  %tobool = icmp ne i8 %4, 0, !dbg !4181
  br i1 %tobool, label %if.end, label %if.then, !dbg !4182

if.then:                                          ; preds = %lor.lhs.false, %entry
  store %struct.rtx_def* null, %struct.rtx_def** @cfa_base_rtx, align 8, !dbg !4183
  br label %return, !dbg !4185

if.end:                                           ; preds = %lor.lhs.false
  %5 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !4186
  %tobool1 = icmp ne i32 %5, 0, !dbg !4186
  br i1 %tobool1, label %if.end3, label %if.then2, !dbg !4188

if.then2:                                         ; preds = %if.end
  br label %return, !dbg !4189

if.end3:                                          ; preds = %if.end
  %6 = load %struct.rtx_def*, %struct.rtx_def** @cfa_base_rtx, align 8, !dbg !4190
  %7 = load %struct.rtx_def*, %struct.rtx_def** @cfa_base_rtx, align 8, !dbg !4191
  %8 = bitcast %struct.rtx_def* %7 to i32*, !dbg !4191
  %bf.load = load i32, i32* %8, align 8, !dbg !4191
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !4191
  %bf.clear = and i32 %bf.lshr, 255, !dbg !4191
  %call4 = call %struct.rtx_def* @get_insns(), !dbg !4192
  %call5 = call %struct.cselib_val_struct* @cselib_lookup_from_insn(%struct.rtx_def* %6, i32 %bf.clear, i32 1, %struct.rtx_def* %call4), !dbg !4193
  store %struct.cselib_val_struct* %call5, %struct.cselib_val_struct** %val, align 8, !dbg !4194
  %9 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %val, align 8, !dbg !4195
  call void @preserve_value(%struct.cselib_val_struct* %9), !dbg !4196
  %10 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %val, align 8, !dbg !4197
  call void @cselib_preserve_cfa_base_value(%struct.cselib_val_struct* %10), !dbg !4198
  %11 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4199
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %11, i64 0, !dbg !4199
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !4199
  %12 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4199
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %12, i32 0, i32 0, !dbg !4199
  %13 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !4199
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %13, i32 0, i32 2, !dbg !4199
  %14 = load i8*, i8** %aux, align 8, !dbg !4199
  %15 = bitcast i8* %14 to %struct.variable_tracking_info_def*, !dbg !4199
  %out = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %15, i32 0, i32 2, !dbg !4200
  %16 = load %struct.rtx_def*, %struct.rtx_def** @cfa_base_rtx, align 8, !dbg !4201
  %17 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %val, align 8, !dbg !4202
  %val_rtx = getelementptr inbounds %struct.cselib_val_struct, %struct.cselib_val_struct* %17, i32 0, i32 2, !dbg !4203
  %18 = load %struct.rtx_def*, %struct.rtx_def** %val_rtx, align 8, !dbg !4203
  %call6 = call i8* @dv_from_value(%struct.rtx_def* %18), !dbg !4204
  call void @var_reg_decl_set(%struct.dataflow_set_def* %out, %struct.rtx_def* %16, i32 2, i8* %call6, i64 0, %struct.rtx_def* null, i32 1), !dbg !4205
  br label %return, !dbg !4206

return:                                           ; preds = %if.end3, %if.then2, %if.then
  ret void, !dbg !4206
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.basic_block_def* @single_succ(%struct.basic_block_def* %bb) #0 !dbg !4207 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !4213, metadata !DIExpression()), !dbg !4214
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !4215
  %call = call %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %0), !dbg !4216
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %call, i32 0, i32 1, !dbg !4217
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !4217
  ret %struct.basic_block_def* %1, !dbg !4218
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_with_sets(%struct.rtx_def* %insn, %struct.cselib_set* %sets, i32 %n_sets) #0 !dbg !4219 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %sets.addr = alloca %struct.cselib_set*, align 8
  %n_sets.addr = alloca i32, align 4
  %bb = alloca %struct.basic_block_def*, align 8
  %n1 = alloca i32, align 4
  %n2 = alloca i32, align 4
  %cui = alloca %struct.count_use_info, align 8
  %mos = alloca %struct.micro_operation_def*, align 8
  %sw = alloca %struct.micro_operation_def, align 8
  %sw97 = alloca %struct.micro_operation_def, align 8
  %mo = alloca %struct.micro_operation_def, align 8
  %sw192 = alloca %struct.micro_operation_def, align 8
  %sw242 = alloca %struct.micro_operation_def, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !4222, metadata !DIExpression()), !dbg !4223
  store %struct.cselib_set* %sets, %struct.cselib_set** %sets.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cselib_set** %sets.addr, metadata !4224, metadata !DIExpression()), !dbg !4225
  store i32 %n_sets, i32* %n_sets.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n_sets.addr, metadata !4226, metadata !DIExpression()), !dbg !4227
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !4228, metadata !DIExpression()), !dbg !4229
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4230
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !4230
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4230
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 3, !dbg !4230
  %rt_bb = bitcast %union.rtunion_def* %arrayidx to %struct.basic_block_def**, !dbg !4230
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %rt_bb, align 8, !dbg !4230
  store %struct.basic_block_def* %1, %struct.basic_block_def** %bb, align 8, !dbg !4229
  call void @llvm.dbg.declare(metadata i32* %n1, metadata !4231, metadata !DIExpression()), !dbg !4232
  call void @llvm.dbg.declare(metadata i32* %n2, metadata !4233, metadata !DIExpression()), !dbg !4234
  call void @llvm.dbg.declare(metadata %struct.count_use_info* %cui, metadata !4235, metadata !DIExpression()), !dbg !4236
  call void @llvm.dbg.declare(metadata %struct.micro_operation_def** %mos, metadata !4237, metadata !DIExpression()), !dbg !4239
  store i8 1, i8* @cselib_hook_called, align 1, !dbg !4240
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4241
  %insn1 = getelementptr inbounds %struct.count_use_info, %struct.count_use_info* %cui, i32 0, i32 0, !dbg !4242
  store %struct.rtx_def* %2, %struct.rtx_def** %insn1, align 8, !dbg !4243
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !4244
  %bb2 = getelementptr inbounds %struct.count_use_info, %struct.count_use_info* %cui, i32 0, i32 1, !dbg !4245
  store %struct.basic_block_def* %3, %struct.basic_block_def** %bb2, align 8, !dbg !4246
  %4 = load %struct.cselib_set*, %struct.cselib_set** %sets.addr, align 8, !dbg !4247
  %sets3 = getelementptr inbounds %struct.count_use_info, %struct.count_use_info* %cui, i32 0, i32 2, !dbg !4248
  store %struct.cselib_set* %4, %struct.cselib_set** %sets3, align 8, !dbg !4249
  %5 = load i32, i32* %n_sets.addr, align 4, !dbg !4250
  %n_sets4 = getelementptr inbounds %struct.count_use_info, %struct.count_use_info* %cui, i32 0, i32 3, !dbg !4251
  store i32 %5, i32* %n_sets4, align 8, !dbg !4252
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !4253
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %6, i32 0, i32 2, !dbg !4253
  %7 = load i8*, i8** %aux, align 8, !dbg !4253
  %8 = bitcast i8* %7 to %struct.variable_tracking_info_def*, !dbg !4253
  %mos5 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %8, i32 0, i32 0, !dbg !4253
  %9 = load %struct.VEC_micro_operation_heap*, %struct.VEC_micro_operation_heap** %mos5, align 8, !dbg !4253
  %tobool = icmp ne %struct.VEC_micro_operation_heap* %9, null, !dbg !4253
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4253

cond.true:                                        ; preds = %entry
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !4253
  %aux6 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %10, i32 0, i32 2, !dbg !4253
  %11 = load i8*, i8** %aux6, align 8, !dbg !4253
  %12 = bitcast i8* %11 to %struct.variable_tracking_info_def*, !dbg !4253
  %mos7 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %12, i32 0, i32 0, !dbg !4253
  %13 = load %struct.VEC_micro_operation_heap*, %struct.VEC_micro_operation_heap** %mos7, align 8, !dbg !4253
  %base = getelementptr inbounds %struct.VEC_micro_operation_heap, %struct.VEC_micro_operation_heap* %13, i32 0, i32 0, !dbg !4253
  br label %cond.end, !dbg !4253

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !4253

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_micro_operation_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !4253
  %call = call i32 @VEC_micro_operation_base_length(%struct.VEC_micro_operation_base* %cond), !dbg !4253
  store i32 %call, i32* %n1, align 4, !dbg !4254
  %store_p = getelementptr inbounds %struct.count_use_info, %struct.count_use_info* %cui, i32 0, i32 4, !dbg !4255
  store i8 0, i8* %store_p, align 4, !dbg !4256
  %14 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4257
  %u8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1, !dbg !4257
  %fld9 = bitcast %union.u* %u8 to [1 x %union.rtunion_def]*, !dbg !4257
  %arrayidx10 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld9, i64 0, i64 5, !dbg !4257
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx10 to %struct.rtx_def**, !dbg !4257
  %15 = bitcast %struct.count_use_info* %cui to i8*, !dbg !4258
  call void @note_uses(%struct.rtx_def** %rt_rtx, void (%struct.rtx_def**, i8*)* @add_uses_1, i8* %15), !dbg !4259
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !4260
  %aux11 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %16, i32 0, i32 2, !dbg !4260
  %17 = load i8*, i8** %aux11, align 8, !dbg !4260
  %18 = bitcast i8* %17 to %struct.variable_tracking_info_def*, !dbg !4260
  %mos12 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %18, i32 0, i32 0, !dbg !4260
  %19 = load %struct.VEC_micro_operation_heap*, %struct.VEC_micro_operation_heap** %mos12, align 8, !dbg !4260
  %tobool13 = icmp ne %struct.VEC_micro_operation_heap* %19, null, !dbg !4260
  br i1 %tobool13, label %cond.true14, label %cond.false18, !dbg !4260

cond.true14:                                      ; preds = %cond.end
  %20 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !4260
  %aux15 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %20, i32 0, i32 2, !dbg !4260
  %21 = load i8*, i8** %aux15, align 8, !dbg !4260
  %22 = bitcast i8* %21 to %struct.variable_tracking_info_def*, !dbg !4260
  %mos16 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %22, i32 0, i32 0, !dbg !4260
  %23 = load %struct.VEC_micro_operation_heap*, %struct.VEC_micro_operation_heap** %mos16, align 8, !dbg !4260
  %base17 = getelementptr inbounds %struct.VEC_micro_operation_heap, %struct.VEC_micro_operation_heap* %23, i32 0, i32 0, !dbg !4260
  br label %cond.end19, !dbg !4260

cond.false18:                                     ; preds = %cond.end
  br label %cond.end19, !dbg !4260

cond.end19:                                       ; preds = %cond.false18, %cond.true14
  %cond20 = phi %struct.VEC_micro_operation_base* [ %base17, %cond.true14 ], [ null, %cond.false18 ], !dbg !4260
  %call21 = call i32 @VEC_micro_operation_base_length(%struct.VEC_micro_operation_base* %cond20), !dbg !4260
  %sub = sub i32 %call21, 1, !dbg !4261
  store i32 %sub, i32* %n2, align 4, !dbg !4262
  %24 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !4263
  %aux22 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %24, i32 0, i32 2, !dbg !4263
  %25 = load i8*, i8** %aux22, align 8, !dbg !4263
  %26 = bitcast i8* %25 to %struct.variable_tracking_info_def*, !dbg !4263
  %mos23 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %26, i32 0, i32 0, !dbg !4263
  %27 = load %struct.VEC_micro_operation_heap*, %struct.VEC_micro_operation_heap** %mos23, align 8, !dbg !4263
  %tobool24 = icmp ne %struct.VEC_micro_operation_heap* %27, null, !dbg !4263
  br i1 %tobool24, label %cond.true25, label %cond.false29, !dbg !4263

cond.true25:                                      ; preds = %cond.end19
  %28 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !4263
  %aux26 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %28, i32 0, i32 2, !dbg !4263
  %29 = load i8*, i8** %aux26, align 8, !dbg !4263
  %30 = bitcast i8* %29 to %struct.variable_tracking_info_def*, !dbg !4263
  %mos27 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %30, i32 0, i32 0, !dbg !4263
  %31 = load %struct.VEC_micro_operation_heap*, %struct.VEC_micro_operation_heap** %mos27, align 8, !dbg !4263
  %base28 = getelementptr inbounds %struct.VEC_micro_operation_heap, %struct.VEC_micro_operation_heap* %31, i32 0, i32 0, !dbg !4263
  br label %cond.end30, !dbg !4263

cond.false29:                                     ; preds = %cond.end19
  br label %cond.end30, !dbg !4263

cond.end30:                                       ; preds = %cond.false29, %cond.true25
  %cond31 = phi %struct.VEC_micro_operation_base* [ %base28, %cond.true25 ], [ null, %cond.false29 ], !dbg !4263
  %call32 = call %struct.micro_operation_def* @VEC_micro_operation_base_address(%struct.VEC_micro_operation_base* %cond31), !dbg !4263
  store %struct.micro_operation_def* %call32, %struct.micro_operation_def** %mos, align 8, !dbg !4264
  br label %while.cond, !dbg !4265

while.cond:                                       ; preds = %if.end, %cond.end30
  %32 = load i32, i32* %n1, align 4, !dbg !4266
  %33 = load i32, i32* %n2, align 4, !dbg !4267
  %cmp = icmp slt i32 %32, %33, !dbg !4268
  br i1 %cmp, label %while.body, label %while.end57, !dbg !4265

while.body:                                       ; preds = %while.cond
  br label %while.cond33, !dbg !4269

while.cond33:                                     ; preds = %while.body37, %while.body
  %34 = load i32, i32* %n1, align 4, !dbg !4271
  %35 = load i32, i32* %n2, align 4, !dbg !4272
  %cmp34 = icmp slt i32 %34, %35, !dbg !4273
  br i1 %cmp34, label %land.rhs, label %land.end, !dbg !4274

land.rhs:                                         ; preds = %while.cond33
  %36 = load %struct.micro_operation_def*, %struct.micro_operation_def** %mos, align 8, !dbg !4275
  %37 = load i32, i32* %n1, align 4, !dbg !4276
  %idxprom = sext i32 %37 to i64, !dbg !4275
  %arrayidx35 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %36, i64 %idxprom, !dbg !4275
  %type = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %arrayidx35, i32 0, i32 0, !dbg !4277
  %38 = load i32, i32* %type, align 8, !dbg !4277
  %cmp36 = icmp eq i32 %38, 0, !dbg !4278
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond33
  %39 = phi i1 [ false, %while.cond33 ], [ %cmp36, %land.rhs ], !dbg !4279
  br i1 %39, label %while.body37, label %while.end, !dbg !4269

while.body37:                                     ; preds = %land.end
  %40 = load i32, i32* %n1, align 4, !dbg !4280
  %inc = add nsw i32 %40, 1, !dbg !4280
  store i32 %inc, i32* %n1, align 4, !dbg !4280
  br label %while.cond33, !dbg !4269, !llvm.loop !4281

while.end:                                        ; preds = %land.end
  br label %while.cond38, !dbg !4282

while.cond38:                                     ; preds = %while.body46, %while.end
  %41 = load i32, i32* %n1, align 4, !dbg !4283
  %42 = load i32, i32* %n2, align 4, !dbg !4284
  %cmp39 = icmp slt i32 %41, %42, !dbg !4285
  br i1 %cmp39, label %land.rhs40, label %land.end45, !dbg !4286

land.rhs40:                                       ; preds = %while.cond38
  %43 = load %struct.micro_operation_def*, %struct.micro_operation_def** %mos, align 8, !dbg !4287
  %44 = load i32, i32* %n2, align 4, !dbg !4288
  %idxprom41 = sext i32 %44 to i64, !dbg !4287
  %arrayidx42 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %43, i64 %idxprom41, !dbg !4287
  %type43 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %arrayidx42, i32 0, i32 0, !dbg !4289
  %45 = load i32, i32* %type43, align 8, !dbg !4289
  %cmp44 = icmp ne i32 %45, 0, !dbg !4290
  br label %land.end45

land.end45:                                       ; preds = %land.rhs40, %while.cond38
  %46 = phi i1 [ false, %while.cond38 ], [ %cmp44, %land.rhs40 ], !dbg !4279
  br i1 %46, label %while.body46, label %while.end47, !dbg !4282

while.body46:                                     ; preds = %land.end45
  %47 = load i32, i32* %n2, align 4, !dbg !4291
  %dec = add nsw i32 %47, -1, !dbg !4291
  store i32 %dec, i32* %n2, align 4, !dbg !4291
  br label %while.cond38, !dbg !4282, !llvm.loop !4292

while.end47:                                      ; preds = %land.end45
  %48 = load i32, i32* %n1, align 4, !dbg !4293
  %49 = load i32, i32* %n2, align 4, !dbg !4295
  %cmp48 = icmp slt i32 %48, %49, !dbg !4296
  br i1 %cmp48, label %if.then, label %if.end, !dbg !4297

if.then:                                          ; preds = %while.end47
  call void @llvm.dbg.declare(metadata %struct.micro_operation_def* %sw, metadata !4298, metadata !DIExpression()), !dbg !4300
  %50 = load %struct.micro_operation_def*, %struct.micro_operation_def** %mos, align 8, !dbg !4301
  %51 = load i32, i32* %n1, align 4, !dbg !4302
  %idxprom49 = sext i32 %51 to i64, !dbg !4301
  %arrayidx50 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %50, i64 %idxprom49, !dbg !4301
  %52 = bitcast %struct.micro_operation_def* %sw to i8*, !dbg !4301
  %53 = bitcast %struct.micro_operation_def* %arrayidx50 to i8*, !dbg !4301
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 24, i1 false), !dbg !4301
  %54 = load %struct.micro_operation_def*, %struct.micro_operation_def** %mos, align 8, !dbg !4303
  %55 = load i32, i32* %n1, align 4, !dbg !4304
  %idxprom51 = sext i32 %55 to i64, !dbg !4303
  %arrayidx52 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %54, i64 %idxprom51, !dbg !4303
  %56 = load %struct.micro_operation_def*, %struct.micro_operation_def** %mos, align 8, !dbg !4305
  %57 = load i32, i32* %n2, align 4, !dbg !4306
  %idxprom53 = sext i32 %57 to i64, !dbg !4305
  %arrayidx54 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %56, i64 %idxprom53, !dbg !4305
  %58 = bitcast %struct.micro_operation_def* %arrayidx52 to i8*, !dbg !4305
  %59 = bitcast %struct.micro_operation_def* %arrayidx54 to i8*, !dbg !4305
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 24, i1 false), !dbg !4305
  %60 = load %struct.micro_operation_def*, %struct.micro_operation_def** %mos, align 8, !dbg !4307
  %61 = load i32, i32* %n2, align 4, !dbg !4308
  %idxprom55 = sext i32 %61 to i64, !dbg !4307
  %arrayidx56 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %60, i64 %idxprom55, !dbg !4307
  %62 = bitcast %struct.micro_operation_def* %arrayidx56 to i8*, !dbg !4309
  %63 = bitcast %struct.micro_operation_def* %sw to i8*, !dbg !4309
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* align 8 %63, i64 24, i1 false), !dbg !4309
  br label %if.end, !dbg !4310

if.end:                                           ; preds = %if.then, %while.end47
  br label %while.cond, !dbg !4265, !llvm.loop !4311

while.end57:                                      ; preds = %while.cond
  %64 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !4313
  %aux58 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %64, i32 0, i32 2, !dbg !4313
  %65 = load i8*, i8** %aux58, align 8, !dbg !4313
  %66 = bitcast i8* %65 to %struct.variable_tracking_info_def*, !dbg !4313
  %mos59 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %66, i32 0, i32 0, !dbg !4313
  %67 = load %struct.VEC_micro_operation_heap*, %struct.VEC_micro_operation_heap** %mos59, align 8, !dbg !4313
  %tobool60 = icmp ne %struct.VEC_micro_operation_heap* %67, null, !dbg !4313
  br i1 %tobool60, label %cond.true61, label %cond.false65, !dbg !4313

cond.true61:                                      ; preds = %while.end57
  %68 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !4313
  %aux62 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %68, i32 0, i32 2, !dbg !4313
  %69 = load i8*, i8** %aux62, align 8, !dbg !4313
  %70 = bitcast i8* %69 to %struct.variable_tracking_info_def*, !dbg !4313
  %mos63 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %70, i32 0, i32 0, !dbg !4313
  %71 = load %struct.VEC_micro_operation_heap*, %struct.VEC_micro_operation_heap** %mos63, align 8, !dbg !4313
  %base64 = getelementptr inbounds %struct.VEC_micro_operation_heap, %struct.VEC_micro_operation_heap* %71, i32 0, i32 0, !dbg !4313
  br label %cond.end66, !dbg !4313

cond.false65:                                     ; preds = %while.end57
  br label %cond.end66, !dbg !4313

cond.end66:                                       ; preds = %cond.false65, %cond.true61
  %cond67 = phi %struct.VEC_micro_operation_base* [ %base64, %cond.true61 ], [ null, %cond.false65 ], !dbg !4313
  %call68 = call i32 @VEC_micro_operation_base_length(%struct.VEC_micro_operation_base* %cond67), !dbg !4313
  %sub69 = sub i32 %call68, 1, !dbg !4314
  store i32 %sub69, i32* %n2, align 4, !dbg !4315
  br label %while.cond70, !dbg !4316

while.cond70:                                     ; preds = %if.end106, %cond.end66
  %72 = load i32, i32* %n1, align 4, !dbg !4317
  %73 = load i32, i32* %n2, align 4, !dbg !4318
  %cmp71 = icmp slt i32 %72, %73, !dbg !4319
  br i1 %cmp71, label %while.body72, label %while.end107, !dbg !4316

while.body72:                                     ; preds = %while.cond70
  br label %while.cond73, !dbg !4320

while.cond73:                                     ; preds = %while.body81, %while.body72
  %74 = load i32, i32* %n1, align 4, !dbg !4322
  %75 = load i32, i32* %n2, align 4, !dbg !4323
  %cmp74 = icmp slt i32 %74, %75, !dbg !4324
  br i1 %cmp74, label %land.rhs75, label %land.end80, !dbg !4325

land.rhs75:                                       ; preds = %while.cond73
  %76 = load %struct.micro_operation_def*, %struct.micro_operation_def** %mos, align 8, !dbg !4326
  %77 = load i32, i32* %n1, align 4, !dbg !4327
  %idxprom76 = sext i32 %77 to i64, !dbg !4326
  %arrayidx77 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %76, i64 %idxprom76, !dbg !4326
  %type78 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %arrayidx77, i32 0, i32 0, !dbg !4328
  %78 = load i32, i32* %type78, align 8, !dbg !4328
  %cmp79 = icmp ne i32 %78, 3, !dbg !4329
  br label %land.end80

land.end80:                                       ; preds = %land.rhs75, %while.cond73
  %79 = phi i1 [ false, %while.cond73 ], [ %cmp79, %land.rhs75 ], !dbg !4330
  br i1 %79, label %while.body81, label %while.end83, !dbg !4320

while.body81:                                     ; preds = %land.end80
  %80 = load i32, i32* %n1, align 4, !dbg !4331
  %inc82 = add nsw i32 %80, 1, !dbg !4331
  store i32 %inc82, i32* %n1, align 4, !dbg !4331
  br label %while.cond73, !dbg !4320, !llvm.loop !4332

while.end83:                                      ; preds = %land.end80
  br label %while.cond84, !dbg !4333

while.cond84:                                     ; preds = %while.body92, %while.end83
  %81 = load i32, i32* %n1, align 4, !dbg !4334
  %82 = load i32, i32* %n2, align 4, !dbg !4335
  %cmp85 = icmp slt i32 %81, %82, !dbg !4336
  br i1 %cmp85, label %land.rhs86, label %land.end91, !dbg !4337

land.rhs86:                                       ; preds = %while.cond84
  %83 = load %struct.micro_operation_def*, %struct.micro_operation_def** %mos, align 8, !dbg !4338
  %84 = load i32, i32* %n2, align 4, !dbg !4339
  %idxprom87 = sext i32 %84 to i64, !dbg !4338
  %arrayidx88 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %83, i64 %idxprom87, !dbg !4338
  %type89 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %arrayidx88, i32 0, i32 0, !dbg !4340
  %85 = load i32, i32* %type89, align 8, !dbg !4340
  %cmp90 = icmp eq i32 %85, 3, !dbg !4341
  br label %land.end91

land.end91:                                       ; preds = %land.rhs86, %while.cond84
  %86 = phi i1 [ false, %while.cond84 ], [ %cmp90, %land.rhs86 ], !dbg !4330
  br i1 %86, label %while.body92, label %while.end94, !dbg !4333

while.body92:                                     ; preds = %land.end91
  %87 = load i32, i32* %n2, align 4, !dbg !4342
  %dec93 = add nsw i32 %87, -1, !dbg !4342
  store i32 %dec93, i32* %n2, align 4, !dbg !4342
  br label %while.cond84, !dbg !4333, !llvm.loop !4343

while.end94:                                      ; preds = %land.end91
  %88 = load i32, i32* %n1, align 4, !dbg !4344
  %89 = load i32, i32* %n2, align 4, !dbg !4346
  %cmp95 = icmp slt i32 %88, %89, !dbg !4347
  br i1 %cmp95, label %if.then96, label %if.end106, !dbg !4348

if.then96:                                        ; preds = %while.end94
  call void @llvm.dbg.declare(metadata %struct.micro_operation_def* %sw97, metadata !4349, metadata !DIExpression()), !dbg !4351
  %90 = load %struct.micro_operation_def*, %struct.micro_operation_def** %mos, align 8, !dbg !4352
  %91 = load i32, i32* %n1, align 4, !dbg !4353
  %idxprom98 = sext i32 %91 to i64, !dbg !4352
  %arrayidx99 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %90, i64 %idxprom98, !dbg !4352
  %92 = bitcast %struct.micro_operation_def* %sw97 to i8*, !dbg !4352
  %93 = bitcast %struct.micro_operation_def* %arrayidx99 to i8*, !dbg !4352
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 8 %93, i64 24, i1 false), !dbg !4352
  %94 = load %struct.micro_operation_def*, %struct.micro_operation_def** %mos, align 8, !dbg !4354
  %95 = load i32, i32* %n1, align 4, !dbg !4355
  %idxprom100 = sext i32 %95 to i64, !dbg !4354
  %arrayidx101 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %94, i64 %idxprom100, !dbg !4354
  %96 = load %struct.micro_operation_def*, %struct.micro_operation_def** %mos, align 8, !dbg !4356
  %97 = load i32, i32* %n2, align 4, !dbg !4357
  %idxprom102 = sext i32 %97 to i64, !dbg !4356
  %arrayidx103 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %96, i64 %idxprom102, !dbg !4356
  %98 = bitcast %struct.micro_operation_def* %arrayidx101 to i8*, !dbg !4356
  %99 = bitcast %struct.micro_operation_def* %arrayidx103 to i8*, !dbg !4356
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* align 8 %99, i64 24, i1 false), !dbg !4356
  %100 = load %struct.micro_operation_def*, %struct.micro_operation_def** %mos, align 8, !dbg !4358
  %101 = load i32, i32* %n2, align 4, !dbg !4359
  %idxprom104 = sext i32 %101 to i64, !dbg !4358
  %arrayidx105 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %100, i64 %idxprom104, !dbg !4358
  %102 = bitcast %struct.micro_operation_def* %arrayidx105 to i8*, !dbg !4360
  %103 = bitcast %struct.micro_operation_def* %sw97 to i8*, !dbg !4360
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* align 8 %103, i64 24, i1 false), !dbg !4360
  br label %if.end106, !dbg !4361

if.end106:                                        ; preds = %if.then96, %while.end94
  br label %while.cond70, !dbg !4316, !llvm.loop !4362

while.end107:                                     ; preds = %while.cond70
  %104 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4364
  %105 = bitcast %struct.rtx_def* %104 to i32*, !dbg !4364
  %bf.load = load i32, i32* %105, align 8, !dbg !4364
  %bf.clear = and i32 %bf.load, 65535, !dbg !4364
  %cmp108 = icmp eq i32 %bf.clear, 10, !dbg !4364
  br i1 %cmp108, label %if.then109, label %if.end125, !dbg !4366

if.then109:                                       ; preds = %while.end107
  call void @llvm.dbg.declare(metadata %struct.micro_operation_def* %mo, metadata !4367, metadata !DIExpression()), !dbg !4369
  %type110 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 0, !dbg !4370
  store i32 8, i32* %type110, align 8, !dbg !4371
  %106 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4372
  %insn111 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 1, !dbg !4373
  store %struct.rtx_def* %106, %struct.rtx_def** %insn111, align 8, !dbg !4374
  %u112 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 2, !dbg !4375
  %loc = bitcast %union.anon.0* %u112 to %struct.rtx_def**, !dbg !4376
  store %struct.rtx_def* null, %struct.rtx_def** %loc, align 8, !dbg !4377
  %107 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4378
  %tobool113 = icmp ne %struct._IO_FILE* %107, null, !dbg !4378
  br i1 %tobool113, label %land.lhs.true, label %if.end121, !dbg !4380

land.lhs.true:                                    ; preds = %if.then109
  %108 = load i32, i32* @dump_flags, align 4, !dbg !4381
  %and = and i32 %108, 8, !dbg !4382
  %tobool114 = icmp ne i32 %and, 0, !dbg !4382
  br i1 %tobool114, label %if.then115, label %if.end121, !dbg !4383

if.then115:                                       ; preds = %land.lhs.true
  %109 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4384
  %u116 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %109, i32 0, i32 1, !dbg !4384
  %fld117 = bitcast %union.u* %u116 to [1 x %union.rtunion_def]*, !dbg !4384
  %arrayidx118 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld117, i64 0, i64 5, !dbg !4384
  %rt_rtx119 = bitcast %union.rtunion_def* %arrayidx118 to %struct.rtx_def**, !dbg !4384
  %110 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx119, align 8, !dbg !4384
  %111 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !4385
  %112 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4386
  %type120 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 0, !dbg !4387
  %113 = load i32, i32* %type120, align 8, !dbg !4387
  %114 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !4388
  call void @log_op_type(%struct.rtx_def* %110, %struct.basic_block_def* %111, %struct.rtx_def* %112, i32 %113, %struct._IO_FILE* %114), !dbg !4389
  br label %if.end121, !dbg !4389

if.end121:                                        ; preds = %if.then115, %land.lhs.true, %if.then109
  %115 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !4390
  %aux122 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %115, i32 0, i32 2, !dbg !4390
  %116 = load i8*, i8** %aux122, align 8, !dbg !4390
  %117 = bitcast i8* %116 to %struct.variable_tracking_info_def*, !dbg !4390
  %mos123 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %117, i32 0, i32 0, !dbg !4390
  %call124 = call %struct.micro_operation_def* @VEC_micro_operation_heap_safe_push(%struct.VEC_micro_operation_heap** %mos123, %struct.micro_operation_def* %mo), !dbg !4390
  br label %if.end125, !dbg !4391

if.end125:                                        ; preds = %if.end121, %while.end107
  %118 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !4392
  %aux126 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %118, i32 0, i32 2, !dbg !4392
  %119 = load i8*, i8** %aux126, align 8, !dbg !4392
  %120 = bitcast i8* %119 to %struct.variable_tracking_info_def*, !dbg !4392
  %mos127 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %120, i32 0, i32 0, !dbg !4392
  %121 = load %struct.VEC_micro_operation_heap*, %struct.VEC_micro_operation_heap** %mos127, align 8, !dbg !4392
  %tobool128 = icmp ne %struct.VEC_micro_operation_heap* %121, null, !dbg !4392
  br i1 %tobool128, label %cond.true129, label %cond.false133, !dbg !4392

cond.true129:                                     ; preds = %if.end125
  %122 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !4392
  %aux130 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %122, i32 0, i32 2, !dbg !4392
  %123 = load i8*, i8** %aux130, align 8, !dbg !4392
  %124 = bitcast i8* %123 to %struct.variable_tracking_info_def*, !dbg !4392
  %mos131 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %124, i32 0, i32 0, !dbg !4392
  %125 = load %struct.VEC_micro_operation_heap*, %struct.VEC_micro_operation_heap** %mos131, align 8, !dbg !4392
  %base132 = getelementptr inbounds %struct.VEC_micro_operation_heap, %struct.VEC_micro_operation_heap* %125, i32 0, i32 0, !dbg !4392
  br label %cond.end134, !dbg !4392

cond.false133:                                    ; preds = %if.end125
  br label %cond.end134, !dbg !4392

cond.end134:                                      ; preds = %cond.false133, %cond.true129
  %cond135 = phi %struct.VEC_micro_operation_base* [ %base132, %cond.true129 ], [ null, %cond.false133 ], !dbg !4392
  %call136 = call i32 @VEC_micro_operation_base_length(%struct.VEC_micro_operation_base* %cond135), !dbg !4392
  store i32 %call136, i32* %n1, align 4, !dbg !4393
  %store_p137 = getelementptr inbounds %struct.count_use_info, %struct.count_use_info* %cui, i32 0, i32 4, !dbg !4394
  store i8 1, i8* %store_p137, align 4, !dbg !4395
  %126 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4396
  %u138 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %126, i32 0, i32 1, !dbg !4396
  %fld139 = bitcast %union.u* %u138 to [1 x %union.rtunion_def]*, !dbg !4396
  %arrayidx140 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld139, i64 0, i64 5, !dbg !4396
  %rt_rtx141 = bitcast %union.rtunion_def* %arrayidx140 to %struct.rtx_def**, !dbg !4396
  %127 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx141, align 8, !dbg !4396
  %128 = bitcast %struct.count_use_info* %cui to i8*, !dbg !4397
  call void @note_stores(%struct.rtx_def* %127, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* @add_stores, i8* %128), !dbg !4398
  %129 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !4399
  %aux142 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %129, i32 0, i32 2, !dbg !4399
  %130 = load i8*, i8** %aux142, align 8, !dbg !4399
  %131 = bitcast i8* %130 to %struct.variable_tracking_info_def*, !dbg !4399
  %mos143 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %131, i32 0, i32 0, !dbg !4399
  %132 = load %struct.VEC_micro_operation_heap*, %struct.VEC_micro_operation_heap** %mos143, align 8, !dbg !4399
  %tobool144 = icmp ne %struct.VEC_micro_operation_heap* %132, null, !dbg !4399
  br i1 %tobool144, label %cond.true145, label %cond.false149, !dbg !4399

cond.true145:                                     ; preds = %cond.end134
  %133 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !4399
  %aux146 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %133, i32 0, i32 2, !dbg !4399
  %134 = load i8*, i8** %aux146, align 8, !dbg !4399
  %135 = bitcast i8* %134 to %struct.variable_tracking_info_def*, !dbg !4399
  %mos147 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %135, i32 0, i32 0, !dbg !4399
  %136 = load %struct.VEC_micro_operation_heap*, %struct.VEC_micro_operation_heap** %mos147, align 8, !dbg !4399
  %base148 = getelementptr inbounds %struct.VEC_micro_operation_heap, %struct.VEC_micro_operation_heap* %136, i32 0, i32 0, !dbg !4399
  br label %cond.end150, !dbg !4399

cond.false149:                                    ; preds = %cond.end134
  br label %cond.end150, !dbg !4399

cond.end150:                                      ; preds = %cond.false149, %cond.true145
  %cond151 = phi %struct.VEC_micro_operation_base* [ %base148, %cond.true145 ], [ null, %cond.false149 ], !dbg !4399
  %call152 = call i32 @VEC_micro_operation_base_length(%struct.VEC_micro_operation_base* %cond151), !dbg !4399
  %sub153 = sub i32 %call152, 1, !dbg !4400
  store i32 %sub153, i32* %n2, align 4, !dbg !4401
  %137 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !4402
  %aux154 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %137, i32 0, i32 2, !dbg !4402
  %138 = load i8*, i8** %aux154, align 8, !dbg !4402
  %139 = bitcast i8* %138 to %struct.variable_tracking_info_def*, !dbg !4402
  %mos155 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %139, i32 0, i32 0, !dbg !4402
  %140 = load %struct.VEC_micro_operation_heap*, %struct.VEC_micro_operation_heap** %mos155, align 8, !dbg !4402
  %tobool156 = icmp ne %struct.VEC_micro_operation_heap* %140, null, !dbg !4402
  br i1 %tobool156, label %cond.true157, label %cond.false161, !dbg !4402

cond.true157:                                     ; preds = %cond.end150
  %141 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !4402
  %aux158 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %141, i32 0, i32 2, !dbg !4402
  %142 = load i8*, i8** %aux158, align 8, !dbg !4402
  %143 = bitcast i8* %142 to %struct.variable_tracking_info_def*, !dbg !4402
  %mos159 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %143, i32 0, i32 0, !dbg !4402
  %144 = load %struct.VEC_micro_operation_heap*, %struct.VEC_micro_operation_heap** %mos159, align 8, !dbg !4402
  %base160 = getelementptr inbounds %struct.VEC_micro_operation_heap, %struct.VEC_micro_operation_heap* %144, i32 0, i32 0, !dbg !4402
  br label %cond.end162, !dbg !4402

cond.false161:                                    ; preds = %cond.end150
  br label %cond.end162, !dbg !4402

cond.end162:                                      ; preds = %cond.false161, %cond.true157
  %cond163 = phi %struct.VEC_micro_operation_base* [ %base160, %cond.true157 ], [ null, %cond.false161 ], !dbg !4402
  %call164 = call %struct.micro_operation_def* @VEC_micro_operation_base_address(%struct.VEC_micro_operation_base* %cond163), !dbg !4402
  store %struct.micro_operation_def* %call164, %struct.micro_operation_def** %mos, align 8, !dbg !4403
  br label %while.cond165, !dbg !4404

while.cond165:                                    ; preds = %if.end201, %cond.end162
  %145 = load i32, i32* %n1, align 4, !dbg !4405
  %146 = load i32, i32* %n2, align 4, !dbg !4406
  %cmp166 = icmp slt i32 %145, %146, !dbg !4407
  br i1 %cmp166, label %while.body167, label %while.end202, !dbg !4404

while.body167:                                    ; preds = %while.cond165
  br label %while.cond168, !dbg !4408

while.cond168:                                    ; preds = %while.body176, %while.body167
  %147 = load i32, i32* %n1, align 4, !dbg !4410
  %148 = load i32, i32* %n2, align 4, !dbg !4411
  %cmp169 = icmp slt i32 %147, %148, !dbg !4412
  br i1 %cmp169, label %land.rhs170, label %land.end175, !dbg !4413

land.rhs170:                                      ; preds = %while.cond168
  %149 = load %struct.micro_operation_def*, %struct.micro_operation_def** %mos, align 8, !dbg !4414
  %150 = load i32, i32* %n1, align 4, !dbg !4415
  %idxprom171 = sext i32 %150 to i64, !dbg !4414
  %arrayidx172 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %149, i64 %idxprom171, !dbg !4414
  %type173 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %arrayidx172, i32 0, i32 0, !dbg !4416
  %151 = load i32, i32* %type173, align 8, !dbg !4416
  %cmp174 = icmp eq i32 %151, 2, !dbg !4417
  br label %land.end175

land.end175:                                      ; preds = %land.rhs170, %while.cond168
  %152 = phi i1 [ false, %while.cond168 ], [ %cmp174, %land.rhs170 ], !dbg !4418
  br i1 %152, label %while.body176, label %while.end178, !dbg !4408

while.body176:                                    ; preds = %land.end175
  %153 = load i32, i32* %n1, align 4, !dbg !4419
  %inc177 = add nsw i32 %153, 1, !dbg !4419
  store i32 %inc177, i32* %n1, align 4, !dbg !4419
  br label %while.cond168, !dbg !4408, !llvm.loop !4420

while.end178:                                     ; preds = %land.end175
  br label %while.cond179, !dbg !4421

while.cond179:                                    ; preds = %while.body187, %while.end178
  %154 = load i32, i32* %n1, align 4, !dbg !4422
  %155 = load i32, i32* %n2, align 4, !dbg !4423
  %cmp180 = icmp slt i32 %154, %155, !dbg !4424
  br i1 %cmp180, label %land.rhs181, label %land.end186, !dbg !4425

land.rhs181:                                      ; preds = %while.cond179
  %156 = load %struct.micro_operation_def*, %struct.micro_operation_def** %mos, align 8, !dbg !4426
  %157 = load i32, i32* %n2, align 4, !dbg !4427
  %idxprom182 = sext i32 %157 to i64, !dbg !4426
  %arrayidx183 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %156, i64 %idxprom182, !dbg !4426
  %type184 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %arrayidx183, i32 0, i32 0, !dbg !4428
  %158 = load i32, i32* %type184, align 8, !dbg !4428
  %cmp185 = icmp ne i32 %158, 2, !dbg !4429
  br label %land.end186

land.end186:                                      ; preds = %land.rhs181, %while.cond179
  %159 = phi i1 [ false, %while.cond179 ], [ %cmp185, %land.rhs181 ], !dbg !4418
  br i1 %159, label %while.body187, label %while.end189, !dbg !4421

while.body187:                                    ; preds = %land.end186
  %160 = load i32, i32* %n2, align 4, !dbg !4430
  %dec188 = add nsw i32 %160, -1, !dbg !4430
  store i32 %dec188, i32* %n2, align 4, !dbg !4430
  br label %while.cond179, !dbg !4421, !llvm.loop !4431

while.end189:                                     ; preds = %land.end186
  %161 = load i32, i32* %n1, align 4, !dbg !4432
  %162 = load i32, i32* %n2, align 4, !dbg !4434
  %cmp190 = icmp slt i32 %161, %162, !dbg !4435
  br i1 %cmp190, label %if.then191, label %if.end201, !dbg !4436

if.then191:                                       ; preds = %while.end189
  call void @llvm.dbg.declare(metadata %struct.micro_operation_def* %sw192, metadata !4437, metadata !DIExpression()), !dbg !4439
  %163 = load %struct.micro_operation_def*, %struct.micro_operation_def** %mos, align 8, !dbg !4440
  %164 = load i32, i32* %n1, align 4, !dbg !4441
  %idxprom193 = sext i32 %164 to i64, !dbg !4440
  %arrayidx194 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %163, i64 %idxprom193, !dbg !4440
  %165 = bitcast %struct.micro_operation_def* %sw192 to i8*, !dbg !4440
  %166 = bitcast %struct.micro_operation_def* %arrayidx194 to i8*, !dbg !4440
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %165, i8* align 8 %166, i64 24, i1 false), !dbg !4440
  %167 = load %struct.micro_operation_def*, %struct.micro_operation_def** %mos, align 8, !dbg !4442
  %168 = load i32, i32* %n1, align 4, !dbg !4443
  %idxprom195 = sext i32 %168 to i64, !dbg !4442
  %arrayidx196 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %167, i64 %idxprom195, !dbg !4442
  %169 = load %struct.micro_operation_def*, %struct.micro_operation_def** %mos, align 8, !dbg !4444
  %170 = load i32, i32* %n2, align 4, !dbg !4445
  %idxprom197 = sext i32 %170 to i64, !dbg !4444
  %arrayidx198 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %169, i64 %idxprom197, !dbg !4444
  %171 = bitcast %struct.micro_operation_def* %arrayidx196 to i8*, !dbg !4444
  %172 = bitcast %struct.micro_operation_def* %arrayidx198 to i8*, !dbg !4444
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %171, i8* align 8 %172, i64 24, i1 false), !dbg !4444
  %173 = load %struct.micro_operation_def*, %struct.micro_operation_def** %mos, align 8, !dbg !4446
  %174 = load i32, i32* %n2, align 4, !dbg !4447
  %idxprom199 = sext i32 %174 to i64, !dbg !4446
  %arrayidx200 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %173, i64 %idxprom199, !dbg !4446
  %175 = bitcast %struct.micro_operation_def* %arrayidx200 to i8*, !dbg !4448
  %176 = bitcast %struct.micro_operation_def* %sw192 to i8*, !dbg !4448
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %175, i8* align 8 %176, i64 24, i1 false), !dbg !4448
  br label %if.end201, !dbg !4449

if.end201:                                        ; preds = %if.then191, %while.end189
  br label %while.cond165, !dbg !4404, !llvm.loop !4450

while.end202:                                     ; preds = %while.cond165
  %177 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !4452
  %aux203 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %177, i32 0, i32 2, !dbg !4452
  %178 = load i8*, i8** %aux203, align 8, !dbg !4452
  %179 = bitcast i8* %178 to %struct.variable_tracking_info_def*, !dbg !4452
  %mos204 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %179, i32 0, i32 0, !dbg !4452
  %180 = load %struct.VEC_micro_operation_heap*, %struct.VEC_micro_operation_heap** %mos204, align 8, !dbg !4452
  %tobool205 = icmp ne %struct.VEC_micro_operation_heap* %180, null, !dbg !4452
  br i1 %tobool205, label %cond.true206, label %cond.false210, !dbg !4452

cond.true206:                                     ; preds = %while.end202
  %181 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !4452
  %aux207 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %181, i32 0, i32 2, !dbg !4452
  %182 = load i8*, i8** %aux207, align 8, !dbg !4452
  %183 = bitcast i8* %182 to %struct.variable_tracking_info_def*, !dbg !4452
  %mos208 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %183, i32 0, i32 0, !dbg !4452
  %184 = load %struct.VEC_micro_operation_heap*, %struct.VEC_micro_operation_heap** %mos208, align 8, !dbg !4452
  %base209 = getelementptr inbounds %struct.VEC_micro_operation_heap, %struct.VEC_micro_operation_heap* %184, i32 0, i32 0, !dbg !4452
  br label %cond.end211, !dbg !4452

cond.false210:                                    ; preds = %while.end202
  br label %cond.end211, !dbg !4452

cond.end211:                                      ; preds = %cond.false210, %cond.true206
  %cond212 = phi %struct.VEC_micro_operation_base* [ %base209, %cond.true206 ], [ null, %cond.false210 ], !dbg !4452
  %call213 = call i32 @VEC_micro_operation_base_length(%struct.VEC_micro_operation_base* %cond212), !dbg !4452
  %sub214 = sub i32 %call213, 1, !dbg !4453
  store i32 %sub214, i32* %n2, align 4, !dbg !4454
  br label %while.cond215, !dbg !4455

while.cond215:                                    ; preds = %if.end251, %cond.end211
  %185 = load i32, i32* %n1, align 4, !dbg !4456
  %186 = load i32, i32* %n2, align 4, !dbg !4457
  %cmp216 = icmp slt i32 %185, %186, !dbg !4458
  br i1 %cmp216, label %while.body217, label %while.end252, !dbg !4455

while.body217:                                    ; preds = %while.cond215
  br label %while.cond218, !dbg !4459

while.cond218:                                    ; preds = %while.body226, %while.body217
  %187 = load i32, i32* %n1, align 4, !dbg !4461
  %188 = load i32, i32* %n2, align 4, !dbg !4462
  %cmp219 = icmp slt i32 %187, %188, !dbg !4463
  br i1 %cmp219, label %land.rhs220, label %land.end225, !dbg !4464

land.rhs220:                                      ; preds = %while.cond218
  %189 = load %struct.micro_operation_def*, %struct.micro_operation_def** %mos, align 8, !dbg !4465
  %190 = load i32, i32* %n1, align 4, !dbg !4466
  %idxprom221 = sext i32 %190 to i64, !dbg !4465
  %arrayidx222 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %189, i64 %idxprom221, !dbg !4465
  %type223 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %arrayidx222, i32 0, i32 0, !dbg !4467
  %191 = load i32, i32* %type223, align 8, !dbg !4467
  %cmp224 = icmp eq i32 %191, 7, !dbg !4468
  br label %land.end225

land.end225:                                      ; preds = %land.rhs220, %while.cond218
  %192 = phi i1 [ false, %while.cond218 ], [ %cmp224, %land.rhs220 ], !dbg !4469
  br i1 %192, label %while.body226, label %while.end228, !dbg !4459

while.body226:                                    ; preds = %land.end225
  %193 = load i32, i32* %n1, align 4, !dbg !4470
  %inc227 = add nsw i32 %193, 1, !dbg !4470
  store i32 %inc227, i32* %n1, align 4, !dbg !4470
  br label %while.cond218, !dbg !4459, !llvm.loop !4471

while.end228:                                     ; preds = %land.end225
  br label %while.cond229, !dbg !4472

while.cond229:                                    ; preds = %while.body237, %while.end228
  %194 = load i32, i32* %n1, align 4, !dbg !4473
  %195 = load i32, i32* %n2, align 4, !dbg !4474
  %cmp230 = icmp slt i32 %194, %195, !dbg !4475
  br i1 %cmp230, label %land.rhs231, label %land.end236, !dbg !4476

land.rhs231:                                      ; preds = %while.cond229
  %196 = load %struct.micro_operation_def*, %struct.micro_operation_def** %mos, align 8, !dbg !4477
  %197 = load i32, i32* %n2, align 4, !dbg !4478
  %idxprom232 = sext i32 %197 to i64, !dbg !4477
  %arrayidx233 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %196, i64 %idxprom232, !dbg !4477
  %type234 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %arrayidx233, i32 0, i32 0, !dbg !4479
  %198 = load i32, i32* %type234, align 8, !dbg !4479
  %cmp235 = icmp ne i32 %198, 7, !dbg !4480
  br label %land.end236

land.end236:                                      ; preds = %land.rhs231, %while.cond229
  %199 = phi i1 [ false, %while.cond229 ], [ %cmp235, %land.rhs231 ], !dbg !4469
  br i1 %199, label %while.body237, label %while.end239, !dbg !4472

while.body237:                                    ; preds = %land.end236
  %200 = load i32, i32* %n2, align 4, !dbg !4481
  %dec238 = add nsw i32 %200, -1, !dbg !4481
  store i32 %dec238, i32* %n2, align 4, !dbg !4481
  br label %while.cond229, !dbg !4472, !llvm.loop !4482

while.end239:                                     ; preds = %land.end236
  %201 = load i32, i32* %n1, align 4, !dbg !4483
  %202 = load i32, i32* %n2, align 4, !dbg !4485
  %cmp240 = icmp slt i32 %201, %202, !dbg !4486
  br i1 %cmp240, label %if.then241, label %if.end251, !dbg !4487

if.then241:                                       ; preds = %while.end239
  call void @llvm.dbg.declare(metadata %struct.micro_operation_def* %sw242, metadata !4488, metadata !DIExpression()), !dbg !4490
  %203 = load %struct.micro_operation_def*, %struct.micro_operation_def** %mos, align 8, !dbg !4491
  %204 = load i32, i32* %n1, align 4, !dbg !4492
  %idxprom243 = sext i32 %204 to i64, !dbg !4491
  %arrayidx244 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %203, i64 %idxprom243, !dbg !4491
  %205 = bitcast %struct.micro_operation_def* %sw242 to i8*, !dbg !4491
  %206 = bitcast %struct.micro_operation_def* %arrayidx244 to i8*, !dbg !4491
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %205, i8* align 8 %206, i64 24, i1 false), !dbg !4491
  %207 = load %struct.micro_operation_def*, %struct.micro_operation_def** %mos, align 8, !dbg !4493
  %208 = load i32, i32* %n1, align 4, !dbg !4494
  %idxprom245 = sext i32 %208 to i64, !dbg !4493
  %arrayidx246 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %207, i64 %idxprom245, !dbg !4493
  %209 = load %struct.micro_operation_def*, %struct.micro_operation_def** %mos, align 8, !dbg !4495
  %210 = load i32, i32* %n2, align 4, !dbg !4496
  %idxprom247 = sext i32 %210 to i64, !dbg !4495
  %arrayidx248 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %209, i64 %idxprom247, !dbg !4495
  %211 = bitcast %struct.micro_operation_def* %arrayidx246 to i8*, !dbg !4495
  %212 = bitcast %struct.micro_operation_def* %arrayidx248 to i8*, !dbg !4495
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %211, i8* align 8 %212, i64 24, i1 false), !dbg !4495
  %213 = load %struct.micro_operation_def*, %struct.micro_operation_def** %mos, align 8, !dbg !4497
  %214 = load i32, i32* %n2, align 4, !dbg !4498
  %idxprom249 = sext i32 %214 to i64, !dbg !4497
  %arrayidx250 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %213, i64 %idxprom249, !dbg !4497
  %215 = bitcast %struct.micro_operation_def* %arrayidx250 to i8*, !dbg !4499
  %216 = bitcast %struct.micro_operation_def* %sw242 to i8*, !dbg !4499
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %215, i8* align 8 %216, i64 24, i1 false), !dbg !4499
  br label %if.end251, !dbg !4500

if.end251:                                        ; preds = %if.then241, %while.end239
  br label %while.cond215, !dbg !4455, !llvm.loop !4501

while.end252:                                     ; preds = %while.cond215
  ret void, !dbg !4503
}

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #2

declare dso_local i32 @cselib_get_next_uid() #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @single_pred_p(%struct.basic_block_def* %bb) #0 !dbg !4504 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !4507, metadata !DIExpression()), !dbg !4508
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !4509
  %preds = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i32 0, i32 0, !dbg !4509
  %1 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds, align 8, !dbg !4509
  %tobool = icmp ne %struct.VEC_edge_gc* %1, null, !dbg !4509
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4509

cond.true:                                        ; preds = %entry
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !4509
  %preds1 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2, i32 0, i32 0, !dbg !4509
  %3 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %preds1, align 8, !dbg !4509
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %3, i32 0, i32 0, !dbg !4509
  br label %cond.end, !dbg !4509

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !4509

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !4509
  %call = call i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond), !dbg !4509
  %cmp = icmp eq i32 %call, 1, !dbg !4510
  %conv = zext i1 %cmp to i32, !dbg !4510
  %conv2 = trunc i32 %conv to i8, !dbg !4509
  ret i8 %conv2, !dbg !4511
}

declare dso_local %struct.edge_def* @find_edge(%struct.basic_block_def*, %struct.basic_block_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @insn_stack_adjust_offset_pre_post(%struct.rtx_def* %insn, i64* %pre, i64* %post) #0 !dbg !4512 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %pre.addr = alloca i64*, align 8
  %post.addr = alloca i64*, align 8
  %pattern = alloca %struct.rtx_def*, align 8
  %expr = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !4516, metadata !DIExpression()), !dbg !4517
  store i64* %pre, i64** %pre.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %pre.addr, metadata !4518, metadata !DIExpression()), !dbg !4519
  store i64* %post, i64** %post.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %post.addr, metadata !4520, metadata !DIExpression()), !dbg !4521
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %pattern, metadata !4522, metadata !DIExpression()), !dbg !4523
  %0 = load i64*, i64** %pre.addr, align 8, !dbg !4524
  store i64 0, i64* %0, align 8, !dbg !4525
  %1 = load i64*, i64** %post.addr, align 8, !dbg !4526
  store i64 0, i64* %1, align 8, !dbg !4527
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4528
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1, !dbg !4528
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4528
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 5, !dbg !4528
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !4528
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4528
  store %struct.rtx_def* %3, %struct.rtx_def** %pattern, align 8, !dbg !4529
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4530
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !4530
  %bf.load = load i32, i32* %5, align 8, !dbg !4530
  %bf.lshr = lshr i32 %bf.load, 30, !dbg !4530
  %bf.clear = and i32 %bf.lshr, 1, !dbg !4530
  %tobool = icmp ne i32 %bf.clear, 0, !dbg !4530
  br i1 %tobool, label %if.then, label %if.end7, !dbg !4532

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %expr, metadata !4533, metadata !DIExpression()), !dbg !4535
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4536
  %call = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %6, i32 17, %struct.rtx_def* null), !dbg !4537
  store %struct.rtx_def* %call, %struct.rtx_def** %expr, align 8, !dbg !4535
  %7 = load %struct.rtx_def*, %struct.rtx_def** %expr, align 8, !dbg !4538
  %tobool1 = icmp ne %struct.rtx_def* %7, null, !dbg !4538
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !4540

if.then2:                                         ; preds = %if.then
  %8 = load %struct.rtx_def*, %struct.rtx_def** %expr, align 8, !dbg !4541
  %u3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1, !dbg !4541
  %fld4 = bitcast %union.u* %u3 to [1 x %union.rtunion_def]*, !dbg !4541
  %arrayidx5 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4, i64 0, i64 0, !dbg !4541
  %rt_rtx6 = bitcast %union.rtunion_def* %arrayidx5 to %struct.rtx_def**, !dbg !4541
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx6, align 8, !dbg !4541
  store %struct.rtx_def* %9, %struct.rtx_def** %pattern, align 8, !dbg !4542
  br label %if.end, !dbg !4543

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end7, !dbg !4544

if.end7:                                          ; preds = %if.end, %entry
  %10 = load %struct.rtx_def*, %struct.rtx_def** %pattern, align 8, !dbg !4545
  %11 = bitcast %struct.rtx_def* %10 to i32*, !dbg !4545
  %bf.load8 = load i32, i32* %11, align 8, !dbg !4545
  %bf.clear9 = and i32 %bf.load8, 65535, !dbg !4545
  %cmp = icmp eq i32 %bf.clear9, 23, !dbg !4547
  br i1 %cmp, label %if.then10, label %if.else, !dbg !4548

if.then10:                                        ; preds = %if.end7
  %12 = load %struct.rtx_def*, %struct.rtx_def** %pattern, align 8, !dbg !4549
  %13 = load i64*, i64** %pre.addr, align 8, !dbg !4550
  %14 = load i64*, i64** %post.addr, align 8, !dbg !4551
  call void @stack_adjust_offset_pre_post(%struct.rtx_def* %12, i64* %13, i64* %14), !dbg !4552
  br label %if.end40, !dbg !4552

if.else:                                          ; preds = %if.end7
  %15 = load %struct.rtx_def*, %struct.rtx_def** %pattern, align 8, !dbg !4553
  %16 = bitcast %struct.rtx_def* %15 to i32*, !dbg !4553
  %bf.load11 = load i32, i32* %16, align 8, !dbg !4553
  %bf.clear12 = and i32 %bf.load11, 65535, !dbg !4553
  %cmp13 = icmp eq i32 %bf.clear12, 15, !dbg !4555
  br i1 %cmp13, label %if.then17, label %lor.lhs.false, !dbg !4556

lor.lhs.false:                                    ; preds = %if.else
  %17 = load %struct.rtx_def*, %struct.rtx_def** %pattern, align 8, !dbg !4557
  %18 = bitcast %struct.rtx_def* %17 to i32*, !dbg !4557
  %bf.load14 = load i32, i32* %18, align 8, !dbg !4557
  %bf.clear15 = and i32 %bf.load14, 65535, !dbg !4557
  %cmp16 = icmp eq i32 %bf.clear15, 5, !dbg !4558
  br i1 %cmp16, label %if.then17, label %if.end39, !dbg !4559

if.then17:                                        ; preds = %lor.lhs.false, %if.else
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4560, metadata !DIExpression()), !dbg !4562
  %19 = load %struct.rtx_def*, %struct.rtx_def** %pattern, align 8, !dbg !4563
  %u18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1, !dbg !4563
  %fld19 = bitcast %union.u* %u18 to [1 x %union.rtunion_def]*, !dbg !4563
  %arrayidx20 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld19, i64 0, i64 0, !dbg !4563
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx20 to %struct.rtvec_def**, !dbg !4563
  %20 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !4563
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %20, i32 0, i32 0, !dbg !4563
  %21 = load i32, i32* %num_elem, align 8, !dbg !4563
  %sub = sub nsw i32 %21, 1, !dbg !4565
  store i32 %sub, i32* %i, align 4, !dbg !4566
  br label %for.cond, !dbg !4567

for.cond:                                         ; preds = %for.inc, %if.then17
  %22 = load i32, i32* %i, align 4, !dbg !4568
  %cmp21 = icmp sge i32 %22, 0, !dbg !4570
  br i1 %cmp21, label %for.body, label %for.end, !dbg !4571

for.body:                                         ; preds = %for.cond
  %23 = load %struct.rtx_def*, %struct.rtx_def** %pattern, align 8, !dbg !4572
  %u22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1, !dbg !4572
  %fld23 = bitcast %union.u* %u22 to [1 x %union.rtunion_def]*, !dbg !4572
  %arrayidx24 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld23, i64 0, i64 0, !dbg !4572
  %rt_rtvec25 = bitcast %union.rtunion_def* %arrayidx24 to %struct.rtvec_def**, !dbg !4572
  %24 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec25, align 8, !dbg !4572
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %24, i32 0, i32 1, !dbg !4572
  %25 = load i32, i32* %i, align 4, !dbg !4572
  %idxprom = sext i32 %25 to i64, !dbg !4572
  %arrayidx26 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom, !dbg !4572
  %26 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx26, align 8, !dbg !4572
  %27 = bitcast %struct.rtx_def* %26 to i32*, !dbg !4572
  %bf.load27 = load i32, i32* %27, align 8, !dbg !4572
  %bf.clear28 = and i32 %bf.load27, 65535, !dbg !4572
  %cmp29 = icmp eq i32 %bf.clear28, 23, !dbg !4574
  br i1 %cmp29, label %if.then30, label %if.end38, !dbg !4575

if.then30:                                        ; preds = %for.body
  %28 = load %struct.rtx_def*, %struct.rtx_def** %pattern, align 8, !dbg !4576
  %u31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i32 0, i32 1, !dbg !4576
  %fld32 = bitcast %union.u* %u31 to [1 x %union.rtunion_def]*, !dbg !4576
  %arrayidx33 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld32, i64 0, i64 0, !dbg !4576
  %rt_rtvec34 = bitcast %union.rtunion_def* %arrayidx33 to %struct.rtvec_def**, !dbg !4576
  %29 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec34, align 8, !dbg !4576
  %elem35 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %29, i32 0, i32 1, !dbg !4576
  %30 = load i32, i32* %i, align 4, !dbg !4576
  %idxprom36 = sext i32 %30 to i64, !dbg !4576
  %arrayidx37 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem35, i64 0, i64 %idxprom36, !dbg !4576
  %31 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx37, align 8, !dbg !4576
  %32 = load i64*, i64** %pre.addr, align 8, !dbg !4577
  %33 = load i64*, i64** %post.addr, align 8, !dbg !4578
  call void @stack_adjust_offset_pre_post(%struct.rtx_def* %31, i64* %32, i64* %33), !dbg !4579
  br label %if.end38, !dbg !4579

if.end38:                                         ; preds = %if.then30, %for.body
  br label %for.inc, !dbg !4580

for.inc:                                          ; preds = %if.end38
  %34 = load i32, i32* %i, align 4, !dbg !4581
  %dec = add nsw i32 %34, -1, !dbg !4581
  store i32 %dec, i32* %i, align 4, !dbg !4581
  br label %for.cond, !dbg !4582, !llvm.loop !4583

for.end:                                          ; preds = %for.cond
  br label %if.end39, !dbg !4585

if.end39:                                         ; preds = %for.end, %lor.lhs.false
  br label %if.end40

if.end40:                                         ; preds = %if.end39, %if.then10
  ret void, !dbg !4586
}

; Function Attrs: noinline nounwind uwtable
define internal void @log_op_type(%struct.rtx_def* %x, %struct.basic_block_def* %bb, %struct.rtx_def* %insn, i32 %mopt, %struct._IO_FILE* %out) #0 !dbg !4587 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %mopt.addr = alloca i32, align 4
  %out.addr = alloca %struct._IO_FILE*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !4640, metadata !DIExpression()), !dbg !4641
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !4642, metadata !DIExpression()), !dbg !4643
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !4644, metadata !DIExpression()), !dbg !4645
  store i32 %mopt, i32* %mopt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mopt.addr, metadata !4646, metadata !DIExpression()), !dbg !4647
  store %struct._IO_FILE* %out, %struct._IO_FILE** %out.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %out.addr, metadata !4648, metadata !DIExpression()), !dbg !4649
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** %out.addr, align 8, !dbg !4650
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !4651
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1, i32 0, i32 9, !dbg !4652
  %2 = load i32, i32* %index, align 8, !dbg !4652
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !4653
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %3, i32 0, i32 2, !dbg !4653
  %4 = load i8*, i8** %aux, align 8, !dbg !4653
  %5 = bitcast i8* %4 to %struct.variable_tracking_info_def*, !dbg !4653
  %mos = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %5, i32 0, i32 0, !dbg !4653
  %6 = load %struct.VEC_micro_operation_heap*, %struct.VEC_micro_operation_heap** %mos, align 8, !dbg !4653
  %tobool = icmp ne %struct.VEC_micro_operation_heap* %6, null, !dbg !4653
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4653

cond.true:                                        ; preds = %entry
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !4653
  %aux1 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %7, i32 0, i32 2, !dbg !4653
  %8 = load i8*, i8** %aux1, align 8, !dbg !4653
  %9 = bitcast i8* %8 to %struct.variable_tracking_info_def*, !dbg !4653
  %mos2 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %9, i32 0, i32 0, !dbg !4653
  %10 = load %struct.VEC_micro_operation_heap*, %struct.VEC_micro_operation_heap** %mos2, align 8, !dbg !4653
  %base = getelementptr inbounds %struct.VEC_micro_operation_heap, %struct.VEC_micro_operation_heap* %10, i32 0, i32 0, !dbg !4653
  br label %cond.end, !dbg !4653

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !4653

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_micro_operation_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !4653
  %call = call i32 @VEC_micro_operation_base_length(%struct.VEC_micro_operation_base* %cond), !dbg !4653
  %11 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4654
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1, !dbg !4654
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4654
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !4654
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !4654
  %12 = load i32, i32* %rt_int, align 8, !dbg !4654
  %13 = load i32, i32* %mopt.addr, align 4, !dbg !4655
  %idxprom = zext i32 %13 to i64, !dbg !4656
  %arrayidx3 = getelementptr inbounds [10 x i8*], [10 x i8*]* @micro_operation_type_name, i64 0, i64 %idxprom, !dbg !4656
  %14 = load i8*, i8** %arrayidx3, align 8, !dbg !4656
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.11, i64 0, i64 0), i32 %2, i32 %call, i32 %12, i8* %14), !dbg !4657
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %out.addr, align 8, !dbg !4658
  %16 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4659
  call void @print_inline_rtx(%struct._IO_FILE* %15, %struct.rtx_def* %16, i32 2), !dbg !4660
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** %out.addr, align 8, !dbg !4661
  %call5 = call i32 @fputc(i32 10, %struct._IO_FILE* %17), !dbg !4662
  ret void, !dbg !4663
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.micro_operation_def* @VEC_micro_operation_heap_safe_push(%struct.VEC_micro_operation_heap** %vec_, %struct.micro_operation_def* %obj_) #0 !dbg !4664 {
entry:
  %vec_.addr = alloca %struct.VEC_micro_operation_heap**, align 8
  %obj_.addr = alloca %struct.micro_operation_def*, align 8
  store %struct.VEC_micro_operation_heap** %vec_, %struct.VEC_micro_operation_heap*** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_micro_operation_heap*** %vec_.addr, metadata !4670, metadata !DIExpression()), !dbg !4671
  store %struct.micro_operation_def* %obj_, %struct.micro_operation_def** %obj_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.micro_operation_def** %obj_.addr, metadata !4672, metadata !DIExpression()), !dbg !4671
  %0 = load %struct.VEC_micro_operation_heap**, %struct.VEC_micro_operation_heap*** %vec_.addr, align 8, !dbg !4671
  %call = call i32 @VEC_micro_operation_heap_reserve(%struct.VEC_micro_operation_heap** %0, i32 1), !dbg !4671
  %1 = load %struct.VEC_micro_operation_heap**, %struct.VEC_micro_operation_heap*** %vec_.addr, align 8, !dbg !4671
  %2 = load %struct.VEC_micro_operation_heap*, %struct.VEC_micro_operation_heap** %1, align 8, !dbg !4671
  %tobool = icmp ne %struct.VEC_micro_operation_heap* %2, null, !dbg !4671
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !4671

cond.true:                                        ; preds = %entry
  %3 = load %struct.VEC_micro_operation_heap**, %struct.VEC_micro_operation_heap*** %vec_.addr, align 8, !dbg !4671
  %4 = load %struct.VEC_micro_operation_heap*, %struct.VEC_micro_operation_heap** %3, align 8, !dbg !4671
  %base = getelementptr inbounds %struct.VEC_micro_operation_heap, %struct.VEC_micro_operation_heap* %4, i32 0, i32 0, !dbg !4671
  br label %cond.end, !dbg !4671

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !4671

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_micro_operation_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !4671
  %5 = load %struct.micro_operation_def*, %struct.micro_operation_def** %obj_.addr, align 8, !dbg !4671
  %call1 = call %struct.micro_operation_def* @VEC_micro_operation_base_quick_push(%struct.VEC_micro_operation_base* %cond, %struct.micro_operation_def* %5), !dbg !4671
  ret %struct.micro_operation_def* %call1, !dbg !4671
}

; Function Attrs: noinline nounwind uwtable
define internal void @adjust_insn(%struct.basic_block_def* %bb, %struct.rtx_def* %insn) #0 !dbg !4673 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %amd = alloca %struct.adjust_mem_data, align 8
  %set = alloca %struct.rtx_def*, align 8
  %note = alloca %struct.rtx_def*, align 8
  %pat = alloca %struct.rtx_def**, align 8
  %new_pat = alloca %struct.rtx_def*, align 8
  %s = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %oldn = alloca i32, align 4
  %newn = alloca i32, align 4
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !4676, metadata !DIExpression()), !dbg !4677
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !4678, metadata !DIExpression()), !dbg !4679
  call void @llvm.dbg.declare(metadata %struct.adjust_mem_data* %amd, metadata !4680, metadata !DIExpression()), !dbg !4681
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %set, metadata !4682, metadata !DIExpression()), !dbg !4683
  %mem_mode = getelementptr inbounds %struct.adjust_mem_data, %struct.adjust_mem_data* %amd, i32 0, i32 1, !dbg !4684
  store i32 0, i32* %mem_mode, align 4, !dbg !4685
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !4686
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i32 0, i32 2, !dbg !4686
  %1 = load i8*, i8** %aux, align 8, !dbg !4686
  %2 = bitcast i8* %1 to %struct.variable_tracking_info_def*, !dbg !4686
  %out = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %2, i32 0, i32 2, !dbg !4687
  %stack_adjust = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %out, i32 0, i32 0, !dbg !4688
  %3 = load i64, i64* %stack_adjust, align 8, !dbg !4688
  %sub = sub nsw i64 0, %3, !dbg !4689
  %stack_adjust1 = getelementptr inbounds %struct.adjust_mem_data, %struct.adjust_mem_data* %amd, i32 0, i32 2, !dbg !4690
  store i64 %sub, i64* %stack_adjust1, align 8, !dbg !4691
  %side_effects = getelementptr inbounds %struct.adjust_mem_data, %struct.adjust_mem_data* %amd, i32 0, i32 3, !dbg !4692
  store %struct.rtx_def* null, %struct.rtx_def** %side_effects, align 8, !dbg !4693
  %store = getelementptr inbounds %struct.adjust_mem_data, %struct.adjust_mem_data* %amd, i32 0, i32 0, !dbg !4694
  store i8 1, i8* %store, align 8, !dbg !4695
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4696
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1, !dbg !4696
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4696
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 5, !dbg !4696
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !4696
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4696
  %6 = bitcast %struct.adjust_mem_data* %amd to i8*, !dbg !4697
  call void @note_stores(%struct.rtx_def* %5, void (%struct.rtx_def*, %struct.rtx_def*, i8*)* @adjust_mem_stores, i8* %6), !dbg !4698
  %store2 = getelementptr inbounds %struct.adjust_mem_data, %struct.adjust_mem_data* %amd, i32 0, i32 0, !dbg !4699
  store i8 0, i8* %store2, align 8, !dbg !4700
  %7 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4701
  %u3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1, !dbg !4701
  %fld4 = bitcast %union.u* %u3 to [1 x %union.rtunion_def]*, !dbg !4701
  %arrayidx5 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4, i64 0, i64 5, !dbg !4701
  %rt_rtx6 = bitcast %union.rtunion_def* %arrayidx5 to %struct.rtx_def**, !dbg !4701
  %8 = bitcast %struct.adjust_mem_data* %amd to i8*, !dbg !4702
  call void @note_uses(%struct.rtx_def** %rt_rtx6, void (%struct.rtx_def**, i8*)* @adjust_mem_uses, i8* %8), !dbg !4703
  %9 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4704
  %10 = bitcast %struct.rtx_def* %9 to i32*, !dbg !4704
  %bf.load = load i32, i32* %10, align 8, !dbg !4704
  %bf.clear = and i32 %bf.load, 65535, !dbg !4704
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !4704
  br i1 %cmp, label %cond.true, label %lor.lhs.false, !dbg !4704

lor.lhs.false:                                    ; preds = %entry
  %11 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4704
  %12 = bitcast %struct.rtx_def* %11 to i32*, !dbg !4704
  %bf.load7 = load i32, i32* %12, align 8, !dbg !4704
  %bf.clear8 = and i32 %bf.load7, 65535, !dbg !4704
  %cmp9 = icmp eq i32 %bf.clear8, 7, !dbg !4704
  br i1 %cmp9, label %cond.true, label %lor.lhs.false10, !dbg !4704

lor.lhs.false10:                                  ; preds = %lor.lhs.false
  %13 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4704
  %14 = bitcast %struct.rtx_def* %13 to i32*, !dbg !4704
  %bf.load11 = load i32, i32* %14, align 8, !dbg !4704
  %bf.clear12 = and i32 %bf.load11, 65535, !dbg !4704
  %cmp13 = icmp eq i32 %bf.clear12, 9, !dbg !4704
  br i1 %cmp13, label %cond.true, label %lor.lhs.false14, !dbg !4704

lor.lhs.false14:                                  ; preds = %lor.lhs.false10
  %15 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4704
  %16 = bitcast %struct.rtx_def* %15 to i32*, !dbg !4704
  %bf.load15 = load i32, i32* %16, align 8, !dbg !4704
  %bf.clear16 = and i32 %bf.load15, 65535, !dbg !4704
  %cmp17 = icmp eq i32 %bf.clear16, 10, !dbg !4704
  br i1 %cmp17, label %cond.true, label %cond.false34, !dbg !4704

cond.true:                                        ; preds = %lor.lhs.false14, %lor.lhs.false10, %lor.lhs.false, %entry
  %17 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4704
  %u18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1, !dbg !4704
  %fld19 = bitcast %union.u* %u18 to [1 x %union.rtunion_def]*, !dbg !4704
  %arrayidx20 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld19, i64 0, i64 5, !dbg !4704
  %rt_rtx21 = bitcast %union.rtunion_def* %arrayidx20 to %struct.rtx_def**, !dbg !4704
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx21, align 8, !dbg !4704
  %19 = bitcast %struct.rtx_def* %18 to i32*, !dbg !4704
  %bf.load22 = load i32, i32* %19, align 8, !dbg !4704
  %bf.clear23 = and i32 %bf.load22, 65535, !dbg !4704
  %cmp24 = icmp eq i32 %bf.clear23, 23, !dbg !4704
  br i1 %cmp24, label %cond.true25, label %cond.false, !dbg !4704

cond.true25:                                      ; preds = %cond.true
  %20 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4704
  %u26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1, !dbg !4704
  %fld27 = bitcast %union.u* %u26 to [1 x %union.rtunion_def]*, !dbg !4704
  %arrayidx28 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld27, i64 0, i64 5, !dbg !4704
  %rt_rtx29 = bitcast %union.rtunion_def* %arrayidx28 to %struct.rtx_def**, !dbg !4704
  %21 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx29, align 8, !dbg !4704
  br label %cond.end, !dbg !4704

cond.false:                                       ; preds = %cond.true
  %22 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4704
  %23 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4704
  %u30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1, !dbg !4704
  %fld31 = bitcast %union.u* %u30 to [1 x %union.rtunion_def]*, !dbg !4704
  %arrayidx32 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld31, i64 0, i64 5, !dbg !4704
  %rt_rtx33 = bitcast %union.rtunion_def* %arrayidx32 to %struct.rtx_def**, !dbg !4704
  %24 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx33, align 8, !dbg !4704
  %call = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %22, %struct.rtx_def* %24), !dbg !4704
  br label %cond.end, !dbg !4704

cond.end:                                         ; preds = %cond.false, %cond.true25
  %cond = phi %struct.rtx_def* [ %21, %cond.true25 ], [ %call, %cond.false ], !dbg !4704
  br label %cond.end35, !dbg !4704

cond.false34:                                     ; preds = %lor.lhs.false14
  br label %cond.end35, !dbg !4704

cond.end35:                                       ; preds = %cond.false34, %cond.end
  %cond36 = phi %struct.rtx_def* [ %cond, %cond.end ], [ null, %cond.false34 ], !dbg !4704
  store %struct.rtx_def* %cond36, %struct.rtx_def** %set, align 8, !dbg !4705
  %25 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !4706
  %tobool = icmp ne %struct.rtx_def* %25, null, !dbg !4706
  br i1 %tobool, label %land.lhs.true, label %if.end73, !dbg !4708

land.lhs.true:                                    ; preds = %cond.end35
  %26 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !4709
  %u37 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1, !dbg !4709
  %fld38 = bitcast %union.u* %u37 to [1 x %union.rtunion_def]*, !dbg !4709
  %arrayidx39 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld38, i64 0, i64 1, !dbg !4709
  %rt_rtx40 = bitcast %union.rtunion_def* %arrayidx39 to %struct.rtx_def**, !dbg !4709
  %27 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx40, align 8, !dbg !4709
  %28 = bitcast %struct.rtx_def* %27 to i32*, !dbg !4709
  %bf.load41 = load i32, i32* %28, align 8, !dbg !4709
  %bf.clear42 = and i32 %bf.load41, 65535, !dbg !4709
  %cmp43 = icmp eq i32 %bf.clear42, 43, !dbg !4709
  br i1 %cmp43, label %land.lhs.true44, label %if.end73, !dbg !4710

land.lhs.true44:                                  ; preds = %land.lhs.true
  %29 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !4711
  %u45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1, !dbg !4711
  %fld46 = bitcast %union.u* %u45 to [1 x %union.rtunion_def]*, !dbg !4711
  %arrayidx47 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld46, i64 0, i64 1, !dbg !4711
  %rt_rtx48 = bitcast %union.rtunion_def* %arrayidx47 to %struct.rtx_def**, !dbg !4711
  %30 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx48, align 8, !dbg !4711
  %31 = bitcast %struct.rtx_def* %30 to i32*, !dbg !4711
  %bf.load49 = load i32, i32* %31, align 8, !dbg !4711
  %bf.lshr = lshr i32 %bf.load49, 26, !dbg !4711
  %bf.clear50 = and i32 %bf.lshr, 1, !dbg !4711
  %tobool51 = icmp ne i32 %bf.clear50, 0, !dbg !4711
  br i1 %tobool51, label %if.then, label %if.end73, !dbg !4712

if.then:                                          ; preds = %land.lhs.true44
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %note, metadata !4713, metadata !DIExpression()), !dbg !4715
  %32 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4716
  %call52 = call %struct.rtx_def* @find_reg_equal_equiv_note(%struct.rtx_def* %32), !dbg !4717
  store %struct.rtx_def* %call52, %struct.rtx_def** %note, align 8, !dbg !4715
  %33 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !4718
  %tobool53 = icmp ne %struct.rtx_def* %33, null, !dbg !4718
  br i1 %tobool53, label %land.lhs.true54, label %if.end, !dbg !4720

land.lhs.true54:                                  ; preds = %if.then
  %34 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !4721
  %u55 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1, !dbg !4721
  %fld56 = bitcast %union.u* %u55 to [1 x %union.rtunion_def]*, !dbg !4721
  %arrayidx57 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld56, i64 0, i64 0, !dbg !4721
  %rt_rtx58 = bitcast %union.rtunion_def* %arrayidx57 to %struct.rtx_def**, !dbg !4721
  %35 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx58, align 8, !dbg !4721
  %36 = bitcast %struct.rtx_def* %35 to i32*, !dbg !4721
  %bf.load59 = load i32, i32* %36, align 8, !dbg !4721
  %bf.clear60 = and i32 %bf.load59, 65535, !dbg !4721
  %idxprom = sext i32 %bf.clear60 to i64, !dbg !4721
  %arrayidx61 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !4721
  %37 = load i32, i32* %arrayidx61, align 4, !dbg !4721
  %cmp62 = icmp eq i32 %37, 9, !dbg !4721
  br i1 %cmp62, label %if.then63, label %if.end, !dbg !4722

if.then63:                                        ; preds = %land.lhs.true54
  %38 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !4723
  %u64 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %38, i32 0, i32 1, !dbg !4723
  %fld65 = bitcast %union.u* %u64 to [1 x %union.rtunion_def]*, !dbg !4723
  %arrayidx66 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld65, i64 0, i64 1, !dbg !4723
  %rt_rtx67 = bitcast %union.rtunion_def* %arrayidx66 to %struct.rtx_def**, !dbg !4723
  %39 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !4724
  %u68 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i32 0, i32 1, !dbg !4724
  %fld69 = bitcast %union.u* %u68 to [1 x %union.rtunion_def]*, !dbg !4724
  %arrayidx70 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld69, i64 0, i64 0, !dbg !4724
  %rt_rtx71 = bitcast %union.rtunion_def* %arrayidx70 to %struct.rtx_def**, !dbg !4724
  %40 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx71, align 8, !dbg !4724
  %call72 = call zeroext i8 @validate_change(%struct.rtx_def* null, %struct.rtx_def** %rt_rtx67, %struct.rtx_def* %40, i8 zeroext 1), !dbg !4725
  br label %if.end, !dbg !4725

if.end:                                           ; preds = %if.then63, %land.lhs.true54, %if.then
  br label %if.end73, !dbg !4726

if.end73:                                         ; preds = %if.end, %land.lhs.true44, %land.lhs.true, %cond.end35
  %side_effects74 = getelementptr inbounds %struct.adjust_mem_data, %struct.adjust_mem_data* %amd, i32 0, i32 3, !dbg !4727
  %41 = load %struct.rtx_def*, %struct.rtx_def** %side_effects74, align 8, !dbg !4727
  %tobool75 = icmp ne %struct.rtx_def* %41, null, !dbg !4729
  br i1 %tobool75, label %if.then76, label %if.end162, !dbg !4730

if.then76:                                        ; preds = %if.end73
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %pat, metadata !4731, metadata !DIExpression()), !dbg !4734
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %new_pat, metadata !4735, metadata !DIExpression()), !dbg !4736
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %s, metadata !4737, metadata !DIExpression()), !dbg !4738
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4739, metadata !DIExpression()), !dbg !4740
  call void @llvm.dbg.declare(metadata i32* %oldn, metadata !4741, metadata !DIExpression()), !dbg !4742
  call void @llvm.dbg.declare(metadata i32* %newn, metadata !4743, metadata !DIExpression()), !dbg !4744
  %42 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4745
  %u77 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %42, i32 0, i32 1, !dbg !4745
  %fld78 = bitcast %union.u* %u77 to [1 x %union.rtunion_def]*, !dbg !4745
  %arrayidx79 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld78, i64 0, i64 5, !dbg !4745
  %rt_rtx80 = bitcast %union.rtunion_def* %arrayidx79 to %struct.rtx_def**, !dbg !4745
  store %struct.rtx_def** %rt_rtx80, %struct.rtx_def*** %pat, align 8, !dbg !4746
  %43 = load %struct.rtx_def**, %struct.rtx_def*** %pat, align 8, !dbg !4747
  %44 = load %struct.rtx_def*, %struct.rtx_def** %43, align 8, !dbg !4747
  %45 = bitcast %struct.rtx_def* %44 to i32*, !dbg !4747
  %bf.load81 = load i32, i32* %45, align 8, !dbg !4747
  %bf.clear82 = and i32 %bf.load81, 65535, !dbg !4747
  %cmp83 = icmp eq i32 %bf.clear82, 14, !dbg !4749
  br i1 %cmp83, label %if.then84, label %if.end89, !dbg !4750

if.then84:                                        ; preds = %if.then76
  %46 = load %struct.rtx_def**, %struct.rtx_def*** %pat, align 8, !dbg !4751
  %47 = load %struct.rtx_def*, %struct.rtx_def** %46, align 8, !dbg !4751
  %u85 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %47, i32 0, i32 1, !dbg !4751
  %fld86 = bitcast %union.u* %u85 to [1 x %union.rtunion_def]*, !dbg !4751
  %arrayidx87 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld86, i64 0, i64 1, !dbg !4751
  %rt_rtx88 = bitcast %union.rtunion_def* %arrayidx87 to %struct.rtx_def**, !dbg !4751
  store %struct.rtx_def** %rt_rtx88, %struct.rtx_def*** %pat, align 8, !dbg !4752
  br label %if.end89, !dbg !4753

if.end89:                                         ; preds = %if.then84, %if.then76
  %48 = load %struct.rtx_def**, %struct.rtx_def*** %pat, align 8, !dbg !4754
  %49 = load %struct.rtx_def*, %struct.rtx_def** %48, align 8, !dbg !4754
  %50 = bitcast %struct.rtx_def* %49 to i32*, !dbg !4754
  %bf.load90 = load i32, i32* %50, align 8, !dbg !4754
  %bf.clear91 = and i32 %bf.load90, 65535, !dbg !4754
  %cmp92 = icmp eq i32 %bf.clear91, 15, !dbg !4756
  br i1 %cmp92, label %if.then93, label %if.else, !dbg !4757

if.then93:                                        ; preds = %if.end89
  %51 = load %struct.rtx_def**, %struct.rtx_def*** %pat, align 8, !dbg !4758
  %52 = load %struct.rtx_def*, %struct.rtx_def** %51, align 8, !dbg !4758
  %u94 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %52, i32 0, i32 1, !dbg !4758
  %fld95 = bitcast %union.u* %u94 to [1 x %union.rtunion_def]*, !dbg !4758
  %arrayidx96 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld95, i64 0, i64 0, !dbg !4758
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx96 to %struct.rtvec_def**, !dbg !4758
  %53 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !4758
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %53, i32 0, i32 0, !dbg !4758
  %54 = load i32, i32* %num_elem, align 8, !dbg !4758
  store i32 %54, i32* %oldn, align 4, !dbg !4759
  br label %if.end97, !dbg !4760

if.else:                                          ; preds = %if.end89
  store i32 1, i32* %oldn, align 4, !dbg !4761
  br label %if.end97

if.end97:                                         ; preds = %if.else, %if.then93
  %side_effects98 = getelementptr inbounds %struct.adjust_mem_data, %struct.adjust_mem_data* %amd, i32 0, i32 3, !dbg !4762
  %55 = load %struct.rtx_def*, %struct.rtx_def** %side_effects98, align 8, !dbg !4762
  store %struct.rtx_def* %55, %struct.rtx_def** %s, align 8, !dbg !4764
  store i32 0, i32* %newn, align 4, !dbg !4765
  br label %for.cond, !dbg !4766

for.cond:                                         ; preds = %for.inc, %if.end97
  %56 = load %struct.rtx_def*, %struct.rtx_def** %s, align 8, !dbg !4767
  %tobool99 = icmp ne %struct.rtx_def* %56, null, !dbg !4769
  br i1 %tobool99, label %for.body, label %for.end, !dbg !4769

for.body:                                         ; preds = %for.cond
  %57 = load %struct.rtx_def*, %struct.rtx_def** %s, align 8, !dbg !4770
  %u100 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %57, i32 0, i32 1, !dbg !4770
  %fld101 = bitcast %union.u* %u100 to [1 x %union.rtunion_def]*, !dbg !4770
  %arrayidx102 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld101, i64 0, i64 1, !dbg !4770
  %rt_rtx103 = bitcast %union.rtunion_def* %arrayidx102 to %struct.rtx_def**, !dbg !4770
  %58 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx103, align 8, !dbg !4770
  store %struct.rtx_def* %58, %struct.rtx_def** %s, align 8, !dbg !4771
  br label %for.inc, !dbg !4772

for.inc:                                          ; preds = %for.body
  %59 = load i32, i32* %newn, align 4, !dbg !4773
  %inc = add nsw i32 %59, 1, !dbg !4773
  store i32 %inc, i32* %newn, align 4, !dbg !4773
  br label %for.cond, !dbg !4774, !llvm.loop !4775

for.end:                                          ; preds = %for.cond
  %60 = load i32, i32* %oldn, align 4, !dbg !4777
  %61 = load i32, i32* %newn, align 4, !dbg !4777
  %add = add nsw i32 %60, %61, !dbg !4777
  %call104 = call %struct.rtvec_def* @rtvec_alloc(i32 %add), !dbg !4777
  %call105 = call %struct.rtx_def* @gen_rtx_fmt_E_stat(i32 15, i32 0, %struct.rtvec_def* %call104), !dbg !4777
  store %struct.rtx_def* %call105, %struct.rtx_def** %new_pat, align 8, !dbg !4778
  %62 = load %struct.rtx_def**, %struct.rtx_def*** %pat, align 8, !dbg !4779
  %63 = load %struct.rtx_def*, %struct.rtx_def** %62, align 8, !dbg !4779
  %64 = bitcast %struct.rtx_def* %63 to i32*, !dbg !4779
  %bf.load106 = load i32, i32* %64, align 8, !dbg !4779
  %bf.clear107 = and i32 %bf.load106, 65535, !dbg !4779
  %cmp108 = icmp eq i32 %bf.clear107, 15, !dbg !4781
  br i1 %cmp108, label %if.then109, label %if.else129, !dbg !4782

if.then109:                                       ; preds = %for.end
  store i32 0, i32* %i, align 4, !dbg !4783
  br label %for.cond110, !dbg !4785

for.cond110:                                      ; preds = %for.inc126, %if.then109
  %65 = load i32, i32* %i, align 4, !dbg !4786
  %66 = load i32, i32* %oldn, align 4, !dbg !4788
  %cmp111 = icmp slt i32 %65, %66, !dbg !4789
  br i1 %cmp111, label %for.body112, label %for.end128, !dbg !4790

for.body112:                                      ; preds = %for.cond110
  %67 = load %struct.rtx_def**, %struct.rtx_def*** %pat, align 8, !dbg !4791
  %68 = load %struct.rtx_def*, %struct.rtx_def** %67, align 8, !dbg !4791
  %u113 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %68, i32 0, i32 1, !dbg !4791
  %fld114 = bitcast %union.u* %u113 to [1 x %union.rtunion_def]*, !dbg !4791
  %arrayidx115 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld114, i64 0, i64 0, !dbg !4791
  %rt_rtvec116 = bitcast %union.rtunion_def* %arrayidx115 to %struct.rtvec_def**, !dbg !4791
  %69 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec116, align 8, !dbg !4791
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %69, i32 0, i32 1, !dbg !4791
  %70 = load i32, i32* %i, align 4, !dbg !4791
  %idxprom117 = sext i32 %70 to i64, !dbg !4791
  %arrayidx118 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom117, !dbg !4791
  %71 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx118, align 8, !dbg !4791
  %72 = load %struct.rtx_def*, %struct.rtx_def** %new_pat, align 8, !dbg !4792
  %u119 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %72, i32 0, i32 1, !dbg !4792
  %fld120 = bitcast %union.u* %u119 to [1 x %union.rtunion_def]*, !dbg !4792
  %arrayidx121 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld120, i64 0, i64 0, !dbg !4792
  %rt_rtvec122 = bitcast %union.rtunion_def* %arrayidx121 to %struct.rtvec_def**, !dbg !4792
  %73 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec122, align 8, !dbg !4792
  %elem123 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %73, i32 0, i32 1, !dbg !4792
  %74 = load i32, i32* %i, align 4, !dbg !4792
  %idxprom124 = sext i32 %74 to i64, !dbg !4792
  %arrayidx125 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem123, i64 0, i64 %idxprom124, !dbg !4792
  store %struct.rtx_def* %71, %struct.rtx_def** %arrayidx125, align 8, !dbg !4793
  br label %for.inc126, !dbg !4792

for.inc126:                                       ; preds = %for.body112
  %75 = load i32, i32* %i, align 4, !dbg !4794
  %inc127 = add nsw i32 %75, 1, !dbg !4794
  store i32 %inc127, i32* %i, align 4, !dbg !4794
  br label %for.cond110, !dbg !4795, !llvm.loop !4796

for.end128:                                       ; preds = %for.cond110
  br label %if.end136, !dbg !4797

if.else129:                                       ; preds = %for.end
  %76 = load %struct.rtx_def**, %struct.rtx_def*** %pat, align 8, !dbg !4798
  %77 = load %struct.rtx_def*, %struct.rtx_def** %76, align 8, !dbg !4799
  %78 = load %struct.rtx_def*, %struct.rtx_def** %new_pat, align 8, !dbg !4800
  %u130 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %78, i32 0, i32 1, !dbg !4800
  %fld131 = bitcast %union.u* %u130 to [1 x %union.rtunion_def]*, !dbg !4800
  %arrayidx132 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld131, i64 0, i64 0, !dbg !4800
  %rt_rtvec133 = bitcast %union.rtunion_def* %arrayidx132 to %struct.rtvec_def**, !dbg !4800
  %79 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec133, align 8, !dbg !4800
  %elem134 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %79, i32 0, i32 1, !dbg !4800
  %arrayidx135 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem134, i64 0, i64 0, !dbg !4800
  store %struct.rtx_def* %77, %struct.rtx_def** %arrayidx135, align 8, !dbg !4801
  br label %if.end136

if.end136:                                        ; preds = %if.else129, %for.end128
  %side_effects137 = getelementptr inbounds %struct.adjust_mem_data, %struct.adjust_mem_data* %amd, i32 0, i32 3, !dbg !4802
  %80 = load %struct.rtx_def*, %struct.rtx_def** %side_effects137, align 8, !dbg !4802
  store %struct.rtx_def* %80, %struct.rtx_def** %s, align 8, !dbg !4804
  %81 = load i32, i32* %oldn, align 4, !dbg !4805
  store i32 %81, i32* %i, align 4, !dbg !4806
  br label %for.cond138, !dbg !4807

for.cond138:                                      ; preds = %for.inc153, %if.end136
  %82 = load i32, i32* %i, align 4, !dbg !4808
  %83 = load i32, i32* %oldn, align 4, !dbg !4810
  %84 = load i32, i32* %newn, align 4, !dbg !4811
  %add139 = add nsw i32 %83, %84, !dbg !4812
  %cmp140 = icmp slt i32 %82, %add139, !dbg !4813
  br i1 %cmp140, label %for.body141, label %for.end159, !dbg !4814

for.body141:                                      ; preds = %for.cond138
  %85 = load %struct.rtx_def*, %struct.rtx_def** %s, align 8, !dbg !4815
  %u142 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %85, i32 0, i32 1, !dbg !4815
  %fld143 = bitcast %union.u* %u142 to [1 x %union.rtunion_def]*, !dbg !4815
  %arrayidx144 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld143, i64 0, i64 0, !dbg !4815
  %rt_rtx145 = bitcast %union.rtunion_def* %arrayidx144 to %struct.rtx_def**, !dbg !4815
  %86 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx145, align 8, !dbg !4815
  %87 = load %struct.rtx_def*, %struct.rtx_def** %new_pat, align 8, !dbg !4816
  %u146 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %87, i32 0, i32 1, !dbg !4816
  %fld147 = bitcast %union.u* %u146 to [1 x %union.rtunion_def]*, !dbg !4816
  %arrayidx148 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld147, i64 0, i64 0, !dbg !4816
  %rt_rtvec149 = bitcast %union.rtunion_def* %arrayidx148 to %struct.rtvec_def**, !dbg !4816
  %88 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec149, align 8, !dbg !4816
  %elem150 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %88, i32 0, i32 1, !dbg !4816
  %89 = load i32, i32* %i, align 4, !dbg !4816
  %idxprom151 = sext i32 %89 to i64, !dbg !4816
  %arrayidx152 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem150, i64 0, i64 %idxprom151, !dbg !4816
  store %struct.rtx_def* %86, %struct.rtx_def** %arrayidx152, align 8, !dbg !4817
  br label %for.inc153, !dbg !4816

for.inc153:                                       ; preds = %for.body141
  %90 = load i32, i32* %i, align 4, !dbg !4818
  %inc154 = add nsw i32 %90, 1, !dbg !4818
  store i32 %inc154, i32* %i, align 4, !dbg !4818
  %91 = load %struct.rtx_def*, %struct.rtx_def** %s, align 8, !dbg !4819
  %u155 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %91, i32 0, i32 1, !dbg !4819
  %fld156 = bitcast %union.u* %u155 to [1 x %union.rtunion_def]*, !dbg !4819
  %arrayidx157 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld156, i64 0, i64 1, !dbg !4819
  %rt_rtx158 = bitcast %union.rtunion_def* %arrayidx157 to %struct.rtx_def**, !dbg !4819
  %92 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx158, align 8, !dbg !4819
  store %struct.rtx_def* %92, %struct.rtx_def** %s, align 8, !dbg !4820
  br label %for.cond138, !dbg !4821, !llvm.loop !4822

for.end159:                                       ; preds = %for.cond138
  %side_effects160 = getelementptr inbounds %struct.adjust_mem_data, %struct.adjust_mem_data* %amd, i32 0, i32 3, !dbg !4824
  call void @free_EXPR_LIST_list(%struct.rtx_def** %side_effects160), !dbg !4825
  %93 = load %struct.rtx_def**, %struct.rtx_def*** %pat, align 8, !dbg !4826
  %94 = load %struct.rtx_def*, %struct.rtx_def** %new_pat, align 8, !dbg !4827
  %call161 = call zeroext i8 @validate_change(%struct.rtx_def* null, %struct.rtx_def** %93, %struct.rtx_def* %94, i8 zeroext 1), !dbg !4828
  br label %if.end162, !dbg !4829

if.end162:                                        ; preds = %for.end159, %if.end73
  ret void, !dbg !4830
}

declare dso_local void @cselib_process_insn(%struct.rtx_def*) #2

declare dso_local i32 @print_rtl_single(%struct._IO_FILE*, %struct.rtx_def*) #2

declare dso_local void @dump_cselib_table(%struct._IO_FILE*) #2

declare dso_local void @cancel_changes(i32) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @fp_setter(%struct.rtx_def* %insn) #0 !dbg !4831 {
entry:
  %retval = alloca i8, align 1
  %insn.addr = alloca %struct.rtx_def*, align 8
  %pat = alloca %struct.rtx_def*, align 8
  %expr = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !4834, metadata !DIExpression()), !dbg !4835
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %pat, metadata !4836, metadata !DIExpression()), !dbg !4837
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4838
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !4838
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4838
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 5, !dbg !4838
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !4838
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4838
  store %struct.rtx_def* %1, %struct.rtx_def** %pat, align 8, !dbg !4837
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4839
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !4839
  %bf.load = load i32, i32* %3, align 8, !dbg !4839
  %bf.lshr = lshr i32 %bf.load, 30, !dbg !4839
  %bf.clear = and i32 %bf.lshr, 1, !dbg !4839
  %tobool = icmp ne i32 %bf.clear, 0, !dbg !4839
  br i1 %tobool, label %if.then, label %if.end7, !dbg !4841

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %expr, metadata !4842, metadata !DIExpression()), !dbg !4844
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4845
  %call = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %4, i32 17, %struct.rtx_def* null), !dbg !4846
  store %struct.rtx_def* %call, %struct.rtx_def** %expr, align 8, !dbg !4844
  %5 = load %struct.rtx_def*, %struct.rtx_def** %expr, align 8, !dbg !4847
  %tobool1 = icmp ne %struct.rtx_def* %5, null, !dbg !4847
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !4849

if.then2:                                         ; preds = %if.then
  %6 = load %struct.rtx_def*, %struct.rtx_def** %expr, align 8, !dbg !4850
  %u3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1, !dbg !4850
  %fld4 = bitcast %union.u* %u3 to [1 x %union.rtunion_def]*, !dbg !4850
  %arrayidx5 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4, i64 0, i64 0, !dbg !4850
  %rt_rtx6 = bitcast %union.rtunion_def* %arrayidx5 to %struct.rtx_def**, !dbg !4850
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx6, align 8, !dbg !4850
  store %struct.rtx_def* %7, %struct.rtx_def** %pat, align 8, !dbg !4851
  br label %if.end, !dbg !4852

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end7, !dbg !4853

if.end7:                                          ; preds = %if.end, %entry
  %8 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !4854
  %9 = bitcast %struct.rtx_def* %8 to i32*, !dbg !4854
  %bf.load8 = load i32, i32* %9, align 8, !dbg !4854
  %bf.clear9 = and i32 %bf.load8, 65535, !dbg !4854
  %cmp = icmp eq i32 %bf.clear9, 23, !dbg !4856
  br i1 %cmp, label %if.then10, label %if.else, !dbg !4857

if.then10:                                        ; preds = %if.end7
  %10 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !4858
  %u11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1, !dbg !4858
  %fld12 = bitcast %union.u* %u11 to [1 x %union.rtunion_def]*, !dbg !4858
  %arrayidx13 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld12, i64 0, i64 0, !dbg !4858
  %rt_rtx14 = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtx_def**, !dbg !4858
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx14, align 8, !dbg !4858
  %12 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 16, !dbg !4859
  %cmp15 = icmp eq %struct.rtx_def* %11, %12, !dbg !4860
  %conv = zext i1 %cmp15 to i32, !dbg !4860
  %conv16 = trunc i32 %conv to i8, !dbg !4858
  store i8 %conv16, i8* %retval, align 1, !dbg !4861
  br label %return, !dbg !4861

if.else:                                          ; preds = %if.end7
  %13 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !4862
  %14 = bitcast %struct.rtx_def* %13 to i32*, !dbg !4862
  %bf.load17 = load i32, i32* %14, align 8, !dbg !4862
  %bf.clear18 = and i32 %bf.load17, 65535, !dbg !4862
  %cmp19 = icmp eq i32 %bf.clear18, 15, !dbg !4864
  br i1 %cmp19, label %if.then21, label %if.end51, !dbg !4865

if.then21:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4866, metadata !DIExpression()), !dbg !4868
  %15 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !4869
  %u22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1, !dbg !4869
  %fld23 = bitcast %union.u* %u22 to [1 x %union.rtunion_def]*, !dbg !4869
  %arrayidx24 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld23, i64 0, i64 0, !dbg !4869
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx24 to %struct.rtvec_def**, !dbg !4869
  %16 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !4869
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %16, i32 0, i32 0, !dbg !4869
  %17 = load i32, i32* %num_elem, align 8, !dbg !4869
  %sub = sub nsw i32 %17, 1, !dbg !4871
  store i32 %sub, i32* %i, align 4, !dbg !4872
  br label %for.cond, !dbg !4873

for.cond:                                         ; preds = %for.inc, %if.then21
  %18 = load i32, i32* %i, align 4, !dbg !4874
  %cmp25 = icmp sge i32 %18, 0, !dbg !4876
  br i1 %cmp25, label %for.body, label %for.end, !dbg !4877

for.body:                                         ; preds = %for.cond
  %19 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !4878
  %u27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1, !dbg !4878
  %fld28 = bitcast %union.u* %u27 to [1 x %union.rtunion_def]*, !dbg !4878
  %arrayidx29 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld28, i64 0, i64 0, !dbg !4878
  %rt_rtvec30 = bitcast %union.rtunion_def* %arrayidx29 to %struct.rtvec_def**, !dbg !4878
  %20 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec30, align 8, !dbg !4878
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %20, i32 0, i32 1, !dbg !4878
  %21 = load i32, i32* %i, align 4, !dbg !4878
  %idxprom = sext i32 %21 to i64, !dbg !4878
  %arrayidx31 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom, !dbg !4878
  %22 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx31, align 8, !dbg !4878
  %23 = bitcast %struct.rtx_def* %22 to i32*, !dbg !4878
  %bf.load32 = load i32, i32* %23, align 8, !dbg !4878
  %bf.clear33 = and i32 %bf.load32, 65535, !dbg !4878
  %cmp34 = icmp eq i32 %bf.clear33, 23, !dbg !4880
  br i1 %cmp34, label %land.lhs.true, label %if.end50, !dbg !4881

land.lhs.true:                                    ; preds = %for.body
  %24 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !4882
  %u36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i32 0, i32 1, !dbg !4882
  %fld37 = bitcast %union.u* %u36 to [1 x %union.rtunion_def]*, !dbg !4882
  %arrayidx38 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld37, i64 0, i64 0, !dbg !4882
  %rt_rtvec39 = bitcast %union.rtunion_def* %arrayidx38 to %struct.rtvec_def**, !dbg !4882
  %25 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec39, align 8, !dbg !4882
  %elem40 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %25, i32 0, i32 1, !dbg !4882
  %26 = load i32, i32* %i, align 4, !dbg !4882
  %idxprom41 = sext i32 %26 to i64, !dbg !4882
  %arrayidx42 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem40, i64 0, i64 %idxprom41, !dbg !4882
  %27 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx42, align 8, !dbg !4882
  %u43 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1, !dbg !4882
  %fld44 = bitcast %union.u* %u43 to [1 x %union.rtunion_def]*, !dbg !4882
  %arrayidx45 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld44, i64 0, i64 0, !dbg !4882
  %rt_rtx46 = bitcast %union.rtunion_def* %arrayidx45 to %struct.rtx_def**, !dbg !4882
  %28 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx46, align 8, !dbg !4882
  %29 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 16, !dbg !4883
  %cmp47 = icmp eq %struct.rtx_def* %28, %29, !dbg !4884
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !4885

if.then49:                                        ; preds = %land.lhs.true
  store i8 1, i8* %retval, align 1, !dbg !4886
  br label %return, !dbg !4886

if.end50:                                         ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !4883

for.inc:                                          ; preds = %if.end50
  %30 = load i32, i32* %i, align 4, !dbg !4887
  %dec = add nsw i32 %30, -1, !dbg !4887
  store i32 %dec, i32* %i, align 4, !dbg !4887
  br label %for.cond, !dbg !4888, !llvm.loop !4889

for.end:                                          ; preds = %for.cond
  br label %if.end51, !dbg !4891

if.end51:                                         ; preds = %for.end, %if.else
  br label %if.end52

if.end52:                                         ; preds = %if.end51
  store i8 0, i8* %retval, align 1, !dbg !4892
  br label %return, !dbg !4892

return:                                           ; preds = %if.end52, %if.then49, %if.then10
  %31 = load i8, i8* %retval, align 1, !dbg !4893
  ret i8 %31, !dbg !4893
}

declare dso_local void @cselib_preserve_only_values() #2

declare dso_local void @cselib_reset_table(i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @vt_add_function_parameters() #0 !dbg !4894 {
entry:
  %parm = alloca %union.tree_node*, align 8
  %decl_rtl = alloca %struct.rtx_def*, align 8
  %incoming = alloca %struct.rtx_def*, align 8
  %decl = alloca %union.tree_node*, align 8
  %mode = alloca i32, align 4
  %offset = alloca i64, align 8
  %out = alloca %struct.dataflow_set_def*, align 8
  %dv = alloca i8*, align 8
  %val = alloca %struct.cselib_val_struct*, align 8
  call void @llvm.dbg.declare(metadata %union.tree_node** %parm, metadata !4895, metadata !DIExpression()), !dbg !4896
  %0 = load %union.tree_node*, %union.tree_node** @current_function_decl, align 8, !dbg !4897
  %decl_non_common = bitcast %union.tree_node* %0 to %struct.tree_decl_non_common*, !dbg !4897
  %arguments = getelementptr inbounds %struct.tree_decl_non_common, %struct.tree_decl_non_common* %decl_non_common, i32 0, i32 2, !dbg !4897
  %1 = load %union.tree_node*, %union.tree_node** %arguments, align 8, !dbg !4897
  store %union.tree_node* %1, %union.tree_node** %parm, align 8, !dbg !4899
  br label %for.cond, !dbg !4900

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %union.tree_node*, %union.tree_node** %parm, align 8, !dbg !4901
  %tobool = icmp ne %union.tree_node* %2, null, !dbg !4903
  br i1 %tobool, label %for.body, label %for.end, !dbg !4903

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %decl_rtl, metadata !4904, metadata !DIExpression()), !dbg !4906
  %3 = load %union.tree_node*, %union.tree_node** %parm, align 8, !dbg !4907
  %base = bitcast %union.tree_node* %3 to %struct.tree_base*, !dbg !4907
  %4 = bitcast %struct.tree_base* %base to i64*, !dbg !4907
  %bf.load = load i64, i64* %4, align 8, !dbg !4907
  %bf.clear = and i64 %bf.load, 65535, !dbg !4907
  %bf.cast = trunc i64 %bf.clear to i32, !dbg !4907
  %idxprom = zext i32 %bf.cast to i64, !dbg !4907
  %arrayidx = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %idxprom, !dbg !4907
  %arrayidx1 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx, i64 0, i64 11, !dbg !4907
  %5 = load i8, i8* %arrayidx1, align 1, !dbg !4907
  %conv = zext i8 %5 to i32, !dbg !4907
  %tobool2 = icmp ne i32 %conv, 0, !dbg !4907
  br i1 %tobool2, label %land.lhs.true, label %cond.false12, !dbg !4907

land.lhs.true:                                    ; preds = %for.body
  %6 = load %union.tree_node*, %union.tree_node** %parm, align 8, !dbg !4907
  %decl_with_rtl = bitcast %union.tree_node* %6 to %struct.tree_decl_with_rtl*, !dbg !4907
  %rtl = getelementptr inbounds %struct.tree_decl_with_rtl, %struct.tree_decl_with_rtl* %decl_with_rtl, i32 0, i32 1, !dbg !4907
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !4907
  %cmp = icmp ne %struct.rtx_def* %7, null, !dbg !4907
  br i1 %cmp, label %cond.true, label %cond.false12, !dbg !4907

cond.true:                                        ; preds = %land.lhs.true
  %8 = load %union.tree_node*, %union.tree_node** %parm, align 8, !dbg !4907
  %decl_with_rtl4 = bitcast %union.tree_node* %8 to %struct.tree_decl_with_rtl*, !dbg !4907
  %rtl5 = getelementptr inbounds %struct.tree_decl_with_rtl, %struct.tree_decl_with_rtl* %decl_with_rtl4, i32 0, i32 1, !dbg !4907
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rtl5, align 8, !dbg !4907
  %tobool6 = icmp ne %struct.rtx_def* %9, null, !dbg !4907
  br i1 %tobool6, label %cond.true7, label %cond.false, !dbg !4907

cond.true7:                                       ; preds = %cond.true
  %10 = load %union.tree_node*, %union.tree_node** %parm, align 8, !dbg !4907
  %decl_with_rtl8 = bitcast %union.tree_node* %10 to %struct.tree_decl_with_rtl*, !dbg !4907
  %rtl9 = getelementptr inbounds %struct.tree_decl_with_rtl, %struct.tree_decl_with_rtl* %decl_with_rtl8, i32 0, i32 1, !dbg !4907
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rtl9, align 8, !dbg !4907
  br label %cond.end, !dbg !4907

cond.false:                                       ; preds = %cond.true
  %12 = load %union.tree_node*, %union.tree_node** %parm, align 8, !dbg !4907
  call void @make_decl_rtl(%union.tree_node* %12), !dbg !4907
  %13 = load %union.tree_node*, %union.tree_node** %parm, align 8, !dbg !4907
  %decl_with_rtl10 = bitcast %union.tree_node* %13 to %struct.tree_decl_with_rtl*, !dbg !4907
  %rtl11 = getelementptr inbounds %struct.tree_decl_with_rtl, %struct.tree_decl_with_rtl* %decl_with_rtl10, i32 0, i32 1, !dbg !4907
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rtl11, align 8, !dbg !4907
  br label %cond.end, !dbg !4907

cond.end:                                         ; preds = %cond.false, %cond.true7
  %cond = phi %struct.rtx_def* [ %11, %cond.true7 ], [ %14, %cond.false ], !dbg !4907
  br label %cond.end13, !dbg !4907

cond.false12:                                     ; preds = %land.lhs.true, %for.body
  br label %cond.end13, !dbg !4907

cond.end13:                                       ; preds = %cond.false12, %cond.end
  %cond14 = phi %struct.rtx_def* [ %cond, %cond.end ], [ null, %cond.false12 ], !dbg !4907
  store %struct.rtx_def* %cond14, %struct.rtx_def** %decl_rtl, align 8, !dbg !4906
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %incoming, metadata !4908, metadata !DIExpression()), !dbg !4909
  %15 = load %union.tree_node*, %union.tree_node** %parm, align 8, !dbg !4910
  %parm_decl = bitcast %union.tree_node* %15 to %struct.tree_parm_decl*, !dbg !4910
  %incoming_rtl = getelementptr inbounds %struct.tree_parm_decl, %struct.tree_parm_decl* %parm_decl, i32 0, i32 1, !dbg !4910
  %16 = load %struct.rtx_def*, %struct.rtx_def** %incoming_rtl, align 8, !dbg !4910
  store %struct.rtx_def* %16, %struct.rtx_def** %incoming, align 8, !dbg !4909
  call void @llvm.dbg.declare(metadata %union.tree_node** %decl, metadata !4911, metadata !DIExpression()), !dbg !4912
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !4913, metadata !DIExpression()), !dbg !4914
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !4915, metadata !DIExpression()), !dbg !4916
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %out, metadata !4917, metadata !DIExpression()), !dbg !4918
  call void @llvm.dbg.declare(metadata i8** %dv, metadata !4919, metadata !DIExpression()), !dbg !4920
  %17 = load %union.tree_node*, %union.tree_node** %parm, align 8, !dbg !4921
  %base15 = bitcast %union.tree_node* %17 to %struct.tree_base*, !dbg !4921
  %18 = bitcast %struct.tree_base* %base15 to i64*, !dbg !4921
  %bf.load16 = load i64, i64* %18, align 8, !dbg !4921
  %bf.clear17 = and i64 %bf.load16, 65535, !dbg !4921
  %bf.cast18 = trunc i64 %bf.clear17 to i32, !dbg !4921
  %cmp19 = icmp ne i32 %bf.cast18, 34, !dbg !4923
  br i1 %cmp19, label %if.then, label %if.end, !dbg !4924

if.then:                                          ; preds = %cond.end13
  br label %for.inc, !dbg !4925

if.end:                                           ; preds = %cond.end13
  %19 = load %union.tree_node*, %union.tree_node** %parm, align 8, !dbg !4926
  %decl_minimal = bitcast %union.tree_node* %19 to %struct.tree_decl_minimal*, !dbg !4926
  %name = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %decl_minimal, i32 0, i32 3, !dbg !4926
  %20 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !4926
  %tobool21 = icmp ne %union.tree_node* %20, null, !dbg !4926
  br i1 %tobool21, label %if.end23, label %if.then22, !dbg !4928

if.then22:                                        ; preds = %if.end
  br label %for.inc, !dbg !4929

if.end23:                                         ; preds = %if.end
  %21 = load %struct.rtx_def*, %struct.rtx_def** %decl_rtl, align 8, !dbg !4930
  %tobool24 = icmp ne %struct.rtx_def* %21, null, !dbg !4930
  br i1 %tobool24, label %lor.lhs.false, label %if.then26, !dbg !4932

lor.lhs.false:                                    ; preds = %if.end23
  %22 = load %struct.rtx_def*, %struct.rtx_def** %incoming, align 8, !dbg !4933
  %tobool25 = icmp ne %struct.rtx_def* %22, null, !dbg !4933
  br i1 %tobool25, label %if.end27, label %if.then26, !dbg !4934

if.then26:                                        ; preds = %lor.lhs.false, %if.end23
  br label %for.inc, !dbg !4935

if.end27:                                         ; preds = %lor.lhs.false
  %23 = load %struct.rtx_def*, %struct.rtx_def** %decl_rtl, align 8, !dbg !4936
  %24 = bitcast %struct.rtx_def* %23 to i32*, !dbg !4936
  %bf.load28 = load i32, i32* %24, align 8, !dbg !4936
  %bf.lshr = lshr i32 %bf.load28, 16, !dbg !4936
  %bf.clear29 = and i32 %bf.lshr, 255, !dbg !4936
  %cmp30 = icmp eq i32 %bf.clear29, 1, !dbg !4938
  br i1 %cmp30, label %if.then38, label %lor.lhs.false32, !dbg !4939

lor.lhs.false32:                                  ; preds = %if.end27
  %25 = load %struct.rtx_def*, %struct.rtx_def** %incoming, align 8, !dbg !4940
  %26 = bitcast %struct.rtx_def* %25 to i32*, !dbg !4940
  %bf.load33 = load i32, i32* %26, align 8, !dbg !4940
  %bf.lshr34 = lshr i32 %bf.load33, 16, !dbg !4940
  %bf.clear35 = and i32 %bf.lshr34, 255, !dbg !4940
  %cmp36 = icmp eq i32 %bf.clear35, 1, !dbg !4941
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !4942

if.then38:                                        ; preds = %lor.lhs.false32, %if.end27
  br label %for.inc, !dbg !4943

if.end39:                                         ; preds = %lor.lhs.false32
  %27 = load %struct.rtx_def*, %struct.rtx_def** %incoming, align 8, !dbg !4944
  %call = call zeroext i8 @vt_get_decl_and_offset(%struct.rtx_def* %27, %union.tree_node** %decl, i64* %offset), !dbg !4946
  %tobool40 = icmp ne i8 %call, 0, !dbg !4946
  br i1 %tobool40, label %if.end69, label %if.then41, !dbg !4947

if.then41:                                        ; preds = %if.end39
  %28 = load %struct.rtx_def*, %struct.rtx_def** %incoming, align 8, !dbg !4948
  %29 = bitcast %struct.rtx_def* %28 to i32*, !dbg !4948
  %bf.load42 = load i32, i32* %29, align 8, !dbg !4948
  %bf.clear43 = and i32 %bf.load42, 65535, !dbg !4948
  %cmp44 = icmp eq i32 %bf.clear43, 37, !dbg !4948
  br i1 %cmp44, label %if.then51, label %lor.lhs.false46, !dbg !4951

lor.lhs.false46:                                  ; preds = %if.then41
  %30 = load %struct.rtx_def*, %struct.rtx_def** %incoming, align 8, !dbg !4952
  %31 = bitcast %struct.rtx_def* %30 to i32*, !dbg !4952
  %bf.load47 = load i32, i32* %31, align 8, !dbg !4952
  %bf.clear48 = and i32 %bf.load47, 65535, !dbg !4952
  %cmp49 = icmp eq i32 %bf.clear48, 43, !dbg !4952
  br i1 %cmp49, label %if.then51, label %if.else, !dbg !4953

if.then51:                                        ; preds = %lor.lhs.false46, %if.then41
  store i64 0, i64* %offset, align 8, !dbg !4954
  %32 = load %union.tree_node*, %union.tree_node** %parm, align 8, !dbg !4956
  store %union.tree_node* %32, %union.tree_node** %decl, align 8, !dbg !4957
  %33 = load %struct.rtx_def*, %struct.rtx_def** %decl_rtl, align 8, !dbg !4958
  %34 = bitcast %struct.rtx_def* %33 to i32*, !dbg !4958
  %bf.load52 = load i32, i32* %34, align 8, !dbg !4958
  %bf.lshr53 = lshr i32 %bf.load52, 16, !dbg !4958
  %bf.clear54 = and i32 %bf.lshr53, 255, !dbg !4958
  %35 = load %struct.rtx_def*, %struct.rtx_def** %incoming, align 8, !dbg !4959
  %call55 = call %struct.rtx_def* @gen_rtx_MEM(i32 %bf.clear54, %struct.rtx_def* %35), !dbg !4960
  store %struct.rtx_def* %call55, %struct.rtx_def** %incoming, align 8, !dbg !4961
  br label %if.end68, !dbg !4962

if.else:                                          ; preds = %lor.lhs.false46
  %36 = load %struct.rtx_def*, %struct.rtx_def** %decl_rtl, align 8, !dbg !4963
  %call56 = call zeroext i8 @vt_get_decl_and_offset(%struct.rtx_def* %36, %union.tree_node** %decl, i64* %offset), !dbg !4966
  %tobool57 = icmp ne i8 %call56, 0, !dbg !4966
  br i1 %tobool57, label %if.end59, label %if.then58, !dbg !4967

if.then58:                                        ; preds = %if.else
  br label %for.inc, !dbg !4968

if.end59:                                         ; preds = %if.else
  %37 = load %struct.rtx_def*, %struct.rtx_def** %incoming, align 8, !dbg !4969
  %38 = bitcast %struct.rtx_def* %37 to i32*, !dbg !4969
  %bf.load60 = load i32, i32* %38, align 8, !dbg !4969
  %bf.lshr61 = lshr i32 %bf.load60, 16, !dbg !4969
  %bf.clear62 = and i32 %bf.lshr61, 255, !dbg !4969
  %39 = load %struct.rtx_def*, %struct.rtx_def** %decl_rtl, align 8, !dbg !4970
  %40 = bitcast %struct.rtx_def* %39 to i32*, !dbg !4970
  %bf.load63 = load i32, i32* %40, align 8, !dbg !4970
  %bf.lshr64 = lshr i32 %bf.load63, 16, !dbg !4970
  %bf.clear65 = and i32 %bf.lshr64, 255, !dbg !4970
  %call66 = call i32 @byte_lowpart_offset(i32 %bf.clear62, i32 %bf.clear65), !dbg !4971
  %conv67 = sext i32 %call66 to i64, !dbg !4971
  %41 = load i64, i64* %offset, align 8, !dbg !4972
  %add = add nsw i64 %41, %conv67, !dbg !4972
  store i64 %add, i64* %offset, align 8, !dbg !4972
  br label %if.end68

if.end68:                                         ; preds = %if.end59, %if.then51
  br label %if.end69, !dbg !4973

if.end69:                                         ; preds = %if.end68, %if.end39
  %42 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !4974
  %tobool70 = icmp ne %union.tree_node* %42, null, !dbg !4974
  br i1 %tobool70, label %if.end72, label %if.then71, !dbg !4976

if.then71:                                        ; preds = %if.end69
  br label %for.inc, !dbg !4977

if.end72:                                         ; preds = %if.end69
  %43 = load %union.tree_node*, %union.tree_node** %parm, align 8, !dbg !4978
  %44 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !4980
  %cmp73 = icmp ne %union.tree_node* %43, %44, !dbg !4981
  br i1 %cmp73, label %if.then75, label %if.end83, !dbg !4982

if.then75:                                        ; preds = %if.end72
  %45 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !4983
  %call76 = call %union.tree_node* @get_spill_slot_decl(i8 zeroext 0), !dbg !4983
  %cmp77 = icmp eq %union.tree_node* %45, %call76, !dbg !4983
  br i1 %cmp77, label %cond.false80, label %cond.true79, !dbg !4983

cond.true79:                                      ; preds = %if.then75
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 8001, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !4983
  br label %cond.end81, !dbg !4983

cond.false80:                                     ; preds = %if.then75
  br label %cond.end81, !dbg !4983

cond.end81:                                       ; preds = %cond.false80, %cond.true79
  %cond82 = phi i32 [ 0, %cond.true79 ], [ 0, %cond.false80 ], !dbg !4983
  store i64 0, i64* %offset, align 8, !dbg !4985
  br label %if.end83, !dbg !4986

if.end83:                                         ; preds = %cond.end81, %if.end72
  %46 = load %struct.rtx_def*, %struct.rtx_def** %incoming, align 8, !dbg !4987
  %47 = load %union.tree_node*, %union.tree_node** %parm, align 8, !dbg !4989
  %48 = load i64, i64* %offset, align 8, !dbg !4990
  %call84 = call zeroext i8 @track_loc_p(%struct.rtx_def* %46, %union.tree_node* %47, i64 %48, i8 zeroext 0, i32* %mode, i64* %offset), !dbg !4991
  %tobool85 = icmp ne i8 %call84, 0, !dbg !4991
  br i1 %tobool85, label %if.end87, label %if.then86, !dbg !4992

if.then86:                                        ; preds = %if.end83
  br label %for.inc, !dbg !4993

if.end87:                                         ; preds = %if.end83
  %49 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !4994
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %49, i64 0, !dbg !4994
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !4994
  %50 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !4994
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %50, i32 0, i32 0, !dbg !4994
  %51 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !4994
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %51, i32 0, i32 2, !dbg !4994
  %52 = load i8*, i8** %aux, align 8, !dbg !4994
  %53 = bitcast i8* %52 to %struct.variable_tracking_info_def*, !dbg !4994
  %out88 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %53, i32 0, i32 2, !dbg !4995
  store %struct.dataflow_set_def* %out88, %struct.dataflow_set_def** %out, align 8, !dbg !4996
  %54 = load %union.tree_node*, %union.tree_node** %parm, align 8, !dbg !4997
  %call89 = call i8* @dv_from_decl(%union.tree_node* %54), !dbg !4998
  store i8* %call89, i8** %dv, align 8, !dbg !4999
  %55 = load %union.tree_node*, %union.tree_node** %parm, align 8, !dbg !5000
  %call90 = call %union.tree_node* @target_for_debug_bind(%union.tree_node* %55), !dbg !5002
  %tobool91 = icmp ne %union.tree_node* %call90, null, !dbg !5002
  br i1 %tobool91, label %land.lhs.true92, label %if.end108, !dbg !5003

land.lhs.true92:                                  ; preds = %if.end87
  %56 = load %struct.rtx_def*, %struct.rtx_def** %incoming, align 8, !dbg !5004
  %57 = bitcast %struct.rtx_def* %56 to i32*, !dbg !5004
  %bf.load93 = load i32, i32* %57, align 8, !dbg !5004
  %bf.clear94 = and i32 %bf.load93, 65535, !dbg !5004
  %cmp95 = icmp ne i32 %bf.clear94, 15, !dbg !5005
  br i1 %cmp95, label %if.then97, label %if.end108, !dbg !5006

if.then97:                                        ; preds = %land.lhs.true92
  call void @llvm.dbg.declare(metadata %struct.cselib_val_struct** %val, metadata !5007, metadata !DIExpression()), !dbg !5009
  %58 = load i64, i64* %offset, align 8, !dbg !5010
  %tobool98 = icmp ne i64 %58, 0, !dbg !5010
  br i1 %tobool98, label %if.then99, label %if.end100, !dbg !5012

if.then99:                                        ; preds = %if.then97
  br label %for.inc, !dbg !5013

if.end100:                                        ; preds = %if.then97
  %59 = load i32, i32* %mode, align 4, !dbg !5014
  %60 = load %struct.rtx_def*, %struct.rtx_def** %incoming, align 8, !dbg !5015
  %call101 = call %struct.rtx_def* @var_lowpart(i32 %59, %struct.rtx_def* %60), !dbg !5016
  %61 = load i32, i32* %mode, align 4, !dbg !5017
  %call102 = call %struct.cselib_val_struct* @cselib_lookup(%struct.rtx_def* %call101, i32 %61, i32 1), !dbg !5018
  store %struct.cselib_val_struct* %call102, %struct.cselib_val_struct** %val, align 8, !dbg !5019
  %62 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %val, align 8, !dbg !5020
  %tobool103 = icmp ne %struct.cselib_val_struct* %62, null, !dbg !5020
  br i1 %tobool103, label %if.then104, label %if.end107, !dbg !5022

if.then104:                                       ; preds = %if.end100
  %63 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %val, align 8, !dbg !5023
  call void @preserve_value(%struct.cselib_val_struct* %63), !dbg !5025
  %64 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %out, align 8, !dbg !5026
  %65 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %val, align 8, !dbg !5027
  %val_rtx = getelementptr inbounds %struct.cselib_val_struct, %struct.cselib_val_struct* %65, i32 0, i32 2, !dbg !5028
  %66 = load %struct.rtx_def*, %struct.rtx_def** %val_rtx, align 8, !dbg !5028
  %67 = load i8*, i8** %dv, align 8, !dbg !5029
  %68 = load i64, i64* %offset, align 8, !dbg !5030
  call void @set_variable_part(%struct.dataflow_set_def* %64, %struct.rtx_def* %66, i8* %67, i64 %68, i32 2, %struct.rtx_def* null, i32 1), !dbg !5031
  %69 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %val, align 8, !dbg !5032
  %val_rtx105 = getelementptr inbounds %struct.cselib_val_struct, %struct.cselib_val_struct* %69, i32 0, i32 2, !dbg !5033
  %70 = load %struct.rtx_def*, %struct.rtx_def** %val_rtx105, align 8, !dbg !5033
  %call106 = call i8* @dv_from_value(%struct.rtx_def* %70), !dbg !5034
  store i8* %call106, i8** %dv, align 8, !dbg !5035
  br label %if.end107, !dbg !5036

if.end107:                                        ; preds = %if.then104, %if.end100
  br label %if.end108, !dbg !5037

if.end108:                                        ; preds = %if.end107, %land.lhs.true92, %if.end87
  %71 = load %struct.rtx_def*, %struct.rtx_def** %incoming, align 8, !dbg !5038
  %72 = bitcast %struct.rtx_def* %71 to i32*, !dbg !5038
  %bf.load109 = load i32, i32* %72, align 8, !dbg !5038
  %bf.clear110 = and i32 %bf.load109, 65535, !dbg !5038
  %cmp111 = icmp eq i32 %bf.clear110, 37, !dbg !5038
  br i1 %cmp111, label %if.then113, label %if.else125, !dbg !5040

if.then113:                                       ; preds = %if.end108
  %73 = load i32, i32* %mode, align 4, !dbg !5041
  %74 = load %struct.rtx_def*, %struct.rtx_def** %incoming, align 8, !dbg !5043
  %call114 = call %struct.rtx_def* @var_lowpart(i32 %73, %struct.rtx_def* %74), !dbg !5044
  store %struct.rtx_def* %call114, %struct.rtx_def** %incoming, align 8, !dbg !5045
  %75 = load %struct.rtx_def*, %struct.rtx_def** %incoming, align 8, !dbg !5046
  %call115 = call i32 @rhs_regno(%struct.rtx_def* %75), !dbg !5046
  %cmp116 = icmp ult i32 %call115, 53, !dbg !5046
  br i1 %cmp116, label %cond.false119, label %cond.true118, !dbg !5046

cond.true118:                                     ; preds = %if.then113
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 8044, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !5046
  br label %cond.end120, !dbg !5046

cond.false119:                                    ; preds = %if.then113
  br label %cond.end120, !dbg !5046

cond.end120:                                      ; preds = %cond.false119, %cond.true118
  %cond121 = phi i32 [ 0, %cond.true118 ], [ 0, %cond.false119 ], !dbg !5046
  %76 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %out, align 8, !dbg !5047
  %regs = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %76, i32 0, i32 1, !dbg !5048
  %77 = load %struct.rtx_def*, %struct.rtx_def** %incoming, align 8, !dbg !5049
  %call122 = call i32 @rhs_regno(%struct.rtx_def* %77), !dbg !5049
  %idxprom123 = zext i32 %call122 to i64, !dbg !5047
  %arrayidx124 = getelementptr inbounds [53 x %struct.attrs_def*], [53 x %struct.attrs_def*]* %regs, i64 0, i64 %idxprom123, !dbg !5047
  %78 = load i8*, i8** %dv, align 8, !dbg !5050
  %79 = load i64, i64* %offset, align 8, !dbg !5051
  %80 = load %struct.rtx_def*, %struct.rtx_def** %incoming, align 8, !dbg !5052
  call void @attrs_list_insert(%struct.attrs_def** %arrayidx124, i8* %78, i64 %79, %struct.rtx_def* %80), !dbg !5053
  %81 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %out, align 8, !dbg !5054
  %82 = load %struct.rtx_def*, %struct.rtx_def** %incoming, align 8, !dbg !5055
  %83 = load i8*, i8** %dv, align 8, !dbg !5056
  %84 = load i64, i64* %offset, align 8, !dbg !5057
  call void @set_variable_part(%struct.dataflow_set_def* %81, %struct.rtx_def* %82, i8* %83, i64 %84, i32 2, %struct.rtx_def* null, i32 1), !dbg !5058
  br label %if.end133, !dbg !5059

if.else125:                                       ; preds = %if.end108
  %85 = load %struct.rtx_def*, %struct.rtx_def** %incoming, align 8, !dbg !5060
  %86 = bitcast %struct.rtx_def* %85 to i32*, !dbg !5060
  %bf.load126 = load i32, i32* %86, align 8, !dbg !5060
  %bf.clear127 = and i32 %bf.load126, 65535, !dbg !5060
  %cmp128 = icmp eq i32 %bf.clear127, 43, !dbg !5060
  br i1 %cmp128, label %if.then130, label %if.end132, !dbg !5062

if.then130:                                       ; preds = %if.else125
  %87 = load i32, i32* %mode, align 4, !dbg !5063
  %88 = load %struct.rtx_def*, %struct.rtx_def** %incoming, align 8, !dbg !5065
  %call131 = call %struct.rtx_def* @var_lowpart(i32 %87, %struct.rtx_def* %88), !dbg !5066
  store %struct.rtx_def* %call131, %struct.rtx_def** %incoming, align 8, !dbg !5067
  %89 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %out, align 8, !dbg !5068
  %90 = load %struct.rtx_def*, %struct.rtx_def** %incoming, align 8, !dbg !5069
  %91 = load i8*, i8** %dv, align 8, !dbg !5070
  %92 = load i64, i64* %offset, align 8, !dbg !5071
  call void @set_variable_part(%struct.dataflow_set_def* %89, %struct.rtx_def* %90, i8* %91, i64 %92, i32 2, %struct.rtx_def* null, i32 1), !dbg !5072
  br label %if.end132, !dbg !5073

if.end132:                                        ; preds = %if.then130, %if.else125
  br label %if.end133

if.end133:                                        ; preds = %if.end132, %cond.end120
  br label %for.inc, !dbg !5074

for.inc:                                          ; preds = %if.end133, %if.then99, %if.then86, %if.then71, %if.then58, %if.then38, %if.then26, %if.then22, %if.then
  %93 = load %union.tree_node*, %union.tree_node** %parm, align 8, !dbg !5075
  %common = bitcast %union.tree_node* %93 to %struct.tree_common*, !dbg !5075
  %chain = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 1, !dbg !5075
  %94 = load %union.tree_node*, %union.tree_node** %chain, align 8, !dbg !5075
  store %union.tree_node* %94, %union.tree_node** %parm, align 8, !dbg !5076
  br label %for.cond, !dbg !5077, !llvm.loop !5078

for.end:                                          ; preds = %for.cond
  %95 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !5080
  %tobool134 = icmp ne i32 %95, 0, !dbg !5080
  br i1 %tobool134, label %if.then135, label %if.end137, !dbg !5082

if.then135:                                       ; preds = %for.end
  call void @cselib_preserve_only_values(), !dbg !5083
  %call136 = call i32 @cselib_get_next_uid(), !dbg !5085
  call void @cselib_reset_table(i32 %call136), !dbg !5086
  br label %if.end137, !dbg !5087

if.end137:                                        ; preds = %if.then135, %for.end
  ret void, !dbg !5088
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @dv_htab_hash(i8* %dv) #0 !dbg !5089 {
entry:
  %dv.addr = alloca i8*, align 8
  store i8* %dv, i8** %dv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dv.addr, metadata !5092, metadata !DIExpression()), !dbg !5093
  %0 = load i8*, i8** %dv.addr, align 8, !dbg !5094
  %call = call i32 @dv_uid(i8* %0), !dbg !5095
  %call1 = call i32 @dv_uid2hash(i32 %call), !dbg !5096
  ret i32 %call1, !dbg !5097
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @dv_uid2hash(i32 %uid) #0 !dbg !5098 {
entry:
  %uid.addr = alloca i32, align 4
  store i32 %uid, i32* %uid.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %uid.addr, metadata !5102, metadata !DIExpression()), !dbg !5103
  %0 = load i32, i32* %uid.addr, align 4, !dbg !5104
  ret i32 %0, !dbg !5105
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @dv_uid(i8* %dv) #0 !dbg !5106 {
entry:
  %retval = alloca i32, align 4
  %dv.addr = alloca i8*, align 8
  store i8* %dv, i8** %dv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dv.addr, metadata !5109, metadata !DIExpression()), !dbg !5110
  %0 = load i8*, i8** %dv.addr, align 8, !dbg !5111
  %call = call zeroext i8 @dv_is_value_p(i8* %0), !dbg !5113
  %tobool = icmp ne i8 %call, 0, !dbg !5113
  br i1 %tobool, label %if.then, label %if.else, !dbg !5114

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %dv.addr, align 8, !dbg !5115
  %call1 = call %struct.rtx_def* @dv_as_value(i8* %1), !dbg !5115
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call1, i32 0, i32 1, !dbg !5115
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5115
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !5115
  %rt_cselib = bitcast %union.rtunion_def* %arrayidx to %struct.cselib_val_struct**, !dbg !5115
  %2 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %rt_cselib, align 8, !dbg !5115
  %uid = getelementptr inbounds %struct.cselib_val_struct, %struct.cselib_val_struct* %2, i32 0, i32 1, !dbg !5116
  %3 = load i32, i32* %uid, align 4, !dbg !5116
  store i32 %3, i32* %retval, align 4, !dbg !5117
  br label %return, !dbg !5117

if.else:                                          ; preds = %entry
  %4 = load i8*, i8** %dv.addr, align 8, !dbg !5118
  %call2 = call %union.tree_node* @dv_as_decl(i8* %4), !dbg !5118
  %decl_minimal = bitcast %union.tree_node* %call2 to %struct.tree_decl_minimal*, !dbg !5118
  %uid3 = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %decl_minimal, i32 0, i32 2, !dbg !5118
  %5 = load i32, i32* %uid3, align 4, !dbg !5118
  store i32 %5, i32* %retval, align 4, !dbg !5119
  br label %return, !dbg !5119

return:                                           ; preds = %if.else, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !5120
  ret i32 %6, !dbg !5120
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @dv_as_opaque(i8* %dv) #0 !dbg !5121 {
entry:
  %dv.addr = alloca i8*, align 8
  store i8* %dv, i8** %dv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dv.addr, metadata !5124, metadata !DIExpression()), !dbg !5125
  %0 = load i8*, i8** %dv.addr, align 8, !dbg !5126
  ret i8* %0, !dbg !5127
}

declare dso_local void @pool_free(%struct.alloc_pool_def*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.alloc_pool_def* @dv_pool(i8* %dv) #0 !dbg !5128 {
entry:
  %dv.addr = alloca i8*, align 8
  store i8* %dv, i8** %dv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dv.addr, metadata !5131, metadata !DIExpression()), !dbg !5132
  %0 = load i8*, i8** %dv.addr, align 8, !dbg !5133
  %call = call zeroext i8 @dv_onepart_p(i8* %0), !dbg !5134
  %conv = zext i8 %call to i32, !dbg !5134
  %tobool = icmp ne i32 %conv, 0, !dbg !5134
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5134

cond.true:                                        ; preds = %entry
  %1 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @valvar_pool, align 8, !dbg !5135
  br label %cond.end, !dbg !5134

cond.false:                                       ; preds = %entry
  %2 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @var_pool, align 8, !dbg !5136
  br label %cond.end, !dbg !5134

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.alloc_pool_def* [ %1, %cond.true ], [ %2, %cond.false ], !dbg !5134
  ret %struct.alloc_pool_def* %cond, !dbg !5137
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @dv_onepart_p(i8* %dv) #0 !dbg !5138 {
entry:
  %retval = alloca i8, align 1
  %dv.addr = alloca i8*, align 8
  %decl = alloca %union.tree_node*, align 8
  store i8* %dv, i8** %dv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dv.addr, metadata !5139, metadata !DIExpression()), !dbg !5140
  call void @llvm.dbg.declare(metadata %union.tree_node** %decl, metadata !5141, metadata !DIExpression()), !dbg !5142
  %0 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !5143
  %tobool = icmp ne i32 %0, 0, !dbg !5143
  br i1 %tobool, label %if.end, label %if.then, !dbg !5145

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !5146
  br label %return, !dbg !5146

if.end:                                           ; preds = %entry
  %1 = load i8*, i8** %dv.addr, align 8, !dbg !5147
  %call = call zeroext i8 @dv_is_value_p(i8* %1), !dbg !5149
  %tobool1 = icmp ne i8 %call, 0, !dbg !5149
  br i1 %tobool1, label %if.then2, label %if.end3, !dbg !5150

if.then2:                                         ; preds = %if.end
  store i8 1, i8* %retval, align 1, !dbg !5151
  br label %return, !dbg !5151

if.end3:                                          ; preds = %if.end
  %2 = load i8*, i8** %dv.addr, align 8, !dbg !5152
  %call4 = call %union.tree_node* @dv_as_decl(i8* %2), !dbg !5153
  store %union.tree_node* %call4, %union.tree_node** %decl, align 8, !dbg !5154
  %3 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !5155
  %tobool5 = icmp ne %union.tree_node* %3, null, !dbg !5155
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !5157

if.then6:                                         ; preds = %if.end3
  store i8 1, i8* %retval, align 1, !dbg !5158
  br label %return, !dbg !5158

if.end7:                                          ; preds = %if.end3
  %4 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !5159
  %base = bitcast %union.tree_node* %4 to %struct.tree_base*, !dbg !5159
  %5 = bitcast %struct.tree_base* %base to i64*, !dbg !5159
  %bf.load = load i64, i64* %5, align 8, !dbg !5159
  %bf.clear = and i64 %bf.load, 65535, !dbg !5159
  %bf.cast = trunc i64 %bf.clear to i32, !dbg !5159
  %cmp = icmp eq i32 %bf.cast, 37, !dbg !5161
  br i1 %cmp, label %if.then8, label %if.end9, !dbg !5162

if.then8:                                         ; preds = %if.end7
  store i8 1, i8* %retval, align 1, !dbg !5163
  br label %return, !dbg !5163

if.end9:                                          ; preds = %if.end7
  %6 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !5164
  %call10 = call %union.tree_node* @target_for_debug_bind(%union.tree_node* %6), !dbg !5165
  %cmp11 = icmp ne %union.tree_node* %call10, null, !dbg !5166
  %conv = zext i1 %cmp11 to i32, !dbg !5166
  %conv12 = trunc i32 %conv to i8, !dbg !5167
  store i8 %conv12, i8* %retval, align 1, !dbg !5168
  br label %return, !dbg !5168

return:                                           ; preds = %if.end9, %if.then8, %if.then6, %if.then2, %if.then
  %7 = load i8, i8* %retval, align 1, !dbg !5169
  ret i8 %7, !dbg !5169
}

declare dso_local %union.tree_node* @target_for_debug_bind(%union.tree_node*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @init_attrs_list_set(%struct.attrs_def** %set) #0 !dbg !5170 {
entry:
  %set.addr = alloca %struct.attrs_def**, align 8
  %i = alloca i32, align 4
  store %struct.attrs_def** %set, %struct.attrs_def*** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.attrs_def*** %set.addr, metadata !5174, metadata !DIExpression()), !dbg !5175
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5176, metadata !DIExpression()), !dbg !5177
  store i32 0, i32* %i, align 4, !dbg !5178
  br label %for.cond, !dbg !5180

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !5181
  %cmp = icmp slt i32 %0, 53, !dbg !5183
  br i1 %cmp, label %for.body, label %for.end, !dbg !5184

for.body:                                         ; preds = %for.cond
  %1 = load %struct.attrs_def**, %struct.attrs_def*** %set.addr, align 8, !dbg !5185
  %2 = load i32, i32* %i, align 4, !dbg !5186
  %idxprom = sext i32 %2 to i64, !dbg !5185
  %arrayidx = getelementptr inbounds %struct.attrs_def*, %struct.attrs_def** %1, i64 %idxprom, !dbg !5185
  store %struct.attrs_def* null, %struct.attrs_def** %arrayidx, align 8, !dbg !5187
  br label %for.inc, !dbg !5185

for.inc:                                          ; preds = %for.body
  %3 = load i32, i32* %i, align 4, !dbg !5188
  %inc = add nsw i32 %3, 1, !dbg !5188
  store i32 %inc, i32* %i, align 4, !dbg !5188
  br label %for.cond, !dbg !5189, !llvm.loop !5190

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5192
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.shared_hash_def* @shared_hash_copy(%struct.shared_hash_def* %vars) #0 !dbg !5193 {
entry:
  %vars.addr = alloca %struct.shared_hash_def*, align 8
  store %struct.shared_hash_def* %vars, %struct.shared_hash_def** %vars.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.shared_hash_def** %vars.addr, metadata !5196, metadata !DIExpression()), !dbg !5197
  %0 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars.addr, align 8, !dbg !5198
  %refcount = getelementptr inbounds %struct.shared_hash_def, %struct.shared_hash_def* %0, i32 0, i32 0, !dbg !5199
  %1 = load i32, i32* %refcount, align 8, !dbg !5200
  %inc = add nsw i32 %1, 1, !dbg !5200
  store i32 %inc, i32* %refcount, align 8, !dbg !5200
  %2 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars.addr, align 8, !dbg !5201
  ret %struct.shared_hash_def* %2, !dbg !5202
}

declare dso_local i8* @vec_heap_p_reserve_exact(i8*, i32) #2

declare dso_local i8* @xmalloc(i64) #2

; Function Attrs: noinline nounwind uwtable
define internal { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %ev) #0 !dbg !5203 {
entry:
  %retval = alloca %struct.edge_iterator, align 8
  %ev.addr = alloca %struct.VEC_edge_gc**, align 8
  store %struct.VEC_edge_gc** %ev, %struct.VEC_edge_gc*** %ev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_edge_gc*** %ev.addr, metadata !5206, metadata !DIExpression()), !dbg !5207
  call void @llvm.dbg.declare(metadata %struct.edge_iterator* %retval, metadata !5208, metadata !DIExpression()), !dbg !5209
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i32 0, i32 0, !dbg !5210
  store i32 0, i32* %index, align 8, !dbg !5211
  %0 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %ev.addr, align 8, !dbg !5212
  %container = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i32 0, i32 1, !dbg !5213
  store %struct.VEC_edge_gc** %0, %struct.VEC_edge_gc*** %container, align 8, !dbg !5214
  %1 = bitcast %struct.edge_iterator* %retval to { i32, %struct.VEC_edge_gc** }*, !dbg !5215
  %2 = load { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %1, align 8, !dbg !5215
  ret { i32, %struct.VEC_edge_gc** } %2, !dbg !5215
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define internal %struct.edge_def* @ei_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #0 !dbg !5216 {
entry:
  %i = alloca %struct.edge_iterator, align 8
  %0 = bitcast %struct.edge_iterator* %i to { i32, %struct.VEC_edge_gc** }*
  %1 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 0
  store i32 %i.coerce0, i32* %1, align 8
  %2 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 1
  store %struct.VEC_edge_gc** %i.coerce1, %struct.VEC_edge_gc*** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_iterator* %i, metadata !5219, metadata !DIExpression()), !dbg !5220
  %3 = bitcast %struct.edge_iterator* %i to { i32, %struct.VEC_edge_gc** }*, !dbg !5221
  %4 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %3, i32 0, i32 0, !dbg !5221
  %5 = load i32, i32* %4, align 8, !dbg !5221
  %6 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %3, i32 0, i32 1, !dbg !5221
  %7 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %6, align 8, !dbg !5221
  %call = call %struct.VEC_edge_gc* @ei_container(i32 %5, %struct.VEC_edge_gc** %7), !dbg !5221
  %tobool = icmp ne %struct.VEC_edge_gc* %call, null, !dbg !5221
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5221

cond.true:                                        ; preds = %entry
  %8 = bitcast %struct.edge_iterator* %i to { i32, %struct.VEC_edge_gc** }*, !dbg !5221
  %9 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %8, i32 0, i32 0, !dbg !5221
  %10 = load i32, i32* %9, align 8, !dbg !5221
  %11 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %8, i32 0, i32 1, !dbg !5221
  %12 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %11, align 8, !dbg !5221
  %call1 = call %struct.VEC_edge_gc* @ei_container(i32 %10, %struct.VEC_edge_gc** %12), !dbg !5221
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i32 0, i32 0, !dbg !5221
  br label %cond.end, !dbg !5221

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5221

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !5221
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i32 0, i32 0, !dbg !5221
  %13 = load i32, i32* %index, align 8, !dbg !5221
  %call2 = call %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 %13), !dbg !5221
  ret %struct.edge_def* %call2, !dbg !5222
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_edge_base_length(%struct.VEC_edge_base* %vec_) #0 !dbg !5223 {
entry:
  %vec_.addr = alloca %struct.VEC_edge_base*, align 8
  store %struct.VEC_edge_base* %vec_, %struct.VEC_edge_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_edge_base** %vec_.addr, metadata !5228, metadata !DIExpression()), !dbg !5229
  %0 = load %struct.VEC_edge_base*, %struct.VEC_edge_base** %vec_.addr, align 8, !dbg !5229
  %tobool = icmp ne %struct.VEC_edge_base* %0, null, !dbg !5229
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5229

cond.true:                                        ; preds = %entry
  %1 = load %struct.VEC_edge_base*, %struct.VEC_edge_base** %vec_.addr, align 8, !dbg !5229
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %1, i32 0, i32 0, !dbg !5229
  %2 = load i32, i32* %num, align 8, !dbg !5229
  br label %cond.end, !dbg !5229

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5229

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ 0, %cond.false ], !dbg !5229
  ret i32 %cond, !dbg !5229
}

declare dso_local void @free(i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @ei_one_before_end_p(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #0 !dbg !5230 {
entry:
  %i = alloca %struct.edge_iterator, align 8
  %0 = bitcast %struct.edge_iterator* %i to { i32, %struct.VEC_edge_gc** }*
  %1 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 0
  store i32 %i.coerce0, i32* %1, align 8
  %2 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 1
  store %struct.VEC_edge_gc** %i.coerce1, %struct.VEC_edge_gc*** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_iterator* %i, metadata !5233, metadata !DIExpression()), !dbg !5234
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i32 0, i32 0, !dbg !5235
  %3 = load i32, i32* %index, align 8, !dbg !5235
  %add = add i32 %3, 1, !dbg !5236
  %4 = bitcast %struct.edge_iterator* %i to { i32, %struct.VEC_edge_gc** }*, !dbg !5237
  %5 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %4, i32 0, i32 0, !dbg !5237
  %6 = load i32, i32* %5, align 8, !dbg !5237
  %7 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %4, i32 0, i32 1, !dbg !5237
  %8 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %7, align 8, !dbg !5237
  %call = call %struct.VEC_edge_gc* @ei_container(i32 %6, %struct.VEC_edge_gc** %8), !dbg !5237
  %tobool = icmp ne %struct.VEC_edge_gc* %call, null, !dbg !5237
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5237

cond.true:                                        ; preds = %entry
  %9 = bitcast %struct.edge_iterator* %i to { i32, %struct.VEC_edge_gc** }*, !dbg !5237
  %10 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %9, i32 0, i32 0, !dbg !5237
  %11 = load i32, i32* %10, align 8, !dbg !5237
  %12 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %9, i32 0, i32 1, !dbg !5237
  %13 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %12, align 8, !dbg !5237
  %call1 = call %struct.VEC_edge_gc* @ei_container(i32 %11, %struct.VEC_edge_gc** %13), !dbg !5237
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i32 0, i32 0, !dbg !5237
  br label %cond.end, !dbg !5237

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5237

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !5237
  %call2 = call i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond), !dbg !5237
  %cmp = icmp eq i32 %add, %call2, !dbg !5238
  %conv = zext i1 %cmp to i32, !dbg !5238
  %conv3 = trunc i32 %conv to i8, !dbg !5239
  ret i8 %conv3, !dbg !5240
}

; Function Attrs: noinline nounwind uwtable
define internal void @ei_next(%struct.edge_iterator* %i) #0 !dbg !5241 {
entry:
  %i.addr = alloca %struct.edge_iterator*, align 8
  store %struct.edge_iterator* %i, %struct.edge_iterator** %i.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_iterator** %i.addr, metadata !5244, metadata !DIExpression()), !dbg !5245
  %0 = load %struct.edge_iterator*, %struct.edge_iterator** %i.addr, align 8, !dbg !5246
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %0, i32 0, i32 0, !dbg !5246
  %1 = load i32, i32* %index, align 8, !dbg !5246
  %2 = load %struct.edge_iterator*, %struct.edge_iterator** %i.addr, align 8, !dbg !5246
  %3 = bitcast %struct.edge_iterator* %2 to { i32, %struct.VEC_edge_gc** }*, !dbg !5246
  %4 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %3, i32 0, i32 0, !dbg !5246
  %5 = load i32, i32* %4, align 8, !dbg !5246
  %6 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %3, i32 0, i32 1, !dbg !5246
  %7 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %6, align 8, !dbg !5246
  %call = call %struct.VEC_edge_gc* @ei_container(i32 %5, %struct.VEC_edge_gc** %7), !dbg !5246
  %tobool = icmp ne %struct.VEC_edge_gc* %call, null, !dbg !5246
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5246

cond.true:                                        ; preds = %entry
  %8 = load %struct.edge_iterator*, %struct.edge_iterator** %i.addr, align 8, !dbg !5246
  %9 = bitcast %struct.edge_iterator* %8 to { i32, %struct.VEC_edge_gc** }*, !dbg !5246
  %10 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %9, i32 0, i32 0, !dbg !5246
  %11 = load i32, i32* %10, align 8, !dbg !5246
  %12 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %9, i32 0, i32 1, !dbg !5246
  %13 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %12, align 8, !dbg !5246
  %call1 = call %struct.VEC_edge_gc* @ei_container(i32 %11, %struct.VEC_edge_gc** %13), !dbg !5246
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i32 0, i32 0, !dbg !5246
  br label %cond.end, !dbg !5246

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5246

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !5246
  %call2 = call i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond), !dbg !5246
  %cmp = icmp ult i32 %1, %call2, !dbg !5246
  br i1 %cmp, label %cond.false4, label %cond.true3, !dbg !5246

cond.true3:                                       ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.10, i64 0, i64 0), i32 738, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !5246
  br label %cond.end5, !dbg !5246

cond.false4:                                      ; preds = %cond.end
  br label %cond.end5, !dbg !5246

cond.end5:                                        ; preds = %cond.false4, %cond.true3
  %cond6 = phi i32 [ 0, %cond.true3 ], [ 0, %cond.false4 ], !dbg !5246
  %14 = load %struct.edge_iterator*, %struct.edge_iterator** %i.addr, align 8, !dbg !5247
  %index7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %14, i32 0, i32 0, !dbg !5248
  %15 = load i32, i32* %index7, align 8, !dbg !5249
  %inc = add i32 %15, 1, !dbg !5249
  store i32 %inc, i32* %index7, align 8, !dbg !5249
  ret void, !dbg !5250
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %vec_, i32 %ix_) #0 !dbg !5251 {
entry:
  %vec_.addr = alloca %struct.VEC_edge_base*, align 8
  %ix_.addr = alloca i32, align 4
  store %struct.VEC_edge_base* %vec_, %struct.VEC_edge_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_edge_base** %vec_.addr, metadata !5254, metadata !DIExpression()), !dbg !5255
  store i32 %ix_, i32* %ix_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ix_.addr, metadata !5256, metadata !DIExpression()), !dbg !5255
  %0 = load %struct.VEC_edge_base*, %struct.VEC_edge_base** %vec_.addr, align 8, !dbg !5255
  %tobool = icmp ne %struct.VEC_edge_base* %0, null, !dbg !5255
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !5255

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* %ix_.addr, align 4, !dbg !5255
  %2 = load %struct.VEC_edge_base*, %struct.VEC_edge_base** %vec_.addr, align 8, !dbg !5255
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %2, i32 0, i32 0, !dbg !5255
  %3 = load i32, i32* %num, align 8, !dbg !5255
  %cmp = icmp ult i32 %1, %3, !dbg !5255
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !5257
  %land.ext = zext i1 %4 to i32, !dbg !5255
  %5 = load %struct.VEC_edge_base*, %struct.VEC_edge_base** %vec_.addr, align 8, !dbg !5255
  %vec = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %5, i32 0, i32 2, !dbg !5255
  %6 = load i32, i32* %ix_.addr, align 4, !dbg !5255
  %idxprom = zext i32 %6 to i64, !dbg !5255
  %arrayidx = getelementptr inbounds [1 x %struct.edge_def*], [1 x %struct.edge_def*]* %vec, i64 0, i64 %idxprom, !dbg !5255
  %7 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !5255
  ret %struct.edge_def* %7, !dbg !5255
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #0 !dbg !5258 {
entry:
  %i = alloca %struct.edge_iterator, align 8
  %0 = bitcast %struct.edge_iterator* %i to { i32, %struct.VEC_edge_gc** }*
  %1 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 0
  store i32 %i.coerce0, i32* %1, align 8
  %2 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 1
  store %struct.VEC_edge_gc** %i.coerce1, %struct.VEC_edge_gc*** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_iterator* %i, metadata !5261, metadata !DIExpression()), !dbg !5262
  %container = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i32 0, i32 1, !dbg !5263
  %3 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %container, align 8, !dbg !5263
  %tobool = icmp ne %struct.VEC_edge_gc** %3, null, !dbg !5263
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !5263

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.10, i64 0, i64 0), i32 687, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !5263
  br label %cond.end, !dbg !5263

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5263

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !5263
  %container1 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i32 0, i32 1, !dbg !5264
  %4 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %container1, align 8, !dbg !5264
  %5 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %4, align 8, !dbg !5265
  ret %struct.VEC_edge_gc* %5, !dbg !5266
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @rhs_regno(%struct.rtx_def* %x) #0 !dbg !5267 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !5271, metadata !DIExpression()), !dbg !5272
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !5273
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !5273
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5273
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !5273
  %rt_uint = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !5273
  %1 = load i32, i32* %rt_uint, align 8, !dbg !5273
  ret i32 %1, !dbg !5274
}

declare dso_local %struct.cselib_val_struct* @cselib_lookup_from_insn(%struct.rtx_def*, i32, i32, %struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @get_insns() #2

; Function Attrs: noinline nounwind uwtable
define internal void @preserve_value(%struct.cselib_val_struct* %val) #0 !dbg !5275 {
entry:
  %val.addr = alloca %struct.cselib_val_struct*, align 8
  store %struct.cselib_val_struct* %val, %struct.cselib_val_struct** %val.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.cselib_val_struct** %val.addr, metadata !5278, metadata !DIExpression()), !dbg !5279
  %0 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %val.addr, align 8, !dbg !5280
  call void @cselib_preserve_value(%struct.cselib_val_struct* %0), !dbg !5281
  %1 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %val.addr, align 8, !dbg !5282
  %val_rtx = getelementptr inbounds %struct.cselib_val_struct, %struct.cselib_val_struct* %1, i32 0, i32 2, !dbg !5282
  %2 = load %struct.rtx_def*, %struct.rtx_def** %val_rtx, align 8, !dbg !5282
  %call = call %struct.rtx_def** @VEC_rtx_heap_safe_push(%struct.VEC_rtx_heap** @preserved_values, %struct.rtx_def* %2), !dbg !5282
  ret void, !dbg !5283
}

declare dso_local void @cselib_preserve_cfa_base_value(%struct.cselib_val_struct*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @var_reg_decl_set(%struct.dataflow_set_def* %set, %struct.rtx_def* %loc, i32 %initialized, i8* %dv, i64 %offset, %struct.rtx_def* %set_src, i32 %iopt) #0 !dbg !5284 {
entry:
  %set.addr = alloca %struct.dataflow_set_def*, align 8
  %loc.addr = alloca %struct.rtx_def*, align 8
  %initialized.addr = alloca i32, align 4
  %dv.addr = alloca i8*, align 8
  %offset.addr = alloca i64, align 8
  %set_src.addr = alloca %struct.rtx_def*, align 8
  %iopt.addr = alloca i32, align 4
  %node = alloca %struct.attrs_def*, align 8
  %decl_p = alloca i8, align 1
  store %struct.dataflow_set_def* %set, %struct.dataflow_set_def** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %set.addr, metadata !5287, metadata !DIExpression()), !dbg !5288
  store %struct.rtx_def* %loc, %struct.rtx_def** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %loc.addr, metadata !5289, metadata !DIExpression()), !dbg !5290
  store i32 %initialized, i32* %initialized.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %initialized.addr, metadata !5291, metadata !DIExpression()), !dbg !5292
  store i8* %dv, i8** %dv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dv.addr, metadata !5293, metadata !DIExpression()), !dbg !5294
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !5295, metadata !DIExpression()), !dbg !5296
  store %struct.rtx_def* %set_src, %struct.rtx_def** %set_src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %set_src.addr, metadata !5297, metadata !DIExpression()), !dbg !5298
  store i32 %iopt, i32* %iopt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iopt.addr, metadata !5299, metadata !DIExpression()), !dbg !5300
  call void @llvm.dbg.declare(metadata %struct.attrs_def** %node, metadata !5301, metadata !DIExpression()), !dbg !5302
  call void @llvm.dbg.declare(metadata i8* %decl_p, metadata !5303, metadata !DIExpression()), !dbg !5304
  %0 = load i8*, i8** %dv.addr, align 8, !dbg !5305
  %call = call zeroext i8 @dv_is_decl_p(i8* %0), !dbg !5306
  store i8 %call, i8* %decl_p, align 1, !dbg !5304
  %1 = load i8, i8* %decl_p, align 1, !dbg !5307
  %tobool = icmp ne i8 %1, 0, !dbg !5307
  br i1 %tobool, label %if.then, label %if.end, !dbg !5309

if.then:                                          ; preds = %entry
  %2 = load i8*, i8** %dv.addr, align 8, !dbg !5310
  %call1 = call %union.tree_node* @dv_as_decl(i8* %2), !dbg !5311
  %call2 = call %union.tree_node* @var_debug_decl(%union.tree_node* %call1), !dbg !5312
  %call3 = call i8* @dv_from_decl(%union.tree_node* %call2), !dbg !5313
  store i8* %call3, i8** %dv.addr, align 8, !dbg !5314
  br label %if.end, !dbg !5315

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !5316
  %regs = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %3, i32 0, i32 1, !dbg !5318
  %4 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !5319
  %call4 = call i32 @rhs_regno(%struct.rtx_def* %4), !dbg !5319
  %idxprom = zext i32 %call4 to i64, !dbg !5316
  %arrayidx = getelementptr inbounds [53 x %struct.attrs_def*], [53 x %struct.attrs_def*]* %regs, i64 0, i64 %idxprom, !dbg !5316
  %5 = load %struct.attrs_def*, %struct.attrs_def** %arrayidx, align 8, !dbg !5316
  store %struct.attrs_def* %5, %struct.attrs_def** %node, align 8, !dbg !5320
  br label %for.cond, !dbg !5321

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load %struct.attrs_def*, %struct.attrs_def** %node, align 8, !dbg !5322
  %tobool5 = icmp ne %struct.attrs_def* %6, null, !dbg !5324
  br i1 %tobool5, label %for.body, label %for.end, !dbg !5324

for.body:                                         ; preds = %for.cond
  %7 = load %struct.attrs_def*, %struct.attrs_def** %node, align 8, !dbg !5325
  %dv6 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %7, i32 0, i32 2, !dbg !5327
  %8 = load i8*, i8** %dv6, align 8, !dbg !5327
  %call7 = call i8* @dv_as_opaque(i8* %8), !dbg !5328
  %9 = load i8*, i8** %dv.addr, align 8, !dbg !5329
  %call8 = call i8* @dv_as_opaque(i8* %9), !dbg !5330
  %cmp = icmp eq i8* %call7, %call8, !dbg !5331
  br i1 %cmp, label %land.lhs.true, label %if.end12, !dbg !5332

land.lhs.true:                                    ; preds = %for.body
  %10 = load %struct.attrs_def*, %struct.attrs_def** %node, align 8, !dbg !5333
  %offset9 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %10, i32 0, i32 3, !dbg !5334
  %11 = load i64, i64* %offset9, align 8, !dbg !5334
  %12 = load i64, i64* %offset.addr, align 8, !dbg !5335
  %cmp10 = icmp eq i64 %11, %12, !dbg !5336
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !5337

if.then11:                                        ; preds = %land.lhs.true
  br label %for.end, !dbg !5338

if.end12:                                         ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !5335

for.inc:                                          ; preds = %if.end12
  %13 = load %struct.attrs_def*, %struct.attrs_def** %node, align 8, !dbg !5339
  %next = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %13, i32 0, i32 0, !dbg !5340
  %14 = load %struct.attrs_def*, %struct.attrs_def** %next, align 8, !dbg !5340
  store %struct.attrs_def* %14, %struct.attrs_def** %node, align 8, !dbg !5341
  br label %for.cond, !dbg !5342, !llvm.loop !5343

for.end:                                          ; preds = %if.then11, %for.cond
  %15 = load %struct.attrs_def*, %struct.attrs_def** %node, align 8, !dbg !5345
  %tobool13 = icmp ne %struct.attrs_def* %15, null, !dbg !5345
  br i1 %tobool13, label %if.end19, label %if.then14, !dbg !5347

if.then14:                                        ; preds = %for.end
  %16 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !5348
  %regs15 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %16, i32 0, i32 1, !dbg !5349
  %17 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !5350
  %call16 = call i32 @rhs_regno(%struct.rtx_def* %17), !dbg !5350
  %idxprom17 = zext i32 %call16 to i64, !dbg !5348
  %arrayidx18 = getelementptr inbounds [53 x %struct.attrs_def*], [53 x %struct.attrs_def*]* %regs15, i64 0, i64 %idxprom17, !dbg !5348
  %18 = load i8*, i8** %dv.addr, align 8, !dbg !5351
  %19 = load i64, i64* %offset.addr, align 8, !dbg !5352
  %20 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !5353
  call void @attrs_list_insert(%struct.attrs_def** %arrayidx18, i8* %18, i64 %19, %struct.rtx_def* %20), !dbg !5354
  br label %if.end19, !dbg !5354

if.end19:                                         ; preds = %if.then14, %for.end
  %21 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !5355
  %22 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !5356
  %23 = load i8*, i8** %dv.addr, align 8, !dbg !5357
  %24 = load i64, i64* %offset.addr, align 8, !dbg !5358
  %25 = load i32, i32* %initialized.addr, align 4, !dbg !5359
  %26 = load %struct.rtx_def*, %struct.rtx_def** %set_src.addr, align 8, !dbg !5360
  %27 = load i32, i32* %iopt.addr, align 4, !dbg !5361
  call void @set_variable_part(%struct.dataflow_set_def* %21, %struct.rtx_def* %22, i8* %23, i64 %24, i32 %25, %struct.rtx_def* %26, i32 %27), !dbg !5362
  ret void, !dbg !5363
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @dv_from_value(%struct.rtx_def* %value) #0 !dbg !5364 {
entry:
  %value.addr = alloca %struct.rtx_def*, align 8
  %dv = alloca i8*, align 8
  store %struct.rtx_def* %value, %struct.rtx_def** %value.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %value.addr, metadata !5367, metadata !DIExpression()), !dbg !5368
  call void @llvm.dbg.declare(metadata i8** %dv, metadata !5369, metadata !DIExpression()), !dbg !5370
  %0 = load %struct.rtx_def*, %struct.rtx_def** %value.addr, align 8, !dbg !5371
  %1 = bitcast %struct.rtx_def* %0 to i8*, !dbg !5371
  store i8* %1, i8** %dv, align 8, !dbg !5372
  %2 = load i8*, i8** %dv, align 8, !dbg !5373
  ret i8* %2, !dbg !5374
}

declare dso_local void @cselib_preserve_value(%struct.cselib_val_struct*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def** @VEC_rtx_heap_safe_push(%struct.VEC_rtx_heap** %vec_, %struct.rtx_def* %obj_) #0 !dbg !5375 {
entry:
  %vec_.addr = alloca %struct.VEC_rtx_heap**, align 8
  %obj_.addr = alloca %struct.rtx_def*, align 8
  store %struct.VEC_rtx_heap** %vec_, %struct.VEC_rtx_heap*** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_rtx_heap*** %vec_.addr, metadata !5379, metadata !DIExpression()), !dbg !5380
  store %struct.rtx_def* %obj_, %struct.rtx_def** %obj_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %obj_.addr, metadata !5381, metadata !DIExpression()), !dbg !5380
  %0 = load %struct.VEC_rtx_heap**, %struct.VEC_rtx_heap*** %vec_.addr, align 8, !dbg !5380
  %call = call i32 @VEC_rtx_heap_reserve(%struct.VEC_rtx_heap** %0, i32 1), !dbg !5380
  %1 = load %struct.VEC_rtx_heap**, %struct.VEC_rtx_heap*** %vec_.addr, align 8, !dbg !5380
  %2 = load %struct.VEC_rtx_heap*, %struct.VEC_rtx_heap** %1, align 8, !dbg !5380
  %tobool = icmp ne %struct.VEC_rtx_heap* %2, null, !dbg !5380
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5380

cond.true:                                        ; preds = %entry
  %3 = load %struct.VEC_rtx_heap**, %struct.VEC_rtx_heap*** %vec_.addr, align 8, !dbg !5380
  %4 = load %struct.VEC_rtx_heap*, %struct.VEC_rtx_heap** %3, align 8, !dbg !5380
  %base = getelementptr inbounds %struct.VEC_rtx_heap, %struct.VEC_rtx_heap* %4, i32 0, i32 0, !dbg !5380
  br label %cond.end, !dbg !5380

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5380

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_rtx_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !5380
  %5 = load %struct.rtx_def*, %struct.rtx_def** %obj_.addr, align 8, !dbg !5380
  %call1 = call %struct.rtx_def** @VEC_rtx_base_quick_push(%struct.VEC_rtx_base* %cond, %struct.rtx_def* %5), !dbg !5380
  ret %struct.rtx_def** %call1, !dbg !5380
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_rtx_heap_reserve(%struct.VEC_rtx_heap** %vec_, i32 %alloc_) #0 !dbg !5382 {
entry:
  %vec_.addr = alloca %struct.VEC_rtx_heap**, align 8
  %alloc_.addr = alloca i32, align 4
  %extend = alloca i32, align 4
  store %struct.VEC_rtx_heap** %vec_, %struct.VEC_rtx_heap*** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_rtx_heap*** %vec_.addr, metadata !5385, metadata !DIExpression()), !dbg !5386
  store i32 %alloc_, i32* %alloc_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %alloc_.addr, metadata !5387, metadata !DIExpression()), !dbg !5386
  call void @llvm.dbg.declare(metadata i32* %extend, metadata !5388, metadata !DIExpression()), !dbg !5386
  %0 = load %struct.VEC_rtx_heap**, %struct.VEC_rtx_heap*** %vec_.addr, align 8, !dbg !5386
  %1 = load %struct.VEC_rtx_heap*, %struct.VEC_rtx_heap** %0, align 8, !dbg !5386
  %tobool = icmp ne %struct.VEC_rtx_heap* %1, null, !dbg !5386
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5386

cond.true:                                        ; preds = %entry
  %2 = load %struct.VEC_rtx_heap**, %struct.VEC_rtx_heap*** %vec_.addr, align 8, !dbg !5386
  %3 = load %struct.VEC_rtx_heap*, %struct.VEC_rtx_heap** %2, align 8, !dbg !5386
  %base = getelementptr inbounds %struct.VEC_rtx_heap, %struct.VEC_rtx_heap* %3, i32 0, i32 0, !dbg !5386
  br label %cond.end, !dbg !5386

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !5386

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_rtx_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !5386
  %4 = load i32, i32* %alloc_.addr, align 4, !dbg !5386
  %call = call i32 @VEC_rtx_base_space(%struct.VEC_rtx_base* %cond, i32 %4), !dbg !5386
  %tobool1 = icmp ne i32 %call, 0, !dbg !5386
  %lnot = xor i1 %tobool1, true, !dbg !5386
  %lnot.ext = zext i1 %lnot to i32, !dbg !5386
  store i32 %lnot.ext, i32* %extend, align 4, !dbg !5386
  %5 = load i32, i32* %extend, align 4, !dbg !5389
  %tobool2 = icmp ne i32 %5, 0, !dbg !5389
  br i1 %tobool2, label %if.then, label %if.end, !dbg !5386

if.then:                                          ; preds = %cond.end
  %6 = load %struct.VEC_rtx_heap**, %struct.VEC_rtx_heap*** %vec_.addr, align 8, !dbg !5389
  %7 = load %struct.VEC_rtx_heap*, %struct.VEC_rtx_heap** %6, align 8, !dbg !5389
  %8 = bitcast %struct.VEC_rtx_heap* %7 to i8*, !dbg !5389
  %9 = load i32, i32* %alloc_.addr, align 4, !dbg !5389
  %call3 = call i8* @vec_heap_p_reserve(i8* %8, i32 %9), !dbg !5389
  %10 = bitcast i8* %call3 to %struct.VEC_rtx_heap*, !dbg !5389
  %11 = load %struct.VEC_rtx_heap**, %struct.VEC_rtx_heap*** %vec_.addr, align 8, !dbg !5389
  store %struct.VEC_rtx_heap* %10, %struct.VEC_rtx_heap** %11, align 8, !dbg !5389
  br label %if.end, !dbg !5389

if.end:                                           ; preds = %if.then, %cond.end
  %12 = load i32, i32* %extend, align 4, !dbg !5386
  ret i32 %12, !dbg !5386
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def** @VEC_rtx_base_quick_push(%struct.VEC_rtx_base* %vec_, %struct.rtx_def* %obj_) #0 !dbg !5391 {
entry:
  %vec_.addr = alloca %struct.VEC_rtx_base*, align 8
  %obj_.addr = alloca %struct.rtx_def*, align 8
  %slot_ = alloca %struct.rtx_def**, align 8
  store %struct.VEC_rtx_base* %vec_, %struct.VEC_rtx_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_rtx_base** %vec_.addr, metadata !5395, metadata !DIExpression()), !dbg !5396
  store %struct.rtx_def* %obj_, %struct.rtx_def** %obj_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %obj_.addr, metadata !5397, metadata !DIExpression()), !dbg !5396
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %slot_, metadata !5398, metadata !DIExpression()), !dbg !5396
  %0 = load %struct.VEC_rtx_base*, %struct.VEC_rtx_base** %vec_.addr, align 8, !dbg !5396
  %num = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %0, i32 0, i32 0, !dbg !5396
  %1 = load i32, i32* %num, align 8, !dbg !5396
  %2 = load %struct.VEC_rtx_base*, %struct.VEC_rtx_base** %vec_.addr, align 8, !dbg !5396
  %alloc = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %2, i32 0, i32 1, !dbg !5396
  %3 = load i32, i32* %alloc, align 4, !dbg !5396
  %cmp = icmp ult i32 %1, %3, !dbg !5396
  %conv = zext i1 %cmp to i32, !dbg !5396
  %4 = load %struct.VEC_rtx_base*, %struct.VEC_rtx_base** %vec_.addr, align 8, !dbg !5396
  %vec = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %4, i32 0, i32 2, !dbg !5396
  %5 = load %struct.VEC_rtx_base*, %struct.VEC_rtx_base** %vec_.addr, align 8, !dbg !5396
  %num1 = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %5, i32 0, i32 0, !dbg !5396
  %6 = load i32, i32* %num1, align 8, !dbg !5396
  %inc = add i32 %6, 1, !dbg !5396
  store i32 %inc, i32* %num1, align 8, !dbg !5396
  %idxprom = zext i32 %6 to i64, !dbg !5396
  %arrayidx = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %vec, i64 0, i64 %idxprom, !dbg !5396
  store %struct.rtx_def** %arrayidx, %struct.rtx_def*** %slot_, align 8, !dbg !5396
  %7 = load %struct.rtx_def*, %struct.rtx_def** %obj_.addr, align 8, !dbg !5396
  %8 = load %struct.rtx_def**, %struct.rtx_def*** %slot_, align 8, !dbg !5396
  store %struct.rtx_def* %7, %struct.rtx_def** %8, align 8, !dbg !5396
  %9 = load %struct.rtx_def**, %struct.rtx_def*** %slot_, align 8, !dbg !5396
  ret %struct.rtx_def** %9, !dbg !5396
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_rtx_base_space(%struct.VEC_rtx_base* %vec_, i32 %alloc_) #0 !dbg !5399 {
entry:
  %vec_.addr = alloca %struct.VEC_rtx_base*, align 8
  %alloc_.addr = alloca i32, align 4
  store %struct.VEC_rtx_base* %vec_, %struct.VEC_rtx_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_rtx_base** %vec_.addr, metadata !5402, metadata !DIExpression()), !dbg !5403
  store i32 %alloc_, i32* %alloc_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %alloc_.addr, metadata !5404, metadata !DIExpression()), !dbg !5403
  %0 = load i32, i32* %alloc_.addr, align 4, !dbg !5403
  %cmp = icmp sge i32 %0, 0, !dbg !5403
  %conv = zext i1 %cmp to i32, !dbg !5403
  %1 = load %struct.VEC_rtx_base*, %struct.VEC_rtx_base** %vec_.addr, align 8, !dbg !5403
  %tobool = icmp ne %struct.VEC_rtx_base* %1, null, !dbg !5403
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5403

cond.true:                                        ; preds = %entry
  %2 = load %struct.VEC_rtx_base*, %struct.VEC_rtx_base** %vec_.addr, align 8, !dbg !5403
  %alloc = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %2, i32 0, i32 1, !dbg !5403
  %3 = load i32, i32* %alloc, align 4, !dbg !5403
  %4 = load %struct.VEC_rtx_base*, %struct.VEC_rtx_base** %vec_.addr, align 8, !dbg !5403
  %num = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %4, i32 0, i32 0, !dbg !5403
  %5 = load i32, i32* %num, align 8, !dbg !5403
  %sub = sub i32 %3, %5, !dbg !5403
  %6 = load i32, i32* %alloc_.addr, align 4, !dbg !5403
  %cmp1 = icmp uge i32 %sub, %6, !dbg !5403
  %conv2 = zext i1 %cmp1 to i32, !dbg !5403
  br label %cond.end, !dbg !5403

cond.false:                                       ; preds = %entry
  %7 = load i32, i32* %alloc_.addr, align 4, !dbg !5403
  %tobool3 = icmp ne i32 %7, 0, !dbg !5403
  %lnot = xor i1 %tobool3, true, !dbg !5403
  %lnot.ext = zext i1 %lnot to i32, !dbg !5403
  br label %cond.end, !dbg !5403

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv2, %cond.true ], [ %lnot.ext, %cond.false ], !dbg !5403
  ret i32 %cond, !dbg !5403
}

declare dso_local i8* @vec_heap_p_reserve(i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i8* @dv_from_decl(%union.tree_node* %decl) #0 !dbg !5405 {
entry:
  %decl.addr = alloca %union.tree_node*, align 8
  %dv = alloca i8*, align 8
  store %union.tree_node* %decl, %union.tree_node** %decl.addr, align 8
  call void @llvm.dbg.declare(metadata %union.tree_node** %decl.addr, metadata !5408, metadata !DIExpression()), !dbg !5409
  call void @llvm.dbg.declare(metadata i8** %dv, metadata !5410, metadata !DIExpression()), !dbg !5411
  %0 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8, !dbg !5412
  %1 = bitcast %union.tree_node* %0 to i8*, !dbg !5412
  store i8* %1, i8** %dv, align 8, !dbg !5413
  %2 = load i8*, i8** %dv, align 8, !dbg !5414
  ret i8* %2, !dbg !5415
}

; Function Attrs: noinline nounwind uwtable
define internal %union.tree_node* @var_debug_decl(%union.tree_node* %decl) #0 !dbg !5416 {
entry:
  %decl.addr = alloca %union.tree_node*, align 8
  store %union.tree_node* %decl, %union.tree_node** %decl.addr, align 8
  call void @llvm.dbg.declare(metadata %union.tree_node** %decl.addr, metadata !5419, metadata !DIExpression()), !dbg !5420
  %0 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8, !dbg !5421
  %tobool = icmp ne %union.tree_node* %0, null, !dbg !5421
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !5423

land.lhs.true:                                    ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8, !dbg !5424
  %base = bitcast %union.tree_node* %1 to %struct.tree_base*, !dbg !5424
  %2 = bitcast %struct.tree_base* %base to i64*, !dbg !5424
  %bf.load = load i64, i64* %2, align 8, !dbg !5424
  %bf.clear = and i64 %bf.load, 65535, !dbg !5424
  %bf.cast = trunc i64 %bf.clear to i32, !dbg !5424
  %idxprom = sext i32 %bf.cast to i64, !dbg !5424
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %idxprom, !dbg !5424
  %3 = load i32, i32* %arrayidx, align 4, !dbg !5424
  %cmp = icmp eq i32 %3, 3, !dbg !5424
  br i1 %cmp, label %land.lhs.true1, label %if.end, !dbg !5425

land.lhs.true1:                                   ; preds = %land.lhs.true
  %4 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8, !dbg !5426
  %decl_common = bitcast %union.tree_node* %4 to %struct.tree_decl_common*, !dbg !5426
  %debug_expr_is_from = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %decl_common, i32 0, i32 2, !dbg !5426
  %5 = bitcast i40* %debug_expr_is_from to i64*, !dbg !5426
  %bf.load2 = load i64, i64* %5, align 8, !dbg !5426
  %bf.lshr = lshr i64 %bf.load2, 14, !dbg !5426
  %bf.clear3 = and i64 %bf.lshr, 1, !dbg !5426
  %bf.cast4 = trunc i64 %bf.clear3 to i32, !dbg !5426
  %tobool5 = icmp ne i32 %bf.cast4, 0, !dbg !5426
  br i1 %tobool5, label %land.lhs.true6, label %if.end, !dbg !5427

land.lhs.true6:                                   ; preds = %land.lhs.true1
  %6 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8, !dbg !5428
  %call = call %union.tree_node* @decl_debug_expr_lookup(%union.tree_node* %6), !dbg !5428
  %tobool7 = icmp ne %union.tree_node* %call, null, !dbg !5428
  br i1 %tobool7, label %land.lhs.true8, label %if.end, !dbg !5429

land.lhs.true8:                                   ; preds = %land.lhs.true6
  %7 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8, !dbg !5430
  %call9 = call %union.tree_node* @decl_debug_expr_lookup(%union.tree_node* %7), !dbg !5430
  %base10 = bitcast %union.tree_node* %call9 to %struct.tree_base*, !dbg !5430
  %8 = bitcast %struct.tree_base* %base10 to i64*, !dbg !5430
  %bf.load11 = load i64, i64* %8, align 8, !dbg !5430
  %bf.clear12 = and i64 %bf.load11, 65535, !dbg !5430
  %bf.cast13 = trunc i64 %bf.clear12 to i32, !dbg !5430
  %idxprom14 = sext i32 %bf.cast13 to i64, !dbg !5430
  %arrayidx15 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %idxprom14, !dbg !5430
  %9 = load i32, i32* %arrayidx15, align 4, !dbg !5430
  %cmp16 = icmp eq i32 %9, 3, !dbg !5430
  br i1 %cmp16, label %if.then, label %if.end, !dbg !5431

if.then:                                          ; preds = %land.lhs.true8
  %10 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8, !dbg !5432
  %call17 = call %union.tree_node* @decl_debug_expr_lookup(%union.tree_node* %10), !dbg !5432
  store %union.tree_node* %call17, %union.tree_node** %decl.addr, align 8, !dbg !5433
  br label %if.end, !dbg !5434

if.end:                                           ; preds = %if.then, %land.lhs.true8, %land.lhs.true6, %land.lhs.true1, %land.lhs.true, %entry
  %11 = load %union.tree_node*, %union.tree_node** %decl.addr, align 8, !dbg !5435
  ret %union.tree_node* %11, !dbg !5436
}

; Function Attrs: noinline nounwind uwtable
define internal void @attrs_list_insert(%struct.attrs_def** %listp, i8* %dv, i64 %offset, %struct.rtx_def* %loc) #0 !dbg !5437 {
entry:
  %listp.addr = alloca %struct.attrs_def**, align 8
  %dv.addr = alloca i8*, align 8
  %offset.addr = alloca i64, align 8
  %loc.addr = alloca %struct.rtx_def*, align 8
  %list = alloca %struct.attrs_def*, align 8
  store %struct.attrs_def** %listp, %struct.attrs_def*** %listp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.attrs_def*** %listp.addr, metadata !5440, metadata !DIExpression()), !dbg !5441
  store i8* %dv, i8** %dv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dv.addr, metadata !5442, metadata !DIExpression()), !dbg !5443
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !5444, metadata !DIExpression()), !dbg !5445
  store %struct.rtx_def* %loc, %struct.rtx_def** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %loc.addr, metadata !5446, metadata !DIExpression()), !dbg !5447
  call void @llvm.dbg.declare(metadata %struct.attrs_def** %list, metadata !5448, metadata !DIExpression()), !dbg !5449
  %0 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @attrs_pool, align 8, !dbg !5450
  %call = call i8* @pool_alloc(%struct.alloc_pool_def* %0), !dbg !5451
  %1 = bitcast i8* %call to %struct.attrs_def*, !dbg !5452
  store %struct.attrs_def* %1, %struct.attrs_def** %list, align 8, !dbg !5453
  %2 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !5454
  %3 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !5455
  %loc1 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %3, i32 0, i32 1, !dbg !5456
  store %struct.rtx_def* %2, %struct.rtx_def** %loc1, align 8, !dbg !5457
  %4 = load i8*, i8** %dv.addr, align 8, !dbg !5458
  %5 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !5459
  %dv2 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %5, i32 0, i32 2, !dbg !5460
  store i8* %4, i8** %dv2, align 8, !dbg !5461
  %6 = load i64, i64* %offset.addr, align 8, !dbg !5462
  %7 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !5463
  %offset3 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %7, i32 0, i32 3, !dbg !5464
  store i64 %6, i64* %offset3, align 8, !dbg !5465
  %8 = load %struct.attrs_def**, %struct.attrs_def*** %listp.addr, align 8, !dbg !5466
  %9 = load %struct.attrs_def*, %struct.attrs_def** %8, align 8, !dbg !5467
  %10 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !5468
  %next = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %10, i32 0, i32 0, !dbg !5469
  store %struct.attrs_def* %9, %struct.attrs_def** %next, align 8, !dbg !5470
  %11 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !5471
  %12 = load %struct.attrs_def**, %struct.attrs_def*** %listp.addr, align 8, !dbg !5472
  store %struct.attrs_def* %11, %struct.attrs_def** %12, align 8, !dbg !5473
  ret void, !dbg !5474
}

; Function Attrs: noinline nounwind uwtable
define internal void @set_variable_part(%struct.dataflow_set_def* %set, %struct.rtx_def* %loc, i8* %dv, i64 %offset, i32 %initialized, %struct.rtx_def* %set_src, i32 %iopt) #0 !dbg !5475 {
entry:
  %set.addr = alloca %struct.dataflow_set_def*, align 8
  %loc.addr = alloca %struct.rtx_def*, align 8
  %dv.addr = alloca i8*, align 8
  %offset.addr = alloca i64, align 8
  %initialized.addr = alloca i32, align 4
  %set_src.addr = alloca %struct.rtx_def*, align 8
  %iopt.addr = alloca i32, align 4
  %slot = alloca i8**, align 8
  store %struct.dataflow_set_def* %set, %struct.dataflow_set_def** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %set.addr, metadata !5478, metadata !DIExpression()), !dbg !5479
  store %struct.rtx_def* %loc, %struct.rtx_def** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %loc.addr, metadata !5480, metadata !DIExpression()), !dbg !5481
  store i8* %dv, i8** %dv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dv.addr, metadata !5482, metadata !DIExpression()), !dbg !5483
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !5484, metadata !DIExpression()), !dbg !5485
  store i32 %initialized, i32* %initialized.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %initialized.addr, metadata !5486, metadata !DIExpression()), !dbg !5487
  store %struct.rtx_def* %set_src, %struct.rtx_def** %set_src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %set_src.addr, metadata !5488, metadata !DIExpression()), !dbg !5489
  store i32 %iopt, i32* %iopt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iopt.addr, metadata !5490, metadata !DIExpression()), !dbg !5491
  call void @llvm.dbg.declare(metadata i8*** %slot, metadata !5492, metadata !DIExpression()), !dbg !5493
  %0 = load i32, i32* %iopt.addr, align 4, !dbg !5494
  %cmp = icmp eq i32 %0, 0, !dbg !5496
  br i1 %cmp, label %if.then, label %if.else, !dbg !5497

if.then:                                          ; preds = %entry
  %1 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !5498
  %vars = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %1, i32 0, i32 2, !dbg !5499
  %2 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars, align 8, !dbg !5499
  %3 = load i8*, i8** %dv.addr, align 8, !dbg !5500
  %call = call i8** @shared_hash_find_slot_noinsert(%struct.shared_hash_def* %2, i8* %3), !dbg !5501
  store i8** %call, i8*** %slot, align 8, !dbg !5502
  br label %if.end6, !dbg !5503

if.else:                                          ; preds = %entry
  %4 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !5504
  %vars1 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %4, i32 0, i32 2, !dbg !5506
  %5 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars1, align 8, !dbg !5506
  %6 = load i8*, i8** %dv.addr, align 8, !dbg !5507
  %call2 = call i8** @shared_hash_find_slot(%struct.shared_hash_def* %5, i8* %6), !dbg !5508
  store i8** %call2, i8*** %slot, align 8, !dbg !5509
  %7 = load i8**, i8*** %slot, align 8, !dbg !5510
  %tobool = icmp ne i8** %7, null, !dbg !5510
  br i1 %tobool, label %if.end, label %if.then3, !dbg !5512

if.then3:                                         ; preds = %if.else
  %8 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !5513
  %vars4 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %8, i32 0, i32 2, !dbg !5514
  %9 = load i8*, i8** %dv.addr, align 8, !dbg !5515
  %10 = load i32, i32* %iopt.addr, align 4, !dbg !5516
  %call5 = call i8** @shared_hash_find_slot_unshare(%struct.shared_hash_def** %vars4, i8* %9, i32 %10), !dbg !5517
  store i8** %call5, i8*** %slot, align 8, !dbg !5518
  br label %if.end, !dbg !5519

if.end:                                           ; preds = %if.then3, %if.else
  br label %if.end6

if.end6:                                          ; preds = %if.end, %if.then
  %11 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !5520
  %12 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !5521
  %13 = load i8**, i8*** %slot, align 8, !dbg !5522
  %14 = load i8*, i8** %dv.addr, align 8, !dbg !5523
  %15 = load i64, i64* %offset.addr, align 8, !dbg !5524
  %16 = load i32, i32* %initialized.addr, align 4, !dbg !5525
  %17 = load %struct.rtx_def*, %struct.rtx_def** %set_src.addr, align 8, !dbg !5526
  %call7 = call i8** @set_slot_part(%struct.dataflow_set_def* %11, %struct.rtx_def* %12, i8** %13, i8* %14, i64 %15, i32 %16, %struct.rtx_def* %17), !dbg !5527
  store i8** %call7, i8*** %slot, align 8, !dbg !5528
  ret void, !dbg !5529
}

declare dso_local %union.tree_node* @decl_debug_expr_lookup(%union.tree_node*) #2

; Function Attrs: noinline nounwind uwtable
define internal i8** @shared_hash_find_slot_noinsert(%struct.shared_hash_def* %vars, i8* %dv) #0 !dbg !5530 {
entry:
  %vars.addr = alloca %struct.shared_hash_def*, align 8
  %dv.addr = alloca i8*, align 8
  store %struct.shared_hash_def* %vars, %struct.shared_hash_def** %vars.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.shared_hash_def** %vars.addr, metadata !5533, metadata !DIExpression()), !dbg !5534
  store i8* %dv, i8** %dv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dv.addr, metadata !5535, metadata !DIExpression()), !dbg !5536
  %0 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars.addr, align 8, !dbg !5537
  %1 = load i8*, i8** %dv.addr, align 8, !dbg !5538
  %2 = load i8*, i8** %dv.addr, align 8, !dbg !5539
  %call = call i32 @dv_htab_hash(i8* %2), !dbg !5540
  %call1 = call i8** @shared_hash_find_slot_noinsert_1(%struct.shared_hash_def* %0, i8* %1, i32 %call), !dbg !5541
  ret i8** %call1, !dbg !5542
}

; Function Attrs: noinline nounwind uwtable
define internal i8** @shared_hash_find_slot(%struct.shared_hash_def* %vars, i8* %dv) #0 !dbg !5543 {
entry:
  %vars.addr = alloca %struct.shared_hash_def*, align 8
  %dv.addr = alloca i8*, align 8
  store %struct.shared_hash_def* %vars, %struct.shared_hash_def** %vars.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.shared_hash_def** %vars.addr, metadata !5544, metadata !DIExpression()), !dbg !5545
  store i8* %dv, i8** %dv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dv.addr, metadata !5546, metadata !DIExpression()), !dbg !5547
  %0 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars.addr, align 8, !dbg !5548
  %1 = load i8*, i8** %dv.addr, align 8, !dbg !5549
  %2 = load i8*, i8** %dv.addr, align 8, !dbg !5550
  %call = call i32 @dv_htab_hash(i8* %2), !dbg !5551
  %call1 = call i8** @shared_hash_find_slot_1(%struct.shared_hash_def* %0, i8* %1, i32 %call), !dbg !5552
  ret i8** %call1, !dbg !5553
}

; Function Attrs: noinline nounwind uwtable
define internal i8** @shared_hash_find_slot_unshare(%struct.shared_hash_def** %pvars, i8* %dv, i32 %ins) #0 !dbg !5554 {
entry:
  %pvars.addr = alloca %struct.shared_hash_def**, align 8
  %dv.addr = alloca i8*, align 8
  %ins.addr = alloca i32, align 4
  store %struct.shared_hash_def** %pvars, %struct.shared_hash_def*** %pvars.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.shared_hash_def*** %pvars.addr, metadata !5558, metadata !DIExpression()), !dbg !5559
  store i8* %dv, i8** %dv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dv.addr, metadata !5560, metadata !DIExpression()), !dbg !5561
  store i32 %ins, i32* %ins.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ins.addr, metadata !5562, metadata !DIExpression()), !dbg !5563
  %0 = load %struct.shared_hash_def**, %struct.shared_hash_def*** %pvars.addr, align 8, !dbg !5564
  %1 = load i8*, i8** %dv.addr, align 8, !dbg !5565
  %2 = load i8*, i8** %dv.addr, align 8, !dbg !5566
  %call = call i32 @dv_htab_hash(i8* %2), !dbg !5567
  %3 = load i32, i32* %ins.addr, align 4, !dbg !5568
  %call1 = call i8** @shared_hash_find_slot_unshare_1(%struct.shared_hash_def** %0, i8* %1, i32 %call, i32 %3), !dbg !5569
  ret i8** %call1, !dbg !5570
}

; Function Attrs: noinline nounwind uwtable
define internal i8** @set_slot_part(%struct.dataflow_set_def* %set, %struct.rtx_def* %loc, i8** %slot, i8* %dv, i64 %offset, i32 %initialized, %struct.rtx_def* %set_src) #0 !dbg !5571 {
entry:
  %retval = alloca i8**, align 8
  %set.addr = alloca %struct.dataflow_set_def*, align 8
  %loc.addr = alloca %struct.rtx_def*, align 8
  %slot.addr = alloca i8**, align 8
  %dv.addr = alloca i8*, align 8
  %offset.addr = alloca i64, align 8
  %initialized.addr = alloca i32, align 4
  %set_src.addr = alloca %struct.rtx_def*, align 8
  %pos = alloca i32, align 4
  %node = alloca %struct.location_chain_def*, align 8
  %next = alloca %struct.location_chain_def*, align 8
  %nextp = alloca %struct.location_chain_def**, align 8
  %var = alloca %struct.variable_def*, align 8
  %onepart = alloca i8, align 1
  %r = alloca i32, align 4
  %c = alloca i32, align 4
  %inspos = alloca i32, align 4
  store %struct.dataflow_set_def* %set, %struct.dataflow_set_def** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %set.addr, metadata !5574, metadata !DIExpression()), !dbg !5575
  store %struct.rtx_def* %loc, %struct.rtx_def** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %loc.addr, metadata !5576, metadata !DIExpression()), !dbg !5577
  store i8** %slot, i8*** %slot.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %slot.addr, metadata !5578, metadata !DIExpression()), !dbg !5579
  store i8* %dv, i8** %dv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dv.addr, metadata !5580, metadata !DIExpression()), !dbg !5581
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !5582, metadata !DIExpression()), !dbg !5583
  store i32 %initialized, i32* %initialized.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %initialized.addr, metadata !5584, metadata !DIExpression()), !dbg !5585
  store %struct.rtx_def* %set_src, %struct.rtx_def** %set_src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %set_src.addr, metadata !5586, metadata !DIExpression()), !dbg !5587
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !5588, metadata !DIExpression()), !dbg !5589
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %node, metadata !5590, metadata !DIExpression()), !dbg !5591
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %next, metadata !5592, metadata !DIExpression()), !dbg !5593
  call void @llvm.dbg.declare(metadata %struct.location_chain_def*** %nextp, metadata !5594, metadata !DIExpression()), !dbg !5596
  call void @llvm.dbg.declare(metadata %struct.variable_def** %var, metadata !5597, metadata !DIExpression()), !dbg !5598
  call void @llvm.dbg.declare(metadata i8* %onepart, metadata !5599, metadata !DIExpression()), !dbg !5600
  %0 = load i8*, i8** %dv.addr, align 8, !dbg !5601
  %call = call zeroext i8 @dv_onepart_p(i8* %0), !dbg !5602
  store i8 %call, i8* %onepart, align 1, !dbg !5600
  %1 = load i64, i64* %offset.addr, align 8, !dbg !5603
  %cmp = icmp eq i64 %1, 0, !dbg !5603
  br i1 %cmp, label %cond.false, label %lor.lhs.false, !dbg !5603

lor.lhs.false:                                    ; preds = %entry
  %2 = load i8, i8* %onepart, align 1, !dbg !5603
  %tobool = icmp ne i8 %2, 0, !dbg !5603
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5603

cond.true:                                        ; preds = %lor.lhs.false
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 6374, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !5603
  br label %cond.end, !dbg !5603

cond.false:                                       ; preds = %lor.lhs.false, %entry
  br label %cond.end, !dbg !5603

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !5603
  %3 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !5604
  %4 = load i8*, i8** %dv.addr, align 8, !dbg !5604
  %call1 = call i8* @dv_as_opaque(i8* %4), !dbg !5604
  %5 = bitcast i8* %call1 to %struct.rtx_def*, !dbg !5604
  %cmp2 = icmp ne %struct.rtx_def* %3, %5, !dbg !5604
  br i1 %cmp2, label %cond.false4, label %cond.true3, !dbg !5604

cond.true3:                                       ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 6375, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !5604
  br label %cond.end5, !dbg !5604

cond.false4:                                      ; preds = %cond.end
  br label %cond.end5, !dbg !5604

cond.end5:                                        ; preds = %cond.false4, %cond.true3
  %cond6 = phi i32 [ 0, %cond.true3 ], [ 0, %cond.false4 ], !dbg !5604
  %6 = load i8**, i8*** %slot.addr, align 8, !dbg !5605
  %7 = load i8*, i8** %6, align 8, !dbg !5606
  %8 = bitcast i8* %7 to %struct.variable_def*, !dbg !5607
  store %struct.variable_def* %8, %struct.variable_def** %var, align 8, !dbg !5608
  %9 = load i32, i32* @flag_var_tracking_uninit, align 4, !dbg !5609
  %tobool7 = icmp ne i32 %9, 0, !dbg !5609
  br i1 %tobool7, label %if.end, label %if.then, !dbg !5611

if.then:                                          ; preds = %cond.end5
  store i32 2, i32* %initialized.addr, align 4, !dbg !5612
  br label %if.end, !dbg !5613

if.end:                                           ; preds = %if.then, %cond.end5
  %10 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !5614
  %tobool8 = icmp ne %struct.variable_def* %10, null, !dbg !5614
  br i1 %tobool8, label %if.else, label %if.then9, !dbg !5616

if.then9:                                         ; preds = %if.end
  %11 = load i8*, i8** %dv.addr, align 8, !dbg !5617
  %call10 = call %struct.alloc_pool_def* @dv_pool(i8* %11), !dbg !5619
  %call11 = call i8* @pool_alloc(%struct.alloc_pool_def* %call10), !dbg !5620
  %12 = bitcast i8* %call11 to %struct.variable_def*, !dbg !5621
  store %struct.variable_def* %12, %struct.variable_def** %var, align 8, !dbg !5622
  %13 = load i8*, i8** %dv.addr, align 8, !dbg !5623
  %14 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !5624
  %dv12 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %14, i32 0, i32 0, !dbg !5625
  store i8* %13, i8** %dv12, align 8, !dbg !5626
  %15 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !5627
  %refcount = getelementptr inbounds %struct.variable_def, %struct.variable_def* %15, i32 0, i32 1, !dbg !5628
  store i32 1, i32* %refcount, align 8, !dbg !5629
  %16 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !5630
  %n_var_parts = getelementptr inbounds %struct.variable_def, %struct.variable_def* %16, i32 0, i32 2, !dbg !5631
  store i8 1, i8* %n_var_parts, align 4, !dbg !5632
  %17 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !5633
  %cur_loc_changed = getelementptr inbounds %struct.variable_def, %struct.variable_def* %17, i32 0, i32 3, !dbg !5634
  store i8 0, i8* %cur_loc_changed, align 1, !dbg !5635
  %18 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !5636
  %in_changed_variables = getelementptr inbounds %struct.variable_def, %struct.variable_def* %18, i32 0, i32 4, !dbg !5637
  store i8 0, i8* %in_changed_variables, align 2, !dbg !5638
  %19 = load i64, i64* %offset.addr, align 8, !dbg !5639
  %20 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !5640
  %var_part = getelementptr inbounds %struct.variable_def, %struct.variable_def* %20, i32 0, i32 5, !dbg !5641
  %arrayidx = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part, i64 0, i64 0, !dbg !5640
  %offset13 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx, i32 0, i32 2, !dbg !5642
  store i64 %19, i64* %offset13, align 8, !dbg !5643
  %21 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !5644
  %var_part14 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %21, i32 0, i32 5, !dbg !5645
  %arrayidx15 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part14, i64 0, i64 0, !dbg !5644
  %loc_chain = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx15, i32 0, i32 0, !dbg !5646
  store %struct.location_chain_def* null, %struct.location_chain_def** %loc_chain, align 8, !dbg !5647
  %22 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !5648
  %var_part16 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %22, i32 0, i32 5, !dbg !5649
  %arrayidx17 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part16, i64 0, i64 0, !dbg !5648
  %cur_loc = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx17, i32 0, i32 1, !dbg !5650
  store %struct.rtx_def* null, %struct.rtx_def** %cur_loc, align 8, !dbg !5651
  %23 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !5652
  %24 = bitcast %struct.variable_def* %23 to i8*, !dbg !5652
  %25 = load i8**, i8*** %slot.addr, align 8, !dbg !5653
  store i8* %24, i8** %25, align 8, !dbg !5654
  store i32 0, i32* %pos, align 4, !dbg !5655
  %26 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !5656
  %var_part18 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %26, i32 0, i32 5, !dbg !5657
  %arrayidx19 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part18, i64 0, i64 0, !dbg !5656
  %loc_chain20 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx19, i32 0, i32 0, !dbg !5658
  store %struct.location_chain_def** %loc_chain20, %struct.location_chain_def*** %nextp, align 8, !dbg !5659
  br label %if.end366, !dbg !5660

if.else:                                          ; preds = %if.end
  %27 = load i8, i8* %onepart, align 1, !dbg !5661
  %tobool21 = icmp ne i8 %27, 0, !dbg !5661
  br i1 %tobool21, label %if.then22, label %if.else192, !dbg !5663

if.then22:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %r, metadata !5664, metadata !DIExpression()), !dbg !5666
  store i32 -1, i32* %r, align 4, !dbg !5666
  call void @llvm.dbg.declare(metadata i32* %c, metadata !5667, metadata !DIExpression()), !dbg !5668
  store i32 0, i32* %c, align 4, !dbg !5668
  %28 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !5669
  %dv23 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %28, i32 0, i32 0, !dbg !5669
  %29 = load i8*, i8** %dv23, align 8, !dbg !5669
  %call24 = call i8* @dv_as_opaque(i8* %29), !dbg !5669
  %30 = load i8*, i8** %dv.addr, align 8, !dbg !5669
  %call25 = call i8* @dv_as_opaque(i8* %30), !dbg !5669
  %cmp26 = icmp eq i8* %call24, %call25, !dbg !5669
  br i1 %cmp26, label %cond.false28, label %cond.true27, !dbg !5669

cond.true27:                                      ; preds = %if.then22
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 6402, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !5669
  br label %cond.end29, !dbg !5669

cond.false28:                                     ; preds = %if.then22
  br label %cond.end29, !dbg !5669

cond.end29:                                       ; preds = %cond.false28, %cond.true27
  %cond30 = phi i32 [ 0, %cond.true27 ], [ 0, %cond.false28 ], !dbg !5669
  store i32 0, i32* %pos, align 4, !dbg !5670
  %31 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !5671
  %32 = bitcast %struct.rtx_def* %31 to i32*, !dbg !5671
  %bf.load = load i32, i32* %32, align 8, !dbg !5671
  %bf.clear = and i32 %bf.load, 65535, !dbg !5671
  %cmp31 = icmp eq i32 %bf.clear, 1, !dbg !5673
  br i1 %cmp31, label %if.then32, label %if.else68, !dbg !5674

if.then32:                                        ; preds = %cond.end29
  %33 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !5675
  %var_part33 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %33, i32 0, i32 5, !dbg !5678
  %arrayidx34 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part33, i64 0, i64 0, !dbg !5675
  %loc_chain35 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx34, i32 0, i32 0, !dbg !5679
  store %struct.location_chain_def** %loc_chain35, %struct.location_chain_def*** %nextp, align 8, !dbg !5680
  br label %for.cond, !dbg !5681

for.cond:                                         ; preds = %for.inc, %if.then32
  %34 = load %struct.location_chain_def**, %struct.location_chain_def*** %nextp, align 8, !dbg !5682
  %35 = load %struct.location_chain_def*, %struct.location_chain_def** %34, align 8, !dbg !5684
  store %struct.location_chain_def* %35, %struct.location_chain_def** %node, align 8, !dbg !5685
  %tobool36 = icmp ne %struct.location_chain_def* %35, null, !dbg !5686
  br i1 %tobool36, label %for.body, label %for.end, !dbg !5686

for.body:                                         ; preds = %for.cond
  %36 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !5687
  %loc37 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %36, i32 0, i32 1, !dbg !5687
  %37 = load %struct.rtx_def*, %struct.rtx_def** %loc37, align 8, !dbg !5687
  %38 = bitcast %struct.rtx_def* %37 to i32*, !dbg !5687
  %bf.load38 = load i32, i32* %38, align 8, !dbg !5687
  %bf.clear39 = and i32 %bf.load38, 65535, !dbg !5687
  %cmp40 = icmp eq i32 %bf.clear39, 1, !dbg !5689
  br i1 %cmp40, label %if.then41, label %if.else52, !dbg !5690

if.then41:                                        ; preds = %for.body
  %39 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !5691
  %loc42 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %39, i32 0, i32 1, !dbg !5694
  %40 = load %struct.rtx_def*, %struct.rtx_def** %loc42, align 8, !dbg !5694
  %41 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !5695
  %cmp43 = icmp eq %struct.rtx_def* %40, %41, !dbg !5696
  br i1 %cmp43, label %if.then44, label %if.end45, !dbg !5697

if.then44:                                        ; preds = %if.then41
  store i32 0, i32* %r, align 4, !dbg !5698
  br label %for.end, !dbg !5700

if.end45:                                         ; preds = %if.then41
  %42 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !5701
  %loc46 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %42, i32 0, i32 1, !dbg !5703
  %43 = load %struct.rtx_def*, %struct.rtx_def** %loc46, align 8, !dbg !5703
  %44 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !5704
  %call47 = call zeroext i8 @canon_value_cmp(%struct.rtx_def* %43, %struct.rtx_def* %44), !dbg !5705
  %tobool48 = icmp ne i8 %call47, 0, !dbg !5705
  br i1 %tobool48, label %if.then49, label %if.else50, !dbg !5706

if.then49:                                        ; preds = %if.end45
  %45 = load i32, i32* %c, align 4, !dbg !5707
  %inc = add nsw i32 %45, 1, !dbg !5707
  store i32 %inc, i32* %c, align 4, !dbg !5707
  br label %if.end51, !dbg !5708

if.else50:                                        ; preds = %if.end45
  store i32 1, i32* %r, align 4, !dbg !5709
  br label %for.end, !dbg !5711

if.end51:                                         ; preds = %if.then49
  br label %if.end66, !dbg !5712

if.else52:                                        ; preds = %for.body
  %46 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !5713
  %loc53 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %46, i32 0, i32 1, !dbg !5713
  %47 = load %struct.rtx_def*, %struct.rtx_def** %loc53, align 8, !dbg !5713
  %48 = bitcast %struct.rtx_def* %47 to i32*, !dbg !5713
  %bf.load54 = load i32, i32* %48, align 8, !dbg !5713
  %bf.clear55 = and i32 %bf.load54, 65535, !dbg !5713
  %cmp56 = icmp eq i32 %bf.clear55, 37, !dbg !5713
  br i1 %cmp56, label %if.then62, label %lor.lhs.false57, !dbg !5715

lor.lhs.false57:                                  ; preds = %if.else52
  %49 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !5716
  %loc58 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %49, i32 0, i32 1, !dbg !5716
  %50 = load %struct.rtx_def*, %struct.rtx_def** %loc58, align 8, !dbg !5716
  %51 = bitcast %struct.rtx_def* %50 to i32*, !dbg !5716
  %bf.load59 = load i32, i32* %51, align 8, !dbg !5716
  %bf.clear60 = and i32 %bf.load59, 65535, !dbg !5716
  %cmp61 = icmp eq i32 %bf.clear60, 43, !dbg !5716
  br i1 %cmp61, label %if.then62, label %if.else64, !dbg !5717

if.then62:                                        ; preds = %lor.lhs.false57, %if.else52
  %52 = load i32, i32* %c, align 4, !dbg !5718
  %inc63 = add nsw i32 %52, 1, !dbg !5718
  store i32 %inc63, i32* %c, align 4, !dbg !5718
  br label %if.end65, !dbg !5719

if.else64:                                        ; preds = %lor.lhs.false57
  store i32 1, i32* %r, align 4, !dbg !5720
  br label %for.end, !dbg !5722

if.end65:                                         ; preds = %if.then62
  br label %if.end66

if.end66:                                         ; preds = %if.end65, %if.end51
  br label %for.inc, !dbg !5723

for.inc:                                          ; preds = %if.end66
  %53 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !5724
  %next67 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %53, i32 0, i32 0, !dbg !5725
  store %struct.location_chain_def** %next67, %struct.location_chain_def*** %nextp, align 8, !dbg !5726
  br label %for.cond, !dbg !5727, !llvm.loop !5728

for.end:                                          ; preds = %if.else64, %if.else50, %if.then44, %for.cond
  br label %if.end164, !dbg !5730

if.else68:                                        ; preds = %cond.end29
  %54 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !5731
  %55 = bitcast %struct.rtx_def* %54 to i32*, !dbg !5731
  %bf.load69 = load i32, i32* %55, align 8, !dbg !5731
  %bf.clear70 = and i32 %bf.load69, 65535, !dbg !5731
  %cmp71 = icmp eq i32 %bf.clear70, 37, !dbg !5731
  br i1 %cmp71, label %if.then72, label %if.else104, !dbg !5733

if.then72:                                        ; preds = %if.else68
  %56 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !5734
  %var_part73 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %56, i32 0, i32 5, !dbg !5737
  %arrayidx74 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part73, i64 0, i64 0, !dbg !5734
  %loc_chain75 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx74, i32 0, i32 0, !dbg !5738
  store %struct.location_chain_def** %loc_chain75, %struct.location_chain_def*** %nextp, align 8, !dbg !5739
  br label %for.cond76, !dbg !5740

for.cond76:                                       ; preds = %for.inc101, %if.then72
  %57 = load %struct.location_chain_def**, %struct.location_chain_def*** %nextp, align 8, !dbg !5741
  %58 = load %struct.location_chain_def*, %struct.location_chain_def** %57, align 8, !dbg !5743
  store %struct.location_chain_def* %58, %struct.location_chain_def** %node, align 8, !dbg !5744
  %tobool77 = icmp ne %struct.location_chain_def* %58, null, !dbg !5745
  br i1 %tobool77, label %for.body78, label %for.end103, !dbg !5745

for.body78:                                       ; preds = %for.cond76
  %59 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !5746
  %loc79 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %59, i32 0, i32 1, !dbg !5746
  %60 = load %struct.rtx_def*, %struct.rtx_def** %loc79, align 8, !dbg !5746
  %61 = bitcast %struct.rtx_def* %60 to i32*, !dbg !5746
  %bf.load80 = load i32, i32* %61, align 8, !dbg !5746
  %bf.clear81 = and i32 %bf.load80, 65535, !dbg !5746
  %cmp82 = icmp eq i32 %bf.clear81, 37, !dbg !5746
  br i1 %cmp82, label %if.then83, label %if.else99, !dbg !5748

if.then83:                                        ; preds = %for.body78
  %62 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !5749
  %loc84 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %62, i32 0, i32 1, !dbg !5749
  %63 = load %struct.rtx_def*, %struct.rtx_def** %loc84, align 8, !dbg !5749
  %call85 = call i32 @rhs_regno(%struct.rtx_def* %63), !dbg !5749
  %64 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !5752
  %call86 = call i32 @rhs_regno(%struct.rtx_def* %64), !dbg !5752
  %cmp87 = icmp ult i32 %call85, %call86, !dbg !5753
  br i1 %cmp87, label %if.then88, label %if.else90, !dbg !5754

if.then88:                                        ; preds = %if.then83
  %65 = load i32, i32* %c, align 4, !dbg !5755
  %inc89 = add nsw i32 %65, 1, !dbg !5755
  store i32 %inc89, i32* %c, align 4, !dbg !5755
  br label %if.end98, !dbg !5756

if.else90:                                        ; preds = %if.then83
  %66 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !5757
  %loc91 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %66, i32 0, i32 1, !dbg !5757
  %67 = load %struct.rtx_def*, %struct.rtx_def** %loc91, align 8, !dbg !5757
  %call92 = call i32 @rhs_regno(%struct.rtx_def* %67), !dbg !5757
  %68 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !5760
  %call93 = call i32 @rhs_regno(%struct.rtx_def* %68), !dbg !5760
  %cmp94 = icmp eq i32 %call92, %call93, !dbg !5761
  br i1 %cmp94, label %if.then95, label %if.else96, !dbg !5762

if.then95:                                        ; preds = %if.else90
  store i32 0, i32* %r, align 4, !dbg !5763
  br label %if.end97, !dbg !5764

if.else96:                                        ; preds = %if.else90
  store i32 1, i32* %r, align 4, !dbg !5765
  br label %if.end97

if.end97:                                         ; preds = %if.else96, %if.then95
  br label %for.end103, !dbg !5766

if.end98:                                         ; preds = %if.then88
  br label %if.end100, !dbg !5767

if.else99:                                        ; preds = %for.body78
  store i32 1, i32* %r, align 4, !dbg !5768
  br label %for.end103, !dbg !5770

if.end100:                                        ; preds = %if.end98
  br label %for.inc101, !dbg !5746

for.inc101:                                       ; preds = %if.end100
  %69 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !5771
  %next102 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %69, i32 0, i32 0, !dbg !5772
  store %struct.location_chain_def** %next102, %struct.location_chain_def*** %nextp, align 8, !dbg !5773
  br label %for.cond76, !dbg !5774, !llvm.loop !5775

for.end103:                                       ; preds = %if.else99, %if.end97, %for.cond76
  br label %if.end163, !dbg !5777

if.else104:                                       ; preds = %if.else68
  %70 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !5778
  %71 = bitcast %struct.rtx_def* %70 to i32*, !dbg !5778
  %bf.load105 = load i32, i32* %71, align 8, !dbg !5778
  %bf.clear106 = and i32 %bf.load105, 65535, !dbg !5778
  %cmp107 = icmp eq i32 %bf.clear106, 43, !dbg !5778
  br i1 %cmp107, label %if.then108, label %if.else145, !dbg !5780

if.then108:                                       ; preds = %if.else104
  %72 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !5781
  %var_part109 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %72, i32 0, i32 5, !dbg !5784
  %arrayidx110 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part109, i64 0, i64 0, !dbg !5781
  %loc_chain111 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx110, i32 0, i32 0, !dbg !5785
  store %struct.location_chain_def** %loc_chain111, %struct.location_chain_def*** %nextp, align 8, !dbg !5786
  br label %for.cond112, !dbg !5787

for.cond112:                                      ; preds = %for.inc142, %if.then108
  %73 = load %struct.location_chain_def**, %struct.location_chain_def*** %nextp, align 8, !dbg !5788
  %74 = load %struct.location_chain_def*, %struct.location_chain_def** %73, align 8, !dbg !5790
  store %struct.location_chain_def* %74, %struct.location_chain_def** %node, align 8, !dbg !5791
  %tobool113 = icmp ne %struct.location_chain_def* %74, null, !dbg !5792
  br i1 %tobool113, label %for.body114, label %for.end144, !dbg !5792

for.body114:                                      ; preds = %for.cond112
  %75 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !5793
  %loc115 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %75, i32 0, i32 1, !dbg !5793
  %76 = load %struct.rtx_def*, %struct.rtx_def** %loc115, align 8, !dbg !5793
  %77 = bitcast %struct.rtx_def* %76 to i32*, !dbg !5793
  %bf.load116 = load i32, i32* %77, align 8, !dbg !5793
  %bf.clear117 = and i32 %bf.load116, 65535, !dbg !5793
  %cmp118 = icmp eq i32 %bf.clear117, 37, !dbg !5793
  br i1 %cmp118, label %if.then119, label %if.else121, !dbg !5795

if.then119:                                       ; preds = %for.body114
  %78 = load i32, i32* %c, align 4, !dbg !5796
  %inc120 = add nsw i32 %78, 1, !dbg !5796
  store i32 %inc120, i32* %c, align 4, !dbg !5796
  br label %if.end141, !dbg !5797

if.else121:                                       ; preds = %for.body114
  %79 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !5798
  %loc122 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %79, i32 0, i32 1, !dbg !5798
  %80 = load %struct.rtx_def*, %struct.rtx_def** %loc122, align 8, !dbg !5798
  %81 = bitcast %struct.rtx_def* %80 to i32*, !dbg !5798
  %bf.load123 = load i32, i32* %81, align 8, !dbg !5798
  %bf.clear124 = and i32 %bf.load123, 65535, !dbg !5798
  %cmp125 = icmp eq i32 %bf.clear124, 43, !dbg !5798
  br i1 %cmp125, label %if.then126, label %if.else139, !dbg !5800

if.then126:                                       ; preds = %if.else121
  %82 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !5801
  %loc127 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %82, i32 0, i32 1, !dbg !5801
  %83 = load %struct.rtx_def*, %struct.rtx_def** %loc127, align 8, !dbg !5801
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %83, i32 0, i32 1, !dbg !5801
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5801
  %arrayidx128 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !5801
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx128 to %struct.rtx_def**, !dbg !5801
  %84 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5801
  %85 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !5804
  %u129 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %85, i32 0, i32 1, !dbg !5804
  %fld130 = bitcast %union.u* %u129 to [1 x %union.rtunion_def]*, !dbg !5804
  %arrayidx131 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld130, i64 0, i64 0, !dbg !5804
  %rt_rtx132 = bitcast %union.rtunion_def* %arrayidx131 to %struct.rtx_def**, !dbg !5804
  %86 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx132, align 8, !dbg !5804
  %call133 = call i32 @loc_cmp(%struct.rtx_def* %84, %struct.rtx_def* %86), !dbg !5805
  store i32 %call133, i32* %r, align 4, !dbg !5806
  %cmp134 = icmp sge i32 %call133, 0, !dbg !5807
  br i1 %cmp134, label %if.then135, label %if.else136, !dbg !5808

if.then135:                                       ; preds = %if.then126
  br label %for.end144, !dbg !5809

if.else136:                                       ; preds = %if.then126
  %87 = load i32, i32* %c, align 4, !dbg !5810
  %inc137 = add nsw i32 %87, 1, !dbg !5810
  store i32 %inc137, i32* %c, align 4, !dbg !5810
  br label %if.end138

if.end138:                                        ; preds = %if.else136
  br label %if.end140, !dbg !5811

if.else139:                                       ; preds = %if.else121
  store i32 1, i32* %r, align 4, !dbg !5812
  br label %for.end144, !dbg !5814

if.end140:                                        ; preds = %if.end138
  br label %if.end141

if.end141:                                        ; preds = %if.end140, %if.then119
  br label %for.inc142, !dbg !5793

for.inc142:                                       ; preds = %if.end141
  %88 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !5815
  %next143 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %88, i32 0, i32 0, !dbg !5816
  store %struct.location_chain_def** %next143, %struct.location_chain_def*** %nextp, align 8, !dbg !5817
  br label %for.cond112, !dbg !5818, !llvm.loop !5819

for.end144:                                       ; preds = %if.else139, %if.then135, %for.cond112
  br label %if.end162, !dbg !5821

if.else145:                                       ; preds = %if.else104
  %89 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !5822
  %var_part146 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %89, i32 0, i32 5, !dbg !5824
  %arrayidx147 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part146, i64 0, i64 0, !dbg !5822
  %loc_chain148 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx147, i32 0, i32 0, !dbg !5825
  store %struct.location_chain_def** %loc_chain148, %struct.location_chain_def*** %nextp, align 8, !dbg !5826
  br label %for.cond149, !dbg !5827

for.cond149:                                      ; preds = %for.inc159, %if.else145
  %90 = load %struct.location_chain_def**, %struct.location_chain_def*** %nextp, align 8, !dbg !5828
  %91 = load %struct.location_chain_def*, %struct.location_chain_def** %90, align 8, !dbg !5830
  store %struct.location_chain_def* %91, %struct.location_chain_def** %node, align 8, !dbg !5831
  %tobool150 = icmp ne %struct.location_chain_def* %91, null, !dbg !5832
  br i1 %tobool150, label %for.body151, label %for.end161, !dbg !5832

for.body151:                                      ; preds = %for.cond149
  %92 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !5833
  %loc152 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %92, i32 0, i32 1, !dbg !5835
  %93 = load %struct.rtx_def*, %struct.rtx_def** %loc152, align 8, !dbg !5835
  %94 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !5836
  %call153 = call i32 @loc_cmp(%struct.rtx_def* %93, %struct.rtx_def* %94), !dbg !5837
  store i32 %call153, i32* %r, align 4, !dbg !5838
  %cmp154 = icmp sge i32 %call153, 0, !dbg !5839
  br i1 %cmp154, label %if.then155, label %if.else156, !dbg !5840

if.then155:                                       ; preds = %for.body151
  br label %for.end161, !dbg !5841

if.else156:                                       ; preds = %for.body151
  %95 = load i32, i32* %c, align 4, !dbg !5842
  %inc157 = add nsw i32 %95, 1, !dbg !5842
  store i32 %inc157, i32* %c, align 4, !dbg !5842
  br label %if.end158

if.end158:                                        ; preds = %if.else156
  br label %for.inc159, !dbg !5843

for.inc159:                                       ; preds = %if.end158
  %96 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !5844
  %next160 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %96, i32 0, i32 0, !dbg !5845
  store %struct.location_chain_def** %next160, %struct.location_chain_def*** %nextp, align 8, !dbg !5846
  br label %for.cond149, !dbg !5847, !llvm.loop !5848

for.end161:                                       ; preds = %if.then155, %for.cond149
  br label %if.end162

if.end162:                                        ; preds = %for.end161, %for.end144
  br label %if.end163

if.end163:                                        ; preds = %if.end162, %for.end103
  br label %if.end164

if.end164:                                        ; preds = %if.end163, %for.end
  %97 = load i32, i32* %r, align 4, !dbg !5850
  %cmp165 = icmp eq i32 %97, 0, !dbg !5852
  br i1 %cmp165, label %if.then166, label %if.end167, !dbg !5853

if.then166:                                       ; preds = %if.end164
  %98 = load i8**, i8*** %slot.addr, align 8, !dbg !5854
  store i8** %98, i8*** %retval, align 8, !dbg !5855
  br label %return, !dbg !5855

if.end167:                                        ; preds = %if.end164
  %99 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !5856
  %100 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !5858
  %vars = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %100, i32 0, i32 2, !dbg !5859
  %101 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars, align 8, !dbg !5859
  %call168 = call zeroext i8 @shared_var_p(%struct.variable_def* %99, %struct.shared_hash_def* %101), !dbg !5860
  %tobool169 = icmp ne i8 %call168, 0, !dbg !5860
  br i1 %tobool169, label %if.then170, label %if.end191, !dbg !5861

if.then170:                                       ; preds = %if.end167
  %102 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !5862
  %103 = load i8**, i8*** %slot.addr, align 8, !dbg !5864
  %104 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !5865
  %105 = load i32, i32* %initialized.addr, align 4, !dbg !5866
  %call171 = call i8** @unshare_variable(%struct.dataflow_set_def* %102, i8** %103, %struct.variable_def* %104, i32 %105), !dbg !5867
  store i8** %call171, i8*** %slot.addr, align 8, !dbg !5868
  %106 = load i8**, i8*** %slot.addr, align 8, !dbg !5869
  %107 = load i8*, i8** %106, align 8, !dbg !5870
  %108 = bitcast i8* %107 to %struct.variable_def*, !dbg !5871
  store %struct.variable_def* %108, %struct.variable_def** %var, align 8, !dbg !5872
  %109 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !5873
  %var_part172 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %109, i32 0, i32 5, !dbg !5875
  %arrayidx173 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part172, i64 0, i64 0, !dbg !5873
  %loc_chain174 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx173, i32 0, i32 0, !dbg !5876
  store %struct.location_chain_def** %loc_chain174, %struct.location_chain_def*** %nextp, align 8, !dbg !5877
  br label %for.cond175, !dbg !5878

for.cond175:                                      ; preds = %for.inc178, %if.then170
  %110 = load i32, i32* %c, align 4, !dbg !5879
  %tobool176 = icmp ne i32 %110, 0, !dbg !5881
  br i1 %tobool176, label %for.body177, label %for.end180, !dbg !5881

for.body177:                                      ; preds = %for.cond175
  %111 = load i32, i32* %c, align 4, !dbg !5882
  %dec = add nsw i32 %111, -1, !dbg !5882
  store i32 %dec, i32* %c, align 4, !dbg !5882
  br label %for.inc178, !dbg !5883

for.inc178:                                       ; preds = %for.body177
  %112 = load %struct.location_chain_def**, %struct.location_chain_def*** %nextp, align 8, !dbg !5884
  %113 = load %struct.location_chain_def*, %struct.location_chain_def** %112, align 8, !dbg !5885
  %next179 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %113, i32 0, i32 0, !dbg !5886
  store %struct.location_chain_def** %next179, %struct.location_chain_def*** %nextp, align 8, !dbg !5887
  br label %for.cond175, !dbg !5888, !llvm.loop !5889

for.end180:                                       ; preds = %for.cond175
  %114 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !5891
  %tobool181 = icmp ne %struct.location_chain_def* %114, null, !dbg !5891
  br i1 %tobool181, label %lor.lhs.false183, label %land.lhs.true, !dbg !5891

land.lhs.true:                                    ; preds = %for.end180
  %115 = load %struct.location_chain_def**, %struct.location_chain_def*** %nextp, align 8, !dbg !5891
  %116 = load %struct.location_chain_def*, %struct.location_chain_def** %115, align 8, !dbg !5891
  %tobool182 = icmp ne %struct.location_chain_def* %116, null, !dbg !5891
  br i1 %tobool182, label %lor.lhs.false183, label %cond.false188, !dbg !5891

lor.lhs.false183:                                 ; preds = %land.lhs.true, %for.end180
  %117 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !5891
  %loc184 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %117, i32 0, i32 1, !dbg !5891
  %118 = load %struct.rtx_def*, %struct.rtx_def** %loc184, align 8, !dbg !5891
  %119 = load %struct.location_chain_def**, %struct.location_chain_def*** %nextp, align 8, !dbg !5891
  %120 = load %struct.location_chain_def*, %struct.location_chain_def** %119, align 8, !dbg !5891
  %loc185 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %120, i32 0, i32 1, !dbg !5891
  %121 = load %struct.rtx_def*, %struct.rtx_def** %loc185, align 8, !dbg !5891
  %cmp186 = icmp eq %struct.rtx_def* %118, %121, !dbg !5891
  br i1 %cmp186, label %cond.false188, label %cond.true187, !dbg !5891

cond.true187:                                     ; preds = %lor.lhs.false183
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 6493, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !5891
  br label %cond.end189, !dbg !5891

cond.false188:                                    ; preds = %lor.lhs.false183, %land.lhs.true
  br label %cond.end189, !dbg !5891

cond.end189:                                      ; preds = %cond.false188, %cond.true187
  %cond190 = phi i32 [ 0, %cond.true187 ], [ 0, %cond.false188 ], !dbg !5891
  br label %if.end191, !dbg !5892

if.end191:                                        ; preds = %cond.end189, %if.end167
  br label %if.end365, !dbg !5893

if.else192:                                       ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %inspos, metadata !5894, metadata !DIExpression()), !dbg !5896
  store i32 0, i32* %inspos, align 4, !dbg !5896
  %122 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !5897
  %dv193 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %122, i32 0, i32 0, !dbg !5897
  %123 = load i8*, i8** %dv193, align 8, !dbg !5897
  %call194 = call %union.tree_node* @dv_as_decl(i8* %123), !dbg !5897
  %124 = load i8*, i8** %dv.addr, align 8, !dbg !5897
  %call195 = call %union.tree_node* @dv_as_decl(i8* %124), !dbg !5897
  %cmp196 = icmp eq %union.tree_node* %call194, %call195, !dbg !5897
  br i1 %cmp196, label %cond.false198, label %cond.true197, !dbg !5897

cond.true197:                                     ; preds = %if.else192
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 6500, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !5897
  br label %cond.end199, !dbg !5897

cond.false198:                                    ; preds = %if.else192
  br label %cond.end199, !dbg !5897

cond.end199:                                      ; preds = %cond.false198, %cond.true197
  %cond200 = phi i32 [ 0, %cond.true197 ], [ 0, %cond.false198 ], !dbg !5897
  %125 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !5898
  %126 = load i64, i64* %offset.addr, align 8, !dbg !5899
  %call201 = call i32 @find_variable_location_part(%struct.variable_def* %125, i64 %126, i32* %inspos), !dbg !5900
  store i32 %call201, i32* %pos, align 4, !dbg !5901
  %127 = load i32, i32* %pos, align 4, !dbg !5902
  %cmp202 = icmp sge i32 %127, 0, !dbg !5904
  br i1 %cmp202, label %if.then203, label %if.else243, !dbg !5905

if.then203:                                       ; preds = %cond.end199
  %128 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !5906
  %var_part204 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %128, i32 0, i32 5, !dbg !5908
  %129 = load i32, i32* %pos, align 4, !dbg !5909
  %idxprom = sext i32 %129 to i64, !dbg !5906
  %arrayidx205 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part204, i64 0, i64 %idxprom, !dbg !5906
  %loc_chain206 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx205, i32 0, i32 0, !dbg !5910
  %130 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain206, align 8, !dbg !5910
  store %struct.location_chain_def* %130, %struct.location_chain_def** %node, align 8, !dbg !5911
  %131 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !5912
  %tobool207 = icmp ne %struct.location_chain_def* %131, null, !dbg !5912
  br i1 %tobool207, label %land.lhs.true208, label %if.else235, !dbg !5914

land.lhs.true208:                                 ; preds = %if.then203
  %132 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !5915
  %loc209 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %132, i32 0, i32 1, !dbg !5915
  %133 = load %struct.rtx_def*, %struct.rtx_def** %loc209, align 8, !dbg !5915
  %134 = bitcast %struct.rtx_def* %133 to i32*, !dbg !5915
  %bf.load210 = load i32, i32* %134, align 8, !dbg !5915
  %bf.clear211 = and i32 %bf.load210, 65535, !dbg !5915
  %cmp212 = icmp eq i32 %bf.clear211, 37, !dbg !5915
  br i1 %cmp212, label %land.lhs.true213, label %lor.lhs.false222, !dbg !5916

land.lhs.true213:                                 ; preds = %land.lhs.true208
  %135 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !5917
  %136 = bitcast %struct.rtx_def* %135 to i32*, !dbg !5917
  %bf.load214 = load i32, i32* %136, align 8, !dbg !5917
  %bf.clear215 = and i32 %bf.load214, 65535, !dbg !5917
  %cmp216 = icmp eq i32 %bf.clear215, 37, !dbg !5917
  br i1 %cmp216, label %land.lhs.true217, label %lor.lhs.false222, !dbg !5918

land.lhs.true217:                                 ; preds = %land.lhs.true213
  %137 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !5919
  %loc218 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %137, i32 0, i32 1, !dbg !5919
  %138 = load %struct.rtx_def*, %struct.rtx_def** %loc218, align 8, !dbg !5919
  %call219 = call i32 @rhs_regno(%struct.rtx_def* %138), !dbg !5919
  %139 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !5920
  %call220 = call i32 @rhs_regno(%struct.rtx_def* %139), !dbg !5920
  %cmp221 = icmp eq i32 %call219, %call220, !dbg !5921
  br i1 %cmp221, label %if.then226, label %lor.lhs.false222, !dbg !5922

lor.lhs.false222:                                 ; preds = %land.lhs.true217, %land.lhs.true213, %land.lhs.true208
  %140 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !5923
  %loc223 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %140, i32 0, i32 1, !dbg !5924
  %141 = load %struct.rtx_def*, %struct.rtx_def** %loc223, align 8, !dbg !5924
  %142 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !5925
  %call224 = call i32 @rtx_equal_p(%struct.rtx_def* %141, %struct.rtx_def* %142), !dbg !5926
  %tobool225 = icmp ne i32 %call224, 0, !dbg !5926
  br i1 %tobool225, label %if.then226, label %if.else235, !dbg !5927

if.then226:                                       ; preds = %lor.lhs.false222, %land.lhs.true217
  %143 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !5928
  %init = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %143, i32 0, i32 3, !dbg !5931
  %144 = load i32, i32* %init, align 8, !dbg !5931
  %145 = load i32, i32* %initialized.addr, align 4, !dbg !5932
  %cmp227 = icmp ult i32 %144, %145, !dbg !5933
  br i1 %cmp227, label %if.then228, label %if.end230, !dbg !5934

if.then228:                                       ; preds = %if.then226
  %146 = load i32, i32* %initialized.addr, align 4, !dbg !5935
  %147 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !5936
  %init229 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %147, i32 0, i32 3, !dbg !5937
  store i32 %146, i32* %init229, align 8, !dbg !5938
  br label %if.end230, !dbg !5936

if.end230:                                        ; preds = %if.then228, %if.then226
  %148 = load %struct.rtx_def*, %struct.rtx_def** %set_src.addr, align 8, !dbg !5939
  %cmp231 = icmp ne %struct.rtx_def* %148, null, !dbg !5941
  br i1 %cmp231, label %if.then232, label %if.end234, !dbg !5942

if.then232:                                       ; preds = %if.end230
  %149 = load %struct.rtx_def*, %struct.rtx_def** %set_src.addr, align 8, !dbg !5943
  %150 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !5944
  %set_src233 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %150, i32 0, i32 2, !dbg !5945
  store %struct.rtx_def* %149, %struct.rtx_def** %set_src233, align 8, !dbg !5946
  br label %if.end234, !dbg !5944

if.end234:                                        ; preds = %if.then232, %if.end230
  %151 = load i8**, i8*** %slot.addr, align 8, !dbg !5947
  store i8** %151, i8*** %retval, align 8, !dbg !5948
  br label %return, !dbg !5948

if.else235:                                       ; preds = %lor.lhs.false222, %if.then203
  %152 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !5949
  %153 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !5952
  %vars236 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %153, i32 0, i32 2, !dbg !5953
  %154 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars236, align 8, !dbg !5953
  %call237 = call zeroext i8 @shared_var_p(%struct.variable_def* %152, %struct.shared_hash_def* %154), !dbg !5954
  %tobool238 = icmp ne i8 %call237, 0, !dbg !5954
  br i1 %tobool238, label %if.then239, label %if.end241, !dbg !5955

if.then239:                                       ; preds = %if.else235
  %155 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !5956
  %156 = load i8**, i8*** %slot.addr, align 8, !dbg !5958
  %157 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !5959
  %158 = load i32, i32* %initialized.addr, align 4, !dbg !5960
  %call240 = call i8** @unshare_variable(%struct.dataflow_set_def* %155, i8** %156, %struct.variable_def* %157, i32 %158), !dbg !5961
  store i8** %call240, i8*** %slot.addr, align 8, !dbg !5962
  %159 = load i8**, i8*** %slot.addr, align 8, !dbg !5963
  %160 = load i8*, i8** %159, align 8, !dbg !5964
  %161 = bitcast i8* %160 to %struct.variable_def*, !dbg !5965
  store %struct.variable_def* %161, %struct.variable_def** %var, align 8, !dbg !5966
  br label %if.end241, !dbg !5967

if.end241:                                        ; preds = %if.then239, %if.else235
  br label %if.end242

if.end242:                                        ; preds = %if.end241
  br label %if.end293, !dbg !5968

if.else243:                                       ; preds = %cond.end199
  %162 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !5969
  %163 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !5972
  %vars244 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %163, i32 0, i32 2, !dbg !5973
  %164 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars244, align 8, !dbg !5973
  %call245 = call zeroext i8 @shared_var_p(%struct.variable_def* %162, %struct.shared_hash_def* %164), !dbg !5974
  %tobool246 = icmp ne i8 %call245, 0, !dbg !5974
  br i1 %tobool246, label %if.then247, label %if.end249, !dbg !5975

if.then247:                                       ; preds = %if.else243
  %165 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !5976
  %166 = load i8**, i8*** %slot.addr, align 8, !dbg !5978
  %167 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !5979
  %168 = load i32, i32* %initialized.addr, align 4, !dbg !5980
  %call248 = call i8** @unshare_variable(%struct.dataflow_set_def* %165, i8** %166, %struct.variable_def* %167, i32 %168), !dbg !5981
  store i8** %call248, i8*** %slot.addr, align 8, !dbg !5982
  %169 = load i8**, i8*** %slot.addr, align 8, !dbg !5983
  %170 = load i8*, i8** %169, align 8, !dbg !5984
  %171 = bitcast i8* %170 to %struct.variable_def*, !dbg !5985
  store %struct.variable_def* %171, %struct.variable_def** %var, align 8, !dbg !5986
  br label %if.end249, !dbg !5987

if.end249:                                        ; preds = %if.then247, %if.else243
  %172 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !5988
  %n_var_parts250 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %172, i32 0, i32 2, !dbg !5988
  %173 = load i8, i8* %n_var_parts250, align 4, !dbg !5988
  %conv = sext i8 %173 to i32, !dbg !5988
  %cmp251 = icmp slt i32 %conv, 16, !dbg !5988
  br i1 %cmp251, label %land.lhs.true253, label %cond.true260, !dbg !5988

land.lhs.true253:                                 ; preds = %if.end249
  %174 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !5988
  %n_var_parts254 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %174, i32 0, i32 2, !dbg !5988
  %175 = load i8, i8* %n_var_parts254, align 4, !dbg !5988
  %tobool255 = icmp ne i8 %175, 0, !dbg !5988
  br i1 %tobool255, label %lor.lhs.false256, label %cond.false261, !dbg !5988

lor.lhs.false256:                                 ; preds = %land.lhs.true253
  %176 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !5988
  %dv257 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %176, i32 0, i32 0, !dbg !5988
  %177 = load i8*, i8** %dv257, align 8, !dbg !5988
  %call258 = call zeroext i8 @dv_onepart_p(i8* %177), !dbg !5988
  %tobool259 = icmp ne i8 %call258, 0, !dbg !5988
  br i1 %tobool259, label %cond.true260, label %cond.false261, !dbg !5988

cond.true260:                                     ; preds = %lor.lhs.false256, %if.end249
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 6546, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !5988
  br label %cond.end262, !dbg !5988

cond.false261:                                    ; preds = %lor.lhs.false256, %land.lhs.true253
  br label %cond.end262, !dbg !5988

cond.end262:                                      ; preds = %cond.false261, %cond.true260
  %cond263 = phi i32 [ 0, %cond.true260 ], [ 0, %cond.false261 ], !dbg !5988
  %178 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !5989
  %n_var_parts264 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %178, i32 0, i32 2, !dbg !5991
  %179 = load i8, i8* %n_var_parts264, align 4, !dbg !5991
  %conv265 = sext i8 %179 to i32, !dbg !5989
  store i32 %conv265, i32* %pos, align 4, !dbg !5992
  br label %for.cond266, !dbg !5993

for.cond266:                                      ; preds = %for.inc276, %cond.end262
  %180 = load i32, i32* %pos, align 4, !dbg !5994
  %181 = load i32, i32* %inspos, align 4, !dbg !5996
  %cmp267 = icmp sgt i32 %180, %181, !dbg !5997
  br i1 %cmp267, label %for.body269, label %for.end278, !dbg !5998

for.body269:                                      ; preds = %for.cond266
  %182 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !5999
  %var_part270 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %182, i32 0, i32 5, !dbg !6000
  %183 = load i32, i32* %pos, align 4, !dbg !6001
  %idxprom271 = sext i32 %183 to i64, !dbg !5999
  %arrayidx272 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part270, i64 0, i64 %idxprom271, !dbg !5999
  %184 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !6002
  %var_part273 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %184, i32 0, i32 5, !dbg !6003
  %185 = load i32, i32* %pos, align 4, !dbg !6004
  %sub = sub nsw i32 %185, 1, !dbg !6005
  %idxprom274 = sext i32 %sub to i64, !dbg !6002
  %arrayidx275 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part273, i64 0, i64 %idxprom274, !dbg !6002
  %186 = bitcast %struct.variable_part_def* %arrayidx272 to i8*, !dbg !6002
  %187 = bitcast %struct.variable_part_def* %arrayidx275 to i8*, !dbg !6002
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %186, i8* align 8 %187, i64 24, i1 false), !dbg !6002
  br label %for.inc276, !dbg !5999

for.inc276:                                       ; preds = %for.body269
  %188 = load i32, i32* %pos, align 4, !dbg !6006
  %dec277 = add nsw i32 %188, -1, !dbg !6006
  store i32 %dec277, i32* %pos, align 4, !dbg !6006
  br label %for.cond266, !dbg !6007, !llvm.loop !6008

for.end278:                                       ; preds = %for.cond266
  %189 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !6010
  %n_var_parts279 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %189, i32 0, i32 2, !dbg !6011
  %190 = load i8, i8* %n_var_parts279, align 4, !dbg !6012
  %inc280 = add i8 %190, 1, !dbg !6012
  store i8 %inc280, i8* %n_var_parts279, align 4, !dbg !6012
  %191 = load i64, i64* %offset.addr, align 8, !dbg !6013
  %192 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !6014
  %var_part281 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %192, i32 0, i32 5, !dbg !6015
  %193 = load i32, i32* %pos, align 4, !dbg !6016
  %idxprom282 = sext i32 %193 to i64, !dbg !6014
  %arrayidx283 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part281, i64 0, i64 %idxprom282, !dbg !6014
  %offset284 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx283, i32 0, i32 2, !dbg !6017
  store i64 %191, i64* %offset284, align 8, !dbg !6018
  %194 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !6019
  %var_part285 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %194, i32 0, i32 5, !dbg !6020
  %195 = load i32, i32* %pos, align 4, !dbg !6021
  %idxprom286 = sext i32 %195 to i64, !dbg !6019
  %arrayidx287 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part285, i64 0, i64 %idxprom286, !dbg !6019
  %loc_chain288 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx287, i32 0, i32 0, !dbg !6022
  store %struct.location_chain_def* null, %struct.location_chain_def** %loc_chain288, align 8, !dbg !6023
  %196 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !6024
  %var_part289 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %196, i32 0, i32 5, !dbg !6025
  %197 = load i32, i32* %pos, align 4, !dbg !6026
  %idxprom290 = sext i32 %197 to i64, !dbg !6024
  %arrayidx291 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part289, i64 0, i64 %idxprom290, !dbg !6024
  %cur_loc292 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx291, i32 0, i32 1, !dbg !6027
  store %struct.rtx_def* null, %struct.rtx_def** %cur_loc292, align 8, !dbg !6028
  br label %if.end293

if.end293:                                        ; preds = %for.end278, %if.end242
  %198 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !6029
  %var_part294 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %198, i32 0, i32 5, !dbg !6030
  %199 = load i32, i32* %pos, align 4, !dbg !6031
  %idxprom295 = sext i32 %199 to i64, !dbg !6029
  %arrayidx296 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part294, i64 0, i64 %idxprom295, !dbg !6029
  %loc_chain297 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx296, i32 0, i32 0, !dbg !6032
  store %struct.location_chain_def** %loc_chain297, %struct.location_chain_def*** %nextp, align 8, !dbg !6033
  %200 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !6034
  %var_part298 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %200, i32 0, i32 5, !dbg !6036
  %201 = load i32, i32* %pos, align 4, !dbg !6037
  %idxprom299 = sext i32 %201 to i64, !dbg !6034
  %arrayidx300 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part298, i64 0, i64 %idxprom299, !dbg !6034
  %loc_chain301 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx300, i32 0, i32 0, !dbg !6038
  %202 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain301, align 8, !dbg !6038
  store %struct.location_chain_def* %202, %struct.location_chain_def** %node, align 8, !dbg !6039
  br label %for.cond302, !dbg !6040

for.cond302:                                      ; preds = %for.inc359, %if.end293
  %203 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !6041
  %tobool303 = icmp ne %struct.location_chain_def* %203, null, !dbg !6043
  br i1 %tobool303, label %for.body304, label %for.end360, !dbg !6043

for.body304:                                      ; preds = %for.cond302
  %204 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !6044
  %next305 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %204, i32 0, i32 0, !dbg !6046
  %205 = load %struct.location_chain_def*, %struct.location_chain_def** %next305, align 8, !dbg !6046
  store %struct.location_chain_def* %205, %struct.location_chain_def** %next, align 8, !dbg !6047
  %206 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !6048
  %loc306 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %206, i32 0, i32 1, !dbg !6048
  %207 = load %struct.rtx_def*, %struct.rtx_def** %loc306, align 8, !dbg !6048
  %208 = bitcast %struct.rtx_def* %207 to i32*, !dbg !6048
  %bf.load307 = load i32, i32* %208, align 8, !dbg !6048
  %bf.clear308 = and i32 %bf.load307, 65535, !dbg !6048
  %cmp309 = icmp eq i32 %bf.clear308, 37, !dbg !6048
  br i1 %cmp309, label %land.lhs.true311, label %lor.lhs.false322, !dbg !6050

land.lhs.true311:                                 ; preds = %for.body304
  %209 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !6051
  %210 = bitcast %struct.rtx_def* %209 to i32*, !dbg !6051
  %bf.load312 = load i32, i32* %210, align 8, !dbg !6051
  %bf.clear313 = and i32 %bf.load312, 65535, !dbg !6051
  %cmp314 = icmp eq i32 %bf.clear313, 37, !dbg !6051
  br i1 %cmp314, label %land.lhs.true316, label %lor.lhs.false322, !dbg !6052

land.lhs.true316:                                 ; preds = %land.lhs.true311
  %211 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !6053
  %loc317 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %211, i32 0, i32 1, !dbg !6053
  %212 = load %struct.rtx_def*, %struct.rtx_def** %loc317, align 8, !dbg !6053
  %call318 = call i32 @rhs_regno(%struct.rtx_def* %212), !dbg !6053
  %213 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !6054
  %call319 = call i32 @rhs_regno(%struct.rtx_def* %213), !dbg !6054
  %cmp320 = icmp eq i32 %call318, %call319, !dbg !6055
  br i1 %cmp320, label %if.then326, label %lor.lhs.false322, !dbg !6056

lor.lhs.false322:                                 ; preds = %land.lhs.true316, %land.lhs.true311, %for.body304
  %214 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !6057
  %loc323 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %214, i32 0, i32 1, !dbg !6058
  %215 = load %struct.rtx_def*, %struct.rtx_def** %loc323, align 8, !dbg !6058
  %216 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !6059
  %call324 = call i32 @rtx_equal_p(%struct.rtx_def* %215, %struct.rtx_def* %216), !dbg !6060
  %tobool325 = icmp ne i32 %call324, 0, !dbg !6060
  br i1 %tobool325, label %if.then326, label %if.else356, !dbg !6061

if.then326:                                       ; preds = %lor.lhs.false322, %land.lhs.true316
  %217 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !6062
  %init327 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %217, i32 0, i32 3, !dbg !6065
  %218 = load i32, i32* %init327, align 8, !dbg !6065
  %219 = load i32, i32* %initialized.addr, align 4, !dbg !6066
  %cmp328 = icmp ugt i32 %218, %219, !dbg !6067
  br i1 %cmp328, label %if.then330, label %if.end332, !dbg !6068

if.then330:                                       ; preds = %if.then326
  %220 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !6069
  %init331 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %220, i32 0, i32 3, !dbg !6070
  %221 = load i32, i32* %init331, align 8, !dbg !6070
  store i32 %221, i32* %initialized.addr, align 4, !dbg !6071
  br label %if.end332, !dbg !6072

if.end332:                                        ; preds = %if.then330, %if.then326
  %222 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !6073
  %set_src333 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %222, i32 0, i32 2, !dbg !6075
  %223 = load %struct.rtx_def*, %struct.rtx_def** %set_src333, align 8, !dbg !6075
  %cmp334 = icmp ne %struct.rtx_def* %223, null, !dbg !6076
  br i1 %cmp334, label %land.lhs.true336, label %if.end341, !dbg !6077

land.lhs.true336:                                 ; preds = %if.end332
  %224 = load %struct.rtx_def*, %struct.rtx_def** %set_src.addr, align 8, !dbg !6078
  %cmp337 = icmp eq %struct.rtx_def* %224, null, !dbg !6079
  br i1 %cmp337, label %if.then339, label %if.end341, !dbg !6080

if.then339:                                       ; preds = %land.lhs.true336
  %225 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !6081
  %set_src340 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %225, i32 0, i32 2, !dbg !6082
  %226 = load %struct.rtx_def*, %struct.rtx_def** %set_src340, align 8, !dbg !6082
  store %struct.rtx_def* %226, %struct.rtx_def** %set_src.addr, align 8, !dbg !6083
  br label %if.end341, !dbg !6084

if.end341:                                        ; preds = %if.then339, %land.lhs.true336, %if.end332
  %227 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !6085
  %var_part342 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %227, i32 0, i32 5, !dbg !6087
  %228 = load i32, i32* %pos, align 4, !dbg !6088
  %idxprom343 = sext i32 %228 to i64, !dbg !6085
  %arrayidx344 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part342, i64 0, i64 %idxprom343, !dbg !6085
  %cur_loc345 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx344, i32 0, i32 1, !dbg !6089
  %229 = load %struct.rtx_def*, %struct.rtx_def** %cur_loc345, align 8, !dbg !6089
  %230 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !6090
  %loc346 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %230, i32 0, i32 1, !dbg !6091
  %231 = load %struct.rtx_def*, %struct.rtx_def** %loc346, align 8, !dbg !6091
  %cmp347 = icmp eq %struct.rtx_def* %229, %231, !dbg !6092
  br i1 %cmp347, label %if.then349, label %if.end355, !dbg !6093

if.then349:                                       ; preds = %if.end341
  %232 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !6094
  %var_part350 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %232, i32 0, i32 5, !dbg !6096
  %233 = load i32, i32* %pos, align 4, !dbg !6097
  %idxprom351 = sext i32 %233 to i64, !dbg !6094
  %arrayidx352 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part350, i64 0, i64 %idxprom351, !dbg !6094
  %cur_loc353 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx352, i32 0, i32 1, !dbg !6098
  store %struct.rtx_def* null, %struct.rtx_def** %cur_loc353, align 8, !dbg !6099
  %234 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !6100
  %cur_loc_changed354 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %234, i32 0, i32 3, !dbg !6101
  store i8 1, i8* %cur_loc_changed354, align 1, !dbg !6102
  br label %if.end355, !dbg !6103

if.end355:                                        ; preds = %if.then349, %if.end341
  %235 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @loc_chain_pool, align 8, !dbg !6104
  %236 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !6105
  %237 = bitcast %struct.location_chain_def* %236 to i8*, !dbg !6105
  call void @pool_free(%struct.alloc_pool_def* %235, i8* %237), !dbg !6106
  %238 = load %struct.location_chain_def*, %struct.location_chain_def** %next, align 8, !dbg !6107
  %239 = load %struct.location_chain_def**, %struct.location_chain_def*** %nextp, align 8, !dbg !6108
  store %struct.location_chain_def* %238, %struct.location_chain_def** %239, align 8, !dbg !6109
  br label %for.end360, !dbg !6110

if.else356:                                       ; preds = %lor.lhs.false322
  %240 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !6111
  %next357 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %240, i32 0, i32 0, !dbg !6112
  store %struct.location_chain_def** %next357, %struct.location_chain_def*** %nextp, align 8, !dbg !6113
  br label %if.end358

if.end358:                                        ; preds = %if.else356
  br label %for.inc359, !dbg !6114

for.inc359:                                       ; preds = %if.end358
  %241 = load %struct.location_chain_def*, %struct.location_chain_def** %next, align 8, !dbg !6115
  store %struct.location_chain_def* %241, %struct.location_chain_def** %node, align 8, !dbg !6116
  br label %for.cond302, !dbg !6117, !llvm.loop !6118

for.end360:                                       ; preds = %if.end355, %for.cond302
  %242 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !6120
  %var_part361 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %242, i32 0, i32 5, !dbg !6121
  %243 = load i32, i32* %pos, align 4, !dbg !6122
  %idxprom362 = sext i32 %243 to i64, !dbg !6120
  %arrayidx363 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part361, i64 0, i64 %idxprom362, !dbg !6120
  %loc_chain364 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx363, i32 0, i32 0, !dbg !6123
  store %struct.location_chain_def** %loc_chain364, %struct.location_chain_def*** %nextp, align 8, !dbg !6124
  br label %if.end365

if.end365:                                        ; preds = %for.end360, %if.end191
  br label %if.end366

if.end366:                                        ; preds = %if.end365, %if.then9
  %244 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @loc_chain_pool, align 8, !dbg !6125
  %call367 = call i8* @pool_alloc(%struct.alloc_pool_def* %244), !dbg !6126
  %245 = bitcast i8* %call367 to %struct.location_chain_def*, !dbg !6127
  store %struct.location_chain_def* %245, %struct.location_chain_def** %node, align 8, !dbg !6128
  %246 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !6129
  %247 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !6130
  %loc368 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %247, i32 0, i32 1, !dbg !6131
  store %struct.rtx_def* %246, %struct.rtx_def** %loc368, align 8, !dbg !6132
  %248 = load i32, i32* %initialized.addr, align 4, !dbg !6133
  %249 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !6134
  %init369 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %249, i32 0, i32 3, !dbg !6135
  store i32 %248, i32* %init369, align 8, !dbg !6136
  %250 = load %struct.rtx_def*, %struct.rtx_def** %set_src.addr, align 8, !dbg !6137
  %251 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !6138
  %set_src370 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %251, i32 0, i32 2, !dbg !6139
  store %struct.rtx_def* %250, %struct.rtx_def** %set_src370, align 8, !dbg !6140
  %252 = load %struct.location_chain_def**, %struct.location_chain_def*** %nextp, align 8, !dbg !6141
  %253 = load %struct.location_chain_def*, %struct.location_chain_def** %252, align 8, !dbg !6142
  %254 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !6143
  %next371 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %254, i32 0, i32 0, !dbg !6144
  store %struct.location_chain_def* %253, %struct.location_chain_def** %next371, align 8, !dbg !6145
  %255 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !6146
  %256 = load %struct.location_chain_def**, %struct.location_chain_def*** %nextp, align 8, !dbg !6147
  store %struct.location_chain_def* %255, %struct.location_chain_def** %256, align 8, !dbg !6148
  %257 = load i8, i8* %onepart, align 1, !dbg !6149
  %conv372 = zext i8 %257 to i32, !dbg !6149
  %tobool373 = icmp ne i32 %conv372, 0, !dbg !6149
  br i1 %tobool373, label %land.lhs.true374, label %if.end379, !dbg !6151

land.lhs.true374:                                 ; preds = %if.end366
  %258 = load i8, i8* @emit_notes, align 1, !dbg !6152
  %conv375 = zext i8 %258 to i32, !dbg !6152
  %tobool376 = icmp ne i32 %conv375, 0, !dbg !6152
  br i1 %tobool376, label %if.then377, label %if.end379, !dbg !6153

if.then377:                                       ; preds = %land.lhs.true374
  %259 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !6154
  %dv378 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %259, i32 0, i32 0, !dbg !6155
  %260 = load i8*, i8** %dv378, align 8, !dbg !6155
  %261 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !6156
  call void @add_value_chains(i8* %260, %struct.rtx_def* %261), !dbg !6157
  br label %if.end379, !dbg !6157

if.end379:                                        ; preds = %if.then377, %land.lhs.true374, %if.end366
  %262 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !6158
  %var_part380 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %262, i32 0, i32 5, !dbg !6160
  %263 = load i32, i32* %pos, align 4, !dbg !6161
  %idxprom381 = sext i32 %263 to i64, !dbg !6158
  %arrayidx382 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part380, i64 0, i64 %idxprom381, !dbg !6158
  %cur_loc383 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx382, i32 0, i32 1, !dbg !6162
  %264 = load %struct.rtx_def*, %struct.rtx_def** %cur_loc383, align 8, !dbg !6162
  %cmp384 = icmp eq %struct.rtx_def* %264, null, !dbg !6163
  br i1 %cmp384, label %if.then386, label %if.end387, !dbg !6164

if.then386:                                       ; preds = %if.end379
  %265 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !6165
  %266 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !6166
  call void @variable_was_changed(%struct.variable_def* %265, %struct.dataflow_set_def* %266), !dbg !6167
  br label %if.end387, !dbg !6167

if.end387:                                        ; preds = %if.then386, %if.end379
  %267 = load i8**, i8*** %slot.addr, align 8, !dbg !6168
  store i8** %267, i8*** %retval, align 8, !dbg !6169
  br label %return, !dbg !6169

return:                                           ; preds = %if.end387, %if.end234, %if.then166
  %268 = load i8**, i8*** %retval, align 8, !dbg !6170
  ret i8** %268, !dbg !6170
}

; Function Attrs: noinline nounwind uwtable
define internal i8** @shared_hash_find_slot_noinsert_1(%struct.shared_hash_def* %vars, i8* %dv, i32 %dvhash) #0 !dbg !6171 {
entry:
  %vars.addr = alloca %struct.shared_hash_def*, align 8
  %dv.addr = alloca i8*, align 8
  %dvhash.addr = alloca i32, align 4
  store %struct.shared_hash_def* %vars, %struct.shared_hash_def** %vars.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.shared_hash_def** %vars.addr, metadata !6174, metadata !DIExpression()), !dbg !6175
  store i8* %dv, i8** %dv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dv.addr, metadata !6176, metadata !DIExpression()), !dbg !6177
  store i32 %dvhash, i32* %dvhash.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dvhash.addr, metadata !6178, metadata !DIExpression()), !dbg !6179
  %0 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars.addr, align 8, !dbg !6180
  %call = call %struct.htab* @shared_hash_htab(%struct.shared_hash_def* %0), !dbg !6181
  %1 = load i8*, i8** %dv.addr, align 8, !dbg !6182
  %2 = load i32, i32* %dvhash.addr, align 4, !dbg !6183
  %call1 = call i8** @htab_find_slot_with_hash(%struct.htab* %call, i8* %1, i32 %2, i32 0), !dbg !6184
  ret i8** %call1, !dbg !6185
}

declare dso_local i8** @htab_find_slot_with_hash(%struct.htab*, i8*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.htab* @shared_hash_htab(%struct.shared_hash_def* %vars) #0 !dbg !6186 {
entry:
  %vars.addr = alloca %struct.shared_hash_def*, align 8
  store %struct.shared_hash_def* %vars, %struct.shared_hash_def** %vars.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.shared_hash_def** %vars.addr, metadata !6189, metadata !DIExpression()), !dbg !6190
  %0 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars.addr, align 8, !dbg !6191
  %htab = getelementptr inbounds %struct.shared_hash_def, %struct.shared_hash_def* %0, i32 0, i32 1, !dbg !6192
  %1 = load %struct.htab*, %struct.htab** %htab, align 8, !dbg !6192
  ret %struct.htab* %1, !dbg !6193
}

; Function Attrs: noinline nounwind uwtable
define internal i8** @shared_hash_find_slot_1(%struct.shared_hash_def* %vars, i8* %dv, i32 %dvhash) #0 !dbg !6194 {
entry:
  %vars.addr = alloca %struct.shared_hash_def*, align 8
  %dv.addr = alloca i8*, align 8
  %dvhash.addr = alloca i32, align 4
  store %struct.shared_hash_def* %vars, %struct.shared_hash_def** %vars.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.shared_hash_def** %vars.addr, metadata !6195, metadata !DIExpression()), !dbg !6196
  store i8* %dv, i8** %dv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dv.addr, metadata !6197, metadata !DIExpression()), !dbg !6198
  store i32 %dvhash, i32* %dvhash.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dvhash.addr, metadata !6199, metadata !DIExpression()), !dbg !6200
  %0 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars.addr, align 8, !dbg !6201
  %call = call %struct.htab* @shared_hash_htab(%struct.shared_hash_def* %0), !dbg !6202
  %1 = load i8*, i8** %dv.addr, align 8, !dbg !6203
  %2 = load i32, i32* %dvhash.addr, align 4, !dbg !6204
  %3 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars.addr, align 8, !dbg !6205
  %call1 = call zeroext i8 @shared_hash_shared(%struct.shared_hash_def* %3), !dbg !6206
  %conv = zext i8 %call1 to i32, !dbg !6206
  %tobool = icmp ne i32 %conv, 0, !dbg !6206
  %4 = zext i1 %tobool to i64, !dbg !6206
  %cond = select i1 %tobool, i32 0, i32 1, !dbg !6206
  %call2 = call i8** @htab_find_slot_with_hash(%struct.htab* %call, i8* %1, i32 %2, i32 %cond), !dbg !6207
  ret i8** %call2, !dbg !6208
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @shared_hash_shared(%struct.shared_hash_def* %vars) #0 !dbg !6209 {
entry:
  %vars.addr = alloca %struct.shared_hash_def*, align 8
  store %struct.shared_hash_def* %vars, %struct.shared_hash_def** %vars.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.shared_hash_def** %vars.addr, metadata !6212, metadata !DIExpression()), !dbg !6213
  %0 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars.addr, align 8, !dbg !6214
  %refcount = getelementptr inbounds %struct.shared_hash_def, %struct.shared_hash_def* %0, i32 0, i32 0, !dbg !6215
  %1 = load i32, i32* %refcount, align 8, !dbg !6215
  %cmp = icmp sgt i32 %1, 1, !dbg !6216
  %conv = zext i1 %cmp to i32, !dbg !6216
  %conv1 = trunc i32 %conv to i8, !dbg !6214
  ret i8 %conv1, !dbg !6217
}

; Function Attrs: noinline nounwind uwtable
define internal i8** @shared_hash_find_slot_unshare_1(%struct.shared_hash_def** %pvars, i8* %dv, i32 %dvhash, i32 %ins) #0 !dbg !6218 {
entry:
  %pvars.addr = alloca %struct.shared_hash_def**, align 8
  %dv.addr = alloca i8*, align 8
  %dvhash.addr = alloca i32, align 4
  %ins.addr = alloca i32, align 4
  store %struct.shared_hash_def** %pvars, %struct.shared_hash_def*** %pvars.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.shared_hash_def*** %pvars.addr, metadata !6221, metadata !DIExpression()), !dbg !6222
  store i8* %dv, i8** %dv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dv.addr, metadata !6223, metadata !DIExpression()), !dbg !6224
  store i32 %dvhash, i32* %dvhash.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dvhash.addr, metadata !6225, metadata !DIExpression()), !dbg !6226
  store i32 %ins, i32* %ins.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ins.addr, metadata !6227, metadata !DIExpression()), !dbg !6228
  %0 = load %struct.shared_hash_def**, %struct.shared_hash_def*** %pvars.addr, align 8, !dbg !6229
  %1 = load %struct.shared_hash_def*, %struct.shared_hash_def** %0, align 8, !dbg !6231
  %call = call zeroext i8 @shared_hash_shared(%struct.shared_hash_def* %1), !dbg !6232
  %tobool = icmp ne i8 %call, 0, !dbg !6232
  br i1 %tobool, label %if.then, label %if.end, !dbg !6233

if.then:                                          ; preds = %entry
  %2 = load %struct.shared_hash_def**, %struct.shared_hash_def*** %pvars.addr, align 8, !dbg !6234
  %3 = load %struct.shared_hash_def*, %struct.shared_hash_def** %2, align 8, !dbg !6235
  %call1 = call %struct.shared_hash_def* @shared_hash_unshare(%struct.shared_hash_def* %3), !dbg !6236
  %4 = load %struct.shared_hash_def**, %struct.shared_hash_def*** %pvars.addr, align 8, !dbg !6237
  store %struct.shared_hash_def* %call1, %struct.shared_hash_def** %4, align 8, !dbg !6238
  br label %if.end, !dbg !6239

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.shared_hash_def**, %struct.shared_hash_def*** %pvars.addr, align 8, !dbg !6240
  %6 = load %struct.shared_hash_def*, %struct.shared_hash_def** %5, align 8, !dbg !6241
  %call2 = call %struct.htab* @shared_hash_htab(%struct.shared_hash_def* %6), !dbg !6242
  %7 = load i8*, i8** %dv.addr, align 8, !dbg !6243
  %8 = load i32, i32* %dvhash.addr, align 4, !dbg !6244
  %9 = load i32, i32* %ins.addr, align 4, !dbg !6245
  %call3 = call i8** @htab_find_slot_with_hash(%struct.htab* %call2, i8* %7, i32 %8, i32 %9), !dbg !6246
  ret i8** %call3, !dbg !6247
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.shared_hash_def* @shared_hash_unshare(%struct.shared_hash_def* %vars) #0 !dbg !6248 {
entry:
  %vars.addr = alloca %struct.shared_hash_def*, align 8
  %new_vars = alloca %struct.shared_hash_def*, align 8
  store %struct.shared_hash_def* %vars, %struct.shared_hash_def** %vars.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.shared_hash_def** %vars.addr, metadata !6249, metadata !DIExpression()), !dbg !6250
  call void @llvm.dbg.declare(metadata %struct.shared_hash_def** %new_vars, metadata !6251, metadata !DIExpression()), !dbg !6252
  %0 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @shared_hash_pool, align 8, !dbg !6253
  %call = call i8* @pool_alloc(%struct.alloc_pool_def* %0), !dbg !6254
  %1 = bitcast i8* %call to %struct.shared_hash_def*, !dbg !6255
  store %struct.shared_hash_def* %1, %struct.shared_hash_def** %new_vars, align 8, !dbg !6252
  %2 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars.addr, align 8, !dbg !6256
  %refcount = getelementptr inbounds %struct.shared_hash_def, %struct.shared_hash_def* %2, i32 0, i32 0, !dbg !6256
  %3 = load i32, i32* %refcount, align 8, !dbg !6256
  %cmp = icmp sgt i32 %3, 1, !dbg !6256
  br i1 %cmp, label %cond.false, label %cond.true, !dbg !6256

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 1353, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !6256
  br label %cond.end, !dbg !6256

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6256

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !6256
  %4 = load %struct.shared_hash_def*, %struct.shared_hash_def** %new_vars, align 8, !dbg !6257
  %refcount1 = getelementptr inbounds %struct.shared_hash_def, %struct.shared_hash_def* %4, i32 0, i32 0, !dbg !6258
  store i32 1, i32* %refcount1, align 8, !dbg !6259
  %5 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars.addr, align 8, !dbg !6260
  %htab = getelementptr inbounds %struct.shared_hash_def, %struct.shared_hash_def* %5, i32 0, i32 1, !dbg !6261
  %6 = load %struct.htab*, %struct.htab** %htab, align 8, !dbg !6261
  %call2 = call i64 @htab_elements(%struct.htab* %6), !dbg !6262
  %add = add i64 %call2, 3, !dbg !6263
  %call3 = call %struct.htab* @htab_create(i64 %add, i32 (i8*)* @variable_htab_hash, i32 (i8*, i8*)* @variable_htab_eq, void (i8*)* @variable_htab_free), !dbg !6264
  %7 = load %struct.shared_hash_def*, %struct.shared_hash_def** %new_vars, align 8, !dbg !6265
  %htab4 = getelementptr inbounds %struct.shared_hash_def, %struct.shared_hash_def* %7, i32 0, i32 1, !dbg !6266
  store %struct.htab* %call3, %struct.htab** %htab4, align 8, !dbg !6267
  %8 = load %struct.shared_hash_def*, %struct.shared_hash_def** %new_vars, align 8, !dbg !6268
  %htab5 = getelementptr inbounds %struct.shared_hash_def, %struct.shared_hash_def* %8, i32 0, i32 1, !dbg !6269
  %9 = load %struct.htab*, %struct.htab** %htab5, align 8, !dbg !6269
  %10 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars.addr, align 8, !dbg !6270
  %htab6 = getelementptr inbounds %struct.shared_hash_def, %struct.shared_hash_def* %10, i32 0, i32 1, !dbg !6271
  %11 = load %struct.htab*, %struct.htab** %htab6, align 8, !dbg !6271
  call void @vars_copy(%struct.htab* %9, %struct.htab* %11), !dbg !6272
  %12 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars.addr, align 8, !dbg !6273
  %refcount7 = getelementptr inbounds %struct.shared_hash_def, %struct.shared_hash_def* %12, i32 0, i32 0, !dbg !6274
  %13 = load i32, i32* %refcount7, align 8, !dbg !6275
  %dec = add nsw i32 %13, -1, !dbg !6275
  store i32 %dec, i32* %refcount7, align 8, !dbg !6275
  %14 = load %struct.shared_hash_def*, %struct.shared_hash_def** %new_vars, align 8, !dbg !6276
  ret %struct.shared_hash_def* %14, !dbg !6277
}

declare dso_local i64 @htab_elements(%struct.htab*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @vars_copy(%struct.htab* %dst, %struct.htab* %src) #0 !dbg !6278 {
entry:
  %dst.addr = alloca %struct.htab*, align 8
  %src.addr = alloca %struct.htab*, align 8
  store %struct.htab* %dst, %struct.htab** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.htab** %dst.addr, metadata !6281, metadata !DIExpression()), !dbg !6282
  store %struct.htab* %src, %struct.htab** %src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.htab** %src.addr, metadata !6283, metadata !DIExpression()), !dbg !6284
  %0 = load %struct.htab*, %struct.htab** %src.addr, align 8, !dbg !6285
  %1 = load %struct.htab*, %struct.htab** %dst.addr, align 8, !dbg !6286
  %2 = bitcast %struct.htab* %1 to i8*, !dbg !6286
  call void @htab_traverse_noresize(%struct.htab* %0, i32 (i8**, i8*)* @vars_copy_1, i8* %2), !dbg !6287
  ret void, !dbg !6288
}

declare dso_local void @htab_traverse_noresize(%struct.htab*, i32 (i8**, i8*)*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @vars_copy_1(i8** %slot, i8* %data) #0 !dbg !6289 {
entry:
  %slot.addr = alloca i8**, align 8
  %data.addr = alloca i8*, align 8
  %dst = alloca %struct.htab*, align 8
  %src = alloca %struct.variable_def*, align 8
  %dstp = alloca i8**, align 8
  store i8** %slot, i8*** %slot.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %slot.addr, metadata !6292, metadata !DIExpression()), !dbg !6293
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !6294, metadata !DIExpression()), !dbg !6295
  call void @llvm.dbg.declare(metadata %struct.htab** %dst, metadata !6296, metadata !DIExpression()), !dbg !6297
  %0 = load i8*, i8** %data.addr, align 8, !dbg !6298
  %1 = bitcast i8* %0 to %struct.htab*, !dbg !6299
  store %struct.htab* %1, %struct.htab** %dst, align 8, !dbg !6297
  call void @llvm.dbg.declare(metadata %struct.variable_def** %src, metadata !6300, metadata !DIExpression()), !dbg !6301
  call void @llvm.dbg.declare(metadata i8*** %dstp, metadata !6302, metadata !DIExpression()), !dbg !6303
  %2 = load i8**, i8*** %slot.addr, align 8, !dbg !6304
  %3 = load i8*, i8** %2, align 8, !dbg !6305
  %4 = bitcast i8* %3 to %struct.variable_def*, !dbg !6306
  store %struct.variable_def* %4, %struct.variable_def** %src, align 8, !dbg !6307
  %5 = load %struct.variable_def*, %struct.variable_def** %src, align 8, !dbg !6308
  %refcount = getelementptr inbounds %struct.variable_def, %struct.variable_def* %5, i32 0, i32 1, !dbg !6309
  %6 = load i32, i32* %refcount, align 8, !dbg !6310
  %inc = add nsw i32 %6, 1, !dbg !6310
  store i32 %inc, i32* %refcount, align 8, !dbg !6310
  %7 = load %struct.htab*, %struct.htab** %dst, align 8, !dbg !6311
  %8 = load %struct.variable_def*, %struct.variable_def** %src, align 8, !dbg !6312
  %dv = getelementptr inbounds %struct.variable_def, %struct.variable_def* %8, i32 0, i32 0, !dbg !6313
  %9 = load i8*, i8** %dv, align 8, !dbg !6313
  %10 = load %struct.variable_def*, %struct.variable_def** %src, align 8, !dbg !6314
  %dv1 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %10, i32 0, i32 0, !dbg !6315
  %11 = load i8*, i8** %dv1, align 8, !dbg !6315
  %call = call i32 @dv_htab_hash(i8* %11), !dbg !6316
  %call2 = call i8** @htab_find_slot_with_hash(%struct.htab* %7, i8* %9, i32 %call, i32 1), !dbg !6317
  store i8** %call2, i8*** %dstp, align 8, !dbg !6318
  %12 = load %struct.variable_def*, %struct.variable_def** %src, align 8, !dbg !6319
  %13 = bitcast %struct.variable_def* %12 to i8*, !dbg !6319
  %14 = load i8**, i8*** %dstp, align 8, !dbg !6320
  store i8* %13, i8** %14, align 8, !dbg !6321
  ret i32 1, !dbg !6322
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @canon_value_cmp(%struct.rtx_def* %tval, %struct.rtx_def* %cval) #0 !dbg !6323 {
entry:
  %tval.addr = alloca %struct.rtx_def*, align 8
  %cval.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %tval, %struct.rtx_def** %tval.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %tval.addr, metadata !6326, metadata !DIExpression()), !dbg !6327
  store %struct.rtx_def* %cval, %struct.rtx_def** %cval.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %cval.addr, metadata !6328, metadata !DIExpression()), !dbg !6329
  %0 = load %struct.rtx_def*, %struct.rtx_def** %cval.addr, align 8, !dbg !6330
  %tobool = icmp ne %struct.rtx_def* %0, null, !dbg !6330
  br i1 %tobool, label %lor.rhs, label %lor.end, !dbg !6331

lor.rhs:                                          ; preds = %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** %tval.addr, align 8, !dbg !6332
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i32 0, i32 1, !dbg !6332
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !6332
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !6332
  %rt_cselib = bitcast %union.rtunion_def* %arrayidx to %struct.cselib_val_struct**, !dbg !6332
  %2 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %rt_cselib, align 8, !dbg !6332
  %uid = getelementptr inbounds %struct.cselib_val_struct, %struct.cselib_val_struct* %2, i32 0, i32 1, !dbg !6333
  %3 = load i32, i32* %uid, align 4, !dbg !6333
  %4 = load %struct.rtx_def*, %struct.rtx_def** %cval.addr, align 8, !dbg !6334
  %u1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1, !dbg !6334
  %fld2 = bitcast %union.u* %u1 to [1 x %union.rtunion_def]*, !dbg !6334
  %arrayidx3 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2, i64 0, i64 0, !dbg !6334
  %rt_cselib4 = bitcast %union.rtunion_def* %arrayidx3 to %struct.cselib_val_struct**, !dbg !6334
  %5 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %rt_cselib4, align 8, !dbg !6334
  %uid5 = getelementptr inbounds %struct.cselib_val_struct, %struct.cselib_val_struct* %5, i32 0, i32 1, !dbg !6335
  %6 = load i32, i32* %uid5, align 4, !dbg !6335
  %cmp = icmp slt i32 %3, %6, !dbg !6336
  br label %lor.end, !dbg !6331

lor.end:                                          ; preds = %lor.rhs, %entry
  %7 = phi i1 [ true, %entry ], [ %cmp, %lor.rhs ]
  %lor.ext = zext i1 %7 to i32, !dbg !6331
  %conv = trunc i32 %lor.ext to i8, !dbg !6337
  ret i8 %conv, !dbg !6338
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @loc_cmp(%struct.rtx_def* %x, %struct.rtx_def* %y) #0 !dbg !6339 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %y.addr = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %r = alloca i32, align 4
  %code = alloca i32, align 4
  %fmt = alloca i8*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !6342, metadata !DIExpression()), !dbg !6343
  store %struct.rtx_def* %y, %struct.rtx_def** %y.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %y.addr, metadata !6344, metadata !DIExpression()), !dbg !6345
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6346, metadata !DIExpression()), !dbg !6347
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6348, metadata !DIExpression()), !dbg !6349
  call void @llvm.dbg.declare(metadata i32* %r, metadata !6350, metadata !DIExpression()), !dbg !6351
  call void @llvm.dbg.declare(metadata i32* %code, metadata !6352, metadata !DIExpression()), !dbg !6353
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6354
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !6354
  %bf.load = load i32, i32* %1, align 8, !dbg !6354
  %bf.clear = and i32 %bf.load, 65535, !dbg !6354
  store i32 %bf.clear, i32* %code, align 4, !dbg !6353
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !6355, metadata !DIExpression()), !dbg !6356
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6357
  %3 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !6359
  %cmp = icmp eq %struct.rtx_def* %2, %3, !dbg !6360
  br i1 %cmp, label %if.then, label %if.end, !dbg !6361

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6362
  br label %return, !dbg !6362

if.end:                                           ; preds = %entry
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6363
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !6363
  %bf.load1 = load i32, i32* %5, align 8, !dbg !6363
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !6363
  %cmp3 = icmp eq i32 %bf.clear2, 37, !dbg !6363
  br i1 %cmp3, label %if.then4, label %if.end24, !dbg !6365

if.then4:                                         ; preds = %if.end
  %6 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !6366
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !6366
  %bf.load5 = load i32, i32* %7, align 8, !dbg !6366
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !6366
  %cmp7 = icmp eq i32 %bf.clear6, 37, !dbg !6366
  br i1 %cmp7, label %if.end9, label %if.then8, !dbg !6369

if.then8:                                         ; preds = %if.then4
  store i32 -1, i32* %retval, align 4, !dbg !6370
  br label %return, !dbg !6370

if.end9:                                          ; preds = %if.then4
  %8 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6371
  %9 = bitcast %struct.rtx_def* %8 to i32*, !dbg !6371
  %bf.load10 = load i32, i32* %9, align 8, !dbg !6371
  %bf.lshr = lshr i32 %bf.load10, 16, !dbg !6371
  %bf.clear11 = and i32 %bf.lshr, 255, !dbg !6371
  %10 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !6371
  %11 = bitcast %struct.rtx_def* %10 to i32*, !dbg !6371
  %bf.load12 = load i32, i32* %11, align 8, !dbg !6371
  %bf.lshr13 = lshr i32 %bf.load12, 16, !dbg !6371
  %bf.clear14 = and i32 %bf.lshr13, 255, !dbg !6371
  %cmp15 = icmp eq i32 %bf.clear11, %bf.clear14, !dbg !6371
  br i1 %cmp15, label %cond.false, label %cond.true, !dbg !6371

cond.true:                                        ; preds = %if.end9
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 2673, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !6371
  br label %cond.end, !dbg !6371

cond.false:                                       ; preds = %if.end9
  br label %cond.end, !dbg !6371

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !6371
  %12 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6372
  %call = call i32 @rhs_regno(%struct.rtx_def* %12), !dbg !6372
  %13 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !6374
  %call16 = call i32 @rhs_regno(%struct.rtx_def* %13), !dbg !6374
  %cmp17 = icmp eq i32 %call, %call16, !dbg !6375
  br i1 %cmp17, label %if.then18, label %if.else, !dbg !6376

if.then18:                                        ; preds = %cond.end
  store i32 0, i32* %retval, align 4, !dbg !6377
  br label %return, !dbg !6377

if.else:                                          ; preds = %cond.end
  %14 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6378
  %call19 = call i32 @rhs_regno(%struct.rtx_def* %14), !dbg !6378
  %15 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !6380
  %call20 = call i32 @rhs_regno(%struct.rtx_def* %15), !dbg !6380
  %cmp21 = icmp ult i32 %call19, %call20, !dbg !6381
  br i1 %cmp21, label %if.then22, label %if.else23, !dbg !6382

if.then22:                                        ; preds = %if.else
  store i32 -1, i32* %retval, align 4, !dbg !6383
  br label %return, !dbg !6383

if.else23:                                        ; preds = %if.else
  store i32 1, i32* %retval, align 4, !dbg !6384
  br label %return, !dbg !6384

if.end24:                                         ; preds = %if.end
  %16 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !6385
  %17 = bitcast %struct.rtx_def* %16 to i32*, !dbg !6385
  %bf.load25 = load i32, i32* %17, align 8, !dbg !6385
  %bf.clear26 = and i32 %bf.load25, 65535, !dbg !6385
  %cmp27 = icmp eq i32 %bf.clear26, 37, !dbg !6385
  br i1 %cmp27, label %if.then28, label %if.end29, !dbg !6387

if.then28:                                        ; preds = %if.end24
  store i32 1, i32* %retval, align 4, !dbg !6388
  br label %return, !dbg !6388

if.end29:                                         ; preds = %if.end24
  %18 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6389
  %19 = bitcast %struct.rtx_def* %18 to i32*, !dbg !6389
  %bf.load30 = load i32, i32* %19, align 8, !dbg !6389
  %bf.clear31 = and i32 %bf.load30, 65535, !dbg !6389
  %cmp32 = icmp eq i32 %bf.clear31, 43, !dbg !6389
  br i1 %cmp32, label %if.then33, label %if.end55, !dbg !6391

if.then33:                                        ; preds = %if.end29
  %20 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !6392
  %21 = bitcast %struct.rtx_def* %20 to i32*, !dbg !6392
  %bf.load34 = load i32, i32* %21, align 8, !dbg !6392
  %bf.clear35 = and i32 %bf.load34, 65535, !dbg !6392
  %cmp36 = icmp eq i32 %bf.clear35, 43, !dbg !6392
  br i1 %cmp36, label %if.end38, label %if.then37, !dbg !6395

if.then37:                                        ; preds = %if.then33
  store i32 -1, i32* %retval, align 4, !dbg !6396
  br label %return, !dbg !6396

if.end38:                                         ; preds = %if.then33
  %22 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6397
  %23 = bitcast %struct.rtx_def* %22 to i32*, !dbg !6397
  %bf.load39 = load i32, i32* %23, align 8, !dbg !6397
  %bf.lshr40 = lshr i32 %bf.load39, 16, !dbg !6397
  %bf.clear41 = and i32 %bf.lshr40, 255, !dbg !6397
  %24 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !6397
  %25 = bitcast %struct.rtx_def* %24 to i32*, !dbg !6397
  %bf.load42 = load i32, i32* %25, align 8, !dbg !6397
  %bf.lshr43 = lshr i32 %bf.load42, 16, !dbg !6397
  %bf.clear44 = and i32 %bf.lshr43, 255, !dbg !6397
  %cmp45 = icmp eq i32 %bf.clear41, %bf.clear44, !dbg !6397
  br i1 %cmp45, label %cond.false47, label %cond.true46, !dbg !6397

cond.true46:                                      ; preds = %if.end38
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 2689, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !6397
  br label %cond.end48, !dbg !6397

cond.false47:                                     ; preds = %if.end38
  br label %cond.end48, !dbg !6397

cond.end48:                                       ; preds = %cond.false47, %cond.true46
  %cond49 = phi i32 [ 0, %cond.true46 ], [ 0, %cond.false47 ], !dbg !6397
  %26 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6398
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1, !dbg !6398
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !6398
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !6398
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !6398
  %27 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6398
  %28 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !6399
  %u50 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i32 0, i32 1, !dbg !6399
  %fld51 = bitcast %union.u* %u50 to [1 x %union.rtunion_def]*, !dbg !6399
  %arrayidx52 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld51, i64 0, i64 0, !dbg !6399
  %rt_rtx53 = bitcast %union.rtunion_def* %arrayidx52 to %struct.rtx_def**, !dbg !6399
  %29 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx53, align 8, !dbg !6399
  %call54 = call i32 @loc_cmp(%struct.rtx_def* %27, %struct.rtx_def* %29), !dbg !6400
  store i32 %call54, i32* %retval, align 4, !dbg !6401
  br label %return, !dbg !6401

if.end55:                                         ; preds = %if.end29
  %30 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !6402
  %31 = bitcast %struct.rtx_def* %30 to i32*, !dbg !6402
  %bf.load56 = load i32, i32* %31, align 8, !dbg !6402
  %bf.clear57 = and i32 %bf.load56, 65535, !dbg !6402
  %cmp58 = icmp eq i32 %bf.clear57, 43, !dbg !6402
  br i1 %cmp58, label %if.then59, label %if.end60, !dbg !6404

if.then59:                                        ; preds = %if.end55
  store i32 1, i32* %retval, align 4, !dbg !6405
  br label %return, !dbg !6405

if.end60:                                         ; preds = %if.end55
  %32 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6406
  %33 = bitcast %struct.rtx_def* %32 to i32*, !dbg !6406
  %bf.load61 = load i32, i32* %33, align 8, !dbg !6406
  %bf.clear62 = and i32 %bf.load61, 65535, !dbg !6406
  %cmp63 = icmp eq i32 %bf.clear62, 1, !dbg !6408
  br i1 %cmp63, label %if.then64, label %if.end73, !dbg !6409

if.then64:                                        ; preds = %if.end60
  %34 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !6410
  %35 = bitcast %struct.rtx_def* %34 to i32*, !dbg !6410
  %bf.load65 = load i32, i32* %35, align 8, !dbg !6410
  %bf.clear66 = and i32 %bf.load65, 65535, !dbg !6410
  %cmp67 = icmp ne i32 %bf.clear66, 1, !dbg !6413
  br i1 %cmp67, label %if.then68, label %if.end69, !dbg !6414

if.then68:                                        ; preds = %if.then64
  store i32 -1, i32* %retval, align 4, !dbg !6415
  br label %return, !dbg !6415

if.end69:                                         ; preds = %if.then64
  %36 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6416
  %37 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !6418
  %call70 = call zeroext i8 @canon_value_cmp(%struct.rtx_def* %36, %struct.rtx_def* %37), !dbg !6419
  %tobool = icmp ne i8 %call70, 0, !dbg !6419
  br i1 %tobool, label %if.then71, label %if.else72, !dbg !6420

if.then71:                                        ; preds = %if.end69
  store i32 -1, i32* %retval, align 4, !dbg !6421
  br label %return, !dbg !6421

if.else72:                                        ; preds = %if.end69
  store i32 1, i32* %retval, align 4, !dbg !6422
  br label %return, !dbg !6422

if.end73:                                         ; preds = %if.end60
  %38 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !6423
  %39 = bitcast %struct.rtx_def* %38 to i32*, !dbg !6423
  %bf.load74 = load i32, i32* %39, align 8, !dbg !6423
  %bf.clear75 = and i32 %bf.load74, 65535, !dbg !6423
  %cmp76 = icmp eq i32 %bf.clear75, 1, !dbg !6425
  br i1 %cmp76, label %if.then77, label %if.end78, !dbg !6426

if.then77:                                        ; preds = %if.end73
  store i32 1, i32* %retval, align 4, !dbg !6427
  br label %return, !dbg !6427

if.end78:                                         ; preds = %if.end73
  %40 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6428
  %41 = bitcast %struct.rtx_def* %40 to i32*, !dbg !6428
  %bf.load79 = load i32, i32* %41, align 8, !dbg !6428
  %bf.clear80 = and i32 %bf.load79, 65535, !dbg !6428
  %42 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !6430
  %43 = bitcast %struct.rtx_def* %42 to i32*, !dbg !6430
  %bf.load81 = load i32, i32* %43, align 8, !dbg !6430
  %bf.clear82 = and i32 %bf.load81, 65535, !dbg !6430
  %cmp83 = icmp eq i32 %bf.clear80, %bf.clear82, !dbg !6431
  br i1 %cmp83, label %if.then84, label %if.else85, !dbg !6432

if.then84:                                        ; preds = %if.end78
  br label %if.end93, !dbg !6432

if.else85:                                        ; preds = %if.end78
  %44 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6433
  %45 = bitcast %struct.rtx_def* %44 to i32*, !dbg !6433
  %bf.load86 = load i32, i32* %45, align 8, !dbg !6433
  %bf.clear87 = and i32 %bf.load86, 65535, !dbg !6433
  %46 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !6435
  %47 = bitcast %struct.rtx_def* %46 to i32*, !dbg !6435
  %bf.load88 = load i32, i32* %47, align 8, !dbg !6435
  %bf.clear89 = and i32 %bf.load88, 65535, !dbg !6435
  %cmp90 = icmp ult i32 %bf.clear87, %bf.clear89, !dbg !6436
  br i1 %cmp90, label %if.then91, label %if.else92, !dbg !6437

if.then91:                                        ; preds = %if.else85
  store i32 -1, i32* %retval, align 4, !dbg !6438
  br label %return, !dbg !6438

if.else92:                                        ; preds = %if.else85
  store i32 1, i32* %retval, align 4, !dbg !6439
  br label %return, !dbg !6439

if.end93:                                         ; preds = %if.then84
  %48 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6440
  %49 = bitcast %struct.rtx_def* %48 to i32*, !dbg !6440
  %bf.load94 = load i32, i32* %49, align 8, !dbg !6440
  %bf.lshr95 = lshr i32 %bf.load94, 16, !dbg !6440
  %bf.clear96 = and i32 %bf.lshr95, 255, !dbg !6440
  %50 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !6440
  %51 = bitcast %struct.rtx_def* %50 to i32*, !dbg !6440
  %bf.load97 = load i32, i32* %51, align 8, !dbg !6440
  %bf.lshr98 = lshr i32 %bf.load97, 16, !dbg !6440
  %bf.clear99 = and i32 %bf.lshr98, 255, !dbg !6440
  %cmp100 = icmp eq i32 %bf.clear96, %bf.clear99, !dbg !6440
  br i1 %cmp100, label %cond.false102, label %cond.true101, !dbg !6440

cond.true101:                                     ; preds = %if.end93
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 2720, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !6440
  br label %cond.end103, !dbg !6440

cond.false102:                                    ; preds = %if.end93
  br label %cond.end103, !dbg !6440

cond.end103:                                      ; preds = %cond.false102, %cond.true101
  %cond104 = phi i32 [ 0, %cond.true101 ], [ 0, %cond.false102 ], !dbg !6440
  %52 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6441
  %53 = bitcast %struct.rtx_def* %52 to i32*, !dbg !6441
  %bf.load105 = load i32, i32* %53, align 8, !dbg !6441
  %bf.clear106 = and i32 %bf.load105, 65535, !dbg !6441
  %cmp107 = icmp eq i32 %bf.clear106, 2, !dbg !6443
  br i1 %cmp107, label %if.then108, label %if.end122, !dbg !6444

if.then108:                                       ; preds = %cond.end103
  %54 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6445
  %u109 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %54, i32 0, i32 1, !dbg !6445
  %fld110 = bitcast %union.u* %u109 to [1 x %union.rtunion_def]*, !dbg !6445
  %arrayidx111 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld110, i64 0, i64 0, !dbg !6445
  %rt_tree = bitcast %union.rtunion_def* %arrayidx111 to %union.tree_node**, !dbg !6445
  %55 = load %union.tree_node*, %union.tree_node** %rt_tree, align 8, !dbg !6445
  %decl_minimal = bitcast %union.tree_node* %55 to %struct.tree_decl_minimal*, !dbg !6445
  %uid = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %decl_minimal, i32 0, i32 2, !dbg !6445
  %56 = load i32, i32* %uid, align 4, !dbg !6445
  %sub = sub i32 0, %56, !dbg !6445
  %57 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !6448
  %u112 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %57, i32 0, i32 1, !dbg !6448
  %fld113 = bitcast %union.u* %u112 to [1 x %union.rtunion_def]*, !dbg !6448
  %arrayidx114 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld113, i64 0, i64 0, !dbg !6448
  %rt_tree115 = bitcast %union.rtunion_def* %arrayidx114 to %union.tree_node**, !dbg !6448
  %58 = load %union.tree_node*, %union.tree_node** %rt_tree115, align 8, !dbg !6448
  %decl_minimal116 = bitcast %union.tree_node* %58 to %struct.tree_decl_minimal*, !dbg !6448
  %uid117 = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %decl_minimal116, i32 0, i32 2, !dbg !6448
  %59 = load i32, i32* %uid117, align 4, !dbg !6448
  %sub118 = sub i32 0, %59, !dbg !6448
  %cmp119 = icmp ult i32 %sub, %sub118, !dbg !6449
  br i1 %cmp119, label %if.then120, label %if.end121, !dbg !6450

if.then120:                                       ; preds = %if.then108
  store i32 -1, i32* %retval, align 4, !dbg !6451
  br label %return, !dbg !6451

if.end121:                                        ; preds = %if.then108
  store i32 1, i32* %retval, align 4, !dbg !6452
  br label %return, !dbg !6452

if.end122:                                        ; preds = %cond.end103
  %60 = load i32, i32* %code, align 4, !dbg !6453
  %idxprom = sext i32 %60 to i64, !dbg !6453
  %arrayidx123 = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom, !dbg !6453
  %61 = load i8*, i8** %arrayidx123, align 8, !dbg !6453
  store i8* %61, i8** %fmt, align 8, !dbg !6454
  store i32 0, i32* %i, align 4, !dbg !6455
  br label %for.cond, !dbg !6457

for.cond:                                         ; preds = %for.inc309, %if.end122
  %62 = load i32, i32* %i, align 4, !dbg !6458
  %63 = load i32, i32* %code, align 4, !dbg !6460
  %idxprom124 = sext i32 %63 to i64, !dbg !6460
  %arrayidx125 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom124, !dbg !6460
  %64 = load i8, i8* %arrayidx125, align 1, !dbg !6460
  %conv = zext i8 %64 to i32, !dbg !6460
  %cmp126 = icmp slt i32 %62, %conv, !dbg !6461
  br i1 %cmp126, label %for.body, label %for.end311, !dbg !6462

for.body:                                         ; preds = %for.cond
  %65 = load i8*, i8** %fmt, align 8, !dbg !6463
  %66 = load i32, i32* %i, align 4, !dbg !6464
  %idxprom128 = sext i32 %66 to i64, !dbg !6463
  %arrayidx129 = getelementptr inbounds i8, i8* %65, i64 %idxprom128, !dbg !6463
  %67 = load i8, i8* %arrayidx129, align 1, !dbg !6463
  %conv130 = sext i8 %67 to i32, !dbg !6463
  switch i32 %conv130, label %sw.default [
    i32 119, label %sw.bb
    i32 110, label %sw.bb154
    i32 105, label %sw.bb154
    i32 86, label %sw.bb182
    i32 69, label %sw.bb182
    i32 101, label %sw.bb243
    i32 83, label %sw.bb258
    i32 115, label %sw.bb258
    i32 117, label %sw.bb307
    i32 48, label %sw.bb308
    i32 116, label %sw.bb308
  ], !dbg !6465

sw.bb:                                            ; preds = %for.body
  %68 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6466
  %u131 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %68, i32 0, i32 1, !dbg !6466
  %hwint = bitcast %union.u* %u131 to [1 x i64]*, !dbg !6466
  %69 = load i32, i32* %i, align 4, !dbg !6466
  %idxprom132 = sext i32 %69 to i64, !dbg !6466
  %arrayidx133 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 %idxprom132, !dbg !6466
  %70 = load i64, i64* %arrayidx133, align 8, !dbg !6466
  %71 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !6469
  %u134 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %71, i32 0, i32 1, !dbg !6469
  %hwint135 = bitcast %union.u* %u134 to [1 x i64]*, !dbg !6469
  %72 = load i32, i32* %i, align 4, !dbg !6469
  %idxprom136 = sext i32 %72 to i64, !dbg !6469
  %arrayidx137 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint135, i64 0, i64 %idxprom136, !dbg !6469
  %73 = load i64, i64* %arrayidx137, align 8, !dbg !6469
  %cmp138 = icmp eq i64 %70, %73, !dbg !6470
  br i1 %cmp138, label %if.then140, label %if.else141, !dbg !6471

if.then140:                                       ; preds = %sw.bb
  br label %sw.epilog, !dbg !6472

if.else141:                                       ; preds = %sw.bb
  %74 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6473
  %u142 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %74, i32 0, i32 1, !dbg !6473
  %hwint143 = bitcast %union.u* %u142 to [1 x i64]*, !dbg !6473
  %75 = load i32, i32* %i, align 4, !dbg !6473
  %idxprom144 = sext i32 %75 to i64, !dbg !6473
  %arrayidx145 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint143, i64 0, i64 %idxprom144, !dbg !6473
  %76 = load i64, i64* %arrayidx145, align 8, !dbg !6473
  %77 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !6475
  %u146 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %77, i32 0, i32 1, !dbg !6475
  %hwint147 = bitcast %union.u* %u146 to [1 x i64]*, !dbg !6475
  %78 = load i32, i32* %i, align 4, !dbg !6475
  %idxprom148 = sext i32 %78 to i64, !dbg !6475
  %arrayidx149 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint147, i64 0, i64 %idxprom148, !dbg !6475
  %79 = load i64, i64* %arrayidx149, align 8, !dbg !6475
  %cmp150 = icmp slt i64 %76, %79, !dbg !6476
  br i1 %cmp150, label %if.then152, label %if.else153, !dbg !6477

if.then152:                                       ; preds = %if.else141
  store i32 -1, i32* %retval, align 4, !dbg !6478
  br label %return, !dbg !6478

if.else153:                                       ; preds = %if.else141
  store i32 1, i32* %retval, align 4, !dbg !6479
  br label %return, !dbg !6479

sw.bb154:                                         ; preds = %for.body, %for.body
  %80 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6480
  %u155 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %80, i32 0, i32 1, !dbg !6480
  %fld156 = bitcast %union.u* %u155 to [1 x %union.rtunion_def]*, !dbg !6480
  %81 = load i32, i32* %i, align 4, !dbg !6480
  %idxprom157 = sext i32 %81 to i64, !dbg !6480
  %arrayidx158 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld156, i64 0, i64 %idxprom157, !dbg !6480
  %rt_int = bitcast %union.rtunion_def* %arrayidx158 to i32*, !dbg !6480
  %82 = load i32, i32* %rt_int, align 8, !dbg !6480
  %83 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !6482
  %u159 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %83, i32 0, i32 1, !dbg !6482
  %fld160 = bitcast %union.u* %u159 to [1 x %union.rtunion_def]*, !dbg !6482
  %84 = load i32, i32* %i, align 4, !dbg !6482
  %idxprom161 = sext i32 %84 to i64, !dbg !6482
  %arrayidx162 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld160, i64 0, i64 %idxprom161, !dbg !6482
  %rt_int163 = bitcast %union.rtunion_def* %arrayidx162 to i32*, !dbg !6482
  %85 = load i32, i32* %rt_int163, align 8, !dbg !6482
  %cmp164 = icmp eq i32 %82, %85, !dbg !6483
  br i1 %cmp164, label %if.then166, label %if.else167, !dbg !6484

if.then166:                                       ; preds = %sw.bb154
  br label %sw.epilog, !dbg !6485

if.else167:                                       ; preds = %sw.bb154
  %86 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6486
  %u168 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %86, i32 0, i32 1, !dbg !6486
  %fld169 = bitcast %union.u* %u168 to [1 x %union.rtunion_def]*, !dbg !6486
  %87 = load i32, i32* %i, align 4, !dbg !6486
  %idxprom170 = sext i32 %87 to i64, !dbg !6486
  %arrayidx171 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld169, i64 0, i64 %idxprom170, !dbg !6486
  %rt_int172 = bitcast %union.rtunion_def* %arrayidx171 to i32*, !dbg !6486
  %88 = load i32, i32* %rt_int172, align 8, !dbg !6486
  %89 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !6488
  %u173 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %89, i32 0, i32 1, !dbg !6488
  %fld174 = bitcast %union.u* %u173 to [1 x %union.rtunion_def]*, !dbg !6488
  %90 = load i32, i32* %i, align 4, !dbg !6488
  %idxprom175 = sext i32 %90 to i64, !dbg !6488
  %arrayidx176 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld174, i64 0, i64 %idxprom175, !dbg !6488
  %rt_int177 = bitcast %union.rtunion_def* %arrayidx176 to i32*, !dbg !6488
  %91 = load i32, i32* %rt_int177, align 8, !dbg !6488
  %cmp178 = icmp slt i32 %88, %91, !dbg !6489
  br i1 %cmp178, label %if.then180, label %if.else181, !dbg !6490

if.then180:                                       ; preds = %if.else167
  store i32 -1, i32* %retval, align 4, !dbg !6491
  br label %return, !dbg !6491

if.else181:                                       ; preds = %if.else167
  store i32 1, i32* %retval, align 4, !dbg !6492
  br label %return, !dbg !6492

sw.bb182:                                         ; preds = %for.body, %for.body
  %92 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6493
  %u183 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %92, i32 0, i32 1, !dbg !6493
  %fld184 = bitcast %union.u* %u183 to [1 x %union.rtunion_def]*, !dbg !6493
  %93 = load i32, i32* %i, align 4, !dbg !6493
  %idxprom185 = sext i32 %93 to i64, !dbg !6493
  %arrayidx186 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld184, i64 0, i64 %idxprom185, !dbg !6493
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx186 to %struct.rtvec_def**, !dbg !6493
  %94 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !6493
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %94, i32 0, i32 0, !dbg !6493
  %95 = load i32, i32* %num_elem, align 8, !dbg !6493
  %96 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !6495
  %u187 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %96, i32 0, i32 1, !dbg !6495
  %fld188 = bitcast %union.u* %u187 to [1 x %union.rtunion_def]*, !dbg !6495
  %97 = load i32, i32* %i, align 4, !dbg !6495
  %idxprom189 = sext i32 %97 to i64, !dbg !6495
  %arrayidx190 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld188, i64 0, i64 %idxprom189, !dbg !6495
  %rt_rtvec191 = bitcast %union.rtunion_def* %arrayidx190 to %struct.rtvec_def**, !dbg !6495
  %98 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec191, align 8, !dbg !6495
  %num_elem192 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %98, i32 0, i32 0, !dbg !6495
  %99 = load i32, i32* %num_elem192, align 8, !dbg !6495
  %cmp193 = icmp eq i32 %95, %99, !dbg !6496
  br i1 %cmp193, label %if.then195, label %if.else196, !dbg !6497

if.then195:                                       ; preds = %sw.bb182
  br label %if.end213, !dbg !6497

if.else196:                                       ; preds = %sw.bb182
  %100 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6498
  %u197 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %100, i32 0, i32 1, !dbg !6498
  %fld198 = bitcast %union.u* %u197 to [1 x %union.rtunion_def]*, !dbg !6498
  %101 = load i32, i32* %i, align 4, !dbg !6498
  %idxprom199 = sext i32 %101 to i64, !dbg !6498
  %arrayidx200 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld198, i64 0, i64 %idxprom199, !dbg !6498
  %rt_rtvec201 = bitcast %union.rtunion_def* %arrayidx200 to %struct.rtvec_def**, !dbg !6498
  %102 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec201, align 8, !dbg !6498
  %num_elem202 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %102, i32 0, i32 0, !dbg !6498
  %103 = load i32, i32* %num_elem202, align 8, !dbg !6498
  %104 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !6500
  %u203 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %104, i32 0, i32 1, !dbg !6500
  %fld204 = bitcast %union.u* %u203 to [1 x %union.rtunion_def]*, !dbg !6500
  %105 = load i32, i32* %i, align 4, !dbg !6500
  %idxprom205 = sext i32 %105 to i64, !dbg !6500
  %arrayidx206 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld204, i64 0, i64 %idxprom205, !dbg !6500
  %rt_rtvec207 = bitcast %union.rtunion_def* %arrayidx206 to %struct.rtvec_def**, !dbg !6500
  %106 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec207, align 8, !dbg !6500
  %num_elem208 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %106, i32 0, i32 0, !dbg !6500
  %107 = load i32, i32* %num_elem208, align 8, !dbg !6500
  %cmp209 = icmp slt i32 %103, %107, !dbg !6501
  br i1 %cmp209, label %if.then211, label %if.else212, !dbg !6502

if.then211:                                       ; preds = %if.else196
  store i32 -1, i32* %retval, align 4, !dbg !6503
  br label %return, !dbg !6503

if.else212:                                       ; preds = %if.else196
  store i32 1, i32* %retval, align 4, !dbg !6504
  br label %return, !dbg !6504

if.end213:                                        ; preds = %if.then195
  store i32 0, i32* %j, align 4, !dbg !6505
  br label %for.cond214, !dbg !6507

for.cond214:                                      ; preds = %for.inc, %if.end213
  %108 = load i32, i32* %j, align 4, !dbg !6508
  %109 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6510
  %u215 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %109, i32 0, i32 1, !dbg !6510
  %fld216 = bitcast %union.u* %u215 to [1 x %union.rtunion_def]*, !dbg !6510
  %110 = load i32, i32* %i, align 4, !dbg !6510
  %idxprom217 = sext i32 %110 to i64, !dbg !6510
  %arrayidx218 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld216, i64 0, i64 %idxprom217, !dbg !6510
  %rt_rtvec219 = bitcast %union.rtunion_def* %arrayidx218 to %struct.rtvec_def**, !dbg !6510
  %111 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec219, align 8, !dbg !6510
  %num_elem220 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %111, i32 0, i32 0, !dbg !6510
  %112 = load i32, i32* %num_elem220, align 8, !dbg !6510
  %cmp221 = icmp slt i32 %108, %112, !dbg !6511
  br i1 %cmp221, label %for.body223, label %for.end, !dbg !6512

for.body223:                                      ; preds = %for.cond214
  %113 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6513
  %u224 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %113, i32 0, i32 1, !dbg !6513
  %fld225 = bitcast %union.u* %u224 to [1 x %union.rtunion_def]*, !dbg !6513
  %114 = load i32, i32* %i, align 4, !dbg !6513
  %idxprom226 = sext i32 %114 to i64, !dbg !6513
  %arrayidx227 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld225, i64 0, i64 %idxprom226, !dbg !6513
  %rt_rtvec228 = bitcast %union.rtunion_def* %arrayidx227 to %struct.rtvec_def**, !dbg !6513
  %115 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec228, align 8, !dbg !6513
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %115, i32 0, i32 1, !dbg !6513
  %116 = load i32, i32* %j, align 4, !dbg !6513
  %idxprom229 = sext i32 %116 to i64, !dbg !6513
  %arrayidx230 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom229, !dbg !6513
  %117 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx230, align 8, !dbg !6513
  %118 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !6515
  %u231 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %118, i32 0, i32 1, !dbg !6515
  %fld232 = bitcast %union.u* %u231 to [1 x %union.rtunion_def]*, !dbg !6515
  %119 = load i32, i32* %i, align 4, !dbg !6515
  %idxprom233 = sext i32 %119 to i64, !dbg !6515
  %arrayidx234 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld232, i64 0, i64 %idxprom233, !dbg !6515
  %rt_rtvec235 = bitcast %union.rtunion_def* %arrayidx234 to %struct.rtvec_def**, !dbg !6515
  %120 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec235, align 8, !dbg !6515
  %elem236 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %120, i32 0, i32 1, !dbg !6515
  %121 = load i32, i32* %j, align 4, !dbg !6515
  %idxprom237 = sext i32 %121 to i64, !dbg !6515
  %arrayidx238 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem236, i64 0, i64 %idxprom237, !dbg !6515
  %122 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx238, align 8, !dbg !6515
  %call239 = call i32 @loc_cmp(%struct.rtx_def* %117, %struct.rtx_def* %122), !dbg !6516
  store i32 %call239, i32* %r, align 4, !dbg !6517
  %tobool240 = icmp ne i32 %call239, 0, !dbg !6517
  br i1 %tobool240, label %if.then241, label %if.end242, !dbg !6518

if.then241:                                       ; preds = %for.body223
  %123 = load i32, i32* %r, align 4, !dbg !6519
  store i32 %123, i32* %retval, align 4, !dbg !6520
  br label %return, !dbg !6520

if.end242:                                        ; preds = %for.body223
  br label %for.inc, !dbg !6521

for.inc:                                          ; preds = %if.end242
  %124 = load i32, i32* %j, align 4, !dbg !6522
  %inc = add nsw i32 %124, 1, !dbg !6522
  store i32 %inc, i32* %j, align 4, !dbg !6522
  br label %for.cond214, !dbg !6523, !llvm.loop !6524

for.end:                                          ; preds = %for.cond214
  br label %sw.epilog, !dbg !6526

sw.bb243:                                         ; preds = %for.body
  %125 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6527
  %u244 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %125, i32 0, i32 1, !dbg !6527
  %fld245 = bitcast %union.u* %u244 to [1 x %union.rtunion_def]*, !dbg !6527
  %126 = load i32, i32* %i, align 4, !dbg !6527
  %idxprom246 = sext i32 %126 to i64, !dbg !6527
  %arrayidx247 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld245, i64 0, i64 %idxprom246, !dbg !6527
  %rt_rtx248 = bitcast %union.rtunion_def* %arrayidx247 to %struct.rtx_def**, !dbg !6527
  %127 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx248, align 8, !dbg !6527
  %128 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !6529
  %u249 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %128, i32 0, i32 1, !dbg !6529
  %fld250 = bitcast %union.u* %u249 to [1 x %union.rtunion_def]*, !dbg !6529
  %129 = load i32, i32* %i, align 4, !dbg !6529
  %idxprom251 = sext i32 %129 to i64, !dbg !6529
  %arrayidx252 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld250, i64 0, i64 %idxprom251, !dbg !6529
  %rt_rtx253 = bitcast %union.rtunion_def* %arrayidx252 to %struct.rtx_def**, !dbg !6529
  %130 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx253, align 8, !dbg !6529
  %call254 = call i32 @loc_cmp(%struct.rtx_def* %127, %struct.rtx_def* %130), !dbg !6530
  store i32 %call254, i32* %r, align 4, !dbg !6531
  %tobool255 = icmp ne i32 %call254, 0, !dbg !6531
  br i1 %tobool255, label %if.then256, label %if.end257, !dbg !6532

if.then256:                                       ; preds = %sw.bb243
  %131 = load i32, i32* %r, align 4, !dbg !6533
  store i32 %131, i32* %retval, align 4, !dbg !6534
  br label %return, !dbg !6534

if.end257:                                        ; preds = %sw.bb243
  br label %sw.epilog, !dbg !6535

sw.bb258:                                         ; preds = %for.body, %for.body
  %132 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6536
  %u259 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %132, i32 0, i32 1, !dbg !6536
  %fld260 = bitcast %union.u* %u259 to [1 x %union.rtunion_def]*, !dbg !6536
  %133 = load i32, i32* %i, align 4, !dbg !6536
  %idxprom261 = sext i32 %133 to i64, !dbg !6536
  %arrayidx262 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld260, i64 0, i64 %idxprom261, !dbg !6536
  %rt_str = bitcast %union.rtunion_def* %arrayidx262 to i8**, !dbg !6536
  %134 = load i8*, i8** %rt_str, align 8, !dbg !6536
  %135 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !6538
  %u263 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %135, i32 0, i32 1, !dbg !6538
  %fld264 = bitcast %union.u* %u263 to [1 x %union.rtunion_def]*, !dbg !6538
  %136 = load i32, i32* %i, align 4, !dbg !6538
  %idxprom265 = sext i32 %136 to i64, !dbg !6538
  %arrayidx266 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld264, i64 0, i64 %idxprom265, !dbg !6538
  %rt_str267 = bitcast %union.rtunion_def* %arrayidx266 to i8**, !dbg !6538
  %137 = load i8*, i8** %rt_str267, align 8, !dbg !6538
  %cmp268 = icmp eq i8* %134, %137, !dbg !6539
  br i1 %cmp268, label %if.then270, label %if.end271, !dbg !6540

if.then270:                                       ; preds = %sw.bb258
  br label %sw.epilog, !dbg !6541

if.end271:                                        ; preds = %sw.bb258
  %138 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6542
  %u272 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %138, i32 0, i32 1, !dbg !6542
  %fld273 = bitcast %union.u* %u272 to [1 x %union.rtunion_def]*, !dbg !6542
  %139 = load i32, i32* %i, align 4, !dbg !6542
  %idxprom274 = sext i32 %139 to i64, !dbg !6542
  %arrayidx275 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld273, i64 0, i64 %idxprom274, !dbg !6542
  %rt_str276 = bitcast %union.rtunion_def* %arrayidx275 to i8**, !dbg !6542
  %140 = load i8*, i8** %rt_str276, align 8, !dbg !6542
  %tobool277 = icmp ne i8* %140, null, !dbg !6542
  br i1 %tobool277, label %if.end279, label %if.then278, !dbg !6544

if.then278:                                       ; preds = %if.end271
  store i32 -1, i32* %retval, align 4, !dbg !6545
  br label %return, !dbg !6545

if.end279:                                        ; preds = %if.end271
  %141 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !6546
  %u280 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %141, i32 0, i32 1, !dbg !6546
  %fld281 = bitcast %union.u* %u280 to [1 x %union.rtunion_def]*, !dbg !6546
  %142 = load i32, i32* %i, align 4, !dbg !6546
  %idxprom282 = sext i32 %142 to i64, !dbg !6546
  %arrayidx283 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld281, i64 0, i64 %idxprom282, !dbg !6546
  %rt_str284 = bitcast %union.rtunion_def* %arrayidx283 to i8**, !dbg !6546
  %143 = load i8*, i8** %rt_str284, align 8, !dbg !6546
  %tobool285 = icmp ne i8* %143, null, !dbg !6546
  br i1 %tobool285, label %if.end287, label %if.then286, !dbg !6548

if.then286:                                       ; preds = %if.end279
  store i32 1, i32* %retval, align 4, !dbg !6549
  br label %return, !dbg !6549

if.end287:                                        ; preds = %if.end279
  %144 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !6550
  %u288 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %144, i32 0, i32 1, !dbg !6550
  %fld289 = bitcast %union.u* %u288 to [1 x %union.rtunion_def]*, !dbg !6550
  %145 = load i32, i32* %i, align 4, !dbg !6550
  %idxprom290 = sext i32 %145 to i64, !dbg !6550
  %arrayidx291 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld289, i64 0, i64 %idxprom290, !dbg !6550
  %rt_str292 = bitcast %union.rtunion_def* %arrayidx291 to i8**, !dbg !6550
  %146 = load i8*, i8** %rt_str292, align 8, !dbg !6550
  %147 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !6552
  %u293 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %147, i32 0, i32 1, !dbg !6552
  %fld294 = bitcast %union.u* %u293 to [1 x %union.rtunion_def]*, !dbg !6552
  %148 = load i32, i32* %i, align 4, !dbg !6552
  %idxprom295 = sext i32 %148 to i64, !dbg !6552
  %arrayidx296 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld294, i64 0, i64 %idxprom295, !dbg !6552
  %rt_str297 = bitcast %union.rtunion_def* %arrayidx296 to i8**, !dbg !6552
  %149 = load i8*, i8** %rt_str297, align 8, !dbg !6552
  %call298 = call i32 @strcmp(i8* %146, i8* %149), !dbg !6553
  store i32 %call298, i32* %r, align 4, !dbg !6554
  %cmp299 = icmp eq i32 %call298, 0, !dbg !6555
  br i1 %cmp299, label %if.then301, label %if.else302, !dbg !6556

if.then301:                                       ; preds = %if.end287
  br label %sw.epilog, !dbg !6557

if.else302:                                       ; preds = %if.end287
  %150 = load i32, i32* %r, align 4, !dbg !6558
  %cmp303 = icmp slt i32 %150, 0, !dbg !6560
  br i1 %cmp303, label %if.then305, label %if.else306, !dbg !6561

if.then305:                                       ; preds = %if.else302
  store i32 -1, i32* %retval, align 4, !dbg !6562
  br label %return, !dbg !6562

if.else306:                                       ; preds = %if.else302
  store i32 1, i32* %retval, align 4, !dbg !6563
  br label %return, !dbg !6563

sw.bb307:                                         ; preds = %for.body
  br label %sw.epilog, !dbg !6564

sw.bb308:                                         ; preds = %for.body, %for.body
  br label %sw.epilog, !dbg !6565

sw.default:                                       ; preds = %for.body
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 2803, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !6566
  br label %sw.epilog, !dbg !6567

sw.epilog:                                        ; preds = %sw.default, %sw.bb308, %sw.bb307, %if.then301, %if.then270, %if.end257, %for.end, %if.then166, %if.then140
  br label %for.inc309, !dbg !6567

for.inc309:                                       ; preds = %sw.epilog
  %151 = load i32, i32* %i, align 4, !dbg !6568
  %inc310 = add nsw i32 %151, 1, !dbg !6568
  store i32 %inc310, i32* %i, align 4, !dbg !6568
  br label %for.cond, !dbg !6569, !llvm.loop !6570

for.end311:                                       ; preds = %for.cond
  store i32 0, i32* %retval, align 4, !dbg !6572
  br label %return, !dbg !6572

return:                                           ; preds = %for.end311, %if.else306, %if.then305, %if.then286, %if.then278, %if.then256, %if.then241, %if.else212, %if.then211, %if.else181, %if.then180, %if.else153, %if.then152, %if.end121, %if.then120, %if.else92, %if.then91, %if.then77, %if.else72, %if.then71, %if.then68, %if.then59, %cond.end48, %if.then37, %if.then28, %if.else23, %if.then22, %if.then18, %if.then8, %if.then
  %152 = load i32, i32* %retval, align 4, !dbg !6573
  ret i32 %152, !dbg !6573
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @shared_var_p(%struct.variable_def* %var, %struct.shared_hash_def* %vars) #0 !dbg !6574 {
entry:
  %var.addr = alloca %struct.variable_def*, align 8
  %vars.addr = alloca %struct.shared_hash_def*, align 8
  store %struct.variable_def* %var, %struct.variable_def** %var.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.variable_def** %var.addr, metadata !6577, metadata !DIExpression()), !dbg !6578
  store %struct.shared_hash_def* %vars, %struct.shared_hash_def** %vars.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.shared_hash_def** %vars.addr, metadata !6579, metadata !DIExpression()), !dbg !6580
  %0 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !6581
  %refcount = getelementptr inbounds %struct.variable_def, %struct.variable_def* %0, i32 0, i32 1, !dbg !6582
  %1 = load i32, i32* %refcount, align 8, !dbg !6582
  %2 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !6583
  %in_changed_variables = getelementptr inbounds %struct.variable_def, %struct.variable_def* %2, i32 0, i32 4, !dbg !6584
  %3 = load i8, i8* %in_changed_variables, align 2, !dbg !6584
  %conv = zext i8 %3 to i32, !dbg !6585
  %add = add nsw i32 1, %conv, !dbg !6586
  %cmp = icmp sgt i32 %1, %add, !dbg !6587
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !6588

lor.rhs:                                          ; preds = %entry
  %4 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars.addr, align 8, !dbg !6589
  %call = call zeroext i8 @shared_hash_shared(%struct.shared_hash_def* %4), !dbg !6590
  %conv2 = zext i8 %call to i32, !dbg !6590
  %tobool = icmp ne i32 %conv2, 0, !dbg !6588
  br label %lor.end, !dbg !6588

lor.end:                                          ; preds = %lor.rhs, %entry
  %5 = phi i1 [ true, %entry ], [ %tobool, %lor.rhs ]
  %lor.ext = zext i1 %5 to i32, !dbg !6588
  %conv3 = trunc i32 %lor.ext to i8, !dbg !6591
  ret i8 %conv3, !dbg !6592
}

; Function Attrs: noinline nounwind uwtable
define internal i8** @unshare_variable(%struct.dataflow_set_def* %set, i8** %slot, %struct.variable_def* %var, i32 %initialized) #0 !dbg !6593 {
entry:
  %set.addr = alloca %struct.dataflow_set_def*, align 8
  %slot.addr = alloca i8**, align 8
  %var.addr = alloca %struct.variable_def*, align 8
  %initialized.addr = alloca i32, align 4
  %new_var = alloca %struct.variable_def*, align 8
  %i = alloca i32, align 4
  %node = alloca %struct.location_chain_def*, align 8
  %nextp = alloca %struct.location_chain_def**, align 8
  %new_lc = alloca %struct.location_chain_def*, align 8
  %cslot = alloca i8**, align 8
  store %struct.dataflow_set_def* %set, %struct.dataflow_set_def** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %set.addr, metadata !6596, metadata !DIExpression()), !dbg !6597
  store i8** %slot, i8*** %slot.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %slot.addr, metadata !6598, metadata !DIExpression()), !dbg !6599
  store %struct.variable_def* %var, %struct.variable_def** %var.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.variable_def** %var.addr, metadata !6600, metadata !DIExpression()), !dbg !6601
  store i32 %initialized, i32* %initialized.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %initialized.addr, metadata !6602, metadata !DIExpression()), !dbg !6603
  call void @llvm.dbg.declare(metadata %struct.variable_def** %new_var, metadata !6604, metadata !DIExpression()), !dbg !6605
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6606, metadata !DIExpression()), !dbg !6607
  %0 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !6608
  %dv = getelementptr inbounds %struct.variable_def, %struct.variable_def* %0, i32 0, i32 0, !dbg !6609
  %1 = load i8*, i8** %dv, align 8, !dbg !6609
  %call = call %struct.alloc_pool_def* @dv_pool(i8* %1), !dbg !6610
  %call1 = call i8* @pool_alloc(%struct.alloc_pool_def* %call), !dbg !6611
  %2 = bitcast i8* %call1 to %struct.variable_def*, !dbg !6612
  store %struct.variable_def* %2, %struct.variable_def** %new_var, align 8, !dbg !6613
  %3 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !6614
  %dv2 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %3, i32 0, i32 0, !dbg !6615
  %4 = load i8*, i8** %dv2, align 8, !dbg !6615
  %5 = load %struct.variable_def*, %struct.variable_def** %new_var, align 8, !dbg !6616
  %dv3 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %5, i32 0, i32 0, !dbg !6617
  store i8* %4, i8** %dv3, align 8, !dbg !6618
  %6 = load %struct.variable_def*, %struct.variable_def** %new_var, align 8, !dbg !6619
  %refcount = getelementptr inbounds %struct.variable_def, %struct.variable_def* %6, i32 0, i32 1, !dbg !6620
  store i32 1, i32* %refcount, align 8, !dbg !6621
  %7 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !6622
  %refcount4 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %7, i32 0, i32 1, !dbg !6623
  %8 = load i32, i32* %refcount4, align 8, !dbg !6624
  %dec = add nsw i32 %8, -1, !dbg !6624
  store i32 %dec, i32* %refcount4, align 8, !dbg !6624
  %9 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !6625
  %n_var_parts = getelementptr inbounds %struct.variable_def, %struct.variable_def* %9, i32 0, i32 2, !dbg !6626
  %10 = load i8, i8* %n_var_parts, align 4, !dbg !6626
  %11 = load %struct.variable_def*, %struct.variable_def** %new_var, align 8, !dbg !6627
  %n_var_parts5 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %11, i32 0, i32 2, !dbg !6628
  store i8 %10, i8* %n_var_parts5, align 4, !dbg !6629
  %12 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !6630
  %cur_loc_changed = getelementptr inbounds %struct.variable_def, %struct.variable_def* %12, i32 0, i32 3, !dbg !6631
  %13 = load i8, i8* %cur_loc_changed, align 1, !dbg !6631
  %14 = load %struct.variable_def*, %struct.variable_def** %new_var, align 8, !dbg !6632
  %cur_loc_changed6 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %14, i32 0, i32 3, !dbg !6633
  store i8 %13, i8* %cur_loc_changed6, align 1, !dbg !6634
  %15 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !6635
  %cur_loc_changed7 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %15, i32 0, i32 3, !dbg !6636
  store i8 0, i8* %cur_loc_changed7, align 1, !dbg !6637
  %16 = load %struct.variable_def*, %struct.variable_def** %new_var, align 8, !dbg !6638
  %in_changed_variables = getelementptr inbounds %struct.variable_def, %struct.variable_def* %16, i32 0, i32 4, !dbg !6639
  store i8 0, i8* %in_changed_variables, align 2, !dbg !6640
  %17 = load i32, i32* @flag_var_tracking_uninit, align 4, !dbg !6641
  %tobool = icmp ne i32 %17, 0, !dbg !6641
  br i1 %tobool, label %if.end, label %if.then, !dbg !6643

if.then:                                          ; preds = %entry
  store i32 2, i32* %initialized.addr, align 4, !dbg !6644
  br label %if.end, !dbg !6645

if.end:                                           ; preds = %if.then, %entry
  store i32 0, i32* %i, align 4, !dbg !6646
  br label %for.cond, !dbg !6648

for.cond:                                         ; preds = %for.inc52, %if.end
  %18 = load i32, i32* %i, align 4, !dbg !6649
  %19 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !6651
  %n_var_parts8 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %19, i32 0, i32 2, !dbg !6652
  %20 = load i8, i8* %n_var_parts8, align 4, !dbg !6652
  %conv = sext i8 %20 to i32, !dbg !6651
  %cmp = icmp slt i32 %18, %conv, !dbg !6653
  br i1 %cmp, label %for.body, label %for.end53, !dbg !6654

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %node, metadata !6655, metadata !DIExpression()), !dbg !6657
  call void @llvm.dbg.declare(metadata %struct.location_chain_def*** %nextp, metadata !6658, metadata !DIExpression()), !dbg !6659
  %21 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !6660
  %var_part = getelementptr inbounds %struct.variable_def, %struct.variable_def* %21, i32 0, i32 5, !dbg !6661
  %22 = load i32, i32* %i, align 4, !dbg !6662
  %idxprom = sext i32 %22 to i64, !dbg !6660
  %arrayidx = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part, i64 0, i64 %idxprom, !dbg !6660
  %offset = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx, i32 0, i32 2, !dbg !6663
  %23 = load i64, i64* %offset, align 8, !dbg !6663
  %24 = load %struct.variable_def*, %struct.variable_def** %new_var, align 8, !dbg !6664
  %var_part10 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %24, i32 0, i32 5, !dbg !6665
  %25 = load i32, i32* %i, align 4, !dbg !6666
  %idxprom11 = sext i32 %25 to i64, !dbg !6664
  %arrayidx12 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part10, i64 0, i64 %idxprom11, !dbg !6664
  %offset13 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx12, i32 0, i32 2, !dbg !6667
  store i64 %23, i64* %offset13, align 8, !dbg !6668
  %26 = load %struct.variable_def*, %struct.variable_def** %new_var, align 8, !dbg !6669
  %var_part14 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %26, i32 0, i32 5, !dbg !6670
  %27 = load i32, i32* %i, align 4, !dbg !6671
  %idxprom15 = sext i32 %27 to i64, !dbg !6669
  %arrayidx16 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part14, i64 0, i64 %idxprom15, !dbg !6669
  %loc_chain = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx16, i32 0, i32 0, !dbg !6672
  store %struct.location_chain_def** %loc_chain, %struct.location_chain_def*** %nextp, align 8, !dbg !6673
  %28 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !6674
  %var_part17 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %28, i32 0, i32 5, !dbg !6676
  %29 = load i32, i32* %i, align 4, !dbg !6677
  %idxprom18 = sext i32 %29 to i64, !dbg !6674
  %arrayidx19 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part17, i64 0, i64 %idxprom18, !dbg !6674
  %loc_chain20 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx19, i32 0, i32 0, !dbg !6678
  %30 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain20, align 8, !dbg !6678
  store %struct.location_chain_def* %30, %struct.location_chain_def** %node, align 8, !dbg !6679
  br label %for.cond21, !dbg !6680

for.cond21:                                       ; preds = %for.inc, %for.body
  %31 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !6681
  %tobool22 = icmp ne %struct.location_chain_def* %31, null, !dbg !6683
  br i1 %tobool22, label %for.body23, label %for.end, !dbg !6683

for.body23:                                       ; preds = %for.cond21
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %new_lc, metadata !6684, metadata !DIExpression()), !dbg !6686
  %32 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @loc_chain_pool, align 8, !dbg !6687
  %call24 = call i8* @pool_alloc(%struct.alloc_pool_def* %32), !dbg !6688
  %33 = bitcast i8* %call24 to %struct.location_chain_def*, !dbg !6689
  store %struct.location_chain_def* %33, %struct.location_chain_def** %new_lc, align 8, !dbg !6690
  %34 = load %struct.location_chain_def*, %struct.location_chain_def** %new_lc, align 8, !dbg !6691
  %next = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %34, i32 0, i32 0, !dbg !6692
  store %struct.location_chain_def* null, %struct.location_chain_def** %next, align 8, !dbg !6693
  %35 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !6694
  %init = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %35, i32 0, i32 3, !dbg !6696
  %36 = load i32, i32* %init, align 8, !dbg !6696
  %37 = load i32, i32* %initialized.addr, align 4, !dbg !6697
  %cmp25 = icmp ugt i32 %36, %37, !dbg !6698
  br i1 %cmp25, label %if.then27, label %if.else, !dbg !6699

if.then27:                                        ; preds = %for.body23
  %38 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !6700
  %init28 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %38, i32 0, i32 3, !dbg !6701
  %39 = load i32, i32* %init28, align 8, !dbg !6701
  %40 = load %struct.location_chain_def*, %struct.location_chain_def** %new_lc, align 8, !dbg !6702
  %init29 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %40, i32 0, i32 3, !dbg !6703
  store i32 %39, i32* %init29, align 8, !dbg !6704
  br label %if.end31, !dbg !6702

if.else:                                          ; preds = %for.body23
  %41 = load i32, i32* %initialized.addr, align 4, !dbg !6705
  %42 = load %struct.location_chain_def*, %struct.location_chain_def** %new_lc, align 8, !dbg !6706
  %init30 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %42, i32 0, i32 3, !dbg !6707
  store i32 %41, i32* %init30, align 8, !dbg !6708
  br label %if.end31

if.end31:                                         ; preds = %if.else, %if.then27
  %43 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !6709
  %set_src = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %43, i32 0, i32 2, !dbg !6711
  %44 = load %struct.rtx_def*, %struct.rtx_def** %set_src, align 8, !dbg !6711
  %tobool32 = icmp ne %struct.rtx_def* %44, null, !dbg !6709
  br i1 %tobool32, label %land.lhs.true, label %if.else39, !dbg !6712

land.lhs.true:                                    ; preds = %if.end31
  %45 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !6713
  %set_src33 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %45, i32 0, i32 2, !dbg !6713
  %46 = load %struct.rtx_def*, %struct.rtx_def** %set_src33, align 8, !dbg !6713
  %47 = bitcast %struct.rtx_def* %46 to i32*, !dbg !6713
  %bf.load = load i32, i32* %47, align 8, !dbg !6713
  %bf.clear = and i32 %bf.load, 65535, !dbg !6713
  %cmp34 = icmp eq i32 %bf.clear, 43, !dbg !6713
  br i1 %cmp34, label %if.else39, label %if.then36, !dbg !6714

if.then36:                                        ; preds = %land.lhs.true
  %48 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !6715
  %set_src37 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %48, i32 0, i32 2, !dbg !6716
  %49 = load %struct.rtx_def*, %struct.rtx_def** %set_src37, align 8, !dbg !6716
  %50 = load %struct.location_chain_def*, %struct.location_chain_def** %new_lc, align 8, !dbg !6717
  %set_src38 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %50, i32 0, i32 2, !dbg !6718
  store %struct.rtx_def* %49, %struct.rtx_def** %set_src38, align 8, !dbg !6719
  br label %if.end41, !dbg !6717

if.else39:                                        ; preds = %land.lhs.true, %if.end31
  %51 = load %struct.location_chain_def*, %struct.location_chain_def** %new_lc, align 8, !dbg !6720
  %set_src40 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %51, i32 0, i32 2, !dbg !6721
  store %struct.rtx_def* null, %struct.rtx_def** %set_src40, align 8, !dbg !6722
  br label %if.end41

if.end41:                                         ; preds = %if.else39, %if.then36
  %52 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !6723
  %loc = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %52, i32 0, i32 1, !dbg !6724
  %53 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !6724
  %54 = load %struct.location_chain_def*, %struct.location_chain_def** %new_lc, align 8, !dbg !6725
  %loc42 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %54, i32 0, i32 1, !dbg !6726
  store %struct.rtx_def* %53, %struct.rtx_def** %loc42, align 8, !dbg !6727
  %55 = load %struct.location_chain_def*, %struct.location_chain_def** %new_lc, align 8, !dbg !6728
  %56 = load %struct.location_chain_def**, %struct.location_chain_def*** %nextp, align 8, !dbg !6729
  store %struct.location_chain_def* %55, %struct.location_chain_def** %56, align 8, !dbg !6730
  %57 = load %struct.location_chain_def*, %struct.location_chain_def** %new_lc, align 8, !dbg !6731
  %next43 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %57, i32 0, i32 0, !dbg !6732
  store %struct.location_chain_def** %next43, %struct.location_chain_def*** %nextp, align 8, !dbg !6733
  br label %for.inc, !dbg !6734

for.inc:                                          ; preds = %if.end41
  %58 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !6735
  %next44 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %58, i32 0, i32 0, !dbg !6736
  %59 = load %struct.location_chain_def*, %struct.location_chain_def** %next44, align 8, !dbg !6736
  store %struct.location_chain_def* %59, %struct.location_chain_def** %node, align 8, !dbg !6737
  br label %for.cond21, !dbg !6738, !llvm.loop !6739

for.end:                                          ; preds = %for.cond21
  %60 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !6741
  %var_part45 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %60, i32 0, i32 5, !dbg !6742
  %61 = load i32, i32* %i, align 4, !dbg !6743
  %idxprom46 = sext i32 %61 to i64, !dbg !6741
  %arrayidx47 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part45, i64 0, i64 %idxprom46, !dbg !6741
  %cur_loc = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx47, i32 0, i32 1, !dbg !6744
  %62 = load %struct.rtx_def*, %struct.rtx_def** %cur_loc, align 8, !dbg !6744
  %63 = load %struct.variable_def*, %struct.variable_def** %new_var, align 8, !dbg !6745
  %var_part48 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %63, i32 0, i32 5, !dbg !6746
  %64 = load i32, i32* %i, align 4, !dbg !6747
  %idxprom49 = sext i32 %64 to i64, !dbg !6745
  %arrayidx50 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part48, i64 0, i64 %idxprom49, !dbg !6745
  %cur_loc51 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx50, i32 0, i32 1, !dbg !6748
  store %struct.rtx_def* %62, %struct.rtx_def** %cur_loc51, align 8, !dbg !6749
  br label %for.inc52, !dbg !6750

for.inc52:                                        ; preds = %for.end
  %65 = load i32, i32* %i, align 4, !dbg !6751
  %inc = add nsw i32 %65, 1, !dbg !6751
  store i32 %inc, i32* %i, align 4, !dbg !6751
  br label %for.cond, !dbg !6752, !llvm.loop !6753

for.end53:                                        ; preds = %for.cond
  store i8 0, i8* @dst_can_be_shared, align 1, !dbg !6755
  %66 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !6756
  %vars = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %66, i32 0, i32 2, !dbg !6758
  %67 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars, align 8, !dbg !6758
  %call54 = call zeroext i8 @shared_hash_shared(%struct.shared_hash_def* %67), !dbg !6759
  %tobool55 = icmp ne i8 %call54, 0, !dbg !6759
  br i1 %tobool55, label %if.then56, label %if.else60, !dbg !6760

if.then56:                                        ; preds = %for.end53
  %68 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !6761
  %vars57 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %68, i32 0, i32 2, !dbg !6762
  %69 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !6763
  %dv58 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %69, i32 0, i32 0, !dbg !6764
  %70 = load i8*, i8** %dv58, align 8, !dbg !6764
  %call59 = call i8** @shared_hash_find_slot_unshare(%struct.shared_hash_def** %vars57, i8* %70, i32 0), !dbg !6765
  store i8** %call59, i8*** %slot.addr, align 8, !dbg !6766
  br label %if.end72, !dbg !6767

if.else60:                                        ; preds = %for.end53
  %71 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !6768
  %traversed_vars = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %71, i32 0, i32 3, !dbg !6770
  %72 = load %struct.shared_hash_def*, %struct.shared_hash_def** %traversed_vars, align 8, !dbg !6770
  %tobool61 = icmp ne %struct.shared_hash_def* %72, null, !dbg !6768
  br i1 %tobool61, label %land.lhs.true62, label %if.end71, !dbg !6771

land.lhs.true62:                                  ; preds = %if.else60
  %73 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !6772
  %vars63 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %73, i32 0, i32 2, !dbg !6773
  %74 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars63, align 8, !dbg !6773
  %75 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !6774
  %traversed_vars64 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %75, i32 0, i32 3, !dbg !6775
  %76 = load %struct.shared_hash_def*, %struct.shared_hash_def** %traversed_vars64, align 8, !dbg !6775
  %cmp65 = icmp ne %struct.shared_hash_def* %74, %76, !dbg !6776
  br i1 %cmp65, label %if.then67, label %if.end71, !dbg !6777

if.then67:                                        ; preds = %land.lhs.true62
  %77 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !6778
  %vars68 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %77, i32 0, i32 2, !dbg !6779
  %78 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars68, align 8, !dbg !6779
  %79 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !6780
  %dv69 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %79, i32 0, i32 0, !dbg !6781
  %80 = load i8*, i8** %dv69, align 8, !dbg !6781
  %call70 = call i8** @shared_hash_find_slot_noinsert(%struct.shared_hash_def* %78, i8* %80), !dbg !6782
  store i8** %call70, i8*** %slot.addr, align 8, !dbg !6783
  br label %if.end71, !dbg !6784

if.end71:                                         ; preds = %if.then67, %land.lhs.true62, %if.else60
  br label %if.end72

if.end72:                                         ; preds = %if.end71, %if.then56
  %81 = load %struct.variable_def*, %struct.variable_def** %new_var, align 8, !dbg !6785
  %82 = bitcast %struct.variable_def* %81 to i8*, !dbg !6785
  %83 = load i8**, i8*** %slot.addr, align 8, !dbg !6786
  store i8* %82, i8** %83, align 8, !dbg !6787
  %84 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !6788
  %in_changed_variables73 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %84, i32 0, i32 4, !dbg !6790
  %85 = load i8, i8* %in_changed_variables73, align 2, !dbg !6790
  %tobool74 = icmp ne i8 %85, 0, !dbg !6788
  br i1 %tobool74, label %if.then75, label %if.end84, !dbg !6791

if.then75:                                        ; preds = %if.end72
  call void @llvm.dbg.declare(metadata i8*** %cslot, metadata !6792, metadata !DIExpression()), !dbg !6794
  %86 = load %struct.htab*, %struct.htab** @changed_variables, align 8, !dbg !6795
  %87 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !6796
  %dv76 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %87, i32 0, i32 0, !dbg !6797
  %88 = load i8*, i8** %dv76, align 8, !dbg !6797
  %89 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !6798
  %dv77 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %89, i32 0, i32 0, !dbg !6799
  %90 = load i8*, i8** %dv77, align 8, !dbg !6799
  %call78 = call i32 @dv_htab_hash(i8* %90), !dbg !6800
  %call79 = call i8** @htab_find_slot_with_hash(%struct.htab* %86, i8* %88, i32 %call78, i32 0), !dbg !6801
  store i8** %call79, i8*** %cslot, align 8, !dbg !6794
  %91 = load i8**, i8*** %cslot, align 8, !dbg !6802
  %92 = load i8*, i8** %91, align 8, !dbg !6802
  %93 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !6802
  %94 = bitcast %struct.variable_def* %93 to i8*, !dbg !6802
  %cmp80 = icmp eq i8* %92, %94, !dbg !6802
  br i1 %cmp80, label %cond.false, label %cond.true, !dbg !6802

cond.true:                                        ; preds = %if.then75
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 1534, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !6802
  br label %cond.end, !dbg !6802

cond.false:                                       ; preds = %if.then75
  br label %cond.end, !dbg !6802

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !6802
  %95 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !6803
  %in_changed_variables82 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %95, i32 0, i32 4, !dbg !6804
  store i8 0, i8* %in_changed_variables82, align 2, !dbg !6805
  %96 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !6806
  %97 = bitcast %struct.variable_def* %96 to i8*, !dbg !6806
  call void @variable_htab_free(i8* %97), !dbg !6807
  %98 = load %struct.variable_def*, %struct.variable_def** %new_var, align 8, !dbg !6808
  %99 = bitcast %struct.variable_def* %98 to i8*, !dbg !6808
  %100 = load i8**, i8*** %cslot, align 8, !dbg !6809
  store i8* %99, i8** %100, align 8, !dbg !6810
  %101 = load %struct.variable_def*, %struct.variable_def** %new_var, align 8, !dbg !6811
  %in_changed_variables83 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %101, i32 0, i32 4, !dbg !6812
  store i8 1, i8* %in_changed_variables83, align 2, !dbg !6813
  br label %if.end84, !dbg !6814

if.end84:                                         ; preds = %cond.end, %if.end72
  %102 = load i8**, i8*** %slot.addr, align 8, !dbg !6815
  ret i8** %102, !dbg !6816
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @find_variable_location_part(%struct.variable_def* %var, i64 %offset, i32* %insertion_point) #0 !dbg !6817 {
entry:
  %retval = alloca i32, align 4
  %var.addr = alloca %struct.variable_def*, align 8
  %offset.addr = alloca i64, align 8
  %insertion_point.addr = alloca i32*, align 8
  %pos = alloca i32, align 4
  %low = alloca i32, align 4
  %high = alloca i32, align 4
  store %struct.variable_def* %var, %struct.variable_def** %var.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.variable_def** %var.addr, metadata !6820, metadata !DIExpression()), !dbg !6821
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !6822, metadata !DIExpression()), !dbg !6823
  store i32* %insertion_point, i32** %insertion_point.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %insertion_point.addr, metadata !6824, metadata !DIExpression()), !dbg !6825
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !6826, metadata !DIExpression()), !dbg !6827
  call void @llvm.dbg.declare(metadata i32* %low, metadata !6828, metadata !DIExpression()), !dbg !6829
  call void @llvm.dbg.declare(metadata i32* %high, metadata !6830, metadata !DIExpression()), !dbg !6831
  store i32 0, i32* %low, align 4, !dbg !6832
  %0 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !6833
  %n_var_parts = getelementptr inbounds %struct.variable_def, %struct.variable_def* %0, i32 0, i32 2, !dbg !6834
  %1 = load i8, i8* %n_var_parts, align 4, !dbg !6834
  %conv = sext i8 %1 to i32, !dbg !6833
  store i32 %conv, i32* %high, align 4, !dbg !6835
  br label %while.cond, !dbg !6836

while.cond:                                       ; preds = %if.end, %entry
  %2 = load i32, i32* %low, align 4, !dbg !6837
  %3 = load i32, i32* %high, align 4, !dbg !6838
  %cmp = icmp ne i32 %2, %3, !dbg !6839
  br i1 %cmp, label %while.body, label %while.end, !dbg !6836

while.body:                                       ; preds = %while.cond
  %4 = load i32, i32* %low, align 4, !dbg !6840
  %5 = load i32, i32* %high, align 4, !dbg !6842
  %add = add nsw i32 %4, %5, !dbg !6843
  %div = sdiv i32 %add, 2, !dbg !6844
  store i32 %div, i32* %pos, align 4, !dbg !6845
  %6 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !6846
  %var_part = getelementptr inbounds %struct.variable_def, %struct.variable_def* %6, i32 0, i32 5, !dbg !6848
  %7 = load i32, i32* %pos, align 4, !dbg !6849
  %idxprom = sext i32 %7 to i64, !dbg !6846
  %arrayidx = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part, i64 0, i64 %idxprom, !dbg !6846
  %offset2 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx, i32 0, i32 2, !dbg !6850
  %8 = load i64, i64* %offset2, align 8, !dbg !6850
  %9 = load i64, i64* %offset.addr, align 8, !dbg !6851
  %cmp3 = icmp slt i64 %8, %9, !dbg !6852
  br i1 %cmp3, label %if.then, label %if.else, !dbg !6853

if.then:                                          ; preds = %while.body
  %10 = load i32, i32* %pos, align 4, !dbg !6854
  %add5 = add nsw i32 %10, 1, !dbg !6855
  store i32 %add5, i32* %low, align 4, !dbg !6856
  br label %if.end, !dbg !6857

if.else:                                          ; preds = %while.body
  %11 = load i32, i32* %pos, align 4, !dbg !6858
  store i32 %11, i32* %high, align 4, !dbg !6859
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %while.cond, !dbg !6836, !llvm.loop !6860

while.end:                                        ; preds = %while.cond
  %12 = load i32, i32* %low, align 4, !dbg !6862
  store i32 %12, i32* %pos, align 4, !dbg !6863
  %13 = load i32*, i32** %insertion_point.addr, align 8, !dbg !6864
  %tobool = icmp ne i32* %13, null, !dbg !6864
  br i1 %tobool, label %if.then6, label %if.end7, !dbg !6866

if.then6:                                         ; preds = %while.end
  %14 = load i32, i32* %pos, align 4, !dbg !6867
  %15 = load i32*, i32** %insertion_point.addr, align 8, !dbg !6868
  store i32 %14, i32* %15, align 4, !dbg !6869
  br label %if.end7, !dbg !6870

if.end7:                                          ; preds = %if.then6, %while.end
  %16 = load i32, i32* %pos, align 4, !dbg !6871
  %17 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !6873
  %n_var_parts8 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %17, i32 0, i32 2, !dbg !6874
  %18 = load i8, i8* %n_var_parts8, align 4, !dbg !6874
  %conv9 = sext i8 %18 to i32, !dbg !6873
  %cmp10 = icmp slt i32 %16, %conv9, !dbg !6875
  br i1 %cmp10, label %land.lhs.true, label %if.end19, !dbg !6876

land.lhs.true:                                    ; preds = %if.end7
  %19 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !6877
  %var_part12 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %19, i32 0, i32 5, !dbg !6878
  %20 = load i32, i32* %pos, align 4, !dbg !6879
  %idxprom13 = sext i32 %20 to i64, !dbg !6877
  %arrayidx14 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part12, i64 0, i64 %idxprom13, !dbg !6877
  %offset15 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx14, i32 0, i32 2, !dbg !6880
  %21 = load i64, i64* %offset15, align 8, !dbg !6880
  %22 = load i64, i64* %offset.addr, align 8, !dbg !6881
  %cmp16 = icmp eq i64 %21, %22, !dbg !6882
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !6883

if.then18:                                        ; preds = %land.lhs.true
  %23 = load i32, i32* %pos, align 4, !dbg !6884
  store i32 %23, i32* %retval, align 4, !dbg !6885
  br label %return, !dbg !6885

if.end19:                                         ; preds = %land.lhs.true, %if.end7
  store i32 -1, i32* %retval, align 4, !dbg !6886
  br label %return, !dbg !6886

return:                                           ; preds = %if.end19, %if.then18
  %24 = load i32, i32* %retval, align 4, !dbg !6887
  ret i32 %24, !dbg !6887
}

declare dso_local i32 @rtx_equal_p(%struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @add_value_chains(i8* %dv, %struct.rtx_def* %loc) #0 !dbg !6888 {
entry:
  %dv.addr = alloca i8*, align 8
  %loc.addr = alloca %struct.rtx_def*, align 8
  store i8* %dv, i8** %dv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dv.addr, metadata !6891, metadata !DIExpression()), !dbg !6892
  store %struct.rtx_def* %loc, %struct.rtx_def** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %loc.addr, metadata !6893, metadata !DIExpression()), !dbg !6894
  %0 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !6895
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !6895
  %bf.load = load i32, i32* %1, align 8, !dbg !6895
  %bf.clear = and i32 %bf.load, 65535, !dbg !6895
  %cmp = icmp eq i32 %bf.clear, 1, !dbg !6897
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6898

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !6899
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !6899
  %bf.load1 = load i32, i32* %3, align 8, !dbg !6899
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !6899
  %cmp3 = icmp eq i32 %bf.clear2, 2, !dbg !6900
  br i1 %cmp3, label %if.then, label %if.end, !dbg !6901

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load i8*, i8** %dv.addr, align 8, !dbg !6902
  %call = call i8* @dv_as_opaque(i8* %4), !dbg !6904
  %call4 = call i32 @add_value_chain(%struct.rtx_def** %loc.addr, i8* %call), !dbg !6905
  br label %return, !dbg !6906

if.end:                                           ; preds = %lor.lhs.false
  %5 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !6907
  %6 = bitcast %struct.rtx_def* %5 to i32*, !dbg !6907
  %bf.load5 = load i32, i32* %6, align 8, !dbg !6907
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !6907
  %cmp7 = icmp eq i32 %bf.clear6, 37, !dbg !6907
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !6909

if.then8:                                         ; preds = %if.end
  br label %return, !dbg !6910

if.end9:                                          ; preds = %if.end
  %7 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !6911
  %8 = bitcast %struct.rtx_def* %7 to i32*, !dbg !6911
  %bf.load10 = load i32, i32* %8, align 8, !dbg !6911
  %bf.clear11 = and i32 %bf.load10, 65535, !dbg !6911
  %cmp12 = icmp eq i32 %bf.clear11, 43, !dbg !6911
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !6913

if.then13:                                        ; preds = %if.end9
  %9 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !6914
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1, !dbg !6914
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !6914
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !6914
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !6914
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6914
  store %struct.rtx_def* %10, %struct.rtx_def** %loc.addr, align 8, !dbg !6915
  br label %if.end14, !dbg !6916

if.end14:                                         ; preds = %if.then13, %if.end9
  %11 = load i8*, i8** %dv.addr, align 8, !dbg !6917
  %call15 = call i8* @dv_as_opaque(i8* %11), !dbg !6918
  %call16 = call i32 @for_each_rtx(%struct.rtx_def** %loc.addr, i32 (%struct.rtx_def**, i8*)* @add_value_chain, i8* %call15), !dbg !6919
  br label %return, !dbg !6920

return:                                           ; preds = %if.end14, %if.then8, %if.then
  ret void, !dbg !6920
}

; Function Attrs: noinline nounwind uwtable
define internal void @variable_was_changed(%struct.variable_def* %var, %struct.dataflow_set_def* %set) #0 !dbg !6921 {
entry:
  %var.addr = alloca %struct.variable_def*, align 8
  %set.addr = alloca %struct.dataflow_set_def*, align 8
  %hash = alloca i32, align 4
  %slot = alloca i8**, align 8
  %old_cur_loc_changed = alloca i8, align 1
  %old_var = alloca %struct.variable_def*, align 8
  %empty_var = alloca %struct.variable_def*, align 8
  %slot37 = alloca i8**, align 8
  store %struct.variable_def* %var, %struct.variable_def** %var.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.variable_def** %var.addr, metadata !6924, metadata !DIExpression()), !dbg !6925
  store %struct.dataflow_set_def* %set, %struct.dataflow_set_def** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %set.addr, metadata !6926, metadata !DIExpression()), !dbg !6927
  call void @llvm.dbg.declare(metadata i32* %hash, metadata !6928, metadata !DIExpression()), !dbg !6929
  %0 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !6930
  %dv = getelementptr inbounds %struct.variable_def, %struct.variable_def* %0, i32 0, i32 0, !dbg !6931
  %1 = load i8*, i8** %dv, align 8, !dbg !6931
  %call = call i32 @dv_htab_hash(i8* %1), !dbg !6932
  store i32 %call, i32* %hash, align 4, !dbg !6929
  %2 = load i8, i8* @emit_notes, align 1, !dbg !6933
  %tobool = icmp ne i8 %2, 0, !dbg !6933
  br i1 %tobool, label %if.then, label %if.else26, !dbg !6935

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8*** %slot, metadata !6936, metadata !DIExpression()), !dbg !6938
  call void @llvm.dbg.declare(metadata i8* %old_cur_loc_changed, metadata !6939, metadata !DIExpression()), !dbg !6940
  store i8 0, i8* %old_cur_loc_changed, align 1, !dbg !6940
  %3 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !6941
  %dv1 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %3, i32 0, i32 0, !dbg !6942
  %4 = load i8*, i8** %dv1, align 8, !dbg !6942
  call void @set_dv_changed(i8* %4, i8 zeroext 1), !dbg !6943
  %5 = load %struct.htab*, %struct.htab** @changed_variables, align 8, !dbg !6944
  %6 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !6945
  %dv2 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %6, i32 0, i32 0, !dbg !6946
  %7 = load i8*, i8** %dv2, align 8, !dbg !6946
  %8 = load i32, i32* %hash, align 4, !dbg !6947
  %call3 = call i8** @htab_find_slot_with_hash(%struct.htab* %5, i8* %7, i32 %8, i32 1), !dbg !6948
  store i8** %call3, i8*** %slot, align 8, !dbg !6949
  %9 = load i8**, i8*** %slot, align 8, !dbg !6950
  %10 = load i8*, i8** %9, align 8, !dbg !6952
  %tobool4 = icmp ne i8* %10, null, !dbg !6952
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !6953

if.then5:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.variable_def** %old_var, metadata !6954, metadata !DIExpression()), !dbg !6956
  %11 = load i8**, i8*** %slot, align 8, !dbg !6957
  %12 = load i8*, i8** %11, align 8, !dbg !6958
  %13 = bitcast i8* %12 to %struct.variable_def*, !dbg !6959
  store %struct.variable_def* %13, %struct.variable_def** %old_var, align 8, !dbg !6956
  %14 = load %struct.variable_def*, %struct.variable_def** %old_var, align 8, !dbg !6960
  %in_changed_variables = getelementptr inbounds %struct.variable_def, %struct.variable_def* %14, i32 0, i32 4, !dbg !6960
  %15 = load i8, i8* %in_changed_variables, align 2, !dbg !6960
  %tobool6 = icmp ne i8 %15, 0, !dbg !6960
  br i1 %tobool6, label %cond.false, label %cond.true, !dbg !6960

cond.true:                                        ; preds = %if.then5
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 6281, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !6960
  br label %cond.end, !dbg !6960

cond.false:                                       ; preds = %if.then5
  br label %cond.end, !dbg !6960

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !6960
  %16 = load %struct.variable_def*, %struct.variable_def** %old_var, align 8, !dbg !6961
  %in_changed_variables7 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %16, i32 0, i32 4, !dbg !6962
  store i8 0, i8* %in_changed_variables7, align 2, !dbg !6963
  %17 = load %struct.variable_def*, %struct.variable_def** %old_var, align 8, !dbg !6964
  %cur_loc_changed = getelementptr inbounds %struct.variable_def, %struct.variable_def* %17, i32 0, i32 3, !dbg !6965
  %18 = load i8, i8* %cur_loc_changed, align 1, !dbg !6965
  store i8 %18, i8* %old_cur_loc_changed, align 1, !dbg !6966
  %19 = load i8**, i8*** %slot, align 8, !dbg !6967
  %20 = load i8*, i8** %19, align 8, !dbg !6968
  call void @variable_htab_free(i8* %20), !dbg !6969
  br label %if.end, !dbg !6970

if.end:                                           ; preds = %cond.end, %if.then
  %21 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !6971
  %tobool8 = icmp ne %struct.dataflow_set_def* %21, null, !dbg !6971
  br i1 %tobool8, label %land.lhs.true, label %if.else, !dbg !6973

land.lhs.true:                                    ; preds = %if.end
  %22 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !6974
  %n_var_parts = getelementptr inbounds %struct.variable_def, %struct.variable_def* %22, i32 0, i32 2, !dbg !6975
  %23 = load i8, i8* %n_var_parts, align 4, !dbg !6975
  %conv = sext i8 %23 to i32, !dbg !6974
  %cmp = icmp eq i32 %conv, 0, !dbg !6976
  br i1 %cmp, label %if.then10, label %if.else, !dbg !6977

if.then10:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.variable_def** %empty_var, metadata !6978, metadata !DIExpression()), !dbg !6980
  %24 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !6981
  %dv11 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %24, i32 0, i32 0, !dbg !6982
  %25 = load i8*, i8** %dv11, align 8, !dbg !6982
  %call12 = call %struct.alloc_pool_def* @dv_pool(i8* %25), !dbg !6983
  %call13 = call i8* @pool_alloc(%struct.alloc_pool_def* %call12), !dbg !6984
  %26 = bitcast i8* %call13 to %struct.variable_def*, !dbg !6985
  store %struct.variable_def* %26, %struct.variable_def** %empty_var, align 8, !dbg !6986
  %27 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !6987
  %dv14 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %27, i32 0, i32 0, !dbg !6988
  %28 = load i8*, i8** %dv14, align 8, !dbg !6988
  %29 = load %struct.variable_def*, %struct.variable_def** %empty_var, align 8, !dbg !6989
  %dv15 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %29, i32 0, i32 0, !dbg !6990
  store i8* %28, i8** %dv15, align 8, !dbg !6991
  %30 = load %struct.variable_def*, %struct.variable_def** %empty_var, align 8, !dbg !6992
  %refcount = getelementptr inbounds %struct.variable_def, %struct.variable_def* %30, i32 0, i32 1, !dbg !6993
  store i32 1, i32* %refcount, align 8, !dbg !6994
  %31 = load %struct.variable_def*, %struct.variable_def** %empty_var, align 8, !dbg !6995
  %n_var_parts16 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %31, i32 0, i32 2, !dbg !6996
  store i8 0, i8* %n_var_parts16, align 4, !dbg !6997
  %32 = load %struct.variable_def*, %struct.variable_def** %empty_var, align 8, !dbg !6998
  %cur_loc_changed17 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %32, i32 0, i32 3, !dbg !6999
  store i8 1, i8* %cur_loc_changed17, align 1, !dbg !7000
  %33 = load %struct.variable_def*, %struct.variable_def** %empty_var, align 8, !dbg !7001
  %in_changed_variables18 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %33, i32 0, i32 4, !dbg !7002
  store i8 1, i8* %in_changed_variables18, align 2, !dbg !7003
  %34 = load %struct.variable_def*, %struct.variable_def** %empty_var, align 8, !dbg !7004
  %35 = bitcast %struct.variable_def* %34 to i8*, !dbg !7004
  %36 = load i8**, i8*** %slot, align 8, !dbg !7005
  store i8* %35, i8** %36, align 8, !dbg !7006
  br label %drop_var, !dbg !7007

if.else:                                          ; preds = %land.lhs.true, %if.end
  %37 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !7008
  %refcount19 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %37, i32 0, i32 1, !dbg !7010
  %38 = load i32, i32* %refcount19, align 8, !dbg !7011
  %inc = add nsw i32 %38, 1, !dbg !7011
  store i32 %inc, i32* %refcount19, align 8, !dbg !7011
  %39 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !7012
  %in_changed_variables20 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %39, i32 0, i32 4, !dbg !7013
  store i8 1, i8* %in_changed_variables20, align 2, !dbg !7014
  %40 = load i8, i8* %old_cur_loc_changed, align 1, !dbg !7015
  %tobool21 = icmp ne i8 %40, 0, !dbg !7015
  br i1 %tobool21, label %if.then22, label %if.end24, !dbg !7017

if.then22:                                        ; preds = %if.else
  %41 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !7018
  %cur_loc_changed23 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %41, i32 0, i32 3, !dbg !7019
  store i8 1, i8* %cur_loc_changed23, align 1, !dbg !7020
  br label %if.end24, !dbg !7018

if.end24:                                         ; preds = %if.then22, %if.else
  %42 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !7021
  %43 = bitcast %struct.variable_def* %42 to i8*, !dbg !7021
  %44 = load i8**, i8*** %slot, align 8, !dbg !7022
  store i8* %43, i8** %44, align 8, !dbg !7023
  br label %if.end25

if.end25:                                         ; preds = %if.end24
  br label %if.end54, !dbg !7024

if.else26:                                        ; preds = %entry
  %45 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !7025
  %tobool27 = icmp ne %struct.dataflow_set_def* %45, null, !dbg !7025
  br i1 %tobool27, label %cond.false29, label %cond.true28, !dbg !7025

cond.true28:                                      ; preds = %if.else26
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 6312, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !7025
  br label %cond.end30, !dbg !7025

cond.false29:                                     ; preds = %if.else26
  br label %cond.end30, !dbg !7025

cond.end30:                                       ; preds = %cond.false29, %cond.true28
  %cond31 = phi i32 [ 0, %cond.true28 ], [ 0, %cond.false29 ], !dbg !7025
  %46 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !7027
  %n_var_parts32 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %46, i32 0, i32 2, !dbg !7029
  %47 = load i8, i8* %n_var_parts32, align 4, !dbg !7029
  %conv33 = sext i8 %47 to i32, !dbg !7027
  %cmp34 = icmp eq i32 %conv33, 0, !dbg !7030
  br i1 %cmp34, label %if.then36, label %if.end53, !dbg !7031

if.then36:                                        ; preds = %cond.end30
  call void @llvm.dbg.declare(metadata i8*** %slot37, metadata !7032, metadata !DIExpression()), !dbg !7034
  br label %drop_var, !dbg !7035

drop_var:                                         ; preds = %if.then36, %if.then10
  call void @llvm.dbg.label(metadata !7036), !dbg !7037
  %48 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !7038
  %vars = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %48, i32 0, i32 2, !dbg !7039
  %49 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars, align 8, !dbg !7039
  %50 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !7040
  %dv38 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %50, i32 0, i32 0, !dbg !7041
  %51 = load i8*, i8** %dv38, align 8, !dbg !7041
  %call39 = call i8** @shared_hash_find_slot_noinsert(%struct.shared_hash_def* %49, i8* %51), !dbg !7042
  store i8** %call39, i8*** %slot37, align 8, !dbg !7043
  %52 = load i8**, i8*** %slot37, align 8, !dbg !7044
  %tobool40 = icmp ne i8** %52, null, !dbg !7044
  br i1 %tobool40, label %if.then41, label %if.end52, !dbg !7046

if.then41:                                        ; preds = %drop_var
  %53 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !7047
  %vars42 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %53, i32 0, i32 2, !dbg !7050
  %54 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars42, align 8, !dbg !7050
  %call43 = call zeroext i8 @shared_hash_shared(%struct.shared_hash_def* %54), !dbg !7051
  %tobool44 = icmp ne i8 %call43, 0, !dbg !7051
  br i1 %tobool44, label %if.then45, label %if.end49, !dbg !7052

if.then45:                                        ; preds = %if.then41
  %55 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !7053
  %vars46 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %55, i32 0, i32 2, !dbg !7054
  %56 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !7055
  %dv47 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %56, i32 0, i32 0, !dbg !7056
  %57 = load i8*, i8** %dv47, align 8, !dbg !7056
  %call48 = call i8** @shared_hash_find_slot_unshare(%struct.shared_hash_def** %vars46, i8* %57, i32 0), !dbg !7057
  store i8** %call48, i8*** %slot37, align 8, !dbg !7058
  br label %if.end49, !dbg !7059

if.end49:                                         ; preds = %if.then45, %if.then41
  %58 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !7060
  %vars50 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %58, i32 0, i32 2, !dbg !7061
  %59 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars50, align 8, !dbg !7061
  %call51 = call %struct.htab* @shared_hash_htab(%struct.shared_hash_def* %59), !dbg !7062
  %60 = load i8**, i8*** %slot37, align 8, !dbg !7063
  call void @htab_clear_slot(%struct.htab* %call51, i8** %60), !dbg !7064
  br label %if.end52, !dbg !7065

if.end52:                                         ; preds = %if.end49, %drop_var
  br label %if.end53, !dbg !7066

if.end53:                                         ; preds = %if.end52, %cond.end30
  br label %if.end54

if.end54:                                         ; preds = %if.end53, %if.end25
  ret void, !dbg !7067
}

declare dso_local i32 @strcmp(i8*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @add_value_chain(%struct.rtx_def** %loc, i8* %dvp) #0 !dbg !7068 {
entry:
  %retval = alloca i32, align 4
  %loc.addr = alloca %struct.rtx_def**, align 8
  %dvp.addr = alloca i8*, align 8
  %dv = alloca i8*, align 8
  %ldv = alloca i8*, align 8
  %vc = alloca %struct.value_chain_def*, align 8
  %nvc = alloca %struct.value_chain_def*, align 8
  %slot = alloca i8**, align 8
  store %struct.rtx_def** %loc, %struct.rtx_def*** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %loc.addr, metadata !7071, metadata !DIExpression()), !dbg !7072
  store i8* %dvp, i8** %dvp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dvp.addr, metadata !7073, metadata !DIExpression()), !dbg !7074
  call void @llvm.dbg.declare(metadata i8** %dv, metadata !7075, metadata !DIExpression()), !dbg !7076
  call void @llvm.dbg.declare(metadata i8** %ldv, metadata !7077, metadata !DIExpression()), !dbg !7078
  call void @llvm.dbg.declare(metadata %struct.value_chain_def** %vc, metadata !7079, metadata !DIExpression()), !dbg !7080
  call void @llvm.dbg.declare(metadata %struct.value_chain_def** %nvc, metadata !7081, metadata !DIExpression()), !dbg !7082
  call void @llvm.dbg.declare(metadata i8*** %slot, metadata !7083, metadata !DIExpression()), !dbg !7084
  %0 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !7085
  %1 = load %struct.rtx_def*, %struct.rtx_def** %0, align 8, !dbg !7085
  %2 = bitcast %struct.rtx_def* %1 to i32*, !dbg !7085
  %bf.load = load i32, i32* %2, align 8, !dbg !7085
  %bf.clear = and i32 %bf.load, 65535, !dbg !7085
  %cmp = icmp eq i32 %bf.clear, 1, !dbg !7087
  br i1 %cmp, label %if.then, label %if.else, !dbg !7088

if.then:                                          ; preds = %entry
  %3 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !7089
  %4 = load %struct.rtx_def*, %struct.rtx_def** %3, align 8, !dbg !7090
  %call = call i8* @dv_from_value(%struct.rtx_def* %4), !dbg !7091
  store i8* %call, i8** %ldv, align 8, !dbg !7092
  br label %if.end7, !dbg !7093

if.else:                                          ; preds = %entry
  %5 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !7094
  %6 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8, !dbg !7094
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !7094
  %bf.load1 = load i32, i32* %7, align 8, !dbg !7094
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !7094
  %cmp3 = icmp eq i32 %bf.clear2, 2, !dbg !7096
  br i1 %cmp3, label %if.then4, label %if.else6, !dbg !7097

if.then4:                                         ; preds = %if.else
  %8 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !7098
  %9 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8, !dbg !7098
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1, !dbg !7098
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !7098
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !7098
  %rt_tree = bitcast %union.rtunion_def* %arrayidx to %union.tree_node**, !dbg !7098
  %10 = load %union.tree_node*, %union.tree_node** %rt_tree, align 8, !dbg !7098
  %call5 = call i8* @dv_from_decl(%union.tree_node* %10), !dbg !7099
  store i8* %call5, i8** %ldv, align 8, !dbg !7100
  br label %if.end, !dbg !7101

if.else6:                                         ; preds = %if.else
  store i32 0, i32* %retval, align 4, !dbg !7102
  br label %return, !dbg !7102

if.end:                                           ; preds = %if.then4
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then
  %11 = load i8*, i8** %ldv, align 8, !dbg !7103
  %call8 = call i8* @dv_as_opaque(i8* %11), !dbg !7105
  %12 = load i8*, i8** %dvp.addr, align 8, !dbg !7106
  %cmp9 = icmp eq i8* %call8, %12, !dbg !7107
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !7108

if.then10:                                        ; preds = %if.end7
  store i32 0, i32* %retval, align 4, !dbg !7109
  br label %return, !dbg !7109

if.end11:                                         ; preds = %if.end7
  %13 = load i8*, i8** %dvp.addr, align 8, !dbg !7110
  store i8* %13, i8** %dv, align 8, !dbg !7111
  %14 = load %struct.htab*, %struct.htab** @value_chains, align 8, !dbg !7112
  %15 = load i8*, i8** %ldv, align 8, !dbg !7113
  %16 = load i8*, i8** %ldv, align 8, !dbg !7114
  %call12 = call i32 @dv_htab_hash(i8* %16), !dbg !7115
  %call13 = call i8** @htab_find_slot_with_hash(%struct.htab* %14, i8* %15, i32 %call12, i32 1), !dbg !7116
  store i8** %call13, i8*** %slot, align 8, !dbg !7117
  %17 = load i8**, i8*** %slot, align 8, !dbg !7118
  %18 = load i8*, i8** %17, align 8, !dbg !7120
  %tobool = icmp ne i8* %18, null, !dbg !7120
  br i1 %tobool, label %if.else17, label %if.then14, !dbg !7121

if.then14:                                        ; preds = %if.end11
  %19 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @value_chain_pool, align 8, !dbg !7122
  %call15 = call i8* @pool_alloc(%struct.alloc_pool_def* %19), !dbg !7124
  %20 = bitcast i8* %call15 to %struct.value_chain_def*, !dbg !7125
  store %struct.value_chain_def* %20, %struct.value_chain_def** %vc, align 8, !dbg !7126
  %21 = load i8*, i8** %ldv, align 8, !dbg !7127
  %22 = load %struct.value_chain_def*, %struct.value_chain_def** %vc, align 8, !dbg !7128
  %dv16 = getelementptr inbounds %struct.value_chain_def, %struct.value_chain_def* %22, i32 0, i32 1, !dbg !7129
  store i8* %21, i8** %dv16, align 8, !dbg !7130
  %23 = load %struct.value_chain_def*, %struct.value_chain_def** %vc, align 8, !dbg !7131
  %next = getelementptr inbounds %struct.value_chain_def, %struct.value_chain_def* %23, i32 0, i32 0, !dbg !7132
  store %struct.value_chain_def* null, %struct.value_chain_def** %next, align 8, !dbg !7133
  %24 = load %struct.value_chain_def*, %struct.value_chain_def** %vc, align 8, !dbg !7134
  %refcount = getelementptr inbounds %struct.value_chain_def, %struct.value_chain_def* %24, i32 0, i32 2, !dbg !7135
  store i32 0, i32* %refcount, align 8, !dbg !7136
  %25 = load %struct.value_chain_def*, %struct.value_chain_def** %vc, align 8, !dbg !7137
  %26 = bitcast %struct.value_chain_def* %25 to i8*, !dbg !7138
  %27 = load i8**, i8*** %slot, align 8, !dbg !7139
  store i8* %26, i8** %27, align 8, !dbg !7140
  br label %if.end31, !dbg !7141

if.else17:                                        ; preds = %if.end11
  %28 = load i8**, i8*** %slot, align 8, !dbg !7142
  %29 = load i8*, i8** %28, align 8, !dbg !7145
  %30 = bitcast i8* %29 to %struct.value_chain_def*, !dbg !7146
  %next18 = getelementptr inbounds %struct.value_chain_def, %struct.value_chain_def* %30, i32 0, i32 0, !dbg !7147
  %31 = load %struct.value_chain_def*, %struct.value_chain_def** %next18, align 8, !dbg !7147
  store %struct.value_chain_def* %31, %struct.value_chain_def** %vc, align 8, !dbg !7148
  br label %for.cond, !dbg !7149

for.cond:                                         ; preds = %for.inc, %if.else17
  %32 = load %struct.value_chain_def*, %struct.value_chain_def** %vc, align 8, !dbg !7150
  %tobool19 = icmp ne %struct.value_chain_def* %32, null, !dbg !7152
  br i1 %tobool19, label %for.body, label %for.end, !dbg !7152

for.body:                                         ; preds = %for.cond
  %33 = load %struct.value_chain_def*, %struct.value_chain_def** %vc, align 8, !dbg !7153
  %dv20 = getelementptr inbounds %struct.value_chain_def, %struct.value_chain_def* %33, i32 0, i32 1, !dbg !7155
  %34 = load i8*, i8** %dv20, align 8, !dbg !7155
  %call21 = call i8* @dv_as_opaque(i8* %34), !dbg !7156
  %35 = load i8*, i8** %dv, align 8, !dbg !7157
  %call22 = call i8* @dv_as_opaque(i8* %35), !dbg !7158
  %cmp23 = icmp eq i8* %call21, %call22, !dbg !7159
  br i1 %cmp23, label %if.then24, label %if.end25, !dbg !7160

if.then24:                                        ; preds = %for.body
  br label %for.end, !dbg !7161

if.end25:                                         ; preds = %for.body
  br label %for.inc, !dbg !7162

for.inc:                                          ; preds = %if.end25
  %36 = load %struct.value_chain_def*, %struct.value_chain_def** %vc, align 8, !dbg !7163
  %next26 = getelementptr inbounds %struct.value_chain_def, %struct.value_chain_def* %36, i32 0, i32 0, !dbg !7164
  %37 = load %struct.value_chain_def*, %struct.value_chain_def** %next26, align 8, !dbg !7164
  store %struct.value_chain_def* %37, %struct.value_chain_def** %vc, align 8, !dbg !7165
  br label %for.cond, !dbg !7166, !llvm.loop !7167

for.end:                                          ; preds = %if.then24, %for.cond
  %38 = load %struct.value_chain_def*, %struct.value_chain_def** %vc, align 8, !dbg !7169
  %tobool27 = icmp ne %struct.value_chain_def* %38, null, !dbg !7169
  br i1 %tobool27, label %if.then28, label %if.end30, !dbg !7171

if.then28:                                        ; preds = %for.end
  %39 = load %struct.value_chain_def*, %struct.value_chain_def** %vc, align 8, !dbg !7172
  %refcount29 = getelementptr inbounds %struct.value_chain_def, %struct.value_chain_def* %39, i32 0, i32 2, !dbg !7174
  %40 = load i32, i32* %refcount29, align 8, !dbg !7175
  %inc = add nsw i32 %40, 1, !dbg !7175
  store i32 %inc, i32* %refcount29, align 8, !dbg !7175
  store i32 0, i32* %retval, align 4, !dbg !7176
  br label %return, !dbg !7176

if.end30:                                         ; preds = %for.end
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.then14
  %41 = load i8**, i8*** %slot, align 8, !dbg !7177
  %42 = load i8*, i8** %41, align 8, !dbg !7178
  %43 = bitcast i8* %42 to %struct.value_chain_def*, !dbg !7179
  store %struct.value_chain_def* %43, %struct.value_chain_def** %vc, align 8, !dbg !7180
  %44 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @value_chain_pool, align 8, !dbg !7181
  %call32 = call i8* @pool_alloc(%struct.alloc_pool_def* %44), !dbg !7182
  %45 = bitcast i8* %call32 to %struct.value_chain_def*, !dbg !7183
  store %struct.value_chain_def* %45, %struct.value_chain_def** %nvc, align 8, !dbg !7184
  %46 = load i8*, i8** %dv, align 8, !dbg !7185
  %47 = load %struct.value_chain_def*, %struct.value_chain_def** %nvc, align 8, !dbg !7186
  %dv33 = getelementptr inbounds %struct.value_chain_def, %struct.value_chain_def* %47, i32 0, i32 1, !dbg !7187
  store i8* %46, i8** %dv33, align 8, !dbg !7188
  %48 = load %struct.value_chain_def*, %struct.value_chain_def** %vc, align 8, !dbg !7189
  %next34 = getelementptr inbounds %struct.value_chain_def, %struct.value_chain_def* %48, i32 0, i32 0, !dbg !7190
  %49 = load %struct.value_chain_def*, %struct.value_chain_def** %next34, align 8, !dbg !7190
  %50 = load %struct.value_chain_def*, %struct.value_chain_def** %nvc, align 8, !dbg !7191
  %next35 = getelementptr inbounds %struct.value_chain_def, %struct.value_chain_def* %50, i32 0, i32 0, !dbg !7192
  store %struct.value_chain_def* %49, %struct.value_chain_def** %next35, align 8, !dbg !7193
  %51 = load %struct.value_chain_def*, %struct.value_chain_def** %nvc, align 8, !dbg !7194
  %refcount36 = getelementptr inbounds %struct.value_chain_def, %struct.value_chain_def* %51, i32 0, i32 2, !dbg !7195
  store i32 1, i32* %refcount36, align 8, !dbg !7196
  %52 = load %struct.value_chain_def*, %struct.value_chain_def** %nvc, align 8, !dbg !7197
  %53 = load %struct.value_chain_def*, %struct.value_chain_def** %vc, align 8, !dbg !7198
  %next37 = getelementptr inbounds %struct.value_chain_def, %struct.value_chain_def* %53, i32 0, i32 0, !dbg !7199
  store %struct.value_chain_def* %52, %struct.value_chain_def** %next37, align 8, !dbg !7200
  store i32 0, i32* %retval, align 4, !dbg !7201
  br label %return, !dbg !7201

return:                                           ; preds = %if.end31, %if.then28, %if.then10, %if.else6
  %54 = load i32, i32* %retval, align 4, !dbg !7202
  ret i32 %54, !dbg !7202
}

declare dso_local i32 @for_each_rtx(%struct.rtx_def**, i32 (%struct.rtx_def**, i8*)*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @set_dv_changed(i8* %dv, i8 zeroext %newv) #0 !dbg !7203 {
entry:
  %dv.addr = alloca i8*, align 8
  %newv.addr = alloca i8, align 1
  store i8* %dv, i8** %dv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dv.addr, metadata !7206, metadata !DIExpression()), !dbg !7207
  store i8 %newv, i8* %newv.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %newv.addr, metadata !7208, metadata !DIExpression()), !dbg !7209
  %0 = load i8*, i8** %dv.addr, align 8, !dbg !7210
  %call = call zeroext i8 @dv_is_value_p(i8* %0), !dbg !7212
  %tobool = icmp ne i8 %call, 0, !dbg !7212
  br i1 %tobool, label %if.then, label %if.else, !dbg !7213

if.then:                                          ; preds = %entry
  %1 = load i8, i8* %newv.addr, align 1, !dbg !7214
  %conv = zext i8 %1 to i32, !dbg !7214
  %2 = load i8*, i8** %dv.addr, align 8, !dbg !7215
  %call1 = call %struct.rtx_def* @dv_as_value(i8* %2), !dbg !7215
  %3 = bitcast %struct.rtx_def* %call1 to i32*, !dbg !7215
  %bf.load = load i32, i32* %3, align 8, !dbg !7216
  %bf.value = and i32 %conv, 1, !dbg !7216
  %bf.shl = shl i32 %bf.value, 30, !dbg !7216
  %bf.clear = and i32 %bf.load, -1073741825, !dbg !7216
  %bf.set = or i32 %bf.clear, %bf.shl, !dbg !7216
  store i32 %bf.set, i32* %3, align 8, !dbg !7216
  br label %if.end, !dbg !7215

if.else:                                          ; preds = %entry
  %4 = load i8, i8* %newv.addr, align 1, !dbg !7217
  %conv2 = zext i8 %4 to i32, !dbg !7217
  %5 = load i8*, i8** %dv.addr, align 8, !dbg !7218
  %call3 = call %union.tree_node* @dv_as_decl(i8* %5), !dbg !7218
  %base = bitcast %union.tree_node* %call3 to %struct.tree_base*, !dbg !7218
  %6 = bitcast %struct.tree_base* %base to i64*, !dbg !7218
  %7 = zext i32 %conv2 to i64, !dbg !7219
  %bf.load4 = load i64, i64* %6, align 8, !dbg !7219
  %bf.value5 = and i64 %7, 1, !dbg !7219
  %bf.shl6 = shl i64 %bf.value5, 40, !dbg !7219
  %bf.clear7 = and i64 %bf.load4, -1099511627777, !dbg !7219
  %bf.set8 = or i64 %bf.clear7, %bf.shl6, !dbg !7219
  store i64 %bf.set8, i64* %6, align 8, !dbg !7219
  %bf.result.cast = trunc i64 %bf.value5 to i32, !dbg !7219
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !7220
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

declare dso_local void @htab_clear_slot(%struct.htab*, i8**) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.edge_def* @single_succ_edge(%struct.basic_block_def* %bb) #0 !dbg !7221 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !7224, metadata !DIExpression()), !dbg !7225
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !7226
  %call = call zeroext i8 @single_succ_p(%struct.basic_block_def* %0), !dbg !7226
  %tobool = icmp ne i8 %call, 0, !dbg !7226
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !7226

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.10, i64 0, i64 0), i32 645, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !7226
  br label %cond.end, !dbg !7226

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7226

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !7226
  %1 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !7227
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %1, i32 0, i32 1, !dbg !7227
  %2 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !7227
  %tobool1 = icmp ne %struct.VEC_edge_gc* %2, null, !dbg !7227
  br i1 %tobool1, label %cond.true2, label %cond.false4, !dbg !7227

cond.true2:                                       ; preds = %cond.end
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !7227
  %succs3 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %3, i32 0, i32 1, !dbg !7227
  %4 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs3, align 8, !dbg !7227
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %4, i32 0, i32 0, !dbg !7227
  br label %cond.end5, !dbg !7227

cond.false4:                                      ; preds = %cond.end
  br label %cond.end5, !dbg !7227

cond.end5:                                        ; preds = %cond.false4, %cond.true2
  %cond6 = phi %struct.VEC_edge_base* [ %base, %cond.true2 ], [ null, %cond.false4 ], !dbg !7227
  %call7 = call %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond6, i32 0), !dbg !7227
  ret %struct.edge_def* %call7, !dbg !7228
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @single_succ_p(%struct.basic_block_def* %bb) #0 !dbg !7229 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !7230, metadata !DIExpression()), !dbg !7231
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !7232
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i32 0, i32 1, !dbg !7232
  %1 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs, align 8, !dbg !7232
  %tobool = icmp ne %struct.VEC_edge_gc* %1, null, !dbg !7232
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7232

cond.true:                                        ; preds = %entry
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !7232
  %succs1 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2, i32 0, i32 1, !dbg !7232
  %3 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %succs1, align 8, !dbg !7232
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %3, i32 0, i32 0, !dbg !7232
  br label %cond.end, !dbg !7232

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7232

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !7232
  %call = call i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond), !dbg !7232
  %cmp = icmp eq i32 %call, 1, !dbg !7233
  %conv = zext i1 %cmp to i32, !dbg !7233
  %conv2 = trunc i32 %conv to i8, !dbg !7232
  ret i8 %conv2, !dbg !7234
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_micro_operation_base_length(%struct.VEC_micro_operation_base* %vec_) #0 !dbg !7235 {
entry:
  %vec_.addr = alloca %struct.VEC_micro_operation_base*, align 8
  store %struct.VEC_micro_operation_base* %vec_, %struct.VEC_micro_operation_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_micro_operation_base** %vec_.addr, metadata !7240, metadata !DIExpression()), !dbg !7241
  %0 = load %struct.VEC_micro_operation_base*, %struct.VEC_micro_operation_base** %vec_.addr, align 8, !dbg !7241
  %tobool = icmp ne %struct.VEC_micro_operation_base* %0, null, !dbg !7241
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7241

cond.true:                                        ; preds = %entry
  %1 = load %struct.VEC_micro_operation_base*, %struct.VEC_micro_operation_base** %vec_.addr, align 8, !dbg !7241
  %num = getelementptr inbounds %struct.VEC_micro_operation_base, %struct.VEC_micro_operation_base* %1, i32 0, i32 0, !dbg !7241
  %2 = load i32, i32* %num, align 8, !dbg !7241
  br label %cond.end, !dbg !7241

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7241

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ 0, %cond.false ], !dbg !7241
  ret i32 %cond, !dbg !7241
}

declare dso_local void @note_uses(%struct.rtx_def**, void (%struct.rtx_def**, i8*)*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @add_uses_1(%struct.rtx_def** %x, i8* %cui) #0 !dbg !7242 {
entry:
  %x.addr = alloca %struct.rtx_def**, align 8
  %cui.addr = alloca i8*, align 8
  store %struct.rtx_def** %x, %struct.rtx_def*** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %x.addr, metadata !7245, metadata !DIExpression()), !dbg !7246
  store i8* %cui, i8** %cui.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cui.addr, metadata !7247, metadata !DIExpression()), !dbg !7248
  %0 = load %struct.rtx_def**, %struct.rtx_def*** %x.addr, align 8, !dbg !7249
  %1 = load i8*, i8** %cui.addr, align 8, !dbg !7250
  %call = call i32 @for_each_rtx(%struct.rtx_def** %0, i32 (%struct.rtx_def**, i8*)* @add_uses, i8* %1), !dbg !7251
  ret void, !dbg !7252
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.micro_operation_def* @VEC_micro_operation_base_address(%struct.VEC_micro_operation_base* %vec_) #0 !dbg !7253 {
entry:
  %vec_.addr = alloca %struct.VEC_micro_operation_base*, align 8
  store %struct.VEC_micro_operation_base* %vec_, %struct.VEC_micro_operation_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_micro_operation_base** %vec_.addr, metadata !7257, metadata !DIExpression()), !dbg !7258
  %0 = load %struct.VEC_micro_operation_base*, %struct.VEC_micro_operation_base** %vec_.addr, align 8, !dbg !7258
  %tobool = icmp ne %struct.VEC_micro_operation_base* %0, null, !dbg !7258
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7258

cond.true:                                        ; preds = %entry
  %1 = load %struct.VEC_micro_operation_base*, %struct.VEC_micro_operation_base** %vec_.addr, align 8, !dbg !7258
  %vec = getelementptr inbounds %struct.VEC_micro_operation_base, %struct.VEC_micro_operation_base* %1, i32 0, i32 2, !dbg !7258
  %arraydecay = getelementptr inbounds [1 x %struct.micro_operation_def], [1 x %struct.micro_operation_def]* %vec, i64 0, i64 0, !dbg !7258
  br label %cond.end, !dbg !7258

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7258

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.micro_operation_def* [ %arraydecay, %cond.true ], [ null, %cond.false ], !dbg !7258
  ret %struct.micro_operation_def* %cond, !dbg !7258
}

declare dso_local void @note_stores(%struct.rtx_def*, void (%struct.rtx_def*, %struct.rtx_def*, i8*)*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @add_stores(%struct.rtx_def* %loc, %struct.rtx_def* %expr, i8* %cuip) #0 !dbg !7259 {
entry:
  %loc.addr = alloca %struct.rtx_def*, align 8
  %expr.addr = alloca %struct.rtx_def*, align 8
  %cuip.addr = alloca i8*, align 8
  %mode = alloca i32, align 4
  %mode2 = alloca i32, align 4
  %cui = alloca %struct.count_use_info*, align 8
  %bb = alloca %struct.basic_block_def*, align 8
  %mo = alloca %struct.micro_operation_def, align 8
  %oloc = alloca %struct.rtx_def*, align 8
  %nloc = alloca %struct.rtx_def*, align 8
  %src = alloca %struct.rtx_def*, align 8
  %type = alloca i32, align 4
  %track_p = alloca i8, align 1
  %v = alloca %struct.cselib_val_struct*, align 8
  %resolve = alloca i8, align 1
  %preserve = alloca i8, align 1
  %reverse = alloca %struct.rtx_def*, align 8
  %xexpr = alloca %struct.rtx_def*, align 8
  %mloc = alloca %struct.rtx_def*, align 8
  %address_mode = alloca i32, align 4
  %val = alloca %struct.cselib_val_struct*, align 8
  %xexpr236 = alloca %struct.rtx_def*, align 8
  %oval = alloca %struct.cselib_val_struct*, align 8
  %moa = alloca %struct.micro_operation_def, align 8
  store %struct.rtx_def* %loc, %struct.rtx_def** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %loc.addr, metadata !7262, metadata !DIExpression()), !dbg !7263
  store %struct.rtx_def* %expr, %struct.rtx_def** %expr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %expr.addr, metadata !7264, metadata !DIExpression()), !dbg !7265
  store i8* %cuip, i8** %cuip.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %cuip.addr, metadata !7266, metadata !DIExpression()), !dbg !7267
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !7268, metadata !DIExpression()), !dbg !7269
  store i32 0, i32* %mode, align 4, !dbg !7269
  call void @llvm.dbg.declare(metadata i32* %mode2, metadata !7270, metadata !DIExpression()), !dbg !7271
  call void @llvm.dbg.declare(metadata %struct.count_use_info** %cui, metadata !7272, metadata !DIExpression()), !dbg !7273
  %0 = load i8*, i8** %cuip.addr, align 8, !dbg !7274
  %1 = bitcast i8* %0 to %struct.count_use_info*, !dbg !7275
  store %struct.count_use_info* %1, %struct.count_use_info** %cui, align 8, !dbg !7273
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !7276, metadata !DIExpression()), !dbg !7277
  %2 = load %struct.count_use_info*, %struct.count_use_info** %cui, align 8, !dbg !7278
  %bb1 = getelementptr inbounds %struct.count_use_info, %struct.count_use_info* %2, i32 0, i32 1, !dbg !7279
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %bb1, align 8, !dbg !7279
  store %struct.basic_block_def* %3, %struct.basic_block_def** %bb, align 8, !dbg !7277
  call void @llvm.dbg.declare(metadata %struct.micro_operation_def* %mo, metadata !7280, metadata !DIExpression()), !dbg !7281
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %oloc, metadata !7282, metadata !DIExpression()), !dbg !7283
  %4 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !7284
  store %struct.rtx_def* %4, %struct.rtx_def** %oloc, align 8, !dbg !7283
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %nloc, metadata !7285, metadata !DIExpression()), !dbg !7286
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %src, metadata !7287, metadata !DIExpression()), !dbg !7288
  store %struct.rtx_def* null, %struct.rtx_def** %src, align 8, !dbg !7288
  call void @llvm.dbg.declare(metadata i32* %type, metadata !7289, metadata !DIExpression()), !dbg !7290
  %5 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !7291
  %6 = load %struct.count_use_info*, %struct.count_use_info** %cui, align 8, !dbg !7292
  %call = call i32 @use_type(%struct.rtx_def* %5, %struct.count_use_info* %6, i32* %mode), !dbg !7293
  store i32 %call, i32* %type, align 4, !dbg !7290
  call void @llvm.dbg.declare(metadata i8* %track_p, metadata !7294, metadata !DIExpression()), !dbg !7295
  store i8 0, i8* %track_p, align 1, !dbg !7295
  call void @llvm.dbg.declare(metadata %struct.cselib_val_struct** %v, metadata !7296, metadata !DIExpression()), !dbg !7297
  call void @llvm.dbg.declare(metadata i8* %resolve, metadata !7298, metadata !DIExpression()), !dbg !7299
  call void @llvm.dbg.declare(metadata i8* %preserve, metadata !7300, metadata !DIExpression()), !dbg !7301
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %reverse, metadata !7302, metadata !DIExpression()), !dbg !7303
  %7 = load i32, i32* %type, align 4, !dbg !7304
  %cmp = icmp eq i32 %7, 7, !dbg !7306
  br i1 %cmp, label %if.then, label %if.end, !dbg !7307

if.then:                                          ; preds = %entry
  br label %return, !dbg !7308

if.end:                                           ; preds = %entry
  %8 = load i32, i32* %mode, align 4, !dbg !7309
  store i32 %8, i32* %mode2, align 4, !dbg !7310
  %9 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !7311
  %10 = bitcast %struct.rtx_def* %9 to i32*, !dbg !7311
  %bf.load = load i32, i32* %10, align 8, !dbg !7311
  %bf.clear = and i32 %bf.load, 65535, !dbg !7311
  %cmp2 = icmp eq i32 %bf.clear, 37, !dbg !7311
  br i1 %cmp2, label %if.then3, label %if.else83, !dbg !7313

if.then3:                                         ; preds = %if.end
  %11 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !7314
  %12 = load %struct.rtx_def*, %struct.rtx_def** @cfa_base_rtx, align 8, !dbg !7314
  %cmp4 = icmp ne %struct.rtx_def* %11, %12, !dbg !7314
  br i1 %cmp4, label %cond.false, label %cond.true, !dbg !7314

cond.true:                                        ; preds = %if.then3
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 5227, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !7314
  br label %cond.end, !dbg !7314

cond.false:                                       ; preds = %if.then3
  br label %cond.end, !dbg !7314

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !7314
  %13 = load %struct.rtx_def*, %struct.rtx_def** %expr.addr, align 8, !dbg !7316
  %14 = bitcast %struct.rtx_def* %13 to i32*, !dbg !7316
  %bf.load5 = load i32, i32* %14, align 8, !dbg !7316
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !7316
  %cmp7 = icmp eq i32 %bf.clear6, 25, !dbg !7318
  br i1 %cmp7, label %land.lhs.true, label %lor.lhs.false, !dbg !7319

land.lhs.true:                                    ; preds = %cond.end
  %15 = load i32, i32* %type, align 4, !dbg !7320
  %cmp8 = icmp ne i32 %15, 4, !dbg !7321
  br i1 %cmp8, label %if.then17, label %lor.lhs.false, !dbg !7322

lor.lhs.false:                                    ; preds = %land.lhs.true, %cond.end
  %16 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !7323
  %call9 = call i32 @use_type(%struct.rtx_def* %16, %struct.count_use_info* null, i32* %mode2), !dbg !7324
  %cmp10 = icmp eq i32 %call9, 0, !dbg !7325
  %conv = zext i1 %cmp10 to i32, !dbg !7325
  %conv11 = trunc i32 %conv to i8, !dbg !7324
  store i8 %conv11, i8* %track_p, align 1, !dbg !7326
  %tobool = icmp ne i8 %conv11, 0, !dbg !7326
  br i1 %tobool, label %lor.lhs.false12, label %if.then17, !dbg !7327

lor.lhs.false12:                                  ; preds = %lor.lhs.false
  %17 = load %struct.rtx_def*, %struct.rtx_def** %expr.addr, align 8, !dbg !7328
  %18 = bitcast %struct.rtx_def* %17 to i32*, !dbg !7328
  %bf.load13 = load i32, i32* %18, align 8, !dbg !7328
  %bf.clear14 = and i32 %bf.load13, 65535, !dbg !7328
  %cmp15 = icmp eq i32 %bf.clear14, 25, !dbg !7329
  br i1 %cmp15, label %if.then17, label %if.else, !dbg !7330

if.then17:                                        ; preds = %lor.lhs.false12, %lor.lhs.false, %land.lhs.true
  %type18 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 0, !dbg !7331
  store i32 7, i32* %type18, align 8, !dbg !7333
  %19 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !7334
  %u = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 2, !dbg !7335
  %loc19 = bitcast %union.anon.0* %u to %struct.rtx_def**, !dbg !7336
  store %struct.rtx_def* %19, %struct.rtx_def** %loc19, align 8, !dbg !7337
  br label %if.end81, !dbg !7338

if.else:                                          ; preds = %lor.lhs.false12
  %20 = load %struct.rtx_def*, %struct.rtx_def** %expr.addr, align 8, !dbg !7339
  %21 = bitcast %struct.rtx_def* %20 to i32*, !dbg !7339
  %bf.load20 = load i32, i32* %21, align 8, !dbg !7339
  %bf.clear21 = and i32 %bf.load20, 65535, !dbg !7339
  %cmp22 = icmp eq i32 %bf.clear21, 23, !dbg !7342
  br i1 %cmp22, label %land.lhs.true24, label %if.end34, !dbg !7343

land.lhs.true24:                                  ; preds = %if.else
  %22 = load %struct.rtx_def*, %struct.rtx_def** %expr.addr, align 8, !dbg !7344
  %u25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1, !dbg !7344
  %fld = bitcast %union.u* %u25 to [1 x %union.rtunion_def]*, !dbg !7344
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !7344
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !7344
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7344
  %24 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !7345
  %cmp26 = icmp eq %struct.rtx_def* %23, %24, !dbg !7346
  br i1 %cmp26, label %if.then28, label %if.end34, !dbg !7347

if.then28:                                        ; preds = %land.lhs.true24
  %25 = load i32, i32* %mode2, align 4, !dbg !7348
  %26 = load %struct.rtx_def*, %struct.rtx_def** %expr.addr, align 8, !dbg !7349
  %u29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1, !dbg !7349
  %fld30 = bitcast %union.u* %u29 to [1 x %union.rtunion_def]*, !dbg !7349
  %arrayidx31 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld30, i64 0, i64 1, !dbg !7349
  %rt_rtx32 = bitcast %union.rtunion_def* %arrayidx31 to %struct.rtx_def**, !dbg !7349
  %27 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx32, align 8, !dbg !7349
  %call33 = call %struct.rtx_def* @var_lowpart(i32 %25, %struct.rtx_def* %27), !dbg !7350
  store %struct.rtx_def* %call33, %struct.rtx_def** %src, align 8, !dbg !7351
  br label %if.end34, !dbg !7352

if.end34:                                         ; preds = %if.then28, %land.lhs.true24, %if.else
  %28 = load i32, i32* %mode2, align 4, !dbg !7353
  %29 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !7354
  %call35 = call %struct.rtx_def* @var_lowpart(i32 %28, %struct.rtx_def* %29), !dbg !7355
  store %struct.rtx_def* %call35, %struct.rtx_def** %loc.addr, align 8, !dbg !7356
  %30 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8, !dbg !7357
  %cmp36 = icmp eq %struct.rtx_def* %30, null, !dbg !7359
  br i1 %cmp36, label %if.then38, label %if.else42, !dbg !7360

if.then38:                                        ; preds = %if.end34
  %type39 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 0, !dbg !7361
  store i32 5, i32* %type39, align 8, !dbg !7363
  %31 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !7364
  %u40 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 2, !dbg !7365
  %loc41 = bitcast %union.anon.0* %u40 to %struct.rtx_def**, !dbg !7366
  store %struct.rtx_def* %31, %struct.rtx_def** %loc41, align 8, !dbg !7367
  br label %if.end80, !dbg !7368

if.else42:                                        ; preds = %if.end34
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %xexpr, metadata !7369, metadata !DIExpression()), !dbg !7371
  %32 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !7372
  %33 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8, !dbg !7372
  %call43 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 23, i32 0, %struct.rtx_def* %32, %struct.rtx_def* %33), !dbg !7372
  store %struct.rtx_def* %call43, %struct.rtx_def** %xexpr, align 8, !dbg !7371
  %34 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8, !dbg !7373
  %35 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !7375
  %u44 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1, !dbg !7375
  %fld45 = bitcast %union.u* %u44 to [1 x %union.rtunion_def]*, !dbg !7375
  %arrayidx46 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld45, i64 0, i64 2, !dbg !7375
  %rt_reg = bitcast %union.rtunion_def* %arrayidx46 to %struct.reg_attrs**, !dbg !7375
  %36 = load %struct.reg_attrs*, %struct.reg_attrs** %rt_reg, align 8, !dbg !7375
  %cmp47 = icmp eq %struct.reg_attrs* %36, null, !dbg !7375
  br i1 %cmp47, label %cond.true49, label %cond.false50, !dbg !7375

cond.true49:                                      ; preds = %if.else42
  br label %cond.end55, !dbg !7375

cond.false50:                                     ; preds = %if.else42
  %37 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !7375
  %u51 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1, !dbg !7375
  %fld52 = bitcast %union.u* %u51 to [1 x %union.rtunion_def]*, !dbg !7375
  %arrayidx53 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld52, i64 0, i64 2, !dbg !7375
  %rt_reg54 = bitcast %union.rtunion_def* %arrayidx53 to %struct.reg_attrs**, !dbg !7375
  %38 = load %struct.reg_attrs*, %struct.reg_attrs** %rt_reg54, align 8, !dbg !7375
  %decl = getelementptr inbounds %struct.reg_attrs, %struct.reg_attrs* %38, i32 0, i32 0, !dbg !7375
  %39 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !7375
  br label %cond.end55, !dbg !7375

cond.end55:                                       ; preds = %cond.false50, %cond.true49
  %cond56 = phi %union.tree_node* [ null, %cond.true49 ], [ %39, %cond.false50 ], !dbg !7375
  %40 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !7376
  %u57 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i32 0, i32 1, !dbg !7376
  %fld58 = bitcast %union.u* %u57 to [1 x %union.rtunion_def]*, !dbg !7376
  %arrayidx59 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld58, i64 0, i64 2, !dbg !7376
  %rt_reg60 = bitcast %union.rtunion_def* %arrayidx59 to %struct.reg_attrs**, !dbg !7376
  %41 = load %struct.reg_attrs*, %struct.reg_attrs** %rt_reg60, align 8, !dbg !7376
  %cmp61 = icmp eq %struct.reg_attrs* %41, null, !dbg !7376
  br i1 %cmp61, label %cond.true63, label %cond.false64, !dbg !7376

cond.true63:                                      ; preds = %cond.end55
  br label %cond.end69, !dbg !7376

cond.false64:                                     ; preds = %cond.end55
  %42 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !7376
  %u65 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %42, i32 0, i32 1, !dbg !7376
  %fld66 = bitcast %union.u* %u65 to [1 x %union.rtunion_def]*, !dbg !7376
  %arrayidx67 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld66, i64 0, i64 2, !dbg !7376
  %rt_reg68 = bitcast %union.rtunion_def* %arrayidx67 to %struct.reg_attrs**, !dbg !7376
  %43 = load %struct.reg_attrs*, %struct.reg_attrs** %rt_reg68, align 8, !dbg !7376
  %offset = getelementptr inbounds %struct.reg_attrs, %struct.reg_attrs* %43, i32 0, i32 1, !dbg !7376
  %44 = load i64, i64* %offset, align 8, !dbg !7376
  br label %cond.end69, !dbg !7376

cond.end69:                                       ; preds = %cond.false64, %cond.true63
  %cond70 = phi i64 [ 0, %cond.true63 ], [ %44, %cond.false64 ], !dbg !7376
  %call71 = call zeroext i8 @same_variable_part_p(%struct.rtx_def* %34, %union.tree_node* %cond56, i64 %cond70), !dbg !7377
  %tobool72 = icmp ne i8 %call71, 0, !dbg !7377
  br i1 %tobool72, label %if.then73, label %if.else75, !dbg !7378

if.then73:                                        ; preds = %cond.end69
  %type74 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 0, !dbg !7379
  store i32 6, i32* %type74, align 8, !dbg !7380
  br label %if.end77, !dbg !7381

if.else75:                                        ; preds = %cond.end69
  %type76 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 0, !dbg !7382
  store i32 5, i32* %type76, align 8, !dbg !7383
  br label %if.end77

if.end77:                                         ; preds = %if.else75, %if.then73
  %45 = load %struct.rtx_def*, %struct.rtx_def** %xexpr, align 8, !dbg !7384
  %u78 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 2, !dbg !7385
  %loc79 = bitcast %union.anon.0* %u78 to %struct.rtx_def**, !dbg !7386
  store %struct.rtx_def* %45, %struct.rtx_def** %loc79, align 8, !dbg !7387
  br label %if.end80

if.end80:                                         ; preds = %if.end77, %if.then38
  br label %if.end81

if.end81:                                         ; preds = %if.end80, %if.then17
  %46 = load %struct.count_use_info*, %struct.count_use_info** %cui, align 8, !dbg !7388
  %insn = getelementptr inbounds %struct.count_use_info, %struct.count_use_info* %46, i32 0, i32 0, !dbg !7389
  %47 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7389
  %insn82 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 1, !dbg !7390
  store %struct.rtx_def* %47, %struct.rtx_def** %insn82, align 8, !dbg !7391
  br label %if.end306, !dbg !7392

if.else83:                                        ; preds = %if.end
  %48 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !7393
  %49 = bitcast %struct.rtx_def* %48 to i32*, !dbg !7393
  %bf.load84 = load i32, i32* %49, align 8, !dbg !7393
  %bf.clear85 = and i32 %bf.load84, 65535, !dbg !7393
  %cmp86 = icmp eq i32 %bf.clear85, 43, !dbg !7393
  br i1 %cmp86, label %land.lhs.true88, label %if.else304, !dbg !7395

land.lhs.true88:                                  ; preds = %if.else83
  %50 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !7396
  %call89 = call i32 @use_type(%struct.rtx_def* %50, %struct.count_use_info* null, i32* %mode2), !dbg !7397
  %cmp90 = icmp eq i32 %call89, 0, !dbg !7398
  %conv91 = zext i1 %cmp90 to i32, !dbg !7398
  %conv92 = trunc i32 %conv91 to i8, !dbg !7397
  store i8 %conv92, i8* %track_p, align 1, !dbg !7399
  %conv93 = zext i8 %conv92 to i32, !dbg !7400
  %tobool94 = icmp ne i32 %conv93, 0, !dbg !7400
  br i1 %tobool94, label %if.then97, label %lor.lhs.false95, !dbg !7401

lor.lhs.false95:                                  ; preds = %land.lhs.true88
  %51 = load %struct.count_use_info*, %struct.count_use_info** %cui, align 8, !dbg !7402
  %sets = getelementptr inbounds %struct.count_use_info, %struct.count_use_info* %51, i32 0, i32 2, !dbg !7403
  %52 = load %struct.cselib_set*, %struct.cselib_set** %sets, align 8, !dbg !7403
  %tobool96 = icmp ne %struct.cselib_set* %52, null, !dbg !7402
  br i1 %tobool96, label %if.then97, label %if.else304, !dbg !7404

if.then97:                                        ; preds = %lor.lhs.false95, %land.lhs.true88
  %53 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !7405
  %54 = bitcast %struct.rtx_def* %53 to i32*, !dbg !7405
  %bf.load98 = load i32, i32* %54, align 8, !dbg !7405
  %bf.clear99 = and i32 %bf.load98, 65535, !dbg !7405
  %cmp100 = icmp eq i32 %bf.clear99, 43, !dbg !7405
  br i1 %cmp100, label %land.lhs.true102, label %if.end191, !dbg !7408

land.lhs.true102:                                 ; preds = %if.then97
  %55 = load i32, i32* %type, align 4, !dbg !7409
  %cmp103 = icmp eq i32 %55, 4, !dbg !7410
  br i1 %cmp103, label %land.lhs.true105, label %if.end191, !dbg !7411

land.lhs.true105:                                 ; preds = %land.lhs.true102
  %56 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !7412
  %u106 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %56, i32 0, i32 1, !dbg !7412
  %fld107 = bitcast %union.u* %u106 to [1 x %union.rtunion_def]*, !dbg !7412
  %arrayidx108 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld107, i64 0, i64 0, !dbg !7412
  %rt_rtx109 = bitcast %union.rtunion_def* %arrayidx108 to %struct.rtx_def**, !dbg !7412
  %57 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx109, align 8, !dbg !7412
  %58 = bitcast %struct.rtx_def* %57 to i32*, !dbg !7412
  %bf.load110 = load i32, i32* %58, align 8, !dbg !7412
  %bf.clear111 = and i32 %bf.load110, 65535, !dbg !7412
  %cmp112 = icmp eq i32 %bf.clear111, 37, !dbg !7412
  br i1 %cmp112, label %if.end191, label %land.lhs.true114, !dbg !7413

land.lhs.true114:                                 ; preds = %land.lhs.true105
  %59 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !7414
  %u115 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %59, i32 0, i32 1, !dbg !7414
  %fld116 = bitcast %union.u* %u115 to [1 x %union.rtunion_def]*, !dbg !7414
  %arrayidx117 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld116, i64 0, i64 0, !dbg !7414
  %rt_rtx118 = bitcast %union.rtunion_def* %arrayidx117 to %struct.rtx_def**, !dbg !7414
  %60 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx118, align 8, !dbg !7414
  %61 = bitcast %struct.rtx_def* %60 to i32*, !dbg !7414
  %bf.load119 = load i32, i32* %61, align 8, !dbg !7414
  %bf.clear120 = and i32 %bf.load119, 65535, !dbg !7414
  %cmp121 = icmp eq i32 %bf.clear120, 43, !dbg !7414
  br i1 %cmp121, label %if.end191, label %land.lhs.true123, !dbg !7415

land.lhs.true123:                                 ; preds = %land.lhs.true114
  %62 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !7416
  %u124 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %62, i32 0, i32 1, !dbg !7416
  %fld125 = bitcast %union.u* %u124 to [1 x %union.rtunion_def]*, !dbg !7416
  %arrayidx126 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld125, i64 0, i64 0, !dbg !7416
  %rt_rtx127 = bitcast %union.rtunion_def* %arrayidx126 to %struct.rtx_def**, !dbg !7416
  %63 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx127, align 8, !dbg !7416
  %64 = bitcast %struct.rtx_def* %63 to i32*, !dbg !7416
  %bf.load128 = load i32, i32* %64, align 8, !dbg !7416
  %bf.clear129 = and i32 %bf.load128, 65535, !dbg !7416
  %cmp130 = icmp ne i32 %bf.clear129, 49, !dbg !7417
  br i1 %cmp130, label %if.then156, label %lor.lhs.false132, !dbg !7418

lor.lhs.false132:                                 ; preds = %land.lhs.true123
  %65 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !7419
  %u133 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %65, i32 0, i32 1, !dbg !7419
  %fld134 = bitcast %union.u* %u133 to [1 x %union.rtunion_def]*, !dbg !7419
  %arrayidx135 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld134, i64 0, i64 0, !dbg !7419
  %rt_rtx136 = bitcast %union.rtunion_def* %arrayidx135 to %struct.rtx_def**, !dbg !7419
  %66 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx136, align 8, !dbg !7419
  %u137 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %66, i32 0, i32 1, !dbg !7419
  %fld138 = bitcast %union.u* %u137 to [1 x %union.rtunion_def]*, !dbg !7419
  %arrayidx139 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld138, i64 0, i64 0, !dbg !7419
  %rt_rtx140 = bitcast %union.rtunion_def* %arrayidx139 to %struct.rtx_def**, !dbg !7419
  %67 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx140, align 8, !dbg !7419
  %68 = load %struct.rtx_def*, %struct.rtx_def** @cfa_base_rtx, align 8, !dbg !7420
  %cmp141 = icmp ne %struct.rtx_def* %67, %68, !dbg !7421
  br i1 %cmp141, label %if.then156, label %lor.lhs.false143, !dbg !7422

lor.lhs.false143:                                 ; preds = %lor.lhs.false132
  %69 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !7423
  %u144 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %69, i32 0, i32 1, !dbg !7423
  %fld145 = bitcast %union.u* %u144 to [1 x %union.rtunion_def]*, !dbg !7423
  %arrayidx146 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld145, i64 0, i64 0, !dbg !7423
  %rt_rtx147 = bitcast %union.rtunion_def* %arrayidx146 to %struct.rtx_def**, !dbg !7423
  %70 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx147, align 8, !dbg !7423
  %u148 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %70, i32 0, i32 1, !dbg !7423
  %fld149 = bitcast %union.u* %u148 to [1 x %union.rtunion_def]*, !dbg !7423
  %arrayidx150 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld149, i64 0, i64 1, !dbg !7423
  %rt_rtx151 = bitcast %union.rtunion_def* %arrayidx150 to %struct.rtx_def**, !dbg !7423
  %71 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx151, align 8, !dbg !7423
  %72 = bitcast %struct.rtx_def* %71 to i32*, !dbg !7423
  %bf.load152 = load i32, i32* %72, align 8, !dbg !7423
  %bf.clear153 = and i32 %bf.load152, 65535, !dbg !7423
  %cmp154 = icmp eq i32 %bf.clear153, 30, !dbg !7423
  br i1 %cmp154, label %if.end191, label %if.then156, !dbg !7424

if.then156:                                       ; preds = %lor.lhs.false143, %lor.lhs.false132, %land.lhs.true123
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %mloc, metadata !7425, metadata !DIExpression()), !dbg !7427
  %73 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !7428
  store %struct.rtx_def* %73, %struct.rtx_def** %mloc, align 8, !dbg !7427
  call void @llvm.dbg.declare(metadata i32* %address_mode, metadata !7429, metadata !DIExpression()), !dbg !7430
  %74 = load %struct.rtx_def*, %struct.rtx_def** %mloc, align 8, !dbg !7431
  %call157 = call i32 @get_address_mode(%struct.rtx_def* %74), !dbg !7432
  store i32 %call157, i32* %address_mode, align 4, !dbg !7430
  call void @llvm.dbg.declare(metadata %struct.cselib_val_struct** %val, metadata !7433, metadata !DIExpression()), !dbg !7434
  %75 = load %struct.rtx_def*, %struct.rtx_def** %mloc, align 8, !dbg !7435
  %u158 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %75, i32 0, i32 1, !dbg !7435
  %fld159 = bitcast %union.u* %u158 to [1 x %union.rtunion_def]*, !dbg !7435
  %arrayidx160 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld159, i64 0, i64 0, !dbg !7435
  %rt_rtx161 = bitcast %union.rtunion_def* %arrayidx160 to %struct.rtx_def**, !dbg !7435
  %76 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx161, align 8, !dbg !7435
  %77 = load i32, i32* %address_mode, align 4, !dbg !7436
  %call162 = call %struct.cselib_val_struct* @cselib_lookup(%struct.rtx_def* %76, i32 %77, i32 0), !dbg !7437
  store %struct.cselib_val_struct* %call162, %struct.cselib_val_struct** %val, align 8, !dbg !7434
  %78 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %val, align 8, !dbg !7438
  %tobool163 = icmp ne %struct.cselib_val_struct* %78, null, !dbg !7438
  br i1 %tobool163, label %land.lhs.true164, label %if.end190, !dbg !7440

land.lhs.true164:                                 ; preds = %if.then156
  %79 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %val, align 8, !dbg !7441
  %call165 = call zeroext i8 @cselib_preserved_value_p(%struct.cselib_val_struct* %79), !dbg !7442
  %tobool166 = icmp ne i8 %call165, 0, !dbg !7442
  br i1 %tobool166, label %if.end190, label %if.then167, !dbg !7443

if.then167:                                       ; preds = %land.lhs.true164
  %80 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %val, align 8, !dbg !7444
  call void @preserve_value(%struct.cselib_val_struct* %80), !dbg !7446
  %type168 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 0, !dbg !7447
  store i32 2, i32* %type168, align 8, !dbg !7448
  %81 = load %struct.rtx_def*, %struct.rtx_def** %mloc, align 8, !dbg !7449
  %u169 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %81, i32 0, i32 1, !dbg !7449
  %fld170 = bitcast %union.u* %u169 to [1 x %union.rtunion_def]*, !dbg !7449
  %arrayidx171 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld170, i64 0, i64 0, !dbg !7449
  %rt_rtx172 = bitcast %union.rtunion_def* %arrayidx171 to %struct.rtx_def**, !dbg !7449
  %82 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx172, align 8, !dbg !7449
  %call173 = call %struct.rtx_def* @cselib_subst_to_values(%struct.rtx_def* %82), !dbg !7450
  store %struct.rtx_def* %call173, %struct.rtx_def** %mloc, align 8, !dbg !7451
  %83 = load i32, i32* %address_mode, align 4, !dbg !7452
  %84 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %val, align 8, !dbg !7452
  %val_rtx = getelementptr inbounds %struct.cselib_val_struct, %struct.cselib_val_struct* %84, i32 0, i32 2, !dbg !7452
  %85 = load %struct.rtx_def*, %struct.rtx_def** %val_rtx, align 8, !dbg !7452
  %86 = load %struct.rtx_def*, %struct.rtx_def** %mloc, align 8, !dbg !7452
  %call174 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 41, i32 %83, %struct.rtx_def* %85, %struct.rtx_def* %86), !dbg !7452
  %u175 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 2, !dbg !7453
  %loc176 = bitcast %union.anon.0* %u175 to %struct.rtx_def**, !dbg !7454
  store %struct.rtx_def* %call174, %struct.rtx_def** %loc176, align 8, !dbg !7455
  %87 = load %struct.count_use_info*, %struct.count_use_info** %cui, align 8, !dbg !7456
  %insn177 = getelementptr inbounds %struct.count_use_info, %struct.count_use_info* %87, i32 0, i32 0, !dbg !7457
  %88 = load %struct.rtx_def*, %struct.rtx_def** %insn177, align 8, !dbg !7457
  %insn178 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 1, !dbg !7458
  store %struct.rtx_def* %88, %struct.rtx_def** %insn178, align 8, !dbg !7459
  %89 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7460
  %tobool179 = icmp ne %struct._IO_FILE* %89, null, !dbg !7460
  br i1 %tobool179, label %land.lhs.true180, label %if.end188, !dbg !7462

land.lhs.true180:                                 ; preds = %if.then167
  %90 = load i32, i32* @dump_flags, align 4, !dbg !7463
  %and = and i32 %90, 8, !dbg !7464
  %tobool181 = icmp ne i32 %and, 0, !dbg !7464
  br i1 %tobool181, label %if.then182, label %if.end188, !dbg !7465

if.then182:                                       ; preds = %land.lhs.true180
  %u183 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 2, !dbg !7466
  %loc184 = bitcast %union.anon.0* %u183 to %struct.rtx_def**, !dbg !7467
  %91 = load %struct.rtx_def*, %struct.rtx_def** %loc184, align 8, !dbg !7467
  %92 = load %struct.count_use_info*, %struct.count_use_info** %cui, align 8, !dbg !7468
  %bb185 = getelementptr inbounds %struct.count_use_info, %struct.count_use_info* %92, i32 0, i32 1, !dbg !7469
  %93 = load %struct.basic_block_def*, %struct.basic_block_def** %bb185, align 8, !dbg !7469
  %94 = load %struct.count_use_info*, %struct.count_use_info** %cui, align 8, !dbg !7470
  %insn186 = getelementptr inbounds %struct.count_use_info, %struct.count_use_info* %94, i32 0, i32 0, !dbg !7471
  %95 = load %struct.rtx_def*, %struct.rtx_def** %insn186, align 8, !dbg !7471
  %type187 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 0, !dbg !7472
  %96 = load i32, i32* %type187, align 8, !dbg !7472
  %97 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7473
  call void @log_op_type(%struct.rtx_def* %91, %struct.basic_block_def* %93, %struct.rtx_def* %95, i32 %96, %struct._IO_FILE* %97), !dbg !7474
  br label %if.end188, !dbg !7474

if.end188:                                        ; preds = %if.then182, %land.lhs.true180, %if.then167
  %98 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7475
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %98, i32 0, i32 2, !dbg !7475
  %99 = load i8*, i8** %aux, align 8, !dbg !7475
  %100 = bitcast i8* %99 to %struct.variable_tracking_info_def*, !dbg !7475
  %mos = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %100, i32 0, i32 0, !dbg !7475
  %call189 = call %struct.micro_operation_def* @VEC_micro_operation_heap_safe_push(%struct.VEC_micro_operation_heap** %mos, %struct.micro_operation_def* %mo), !dbg !7475
  br label %if.end190, !dbg !7476

if.end190:                                        ; preds = %if.end188, %land.lhs.true164, %if.then156
  br label %if.end191, !dbg !7477

if.end191:                                        ; preds = %if.end190, %lor.lhs.false143, %land.lhs.true114, %land.lhs.true105, %land.lhs.true102, %if.then97
  %101 = load %struct.rtx_def*, %struct.rtx_def** %expr.addr, align 8, !dbg !7478
  %102 = bitcast %struct.rtx_def* %101 to i32*, !dbg !7478
  %bf.load192 = load i32, i32* %102, align 8, !dbg !7478
  %bf.clear193 = and i32 %bf.load192, 65535, !dbg !7478
  %cmp194 = icmp eq i32 %bf.clear193, 25, !dbg !7480
  br i1 %cmp194, label %if.then198, label %lor.lhs.false196, !dbg !7481

lor.lhs.false196:                                 ; preds = %if.end191
  %103 = load i8, i8* %track_p, align 1, !dbg !7482
  %tobool197 = icmp ne i8 %103, 0, !dbg !7482
  br i1 %tobool197, label %if.else209, label %if.then198, !dbg !7483

if.then198:                                       ; preds = %lor.lhs.false196, %if.end191
  %type199 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 0, !dbg !7484
  store i32 7, i32* %type199, align 8, !dbg !7486
  %104 = load i8, i8* %track_p, align 1, !dbg !7487
  %conv200 = zext i8 %104 to i32, !dbg !7487
  %tobool201 = icmp ne i32 %conv200, 0, !dbg !7487
  br i1 %tobool201, label %cond.true202, label %cond.false204, !dbg !7487

cond.true202:                                     ; preds = %if.then198
  %105 = load i32, i32* %mode2, align 4, !dbg !7488
  %106 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !7489
  %call203 = call %struct.rtx_def* @var_lowpart(i32 %105, %struct.rtx_def* %106), !dbg !7490
  br label %cond.end205, !dbg !7487

cond.false204:                                    ; preds = %if.then198
  %107 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !7491
  br label %cond.end205, !dbg !7487

cond.end205:                                      ; preds = %cond.false204, %cond.true202
  %cond206 = phi %struct.rtx_def* [ %call203, %cond.true202 ], [ %107, %cond.false204 ], !dbg !7487
  %u207 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 2, !dbg !7492
  %loc208 = bitcast %union.anon.0* %u207 to %struct.rtx_def**, !dbg !7493
  store %struct.rtx_def* %cond206, %struct.rtx_def** %loc208, align 8, !dbg !7494
  br label %if.end301, !dbg !7495

if.else209:                                       ; preds = %lor.lhs.false196
  %108 = load %struct.rtx_def*, %struct.rtx_def** %expr.addr, align 8, !dbg !7496
  %109 = bitcast %struct.rtx_def* %108 to i32*, !dbg !7496
  %bf.load210 = load i32, i32* %109, align 8, !dbg !7496
  %bf.clear211 = and i32 %bf.load210, 65535, !dbg !7496
  %cmp212 = icmp eq i32 %bf.clear211, 23, !dbg !7499
  br i1 %cmp212, label %land.lhs.true214, label %if.end227, !dbg !7500

land.lhs.true214:                                 ; preds = %if.else209
  %110 = load %struct.rtx_def*, %struct.rtx_def** %expr.addr, align 8, !dbg !7501
  %u215 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %110, i32 0, i32 1, !dbg !7501
  %fld216 = bitcast %union.u* %u215 to [1 x %union.rtunion_def]*, !dbg !7501
  %arrayidx217 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld216, i64 0, i64 0, !dbg !7501
  %rt_rtx218 = bitcast %union.rtunion_def* %arrayidx217 to %struct.rtx_def**, !dbg !7501
  %111 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx218, align 8, !dbg !7501
  %112 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !7502
  %cmp219 = icmp eq %struct.rtx_def* %111, %112, !dbg !7503
  br i1 %cmp219, label %if.then221, label %if.end227, !dbg !7504

if.then221:                                       ; preds = %land.lhs.true214
  %113 = load i32, i32* %mode2, align 4, !dbg !7505
  %114 = load %struct.rtx_def*, %struct.rtx_def** %expr.addr, align 8, !dbg !7506
  %u222 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %114, i32 0, i32 1, !dbg !7506
  %fld223 = bitcast %union.u* %u222 to [1 x %union.rtunion_def]*, !dbg !7506
  %arrayidx224 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld223, i64 0, i64 1, !dbg !7506
  %rt_rtx225 = bitcast %union.rtunion_def* %arrayidx224 to %struct.rtx_def**, !dbg !7506
  %115 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx225, align 8, !dbg !7506
  %call226 = call %struct.rtx_def* @var_lowpart(i32 %113, %struct.rtx_def* %115), !dbg !7507
  store %struct.rtx_def* %call226, %struct.rtx_def** %src, align 8, !dbg !7508
  br label %if.end227, !dbg !7509

if.end227:                                        ; preds = %if.then221, %land.lhs.true214, %if.else209
  %116 = load i32, i32* %mode2, align 4, !dbg !7510
  %117 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !7511
  %call228 = call %struct.rtx_def* @var_lowpart(i32 %116, %struct.rtx_def* %117), !dbg !7512
  store %struct.rtx_def* %call228, %struct.rtx_def** %loc.addr, align 8, !dbg !7513
  %118 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8, !dbg !7514
  %cmp229 = icmp eq %struct.rtx_def* %118, null, !dbg !7516
  br i1 %cmp229, label %if.then231, label %if.else235, !dbg !7517

if.then231:                                       ; preds = %if.end227
  %type232 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 0, !dbg !7518
  store i32 5, i32* %type232, align 8, !dbg !7520
  %119 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !7521
  %u233 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 2, !dbg !7522
  %loc234 = bitcast %union.anon.0* %u233 to %struct.rtx_def**, !dbg !7523
  store %struct.rtx_def* %119, %struct.rtx_def** %loc234, align 8, !dbg !7524
  br label %if.end300, !dbg !7525

if.else235:                                       ; preds = %if.end227
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %xexpr236, metadata !7526, metadata !DIExpression()), !dbg !7528
  %120 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !7529
  %121 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8, !dbg !7529
  %call237 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 23, i32 0, %struct.rtx_def* %120, %struct.rtx_def* %121), !dbg !7529
  store %struct.rtx_def* %call237, %struct.rtx_def** %xexpr236, align 8, !dbg !7528
  %122 = load %struct.rtx_def*, %struct.rtx_def** %xexpr236, align 8, !dbg !7530
  %u238 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %122, i32 0, i32 1, !dbg !7530
  %fld239 = bitcast %union.u* %u238 to [1 x %union.rtunion_def]*, !dbg !7530
  %arrayidx240 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld239, i64 0, i64 1, !dbg !7530
  %rt_rtx241 = bitcast %union.rtunion_def* %arrayidx240 to %struct.rtx_def**, !dbg !7530
  %123 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx241, align 8, !dbg !7530
  %124 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !7532
  %u242 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %124, i32 0, i32 1, !dbg !7532
  %fld243 = bitcast %union.u* %u242 to [1 x %union.rtunion_def]*, !dbg !7532
  %arrayidx244 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld243, i64 0, i64 1, !dbg !7532
  %rt_mem = bitcast %union.rtunion_def* %arrayidx244 to %struct.mem_attrs**, !dbg !7532
  %125 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !7532
  %cmp245 = icmp eq %struct.mem_attrs* %125, null, !dbg !7532
  br i1 %cmp245, label %cond.true247, label %cond.false248, !dbg !7532

cond.true247:                                     ; preds = %if.else235
  br label %cond.end254, !dbg !7532

cond.false248:                                    ; preds = %if.else235
  %126 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !7532
  %u249 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %126, i32 0, i32 1, !dbg !7532
  %fld250 = bitcast %union.u* %u249 to [1 x %union.rtunion_def]*, !dbg !7532
  %arrayidx251 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld250, i64 0, i64 1, !dbg !7532
  %rt_mem252 = bitcast %union.rtunion_def* %arrayidx251 to %struct.mem_attrs**, !dbg !7532
  %127 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem252, align 8, !dbg !7532
  %expr253 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %127, i32 0, i32 0, !dbg !7532
  %128 = load %union.tree_node*, %union.tree_node** %expr253, align 8, !dbg !7532
  br label %cond.end254, !dbg !7532

cond.end254:                                      ; preds = %cond.false248, %cond.true247
  %cond255 = phi %union.tree_node* [ null, %cond.true247 ], [ %128, %cond.false248 ], !dbg !7532
  %129 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !7533
  %u256 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %129, i32 0, i32 1, !dbg !7533
  %fld257 = bitcast %union.u* %u256 to [1 x %union.rtunion_def]*, !dbg !7533
  %arrayidx258 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld257, i64 0, i64 1, !dbg !7533
  %rt_mem259 = bitcast %union.rtunion_def* %arrayidx258 to %struct.mem_attrs**, !dbg !7533
  %130 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem259, align 8, !dbg !7533
  %cmp260 = icmp eq %struct.mem_attrs* %130, null, !dbg !7533
  br i1 %cmp260, label %cond.true262, label %cond.false263, !dbg !7533

cond.true262:                                     ; preds = %cond.end254
  br i1 false, label %cond.true270, label %cond.false288, !dbg !7533

cond.false263:                                    ; preds = %cond.end254
  %131 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !7533
  %u264 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %131, i32 0, i32 1, !dbg !7533
  %fld265 = bitcast %union.u* %u264 to [1 x %union.rtunion_def]*, !dbg !7533
  %arrayidx266 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld265, i64 0, i64 1, !dbg !7533
  %rt_mem267 = bitcast %union.rtunion_def* %arrayidx266 to %struct.mem_attrs**, !dbg !7533
  %132 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem267, align 8, !dbg !7533
  %offset268 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %132, i32 0, i32 1, !dbg !7533
  %133 = load %struct.rtx_def*, %struct.rtx_def** %offset268, align 8, !dbg !7533
  %tobool269 = icmp ne %struct.rtx_def* %133, null, !dbg !7533
  br i1 %tobool269, label %cond.true270, label %cond.false288, !dbg !7533

cond.true270:                                     ; preds = %cond.false263, %cond.true262
  %134 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !7533
  %u271 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %134, i32 0, i32 1, !dbg !7533
  %fld272 = bitcast %union.u* %u271 to [1 x %union.rtunion_def]*, !dbg !7533
  %arrayidx273 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld272, i64 0, i64 1, !dbg !7533
  %rt_mem274 = bitcast %union.rtunion_def* %arrayidx273 to %struct.mem_attrs**, !dbg !7533
  %135 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem274, align 8, !dbg !7533
  %cmp275 = icmp eq %struct.mem_attrs* %135, null, !dbg !7533
  br i1 %cmp275, label %cond.true277, label %cond.false278, !dbg !7533

cond.true277:                                     ; preds = %cond.true270
  br label %cond.end284, !dbg !7533

cond.false278:                                    ; preds = %cond.true270
  %136 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !7533
  %u279 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %136, i32 0, i32 1, !dbg !7533
  %fld280 = bitcast %union.u* %u279 to [1 x %union.rtunion_def]*, !dbg !7533
  %arrayidx281 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld280, i64 0, i64 1, !dbg !7533
  %rt_mem282 = bitcast %union.rtunion_def* %arrayidx281 to %struct.mem_attrs**, !dbg !7533
  %137 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem282, align 8, !dbg !7533
  %offset283 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %137, i32 0, i32 1, !dbg !7533
  %138 = load %struct.rtx_def*, %struct.rtx_def** %offset283, align 8, !dbg !7533
  br label %cond.end284, !dbg !7533

cond.end284:                                      ; preds = %cond.false278, %cond.true277
  %cond285 = phi %struct.rtx_def* [ null, %cond.true277 ], [ %138, %cond.false278 ], !dbg !7533
  %u286 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond285, i32 0, i32 1, !dbg !7533
  %hwint = bitcast %union.u* %u286 to [1 x i64]*, !dbg !7533
  %arrayidx287 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 0, !dbg !7533
  %139 = load i64, i64* %arrayidx287, align 8, !dbg !7533
  br label %cond.end289, !dbg !7533

cond.false288:                                    ; preds = %cond.false263, %cond.true262
  br label %cond.end289, !dbg !7533

cond.end289:                                      ; preds = %cond.false288, %cond.end284
  %cond290 = phi i64 [ %139, %cond.end284 ], [ 0, %cond.false288 ], !dbg !7533
  %call291 = call zeroext i8 @same_variable_part_p(%struct.rtx_def* %123, %union.tree_node* %cond255, i64 %cond290), !dbg !7534
  %tobool292 = icmp ne i8 %call291, 0, !dbg !7534
  br i1 %tobool292, label %if.then293, label %if.else295, !dbg !7535

if.then293:                                       ; preds = %cond.end289
  %type294 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 0, !dbg !7536
  store i32 6, i32* %type294, align 8, !dbg !7537
  br label %if.end297, !dbg !7538

if.else295:                                       ; preds = %cond.end289
  %type296 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 0, !dbg !7539
  store i32 5, i32* %type296, align 8, !dbg !7540
  br label %if.end297

if.end297:                                        ; preds = %if.else295, %if.then293
  %140 = load %struct.rtx_def*, %struct.rtx_def** %xexpr236, align 8, !dbg !7541
  %u298 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 2, !dbg !7542
  %loc299 = bitcast %union.anon.0* %u298 to %struct.rtx_def**, !dbg !7543
  store %struct.rtx_def* %140, %struct.rtx_def** %loc299, align 8, !dbg !7544
  br label %if.end300

if.end300:                                        ; preds = %if.end297, %if.then231
  br label %if.end301

if.end301:                                        ; preds = %if.end300, %cond.end205
  %141 = load %struct.count_use_info*, %struct.count_use_info** %cui, align 8, !dbg !7545
  %insn302 = getelementptr inbounds %struct.count_use_info, %struct.count_use_info* %141, i32 0, i32 0, !dbg !7546
  %142 = load %struct.rtx_def*, %struct.rtx_def** %insn302, align 8, !dbg !7546
  %insn303 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 1, !dbg !7547
  store %struct.rtx_def* %142, %struct.rtx_def** %insn303, align 8, !dbg !7548
  br label %if.end305, !dbg !7549

if.else304:                                       ; preds = %lor.lhs.false95, %if.else83
  br label %return, !dbg !7550

if.end305:                                        ; preds = %if.end301
  br label %if.end306

if.end306:                                        ; preds = %if.end305, %if.end81
  %143 = load i32, i32* %type, align 4, !dbg !7551
  %cmp307 = icmp ne i32 %143, 4, !dbg !7553
  br i1 %cmp307, label %if.then309, label %if.end310, !dbg !7554

if.then309:                                       ; preds = %if.end306
  br label %log_and_return, !dbg !7555

if.end310:                                        ; preds = %if.end306
  %144 = load %struct.rtx_def*, %struct.rtx_def** %oloc, align 8, !dbg !7556
  %145 = load i32, i32* %mode, align 4, !dbg !7557
  %146 = load %struct.count_use_info*, %struct.count_use_info** %cui, align 8, !dbg !7558
  %call311 = call %struct.cselib_val_struct* @find_use_val(%struct.rtx_def* %144, i32 %145, %struct.count_use_info* %146), !dbg !7559
  store %struct.cselib_val_struct* %call311, %struct.cselib_val_struct** %v, align 8, !dbg !7560
  %147 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %v, align 8, !dbg !7561
  %tobool312 = icmp ne %struct.cselib_val_struct* %147, null, !dbg !7561
  br i1 %tobool312, label %if.end314, label %if.then313, !dbg !7563

if.then313:                                       ; preds = %if.end310
  br label %log_and_return, !dbg !7564

if.end314:                                        ; preds = %if.end310
  %148 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %v, align 8, !dbg !7565
  %call315 = call zeroext i8 @cselib_preserved_value_p(%struct.cselib_val_struct* %148), !dbg !7566
  %tobool316 = icmp ne i8 %call315, 0, !dbg !7567
  %lnot = xor i1 %tobool316, true, !dbg !7567
  %lnot.ext = zext i1 %lnot to i32, !dbg !7567
  %conv317 = trunc i32 %lnot.ext to i8, !dbg !7567
  store i8 %conv317, i8* %preserve, align 1, !dbg !7568
  store i8 %conv317, i8* %resolve, align 1, !dbg !7569
  %149 = load %struct.rtx_def*, %struct.rtx_def** %oloc, align 8, !dbg !7570
  %call318 = call %struct.rtx_def* @replace_expr_with_values(%struct.rtx_def* %149), !dbg !7571
  store %struct.rtx_def* %call318, %struct.rtx_def** %nloc, align 8, !dbg !7572
  %150 = load %struct.rtx_def*, %struct.rtx_def** %nloc, align 8, !dbg !7573
  %tobool319 = icmp ne %struct.rtx_def* %150, null, !dbg !7573
  br i1 %tobool319, label %if.then320, label %if.end321, !dbg !7575

if.then320:                                       ; preds = %if.end314
  %151 = load %struct.rtx_def*, %struct.rtx_def** %nloc, align 8, !dbg !7576
  store %struct.rtx_def* %151, %struct.rtx_def** %oloc, align 8, !dbg !7577
  br label %if.end321, !dbg !7578

if.end321:                                        ; preds = %if.then320, %if.end314
  %152 = load %struct.count_use_info*, %struct.count_use_info** %cui, align 8, !dbg !7579
  %insn322 = getelementptr inbounds %struct.count_use_info, %struct.count_use_info* %152, i32 0, i32 0, !dbg !7579
  %153 = load %struct.rtx_def*, %struct.rtx_def** %insn322, align 8, !dbg !7579
  %u323 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %153, i32 0, i32 1, !dbg !7579
  %fld324 = bitcast %union.u* %u323 to [1 x %union.rtunion_def]*, !dbg !7579
  %arrayidx325 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld324, i64 0, i64 5, !dbg !7579
  %rt_rtx326 = bitcast %union.rtunion_def* %arrayidx325 to %struct.rtx_def**, !dbg !7579
  %154 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx326, align 8, !dbg !7579
  %155 = bitcast %struct.rtx_def* %154 to i32*, !dbg !7579
  %bf.load327 = load i32, i32* %155, align 8, !dbg !7579
  %bf.clear328 = and i32 %bf.load327, 65535, !dbg !7579
  %cmp329 = icmp eq i32 %bf.clear328, 14, !dbg !7581
  br i1 %cmp329, label %if.then331, label %if.else383, !dbg !7582

if.then331:                                       ; preds = %if.end321
  call void @llvm.dbg.declare(metadata %struct.cselib_val_struct** %oval, metadata !7583, metadata !DIExpression()), !dbg !7585
  %156 = load %struct.rtx_def*, %struct.rtx_def** %oloc, align 8, !dbg !7586
  %157 = load %struct.rtx_def*, %struct.rtx_def** %oloc, align 8, !dbg !7587
  %158 = bitcast %struct.rtx_def* %157 to i32*, !dbg !7587
  %bf.load332 = load i32, i32* %158, align 8, !dbg !7587
  %bf.lshr = lshr i32 %bf.load332, 16, !dbg !7587
  %bf.clear333 = and i32 %bf.lshr, 255, !dbg !7587
  %call334 = call %struct.cselib_val_struct* @cselib_lookup(%struct.rtx_def* %156, i32 %bf.clear333, i32 0), !dbg !7588
  store %struct.cselib_val_struct* %call334, %struct.cselib_val_struct** %oval, align 8, !dbg !7585
  %159 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %oval, align 8, !dbg !7589
  %160 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %v, align 8, !dbg !7589
  %cmp335 = icmp ne %struct.cselib_val_struct* %159, %160, !dbg !7589
  br i1 %cmp335, label %cond.false338, label %cond.true337, !dbg !7589

cond.true337:                                     ; preds = %if.then331
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 5339, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !7589
  br label %cond.end339, !dbg !7589

cond.false338:                                    ; preds = %if.then331
  br label %cond.end339, !dbg !7589

cond.end339:                                      ; preds = %cond.false338, %cond.true337
  %cond340 = phi i32 [ 0, %cond.true337 ], [ 0, %cond.false338 ], !dbg !7589
  %161 = load %struct.rtx_def*, %struct.rtx_def** %oloc, align 8, !dbg !7590
  %162 = bitcast %struct.rtx_def* %161 to i32*, !dbg !7590
  %bf.load341 = load i32, i32* %162, align 8, !dbg !7590
  %bf.clear342 = and i32 %bf.load341, 65535, !dbg !7590
  %cmp343 = icmp eq i32 %bf.clear342, 37, !dbg !7590
  br i1 %cmp343, label %cond.false351, label %lor.lhs.false345, !dbg !7590

lor.lhs.false345:                                 ; preds = %cond.end339
  %163 = load %struct.rtx_def*, %struct.rtx_def** %oloc, align 8, !dbg !7590
  %164 = bitcast %struct.rtx_def* %163 to i32*, !dbg !7590
  %bf.load346 = load i32, i32* %164, align 8, !dbg !7590
  %bf.clear347 = and i32 %bf.load346, 65535, !dbg !7590
  %cmp348 = icmp eq i32 %bf.clear347, 43, !dbg !7590
  br i1 %cmp348, label %cond.false351, label %cond.true350, !dbg !7590

cond.true350:                                     ; preds = %lor.lhs.false345
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 5340, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !7590
  br label %cond.end352, !dbg !7590

cond.false351:                                    ; preds = %lor.lhs.false345, %cond.end339
  br label %cond.end352, !dbg !7590

cond.end352:                                      ; preds = %cond.false351, %cond.true350
  %cond353 = phi i32 [ 0, %cond.true350 ], [ 0, %cond.false351 ], !dbg !7590
  %165 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %oval, align 8, !dbg !7591
  %call354 = call zeroext i8 @cselib_preserved_value_p(%struct.cselib_val_struct* %165), !dbg !7593
  %tobool355 = icmp ne i8 %call354, 0, !dbg !7593
  br i1 %tobool355, label %if.end382, label %if.then356, !dbg !7594

if.then356:                                       ; preds = %cond.end352
  call void @llvm.dbg.declare(metadata %struct.micro_operation_def* %moa, metadata !7595, metadata !DIExpression()), !dbg !7597
  %166 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %oval, align 8, !dbg !7598
  call void @preserve_value(%struct.cselib_val_struct* %166), !dbg !7599
  %type357 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %moa, i32 0, i32 0, !dbg !7600
  store i32 2, i32* %type357, align 8, !dbg !7601
  %167 = load i32, i32* %mode, align 4, !dbg !7602
  %168 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %oval, align 8, !dbg !7602
  %val_rtx358 = getelementptr inbounds %struct.cselib_val_struct, %struct.cselib_val_struct* %168, i32 0, i32 2, !dbg !7602
  %169 = load %struct.rtx_def*, %struct.rtx_def** %val_rtx358, align 8, !dbg !7602
  %170 = load %struct.rtx_def*, %struct.rtx_def** %oloc, align 8, !dbg !7602
  %call359 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 41, i32 %167, %struct.rtx_def* %169, %struct.rtx_def* %170), !dbg !7602
  %u360 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %moa, i32 0, i32 2, !dbg !7603
  %loc361 = bitcast %union.anon.0* %u360 to %struct.rtx_def**, !dbg !7604
  store %struct.rtx_def* %call359, %struct.rtx_def** %loc361, align 8, !dbg !7605
  %u362 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %moa, i32 0, i32 2, !dbg !7606
  %loc363 = bitcast %union.anon.0* %u362 to %struct.rtx_def**, !dbg !7606
  %171 = load %struct.rtx_def*, %struct.rtx_def** %loc363, align 8, !dbg !7606
  %172 = bitcast %struct.rtx_def* %171 to i32*, !dbg !7606
  %bf.load364 = load i32, i32* %172, align 8, !dbg !7607
  %bf.clear365 = and i32 %bf.load364, -134217729, !dbg !7607
  %bf.set = or i32 %bf.clear365, 134217728, !dbg !7607
  store i32 %bf.set, i32* %172, align 8, !dbg !7607
  %173 = load %struct.count_use_info*, %struct.count_use_info** %cui, align 8, !dbg !7608
  %insn366 = getelementptr inbounds %struct.count_use_info, %struct.count_use_info* %173, i32 0, i32 0, !dbg !7609
  %174 = load %struct.rtx_def*, %struct.rtx_def** %insn366, align 8, !dbg !7609
  %insn367 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %moa, i32 0, i32 1, !dbg !7610
  store %struct.rtx_def* %174, %struct.rtx_def** %insn367, align 8, !dbg !7611
  %175 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7612
  %tobool368 = icmp ne %struct._IO_FILE* %175, null, !dbg !7612
  br i1 %tobool368, label %land.lhs.true369, label %if.end378, !dbg !7614

land.lhs.true369:                                 ; preds = %if.then356
  %176 = load i32, i32* @dump_flags, align 4, !dbg !7615
  %and370 = and i32 %176, 8, !dbg !7616
  %tobool371 = icmp ne i32 %and370, 0, !dbg !7616
  br i1 %tobool371, label %if.then372, label %if.end378, !dbg !7617

if.then372:                                       ; preds = %land.lhs.true369
  %u373 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %moa, i32 0, i32 2, !dbg !7618
  %loc374 = bitcast %union.anon.0* %u373 to %struct.rtx_def**, !dbg !7619
  %177 = load %struct.rtx_def*, %struct.rtx_def** %loc374, align 8, !dbg !7619
  %178 = load %struct.count_use_info*, %struct.count_use_info** %cui, align 8, !dbg !7620
  %bb375 = getelementptr inbounds %struct.count_use_info, %struct.count_use_info* %178, i32 0, i32 1, !dbg !7621
  %179 = load %struct.basic_block_def*, %struct.basic_block_def** %bb375, align 8, !dbg !7621
  %180 = load %struct.count_use_info*, %struct.count_use_info** %cui, align 8, !dbg !7622
  %insn376 = getelementptr inbounds %struct.count_use_info, %struct.count_use_info* %180, i32 0, i32 0, !dbg !7623
  %181 = load %struct.rtx_def*, %struct.rtx_def** %insn376, align 8, !dbg !7623
  %type377 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %moa, i32 0, i32 0, !dbg !7624
  %182 = load i32, i32* %type377, align 8, !dbg !7624
  %183 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7625
  call void @log_op_type(%struct.rtx_def* %177, %struct.basic_block_def* %179, %struct.rtx_def* %181, i32 %182, %struct._IO_FILE* %183), !dbg !7626
  br label %if.end378, !dbg !7626

if.end378:                                        ; preds = %if.then372, %land.lhs.true369, %if.then356
  %184 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7627
  %aux379 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %184, i32 0, i32 2, !dbg !7627
  %185 = load i8*, i8** %aux379, align 8, !dbg !7627
  %186 = bitcast i8* %185 to %struct.variable_tracking_info_def*, !dbg !7627
  %mos380 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %186, i32 0, i32 0, !dbg !7627
  %call381 = call %struct.micro_operation_def* @VEC_micro_operation_heap_safe_push(%struct.VEC_micro_operation_heap** %mos380, %struct.micro_operation_def* %moa), !dbg !7627
  br label %if.end382, !dbg !7628

if.end382:                                        ; preds = %if.end378, %cond.end352
  store i8 0, i8* %resolve, align 1, !dbg !7629
  br label %if.end478, !dbg !7630

if.else383:                                       ; preds = %if.end321
  %187 = load i8, i8* %resolve, align 1, !dbg !7631
  %conv384 = zext i8 %187 to i32, !dbg !7631
  %tobool385 = icmp ne i32 %conv384, 0, !dbg !7631
  br i1 %tobool385, label %land.lhs.true386, label %if.else453, !dbg !7633

land.lhs.true386:                                 ; preds = %if.else383
  %u387 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 2, !dbg !7634
  %loc388 = bitcast %union.anon.0* %u387 to %struct.rtx_def**, !dbg !7634
  %188 = load %struct.rtx_def*, %struct.rtx_def** %loc388, align 8, !dbg !7634
  %189 = bitcast %struct.rtx_def* %188 to i32*, !dbg !7634
  %bf.load389 = load i32, i32* %189, align 8, !dbg !7634
  %bf.clear390 = and i32 %bf.load389, 65535, !dbg !7634
  %cmp391 = icmp eq i32 %bf.clear390, 23, !dbg !7635
  br i1 %cmp391, label %if.then393, label %if.else453, !dbg !7636

if.then393:                                       ; preds = %land.lhs.true386
  %190 = load %struct.rtx_def*, %struct.rtx_def** %expr.addr, align 8, !dbg !7637
  %u394 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %190, i32 0, i32 1, !dbg !7637
  %fld395 = bitcast %union.u* %u394 to [1 x %union.rtunion_def]*, !dbg !7637
  %arrayidx396 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld395, i64 0, i64 1, !dbg !7637
  %rt_rtx397 = bitcast %union.rtunion_def* %arrayidx396 to %struct.rtx_def**, !dbg !7637
  %191 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx397, align 8, !dbg !7637
  %call398 = call %struct.rtx_def* @replace_expr_with_values(%struct.rtx_def* %191), !dbg !7639
  store %struct.rtx_def* %call398, %struct.rtx_def** %nloc, align 8, !dbg !7640
  %192 = load %struct.rtx_def*, %struct.rtx_def** %nloc, align 8, !dbg !7641
  %tobool399 = icmp ne %struct.rtx_def* %192, null, !dbg !7641
  br i1 %tobool399, label %if.end418, label %land.lhs.true400, !dbg !7643

land.lhs.true400:                                 ; preds = %if.then393
  %193 = load i32, i32* %mode, align 4, !dbg !7644
  %194 = load i32, i32* %mode2, align 4, !dbg !7645
  %cmp401 = icmp ne i32 %193, %194, !dbg !7646
  br i1 %cmp401, label %if.then403, label %if.end418, !dbg !7647

if.then403:                                       ; preds = %land.lhs.true400
  %195 = load %struct.rtx_def*, %struct.rtx_def** %expr.addr, align 8, !dbg !7648
  %u404 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %195, i32 0, i32 1, !dbg !7648
  %fld405 = bitcast %union.u* %u404 to [1 x %union.rtunion_def]*, !dbg !7648
  %arrayidx406 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld405, i64 0, i64 1, !dbg !7648
  %rt_rtx407 = bitcast %union.rtunion_def* %arrayidx406 to %struct.rtx_def**, !dbg !7648
  %196 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx407, align 8, !dbg !7648
  store %struct.rtx_def* %196, %struct.rtx_def** %nloc, align 8, !dbg !7650
  %197 = load %struct.rtx_def*, %struct.rtx_def** %oloc, align 8, !dbg !7651
  %198 = load %struct.rtx_def*, %struct.rtx_def** %expr.addr, align 8, !dbg !7651
  %u408 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %198, i32 0, i32 1, !dbg !7651
  %fld409 = bitcast %union.u* %u408 to [1 x %union.rtunion_def]*, !dbg !7651
  %arrayidx410 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld409, i64 0, i64 0, !dbg !7651
  %rt_rtx411 = bitcast %union.rtunion_def* %arrayidx410 to %struct.rtx_def**, !dbg !7651
  %199 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx411, align 8, !dbg !7651
  %cmp412 = icmp eq %struct.rtx_def* %197, %199, !dbg !7651
  br i1 %cmp412, label %cond.false415, label %cond.true414, !dbg !7651

cond.true414:                                     ; preds = %if.then403
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 5369, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !7651
  br label %cond.end416, !dbg !7651

cond.false415:                                    ; preds = %if.then403
  br label %cond.end416, !dbg !7651

cond.end416:                                      ; preds = %cond.false415, %cond.true414
  %cond417 = phi i32 [ 0, %cond.true414 ], [ 0, %cond.false415 ], !dbg !7651
  br label %if.end418, !dbg !7652

if.end418:                                        ; preds = %cond.end416, %land.lhs.true400, %if.then393
  %200 = load %struct.rtx_def*, %struct.rtx_def** %nloc, align 8, !dbg !7653
  %tobool419 = icmp ne %struct.rtx_def* %200, null, !dbg !7653
  br i1 %tobool419, label %if.then420, label %if.else427, !dbg !7655

if.then420:                                       ; preds = %if.end418
  %u421 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 2, !dbg !7656
  %loc422 = bitcast %union.anon.0* %u421 to %struct.rtx_def**, !dbg !7656
  %201 = load %struct.rtx_def*, %struct.rtx_def** %loc422, align 8, !dbg !7656
  %202 = bitcast %struct.rtx_def* %201 to i32*, !dbg !7656
  %bf.load423 = load i32, i32* %202, align 8, !dbg !7656
  %bf.lshr424 = lshr i32 %bf.load423, 16, !dbg !7656
  %bf.clear425 = and i32 %bf.lshr424, 255, !dbg !7656
  %203 = load %struct.rtx_def*, %struct.rtx_def** %oloc, align 8, !dbg !7656
  %204 = load %struct.rtx_def*, %struct.rtx_def** %nloc, align 8, !dbg !7656
  %call426 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 23, i32 %bf.clear425, %struct.rtx_def* %203, %struct.rtx_def* %204), !dbg !7656
  store %struct.rtx_def* %call426, %struct.rtx_def** %oloc, align 8, !dbg !7657
  br label %if.end452, !dbg !7658

if.else427:                                       ; preds = %if.end418
  %205 = load %struct.rtx_def*, %struct.rtx_def** %oloc, align 8, !dbg !7659
  %u428 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 2, !dbg !7662
  %loc429 = bitcast %union.anon.0* %u428 to %struct.rtx_def**, !dbg !7662
  %206 = load %struct.rtx_def*, %struct.rtx_def** %loc429, align 8, !dbg !7662
  %u430 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %206, i32 0, i32 1, !dbg !7662
  %fld431 = bitcast %union.u* %u430 to [1 x %union.rtunion_def]*, !dbg !7662
  %arrayidx432 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld431, i64 0, i64 0, !dbg !7662
  %rt_rtx433 = bitcast %union.rtunion_def* %arrayidx432 to %struct.rtx_def**, !dbg !7662
  %207 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx433, align 8, !dbg !7662
  %cmp434 = icmp eq %struct.rtx_def* %205, %207, !dbg !7663
  br i1 %cmp434, label %if.then436, label %if.end439, !dbg !7664

if.then436:                                       ; preds = %if.else427
  %u437 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 2, !dbg !7665
  %loc438 = bitcast %union.anon.0* %u437 to %struct.rtx_def**, !dbg !7666
  %208 = load %struct.rtx_def*, %struct.rtx_def** %loc438, align 8, !dbg !7666
  store %struct.rtx_def* %208, %struct.rtx_def** %oloc, align 8, !dbg !7667
  br label %if.end439, !dbg !7668

if.end439:                                        ; preds = %if.then436, %if.else427
  %u440 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 2, !dbg !7669
  %loc441 = bitcast %union.anon.0* %u440 to %struct.rtx_def**, !dbg !7669
  %209 = load %struct.rtx_def*, %struct.rtx_def** %loc441, align 8, !dbg !7669
  %u442 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %209, i32 0, i32 1, !dbg !7669
  %fld443 = bitcast %union.u* %u442 to [1 x %union.rtunion_def]*, !dbg !7669
  %arrayidx444 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld443, i64 0, i64 1, !dbg !7669
  %rt_rtx445 = bitcast %union.rtunion_def* %arrayidx444 to %struct.rtx_def**, !dbg !7669
  %210 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx445, align 8, !dbg !7669
  %211 = bitcast %struct.rtx_def* %210 to i32*, !dbg !7669
  %bf.load446 = load i32, i32* %211, align 8, !dbg !7669
  %bf.clear447 = and i32 %bf.load446, 65535, !dbg !7669
  %cmp448 = icmp eq i32 %bf.clear447, 37, !dbg !7669
  br i1 %cmp448, label %if.end451, label %if.then450, !dbg !7671

if.then450:                                       ; preds = %if.end439
  store i8 0, i8* %resolve, align 1, !dbg !7672
  br label %if.end451, !dbg !7673

if.end451:                                        ; preds = %if.then450, %if.end439
  br label %if.end452

if.end452:                                        ; preds = %if.end451, %if.then420
  br label %if.end477, !dbg !7674

if.else453:                                       ; preds = %land.lhs.true386, %if.else383
  %212 = load i8, i8* %resolve, align 1, !dbg !7675
  %tobool454 = icmp ne i8 %212, 0, !dbg !7675
  br i1 %tobool454, label %if.else475, label %if.then455, !dbg !7677

if.then455:                                       ; preds = %if.else453
  %u456 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 2, !dbg !7678
  %loc457 = bitcast %union.anon.0* %u456 to %struct.rtx_def**, !dbg !7678
  %213 = load %struct.rtx_def*, %struct.rtx_def** %loc457, align 8, !dbg !7678
  %214 = bitcast %struct.rtx_def* %213 to i32*, !dbg !7678
  %bf.load458 = load i32, i32* %214, align 8, !dbg !7678
  %bf.clear459 = and i32 %bf.load458, 65535, !dbg !7678
  %cmp460 = icmp eq i32 %bf.clear459, 23, !dbg !7681
  br i1 %cmp460, label %land.lhs.true462, label %if.end474, !dbg !7682

land.lhs.true462:                                 ; preds = %if.then455
  %215 = load %struct.rtx_def*, %struct.rtx_def** %oloc, align 8, !dbg !7683
  %u463 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 2, !dbg !7684
  %loc464 = bitcast %union.anon.0* %u463 to %struct.rtx_def**, !dbg !7684
  %216 = load %struct.rtx_def*, %struct.rtx_def** %loc464, align 8, !dbg !7684
  %u465 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %216, i32 0, i32 1, !dbg !7684
  %fld466 = bitcast %union.u* %u465 to [1 x %union.rtunion_def]*, !dbg !7684
  %arrayidx467 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld466, i64 0, i64 0, !dbg !7684
  %rt_rtx468 = bitcast %union.rtunion_def* %arrayidx467 to %struct.rtx_def**, !dbg !7684
  %217 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx468, align 8, !dbg !7684
  %cmp469 = icmp eq %struct.rtx_def* %215, %217, !dbg !7685
  br i1 %cmp469, label %if.then471, label %if.end474, !dbg !7686

if.then471:                                       ; preds = %land.lhs.true462
  %u472 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 2, !dbg !7687
  %loc473 = bitcast %union.anon.0* %u472 to %struct.rtx_def**, !dbg !7688
  %218 = load %struct.rtx_def*, %struct.rtx_def** %loc473, align 8, !dbg !7688
  store %struct.rtx_def* %218, %struct.rtx_def** %oloc, align 8, !dbg !7689
  br label %if.end474, !dbg !7690

if.end474:                                        ; preds = %if.then471, %land.lhs.true462, %if.then455
  br label %if.end476, !dbg !7691

if.else475:                                       ; preds = %if.else453
  store i8 0, i8* %resolve, align 1, !dbg !7692
  br label %if.end476

if.end476:                                        ; preds = %if.else475, %if.end474
  br label %if.end477

if.end477:                                        ; preds = %if.end476, %if.end452
  br label %if.end478

if.end478:                                        ; preds = %if.end477, %if.end382
  %219 = load i32, i32* %mode, align 4, !dbg !7693
  %220 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %v, align 8, !dbg !7693
  %val_rtx479 = getelementptr inbounds %struct.cselib_val_struct, %struct.cselib_val_struct* %220, i32 0, i32 2, !dbg !7693
  %221 = load %struct.rtx_def*, %struct.rtx_def** %val_rtx479, align 8, !dbg !7693
  %222 = load %struct.rtx_def*, %struct.rtx_def** %oloc, align 8, !dbg !7693
  %call480 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 41, i32 %219, %struct.rtx_def* %221, %struct.rtx_def* %222), !dbg !7693
  store %struct.rtx_def* %call480, %struct.rtx_def** %loc.addr, align 8, !dbg !7694
  %u481 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 2, !dbg !7695
  %loc482 = bitcast %union.anon.0* %u481 to %struct.rtx_def**, !dbg !7697
  %223 = load %struct.rtx_def*, %struct.rtx_def** %loc482, align 8, !dbg !7697
  %224 = load %struct.rtx_def*, %struct.rtx_def** %oloc, align 8, !dbg !7698
  %cmp483 = icmp ne %struct.rtx_def* %223, %224, !dbg !7699
  br i1 %cmp483, label %if.then485, label %if.end494, !dbg !7700

if.then485:                                       ; preds = %if.end478
  %u486 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 2, !dbg !7701
  %loc487 = bitcast %union.anon.0* %u486 to %struct.rtx_def**, !dbg !7701
  %225 = load %struct.rtx_def*, %struct.rtx_def** %loc487, align 8, !dbg !7701
  %226 = bitcast %struct.rtx_def* %225 to i32*, !dbg !7701
  %bf.load488 = load i32, i32* %226, align 8, !dbg !7701
  %bf.lshr489 = lshr i32 %bf.load488, 16, !dbg !7701
  %bf.clear490 = and i32 %bf.lshr489, 255, !dbg !7701
  %227 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !7701
  %u491 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 2, !dbg !7701
  %loc492 = bitcast %union.anon.0* %u491 to %struct.rtx_def**, !dbg !7701
  %228 = load %struct.rtx_def*, %struct.rtx_def** %loc492, align 8, !dbg !7701
  %call493 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 41, i32 %bf.clear490, %struct.rtx_def* %227, %struct.rtx_def* %228), !dbg !7701
  store %struct.rtx_def* %call493, %struct.rtx_def** %loc.addr, align 8, !dbg !7702
  br label %if.end494, !dbg !7703

if.end494:                                        ; preds = %if.then485, %if.end478
  %229 = load %struct.count_use_info*, %struct.count_use_info** %cui, align 8, !dbg !7704
  %insn495 = getelementptr inbounds %struct.count_use_info, %struct.count_use_info* %229, i32 0, i32 0, !dbg !7704
  %230 = load %struct.rtx_def*, %struct.rtx_def** %insn495, align 8, !dbg !7704
  %u496 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %230, i32 0, i32 1, !dbg !7704
  %fld497 = bitcast %union.u* %u496 to [1 x %union.rtunion_def]*, !dbg !7704
  %arrayidx498 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld497, i64 0, i64 5, !dbg !7704
  %rt_rtx499 = bitcast %union.rtunion_def* %arrayidx498 to %struct.rtx_def**, !dbg !7704
  %231 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx499, align 8, !dbg !7704
  %232 = bitcast %struct.rtx_def* %231 to i32*, !dbg !7704
  %bf.load500 = load i32, i32* %232, align 8, !dbg !7704
  %bf.clear501 = and i32 %bf.load500, 65535, !dbg !7704
  %cmp502 = icmp ne i32 %bf.clear501, 14, !dbg !7706
  br i1 %cmp502, label %if.then504, label %if.end519, !dbg !7707

if.then504:                                       ; preds = %if.end494
  %233 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %v, align 8, !dbg !7708
  %val_rtx505 = getelementptr inbounds %struct.cselib_val_struct, %struct.cselib_val_struct* %233, i32 0, i32 2, !dbg !7710
  %234 = load %struct.rtx_def*, %struct.rtx_def** %val_rtx505, align 8, !dbg !7710
  %235 = load %struct.rtx_def*, %struct.rtx_def** %expr.addr, align 8, !dbg !7711
  %call506 = call %struct.rtx_def* @reverse_op(%struct.rtx_def* %234, %struct.rtx_def* %235), !dbg !7712
  store %struct.rtx_def* %call506, %struct.rtx_def** %reverse, align 8, !dbg !7713
  %236 = load %struct.rtx_def*, %struct.rtx_def** %reverse, align 8, !dbg !7714
  %tobool507 = icmp ne %struct.rtx_def* %236, null, !dbg !7714
  br i1 %tobool507, label %if.then508, label %if.end518, !dbg !7716

if.then508:                                       ; preds = %if.then504
  %u509 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 2, !dbg !7717
  %loc510 = bitcast %union.anon.0* %u509 to %struct.rtx_def**, !dbg !7717
  %237 = load %struct.rtx_def*, %struct.rtx_def** %loc510, align 8, !dbg !7717
  %238 = bitcast %struct.rtx_def* %237 to i32*, !dbg !7717
  %bf.load511 = load i32, i32* %238, align 8, !dbg !7717
  %bf.lshr512 = lshr i32 %bf.load511, 16, !dbg !7717
  %bf.clear513 = and i32 %bf.lshr512, 255, !dbg !7717
  %239 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !7717
  %240 = load %struct.rtx_def*, %struct.rtx_def** %reverse, align 8, !dbg !7717
  %call514 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 41, i32 %bf.clear513, %struct.rtx_def* %239, %struct.rtx_def* %240), !dbg !7717
  store %struct.rtx_def* %call514, %struct.rtx_def** %loc.addr, align 8, !dbg !7719
  %241 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !7720
  %242 = bitcast %struct.rtx_def* %241 to i32*, !dbg !7720
  %bf.load515 = load i32, i32* %242, align 8, !dbg !7721
  %bf.clear516 = and i32 %bf.load515, 2147483647, !dbg !7721
  %bf.set517 = or i32 %bf.clear516, -2147483648, !dbg !7721
  store i32 %bf.set517, i32* %242, align 8, !dbg !7721
  br label %if.end518, !dbg !7722

if.end518:                                        ; preds = %if.then508, %if.then504
  br label %if.end519, !dbg !7723

if.end519:                                        ; preds = %if.end518, %if.end494
  %243 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !7724
  %u520 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 2, !dbg !7725
  %loc521 = bitcast %union.anon.0* %u520 to %struct.rtx_def**, !dbg !7726
  store %struct.rtx_def* %243, %struct.rtx_def** %loc521, align 8, !dbg !7727
  %244 = load i8, i8* %track_p, align 1, !dbg !7728
  %tobool522 = icmp ne i8 %244, 0, !dbg !7728
  br i1 %tobool522, label %if.then523, label %if.end527, !dbg !7730

if.then523:                                       ; preds = %if.end519
  %245 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !7731
  %246 = bitcast %struct.rtx_def* %245 to i32*, !dbg !7731
  %bf.load524 = load i32, i32* %246, align 8, !dbg !7732
  %bf.clear525 = and i32 %bf.load524, -536870913, !dbg !7732
  %bf.set526 = or i32 %bf.clear525, 536870912, !dbg !7732
  store i32 %bf.set526, i32* %246, align 8, !dbg !7732
  br label %if.end527, !dbg !7731

if.end527:                                        ; preds = %if.then523, %if.end519
  %247 = load i8, i8* %preserve, align 1, !dbg !7733
  %tobool528 = icmp ne i8 %247, 0, !dbg !7733
  br i1 %tobool528, label %if.then529, label %if.end534, !dbg !7735

if.then529:                                       ; preds = %if.end527
  %248 = load i8, i8* %resolve, align 1, !dbg !7736
  %conv530 = zext i8 %248 to i32, !dbg !7736
  %249 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !7738
  %250 = bitcast %struct.rtx_def* %249 to i32*, !dbg !7738
  %bf.load531 = load i32, i32* %250, align 8, !dbg !7739
  %bf.value = and i32 %conv530, 1, !dbg !7739
  %bf.shl = shl i32 %bf.value, 27, !dbg !7739
  %bf.clear532 = and i32 %bf.load531, -134217729, !dbg !7739
  %bf.set533 = or i32 %bf.clear532, %bf.shl, !dbg !7739
  store i32 %bf.set533, i32* %250, align 8, !dbg !7739
  %251 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %v, align 8, !dbg !7740
  call void @preserve_value(%struct.cselib_val_struct* %251), !dbg !7741
  br label %if.end534, !dbg !7742

if.end534:                                        ; preds = %if.then529, %if.end527
  %type535 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 0, !dbg !7743
  %252 = load i32, i32* %type535, align 8, !dbg !7743
  %cmp536 = icmp eq i32 %252, 7, !dbg !7745
  br i1 %cmp536, label %if.then538, label %if.end542, !dbg !7746

if.then538:                                       ; preds = %if.end534
  %253 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !7747
  %254 = bitcast %struct.rtx_def* %253 to i32*, !dbg !7747
  %bf.load539 = load i32, i32* %254, align 8, !dbg !7748
  %bf.clear540 = and i32 %bf.load539, -67108865, !dbg !7748
  %bf.set541 = or i32 %bf.clear540, 67108864, !dbg !7748
  store i32 %bf.set541, i32* %254, align 8, !dbg !7748
  br label %if.end542, !dbg !7747

if.end542:                                        ; preds = %if.then538, %if.end534
  %type543 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 0, !dbg !7749
  %255 = load i32, i32* %type543, align 8, !dbg !7749
  %cmp544 = icmp eq i32 %255, 6, !dbg !7751
  br i1 %cmp544, label %if.then546, label %if.end550, !dbg !7752

if.then546:                                       ; preds = %if.end542
  %256 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !7753
  %257 = bitcast %struct.rtx_def* %256 to i32*, !dbg !7753
  %bf.load547 = load i32, i32* %257, align 8, !dbg !7754
  %bf.clear548 = and i32 %bf.load547, -16777217, !dbg !7754
  %bf.set549 = or i32 %bf.clear548, 16777216, !dbg !7754
  store i32 %bf.set549, i32* %257, align 8, !dbg !7754
  br label %if.end550, !dbg !7753

if.end550:                                        ; preds = %if.then546, %if.end542
  %type551 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 0, !dbg !7755
  store i32 4, i32* %type551, align 8, !dbg !7756
  br label %log_and_return, !dbg !7757

log_and_return:                                   ; preds = %if.end550, %if.then313, %if.then309
  call void @llvm.dbg.label(metadata !7758), !dbg !7759
  %258 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7760
  %tobool552 = icmp ne %struct._IO_FILE* %258, null, !dbg !7760
  br i1 %tobool552, label %land.lhs.true553, label %if.end562, !dbg !7762

land.lhs.true553:                                 ; preds = %log_and_return
  %259 = load i32, i32* @dump_flags, align 4, !dbg !7763
  %and554 = and i32 %259, 8, !dbg !7764
  %tobool555 = icmp ne i32 %and554, 0, !dbg !7764
  br i1 %tobool555, label %if.then556, label %if.end562, !dbg !7765

if.then556:                                       ; preds = %land.lhs.true553
  %u557 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 2, !dbg !7766
  %loc558 = bitcast %union.anon.0* %u557 to %struct.rtx_def**, !dbg !7767
  %260 = load %struct.rtx_def*, %struct.rtx_def** %loc558, align 8, !dbg !7767
  %261 = load %struct.count_use_info*, %struct.count_use_info** %cui, align 8, !dbg !7768
  %bb559 = getelementptr inbounds %struct.count_use_info, %struct.count_use_info* %261, i32 0, i32 1, !dbg !7769
  %262 = load %struct.basic_block_def*, %struct.basic_block_def** %bb559, align 8, !dbg !7769
  %263 = load %struct.count_use_info*, %struct.count_use_info** %cui, align 8, !dbg !7770
  %insn560 = getelementptr inbounds %struct.count_use_info, %struct.count_use_info* %263, i32 0, i32 0, !dbg !7771
  %264 = load %struct.rtx_def*, %struct.rtx_def** %insn560, align 8, !dbg !7771
  %type561 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 0, !dbg !7772
  %265 = load i32, i32* %type561, align 8, !dbg !7772
  %266 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7773
  call void @log_op_type(%struct.rtx_def* %260, %struct.basic_block_def* %262, %struct.rtx_def* %264, i32 %265, %struct._IO_FILE* %266), !dbg !7774
  br label %if.end562, !dbg !7774

if.end562:                                        ; preds = %if.then556, %land.lhs.true553, %log_and_return
  %267 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7775
  %aux563 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %267, i32 0, i32 2, !dbg !7775
  %268 = load i8*, i8** %aux563, align 8, !dbg !7775
  %269 = bitcast i8* %268 to %struct.variable_tracking_info_def*, !dbg !7775
  %mos564 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %269, i32 0, i32 0, !dbg !7775
  %call565 = call %struct.micro_operation_def* @VEC_micro_operation_heap_safe_push(%struct.VEC_micro_operation_heap** %mos564, %struct.micro_operation_def* %mo), !dbg !7775
  br label %return, !dbg !7776

return:                                           ; preds = %if.end562, %if.else304, %if.then
  ret void, !dbg !7776
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @add_uses(%struct.rtx_def** %ploc, i8* %data) #0 !dbg !7777 {
entry:
  %ploc.addr = alloca %struct.rtx_def**, align 8
  %data.addr = alloca i8*, align 8
  %loc = alloca %struct.rtx_def*, align 8
  %mode = alloca i32, align 4
  %cui = alloca %struct.count_use_info*, align 8
  %type = alloca i32, align 4
  %bb = alloca %struct.basic_block_def*, align 8
  %mo = alloca %struct.micro_operation_def, align 8
  %oloc = alloca %struct.rtx_def*, align 8
  %vloc = alloca %struct.rtx_def*, align 8
  %val = alloca %struct.cselib_val_struct*, align 8
  %mloc = alloca %struct.rtx_def*, align 8
  %address_mode = alloca i32, align 4
  %val61 = alloca %struct.cselib_val_struct*, align 8
  %moa = alloca %struct.micro_operation_def, align 8
  %mode2 = alloca i32, align 4
  %type2122 = alloca i32, align 4
  %nloc = alloca %struct.rtx_def*, align 8
  %mode2177 = alloca i32, align 4
  %type2178 = alloca i32, align 4
  %val179 = alloca %struct.cselib_val_struct*, align 8
  %vloc184 = alloca %struct.rtx_def*, align 8
  %oloc185 = alloca %struct.rtx_def*, align 8
  %nloc186 = alloca %struct.rtx_def*, align 8
  %mloc243 = alloca %struct.rtx_def*, align 8
  %address_mode244 = alloca i32, align 4
  %val246 = alloca %struct.cselib_val_struct*, align 8
  %moa257 = alloca %struct.micro_operation_def, align 8
  store %struct.rtx_def** %ploc, %struct.rtx_def*** %ploc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %ploc.addr, metadata !7778, metadata !DIExpression()), !dbg !7779
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !7780, metadata !DIExpression()), !dbg !7781
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %loc, metadata !7782, metadata !DIExpression()), !dbg !7783
  %0 = load %struct.rtx_def**, %struct.rtx_def*** %ploc.addr, align 8, !dbg !7784
  %1 = load %struct.rtx_def*, %struct.rtx_def** %0, align 8, !dbg !7785
  store %struct.rtx_def* %1, %struct.rtx_def** %loc, align 8, !dbg !7783
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !7786, metadata !DIExpression()), !dbg !7787
  store i32 0, i32* %mode, align 4, !dbg !7787
  call void @llvm.dbg.declare(metadata %struct.count_use_info** %cui, metadata !7788, metadata !DIExpression()), !dbg !7789
  %2 = load i8*, i8** %data.addr, align 8, !dbg !7790
  %3 = bitcast i8* %2 to %struct.count_use_info*, !dbg !7791
  store %struct.count_use_info* %3, %struct.count_use_info** %cui, align 8, !dbg !7789
  call void @llvm.dbg.declare(metadata i32* %type, metadata !7792, metadata !DIExpression()), !dbg !7793
  %4 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !7794
  %5 = load %struct.count_use_info*, %struct.count_use_info** %cui, align 8, !dbg !7795
  %call = call i32 @use_type(%struct.rtx_def* %4, %struct.count_use_info* %5, i32* %mode), !dbg !7796
  store i32 %call, i32* %type, align 4, !dbg !7793
  %6 = load i32, i32* %type, align 4, !dbg !7797
  %cmp = icmp ne i32 %6, 7, !dbg !7799
  br i1 %cmp, label %if.then, label %if.end356, !dbg !7800

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !7801, metadata !DIExpression()), !dbg !7803
  %7 = load %struct.count_use_info*, %struct.count_use_info** %cui, align 8, !dbg !7804
  %bb1 = getelementptr inbounds %struct.count_use_info, %struct.count_use_info* %7, i32 0, i32 1, !dbg !7805
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %bb1, align 8, !dbg !7805
  store %struct.basic_block_def* %8, %struct.basic_block_def** %bb, align 8, !dbg !7803
  call void @llvm.dbg.declare(metadata %struct.micro_operation_def* %mo, metadata !7806, metadata !DIExpression()), !dbg !7807
  %9 = load i32, i32* %type, align 4, !dbg !7808
  %type2 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 0, !dbg !7809
  store i32 %9, i32* %type2, align 8, !dbg !7810
  %10 = load i32, i32* %type, align 4, !dbg !7811
  %cmp3 = icmp eq i32 %10, 0, !dbg !7812
  br i1 %cmp3, label %cond.true, label %cond.false, !dbg !7811

cond.true:                                        ; preds = %if.then
  %11 = load i32, i32* %mode, align 4, !dbg !7813
  %12 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !7814
  %call4 = call %struct.rtx_def* @var_lowpart(i32 %11, %struct.rtx_def* %12), !dbg !7815
  br label %cond.end, !dbg !7811

cond.false:                                       ; preds = %if.then
  %13 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !7816
  br label %cond.end, !dbg !7811

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.rtx_def* [ %call4, %cond.true ], [ %13, %cond.false ], !dbg !7811
  %u = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 2, !dbg !7817
  %loc5 = bitcast %union.anon.0* %u to %struct.rtx_def**, !dbg !7818
  store %struct.rtx_def* %cond, %struct.rtx_def** %loc5, align 8, !dbg !7819
  %14 = load %struct.count_use_info*, %struct.count_use_info** %cui, align 8, !dbg !7820
  %insn = getelementptr inbounds %struct.count_use_info, %struct.count_use_info* %14, i32 0, i32 0, !dbg !7821
  %15 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7821
  %insn6 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 1, !dbg !7822
  store %struct.rtx_def* %15, %struct.rtx_def** %insn6, align 8, !dbg !7823
  %16 = load i32, i32* %type, align 4, !dbg !7824
  %cmp7 = icmp eq i32 %16, 3, !dbg !7826
  br i1 %cmp7, label %if.then8, label %if.else174, !dbg !7827

if.then8:                                         ; preds = %cond.end
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %oloc, metadata !7828, metadata !DIExpression()), !dbg !7830
  %17 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !7831
  store %struct.rtx_def* %17, %struct.rtx_def** %oloc, align 8, !dbg !7830
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %vloc, metadata !7832, metadata !DIExpression()), !dbg !7833
  %18 = load %struct.rtx_def*, %struct.rtx_def** %oloc, align 8, !dbg !7834
  %u9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1, !dbg !7834
  %fld = bitcast %union.u* %u9 to [1 x %union.rtunion_def]*, !dbg !7834
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 1, !dbg !7834
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !7834
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7834
  store %struct.rtx_def* %19, %struct.rtx_def** %vloc, align 8, !dbg !7833
  call void @llvm.dbg.declare(metadata %struct.cselib_val_struct** %val, metadata !7835, metadata !DIExpression()), !dbg !7836
  %20 = load %struct.count_use_info*, %struct.count_use_info** %cui, align 8, !dbg !7837
  %sets = getelementptr inbounds %struct.count_use_info, %struct.count_use_info* %20, i32 0, i32 2, !dbg !7837
  %21 = load %struct.cselib_set*, %struct.cselib_set** %sets, align 8, !dbg !7837
  %tobool = icmp ne %struct.cselib_set* %21, null, !dbg !7837
  br i1 %tobool, label %cond.false11, label %cond.true10, !dbg !7837

cond.true10:                                      ; preds = %if.then8
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 4952, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !7837
  br label %cond.end12, !dbg !7837

cond.false11:                                     ; preds = %if.then8
  br label %cond.end12, !dbg !7837

cond.end12:                                       ; preds = %cond.false11, %cond.true10
  %cond13 = phi i32 [ 0, %cond.true10 ], [ 0, %cond.false11 ], !dbg !7837
  %22 = load %struct.rtx_def*, %struct.rtx_def** %vloc, align 8, !dbg !7838
  %23 = bitcast %struct.rtx_def* %22 to i32*, !dbg !7838
  %bf.load = load i32, i32* %23, align 8, !dbg !7838
  %bf.clear = and i32 %bf.load, 65535, !dbg !7838
  %cmp14 = icmp eq i32 %bf.clear, 43, !dbg !7838
  br i1 %cmp14, label %land.lhs.true, label %if.end94, !dbg !7840

land.lhs.true:                                    ; preds = %cond.end12
  %24 = load %struct.rtx_def*, %struct.rtx_def** %vloc, align 8, !dbg !7841
  %u15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i32 0, i32 1, !dbg !7841
  %fld16 = bitcast %union.u* %u15 to [1 x %union.rtunion_def]*, !dbg !7841
  %arrayidx17 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld16, i64 0, i64 0, !dbg !7841
  %rt_rtx18 = bitcast %union.rtunion_def* %arrayidx17 to %struct.rtx_def**, !dbg !7841
  %25 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx18, align 8, !dbg !7841
  %26 = bitcast %struct.rtx_def* %25 to i32*, !dbg !7841
  %bf.load19 = load i32, i32* %26, align 8, !dbg !7841
  %bf.clear20 = and i32 %bf.load19, 65535, !dbg !7841
  %cmp21 = icmp eq i32 %bf.clear20, 37, !dbg !7841
  br i1 %cmp21, label %if.end94, label %land.lhs.true22, !dbg !7842

land.lhs.true22:                                  ; preds = %land.lhs.true
  %27 = load %struct.rtx_def*, %struct.rtx_def** %vloc, align 8, !dbg !7843
  %u23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1, !dbg !7843
  %fld24 = bitcast %union.u* %u23 to [1 x %union.rtunion_def]*, !dbg !7843
  %arrayidx25 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld24, i64 0, i64 0, !dbg !7843
  %rt_rtx26 = bitcast %union.rtunion_def* %arrayidx25 to %struct.rtx_def**, !dbg !7843
  %28 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx26, align 8, !dbg !7843
  %29 = bitcast %struct.rtx_def* %28 to i32*, !dbg !7843
  %bf.load27 = load i32, i32* %29, align 8, !dbg !7843
  %bf.clear28 = and i32 %bf.load27, 65535, !dbg !7843
  %cmp29 = icmp eq i32 %bf.clear28, 43, !dbg !7843
  br i1 %cmp29, label %if.end94, label %land.lhs.true30, !dbg !7844

land.lhs.true30:                                  ; preds = %land.lhs.true22
  %30 = load %struct.rtx_def*, %struct.rtx_def** %vloc, align 8, !dbg !7845
  %u31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i32 0, i32 1, !dbg !7845
  %fld32 = bitcast %union.u* %u31 to [1 x %union.rtunion_def]*, !dbg !7845
  %arrayidx33 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld32, i64 0, i64 0, !dbg !7845
  %rt_rtx34 = bitcast %union.rtunion_def* %arrayidx33 to %struct.rtx_def**, !dbg !7845
  %31 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx34, align 8, !dbg !7845
  %32 = bitcast %struct.rtx_def* %31 to i32*, !dbg !7845
  %bf.load35 = load i32, i32* %32, align 8, !dbg !7845
  %bf.clear36 = and i32 %bf.load35, 65535, !dbg !7845
  %cmp37 = icmp ne i32 %bf.clear36, 49, !dbg !7846
  br i1 %cmp37, label %if.then59, label %lor.lhs.false, !dbg !7847

lor.lhs.false:                                    ; preds = %land.lhs.true30
  %33 = load %struct.rtx_def*, %struct.rtx_def** %vloc, align 8, !dbg !7848
  %u38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i32 0, i32 1, !dbg !7848
  %fld39 = bitcast %union.u* %u38 to [1 x %union.rtunion_def]*, !dbg !7848
  %arrayidx40 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld39, i64 0, i64 0, !dbg !7848
  %rt_rtx41 = bitcast %union.rtunion_def* %arrayidx40 to %struct.rtx_def**, !dbg !7848
  %34 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx41, align 8, !dbg !7848
  %u42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1, !dbg !7848
  %fld43 = bitcast %union.u* %u42 to [1 x %union.rtunion_def]*, !dbg !7848
  %arrayidx44 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld43, i64 0, i64 0, !dbg !7848
  %rt_rtx45 = bitcast %union.rtunion_def* %arrayidx44 to %struct.rtx_def**, !dbg !7848
  %35 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx45, align 8, !dbg !7848
  %36 = load %struct.rtx_def*, %struct.rtx_def** @cfa_base_rtx, align 8, !dbg !7849
  %cmp46 = icmp ne %struct.rtx_def* %35, %36, !dbg !7850
  br i1 %cmp46, label %if.then59, label %lor.lhs.false47, !dbg !7851

lor.lhs.false47:                                  ; preds = %lor.lhs.false
  %37 = load %struct.rtx_def*, %struct.rtx_def** %vloc, align 8, !dbg !7852
  %u48 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1, !dbg !7852
  %fld49 = bitcast %union.u* %u48 to [1 x %union.rtunion_def]*, !dbg !7852
  %arrayidx50 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld49, i64 0, i64 0, !dbg !7852
  %rt_rtx51 = bitcast %union.rtunion_def* %arrayidx50 to %struct.rtx_def**, !dbg !7852
  %38 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx51, align 8, !dbg !7852
  %u52 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %38, i32 0, i32 1, !dbg !7852
  %fld53 = bitcast %union.u* %u52 to [1 x %union.rtunion_def]*, !dbg !7852
  %arrayidx54 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld53, i64 0, i64 1, !dbg !7852
  %rt_rtx55 = bitcast %union.rtunion_def* %arrayidx54 to %struct.rtx_def**, !dbg !7852
  %39 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx55, align 8, !dbg !7852
  %40 = bitcast %struct.rtx_def* %39 to i32*, !dbg !7852
  %bf.load56 = load i32, i32* %40, align 8, !dbg !7852
  %bf.clear57 = and i32 %bf.load56, 65535, !dbg !7852
  %cmp58 = icmp eq i32 %bf.clear57, 30, !dbg !7852
  br i1 %cmp58, label %if.end94, label %if.then59, !dbg !7853

if.then59:                                        ; preds = %lor.lhs.false47, %lor.lhs.false, %land.lhs.true30
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %mloc, metadata !7854, metadata !DIExpression()), !dbg !7856
  %41 = load %struct.rtx_def*, %struct.rtx_def** %vloc, align 8, !dbg !7857
  store %struct.rtx_def* %41, %struct.rtx_def** %mloc, align 8, !dbg !7856
  call void @llvm.dbg.declare(metadata i32* %address_mode, metadata !7858, metadata !DIExpression()), !dbg !7859
  %42 = load %struct.rtx_def*, %struct.rtx_def** %mloc, align 8, !dbg !7860
  %call60 = call i32 @get_address_mode(%struct.rtx_def* %42), !dbg !7861
  store i32 %call60, i32* %address_mode, align 4, !dbg !7859
  call void @llvm.dbg.declare(metadata %struct.cselib_val_struct** %val61, metadata !7862, metadata !DIExpression()), !dbg !7863
  %43 = load %struct.rtx_def*, %struct.rtx_def** %mloc, align 8, !dbg !7864
  %u62 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i32 0, i32 1, !dbg !7864
  %fld63 = bitcast %union.u* %u62 to [1 x %union.rtunion_def]*, !dbg !7864
  %arrayidx64 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld63, i64 0, i64 0, !dbg !7864
  %rt_rtx65 = bitcast %union.rtunion_def* %arrayidx64 to %struct.rtx_def**, !dbg !7864
  %44 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx65, align 8, !dbg !7864
  %45 = load i32, i32* %address_mode, align 4, !dbg !7865
  %call66 = call %struct.cselib_val_struct* @cselib_lookup(%struct.rtx_def* %44, i32 %45, i32 0), !dbg !7866
  store %struct.cselib_val_struct* %call66, %struct.cselib_val_struct** %val61, align 8, !dbg !7863
  %46 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %val61, align 8, !dbg !7867
  %tobool67 = icmp ne %struct.cselib_val_struct* %46, null, !dbg !7867
  br i1 %tobool67, label %land.lhs.true68, label %if.end93, !dbg !7869

land.lhs.true68:                                  ; preds = %if.then59
  %47 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %val61, align 8, !dbg !7870
  %call69 = call zeroext i8 @cselib_preserved_value_p(%struct.cselib_val_struct* %47), !dbg !7871
  %tobool70 = icmp ne i8 %call69, 0, !dbg !7871
  br i1 %tobool70, label %if.end93, label %if.then71, !dbg !7872

if.then71:                                        ; preds = %land.lhs.true68
  call void @llvm.dbg.declare(metadata %struct.micro_operation_def* %moa, metadata !7873, metadata !DIExpression()), !dbg !7875
  %48 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %val61, align 8, !dbg !7876
  call void @preserve_value(%struct.cselib_val_struct* %48), !dbg !7877
  %49 = load %struct.rtx_def*, %struct.rtx_def** %mloc, align 8, !dbg !7878
  %u72 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %49, i32 0, i32 1, !dbg !7878
  %fld73 = bitcast %union.u* %u72 to [1 x %union.rtunion_def]*, !dbg !7878
  %arrayidx74 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld73, i64 0, i64 0, !dbg !7878
  %rt_rtx75 = bitcast %union.rtunion_def* %arrayidx74 to %struct.rtx_def**, !dbg !7878
  %50 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx75, align 8, !dbg !7878
  %call76 = call %struct.rtx_def* @cselib_subst_to_values(%struct.rtx_def* %50), !dbg !7879
  store %struct.rtx_def* %call76, %struct.rtx_def** %mloc, align 8, !dbg !7880
  %type77 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %moa, i32 0, i32 0, !dbg !7881
  store i32 2, i32* %type77, align 8, !dbg !7882
  %51 = load %struct.count_use_info*, %struct.count_use_info** %cui, align 8, !dbg !7883
  %insn78 = getelementptr inbounds %struct.count_use_info, %struct.count_use_info* %51, i32 0, i32 0, !dbg !7884
  %52 = load %struct.rtx_def*, %struct.rtx_def** %insn78, align 8, !dbg !7884
  %insn79 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %moa, i32 0, i32 1, !dbg !7885
  store %struct.rtx_def* %52, %struct.rtx_def** %insn79, align 8, !dbg !7886
  %53 = load i32, i32* %address_mode, align 4, !dbg !7887
  %54 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %val61, align 8, !dbg !7887
  %val_rtx = getelementptr inbounds %struct.cselib_val_struct, %struct.cselib_val_struct* %54, i32 0, i32 2, !dbg !7887
  %55 = load %struct.rtx_def*, %struct.rtx_def** %val_rtx, align 8, !dbg !7887
  %56 = load %struct.rtx_def*, %struct.rtx_def** %mloc, align 8, !dbg !7887
  %call80 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 41, i32 %53, %struct.rtx_def* %55, %struct.rtx_def* %56), !dbg !7887
  %u81 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %moa, i32 0, i32 2, !dbg !7888
  %loc82 = bitcast %union.anon.0* %u81 to %struct.rtx_def**, !dbg !7889
  store %struct.rtx_def* %call80, %struct.rtx_def** %loc82, align 8, !dbg !7890
  %57 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7891
  %tobool83 = icmp ne %struct._IO_FILE* %57, null, !dbg !7891
  br i1 %tobool83, label %land.lhs.true84, label %if.end, !dbg !7893

land.lhs.true84:                                  ; preds = %if.then71
  %58 = load i32, i32* @dump_flags, align 4, !dbg !7894
  %and = and i32 %58, 8, !dbg !7895
  %tobool85 = icmp ne i32 %and, 0, !dbg !7895
  br i1 %tobool85, label %if.then86, label %if.end, !dbg !7896

if.then86:                                        ; preds = %land.lhs.true84
  %u87 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %moa, i32 0, i32 2, !dbg !7897
  %loc88 = bitcast %union.anon.0* %u87 to %struct.rtx_def**, !dbg !7898
  %59 = load %struct.rtx_def*, %struct.rtx_def** %loc88, align 8, !dbg !7898
  %60 = load %struct.count_use_info*, %struct.count_use_info** %cui, align 8, !dbg !7899
  %bb89 = getelementptr inbounds %struct.count_use_info, %struct.count_use_info* %60, i32 0, i32 1, !dbg !7900
  %61 = load %struct.basic_block_def*, %struct.basic_block_def** %bb89, align 8, !dbg !7900
  %62 = load %struct.count_use_info*, %struct.count_use_info** %cui, align 8, !dbg !7901
  %insn90 = getelementptr inbounds %struct.count_use_info, %struct.count_use_info* %62, i32 0, i32 0, !dbg !7902
  %63 = load %struct.rtx_def*, %struct.rtx_def** %insn90, align 8, !dbg !7902
  %type91 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %moa, i32 0, i32 0, !dbg !7903
  %64 = load i32, i32* %type91, align 8, !dbg !7903
  %65 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !7904
  call void @log_op_type(%struct.rtx_def* %59, %struct.basic_block_def* %61, %struct.rtx_def* %63, i32 %64, %struct._IO_FILE* %65), !dbg !7905
  br label %if.end, !dbg !7905

if.end:                                           ; preds = %if.then86, %land.lhs.true84, %if.then71
  %66 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7906
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %66, i32 0, i32 2, !dbg !7906
  %67 = load i8*, i8** %aux, align 8, !dbg !7906
  %68 = bitcast i8* %67 to %struct.variable_tracking_info_def*, !dbg !7906
  %mos = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %68, i32 0, i32 0, !dbg !7906
  %call92 = call %struct.micro_operation_def* @VEC_micro_operation_heap_safe_push(%struct.VEC_micro_operation_heap** %mos, %struct.micro_operation_def* %moa), !dbg !7906
  br label %if.end93, !dbg !7907

if.end93:                                         ; preds = %if.end, %land.lhs.true68, %if.then59
  br label %if.end94, !dbg !7908

if.end94:                                         ; preds = %if.end93, %lor.lhs.false47, %land.lhs.true22, %land.lhs.true, %cond.end12
  %69 = load %struct.rtx_def*, %struct.rtx_def** %vloc, align 8, !dbg !7909
  %70 = bitcast %struct.rtx_def* %69 to i32*, !dbg !7909
  %bf.load95 = load i32, i32* %70, align 8, !dbg !7909
  %bf.clear96 = and i32 %bf.load95, 65535, !dbg !7909
  %idxprom = sext i32 %bf.clear96 to i64, !dbg !7909
  %arrayidx97 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !7909
  %71 = load i32, i32* %arrayidx97, align 4, !dbg !7909
  %cmp98 = icmp eq i32 %71, 9, !dbg !7909
  br i1 %cmp98, label %land.lhs.true99, label %if.else, !dbg !7911

land.lhs.true99:                                  ; preds = %if.end94
  %72 = load %struct.rtx_def*, %struct.rtx_def** %vloc, align 8, !dbg !7912
  %73 = bitcast %struct.rtx_def* %72 to i32*, !dbg !7912
  %bf.load100 = load i32, i32* %73, align 8, !dbg !7912
  %bf.clear101 = and i32 %bf.load100, 65535, !dbg !7912
  %cmp102 = icmp ne i32 %bf.clear101, 35, !dbg !7913
  br i1 %cmp102, label %if.then106, label %lor.lhs.false103, !dbg !7914

lor.lhs.false103:                                 ; preds = %land.lhs.true99
  %call104 = call i32 @for_each_rtx(%struct.rtx_def** %vloc, i32 (%struct.rtx_def**, i8*)* @non_suitable_const, i8* null), !dbg !7915
  %tobool105 = icmp ne i32 %call104, 0, !dbg !7915
  br i1 %tobool105, label %if.then106, label %if.else, !dbg !7916

if.then106:                                       ; preds = %lor.lhs.false103, %land.lhs.true99
  br label %if.end171, !dbg !7916

if.else:                                          ; preds = %lor.lhs.false103, %if.end94
  %74 = load %struct.rtx_def*, %struct.rtx_def** %vloc, align 8, !dbg !7917
  %75 = bitcast %struct.rtx_def* %74 to i32*, !dbg !7917
  %bf.load107 = load i32, i32* %75, align 8, !dbg !7917
  %bf.clear108 = and i32 %bf.load107, 65535, !dbg !7917
  %cmp109 = icmp eq i32 %bf.clear108, 25, !dbg !7917
  br i1 %cmp109, label %land.lhs.true110, label %land.lhs.true116, !dbg !7917

land.lhs.true110:                                 ; preds = %if.else
  %76 = load %struct.rtx_def*, %struct.rtx_def** %vloc, align 8, !dbg !7917
  %u111 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %76, i32 0, i32 1, !dbg !7917
  %fld112 = bitcast %union.u* %u111 to [1 x %union.rtunion_def]*, !dbg !7917
  %arrayidx113 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld112, i64 0, i64 0, !dbg !7917
  %rt_rtx114 = bitcast %union.rtunion_def* %arrayidx113 to %struct.rtx_def**, !dbg !7917
  %77 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx114, align 8, !dbg !7917
  %78 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !7917
  %cmp115 = icmp eq %struct.rtx_def* %77, %78, !dbg !7917
  br i1 %cmp115, label %if.else152, label %land.lhs.true116, !dbg !7919

land.lhs.true116:                                 ; preds = %land.lhs.true110, %if.else
  %79 = load %struct.rtx_def*, %struct.rtx_def** %vloc, align 8, !dbg !7920
  %80 = load %struct.rtx_def*, %struct.rtx_def** %oloc, align 8, !dbg !7921
  %81 = bitcast %struct.rtx_def* %80 to i32*, !dbg !7921
  %bf.load117 = load i32, i32* %81, align 8, !dbg !7921
  %bf.lshr = lshr i32 %bf.load117, 16, !dbg !7921
  %bf.clear118 = and i32 %bf.lshr, 255, !dbg !7921
  %82 = load %struct.count_use_info*, %struct.count_use_info** %cui, align 8, !dbg !7922
  %call119 = call %struct.cselib_val_struct* @find_use_val(%struct.rtx_def* %79, i32 %bf.clear118, %struct.count_use_info* %82), !dbg !7923
  store %struct.cselib_val_struct* %call119, %struct.cselib_val_struct** %val, align 8, !dbg !7924
  %tobool120 = icmp ne %struct.cselib_val_struct* %call119, null, !dbg !7924
  br i1 %tobool120, label %if.then121, label %if.else152, !dbg !7925

if.then121:                                       ; preds = %land.lhs.true116
  call void @llvm.dbg.declare(metadata i32* %mode2, metadata !7926, metadata !DIExpression()), !dbg !7928
  call void @llvm.dbg.declare(metadata i32* %type2122, metadata !7929, metadata !DIExpression()), !dbg !7930
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %nloc, metadata !7931, metadata !DIExpression()), !dbg !7932
  %83 = load %struct.rtx_def*, %struct.rtx_def** %vloc, align 8, !dbg !7933
  %call123 = call %struct.rtx_def* @replace_expr_with_values(%struct.rtx_def* %83), !dbg !7934
  store %struct.rtx_def* %call123, %struct.rtx_def** %nloc, align 8, !dbg !7932
  %84 = load %struct.rtx_def*, %struct.rtx_def** %nloc, align 8, !dbg !7935
  %tobool124 = icmp ne %struct.rtx_def* %84, null, !dbg !7935
  br i1 %tobool124, label %if.then125, label %if.end131, !dbg !7937

if.then125:                                       ; preds = %if.then121
  %85 = load %struct.rtx_def*, %struct.rtx_def** %oloc, align 8, !dbg !7938
  %call126 = call %struct.rtx_def* @shallow_copy_rtx_stat(%struct.rtx_def* %85), !dbg !7938
  store %struct.rtx_def* %call126, %struct.rtx_def** %oloc, align 8, !dbg !7940
  %86 = load %struct.rtx_def*, %struct.rtx_def** %nloc, align 8, !dbg !7941
  %87 = load %struct.rtx_def*, %struct.rtx_def** %oloc, align 8, !dbg !7942
  %u127 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %87, i32 0, i32 1, !dbg !7942
  %fld128 = bitcast %union.u* %u127 to [1 x %union.rtunion_def]*, !dbg !7942
  %arrayidx129 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld128, i64 0, i64 1, !dbg !7942
  %rt_rtx130 = bitcast %union.rtunion_def* %arrayidx129 to %struct.rtx_def**, !dbg !7942
  store %struct.rtx_def* %86, %struct.rtx_def** %rt_rtx130, align 8, !dbg !7943
  br label %if.end131, !dbg !7944

if.end131:                                        ; preds = %if.then125, %if.then121
  %88 = load i32, i32* %mode, align 4, !dbg !7945
  %89 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %val, align 8, !dbg !7945
  %val_rtx132 = getelementptr inbounds %struct.cselib_val_struct, %struct.cselib_val_struct* %89, i32 0, i32 2, !dbg !7945
  %90 = load %struct.rtx_def*, %struct.rtx_def** %val_rtx132, align 8, !dbg !7945
  %91 = load %struct.rtx_def*, %struct.rtx_def** %oloc, align 8, !dbg !7945
  %call133 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 41, i32 %88, %struct.rtx_def* %90, %struct.rtx_def* %91), !dbg !7945
  store %struct.rtx_def* %call133, %struct.rtx_def** %oloc, align 8, !dbg !7946
  %92 = load %struct.rtx_def*, %struct.rtx_def** %vloc, align 8, !dbg !7947
  %call134 = call i32 @use_type(%struct.rtx_def* %92, %struct.count_use_info* null, i32* %mode2), !dbg !7948
  store i32 %call134, i32* %type2122, align 4, !dbg !7949
  %93 = load i32, i32* %type2122, align 4, !dbg !7950
  %cmp135 = icmp eq i32 %93, 0, !dbg !7950
  br i1 %cmp135, label %cond.false141, label %lor.lhs.false136, !dbg !7950

lor.lhs.false136:                                 ; preds = %if.end131
  %94 = load i32, i32* %type2122, align 4, !dbg !7950
  %cmp137 = icmp eq i32 %94, 1, !dbg !7950
  br i1 %cmp137, label %cond.false141, label %lor.lhs.false138, !dbg !7950

lor.lhs.false138:                                 ; preds = %lor.lhs.false136
  %95 = load i32, i32* %type2122, align 4, !dbg !7950
  %cmp139 = icmp eq i32 %95, 7, !dbg !7950
  br i1 %cmp139, label %cond.false141, label %cond.true140, !dbg !7950

cond.true140:                                     ; preds = %lor.lhs.false138
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 5004, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !7950
  br label %cond.end142, !dbg !7950

cond.false141:                                    ; preds = %lor.lhs.false138, %lor.lhs.false136, %if.end131
  br label %cond.end142, !dbg !7950

cond.end142:                                      ; preds = %cond.false141, %cond.true140
  %cond143 = phi i32 [ 0, %cond.true140 ], [ 0, %cond.false141 ], !dbg !7950
  %96 = load i32, i32* %type2122, align 4, !dbg !7951
  %cmp144 = icmp eq i32 %96, 7, !dbg !7953
  br i1 %cmp144, label %land.lhs.true145, label %if.end151, !dbg !7954

land.lhs.true145:                                 ; preds = %cond.end142
  %97 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %val, align 8, !dbg !7955
  %call146 = call zeroext i8 @cselib_preserved_value_p(%struct.cselib_val_struct* %97), !dbg !7956
  %tobool147 = icmp ne i8 %call146, 0, !dbg !7956
  br i1 %tobool147, label %if.end151, label %if.then148, !dbg !7957

if.then148:                                       ; preds = %land.lhs.true145
  %98 = load %struct.rtx_def*, %struct.rtx_def** %oloc, align 8, !dbg !7958
  %99 = bitcast %struct.rtx_def* %98 to i32*, !dbg !7958
  %bf.load149 = load i32, i32* %99, align 8, !dbg !7960
  %bf.clear150 = and i32 %bf.load149, -134217729, !dbg !7960
  %bf.set = or i32 %bf.clear150, 134217728, !dbg !7960
  store i32 %bf.set, i32* %99, align 8, !dbg !7960
  %100 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %val, align 8, !dbg !7961
  call void @preserve_value(%struct.cselib_val_struct* %100), !dbg !7962
  br label %if.end151, !dbg !7963

if.end151:                                        ; preds = %if.then148, %land.lhs.true145, %cond.end142
  br label %if.end170, !dbg !7964

if.else152:                                       ; preds = %land.lhs.true116, %land.lhs.true110
  %101 = load %struct.rtx_def*, %struct.rtx_def** %vloc, align 8, !dbg !7965
  %102 = bitcast %struct.rtx_def* %101 to i32*, !dbg !7965
  %bf.load153 = load i32, i32* %102, align 8, !dbg !7965
  %bf.clear154 = and i32 %bf.load153, 65535, !dbg !7965
  %cmp155 = icmp eq i32 %bf.clear154, 25, !dbg !7965
  br i1 %cmp155, label %land.lhs.true156, label %if.then162, !dbg !7965

land.lhs.true156:                                 ; preds = %if.else152
  %103 = load %struct.rtx_def*, %struct.rtx_def** %vloc, align 8, !dbg !7965
  %u157 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %103, i32 0, i32 1, !dbg !7965
  %fld158 = bitcast %union.u* %u157 to [1 x %union.rtunion_def]*, !dbg !7965
  %arrayidx159 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld158, i64 0, i64 0, !dbg !7965
  %rt_rtx160 = bitcast %union.rtunion_def* %arrayidx159 to %struct.rtx_def**, !dbg !7965
  %104 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx160, align 8, !dbg !7965
  %105 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !7965
  %cmp161 = icmp eq %struct.rtx_def* %104, %105, !dbg !7965
  br i1 %cmp161, label %if.end169, label %if.then162, !dbg !7967

if.then162:                                       ; preds = %land.lhs.true156, %if.else152
  %106 = load %struct.rtx_def*, %struct.rtx_def** %oloc, align 8, !dbg !7968
  %call163 = call %struct.rtx_def* @shallow_copy_rtx_stat(%struct.rtx_def* %106), !dbg !7968
  store %struct.rtx_def* %call163, %struct.rtx_def** %oloc, align 8, !dbg !7970
  %107 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !7971
  %call164 = call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 25, i32 0, %struct.rtx_def* %107), !dbg !7971
  %108 = load %struct.rtx_def*, %struct.rtx_def** %oloc, align 8, !dbg !7972
  %u165 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %108, i32 0, i32 1, !dbg !7972
  %fld166 = bitcast %union.u* %u165 to [1 x %union.rtunion_def]*, !dbg !7972
  %arrayidx167 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld166, i64 0, i64 1, !dbg !7972
  %rt_rtx168 = bitcast %union.rtunion_def* %arrayidx167 to %struct.rtx_def**, !dbg !7972
  store %struct.rtx_def* %call164, %struct.rtx_def** %rt_rtx168, align 8, !dbg !7973
  br label %if.end169, !dbg !7974

if.end169:                                        ; preds = %if.then162, %land.lhs.true156
  br label %if.end170

if.end170:                                        ; preds = %if.end169, %if.end151
  br label %if.end171

if.end171:                                        ; preds = %if.end170, %if.then106
  %109 = load %struct.rtx_def*, %struct.rtx_def** %oloc, align 8, !dbg !7975
  %u172 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 2, !dbg !7976
  %loc173 = bitcast %union.anon.0* %u172 to %struct.rtx_def**, !dbg !7977
  store %struct.rtx_def* %109, %struct.rtx_def** %loc173, align 8, !dbg !7978
  br label %if.end341, !dbg !7979

if.else174:                                       ; preds = %cond.end
  %110 = load i32, i32* %type, align 4, !dbg !7980
  %cmp175 = icmp eq i32 %110, 2, !dbg !7982
  br i1 %cmp175, label %if.then176, label %if.else332, !dbg !7983

if.then176:                                       ; preds = %if.else174
  call void @llvm.dbg.declare(metadata i32* %mode2177, metadata !7984, metadata !DIExpression()), !dbg !7986
  store i32 0, i32* %mode2177, align 4, !dbg !7986
  call void @llvm.dbg.declare(metadata i32* %type2178, metadata !7987, metadata !DIExpression()), !dbg !7988
  call void @llvm.dbg.declare(metadata %struct.cselib_val_struct** %val179, metadata !7989, metadata !DIExpression()), !dbg !7990
  %111 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !7991
  %112 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !7992
  %113 = bitcast %struct.rtx_def* %112 to i32*, !dbg !7992
  %bf.load180 = load i32, i32* %113, align 8, !dbg !7992
  %bf.lshr181 = lshr i32 %bf.load180, 16, !dbg !7992
  %bf.clear182 = and i32 %bf.lshr181, 255, !dbg !7992
  %114 = load %struct.count_use_info*, %struct.count_use_info** %cui, align 8, !dbg !7993
  %call183 = call %struct.cselib_val_struct* @find_use_val(%struct.rtx_def* %111, i32 %bf.clear182, %struct.count_use_info* %114), !dbg !7994
  store %struct.cselib_val_struct* %call183, %struct.cselib_val_struct** %val179, align 8, !dbg !7990
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %vloc184, metadata !7995, metadata !DIExpression()), !dbg !7996
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %oloc185, metadata !7997, metadata !DIExpression()), !dbg !7998
  %115 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !7999
  store %struct.rtx_def* %115, %struct.rtx_def** %oloc185, align 8, !dbg !7998
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %nloc186, metadata !8000, metadata !DIExpression()), !dbg !8001
  %116 = load %struct.count_use_info*, %struct.count_use_info** %cui, align 8, !dbg !8002
  %sets187 = getelementptr inbounds %struct.count_use_info, %struct.count_use_info* %116, i32 0, i32 2, !dbg !8002
  %117 = load %struct.cselib_set*, %struct.cselib_set** %sets187, align 8, !dbg !8002
  %tobool188 = icmp ne %struct.cselib_set* %117, null, !dbg !8002
  br i1 %tobool188, label %cond.false190, label %cond.true189, !dbg !8002

cond.true189:                                     ; preds = %if.then176
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 5028, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !8002
  br label %cond.end191, !dbg !8002

cond.false190:                                    ; preds = %if.then176
  br label %cond.end191, !dbg !8002

cond.end191:                                      ; preds = %cond.false190, %cond.true189
  %cond192 = phi i32 [ 0, %cond.true189 ], [ 0, %cond.false190 ], !dbg !8002
  %118 = load %struct.rtx_def*, %struct.rtx_def** %oloc185, align 8, !dbg !8003
  %119 = bitcast %struct.rtx_def* %118 to i32*, !dbg !8003
  %bf.load193 = load i32, i32* %119, align 8, !dbg !8003
  %bf.clear194 = and i32 %bf.load193, 65535, !dbg !8003
  %cmp195 = icmp eq i32 %bf.clear194, 43, !dbg !8003
  br i1 %cmp195, label %land.lhs.true196, label %if.end285, !dbg !8005

land.lhs.true196:                                 ; preds = %cond.end191
  %120 = load %struct.rtx_def*, %struct.rtx_def** %oloc185, align 8, !dbg !8006
  %u197 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %120, i32 0, i32 1, !dbg !8006
  %fld198 = bitcast %union.u* %u197 to [1 x %union.rtunion_def]*, !dbg !8006
  %arrayidx199 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld198, i64 0, i64 0, !dbg !8006
  %rt_rtx200 = bitcast %union.rtunion_def* %arrayidx199 to %struct.rtx_def**, !dbg !8006
  %121 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx200, align 8, !dbg !8006
  %122 = bitcast %struct.rtx_def* %121 to i32*, !dbg !8006
  %bf.load201 = load i32, i32* %122, align 8, !dbg !8006
  %bf.clear202 = and i32 %bf.load201, 65535, !dbg !8006
  %cmp203 = icmp eq i32 %bf.clear202, 37, !dbg !8006
  br i1 %cmp203, label %if.end285, label %land.lhs.true204, !dbg !8007

land.lhs.true204:                                 ; preds = %land.lhs.true196
  %123 = load %struct.rtx_def*, %struct.rtx_def** %oloc185, align 8, !dbg !8008
  %u205 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %123, i32 0, i32 1, !dbg !8008
  %fld206 = bitcast %union.u* %u205 to [1 x %union.rtunion_def]*, !dbg !8008
  %arrayidx207 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld206, i64 0, i64 0, !dbg !8008
  %rt_rtx208 = bitcast %union.rtunion_def* %arrayidx207 to %struct.rtx_def**, !dbg !8008
  %124 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx208, align 8, !dbg !8008
  %125 = bitcast %struct.rtx_def* %124 to i32*, !dbg !8008
  %bf.load209 = load i32, i32* %125, align 8, !dbg !8008
  %bf.clear210 = and i32 %bf.load209, 65535, !dbg !8008
  %cmp211 = icmp eq i32 %bf.clear210, 43, !dbg !8008
  br i1 %cmp211, label %if.end285, label %land.lhs.true212, !dbg !8009

land.lhs.true212:                                 ; preds = %land.lhs.true204
  %126 = load %struct.rtx_def*, %struct.rtx_def** %oloc185, align 8, !dbg !8010
  %u213 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %126, i32 0, i32 1, !dbg !8010
  %fld214 = bitcast %union.u* %u213 to [1 x %union.rtunion_def]*, !dbg !8010
  %arrayidx215 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld214, i64 0, i64 0, !dbg !8010
  %rt_rtx216 = bitcast %union.rtunion_def* %arrayidx215 to %struct.rtx_def**, !dbg !8010
  %127 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx216, align 8, !dbg !8010
  %128 = bitcast %struct.rtx_def* %127 to i32*, !dbg !8010
  %bf.load217 = load i32, i32* %128, align 8, !dbg !8010
  %bf.clear218 = and i32 %bf.load217, 65535, !dbg !8010
  %cmp219 = icmp ne i32 %bf.clear218, 49, !dbg !8011
  br i1 %cmp219, label %if.then242, label %lor.lhs.false220, !dbg !8012

lor.lhs.false220:                                 ; preds = %land.lhs.true212
  %129 = load %struct.rtx_def*, %struct.rtx_def** %oloc185, align 8, !dbg !8013
  %u221 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %129, i32 0, i32 1, !dbg !8013
  %fld222 = bitcast %union.u* %u221 to [1 x %union.rtunion_def]*, !dbg !8013
  %arrayidx223 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld222, i64 0, i64 0, !dbg !8013
  %rt_rtx224 = bitcast %union.rtunion_def* %arrayidx223 to %struct.rtx_def**, !dbg !8013
  %130 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx224, align 8, !dbg !8013
  %u225 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %130, i32 0, i32 1, !dbg !8013
  %fld226 = bitcast %union.u* %u225 to [1 x %union.rtunion_def]*, !dbg !8013
  %arrayidx227 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld226, i64 0, i64 0, !dbg !8013
  %rt_rtx228 = bitcast %union.rtunion_def* %arrayidx227 to %struct.rtx_def**, !dbg !8013
  %131 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx228, align 8, !dbg !8013
  %132 = load %struct.rtx_def*, %struct.rtx_def** @cfa_base_rtx, align 8, !dbg !8014
  %cmp229 = icmp ne %struct.rtx_def* %131, %132, !dbg !8015
  br i1 %cmp229, label %if.then242, label %lor.lhs.false230, !dbg !8016

lor.lhs.false230:                                 ; preds = %lor.lhs.false220
  %133 = load %struct.rtx_def*, %struct.rtx_def** %oloc185, align 8, !dbg !8017
  %u231 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %133, i32 0, i32 1, !dbg !8017
  %fld232 = bitcast %union.u* %u231 to [1 x %union.rtunion_def]*, !dbg !8017
  %arrayidx233 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld232, i64 0, i64 0, !dbg !8017
  %rt_rtx234 = bitcast %union.rtunion_def* %arrayidx233 to %struct.rtx_def**, !dbg !8017
  %134 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx234, align 8, !dbg !8017
  %u235 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %134, i32 0, i32 1, !dbg !8017
  %fld236 = bitcast %union.u* %u235 to [1 x %union.rtunion_def]*, !dbg !8017
  %arrayidx237 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld236, i64 0, i64 1, !dbg !8017
  %rt_rtx238 = bitcast %union.rtunion_def* %arrayidx237 to %struct.rtx_def**, !dbg !8017
  %135 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx238, align 8, !dbg !8017
  %136 = bitcast %struct.rtx_def* %135 to i32*, !dbg !8017
  %bf.load239 = load i32, i32* %136, align 8, !dbg !8017
  %bf.clear240 = and i32 %bf.load239, 65535, !dbg !8017
  %cmp241 = icmp eq i32 %bf.clear240, 30, !dbg !8017
  br i1 %cmp241, label %if.end285, label %if.then242, !dbg !8018

if.then242:                                       ; preds = %lor.lhs.false230, %lor.lhs.false220, %land.lhs.true212
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %mloc243, metadata !8019, metadata !DIExpression()), !dbg !8021
  %137 = load %struct.rtx_def*, %struct.rtx_def** %oloc185, align 8, !dbg !8022
  store %struct.rtx_def* %137, %struct.rtx_def** %mloc243, align 8, !dbg !8021
  call void @llvm.dbg.declare(metadata i32* %address_mode244, metadata !8023, metadata !DIExpression()), !dbg !8024
  %138 = load %struct.rtx_def*, %struct.rtx_def** %mloc243, align 8, !dbg !8025
  %call245 = call i32 @get_address_mode(%struct.rtx_def* %138), !dbg !8026
  store i32 %call245, i32* %address_mode244, align 4, !dbg !8024
  call void @llvm.dbg.declare(metadata %struct.cselib_val_struct** %val246, metadata !8027, metadata !DIExpression()), !dbg !8028
  %139 = load %struct.rtx_def*, %struct.rtx_def** %mloc243, align 8, !dbg !8029
  %u247 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %139, i32 0, i32 1, !dbg !8029
  %fld248 = bitcast %union.u* %u247 to [1 x %union.rtunion_def]*, !dbg !8029
  %arrayidx249 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld248, i64 0, i64 0, !dbg !8029
  %rt_rtx250 = bitcast %union.rtunion_def* %arrayidx249 to %struct.rtx_def**, !dbg !8029
  %140 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx250, align 8, !dbg !8029
  %141 = load i32, i32* %address_mode244, align 4, !dbg !8030
  %call251 = call %struct.cselib_val_struct* @cselib_lookup(%struct.rtx_def* %140, i32 %141, i32 0), !dbg !8031
  store %struct.cselib_val_struct* %call251, %struct.cselib_val_struct** %val246, align 8, !dbg !8028
  %142 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %val246, align 8, !dbg !8032
  %tobool252 = icmp ne %struct.cselib_val_struct* %142, null, !dbg !8032
  br i1 %tobool252, label %land.lhs.true253, label %if.end284, !dbg !8034

land.lhs.true253:                                 ; preds = %if.then242
  %143 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %val246, align 8, !dbg !8035
  %call254 = call zeroext i8 @cselib_preserved_value_p(%struct.cselib_val_struct* %143), !dbg !8036
  %tobool255 = icmp ne i8 %call254, 0, !dbg !8036
  br i1 %tobool255, label %if.end284, label %if.then256, !dbg !8037

if.then256:                                       ; preds = %land.lhs.true253
  call void @llvm.dbg.declare(metadata %struct.micro_operation_def* %moa257, metadata !8038, metadata !DIExpression()), !dbg !8040
  %144 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %val246, align 8, !dbg !8041
  call void @preserve_value(%struct.cselib_val_struct* %144), !dbg !8042
  %145 = load %struct.rtx_def*, %struct.rtx_def** %mloc243, align 8, !dbg !8043
  %u258 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %145, i32 0, i32 1, !dbg !8043
  %fld259 = bitcast %union.u* %u258 to [1 x %union.rtunion_def]*, !dbg !8043
  %arrayidx260 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld259, i64 0, i64 0, !dbg !8043
  %rt_rtx261 = bitcast %union.rtunion_def* %arrayidx260 to %struct.rtx_def**, !dbg !8043
  %146 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx261, align 8, !dbg !8043
  %call262 = call %struct.rtx_def* @cselib_subst_to_values(%struct.rtx_def* %146), !dbg !8044
  store %struct.rtx_def* %call262, %struct.rtx_def** %mloc243, align 8, !dbg !8045
  %type263 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %moa257, i32 0, i32 0, !dbg !8046
  store i32 2, i32* %type263, align 8, !dbg !8047
  %147 = load %struct.count_use_info*, %struct.count_use_info** %cui, align 8, !dbg !8048
  %insn264 = getelementptr inbounds %struct.count_use_info, %struct.count_use_info* %147, i32 0, i32 0, !dbg !8049
  %148 = load %struct.rtx_def*, %struct.rtx_def** %insn264, align 8, !dbg !8049
  %insn265 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %moa257, i32 0, i32 1, !dbg !8050
  store %struct.rtx_def* %148, %struct.rtx_def** %insn265, align 8, !dbg !8051
  %149 = load i32, i32* %address_mode244, align 4, !dbg !8052
  %150 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %val246, align 8, !dbg !8052
  %val_rtx266 = getelementptr inbounds %struct.cselib_val_struct, %struct.cselib_val_struct* %150, i32 0, i32 2, !dbg !8052
  %151 = load %struct.rtx_def*, %struct.rtx_def** %val_rtx266, align 8, !dbg !8052
  %152 = load %struct.rtx_def*, %struct.rtx_def** %mloc243, align 8, !dbg !8052
  %call267 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 41, i32 %149, %struct.rtx_def* %151, %struct.rtx_def* %152), !dbg !8052
  %u268 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %moa257, i32 0, i32 2, !dbg !8053
  %loc269 = bitcast %union.anon.0* %u268 to %struct.rtx_def**, !dbg !8054
  store %struct.rtx_def* %call267, %struct.rtx_def** %loc269, align 8, !dbg !8055
  %153 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8056
  %tobool270 = icmp ne %struct._IO_FILE* %153, null, !dbg !8056
  br i1 %tobool270, label %land.lhs.true271, label %if.end280, !dbg !8058

land.lhs.true271:                                 ; preds = %if.then256
  %154 = load i32, i32* @dump_flags, align 4, !dbg !8059
  %and272 = and i32 %154, 8, !dbg !8060
  %tobool273 = icmp ne i32 %and272, 0, !dbg !8060
  br i1 %tobool273, label %if.then274, label %if.end280, !dbg !8061

if.then274:                                       ; preds = %land.lhs.true271
  %u275 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %moa257, i32 0, i32 2, !dbg !8062
  %loc276 = bitcast %union.anon.0* %u275 to %struct.rtx_def**, !dbg !8063
  %155 = load %struct.rtx_def*, %struct.rtx_def** %loc276, align 8, !dbg !8063
  %156 = load %struct.count_use_info*, %struct.count_use_info** %cui, align 8, !dbg !8064
  %bb277 = getelementptr inbounds %struct.count_use_info, %struct.count_use_info* %156, i32 0, i32 1, !dbg !8065
  %157 = load %struct.basic_block_def*, %struct.basic_block_def** %bb277, align 8, !dbg !8065
  %158 = load %struct.count_use_info*, %struct.count_use_info** %cui, align 8, !dbg !8066
  %insn278 = getelementptr inbounds %struct.count_use_info, %struct.count_use_info* %158, i32 0, i32 0, !dbg !8067
  %159 = load %struct.rtx_def*, %struct.rtx_def** %insn278, align 8, !dbg !8067
  %type279 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %moa257, i32 0, i32 0, !dbg !8068
  %160 = load i32, i32* %type279, align 8, !dbg !8068
  %161 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8069
  call void @log_op_type(%struct.rtx_def* %155, %struct.basic_block_def* %157, %struct.rtx_def* %159, i32 %160, %struct._IO_FILE* %161), !dbg !8070
  br label %if.end280, !dbg !8070

if.end280:                                        ; preds = %if.then274, %land.lhs.true271, %if.then256
  %162 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !8071
  %aux281 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %162, i32 0, i32 2, !dbg !8071
  %163 = load i8*, i8** %aux281, align 8, !dbg !8071
  %164 = bitcast i8* %163 to %struct.variable_tracking_info_def*, !dbg !8071
  %mos282 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %164, i32 0, i32 0, !dbg !8071
  %call283 = call %struct.micro_operation_def* @VEC_micro_operation_heap_safe_push(%struct.VEC_micro_operation_heap** %mos282, %struct.micro_operation_def* %moa257), !dbg !8071
  br label %if.end284, !dbg !8072

if.end284:                                        ; preds = %if.end280, %land.lhs.true253, %if.then242
  br label %if.end285, !dbg !8073

if.end285:                                        ; preds = %if.end284, %lor.lhs.false230, %land.lhs.true204, %land.lhs.true196, %cond.end191
  %165 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !8074
  %call286 = call i32 @use_type(%struct.rtx_def* %165, %struct.count_use_info* null, i32* %mode2177), !dbg !8075
  store i32 %call286, i32* %type2178, align 4, !dbg !8076
  %166 = load i32, i32* %type2178, align 4, !dbg !8077
  %cmp287 = icmp eq i32 %166, 0, !dbg !8077
  br i1 %cmp287, label %cond.false293, label %lor.lhs.false288, !dbg !8077

lor.lhs.false288:                                 ; preds = %if.end285
  %167 = load i32, i32* %type2178, align 4, !dbg !8077
  %cmp289 = icmp eq i32 %167, 1, !dbg !8077
  br i1 %cmp289, label %cond.false293, label %lor.lhs.false290, !dbg !8077

lor.lhs.false290:                                 ; preds = %lor.lhs.false288
  %168 = load i32, i32* %type2178, align 4, !dbg !8077
  %cmp291 = icmp eq i32 %168, 7, !dbg !8077
  br i1 %cmp291, label %cond.false293, label %cond.true292, !dbg !8077

cond.true292:                                     ; preds = %lor.lhs.false290
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 5061, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !8077
  br label %cond.end294, !dbg !8077

cond.false293:                                    ; preds = %lor.lhs.false290, %lor.lhs.false288, %if.end285
  br label %cond.end294, !dbg !8077

cond.end294:                                      ; preds = %cond.false293, %cond.true292
  %cond295 = phi i32 [ 0, %cond.true292 ], [ 0, %cond.false293 ], !dbg !8077
  %169 = load i32, i32* %type2178, align 4, !dbg !8078
  %cmp296 = icmp eq i32 %169, 0, !dbg !8080
  br i1 %cmp296, label %if.then297, label %if.else299, !dbg !8081

if.then297:                                       ; preds = %cond.end294
  %170 = load i32, i32* %mode2177, align 4, !dbg !8082
  %171 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !8083
  %call298 = call %struct.rtx_def* @var_lowpart(i32 %170, %struct.rtx_def* %171), !dbg !8084
  store %struct.rtx_def* %call298, %struct.rtx_def** %vloc184, align 8, !dbg !8085
  br label %if.end300, !dbg !8086

if.else299:                                       ; preds = %cond.end294
  %172 = load %struct.rtx_def*, %struct.rtx_def** %oloc185, align 8, !dbg !8087
  store %struct.rtx_def* %172, %struct.rtx_def** %vloc184, align 8, !dbg !8088
  br label %if.end300

if.end300:                                        ; preds = %if.else299, %if.then297
  %173 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !8089
  %call301 = call %struct.rtx_def* @replace_expr_with_values(%struct.rtx_def* %173), !dbg !8090
  store %struct.rtx_def* %call301, %struct.rtx_def** %nloc186, align 8, !dbg !8091
  %174 = load %struct.rtx_def*, %struct.rtx_def** %nloc186, align 8, !dbg !8092
  %tobool302 = icmp ne %struct.rtx_def* %174, null, !dbg !8092
  br i1 %tobool302, label %if.end304, label %if.then303, !dbg !8094

if.then303:                                       ; preds = %if.end300
  %175 = load %struct.rtx_def*, %struct.rtx_def** %oloc185, align 8, !dbg !8095
  store %struct.rtx_def* %175, %struct.rtx_def** %nloc186, align 8, !dbg !8096
  br label %if.end304, !dbg !8097

if.end304:                                        ; preds = %if.then303, %if.end300
  %176 = load %struct.rtx_def*, %struct.rtx_def** %vloc184, align 8, !dbg !8098
  %177 = load %struct.rtx_def*, %struct.rtx_def** %nloc186, align 8, !dbg !8100
  %cmp305 = icmp ne %struct.rtx_def* %176, %177, !dbg !8101
  br i1 %cmp305, label %if.then306, label %if.else309, !dbg !8102

if.then306:                                       ; preds = %if.end304
  %178 = load i32, i32* %mode2177, align 4, !dbg !8103
  %179 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %val179, align 8, !dbg !8103
  %val_rtx307 = getelementptr inbounds %struct.cselib_val_struct, %struct.cselib_val_struct* %179, i32 0, i32 2, !dbg !8103
  %180 = load %struct.rtx_def*, %struct.rtx_def** %val_rtx307, align 8, !dbg !8103
  %181 = load %struct.rtx_def*, %struct.rtx_def** %vloc184, align 8, !dbg !8103
  %call308 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 41, i32 %178, %struct.rtx_def* %180, %struct.rtx_def* %181), !dbg !8103
  store %struct.rtx_def* %call308, %struct.rtx_def** %oloc185, align 8, !dbg !8104
  br label %if.end311, !dbg !8105

if.else309:                                       ; preds = %if.end304
  %182 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %val179, align 8, !dbg !8106
  %val_rtx310 = getelementptr inbounds %struct.cselib_val_struct, %struct.cselib_val_struct* %182, i32 0, i32 2, !dbg !8107
  %183 = load %struct.rtx_def*, %struct.rtx_def** %val_rtx310, align 8, !dbg !8107
  store %struct.rtx_def* %183, %struct.rtx_def** %oloc185, align 8, !dbg !8108
  br label %if.end311

if.end311:                                        ; preds = %if.else309, %if.then306
  %184 = load i32, i32* %mode, align 4, !dbg !8109
  %185 = load %struct.rtx_def*, %struct.rtx_def** %oloc185, align 8, !dbg !8109
  %186 = load %struct.rtx_def*, %struct.rtx_def** %nloc186, align 8, !dbg !8109
  %call312 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 41, i32 %184, %struct.rtx_def* %185, %struct.rtx_def* %186), !dbg !8109
  %u313 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 2, !dbg !8110
  %loc314 = bitcast %union.anon.0* %u313 to %struct.rtx_def**, !dbg !8111
  store %struct.rtx_def* %call312, %struct.rtx_def** %loc314, align 8, !dbg !8112
  %187 = load i32, i32* %type2178, align 4, !dbg !8113
  %cmp315 = icmp eq i32 %187, 0, !dbg !8115
  br i1 %cmp315, label %if.then316, label %if.end322, !dbg !8116

if.then316:                                       ; preds = %if.end311
  %u317 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 2, !dbg !8117
  %loc318 = bitcast %union.anon.0* %u317 to %struct.rtx_def**, !dbg !8117
  %188 = load %struct.rtx_def*, %struct.rtx_def** %loc318, align 8, !dbg !8117
  %189 = bitcast %struct.rtx_def* %188 to i32*, !dbg !8117
  %bf.load319 = load i32, i32* %189, align 8, !dbg !8118
  %bf.clear320 = and i32 %bf.load319, -536870913, !dbg !8118
  %bf.set321 = or i32 %bf.clear320, 536870912, !dbg !8118
  store i32 %bf.set321, i32* %189, align 8, !dbg !8118
  br label %if.end322, !dbg !8117

if.end322:                                        ; preds = %if.then316, %if.end311
  %190 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %val179, align 8, !dbg !8119
  %call323 = call zeroext i8 @cselib_preserved_value_p(%struct.cselib_val_struct* %190), !dbg !8121
  %tobool324 = icmp ne i8 %call323, 0, !dbg !8121
  br i1 %tobool324, label %if.end331, label %if.then325, !dbg !8122

if.then325:                                       ; preds = %if.end322
  %u326 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 2, !dbg !8123
  %loc327 = bitcast %union.anon.0* %u326 to %struct.rtx_def**, !dbg !8123
  %191 = load %struct.rtx_def*, %struct.rtx_def** %loc327, align 8, !dbg !8123
  %192 = bitcast %struct.rtx_def* %191 to i32*, !dbg !8123
  %bf.load328 = load i32, i32* %192, align 8, !dbg !8125
  %bf.clear329 = and i32 %bf.load328, -134217729, !dbg !8125
  %bf.set330 = or i32 %bf.clear329, 134217728, !dbg !8125
  store i32 %bf.set330, i32* %192, align 8, !dbg !8125
  %193 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %val179, align 8, !dbg !8126
  call void @preserve_value(%struct.cselib_val_struct* %193), !dbg !8127
  br label %if.end331, !dbg !8128

if.end331:                                        ; preds = %if.then325, %if.end322
  br label %if.end340, !dbg !8129

if.else332:                                       ; preds = %if.else174
  %194 = load i32, i32* %type, align 4, !dbg !8130
  %cmp333 = icmp eq i32 %194, 0, !dbg !8130
  br i1 %cmp333, label %cond.false337, label %lor.lhs.false334, !dbg !8130

lor.lhs.false334:                                 ; preds = %if.else332
  %195 = load i32, i32* %type, align 4, !dbg !8130
  %cmp335 = icmp eq i32 %195, 1, !dbg !8130
  br i1 %cmp335, label %cond.false337, label %cond.true336, !dbg !8130

cond.true336:                                     ; preds = %lor.lhs.false334
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 5098, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !8130
  br label %cond.end338, !dbg !8130

cond.false337:                                    ; preds = %lor.lhs.false334, %if.else332
  br label %cond.end338, !dbg !8130

cond.end338:                                      ; preds = %cond.false337, %cond.true336
  %cond339 = phi i32 [ 0, %cond.true336 ], [ 0, %cond.false337 ], !dbg !8130
  br label %if.end340

if.end340:                                        ; preds = %cond.end338, %if.end331
  br label %if.end341

if.end341:                                        ; preds = %if.end340, %if.end171
  %196 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8131
  %tobool342 = icmp ne %struct._IO_FILE* %196, null, !dbg !8131
  br i1 %tobool342, label %land.lhs.true343, label %if.end352, !dbg !8133

land.lhs.true343:                                 ; preds = %if.end341
  %197 = load i32, i32* @dump_flags, align 4, !dbg !8134
  %and344 = and i32 %197, 8, !dbg !8135
  %tobool345 = icmp ne i32 %and344, 0, !dbg !8135
  br i1 %tobool345, label %if.then346, label %if.end352, !dbg !8136

if.then346:                                       ; preds = %land.lhs.true343
  %u347 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 2, !dbg !8137
  %loc348 = bitcast %union.anon.0* %u347 to %struct.rtx_def**, !dbg !8138
  %198 = load %struct.rtx_def*, %struct.rtx_def** %loc348, align 8, !dbg !8138
  %199 = load %struct.count_use_info*, %struct.count_use_info** %cui, align 8, !dbg !8139
  %bb349 = getelementptr inbounds %struct.count_use_info, %struct.count_use_info* %199, i32 0, i32 1, !dbg !8140
  %200 = load %struct.basic_block_def*, %struct.basic_block_def** %bb349, align 8, !dbg !8140
  %201 = load %struct.count_use_info*, %struct.count_use_info** %cui, align 8, !dbg !8141
  %insn350 = getelementptr inbounds %struct.count_use_info, %struct.count_use_info* %201, i32 0, i32 0, !dbg !8142
  %202 = load %struct.rtx_def*, %struct.rtx_def** %insn350, align 8, !dbg !8142
  %type351 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %mo, i32 0, i32 0, !dbg !8143
  %203 = load i32, i32* %type351, align 8, !dbg !8143
  %204 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !8144
  call void @log_op_type(%struct.rtx_def* %198, %struct.basic_block_def* %200, %struct.rtx_def* %202, i32 %203, %struct._IO_FILE* %204), !dbg !8145
  br label %if.end352, !dbg !8145

if.end352:                                        ; preds = %if.then346, %land.lhs.true343, %if.end341
  %205 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !8146
  %aux353 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %205, i32 0, i32 2, !dbg !8146
  %206 = load i8*, i8** %aux353, align 8, !dbg !8146
  %207 = bitcast i8* %206 to %struct.variable_tracking_info_def*, !dbg !8146
  %mos354 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %207, i32 0, i32 0, !dbg !8146
  %call355 = call %struct.micro_operation_def* @VEC_micro_operation_heap_safe_push(%struct.VEC_micro_operation_heap** %mos354, %struct.micro_operation_def* %mo), !dbg !8146
  br label %if.end356, !dbg !8147

if.end356:                                        ; preds = %if.end352, %entry
  ret i32 0, !dbg !8148
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @use_type(%struct.rtx_def* %loc, %struct.count_use_info* %cui, i32* %modep) #0 !dbg !8149 {
entry:
  %retval = alloca i32, align 4
  %loc.addr = alloca %struct.rtx_def*, align 8
  %cui.addr = alloca %struct.count_use_info*, align 8
  %modep.addr = alloca i32*, align 8
  %expr = alloca %union.tree_node*, align 8
  %ploc = alloca %struct.rtx_def*, align 8
  %val = alloca %struct.cselib_val_struct*, align 8
  %val59 = alloca %struct.cselib_val_struct*, align 8
  store %struct.rtx_def* %loc, %struct.rtx_def** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %loc.addr, metadata !8153, metadata !DIExpression()), !dbg !8154
  store %struct.count_use_info* %cui, %struct.count_use_info** %cui.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.count_use_info** %cui.addr, metadata !8155, metadata !DIExpression()), !dbg !8156
  store i32* %modep, i32** %modep.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %modep.addr, metadata !8157, metadata !DIExpression()), !dbg !8158
  call void @llvm.dbg.declare(metadata %union.tree_node** %expr, metadata !8159, metadata !DIExpression()), !dbg !8160
  %0 = load %struct.count_use_info*, %struct.count_use_info** %cui.addr, align 8, !dbg !8161
  %tobool = icmp ne %struct.count_use_info* %0, null, !dbg !8161
  br i1 %tobool, label %land.lhs.true, label %if.end72, !dbg !8163

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.count_use_info*, %struct.count_use_info** %cui.addr, align 8, !dbg !8164
  %sets = getelementptr inbounds %struct.count_use_info, %struct.count_use_info* %1, i32 0, i32 2, !dbg !8165
  %2 = load %struct.cselib_set*, %struct.cselib_set** %sets, align 8, !dbg !8165
  %tobool1 = icmp ne %struct.cselib_set* %2, null, !dbg !8164
  br i1 %tobool1, label %if.then, label %if.end72, !dbg !8166

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8167
  %4 = bitcast %struct.rtx_def* %3 to i32*, !dbg !8167
  %bf.load = load i32, i32* %4, align 8, !dbg !8167
  %bf.clear = and i32 %bf.load, 65535, !dbg !8167
  %cmp = icmp eq i32 %bf.clear, 138, !dbg !8170
  br i1 %cmp, label %if.then2, label %if.end22, !dbg !8171

if.then2:                                         ; preds = %if.then
  %5 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8172
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1, !dbg !8172
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !8172
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !8172
  %rt_tree = bitcast %union.rtunion_def* %arrayidx to %union.tree_node**, !dbg !8172
  %6 = load %union.tree_node*, %union.tree_node** %rt_tree, align 8, !dbg !8172
  %call = call zeroext i8 @track_expr_p(%union.tree_node* %6, i8 zeroext 0), !dbg !8175
  %tobool3 = icmp ne i8 %call, 0, !dbg !8175
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !8176

if.then4:                                         ; preds = %if.then2
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %ploc, metadata !8177, metadata !DIExpression()), !dbg !8179
  %7 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8180
  %u5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1, !dbg !8180
  %fld6 = bitcast %union.u* %u5 to [1 x %union.rtunion_def]*, !dbg !8180
  %arrayidx7 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld6, i64 0, i64 1, !dbg !8180
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx7 to %struct.rtx_def**, !dbg !8180
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !8180
  store %struct.rtx_def* %8, %struct.rtx_def** %ploc, align 8, !dbg !8179
  %9 = load %struct.rtx_def*, %struct.rtx_def** %ploc, align 8, !dbg !8181
  %10 = bitcast %struct.rtx_def* %9 to i32*, !dbg !8181
  %bf.load8 = load i32, i32* %10, align 8, !dbg !8181
  %bf.clear9 = and i32 %bf.load8, 65535, !dbg !8181
  %cmp10 = icmp eq i32 %bf.clear9, 25, !dbg !8181
  br i1 %cmp10, label %land.lhs.true11, label %if.then17, !dbg !8181

land.lhs.true11:                                  ; preds = %if.then4
  %11 = load %struct.rtx_def*, %struct.rtx_def** %ploc, align 8, !dbg !8181
  %u12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1, !dbg !8181
  %fld13 = bitcast %union.u* %u12 to [1 x %union.rtunion_def]*, !dbg !8181
  %arrayidx14 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld13, i64 0, i64 0, !dbg !8181
  %rt_rtx15 = bitcast %union.rtunion_def* %arrayidx14 to %struct.rtx_def**, !dbg !8181
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx15, align 8, !dbg !8181
  %13 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !8181
  %cmp16 = icmp eq %struct.rtx_def* %12, %13, !dbg !8181
  br i1 %cmp16, label %if.end, label %if.then17, !dbg !8183

if.then17:                                        ; preds = %land.lhs.true11, %if.then4
  call void @llvm.dbg.declare(metadata %struct.cselib_val_struct** %val, metadata !8184, metadata !DIExpression()), !dbg !8186
  %14 = load %struct.rtx_def*, %struct.rtx_def** %ploc, align 8, !dbg !8187
  %15 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8188
  %16 = bitcast %struct.rtx_def* %15 to i32*, !dbg !8188
  %bf.load18 = load i32, i32* %16, align 8, !dbg !8188
  %bf.lshr = lshr i32 %bf.load18, 16, !dbg !8188
  %bf.clear19 = and i32 %bf.lshr, 255, !dbg !8188
  %call20 = call %struct.cselib_val_struct* @cselib_lookup(%struct.rtx_def* %14, i32 %bf.clear19, i32 1), !dbg !8189
  store %struct.cselib_val_struct* %call20, %struct.cselib_val_struct** %val, align 8, !dbg !8186
  %17 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %val, align 8, !dbg !8190
  %tobool21 = icmp ne %struct.cselib_val_struct* %17, null, !dbg !8190
  br i1 %tobool21, label %cond.false, label %lor.lhs.false, !dbg !8190

lor.lhs.false:                                    ; preds = %if.then17
  br i1 true, label %cond.false, label %cond.true, !dbg !8190

cond.true:                                        ; preds = %lor.lhs.false
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 4785, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !8190
  br label %cond.end, !dbg !8190

cond.false:                                       ; preds = %lor.lhs.false, %if.then17
  br label %cond.end, !dbg !8190

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !8190
  br label %if.end, !dbg !8191

if.end:                                           ; preds = %cond.end, %land.lhs.true11
  store i32 3, i32* %retval, align 4, !dbg !8192
  br label %return, !dbg !8192

if.else:                                          ; preds = %if.then2
  store i32 7, i32* %retval, align 4, !dbg !8193
  br label %return, !dbg !8193

if.end22:                                         ; preds = %if.then
  %18 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8194
  %19 = bitcast %struct.rtx_def* %18 to i32*, !dbg !8194
  %bf.load23 = load i32, i32* %19, align 8, !dbg !8194
  %bf.clear24 = and i32 %bf.load23, 65535, !dbg !8194
  %cmp25 = icmp eq i32 %bf.clear24, 37, !dbg !8194
  br i1 %cmp25, label %if.then30, label %lor.lhs.false26, !dbg !8196

lor.lhs.false26:                                  ; preds = %if.end22
  %20 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8197
  %21 = bitcast %struct.rtx_def* %20 to i32*, !dbg !8197
  %bf.load27 = load i32, i32* %21, align 8, !dbg !8197
  %bf.clear28 = and i32 %bf.load27, 65535, !dbg !8197
  %cmp29 = icmp eq i32 %bf.clear28, 43, !dbg !8197
  br i1 %cmp29, label %if.then30, label %if.end71, !dbg !8198

if.then30:                                        ; preds = %lor.lhs.false26, %if.end22
  %22 = load i32*, i32** %modep.addr, align 8, !dbg !8199
  %tobool31 = icmp ne i32* %22, null, !dbg !8199
  br i1 %tobool31, label %if.then32, label %if.end36, !dbg !8202

if.then32:                                        ; preds = %if.then30
  %23 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8203
  %24 = bitcast %struct.rtx_def* %23 to i32*, !dbg !8203
  %bf.load33 = load i32, i32* %24, align 8, !dbg !8203
  %bf.lshr34 = lshr i32 %bf.load33, 16, !dbg !8203
  %bf.clear35 = and i32 %bf.lshr34, 255, !dbg !8203
  %25 = load i32*, i32** %modep.addr, align 8, !dbg !8204
  store i32 %bf.clear35, i32* %25, align 4, !dbg !8205
  br label %if.end36, !dbg !8206

if.end36:                                         ; preds = %if.then32, %if.then30
  %26 = load %struct.count_use_info*, %struct.count_use_info** %cui.addr, align 8, !dbg !8207
  %store_p = getelementptr inbounds %struct.count_use_info, %struct.count_use_info* %26, i32 0, i32 4, !dbg !8209
  %27 = load i8, i8* %store_p, align 4, !dbg !8209
  %tobool37 = icmp ne i8 %27, 0, !dbg !8207
  br i1 %tobool37, label %if.then38, label %if.else58, !dbg !8210

if.then38:                                        ; preds = %if.end36
  %28 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8211
  %29 = bitcast %struct.rtx_def* %28 to i32*, !dbg !8211
  %bf.load39 = load i32, i32* %29, align 8, !dbg !8211
  %bf.clear40 = and i32 %bf.load39, 65535, !dbg !8211
  %cmp41 = icmp eq i32 %bf.clear40, 37, !dbg !8211
  br i1 %cmp41, label %if.then56, label %lor.lhs.false42, !dbg !8214

lor.lhs.false42:                                  ; preds = %if.then38
  %30 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8215
  %31 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8216
  %32 = bitcast %struct.rtx_def* %31 to i32*, !dbg !8216
  %bf.load43 = load i32, i32* %32, align 8, !dbg !8216
  %bf.lshr44 = lshr i32 %bf.load43, 16, !dbg !8216
  %bf.clear45 = and i32 %bf.lshr44, 255, !dbg !8216
  %33 = load %struct.count_use_info*, %struct.count_use_info** %cui.addr, align 8, !dbg !8217
  %call46 = call %struct.cselib_val_struct* @find_use_val(%struct.rtx_def* %30, i32 %bf.clear45, %struct.count_use_info* %33), !dbg !8218
  %tobool47 = icmp ne %struct.cselib_val_struct* %call46, null, !dbg !8218
  br i1 %tobool47, label %land.lhs.true48, label %if.end57, !dbg !8219

land.lhs.true48:                                  ; preds = %lor.lhs.false42
  %34 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8220
  %u49 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1, !dbg !8220
  %fld50 = bitcast %union.u* %u49 to [1 x %union.rtunion_def]*, !dbg !8220
  %arrayidx51 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld50, i64 0, i64 0, !dbg !8220
  %rt_rtx52 = bitcast %union.rtunion_def* %arrayidx51 to %struct.rtx_def**, !dbg !8220
  %35 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx52, align 8, !dbg !8220
  %36 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8221
  %call53 = call i32 @get_address_mode(%struct.rtx_def* %36), !dbg !8222
  %call54 = call %struct.cselib_val_struct* @cselib_lookup(%struct.rtx_def* %35, i32 %call53, i32 0), !dbg !8223
  %tobool55 = icmp ne %struct.cselib_val_struct* %call54, null, !dbg !8223
  br i1 %tobool55, label %if.then56, label %if.end57, !dbg !8224

if.then56:                                        ; preds = %land.lhs.true48, %if.then38
  store i32 4, i32* %retval, align 4, !dbg !8225
  br label %return, !dbg !8225

if.end57:                                         ; preds = %land.lhs.true48, %lor.lhs.false42
  br label %if.end70, !dbg !8226

if.else58:                                        ; preds = %if.end36
  call void @llvm.dbg.declare(metadata %struct.cselib_val_struct** %val59, metadata !8227, metadata !DIExpression()), !dbg !8229
  %37 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8230
  %38 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8231
  %39 = bitcast %struct.rtx_def* %38 to i32*, !dbg !8231
  %bf.load60 = load i32, i32* %39, align 8, !dbg !8231
  %bf.lshr61 = lshr i32 %bf.load60, 16, !dbg !8231
  %bf.clear62 = and i32 %bf.lshr61, 255, !dbg !8231
  %40 = load %struct.count_use_info*, %struct.count_use_info** %cui.addr, align 8, !dbg !8232
  %call63 = call %struct.cselib_val_struct* @find_use_val(%struct.rtx_def* %37, i32 %bf.clear62, %struct.count_use_info* %40), !dbg !8233
  store %struct.cselib_val_struct* %call63, %struct.cselib_val_struct** %val59, align 8, !dbg !8229
  %41 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %val59, align 8, !dbg !8234
  %tobool64 = icmp ne %struct.cselib_val_struct* %41, null, !dbg !8234
  br i1 %tobool64, label %land.lhs.true65, label %if.end69, !dbg !8236

land.lhs.true65:                                  ; preds = %if.else58
  %42 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %val59, align 8, !dbg !8237
  %call66 = call zeroext i8 @cselib_preserved_value_p(%struct.cselib_val_struct* %42), !dbg !8238
  %tobool67 = icmp ne i8 %call66, 0, !dbg !8238
  br i1 %tobool67, label %if.end69, label %if.then68, !dbg !8239

if.then68:                                        ; preds = %land.lhs.true65
  store i32 2, i32* %retval, align 4, !dbg !8240
  br label %return, !dbg !8240

if.end69:                                         ; preds = %land.lhs.true65, %if.else58
  br label %if.end70

if.end70:                                         ; preds = %if.end69, %if.end57
  br label %if.end71, !dbg !8241

if.end71:                                         ; preds = %if.end70, %lor.lhs.false26
  br label %if.end72, !dbg !8242

if.end72:                                         ; preds = %if.end71, %land.lhs.true, %entry
  %43 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8243
  %44 = bitcast %struct.rtx_def* %43 to i32*, !dbg !8243
  %bf.load73 = load i32, i32* %44, align 8, !dbg !8243
  %bf.clear74 = and i32 %bf.load73, 65535, !dbg !8243
  %cmp75 = icmp eq i32 %bf.clear74, 37, !dbg !8243
  br i1 %cmp75, label %if.then76, label %if.else123, !dbg !8245

if.then76:                                        ; preds = %if.end72
  %45 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8246
  %call77 = call i32 @rhs_regno(%struct.rtx_def* %45), !dbg !8246
  %cmp78 = icmp ult i32 %call77, 53, !dbg !8246
  br i1 %cmp78, label %cond.false80, label %cond.true79, !dbg !8246

cond.true79:                                      ; preds = %if.then76
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 4817, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !8246
  br label %cond.end81, !dbg !8246

cond.false80:                                     ; preds = %if.then76
  br label %cond.end81, !dbg !8246

cond.end81:                                       ; preds = %cond.false80, %cond.true79
  %cond82 = phi i32 [ 0, %cond.true79 ], [ 0, %cond.false80 ], !dbg !8246
  %46 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8248
  %47 = load %struct.rtx_def*, %struct.rtx_def** @cfa_base_rtx, align 8, !dbg !8250
  %cmp83 = icmp eq %struct.rtx_def* %46, %47, !dbg !8251
  br i1 %cmp83, label %if.then84, label %if.end85, !dbg !8252

if.then84:                                        ; preds = %cond.end81
  store i32 7, i32* %retval, align 4, !dbg !8253
  br label %return, !dbg !8253

if.end85:                                         ; preds = %cond.end81
  %48 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8254
  %u86 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %48, i32 0, i32 1, !dbg !8254
  %fld87 = bitcast %union.u* %u86 to [1 x %union.rtunion_def]*, !dbg !8254
  %arrayidx88 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld87, i64 0, i64 2, !dbg !8254
  %rt_reg = bitcast %union.rtunion_def* %arrayidx88 to %struct.reg_attrs**, !dbg !8254
  %49 = load %struct.reg_attrs*, %struct.reg_attrs** %rt_reg, align 8, !dbg !8254
  %cmp89 = icmp eq %struct.reg_attrs* %49, null, !dbg !8254
  br i1 %cmp89, label %cond.true90, label %cond.false91, !dbg !8254

cond.true90:                                      ; preds = %if.end85
  br label %cond.end96, !dbg !8254

cond.false91:                                     ; preds = %if.end85
  %50 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8254
  %u92 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %50, i32 0, i32 1, !dbg !8254
  %fld93 = bitcast %union.u* %u92 to [1 x %union.rtunion_def]*, !dbg !8254
  %arrayidx94 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld93, i64 0, i64 2, !dbg !8254
  %rt_reg95 = bitcast %union.rtunion_def* %arrayidx94 to %struct.reg_attrs**, !dbg !8254
  %51 = load %struct.reg_attrs*, %struct.reg_attrs** %rt_reg95, align 8, !dbg !8254
  %decl = getelementptr inbounds %struct.reg_attrs, %struct.reg_attrs* %51, i32 0, i32 0, !dbg !8254
  %52 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !8254
  br label %cond.end96, !dbg !8254

cond.end96:                                       ; preds = %cond.false91, %cond.true90
  %cond97 = phi %union.tree_node* [ null, %cond.true90 ], [ %52, %cond.false91 ], !dbg !8254
  store %union.tree_node* %cond97, %union.tree_node** %expr, align 8, !dbg !8255
  %53 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !8256
  %tobool98 = icmp ne %union.tree_node* %53, null, !dbg !8256
  br i1 %tobool98, label %if.else100, label %if.then99, !dbg !8258

if.then99:                                        ; preds = %cond.end96
  store i32 1, i32* %retval, align 4, !dbg !8259
  br label %return, !dbg !8259

if.else100:                                       ; preds = %cond.end96
  %54 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !8260
  %call101 = call %union.tree_node* @var_debug_decl(%union.tree_node* %54), !dbg !8262
  %call102 = call %union.tree_node* @target_for_debug_bind(%union.tree_node* %call101), !dbg !8263
  %tobool103 = icmp ne %union.tree_node* %call102, null, !dbg !8263
  br i1 %tobool103, label %if.then104, label %if.else105, !dbg !8264

if.then104:                                       ; preds = %if.else100
  store i32 7, i32* %retval, align 4, !dbg !8265
  br label %return, !dbg !8265

if.else105:                                       ; preds = %if.else100
  %55 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8266
  %56 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !8268
  %57 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8269
  %u106 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %57, i32 0, i32 1, !dbg !8269
  %fld107 = bitcast %union.u* %u106 to [1 x %union.rtunion_def]*, !dbg !8269
  %arrayidx108 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld107, i64 0, i64 2, !dbg !8269
  %rt_reg109 = bitcast %union.rtunion_def* %arrayidx108 to %struct.reg_attrs**, !dbg !8269
  %58 = load %struct.reg_attrs*, %struct.reg_attrs** %rt_reg109, align 8, !dbg !8269
  %cmp110 = icmp eq %struct.reg_attrs* %58, null, !dbg !8269
  br i1 %cmp110, label %cond.true111, label %cond.false112, !dbg !8269

cond.true111:                                     ; preds = %if.else105
  br label %cond.end117, !dbg !8269

cond.false112:                                    ; preds = %if.else105
  %59 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8269
  %u113 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %59, i32 0, i32 1, !dbg !8269
  %fld114 = bitcast %union.u* %u113 to [1 x %union.rtunion_def]*, !dbg !8269
  %arrayidx115 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld114, i64 0, i64 2, !dbg !8269
  %rt_reg116 = bitcast %union.rtunion_def* %arrayidx115 to %struct.reg_attrs**, !dbg !8269
  %60 = load %struct.reg_attrs*, %struct.reg_attrs** %rt_reg116, align 8, !dbg !8269
  %offset = getelementptr inbounds %struct.reg_attrs, %struct.reg_attrs* %60, i32 0, i32 1, !dbg !8269
  %61 = load i64, i64* %offset, align 8, !dbg !8269
  br label %cond.end117, !dbg !8269

cond.end117:                                      ; preds = %cond.false112, %cond.true111
  %cond118 = phi i64 [ 0, %cond.true111 ], [ %61, %cond.false112 ], !dbg !8269
  %62 = load i32*, i32** %modep.addr, align 8, !dbg !8270
  %call119 = call zeroext i8 @track_loc_p(%struct.rtx_def* %55, %union.tree_node* %56, i64 %cond118, i8 zeroext 0, i32* %62, i64* null), !dbg !8271
  %tobool120 = icmp ne i8 %call119, 0, !dbg !8271
  br i1 %tobool120, label %if.then121, label %if.else122, !dbg !8272

if.then121:                                       ; preds = %cond.end117
  store i32 0, i32* %retval, align 4, !dbg !8273
  br label %return, !dbg !8273

if.else122:                                       ; preds = %cond.end117
  store i32 1, i32* %retval, align 4, !dbg !8274
  br label %return, !dbg !8274

if.else123:                                       ; preds = %if.end72
  %63 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8275
  %64 = bitcast %struct.rtx_def* %63 to i32*, !dbg !8275
  %bf.load124 = load i32, i32* %64, align 8, !dbg !8275
  %bf.clear125 = and i32 %bf.load124, 65535, !dbg !8275
  %cmp126 = icmp eq i32 %bf.clear125, 43, !dbg !8275
  br i1 %cmp126, label %if.then127, label %if.end186, !dbg !8277

if.then127:                                       ; preds = %if.else123
  %65 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8278
  %u128 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %65, i32 0, i32 1, !dbg !8278
  %fld129 = bitcast %union.u* %u128 to [1 x %union.rtunion_def]*, !dbg !8278
  %arrayidx130 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld129, i64 0, i64 1, !dbg !8278
  %rt_mem = bitcast %union.rtunion_def* %arrayidx130 to %struct.mem_attrs**, !dbg !8278
  %66 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !8278
  %cmp131 = icmp eq %struct.mem_attrs* %66, null, !dbg !8278
  br i1 %cmp131, label %cond.true132, label %cond.false133, !dbg !8278

cond.true132:                                     ; preds = %if.then127
  br label %cond.end139, !dbg !8278

cond.false133:                                    ; preds = %if.then127
  %67 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8278
  %u134 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %67, i32 0, i32 1, !dbg !8278
  %fld135 = bitcast %union.u* %u134 to [1 x %union.rtunion_def]*, !dbg !8278
  %arrayidx136 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld135, i64 0, i64 1, !dbg !8278
  %rt_mem137 = bitcast %union.rtunion_def* %arrayidx136 to %struct.mem_attrs**, !dbg !8278
  %68 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem137, align 8, !dbg !8278
  %expr138 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %68, i32 0, i32 0, !dbg !8278
  %69 = load %union.tree_node*, %union.tree_node** %expr138, align 8, !dbg !8278
  br label %cond.end139, !dbg !8278

cond.end139:                                      ; preds = %cond.false133, %cond.true132
  %cond140 = phi %union.tree_node* [ null, %cond.true132 ], [ %69, %cond.false133 ], !dbg !8278
  store %union.tree_node* %cond140, %union.tree_node** %expr, align 8, !dbg !8280
  %70 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !8281
  %tobool141 = icmp ne %union.tree_node* %70, null, !dbg !8281
  br i1 %tobool141, label %if.else143, label %if.then142, !dbg !8283

if.then142:                                       ; preds = %cond.end139
  store i32 7, i32* %retval, align 4, !dbg !8284
  br label %return, !dbg !8284

if.else143:                                       ; preds = %cond.end139
  %71 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !8285
  %call144 = call %union.tree_node* @var_debug_decl(%union.tree_node* %71), !dbg !8287
  %call145 = call %union.tree_node* @target_for_debug_bind(%union.tree_node* %call144), !dbg !8288
  %tobool146 = icmp ne %union.tree_node* %call145, null, !dbg !8288
  br i1 %tobool146, label %if.then147, label %if.else148, !dbg !8289

if.then147:                                       ; preds = %if.else143
  store i32 7, i32* %retval, align 4, !dbg !8290
  br label %return, !dbg !8290

if.else148:                                       ; preds = %if.else143
  %72 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8291
  %73 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !8293
  %74 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8294
  %u149 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %74, i32 0, i32 1, !dbg !8294
  %fld150 = bitcast %union.u* %u149 to [1 x %union.rtunion_def]*, !dbg !8294
  %arrayidx151 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld150, i64 0, i64 1, !dbg !8294
  %rt_mem152 = bitcast %union.rtunion_def* %arrayidx151 to %struct.mem_attrs**, !dbg !8294
  %75 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem152, align 8, !dbg !8294
  %cmp153 = icmp eq %struct.mem_attrs* %75, null, !dbg !8294
  br i1 %cmp153, label %cond.true154, label %cond.false155, !dbg !8294

cond.true154:                                     ; preds = %if.else148
  br i1 false, label %cond.true162, label %cond.false179, !dbg !8294

cond.false155:                                    ; preds = %if.else148
  %76 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8294
  %u156 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %76, i32 0, i32 1, !dbg !8294
  %fld157 = bitcast %union.u* %u156 to [1 x %union.rtunion_def]*, !dbg !8294
  %arrayidx158 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld157, i64 0, i64 1, !dbg !8294
  %rt_mem159 = bitcast %union.rtunion_def* %arrayidx158 to %struct.mem_attrs**, !dbg !8294
  %77 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem159, align 8, !dbg !8294
  %offset160 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %77, i32 0, i32 1, !dbg !8294
  %78 = load %struct.rtx_def*, %struct.rtx_def** %offset160, align 8, !dbg !8294
  %tobool161 = icmp ne %struct.rtx_def* %78, null, !dbg !8294
  br i1 %tobool161, label %cond.true162, label %cond.false179, !dbg !8294

cond.true162:                                     ; preds = %cond.false155, %cond.true154
  %79 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8294
  %u163 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %79, i32 0, i32 1, !dbg !8294
  %fld164 = bitcast %union.u* %u163 to [1 x %union.rtunion_def]*, !dbg !8294
  %arrayidx165 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld164, i64 0, i64 1, !dbg !8294
  %rt_mem166 = bitcast %union.rtunion_def* %arrayidx165 to %struct.mem_attrs**, !dbg !8294
  %80 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem166, align 8, !dbg !8294
  %cmp167 = icmp eq %struct.mem_attrs* %80, null, !dbg !8294
  br i1 %cmp167, label %cond.true168, label %cond.false169, !dbg !8294

cond.true168:                                     ; preds = %cond.true162
  br label %cond.end175, !dbg !8294

cond.false169:                                    ; preds = %cond.true162
  %81 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8294
  %u170 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %81, i32 0, i32 1, !dbg !8294
  %fld171 = bitcast %union.u* %u170 to [1 x %union.rtunion_def]*, !dbg !8294
  %arrayidx172 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld171, i64 0, i64 1, !dbg !8294
  %rt_mem173 = bitcast %union.rtunion_def* %arrayidx172 to %struct.mem_attrs**, !dbg !8294
  %82 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem173, align 8, !dbg !8294
  %offset174 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %82, i32 0, i32 1, !dbg !8294
  %83 = load %struct.rtx_def*, %struct.rtx_def** %offset174, align 8, !dbg !8294
  br label %cond.end175, !dbg !8294

cond.end175:                                      ; preds = %cond.false169, %cond.true168
  %cond176 = phi %struct.rtx_def* [ null, %cond.true168 ], [ %83, %cond.false169 ], !dbg !8294
  %u177 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond176, i32 0, i32 1, !dbg !8294
  %hwint = bitcast %union.u* %u177 to [1 x i64]*, !dbg !8294
  %arrayidx178 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 0, !dbg !8294
  %84 = load i64, i64* %arrayidx178, align 8, !dbg !8294
  br label %cond.end180, !dbg !8294

cond.false179:                                    ; preds = %cond.false155, %cond.true154
  br label %cond.end180, !dbg !8294

cond.end180:                                      ; preds = %cond.false179, %cond.end175
  %cond181 = phi i64 [ %84, %cond.end175 ], [ 0, %cond.false179 ], !dbg !8294
  %85 = load i32*, i32** %modep.addr, align 8, !dbg !8295
  %call182 = call zeroext i8 @track_loc_p(%struct.rtx_def* %72, %union.tree_node* %73, i64 %cond181, i8 zeroext 0, i32* %85, i64* null), !dbg !8296
  %tobool183 = icmp ne i8 %call182, 0, !dbg !8296
  br i1 %tobool183, label %if.then184, label %if.else185, !dbg !8297

if.then184:                                       ; preds = %cond.end180
  store i32 0, i32* %retval, align 4, !dbg !8298
  br label %return, !dbg !8298

if.else185:                                       ; preds = %cond.end180
  store i32 7, i32* %retval, align 4, !dbg !8299
  br label %return, !dbg !8299

if.end186:                                        ; preds = %if.else123
  br label %if.end187

if.end187:                                        ; preds = %if.end186
  store i32 7, i32* %retval, align 4, !dbg !8300
  br label %return, !dbg !8300

return:                                           ; preds = %if.end187, %if.else185, %if.then184, %if.then147, %if.then142, %if.else122, %if.then121, %if.then104, %if.then99, %if.then84, %if.then68, %if.then56, %if.else, %if.end
  %86 = load i32, i32* %retval, align 4, !dbg !8301
  ret i32 %86, !dbg !8301
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @var_lowpart(i32 %mode, %struct.rtx_def* %loc) #0 !dbg !8302 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %mode.addr = alloca i32, align 4
  %loc.addr = alloca %struct.rtx_def*, align 8
  %offset = alloca i32, align 4
  %reg_offset = alloca i32, align 4
  %regno = alloca i32, align 4
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !8305, metadata !DIExpression()), !dbg !8306
  store %struct.rtx_def* %loc, %struct.rtx_def** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %loc.addr, metadata !8307, metadata !DIExpression()), !dbg !8308
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !8309, metadata !DIExpression()), !dbg !8310
  call void @llvm.dbg.declare(metadata i32* %reg_offset, metadata !8311, metadata !DIExpression()), !dbg !8312
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !8313, metadata !DIExpression()), !dbg !8314
  %0 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8315
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !8315
  %bf.load = load i32, i32* %1, align 8, !dbg !8315
  %bf.clear = and i32 %bf.load, 65535, !dbg !8315
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !8315
  br i1 %cmp, label %if.end, label %land.lhs.true, !dbg !8317

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8318
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !8318
  %bf.load1 = load i32, i32* %3, align 8, !dbg !8318
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !8318
  %cmp3 = icmp eq i32 %bf.clear2, 43, !dbg !8318
  br i1 %cmp3, label %if.end, label %if.then, !dbg !8319

if.then:                                          ; preds = %land.lhs.true
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !8320
  br label %return, !dbg !8320

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8321
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !8321
  %bf.load4 = load i32, i32* %5, align 8, !dbg !8321
  %bf.lshr = lshr i32 %bf.load4, 16, !dbg !8321
  %bf.clear5 = and i32 %bf.lshr, 255, !dbg !8321
  %6 = load i32, i32* %mode.addr, align 4, !dbg !8323
  %cmp6 = icmp eq i32 %bf.clear5, %6, !dbg !8324
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !8325

if.then7:                                         ; preds = %if.end
  %7 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8326
  store %struct.rtx_def* %7, %struct.rtx_def** %retval, align 8, !dbg !8327
  br label %return, !dbg !8327

if.end8:                                          ; preds = %if.end
  %8 = load i32, i32* %mode.addr, align 4, !dbg !8328
  %9 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8329
  %10 = bitcast %struct.rtx_def* %9 to i32*, !dbg !8329
  %bf.load9 = load i32, i32* %10, align 8, !dbg !8329
  %bf.lshr10 = lshr i32 %bf.load9, 16, !dbg !8329
  %bf.clear11 = and i32 %bf.lshr10, 255, !dbg !8329
  %call = call i32 @byte_lowpart_offset(i32 %8, i32 %bf.clear11), !dbg !8330
  store i32 %call, i32* %offset, align 4, !dbg !8331
  %11 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8332
  %12 = bitcast %struct.rtx_def* %11 to i32*, !dbg !8332
  %bf.load12 = load i32, i32* %12, align 8, !dbg !8332
  %bf.clear13 = and i32 %bf.load12, 65535, !dbg !8332
  %cmp14 = icmp eq i32 %bf.clear13, 43, !dbg !8332
  br i1 %cmp14, label %if.then15, label %if.end17, !dbg !8334

if.then15:                                        ; preds = %if.end8
  %13 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8335
  %14 = load i32, i32* %mode.addr, align 4, !dbg !8335
  %15 = load i32, i32* %offset, align 4, !dbg !8335
  %conv = zext i32 %15 to i64, !dbg !8335
  %call16 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %13, i32 %14, i64 %conv, i32 0, i32 1), !dbg !8335
  store %struct.rtx_def* %call16, %struct.rtx_def** %retval, align 8, !dbg !8336
  br label %return, !dbg !8336

if.end17:                                         ; preds = %if.end8
  %16 = load i32, i32* %mode.addr, align 4, !dbg !8337
  %17 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8338
  %18 = bitcast %struct.rtx_def* %17 to i32*, !dbg !8338
  %bf.load18 = load i32, i32* %18, align 8, !dbg !8338
  %bf.lshr19 = lshr i32 %bf.load18, 16, !dbg !8338
  %bf.clear20 = and i32 %bf.lshr19, 255, !dbg !8338
  %call21 = call i32 @subreg_lowpart_offset(i32 %16, i32 %bf.clear20), !dbg !8339
  store i32 %call21, i32* %reg_offset, align 4, !dbg !8340
  %19 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8341
  %call22 = call i32 @rhs_regno(%struct.rtx_def* %19), !dbg !8341
  %20 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8342
  %call23 = call i32 @rhs_regno(%struct.rtx_def* %20), !dbg !8342
  %21 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8343
  %22 = bitcast %struct.rtx_def* %21 to i32*, !dbg !8343
  %bf.load24 = load i32, i32* %22, align 8, !dbg !8343
  %bf.lshr25 = lshr i32 %bf.load24, 16, !dbg !8343
  %bf.clear26 = and i32 %bf.lshr25, 255, !dbg !8343
  %23 = load i32, i32* %reg_offset, align 4, !dbg !8344
  %24 = load i32, i32* %mode.addr, align 4, !dbg !8345
  %call27 = call i32 @subreg_regno_offset(i32 %call23, i32 %bf.clear26, i32 %23, i32 %24), !dbg !8346
  %add = add i32 %call22, %call27, !dbg !8347
  store i32 %add, i32* %regno, align 4, !dbg !8348
  %25 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8349
  %26 = load i32, i32* %mode.addr, align 4, !dbg !8350
  %27 = load i32, i32* %regno, align 4, !dbg !8351
  %28 = load i32, i32* %offset, align 4, !dbg !8352
  %call28 = call %struct.rtx_def* @gen_rtx_REG_offset(%struct.rtx_def* %25, i32 %26, i32 %27, i32 %28), !dbg !8353
  store %struct.rtx_def* %call28, %struct.rtx_def** %retval, align 8, !dbg !8354
  br label %return, !dbg !8354

return:                                           ; preds = %if.end17, %if.then15, %if.then7, %if.then
  %29 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !8355
  ret %struct.rtx_def* %29, !dbg !8355
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @get_address_mode(%struct.rtx_def* %mem) #0 !dbg !8356 {
entry:
  %retval = alloca i32, align 4
  %mem.addr = alloca %struct.rtx_def*, align 8
  %mode = alloca i32, align 4
  store %struct.rtx_def* %mem, %struct.rtx_def** %mem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %mem.addr, metadata !8359, metadata !DIExpression()), !dbg !8360
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !8361, metadata !DIExpression()), !dbg !8362
  %0 = load %struct.rtx_def*, %struct.rtx_def** %mem.addr, align 8, !dbg !8363
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !8363
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !8363
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !8363
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !8363
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !8363
  %2 = bitcast %struct.rtx_def* %1 to i32*, !dbg !8363
  %bf.load = load i32, i32* %2, align 8, !dbg !8363
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !8363
  %bf.clear = and i32 %bf.lshr, 255, !dbg !8363
  store i32 %bf.clear, i32* %mode, align 4, !dbg !8362
  %3 = load i32, i32* %mode, align 4, !dbg !8364
  %cmp = icmp ne i32 %3, 0, !dbg !8366
  br i1 %cmp, label %if.then, label %if.end, !dbg !8367

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %mode, align 4, !dbg !8368
  store i32 %4, i32* %retval, align 4, !dbg !8369
  br label %return, !dbg !8369

if.end:                                           ; preds = %entry
  %5 = load i32 (i8)*, i32 (i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 57, i32 1), align 8, !dbg !8370
  %6 = load %struct.rtx_def*, %struct.rtx_def** %mem.addr, align 8, !dbg !8371
  %u1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1, !dbg !8371
  %fld2 = bitcast %union.u* %u1 to [1 x %union.rtunion_def]*, !dbg !8371
  %arrayidx3 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2, i64 0, i64 1, !dbg !8371
  %rt_mem = bitcast %union.rtunion_def* %arrayidx3 to %struct.mem_attrs**, !dbg !8371
  %7 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !8371
  %cmp4 = icmp eq %struct.mem_attrs* %7, null, !dbg !8371
  br i1 %cmp4, label %cond.true, label %cond.false, !dbg !8371

cond.true:                                        ; preds = %if.end
  br label %cond.end, !dbg !8371

cond.false:                                       ; preds = %if.end
  %8 = load %struct.rtx_def*, %struct.rtx_def** %mem.addr, align 8, !dbg !8371
  %u5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1, !dbg !8371
  %fld6 = bitcast %union.u* %u5 to [1 x %union.rtunion_def]*, !dbg !8371
  %arrayidx7 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld6, i64 0, i64 1, !dbg !8371
  %rt_mem8 = bitcast %union.rtunion_def* %arrayidx7 to %struct.mem_attrs**, !dbg !8371
  %9 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem8, align 8, !dbg !8371
  %addrspace = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %9, i32 0, i32 5, !dbg !8371
  %10 = load i8, i8* %addrspace, align 8, !dbg !8371
  %conv = zext i8 %10 to i32, !dbg !8371
  br label %cond.end, !dbg !8371

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv, %cond.false ], !dbg !8371
  %conv9 = trunc i32 %cond to i8, !dbg !8371
  %call = call i32 %5(i8 zeroext %conv9), !dbg !8372
  store i32 %call, i32* %retval, align 4, !dbg !8373
  br label %return, !dbg !8373

return:                                           ; preds = %cond.end, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !8374
  ret i32 %11, !dbg !8374
}

declare dso_local %struct.cselib_val_struct* @cselib_lookup(%struct.rtx_def*, i32, i32) #2

declare dso_local zeroext i8 @cselib_preserved_value_p(%struct.cselib_val_struct*) #2

declare dso_local %struct.rtx_def* @cselib_subst_to_values(%struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32, i32, %struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @non_suitable_const(%struct.rtx_def** %x, i8* %data) #0 !dbg !8375 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def**, align 8
  %data.addr = alloca i8*, align 8
  store %struct.rtx_def** %x, %struct.rtx_def*** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %x.addr, metadata !8376, metadata !DIExpression()), !dbg !8377
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !8378, metadata !DIExpression()), !dbg !8379
  %0 = load %struct.rtx_def**, %struct.rtx_def*** %x.addr, align 8, !dbg !8380
  %1 = load %struct.rtx_def*, %struct.rtx_def** %0, align 8, !dbg !8382
  %cmp = icmp eq %struct.rtx_def* %1, null, !dbg !8383
  br i1 %cmp, label %if.then, label %if.end, !dbg !8384

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !8385
  br label %return, !dbg !8385

if.end:                                           ; preds = %entry
  %2 = load %struct.rtx_def**, %struct.rtx_def*** %x.addr, align 8, !dbg !8386
  %3 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8, !dbg !8386
  %4 = bitcast %struct.rtx_def* %3 to i32*, !dbg !8386
  %bf.load = load i32, i32* %4, align 8, !dbg !8386
  %bf.clear = and i32 %bf.load, 65535, !dbg !8386
  switch i32 %bf.clear, label %sw.default [
    i32 37, label %sw.bb
    i32 2, label %sw.bb
    i32 36, label %sw.bb
    i32 38, label %sw.bb
    i32 46, label %sw.bb
    i32 16, label %sw.bb
    i32 17, label %sw.bb
    i32 43, label %sw.bb1
  ], !dbg !8387

sw.bb:                                            ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  store i32 1, i32* %retval, align 4, !dbg !8388
  br label %return, !dbg !8388

sw.bb1:                                           ; preds = %if.end
  %5 = load %struct.rtx_def**, %struct.rtx_def*** %x.addr, align 8, !dbg !8390
  %6 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8, !dbg !8390
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !8390
  %bf.load2 = load i32, i32* %7, align 8, !dbg !8390
  %bf.lshr = lshr i32 %bf.load2, 26, !dbg !8390
  %bf.clear3 = and i32 %bf.lshr, 1, !dbg !8390
  %tobool = icmp ne i32 %bf.clear3, 0, !dbg !8391
  %lnot = xor i1 %tobool, true, !dbg !8391
  %lnot.ext = zext i1 %lnot to i32, !dbg !8391
  store i32 %lnot.ext, i32* %retval, align 4, !dbg !8392
  br label %return, !dbg !8392

sw.default:                                       ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !8393
  br label %return, !dbg !8393

return:                                           ; preds = %sw.default, %sw.bb1, %sw.bb, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !8394
  ret i32 %8, !dbg !8394
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.cselib_val_struct* @find_use_val(%struct.rtx_def* %x, i32 %mode, %struct.count_use_info* %cui) #0 !dbg !8395 {
entry:
  %retval = alloca %struct.cselib_val_struct*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %mode.addr = alloca i32, align 4
  %cui.addr = alloca %struct.count_use_info*, align 8
  %i = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !8398, metadata !DIExpression()), !dbg !8399
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !8400, metadata !DIExpression()), !dbg !8401
  store %struct.count_use_info* %cui, %struct.count_use_info** %cui.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.count_use_info** %cui.addr, metadata !8402, metadata !DIExpression()), !dbg !8403
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8404, metadata !DIExpression()), !dbg !8405
  %0 = load %struct.count_use_info*, %struct.count_use_info** %cui.addr, align 8, !dbg !8406
  %sets = getelementptr inbounds %struct.count_use_info, %struct.count_use_info* %0, i32 0, i32 2, !dbg !8408
  %1 = load %struct.cselib_set*, %struct.cselib_set** %sets, align 8, !dbg !8408
  %tobool = icmp ne %struct.cselib_set* %1, null, !dbg !8406
  br i1 %tobool, label %if.then, label %if.end10, !dbg !8409

if.then:                                          ; preds = %entry
  %2 = load %struct.count_use_info*, %struct.count_use_info** %cui.addr, align 8, !dbg !8410
  %store_p = getelementptr inbounds %struct.count_use_info, %struct.count_use_info* %2, i32 0, i32 4, !dbg !8413
  %3 = load i8, i8* %store_p, align 4, !dbg !8413
  %tobool1 = icmp ne i8 %3, 0, !dbg !8410
  br i1 %tobool1, label %if.then2, label %if.else, !dbg !8414

if.then2:                                         ; preds = %if.then
  store i32 0, i32* %i, align 4, !dbg !8415
  br label %for.cond, !dbg !8418

for.cond:                                         ; preds = %for.inc, %if.then2
  %4 = load i32, i32* %i, align 4, !dbg !8419
  %5 = load %struct.count_use_info*, %struct.count_use_info** %cui.addr, align 8, !dbg !8421
  %n_sets = getelementptr inbounds %struct.count_use_info, %struct.count_use_info* %5, i32 0, i32 3, !dbg !8422
  %6 = load i32, i32* %n_sets, align 8, !dbg !8422
  %cmp = icmp slt i32 %4, %6, !dbg !8423
  br i1 %cmp, label %for.body, label %for.end, !dbg !8424

for.body:                                         ; preds = %for.cond
  %7 = load %struct.count_use_info*, %struct.count_use_info** %cui.addr, align 8, !dbg !8425
  %sets3 = getelementptr inbounds %struct.count_use_info, %struct.count_use_info* %7, i32 0, i32 2, !dbg !8427
  %8 = load %struct.cselib_set*, %struct.cselib_set** %sets3, align 8, !dbg !8427
  %9 = load i32, i32* %i, align 4, !dbg !8428
  %idxprom = sext i32 %9 to i64, !dbg !8425
  %arrayidx = getelementptr inbounds %struct.cselib_set, %struct.cselib_set* %8, i64 %idxprom, !dbg !8425
  %dest = getelementptr inbounds %struct.cselib_set, %struct.cselib_set* %arrayidx, i32 0, i32 1, !dbg !8429
  %10 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !8429
  %11 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8430
  %cmp4 = icmp eq %struct.rtx_def* %10, %11, !dbg !8431
  br i1 %cmp4, label %if.then5, label %if.end, !dbg !8432

if.then5:                                         ; preds = %for.body
  %12 = load %struct.count_use_info*, %struct.count_use_info** %cui.addr, align 8, !dbg !8433
  %sets6 = getelementptr inbounds %struct.count_use_info, %struct.count_use_info* %12, i32 0, i32 2, !dbg !8434
  %13 = load %struct.cselib_set*, %struct.cselib_set** %sets6, align 8, !dbg !8434
  %14 = load i32, i32* %i, align 4, !dbg !8435
  %idxprom7 = sext i32 %14 to i64, !dbg !8433
  %arrayidx8 = getelementptr inbounds %struct.cselib_set, %struct.cselib_set* %13, i64 %idxprom7, !dbg !8433
  %src_elt = getelementptr inbounds %struct.cselib_set, %struct.cselib_set* %arrayidx8, i32 0, i32 2, !dbg !8436
  %15 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %src_elt, align 8, !dbg !8436
  store %struct.cselib_val_struct* %15, %struct.cselib_val_struct** %retval, align 8, !dbg !8437
  br label %return, !dbg !8437

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !8430

for.inc:                                          ; preds = %if.end
  %16 = load i32, i32* %i, align 4, !dbg !8438
  %inc = add nsw i32 %16, 1, !dbg !8438
  store i32 %inc, i32* %i, align 4, !dbg !8438
  br label %for.cond, !dbg !8439, !llvm.loop !8440

for.end:                                          ; preds = %for.cond
  br label %if.end9, !dbg !8442

if.else:                                          ; preds = %if.then
  %17 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8443
  %18 = load i32, i32* %mode.addr, align 4, !dbg !8444
  %call = call %struct.cselib_val_struct* @cselib_lookup(%struct.rtx_def* %17, i32 %18, i32 0), !dbg !8445
  store %struct.cselib_val_struct* %call, %struct.cselib_val_struct** %retval, align 8, !dbg !8446
  br label %return, !dbg !8446

if.end9:                                          ; preds = %for.end
  br label %if.end10, !dbg !8447

if.end10:                                         ; preds = %if.end9, %entry
  store %struct.cselib_val_struct* null, %struct.cselib_val_struct** %retval, align 8, !dbg !8448
  br label %return, !dbg !8448

return:                                           ; preds = %if.end10, %if.else, %if.then5
  %19 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %retval, align 8, !dbg !8449
  ret %struct.cselib_val_struct* %19, !dbg !8449
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @replace_expr_with_values(%struct.rtx_def* %loc) #0 !dbg !8450 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %loc.addr = alloca %struct.rtx_def*, align 8
  %addr = alloca %struct.cselib_val_struct*, align 8
  store %struct.rtx_def* %loc, %struct.rtx_def** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %loc.addr, metadata !8453, metadata !DIExpression()), !dbg !8454
  %0 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8455
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !8455
  %bf.load = load i32, i32* %1, align 8, !dbg !8455
  %bf.clear = and i32 %bf.load, 65535, !dbg !8455
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !8455
  br i1 %cmp, label %if.then, label %if.else, !dbg !8457

if.then:                                          ; preds = %entry
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !8458
  br label %return, !dbg !8458

if.else:                                          ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8459
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !8459
  %bf.load1 = load i32, i32* %3, align 8, !dbg !8459
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !8459
  %cmp3 = icmp eq i32 %bf.clear2, 43, !dbg !8459
  br i1 %cmp3, label %if.then4, label %if.else9, !dbg !8461

if.then4:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.cselib_val_struct** %addr, metadata !8462, metadata !DIExpression()), !dbg !8464
  %4 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8465
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1, !dbg !8465
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !8465
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !8465
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !8465
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !8465
  %6 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8466
  %call = call i32 @get_address_mode(%struct.rtx_def* %6), !dbg !8467
  %call5 = call %struct.cselib_val_struct* @cselib_lookup(%struct.rtx_def* %5, i32 %call, i32 0), !dbg !8468
  store %struct.cselib_val_struct* %call5, %struct.cselib_val_struct** %addr, align 8, !dbg !8464
  %7 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %addr, align 8, !dbg !8469
  %tobool = icmp ne %struct.cselib_val_struct* %7, null, !dbg !8469
  br i1 %tobool, label %if.then6, label %if.else8, !dbg !8471

if.then6:                                         ; preds = %if.then4
  %8 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8472
  %9 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %addr, align 8, !dbg !8473
  %val_rtx = getelementptr inbounds %struct.cselib_val_struct, %struct.cselib_val_struct* %9, i32 0, i32 2, !dbg !8474
  %10 = load %struct.rtx_def*, %struct.rtx_def** %val_rtx, align 8, !dbg !8474
  %call7 = call %struct.rtx_def* @replace_equiv_address_nv(%struct.rtx_def* %8, %struct.rtx_def* %10), !dbg !8475
  store %struct.rtx_def* %call7, %struct.rtx_def** %retval, align 8, !dbg !8476
  br label %return, !dbg !8476

if.else8:                                         ; preds = %if.then4
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !8477
  br label %return, !dbg !8477

if.else9:                                         ; preds = %if.else
  %11 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8478
  %call10 = call %struct.rtx_def* @cselib_subst_to_values(%struct.rtx_def* %11), !dbg !8479
  store %struct.rtx_def* %call10, %struct.rtx_def** %retval, align 8, !dbg !8480
  br label %return, !dbg !8480

return:                                           ; preds = %if.else9, %if.else8, %if.then6, %if.then
  %12 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !8481
  ret %struct.rtx_def* %12, !dbg !8481
}

declare dso_local %struct.rtx_def* @shallow_copy_rtx_stat(%struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @gen_rtx_fmt_e_stat(i32, i32, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @track_expr_p(%union.tree_node* %expr, i8 zeroext %need_rtl) #0 !dbg !8482 {
entry:
  %retval = alloca i8, align 1
  %expr.addr = alloca %union.tree_node*, align 8
  %need_rtl.addr = alloca i8, align 1
  %decl_rtl = alloca %struct.rtx_def*, align 8
  %realdecl = alloca %union.tree_node*, align 8
  store %union.tree_node* %expr, %union.tree_node** %expr.addr, align 8
  call void @llvm.dbg.declare(metadata %union.tree_node** %expr.addr, metadata !8485, metadata !DIExpression()), !dbg !8486
  store i8 %need_rtl, i8* %need_rtl.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %need_rtl.addr, metadata !8487, metadata !DIExpression()), !dbg !8488
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %decl_rtl, metadata !8489, metadata !DIExpression()), !dbg !8490
  call void @llvm.dbg.declare(metadata %union.tree_node** %realdecl, metadata !8491, metadata !DIExpression()), !dbg !8492
  %0 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8, !dbg !8493
  %base = bitcast %union.tree_node* %0 to %struct.tree_base*, !dbg !8493
  %1 = bitcast %struct.tree_base* %base to i64*, !dbg !8493
  %bf.load = load i64, i64* %1, align 8, !dbg !8493
  %bf.clear = and i64 %bf.load, 65535, !dbg !8493
  %bf.cast = trunc i64 %bf.clear to i32, !dbg !8493
  %cmp = icmp eq i32 %bf.cast, 37, !dbg !8495
  br i1 %cmp, label %if.then, label %if.end, !dbg !8496

if.then:                                          ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8, !dbg !8497
  %base1 = bitcast %union.tree_node* %2 to %struct.tree_base*, !dbg !8497
  %3 = bitcast %struct.tree_base* %base1 to i64*, !dbg !8497
  %bf.load2 = load i64, i64* %3, align 8, !dbg !8497
  %bf.clear3 = and i64 %bf.load2, 65535, !dbg !8497
  %bf.cast4 = trunc i64 %bf.clear3 to i32, !dbg !8497
  %idxprom = zext i32 %bf.cast4 to i64, !dbg !8497
  %arrayidx = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %idxprom, !dbg !8497
  %arrayidx5 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx, i64 0, i64 11, !dbg !8497
  %4 = load i8, i8* %arrayidx5, align 1, !dbg !8497
  %conv = zext i8 %4 to i32, !dbg !8497
  %tobool = icmp ne i32 %conv, 0, !dbg !8497
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !8497

land.rhs:                                         ; preds = %if.then
  %5 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8, !dbg !8497
  %decl_with_rtl = bitcast %union.tree_node* %5 to %struct.tree_decl_with_rtl*, !dbg !8497
  %rtl = getelementptr inbounds %struct.tree_decl_with_rtl, %struct.tree_decl_with_rtl* %decl_with_rtl, i32 0, i32 1, !dbg !8497
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rtl, align 8, !dbg !8497
  %cmp6 = icmp ne %struct.rtx_def* %6, null, !dbg !8497
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then
  %7 = phi i1 [ false, %if.then ], [ %cmp6, %land.rhs ], !dbg !8498
  %land.ext = zext i1 %7 to i32, !dbg !8497
  %conv8 = trunc i32 %land.ext to i8, !dbg !8497
  store i8 %conv8, i8* %retval, align 1, !dbg !8499
  br label %return, !dbg !8499

if.end:                                           ; preds = %entry
  %8 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8, !dbg !8500
  %base9 = bitcast %union.tree_node* %8 to %struct.tree_base*, !dbg !8500
  %9 = bitcast %struct.tree_base* %base9 to i64*, !dbg !8500
  %bf.load10 = load i64, i64* %9, align 8, !dbg !8500
  %bf.clear11 = and i64 %bf.load10, 65535, !dbg !8500
  %bf.cast12 = trunc i64 %bf.clear11 to i32, !dbg !8500
  %cmp13 = icmp ne i32 %bf.cast12, 32, !dbg !8502
  br i1 %cmp13, label %land.lhs.true, label %if.end22, !dbg !8503

land.lhs.true:                                    ; preds = %if.end
  %10 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8, !dbg !8504
  %base15 = bitcast %union.tree_node* %10 to %struct.tree_base*, !dbg !8504
  %11 = bitcast %struct.tree_base* %base15 to i64*, !dbg !8504
  %bf.load16 = load i64, i64* %11, align 8, !dbg !8504
  %bf.clear17 = and i64 %bf.load16, 65535, !dbg !8504
  %bf.cast18 = trunc i64 %bf.clear17 to i32, !dbg !8504
  %cmp19 = icmp ne i32 %bf.cast18, 34, !dbg !8505
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !8506

if.then21:                                        ; preds = %land.lhs.true
  store i8 0, i8* %retval, align 1, !dbg !8507
  br label %return, !dbg !8507

if.end22:                                         ; preds = %land.lhs.true, %if.end
  %12 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8, !dbg !8508
  %decl_minimal = bitcast %union.tree_node* %12 to %struct.tree_decl_minimal*, !dbg !8508
  %name = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %decl_minimal, i32 0, i32 3, !dbg !8508
  %13 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !8508
  %tobool23 = icmp ne %union.tree_node* %13, null, !dbg !8508
  br i1 %tobool23, label %if.end28, label %land.lhs.true24, !dbg !8510

land.lhs.true24:                                  ; preds = %if.end22
  %14 = load i8, i8* %need_rtl.addr, align 1, !dbg !8511
  %conv25 = zext i8 %14 to i32, !dbg !8511
  %tobool26 = icmp ne i32 %conv25, 0, !dbg !8511
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !8512

if.then27:                                        ; preds = %land.lhs.true24
  store i8 0, i8* %retval, align 1, !dbg !8513
  br label %return, !dbg !8513

if.end28:                                         ; preds = %land.lhs.true24, %if.end22
  %15 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8, !dbg !8514
  %base29 = bitcast %union.tree_node* %15 to %struct.tree_base*, !dbg !8514
  %16 = bitcast %struct.tree_base* %base29 to i64*, !dbg !8514
  %bf.load30 = load i64, i64* %16, align 8, !dbg !8514
  %bf.clear31 = and i64 %bf.load30, 65535, !dbg !8514
  %bf.cast32 = trunc i64 %bf.clear31 to i32, !dbg !8514
  %idxprom33 = zext i32 %bf.cast32 to i64, !dbg !8514
  %arrayidx34 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %idxprom33, !dbg !8514
  %arrayidx35 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx34, i64 0, i64 11, !dbg !8514
  %17 = load i8, i8* %arrayidx35, align 1, !dbg !8514
  %conv36 = zext i8 %17 to i32, !dbg !8514
  %tobool37 = icmp ne i32 %conv36, 0, !dbg !8514
  br i1 %tobool37, label %land.lhs.true38, label %cond.false51, !dbg !8514

land.lhs.true38:                                  ; preds = %if.end28
  %18 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8, !dbg !8514
  %decl_with_rtl39 = bitcast %union.tree_node* %18 to %struct.tree_decl_with_rtl*, !dbg !8514
  %rtl40 = getelementptr inbounds %struct.tree_decl_with_rtl, %struct.tree_decl_with_rtl* %decl_with_rtl39, i32 0, i32 1, !dbg !8514
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rtl40, align 8, !dbg !8514
  %cmp41 = icmp ne %struct.rtx_def* %19, null, !dbg !8514
  br i1 %cmp41, label %cond.true, label %cond.false51, !dbg !8514

cond.true:                                        ; preds = %land.lhs.true38
  %20 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8, !dbg !8514
  %decl_with_rtl43 = bitcast %union.tree_node* %20 to %struct.tree_decl_with_rtl*, !dbg !8514
  %rtl44 = getelementptr inbounds %struct.tree_decl_with_rtl, %struct.tree_decl_with_rtl* %decl_with_rtl43, i32 0, i32 1, !dbg !8514
  %21 = load %struct.rtx_def*, %struct.rtx_def** %rtl44, align 8, !dbg !8514
  %tobool45 = icmp ne %struct.rtx_def* %21, null, !dbg !8514
  br i1 %tobool45, label %cond.true46, label %cond.false, !dbg !8514

cond.true46:                                      ; preds = %cond.true
  %22 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8, !dbg !8514
  %decl_with_rtl47 = bitcast %union.tree_node* %22 to %struct.tree_decl_with_rtl*, !dbg !8514
  %rtl48 = getelementptr inbounds %struct.tree_decl_with_rtl, %struct.tree_decl_with_rtl* %decl_with_rtl47, i32 0, i32 1, !dbg !8514
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rtl48, align 8, !dbg !8514
  br label %cond.end, !dbg !8514

cond.false:                                       ; preds = %cond.true
  %24 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8, !dbg !8514
  call void @make_decl_rtl(%union.tree_node* %24), !dbg !8514
  %25 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8, !dbg !8514
  %decl_with_rtl49 = bitcast %union.tree_node* %25 to %struct.tree_decl_with_rtl*, !dbg !8514
  %rtl50 = getelementptr inbounds %struct.tree_decl_with_rtl, %struct.tree_decl_with_rtl* %decl_with_rtl49, i32 0, i32 1, !dbg !8514
  %26 = load %struct.rtx_def*, %struct.rtx_def** %rtl50, align 8, !dbg !8514
  br label %cond.end, !dbg !8514

cond.end:                                         ; preds = %cond.false, %cond.true46
  %cond = phi %struct.rtx_def* [ %23, %cond.true46 ], [ %26, %cond.false ], !dbg !8514
  br label %cond.end52, !dbg !8514

cond.false51:                                     ; preds = %land.lhs.true38, %if.end28
  br label %cond.end52, !dbg !8514

cond.end52:                                       ; preds = %cond.false51, %cond.end
  %cond53 = phi %struct.rtx_def* [ %cond, %cond.end ], [ null, %cond.false51 ], !dbg !8514
  store %struct.rtx_def* %cond53, %struct.rtx_def** %decl_rtl, align 8, !dbg !8515
  %27 = load %struct.rtx_def*, %struct.rtx_def** %decl_rtl, align 8, !dbg !8516
  %tobool54 = icmp ne %struct.rtx_def* %27, null, !dbg !8516
  br i1 %tobool54, label %if.end59, label %land.lhs.true55, !dbg !8518

land.lhs.true55:                                  ; preds = %cond.end52
  %28 = load i8, i8* %need_rtl.addr, align 1, !dbg !8519
  %conv56 = zext i8 %28 to i32, !dbg !8519
  %tobool57 = icmp ne i32 %conv56, 0, !dbg !8519
  br i1 %tobool57, label %if.then58, label %if.end59, !dbg !8520

if.then58:                                        ; preds = %land.lhs.true55
  store i8 0, i8* %retval, align 1, !dbg !8521
  br label %return, !dbg !8521

if.end59:                                         ; preds = %land.lhs.true55, %cond.end52
  %29 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8, !dbg !8522
  store %union.tree_node* %29, %union.tree_node** %realdecl, align 8, !dbg !8523
  %30 = load %union.tree_node*, %union.tree_node** %realdecl, align 8, !dbg !8524
  %decl_common = bitcast %union.tree_node* %30 to %struct.tree_decl_common*, !dbg !8524
  %debug_expr_is_from = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %decl_common, i32 0, i32 2, !dbg !8524
  %31 = bitcast i40* %debug_expr_is_from to i64*, !dbg !8524
  %bf.load60 = load i64, i64* %31, align 8, !dbg !8524
  %bf.lshr = lshr i64 %bf.load60, 14, !dbg !8524
  %bf.clear61 = and i64 %bf.lshr, 1, !dbg !8524
  %bf.cast62 = trunc i64 %bf.clear61 to i32, !dbg !8524
  %tobool63 = icmp ne i32 %bf.cast62, 0, !dbg !8524
  br i1 %tobool63, label %land.lhs.true64, label %if.end78, !dbg !8526

land.lhs.true64:                                  ; preds = %if.end59
  %32 = load %union.tree_node*, %union.tree_node** %realdecl, align 8, !dbg !8527
  %call = call %union.tree_node* @decl_debug_expr_lookup(%union.tree_node* %32), !dbg !8527
  %tobool65 = icmp ne %union.tree_node* %call, null, !dbg !8527
  br i1 %tobool65, label %if.then66, label %if.end78, !dbg !8528

if.then66:                                        ; preds = %land.lhs.true64
  %33 = load %union.tree_node*, %union.tree_node** %realdecl, align 8, !dbg !8529
  %call67 = call %union.tree_node* @decl_debug_expr_lookup(%union.tree_node* %33), !dbg !8529
  store %union.tree_node* %call67, %union.tree_node** %realdecl, align 8, !dbg !8531
  %34 = load %union.tree_node*, %union.tree_node** %realdecl, align 8, !dbg !8532
  %base68 = bitcast %union.tree_node* %34 to %struct.tree_base*, !dbg !8532
  %35 = bitcast %struct.tree_base* %base68 to i64*, !dbg !8532
  %bf.load69 = load i64, i64* %35, align 8, !dbg !8532
  %bf.clear70 = and i64 %bf.load69, 65535, !dbg !8532
  %bf.cast71 = trunc i64 %bf.clear70 to i32, !dbg !8532
  %idxprom72 = sext i32 %bf.cast71 to i64, !dbg !8532
  %arrayidx73 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %idxprom72, !dbg !8532
  %36 = load i32, i32* %arrayidx73, align 4, !dbg !8532
  %cmp74 = icmp eq i32 %36, 3, !dbg !8532
  br i1 %cmp74, label %if.end77, label %if.then76, !dbg !8534

if.then76:                                        ; preds = %if.then66
  store i8 0, i8* %retval, align 1, !dbg !8535
  br label %return, !dbg !8535

if.end77:                                         ; preds = %if.then66
  br label %if.end78, !dbg !8536

if.end78:                                         ; preds = %if.end77, %land.lhs.true64, %if.end59
  %37 = load %union.tree_node*, %union.tree_node** %realdecl, align 8, !dbg !8537
  %decl_common79 = bitcast %union.tree_node* %37 to %struct.tree_decl_common*, !dbg !8537
  %ignored_flag = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %decl_common79, i32 0, i32 2, !dbg !8537
  %38 = bitcast i40* %ignored_flag to i64*, !dbg !8537
  %bf.load80 = load i64, i64* %38, align 8, !dbg !8537
  %bf.lshr81 = lshr i64 %bf.load80, 10, !dbg !8537
  %bf.clear82 = and i64 %bf.lshr81, 1, !dbg !8537
  %bf.cast83 = trunc i64 %bf.clear82 to i32, !dbg !8537
  %tobool84 = icmp ne i32 %bf.cast83, 0, !dbg !8537
  br i1 %tobool84, label %if.then85, label %if.end86, !dbg !8539

if.then85:                                        ; preds = %if.end78
  store i8 0, i8* %retval, align 1, !dbg !8540
  br label %return, !dbg !8540

if.end86:                                         ; preds = %if.end78
  %39 = load %union.tree_node*, %union.tree_node** %realdecl, align 8, !dbg !8541
  %base87 = bitcast %union.tree_node* %39 to %struct.tree_base*, !dbg !8541
  %40 = bitcast %struct.tree_base* %base87 to i64*, !dbg !8541
  %bf.load88 = load i64, i64* %40, align 8, !dbg !8541
  %bf.lshr89 = lshr i64 %bf.load88, 26, !dbg !8541
  %bf.clear90 = and i64 %bf.lshr89, 1, !dbg !8541
  %bf.cast91 = trunc i64 %bf.clear90 to i32, !dbg !8541
  %tobool92 = icmp ne i32 %bf.cast91, 0, !dbg !8541
  br i1 %tobool92, label %if.then93, label %if.end94, !dbg !8543

if.then93:                                        ; preds = %if.end86
  store i8 0, i8* %retval, align 1, !dbg !8544
  br label %return, !dbg !8544

if.end94:                                         ; preds = %if.end86
  %41 = load %struct.rtx_def*, %struct.rtx_def** %decl_rtl, align 8, !dbg !8545
  %tobool95 = icmp ne %struct.rtx_def* %41, null, !dbg !8545
  br i1 %tobool95, label %land.lhs.true96, label %if.end107, !dbg !8547

land.lhs.true96:                                  ; preds = %if.end94
  %42 = load %struct.rtx_def*, %struct.rtx_def** %decl_rtl, align 8, !dbg !8548
  %43 = bitcast %struct.rtx_def* %42 to i32*, !dbg !8548
  %bf.load97 = load i32, i32* %43, align 8, !dbg !8548
  %bf.clear98 = and i32 %bf.load97, 65535, !dbg !8548
  %cmp99 = icmp eq i32 %bf.clear98, 43, !dbg !8548
  br i1 %cmp99, label %land.lhs.true101, label %if.end107, !dbg !8549

land.lhs.true101:                                 ; preds = %land.lhs.true96
  %44 = load %struct.rtx_def*, %struct.rtx_def** %decl_rtl, align 8, !dbg !8550
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %44, i32 0, i32 1, !dbg !8550
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !8550
  %arrayidx102 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !8550
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx102 to %struct.rtx_def**, !dbg !8550
  %45 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !8550
  %call103 = call zeroext i8 @contains_symbol_ref(%struct.rtx_def* %45), !dbg !8551
  %conv104 = zext i8 %call103 to i32, !dbg !8551
  %tobool105 = icmp ne i32 %conv104, 0, !dbg !8551
  br i1 %tobool105, label %if.then106, label %if.end107, !dbg !8552

if.then106:                                       ; preds = %land.lhs.true101
  store i8 0, i8* %retval, align 1, !dbg !8553
  br label %return, !dbg !8553

if.end107:                                        ; preds = %land.lhs.true101, %land.lhs.true96, %if.end94
  %46 = load %struct.rtx_def*, %struct.rtx_def** %decl_rtl, align 8, !dbg !8554
  %tobool108 = icmp ne %struct.rtx_def* %46, null, !dbg !8554
  br i1 %tobool108, label %land.lhs.true109, label %if.end222, !dbg !8556

land.lhs.true109:                                 ; preds = %if.end107
  %47 = load %struct.rtx_def*, %struct.rtx_def** %decl_rtl, align 8, !dbg !8557
  %48 = bitcast %struct.rtx_def* %47 to i32*, !dbg !8557
  %bf.load110 = load i32, i32* %48, align 8, !dbg !8557
  %bf.clear111 = and i32 %bf.load110, 65535, !dbg !8557
  %cmp112 = icmp eq i32 %bf.clear111, 43, !dbg !8557
  br i1 %cmp112, label %if.then114, label %if.end222, !dbg !8558

if.then114:                                       ; preds = %land.lhs.true109
  %49 = load %struct.rtx_def*, %struct.rtx_def** %decl_rtl, align 8, !dbg !8559
  %50 = bitcast %struct.rtx_def* %49 to i32*, !dbg !8559
  %bf.load115 = load i32, i32* %50, align 8, !dbg !8559
  %bf.lshr116 = lshr i32 %bf.load115, 16, !dbg !8559
  %bf.clear117 = and i32 %bf.lshr116, 255, !dbg !8559
  %cmp118 = icmp eq i32 %bf.clear117, 1, !dbg !8562
  br i1 %cmp118, label %if.then153, label %lor.lhs.false, !dbg !8563

lor.lhs.false:                                    ; preds = %if.then114
  %51 = load %union.tree_node*, %union.tree_node** %realdecl, align 8, !dbg !8564
  %common = bitcast %union.tree_node* %51 to %struct.tree_common*, !dbg !8564
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2, !dbg !8564
  %52 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !8564
  %base120 = bitcast %union.tree_node* %52 to %struct.tree_base*, !dbg !8564
  %53 = bitcast %struct.tree_base* %base120 to i64*, !dbg !8564
  %bf.load121 = load i64, i64* %53, align 8, !dbg !8564
  %bf.clear122 = and i64 %bf.load121, 65535, !dbg !8564
  %bf.cast123 = trunc i64 %bf.clear122 to i32, !dbg !8564
  %cmp124 = icmp eq i32 %bf.cast123, 15, !dbg !8564
  br i1 %cmp124, label %if.then153, label %lor.lhs.false126, !dbg !8564

lor.lhs.false126:                                 ; preds = %lor.lhs.false
  %54 = load %union.tree_node*, %union.tree_node** %realdecl, align 8, !dbg !8564
  %common127 = bitcast %union.tree_node* %54 to %struct.tree_common*, !dbg !8564
  %type128 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common127, i32 0, i32 2, !dbg !8564
  %55 = load %union.tree_node*, %union.tree_node** %type128, align 8, !dbg !8564
  %base129 = bitcast %union.tree_node* %55 to %struct.tree_base*, !dbg !8564
  %56 = bitcast %struct.tree_base* %base129 to i64*, !dbg !8564
  %bf.load130 = load i64, i64* %56, align 8, !dbg !8564
  %bf.clear131 = and i64 %bf.load130, 65535, !dbg !8564
  %bf.cast132 = trunc i64 %bf.clear131 to i32, !dbg !8564
  %cmp133 = icmp eq i32 %bf.cast132, 16, !dbg !8564
  br i1 %cmp133, label %if.then153, label %lor.lhs.false135, !dbg !8564

lor.lhs.false135:                                 ; preds = %lor.lhs.false126
  %57 = load %union.tree_node*, %union.tree_node** %realdecl, align 8, !dbg !8564
  %common136 = bitcast %union.tree_node* %57 to %struct.tree_common*, !dbg !8564
  %type137 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common136, i32 0, i32 2, !dbg !8564
  %58 = load %union.tree_node*, %union.tree_node** %type137, align 8, !dbg !8564
  %base138 = bitcast %union.tree_node* %58 to %struct.tree_base*, !dbg !8564
  %59 = bitcast %struct.tree_base* %base138 to i64*, !dbg !8564
  %bf.load139 = load i64, i64* %59, align 8, !dbg !8564
  %bf.clear140 = and i64 %bf.load139, 65535, !dbg !8564
  %bf.cast141 = trunc i64 %bf.clear140 to i32, !dbg !8564
  %cmp142 = icmp eq i32 %bf.cast141, 17, !dbg !8564
  br i1 %cmp142, label %if.then153, label %lor.lhs.false144, !dbg !8564

lor.lhs.false144:                                 ; preds = %lor.lhs.false135
  %60 = load %union.tree_node*, %union.tree_node** %realdecl, align 8, !dbg !8564
  %common145 = bitcast %union.tree_node* %60 to %struct.tree_common*, !dbg !8564
  %type146 = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common145, i32 0, i32 2, !dbg !8564
  %61 = load %union.tree_node*, %union.tree_node** %type146, align 8, !dbg !8564
  %base147 = bitcast %union.tree_node* %61 to %struct.tree_base*, !dbg !8564
  %62 = bitcast %struct.tree_base* %base147 to i64*, !dbg !8564
  %bf.load148 = load i64, i64* %62, align 8, !dbg !8564
  %bf.clear149 = and i64 %bf.load148, 65535, !dbg !8564
  %bf.cast150 = trunc i64 %bf.clear149 to i32, !dbg !8564
  %cmp151 = icmp eq i32 %bf.cast150, 18, !dbg !8564
  br i1 %cmp151, label %if.then153, label %if.end154, !dbg !8565

if.then153:                                       ; preds = %lor.lhs.false144, %lor.lhs.false135, %lor.lhs.false126, %lor.lhs.false, %if.then114
  store i8 0, i8* %retval, align 1, !dbg !8566
  br label %return, !dbg !8566

if.end154:                                        ; preds = %lor.lhs.false144
  %63 = load %struct.rtx_def*, %struct.rtx_def** %decl_rtl, align 8, !dbg !8567
  %u155 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %63, i32 0, i32 1, !dbg !8567
  %fld156 = bitcast %union.u* %u155 to [1 x %union.rtunion_def]*, !dbg !8567
  %arrayidx157 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld156, i64 0, i64 1, !dbg !8567
  %rt_mem = bitcast %union.rtunion_def* %arrayidx157 to %struct.mem_attrs**, !dbg !8567
  %64 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !8567
  %cmp158 = icmp ne %struct.mem_attrs* %64, null, !dbg !8567
  br i1 %cmp158, label %cond.true160, label %cond.false166, !dbg !8569

cond.true160:                                     ; preds = %if.end154
  %65 = load %struct.rtx_def*, %struct.rtx_def** %decl_rtl, align 8, !dbg !8567
  %u161 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %65, i32 0, i32 1, !dbg !8567
  %fld162 = bitcast %union.u* %u161 to [1 x %union.rtunion_def]*, !dbg !8567
  %arrayidx163 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld162, i64 0, i64 1, !dbg !8567
  %rt_mem164 = bitcast %union.rtunion_def* %arrayidx163 to %struct.mem_attrs**, !dbg !8567
  %66 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem164, align 8, !dbg !8567
  %size = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %66, i32 0, i32 2, !dbg !8567
  %67 = load %struct.rtx_def*, %struct.rtx_def** %size, align 8, !dbg !8567
  %tobool165 = icmp ne %struct.rtx_def* %67, null, !dbg !8567
  br i1 %tobool165, label %land.lhs.true183, label %if.end221, !dbg !8567

cond.false166:                                    ; preds = %if.end154
  %68 = load %struct.rtx_def*, %struct.rtx_def** %decl_rtl, align 8, !dbg !8567
  %69 = bitcast %struct.rtx_def* %68 to i32*, !dbg !8567
  %bf.load167 = load i32, i32* %69, align 8, !dbg !8567
  %bf.lshr168 = lshr i32 %bf.load167, 16, !dbg !8567
  %bf.clear169 = and i32 %bf.lshr168, 255, !dbg !8567
  %cmp170 = icmp ne i32 %bf.clear169, 1, !dbg !8567
  br i1 %cmp170, label %cond.true172, label %cond.false182, !dbg !8569

cond.true172:                                     ; preds = %cond.false166
  %70 = load %struct.rtx_def*, %struct.rtx_def** %decl_rtl, align 8, !dbg !8567
  %71 = bitcast %struct.rtx_def* %70 to i32*, !dbg !8567
  %bf.load173 = load i32, i32* %71, align 8, !dbg !8567
  %bf.lshr174 = lshr i32 %bf.load173, 16, !dbg !8567
  %bf.clear175 = and i32 %bf.lshr174, 255, !dbg !8567
  %idxprom176 = zext i32 %bf.clear175 to i64, !dbg !8567
  %arrayidx177 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom176, !dbg !8567
  %72 = load i8, i8* %arrayidx177, align 1, !dbg !8567
  %conv178 = zext i8 %72 to i16, !dbg !8567
  %conv179 = zext i16 %conv178 to i64, !dbg !8567
  %call180 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv179), !dbg !8567
  %tobool181 = icmp ne %struct.rtx_def* %call180, null, !dbg !8567
  br i1 %tobool181, label %land.lhs.true183, label %if.end221, !dbg !8567

cond.false182:                                    ; preds = %cond.false166
  br i1 false, label %land.lhs.true183, label %if.end221, !dbg !8569

land.lhs.true183:                                 ; preds = %cond.false182, %cond.true172, %cond.true160
  %73 = load %struct.rtx_def*, %struct.rtx_def** %decl_rtl, align 8, !dbg !8570
  %u184 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %73, i32 0, i32 1, !dbg !8570
  %fld185 = bitcast %union.u* %u184 to [1 x %union.rtunion_def]*, !dbg !8570
  %arrayidx186 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld185, i64 0, i64 1, !dbg !8570
  %rt_mem187 = bitcast %union.rtunion_def* %arrayidx186 to %struct.mem_attrs**, !dbg !8570
  %74 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem187, align 8, !dbg !8570
  %cmp188 = icmp ne %struct.mem_attrs* %74, null, !dbg !8570
  br i1 %cmp188, label %cond.true190, label %cond.false196, !dbg !8570

cond.true190:                                     ; preds = %land.lhs.true183
  %75 = load %struct.rtx_def*, %struct.rtx_def** %decl_rtl, align 8, !dbg !8570
  %u191 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %75, i32 0, i32 1, !dbg !8570
  %fld192 = bitcast %union.u* %u191 to [1 x %union.rtunion_def]*, !dbg !8570
  %arrayidx193 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld192, i64 0, i64 1, !dbg !8570
  %rt_mem194 = bitcast %union.rtunion_def* %arrayidx193 to %struct.mem_attrs**, !dbg !8570
  %76 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem194, align 8, !dbg !8570
  %size195 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %76, i32 0, i32 2, !dbg !8570
  %77 = load %struct.rtx_def*, %struct.rtx_def** %size195, align 8, !dbg !8570
  br label %cond.end214, !dbg !8570

cond.false196:                                    ; preds = %land.lhs.true183
  %78 = load %struct.rtx_def*, %struct.rtx_def** %decl_rtl, align 8, !dbg !8570
  %79 = bitcast %struct.rtx_def* %78 to i32*, !dbg !8570
  %bf.load197 = load i32, i32* %79, align 8, !dbg !8570
  %bf.lshr198 = lshr i32 %bf.load197, 16, !dbg !8570
  %bf.clear199 = and i32 %bf.lshr198, 255, !dbg !8570
  %cmp200 = icmp ne i32 %bf.clear199, 1, !dbg !8570
  br i1 %cmp200, label %cond.true202, label %cond.false211, !dbg !8570

cond.true202:                                     ; preds = %cond.false196
  %80 = load %struct.rtx_def*, %struct.rtx_def** %decl_rtl, align 8, !dbg !8570
  %81 = bitcast %struct.rtx_def* %80 to i32*, !dbg !8570
  %bf.load203 = load i32, i32* %81, align 8, !dbg !8570
  %bf.lshr204 = lshr i32 %bf.load203, 16, !dbg !8570
  %bf.clear205 = and i32 %bf.lshr204, 255, !dbg !8570
  %idxprom206 = zext i32 %bf.clear205 to i64, !dbg !8570
  %arrayidx207 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom206, !dbg !8570
  %82 = load i8, i8* %arrayidx207, align 1, !dbg !8570
  %conv208 = zext i8 %82 to i16, !dbg !8570
  %conv209 = zext i16 %conv208 to i64, !dbg !8570
  %call210 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv209), !dbg !8570
  br label %cond.end212, !dbg !8570

cond.false211:                                    ; preds = %cond.false196
  br label %cond.end212, !dbg !8570

cond.end212:                                      ; preds = %cond.false211, %cond.true202
  %cond213 = phi %struct.rtx_def* [ %call210, %cond.true202 ], [ null, %cond.false211 ], !dbg !8570
  br label %cond.end214, !dbg !8570

cond.end214:                                      ; preds = %cond.end212, %cond.true190
  %cond215 = phi %struct.rtx_def* [ %77, %cond.true190 ], [ %cond213, %cond.end212 ], !dbg !8570
  %u216 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond215, i32 0, i32 1, !dbg !8570
  %hwint = bitcast %union.u* %u216 to [1 x i64]*, !dbg !8570
  %arrayidx217 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 0, !dbg !8570
  %83 = load i64, i64* %arrayidx217, align 8, !dbg !8570
  %cmp218 = icmp sgt i64 %83, 16, !dbg !8571
  br i1 %cmp218, label %if.then220, label %if.end221, !dbg !8572

if.then220:                                       ; preds = %cond.end214
  store i8 0, i8* %retval, align 1, !dbg !8573
  br label %return, !dbg !8573

if.end221:                                        ; preds = %cond.end214, %cond.false182, %cond.true172, %cond.true160
  br label %if.end222, !dbg !8574

if.end222:                                        ; preds = %if.end221, %land.lhs.true109, %if.end107
  %84 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8, !dbg !8575
  %base223 = bitcast %union.tree_node* %84 to %struct.tree_base*, !dbg !8575
  %85 = bitcast %struct.tree_base* %base223 to i64*, !dbg !8575
  %bf.load224 = load i64, i64* %85, align 8, !dbg !8576
  %bf.clear225 = and i64 %bf.load224, -1099511627777, !dbg !8576
  store i64 %bf.clear225, i64* %85, align 8, !dbg !8576
  %86 = load %union.tree_node*, %union.tree_node** %realdecl, align 8, !dbg !8577
  %base226 = bitcast %union.tree_node* %86 to %struct.tree_base*, !dbg !8577
  %87 = bitcast %struct.tree_base* %base226 to i64*, !dbg !8577
  %bf.load227 = load i64, i64* %87, align 8, !dbg !8578
  %bf.clear228 = and i64 %bf.load227, -1099511627777, !dbg !8578
  store i64 %bf.clear228, i64* %87, align 8, !dbg !8578
  store i8 1, i8* %retval, align 1, !dbg !8579
  br label %return, !dbg !8579

return:                                           ; preds = %if.end222, %if.then220, %if.then153, %if.then106, %if.then93, %if.then85, %if.then76, %if.then58, %if.then27, %if.then21, %land.end
  %88 = load i8, i8* %retval, align 1, !dbg !8580
  ret i8 %88, !dbg !8580
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @track_loc_p(%struct.rtx_def* %loc, %union.tree_node* %expr, i64 %offset, i8 zeroext %store_reg_p, i32* %mode_out, i64* %offset_out) #0 !dbg !8581 {
entry:
  %retval = alloca i8, align 1
  %loc.addr = alloca %struct.rtx_def*, align 8
  %expr.addr = alloca %union.tree_node*, align 8
  %offset.addr = alloca i64, align 8
  %store_reg_p.addr = alloca i8, align 1
  %mode_out.addr = alloca i32*, align 8
  %offset_out.addr = alloca i64*, align 8
  %mode = alloca i32, align 4
  %pseudo_mode = alloca i32, align 4
  store %struct.rtx_def* %loc, %struct.rtx_def** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %loc.addr, metadata !8584, metadata !DIExpression()), !dbg !8585
  store %union.tree_node* %expr, %union.tree_node** %expr.addr, align 8
  call void @llvm.dbg.declare(metadata %union.tree_node** %expr.addr, metadata !8586, metadata !DIExpression()), !dbg !8587
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !8588, metadata !DIExpression()), !dbg !8589
  store i8 %store_reg_p, i8* %store_reg_p.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %store_reg_p.addr, metadata !8590, metadata !DIExpression()), !dbg !8591
  store i32* %mode_out, i32** %mode_out.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %mode_out.addr, metadata !8592, metadata !DIExpression()), !dbg !8593
  store i64* %offset_out, i64** %offset_out.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %offset_out.addr, metadata !8594, metadata !DIExpression()), !dbg !8595
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !8596, metadata !DIExpression()), !dbg !8597
  %0 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8, !dbg !8598
  %cmp = icmp eq %union.tree_node* %0, null, !dbg !8600
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !8601

lor.lhs.false:                                    ; preds = %entry
  %1 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8, !dbg !8602
  %call = call zeroext i8 @track_expr_p(%union.tree_node* %1, i8 zeroext 1), !dbg !8603
  %tobool = icmp ne i8 %call, 0, !dbg !8603
  br i1 %tobool, label %if.end, label %if.then, !dbg !8604

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i8 0, i8* %retval, align 1, !dbg !8605
  br label %return, !dbg !8605

if.end:                                           ; preds = %lor.lhs.false
  %2 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8606
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !8606
  %bf.load = load i32, i32* %3, align 8, !dbg !8606
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !8606
  %bf.clear = and i32 %bf.lshr, 255, !dbg !8606
  store i32 %bf.clear, i32* %mode, align 4, !dbg !8607
  %4 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8608
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !8608
  %bf.load1 = load i32, i32* %5, align 8, !dbg !8608
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !8608
  %cmp3 = icmp eq i32 %bf.clear2, 37, !dbg !8608
  br i1 %cmp3, label %land.lhs.true, label %if.end27, !dbg !8610

land.lhs.true:                                    ; preds = %if.end
  %6 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8611
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1, !dbg !8611
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !8611
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 1, !dbg !8611
  %rt_uint = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !8611
  %7 = load i32, i32* %rt_uint, align 8, !dbg !8611
  %cmp4 = icmp ult i32 %7, 53, !dbg !8611
  br i1 %cmp4, label %if.end27, label %if.then5, !dbg !8612

if.then5:                                         ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %pseudo_mode, metadata !8613, metadata !DIExpression()), !dbg !8615
  %8 = load %struct.rtx_def**, %struct.rtx_def*** @regno_reg_rtx, align 8, !dbg !8616
  %9 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8616
  %u6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1, !dbg !8616
  %fld7 = bitcast %union.u* %u6 to [1 x %union.rtunion_def]*, !dbg !8616
  %arrayidx8 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld7, i64 0, i64 1, !dbg !8616
  %rt_uint9 = bitcast %union.rtunion_def* %arrayidx8 to i32*, !dbg !8616
  %10 = load i32, i32* %rt_uint9, align 8, !dbg !8616
  %idxprom = zext i32 %10 to i64, !dbg !8616
  %arrayidx10 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %8, i64 %idxprom, !dbg !8616
  %11 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx10, align 8, !dbg !8616
  %12 = bitcast %struct.rtx_def* %11 to i32*, !dbg !8616
  %bf.load11 = load i32, i32* %12, align 8, !dbg !8616
  %bf.lshr12 = lshr i32 %bf.load11, 16, !dbg !8616
  %bf.clear13 = and i32 %bf.lshr12, 255, !dbg !8616
  store i32 %bf.clear13, i32* %pseudo_mode, align 4, !dbg !8617
  %13 = load i32, i32* %mode, align 4, !dbg !8618
  %idxprom14 = zext i32 %13 to i64, !dbg !8618
  %arrayidx15 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom14, !dbg !8618
  %14 = load i8, i8* %arrayidx15, align 1, !dbg !8618
  %conv = zext i8 %14 to i16, !dbg !8618
  %conv16 = zext i16 %conv to i32, !dbg !8618
  %15 = load i32, i32* %pseudo_mode, align 4, !dbg !8620
  %idxprom17 = zext i32 %15 to i64, !dbg !8620
  %arrayidx18 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom17, !dbg !8620
  %16 = load i8, i8* %arrayidx18, align 1, !dbg !8620
  %conv19 = zext i8 %16 to i16, !dbg !8620
  %conv20 = zext i16 %conv19 to i32, !dbg !8620
  %cmp21 = icmp sgt i32 %conv16, %conv20, !dbg !8621
  br i1 %cmp21, label %if.then23, label %if.end26, !dbg !8622

if.then23:                                        ; preds = %if.then5
  %17 = load i32, i32* %pseudo_mode, align 4, !dbg !8623
  %18 = load i32, i32* %mode, align 4, !dbg !8625
  %call24 = call i32 @byte_lowpart_offset(i32 %17, i32 %18), !dbg !8626
  %conv25 = sext i32 %call24 to i64, !dbg !8626
  %19 = load i64, i64* %offset.addr, align 8, !dbg !8627
  %add = add nsw i64 %19, %conv25, !dbg !8627
  store i64 %add, i64* %offset.addr, align 8, !dbg !8627
  %20 = load i32, i32* %pseudo_mode, align 4, !dbg !8628
  store i32 %20, i32* %mode, align 4, !dbg !8629
  br label %if.end26, !dbg !8630

if.end26:                                         ; preds = %if.then23, %if.then5
  br label %if.end27, !dbg !8631

if.end27:                                         ; preds = %if.end26, %land.lhs.true, %if.end
  %21 = load i32, i32* %mode, align 4, !dbg !8632
  %idxprom28 = zext i32 %21 to i64, !dbg !8632
  %arrayidx29 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom28, !dbg !8632
  %22 = load i8, i8* %arrayidx29, align 1, !dbg !8632
  %conv30 = zext i8 %22 to i16, !dbg !8632
  %conv31 = zext i16 %conv30 to i32, !dbg !8632
  %23 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8, !dbg !8634
  %decl_common = bitcast %union.tree_node* %23 to %struct.tree_decl_common*, !dbg !8634
  %mode32 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %decl_common, i32 0, i32 2, !dbg !8634
  %24 = bitcast i40* %mode32 to i64*, !dbg !8634
  %bf.load33 = load i64, i64* %24, align 8, !dbg !8634
  %bf.clear34 = and i64 %bf.load33, 255, !dbg !8634
  %bf.cast = trunc i64 %bf.clear34 to i32, !dbg !8634
  %idxprom35 = zext i32 %bf.cast to i64, !dbg !8634
  %arrayidx36 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom35, !dbg !8634
  %25 = load i8, i8* %arrayidx36, align 1, !dbg !8634
  %conv37 = zext i8 %25 to i16, !dbg !8634
  %conv38 = zext i16 %conv37 to i32, !dbg !8634
  %cmp39 = icmp sgt i32 %conv31, %conv38, !dbg !8635
  br i1 %cmp39, label %land.lhs.true80, label %lor.lhs.false41, !dbg !8636

lor.lhs.false41:                                  ; preds = %if.end27
  %26 = load i8, i8* %store_reg_p.addr, align 1, !dbg !8637
  %conv42 = zext i8 %26 to i32, !dbg !8637
  %tobool43 = icmp ne i32 %conv42, 0, !dbg !8637
  br i1 %tobool43, label %land.lhs.true44, label %if.end97, !dbg !8638

land.lhs.true44:                                  ; preds = %lor.lhs.false41
  %27 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8, !dbg !8639
  %decl_common45 = bitcast %union.tree_node* %27 to %struct.tree_decl_common*, !dbg !8639
  %mode46 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %decl_common45, i32 0, i32 2, !dbg !8639
  %28 = bitcast i40* %mode46 to i64*, !dbg !8639
  %bf.load47 = load i64, i64* %28, align 8, !dbg !8639
  %bf.clear48 = and i64 %bf.load47, 255, !dbg !8639
  %bf.cast49 = trunc i64 %bf.clear48 to i32, !dbg !8639
  %idxprom50 = zext i32 %bf.cast49 to i64, !dbg !8639
  %arrayidx51 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom50, !dbg !8639
  %29 = load i8, i8* %arrayidx51, align 1, !dbg !8639
  %conv52 = zext i8 %29 to i32, !dbg !8639
  %cmp53 = icmp eq i32 %conv52, 10, !dbg !8639
  br i1 %cmp53, label %if.end97, label %lor.lhs.false55, !dbg !8639

lor.lhs.false55:                                  ; preds = %land.lhs.true44
  %30 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8, !dbg !8639
  %decl_common56 = bitcast %union.tree_node* %30 to %struct.tree_decl_common*, !dbg !8639
  %mode57 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %decl_common56, i32 0, i32 2, !dbg !8639
  %31 = bitcast i40* %mode57 to i64*, !dbg !8639
  %bf.load58 = load i64, i64* %31, align 8, !dbg !8639
  %bf.clear59 = and i64 %bf.load58, 255, !dbg !8639
  %bf.cast60 = trunc i64 %bf.clear59 to i32, !dbg !8639
  %idxprom61 = zext i32 %bf.cast60 to i64, !dbg !8639
  %arrayidx62 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom61, !dbg !8639
  %32 = load i8, i8* %arrayidx62, align 1, !dbg !8639
  %conv63 = zext i8 %32 to i32, !dbg !8639
  %cmp64 = icmp eq i32 %conv63, 11, !dbg !8639
  br i1 %cmp64, label %if.end97, label %land.lhs.true66, !dbg !8640

land.lhs.true66:                                  ; preds = %lor.lhs.false55
  %33 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8641
  %call67 = call i32 @rhs_regno(%struct.rtx_def* %33), !dbg !8641
  %idxprom68 = zext i32 %call67 to i64, !dbg !8642
  %arrayidx69 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom68, !dbg !8642
  %34 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8, !dbg !8643
  %decl_common70 = bitcast %union.tree_node* %34 to %struct.tree_decl_common*, !dbg !8643
  %mode71 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %decl_common70, i32 0, i32 2, !dbg !8643
  %35 = bitcast i40* %mode71 to i64*, !dbg !8643
  %bf.load72 = load i64, i64* %35, align 8, !dbg !8643
  %bf.clear73 = and i64 %bf.load72, 255, !dbg !8643
  %bf.cast74 = trunc i64 %bf.clear73 to i32, !dbg !8643
  %idxprom75 = zext i32 %bf.cast74 to i64, !dbg !8642
  %arrayidx76 = getelementptr inbounds [87 x i8], [87 x i8]* %arrayidx69, i64 0, i64 %idxprom75, !dbg !8642
  %36 = load i8, i8* %arrayidx76, align 1, !dbg !8642
  %conv77 = zext i8 %36 to i32, !dbg !8642
  %cmp78 = icmp eq i32 %conv77, 1, !dbg !8644
  br i1 %cmp78, label %land.lhs.true80, label %if.end97, !dbg !8645

land.lhs.true80:                                  ; preds = %land.lhs.true66, %if.end27
  %37 = load i64, i64* %offset.addr, align 8, !dbg !8646
  %38 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8, !dbg !8647
  %decl_common81 = bitcast %union.tree_node* %38 to %struct.tree_decl_common*, !dbg !8647
  %mode82 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %decl_common81, i32 0, i32 2, !dbg !8647
  %39 = bitcast i40* %mode82 to i64*, !dbg !8647
  %bf.load83 = load i64, i64* %39, align 8, !dbg !8647
  %bf.clear84 = and i64 %bf.load83, 255, !dbg !8647
  %bf.cast85 = trunc i64 %bf.clear84 to i32, !dbg !8647
  %40 = load i32, i32* %mode, align 4, !dbg !8648
  %call86 = call i32 @byte_lowpart_offset(i32 %bf.cast85, i32 %40), !dbg !8649
  %conv87 = sext i32 %call86 to i64, !dbg !8649
  %add88 = add nsw i64 %37, %conv87, !dbg !8650
  %cmp89 = icmp eq i64 %add88, 0, !dbg !8651
  br i1 %cmp89, label %if.then91, label %if.end97, !dbg !8652

if.then91:                                        ; preds = %land.lhs.true80
  %41 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8, !dbg !8653
  %decl_common92 = bitcast %union.tree_node* %41 to %struct.tree_decl_common*, !dbg !8653
  %mode93 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %decl_common92, i32 0, i32 2, !dbg !8653
  %42 = bitcast i40* %mode93 to i64*, !dbg !8653
  %bf.load94 = load i64, i64* %42, align 8, !dbg !8653
  %bf.clear95 = and i64 %bf.load94, 255, !dbg !8653
  %bf.cast96 = trunc i64 %bf.clear95 to i32, !dbg !8653
  store i32 %bf.cast96, i32* %mode, align 4, !dbg !8655
  store i64 0, i64* %offset.addr, align 8, !dbg !8656
  br label %if.end97, !dbg !8657

if.end97:                                         ; preds = %if.then91, %land.lhs.true80, %land.lhs.true66, %lor.lhs.false55, %land.lhs.true44, %lor.lhs.false41
  %43 = load i64, i64* %offset.addr, align 8, !dbg !8658
  %cmp98 = icmp slt i64 %43, 0, !dbg !8660
  br i1 %cmp98, label %if.then103, label %lor.lhs.false100, !dbg !8661

lor.lhs.false100:                                 ; preds = %if.end97
  %44 = load i64, i64* %offset.addr, align 8, !dbg !8662
  %cmp101 = icmp sge i64 %44, 16, !dbg !8663
  br i1 %cmp101, label %if.then103, label %if.end104, !dbg !8664

if.then103:                                       ; preds = %lor.lhs.false100, %if.end97
  store i8 0, i8* %retval, align 1, !dbg !8665
  br label %return, !dbg !8665

if.end104:                                        ; preds = %lor.lhs.false100
  %45 = load i32*, i32** %mode_out.addr, align 8, !dbg !8666
  %tobool105 = icmp ne i32* %45, null, !dbg !8666
  br i1 %tobool105, label %if.then106, label %if.end107, !dbg !8668

if.then106:                                       ; preds = %if.end104
  %46 = load i32, i32* %mode, align 4, !dbg !8669
  %47 = load i32*, i32** %mode_out.addr, align 8, !dbg !8670
  store i32 %46, i32* %47, align 4, !dbg !8671
  br label %if.end107, !dbg !8672

if.end107:                                        ; preds = %if.then106, %if.end104
  %48 = load i64*, i64** %offset_out.addr, align 8, !dbg !8673
  %tobool108 = icmp ne i64* %48, null, !dbg !8673
  br i1 %tobool108, label %if.then109, label %if.end110, !dbg !8675

if.then109:                                       ; preds = %if.end107
  %49 = load i64, i64* %offset.addr, align 8, !dbg !8676
  %50 = load i64*, i64** %offset_out.addr, align 8, !dbg !8677
  store i64 %49, i64* %50, align 8, !dbg !8678
  br label %if.end110, !dbg !8679

if.end110:                                        ; preds = %if.then109, %if.end107
  store i8 1, i8* %retval, align 1, !dbg !8680
  br label %return, !dbg !8680

return:                                           ; preds = %if.end110, %if.then103, %if.then
  %51 = load i8, i8* %retval, align 1, !dbg !8681
  ret i8 %51, !dbg !8681
}

declare dso_local void @make_decl_rtl(%union.tree_node*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @contains_symbol_ref(%struct.rtx_def* %x) #0 !dbg !8682 {
entry:
  %retval = alloca i8, align 1
  %x.addr = alloca %struct.rtx_def*, align 8
  %fmt = alloca i8*, align 8
  %code = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !8683, metadata !DIExpression()), !dbg !8684
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !8685, metadata !DIExpression()), !dbg !8686
  call void @llvm.dbg.declare(metadata i32* %code, metadata !8687, metadata !DIExpression()), !dbg !8688
  call void @llvm.dbg.declare(metadata i32* %i, metadata !8689, metadata !DIExpression()), !dbg !8690
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8691
  %tobool = icmp ne %struct.rtx_def* %0, null, !dbg !8691
  br i1 %tobool, label %if.end, label %if.then, !dbg !8693

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !8694
  br label %return, !dbg !8694

if.end:                                           ; preds = %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8695
  %2 = bitcast %struct.rtx_def* %1 to i32*, !dbg !8695
  %bf.load = load i32, i32* %2, align 8, !dbg !8695
  %bf.clear = and i32 %bf.load, 65535, !dbg !8695
  store i32 %bf.clear, i32* %code, align 4, !dbg !8696
  %3 = load i32, i32* %code, align 4, !dbg !8697
  %cmp = icmp eq i32 %3, 45, !dbg !8699
  br i1 %cmp, label %if.then1, label %if.end2, !dbg !8700

if.then1:                                         ; preds = %if.end
  store i8 1, i8* %retval, align 1, !dbg !8701
  br label %return, !dbg !8701

if.end2:                                          ; preds = %if.end
  %4 = load i32, i32* %code, align 4, !dbg !8702
  %idxprom = sext i32 %4 to i64, !dbg !8702
  %arrayidx = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom, !dbg !8702
  %5 = load i8*, i8** %arrayidx, align 8, !dbg !8702
  store i8* %5, i8** %fmt, align 8, !dbg !8703
  %6 = load i32, i32* %code, align 4, !dbg !8704
  %idxprom3 = sext i32 %6 to i64, !dbg !8704
  %arrayidx4 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom3, !dbg !8704
  %7 = load i8, i8* %arrayidx4, align 1, !dbg !8704
  %conv = zext i8 %7 to i32, !dbg !8704
  %sub = sub nsw i32 %conv, 1, !dbg !8706
  store i32 %sub, i32* %i, align 4, !dbg !8707
  br label %for.cond, !dbg !8708

for.cond:                                         ; preds = %for.inc45, %if.end2
  %8 = load i32, i32* %i, align 4, !dbg !8709
  %cmp5 = icmp sge i32 %8, 0, !dbg !8711
  br i1 %cmp5, label %for.body, label %for.end46, !dbg !8712

for.body:                                         ; preds = %for.cond
  %9 = load i8*, i8** %fmt, align 8, !dbg !8713
  %10 = load i32, i32* %i, align 4, !dbg !8716
  %idxprom7 = sext i32 %10 to i64, !dbg !8713
  %arrayidx8 = getelementptr inbounds i8, i8* %9, i64 %idxprom7, !dbg !8713
  %11 = load i8, i8* %arrayidx8, align 1, !dbg !8713
  %conv9 = sext i8 %11 to i32, !dbg !8713
  %cmp10 = icmp eq i32 %conv9, 101, !dbg !8717
  br i1 %cmp10, label %if.then12, label %if.else, !dbg !8718

if.then12:                                        ; preds = %for.body
  %12 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8719
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1, !dbg !8719
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !8719
  %13 = load i32, i32* %i, align 4, !dbg !8719
  %idxprom13 = sext i32 %13 to i64, !dbg !8719
  %arrayidx14 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 %idxprom13, !dbg !8719
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx14 to %struct.rtx_def**, !dbg !8719
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !8719
  %call = call zeroext i8 @contains_symbol_ref(%struct.rtx_def* %14), !dbg !8722
  %tobool15 = icmp ne i8 %call, 0, !dbg !8722
  br i1 %tobool15, label %if.then16, label %if.end17, !dbg !8723

if.then16:                                        ; preds = %if.then12
  store i8 1, i8* %retval, align 1, !dbg !8724
  br label %return, !dbg !8724

if.end17:                                         ; preds = %if.then12
  br label %if.end44, !dbg !8725

if.else:                                          ; preds = %for.body
  %15 = load i8*, i8** %fmt, align 8, !dbg !8726
  %16 = load i32, i32* %i, align 4, !dbg !8728
  %idxprom18 = sext i32 %16 to i64, !dbg !8726
  %arrayidx19 = getelementptr inbounds i8, i8* %15, i64 %idxprom18, !dbg !8726
  %17 = load i8, i8* %arrayidx19, align 1, !dbg !8726
  %conv20 = sext i8 %17 to i32, !dbg !8726
  %cmp21 = icmp eq i32 %conv20, 69, !dbg !8729
  br i1 %cmp21, label %if.then23, label %if.end43, !dbg !8730

if.then23:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %j, metadata !8731, metadata !DIExpression()), !dbg !8733
  store i32 0, i32* %j, align 4, !dbg !8734
  br label %for.cond24, !dbg !8736

for.cond24:                                       ; preds = %for.inc, %if.then23
  %18 = load i32, i32* %j, align 4, !dbg !8737
  %19 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8739
  %u25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1, !dbg !8739
  %fld26 = bitcast %union.u* %u25 to [1 x %union.rtunion_def]*, !dbg !8739
  %20 = load i32, i32* %i, align 4, !dbg !8739
  %idxprom27 = sext i32 %20 to i64, !dbg !8739
  %arrayidx28 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld26, i64 0, i64 %idxprom27, !dbg !8739
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx28 to %struct.rtvec_def**, !dbg !8739
  %21 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !8739
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %21, i32 0, i32 0, !dbg !8739
  %22 = load i32, i32* %num_elem, align 8, !dbg !8739
  %cmp29 = icmp slt i32 %18, %22, !dbg !8740
  br i1 %cmp29, label %for.body31, label %for.end, !dbg !8741

for.body31:                                       ; preds = %for.cond24
  %23 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !8742
  %u32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1, !dbg !8742
  %fld33 = bitcast %union.u* %u32 to [1 x %union.rtunion_def]*, !dbg !8742
  %24 = load i32, i32* %i, align 4, !dbg !8742
  %idxprom34 = sext i32 %24 to i64, !dbg !8742
  %arrayidx35 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld33, i64 0, i64 %idxprom34, !dbg !8742
  %rt_rtvec36 = bitcast %union.rtunion_def* %arrayidx35 to %struct.rtvec_def**, !dbg !8742
  %25 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec36, align 8, !dbg !8742
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %25, i32 0, i32 1, !dbg !8742
  %26 = load i32, i32* %j, align 4, !dbg !8742
  %idxprom37 = sext i32 %26 to i64, !dbg !8742
  %arrayidx38 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom37, !dbg !8742
  %27 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx38, align 8, !dbg !8742
  %call39 = call zeroext i8 @contains_symbol_ref(%struct.rtx_def* %27), !dbg !8744
  %tobool40 = icmp ne i8 %call39, 0, !dbg !8744
  br i1 %tobool40, label %if.then41, label %if.end42, !dbg !8745

if.then41:                                        ; preds = %for.body31
  store i8 1, i8* %retval, align 1, !dbg !8746
  br label %return, !dbg !8746

if.end42:                                         ; preds = %for.body31
  br label %for.inc, !dbg !8747

for.inc:                                          ; preds = %if.end42
  %28 = load i32, i32* %j, align 4, !dbg !8748
  %inc = add nsw i32 %28, 1, !dbg !8748
  store i32 %inc, i32* %j, align 4, !dbg !8748
  br label %for.cond24, !dbg !8749, !llvm.loop !8750

for.end:                                          ; preds = %for.cond24
  br label %if.end43, !dbg !8752

if.end43:                                         ; preds = %for.end, %if.else
  br label %if.end44

if.end44:                                         ; preds = %if.end43, %if.end17
  br label %for.inc45, !dbg !8753

for.inc45:                                        ; preds = %if.end44
  %29 = load i32, i32* %i, align 4, !dbg !8754
  %dec = add nsw i32 %29, -1, !dbg !8754
  store i32 %dec, i32* %i, align 4, !dbg !8754
  br label %for.cond, !dbg !8755, !llvm.loop !8756

for.end46:                                        ; preds = %for.cond
  store i8 0, i8* %retval, align 1, !dbg !8758
  br label %return, !dbg !8758

return:                                           ; preds = %for.end46, %if.then41, %if.then16, %if.then1, %if.then
  %30 = load i8, i8* %retval, align 1, !dbg !8759
  ret i8 %30, !dbg !8759
}

declare dso_local %struct.rtx_def* @gen_rtx_CONST_INT(i32, i64) #2

declare dso_local i32 @byte_lowpart_offset(i32, i32) #2

declare dso_local %struct.rtx_def* @adjust_address_1(%struct.rtx_def*, i32, i64, i32, i32) #2

declare dso_local i32 @subreg_lowpart_offset(i32, i32) #2

declare dso_local i32 @subreg_regno_offset(i32, i32, i32, i32) #2

declare dso_local %struct.rtx_def* @gen_rtx_REG_offset(%struct.rtx_def*, i32, i32, i32) #2

declare dso_local %struct.rtx_def* @replace_equiv_address_nv(%struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @same_variable_part_p(%struct.rtx_def* %loc, %union.tree_node* %expr, i64 %offset) #0 !dbg !8760 {
entry:
  %retval = alloca i8, align 1
  %loc.addr = alloca %struct.rtx_def*, align 8
  %expr.addr = alloca %union.tree_node*, align 8
  %offset.addr = alloca i64, align 8
  %expr2 = alloca %union.tree_node*, align 8
  %offset2 = alloca i64, align 8
  store %struct.rtx_def* %loc, %struct.rtx_def** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %loc.addr, metadata !8763, metadata !DIExpression()), !dbg !8764
  store %union.tree_node* %expr, %union.tree_node** %expr.addr, align 8
  call void @llvm.dbg.declare(metadata %union.tree_node** %expr.addr, metadata !8765, metadata !DIExpression()), !dbg !8766
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !8767, metadata !DIExpression()), !dbg !8768
  call void @llvm.dbg.declare(metadata %union.tree_node** %expr2, metadata !8769, metadata !DIExpression()), !dbg !8770
  call void @llvm.dbg.declare(metadata i64* %offset2, metadata !8771, metadata !DIExpression()), !dbg !8772
  %0 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8, !dbg !8773
  %base = bitcast %union.tree_node* %0 to %struct.tree_base*, !dbg !8773
  %1 = bitcast %struct.tree_base* %base to i64*, !dbg !8773
  %bf.load = load i64, i64* %1, align 8, !dbg !8773
  %bf.clear = and i64 %bf.load, 65535, !dbg !8773
  %bf.cast = trunc i64 %bf.clear to i32, !dbg !8773
  %idxprom = sext i32 %bf.cast to i64, !dbg !8773
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %idxprom, !dbg !8773
  %2 = load i32, i32* %arrayidx, align 4, !dbg !8773
  %cmp = icmp eq i32 %2, 3, !dbg !8773
  br i1 %cmp, label %if.end, label %if.then, !dbg !8775

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !8776
  br label %return, !dbg !8776

if.end:                                           ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8777
  %4 = bitcast %struct.rtx_def* %3 to i32*, !dbg !8777
  %bf.load1 = load i32, i32* %4, align 8, !dbg !8777
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !8777
  %cmp3 = icmp eq i32 %bf.clear2, 37, !dbg !8777
  br i1 %cmp3, label %if.then4, label %if.else, !dbg !8779

if.then4:                                         ; preds = %if.end
  %5 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8780
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1, !dbg !8780
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !8780
  %arrayidx5 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 2, !dbg !8780
  %rt_reg = bitcast %union.rtunion_def* %arrayidx5 to %struct.reg_attrs**, !dbg !8780
  %6 = load %struct.reg_attrs*, %struct.reg_attrs** %rt_reg, align 8, !dbg !8780
  %cmp6 = icmp eq %struct.reg_attrs* %6, null, !dbg !8780
  br i1 %cmp6, label %cond.true, label %cond.false, !dbg !8780

cond.true:                                        ; preds = %if.then4
  br label %cond.end, !dbg !8780

cond.false:                                       ; preds = %if.then4
  %7 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8780
  %u7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1, !dbg !8780
  %fld8 = bitcast %union.u* %u7 to [1 x %union.rtunion_def]*, !dbg !8780
  %arrayidx9 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld8, i64 0, i64 2, !dbg !8780
  %rt_reg10 = bitcast %union.rtunion_def* %arrayidx9 to %struct.reg_attrs**, !dbg !8780
  %8 = load %struct.reg_attrs*, %struct.reg_attrs** %rt_reg10, align 8, !dbg !8780
  %decl = getelementptr inbounds %struct.reg_attrs, %struct.reg_attrs* %8, i32 0, i32 0, !dbg !8780
  %9 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !8780
  br label %cond.end, !dbg !8780

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %union.tree_node* [ null, %cond.true ], [ %9, %cond.false ], !dbg !8780
  store %union.tree_node* %cond, %union.tree_node** %expr2, align 8, !dbg !8782
  %10 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8783
  %u11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1, !dbg !8783
  %fld12 = bitcast %union.u* %u11 to [1 x %union.rtunion_def]*, !dbg !8783
  %arrayidx13 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld12, i64 0, i64 2, !dbg !8783
  %rt_reg14 = bitcast %union.rtunion_def* %arrayidx13 to %struct.reg_attrs**, !dbg !8783
  %11 = load %struct.reg_attrs*, %struct.reg_attrs** %rt_reg14, align 8, !dbg !8783
  %cmp15 = icmp eq %struct.reg_attrs* %11, null, !dbg !8783
  br i1 %cmp15, label %cond.true16, label %cond.false17, !dbg !8783

cond.true16:                                      ; preds = %cond.end
  br label %cond.end23, !dbg !8783

cond.false17:                                     ; preds = %cond.end
  %12 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8783
  %u18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1, !dbg !8783
  %fld19 = bitcast %union.u* %u18 to [1 x %union.rtunion_def]*, !dbg !8783
  %arrayidx20 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld19, i64 0, i64 2, !dbg !8783
  %rt_reg21 = bitcast %union.rtunion_def* %arrayidx20 to %struct.reg_attrs**, !dbg !8783
  %13 = load %struct.reg_attrs*, %struct.reg_attrs** %rt_reg21, align 8, !dbg !8783
  %offset22 = getelementptr inbounds %struct.reg_attrs, %struct.reg_attrs* %13, i32 0, i32 1, !dbg !8783
  %14 = load i64, i64* %offset22, align 8, !dbg !8783
  br label %cond.end23, !dbg !8783

cond.end23:                                       ; preds = %cond.false17, %cond.true16
  %cond24 = phi i64 [ 0, %cond.true16 ], [ %14, %cond.false17 ], !dbg !8783
  store i64 %cond24, i64* %offset2, align 8, !dbg !8784
  br label %if.end76, !dbg !8785

if.else:                                          ; preds = %if.end
  %15 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8786
  %16 = bitcast %struct.rtx_def* %15 to i32*, !dbg !8786
  %bf.load25 = load i32, i32* %16, align 8, !dbg !8786
  %bf.clear26 = and i32 %bf.load25, 65535, !dbg !8786
  %cmp27 = icmp eq i32 %bf.clear26, 43, !dbg !8786
  br i1 %cmp27, label %if.then28, label %if.else74, !dbg !8788

if.then28:                                        ; preds = %if.else
  %17 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8789
  %u29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1, !dbg !8789
  %fld30 = bitcast %union.u* %u29 to [1 x %union.rtunion_def]*, !dbg !8789
  %arrayidx31 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld30, i64 0, i64 1, !dbg !8789
  %rt_mem = bitcast %union.rtunion_def* %arrayidx31 to %struct.mem_attrs**, !dbg !8789
  %18 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !8789
  %cmp32 = icmp eq %struct.mem_attrs* %18, null, !dbg !8789
  br i1 %cmp32, label %cond.true33, label %cond.false34, !dbg !8789

cond.true33:                                      ; preds = %if.then28
  br label %cond.end40, !dbg !8789

cond.false34:                                     ; preds = %if.then28
  %19 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8789
  %u35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1, !dbg !8789
  %fld36 = bitcast %union.u* %u35 to [1 x %union.rtunion_def]*, !dbg !8789
  %arrayidx37 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld36, i64 0, i64 1, !dbg !8789
  %rt_mem38 = bitcast %union.rtunion_def* %arrayidx37 to %struct.mem_attrs**, !dbg !8789
  %20 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem38, align 8, !dbg !8789
  %expr39 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %20, i32 0, i32 0, !dbg !8789
  %21 = load %union.tree_node*, %union.tree_node** %expr39, align 8, !dbg !8789
  br label %cond.end40, !dbg !8789

cond.end40:                                       ; preds = %cond.false34, %cond.true33
  %cond41 = phi %union.tree_node* [ null, %cond.true33 ], [ %21, %cond.false34 ], !dbg !8789
  store %union.tree_node* %cond41, %union.tree_node** %expr2, align 8, !dbg !8791
  %22 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8792
  %u42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1, !dbg !8792
  %fld43 = bitcast %union.u* %u42 to [1 x %union.rtunion_def]*, !dbg !8792
  %arrayidx44 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld43, i64 0, i64 1, !dbg !8792
  %rt_mem45 = bitcast %union.rtunion_def* %arrayidx44 to %struct.mem_attrs**, !dbg !8792
  %23 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem45, align 8, !dbg !8792
  %cmp46 = icmp eq %struct.mem_attrs* %23, null, !dbg !8792
  br i1 %cmp46, label %cond.true47, label %cond.false48, !dbg !8792

cond.true47:                                      ; preds = %cond.end40
  br i1 false, label %cond.true54, label %cond.false71, !dbg !8792

cond.false48:                                     ; preds = %cond.end40
  %24 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8792
  %u49 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i32 0, i32 1, !dbg !8792
  %fld50 = bitcast %union.u* %u49 to [1 x %union.rtunion_def]*, !dbg !8792
  %arrayidx51 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld50, i64 0, i64 1, !dbg !8792
  %rt_mem52 = bitcast %union.rtunion_def* %arrayidx51 to %struct.mem_attrs**, !dbg !8792
  %25 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem52, align 8, !dbg !8792
  %offset53 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %25, i32 0, i32 1, !dbg !8792
  %26 = load %struct.rtx_def*, %struct.rtx_def** %offset53, align 8, !dbg !8792
  %tobool = icmp ne %struct.rtx_def* %26, null, !dbg !8792
  br i1 %tobool, label %cond.true54, label %cond.false71, !dbg !8792

cond.true54:                                      ; preds = %cond.false48, %cond.true47
  %27 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8792
  %u55 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1, !dbg !8792
  %fld56 = bitcast %union.u* %u55 to [1 x %union.rtunion_def]*, !dbg !8792
  %arrayidx57 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld56, i64 0, i64 1, !dbg !8792
  %rt_mem58 = bitcast %union.rtunion_def* %arrayidx57 to %struct.mem_attrs**, !dbg !8792
  %28 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem58, align 8, !dbg !8792
  %cmp59 = icmp eq %struct.mem_attrs* %28, null, !dbg !8792
  br i1 %cmp59, label %cond.true60, label %cond.false61, !dbg !8792

cond.true60:                                      ; preds = %cond.true54
  br label %cond.end67, !dbg !8792

cond.false61:                                     ; preds = %cond.true54
  %29 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !8792
  %u62 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1, !dbg !8792
  %fld63 = bitcast %union.u* %u62 to [1 x %union.rtunion_def]*, !dbg !8792
  %arrayidx64 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld63, i64 0, i64 1, !dbg !8792
  %rt_mem65 = bitcast %union.rtunion_def* %arrayidx64 to %struct.mem_attrs**, !dbg !8792
  %30 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem65, align 8, !dbg !8792
  %offset66 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %30, i32 0, i32 1, !dbg !8792
  %31 = load %struct.rtx_def*, %struct.rtx_def** %offset66, align 8, !dbg !8792
  br label %cond.end67, !dbg !8792

cond.end67:                                       ; preds = %cond.false61, %cond.true60
  %cond68 = phi %struct.rtx_def* [ null, %cond.true60 ], [ %31, %cond.false61 ], !dbg !8792
  %u69 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond68, i32 0, i32 1, !dbg !8792
  %hwint = bitcast %union.u* %u69 to [1 x i64]*, !dbg !8792
  %arrayidx70 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 0, !dbg !8792
  %32 = load i64, i64* %arrayidx70, align 8, !dbg !8792
  br label %cond.end72, !dbg !8792

cond.false71:                                     ; preds = %cond.false48, %cond.true47
  br label %cond.end72, !dbg !8792

cond.end72:                                       ; preds = %cond.false71, %cond.end67
  %cond73 = phi i64 [ %32, %cond.end67 ], [ 0, %cond.false71 ], !dbg !8792
  store i64 %cond73, i64* %offset2, align 8, !dbg !8793
  br label %if.end75, !dbg !8794

if.else74:                                        ; preds = %if.else
  store i8 0, i8* %retval, align 1, !dbg !8795
  br label %return, !dbg !8795

if.end75:                                         ; preds = %cond.end72
  br label %if.end76

if.end76:                                         ; preds = %if.end75, %cond.end23
  %33 = load %union.tree_node*, %union.tree_node** %expr2, align 8, !dbg !8796
  %tobool77 = icmp ne %union.tree_node* %33, null, !dbg !8796
  br i1 %tobool77, label %lor.lhs.false, label %if.then85, !dbg !8798

lor.lhs.false:                                    ; preds = %if.end76
  %34 = load %union.tree_node*, %union.tree_node** %expr2, align 8, !dbg !8799
  %base78 = bitcast %union.tree_node* %34 to %struct.tree_base*, !dbg !8799
  %35 = bitcast %struct.tree_base* %base78 to i64*, !dbg !8799
  %bf.load79 = load i64, i64* %35, align 8, !dbg !8799
  %bf.clear80 = and i64 %bf.load79, 65535, !dbg !8799
  %bf.cast81 = trunc i64 %bf.clear80 to i32, !dbg !8799
  %idxprom82 = sext i32 %bf.cast81 to i64, !dbg !8799
  %arrayidx83 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %idxprom82, !dbg !8799
  %36 = load i32, i32* %arrayidx83, align 4, !dbg !8799
  %cmp84 = icmp eq i32 %36, 3, !dbg !8799
  br i1 %cmp84, label %if.end86, label %if.then85, !dbg !8800

if.then85:                                        ; preds = %lor.lhs.false, %if.end76
  store i8 0, i8* %retval, align 1, !dbg !8801
  br label %return, !dbg !8801

if.end86:                                         ; preds = %lor.lhs.false
  %37 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8, !dbg !8802
  %call = call %union.tree_node* @var_debug_decl(%union.tree_node* %37), !dbg !8803
  store %union.tree_node* %call, %union.tree_node** %expr.addr, align 8, !dbg !8804
  %38 = load %union.tree_node*, %union.tree_node** %expr2, align 8, !dbg !8805
  %call87 = call %union.tree_node* @var_debug_decl(%union.tree_node* %38), !dbg !8806
  store %union.tree_node* %call87, %union.tree_node** %expr2, align 8, !dbg !8807
  %39 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8, !dbg !8808
  %40 = load %union.tree_node*, %union.tree_node** %expr2, align 8, !dbg !8809
  %cmp88 = icmp eq %union.tree_node* %39, %40, !dbg !8810
  br i1 %cmp88, label %land.rhs, label %land.end, !dbg !8811

land.rhs:                                         ; preds = %if.end86
  %41 = load i64, i64* %offset.addr, align 8, !dbg !8812
  %42 = load i64, i64* %offset2, align 8, !dbg !8813
  %cmp89 = icmp eq i64 %41, %42, !dbg !8814
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end86
  %43 = phi i1 [ false, %if.end86 ], [ %cmp89, %land.rhs ], !dbg !8815
  %land.ext = zext i1 %43 to i32, !dbg !8811
  %conv = trunc i32 %land.ext to i8, !dbg !8816
  store i8 %conv, i8* %retval, align 1, !dbg !8817
  br label %return, !dbg !8817

return:                                           ; preds = %land.end, %if.then85, %if.else74, %if.then
  %44 = load i8, i8* %retval, align 1, !dbg !8818
  ret i8 %44, !dbg !8818
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @reverse_op(%struct.rtx_def* %val, %struct.rtx_def* %expr) #0 !dbg !8819 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %val.addr = alloca %struct.rtx_def*, align 8
  %expr.addr = alloca %struct.rtx_def*, align 8
  %src = alloca %struct.rtx_def*, align 8
  %arg = alloca %struct.rtx_def*, align 8
  %ret = alloca %struct.rtx_def*, align 8
  %v = alloca %struct.cselib_val_struct*, align 8
  %code = alloca i32, align 4
  store %struct.rtx_def* %val, %struct.rtx_def** %val.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %val.addr, metadata !8822, metadata !DIExpression()), !dbg !8823
  store %struct.rtx_def* %expr, %struct.rtx_def** %expr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %expr.addr, metadata !8824, metadata !DIExpression()), !dbg !8825
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %src, metadata !8826, metadata !DIExpression()), !dbg !8827
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %arg, metadata !8828, metadata !DIExpression()), !dbg !8829
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %ret, metadata !8830, metadata !DIExpression()), !dbg !8831
  call void @llvm.dbg.declare(metadata %struct.cselib_val_struct** %v, metadata !8832, metadata !DIExpression()), !dbg !8833
  call void @llvm.dbg.declare(metadata i32* %code, metadata !8834, metadata !DIExpression()), !dbg !8835
  %0 = load %struct.rtx_def*, %struct.rtx_def** %expr.addr, align 8, !dbg !8836
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !8836
  %bf.load = load i32, i32* %1, align 8, !dbg !8836
  %bf.clear = and i32 %bf.load, 65535, !dbg !8836
  %cmp = icmp ne i32 %bf.clear, 23, !dbg !8838
  br i1 %cmp, label %if.then, label %if.end, !dbg !8839

if.then:                                          ; preds = %entry
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !8840
  br label %return, !dbg !8840

if.end:                                           ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %expr.addr, align 8, !dbg !8841
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1, !dbg !8841
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !8841
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !8841
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !8841
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !8841
  %4 = bitcast %struct.rtx_def* %3 to i32*, !dbg !8841
  %bf.load1 = load i32, i32* %4, align 8, !dbg !8841
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !8841
  %cmp3 = icmp eq i32 %bf.clear2, 37, !dbg !8841
  br i1 %cmp3, label %lor.lhs.false, label %if.then14, !dbg !8843

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct.rtx_def*, %struct.rtx_def** %val.addr, align 8, !dbg !8844
  %6 = bitcast %struct.rtx_def* %5 to i32*, !dbg !8844
  %bf.load4 = load i32, i32* %6, align 8, !dbg !8844
  %bf.lshr = lshr i32 %bf.load4, 16, !dbg !8844
  %bf.clear5 = and i32 %bf.lshr, 255, !dbg !8844
  %7 = load %struct.rtx_def*, %struct.rtx_def** %expr.addr, align 8, !dbg !8845
  %u6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1, !dbg !8845
  %fld7 = bitcast %union.u* %u6 to [1 x %union.rtunion_def]*, !dbg !8845
  %arrayidx8 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld7, i64 0, i64 0, !dbg !8845
  %rt_rtx9 = bitcast %union.rtunion_def* %arrayidx8 to %struct.rtx_def**, !dbg !8845
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx9, align 8, !dbg !8845
  %9 = bitcast %struct.rtx_def* %8 to i32*, !dbg !8845
  %bf.load10 = load i32, i32* %9, align 8, !dbg !8845
  %bf.lshr11 = lshr i32 %bf.load10, 16, !dbg !8845
  %bf.clear12 = and i32 %bf.lshr11, 255, !dbg !8845
  %cmp13 = icmp ne i32 %bf.clear5, %bf.clear12, !dbg !8846
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !8847

if.then14:                                        ; preds = %lor.lhs.false, %if.end
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !8848
  br label %return, !dbg !8848

if.end15:                                         ; preds = %lor.lhs.false
  %10 = load %struct.rtx_def*, %struct.rtx_def** %expr.addr, align 8, !dbg !8849
  %u16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1, !dbg !8849
  %fld17 = bitcast %union.u* %u16 to [1 x %union.rtunion_def]*, !dbg !8849
  %arrayidx18 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld17, i64 0, i64 1, !dbg !8849
  %rt_rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**, !dbg !8849
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx19, align 8, !dbg !8849
  store %struct.rtx_def* %11, %struct.rtx_def** %src, align 8, !dbg !8850
  %12 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8, !dbg !8851
  %13 = bitcast %struct.rtx_def* %12 to i32*, !dbg !8851
  %bf.load20 = load i32, i32* %13, align 8, !dbg !8851
  %bf.clear21 = and i32 %bf.load20, 65535, !dbg !8851
  switch i32 %bf.clear21, label %sw.default [
    i32 49, label %sw.bb
    i32 50, label %sw.bb
    i32 63, label %sw.bb
    i32 64, label %sw.bb
    i32 51, label %sw.bb
    i32 98, label %sw.bb
    i32 99, label %sw.bb
  ], !dbg !8852

sw.bb:                                            ; preds = %if.end15, %if.end15, %if.end15, %if.end15, %if.end15, %if.end15, %if.end15
  br label %sw.epilog, !dbg !8853

sw.default:                                       ; preds = %if.end15
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !8855
  br label %return, !dbg !8855

sw.epilog:                                        ; preds = %sw.bb
  %14 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8, !dbg !8856
  %u22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1, !dbg !8856
  %fld23 = bitcast %union.u* %u22 to [1 x %union.rtunion_def]*, !dbg !8856
  %arrayidx24 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld23, i64 0, i64 0, !dbg !8856
  %rt_rtx25 = bitcast %union.rtunion_def* %arrayidx24 to %struct.rtx_def**, !dbg !8856
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx25, align 8, !dbg !8856
  %16 = bitcast %struct.rtx_def* %15 to i32*, !dbg !8856
  %bf.load26 = load i32, i32* %16, align 8, !dbg !8856
  %bf.clear27 = and i32 %bf.load26, 65535, !dbg !8856
  %cmp28 = icmp eq i32 %bf.clear27, 37, !dbg !8856
  br i1 %cmp28, label %lor.lhs.false29, label %if.then45, !dbg !8858

lor.lhs.false29:                                  ; preds = %sw.epilog
  %17 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8, !dbg !8859
  %18 = bitcast %struct.rtx_def* %17 to i32*, !dbg !8859
  %bf.load30 = load i32, i32* %18, align 8, !dbg !8859
  %bf.lshr31 = lshr i32 %bf.load30, 16, !dbg !8859
  %bf.clear32 = and i32 %bf.lshr31, 255, !dbg !8859
  %idxprom = zext i32 %bf.clear32 to i64, !dbg !8859
  %arrayidx33 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !8859
  %19 = load i8, i8* %arrayidx33, align 1, !dbg !8859
  %conv = zext i8 %19 to i32, !dbg !8859
  %cmp34 = icmp eq i32 %conv, 2, !dbg !8859
  br i1 %cmp34, label %if.end46, label %lor.lhs.false36, !dbg !8859

lor.lhs.false36:                                  ; preds = %lor.lhs.false29
  %20 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8, !dbg !8859
  %21 = bitcast %struct.rtx_def* %20 to i32*, !dbg !8859
  %bf.load37 = load i32, i32* %21, align 8, !dbg !8859
  %bf.lshr38 = lshr i32 %bf.load37, 16, !dbg !8859
  %bf.clear39 = and i32 %bf.lshr38, 255, !dbg !8859
  %idxprom40 = zext i32 %bf.clear39 to i64, !dbg !8859
  %arrayidx41 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom40, !dbg !8859
  %22 = load i8, i8* %arrayidx41, align 1, !dbg !8859
  %conv42 = zext i8 %22 to i32, !dbg !8859
  %cmp43 = icmp eq i32 %conv42, 3, !dbg !8859
  br i1 %cmp43, label %if.end46, label %if.then45, !dbg !8860

if.then45:                                        ; preds = %lor.lhs.false36, %sw.epilog
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !8861
  br label %return, !dbg !8861

if.end46:                                         ; preds = %lor.lhs.false36, %lor.lhs.false29
  %23 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8, !dbg !8862
  %u47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1, !dbg !8862
  %fld48 = bitcast %union.u* %u47 to [1 x %union.rtunion_def]*, !dbg !8862
  %arrayidx49 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld48, i64 0, i64 0, !dbg !8862
  %rt_rtx50 = bitcast %union.rtunion_def* %arrayidx49 to %struct.rtx_def**, !dbg !8862
  %24 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx50, align 8, !dbg !8862
  %25 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8, !dbg !8863
  %u51 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i32 0, i32 1, !dbg !8863
  %fld52 = bitcast %union.u* %u51 to [1 x %union.rtunion_def]*, !dbg !8863
  %arrayidx53 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld52, i64 0, i64 0, !dbg !8863
  %rt_rtx54 = bitcast %union.rtunion_def* %arrayidx53 to %struct.rtx_def**, !dbg !8863
  %26 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx54, align 8, !dbg !8863
  %27 = bitcast %struct.rtx_def* %26 to i32*, !dbg !8863
  %bf.load55 = load i32, i32* %27, align 8, !dbg !8863
  %bf.lshr56 = lshr i32 %bf.load55, 16, !dbg !8863
  %bf.clear57 = and i32 %bf.lshr56, 255, !dbg !8863
  %call = call %struct.cselib_val_struct* @cselib_lookup(%struct.rtx_def* %24, i32 %bf.clear57, i32 0), !dbg !8864
  store %struct.cselib_val_struct* %call, %struct.cselib_val_struct** %v, align 8, !dbg !8865
  %28 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %v, align 8, !dbg !8866
  %tobool = icmp ne %struct.cselib_val_struct* %28, null, !dbg !8866
  br i1 %tobool, label %lor.lhs.false58, label %if.then61, !dbg !8868

lor.lhs.false58:                                  ; preds = %if.end46
  %29 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %v, align 8, !dbg !8869
  %call59 = call zeroext i8 @cselib_preserved_value_p(%struct.cselib_val_struct* %29), !dbg !8870
  %tobool60 = icmp ne i8 %call59, 0, !dbg !8870
  br i1 %tobool60, label %if.end62, label %if.then61, !dbg !8871

if.then61:                                        ; preds = %lor.lhs.false58, %if.end46
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !8872
  br label %return, !dbg !8872

if.end62:                                         ; preds = %lor.lhs.false58
  %30 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8, !dbg !8873
  %31 = bitcast %struct.rtx_def* %30 to i32*, !dbg !8873
  %bf.load63 = load i32, i32* %31, align 8, !dbg !8873
  %bf.clear64 = and i32 %bf.load63, 65535, !dbg !8873
  switch i32 %bf.clear64, label %sw.default144 [
    i32 64, label %sw.bb65
    i32 51, label %sw.bb65
    i32 98, label %sw.bb82
    i32 99, label %sw.bb82
    i32 63, label %sw.bb88
    i32 49, label %sw.bb89
    i32 50, label %sw.bb90
  ], !dbg !8874

sw.bb65:                                          ; preds = %if.end62, %if.end62
  %32 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %v, align 8, !dbg !8875
  %val_rtx = getelementptr inbounds %struct.cselib_val_struct, %struct.cselib_val_struct* %32, i32 0, i32 2, !dbg !8875
  %33 = load %struct.rtx_def*, %struct.rtx_def** %val_rtx, align 8, !dbg !8875
  %34 = bitcast %struct.rtx_def* %33 to i32*, !dbg !8875
  %bf.load66 = load i32, i32* %34, align 8, !dbg !8875
  %bf.lshr67 = lshr i32 %bf.load66, 16, !dbg !8875
  %bf.clear68 = and i32 %bf.lshr67, 255, !dbg !8875
  %35 = load %struct.rtx_def*, %struct.rtx_def** %val.addr, align 8, !dbg !8878
  %36 = bitcast %struct.rtx_def* %35 to i32*, !dbg !8878
  %bf.load69 = load i32, i32* %36, align 8, !dbg !8878
  %bf.lshr70 = lshr i32 %bf.load69, 16, !dbg !8878
  %bf.clear71 = and i32 %bf.lshr70, 255, !dbg !8878
  %cmp72 = icmp ne i32 %bf.clear68, %bf.clear71, !dbg !8879
  br i1 %cmp72, label %if.then74, label %if.end75, !dbg !8880

if.then74:                                        ; preds = %sw.bb65
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !8881
  br label %return, !dbg !8881

if.end75:                                         ; preds = %sw.bb65
  %37 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8, !dbg !8882
  %38 = bitcast %struct.rtx_def* %37 to i32*, !dbg !8882
  %bf.load76 = load i32, i32* %38, align 8, !dbg !8882
  %bf.clear77 = and i32 %bf.load76, 65535, !dbg !8882
  %39 = load %struct.rtx_def*, %struct.rtx_def** %val.addr, align 8, !dbg !8882
  %40 = bitcast %struct.rtx_def* %39 to i32*, !dbg !8882
  %bf.load78 = load i32, i32* %40, align 8, !dbg !8882
  %bf.lshr79 = lshr i32 %bf.load78, 16, !dbg !8882
  %bf.clear80 = and i32 %bf.lshr79, 255, !dbg !8882
  %41 = load %struct.rtx_def*, %struct.rtx_def** %val.addr, align 8, !dbg !8882
  %call81 = call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 %bf.clear77, i32 %bf.clear80, %struct.rtx_def* %41), !dbg !8882
  store %struct.rtx_def* %call81, %struct.rtx_def** %ret, align 8, !dbg !8883
  br label %sw.epilog145, !dbg !8884

sw.bb82:                                          ; preds = %if.end62, %if.end62
  %42 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %v, align 8, !dbg !8885
  %val_rtx83 = getelementptr inbounds %struct.cselib_val_struct, %struct.cselib_val_struct* %42, i32 0, i32 2, !dbg !8885
  %43 = load %struct.rtx_def*, %struct.rtx_def** %val_rtx83, align 8, !dbg !8885
  %44 = bitcast %struct.rtx_def* %43 to i32*, !dbg !8885
  %bf.load84 = load i32, i32* %44, align 8, !dbg !8885
  %bf.lshr85 = lshr i32 %bf.load84, 16, !dbg !8885
  %bf.clear86 = and i32 %bf.lshr85, 255, !dbg !8885
  %45 = load %struct.rtx_def*, %struct.rtx_def** %val.addr, align 8, !dbg !8886
  %call87 = call %struct.rtx_def* @gen_lowpart_SUBREG(i32 %bf.clear86, %struct.rtx_def* %45), !dbg !8887
  store %struct.rtx_def* %call87, %struct.rtx_def** %ret, align 8, !dbg !8888
  br label %sw.epilog145, !dbg !8889

sw.bb88:                                          ; preds = %if.end62
  store i32 63, i32* %code, align 4, !dbg !8890
  br label %binary, !dbg !8891

sw.bb89:                                          ; preds = %if.end62
  store i32 50, i32* %code, align 4, !dbg !8892
  br label %binary, !dbg !8893

sw.bb90:                                          ; preds = %if.end62
  store i32 49, i32* %code, align 4, !dbg !8894
  br label %binary, !dbg !8895

binary:                                           ; preds = %sw.bb90, %sw.bb89, %sw.bb88
  call void @llvm.dbg.label(metadata !8896), !dbg !8897
  %46 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %v, align 8, !dbg !8898
  %val_rtx91 = getelementptr inbounds %struct.cselib_val_struct, %struct.cselib_val_struct* %46, i32 0, i32 2, !dbg !8898
  %47 = load %struct.rtx_def*, %struct.rtx_def** %val_rtx91, align 8, !dbg !8898
  %48 = bitcast %struct.rtx_def* %47 to i32*, !dbg !8898
  %bf.load92 = load i32, i32* %48, align 8, !dbg !8898
  %bf.lshr93 = lshr i32 %bf.load92, 16, !dbg !8898
  %bf.clear94 = and i32 %bf.lshr93, 255, !dbg !8898
  %49 = load %struct.rtx_def*, %struct.rtx_def** %val.addr, align 8, !dbg !8900
  %50 = bitcast %struct.rtx_def* %49 to i32*, !dbg !8900
  %bf.load95 = load i32, i32* %50, align 8, !dbg !8900
  %bf.lshr96 = lshr i32 %bf.load95, 16, !dbg !8900
  %bf.clear97 = and i32 %bf.lshr96, 255, !dbg !8900
  %cmp98 = icmp ne i32 %bf.clear94, %bf.clear97, !dbg !8901
  br i1 %cmp98, label %if.then100, label %if.end101, !dbg !8902

if.then100:                                       ; preds = %binary
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !8903
  br label %return, !dbg !8903

if.end101:                                        ; preds = %binary
  %51 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8, !dbg !8904
  %u102 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %51, i32 0, i32 1, !dbg !8904
  %fld103 = bitcast %union.u* %u102 to [1 x %union.rtunion_def]*, !dbg !8904
  %arrayidx104 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld103, i64 0, i64 1, !dbg !8904
  %rt_rtx105 = bitcast %union.rtunion_def* %arrayidx104 to %struct.rtx_def**, !dbg !8904
  %52 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx105, align 8, !dbg !8904
  store %struct.rtx_def* %52, %struct.rtx_def** %arg, align 8, !dbg !8905
  %53 = load %struct.rtx_def*, %struct.rtx_def** %arg, align 8, !dbg !8906
  %54 = bitcast %struct.rtx_def* %53 to i32*, !dbg !8906
  %bf.load106 = load i32, i32* %54, align 8, !dbg !8906
  %bf.clear107 = and i32 %bf.load106, 65535, !dbg !8906
  %cmp108 = icmp eq i32 %bf.clear107, 30, !dbg !8906
  br i1 %cmp108, label %if.end131, label %land.lhs.true, !dbg !8908

land.lhs.true:                                    ; preds = %if.end101
  %55 = load %struct.rtx_def*, %struct.rtx_def** %arg, align 8, !dbg !8909
  %56 = bitcast %struct.rtx_def* %55 to i32*, !dbg !8909
  %bf.load110 = load i32, i32* %56, align 8, !dbg !8909
  %bf.clear111 = and i32 %bf.load110, 65535, !dbg !8909
  %cmp112 = icmp ne i32 %bf.clear111, 45, !dbg !8910
  br i1 %cmp112, label %if.then114, label %if.end131, !dbg !8911

if.then114:                                       ; preds = %land.lhs.true
  %57 = load %struct.rtx_def*, %struct.rtx_def** %arg, align 8, !dbg !8912
  %58 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @scratch_regs, align 8, !dbg !8914
  %call115 = call %struct.rtx_def* @cselib_expand_value_rtx(%struct.rtx_def* %57, %struct.bitmap_head_def* %58, i32 5), !dbg !8915
  store %struct.rtx_def* %call115, %struct.rtx_def** %arg, align 8, !dbg !8916
  %59 = load %struct.rtx_def*, %struct.rtx_def** %arg, align 8, !dbg !8917
  %cmp116 = icmp eq %struct.rtx_def* %59, null, !dbg !8919
  br i1 %cmp116, label %if.then118, label %if.end119, !dbg !8920

if.then118:                                       ; preds = %if.then114
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !8921
  br label %return, !dbg !8921

if.end119:                                        ; preds = %if.then114
  %60 = load %struct.rtx_def*, %struct.rtx_def** %arg, align 8, !dbg !8922
  %61 = bitcast %struct.rtx_def* %60 to i32*, !dbg !8922
  %bf.load120 = load i32, i32* %61, align 8, !dbg !8922
  %bf.clear121 = and i32 %bf.load120, 65535, !dbg !8922
  %cmp122 = icmp eq i32 %bf.clear121, 30, !dbg !8922
  br i1 %cmp122, label %if.end130, label %land.lhs.true124, !dbg !8924

land.lhs.true124:                                 ; preds = %if.end119
  %62 = load %struct.rtx_def*, %struct.rtx_def** %arg, align 8, !dbg !8925
  %63 = bitcast %struct.rtx_def* %62 to i32*, !dbg !8925
  %bf.load125 = load i32, i32* %63, align 8, !dbg !8925
  %bf.clear126 = and i32 %bf.load125, 65535, !dbg !8925
  %cmp127 = icmp ne i32 %bf.clear126, 45, !dbg !8926
  br i1 %cmp127, label %if.then129, label %if.end130, !dbg !8927

if.then129:                                       ; preds = %land.lhs.true124
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !8928
  br label %return, !dbg !8928

if.end130:                                        ; preds = %land.lhs.true124, %if.end119
  br label %if.end131, !dbg !8929

if.end131:                                        ; preds = %if.end130, %land.lhs.true, %if.end101
  %64 = load i32, i32* %code, align 4, !dbg !8930
  %65 = load %struct.rtx_def*, %struct.rtx_def** %val.addr, align 8, !dbg !8931
  %66 = bitcast %struct.rtx_def* %65 to i32*, !dbg !8931
  %bf.load132 = load i32, i32* %66, align 8, !dbg !8931
  %bf.lshr133 = lshr i32 %bf.load132, 16, !dbg !8931
  %bf.clear134 = and i32 %bf.lshr133, 255, !dbg !8931
  %67 = load %struct.rtx_def*, %struct.rtx_def** %val.addr, align 8, !dbg !8932
  %68 = load %struct.rtx_def*, %struct.rtx_def** %arg, align 8, !dbg !8933
  %call135 = call %struct.rtx_def* @simplify_gen_binary(i32 %64, i32 %bf.clear134, %struct.rtx_def* %67, %struct.rtx_def* %68), !dbg !8934
  store %struct.rtx_def* %call135, %struct.rtx_def** %ret, align 8, !dbg !8935
  %69 = load %struct.rtx_def*, %struct.rtx_def** %ret, align 8, !dbg !8936
  %70 = load %struct.rtx_def*, %struct.rtx_def** %val.addr, align 8, !dbg !8938
  %cmp136 = icmp eq %struct.rtx_def* %69, %70, !dbg !8939
  br i1 %cmp136, label %if.then138, label %if.end143, !dbg !8940

if.then138:                                       ; preds = %if.end131
  %71 = load %struct.rtx_def*, %struct.rtx_def** %val.addr, align 8, !dbg !8941
  %72 = bitcast %struct.rtx_def* %71 to i32*, !dbg !8941
  %bf.load139 = load i32, i32* %72, align 8, !dbg !8941
  %bf.lshr140 = lshr i32 %bf.load139, 16, !dbg !8941
  %bf.clear141 = and i32 %bf.lshr140, 255, !dbg !8941
  %73 = load %struct.rtx_def*, %struct.rtx_def** %val.addr, align 8, !dbg !8941
  %74 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !8941
  %call142 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 49, i32 %bf.clear141, %struct.rtx_def* %73, %struct.rtx_def* %74), !dbg !8941
  store %struct.rtx_def* %call142, %struct.rtx_def** %ret, align 8, !dbg !8942
  br label %if.end143, !dbg !8943

if.end143:                                        ; preds = %if.then138, %if.end131
  br label %sw.epilog145, !dbg !8944

sw.default144:                                    ; preds = %if.end62
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 5196, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !8945
  br label %sw.epilog145, !dbg !8946

sw.epilog145:                                     ; preds = %sw.default144, %if.end143, %sw.bb82, %if.end75
  %75 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %v, align 8, !dbg !8947
  %val_rtx146 = getelementptr inbounds %struct.cselib_val_struct, %struct.cselib_val_struct* %75, i32 0, i32 2, !dbg !8947
  %76 = load %struct.rtx_def*, %struct.rtx_def** %val_rtx146, align 8, !dbg !8947
  %77 = bitcast %struct.rtx_def* %76 to i32*, !dbg !8947
  %bf.load147 = load i32, i32* %77, align 8, !dbg !8947
  %bf.lshr148 = lshr i32 %bf.load147, 16, !dbg !8947
  %bf.clear149 = and i32 %bf.lshr148, 255, !dbg !8947
  %78 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %v, align 8, !dbg !8947
  %val_rtx150 = getelementptr inbounds %struct.cselib_val_struct, %struct.cselib_val_struct* %78, i32 0, i32 2, !dbg !8947
  %79 = load %struct.rtx_def*, %struct.rtx_def** %val_rtx150, align 8, !dbg !8947
  %80 = load %struct.rtx_def*, %struct.rtx_def** %ret, align 8, !dbg !8947
  %call151 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 41, i32 %bf.clear149, %struct.rtx_def* %79, %struct.rtx_def* %80), !dbg !8947
  store %struct.rtx_def* %call151, %struct.rtx_def** %retval, align 8, !dbg !8948
  br label %return, !dbg !8948

return:                                           ; preds = %sw.epilog145, %if.then129, %if.then118, %if.then100, %if.then74, %if.then61, %if.then45, %sw.default, %if.then14, %if.then
  %81 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !8949
  ret %struct.rtx_def* %81, !dbg !8949
}

declare dso_local %struct.rtx_def* @gen_lowpart_SUBREG(i32, %struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @cselib_expand_value_rtx(%struct.rtx_def*, %struct.bitmap_head_def*, i32) #2

declare dso_local %struct.rtx_def* @simplify_gen_binary(i32, i32, %struct.rtx_def*, %struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @find_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @stack_adjust_offset_pre_post(%struct.rtx_def* %pattern, i64* %pre, i64* %post) #0 !dbg !8950 {
entry:
  %pattern.addr = alloca %struct.rtx_def*, align 8
  %pre.addr = alloca i64*, align 8
  %post.addr = alloca i64*, align 8
  %src = alloca %struct.rtx_def*, align 8
  %dest = alloca %struct.rtx_def*, align 8
  %code = alloca i32, align 4
  %val = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %pattern, %struct.rtx_def** %pattern.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %pattern.addr, metadata !8951, metadata !DIExpression()), !dbg !8952
  store i64* %pre, i64** %pre.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %pre.addr, metadata !8953, metadata !DIExpression()), !dbg !8954
  store i64* %post, i64** %post.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %post.addr, metadata !8955, metadata !DIExpression()), !dbg !8956
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %src, metadata !8957, metadata !DIExpression()), !dbg !8958
  %0 = load %struct.rtx_def*, %struct.rtx_def** %pattern.addr, align 8, !dbg !8959
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !8959
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !8959
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 1, !dbg !8959
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !8959
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !8959
  store %struct.rtx_def* %1, %struct.rtx_def** %src, align 8, !dbg !8958
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %dest, metadata !8960, metadata !DIExpression()), !dbg !8961
  %2 = load %struct.rtx_def*, %struct.rtx_def** %pattern.addr, align 8, !dbg !8962
  %u1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1, !dbg !8962
  %fld2 = bitcast %union.u* %u1 to [1 x %union.rtunion_def]*, !dbg !8962
  %arrayidx3 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2, i64 0, i64 0, !dbg !8962
  %rt_rtx4 = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**, !dbg !8962
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx4, align 8, !dbg !8962
  store %struct.rtx_def* %3, %struct.rtx_def** %dest, align 8, !dbg !8961
  call void @llvm.dbg.declare(metadata i32* %code, metadata !8963, metadata !DIExpression()), !dbg !8964
  %4 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !8965
  %5 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16, !dbg !8967
  %cmp = icmp eq %struct.rtx_def* %4, %5, !dbg !8968
  br i1 %cmp, label %if.then, label %if.else38, !dbg !8969

if.then:                                          ; preds = %entry
  %6 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8, !dbg !8970
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !8970
  %bf.load = load i32, i32* %7, align 8, !dbg !8970
  %bf.clear = and i32 %bf.load, 65535, !dbg !8970
  store i32 %bf.clear, i32* %code, align 4, !dbg !8972
  %8 = load i32, i32* %code, align 4, !dbg !8973
  %cmp5 = icmp eq i32 %8, 49, !dbg !8975
  br i1 %cmp5, label %lor.lhs.false7, label %lor.lhs.false, !dbg !8976

lor.lhs.false:                                    ; preds = %if.then
  %9 = load i32, i32* %code, align 4, !dbg !8977
  %cmp6 = icmp eq i32 %9, 50, !dbg !8978
  br i1 %cmp6, label %lor.lhs.false7, label %if.then21, !dbg !8979

lor.lhs.false7:                                   ; preds = %lor.lhs.false, %if.then
  %10 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8, !dbg !8980
  %u8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1, !dbg !8980
  %fld9 = bitcast %union.u* %u8 to [1 x %union.rtunion_def]*, !dbg !8980
  %arrayidx10 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld9, i64 0, i64 0, !dbg !8980
  %rt_rtx11 = bitcast %union.rtunion_def* %arrayidx10 to %struct.rtx_def**, !dbg !8980
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx11, align 8, !dbg !8980
  %12 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16, !dbg !8981
  %cmp12 = icmp ne %struct.rtx_def* %11, %12, !dbg !8982
  br i1 %cmp12, label %if.then21, label %lor.lhs.false13, !dbg !8983

lor.lhs.false13:                                  ; preds = %lor.lhs.false7
  %13 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8, !dbg !8984
  %u14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i32 0, i32 1, !dbg !8984
  %fld15 = bitcast %union.u* %u14 to [1 x %union.rtunion_def]*, !dbg !8984
  %arrayidx16 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld15, i64 0, i64 1, !dbg !8984
  %rt_rtx17 = bitcast %union.rtunion_def* %arrayidx16 to %struct.rtx_def**, !dbg !8984
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx17, align 8, !dbg !8984
  %15 = bitcast %struct.rtx_def* %14 to i32*, !dbg !8984
  %bf.load18 = load i32, i32* %15, align 8, !dbg !8984
  %bf.clear19 = and i32 %bf.load18, 65535, !dbg !8984
  %cmp20 = icmp eq i32 %bf.clear19, 30, !dbg !8984
  br i1 %cmp20, label %if.end, label %if.then21, !dbg !8985

if.then21:                                        ; preds = %lor.lhs.false13, %lor.lhs.false7, %lor.lhs.false
  br label %if.end151, !dbg !8986

if.end:                                           ; preds = %lor.lhs.false13
  %16 = load i32, i32* %code, align 4, !dbg !8987
  %cmp22 = icmp eq i32 %16, 50, !dbg !8989
  br i1 %cmp22, label %if.then23, label %if.else, !dbg !8990

if.then23:                                        ; preds = %if.end
  %17 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8, !dbg !8991
  %u24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1, !dbg !8991
  %fld25 = bitcast %union.u* %u24 to [1 x %union.rtunion_def]*, !dbg !8991
  %arrayidx26 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld25, i64 0, i64 1, !dbg !8991
  %rt_rtx27 = bitcast %union.rtunion_def* %arrayidx26 to %struct.rtx_def**, !dbg !8991
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx27, align 8, !dbg !8991
  %u28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1, !dbg !8991
  %hwint = bitcast %union.u* %u28 to [1 x i64]*, !dbg !8991
  %arrayidx29 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 0, !dbg !8991
  %19 = load i64, i64* %arrayidx29, align 8, !dbg !8991
  %20 = load i64*, i64** %post.addr, align 8, !dbg !8992
  %21 = load i64, i64* %20, align 8, !dbg !8993
  %add = add nsw i64 %21, %19, !dbg !8993
  store i64 %add, i64* %20, align 8, !dbg !8993
  br label %if.end37, !dbg !8994

if.else:                                          ; preds = %if.end
  %22 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8, !dbg !8995
  %u30 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1, !dbg !8995
  %fld31 = bitcast %union.u* %u30 to [1 x %union.rtunion_def]*, !dbg !8995
  %arrayidx32 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld31, i64 0, i64 1, !dbg !8995
  %rt_rtx33 = bitcast %union.rtunion_def* %arrayidx32 to %struct.rtx_def**, !dbg !8995
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx33, align 8, !dbg !8995
  %u34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1, !dbg !8995
  %hwint35 = bitcast %union.u* %u34 to [1 x i64]*, !dbg !8995
  %arrayidx36 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint35, i64 0, i64 0, !dbg !8995
  %24 = load i64, i64* %arrayidx36, align 8, !dbg !8995
  %25 = load i64*, i64** %post.addr, align 8, !dbg !8996
  %26 = load i64, i64* %25, align 8, !dbg !8997
  %sub = sub nsw i64 %26, %24, !dbg !8997
  store i64 %sub, i64* %25, align 8, !dbg !8997
  br label %if.end37

if.end37:                                         ; preds = %if.else, %if.then23
  br label %if.end151, !dbg !8998

if.else38:                                        ; preds = %entry
  %27 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !8999
  %28 = bitcast %struct.rtx_def* %27 to i32*, !dbg !8999
  %bf.load39 = load i32, i32* %28, align 8, !dbg !8999
  %bf.clear40 = and i32 %bf.load39, 65535, !dbg !8999
  %cmp41 = icmp eq i32 %bf.clear40, 43, !dbg !8999
  br i1 %cmp41, label %if.then42, label %if.end150, !dbg !9001

if.then42:                                        ; preds = %if.else38
  %29 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !9002
  %u43 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1, !dbg !9002
  %fld44 = bitcast %union.u* %u43 to [1 x %union.rtunion_def]*, !dbg !9002
  %arrayidx45 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld44, i64 0, i64 0, !dbg !9002
  %rt_rtx46 = bitcast %union.rtunion_def* %arrayidx45 to %struct.rtx_def**, !dbg !9002
  %30 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx46, align 8, !dbg !9002
  store %struct.rtx_def* %30, %struct.rtx_def** %src, align 8, !dbg !9004
  %31 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8, !dbg !9005
  %32 = bitcast %struct.rtx_def* %31 to i32*, !dbg !9005
  %bf.load47 = load i32, i32* %32, align 8, !dbg !9005
  %bf.clear48 = and i32 %bf.load47, 65535, !dbg !9005
  store i32 %bf.clear48, i32* %code, align 4, !dbg !9006
  %33 = load i32, i32* %code, align 4, !dbg !9007
  switch i32 %33, label %sw.default [
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 74, label %sw.bb86
    i32 76, label %sw.bb99
    i32 75, label %sw.bb116
    i32 77, label %sw.bb133
  ], !dbg !9008

sw.bb:                                            ; preds = %if.then42, %if.then42
  %34 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8, !dbg !9009
  %u49 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1, !dbg !9009
  %fld50 = bitcast %union.u* %u49 to [1 x %union.rtunion_def]*, !dbg !9009
  %arrayidx51 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld50, i64 0, i64 0, !dbg !9009
  %rt_rtx52 = bitcast %union.rtunion_def* %arrayidx51 to %struct.rtx_def**, !dbg !9009
  %35 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx52, align 8, !dbg !9009
  %36 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16, !dbg !9012
  %cmp53 = icmp eq %struct.rtx_def* %35, %36, !dbg !9013
  br i1 %cmp53, label %if.then54, label %if.end85, !dbg !9014

if.then54:                                        ; preds = %sw.bb
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %val, metadata !9015, metadata !DIExpression()), !dbg !9017
  %37 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8, !dbg !9018
  %u55 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1, !dbg !9018
  %fld56 = bitcast %union.u* %u55 to [1 x %union.rtunion_def]*, !dbg !9018
  %arrayidx57 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld56, i64 0, i64 1, !dbg !9018
  %rt_rtx58 = bitcast %union.rtunion_def* %arrayidx57 to %struct.rtx_def**, !dbg !9018
  %38 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx58, align 8, !dbg !9018
  %u59 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %38, i32 0, i32 1, !dbg !9018
  %fld60 = bitcast %union.u* %u59 to [1 x %union.rtunion_def]*, !dbg !9018
  %arrayidx61 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld60, i64 0, i64 1, !dbg !9018
  %rt_rtx62 = bitcast %union.rtunion_def* %arrayidx61 to %struct.rtx_def**, !dbg !9018
  %39 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx62, align 8, !dbg !9018
  store %struct.rtx_def* %39, %struct.rtx_def** %val, align 8, !dbg !9017
  %40 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8, !dbg !9019
  %u63 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i32 0, i32 1, !dbg !9019
  %fld64 = bitcast %union.u* %u63 to [1 x %union.rtunion_def]*, !dbg !9019
  %arrayidx65 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld64, i64 0, i64 1, !dbg !9019
  %rt_rtx66 = bitcast %union.rtunion_def* %arrayidx65 to %struct.rtx_def**, !dbg !9019
  %41 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx66, align 8, !dbg !9019
  %42 = bitcast %struct.rtx_def* %41 to i32*, !dbg !9019
  %bf.load67 = load i32, i32* %42, align 8, !dbg !9019
  %bf.clear68 = and i32 %bf.load67, 65535, !dbg !9019
  %cmp69 = icmp eq i32 %bf.clear68, 49, !dbg !9019
  br i1 %cmp69, label %land.lhs.true, label %cond.true, !dbg !9019

land.lhs.true:                                    ; preds = %if.then54
  %43 = load %struct.rtx_def*, %struct.rtx_def** %val, align 8, !dbg !9019
  %44 = bitcast %struct.rtx_def* %43 to i32*, !dbg !9019
  %bf.load70 = load i32, i32* %44, align 8, !dbg !9019
  %bf.clear71 = and i32 %bf.load70, 65535, !dbg !9019
  %cmp72 = icmp eq i32 %bf.clear71, 30, !dbg !9019
  br i1 %cmp72, label %cond.false, label %cond.true, !dbg !9019

cond.true:                                        ; preds = %land.lhs.true, %if.then54
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 537, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !9019
  br label %cond.end, !dbg !9019

cond.false:                                       ; preds = %land.lhs.true
  br label %cond.end, !dbg !9019

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !9019
  %45 = load i32, i32* %code, align 4, !dbg !9020
  %cmp73 = icmp eq i32 %45, 78, !dbg !9022
  br i1 %cmp73, label %if.then74, label %if.else79, !dbg !9023

if.then74:                                        ; preds = %cond.end
  %46 = load %struct.rtx_def*, %struct.rtx_def** %val, align 8, !dbg !9024
  %u75 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %46, i32 0, i32 1, !dbg !9024
  %hwint76 = bitcast %union.u* %u75 to [1 x i64]*, !dbg !9024
  %arrayidx77 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint76, i64 0, i64 0, !dbg !9024
  %47 = load i64, i64* %arrayidx77, align 8, !dbg !9024
  %48 = load i64*, i64** %pre.addr, align 8, !dbg !9025
  %49 = load i64, i64* %48, align 8, !dbg !9026
  %sub78 = sub nsw i64 %49, %47, !dbg !9026
  store i64 %sub78, i64* %48, align 8, !dbg !9026
  br label %if.end84, !dbg !9027

if.else79:                                        ; preds = %cond.end
  %50 = load %struct.rtx_def*, %struct.rtx_def** %val, align 8, !dbg !9028
  %u80 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %50, i32 0, i32 1, !dbg !9028
  %hwint81 = bitcast %union.u* %u80 to [1 x i64]*, !dbg !9028
  %arrayidx82 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint81, i64 0, i64 0, !dbg !9028
  %51 = load i64, i64* %arrayidx82, align 8, !dbg !9028
  %52 = load i64*, i64** %post.addr, align 8, !dbg !9029
  %53 = load i64, i64* %52, align 8, !dbg !9030
  %sub83 = sub nsw i64 %53, %51, !dbg !9030
  store i64 %sub83, i64* %52, align 8, !dbg !9030
  br label %if.end84

if.end84:                                         ; preds = %if.else79, %if.then74
  br label %sw.epilog, !dbg !9031

if.end85:                                         ; preds = %sw.bb
  br label %if.end151, !dbg !9032

sw.bb86:                                          ; preds = %if.then42
  %54 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8, !dbg !9033
  %u87 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %54, i32 0, i32 1, !dbg !9033
  %fld88 = bitcast %union.u* %u87 to [1 x %union.rtunion_def]*, !dbg !9033
  %arrayidx89 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld88, i64 0, i64 0, !dbg !9033
  %rt_rtx90 = bitcast %union.rtunion_def* %arrayidx89 to %struct.rtx_def**, !dbg !9033
  %55 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx90, align 8, !dbg !9033
  %56 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16, !dbg !9035
  %cmp91 = icmp eq %struct.rtx_def* %55, %56, !dbg !9036
  br i1 %cmp91, label %if.then92, label %if.end98, !dbg !9037

if.then92:                                        ; preds = %sw.bb86
  %57 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !9038
  %58 = bitcast %struct.rtx_def* %57 to i32*, !dbg !9038
  %bf.load93 = load i32, i32* %58, align 8, !dbg !9038
  %bf.lshr = lshr i32 %bf.load93, 16, !dbg !9038
  %bf.clear94 = and i32 %bf.lshr, 255, !dbg !9038
  %idxprom = zext i32 %bf.clear94 to i64, !dbg !9038
  %arrayidx95 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !9038
  %59 = load i8, i8* %arrayidx95, align 1, !dbg !9038
  %conv = zext i8 %59 to i16, !dbg !9038
  %conv96 = zext i16 %conv to i64, !dbg !9038
  %60 = load i64*, i64** %pre.addr, align 8, !dbg !9040
  %61 = load i64, i64* %60, align 8, !dbg !9041
  %add97 = add nsw i64 %61, %conv96, !dbg !9041
  store i64 %add97, i64* %60, align 8, !dbg !9041
  br label %sw.epilog, !dbg !9042

if.end98:                                         ; preds = %sw.bb86
  br label %if.end151, !dbg !9043

sw.bb99:                                          ; preds = %if.then42
  %62 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8, !dbg !9044
  %u100 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %62, i32 0, i32 1, !dbg !9044
  %fld101 = bitcast %union.u* %u100 to [1 x %union.rtunion_def]*, !dbg !9044
  %arrayidx102 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld101, i64 0, i64 0, !dbg !9044
  %rt_rtx103 = bitcast %union.rtunion_def* %arrayidx102 to %struct.rtx_def**, !dbg !9044
  %63 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx103, align 8, !dbg !9044
  %64 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16, !dbg !9046
  %cmp104 = icmp eq %struct.rtx_def* %63, %64, !dbg !9047
  br i1 %cmp104, label %if.then106, label %if.end115, !dbg !9048

if.then106:                                       ; preds = %sw.bb99
  %65 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !9049
  %66 = bitcast %struct.rtx_def* %65 to i32*, !dbg !9049
  %bf.load107 = load i32, i32* %66, align 8, !dbg !9049
  %bf.lshr108 = lshr i32 %bf.load107, 16, !dbg !9049
  %bf.clear109 = and i32 %bf.lshr108, 255, !dbg !9049
  %idxprom110 = zext i32 %bf.clear109 to i64, !dbg !9049
  %arrayidx111 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom110, !dbg !9049
  %67 = load i8, i8* %arrayidx111, align 1, !dbg !9049
  %conv112 = zext i8 %67 to i16, !dbg !9049
  %conv113 = zext i16 %conv112 to i64, !dbg !9049
  %68 = load i64*, i64** %post.addr, align 8, !dbg !9051
  %69 = load i64, i64* %68, align 8, !dbg !9052
  %add114 = add nsw i64 %69, %conv113, !dbg !9052
  store i64 %add114, i64* %68, align 8, !dbg !9052
  br label %sw.epilog, !dbg !9053

if.end115:                                        ; preds = %sw.bb99
  br label %if.end151, !dbg !9054

sw.bb116:                                         ; preds = %if.then42
  %70 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8, !dbg !9055
  %u117 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %70, i32 0, i32 1, !dbg !9055
  %fld118 = bitcast %union.u* %u117 to [1 x %union.rtunion_def]*, !dbg !9055
  %arrayidx119 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld118, i64 0, i64 0, !dbg !9055
  %rt_rtx120 = bitcast %union.rtunion_def* %arrayidx119 to %struct.rtx_def**, !dbg !9055
  %71 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx120, align 8, !dbg !9055
  %72 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16, !dbg !9057
  %cmp121 = icmp eq %struct.rtx_def* %71, %72, !dbg !9058
  br i1 %cmp121, label %if.then123, label %if.end132, !dbg !9059

if.then123:                                       ; preds = %sw.bb116
  %73 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !9060
  %74 = bitcast %struct.rtx_def* %73 to i32*, !dbg !9060
  %bf.load124 = load i32, i32* %74, align 8, !dbg !9060
  %bf.lshr125 = lshr i32 %bf.load124, 16, !dbg !9060
  %bf.clear126 = and i32 %bf.lshr125, 255, !dbg !9060
  %idxprom127 = zext i32 %bf.clear126 to i64, !dbg !9060
  %arrayidx128 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom127, !dbg !9060
  %75 = load i8, i8* %arrayidx128, align 1, !dbg !9060
  %conv129 = zext i8 %75 to i16, !dbg !9060
  %conv130 = zext i16 %conv129 to i64, !dbg !9060
  %76 = load i64*, i64** %pre.addr, align 8, !dbg !9062
  %77 = load i64, i64* %76, align 8, !dbg !9063
  %sub131 = sub nsw i64 %77, %conv130, !dbg !9063
  store i64 %sub131, i64* %76, align 8, !dbg !9063
  br label %sw.epilog, !dbg !9064

if.end132:                                        ; preds = %sw.bb116
  br label %if.end151, !dbg !9065

sw.bb133:                                         ; preds = %if.then42
  %78 = load %struct.rtx_def*, %struct.rtx_def** %src, align 8, !dbg !9066
  %u134 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %78, i32 0, i32 1, !dbg !9066
  %fld135 = bitcast %union.u* %u134 to [1 x %union.rtunion_def]*, !dbg !9066
  %arrayidx136 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld135, i64 0, i64 0, !dbg !9066
  %rt_rtx137 = bitcast %union.rtunion_def* %arrayidx136 to %struct.rtx_def**, !dbg !9066
  %79 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx137, align 8, !dbg !9066
  %80 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16, !dbg !9068
  %cmp138 = icmp eq %struct.rtx_def* %79, %80, !dbg !9069
  br i1 %cmp138, label %if.then140, label %if.end149, !dbg !9070

if.then140:                                       ; preds = %sw.bb133
  %81 = load %struct.rtx_def*, %struct.rtx_def** %dest, align 8, !dbg !9071
  %82 = bitcast %struct.rtx_def* %81 to i32*, !dbg !9071
  %bf.load141 = load i32, i32* %82, align 8, !dbg !9071
  %bf.lshr142 = lshr i32 %bf.load141, 16, !dbg !9071
  %bf.clear143 = and i32 %bf.lshr142, 255, !dbg !9071
  %idxprom144 = zext i32 %bf.clear143 to i64, !dbg !9071
  %arrayidx145 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom144, !dbg !9071
  %83 = load i8, i8* %arrayidx145, align 1, !dbg !9071
  %conv146 = zext i8 %83 to i16, !dbg !9071
  %conv147 = zext i16 %conv146 to i64, !dbg !9071
  %84 = load i64*, i64** %post.addr, align 8, !dbg !9073
  %85 = load i64, i64* %84, align 8, !dbg !9074
  %sub148 = sub nsw i64 %85, %conv147, !dbg !9074
  store i64 %sub148, i64* %84, align 8, !dbg !9074
  br label %sw.epilog, !dbg !9075

if.end149:                                        ; preds = %sw.bb133
  br label %if.end151, !dbg !9076

sw.default:                                       ; preds = %if.then42
  br label %if.end151, !dbg !9077

sw.epilog:                                        ; preds = %if.then140, %if.then123, %if.then106, %if.then92, %if.end84
  br label %if.end150, !dbg !9078

if.end150:                                        ; preds = %sw.epilog, %if.else38
  br label %if.end151

if.end151:                                        ; preds = %if.then21, %if.end85, %if.end98, %if.end115, %if.end132, %if.end149, %sw.default, %if.end150, %if.end37
  ret void, !dbg !9079
}

declare dso_local void @print_inline_rtx(%struct._IO_FILE*, %struct.rtx_def*, i32) #2

declare dso_local i32 @fputc(i32, %struct._IO_FILE*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_micro_operation_heap_reserve(%struct.VEC_micro_operation_heap** %vec_, i32 %alloc_) #0 !dbg !9080 {
entry:
  %vec_.addr = alloca %struct.VEC_micro_operation_heap**, align 8
  %alloc_.addr = alloca i32, align 4
  %extend = alloca i32, align 4
  store %struct.VEC_micro_operation_heap** %vec_, %struct.VEC_micro_operation_heap*** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_micro_operation_heap*** %vec_.addr, metadata !9083, metadata !DIExpression()), !dbg !9084
  store i32 %alloc_, i32* %alloc_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %alloc_.addr, metadata !9085, metadata !DIExpression()), !dbg !9084
  call void @llvm.dbg.declare(metadata i32* %extend, metadata !9086, metadata !DIExpression()), !dbg !9084
  %0 = load %struct.VEC_micro_operation_heap**, %struct.VEC_micro_operation_heap*** %vec_.addr, align 8, !dbg !9084
  %1 = load %struct.VEC_micro_operation_heap*, %struct.VEC_micro_operation_heap** %0, align 8, !dbg !9084
  %tobool = icmp ne %struct.VEC_micro_operation_heap* %1, null, !dbg !9084
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9084

cond.true:                                        ; preds = %entry
  %2 = load %struct.VEC_micro_operation_heap**, %struct.VEC_micro_operation_heap*** %vec_.addr, align 8, !dbg !9084
  %3 = load %struct.VEC_micro_operation_heap*, %struct.VEC_micro_operation_heap** %2, align 8, !dbg !9084
  %base = getelementptr inbounds %struct.VEC_micro_operation_heap, %struct.VEC_micro_operation_heap* %3, i32 0, i32 0, !dbg !9084
  br label %cond.end, !dbg !9084

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9084

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_micro_operation_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !9084
  %4 = load i32, i32* %alloc_.addr, align 4, !dbg !9084
  %call = call i32 @VEC_micro_operation_base_space(%struct.VEC_micro_operation_base* %cond, i32 %4), !dbg !9084
  %tobool1 = icmp ne i32 %call, 0, !dbg !9084
  %lnot = xor i1 %tobool1, true, !dbg !9084
  %lnot.ext = zext i1 %lnot to i32, !dbg !9084
  store i32 %lnot.ext, i32* %extend, align 4, !dbg !9084
  %5 = load i32, i32* %extend, align 4, !dbg !9087
  %tobool2 = icmp ne i32 %5, 0, !dbg !9087
  br i1 %tobool2, label %if.then, label %if.end, !dbg !9084

if.then:                                          ; preds = %cond.end
  %6 = load %struct.VEC_micro_operation_heap**, %struct.VEC_micro_operation_heap*** %vec_.addr, align 8, !dbg !9087
  %7 = load %struct.VEC_micro_operation_heap*, %struct.VEC_micro_operation_heap** %6, align 8, !dbg !9087
  %8 = bitcast %struct.VEC_micro_operation_heap* %7 to i8*, !dbg !9087
  %9 = load i32, i32* %alloc_.addr, align 4, !dbg !9087
  %call3 = call i8* @vec_heap_o_reserve(i8* %8, i32 %9, i64 8, i64 24), !dbg !9087
  %10 = bitcast i8* %call3 to %struct.VEC_micro_operation_heap*, !dbg !9087
  %11 = load %struct.VEC_micro_operation_heap**, %struct.VEC_micro_operation_heap*** %vec_.addr, align 8, !dbg !9087
  store %struct.VEC_micro_operation_heap* %10, %struct.VEC_micro_operation_heap** %11, align 8, !dbg !9087
  br label %if.end, !dbg !9087

if.end:                                           ; preds = %if.then, %cond.end
  %12 = load i32, i32* %extend, align 4, !dbg !9084
  ret i32 %12, !dbg !9084
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.micro_operation_def* @VEC_micro_operation_base_quick_push(%struct.VEC_micro_operation_base* %vec_, %struct.micro_operation_def* %obj_) #0 !dbg !9089 {
entry:
  %vec_.addr = alloca %struct.VEC_micro_operation_base*, align 8
  %obj_.addr = alloca %struct.micro_operation_def*, align 8
  %slot_ = alloca %struct.micro_operation_def*, align 8
  store %struct.VEC_micro_operation_base* %vec_, %struct.VEC_micro_operation_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_micro_operation_base** %vec_.addr, metadata !9092, metadata !DIExpression()), !dbg !9093
  store %struct.micro_operation_def* %obj_, %struct.micro_operation_def** %obj_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.micro_operation_def** %obj_.addr, metadata !9094, metadata !DIExpression()), !dbg !9093
  call void @llvm.dbg.declare(metadata %struct.micro_operation_def** %slot_, metadata !9095, metadata !DIExpression()), !dbg !9093
  %0 = load %struct.VEC_micro_operation_base*, %struct.VEC_micro_operation_base** %vec_.addr, align 8, !dbg !9093
  %num = getelementptr inbounds %struct.VEC_micro_operation_base, %struct.VEC_micro_operation_base* %0, i32 0, i32 0, !dbg !9093
  %1 = load i32, i32* %num, align 8, !dbg !9093
  %2 = load %struct.VEC_micro_operation_base*, %struct.VEC_micro_operation_base** %vec_.addr, align 8, !dbg !9093
  %alloc = getelementptr inbounds %struct.VEC_micro_operation_base, %struct.VEC_micro_operation_base* %2, i32 0, i32 1, !dbg !9093
  %3 = load i32, i32* %alloc, align 4, !dbg !9093
  %cmp = icmp ult i32 %1, %3, !dbg !9093
  %conv = zext i1 %cmp to i32, !dbg !9093
  %4 = load %struct.VEC_micro_operation_base*, %struct.VEC_micro_operation_base** %vec_.addr, align 8, !dbg !9093
  %vec = getelementptr inbounds %struct.VEC_micro_operation_base, %struct.VEC_micro_operation_base* %4, i32 0, i32 2, !dbg !9093
  %5 = load %struct.VEC_micro_operation_base*, %struct.VEC_micro_operation_base** %vec_.addr, align 8, !dbg !9093
  %num1 = getelementptr inbounds %struct.VEC_micro_operation_base, %struct.VEC_micro_operation_base* %5, i32 0, i32 0, !dbg !9093
  %6 = load i32, i32* %num1, align 8, !dbg !9093
  %inc = add i32 %6, 1, !dbg !9093
  store i32 %inc, i32* %num1, align 8, !dbg !9093
  %idxprom = zext i32 %6 to i64, !dbg !9093
  %arrayidx = getelementptr inbounds [1 x %struct.micro_operation_def], [1 x %struct.micro_operation_def]* %vec, i64 0, i64 %idxprom, !dbg !9093
  store %struct.micro_operation_def* %arrayidx, %struct.micro_operation_def** %slot_, align 8, !dbg !9093
  %7 = load %struct.micro_operation_def*, %struct.micro_operation_def** %obj_.addr, align 8, !dbg !9096
  %tobool = icmp ne %struct.micro_operation_def* %7, null, !dbg !9096
  br i1 %tobool, label %if.then, label %if.end, !dbg !9093

if.then:                                          ; preds = %entry
  %8 = load %struct.micro_operation_def*, %struct.micro_operation_def** %slot_, align 8, !dbg !9096
  %9 = load %struct.micro_operation_def*, %struct.micro_operation_def** %obj_.addr, align 8, !dbg !9096
  %10 = bitcast %struct.micro_operation_def* %8 to i8*, !dbg !9096
  %11 = bitcast %struct.micro_operation_def* %9 to i8*, !dbg !9096
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %10, i8* align 8 %11, i64 24, i1 false), !dbg !9096
  br label %if.end, !dbg !9096

if.end:                                           ; preds = %if.then, %entry
  %12 = load %struct.micro_operation_def*, %struct.micro_operation_def** %slot_, align 8, !dbg !9093
  ret %struct.micro_operation_def* %12, !dbg !9093
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_micro_operation_base_space(%struct.VEC_micro_operation_base* %vec_, i32 %alloc_) #0 !dbg !9098 {
entry:
  %vec_.addr = alloca %struct.VEC_micro_operation_base*, align 8
  %alloc_.addr = alloca i32, align 4
  store %struct.VEC_micro_operation_base* %vec_, %struct.VEC_micro_operation_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_micro_operation_base** %vec_.addr, metadata !9101, metadata !DIExpression()), !dbg !9102
  store i32 %alloc_, i32* %alloc_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %alloc_.addr, metadata !9103, metadata !DIExpression()), !dbg !9102
  %0 = load i32, i32* %alloc_.addr, align 4, !dbg !9102
  %cmp = icmp sge i32 %0, 0, !dbg !9102
  %conv = zext i1 %cmp to i32, !dbg !9102
  %1 = load %struct.VEC_micro_operation_base*, %struct.VEC_micro_operation_base** %vec_.addr, align 8, !dbg !9102
  %tobool = icmp ne %struct.VEC_micro_operation_base* %1, null, !dbg !9102
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !9102

cond.true:                                        ; preds = %entry
  %2 = load %struct.VEC_micro_operation_base*, %struct.VEC_micro_operation_base** %vec_.addr, align 8, !dbg !9102
  %alloc = getelementptr inbounds %struct.VEC_micro_operation_base, %struct.VEC_micro_operation_base* %2, i32 0, i32 1, !dbg !9102
  %3 = load i32, i32* %alloc, align 4, !dbg !9102
  %4 = load %struct.VEC_micro_operation_base*, %struct.VEC_micro_operation_base** %vec_.addr, align 8, !dbg !9102
  %num = getelementptr inbounds %struct.VEC_micro_operation_base, %struct.VEC_micro_operation_base* %4, i32 0, i32 0, !dbg !9102
  %5 = load i32, i32* %num, align 8, !dbg !9102
  %sub = sub i32 %3, %5, !dbg !9102
  %6 = load i32, i32* %alloc_.addr, align 4, !dbg !9102
  %cmp1 = icmp uge i32 %sub, %6, !dbg !9102
  %conv2 = zext i1 %cmp1 to i32, !dbg !9102
  br label %cond.end, !dbg !9102

cond.false:                                       ; preds = %entry
  %7 = load i32, i32* %alloc_.addr, align 4, !dbg !9102
  %tobool3 = icmp ne i32 %7, 0, !dbg !9102
  %lnot = xor i1 %tobool3, true, !dbg !9102
  %lnot.ext = zext i1 %lnot to i32, !dbg !9102
  br label %cond.end, !dbg !9102

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv2, %cond.true ], [ %lnot.ext, %cond.false ], !dbg !9102
  ret i32 %cond, !dbg !9102
}

declare dso_local i8* @vec_heap_o_reserve(i8*, i32, i64, i64) #2

; Function Attrs: noinline nounwind uwtable
define internal void @adjust_mem_stores(%struct.rtx_def* %loc, %struct.rtx_def* %expr, i8* %data) #0 !dbg !9104 {
entry:
  %loc.addr = alloca %struct.rtx_def*, align 8
  %expr.addr = alloca %struct.rtx_def*, align 8
  %data.addr = alloca i8*, align 8
  %new_dest = alloca %struct.rtx_def*, align 8
  %xexpr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %loc, %struct.rtx_def** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %loc.addr, metadata !9105, metadata !DIExpression()), !dbg !9106
  store %struct.rtx_def* %expr, %struct.rtx_def** %expr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %expr.addr, metadata !9107, metadata !DIExpression()), !dbg !9108
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !9109, metadata !DIExpression()), !dbg !9110
  %0 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !9111
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !9111
  %bf.load = load i32, i32* %1, align 8, !dbg !9111
  %bf.clear = and i32 %bf.load, 65535, !dbg !9111
  %cmp = icmp eq i32 %bf.clear, 43, !dbg !9111
  br i1 %cmp, label %if.then, label %if.end12, !dbg !9113

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %new_dest, metadata !9114, metadata !DIExpression()), !dbg !9116
  %2 = load %struct.rtx_def*, %struct.rtx_def** %expr.addr, align 8, !dbg !9117
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1, !dbg !9117
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !9117
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !9117
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !9117
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !9117
  %4 = load i8*, i8** %data.addr, align 8, !dbg !9118
  %call = call %struct.rtx_def* @simplify_replace_fn_rtx(%struct.rtx_def* %3, %struct.rtx_def* null, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)* @adjust_mems, i8* %4), !dbg !9119
  store %struct.rtx_def* %call, %struct.rtx_def** %new_dest, align 8, !dbg !9116
  %5 = load %struct.rtx_def*, %struct.rtx_def** %new_dest, align 8, !dbg !9120
  %6 = load %struct.rtx_def*, %struct.rtx_def** %expr.addr, align 8, !dbg !9122
  %u1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1, !dbg !9122
  %fld2 = bitcast %union.u* %u1 to [1 x %union.rtunion_def]*, !dbg !9122
  %arrayidx3 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2, i64 0, i64 0, !dbg !9122
  %rt_rtx4 = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**, !dbg !9122
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx4, align 8, !dbg !9122
  %cmp5 = icmp ne %struct.rtx_def* %5, %7, !dbg !9123
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !9124

if.then6:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %xexpr, metadata !9125, metadata !DIExpression()), !dbg !9127
  %8 = load %struct.rtx_def*, %struct.rtx_def** %expr.addr, align 8, !dbg !9128
  store %struct.rtx_def* %8, %struct.rtx_def** %xexpr, align 8, !dbg !9127
  %9 = load %struct.rtx_def*, %struct.rtx_def** %xexpr, align 8, !dbg !9129
  %u7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1, !dbg !9129
  %fld8 = bitcast %union.u* %u7 to [1 x %union.rtunion_def]*, !dbg !9129
  %arrayidx9 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld8, i64 0, i64 0, !dbg !9129
  %rt_rtx10 = bitcast %union.rtunion_def* %arrayidx9 to %struct.rtx_def**, !dbg !9129
  %10 = load %struct.rtx_def*, %struct.rtx_def** %new_dest, align 8, !dbg !9130
  %call11 = call zeroext i8 @validate_change(%struct.rtx_def* null, %struct.rtx_def** %rt_rtx10, %struct.rtx_def* %10, i8 zeroext 1), !dbg !9131
  br label %if.end, !dbg !9132

if.end:                                           ; preds = %if.then6, %if.then
  br label %if.end12, !dbg !9133

if.end12:                                         ; preds = %if.end, %entry
  ret void, !dbg !9134
}

; Function Attrs: noinline nounwind uwtable
define internal void @adjust_mem_uses(%struct.rtx_def** %x, i8* %data) #0 !dbg !9135 {
entry:
  %x.addr = alloca %struct.rtx_def**, align 8
  %data.addr = alloca i8*, align 8
  %new_x = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def** %x, %struct.rtx_def*** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %x.addr, metadata !9136, metadata !DIExpression()), !dbg !9137
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !9138, metadata !DIExpression()), !dbg !9139
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %new_x, metadata !9140, metadata !DIExpression()), !dbg !9141
  %0 = load %struct.rtx_def**, %struct.rtx_def*** %x.addr, align 8, !dbg !9142
  %1 = load %struct.rtx_def*, %struct.rtx_def** %0, align 8, !dbg !9143
  %2 = load i8*, i8** %data.addr, align 8, !dbg !9144
  %call = call %struct.rtx_def* @simplify_replace_fn_rtx(%struct.rtx_def* %1, %struct.rtx_def* null, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)* @adjust_mems, i8* %2), !dbg !9145
  store %struct.rtx_def* %call, %struct.rtx_def** %new_x, align 8, !dbg !9141
  %3 = load %struct.rtx_def*, %struct.rtx_def** %new_x, align 8, !dbg !9146
  %4 = load %struct.rtx_def**, %struct.rtx_def*** %x.addr, align 8, !dbg !9148
  %5 = load %struct.rtx_def*, %struct.rtx_def** %4, align 8, !dbg !9149
  %cmp = icmp ne %struct.rtx_def* %3, %5, !dbg !9150
  br i1 %cmp, label %if.then, label %if.end, !dbg !9151

if.then:                                          ; preds = %entry
  %6 = load %struct.rtx_def**, %struct.rtx_def*** %x.addr, align 8, !dbg !9152
  %7 = load %struct.rtx_def*, %struct.rtx_def** %new_x, align 8, !dbg !9153
  %call1 = call zeroext i8 @validate_change(%struct.rtx_def* null, %struct.rtx_def** %6, %struct.rtx_def* %7, i8 zeroext 1), !dbg !9154
  br label %if.end, !dbg !9154

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !9155
}

declare dso_local %struct.rtx_def* @single_set_2(%struct.rtx_def*, %struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @find_reg_equal_equiv_note(%struct.rtx_def*) #2

declare dso_local zeroext i8 @validate_change(%struct.rtx_def*, %struct.rtx_def**, %struct.rtx_def*, i8 zeroext) #2

declare dso_local %struct.rtx_def* @gen_rtx_fmt_E_stat(i32, i32, %struct.rtvec_def*) #2

declare dso_local %struct.rtvec_def* @rtvec_alloc(i32) #2

declare dso_local void @free_EXPR_LIST_list(%struct.rtx_def**) #2

declare dso_local %struct.rtx_def* @simplify_replace_fn_rtx(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @adjust_mems(%struct.rtx_def* %loc, %struct.rtx_def* %old_rtx, i8* %data) #0 !dbg !9156 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %loc.addr = alloca %struct.rtx_def*, align 8
  %old_rtx.addr = alloca %struct.rtx_def*, align 8
  %data.addr = alloca i8*, align 8
  %amd = alloca %struct.adjust_mem_data*, align 8
  %mem = alloca %struct.rtx_def*, align 8
  %addr = alloca %struct.rtx_def*, align 8
  %tem = alloca %struct.rtx_def*, align 8
  %mem_mode_save = alloca i32, align 4
  %store_save = alloca i8, align 1
  store %struct.rtx_def* %loc, %struct.rtx_def** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %loc.addr, metadata !9159, metadata !DIExpression()), !dbg !9160
  store %struct.rtx_def* %old_rtx, %struct.rtx_def** %old_rtx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %old_rtx.addr, metadata !9161, metadata !DIExpression()), !dbg !9162
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !9163, metadata !DIExpression()), !dbg !9164
  call void @llvm.dbg.declare(metadata %struct.adjust_mem_data** %amd, metadata !9165, metadata !DIExpression()), !dbg !9166
  %0 = load i8*, i8** %data.addr, align 8, !dbg !9167
  %1 = bitcast i8* %0 to %struct.adjust_mem_data*, !dbg !9168
  store %struct.adjust_mem_data* %1, %struct.adjust_mem_data** %amd, align 8, !dbg !9166
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %mem, metadata !9169, metadata !DIExpression()), !dbg !9170
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %addr, metadata !9171, metadata !DIExpression()), !dbg !9172
  %2 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !9173
  store %struct.rtx_def* %2, %struct.rtx_def** %addr, align 8, !dbg !9172
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %tem, metadata !9174, metadata !DIExpression()), !dbg !9175
  call void @llvm.dbg.declare(metadata i32* %mem_mode_save, metadata !9176, metadata !DIExpression()), !dbg !9177
  call void @llvm.dbg.declare(metadata i8* %store_save, metadata !9178, metadata !DIExpression()), !dbg !9179
  %3 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !9180
  %4 = bitcast %struct.rtx_def* %3 to i32*, !dbg !9180
  %bf.load = load i32, i32* %4, align 8, !dbg !9180
  %bf.clear = and i32 %bf.load, 65535, !dbg !9180
  switch i32 %bf.clear, label %sw.default [
    i32 37, label %sw.bb
    i32 43, label %sw.bb13
    i32 75, label %sw.bb56
    i32 74, label %sw.bb56
    i32 77, label %sw.bb80
    i32 76, label %sw.bb80
    i32 78, label %sw.bb141
    i32 79, label %sw.bb146
    i32 39, label %sw.bb175
  ], !dbg !9181

sw.bb:                                            ; preds = %entry
  %5 = load %struct.adjust_mem_data*, %struct.adjust_mem_data** %amd, align 8, !dbg !9182
  %mem_mode = getelementptr inbounds %struct.adjust_mem_data, %struct.adjust_mem_data* %5, i32 0, i32 1, !dbg !9185
  %6 = load i32, i32* %mem_mode, align 4, !dbg !9185
  %cmp = icmp eq i32 %6, 0, !dbg !9186
  br i1 %cmp, label %if.then, label %if.end, !dbg !9187

if.then:                                          ; preds = %sw.bb
  %7 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !9188
  store %struct.rtx_def* %7, %struct.rtx_def** %retval, align 8, !dbg !9189
  br label %return, !dbg !9189

if.end:                                           ; preds = %sw.bb
  %8 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !9190
  %9 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16, !dbg !9192
  %cmp1 = icmp eq %struct.rtx_def* %8, %9, !dbg !9193
  br i1 %cmp1, label %land.lhs.true, label %if.else, !dbg !9194

land.lhs.true:                                    ; preds = %if.end
  %10 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i32 0, i32 41), align 1, !dbg !9195
  %tobool = icmp ne i8 %10, 0, !dbg !9195
  br i1 %tobool, label %if.else, label %if.then2, !dbg !9196

if.then2:                                         ; preds = %land.lhs.true
  %11 = load %struct.adjust_mem_data*, %struct.adjust_mem_data** %amd, align 8, !dbg !9197
  %stack_adjust = getelementptr inbounds %struct.adjust_mem_data, %struct.adjust_mem_data* %11, i32 0, i32 2, !dbg !9198
  %12 = load i64, i64* %stack_adjust, align 8, !dbg !9198
  %call = call %struct.rtx_def* @compute_cfa_pointer(i64 %12), !dbg !9199
  store %struct.rtx_def* %call, %struct.rtx_def** %retval, align 8, !dbg !9200
  br label %return, !dbg !9200

if.else:                                          ; preds = %land.lhs.true, %if.end
  %13 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !9201
  %14 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 4), align 16, !dbg !9203
  %cmp3 = icmp eq %struct.rtx_def* %13, %14, !dbg !9204
  br i1 %cmp3, label %land.lhs.true4, label %if.end11, !dbg !9205

land.lhs.true4:                                   ; preds = %if.else
  %15 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i32 0, i32 41), align 1, !dbg !9206
  %conv = zext i8 %15 to i32, !dbg !9206
  %tobool5 = icmp ne i32 %conv, 0, !dbg !9206
  br i1 %tobool5, label %land.lhs.true6, label %if.end11, !dbg !9207

land.lhs.true6:                                   ; preds = %land.lhs.true4
  %16 = load i64, i64* @hard_frame_pointer_adjustment, align 8, !dbg !9208
  %cmp7 = icmp ne i64 %16, -1, !dbg !9209
  br i1 %cmp7, label %if.then9, label %if.end11, !dbg !9210

if.then9:                                         ; preds = %land.lhs.true6
  %17 = load i64, i64* @hard_frame_pointer_adjustment, align 8, !dbg !9211
  %call10 = call %struct.rtx_def* @compute_cfa_pointer(i64 %17), !dbg !9212
  store %struct.rtx_def* %call10, %struct.rtx_def** %retval, align 8, !dbg !9213
  br label %return, !dbg !9213

if.end11:                                         ; preds = %land.lhs.true6, %land.lhs.true4, %if.else
  br label %if.end12

if.end12:                                         ; preds = %if.end11
  %18 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !9214
  store %struct.rtx_def* %18, %struct.rtx_def** %retval, align 8, !dbg !9215
  br label %return, !dbg !9215

sw.bb13:                                          ; preds = %entry
  %19 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !9216
  store %struct.rtx_def* %19, %struct.rtx_def** %mem, align 8, !dbg !9217
  %20 = load %struct.adjust_mem_data*, %struct.adjust_mem_data** %amd, align 8, !dbg !9218
  %store = getelementptr inbounds %struct.adjust_mem_data, %struct.adjust_mem_data* %20, i32 0, i32 0, !dbg !9220
  %21 = load i8, i8* %store, align 8, !dbg !9220
  %tobool14 = icmp ne i8 %21, 0, !dbg !9218
  br i1 %tobool14, label %if.end27, label %if.then15, !dbg !9221

if.then15:                                        ; preds = %sw.bb13
  %22 = load %struct.rtx_def* (%struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 40), align 8, !dbg !9222
  %23 = load %struct.rtx_def*, %struct.rtx_def** %mem, align 8, !dbg !9224
  %call16 = call %struct.rtx_def* %22(%struct.rtx_def* %23), !dbg !9225
  store %struct.rtx_def* %call16, %struct.rtx_def** %mem, align 8, !dbg !9226
  %24 = load %struct.rtx_def*, %struct.rtx_def** %mem, align 8, !dbg !9227
  %25 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !9229
  %cmp17 = icmp ne %struct.rtx_def* %24, %25, !dbg !9230
  br i1 %cmp17, label %land.lhs.true19, label %if.end26, !dbg !9231

land.lhs.true19:                                  ; preds = %if.then15
  %26 = load %struct.rtx_def*, %struct.rtx_def** %mem, align 8, !dbg !9232
  %27 = bitcast %struct.rtx_def* %26 to i32*, !dbg !9232
  %bf.load20 = load i32, i32* %27, align 8, !dbg !9232
  %bf.clear21 = and i32 %bf.load20, 65535, !dbg !9232
  %cmp22 = icmp eq i32 %bf.clear21, 43, !dbg !9232
  br i1 %cmp22, label %if.end26, label %if.then24, !dbg !9233

if.then24:                                        ; preds = %land.lhs.true19
  %28 = load %struct.rtx_def*, %struct.rtx_def** %mem, align 8, !dbg !9234
  %29 = load %struct.rtx_def*, %struct.rtx_def** %old_rtx.addr, align 8, !dbg !9235
  %30 = load i8*, i8** %data.addr, align 8, !dbg !9236
  %call25 = call %struct.rtx_def* @simplify_replace_fn_rtx(%struct.rtx_def* %28, %struct.rtx_def* %29, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)* @adjust_mems, i8* %30), !dbg !9237
  store %struct.rtx_def* %call25, %struct.rtx_def** %retval, align 8, !dbg !9238
  br label %return, !dbg !9238

if.end26:                                         ; preds = %land.lhs.true19, %if.then15
  br label %if.end27, !dbg !9239

if.end27:                                         ; preds = %if.end26, %sw.bb13
  %31 = load %struct.rtx_def*, %struct.rtx_def** %mem, align 8, !dbg !9240
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i32 0, i32 1, !dbg !9240
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !9240
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !9240
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !9240
  %32 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !9240
  store %struct.rtx_def* %32, %struct.rtx_def** %addr, align 8, !dbg !9241
  %33 = load %struct.adjust_mem_data*, %struct.adjust_mem_data** %amd, align 8, !dbg !9242
  %mem_mode28 = getelementptr inbounds %struct.adjust_mem_data, %struct.adjust_mem_data* %33, i32 0, i32 1, !dbg !9243
  %34 = load i32, i32* %mem_mode28, align 4, !dbg !9243
  store i32 %34, i32* %mem_mode_save, align 4, !dbg !9244
  %35 = load %struct.rtx_def*, %struct.rtx_def** %mem, align 8, !dbg !9245
  %36 = bitcast %struct.rtx_def* %35 to i32*, !dbg !9245
  %bf.load29 = load i32, i32* %36, align 8, !dbg !9245
  %bf.lshr = lshr i32 %bf.load29, 16, !dbg !9245
  %bf.clear30 = and i32 %bf.lshr, 255, !dbg !9245
  %37 = load %struct.adjust_mem_data*, %struct.adjust_mem_data** %amd, align 8, !dbg !9246
  %mem_mode31 = getelementptr inbounds %struct.adjust_mem_data, %struct.adjust_mem_data* %37, i32 0, i32 1, !dbg !9247
  store i32 %bf.clear30, i32* %mem_mode31, align 4, !dbg !9248
  %38 = load %struct.adjust_mem_data*, %struct.adjust_mem_data** %amd, align 8, !dbg !9249
  %store32 = getelementptr inbounds %struct.adjust_mem_data, %struct.adjust_mem_data* %38, i32 0, i32 0, !dbg !9250
  %39 = load i8, i8* %store32, align 8, !dbg !9250
  store i8 %39, i8* %store_save, align 1, !dbg !9251
  %40 = load %struct.adjust_mem_data*, %struct.adjust_mem_data** %amd, align 8, !dbg !9252
  %store33 = getelementptr inbounds %struct.adjust_mem_data, %struct.adjust_mem_data* %40, i32 0, i32 0, !dbg !9253
  store i8 0, i8* %store33, align 8, !dbg !9254
  %41 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8, !dbg !9255
  %42 = load %struct.rtx_def*, %struct.rtx_def** %old_rtx.addr, align 8, !dbg !9256
  %43 = load i8*, i8** %data.addr, align 8, !dbg !9257
  %call34 = call %struct.rtx_def* @simplify_replace_fn_rtx(%struct.rtx_def* %41, %struct.rtx_def* %42, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)* @adjust_mems, i8* %43), !dbg !9258
  store %struct.rtx_def* %call34, %struct.rtx_def** %addr, align 8, !dbg !9259
  %44 = load i8, i8* %store_save, align 1, !dbg !9260
  %45 = load %struct.adjust_mem_data*, %struct.adjust_mem_data** %amd, align 8, !dbg !9261
  %store35 = getelementptr inbounds %struct.adjust_mem_data, %struct.adjust_mem_data* %45, i32 0, i32 0, !dbg !9262
  store i8 %44, i8* %store35, align 8, !dbg !9263
  %46 = load i32, i32* %mem_mode_save, align 4, !dbg !9264
  %47 = load %struct.adjust_mem_data*, %struct.adjust_mem_data** %amd, align 8, !dbg !9265
  %mem_mode36 = getelementptr inbounds %struct.adjust_mem_data, %struct.adjust_mem_data* %47, i32 0, i32 1, !dbg !9266
  store i32 %46, i32* %mem_mode36, align 4, !dbg !9267
  %48 = load %struct.rtx_def*, %struct.rtx_def** %mem, align 8, !dbg !9268
  %49 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !9270
  %cmp37 = icmp eq %struct.rtx_def* %48, %49, !dbg !9271
  br i1 %cmp37, label %if.then39, label %if.end41, !dbg !9272

if.then39:                                        ; preds = %if.end27
  %50 = load %struct.rtx_def* (%struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 40), align 8, !dbg !9273
  %51 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8, !dbg !9274
  %call40 = call %struct.rtx_def* %50(%struct.rtx_def* %51), !dbg !9275
  store %struct.rtx_def* %call40, %struct.rtx_def** %addr, align 8, !dbg !9276
  br label %if.end41, !dbg !9277

if.end41:                                         ; preds = %if.then39, %if.end27
  %52 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8, !dbg !9278
  %53 = load %struct.rtx_def*, %struct.rtx_def** %mem, align 8, !dbg !9280
  %u42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %53, i32 0, i32 1, !dbg !9280
  %fld43 = bitcast %union.u* %u42 to [1 x %union.rtunion_def]*, !dbg !9280
  %arrayidx44 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld43, i64 0, i64 0, !dbg !9280
  %rt_rtx45 = bitcast %union.rtunion_def* %arrayidx44 to %struct.rtx_def**, !dbg !9280
  %54 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx45, align 8, !dbg !9280
  %cmp46 = icmp ne %struct.rtx_def* %52, %54, !dbg !9281
  br i1 %cmp46, label %if.then48, label %if.end50, !dbg !9282

if.then48:                                        ; preds = %if.end41
  %55 = load %struct.rtx_def*, %struct.rtx_def** %mem, align 8, !dbg !9283
  %56 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8, !dbg !9284
  %call49 = call %struct.rtx_def* @replace_equiv_address_nv(%struct.rtx_def* %55, %struct.rtx_def* %56), !dbg !9285
  store %struct.rtx_def* %call49, %struct.rtx_def** %mem, align 8, !dbg !9286
  br label %if.end50, !dbg !9287

if.end50:                                         ; preds = %if.then48, %if.end41
  %57 = load %struct.adjust_mem_data*, %struct.adjust_mem_data** %amd, align 8, !dbg !9288
  %store51 = getelementptr inbounds %struct.adjust_mem_data, %struct.adjust_mem_data* %57, i32 0, i32 0, !dbg !9290
  %58 = load i8, i8* %store51, align 8, !dbg !9290
  %tobool52 = icmp ne i8 %58, 0, !dbg !9288
  br i1 %tobool52, label %if.end55, label %if.then53, !dbg !9291

if.then53:                                        ; preds = %if.end50
  %59 = load %struct.rtx_def*, %struct.rtx_def** %mem, align 8, !dbg !9292
  %call54 = call %struct.rtx_def* @avoid_constant_pool_reference(%struct.rtx_def* %59), !dbg !9293
  store %struct.rtx_def* %call54, %struct.rtx_def** %mem, align 8, !dbg !9294
  br label %if.end55, !dbg !9295

if.end55:                                         ; preds = %if.then53, %if.end50
  %60 = load %struct.rtx_def*, %struct.rtx_def** %mem, align 8, !dbg !9296
  store %struct.rtx_def* %60, %struct.rtx_def** %retval, align 8, !dbg !9297
  br label %return, !dbg !9297

sw.bb56:                                          ; preds = %entry, %entry
  %61 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !9298
  %62 = bitcast %struct.rtx_def* %61 to i32*, !dbg !9298
  %bf.load57 = load i32, i32* %62, align 8, !dbg !9298
  %bf.lshr58 = lshr i32 %bf.load57, 16, !dbg !9298
  %bf.clear59 = and i32 %bf.lshr58, 255, !dbg !9298
  %63 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !9298
  %u60 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %63, i32 0, i32 1, !dbg !9298
  %fld61 = bitcast %union.u* %u60 to [1 x %union.rtunion_def]*, !dbg !9298
  %arrayidx62 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld61, i64 0, i64 0, !dbg !9298
  %rt_rtx63 = bitcast %union.rtunion_def* %arrayidx62 to %struct.rtx_def**, !dbg !9298
  %64 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx63, align 8, !dbg !9298
  %65 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !9298
  %66 = bitcast %struct.rtx_def* %65 to i32*, !dbg !9298
  %bf.load64 = load i32, i32* %66, align 8, !dbg !9298
  %bf.clear65 = and i32 %bf.load64, 65535, !dbg !9298
  %cmp66 = icmp eq i32 %bf.clear65, 75, !dbg !9298
  br i1 %cmp66, label %cond.true, label %cond.false, !dbg !9298

cond.true:                                        ; preds = %sw.bb56
  %67 = load %struct.adjust_mem_data*, %struct.adjust_mem_data** %amd, align 8, !dbg !9298
  %mem_mode68 = getelementptr inbounds %struct.adjust_mem_data, %struct.adjust_mem_data* %67, i32 0, i32 1, !dbg !9298
  %68 = load i32, i32* %mem_mode68, align 4, !dbg !9298
  %idxprom = zext i32 %68 to i64, !dbg !9298
  %arrayidx69 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !9298
  %69 = load i8, i8* %arrayidx69, align 1, !dbg !9298
  %conv70 = zext i8 %69 to i16, !dbg !9298
  %conv71 = zext i16 %conv70 to i32, !dbg !9298
  br label %cond.end, !dbg !9298

cond.false:                                       ; preds = %sw.bb56
  %70 = load %struct.adjust_mem_data*, %struct.adjust_mem_data** %amd, align 8, !dbg !9298
  %mem_mode72 = getelementptr inbounds %struct.adjust_mem_data, %struct.adjust_mem_data* %70, i32 0, i32 1, !dbg !9298
  %71 = load i32, i32* %mem_mode72, align 4, !dbg !9298
  %idxprom73 = zext i32 %71 to i64, !dbg !9298
  %arrayidx74 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom73, !dbg !9298
  %72 = load i8, i8* %arrayidx74, align 1, !dbg !9298
  %conv75 = zext i8 %72 to i16, !dbg !9298
  %conv76 = zext i16 %conv75 to i32, !dbg !9298
  %sub = sub nsw i32 0, %conv76, !dbg !9298
  br label %cond.end, !dbg !9298

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv71, %cond.true ], [ %sub, %cond.false ], !dbg !9298
  %conv77 = sext i32 %cond to i64, !dbg !9298
  %call78 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv77), !dbg !9298
  %call79 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 49, i32 %bf.clear59, %struct.rtx_def* %64, %struct.rtx_def* %call78), !dbg !9298
  store %struct.rtx_def* %call79, %struct.rtx_def** %addr, align 8, !dbg !9299
  br label %sw.bb80, !dbg !9300

sw.bb80:                                          ; preds = %entry, %entry, %cond.end
  %73 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8, !dbg !9301
  %74 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !9303
  %cmp81 = icmp eq %struct.rtx_def* %73, %74, !dbg !9304
  br i1 %cmp81, label %if.then83, label %if.end88, !dbg !9305

if.then83:                                        ; preds = %sw.bb80
  %75 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !9306
  %u84 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %75, i32 0, i32 1, !dbg !9306
  %fld85 = bitcast %union.u* %u84 to [1 x %union.rtunion_def]*, !dbg !9306
  %arrayidx86 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld85, i64 0, i64 0, !dbg !9306
  %rt_rtx87 = bitcast %union.rtunion_def* %arrayidx86 to %struct.rtx_def**, !dbg !9306
  %76 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx87, align 8, !dbg !9306
  store %struct.rtx_def* %76, %struct.rtx_def** %addr, align 8, !dbg !9307
  br label %if.end88, !dbg !9308

if.end88:                                         ; preds = %if.then83, %sw.bb80
  %77 = load %struct.adjust_mem_data*, %struct.adjust_mem_data** %amd, align 8, !dbg !9309
  %mem_mode89 = getelementptr inbounds %struct.adjust_mem_data, %struct.adjust_mem_data* %77, i32 0, i32 1, !dbg !9309
  %78 = load i32, i32* %mem_mode89, align 4, !dbg !9309
  %cmp90 = icmp ne i32 %78, 0, !dbg !9309
  br i1 %cmp90, label %land.lhs.true92, label %cond.true96, !dbg !9309

land.lhs.true92:                                  ; preds = %if.end88
  %79 = load %struct.adjust_mem_data*, %struct.adjust_mem_data** %amd, align 8, !dbg !9309
  %mem_mode93 = getelementptr inbounds %struct.adjust_mem_data, %struct.adjust_mem_data* %79, i32 0, i32 1, !dbg !9309
  %80 = load i32, i32* %mem_mode93, align 4, !dbg !9309
  %cmp94 = icmp ne i32 %80, 1, !dbg !9309
  br i1 %cmp94, label %cond.false97, label %cond.true96, !dbg !9309

cond.true96:                                      ; preds = %land.lhs.true92, %if.end88
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 851, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !9309
  br label %cond.end98, !dbg !9309

cond.false97:                                     ; preds = %land.lhs.true92
  br label %cond.end98, !dbg !9309

cond.end98:                                       ; preds = %cond.false97, %cond.true96
  %cond99 = phi i32 [ 0, %cond.true96 ], [ 0, %cond.false97 ], !dbg !9309
  %81 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8, !dbg !9310
  %82 = load %struct.rtx_def*, %struct.rtx_def** %old_rtx.addr, align 8, !dbg !9311
  %83 = load i8*, i8** %data.addr, align 8, !dbg !9312
  %call100 = call %struct.rtx_def* @simplify_replace_fn_rtx(%struct.rtx_def* %81, %struct.rtx_def* %82, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)* @adjust_mems, i8* %83), !dbg !9313
  store %struct.rtx_def* %call100, %struct.rtx_def** %addr, align 8, !dbg !9314
  %84 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !9315
  %85 = bitcast %struct.rtx_def* %84 to i32*, !dbg !9315
  %bf.load101 = load i32, i32* %85, align 8, !dbg !9315
  %bf.lshr102 = lshr i32 %bf.load101, 16, !dbg !9315
  %bf.clear103 = and i32 %bf.lshr102, 255, !dbg !9315
  %86 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !9315
  %u104 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %86, i32 0, i32 1, !dbg !9315
  %fld105 = bitcast %union.u* %u104 to [1 x %union.rtunion_def]*, !dbg !9315
  %arrayidx106 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld105, i64 0, i64 0, !dbg !9315
  %rt_rtx107 = bitcast %union.rtunion_def* %arrayidx106 to %struct.rtx_def**, !dbg !9315
  %87 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx107, align 8, !dbg !9315
  %88 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !9315
  %89 = bitcast %struct.rtx_def* %88 to i32*, !dbg !9315
  %bf.load108 = load i32, i32* %89, align 8, !dbg !9315
  %bf.clear109 = and i32 %bf.load108, 65535, !dbg !9315
  %cmp110 = icmp eq i32 %bf.clear109, 75, !dbg !9315
  br i1 %cmp110, label %cond.true116, label %lor.lhs.false, !dbg !9315

lor.lhs.false:                                    ; preds = %cond.end98
  %90 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !9315
  %91 = bitcast %struct.rtx_def* %90 to i32*, !dbg !9315
  %bf.load112 = load i32, i32* %91, align 8, !dbg !9315
  %bf.clear113 = and i32 %bf.load112, 65535, !dbg !9315
  %cmp114 = icmp eq i32 %bf.clear113, 77, !dbg !9315
  br i1 %cmp114, label %cond.true116, label %cond.false122, !dbg !9315

cond.true116:                                     ; preds = %lor.lhs.false, %cond.end98
  %92 = load %struct.adjust_mem_data*, %struct.adjust_mem_data** %amd, align 8, !dbg !9315
  %mem_mode117 = getelementptr inbounds %struct.adjust_mem_data, %struct.adjust_mem_data* %92, i32 0, i32 1, !dbg !9315
  %93 = load i32, i32* %mem_mode117, align 4, !dbg !9315
  %idxprom118 = zext i32 %93 to i64, !dbg !9315
  %arrayidx119 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom118, !dbg !9315
  %94 = load i8, i8* %arrayidx119, align 1, !dbg !9315
  %conv120 = zext i8 %94 to i16, !dbg !9315
  %conv121 = zext i16 %conv120 to i32, !dbg !9315
  br label %cond.end129, !dbg !9315

cond.false122:                                    ; preds = %lor.lhs.false
  %95 = load %struct.adjust_mem_data*, %struct.adjust_mem_data** %amd, align 8, !dbg !9315
  %mem_mode123 = getelementptr inbounds %struct.adjust_mem_data, %struct.adjust_mem_data* %95, i32 0, i32 1, !dbg !9315
  %96 = load i32, i32* %mem_mode123, align 4, !dbg !9315
  %idxprom124 = zext i32 %96 to i64, !dbg !9315
  %arrayidx125 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom124, !dbg !9315
  %97 = load i8, i8* %arrayidx125, align 1, !dbg !9315
  %conv126 = zext i8 %97 to i16, !dbg !9315
  %conv127 = zext i16 %conv126 to i32, !dbg !9315
  %sub128 = sub nsw i32 0, %conv127, !dbg !9315
  br label %cond.end129, !dbg !9315

cond.end129:                                      ; preds = %cond.false122, %cond.true116
  %cond130 = phi i32 [ %conv121, %cond.true116 ], [ %sub128, %cond.false122 ], !dbg !9315
  %conv131 = sext i32 %cond130 to i64, !dbg !9315
  %call132 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv131), !dbg !9315
  %call133 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 49, i32 %bf.clear103, %struct.rtx_def* %87, %struct.rtx_def* %call132), !dbg !9315
  store %struct.rtx_def* %call133, %struct.rtx_def** %tem, align 8, !dbg !9316
  %98 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !9317
  %u134 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %98, i32 0, i32 1, !dbg !9317
  %fld135 = bitcast %union.u* %u134 to [1 x %union.rtunion_def]*, !dbg !9317
  %arrayidx136 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld135, i64 0, i64 0, !dbg !9317
  %rt_rtx137 = bitcast %union.rtunion_def* %arrayidx136 to %struct.rtx_def**, !dbg !9317
  %99 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx137, align 8, !dbg !9317
  %100 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !9317
  %call138 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 23, i32 0, %struct.rtx_def* %99, %struct.rtx_def* %100), !dbg !9317
  %101 = load %struct.adjust_mem_data*, %struct.adjust_mem_data** %amd, align 8, !dbg !9318
  %side_effects = getelementptr inbounds %struct.adjust_mem_data, %struct.adjust_mem_data* %101, i32 0, i32 3, !dbg !9319
  %102 = load %struct.rtx_def*, %struct.rtx_def** %side_effects, align 8, !dbg !9319
  %call139 = call %struct.rtx_def* @alloc_EXPR_LIST(i32 0, %struct.rtx_def* %call138, %struct.rtx_def* %102), !dbg !9320
  %103 = load %struct.adjust_mem_data*, %struct.adjust_mem_data** %amd, align 8, !dbg !9321
  %side_effects140 = getelementptr inbounds %struct.adjust_mem_data, %struct.adjust_mem_data* %103, i32 0, i32 3, !dbg !9322
  store %struct.rtx_def* %call139, %struct.rtx_def** %side_effects140, align 8, !dbg !9323
  %104 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8, !dbg !9324
  store %struct.rtx_def* %104, %struct.rtx_def** %retval, align 8, !dbg !9325
  br label %return, !dbg !9325

sw.bb141:                                         ; preds = %entry
  %105 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !9326
  %u142 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %105, i32 0, i32 1, !dbg !9326
  %fld143 = bitcast %union.u* %u142 to [1 x %union.rtunion_def]*, !dbg !9326
  %arrayidx144 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld143, i64 0, i64 1, !dbg !9326
  %rt_rtx145 = bitcast %union.rtunion_def* %arrayidx144 to %struct.rtx_def**, !dbg !9326
  %106 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx145, align 8, !dbg !9326
  store %struct.rtx_def* %106, %struct.rtx_def** %addr, align 8, !dbg !9327
  br label %sw.bb146, !dbg !9328

sw.bb146:                                         ; preds = %entry, %sw.bb141
  %107 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8, !dbg !9329
  %108 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !9331
  %cmp147 = icmp eq %struct.rtx_def* %107, %108, !dbg !9332
  br i1 %cmp147, label %if.then149, label %if.end154, !dbg !9333

if.then149:                                       ; preds = %sw.bb146
  %109 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !9334
  %u150 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %109, i32 0, i32 1, !dbg !9334
  %fld151 = bitcast %union.u* %u150 to [1 x %union.rtunion_def]*, !dbg !9334
  %arrayidx152 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld151, i64 0, i64 0, !dbg !9334
  %rt_rtx153 = bitcast %union.rtunion_def* %arrayidx152 to %struct.rtx_def**, !dbg !9334
  %110 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx153, align 8, !dbg !9334
  store %struct.rtx_def* %110, %struct.rtx_def** %addr, align 8, !dbg !9335
  br label %if.end154, !dbg !9336

if.end154:                                        ; preds = %if.then149, %sw.bb146
  %111 = load %struct.adjust_mem_data*, %struct.adjust_mem_data** %amd, align 8, !dbg !9337
  %mem_mode155 = getelementptr inbounds %struct.adjust_mem_data, %struct.adjust_mem_data* %111, i32 0, i32 1, !dbg !9337
  %112 = load i32, i32* %mem_mode155, align 4, !dbg !9337
  %cmp156 = icmp ne i32 %112, 0, !dbg !9337
  br i1 %cmp156, label %cond.false159, label %cond.true158, !dbg !9337

cond.true158:                                     ; preds = %if.end154
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 869, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !9337
  br label %cond.end160, !dbg !9337

cond.false159:                                    ; preds = %if.end154
  br label %cond.end160, !dbg !9337

cond.end160:                                      ; preds = %cond.false159, %cond.true158
  %cond161 = phi i32 [ 0, %cond.true158 ], [ 0, %cond.false159 ], !dbg !9337
  %113 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8, !dbg !9338
  %114 = load %struct.rtx_def*, %struct.rtx_def** %old_rtx.addr, align 8, !dbg !9339
  %115 = load i8*, i8** %data.addr, align 8, !dbg !9340
  %call162 = call %struct.rtx_def* @simplify_replace_fn_rtx(%struct.rtx_def* %113, %struct.rtx_def* %114, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)* @adjust_mems, i8* %115), !dbg !9341
  store %struct.rtx_def* %call162, %struct.rtx_def** %addr, align 8, !dbg !9342
  %116 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !9343
  %u163 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %116, i32 0, i32 1, !dbg !9343
  %fld164 = bitcast %union.u* %u163 to [1 x %union.rtunion_def]*, !dbg !9343
  %arrayidx165 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld164, i64 0, i64 0, !dbg !9343
  %rt_rtx166 = bitcast %union.rtunion_def* %arrayidx165 to %struct.rtx_def**, !dbg !9343
  %117 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx166, align 8, !dbg !9343
  %118 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !9343
  %u167 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %118, i32 0, i32 1, !dbg !9343
  %fld168 = bitcast %union.u* %u167 to [1 x %union.rtunion_def]*, !dbg !9343
  %arrayidx169 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld168, i64 0, i64 1, !dbg !9343
  %rt_rtx170 = bitcast %union.rtunion_def* %arrayidx169 to %struct.rtx_def**, !dbg !9343
  %119 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx170, align 8, !dbg !9343
  %call171 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 23, i32 0, %struct.rtx_def* %117, %struct.rtx_def* %119), !dbg !9343
  %120 = load %struct.adjust_mem_data*, %struct.adjust_mem_data** %amd, align 8, !dbg !9344
  %side_effects172 = getelementptr inbounds %struct.adjust_mem_data, %struct.adjust_mem_data* %120, i32 0, i32 3, !dbg !9345
  %121 = load %struct.rtx_def*, %struct.rtx_def** %side_effects172, align 8, !dbg !9345
  %call173 = call %struct.rtx_def* @alloc_EXPR_LIST(i32 0, %struct.rtx_def* %call171, %struct.rtx_def* %121), !dbg !9346
  %122 = load %struct.adjust_mem_data*, %struct.adjust_mem_data** %amd, align 8, !dbg !9347
  %side_effects174 = getelementptr inbounds %struct.adjust_mem_data, %struct.adjust_mem_data* %122, i32 0, i32 3, !dbg !9348
  store %struct.rtx_def* %call173, %struct.rtx_def** %side_effects174, align 8, !dbg !9349
  %123 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8, !dbg !9350
  store %struct.rtx_def* %123, %struct.rtx_def** %retval, align 8, !dbg !9351
  br label %return, !dbg !9351

sw.bb175:                                         ; preds = %entry
  %124 = load %struct.adjust_mem_data*, %struct.adjust_mem_data** %amd, align 8, !dbg !9352
  %store176 = getelementptr inbounds %struct.adjust_mem_data, %struct.adjust_mem_data* %124, i32 0, i32 0, !dbg !9353
  %125 = load i8, i8* %store176, align 8, !dbg !9353
  store i8 %125, i8* %store_save, align 1, !dbg !9354
  %126 = load %struct.adjust_mem_data*, %struct.adjust_mem_data** %amd, align 8, !dbg !9355
  %store177 = getelementptr inbounds %struct.adjust_mem_data, %struct.adjust_mem_data* %126, i32 0, i32 0, !dbg !9356
  store i8 1, i8* %store177, align 8, !dbg !9357
  %127 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !9358
  %u178 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %127, i32 0, i32 1, !dbg !9358
  %fld179 = bitcast %union.u* %u178 to [1 x %union.rtunion_def]*, !dbg !9358
  %arrayidx180 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld179, i64 0, i64 0, !dbg !9358
  %rt_rtx181 = bitcast %union.rtunion_def* %arrayidx180 to %struct.rtx_def**, !dbg !9358
  %128 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx181, align 8, !dbg !9358
  %129 = load %struct.rtx_def*, %struct.rtx_def** %old_rtx.addr, align 8, !dbg !9359
  %130 = load i8*, i8** %data.addr, align 8, !dbg !9360
  %call182 = call %struct.rtx_def* @simplify_replace_fn_rtx(%struct.rtx_def* %128, %struct.rtx_def* %129, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)* @adjust_mems, i8* %130), !dbg !9361
  store %struct.rtx_def* %call182, %struct.rtx_def** %addr, align 8, !dbg !9362
  %131 = load i8, i8* %store_save, align 1, !dbg !9363
  %132 = load %struct.adjust_mem_data*, %struct.adjust_mem_data** %amd, align 8, !dbg !9364
  %store183 = getelementptr inbounds %struct.adjust_mem_data, %struct.adjust_mem_data* %132, i32 0, i32 0, !dbg !9365
  store i8 %131, i8* %store183, align 8, !dbg !9366
  %133 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8, !dbg !9367
  %134 = load %struct.rtx_def*, %struct.rtx_def** %old_rtx.addr, align 8, !dbg !9368
  %135 = load i8*, i8** %data.addr, align 8, !dbg !9369
  %call184 = call %struct.rtx_def* @simplify_replace_fn_rtx(%struct.rtx_def* %133, %struct.rtx_def* %134, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i8*)* @adjust_mems, i8* %135), !dbg !9370
  store %struct.rtx_def* %call184, %struct.rtx_def** %mem, align 8, !dbg !9371
  %136 = load %struct.rtx_def*, %struct.rtx_def** %mem, align 8, !dbg !9372
  %137 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !9374
  %u185 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %137, i32 0, i32 1, !dbg !9374
  %fld186 = bitcast %union.u* %u185 to [1 x %union.rtunion_def]*, !dbg !9374
  %arrayidx187 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld186, i64 0, i64 0, !dbg !9374
  %rt_rtx188 = bitcast %union.rtunion_def* %arrayidx187 to %struct.rtx_def**, !dbg !9374
  %138 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx188, align 8, !dbg !9374
  %cmp189 = icmp eq %struct.rtx_def* %136, %138, !dbg !9375
  br i1 %cmp189, label %if.then191, label %if.end192, !dbg !9376

if.then191:                                       ; preds = %sw.bb175
  %139 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !9377
  store %struct.rtx_def* %139, %struct.rtx_def** %tem, align 8, !dbg !9379
  br label %finish_subreg, !dbg !9380

if.end192:                                        ; preds = %sw.bb175
  %140 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !9381
  %141 = bitcast %struct.rtx_def* %140 to i32*, !dbg !9381
  %bf.load193 = load i32, i32* %141, align 8, !dbg !9381
  %bf.lshr194 = lshr i32 %bf.load193, 16, !dbg !9381
  %bf.clear195 = and i32 %bf.lshr194, 255, !dbg !9381
  %142 = load %struct.rtx_def*, %struct.rtx_def** %mem, align 8, !dbg !9382
  %143 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !9383
  %u196 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %143, i32 0, i32 1, !dbg !9383
  %fld197 = bitcast %union.u* %u196 to [1 x %union.rtunion_def]*, !dbg !9383
  %arrayidx198 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld197, i64 0, i64 0, !dbg !9383
  %rt_rtx199 = bitcast %union.rtunion_def* %arrayidx198 to %struct.rtx_def**, !dbg !9383
  %144 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx199, align 8, !dbg !9383
  %145 = bitcast %struct.rtx_def* %144 to i32*, !dbg !9383
  %bf.load200 = load i32, i32* %145, align 8, !dbg !9383
  %bf.lshr201 = lshr i32 %bf.load200, 16, !dbg !9383
  %bf.clear202 = and i32 %bf.lshr201, 255, !dbg !9383
  %146 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !9384
  %u203 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %146, i32 0, i32 1, !dbg !9384
  %fld204 = bitcast %union.u* %u203 to [1 x %union.rtunion_def]*, !dbg !9384
  %arrayidx205 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld204, i64 0, i64 1, !dbg !9384
  %rt_uint = bitcast %union.rtunion_def* %arrayidx205 to i32*, !dbg !9384
  %147 = load i32, i32* %rt_uint, align 8, !dbg !9384
  %call206 = call %struct.rtx_def* @simplify_gen_subreg(i32 %bf.clear195, %struct.rtx_def* %142, i32 %bf.clear202, i32 %147), !dbg !9385
  store %struct.rtx_def* %call206, %struct.rtx_def** %tem, align 8, !dbg !9386
  %148 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !9387
  %tobool207 = icmp ne %struct.rtx_def* %148, null, !dbg !9387
  br i1 %tobool207, label %if.then208, label %if.end209, !dbg !9389

if.then208:                                       ; preds = %if.end192
  br label %finish_subreg, !dbg !9390

if.end209:                                        ; preds = %if.end192
  %149 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !9391
  %150 = bitcast %struct.rtx_def* %149 to i32*, !dbg !9391
  %bf.load210 = load i32, i32* %150, align 8, !dbg !9391
  %bf.lshr211 = lshr i32 %bf.load210, 16, !dbg !9391
  %bf.clear212 = and i32 %bf.lshr211, 255, !dbg !9391
  %151 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8, !dbg !9392
  %152 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !9393
  %u213 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %152, i32 0, i32 1, !dbg !9393
  %fld214 = bitcast %union.u* %u213 to [1 x %union.rtunion_def]*, !dbg !9393
  %arrayidx215 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld214, i64 0, i64 0, !dbg !9393
  %rt_rtx216 = bitcast %union.rtunion_def* %arrayidx215 to %struct.rtx_def**, !dbg !9393
  %153 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx216, align 8, !dbg !9393
  %154 = bitcast %struct.rtx_def* %153 to i32*, !dbg !9393
  %bf.load217 = load i32, i32* %154, align 8, !dbg !9393
  %bf.lshr218 = lshr i32 %bf.load217, 16, !dbg !9393
  %bf.clear219 = and i32 %bf.lshr218, 255, !dbg !9393
  %155 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !9394
  %u220 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %155, i32 0, i32 1, !dbg !9394
  %fld221 = bitcast %union.u* %u220 to [1 x %union.rtunion_def]*, !dbg !9394
  %arrayidx222 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld221, i64 0, i64 1, !dbg !9394
  %rt_uint223 = bitcast %union.rtunion_def* %arrayidx222 to i32*, !dbg !9394
  %156 = load i32, i32* %rt_uint223, align 8, !dbg !9394
  %call224 = call %struct.rtx_def* @simplify_gen_subreg(i32 %bf.clear212, %struct.rtx_def* %151, i32 %bf.clear219, i32 %156), !dbg !9395
  store %struct.rtx_def* %call224, %struct.rtx_def** %tem, align 8, !dbg !9396
  %157 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !9397
  %cmp225 = icmp eq %struct.rtx_def* %157, null, !dbg !9399
  br i1 %cmp225, label %if.then227, label %if.end236, !dbg !9400

if.then227:                                       ; preds = %if.end209
  %158 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !9401
  %159 = bitcast %struct.rtx_def* %158 to i32*, !dbg !9401
  %bf.load228 = load i32, i32* %159, align 8, !dbg !9401
  %bf.lshr229 = lshr i32 %bf.load228, 16, !dbg !9401
  %bf.clear230 = and i32 %bf.lshr229, 255, !dbg !9401
  %160 = load %struct.rtx_def*, %struct.rtx_def** %addr, align 8, !dbg !9401
  %161 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !9401
  %u231 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %161, i32 0, i32 1, !dbg !9401
  %fld232 = bitcast %union.u* %u231 to [1 x %union.rtunion_def]*, !dbg !9401
  %arrayidx233 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld232, i64 0, i64 1, !dbg !9401
  %rt_uint234 = bitcast %union.rtunion_def* %arrayidx233 to i32*, !dbg !9401
  %162 = load i32, i32* %rt_uint234, align 8, !dbg !9401
  %call235 = call %struct.rtx_def* @gen_rtx_fmt_ei_stat(i32 39, i32 %bf.clear230, %struct.rtx_def* %160, i32 %162), !dbg !9401
  store %struct.rtx_def* %call235, %struct.rtx_def** %tem, align 8, !dbg !9402
  br label %if.end236, !dbg !9403

if.end236:                                        ; preds = %if.then227, %if.end209
  br label %finish_subreg, !dbg !9404

finish_subreg:                                    ; preds = %if.end236, %if.then208, %if.then191
  call void @llvm.dbg.label(metadata !9405), !dbg !9406
  %163 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !9407
  %tobool237 = icmp ne i32 %163, 0, !dbg !9407
  br i1 %tobool237, label %land.lhs.true238, label %if.end348, !dbg !9409

land.lhs.true238:                                 ; preds = %finish_subreg
  %164 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !9410
  %165 = bitcast %struct.rtx_def* %164 to i32*, !dbg !9410
  %bf.load239 = load i32, i32* %165, align 8, !dbg !9410
  %bf.clear240 = and i32 %bf.load239, 65535, !dbg !9410
  %cmp241 = icmp eq i32 %bf.clear240, 39, !dbg !9411
  br i1 %cmp241, label %land.lhs.true243, label %if.end348, !dbg !9412

land.lhs.true243:                                 ; preds = %land.lhs.true238
  %166 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !9413
  %u244 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %166, i32 0, i32 1, !dbg !9413
  %fld245 = bitcast %union.u* %u244 to [1 x %union.rtunion_def]*, !dbg !9413
  %arrayidx246 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld245, i64 0, i64 0, !dbg !9413
  %rt_rtx247 = bitcast %union.rtunion_def* %arrayidx246 to %struct.rtx_def**, !dbg !9413
  %167 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx247, align 8, !dbg !9413
  %168 = bitcast %struct.rtx_def* %167 to i32*, !dbg !9413
  %bf.load248 = load i32, i32* %168, align 8, !dbg !9413
  %bf.clear249 = and i32 %bf.load248, 65535, !dbg !9413
  %cmp250 = icmp eq i32 %bf.clear249, 49, !dbg !9414
  br i1 %cmp250, label %land.lhs.true279, label %lor.lhs.false252, !dbg !9415

lor.lhs.false252:                                 ; preds = %land.lhs.true243
  %169 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !9416
  %u253 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %169, i32 0, i32 1, !dbg !9416
  %fld254 = bitcast %union.u* %u253 to [1 x %union.rtunion_def]*, !dbg !9416
  %arrayidx255 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld254, i64 0, i64 0, !dbg !9416
  %rt_rtx256 = bitcast %union.rtunion_def* %arrayidx255 to %struct.rtx_def**, !dbg !9416
  %170 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx256, align 8, !dbg !9416
  %171 = bitcast %struct.rtx_def* %170 to i32*, !dbg !9416
  %bf.load257 = load i32, i32* %171, align 8, !dbg !9416
  %bf.clear258 = and i32 %bf.load257, 65535, !dbg !9416
  %cmp259 = icmp eq i32 %bf.clear258, 50, !dbg !9417
  br i1 %cmp259, label %land.lhs.true279, label %lor.lhs.false261, !dbg !9418

lor.lhs.false261:                                 ; preds = %lor.lhs.false252
  %172 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !9419
  %u262 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %172, i32 0, i32 1, !dbg !9419
  %fld263 = bitcast %union.u* %u262 to [1 x %union.rtunion_def]*, !dbg !9419
  %arrayidx264 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld263, i64 0, i64 0, !dbg !9419
  %rt_rtx265 = bitcast %union.rtunion_def* %arrayidx264 to %struct.rtx_def**, !dbg !9419
  %173 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx265, align 8, !dbg !9419
  %174 = bitcast %struct.rtx_def* %173 to i32*, !dbg !9419
  %bf.load266 = load i32, i32* %174, align 8, !dbg !9419
  %bf.clear267 = and i32 %bf.load266, 65535, !dbg !9419
  %cmp268 = icmp eq i32 %bf.clear267, 52, !dbg !9420
  br i1 %cmp268, label %land.lhs.true279, label %lor.lhs.false270, !dbg !9421

lor.lhs.false270:                                 ; preds = %lor.lhs.false261
  %175 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !9422
  %u271 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %175, i32 0, i32 1, !dbg !9422
  %fld272 = bitcast %union.u* %u271 to [1 x %union.rtunion_def]*, !dbg !9422
  %arrayidx273 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld272, i64 0, i64 0, !dbg !9422
  %rt_rtx274 = bitcast %union.rtunion_def* %arrayidx273 to %struct.rtx_def**, !dbg !9422
  %176 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx274, align 8, !dbg !9422
  %177 = bitcast %struct.rtx_def* %176 to i32*, !dbg !9422
  %bf.load275 = load i32, i32* %177, align 8, !dbg !9422
  %bf.clear276 = and i32 %bf.load275, 65535, !dbg !9422
  %cmp277 = icmp eq i32 %bf.clear276, 65, !dbg !9423
  br i1 %cmp277, label %land.lhs.true279, label %if.end348, !dbg !9424

land.lhs.true279:                                 ; preds = %lor.lhs.false270, %lor.lhs.false261, %lor.lhs.false252, %land.lhs.true243
  %178 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !9425
  %179 = bitcast %struct.rtx_def* %178 to i32*, !dbg !9425
  %bf.load280 = load i32, i32* %179, align 8, !dbg !9425
  %bf.lshr281 = lshr i32 %bf.load280, 16, !dbg !9425
  %bf.clear282 = and i32 %bf.lshr281, 255, !dbg !9425
  %idxprom283 = zext i32 %bf.clear282 to i64, !dbg !9425
  %arrayidx284 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom283, !dbg !9425
  %180 = load i8, i8* %arrayidx284, align 1, !dbg !9425
  %conv285 = zext i8 %180 to i32, !dbg !9425
  %cmp286 = icmp eq i32 %conv285, 2, !dbg !9426
  br i1 %cmp286, label %land.lhs.true288, label %if.end348, !dbg !9427

land.lhs.true288:                                 ; preds = %land.lhs.true279
  %181 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !9428
  %u289 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %181, i32 0, i32 1, !dbg !9428
  %fld290 = bitcast %union.u* %u289 to [1 x %union.rtunion_def]*, !dbg !9428
  %arrayidx291 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld290, i64 0, i64 0, !dbg !9428
  %rt_rtx292 = bitcast %union.rtunion_def* %arrayidx291 to %struct.rtx_def**, !dbg !9428
  %182 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx292, align 8, !dbg !9428
  %183 = bitcast %struct.rtx_def* %182 to i32*, !dbg !9428
  %bf.load293 = load i32, i32* %183, align 8, !dbg !9428
  %bf.lshr294 = lshr i32 %bf.load293, 16, !dbg !9428
  %bf.clear295 = and i32 %bf.lshr294, 255, !dbg !9428
  %idxprom296 = zext i32 %bf.clear295 to i64, !dbg !9428
  %arrayidx297 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom296, !dbg !9428
  %184 = load i8, i8* %arrayidx297, align 1, !dbg !9428
  %conv298 = zext i8 %184 to i32, !dbg !9428
  %cmp299 = icmp eq i32 %conv298, 2, !dbg !9429
  br i1 %cmp299, label %land.lhs.true301, label %if.end348, !dbg !9430

land.lhs.true301:                                 ; preds = %land.lhs.true288
  %185 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !9431
  %186 = bitcast %struct.rtx_def* %185 to i32*, !dbg !9431
  %bf.load302 = load i32, i32* %186, align 8, !dbg !9431
  %bf.lshr303 = lshr i32 %bf.load302, 16, !dbg !9431
  %bf.clear304 = and i32 %bf.lshr303, 255, !dbg !9431
  %idxprom305 = zext i32 %bf.clear304 to i64, !dbg !9431
  %arrayidx306 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom305, !dbg !9431
  %187 = load i8, i8* %arrayidx306, align 1, !dbg !9431
  %conv307 = zext i8 %187 to i16, !dbg !9431
  %conv308 = zext i16 %conv307 to i32, !dbg !9431
  %188 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !9432
  %u309 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %188, i32 0, i32 1, !dbg !9432
  %fld310 = bitcast %union.u* %u309 to [1 x %union.rtunion_def]*, !dbg !9432
  %arrayidx311 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld310, i64 0, i64 0, !dbg !9432
  %rt_rtx312 = bitcast %union.rtunion_def* %arrayidx311 to %struct.rtx_def**, !dbg !9432
  %189 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx312, align 8, !dbg !9432
  %190 = bitcast %struct.rtx_def* %189 to i32*, !dbg !9432
  %bf.load313 = load i32, i32* %190, align 8, !dbg !9432
  %bf.lshr314 = lshr i32 %bf.load313, 16, !dbg !9432
  %bf.clear315 = and i32 %bf.lshr314, 255, !dbg !9432
  %idxprom316 = zext i32 %bf.clear315 to i64, !dbg !9432
  %arrayidx317 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom316, !dbg !9432
  %191 = load i8, i8* %arrayidx317, align 1, !dbg !9432
  %conv318 = zext i8 %191 to i16, !dbg !9432
  %conv319 = zext i16 %conv318 to i32, !dbg !9432
  %cmp320 = icmp slt i32 %conv308, %conv319, !dbg !9433
  br i1 %cmp320, label %land.lhs.true322, label %if.end348, !dbg !9434

land.lhs.true322:                                 ; preds = %land.lhs.true301
  %192 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !9435
  %call323 = call i32 @subreg_lowpart_p(%struct.rtx_def* %192), !dbg !9436
  %tobool324 = icmp ne i32 %call323, 0, !dbg !9436
  br i1 %tobool324, label %land.lhs.true325, label %if.end348, !dbg !9437

land.lhs.true325:                                 ; preds = %land.lhs.true322
  %193 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !9438
  %u326 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %193, i32 0, i32 1, !dbg !9438
  %fld327 = bitcast %union.u* %u326 to [1 x %union.rtunion_def]*, !dbg !9438
  %arrayidx328 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld327, i64 0, i64 0, !dbg !9438
  %rt_rtx329 = bitcast %union.rtunion_def* %arrayidx328 to %struct.rtx_def**, !dbg !9438
  %194 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !9439
  %195 = bitcast %struct.rtx_def* %194 to i8*, !dbg !9439
  %call330 = call i32 @for_each_rtx(%struct.rtx_def** %rt_rtx329, i32 (%struct.rtx_def**, i8*)* @use_narrower_mode_test, i8* %195), !dbg !9440
  %tobool331 = icmp ne i32 %call330, 0, !dbg !9440
  br i1 %tobool331, label %if.end348, label %if.then332, !dbg !9441

if.then332:                                       ; preds = %land.lhs.true325
  %196 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !9442
  %u333 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %196, i32 0, i32 1, !dbg !9442
  %fld334 = bitcast %union.u* %u333 to [1 x %union.rtunion_def]*, !dbg !9442
  %arrayidx335 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld334, i64 0, i64 0, !dbg !9442
  %rt_rtx336 = bitcast %union.rtunion_def* %arrayidx335 to %struct.rtx_def**, !dbg !9442
  %197 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx336, align 8, !dbg !9442
  %198 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !9443
  %199 = bitcast %struct.rtx_def* %198 to i32*, !dbg !9443
  %bf.load337 = load i32, i32* %199, align 8, !dbg !9443
  %bf.lshr338 = lshr i32 %bf.load337, 16, !dbg !9443
  %bf.clear339 = and i32 %bf.lshr338, 255, !dbg !9443
  %200 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !9444
  %u340 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %200, i32 0, i32 1, !dbg !9444
  %fld341 = bitcast %union.u* %u340 to [1 x %union.rtunion_def]*, !dbg !9444
  %arrayidx342 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld341, i64 0, i64 0, !dbg !9444
  %rt_rtx343 = bitcast %union.rtunion_def* %arrayidx342 to %struct.rtx_def**, !dbg !9444
  %201 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx343, align 8, !dbg !9444
  %202 = bitcast %struct.rtx_def* %201 to i32*, !dbg !9444
  %bf.load344 = load i32, i32* %202, align 8, !dbg !9444
  %bf.lshr345 = lshr i32 %bf.load344, 16, !dbg !9444
  %bf.clear346 = and i32 %bf.lshr345, 255, !dbg !9444
  %call347 = call %struct.rtx_def* @use_narrower_mode(%struct.rtx_def* %197, i32 %bf.clear339, i32 %bf.clear346), !dbg !9445
  store %struct.rtx_def* %call347, %struct.rtx_def** %retval, align 8, !dbg !9446
  br label %return, !dbg !9446

if.end348:                                        ; preds = %land.lhs.true325, %land.lhs.true322, %land.lhs.true301, %land.lhs.true288, %land.lhs.true279, %lor.lhs.false270, %land.lhs.true238, %finish_subreg
  %203 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !9447
  store %struct.rtx_def* %203, %struct.rtx_def** %retval, align 8, !dbg !9448
  br label %return, !dbg !9448

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !9449

sw.epilog:                                        ; preds = %sw.default
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !9450
  br label %return, !dbg !9450

return:                                           ; preds = %sw.epilog, %if.end348, %if.then332, %cond.end160, %cond.end129, %if.end55, %if.then24, %if.end12, %if.then9, %if.then2, %if.then
  %204 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !9451
  ret %struct.rtx_def* %204, !dbg !9451
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @compute_cfa_pointer(i64 %adjustment) #0 !dbg !9452 {
entry:
  %adjustment.addr = alloca i64, align 8
  %cfa = alloca %struct.rtx_def*, align 8
  store i64 %adjustment, i64* %adjustment.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %adjustment.addr, metadata !9455, metadata !DIExpression()), !dbg !9456
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %cfa, metadata !9457, metadata !DIExpression()), !dbg !9458
  %0 = load i32, i32* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i32 0, i32 3, i32 2), align 8, !dbg !9459
  %add = add nsw i32 0, %0, !dbg !9459
  %conv = sext i32 %add to i64, !dbg !9459
  %1 = load i64, i64* %adjustment.addr, align 8, !dbg !9460
  %sub = sub nsw i64 %1, %conv, !dbg !9460
  store i64 %sub, i64* %adjustment.addr, align 8, !dbg !9460
  %2 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 5), align 8, !dbg !9461
  %3 = load i64, i64* %adjustment.addr, align 8, !dbg !9462
  %call = call %struct.rtx_def* @plus_constant(%struct.rtx_def* %2, i64 %3), !dbg !9463
  store %struct.rtx_def* %call, %struct.rtx_def** %cfa, align 8, !dbg !9464
  %4 = load %struct.rtx_def*, %struct.rtx_def** %cfa, align 8, !dbg !9465
  ret %struct.rtx_def* %4, !dbg !9466
}

declare dso_local %struct.rtx_def* @avoid_constant_pool_reference(%struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @alloc_EXPR_LIST(i32, %struct.rtx_def*, %struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @simplify_gen_subreg(i32, %struct.rtx_def*, i32, i32) #2

declare dso_local %struct.rtx_def* @gen_rtx_fmt_ei_stat(i32, i32, %struct.rtx_def*, i32) #2

declare dso_local i32 @subreg_lowpart_p(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @use_narrower_mode_test(%struct.rtx_def** %loc, i8* %data) #0 !dbg !9467 {
entry:
  %retval = alloca i32, align 4
  %loc.addr = alloca %struct.rtx_def**, align 8
  %data.addr = alloca i8*, align 8
  %subreg = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def** %loc, %struct.rtx_def*** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %loc.addr, metadata !9468, metadata !DIExpression()), !dbg !9469
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !9470, metadata !DIExpression()), !dbg !9471
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %subreg, metadata !9472, metadata !DIExpression()), !dbg !9473
  %0 = load i8*, i8** %data.addr, align 8, !dbg !9474
  %1 = bitcast i8* %0 to %struct.rtx_def*, !dbg !9475
  store %struct.rtx_def* %1, %struct.rtx_def** %subreg, align 8, !dbg !9473
  %2 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !9476
  %3 = load %struct.rtx_def*, %struct.rtx_def** %2, align 8, !dbg !9476
  %4 = bitcast %struct.rtx_def* %3 to i32*, !dbg !9476
  %bf.load = load i32, i32* %4, align 8, !dbg !9476
  %bf.clear = and i32 %bf.load, 65535, !dbg !9476
  %idxprom = sext i32 %bf.clear to i64, !dbg !9476
  %arrayidx = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !9476
  %5 = load i32, i32* %arrayidx, align 4, !dbg !9476
  %cmp = icmp eq i32 %5, 9, !dbg !9476
  br i1 %cmp, label %if.then, label %if.end, !dbg !9478

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !9479
  br label %return, !dbg !9479

if.end:                                           ; preds = %entry
  %6 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !9480
  %7 = load %struct.rtx_def*, %struct.rtx_def** %6, align 8, !dbg !9480
  %8 = bitcast %struct.rtx_def* %7 to i32*, !dbg !9480
  %bf.load1 = load i32, i32* %8, align 8, !dbg !9480
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !9480
  switch i32 %bf.clear2, label %sw.default [
    i32 37, label %sw.bb
    i32 49, label %sw.bb8
    i32 50, label %sw.bb8
    i32 52, label %sw.bb8
    i32 65, label %sw.bb9
  ], !dbg !9481

sw.bb:                                            ; preds = %if.end
  %9 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !9482
  %10 = load %struct.rtx_def*, %struct.rtx_def** %9, align 8, !dbg !9485
  %11 = load %struct.rtx_def*, %struct.rtx_def** %subreg, align 8, !dbg !9486
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1, !dbg !9486
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !9486
  %arrayidx3 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !9486
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**, !dbg !9486
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !9486
  %13 = bitcast %struct.rtx_def* %12 to i32*, !dbg !9486
  %bf.load4 = load i32, i32* %13, align 8, !dbg !9486
  %bf.lshr = lshr i32 %bf.load4, 16, !dbg !9486
  %bf.clear5 = and i32 %bf.lshr, 255, !dbg !9486
  %call = call %struct.cselib_val_struct* @cselib_lookup(%struct.rtx_def* %10, i32 %bf.clear5, i32 0), !dbg !9487
  %tobool = icmp ne %struct.cselib_val_struct* %call, null, !dbg !9487
  br i1 %tobool, label %if.then6, label %if.end7, !dbg !9488

if.then6:                                         ; preds = %sw.bb
  store i32 1, i32* %retval, align 4, !dbg !9489
  br label %return, !dbg !9489

if.end7:                                          ; preds = %sw.bb
  store i32 -1, i32* %retval, align 4, !dbg !9490
  br label %return, !dbg !9490

sw.bb8:                                           ; preds = %if.end, %if.end, %if.end
  store i32 0, i32* %retval, align 4, !dbg !9491
  br label %return, !dbg !9491

sw.bb9:                                           ; preds = %if.end
  %14 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !9492
  %15 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8, !dbg !9492
  %u10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1, !dbg !9492
  %fld11 = bitcast %union.u* %u10 to [1 x %union.rtunion_def]*, !dbg !9492
  %arrayidx12 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld11, i64 0, i64 0, !dbg !9492
  %rt_rtx13 = bitcast %union.rtunion_def* %arrayidx12 to %struct.rtx_def**, !dbg !9492
  %16 = load i8*, i8** %data.addr, align 8, !dbg !9494
  %call14 = call i32 @for_each_rtx(%struct.rtx_def** %rt_rtx13, i32 (%struct.rtx_def**, i8*)* @use_narrower_mode_test, i8* %16), !dbg !9495
  %tobool15 = icmp ne i32 %call14, 0, !dbg !9495
  br i1 %tobool15, label %if.then16, label %if.else, !dbg !9496

if.then16:                                        ; preds = %sw.bb9
  store i32 1, i32* %retval, align 4, !dbg !9497
  br label %return, !dbg !9497

if.else:                                          ; preds = %sw.bb9
  store i32 -1, i32* %retval, align 4, !dbg !9498
  br label %return, !dbg !9498

sw.default:                                       ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !9499
  br label %return, !dbg !9499

return:                                           ; preds = %sw.default, %if.else, %if.then16, %sw.bb8, %if.end7, %if.then6, %if.then
  %17 = load i32, i32* %retval, align 4, !dbg !9500
  ret i32 %17, !dbg !9500
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @use_narrower_mode(%struct.rtx_def* %x, i32 %mode, i32 %wmode) #0 !dbg !9501 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %mode.addr = alloca i32, align 4
  %wmode.addr = alloca i32, align 4
  %op0 = alloca %struct.rtx_def*, align 8
  %op1 = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !9504, metadata !DIExpression()), !dbg !9505
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !9506, metadata !DIExpression()), !dbg !9507
  store i32 %wmode, i32* %wmode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %wmode.addr, metadata !9508, metadata !DIExpression()), !dbg !9509
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op0, metadata !9510, metadata !DIExpression()), !dbg !9511
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op1, metadata !9512, metadata !DIExpression()), !dbg !9513
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9514
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !9514
  %bf.load = load i32, i32* %1, align 8, !dbg !9514
  %bf.clear = and i32 %bf.load, 65535, !dbg !9514
  %idxprom = sext i32 %bf.clear to i64, !dbg !9514
  %arrayidx = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !9514
  %2 = load i32, i32* %arrayidx, align 4, !dbg !9514
  %cmp = icmp eq i32 %2, 9, !dbg !9514
  br i1 %cmp, label %if.then, label %if.end, !dbg !9516

if.then:                                          ; preds = %entry
  %3 = load i32, i32* %mode.addr, align 4, !dbg !9517
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9518
  %5 = load i32, i32* %wmode.addr, align 4, !dbg !9519
  %call = call %struct.rtx_def* @lowpart_subreg(i32 %3, %struct.rtx_def* %4, i32 %5), !dbg !9520
  store %struct.rtx_def* %call, %struct.rtx_def** %retval, align 8, !dbg !9521
  br label %return, !dbg !9521

if.end:                                           ; preds = %entry
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9522
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !9522
  %bf.load1 = load i32, i32* %7, align 8, !dbg !9522
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !9522
  switch i32 %bf.clear2, label %sw.default [
    i32 37, label %sw.bb
    i32 49, label %sw.bb4
    i32 50, label %sw.bb4
    i32 52, label %sw.bb4
    i32 65, label %sw.bb15
  ], !dbg !9523

sw.bb:                                            ; preds = %if.end
  %8 = load i32, i32* %mode.addr, align 4, !dbg !9524
  %9 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9526
  %10 = load i32, i32* %wmode.addr, align 4, !dbg !9527
  %call3 = call %struct.rtx_def* @lowpart_subreg(i32 %8, %struct.rtx_def* %9, i32 %10), !dbg !9528
  store %struct.rtx_def* %call3, %struct.rtx_def** %retval, align 8, !dbg !9529
  br label %return, !dbg !9529

sw.bb4:                                           ; preds = %if.end, %if.end, %if.end
  %11 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9530
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1, !dbg !9530
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !9530
  %arrayidx5 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !9530
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx5 to %struct.rtx_def**, !dbg !9530
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !9530
  %13 = load i32, i32* %mode.addr, align 4, !dbg !9531
  %14 = load i32, i32* %wmode.addr, align 4, !dbg !9532
  %call6 = call %struct.rtx_def* @use_narrower_mode(%struct.rtx_def* %12, i32 %13, i32 %14), !dbg !9533
  store %struct.rtx_def* %call6, %struct.rtx_def** %op0, align 8, !dbg !9534
  %15 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9535
  %u7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1, !dbg !9535
  %fld8 = bitcast %union.u* %u7 to [1 x %union.rtunion_def]*, !dbg !9535
  %arrayidx9 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld8, i64 0, i64 1, !dbg !9535
  %rt_rtx10 = bitcast %union.rtunion_def* %arrayidx9 to %struct.rtx_def**, !dbg !9535
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx10, align 8, !dbg !9535
  %17 = load i32, i32* %mode.addr, align 4, !dbg !9536
  %18 = load i32, i32* %wmode.addr, align 4, !dbg !9537
  %call11 = call %struct.rtx_def* @use_narrower_mode(%struct.rtx_def* %16, i32 %17, i32 %18), !dbg !9538
  store %struct.rtx_def* %call11, %struct.rtx_def** %op1, align 8, !dbg !9539
  %19 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9540
  %20 = bitcast %struct.rtx_def* %19 to i32*, !dbg !9540
  %bf.load12 = load i32, i32* %20, align 8, !dbg !9540
  %bf.clear13 = and i32 %bf.load12, 65535, !dbg !9540
  %21 = load i32, i32* %mode.addr, align 4, !dbg !9541
  %22 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !9542
  %23 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !9543
  %call14 = call %struct.rtx_def* @simplify_gen_binary(i32 %bf.clear13, i32 %21, %struct.rtx_def* %22, %struct.rtx_def* %23), !dbg !9544
  store %struct.rtx_def* %call14, %struct.rtx_def** %retval, align 8, !dbg !9545
  br label %return, !dbg !9545

sw.bb15:                                          ; preds = %if.end
  %24 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9546
  %u16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i32 0, i32 1, !dbg !9546
  %fld17 = bitcast %union.u* %u16 to [1 x %union.rtunion_def]*, !dbg !9546
  %arrayidx18 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld17, i64 0, i64 0, !dbg !9546
  %rt_rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**, !dbg !9546
  %25 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx19, align 8, !dbg !9546
  %26 = load i32, i32* %mode.addr, align 4, !dbg !9547
  %27 = load i32, i32* %wmode.addr, align 4, !dbg !9548
  %call20 = call %struct.rtx_def* @use_narrower_mode(%struct.rtx_def* %25, i32 %26, i32 %27), !dbg !9549
  store %struct.rtx_def* %call20, %struct.rtx_def** %op0, align 8, !dbg !9550
  %28 = load i32, i32* %mode.addr, align 4, !dbg !9551
  %29 = load %struct.rtx_def*, %struct.rtx_def** %op0, align 8, !dbg !9552
  %30 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !9553
  %u21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i32 0, i32 1, !dbg !9553
  %fld22 = bitcast %union.u* %u21 to [1 x %union.rtunion_def]*, !dbg !9553
  %arrayidx23 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld22, i64 0, i64 1, !dbg !9553
  %rt_rtx24 = bitcast %union.rtunion_def* %arrayidx23 to %struct.rtx_def**, !dbg !9553
  %31 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx24, align 8, !dbg !9553
  %call25 = call %struct.rtx_def* @simplify_gen_binary(i32 65, i32 %28, %struct.rtx_def* %29, %struct.rtx_def* %31), !dbg !9554
  store %struct.rtx_def* %call25, %struct.rtx_def** %retval, align 8, !dbg !9555
  br label %return, !dbg !9555

sw.default:                                       ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 787, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !9556
  br label %sw.epilog, !dbg !9557

sw.epilog:                                        ; preds = %sw.default
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !9558
  br label %return, !dbg !9558

return:                                           ; preds = %sw.epilog, %sw.bb15, %sw.bb4, %sw.bb, %if.then
  %32 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !9559
  ret %struct.rtx_def* %32, !dbg !9559
}

declare dso_local %struct.rtx_def* @plus_constant(%struct.rtx_def*, i64) #2

declare dso_local %struct.rtx_def* @lowpart_subreg(i32, %struct.rtx_def*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @vt_get_decl_and_offset(%struct.rtx_def* %rtl, %union.tree_node** %declp, i64* %offsetp) #0 !dbg !9560 {
entry:
  %retval = alloca i8, align 1
  %rtl.addr = alloca %struct.rtx_def*, align 8
  %declp.addr = alloca %union.tree_node**, align 8
  %offsetp.addr = alloca i64*, align 8
  store %struct.rtx_def* %rtl, %struct.rtx_def** %rtl.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %rtl.addr, metadata !9563, metadata !DIExpression()), !dbg !9564
  store %union.tree_node** %declp, %union.tree_node*** %declp.addr, align 8
  call void @llvm.dbg.declare(metadata %union.tree_node*** %declp.addr, metadata !9565, metadata !DIExpression()), !dbg !9566
  store i64* %offsetp, i64** %offsetp.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %offsetp.addr, metadata !9567, metadata !DIExpression()), !dbg !9568
  %0 = load %struct.rtx_def*, %struct.rtx_def** %rtl.addr, align 8, !dbg !9569
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !9569
  %bf.load = load i32, i32* %1, align 8, !dbg !9569
  %bf.clear = and i32 %bf.load, 65535, !dbg !9569
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !9569
  br i1 %cmp, label %if.then, label %if.else, !dbg !9571

if.then:                                          ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rtl.addr, align 8, !dbg !9572
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1, !dbg !9572
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !9572
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 2, !dbg !9572
  %rt_reg = bitcast %union.rtunion_def* %arrayidx to %struct.reg_attrs**, !dbg !9572
  %3 = load %struct.reg_attrs*, %struct.reg_attrs** %rt_reg, align 8, !dbg !9572
  %tobool = icmp ne %struct.reg_attrs* %3, null, !dbg !9572
  br i1 %tobool, label %if.then1, label %if.end, !dbg !9575

if.then1:                                         ; preds = %if.then
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rtl.addr, align 8, !dbg !9576
  %u2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1, !dbg !9576
  %fld3 = bitcast %union.u* %u2 to [1 x %union.rtunion_def]*, !dbg !9576
  %arrayidx4 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3, i64 0, i64 2, !dbg !9576
  %rt_reg5 = bitcast %union.rtunion_def* %arrayidx4 to %struct.reg_attrs**, !dbg !9576
  %5 = load %struct.reg_attrs*, %struct.reg_attrs** %rt_reg5, align 8, !dbg !9576
  %cmp6 = icmp eq %struct.reg_attrs* %5, null, !dbg !9576
  br i1 %cmp6, label %cond.true, label %cond.false, !dbg !9576

cond.true:                                        ; preds = %if.then1
  br label %cond.end, !dbg !9576

cond.false:                                       ; preds = %if.then1
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rtl.addr, align 8, !dbg !9576
  %u7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1, !dbg !9576
  %fld8 = bitcast %union.u* %u7 to [1 x %union.rtunion_def]*, !dbg !9576
  %arrayidx9 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld8, i64 0, i64 2, !dbg !9576
  %rt_reg10 = bitcast %union.rtunion_def* %arrayidx9 to %struct.reg_attrs**, !dbg !9576
  %7 = load %struct.reg_attrs*, %struct.reg_attrs** %rt_reg10, align 8, !dbg !9576
  %decl = getelementptr inbounds %struct.reg_attrs, %struct.reg_attrs* %7, i32 0, i32 0, !dbg !9576
  %8 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !9576
  br label %cond.end, !dbg !9576

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %union.tree_node* [ null, %cond.true ], [ %8, %cond.false ], !dbg !9576
  %9 = load %union.tree_node**, %union.tree_node*** %declp.addr, align 8, !dbg !9578
  store %union.tree_node* %cond, %union.tree_node** %9, align 8, !dbg !9579
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rtl.addr, align 8, !dbg !9580
  %u11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1, !dbg !9580
  %fld12 = bitcast %union.u* %u11 to [1 x %union.rtunion_def]*, !dbg !9580
  %arrayidx13 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld12, i64 0, i64 2, !dbg !9580
  %rt_reg14 = bitcast %union.rtunion_def* %arrayidx13 to %struct.reg_attrs**, !dbg !9580
  %11 = load %struct.reg_attrs*, %struct.reg_attrs** %rt_reg14, align 8, !dbg !9580
  %cmp15 = icmp eq %struct.reg_attrs* %11, null, !dbg !9580
  br i1 %cmp15, label %cond.true16, label %cond.false17, !dbg !9580

cond.true16:                                      ; preds = %cond.end
  br label %cond.end22, !dbg !9580

cond.false17:                                     ; preds = %cond.end
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rtl.addr, align 8, !dbg !9580
  %u18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1, !dbg !9580
  %fld19 = bitcast %union.u* %u18 to [1 x %union.rtunion_def]*, !dbg !9580
  %arrayidx20 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld19, i64 0, i64 2, !dbg !9580
  %rt_reg21 = bitcast %union.rtunion_def* %arrayidx20 to %struct.reg_attrs**, !dbg !9580
  %13 = load %struct.reg_attrs*, %struct.reg_attrs** %rt_reg21, align 8, !dbg !9580
  %offset = getelementptr inbounds %struct.reg_attrs, %struct.reg_attrs* %13, i32 0, i32 1, !dbg !9580
  %14 = load i64, i64* %offset, align 8, !dbg !9580
  br label %cond.end22, !dbg !9580

cond.end22:                                       ; preds = %cond.false17, %cond.true16
  %cond23 = phi i64 [ 0, %cond.true16 ], [ %14, %cond.false17 ], !dbg !9580
  %15 = load i64*, i64** %offsetp.addr, align 8, !dbg !9581
  store i64 %cond23, i64* %15, align 8, !dbg !9582
  store i8 1, i8* %retval, align 1, !dbg !9583
  br label %return, !dbg !9583

if.end:                                           ; preds = %if.then
  br label %if.end81, !dbg !9584

if.else:                                          ; preds = %entry
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rtl.addr, align 8, !dbg !9585
  %17 = bitcast %struct.rtx_def* %16 to i32*, !dbg !9585
  %bf.load24 = load i32, i32* %17, align 8, !dbg !9585
  %bf.clear25 = and i32 %bf.load24, 65535, !dbg !9585
  %cmp26 = icmp eq i32 %bf.clear25, 43, !dbg !9585
  br i1 %cmp26, label %if.then27, label %if.end80, !dbg !9587

if.then27:                                        ; preds = %if.else
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rtl.addr, align 8, !dbg !9588
  %u28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1, !dbg !9588
  %fld29 = bitcast %union.u* %u28 to [1 x %union.rtunion_def]*, !dbg !9588
  %arrayidx30 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld29, i64 0, i64 1, !dbg !9588
  %rt_mem = bitcast %union.rtunion_def* %arrayidx30 to %struct.mem_attrs**, !dbg !9588
  %19 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !9588
  %tobool31 = icmp ne %struct.mem_attrs* %19, null, !dbg !9588
  br i1 %tobool31, label %if.then32, label %if.end79, !dbg !9591

if.then32:                                        ; preds = %if.then27
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rtl.addr, align 8, !dbg !9592
  %u33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1, !dbg !9592
  %fld34 = bitcast %union.u* %u33 to [1 x %union.rtunion_def]*, !dbg !9592
  %arrayidx35 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld34, i64 0, i64 1, !dbg !9592
  %rt_mem36 = bitcast %union.rtunion_def* %arrayidx35 to %struct.mem_attrs**, !dbg !9592
  %21 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem36, align 8, !dbg !9592
  %cmp37 = icmp eq %struct.mem_attrs* %21, null, !dbg !9592
  br i1 %cmp37, label %cond.true38, label %cond.false39, !dbg !9592

cond.true38:                                      ; preds = %if.then32
  br label %cond.end44, !dbg !9592

cond.false39:                                     ; preds = %if.then32
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rtl.addr, align 8, !dbg !9592
  %u40 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1, !dbg !9592
  %fld41 = bitcast %union.u* %u40 to [1 x %union.rtunion_def]*, !dbg !9592
  %arrayidx42 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld41, i64 0, i64 1, !dbg !9592
  %rt_mem43 = bitcast %union.rtunion_def* %arrayidx42 to %struct.mem_attrs**, !dbg !9592
  %23 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem43, align 8, !dbg !9592
  %expr = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %23, i32 0, i32 0, !dbg !9592
  %24 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !9592
  br label %cond.end44, !dbg !9592

cond.end44:                                       ; preds = %cond.false39, %cond.true38
  %cond45 = phi %union.tree_node* [ null, %cond.true38 ], [ %24, %cond.false39 ], !dbg !9592
  %25 = load %union.tree_node**, %union.tree_node*** %declp.addr, align 8, !dbg !9594
  store %union.tree_node* %cond45, %union.tree_node** %25, align 8, !dbg !9595
  %26 = load %struct.rtx_def*, %struct.rtx_def** %rtl.addr, align 8, !dbg !9596
  %u46 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1, !dbg !9596
  %fld47 = bitcast %union.u* %u46 to [1 x %union.rtunion_def]*, !dbg !9596
  %arrayidx48 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld47, i64 0, i64 1, !dbg !9596
  %rt_mem49 = bitcast %union.rtunion_def* %arrayidx48 to %struct.mem_attrs**, !dbg !9596
  %27 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem49, align 8, !dbg !9596
  %cmp50 = icmp eq %struct.mem_attrs* %27, null, !dbg !9596
  br i1 %cmp50, label %cond.true51, label %cond.false52, !dbg !9596

cond.true51:                                      ; preds = %cond.end44
  br i1 false, label %cond.true59, label %cond.false76, !dbg !9596

cond.false52:                                     ; preds = %cond.end44
  %28 = load %struct.rtx_def*, %struct.rtx_def** %rtl.addr, align 8, !dbg !9596
  %u53 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i32 0, i32 1, !dbg !9596
  %fld54 = bitcast %union.u* %u53 to [1 x %union.rtunion_def]*, !dbg !9596
  %arrayidx55 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld54, i64 0, i64 1, !dbg !9596
  %rt_mem56 = bitcast %union.rtunion_def* %arrayidx55 to %struct.mem_attrs**, !dbg !9596
  %29 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem56, align 8, !dbg !9596
  %offset57 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %29, i32 0, i32 1, !dbg !9596
  %30 = load %struct.rtx_def*, %struct.rtx_def** %offset57, align 8, !dbg !9596
  %tobool58 = icmp ne %struct.rtx_def* %30, null, !dbg !9596
  br i1 %tobool58, label %cond.true59, label %cond.false76, !dbg !9596

cond.true59:                                      ; preds = %cond.false52, %cond.true51
  %31 = load %struct.rtx_def*, %struct.rtx_def** %rtl.addr, align 8, !dbg !9596
  %u60 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i32 0, i32 1, !dbg !9596
  %fld61 = bitcast %union.u* %u60 to [1 x %union.rtunion_def]*, !dbg !9596
  %arrayidx62 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld61, i64 0, i64 1, !dbg !9596
  %rt_mem63 = bitcast %union.rtunion_def* %arrayidx62 to %struct.mem_attrs**, !dbg !9596
  %32 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem63, align 8, !dbg !9596
  %cmp64 = icmp eq %struct.mem_attrs* %32, null, !dbg !9596
  br i1 %cmp64, label %cond.true65, label %cond.false66, !dbg !9596

cond.true65:                                      ; preds = %cond.true59
  br label %cond.end72, !dbg !9596

cond.false66:                                     ; preds = %cond.true59
  %33 = load %struct.rtx_def*, %struct.rtx_def** %rtl.addr, align 8, !dbg !9596
  %u67 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i32 0, i32 1, !dbg !9596
  %fld68 = bitcast %union.u* %u67 to [1 x %union.rtunion_def]*, !dbg !9596
  %arrayidx69 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld68, i64 0, i64 1, !dbg !9596
  %rt_mem70 = bitcast %union.rtunion_def* %arrayidx69 to %struct.mem_attrs**, !dbg !9596
  %34 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem70, align 8, !dbg !9596
  %offset71 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %34, i32 0, i32 1, !dbg !9596
  %35 = load %struct.rtx_def*, %struct.rtx_def** %offset71, align 8, !dbg !9596
  br label %cond.end72, !dbg !9596

cond.end72:                                       ; preds = %cond.false66, %cond.true65
  %cond73 = phi %struct.rtx_def* [ null, %cond.true65 ], [ %35, %cond.false66 ], !dbg !9596
  %u74 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond73, i32 0, i32 1, !dbg !9596
  %hwint = bitcast %union.u* %u74 to [1 x i64]*, !dbg !9596
  %arrayidx75 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 0, !dbg !9596
  %36 = load i64, i64* %arrayidx75, align 8, !dbg !9596
  br label %cond.end77, !dbg !9596

cond.false76:                                     ; preds = %cond.false52, %cond.true51
  br label %cond.end77, !dbg !9596

cond.end77:                                       ; preds = %cond.false76, %cond.end72
  %cond78 = phi i64 [ %36, %cond.end72 ], [ 0, %cond.false76 ], !dbg !9596
  %37 = load i64*, i64** %offsetp.addr, align 8, !dbg !9597
  store i64 %cond78, i64* %37, align 8, !dbg !9598
  store i8 1, i8* %retval, align 1, !dbg !9599
  br label %return, !dbg !9599

if.end79:                                         ; preds = %if.then27
  br label %if.end80, !dbg !9600

if.end80:                                         ; preds = %if.end79, %if.else
  br label %if.end81

if.end81:                                         ; preds = %if.end80, %if.end
  store i8 0, i8* %retval, align 1, !dbg !9601
  br label %return, !dbg !9601

return:                                           ; preds = %if.end81, %cond.end77, %cond.end22
  %38 = load i8, i8* %retval, align 1, !dbg !9602
  ret i8 %38, !dbg !9602
}

declare dso_local %struct.rtx_def* @gen_rtx_MEM(i32, %struct.rtx_def*) #2

declare dso_local %union.tree_node* @get_spill_slot_decl(i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal void @VEC_micro_operation_heap_free(%struct.VEC_micro_operation_heap** %vec_) #0 !dbg !9603 {
entry:
  %vec_.addr = alloca %struct.VEC_micro_operation_heap**, align 8
  store %struct.VEC_micro_operation_heap** %vec_, %struct.VEC_micro_operation_heap*** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_micro_operation_heap*** %vec_.addr, metadata !9606, metadata !DIExpression()), !dbg !9607
  %0 = load %struct.VEC_micro_operation_heap**, %struct.VEC_micro_operation_heap*** %vec_.addr, align 8, !dbg !9608
  %1 = load %struct.VEC_micro_operation_heap*, %struct.VEC_micro_operation_heap** %0, align 8, !dbg !9608
  %tobool = icmp ne %struct.VEC_micro_operation_heap* %1, null, !dbg !9608
  br i1 %tobool, label %if.then, label %if.end, !dbg !9607

if.then:                                          ; preds = %entry
  %2 = load %struct.VEC_micro_operation_heap**, %struct.VEC_micro_operation_heap*** %vec_.addr, align 8, !dbg !9608
  %3 = load %struct.VEC_micro_operation_heap*, %struct.VEC_micro_operation_heap** %2, align 8, !dbg !9608
  %4 = bitcast %struct.VEC_micro_operation_heap* %3 to i8*, !dbg !9608
  call void @free(i8* %4), !dbg !9608
  br label %if.end, !dbg !9608

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.VEC_micro_operation_heap**, %struct.VEC_micro_operation_heap*** %vec_.addr, align 8, !dbg !9607
  store %struct.VEC_micro_operation_heap* null, %struct.VEC_micro_operation_heap** %5, align 8, !dbg !9607
  ret void, !dbg !9607
}

; Function Attrs: noinline nounwind uwtable
define internal void @dataflow_set_destroy(%struct.dataflow_set_def* %set) #0 !dbg !9610 {
entry:
  %set.addr = alloca %struct.dataflow_set_def*, align 8
  %i = alloca i32, align 4
  store %struct.dataflow_set_def* %set, %struct.dataflow_set_def** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %set.addr, metadata !9611, metadata !DIExpression()), !dbg !9612
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9613, metadata !DIExpression()), !dbg !9614
  store i32 0, i32* %i, align 4, !dbg !9615
  br label %for.cond, !dbg !9617

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !9618
  %cmp = icmp slt i32 %0, 53, !dbg !9620
  br i1 %cmp, label %for.body, label %for.end, !dbg !9621

for.body:                                         ; preds = %for.cond
  %1 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !9622
  %regs = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %1, i32 0, i32 1, !dbg !9623
  %2 = load i32, i32* %i, align 4, !dbg !9624
  %idxprom = sext i32 %2 to i64, !dbg !9622
  %arrayidx = getelementptr inbounds [53 x %struct.attrs_def*], [53 x %struct.attrs_def*]* %regs, i64 0, i64 %idxprom, !dbg !9622
  call void @attrs_list_clear(%struct.attrs_def** %arrayidx), !dbg !9625
  br label %for.inc, !dbg !9625

for.inc:                                          ; preds = %for.body
  %3 = load i32, i32* %i, align 4, !dbg !9626
  %inc = add nsw i32 %3, 1, !dbg !9626
  store i32 %inc, i32* %i, align 4, !dbg !9626
  br label %for.cond, !dbg !9627, !llvm.loop !9628

for.end:                                          ; preds = %for.cond
  %4 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !9630
  %vars = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %4, i32 0, i32 2, !dbg !9631
  %5 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars, align 8, !dbg !9631
  call void @shared_hash_destroy(%struct.shared_hash_def* %5), !dbg !9632
  %6 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !9633
  %vars1 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %6, i32 0, i32 2, !dbg !9634
  store %struct.shared_hash_def* null, %struct.shared_hash_def** %vars1, align 8, !dbg !9635
  ret void, !dbg !9636
}

declare dso_local void @free_aux_for_blocks() #2

declare dso_local void @htab_delete(%struct.htab*) #2

declare dso_local void @free_alloc_pool(%struct.alloc_pool_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @VEC_rtx_heap_free(%struct.VEC_rtx_heap** %vec_) #0 !dbg !9637 {
entry:
  %vec_.addr = alloca %struct.VEC_rtx_heap**, align 8
  store %struct.VEC_rtx_heap** %vec_, %struct.VEC_rtx_heap*** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_rtx_heap*** %vec_.addr, metadata !9640, metadata !DIExpression()), !dbg !9641
  %0 = load %struct.VEC_rtx_heap**, %struct.VEC_rtx_heap*** %vec_.addr, align 8, !dbg !9642
  %1 = load %struct.VEC_rtx_heap*, %struct.VEC_rtx_heap** %0, align 8, !dbg !9642
  %tobool = icmp ne %struct.VEC_rtx_heap* %1, null, !dbg !9642
  br i1 %tobool, label %if.then, label %if.end, !dbg !9641

if.then:                                          ; preds = %entry
  %2 = load %struct.VEC_rtx_heap**, %struct.VEC_rtx_heap*** %vec_.addr, align 8, !dbg !9642
  %3 = load %struct.VEC_rtx_heap*, %struct.VEC_rtx_heap** %2, align 8, !dbg !9642
  %4 = bitcast %struct.VEC_rtx_heap* %3 to i8*, !dbg !9642
  call void @free(i8* %4), !dbg !9642
  br label %if.end, !dbg !9642

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.VEC_rtx_heap**, %struct.VEC_rtx_heap*** %vec_.addr, align 8, !dbg !9641
  store %struct.VEC_rtx_heap* null, %struct.VEC_rtx_heap** %5, align 8, !dbg !9641
  ret void, !dbg !9641
}

declare dso_local void @cselib_finish() #2

declare dso_local void @bitmap_obstack_free(%struct.bitmap_head_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @attrs_list_clear(%struct.attrs_def** %listp) #0 !dbg !9644 {
entry:
  %listp.addr = alloca %struct.attrs_def**, align 8
  %list = alloca %struct.attrs_def*, align 8
  %next = alloca %struct.attrs_def*, align 8
  store %struct.attrs_def** %listp, %struct.attrs_def*** %listp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.attrs_def*** %listp.addr, metadata !9645, metadata !DIExpression()), !dbg !9646
  call void @llvm.dbg.declare(metadata %struct.attrs_def** %list, metadata !9647, metadata !DIExpression()), !dbg !9648
  call void @llvm.dbg.declare(metadata %struct.attrs_def** %next, metadata !9649, metadata !DIExpression()), !dbg !9650
  %0 = load %struct.attrs_def**, %struct.attrs_def*** %listp.addr, align 8, !dbg !9651
  %1 = load %struct.attrs_def*, %struct.attrs_def** %0, align 8, !dbg !9653
  store %struct.attrs_def* %1, %struct.attrs_def** %list, align 8, !dbg !9654
  br label %for.cond, !dbg !9655

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !9656
  %tobool = icmp ne %struct.attrs_def* %2, null, !dbg !9658
  br i1 %tobool, label %for.body, label %for.end, !dbg !9658

for.body:                                         ; preds = %for.cond
  %3 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !9659
  %next1 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %3, i32 0, i32 0, !dbg !9661
  %4 = load %struct.attrs_def*, %struct.attrs_def** %next1, align 8, !dbg !9661
  store %struct.attrs_def* %4, %struct.attrs_def** %next, align 8, !dbg !9662
  %5 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @attrs_pool, align 8, !dbg !9663
  %6 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !9664
  %7 = bitcast %struct.attrs_def* %6 to i8*, !dbg !9664
  call void @pool_free(%struct.alloc_pool_def* %5, i8* %7), !dbg !9665
  br label %for.inc, !dbg !9666

for.inc:                                          ; preds = %for.body
  %8 = load %struct.attrs_def*, %struct.attrs_def** %next, align 8, !dbg !9667
  store %struct.attrs_def* %8, %struct.attrs_def** %list, align 8, !dbg !9668
  br label %for.cond, !dbg !9669, !llvm.loop !9670

for.end:                                          ; preds = %for.cond
  %9 = load %struct.attrs_def**, %struct.attrs_def*** %listp.addr, align 8, !dbg !9672
  store %struct.attrs_def* null, %struct.attrs_def** %9, align 8, !dbg !9673
  ret void, !dbg !9674
}

; Function Attrs: noinline nounwind uwtable
define internal void @shared_hash_destroy(%struct.shared_hash_def* %vars) #0 !dbg !9675 {
entry:
  %vars.addr = alloca %struct.shared_hash_def*, align 8
  store %struct.shared_hash_def* %vars, %struct.shared_hash_def** %vars.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.shared_hash_def** %vars.addr, metadata !9678, metadata !DIExpression()), !dbg !9679
  %0 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars.addr, align 8, !dbg !9680
  %refcount = getelementptr inbounds %struct.shared_hash_def, %struct.shared_hash_def* %0, i32 0, i32 0, !dbg !9680
  %1 = load i32, i32* %refcount, align 8, !dbg !9680
  %cmp = icmp sgt i32 %1, 0, !dbg !9680
  br i1 %cmp, label %cond.false, label %cond.true, !dbg !9680

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 1378, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !9680
  br label %cond.end, !dbg !9680

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !9680

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !9680
  %2 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars.addr, align 8, !dbg !9681
  %refcount1 = getelementptr inbounds %struct.shared_hash_def, %struct.shared_hash_def* %2, i32 0, i32 0, !dbg !9683
  %3 = load i32, i32* %refcount1, align 8, !dbg !9684
  %dec = add nsw i32 %3, -1, !dbg !9684
  store i32 %dec, i32* %refcount1, align 8, !dbg !9684
  %cmp2 = icmp eq i32 %dec, 0, !dbg !9685
  br i1 %cmp2, label %if.then, label %if.end, !dbg !9686

if.then:                                          ; preds = %cond.end
  %4 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars.addr, align 8, !dbg !9687
  %htab = getelementptr inbounds %struct.shared_hash_def, %struct.shared_hash_def* %4, i32 0, i32 1, !dbg !9689
  %5 = load %struct.htab*, %struct.htab** %htab, align 8, !dbg !9689
  call void @htab_delete(%struct.htab* %5), !dbg !9690
  %6 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @shared_hash_pool, align 8, !dbg !9691
  %7 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars.addr, align 8, !dbg !9692
  %8 = bitcast %struct.shared_hash_def* %7 to i8*, !dbg !9692
  call void @pool_free(%struct.alloc_pool_def* %6, i8* %8), !dbg !9693
  br label %if.end, !dbg !9694

if.end:                                           ; preds = %if.then, %cond.end
  ret void, !dbg !9695
}

declare dso_local i32 @pre_and_rev_post_order_compute(i32*, i32*, i8 zeroext) #2

declare dso_local %struct.fibheap* @fibheap_new() #2

declare dso_local %struct.simple_bitmap_def* @sbitmap_alloc(i32) #2

declare dso_local void @sbitmap_zero(%struct.simple_bitmap_def*) #2

declare dso_local %struct.fibnode* @fibheap_insert(%struct.fibheap*, i64, i8*) #2

declare dso_local void @sbitmap_ones(%struct.simple_bitmap_def*) #2

declare dso_local i32 @fibheap_empty(%struct.fibheap*) #2

declare dso_local i8* @fibheap_extract_min(%struct.fibheap*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @RESET_BIT(%struct.simple_bitmap_def* %map, i32 %bitno) #0 !dbg !9696 {
entry:
  %map.addr = alloca %struct.simple_bitmap_def*, align 8
  %bitno.addr = alloca i32, align 4
  %oldbit = alloca i8, align 1
  store %struct.simple_bitmap_def* %map, %struct.simple_bitmap_def** %map.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.simple_bitmap_def** %map.addr, metadata !9699, metadata !DIExpression()), !dbg !9700
  store i32 %bitno, i32* %bitno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bitno.addr, metadata !9701, metadata !DIExpression()), !dbg !9702
  %0 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %map.addr, align 8, !dbg !9703
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %0, i32 0, i32 0, !dbg !9705
  %1 = load i8*, i8** %popcount, align 8, !dbg !9705
  %tobool = icmp ne i8* %1, null, !dbg !9703
  br i1 %tobool, label %if.then, label %if.end7, !dbg !9706

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %oldbit, metadata !9707, metadata !DIExpression()), !dbg !9709
  %2 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %map.addr, align 8, !dbg !9710
  %elms = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %2, i32 0, i32 3, !dbg !9710
  %3 = load i32, i32* %bitno.addr, align 4, !dbg !9710
  %div = udiv i32 %3, 64, !dbg !9710
  %idxprom = zext i32 %div to i64, !dbg !9710
  %arrayidx = getelementptr inbounds [1 x i64], [1 x i64]* %elms, i64 0, i64 %idxprom, !dbg !9710
  %4 = load i64, i64* %arrayidx, align 8, !dbg !9710
  %5 = load i32, i32* %bitno.addr, align 4, !dbg !9710
  %rem = urem i32 %5, 64, !dbg !9710
  %sh_prom = zext i32 %rem to i64, !dbg !9710
  %shr = lshr i64 %4, %sh_prom, !dbg !9710
  %and = and i64 %shr, 1, !dbg !9710
  %conv = trunc i64 %and to i8, !dbg !9710
  store i8 %conv, i8* %oldbit, align 1, !dbg !9711
  %6 = load i8, i8* %oldbit, align 1, !dbg !9712
  %tobool1 = icmp ne i8 %6, 0, !dbg !9712
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !9714

if.then2:                                         ; preds = %if.then
  %7 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %map.addr, align 8, !dbg !9715
  %popcount3 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %7, i32 0, i32 0, !dbg !9716
  %8 = load i8*, i8** %popcount3, align 8, !dbg !9716
  %9 = load i32, i32* %bitno.addr, align 4, !dbg !9717
  %div4 = udiv i32 %9, 64, !dbg !9718
  %idxprom5 = zext i32 %div4 to i64, !dbg !9715
  %arrayidx6 = getelementptr inbounds i8, i8* %8, i64 %idxprom5, !dbg !9715
  %10 = load i8, i8* %arrayidx6, align 1, !dbg !9719
  %dec = add i8 %10, -1, !dbg !9719
  store i8 %dec, i8* %arrayidx6, align 1, !dbg !9719
  br label %if.end, !dbg !9715

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end7, !dbg !9720

if.end7:                                          ; preds = %if.end, %entry
  %11 = load i32, i32* %bitno.addr, align 4, !dbg !9721
  %rem8 = urem i32 %11, 64, !dbg !9722
  %sh_prom9 = zext i32 %rem8 to i64, !dbg !9723
  %shl = shl i64 1, %sh_prom9, !dbg !9723
  %neg = xor i64 %shl, -1, !dbg !9724
  %12 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %map.addr, align 8, !dbg !9725
  %elms10 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %12, i32 0, i32 3, !dbg !9726
  %13 = load i32, i32* %bitno.addr, align 4, !dbg !9727
  %div11 = udiv i32 %13, 64, !dbg !9728
  %idxprom12 = zext i32 %div11 to i64, !dbg !9725
  %arrayidx13 = getelementptr inbounds [1 x i64], [1 x i64]* %elms10, i64 0, i64 %idxprom12, !dbg !9725
  %14 = load i64, i64* %arrayidx13, align 8, !dbg !9729
  %and14 = and i64 %14, %neg, !dbg !9729
  store i64 %and14, i64* %arrayidx13, align 8, !dbg !9729
  ret void, !dbg !9730
}

; Function Attrs: noinline nounwind uwtable
define internal void @SET_BIT(%struct.simple_bitmap_def* %map, i32 %bitno) #0 !dbg !9731 {
entry:
  %map.addr = alloca %struct.simple_bitmap_def*, align 8
  %bitno.addr = alloca i32, align 4
  %oldbit = alloca i8, align 1
  store %struct.simple_bitmap_def* %map, %struct.simple_bitmap_def** %map.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.simple_bitmap_def** %map.addr, metadata !9732, metadata !DIExpression()), !dbg !9733
  store i32 %bitno, i32* %bitno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bitno.addr, metadata !9734, metadata !DIExpression()), !dbg !9735
  %0 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %map.addr, align 8, !dbg !9736
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %0, i32 0, i32 0, !dbg !9738
  %1 = load i8*, i8** %popcount, align 8, !dbg !9738
  %tobool = icmp ne i8* %1, null, !dbg !9736
  br i1 %tobool, label %if.then, label %if.end7, !dbg !9739

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %oldbit, metadata !9740, metadata !DIExpression()), !dbg !9742
  %2 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %map.addr, align 8, !dbg !9743
  %elms = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %2, i32 0, i32 3, !dbg !9743
  %3 = load i32, i32* %bitno.addr, align 4, !dbg !9743
  %div = udiv i32 %3, 64, !dbg !9743
  %idxprom = zext i32 %div to i64, !dbg !9743
  %arrayidx = getelementptr inbounds [1 x i64], [1 x i64]* %elms, i64 0, i64 %idxprom, !dbg !9743
  %4 = load i64, i64* %arrayidx, align 8, !dbg !9743
  %5 = load i32, i32* %bitno.addr, align 4, !dbg !9743
  %rem = urem i32 %5, 64, !dbg !9743
  %sh_prom = zext i32 %rem to i64, !dbg !9743
  %shr = lshr i64 %4, %sh_prom, !dbg !9743
  %and = and i64 %shr, 1, !dbg !9743
  %conv = trunc i64 %and to i8, !dbg !9743
  store i8 %conv, i8* %oldbit, align 1, !dbg !9744
  %6 = load i8, i8* %oldbit, align 1, !dbg !9745
  %tobool1 = icmp ne i8 %6, 0, !dbg !9745
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !9747

if.then2:                                         ; preds = %if.then
  %7 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %map.addr, align 8, !dbg !9748
  %popcount3 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %7, i32 0, i32 0, !dbg !9749
  %8 = load i8*, i8** %popcount3, align 8, !dbg !9749
  %9 = load i32, i32* %bitno.addr, align 4, !dbg !9750
  %div4 = udiv i32 %9, 64, !dbg !9751
  %idxprom5 = zext i32 %div4 to i64, !dbg !9748
  %arrayidx6 = getelementptr inbounds i8, i8* %8, i64 %idxprom5, !dbg !9748
  %10 = load i8, i8* %arrayidx6, align 1, !dbg !9752
  %inc = add i8 %10, 1, !dbg !9752
  store i8 %inc, i8* %arrayidx6, align 1, !dbg !9752
  br label %if.end, !dbg !9748

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end7, !dbg !9753

if.end7:                                          ; preds = %if.end, %entry
  %11 = load i32, i32* %bitno.addr, align 4, !dbg !9754
  %rem8 = urem i32 %11, 64, !dbg !9755
  %sh_prom9 = zext i32 %rem8 to i64, !dbg !9756
  %shl = shl i64 1, %sh_prom9, !dbg !9756
  %12 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %map.addr, align 8, !dbg !9757
  %elms10 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %12, i32 0, i32 3, !dbg !9758
  %13 = load i32, i32* %bitno.addr, align 4, !dbg !9759
  %div11 = udiv i32 %13, 64, !dbg !9760
  %idxprom12 = zext i32 %div11 to i64, !dbg !9757
  %arrayidx13 = getelementptr inbounds [1 x i64], [1 x i64]* %elms10, i64 0, i64 %idxprom12, !dbg !9757
  %14 = load i64, i64* %arrayidx13, align 8, !dbg !9761
  %or = or i64 %14, %shl, !dbg !9761
  store i64 %or, i64* %arrayidx13, align 8, !dbg !9761
  ret void, !dbg !9762
}

declare dso_local i64 @htab_size(%struct.htab*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @dataflow_set_clear(%struct.dataflow_set_def* %set) #0 !dbg !9763 {
entry:
  %set.addr = alloca %struct.dataflow_set_def*, align 8
  %i = alloca i32, align 4
  store %struct.dataflow_set_def* %set, %struct.dataflow_set_def** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %set.addr, metadata !9764, metadata !DIExpression()), !dbg !9765
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9766, metadata !DIExpression()), !dbg !9767
  store i32 0, i32* %i, align 4, !dbg !9768
  br label %for.cond, !dbg !9770

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !9771
  %cmp = icmp slt i32 %0, 53, !dbg !9773
  br i1 %cmp, label %for.body, label %for.end, !dbg !9774

for.body:                                         ; preds = %for.cond
  %1 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !9775
  %regs = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %1, i32 0, i32 1, !dbg !9776
  %2 = load i32, i32* %i, align 4, !dbg !9777
  %idxprom = sext i32 %2 to i64, !dbg !9775
  %arrayidx = getelementptr inbounds [53 x %struct.attrs_def*], [53 x %struct.attrs_def*]* %regs, i64 0, i64 %idxprom, !dbg !9775
  call void @attrs_list_clear(%struct.attrs_def** %arrayidx), !dbg !9778
  br label %for.inc, !dbg !9778

for.inc:                                          ; preds = %for.body
  %3 = load i32, i32* %i, align 4, !dbg !9779
  %inc = add nsw i32 %3, 1, !dbg !9779
  store i32 %inc, i32* %i, align 4, !dbg !9779
  br label %for.cond, !dbg !9780, !llvm.loop !9781

for.end:                                          ; preds = %for.cond
  %4 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !9783
  %vars = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %4, i32 0, i32 2, !dbg !9784
  %5 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars, align 8, !dbg !9784
  call void @shared_hash_destroy(%struct.shared_hash_def* %5), !dbg !9785
  %6 = load %struct.shared_hash_def*, %struct.shared_hash_def** @empty_shared_hash, align 8, !dbg !9786
  %call = call %struct.shared_hash_def* @shared_hash_copy(%struct.shared_hash_def* %6), !dbg !9787
  %7 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !9788
  %vars1 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %7, i32 0, i32 2, !dbg !9789
  store %struct.shared_hash_def* %call, %struct.shared_hash_def** %vars1, align 8, !dbg !9790
  ret void, !dbg !9791
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @ei_cond(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1, %struct.edge_def** %p) #0 !dbg !9792 {
entry:
  %retval = alloca i8, align 1
  %ei = alloca %struct.edge_iterator, align 8
  %p.addr = alloca %struct.edge_def**, align 8
  %0 = bitcast %struct.edge_iterator* %ei to { i32, %struct.VEC_edge_gc** }*
  %1 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 0
  store i32 %ei.coerce0, i32* %1, align 8
  %2 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 1
  store %struct.VEC_edge_gc** %ei.coerce1, %struct.VEC_edge_gc*** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_iterator* %ei, metadata !9796, metadata !DIExpression()), !dbg !9797
  store %struct.edge_def** %p, %struct.edge_def*** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_def*** %p.addr, metadata !9798, metadata !DIExpression()), !dbg !9799
  %3 = bitcast %struct.edge_iterator* %ei to { i32, %struct.VEC_edge_gc** }*, !dbg !9800
  %4 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %3, i32 0, i32 0, !dbg !9800
  %5 = load i32, i32* %4, align 8, !dbg !9800
  %6 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %3, i32 0, i32 1, !dbg !9800
  %7 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %6, align 8, !dbg !9800
  %call = call zeroext i8 @ei_end_p(i32 %5, %struct.VEC_edge_gc** %7), !dbg !9800
  %tobool = icmp ne i8 %call, 0, !dbg !9800
  br i1 %tobool, label %if.else, label %if.then, !dbg !9802

if.then:                                          ; preds = %entry
  %8 = bitcast %struct.edge_iterator* %ei to { i32, %struct.VEC_edge_gc** }*, !dbg !9803
  %9 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %8, i32 0, i32 0, !dbg !9803
  %10 = load i32, i32* %9, align 8, !dbg !9803
  %11 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %8, i32 0, i32 1, !dbg !9803
  %12 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %11, align 8, !dbg !9803
  %call1 = call %struct.edge_def* @ei_edge(i32 %10, %struct.VEC_edge_gc** %12), !dbg !9803
  %13 = load %struct.edge_def**, %struct.edge_def*** %p.addr, align 8, !dbg !9805
  store %struct.edge_def* %call1, %struct.edge_def** %13, align 8, !dbg !9806
  store i8 1, i8* %retval, align 1, !dbg !9807
  br label %return, !dbg !9807

if.else:                                          ; preds = %entry
  %14 = load %struct.edge_def**, %struct.edge_def*** %p.addr, align 8, !dbg !9808
  store %struct.edge_def* null, %struct.edge_def** %14, align 8, !dbg !9810
  store i8 0, i8* %retval, align 1, !dbg !9811
  br label %return, !dbg !9811

return:                                           ; preds = %if.else, %if.then
  %15 = load i8, i8* %retval, align 1, !dbg !9812
  ret i8 %15, !dbg !9812
}

; Function Attrs: noinline nounwind uwtable
define internal void @dataflow_set_copy(%struct.dataflow_set_def* %dst, %struct.dataflow_set_def* %src) #0 !dbg !9813 {
entry:
  %dst.addr = alloca %struct.dataflow_set_def*, align 8
  %src.addr = alloca %struct.dataflow_set_def*, align 8
  %i = alloca i32, align 4
  store %struct.dataflow_set_def* %dst, %struct.dataflow_set_def** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %dst.addr, metadata !9816, metadata !DIExpression()), !dbg !9817
  store %struct.dataflow_set_def* %src, %struct.dataflow_set_def** %src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %src.addr, metadata !9818, metadata !DIExpression()), !dbg !9819
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9820, metadata !DIExpression()), !dbg !9821
  store i32 0, i32* %i, align 4, !dbg !9822
  br label %for.cond, !dbg !9824

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !9825
  %cmp = icmp slt i32 %0, 53, !dbg !9827
  br i1 %cmp, label %for.body, label %for.end, !dbg !9828

for.body:                                         ; preds = %for.cond
  %1 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %dst.addr, align 8, !dbg !9829
  %regs = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %1, i32 0, i32 1, !dbg !9830
  %2 = load i32, i32* %i, align 4, !dbg !9831
  %idxprom = sext i32 %2 to i64, !dbg !9829
  %arrayidx = getelementptr inbounds [53 x %struct.attrs_def*], [53 x %struct.attrs_def*]* %regs, i64 0, i64 %idxprom, !dbg !9829
  %3 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %src.addr, align 8, !dbg !9832
  %regs1 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %3, i32 0, i32 1, !dbg !9833
  %4 = load i32, i32* %i, align 4, !dbg !9834
  %idxprom2 = sext i32 %4 to i64, !dbg !9832
  %arrayidx3 = getelementptr inbounds [53 x %struct.attrs_def*], [53 x %struct.attrs_def*]* %regs1, i64 0, i64 %idxprom2, !dbg !9832
  %5 = load %struct.attrs_def*, %struct.attrs_def** %arrayidx3, align 8, !dbg !9832
  call void @attrs_list_copy(%struct.attrs_def** %arrayidx, %struct.attrs_def* %5), !dbg !9835
  br label %for.inc, !dbg !9835

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !9836
  %inc = add nsw i32 %6, 1, !dbg !9836
  store i32 %inc, i32* %i, align 4, !dbg !9836
  br label %for.cond, !dbg !9837, !llvm.loop !9838

for.end:                                          ; preds = %for.cond
  %7 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %dst.addr, align 8, !dbg !9840
  %vars = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %7, i32 0, i32 2, !dbg !9841
  %8 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars, align 8, !dbg !9841
  call void @shared_hash_destroy(%struct.shared_hash_def* %8), !dbg !9842
  %9 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %src.addr, align 8, !dbg !9843
  %vars4 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %9, i32 0, i32 2, !dbg !9844
  %10 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars4, align 8, !dbg !9844
  %call = call %struct.shared_hash_def* @shared_hash_copy(%struct.shared_hash_def* %10), !dbg !9845
  %11 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %dst.addr, align 8, !dbg !9846
  %vars5 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %11, i32 0, i32 2, !dbg !9847
  store %struct.shared_hash_def* %call, %struct.shared_hash_def** %vars5, align 8, !dbg !9848
  %12 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %src.addr, align 8, !dbg !9849
  %stack_adjust = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %12, i32 0, i32 0, !dbg !9850
  %13 = load i64, i64* %stack_adjust, align 8, !dbg !9850
  %14 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %dst.addr, align 8, !dbg !9851
  %stack_adjust6 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %14, i32 0, i32 0, !dbg !9852
  store i64 %13, i64* %stack_adjust6, align 8, !dbg !9853
  ret void, !dbg !9854
}

; Function Attrs: noinline nounwind uwtable
define internal void @dataflow_set_merge(%struct.dataflow_set_def* %dst, %struct.dataflow_set_def* %src2) #0 !dbg !9855 {
entry:
  %dst.addr = alloca %struct.dataflow_set_def*, align 8
  %src2.addr = alloca %struct.dataflow_set_def*, align 8
  %cur = alloca %struct.dataflow_set_def, align 8
  %src1 = alloca %struct.dataflow_set_def*, align 8
  %dsm = alloca %struct.dfset_merge, align 8
  %i = alloca i32, align 4
  %src1_elems = alloca i64, align 8
  %src2_elems = alloca i64, align 8
  store %struct.dataflow_set_def* %dst, %struct.dataflow_set_def** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %dst.addr, metadata !9856, metadata !DIExpression()), !dbg !9857
  store %struct.dataflow_set_def* %src2, %struct.dataflow_set_def** %src2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %src2.addr, metadata !9858, metadata !DIExpression()), !dbg !9859
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def* %cur, metadata !9860, metadata !DIExpression()), !dbg !9861
  %0 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %dst.addr, align 8, !dbg !9862
  %1 = bitcast %struct.dataflow_set_def* %cur to i8*, !dbg !9863
  %2 = bitcast %struct.dataflow_set_def* %0 to i8*, !dbg !9863
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 448, i1 false), !dbg !9863
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %src1, metadata !9864, metadata !DIExpression()), !dbg !9865
  store %struct.dataflow_set_def* %cur, %struct.dataflow_set_def** %src1, align 8, !dbg !9865
  call void @llvm.dbg.declare(metadata %struct.dfset_merge* %dsm, metadata !9866, metadata !DIExpression()), !dbg !9867
  call void @llvm.dbg.declare(metadata i32* %i, metadata !9868, metadata !DIExpression()), !dbg !9869
  call void @llvm.dbg.declare(metadata i64* %src1_elems, metadata !9870, metadata !DIExpression()), !dbg !9871
  call void @llvm.dbg.declare(metadata i64* %src2_elems, metadata !9872, metadata !DIExpression()), !dbg !9873
  %3 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %src1, align 8, !dbg !9874
  %vars = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %3, i32 0, i32 2, !dbg !9875
  %4 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars, align 8, !dbg !9875
  %call = call %struct.htab* @shared_hash_htab(%struct.shared_hash_def* %4), !dbg !9876
  %call1 = call i64 @htab_elements(%struct.htab* %call), !dbg !9877
  store i64 %call1, i64* %src1_elems, align 8, !dbg !9878
  %5 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %src2.addr, align 8, !dbg !9879
  %vars2 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %5, i32 0, i32 2, !dbg !9880
  %6 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars2, align 8, !dbg !9880
  %call3 = call %struct.htab* @shared_hash_htab(%struct.shared_hash_def* %6), !dbg !9881
  %call4 = call i64 @htab_elements(%struct.htab* %call3), !dbg !9882
  store i64 %call4, i64* %src2_elems, align 8, !dbg !9883
  %7 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %dst.addr, align 8, !dbg !9884
  call void @dataflow_set_init(%struct.dataflow_set_def* %7), !dbg !9885
  %stack_adjust = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %cur, i32 0, i32 0, !dbg !9886
  %8 = load i64, i64* %stack_adjust, align 8, !dbg !9886
  %9 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %dst.addr, align 8, !dbg !9887
  %stack_adjust5 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %9, i32 0, i32 0, !dbg !9888
  store i64 %8, i64* %stack_adjust5, align 8, !dbg !9889
  %10 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %dst.addr, align 8, !dbg !9890
  %vars6 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %10, i32 0, i32 2, !dbg !9891
  %11 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars6, align 8, !dbg !9891
  call void @shared_hash_destroy(%struct.shared_hash_def* %11), !dbg !9892
  %12 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @shared_hash_pool, align 8, !dbg !9893
  %call7 = call i8* @pool_alloc(%struct.alloc_pool_def* %12), !dbg !9894
  %13 = bitcast i8* %call7 to %struct.shared_hash_def*, !dbg !9895
  %14 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %dst.addr, align 8, !dbg !9896
  %vars8 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %14, i32 0, i32 2, !dbg !9897
  store %struct.shared_hash_def* %13, %struct.shared_hash_def** %vars8, align 8, !dbg !9898
  %15 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %dst.addr, align 8, !dbg !9899
  %vars9 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %15, i32 0, i32 2, !dbg !9900
  %16 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars9, align 8, !dbg !9900
  %refcount = getelementptr inbounds %struct.shared_hash_def, %struct.shared_hash_def* %16, i32 0, i32 0, !dbg !9901
  store i32 1, i32* %refcount, align 8, !dbg !9902
  %17 = load i64, i64* %src1_elems, align 8, !dbg !9903
  %18 = load i64, i64* %src2_elems, align 8, !dbg !9903
  %cmp = icmp ugt i64 %17, %18, !dbg !9903
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !9903

cond.true:                                        ; preds = %entry
  %19 = load i64, i64* %src1_elems, align 8, !dbg !9903
  br label %cond.end, !dbg !9903

cond.false:                                       ; preds = %entry
  %20 = load i64, i64* %src2_elems, align 8, !dbg !9903
  br label %cond.end, !dbg !9903

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %19, %cond.true ], [ %20, %cond.false ], !dbg !9903
  %call10 = call %struct.htab* @htab_create(i64 %cond, i32 (i8*)* @variable_htab_hash, i32 (i8*, i8*)* @variable_htab_eq, void (i8*)* @variable_htab_free), !dbg !9904
  %21 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %dst.addr, align 8, !dbg !9905
  %vars11 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %21, i32 0, i32 2, !dbg !9906
  %22 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars11, align 8, !dbg !9906
  %htab = getelementptr inbounds %struct.shared_hash_def, %struct.shared_hash_def* %22, i32 0, i32 1, !dbg !9907
  store %struct.htab* %call10, %struct.htab** %htab, align 8, !dbg !9908
  store i32 0, i32* %i, align 4, !dbg !9909
  br label %for.cond, !dbg !9911

for.cond:                                         ; preds = %for.inc, %cond.end
  %23 = load i32, i32* %i, align 4, !dbg !9912
  %cmp12 = icmp slt i32 %23, 53, !dbg !9914
  br i1 %cmp12, label %for.body, label %for.end, !dbg !9915

for.body:                                         ; preds = %for.cond
  %24 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %dst.addr, align 8, !dbg !9916
  %regs = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %24, i32 0, i32 1, !dbg !9917
  %25 = load i32, i32* %i, align 4, !dbg !9918
  %idxprom = sext i32 %25 to i64, !dbg !9916
  %arrayidx = getelementptr inbounds [53 x %struct.attrs_def*], [53 x %struct.attrs_def*]* %regs, i64 0, i64 %idxprom, !dbg !9916
  %26 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %src1, align 8, !dbg !9919
  %regs13 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %26, i32 0, i32 1, !dbg !9920
  %27 = load i32, i32* %i, align 4, !dbg !9921
  %idxprom14 = sext i32 %27 to i64, !dbg !9919
  %arrayidx15 = getelementptr inbounds [53 x %struct.attrs_def*], [53 x %struct.attrs_def*]* %regs13, i64 0, i64 %idxprom14, !dbg !9919
  %28 = load %struct.attrs_def*, %struct.attrs_def** %arrayidx15, align 8, !dbg !9919
  %29 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %src2.addr, align 8, !dbg !9922
  %regs16 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %29, i32 0, i32 1, !dbg !9923
  %30 = load i32, i32* %i, align 4, !dbg !9924
  %idxprom17 = sext i32 %30 to i64, !dbg !9922
  %arrayidx18 = getelementptr inbounds [53 x %struct.attrs_def*], [53 x %struct.attrs_def*]* %regs16, i64 0, i64 %idxprom17, !dbg !9922
  %31 = load %struct.attrs_def*, %struct.attrs_def** %arrayidx18, align 8, !dbg !9922
  call void @attrs_list_mpdv_union(%struct.attrs_def** %arrayidx, %struct.attrs_def* %28, %struct.attrs_def* %31), !dbg !9925
  br label %for.inc, !dbg !9925

for.inc:                                          ; preds = %for.body
  %32 = load i32, i32* %i, align 4, !dbg !9926
  %inc = add nsw i32 %32, 1, !dbg !9926
  store i32 %inc, i32* %i, align 4, !dbg !9926
  br label %for.cond, !dbg !9927, !llvm.loop !9928

for.end:                                          ; preds = %for.cond
  %33 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %dst.addr, align 8, !dbg !9930
  %dst19 = getelementptr inbounds %struct.dfset_merge, %struct.dfset_merge* %dsm, i32 0, i32 0, !dbg !9931
  store %struct.dataflow_set_def* %33, %struct.dataflow_set_def** %dst19, align 8, !dbg !9932
  %34 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %src2.addr, align 8, !dbg !9933
  %src = getelementptr inbounds %struct.dfset_merge, %struct.dfset_merge* %dsm, i32 0, i32 2, !dbg !9934
  store %struct.dataflow_set_def* %34, %struct.dataflow_set_def** %src, align 8, !dbg !9935
  %35 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %src1, align 8, !dbg !9936
  %cur20 = getelementptr inbounds %struct.dfset_merge, %struct.dfset_merge* %dsm, i32 0, i32 1, !dbg !9937
  store %struct.dataflow_set_def* %35, %struct.dataflow_set_def** %cur20, align 8, !dbg !9938
  %src_onepart_cnt = getelementptr inbounds %struct.dfset_merge, %struct.dfset_merge* %dsm, i32 0, i32 3, !dbg !9939
  store i32 0, i32* %src_onepart_cnt, align 8, !dbg !9940
  %src21 = getelementptr inbounds %struct.dfset_merge, %struct.dfset_merge* %dsm, i32 0, i32 2, !dbg !9941
  %36 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %src21, align 8, !dbg !9941
  %vars22 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %36, i32 0, i32 2, !dbg !9942
  %37 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars22, align 8, !dbg !9942
  %call23 = call %struct.htab* @shared_hash_htab(%struct.shared_hash_def* %37), !dbg !9943
  %38 = bitcast %struct.dfset_merge* %dsm to i8*, !dbg !9944
  call void @htab_traverse(%struct.htab* %call23, i32 (i8**, i8*)* @variable_merge_over_src, i8* %38), !dbg !9945
  %cur24 = getelementptr inbounds %struct.dfset_merge, %struct.dfset_merge* %dsm, i32 0, i32 1, !dbg !9946
  %39 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %cur24, align 8, !dbg !9946
  %vars25 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %39, i32 0, i32 2, !dbg !9947
  %40 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars25, align 8, !dbg !9947
  %call26 = call %struct.htab* @shared_hash_htab(%struct.shared_hash_def* %40), !dbg !9948
  %41 = bitcast %struct.dfset_merge* %dsm to i8*, !dbg !9949
  call void @htab_traverse(%struct.htab* %call26, i32 (i8**, i8*)* @variable_merge_over_cur, i8* %41), !dbg !9950
  %src_onepart_cnt27 = getelementptr inbounds %struct.dfset_merge, %struct.dfset_merge* %dsm, i32 0, i32 3, !dbg !9951
  %42 = load i32, i32* %src_onepart_cnt27, align 8, !dbg !9951
  %tobool = icmp ne i32 %42, 0, !dbg !9953
  br i1 %tobool, label %if.then, label %if.end, !dbg !9954

if.then:                                          ; preds = %for.end
  store i8 0, i8* @dst_can_be_shared, align 1, !dbg !9955
  br label %if.end, !dbg !9956

if.end:                                           ; preds = %if.then, %for.end
  %43 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %src1, align 8, !dbg !9957
  call void @dataflow_set_destroy(%struct.dataflow_set_def* %43), !dbg !9958
  ret void, !dbg !9959
}

; Function Attrs: noinline nounwind uwtable
define internal void @dataflow_post_merge_adjust(%struct.dataflow_set_def* %set, %struct.dataflow_set_def** %permp) #0 !dbg !9960 {
entry:
  %set.addr = alloca %struct.dataflow_set_def*, align 8
  %permp.addr = alloca %struct.dataflow_set_def**, align 8
  %dfpm = alloca %struct.dfset_post_merge, align 8
  store %struct.dataflow_set_def* %set, %struct.dataflow_set_def** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %set.addr, metadata !9963, metadata !DIExpression()), !dbg !9964
  store %struct.dataflow_set_def** %permp, %struct.dataflow_set_def*** %permp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def*** %permp.addr, metadata !9965, metadata !DIExpression()), !dbg !9966
  call void @llvm.dbg.declare(metadata %struct.dfset_post_merge* %dfpm, metadata !9967, metadata !DIExpression()), !dbg !9968
  %0 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !9969
  %set1 = getelementptr inbounds %struct.dfset_post_merge, %struct.dfset_post_merge* %dfpm, i32 0, i32 0, !dbg !9970
  store %struct.dataflow_set_def* %0, %struct.dataflow_set_def** %set1, align 8, !dbg !9971
  %1 = load %struct.dataflow_set_def**, %struct.dataflow_set_def*** %permp.addr, align 8, !dbg !9972
  %permp2 = getelementptr inbounds %struct.dfset_post_merge, %struct.dfset_post_merge* %dfpm, i32 0, i32 1, !dbg !9973
  store %struct.dataflow_set_def** %1, %struct.dataflow_set_def*** %permp2, align 8, !dbg !9974
  %2 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !9975
  %vars = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %2, i32 0, i32 2, !dbg !9976
  %3 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars, align 8, !dbg !9976
  %call = call %struct.htab* @shared_hash_htab(%struct.shared_hash_def* %3), !dbg !9977
  %4 = bitcast %struct.dfset_post_merge* %dfpm to i8*, !dbg !9978
  call void @htab_traverse(%struct.htab* %call, i32 (i8**, i8*)* @variable_post_merge_new_vals, i8* %4), !dbg !9979
  %5 = load %struct.dataflow_set_def**, %struct.dataflow_set_def*** %permp.addr, align 8, !dbg !9980
  %6 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %5, align 8, !dbg !9982
  %tobool = icmp ne %struct.dataflow_set_def* %6, null, !dbg !9982
  br i1 %tobool, label %if.then, label %if.end, !dbg !9983

if.then:                                          ; preds = %entry
  %7 = load %struct.dataflow_set_def**, %struct.dataflow_set_def*** %permp.addr, align 8, !dbg !9984
  %8 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %7, align 8, !dbg !9985
  %vars3 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %8, i32 0, i32 2, !dbg !9986
  %9 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars3, align 8, !dbg !9986
  %call4 = call %struct.htab* @shared_hash_htab(%struct.shared_hash_def* %9), !dbg !9987
  %10 = bitcast %struct.dfset_post_merge* %dfpm to i8*, !dbg !9988
  call void @htab_traverse(%struct.htab* %call4, i32 (i8**, i8*)* @variable_post_merge_perm_vals, i8* %10), !dbg !9989
  br label %if.end, !dbg !9989

if.end:                                           ; preds = %if.then, %entry
  %11 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !9990
  %vars5 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %11, i32 0, i32 2, !dbg !9991
  %12 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars5, align 8, !dbg !9991
  %call6 = call %struct.htab* @shared_hash_htab(%struct.shared_hash_def* %12), !dbg !9992
  %13 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !9993
  %14 = bitcast %struct.dataflow_set_def* %13 to i8*, !dbg !9993
  call void @htab_traverse(%struct.htab* %call6, i32 (i8**, i8*)* @canonicalize_values_star, i8* %14), !dbg !9994
  %15 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !9995
  %vars7 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %15, i32 0, i32 2, !dbg !9996
  %16 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars7, align 8, !dbg !9996
  %call8 = call %struct.htab* @shared_hash_htab(%struct.shared_hash_def* %16), !dbg !9997
  %17 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !9998
  %18 = bitcast %struct.dataflow_set_def* %17 to i8*, !dbg !9998
  call void @htab_traverse(%struct.htab* %call8, i32 (i8**, i8*)* @canonicalize_vars_star, i8* %18), !dbg !9999
  ret void, !dbg !10000
}

; Function Attrs: noinline nounwind uwtable
define internal void @dataflow_set_union(%struct.dataflow_set_def* %dst, %struct.dataflow_set_def* %src) #0 !dbg !10001 {
entry:
  %dst.addr = alloca %struct.dataflow_set_def*, align 8
  %src.addr = alloca %struct.dataflow_set_def*, align 8
  %i = alloca i32, align 4
  store %struct.dataflow_set_def* %dst, %struct.dataflow_set_def** %dst.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %dst.addr, metadata !10002, metadata !DIExpression()), !dbg !10003
  store %struct.dataflow_set_def* %src, %struct.dataflow_set_def** %src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %src.addr, metadata !10004, metadata !DIExpression()), !dbg !10005
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10006, metadata !DIExpression()), !dbg !10007
  store i32 0, i32* %i, align 4, !dbg !10008
  br label %for.cond, !dbg !10010

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !10011
  %cmp = icmp slt i32 %0, 53, !dbg !10013
  br i1 %cmp, label %for.body, label %for.end, !dbg !10014

for.body:                                         ; preds = %for.cond
  %1 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %dst.addr, align 8, !dbg !10015
  %regs = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %1, i32 0, i32 1, !dbg !10016
  %2 = load i32, i32* %i, align 4, !dbg !10017
  %idxprom = sext i32 %2 to i64, !dbg !10015
  %arrayidx = getelementptr inbounds [53 x %struct.attrs_def*], [53 x %struct.attrs_def*]* %regs, i64 0, i64 %idxprom, !dbg !10015
  %3 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %src.addr, align 8, !dbg !10018
  %regs1 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %3, i32 0, i32 1, !dbg !10019
  %4 = load i32, i32* %i, align 4, !dbg !10020
  %idxprom2 = sext i32 %4 to i64, !dbg !10018
  %arrayidx3 = getelementptr inbounds [53 x %struct.attrs_def*], [53 x %struct.attrs_def*]* %regs1, i64 0, i64 %idxprom2, !dbg !10018
  %5 = load %struct.attrs_def*, %struct.attrs_def** %arrayidx3, align 8, !dbg !10018
  call void @attrs_list_union(%struct.attrs_def** %arrayidx, %struct.attrs_def* %5), !dbg !10021
  br label %for.inc, !dbg !10021

for.inc:                                          ; preds = %for.body
  %6 = load i32, i32* %i, align 4, !dbg !10022
  %inc = add nsw i32 %6, 1, !dbg !10022
  store i32 %inc, i32* %i, align 4, !dbg !10022
  br label %for.cond, !dbg !10023, !llvm.loop !10024

for.end:                                          ; preds = %for.cond
  %7 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %dst.addr, align 8, !dbg !10026
  %vars = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %7, i32 0, i32 2, !dbg !10028
  %8 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars, align 8, !dbg !10028
  %9 = load %struct.shared_hash_def*, %struct.shared_hash_def** @empty_shared_hash, align 8, !dbg !10029
  %cmp4 = icmp eq %struct.shared_hash_def* %8, %9, !dbg !10030
  br i1 %cmp4, label %if.then, label %if.else, !dbg !10031

if.then:                                          ; preds = %for.end
  %10 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %dst.addr, align 8, !dbg !10032
  %vars5 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %10, i32 0, i32 2, !dbg !10034
  %11 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars5, align 8, !dbg !10034
  call void @shared_hash_destroy(%struct.shared_hash_def* %11), !dbg !10035
  %12 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %src.addr, align 8, !dbg !10036
  %vars6 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %12, i32 0, i32 2, !dbg !10037
  %13 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars6, align 8, !dbg !10037
  %call = call %struct.shared_hash_def* @shared_hash_copy(%struct.shared_hash_def* %13), !dbg !10038
  %14 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %dst.addr, align 8, !dbg !10039
  %vars7 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %14, i32 0, i32 2, !dbg !10040
  store %struct.shared_hash_def* %call, %struct.shared_hash_def** %vars7, align 8, !dbg !10041
  br label %if.end, !dbg !10042

if.else:                                          ; preds = %for.end
  %15 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %src.addr, align 8, !dbg !10043
  %vars8 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %15, i32 0, i32 2, !dbg !10044
  %16 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars8, align 8, !dbg !10044
  %call9 = call %struct.htab* @shared_hash_htab(%struct.shared_hash_def* %16), !dbg !10045
  %17 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %dst.addr, align 8, !dbg !10046
  %18 = bitcast %struct.dataflow_set_def* %17 to i8*, !dbg !10046
  call void @htab_traverse(%struct.htab* %call9, i32 (i8**, i8*)* @variable_union, i8* %18), !dbg !10047
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !10048
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @compute_bb_dataflow(%struct.basic_block_def* %bb) #0 !dbg !10049 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %i = alloca i32, align 4
  %mo = alloca %struct.micro_operation_def*, align 8
  %changed = alloca i8, align 1
  %old_out = alloca %struct.dataflow_set_def, align 8
  %in = alloca %struct.dataflow_set_def*, align 8
  %out = alloca %struct.dataflow_set_def*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %loc = alloca %struct.rtx_def*, align 8
  %loc17 = alloca %struct.rtx_def*, align 8
  %val = alloca %struct.rtx_def*, align 8
  %vloc = alloca %struct.rtx_def*, align 8
  %var = alloca %union.tree_node*, align 8
  %loc73 = alloca %struct.rtx_def*, align 8
  %val76 = alloca %struct.rtx_def*, align 8
  %vloc77 = alloca %struct.rtx_def*, align 8
  %uloc = alloca %struct.rtx_def*, align 8
  %loc124 = alloca %struct.rtx_def*, align 8
  %val127 = alloca %struct.rtx_def*, align 8
  %vloc128 = alloca %struct.rtx_def*, align 8
  %uloc129 = alloca %struct.rtx_def*, align 8
  %reverse = alloca %struct.rtx_def*, align 8
  %vsrc = alloca %struct.rtx_def*, align 8
  %copied_p = alloca i8, align 1
  %set_src = alloca %struct.rtx_def*, align 8
  %status = alloca i32, align 4
  %loc316 = alloca %struct.rtx_def*, align 8
  %set_src319 = alloca %struct.rtx_def*, align 8
  %loc348 = alloca %struct.rtx_def*, align 8
  %src_status = alloca i32, align 4
  %set_src351 = alloca %struct.rtx_def*, align 8
  %loc391 = alloca %struct.rtx_def*, align 8
  %loc408 = alloca %struct.rtx_def*, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !10052, metadata !DIExpression()), !dbg !10053
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10054, metadata !DIExpression()), !dbg !10055
  call void @llvm.dbg.declare(metadata %struct.micro_operation_def** %mo, metadata !10056, metadata !DIExpression()), !dbg !10057
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !10058, metadata !DIExpression()), !dbg !10059
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def* %old_out, metadata !10060, metadata !DIExpression()), !dbg !10061
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %in, metadata !10062, metadata !DIExpression()), !dbg !10063
  %0 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !10064
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %0, i32 0, i32 2, !dbg !10064
  %1 = load i8*, i8** %aux, align 8, !dbg !10064
  %2 = bitcast i8* %1 to %struct.variable_tracking_info_def*, !dbg !10064
  %in1 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %2, i32 0, i32 1, !dbg !10065
  store %struct.dataflow_set_def* %in1, %struct.dataflow_set_def** %in, align 8, !dbg !10063
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %out, metadata !10066, metadata !DIExpression()), !dbg !10067
  %3 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !10068
  %aux2 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %3, i32 0, i32 2, !dbg !10068
  %4 = load i8*, i8** %aux2, align 8, !dbg !10068
  %5 = bitcast i8* %4 to %struct.variable_tracking_info_def*, !dbg !10068
  %out3 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %5, i32 0, i32 2, !dbg !10069
  store %struct.dataflow_set_def* %out3, %struct.dataflow_set_def** %out, align 8, !dbg !10067
  call void @dataflow_set_init(%struct.dataflow_set_def* %old_out), !dbg !10070
  %6 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %out, align 8, !dbg !10071
  call void @dataflow_set_copy(%struct.dataflow_set_def* %old_out, %struct.dataflow_set_def* %6), !dbg !10072
  %7 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %out, align 8, !dbg !10073
  %8 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %in, align 8, !dbg !10074
  call void @dataflow_set_copy(%struct.dataflow_set_def* %7, %struct.dataflow_set_def* %8), !dbg !10075
  store i32 0, i32* %i, align 4, !dbg !10076
  br label %for.cond, !dbg !10078

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !10079
  %aux4 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %9, i32 0, i32 2, !dbg !10079
  %10 = load i8*, i8** %aux4, align 8, !dbg !10079
  %11 = bitcast i8* %10 to %struct.variable_tracking_info_def*, !dbg !10079
  %mos = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %11, i32 0, i32 0, !dbg !10079
  %12 = load %struct.VEC_micro_operation_heap*, %struct.VEC_micro_operation_heap** %mos, align 8, !dbg !10079
  %tobool = icmp ne %struct.VEC_micro_operation_heap* %12, null, !dbg !10079
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !10079

cond.true:                                        ; preds = %for.cond
  %13 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !10079
  %aux5 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %13, i32 0, i32 2, !dbg !10079
  %14 = load i8*, i8** %aux5, align 8, !dbg !10079
  %15 = bitcast i8* %14 to %struct.variable_tracking_info_def*, !dbg !10079
  %mos6 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %15, i32 0, i32 0, !dbg !10079
  %16 = load %struct.VEC_micro_operation_heap*, %struct.VEC_micro_operation_heap** %mos6, align 8, !dbg !10079
  %base = getelementptr inbounds %struct.VEC_micro_operation_heap, %struct.VEC_micro_operation_heap* %16, i32 0, i32 0, !dbg !10079
  br label %cond.end, !dbg !10079

cond.false:                                       ; preds = %for.cond
  br label %cond.end, !dbg !10079

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_micro_operation_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !10079
  %17 = load i32, i32* %i, align 4, !dbg !10079
  %call = call i32 @VEC_micro_operation_base_iterate(%struct.VEC_micro_operation_base* %cond, i32 %17, %struct.micro_operation_def** %mo), !dbg !10079
  %tobool7 = icmp ne i32 %call, 0, !dbg !10081
  br i1 %tobool7, label %for.body, label %for.end, !dbg !10081

for.body:                                         ; preds = %cond.end
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !10082, metadata !DIExpression()), !dbg !10084
  %18 = load %struct.micro_operation_def*, %struct.micro_operation_def** %mo, align 8, !dbg !10085
  %insn8 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %18, i32 0, i32 1, !dbg !10086
  %19 = load %struct.rtx_def*, %struct.rtx_def** %insn8, align 8, !dbg !10086
  store %struct.rtx_def* %19, %struct.rtx_def** %insn, align 8, !dbg !10084
  %20 = load %struct.micro_operation_def*, %struct.micro_operation_def** %mo, align 8, !dbg !10087
  %type = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %20, i32 0, i32 0, !dbg !10088
  %21 = load i32, i32* %type, align 8, !dbg !10088
  switch i32 %21, label %sw.epilog [
    i32 8, label %sw.bb
    i32 0, label %sw.bb9
    i32 3, label %sw.bb16
    i32 2, label %sw.bb72
    i32 4, label %sw.bb123
    i32 5, label %sw.bb315
    i32 6, label %sw.bb347
    i32 1, label %sw.bb390
    i32 7, label %sw.bb407
    i32 9, label %sw.bb424
  ], !dbg !10089

sw.bb:                                            ; preds = %for.body
  %22 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %out, align 8, !dbg !10090
  call void @dataflow_set_clear_at_call(%struct.dataflow_set_def* %22), !dbg !10092
  br label %sw.epilog, !dbg !10093

sw.bb9:                                           ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %loc, metadata !10094, metadata !DIExpression()), !dbg !10096
  %23 = load %struct.micro_operation_def*, %struct.micro_operation_def** %mo, align 8, !dbg !10097
  %u = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %23, i32 0, i32 2, !dbg !10098
  %loc10 = bitcast %union.anon.0* %u to %struct.rtx_def**, !dbg !10099
  %24 = load %struct.rtx_def*, %struct.rtx_def** %loc10, align 8, !dbg !10099
  store %struct.rtx_def* %24, %struct.rtx_def** %loc, align 8, !dbg !10096
  %25 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !10100
  %26 = bitcast %struct.rtx_def* %25 to i32*, !dbg !10100
  %bf.load = load i32, i32* %26, align 8, !dbg !10100
  %bf.clear = and i32 %bf.load, 65535, !dbg !10100
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !10100
  br i1 %cmp, label %if.then, label %if.else, !dbg !10102

if.then:                                          ; preds = %sw.bb9
  %27 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %out, align 8, !dbg !10103
  %28 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !10104
  call void @var_reg_set(%struct.dataflow_set_def* %27, %struct.rtx_def* %28, i32 1, %struct.rtx_def* null), !dbg !10105
  br label %if.end15, !dbg !10105

if.else:                                          ; preds = %sw.bb9
  %29 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !10106
  %30 = bitcast %struct.rtx_def* %29 to i32*, !dbg !10106
  %bf.load11 = load i32, i32* %30, align 8, !dbg !10106
  %bf.clear12 = and i32 %bf.load11, 65535, !dbg !10106
  %cmp13 = icmp eq i32 %bf.clear12, 43, !dbg !10106
  br i1 %cmp13, label %if.then14, label %if.end, !dbg !10108

if.then14:                                        ; preds = %if.else
  %31 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %out, align 8, !dbg !10109
  %32 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !10110
  call void @var_mem_set(%struct.dataflow_set_def* %31, %struct.rtx_def* %32, i32 1, %struct.rtx_def* null), !dbg !10111
  br label %if.end, !dbg !10111

if.end:                                           ; preds = %if.then14, %if.else
  br label %if.end15

if.end15:                                         ; preds = %if.end, %if.then
  br label %sw.epilog, !dbg !10112

sw.bb16:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %loc17, metadata !10113, metadata !DIExpression()), !dbg !10115
  %33 = load %struct.micro_operation_def*, %struct.micro_operation_def** %mo, align 8, !dbg !10116
  %u18 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %33, i32 0, i32 2, !dbg !10117
  %loc19 = bitcast %union.anon.0* %u18 to %struct.rtx_def**, !dbg !10118
  %34 = load %struct.rtx_def*, %struct.rtx_def** %loc19, align 8, !dbg !10118
  store %struct.rtx_def* %34, %struct.rtx_def** %loc17, align 8, !dbg !10115
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %val, metadata !10119, metadata !DIExpression()), !dbg !10120
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %vloc, metadata !10121, metadata !DIExpression()), !dbg !10122
  call void @llvm.dbg.declare(metadata %union.tree_node** %var, metadata !10123, metadata !DIExpression()), !dbg !10124
  %35 = load %struct.rtx_def*, %struct.rtx_def** %loc17, align 8, !dbg !10125
  %36 = bitcast %struct.rtx_def* %35 to i32*, !dbg !10125
  %bf.load20 = load i32, i32* %36, align 8, !dbg !10125
  %bf.clear21 = and i32 %bf.load20, 65535, !dbg !10125
  %cmp22 = icmp eq i32 %bf.clear21, 41, !dbg !10127
  br i1 %cmp22, label %if.then23, label %if.else29, !dbg !10128

if.then23:                                        ; preds = %sw.bb16
  %37 = load %struct.rtx_def*, %struct.rtx_def** %loc17, align 8, !dbg !10129
  %u24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1, !dbg !10129
  %fld = bitcast %union.u* %u24 to [1 x %union.rtunion_def]*, !dbg !10129
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !10129
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !10129
  %38 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !10129
  store %struct.rtx_def* %38, %struct.rtx_def** %val, align 8, !dbg !10131
  %39 = load %struct.rtx_def*, %struct.rtx_def** %loc17, align 8, !dbg !10132
  %u25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i32 0, i32 1, !dbg !10132
  %fld26 = bitcast %union.u* %u25 to [1 x %union.rtunion_def]*, !dbg !10132
  %arrayidx27 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld26, i64 0, i64 1, !dbg !10132
  %rt_rtx28 = bitcast %union.rtunion_def* %arrayidx27 to %struct.rtx_def**, !dbg !10132
  %40 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx28, align 8, !dbg !10132
  store %struct.rtx_def* %40, %struct.rtx_def** %vloc, align 8, !dbg !10133
  br label %if.end30, !dbg !10134

if.else29:                                        ; preds = %sw.bb16
  store %struct.rtx_def* null, %struct.rtx_def** %val, align 8, !dbg !10135
  %41 = load %struct.rtx_def*, %struct.rtx_def** %loc17, align 8, !dbg !10137
  store %struct.rtx_def* %41, %struct.rtx_def** %vloc, align 8, !dbg !10138
  br label %if.end30

if.end30:                                         ; preds = %if.else29, %if.then23
  %42 = load %struct.rtx_def*, %struct.rtx_def** %vloc, align 8, !dbg !10139
  %u31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %42, i32 0, i32 1, !dbg !10139
  %fld32 = bitcast %union.u* %u31 to [1 x %union.rtunion_def]*, !dbg !10139
  %arrayidx33 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld32, i64 0, i64 0, !dbg !10139
  %rt_tree = bitcast %union.rtunion_def* %arrayidx33 to %union.tree_node**, !dbg !10139
  %43 = load %union.tree_node*, %union.tree_node** %rt_tree, align 8, !dbg !10139
  store %union.tree_node* %43, %union.tree_node** %var, align 8, !dbg !10140
  %44 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %out, align 8, !dbg !10141
  %45 = load %union.tree_node*, %union.tree_node** %var, align 8, !dbg !10142
  %call34 = call i8* @dv_from_decl(%union.tree_node* %45), !dbg !10143
  call void @clobber_variable_part(%struct.dataflow_set_def* %44, %struct.rtx_def* null, i8* %call34, i64 0, %struct.rtx_def* null), !dbg !10144
  %46 = load %struct.rtx_def*, %struct.rtx_def** %val, align 8, !dbg !10145
  %tobool35 = icmp ne %struct.rtx_def* %46, null, !dbg !10145
  br i1 %tobool35, label %if.then36, label %if.else47, !dbg !10147

if.then36:                                        ; preds = %if.end30
  %47 = load %struct.rtx_def*, %struct.rtx_def** %loc17, align 8, !dbg !10148
  %48 = bitcast %struct.rtx_def* %47 to i32*, !dbg !10148
  %bf.load37 = load i32, i32* %48, align 8, !dbg !10148
  %bf.lshr = lshr i32 %bf.load37, 27, !dbg !10148
  %bf.clear38 = and i32 %bf.lshr, 1, !dbg !10148
  %tobool39 = icmp ne i32 %bf.clear38, 0, !dbg !10148
  br i1 %tobool39, label %if.then40, label %if.end45, !dbg !10151

if.then40:                                        ; preds = %if.then36
  %49 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %out, align 8, !dbg !10152
  %50 = load %struct.rtx_def*, %struct.rtx_def** %val, align 8, !dbg !10153
  %51 = load %struct.rtx_def*, %struct.rtx_def** %vloc, align 8, !dbg !10154
  %u41 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %51, i32 0, i32 1, !dbg !10154
  %fld42 = bitcast %union.u* %u41 to [1 x %union.rtunion_def]*, !dbg !10154
  %arrayidx43 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld42, i64 0, i64 1, !dbg !10154
  %rt_rtx44 = bitcast %union.rtunion_def* %arrayidx43 to %struct.rtx_def**, !dbg !10154
  %52 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx44, align 8, !dbg !10154
  %53 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !10155
  call void @val_resolve(%struct.dataflow_set_def* %49, %struct.rtx_def* %50, %struct.rtx_def* %52, %struct.rtx_def* %53), !dbg !10156
  br label %if.end45, !dbg !10156

if.end45:                                         ; preds = %if.then40, %if.then36
  %54 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %out, align 8, !dbg !10157
  %55 = load %struct.rtx_def*, %struct.rtx_def** %val, align 8, !dbg !10158
  %56 = load %union.tree_node*, %union.tree_node** %var, align 8, !dbg !10159
  %call46 = call i8* @dv_from_decl(%union.tree_node* %56), !dbg !10160
  call void @set_variable_part(%struct.dataflow_set_def* %54, %struct.rtx_def* %55, i8* %call46, i64 0, i32 2, %struct.rtx_def* null, i32 1), !dbg !10161
  br label %if.end71, !dbg !10162

if.else47:                                        ; preds = %if.end30
  %57 = load %struct.rtx_def*, %struct.rtx_def** %vloc, align 8, !dbg !10163
  %u48 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %57, i32 0, i32 1, !dbg !10163
  %fld49 = bitcast %union.u* %u48 to [1 x %union.rtunion_def]*, !dbg !10163
  %arrayidx50 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld49, i64 0, i64 1, !dbg !10163
  %rt_rtx51 = bitcast %union.rtunion_def* %arrayidx50 to %struct.rtx_def**, !dbg !10163
  %58 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx51, align 8, !dbg !10163
  %59 = bitcast %struct.rtx_def* %58 to i32*, !dbg !10163
  %bf.load52 = load i32, i32* %59, align 8, !dbg !10163
  %bf.clear53 = and i32 %bf.load52, 65535, !dbg !10163
  %cmp54 = icmp eq i32 %bf.clear53, 25, !dbg !10163
  br i1 %cmp54, label %land.lhs.true, label %if.then64, !dbg !10163

land.lhs.true:                                    ; preds = %if.else47
  %60 = load %struct.rtx_def*, %struct.rtx_def** %vloc, align 8, !dbg !10163
  %u55 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %60, i32 0, i32 1, !dbg !10163
  %fld56 = bitcast %union.u* %u55 to [1 x %union.rtunion_def]*, !dbg !10163
  %arrayidx57 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld56, i64 0, i64 1, !dbg !10163
  %rt_rtx58 = bitcast %union.rtunion_def* %arrayidx57 to %struct.rtx_def**, !dbg !10163
  %61 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx58, align 8, !dbg !10163
  %u59 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %61, i32 0, i32 1, !dbg !10163
  %fld60 = bitcast %union.u* %u59 to [1 x %union.rtunion_def]*, !dbg !10163
  %arrayidx61 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld60, i64 0, i64 0, !dbg !10163
  %rt_rtx62 = bitcast %union.rtunion_def* %arrayidx61 to %struct.rtx_def**, !dbg !10163
  %62 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx62, align 8, !dbg !10163
  %63 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !10163
  %cmp63 = icmp eq %struct.rtx_def* %62, %63, !dbg !10163
  br i1 %cmp63, label %if.end70, label %if.then64, !dbg !10165

if.then64:                                        ; preds = %land.lhs.true, %if.else47
  %64 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %out, align 8, !dbg !10166
  %65 = load %struct.rtx_def*, %struct.rtx_def** %vloc, align 8, !dbg !10167
  %u65 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %65, i32 0, i32 1, !dbg !10167
  %fld66 = bitcast %union.u* %u65 to [1 x %union.rtunion_def]*, !dbg !10167
  %arrayidx67 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld66, i64 0, i64 1, !dbg !10167
  %rt_rtx68 = bitcast %union.rtunion_def* %arrayidx67 to %struct.rtx_def**, !dbg !10167
  %66 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx68, align 8, !dbg !10167
  %67 = load %union.tree_node*, %union.tree_node** %var, align 8, !dbg !10168
  %call69 = call i8* @dv_from_decl(%union.tree_node* %67), !dbg !10169
  call void @set_variable_part(%struct.dataflow_set_def* %64, %struct.rtx_def* %66, i8* %call69, i64 0, i32 2, %struct.rtx_def* null, i32 1), !dbg !10170
  br label %if.end70, !dbg !10170

if.end70:                                         ; preds = %if.then64, %land.lhs.true
  br label %if.end71

if.end71:                                         ; preds = %if.end70, %if.end45
  br label %sw.epilog, !dbg !10171

sw.bb72:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %loc73, metadata !10172, metadata !DIExpression()), !dbg !10174
  %68 = load %struct.micro_operation_def*, %struct.micro_operation_def** %mo, align 8, !dbg !10175
  %u74 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %68, i32 0, i32 2, !dbg !10176
  %loc75 = bitcast %union.anon.0* %u74 to %struct.rtx_def**, !dbg !10177
  %69 = load %struct.rtx_def*, %struct.rtx_def** %loc75, align 8, !dbg !10177
  store %struct.rtx_def* %69, %struct.rtx_def** %loc73, align 8, !dbg !10174
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %val76, metadata !10178, metadata !DIExpression()), !dbg !10179
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %vloc77, metadata !10180, metadata !DIExpression()), !dbg !10181
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %uloc, metadata !10182, metadata !DIExpression()), !dbg !10183
  %70 = load %struct.rtx_def*, %struct.rtx_def** %loc73, align 8, !dbg !10184
  %u78 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %70, i32 0, i32 1, !dbg !10184
  %fld79 = bitcast %union.u* %u78 to [1 x %union.rtunion_def]*, !dbg !10184
  %arrayidx80 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld79, i64 0, i64 1, !dbg !10184
  %rt_rtx81 = bitcast %union.rtunion_def* %arrayidx80 to %struct.rtx_def**, !dbg !10184
  %71 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx81, align 8, !dbg !10184
  store %struct.rtx_def* %71, %struct.rtx_def** %uloc, align 8, !dbg !10185
  store %struct.rtx_def* %71, %struct.rtx_def** %vloc77, align 8, !dbg !10186
  %72 = load %struct.rtx_def*, %struct.rtx_def** %loc73, align 8, !dbg !10187
  %u82 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %72, i32 0, i32 1, !dbg !10187
  %fld83 = bitcast %union.u* %u82 to [1 x %union.rtunion_def]*, !dbg !10187
  %arrayidx84 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld83, i64 0, i64 0, !dbg !10187
  %rt_rtx85 = bitcast %union.rtunion_def* %arrayidx84 to %struct.rtx_def**, !dbg !10187
  %73 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx85, align 8, !dbg !10187
  store %struct.rtx_def* %73, %struct.rtx_def** %val76, align 8, !dbg !10188
  %74 = load %struct.rtx_def*, %struct.rtx_def** %val76, align 8, !dbg !10189
  %75 = bitcast %struct.rtx_def* %74 to i32*, !dbg !10189
  %bf.load86 = load i32, i32* %75, align 8, !dbg !10189
  %bf.clear87 = and i32 %bf.load86, 65535, !dbg !10189
  %cmp88 = icmp eq i32 %bf.clear87, 41, !dbg !10191
  br i1 %cmp88, label %if.then89, label %if.end98, !dbg !10192

if.then89:                                        ; preds = %sw.bb72
  %76 = load %struct.rtx_def*, %struct.rtx_def** %val76, align 8, !dbg !10193
  %u90 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %76, i32 0, i32 1, !dbg !10193
  %fld91 = bitcast %union.u* %u90 to [1 x %union.rtunion_def]*, !dbg !10193
  %arrayidx92 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld91, i64 0, i64 1, !dbg !10193
  %rt_rtx93 = bitcast %union.rtunion_def* %arrayidx92 to %struct.rtx_def**, !dbg !10193
  %77 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx93, align 8, !dbg !10193
  store %struct.rtx_def* %77, %struct.rtx_def** %uloc, align 8, !dbg !10195
  %78 = load %struct.rtx_def*, %struct.rtx_def** %val76, align 8, !dbg !10196
  %u94 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %78, i32 0, i32 1, !dbg !10196
  %fld95 = bitcast %union.u* %u94 to [1 x %union.rtunion_def]*, !dbg !10196
  %arrayidx96 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld95, i64 0, i64 0, !dbg !10196
  %rt_rtx97 = bitcast %union.rtunion_def* %arrayidx96 to %struct.rtx_def**, !dbg !10196
  %79 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx97, align 8, !dbg !10196
  store %struct.rtx_def* %79, %struct.rtx_def** %val76, align 8, !dbg !10197
  br label %if.end98, !dbg !10198

if.end98:                                         ; preds = %if.then89, %sw.bb72
  %80 = load %struct.rtx_def*, %struct.rtx_def** %loc73, align 8, !dbg !10199
  %81 = bitcast %struct.rtx_def* %80 to i32*, !dbg !10199
  %bf.load99 = load i32, i32* %81, align 8, !dbg !10199
  %bf.lshr100 = lshr i32 %bf.load99, 27, !dbg !10199
  %bf.clear101 = and i32 %bf.lshr100, 1, !dbg !10199
  %tobool102 = icmp ne i32 %bf.clear101, 0, !dbg !10199
  br i1 %tobool102, label %if.then103, label %if.else104, !dbg !10201

if.then103:                                       ; preds = %if.end98
  %82 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %out, align 8, !dbg !10202
  %83 = load %struct.rtx_def*, %struct.rtx_def** %val76, align 8, !dbg !10203
  %84 = load %struct.rtx_def*, %struct.rtx_def** %vloc77, align 8, !dbg !10204
  %85 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !10205
  call void @val_resolve(%struct.dataflow_set_def* %82, %struct.rtx_def* %83, %struct.rtx_def* %84, %struct.rtx_def* %85), !dbg !10206
  br label %if.end105, !dbg !10206

if.else104:                                       ; preds = %if.end98
  %86 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %out, align 8, !dbg !10207
  %87 = load %struct.rtx_def*, %struct.rtx_def** %val76, align 8, !dbg !10208
  %88 = load %struct.rtx_def*, %struct.rtx_def** %uloc, align 8, !dbg !10209
  %89 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !10210
  call void @val_store(%struct.dataflow_set_def* %86, %struct.rtx_def* %87, %struct.rtx_def* %88, %struct.rtx_def* %89, i8 zeroext 0), !dbg !10211
  br label %if.end105

if.end105:                                        ; preds = %if.else104, %if.then103
  %90 = load %struct.rtx_def*, %struct.rtx_def** %loc73, align 8, !dbg !10212
  %91 = bitcast %struct.rtx_def* %90 to i32*, !dbg !10212
  %bf.load106 = load i32, i32* %91, align 8, !dbg !10212
  %bf.lshr107 = lshr i32 %bf.load106, 29, !dbg !10212
  %bf.clear108 = and i32 %bf.lshr107, 1, !dbg !10212
  %tobool109 = icmp ne i32 %bf.clear108, 0, !dbg !10212
  br i1 %tobool109, label %if.then110, label %if.end122, !dbg !10214

if.then110:                                       ; preds = %if.end105
  %92 = load %struct.rtx_def*, %struct.rtx_def** %uloc, align 8, !dbg !10215
  %93 = bitcast %struct.rtx_def* %92 to i32*, !dbg !10215
  %bf.load111 = load i32, i32* %93, align 8, !dbg !10215
  %bf.clear112 = and i32 %bf.load111, 65535, !dbg !10215
  %cmp113 = icmp eq i32 %bf.clear112, 37, !dbg !10218
  br i1 %cmp113, label %if.then114, label %if.else115, !dbg !10219

if.then114:                                       ; preds = %if.then110
  %94 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %out, align 8, !dbg !10220
  %95 = load %struct.rtx_def*, %struct.rtx_def** %uloc, align 8, !dbg !10221
  call void @var_reg_set(%struct.dataflow_set_def* %94, %struct.rtx_def* %95, i32 1, %struct.rtx_def* null), !dbg !10222
  br label %if.end121, !dbg !10222

if.else115:                                       ; preds = %if.then110
  %96 = load %struct.rtx_def*, %struct.rtx_def** %uloc, align 8, !dbg !10223
  %97 = bitcast %struct.rtx_def* %96 to i32*, !dbg !10223
  %bf.load116 = load i32, i32* %97, align 8, !dbg !10223
  %bf.clear117 = and i32 %bf.load116, 65535, !dbg !10223
  %cmp118 = icmp eq i32 %bf.clear117, 43, !dbg !10225
  br i1 %cmp118, label %if.then119, label %if.end120, !dbg !10226

if.then119:                                       ; preds = %if.else115
  %98 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %out, align 8, !dbg !10227
  %99 = load %struct.rtx_def*, %struct.rtx_def** %uloc, align 8, !dbg !10228
  call void @var_mem_set(%struct.dataflow_set_def* %98, %struct.rtx_def* %99, i32 1, %struct.rtx_def* null), !dbg !10229
  br label %if.end120, !dbg !10229

if.end120:                                        ; preds = %if.then119, %if.else115
  br label %if.end121

if.end121:                                        ; preds = %if.end120, %if.then114
  br label %if.end122, !dbg !10230

if.end122:                                        ; preds = %if.end121, %if.end105
  br label %sw.epilog, !dbg !10231

sw.bb123:                                         ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %loc124, metadata !10232, metadata !DIExpression()), !dbg !10234
  %100 = load %struct.micro_operation_def*, %struct.micro_operation_def** %mo, align 8, !dbg !10235
  %u125 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %100, i32 0, i32 2, !dbg !10236
  %loc126 = bitcast %union.anon.0* %u125 to %struct.rtx_def**, !dbg !10237
  %101 = load %struct.rtx_def*, %struct.rtx_def** %loc126, align 8, !dbg !10237
  store %struct.rtx_def* %101, %struct.rtx_def** %loc124, align 8, !dbg !10234
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %val127, metadata !10238, metadata !DIExpression()), !dbg !10239
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %vloc128, metadata !10240, metadata !DIExpression()), !dbg !10241
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %uloc129, metadata !10242, metadata !DIExpression()), !dbg !10243
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %reverse, metadata !10244, metadata !DIExpression()), !dbg !10245
  store %struct.rtx_def* null, %struct.rtx_def** %reverse, align 8, !dbg !10245
  %102 = load %struct.rtx_def*, %struct.rtx_def** %loc124, align 8, !dbg !10246
  store %struct.rtx_def* %102, %struct.rtx_def** %vloc128, align 8, !dbg !10247
  %103 = load %struct.rtx_def*, %struct.rtx_def** %loc124, align 8, !dbg !10248
  %104 = bitcast %struct.rtx_def* %103 to i32*, !dbg !10248
  %bf.load130 = load i32, i32* %104, align 8, !dbg !10248
  %bf.lshr131 = lshr i32 %bf.load130, 31, !dbg !10248
  %tobool132 = icmp ne i32 %bf.lshr131, 0, !dbg !10248
  br i1 %tobool132, label %if.then133, label %if.end142, !dbg !10250

if.then133:                                       ; preds = %sw.bb123
  %105 = load %struct.rtx_def*, %struct.rtx_def** %loc124, align 8, !dbg !10251
  %u134 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %105, i32 0, i32 1, !dbg !10251
  %fld135 = bitcast %union.u* %u134 to [1 x %union.rtunion_def]*, !dbg !10251
  %arrayidx136 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld135, i64 0, i64 1, !dbg !10251
  %rt_rtx137 = bitcast %union.rtunion_def* %arrayidx136 to %struct.rtx_def**, !dbg !10251
  %106 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx137, align 8, !dbg !10251
  store %struct.rtx_def* %106, %struct.rtx_def** %reverse, align 8, !dbg !10253
  %107 = load %struct.rtx_def*, %struct.rtx_def** %loc124, align 8, !dbg !10254
  %u138 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %107, i32 0, i32 1, !dbg !10254
  %fld139 = bitcast %union.u* %u138 to [1 x %union.rtunion_def]*, !dbg !10254
  %arrayidx140 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld139, i64 0, i64 0, !dbg !10254
  %rt_rtx141 = bitcast %union.rtunion_def* %arrayidx140 to %struct.rtx_def**, !dbg !10254
  %108 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx141, align 8, !dbg !10254
  store %struct.rtx_def* %108, %struct.rtx_def** %vloc128, align 8, !dbg !10255
  br label %if.end142, !dbg !10256

if.end142:                                        ; preds = %if.then133, %sw.bb123
  %109 = load %struct.rtx_def*, %struct.rtx_def** %vloc128, align 8, !dbg !10257
  %u143 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %109, i32 0, i32 1, !dbg !10257
  %fld144 = bitcast %union.u* %u143 to [1 x %union.rtunion_def]*, !dbg !10257
  %arrayidx145 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld144, i64 0, i64 1, !dbg !10257
  %rt_rtx146 = bitcast %union.rtunion_def* %arrayidx145 to %struct.rtx_def**, !dbg !10257
  %110 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx146, align 8, !dbg !10257
  store %struct.rtx_def* %110, %struct.rtx_def** %uloc129, align 8, !dbg !10258
  %111 = load %struct.rtx_def*, %struct.rtx_def** %vloc128, align 8, !dbg !10259
  %u147 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %111, i32 0, i32 1, !dbg !10259
  %fld148 = bitcast %union.u* %u147 to [1 x %union.rtunion_def]*, !dbg !10259
  %arrayidx149 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld148, i64 0, i64 0, !dbg !10259
  %rt_rtx150 = bitcast %union.rtunion_def* %arrayidx149 to %struct.rtx_def**, !dbg !10259
  %112 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx150, align 8, !dbg !10259
  store %struct.rtx_def* %112, %struct.rtx_def** %val127, align 8, !dbg !10260
  %113 = load %struct.rtx_def*, %struct.rtx_def** %uloc129, align 8, !dbg !10261
  store %struct.rtx_def* %113, %struct.rtx_def** %vloc128, align 8, !dbg !10262
  %114 = load %struct.rtx_def*, %struct.rtx_def** %val127, align 8, !dbg !10263
  %115 = bitcast %struct.rtx_def* %114 to i32*, !dbg !10263
  %bf.load151 = load i32, i32* %115, align 8, !dbg !10263
  %bf.clear152 = and i32 %bf.load151, 65535, !dbg !10263
  %cmp153 = icmp eq i32 %bf.clear152, 41, !dbg !10265
  br i1 %cmp153, label %if.then154, label %if.end163, !dbg !10266

if.then154:                                       ; preds = %if.end142
  %116 = load %struct.rtx_def*, %struct.rtx_def** %val127, align 8, !dbg !10267
  %u155 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %116, i32 0, i32 1, !dbg !10267
  %fld156 = bitcast %union.u* %u155 to [1 x %union.rtunion_def]*, !dbg !10267
  %arrayidx157 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld156, i64 0, i64 1, !dbg !10267
  %rt_rtx158 = bitcast %union.rtunion_def* %arrayidx157 to %struct.rtx_def**, !dbg !10267
  %117 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx158, align 8, !dbg !10267
  store %struct.rtx_def* %117, %struct.rtx_def** %vloc128, align 8, !dbg !10269
  %118 = load %struct.rtx_def*, %struct.rtx_def** %val127, align 8, !dbg !10270
  %u159 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %118, i32 0, i32 1, !dbg !10270
  %fld160 = bitcast %union.u* %u159 to [1 x %union.rtunion_def]*, !dbg !10270
  %arrayidx161 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld160, i64 0, i64 0, !dbg !10270
  %rt_rtx162 = bitcast %union.rtunion_def* %arrayidx161 to %struct.rtx_def**, !dbg !10270
  %119 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx162, align 8, !dbg !10270
  store %struct.rtx_def* %119, %struct.rtx_def** %val127, align 8, !dbg !10271
  br label %if.end163, !dbg !10272

if.end163:                                        ; preds = %if.then154, %if.end142
  %120 = load %struct.rtx_def*, %struct.rtx_def** %vloc128, align 8, !dbg !10273
  %121 = bitcast %struct.rtx_def* %120 to i32*, !dbg !10273
  %bf.load164 = load i32, i32* %121, align 8, !dbg !10273
  %bf.clear165 = and i32 %bf.load164, 65535, !dbg !10273
  %cmp166 = icmp eq i32 %bf.clear165, 23, !dbg !10275
  br i1 %cmp166, label %if.then167, label %if.else196, !dbg !10276

if.then167:                                       ; preds = %if.end163
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %vsrc, metadata !10277, metadata !DIExpression()), !dbg !10279
  %122 = load %struct.rtx_def*, %struct.rtx_def** %vloc128, align 8, !dbg !10280
  %u168 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %122, i32 0, i32 1, !dbg !10280
  %fld169 = bitcast %union.u* %u168 to [1 x %union.rtunion_def]*, !dbg !10280
  %arrayidx170 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld169, i64 0, i64 1, !dbg !10280
  %rt_rtx171 = bitcast %union.rtunion_def* %arrayidx170 to %struct.rtx_def**, !dbg !10280
  %123 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx171, align 8, !dbg !10280
  store %struct.rtx_def* %123, %struct.rtx_def** %vsrc, align 8, !dbg !10279
  %124 = load %struct.rtx_def*, %struct.rtx_def** %val127, align 8, !dbg !10281
  %125 = load %struct.rtx_def*, %struct.rtx_def** %vsrc, align 8, !dbg !10281
  %cmp172 = icmp ne %struct.rtx_def* %124, %125, !dbg !10281
  br i1 %cmp172, label %cond.false174, label %cond.true173, !dbg !10281

cond.true173:                                     ; preds = %if.then167
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 5764, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !10281
  br label %cond.end175, !dbg !10281

cond.false174:                                    ; preds = %if.then167
  br label %cond.end175, !dbg !10281

cond.end175:                                      ; preds = %cond.false174, %cond.true173
  %cond176 = phi i32 [ 0, %cond.true173 ], [ 0, %cond.false174 ], !dbg !10281
  %126 = load %struct.rtx_def*, %struct.rtx_def** %vloc128, align 8, !dbg !10282
  %127 = load %struct.rtx_def*, %struct.rtx_def** %uloc129, align 8, !dbg !10282
  %cmp177 = icmp eq %struct.rtx_def* %126, %127, !dbg !10282
  br i1 %cmp177, label %cond.false183, label %lor.lhs.false, !dbg !10282

lor.lhs.false:                                    ; preds = %cond.end175
  %128 = load %struct.rtx_def*, %struct.rtx_def** %loc124, align 8, !dbg !10282
  %129 = bitcast %struct.rtx_def* %128 to i32*, !dbg !10282
  %bf.load178 = load i32, i32* %129, align 8, !dbg !10282
  %bf.lshr179 = lshr i32 %bf.load178, 27, !dbg !10282
  %bf.clear180 = and i32 %bf.lshr179, 1, !dbg !10282
  %tobool181 = icmp ne i32 %bf.clear180, 0, !dbg !10282
  br i1 %tobool181, label %cond.false183, label %cond.true182, !dbg !10282

cond.true182:                                     ; preds = %lor.lhs.false
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 5765, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !10282
  br label %cond.end184, !dbg !10282

cond.false183:                                    ; preds = %lor.lhs.false, %cond.end175
  br label %cond.end184, !dbg !10282

cond.end184:                                      ; preds = %cond.false183, %cond.true182
  %cond185 = phi i32 [ 0, %cond.true182 ], [ 0, %cond.false183 ], !dbg !10282
  %130 = load %struct.rtx_def*, %struct.rtx_def** %vloc128, align 8, !dbg !10283
  %u186 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %130, i32 0, i32 1, !dbg !10283
  %fld187 = bitcast %union.u* %u186 to [1 x %union.rtunion_def]*, !dbg !10283
  %arrayidx188 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld187, i64 0, i64 0, !dbg !10283
  %rt_rtx189 = bitcast %union.rtunion_def* %arrayidx188 to %struct.rtx_def**, !dbg !10283
  %131 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx189, align 8, !dbg !10283
  store %struct.rtx_def* %131, %struct.rtx_def** %vloc128, align 8, !dbg !10284
  %132 = load %struct.rtx_def*, %struct.rtx_def** %loc124, align 8, !dbg !10285
  %133 = bitcast %struct.rtx_def* %132 to i32*, !dbg !10285
  %bf.load190 = load i32, i32* %133, align 8, !dbg !10285
  %bf.lshr191 = lshr i32 %bf.load190, 27, !dbg !10285
  %bf.clear192 = and i32 %bf.lshr191, 1, !dbg !10285
  %tobool193 = icmp ne i32 %bf.clear192, 0, !dbg !10285
  br i1 %tobool193, label %if.then194, label %if.end195, !dbg !10287

if.then194:                                       ; preds = %cond.end184
  %134 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %out, align 8, !dbg !10288
  %135 = load %struct.rtx_def*, %struct.rtx_def** %val127, align 8, !dbg !10289
  %136 = load %struct.rtx_def*, %struct.rtx_def** %vsrc, align 8, !dbg !10290
  %137 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !10291
  call void @val_resolve(%struct.dataflow_set_def* %134, %struct.rtx_def* %135, %struct.rtx_def* %136, %struct.rtx_def* %137), !dbg !10292
  br label %if.end195, !dbg !10292

if.end195:                                        ; preds = %if.then194, %cond.end184
  br label %if.end222, !dbg !10293

if.else196:                                       ; preds = %if.end163
  %138 = load %struct.rtx_def*, %struct.rtx_def** %loc124, align 8, !dbg !10294
  %139 = bitcast %struct.rtx_def* %138 to i32*, !dbg !10294
  %bf.load197 = load i32, i32* %139, align 8, !dbg !10294
  %bf.lshr198 = lshr i32 %bf.load197, 27, !dbg !10294
  %bf.clear199 = and i32 %bf.lshr198, 1, !dbg !10294
  %tobool200 = icmp ne i32 %bf.clear199, 0, !dbg !10294
  br i1 %tobool200, label %if.then201, label %if.end221, !dbg !10296

if.then201:                                       ; preds = %if.else196
  %140 = load %struct.rtx_def*, %struct.rtx_def** %uloc129, align 8, !dbg !10297
  %141 = bitcast %struct.rtx_def* %140 to i32*, !dbg !10297
  %bf.load202 = load i32, i32* %141, align 8, !dbg !10297
  %bf.clear203 = and i32 %bf.load202, 65535, !dbg !10297
  %cmp204 = icmp eq i32 %bf.clear203, 23, !dbg !10297
  br i1 %cmp204, label %land.lhs.true205, label %cond.true213, !dbg !10297

land.lhs.true205:                                 ; preds = %if.then201
  %142 = load %struct.rtx_def*, %struct.rtx_def** %uloc129, align 8, !dbg !10297
  %u206 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %142, i32 0, i32 1, !dbg !10297
  %fld207 = bitcast %union.u* %u206 to [1 x %union.rtunion_def]*, !dbg !10297
  %arrayidx208 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld207, i64 0, i64 1, !dbg !10297
  %rt_rtx209 = bitcast %union.rtunion_def* %arrayidx208 to %struct.rtx_def**, !dbg !10297
  %143 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx209, align 8, !dbg !10297
  %144 = bitcast %struct.rtx_def* %143 to i32*, !dbg !10297
  %bf.load210 = load i32, i32* %144, align 8, !dbg !10297
  %bf.clear211 = and i32 %bf.load210, 65535, !dbg !10297
  %cmp212 = icmp eq i32 %bf.clear211, 37, !dbg !10297
  br i1 %cmp212, label %cond.false214, label %cond.true213, !dbg !10297

cond.true213:                                     ; preds = %land.lhs.true205, %if.then201
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 5775, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !10297
  br label %cond.end215, !dbg !10297

cond.false214:                                    ; preds = %land.lhs.true205
  br label %cond.end215, !dbg !10297

cond.end215:                                      ; preds = %cond.false214, %cond.true213
  %cond216 = phi i32 [ 0, %cond.true213 ], [ 0, %cond.false214 ], !dbg !10297
  %145 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %out, align 8, !dbg !10299
  %146 = load %struct.rtx_def*, %struct.rtx_def** %val127, align 8, !dbg !10300
  %147 = load %struct.rtx_def*, %struct.rtx_def** %uloc129, align 8, !dbg !10301
  %u217 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %147, i32 0, i32 1, !dbg !10301
  %fld218 = bitcast %union.u* %u217 to [1 x %union.rtunion_def]*, !dbg !10301
  %arrayidx219 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld218, i64 0, i64 1, !dbg !10301
  %rt_rtx220 = bitcast %union.rtunion_def* %arrayidx219 to %struct.rtx_def**, !dbg !10301
  %148 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx220, align 8, !dbg !10301
  %149 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !10302
  call void @val_resolve(%struct.dataflow_set_def* %145, %struct.rtx_def* %146, %struct.rtx_def* %148, %struct.rtx_def* %149), !dbg !10303
  br label %if.end221, !dbg !10304

if.end221:                                        ; preds = %cond.end215, %if.else196
  br label %if.end222

if.end222:                                        ; preds = %if.end221, %if.end195
  %150 = load %struct.rtx_def*, %struct.rtx_def** %loc124, align 8, !dbg !10305
  %151 = bitcast %struct.rtx_def* %150 to i32*, !dbg !10305
  %bf.load223 = load i32, i32* %151, align 8, !dbg !10305
  %bf.lshr224 = lshr i32 %bf.load223, 29, !dbg !10305
  %bf.clear225 = and i32 %bf.lshr224, 1, !dbg !10305
  %tobool226 = icmp ne i32 %bf.clear225, 0, !dbg !10305
  br i1 %tobool226, label %if.then227, label %if.else295, !dbg !10307

if.then227:                                       ; preds = %if.end222
  %152 = load %struct.rtx_def*, %struct.rtx_def** %loc124, align 8, !dbg !10308
  %153 = bitcast %struct.rtx_def* %152 to i32*, !dbg !10308
  %bf.load228 = load i32, i32* %153, align 8, !dbg !10308
  %bf.lshr229 = lshr i32 %bf.load228, 26, !dbg !10308
  %bf.clear230 = and i32 %bf.lshr229, 1, !dbg !10308
  %tobool231 = icmp ne i32 %bf.clear230, 0, !dbg !10308
  br i1 %tobool231, label %if.then232, label %if.else244, !dbg !10311

if.then232:                                       ; preds = %if.then227
  %154 = load %struct.rtx_def*, %struct.rtx_def** %uloc129, align 8, !dbg !10312
  %155 = bitcast %struct.rtx_def* %154 to i32*, !dbg !10312
  %bf.load233 = load i32, i32* %155, align 8, !dbg !10312
  %bf.clear234 = and i32 %bf.load233, 65535, !dbg !10312
  %cmp235 = icmp eq i32 %bf.clear234, 37, !dbg !10312
  br i1 %cmp235, label %if.then236, label %if.else237, !dbg !10315

if.then236:                                       ; preds = %if.then232
  %156 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %out, align 8, !dbg !10316
  %157 = load %struct.rtx_def*, %struct.rtx_def** %uloc129, align 8, !dbg !10317
  call void @var_reg_delete(%struct.dataflow_set_def* %156, %struct.rtx_def* %157, i8 zeroext 1), !dbg !10318
  br label %if.end243, !dbg !10318

if.else237:                                       ; preds = %if.then232
  %158 = load %struct.rtx_def*, %struct.rtx_def** %uloc129, align 8, !dbg !10319
  %159 = bitcast %struct.rtx_def* %158 to i32*, !dbg !10319
  %bf.load238 = load i32, i32* %159, align 8, !dbg !10319
  %bf.clear239 = and i32 %bf.load238, 65535, !dbg !10319
  %cmp240 = icmp eq i32 %bf.clear239, 43, !dbg !10319
  br i1 %cmp240, label %if.then241, label %if.end242, !dbg !10321

if.then241:                                       ; preds = %if.else237
  %160 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %out, align 8, !dbg !10322
  %161 = load %struct.rtx_def*, %struct.rtx_def** %uloc129, align 8, !dbg !10323
  call void @var_mem_delete(%struct.dataflow_set_def* %160, %struct.rtx_def* %161, i8 zeroext 1), !dbg !10324
  br label %if.end242, !dbg !10324

if.end242:                                        ; preds = %if.then241, %if.else237
  br label %if.end243

if.end243:                                        ; preds = %if.end242, %if.then236
  br label %if.end294, !dbg !10325

if.else244:                                       ; preds = %if.then227
  call void @llvm.dbg.declare(metadata i8* %copied_p, metadata !10326, metadata !DIExpression()), !dbg !10328
  %162 = load %struct.rtx_def*, %struct.rtx_def** %loc124, align 8, !dbg !10329
  %163 = bitcast %struct.rtx_def* %162 to i32*, !dbg !10329
  %bf.load245 = load i32, i32* %163, align 8, !dbg !10329
  %bf.lshr246 = lshr i32 %bf.load245, 24, !dbg !10329
  %bf.clear247 = and i32 %bf.lshr246, 1, !dbg !10329
  %conv = trunc i32 %bf.clear247 to i8, !dbg !10329
  store i8 %conv, i8* %copied_p, align 1, !dbg !10328
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %set_src, metadata !10330, metadata !DIExpression()), !dbg !10331
  store %struct.rtx_def* null, %struct.rtx_def** %set_src, align 8, !dbg !10331
  call void @llvm.dbg.declare(metadata i32* %status, metadata !10332, metadata !DIExpression()), !dbg !10333
  store i32 2, i32* %status, align 4, !dbg !10333
  %164 = load %struct.rtx_def*, %struct.rtx_def** %uloc129, align 8, !dbg !10334
  %165 = bitcast %struct.rtx_def* %164 to i32*, !dbg !10334
  %bf.load248 = load i32, i32* %165, align 8, !dbg !10334
  %bf.clear249 = and i32 %bf.load248, 65535, !dbg !10334
  %cmp250 = icmp eq i32 %bf.clear249, 23, !dbg !10336
  br i1 %cmp250, label %if.then252, label %if.end261, !dbg !10337

if.then252:                                       ; preds = %if.else244
  %166 = load %struct.rtx_def*, %struct.rtx_def** %uloc129, align 8, !dbg !10338
  %u253 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %166, i32 0, i32 1, !dbg !10338
  %fld254 = bitcast %union.u* %u253 to [1 x %union.rtunion_def]*, !dbg !10338
  %arrayidx255 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld254, i64 0, i64 1, !dbg !10338
  %rt_rtx256 = bitcast %union.rtunion_def* %arrayidx255 to %struct.rtx_def**, !dbg !10338
  %167 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx256, align 8, !dbg !10338
  store %struct.rtx_def* %167, %struct.rtx_def** %set_src, align 8, !dbg !10340
  %168 = load %struct.rtx_def*, %struct.rtx_def** %uloc129, align 8, !dbg !10341
  %u257 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %168, i32 0, i32 1, !dbg !10341
  %fld258 = bitcast %union.u* %u257 to [1 x %union.rtunion_def]*, !dbg !10341
  %arrayidx259 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld258, i64 0, i64 0, !dbg !10341
  %rt_rtx260 = bitcast %union.rtunion_def* %arrayidx259 to %struct.rtx_def**, !dbg !10341
  %169 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx260, align 8, !dbg !10341
  store %struct.rtx_def* %169, %struct.rtx_def** %uloc129, align 8, !dbg !10342
  br label %if.end261, !dbg !10343

if.end261:                                        ; preds = %if.then252, %if.else244
  %170 = load i8, i8* %copied_p, align 1, !dbg !10344
  %tobool262 = icmp ne i8 %170, 0, !dbg !10344
  br i1 %tobool262, label %if.then263, label %if.end274, !dbg !10346

if.then263:                                       ; preds = %if.end261
  %171 = load i32, i32* @flag_var_tracking_uninit, align 4, !dbg !10347
  %tobool264 = icmp ne i32 %171, 0, !dbg !10347
  br i1 %tobool264, label %if.then265, label %if.end272, !dbg !10350

if.then265:                                       ; preds = %if.then263
  %172 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %in, align 8, !dbg !10351
  %173 = load %struct.rtx_def*, %struct.rtx_def** %set_src, align 8, !dbg !10353
  %call266 = call i32 @find_src_status(%struct.dataflow_set_def* %172, %struct.rtx_def* %173), !dbg !10354
  store i32 %call266, i32* %status, align 4, !dbg !10355
  %174 = load i32, i32* %status, align 4, !dbg !10356
  %cmp267 = icmp eq i32 %174, 0, !dbg !10358
  br i1 %cmp267, label %if.then269, label %if.end271, !dbg !10359

if.then269:                                       ; preds = %if.then265
  %175 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %out, align 8, !dbg !10360
  %176 = load %struct.rtx_def*, %struct.rtx_def** %set_src, align 8, !dbg !10361
  %call270 = call i32 @find_src_status(%struct.dataflow_set_def* %175, %struct.rtx_def* %176), !dbg !10362
  store i32 %call270, i32* %status, align 4, !dbg !10363
  br label %if.end271, !dbg !10364

if.end271:                                        ; preds = %if.then269, %if.then265
  br label %if.end272, !dbg !10365

if.end272:                                        ; preds = %if.end271, %if.then263
  %177 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %in, align 8, !dbg !10366
  %178 = load %struct.rtx_def*, %struct.rtx_def** %set_src, align 8, !dbg !10367
  %call273 = call %struct.rtx_def* @find_src_set_src(%struct.dataflow_set_def* %177, %struct.rtx_def* %178), !dbg !10368
  store %struct.rtx_def* %call273, %struct.rtx_def** %set_src, align 8, !dbg !10369
  br label %if.end274, !dbg !10370

if.end274:                                        ; preds = %if.end272, %if.end261
  %179 = load %struct.rtx_def*, %struct.rtx_def** %uloc129, align 8, !dbg !10371
  %180 = bitcast %struct.rtx_def* %179 to i32*, !dbg !10371
  %bf.load275 = load i32, i32* %180, align 8, !dbg !10371
  %bf.clear276 = and i32 %bf.load275, 65535, !dbg !10371
  %cmp277 = icmp eq i32 %bf.clear276, 37, !dbg !10371
  br i1 %cmp277, label %if.then279, label %if.else282, !dbg !10373

if.then279:                                       ; preds = %if.end274
  %181 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %out, align 8, !dbg !10374
  %182 = load %struct.rtx_def*, %struct.rtx_def** %uloc129, align 8, !dbg !10375
  %183 = load i8, i8* %copied_p, align 1, !dbg !10376
  %tobool280 = icmp ne i8 %183, 0, !dbg !10377
  %lnot = xor i1 %tobool280, true, !dbg !10377
  %lnot.ext = zext i1 %lnot to i32, !dbg !10377
  %conv281 = trunc i32 %lnot.ext to i8, !dbg !10377
  %184 = load i32, i32* %status, align 4, !dbg !10378
  %185 = load %struct.rtx_def*, %struct.rtx_def** %set_src, align 8, !dbg !10379
  call void @var_reg_delete_and_set(%struct.dataflow_set_def* %181, %struct.rtx_def* %182, i8 zeroext %conv281, i32 %184, %struct.rtx_def* %185), !dbg !10380
  br label %if.end293, !dbg !10380

if.else282:                                       ; preds = %if.end274
  %186 = load %struct.rtx_def*, %struct.rtx_def** %uloc129, align 8, !dbg !10381
  %187 = bitcast %struct.rtx_def* %186 to i32*, !dbg !10381
  %bf.load283 = load i32, i32* %187, align 8, !dbg !10381
  %bf.clear284 = and i32 %bf.load283, 65535, !dbg !10381
  %cmp285 = icmp eq i32 %bf.clear284, 43, !dbg !10381
  br i1 %cmp285, label %if.then287, label %if.end292, !dbg !10383

if.then287:                                       ; preds = %if.else282
  %188 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %out, align 8, !dbg !10384
  %189 = load %struct.rtx_def*, %struct.rtx_def** %uloc129, align 8, !dbg !10385
  %190 = load i8, i8* %copied_p, align 1, !dbg !10386
  %tobool288 = icmp ne i8 %190, 0, !dbg !10387
  %lnot289 = xor i1 %tobool288, true, !dbg !10387
  %lnot.ext290 = zext i1 %lnot289 to i32, !dbg !10387
  %conv291 = trunc i32 %lnot.ext290 to i8, !dbg !10387
  %191 = load i32, i32* %status, align 4, !dbg !10388
  %192 = load %struct.rtx_def*, %struct.rtx_def** %set_src, align 8, !dbg !10389
  call void @var_mem_delete_and_set(%struct.dataflow_set_def* %188, %struct.rtx_def* %189, i8 zeroext %conv291, i32 %191, %struct.rtx_def* %192), !dbg !10390
  br label %if.end292, !dbg !10390

if.end292:                                        ; preds = %if.then287, %if.else282
  br label %if.end293

if.end293:                                        ; preds = %if.end292, %if.then279
  br label %if.end294

if.end294:                                        ; preds = %if.end293, %if.end243
  br label %if.end303, !dbg !10391

if.else295:                                       ; preds = %if.end222
  %193 = load %struct.rtx_def*, %struct.rtx_def** %uloc129, align 8, !dbg !10392
  %194 = bitcast %struct.rtx_def* %193 to i32*, !dbg !10392
  %bf.load296 = load i32, i32* %194, align 8, !dbg !10392
  %bf.clear297 = and i32 %bf.load296, 65535, !dbg !10392
  %cmp298 = icmp eq i32 %bf.clear297, 37, !dbg !10392
  br i1 %cmp298, label %if.then300, label %if.end302, !dbg !10394

if.then300:                                       ; preds = %if.else295
  %195 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %out, align 8, !dbg !10395
  %196 = load %struct.rtx_def*, %struct.rtx_def** %uloc129, align 8, !dbg !10396
  %call301 = call i32 @rhs_regno(%struct.rtx_def* %196), !dbg !10396
  call void @var_regno_delete(%struct.dataflow_set_def* %195, i32 %call301), !dbg !10397
  br label %if.end302, !dbg !10397

if.end302:                                        ; preds = %if.then300, %if.else295
  br label %if.end303

if.end303:                                        ; preds = %if.end302, %if.end294
  %197 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %out, align 8, !dbg !10398
  %198 = load %struct.rtx_def*, %struct.rtx_def** %val127, align 8, !dbg !10399
  %199 = load %struct.rtx_def*, %struct.rtx_def** %vloc128, align 8, !dbg !10400
  %200 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !10401
  call void @val_store(%struct.dataflow_set_def* %197, %struct.rtx_def* %198, %struct.rtx_def* %199, %struct.rtx_def* %200, i8 zeroext 1), !dbg !10402
  %201 = load %struct.rtx_def*, %struct.rtx_def** %reverse, align 8, !dbg !10403
  %tobool304 = icmp ne %struct.rtx_def* %201, null, !dbg !10403
  br i1 %tobool304, label %if.then305, label %if.end314, !dbg !10405

if.then305:                                       ; preds = %if.end303
  %202 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %out, align 8, !dbg !10406
  %203 = load %struct.rtx_def*, %struct.rtx_def** %reverse, align 8, !dbg !10407
  %u306 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %203, i32 0, i32 1, !dbg !10407
  %fld307 = bitcast %union.u* %u306 to [1 x %union.rtunion_def]*, !dbg !10407
  %arrayidx308 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld307, i64 0, i64 0, !dbg !10407
  %rt_rtx309 = bitcast %union.rtunion_def* %arrayidx308 to %struct.rtx_def**, !dbg !10407
  %204 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx309, align 8, !dbg !10407
  %205 = load %struct.rtx_def*, %struct.rtx_def** %reverse, align 8, !dbg !10408
  %u310 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %205, i32 0, i32 1, !dbg !10408
  %fld311 = bitcast %union.u* %u310 to [1 x %union.rtunion_def]*, !dbg !10408
  %arrayidx312 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld311, i64 0, i64 1, !dbg !10408
  %rt_rtx313 = bitcast %union.rtunion_def* %arrayidx312 to %struct.rtx_def**, !dbg !10408
  %206 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx313, align 8, !dbg !10408
  %207 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !10409
  call void @val_store(%struct.dataflow_set_def* %202, %struct.rtx_def* %204, %struct.rtx_def* %206, %struct.rtx_def* %207, i8 zeroext 0), !dbg !10410
  br label %if.end314, !dbg !10410

if.end314:                                        ; preds = %if.then305, %if.end303
  br label %sw.epilog, !dbg !10411

sw.bb315:                                         ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %loc316, metadata !10412, metadata !DIExpression()), !dbg !10414
  %208 = load %struct.micro_operation_def*, %struct.micro_operation_def** %mo, align 8, !dbg !10415
  %u317 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %208, i32 0, i32 2, !dbg !10416
  %loc318 = bitcast %union.anon.0* %u317 to %struct.rtx_def**, !dbg !10417
  %209 = load %struct.rtx_def*, %struct.rtx_def** %loc318, align 8, !dbg !10417
  store %struct.rtx_def* %209, %struct.rtx_def** %loc316, align 8, !dbg !10414
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %set_src319, metadata !10418, metadata !DIExpression()), !dbg !10419
  store %struct.rtx_def* null, %struct.rtx_def** %set_src319, align 8, !dbg !10419
  %210 = load %struct.rtx_def*, %struct.rtx_def** %loc316, align 8, !dbg !10420
  %211 = bitcast %struct.rtx_def* %210 to i32*, !dbg !10420
  %bf.load320 = load i32, i32* %211, align 8, !dbg !10420
  %bf.clear321 = and i32 %bf.load320, 65535, !dbg !10420
  %cmp322 = icmp eq i32 %bf.clear321, 23, !dbg !10422
  br i1 %cmp322, label %if.then324, label %if.end333, !dbg !10423

if.then324:                                       ; preds = %sw.bb315
  %212 = load %struct.rtx_def*, %struct.rtx_def** %loc316, align 8, !dbg !10424
  %u325 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %212, i32 0, i32 1, !dbg !10424
  %fld326 = bitcast %union.u* %u325 to [1 x %union.rtunion_def]*, !dbg !10424
  %arrayidx327 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld326, i64 0, i64 1, !dbg !10424
  %rt_rtx328 = bitcast %union.rtunion_def* %arrayidx327 to %struct.rtx_def**, !dbg !10424
  %213 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx328, align 8, !dbg !10424
  store %struct.rtx_def* %213, %struct.rtx_def** %set_src319, align 8, !dbg !10426
  %214 = load %struct.rtx_def*, %struct.rtx_def** %loc316, align 8, !dbg !10427
  %u329 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %214, i32 0, i32 1, !dbg !10427
  %fld330 = bitcast %union.u* %u329 to [1 x %union.rtunion_def]*, !dbg !10427
  %arrayidx331 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld330, i64 0, i64 0, !dbg !10427
  %rt_rtx332 = bitcast %union.rtunion_def* %arrayidx331 to %struct.rtx_def**, !dbg !10427
  %215 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx332, align 8, !dbg !10427
  store %struct.rtx_def* %215, %struct.rtx_def** %loc316, align 8, !dbg !10428
  br label %if.end333, !dbg !10429

if.end333:                                        ; preds = %if.then324, %sw.bb315
  %216 = load %struct.rtx_def*, %struct.rtx_def** %loc316, align 8, !dbg !10430
  %217 = bitcast %struct.rtx_def* %216 to i32*, !dbg !10430
  %bf.load334 = load i32, i32* %217, align 8, !dbg !10430
  %bf.clear335 = and i32 %bf.load334, 65535, !dbg !10430
  %cmp336 = icmp eq i32 %bf.clear335, 37, !dbg !10430
  br i1 %cmp336, label %if.then338, label %if.else339, !dbg !10432

if.then338:                                       ; preds = %if.end333
  %218 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %out, align 8, !dbg !10433
  %219 = load %struct.rtx_def*, %struct.rtx_def** %loc316, align 8, !dbg !10434
  %220 = load %struct.rtx_def*, %struct.rtx_def** %set_src319, align 8, !dbg !10435
  call void @var_reg_delete_and_set(%struct.dataflow_set_def* %218, %struct.rtx_def* %219, i8 zeroext 1, i32 2, %struct.rtx_def* %220), !dbg !10436
  br label %if.end346, !dbg !10436

if.else339:                                       ; preds = %if.end333
  %221 = load %struct.rtx_def*, %struct.rtx_def** %loc316, align 8, !dbg !10437
  %222 = bitcast %struct.rtx_def* %221 to i32*, !dbg !10437
  %bf.load340 = load i32, i32* %222, align 8, !dbg !10437
  %bf.clear341 = and i32 %bf.load340, 65535, !dbg !10437
  %cmp342 = icmp eq i32 %bf.clear341, 43, !dbg !10437
  br i1 %cmp342, label %if.then344, label %if.end345, !dbg !10439

if.then344:                                       ; preds = %if.else339
  %223 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %out, align 8, !dbg !10440
  %224 = load %struct.rtx_def*, %struct.rtx_def** %loc316, align 8, !dbg !10441
  %225 = load %struct.rtx_def*, %struct.rtx_def** %set_src319, align 8, !dbg !10442
  call void @var_mem_delete_and_set(%struct.dataflow_set_def* %223, %struct.rtx_def* %224, i8 zeroext 1, i32 2, %struct.rtx_def* %225), !dbg !10443
  br label %if.end345, !dbg !10443

if.end345:                                        ; preds = %if.then344, %if.else339
  br label %if.end346

if.end346:                                        ; preds = %if.end345, %if.then338
  br label %sw.epilog, !dbg !10444

sw.bb347:                                         ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %loc348, metadata !10445, metadata !DIExpression()), !dbg !10447
  %226 = load %struct.micro_operation_def*, %struct.micro_operation_def** %mo, align 8, !dbg !10448
  %u349 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %226, i32 0, i32 2, !dbg !10449
  %loc350 = bitcast %union.anon.0* %u349 to %struct.rtx_def**, !dbg !10450
  %227 = load %struct.rtx_def*, %struct.rtx_def** %loc350, align 8, !dbg !10450
  store %struct.rtx_def* %227, %struct.rtx_def** %loc348, align 8, !dbg !10447
  call void @llvm.dbg.declare(metadata i32* %src_status, metadata !10451, metadata !DIExpression()), !dbg !10452
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %set_src351, metadata !10453, metadata !DIExpression()), !dbg !10454
  store %struct.rtx_def* null, %struct.rtx_def** %set_src351, align 8, !dbg !10454
  %228 = load %struct.rtx_def*, %struct.rtx_def** %loc348, align 8, !dbg !10455
  %229 = bitcast %struct.rtx_def* %228 to i32*, !dbg !10455
  %bf.load352 = load i32, i32* %229, align 8, !dbg !10455
  %bf.clear353 = and i32 %bf.load352, 65535, !dbg !10455
  %cmp354 = icmp eq i32 %bf.clear353, 23, !dbg !10457
  br i1 %cmp354, label %if.then356, label %if.end365, !dbg !10458

if.then356:                                       ; preds = %sw.bb347
  %230 = load %struct.rtx_def*, %struct.rtx_def** %loc348, align 8, !dbg !10459
  %u357 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %230, i32 0, i32 1, !dbg !10459
  %fld358 = bitcast %union.u* %u357 to [1 x %union.rtunion_def]*, !dbg !10459
  %arrayidx359 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld358, i64 0, i64 1, !dbg !10459
  %rt_rtx360 = bitcast %union.rtunion_def* %arrayidx359 to %struct.rtx_def**, !dbg !10459
  %231 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx360, align 8, !dbg !10459
  store %struct.rtx_def* %231, %struct.rtx_def** %set_src351, align 8, !dbg !10461
  %232 = load %struct.rtx_def*, %struct.rtx_def** %loc348, align 8, !dbg !10462
  %u361 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %232, i32 0, i32 1, !dbg !10462
  %fld362 = bitcast %union.u* %u361 to [1 x %union.rtunion_def]*, !dbg !10462
  %arrayidx363 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld362, i64 0, i64 0, !dbg !10462
  %rt_rtx364 = bitcast %union.rtunion_def* %arrayidx363 to %struct.rtx_def**, !dbg !10462
  %233 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx364, align 8, !dbg !10462
  store %struct.rtx_def* %233, %struct.rtx_def** %loc348, align 8, !dbg !10463
  br label %if.end365, !dbg !10464

if.end365:                                        ; preds = %if.then356, %sw.bb347
  %234 = load i32, i32* @flag_var_tracking_uninit, align 4, !dbg !10465
  %tobool366 = icmp ne i32 %234, 0, !dbg !10465
  br i1 %tobool366, label %if.else368, label %if.then367, !dbg !10467

if.then367:                                       ; preds = %if.end365
  store i32 2, i32* %src_status, align 4, !dbg !10468
  br label %if.end375, !dbg !10469

if.else368:                                       ; preds = %if.end365
  %235 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %in, align 8, !dbg !10470
  %236 = load %struct.rtx_def*, %struct.rtx_def** %set_src351, align 8, !dbg !10472
  %call369 = call i32 @find_src_status(%struct.dataflow_set_def* %235, %struct.rtx_def* %236), !dbg !10473
  store i32 %call369, i32* %src_status, align 4, !dbg !10474
  %237 = load i32, i32* %src_status, align 4, !dbg !10475
  %cmp370 = icmp eq i32 %237, 0, !dbg !10477
  br i1 %cmp370, label %if.then372, label %if.end374, !dbg !10478

if.then372:                                       ; preds = %if.else368
  %238 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %out, align 8, !dbg !10479
  %239 = load %struct.rtx_def*, %struct.rtx_def** %set_src351, align 8, !dbg !10480
  %call373 = call i32 @find_src_status(%struct.dataflow_set_def* %238, %struct.rtx_def* %239), !dbg !10481
  store i32 %call373, i32* %src_status, align 4, !dbg !10482
  br label %if.end374, !dbg !10483

if.end374:                                        ; preds = %if.then372, %if.else368
  br label %if.end375

if.end375:                                        ; preds = %if.end374, %if.then367
  %240 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %in, align 8, !dbg !10484
  %241 = load %struct.rtx_def*, %struct.rtx_def** %set_src351, align 8, !dbg !10485
  %call376 = call %struct.rtx_def* @find_src_set_src(%struct.dataflow_set_def* %240, %struct.rtx_def* %241), !dbg !10486
  store %struct.rtx_def* %call376, %struct.rtx_def** %set_src351, align 8, !dbg !10487
  %242 = load %struct.rtx_def*, %struct.rtx_def** %loc348, align 8, !dbg !10488
  %243 = bitcast %struct.rtx_def* %242 to i32*, !dbg !10488
  %bf.load377 = load i32, i32* %243, align 8, !dbg !10488
  %bf.clear378 = and i32 %bf.load377, 65535, !dbg !10488
  %cmp379 = icmp eq i32 %bf.clear378, 37, !dbg !10488
  br i1 %cmp379, label %if.then381, label %if.else382, !dbg !10490

if.then381:                                       ; preds = %if.end375
  %244 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %out, align 8, !dbg !10491
  %245 = load %struct.rtx_def*, %struct.rtx_def** %loc348, align 8, !dbg !10492
  %246 = load i32, i32* %src_status, align 4, !dbg !10493
  %247 = load %struct.rtx_def*, %struct.rtx_def** %set_src351, align 8, !dbg !10494
  call void @var_reg_delete_and_set(%struct.dataflow_set_def* %244, %struct.rtx_def* %245, i8 zeroext 0, i32 %246, %struct.rtx_def* %247), !dbg !10495
  br label %if.end389, !dbg !10495

if.else382:                                       ; preds = %if.end375
  %248 = load %struct.rtx_def*, %struct.rtx_def** %loc348, align 8, !dbg !10496
  %249 = bitcast %struct.rtx_def* %248 to i32*, !dbg !10496
  %bf.load383 = load i32, i32* %249, align 8, !dbg !10496
  %bf.clear384 = and i32 %bf.load383, 65535, !dbg !10496
  %cmp385 = icmp eq i32 %bf.clear384, 43, !dbg !10496
  br i1 %cmp385, label %if.then387, label %if.end388, !dbg !10498

if.then387:                                       ; preds = %if.else382
  %250 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %out, align 8, !dbg !10499
  %251 = load %struct.rtx_def*, %struct.rtx_def** %loc348, align 8, !dbg !10500
  %252 = load i32, i32* %src_status, align 4, !dbg !10501
  %253 = load %struct.rtx_def*, %struct.rtx_def** %set_src351, align 8, !dbg !10502
  call void @var_mem_delete_and_set(%struct.dataflow_set_def* %250, %struct.rtx_def* %251, i8 zeroext 0, i32 %252, %struct.rtx_def* %253), !dbg !10503
  br label %if.end388, !dbg !10503

if.end388:                                        ; preds = %if.then387, %if.else382
  br label %if.end389

if.end389:                                        ; preds = %if.end388, %if.then381
  br label %sw.epilog, !dbg !10504

sw.bb390:                                         ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %loc391, metadata !10505, metadata !DIExpression()), !dbg !10507
  %254 = load %struct.micro_operation_def*, %struct.micro_operation_def** %mo, align 8, !dbg !10508
  %u392 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %254, i32 0, i32 2, !dbg !10509
  %loc393 = bitcast %union.anon.0* %u392 to %struct.rtx_def**, !dbg !10510
  %255 = load %struct.rtx_def*, %struct.rtx_def** %loc393, align 8, !dbg !10510
  store %struct.rtx_def* %255, %struct.rtx_def** %loc391, align 8, !dbg !10507
  %256 = load %struct.rtx_def*, %struct.rtx_def** %loc391, align 8, !dbg !10511
  %257 = bitcast %struct.rtx_def* %256 to i32*, !dbg !10511
  %bf.load394 = load i32, i32* %257, align 8, !dbg !10511
  %bf.clear395 = and i32 %bf.load394, 65535, !dbg !10511
  %cmp396 = icmp eq i32 %bf.clear395, 37, !dbg !10511
  br i1 %cmp396, label %if.then398, label %if.else399, !dbg !10513

if.then398:                                       ; preds = %sw.bb390
  %258 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %out, align 8, !dbg !10514
  %259 = load %struct.rtx_def*, %struct.rtx_def** %loc391, align 8, !dbg !10515
  call void @var_reg_delete(%struct.dataflow_set_def* %258, %struct.rtx_def* %259, i8 zeroext 0), !dbg !10516
  br label %if.end406, !dbg !10516

if.else399:                                       ; preds = %sw.bb390
  %260 = load %struct.rtx_def*, %struct.rtx_def** %loc391, align 8, !dbg !10517
  %261 = bitcast %struct.rtx_def* %260 to i32*, !dbg !10517
  %bf.load400 = load i32, i32* %261, align 8, !dbg !10517
  %bf.clear401 = and i32 %bf.load400, 65535, !dbg !10517
  %cmp402 = icmp eq i32 %bf.clear401, 43, !dbg !10517
  br i1 %cmp402, label %if.then404, label %if.end405, !dbg !10519

if.then404:                                       ; preds = %if.else399
  %262 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %out, align 8, !dbg !10520
  %263 = load %struct.rtx_def*, %struct.rtx_def** %loc391, align 8, !dbg !10521
  call void @var_mem_delete(%struct.dataflow_set_def* %262, %struct.rtx_def* %263, i8 zeroext 0), !dbg !10522
  br label %if.end405, !dbg !10522

if.end405:                                        ; preds = %if.then404, %if.else399
  br label %if.end406

if.end406:                                        ; preds = %if.end405, %if.then398
  br label %sw.epilog, !dbg !10523

sw.bb407:                                         ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %loc408, metadata !10524, metadata !DIExpression()), !dbg !10526
  %264 = load %struct.micro_operation_def*, %struct.micro_operation_def** %mo, align 8, !dbg !10527
  %u409 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %264, i32 0, i32 2, !dbg !10528
  %loc410 = bitcast %union.anon.0* %u409 to %struct.rtx_def**, !dbg !10529
  %265 = load %struct.rtx_def*, %struct.rtx_def** %loc410, align 8, !dbg !10529
  store %struct.rtx_def* %265, %struct.rtx_def** %loc408, align 8, !dbg !10526
  %266 = load %struct.rtx_def*, %struct.rtx_def** %loc408, align 8, !dbg !10530
  %267 = bitcast %struct.rtx_def* %266 to i32*, !dbg !10530
  %bf.load411 = load i32, i32* %267, align 8, !dbg !10530
  %bf.clear412 = and i32 %bf.load411, 65535, !dbg !10530
  %cmp413 = icmp eq i32 %bf.clear412, 37, !dbg !10530
  br i1 %cmp413, label %if.then415, label %if.else416, !dbg !10532

if.then415:                                       ; preds = %sw.bb407
  %268 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %out, align 8, !dbg !10533
  %269 = load %struct.rtx_def*, %struct.rtx_def** %loc408, align 8, !dbg !10534
  call void @var_reg_delete(%struct.dataflow_set_def* %268, %struct.rtx_def* %269, i8 zeroext 1), !dbg !10535
  br label %if.end423, !dbg !10535

if.else416:                                       ; preds = %sw.bb407
  %270 = load %struct.rtx_def*, %struct.rtx_def** %loc408, align 8, !dbg !10536
  %271 = bitcast %struct.rtx_def* %270 to i32*, !dbg !10536
  %bf.load417 = load i32, i32* %271, align 8, !dbg !10536
  %bf.clear418 = and i32 %bf.load417, 65535, !dbg !10536
  %cmp419 = icmp eq i32 %bf.clear418, 43, !dbg !10536
  br i1 %cmp419, label %if.then421, label %if.end422, !dbg !10538

if.then421:                                       ; preds = %if.else416
  %272 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %out, align 8, !dbg !10539
  %273 = load %struct.rtx_def*, %struct.rtx_def** %loc408, align 8, !dbg !10540
  call void @var_mem_delete(%struct.dataflow_set_def* %272, %struct.rtx_def* %273, i8 zeroext 1), !dbg !10541
  br label %if.end422, !dbg !10541

if.end422:                                        ; preds = %if.then421, %if.else416
  br label %if.end423

if.end423:                                        ; preds = %if.end422, %if.then415
  br label %sw.epilog, !dbg !10542

sw.bb424:                                         ; preds = %for.body
  %274 = load %struct.micro_operation_def*, %struct.micro_operation_def** %mo, align 8, !dbg !10543
  %u425 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %274, i32 0, i32 2, !dbg !10544
  %adjust = bitcast %union.anon.0* %u425 to i64*, !dbg !10545
  %275 = load i64, i64* %adjust, align 8, !dbg !10545
  %276 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %out, align 8, !dbg !10546
  %stack_adjust = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %276, i32 0, i32 0, !dbg !10547
  %277 = load i64, i64* %stack_adjust, align 8, !dbg !10548
  %add = add nsw i64 %277, %275, !dbg !10548
  store i64 %add, i64* %stack_adjust, align 8, !dbg !10548
  br label %sw.epilog, !dbg !10549

sw.epilog:                                        ; preds = %for.body, %sw.bb424, %if.end423, %if.end406, %if.end389, %if.end346, %if.end314, %if.end122, %if.end71, %if.end15, %sw.bb
  br label %for.inc, !dbg !10550

for.inc:                                          ; preds = %sw.epilog
  %278 = load i32, i32* %i, align 4, !dbg !10551
  %inc = add i32 %278, 1, !dbg !10551
  store i32 %inc, i32* %i, align 4, !dbg !10551
  br label %for.cond, !dbg !10552, !llvm.loop !10553

for.end:                                          ; preds = %cond.end
  %279 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !10555
  %tobool426 = icmp ne i32 %279, 0, !dbg !10555
  br i1 %tobool426, label %if.then427, label %if.end431, !dbg !10557

if.then427:                                       ; preds = %for.end
  %280 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %out, align 8, !dbg !10558
  call void @dataflow_set_equiv_regs(%struct.dataflow_set_def* %280), !dbg !10560
  %281 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %out, align 8, !dbg !10561
  %vars = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %281, i32 0, i32 2, !dbg !10562
  %282 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars, align 8, !dbg !10562
  %call428 = call %struct.htab* @shared_hash_htab(%struct.shared_hash_def* %282), !dbg !10563
  %283 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %out, align 8, !dbg !10564
  %284 = bitcast %struct.dataflow_set_def* %283 to i8*, !dbg !10564
  call void @htab_traverse(%struct.htab* %call428, i32 (i8**, i8*)* @canonicalize_values_mark, i8* %284), !dbg !10565
  %285 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %out, align 8, !dbg !10566
  %vars429 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %285, i32 0, i32 2, !dbg !10567
  %286 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars429, align 8, !dbg !10567
  %call430 = call %struct.htab* @shared_hash_htab(%struct.shared_hash_def* %286), !dbg !10568
  %287 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %out, align 8, !dbg !10569
  %288 = bitcast %struct.dataflow_set_def* %287 to i8*, !dbg !10569
  call void @htab_traverse(%struct.htab* %call430, i32 (i8**, i8*)* @canonicalize_values_star, i8* %288), !dbg !10570
  br label %if.end431, !dbg !10571

if.end431:                                        ; preds = %if.then427, %for.end
  %289 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %out, align 8, !dbg !10572
  %call432 = call zeroext i8 @dataflow_set_different(%struct.dataflow_set_def* %old_out, %struct.dataflow_set_def* %289), !dbg !10573
  store i8 %call432, i8* %changed, align 1, !dbg !10574
  call void @dataflow_set_destroy(%struct.dataflow_set_def* %old_out), !dbg !10575
  %290 = load i8, i8* %changed, align 1, !dbg !10576
  ret i8 %290, !dbg !10577
}

declare dso_local void @inform(i32, i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define internal void @dump_dataflow_set(%struct.dataflow_set_def* %set) #0 !dbg !10578 {
entry:
  %set.addr = alloca %struct.dataflow_set_def*, align 8
  %i = alloca i32, align 4
  store %struct.dataflow_set_def* %set, %struct.dataflow_set_def** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %set.addr, metadata !10579, metadata !DIExpression()), !dbg !10580
  call void @llvm.dbg.declare(metadata i32* %i, metadata !10581, metadata !DIExpression()), !dbg !10582
  %0 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !10583
  %1 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !10584
  %stack_adjust = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %1, i32 0, i32 0, !dbg !10585
  %2 = load i64, i64* %stack_adjust, align 8, !dbg !10585
  %call = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.43, i64 0, i64 0), i64 %2), !dbg !10586
  store i32 0, i32* %i, align 4, !dbg !10587
  br label %for.cond, !dbg !10589

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load i32, i32* %i, align 4, !dbg !10590
  %cmp = icmp slt i32 %3, 53, !dbg !10592
  br i1 %cmp, label %for.body, label %for.end, !dbg !10593

for.body:                                         ; preds = %for.cond
  %4 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !10594
  %regs = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %4, i32 0, i32 1, !dbg !10597
  %5 = load i32, i32* %i, align 4, !dbg !10598
  %idxprom = sext i32 %5 to i64, !dbg !10594
  %arrayidx = getelementptr inbounds [53 x %struct.attrs_def*], [53 x %struct.attrs_def*]* %regs, i64 0, i64 %idxprom, !dbg !10594
  %6 = load %struct.attrs_def*, %struct.attrs_def** %arrayidx, align 8, !dbg !10594
  %tobool = icmp ne %struct.attrs_def* %6, null, !dbg !10594
  br i1 %tobool, label %if.then, label %if.end, !dbg !10599

if.then:                                          ; preds = %for.body
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !10600
  %8 = load i32, i32* %i, align 4, !dbg !10602
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.44, i64 0, i64 0), i32 %8), !dbg !10603
  %9 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !10604
  %regs2 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %9, i32 0, i32 1, !dbg !10605
  %10 = load i32, i32* %i, align 4, !dbg !10606
  %idxprom3 = sext i32 %10 to i64, !dbg !10604
  %arrayidx4 = getelementptr inbounds [53 x %struct.attrs_def*], [53 x %struct.attrs_def*]* %regs2, i64 0, i64 %idxprom3, !dbg !10604
  %11 = load %struct.attrs_def*, %struct.attrs_def** %arrayidx4, align 8, !dbg !10604
  call void @dump_attrs_list(%struct.attrs_def* %11), !dbg !10607
  br label %if.end, !dbg !10608

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !10609

for.inc:                                          ; preds = %if.end
  %12 = load i32, i32* %i, align 4, !dbg !10610
  %inc = add nsw i32 %12, 1, !dbg !10610
  store i32 %inc, i32* %i, align 4, !dbg !10610
  br label %for.cond, !dbg !10611, !llvm.loop !10612

for.end:                                          ; preds = %for.cond
  %13 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !10614
  %vars = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %13, i32 0, i32 2, !dbg !10615
  %14 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars, align 8, !dbg !10615
  %call5 = call %struct.htab* @shared_hash_htab(%struct.shared_hash_def* %14), !dbg !10616
  call void @dump_vars(%struct.htab* %call5), !dbg !10617
  %15 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !10618
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %15, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.33, i64 0, i64 0)), !dbg !10619
  ret void, !dbg !10620
}

declare dso_local void @fibheap_delete(%struct.fibheap*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @ei_end_p(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #0 !dbg !10621 {
entry:
  %i = alloca %struct.edge_iterator, align 8
  %0 = bitcast %struct.edge_iterator* %i to { i32, %struct.VEC_edge_gc** }*
  %1 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 0
  store i32 %i.coerce0, i32* %1, align 8
  %2 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 1
  store %struct.VEC_edge_gc** %i.coerce1, %struct.VEC_edge_gc*** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_iterator* %i, metadata !10622, metadata !DIExpression()), !dbg !10623
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i32 0, i32 0, !dbg !10624
  %3 = load i32, i32* %index, align 8, !dbg !10624
  %4 = bitcast %struct.edge_iterator* %i to { i32, %struct.VEC_edge_gc** }*, !dbg !10625
  %5 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %4, i32 0, i32 0, !dbg !10625
  %6 = load i32, i32* %5, align 8, !dbg !10625
  %7 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %4, i32 0, i32 1, !dbg !10625
  %8 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %7, align 8, !dbg !10625
  %call = call %struct.VEC_edge_gc* @ei_container(i32 %6, %struct.VEC_edge_gc** %8), !dbg !10625
  %tobool = icmp ne %struct.VEC_edge_gc* %call, null, !dbg !10625
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !10625

cond.true:                                        ; preds = %entry
  %9 = bitcast %struct.edge_iterator* %i to { i32, %struct.VEC_edge_gc** }*, !dbg !10625
  %10 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %9, i32 0, i32 0, !dbg !10625
  %11 = load i32, i32* %10, align 8, !dbg !10625
  %12 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %9, i32 0, i32 1, !dbg !10625
  %13 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %12, align 8, !dbg !10625
  %call1 = call %struct.VEC_edge_gc* @ei_container(i32 %11, %struct.VEC_edge_gc** %13), !dbg !10625
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i32 0, i32 0, !dbg !10625
  br label %cond.end, !dbg !10625

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !10625

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !10625
  %call2 = call i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond), !dbg !10625
  %cmp = icmp eq i32 %3, %call2, !dbg !10626
  %conv = zext i1 %cmp to i32, !dbg !10626
  %conv3 = trunc i32 %conv to i8, !dbg !10627
  ret i8 %conv3, !dbg !10628
}

; Function Attrs: noinline nounwind uwtable
define internal void @attrs_list_copy(%struct.attrs_def** %dstp, %struct.attrs_def* %src) #0 !dbg !10629 {
entry:
  %dstp.addr = alloca %struct.attrs_def**, align 8
  %src.addr = alloca %struct.attrs_def*, align 8
  %n = alloca %struct.attrs_def*, align 8
  store %struct.attrs_def** %dstp, %struct.attrs_def*** %dstp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.attrs_def*** %dstp.addr, metadata !10632, metadata !DIExpression()), !dbg !10633
  store %struct.attrs_def* %src, %struct.attrs_def** %src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.attrs_def** %src.addr, metadata !10634, metadata !DIExpression()), !dbg !10635
  call void @llvm.dbg.declare(metadata %struct.attrs_def** %n, metadata !10636, metadata !DIExpression()), !dbg !10637
  %0 = load %struct.attrs_def**, %struct.attrs_def*** %dstp.addr, align 8, !dbg !10638
  call void @attrs_list_clear(%struct.attrs_def** %0), !dbg !10639
  br label %for.cond, !dbg !10640

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct.attrs_def*, %struct.attrs_def** %src.addr, align 8, !dbg !10641
  %tobool = icmp ne %struct.attrs_def* %1, null, !dbg !10644
  br i1 %tobool, label %for.body, label %for.end, !dbg !10644

for.body:                                         ; preds = %for.cond
  %2 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @attrs_pool, align 8, !dbg !10645
  %call = call i8* @pool_alloc(%struct.alloc_pool_def* %2), !dbg !10647
  %3 = bitcast i8* %call to %struct.attrs_def*, !dbg !10648
  store %struct.attrs_def* %3, %struct.attrs_def** %n, align 8, !dbg !10649
  %4 = load %struct.attrs_def*, %struct.attrs_def** %src.addr, align 8, !dbg !10650
  %loc = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %4, i32 0, i32 1, !dbg !10651
  %5 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !10651
  %6 = load %struct.attrs_def*, %struct.attrs_def** %n, align 8, !dbg !10652
  %loc1 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %6, i32 0, i32 1, !dbg !10653
  store %struct.rtx_def* %5, %struct.rtx_def** %loc1, align 8, !dbg !10654
  %7 = load %struct.attrs_def*, %struct.attrs_def** %src.addr, align 8, !dbg !10655
  %dv = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %7, i32 0, i32 2, !dbg !10656
  %8 = load i8*, i8** %dv, align 8, !dbg !10656
  %9 = load %struct.attrs_def*, %struct.attrs_def** %n, align 8, !dbg !10657
  %dv2 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %9, i32 0, i32 2, !dbg !10658
  store i8* %8, i8** %dv2, align 8, !dbg !10659
  %10 = load %struct.attrs_def*, %struct.attrs_def** %src.addr, align 8, !dbg !10660
  %offset = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %10, i32 0, i32 3, !dbg !10661
  %11 = load i64, i64* %offset, align 8, !dbg !10661
  %12 = load %struct.attrs_def*, %struct.attrs_def** %n, align 8, !dbg !10662
  %offset3 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %12, i32 0, i32 3, !dbg !10663
  store i64 %11, i64* %offset3, align 8, !dbg !10664
  %13 = load %struct.attrs_def**, %struct.attrs_def*** %dstp.addr, align 8, !dbg !10665
  %14 = load %struct.attrs_def*, %struct.attrs_def** %13, align 8, !dbg !10666
  %15 = load %struct.attrs_def*, %struct.attrs_def** %n, align 8, !dbg !10667
  %next = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %15, i32 0, i32 0, !dbg !10668
  store %struct.attrs_def* %14, %struct.attrs_def** %next, align 8, !dbg !10669
  %16 = load %struct.attrs_def*, %struct.attrs_def** %n, align 8, !dbg !10670
  %17 = load %struct.attrs_def**, %struct.attrs_def*** %dstp.addr, align 8, !dbg !10671
  store %struct.attrs_def* %16, %struct.attrs_def** %17, align 8, !dbg !10672
  br label %for.inc, !dbg !10673

for.inc:                                          ; preds = %for.body
  %18 = load %struct.attrs_def*, %struct.attrs_def** %src.addr, align 8, !dbg !10674
  %next4 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %18, i32 0, i32 0, !dbg !10675
  %19 = load %struct.attrs_def*, %struct.attrs_def** %next4, align 8, !dbg !10675
  store %struct.attrs_def* %19, %struct.attrs_def** %src.addr, align 8, !dbg !10676
  br label %for.cond, !dbg !10677, !llvm.loop !10678

for.end:                                          ; preds = %for.cond
  ret void, !dbg !10680
}

; Function Attrs: noinline nounwind uwtable
define internal void @attrs_list_mpdv_union(%struct.attrs_def** %dstp, %struct.attrs_def* %src, %struct.attrs_def* %src2) #0 !dbg !10681 {
entry:
  %dstp.addr = alloca %struct.attrs_def**, align 8
  %src.addr = alloca %struct.attrs_def*, align 8
  %src2.addr = alloca %struct.attrs_def*, align 8
  store %struct.attrs_def** %dstp, %struct.attrs_def*** %dstp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.attrs_def*** %dstp.addr, metadata !10684, metadata !DIExpression()), !dbg !10685
  store %struct.attrs_def* %src, %struct.attrs_def** %src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.attrs_def** %src.addr, metadata !10686, metadata !DIExpression()), !dbg !10687
  store %struct.attrs_def* %src2, %struct.attrs_def** %src2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.attrs_def** %src2.addr, metadata !10688, metadata !DIExpression()), !dbg !10689
  %0 = load %struct.attrs_def**, %struct.attrs_def*** %dstp.addr, align 8, !dbg !10690
  %1 = load %struct.attrs_def*, %struct.attrs_def** %0, align 8, !dbg !10690
  %tobool = icmp ne %struct.attrs_def* %1, null, !dbg !10690
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !10690

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 1305, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !10690
  br label %cond.end, !dbg !10690

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !10690

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !10690
  br label %for.cond, !dbg !10691

for.cond:                                         ; preds = %for.inc, %cond.end
  %2 = load %struct.attrs_def*, %struct.attrs_def** %src.addr, align 8, !dbg !10692
  %tobool1 = icmp ne %struct.attrs_def* %2, null, !dbg !10695
  br i1 %tobool1, label %for.body, label %for.end, !dbg !10695

for.body:                                         ; preds = %for.cond
  %3 = load %struct.attrs_def*, %struct.attrs_def** %src.addr, align 8, !dbg !10696
  %dv = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %3, i32 0, i32 2, !dbg !10699
  %4 = load i8*, i8** %dv, align 8, !dbg !10699
  %call = call zeroext i8 @dv_onepart_p(i8* %4), !dbg !10700
  %tobool2 = icmp ne i8 %call, 0, !dbg !10700
  br i1 %tobool2, label %if.end, label %if.then, !dbg !10701

if.then:                                          ; preds = %for.body
  %5 = load %struct.attrs_def**, %struct.attrs_def*** %dstp.addr, align 8, !dbg !10702
  %6 = load %struct.attrs_def*, %struct.attrs_def** %src.addr, align 8, !dbg !10703
  %dv3 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %6, i32 0, i32 2, !dbg !10704
  %7 = load i8*, i8** %dv3, align 8, !dbg !10704
  %8 = load %struct.attrs_def*, %struct.attrs_def** %src.addr, align 8, !dbg !10705
  %offset = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %8, i32 0, i32 3, !dbg !10706
  %9 = load i64, i64* %offset, align 8, !dbg !10706
  %10 = load %struct.attrs_def*, %struct.attrs_def** %src.addr, align 8, !dbg !10707
  %loc = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %10, i32 0, i32 1, !dbg !10708
  %11 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !10708
  call void @attrs_list_insert(%struct.attrs_def** %5, i8* %7, i64 %9, %struct.rtx_def* %11), !dbg !10709
  br label %if.end, !dbg !10709

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !10710

for.inc:                                          ; preds = %if.end
  %12 = load %struct.attrs_def*, %struct.attrs_def** %src.addr, align 8, !dbg !10711
  %next = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %12, i32 0, i32 0, !dbg !10712
  %13 = load %struct.attrs_def*, %struct.attrs_def** %next, align 8, !dbg !10712
  store %struct.attrs_def* %13, %struct.attrs_def** %src.addr, align 8, !dbg !10713
  br label %for.cond, !dbg !10714, !llvm.loop !10715

for.end:                                          ; preds = %for.cond
  %14 = load %struct.attrs_def*, %struct.attrs_def** %src2.addr, align 8, !dbg !10717
  store %struct.attrs_def* %14, %struct.attrs_def** %src.addr, align 8, !dbg !10719
  br label %for.cond4, !dbg !10720

for.cond4:                                        ; preds = %for.inc19, %for.end
  %15 = load %struct.attrs_def*, %struct.attrs_def** %src.addr, align 8, !dbg !10721
  %tobool5 = icmp ne %struct.attrs_def* %15, null, !dbg !10723
  br i1 %tobool5, label %for.body6, label %for.end21, !dbg !10723

for.body6:                                        ; preds = %for.cond4
  %16 = load %struct.attrs_def*, %struct.attrs_def** %src.addr, align 8, !dbg !10724
  %dv7 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %16, i32 0, i32 2, !dbg !10727
  %17 = load i8*, i8** %dv7, align 8, !dbg !10727
  %call8 = call zeroext i8 @dv_onepart_p(i8* %17), !dbg !10728
  %tobool9 = icmp ne i8 %call8, 0, !dbg !10728
  br i1 %tobool9, label %if.end18, label %land.lhs.true, !dbg !10729

land.lhs.true:                                    ; preds = %for.body6
  %18 = load %struct.attrs_def**, %struct.attrs_def*** %dstp.addr, align 8, !dbg !10730
  %19 = load %struct.attrs_def*, %struct.attrs_def** %18, align 8, !dbg !10731
  %20 = load %struct.attrs_def*, %struct.attrs_def** %src.addr, align 8, !dbg !10732
  %dv10 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %20, i32 0, i32 2, !dbg !10733
  %21 = load i8*, i8** %dv10, align 8, !dbg !10733
  %22 = load %struct.attrs_def*, %struct.attrs_def** %src.addr, align 8, !dbg !10734
  %offset11 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %22, i32 0, i32 3, !dbg !10735
  %23 = load i64, i64* %offset11, align 8, !dbg !10735
  %call12 = call %struct.attrs_def* @attrs_list_member(%struct.attrs_def* %19, i8* %21, i64 %23), !dbg !10736
  %tobool13 = icmp ne %struct.attrs_def* %call12, null, !dbg !10736
  br i1 %tobool13, label %if.end18, label %if.then14, !dbg !10737

if.then14:                                        ; preds = %land.lhs.true
  %24 = load %struct.attrs_def**, %struct.attrs_def*** %dstp.addr, align 8, !dbg !10738
  %25 = load %struct.attrs_def*, %struct.attrs_def** %src.addr, align 8, !dbg !10739
  %dv15 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %25, i32 0, i32 2, !dbg !10740
  %26 = load i8*, i8** %dv15, align 8, !dbg !10740
  %27 = load %struct.attrs_def*, %struct.attrs_def** %src.addr, align 8, !dbg !10741
  %offset16 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %27, i32 0, i32 3, !dbg !10742
  %28 = load i64, i64* %offset16, align 8, !dbg !10742
  %29 = load %struct.attrs_def*, %struct.attrs_def** %src.addr, align 8, !dbg !10743
  %loc17 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %29, i32 0, i32 1, !dbg !10744
  %30 = load %struct.rtx_def*, %struct.rtx_def** %loc17, align 8, !dbg !10744
  call void @attrs_list_insert(%struct.attrs_def** %24, i8* %26, i64 %28, %struct.rtx_def* %30), !dbg !10745
  br label %if.end18, !dbg !10745

if.end18:                                         ; preds = %if.then14, %land.lhs.true, %for.body6
  br label %for.inc19, !dbg !10746

for.inc19:                                        ; preds = %if.end18
  %31 = load %struct.attrs_def*, %struct.attrs_def** %src.addr, align 8, !dbg !10747
  %next20 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %31, i32 0, i32 0, !dbg !10748
  %32 = load %struct.attrs_def*, %struct.attrs_def** %next20, align 8, !dbg !10748
  store %struct.attrs_def* %32, %struct.attrs_def** %src.addr, align 8, !dbg !10749
  br label %for.cond4, !dbg !10750, !llvm.loop !10751

for.end21:                                        ; preds = %for.cond4
  ret void, !dbg !10753
}

declare dso_local void @htab_traverse(%struct.htab*, i32 (i8**, i8*)*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @variable_merge_over_src(i8** %s2slot, i8* %data) #0 !dbg !10754 {
entry:
  %retval = alloca i32, align 4
  %s2slot.addr = alloca i8**, align 8
  %data.addr = alloca i8*, align 8
  %dsm = alloca %struct.dfset_merge*, align 8
  %dst = alloca %struct.dataflow_set_def*, align 8
  %s2var = alloca %struct.variable_def*, align 8
  %dv = alloca i8*, align 8
  %onepart = alloca i8, align 1
  %dstp = alloca i8**, align 8
  store i8** %s2slot, i8*** %s2slot.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %s2slot.addr, metadata !10755, metadata !DIExpression()), !dbg !10756
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !10757, metadata !DIExpression()), !dbg !10758
  call void @llvm.dbg.declare(metadata %struct.dfset_merge** %dsm, metadata !10759, metadata !DIExpression()), !dbg !10760
  %0 = load i8*, i8** %data.addr, align 8, !dbg !10761
  %1 = bitcast i8* %0 to %struct.dfset_merge*, !dbg !10762
  store %struct.dfset_merge* %1, %struct.dfset_merge** %dsm, align 8, !dbg !10760
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %dst, metadata !10763, metadata !DIExpression()), !dbg !10764
  %2 = load %struct.dfset_merge*, %struct.dfset_merge** %dsm, align 8, !dbg !10765
  %dst1 = getelementptr inbounds %struct.dfset_merge, %struct.dfset_merge* %2, i32 0, i32 0, !dbg !10766
  %3 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %dst1, align 8, !dbg !10766
  store %struct.dataflow_set_def* %3, %struct.dataflow_set_def** %dst, align 8, !dbg !10764
  call void @llvm.dbg.declare(metadata %struct.variable_def** %s2var, metadata !10767, metadata !DIExpression()), !dbg !10768
  %4 = load i8**, i8*** %s2slot.addr, align 8, !dbg !10769
  %5 = load i8*, i8** %4, align 8, !dbg !10770
  %6 = bitcast i8* %5 to %struct.variable_def*, !dbg !10771
  store %struct.variable_def* %6, %struct.variable_def** %s2var, align 8, !dbg !10768
  call void @llvm.dbg.declare(metadata i8** %dv, metadata !10772, metadata !DIExpression()), !dbg !10773
  %7 = load %struct.variable_def*, %struct.variable_def** %s2var, align 8, !dbg !10774
  %dv2 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %7, i32 0, i32 0, !dbg !10775
  %8 = load i8*, i8** %dv2, align 8, !dbg !10775
  store i8* %8, i8** %dv, align 8, !dbg !10773
  call void @llvm.dbg.declare(metadata i8* %onepart, metadata !10776, metadata !DIExpression()), !dbg !10777
  %9 = load i8*, i8** %dv, align 8, !dbg !10778
  %call = call zeroext i8 @dv_onepart_p(i8* %9), !dbg !10779
  store i8 %call, i8* %onepart, align 1, !dbg !10777
  %10 = load i8, i8* %onepart, align 1, !dbg !10780
  %tobool = icmp ne i8 %10, 0, !dbg !10780
  br i1 %tobool, label %if.end, label %if.then, !dbg !10782

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8*** %dstp, metadata !10783, metadata !DIExpression()), !dbg !10785
  %11 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %dst, align 8, !dbg !10786
  %vars = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %11, i32 0, i32 2, !dbg !10787
  %12 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars, align 8, !dbg !10787
  %13 = load i8*, i8** %dv, align 8, !dbg !10788
  %call3 = call i8** @shared_hash_find_slot(%struct.shared_hash_def* %12, i8* %13), !dbg !10789
  store i8** %call3, i8*** %dstp, align 8, !dbg !10785
  %14 = load %struct.variable_def*, %struct.variable_def** %s2var, align 8, !dbg !10790
  %15 = bitcast %struct.variable_def* %14 to i8*, !dbg !10790
  %16 = load i8**, i8*** %dstp, align 8, !dbg !10791
  store i8* %15, i8** %16, align 8, !dbg !10792
  %17 = load %struct.variable_def*, %struct.variable_def** %s2var, align 8, !dbg !10793
  %refcount = getelementptr inbounds %struct.variable_def, %struct.variable_def* %17, i32 0, i32 1, !dbg !10794
  %18 = load i32, i32* %refcount, align 8, !dbg !10795
  %inc = add nsw i32 %18, 1, !dbg !10795
  store i32 %inc, i32* %refcount, align 8, !dbg !10795
  store i32 1, i32* %retval, align 4, !dbg !10796
  br label %return, !dbg !10796

if.end:                                           ; preds = %entry
  %19 = load %struct.dfset_merge*, %struct.dfset_merge** %dsm, align 8, !dbg !10797
  %src_onepart_cnt = getelementptr inbounds %struct.dfset_merge, %struct.dfset_merge* %19, i32 0, i32 3, !dbg !10798
  %20 = load i32, i32* %src_onepart_cnt, align 8, !dbg !10799
  %inc4 = add nsw i32 %20, 1, !dbg !10799
  store i32 %inc4, i32* %src_onepart_cnt, align 8, !dbg !10799
  store i32 1, i32* %retval, align 4, !dbg !10800
  br label %return, !dbg !10800

return:                                           ; preds = %if.end, %if.then
  %21 = load i32, i32* %retval, align 4, !dbg !10801
  ret i32 %21, !dbg !10801
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @variable_merge_over_cur(i8** %s1slot, i8* %data) #0 !dbg !10802 {
entry:
  %retval = alloca i32, align 4
  %s1slot.addr = alloca i8**, align 8
  %data.addr = alloca i8*, align 8
  %dsm = alloca %struct.dfset_merge*, align 8
  %dst = alloca %struct.dataflow_set_def*, align 8
  %dstslot = alloca i8**, align 8
  %s1var = alloca %struct.variable_def*, align 8
  %s2var = alloca %struct.variable_def*, align 8
  %dvar = alloca %struct.variable_def*, align 8
  %dv = alloca i8*, align 8
  %onepart = alloca i8, align 1
  %val = alloca %struct.rtx_def*, align 8
  %dvhash = alloca i32, align 4
  %node = alloca %struct.location_chain_def*, align 8
  %nodep = alloca %struct.location_chain_def**, align 8
  %nextp = alloca %struct.location_chain_def**, align 8
  %list = alloca %struct.attrs_def*, align 8
  %has_value = alloca i8, align 1
  %has_other = alloca i8, align 1
  %dv264 = alloca i8*, align 8
  %slot = alloca i8**, align 8
  %var = alloca %struct.variable_def*, align 8
  store i8** %s1slot, i8*** %s1slot.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %s1slot.addr, metadata !10803, metadata !DIExpression()), !dbg !10804
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !10805, metadata !DIExpression()), !dbg !10806
  call void @llvm.dbg.declare(metadata %struct.dfset_merge** %dsm, metadata !10807, metadata !DIExpression()), !dbg !10808
  %0 = load i8*, i8** %data.addr, align 8, !dbg !10809
  %1 = bitcast i8* %0 to %struct.dfset_merge*, !dbg !10810
  store %struct.dfset_merge* %1, %struct.dfset_merge** %dsm, align 8, !dbg !10808
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %dst, metadata !10811, metadata !DIExpression()), !dbg !10812
  %2 = load %struct.dfset_merge*, %struct.dfset_merge** %dsm, align 8, !dbg !10813
  %dst1 = getelementptr inbounds %struct.dfset_merge, %struct.dfset_merge* %2, i32 0, i32 0, !dbg !10814
  %3 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %dst1, align 8, !dbg !10814
  store %struct.dataflow_set_def* %3, %struct.dataflow_set_def** %dst, align 8, !dbg !10812
  call void @llvm.dbg.declare(metadata i8*** %dstslot, metadata !10815, metadata !DIExpression()), !dbg !10816
  call void @llvm.dbg.declare(metadata %struct.variable_def** %s1var, metadata !10817, metadata !DIExpression()), !dbg !10818
  %4 = load i8**, i8*** %s1slot.addr, align 8, !dbg !10819
  %5 = load i8*, i8** %4, align 8, !dbg !10820
  %6 = bitcast i8* %5 to %struct.variable_def*, !dbg !10821
  store %struct.variable_def* %6, %struct.variable_def** %s1var, align 8, !dbg !10818
  call void @llvm.dbg.declare(metadata %struct.variable_def** %s2var, metadata !10822, metadata !DIExpression()), !dbg !10823
  call void @llvm.dbg.declare(metadata %struct.variable_def** %dvar, metadata !10824, metadata !DIExpression()), !dbg !10825
  store %struct.variable_def* null, %struct.variable_def** %dvar, align 8, !dbg !10825
  call void @llvm.dbg.declare(metadata i8** %dv, metadata !10826, metadata !DIExpression()), !dbg !10827
  %7 = load %struct.variable_def*, %struct.variable_def** %s1var, align 8, !dbg !10828
  %dv2 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %7, i32 0, i32 0, !dbg !10829
  %8 = load i8*, i8** %dv2, align 8, !dbg !10829
  store i8* %8, i8** %dv, align 8, !dbg !10827
  call void @llvm.dbg.declare(metadata i8* %onepart, metadata !10830, metadata !DIExpression()), !dbg !10831
  %9 = load i8*, i8** %dv, align 8, !dbg !10832
  %call = call zeroext i8 @dv_onepart_p(i8* %9), !dbg !10833
  store i8 %call, i8* %onepart, align 1, !dbg !10831
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %val, metadata !10834, metadata !DIExpression()), !dbg !10835
  call void @llvm.dbg.declare(metadata i32* %dvhash, metadata !10836, metadata !DIExpression()), !dbg !10837
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %node, metadata !10838, metadata !DIExpression()), !dbg !10839
  call void @llvm.dbg.declare(metadata %struct.location_chain_def*** %nodep, metadata !10840, metadata !DIExpression()), !dbg !10841
  %10 = load %struct.variable_def*, %struct.variable_def** %s1var, align 8, !dbg !10842
  %n_var_parts = getelementptr inbounds %struct.variable_def, %struct.variable_def* %10, i32 0, i32 2, !dbg !10842
  %11 = load i8, i8* %n_var_parts, align 4, !dbg !10842
  %tobool = icmp ne i8 %11, 0, !dbg !10842
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !10842

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 3350, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !10842
  br label %cond.end, !dbg !10842

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !10842

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !10842
  %12 = load %struct.variable_def*, %struct.variable_def** %s1var, align 8, !dbg !10843
  %var_part = getelementptr inbounds %struct.variable_def, %struct.variable_def* %12, i32 0, i32 5, !dbg !10843
  %arrayidx = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part, i64 0, i64 0, !dbg !10843
  %loc_chain = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx, i32 0, i32 0, !dbg !10843
  %13 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain, align 8, !dbg !10843
  %tobool3 = icmp ne %struct.location_chain_def* %13, null, !dbg !10843
  br i1 %tobool3, label %cond.false5, label %cond.true4, !dbg !10843

cond.true4:                                       ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 3351, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !10843
  br label %cond.end6, !dbg !10843

cond.false5:                                      ; preds = %cond.end
  br label %cond.end6, !dbg !10843

cond.end6:                                        ; preds = %cond.false5, %cond.true4
  %cond7 = phi i32 [ 0, %cond.true4 ], [ 0, %cond.false5 ], !dbg !10843
  %14 = load i8, i8* %onepart, align 1, !dbg !10844
  %tobool8 = icmp ne i8 %14, 0, !dbg !10844
  br i1 %tobool8, label %if.end, label %if.then, !dbg !10846

if.then:                                          ; preds = %cond.end6
  %15 = load i8**, i8*** %s1slot.addr, align 8, !dbg !10847
  %16 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %dst, align 8, !dbg !10848
  %17 = bitcast %struct.dataflow_set_def* %16 to i8*, !dbg !10848
  %call9 = call i32 @variable_union(i8** %15, i8* %17), !dbg !10849
  store i32 %call9, i32* %retval, align 4, !dbg !10850
  br label %return, !dbg !10850

if.end:                                           ; preds = %cond.end6
  %18 = load %struct.variable_def*, %struct.variable_def** %s1var, align 8, !dbg !10851
  %n_var_parts10 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %18, i32 0, i32 2, !dbg !10851
  %19 = load i8, i8* %n_var_parts10, align 4, !dbg !10851
  %conv = sext i8 %19 to i32, !dbg !10851
  %cmp = icmp eq i32 %conv, 1, !dbg !10851
  br i1 %cmp, label %cond.false13, label %cond.true12, !dbg !10851

cond.true12:                                      ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 3356, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !10851
  br label %cond.end14, !dbg !10851

cond.false13:                                     ; preds = %if.end
  br label %cond.end14, !dbg !10851

cond.end14:                                       ; preds = %cond.false13, %cond.true12
  %cond15 = phi i32 [ 0, %cond.true12 ], [ 0, %cond.false13 ], !dbg !10851
  %20 = load %struct.variable_def*, %struct.variable_def** %s1var, align 8, !dbg !10852
  %var_part16 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %20, i32 0, i32 5, !dbg !10852
  %arrayidx17 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part16, i64 0, i64 0, !dbg !10852
  %offset = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx17, i32 0, i32 2, !dbg !10852
  %21 = load i64, i64* %offset, align 8, !dbg !10852
  %cmp18 = icmp eq i64 %21, 0, !dbg !10852
  br i1 %cmp18, label %cond.false21, label %cond.true20, !dbg !10852

cond.true20:                                      ; preds = %cond.end14
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 3357, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !10852
  br label %cond.end22, !dbg !10852

cond.false21:                                     ; preds = %cond.end14
  br label %cond.end22, !dbg !10852

cond.end22:                                       ; preds = %cond.false21, %cond.true20
  %cond23 = phi i32 [ 0, %cond.true20 ], [ 0, %cond.false21 ], !dbg !10852
  %22 = load i8*, i8** %dv, align 8, !dbg !10853
  %call24 = call i32 @dv_htab_hash(i8* %22), !dbg !10854
  store i32 %call24, i32* %dvhash, align 4, !dbg !10855
  %23 = load i8*, i8** %dv, align 8, !dbg !10856
  %call25 = call zeroext i8 @dv_is_value_p(i8* %23), !dbg !10858
  %tobool26 = icmp ne i8 %call25, 0, !dbg !10858
  br i1 %tobool26, label %if.then27, label %if.else, !dbg !10859

if.then27:                                        ; preds = %cond.end22
  %24 = load i8*, i8** %dv, align 8, !dbg !10860
  %call28 = call %struct.rtx_def* @dv_as_value(i8* %24), !dbg !10861
  store %struct.rtx_def* %call28, %struct.rtx_def** %val, align 8, !dbg !10862
  br label %if.end29, !dbg !10863

if.else:                                          ; preds = %cond.end22
  store %struct.rtx_def* null, %struct.rtx_def** %val, align 8, !dbg !10864
  br label %if.end29

if.end29:                                         ; preds = %if.else, %if.then27
  %25 = load %struct.dfset_merge*, %struct.dfset_merge** %dsm, align 8, !dbg !10865
  %src = getelementptr inbounds %struct.dfset_merge, %struct.dfset_merge* %25, i32 0, i32 2, !dbg !10866
  %26 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %src, align 8, !dbg !10866
  %vars = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %26, i32 0, i32 2, !dbg !10867
  %27 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars, align 8, !dbg !10867
  %28 = load i8*, i8** %dv, align 8, !dbg !10868
  %29 = load i32, i32* %dvhash, align 4, !dbg !10869
  %call30 = call %struct.variable_def* @shared_hash_find_1(%struct.shared_hash_def* %27, i8* %28, i32 %29), !dbg !10870
  store %struct.variable_def* %call30, %struct.variable_def** %s2var, align 8, !dbg !10871
  %30 = load %struct.variable_def*, %struct.variable_def** %s2var, align 8, !dbg !10872
  %tobool31 = icmp ne %struct.variable_def* %30, null, !dbg !10872
  br i1 %tobool31, label %if.end33, label %if.then32, !dbg !10874

if.then32:                                        ; preds = %if.end29
  store i8 0, i8* @dst_can_be_shared, align 1, !dbg !10875
  store i32 1, i32* %retval, align 4, !dbg !10877
  br label %return, !dbg !10877

if.end33:                                         ; preds = %if.end29
  %31 = load %struct.dfset_merge*, %struct.dfset_merge** %dsm, align 8, !dbg !10878
  %src_onepart_cnt = getelementptr inbounds %struct.dfset_merge, %struct.dfset_merge* %31, i32 0, i32 3, !dbg !10879
  %32 = load i32, i32* %src_onepart_cnt, align 8, !dbg !10880
  %dec = add nsw i32 %32, -1, !dbg !10880
  store i32 %dec, i32* %src_onepart_cnt, align 8, !dbg !10880
  %33 = load %struct.variable_def*, %struct.variable_def** %s2var, align 8, !dbg !10881
  %var_part34 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %33, i32 0, i32 5, !dbg !10881
  %arrayidx35 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part34, i64 0, i64 0, !dbg !10881
  %loc_chain36 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx35, i32 0, i32 0, !dbg !10881
  %34 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain36, align 8, !dbg !10881
  %tobool37 = icmp ne %struct.location_chain_def* %34, null, !dbg !10881
  br i1 %tobool37, label %cond.false39, label %cond.true38, !dbg !10881

cond.true38:                                      ; preds = %if.end33
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 3373, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !10881
  br label %cond.end40, !dbg !10881

cond.false39:                                     ; preds = %if.end33
  br label %cond.end40, !dbg !10881

cond.end40:                                       ; preds = %cond.false39, %cond.true38
  %cond41 = phi i32 [ 0, %cond.true38 ], [ 0, %cond.false39 ], !dbg !10881
  %35 = load %struct.variable_def*, %struct.variable_def** %s2var, align 8, !dbg !10882
  %n_var_parts42 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %35, i32 0, i32 2, !dbg !10882
  %36 = load i8, i8* %n_var_parts42, align 4, !dbg !10882
  %conv43 = sext i8 %36 to i32, !dbg !10882
  %cmp44 = icmp eq i32 %conv43, 1, !dbg !10882
  br i1 %cmp44, label %cond.false47, label %cond.true46, !dbg !10882

cond.true46:                                      ; preds = %cond.end40
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 3374, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !10882
  br label %cond.end48, !dbg !10882

cond.false47:                                     ; preds = %cond.end40
  br label %cond.end48, !dbg !10882

cond.end48:                                       ; preds = %cond.false47, %cond.true46
  %cond49 = phi i32 [ 0, %cond.true46 ], [ 0, %cond.false47 ], !dbg !10882
  %37 = load %struct.variable_def*, %struct.variable_def** %s2var, align 8, !dbg !10883
  %var_part50 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %37, i32 0, i32 5, !dbg !10883
  %arrayidx51 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part50, i64 0, i64 0, !dbg !10883
  %offset52 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx51, i32 0, i32 2, !dbg !10883
  %38 = load i64, i64* %offset52, align 8, !dbg !10883
  %cmp53 = icmp eq i64 %38, 0, !dbg !10883
  br i1 %cmp53, label %cond.false56, label %cond.true55, !dbg !10883

cond.true55:                                      ; preds = %cond.end48
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 3375, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !10883
  br label %cond.end57, !dbg !10883

cond.false56:                                     ; preds = %cond.end48
  br label %cond.end57, !dbg !10883

cond.end57:                                       ; preds = %cond.false56, %cond.true55
  %cond58 = phi i32 [ 0, %cond.true55 ], [ 0, %cond.false56 ], !dbg !10883
  %39 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %dst, align 8, !dbg !10884
  %vars59 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %39, i32 0, i32 2, !dbg !10885
  %40 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars59, align 8, !dbg !10885
  %41 = load i8*, i8** %dv, align 8, !dbg !10886
  %42 = load i32, i32* %dvhash, align 4, !dbg !10887
  %call60 = call i8** @shared_hash_find_slot_noinsert_1(%struct.shared_hash_def* %40, i8* %41, i32 %42), !dbg !10888
  store i8** %call60, i8*** %dstslot, align 8, !dbg !10889
  %43 = load i8**, i8*** %dstslot, align 8, !dbg !10890
  %tobool61 = icmp ne i8** %43, null, !dbg !10890
  br i1 %tobool61, label %if.then62, label %if.else89, !dbg !10892

if.then62:                                        ; preds = %cond.end57
  %44 = load i8**, i8*** %dstslot, align 8, !dbg !10893
  %45 = load i8*, i8** %44, align 8, !dbg !10895
  %46 = bitcast i8* %45 to %struct.variable_def*, !dbg !10896
  store %struct.variable_def* %46, %struct.variable_def** %dvar, align 8, !dbg !10897
  %47 = load %struct.variable_def*, %struct.variable_def** %dvar, align 8, !dbg !10898
  %refcount = getelementptr inbounds %struct.variable_def, %struct.variable_def* %47, i32 0, i32 1, !dbg !10898
  %48 = load i32, i32* %refcount, align 8, !dbg !10898
  %cmp63 = icmp eq i32 %48, 1, !dbg !10898
  br i1 %cmp63, label %cond.false66, label %cond.true65, !dbg !10898

cond.true65:                                      ; preds = %if.then62
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 3381, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !10898
  br label %cond.end67, !dbg !10898

cond.false66:                                     ; preds = %if.then62
  br label %cond.end67, !dbg !10898

cond.end67:                                       ; preds = %cond.false66, %cond.true65
  %cond68 = phi i32 [ 0, %cond.true65 ], [ 0, %cond.false66 ], !dbg !10898
  %49 = load %struct.variable_def*, %struct.variable_def** %dvar, align 8, !dbg !10899
  %n_var_parts69 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %49, i32 0, i32 2, !dbg !10899
  %50 = load i8, i8* %n_var_parts69, align 4, !dbg !10899
  %conv70 = sext i8 %50 to i32, !dbg !10899
  %cmp71 = icmp eq i32 %conv70, 1, !dbg !10899
  br i1 %cmp71, label %cond.false74, label %cond.true73, !dbg !10899

cond.true73:                                      ; preds = %cond.end67
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 3382, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !10899
  br label %cond.end75, !dbg !10899

cond.false74:                                     ; preds = %cond.end67
  br label %cond.end75, !dbg !10899

cond.end75:                                       ; preds = %cond.false74, %cond.true73
  %cond76 = phi i32 [ 0, %cond.true73 ], [ 0, %cond.false74 ], !dbg !10899
  %51 = load %struct.variable_def*, %struct.variable_def** %dvar, align 8, !dbg !10900
  %var_part77 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %51, i32 0, i32 5, !dbg !10900
  %arrayidx78 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part77, i64 0, i64 0, !dbg !10900
  %offset79 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx78, i32 0, i32 2, !dbg !10900
  %52 = load i64, i64* %offset79, align 8, !dbg !10900
  %cmp80 = icmp eq i64 %52, 0, !dbg !10900
  br i1 %cmp80, label %cond.false83, label %cond.true82, !dbg !10900

cond.true82:                                      ; preds = %cond.end75
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 3383, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !10900
  br label %cond.end84, !dbg !10900

cond.false83:                                     ; preds = %cond.end75
  br label %cond.end84, !dbg !10900

cond.end84:                                       ; preds = %cond.false83, %cond.true82
  %cond85 = phi i32 [ 0, %cond.true82 ], [ 0, %cond.false83 ], !dbg !10900
  %53 = load %struct.variable_def*, %struct.variable_def** %dvar, align 8, !dbg !10901
  %var_part86 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %53, i32 0, i32 5, !dbg !10902
  %arrayidx87 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part86, i64 0, i64 0, !dbg !10901
  %loc_chain88 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx87, i32 0, i32 0, !dbg !10903
  store %struct.location_chain_def** %loc_chain88, %struct.location_chain_def*** %nodep, align 8, !dbg !10904
  br label %if.end90, !dbg !10905

if.else89:                                        ; preds = %cond.end57
  store %struct.location_chain_def** %node, %struct.location_chain_def*** %nodep, align 8, !dbg !10906
  store %struct.location_chain_def* null, %struct.location_chain_def** %node, align 8, !dbg !10908
  br label %if.end90

if.end90:                                         ; preds = %if.else89, %cond.end84
  %54 = load i8**, i8*** %dstslot, align 8, !dbg !10909
  %tobool91 = icmp ne i8** %54, null, !dbg !10909
  br i1 %tobool91, label %if.else98, label %land.lhs.true, !dbg !10911

land.lhs.true:                                    ; preds = %if.end90
  %55 = load %struct.variable_def*, %struct.variable_def** %s1var, align 8, !dbg !10912
  %56 = load %struct.variable_def*, %struct.variable_def** %s2var, align 8, !dbg !10913
  %call92 = call zeroext i8 @onepart_variable_different_p(%struct.variable_def* %55, %struct.variable_def* %56), !dbg !10914
  %tobool93 = icmp ne i8 %call92, 0, !dbg !10914
  br i1 %tobool93, label %if.else98, label %if.then94, !dbg !10915

if.then94:                                        ; preds = %land.lhs.true
  %57 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %dst, align 8, !dbg !10916
  %vars95 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %57, i32 0, i32 2, !dbg !10918
  %58 = load i8*, i8** %dv, align 8, !dbg !10919
  %59 = load i32, i32* %dvhash, align 4, !dbg !10920
  %call96 = call i8** @shared_hash_find_slot_unshare_1(%struct.shared_hash_def** %vars95, i8* %58, i32 %59, i32 1), !dbg !10921
  store i8** %call96, i8*** %dstslot, align 8, !dbg !10922
  %60 = load %struct.variable_def*, %struct.variable_def** %s2var, align 8, !dbg !10923
  store %struct.variable_def* %60, %struct.variable_def** %dvar, align 8, !dbg !10924
  %61 = bitcast %struct.variable_def* %60 to i8*, !dbg !10925
  %62 = load i8**, i8*** %dstslot, align 8, !dbg !10926
  store i8* %61, i8** %62, align 8, !dbg !10927
  %63 = load %struct.variable_def*, %struct.variable_def** %dvar, align 8, !dbg !10928
  %refcount97 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %63, i32 0, i32 1, !dbg !10929
  %64 = load i32, i32* %refcount97, align 8, !dbg !10930
  %inc = add nsw i32 %64, 1, !dbg !10930
  store i32 %inc, i32* %refcount97, align 8, !dbg !10930
  br label %if.end129, !dbg !10931

if.else98:                                        ; preds = %land.lhs.true, %if.end90
  store i8 0, i8* @dst_can_be_shared, align 1, !dbg !10932
  %65 = load %struct.rtx_def*, %struct.rtx_def** %val, align 8, !dbg !10934
  %66 = load %struct.location_chain_def**, %struct.location_chain_def*** %nodep, align 8, !dbg !10935
  %67 = load %struct.dfset_merge*, %struct.dfset_merge** %dsm, align 8, !dbg !10936
  %68 = load %struct.variable_def*, %struct.variable_def** %s1var, align 8, !dbg !10937
  %var_part99 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %68, i32 0, i32 5, !dbg !10938
  %arrayidx100 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part99, i64 0, i64 0, !dbg !10937
  %loc_chain101 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx100, i32 0, i32 0, !dbg !10939
  %69 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain101, align 8, !dbg !10939
  %70 = load %struct.variable_def*, %struct.variable_def** %s2var, align 8, !dbg !10940
  call void @intersect_loc_chains(%struct.rtx_def* %65, %struct.location_chain_def** %66, %struct.dfset_merge* %67, %struct.location_chain_def* %69, %struct.variable_def* %70), !dbg !10941
  %71 = load i8**, i8*** %dstslot, align 8, !dbg !10942
  %tobool102 = icmp ne i8** %71, null, !dbg !10942
  br i1 %tobool102, label %if.end128, label %if.then103, !dbg !10944

if.then103:                                       ; preds = %if.else98
  %72 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !10945
  %tobool104 = icmp ne %struct.location_chain_def* %72, null, !dbg !10945
  br i1 %tobool104, label %if.then105, label %if.else126, !dbg !10948

if.then105:                                       ; preds = %if.then103
  %73 = load i8*, i8** %dv, align 8, !dbg !10949
  %call106 = call %struct.alloc_pool_def* @dv_pool(i8* %73), !dbg !10951
  %call107 = call i8* @pool_alloc(%struct.alloc_pool_def* %call106), !dbg !10952
  %74 = bitcast i8* %call107 to %struct.variable_def*, !dbg !10953
  store %struct.variable_def* %74, %struct.variable_def** %dvar, align 8, !dbg !10954
  %75 = load i8*, i8** %dv, align 8, !dbg !10955
  %76 = load %struct.variable_def*, %struct.variable_def** %dvar, align 8, !dbg !10956
  %dv108 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %76, i32 0, i32 0, !dbg !10957
  store i8* %75, i8** %dv108, align 8, !dbg !10958
  %77 = load %struct.variable_def*, %struct.variable_def** %dvar, align 8, !dbg !10959
  %refcount109 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %77, i32 0, i32 1, !dbg !10960
  store i32 1, i32* %refcount109, align 8, !dbg !10961
  %78 = load %struct.variable_def*, %struct.variable_def** %dvar, align 8, !dbg !10962
  %n_var_parts110 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %78, i32 0, i32 2, !dbg !10963
  store i8 1, i8* %n_var_parts110, align 4, !dbg !10964
  %79 = load %struct.variable_def*, %struct.variable_def** %dvar, align 8, !dbg !10965
  %cur_loc_changed = getelementptr inbounds %struct.variable_def, %struct.variable_def* %79, i32 0, i32 3, !dbg !10966
  store i8 0, i8* %cur_loc_changed, align 1, !dbg !10967
  %80 = load %struct.variable_def*, %struct.variable_def** %dvar, align 8, !dbg !10968
  %in_changed_variables = getelementptr inbounds %struct.variable_def, %struct.variable_def* %80, i32 0, i32 4, !dbg !10969
  store i8 0, i8* %in_changed_variables, align 2, !dbg !10970
  %81 = load %struct.variable_def*, %struct.variable_def** %dvar, align 8, !dbg !10971
  %var_part111 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %81, i32 0, i32 5, !dbg !10972
  %arrayidx112 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part111, i64 0, i64 0, !dbg !10971
  %offset113 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx112, i32 0, i32 2, !dbg !10973
  store i64 0, i64* %offset113, align 8, !dbg !10974
  %82 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !10975
  %83 = load %struct.variable_def*, %struct.variable_def** %dvar, align 8, !dbg !10976
  %var_part114 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %83, i32 0, i32 5, !dbg !10977
  %arrayidx115 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part114, i64 0, i64 0, !dbg !10976
  %loc_chain116 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx115, i32 0, i32 0, !dbg !10978
  store %struct.location_chain_def* %82, %struct.location_chain_def** %loc_chain116, align 8, !dbg !10979
  %84 = load %struct.variable_def*, %struct.variable_def** %dvar, align 8, !dbg !10980
  %var_part117 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %84, i32 0, i32 5, !dbg !10981
  %arrayidx118 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part117, i64 0, i64 0, !dbg !10980
  %cur_loc = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx118, i32 0, i32 1, !dbg !10982
  store %struct.rtx_def* null, %struct.rtx_def** %cur_loc, align 8, !dbg !10983
  %85 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %dst, align 8, !dbg !10984
  %vars119 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %85, i32 0, i32 2, !dbg !10985
  %86 = load i8*, i8** %dv, align 8, !dbg !10986
  %87 = load i32, i32* %dvhash, align 4, !dbg !10987
  %call120 = call i8** @shared_hash_find_slot_unshare_1(%struct.shared_hash_def** %vars119, i8* %86, i32 %87, i32 1), !dbg !10988
  store i8** %call120, i8*** %dstslot, align 8, !dbg !10989
  %88 = load i8**, i8*** %dstslot, align 8, !dbg !10990
  %89 = load i8*, i8** %88, align 8, !dbg !10990
  %tobool121 = icmp ne i8* %89, null, !dbg !10990
  br i1 %tobool121, label %cond.true122, label %cond.false123, !dbg !10990

cond.true122:                                     ; preds = %if.then105
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 3423, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !10990
  br label %cond.end124, !dbg !10990

cond.false123:                                    ; preds = %if.then105
  br label %cond.end124, !dbg !10990

cond.end124:                                      ; preds = %cond.false123, %cond.true122
  %cond125 = phi i32 [ 0, %cond.true122 ], [ 0, %cond.false123 ], !dbg !10990
  %90 = load %struct.variable_def*, %struct.variable_def** %dvar, align 8, !dbg !10991
  %91 = bitcast %struct.variable_def* %90 to i8*, !dbg !10991
  %92 = load i8**, i8*** %dstslot, align 8, !dbg !10992
  store i8* %91, i8** %92, align 8, !dbg !10993
  br label %if.end127, !dbg !10994

if.else126:                                       ; preds = %if.then103
  store i32 1, i32* %retval, align 4, !dbg !10995
  br label %return, !dbg !10995

if.end127:                                        ; preds = %cond.end124
  br label %if.end128, !dbg !10996

if.end128:                                        ; preds = %if.end127, %if.else98
  br label %if.end129

if.end129:                                        ; preds = %if.end128, %if.then94
  %93 = load %struct.variable_def*, %struct.variable_def** %dvar, align 8, !dbg !10997
  %var_part130 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %93, i32 0, i32 5, !dbg !10998
  %arrayidx131 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part130, i64 0, i64 0, !dbg !10997
  %loc_chain132 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx131, i32 0, i32 0, !dbg !10999
  store %struct.location_chain_def** %loc_chain132, %struct.location_chain_def*** %nodep, align 8, !dbg !11000
  br label %while.cond, !dbg !11001

while.cond:                                       ; preds = %if.end184, %if.end129
  %94 = load %struct.location_chain_def**, %struct.location_chain_def*** %nodep, align 8, !dbg !11002
  %95 = load %struct.location_chain_def*, %struct.location_chain_def** %94, align 8, !dbg !11003
  store %struct.location_chain_def* %95, %struct.location_chain_def** %node, align 8, !dbg !11004
  %tobool133 = icmp ne %struct.location_chain_def* %95, null, !dbg !11001
  br i1 %tobool133, label %while.body, label %while.end, !dbg !11001

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata %struct.location_chain_def*** %nextp, metadata !11005, metadata !DIExpression()), !dbg !11007
  %96 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !11008
  %next = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %96, i32 0, i32 0, !dbg !11009
  store %struct.location_chain_def** %next, %struct.location_chain_def*** %nextp, align 8, !dbg !11007
  %97 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !11010
  %loc = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %97, i32 0, i32 1, !dbg !11010
  %98 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !11010
  %99 = bitcast %struct.rtx_def* %98 to i32*, !dbg !11010
  %bf.load = load i32, i32* %99, align 8, !dbg !11010
  %bf.clear = and i32 %bf.load, 65535, !dbg !11010
  %cmp134 = icmp eq i32 %bf.clear, 37, !dbg !11012
  br i1 %cmp134, label %if.then136, label %if.else183, !dbg !11013

if.then136:                                       ; preds = %while.body
  call void @llvm.dbg.declare(metadata %struct.attrs_def** %list, metadata !11014, metadata !DIExpression()), !dbg !11016
  %100 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %dst, align 8, !dbg !11017
  %regs = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %100, i32 0, i32 1, !dbg !11019
  %101 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !11020
  %loc137 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %101, i32 0, i32 1, !dbg !11020
  %102 = load %struct.rtx_def*, %struct.rtx_def** %loc137, align 8, !dbg !11020
  %call138 = call i32 @rhs_regno(%struct.rtx_def* %102), !dbg !11020
  %idxprom = zext i32 %call138 to i64, !dbg !11017
  %arrayidx139 = getelementptr inbounds [53 x %struct.attrs_def*], [53 x %struct.attrs_def*]* %regs, i64 0, i64 %idxprom, !dbg !11017
  %103 = load %struct.attrs_def*, %struct.attrs_def** %arrayidx139, align 8, !dbg !11017
  store %struct.attrs_def* %103, %struct.attrs_def** %list, align 8, !dbg !11021
  br label %for.cond, !dbg !11022

for.cond:                                         ; preds = %for.inc, %if.then136
  %104 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !11023
  %tobool140 = icmp ne %struct.attrs_def* %104, null, !dbg !11025
  br i1 %tobool140, label %for.body, label %for.end, !dbg !11025

for.body:                                         ; preds = %for.cond
  %105 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !11026
  %loc141 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %105, i32 0, i32 1, !dbg !11026
  %106 = load %struct.rtx_def*, %struct.rtx_def** %loc141, align 8, !dbg !11026
  %107 = bitcast %struct.rtx_def* %106 to i32*, !dbg !11026
  %bf.load142 = load i32, i32* %107, align 8, !dbg !11026
  %bf.lshr = lshr i32 %bf.load142, 16, !dbg !11026
  %bf.clear143 = and i32 %bf.lshr, 255, !dbg !11026
  %108 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !11028
  %loc144 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %108, i32 0, i32 1, !dbg !11028
  %109 = load %struct.rtx_def*, %struct.rtx_def** %loc144, align 8, !dbg !11028
  %110 = bitcast %struct.rtx_def* %109 to i32*, !dbg !11028
  %bf.load145 = load i32, i32* %110, align 8, !dbg !11028
  %bf.lshr146 = lshr i32 %bf.load145, 16, !dbg !11028
  %bf.clear147 = and i32 %bf.lshr146, 255, !dbg !11028
  %cmp148 = icmp eq i32 %bf.clear143, %bf.clear147, !dbg !11029
  br i1 %cmp148, label %land.lhs.true150, label %if.end156, !dbg !11030

land.lhs.true150:                                 ; preds = %for.body
  %111 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !11031
  %dv151 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %111, i32 0, i32 2, !dbg !11032
  %112 = load i8*, i8** %dv151, align 8, !dbg !11032
  %call152 = call zeroext i8 @dv_is_value_p(i8* %112), !dbg !11033
  %conv153 = zext i8 %call152 to i32, !dbg !11033
  %tobool154 = icmp ne i32 %conv153, 0, !dbg !11033
  br i1 %tobool154, label %if.then155, label %if.end156, !dbg !11034

if.then155:                                       ; preds = %land.lhs.true150
  br label %for.end, !dbg !11035

if.end156:                                        ; preds = %land.lhs.true150, %for.body
  br label %for.inc, !dbg !11036

for.inc:                                          ; preds = %if.end156
  %113 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !11037
  %next157 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %113, i32 0, i32 0, !dbg !11038
  %114 = load %struct.attrs_def*, %struct.attrs_def** %next157, align 8, !dbg !11038
  store %struct.attrs_def* %114, %struct.attrs_def** %list, align 8, !dbg !11039
  br label %for.cond, !dbg !11040, !llvm.loop !11041

for.end:                                          ; preds = %if.then155, %for.cond
  %115 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !11043
  %tobool158 = icmp ne %struct.attrs_def* %115, null, !dbg !11043
  br i1 %tobool158, label %if.else166, label %if.then159, !dbg !11045

if.then159:                                       ; preds = %for.end
  %116 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %dst, align 8, !dbg !11046
  %regs160 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %116, i32 0, i32 1, !dbg !11047
  %117 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !11048
  %loc161 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %117, i32 0, i32 1, !dbg !11048
  %118 = load %struct.rtx_def*, %struct.rtx_def** %loc161, align 8, !dbg !11048
  %call162 = call i32 @rhs_regno(%struct.rtx_def* %118), !dbg !11048
  %idxprom163 = zext i32 %call162 to i64, !dbg !11046
  %arrayidx164 = getelementptr inbounds [53 x %struct.attrs_def*], [53 x %struct.attrs_def*]* %regs160, i64 0, i64 %idxprom163, !dbg !11046
  %119 = load i8*, i8** %dv, align 8, !dbg !11049
  %120 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !11050
  %loc165 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %120, i32 0, i32 1, !dbg !11051
  %121 = load %struct.rtx_def*, %struct.rtx_def** %loc165, align 8, !dbg !11051
  call void @attrs_list_insert(%struct.attrs_def** %arrayidx164, i8* %119, i64 0, %struct.rtx_def* %121), !dbg !11052
  br label %if.end182, !dbg !11052

if.else166:                                       ; preds = %for.end
  %122 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !11053
  %dv167 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %122, i32 0, i32 2, !dbg !11055
  %123 = load i8*, i8** %dv167, align 8, !dbg !11055
  %call168 = call %struct.rtx_def* @dv_as_value(i8* %123), !dbg !11056
  %124 = load %struct.rtx_def*, %struct.rtx_def** %val, align 8, !dbg !11057
  %cmp169 = icmp ne %struct.rtx_def* %call168, %124, !dbg !11058
  br i1 %cmp169, label %if.then171, label %if.end181, !dbg !11059

if.then171:                                       ; preds = %if.else166
  %125 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %dst, align 8, !dbg !11060
  %126 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !11062
  %dv172 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %126, i32 0, i32 2, !dbg !11063
  %127 = load i8*, i8** %dv172, align 8, !dbg !11063
  %call173 = call %struct.rtx_def* @dv_as_value(i8* %127), !dbg !11064
  %128 = load i8**, i8*** %dstslot, align 8, !dbg !11065
  %129 = load i8*, i8** %dv, align 8, !dbg !11066
  %130 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !11067
  %init = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %130, i32 0, i32 3, !dbg !11068
  %131 = load i32, i32* %init, align 8, !dbg !11068
  %call174 = call i8** @set_slot_part(%struct.dataflow_set_def* %125, %struct.rtx_def* %call173, i8** %128, i8* %129, i64 0, i32 %131, %struct.rtx_def* null), !dbg !11069
  store i8** %call174, i8*** %dstslot, align 8, !dbg !11070
  %132 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %dst, align 8, !dbg !11071
  %133 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !11072
  %loc175 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %133, i32 0, i32 1, !dbg !11073
  %134 = load %struct.rtx_def*, %struct.rtx_def** %loc175, align 8, !dbg !11073
  %135 = load i8**, i8*** %dstslot, align 8, !dbg !11074
  %call176 = call i8** @delete_slot_part(%struct.dataflow_set_def* %132, %struct.rtx_def* %134, i8** %135, i64 0), !dbg !11075
  store i8** %call176, i8*** %dstslot, align 8, !dbg !11076
  %136 = load %struct.location_chain_def**, %struct.location_chain_def*** %nodep, align 8, !dbg !11077
  %137 = load %struct.location_chain_def*, %struct.location_chain_def** %136, align 8, !dbg !11079
  %138 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !11080
  %cmp177 = icmp ne %struct.location_chain_def* %137, %138, !dbg !11081
  br i1 %cmp177, label %if.then179, label %if.end180, !dbg !11082

if.then179:                                       ; preds = %if.then171
  %139 = load %struct.location_chain_def**, %struct.location_chain_def*** %nodep, align 8, !dbg !11083
  store %struct.location_chain_def** %139, %struct.location_chain_def*** %nextp, align 8, !dbg !11084
  br label %if.end180, !dbg !11085

if.end180:                                        ; preds = %if.then179, %if.then171
  br label %if.end181, !dbg !11086

if.end181:                                        ; preds = %if.end180, %if.else166
  br label %if.end182

if.end182:                                        ; preds = %if.end181, %if.then159
  br label %if.end184, !dbg !11087

if.else183:                                       ; preds = %while.body
  br label %while.end, !dbg !11088

if.end184:                                        ; preds = %if.end182
  %140 = load %struct.location_chain_def**, %struct.location_chain_def*** %nextp, align 8, !dbg !11089
  store %struct.location_chain_def** %140, %struct.location_chain_def*** %nodep, align 8, !dbg !11090
  br label %while.cond, !dbg !11001, !llvm.loop !11091

while.end:                                        ; preds = %if.else183, %while.cond
  %141 = load %struct.variable_def*, %struct.variable_def** %dvar, align 8, !dbg !11093
  %142 = load i8**, i8*** %dstslot, align 8, !dbg !11095
  %143 = load i8*, i8** %142, align 8, !dbg !11096
  %144 = bitcast i8* %143 to %struct.variable_def*, !dbg !11097
  %cmp185 = icmp ne %struct.variable_def* %141, %144, !dbg !11098
  br i1 %cmp185, label %if.then187, label %if.end188, !dbg !11099

if.then187:                                       ; preds = %while.end
  %145 = load i8**, i8*** %dstslot, align 8, !dbg !11100
  %146 = load i8*, i8** %145, align 8, !dbg !11101
  %147 = bitcast i8* %146 to %struct.variable_def*, !dbg !11102
  store %struct.variable_def* %147, %struct.variable_def** %dvar, align 8, !dbg !11103
  br label %if.end188, !dbg !11104

if.end188:                                        ; preds = %if.then187, %while.end
  %148 = load %struct.variable_def*, %struct.variable_def** %dvar, align 8, !dbg !11105
  %var_part189 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %148, i32 0, i32 5, !dbg !11106
  %arrayidx190 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part189, i64 0, i64 0, !dbg !11105
  %loc_chain191 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx190, i32 0, i32 0, !dbg !11107
  store %struct.location_chain_def** %loc_chain191, %struct.location_chain_def*** %nodep, align 8, !dbg !11108
  %149 = load %struct.rtx_def*, %struct.rtx_def** %val, align 8, !dbg !11109
  %tobool192 = icmp ne %struct.rtx_def* %149, null, !dbg !11109
  br i1 %tobool192, label %if.then193, label %if.else225, !dbg !11111

if.then193:                                       ; preds = %if.end188
  %150 = load %struct.rtx_def*, %struct.rtx_def** %val, align 8, !dbg !11112
  %151 = bitcast %struct.rtx_def* %150 to i32*, !dbg !11112
  %bf.load194 = load i32, i32* %151, align 8, !dbg !11114
  %bf.clear195 = and i32 %bf.load194, -536870913, !dbg !11114
  %bf.set = or i32 %bf.clear195, 536870912, !dbg !11114
  store i32 %bf.set, i32* %151, align 8, !dbg !11114
  %152 = load %struct.location_chain_def**, %struct.location_chain_def*** %nodep, align 8, !dbg !11115
  %153 = load %struct.location_chain_def*, %struct.location_chain_def** %152, align 8, !dbg !11117
  store %struct.location_chain_def* %153, %struct.location_chain_def** %node, align 8, !dbg !11118
  br label %for.cond196, !dbg !11119

for.cond196:                                      ; preds = %for.inc213, %if.then193
  %154 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !11120
  %tobool197 = icmp ne %struct.location_chain_def* %154, null, !dbg !11122
  br i1 %tobool197, label %for.body198, label %for.end215, !dbg !11122

for.body198:                                      ; preds = %for.cond196
  %155 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !11123
  %loc199 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %155, i32 0, i32 1, !dbg !11123
  %156 = load %struct.rtx_def*, %struct.rtx_def** %loc199, align 8, !dbg !11123
  %157 = bitcast %struct.rtx_def* %156 to i32*, !dbg !11123
  %bf.load200 = load i32, i32* %157, align 8, !dbg !11123
  %bf.clear201 = and i32 %bf.load200, 65535, !dbg !11123
  %cmp202 = icmp eq i32 %bf.clear201, 1, !dbg !11125
  br i1 %cmp202, label %if.then204, label %if.end212, !dbg !11126

if.then204:                                       ; preds = %for.body198
  %158 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !11127
  %loc205 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %158, i32 0, i32 1, !dbg !11127
  %159 = load %struct.rtx_def*, %struct.rtx_def** %loc205, align 8, !dbg !11127
  %160 = bitcast %struct.rtx_def* %159 to i32*, !dbg !11127
  %bf.load206 = load i32, i32* %160, align 8, !dbg !11129
  %bf.clear207 = and i32 %bf.load206, -536870913, !dbg !11129
  %bf.set208 = or i32 %bf.clear207, 536870912, !dbg !11129
  store i32 %bf.set208, i32* %160, align 8, !dbg !11129
  %161 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %dst, align 8, !dbg !11130
  %162 = load %struct.rtx_def*, %struct.rtx_def** %val, align 8, !dbg !11131
  %163 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !11132
  %loc209 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %163, i32 0, i32 1, !dbg !11133
  %164 = load %struct.rtx_def*, %struct.rtx_def** %loc209, align 8, !dbg !11133
  %call210 = call i8* @dv_from_value(%struct.rtx_def* %164), !dbg !11134
  %165 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !11135
  %init211 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %165, i32 0, i32 3, !dbg !11136
  %166 = load i32, i32* %init211, align 8, !dbg !11136
  call void @set_variable_part(%struct.dataflow_set_def* %161, %struct.rtx_def* %162, i8* %call210, i64 0, i32 %166, %struct.rtx_def* null, i32 1), !dbg !11137
  br label %if.end212, !dbg !11138

if.end212:                                        ; preds = %if.then204, %for.body198
  br label %for.inc213, !dbg !11139

for.inc213:                                       ; preds = %if.end212
  %167 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !11140
  %next214 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %167, i32 0, i32 0, !dbg !11141
  %168 = load %struct.location_chain_def*, %struct.location_chain_def** %next214, align 8, !dbg !11141
  store %struct.location_chain_def* %168, %struct.location_chain_def** %node, align 8, !dbg !11142
  br label %for.cond196, !dbg !11143, !llvm.loop !11144

for.end215:                                       ; preds = %for.cond196
  %169 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %dst, align 8, !dbg !11146
  %vars216 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %169, i32 0, i32 2, !dbg !11147
  %170 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars216, align 8, !dbg !11147
  %171 = load i8*, i8** %dv, align 8, !dbg !11148
  %172 = load i32, i32* %dvhash, align 4, !dbg !11149
  %call217 = call i8** @shared_hash_find_slot_noinsert_1(%struct.shared_hash_def* %170, i8* %171, i32 %172), !dbg !11150
  store i8** %call217, i8*** %dstslot, align 8, !dbg !11151
  %173 = load i8**, i8*** %dstslot, align 8, !dbg !11152
  %174 = load i8*, i8** %173, align 8, !dbg !11152
  %175 = load %struct.variable_def*, %struct.variable_def** %dvar, align 8, !dbg !11152
  %176 = bitcast %struct.variable_def* %175 to i8*, !dbg !11152
  %cmp218 = icmp eq i8* %174, %176, !dbg !11152
  br i1 %cmp218, label %cond.false221, label %cond.true220, !dbg !11152

cond.true220:                                     ; preds = %for.end215
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 3493, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !11152
  br label %cond.end222, !dbg !11152

cond.false221:                                    ; preds = %for.end215
  br label %cond.end222, !dbg !11152

cond.end222:                                      ; preds = %cond.false221, %cond.true220
  %cond223 = phi i32 [ 0, %cond.true220 ], [ 0, %cond.false221 ], !dbg !11152
  %177 = load i8**, i8*** %dstslot, align 8, !dbg !11153
  %178 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %dst, align 8, !dbg !11154
  %179 = bitcast %struct.dataflow_set_def* %178 to i8*, !dbg !11154
  %call224 = call i32 @canonicalize_values_star(i8** %177, i8* %179), !dbg !11155
  %180 = load i8**, i8*** %dstslot, align 8, !dbg !11156
  %181 = load i8*, i8** %180, align 8, !dbg !11157
  %182 = bitcast i8* %181 to %struct.variable_def*, !dbg !11158
  store %struct.variable_def* %182, %struct.variable_def** %dvar, align 8, !dbg !11159
  br label %if.end316, !dbg !11160

if.else225:                                       ; preds = %if.end188
  call void @llvm.dbg.declare(metadata i8* %has_value, metadata !11161, metadata !DIExpression()), !dbg !11163
  store i8 0, i8* %has_value, align 1, !dbg !11163
  call void @llvm.dbg.declare(metadata i8* %has_other, metadata !11164, metadata !DIExpression()), !dbg !11165
  store i8 0, i8* %has_other, align 1, !dbg !11165
  %183 = load %struct.location_chain_def**, %struct.location_chain_def*** %nodep, align 8, !dbg !11166
  %184 = load %struct.location_chain_def*, %struct.location_chain_def** %183, align 8, !dbg !11168
  store %struct.location_chain_def* %184, %struct.location_chain_def** %node, align 8, !dbg !11169
  br label %for.cond226, !dbg !11170

for.cond226:                                      ; preds = %for.inc246, %if.else225
  %185 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !11171
  %tobool227 = icmp ne %struct.location_chain_def* %185, null, !dbg !11173
  br i1 %tobool227, label %for.body228, label %for.end248, !dbg !11173

for.body228:                                      ; preds = %for.cond226
  %186 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !11174
  %loc229 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %186, i32 0, i32 1, !dbg !11174
  %187 = load %struct.rtx_def*, %struct.rtx_def** %loc229, align 8, !dbg !11174
  %188 = bitcast %struct.rtx_def* %187 to i32*, !dbg !11174
  %bf.load230 = load i32, i32* %188, align 8, !dbg !11174
  %bf.clear231 = and i32 %bf.load230, 65535, !dbg !11174
  %cmp232 = icmp eq i32 %bf.clear231, 1, !dbg !11177
  br i1 %cmp232, label %if.then234, label %if.else241, !dbg !11178

if.then234:                                       ; preds = %for.body228
  %189 = load i8, i8* %has_value, align 1, !dbg !11179
  %tobool235 = icmp ne i8 %189, 0, !dbg !11179
  br i1 %tobool235, label %if.then236, label %if.end237, !dbg !11182

if.then236:                                       ; preds = %if.then234
  store i8 1, i8* %has_other, align 1, !dbg !11183
  br label %if.end237, !dbg !11184

if.end237:                                        ; preds = %if.then236, %if.then234
  store i8 1, i8* %has_value, align 1, !dbg !11185
  %190 = load i8, i8* %has_other, align 1, !dbg !11186
  %tobool238 = icmp ne i8 %190, 0, !dbg !11186
  br i1 %tobool238, label %if.then239, label %if.end240, !dbg !11188

if.then239:                                       ; preds = %if.end237
  br label %for.end248, !dbg !11189

if.end240:                                        ; preds = %if.end237
  br label %if.end245, !dbg !11190

if.else241:                                       ; preds = %for.body228
  store i8 1, i8* %has_other, align 1, !dbg !11191
  %191 = load i8, i8* %has_value, align 1, !dbg !11193
  %tobool242 = icmp ne i8 %191, 0, !dbg !11193
  br i1 %tobool242, label %if.then243, label %if.end244, !dbg !11195

if.then243:                                       ; preds = %if.else241
  br label %for.end248, !dbg !11196

if.end244:                                        ; preds = %if.else241
  br label %if.end245

if.end245:                                        ; preds = %if.end244, %if.end240
  br label %for.inc246, !dbg !11197

for.inc246:                                       ; preds = %if.end245
  %192 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !11198
  %next247 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %192, i32 0, i32 0, !dbg !11199
  %193 = load %struct.location_chain_def*, %struct.location_chain_def** %next247, align 8, !dbg !11199
  store %struct.location_chain_def* %193, %struct.location_chain_def** %node, align 8, !dbg !11200
  br label %for.cond226, !dbg !11201, !llvm.loop !11202

for.end248:                                       ; preds = %if.then243, %if.then239, %for.cond226
  %194 = load i8, i8* %has_value, align 1, !dbg !11204
  %conv249 = zext i8 %194 to i32, !dbg !11204
  %tobool250 = icmp ne i32 %conv249, 0, !dbg !11204
  br i1 %tobool250, label %land.lhs.true251, label %if.end315, !dbg !11206

land.lhs.true251:                                 ; preds = %for.end248
  %195 = load i8, i8* %has_other, align 1, !dbg !11207
  %conv252 = zext i8 %195 to i32, !dbg !11207
  %tobool253 = icmp ne i32 %conv252, 0, !dbg !11207
  br i1 %tobool253, label %if.then254, label %if.end315, !dbg !11208

if.then254:                                       ; preds = %land.lhs.true251
  %196 = load %struct.location_chain_def**, %struct.location_chain_def*** %nodep, align 8, !dbg !11209
  %197 = load %struct.location_chain_def*, %struct.location_chain_def** %196, align 8, !dbg !11212
  store %struct.location_chain_def* %197, %struct.location_chain_def** %node, align 8, !dbg !11213
  br label %for.cond255, !dbg !11214

for.cond255:                                      ; preds = %for.inc303, %if.then254
  %198 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !11215
  %tobool256 = icmp ne %struct.location_chain_def* %198, null, !dbg !11217
  br i1 %tobool256, label %for.body257, label %for.end305, !dbg !11217

for.body257:                                      ; preds = %for.cond255
  %199 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !11218
  %loc258 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %199, i32 0, i32 1, !dbg !11218
  %200 = load %struct.rtx_def*, %struct.rtx_def** %loc258, align 8, !dbg !11218
  %201 = bitcast %struct.rtx_def* %200 to i32*, !dbg !11218
  %bf.load259 = load i32, i32* %201, align 8, !dbg !11218
  %bf.clear260 = and i32 %bf.load259, 65535, !dbg !11218
  %cmp261 = icmp eq i32 %bf.clear260, 1, !dbg !11221
  br i1 %cmp261, label %if.then263, label %if.end302, !dbg !11222

if.then263:                                       ; preds = %for.body257
  call void @llvm.dbg.declare(metadata i8** %dv264, metadata !11223, metadata !DIExpression()), !dbg !11225
  %202 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !11226
  %loc265 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %202, i32 0, i32 1, !dbg !11227
  %203 = load %struct.rtx_def*, %struct.rtx_def** %loc265, align 8, !dbg !11227
  %call266 = call i8* @dv_from_value(%struct.rtx_def* %203), !dbg !11228
  store i8* %call266, i8** %dv264, align 8, !dbg !11225
  call void @llvm.dbg.declare(metadata i8*** %slot, metadata !11229, metadata !DIExpression()), !dbg !11230
  store i8** null, i8*** %slot, align 8, !dbg !11230
  %204 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %dst, align 8, !dbg !11231
  %vars267 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %204, i32 0, i32 2, !dbg !11233
  %205 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars267, align 8, !dbg !11233
  %call268 = call zeroext i8 @shared_hash_shared(%struct.shared_hash_def* %205), !dbg !11234
  %tobool269 = icmp ne i8 %call268, 0, !dbg !11234
  br i1 %tobool269, label %if.then270, label %if.end273, !dbg !11235

if.then270:                                       ; preds = %if.then263
  %206 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %dst, align 8, !dbg !11236
  %vars271 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %206, i32 0, i32 2, !dbg !11237
  %207 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars271, align 8, !dbg !11237
  %208 = load i8*, i8** %dv264, align 8, !dbg !11238
  %call272 = call i8** @shared_hash_find_slot_noinsert(%struct.shared_hash_def* %207, i8* %208), !dbg !11239
  store i8** %call272, i8*** %slot, align 8, !dbg !11240
  br label %if.end273, !dbg !11241

if.end273:                                        ; preds = %if.then270, %if.then263
  %209 = load i8**, i8*** %slot, align 8, !dbg !11242
  %tobool274 = icmp ne i8** %209, null, !dbg !11242
  br i1 %tobool274, label %if.end278, label %if.then275, !dbg !11244

if.then275:                                       ; preds = %if.end273
  %210 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %dst, align 8, !dbg !11245
  %vars276 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %210, i32 0, i32 2, !dbg !11246
  %211 = load i8*, i8** %dv264, align 8, !dbg !11247
  %call277 = call i8** @shared_hash_find_slot_unshare(%struct.shared_hash_def** %vars276, i8* %211, i32 1), !dbg !11248
  store i8** %call277, i8*** %slot, align 8, !dbg !11249
  br label %if.end278, !dbg !11250

if.end278:                                        ; preds = %if.then275, %if.end273
  %212 = load i8**, i8*** %slot, align 8, !dbg !11251
  %213 = load i8*, i8** %212, align 8, !dbg !11253
  %tobool279 = icmp ne i8* %213, null, !dbg !11253
  br i1 %tobool279, label %if.end297, label %if.then280, !dbg !11254

if.then280:                                       ; preds = %if.end278
  call void @llvm.dbg.declare(metadata %struct.variable_def** %var, metadata !11255, metadata !DIExpression()), !dbg !11257
  %214 = load i8*, i8** %dv264, align 8, !dbg !11258
  %call281 = call %struct.alloc_pool_def* @dv_pool(i8* %214), !dbg !11259
  %call282 = call i8* @pool_alloc(%struct.alloc_pool_def* %call281), !dbg !11260
  %215 = bitcast i8* %call282 to %struct.variable_def*, !dbg !11261
  store %struct.variable_def* %215, %struct.variable_def** %var, align 8, !dbg !11257
  %216 = load i8*, i8** %dv264, align 8, !dbg !11262
  %217 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !11263
  %dv283 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %217, i32 0, i32 0, !dbg !11264
  store i8* %216, i8** %dv283, align 8, !dbg !11265
  %218 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !11266
  %refcount284 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %218, i32 0, i32 1, !dbg !11267
  store i32 1, i32* %refcount284, align 8, !dbg !11268
  %219 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !11269
  %n_var_parts285 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %219, i32 0, i32 2, !dbg !11270
  store i8 1, i8* %n_var_parts285, align 4, !dbg !11271
  %220 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !11272
  %cur_loc_changed286 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %220, i32 0, i32 3, !dbg !11273
  store i8 0, i8* %cur_loc_changed286, align 1, !dbg !11274
  %221 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !11275
  %in_changed_variables287 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %221, i32 0, i32 4, !dbg !11276
  store i8 0, i8* %in_changed_variables287, align 2, !dbg !11277
  %222 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !11278
  %var_part288 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %222, i32 0, i32 5, !dbg !11279
  %arrayidx289 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part288, i64 0, i64 0, !dbg !11278
  %offset290 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx289, i32 0, i32 2, !dbg !11280
  store i64 0, i64* %offset290, align 8, !dbg !11281
  %223 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !11282
  %var_part291 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %223, i32 0, i32 5, !dbg !11283
  %arrayidx292 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part291, i64 0, i64 0, !dbg !11282
  %loc_chain293 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx292, i32 0, i32 0, !dbg !11284
  store %struct.location_chain_def* null, %struct.location_chain_def** %loc_chain293, align 8, !dbg !11285
  %224 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !11286
  %var_part294 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %224, i32 0, i32 5, !dbg !11287
  %arrayidx295 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part294, i64 0, i64 0, !dbg !11286
  %cur_loc296 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx295, i32 0, i32 1, !dbg !11288
  store %struct.rtx_def* null, %struct.rtx_def** %cur_loc296, align 8, !dbg !11289
  %225 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !11290
  %226 = bitcast %struct.variable_def* %225 to i8*, !dbg !11290
  %227 = load i8**, i8*** %slot, align 8, !dbg !11291
  store i8* %226, i8** %227, align 8, !dbg !11292
  br label %if.end297, !dbg !11293

if.end297:                                        ; preds = %if.then280, %if.end278
  %228 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !11294
  %loc298 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %228, i32 0, i32 1, !dbg !11294
  %229 = load %struct.rtx_def*, %struct.rtx_def** %loc298, align 8, !dbg !11294
  %230 = bitcast %struct.rtx_def* %229 to i32*, !dbg !11294
  %bf.load299 = load i32, i32* %230, align 8, !dbg !11295
  %bf.clear300 = and i32 %bf.load299, -536870913, !dbg !11295
  %bf.set301 = or i32 %bf.clear300, 536870912, !dbg !11295
  store i32 %bf.set301, i32* %230, align 8, !dbg !11295
  br label %if.end302, !dbg !11296

if.end302:                                        ; preds = %if.end297, %for.body257
  br label %for.inc303, !dbg !11297

for.inc303:                                       ; preds = %if.end302
  %231 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !11298
  %next304 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %231, i32 0, i32 0, !dbg !11299
  %232 = load %struct.location_chain_def*, %struct.location_chain_def** %next304, align 8, !dbg !11299
  store %struct.location_chain_def* %232, %struct.location_chain_def** %node, align 8, !dbg !11300
  br label %for.cond255, !dbg !11301, !llvm.loop !11302

for.end305:                                       ; preds = %for.cond255
  %233 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %dst, align 8, !dbg !11304
  %vars306 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %233, i32 0, i32 2, !dbg !11305
  %234 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars306, align 8, !dbg !11305
  %235 = load i8*, i8** %dv, align 8, !dbg !11306
  %236 = load i32, i32* %dvhash, align 4, !dbg !11307
  %call307 = call i8** @shared_hash_find_slot_noinsert_1(%struct.shared_hash_def* %234, i8* %235, i32 %236), !dbg !11308
  store i8** %call307, i8*** %dstslot, align 8, !dbg !11309
  %237 = load i8**, i8*** %dstslot, align 8, !dbg !11310
  %238 = load i8*, i8** %237, align 8, !dbg !11310
  %239 = load %struct.variable_def*, %struct.variable_def** %dvar, align 8, !dbg !11310
  %240 = bitcast %struct.variable_def* %239 to i8*, !dbg !11310
  %cmp308 = icmp eq i8* %238, %240, !dbg !11310
  br i1 %cmp308, label %cond.false311, label %cond.true310, !dbg !11310

cond.true310:                                     ; preds = %for.end305
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 3561, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !11310
  br label %cond.end312, !dbg !11310

cond.false311:                                    ; preds = %for.end305
  br label %cond.end312, !dbg !11310

cond.end312:                                      ; preds = %cond.false311, %cond.true310
  %cond313 = phi i32 [ 0, %cond.true310 ], [ 0, %cond.false311 ], !dbg !11310
  %241 = load i8**, i8*** %dstslot, align 8, !dbg !11311
  %242 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %dst, align 8, !dbg !11312
  %243 = bitcast %struct.dataflow_set_def* %242 to i8*, !dbg !11312
  %call314 = call i32 @canonicalize_values_star(i8** %241, i8* %243), !dbg !11313
  %244 = load i8**, i8*** %dstslot, align 8, !dbg !11314
  %245 = load i8*, i8** %244, align 8, !dbg !11315
  %246 = bitcast i8* %245 to %struct.variable_def*, !dbg !11316
  store %struct.variable_def* %246, %struct.variable_def** %dvar, align 8, !dbg !11317
  br label %if.end315, !dbg !11318

if.end315:                                        ; preds = %cond.end312, %land.lhs.true251, %for.end248
  br label %if.end316

if.end316:                                        ; preds = %if.end315, %cond.end222
  %247 = load %struct.variable_def*, %struct.variable_def** %dvar, align 8, !dbg !11319
  %248 = load %struct.variable_def*, %struct.variable_def** %s2var, align 8, !dbg !11321
  %call317 = call zeroext i8 @onepart_variable_different_p(%struct.variable_def* %247, %struct.variable_def* %248), !dbg !11322
  %tobool318 = icmp ne i8 %call317, 0, !dbg !11322
  br i1 %tobool318, label %if.else322, label %if.then319, !dbg !11323

if.then319:                                       ; preds = %if.end316
  %249 = load %struct.variable_def*, %struct.variable_def** %dvar, align 8, !dbg !11324
  %250 = bitcast %struct.variable_def* %249 to i8*, !dbg !11324
  call void @variable_htab_free(i8* %250), !dbg !11326
  %251 = load %struct.variable_def*, %struct.variable_def** %s2var, align 8, !dbg !11327
  store %struct.variable_def* %251, %struct.variable_def** %dvar, align 8, !dbg !11328
  %252 = bitcast %struct.variable_def* %251 to i8*, !dbg !11329
  %253 = load i8**, i8*** %dstslot, align 8, !dbg !11330
  store i8* %252, i8** %253, align 8, !dbg !11331
  %254 = load %struct.variable_def*, %struct.variable_def** %dvar, align 8, !dbg !11332
  %refcount320 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %254, i32 0, i32 1, !dbg !11333
  %255 = load i32, i32* %refcount320, align 8, !dbg !11334
  %inc321 = add nsw i32 %255, 1, !dbg !11334
  store i32 %inc321, i32* %refcount320, align 8, !dbg !11334
  br label %if.end333, !dbg !11335

if.else322:                                       ; preds = %if.end316
  %256 = load %struct.variable_def*, %struct.variable_def** %s2var, align 8, !dbg !11336
  %257 = load %struct.variable_def*, %struct.variable_def** %s1var, align 8, !dbg !11338
  %cmp323 = icmp ne %struct.variable_def* %256, %257, !dbg !11339
  br i1 %cmp323, label %land.lhs.true325, label %if.else331, !dbg !11340

land.lhs.true325:                                 ; preds = %if.else322
  %258 = load %struct.variable_def*, %struct.variable_def** %dvar, align 8, !dbg !11341
  %259 = load %struct.variable_def*, %struct.variable_def** %s1var, align 8, !dbg !11342
  %call326 = call zeroext i8 @onepart_variable_different_p(%struct.variable_def* %258, %struct.variable_def* %259), !dbg !11343
  %tobool327 = icmp ne i8 %call326, 0, !dbg !11343
  br i1 %tobool327, label %if.else331, label %if.then328, !dbg !11344

if.then328:                                       ; preds = %land.lhs.true325
  %260 = load %struct.variable_def*, %struct.variable_def** %dvar, align 8, !dbg !11345
  %261 = bitcast %struct.variable_def* %260 to i8*, !dbg !11345
  call void @variable_htab_free(i8* %261), !dbg !11347
  %262 = load %struct.variable_def*, %struct.variable_def** %s1var, align 8, !dbg !11348
  store %struct.variable_def* %262, %struct.variable_def** %dvar, align 8, !dbg !11349
  %263 = bitcast %struct.variable_def* %262 to i8*, !dbg !11350
  %264 = load i8**, i8*** %dstslot, align 8, !dbg !11351
  store i8* %263, i8** %264, align 8, !dbg !11352
  %265 = load %struct.variable_def*, %struct.variable_def** %dvar, align 8, !dbg !11353
  %refcount329 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %265, i32 0, i32 1, !dbg !11354
  %266 = load i32, i32* %refcount329, align 8, !dbg !11355
  %inc330 = add nsw i32 %266, 1, !dbg !11355
  store i32 %inc330, i32* %refcount329, align 8, !dbg !11355
  store i8 0, i8* @dst_can_be_shared, align 1, !dbg !11356
  br label %if.end332, !dbg !11357

if.else331:                                       ; preds = %land.lhs.true325, %if.else322
  store i8 0, i8* @dst_can_be_shared, align 1, !dbg !11358
  br label %if.end332

if.end332:                                        ; preds = %if.else331, %if.then328
  br label %if.end333

if.end333:                                        ; preds = %if.end332, %if.then319
  store i32 1, i32* %retval, align 4, !dbg !11359
  br label %return, !dbg !11359

return:                                           ; preds = %if.end333, %if.else126, %if.then32, %if.then
  %267 = load i32, i32* %retval, align 4, !dbg !11360
  ret i32 %267, !dbg !11360
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.attrs_def* @attrs_list_member(%struct.attrs_def* %list, i8* %dv, i64 %offset) #0 !dbg !11361 {
entry:
  %retval = alloca %struct.attrs_def*, align 8
  %list.addr = alloca %struct.attrs_def*, align 8
  %dv.addr = alloca i8*, align 8
  %offset.addr = alloca i64, align 8
  store %struct.attrs_def* %list, %struct.attrs_def** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.attrs_def** %list.addr, metadata !11364, metadata !DIExpression()), !dbg !11365
  store i8* %dv, i8** %dv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dv.addr, metadata !11366, metadata !DIExpression()), !dbg !11367
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !11368, metadata !DIExpression()), !dbg !11369
  br label %for.cond, !dbg !11370

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.attrs_def*, %struct.attrs_def** %list.addr, align 8, !dbg !11371
  %tobool = icmp ne %struct.attrs_def* %0, null, !dbg !11374
  br i1 %tobool, label %for.body, label %for.end, !dbg !11374

for.body:                                         ; preds = %for.cond
  %1 = load %struct.attrs_def*, %struct.attrs_def** %list.addr, align 8, !dbg !11375
  %dv1 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %1, i32 0, i32 2, !dbg !11377
  %2 = load i8*, i8** %dv1, align 8, !dbg !11377
  %call = call i8* @dv_as_opaque(i8* %2), !dbg !11378
  %3 = load i8*, i8** %dv.addr, align 8, !dbg !11379
  %call2 = call i8* @dv_as_opaque(i8* %3), !dbg !11380
  %cmp = icmp eq i8* %call, %call2, !dbg !11381
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !11382

land.lhs.true:                                    ; preds = %for.body
  %4 = load %struct.attrs_def*, %struct.attrs_def** %list.addr, align 8, !dbg !11383
  %offset3 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %4, i32 0, i32 3, !dbg !11384
  %5 = load i64, i64* %offset3, align 8, !dbg !11384
  %6 = load i64, i64* %offset.addr, align 8, !dbg !11385
  %cmp4 = icmp eq i64 %5, %6, !dbg !11386
  br i1 %cmp4, label %if.then, label %if.end, !dbg !11387

if.then:                                          ; preds = %land.lhs.true
  %7 = load %struct.attrs_def*, %struct.attrs_def** %list.addr, align 8, !dbg !11388
  store %struct.attrs_def* %7, %struct.attrs_def** %retval, align 8, !dbg !11389
  br label %return, !dbg !11389

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !11385

for.inc:                                          ; preds = %if.end
  %8 = load %struct.attrs_def*, %struct.attrs_def** %list.addr, align 8, !dbg !11390
  %next = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %8, i32 0, i32 0, !dbg !11391
  %9 = load %struct.attrs_def*, %struct.attrs_def** %next, align 8, !dbg !11391
  store %struct.attrs_def* %9, %struct.attrs_def** %list.addr, align 8, !dbg !11392
  br label %for.cond, !dbg !11393, !llvm.loop !11394

for.end:                                          ; preds = %for.cond
  store %struct.attrs_def* null, %struct.attrs_def** %retval, align 8, !dbg !11396
  br label %return, !dbg !11396

return:                                           ; preds = %for.end, %if.then
  %10 = load %struct.attrs_def*, %struct.attrs_def** %retval, align 8, !dbg !11397
  ret %struct.attrs_def* %10, !dbg !11397
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @variable_union(i8** %slot, i8* %data) #0 !dbg !11398 {
entry:
  %retval = alloca i32, align 4
  %slot.addr = alloca i8**, align 8
  %data.addr = alloca i8*, align 8
  %src = alloca %struct.variable_def*, align 8
  %dst = alloca %struct.variable_def*, align 8
  %dstp = alloca i8**, align 8
  %set = alloca %struct.dataflow_set_def*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %k = alloca i32, align 4
  %nodep = alloca %struct.location_chain_def**, align 8
  %dnode = alloca %struct.location_chain_def*, align 8
  %snode = alloca %struct.location_chain_def*, align 8
  %r = alloca i32, align 4
  %nnode = alloca %struct.location_chain_def*, align 8
  %node = alloca %struct.location_chain_def*, align 8
  %node2 = alloca %struct.location_chain_def*, align 8
  %dst_l = alloca i32, align 4
  %src_l = alloca i32, align 4
  %ii = alloca i32, align 4
  %jj = alloca i32, align 4
  %n = alloca i32, align 4
  %vui = alloca %struct.variable_union_info*, align 8
  %dstnode = alloca %struct.location_chain_def*, align 8
  %new_node = alloca %struct.location_chain_def*, align 8
  %new_node428 = alloca %struct.location_chain_def*, align 8
  %nextp = alloca %struct.location_chain_def**, align 8
  %new_lc = alloca %struct.location_chain_def*, align 8
  %node729 = alloca %struct.location_chain_def*, align 8
  %node2730 = alloca %struct.location_chain_def*, align 8
  store i8** %slot, i8*** %slot.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %slot.addr, metadata !11399, metadata !DIExpression()), !dbg !11400
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !11401, metadata !DIExpression()), !dbg !11402
  call void @llvm.dbg.declare(metadata %struct.variable_def** %src, metadata !11403, metadata !DIExpression()), !dbg !11404
  call void @llvm.dbg.declare(metadata %struct.variable_def** %dst, metadata !11405, metadata !DIExpression()), !dbg !11406
  call void @llvm.dbg.declare(metadata i8*** %dstp, metadata !11407, metadata !DIExpression()), !dbg !11408
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %set, metadata !11409, metadata !DIExpression()), !dbg !11410
  %0 = load i8*, i8** %data.addr, align 8, !dbg !11411
  %1 = bitcast i8* %0 to %struct.dataflow_set_def*, !dbg !11412
  store %struct.dataflow_set_def* %1, %struct.dataflow_set_def** %set, align 8, !dbg !11410
  call void @llvm.dbg.declare(metadata i32* %i, metadata !11413, metadata !DIExpression()), !dbg !11414
  call void @llvm.dbg.declare(metadata i32* %j, metadata !11415, metadata !DIExpression()), !dbg !11416
  call void @llvm.dbg.declare(metadata i32* %k, metadata !11417, metadata !DIExpression()), !dbg !11418
  %2 = load i8**, i8*** %slot.addr, align 8, !dbg !11419
  %3 = load i8*, i8** %2, align 8, !dbg !11420
  %4 = bitcast i8* %3 to %struct.variable_def*, !dbg !11421
  store %struct.variable_def* %4, %struct.variable_def** %src, align 8, !dbg !11422
  %5 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set, align 8, !dbg !11423
  %vars = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %5, i32 0, i32 2, !dbg !11424
  %6 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars, align 8, !dbg !11424
  %7 = load %struct.variable_def*, %struct.variable_def** %src, align 8, !dbg !11425
  %dv = getelementptr inbounds %struct.variable_def, %struct.variable_def* %7, i32 0, i32 0, !dbg !11426
  %8 = load i8*, i8** %dv, align 8, !dbg !11426
  %call = call i8** @shared_hash_find_slot(%struct.shared_hash_def* %6, i8* %8), !dbg !11427
  store i8** %call, i8*** %dstp, align 8, !dbg !11428
  %9 = load i8**, i8*** %dstp, align 8, !dbg !11429
  %tobool = icmp ne i8** %9, null, !dbg !11429
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !11431

lor.lhs.false:                                    ; preds = %entry
  %10 = load i8**, i8*** %dstp, align 8, !dbg !11432
  %11 = load i8*, i8** %10, align 8, !dbg !11433
  %tobool1 = icmp ne i8* %11, null, !dbg !11433
  br i1 %tobool1, label %if.else, label %if.then, !dbg !11434

if.then:                                          ; preds = %lor.lhs.false, %entry
  %12 = load %struct.variable_def*, %struct.variable_def** %src, align 8, !dbg !11435
  %refcount = getelementptr inbounds %struct.variable_def, %struct.variable_def* %12, i32 0, i32 1, !dbg !11437
  %13 = load i32, i32* %refcount, align 8, !dbg !11438
  %inc = add nsw i32 %13, 1, !dbg !11438
  store i32 %inc, i32* %refcount, align 8, !dbg !11438
  store i8 0, i8* @dst_can_be_shared, align 1, !dbg !11439
  %14 = load i8**, i8*** %dstp, align 8, !dbg !11440
  %tobool2 = icmp ne i8** %14, null, !dbg !11440
  br i1 %tobool2, label %if.end, label %if.then3, !dbg !11442

if.then3:                                         ; preds = %if.then
  %15 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set, align 8, !dbg !11443
  %vars4 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %15, i32 0, i32 2, !dbg !11444
  %16 = load %struct.variable_def*, %struct.variable_def** %src, align 8, !dbg !11445
  %dv5 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %16, i32 0, i32 0, !dbg !11446
  %17 = load i8*, i8** %dv5, align 8, !dbg !11446
  %call6 = call i8** @shared_hash_find_slot_unshare(%struct.shared_hash_def** %vars4, i8* %17, i32 1), !dbg !11447
  store i8** %call6, i8*** %dstp, align 8, !dbg !11448
  br label %if.end, !dbg !11449

if.end:                                           ; preds = %if.then3, %if.then
  %18 = load %struct.variable_def*, %struct.variable_def** %src, align 8, !dbg !11450
  %19 = bitcast %struct.variable_def* %18 to i8*, !dbg !11450
  %20 = load i8**, i8*** %dstp, align 8, !dbg !11451
  store i8* %19, i8** %20, align 8, !dbg !11452
  store i32 1, i32* %retval, align 4, !dbg !11453
  br label %return, !dbg !11453

if.else:                                          ; preds = %lor.lhs.false
  %21 = load i8**, i8*** %dstp, align 8, !dbg !11454
  %22 = load i8*, i8** %21, align 8, !dbg !11455
  %23 = bitcast i8* %22 to %struct.variable_def*, !dbg !11456
  store %struct.variable_def* %23, %struct.variable_def** %dst, align 8, !dbg !11457
  br label %if.end7

if.end7:                                          ; preds = %if.else
  %24 = load %struct.variable_def*, %struct.variable_def** %src, align 8, !dbg !11458
  %n_var_parts = getelementptr inbounds %struct.variable_def, %struct.variable_def* %24, i32 0, i32 2, !dbg !11458
  %25 = load i8, i8* %n_var_parts, align 4, !dbg !11458
  %tobool8 = icmp ne i8 %25, 0, !dbg !11458
  br i1 %tobool8, label %cond.false, label %cond.true, !dbg !11458

cond.true:                                        ; preds = %if.end7
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 2097, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !11458
  br label %cond.end, !dbg !11458

cond.false:                                       ; preds = %if.end7
  br label %cond.end, !dbg !11458

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !11458
  %26 = load %struct.variable_def*, %struct.variable_def** %src, align 8, !dbg !11459
  %dv9 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %26, i32 0, i32 0, !dbg !11461
  %27 = load i8*, i8** %dv9, align 8, !dbg !11461
  %call10 = call zeroext i8 @dv_onepart_p(i8* %27), !dbg !11462
  %tobool11 = icmp ne i8 %call10, 0, !dbg !11462
  br i1 %tobool11, label %if.then12, label %if.end79, !dbg !11463

if.then12:                                        ; preds = %cond.end
  call void @llvm.dbg.declare(metadata %struct.location_chain_def*** %nodep, metadata !11464, metadata !DIExpression()), !dbg !11466
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %dnode, metadata !11467, metadata !DIExpression()), !dbg !11468
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %snode, metadata !11469, metadata !DIExpression()), !dbg !11470
  %28 = load %struct.variable_def*, %struct.variable_def** %src, align 8, !dbg !11471
  %n_var_parts13 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %28, i32 0, i32 2, !dbg !11471
  %29 = load i8, i8* %n_var_parts13, align 4, !dbg !11471
  %conv = sext i8 %29 to i32, !dbg !11471
  %cmp = icmp eq i32 %conv, 1, !dbg !11471
  br i1 %cmp, label %cond.false16, label %cond.true15, !dbg !11471

cond.true15:                                      ; preds = %if.then12
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 2105, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !11471
  br label %cond.end17, !dbg !11471

cond.false16:                                     ; preds = %if.then12
  br label %cond.end17, !dbg !11471

cond.end17:                                       ; preds = %cond.false16, %cond.true15
  %cond18 = phi i32 [ 0, %cond.true15 ], [ 0, %cond.false16 ], !dbg !11471
  %30 = load %struct.variable_def*, %struct.variable_def** %dst, align 8, !dbg !11472
  %n_var_parts19 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %30, i32 0, i32 2, !dbg !11472
  %31 = load i8, i8* %n_var_parts19, align 4, !dbg !11472
  %conv20 = sext i8 %31 to i32, !dbg !11472
  %cmp21 = icmp eq i32 %conv20, 1, !dbg !11472
  br i1 %cmp21, label %cond.false24, label %cond.true23, !dbg !11472

cond.true23:                                      ; preds = %cond.end17
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 2106, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !11472
  br label %cond.end25, !dbg !11472

cond.false24:                                     ; preds = %cond.end17
  br label %cond.end25, !dbg !11472

cond.end25:                                       ; preds = %cond.false24, %cond.true23
  %cond26 = phi i32 [ 0, %cond.true23 ], [ 0, %cond.false24 ], !dbg !11472
  %32 = load %struct.variable_def*, %struct.variable_def** %src, align 8, !dbg !11473
  %var_part = getelementptr inbounds %struct.variable_def, %struct.variable_def* %32, i32 0, i32 5, !dbg !11474
  %arrayidx = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part, i64 0, i64 0, !dbg !11473
  %loc_chain = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx, i32 0, i32 0, !dbg !11475
  %33 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain, align 8, !dbg !11475
  store %struct.location_chain_def* %33, %struct.location_chain_def** %snode, align 8, !dbg !11476
  %34 = load %struct.location_chain_def*, %struct.location_chain_def** %snode, align 8, !dbg !11477
  %tobool27 = icmp ne %struct.location_chain_def* %34, null, !dbg !11477
  br i1 %tobool27, label %cond.false29, label %cond.true28, !dbg !11477

cond.true28:                                      ; preds = %cond.end25
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 2109, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !11477
  br label %cond.end30, !dbg !11477

cond.false29:                                     ; preds = %cond.end25
  br label %cond.end30, !dbg !11477

cond.end30:                                       ; preds = %cond.false29, %cond.true28
  %cond31 = phi i32 [ 0, %cond.true28 ], [ 0, %cond.false29 ], !dbg !11477
  br label %restart_onepart_unshared, !dbg !11477

restart_onepart_unshared:                         ; preds = %if.then54, %cond.end30
  call void @llvm.dbg.label(metadata !11478), !dbg !11479
  %35 = load %struct.variable_def*, %struct.variable_def** %dst, align 8, !dbg !11480
  %var_part32 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %35, i32 0, i32 5, !dbg !11481
  %arrayidx33 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part32, i64 0, i64 0, !dbg !11480
  %loc_chain34 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx33, i32 0, i32 0, !dbg !11482
  store %struct.location_chain_def** %loc_chain34, %struct.location_chain_def*** %nodep, align 8, !dbg !11483
  %36 = load %struct.location_chain_def**, %struct.location_chain_def*** %nodep, align 8, !dbg !11484
  %37 = load %struct.location_chain_def*, %struct.location_chain_def** %36, align 8, !dbg !11485
  store %struct.location_chain_def* %37, %struct.location_chain_def** %dnode, align 8, !dbg !11486
  %38 = load %struct.location_chain_def*, %struct.location_chain_def** %dnode, align 8, !dbg !11487
  %tobool35 = icmp ne %struct.location_chain_def* %38, null, !dbg !11487
  br i1 %tobool35, label %cond.false37, label %cond.true36, !dbg !11487

cond.true36:                                      ; preds = %restart_onepart_unshared
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 2114, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !11487
  br label %cond.end38, !dbg !11487

cond.false37:                                     ; preds = %restart_onepart_unshared
  br label %cond.end38, !dbg !11487

cond.end38:                                       ; preds = %cond.false37, %cond.true36
  %cond39 = phi i32 [ 0, %cond.true36 ], [ 0, %cond.false37 ], !dbg !11487
  br label %while.cond, !dbg !11488

while.cond:                                       ; preds = %if.end77, %cond.end38
  %39 = load %struct.location_chain_def*, %struct.location_chain_def** %snode, align 8, !dbg !11489
  %tobool40 = icmp ne %struct.location_chain_def* %39, null, !dbg !11488
  br i1 %tobool40, label %while.body, label %while.end, !dbg !11488

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %r, metadata !11490, metadata !DIExpression()), !dbg !11492
  %40 = load %struct.location_chain_def*, %struct.location_chain_def** %dnode, align 8, !dbg !11493
  %tobool41 = icmp ne %struct.location_chain_def* %40, null, !dbg !11493
  br i1 %tobool41, label %cond.true42, label %cond.false45, !dbg !11493

cond.true42:                                      ; preds = %while.body
  %41 = load %struct.location_chain_def*, %struct.location_chain_def** %dnode, align 8, !dbg !11494
  %loc = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %41, i32 0, i32 1, !dbg !11495
  %42 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !11495
  %43 = load %struct.location_chain_def*, %struct.location_chain_def** %snode, align 8, !dbg !11496
  %loc43 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %43, i32 0, i32 1, !dbg !11497
  %44 = load %struct.rtx_def*, %struct.rtx_def** %loc43, align 8, !dbg !11497
  %call44 = call i32 @loc_cmp(%struct.rtx_def* %42, %struct.rtx_def* %44), !dbg !11498
  br label %cond.end46, !dbg !11493

cond.false45:                                     ; preds = %while.body
  br label %cond.end46, !dbg !11493

cond.end46:                                       ; preds = %cond.false45, %cond.true42
  %cond47 = phi i32 [ %call44, %cond.true42 ], [ 1, %cond.false45 ], !dbg !11493
  store i32 %cond47, i32* %r, align 4, !dbg !11492
  %45 = load i32, i32* %r, align 4, !dbg !11499
  %cmp48 = icmp sgt i32 %45, 0, !dbg !11501
  br i1 %cmp48, label %if.then50, label %if.end72, !dbg !11502

if.then50:                                        ; preds = %cond.end46
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %nnode, metadata !11503, metadata !DIExpression()), !dbg !11505
  %46 = load %struct.variable_def*, %struct.variable_def** %dst, align 8, !dbg !11506
  %47 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set, align 8, !dbg !11508
  %vars51 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %47, i32 0, i32 2, !dbg !11509
  %48 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars51, align 8, !dbg !11509
  %call52 = call zeroext i8 @shared_var_p(%struct.variable_def* %46, %struct.shared_hash_def* %48), !dbg !11510
  %tobool53 = icmp ne i8 %call52, 0, !dbg !11510
  br i1 %tobool53, label %if.then54, label %if.end56, !dbg !11511

if.then54:                                        ; preds = %if.then50
  %49 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set, align 8, !dbg !11512
  %50 = load i8**, i8*** %dstp, align 8, !dbg !11514
  %51 = load %struct.variable_def*, %struct.variable_def** %dst, align 8, !dbg !11515
  %call55 = call i8** @unshare_variable(%struct.dataflow_set_def* %49, i8** %50, %struct.variable_def* %51, i32 2), !dbg !11516
  store i8** %call55, i8*** %dstp, align 8, !dbg !11517
  %52 = load i8**, i8*** %dstp, align 8, !dbg !11518
  %53 = load i8*, i8** %52, align 8, !dbg !11519
  %54 = bitcast i8* %53 to %struct.variable_def*, !dbg !11520
  store %struct.variable_def* %54, %struct.variable_def** %dst, align 8, !dbg !11521
  br label %restart_onepart_unshared, !dbg !11522

if.end56:                                         ; preds = %if.then50
  %55 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @loc_chain_pool, align 8, !dbg !11523
  %call57 = call i8* @pool_alloc(%struct.alloc_pool_def* %55), !dbg !11524
  %56 = bitcast i8* %call57 to %struct.location_chain_def*, !dbg !11525
  store %struct.location_chain_def* %56, %struct.location_chain_def** %nnode, align 8, !dbg !11526
  %57 = load %struct.location_chain_def**, %struct.location_chain_def*** %nodep, align 8, !dbg !11527
  store %struct.location_chain_def* %56, %struct.location_chain_def** %57, align 8, !dbg !11528
  %58 = load %struct.location_chain_def*, %struct.location_chain_def** %snode, align 8, !dbg !11529
  %loc58 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %58, i32 0, i32 1, !dbg !11530
  %59 = load %struct.rtx_def*, %struct.rtx_def** %loc58, align 8, !dbg !11530
  %60 = load %struct.location_chain_def*, %struct.location_chain_def** %nnode, align 8, !dbg !11531
  %loc59 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %60, i32 0, i32 1, !dbg !11532
  store %struct.rtx_def* %59, %struct.rtx_def** %loc59, align 8, !dbg !11533
  %61 = load %struct.location_chain_def*, %struct.location_chain_def** %snode, align 8, !dbg !11534
  %init = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %61, i32 0, i32 3, !dbg !11535
  %62 = load i32, i32* %init, align 8, !dbg !11535
  %63 = load %struct.location_chain_def*, %struct.location_chain_def** %nnode, align 8, !dbg !11536
  %init60 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %63, i32 0, i32 3, !dbg !11537
  store i32 %62, i32* %init60, align 8, !dbg !11538
  %64 = load %struct.location_chain_def*, %struct.location_chain_def** %snode, align 8, !dbg !11539
  %set_src = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %64, i32 0, i32 2, !dbg !11541
  %65 = load %struct.rtx_def*, %struct.rtx_def** %set_src, align 8, !dbg !11541
  %tobool61 = icmp ne %struct.rtx_def* %65, null, !dbg !11539
  br i1 %tobool61, label %lor.lhs.false62, label %if.then66, !dbg !11542

lor.lhs.false62:                                  ; preds = %if.end56
  %66 = load %struct.location_chain_def*, %struct.location_chain_def** %snode, align 8, !dbg !11543
  %set_src63 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %66, i32 0, i32 2, !dbg !11543
  %67 = load %struct.rtx_def*, %struct.rtx_def** %set_src63, align 8, !dbg !11543
  %68 = bitcast %struct.rtx_def* %67 to i32*, !dbg !11543
  %bf.load = load i32, i32* %68, align 8, !dbg !11543
  %bf.clear = and i32 %bf.load, 65535, !dbg !11543
  %cmp64 = icmp eq i32 %bf.clear, 43, !dbg !11543
  br i1 %cmp64, label %if.then66, label %if.else68, !dbg !11544

if.then66:                                        ; preds = %lor.lhs.false62, %if.end56
  %69 = load %struct.location_chain_def*, %struct.location_chain_def** %nnode, align 8, !dbg !11545
  %set_src67 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %69, i32 0, i32 2, !dbg !11546
  store %struct.rtx_def* null, %struct.rtx_def** %set_src67, align 8, !dbg !11547
  br label %if.end71, !dbg !11545

if.else68:                                        ; preds = %lor.lhs.false62
  %70 = load %struct.location_chain_def*, %struct.location_chain_def** %snode, align 8, !dbg !11548
  %set_src69 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %70, i32 0, i32 2, !dbg !11549
  %71 = load %struct.rtx_def*, %struct.rtx_def** %set_src69, align 8, !dbg !11549
  %72 = load %struct.location_chain_def*, %struct.location_chain_def** %nnode, align 8, !dbg !11550
  %set_src70 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %72, i32 0, i32 2, !dbg !11551
  store %struct.rtx_def* %71, %struct.rtx_def** %set_src70, align 8, !dbg !11552
  br label %if.end71

if.end71:                                         ; preds = %if.else68, %if.then66
  %73 = load %struct.location_chain_def*, %struct.location_chain_def** %dnode, align 8, !dbg !11553
  %74 = load %struct.location_chain_def*, %struct.location_chain_def** %nnode, align 8, !dbg !11554
  %next = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %74, i32 0, i32 0, !dbg !11555
  store %struct.location_chain_def* %73, %struct.location_chain_def** %next, align 8, !dbg !11556
  %75 = load %struct.location_chain_def*, %struct.location_chain_def** %nnode, align 8, !dbg !11557
  store %struct.location_chain_def* %75, %struct.location_chain_def** %dnode, align 8, !dbg !11558
  br label %if.end72, !dbg !11559

if.end72:                                         ; preds = %if.end71, %cond.end46
  %76 = load i32, i32* %r, align 4, !dbg !11560
  %cmp73 = icmp sge i32 %76, 0, !dbg !11562
  br i1 %cmp73, label %if.then75, label %if.end77, !dbg !11563

if.then75:                                        ; preds = %if.end72
  %77 = load %struct.location_chain_def*, %struct.location_chain_def** %snode, align 8, !dbg !11564
  %next76 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %77, i32 0, i32 0, !dbg !11565
  %78 = load %struct.location_chain_def*, %struct.location_chain_def** %next76, align 8, !dbg !11565
  store %struct.location_chain_def* %78, %struct.location_chain_def** %snode, align 8, !dbg !11566
  br label %if.end77, !dbg !11567

if.end77:                                         ; preds = %if.then75, %if.end72
  %79 = load %struct.location_chain_def*, %struct.location_chain_def** %dnode, align 8, !dbg !11568
  %next78 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %79, i32 0, i32 0, !dbg !11569
  store %struct.location_chain_def** %next78, %struct.location_chain_def*** %nodep, align 8, !dbg !11570
  %80 = load %struct.location_chain_def**, %struct.location_chain_def*** %nodep, align 8, !dbg !11571
  %81 = load %struct.location_chain_def*, %struct.location_chain_def** %80, align 8, !dbg !11572
  store %struct.location_chain_def* %81, %struct.location_chain_def** %dnode, align 8, !dbg !11573
  br label %while.cond, !dbg !11488, !llvm.loop !11574

while.end:                                        ; preds = %while.cond
  store i32 1, i32* %retval, align 4, !dbg !11576
  br label %return, !dbg !11576

if.end79:                                         ; preds = %cond.end
  store i32 0, i32* %i, align 4, !dbg !11577
  store i32 0, i32* %j, align 4, !dbg !11579
  store i32 0, i32* %k, align 4, !dbg !11580
  br label %for.cond, !dbg !11581

for.cond:                                         ; preds = %for.inc, %if.end79
  %82 = load i32, i32* %i, align 4, !dbg !11582
  %83 = load %struct.variable_def*, %struct.variable_def** %src, align 8, !dbg !11584
  %n_var_parts80 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %83, i32 0, i32 2, !dbg !11585
  %84 = load i8, i8* %n_var_parts80, align 4, !dbg !11585
  %conv81 = sext i8 %84 to i32, !dbg !11584
  %cmp82 = icmp slt i32 %82, %conv81, !dbg !11586
  br i1 %cmp82, label %land.rhs, label %land.end, !dbg !11587

land.rhs:                                         ; preds = %for.cond
  %85 = load i32, i32* %j, align 4, !dbg !11588
  %86 = load %struct.variable_def*, %struct.variable_def** %dst, align 8, !dbg !11589
  %n_var_parts84 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %86, i32 0, i32 2, !dbg !11590
  %87 = load i8, i8* %n_var_parts84, align 4, !dbg !11590
  %conv85 = sext i8 %87 to i32, !dbg !11589
  %cmp86 = icmp slt i32 %85, %conv85, !dbg !11591
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %88 = phi i1 [ false, %for.cond ], [ %cmp86, %land.rhs ], !dbg !11592
  br i1 %88, label %for.body, label %for.end, !dbg !11593

for.body:                                         ; preds = %land.end
  %89 = load %struct.variable_def*, %struct.variable_def** %src, align 8, !dbg !11594
  %var_part88 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %89, i32 0, i32 5, !dbg !11597
  %90 = load i32, i32* %i, align 4, !dbg !11598
  %idxprom = sext i32 %90 to i64, !dbg !11594
  %arrayidx89 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part88, i64 0, i64 %idxprom, !dbg !11594
  %offset = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx89, i32 0, i32 2, !dbg !11599
  %91 = load i64, i64* %offset, align 8, !dbg !11599
  %92 = load %struct.variable_def*, %struct.variable_def** %dst, align 8, !dbg !11600
  %var_part90 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %92, i32 0, i32 5, !dbg !11601
  %93 = load i32, i32* %j, align 4, !dbg !11602
  %idxprom91 = sext i32 %93 to i64, !dbg !11600
  %arrayidx92 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part90, i64 0, i64 %idxprom91, !dbg !11600
  %offset93 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx92, i32 0, i32 2, !dbg !11603
  %94 = load i64, i64* %offset93, align 8, !dbg !11603
  %cmp94 = icmp eq i64 %91, %94, !dbg !11604
  br i1 %cmp94, label %if.then96, label %if.else99, !dbg !11605

if.then96:                                        ; preds = %for.body
  %95 = load i32, i32* %i, align 4, !dbg !11606
  %inc97 = add nsw i32 %95, 1, !dbg !11606
  store i32 %inc97, i32* %i, align 4, !dbg !11606
  %96 = load i32, i32* %j, align 4, !dbg !11608
  %inc98 = add nsw i32 %96, 1, !dbg !11608
  store i32 %inc98, i32* %j, align 4, !dbg !11608
  br label %if.end115, !dbg !11609

if.else99:                                        ; preds = %for.body
  %97 = load %struct.variable_def*, %struct.variable_def** %src, align 8, !dbg !11610
  %var_part100 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %97, i32 0, i32 5, !dbg !11612
  %98 = load i32, i32* %i, align 4, !dbg !11613
  %idxprom101 = sext i32 %98 to i64, !dbg !11610
  %arrayidx102 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part100, i64 0, i64 %idxprom101, !dbg !11610
  %offset103 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx102, i32 0, i32 2, !dbg !11614
  %99 = load i64, i64* %offset103, align 8, !dbg !11614
  %100 = load %struct.variable_def*, %struct.variable_def** %dst, align 8, !dbg !11615
  %var_part104 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %100, i32 0, i32 5, !dbg !11616
  %101 = load i32, i32* %j, align 4, !dbg !11617
  %idxprom105 = sext i32 %101 to i64, !dbg !11615
  %arrayidx106 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part104, i64 0, i64 %idxprom105, !dbg !11615
  %offset107 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx106, i32 0, i32 2, !dbg !11618
  %102 = load i64, i64* %offset107, align 8, !dbg !11618
  %cmp108 = icmp slt i64 %99, %102, !dbg !11619
  br i1 %cmp108, label %if.then110, label %if.else112, !dbg !11620

if.then110:                                       ; preds = %if.else99
  %103 = load i32, i32* %i, align 4, !dbg !11621
  %inc111 = add nsw i32 %103, 1, !dbg !11621
  store i32 %inc111, i32* %i, align 4, !dbg !11621
  br label %if.end114, !dbg !11622

if.else112:                                       ; preds = %if.else99
  %104 = load i32, i32* %j, align 4, !dbg !11623
  %inc113 = add nsw i32 %104, 1, !dbg !11623
  store i32 %inc113, i32* %j, align 4, !dbg !11623
  br label %if.end114

if.end114:                                        ; preds = %if.else112, %if.then110
  br label %if.end115

if.end115:                                        ; preds = %if.end114, %if.then96
  br label %for.inc, !dbg !11624

for.inc:                                          ; preds = %if.end115
  %105 = load i32, i32* %k, align 4, !dbg !11625
  %inc116 = add nsw i32 %105, 1, !dbg !11625
  store i32 %inc116, i32* %k, align 4, !dbg !11625
  br label %for.cond, !dbg !11626, !llvm.loop !11627

for.end:                                          ; preds = %land.end
  %106 = load %struct.variable_def*, %struct.variable_def** %src, align 8, !dbg !11629
  %n_var_parts117 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %106, i32 0, i32 2, !dbg !11630
  %107 = load i8, i8* %n_var_parts117, align 4, !dbg !11630
  %conv118 = sext i8 %107 to i32, !dbg !11629
  %108 = load i32, i32* %i, align 4, !dbg !11631
  %sub = sub nsw i32 %conv118, %108, !dbg !11632
  %109 = load i32, i32* %k, align 4, !dbg !11633
  %add = add nsw i32 %109, %sub, !dbg !11633
  store i32 %add, i32* %k, align 4, !dbg !11633
  %110 = load %struct.variable_def*, %struct.variable_def** %dst, align 8, !dbg !11634
  %n_var_parts119 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %110, i32 0, i32 2, !dbg !11635
  %111 = load i8, i8* %n_var_parts119, align 4, !dbg !11635
  %conv120 = sext i8 %111 to i32, !dbg !11634
  %112 = load i32, i32* %j, align 4, !dbg !11636
  %sub121 = sub nsw i32 %conv120, %112, !dbg !11637
  %113 = load i32, i32* %k, align 4, !dbg !11638
  %add122 = add nsw i32 %113, %sub121, !dbg !11638
  store i32 %add122, i32* %k, align 4, !dbg !11638
  %114 = load %struct.variable_def*, %struct.variable_def** %dst, align 8, !dbg !11639
  %dv123 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %114, i32 0, i32 0, !dbg !11639
  %115 = load i8*, i8** %dv123, align 8, !dbg !11639
  %call124 = call zeroext i8 @dv_onepart_p(i8* %115), !dbg !11639
  %conv125 = zext i8 %call124 to i32, !dbg !11639
  %tobool126 = icmp ne i32 %conv125, 0, !dbg !11639
  br i1 %tobool126, label %cond.true127, label %cond.false130, !dbg !11639

cond.true127:                                     ; preds = %for.end
  %116 = load i32, i32* %k, align 4, !dbg !11639
  %cmp128 = icmp eq i32 %116, 1, !dbg !11639
  br i1 %cmp128, label %cond.false134, label %cond.true133, !dbg !11639

cond.false130:                                    ; preds = %for.end
  %117 = load i32, i32* %k, align 4, !dbg !11639
  %cmp131 = icmp sle i32 %117, 16, !dbg !11639
  br i1 %cmp131, label %cond.false134, label %cond.true133, !dbg !11639

cond.true133:                                     ; preds = %cond.false130, %cond.true127
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 2176, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !11639
  br label %cond.end135, !dbg !11639

cond.false134:                                    ; preds = %cond.false130, %cond.true127
  br label %cond.end135, !dbg !11639

cond.end135:                                      ; preds = %cond.false134, %cond.true133
  %cond136 = phi i32 [ 0, %cond.true133 ], [ 0, %cond.false134 ], !dbg !11639
  %118 = load %struct.variable_def*, %struct.variable_def** %dst, align 8, !dbg !11640
  %n_var_parts137 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %118, i32 0, i32 2, !dbg !11642
  %119 = load i8, i8* %n_var_parts137, align 4, !dbg !11642
  %conv138 = sext i8 %119 to i32, !dbg !11640
  %120 = load i32, i32* %k, align 4, !dbg !11643
  %cmp139 = icmp ne i32 %conv138, %120, !dbg !11644
  br i1 %cmp139, label %land.lhs.true, label %if.end147, !dbg !11645

land.lhs.true:                                    ; preds = %cond.end135
  %121 = load %struct.variable_def*, %struct.variable_def** %dst, align 8, !dbg !11646
  %122 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set, align 8, !dbg !11647
  %vars141 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %122, i32 0, i32 2, !dbg !11648
  %123 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars141, align 8, !dbg !11648
  %call142 = call zeroext i8 @shared_var_p(%struct.variable_def* %121, %struct.shared_hash_def* %123), !dbg !11649
  %conv143 = zext i8 %call142 to i32, !dbg !11649
  %tobool144 = icmp ne i32 %conv143, 0, !dbg !11649
  br i1 %tobool144, label %if.then145, label %if.end147, !dbg !11650

if.then145:                                       ; preds = %land.lhs.true
  %124 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set, align 8, !dbg !11651
  %125 = load i8**, i8*** %dstp, align 8, !dbg !11653
  %126 = load %struct.variable_def*, %struct.variable_def** %dst, align 8, !dbg !11654
  %call146 = call i8** @unshare_variable(%struct.dataflow_set_def* %124, i8** %125, %struct.variable_def* %126, i32 0), !dbg !11655
  store i8** %call146, i8*** %dstp, align 8, !dbg !11656
  %127 = load i8**, i8*** %dstp, align 8, !dbg !11657
  %128 = load i8*, i8** %127, align 8, !dbg !11658
  %129 = bitcast i8* %128 to %struct.variable_def*, !dbg !11659
  store %struct.variable_def* %129, %struct.variable_def** %dst, align 8, !dbg !11660
  br label %if.end147, !dbg !11661

if.end147:                                        ; preds = %if.then145, %land.lhs.true, %cond.end135
  %130 = load %struct.variable_def*, %struct.variable_def** %src, align 8, !dbg !11662
  %n_var_parts148 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %130, i32 0, i32 2, !dbg !11663
  %131 = load i8, i8* %n_var_parts148, align 4, !dbg !11663
  %conv149 = sext i8 %131 to i32, !dbg !11662
  %sub150 = sub nsw i32 %conv149, 1, !dbg !11664
  store i32 %sub150, i32* %i, align 4, !dbg !11665
  %132 = load %struct.variable_def*, %struct.variable_def** %dst, align 8, !dbg !11666
  %n_var_parts151 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %132, i32 0, i32 2, !dbg !11667
  %133 = load i8, i8* %n_var_parts151, align 4, !dbg !11667
  %conv152 = sext i8 %133 to i32, !dbg !11666
  %sub153 = sub nsw i32 %conv152, 1, !dbg !11668
  store i32 %sub153, i32* %j, align 4, !dbg !11669
  %134 = load i32, i32* %k, align 4, !dbg !11670
  %conv154 = trunc i32 %134 to i8, !dbg !11670
  %135 = load %struct.variable_def*, %struct.variable_def** %dst, align 8, !dbg !11671
  %n_var_parts155 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %135, i32 0, i32 2, !dbg !11672
  store i8 %conv154, i8* %n_var_parts155, align 4, !dbg !11673
  %136 = load i32, i32* %k, align 4, !dbg !11674
  %dec = add nsw i32 %136, -1, !dbg !11674
  store i32 %dec, i32* %k, align 4, !dbg !11674
  br label %for.cond156, !dbg !11676

for.cond156:                                      ; preds = %for.inc712, %if.end147
  %137 = load i32, i32* %k, align 4, !dbg !11677
  %cmp157 = icmp sge i32 %137, 0, !dbg !11679
  br i1 %cmp157, label %for.body159, label %for.end714, !dbg !11680

for.body159:                                      ; preds = %for.cond156
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %node, metadata !11681, metadata !DIExpression()), !dbg !11683
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %node2, metadata !11684, metadata !DIExpression()), !dbg !11685
  %138 = load i32, i32* %i, align 4, !dbg !11686
  %cmp160 = icmp sge i32 %138, 0, !dbg !11688
  br i1 %cmp160, label %land.lhs.true162, label %if.else613, !dbg !11689

land.lhs.true162:                                 ; preds = %for.body159
  %139 = load i32, i32* %j, align 4, !dbg !11690
  %cmp163 = icmp sge i32 %139, 0, !dbg !11691
  br i1 %cmp163, label %land.lhs.true165, label %if.else613, !dbg !11692

land.lhs.true165:                                 ; preds = %land.lhs.true162
  %140 = load %struct.variable_def*, %struct.variable_def** %src, align 8, !dbg !11693
  %var_part166 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %140, i32 0, i32 5, !dbg !11694
  %141 = load i32, i32* %i, align 4, !dbg !11695
  %idxprom167 = sext i32 %141 to i64, !dbg !11693
  %arrayidx168 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part166, i64 0, i64 %idxprom167, !dbg !11693
  %offset169 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx168, i32 0, i32 2, !dbg !11696
  %142 = load i64, i64* %offset169, align 8, !dbg !11696
  %143 = load %struct.variable_def*, %struct.variable_def** %dst, align 8, !dbg !11697
  %var_part170 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %143, i32 0, i32 5, !dbg !11698
  %144 = load i32, i32* %j, align 4, !dbg !11699
  %idxprom171 = sext i32 %144 to i64, !dbg !11697
  %arrayidx172 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part170, i64 0, i64 %idxprom171, !dbg !11697
  %offset173 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx172, i32 0, i32 2, !dbg !11700
  %145 = load i64, i64* %offset173, align 8, !dbg !11700
  %cmp174 = icmp eq i64 %142, %145, !dbg !11701
  br i1 %cmp174, label %if.then176, label %if.else613, !dbg !11702

if.then176:                                       ; preds = %land.lhs.true165
  call void @llvm.dbg.declare(metadata i32* %dst_l, metadata !11703, metadata !DIExpression()), !dbg !11705
  call void @llvm.dbg.declare(metadata i32* %src_l, metadata !11706, metadata !DIExpression()), !dbg !11707
  call void @llvm.dbg.declare(metadata i32* %ii, metadata !11708, metadata !DIExpression()), !dbg !11709
  call void @llvm.dbg.declare(metadata i32* %jj, metadata !11710, metadata !DIExpression()), !dbg !11711
  call void @llvm.dbg.declare(metadata i32* %n, metadata !11712, metadata !DIExpression()), !dbg !11713
  call void @llvm.dbg.declare(metadata %struct.variable_union_info** %vui, metadata !11714, metadata !DIExpression()), !dbg !11715
  %146 = load %struct.variable_def*, %struct.variable_def** %dst, align 8, !dbg !11716
  %147 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set, align 8, !dbg !11718
  %vars177 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %147, i32 0, i32 2, !dbg !11719
  %148 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars177, align 8, !dbg !11719
  %call178 = call zeroext i8 @shared_var_p(%struct.variable_def* %146, %struct.shared_hash_def* %148), !dbg !11720
  %tobool179 = icmp ne i8 %call178, 0, !dbg !11720
  br i1 %tobool179, label %if.then180, label %if.end238, !dbg !11721

if.then180:                                       ; preds = %if.then176
  %149 = load %struct.variable_def*, %struct.variable_def** %src, align 8, !dbg !11722
  %var_part181 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %149, i32 0, i32 5, !dbg !11725
  %150 = load i32, i32* %i, align 4, !dbg !11726
  %idxprom182 = sext i32 %150 to i64, !dbg !11722
  %arrayidx183 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part181, i64 0, i64 %idxprom182, !dbg !11722
  %loc_chain184 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx183, i32 0, i32 0, !dbg !11727
  %151 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain184, align 8, !dbg !11727
  store %struct.location_chain_def* %151, %struct.location_chain_def** %node, align 8, !dbg !11728
  %152 = load %struct.variable_def*, %struct.variable_def** %dst, align 8, !dbg !11729
  %var_part185 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %152, i32 0, i32 5, !dbg !11730
  %153 = load i32, i32* %j, align 4, !dbg !11731
  %idxprom186 = sext i32 %153 to i64, !dbg !11729
  %arrayidx187 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part185, i64 0, i64 %idxprom186, !dbg !11729
  %loc_chain188 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx187, i32 0, i32 0, !dbg !11732
  %154 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain188, align 8, !dbg !11732
  store %struct.location_chain_def* %154, %struct.location_chain_def** %node2, align 8, !dbg !11733
  br label %for.cond189, !dbg !11734

for.cond189:                                      ; preds = %for.inc228, %if.then180
  %155 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !11735
  %tobool190 = icmp ne %struct.location_chain_def* %155, null, !dbg !11735
  br i1 %tobool190, label %land.rhs191, label %land.end193, !dbg !11737

land.rhs191:                                      ; preds = %for.cond189
  %156 = load %struct.location_chain_def*, %struct.location_chain_def** %node2, align 8, !dbg !11738
  %tobool192 = icmp ne %struct.location_chain_def* %156, null, !dbg !11737
  br label %land.end193

land.end193:                                      ; preds = %land.rhs191, %for.cond189
  %157 = phi i1 [ false, %for.cond189 ], [ %tobool192, %land.rhs191 ], !dbg !11739
  br i1 %157, label %for.body194, label %for.end231, !dbg !11740

for.body194:                                      ; preds = %land.end193
  %158 = load %struct.location_chain_def*, %struct.location_chain_def** %node2, align 8, !dbg !11741
  %loc195 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %158, i32 0, i32 1, !dbg !11741
  %159 = load %struct.rtx_def*, %struct.rtx_def** %loc195, align 8, !dbg !11741
  %160 = bitcast %struct.rtx_def* %159 to i32*, !dbg !11741
  %bf.load196 = load i32, i32* %160, align 8, !dbg !11741
  %bf.clear197 = and i32 %bf.load196, 65535, !dbg !11741
  %cmp198 = icmp eq i32 %bf.clear197, 37, !dbg !11741
  br i1 %cmp198, label %land.lhs.true200, label %lor.lhs.false213, !dbg !11744

land.lhs.true200:                                 ; preds = %for.body194
  %161 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !11745
  %loc201 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %161, i32 0, i32 1, !dbg !11745
  %162 = load %struct.rtx_def*, %struct.rtx_def** %loc201, align 8, !dbg !11745
  %163 = bitcast %struct.rtx_def* %162 to i32*, !dbg !11745
  %bf.load202 = load i32, i32* %163, align 8, !dbg !11745
  %bf.clear203 = and i32 %bf.load202, 65535, !dbg !11745
  %cmp204 = icmp eq i32 %bf.clear203, 37, !dbg !11745
  br i1 %cmp204, label %land.lhs.true206, label %lor.lhs.false213, !dbg !11746

land.lhs.true206:                                 ; preds = %land.lhs.true200
  %164 = load %struct.location_chain_def*, %struct.location_chain_def** %node2, align 8, !dbg !11747
  %loc207 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %164, i32 0, i32 1, !dbg !11747
  %165 = load %struct.rtx_def*, %struct.rtx_def** %loc207, align 8, !dbg !11747
  %call208 = call i32 @rhs_regno(%struct.rtx_def* %165), !dbg !11747
  %166 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !11748
  %loc209 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %166, i32 0, i32 1, !dbg !11748
  %167 = load %struct.rtx_def*, %struct.rtx_def** %loc209, align 8, !dbg !11748
  %call210 = call i32 @rhs_regno(%struct.rtx_def* %167), !dbg !11748
  %cmp211 = icmp eq i32 %call208, %call210, !dbg !11749
  br i1 %cmp211, label %if.end227, label %lor.lhs.false213, !dbg !11750

lor.lhs.false213:                                 ; preds = %land.lhs.true206, %land.lhs.true200, %for.body194
  %168 = load %struct.location_chain_def*, %struct.location_chain_def** %node2, align 8, !dbg !11751
  %loc214 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %168, i32 0, i32 1, !dbg !11752
  %169 = load %struct.rtx_def*, %struct.rtx_def** %loc214, align 8, !dbg !11752
  %170 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !11753
  %loc215 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %170, i32 0, i32 1, !dbg !11754
  %171 = load %struct.rtx_def*, %struct.rtx_def** %loc215, align 8, !dbg !11754
  %call216 = call i32 @rtx_equal_p(%struct.rtx_def* %169, %struct.rtx_def* %171), !dbg !11755
  %tobool217 = icmp ne i32 %call216, 0, !dbg !11755
  br i1 %tobool217, label %if.end227, label %if.then218, !dbg !11756

if.then218:                                       ; preds = %lor.lhs.false213
  %172 = load %struct.location_chain_def*, %struct.location_chain_def** %node2, align 8, !dbg !11757
  %init219 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %172, i32 0, i32 3, !dbg !11760
  %173 = load i32, i32* %init219, align 8, !dbg !11760
  %174 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !11761
  %init220 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %174, i32 0, i32 3, !dbg !11762
  %175 = load i32, i32* %init220, align 8, !dbg !11762
  %cmp221 = icmp ult i32 %173, %175, !dbg !11763
  br i1 %cmp221, label %if.then223, label %if.end226, !dbg !11764

if.then223:                                       ; preds = %if.then218
  %176 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !11765
  %init224 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %176, i32 0, i32 3, !dbg !11766
  %177 = load i32, i32* %init224, align 8, !dbg !11766
  %178 = load %struct.location_chain_def*, %struct.location_chain_def** %node2, align 8, !dbg !11767
  %init225 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %178, i32 0, i32 3, !dbg !11768
  store i32 %177, i32* %init225, align 8, !dbg !11769
  br label %if.end226, !dbg !11767

if.end226:                                        ; preds = %if.then223, %if.then218
  br label %for.end231, !dbg !11770

if.end227:                                        ; preds = %lor.lhs.false213, %land.lhs.true206
  br label %for.inc228, !dbg !11771

for.inc228:                                       ; preds = %if.end227
  %179 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !11772
  %next229 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %179, i32 0, i32 0, !dbg !11773
  %180 = load %struct.location_chain_def*, %struct.location_chain_def** %next229, align 8, !dbg !11773
  store %struct.location_chain_def* %180, %struct.location_chain_def** %node, align 8, !dbg !11774
  %181 = load %struct.location_chain_def*, %struct.location_chain_def** %node2, align 8, !dbg !11775
  %next230 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %181, i32 0, i32 0, !dbg !11776
  %182 = load %struct.location_chain_def*, %struct.location_chain_def** %next230, align 8, !dbg !11776
  store %struct.location_chain_def* %182, %struct.location_chain_def** %node2, align 8, !dbg !11777
  br label %for.cond189, !dbg !11778, !llvm.loop !11779

for.end231:                                       ; preds = %if.end226, %land.end193
  %183 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !11781
  %tobool232 = icmp ne %struct.location_chain_def* %183, null, !dbg !11781
  br i1 %tobool232, label %if.then235, label %lor.lhs.false233, !dbg !11783

lor.lhs.false233:                                 ; preds = %for.end231
  %184 = load %struct.location_chain_def*, %struct.location_chain_def** %node2, align 8, !dbg !11784
  %tobool234 = icmp ne %struct.location_chain_def* %184, null, !dbg !11784
  br i1 %tobool234, label %if.then235, label %if.end237, !dbg !11785

if.then235:                                       ; preds = %lor.lhs.false233, %for.end231
  %185 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set, align 8, !dbg !11786
  %186 = load i8**, i8*** %dstp, align 8, !dbg !11788
  %187 = load %struct.variable_def*, %struct.variable_def** %dst, align 8, !dbg !11789
  %call236 = call i8** @unshare_variable(%struct.dataflow_set_def* %185, i8** %186, %struct.variable_def* %187, i32 0), !dbg !11790
  store i8** %call236, i8*** %dstp, align 8, !dbg !11791
  %188 = load i8**, i8*** %dstp, align 8, !dbg !11792
  %189 = load i8*, i8** %188, align 8, !dbg !11793
  %190 = bitcast i8* %189 to %struct.variable_def*, !dbg !11794
  store %struct.variable_def* %190, %struct.variable_def** %dst, align 8, !dbg !11795
  br label %if.end237, !dbg !11796

if.end237:                                        ; preds = %if.then235, %lor.lhs.false233
  br label %if.end238, !dbg !11797

if.end238:                                        ; preds = %if.end237, %if.then176
  store i32 0, i32* %src_l, align 4, !dbg !11798
  %191 = load %struct.variable_def*, %struct.variable_def** %src, align 8, !dbg !11799
  %var_part239 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %191, i32 0, i32 5, !dbg !11801
  %192 = load i32, i32* %i, align 4, !dbg !11802
  %idxprom240 = sext i32 %192 to i64, !dbg !11799
  %arrayidx241 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part239, i64 0, i64 %idxprom240, !dbg !11799
  %loc_chain242 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx241, i32 0, i32 0, !dbg !11803
  %193 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain242, align 8, !dbg !11803
  store %struct.location_chain_def* %193, %struct.location_chain_def** %node, align 8, !dbg !11804
  br label %for.cond243, !dbg !11805

for.cond243:                                      ; preds = %for.inc247, %if.end238
  %194 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !11806
  %tobool244 = icmp ne %struct.location_chain_def* %194, null, !dbg !11808
  br i1 %tobool244, label %for.body245, label %for.end249, !dbg !11808

for.body245:                                      ; preds = %for.cond243
  %195 = load i32, i32* %src_l, align 4, !dbg !11809
  %inc246 = add nsw i32 %195, 1, !dbg !11809
  store i32 %inc246, i32* %src_l, align 4, !dbg !11809
  br label %for.inc247, !dbg !11810

for.inc247:                                       ; preds = %for.body245
  %196 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !11811
  %next248 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %196, i32 0, i32 0, !dbg !11812
  %197 = load %struct.location_chain_def*, %struct.location_chain_def** %next248, align 8, !dbg !11812
  store %struct.location_chain_def* %197, %struct.location_chain_def** %node, align 8, !dbg !11813
  br label %for.cond243, !dbg !11814, !llvm.loop !11815

for.end249:                                       ; preds = %for.cond243
  store i32 0, i32* %dst_l, align 4, !dbg !11817
  %198 = load %struct.variable_def*, %struct.variable_def** %dst, align 8, !dbg !11818
  %var_part250 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %198, i32 0, i32 5, !dbg !11820
  %199 = load i32, i32* %j, align 4, !dbg !11821
  %idxprom251 = sext i32 %199 to i64, !dbg !11818
  %arrayidx252 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part250, i64 0, i64 %idxprom251, !dbg !11818
  %loc_chain253 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx252, i32 0, i32 0, !dbg !11822
  %200 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain253, align 8, !dbg !11822
  store %struct.location_chain_def* %200, %struct.location_chain_def** %node, align 8, !dbg !11823
  br label %for.cond254, !dbg !11824

for.cond254:                                      ; preds = %for.inc258, %for.end249
  %201 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !11825
  %tobool255 = icmp ne %struct.location_chain_def* %201, null, !dbg !11827
  br i1 %tobool255, label %for.body256, label %for.end260, !dbg !11827

for.body256:                                      ; preds = %for.cond254
  %202 = load i32, i32* %dst_l, align 4, !dbg !11828
  %inc257 = add nsw i32 %202, 1, !dbg !11828
  store i32 %inc257, i32* %dst_l, align 4, !dbg !11828
  br label %for.inc258, !dbg !11829

for.inc258:                                       ; preds = %for.body256
  %203 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !11830
  %next259 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %203, i32 0, i32 0, !dbg !11831
  %204 = load %struct.location_chain_def*, %struct.location_chain_def** %next259, align 8, !dbg !11831
  store %struct.location_chain_def* %204, %struct.location_chain_def** %node, align 8, !dbg !11832
  br label %for.cond254, !dbg !11833, !llvm.loop !11834

for.end260:                                       ; preds = %for.cond254
  %205 = load i32, i32* %dst_l, align 4, !dbg !11836
  %cmp261 = icmp eq i32 %205, 1, !dbg !11838
  br i1 %cmp261, label %if.then263, label %if.else336, !dbg !11839

if.then263:                                       ; preds = %for.end260
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %dstnode, metadata !11840, metadata !DIExpression()), !dbg !11842
  %206 = load %struct.variable_def*, %struct.variable_def** %dst, align 8, !dbg !11843
  %var_part264 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %206, i32 0, i32 5, !dbg !11844
  %207 = load i32, i32* %j, align 4, !dbg !11845
  %idxprom265 = sext i32 %207 to i64, !dbg !11843
  %arrayidx266 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part264, i64 0, i64 %idxprom265, !dbg !11843
  %loc_chain267 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx266, i32 0, i32 0, !dbg !11846
  %208 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain267, align 8, !dbg !11846
  store %struct.location_chain_def* %208, %struct.location_chain_def** %dstnode, align 8, !dbg !11842
  %209 = load %struct.location_chain_def*, %struct.location_chain_def** %dstnode, align 8, !dbg !11847
  %210 = load %struct.variable_def*, %struct.variable_def** %dst, align 8, !dbg !11848
  %var_part268 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %210, i32 0, i32 5, !dbg !11849
  %211 = load i32, i32* %k, align 4, !dbg !11850
  %idxprom269 = sext i32 %211 to i64, !dbg !11848
  %arrayidx270 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part268, i64 0, i64 %idxprom269, !dbg !11848
  %loc_chain271 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx270, i32 0, i32 0, !dbg !11851
  store %struct.location_chain_def* %209, %struct.location_chain_def** %loc_chain271, align 8, !dbg !11852
  %212 = load %struct.variable_def*, %struct.variable_def** %dst, align 8, !dbg !11853
  %var_part272 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %212, i32 0, i32 5, !dbg !11854
  %213 = load i32, i32* %j, align 4, !dbg !11855
  %idxprom273 = sext i32 %213 to i64, !dbg !11853
  %arrayidx274 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part272, i64 0, i64 %idxprom273, !dbg !11853
  %offset275 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx274, i32 0, i32 2, !dbg !11856
  %214 = load i64, i64* %offset275, align 8, !dbg !11856
  %215 = load %struct.variable_def*, %struct.variable_def** %dst, align 8, !dbg !11857
  %var_part276 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %215, i32 0, i32 5, !dbg !11858
  %216 = load i32, i32* %k, align 4, !dbg !11859
  %idxprom277 = sext i32 %216 to i64, !dbg !11857
  %arrayidx278 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part276, i64 0, i64 %idxprom277, !dbg !11857
  %offset279 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx278, i32 0, i32 2, !dbg !11860
  store i64 %214, i64* %offset279, align 8, !dbg !11861
  %217 = load %struct.location_chain_def*, %struct.location_chain_def** %dstnode, align 8, !dbg !11862
  store %struct.location_chain_def* %217, %struct.location_chain_def** %node2, align 8, !dbg !11863
  %218 = load %struct.variable_def*, %struct.variable_def** %src, align 8, !dbg !11864
  %var_part280 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %218, i32 0, i32 5, !dbg !11866
  %219 = load i32, i32* %i, align 4, !dbg !11867
  %idxprom281 = sext i32 %219 to i64, !dbg !11864
  %arrayidx282 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part280, i64 0, i64 %idxprom281, !dbg !11864
  %loc_chain283 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx282, i32 0, i32 0, !dbg !11868
  %220 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain283, align 8, !dbg !11868
  store %struct.location_chain_def* %220, %struct.location_chain_def** %node, align 8, !dbg !11869
  br label %for.cond284, !dbg !11870

for.cond284:                                      ; preds = %for.inc332, %if.then263
  %221 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !11871
  %tobool285 = icmp ne %struct.location_chain_def* %221, null, !dbg !11873
  br i1 %tobool285, label %for.body286, label %for.end334, !dbg !11873

for.body286:                                      ; preds = %for.cond284
  %222 = load %struct.location_chain_def*, %struct.location_chain_def** %dstnode, align 8, !dbg !11874
  %loc287 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %222, i32 0, i32 1, !dbg !11874
  %223 = load %struct.rtx_def*, %struct.rtx_def** %loc287, align 8, !dbg !11874
  %224 = bitcast %struct.rtx_def* %223 to i32*, !dbg !11874
  %bf.load288 = load i32, i32* %224, align 8, !dbg !11874
  %bf.clear289 = and i32 %bf.load288, 65535, !dbg !11874
  %cmp290 = icmp eq i32 %bf.clear289, 37, !dbg !11874
  br i1 %cmp290, label %land.lhs.true292, label %lor.lhs.false305, !dbg !11876

land.lhs.true292:                                 ; preds = %for.body286
  %225 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !11877
  %loc293 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %225, i32 0, i32 1, !dbg !11877
  %226 = load %struct.rtx_def*, %struct.rtx_def** %loc293, align 8, !dbg !11877
  %227 = bitcast %struct.rtx_def* %226 to i32*, !dbg !11877
  %bf.load294 = load i32, i32* %227, align 8, !dbg !11877
  %bf.clear295 = and i32 %bf.load294, 65535, !dbg !11877
  %cmp296 = icmp eq i32 %bf.clear295, 37, !dbg !11877
  br i1 %cmp296, label %land.lhs.true298, label %lor.lhs.false305, !dbg !11878

land.lhs.true298:                                 ; preds = %land.lhs.true292
  %228 = load %struct.location_chain_def*, %struct.location_chain_def** %dstnode, align 8, !dbg !11879
  %loc299 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %228, i32 0, i32 1, !dbg !11879
  %229 = load %struct.rtx_def*, %struct.rtx_def** %loc299, align 8, !dbg !11879
  %call300 = call i32 @rhs_regno(%struct.rtx_def* %229), !dbg !11879
  %230 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !11880
  %loc301 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %230, i32 0, i32 1, !dbg !11880
  %231 = load %struct.rtx_def*, %struct.rtx_def** %loc301, align 8, !dbg !11880
  %call302 = call i32 @rhs_regno(%struct.rtx_def* %231), !dbg !11880
  %cmp303 = icmp eq i32 %call300, %call302, !dbg !11881
  br i1 %cmp303, label %if.end331, label %lor.lhs.false305, !dbg !11882

lor.lhs.false305:                                 ; preds = %land.lhs.true298, %land.lhs.true292, %for.body286
  %232 = load %struct.location_chain_def*, %struct.location_chain_def** %dstnode, align 8, !dbg !11883
  %loc306 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %232, i32 0, i32 1, !dbg !11884
  %233 = load %struct.rtx_def*, %struct.rtx_def** %loc306, align 8, !dbg !11884
  %234 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !11885
  %loc307 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %234, i32 0, i32 1, !dbg !11886
  %235 = load %struct.rtx_def*, %struct.rtx_def** %loc307, align 8, !dbg !11886
  %call308 = call i32 @rtx_equal_p(%struct.rtx_def* %233, %struct.rtx_def* %235), !dbg !11887
  %tobool309 = icmp ne i32 %call308, 0, !dbg !11887
  br i1 %tobool309, label %if.end331, label %if.then310, !dbg !11888

if.then310:                                       ; preds = %lor.lhs.false305
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %new_node, metadata !11889, metadata !DIExpression()), !dbg !11891
  %236 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @loc_chain_pool, align 8, !dbg !11892
  %call311 = call i8* @pool_alloc(%struct.alloc_pool_def* %236), !dbg !11893
  %237 = bitcast i8* %call311 to %struct.location_chain_def*, !dbg !11894
  store %struct.location_chain_def* %237, %struct.location_chain_def** %new_node, align 8, !dbg !11895
  %238 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !11896
  %loc312 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %238, i32 0, i32 1, !dbg !11897
  %239 = load %struct.rtx_def*, %struct.rtx_def** %loc312, align 8, !dbg !11897
  %240 = load %struct.location_chain_def*, %struct.location_chain_def** %new_node, align 8, !dbg !11898
  %loc313 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %240, i32 0, i32 1, !dbg !11899
  store %struct.rtx_def* %239, %struct.rtx_def** %loc313, align 8, !dbg !11900
  %241 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !11901
  %init314 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %241, i32 0, i32 3, !dbg !11902
  %242 = load i32, i32* %init314, align 8, !dbg !11902
  %243 = load %struct.location_chain_def*, %struct.location_chain_def** %new_node, align 8, !dbg !11903
  %init315 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %243, i32 0, i32 3, !dbg !11904
  store i32 %242, i32* %init315, align 8, !dbg !11905
  %244 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !11906
  %set_src316 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %244, i32 0, i32 2, !dbg !11908
  %245 = load %struct.rtx_def*, %struct.rtx_def** %set_src316, align 8, !dbg !11908
  %tobool317 = icmp ne %struct.rtx_def* %245, null, !dbg !11906
  br i1 %tobool317, label %lor.lhs.false318, label %if.then324, !dbg !11909

lor.lhs.false318:                                 ; preds = %if.then310
  %246 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !11910
  %set_src319 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %246, i32 0, i32 2, !dbg !11910
  %247 = load %struct.rtx_def*, %struct.rtx_def** %set_src319, align 8, !dbg !11910
  %248 = bitcast %struct.rtx_def* %247 to i32*, !dbg !11910
  %bf.load320 = load i32, i32* %248, align 8, !dbg !11910
  %bf.clear321 = and i32 %bf.load320, 65535, !dbg !11910
  %cmp322 = icmp eq i32 %bf.clear321, 43, !dbg !11910
  br i1 %cmp322, label %if.then324, label %if.else326, !dbg !11911

if.then324:                                       ; preds = %lor.lhs.false318, %if.then310
  %249 = load %struct.location_chain_def*, %struct.location_chain_def** %new_node, align 8, !dbg !11912
  %set_src325 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %249, i32 0, i32 2, !dbg !11913
  store %struct.rtx_def* null, %struct.rtx_def** %set_src325, align 8, !dbg !11914
  br label %if.end329, !dbg !11912

if.else326:                                       ; preds = %lor.lhs.false318
  %250 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !11915
  %set_src327 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %250, i32 0, i32 2, !dbg !11916
  %251 = load %struct.rtx_def*, %struct.rtx_def** %set_src327, align 8, !dbg !11916
  %252 = load %struct.location_chain_def*, %struct.location_chain_def** %new_node, align 8, !dbg !11917
  %set_src328 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %252, i32 0, i32 2, !dbg !11918
  store %struct.rtx_def* %251, %struct.rtx_def** %set_src328, align 8, !dbg !11919
  br label %if.end329

if.end329:                                        ; preds = %if.else326, %if.then324
  %253 = load %struct.location_chain_def*, %struct.location_chain_def** %new_node, align 8, !dbg !11920
  %254 = load %struct.location_chain_def*, %struct.location_chain_def** %node2, align 8, !dbg !11921
  %next330 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %254, i32 0, i32 0, !dbg !11922
  store %struct.location_chain_def* %253, %struct.location_chain_def** %next330, align 8, !dbg !11923
  %255 = load %struct.location_chain_def*, %struct.location_chain_def** %new_node, align 8, !dbg !11924
  store %struct.location_chain_def* %255, %struct.location_chain_def** %node2, align 8, !dbg !11925
  br label %if.end331, !dbg !11926

if.end331:                                        ; preds = %if.end329, %lor.lhs.false305, %land.lhs.true298
  br label %for.inc332, !dbg !11927

for.inc332:                                       ; preds = %if.end331
  %256 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !11928
  %next333 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %256, i32 0, i32 0, !dbg !11929
  %257 = load %struct.location_chain_def*, %struct.location_chain_def** %next333, align 8, !dbg !11929
  store %struct.location_chain_def* %257, %struct.location_chain_def** %node, align 8, !dbg !11930
  br label %for.cond284, !dbg !11931, !llvm.loop !11932

for.end334:                                       ; preds = %for.cond284
  %258 = load %struct.location_chain_def*, %struct.location_chain_def** %node2, align 8, !dbg !11934
  %next335 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %258, i32 0, i32 0, !dbg !11935
  store %struct.location_chain_def* null, %struct.location_chain_def** %next335, align 8, !dbg !11936
  br label %if.end610, !dbg !11937

if.else336:                                       ; preds = %for.end260
  %259 = load i32, i32* %src_l, align 4, !dbg !11938
  %260 = load i32, i32* %dst_l, align 4, !dbg !11941
  %add337 = add nsw i32 %259, %260, !dbg !11942
  %261 = load i32, i32* @vui_allocated, align 4, !dbg !11943
  %cmp338 = icmp sgt i32 %add337, %261, !dbg !11944
  br i1 %cmp338, label %if.then340, label %if.end353, !dbg !11945

if.then340:                                       ; preds = %if.else336
  %262 = load i32, i32* @vui_allocated, align 4, !dbg !11946
  %mul = mul nsw i32 %262, 2, !dbg !11946
  %263 = load i32, i32* %src_l, align 4, !dbg !11946
  %264 = load i32, i32* %dst_l, align 4, !dbg !11946
  %add341 = add nsw i32 %263, %264, !dbg !11946
  %cmp342 = icmp sgt i32 %mul, %add341, !dbg !11946
  br i1 %cmp342, label %cond.true344, label %cond.false346, !dbg !11946

cond.true344:                                     ; preds = %if.then340
  %265 = load i32, i32* @vui_allocated, align 4, !dbg !11946
  %mul345 = mul nsw i32 %265, 2, !dbg !11946
  br label %cond.end348, !dbg !11946

cond.false346:                                    ; preds = %if.then340
  %266 = load i32, i32* %src_l, align 4, !dbg !11946
  %267 = load i32, i32* %dst_l, align 4, !dbg !11946
  %add347 = add nsw i32 %266, %267, !dbg !11946
  br label %cond.end348, !dbg !11946

cond.end348:                                      ; preds = %cond.false346, %cond.true344
  %cond349 = phi i32 [ %mul345, %cond.true344 ], [ %add347, %cond.false346 ], !dbg !11946
  store i32 %cond349, i32* @vui_allocated, align 4, !dbg !11948
  %268 = load %struct.variable_union_info*, %struct.variable_union_info** @vui_vec, align 8, !dbg !11949
  %269 = bitcast %struct.variable_union_info* %268 to i8*, !dbg !11949
  %270 = load i32, i32* @vui_allocated, align 4, !dbg !11949
  %conv350 = sext i32 %270 to i64, !dbg !11949
  %mul351 = mul i64 16, %conv350, !dbg !11949
  %call352 = call i8* @xrealloc(i8* %269, i64 %mul351), !dbg !11949
  %271 = bitcast i8* %call352 to %struct.variable_union_info*, !dbg !11949
  store %struct.variable_union_info* %271, %struct.variable_union_info** @vui_vec, align 8, !dbg !11950
  br label %if.end353, !dbg !11951

if.end353:                                        ; preds = %cond.end348, %if.else336
  %272 = load %struct.variable_union_info*, %struct.variable_union_info** @vui_vec, align 8, !dbg !11952
  store %struct.variable_union_info* %272, %struct.variable_union_info** %vui, align 8, !dbg !11953
  %273 = load %struct.variable_def*, %struct.variable_def** %dst, align 8, !dbg !11954
  %var_part354 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %273, i32 0, i32 5, !dbg !11956
  %274 = load i32, i32* %j, align 4, !dbg !11957
  %idxprom355 = sext i32 %274 to i64, !dbg !11954
  %arrayidx356 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part354, i64 0, i64 %idxprom355, !dbg !11954
  %loc_chain357 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx356, i32 0, i32 0, !dbg !11958
  %275 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain357, align 8, !dbg !11958
  store %struct.location_chain_def* %275, %struct.location_chain_def** %node, align 8, !dbg !11959
  store i32 0, i32* %jj, align 4, !dbg !11960
  br label %for.cond358, !dbg !11961

for.cond358:                                      ; preds = %for.inc369, %if.end353
  %276 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !11962
  %tobool359 = icmp ne %struct.location_chain_def* %276, null, !dbg !11964
  br i1 %tobool359, label %for.body360, label %for.end372, !dbg !11964

for.body360:                                      ; preds = %for.cond358
  %277 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !11965
  %278 = load %struct.variable_union_info*, %struct.variable_union_info** %vui, align 8, !dbg !11967
  %279 = load i32, i32* %jj, align 4, !dbg !11968
  %idxprom361 = sext i32 %279 to i64, !dbg !11967
  %arrayidx362 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %278, i64 %idxprom361, !dbg !11967
  %lc = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %arrayidx362, i32 0, i32 0, !dbg !11969
  store %struct.location_chain_def* %277, %struct.location_chain_def** %lc, align 8, !dbg !11970
  %280 = load i32, i32* %jj, align 4, !dbg !11971
  %281 = load %struct.variable_union_info*, %struct.variable_union_info** %vui, align 8, !dbg !11972
  %282 = load i32, i32* %jj, align 4, !dbg !11973
  %idxprom363 = sext i32 %282 to i64, !dbg !11972
  %arrayidx364 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %281, i64 %idxprom363, !dbg !11972
  %pos_dst = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %arrayidx364, i32 0, i32 2, !dbg !11974
  store i32 %280, i32* %pos_dst, align 4, !dbg !11975
  %283 = load i32, i32* %jj, align 4, !dbg !11976
  %284 = load i32, i32* %src_l, align 4, !dbg !11977
  %add365 = add nsw i32 %283, %284, !dbg !11978
  %285 = load i32, i32* %dst_l, align 4, !dbg !11979
  %add366 = add nsw i32 %add365, %285, !dbg !11980
  %286 = load %struct.variable_union_info*, %struct.variable_union_info** %vui, align 8, !dbg !11981
  %287 = load i32, i32* %jj, align 4, !dbg !11982
  %idxprom367 = sext i32 %287 to i64, !dbg !11981
  %arrayidx368 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %286, i64 %idxprom367, !dbg !11981
  %pos = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %arrayidx368, i32 0, i32 1, !dbg !11983
  store i32 %add366, i32* %pos, align 8, !dbg !11984
  br label %for.inc369, !dbg !11985

for.inc369:                                       ; preds = %for.body360
  %288 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !11986
  %next370 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %288, i32 0, i32 0, !dbg !11987
  %289 = load %struct.location_chain_def*, %struct.location_chain_def** %next370, align 8, !dbg !11987
  store %struct.location_chain_def* %289, %struct.location_chain_def** %node, align 8, !dbg !11988
  %290 = load i32, i32* %jj, align 4, !dbg !11989
  %inc371 = add nsw i32 %290, 1, !dbg !11989
  store i32 %inc371, i32* %jj, align 4, !dbg !11989
  br label %for.cond358, !dbg !11990, !llvm.loop !11991

for.end372:                                       ; preds = %for.cond358
  %291 = load i32, i32* %dst_l, align 4, !dbg !11993
  store i32 %291, i32* %n, align 4, !dbg !11994
  %292 = load %struct.variable_def*, %struct.variable_def** %src, align 8, !dbg !11995
  %var_part373 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %292, i32 0, i32 5, !dbg !11997
  %293 = load i32, i32* %i, align 4, !dbg !11998
  %idxprom374 = sext i32 %293 to i64, !dbg !11995
  %arrayidx375 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part373, i64 0, i64 %idxprom374, !dbg !11995
  %loc_chain376 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx375, i32 0, i32 0, !dbg !11999
  %294 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain376, align 8, !dbg !11999
  store %struct.location_chain_def* %294, %struct.location_chain_def** %node, align 8, !dbg !12000
  store i32 0, i32* %ii, align 4, !dbg !12001
  br label %for.cond377, !dbg !12002

for.cond377:                                      ; preds = %for.inc462, %for.end372
  %295 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !12003
  %tobool378 = icmp ne %struct.location_chain_def* %295, null, !dbg !12005
  br i1 %tobool378, label %for.body379, label %for.end465, !dbg !12005

for.body379:                                      ; preds = %for.cond377
  store i32 0, i32* %jj, align 4, !dbg !12006
  br label %for.cond380, !dbg !12009

for.cond380:                                      ; preds = %for.inc422, %for.body379
  %296 = load i32, i32* %jj, align 4, !dbg !12010
  %297 = load i32, i32* %dst_l, align 4, !dbg !12012
  %cmp381 = icmp slt i32 %296, %297, !dbg !12013
  br i1 %cmp381, label %for.body383, label %for.end424, !dbg !12014

for.body383:                                      ; preds = %for.cond380
  %298 = load %struct.variable_union_info*, %struct.variable_union_info** %vui, align 8, !dbg !12015
  %299 = load i32, i32* %jj, align 4, !dbg !12015
  %idxprom384 = sext i32 %299 to i64, !dbg !12015
  %arrayidx385 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %298, i64 %idxprom384, !dbg !12015
  %lc386 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %arrayidx385, i32 0, i32 0, !dbg !12015
  %300 = load %struct.location_chain_def*, %struct.location_chain_def** %lc386, align 8, !dbg !12015
  %loc387 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %300, i32 0, i32 1, !dbg !12015
  %301 = load %struct.rtx_def*, %struct.rtx_def** %loc387, align 8, !dbg !12015
  %302 = bitcast %struct.rtx_def* %301 to i32*, !dbg !12015
  %bf.load388 = load i32, i32* %302, align 8, !dbg !12015
  %bf.clear389 = and i32 %bf.load388, 65535, !dbg !12015
  %cmp390 = icmp eq i32 %bf.clear389, 37, !dbg !12015
  br i1 %cmp390, label %land.lhs.true392, label %lor.lhs.false408, !dbg !12018

land.lhs.true392:                                 ; preds = %for.body383
  %303 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !12019
  %loc393 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %303, i32 0, i32 1, !dbg !12019
  %304 = load %struct.rtx_def*, %struct.rtx_def** %loc393, align 8, !dbg !12019
  %305 = bitcast %struct.rtx_def* %304 to i32*, !dbg !12019
  %bf.load394 = load i32, i32* %305, align 8, !dbg !12019
  %bf.clear395 = and i32 %bf.load394, 65535, !dbg !12019
  %cmp396 = icmp eq i32 %bf.clear395, 37, !dbg !12019
  br i1 %cmp396, label %land.lhs.true398, label %lor.lhs.false408, !dbg !12020

land.lhs.true398:                                 ; preds = %land.lhs.true392
  %306 = load %struct.variable_union_info*, %struct.variable_union_info** %vui, align 8, !dbg !12021
  %307 = load i32, i32* %jj, align 4, !dbg !12021
  %idxprom399 = sext i32 %307 to i64, !dbg !12021
  %arrayidx400 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %306, i64 %idxprom399, !dbg !12021
  %lc401 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %arrayidx400, i32 0, i32 0, !dbg !12021
  %308 = load %struct.location_chain_def*, %struct.location_chain_def** %lc401, align 8, !dbg !12021
  %loc402 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %308, i32 0, i32 1, !dbg !12021
  %309 = load %struct.rtx_def*, %struct.rtx_def** %loc402, align 8, !dbg !12021
  %call403 = call i32 @rhs_regno(%struct.rtx_def* %309), !dbg !12021
  %310 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !12022
  %loc404 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %310, i32 0, i32 1, !dbg !12022
  %311 = load %struct.rtx_def*, %struct.rtx_def** %loc404, align 8, !dbg !12022
  %call405 = call i32 @rhs_regno(%struct.rtx_def* %311), !dbg !12022
  %cmp406 = icmp eq i32 %call403, %call405, !dbg !12023
  br i1 %cmp406, label %if.then416, label %lor.lhs.false408, !dbg !12024

lor.lhs.false408:                                 ; preds = %land.lhs.true398, %land.lhs.true392, %for.body383
  %312 = load %struct.variable_union_info*, %struct.variable_union_info** %vui, align 8, !dbg !12025
  %313 = load i32, i32* %jj, align 4, !dbg !12026
  %idxprom409 = sext i32 %313 to i64, !dbg !12025
  %arrayidx410 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %312, i64 %idxprom409, !dbg !12025
  %lc411 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %arrayidx410, i32 0, i32 0, !dbg !12027
  %314 = load %struct.location_chain_def*, %struct.location_chain_def** %lc411, align 8, !dbg !12027
  %loc412 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %314, i32 0, i32 1, !dbg !12028
  %315 = load %struct.rtx_def*, %struct.rtx_def** %loc412, align 8, !dbg !12028
  %316 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !12029
  %loc413 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %316, i32 0, i32 1, !dbg !12030
  %317 = load %struct.rtx_def*, %struct.rtx_def** %loc413, align 8, !dbg !12030
  %call414 = call i32 @rtx_equal_p(%struct.rtx_def* %315, %struct.rtx_def* %317), !dbg !12031
  %tobool415 = icmp ne i32 %call414, 0, !dbg !12031
  br i1 %tobool415, label %if.then416, label %if.end421, !dbg !12032

if.then416:                                       ; preds = %lor.lhs.false408, %land.lhs.true398
  %318 = load i32, i32* %jj, align 4, !dbg !12033
  %319 = load i32, i32* %ii, align 4, !dbg !12035
  %add417 = add nsw i32 %318, %319, !dbg !12036
  %320 = load %struct.variable_union_info*, %struct.variable_union_info** %vui, align 8, !dbg !12037
  %321 = load i32, i32* %jj, align 4, !dbg !12038
  %idxprom418 = sext i32 %321 to i64, !dbg !12037
  %arrayidx419 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %320, i64 %idxprom418, !dbg !12037
  %pos420 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %arrayidx419, i32 0, i32 1, !dbg !12039
  store i32 %add417, i32* %pos420, align 8, !dbg !12040
  br label %for.end424, !dbg !12041

if.end421:                                        ; preds = %lor.lhs.false408
  br label %for.inc422, !dbg !12042

for.inc422:                                       ; preds = %if.end421
  %322 = load i32, i32* %jj, align 4, !dbg !12043
  %inc423 = add nsw i32 %322, 1, !dbg !12043
  store i32 %inc423, i32* %jj, align 4, !dbg !12043
  br label %for.cond380, !dbg !12044, !llvm.loop !12045

for.end424:                                       ; preds = %if.then416, %for.cond380
  %323 = load i32, i32* %jj, align 4, !dbg !12047
  %324 = load i32, i32* %dst_l, align 4, !dbg !12049
  %cmp425 = icmp sge i32 %323, %324, !dbg !12050
  br i1 %cmp425, label %if.then427, label %if.end461, !dbg !12051

if.then427:                                       ; preds = %for.end424
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %new_node428, metadata !12052, metadata !DIExpression()), !dbg !12054
  %325 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @loc_chain_pool, align 8, !dbg !12055
  %call429 = call i8* @pool_alloc(%struct.alloc_pool_def* %325), !dbg !12056
  %326 = bitcast i8* %call429 to %struct.location_chain_def*, !dbg !12057
  store %struct.location_chain_def* %326, %struct.location_chain_def** %new_node428, align 8, !dbg !12058
  %327 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !12059
  %loc430 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %327, i32 0, i32 1, !dbg !12060
  %328 = load %struct.rtx_def*, %struct.rtx_def** %loc430, align 8, !dbg !12060
  %329 = load %struct.location_chain_def*, %struct.location_chain_def** %new_node428, align 8, !dbg !12061
  %loc431 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %329, i32 0, i32 1, !dbg !12062
  store %struct.rtx_def* %328, %struct.rtx_def** %loc431, align 8, !dbg !12063
  %330 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !12064
  %init432 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %330, i32 0, i32 3, !dbg !12065
  %331 = load i32, i32* %init432, align 8, !dbg !12065
  %332 = load %struct.location_chain_def*, %struct.location_chain_def** %new_node428, align 8, !dbg !12066
  %init433 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %332, i32 0, i32 3, !dbg !12067
  store i32 %331, i32* %init433, align 8, !dbg !12068
  %333 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !12069
  %set_src434 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %333, i32 0, i32 2, !dbg !12071
  %334 = load %struct.rtx_def*, %struct.rtx_def** %set_src434, align 8, !dbg !12071
  %tobool435 = icmp ne %struct.rtx_def* %334, null, !dbg !12069
  br i1 %tobool435, label %lor.lhs.false436, label %if.then442, !dbg !12072

lor.lhs.false436:                                 ; preds = %if.then427
  %335 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !12073
  %set_src437 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %335, i32 0, i32 2, !dbg !12073
  %336 = load %struct.rtx_def*, %struct.rtx_def** %set_src437, align 8, !dbg !12073
  %337 = bitcast %struct.rtx_def* %336 to i32*, !dbg !12073
  %bf.load438 = load i32, i32* %337, align 8, !dbg !12073
  %bf.clear439 = and i32 %bf.load438, 65535, !dbg !12073
  %cmp440 = icmp eq i32 %bf.clear439, 43, !dbg !12073
  br i1 %cmp440, label %if.then442, label %if.else444, !dbg !12074

if.then442:                                       ; preds = %lor.lhs.false436, %if.then427
  %338 = load %struct.location_chain_def*, %struct.location_chain_def** %new_node428, align 8, !dbg !12075
  %set_src443 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %338, i32 0, i32 2, !dbg !12076
  store %struct.rtx_def* null, %struct.rtx_def** %set_src443, align 8, !dbg !12077
  br label %if.end447, !dbg !12075

if.else444:                                       ; preds = %lor.lhs.false436
  %339 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !12078
  %set_src445 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %339, i32 0, i32 2, !dbg !12079
  %340 = load %struct.rtx_def*, %struct.rtx_def** %set_src445, align 8, !dbg !12079
  %341 = load %struct.location_chain_def*, %struct.location_chain_def** %new_node428, align 8, !dbg !12080
  %set_src446 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %341, i32 0, i32 2, !dbg !12081
  store %struct.rtx_def* %340, %struct.rtx_def** %set_src446, align 8, !dbg !12082
  br label %if.end447

if.end447:                                        ; preds = %if.else444, %if.then442
  %342 = load %struct.location_chain_def*, %struct.location_chain_def** %new_node428, align 8, !dbg !12083
  %343 = load %struct.variable_union_info*, %struct.variable_union_info** %vui, align 8, !dbg !12084
  %344 = load i32, i32* %n, align 4, !dbg !12085
  %idxprom448 = sext i32 %344 to i64, !dbg !12084
  %arrayidx449 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %343, i64 %idxprom448, !dbg !12084
  %lc450 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %arrayidx449, i32 0, i32 0, !dbg !12086
  store %struct.location_chain_def* %342, %struct.location_chain_def** %lc450, align 8, !dbg !12087
  %345 = load i32, i32* %src_l, align 4, !dbg !12088
  %346 = load i32, i32* %dst_l, align 4, !dbg !12089
  %add451 = add nsw i32 %345, %346, !dbg !12090
  %347 = load %struct.variable_union_info*, %struct.variable_union_info** %vui, align 8, !dbg !12091
  %348 = load i32, i32* %n, align 4, !dbg !12092
  %idxprom452 = sext i32 %348 to i64, !dbg !12091
  %arrayidx453 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %347, i64 %idxprom452, !dbg !12091
  %pos_dst454 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %arrayidx453, i32 0, i32 2, !dbg !12093
  store i32 %add451, i32* %pos_dst454, align 4, !dbg !12094
  %349 = load i32, i32* %ii, align 4, !dbg !12095
  %350 = load i32, i32* %src_l, align 4, !dbg !12096
  %add455 = add nsw i32 %349, %350, !dbg !12097
  %351 = load i32, i32* %dst_l, align 4, !dbg !12098
  %add456 = add nsw i32 %add455, %351, !dbg !12099
  %352 = load %struct.variable_union_info*, %struct.variable_union_info** %vui, align 8, !dbg !12100
  %353 = load i32, i32* %n, align 4, !dbg !12101
  %idxprom457 = sext i32 %353 to i64, !dbg !12100
  %arrayidx458 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %352, i64 %idxprom457, !dbg !12100
  %pos459 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %arrayidx458, i32 0, i32 1, !dbg !12102
  store i32 %add456, i32* %pos459, align 8, !dbg !12103
  %354 = load i32, i32* %n, align 4, !dbg !12104
  %inc460 = add nsw i32 %354, 1, !dbg !12104
  store i32 %inc460, i32* %n, align 4, !dbg !12104
  br label %if.end461, !dbg !12105

if.end461:                                        ; preds = %if.end447, %for.end424
  br label %for.inc462, !dbg !12106

for.inc462:                                       ; preds = %if.end461
  %355 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !12107
  %next463 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %355, i32 0, i32 0, !dbg !12108
  %356 = load %struct.location_chain_def*, %struct.location_chain_def** %next463, align 8, !dbg !12108
  store %struct.location_chain_def* %356, %struct.location_chain_def** %node, align 8, !dbg !12109
  %357 = load i32, i32* %ii, align 4, !dbg !12110
  %inc464 = add nsw i32 %357, 1, !dbg !12110
  store i32 %inc464, i32* %ii, align 4, !dbg !12110
  br label %for.cond377, !dbg !12111, !llvm.loop !12112

for.end465:                                       ; preds = %for.cond377
  %358 = load i32, i32* %dst_l, align 4, !dbg !12114
  %cmp466 = icmp eq i32 %358, 2, !dbg !12116
  br i1 %cmp466, label %if.then468, label %if.else573, !dbg !12117

if.then468:                                       ; preds = %for.end465
  %359 = load %struct.variable_union_info*, %struct.variable_union_info** %vui, align 8, !dbg !12118
  %arrayidx469 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %359, i64 0, !dbg !12118
  %pos470 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %arrayidx469, i32 0, i32 1, !dbg !12121
  %360 = load i32, i32* %pos470, align 8, !dbg !12121
  %361 = load %struct.variable_union_info*, %struct.variable_union_info** %vui, align 8, !dbg !12122
  %arrayidx471 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %361, i64 1, !dbg !12122
  %pos472 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %arrayidx471, i32 0, i32 1, !dbg !12123
  %362 = load i32, i32* %pos472, align 8, !dbg !12123
  %cmp473 = icmp sgt i32 %360, %362, !dbg !12124
  br i1 %cmp473, label %if.then475, label %if.else505, !dbg !12125

if.then475:                                       ; preds = %if.then468
  %363 = load %struct.variable_union_info*, %struct.variable_union_info** %vui, align 8, !dbg !12126
  %arrayidx476 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %363, i64 1, !dbg !12126
  %lc477 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %arrayidx476, i32 0, i32 0, !dbg !12128
  %364 = load %struct.location_chain_def*, %struct.location_chain_def** %lc477, align 8, !dbg !12128
  %365 = load %struct.variable_def*, %struct.variable_def** %dst, align 8, !dbg !12129
  %var_part478 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %365, i32 0, i32 5, !dbg !12130
  %366 = load i32, i32* %k, align 4, !dbg !12131
  %idxprom479 = sext i32 %366 to i64, !dbg !12129
  %arrayidx480 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part478, i64 0, i64 %idxprom479, !dbg !12129
  %loc_chain481 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx480, i32 0, i32 0, !dbg !12132
  store %struct.location_chain_def* %364, %struct.location_chain_def** %loc_chain481, align 8, !dbg !12133
  %367 = load %struct.variable_union_info*, %struct.variable_union_info** %vui, align 8, !dbg !12134
  %arrayidx482 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %367, i64 0, !dbg !12134
  %lc483 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %arrayidx482, i32 0, i32 0, !dbg !12135
  %368 = load %struct.location_chain_def*, %struct.location_chain_def** %lc483, align 8, !dbg !12135
  %369 = load %struct.variable_union_info*, %struct.variable_union_info** %vui, align 8, !dbg !12136
  %arrayidx484 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %369, i64 1, !dbg !12136
  %lc485 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %arrayidx484, i32 0, i32 0, !dbg !12137
  %370 = load %struct.location_chain_def*, %struct.location_chain_def** %lc485, align 8, !dbg !12137
  %next486 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %370, i32 0, i32 0, !dbg !12138
  store %struct.location_chain_def* %368, %struct.location_chain_def** %next486, align 8, !dbg !12139
  %371 = load i32, i32* %n, align 4, !dbg !12140
  %cmp487 = icmp sge i32 %371, 3, !dbg !12142
  br i1 %cmp487, label %if.then489, label %if.else500, !dbg !12143

if.then489:                                       ; preds = %if.then475
  %372 = load %struct.variable_union_info*, %struct.variable_union_info** %vui, align 8, !dbg !12144
  %arrayidx490 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %372, i64 2, !dbg !12144
  %lc491 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %arrayidx490, i32 0, i32 0, !dbg !12146
  %373 = load %struct.location_chain_def*, %struct.location_chain_def** %lc491, align 8, !dbg !12146
  %374 = load %struct.variable_union_info*, %struct.variable_union_info** %vui, align 8, !dbg !12147
  %arrayidx492 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %374, i64 0, !dbg !12147
  %lc493 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %arrayidx492, i32 0, i32 0, !dbg !12148
  %375 = load %struct.location_chain_def*, %struct.location_chain_def** %lc493, align 8, !dbg !12148
  %next494 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %375, i32 0, i32 0, !dbg !12149
  store %struct.location_chain_def* %373, %struct.location_chain_def** %next494, align 8, !dbg !12150
  %376 = load %struct.variable_union_info*, %struct.variable_union_info** %vui, align 8, !dbg !12151
  %377 = load i32, i32* %n, align 4, !dbg !12152
  %sub495 = sub nsw i32 %377, 1, !dbg !12153
  %idxprom496 = sext i32 %sub495 to i64, !dbg !12151
  %arrayidx497 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %376, i64 %idxprom496, !dbg !12151
  %lc498 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %arrayidx497, i32 0, i32 0, !dbg !12154
  %378 = load %struct.location_chain_def*, %struct.location_chain_def** %lc498, align 8, !dbg !12154
  %next499 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %378, i32 0, i32 0, !dbg !12155
  store %struct.location_chain_def* null, %struct.location_chain_def** %next499, align 8, !dbg !12156
  br label %if.end504, !dbg !12157

if.else500:                                       ; preds = %if.then475
  %379 = load %struct.variable_union_info*, %struct.variable_union_info** %vui, align 8, !dbg !12158
  %arrayidx501 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %379, i64 0, !dbg !12158
  %lc502 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %arrayidx501, i32 0, i32 0, !dbg !12159
  %380 = load %struct.location_chain_def*, %struct.location_chain_def** %lc502, align 8, !dbg !12159
  %next503 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %380, i32 0, i32 0, !dbg !12160
  store %struct.location_chain_def* null, %struct.location_chain_def** %next503, align 8, !dbg !12161
  br label %if.end504

if.end504:                                        ; preds = %if.else500, %if.then489
  store i32 3, i32* %ii, align 4, !dbg !12162
  br label %if.end557, !dbg !12163

if.else505:                                       ; preds = %if.then468
  %381 = load %struct.variable_union_info*, %struct.variable_union_info** %vui, align 8, !dbg !12164
  %arrayidx506 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %381, i64 0, !dbg !12164
  %lc507 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %arrayidx506, i32 0, i32 0, !dbg !12166
  %382 = load %struct.location_chain_def*, %struct.location_chain_def** %lc507, align 8, !dbg !12166
  %383 = load %struct.variable_def*, %struct.variable_def** %dst, align 8, !dbg !12167
  %var_part508 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %383, i32 0, i32 5, !dbg !12168
  %384 = load i32, i32* %k, align 4, !dbg !12169
  %idxprom509 = sext i32 %384 to i64, !dbg !12167
  %arrayidx510 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part508, i64 0, i64 %idxprom509, !dbg !12167
  %loc_chain511 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx510, i32 0, i32 0, !dbg !12170
  store %struct.location_chain_def* %382, %struct.location_chain_def** %loc_chain511, align 8, !dbg !12171
  %385 = load i32, i32* %n, align 4, !dbg !12172
  %cmp512 = icmp sge i32 %385, 3, !dbg !12174
  br i1 %cmp512, label %land.lhs.true514, label %if.else550, !dbg !12175

land.lhs.true514:                                 ; preds = %if.else505
  %386 = load %struct.variable_union_info*, %struct.variable_union_info** %vui, align 8, !dbg !12176
  %arrayidx515 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %386, i64 2, !dbg !12176
  %pos516 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %arrayidx515, i32 0, i32 1, !dbg !12177
  %387 = load i32, i32* %pos516, align 8, !dbg !12177
  %388 = load %struct.variable_union_info*, %struct.variable_union_info** %vui, align 8, !dbg !12178
  %arrayidx517 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %388, i64 1, !dbg !12178
  %pos518 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %arrayidx517, i32 0, i32 1, !dbg !12179
  %389 = load i32, i32* %pos518, align 8, !dbg !12179
  %cmp519 = icmp slt i32 %387, %389, !dbg !12180
  br i1 %cmp519, label %if.then521, label %if.else550, !dbg !12181

if.then521:                                       ; preds = %land.lhs.true514
  %390 = load %struct.variable_union_info*, %struct.variable_union_info** %vui, align 8, !dbg !12182
  %arrayidx522 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %390, i64 2, !dbg !12182
  %lc523 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %arrayidx522, i32 0, i32 0, !dbg !12184
  %391 = load %struct.location_chain_def*, %struct.location_chain_def** %lc523, align 8, !dbg !12184
  %392 = load %struct.variable_union_info*, %struct.variable_union_info** %vui, align 8, !dbg !12185
  %arrayidx524 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %392, i64 0, !dbg !12185
  %lc525 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %arrayidx524, i32 0, i32 0, !dbg !12186
  %393 = load %struct.location_chain_def*, %struct.location_chain_def** %lc525, align 8, !dbg !12186
  %next526 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %393, i32 0, i32 0, !dbg !12187
  store %struct.location_chain_def* %391, %struct.location_chain_def** %next526, align 8, !dbg !12188
  %394 = load %struct.variable_union_info*, %struct.variable_union_info** %vui, align 8, !dbg !12189
  %arrayidx527 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %394, i64 1, !dbg !12189
  %lc528 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %arrayidx527, i32 0, i32 0, !dbg !12190
  %395 = load %struct.location_chain_def*, %struct.location_chain_def** %lc528, align 8, !dbg !12190
  %396 = load %struct.variable_union_info*, %struct.variable_union_info** %vui, align 8, !dbg !12191
  %arrayidx529 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %396, i64 2, !dbg !12191
  %lc530 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %arrayidx529, i32 0, i32 0, !dbg !12192
  %397 = load %struct.location_chain_def*, %struct.location_chain_def** %lc530, align 8, !dbg !12192
  %next531 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %397, i32 0, i32 0, !dbg !12193
  store %struct.location_chain_def* %395, %struct.location_chain_def** %next531, align 8, !dbg !12194
  %398 = load i32, i32* %n, align 4, !dbg !12195
  %cmp532 = icmp sge i32 %398, 4, !dbg !12197
  br i1 %cmp532, label %if.then534, label %if.else545, !dbg !12198

if.then534:                                       ; preds = %if.then521
  %399 = load %struct.variable_union_info*, %struct.variable_union_info** %vui, align 8, !dbg !12199
  %arrayidx535 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %399, i64 3, !dbg !12199
  %lc536 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %arrayidx535, i32 0, i32 0, !dbg !12201
  %400 = load %struct.location_chain_def*, %struct.location_chain_def** %lc536, align 8, !dbg !12201
  %401 = load %struct.variable_union_info*, %struct.variable_union_info** %vui, align 8, !dbg !12202
  %arrayidx537 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %401, i64 1, !dbg !12202
  %lc538 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %arrayidx537, i32 0, i32 0, !dbg !12203
  %402 = load %struct.location_chain_def*, %struct.location_chain_def** %lc538, align 8, !dbg !12203
  %next539 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %402, i32 0, i32 0, !dbg !12204
  store %struct.location_chain_def* %400, %struct.location_chain_def** %next539, align 8, !dbg !12205
  %403 = load %struct.variable_union_info*, %struct.variable_union_info** %vui, align 8, !dbg !12206
  %404 = load i32, i32* %n, align 4, !dbg !12207
  %sub540 = sub nsw i32 %404, 1, !dbg !12208
  %idxprom541 = sext i32 %sub540 to i64, !dbg !12206
  %arrayidx542 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %403, i64 %idxprom541, !dbg !12206
  %lc543 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %arrayidx542, i32 0, i32 0, !dbg !12209
  %405 = load %struct.location_chain_def*, %struct.location_chain_def** %lc543, align 8, !dbg !12209
  %next544 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %405, i32 0, i32 0, !dbg !12210
  store %struct.location_chain_def* null, %struct.location_chain_def** %next544, align 8, !dbg !12211
  br label %if.end549, !dbg !12212

if.else545:                                       ; preds = %if.then521
  %406 = load %struct.variable_union_info*, %struct.variable_union_info** %vui, align 8, !dbg !12213
  %arrayidx546 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %406, i64 1, !dbg !12213
  %lc547 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %arrayidx546, i32 0, i32 0, !dbg !12214
  %407 = load %struct.location_chain_def*, %struct.location_chain_def** %lc547, align 8, !dbg !12214
  %next548 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %407, i32 0, i32 0, !dbg !12215
  store %struct.location_chain_def* null, %struct.location_chain_def** %next548, align 8, !dbg !12216
  br label %if.end549

if.end549:                                        ; preds = %if.else545, %if.then534
  store i32 4, i32* %ii, align 4, !dbg !12217
  br label %if.end556, !dbg !12218

if.else550:                                       ; preds = %land.lhs.true514, %if.else505
  store i32 1, i32* %ii, align 4, !dbg !12219
  %408 = load %struct.variable_union_info*, %struct.variable_union_info** %vui, align 8, !dbg !12221
  %409 = load i32, i32* %n, align 4, !dbg !12222
  %sub551 = sub nsw i32 %409, 1, !dbg !12223
  %idxprom552 = sext i32 %sub551 to i64, !dbg !12221
  %arrayidx553 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %408, i64 %idxprom552, !dbg !12221
  %lc554 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %arrayidx553, i32 0, i32 0, !dbg !12224
  %410 = load %struct.location_chain_def*, %struct.location_chain_def** %lc554, align 8, !dbg !12224
  %next555 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %410, i32 0, i32 0, !dbg !12225
  store %struct.location_chain_def* null, %struct.location_chain_def** %next555, align 8, !dbg !12226
  br label %if.end556

if.end556:                                        ; preds = %if.else550, %if.end549
  br label %if.end557

if.end557:                                        ; preds = %if.end556, %if.end504
  br label %for.cond558, !dbg !12227

for.cond558:                                      ; preds = %for.inc570, %if.end557
  %411 = load i32, i32* %ii, align 4, !dbg !12228
  %412 = load i32, i32* %n, align 4, !dbg !12231
  %cmp559 = icmp slt i32 %411, %412, !dbg !12232
  br i1 %cmp559, label %for.body561, label %for.end572, !dbg !12233

for.body561:                                      ; preds = %for.cond558
  %413 = load %struct.variable_union_info*, %struct.variable_union_info** %vui, align 8, !dbg !12234
  %414 = load i32, i32* %ii, align 4, !dbg !12235
  %idxprom562 = sext i32 %414 to i64, !dbg !12234
  %arrayidx563 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %413, i64 %idxprom562, !dbg !12234
  %lc564 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %arrayidx563, i32 0, i32 0, !dbg !12236
  %415 = load %struct.location_chain_def*, %struct.location_chain_def** %lc564, align 8, !dbg !12236
  %416 = load %struct.variable_union_info*, %struct.variable_union_info** %vui, align 8, !dbg !12237
  %417 = load i32, i32* %ii, align 4, !dbg !12238
  %sub565 = sub nsw i32 %417, 1, !dbg !12239
  %idxprom566 = sext i32 %sub565 to i64, !dbg !12237
  %arrayidx567 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %416, i64 %idxprom566, !dbg !12237
  %lc568 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %arrayidx567, i32 0, i32 0, !dbg !12240
  %418 = load %struct.location_chain_def*, %struct.location_chain_def** %lc568, align 8, !dbg !12240
  %next569 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %418, i32 0, i32 0, !dbg !12241
  store %struct.location_chain_def* %415, %struct.location_chain_def** %next569, align 8, !dbg !12242
  br label %for.inc570, !dbg !12237

for.inc570:                                       ; preds = %for.body561
  %419 = load i32, i32* %ii, align 4, !dbg !12243
  %inc571 = add nsw i32 %419, 1, !dbg !12243
  store i32 %inc571, i32* %ii, align 4, !dbg !12243
  br label %for.cond558, !dbg !12244, !llvm.loop !12245

for.end572:                                       ; preds = %for.cond558
  br label %if.end601, !dbg !12247

if.else573:                                       ; preds = %for.end465
  %420 = load %struct.variable_union_info*, %struct.variable_union_info** %vui, align 8, !dbg !12248
  %421 = bitcast %struct.variable_union_info* %420 to i8*, !dbg !12248
  %422 = load i32, i32* %n, align 4, !dbg !12250
  %conv574 = sext i32 %422 to i64, !dbg !12250
  call void @spec_qsort(i8* %421, i64 %conv574, i64 16, i32 (i8*, i8*)* @variable_union_info_cmp_pos), !dbg !12251
  store i32 1, i32* %ii, align 4, !dbg !12252
  br label %for.cond575, !dbg !12254

for.cond575:                                      ; preds = %for.inc587, %if.else573
  %423 = load i32, i32* %ii, align 4, !dbg !12255
  %424 = load i32, i32* %n, align 4, !dbg !12257
  %cmp576 = icmp slt i32 %423, %424, !dbg !12258
  br i1 %cmp576, label %for.body578, label %for.end589, !dbg !12259

for.body578:                                      ; preds = %for.cond575
  %425 = load %struct.variable_union_info*, %struct.variable_union_info** %vui, align 8, !dbg !12260
  %426 = load i32, i32* %ii, align 4, !dbg !12261
  %idxprom579 = sext i32 %426 to i64, !dbg !12260
  %arrayidx580 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %425, i64 %idxprom579, !dbg !12260
  %lc581 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %arrayidx580, i32 0, i32 0, !dbg !12262
  %427 = load %struct.location_chain_def*, %struct.location_chain_def** %lc581, align 8, !dbg !12262
  %428 = load %struct.variable_union_info*, %struct.variable_union_info** %vui, align 8, !dbg !12263
  %429 = load i32, i32* %ii, align 4, !dbg !12264
  %sub582 = sub nsw i32 %429, 1, !dbg !12265
  %idxprom583 = sext i32 %sub582 to i64, !dbg !12263
  %arrayidx584 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %428, i64 %idxprom583, !dbg !12263
  %lc585 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %arrayidx584, i32 0, i32 0, !dbg !12266
  %430 = load %struct.location_chain_def*, %struct.location_chain_def** %lc585, align 8, !dbg !12266
  %next586 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %430, i32 0, i32 0, !dbg !12267
  store %struct.location_chain_def* %427, %struct.location_chain_def** %next586, align 8, !dbg !12268
  br label %for.inc587, !dbg !12263

for.inc587:                                       ; preds = %for.body578
  %431 = load i32, i32* %ii, align 4, !dbg !12269
  %inc588 = add nsw i32 %431, 1, !dbg !12269
  store i32 %inc588, i32* %ii, align 4, !dbg !12269
  br label %for.cond575, !dbg !12270, !llvm.loop !12271

for.end589:                                       ; preds = %for.cond575
  %432 = load %struct.variable_union_info*, %struct.variable_union_info** %vui, align 8, !dbg !12273
  %433 = load i32, i32* %n, align 4, !dbg !12274
  %sub590 = sub nsw i32 %433, 1, !dbg !12275
  %idxprom591 = sext i32 %sub590 to i64, !dbg !12273
  %arrayidx592 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %432, i64 %idxprom591, !dbg !12273
  %lc593 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %arrayidx592, i32 0, i32 0, !dbg !12276
  %434 = load %struct.location_chain_def*, %struct.location_chain_def** %lc593, align 8, !dbg !12276
  %next594 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %434, i32 0, i32 0, !dbg !12277
  store %struct.location_chain_def* null, %struct.location_chain_def** %next594, align 8, !dbg !12278
  %435 = load %struct.variable_union_info*, %struct.variable_union_info** %vui, align 8, !dbg !12279
  %arrayidx595 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %435, i64 0, !dbg !12279
  %lc596 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %arrayidx595, i32 0, i32 0, !dbg !12280
  %436 = load %struct.location_chain_def*, %struct.location_chain_def** %lc596, align 8, !dbg !12280
  %437 = load %struct.variable_def*, %struct.variable_def** %dst, align 8, !dbg !12281
  %var_part597 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %437, i32 0, i32 5, !dbg !12282
  %438 = load i32, i32* %k, align 4, !dbg !12283
  %idxprom598 = sext i32 %438 to i64, !dbg !12281
  %arrayidx599 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part597, i64 0, i64 %idxprom598, !dbg !12281
  %loc_chain600 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx599, i32 0, i32 0, !dbg !12284
  store %struct.location_chain_def* %436, %struct.location_chain_def** %loc_chain600, align 8, !dbg !12285
  br label %if.end601

if.end601:                                        ; preds = %for.end589, %for.end572
  %439 = load %struct.variable_def*, %struct.variable_def** %dst, align 8, !dbg !12286
  %var_part602 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %439, i32 0, i32 5, !dbg !12287
  %440 = load i32, i32* %j, align 4, !dbg !12288
  %idxprom603 = sext i32 %440 to i64, !dbg !12286
  %arrayidx604 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part602, i64 0, i64 %idxprom603, !dbg !12286
  %offset605 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx604, i32 0, i32 2, !dbg !12289
  %441 = load i64, i64* %offset605, align 8, !dbg !12289
  %442 = load %struct.variable_def*, %struct.variable_def** %dst, align 8, !dbg !12290
  %var_part606 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %442, i32 0, i32 5, !dbg !12291
  %443 = load i32, i32* %k, align 4, !dbg !12292
  %idxprom607 = sext i32 %443 to i64, !dbg !12290
  %arrayidx608 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part606, i64 0, i64 %idxprom607, !dbg !12290
  %offset609 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx608, i32 0, i32 2, !dbg !12293
  store i64 %441, i64* %offset609, align 8, !dbg !12294
  br label %if.end610

if.end610:                                        ; preds = %if.end601, %for.end334
  %444 = load i32, i32* %i, align 4, !dbg !12295
  %dec611 = add nsw i32 %444, -1, !dbg !12295
  store i32 %dec611, i32* %i, align 4, !dbg !12295
  %445 = load i32, i32* %j, align 4, !dbg !12296
  %dec612 = add nsw i32 %445, -1, !dbg !12296
  store i32 %dec612, i32* %j, align 4, !dbg !12296
  br label %if.end708, !dbg !12297

if.else613:                                       ; preds = %land.lhs.true165, %land.lhs.true162, %for.body159
  %446 = load i32, i32* %i, align 4, !dbg !12298
  %cmp614 = icmp sge i32 %446, 0, !dbg !12300
  br i1 %cmp614, label %land.lhs.true616, label %lor.lhs.false630, !dbg !12301

land.lhs.true616:                                 ; preds = %if.else613
  %447 = load i32, i32* %j, align 4, !dbg !12302
  %cmp617 = icmp sge i32 %447, 0, !dbg !12303
  br i1 %cmp617, label %land.lhs.true619, label %lor.lhs.false630, !dbg !12304

land.lhs.true619:                                 ; preds = %land.lhs.true616
  %448 = load %struct.variable_def*, %struct.variable_def** %src, align 8, !dbg !12305
  %var_part620 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %448, i32 0, i32 5, !dbg !12306
  %449 = load i32, i32* %i, align 4, !dbg !12307
  %idxprom621 = sext i32 %449 to i64, !dbg !12305
  %arrayidx622 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part620, i64 0, i64 %idxprom621, !dbg !12305
  %offset623 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx622, i32 0, i32 2, !dbg !12308
  %450 = load i64, i64* %offset623, align 8, !dbg !12308
  %451 = load %struct.variable_def*, %struct.variable_def** %dst, align 8, !dbg !12309
  %var_part624 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %451, i32 0, i32 5, !dbg !12310
  %452 = load i32, i32* %j, align 4, !dbg !12311
  %idxprom625 = sext i32 %452 to i64, !dbg !12309
  %arrayidx626 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part624, i64 0, i64 %idxprom625, !dbg !12309
  %offset627 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx626, i32 0, i32 2, !dbg !12312
  %453 = load i64, i64* %offset627, align 8, !dbg !12312
  %cmp628 = icmp slt i64 %450, %453, !dbg !12313
  br i1 %cmp628, label %if.then633, label %lor.lhs.false630, !dbg !12314

lor.lhs.false630:                                 ; preds = %land.lhs.true619, %land.lhs.true616, %if.else613
  %454 = load i32, i32* %i, align 4, !dbg !12315
  %cmp631 = icmp slt i32 %454, 0, !dbg !12316
  br i1 %cmp631, label %if.then633, label %if.else641, !dbg !12317

if.then633:                                       ; preds = %lor.lhs.false630, %land.lhs.true619
  %455 = load %struct.variable_def*, %struct.variable_def** %dst, align 8, !dbg !12318
  %var_part634 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %455, i32 0, i32 5, !dbg !12320
  %456 = load i32, i32* %k, align 4, !dbg !12321
  %idxprom635 = sext i32 %456 to i64, !dbg !12318
  %arrayidx636 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part634, i64 0, i64 %idxprom635, !dbg !12318
  %457 = load %struct.variable_def*, %struct.variable_def** %dst, align 8, !dbg !12322
  %var_part637 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %457, i32 0, i32 5, !dbg !12323
  %458 = load i32, i32* %j, align 4, !dbg !12324
  %idxprom638 = sext i32 %458 to i64, !dbg !12322
  %arrayidx639 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part637, i64 0, i64 %idxprom638, !dbg !12322
  %459 = bitcast %struct.variable_part_def* %arrayidx636 to i8*, !dbg !12322
  %460 = bitcast %struct.variable_part_def* %arrayidx639 to i8*, !dbg !12322
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %459, i8* align 8 %460, i64 24, i1 false), !dbg !12322
  %461 = load i32, i32* %j, align 4, !dbg !12325
  %dec640 = add nsw i32 %461, -1, !dbg !12325
  store i32 %dec640, i32* %j, align 4, !dbg !12325
  br label %if.end707, !dbg !12326

if.else641:                                       ; preds = %lor.lhs.false630
  %462 = load i32, i32* %i, align 4, !dbg !12327
  %cmp642 = icmp sge i32 %462, 0, !dbg !12329
  br i1 %cmp642, label %land.lhs.true644, label %lor.lhs.false658, !dbg !12330

land.lhs.true644:                                 ; preds = %if.else641
  %463 = load i32, i32* %j, align 4, !dbg !12331
  %cmp645 = icmp sge i32 %463, 0, !dbg !12332
  br i1 %cmp645, label %land.lhs.true647, label %lor.lhs.false658, !dbg !12333

land.lhs.true647:                                 ; preds = %land.lhs.true644
  %464 = load %struct.variable_def*, %struct.variable_def** %src, align 8, !dbg !12334
  %var_part648 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %464, i32 0, i32 5, !dbg !12335
  %465 = load i32, i32* %i, align 4, !dbg !12336
  %idxprom649 = sext i32 %465 to i64, !dbg !12334
  %arrayidx650 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part648, i64 0, i64 %idxprom649, !dbg !12334
  %offset651 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx650, i32 0, i32 2, !dbg !12337
  %466 = load i64, i64* %offset651, align 8, !dbg !12337
  %467 = load %struct.variable_def*, %struct.variable_def** %dst, align 8, !dbg !12338
  %var_part652 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %467, i32 0, i32 5, !dbg !12339
  %468 = load i32, i32* %j, align 4, !dbg !12340
  %idxprom653 = sext i32 %468 to i64, !dbg !12338
  %arrayidx654 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part652, i64 0, i64 %idxprom653, !dbg !12338
  %offset655 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx654, i32 0, i32 2, !dbg !12341
  %469 = load i64, i64* %offset655, align 8, !dbg !12341
  %cmp656 = icmp sgt i64 %466, %469, !dbg !12342
  br i1 %cmp656, label %if.then661, label %lor.lhs.false658, !dbg !12343

lor.lhs.false658:                                 ; preds = %land.lhs.true647, %land.lhs.true644, %if.else641
  %470 = load i32, i32* %j, align 4, !dbg !12344
  %cmp659 = icmp slt i32 %470, 0, !dbg !12345
  br i1 %cmp659, label %if.then661, label %if.end706, !dbg !12346

if.then661:                                       ; preds = %lor.lhs.false658, %land.lhs.true647
  call void @llvm.dbg.declare(metadata %struct.location_chain_def*** %nextp, metadata !12347, metadata !DIExpression()), !dbg !12349
  %471 = load %struct.variable_def*, %struct.variable_def** %dst, align 8, !dbg !12350
  %var_part662 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %471, i32 0, i32 5, !dbg !12351
  %472 = load i32, i32* %k, align 4, !dbg !12352
  %idxprom663 = sext i32 %472 to i64, !dbg !12350
  %arrayidx664 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part662, i64 0, i64 %idxprom663, !dbg !12350
  %loc_chain665 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx664, i32 0, i32 0, !dbg !12353
  store %struct.location_chain_def** %loc_chain665, %struct.location_chain_def*** %nextp, align 8, !dbg !12354
  %473 = load %struct.variable_def*, %struct.variable_def** %src, align 8, !dbg !12355
  %var_part666 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %473, i32 0, i32 5, !dbg !12357
  %474 = load i32, i32* %i, align 4, !dbg !12358
  %idxprom667 = sext i32 %474 to i64, !dbg !12355
  %arrayidx668 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part666, i64 0, i64 %idxprom667, !dbg !12355
  %loc_chain669 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx668, i32 0, i32 0, !dbg !12359
  %475 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain669, align 8, !dbg !12359
  store %struct.location_chain_def* %475, %struct.location_chain_def** %node, align 8, !dbg !12360
  br label %for.cond670, !dbg !12361

for.cond670:                                      ; preds = %for.inc694, %if.then661
  %476 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !12362
  %tobool671 = icmp ne %struct.location_chain_def* %476, null, !dbg !12364
  br i1 %tobool671, label %for.body672, label %for.end696, !dbg !12364

for.body672:                                      ; preds = %for.cond670
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %new_lc, metadata !12365, metadata !DIExpression()), !dbg !12367
  %477 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @loc_chain_pool, align 8, !dbg !12368
  %call673 = call i8* @pool_alloc(%struct.alloc_pool_def* %477), !dbg !12369
  %478 = bitcast i8* %call673 to %struct.location_chain_def*, !dbg !12370
  store %struct.location_chain_def* %478, %struct.location_chain_def** %new_lc, align 8, !dbg !12371
  %479 = load %struct.location_chain_def*, %struct.location_chain_def** %new_lc, align 8, !dbg !12372
  %next674 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %479, i32 0, i32 0, !dbg !12373
  store %struct.location_chain_def* null, %struct.location_chain_def** %next674, align 8, !dbg !12374
  %480 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !12375
  %init675 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %480, i32 0, i32 3, !dbg !12376
  %481 = load i32, i32* %init675, align 8, !dbg !12376
  %482 = load %struct.location_chain_def*, %struct.location_chain_def** %new_lc, align 8, !dbg !12377
  %init676 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %482, i32 0, i32 3, !dbg !12378
  store i32 %481, i32* %init676, align 8, !dbg !12379
  %483 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !12380
  %set_src677 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %483, i32 0, i32 2, !dbg !12382
  %484 = load %struct.rtx_def*, %struct.rtx_def** %set_src677, align 8, !dbg !12382
  %tobool678 = icmp ne %struct.rtx_def* %484, null, !dbg !12380
  br i1 %tobool678, label %lor.lhs.false679, label %if.then685, !dbg !12383

lor.lhs.false679:                                 ; preds = %for.body672
  %485 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !12384
  %set_src680 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %485, i32 0, i32 2, !dbg !12384
  %486 = load %struct.rtx_def*, %struct.rtx_def** %set_src680, align 8, !dbg !12384
  %487 = bitcast %struct.rtx_def* %486 to i32*, !dbg !12384
  %bf.load681 = load i32, i32* %487, align 8, !dbg !12384
  %bf.clear682 = and i32 %bf.load681, 65535, !dbg !12384
  %cmp683 = icmp eq i32 %bf.clear682, 43, !dbg !12384
  br i1 %cmp683, label %if.then685, label %if.else687, !dbg !12385

if.then685:                                       ; preds = %lor.lhs.false679, %for.body672
  %488 = load %struct.location_chain_def*, %struct.location_chain_def** %new_lc, align 8, !dbg !12386
  %set_src686 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %488, i32 0, i32 2, !dbg !12387
  store %struct.rtx_def* null, %struct.rtx_def** %set_src686, align 8, !dbg !12388
  br label %if.end690, !dbg !12386

if.else687:                                       ; preds = %lor.lhs.false679
  %489 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !12389
  %set_src688 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %489, i32 0, i32 2, !dbg !12390
  %490 = load %struct.rtx_def*, %struct.rtx_def** %set_src688, align 8, !dbg !12390
  %491 = load %struct.location_chain_def*, %struct.location_chain_def** %new_lc, align 8, !dbg !12391
  %set_src689 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %491, i32 0, i32 2, !dbg !12392
  store %struct.rtx_def* %490, %struct.rtx_def** %set_src689, align 8, !dbg !12393
  br label %if.end690

if.end690:                                        ; preds = %if.else687, %if.then685
  %492 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !12394
  %loc691 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %492, i32 0, i32 1, !dbg !12395
  %493 = load %struct.rtx_def*, %struct.rtx_def** %loc691, align 8, !dbg !12395
  %494 = load %struct.location_chain_def*, %struct.location_chain_def** %new_lc, align 8, !dbg !12396
  %loc692 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %494, i32 0, i32 1, !dbg !12397
  store %struct.rtx_def* %493, %struct.rtx_def** %loc692, align 8, !dbg !12398
  %495 = load %struct.location_chain_def*, %struct.location_chain_def** %new_lc, align 8, !dbg !12399
  %496 = load %struct.location_chain_def**, %struct.location_chain_def*** %nextp, align 8, !dbg !12400
  store %struct.location_chain_def* %495, %struct.location_chain_def** %496, align 8, !dbg !12401
  %497 = load %struct.location_chain_def*, %struct.location_chain_def** %new_lc, align 8, !dbg !12402
  %next693 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %497, i32 0, i32 0, !dbg !12403
  store %struct.location_chain_def** %next693, %struct.location_chain_def*** %nextp, align 8, !dbg !12404
  br label %for.inc694, !dbg !12405

for.inc694:                                       ; preds = %if.end690
  %498 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !12406
  %next695 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %498, i32 0, i32 0, !dbg !12407
  %499 = load %struct.location_chain_def*, %struct.location_chain_def** %next695, align 8, !dbg !12407
  store %struct.location_chain_def* %499, %struct.location_chain_def** %node, align 8, !dbg !12408
  br label %for.cond670, !dbg !12409, !llvm.loop !12410

for.end696:                                       ; preds = %for.cond670
  %500 = load %struct.variable_def*, %struct.variable_def** %src, align 8, !dbg !12412
  %var_part697 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %500, i32 0, i32 5, !dbg !12413
  %501 = load i32, i32* %i, align 4, !dbg !12414
  %idxprom698 = sext i32 %501 to i64, !dbg !12412
  %arrayidx699 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part697, i64 0, i64 %idxprom698, !dbg !12412
  %offset700 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx699, i32 0, i32 2, !dbg !12415
  %502 = load i64, i64* %offset700, align 8, !dbg !12415
  %503 = load %struct.variable_def*, %struct.variable_def** %dst, align 8, !dbg !12416
  %var_part701 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %503, i32 0, i32 5, !dbg !12417
  %504 = load i32, i32* %k, align 4, !dbg !12418
  %idxprom702 = sext i32 %504 to i64, !dbg !12416
  %arrayidx703 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part701, i64 0, i64 %idxprom702, !dbg !12416
  %offset704 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx703, i32 0, i32 2, !dbg !12419
  store i64 %502, i64* %offset704, align 8, !dbg !12420
  %505 = load i32, i32* %i, align 4, !dbg !12421
  %dec705 = add nsw i32 %505, -1, !dbg !12421
  store i32 %dec705, i32* %i, align 4, !dbg !12421
  br label %if.end706, !dbg !12422

if.end706:                                        ; preds = %for.end696, %lor.lhs.false658
  br label %if.end707

if.end707:                                        ; preds = %if.end706, %if.then633
  br label %if.end708

if.end708:                                        ; preds = %if.end707, %if.end610
  %506 = load %struct.variable_def*, %struct.variable_def** %dst, align 8, !dbg !12423
  %var_part709 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %506, i32 0, i32 5, !dbg !12424
  %507 = load i32, i32* %k, align 4, !dbg !12425
  %idxprom710 = sext i32 %507 to i64, !dbg !12423
  %arrayidx711 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part709, i64 0, i64 %idxprom710, !dbg !12423
  %cur_loc = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx711, i32 0, i32 1, !dbg !12426
  store %struct.rtx_def* null, %struct.rtx_def** %cur_loc, align 8, !dbg !12427
  br label %for.inc712, !dbg !12428

for.inc712:                                       ; preds = %if.end708
  %508 = load i32, i32* %k, align 4, !dbg !12429
  %dec713 = add nsw i32 %508, -1, !dbg !12429
  store i32 %dec713, i32* %k, align 4, !dbg !12429
  br label %for.cond156, !dbg !12430, !llvm.loop !12431

for.end714:                                       ; preds = %for.cond156
  %509 = load i32, i32* @flag_var_tracking_uninit, align 4, !dbg !12433
  %tobool715 = icmp ne i32 %509, 0, !dbg !12433
  br i1 %tobool715, label %if.then716, label %if.end768, !dbg !12435

if.then716:                                       ; preds = %for.end714
  store i32 0, i32* %i, align 4, !dbg !12436
  br label %for.cond717, !dbg !12438

for.cond717:                                      ; preds = %for.inc765, %if.then716
  %510 = load i32, i32* %i, align 4, !dbg !12439
  %511 = load %struct.variable_def*, %struct.variable_def** %src, align 8, !dbg !12441
  %n_var_parts718 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %511, i32 0, i32 2, !dbg !12442
  %512 = load i8, i8* %n_var_parts718, align 4, !dbg !12442
  %conv719 = sext i8 %512 to i32, !dbg !12441
  %cmp720 = icmp slt i32 %510, %conv719, !dbg !12443
  br i1 %cmp720, label %land.rhs722, label %land.end727, !dbg !12444

land.rhs722:                                      ; preds = %for.cond717
  %513 = load i32, i32* %i, align 4, !dbg !12445
  %514 = load %struct.variable_def*, %struct.variable_def** %dst, align 8, !dbg !12446
  %n_var_parts723 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %514, i32 0, i32 2, !dbg !12447
  %515 = load i8, i8* %n_var_parts723, align 4, !dbg !12447
  %conv724 = sext i8 %515 to i32, !dbg !12446
  %cmp725 = icmp slt i32 %513, %conv724, !dbg !12448
  br label %land.end727

land.end727:                                      ; preds = %land.rhs722, %for.cond717
  %516 = phi i1 [ false, %for.cond717 ], [ %cmp725, %land.rhs722 ], !dbg !12449
  br i1 %516, label %for.body728, label %for.end767, !dbg !12450

for.body728:                                      ; preds = %land.end727
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %node729, metadata !12451, metadata !DIExpression()), !dbg !12453
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %node2730, metadata !12454, metadata !DIExpression()), !dbg !12455
  %517 = load %struct.variable_def*, %struct.variable_def** %src, align 8, !dbg !12456
  %var_part731 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %517, i32 0, i32 5, !dbg !12458
  %518 = load i32, i32* %i, align 4, !dbg !12459
  %idxprom732 = sext i32 %518 to i64, !dbg !12456
  %arrayidx733 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part731, i64 0, i64 %idxprom732, !dbg !12456
  %loc_chain734 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx733, i32 0, i32 0, !dbg !12460
  %519 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain734, align 8, !dbg !12460
  store %struct.location_chain_def* %519, %struct.location_chain_def** %node729, align 8, !dbg !12461
  br label %for.cond735, !dbg !12462

for.cond735:                                      ; preds = %for.inc762, %for.body728
  %520 = load %struct.location_chain_def*, %struct.location_chain_def** %node729, align 8, !dbg !12463
  %tobool736 = icmp ne %struct.location_chain_def* %520, null, !dbg !12465
  br i1 %tobool736, label %for.body737, label %for.end764, !dbg !12465

for.body737:                                      ; preds = %for.cond735
  %521 = load %struct.variable_def*, %struct.variable_def** %dst, align 8, !dbg !12466
  %var_part738 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %521, i32 0, i32 5, !dbg !12468
  %522 = load i32, i32* %i, align 4, !dbg !12469
  %idxprom739 = sext i32 %522 to i64, !dbg !12466
  %arrayidx740 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part738, i64 0, i64 %idxprom739, !dbg !12466
  %loc_chain741 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx740, i32 0, i32 0, !dbg !12470
  %523 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain741, align 8, !dbg !12470
  store %struct.location_chain_def* %523, %struct.location_chain_def** %node2730, align 8, !dbg !12471
  br label %for.cond742, !dbg !12472

for.cond742:                                      ; preds = %for.inc759, %for.body737
  %524 = load %struct.location_chain_def*, %struct.location_chain_def** %node2730, align 8, !dbg !12473
  %tobool743 = icmp ne %struct.location_chain_def* %524, null, !dbg !12475
  br i1 %tobool743, label %for.body744, label %for.end761, !dbg !12475

for.body744:                                      ; preds = %for.cond742
  %525 = load %struct.location_chain_def*, %struct.location_chain_def** %node729, align 8, !dbg !12476
  %loc745 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %525, i32 0, i32 1, !dbg !12478
  %526 = load %struct.rtx_def*, %struct.rtx_def** %loc745, align 8, !dbg !12478
  %527 = load %struct.location_chain_def*, %struct.location_chain_def** %node2730, align 8, !dbg !12479
  %loc746 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %527, i32 0, i32 1, !dbg !12480
  %528 = load %struct.rtx_def*, %struct.rtx_def** %loc746, align 8, !dbg !12480
  %call747 = call i32 @rtx_equal_p(%struct.rtx_def* %526, %struct.rtx_def* %528), !dbg !12481
  %tobool748 = icmp ne i32 %call747, 0, !dbg !12481
  br i1 %tobool748, label %if.then749, label %if.end758, !dbg !12482

if.then749:                                       ; preds = %for.body744
  %529 = load %struct.location_chain_def*, %struct.location_chain_def** %node729, align 8, !dbg !12483
  %init750 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %529, i32 0, i32 3, !dbg !12486
  %530 = load i32, i32* %init750, align 8, !dbg !12486
  %531 = load %struct.location_chain_def*, %struct.location_chain_def** %node2730, align 8, !dbg !12487
  %init751 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %531, i32 0, i32 3, !dbg !12488
  %532 = load i32, i32* %init751, align 8, !dbg !12488
  %cmp752 = icmp ugt i32 %530, %532, !dbg !12489
  br i1 %cmp752, label %if.then754, label %if.end757, !dbg !12490

if.then754:                                       ; preds = %if.then749
  %533 = load %struct.location_chain_def*, %struct.location_chain_def** %node729, align 8, !dbg !12491
  %init755 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %533, i32 0, i32 3, !dbg !12492
  %534 = load i32, i32* %init755, align 8, !dbg !12492
  %535 = load %struct.location_chain_def*, %struct.location_chain_def** %node2730, align 8, !dbg !12493
  %init756 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %535, i32 0, i32 3, !dbg !12494
  store i32 %534, i32* %init756, align 8, !dbg !12495
  br label %if.end757, !dbg !12493

if.end757:                                        ; preds = %if.then754, %if.then749
  br label %if.end758, !dbg !12496

if.end758:                                        ; preds = %if.end757, %for.body744
  br label %for.inc759, !dbg !12497

for.inc759:                                       ; preds = %if.end758
  %536 = load %struct.location_chain_def*, %struct.location_chain_def** %node2730, align 8, !dbg !12498
  %next760 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %536, i32 0, i32 0, !dbg !12499
  %537 = load %struct.location_chain_def*, %struct.location_chain_def** %next760, align 8, !dbg !12499
  store %struct.location_chain_def* %537, %struct.location_chain_def** %node2730, align 8, !dbg !12500
  br label %for.cond742, !dbg !12501, !llvm.loop !12502

for.end761:                                       ; preds = %for.cond742
  br label %for.inc762, !dbg !12503

for.inc762:                                       ; preds = %for.end761
  %538 = load %struct.location_chain_def*, %struct.location_chain_def** %node729, align 8, !dbg !12504
  %next763 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %538, i32 0, i32 0, !dbg !12505
  %539 = load %struct.location_chain_def*, %struct.location_chain_def** %next763, align 8, !dbg !12505
  store %struct.location_chain_def* %539, %struct.location_chain_def** %node729, align 8, !dbg !12506
  br label %for.cond735, !dbg !12507, !llvm.loop !12508

for.end764:                                       ; preds = %for.cond735
  br label %for.inc765, !dbg !12510

for.inc765:                                       ; preds = %for.end764
  %540 = load i32, i32* %i, align 4, !dbg !12511
  %inc766 = add nsw i32 %540, 1, !dbg !12511
  store i32 %inc766, i32* %i, align 4, !dbg !12511
  br label %for.cond717, !dbg !12512, !llvm.loop !12513

for.end767:                                       ; preds = %land.end727
  br label %if.end768, !dbg !12514

if.end768:                                        ; preds = %for.end767, %for.end714
  store i32 1, i32* %retval, align 4, !dbg !12515
  br label %return, !dbg !12515

return:                                           ; preds = %if.end768, %while.end, %if.end
  %541 = load i32, i32* %retval, align 4, !dbg !12516
  ret i32 %541, !dbg !12516
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.variable_def* @shared_hash_find_1(%struct.shared_hash_def* %vars, i8* %dv, i32 %dvhash) #0 !dbg !12517 {
entry:
  %vars.addr = alloca %struct.shared_hash_def*, align 8
  %dv.addr = alloca i8*, align 8
  %dvhash.addr = alloca i32, align 4
  store %struct.shared_hash_def* %vars, %struct.shared_hash_def** %vars.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.shared_hash_def** %vars.addr, metadata !12520, metadata !DIExpression()), !dbg !12521
  store i8* %dv, i8** %dv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dv.addr, metadata !12522, metadata !DIExpression()), !dbg !12523
  store i32 %dvhash, i32* %dvhash.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %dvhash.addr, metadata !12524, metadata !DIExpression()), !dbg !12525
  %0 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars.addr, align 8, !dbg !12526
  %call = call %struct.htab* @shared_hash_htab(%struct.shared_hash_def* %0), !dbg !12527
  %1 = load i8*, i8** %dv.addr, align 8, !dbg !12528
  %2 = load i32, i32* %dvhash.addr, align 4, !dbg !12529
  %call1 = call i8* @htab_find_with_hash(%struct.htab* %call, i8* %1, i32 %2), !dbg !12530
  %3 = bitcast i8* %call1 to %struct.variable_def*, !dbg !12531
  ret %struct.variable_def* %3, !dbg !12532
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @onepart_variable_different_p(%struct.variable_def* %var1, %struct.variable_def* %var2) #0 !dbg !12533 {
entry:
  %retval = alloca i8, align 1
  %var1.addr = alloca %struct.variable_def*, align 8
  %var2.addr = alloca %struct.variable_def*, align 8
  %lc1 = alloca %struct.location_chain_def*, align 8
  %lc2 = alloca %struct.location_chain_def*, align 8
  store %struct.variable_def* %var1, %struct.variable_def** %var1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.variable_def** %var1.addr, metadata !12536, metadata !DIExpression()), !dbg !12537
  store %struct.variable_def* %var2, %struct.variable_def** %var2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.variable_def** %var2.addr, metadata !12538, metadata !DIExpression()), !dbg !12539
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %lc1, metadata !12540, metadata !DIExpression()), !dbg !12541
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %lc2, metadata !12542, metadata !DIExpression()), !dbg !12543
  %0 = load %struct.variable_def*, %struct.variable_def** %var1.addr, align 8, !dbg !12544
  %1 = load %struct.variable_def*, %struct.variable_def** %var2.addr, align 8, !dbg !12546
  %cmp = icmp eq %struct.variable_def* %0, %1, !dbg !12547
  br i1 %cmp, label %if.then, label %if.end, !dbg !12548

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !12549
  br label %return, !dbg !12549

if.end:                                           ; preds = %entry
  %2 = load %struct.variable_def*, %struct.variable_def** %var1.addr, align 8, !dbg !12550
  %n_var_parts = getelementptr inbounds %struct.variable_def, %struct.variable_def* %2, i32 0, i32 2, !dbg !12550
  %3 = load i8, i8* %n_var_parts, align 4, !dbg !12550
  %conv = sext i8 %3 to i32, !dbg !12550
  %cmp1 = icmp eq i32 %conv, 1, !dbg !12550
  br i1 %cmp1, label %cond.false, label %cond.true, !dbg !12550

cond.true:                                        ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 4314, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !12550
  br label %cond.end, !dbg !12550

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !12550

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !12550
  %4 = load %struct.variable_def*, %struct.variable_def** %var2.addr, align 8, !dbg !12551
  %n_var_parts3 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %4, i32 0, i32 2, !dbg !12551
  %5 = load i8, i8* %n_var_parts3, align 4, !dbg !12551
  %conv4 = sext i8 %5 to i32, !dbg !12551
  %cmp5 = icmp eq i32 %conv4, 1, !dbg !12551
  br i1 %cmp5, label %cond.false8, label %cond.true7, !dbg !12551

cond.true7:                                       ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 4315, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !12551
  br label %cond.end9, !dbg !12551

cond.false8:                                      ; preds = %cond.end
  br label %cond.end9, !dbg !12551

cond.end9:                                        ; preds = %cond.false8, %cond.true7
  %cond10 = phi i32 [ 0, %cond.true7 ], [ 0, %cond.false8 ], !dbg !12551
  %6 = load %struct.variable_def*, %struct.variable_def** %var1.addr, align 8, !dbg !12552
  %var_part = getelementptr inbounds %struct.variable_def, %struct.variable_def* %6, i32 0, i32 5, !dbg !12553
  %arrayidx = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part, i64 0, i64 0, !dbg !12552
  %loc_chain = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx, i32 0, i32 0, !dbg !12554
  %7 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain, align 8, !dbg !12554
  store %struct.location_chain_def* %7, %struct.location_chain_def** %lc1, align 8, !dbg !12555
  %8 = load %struct.variable_def*, %struct.variable_def** %var2.addr, align 8, !dbg !12556
  %var_part11 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %8, i32 0, i32 5, !dbg !12557
  %arrayidx12 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part11, i64 0, i64 0, !dbg !12556
  %loc_chain13 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx12, i32 0, i32 0, !dbg !12558
  %9 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain13, align 8, !dbg !12558
  store %struct.location_chain_def* %9, %struct.location_chain_def** %lc2, align 8, !dbg !12559
  %10 = load %struct.location_chain_def*, %struct.location_chain_def** %lc1, align 8, !dbg !12560
  %tobool = icmp ne %struct.location_chain_def* %10, null, !dbg !12560
  br i1 %tobool, label %cond.false15, label %cond.true14, !dbg !12560

cond.true14:                                      ; preds = %cond.end9
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 4320, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !12560
  br label %cond.end16, !dbg !12560

cond.false15:                                     ; preds = %cond.end9
  br label %cond.end16, !dbg !12560

cond.end16:                                       ; preds = %cond.false15, %cond.true14
  %cond17 = phi i32 [ 0, %cond.true14 ], [ 0, %cond.false15 ], !dbg !12560
  %11 = load %struct.location_chain_def*, %struct.location_chain_def** %lc2, align 8, !dbg !12561
  %tobool18 = icmp ne %struct.location_chain_def* %11, null, !dbg !12561
  br i1 %tobool18, label %cond.false20, label %cond.true19, !dbg !12561

cond.true19:                                      ; preds = %cond.end16
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 4321, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !12561
  br label %cond.end21, !dbg !12561

cond.false20:                                     ; preds = %cond.end16
  br label %cond.end21, !dbg !12561

cond.end21:                                       ; preds = %cond.false20, %cond.true19
  %cond22 = phi i32 [ 0, %cond.true19 ], [ 0, %cond.false20 ], !dbg !12561
  br label %while.cond, !dbg !12562

while.cond:                                       ; preds = %if.end28, %cond.end21
  %12 = load %struct.location_chain_def*, %struct.location_chain_def** %lc1, align 8, !dbg !12563
  %tobool23 = icmp ne %struct.location_chain_def* %12, null, !dbg !12563
  br i1 %tobool23, label %land.rhs, label %land.end, !dbg !12564

land.rhs:                                         ; preds = %while.cond
  %13 = load %struct.location_chain_def*, %struct.location_chain_def** %lc2, align 8, !dbg !12565
  %tobool24 = icmp ne %struct.location_chain_def* %13, null, !dbg !12564
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %14 = phi i1 [ false, %while.cond ], [ %tobool24, %land.rhs ], !dbg !12566
  br i1 %14, label %while.body, label %while.end, !dbg !12562

while.body:                                       ; preds = %land.end
  %15 = load %struct.location_chain_def*, %struct.location_chain_def** %lc1, align 8, !dbg !12567
  %loc = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %15, i32 0, i32 1, !dbg !12570
  %16 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !12570
  %17 = load %struct.location_chain_def*, %struct.location_chain_def** %lc2, align 8, !dbg !12571
  %loc25 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %17, i32 0, i32 1, !dbg !12572
  %18 = load %struct.rtx_def*, %struct.rtx_def** %loc25, align 8, !dbg !12572
  %call = call i32 @loc_cmp(%struct.rtx_def* %16, %struct.rtx_def* %18), !dbg !12573
  %tobool26 = icmp ne i32 %call, 0, !dbg !12573
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !12574

if.then27:                                        ; preds = %while.body
  store i8 1, i8* %retval, align 1, !dbg !12575
  br label %return, !dbg !12575

if.end28:                                         ; preds = %while.body
  %19 = load %struct.location_chain_def*, %struct.location_chain_def** %lc1, align 8, !dbg !12576
  %next = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %19, i32 0, i32 0, !dbg !12577
  %20 = load %struct.location_chain_def*, %struct.location_chain_def** %next, align 8, !dbg !12577
  store %struct.location_chain_def* %20, %struct.location_chain_def** %lc1, align 8, !dbg !12578
  %21 = load %struct.location_chain_def*, %struct.location_chain_def** %lc2, align 8, !dbg !12579
  %next29 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %21, i32 0, i32 0, !dbg !12580
  %22 = load %struct.location_chain_def*, %struct.location_chain_def** %next29, align 8, !dbg !12580
  store %struct.location_chain_def* %22, %struct.location_chain_def** %lc2, align 8, !dbg !12581
  br label %while.cond, !dbg !12562, !llvm.loop !12582

while.end:                                        ; preds = %land.end
  %23 = load %struct.location_chain_def*, %struct.location_chain_def** %lc1, align 8, !dbg !12584
  %24 = load %struct.location_chain_def*, %struct.location_chain_def** %lc2, align 8, !dbg !12585
  %cmp30 = icmp ne %struct.location_chain_def* %23, %24, !dbg !12586
  %conv31 = zext i1 %cmp30 to i32, !dbg !12586
  %conv32 = trunc i32 %conv31 to i8, !dbg !12584
  store i8 %conv32, i8* %retval, align 1, !dbg !12587
  br label %return, !dbg !12587

return:                                           ; preds = %while.end, %if.then27, %if.then
  %25 = load i8, i8* %retval, align 1, !dbg !12588
  ret i8 %25, !dbg !12588
}

; Function Attrs: noinline nounwind uwtable
define internal void @intersect_loc_chains(%struct.rtx_def* %val, %struct.location_chain_def** %dest, %struct.dfset_merge* %dsm, %struct.location_chain_def* %s1node, %struct.variable_def* %s2var) #0 !dbg !12589 {
entry:
  %val.addr = alloca %struct.rtx_def*, align 8
  %dest.addr = alloca %struct.location_chain_def**, align 8
  %dsm.addr = alloca %struct.dfset_merge*, align 8
  %s1node.addr = alloca %struct.location_chain_def*, align 8
  %s2var.addr = alloca %struct.variable_def*, align 8
  %s1set = alloca %struct.dataflow_set_def*, align 8
  %s2set = alloca %struct.dataflow_set_def*, align 8
  %found = alloca %struct.location_chain_def*, align 8
  %dv = alloca i8*, align 8
  %svar = alloca %struct.variable_def*, align 8
  store %struct.rtx_def* %val, %struct.rtx_def** %val.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %val.addr, metadata !12592, metadata !DIExpression()), !dbg !12593
  store %struct.location_chain_def** %dest, %struct.location_chain_def*** %dest.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.location_chain_def*** %dest.addr, metadata !12594, metadata !DIExpression()), !dbg !12595
  store %struct.dfset_merge* %dsm, %struct.dfset_merge** %dsm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dfset_merge** %dsm.addr, metadata !12596, metadata !DIExpression()), !dbg !12597
  store %struct.location_chain_def* %s1node, %struct.location_chain_def** %s1node.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %s1node.addr, metadata !12598, metadata !DIExpression()), !dbg !12599
  store %struct.variable_def* %s2var, %struct.variable_def** %s2var.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.variable_def** %s2var.addr, metadata !12600, metadata !DIExpression()), !dbg !12601
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %s1set, metadata !12602, metadata !DIExpression()), !dbg !12603
  %0 = load %struct.dfset_merge*, %struct.dfset_merge** %dsm.addr, align 8, !dbg !12604
  %cur = getelementptr inbounds %struct.dfset_merge, %struct.dfset_merge* %0, i32 0, i32 1, !dbg !12605
  %1 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %cur, align 8, !dbg !12605
  store %struct.dataflow_set_def* %1, %struct.dataflow_set_def** %s1set, align 8, !dbg !12603
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %s2set, metadata !12606, metadata !DIExpression()), !dbg !12607
  %2 = load %struct.dfset_merge*, %struct.dfset_merge** %dsm.addr, align 8, !dbg !12608
  %src = getelementptr inbounds %struct.dfset_merge, %struct.dfset_merge* %2, i32 0, i32 2, !dbg !12609
  %3 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %src, align 8, !dbg !12609
  store %struct.dataflow_set_def* %3, %struct.dataflow_set_def** %s2set, align 8, !dbg !12607
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %found, metadata !12610, metadata !DIExpression()), !dbg !12611
  br label %for.cond, !dbg !12612

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.location_chain_def*, %struct.location_chain_def** %s1node.addr, align 8, !dbg !12613
  %tobool = icmp ne %struct.location_chain_def* %4, null, !dbg !12616
  br i1 %tobool, label %for.body, label %for.end, !dbg !12616

for.body:                                         ; preds = %for.cond
  %5 = load %struct.location_chain_def*, %struct.location_chain_def** %s1node.addr, align 8, !dbg !12617
  %loc = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %5, i32 0, i32 1, !dbg !12620
  %6 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !12620
  %7 = load %struct.rtx_def*, %struct.rtx_def** %val.addr, align 8, !dbg !12621
  %cmp = icmp eq %struct.rtx_def* %6, %7, !dbg !12622
  br i1 %cmp, label %if.then, label %if.end, !dbg !12623

if.then:                                          ; preds = %for.body
  br label %for.inc, !dbg !12624

if.end:                                           ; preds = %for.body
  %8 = load %struct.location_chain_def*, %struct.location_chain_def** %s1node.addr, align 8, !dbg !12625
  %loc1 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %8, i32 0, i32 1, !dbg !12627
  %9 = load %struct.rtx_def*, %struct.rtx_def** %loc1, align 8, !dbg !12627
  %10 = load %struct.variable_def*, %struct.variable_def** %s2var.addr, align 8, !dbg !12628
  %11 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %s2set, align 8, !dbg !12629
  %vars = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %11, i32 0, i32 2, !dbg !12630
  %12 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars, align 8, !dbg !12630
  %call = call %struct.htab* @shared_hash_htab(%struct.shared_hash_def* %12), !dbg !12631
  %call2 = call %struct.location_chain_def* @find_loc_in_1pdv(%struct.rtx_def* %9, %struct.variable_def* %10, %struct.htab* %call), !dbg !12632
  store %struct.location_chain_def* %call2, %struct.location_chain_def** %found, align 8, !dbg !12633
  %tobool3 = icmp ne %struct.location_chain_def* %call2, null, !dbg !12633
  br i1 %tobool3, label %if.then4, label %if.end10, !dbg !12634

if.then4:                                         ; preds = %if.end
  %13 = load %struct.location_chain_def**, %struct.location_chain_def*** %dest.addr, align 8, !dbg !12635
  %14 = load %struct.location_chain_def*, %struct.location_chain_def** %s1node.addr, align 8, !dbg !12637
  %loc5 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %14, i32 0, i32 1, !dbg !12638
  %15 = load %struct.rtx_def*, %struct.rtx_def** %loc5, align 8, !dbg !12638
  %16 = load %struct.location_chain_def*, %struct.location_chain_def** %s1node.addr, align 8, !dbg !12639
  %init = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %16, i32 0, i32 3, !dbg !12639
  %17 = load i32, i32* %init, align 8, !dbg !12639
  %18 = load %struct.location_chain_def*, %struct.location_chain_def** %found, align 8, !dbg !12639
  %init6 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %18, i32 0, i32 3, !dbg !12639
  %19 = load i32, i32* %init6, align 8, !dbg !12639
  %cmp7 = icmp ult i32 %17, %19, !dbg !12639
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !12639

cond.true:                                        ; preds = %if.then4
  %20 = load %struct.location_chain_def*, %struct.location_chain_def** %s1node.addr, align 8, !dbg !12639
  %init8 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %20, i32 0, i32 3, !dbg !12639
  %21 = load i32, i32* %init8, align 8, !dbg !12639
  br label %cond.end, !dbg !12639

cond.false:                                       ; preds = %if.then4
  %22 = load %struct.location_chain_def*, %struct.location_chain_def** %found, align 8, !dbg !12639
  %init9 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %22, i32 0, i32 3, !dbg !12639
  %23 = load i32, i32* %init9, align 8, !dbg !12639
  br label %cond.end, !dbg !12639

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %21, %cond.true ], [ %23, %cond.false ], !dbg !12639
  call void @insert_into_intersection(%struct.location_chain_def** %13, %struct.rtx_def* %15, i32 %cond), !dbg !12640
  br label %for.inc, !dbg !12641

if.end10:                                         ; preds = %if.end
  %24 = load %struct.location_chain_def*, %struct.location_chain_def** %s1node.addr, align 8, !dbg !12642
  %loc11 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %24, i32 0, i32 1, !dbg !12642
  %25 = load %struct.rtx_def*, %struct.rtx_def** %loc11, align 8, !dbg !12642
  %26 = bitcast %struct.rtx_def* %25 to i32*, !dbg !12642
  %bf.load = load i32, i32* %26, align 8, !dbg !12642
  %bf.clear = and i32 %bf.load, 65535, !dbg !12642
  %cmp12 = icmp eq i32 %bf.clear, 1, !dbg !12644
  br i1 %cmp12, label %land.lhs.true, label %if.end35, !dbg !12645

land.lhs.true:                                    ; preds = %if.end10
  %27 = load %struct.location_chain_def*, %struct.location_chain_def** %s1node.addr, align 8, !dbg !12646
  %loc13 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %27, i32 0, i32 1, !dbg !12646
  %28 = load %struct.rtx_def*, %struct.rtx_def** %loc13, align 8, !dbg !12646
  %29 = bitcast %struct.rtx_def* %28 to i32*, !dbg !12646
  %bf.load14 = load i32, i32* %29, align 8, !dbg !12646
  %bf.lshr = lshr i32 %bf.load14, 29, !dbg !12646
  %bf.clear15 = and i32 %bf.lshr, 1, !dbg !12646
  %tobool16 = icmp ne i32 %bf.clear15, 0, !dbg !12646
  br i1 %tobool16, label %if.end35, label %if.then17, !dbg !12647

if.then17:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i8** %dv, metadata !12648, metadata !DIExpression()), !dbg !12650
  %30 = load %struct.location_chain_def*, %struct.location_chain_def** %s1node.addr, align 8, !dbg !12651
  %loc18 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %30, i32 0, i32 1, !dbg !12652
  %31 = load %struct.rtx_def*, %struct.rtx_def** %loc18, align 8, !dbg !12652
  %call19 = call i8* @dv_from_value(%struct.rtx_def* %31), !dbg !12653
  store i8* %call19, i8** %dv, align 8, !dbg !12650
  call void @llvm.dbg.declare(metadata %struct.variable_def** %svar, metadata !12654, metadata !DIExpression()), !dbg !12655
  %32 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %s1set, align 8, !dbg !12656
  %vars20 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %32, i32 0, i32 2, !dbg !12657
  %33 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars20, align 8, !dbg !12657
  %34 = load i8*, i8** %dv, align 8, !dbg !12658
  %call21 = call %struct.variable_def* @shared_hash_find(%struct.shared_hash_def* %33, i8* %34), !dbg !12659
  store %struct.variable_def* %call21, %struct.variable_def** %svar, align 8, !dbg !12655
  %35 = load %struct.variable_def*, %struct.variable_def** %svar, align 8, !dbg !12660
  %tobool22 = icmp ne %struct.variable_def* %35, null, !dbg !12660
  br i1 %tobool22, label %if.then23, label %if.end34, !dbg !12662

if.then23:                                        ; preds = %if.then17
  %36 = load %struct.variable_def*, %struct.variable_def** %svar, align 8, !dbg !12663
  %n_var_parts = getelementptr inbounds %struct.variable_def, %struct.variable_def* %36, i32 0, i32 2, !dbg !12666
  %37 = load i8, i8* %n_var_parts, align 4, !dbg !12666
  %conv = sext i8 %37 to i32, !dbg !12663
  %cmp24 = icmp eq i32 %conv, 1, !dbg !12667
  br i1 %cmp24, label %if.then26, label %if.end33, !dbg !12668

if.then26:                                        ; preds = %if.then23
  %38 = load %struct.location_chain_def*, %struct.location_chain_def** %s1node.addr, align 8, !dbg !12669
  %loc27 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %38, i32 0, i32 1, !dbg !12669
  %39 = load %struct.rtx_def*, %struct.rtx_def** %loc27, align 8, !dbg !12669
  %40 = bitcast %struct.rtx_def* %39 to i32*, !dbg !12669
  %bf.load28 = load i32, i32* %40, align 8, !dbg !12671
  %bf.clear29 = and i32 %bf.load28, -536870913, !dbg !12671
  %bf.set = or i32 %bf.clear29, 536870912, !dbg !12671
  store i32 %bf.set, i32* %40, align 8, !dbg !12671
  %41 = load %struct.rtx_def*, %struct.rtx_def** %val.addr, align 8, !dbg !12672
  %42 = load %struct.location_chain_def**, %struct.location_chain_def*** %dest.addr, align 8, !dbg !12673
  %43 = load %struct.dfset_merge*, %struct.dfset_merge** %dsm.addr, align 8, !dbg !12674
  %44 = load %struct.variable_def*, %struct.variable_def** %svar, align 8, !dbg !12675
  %var_part = getelementptr inbounds %struct.variable_def, %struct.variable_def* %44, i32 0, i32 5, !dbg !12676
  %arrayidx = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part, i64 0, i64 0, !dbg !12675
  %loc_chain = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx, i32 0, i32 0, !dbg !12677
  %45 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain, align 8, !dbg !12677
  %46 = load %struct.variable_def*, %struct.variable_def** %s2var.addr, align 8, !dbg !12678
  call void @intersect_loc_chains(%struct.rtx_def* %41, %struct.location_chain_def** %42, %struct.dfset_merge* %43, %struct.location_chain_def* %45, %struct.variable_def* %46), !dbg !12679
  %47 = load %struct.location_chain_def*, %struct.location_chain_def** %s1node.addr, align 8, !dbg !12680
  %loc30 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %47, i32 0, i32 1, !dbg !12680
  %48 = load %struct.rtx_def*, %struct.rtx_def** %loc30, align 8, !dbg !12680
  %49 = bitcast %struct.rtx_def* %48 to i32*, !dbg !12680
  %bf.load31 = load i32, i32* %49, align 8, !dbg !12681
  %bf.clear32 = and i32 %bf.load31, -536870913, !dbg !12681
  store i32 %bf.clear32, i32* %49, align 8, !dbg !12681
  br label %if.end33, !dbg !12682

if.end33:                                         ; preds = %if.then26, %if.then23
  br label %if.end34, !dbg !12683

if.end34:                                         ; preds = %if.end33, %if.then17
  br label %if.end35, !dbg !12684

if.end35:                                         ; preds = %if.end34, %land.lhs.true, %if.end10
  br label %for.inc, !dbg !12685

for.inc:                                          ; preds = %if.end35, %cond.end, %if.then
  %50 = load %struct.location_chain_def*, %struct.location_chain_def** %s1node.addr, align 8, !dbg !12686
  %next = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %50, i32 0, i32 0, !dbg !12687
  %51 = load %struct.location_chain_def*, %struct.location_chain_def** %next, align 8, !dbg !12687
  store %struct.location_chain_def* %51, %struct.location_chain_def** %s1node.addr, align 8, !dbg !12688
  br label %for.cond, !dbg !12689, !llvm.loop !12690

for.end:                                          ; preds = %for.cond
  ret void, !dbg !12692
}

; Function Attrs: noinline nounwind uwtable
define internal i8** @delete_slot_part(%struct.dataflow_set_def* %set, %struct.rtx_def* %loc, i8** %slot, i64 %offset) #0 !dbg !12693 {
entry:
  %set.addr = alloca %struct.dataflow_set_def*, align 8
  %loc.addr = alloca %struct.rtx_def*, align 8
  %slot.addr = alloca i8**, align 8
  %offset.addr = alloca i64, align 8
  %var = alloca %struct.variable_def*, align 8
  %pos = alloca i32, align 4
  %node = alloca %struct.location_chain_def*, align 8
  %next = alloca %struct.location_chain_def*, align 8
  %nextp = alloca %struct.location_chain_def**, align 8
  %changed = alloca i8, align 1
  store %struct.dataflow_set_def* %set, %struct.dataflow_set_def** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %set.addr, metadata !12696, metadata !DIExpression()), !dbg !12697
  store %struct.rtx_def* %loc, %struct.rtx_def** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %loc.addr, metadata !12698, metadata !DIExpression()), !dbg !12699
  store i8** %slot, i8*** %slot.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %slot.addr, metadata !12700, metadata !DIExpression()), !dbg !12701
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !12702, metadata !DIExpression()), !dbg !12703
  call void @llvm.dbg.declare(metadata %struct.variable_def** %var, metadata !12704, metadata !DIExpression()), !dbg !12705
  %0 = load i8**, i8*** %slot.addr, align 8, !dbg !12706
  %1 = load i8*, i8** %0, align 8, !dbg !12707
  %2 = bitcast i8* %1 to %struct.variable_def*, !dbg !12708
  store %struct.variable_def* %2, %struct.variable_def** %var, align 8, !dbg !12705
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !12709, metadata !DIExpression()), !dbg !12710
  %3 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !12711
  %4 = load i64, i64* %offset.addr, align 8, !dbg !12712
  %call = call i32 @find_variable_location_part(%struct.variable_def* %3, i64 %4, i32* null), !dbg !12713
  store i32 %call, i32* %pos, align 4, !dbg !12710
  %5 = load i32, i32* %pos, align 4, !dbg !12714
  %cmp = icmp sge i32 %5, 0, !dbg !12716
  br i1 %cmp, label %if.then, label %if.end100, !dbg !12717

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %node, metadata !12718, metadata !DIExpression()), !dbg !12720
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %next, metadata !12721, metadata !DIExpression()), !dbg !12722
  call void @llvm.dbg.declare(metadata %struct.location_chain_def*** %nextp, metadata !12723, metadata !DIExpression()), !dbg !12724
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !12725, metadata !DIExpression()), !dbg !12726
  %6 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !12727
  %7 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !12729
  %vars = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %7, i32 0, i32 2, !dbg !12730
  %8 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars, align 8, !dbg !12730
  %call1 = call zeroext i8 @shared_var_p(%struct.variable_def* %6, %struct.shared_hash_def* %8), !dbg !12731
  %tobool = icmp ne i8 %call1, 0, !dbg !12731
  br i1 %tobool, label %if.then2, label %if.end20, !dbg !12732

if.then2:                                         ; preds = %if.then
  %9 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !12733
  %var_part = getelementptr inbounds %struct.variable_def, %struct.variable_def* %9, i32 0, i32 5, !dbg !12736
  %10 = load i32, i32* %pos, align 4, !dbg !12737
  %idxprom = sext i32 %10 to i64, !dbg !12733
  %arrayidx = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part, i64 0, i64 %idxprom, !dbg !12733
  %loc_chain = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx, i32 0, i32 0, !dbg !12738
  %11 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain, align 8, !dbg !12738
  store %struct.location_chain_def* %11, %struct.location_chain_def** %node, align 8, !dbg !12739
  br label %for.cond, !dbg !12740

for.cond:                                         ; preds = %for.inc, %if.then2
  %12 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !12741
  %tobool3 = icmp ne %struct.location_chain_def* %12, null, !dbg !12743
  br i1 %tobool3, label %for.body, label %for.end, !dbg !12743

for.body:                                         ; preds = %for.cond
  %13 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !12744
  %loc4 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %13, i32 0, i32 1, !dbg !12744
  %14 = load %struct.rtx_def*, %struct.rtx_def** %loc4, align 8, !dbg !12744
  %15 = bitcast %struct.rtx_def* %14 to i32*, !dbg !12744
  %bf.load = load i32, i32* %15, align 8, !dbg !12744
  %bf.clear = and i32 %bf.load, 65535, !dbg !12744
  %cmp5 = icmp eq i32 %bf.clear, 37, !dbg !12744
  br i1 %cmp5, label %land.lhs.true, label %lor.lhs.false, !dbg !12747

land.lhs.true:                                    ; preds = %for.body
  %16 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !12748
  %17 = bitcast %struct.rtx_def* %16 to i32*, !dbg !12748
  %bf.load6 = load i32, i32* %17, align 8, !dbg !12748
  %bf.clear7 = and i32 %bf.load6, 65535, !dbg !12748
  %cmp8 = icmp eq i32 %bf.clear7, 37, !dbg !12748
  br i1 %cmp8, label %land.lhs.true9, label %lor.lhs.false, !dbg !12749

land.lhs.true9:                                   ; preds = %land.lhs.true
  %18 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !12750
  %loc10 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %18, i32 0, i32 1, !dbg !12750
  %19 = load %struct.rtx_def*, %struct.rtx_def** %loc10, align 8, !dbg !12750
  %call11 = call i32 @rhs_regno(%struct.rtx_def* %19), !dbg !12750
  %20 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !12751
  %call12 = call i32 @rhs_regno(%struct.rtx_def* %20), !dbg !12751
  %cmp13 = icmp eq i32 %call11, %call12, !dbg !12752
  br i1 %cmp13, label %if.then17, label %lor.lhs.false, !dbg !12753

lor.lhs.false:                                    ; preds = %land.lhs.true9, %land.lhs.true, %for.body
  %21 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !12754
  %loc14 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %21, i32 0, i32 1, !dbg !12755
  %22 = load %struct.rtx_def*, %struct.rtx_def** %loc14, align 8, !dbg !12755
  %23 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !12756
  %call15 = call i32 @rtx_equal_p(%struct.rtx_def* %22, %struct.rtx_def* %23), !dbg !12757
  %tobool16 = icmp ne i32 %call15, 0, !dbg !12757
  br i1 %tobool16, label %if.then17, label %if.end, !dbg !12758

if.then17:                                        ; preds = %lor.lhs.false, %land.lhs.true9
  %24 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !12759
  %25 = load i8**, i8*** %slot.addr, align 8, !dbg !12761
  %26 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !12762
  %call18 = call i8** @unshare_variable(%struct.dataflow_set_def* %24, i8** %25, %struct.variable_def* %26, i32 0), !dbg !12763
  store i8** %call18, i8*** %slot.addr, align 8, !dbg !12764
  %27 = load i8**, i8*** %slot.addr, align 8, !dbg !12765
  %28 = load i8*, i8** %27, align 8, !dbg !12766
  %29 = bitcast i8* %28 to %struct.variable_def*, !dbg !12767
  store %struct.variable_def* %29, %struct.variable_def** %var, align 8, !dbg !12768
  br label %for.end, !dbg !12769

if.end:                                           ; preds = %lor.lhs.false
  br label %for.inc, !dbg !12770

for.inc:                                          ; preds = %if.end
  %30 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !12771
  %next19 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %30, i32 0, i32 0, !dbg !12772
  %31 = load %struct.location_chain_def*, %struct.location_chain_def** %next19, align 8, !dbg !12772
  store %struct.location_chain_def* %31, %struct.location_chain_def** %node, align 8, !dbg !12773
  br label %for.cond, !dbg !12774, !llvm.loop !12775

for.end:                                          ; preds = %if.then17, %for.cond
  br label %if.end20, !dbg !12777

if.end20:                                         ; preds = %for.end, %if.then
  store i8 0, i8* %changed, align 1, !dbg !12778
  %32 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !12779
  %var_part21 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %32, i32 0, i32 5, !dbg !12780
  %33 = load i32, i32* %pos, align 4, !dbg !12781
  %idxprom22 = sext i32 %33 to i64, !dbg !12779
  %arrayidx23 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part21, i64 0, i64 %idxprom22, !dbg !12779
  %loc_chain24 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx23, i32 0, i32 0, !dbg !12782
  store %struct.location_chain_def** %loc_chain24, %struct.location_chain_def*** %nextp, align 8, !dbg !12783
  %34 = load %struct.location_chain_def**, %struct.location_chain_def*** %nextp, align 8, !dbg !12784
  %35 = load %struct.location_chain_def*, %struct.location_chain_def** %34, align 8, !dbg !12786
  store %struct.location_chain_def* %35, %struct.location_chain_def** %node, align 8, !dbg !12787
  br label %for.cond25, !dbg !12788

for.cond25:                                       ; preds = %for.inc73, %if.end20
  %36 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !12789
  %tobool26 = icmp ne %struct.location_chain_def* %36, null, !dbg !12791
  br i1 %tobool26, label %for.body27, label %for.end74, !dbg !12791

for.body27:                                       ; preds = %for.cond25
  %37 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !12792
  %next28 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %37, i32 0, i32 0, !dbg !12794
  %38 = load %struct.location_chain_def*, %struct.location_chain_def** %next28, align 8, !dbg !12794
  store %struct.location_chain_def* %38, %struct.location_chain_def** %next, align 8, !dbg !12795
  %39 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !12796
  %loc29 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %39, i32 0, i32 1, !dbg !12796
  %40 = load %struct.rtx_def*, %struct.rtx_def** %loc29, align 8, !dbg !12796
  %41 = bitcast %struct.rtx_def* %40 to i32*, !dbg !12796
  %bf.load30 = load i32, i32* %41, align 8, !dbg !12796
  %bf.clear31 = and i32 %bf.load30, 65535, !dbg !12796
  %cmp32 = icmp eq i32 %bf.clear31, 37, !dbg !12796
  br i1 %cmp32, label %land.lhs.true33, label %lor.lhs.false42, !dbg !12798

land.lhs.true33:                                  ; preds = %for.body27
  %42 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !12799
  %43 = bitcast %struct.rtx_def* %42 to i32*, !dbg !12799
  %bf.load34 = load i32, i32* %43, align 8, !dbg !12799
  %bf.clear35 = and i32 %bf.load34, 65535, !dbg !12799
  %cmp36 = icmp eq i32 %bf.clear35, 37, !dbg !12799
  br i1 %cmp36, label %land.lhs.true37, label %lor.lhs.false42, !dbg !12800

land.lhs.true37:                                  ; preds = %land.lhs.true33
  %44 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !12801
  %loc38 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %44, i32 0, i32 1, !dbg !12801
  %45 = load %struct.rtx_def*, %struct.rtx_def** %loc38, align 8, !dbg !12801
  %call39 = call i32 @rhs_regno(%struct.rtx_def* %45), !dbg !12801
  %46 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !12802
  %call40 = call i32 @rhs_regno(%struct.rtx_def* %46), !dbg !12802
  %cmp41 = icmp eq i32 %call39, %call40, !dbg !12803
  br i1 %cmp41, label %if.then46, label %lor.lhs.false42, !dbg !12804

lor.lhs.false42:                                  ; preds = %land.lhs.true37, %land.lhs.true33, %for.body27
  %47 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !12805
  %loc43 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %47, i32 0, i32 1, !dbg !12806
  %48 = load %struct.rtx_def*, %struct.rtx_def** %loc43, align 8, !dbg !12806
  %49 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !12807
  %call44 = call i32 @rtx_equal_p(%struct.rtx_def* %48, %struct.rtx_def* %49), !dbg !12808
  %tobool45 = icmp ne i32 %call44, 0, !dbg !12808
  br i1 %tobool45, label %if.then46, label %if.else, !dbg !12809

if.then46:                                        ; preds = %lor.lhs.false42, %land.lhs.true37
  %50 = load i8, i8* @emit_notes, align 1, !dbg !12810
  %conv = zext i8 %50 to i32, !dbg !12810
  %tobool47 = icmp ne i32 %conv, 0, !dbg !12810
  br i1 %tobool47, label %land.lhs.true48, label %if.end58, !dbg !12813

land.lhs.true48:                                  ; preds = %if.then46
  %51 = load i32, i32* %pos, align 4, !dbg !12814
  %cmp49 = icmp eq i32 %51, 0, !dbg !12815
  br i1 %cmp49, label %land.lhs.true51, label %if.end58, !dbg !12816

land.lhs.true51:                                  ; preds = %land.lhs.true48
  %52 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !12817
  %dv = getelementptr inbounds %struct.variable_def, %struct.variable_def* %52, i32 0, i32 0, !dbg !12818
  %53 = load i8*, i8** %dv, align 8, !dbg !12818
  %call52 = call zeroext i8 @dv_onepart_p(i8* %53), !dbg !12819
  %conv53 = zext i8 %call52 to i32, !dbg !12819
  %tobool54 = icmp ne i32 %conv53, 0, !dbg !12819
  br i1 %tobool54, label %if.then55, label %if.end58, !dbg !12820

if.then55:                                        ; preds = %land.lhs.true51
  %54 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !12821
  %dv56 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %54, i32 0, i32 0, !dbg !12822
  %55 = load i8*, i8** %dv56, align 8, !dbg !12822
  %56 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !12823
  %loc57 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %56, i32 0, i32 1, !dbg !12824
  %57 = load %struct.rtx_def*, %struct.rtx_def** %loc57, align 8, !dbg !12824
  call void @remove_value_chains(i8* %55, %struct.rtx_def* %57), !dbg !12825
  br label %if.end58, !dbg !12825

if.end58:                                         ; preds = %if.then55, %land.lhs.true51, %land.lhs.true48, %if.then46
  %58 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !12826
  %var_part59 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %58, i32 0, i32 5, !dbg !12828
  %59 = load i32, i32* %pos, align 4, !dbg !12829
  %idxprom60 = sext i32 %59 to i64, !dbg !12826
  %arrayidx61 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part59, i64 0, i64 %idxprom60, !dbg !12826
  %cur_loc = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx61, i32 0, i32 1, !dbg !12830
  %60 = load %struct.rtx_def*, %struct.rtx_def** %cur_loc, align 8, !dbg !12830
  %61 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !12831
  %loc62 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %61, i32 0, i32 1, !dbg !12832
  %62 = load %struct.rtx_def*, %struct.rtx_def** %loc62, align 8, !dbg !12832
  %cmp63 = icmp eq %struct.rtx_def* %60, %62, !dbg !12833
  br i1 %cmp63, label %if.then65, label %if.end70, !dbg !12834

if.then65:                                        ; preds = %if.end58
  store i8 1, i8* %changed, align 1, !dbg !12835
  %63 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !12837
  %var_part66 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %63, i32 0, i32 5, !dbg !12838
  %64 = load i32, i32* %pos, align 4, !dbg !12839
  %idxprom67 = sext i32 %64 to i64, !dbg !12837
  %arrayidx68 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part66, i64 0, i64 %idxprom67, !dbg !12837
  %cur_loc69 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx68, i32 0, i32 1, !dbg !12840
  store %struct.rtx_def* null, %struct.rtx_def** %cur_loc69, align 8, !dbg !12841
  %65 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !12842
  %cur_loc_changed = getelementptr inbounds %struct.variable_def, %struct.variable_def* %65, i32 0, i32 3, !dbg !12843
  store i8 1, i8* %cur_loc_changed, align 1, !dbg !12844
  br label %if.end70, !dbg !12845

if.end70:                                         ; preds = %if.then65, %if.end58
  %66 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @loc_chain_pool, align 8, !dbg !12846
  %67 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !12847
  %68 = bitcast %struct.location_chain_def* %67 to i8*, !dbg !12847
  call void @pool_free(%struct.alloc_pool_def* %66, i8* %68), !dbg !12848
  %69 = load %struct.location_chain_def*, %struct.location_chain_def** %next, align 8, !dbg !12849
  %70 = load %struct.location_chain_def**, %struct.location_chain_def*** %nextp, align 8, !dbg !12850
  store %struct.location_chain_def* %69, %struct.location_chain_def** %70, align 8, !dbg !12851
  br label %for.end74, !dbg !12852

if.else:                                          ; preds = %lor.lhs.false42
  %71 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !12853
  %next71 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %71, i32 0, i32 0, !dbg !12854
  store %struct.location_chain_def** %next71, %struct.location_chain_def*** %nextp, align 8, !dbg !12855
  br label %if.end72

if.end72:                                         ; preds = %if.else
  br label %for.inc73, !dbg !12856

for.inc73:                                        ; preds = %if.end72
  %72 = load %struct.location_chain_def*, %struct.location_chain_def** %next, align 8, !dbg !12857
  store %struct.location_chain_def* %72, %struct.location_chain_def** %node, align 8, !dbg !12858
  br label %for.cond25, !dbg !12859, !llvm.loop !12860

for.end74:                                        ; preds = %if.end70, %for.cond25
  %73 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !12862
  %var_part75 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %73, i32 0, i32 5, !dbg !12864
  %74 = load i32, i32* %pos, align 4, !dbg !12865
  %idxprom76 = sext i32 %74 to i64, !dbg !12862
  %arrayidx77 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part75, i64 0, i64 %idxprom76, !dbg !12862
  %loc_chain78 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx77, i32 0, i32 0, !dbg !12866
  %75 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain78, align 8, !dbg !12866
  %cmp79 = icmp eq %struct.location_chain_def* %75, null, !dbg !12867
  br i1 %cmp79, label %if.then81, label %if.end96, !dbg !12868

if.then81:                                        ; preds = %for.end74
  store i8 1, i8* %changed, align 1, !dbg !12869
  %76 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !12871
  %n_var_parts = getelementptr inbounds %struct.variable_def, %struct.variable_def* %76, i32 0, i32 2, !dbg !12872
  %77 = load i8, i8* %n_var_parts, align 4, !dbg !12873
  %dec = add i8 %77, -1, !dbg !12873
  store i8 %dec, i8* %n_var_parts, align 4, !dbg !12873
  %78 = load i8, i8* @emit_notes, align 1, !dbg !12874
  %tobool82 = icmp ne i8 %78, 0, !dbg !12874
  br i1 %tobool82, label %if.then83, label %if.end85, !dbg !12876

if.then83:                                        ; preds = %if.then81
  %79 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !12877
  %cur_loc_changed84 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %79, i32 0, i32 3, !dbg !12878
  store i8 1, i8* %cur_loc_changed84, align 1, !dbg !12879
  br label %if.end85, !dbg !12877

if.end85:                                         ; preds = %if.then83, %if.then81
  br label %while.cond, !dbg !12880

while.cond:                                       ; preds = %while.body, %if.end85
  %80 = load i32, i32* %pos, align 4, !dbg !12881
  %81 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !12882
  %n_var_parts86 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %81, i32 0, i32 2, !dbg !12883
  %82 = load i8, i8* %n_var_parts86, align 4, !dbg !12883
  %conv87 = sext i8 %82 to i32, !dbg !12882
  %cmp88 = icmp slt i32 %80, %conv87, !dbg !12884
  br i1 %cmp88, label %while.body, label %while.end, !dbg !12880

while.body:                                       ; preds = %while.cond
  %83 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !12885
  %var_part90 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %83, i32 0, i32 5, !dbg !12887
  %84 = load i32, i32* %pos, align 4, !dbg !12888
  %idxprom91 = sext i32 %84 to i64, !dbg !12885
  %arrayidx92 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part90, i64 0, i64 %idxprom91, !dbg !12885
  %85 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !12889
  %var_part93 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %85, i32 0, i32 5, !dbg !12890
  %86 = load i32, i32* %pos, align 4, !dbg !12891
  %add = add nsw i32 %86, 1, !dbg !12892
  %idxprom94 = sext i32 %add to i64, !dbg !12889
  %arrayidx95 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part93, i64 0, i64 %idxprom94, !dbg !12889
  %87 = bitcast %struct.variable_part_def* %arrayidx92 to i8*, !dbg !12889
  %88 = bitcast %struct.variable_part_def* %arrayidx95 to i8*, !dbg !12889
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 8 %88, i64 24, i1 false), !dbg !12889
  %89 = load i32, i32* %pos, align 4, !dbg !12893
  %inc = add nsw i32 %89, 1, !dbg !12893
  store i32 %inc, i32* %pos, align 4, !dbg !12893
  br label %while.cond, !dbg !12880, !llvm.loop !12894

while.end:                                        ; preds = %while.cond
  br label %if.end96, !dbg !12896

if.end96:                                         ; preds = %while.end, %for.end74
  %90 = load i8, i8* %changed, align 1, !dbg !12897
  %tobool97 = icmp ne i8 %90, 0, !dbg !12897
  br i1 %tobool97, label %if.then98, label %if.end99, !dbg !12899

if.then98:                                        ; preds = %if.end96
  %91 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !12900
  %92 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !12901
  call void @variable_was_changed(%struct.variable_def* %91, %struct.dataflow_set_def* %92), !dbg !12902
  br label %if.end99, !dbg !12902

if.end99:                                         ; preds = %if.then98, %if.end96
  br label %if.end100, !dbg !12903

if.end100:                                        ; preds = %if.end99, %entry
  %93 = load i8**, i8*** %slot.addr, align 8, !dbg !12904
  ret i8** %93, !dbg !12905
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @canonicalize_values_star(i8** %slot, i8* %data) #0 !dbg !12906 {
entry:
  %retval = alloca i32, align 4
  %slot.addr = alloca i8**, align 8
  %data.addr = alloca i8*, align 8
  %set = alloca %struct.dataflow_set_def*, align 8
  %var = alloca %struct.variable_def*, align 8
  %dv = alloca i8*, align 8
  %node = alloca %struct.location_chain_def*, align 8
  %cdv = alloca i8*, align 8
  %val = alloca %struct.rtx_def*, align 8
  %cval = alloca %struct.rtx_def*, align 8
  %cslot = alloca i8**, align 8
  %has_value = alloca i8, align 1
  %has_marks = alloca i8, align 1
  %ndv = alloca i8*, align 8
  %list = alloca %struct.attrs_def*, align 8
  %listp = alloca %struct.attrs_def**, align 8
  store i8** %slot, i8*** %slot.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %slot.addr, metadata !12907, metadata !DIExpression()), !dbg !12908
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !12909, metadata !DIExpression()), !dbg !12910
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %set, metadata !12911, metadata !DIExpression()), !dbg !12912
  %0 = load i8*, i8** %data.addr, align 8, !dbg !12913
  %1 = bitcast i8* %0 to %struct.dataflow_set_def*, !dbg !12914
  store %struct.dataflow_set_def* %1, %struct.dataflow_set_def** %set, align 8, !dbg !12912
  call void @llvm.dbg.declare(metadata %struct.variable_def** %var, metadata !12915, metadata !DIExpression()), !dbg !12916
  %2 = load i8**, i8*** %slot.addr, align 8, !dbg !12917
  %3 = load i8*, i8** %2, align 8, !dbg !12918
  %4 = bitcast i8* %3 to %struct.variable_def*, !dbg !12919
  store %struct.variable_def* %4, %struct.variable_def** %var, align 8, !dbg !12916
  call void @llvm.dbg.declare(metadata i8** %dv, metadata !12920, metadata !DIExpression()), !dbg !12921
  %5 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !12922
  %dv1 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %5, i32 0, i32 0, !dbg !12923
  %6 = load i8*, i8** %dv1, align 8, !dbg !12923
  store i8* %6, i8** %dv, align 8, !dbg !12921
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %node, metadata !12924, metadata !DIExpression()), !dbg !12925
  call void @llvm.dbg.declare(metadata i8** %cdv, metadata !12926, metadata !DIExpression()), !dbg !12927
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %val, metadata !12928, metadata !DIExpression()), !dbg !12929
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %cval, metadata !12930, metadata !DIExpression()), !dbg !12931
  call void @llvm.dbg.declare(metadata i8*** %cslot, metadata !12932, metadata !DIExpression()), !dbg !12933
  call void @llvm.dbg.declare(metadata i8* %has_value, metadata !12934, metadata !DIExpression()), !dbg !12935
  call void @llvm.dbg.declare(metadata i8* %has_marks, metadata !12936, metadata !DIExpression()), !dbg !12937
  %7 = load i8*, i8** %dv, align 8, !dbg !12938
  %call = call zeroext i8 @dv_onepart_p(i8* %7), !dbg !12940
  %tobool = icmp ne i8 %call, 0, !dbg !12940
  br i1 %tobool, label %if.end, label %if.then, !dbg !12941

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !12942
  br label %return, !dbg !12942

if.end:                                           ; preds = %entry
  %8 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !12943
  %n_var_parts = getelementptr inbounds %struct.variable_def, %struct.variable_def* %8, i32 0, i32 2, !dbg !12943
  %9 = load i8, i8* %n_var_parts, align 4, !dbg !12943
  %conv = sext i8 %9 to i32, !dbg !12943
  %cmp = icmp eq i32 %conv, 1, !dbg !12943
  br i1 %cmp, label %cond.false, label %cond.true, !dbg !12943

cond.true:                                        ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 3068, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !12943
  br label %cond.end, !dbg !12943

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !12943

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !12943
  %10 = load i8*, i8** %dv, align 8, !dbg !12944
  %call3 = call zeroext i8 @dv_is_value_p(i8* %10), !dbg !12946
  %tobool4 = icmp ne i8 %call3, 0, !dbg !12946
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !12947

if.then5:                                         ; preds = %cond.end
  %11 = load i8*, i8** %dv, align 8, !dbg !12948
  %call6 = call %struct.rtx_def* @dv_as_value(i8* %11), !dbg !12950
  store %struct.rtx_def* %call6, %struct.rtx_def** %cval, align 8, !dbg !12951
  %12 = load %struct.rtx_def*, %struct.rtx_def** %cval, align 8, !dbg !12952
  %13 = bitcast %struct.rtx_def* %12 to i32*, !dbg !12952
  %bf.load = load i32, i32* %13, align 8, !dbg !12952
  %bf.lshr = lshr i32 %bf.load, 29, !dbg !12952
  %bf.clear = and i32 %bf.lshr, 1, !dbg !12952
  %tobool7 = icmp ne i32 %bf.clear, 0, !dbg !12952
  br i1 %tobool7, label %if.end9, label %if.then8, !dbg !12954

if.then8:                                         ; preds = %if.then5
  store i32 1, i32* %retval, align 4, !dbg !12955
  br label %return, !dbg !12955

if.end9:                                          ; preds = %if.then5
  %14 = load %struct.rtx_def*, %struct.rtx_def** %cval, align 8, !dbg !12956
  %15 = bitcast %struct.rtx_def* %14 to i32*, !dbg !12956
  %bf.load10 = load i32, i32* %15, align 8, !dbg !12957
  %bf.clear11 = and i32 %bf.load10, -536870913, !dbg !12957
  store i32 %bf.clear11, i32* %15, align 8, !dbg !12957
  br label %if.end12, !dbg !12958

if.else:                                          ; preds = %cond.end
  store %struct.rtx_def* null, %struct.rtx_def** %cval, align 8, !dbg !12959
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.end9
  br label %restart, !dbg !12960

restart:                                          ; preds = %cond.end107, %if.end12
  call void @llvm.dbg.label(metadata !12961), !dbg !12962
  %16 = load %struct.rtx_def*, %struct.rtx_def** %cval, align 8, !dbg !12963
  store %struct.rtx_def* %16, %struct.rtx_def** %val, align 8, !dbg !12964
  store i8 0, i8* %has_value, align 1, !dbg !12965
  store i8 0, i8* %has_marks, align 1, !dbg !12966
  %17 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !12967
  %n_var_parts13 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %17, i32 0, i32 2, !dbg !12967
  %18 = load i8, i8* %n_var_parts13, align 4, !dbg !12967
  %conv14 = sext i8 %18 to i32, !dbg !12967
  %cmp15 = icmp eq i32 %conv14, 1, !dbg !12967
  br i1 %cmp15, label %cond.false18, label %cond.true17, !dbg !12967

cond.true17:                                      ; preds = %restart
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 3085, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !12967
  br label %cond.end19, !dbg !12967

cond.false18:                                     ; preds = %restart
  br label %cond.end19, !dbg !12967

cond.end19:                                       ; preds = %cond.false18, %cond.true17
  %cond20 = phi i32 [ 0, %cond.true17 ], [ 0, %cond.false18 ], !dbg !12967
  %19 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !12968
  %var_part = getelementptr inbounds %struct.variable_def, %struct.variable_def* %19, i32 0, i32 5, !dbg !12970
  %arrayidx = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part, i64 0, i64 0, !dbg !12968
  %loc_chain = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx, i32 0, i32 0, !dbg !12971
  %20 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain, align 8, !dbg !12971
  store %struct.location_chain_def* %20, %struct.location_chain_def** %node, align 8, !dbg !12972
  br label %for.cond, !dbg !12973

for.cond:                                         ; preds = %for.inc, %cond.end19
  %21 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !12974
  %tobool21 = icmp ne %struct.location_chain_def* %21, null, !dbg !12976
  br i1 %tobool21, label %for.body, label %for.end, !dbg !12976

for.body:                                         ; preds = %for.cond
  %22 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !12977
  %loc = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %22, i32 0, i32 1, !dbg !12977
  %23 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !12977
  %24 = bitcast %struct.rtx_def* %23 to i32*, !dbg !12977
  %bf.load22 = load i32, i32* %24, align 8, !dbg !12977
  %bf.clear23 = and i32 %bf.load22, 65535, !dbg !12977
  %cmp24 = icmp eq i32 %bf.clear23, 1, !dbg !12979
  br i1 %cmp24, label %if.then26, label %if.end40, !dbg !12980

if.then26:                                        ; preds = %for.body
  store i8 1, i8* %has_value, align 1, !dbg !12981
  %25 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !12983
  %loc27 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %25, i32 0, i32 1, !dbg !12983
  %26 = load %struct.rtx_def*, %struct.rtx_def** %loc27, align 8, !dbg !12983
  %27 = bitcast %struct.rtx_def* %26 to i32*, !dbg !12983
  %bf.load28 = load i32, i32* %27, align 8, !dbg !12983
  %bf.lshr29 = lshr i32 %bf.load28, 29, !dbg !12983
  %bf.clear30 = and i32 %bf.lshr29, 1, !dbg !12983
  %tobool31 = icmp ne i32 %bf.clear30, 0, !dbg !12983
  br i1 %tobool31, label %if.then32, label %if.end33, !dbg !12985

if.then32:                                        ; preds = %if.then26
  store i8 1, i8* %has_marks, align 1, !dbg !12986
  br label %if.end33, !dbg !12987

if.end33:                                         ; preds = %if.then32, %if.then26
  %28 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !12988
  %loc34 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %28, i32 0, i32 1, !dbg !12990
  %29 = load %struct.rtx_def*, %struct.rtx_def** %loc34, align 8, !dbg !12990
  %30 = load %struct.rtx_def*, %struct.rtx_def** %cval, align 8, !dbg !12991
  %call35 = call zeroext i8 @canon_value_cmp(%struct.rtx_def* %29, %struct.rtx_def* %30), !dbg !12992
  %tobool36 = icmp ne i8 %call35, 0, !dbg !12992
  br i1 %tobool36, label %if.then37, label %if.end39, !dbg !12993

if.then37:                                        ; preds = %if.end33
  %31 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !12994
  %loc38 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %31, i32 0, i32 1, !dbg !12995
  %32 = load %struct.rtx_def*, %struct.rtx_def** %loc38, align 8, !dbg !12995
  store %struct.rtx_def* %32, %struct.rtx_def** %cval, align 8, !dbg !12996
  br label %if.end39, !dbg !12997

if.end39:                                         ; preds = %if.then37, %if.end33
  br label %if.end40, !dbg !12998

if.end40:                                         ; preds = %if.end39, %for.body
  br label %for.inc, !dbg !12999

for.inc:                                          ; preds = %if.end40
  %33 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !13000
  %next = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %33, i32 0, i32 0, !dbg !13001
  %34 = load %struct.location_chain_def*, %struct.location_chain_def** %next, align 8, !dbg !13001
  store %struct.location_chain_def* %34, %struct.location_chain_def** %node, align 8, !dbg !13002
  br label %for.cond, !dbg !13003, !llvm.loop !13004

for.end:                                          ; preds = %for.cond
  %35 = load i8, i8* %has_value, align 1, !dbg !13006
  %tobool41 = icmp ne i8 %35, 0, !dbg !13006
  br i1 %tobool41, label %if.end43, label %if.then42, !dbg !13008

if.then42:                                        ; preds = %for.end
  store i32 1, i32* %retval, align 4, !dbg !13009
  br label %return, !dbg !13009

if.end43:                                         ; preds = %for.end
  %36 = load %struct.rtx_def*, %struct.rtx_def** %cval, align 8, !dbg !13010
  %37 = load %struct.rtx_def*, %struct.rtx_def** %val, align 8, !dbg !13012
  %cmp44 = icmp eq %struct.rtx_def* %36, %37, !dbg !13013
  br i1 %cmp44, label %if.then46, label %if.end115, !dbg !13014

if.then46:                                        ; preds = %if.end43
  %38 = load i8, i8* %has_marks, align 1, !dbg !13015
  %tobool47 = icmp ne i8 %38, 0, !dbg !13015
  br i1 %tobool47, label %lor.lhs.false, label %if.then51, !dbg !13018

lor.lhs.false:                                    ; preds = %if.then46
  %39 = load i8*, i8** %dv, align 8, !dbg !13019
  %call48 = call zeroext i8 @dv_is_decl_p(i8* %39), !dbg !13020
  %conv49 = zext i8 %call48 to i32, !dbg !13020
  %tobool50 = icmp ne i32 %conv49, 0, !dbg !13020
  br i1 %tobool50, label %if.then51, label %if.end52, !dbg !13021

if.then51:                                        ; preds = %lor.lhs.false, %if.then46
  store i32 1, i32* %retval, align 4, !dbg !13022
  br label %return, !dbg !13022

if.end52:                                         ; preds = %lor.lhs.false
  %40 = load %struct.rtx_def*, %struct.rtx_def** %val, align 8, !dbg !13023
  %41 = bitcast %struct.rtx_def* %40 to i32*, !dbg !13023
  %bf.load53 = load i32, i32* %41, align 8, !dbg !13024
  %bf.clear54 = and i32 %bf.load53, -536870913, !dbg !13024
  %bf.set = or i32 %bf.clear54, 536870912, !dbg !13024
  store i32 %bf.set, i32* %41, align 8, !dbg !13024
  %42 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !13025
  %var_part55 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %42, i32 0, i32 5, !dbg !13027
  %arrayidx56 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part55, i64 0, i64 0, !dbg !13025
  %loc_chain57 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx56, i32 0, i32 0, !dbg !13028
  %43 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain57, align 8, !dbg !13028
  store %struct.location_chain_def* %43, %struct.location_chain_def** %node, align 8, !dbg !13029
  br label %for.cond58, !dbg !13030

for.cond58:                                       ; preds = %for.inc110, %if.end52
  %44 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !13031
  %tobool59 = icmp ne %struct.location_chain_def* %44, null, !dbg !13033
  br i1 %tobool59, label %for.body60, label %for.end112, !dbg !13033

for.body60:                                       ; preds = %for.cond58
  %45 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !13034
  %loc61 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %45, i32 0, i32 1, !dbg !13034
  %46 = load %struct.rtx_def*, %struct.rtx_def** %loc61, align 8, !dbg !13034
  %47 = bitcast %struct.rtx_def* %46 to i32*, !dbg !13034
  %bf.load62 = load i32, i32* %47, align 8, !dbg !13034
  %bf.clear63 = and i32 %bf.load62, 65535, !dbg !13034
  %cmp64 = icmp eq i32 %bf.clear63, 1, !dbg !13036
  br i1 %cmp64, label %land.lhs.true, label %if.end109, !dbg !13037

land.lhs.true:                                    ; preds = %for.body60
  %48 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !13038
  %loc66 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %48, i32 0, i32 1, !dbg !13038
  %49 = load %struct.rtx_def*, %struct.rtx_def** %loc66, align 8, !dbg !13038
  %50 = bitcast %struct.rtx_def* %49 to i32*, !dbg !13038
  %bf.load67 = load i32, i32* %50, align 8, !dbg !13038
  %bf.lshr68 = lshr i32 %bf.load67, 29, !dbg !13038
  %bf.clear69 = and i32 %bf.lshr68, 1, !dbg !13038
  %tobool70 = icmp ne i32 %bf.clear69, 0, !dbg !13038
  br i1 %tobool70, label %if.then71, label %if.end109, !dbg !13039

if.then71:                                        ; preds = %land.lhs.true
  %51 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !13040
  %loc72 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %51, i32 0, i32 1, !dbg !13042
  %52 = load %struct.rtx_def*, %struct.rtx_def** %loc72, align 8, !dbg !13042
  store %struct.rtx_def* %52, %struct.rtx_def** %cval, align 8, !dbg !13043
  br label %restart_with_cval, !dbg !13044

restart_with_cval:                                ; preds = %if.then302, %if.then71
  call void @llvm.dbg.label(metadata !13045), !dbg !13046
  %53 = load %struct.rtx_def*, %struct.rtx_def** %cval, align 8, !dbg !13047
  %54 = bitcast %struct.rtx_def* %53 to i32*, !dbg !13047
  %bf.load73 = load i32, i32* %54, align 8, !dbg !13048
  %bf.clear74 = and i32 %bf.load73, -536870913, !dbg !13048
  store i32 %bf.clear74, i32* %54, align 8, !dbg !13048
  %55 = load %struct.rtx_def*, %struct.rtx_def** %cval, align 8, !dbg !13049
  %call75 = call i8* @dv_from_value(%struct.rtx_def* %55), !dbg !13050
  store i8* %call75, i8** %dv, align 8, !dbg !13051
  %56 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set, align 8, !dbg !13052
  %vars = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %56, i32 0, i32 2, !dbg !13053
  %57 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars, align 8, !dbg !13053
  %58 = load i8*, i8** %dv, align 8, !dbg !13054
  %call76 = call i8** @shared_hash_find_slot_noinsert(%struct.shared_hash_def* %57, i8* %58), !dbg !13055
  store i8** %call76, i8*** %slot.addr, align 8, !dbg !13056
  %59 = load i8**, i8*** %slot.addr, align 8, !dbg !13057
  %tobool77 = icmp ne i8** %59, null, !dbg !13057
  br i1 %tobool77, label %if.end87, label %if.then78, !dbg !13059

if.then78:                                        ; preds = %restart_with_cval
  %60 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !13060
  %dv79 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %60, i32 0, i32 0, !dbg !13060
  %61 = load i8*, i8** %dv79, align 8, !dbg !13060
  %call80 = call zeroext i8 @dv_is_decl_p(i8* %61), !dbg !13060
  %tobool81 = icmp ne i8 %call80, 0, !dbg !13060
  br i1 %tobool81, label %cond.false83, label %cond.true82, !dbg !13060

cond.true82:                                      ; preds = %if.then78
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 3121, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !13060
  br label %cond.end84, !dbg !13060

cond.false83:                                     ; preds = %if.then78
  br label %cond.end84, !dbg !13060

cond.end84:                                       ; preds = %cond.false83, %cond.true82
  %cond85 = phi i32 [ 0, %cond.true82 ], [ 0, %cond.false83 ], !dbg !13060
  %62 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set, align 8, !dbg !13062
  %63 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !13063
  %dv86 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %63, i32 0, i32 0, !dbg !13064
  %64 = load i8*, i8** %dv86, align 8, !dbg !13064
  call void @clobber_variable_part(%struct.dataflow_set_def* %62, %struct.rtx_def* null, i8* %64, i64 0, %struct.rtx_def* null), !dbg !13065
  store i32 1, i32* %retval, align 4, !dbg !13066
  br label %return, !dbg !13066

if.end87:                                         ; preds = %restart_with_cval
  %65 = load i8**, i8*** %slot.addr, align 8, !dbg !13067
  %66 = load i8*, i8** %65, align 8, !dbg !13068
  %67 = bitcast i8* %66 to %struct.variable_def*, !dbg !13069
  store %struct.variable_def* %67, %struct.variable_def** %var, align 8, !dbg !13070
  %68 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !13071
  %dv88 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %68, i32 0, i32 0, !dbg !13071
  %69 = load i8*, i8** %dv88, align 8, !dbg !13071
  %call89 = call zeroext i8 @dv_is_value_p(i8* %69), !dbg !13071
  %tobool90 = icmp ne i8 %call89, 0, !dbg !13071
  br i1 %tobool90, label %cond.false92, label %cond.true91, !dbg !13071

cond.true91:                                      ; preds = %if.end87
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 3128, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !13071
  br label %cond.end93, !dbg !13071

cond.false92:                                     ; preds = %if.end87
  br label %cond.end93, !dbg !13071

cond.end93:                                       ; preds = %cond.false92, %cond.true91
  %cond94 = phi i32 [ 0, %cond.true91 ], [ 0, %cond.false92 ], !dbg !13071
  %70 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !13072
  %n_var_parts95 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %70, i32 0, i32 2, !dbg !13074
  %71 = load i8, i8* %n_var_parts95, align 4, !dbg !13074
  %conv96 = sext i8 %71 to i32, !dbg !13072
  %cmp97 = icmp eq i32 %conv96, 0, !dbg !13075
  br i1 %cmp97, label %if.then99, label %if.end100, !dbg !13076

if.then99:                                        ; preds = %cond.end93
  store i32 1, i32* %retval, align 4, !dbg !13077
  br label %return, !dbg !13077

if.end100:                                        ; preds = %cond.end93
  %72 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !13078
  %n_var_parts101 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %72, i32 0, i32 2, !dbg !13078
  %73 = load i8, i8* %n_var_parts101, align 4, !dbg !13078
  %conv102 = sext i8 %73 to i32, !dbg !13078
  %cmp103 = icmp eq i32 %conv102, 1, !dbg !13078
  br i1 %cmp103, label %cond.false106, label %cond.true105, !dbg !13078

cond.true105:                                     ; preds = %if.end100
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 3131, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !13078
  br label %cond.end107, !dbg !13078

cond.false106:                                    ; preds = %if.end100
  br label %cond.end107, !dbg !13078

cond.end107:                                      ; preds = %cond.false106, %cond.true105
  %cond108 = phi i32 [ 0, %cond.true105 ], [ 0, %cond.false106 ], !dbg !13078
  br label %restart, !dbg !13079

if.end109:                                        ; preds = %land.lhs.true, %for.body60
  br label %for.inc110, !dbg !13038

for.inc110:                                       ; preds = %if.end109
  %74 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !13080
  %next111 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %74, i32 0, i32 0, !dbg !13081
  %75 = load %struct.location_chain_def*, %struct.location_chain_def** %next111, align 8, !dbg !13081
  store %struct.location_chain_def* %75, %struct.location_chain_def** %node, align 8, !dbg !13082
  br label %for.cond58, !dbg !13083, !llvm.loop !13084

for.end112:                                       ; preds = %for.cond58
  %76 = load %struct.rtx_def*, %struct.rtx_def** %val, align 8, !dbg !13086
  %77 = bitcast %struct.rtx_def* %76 to i32*, !dbg !13086
  %bf.load113 = load i32, i32* %77, align 8, !dbg !13087
  %bf.clear114 = and i32 %bf.load113, -536870913, !dbg !13087
  store i32 %bf.clear114, i32* %77, align 8, !dbg !13087
  store i32 1, i32* %retval, align 4, !dbg !13088
  br label %return, !dbg !13088

if.end115:                                        ; preds = %if.end43
  %78 = load %struct.rtx_def*, %struct.rtx_def** %cval, align 8, !dbg !13089
  %call116 = call i8* @dv_from_value(%struct.rtx_def* %78), !dbg !13090
  store i8* %call116, i8** %cdv, align 8, !dbg !13091
  %79 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set, align 8, !dbg !13092
  %vars117 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %79, i32 0, i32 2, !dbg !13093
  %80 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars117, align 8, !dbg !13093
  %81 = load i8*, i8** %cdv, align 8, !dbg !13094
  %call118 = call i8** @shared_hash_find_slot_noinsert(%struct.shared_hash_def* %80, i8* %81), !dbg !13095
  store i8** %call118, i8*** %cslot, align 8, !dbg !13096
  %82 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !13097
  %var_part119 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %82, i32 0, i32 5, !dbg !13099
  %arrayidx120 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part119, i64 0, i64 0, !dbg !13097
  %loc_chain121 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx120, i32 0, i32 0, !dbg !13100
  %83 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain121, align 8, !dbg !13100
  store %struct.location_chain_def* %83, %struct.location_chain_def** %node, align 8, !dbg !13101
  br label %for.cond122, !dbg !13102

for.cond122:                                      ; preds = %for.inc269, %if.end115
  %84 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !13103
  %tobool123 = icmp ne %struct.location_chain_def* %84, null, !dbg !13105
  br i1 %tobool123, label %for.body124, label %for.end271, !dbg !13105

for.body124:                                      ; preds = %for.cond122
  %85 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !13106
  %loc125 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %85, i32 0, i32 1, !dbg !13108
  %86 = load %struct.rtx_def*, %struct.rtx_def** %loc125, align 8, !dbg !13108
  %87 = load %struct.rtx_def*, %struct.rtx_def** %cval, align 8, !dbg !13109
  %cmp126 = icmp ne %struct.rtx_def* %86, %87, !dbg !13110
  br i1 %cmp126, label %if.then128, label %if.end268, !dbg !13111

if.then128:                                       ; preds = %for.body124
  %88 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set, align 8, !dbg !13112
  %89 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !13114
  %loc129 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %89, i32 0, i32 1, !dbg !13115
  %90 = load %struct.rtx_def*, %struct.rtx_def** %loc129, align 8, !dbg !13115
  %91 = load i8**, i8*** %cslot, align 8, !dbg !13116
  %92 = load i8*, i8** %cdv, align 8, !dbg !13117
  %93 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !13118
  %init = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %93, i32 0, i32 3, !dbg !13119
  %94 = load i32, i32* %init, align 8, !dbg !13119
  %call130 = call i8** @set_slot_part(%struct.dataflow_set_def* %88, %struct.rtx_def* %90, i8** %91, i8* %92, i64 0, i32 %94, %struct.rtx_def* null), !dbg !13120
  store i8** %call130, i8*** %cslot, align 8, !dbg !13121
  %95 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !13122
  %loc131 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %95, i32 0, i32 1, !dbg !13122
  %96 = load %struct.rtx_def*, %struct.rtx_def** %loc131, align 8, !dbg !13122
  %97 = bitcast %struct.rtx_def* %96 to i32*, !dbg !13122
  %bf.load132 = load i32, i32* %97, align 8, !dbg !13122
  %bf.clear133 = and i32 %bf.load132, 65535, !dbg !13122
  %cmp134 = icmp eq i32 %bf.clear133, 1, !dbg !13124
  br i1 %cmp134, label %if.then136, label %if.else160, !dbg !13125

if.then136:                                       ; preds = %if.then128
  call void @llvm.dbg.declare(metadata i8** %ndv, metadata !13126, metadata !DIExpression()), !dbg !13128
  %98 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !13129
  %loc137 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %98, i32 0, i32 1, !dbg !13130
  %99 = load %struct.rtx_def*, %struct.rtx_def** %loc137, align 8, !dbg !13130
  %call138 = call i8* @dv_from_value(%struct.rtx_def* %99), !dbg !13131
  store i8* %call138, i8** %ndv, align 8, !dbg !13128
  %100 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set, align 8, !dbg !13132
  %101 = load %struct.rtx_def*, %struct.rtx_def** %cval, align 8, !dbg !13133
  %102 = load i8*, i8** %ndv, align 8, !dbg !13134
  %103 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !13135
  %init139 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %103, i32 0, i32 3, !dbg !13136
  %104 = load i32, i32* %init139, align 8, !dbg !13136
  call void @set_variable_part(%struct.dataflow_set_def* %100, %struct.rtx_def* %101, i8* %102, i64 0, i32 %104, %struct.rtx_def* null, i32 0), !dbg !13137
  %105 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !13138
  %loc140 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %105, i32 0, i32 1, !dbg !13140
  %106 = load %struct.rtx_def*, %struct.rtx_def** %loc140, align 8, !dbg !13140
  %107 = load %struct.rtx_def*, %struct.rtx_def** %val, align 8, !dbg !13141
  %call141 = call zeroext i8 @canon_value_cmp(%struct.rtx_def* %106, %struct.rtx_def* %107), !dbg !13142
  %tobool142 = icmp ne i8 %call141, 0, !dbg !13142
  br i1 %tobool142, label %if.then143, label %if.else151, !dbg !13143

if.then143:                                       ; preds = %if.then136
  %108 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !13144
  %loc144 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %108, i32 0, i32 1, !dbg !13144
  %109 = load %struct.rtx_def*, %struct.rtx_def** %loc144, align 8, !dbg !13144
  %110 = bitcast %struct.rtx_def* %109 to i32*, !dbg !13144
  %bf.load145 = load i32, i32* %110, align 8, !dbg !13146
  %bf.clear146 = and i32 %bf.load145, -536870913, !dbg !13146
  %bf.set147 = or i32 %bf.clear146, 536870912, !dbg !13146
  store i32 %bf.set147, i32* %110, align 8, !dbg !13146
  %111 = load %struct.rtx_def*, %struct.rtx_def** %cval, align 8, !dbg !13147
  %112 = bitcast %struct.rtx_def* %111 to i32*, !dbg !13147
  %bf.load148 = load i32, i32* %112, align 8, !dbg !13148
  %bf.clear149 = and i32 %bf.load148, -536870913, !dbg !13148
  %bf.set150 = or i32 %bf.clear149, 536870912, !dbg !13148
  store i32 %bf.set150, i32* %112, align 8, !dbg !13148
  br label %if.end159, !dbg !13149

if.else151:                                       ; preds = %if.then136
  %113 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !13150
  %loc152 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %113, i32 0, i32 1, !dbg !13150
  %114 = load %struct.rtx_def*, %struct.rtx_def** %loc152, align 8, !dbg !13150
  %115 = bitcast %struct.rtx_def* %114 to i32*, !dbg !13150
  %bf.load153 = load i32, i32* %115, align 8, !dbg !13150
  %bf.lshr154 = lshr i32 %bf.load153, 29, !dbg !13150
  %bf.clear155 = and i32 %bf.lshr154, 1, !dbg !13150
  %tobool156 = icmp ne i32 %bf.clear155, 0, !dbg !13150
  br i1 %tobool156, label %if.end158, label %if.then157, !dbg !13152

if.then157:                                       ; preds = %if.else151
  %116 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set, align 8, !dbg !13153
  %117 = load %struct.rtx_def*, %struct.rtx_def** %cval, align 8, !dbg !13154
  %118 = load i8*, i8** %ndv, align 8, !dbg !13155
  call void @clobber_variable_part(%struct.dataflow_set_def* %116, %struct.rtx_def* %117, i8* %118, i64 0, %struct.rtx_def* null), !dbg !13156
  br label %if.end158, !dbg !13156

if.end158:                                        ; preds = %if.then157, %if.else151
  br label %if.end159

if.end159:                                        ; preds = %if.end158, %if.then143
  br label %if.end267, !dbg !13157

if.else160:                                       ; preds = %if.then128
  %119 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !13158
  %loc161 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %119, i32 0, i32 1, !dbg !13158
  %120 = load %struct.rtx_def*, %struct.rtx_def** %loc161, align 8, !dbg !13158
  %121 = bitcast %struct.rtx_def* %120 to i32*, !dbg !13158
  %bf.load162 = load i32, i32* %121, align 8, !dbg !13158
  %bf.clear163 = and i32 %bf.load162, 65535, !dbg !13158
  %cmp164 = icmp eq i32 %bf.clear163, 37, !dbg !13160
  br i1 %cmp164, label %if.then166, label %if.end266, !dbg !13161

if.then166:                                       ; preds = %if.else160
  call void @llvm.dbg.declare(metadata %struct.attrs_def** %list, metadata !13162, metadata !DIExpression()), !dbg !13164
  %122 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set, align 8, !dbg !13165
  %regs = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %122, i32 0, i32 1, !dbg !13166
  %123 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !13167
  %loc167 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %123, i32 0, i32 1, !dbg !13167
  %124 = load %struct.rtx_def*, %struct.rtx_def** %loc167, align 8, !dbg !13167
  %call168 = call i32 @rhs_regno(%struct.rtx_def* %124), !dbg !13167
  %idxprom = zext i32 %call168 to i64, !dbg !13165
  %arrayidx169 = getelementptr inbounds [53 x %struct.attrs_def*], [53 x %struct.attrs_def*]* %regs, i64 0, i64 %idxprom, !dbg !13165
  %125 = load %struct.attrs_def*, %struct.attrs_def** %arrayidx169, align 8, !dbg !13165
  store %struct.attrs_def* %125, %struct.attrs_def** %list, align 8, !dbg !13164
  call void @llvm.dbg.declare(metadata %struct.attrs_def*** %listp, metadata !13168, metadata !DIExpression()), !dbg !13169
  br label %while.cond, !dbg !13170

while.cond:                                       ; preds = %if.end186, %if.then166
  %126 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !13171
  %tobool170 = icmp ne %struct.attrs_def* %126, null, !dbg !13170
  br i1 %tobool170, label %while.body, label %while.end, !dbg !13170

while.body:                                       ; preds = %while.cond
  %127 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !13172
  %offset = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %127, i32 0, i32 3, !dbg !13175
  %128 = load i64, i64* %offset, align 8, !dbg !13175
  %cmp171 = icmp eq i64 %128, 0, !dbg !13176
  br i1 %cmp171, label %land.lhs.true173, label %if.end186, !dbg !13177

land.lhs.true173:                                 ; preds = %while.body
  %129 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !13178
  %dv174 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %129, i32 0, i32 2, !dbg !13179
  %130 = load i8*, i8** %dv174, align 8, !dbg !13179
  %call175 = call i8* @dv_as_opaque(i8* %130), !dbg !13180
  %131 = load i8*, i8** %dv, align 8, !dbg !13181
  %call176 = call i8* @dv_as_opaque(i8* %131), !dbg !13182
  %cmp177 = icmp eq i8* %call175, %call176, !dbg !13183
  br i1 %cmp177, label %if.then185, label %lor.lhs.false179, !dbg !13184

lor.lhs.false179:                                 ; preds = %land.lhs.true173
  %132 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !13185
  %dv180 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %132, i32 0, i32 2, !dbg !13186
  %133 = load i8*, i8** %dv180, align 8, !dbg !13186
  %call181 = call i8* @dv_as_opaque(i8* %133), !dbg !13187
  %134 = load i8*, i8** %cdv, align 8, !dbg !13188
  %call182 = call i8* @dv_as_opaque(i8* %134), !dbg !13189
  %cmp183 = icmp eq i8* %call181, %call182, !dbg !13190
  br i1 %cmp183, label %if.then185, label %if.end186, !dbg !13191

if.then185:                                       ; preds = %lor.lhs.false179, %land.lhs.true173
  br label %while.end, !dbg !13192

if.end186:                                        ; preds = %lor.lhs.false179, %while.body
  %135 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !13193
  %next187 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %135, i32 0, i32 0, !dbg !13194
  %136 = load %struct.attrs_def*, %struct.attrs_def** %next187, align 8, !dbg !13194
  store %struct.attrs_def* %136, %struct.attrs_def** %list, align 8, !dbg !13195
  br label %while.cond, !dbg !13170, !llvm.loop !13196

while.end:                                        ; preds = %if.then185, %while.cond
  %137 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !13198
  %tobool188 = icmp ne %struct.attrs_def* %137, null, !dbg !13198
  br i1 %tobool188, label %cond.false190, label %cond.true189, !dbg !13198

cond.true189:                                     ; preds = %while.end
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 3195, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !13198
  br label %cond.end191, !dbg !13198

cond.false190:                                    ; preds = %while.end
  br label %cond.end191, !dbg !13198

cond.end191:                                      ; preds = %cond.false190, %cond.true189
  %cond192 = phi i32 [ 0, %cond.true189 ], [ 0, %cond.false190 ], !dbg !13198
  %138 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !13199
  %dv193 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %138, i32 0, i32 2, !dbg !13201
  %139 = load i8*, i8** %dv193, align 8, !dbg !13201
  %call194 = call i8* @dv_as_opaque(i8* %139), !dbg !13202
  %140 = load i8*, i8** %dv, align 8, !dbg !13203
  %call195 = call i8* @dv_as_opaque(i8* %140), !dbg !13204
  %cmp196 = icmp eq i8* %call194, %call195, !dbg !13205
  br i1 %cmp196, label %if.then198, label %if.else228, !dbg !13206

if.then198:                                       ; preds = %cond.end191
  %141 = load i8*, i8** %cdv, align 8, !dbg !13207
  %142 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !13209
  %dv199 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %142, i32 0, i32 2, !dbg !13210
  store i8* %141, i8** %dv199, align 8, !dbg !13211
  %143 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !13212
  %next200 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %143, i32 0, i32 0, !dbg !13214
  store %struct.attrs_def** %next200, %struct.attrs_def*** %listp, align 8, !dbg !13215
  br label %for.cond201, !dbg !13216

for.cond201:                                      ; preds = %for.inc225, %if.then198
  %144 = load %struct.attrs_def**, %struct.attrs_def*** %listp, align 8, !dbg !13217
  %145 = load %struct.attrs_def*, %struct.attrs_def** %144, align 8, !dbg !13219
  store %struct.attrs_def* %145, %struct.attrs_def** %list, align 8, !dbg !13220
  %tobool202 = icmp ne %struct.attrs_def* %145, null, !dbg !13221
  br i1 %tobool202, label %for.body203, label %for.end227, !dbg !13221

for.body203:                                      ; preds = %for.cond201
  %146 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !13222
  %offset204 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %146, i32 0, i32 3, !dbg !13225
  %147 = load i64, i64* %offset204, align 8, !dbg !13225
  %tobool205 = icmp ne i64 %147, 0, !dbg !13222
  br i1 %tobool205, label %if.then206, label %if.end207, !dbg !13226

if.then206:                                       ; preds = %for.body203
  br label %for.inc225, !dbg !13227

if.end207:                                        ; preds = %for.body203
  %148 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !13228
  %dv208 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %148, i32 0, i32 2, !dbg !13230
  %149 = load i8*, i8** %dv208, align 8, !dbg !13230
  %call209 = call i8* @dv_as_opaque(i8* %149), !dbg !13231
  %150 = load i8*, i8** %cdv, align 8, !dbg !13232
  %call210 = call i8* @dv_as_opaque(i8* %150), !dbg !13233
  %cmp211 = icmp eq i8* %call209, %call210, !dbg !13234
  br i1 %cmp211, label %if.then213, label %if.end215, !dbg !13235

if.then213:                                       ; preds = %if.end207
  %151 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !13236
  %next214 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %151, i32 0, i32 0, !dbg !13238
  %152 = load %struct.attrs_def*, %struct.attrs_def** %next214, align 8, !dbg !13238
  %153 = load %struct.attrs_def**, %struct.attrs_def*** %listp, align 8, !dbg !13239
  store %struct.attrs_def* %152, %struct.attrs_def** %153, align 8, !dbg !13240
  %154 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @attrs_pool, align 8, !dbg !13241
  %155 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !13242
  %156 = bitcast %struct.attrs_def* %155 to i8*, !dbg !13242
  call void @pool_free(%struct.alloc_pool_def* %154, i8* %156), !dbg !13243
  %157 = load %struct.attrs_def**, %struct.attrs_def*** %listp, align 8, !dbg !13244
  %158 = load %struct.attrs_def*, %struct.attrs_def** %157, align 8, !dbg !13245
  store %struct.attrs_def* %158, %struct.attrs_def** %list, align 8, !dbg !13246
  br label %for.end227, !dbg !13247

if.end215:                                        ; preds = %if.end207
  %159 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !13248
  %dv216 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %159, i32 0, i32 2, !dbg !13248
  %160 = load i8*, i8** %dv216, align 8, !dbg !13248
  %call217 = call i8* @dv_as_opaque(i8* %160), !dbg !13248
  %161 = load i8*, i8** %dv, align 8, !dbg !13248
  %call218 = call i8* @dv_as_opaque(i8* %161), !dbg !13248
  %cmp219 = icmp ne i8* %call217, %call218, !dbg !13248
  br i1 %cmp219, label %cond.false222, label %cond.true221, !dbg !13248

cond.true221:                                     ; preds = %if.end215
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 3212, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !13248
  br label %cond.end223, !dbg !13248

cond.false222:                                    ; preds = %if.end215
  br label %cond.end223, !dbg !13248

cond.end223:                                      ; preds = %cond.false222, %cond.true221
  %cond224 = phi i32 [ 0, %cond.true221 ], [ 0, %cond.false222 ], !dbg !13248
  br label %for.inc225, !dbg !13249

for.inc225:                                       ; preds = %cond.end223, %if.then206
  %162 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !13250
  %next226 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %162, i32 0, i32 0, !dbg !13251
  store %struct.attrs_def** %next226, %struct.attrs_def*** %listp, align 8, !dbg !13252
  br label %for.cond201, !dbg !13253, !llvm.loop !13254

for.end227:                                       ; preds = %if.then213, %for.cond201
  br label %if.end265, !dbg !13256

if.else228:                                       ; preds = %cond.end191
  %163 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !13257
  %dv229 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %163, i32 0, i32 2, !dbg !13259
  %164 = load i8*, i8** %dv229, align 8, !dbg !13259
  %call230 = call i8* @dv_as_opaque(i8* %164), !dbg !13260
  %165 = load i8*, i8** %cdv, align 8, !dbg !13261
  %call231 = call i8* @dv_as_opaque(i8* %165), !dbg !13262
  %cmp232 = icmp eq i8* %call230, %call231, !dbg !13263
  br i1 %cmp232, label %if.then234, label %if.else263, !dbg !13264

if.then234:                                       ; preds = %if.else228
  %166 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !13265
  %next235 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %166, i32 0, i32 0, !dbg !13268
  store %struct.attrs_def** %next235, %struct.attrs_def*** %listp, align 8, !dbg !13269
  br label %for.cond236, !dbg !13270

for.cond236:                                      ; preds = %for.inc260, %if.then234
  %167 = load %struct.attrs_def**, %struct.attrs_def*** %listp, align 8, !dbg !13271
  %168 = load %struct.attrs_def*, %struct.attrs_def** %167, align 8, !dbg !13273
  store %struct.attrs_def* %168, %struct.attrs_def** %list, align 8, !dbg !13274
  %tobool237 = icmp ne %struct.attrs_def* %168, null, !dbg !13275
  br i1 %tobool237, label %for.body238, label %for.end262, !dbg !13275

for.body238:                                      ; preds = %for.cond236
  %169 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !13276
  %offset239 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %169, i32 0, i32 3, !dbg !13279
  %170 = load i64, i64* %offset239, align 8, !dbg !13279
  %tobool240 = icmp ne i64 %170, 0, !dbg !13276
  br i1 %tobool240, label %if.then241, label %if.end242, !dbg !13280

if.then241:                                       ; preds = %for.body238
  br label %for.inc260, !dbg !13281

if.end242:                                        ; preds = %for.body238
  %171 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !13282
  %dv243 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %171, i32 0, i32 2, !dbg !13284
  %172 = load i8*, i8** %dv243, align 8, !dbg !13284
  %call244 = call i8* @dv_as_opaque(i8* %172), !dbg !13285
  %173 = load i8*, i8** %dv, align 8, !dbg !13286
  %call245 = call i8* @dv_as_opaque(i8* %173), !dbg !13287
  %cmp246 = icmp eq i8* %call244, %call245, !dbg !13288
  br i1 %cmp246, label %if.then248, label %if.end250, !dbg !13289

if.then248:                                       ; preds = %if.end242
  %174 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !13290
  %next249 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %174, i32 0, i32 0, !dbg !13292
  %175 = load %struct.attrs_def*, %struct.attrs_def** %next249, align 8, !dbg !13292
  %176 = load %struct.attrs_def**, %struct.attrs_def*** %listp, align 8, !dbg !13293
  store %struct.attrs_def* %175, %struct.attrs_def** %176, align 8, !dbg !13294
  %177 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @attrs_pool, align 8, !dbg !13295
  %178 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !13296
  %179 = bitcast %struct.attrs_def* %178 to i8*, !dbg !13296
  call void @pool_free(%struct.alloc_pool_def* %177, i8* %179), !dbg !13297
  %180 = load %struct.attrs_def**, %struct.attrs_def*** %listp, align 8, !dbg !13298
  %181 = load %struct.attrs_def*, %struct.attrs_def** %180, align 8, !dbg !13299
  store %struct.attrs_def* %181, %struct.attrs_def** %list, align 8, !dbg !13300
  br label %for.end262, !dbg !13301

if.end250:                                        ; preds = %if.end242
  %182 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !13302
  %dv251 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %182, i32 0, i32 2, !dbg !13302
  %183 = load i8*, i8** %dv251, align 8, !dbg !13302
  %call252 = call i8* @dv_as_opaque(i8* %183), !dbg !13302
  %184 = load i8*, i8** %cdv, align 8, !dbg !13302
  %call253 = call i8* @dv_as_opaque(i8* %184), !dbg !13302
  %cmp254 = icmp ne i8* %call252, %call253, !dbg !13302
  br i1 %cmp254, label %cond.false257, label %cond.true256, !dbg !13302

cond.true256:                                     ; preds = %if.end250
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 3230, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !13302
  br label %cond.end258, !dbg !13302

cond.false257:                                    ; preds = %if.end250
  br label %cond.end258, !dbg !13302

cond.end258:                                      ; preds = %cond.false257, %cond.true256
  %cond259 = phi i32 [ 0, %cond.true256 ], [ 0, %cond.false257 ], !dbg !13302
  br label %for.inc260, !dbg !13303

for.inc260:                                       ; preds = %cond.end258, %if.then241
  %185 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !13304
  %next261 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %185, i32 0, i32 0, !dbg !13305
  store %struct.attrs_def** %next261, %struct.attrs_def*** %listp, align 8, !dbg !13306
  br label %for.cond236, !dbg !13307, !llvm.loop !13308

for.end262:                                       ; preds = %if.then248, %for.cond236
  br label %if.end264, !dbg !13310

if.else263:                                       ; preds = %if.else228
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 3234, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !13311
  br label %if.end264

if.end264:                                        ; preds = %if.else263, %for.end262
  br label %if.end265

if.end265:                                        ; preds = %if.end264, %for.end227
  br label %if.end266, !dbg !13312

if.end266:                                        ; preds = %if.end265, %if.else160
  br label %if.end267

if.end267:                                        ; preds = %if.end266, %if.end159
  br label %if.end268, !dbg !13313

if.end268:                                        ; preds = %if.end267, %for.body124
  br label %for.inc269, !dbg !13109

for.inc269:                                       ; preds = %if.end268
  %186 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !13314
  %next270 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %186, i32 0, i32 0, !dbg !13315
  %187 = load %struct.location_chain_def*, %struct.location_chain_def** %next270, align 8, !dbg !13315
  store %struct.location_chain_def* %187, %struct.location_chain_def** %node, align 8, !dbg !13316
  br label %for.cond122, !dbg !13317, !llvm.loop !13318

for.end271:                                       ; preds = %for.cond122
  %188 = load %struct.rtx_def*, %struct.rtx_def** %val, align 8, !dbg !13320
  %tobool272 = icmp ne %struct.rtx_def* %188, null, !dbg !13320
  br i1 %tobool272, label %if.then273, label %if.end275, !dbg !13322

if.then273:                                       ; preds = %for.end271
  %189 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set, align 8, !dbg !13323
  %190 = load %struct.rtx_def*, %struct.rtx_def** %val, align 8, !dbg !13324
  %191 = load i8**, i8*** %cslot, align 8, !dbg !13325
  %192 = load i8*, i8** %cdv, align 8, !dbg !13326
  %call274 = call i8** @set_slot_part(%struct.dataflow_set_def* %189, %struct.rtx_def* %190, i8** %191, i8* %192, i64 0, i32 2, %struct.rtx_def* null), !dbg !13327
  store i8** %call274, i8*** %cslot, align 8, !dbg !13328
  br label %if.end275, !dbg !13329

if.end275:                                        ; preds = %if.then273, %for.end271
  %193 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set, align 8, !dbg !13330
  %194 = load %struct.rtx_def*, %struct.rtx_def** %cval, align 8, !dbg !13331
  %195 = load i8**, i8*** %slot.addr, align 8, !dbg !13332
  %call276 = call i8** @clobber_slot_part(%struct.dataflow_set_def* %193, %struct.rtx_def* %194, i8** %195, i64 0, %struct.rtx_def* null), !dbg !13333
  store i8** %call276, i8*** %slot.addr, align 8, !dbg !13334
  %196 = load i8**, i8*** %slot.addr, align 8, !dbg !13335
  %197 = load i8*, i8** %196, align 8, !dbg !13336
  %198 = bitcast i8* %197 to %struct.variable_def*, !dbg !13337
  store %struct.variable_def* %198, %struct.variable_def** %var, align 8, !dbg !13338
  %199 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !13339
  %n_var_parts277 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %199, i32 0, i32 2, !dbg !13339
  %200 = load i8, i8* %n_var_parts277, align 4, !dbg !13339
  %conv278 = sext i8 %200 to i32, !dbg !13339
  %tobool279 = icmp ne i32 %conv278, 0, !dbg !13339
  br i1 %tobool279, label %land.lhs.true280, label %cond.true294, !dbg !13339

land.lhs.true280:                                 ; preds = %if.end275
  %201 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !13339
  %var_part281 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %201, i32 0, i32 5, !dbg !13339
  %arrayidx282 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part281, i64 0, i64 0, !dbg !13339
  %loc_chain283 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx282, i32 0, i32 0, !dbg !13339
  %202 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain283, align 8, !dbg !13339
  %loc284 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %202, i32 0, i32 1, !dbg !13339
  %203 = load %struct.rtx_def*, %struct.rtx_def** %loc284, align 8, !dbg !13339
  %204 = load %struct.rtx_def*, %struct.rtx_def** %cval, align 8, !dbg !13339
  %cmp285 = icmp eq %struct.rtx_def* %203, %204, !dbg !13339
  br i1 %cmp285, label %land.lhs.true287, label %cond.true294, !dbg !13339

land.lhs.true287:                                 ; preds = %land.lhs.true280
  %205 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !13339
  %var_part288 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %205, i32 0, i32 5, !dbg !13339
  %arrayidx289 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part288, i64 0, i64 0, !dbg !13339
  %loc_chain290 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx289, i32 0, i32 0, !dbg !13339
  %206 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain290, align 8, !dbg !13339
  %next291 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %206, i32 0, i32 0, !dbg !13339
  %207 = load %struct.location_chain_def*, %struct.location_chain_def** %next291, align 8, !dbg !13339
  %cmp292 = icmp eq %struct.location_chain_def* %207, null, !dbg !13339
  br i1 %cmp292, label %cond.false295, label %cond.true294, !dbg !13339

cond.true294:                                     ; preds = %land.lhs.true287, %land.lhs.true280, %if.end275
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 3259, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !13339
  br label %cond.end296, !dbg !13339

cond.false295:                                    ; preds = %land.lhs.true287
  br label %cond.end296, !dbg !13339

cond.end296:                                      ; preds = %cond.false295, %cond.true294
  %cond297 = phi i32 [ 0, %cond.true294 ], [ 0, %cond.false295 ], !dbg !13339
  %208 = load %struct.rtx_def*, %struct.rtx_def** %cval, align 8, !dbg !13340
  %209 = bitcast %struct.rtx_def* %208 to i32*, !dbg !13340
  %bf.load298 = load i32, i32* %209, align 8, !dbg !13340
  %bf.lshr299 = lshr i32 %bf.load298, 29, !dbg !13340
  %bf.clear300 = and i32 %bf.lshr299, 1, !dbg !13340
  %tobool301 = icmp ne i32 %bf.clear300, 0, !dbg !13340
  br i1 %tobool301, label %if.then302, label %if.end303, !dbg !13342

if.then302:                                       ; preds = %cond.end296
  br label %restart_with_cval, !dbg !13343

if.end303:                                        ; preds = %cond.end296
  store i32 1, i32* %retval, align 4, !dbg !13344
  br label %return, !dbg !13344

return:                                           ; preds = %if.end303, %for.end112, %if.then99, %cond.end84, %if.then51, %if.then42, %if.then8, %if.then
  %210 = load i32, i32* %retval, align 4, !dbg !13345
  ret i32 %210, !dbg !13345
}

declare dso_local i8* @xrealloc(i8*, i64) #2

declare dso_local void @spec_qsort(i8*, i64, i64, i32 (i8*, i8*)*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @variable_union_info_cmp_pos(i8* %n1, i8* %n2) #0 !dbg !13346 {
entry:
  %retval = alloca i32, align 4
  %n1.addr = alloca i8*, align 8
  %n2.addr = alloca i8*, align 8
  %i1 = alloca %struct.variable_union_info*, align 8
  %i2 = alloca %struct.variable_union_info*, align 8
  store i8* %n1, i8** %n1.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %n1.addr, metadata !13347, metadata !DIExpression()), !dbg !13348
  store i8* %n2, i8** %n2.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %n2.addr, metadata !13349, metadata !DIExpression()), !dbg !13350
  call void @llvm.dbg.declare(metadata %struct.variable_union_info** %i1, metadata !13351, metadata !DIExpression()), !dbg !13353
  %0 = load i8*, i8** %n1.addr, align 8, !dbg !13354
  %1 = bitcast i8* %0 to %struct.variable_union_info*, !dbg !13355
  store %struct.variable_union_info* %1, %struct.variable_union_info** %i1, align 8, !dbg !13353
  call void @llvm.dbg.declare(metadata %struct.variable_union_info** %i2, metadata !13356, metadata !DIExpression()), !dbg !13357
  %2 = load i8*, i8** %n2.addr, align 8, !dbg !13358
  %3 = bitcast i8* %2 to %struct.variable_union_info*, !dbg !13359
  store %struct.variable_union_info* %3, %struct.variable_union_info** %i2, align 8, !dbg !13357
  %4 = load %struct.variable_union_info*, %struct.variable_union_info** %i1, align 8, !dbg !13360
  %pos = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %4, i32 0, i32 1, !dbg !13362
  %5 = load i32, i32* %pos, align 8, !dbg !13362
  %6 = load %struct.variable_union_info*, %struct.variable_union_info** %i2, align 8, !dbg !13363
  %pos1 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %6, i32 0, i32 1, !dbg !13364
  %7 = load i32, i32* %pos1, align 8, !dbg !13364
  %cmp = icmp ne i32 %5, %7, !dbg !13365
  br i1 %cmp, label %if.then, label %if.end, !dbg !13366

if.then:                                          ; preds = %entry
  %8 = load %struct.variable_union_info*, %struct.variable_union_info** %i1, align 8, !dbg !13367
  %pos2 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %8, i32 0, i32 1, !dbg !13368
  %9 = load i32, i32* %pos2, align 8, !dbg !13368
  %10 = load %struct.variable_union_info*, %struct.variable_union_info** %i2, align 8, !dbg !13369
  %pos3 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %10, i32 0, i32 1, !dbg !13370
  %11 = load i32, i32* %pos3, align 8, !dbg !13370
  %sub = sub nsw i32 %9, %11, !dbg !13371
  store i32 %sub, i32* %retval, align 4, !dbg !13372
  br label %return, !dbg !13372

if.end:                                           ; preds = %entry
  %12 = load %struct.variable_union_info*, %struct.variable_union_info** %i1, align 8, !dbg !13373
  %pos_dst = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %12, i32 0, i32 2, !dbg !13374
  %13 = load i32, i32* %pos_dst, align 4, !dbg !13374
  %14 = load %struct.variable_union_info*, %struct.variable_union_info** %i2, align 8, !dbg !13375
  %pos_dst4 = getelementptr inbounds %struct.variable_union_info, %struct.variable_union_info* %14, i32 0, i32 2, !dbg !13376
  %15 = load i32, i32* %pos_dst4, align 4, !dbg !13376
  %sub5 = sub nsw i32 %13, %15, !dbg !13377
  store i32 %sub5, i32* %retval, align 4, !dbg !13378
  br label %return, !dbg !13378

return:                                           ; preds = %if.end, %if.then
  %16 = load i32, i32* %retval, align 4, !dbg !13379
  ret i32 %16, !dbg !13379
}

declare dso_local i8* @htab_find_with_hash(%struct.htab*, i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.location_chain_def* @find_loc_in_1pdv(%struct.rtx_def* %loc, %struct.variable_def* %var, %struct.htab* %vars) #0 !dbg !13380 {
entry:
  %retval = alloca %struct.location_chain_def*, align 8
  %loc.addr = alloca %struct.rtx_def*, align 8
  %var.addr = alloca %struct.variable_def*, align 8
  %vars.addr = alloca %struct.htab*, align 8
  %node = alloca %struct.location_chain_def*, align 8
  %dv23 = alloca i8*, align 8
  %var26 = alloca %struct.variable_def*, align 8
  %where = alloca %struct.location_chain_def*, align 8
  store %struct.rtx_def* %loc, %struct.rtx_def** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %loc.addr, metadata !13383, metadata !DIExpression()), !dbg !13384
  store %struct.variable_def* %var, %struct.variable_def** %var.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.variable_def** %var.addr, metadata !13385, metadata !DIExpression()), !dbg !13386
  store %struct.htab* %vars, %struct.htab** %vars.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.htab** %vars.addr, metadata !13387, metadata !DIExpression()), !dbg !13388
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %node, metadata !13389, metadata !DIExpression()), !dbg !13390
  %0 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !13391
  %tobool = icmp ne %struct.variable_def* %0, null, !dbg !13391
  br i1 %tobool, label %if.end, label %if.then, !dbg !13393

if.then:                                          ; preds = %entry
  store %struct.location_chain_def* null, %struct.location_chain_def** %retval, align 8, !dbg !13394
  br label %return, !dbg !13394

if.end:                                           ; preds = %entry
  %1 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !13395
  %dv = getelementptr inbounds %struct.variable_def, %struct.variable_def* %1, i32 0, i32 0, !dbg !13395
  %2 = load i8*, i8** %dv, align 8, !dbg !13395
  %call = call zeroext i8 @dv_onepart_p(i8* %2), !dbg !13395
  %tobool1 = icmp ne i8 %call, 0, !dbg !13395
  br i1 %tobool1, label %cond.false, label %cond.true, !dbg !13395

cond.true:                                        ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 2506, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !13395
  br label %cond.end, !dbg !13395

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !13395

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !13395
  %3 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !13396
  %n_var_parts = getelementptr inbounds %struct.variable_def, %struct.variable_def* %3, i32 0, i32 2, !dbg !13398
  %4 = load i8, i8* %n_var_parts, align 4, !dbg !13398
  %tobool2 = icmp ne i8 %4, 0, !dbg !13396
  br i1 %tobool2, label %if.end4, label %if.then3, !dbg !13399

if.then3:                                         ; preds = %cond.end
  store %struct.location_chain_def* null, %struct.location_chain_def** %retval, align 8, !dbg !13400
  br label %return, !dbg !13400

if.end4:                                          ; preds = %cond.end
  %5 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !13401
  %var_part = getelementptr inbounds %struct.variable_def, %struct.variable_def* %5, i32 0, i32 5, !dbg !13401
  %arrayidx = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part, i64 0, i64 0, !dbg !13401
  %offset = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx, i32 0, i32 2, !dbg !13401
  %6 = load i64, i64* %offset, align 8, !dbg !13401
  %cmp = icmp eq i64 %6, 0, !dbg !13401
  br i1 %cmp, label %cond.false6, label %cond.true5, !dbg !13401

cond.true5:                                       ; preds = %if.end4
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 2511, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !13401
  br label %cond.end7, !dbg !13401

cond.false6:                                      ; preds = %if.end4
  br label %cond.end7, !dbg !13401

cond.end7:                                        ; preds = %cond.false6, %cond.true5
  %cond8 = phi i32 [ 0, %cond.true5 ], [ 0, %cond.false6 ], !dbg !13401
  %7 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !13402
  %var_part9 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %7, i32 0, i32 5, !dbg !13404
  %arrayidx10 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part9, i64 0, i64 0, !dbg !13402
  %loc_chain = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx10, i32 0, i32 0, !dbg !13405
  %8 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain, align 8, !dbg !13405
  store %struct.location_chain_def* %8, %struct.location_chain_def** %node, align 8, !dbg !13406
  br label %for.cond, !dbg !13407

for.cond:                                         ; preds = %for.inc, %cond.end7
  %9 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !13408
  %tobool11 = icmp ne %struct.location_chain_def* %9, null, !dbg !13410
  br i1 %tobool11, label %for.body, label %for.end, !dbg !13410

for.body:                                         ; preds = %for.cond
  %10 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !13411
  %11 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !13413
  %loc12 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %11, i32 0, i32 1, !dbg !13414
  %12 = load %struct.rtx_def*, %struct.rtx_def** %loc12, align 8, !dbg !13414
  %call13 = call i32 @rtx_equal_p(%struct.rtx_def* %10, %struct.rtx_def* %12), !dbg !13415
  %tobool14 = icmp ne i32 %call13, 0, !dbg !13415
  br i1 %tobool14, label %if.then15, label %if.else, !dbg !13416

if.then15:                                        ; preds = %for.body
  %13 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !13417
  store %struct.location_chain_def* %13, %struct.location_chain_def** %retval, align 8, !dbg !13418
  br label %return, !dbg !13418

if.else:                                          ; preds = %for.body
  %14 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !13419
  %loc16 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %14, i32 0, i32 1, !dbg !13419
  %15 = load %struct.rtx_def*, %struct.rtx_def** %loc16, align 8, !dbg !13419
  %16 = bitcast %struct.rtx_def* %15 to i32*, !dbg !13419
  %bf.load = load i32, i32* %16, align 8, !dbg !13419
  %bf.clear = and i32 %bf.load, 65535, !dbg !13419
  %cmp17 = icmp eq i32 %bf.clear, 1, !dbg !13421
  br i1 %cmp17, label %land.lhs.true, label %if.end45, !dbg !13422

land.lhs.true:                                    ; preds = %if.else
  %17 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !13423
  %loc18 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %17, i32 0, i32 1, !dbg !13423
  %18 = load %struct.rtx_def*, %struct.rtx_def** %loc18, align 8, !dbg !13423
  %19 = bitcast %struct.rtx_def* %18 to i32*, !dbg !13423
  %bf.load19 = load i32, i32* %19, align 8, !dbg !13423
  %bf.lshr = lshr i32 %bf.load19, 29, !dbg !13423
  %bf.clear20 = and i32 %bf.lshr, 1, !dbg !13423
  %tobool21 = icmp ne i32 %bf.clear20, 0, !dbg !13423
  br i1 %tobool21, label %if.end45, label %if.then22, !dbg !13424

if.then22:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i8** %dv23, metadata !13425, metadata !DIExpression()), !dbg !13427
  %20 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !13428
  %loc24 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %20, i32 0, i32 1, !dbg !13429
  %21 = load %struct.rtx_def*, %struct.rtx_def** %loc24, align 8, !dbg !13429
  %call25 = call i8* @dv_from_value(%struct.rtx_def* %21), !dbg !13430
  store i8* %call25, i8** %dv23, align 8, !dbg !13427
  call void @llvm.dbg.declare(metadata %struct.variable_def** %var26, metadata !13431, metadata !DIExpression()), !dbg !13432
  %22 = load %struct.htab*, %struct.htab** %vars.addr, align 8, !dbg !13433
  %23 = load i8*, i8** %dv23, align 8, !dbg !13434
  %24 = load i8*, i8** %dv23, align 8, !dbg !13435
  %call27 = call i32 @dv_htab_hash(i8* %24), !dbg !13436
  %call28 = call i8* @htab_find_with_hash(%struct.htab* %22, i8* %23, i32 %call27), !dbg !13437
  %25 = bitcast i8* %call28 to %struct.variable_def*, !dbg !13438
  store %struct.variable_def* %25, %struct.variable_def** %var26, align 8, !dbg !13432
  %26 = load %struct.variable_def*, %struct.variable_def** %var26, align 8, !dbg !13439
  %tobool29 = icmp ne %struct.variable_def* %26, null, !dbg !13439
  br i1 %tobool29, label %if.then30, label %if.end44, !dbg !13441

if.then30:                                        ; preds = %if.then22
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %where, metadata !13442, metadata !DIExpression()), !dbg !13444
  %27 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !13445
  %loc31 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %27, i32 0, i32 1, !dbg !13445
  %28 = load %struct.rtx_def*, %struct.rtx_def** %loc31, align 8, !dbg !13445
  %29 = bitcast %struct.rtx_def* %28 to i32*, !dbg !13445
  %bf.load32 = load i32, i32* %29, align 8, !dbg !13446
  %bf.clear33 = and i32 %bf.load32, -536870913, !dbg !13446
  %bf.set = or i32 %bf.clear33, 536870912, !dbg !13446
  store i32 %bf.set, i32* %29, align 8, !dbg !13446
  %30 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !13447
  %31 = load %struct.variable_def*, %struct.variable_def** %var26, align 8, !dbg !13449
  %32 = load %struct.htab*, %struct.htab** %vars.addr, align 8, !dbg !13450
  %call34 = call %struct.location_chain_def* @find_loc_in_1pdv(%struct.rtx_def* %30, %struct.variable_def* %31, %struct.htab* %32), !dbg !13451
  store %struct.location_chain_def* %call34, %struct.location_chain_def** %where, align 8, !dbg !13452
  %tobool35 = icmp ne %struct.location_chain_def* %call34, null, !dbg !13452
  br i1 %tobool35, label %if.then36, label %if.end40, !dbg !13453

if.then36:                                        ; preds = %if.then30
  %33 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !13454
  %loc37 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %33, i32 0, i32 1, !dbg !13454
  %34 = load %struct.rtx_def*, %struct.rtx_def** %loc37, align 8, !dbg !13454
  %35 = bitcast %struct.rtx_def* %34 to i32*, !dbg !13454
  %bf.load38 = load i32, i32* %35, align 8, !dbg !13456
  %bf.clear39 = and i32 %bf.load38, -536870913, !dbg !13456
  store i32 %bf.clear39, i32* %35, align 8, !dbg !13456
  %36 = load %struct.location_chain_def*, %struct.location_chain_def** %where, align 8, !dbg !13457
  store %struct.location_chain_def* %36, %struct.location_chain_def** %retval, align 8, !dbg !13458
  br label %return, !dbg !13458

if.end40:                                         ; preds = %if.then30
  %37 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !13459
  %loc41 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %37, i32 0, i32 1, !dbg !13459
  %38 = load %struct.rtx_def*, %struct.rtx_def** %loc41, align 8, !dbg !13459
  %39 = bitcast %struct.rtx_def* %38 to i32*, !dbg !13459
  %bf.load42 = load i32, i32* %39, align 8, !dbg !13460
  %bf.clear43 = and i32 %bf.load42, -536870913, !dbg !13460
  store i32 %bf.clear43, i32* %39, align 8, !dbg !13460
  br label %if.end44, !dbg !13461

if.end44:                                         ; preds = %if.end40, %if.then22
  br label %if.end45, !dbg !13462

if.end45:                                         ; preds = %if.end44, %land.lhs.true, %if.else
  br label %if.end46

if.end46:                                         ; preds = %if.end45
  br label %for.inc, !dbg !13463

for.inc:                                          ; preds = %if.end46
  %40 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !13464
  %next = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %40, i32 0, i32 0, !dbg !13465
  %41 = load %struct.location_chain_def*, %struct.location_chain_def** %next, align 8, !dbg !13465
  store %struct.location_chain_def* %41, %struct.location_chain_def** %node, align 8, !dbg !13466
  br label %for.cond, !dbg !13467, !llvm.loop !13468

for.end:                                          ; preds = %for.cond
  store %struct.location_chain_def* null, %struct.location_chain_def** %retval, align 8, !dbg !13470
  br label %return, !dbg !13470

return:                                           ; preds = %for.end, %if.then36, %if.then15, %if.then3, %if.then
  %42 = load %struct.location_chain_def*, %struct.location_chain_def** %retval, align 8, !dbg !13471
  ret %struct.location_chain_def* %42, !dbg !13471
}

; Function Attrs: noinline nounwind uwtable
define internal void @insert_into_intersection(%struct.location_chain_def** %nodep, %struct.rtx_def* %loc, i32 %status) #0 !dbg !13472 {
entry:
  %nodep.addr = alloca %struct.location_chain_def**, align 8
  %loc.addr = alloca %struct.rtx_def*, align 8
  %status.addr = alloca i32, align 4
  %node = alloca %struct.location_chain_def*, align 8
  %r = alloca i32, align 4
  store %struct.location_chain_def** %nodep, %struct.location_chain_def*** %nodep.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.location_chain_def*** %nodep.addr, metadata !13475, metadata !DIExpression()), !dbg !13476
  store %struct.rtx_def* %loc, %struct.rtx_def** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %loc.addr, metadata !13477, metadata !DIExpression()), !dbg !13478
  store i32 %status, i32* %status.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %status.addr, metadata !13479, metadata !DIExpression()), !dbg !13480
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %node, metadata !13481, metadata !DIExpression()), !dbg !13482
  call void @llvm.dbg.declare(metadata i32* %r, metadata !13483, metadata !DIExpression()), !dbg !13484
  %0 = load %struct.location_chain_def**, %struct.location_chain_def*** %nodep.addr, align 8, !dbg !13485
  %1 = load %struct.location_chain_def*, %struct.location_chain_def** %0, align 8, !dbg !13487
  store %struct.location_chain_def* %1, %struct.location_chain_def** %node, align 8, !dbg !13488
  br label %for.cond, !dbg !13489

for.cond:                                         ; preds = %for.inc, %entry
  %2 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !13490
  %tobool = icmp ne %struct.location_chain_def* %2, null, !dbg !13492
  br i1 %tobool, label %for.body, label %for.end, !dbg !13492

for.body:                                         ; preds = %for.cond
  %3 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !13493
  %loc1 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %3, i32 0, i32 1, !dbg !13495
  %4 = load %struct.rtx_def*, %struct.rtx_def** %loc1, align 8, !dbg !13495
  %5 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !13496
  %call = call i32 @loc_cmp(%struct.rtx_def* %4, %struct.rtx_def* %5), !dbg !13497
  store i32 %call, i32* %r, align 4, !dbg !13498
  %cmp = icmp eq i32 %call, 0, !dbg !13499
  br i1 %cmp, label %if.then, label %if.else, !dbg !13500

if.then:                                          ; preds = %for.body
  %6 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !13501
  %init = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %6, i32 0, i32 3, !dbg !13501
  %7 = load i32, i32* %init, align 8, !dbg !13501
  %8 = load i32, i32* %status.addr, align 4, !dbg !13501
  %cmp2 = icmp ult i32 %7, %8, !dbg !13501
  br i1 %cmp2, label %cond.true, label %cond.false, !dbg !13501

cond.true:                                        ; preds = %if.then
  %9 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !13501
  %init3 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %9, i32 0, i32 3, !dbg !13501
  %10 = load i32, i32* %init3, align 8, !dbg !13501
  br label %cond.end, !dbg !13501

cond.false:                                       ; preds = %if.then
  %11 = load i32, i32* %status.addr, align 4, !dbg !13501
  br label %cond.end, !dbg !13501

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %10, %cond.true ], [ %11, %cond.false ], !dbg !13501
  %12 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !13503
  %init4 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %12, i32 0, i32 3, !dbg !13504
  store i32 %cond, i32* %init4, align 8, !dbg !13505
  br label %return, !dbg !13506

if.else:                                          ; preds = %for.body
  %13 = load i32, i32* %r, align 4, !dbg !13507
  %cmp5 = icmp sgt i32 %13, 0, !dbg !13509
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !13510

if.then6:                                         ; preds = %if.else
  br label %for.end, !dbg !13511

if.end:                                           ; preds = %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end
  br label %for.inc, !dbg !13512

for.inc:                                          ; preds = %if.end7
  %14 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !13513
  %next = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %14, i32 0, i32 0, !dbg !13514
  store %struct.location_chain_def** %next, %struct.location_chain_def*** %nodep.addr, align 8, !dbg !13515
  %15 = load %struct.location_chain_def**, %struct.location_chain_def*** %nodep.addr, align 8, !dbg !13516
  %16 = load %struct.location_chain_def*, %struct.location_chain_def** %15, align 8, !dbg !13517
  store %struct.location_chain_def* %16, %struct.location_chain_def** %node, align 8, !dbg !13518
  br label %for.cond, !dbg !13519, !llvm.loop !13520

for.end:                                          ; preds = %if.then6, %for.cond
  %17 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @loc_chain_pool, align 8, !dbg !13522
  %call8 = call i8* @pool_alloc(%struct.alloc_pool_def* %17), !dbg !13523
  %18 = bitcast i8* %call8 to %struct.location_chain_def*, !dbg !13524
  store %struct.location_chain_def* %18, %struct.location_chain_def** %node, align 8, !dbg !13525
  %19 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !13526
  %20 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !13527
  %loc9 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %20, i32 0, i32 1, !dbg !13528
  store %struct.rtx_def* %19, %struct.rtx_def** %loc9, align 8, !dbg !13529
  %21 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !13530
  %set_src = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %21, i32 0, i32 2, !dbg !13531
  store %struct.rtx_def* null, %struct.rtx_def** %set_src, align 8, !dbg !13532
  %22 = load i32, i32* %status.addr, align 4, !dbg !13533
  %23 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !13534
  %init10 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %23, i32 0, i32 3, !dbg !13535
  store i32 %22, i32* %init10, align 8, !dbg !13536
  %24 = load %struct.location_chain_def**, %struct.location_chain_def*** %nodep.addr, align 8, !dbg !13537
  %25 = load %struct.location_chain_def*, %struct.location_chain_def** %24, align 8, !dbg !13538
  %26 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !13539
  %next11 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %26, i32 0, i32 0, !dbg !13540
  store %struct.location_chain_def* %25, %struct.location_chain_def** %next11, align 8, !dbg !13541
  %27 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !13542
  %28 = load %struct.location_chain_def**, %struct.location_chain_def*** %nodep.addr, align 8, !dbg !13543
  store %struct.location_chain_def* %27, %struct.location_chain_def** %28, align 8, !dbg !13544
  br label %return, !dbg !13545

return:                                           ; preds = %for.end, %cond.end
  ret void, !dbg !13545
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.variable_def* @shared_hash_find(%struct.shared_hash_def* %vars, i8* %dv) #0 !dbg !13546 {
entry:
  %vars.addr = alloca %struct.shared_hash_def*, align 8
  %dv.addr = alloca i8*, align 8
  store %struct.shared_hash_def* %vars, %struct.shared_hash_def** %vars.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.shared_hash_def** %vars.addr, metadata !13549, metadata !DIExpression()), !dbg !13550
  store i8* %dv, i8** %dv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dv.addr, metadata !13551, metadata !DIExpression()), !dbg !13552
  %0 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars.addr, align 8, !dbg !13553
  %1 = load i8*, i8** %dv.addr, align 8, !dbg !13554
  %2 = load i8*, i8** %dv.addr, align 8, !dbg !13555
  %call = call i32 @dv_htab_hash(i8* %2), !dbg !13556
  %call1 = call %struct.variable_def* @shared_hash_find_1(%struct.shared_hash_def* %0, i8* %1, i32 %call), !dbg !13557
  ret %struct.variable_def* %call1, !dbg !13558
}

; Function Attrs: noinline nounwind uwtable
define internal void @remove_value_chains(i8* %dv, %struct.rtx_def* %loc) #0 !dbg !13559 {
entry:
  %dv.addr = alloca i8*, align 8
  %loc.addr = alloca %struct.rtx_def*, align 8
  store i8* %dv, i8** %dv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dv.addr, metadata !13560, metadata !DIExpression()), !dbg !13561
  store %struct.rtx_def* %loc, %struct.rtx_def** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %loc.addr, metadata !13562, metadata !DIExpression()), !dbg !13563
  %0 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !13564
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !13564
  %bf.load = load i32, i32* %1, align 8, !dbg !13564
  %bf.clear = and i32 %bf.load, 65535, !dbg !13564
  %cmp = icmp eq i32 %bf.clear, 1, !dbg !13566
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !13567

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !13568
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !13568
  %bf.load1 = load i32, i32* %3, align 8, !dbg !13568
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !13568
  %cmp3 = icmp eq i32 %bf.clear2, 2, !dbg !13569
  br i1 %cmp3, label %if.then, label %if.end, !dbg !13570

if.then:                                          ; preds = %lor.lhs.false, %entry
  %4 = load i8*, i8** %dv.addr, align 8, !dbg !13571
  %call = call i8* @dv_as_opaque(i8* %4), !dbg !13573
  %call4 = call i32 @remove_value_chain(%struct.rtx_def** %loc.addr, i8* %call), !dbg !13574
  br label %return, !dbg !13575

if.end:                                           ; preds = %lor.lhs.false
  %5 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !13576
  %6 = bitcast %struct.rtx_def* %5 to i32*, !dbg !13576
  %bf.load5 = load i32, i32* %6, align 8, !dbg !13576
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !13576
  %cmp7 = icmp eq i32 %bf.clear6, 37, !dbg !13576
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !13578

if.then8:                                         ; preds = %if.end
  br label %return, !dbg !13579

if.end9:                                          ; preds = %if.end
  %7 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !13580
  %8 = bitcast %struct.rtx_def* %7 to i32*, !dbg !13580
  %bf.load10 = load i32, i32* %8, align 8, !dbg !13580
  %bf.clear11 = and i32 %bf.load10, 65535, !dbg !13580
  %cmp12 = icmp eq i32 %bf.clear11, 43, !dbg !13580
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !13582

if.then13:                                        ; preds = %if.end9
  %9 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !13583
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1, !dbg !13583
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !13583
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !13583
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !13583
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !13583
  store %struct.rtx_def* %10, %struct.rtx_def** %loc.addr, align 8, !dbg !13584
  br label %if.end14, !dbg !13585

if.end14:                                         ; preds = %if.then13, %if.end9
  %11 = load i8*, i8** %dv.addr, align 8, !dbg !13586
  %call15 = call i8* @dv_as_opaque(i8* %11), !dbg !13587
  %call16 = call i32 @for_each_rtx(%struct.rtx_def** %loc.addr, i32 (%struct.rtx_def**, i8*)* @remove_value_chain, i8* %call15), !dbg !13588
  br label %return, !dbg !13589

return:                                           ; preds = %if.end14, %if.then8, %if.then
  ret void, !dbg !13589
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @remove_value_chain(%struct.rtx_def** %loc, i8* %dvp) #0 !dbg !13590 {
entry:
  %retval = alloca i32, align 4
  %loc.addr = alloca %struct.rtx_def**, align 8
  %dvp.addr = alloca i8*, align 8
  %dv = alloca i8*, align 8
  %ldv = alloca i8*, align 8
  %vc = alloca %struct.value_chain_def*, align 8
  %slot = alloca i8**, align 8
  %dvc = alloca %struct.value_chain_def*, align 8
  store %struct.rtx_def** %loc, %struct.rtx_def*** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %loc.addr, metadata !13591, metadata !DIExpression()), !dbg !13592
  store i8* %dvp, i8** %dvp.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dvp.addr, metadata !13593, metadata !DIExpression()), !dbg !13594
  call void @llvm.dbg.declare(metadata i8** %dv, metadata !13595, metadata !DIExpression()), !dbg !13596
  call void @llvm.dbg.declare(metadata i8** %ldv, metadata !13597, metadata !DIExpression()), !dbg !13598
  call void @llvm.dbg.declare(metadata %struct.value_chain_def** %vc, metadata !13599, metadata !DIExpression()), !dbg !13600
  call void @llvm.dbg.declare(metadata i8*** %slot, metadata !13601, metadata !DIExpression()), !dbg !13602
  %0 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !13603
  %1 = load %struct.rtx_def*, %struct.rtx_def** %0, align 8, !dbg !13603
  %2 = bitcast %struct.rtx_def* %1 to i32*, !dbg !13603
  %bf.load = load i32, i32* %2, align 8, !dbg !13603
  %bf.clear = and i32 %bf.load, 65535, !dbg !13603
  %cmp = icmp eq i32 %bf.clear, 1, !dbg !13605
  br i1 %cmp, label %if.then, label %if.else, !dbg !13606

if.then:                                          ; preds = %entry
  %3 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !13607
  %4 = load %struct.rtx_def*, %struct.rtx_def** %3, align 8, !dbg !13608
  %call = call i8* @dv_from_value(%struct.rtx_def* %4), !dbg !13609
  store i8* %call, i8** %ldv, align 8, !dbg !13610
  br label %if.end7, !dbg !13611

if.else:                                          ; preds = %entry
  %5 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !13612
  %6 = load %struct.rtx_def*, %struct.rtx_def** %5, align 8, !dbg !13612
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !13612
  %bf.load1 = load i32, i32* %7, align 8, !dbg !13612
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !13612
  %cmp3 = icmp eq i32 %bf.clear2, 2, !dbg !13614
  br i1 %cmp3, label %if.then4, label %if.else6, !dbg !13615

if.then4:                                         ; preds = %if.else
  %8 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !13616
  %9 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8, !dbg !13616
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1, !dbg !13616
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !13616
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !13616
  %rt_tree = bitcast %union.rtunion_def* %arrayidx to %union.tree_node**, !dbg !13616
  %10 = load %union.tree_node*, %union.tree_node** %rt_tree, align 8, !dbg !13616
  %call5 = call i8* @dv_from_decl(%union.tree_node* %10), !dbg !13617
  store i8* %call5, i8** %ldv, align 8, !dbg !13618
  br label %if.end, !dbg !13619

if.else6:                                         ; preds = %if.else
  store i32 0, i32* %retval, align 4, !dbg !13620
  br label %return, !dbg !13620

if.end:                                           ; preds = %if.then4
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then
  %11 = load i8*, i8** %ldv, align 8, !dbg !13621
  %call8 = call i8* @dv_as_opaque(i8* %11), !dbg !13623
  %12 = load i8*, i8** %dvp.addr, align 8, !dbg !13624
  %cmp9 = icmp eq i8* %call8, %12, !dbg !13625
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !13626

if.then10:                                        ; preds = %if.end7
  store i32 0, i32* %retval, align 4, !dbg !13627
  br label %return, !dbg !13627

if.end11:                                         ; preds = %if.end7
  %13 = load i8*, i8** %dvp.addr, align 8, !dbg !13628
  store i8* %13, i8** %dv, align 8, !dbg !13629
  %14 = load %struct.htab*, %struct.htab** @value_chains, align 8, !dbg !13630
  %15 = load i8*, i8** %ldv, align 8, !dbg !13631
  %16 = load i8*, i8** %ldv, align 8, !dbg !13632
  %call12 = call i32 @dv_htab_hash(i8* %16), !dbg !13633
  %call13 = call i8** @htab_find_slot_with_hash(%struct.htab* %14, i8* %15, i32 %call12, i32 0), !dbg !13634
  store i8** %call13, i8*** %slot, align 8, !dbg !13635
  %17 = load i8**, i8*** %slot, align 8, !dbg !13636
  %18 = load i8*, i8** %17, align 8, !dbg !13638
  %19 = bitcast i8* %18 to %struct.value_chain_def*, !dbg !13639
  store %struct.value_chain_def* %19, %struct.value_chain_def** %vc, align 8, !dbg !13640
  br label %for.cond, !dbg !13641

for.cond:                                         ; preds = %for.inc, %if.end11
  %20 = load %struct.value_chain_def*, %struct.value_chain_def** %vc, align 8, !dbg !13642
  %next = getelementptr inbounds %struct.value_chain_def, %struct.value_chain_def* %20, i32 0, i32 0, !dbg !13644
  %21 = load %struct.value_chain_def*, %struct.value_chain_def** %next, align 8, !dbg !13644
  %tobool = icmp ne %struct.value_chain_def* %21, null, !dbg !13645
  br i1 %tobool, label %for.body, label %for.end, !dbg !13645

for.body:                                         ; preds = %for.cond
  %22 = load %struct.value_chain_def*, %struct.value_chain_def** %vc, align 8, !dbg !13646
  %next14 = getelementptr inbounds %struct.value_chain_def, %struct.value_chain_def* %22, i32 0, i32 0, !dbg !13648
  %23 = load %struct.value_chain_def*, %struct.value_chain_def** %next14, align 8, !dbg !13648
  %dv15 = getelementptr inbounds %struct.value_chain_def, %struct.value_chain_def* %23, i32 0, i32 1, !dbg !13649
  %24 = load i8*, i8** %dv15, align 8, !dbg !13649
  %call16 = call i8* @dv_as_opaque(i8* %24), !dbg !13650
  %25 = load i8*, i8** %dv, align 8, !dbg !13651
  %call17 = call i8* @dv_as_opaque(i8* %25), !dbg !13652
  %cmp18 = icmp eq i8* %call16, %call17, !dbg !13653
  br i1 %cmp18, label %if.then19, label %if.end33, !dbg !13654

if.then19:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.value_chain_def** %dvc, metadata !13655, metadata !DIExpression()), !dbg !13657
  %26 = load %struct.value_chain_def*, %struct.value_chain_def** %vc, align 8, !dbg !13658
  %next20 = getelementptr inbounds %struct.value_chain_def, %struct.value_chain_def* %26, i32 0, i32 0, !dbg !13659
  %27 = load %struct.value_chain_def*, %struct.value_chain_def** %next20, align 8, !dbg !13659
  store %struct.value_chain_def* %27, %struct.value_chain_def** %dvc, align 8, !dbg !13657
  %28 = load %struct.value_chain_def*, %struct.value_chain_def** %dvc, align 8, !dbg !13660
  %refcount = getelementptr inbounds %struct.value_chain_def, %struct.value_chain_def* %28, i32 0, i32 2, !dbg !13660
  %29 = load i32, i32* %refcount, align 8, !dbg !13660
  %cmp21 = icmp sgt i32 %29, 0, !dbg !13660
  br i1 %cmp21, label %cond.false, label %cond.true, !dbg !13660

cond.true:                                        ; preds = %if.then19
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 2925, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !13660
  br label %cond.end, !dbg !13660

cond.false:                                       ; preds = %if.then19
  br label %cond.end, !dbg !13660

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !13660
  %30 = load %struct.value_chain_def*, %struct.value_chain_def** %dvc, align 8, !dbg !13661
  %refcount22 = getelementptr inbounds %struct.value_chain_def, %struct.value_chain_def* %30, i32 0, i32 2, !dbg !13663
  %31 = load i32, i32* %refcount22, align 8, !dbg !13664
  %dec = add nsw i32 %31, -1, !dbg !13664
  store i32 %dec, i32* %refcount22, align 8, !dbg !13664
  %cmp23 = icmp eq i32 %dec, 0, !dbg !13665
  br i1 %cmp23, label %if.then24, label %if.end32, !dbg !13666

if.then24:                                        ; preds = %cond.end
  %32 = load %struct.value_chain_def*, %struct.value_chain_def** %dvc, align 8, !dbg !13667
  %next25 = getelementptr inbounds %struct.value_chain_def, %struct.value_chain_def* %32, i32 0, i32 0, !dbg !13669
  %33 = load %struct.value_chain_def*, %struct.value_chain_def** %next25, align 8, !dbg !13669
  %34 = load %struct.value_chain_def*, %struct.value_chain_def** %vc, align 8, !dbg !13670
  %next26 = getelementptr inbounds %struct.value_chain_def, %struct.value_chain_def* %34, i32 0, i32 0, !dbg !13671
  store %struct.value_chain_def* %33, %struct.value_chain_def** %next26, align 8, !dbg !13672
  %35 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @value_chain_pool, align 8, !dbg !13673
  %36 = load %struct.value_chain_def*, %struct.value_chain_def** %dvc, align 8, !dbg !13674
  %37 = bitcast %struct.value_chain_def* %36 to i8*, !dbg !13674
  call void @pool_free(%struct.alloc_pool_def* %35, i8* %37), !dbg !13675
  %38 = load %struct.value_chain_def*, %struct.value_chain_def** %vc, align 8, !dbg !13676
  %next27 = getelementptr inbounds %struct.value_chain_def, %struct.value_chain_def* %38, i32 0, i32 0, !dbg !13678
  %39 = load %struct.value_chain_def*, %struct.value_chain_def** %next27, align 8, !dbg !13678
  %cmp28 = icmp eq %struct.value_chain_def* %39, null, !dbg !13679
  br i1 %cmp28, label %land.lhs.true, label %if.end31, !dbg !13680

land.lhs.true:                                    ; preds = %if.then24
  %40 = load %struct.value_chain_def*, %struct.value_chain_def** %vc, align 8, !dbg !13681
  %41 = load i8**, i8*** %slot, align 8, !dbg !13682
  %42 = load i8*, i8** %41, align 8, !dbg !13683
  %43 = bitcast i8* %42 to %struct.value_chain_def*, !dbg !13684
  %cmp29 = icmp eq %struct.value_chain_def* %40, %43, !dbg !13685
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !13686

if.then30:                                        ; preds = %land.lhs.true
  %44 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @value_chain_pool, align 8, !dbg !13687
  %45 = load %struct.value_chain_def*, %struct.value_chain_def** %vc, align 8, !dbg !13689
  %46 = bitcast %struct.value_chain_def* %45 to i8*, !dbg !13689
  call void @pool_free(%struct.alloc_pool_def* %44, i8* %46), !dbg !13690
  %47 = load %struct.htab*, %struct.htab** @value_chains, align 8, !dbg !13691
  %48 = load i8**, i8*** %slot, align 8, !dbg !13692
  call void @htab_clear_slot(%struct.htab* %47, i8** %48), !dbg !13693
  br label %if.end31, !dbg !13694

if.end31:                                         ; preds = %if.then30, %land.lhs.true, %if.then24
  br label %if.end32, !dbg !13695

if.end32:                                         ; preds = %if.end31, %cond.end
  store i32 0, i32* %retval, align 4, !dbg !13696
  br label %return, !dbg !13696

if.end33:                                         ; preds = %for.body
  br label %for.inc, !dbg !13697

for.inc:                                          ; preds = %if.end33
  %49 = load %struct.value_chain_def*, %struct.value_chain_def** %vc, align 8, !dbg !13698
  %next34 = getelementptr inbounds %struct.value_chain_def, %struct.value_chain_def* %49, i32 0, i32 0, !dbg !13699
  %50 = load %struct.value_chain_def*, %struct.value_chain_def** %next34, align 8, !dbg !13699
  store %struct.value_chain_def* %50, %struct.value_chain_def** %vc, align 8, !dbg !13700
  br label %for.cond, !dbg !13701, !llvm.loop !13702

for.end:                                          ; preds = %for.cond
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 2938, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !13704
  store i32 0, i32* %retval, align 4, !dbg !13705
  br label %return, !dbg !13705

return:                                           ; preds = %for.end, %if.end32, %if.then10, %if.else6
  %51 = load i32, i32* %retval, align 4, !dbg !13706
  ret i32 %51, !dbg !13706
}

; Function Attrs: noinline nounwind uwtable
define internal void @clobber_variable_part(%struct.dataflow_set_def* %set, %struct.rtx_def* %loc, i8* %dv, i64 %offset, %struct.rtx_def* %set_src) #0 !dbg !13707 {
entry:
  %set.addr = alloca %struct.dataflow_set_def*, align 8
  %loc.addr = alloca %struct.rtx_def*, align 8
  %dv.addr = alloca i8*, align 8
  %offset.addr = alloca i64, align 8
  %set_src.addr = alloca %struct.rtx_def*, align 8
  %slot = alloca i8**, align 8
  store %struct.dataflow_set_def* %set, %struct.dataflow_set_def** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %set.addr, metadata !13710, metadata !DIExpression()), !dbg !13711
  store %struct.rtx_def* %loc, %struct.rtx_def** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %loc.addr, metadata !13712, metadata !DIExpression()), !dbg !13713
  store i8* %dv, i8** %dv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dv.addr, metadata !13714, metadata !DIExpression()), !dbg !13715
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !13716, metadata !DIExpression()), !dbg !13717
  store %struct.rtx_def* %set_src, %struct.rtx_def** %set_src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %set_src.addr, metadata !13718, metadata !DIExpression()), !dbg !13719
  call void @llvm.dbg.declare(metadata i8*** %slot, metadata !13720, metadata !DIExpression()), !dbg !13721
  %0 = load i8*, i8** %dv.addr, align 8, !dbg !13722
  %call = call i8* @dv_as_opaque(i8* %0), !dbg !13724
  %tobool = icmp ne i8* %call, null, !dbg !13724
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !13725

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8*, i8** %dv.addr, align 8, !dbg !13726
  %call1 = call zeroext i8 @dv_is_value_p(i8* %1), !dbg !13727
  %tobool2 = icmp ne i8 %call1, 0, !dbg !13727
  br i1 %tobool2, label %if.end, label %land.lhs.true, !dbg !13728

land.lhs.true:                                    ; preds = %lor.lhs.false
  %2 = load i8*, i8** %dv.addr, align 8, !dbg !13729
  %call3 = call %union.tree_node* @dv_as_decl(i8* %2), !dbg !13729
  %base = bitcast %union.tree_node* %call3 to %struct.tree_base*, !dbg !13729
  %3 = bitcast %struct.tree_base* %base to i64*, !dbg !13729
  %bf.load = load i64, i64* %3, align 8, !dbg !13729
  %bf.clear = and i64 %bf.load, 65535, !dbg !13729
  %bf.cast = trunc i64 %bf.clear to i32, !dbg !13729
  %idxprom = sext i32 %bf.cast to i64, !dbg !13729
  %arrayidx = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %idxprom, !dbg !13729
  %4 = load i32, i32* %arrayidx, align 4, !dbg !13729
  %cmp = icmp eq i32 %4, 3, !dbg !13729
  br i1 %cmp, label %if.end, label %if.then, !dbg !13730

if.then:                                          ; preds = %land.lhs.true, %entry
  br label %return, !dbg !13731

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false
  %5 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !13732
  %vars = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %5, i32 0, i32 2, !dbg !13733
  %6 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars, align 8, !dbg !13733
  %7 = load i8*, i8** %dv.addr, align 8, !dbg !13734
  %call4 = call i8** @shared_hash_find_slot_noinsert(%struct.shared_hash_def* %6, i8* %7), !dbg !13735
  store i8** %call4, i8*** %slot, align 8, !dbg !13736
  %8 = load i8**, i8*** %slot, align 8, !dbg !13737
  %tobool5 = icmp ne i8** %8, null, !dbg !13737
  br i1 %tobool5, label %if.end7, label %if.then6, !dbg !13739

if.then6:                                         ; preds = %if.end
  br label %return, !dbg !13740

if.end7:                                          ; preds = %if.end
  %9 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !13741
  %10 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !13742
  %11 = load i8**, i8*** %slot, align 8, !dbg !13743
  %12 = load i64, i64* %offset.addr, align 8, !dbg !13744
  %13 = load %struct.rtx_def*, %struct.rtx_def** %set_src.addr, align 8, !dbg !13745
  %call8 = call i8** @clobber_slot_part(%struct.dataflow_set_def* %9, %struct.rtx_def* %10, i8** %11, i64 %12, %struct.rtx_def* %13), !dbg !13746
  store i8** %call8, i8*** %slot, align 8, !dbg !13747
  br label %return, !dbg !13748

return:                                           ; preds = %if.end7, %if.then6, %if.then
  ret void, !dbg !13748
}

; Function Attrs: noinline nounwind uwtable
define internal i8** @clobber_slot_part(%struct.dataflow_set_def* %set, %struct.rtx_def* %loc, i8** %slot, i64 %offset, %struct.rtx_def* %set_src) #0 !dbg !13749 {
entry:
  %set.addr = alloca %struct.dataflow_set_def*, align 8
  %loc.addr = alloca %struct.rtx_def*, align 8
  %slot.addr = alloca i8**, align 8
  %offset.addr = alloca i64, align 8
  %set_src.addr = alloca %struct.rtx_def*, align 8
  %var = alloca %struct.variable_def*, align 8
  %pos = alloca i32, align 4
  %node = alloca %struct.location_chain_def*, align 8
  %next = alloca %struct.location_chain_def*, align 8
  %anode = alloca %struct.attrs_def*, align 8
  %anext = alloca %struct.attrs_def*, align 8
  %anextp = alloca %struct.attrs_def**, align 8
  store %struct.dataflow_set_def* %set, %struct.dataflow_set_def** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %set.addr, metadata !13752, metadata !DIExpression()), !dbg !13753
  store %struct.rtx_def* %loc, %struct.rtx_def** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %loc.addr, metadata !13754, metadata !DIExpression()), !dbg !13755
  store i8** %slot, i8*** %slot.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %slot.addr, metadata !13756, metadata !DIExpression()), !dbg !13757
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !13758, metadata !DIExpression()), !dbg !13759
  store %struct.rtx_def* %set_src, %struct.rtx_def** %set_src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %set_src.addr, metadata !13760, metadata !DIExpression()), !dbg !13761
  call void @llvm.dbg.declare(metadata %struct.variable_def** %var, metadata !13762, metadata !DIExpression()), !dbg !13763
  %0 = load i8**, i8*** %slot.addr, align 8, !dbg !13764
  %1 = load i8*, i8** %0, align 8, !dbg !13765
  %2 = bitcast i8* %1 to %struct.variable_def*, !dbg !13766
  store %struct.variable_def* %2, %struct.variable_def** %var, align 8, !dbg !13763
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !13767, metadata !DIExpression()), !dbg !13768
  %3 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !13769
  %4 = load i64, i64* %offset.addr, align 8, !dbg !13770
  %call = call i32 @find_variable_location_part(%struct.variable_def* %3, i64 %4, i32* null), !dbg !13771
  store i32 %call, i32* %pos, align 4, !dbg !13768
  %5 = load i32, i32* %pos, align 4, !dbg !13772
  %cmp = icmp sge i32 %5, 0, !dbg !13774
  br i1 %cmp, label %if.then, label %if.end41, !dbg !13775

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %node, metadata !13776, metadata !DIExpression()), !dbg !13778
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %next, metadata !13779, metadata !DIExpression()), !dbg !13780
  %6 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !13781
  %var_part = getelementptr inbounds %struct.variable_def, %struct.variable_def* %6, i32 0, i32 5, !dbg !13782
  %7 = load i32, i32* %pos, align 4, !dbg !13783
  %idxprom = sext i32 %7 to i64, !dbg !13781
  %arrayidx = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part, i64 0, i64 %idxprom, !dbg !13781
  %loc_chain = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx, i32 0, i32 0, !dbg !13784
  %8 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain, align 8, !dbg !13784
  store %struct.location_chain_def* %8, %struct.location_chain_def** %next, align 8, !dbg !13785
  %9 = load %struct.location_chain_def*, %struct.location_chain_def** %next, align 8, !dbg !13786
  store %struct.location_chain_def* %9, %struct.location_chain_def** %node, align 8, !dbg !13788
  br label %for.cond, !dbg !13789

for.cond:                                         ; preds = %for.inc39, %if.then
  %10 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !13790
  %tobool = icmp ne %struct.location_chain_def* %10, null, !dbg !13792
  br i1 %tobool, label %for.body, label %for.end40, !dbg !13792

for.body:                                         ; preds = %for.cond
  %11 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !13793
  %next1 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %11, i32 0, i32 0, !dbg !13795
  %12 = load %struct.location_chain_def*, %struct.location_chain_def** %next1, align 8, !dbg !13795
  store %struct.location_chain_def* %12, %struct.location_chain_def** %next, align 8, !dbg !13796
  %13 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !13797
  %loc2 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %13, i32 0, i32 1, !dbg !13799
  %14 = load %struct.rtx_def*, %struct.rtx_def** %loc2, align 8, !dbg !13799
  %15 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !13800
  %cmp3 = icmp ne %struct.rtx_def* %14, %15, !dbg !13801
  br i1 %cmp3, label %land.lhs.true, label %if.end38, !dbg !13802

land.lhs.true:                                    ; preds = %for.body
  %16 = load i32, i32* @flag_var_tracking_uninit, align 4, !dbg !13803
  %tobool4 = icmp ne i32 %16, 0, !dbg !13803
  br i1 %tobool4, label %lor.lhs.false, label %if.then12, !dbg !13804

lor.lhs.false:                                    ; preds = %land.lhs.true
  %17 = load %struct.rtx_def*, %struct.rtx_def** %set_src.addr, align 8, !dbg !13805
  %tobool5 = icmp ne %struct.rtx_def* %17, null, !dbg !13805
  br i1 %tobool5, label %lor.lhs.false6, label %if.then12, !dbg !13806

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %18 = load %struct.rtx_def*, %struct.rtx_def** %set_src.addr, align 8, !dbg !13807
  %19 = bitcast %struct.rtx_def* %18 to i32*, !dbg !13807
  %bf.load = load i32, i32* %19, align 8, !dbg !13807
  %bf.clear = and i32 %bf.load, 65535, !dbg !13807
  %cmp7 = icmp eq i32 %bf.clear, 43, !dbg !13807
  br i1 %cmp7, label %if.then12, label %lor.lhs.false8, !dbg !13808

lor.lhs.false8:                                   ; preds = %lor.lhs.false6
  %20 = load %struct.rtx_def*, %struct.rtx_def** %set_src.addr, align 8, !dbg !13809
  %21 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !13810
  %set_src9 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %21, i32 0, i32 2, !dbg !13811
  %22 = load %struct.rtx_def*, %struct.rtx_def** %set_src9, align 8, !dbg !13811
  %call10 = call i32 @rtx_equal_p(%struct.rtx_def* %20, %struct.rtx_def* %22), !dbg !13812
  %tobool11 = icmp ne i32 %call10, 0, !dbg !13812
  br i1 %tobool11, label %if.end38, label %if.then12, !dbg !13813

if.then12:                                        ; preds = %lor.lhs.false8, %lor.lhs.false6, %lor.lhs.false, %land.lhs.true
  %23 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !13814
  %loc13 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %23, i32 0, i32 1, !dbg !13814
  %24 = load %struct.rtx_def*, %struct.rtx_def** %loc13, align 8, !dbg !13814
  %25 = bitcast %struct.rtx_def* %24 to i32*, !dbg !13814
  %bf.load14 = load i32, i32* %25, align 8, !dbg !13814
  %bf.clear15 = and i32 %bf.load14, 65535, !dbg !13814
  %cmp16 = icmp eq i32 %bf.clear15, 37, !dbg !13814
  br i1 %cmp16, label %if.then17, label %if.end35, !dbg !13817

if.then17:                                        ; preds = %if.then12
  call void @llvm.dbg.declare(metadata %struct.attrs_def** %anode, metadata !13818, metadata !DIExpression()), !dbg !13820
  call void @llvm.dbg.declare(metadata %struct.attrs_def** %anext, metadata !13821, metadata !DIExpression()), !dbg !13822
  call void @llvm.dbg.declare(metadata %struct.attrs_def*** %anextp, metadata !13823, metadata !DIExpression()), !dbg !13824
  %26 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !13825
  %regs = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %26, i32 0, i32 1, !dbg !13826
  %27 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !13827
  %loc18 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %27, i32 0, i32 1, !dbg !13827
  %28 = load %struct.rtx_def*, %struct.rtx_def** %loc18, align 8, !dbg !13827
  %call19 = call i32 @rhs_regno(%struct.rtx_def* %28), !dbg !13827
  %idxprom20 = zext i32 %call19 to i64, !dbg !13825
  %arrayidx21 = getelementptr inbounds [53 x %struct.attrs_def*], [53 x %struct.attrs_def*]* %regs, i64 0, i64 %idxprom20, !dbg !13825
  store %struct.attrs_def** %arrayidx21, %struct.attrs_def*** %anextp, align 8, !dbg !13828
  %29 = load %struct.attrs_def**, %struct.attrs_def*** %anextp, align 8, !dbg !13829
  %30 = load %struct.attrs_def*, %struct.attrs_def** %29, align 8, !dbg !13831
  store %struct.attrs_def* %30, %struct.attrs_def** %anode, align 8, !dbg !13832
  br label %for.cond22, !dbg !13833

for.cond22:                                       ; preds = %for.inc, %if.then17
  %31 = load %struct.attrs_def*, %struct.attrs_def** %anode, align 8, !dbg !13834
  %tobool23 = icmp ne %struct.attrs_def* %31, null, !dbg !13836
  br i1 %tobool23, label %for.body24, label %for.end, !dbg !13836

for.body24:                                       ; preds = %for.cond22
  %32 = load %struct.attrs_def*, %struct.attrs_def** %anode, align 8, !dbg !13837
  %next25 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %32, i32 0, i32 0, !dbg !13839
  %33 = load %struct.attrs_def*, %struct.attrs_def** %next25, align 8, !dbg !13839
  store %struct.attrs_def* %33, %struct.attrs_def** %anext, align 8, !dbg !13840
  %34 = load %struct.attrs_def*, %struct.attrs_def** %anode, align 8, !dbg !13841
  %dv = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %34, i32 0, i32 2, !dbg !13843
  %35 = load i8*, i8** %dv, align 8, !dbg !13843
  %call26 = call i8* @dv_as_opaque(i8* %35), !dbg !13844
  %36 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !13845
  %dv27 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %36, i32 0, i32 0, !dbg !13846
  %37 = load i8*, i8** %dv27, align 8, !dbg !13846
  %call28 = call i8* @dv_as_opaque(i8* %37), !dbg !13847
  %cmp29 = icmp eq i8* %call26, %call28, !dbg !13848
  br i1 %cmp29, label %land.lhs.true30, label %if.else, !dbg !13849

land.lhs.true30:                                  ; preds = %for.body24
  %38 = load %struct.attrs_def*, %struct.attrs_def** %anode, align 8, !dbg !13850
  %offset31 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %38, i32 0, i32 3, !dbg !13851
  %39 = load i64, i64* %offset31, align 8, !dbg !13851
  %40 = load i64, i64* %offset.addr, align 8, !dbg !13852
  %cmp32 = icmp eq i64 %39, %40, !dbg !13853
  br i1 %cmp32, label %if.then33, label %if.else, !dbg !13854

if.then33:                                        ; preds = %land.lhs.true30
  %41 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @attrs_pool, align 8, !dbg !13855
  %42 = load %struct.attrs_def*, %struct.attrs_def** %anode, align 8, !dbg !13857
  %43 = bitcast %struct.attrs_def* %42 to i8*, !dbg !13857
  call void @pool_free(%struct.alloc_pool_def* %41, i8* %43), !dbg !13858
  %44 = load %struct.attrs_def*, %struct.attrs_def** %anext, align 8, !dbg !13859
  %45 = load %struct.attrs_def**, %struct.attrs_def*** %anextp, align 8, !dbg !13860
  store %struct.attrs_def* %44, %struct.attrs_def** %45, align 8, !dbg !13861
  br label %if.end, !dbg !13862

if.else:                                          ; preds = %land.lhs.true30, %for.body24
  %46 = load %struct.attrs_def*, %struct.attrs_def** %anode, align 8, !dbg !13863
  %next34 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %46, i32 0, i32 0, !dbg !13864
  store %struct.attrs_def** %next34, %struct.attrs_def*** %anextp, align 8, !dbg !13865
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then33
  br label %for.inc, !dbg !13866

for.inc:                                          ; preds = %if.end
  %47 = load %struct.attrs_def*, %struct.attrs_def** %anext, align 8, !dbg !13867
  store %struct.attrs_def* %47, %struct.attrs_def** %anode, align 8, !dbg !13868
  br label %for.cond22, !dbg !13869, !llvm.loop !13870

for.end:                                          ; preds = %for.cond22
  br label %if.end35, !dbg !13872

if.end35:                                         ; preds = %for.end, %if.then12
  %48 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !13873
  %49 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !13874
  %loc36 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %49, i32 0, i32 1, !dbg !13875
  %50 = load %struct.rtx_def*, %struct.rtx_def** %loc36, align 8, !dbg !13875
  %51 = load i8**, i8*** %slot.addr, align 8, !dbg !13876
  %52 = load i64, i64* %offset.addr, align 8, !dbg !13877
  %call37 = call i8** @delete_slot_part(%struct.dataflow_set_def* %48, %struct.rtx_def* %50, i8** %51, i64 %52), !dbg !13878
  store i8** %call37, i8*** %slot.addr, align 8, !dbg !13879
  br label %if.end38, !dbg !13880

if.end38:                                         ; preds = %if.end35, %lor.lhs.false8, %for.body
  br label %for.inc39, !dbg !13881

for.inc39:                                        ; preds = %if.end38
  %53 = load %struct.location_chain_def*, %struct.location_chain_def** %next, align 8, !dbg !13882
  store %struct.location_chain_def* %53, %struct.location_chain_def** %node, align 8, !dbg !13883
  br label %for.cond, !dbg !13884, !llvm.loop !13885

for.end40:                                        ; preds = %for.cond
  br label %if.end41, !dbg !13887

if.end41:                                         ; preds = %for.end40, %entry
  %54 = load i8**, i8*** %slot.addr, align 8, !dbg !13888
  ret i8** %54, !dbg !13889
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @variable_post_merge_new_vals(i8** %slot, i8* %info) #0 !dbg !13890 {
entry:
  %retval = alloca i32, align 4
  %slot.addr = alloca i8**, align 8
  %info.addr = alloca i8*, align 8
  %dfpm = alloca %struct.dfset_post_merge*, align 8
  %set = alloca %struct.dataflow_set_def*, align 8
  %var = alloca %struct.variable_def*, align 8
  %node = alloca %struct.location_chain_def*, align 8
  %check_dupes = alloca i8, align 1
  %att = alloca %struct.attrs_def*, align 8
  %attp = alloca %struct.attrs_def**, align 8
  %curp = alloca %struct.attrs_def**, align 8
  %cval = alloca %struct.rtx_def*, align 8
  %cdv = alloca i8*, align 8
  %cval105 = alloca %struct.rtx_def*, align 8
  %v = alloca %struct.cselib_val_struct*, align 8
  store i8** %slot, i8*** %slot.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %slot.addr, metadata !13891, metadata !DIExpression()), !dbg !13892
  store i8* %info, i8** %info.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %info.addr, metadata !13893, metadata !DIExpression()), !dbg !13894
  call void @llvm.dbg.declare(metadata %struct.dfset_post_merge** %dfpm, metadata !13895, metadata !DIExpression()), !dbg !13896
  %0 = load i8*, i8** %info.addr, align 8, !dbg !13897
  %1 = bitcast i8* %0 to %struct.dfset_post_merge*, !dbg !13898
  store %struct.dfset_post_merge* %1, %struct.dfset_post_merge** %dfpm, align 8, !dbg !13896
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %set, metadata !13899, metadata !DIExpression()), !dbg !13900
  %2 = load %struct.dfset_post_merge*, %struct.dfset_post_merge** %dfpm, align 8, !dbg !13901
  %set1 = getelementptr inbounds %struct.dfset_post_merge, %struct.dfset_post_merge* %2, i32 0, i32 0, !dbg !13902
  %3 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set1, align 8, !dbg !13902
  store %struct.dataflow_set_def* %3, %struct.dataflow_set_def** %set, align 8, !dbg !13900
  call void @llvm.dbg.declare(metadata %struct.variable_def** %var, metadata !13903, metadata !DIExpression()), !dbg !13904
  %4 = load i8**, i8*** %slot.addr, align 8, !dbg !13905
  %5 = load i8*, i8** %4, align 8, !dbg !13906
  %6 = bitcast i8* %5 to %struct.variable_def*, !dbg !13907
  store %struct.variable_def* %6, %struct.variable_def** %var, align 8, !dbg !13904
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %node, metadata !13908, metadata !DIExpression()), !dbg !13909
  %7 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !13910
  %dv = getelementptr inbounds %struct.variable_def, %struct.variable_def* %7, i32 0, i32 0, !dbg !13912
  %8 = load i8*, i8** %dv, align 8, !dbg !13912
  %call = call zeroext i8 @dv_onepart_p(i8* %8), !dbg !13913
  %tobool = icmp ne i8 %call, 0, !dbg !13913
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !13914

lor.lhs.false:                                    ; preds = %entry
  %9 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !13915
  %n_var_parts = getelementptr inbounds %struct.variable_def, %struct.variable_def* %9, i32 0, i32 2, !dbg !13916
  %10 = load i8, i8* %n_var_parts, align 4, !dbg !13916
  %tobool2 = icmp ne i8 %10, 0, !dbg !13915
  br i1 %tobool2, label %if.end, label %if.then, !dbg !13917

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 1, i32* %retval, align 4, !dbg !13918
  br label %return, !dbg !13918

if.end:                                           ; preds = %lor.lhs.false
  %11 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !13919
  %n_var_parts3 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %11, i32 0, i32 2, !dbg !13919
  %12 = load i8, i8* %n_var_parts3, align 4, !dbg !13919
  %conv = sext i8 %12 to i32, !dbg !13919
  %cmp = icmp eq i32 %conv, 1, !dbg !13919
  br i1 %cmp, label %cond.false, label %cond.true, !dbg !13919

cond.true:                                        ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 3797, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !13919
  br label %cond.end, !dbg !13919

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !13919

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !13919
  %13 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !13920
  %dv5 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %13, i32 0, i32 0, !dbg !13922
  %14 = load i8*, i8** %dv5, align 8, !dbg !13922
  %call6 = call zeroext i8 @dv_is_decl_p(i8* %14), !dbg !13923
  %tobool7 = icmp ne i8 %call6, 0, !dbg !13923
  br i1 %tobool7, label %if.then8, label %if.end195, !dbg !13924

if.then8:                                         ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i8* %check_dupes, metadata !13925, metadata !DIExpression()), !dbg !13927
  store i8 0, i8* %check_dupes, align 1, !dbg !13927
  br label %restart, !dbg !13928

restart:                                          ; preds = %if.then29, %if.then8
  call void @llvm.dbg.label(metadata !13929), !dbg !13930
  %15 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !13931
  %var_part = getelementptr inbounds %struct.variable_def, %struct.variable_def* %15, i32 0, i32 5, !dbg !13933
  %arrayidx = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part, i64 0, i64 0, !dbg !13931
  %loc_chain = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx, i32 0, i32 0, !dbg !13934
  %16 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain, align 8, !dbg !13934
  store %struct.location_chain_def* %16, %struct.location_chain_def** %node, align 8, !dbg !13935
  br label %for.cond, !dbg !13936

for.cond:                                         ; preds = %for.inc189, %restart
  %17 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !13937
  %tobool9 = icmp ne %struct.location_chain_def* %17, null, !dbg !13939
  br i1 %tobool9, label %for.body, label %for.end191, !dbg !13939

for.body:                                         ; preds = %for.cond
  %18 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !13940
  %loc = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %18, i32 0, i32 1, !dbg !13940
  %19 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !13940
  %20 = bitcast %struct.rtx_def* %19 to i32*, !dbg !13940
  %bf.load = load i32, i32* %20, align 8, !dbg !13940
  %bf.clear = and i32 %bf.load, 65535, !dbg !13940
  %cmp10 = icmp eq i32 %bf.clear, 1, !dbg !13943
  br i1 %cmp10, label %if.then12, label %if.else, !dbg !13944

if.then12:                                        ; preds = %for.body
  %21 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !13945
  %loc13 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %21, i32 0, i32 1, !dbg !13945
  %22 = load %struct.rtx_def*, %struct.rtx_def** %loc13, align 8, !dbg !13945
  %23 = bitcast %struct.rtx_def* %22 to i32*, !dbg !13945
  %bf.load14 = load i32, i32* %23, align 8, !dbg !13945
  %bf.lshr = lshr i32 %bf.load14, 29, !dbg !13945
  %bf.clear15 = and i32 %bf.lshr, 1, !dbg !13945
  %tobool16 = icmp ne i32 %bf.clear15, 0, !dbg !13945
  br i1 %tobool16, label %cond.true17, label %cond.false18, !dbg !13945

cond.true17:                                      ; preds = %if.then12
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 3807, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !13945
  br label %cond.end19, !dbg !13945

cond.false18:                                     ; preds = %if.then12
  br label %cond.end19, !dbg !13945

cond.end19:                                       ; preds = %cond.false18, %cond.true17
  %cond20 = phi i32 [ 0, %cond.true17 ], [ 0, %cond.false18 ], !dbg !13945
  br label %if.end188, !dbg !13945

if.else:                                          ; preds = %for.body
  %24 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !13946
  %loc21 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %24, i32 0, i32 1, !dbg !13946
  %25 = load %struct.rtx_def*, %struct.rtx_def** %loc21, align 8, !dbg !13946
  %26 = bitcast %struct.rtx_def* %25 to i32*, !dbg !13946
  %bf.load22 = load i32, i32* %26, align 8, !dbg !13946
  %bf.clear23 = and i32 %bf.load22, 65535, !dbg !13946
  %cmp24 = icmp eq i32 %bf.clear23, 37, !dbg !13948
  br i1 %cmp24, label %if.then26, label %if.end187, !dbg !13949

if.then26:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.attrs_def** %att, metadata !13950, metadata !DIExpression()), !dbg !13952
  call void @llvm.dbg.declare(metadata %struct.attrs_def*** %attp, metadata !13953, metadata !DIExpression()), !dbg !13954
  call void @llvm.dbg.declare(metadata %struct.attrs_def*** %curp, metadata !13955, metadata !DIExpression()), !dbg !13956
  store %struct.attrs_def** null, %struct.attrs_def*** %curp, align 8, !dbg !13956
  %27 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !13957
  %refcount = getelementptr inbounds %struct.variable_def, %struct.variable_def* %27, i32 0, i32 1, !dbg !13959
  %28 = load i32, i32* %refcount, align 8, !dbg !13959
  %cmp27 = icmp ne i32 %28, 1, !dbg !13960
  br i1 %cmp27, label %if.then29, label %if.end31, !dbg !13961

if.then29:                                        ; preds = %if.then26
  %29 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set, align 8, !dbg !13962
  %30 = load i8**, i8*** %slot.addr, align 8, !dbg !13964
  %31 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !13965
  %call30 = call i8** @unshare_variable(%struct.dataflow_set_def* %29, i8** %30, %struct.variable_def* %31, i32 2), !dbg !13966
  store i8** %call30, i8*** %slot.addr, align 8, !dbg !13967
  %32 = load i8**, i8*** %slot.addr, align 8, !dbg !13968
  %33 = load i8*, i8** %32, align 8, !dbg !13969
  %34 = bitcast i8* %33 to %struct.variable_def*, !dbg !13970
  store %struct.variable_def* %34, %struct.variable_def** %var, align 8, !dbg !13971
  br label %restart, !dbg !13972

if.end31:                                         ; preds = %if.then26
  %35 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set, align 8, !dbg !13973
  %regs = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %35, i32 0, i32 1, !dbg !13975
  %36 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !13976
  %loc32 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %36, i32 0, i32 1, !dbg !13976
  %37 = load %struct.rtx_def*, %struct.rtx_def** %loc32, align 8, !dbg !13976
  %call33 = call i32 @rhs_regno(%struct.rtx_def* %37), !dbg !13976
  %idxprom = zext i32 %call33 to i64, !dbg !13973
  %arrayidx34 = getelementptr inbounds [53 x %struct.attrs_def*], [53 x %struct.attrs_def*]* %regs, i64 0, i64 %idxprom, !dbg !13973
  store %struct.attrs_def** %arrayidx34, %struct.attrs_def*** %attp, align 8, !dbg !13977
  br label %for.cond35, !dbg !13978

for.cond35:                                       ; preds = %for.inc, %if.end31
  %38 = load %struct.attrs_def**, %struct.attrs_def*** %attp, align 8, !dbg !13979
  %39 = load %struct.attrs_def*, %struct.attrs_def** %38, align 8, !dbg !13981
  store %struct.attrs_def* %39, %struct.attrs_def** %att, align 8, !dbg !13982
  %tobool36 = icmp ne %struct.attrs_def* %39, null, !dbg !13983
  br i1 %tobool36, label %for.body37, label %for.end, !dbg !13983

for.body37:                                       ; preds = %for.cond35
  %40 = load %struct.attrs_def*, %struct.attrs_def** %att, align 8, !dbg !13984
  %offset = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %40, i32 0, i32 3, !dbg !13986
  %41 = load i64, i64* %offset, align 8, !dbg !13986
  %cmp38 = icmp eq i64 %41, 0, !dbg !13987
  br i1 %cmp38, label %land.lhs.true, label %if.end68, !dbg !13988

land.lhs.true:                                    ; preds = %for.body37
  %42 = load %struct.attrs_def*, %struct.attrs_def** %att, align 8, !dbg !13989
  %loc40 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %42, i32 0, i32 1, !dbg !13989
  %43 = load %struct.rtx_def*, %struct.rtx_def** %loc40, align 8, !dbg !13989
  %44 = bitcast %struct.rtx_def* %43 to i32*, !dbg !13989
  %bf.load41 = load i32, i32* %44, align 8, !dbg !13989
  %bf.lshr42 = lshr i32 %bf.load41, 16, !dbg !13989
  %bf.clear43 = and i32 %bf.lshr42, 255, !dbg !13989
  %45 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !13990
  %loc44 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %45, i32 0, i32 1, !dbg !13990
  %46 = load %struct.rtx_def*, %struct.rtx_def** %loc44, align 8, !dbg !13990
  %47 = bitcast %struct.rtx_def* %46 to i32*, !dbg !13990
  %bf.load45 = load i32, i32* %47, align 8, !dbg !13990
  %bf.lshr46 = lshr i32 %bf.load45, 16, !dbg !13990
  %bf.clear47 = and i32 %bf.lshr46, 255, !dbg !13990
  %cmp48 = icmp eq i32 %bf.clear43, %bf.clear47, !dbg !13991
  br i1 %cmp48, label %if.then50, label %if.end68, !dbg !13992

if.then50:                                        ; preds = %land.lhs.true
  %48 = load %struct.attrs_def*, %struct.attrs_def** %att, align 8, !dbg !13993
  %dv51 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %48, i32 0, i32 2, !dbg !13996
  %49 = load i8*, i8** %dv51, align 8, !dbg !13996
  %call52 = call zeroext i8 @dv_is_value_p(i8* %49), !dbg !13997
  %tobool53 = icmp ne i8 %call52, 0, !dbg !13997
  br i1 %tobool53, label %if.then54, label %if.else58, !dbg !13998

if.then54:                                        ; preds = %if.then50
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %cval, metadata !13999, metadata !DIExpression()), !dbg !14001
  %50 = load %struct.attrs_def*, %struct.attrs_def** %att, align 8, !dbg !14002
  %dv55 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %50, i32 0, i32 2, !dbg !14003
  %51 = load i8*, i8** %dv55, align 8, !dbg !14003
  %call56 = call %struct.rtx_def* @dv_as_value(i8* %51), !dbg !14004
  store %struct.rtx_def* %call56, %struct.rtx_def** %cval, align 8, !dbg !14001
  %52 = load %struct.rtx_def*, %struct.rtx_def** %cval, align 8, !dbg !14005
  %53 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14006
  %loc57 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %53, i32 0, i32 1, !dbg !14007
  store %struct.rtx_def* %52, %struct.rtx_def** %loc57, align 8, !dbg !14008
  store i8 1, i8* %check_dupes, align 1, !dbg !14009
  br label %for.end, !dbg !14010

if.else58:                                        ; preds = %if.then50
  %54 = load %struct.attrs_def*, %struct.attrs_def** %att, align 8, !dbg !14011
  %dv59 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %54, i32 0, i32 2, !dbg !14013
  %55 = load i8*, i8** %dv59, align 8, !dbg !14013
  %call60 = call i8* @dv_as_opaque(i8* %55), !dbg !14014
  %56 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !14015
  %dv61 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %56, i32 0, i32 0, !dbg !14016
  %57 = load i8*, i8** %dv61, align 8, !dbg !14016
  %call62 = call i8* @dv_as_opaque(i8* %57), !dbg !14017
  %cmp63 = icmp eq i8* %call60, %call62, !dbg !14018
  br i1 %cmp63, label %if.then65, label %if.end66, !dbg !14019

if.then65:                                        ; preds = %if.else58
  %58 = load %struct.attrs_def**, %struct.attrs_def*** %attp, align 8, !dbg !14020
  store %struct.attrs_def** %58, %struct.attrs_def*** %curp, align 8, !dbg !14021
  br label %if.end66, !dbg !14022

if.end66:                                         ; preds = %if.then65, %if.else58
  br label %if.end67

if.end67:                                         ; preds = %if.end66
  br label %if.end68, !dbg !14023

if.end68:                                         ; preds = %if.end67, %land.lhs.true, %for.body37
  br label %for.inc, !dbg !13990

for.inc:                                          ; preds = %if.end68
  %59 = load %struct.attrs_def*, %struct.attrs_def** %att, align 8, !dbg !14024
  %next = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %59, i32 0, i32 0, !dbg !14025
  store %struct.attrs_def** %next, %struct.attrs_def*** %attp, align 8, !dbg !14026
  br label %for.cond35, !dbg !14027, !llvm.loop !14028

for.end:                                          ; preds = %if.then54, %for.cond35
  %60 = load %struct.attrs_def**, %struct.attrs_def*** %curp, align 8, !dbg !14030
  %tobool69 = icmp ne %struct.attrs_def** %60, null, !dbg !14030
  br i1 %tobool69, label %if.end102, label %if.then70, !dbg !14032

if.then70:                                        ; preds = %for.end
  %61 = load %struct.attrs_def**, %struct.attrs_def*** %attp, align 8, !dbg !14033
  store %struct.attrs_def** %61, %struct.attrs_def*** %curp, align 8, !dbg !14035
  br label %while.cond, !dbg !14036

while.cond:                                       ; preds = %if.end96, %if.then70
  %62 = load %struct.attrs_def**, %struct.attrs_def*** %curp, align 8, !dbg !14037
  %63 = load %struct.attrs_def*, %struct.attrs_def** %62, align 8, !dbg !14038
  %tobool71 = icmp ne %struct.attrs_def* %63, null, !dbg !14036
  br i1 %tobool71, label %while.body, label %while.end, !dbg !14036

while.body:                                       ; preds = %while.cond
  %64 = load %struct.attrs_def**, %struct.attrs_def*** %curp, align 8, !dbg !14039
  %65 = load %struct.attrs_def*, %struct.attrs_def** %64, align 8, !dbg !14041
  %offset72 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %65, i32 0, i32 3, !dbg !14042
  %66 = load i64, i64* %offset72, align 8, !dbg !14042
  %cmp73 = icmp eq i64 %66, 0, !dbg !14043
  br i1 %cmp73, label %land.lhs.true75, label %if.else94, !dbg !14044

land.lhs.true75:                                  ; preds = %while.body
  %67 = load %struct.attrs_def**, %struct.attrs_def*** %curp, align 8, !dbg !14045
  %68 = load %struct.attrs_def*, %struct.attrs_def** %67, align 8, !dbg !14045
  %loc76 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %68, i32 0, i32 1, !dbg !14045
  %69 = load %struct.rtx_def*, %struct.rtx_def** %loc76, align 8, !dbg !14045
  %70 = bitcast %struct.rtx_def* %69 to i32*, !dbg !14045
  %bf.load77 = load i32, i32* %70, align 8, !dbg !14045
  %bf.lshr78 = lshr i32 %bf.load77, 16, !dbg !14045
  %bf.clear79 = and i32 %bf.lshr78, 255, !dbg !14045
  %71 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14046
  %loc80 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %71, i32 0, i32 1, !dbg !14046
  %72 = load %struct.rtx_def*, %struct.rtx_def** %loc80, align 8, !dbg !14046
  %73 = bitcast %struct.rtx_def* %72 to i32*, !dbg !14046
  %bf.load81 = load i32, i32* %73, align 8, !dbg !14046
  %bf.lshr82 = lshr i32 %bf.load81, 16, !dbg !14046
  %bf.clear83 = and i32 %bf.lshr82, 255, !dbg !14046
  %cmp84 = icmp eq i32 %bf.clear79, %bf.clear83, !dbg !14047
  br i1 %cmp84, label %land.lhs.true86, label %if.else94, !dbg !14048

land.lhs.true86:                                  ; preds = %land.lhs.true75
  %74 = load %struct.attrs_def**, %struct.attrs_def*** %curp, align 8, !dbg !14049
  %75 = load %struct.attrs_def*, %struct.attrs_def** %74, align 8, !dbg !14050
  %dv87 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %75, i32 0, i32 2, !dbg !14051
  %76 = load i8*, i8** %dv87, align 8, !dbg !14051
  %call88 = call i8* @dv_as_opaque(i8* %76), !dbg !14052
  %77 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !14053
  %dv89 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %77, i32 0, i32 0, !dbg !14054
  %78 = load i8*, i8** %dv89, align 8, !dbg !14054
  %call90 = call i8* @dv_as_opaque(i8* %78), !dbg !14055
  %cmp91 = icmp eq i8* %call88, %call90, !dbg !14056
  br i1 %cmp91, label %if.then93, label %if.else94, !dbg !14057

if.then93:                                        ; preds = %land.lhs.true86
  br label %while.end, !dbg !14058

if.else94:                                        ; preds = %land.lhs.true86, %land.lhs.true75, %while.body
  %79 = load %struct.attrs_def**, %struct.attrs_def*** %curp, align 8, !dbg !14059
  %80 = load %struct.attrs_def*, %struct.attrs_def** %79, align 8, !dbg !14060
  %next95 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %80, i32 0, i32 0, !dbg !14061
  store %struct.attrs_def** %next95, %struct.attrs_def*** %curp, align 8, !dbg !14062
  br label %if.end96

if.end96:                                         ; preds = %if.else94
  br label %while.cond, !dbg !14036, !llvm.loop !14063

while.end:                                        ; preds = %if.then93, %while.cond
  %81 = load %struct.attrs_def**, %struct.attrs_def*** %curp, align 8, !dbg !14065
  %82 = load %struct.attrs_def*, %struct.attrs_def** %81, align 8, !dbg !14065
  %tobool97 = icmp ne %struct.attrs_def* %82, null, !dbg !14065
  br i1 %tobool97, label %cond.false99, label %cond.true98, !dbg !14065

cond.true98:                                      ; preds = %while.end
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 3846, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !14065
  br label %cond.end100, !dbg !14065

cond.false99:                                     ; preds = %while.end
  br label %cond.end100, !dbg !14065

cond.end100:                                      ; preds = %cond.false99, %cond.true98
  %cond101 = phi i32 [ 0, %cond.true98 ], [ 0, %cond.false99 ], !dbg !14065
  br label %if.end102, !dbg !14066

if.end102:                                        ; preds = %cond.end100, %for.end
  %83 = load %struct.attrs_def*, %struct.attrs_def** %att, align 8, !dbg !14067
  %tobool103 = icmp ne %struct.attrs_def* %83, null, !dbg !14067
  br i1 %tobool103, label %if.end185, label %if.then104, !dbg !14069

if.then104:                                       ; preds = %if.end102
  call void @llvm.dbg.declare(metadata i8** %cdv, metadata !14070, metadata !DIExpression()), !dbg !14072
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %cval105, metadata !14073, metadata !DIExpression()), !dbg !14074
  %84 = load %struct.dfset_post_merge*, %struct.dfset_post_merge** %dfpm, align 8, !dbg !14075
  %permp = getelementptr inbounds %struct.dfset_post_merge, %struct.dfset_post_merge* %84, i32 0, i32 1, !dbg !14077
  %85 = load %struct.dataflow_set_def**, %struct.dataflow_set_def*** %permp, align 8, !dbg !14077
  %86 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %85, align 8, !dbg !14078
  %tobool106 = icmp ne %struct.dataflow_set_def* %86, null, !dbg !14078
  br i1 %tobool106, label %if.end111, label %if.then107, !dbg !14079

if.then107:                                       ; preds = %if.then104
  %call108 = call i8* @xmalloc(i64 448), !dbg !14080
  %87 = bitcast i8* %call108 to %struct.dataflow_set_def*, !dbg !14080
  %88 = load %struct.dfset_post_merge*, %struct.dfset_post_merge** %dfpm, align 8, !dbg !14082
  %permp109 = getelementptr inbounds %struct.dfset_post_merge, %struct.dfset_post_merge* %88, i32 0, i32 1, !dbg !14083
  %89 = load %struct.dataflow_set_def**, %struct.dataflow_set_def*** %permp109, align 8, !dbg !14083
  store %struct.dataflow_set_def* %87, %struct.dataflow_set_def** %89, align 8, !dbg !14084
  %90 = load %struct.dfset_post_merge*, %struct.dfset_post_merge** %dfpm, align 8, !dbg !14085
  %permp110 = getelementptr inbounds %struct.dfset_post_merge, %struct.dfset_post_merge* %90, i32 0, i32 1, !dbg !14086
  %91 = load %struct.dataflow_set_def**, %struct.dataflow_set_def*** %permp110, align 8, !dbg !14086
  %92 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %91, align 8, !dbg !14087
  call void @dataflow_set_init(%struct.dataflow_set_def* %92), !dbg !14088
  br label %if.end111, !dbg !14089

if.end111:                                        ; preds = %if.then107, %if.then104
  %93 = load %struct.dfset_post_merge*, %struct.dfset_post_merge** %dfpm, align 8, !dbg !14090
  %permp112 = getelementptr inbounds %struct.dfset_post_merge, %struct.dfset_post_merge* %93, i32 0, i32 1, !dbg !14092
  %94 = load %struct.dataflow_set_def**, %struct.dataflow_set_def*** %permp112, align 8, !dbg !14092
  %95 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %94, align 8, !dbg !14093
  %regs113 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %95, i32 0, i32 1, !dbg !14094
  %96 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14095
  %loc114 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %96, i32 0, i32 1, !dbg !14095
  %97 = load %struct.rtx_def*, %struct.rtx_def** %loc114, align 8, !dbg !14095
  %call115 = call i32 @rhs_regno(%struct.rtx_def* %97), !dbg !14095
  %idxprom116 = zext i32 %call115 to i64, !dbg !14096
  %arrayidx117 = getelementptr inbounds [53 x %struct.attrs_def*], [53 x %struct.attrs_def*]* %regs113, i64 0, i64 %idxprom116, !dbg !14096
  %98 = load %struct.attrs_def*, %struct.attrs_def** %arrayidx117, align 8, !dbg !14096
  store %struct.attrs_def* %98, %struct.attrs_def** %att, align 8, !dbg !14097
  br label %for.cond118, !dbg !14098

for.cond118:                                      ; preds = %for.inc148, %if.end111
  %99 = load %struct.attrs_def*, %struct.attrs_def** %att, align 8, !dbg !14099
  %tobool119 = icmp ne %struct.attrs_def* %99, null, !dbg !14101
  br i1 %tobool119, label %for.body120, label %for.end150, !dbg !14101

for.body120:                                      ; preds = %for.cond118
  %100 = load %struct.attrs_def*, %struct.attrs_def** %att, align 8, !dbg !14102
  %loc121 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %100, i32 0, i32 1, !dbg !14102
  %101 = load %struct.rtx_def*, %struct.rtx_def** %loc121, align 8, !dbg !14102
  %102 = bitcast %struct.rtx_def* %101 to i32*, !dbg !14102
  %bf.load122 = load i32, i32* %102, align 8, !dbg !14102
  %bf.lshr123 = lshr i32 %bf.load122, 16, !dbg !14102
  %bf.clear124 = and i32 %bf.lshr123, 255, !dbg !14102
  %103 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14104
  %loc125 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %103, i32 0, i32 1, !dbg !14104
  %104 = load %struct.rtx_def*, %struct.rtx_def** %loc125, align 8, !dbg !14104
  %105 = bitcast %struct.rtx_def* %104 to i32*, !dbg !14104
  %bf.load126 = load i32, i32* %105, align 8, !dbg !14104
  %bf.lshr127 = lshr i32 %bf.load126, 16, !dbg !14104
  %bf.clear128 = and i32 %bf.lshr127, 255, !dbg !14104
  %cmp129 = icmp eq i32 %bf.clear124, %bf.clear128, !dbg !14105
  br i1 %cmp129, label %if.then131, label %if.end147, !dbg !14106

if.then131:                                       ; preds = %for.body120
  %106 = load %struct.attrs_def*, %struct.attrs_def** %att, align 8, !dbg !14107
  %offset132 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %106, i32 0, i32 3, !dbg !14107
  %107 = load i64, i64* %offset132, align 8, !dbg !14107
  %cmp133 = icmp eq i64 %107, 0, !dbg !14107
  br i1 %cmp133, label %cond.false136, label %cond.true135, !dbg !14107

cond.true135:                                     ; preds = %if.then131
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 3864, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !14107
  br label %cond.end137, !dbg !14107

cond.false136:                                    ; preds = %if.then131
  br label %cond.end137, !dbg !14107

cond.end137:                                      ; preds = %cond.false136, %cond.true135
  %cond138 = phi i32 [ 0, %cond.true135 ], [ 0, %cond.false136 ], !dbg !14107
  %108 = load %struct.attrs_def*, %struct.attrs_def** %att, align 8, !dbg !14109
  %dv139 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %108, i32 0, i32 2, !dbg !14109
  %109 = load i8*, i8** %dv139, align 8, !dbg !14109
  %call140 = call zeroext i8 @dv_is_value_p(i8* %109), !dbg !14109
  %tobool141 = icmp ne i8 %call140, 0, !dbg !14109
  br i1 %tobool141, label %cond.false143, label %cond.true142, !dbg !14109

cond.true142:                                     ; preds = %cond.end137
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 3865, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !14109
  br label %cond.end144, !dbg !14109

cond.false143:                                    ; preds = %cond.end137
  br label %cond.end144, !dbg !14109

cond.end144:                                      ; preds = %cond.false143, %cond.true142
  %cond145 = phi i32 [ 0, %cond.true142 ], [ 0, %cond.false143 ], !dbg !14109
  %110 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set, align 8, !dbg !14110
  %111 = load %struct.attrs_def*, %struct.attrs_def** %att, align 8, !dbg !14111
  %dv146 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %111, i32 0, i32 2, !dbg !14112
  %112 = load i8*, i8** %dv146, align 8, !dbg !14112
  call void @val_reset(%struct.dataflow_set_def* %110, i8* %112), !dbg !14113
  br label %for.end150, !dbg !14114

if.end147:                                        ; preds = %for.body120
  br label %for.inc148, !dbg !14104

for.inc148:                                       ; preds = %if.end147
  %113 = load %struct.attrs_def*, %struct.attrs_def** %att, align 8, !dbg !14115
  %next149 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %113, i32 0, i32 0, !dbg !14116
  %114 = load %struct.attrs_def*, %struct.attrs_def** %next149, align 8, !dbg !14116
  store %struct.attrs_def* %114, %struct.attrs_def** %att, align 8, !dbg !14117
  br label %for.cond118, !dbg !14118, !llvm.loop !14119

for.end150:                                       ; preds = %cond.end144, %for.cond118
  %115 = load %struct.attrs_def*, %struct.attrs_def** %att, align 8, !dbg !14121
  %tobool151 = icmp ne %struct.attrs_def* %115, null, !dbg !14121
  br i1 %tobool151, label %if.then152, label %if.else155, !dbg !14123

if.then152:                                       ; preds = %for.end150
  %116 = load %struct.attrs_def*, %struct.attrs_def** %att, align 8, !dbg !14124
  %dv153 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %116, i32 0, i32 2, !dbg !14126
  %117 = load i8*, i8** %dv153, align 8, !dbg !14126
  store i8* %117, i8** %cdv, align 8, !dbg !14127
  %118 = load i8*, i8** %cdv, align 8, !dbg !14128
  %call154 = call %struct.rtx_def* @dv_as_value(i8* %118), !dbg !14129
  store %struct.rtx_def* %call154, %struct.rtx_def** %cval105, align 8, !dbg !14130
  br label %if.end181, !dbg !14131

if.else155:                                       ; preds = %for.end150
  call void @llvm.dbg.declare(metadata %struct.cselib_val_struct** %v, metadata !14132, metadata !DIExpression()), !dbg !14134
  %119 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14135
  %loc156 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %119, i32 0, i32 1, !dbg !14135
  %120 = load %struct.rtx_def*, %struct.rtx_def** %loc156, align 8, !dbg !14135
  %121 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14135
  %loc157 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %121, i32 0, i32 1, !dbg !14135
  %122 = load %struct.rtx_def*, %struct.rtx_def** %loc157, align 8, !dbg !14135
  %123 = bitcast %struct.rtx_def* %122 to i32*, !dbg !14135
  %bf.load158 = load i32, i32* %123, align 8, !dbg !14135
  %bf.lshr159 = lshr i32 %bf.load158, 16, !dbg !14135
  %bf.clear160 = and i32 %bf.lshr159, 255, !dbg !14135
  %call161 = call %struct.cselib_val_struct* @cselib_lookup(%struct.rtx_def* %120, i32 %bf.clear160, i32 0), !dbg !14135
  %tobool162 = icmp ne %struct.cselib_val_struct* %call161, null, !dbg !14135
  br i1 %tobool162, label %cond.true163, label %cond.false164, !dbg !14135

cond.true163:                                     ; preds = %if.else155
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 3882, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !14135
  br label %cond.end165, !dbg !14135

cond.false164:                                    ; preds = %if.else155
  br label %cond.end165, !dbg !14135

cond.end165:                                      ; preds = %cond.false164, %cond.true163
  %cond166 = phi i32 [ 0, %cond.true163 ], [ 0, %cond.false164 ], !dbg !14135
  %124 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14136
  %loc167 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %124, i32 0, i32 1, !dbg !14137
  %125 = load %struct.rtx_def*, %struct.rtx_def** %loc167, align 8, !dbg !14137
  %126 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14138
  %loc168 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %126, i32 0, i32 1, !dbg !14138
  %127 = load %struct.rtx_def*, %struct.rtx_def** %loc168, align 8, !dbg !14138
  %128 = bitcast %struct.rtx_def* %127 to i32*, !dbg !14138
  %bf.load169 = load i32, i32* %128, align 8, !dbg !14138
  %bf.lshr170 = lshr i32 %bf.load169, 16, !dbg !14138
  %bf.clear171 = and i32 %bf.lshr170, 255, !dbg !14138
  %call172 = call %struct.cselib_val_struct* @cselib_lookup(%struct.rtx_def* %125, i32 %bf.clear171, i32 1), !dbg !14139
  store %struct.cselib_val_struct* %call172, %struct.cselib_val_struct** %v, align 8, !dbg !14140
  %129 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %v, align 8, !dbg !14141
  call void @cselib_preserve_value(%struct.cselib_val_struct* %129), !dbg !14142
  %130 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14143
  %loc173 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %130, i32 0, i32 1, !dbg !14144
  %131 = load %struct.rtx_def*, %struct.rtx_def** %loc173, align 8, !dbg !14144
  call void @cselib_invalidate_rtx(%struct.rtx_def* %131), !dbg !14145
  %132 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %v, align 8, !dbg !14146
  %val_rtx = getelementptr inbounds %struct.cselib_val_struct, %struct.cselib_val_struct* %132, i32 0, i32 2, !dbg !14147
  %133 = load %struct.rtx_def*, %struct.rtx_def** %val_rtx, align 8, !dbg !14147
  store %struct.rtx_def* %133, %struct.rtx_def** %cval105, align 8, !dbg !14148
  %134 = load %struct.rtx_def*, %struct.rtx_def** %cval105, align 8, !dbg !14149
  %call174 = call i8* @dv_from_value(%struct.rtx_def* %134), !dbg !14150
  store i8* %call174, i8** %cdv, align 8, !dbg !14151
  %135 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !14152
  %tobool175 = icmp ne %struct._IO_FILE* %135, null, !dbg !14152
  br i1 %tobool175, label %if.then176, label %if.end180, !dbg !14154

if.then176:                                       ; preds = %cond.end165
  %136 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !14155
  %137 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %v, align 8, !dbg !14156
  %uid = getelementptr inbounds %struct.cselib_val_struct, %struct.cselib_val_struct* %137, i32 0, i32 1, !dbg !14157
  %138 = load i32, i32* %uid, align 4, !dbg !14157
  %139 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %v, align 8, !dbg !14158
  %hash = getelementptr inbounds %struct.cselib_val_struct, %struct.cselib_val_struct* %139, i32 0, i32 0, !dbg !14159
  %140 = load i32, i32* %hash, align 8, !dbg !14159
  %141 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14160
  %loc177 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %141, i32 0, i32 1, !dbg !14160
  %142 = load %struct.rtx_def*, %struct.rtx_def** %loc177, align 8, !dbg !14160
  %call178 = call i32 @rhs_regno(%struct.rtx_def* %142), !dbg !14160
  %call179 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %136, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.27, i64 0, i64 0), i32 %138, i32 %140, i32 %call178), !dbg !14161
  br label %if.end180, !dbg !14161

if.end180:                                        ; preds = %if.then176, %cond.end165
  br label %if.end181

if.end181:                                        ; preds = %if.end180, %if.then152
  %143 = load %struct.dfset_post_merge*, %struct.dfset_post_merge** %dfpm, align 8, !dbg !14162
  %permp182 = getelementptr inbounds %struct.dfset_post_merge, %struct.dfset_post_merge* %143, i32 0, i32 1, !dbg !14163
  %144 = load %struct.dataflow_set_def**, %struct.dataflow_set_def*** %permp182, align 8, !dbg !14163
  %145 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %144, align 8, !dbg !14164
  %146 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14165
  %loc183 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %146, i32 0, i32 1, !dbg !14166
  %147 = load %struct.rtx_def*, %struct.rtx_def** %loc183, align 8, !dbg !14166
  %148 = load i8*, i8** %cdv, align 8, !dbg !14167
  call void @var_reg_decl_set(%struct.dataflow_set_def* %145, %struct.rtx_def* %147, i32 2, i8* %148, i64 0, %struct.rtx_def* null, i32 1), !dbg !14168
  %149 = load %struct.rtx_def*, %struct.rtx_def** %cval105, align 8, !dbg !14169
  %150 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14170
  %loc184 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %150, i32 0, i32 1, !dbg !14171
  store %struct.rtx_def* %149, %struct.rtx_def** %loc184, align 8, !dbg !14172
  store i8 1, i8* %check_dupes, align 1, !dbg !14173
  br label %if.end185, !dbg !14174

if.end185:                                        ; preds = %if.end181, %if.end102
  %151 = load %struct.attrs_def**, %struct.attrs_def*** %curp, align 8, !dbg !14175
  %152 = load %struct.attrs_def*, %struct.attrs_def** %151, align 8, !dbg !14176
  store %struct.attrs_def* %152, %struct.attrs_def** %att, align 8, !dbg !14177
  %153 = load %struct.attrs_def*, %struct.attrs_def** %att, align 8, !dbg !14178
  %next186 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %153, i32 0, i32 0, !dbg !14179
  %154 = load %struct.attrs_def*, %struct.attrs_def** %next186, align 8, !dbg !14179
  %155 = load %struct.attrs_def**, %struct.attrs_def*** %curp, align 8, !dbg !14180
  store %struct.attrs_def* %154, %struct.attrs_def** %155, align 8, !dbg !14181
  %156 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @attrs_pool, align 8, !dbg !14182
  %157 = load %struct.attrs_def*, %struct.attrs_def** %att, align 8, !dbg !14183
  %158 = bitcast %struct.attrs_def* %157 to i8*, !dbg !14183
  call void @pool_free(%struct.alloc_pool_def* %156, i8* %158), !dbg !14184
  br label %if.end187, !dbg !14185

if.end187:                                        ; preds = %if.end185, %if.else
  br label %if.end188

if.end188:                                        ; preds = %if.end187, %cond.end19
  br label %for.inc189, !dbg !14186

for.inc189:                                       ; preds = %if.end188
  %159 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14187
  %next190 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %159, i32 0, i32 0, !dbg !14188
  %160 = load %struct.location_chain_def*, %struct.location_chain_def** %next190, align 8, !dbg !14188
  store %struct.location_chain_def* %160, %struct.location_chain_def** %node, align 8, !dbg !14189
  br label %for.cond, !dbg !14190, !llvm.loop !14191

for.end191:                                       ; preds = %for.cond
  %161 = load i8, i8* %check_dupes, align 1, !dbg !14193
  %tobool192 = icmp ne i8 %161, 0, !dbg !14193
  br i1 %tobool192, label %if.then193, label %if.end194, !dbg !14195

if.then193:                                       ; preds = %for.end191
  %162 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !14196
  call void @remove_duplicate_values(%struct.variable_def* %162), !dbg !14197
  br label %if.end194, !dbg !14197

if.end194:                                        ; preds = %if.then193, %for.end191
  br label %if.end195, !dbg !14198

if.end195:                                        ; preds = %if.end194, %cond.end
  store i32 1, i32* %retval, align 4, !dbg !14199
  br label %return, !dbg !14199

return:                                           ; preds = %if.end195, %if.then
  %163 = load i32, i32* %retval, align 4, !dbg !14200
  ret i32 %163, !dbg !14200
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @variable_post_merge_perm_vals(i8** %pslot, i8* %info) #0 !dbg !14201 {
entry:
  %retval = alloca i32, align 4
  %pslot.addr = alloca i8**, align 8
  %info.addr = alloca i8*, align 8
  %dfpm = alloca %struct.dfset_post_merge*, align 8
  %set = alloca %struct.dataflow_set_def*, align 8
  %pvar = alloca %struct.variable_def*, align 8
  %var = alloca %struct.variable_def*, align 8
  %pnode = alloca %struct.location_chain_def*, align 8
  %dv = alloca i8*, align 8
  %att = alloca %struct.attrs_def*, align 8
  %cval = alloca %struct.rtx_def*, align 8
  store i8** %pslot, i8*** %pslot.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %pslot.addr, metadata !14202, metadata !DIExpression()), !dbg !14203
  store i8* %info, i8** %info.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %info.addr, metadata !14204, metadata !DIExpression()), !dbg !14205
  call void @llvm.dbg.declare(metadata %struct.dfset_post_merge** %dfpm, metadata !14206, metadata !DIExpression()), !dbg !14207
  %0 = load i8*, i8** %info.addr, align 8, !dbg !14208
  %1 = bitcast i8* %0 to %struct.dfset_post_merge*, !dbg !14209
  store %struct.dfset_post_merge* %1, %struct.dfset_post_merge** %dfpm, align 8, !dbg !14207
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %set, metadata !14210, metadata !DIExpression()), !dbg !14211
  %2 = load %struct.dfset_post_merge*, %struct.dfset_post_merge** %dfpm, align 8, !dbg !14212
  %set1 = getelementptr inbounds %struct.dfset_post_merge, %struct.dfset_post_merge* %2, i32 0, i32 0, !dbg !14213
  %3 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set1, align 8, !dbg !14213
  store %struct.dataflow_set_def* %3, %struct.dataflow_set_def** %set, align 8, !dbg !14211
  call void @llvm.dbg.declare(metadata %struct.variable_def** %pvar, metadata !14214, metadata !DIExpression()), !dbg !14215
  %4 = load i8**, i8*** %pslot.addr, align 8, !dbg !14216
  %5 = load i8*, i8** %4, align 8, !dbg !14217
  %6 = bitcast i8* %5 to %struct.variable_def*, !dbg !14218
  store %struct.variable_def* %6, %struct.variable_def** %pvar, align 8, !dbg !14215
  call void @llvm.dbg.declare(metadata %struct.variable_def** %var, metadata !14219, metadata !DIExpression()), !dbg !14220
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %pnode, metadata !14221, metadata !DIExpression()), !dbg !14222
  call void @llvm.dbg.declare(metadata i8** %dv, metadata !14223, metadata !DIExpression()), !dbg !14224
  call void @llvm.dbg.declare(metadata %struct.attrs_def** %att, metadata !14225, metadata !DIExpression()), !dbg !14226
  %7 = load %struct.variable_def*, %struct.variable_def** %pvar, align 8, !dbg !14227
  %dv2 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %7, i32 0, i32 0, !dbg !14227
  %8 = load i8*, i8** %dv2, align 8, !dbg !14227
  %call = call zeroext i8 @dv_is_value_p(i8* %8), !dbg !14227
  %tobool = icmp ne i8 %call, 0, !dbg !14227
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !14227

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 3931, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !14227
  br label %cond.end, !dbg !14227

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14227

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !14227
  %9 = load %struct.variable_def*, %struct.variable_def** %pvar, align 8, !dbg !14228
  %n_var_parts = getelementptr inbounds %struct.variable_def, %struct.variable_def* %9, i32 0, i32 2, !dbg !14228
  %10 = load i8, i8* %n_var_parts, align 4, !dbg !14228
  %conv = sext i8 %10 to i32, !dbg !14228
  %cmp = icmp eq i32 %conv, 1, !dbg !14228
  br i1 %cmp, label %cond.false5, label %cond.true4, !dbg !14228

cond.true4:                                       ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 3932, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !14228
  br label %cond.end6, !dbg !14228

cond.false5:                                      ; preds = %cond.end
  br label %cond.end6, !dbg !14228

cond.end6:                                        ; preds = %cond.false5, %cond.true4
  %cond7 = phi i32 [ 0, %cond.true4 ], [ 0, %cond.false5 ], !dbg !14228
  %11 = load %struct.variable_def*, %struct.variable_def** %pvar, align 8, !dbg !14229
  %var_part = getelementptr inbounds %struct.variable_def, %struct.variable_def* %11, i32 0, i32 5, !dbg !14230
  %arrayidx = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part, i64 0, i64 0, !dbg !14229
  %loc_chain = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx, i32 0, i32 0, !dbg !14231
  %12 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain, align 8, !dbg !14231
  store %struct.location_chain_def* %12, %struct.location_chain_def** %pnode, align 8, !dbg !14232
  %13 = load %struct.location_chain_def*, %struct.location_chain_def** %pnode, align 8, !dbg !14233
  %tobool8 = icmp ne %struct.location_chain_def* %13, null, !dbg !14233
  br i1 %tobool8, label %cond.false10, label %cond.true9, !dbg !14233

cond.true9:                                       ; preds = %cond.end6
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 3934, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !14233
  br label %cond.end11, !dbg !14233

cond.false10:                                     ; preds = %cond.end6
  br label %cond.end11, !dbg !14233

cond.end11:                                       ; preds = %cond.false10, %cond.true9
  %cond12 = phi i32 [ 0, %cond.true9 ], [ 0, %cond.false10 ], !dbg !14233
  %14 = load %struct.location_chain_def*, %struct.location_chain_def** %pnode, align 8, !dbg !14234
  %next = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %14, i32 0, i32 0, !dbg !14234
  %15 = load %struct.location_chain_def*, %struct.location_chain_def** %next, align 8, !dbg !14234
  %tobool13 = icmp ne %struct.location_chain_def* %15, null, !dbg !14234
  br i1 %tobool13, label %cond.true14, label %cond.false15, !dbg !14234

cond.true14:                                      ; preds = %cond.end11
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 3935, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !14234
  br label %cond.end16, !dbg !14234

cond.false15:                                     ; preds = %cond.end11
  br label %cond.end16, !dbg !14234

cond.end16:                                       ; preds = %cond.false15, %cond.true14
  %cond17 = phi i32 [ 0, %cond.true14 ], [ 0, %cond.false15 ], !dbg !14234
  %16 = load %struct.location_chain_def*, %struct.location_chain_def** %pnode, align 8, !dbg !14235
  %loc = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %16, i32 0, i32 1, !dbg !14235
  %17 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !14235
  %18 = bitcast %struct.rtx_def* %17 to i32*, !dbg !14235
  %bf.load = load i32, i32* %18, align 8, !dbg !14235
  %bf.clear = and i32 %bf.load, 65535, !dbg !14235
  %cmp18 = icmp eq i32 %bf.clear, 37, !dbg !14235
  br i1 %cmp18, label %cond.false21, label %cond.true20, !dbg !14235

cond.true20:                                      ; preds = %cond.end16
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 3936, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !14235
  br label %cond.end22, !dbg !14235

cond.false21:                                     ; preds = %cond.end16
  br label %cond.end22, !dbg !14235

cond.end22:                                       ; preds = %cond.false21, %cond.true20
  %cond23 = phi i32 [ 0, %cond.true20 ], [ 0, %cond.false21 ], !dbg !14235
  %19 = load %struct.variable_def*, %struct.variable_def** %pvar, align 8, !dbg !14236
  %dv24 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %19, i32 0, i32 0, !dbg !14237
  %20 = load i8*, i8** %dv24, align 8, !dbg !14237
  store i8* %20, i8** %dv, align 8, !dbg !14238
  %21 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set, align 8, !dbg !14239
  %vars = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %21, i32 0, i32 2, !dbg !14240
  %22 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars, align 8, !dbg !14240
  %23 = load i8*, i8** %dv, align 8, !dbg !14241
  %call25 = call %struct.variable_def* @shared_hash_find(%struct.shared_hash_def* %22, i8* %23), !dbg !14242
  store %struct.variable_def* %call25, %struct.variable_def** %var, align 8, !dbg !14243
  %24 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !14244
  %tobool26 = icmp ne %struct.variable_def* %24, null, !dbg !14244
  br i1 %tobool26, label %if.then, label %if.end33, !dbg !14246

if.then:                                          ; preds = %cond.end22
  %25 = load %struct.location_chain_def*, %struct.location_chain_def** %pnode, align 8, !dbg !14247
  %loc27 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %25, i32 0, i32 1, !dbg !14250
  %26 = load %struct.rtx_def*, %struct.rtx_def** %loc27, align 8, !dbg !14250
  %27 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !14251
  %28 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set, align 8, !dbg !14252
  %vars28 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %28, i32 0, i32 2, !dbg !14253
  %29 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars28, align 8, !dbg !14253
  %call29 = call %struct.htab* @shared_hash_htab(%struct.shared_hash_def* %29), !dbg !14254
  %call30 = call %struct.location_chain_def* @find_loc_in_1pdv(%struct.rtx_def* %26, %struct.variable_def* %27, %struct.htab* %call29), !dbg !14255
  %tobool31 = icmp ne %struct.location_chain_def* %call30, null, !dbg !14255
  br i1 %tobool31, label %if.then32, label %if.end, !dbg !14256

if.then32:                                        ; preds = %if.then
  store i32 1, i32* %retval, align 4, !dbg !14257
  br label %return, !dbg !14257

if.end:                                           ; preds = %if.then
  %30 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set, align 8, !dbg !14258
  %31 = load i8*, i8** %dv, align 8, !dbg !14259
  call void @val_reset(%struct.dataflow_set_def* %30, i8* %31), !dbg !14260
  br label %if.end33, !dbg !14261

if.end33:                                         ; preds = %if.end, %cond.end22
  %32 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set, align 8, !dbg !14262
  %regs = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %32, i32 0, i32 1, !dbg !14264
  %33 = load %struct.location_chain_def*, %struct.location_chain_def** %pnode, align 8, !dbg !14265
  %loc34 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %33, i32 0, i32 1, !dbg !14265
  %34 = load %struct.rtx_def*, %struct.rtx_def** %loc34, align 8, !dbg !14265
  %call35 = call i32 @rhs_regno(%struct.rtx_def* %34), !dbg !14265
  %idxprom = zext i32 %call35 to i64, !dbg !14262
  %arrayidx36 = getelementptr inbounds [53 x %struct.attrs_def*], [53 x %struct.attrs_def*]* %regs, i64 0, i64 %idxprom, !dbg !14262
  %35 = load %struct.attrs_def*, %struct.attrs_def** %arrayidx36, align 8, !dbg !14262
  store %struct.attrs_def* %35, %struct.attrs_def** %att, align 8, !dbg !14266
  br label %for.cond, !dbg !14267

for.cond:                                         ; preds = %for.inc, %if.end33
  %36 = load %struct.attrs_def*, %struct.attrs_def** %att, align 8, !dbg !14268
  %tobool37 = icmp ne %struct.attrs_def* %36, null, !dbg !14270
  br i1 %tobool37, label %for.body, label %for.end, !dbg !14270

for.body:                                         ; preds = %for.cond
  %37 = load %struct.attrs_def*, %struct.attrs_def** %att, align 8, !dbg !14271
  %offset = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %37, i32 0, i32 3, !dbg !14273
  %38 = load i64, i64* %offset, align 8, !dbg !14273
  %cmp38 = icmp eq i64 %38, 0, !dbg !14274
  br i1 %cmp38, label %land.lhs.true, label %if.end55, !dbg !14275

land.lhs.true:                                    ; preds = %for.body
  %39 = load %struct.attrs_def*, %struct.attrs_def** %att, align 8, !dbg !14276
  %loc40 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %39, i32 0, i32 1, !dbg !14276
  %40 = load %struct.rtx_def*, %struct.rtx_def** %loc40, align 8, !dbg !14276
  %41 = bitcast %struct.rtx_def* %40 to i32*, !dbg !14276
  %bf.load41 = load i32, i32* %41, align 8, !dbg !14276
  %bf.lshr = lshr i32 %bf.load41, 16, !dbg !14276
  %bf.clear42 = and i32 %bf.lshr, 255, !dbg !14276
  %42 = load %struct.location_chain_def*, %struct.location_chain_def** %pnode, align 8, !dbg !14277
  %loc43 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %42, i32 0, i32 1, !dbg !14277
  %43 = load %struct.rtx_def*, %struct.rtx_def** %loc43, align 8, !dbg !14277
  %44 = bitcast %struct.rtx_def* %43 to i32*, !dbg !14277
  %bf.load44 = load i32, i32* %44, align 8, !dbg !14277
  %bf.lshr45 = lshr i32 %bf.load44, 16, !dbg !14277
  %bf.clear46 = and i32 %bf.lshr45, 255, !dbg !14277
  %cmp47 = icmp eq i32 %bf.clear42, %bf.clear46, !dbg !14278
  br i1 %cmp47, label %land.lhs.true49, label %if.end55, !dbg !14279

land.lhs.true49:                                  ; preds = %land.lhs.true
  %45 = load %struct.attrs_def*, %struct.attrs_def** %att, align 8, !dbg !14280
  %dv50 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %45, i32 0, i32 2, !dbg !14281
  %46 = load i8*, i8** %dv50, align 8, !dbg !14281
  %call51 = call zeroext i8 @dv_is_value_p(i8* %46), !dbg !14282
  %conv52 = zext i8 %call51 to i32, !dbg !14282
  %tobool53 = icmp ne i32 %conv52, 0, !dbg !14282
  br i1 %tobool53, label %if.then54, label %if.end55, !dbg !14283

if.then54:                                        ; preds = %land.lhs.true49
  br label %for.end, !dbg !14284

if.end55:                                         ; preds = %land.lhs.true49, %land.lhs.true, %for.body
  br label %for.inc, !dbg !14285

for.inc:                                          ; preds = %if.end55
  %47 = load %struct.attrs_def*, %struct.attrs_def** %att, align 8, !dbg !14286
  %next56 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %47, i32 0, i32 0, !dbg !14287
  %48 = load %struct.attrs_def*, %struct.attrs_def** %next56, align 8, !dbg !14287
  store %struct.attrs_def* %48, %struct.attrs_def** %att, align 8, !dbg !14288
  br label %for.cond, !dbg !14289, !llvm.loop !14290

for.end:                                          ; preds = %if.then54, %for.cond
  %49 = load %struct.attrs_def*, %struct.attrs_def** %att, align 8, !dbg !14292
  %tobool57 = icmp ne %struct.attrs_def* %49, null, !dbg !14292
  br i1 %tobool57, label %land.lhs.true58, label %if.else, !dbg !14294

land.lhs.true58:                                  ; preds = %for.end
  %50 = load %struct.attrs_def*, %struct.attrs_def** %att, align 8, !dbg !14295
  %dv59 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %50, i32 0, i32 2, !dbg !14296
  %51 = load i8*, i8** %dv59, align 8, !dbg !14296
  %call60 = call %struct.rtx_def* @dv_as_value(i8* %51), !dbg !14297
  %52 = load i8*, i8** %dv, align 8, !dbg !14298
  %call61 = call %struct.rtx_def* @dv_as_value(i8* %52), !dbg !14299
  %cmp62 = icmp ne %struct.rtx_def* %call60, %call61, !dbg !14300
  br i1 %cmp62, label %if.then64, label %if.else, !dbg !14301

if.then64:                                        ; preds = %land.lhs.true58
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %cval, metadata !14302, metadata !DIExpression()), !dbg !14304
  %53 = load %struct.attrs_def*, %struct.attrs_def** %att, align 8, !dbg !14305
  %dv65 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %53, i32 0, i32 2, !dbg !14306
  %54 = load i8*, i8** %dv65, align 8, !dbg !14306
  %call66 = call %struct.rtx_def* @dv_as_value(i8* %54), !dbg !14307
  store %struct.rtx_def* %call66, %struct.rtx_def** %cval, align 8, !dbg !14304
  %55 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set, align 8, !dbg !14308
  %56 = load %struct.rtx_def*, %struct.rtx_def** %cval, align 8, !dbg !14309
  %57 = load i8*, i8** %dv, align 8, !dbg !14310
  %58 = load %struct.location_chain_def*, %struct.location_chain_def** %pnode, align 8, !dbg !14311
  %init = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %58, i32 0, i32 3, !dbg !14312
  %59 = load i32, i32* %init, align 8, !dbg !14312
  call void @set_variable_part(%struct.dataflow_set_def* %55, %struct.rtx_def* %56, i8* %57, i64 0, i32 %59, %struct.rtx_def* null, i32 1), !dbg !14313
  %60 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set, align 8, !dbg !14314
  %61 = load i8*, i8** %dv, align 8, !dbg !14315
  %call67 = call %struct.rtx_def* @dv_as_value(i8* %61), !dbg !14316
  %62 = load %struct.attrs_def*, %struct.attrs_def** %att, align 8, !dbg !14317
  %dv68 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %62, i32 0, i32 2, !dbg !14318
  %63 = load i8*, i8** %dv68, align 8, !dbg !14318
  %64 = load %struct.location_chain_def*, %struct.location_chain_def** %pnode, align 8, !dbg !14319
  %init69 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %64, i32 0, i32 3, !dbg !14320
  %65 = load i32, i32* %init69, align 8, !dbg !14320
  call void @set_variable_part(%struct.dataflow_set_def* %60, %struct.rtx_def* %call67, i8* %63, i64 0, i32 %65, %struct.rtx_def* null, i32 1), !dbg !14321
  br label %if.end80, !dbg !14322

if.else:                                          ; preds = %land.lhs.true58, %for.end
  %66 = load %struct.attrs_def*, %struct.attrs_def** %att, align 8, !dbg !14323
  %tobool70 = icmp ne %struct.attrs_def* %66, null, !dbg !14323
  br i1 %tobool70, label %if.end79, label %if.then71, !dbg !14325

if.then71:                                        ; preds = %if.else
  %67 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set, align 8, !dbg !14326
  %regs72 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %67, i32 0, i32 1, !dbg !14328
  %68 = load %struct.location_chain_def*, %struct.location_chain_def** %pnode, align 8, !dbg !14329
  %loc73 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %68, i32 0, i32 1, !dbg !14329
  %69 = load %struct.rtx_def*, %struct.rtx_def** %loc73, align 8, !dbg !14329
  %call74 = call i32 @rhs_regno(%struct.rtx_def* %69), !dbg !14329
  %idxprom75 = zext i32 %call74 to i64, !dbg !14326
  %arrayidx76 = getelementptr inbounds [53 x %struct.attrs_def*], [53 x %struct.attrs_def*]* %regs72, i64 0, i64 %idxprom75, !dbg !14326
  %70 = load i8*, i8** %dv, align 8, !dbg !14330
  %71 = load %struct.location_chain_def*, %struct.location_chain_def** %pnode, align 8, !dbg !14331
  %loc77 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %71, i32 0, i32 1, !dbg !14332
  %72 = load %struct.rtx_def*, %struct.rtx_def** %loc77, align 8, !dbg !14332
  call void @attrs_list_insert(%struct.attrs_def** %arrayidx76, i8* %70, i64 0, %struct.rtx_def* %72), !dbg !14333
  %73 = load i8**, i8*** %pslot.addr, align 8, !dbg !14334
  %74 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set, align 8, !dbg !14335
  %75 = bitcast %struct.dataflow_set_def* %74 to i8*, !dbg !14335
  %call78 = call i32 @variable_union(i8** %73, i8* %75), !dbg !14336
  br label %if.end79, !dbg !14337

if.end79:                                         ; preds = %if.then71, %if.else
  br label %if.end80

if.end80:                                         ; preds = %if.end79, %if.then64
  store i32 1, i32* %retval, align 4, !dbg !14338
  br label %return, !dbg !14338

return:                                           ; preds = %if.end80, %if.then32
  %76 = load i32, i32* %retval, align 4, !dbg !14339
  ret i32 %76, !dbg !14339
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @canonicalize_vars_star(i8** %slot, i8* %data) #0 !dbg !14340 {
entry:
  %retval = alloca i32, align 4
  %slot.addr = alloca i8**, align 8
  %data.addr = alloca i8*, align 8
  %set = alloca %struct.dataflow_set_def*, align 8
  %var = alloca %struct.variable_def*, align 8
  %dv = alloca i8*, align 8
  %node = alloca %struct.location_chain_def*, align 8
  %cval = alloca %struct.rtx_def*, align 8
  %cdv = alloca i8*, align 8
  %cslot = alloca i8**, align 8
  %cvar = alloca %struct.variable_def*, align 8
  %cnode = alloca %struct.location_chain_def*, align 8
  store i8** %slot, i8*** %slot.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %slot.addr, metadata !14341, metadata !DIExpression()), !dbg !14342
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !14343, metadata !DIExpression()), !dbg !14344
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %set, metadata !14345, metadata !DIExpression()), !dbg !14346
  %0 = load i8*, i8** %data.addr, align 8, !dbg !14347
  %1 = bitcast i8* %0 to %struct.dataflow_set_def*, !dbg !14348
  store %struct.dataflow_set_def* %1, %struct.dataflow_set_def** %set, align 8, !dbg !14346
  call void @llvm.dbg.declare(metadata %struct.variable_def** %var, metadata !14349, metadata !DIExpression()), !dbg !14350
  %2 = load i8**, i8*** %slot.addr, align 8, !dbg !14351
  %3 = load i8*, i8** %2, align 8, !dbg !14352
  %4 = bitcast i8* %3 to %struct.variable_def*, !dbg !14353
  store %struct.variable_def* %4, %struct.variable_def** %var, align 8, !dbg !14350
  call void @llvm.dbg.declare(metadata i8** %dv, metadata !14354, metadata !DIExpression()), !dbg !14355
  %5 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !14356
  %dv1 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %5, i32 0, i32 0, !dbg !14357
  %6 = load i8*, i8** %dv1, align 8, !dbg !14357
  store i8* %6, i8** %dv, align 8, !dbg !14355
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %node, metadata !14358, metadata !DIExpression()), !dbg !14359
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %cval, metadata !14360, metadata !DIExpression()), !dbg !14361
  call void @llvm.dbg.declare(metadata i8** %cdv, metadata !14362, metadata !DIExpression()), !dbg !14363
  call void @llvm.dbg.declare(metadata i8*** %cslot, metadata !14364, metadata !DIExpression()), !dbg !14365
  call void @llvm.dbg.declare(metadata %struct.variable_def** %cvar, metadata !14366, metadata !DIExpression()), !dbg !14367
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %cnode, metadata !14368, metadata !DIExpression()), !dbg !14369
  %7 = load i8*, i8** %dv, align 8, !dbg !14370
  %call = call zeroext i8 @dv_onepart_p(i8* %7), !dbg !14372
  %tobool = icmp ne i8 %call, 0, !dbg !14372
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !14373

lor.lhs.false:                                    ; preds = %entry
  %8 = load i8*, i8** %dv, align 8, !dbg !14374
  %call2 = call zeroext i8 @dv_is_value_p(i8* %8), !dbg !14375
  %conv = zext i8 %call2 to i32, !dbg !14375
  %tobool3 = icmp ne i32 %conv, 0, !dbg !14375
  br i1 %tobool3, label %if.then, label %if.end, !dbg !14376

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 1, i32* %retval, align 4, !dbg !14377
  br label %return, !dbg !14377

if.end:                                           ; preds = %lor.lhs.false
  %9 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !14378
  %n_var_parts = getelementptr inbounds %struct.variable_def, %struct.variable_def* %9, i32 0, i32 2, !dbg !14378
  %10 = load i8, i8* %n_var_parts, align 4, !dbg !14378
  %conv4 = sext i8 %10 to i32, !dbg !14378
  %cmp = icmp eq i32 %conv4, 1, !dbg !14378
  br i1 %cmp, label %cond.false, label %cond.true, !dbg !14378

cond.true:                                        ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 3290, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !14378
  br label %cond.end, !dbg !14378

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !14378

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !14378
  %11 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !14379
  %var_part = getelementptr inbounds %struct.variable_def, %struct.variable_def* %11, i32 0, i32 5, !dbg !14380
  %arrayidx = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part, i64 0, i64 0, !dbg !14379
  %loc_chain = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx, i32 0, i32 0, !dbg !14381
  %12 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain, align 8, !dbg !14381
  store %struct.location_chain_def* %12, %struct.location_chain_def** %node, align 8, !dbg !14382
  %13 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14383
  %loc = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %13, i32 0, i32 1, !dbg !14383
  %14 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !14383
  %15 = bitcast %struct.rtx_def* %14 to i32*, !dbg !14383
  %bf.load = load i32, i32* %15, align 8, !dbg !14383
  %bf.clear = and i32 %bf.load, 65535, !dbg !14383
  %cmp6 = icmp ne i32 %bf.clear, 1, !dbg !14385
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !14386

if.then8:                                         ; preds = %cond.end
  store i32 1, i32* %retval, align 4, !dbg !14387
  br label %return, !dbg !14387

if.end9:                                          ; preds = %cond.end
  %16 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14388
  %next = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %16, i32 0, i32 0, !dbg !14388
  %17 = load %struct.location_chain_def*, %struct.location_chain_def** %next, align 8, !dbg !14388
  %tobool10 = icmp ne %struct.location_chain_def* %17, null, !dbg !14388
  br i1 %tobool10, label %cond.true11, label %cond.false12, !dbg !14388

cond.true11:                                      ; preds = %if.end9
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 3297, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !14388
  br label %cond.end13, !dbg !14388

cond.false12:                                     ; preds = %if.end9
  br label %cond.end13, !dbg !14388

cond.end13:                                       ; preds = %cond.false12, %cond.true11
  %cond14 = phi i32 [ 0, %cond.true11 ], [ 0, %cond.false12 ], !dbg !14388
  %18 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14389
  %loc15 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %18, i32 0, i32 1, !dbg !14390
  %19 = load %struct.rtx_def*, %struct.rtx_def** %loc15, align 8, !dbg !14390
  store %struct.rtx_def* %19, %struct.rtx_def** %cval, align 8, !dbg !14391
  %20 = load %struct.rtx_def*, %struct.rtx_def** %cval, align 8, !dbg !14392
  %call16 = call i8* @dv_from_value(%struct.rtx_def* %20), !dbg !14393
  store i8* %call16, i8** %cdv, align 8, !dbg !14394
  %21 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set, align 8, !dbg !14395
  %vars = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %21, i32 0, i32 2, !dbg !14396
  %22 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars, align 8, !dbg !14396
  %23 = load i8*, i8** %cdv, align 8, !dbg !14397
  %call17 = call i8** @shared_hash_find_slot_noinsert(%struct.shared_hash_def* %22, i8* %23), !dbg !14398
  store i8** %call17, i8*** %cslot, align 8, !dbg !14399
  %24 = load i8**, i8*** %cslot, align 8, !dbg !14400
  %tobool18 = icmp ne i8** %24, null, !dbg !14400
  br i1 %tobool18, label %if.end20, label %if.then19, !dbg !14402

if.then19:                                        ; preds = %cond.end13
  store i32 1, i32* %retval, align 4, !dbg !14403
  br label %return, !dbg !14403

if.end20:                                         ; preds = %cond.end13
  %25 = load i8**, i8*** %cslot, align 8, !dbg !14404
  %26 = load i8*, i8** %25, align 8, !dbg !14405
  %27 = bitcast i8* %26 to %struct.variable_def*, !dbg !14406
  store %struct.variable_def* %27, %struct.variable_def** %cvar, align 8, !dbg !14407
  %28 = load %struct.variable_def*, %struct.variable_def** %cvar, align 8, !dbg !14408
  %n_var_parts21 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %28, i32 0, i32 2, !dbg !14408
  %29 = load i8, i8* %n_var_parts21, align 4, !dbg !14408
  %conv22 = sext i8 %29 to i32, !dbg !14408
  %cmp23 = icmp eq i32 %conv22, 1, !dbg !14408
  br i1 %cmp23, label %cond.false26, label %cond.true25, !dbg !14408

cond.true25:                                      ; preds = %if.end20
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 3306, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !14408
  br label %cond.end27, !dbg !14408

cond.false26:                                     ; preds = %if.end20
  br label %cond.end27, !dbg !14408

cond.end27:                                       ; preds = %cond.false26, %cond.true25
  %cond28 = phi i32 [ 0, %cond.true25 ], [ 0, %cond.false26 ], !dbg !14408
  %30 = load %struct.variable_def*, %struct.variable_def** %cvar, align 8, !dbg !14409
  %var_part29 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %30, i32 0, i32 5, !dbg !14410
  %arrayidx30 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part29, i64 0, i64 0, !dbg !14409
  %loc_chain31 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx30, i32 0, i32 0, !dbg !14411
  %31 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain31, align 8, !dbg !14411
  store %struct.location_chain_def* %31, %struct.location_chain_def** %cnode, align 8, !dbg !14412
  %32 = load %struct.location_chain_def*, %struct.location_chain_def** %cnode, align 8, !dbg !14413
  %loc32 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %32, i32 0, i32 1, !dbg !14413
  %33 = load %struct.rtx_def*, %struct.rtx_def** %loc32, align 8, !dbg !14413
  %34 = bitcast %struct.rtx_def* %33 to i32*, !dbg !14413
  %bf.load33 = load i32, i32* %34, align 8, !dbg !14413
  %bf.clear34 = and i32 %bf.load33, 65535, !dbg !14413
  %cmp35 = icmp ne i32 %bf.clear34, 1, !dbg !14415
  br i1 %cmp35, label %if.then41, label %lor.lhs.false37, !dbg !14416

lor.lhs.false37:                                  ; preds = %cond.end27
  %35 = load %struct.location_chain_def*, %struct.location_chain_def** %cnode, align 8, !dbg !14417
  %loc38 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %35, i32 0, i32 1, !dbg !14418
  %36 = load %struct.rtx_def*, %struct.rtx_def** %loc38, align 8, !dbg !14418
  %37 = load %struct.rtx_def*, %struct.rtx_def** %cval, align 8, !dbg !14419
  %call39 = call zeroext i8 @canon_value_cmp(%struct.rtx_def* %36, %struct.rtx_def* %37), !dbg !14420
  %tobool40 = icmp ne i8 %call39, 0, !dbg !14420
  br i1 %tobool40, label %if.end42, label %if.then41, !dbg !14421

if.then41:                                        ; preds = %lor.lhs.false37, %cond.end27
  store i32 1, i32* %retval, align 4, !dbg !14422
  br label %return, !dbg !14422

if.end42:                                         ; preds = %lor.lhs.false37
  %38 = load %struct.location_chain_def*, %struct.location_chain_def** %cnode, align 8, !dbg !14423
  %next43 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %38, i32 0, i32 0, !dbg !14423
  %39 = load %struct.location_chain_def*, %struct.location_chain_def** %next43, align 8, !dbg !14423
  %tobool44 = icmp ne %struct.location_chain_def* %39, null, !dbg !14423
  br i1 %tobool44, label %cond.true45, label %cond.false46, !dbg !14423

cond.true45:                                      ; preds = %if.end42
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 3318, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !14423
  br label %cond.end47, !dbg !14423

cond.false46:                                     ; preds = %if.end42
  br label %cond.end47, !dbg !14423

cond.end47:                                       ; preds = %cond.false46, %cond.true45
  %cond48 = phi i32 [ 0, %cond.true45 ], [ 0, %cond.false46 ], !dbg !14423
  %40 = load %struct.location_chain_def*, %struct.location_chain_def** %cnode, align 8, !dbg !14424
  %loc49 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %40, i32 0, i32 1, !dbg !14425
  %41 = load %struct.rtx_def*, %struct.rtx_def** %loc49, align 8, !dbg !14425
  store %struct.rtx_def* %41, %struct.rtx_def** %cval, align 8, !dbg !14426
  %42 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set, align 8, !dbg !14427
  %43 = load %struct.rtx_def*, %struct.rtx_def** %cval, align 8, !dbg !14428
  %44 = load i8**, i8*** %slot.addr, align 8, !dbg !14429
  %45 = load i8*, i8** %dv, align 8, !dbg !14430
  %46 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14431
  %init = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %46, i32 0, i32 3, !dbg !14432
  %47 = load i32, i32* %init, align 8, !dbg !14432
  %48 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14433
  %set_src = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %48, i32 0, i32 2, !dbg !14434
  %49 = load %struct.rtx_def*, %struct.rtx_def** %set_src, align 8, !dbg !14434
  %call50 = call i8** @set_slot_part(%struct.dataflow_set_def* %42, %struct.rtx_def* %43, i8** %44, i8* %45, i64 0, i32 %47, %struct.rtx_def* %49), !dbg !14435
  store i8** %call50, i8*** %slot.addr, align 8, !dbg !14436
  %50 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set, align 8, !dbg !14437
  %51 = load %struct.rtx_def*, %struct.rtx_def** %cval, align 8, !dbg !14438
  %52 = load i8**, i8*** %slot.addr, align 8, !dbg !14439
  %53 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14440
  %set_src51 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %53, i32 0, i32 2, !dbg !14441
  %54 = load %struct.rtx_def*, %struct.rtx_def** %set_src51, align 8, !dbg !14441
  %call52 = call i8** @clobber_slot_part(%struct.dataflow_set_def* %50, %struct.rtx_def* %51, i8** %52, i64 0, %struct.rtx_def* %54), !dbg !14442
  store i8** %call52, i8*** %slot.addr, align 8, !dbg !14443
  store i32 1, i32* %retval, align 4, !dbg !14444
  br label %return, !dbg !14444

return:                                           ; preds = %cond.end47, %if.then41, %if.then19, %if.then8, %if.then
  %55 = load i32, i32* %retval, align 4, !dbg !14445
  ret i32 %55, !dbg !14445
}

; Function Attrs: noinline nounwind uwtable
define internal void @val_reset(%struct.dataflow_set_def* %set, i8* %dv) #0 !dbg !14446 {
entry:
  %set.addr = alloca %struct.dataflow_set_def*, align 8
  %dv.addr = alloca i8*, align 8
  %var = alloca %struct.variable_def*, align 8
  %node = alloca %struct.location_chain_def*, align 8
  %cval = alloca %struct.rtx_def*, align 8
  %cdv = alloca i8*, align 8
  store %struct.dataflow_set_def* %set, %struct.dataflow_set_def** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %set.addr, metadata !14449, metadata !DIExpression()), !dbg !14450
  store i8* %dv, i8** %dv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dv.addr, metadata !14451, metadata !DIExpression()), !dbg !14452
  call void @llvm.dbg.declare(metadata %struct.variable_def** %var, metadata !14453, metadata !DIExpression()), !dbg !14454
  %0 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !14455
  %vars = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %0, i32 0, i32 2, !dbg !14456
  %1 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars, align 8, !dbg !14456
  %2 = load i8*, i8** %dv.addr, align 8, !dbg !14457
  %call = call %struct.variable_def* @shared_hash_find(%struct.shared_hash_def* %1, i8* %2), !dbg !14458
  store %struct.variable_def* %call, %struct.variable_def** %var, align 8, !dbg !14454
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %node, metadata !14459, metadata !DIExpression()), !dbg !14460
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %cval, metadata !14461, metadata !DIExpression()), !dbg !14462
  %3 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !14463
  %tobool = icmp ne %struct.variable_def* %3, null, !dbg !14463
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !14465

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !14466
  %n_var_parts = getelementptr inbounds %struct.variable_def, %struct.variable_def* %4, i32 0, i32 2, !dbg !14467
  %5 = load i8, i8* %n_var_parts, align 4, !dbg !14467
  %tobool1 = icmp ne i8 %5, 0, !dbg !14466
  br i1 %tobool1, label %if.end, label %if.then, !dbg !14468

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !14469

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !14470
  %n_var_parts2 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %6, i32 0, i32 2, !dbg !14470
  %7 = load i8, i8* %n_var_parts2, align 4, !dbg !14470
  %conv = sext i8 %7 to i32, !dbg !14470
  %cmp = icmp eq i32 %conv, 1, !dbg !14470
  br i1 %cmp, label %cond.false, label %cond.true, !dbg !14470

cond.true:                                        ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 1868, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !14470
  br label %cond.end, !dbg !14470

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !14470

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !14470
  store %struct.rtx_def* null, %struct.rtx_def** %cval, align 8, !dbg !14471
  %8 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !14472
  %var_part = getelementptr inbounds %struct.variable_def, %struct.variable_def* %8, i32 0, i32 5, !dbg !14474
  %arrayidx = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part, i64 0, i64 0, !dbg !14472
  %loc_chain = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx, i32 0, i32 0, !dbg !14475
  %9 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain, align 8, !dbg !14475
  store %struct.location_chain_def* %9, %struct.location_chain_def** %node, align 8, !dbg !14476
  br label %for.cond, !dbg !14477

for.cond:                                         ; preds = %for.inc, %cond.end
  %10 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14478
  %tobool4 = icmp ne %struct.location_chain_def* %10, null, !dbg !14480
  br i1 %tobool4, label %for.body, label %for.end, !dbg !14480

for.body:                                         ; preds = %for.cond
  %11 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14481
  %loc = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %11, i32 0, i32 1, !dbg !14481
  %12 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !14481
  %13 = bitcast %struct.rtx_def* %12 to i32*, !dbg !14481
  %bf.load = load i32, i32* %13, align 8, !dbg !14481
  %bf.clear = and i32 %bf.load, 65535, !dbg !14481
  %cmp5 = icmp eq i32 %bf.clear, 1, !dbg !14483
  br i1 %cmp5, label %land.lhs.true, label %if.end13, !dbg !14484

land.lhs.true:                                    ; preds = %for.body
  %14 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14485
  %loc7 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %14, i32 0, i32 1, !dbg !14486
  %15 = load %struct.rtx_def*, %struct.rtx_def** %loc7, align 8, !dbg !14486
  %16 = load %struct.rtx_def*, %struct.rtx_def** %cval, align 8, !dbg !14487
  %call8 = call zeroext i8 @canon_value_cmp(%struct.rtx_def* %15, %struct.rtx_def* %16), !dbg !14488
  %conv9 = zext i8 %call8 to i32, !dbg !14488
  %tobool10 = icmp ne i32 %conv9, 0, !dbg !14488
  br i1 %tobool10, label %if.then11, label %if.end13, !dbg !14489

if.then11:                                        ; preds = %land.lhs.true
  %17 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14490
  %loc12 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %17, i32 0, i32 1, !dbg !14491
  %18 = load %struct.rtx_def*, %struct.rtx_def** %loc12, align 8, !dbg !14491
  store %struct.rtx_def* %18, %struct.rtx_def** %cval, align 8, !dbg !14492
  br label %if.end13, !dbg !14493

if.end13:                                         ; preds = %if.then11, %land.lhs.true, %for.body
  br label %for.inc, !dbg !14494

for.inc:                                          ; preds = %if.end13
  %19 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14495
  %next = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %19, i32 0, i32 0, !dbg !14496
  %20 = load %struct.location_chain_def*, %struct.location_chain_def** %next, align 8, !dbg !14496
  store %struct.location_chain_def* %20, %struct.location_chain_def** %node, align 8, !dbg !14497
  br label %for.cond, !dbg !14498, !llvm.loop !14499

for.end:                                          ; preds = %for.cond
  %21 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !14501
  %var_part14 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %21, i32 0, i32 5, !dbg !14503
  %arrayidx15 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part14, i64 0, i64 0, !dbg !14501
  %loc_chain16 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx15, i32 0, i32 0, !dbg !14504
  %22 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain16, align 8, !dbg !14504
  store %struct.location_chain_def* %22, %struct.location_chain_def** %node, align 8, !dbg !14505
  br label %for.cond17, !dbg !14506

for.cond17:                                       ; preds = %for.inc39, %for.end
  %23 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14507
  %tobool18 = icmp ne %struct.location_chain_def* %23, null, !dbg !14509
  br i1 %tobool18, label %for.body19, label %for.end41, !dbg !14509

for.body19:                                       ; preds = %for.cond17
  %24 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14510
  %loc20 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %24, i32 0, i32 1, !dbg !14510
  %25 = load %struct.rtx_def*, %struct.rtx_def** %loc20, align 8, !dbg !14510
  %26 = bitcast %struct.rtx_def* %25 to i32*, !dbg !14510
  %bf.load21 = load i32, i32* %26, align 8, !dbg !14510
  %bf.clear22 = and i32 %bf.load21, 65535, !dbg !14510
  %cmp23 = icmp eq i32 %bf.clear22, 1, !dbg !14512
  br i1 %cmp23, label %land.lhs.true25, label %if.end38, !dbg !14513

land.lhs.true25:                                  ; preds = %for.body19
  %27 = load %struct.rtx_def*, %struct.rtx_def** %cval, align 8, !dbg !14514
  %28 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14515
  %loc26 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %28, i32 0, i32 1, !dbg !14516
  %29 = load %struct.rtx_def*, %struct.rtx_def** %loc26, align 8, !dbg !14516
  %cmp27 = icmp ne %struct.rtx_def* %27, %29, !dbg !14517
  br i1 %cmp27, label %if.then29, label %if.end38, !dbg !14518

if.then29:                                        ; preds = %land.lhs.true25
  %30 = load %struct.rtx_def*, %struct.rtx_def** %cval, align 8, !dbg !14519
  %tobool30 = icmp ne %struct.rtx_def* %30, null, !dbg !14519
  br i1 %tobool30, label %if.then31, label %if.end34, !dbg !14522

if.then31:                                        ; preds = %if.then29
  %31 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !14523
  %32 = load %struct.rtx_def*, %struct.rtx_def** %cval, align 8, !dbg !14524
  %33 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14525
  %loc32 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %33, i32 0, i32 1, !dbg !14526
  %34 = load %struct.rtx_def*, %struct.rtx_def** %loc32, align 8, !dbg !14526
  %call33 = call i8* @dv_from_value(%struct.rtx_def* %34), !dbg !14527
  %35 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14528
  %init = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %35, i32 0, i32 3, !dbg !14529
  %36 = load i32, i32* %init, align 8, !dbg !14529
  %37 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14530
  %set_src = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %37, i32 0, i32 2, !dbg !14531
  %38 = load %struct.rtx_def*, %struct.rtx_def** %set_src, align 8, !dbg !14531
  call void @set_variable_part(%struct.dataflow_set_def* %31, %struct.rtx_def* %32, i8* %call33, i64 0, i32 %36, %struct.rtx_def* %38, i32 0), !dbg !14532
  br label %if.end34, !dbg !14532

if.end34:                                         ; preds = %if.then31, %if.then29
  %39 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !14533
  %40 = load i8*, i8** %dv.addr, align 8, !dbg !14534
  %call35 = call %struct.rtx_def* @dv_as_value(i8* %40), !dbg !14535
  %41 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14536
  %loc36 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %41, i32 0, i32 1, !dbg !14537
  %42 = load %struct.rtx_def*, %struct.rtx_def** %loc36, align 8, !dbg !14537
  %call37 = call i8* @dv_from_value(%struct.rtx_def* %42), !dbg !14538
  call void @delete_variable_part(%struct.dataflow_set_def* %39, %struct.rtx_def* %call35, i8* %call37, i64 0), !dbg !14539
  br label %if.end38, !dbg !14540

if.end38:                                         ; preds = %if.end34, %land.lhs.true25, %for.body19
  br label %for.inc39, !dbg !14516

for.inc39:                                        ; preds = %if.end38
  %43 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14541
  %next40 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %43, i32 0, i32 0, !dbg !14542
  %44 = load %struct.location_chain_def*, %struct.location_chain_def** %next40, align 8, !dbg !14542
  store %struct.location_chain_def* %44, %struct.location_chain_def** %node, align 8, !dbg !14543
  br label %for.cond17, !dbg !14544, !llvm.loop !14545

for.end41:                                        ; preds = %for.cond17
  %45 = load %struct.rtx_def*, %struct.rtx_def** %cval, align 8, !dbg !14547
  %tobool42 = icmp ne %struct.rtx_def* %45, null, !dbg !14547
  br i1 %tobool42, label %if.then43, label %if.end84, !dbg !14549

if.then43:                                        ; preds = %for.end41
  call void @llvm.dbg.declare(metadata i8** %cdv, metadata !14550, metadata !DIExpression()), !dbg !14552
  %46 = load %struct.rtx_def*, %struct.rtx_def** %cval, align 8, !dbg !14553
  %call44 = call i8* @dv_from_value(%struct.rtx_def* %46), !dbg !14554
  store i8* %call44, i8** %cdv, align 8, !dbg !14552
  %47 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !14555
  %var_part45 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %47, i32 0, i32 5, !dbg !14557
  %arrayidx46 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part45, i64 0, i64 0, !dbg !14555
  %loc_chain47 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx46, i32 0, i32 0, !dbg !14558
  %48 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain47, align 8, !dbg !14558
  store %struct.location_chain_def* %48, %struct.location_chain_def** %node, align 8, !dbg !14559
  br label %for.cond48, !dbg !14560

for.cond48:                                       ; preds = %for.inc81, %if.then43
  %49 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14561
  %tobool49 = icmp ne %struct.location_chain_def* %49, null, !dbg !14563
  br i1 %tobool49, label %for.body50, label %for.end83, !dbg !14563

for.body50:                                       ; preds = %for.cond48
  %50 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14564
  %loc51 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %50, i32 0, i32 1, !dbg !14567
  %51 = load %struct.rtx_def*, %struct.rtx_def** %loc51, align 8, !dbg !14567
  %52 = load %struct.rtx_def*, %struct.rtx_def** %cval, align 8, !dbg !14568
  %cmp52 = icmp eq %struct.rtx_def* %51, %52, !dbg !14569
  br i1 %cmp52, label %if.then54, label %if.else, !dbg !14570

if.then54:                                        ; preds = %for.body50
  br label %for.inc81, !dbg !14571

if.else:                                          ; preds = %for.body50
  %53 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14572
  %loc55 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %53, i32 0, i32 1, !dbg !14572
  %54 = load %struct.rtx_def*, %struct.rtx_def** %loc55, align 8, !dbg !14572
  %55 = bitcast %struct.rtx_def* %54 to i32*, !dbg !14572
  %bf.load56 = load i32, i32* %55, align 8, !dbg !14572
  %bf.clear57 = and i32 %bf.load56, 65535, !dbg !14572
  %cmp58 = icmp eq i32 %bf.clear57, 37, !dbg !14574
  br i1 %cmp58, label %if.then60, label %if.else64, !dbg !14575

if.then60:                                        ; preds = %if.else
  %56 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !14576
  %57 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14577
  %loc61 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %57, i32 0, i32 1, !dbg !14578
  %58 = load %struct.rtx_def*, %struct.rtx_def** %loc61, align 8, !dbg !14578
  %59 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14579
  %init62 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %59, i32 0, i32 3, !dbg !14580
  %60 = load i32, i32* %init62, align 8, !dbg !14580
  %61 = load i8*, i8** %cdv, align 8, !dbg !14581
  %62 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14582
  %set_src63 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %62, i32 0, i32 2, !dbg !14583
  %63 = load %struct.rtx_def*, %struct.rtx_def** %set_src63, align 8, !dbg !14583
  call void @var_reg_decl_set(%struct.dataflow_set_def* %56, %struct.rtx_def* %58, i32 %60, i8* %61, i64 0, %struct.rtx_def* %63, i32 0), !dbg !14584
  br label %if.end79, !dbg !14584

if.else64:                                        ; preds = %if.else
  %64 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14585
  %loc65 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %64, i32 0, i32 1, !dbg !14585
  %65 = load %struct.rtx_def*, %struct.rtx_def** %loc65, align 8, !dbg !14585
  %66 = bitcast %struct.rtx_def* %65 to i32*, !dbg !14585
  %bf.load66 = load i32, i32* %66, align 8, !dbg !14585
  %bf.clear67 = and i32 %bf.load66, 65535, !dbg !14585
  %cmp68 = icmp eq i32 %bf.clear67, 43, !dbg !14587
  br i1 %cmp68, label %if.then70, label %if.else74, !dbg !14588

if.then70:                                        ; preds = %if.else64
  %67 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !14589
  %68 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14590
  %loc71 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %68, i32 0, i32 1, !dbg !14591
  %69 = load %struct.rtx_def*, %struct.rtx_def** %loc71, align 8, !dbg !14591
  %70 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14592
  %init72 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %70, i32 0, i32 3, !dbg !14593
  %71 = load i32, i32* %init72, align 8, !dbg !14593
  %72 = load i8*, i8** %cdv, align 8, !dbg !14594
  %73 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14595
  %set_src73 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %73, i32 0, i32 2, !dbg !14596
  %74 = load %struct.rtx_def*, %struct.rtx_def** %set_src73, align 8, !dbg !14596
  call void @var_mem_decl_set(%struct.dataflow_set_def* %67, %struct.rtx_def* %69, i32 %71, i8* %72, i64 0, %struct.rtx_def* %74, i32 0), !dbg !14597
  br label %if.end78, !dbg !14597

if.else74:                                        ; preds = %if.else64
  %75 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !14598
  %76 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14599
  %loc75 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %76, i32 0, i32 1, !dbg !14600
  %77 = load %struct.rtx_def*, %struct.rtx_def** %loc75, align 8, !dbg !14600
  %78 = load i8*, i8** %cdv, align 8, !dbg !14601
  %79 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14602
  %init76 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %79, i32 0, i32 3, !dbg !14603
  %80 = load i32, i32* %init76, align 8, !dbg !14603
  %81 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14604
  %set_src77 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %81, i32 0, i32 2, !dbg !14605
  %82 = load %struct.rtx_def*, %struct.rtx_def** %set_src77, align 8, !dbg !14605
  call void @set_variable_part(%struct.dataflow_set_def* %75, %struct.rtx_def* %77, i8* %78, i64 0, i32 %80, %struct.rtx_def* %82, i32 0), !dbg !14606
  br label %if.end78

if.end78:                                         ; preds = %if.else74, %if.then70
  br label %if.end79

if.end79:                                         ; preds = %if.end78, %if.then60
  br label %if.end80

if.end80:                                         ; preds = %if.end79
  br label %for.inc81, !dbg !14607

for.inc81:                                        ; preds = %if.end80, %if.then54
  %83 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14608
  %next82 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %83, i32 0, i32 0, !dbg !14609
  %84 = load %struct.location_chain_def*, %struct.location_chain_def** %next82, align 8, !dbg !14609
  store %struct.location_chain_def* %84, %struct.location_chain_def** %node, align 8, !dbg !14610
  br label %for.cond48, !dbg !14611, !llvm.loop !14612

for.end83:                                        ; preds = %for.cond48
  br label %if.end84, !dbg !14614

if.end84:                                         ; preds = %for.end83, %for.end41
  %85 = load %struct.rtx_def*, %struct.rtx_def** %cval, align 8, !dbg !14615
  %tobool85 = icmp ne %struct.rtx_def* %85, null, !dbg !14615
  br i1 %tobool85, label %if.then86, label %if.end89, !dbg !14617

if.then86:                                        ; preds = %if.end84
  %86 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !14618
  %87 = load i8*, i8** %dv.addr, align 8, !dbg !14619
  %call87 = call %struct.rtx_def* @dv_as_value(i8* %87), !dbg !14620
  %88 = load %struct.rtx_def*, %struct.rtx_def** %cval, align 8, !dbg !14621
  %call88 = call i8* @dv_from_value(%struct.rtx_def* %88), !dbg !14622
  call void @delete_variable_part(%struct.dataflow_set_def* %86, %struct.rtx_def* %call87, i8* %call88, i64 0), !dbg !14623
  br label %if.end89, !dbg !14623

if.end89:                                         ; preds = %if.then86, %if.end84
  %89 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !14624
  %90 = load i8*, i8** %dv.addr, align 8, !dbg !14625
  call void @clobber_variable_part(%struct.dataflow_set_def* %89, %struct.rtx_def* null, i8* %90, i64 0, %struct.rtx_def* null), !dbg !14626
  br label %return, !dbg !14627

return:                                           ; preds = %if.end89, %if.then
  ret void, !dbg !14627
}

declare dso_local void @cselib_invalidate_rtx(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @remove_duplicate_values(%struct.variable_def* %var) #0 !dbg !14628 {
entry:
  %var.addr = alloca %struct.variable_def*, align 8
  %node = alloca %struct.location_chain_def*, align 8
  %nodep = alloca %struct.location_chain_def**, align 8
  store %struct.variable_def* %var, %struct.variable_def** %var.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.variable_def** %var.addr, metadata !14631, metadata !DIExpression()), !dbg !14632
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %node, metadata !14633, metadata !DIExpression()), !dbg !14634
  call void @llvm.dbg.declare(metadata %struct.location_chain_def*** %nodep, metadata !14635, metadata !DIExpression()), !dbg !14636
  %0 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !14637
  %dv = getelementptr inbounds %struct.variable_def, %struct.variable_def* %0, i32 0, i32 0, !dbg !14637
  %1 = load i8*, i8** %dv, align 8, !dbg !14637
  %call = call zeroext i8 @dv_onepart_p(i8* %1), !dbg !14637
  %tobool = icmp ne i8 %call, 0, !dbg !14637
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !14637

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 3743, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !14637
  br label %cond.end, !dbg !14637

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !14637

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !14637
  %2 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !14638
  %n_var_parts = getelementptr inbounds %struct.variable_def, %struct.variable_def* %2, i32 0, i32 2, !dbg !14638
  %3 = load i8, i8* %n_var_parts, align 4, !dbg !14638
  %conv = sext i8 %3 to i32, !dbg !14638
  %cmp = icmp eq i32 %conv, 1, !dbg !14638
  br i1 %cmp, label %cond.false3, label %cond.true2, !dbg !14638

cond.true2:                                       ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 3744, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !14638
  br label %cond.end4, !dbg !14638

cond.false3:                                      ; preds = %cond.end
  br label %cond.end4, !dbg !14638

cond.end4:                                        ; preds = %cond.false3, %cond.true2
  %cond5 = phi i32 [ 0, %cond.true2 ], [ 0, %cond.false3 ], !dbg !14638
  %4 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !14639
  %refcount = getelementptr inbounds %struct.variable_def, %struct.variable_def* %4, i32 0, i32 1, !dbg !14639
  %5 = load i32, i32* %refcount, align 8, !dbg !14639
  %cmp6 = icmp eq i32 %5, 1, !dbg !14639
  br i1 %cmp6, label %cond.false9, label %cond.true8, !dbg !14639

cond.true8:                                       ; preds = %cond.end4
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 3745, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !14639
  br label %cond.end10, !dbg !14639

cond.false9:                                      ; preds = %cond.end4
  br label %cond.end10, !dbg !14639

cond.end10:                                       ; preds = %cond.false9, %cond.true8
  %cond11 = phi i32 [ 0, %cond.true8 ], [ 0, %cond.false9 ], !dbg !14639
  %6 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !14640
  %var_part = getelementptr inbounds %struct.variable_def, %struct.variable_def* %6, i32 0, i32 5, !dbg !14642
  %arrayidx = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part, i64 0, i64 0, !dbg !14640
  %loc_chain = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx, i32 0, i32 0, !dbg !14643
  store %struct.location_chain_def** %loc_chain, %struct.location_chain_def*** %nodep, align 8, !dbg !14644
  br label %for.cond, !dbg !14645

for.cond:                                         ; preds = %if.end23, %if.then19, %cond.end10
  %7 = load %struct.location_chain_def**, %struct.location_chain_def*** %nodep, align 8, !dbg !14646
  %8 = load %struct.location_chain_def*, %struct.location_chain_def** %7, align 8, !dbg !14648
  store %struct.location_chain_def* %8, %struct.location_chain_def** %node, align 8, !dbg !14649
  %tobool12 = icmp ne %struct.location_chain_def* %8, null, !dbg !14650
  br i1 %tobool12, label %for.body, label %for.end, !dbg !14650

for.body:                                         ; preds = %for.cond
  %9 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14651
  %loc = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %9, i32 0, i32 1, !dbg !14651
  %10 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !14651
  %11 = bitcast %struct.rtx_def* %10 to i32*, !dbg !14651
  %bf.load = load i32, i32* %11, align 8, !dbg !14651
  %bf.clear = and i32 %bf.load, 65535, !dbg !14651
  %cmp13 = icmp eq i32 %bf.clear, 1, !dbg !14654
  br i1 %cmp13, label %if.then, label %if.end23, !dbg !14655

if.then:                                          ; preds = %for.body
  %12 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14656
  %loc15 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %12, i32 0, i32 1, !dbg !14656
  %13 = load %struct.rtx_def*, %struct.rtx_def** %loc15, align 8, !dbg !14656
  %14 = bitcast %struct.rtx_def* %13 to i32*, !dbg !14656
  %bf.load16 = load i32, i32* %14, align 8, !dbg !14656
  %bf.lshr = lshr i32 %bf.load16, 29, !dbg !14656
  %bf.clear17 = and i32 %bf.lshr, 1, !dbg !14656
  %tobool18 = icmp ne i32 %bf.clear17, 0, !dbg !14656
  br i1 %tobool18, label %if.then19, label %if.else, !dbg !14659

if.then19:                                        ; preds = %if.then
  %15 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14660
  %next = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %15, i32 0, i32 0, !dbg !14662
  %16 = load %struct.location_chain_def*, %struct.location_chain_def** %next, align 8, !dbg !14662
  %17 = load %struct.location_chain_def**, %struct.location_chain_def*** %nodep, align 8, !dbg !14663
  store %struct.location_chain_def* %16, %struct.location_chain_def** %17, align 8, !dbg !14664
  %18 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @loc_chain_pool, align 8, !dbg !14665
  %19 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14666
  %20 = bitcast %struct.location_chain_def* %19 to i8*, !dbg !14666
  call void @pool_free(%struct.alloc_pool_def* %18, i8* %20), !dbg !14667
  br label %for.cond, !dbg !14668, !llvm.loop !14669

if.else:                                          ; preds = %if.then
  %21 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14671
  %loc20 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %21, i32 0, i32 1, !dbg !14671
  %22 = load %struct.rtx_def*, %struct.rtx_def** %loc20, align 8, !dbg !14671
  %23 = bitcast %struct.rtx_def* %22 to i32*, !dbg !14671
  %bf.load21 = load i32, i32* %23, align 8, !dbg !14672
  %bf.clear22 = and i32 %bf.load21, -536870913, !dbg !14672
  %bf.set = or i32 %bf.clear22, 536870912, !dbg !14672
  store i32 %bf.set, i32* %23, align 8, !dbg !14672
  br label %if.end

if.end:                                           ; preds = %if.else
  br label %if.end23, !dbg !14673

if.end23:                                         ; preds = %if.end, %for.body
  %24 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14674
  %next24 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %24, i32 0, i32 0, !dbg !14675
  store %struct.location_chain_def** %next24, %struct.location_chain_def*** %nodep, align 8, !dbg !14676
  br label %for.cond, !dbg !14677, !llvm.loop !14669

for.end:                                          ; preds = %for.cond
  %25 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !14678
  %var_part25 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %25, i32 0, i32 5, !dbg !14680
  %arrayidx26 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part25, i64 0, i64 0, !dbg !14678
  %loc_chain27 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx26, i32 0, i32 0, !dbg !14681
  %26 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain27, align 8, !dbg !14681
  store %struct.location_chain_def* %26, %struct.location_chain_def** %node, align 8, !dbg !14682
  br label %for.cond28, !dbg !14683

for.cond28:                                       ; preds = %for.inc, %for.end
  %27 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14684
  %tobool29 = icmp ne %struct.location_chain_def* %27, null, !dbg !14686
  br i1 %tobool29, label %for.body30, label %for.end51, !dbg !14686

for.body30:                                       ; preds = %for.cond28
  %28 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14687
  %loc31 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %28, i32 0, i32 1, !dbg !14687
  %29 = load %struct.rtx_def*, %struct.rtx_def** %loc31, align 8, !dbg !14687
  %30 = bitcast %struct.rtx_def* %29 to i32*, !dbg !14687
  %bf.load32 = load i32, i32* %30, align 8, !dbg !14687
  %bf.clear33 = and i32 %bf.load32, 65535, !dbg !14687
  %cmp34 = icmp eq i32 %bf.clear33, 1, !dbg !14689
  br i1 %cmp34, label %if.then36, label %if.end49, !dbg !14690

if.then36:                                        ; preds = %for.body30
  %31 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14691
  %loc37 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %31, i32 0, i32 1, !dbg !14691
  %32 = load %struct.rtx_def*, %struct.rtx_def** %loc37, align 8, !dbg !14691
  %33 = bitcast %struct.rtx_def* %32 to i32*, !dbg !14691
  %bf.load38 = load i32, i32* %33, align 8, !dbg !14691
  %bf.lshr39 = lshr i32 %bf.load38, 29, !dbg !14691
  %bf.clear40 = and i32 %bf.lshr39, 1, !dbg !14691
  %tobool41 = icmp ne i32 %bf.clear40, 0, !dbg !14691
  br i1 %tobool41, label %cond.false43, label %cond.true42, !dbg !14691

cond.true42:                                      ; preds = %if.then36
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 3767, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !14691
  br label %cond.end44, !dbg !14691

cond.false43:                                     ; preds = %if.then36
  br label %cond.end44, !dbg !14691

cond.end44:                                       ; preds = %cond.false43, %cond.true42
  %cond45 = phi i32 [ 0, %cond.true42 ], [ 0, %cond.false43 ], !dbg !14691
  %34 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14693
  %loc46 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %34, i32 0, i32 1, !dbg !14693
  %35 = load %struct.rtx_def*, %struct.rtx_def** %loc46, align 8, !dbg !14693
  %36 = bitcast %struct.rtx_def* %35 to i32*, !dbg !14693
  %bf.load47 = load i32, i32* %36, align 8, !dbg !14694
  %bf.clear48 = and i32 %bf.load47, -536870913, !dbg !14694
  store i32 %bf.clear48, i32* %36, align 8, !dbg !14694
  br label %if.end49, !dbg !14695

if.end49:                                         ; preds = %cond.end44, %for.body30
  br label %for.inc, !dbg !14696

for.inc:                                          ; preds = %if.end49
  %37 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !14697
  %next50 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %37, i32 0, i32 0, !dbg !14698
  %38 = load %struct.location_chain_def*, %struct.location_chain_def** %next50, align 8, !dbg !14698
  store %struct.location_chain_def* %38, %struct.location_chain_def** %node, align 8, !dbg !14699
  br label %for.cond28, !dbg !14700, !llvm.loop !14701

for.end51:                                        ; preds = %for.cond28
  ret void, !dbg !14703
}

; Function Attrs: noinline nounwind uwtable
define internal void @delete_variable_part(%struct.dataflow_set_def* %set, %struct.rtx_def* %loc, i8* %dv, i64 %offset) #0 !dbg !14704 {
entry:
  %set.addr = alloca %struct.dataflow_set_def*, align 8
  %loc.addr = alloca %struct.rtx_def*, align 8
  %dv.addr = alloca i8*, align 8
  %offset.addr = alloca i64, align 8
  %slot = alloca i8**, align 8
  store %struct.dataflow_set_def* %set, %struct.dataflow_set_def** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %set.addr, metadata !14707, metadata !DIExpression()), !dbg !14708
  store %struct.rtx_def* %loc, %struct.rtx_def** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %loc.addr, metadata !14709, metadata !DIExpression()), !dbg !14710
  store i8* %dv, i8** %dv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dv.addr, metadata !14711, metadata !DIExpression()), !dbg !14712
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !14713, metadata !DIExpression()), !dbg !14714
  call void @llvm.dbg.declare(metadata i8*** %slot, metadata !14715, metadata !DIExpression()), !dbg !14716
  %0 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !14717
  %vars = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %0, i32 0, i32 2, !dbg !14718
  %1 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars, align 8, !dbg !14718
  %2 = load i8*, i8** %dv.addr, align 8, !dbg !14719
  %call = call i8** @shared_hash_find_slot_noinsert(%struct.shared_hash_def* %1, i8* %2), !dbg !14720
  store i8** %call, i8*** %slot, align 8, !dbg !14716
  %3 = load i8**, i8*** %slot, align 8, !dbg !14721
  %tobool = icmp ne i8** %3, null, !dbg !14721
  br i1 %tobool, label %if.end, label %if.then, !dbg !14723

if.then:                                          ; preds = %entry
  br label %return, !dbg !14724

if.end:                                           ; preds = %entry
  %4 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !14725
  %5 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !14726
  %6 = load i8**, i8*** %slot, align 8, !dbg !14727
  %7 = load i64, i64* %offset.addr, align 8, !dbg !14728
  %call1 = call i8** @delete_slot_part(%struct.dataflow_set_def* %4, %struct.rtx_def* %5, i8** %6, i64 %7), !dbg !14729
  store i8** %call1, i8*** %slot, align 8, !dbg !14730
  br label %return, !dbg !14731

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !14731
}

; Function Attrs: noinline nounwind uwtable
define internal void @var_mem_decl_set(%struct.dataflow_set_def* %set, %struct.rtx_def* %loc, i32 %initialized, i8* %dv, i64 %offset, %struct.rtx_def* %set_src, i32 %iopt) #0 !dbg !14732 {
entry:
  %set.addr = alloca %struct.dataflow_set_def*, align 8
  %loc.addr = alloca %struct.rtx_def*, align 8
  %initialized.addr = alloca i32, align 4
  %dv.addr = alloca i8*, align 8
  %offset.addr = alloca i64, align 8
  %set_src.addr = alloca %struct.rtx_def*, align 8
  %iopt.addr = alloca i32, align 4
  store %struct.dataflow_set_def* %set, %struct.dataflow_set_def** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %set.addr, metadata !14733, metadata !DIExpression()), !dbg !14734
  store %struct.rtx_def* %loc, %struct.rtx_def** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %loc.addr, metadata !14735, metadata !DIExpression()), !dbg !14736
  store i32 %initialized, i32* %initialized.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %initialized.addr, metadata !14737, metadata !DIExpression()), !dbg !14738
  store i8* %dv, i8** %dv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dv.addr, metadata !14739, metadata !DIExpression()), !dbg !14740
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !14741, metadata !DIExpression()), !dbg !14742
  store %struct.rtx_def* %set_src, %struct.rtx_def** %set_src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %set_src.addr, metadata !14743, metadata !DIExpression()), !dbg !14744
  store i32 %iopt, i32* %iopt.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %iopt.addr, metadata !14745, metadata !DIExpression()), !dbg !14746
  %0 = load i8*, i8** %dv.addr, align 8, !dbg !14747
  %call = call zeroext i8 @dv_is_decl_p(i8* %0), !dbg !14749
  %tobool = icmp ne i8 %call, 0, !dbg !14749
  br i1 %tobool, label %if.then, label %if.end, !dbg !14750

if.then:                                          ; preds = %entry
  %1 = load i8*, i8** %dv.addr, align 8, !dbg !14751
  %call1 = call %union.tree_node* @dv_as_decl(i8* %1), !dbg !14752
  %call2 = call %union.tree_node* @var_debug_decl(%union.tree_node* %call1), !dbg !14753
  %call3 = call i8* @dv_from_decl(%union.tree_node* %call2), !dbg !14754
  store i8* %call3, i8** %dv.addr, align 8, !dbg !14755
  br label %if.end, !dbg !14756

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !14757
  %3 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !14758
  %4 = load i8*, i8** %dv.addr, align 8, !dbg !14759
  %5 = load i64, i64* %offset.addr, align 8, !dbg !14760
  %6 = load i32, i32* %initialized.addr, align 4, !dbg !14761
  %7 = load %struct.rtx_def*, %struct.rtx_def** %set_src.addr, align 8, !dbg !14762
  %8 = load i32, i32* %iopt.addr, align 4, !dbg !14763
  call void @set_variable_part(%struct.dataflow_set_def* %2, %struct.rtx_def* %3, i8* %4, i64 %5, i32 %6, %struct.rtx_def* %7, i32 %8), !dbg !14764
  ret void, !dbg !14765
}

; Function Attrs: noinline nounwind uwtable
define internal void @attrs_list_union(%struct.attrs_def** %dstp, %struct.attrs_def* %src) #0 !dbg !14766 {
entry:
  %dstp.addr = alloca %struct.attrs_def**, align 8
  %src.addr = alloca %struct.attrs_def*, align 8
  store %struct.attrs_def** %dstp, %struct.attrs_def*** %dstp.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.attrs_def*** %dstp.addr, metadata !14767, metadata !DIExpression()), !dbg !14768
  store %struct.attrs_def* %src, %struct.attrs_def** %src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.attrs_def** %src.addr, metadata !14769, metadata !DIExpression()), !dbg !14770
  br label %for.cond, !dbg !14771

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.attrs_def*, %struct.attrs_def** %src.addr, align 8, !dbg !14772
  %tobool = icmp ne %struct.attrs_def* %0, null, !dbg !14775
  br i1 %tobool, label %for.body, label %for.end, !dbg !14775

for.body:                                         ; preds = %for.cond
  %1 = load %struct.attrs_def**, %struct.attrs_def*** %dstp.addr, align 8, !dbg !14776
  %2 = load %struct.attrs_def*, %struct.attrs_def** %1, align 8, !dbg !14779
  %3 = load %struct.attrs_def*, %struct.attrs_def** %src.addr, align 8, !dbg !14780
  %dv = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %3, i32 0, i32 2, !dbg !14781
  %4 = load i8*, i8** %dv, align 8, !dbg !14781
  %5 = load %struct.attrs_def*, %struct.attrs_def** %src.addr, align 8, !dbg !14782
  %offset = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %5, i32 0, i32 3, !dbg !14783
  %6 = load i64, i64* %offset, align 8, !dbg !14783
  %call = call %struct.attrs_def* @attrs_list_member(%struct.attrs_def* %2, i8* %4, i64 %6), !dbg !14784
  %tobool1 = icmp ne %struct.attrs_def* %call, null, !dbg !14784
  br i1 %tobool1, label %if.end, label %if.then, !dbg !14785

if.then:                                          ; preds = %for.body
  %7 = load %struct.attrs_def**, %struct.attrs_def*** %dstp.addr, align 8, !dbg !14786
  %8 = load %struct.attrs_def*, %struct.attrs_def** %src.addr, align 8, !dbg !14787
  %dv2 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %8, i32 0, i32 2, !dbg !14788
  %9 = load i8*, i8** %dv2, align 8, !dbg !14788
  %10 = load %struct.attrs_def*, %struct.attrs_def** %src.addr, align 8, !dbg !14789
  %offset3 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %10, i32 0, i32 3, !dbg !14790
  %11 = load i64, i64* %offset3, align 8, !dbg !14790
  %12 = load %struct.attrs_def*, %struct.attrs_def** %src.addr, align 8, !dbg !14791
  %loc = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %12, i32 0, i32 1, !dbg !14792
  %13 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !14792
  call void @attrs_list_insert(%struct.attrs_def** %7, i8* %9, i64 %11, %struct.rtx_def* %13), !dbg !14793
  br label %if.end, !dbg !14793

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !14794

for.inc:                                          ; preds = %if.end
  %14 = load %struct.attrs_def*, %struct.attrs_def** %src.addr, align 8, !dbg !14795
  %next = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %14, i32 0, i32 0, !dbg !14796
  %15 = load %struct.attrs_def*, %struct.attrs_def** %next, align 8, !dbg !14796
  store %struct.attrs_def* %15, %struct.attrs_def** %src.addr, align 8, !dbg !14797
  br label %for.cond, !dbg !14798, !llvm.loop !14799

for.end:                                          ; preds = %for.cond
  ret void, !dbg !14801
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_micro_operation_base_iterate(%struct.VEC_micro_operation_base* %vec_, i32 %ix_, %struct.micro_operation_def** %ptr) #0 !dbg !14802 {
entry:
  %retval = alloca i32, align 4
  %vec_.addr = alloca %struct.VEC_micro_operation_base*, align 8
  %ix_.addr = alloca i32, align 4
  %ptr.addr = alloca %struct.micro_operation_def**, align 8
  store %struct.VEC_micro_operation_base* %vec_, %struct.VEC_micro_operation_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_micro_operation_base** %vec_.addr, metadata !14806, metadata !DIExpression()), !dbg !14807
  store i32 %ix_, i32* %ix_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ix_.addr, metadata !14808, metadata !DIExpression()), !dbg !14807
  store %struct.micro_operation_def** %ptr, %struct.micro_operation_def*** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.micro_operation_def*** %ptr.addr, metadata !14809, metadata !DIExpression()), !dbg !14807
  %0 = load %struct.VEC_micro_operation_base*, %struct.VEC_micro_operation_base** %vec_.addr, align 8, !dbg !14810
  %tobool = icmp ne %struct.VEC_micro_operation_base* %0, null, !dbg !14810
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !14810

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %ix_.addr, align 4, !dbg !14810
  %2 = load %struct.VEC_micro_operation_base*, %struct.VEC_micro_operation_base** %vec_.addr, align 8, !dbg !14810
  %num = getelementptr inbounds %struct.VEC_micro_operation_base, %struct.VEC_micro_operation_base* %2, i32 0, i32 0, !dbg !14810
  %3 = load i32, i32* %num, align 8, !dbg !14810
  %cmp = icmp ult i32 %1, %3, !dbg !14810
  br i1 %cmp, label %if.then, label %if.else, !dbg !14807

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.VEC_micro_operation_base*, %struct.VEC_micro_operation_base** %vec_.addr, align 8, !dbg !14812
  %vec = getelementptr inbounds %struct.VEC_micro_operation_base, %struct.VEC_micro_operation_base* %4, i32 0, i32 2, !dbg !14812
  %5 = load i32, i32* %ix_.addr, align 4, !dbg !14812
  %idxprom = zext i32 %5 to i64, !dbg !14812
  %arrayidx = getelementptr inbounds [1 x %struct.micro_operation_def], [1 x %struct.micro_operation_def]* %vec, i64 0, i64 %idxprom, !dbg !14812
  %6 = load %struct.micro_operation_def**, %struct.micro_operation_def*** %ptr.addr, align 8, !dbg !14812
  store %struct.micro_operation_def* %arrayidx, %struct.micro_operation_def** %6, align 8, !dbg !14812
  store i32 1, i32* %retval, align 4, !dbg !14812
  br label %return, !dbg !14812

if.else:                                          ; preds = %land.lhs.true, %entry
  %7 = load %struct.micro_operation_def**, %struct.micro_operation_def*** %ptr.addr, align 8, !dbg !14814
  store %struct.micro_operation_def* null, %struct.micro_operation_def** %7, align 8, !dbg !14814
  store i32 0, i32* %retval, align 4, !dbg !14814
  br label %return, !dbg !14814

return:                                           ; preds = %if.else, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !14807
  ret i32 %8, !dbg !14807
}

; Function Attrs: noinline nounwind uwtable
define internal void @dataflow_set_clear_at_call(%struct.dataflow_set_def* %set) #0 !dbg !14816 {
entry:
  %set.addr = alloca %struct.dataflow_set_def*, align 8
  %r = alloca i32, align 4
  store %struct.dataflow_set_def* %set, %struct.dataflow_set_def** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %set.addr, metadata !14817, metadata !DIExpression()), !dbg !14818
  call void @llvm.dbg.declare(metadata i32* %r, metadata !14819, metadata !DIExpression()), !dbg !14820
  store i32 0, i32* %r, align 4, !dbg !14821
  br label %for.cond, !dbg !14823

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %r, align 4, !dbg !14824
  %cmp = icmp slt i32 %0, 53, !dbg !14826
  br i1 %cmp, label %for.body, label %for.end, !dbg !14827

for.body:                                         ; preds = %for.cond
  %1 = load i64, i64* @regs_invalidated_by_call, align 8, !dbg !14828
  %2 = load i32, i32* %r, align 4, !dbg !14828
  %sh_prom = zext i32 %2 to i64, !dbg !14828
  %shl = shl i64 1, %sh_prom, !dbg !14828
  %and = and i64 %1, %shl, !dbg !14828
  %tobool = icmp ne i64 %and, 0, !dbg !14828
  br i1 %tobool, label %if.then, label %if.end, !dbg !14830

if.then:                                          ; preds = %for.body
  %3 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !14831
  %4 = load i32, i32* %r, align 4, !dbg !14832
  call void @var_regno_delete(%struct.dataflow_set_def* %3, i32 %4), !dbg !14833
  br label %if.end, !dbg !14833

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !14828

for.inc:                                          ; preds = %if.end
  %5 = load i32, i32* %r, align 4, !dbg !14834
  %inc = add nsw i32 %5, 1, !dbg !14834
  store i32 %inc, i32* %r, align 4, !dbg !14834
  br label %for.cond, !dbg !14835, !llvm.loop !14836

for.end:                                          ; preds = %for.cond
  %6 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !14838
  %tobool1 = icmp ne i32 %6, 0, !dbg !14838
  br i1 %tobool1, label %if.then2, label %if.end9, !dbg !14840

if.then2:                                         ; preds = %for.end
  %7 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !14841
  %vars = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %7, i32 0, i32 2, !dbg !14843
  %8 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars, align 8, !dbg !14843
  %9 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !14844
  %traversed_vars = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %9, i32 0, i32 3, !dbg !14845
  store %struct.shared_hash_def* %8, %struct.shared_hash_def** %traversed_vars, align 8, !dbg !14846
  %10 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !14847
  %vars3 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %10, i32 0, i32 2, !dbg !14848
  %11 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars3, align 8, !dbg !14848
  %call = call %struct.htab* @shared_hash_htab(%struct.shared_hash_def* %11), !dbg !14849
  %12 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !14850
  %13 = bitcast %struct.dataflow_set_def* %12 to i8*, !dbg !14850
  call void @htab_traverse(%struct.htab* %call, i32 (i8**, i8*)* @dataflow_set_preserve_mem_locs, i8* %13), !dbg !14851
  %14 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !14852
  %vars4 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %14, i32 0, i32 2, !dbg !14853
  %15 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars4, align 8, !dbg !14853
  %16 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !14854
  %traversed_vars5 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %16, i32 0, i32 3, !dbg !14855
  store %struct.shared_hash_def* %15, %struct.shared_hash_def** %traversed_vars5, align 8, !dbg !14856
  %17 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !14857
  %vars6 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %17, i32 0, i32 2, !dbg !14858
  %18 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars6, align 8, !dbg !14858
  %call7 = call %struct.htab* @shared_hash_htab(%struct.shared_hash_def* %18), !dbg !14859
  %19 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !14860
  %20 = bitcast %struct.dataflow_set_def* %19 to i8*, !dbg !14860
  call void @htab_traverse(%struct.htab* %call7, i32 (i8**, i8*)* @dataflow_set_remove_mem_locs, i8* %20), !dbg !14861
  %21 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !14862
  %traversed_vars8 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %21, i32 0, i32 3, !dbg !14863
  store %struct.shared_hash_def* null, %struct.shared_hash_def** %traversed_vars8, align 8, !dbg !14864
  br label %if.end9, !dbg !14865

if.end9:                                          ; preds = %if.then2, %for.end
  ret void, !dbg !14866
}

; Function Attrs: noinline nounwind uwtable
define internal void @var_reg_set(%struct.dataflow_set_def* %set, %struct.rtx_def* %loc, i32 %initialized, %struct.rtx_def* %set_src) #0 !dbg !14867 {
entry:
  %set.addr = alloca %struct.dataflow_set_def*, align 8
  %loc.addr = alloca %struct.rtx_def*, align 8
  %initialized.addr = alloca i32, align 4
  %set_src.addr = alloca %struct.rtx_def*, align 8
  %decl = alloca %union.tree_node*, align 8
  %offset = alloca i64, align 8
  store %struct.dataflow_set_def* %set, %struct.dataflow_set_def** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %set.addr, metadata !14870, metadata !DIExpression()), !dbg !14871
  store %struct.rtx_def* %loc, %struct.rtx_def** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %loc.addr, metadata !14872, metadata !DIExpression()), !dbg !14873
  store i32 %initialized, i32* %initialized.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %initialized.addr, metadata !14874, metadata !DIExpression()), !dbg !14875
  store %struct.rtx_def* %set_src, %struct.rtx_def** %set_src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %set_src.addr, metadata !14876, metadata !DIExpression()), !dbg !14877
  call void @llvm.dbg.declare(metadata %union.tree_node** %decl, metadata !14878, metadata !DIExpression()), !dbg !14879
  %0 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !14880
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !14880
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !14880
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 2, !dbg !14880
  %rt_reg = bitcast %union.rtunion_def* %arrayidx to %struct.reg_attrs**, !dbg !14880
  %1 = load %struct.reg_attrs*, %struct.reg_attrs** %rt_reg, align 8, !dbg !14880
  %cmp = icmp eq %struct.reg_attrs* %1, null, !dbg !14880
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !14880

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !14880

cond.false:                                       ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !14880
  %u1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1, !dbg !14880
  %fld2 = bitcast %union.u* %u1 to [1 x %union.rtunion_def]*, !dbg !14880
  %arrayidx3 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2, i64 0, i64 2, !dbg !14880
  %rt_reg4 = bitcast %union.rtunion_def* %arrayidx3 to %struct.reg_attrs**, !dbg !14880
  %3 = load %struct.reg_attrs*, %struct.reg_attrs** %rt_reg4, align 8, !dbg !14880
  %decl5 = getelementptr inbounds %struct.reg_attrs, %struct.reg_attrs* %3, i32 0, i32 0, !dbg !14880
  %4 = load %union.tree_node*, %union.tree_node** %decl5, align 8, !dbg !14880
  br label %cond.end, !dbg !14880

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %union.tree_node* [ null, %cond.true ], [ %4, %cond.false ], !dbg !14880
  store %union.tree_node* %cond, %union.tree_node** %decl, align 8, !dbg !14879
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !14881, metadata !DIExpression()), !dbg !14882
  %5 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !14883
  %u6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1, !dbg !14883
  %fld7 = bitcast %union.u* %u6 to [1 x %union.rtunion_def]*, !dbg !14883
  %arrayidx8 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld7, i64 0, i64 2, !dbg !14883
  %rt_reg9 = bitcast %union.rtunion_def* %arrayidx8 to %struct.reg_attrs**, !dbg !14883
  %6 = load %struct.reg_attrs*, %struct.reg_attrs** %rt_reg9, align 8, !dbg !14883
  %cmp10 = icmp eq %struct.reg_attrs* %6, null, !dbg !14883
  br i1 %cmp10, label %cond.true11, label %cond.false12, !dbg !14883

cond.true11:                                      ; preds = %cond.end
  br label %cond.end18, !dbg !14883

cond.false12:                                     ; preds = %cond.end
  %7 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !14883
  %u13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1, !dbg !14883
  %fld14 = bitcast %union.u* %u13 to [1 x %union.rtunion_def]*, !dbg !14883
  %arrayidx15 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld14, i64 0, i64 2, !dbg !14883
  %rt_reg16 = bitcast %union.rtunion_def* %arrayidx15 to %struct.reg_attrs**, !dbg !14883
  %8 = load %struct.reg_attrs*, %struct.reg_attrs** %rt_reg16, align 8, !dbg !14883
  %offset17 = getelementptr inbounds %struct.reg_attrs, %struct.reg_attrs* %8, i32 0, i32 1, !dbg !14883
  %9 = load i64, i64* %offset17, align 8, !dbg !14883
  br label %cond.end18, !dbg !14883

cond.end18:                                       ; preds = %cond.false12, %cond.true11
  %cond19 = phi i64 [ 0, %cond.true11 ], [ %9, %cond.false12 ], !dbg !14883
  store i64 %cond19, i64* %offset, align 8, !dbg !14882
  %10 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !14884
  %11 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !14885
  %12 = load i32, i32* %initialized.addr, align 4, !dbg !14886
  %13 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !14887
  %call = call i8* @dv_from_decl(%union.tree_node* %13), !dbg !14888
  %14 = load i64, i64* %offset, align 8, !dbg !14889
  %15 = load %struct.rtx_def*, %struct.rtx_def** %set_src.addr, align 8, !dbg !14890
  call void @var_reg_decl_set(%struct.dataflow_set_def* %10, %struct.rtx_def* %11, i32 %12, i8* %call, i64 %14, %struct.rtx_def* %15, i32 1), !dbg !14891
  ret void, !dbg !14892
}

; Function Attrs: noinline nounwind uwtable
define internal void @var_mem_set(%struct.dataflow_set_def* %set, %struct.rtx_def* %loc, i32 %initialized, %struct.rtx_def* %set_src) #0 !dbg !14893 {
entry:
  %set.addr = alloca %struct.dataflow_set_def*, align 8
  %loc.addr = alloca %struct.rtx_def*, align 8
  %initialized.addr = alloca i32, align 4
  %set_src.addr = alloca %struct.rtx_def*, align 8
  %decl = alloca %union.tree_node*, align 8
  %offset = alloca i64, align 8
  store %struct.dataflow_set_def* %set, %struct.dataflow_set_def** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %set.addr, metadata !14894, metadata !DIExpression()), !dbg !14895
  store %struct.rtx_def* %loc, %struct.rtx_def** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %loc.addr, metadata !14896, metadata !DIExpression()), !dbg !14897
  store i32 %initialized, i32* %initialized.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %initialized.addr, metadata !14898, metadata !DIExpression()), !dbg !14899
  store %struct.rtx_def* %set_src, %struct.rtx_def** %set_src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %set_src.addr, metadata !14900, metadata !DIExpression()), !dbg !14901
  call void @llvm.dbg.declare(metadata %union.tree_node** %decl, metadata !14902, metadata !DIExpression()), !dbg !14903
  %0 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !14904
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !14904
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !14904
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 1, !dbg !14904
  %rt_mem = bitcast %union.rtunion_def* %arrayidx to %struct.mem_attrs**, !dbg !14904
  %1 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !14904
  %cmp = icmp eq %struct.mem_attrs* %1, null, !dbg !14904
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !14904

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !14904

cond.false:                                       ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !14904
  %u1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1, !dbg !14904
  %fld2 = bitcast %union.u* %u1 to [1 x %union.rtunion_def]*, !dbg !14904
  %arrayidx3 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2, i64 0, i64 1, !dbg !14904
  %rt_mem4 = bitcast %union.rtunion_def* %arrayidx3 to %struct.mem_attrs**, !dbg !14904
  %3 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem4, align 8, !dbg !14904
  %expr = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %3, i32 0, i32 0, !dbg !14904
  %4 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !14904
  br label %cond.end, !dbg !14904

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %union.tree_node* [ null, %cond.true ], [ %4, %cond.false ], !dbg !14904
  store %union.tree_node* %cond, %union.tree_node** %decl, align 8, !dbg !14903
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !14905, metadata !DIExpression()), !dbg !14906
  %5 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !14907
  %u5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1, !dbg !14907
  %fld6 = bitcast %union.u* %u5 to [1 x %union.rtunion_def]*, !dbg !14907
  %arrayidx7 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld6, i64 0, i64 1, !dbg !14907
  %rt_mem8 = bitcast %union.rtunion_def* %arrayidx7 to %struct.mem_attrs**, !dbg !14907
  %6 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem8, align 8, !dbg !14907
  %cmp9 = icmp eq %struct.mem_attrs* %6, null, !dbg !14907
  br i1 %cmp9, label %cond.true10, label %cond.false11, !dbg !14907

cond.true10:                                      ; preds = %cond.end
  br i1 false, label %cond.true17, label %cond.false34, !dbg !14907

cond.false11:                                     ; preds = %cond.end
  %7 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !14907
  %u12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1, !dbg !14907
  %fld13 = bitcast %union.u* %u12 to [1 x %union.rtunion_def]*, !dbg !14907
  %arrayidx14 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld13, i64 0, i64 1, !dbg !14907
  %rt_mem15 = bitcast %union.rtunion_def* %arrayidx14 to %struct.mem_attrs**, !dbg !14907
  %8 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem15, align 8, !dbg !14907
  %offset16 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %8, i32 0, i32 1, !dbg !14907
  %9 = load %struct.rtx_def*, %struct.rtx_def** %offset16, align 8, !dbg !14907
  %tobool = icmp ne %struct.rtx_def* %9, null, !dbg !14907
  br i1 %tobool, label %cond.true17, label %cond.false34, !dbg !14907

cond.true17:                                      ; preds = %cond.false11, %cond.true10
  %10 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !14907
  %u18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1, !dbg !14907
  %fld19 = bitcast %union.u* %u18 to [1 x %union.rtunion_def]*, !dbg !14907
  %arrayidx20 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld19, i64 0, i64 1, !dbg !14907
  %rt_mem21 = bitcast %union.rtunion_def* %arrayidx20 to %struct.mem_attrs**, !dbg !14907
  %11 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem21, align 8, !dbg !14907
  %cmp22 = icmp eq %struct.mem_attrs* %11, null, !dbg !14907
  br i1 %cmp22, label %cond.true23, label %cond.false24, !dbg !14907

cond.true23:                                      ; preds = %cond.true17
  br label %cond.end30, !dbg !14907

cond.false24:                                     ; preds = %cond.true17
  %12 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !14907
  %u25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1, !dbg !14907
  %fld26 = bitcast %union.u* %u25 to [1 x %union.rtunion_def]*, !dbg !14907
  %arrayidx27 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld26, i64 0, i64 1, !dbg !14907
  %rt_mem28 = bitcast %union.rtunion_def* %arrayidx27 to %struct.mem_attrs**, !dbg !14907
  %13 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem28, align 8, !dbg !14907
  %offset29 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %13, i32 0, i32 1, !dbg !14907
  %14 = load %struct.rtx_def*, %struct.rtx_def** %offset29, align 8, !dbg !14907
  br label %cond.end30, !dbg !14907

cond.end30:                                       ; preds = %cond.false24, %cond.true23
  %cond31 = phi %struct.rtx_def* [ null, %cond.true23 ], [ %14, %cond.false24 ], !dbg !14907
  %u32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond31, i32 0, i32 1, !dbg !14907
  %hwint = bitcast %union.u* %u32 to [1 x i64]*, !dbg !14907
  %arrayidx33 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 0, !dbg !14907
  %15 = load i64, i64* %arrayidx33, align 8, !dbg !14907
  br label %cond.end35, !dbg !14907

cond.false34:                                     ; preds = %cond.false11, %cond.true10
  br label %cond.end35, !dbg !14907

cond.end35:                                       ; preds = %cond.false34, %cond.end30
  %cond36 = phi i64 [ %15, %cond.end30 ], [ 0, %cond.false34 ], !dbg !14907
  store i64 %cond36, i64* %offset, align 8, !dbg !14906
  %16 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !14908
  %17 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !14909
  %18 = load i32, i32* %initialized.addr, align 4, !dbg !14910
  %19 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !14911
  %call = call i8* @dv_from_decl(%union.tree_node* %19), !dbg !14912
  %20 = load i64, i64* %offset, align 8, !dbg !14913
  %21 = load %struct.rtx_def*, %struct.rtx_def** %set_src.addr, align 8, !dbg !14914
  call void @var_mem_decl_set(%struct.dataflow_set_def* %16, %struct.rtx_def* %17, i32 %18, i8* %call, i64 %20, %struct.rtx_def* %21, i32 1), !dbg !14915
  ret void, !dbg !14916
}

; Function Attrs: noinline nounwind uwtable
define internal void @val_resolve(%struct.dataflow_set_def* %set, %struct.rtx_def* %val, %struct.rtx_def* %loc, %struct.rtx_def* %insn) #0 !dbg !14917 {
entry:
  %set.addr = alloca %struct.dataflow_set_def*, align 8
  %val.addr = alloca %struct.rtx_def*, align 8
  %loc.addr = alloca %struct.rtx_def*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %dv = alloca i8*, align 8
  %node = alloca %struct.attrs_def*, align 8
  %found = alloca %struct.attrs_def*, align 8
  store %struct.dataflow_set_def* %set, %struct.dataflow_set_def** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %set.addr, metadata !14920, metadata !DIExpression()), !dbg !14921
  store %struct.rtx_def* %val, %struct.rtx_def** %val.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %val.addr, metadata !14922, metadata !DIExpression()), !dbg !14923
  store %struct.rtx_def* %loc, %struct.rtx_def** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %loc.addr, metadata !14924, metadata !DIExpression()), !dbg !14925
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !14926, metadata !DIExpression()), !dbg !14927
  call void @llvm.dbg.declare(metadata i8** %dv, metadata !14928, metadata !DIExpression()), !dbg !14929
  %0 = load %struct.rtx_def*, %struct.rtx_def** %val.addr, align 8, !dbg !14930
  %call = call i8* @dv_from_value(%struct.rtx_def* %0), !dbg !14931
  store i8* %call, i8** %dv, align 8, !dbg !14929
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !14932
  %tobool = icmp ne %struct._IO_FILE* %1, null, !dbg !14932
  br i1 %tobool, label %land.lhs.true, label %if.end8, !dbg !14934

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* @dump_flags, align 4, !dbg !14935
  %and = and i32 %2, 8, !dbg !14936
  %tobool1 = icmp ne i32 %and, 0, !dbg !14936
  br i1 %tobool1, label %if.then, label %if.end8, !dbg !14937

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !14938
  %tobool2 = icmp ne %struct.rtx_def* %3, null, !dbg !14938
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !14941

if.then3:                                         ; preds = %if.then
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !14942
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !14943
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1, !dbg !14943
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !14943
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !14943
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !14943
  %6 = load i32, i32* %rt_int, align 8, !dbg !14943
  %call4 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i64 0, i64 0), i32 %6), !dbg !14944
  br label %if.end, !dbg !14944

if.else:                                          ; preds = %if.then
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !14945
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.29, i64 0, i64 0)), !dbg !14946
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then3
  %8 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !14947
  %9 = load %struct.rtx_def*, %struct.rtx_def** %val.addr, align 8, !dbg !14948
  call void @print_inline_rtx(%struct._IO_FILE* %8, %struct.rtx_def* %9, i32 0), !dbg !14949
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !14950
  %call6 = call i32 @fputs(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.30, i64 0, i64 0), %struct._IO_FILE* %10), !dbg !14951
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !14952
  %12 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !14953
  call void @print_inline_rtx(%struct._IO_FILE* %11, %struct.rtx_def* %12, i32 0), !dbg !14954
  %13 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !14955
  %call7 = call i32 @fputc(i32 10, %struct._IO_FILE* %13), !dbg !14956
  br label %if.end8, !dbg !14957

if.end8:                                          ; preds = %if.end, %land.lhs.true, %entry
  %14 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !14958
  %15 = load i8*, i8** %dv, align 8, !dbg !14959
  call void @val_reset(%struct.dataflow_set_def* %14, i8* %15), !dbg !14960
  %16 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !14961
  %17 = bitcast %struct.rtx_def* %16 to i32*, !dbg !14961
  %bf.load = load i32, i32* %17, align 8, !dbg !14961
  %bf.clear = and i32 %bf.load, 65535, !dbg !14961
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !14961
  br i1 %cmp, label %if.then9, label %if.else37, !dbg !14963

if.then9:                                         ; preds = %if.end8
  call void @llvm.dbg.declare(metadata %struct.attrs_def** %node, metadata !14964, metadata !DIExpression()), !dbg !14966
  call void @llvm.dbg.declare(metadata %struct.attrs_def** %found, metadata !14967, metadata !DIExpression()), !dbg !14968
  store %struct.attrs_def* null, %struct.attrs_def** %found, align 8, !dbg !14968
  %18 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !14969
  %regs = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %18, i32 0, i32 1, !dbg !14971
  %19 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !14972
  %call10 = call i32 @rhs_regno(%struct.rtx_def* %19), !dbg !14972
  %idxprom = zext i32 %call10 to i64, !dbg !14969
  %arrayidx11 = getelementptr inbounds [53 x %struct.attrs_def*], [53 x %struct.attrs_def*]* %regs, i64 0, i64 %idxprom, !dbg !14969
  %20 = load %struct.attrs_def*, %struct.attrs_def** %arrayidx11, align 8, !dbg !14969
  store %struct.attrs_def* %20, %struct.attrs_def** %node, align 8, !dbg !14973
  br label %for.cond, !dbg !14974

for.cond:                                         ; preds = %for.inc, %if.then9
  %21 = load %struct.attrs_def*, %struct.attrs_def** %node, align 8, !dbg !14975
  %tobool12 = icmp ne %struct.attrs_def* %21, null, !dbg !14977
  br i1 %tobool12, label %for.body, label %for.end, !dbg !14977

for.body:                                         ; preds = %for.cond
  %22 = load %struct.attrs_def*, %struct.attrs_def** %node, align 8, !dbg !14978
  %dv13 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %22, i32 0, i32 2, !dbg !14980
  %23 = load i8*, i8** %dv13, align 8, !dbg !14980
  %call14 = call zeroext i8 @dv_is_value_p(i8* %23), !dbg !14981
  %conv = zext i8 %call14 to i32, !dbg !14981
  %tobool15 = icmp ne i32 %conv, 0, !dbg !14981
  br i1 %tobool15, label %land.lhs.true16, label %if.end32, !dbg !14982

land.lhs.true16:                                  ; preds = %for.body
  %24 = load %struct.attrs_def*, %struct.attrs_def** %node, align 8, !dbg !14983
  %dv17 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %24, i32 0, i32 2, !dbg !14983
  %25 = load i8*, i8** %dv17, align 8, !dbg !14983
  %call18 = call %struct.rtx_def* @dv_as_value(i8* %25), !dbg !14983
  %26 = bitcast %struct.rtx_def* %call18 to i32*, !dbg !14983
  %bf.load19 = load i32, i32* %26, align 8, !dbg !14983
  %bf.lshr = lshr i32 %bf.load19, 16, !dbg !14983
  %bf.clear20 = and i32 %bf.lshr, 255, !dbg !14983
  %27 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !14984
  %28 = bitcast %struct.rtx_def* %27 to i32*, !dbg !14984
  %bf.load21 = load i32, i32* %28, align 8, !dbg !14984
  %bf.lshr22 = lshr i32 %bf.load21, 16, !dbg !14984
  %bf.clear23 = and i32 %bf.lshr22, 255, !dbg !14984
  %cmp24 = icmp eq i32 %bf.clear20, %bf.clear23, !dbg !14985
  br i1 %cmp24, label %if.then26, label %if.end32, !dbg !14986

if.then26:                                        ; preds = %land.lhs.true16
  %29 = load %struct.attrs_def*, %struct.attrs_def** %node, align 8, !dbg !14987
  store %struct.attrs_def* %29, %struct.attrs_def** %found, align 8, !dbg !14989
  %30 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !14990
  %31 = load %struct.attrs_def*, %struct.attrs_def** %node, align 8, !dbg !14991
  %dv27 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %31, i32 0, i32 2, !dbg !14992
  %32 = load i8*, i8** %dv27, align 8, !dbg !14992
  %call28 = call %struct.rtx_def* @dv_as_value(i8* %32), !dbg !14993
  %33 = load %struct.rtx_def*, %struct.rtx_def** %val.addr, align 8, !dbg !14994
  %call29 = call i8* @dv_from_value(%struct.rtx_def* %33), !dbg !14995
  %34 = load %struct.attrs_def*, %struct.attrs_def** %node, align 8, !dbg !14996
  %offset = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %34, i32 0, i32 3, !dbg !14997
  %35 = load i64, i64* %offset, align 8, !dbg !14997
  call void @set_variable_part(%struct.dataflow_set_def* %30, %struct.rtx_def* %call28, i8* %call29, i64 %35, i32 2, %struct.rtx_def* null, i32 1), !dbg !14998
  %36 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !14999
  %37 = load %struct.rtx_def*, %struct.rtx_def** %val.addr, align 8, !dbg !15000
  %38 = load %struct.attrs_def*, %struct.attrs_def** %node, align 8, !dbg !15001
  %dv30 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %38, i32 0, i32 2, !dbg !15002
  %39 = load i8*, i8** %dv30, align 8, !dbg !15002
  %40 = load %struct.attrs_def*, %struct.attrs_def** %node, align 8, !dbg !15003
  %offset31 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %40, i32 0, i32 3, !dbg !15004
  %41 = load i64, i64* %offset31, align 8, !dbg !15004
  call void @set_variable_part(%struct.dataflow_set_def* %36, %struct.rtx_def* %37, i8* %39, i64 %41, i32 2, %struct.rtx_def* null, i32 1), !dbg !15005
  br label %if.end32, !dbg !15006

if.end32:                                         ; preds = %if.then26, %land.lhs.true16, %for.body
  br label %for.inc, !dbg !14984

for.inc:                                          ; preds = %if.end32
  %42 = load %struct.attrs_def*, %struct.attrs_def** %node, align 8, !dbg !15007
  %next = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %42, i32 0, i32 0, !dbg !15008
  %43 = load %struct.attrs_def*, %struct.attrs_def** %next, align 8, !dbg !15008
  store %struct.attrs_def* %43, %struct.attrs_def** %node, align 8, !dbg !15009
  br label %for.cond, !dbg !15010, !llvm.loop !15011

for.end:                                          ; preds = %for.cond
  %44 = load %struct.attrs_def*, %struct.attrs_def** %found, align 8, !dbg !15013
  %tobool33 = icmp ne %struct.attrs_def* %44, null, !dbg !15013
  br i1 %tobool33, label %if.end36, label %if.then34, !dbg !15015

if.then34:                                        ; preds = %for.end
  %45 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !15016
  %46 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !15017
  %47 = load %struct.rtx_def*, %struct.rtx_def** %val.addr, align 8, !dbg !15018
  %call35 = call i8* @dv_from_value(%struct.rtx_def* %47), !dbg !15019
  call void @var_reg_decl_set(%struct.dataflow_set_def* %45, %struct.rtx_def* %46, i32 2, i8* %call35, i64 0, %struct.rtx_def* null, i32 1), !dbg !15020
  br label %if.end36, !dbg !15020

if.end36:                                         ; preds = %if.then34, %for.end
  br label %if.end47, !dbg !15021

if.else37:                                        ; preds = %if.end8
  %48 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !15022
  %49 = bitcast %struct.rtx_def* %48 to i32*, !dbg !15022
  %bf.load38 = load i32, i32* %49, align 8, !dbg !15022
  %bf.clear39 = and i32 %bf.load38, 65535, !dbg !15022
  %cmp40 = icmp eq i32 %bf.clear39, 43, !dbg !15022
  br i1 %cmp40, label %if.then42, label %if.else44, !dbg !15024

if.then42:                                        ; preds = %if.else37
  %50 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !15025
  %51 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !15026
  %52 = load %struct.rtx_def*, %struct.rtx_def** %val.addr, align 8, !dbg !15027
  %call43 = call i8* @dv_from_value(%struct.rtx_def* %52), !dbg !15028
  call void @var_mem_decl_set(%struct.dataflow_set_def* %50, %struct.rtx_def* %51, i32 2, i8* %call43, i64 0, %struct.rtx_def* null, i32 1), !dbg !15029
  br label %if.end46, !dbg !15029

if.else44:                                        ; preds = %if.else37
  %53 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !15030
  %54 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !15031
  %55 = load %struct.rtx_def*, %struct.rtx_def** %val.addr, align 8, !dbg !15032
  %call45 = call i8* @dv_from_value(%struct.rtx_def* %55), !dbg !15033
  call void @set_variable_part(%struct.dataflow_set_def* %53, %struct.rtx_def* %54, i8* %call45, i64 0, i32 2, %struct.rtx_def* null, i32 1), !dbg !15034
  br label %if.end46

if.end46:                                         ; preds = %if.else44, %if.then42
  br label %if.end47

if.end47:                                         ; preds = %if.end46, %if.end36
  ret void, !dbg !15035
}

; Function Attrs: noinline nounwind uwtable
define internal void @val_store(%struct.dataflow_set_def* %set, %struct.rtx_def* %val, %struct.rtx_def* %loc, %struct.rtx_def* %insn, i8 zeroext %modified) #0 !dbg !15036 {
entry:
  %set.addr = alloca %struct.dataflow_set_def*, align 8
  %val.addr = alloca %struct.rtx_def*, align 8
  %loc.addr = alloca %struct.rtx_def*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %modified.addr = alloca i8, align 1
  %v = alloca %struct.cselib_val_struct*, align 8
  %l = alloca %struct.elt_loc_list*, align 8
  store %struct.dataflow_set_def* %set, %struct.dataflow_set_def** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %set.addr, metadata !15039, metadata !DIExpression()), !dbg !15040
  store %struct.rtx_def* %val, %struct.rtx_def** %val.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %val.addr, metadata !15041, metadata !DIExpression()), !dbg !15042
  store %struct.rtx_def* %loc, %struct.rtx_def** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %loc.addr, metadata !15043, metadata !DIExpression()), !dbg !15044
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !15045, metadata !DIExpression()), !dbg !15046
  store i8 %modified, i8* %modified.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %modified.addr, metadata !15047, metadata !DIExpression()), !dbg !15048
  call void @llvm.dbg.declare(metadata %struct.cselib_val_struct** %v, metadata !15049, metadata !DIExpression()), !dbg !15050
  %0 = load %struct.rtx_def*, %struct.rtx_def** %val.addr, align 8, !dbg !15051
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !15051
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !15051
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !15051
  %rt_cselib = bitcast %union.rtunion_def* %arrayidx to %struct.cselib_val_struct**, !dbg !15051
  %1 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %rt_cselib, align 8, !dbg !15051
  store %struct.cselib_val_struct* %1, %struct.cselib_val_struct** %v, align 8, !dbg !15050
  %2 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %v, align 8, !dbg !15052
  %call = call zeroext i8 @cselib_preserved_value_p(%struct.cselib_val_struct* %2), !dbg !15052
  %tobool = icmp ne i8 %call, 0, !dbg !15052
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !15052

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 1820, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !15052
  br label %cond.end, !dbg !15052

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !15052

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !15052
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !15053
  %tobool1 = icmp ne %struct._IO_FILE* %3, null, !dbg !15053
  br i1 %tobool1, label %if.then, label %if.end18, !dbg !15055

if.then:                                          ; preds = %cond.end
  %4 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !15056
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !15058
  %u2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1, !dbg !15058
  %fld3 = bitcast %union.u* %u2 to [1 x %union.rtunion_def]*, !dbg !15058
  %arrayidx4 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3, i64 0, i64 0, !dbg !15058
  %rt_int = bitcast %union.rtunion_def* %arrayidx4 to i32*, !dbg !15058
  %6 = load i32, i32* %rt_int, align 8, !dbg !15058
  %call5 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.28, i64 0, i64 0), i32 %6), !dbg !15059
  %7 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !15060
  %8 = load %struct.rtx_def*, %struct.rtx_def** %val.addr, align 8, !dbg !15061
  call void @print_inline_rtx(%struct._IO_FILE* %7, %struct.rtx_def* %8, i32 0), !dbg !15062
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !15063
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31, i64 0, i64 0)), !dbg !15064
  %10 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !15065
  %11 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !15066
  call void @print_inline_rtx(%struct._IO_FILE* %10, %struct.rtx_def* %11, i32 0), !dbg !15067
  %12 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %v, align 8, !dbg !15068
  %locs = getelementptr inbounds %struct.cselib_val_struct, %struct.cselib_val_struct* %12, i32 0, i32 3, !dbg !15070
  %13 = load %struct.elt_loc_list*, %struct.elt_loc_list** %locs, align 8, !dbg !15070
  %tobool7 = icmp ne %struct.elt_loc_list* %13, null, !dbg !15068
  br i1 %tobool7, label %if.then8, label %if.end, !dbg !15071

if.then8:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.elt_loc_list** %l, metadata !15072, metadata !DIExpression()), !dbg !15074
  %14 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %v, align 8, !dbg !15075
  %locs9 = getelementptr inbounds %struct.cselib_val_struct, %struct.cselib_val_struct* %14, i32 0, i32 3, !dbg !15077
  %15 = load %struct.elt_loc_list*, %struct.elt_loc_list** %locs9, align 8, !dbg !15077
  store %struct.elt_loc_list* %15, %struct.elt_loc_list** %l, align 8, !dbg !15078
  br label %for.cond, !dbg !15079

for.cond:                                         ; preds = %for.inc, %if.then8
  %16 = load %struct.elt_loc_list*, %struct.elt_loc_list** %l, align 8, !dbg !15080
  %tobool10 = icmp ne %struct.elt_loc_list* %16, null, !dbg !15082
  br i1 %tobool10, label %for.body, label %for.end, !dbg !15082

for.body:                                         ; preds = %for.cond
  %17 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !15083
  %18 = load %struct.elt_loc_list*, %struct.elt_loc_list** %l, align 8, !dbg !15085
  %setting_insn = getelementptr inbounds %struct.elt_loc_list, %struct.elt_loc_list* %18, i32 0, i32 2, !dbg !15085
  %19 = load %struct.rtx_def*, %struct.rtx_def** %setting_insn, align 8, !dbg !15085
  %u11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1, !dbg !15085
  %fld12 = bitcast %union.u* %u11 to [1 x %union.rtunion_def]*, !dbg !15085
  %arrayidx13 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld12, i64 0, i64 0, !dbg !15085
  %rt_int14 = bitcast %union.rtunion_def* %arrayidx13 to i32*, !dbg !15085
  %20 = load i32, i32* %rt_int14, align 8, !dbg !15085
  %call15 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %17, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.32, i64 0, i64 0), i32 %20), !dbg !15086
  %21 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !15087
  %22 = load %struct.elt_loc_list*, %struct.elt_loc_list** %l, align 8, !dbg !15088
  %loc16 = getelementptr inbounds %struct.elt_loc_list, %struct.elt_loc_list* %22, i32 0, i32 1, !dbg !15089
  %23 = load %struct.rtx_def*, %struct.rtx_def** %loc16, align 8, !dbg !15089
  call void @print_inline_rtx(%struct._IO_FILE* %21, %struct.rtx_def* %23, i32 0), !dbg !15090
  br label %for.inc, !dbg !15091

for.inc:                                          ; preds = %for.body
  %24 = load %struct.elt_loc_list*, %struct.elt_loc_list** %l, align 8, !dbg !15092
  %next = getelementptr inbounds %struct.elt_loc_list, %struct.elt_loc_list* %24, i32 0, i32 0, !dbg !15093
  %25 = load %struct.elt_loc_list*, %struct.elt_loc_list** %next, align 8, !dbg !15093
  store %struct.elt_loc_list* %25, %struct.elt_loc_list** %l, align 8, !dbg !15094
  br label %for.cond, !dbg !15095, !llvm.loop !15096

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !15098

if.end:                                           ; preds = %for.end, %if.then
  %26 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !15099
  %call17 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %26, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.33, i64 0, i64 0)), !dbg !15100
  br label %if.end18, !dbg !15101

if.end18:                                         ; preds = %if.end, %cond.end
  %27 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !15102
  %28 = bitcast %struct.rtx_def* %27 to i32*, !dbg !15102
  %bf.load = load i32, i32* %28, align 8, !dbg !15102
  %bf.clear = and i32 %bf.load, 65535, !dbg !15102
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !15102
  br i1 %cmp, label %if.then19, label %if.else, !dbg !15104

if.then19:                                        ; preds = %if.end18
  %29 = load i8, i8* %modified.addr, align 1, !dbg !15105
  %tobool20 = icmp ne i8 %29, 0, !dbg !15105
  br i1 %tobool20, label %if.then21, label %if.end23, !dbg !15108

if.then21:                                        ; preds = %if.then19
  %30 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !15109
  %31 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !15110
  %call22 = call i32 @rhs_regno(%struct.rtx_def* %31), !dbg !15110
  call void @var_regno_delete(%struct.dataflow_set_def* %30, i32 %call22), !dbg !15111
  br label %if.end23, !dbg !15111

if.end23:                                         ; preds = %if.then21, %if.then19
  %32 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !15112
  %33 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !15113
  %34 = load %struct.rtx_def*, %struct.rtx_def** %val.addr, align 8, !dbg !15114
  %call24 = call i8* @dv_from_value(%struct.rtx_def* %34), !dbg !15115
  call void @var_reg_decl_set(%struct.dataflow_set_def* %32, %struct.rtx_def* %33, i32 2, i8* %call24, i64 0, %struct.rtx_def* null, i32 1), !dbg !15116
  br label %if.end33, !dbg !15117

if.else:                                          ; preds = %if.end18
  %35 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !15118
  %36 = bitcast %struct.rtx_def* %35 to i32*, !dbg !15118
  %bf.load25 = load i32, i32* %36, align 8, !dbg !15118
  %bf.clear26 = and i32 %bf.load25, 65535, !dbg !15118
  %cmp27 = icmp eq i32 %bf.clear26, 43, !dbg !15118
  br i1 %cmp27, label %if.then28, label %if.else30, !dbg !15120

if.then28:                                        ; preds = %if.else
  %37 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !15121
  %38 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !15122
  %39 = load %struct.rtx_def*, %struct.rtx_def** %val.addr, align 8, !dbg !15123
  %call29 = call i8* @dv_from_value(%struct.rtx_def* %39), !dbg !15124
  call void @var_mem_decl_set(%struct.dataflow_set_def* %37, %struct.rtx_def* %38, i32 2, i8* %call29, i64 0, %struct.rtx_def* null, i32 1), !dbg !15125
  br label %if.end32, !dbg !15125

if.else30:                                        ; preds = %if.else
  %40 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !15126
  %41 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !15127
  %42 = load %struct.rtx_def*, %struct.rtx_def** %val.addr, align 8, !dbg !15128
  %call31 = call i8* @dv_from_value(%struct.rtx_def* %42), !dbg !15129
  call void @set_variable_part(%struct.dataflow_set_def* %40, %struct.rtx_def* %41, i8* %call31, i64 0, i32 2, %struct.rtx_def* null, i32 1), !dbg !15130
  br label %if.end32

if.end32:                                         ; preds = %if.else30, %if.then28
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.end23
  ret void, !dbg !15131
}

; Function Attrs: noinline nounwind uwtable
define internal void @var_reg_delete(%struct.dataflow_set_def* %set, %struct.rtx_def* %loc, i8 zeroext %clobber) #0 !dbg !15132 {
entry:
  %set.addr = alloca %struct.dataflow_set_def*, align 8
  %loc.addr = alloca %struct.rtx_def*, align 8
  %clobber.addr = alloca i8, align 1
  %nextp = alloca %struct.attrs_def**, align 8
  %node = alloca %struct.attrs_def*, align 8
  %next = alloca %struct.attrs_def*, align 8
  %decl = alloca %union.tree_node*, align 8
  %offset = alloca i64, align 8
  store %struct.dataflow_set_def* %set, %struct.dataflow_set_def** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %set.addr, metadata !15135, metadata !DIExpression()), !dbg !15136
  store %struct.rtx_def* %loc, %struct.rtx_def** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %loc.addr, metadata !15137, metadata !DIExpression()), !dbg !15138
  store i8 %clobber, i8* %clobber.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %clobber.addr, metadata !15139, metadata !DIExpression()), !dbg !15140
  call void @llvm.dbg.declare(metadata %struct.attrs_def*** %nextp, metadata !15141, metadata !DIExpression()), !dbg !15142
  %0 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !15143
  %regs = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %0, i32 0, i32 1, !dbg !15144
  %1 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !15145
  %call = call i32 @rhs_regno(%struct.rtx_def* %1), !dbg !15145
  %idxprom = zext i32 %call to i64, !dbg !15143
  %arrayidx = getelementptr inbounds [53 x %struct.attrs_def*], [53 x %struct.attrs_def*]* %regs, i64 0, i64 %idxprom, !dbg !15143
  store %struct.attrs_def** %arrayidx, %struct.attrs_def*** %nextp, align 8, !dbg !15142
  call void @llvm.dbg.declare(metadata %struct.attrs_def** %node, metadata !15146, metadata !DIExpression()), !dbg !15147
  call void @llvm.dbg.declare(metadata %struct.attrs_def** %next, metadata !15148, metadata !DIExpression()), !dbg !15149
  %2 = load i8, i8* %clobber.addr, align 1, !dbg !15150
  %tobool = icmp ne i8 %2, 0, !dbg !15150
  br i1 %tobool, label %if.then, label %if.end, !dbg !15152

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %union.tree_node** %decl, metadata !15153, metadata !DIExpression()), !dbg !15155
  %3 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !15156
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i32 0, i32 1, !dbg !15156
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !15156
  %arrayidx1 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 2, !dbg !15156
  %rt_reg = bitcast %union.rtunion_def* %arrayidx1 to %struct.reg_attrs**, !dbg !15156
  %4 = load %struct.reg_attrs*, %struct.reg_attrs** %rt_reg, align 8, !dbg !15156
  %cmp = icmp eq %struct.reg_attrs* %4, null, !dbg !15156
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !15156

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !15156

cond.false:                                       ; preds = %if.then
  %5 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !15156
  %u2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1, !dbg !15156
  %fld3 = bitcast %union.u* %u2 to [1 x %union.rtunion_def]*, !dbg !15156
  %arrayidx4 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3, i64 0, i64 2, !dbg !15156
  %rt_reg5 = bitcast %union.rtunion_def* %arrayidx4 to %struct.reg_attrs**, !dbg !15156
  %6 = load %struct.reg_attrs*, %struct.reg_attrs** %rt_reg5, align 8, !dbg !15156
  %decl6 = getelementptr inbounds %struct.reg_attrs, %struct.reg_attrs* %6, i32 0, i32 0, !dbg !15156
  %7 = load %union.tree_node*, %union.tree_node** %decl6, align 8, !dbg !15156
  br label %cond.end, !dbg !15156

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %union.tree_node* [ null, %cond.true ], [ %7, %cond.false ], !dbg !15156
  store %union.tree_node* %cond, %union.tree_node** %decl, align 8, !dbg !15155
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !15157, metadata !DIExpression()), !dbg !15158
  %8 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !15159
  %u7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1, !dbg !15159
  %fld8 = bitcast %union.u* %u7 to [1 x %union.rtunion_def]*, !dbg !15159
  %arrayidx9 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld8, i64 0, i64 2, !dbg !15159
  %rt_reg10 = bitcast %union.rtunion_def* %arrayidx9 to %struct.reg_attrs**, !dbg !15159
  %9 = load %struct.reg_attrs*, %struct.reg_attrs** %rt_reg10, align 8, !dbg !15159
  %cmp11 = icmp eq %struct.reg_attrs* %9, null, !dbg !15159
  br i1 %cmp11, label %cond.true12, label %cond.false13, !dbg !15159

cond.true12:                                      ; preds = %cond.end
  br label %cond.end19, !dbg !15159

cond.false13:                                     ; preds = %cond.end
  %10 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !15159
  %u14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1, !dbg !15159
  %fld15 = bitcast %union.u* %u14 to [1 x %union.rtunion_def]*, !dbg !15159
  %arrayidx16 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld15, i64 0, i64 2, !dbg !15159
  %rt_reg17 = bitcast %union.rtunion_def* %arrayidx16 to %struct.reg_attrs**, !dbg !15159
  %11 = load %struct.reg_attrs*, %struct.reg_attrs** %rt_reg17, align 8, !dbg !15159
  %offset18 = getelementptr inbounds %struct.reg_attrs, %struct.reg_attrs* %11, i32 0, i32 1, !dbg !15159
  %12 = load i64, i64* %offset18, align 8, !dbg !15159
  br label %cond.end19, !dbg !15159

cond.end19:                                       ; preds = %cond.false13, %cond.true12
  %cond20 = phi i64 [ 0, %cond.true12 ], [ %12, %cond.false13 ], !dbg !15159
  store i64 %cond20, i64* %offset, align 8, !dbg !15158
  %13 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !15160
  %call21 = call %union.tree_node* @var_debug_decl(%union.tree_node* %13), !dbg !15161
  store %union.tree_node* %call21, %union.tree_node** %decl, align 8, !dbg !15162
  %14 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !15163
  %15 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !15164
  %call22 = call i8* @dv_from_decl(%union.tree_node* %15), !dbg !15165
  %16 = load i64, i64* %offset, align 8, !dbg !15166
  call void @clobber_variable_part(%struct.dataflow_set_def* %14, %struct.rtx_def* null, i8* %call22, i64 %16, %struct.rtx_def* null), !dbg !15167
  br label %if.end, !dbg !15168

if.end:                                           ; preds = %cond.end19, %entry
  %17 = load %struct.attrs_def**, %struct.attrs_def*** %nextp, align 8, !dbg !15169
  %18 = load %struct.attrs_def*, %struct.attrs_def** %17, align 8, !dbg !15171
  store %struct.attrs_def* %18, %struct.attrs_def** %node, align 8, !dbg !15172
  br label %for.cond, !dbg !15173

for.cond:                                         ; preds = %for.inc, %if.end
  %19 = load %struct.attrs_def*, %struct.attrs_def** %node, align 8, !dbg !15174
  %tobool23 = icmp ne %struct.attrs_def* %19, null, !dbg !15176
  br i1 %tobool23, label %for.body, label %for.end, !dbg !15176

for.body:                                         ; preds = %for.cond
  %20 = load %struct.attrs_def*, %struct.attrs_def** %node, align 8, !dbg !15177
  %next24 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %20, i32 0, i32 0, !dbg !15179
  %21 = load %struct.attrs_def*, %struct.attrs_def** %next24, align 8, !dbg !15179
  store %struct.attrs_def* %21, %struct.attrs_def** %next, align 8, !dbg !15180
  %22 = load i8, i8* %clobber.addr, align 1, !dbg !15181
  %conv = zext i8 %22 to i32, !dbg !15181
  %tobool25 = icmp ne i32 %conv, 0, !dbg !15181
  br i1 %tobool25, label %if.then28, label %lor.lhs.false, !dbg !15183

lor.lhs.false:                                    ; preds = %for.body
  %23 = load %struct.attrs_def*, %struct.attrs_def** %node, align 8, !dbg !15184
  %dv = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %23, i32 0, i32 2, !dbg !15185
  %24 = load i8*, i8** %dv, align 8, !dbg !15185
  %call26 = call zeroext i8 @dv_onepart_p(i8* %24), !dbg !15186
  %tobool27 = icmp ne i8 %call26, 0, !dbg !15186
  br i1 %tobool27, label %if.else, label %if.then28, !dbg !15187

if.then28:                                        ; preds = %lor.lhs.false, %for.body
  %25 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !15188
  %26 = load %struct.attrs_def*, %struct.attrs_def** %node, align 8, !dbg !15190
  %loc29 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %26, i32 0, i32 1, !dbg !15191
  %27 = load %struct.rtx_def*, %struct.rtx_def** %loc29, align 8, !dbg !15191
  %28 = load %struct.attrs_def*, %struct.attrs_def** %node, align 8, !dbg !15192
  %dv30 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %28, i32 0, i32 2, !dbg !15193
  %29 = load i8*, i8** %dv30, align 8, !dbg !15193
  %30 = load %struct.attrs_def*, %struct.attrs_def** %node, align 8, !dbg !15194
  %offset31 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %30, i32 0, i32 3, !dbg !15195
  %31 = load i64, i64* %offset31, align 8, !dbg !15195
  call void @delete_variable_part(%struct.dataflow_set_def* %25, %struct.rtx_def* %27, i8* %29, i64 %31), !dbg !15196
  %32 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @attrs_pool, align 8, !dbg !15197
  %33 = load %struct.attrs_def*, %struct.attrs_def** %node, align 8, !dbg !15198
  %34 = bitcast %struct.attrs_def* %33 to i8*, !dbg !15198
  call void @pool_free(%struct.alloc_pool_def* %32, i8* %34), !dbg !15199
  %35 = load %struct.attrs_def*, %struct.attrs_def** %next, align 8, !dbg !15200
  %36 = load %struct.attrs_def**, %struct.attrs_def*** %nextp, align 8, !dbg !15201
  store %struct.attrs_def* %35, %struct.attrs_def** %36, align 8, !dbg !15202
  br label %if.end33, !dbg !15203

if.else:                                          ; preds = %lor.lhs.false
  %37 = load %struct.attrs_def*, %struct.attrs_def** %node, align 8, !dbg !15204
  %next32 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %37, i32 0, i32 0, !dbg !15205
  store %struct.attrs_def** %next32, %struct.attrs_def*** %nextp, align 8, !dbg !15206
  br label %if.end33

if.end33:                                         ; preds = %if.else, %if.then28
  br label %for.inc, !dbg !15207

for.inc:                                          ; preds = %if.end33
  %38 = load %struct.attrs_def*, %struct.attrs_def** %next, align 8, !dbg !15208
  store %struct.attrs_def* %38, %struct.attrs_def** %node, align 8, !dbg !15209
  br label %for.cond, !dbg !15210, !llvm.loop !15211

for.end:                                          ; preds = %for.cond
  ret void, !dbg !15213
}

; Function Attrs: noinline nounwind uwtable
define internal void @var_mem_delete(%struct.dataflow_set_def* %set, %struct.rtx_def* %loc, i8 zeroext %clobber) #0 !dbg !15214 {
entry:
  %set.addr = alloca %struct.dataflow_set_def*, align 8
  %loc.addr = alloca %struct.rtx_def*, align 8
  %clobber.addr = alloca i8, align 1
  %decl = alloca %union.tree_node*, align 8
  %offset = alloca i64, align 8
  store %struct.dataflow_set_def* %set, %struct.dataflow_set_def** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %set.addr, metadata !15215, metadata !DIExpression()), !dbg !15216
  store %struct.rtx_def* %loc, %struct.rtx_def** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %loc.addr, metadata !15217, metadata !DIExpression()), !dbg !15218
  store i8 %clobber, i8* %clobber.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %clobber.addr, metadata !15219, metadata !DIExpression()), !dbg !15220
  call void @llvm.dbg.declare(metadata %union.tree_node** %decl, metadata !15221, metadata !DIExpression()), !dbg !15222
  %0 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !15223
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !15223
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !15223
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 1, !dbg !15223
  %rt_mem = bitcast %union.rtunion_def* %arrayidx to %struct.mem_attrs**, !dbg !15223
  %1 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !15223
  %cmp = icmp eq %struct.mem_attrs* %1, null, !dbg !15223
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !15223

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !15223

cond.false:                                       ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !15223
  %u1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1, !dbg !15223
  %fld2 = bitcast %union.u* %u1 to [1 x %union.rtunion_def]*, !dbg !15223
  %arrayidx3 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2, i64 0, i64 1, !dbg !15223
  %rt_mem4 = bitcast %union.rtunion_def* %arrayidx3 to %struct.mem_attrs**, !dbg !15223
  %3 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem4, align 8, !dbg !15223
  %expr = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %3, i32 0, i32 0, !dbg !15223
  %4 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !15223
  br label %cond.end, !dbg !15223

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %union.tree_node* [ null, %cond.true ], [ %4, %cond.false ], !dbg !15223
  store %union.tree_node* %cond, %union.tree_node** %decl, align 8, !dbg !15222
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !15224, metadata !DIExpression()), !dbg !15225
  %5 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !15226
  %u5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1, !dbg !15226
  %fld6 = bitcast %union.u* %u5 to [1 x %union.rtunion_def]*, !dbg !15226
  %arrayidx7 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld6, i64 0, i64 1, !dbg !15226
  %rt_mem8 = bitcast %union.rtunion_def* %arrayidx7 to %struct.mem_attrs**, !dbg !15226
  %6 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem8, align 8, !dbg !15226
  %cmp9 = icmp eq %struct.mem_attrs* %6, null, !dbg !15226
  br i1 %cmp9, label %cond.true10, label %cond.false11, !dbg !15226

cond.true10:                                      ; preds = %cond.end
  br i1 false, label %cond.true17, label %cond.false34, !dbg !15226

cond.false11:                                     ; preds = %cond.end
  %7 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !15226
  %u12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1, !dbg !15226
  %fld13 = bitcast %union.u* %u12 to [1 x %union.rtunion_def]*, !dbg !15226
  %arrayidx14 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld13, i64 0, i64 1, !dbg !15226
  %rt_mem15 = bitcast %union.rtunion_def* %arrayidx14 to %struct.mem_attrs**, !dbg !15226
  %8 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem15, align 8, !dbg !15226
  %offset16 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %8, i32 0, i32 1, !dbg !15226
  %9 = load %struct.rtx_def*, %struct.rtx_def** %offset16, align 8, !dbg !15226
  %tobool = icmp ne %struct.rtx_def* %9, null, !dbg !15226
  br i1 %tobool, label %cond.true17, label %cond.false34, !dbg !15226

cond.true17:                                      ; preds = %cond.false11, %cond.true10
  %10 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !15226
  %u18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1, !dbg !15226
  %fld19 = bitcast %union.u* %u18 to [1 x %union.rtunion_def]*, !dbg !15226
  %arrayidx20 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld19, i64 0, i64 1, !dbg !15226
  %rt_mem21 = bitcast %union.rtunion_def* %arrayidx20 to %struct.mem_attrs**, !dbg !15226
  %11 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem21, align 8, !dbg !15226
  %cmp22 = icmp eq %struct.mem_attrs* %11, null, !dbg !15226
  br i1 %cmp22, label %cond.true23, label %cond.false24, !dbg !15226

cond.true23:                                      ; preds = %cond.true17
  br label %cond.end30, !dbg !15226

cond.false24:                                     ; preds = %cond.true17
  %12 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !15226
  %u25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1, !dbg !15226
  %fld26 = bitcast %union.u* %u25 to [1 x %union.rtunion_def]*, !dbg !15226
  %arrayidx27 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld26, i64 0, i64 1, !dbg !15226
  %rt_mem28 = bitcast %union.rtunion_def* %arrayidx27 to %struct.mem_attrs**, !dbg !15226
  %13 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem28, align 8, !dbg !15226
  %offset29 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %13, i32 0, i32 1, !dbg !15226
  %14 = load %struct.rtx_def*, %struct.rtx_def** %offset29, align 8, !dbg !15226
  br label %cond.end30, !dbg !15226

cond.end30:                                       ; preds = %cond.false24, %cond.true23
  %cond31 = phi %struct.rtx_def* [ null, %cond.true23 ], [ %14, %cond.false24 ], !dbg !15226
  %u32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond31, i32 0, i32 1, !dbg !15226
  %hwint = bitcast %union.u* %u32 to [1 x i64]*, !dbg !15226
  %arrayidx33 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 0, !dbg !15226
  %15 = load i64, i64* %arrayidx33, align 8, !dbg !15226
  br label %cond.end35, !dbg !15226

cond.false34:                                     ; preds = %cond.false11, %cond.true10
  br label %cond.end35, !dbg !15226

cond.end35:                                       ; preds = %cond.false34, %cond.end30
  %cond36 = phi i64 [ %15, %cond.end30 ], [ 0, %cond.false34 ], !dbg !15226
  store i64 %cond36, i64* %offset, align 8, !dbg !15225
  %16 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !15227
  %call = call %union.tree_node* @var_debug_decl(%union.tree_node* %16), !dbg !15228
  store %union.tree_node* %call, %union.tree_node** %decl, align 8, !dbg !15229
  %17 = load i8, i8* %clobber.addr, align 1, !dbg !15230
  %tobool37 = icmp ne i8 %17, 0, !dbg !15230
  br i1 %tobool37, label %if.then, label %if.end, !dbg !15232

if.then:                                          ; preds = %cond.end35
  %18 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !15233
  %19 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !15234
  %call38 = call i8* @dv_from_decl(%union.tree_node* %19), !dbg !15235
  %20 = load i64, i64* %offset, align 8, !dbg !15236
  call void @clobber_variable_part(%struct.dataflow_set_def* %18, %struct.rtx_def* null, i8* %call38, i64 %20, %struct.rtx_def* null), !dbg !15237
  br label %if.end, !dbg !15237

if.end:                                           ; preds = %if.then, %cond.end35
  %21 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !15238
  %22 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !15239
  %23 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !15240
  %call39 = call i8* @dv_from_decl(%union.tree_node* %23), !dbg !15241
  %24 = load i64, i64* %offset, align 8, !dbg !15242
  call void @delete_variable_part(%struct.dataflow_set_def* %21, %struct.rtx_def* %22, i8* %call39, i64 %24), !dbg !15243
  ret void, !dbg !15244
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @find_src_status(%struct.dataflow_set_def* %in, %struct.rtx_def* %src) #0 !dbg !15245 {
entry:
  %in.addr = alloca %struct.dataflow_set_def*, align 8
  %src.addr = alloca %struct.rtx_def*, align 8
  %decl = alloca %union.tree_node*, align 8
  %status = alloca i32, align 4
  store %struct.dataflow_set_def* %in, %struct.dataflow_set_def** %in.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %in.addr, metadata !15248, metadata !DIExpression()), !dbg !15249
  store %struct.rtx_def* %src, %struct.rtx_def** %src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %src.addr, metadata !15250, metadata !DIExpression()), !dbg !15251
  call void @llvm.dbg.declare(metadata %union.tree_node** %decl, metadata !15252, metadata !DIExpression()), !dbg !15253
  store %union.tree_node* null, %union.tree_node** %decl, align 8, !dbg !15253
  call void @llvm.dbg.declare(metadata i32* %status, metadata !15254, metadata !DIExpression()), !dbg !15255
  store i32 1, i32* %status, align 4, !dbg !15255
  %0 = load i32, i32* @flag_var_tracking_uninit, align 4, !dbg !15256
  %tobool = icmp ne i32 %0, 0, !dbg !15256
  br i1 %tobool, label %if.end, label %if.then, !dbg !15258

if.then:                                          ; preds = %entry
  store i32 2, i32* %status, align 4, !dbg !15259
  br label %if.end, !dbg !15260

if.end:                                           ; preds = %if.then, %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** %src.addr, align 8, !dbg !15261
  %tobool1 = icmp ne %struct.rtx_def* %1, null, !dbg !15261
  br i1 %tobool1, label %land.lhs.true, label %if.else, !dbg !15263

land.lhs.true:                                    ; preds = %if.end
  %2 = load %struct.rtx_def*, %struct.rtx_def** %src.addr, align 8, !dbg !15264
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !15264
  %bf.load = load i32, i32* %3, align 8, !dbg !15264
  %bf.clear = and i32 %bf.load, 65535, !dbg !15264
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !15264
  br i1 %cmp, label %if.then2, label %if.else, !dbg !15265

if.then2:                                         ; preds = %land.lhs.true
  %4 = load %struct.rtx_def*, %struct.rtx_def** %src.addr, align 8, !dbg !15266
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1, !dbg !15266
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !15266
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 2, !dbg !15266
  %rt_reg = bitcast %union.rtunion_def* %arrayidx to %struct.reg_attrs**, !dbg !15266
  %5 = load %struct.reg_attrs*, %struct.reg_attrs** %rt_reg, align 8, !dbg !15266
  %cmp3 = icmp eq %struct.reg_attrs* %5, null, !dbg !15266
  br i1 %cmp3, label %cond.true, label %cond.false, !dbg !15266

cond.true:                                        ; preds = %if.then2
  br label %cond.end, !dbg !15266

cond.false:                                       ; preds = %if.then2
  %6 = load %struct.rtx_def*, %struct.rtx_def** %src.addr, align 8, !dbg !15266
  %u4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1, !dbg !15266
  %fld5 = bitcast %union.u* %u4 to [1 x %union.rtunion_def]*, !dbg !15266
  %arrayidx6 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld5, i64 0, i64 2, !dbg !15266
  %rt_reg7 = bitcast %union.rtunion_def* %arrayidx6 to %struct.reg_attrs**, !dbg !15266
  %7 = load %struct.reg_attrs*, %struct.reg_attrs** %rt_reg7, align 8, !dbg !15266
  %decl8 = getelementptr inbounds %struct.reg_attrs, %struct.reg_attrs* %7, i32 0, i32 0, !dbg !15266
  %8 = load %union.tree_node*, %union.tree_node** %decl8, align 8, !dbg !15266
  br label %cond.end, !dbg !15266

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %union.tree_node* [ null, %cond.true ], [ %8, %cond.false ], !dbg !15266
  %call = call %union.tree_node* @var_debug_decl(%union.tree_node* %cond), !dbg !15267
  store %union.tree_node* %call, %union.tree_node** %decl, align 8, !dbg !15268
  br label %if.end29, !dbg !15269

if.else:                                          ; preds = %land.lhs.true, %if.end
  %9 = load %struct.rtx_def*, %struct.rtx_def** %src.addr, align 8, !dbg !15270
  %tobool9 = icmp ne %struct.rtx_def* %9, null, !dbg !15270
  br i1 %tobool9, label %land.lhs.true10, label %if.end28, !dbg !15272

land.lhs.true10:                                  ; preds = %if.else
  %10 = load %struct.rtx_def*, %struct.rtx_def** %src.addr, align 8, !dbg !15273
  %11 = bitcast %struct.rtx_def* %10 to i32*, !dbg !15273
  %bf.load11 = load i32, i32* %11, align 8, !dbg !15273
  %bf.clear12 = and i32 %bf.load11, 65535, !dbg !15273
  %cmp13 = icmp eq i32 %bf.clear12, 43, !dbg !15273
  br i1 %cmp13, label %if.then14, label %if.end28, !dbg !15274

if.then14:                                        ; preds = %land.lhs.true10
  %12 = load %struct.rtx_def*, %struct.rtx_def** %src.addr, align 8, !dbg !15275
  %u15 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1, !dbg !15275
  %fld16 = bitcast %union.u* %u15 to [1 x %union.rtunion_def]*, !dbg !15275
  %arrayidx17 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld16, i64 0, i64 1, !dbg !15275
  %rt_mem = bitcast %union.rtunion_def* %arrayidx17 to %struct.mem_attrs**, !dbg !15275
  %13 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !15275
  %cmp18 = icmp eq %struct.mem_attrs* %13, null, !dbg !15275
  br i1 %cmp18, label %cond.true19, label %cond.false20, !dbg !15275

cond.true19:                                      ; preds = %if.then14
  br label %cond.end25, !dbg !15275

cond.false20:                                     ; preds = %if.then14
  %14 = load %struct.rtx_def*, %struct.rtx_def** %src.addr, align 8, !dbg !15275
  %u21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1, !dbg !15275
  %fld22 = bitcast %union.u* %u21 to [1 x %union.rtunion_def]*, !dbg !15275
  %arrayidx23 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld22, i64 0, i64 1, !dbg !15275
  %rt_mem24 = bitcast %union.rtunion_def* %arrayidx23 to %struct.mem_attrs**, !dbg !15275
  %15 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem24, align 8, !dbg !15275
  %expr = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %15, i32 0, i32 0, !dbg !15275
  %16 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !15275
  br label %cond.end25, !dbg !15275

cond.end25:                                       ; preds = %cond.false20, %cond.true19
  %cond26 = phi %union.tree_node* [ null, %cond.true19 ], [ %16, %cond.false20 ], !dbg !15275
  %call27 = call %union.tree_node* @var_debug_decl(%union.tree_node* %cond26), !dbg !15276
  store %union.tree_node* %call27, %union.tree_node** %decl, align 8, !dbg !15277
  br label %if.end28, !dbg !15278

if.end28:                                         ; preds = %cond.end25, %land.lhs.true10, %if.else
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %cond.end
  %17 = load %struct.rtx_def*, %struct.rtx_def** %src.addr, align 8, !dbg !15279
  %tobool30 = icmp ne %struct.rtx_def* %17, null, !dbg !15279
  br i1 %tobool30, label %land.lhs.true31, label %if.end36, !dbg !15281

land.lhs.true31:                                  ; preds = %if.end29
  %18 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !15282
  %tobool32 = icmp ne %union.tree_node* %18, null, !dbg !15282
  br i1 %tobool32, label %if.then33, label %if.end36, !dbg !15283

if.then33:                                        ; preds = %land.lhs.true31
  %19 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %in.addr, align 8, !dbg !15284
  %20 = load %struct.rtx_def*, %struct.rtx_def** %src.addr, align 8, !dbg !15285
  %21 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !15286
  %call34 = call i8* @dv_from_decl(%union.tree_node* %21), !dbg !15287
  %call35 = call i32 @get_init_value(%struct.dataflow_set_def* %19, %struct.rtx_def* %20, i8* %call34), !dbg !15288
  store i32 %call35, i32* %status, align 4, !dbg !15289
  br label %if.end36, !dbg !15290

if.end36:                                         ; preds = %if.then33, %land.lhs.true31, %if.end29
  %22 = load i32, i32* %status, align 4, !dbg !15291
  ret i32 %22, !dbg !15292
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @find_src_set_src(%struct.dataflow_set_def* %set, %struct.rtx_def* %src) #0 !dbg !15293 {
entry:
  %set.addr = alloca %struct.dataflow_set_def*, align 8
  %src.addr = alloca %struct.rtx_def*, align 8
  %decl = alloca %union.tree_node*, align 8
  %set_src = alloca %struct.rtx_def*, align 8
  %var = alloca %struct.variable_def*, align 8
  %nextp = alloca %struct.location_chain_def*, align 8
  %i = alloca i32, align 4
  %found = alloca i8, align 1
  %dv = alloca i8*, align 8
  store %struct.dataflow_set_def* %set, %struct.dataflow_set_def** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %set.addr, metadata !15296, metadata !DIExpression()), !dbg !15297
  store %struct.rtx_def* %src, %struct.rtx_def** %src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %src.addr, metadata !15298, metadata !DIExpression()), !dbg !15299
  call void @llvm.dbg.declare(metadata %union.tree_node** %decl, metadata !15300, metadata !DIExpression()), !dbg !15301
  store %union.tree_node* null, %union.tree_node** %decl, align 8, !dbg !15301
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %set_src, metadata !15302, metadata !DIExpression()), !dbg !15303
  store %struct.rtx_def* null, %struct.rtx_def** %set_src, align 8, !dbg !15303
  call void @llvm.dbg.declare(metadata %struct.variable_def** %var, metadata !15304, metadata !DIExpression()), !dbg !15305
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %nextp, metadata !15306, metadata !DIExpression()), !dbg !15307
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15308, metadata !DIExpression()), !dbg !15309
  call void @llvm.dbg.declare(metadata i8* %found, metadata !15310, metadata !DIExpression()), !dbg !15311
  %0 = load %struct.rtx_def*, %struct.rtx_def** %src.addr, align 8, !dbg !15312
  %tobool = icmp ne %struct.rtx_def* %0, null, !dbg !15312
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !15314

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** %src.addr, align 8, !dbg !15315
  %2 = bitcast %struct.rtx_def* %1 to i32*, !dbg !15315
  %bf.load = load i32, i32* %2, align 8, !dbg !15315
  %bf.clear = and i32 %bf.load, 65535, !dbg !15315
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !15315
  br i1 %cmp, label %if.then, label %if.else, !dbg !15316

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.rtx_def*, %struct.rtx_def** %src.addr, align 8, !dbg !15317
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i32 0, i32 1, !dbg !15317
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !15317
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 2, !dbg !15317
  %rt_reg = bitcast %union.rtunion_def* %arrayidx to %struct.reg_attrs**, !dbg !15317
  %4 = load %struct.reg_attrs*, %struct.reg_attrs** %rt_reg, align 8, !dbg !15317
  %cmp1 = icmp eq %struct.reg_attrs* %4, null, !dbg !15317
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !15317

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !15317

cond.false:                                       ; preds = %if.then
  %5 = load %struct.rtx_def*, %struct.rtx_def** %src.addr, align 8, !dbg !15317
  %u2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1, !dbg !15317
  %fld3 = bitcast %union.u* %u2 to [1 x %union.rtunion_def]*, !dbg !15317
  %arrayidx4 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3, i64 0, i64 2, !dbg !15317
  %rt_reg5 = bitcast %union.rtunion_def* %arrayidx4 to %struct.reg_attrs**, !dbg !15317
  %6 = load %struct.reg_attrs*, %struct.reg_attrs** %rt_reg5, align 8, !dbg !15317
  %decl6 = getelementptr inbounds %struct.reg_attrs, %struct.reg_attrs* %6, i32 0, i32 0, !dbg !15317
  %7 = load %union.tree_node*, %union.tree_node** %decl6, align 8, !dbg !15317
  br label %cond.end, !dbg !15317

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %union.tree_node* [ null, %cond.true ], [ %7, %cond.false ], !dbg !15317
  %call = call %union.tree_node* @var_debug_decl(%union.tree_node* %cond), !dbg !15318
  store %union.tree_node* %call, %union.tree_node** %decl, align 8, !dbg !15319
  br label %if.end26, !dbg !15320

if.else:                                          ; preds = %land.lhs.true, %entry
  %8 = load %struct.rtx_def*, %struct.rtx_def** %src.addr, align 8, !dbg !15321
  %tobool7 = icmp ne %struct.rtx_def* %8, null, !dbg !15321
  br i1 %tobool7, label %land.lhs.true8, label %if.end, !dbg !15323

land.lhs.true8:                                   ; preds = %if.else
  %9 = load %struct.rtx_def*, %struct.rtx_def** %src.addr, align 8, !dbg !15324
  %10 = bitcast %struct.rtx_def* %9 to i32*, !dbg !15324
  %bf.load9 = load i32, i32* %10, align 8, !dbg !15324
  %bf.clear10 = and i32 %bf.load9, 65535, !dbg !15324
  %cmp11 = icmp eq i32 %bf.clear10, 43, !dbg !15324
  br i1 %cmp11, label %if.then12, label %if.end, !dbg !15325

if.then12:                                        ; preds = %land.lhs.true8
  %11 = load %struct.rtx_def*, %struct.rtx_def** %src.addr, align 8, !dbg !15326
  %u13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1, !dbg !15326
  %fld14 = bitcast %union.u* %u13 to [1 x %union.rtunion_def]*, !dbg !15326
  %arrayidx15 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld14, i64 0, i64 1, !dbg !15326
  %rt_mem = bitcast %union.rtunion_def* %arrayidx15 to %struct.mem_attrs**, !dbg !15326
  %12 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !15326
  %cmp16 = icmp eq %struct.mem_attrs* %12, null, !dbg !15326
  br i1 %cmp16, label %cond.true17, label %cond.false18, !dbg !15326

cond.true17:                                      ; preds = %if.then12
  br label %cond.end23, !dbg !15326

cond.false18:                                     ; preds = %if.then12
  %13 = load %struct.rtx_def*, %struct.rtx_def** %src.addr, align 8, !dbg !15326
  %u19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i32 0, i32 1, !dbg !15326
  %fld20 = bitcast %union.u* %u19 to [1 x %union.rtunion_def]*, !dbg !15326
  %arrayidx21 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld20, i64 0, i64 1, !dbg !15326
  %rt_mem22 = bitcast %union.rtunion_def* %arrayidx21 to %struct.mem_attrs**, !dbg !15326
  %14 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem22, align 8, !dbg !15326
  %expr = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %14, i32 0, i32 0, !dbg !15326
  %15 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !15326
  br label %cond.end23, !dbg !15326

cond.end23:                                       ; preds = %cond.false18, %cond.true17
  %cond24 = phi %union.tree_node* [ null, %cond.true17 ], [ %15, %cond.false18 ], !dbg !15326
  %call25 = call %union.tree_node* @var_debug_decl(%union.tree_node* %cond24), !dbg !15327
  store %union.tree_node* %call25, %union.tree_node** %decl, align 8, !dbg !15328
  br label %if.end, !dbg !15329

if.end:                                           ; preds = %cond.end23, %land.lhs.true8, %if.else
  br label %if.end26

if.end26:                                         ; preds = %if.end, %cond.end
  %16 = load %struct.rtx_def*, %struct.rtx_def** %src.addr, align 8, !dbg !15330
  %tobool27 = icmp ne %struct.rtx_def* %16, null, !dbg !15330
  br i1 %tobool27, label %land.lhs.true28, label %if.end54, !dbg !15332

land.lhs.true28:                                  ; preds = %if.end26
  %17 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !15333
  %tobool29 = icmp ne %union.tree_node* %17, null, !dbg !15333
  br i1 %tobool29, label %if.then30, label %if.end54, !dbg !15334

if.then30:                                        ; preds = %land.lhs.true28
  call void @llvm.dbg.declare(metadata i8** %dv, metadata !15335, metadata !DIExpression()), !dbg !15337
  %18 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !15338
  %call31 = call i8* @dv_from_decl(%union.tree_node* %18), !dbg !15339
  store i8* %call31, i8** %dv, align 8, !dbg !15337
  %19 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !15340
  %vars = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %19, i32 0, i32 2, !dbg !15341
  %20 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars, align 8, !dbg !15341
  %21 = load i8*, i8** %dv, align 8, !dbg !15342
  %call32 = call %struct.variable_def* @shared_hash_find(%struct.shared_hash_def* %20, i8* %21), !dbg !15343
  store %struct.variable_def* %call32, %struct.variable_def** %var, align 8, !dbg !15344
  %22 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !15345
  %tobool33 = icmp ne %struct.variable_def* %22, null, !dbg !15345
  br i1 %tobool33, label %if.then34, label %if.end53, !dbg !15347

if.then34:                                        ; preds = %if.then30
  store i8 0, i8* %found, align 1, !dbg !15348
  store i32 0, i32* %i, align 4, !dbg !15350
  br label %for.cond, !dbg !15352

for.cond:                                         ; preds = %for.inc51, %if.then34
  %23 = load i32, i32* %i, align 4, !dbg !15353
  %24 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !15355
  %n_var_parts = getelementptr inbounds %struct.variable_def, %struct.variable_def* %24, i32 0, i32 2, !dbg !15356
  %25 = load i8, i8* %n_var_parts, align 4, !dbg !15356
  %conv = sext i8 %25 to i32, !dbg !15355
  %cmp35 = icmp slt i32 %23, %conv, !dbg !15357
  br i1 %cmp35, label %land.rhs, label %land.end, !dbg !15358

land.rhs:                                         ; preds = %for.cond
  %26 = load i8, i8* %found, align 1, !dbg !15359
  %tobool37 = icmp ne i8 %26, 0, !dbg !15360
  %lnot = xor i1 %tobool37, true, !dbg !15360
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %27 = phi i1 [ false, %for.cond ], [ %lnot, %land.rhs ], !dbg !15361
  br i1 %27, label %for.body, label %for.end52, !dbg !15362

for.body:                                         ; preds = %land.end
  %28 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !15363
  %var_part = getelementptr inbounds %struct.variable_def, %struct.variable_def* %28, i32 0, i32 5, !dbg !15365
  %29 = load i32, i32* %i, align 4, !dbg !15366
  %idxprom = sext i32 %29 to i64, !dbg !15363
  %arrayidx38 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part, i64 0, i64 %idxprom, !dbg !15363
  %loc_chain = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx38, i32 0, i32 0, !dbg !15367
  %30 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain, align 8, !dbg !15367
  store %struct.location_chain_def* %30, %struct.location_chain_def** %nextp, align 8, !dbg !15368
  br label %for.cond39, !dbg !15369

for.cond39:                                       ; preds = %for.inc, %for.body
  %31 = load %struct.location_chain_def*, %struct.location_chain_def** %nextp, align 8, !dbg !15370
  %tobool40 = icmp ne %struct.location_chain_def* %31, null, !dbg !15370
  br i1 %tobool40, label %land.rhs41, label %land.end44, !dbg !15372

land.rhs41:                                       ; preds = %for.cond39
  %32 = load i8, i8* %found, align 1, !dbg !15373
  %tobool42 = icmp ne i8 %32, 0, !dbg !15374
  %lnot43 = xor i1 %tobool42, true, !dbg !15374
  br label %land.end44

land.end44:                                       ; preds = %land.rhs41, %for.cond39
  %33 = phi i1 [ false, %for.cond39 ], [ %lnot43, %land.rhs41 ], !dbg !15375
  br i1 %33, label %for.body45, label %for.end, !dbg !15376

for.body45:                                       ; preds = %land.end44
  %34 = load %struct.location_chain_def*, %struct.location_chain_def** %nextp, align 8, !dbg !15377
  %loc = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %34, i32 0, i32 1, !dbg !15379
  %35 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !15379
  %36 = load %struct.rtx_def*, %struct.rtx_def** %src.addr, align 8, !dbg !15380
  %call46 = call i32 @rtx_equal_p(%struct.rtx_def* %35, %struct.rtx_def* %36), !dbg !15381
  %tobool47 = icmp ne i32 %call46, 0, !dbg !15381
  br i1 %tobool47, label %if.then48, label %if.end50, !dbg !15382

if.then48:                                        ; preds = %for.body45
  %37 = load %struct.location_chain_def*, %struct.location_chain_def** %nextp, align 8, !dbg !15383
  %set_src49 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %37, i32 0, i32 2, !dbg !15385
  %38 = load %struct.rtx_def*, %struct.rtx_def** %set_src49, align 8, !dbg !15385
  store %struct.rtx_def* %38, %struct.rtx_def** %set_src, align 8, !dbg !15386
  store i8 1, i8* %found, align 1, !dbg !15387
  br label %if.end50, !dbg !15388

if.end50:                                         ; preds = %if.then48, %for.body45
  br label %for.inc, !dbg !15389

for.inc:                                          ; preds = %if.end50
  %39 = load %struct.location_chain_def*, %struct.location_chain_def** %nextp, align 8, !dbg !15390
  %next = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %39, i32 0, i32 0, !dbg !15391
  %40 = load %struct.location_chain_def*, %struct.location_chain_def** %next, align 8, !dbg !15391
  store %struct.location_chain_def* %40, %struct.location_chain_def** %nextp, align 8, !dbg !15392
  br label %for.cond39, !dbg !15393, !llvm.loop !15394

for.end:                                          ; preds = %land.end44
  br label %for.inc51, !dbg !15395

for.inc51:                                        ; preds = %for.end
  %41 = load i32, i32* %i, align 4, !dbg !15396
  %inc = add nsw i32 %41, 1, !dbg !15396
  store i32 %inc, i32* %i, align 4, !dbg !15396
  br label %for.cond, !dbg !15397, !llvm.loop !15398

for.end52:                                        ; preds = %land.end
  br label %if.end53, !dbg !15400

if.end53:                                         ; preds = %for.end52, %if.then30
  br label %if.end54, !dbg !15401

if.end54:                                         ; preds = %if.end53, %land.lhs.true28, %if.end26
  %42 = load %struct.rtx_def*, %struct.rtx_def** %set_src, align 8, !dbg !15402
  ret %struct.rtx_def* %42, !dbg !15403
}

; Function Attrs: noinline nounwind uwtable
define internal void @var_reg_delete_and_set(%struct.dataflow_set_def* %set, %struct.rtx_def* %loc, i8 zeroext %modify, i32 %initialized, %struct.rtx_def* %set_src) #0 !dbg !15404 {
entry:
  %set.addr = alloca %struct.dataflow_set_def*, align 8
  %loc.addr = alloca %struct.rtx_def*, align 8
  %modify.addr = alloca i8, align 1
  %initialized.addr = alloca i32, align 4
  %set_src.addr = alloca %struct.rtx_def*, align 8
  %decl = alloca %union.tree_node*, align 8
  %offset = alloca i64, align 8
  %node = alloca %struct.attrs_def*, align 8
  %next = alloca %struct.attrs_def*, align 8
  %nextp = alloca %struct.attrs_def**, align 8
  store %struct.dataflow_set_def* %set, %struct.dataflow_set_def** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %set.addr, metadata !15407, metadata !DIExpression()), !dbg !15408
  store %struct.rtx_def* %loc, %struct.rtx_def** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %loc.addr, metadata !15409, metadata !DIExpression()), !dbg !15410
  store i8 %modify, i8* %modify.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %modify.addr, metadata !15411, metadata !DIExpression()), !dbg !15412
  store i32 %initialized, i32* %initialized.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %initialized.addr, metadata !15413, metadata !DIExpression()), !dbg !15414
  store %struct.rtx_def* %set_src, %struct.rtx_def** %set_src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %set_src.addr, metadata !15415, metadata !DIExpression()), !dbg !15416
  call void @llvm.dbg.declare(metadata %union.tree_node** %decl, metadata !15417, metadata !DIExpression()), !dbg !15418
  %0 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !15419
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !15419
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !15419
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 2, !dbg !15419
  %rt_reg = bitcast %union.rtunion_def* %arrayidx to %struct.reg_attrs**, !dbg !15419
  %1 = load %struct.reg_attrs*, %struct.reg_attrs** %rt_reg, align 8, !dbg !15419
  %cmp = icmp eq %struct.reg_attrs* %1, null, !dbg !15419
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !15419

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !15419

cond.false:                                       ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !15419
  %u1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1, !dbg !15419
  %fld2 = bitcast %union.u* %u1 to [1 x %union.rtunion_def]*, !dbg !15419
  %arrayidx3 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2, i64 0, i64 2, !dbg !15419
  %rt_reg4 = bitcast %union.rtunion_def* %arrayidx3 to %struct.reg_attrs**, !dbg !15419
  %3 = load %struct.reg_attrs*, %struct.reg_attrs** %rt_reg4, align 8, !dbg !15419
  %decl5 = getelementptr inbounds %struct.reg_attrs, %struct.reg_attrs* %3, i32 0, i32 0, !dbg !15419
  %4 = load %union.tree_node*, %union.tree_node** %decl5, align 8, !dbg !15419
  br label %cond.end, !dbg !15419

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %union.tree_node* [ null, %cond.true ], [ %4, %cond.false ], !dbg !15419
  store %union.tree_node* %cond, %union.tree_node** %decl, align 8, !dbg !15418
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !15420, metadata !DIExpression()), !dbg !15421
  %5 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !15422
  %u6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1, !dbg !15422
  %fld7 = bitcast %union.u* %u6 to [1 x %union.rtunion_def]*, !dbg !15422
  %arrayidx8 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld7, i64 0, i64 2, !dbg !15422
  %rt_reg9 = bitcast %union.rtunion_def* %arrayidx8 to %struct.reg_attrs**, !dbg !15422
  %6 = load %struct.reg_attrs*, %struct.reg_attrs** %rt_reg9, align 8, !dbg !15422
  %cmp10 = icmp eq %struct.reg_attrs* %6, null, !dbg !15422
  br i1 %cmp10, label %cond.true11, label %cond.false12, !dbg !15422

cond.true11:                                      ; preds = %cond.end
  br label %cond.end18, !dbg !15422

cond.false12:                                     ; preds = %cond.end
  %7 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !15422
  %u13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1, !dbg !15422
  %fld14 = bitcast %union.u* %u13 to [1 x %union.rtunion_def]*, !dbg !15422
  %arrayidx15 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld14, i64 0, i64 2, !dbg !15422
  %rt_reg16 = bitcast %union.rtunion_def* %arrayidx15 to %struct.reg_attrs**, !dbg !15422
  %8 = load %struct.reg_attrs*, %struct.reg_attrs** %rt_reg16, align 8, !dbg !15422
  %offset17 = getelementptr inbounds %struct.reg_attrs, %struct.reg_attrs* %8, i32 0, i32 1, !dbg !15422
  %9 = load i64, i64* %offset17, align 8, !dbg !15422
  br label %cond.end18, !dbg !15422

cond.end18:                                       ; preds = %cond.false12, %cond.true11
  %cond19 = phi i64 [ 0, %cond.true11 ], [ %9, %cond.false12 ], !dbg !15422
  store i64 %cond19, i64* %offset, align 8, !dbg !15421
  call void @llvm.dbg.declare(metadata %struct.attrs_def** %node, metadata !15423, metadata !DIExpression()), !dbg !15424
  call void @llvm.dbg.declare(metadata %struct.attrs_def** %next, metadata !15425, metadata !DIExpression()), !dbg !15426
  call void @llvm.dbg.declare(metadata %struct.attrs_def*** %nextp, metadata !15427, metadata !DIExpression()), !dbg !15428
  %10 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !15429
  %call = call %union.tree_node* @var_debug_decl(%union.tree_node* %10), !dbg !15430
  store %union.tree_node* %call, %union.tree_node** %decl, align 8, !dbg !15431
  %11 = load i32, i32* %initialized.addr, align 4, !dbg !15432
  %cmp20 = icmp eq i32 %11, 0, !dbg !15434
  br i1 %cmp20, label %if.then, label %if.end, !dbg !15435

if.then:                                          ; preds = %cond.end18
  %12 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !15436
  %13 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !15437
  %14 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !15438
  %call21 = call i8* @dv_from_decl(%union.tree_node* %14), !dbg !15439
  %call22 = call i32 @get_init_value(%struct.dataflow_set_def* %12, %struct.rtx_def* %13, i8* %call21), !dbg !15440
  store i32 %call22, i32* %initialized.addr, align 4, !dbg !15441
  br label %if.end, !dbg !15442

if.end:                                           ; preds = %if.then, %cond.end18
  %15 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !15443
  %regs = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %15, i32 0, i32 1, !dbg !15444
  %16 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !15445
  %call23 = call i32 @rhs_regno(%struct.rtx_def* %16), !dbg !15445
  %idxprom = zext i32 %call23 to i64, !dbg !15443
  %arrayidx24 = getelementptr inbounds [53 x %struct.attrs_def*], [53 x %struct.attrs_def*]* %regs, i64 0, i64 %idxprom, !dbg !15443
  store %struct.attrs_def** %arrayidx24, %struct.attrs_def*** %nextp, align 8, !dbg !15446
  %17 = load %struct.attrs_def**, %struct.attrs_def*** %nextp, align 8, !dbg !15447
  %18 = load %struct.attrs_def*, %struct.attrs_def** %17, align 8, !dbg !15449
  store %struct.attrs_def* %18, %struct.attrs_def** %node, align 8, !dbg !15450
  br label %for.cond, !dbg !15451

for.cond:                                         ; preds = %for.inc, %if.end
  %19 = load %struct.attrs_def*, %struct.attrs_def** %node, align 8, !dbg !15452
  %tobool = icmp ne %struct.attrs_def* %19, null, !dbg !15454
  br i1 %tobool, label %for.body, label %for.end, !dbg !15454

for.body:                                         ; preds = %for.cond
  %20 = load %struct.attrs_def*, %struct.attrs_def** %node, align 8, !dbg !15455
  %next25 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %20, i32 0, i32 0, !dbg !15457
  %21 = load %struct.attrs_def*, %struct.attrs_def** %next25, align 8, !dbg !15457
  store %struct.attrs_def* %21, %struct.attrs_def** %next, align 8, !dbg !15458
  %22 = load %struct.attrs_def*, %struct.attrs_def** %node, align 8, !dbg !15459
  %dv = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %22, i32 0, i32 2, !dbg !15461
  %23 = load i8*, i8** %dv, align 8, !dbg !15461
  %call26 = call i8* @dv_as_opaque(i8* %23), !dbg !15462
  %24 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !15463
  %25 = bitcast %union.tree_node* %24 to i8*, !dbg !15463
  %cmp27 = icmp ne i8* %call26, %25, !dbg !15464
  br i1 %cmp27, label %if.then30, label %lor.lhs.false, !dbg !15465

lor.lhs.false:                                    ; preds = %for.body
  %26 = load %struct.attrs_def*, %struct.attrs_def** %node, align 8, !dbg !15466
  %offset28 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %26, i32 0, i32 3, !dbg !15467
  %27 = load i64, i64* %offset28, align 8, !dbg !15467
  %28 = load i64, i64* %offset, align 8, !dbg !15468
  %cmp29 = icmp ne i64 %27, %28, !dbg !15469
  br i1 %cmp29, label %if.then30, label %if.else, !dbg !15470

if.then30:                                        ; preds = %lor.lhs.false, %for.body
  %29 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !15471
  %30 = load %struct.attrs_def*, %struct.attrs_def** %node, align 8, !dbg !15473
  %loc31 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %30, i32 0, i32 1, !dbg !15474
  %31 = load %struct.rtx_def*, %struct.rtx_def** %loc31, align 8, !dbg !15474
  %32 = load %struct.attrs_def*, %struct.attrs_def** %node, align 8, !dbg !15475
  %dv32 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %32, i32 0, i32 2, !dbg !15476
  %33 = load i8*, i8** %dv32, align 8, !dbg !15476
  %34 = load %struct.attrs_def*, %struct.attrs_def** %node, align 8, !dbg !15477
  %offset33 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %34, i32 0, i32 3, !dbg !15478
  %35 = load i64, i64* %offset33, align 8, !dbg !15478
  call void @delete_variable_part(%struct.dataflow_set_def* %29, %struct.rtx_def* %31, i8* %33, i64 %35), !dbg !15479
  %36 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @attrs_pool, align 8, !dbg !15480
  %37 = load %struct.attrs_def*, %struct.attrs_def** %node, align 8, !dbg !15481
  %38 = bitcast %struct.attrs_def* %37 to i8*, !dbg !15481
  call void @pool_free(%struct.alloc_pool_def* %36, i8* %38), !dbg !15482
  %39 = load %struct.attrs_def*, %struct.attrs_def** %next, align 8, !dbg !15483
  %40 = load %struct.attrs_def**, %struct.attrs_def*** %nextp, align 8, !dbg !15484
  store %struct.attrs_def* %39, %struct.attrs_def** %40, align 8, !dbg !15485
  br label %if.end36, !dbg !15486

if.else:                                          ; preds = %lor.lhs.false
  %41 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !15487
  %42 = load %struct.attrs_def*, %struct.attrs_def** %node, align 8, !dbg !15489
  %loc34 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %42, i32 0, i32 1, !dbg !15490
  store %struct.rtx_def* %41, %struct.rtx_def** %loc34, align 8, !dbg !15491
  %43 = load %struct.attrs_def*, %struct.attrs_def** %node, align 8, !dbg !15492
  %next35 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %43, i32 0, i32 0, !dbg !15493
  store %struct.attrs_def** %next35, %struct.attrs_def*** %nextp, align 8, !dbg !15494
  br label %if.end36

if.end36:                                         ; preds = %if.else, %if.then30
  br label %for.inc, !dbg !15495

for.inc:                                          ; preds = %if.end36
  %44 = load %struct.attrs_def*, %struct.attrs_def** %next, align 8, !dbg !15496
  store %struct.attrs_def* %44, %struct.attrs_def** %node, align 8, !dbg !15497
  br label %for.cond, !dbg !15498, !llvm.loop !15499

for.end:                                          ; preds = %for.cond
  %45 = load i8, i8* %modify.addr, align 1, !dbg !15501
  %tobool37 = icmp ne i8 %45, 0, !dbg !15501
  br i1 %tobool37, label %if.then38, label %if.end40, !dbg !15503

if.then38:                                        ; preds = %for.end
  %46 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !15504
  %47 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !15505
  %48 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !15506
  %call39 = call i8* @dv_from_decl(%union.tree_node* %48), !dbg !15507
  %49 = load i64, i64* %offset, align 8, !dbg !15508
  %50 = load %struct.rtx_def*, %struct.rtx_def** %set_src.addr, align 8, !dbg !15509
  call void @clobber_variable_part(%struct.dataflow_set_def* %46, %struct.rtx_def* %47, i8* %call39, i64 %49, %struct.rtx_def* %50), !dbg !15510
  br label %if.end40, !dbg !15510

if.end40:                                         ; preds = %if.then38, %for.end
  %51 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !15511
  %52 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !15512
  %53 = load i32, i32* %initialized.addr, align 4, !dbg !15513
  %54 = load %struct.rtx_def*, %struct.rtx_def** %set_src.addr, align 8, !dbg !15514
  call void @var_reg_set(%struct.dataflow_set_def* %51, %struct.rtx_def* %52, i32 %53, %struct.rtx_def* %54), !dbg !15515
  ret void, !dbg !15516
}

; Function Attrs: noinline nounwind uwtable
define internal void @var_mem_delete_and_set(%struct.dataflow_set_def* %set, %struct.rtx_def* %loc, i8 zeroext %modify, i32 %initialized, %struct.rtx_def* %set_src) #0 !dbg !15517 {
entry:
  %set.addr = alloca %struct.dataflow_set_def*, align 8
  %loc.addr = alloca %struct.rtx_def*, align 8
  %modify.addr = alloca i8, align 1
  %initialized.addr = alloca i32, align 4
  %set_src.addr = alloca %struct.rtx_def*, align 8
  %decl = alloca %union.tree_node*, align 8
  %offset = alloca i64, align 8
  store %struct.dataflow_set_def* %set, %struct.dataflow_set_def** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %set.addr, metadata !15518, metadata !DIExpression()), !dbg !15519
  store %struct.rtx_def* %loc, %struct.rtx_def** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %loc.addr, metadata !15520, metadata !DIExpression()), !dbg !15521
  store i8 %modify, i8* %modify.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %modify.addr, metadata !15522, metadata !DIExpression()), !dbg !15523
  store i32 %initialized, i32* %initialized.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %initialized.addr, metadata !15524, metadata !DIExpression()), !dbg !15525
  store %struct.rtx_def* %set_src, %struct.rtx_def** %set_src.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %set_src.addr, metadata !15526, metadata !DIExpression()), !dbg !15527
  call void @llvm.dbg.declare(metadata %union.tree_node** %decl, metadata !15528, metadata !DIExpression()), !dbg !15529
  %0 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !15530
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !15530
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !15530
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 1, !dbg !15530
  %rt_mem = bitcast %union.rtunion_def* %arrayidx to %struct.mem_attrs**, !dbg !15530
  %1 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !15530
  %cmp = icmp eq %struct.mem_attrs* %1, null, !dbg !15530
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !15530

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !15530

cond.false:                                       ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !15530
  %u1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1, !dbg !15530
  %fld2 = bitcast %union.u* %u1 to [1 x %union.rtunion_def]*, !dbg !15530
  %arrayidx3 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2, i64 0, i64 1, !dbg !15530
  %rt_mem4 = bitcast %union.rtunion_def* %arrayidx3 to %struct.mem_attrs**, !dbg !15530
  %3 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem4, align 8, !dbg !15530
  %expr = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %3, i32 0, i32 0, !dbg !15530
  %4 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !15530
  br label %cond.end, !dbg !15530

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %union.tree_node* [ null, %cond.true ], [ %4, %cond.false ], !dbg !15530
  store %union.tree_node* %cond, %union.tree_node** %decl, align 8, !dbg !15529
  call void @llvm.dbg.declare(metadata i64* %offset, metadata !15531, metadata !DIExpression()), !dbg !15532
  %5 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !15533
  %u5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1, !dbg !15533
  %fld6 = bitcast %union.u* %u5 to [1 x %union.rtunion_def]*, !dbg !15533
  %arrayidx7 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld6, i64 0, i64 1, !dbg !15533
  %rt_mem8 = bitcast %union.rtunion_def* %arrayidx7 to %struct.mem_attrs**, !dbg !15533
  %6 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem8, align 8, !dbg !15533
  %cmp9 = icmp eq %struct.mem_attrs* %6, null, !dbg !15533
  br i1 %cmp9, label %cond.true10, label %cond.false11, !dbg !15533

cond.true10:                                      ; preds = %cond.end
  br i1 false, label %cond.true17, label %cond.false34, !dbg !15533

cond.false11:                                     ; preds = %cond.end
  %7 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !15533
  %u12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1, !dbg !15533
  %fld13 = bitcast %union.u* %u12 to [1 x %union.rtunion_def]*, !dbg !15533
  %arrayidx14 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld13, i64 0, i64 1, !dbg !15533
  %rt_mem15 = bitcast %union.rtunion_def* %arrayidx14 to %struct.mem_attrs**, !dbg !15533
  %8 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem15, align 8, !dbg !15533
  %offset16 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %8, i32 0, i32 1, !dbg !15533
  %9 = load %struct.rtx_def*, %struct.rtx_def** %offset16, align 8, !dbg !15533
  %tobool = icmp ne %struct.rtx_def* %9, null, !dbg !15533
  br i1 %tobool, label %cond.true17, label %cond.false34, !dbg !15533

cond.true17:                                      ; preds = %cond.false11, %cond.true10
  %10 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !15533
  %u18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1, !dbg !15533
  %fld19 = bitcast %union.u* %u18 to [1 x %union.rtunion_def]*, !dbg !15533
  %arrayidx20 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld19, i64 0, i64 1, !dbg !15533
  %rt_mem21 = bitcast %union.rtunion_def* %arrayidx20 to %struct.mem_attrs**, !dbg !15533
  %11 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem21, align 8, !dbg !15533
  %cmp22 = icmp eq %struct.mem_attrs* %11, null, !dbg !15533
  br i1 %cmp22, label %cond.true23, label %cond.false24, !dbg !15533

cond.true23:                                      ; preds = %cond.true17
  br label %cond.end30, !dbg !15533

cond.false24:                                     ; preds = %cond.true17
  %12 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !15533
  %u25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1, !dbg !15533
  %fld26 = bitcast %union.u* %u25 to [1 x %union.rtunion_def]*, !dbg !15533
  %arrayidx27 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld26, i64 0, i64 1, !dbg !15533
  %rt_mem28 = bitcast %union.rtunion_def* %arrayidx27 to %struct.mem_attrs**, !dbg !15533
  %13 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem28, align 8, !dbg !15533
  %offset29 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %13, i32 0, i32 1, !dbg !15533
  %14 = load %struct.rtx_def*, %struct.rtx_def** %offset29, align 8, !dbg !15533
  br label %cond.end30, !dbg !15533

cond.end30:                                       ; preds = %cond.false24, %cond.true23
  %cond31 = phi %struct.rtx_def* [ null, %cond.true23 ], [ %14, %cond.false24 ], !dbg !15533
  %u32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %cond31, i32 0, i32 1, !dbg !15533
  %hwint = bitcast %union.u* %u32 to [1 x i64]*, !dbg !15533
  %arrayidx33 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 0, !dbg !15533
  %15 = load i64, i64* %arrayidx33, align 8, !dbg !15533
  br label %cond.end35, !dbg !15533

cond.false34:                                     ; preds = %cond.false11, %cond.true10
  br label %cond.end35, !dbg !15533

cond.end35:                                       ; preds = %cond.false34, %cond.end30
  %cond36 = phi i64 [ %15, %cond.end30 ], [ 0, %cond.false34 ], !dbg !15533
  store i64 %cond36, i64* %offset, align 8, !dbg !15532
  %16 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !15534
  %call = call %union.tree_node* @var_debug_decl(%union.tree_node* %16), !dbg !15535
  store %union.tree_node* %call, %union.tree_node** %decl, align 8, !dbg !15536
  %17 = load i32, i32* %initialized.addr, align 4, !dbg !15537
  %cmp37 = icmp eq i32 %17, 0, !dbg !15539
  br i1 %cmp37, label %if.then, label %if.end, !dbg !15540

if.then:                                          ; preds = %cond.end35
  %18 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !15541
  %19 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !15542
  %20 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !15543
  %call38 = call i8* @dv_from_decl(%union.tree_node* %20), !dbg !15544
  %call39 = call i32 @get_init_value(%struct.dataflow_set_def* %18, %struct.rtx_def* %19, i8* %call38), !dbg !15545
  store i32 %call39, i32* %initialized.addr, align 4, !dbg !15546
  br label %if.end, !dbg !15547

if.end:                                           ; preds = %if.then, %cond.end35
  %21 = load i8, i8* %modify.addr, align 1, !dbg !15548
  %tobool40 = icmp ne i8 %21, 0, !dbg !15548
  br i1 %tobool40, label %if.then41, label %if.end43, !dbg !15550

if.then41:                                        ; preds = %if.end
  %22 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !15551
  %23 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !15552
  %call42 = call i8* @dv_from_decl(%union.tree_node* %23), !dbg !15553
  %24 = load i64, i64* %offset, align 8, !dbg !15554
  %25 = load %struct.rtx_def*, %struct.rtx_def** %set_src.addr, align 8, !dbg !15555
  call void @clobber_variable_part(%struct.dataflow_set_def* %22, %struct.rtx_def* null, i8* %call42, i64 %24, %struct.rtx_def* %25), !dbg !15556
  br label %if.end43, !dbg !15556

if.end43:                                         ; preds = %if.then41, %if.end
  %26 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !15557
  %27 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !15558
  %28 = load i32, i32* %initialized.addr, align 4, !dbg !15559
  %29 = load %struct.rtx_def*, %struct.rtx_def** %set_src.addr, align 8, !dbg !15560
  call void @var_mem_set(%struct.dataflow_set_def* %26, %struct.rtx_def* %27, i32 %28, %struct.rtx_def* %29), !dbg !15561
  ret void, !dbg !15562
}

; Function Attrs: noinline nounwind uwtable
define internal void @var_regno_delete(%struct.dataflow_set_def* %set, i32 %regno) #0 !dbg !15563 {
entry:
  %set.addr = alloca %struct.dataflow_set_def*, align 8
  %regno.addr = alloca i32, align 4
  %reg = alloca %struct.attrs_def**, align 8
  %node = alloca %struct.attrs_def*, align 8
  %next = alloca %struct.attrs_def*, align 8
  store %struct.dataflow_set_def* %set, %struct.dataflow_set_def** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %set.addr, metadata !15566, metadata !DIExpression()), !dbg !15567
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !15568, metadata !DIExpression()), !dbg !15569
  call void @llvm.dbg.declare(metadata %struct.attrs_def*** %reg, metadata !15570, metadata !DIExpression()), !dbg !15571
  %0 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !15572
  %regs = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %0, i32 0, i32 1, !dbg !15573
  %1 = load i32, i32* %regno.addr, align 4, !dbg !15574
  %idxprom = sext i32 %1 to i64, !dbg !15572
  %arrayidx = getelementptr inbounds [53 x %struct.attrs_def*], [53 x %struct.attrs_def*]* %regs, i64 0, i64 %idxprom, !dbg !15572
  store %struct.attrs_def** %arrayidx, %struct.attrs_def*** %reg, align 8, !dbg !15571
  call void @llvm.dbg.declare(metadata %struct.attrs_def** %node, metadata !15575, metadata !DIExpression()), !dbg !15576
  call void @llvm.dbg.declare(metadata %struct.attrs_def** %next, metadata !15577, metadata !DIExpression()), !dbg !15578
  %2 = load %struct.attrs_def**, %struct.attrs_def*** %reg, align 8, !dbg !15579
  %3 = load %struct.attrs_def*, %struct.attrs_def** %2, align 8, !dbg !15581
  store %struct.attrs_def* %3, %struct.attrs_def** %node, align 8, !dbg !15582
  br label %for.cond, !dbg !15583

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.attrs_def*, %struct.attrs_def** %node, align 8, !dbg !15584
  %tobool = icmp ne %struct.attrs_def* %4, null, !dbg !15586
  br i1 %tobool, label %for.body, label %for.end, !dbg !15586

for.body:                                         ; preds = %for.cond
  %5 = load %struct.attrs_def*, %struct.attrs_def** %node, align 8, !dbg !15587
  %next1 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %5, i32 0, i32 0, !dbg !15589
  %6 = load %struct.attrs_def*, %struct.attrs_def** %next1, align 8, !dbg !15589
  store %struct.attrs_def* %6, %struct.attrs_def** %next, align 8, !dbg !15590
  %7 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !15591
  %8 = load %struct.attrs_def*, %struct.attrs_def** %node, align 8, !dbg !15592
  %loc = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %8, i32 0, i32 1, !dbg !15593
  %9 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !15593
  %10 = load %struct.attrs_def*, %struct.attrs_def** %node, align 8, !dbg !15594
  %dv = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %10, i32 0, i32 2, !dbg !15595
  %11 = load i8*, i8** %dv, align 8, !dbg !15595
  %12 = load %struct.attrs_def*, %struct.attrs_def** %node, align 8, !dbg !15596
  %offset = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %12, i32 0, i32 3, !dbg !15597
  %13 = load i64, i64* %offset, align 8, !dbg !15597
  call void @delete_variable_part(%struct.dataflow_set_def* %7, %struct.rtx_def* %9, i8* %11, i64 %13), !dbg !15598
  %14 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @attrs_pool, align 8, !dbg !15599
  %15 = load %struct.attrs_def*, %struct.attrs_def** %node, align 8, !dbg !15600
  %16 = bitcast %struct.attrs_def* %15 to i8*, !dbg !15600
  call void @pool_free(%struct.alloc_pool_def* %14, i8* %16), !dbg !15601
  br label %for.inc, !dbg !15602

for.inc:                                          ; preds = %for.body
  %17 = load %struct.attrs_def*, %struct.attrs_def** %next, align 8, !dbg !15603
  store %struct.attrs_def* %17, %struct.attrs_def** %node, align 8, !dbg !15604
  br label %for.cond, !dbg !15605, !llvm.loop !15606

for.end:                                          ; preds = %for.cond
  %18 = load %struct.attrs_def**, %struct.attrs_def*** %reg, align 8, !dbg !15608
  store %struct.attrs_def* null, %struct.attrs_def** %18, align 8, !dbg !15609
  ret void, !dbg !15610
}

; Function Attrs: noinline nounwind uwtable
define internal void @dataflow_set_equiv_regs(%struct.dataflow_set_def* %set) #0 !dbg !15611 {
entry:
  %set.addr = alloca %struct.dataflow_set_def*, align 8
  %i = alloca i32, align 4
  %list = alloca %struct.attrs_def*, align 8
  %listp = alloca %struct.attrs_def**, align 8
  %canon = alloca [87 x %struct.rtx_def*], align 16
  %val = alloca %struct.rtx_def*, align 8
  %cvalp = alloca %struct.rtx_def**, align 8
  %cval = alloca %struct.rtx_def*, align 8
  %cval28 = alloca %struct.rtx_def*, align 8
  %val41 = alloca %struct.rtx_def*, align 8
  %cval75 = alloca %struct.rtx_def*, align 8
  %slot = alloca i8**, align 8
  %val89 = alloca %struct.rtx_def*, align 8
  store %struct.dataflow_set_def* %set, %struct.dataflow_set_def** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %set.addr, metadata !15612, metadata !DIExpression()), !dbg !15613
  call void @llvm.dbg.declare(metadata i32* %i, metadata !15614, metadata !DIExpression()), !dbg !15615
  call void @llvm.dbg.declare(metadata %struct.attrs_def** %list, metadata !15616, metadata !DIExpression()), !dbg !15617
  call void @llvm.dbg.declare(metadata %struct.attrs_def*** %listp, metadata !15618, metadata !DIExpression()), !dbg !15619
  store i32 0, i32* %i, align 4, !dbg !15620
  br label %for.cond, !dbg !15622

for.cond:                                         ; preds = %for.inc111, %entry
  %0 = load i32, i32* %i, align 4, !dbg !15623
  %cmp = icmp slt i32 %0, 53, !dbg !15625
  br i1 %cmp, label %for.body, label %for.end112, !dbg !15626

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata [87 x %struct.rtx_def*]* %canon, metadata !15627, metadata !DIExpression()), !dbg !15632
  %arraydecay = getelementptr inbounds [87 x %struct.rtx_def*], [87 x %struct.rtx_def*]* %canon, i64 0, i64 0, !dbg !15633
  %1 = bitcast %struct.rtx_def** %arraydecay to i8*, !dbg !15633
  call void @llvm.memset.p0i8.i64(i8* align 16 %1, i8 0, i64 696, i1 false), !dbg !15633
  %2 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !15634
  %regs = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %2, i32 0, i32 1, !dbg !15636
  %3 = load i32, i32* %i, align 4, !dbg !15637
  %idxprom = sext i32 %3 to i64, !dbg !15634
  %arrayidx = getelementptr inbounds [53 x %struct.attrs_def*], [53 x %struct.attrs_def*]* %regs, i64 0, i64 %idxprom, !dbg !15634
  %4 = load %struct.attrs_def*, %struct.attrs_def** %arrayidx, align 8, !dbg !15634
  store %struct.attrs_def* %4, %struct.attrs_def** %list, align 8, !dbg !15638
  br label %for.cond1, !dbg !15639

for.cond1:                                        ; preds = %for.inc, %for.body
  %5 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !15640
  %tobool = icmp ne %struct.attrs_def* %5, null, !dbg !15642
  br i1 %tobool, label %for.body2, label %for.end, !dbg !15642

for.body2:                                        ; preds = %for.cond1
  %6 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !15643
  %offset = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %6, i32 0, i32 3, !dbg !15645
  %7 = load i64, i64* %offset, align 8, !dbg !15645
  %cmp3 = icmp eq i64 %7, 0, !dbg !15646
  br i1 %cmp3, label %land.lhs.true, label %if.end12, !dbg !15647

land.lhs.true:                                    ; preds = %for.body2
  %8 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !15648
  %dv = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %8, i32 0, i32 2, !dbg !15649
  %9 = load i8*, i8** %dv, align 8, !dbg !15649
  %call = call zeroext i8 @dv_is_value_p(i8* %9), !dbg !15650
  %conv = zext i8 %call to i32, !dbg !15650
  %tobool4 = icmp ne i32 %conv, 0, !dbg !15650
  br i1 %tobool4, label %if.then, label %if.end12, !dbg !15651

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %val, metadata !15652, metadata !DIExpression()), !dbg !15654
  %10 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !15655
  %dv5 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %10, i32 0, i32 2, !dbg !15656
  %11 = load i8*, i8** %dv5, align 8, !dbg !15656
  %call6 = call %struct.rtx_def* @dv_as_value(i8* %11), !dbg !15657
  store %struct.rtx_def* %call6, %struct.rtx_def** %val, align 8, !dbg !15654
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %cvalp, metadata !15658, metadata !DIExpression()), !dbg !15659
  %12 = load %struct.rtx_def*, %struct.rtx_def** %val, align 8, !dbg !15660
  %13 = bitcast %struct.rtx_def* %12 to i32*, !dbg !15660
  %bf.load = load i32, i32* %13, align 8, !dbg !15660
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !15660
  %bf.clear = and i32 %bf.lshr, 255, !dbg !15660
  %idxprom7 = sext i32 %bf.clear to i64, !dbg !15661
  %arrayidx8 = getelementptr inbounds [87 x %struct.rtx_def*], [87 x %struct.rtx_def*]* %canon, i64 0, i64 %idxprom7, !dbg !15661
  store %struct.rtx_def** %arrayidx8, %struct.rtx_def*** %cvalp, align 8, !dbg !15659
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %cval, metadata !15662, metadata !DIExpression()), !dbg !15663
  %14 = load %struct.rtx_def**, %struct.rtx_def*** %cvalp, align 8, !dbg !15664
  %15 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8, !dbg !15665
  store %struct.rtx_def* %15, %struct.rtx_def** %cval, align 8, !dbg !15663
  %16 = load %struct.rtx_def*, %struct.rtx_def** %val, align 8, !dbg !15666
  %17 = load %struct.rtx_def*, %struct.rtx_def** %cval, align 8, !dbg !15668
  %call9 = call zeroext i8 @canon_value_cmp(%struct.rtx_def* %16, %struct.rtx_def* %17), !dbg !15669
  %tobool10 = icmp ne i8 %call9, 0, !dbg !15669
  br i1 %tobool10, label %if.then11, label %if.end, !dbg !15670

if.then11:                                        ; preds = %if.then
  %18 = load %struct.rtx_def*, %struct.rtx_def** %val, align 8, !dbg !15671
  %19 = load %struct.rtx_def**, %struct.rtx_def*** %cvalp, align 8, !dbg !15672
  store %struct.rtx_def* %18, %struct.rtx_def** %19, align 8, !dbg !15673
  br label %if.end, !dbg !15674

if.end:                                           ; preds = %if.then11, %if.then
  br label %if.end12, !dbg !15675

if.end12:                                         ; preds = %if.end, %land.lhs.true, %for.body2
  br label %for.inc, !dbg !15676

for.inc:                                          ; preds = %if.end12
  %20 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !15677
  %next = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %20, i32 0, i32 0, !dbg !15678
  %21 = load %struct.attrs_def*, %struct.attrs_def** %next, align 8, !dbg !15678
  store %struct.attrs_def* %21, %struct.attrs_def** %list, align 8, !dbg !15679
  br label %for.cond1, !dbg !15680, !llvm.loop !15681

for.end:                                          ; preds = %for.cond1
  %22 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !15683
  %regs13 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %22, i32 0, i32 1, !dbg !15685
  %23 = load i32, i32* %i, align 4, !dbg !15686
  %idxprom14 = sext i32 %23 to i64, !dbg !15683
  %arrayidx15 = getelementptr inbounds [53 x %struct.attrs_def*], [53 x %struct.attrs_def*]* %regs13, i64 0, i64 %idxprom14, !dbg !15683
  %24 = load %struct.attrs_def*, %struct.attrs_def** %arrayidx15, align 8, !dbg !15683
  store %struct.attrs_def* %24, %struct.attrs_def** %list, align 8, !dbg !15687
  br label %for.cond16, !dbg !15688

for.cond16:                                       ; preds = %for.inc57, %for.end
  %25 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !15689
  %tobool17 = icmp ne %struct.attrs_def* %25, null, !dbg !15691
  br i1 %tobool17, label %for.body18, label %for.end59, !dbg !15691

for.body18:                                       ; preds = %for.cond16
  %26 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !15692
  %offset19 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %26, i32 0, i32 3, !dbg !15694
  %27 = load i64, i64* %offset19, align 8, !dbg !15694
  %cmp20 = icmp eq i64 %27, 0, !dbg !15695
  br i1 %cmp20, label %land.lhs.true22, label %if.end56, !dbg !15696

land.lhs.true22:                                  ; preds = %for.body18
  %28 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !15697
  %dv23 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %28, i32 0, i32 2, !dbg !15698
  %29 = load i8*, i8** %dv23, align 8, !dbg !15698
  %call24 = call zeroext i8 @dv_onepart_p(i8* %29), !dbg !15699
  %conv25 = zext i8 %call24 to i32, !dbg !15699
  %tobool26 = icmp ne i32 %conv25, 0, !dbg !15699
  br i1 %tobool26, label %if.then27, label %if.end56, !dbg !15700

if.then27:                                        ; preds = %land.lhs.true22
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %cval28, metadata !15701, metadata !DIExpression()), !dbg !15703
  %30 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !15704
  %loc = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %30, i32 0, i32 1, !dbg !15704
  %31 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !15704
  %32 = bitcast %struct.rtx_def* %31 to i32*, !dbg !15704
  %bf.load29 = load i32, i32* %32, align 8, !dbg !15704
  %bf.lshr30 = lshr i32 %bf.load29, 16, !dbg !15704
  %bf.clear31 = and i32 %bf.lshr30, 255, !dbg !15704
  %idxprom32 = sext i32 %bf.clear31 to i64, !dbg !15705
  %arrayidx33 = getelementptr inbounds [87 x %struct.rtx_def*], [87 x %struct.rtx_def*]* %canon, i64 0, i64 %idxprom32, !dbg !15705
  %33 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx33, align 8, !dbg !15705
  store %struct.rtx_def* %33, %struct.rtx_def** %cval28, align 8, !dbg !15703
  %34 = load %struct.rtx_def*, %struct.rtx_def** %cval28, align 8, !dbg !15706
  %tobool34 = icmp ne %struct.rtx_def* %34, null, !dbg !15706
  br i1 %tobool34, label %if.end36, label %if.then35, !dbg !15708

if.then35:                                        ; preds = %if.then27
  br label %for.inc57, !dbg !15709

if.end36:                                         ; preds = %if.then27
  %35 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !15710
  %dv37 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %35, i32 0, i32 2, !dbg !15712
  %36 = load i8*, i8** %dv37, align 8, !dbg !15712
  %call38 = call zeroext i8 @dv_is_value_p(i8* %36), !dbg !15713
  %tobool39 = icmp ne i8 %call38, 0, !dbg !15713
  br i1 %tobool39, label %if.then40, label %if.end51, !dbg !15714

if.then40:                                        ; preds = %if.end36
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %val41, metadata !15715, metadata !DIExpression()), !dbg !15717
  %37 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !15718
  %dv42 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %37, i32 0, i32 2, !dbg !15719
  %38 = load i8*, i8** %dv42, align 8, !dbg !15719
  %call43 = call %struct.rtx_def* @dv_as_value(i8* %38), !dbg !15720
  store %struct.rtx_def* %call43, %struct.rtx_def** %val41, align 8, !dbg !15717
  %39 = load %struct.rtx_def*, %struct.rtx_def** %val41, align 8, !dbg !15721
  %40 = load %struct.rtx_def*, %struct.rtx_def** %cval28, align 8, !dbg !15723
  %cmp44 = icmp eq %struct.rtx_def* %39, %40, !dbg !15724
  br i1 %cmp44, label %if.then46, label %if.end47, !dbg !15725

if.then46:                                        ; preds = %if.then40
  br label %for.inc57, !dbg !15726

if.end47:                                         ; preds = %if.then40
  %41 = load %struct.rtx_def*, %struct.rtx_def** %val41, align 8, !dbg !15727
  %42 = bitcast %struct.rtx_def* %41 to i32*, !dbg !15727
  %bf.load48 = load i32, i32* %42, align 8, !dbg !15728
  %bf.clear49 = and i32 %bf.load48, -536870913, !dbg !15728
  %bf.set = or i32 %bf.clear49, 536870912, !dbg !15728
  store i32 %bf.set, i32* %42, align 8, !dbg !15728
  %43 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !15729
  %44 = load %struct.rtx_def*, %struct.rtx_def** %val41, align 8, !dbg !15730
  %45 = load %struct.rtx_def*, %struct.rtx_def** %cval28, align 8, !dbg !15731
  %call50 = call i8* @dv_from_value(%struct.rtx_def* %45), !dbg !15732
  call void @set_variable_part(%struct.dataflow_set_def* %43, %struct.rtx_def* %44, i8* %call50, i64 0, i32 2, %struct.rtx_def* null, i32 0), !dbg !15733
  br label %if.end51, !dbg !15734

if.end51:                                         ; preds = %if.end47, %if.end36
  %46 = load %struct.rtx_def*, %struct.rtx_def** %cval28, align 8, !dbg !15735
  %47 = bitcast %struct.rtx_def* %46 to i32*, !dbg !15735
  %bf.load52 = load i32, i32* %47, align 8, !dbg !15736
  %bf.clear53 = and i32 %bf.load52, -536870913, !dbg !15736
  %bf.set54 = or i32 %bf.clear53, 536870912, !dbg !15736
  store i32 %bf.set54, i32* %47, align 8, !dbg !15736
  %48 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !15737
  %49 = load %struct.rtx_def*, %struct.rtx_def** %cval28, align 8, !dbg !15738
  %50 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !15739
  %dv55 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %50, i32 0, i32 2, !dbg !15740
  %51 = load i8*, i8** %dv55, align 8, !dbg !15740
  call void @set_variable_part(%struct.dataflow_set_def* %48, %struct.rtx_def* %49, i8* %51, i64 0, i32 2, %struct.rtx_def* null, i32 0), !dbg !15741
  br label %if.end56, !dbg !15742

if.end56:                                         ; preds = %if.end51, %land.lhs.true22, %for.body18
  br label %for.inc57, !dbg !15743

for.inc57:                                        ; preds = %if.end56, %if.then46, %if.then35
  %52 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !15744
  %next58 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %52, i32 0, i32 0, !dbg !15745
  %53 = load %struct.attrs_def*, %struct.attrs_def** %next58, align 8, !dbg !15745
  store %struct.attrs_def* %53, %struct.attrs_def** %list, align 8, !dbg !15746
  br label %for.cond16, !dbg !15747, !llvm.loop !15748

for.end59:                                        ; preds = %for.cond16
  %54 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !15750
  %regs60 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %54, i32 0, i32 1, !dbg !15752
  %55 = load i32, i32* %i, align 4, !dbg !15753
  %idxprom61 = sext i32 %55 to i64, !dbg !15750
  %arrayidx62 = getelementptr inbounds [53 x %struct.attrs_def*], [53 x %struct.attrs_def*]* %regs60, i64 0, i64 %idxprom61, !dbg !15750
  store %struct.attrs_def** %arrayidx62, %struct.attrs_def*** %listp, align 8, !dbg !15754
  br label %for.cond63, !dbg !15755

for.cond63:                                       ; preds = %cond.end, %for.end59
  %56 = load %struct.attrs_def**, %struct.attrs_def*** %listp, align 8, !dbg !15756
  %57 = load %struct.attrs_def*, %struct.attrs_def** %56, align 8, !dbg !15758
  store %struct.attrs_def* %57, %struct.attrs_def** %list, align 8, !dbg !15759
  %tobool64 = icmp ne %struct.attrs_def* %57, null, !dbg !15760
  br i1 %tobool64, label %for.body65, label %for.end110, !dbg !15760

for.body65:                                       ; preds = %for.cond63
  %58 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !15761
  %offset66 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %58, i32 0, i32 3, !dbg !15763
  %59 = load i64, i64* %offset66, align 8, !dbg !15763
  %cmp67 = icmp eq i64 %59, 0, !dbg !15764
  br i1 %cmp67, label %land.lhs.true69, label %if.end106, !dbg !15765

land.lhs.true69:                                  ; preds = %for.body65
  %60 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !15766
  %dv70 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %60, i32 0, i32 2, !dbg !15767
  %61 = load i8*, i8** %dv70, align 8, !dbg !15767
  %call71 = call zeroext i8 @dv_onepart_p(i8* %61), !dbg !15768
  %conv72 = zext i8 %call71 to i32, !dbg !15768
  %tobool73 = icmp ne i32 %conv72, 0, !dbg !15768
  br i1 %tobool73, label %if.then74, label %if.end106, !dbg !15769

if.then74:                                        ; preds = %land.lhs.true69
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %cval75, metadata !15770, metadata !DIExpression()), !dbg !15772
  %62 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !15773
  %loc76 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %62, i32 0, i32 1, !dbg !15773
  %63 = load %struct.rtx_def*, %struct.rtx_def** %loc76, align 8, !dbg !15773
  %64 = bitcast %struct.rtx_def* %63 to i32*, !dbg !15773
  %bf.load77 = load i32, i32* %64, align 8, !dbg !15773
  %bf.lshr78 = lshr i32 %bf.load77, 16, !dbg !15773
  %bf.clear79 = and i32 %bf.lshr78, 255, !dbg !15773
  %idxprom80 = sext i32 %bf.clear79 to i64, !dbg !15774
  %arrayidx81 = getelementptr inbounds [87 x %struct.rtx_def*], [87 x %struct.rtx_def*]* %canon, i64 0, i64 %idxprom80, !dbg !15774
  %65 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx81, align 8, !dbg !15774
  store %struct.rtx_def* %65, %struct.rtx_def** %cval75, align 8, !dbg !15772
  call void @llvm.dbg.declare(metadata i8*** %slot, metadata !15775, metadata !DIExpression()), !dbg !15776
  %66 = load %struct.rtx_def*, %struct.rtx_def** %cval75, align 8, !dbg !15777
  %tobool82 = icmp ne %struct.rtx_def* %66, null, !dbg !15777
  br i1 %tobool82, label %if.end84, label %if.then83, !dbg !15779

if.then83:                                        ; preds = %if.then74
  br label %for.inc107, !dbg !15780

if.end84:                                         ; preds = %if.then74
  %67 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !15781
  %dv85 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %67, i32 0, i32 2, !dbg !15783
  %68 = load i8*, i8** %dv85, align 8, !dbg !15783
  %call86 = call zeroext i8 @dv_is_value_p(i8* %68), !dbg !15784
  %tobool87 = icmp ne i8 %call86, 0, !dbg !15784
  br i1 %tobool87, label %if.then88, label %if.end98, !dbg !15785

if.then88:                                        ; preds = %if.end84
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %val89, metadata !15786, metadata !DIExpression()), !dbg !15788
  %69 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !15789
  %dv90 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %69, i32 0, i32 2, !dbg !15790
  %70 = load i8*, i8** %dv90, align 8, !dbg !15790
  %call91 = call %struct.rtx_def* @dv_as_value(i8* %70), !dbg !15791
  store %struct.rtx_def* %call91, %struct.rtx_def** %val89, align 8, !dbg !15788
  %71 = load %struct.rtx_def*, %struct.rtx_def** %val89, align 8, !dbg !15792
  %72 = bitcast %struct.rtx_def* %71 to i32*, !dbg !15792
  %bf.load92 = load i32, i32* %72, align 8, !dbg !15792
  %bf.lshr93 = lshr i32 %bf.load92, 29, !dbg !15792
  %bf.clear94 = and i32 %bf.lshr93, 1, !dbg !15792
  %tobool95 = icmp ne i32 %bf.clear94, 0, !dbg !15792
  br i1 %tobool95, label %if.end97, label %if.then96, !dbg !15794

if.then96:                                        ; preds = %if.then88
  br label %for.inc107, !dbg !15795

if.end97:                                         ; preds = %if.then88
  br label %if.end98, !dbg !15796

if.end98:                                         ; preds = %if.end97, %if.end84
  %73 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !15797
  %vars = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %73, i32 0, i32 2, !dbg !15798
  %74 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars, align 8, !dbg !15798
  %75 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !15799
  %dv99 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %75, i32 0, i32 2, !dbg !15800
  %76 = load i8*, i8** %dv99, align 8, !dbg !15800
  %call100 = call i8** @shared_hash_find_slot_noinsert(%struct.shared_hash_def* %74, i8* %76), !dbg !15801
  store i8** %call100, i8*** %slot, align 8, !dbg !15802
  %77 = load i8**, i8*** %slot, align 8, !dbg !15803
  %78 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !15804
  %79 = bitcast %struct.dataflow_set_def* %78 to i8*, !dbg !15804
  %call101 = call i32 @canonicalize_values_star(i8** %77, i8* %79), !dbg !15805
  %80 = load %struct.attrs_def**, %struct.attrs_def*** %listp, align 8, !dbg !15806
  %81 = load %struct.attrs_def*, %struct.attrs_def** %80, align 8, !dbg !15808
  %82 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !15809
  %cmp102 = icmp ne %struct.attrs_def* %81, %82, !dbg !15810
  br i1 %cmp102, label %if.then104, label %if.end105, !dbg !15811

if.then104:                                       ; preds = %if.end98
  store %struct.attrs_def* null, %struct.attrs_def** %list, align 8, !dbg !15812
  br label %if.end105, !dbg !15813

if.end105:                                        ; preds = %if.then104, %if.end98
  br label %if.end106, !dbg !15814

if.end106:                                        ; preds = %if.end105, %land.lhs.true69, %for.body65
  br label %for.inc107, !dbg !15815

for.inc107:                                       ; preds = %if.end106, %if.then96, %if.then83
  %83 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !15816
  %tobool108 = icmp ne %struct.attrs_def* %83, null, !dbg !15816
  br i1 %tobool108, label %cond.true, label %cond.false, !dbg !15816

cond.true:                                        ; preds = %for.inc107
  %84 = load %struct.attrs_def*, %struct.attrs_def** %list, align 8, !dbg !15817
  %next109 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %84, i32 0, i32 0, !dbg !15818
  br label %cond.end, !dbg !15816

cond.false:                                       ; preds = %for.inc107
  %85 = load %struct.attrs_def**, %struct.attrs_def*** %listp, align 8, !dbg !15819
  br label %cond.end, !dbg !15816

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.attrs_def** [ %next109, %cond.true ], [ %85, %cond.false ], !dbg !15816
  store %struct.attrs_def** %cond, %struct.attrs_def*** %listp, align 8, !dbg !15820
  br label %for.cond63, !dbg !15821, !llvm.loop !15822

for.end110:                                       ; preds = %for.cond63
  br label %for.inc111, !dbg !15824

for.inc111:                                       ; preds = %for.end110
  %86 = load i32, i32* %i, align 4, !dbg !15825
  %inc = add nsw i32 %86, 1, !dbg !15825
  store i32 %inc, i32* %i, align 4, !dbg !15825
  br label %for.cond, !dbg !15826, !llvm.loop !15827

for.end112:                                       ; preds = %for.cond
  ret void, !dbg !15829
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @canonicalize_values_mark(i8** %slot, i8* %data) #0 !dbg !15830 {
entry:
  %retval = alloca i32, align 4
  %slot.addr = alloca i8**, align 8
  %data.addr = alloca i8*, align 8
  %set = alloca %struct.dataflow_set_def*, align 8
  %var = alloca %struct.variable_def*, align 8
  %dv = alloca i8*, align 8
  %val = alloca %struct.rtx_def*, align 8
  %node = alloca %struct.location_chain_def*, align 8
  %odv = alloca i8*, align 8
  %oslot = alloca i8**, align 8
  store i8** %slot, i8*** %slot.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %slot.addr, metadata !15831, metadata !DIExpression()), !dbg !15832
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !15833, metadata !DIExpression()), !dbg !15834
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %set, metadata !15835, metadata !DIExpression()), !dbg !15836
  %0 = load i8*, i8** %data.addr, align 8, !dbg !15837
  %1 = bitcast i8* %0 to %struct.dataflow_set_def*, !dbg !15838
  store %struct.dataflow_set_def* %1, %struct.dataflow_set_def** %set, align 8, !dbg !15836
  call void @llvm.dbg.declare(metadata %struct.variable_def** %var, metadata !15839, metadata !DIExpression()), !dbg !15840
  %2 = load i8**, i8*** %slot.addr, align 8, !dbg !15841
  %3 = load i8*, i8** %2, align 8, !dbg !15842
  %4 = bitcast i8* %3 to %struct.variable_def*, !dbg !15843
  store %struct.variable_def* %4, %struct.variable_def** %var, align 8, !dbg !15840
  call void @llvm.dbg.declare(metadata i8** %dv, metadata !15844, metadata !DIExpression()), !dbg !15845
  %5 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !15846
  %dv1 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %5, i32 0, i32 0, !dbg !15847
  %6 = load i8*, i8** %dv1, align 8, !dbg !15847
  store i8* %6, i8** %dv, align 8, !dbg !15845
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %val, metadata !15848, metadata !DIExpression()), !dbg !15849
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %node, metadata !15850, metadata !DIExpression()), !dbg !15851
  %7 = load i8*, i8** %dv, align 8, !dbg !15852
  %call = call zeroext i8 @dv_is_value_p(i8* %7), !dbg !15854
  %tobool = icmp ne i8 %call, 0, !dbg !15854
  br i1 %tobool, label %if.end, label %if.then, !dbg !15855

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !15856
  br label %return, !dbg !15856

if.end:                                           ; preds = %entry
  %8 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !15857
  %n_var_parts = getelementptr inbounds %struct.variable_def, %struct.variable_def* %8, i32 0, i32 2, !dbg !15857
  %9 = load i8, i8* %n_var_parts, align 4, !dbg !15857
  %conv = sext i8 %9 to i32, !dbg !15857
  %cmp = icmp eq i32 %conv, 1, !dbg !15857
  br i1 %cmp, label %cond.false, label %cond.true, !dbg !15857

cond.true:                                        ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 3025, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !15857
  br label %cond.end, !dbg !15857

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !15857

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !15857
  %10 = load i8*, i8** %dv, align 8, !dbg !15858
  %call3 = call %struct.rtx_def* @dv_as_value(i8* %10), !dbg !15859
  store %struct.rtx_def* %call3, %struct.rtx_def** %val, align 8, !dbg !15860
  %11 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !15861
  %var_part = getelementptr inbounds %struct.variable_def, %struct.variable_def* %11, i32 0, i32 5, !dbg !15863
  %arrayidx = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part, i64 0, i64 0, !dbg !15861
  %loc_chain = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx, i32 0, i32 0, !dbg !15864
  %12 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain, align 8, !dbg !15864
  store %struct.location_chain_def* %12, %struct.location_chain_def** %node, align 8, !dbg !15865
  br label %for.cond, !dbg !15866

for.cond:                                         ; preds = %for.inc, %cond.end
  %13 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !15867
  %tobool4 = icmp ne %struct.location_chain_def* %13, null, !dbg !15869
  br i1 %tobool4, label %for.body, label %for.end, !dbg !15869

for.body:                                         ; preds = %for.cond
  %14 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !15870
  %loc = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %14, i32 0, i32 1, !dbg !15870
  %15 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !15870
  %16 = bitcast %struct.rtx_def* %15 to i32*, !dbg !15870
  %bf.load = load i32, i32* %16, align 8, !dbg !15870
  %bf.clear = and i32 %bf.load, 65535, !dbg !15870
  %cmp5 = icmp eq i32 %bf.clear, 1, !dbg !15872
  br i1 %cmp5, label %if.then7, label %if.end23, !dbg !15873

if.then7:                                         ; preds = %for.body
  %17 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !15874
  %loc8 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %17, i32 0, i32 1, !dbg !15877
  %18 = load %struct.rtx_def*, %struct.rtx_def** %loc8, align 8, !dbg !15877
  %19 = load %struct.rtx_def*, %struct.rtx_def** %val, align 8, !dbg !15878
  %call9 = call zeroext i8 @canon_value_cmp(%struct.rtx_def* %18, %struct.rtx_def* %19), !dbg !15879
  %tobool10 = icmp ne i8 %call9, 0, !dbg !15879
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !15880

if.then11:                                        ; preds = %if.then7
  %20 = load %struct.rtx_def*, %struct.rtx_def** %val, align 8, !dbg !15881
  %21 = bitcast %struct.rtx_def* %20 to i32*, !dbg !15881
  %bf.load12 = load i32, i32* %21, align 8, !dbg !15882
  %bf.clear13 = and i32 %bf.load12, -536870913, !dbg !15882
  %bf.set = or i32 %bf.clear13, 536870912, !dbg !15882
  store i32 %bf.set, i32* %21, align 8, !dbg !15882
  br label %if.end22, !dbg !15881

if.else:                                          ; preds = %if.then7
  call void @llvm.dbg.declare(metadata i8** %odv, metadata !15883, metadata !DIExpression()), !dbg !15885
  %22 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !15886
  %loc14 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %22, i32 0, i32 1, !dbg !15887
  %23 = load %struct.rtx_def*, %struct.rtx_def** %loc14, align 8, !dbg !15887
  %call15 = call i8* @dv_from_value(%struct.rtx_def* %23), !dbg !15888
  store i8* %call15, i8** %odv, align 8, !dbg !15885
  call void @llvm.dbg.declare(metadata i8*** %oslot, metadata !15889, metadata !DIExpression()), !dbg !15890
  %24 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set, align 8, !dbg !15891
  %vars = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %24, i32 0, i32 2, !dbg !15892
  %25 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars, align 8, !dbg !15892
  %26 = load i8*, i8** %odv, align 8, !dbg !15893
  %call16 = call i8** @shared_hash_find_slot_noinsert(%struct.shared_hash_def* %25, i8* %26), !dbg !15894
  store i8** %call16, i8*** %oslot, align 8, !dbg !15890
  %27 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set, align 8, !dbg !15895
  %28 = load %struct.rtx_def*, %struct.rtx_def** %val, align 8, !dbg !15896
  %29 = load i8**, i8*** %oslot, align 8, !dbg !15897
  %30 = load i8*, i8** %odv, align 8, !dbg !15898
  %31 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !15899
  %init = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %31, i32 0, i32 3, !dbg !15900
  %32 = load i32, i32* %init, align 8, !dbg !15900
  %call17 = call i8** @set_slot_part(%struct.dataflow_set_def* %27, %struct.rtx_def* %28, i8** %29, i8* %30, i64 0, i32 %32, %struct.rtx_def* null), !dbg !15901
  store i8** %call17, i8*** %oslot, align 8, !dbg !15902
  %33 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !15903
  %loc18 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %33, i32 0, i32 1, !dbg !15903
  %34 = load %struct.rtx_def*, %struct.rtx_def** %loc18, align 8, !dbg !15903
  %35 = bitcast %struct.rtx_def* %34 to i32*, !dbg !15903
  %bf.load19 = load i32, i32* %35, align 8, !dbg !15904
  %bf.clear20 = and i32 %bf.load19, -536870913, !dbg !15904
  %bf.set21 = or i32 %bf.clear20, 536870912, !dbg !15904
  store i32 %bf.set21, i32* %35, align 8, !dbg !15904
  br label %if.end22

if.end22:                                         ; preds = %if.else, %if.then11
  br label %if.end23, !dbg !15905

if.end23:                                         ; preds = %if.end22, %for.body
  br label %for.inc, !dbg !15906

for.inc:                                          ; preds = %if.end23
  %36 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !15907
  %next = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %36, i32 0, i32 0, !dbg !15908
  %37 = load %struct.location_chain_def*, %struct.location_chain_def** %next, align 8, !dbg !15908
  store %struct.location_chain_def* %37, %struct.location_chain_def** %node, align 8, !dbg !15909
  br label %for.cond, !dbg !15910, !llvm.loop !15911

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval, align 4, !dbg !15913
  br label %return, !dbg !15913

return:                                           ; preds = %for.end, %if.then
  %38 = load i32, i32* %retval, align 4, !dbg !15914
  ret i32 %38, !dbg !15914
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @dataflow_set_different(%struct.dataflow_set_def* %old_set, %struct.dataflow_set_def* %new_set) #0 !dbg !15915 {
entry:
  %retval = alloca i8, align 1
  %old_set.addr = alloca %struct.dataflow_set_def*, align 8
  %new_set.addr = alloca %struct.dataflow_set_def*, align 8
  store %struct.dataflow_set_def* %old_set, %struct.dataflow_set_def** %old_set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %old_set.addr, metadata !15918, metadata !DIExpression()), !dbg !15919
  store %struct.dataflow_set_def* %new_set, %struct.dataflow_set_def** %new_set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %new_set.addr, metadata !15920, metadata !DIExpression()), !dbg !15921
  %0 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %old_set.addr, align 8, !dbg !15922
  %vars = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %0, i32 0, i32 2, !dbg !15924
  %1 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars, align 8, !dbg !15924
  %2 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %new_set.addr, align 8, !dbg !15925
  %vars1 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %2, i32 0, i32 2, !dbg !15926
  %3 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars1, align 8, !dbg !15926
  %cmp = icmp eq %struct.shared_hash_def* %1, %3, !dbg !15927
  br i1 %cmp, label %if.then, label %if.end, !dbg !15928

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !15929
  br label %return, !dbg !15929

if.end:                                           ; preds = %entry
  %4 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %old_set.addr, align 8, !dbg !15930
  %vars2 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %4, i32 0, i32 2, !dbg !15932
  %5 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars2, align 8, !dbg !15932
  %call = call %struct.htab* @shared_hash_htab(%struct.shared_hash_def* %5), !dbg !15933
  %call3 = call i64 @htab_elements(%struct.htab* %call), !dbg !15934
  %6 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %new_set.addr, align 8, !dbg !15935
  %vars4 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %6, i32 0, i32 2, !dbg !15936
  %7 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars4, align 8, !dbg !15936
  %call5 = call %struct.htab* @shared_hash_htab(%struct.shared_hash_def* %7), !dbg !15937
  %call6 = call i64 @htab_elements(%struct.htab* %call5), !dbg !15938
  %cmp7 = icmp ne i64 %call3, %call6, !dbg !15939
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !15940

if.then8:                                         ; preds = %if.end
  store i8 1, i8* %retval, align 1, !dbg !15941
  br label %return, !dbg !15941

if.end9:                                          ; preds = %if.end
  store i8 0, i8* @dataflow_set_different_value, align 1, !dbg !15942
  %8 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %old_set.addr, align 8, !dbg !15943
  %vars10 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %8, i32 0, i32 2, !dbg !15944
  %9 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars10, align 8, !dbg !15944
  %call11 = call %struct.htab* @shared_hash_htab(%struct.shared_hash_def* %9), !dbg !15945
  %10 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %new_set.addr, align 8, !dbg !15946
  %vars12 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %10, i32 0, i32 2, !dbg !15947
  %11 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars12, align 8, !dbg !15947
  %call13 = call %struct.htab* @shared_hash_htab(%struct.shared_hash_def* %11), !dbg !15948
  %12 = bitcast %struct.htab* %call13 to i8*, !dbg !15948
  call void @htab_traverse(%struct.htab* %call11, i32 (i8**, i8*)* @dataflow_set_different_1, i8* %12), !dbg !15949
  %13 = load i8, i8* @dataflow_set_different_value, align 1, !dbg !15950
  store i8 %13, i8* %retval, align 1, !dbg !15951
  br label %return, !dbg !15951

return:                                           ; preds = %if.end9, %if.then8, %if.then
  %14 = load i8, i8* %retval, align 1, !dbg !15952
  ret i8 %14, !dbg !15952
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @dataflow_set_preserve_mem_locs(i8** %slot, i8* %data) #0 !dbg !15953 {
entry:
  %retval = alloca i32, align 4
  %slot.addr = alloca i8**, align 8
  %data.addr = alloca i8*, align 8
  %set = alloca %struct.dataflow_set_def*, align 8
  %var = alloca %struct.variable_def*, align 8
  %decl = alloca %union.tree_node*, align 8
  %loc = alloca %struct.location_chain_def*, align 8
  %locp = alloca %struct.location_chain_def**, align 8
  %changed = alloca i8, align 1
  %old_loc = alloca %struct.rtx_def*, align 8
  %mem_node = alloca %struct.location_chain_def*, align 8
  store i8** %slot, i8*** %slot.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %slot.addr, metadata !15954, metadata !DIExpression()), !dbg !15955
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !15956, metadata !DIExpression()), !dbg !15957
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %set, metadata !15958, metadata !DIExpression()), !dbg !15959
  %0 = load i8*, i8** %data.addr, align 8, !dbg !15960
  %1 = bitcast i8* %0 to %struct.dataflow_set_def*, !dbg !15961
  store %struct.dataflow_set_def* %1, %struct.dataflow_set_def** %set, align 8, !dbg !15959
  call void @llvm.dbg.declare(metadata %struct.variable_def** %var, metadata !15962, metadata !DIExpression()), !dbg !15963
  %2 = load i8**, i8*** %slot.addr, align 8, !dbg !15964
  %3 = load i8*, i8** %2, align 8, !dbg !15965
  %4 = bitcast i8* %3 to %struct.variable_def*, !dbg !15966
  store %struct.variable_def* %4, %struct.variable_def** %var, align 8, !dbg !15963
  %5 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !15967
  %dv = getelementptr inbounds %struct.variable_def, %struct.variable_def* %5, i32 0, i32 0, !dbg !15969
  %6 = load i8*, i8** %dv, align 8, !dbg !15969
  %call = call zeroext i8 @dv_is_decl_p(i8* %6), !dbg !15970
  %conv = zext i8 %call to i32, !dbg !15970
  %tobool = icmp ne i32 %conv, 0, !dbg !15970
  br i1 %tobool, label %land.lhs.true, label %if.end215, !dbg !15971

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !15972
  %dv1 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %7, i32 0, i32 0, !dbg !15973
  %8 = load i8*, i8** %dv1, align 8, !dbg !15973
  %call2 = call zeroext i8 @dv_onepart_p(i8* %8), !dbg !15974
  %conv3 = zext i8 %call2 to i32, !dbg !15974
  %tobool4 = icmp ne i32 %conv3, 0, !dbg !15974
  br i1 %tobool4, label %if.then, label %if.end215, !dbg !15975

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %union.tree_node** %decl, metadata !15976, metadata !DIExpression()), !dbg !15978
  %9 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !15979
  %dv5 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %9, i32 0, i32 0, !dbg !15980
  %10 = load i8*, i8** %dv5, align 8, !dbg !15980
  %call6 = call %union.tree_node* @dv_as_decl(i8* %10), !dbg !15981
  store %union.tree_node* %call6, %union.tree_node** %decl, align 8, !dbg !15978
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %loc, metadata !15982, metadata !DIExpression()), !dbg !15983
  call void @llvm.dbg.declare(metadata %struct.location_chain_def*** %locp, metadata !15984, metadata !DIExpression()), !dbg !15985
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !15986, metadata !DIExpression()), !dbg !15987
  store i8 0, i8* %changed, align 1, !dbg !15987
  %11 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !15988
  %n_var_parts = getelementptr inbounds %struct.variable_def, %struct.variable_def* %11, i32 0, i32 2, !dbg !15990
  %12 = load i8, i8* %n_var_parts, align 4, !dbg !15990
  %tobool7 = icmp ne i8 %12, 0, !dbg !15988
  br i1 %tobool7, label %if.end, label %if.then8, !dbg !15991

if.then8:                                         ; preds = %if.then
  store i32 1, i32* %retval, align 4, !dbg !15992
  br label %return, !dbg !15992

if.end:                                           ; preds = %if.then
  %13 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !15993
  %n_var_parts9 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %13, i32 0, i32 2, !dbg !15993
  %14 = load i8, i8* %n_var_parts9, align 4, !dbg !15993
  %conv10 = sext i8 %14 to i32, !dbg !15993
  %cmp = icmp eq i32 %conv10, 1, !dbg !15993
  br i1 %cmp, label %cond.false, label %cond.true, !dbg !15993

cond.true:                                        ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 4086, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !15993
  br label %cond.end, !dbg !15993

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !15993

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !15993
  %15 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !15994
  %16 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set, align 8, !dbg !15996
  %vars = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %16, i32 0, i32 2, !dbg !15997
  %17 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars, align 8, !dbg !15997
  %call12 = call zeroext i8 @shared_var_p(%struct.variable_def* %15, %struct.shared_hash_def* %17), !dbg !15998
  %tobool13 = icmp ne i8 %call12, 0, !dbg !15998
  br i1 %tobool13, label %if.then14, label %if.end81, !dbg !15999

if.then14:                                        ; preds = %cond.end
  %18 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !16000
  %var_part = getelementptr inbounds %struct.variable_def, %struct.variable_def* %18, i32 0, i32 5, !dbg !16003
  %arrayidx = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part, i64 0, i64 0, !dbg !16000
  %loc_chain = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx, i32 0, i32 0, !dbg !16004
  %19 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain, align 8, !dbg !16004
  store %struct.location_chain_def* %19, %struct.location_chain_def** %loc, align 8, !dbg !16005
  br label %for.cond, !dbg !16006

for.cond:                                         ; preds = %for.inc, %if.then14
  %20 = load %struct.location_chain_def*, %struct.location_chain_def** %loc, align 8, !dbg !16007
  %tobool15 = icmp ne %struct.location_chain_def* %20, null, !dbg !16009
  br i1 %tobool15, label %for.body, label %for.end, !dbg !16009

for.body:                                         ; preds = %for.cond
  %21 = load %struct.location_chain_def*, %struct.location_chain_def** %loc, align 8, !dbg !16010
  %loc16 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %21, i32 0, i32 1, !dbg !16010
  %22 = load %struct.rtx_def*, %struct.rtx_def** %loc16, align 8, !dbg !16010
  %23 = bitcast %struct.rtx_def* %22 to i32*, !dbg !16010
  %bf.load = load i32, i32* %23, align 8, !dbg !16010
  %bf.clear = and i32 %bf.load, 65535, !dbg !16010
  %cmp17 = icmp eq i32 %bf.clear, 43, !dbg !16013
  br i1 %cmp17, label %land.lhs.true19, label %if.else, !dbg !16014

land.lhs.true19:                                  ; preds = %for.body
  %24 = load %struct.location_chain_def*, %struct.location_chain_def** %loc, align 8, !dbg !16015
  %loc20 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %24, i32 0, i32 1, !dbg !16015
  %25 = load %struct.rtx_def*, %struct.rtx_def** %loc20, align 8, !dbg !16015
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i32 0, i32 1, !dbg !16015
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !16015
  %arrayidx21 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 1, !dbg !16015
  %rt_mem = bitcast %union.rtunion_def* %arrayidx21 to %struct.mem_attrs**, !dbg !16015
  %26 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !16015
  %cmp22 = icmp eq %struct.mem_attrs* %26, null, !dbg !16015
  br i1 %cmp22, label %cond.true24, label %cond.false25, !dbg !16015

cond.true24:                                      ; preds = %land.lhs.true19
  br label %cond.end31, !dbg !16015

cond.false25:                                     ; preds = %land.lhs.true19
  %27 = load %struct.location_chain_def*, %struct.location_chain_def** %loc, align 8, !dbg !16015
  %loc26 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %27, i32 0, i32 1, !dbg !16015
  %28 = load %struct.rtx_def*, %struct.rtx_def** %loc26, align 8, !dbg !16015
  %u27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i32 0, i32 1, !dbg !16015
  %fld28 = bitcast %union.u* %u27 to [1 x %union.rtunion_def]*, !dbg !16015
  %arrayidx29 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld28, i64 0, i64 1, !dbg !16015
  %rt_mem30 = bitcast %union.rtunion_def* %arrayidx29 to %struct.mem_attrs**, !dbg !16015
  %29 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem30, align 8, !dbg !16015
  %expr = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %29, i32 0, i32 0, !dbg !16015
  %30 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !16015
  br label %cond.end31, !dbg !16015

cond.end31:                                       ; preds = %cond.false25, %cond.true24
  %cond32 = phi %union.tree_node* [ null, %cond.true24 ], [ %30, %cond.false25 ], !dbg !16015
  %31 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !16016
  %cmp33 = icmp ne %union.tree_node* %cond32, %31, !dbg !16017
  br i1 %cmp33, label %land.lhs.true50, label %lor.lhs.false, !dbg !16018

lor.lhs.false:                                    ; preds = %cond.end31
  %32 = load %struct.location_chain_def*, %struct.location_chain_def** %loc, align 8, !dbg !16019
  %loc35 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %32, i32 0, i32 1, !dbg !16019
  %33 = load %struct.rtx_def*, %struct.rtx_def** %loc35, align 8, !dbg !16019
  %u36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i32 0, i32 1, !dbg !16019
  %fld37 = bitcast %union.u* %u36 to [1 x %union.rtunion_def]*, !dbg !16019
  %arrayidx38 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld37, i64 0, i64 1, !dbg !16019
  %rt_mem39 = bitcast %union.rtunion_def* %arrayidx38 to %struct.mem_attrs**, !dbg !16019
  %34 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem39, align 8, !dbg !16019
  %cmp40 = icmp eq %struct.mem_attrs* %34, null, !dbg !16019
  br i1 %cmp40, label %cond.true42, label %cond.false43, !dbg !16020

cond.true42:                                      ; preds = %lor.lhs.false
  br i1 false, label %land.lhs.true50, label %if.else, !dbg !16019

cond.false43:                                     ; preds = %lor.lhs.false
  %35 = load %struct.location_chain_def*, %struct.location_chain_def** %loc, align 8, !dbg !16019
  %loc44 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %35, i32 0, i32 1, !dbg !16019
  %36 = load %struct.rtx_def*, %struct.rtx_def** %loc44, align 8, !dbg !16019
  %u45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %36, i32 0, i32 1, !dbg !16019
  %fld46 = bitcast %union.u* %u45 to [1 x %union.rtunion_def]*, !dbg !16019
  %arrayidx47 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld46, i64 0, i64 1, !dbg !16019
  %rt_mem48 = bitcast %union.rtunion_def* %arrayidx47 to %struct.mem_attrs**, !dbg !16019
  %37 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem48, align 8, !dbg !16019
  %offset = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %37, i32 0, i32 1, !dbg !16019
  %38 = load %struct.rtx_def*, %struct.rtx_def** %offset, align 8, !dbg !16019
  %tobool49 = icmp ne %struct.rtx_def* %38, null, !dbg !16019
  br i1 %tobool49, label %land.lhs.true50, label %if.else, !dbg !16020

land.lhs.true50:                                  ; preds = %cond.false43, %cond.true42, %cond.end31
  %39 = load %struct.location_chain_def*, %struct.location_chain_def** %loc, align 8, !dbg !16021
  %loc51 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %39, i32 0, i32 1, !dbg !16022
  %40 = load %struct.rtx_def*, %struct.rtx_def** %loc51, align 8, !dbg !16022
  %call52 = call zeroext i8 @mem_dies_at_call(%struct.rtx_def* %40), !dbg !16023
  %tobool53 = icmp ne i8 %call52, 0, !dbg !16023
  br i1 %tobool53, label %if.else, label %if.then54, !dbg !16024

if.then54:                                        ; preds = %land.lhs.true50
  br label %for.end, !dbg !16025

if.else:                                          ; preds = %land.lhs.true50, %cond.false43, %cond.true42, %for.body
  %41 = load %struct.location_chain_def*, %struct.location_chain_def** %loc, align 8, !dbg !16026
  %loc55 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %41, i32 0, i32 1, !dbg !16026
  %42 = load %struct.rtx_def*, %struct.rtx_def** %loc55, align 8, !dbg !16026
  %43 = bitcast %struct.rtx_def* %42 to i32*, !dbg !16026
  %bf.load56 = load i32, i32* %43, align 8, !dbg !16026
  %bf.clear57 = and i32 %bf.load56, 65535, !dbg !16026
  %cmp58 = icmp eq i32 %bf.clear57, 1, !dbg !16028
  br i1 %cmp58, label %land.lhs.true60, label %if.end67, !dbg !16029

land.lhs.true60:                                  ; preds = %if.else
  %44 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !16030
  %45 = load %struct.location_chain_def*, %struct.location_chain_def** %loc, align 8, !dbg !16031
  %loc61 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %45, i32 0, i32 1, !dbg !16032
  %46 = load %struct.rtx_def*, %struct.rtx_def** %loc61, align 8, !dbg !16032
  %47 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set, align 8, !dbg !16033
  %vars62 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %47, i32 0, i32 2, !dbg !16034
  %48 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars62, align 8, !dbg !16034
  %call63 = call %struct.htab* @shared_hash_htab(%struct.shared_hash_def* %48), !dbg !16035
  %call64 = call %struct.location_chain_def* @find_mem_expr_in_1pdv(%union.tree_node* %44, %struct.rtx_def* %46, %struct.htab* %call63), !dbg !16036
  %tobool65 = icmp ne %struct.location_chain_def* %call64, null, !dbg !16036
  br i1 %tobool65, label %if.then66, label %if.end67, !dbg !16037

if.then66:                                        ; preds = %land.lhs.true60
  br label %for.end, !dbg !16038

if.end67:                                         ; preds = %land.lhs.true60, %if.else
  br label %if.end68

if.end68:                                         ; preds = %if.end67
  br label %for.inc, !dbg !16039

for.inc:                                          ; preds = %if.end68
  %49 = load %struct.location_chain_def*, %struct.location_chain_def** %loc, align 8, !dbg !16040
  %next = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %49, i32 0, i32 0, !dbg !16041
  %50 = load %struct.location_chain_def*, %struct.location_chain_def** %next, align 8, !dbg !16041
  store %struct.location_chain_def* %50, %struct.location_chain_def** %loc, align 8, !dbg !16042
  br label %for.cond, !dbg !16043, !llvm.loop !16044

for.end:                                          ; preds = %if.then66, %if.then54, %for.cond
  %51 = load %struct.location_chain_def*, %struct.location_chain_def** %loc, align 8, !dbg !16046
  %tobool69 = icmp ne %struct.location_chain_def* %51, null, !dbg !16046
  br i1 %tobool69, label %if.end71, label %if.then70, !dbg !16048

if.then70:                                        ; preds = %for.end
  store i32 1, i32* %retval, align 4, !dbg !16049
  br label %return, !dbg !16049

if.end71:                                         ; preds = %for.end
  %52 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set, align 8, !dbg !16050
  %53 = load i8**, i8*** %slot.addr, align 8, !dbg !16051
  %54 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !16052
  %call72 = call i8** @unshare_variable(%struct.dataflow_set_def* %52, i8** %53, %struct.variable_def* %54, i32 0), !dbg !16053
  store i8** %call72, i8*** %slot.addr, align 8, !dbg !16054
  %55 = load i8**, i8*** %slot.addr, align 8, !dbg !16055
  %56 = load i8*, i8** %55, align 8, !dbg !16056
  %57 = bitcast i8* %56 to %struct.variable_def*, !dbg !16057
  store %struct.variable_def* %57, %struct.variable_def** %var, align 8, !dbg !16058
  %58 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !16059
  %n_var_parts73 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %58, i32 0, i32 2, !dbg !16059
  %59 = load i8, i8* %n_var_parts73, align 4, !dbg !16059
  %conv74 = sext i8 %59 to i32, !dbg !16059
  %cmp75 = icmp eq i32 %conv74, 1, !dbg !16059
  br i1 %cmp75, label %cond.false78, label %cond.true77, !dbg !16059

cond.true77:                                      ; preds = %if.end71
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 4111, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !16059
  br label %cond.end79, !dbg !16059

cond.false78:                                     ; preds = %if.end71
  br label %cond.end79, !dbg !16059

cond.end79:                                       ; preds = %cond.false78, %cond.true77
  %cond80 = phi i32 [ 0, %cond.true77 ], [ 0, %cond.false78 ], !dbg !16059
  br label %if.end81, !dbg !16060

if.end81:                                         ; preds = %cond.end79, %cond.end
  %60 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !16061
  %var_part82 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %60, i32 0, i32 5, !dbg !16063
  %arrayidx83 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part82, i64 0, i64 0, !dbg !16061
  %loc_chain84 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx83, i32 0, i32 0, !dbg !16064
  store %struct.location_chain_def** %loc_chain84, %struct.location_chain_def*** %locp, align 8, !dbg !16065
  %61 = load %struct.location_chain_def**, %struct.location_chain_def*** %locp, align 8, !dbg !16066
  %62 = load %struct.location_chain_def*, %struct.location_chain_def** %61, align 8, !dbg !16067
  store %struct.location_chain_def* %62, %struct.location_chain_def** %loc, align 8, !dbg !16068
  br label %for.cond85, !dbg !16069

for.cond85:                                       ; preds = %for.inc203, %if.end81
  %63 = load %struct.location_chain_def*, %struct.location_chain_def** %loc, align 8, !dbg !16070
  %tobool86 = icmp ne %struct.location_chain_def* %63, null, !dbg !16072
  br i1 %tobool86, label %for.body87, label %for.end204, !dbg !16072

for.body87:                                       ; preds = %for.cond85
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %old_loc, metadata !16073, metadata !DIExpression()), !dbg !16075
  %64 = load %struct.location_chain_def*, %struct.location_chain_def** %loc, align 8, !dbg !16076
  %loc88 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %64, i32 0, i32 1, !dbg !16077
  %65 = load %struct.rtx_def*, %struct.rtx_def** %loc88, align 8, !dbg !16077
  store %struct.rtx_def* %65, %struct.rtx_def** %old_loc, align 8, !dbg !16075
  %66 = load %struct.rtx_def*, %struct.rtx_def** %old_loc, align 8, !dbg !16078
  %67 = bitcast %struct.rtx_def* %66 to i32*, !dbg !16078
  %bf.load89 = load i32, i32* %67, align 8, !dbg !16078
  %bf.clear90 = and i32 %bf.load89, 65535, !dbg !16078
  %cmp91 = icmp eq i32 %bf.clear90, 1, !dbg !16080
  br i1 %cmp91, label %if.then93, label %if.end114, !dbg !16081

if.then93:                                        ; preds = %for.body87
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %mem_node, metadata !16082, metadata !DIExpression()), !dbg !16084
  %68 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !16085
  %69 = load %struct.location_chain_def*, %struct.location_chain_def** %loc, align 8, !dbg !16086
  %loc94 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %69, i32 0, i32 1, !dbg !16087
  %70 = load %struct.rtx_def*, %struct.rtx_def** %loc94, align 8, !dbg !16087
  %71 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set, align 8, !dbg !16088
  %vars95 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %71, i32 0, i32 2, !dbg !16089
  %72 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars95, align 8, !dbg !16089
  %call96 = call %struct.htab* @shared_hash_htab(%struct.shared_hash_def* %72), !dbg !16090
  %call97 = call %struct.location_chain_def* @find_mem_expr_in_1pdv(%union.tree_node* %68, %struct.rtx_def* %70, %struct.htab* %call96), !dbg !16091
  store %struct.location_chain_def* %call97, %struct.location_chain_def** %mem_node, align 8, !dbg !16084
  %73 = load %struct.location_chain_def*, %struct.location_chain_def** %mem_node, align 8, !dbg !16092
  %tobool98 = icmp ne %struct.location_chain_def* %73, null, !dbg !16092
  br i1 %tobool98, label %if.then99, label %if.end113, !dbg !16094

if.then99:                                        ; preds = %if.then93
  %74 = load %struct.location_chain_def*, %struct.location_chain_def** %mem_node, align 8, !dbg !16095
  %loc100 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %74, i32 0, i32 1, !dbg !16097
  %75 = load %struct.rtx_def*, %struct.rtx_def** %loc100, align 8, !dbg !16097
  %76 = load %struct.location_chain_def*, %struct.location_chain_def** %loc, align 8, !dbg !16098
  %loc101 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %76, i32 0, i32 1, !dbg !16099
  store %struct.rtx_def* %75, %struct.rtx_def** %loc101, align 8, !dbg !16100
  %77 = load %struct.location_chain_def*, %struct.location_chain_def** %mem_node, align 8, !dbg !16101
  %set_src = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %77, i32 0, i32 2, !dbg !16102
  %78 = load %struct.rtx_def*, %struct.rtx_def** %set_src, align 8, !dbg !16102
  %79 = load %struct.location_chain_def*, %struct.location_chain_def** %loc, align 8, !dbg !16103
  %set_src102 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %79, i32 0, i32 2, !dbg !16104
  store %struct.rtx_def* %78, %struct.rtx_def** %set_src102, align 8, !dbg !16105
  %80 = load %struct.location_chain_def*, %struct.location_chain_def** %loc, align 8, !dbg !16106
  %init = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %80, i32 0, i32 3, !dbg !16106
  %81 = load i32, i32* %init, align 8, !dbg !16106
  %82 = load %struct.location_chain_def*, %struct.location_chain_def** %mem_node, align 8, !dbg !16106
  %init103 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %82, i32 0, i32 3, !dbg !16106
  %83 = load i32, i32* %init103, align 8, !dbg !16106
  %cmp104 = icmp ult i32 %81, %83, !dbg !16106
  br i1 %cmp104, label %cond.true106, label %cond.false108, !dbg !16106

cond.true106:                                     ; preds = %if.then99
  %84 = load %struct.location_chain_def*, %struct.location_chain_def** %loc, align 8, !dbg !16106
  %init107 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %84, i32 0, i32 3, !dbg !16106
  %85 = load i32, i32* %init107, align 8, !dbg !16106
  br label %cond.end110, !dbg !16106

cond.false108:                                    ; preds = %if.then99
  %86 = load %struct.location_chain_def*, %struct.location_chain_def** %mem_node, align 8, !dbg !16106
  %init109 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %86, i32 0, i32 3, !dbg !16106
  %87 = load i32, i32* %init109, align 8, !dbg !16106
  br label %cond.end110, !dbg !16106

cond.end110:                                      ; preds = %cond.false108, %cond.true106
  %cond111 = phi i32 [ %85, %cond.true106 ], [ %87, %cond.false108 ], !dbg !16106
  %88 = load %struct.location_chain_def*, %struct.location_chain_def** %loc, align 8, !dbg !16107
  %init112 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %88, i32 0, i32 3, !dbg !16108
  store i32 %cond111, i32* %init112, align 8, !dbg !16109
  br label %if.end113, !dbg !16110

if.end113:                                        ; preds = %cond.end110, %if.then93
  br label %if.end114, !dbg !16111

if.end114:                                        ; preds = %if.end113, %for.body87
  %89 = load %struct.location_chain_def*, %struct.location_chain_def** %loc, align 8, !dbg !16112
  %loc115 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %89, i32 0, i32 1, !dbg !16112
  %90 = load %struct.rtx_def*, %struct.rtx_def** %loc115, align 8, !dbg !16112
  %91 = bitcast %struct.rtx_def* %90 to i32*, !dbg !16112
  %bf.load116 = load i32, i32* %91, align 8, !dbg !16112
  %bf.clear117 = and i32 %bf.load116, 65535, !dbg !16112
  %cmp118 = icmp ne i32 %bf.clear117, 43, !dbg !16114
  br i1 %cmp118, label %if.then164, label %lor.lhs.false120, !dbg !16115

lor.lhs.false120:                                 ; preds = %if.end114
  %92 = load %struct.location_chain_def*, %struct.location_chain_def** %loc, align 8, !dbg !16116
  %loc121 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %92, i32 0, i32 1, !dbg !16116
  %93 = load %struct.rtx_def*, %struct.rtx_def** %loc121, align 8, !dbg !16116
  %u122 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %93, i32 0, i32 1, !dbg !16116
  %fld123 = bitcast %union.u* %u122 to [1 x %union.rtunion_def]*, !dbg !16116
  %arrayidx124 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld123, i64 0, i64 1, !dbg !16116
  %rt_mem125 = bitcast %union.rtunion_def* %arrayidx124 to %struct.mem_attrs**, !dbg !16116
  %94 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem125, align 8, !dbg !16116
  %cmp126 = icmp eq %struct.mem_attrs* %94, null, !dbg !16116
  br i1 %cmp126, label %cond.true128, label %cond.false129, !dbg !16116

cond.true128:                                     ; preds = %lor.lhs.false120
  br label %cond.end136, !dbg !16116

cond.false129:                                    ; preds = %lor.lhs.false120
  %95 = load %struct.location_chain_def*, %struct.location_chain_def** %loc, align 8, !dbg !16116
  %loc130 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %95, i32 0, i32 1, !dbg !16116
  %96 = load %struct.rtx_def*, %struct.rtx_def** %loc130, align 8, !dbg !16116
  %u131 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %96, i32 0, i32 1, !dbg !16116
  %fld132 = bitcast %union.u* %u131 to [1 x %union.rtunion_def]*, !dbg !16116
  %arrayidx133 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld132, i64 0, i64 1, !dbg !16116
  %rt_mem134 = bitcast %union.rtunion_def* %arrayidx133 to %struct.mem_attrs**, !dbg !16116
  %97 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem134, align 8, !dbg !16116
  %expr135 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %97, i32 0, i32 0, !dbg !16116
  %98 = load %union.tree_node*, %union.tree_node** %expr135, align 8, !dbg !16116
  br label %cond.end136, !dbg !16116

cond.end136:                                      ; preds = %cond.false129, %cond.true128
  %cond137 = phi %union.tree_node* [ null, %cond.true128 ], [ %98, %cond.false129 ], !dbg !16116
  %99 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !16117
  %cmp138 = icmp eq %union.tree_node* %cond137, %99, !dbg !16118
  br i1 %cmp138, label %land.lhs.true140, label %lor.lhs.false160, !dbg !16119

land.lhs.true140:                                 ; preds = %cond.end136
  %100 = load %struct.location_chain_def*, %struct.location_chain_def** %loc, align 8, !dbg !16120
  %loc141 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %100, i32 0, i32 1, !dbg !16120
  %101 = load %struct.rtx_def*, %struct.rtx_def** %loc141, align 8, !dbg !16120
  %u142 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %101, i32 0, i32 1, !dbg !16120
  %fld143 = bitcast %union.u* %u142 to [1 x %union.rtunion_def]*, !dbg !16120
  %arrayidx144 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld143, i64 0, i64 1, !dbg !16120
  %rt_mem145 = bitcast %union.rtunion_def* %arrayidx144 to %struct.mem_attrs**, !dbg !16120
  %102 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem145, align 8, !dbg !16120
  %cmp146 = icmp eq %struct.mem_attrs* %102, null, !dbg !16120
  br i1 %cmp146, label %cond.true148, label %cond.false149, !dbg !16120

cond.true148:                                     ; preds = %land.lhs.true140
  br label %cond.end156, !dbg !16120

cond.false149:                                    ; preds = %land.lhs.true140
  %103 = load %struct.location_chain_def*, %struct.location_chain_def** %loc, align 8, !dbg !16120
  %loc150 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %103, i32 0, i32 1, !dbg !16120
  %104 = load %struct.rtx_def*, %struct.rtx_def** %loc150, align 8, !dbg !16120
  %u151 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %104, i32 0, i32 1, !dbg !16120
  %fld152 = bitcast %union.u* %u151 to [1 x %union.rtunion_def]*, !dbg !16120
  %arrayidx153 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld152, i64 0, i64 1, !dbg !16120
  %rt_mem154 = bitcast %union.rtunion_def* %arrayidx153 to %struct.mem_attrs**, !dbg !16120
  %105 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem154, align 8, !dbg !16120
  %offset155 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %105, i32 0, i32 1, !dbg !16120
  %106 = load %struct.rtx_def*, %struct.rtx_def** %offset155, align 8, !dbg !16120
  br label %cond.end156, !dbg !16120

cond.end156:                                      ; preds = %cond.false149, %cond.true148
  %cond157 = phi %struct.rtx_def* [ null, %cond.true148 ], [ %106, %cond.false149 ], !dbg !16120
  %cmp158 = icmp eq %struct.rtx_def* %cond157, null, !dbg !16121
  br i1 %cmp158, label %if.then164, label %lor.lhs.false160, !dbg !16122

lor.lhs.false160:                                 ; preds = %cond.end156, %cond.end136
  %107 = load %struct.location_chain_def*, %struct.location_chain_def** %loc, align 8, !dbg !16123
  %loc161 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %107, i32 0, i32 1, !dbg !16124
  %108 = load %struct.rtx_def*, %struct.rtx_def** %loc161, align 8, !dbg !16124
  %call162 = call zeroext i8 @mem_dies_at_call(%struct.rtx_def* %108), !dbg !16125
  %tobool163 = icmp ne i8 %call162, 0, !dbg !16125
  br i1 %tobool163, label %if.end186, label %if.then164, !dbg !16126

if.then164:                                       ; preds = %lor.lhs.false160, %cond.end156, %if.end114
  %109 = load %struct.rtx_def*, %struct.rtx_def** %old_loc, align 8, !dbg !16127
  %110 = load %struct.location_chain_def*, %struct.location_chain_def** %loc, align 8, !dbg !16130
  %loc165 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %110, i32 0, i32 1, !dbg !16131
  %111 = load %struct.rtx_def*, %struct.rtx_def** %loc165, align 8, !dbg !16131
  %cmp166 = icmp ne %struct.rtx_def* %109, %111, !dbg !16132
  br i1 %cmp166, label %land.lhs.true168, label %if.end184, !dbg !16133

land.lhs.true168:                                 ; preds = %if.then164
  %112 = load i8, i8* @emit_notes, align 1, !dbg !16134
  %conv169 = zext i8 %112 to i32, !dbg !16134
  %tobool170 = icmp ne i32 %conv169, 0, !dbg !16134
  br i1 %tobool170, label %if.then171, label %if.end184, !dbg !16135

if.then171:                                       ; preds = %land.lhs.true168
  %113 = load %struct.rtx_def*, %struct.rtx_def** %old_loc, align 8, !dbg !16136
  %114 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !16139
  %var_part172 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %114, i32 0, i32 5, !dbg !16140
  %arrayidx173 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part172, i64 0, i64 0, !dbg !16139
  %cur_loc = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx173, i32 0, i32 1, !dbg !16141
  %115 = load %struct.rtx_def*, %struct.rtx_def** %cur_loc, align 8, !dbg !16141
  %cmp174 = icmp eq %struct.rtx_def* %113, %115, !dbg !16142
  br i1 %cmp174, label %if.then176, label %if.end180, !dbg !16143

if.then176:                                       ; preds = %if.then171
  store i8 1, i8* %changed, align 1, !dbg !16144
  %116 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !16146
  %var_part177 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %116, i32 0, i32 5, !dbg !16147
  %arrayidx178 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part177, i64 0, i64 0, !dbg !16146
  %cur_loc179 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx178, i32 0, i32 1, !dbg !16148
  store %struct.rtx_def* null, %struct.rtx_def** %cur_loc179, align 8, !dbg !16149
  %117 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !16150
  %cur_loc_changed = getelementptr inbounds %struct.variable_def, %struct.variable_def* %117, i32 0, i32 3, !dbg !16151
  store i8 1, i8* %cur_loc_changed, align 1, !dbg !16152
  br label %if.end180, !dbg !16153

if.end180:                                        ; preds = %if.then176, %if.then171
  %118 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !16154
  %dv181 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %118, i32 0, i32 0, !dbg !16155
  %119 = load i8*, i8** %dv181, align 8, !dbg !16155
  %120 = load %struct.location_chain_def*, %struct.location_chain_def** %loc, align 8, !dbg !16156
  %loc182 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %120, i32 0, i32 1, !dbg !16157
  %121 = load %struct.rtx_def*, %struct.rtx_def** %loc182, align 8, !dbg !16157
  call void @add_value_chains(i8* %119, %struct.rtx_def* %121), !dbg !16158
  %122 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !16159
  %dv183 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %122, i32 0, i32 0, !dbg !16160
  %123 = load i8*, i8** %dv183, align 8, !dbg !16160
  %124 = load %struct.rtx_def*, %struct.rtx_def** %old_loc, align 8, !dbg !16161
  call void @remove_value_chains(i8* %123, %struct.rtx_def* %124), !dbg !16162
  br label %if.end184, !dbg !16163

if.end184:                                        ; preds = %if.end180, %land.lhs.true168, %if.then164
  %125 = load %struct.location_chain_def*, %struct.location_chain_def** %loc, align 8, !dbg !16164
  %next185 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %125, i32 0, i32 0, !dbg !16165
  store %struct.location_chain_def** %next185, %struct.location_chain_def*** %locp, align 8, !dbg !16166
  br label %for.inc203, !dbg !16167

if.end186:                                        ; preds = %lor.lhs.false160
  %126 = load i8, i8* @emit_notes, align 1, !dbg !16168
  %tobool187 = icmp ne i8 %126, 0, !dbg !16168
  br i1 %tobool187, label %if.then188, label %if.end201, !dbg !16170

if.then188:                                       ; preds = %if.end186
  %127 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !16171
  %dv189 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %127, i32 0, i32 0, !dbg !16173
  %128 = load i8*, i8** %dv189, align 8, !dbg !16173
  %129 = load %struct.rtx_def*, %struct.rtx_def** %old_loc, align 8, !dbg !16174
  call void @remove_value_chains(i8* %128, %struct.rtx_def* %129), !dbg !16175
  %130 = load %struct.rtx_def*, %struct.rtx_def** %old_loc, align 8, !dbg !16176
  %131 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !16178
  %var_part190 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %131, i32 0, i32 5, !dbg !16179
  %arrayidx191 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part190, i64 0, i64 0, !dbg !16178
  %cur_loc192 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx191, i32 0, i32 1, !dbg !16180
  %132 = load %struct.rtx_def*, %struct.rtx_def** %cur_loc192, align 8, !dbg !16180
  %cmp193 = icmp eq %struct.rtx_def* %130, %132, !dbg !16181
  br i1 %cmp193, label %if.then195, label %if.end200, !dbg !16182

if.then195:                                       ; preds = %if.then188
  store i8 1, i8* %changed, align 1, !dbg !16183
  %133 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !16185
  %var_part196 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %133, i32 0, i32 5, !dbg !16186
  %arrayidx197 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part196, i64 0, i64 0, !dbg !16185
  %cur_loc198 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx197, i32 0, i32 1, !dbg !16187
  store %struct.rtx_def* null, %struct.rtx_def** %cur_loc198, align 8, !dbg !16188
  %134 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !16189
  %cur_loc_changed199 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %134, i32 0, i32 3, !dbg !16190
  store i8 1, i8* %cur_loc_changed199, align 1, !dbg !16191
  br label %if.end200, !dbg !16192

if.end200:                                        ; preds = %if.then195, %if.then188
  br label %if.end201, !dbg !16193

if.end201:                                        ; preds = %if.end200, %if.end186
  %135 = load %struct.location_chain_def*, %struct.location_chain_def** %loc, align 8, !dbg !16194
  %next202 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %135, i32 0, i32 0, !dbg !16195
  %136 = load %struct.location_chain_def*, %struct.location_chain_def** %next202, align 8, !dbg !16195
  %137 = load %struct.location_chain_def**, %struct.location_chain_def*** %locp, align 8, !dbg !16196
  store %struct.location_chain_def* %136, %struct.location_chain_def** %137, align 8, !dbg !16197
  %138 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @loc_chain_pool, align 8, !dbg !16198
  %139 = load %struct.location_chain_def*, %struct.location_chain_def** %loc, align 8, !dbg !16199
  %140 = bitcast %struct.location_chain_def* %139 to i8*, !dbg !16199
  call void @pool_free(%struct.alloc_pool_def* %138, i8* %140), !dbg !16200
  br label %for.inc203, !dbg !16201

for.inc203:                                       ; preds = %if.end201, %if.end184
  %141 = load %struct.location_chain_def**, %struct.location_chain_def*** %locp, align 8, !dbg !16202
  %142 = load %struct.location_chain_def*, %struct.location_chain_def** %141, align 8, !dbg !16203
  store %struct.location_chain_def* %142, %struct.location_chain_def** %loc, align 8, !dbg !16204
  br label %for.cond85, !dbg !16205, !llvm.loop !16206

for.end204:                                       ; preds = %for.cond85
  %143 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !16208
  %var_part205 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %143, i32 0, i32 5, !dbg !16210
  %arrayidx206 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part205, i64 0, i64 0, !dbg !16208
  %loc_chain207 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx206, i32 0, i32 0, !dbg !16211
  %144 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain207, align 8, !dbg !16211
  %tobool208 = icmp ne %struct.location_chain_def* %144, null, !dbg !16208
  br i1 %tobool208, label %if.end211, label %if.then209, !dbg !16212

if.then209:                                       ; preds = %for.end204
  %145 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !16213
  %n_var_parts210 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %145, i32 0, i32 2, !dbg !16215
  %146 = load i8, i8* %n_var_parts210, align 4, !dbg !16216
  %dec = add i8 %146, -1, !dbg !16216
  store i8 %dec, i8* %n_var_parts210, align 4, !dbg !16216
  store i8 1, i8* %changed, align 1, !dbg !16217
  br label %if.end211, !dbg !16218

if.end211:                                        ; preds = %if.then209, %for.end204
  %147 = load i8, i8* %changed, align 1, !dbg !16219
  %tobool212 = icmp ne i8 %147, 0, !dbg !16219
  br i1 %tobool212, label %if.then213, label %if.end214, !dbg !16221

if.then213:                                       ; preds = %if.end211
  %148 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !16222
  %149 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set, align 8, !dbg !16223
  call void @variable_was_changed(%struct.variable_def* %148, %struct.dataflow_set_def* %149), !dbg !16224
  br label %if.end214, !dbg !16224

if.end214:                                        ; preds = %if.then213, %if.end211
  br label %if.end215, !dbg !16225

if.end215:                                        ; preds = %if.end214, %land.lhs.true, %entry
  store i32 1, i32* %retval, align 4, !dbg !16226
  br label %return, !dbg !16226

return:                                           ; preds = %if.end215, %if.then70, %if.then8
  %150 = load i32, i32* %retval, align 4, !dbg !16227
  ret i32 %150, !dbg !16227
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @dataflow_set_remove_mem_locs(i8** %slot, i8* %data) #0 !dbg !16228 {
entry:
  %retval = alloca i32, align 4
  %slot.addr = alloca i8**, align 8
  %data.addr = alloca i8*, align 8
  %set = alloca %struct.dataflow_set_def*, align 8
  %var = alloca %struct.variable_def*, align 8
  %loc = alloca %struct.location_chain_def*, align 8
  %locp = alloca %struct.location_chain_def**, align 8
  %changed = alloca i8, align 1
  store i8** %slot, i8*** %slot.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %slot.addr, metadata !16229, metadata !DIExpression()), !dbg !16230
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !16231, metadata !DIExpression()), !dbg !16232
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %set, metadata !16233, metadata !DIExpression()), !dbg !16234
  %0 = load i8*, i8** %data.addr, align 8, !dbg !16235
  %1 = bitcast i8* %0 to %struct.dataflow_set_def*, !dbg !16236
  store %struct.dataflow_set_def* %1, %struct.dataflow_set_def** %set, align 8, !dbg !16234
  call void @llvm.dbg.declare(metadata %struct.variable_def** %var, metadata !16237, metadata !DIExpression()), !dbg !16238
  %2 = load i8**, i8*** %slot.addr, align 8, !dbg !16239
  %3 = load i8*, i8** %2, align 8, !dbg !16240
  %4 = bitcast i8* %3 to %struct.variable_def*, !dbg !16241
  store %struct.variable_def* %4, %struct.variable_def** %var, align 8, !dbg !16238
  %5 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !16242
  %dv = getelementptr inbounds %struct.variable_def, %struct.variable_def* %5, i32 0, i32 0, !dbg !16244
  %6 = load i8*, i8** %dv, align 8, !dbg !16244
  %call = call zeroext i8 @dv_is_value_p(i8* %6), !dbg !16245
  %tobool = icmp ne i8 %call, 0, !dbg !16245
  br i1 %tobool, label %if.then, label %if.end72, !dbg !16246

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %loc, metadata !16247, metadata !DIExpression()), !dbg !16249
  call void @llvm.dbg.declare(metadata %struct.location_chain_def*** %locp, metadata !16250, metadata !DIExpression()), !dbg !16251
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !16252, metadata !DIExpression()), !dbg !16253
  store i8 0, i8* %changed, align 1, !dbg !16253
  %7 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !16254
  %n_var_parts = getelementptr inbounds %struct.variable_def, %struct.variable_def* %7, i32 0, i32 2, !dbg !16254
  %8 = load i8, i8* %n_var_parts, align 4, !dbg !16254
  %conv = sext i8 %8 to i32, !dbg !16254
  %cmp = icmp eq i32 %conv, 1, !dbg !16254
  br i1 %cmp, label %cond.false, label %cond.true, !dbg !16254

cond.true:                                        ; preds = %if.then
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 4198, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !16254
  br label %cond.end, !dbg !16254

cond.false:                                       ; preds = %if.then
  br label %cond.end, !dbg !16254

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !16254
  %9 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !16255
  %10 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set, align 8, !dbg !16257
  %vars = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %10, i32 0, i32 2, !dbg !16258
  %11 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars, align 8, !dbg !16258
  %call2 = call zeroext i8 @shared_var_p(%struct.variable_def* %9, %struct.shared_hash_def* %11), !dbg !16259
  %tobool3 = icmp ne i8 %call2, 0, !dbg !16259
  br i1 %tobool3, label %if.then4, label %if.end26, !dbg !16260

if.then4:                                         ; preds = %cond.end
  %12 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !16261
  %var_part = getelementptr inbounds %struct.variable_def, %struct.variable_def* %12, i32 0, i32 5, !dbg !16264
  %arrayidx = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part, i64 0, i64 0, !dbg !16261
  %loc_chain = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx, i32 0, i32 0, !dbg !16265
  %13 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain, align 8, !dbg !16265
  store %struct.location_chain_def* %13, %struct.location_chain_def** %loc, align 8, !dbg !16266
  br label %for.cond, !dbg !16267

for.cond:                                         ; preds = %for.inc, %if.then4
  %14 = load %struct.location_chain_def*, %struct.location_chain_def** %loc, align 8, !dbg !16268
  %tobool5 = icmp ne %struct.location_chain_def* %14, null, !dbg !16270
  br i1 %tobool5, label %for.body, label %for.end, !dbg !16270

for.body:                                         ; preds = %for.cond
  %15 = load %struct.location_chain_def*, %struct.location_chain_def** %loc, align 8, !dbg !16271
  %loc6 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %15, i32 0, i32 1, !dbg !16271
  %16 = load %struct.rtx_def*, %struct.rtx_def** %loc6, align 8, !dbg !16271
  %17 = bitcast %struct.rtx_def* %16 to i32*, !dbg !16271
  %bf.load = load i32, i32* %17, align 8, !dbg !16271
  %bf.clear = and i32 %bf.load, 65535, !dbg !16271
  %cmp7 = icmp eq i32 %bf.clear, 43, !dbg !16273
  br i1 %cmp7, label %land.lhs.true, label %if.end, !dbg !16274

land.lhs.true:                                    ; preds = %for.body
  %18 = load %struct.location_chain_def*, %struct.location_chain_def** %loc, align 8, !dbg !16275
  %loc9 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %18, i32 0, i32 1, !dbg !16276
  %19 = load %struct.rtx_def*, %struct.rtx_def** %loc9, align 8, !dbg !16276
  %call10 = call zeroext i8 @mem_dies_at_call(%struct.rtx_def* %19), !dbg !16277
  %conv11 = zext i8 %call10 to i32, !dbg !16277
  %tobool12 = icmp ne i32 %conv11, 0, !dbg !16277
  br i1 %tobool12, label %if.then13, label %if.end, !dbg !16278

if.then13:                                        ; preds = %land.lhs.true
  br label %for.end, !dbg !16279

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !16280

for.inc:                                          ; preds = %if.end
  %20 = load %struct.location_chain_def*, %struct.location_chain_def** %loc, align 8, !dbg !16281
  %next = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %20, i32 0, i32 0, !dbg !16282
  %21 = load %struct.location_chain_def*, %struct.location_chain_def** %next, align 8, !dbg !16282
  store %struct.location_chain_def* %21, %struct.location_chain_def** %loc, align 8, !dbg !16283
  br label %for.cond, !dbg !16284, !llvm.loop !16285

for.end:                                          ; preds = %if.then13, %for.cond
  %22 = load %struct.location_chain_def*, %struct.location_chain_def** %loc, align 8, !dbg !16287
  %tobool14 = icmp ne %struct.location_chain_def* %22, null, !dbg !16287
  br i1 %tobool14, label %if.end16, label %if.then15, !dbg !16289

if.then15:                                        ; preds = %for.end
  store i32 1, i32* %retval, align 4, !dbg !16290
  br label %return, !dbg !16290

if.end16:                                         ; preds = %for.end
  %23 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set, align 8, !dbg !16291
  %24 = load i8**, i8*** %slot.addr, align 8, !dbg !16292
  %25 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !16293
  %call17 = call i8** @unshare_variable(%struct.dataflow_set_def* %23, i8** %24, %struct.variable_def* %25, i32 0), !dbg !16294
  store i8** %call17, i8*** %slot.addr, align 8, !dbg !16295
  %26 = load i8**, i8*** %slot.addr, align 8, !dbg !16296
  %27 = load i8*, i8** %26, align 8, !dbg !16297
  %28 = bitcast i8* %27 to %struct.variable_def*, !dbg !16298
  store %struct.variable_def* %28, %struct.variable_def** %var, align 8, !dbg !16299
  %29 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !16300
  %n_var_parts18 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %29, i32 0, i32 2, !dbg !16300
  %30 = load i8, i8* %n_var_parts18, align 4, !dbg !16300
  %conv19 = sext i8 %30 to i32, !dbg !16300
  %cmp20 = icmp eq i32 %conv19, 1, !dbg !16300
  br i1 %cmp20, label %cond.false23, label %cond.true22, !dbg !16300

cond.true22:                                      ; preds = %if.end16
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 4212, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !16300
  br label %cond.end24, !dbg !16300

cond.false23:                                     ; preds = %if.end16
  br label %cond.end24, !dbg !16300

cond.end24:                                       ; preds = %cond.false23, %cond.true22
  %cond25 = phi i32 [ 0, %cond.true22 ], [ 0, %cond.false23 ], !dbg !16300
  br label %if.end26, !dbg !16301

if.end26:                                         ; preds = %cond.end24, %cond.end
  %31 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !16302
  %var_part27 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %31, i32 0, i32 5, !dbg !16304
  %arrayidx28 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part27, i64 0, i64 0, !dbg !16302
  %loc_chain29 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx28, i32 0, i32 0, !dbg !16305
  store %struct.location_chain_def** %loc_chain29, %struct.location_chain_def*** %locp, align 8, !dbg !16306
  %32 = load %struct.location_chain_def**, %struct.location_chain_def*** %locp, align 8, !dbg !16307
  %33 = load %struct.location_chain_def*, %struct.location_chain_def** %32, align 8, !dbg !16308
  store %struct.location_chain_def* %33, %struct.location_chain_def** %loc, align 8, !dbg !16309
  br label %for.cond30, !dbg !16310

for.cond30:                                       ; preds = %for.inc60, %if.end26
  %34 = load %struct.location_chain_def*, %struct.location_chain_def** %loc, align 8, !dbg !16311
  %tobool31 = icmp ne %struct.location_chain_def* %34, null, !dbg !16313
  br i1 %tobool31, label %for.body32, label %for.end61, !dbg !16313

for.body32:                                       ; preds = %for.cond30
  %35 = load %struct.location_chain_def*, %struct.location_chain_def** %loc, align 8, !dbg !16314
  %loc33 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %35, i32 0, i32 1, !dbg !16314
  %36 = load %struct.rtx_def*, %struct.rtx_def** %loc33, align 8, !dbg !16314
  %37 = bitcast %struct.rtx_def* %36 to i32*, !dbg !16314
  %bf.load34 = load i32, i32* %37, align 8, !dbg !16314
  %bf.clear35 = and i32 %bf.load34, 65535, !dbg !16314
  %cmp36 = icmp ne i32 %bf.clear35, 43, !dbg !16317
  br i1 %cmp36, label %if.then41, label %lor.lhs.false, !dbg !16318

lor.lhs.false:                                    ; preds = %for.body32
  %38 = load %struct.location_chain_def*, %struct.location_chain_def** %loc, align 8, !dbg !16319
  %loc38 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %38, i32 0, i32 1, !dbg !16320
  %39 = load %struct.rtx_def*, %struct.rtx_def** %loc38, align 8, !dbg !16320
  %call39 = call zeroext i8 @mem_dies_at_call(%struct.rtx_def* %39), !dbg !16321
  %tobool40 = icmp ne i8 %call39, 0, !dbg !16321
  br i1 %tobool40, label %if.end43, label %if.then41, !dbg !16322

if.then41:                                        ; preds = %lor.lhs.false, %for.body32
  %40 = load %struct.location_chain_def*, %struct.location_chain_def** %loc, align 8, !dbg !16323
  %next42 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %40, i32 0, i32 0, !dbg !16325
  store %struct.location_chain_def** %next42, %struct.location_chain_def*** %locp, align 8, !dbg !16326
  br label %for.inc60, !dbg !16327

if.end43:                                         ; preds = %lor.lhs.false
  %41 = load i8, i8* @emit_notes, align 1, !dbg !16328
  %tobool44 = icmp ne i8 %41, 0, !dbg !16328
  br i1 %tobool44, label %if.then45, label %if.end48, !dbg !16330

if.then45:                                        ; preds = %if.end43
  %42 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !16331
  %dv46 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %42, i32 0, i32 0, !dbg !16332
  %43 = load i8*, i8** %dv46, align 8, !dbg !16332
  %44 = load %struct.location_chain_def*, %struct.location_chain_def** %loc, align 8, !dbg !16333
  %loc47 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %44, i32 0, i32 1, !dbg !16334
  %45 = load %struct.rtx_def*, %struct.rtx_def** %loc47, align 8, !dbg !16334
  call void @remove_value_chains(i8* %43, %struct.rtx_def* %45), !dbg !16335
  br label %if.end48, !dbg !16335

if.end48:                                         ; preds = %if.then45, %if.end43
  %46 = load %struct.location_chain_def*, %struct.location_chain_def** %loc, align 8, !dbg !16336
  %next49 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %46, i32 0, i32 0, !dbg !16337
  %47 = load %struct.location_chain_def*, %struct.location_chain_def** %next49, align 8, !dbg !16337
  %48 = load %struct.location_chain_def**, %struct.location_chain_def*** %locp, align 8, !dbg !16338
  store %struct.location_chain_def* %47, %struct.location_chain_def** %48, align 8, !dbg !16339
  %49 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !16340
  %var_part50 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %49, i32 0, i32 5, !dbg !16342
  %arrayidx51 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part50, i64 0, i64 0, !dbg !16340
  %cur_loc = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx51, i32 0, i32 1, !dbg !16343
  %50 = load %struct.rtx_def*, %struct.rtx_def** %cur_loc, align 8, !dbg !16343
  %51 = load %struct.location_chain_def*, %struct.location_chain_def** %loc, align 8, !dbg !16344
  %loc52 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %51, i32 0, i32 1, !dbg !16345
  %52 = load %struct.rtx_def*, %struct.rtx_def** %loc52, align 8, !dbg !16345
  %cmp53 = icmp eq %struct.rtx_def* %50, %52, !dbg !16346
  br i1 %cmp53, label %if.then55, label %if.end59, !dbg !16347

if.then55:                                        ; preds = %if.end48
  store i8 1, i8* %changed, align 1, !dbg !16348
  %53 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !16350
  %var_part56 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %53, i32 0, i32 5, !dbg !16351
  %arrayidx57 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part56, i64 0, i64 0, !dbg !16350
  %cur_loc58 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx57, i32 0, i32 1, !dbg !16352
  store %struct.rtx_def* null, %struct.rtx_def** %cur_loc58, align 8, !dbg !16353
  %54 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !16354
  %cur_loc_changed = getelementptr inbounds %struct.variable_def, %struct.variable_def* %54, i32 0, i32 3, !dbg !16355
  store i8 1, i8* %cur_loc_changed, align 1, !dbg !16356
  br label %if.end59, !dbg !16357

if.end59:                                         ; preds = %if.then55, %if.end48
  %55 = load %struct.alloc_pool_def*, %struct.alloc_pool_def** @loc_chain_pool, align 8, !dbg !16358
  %56 = load %struct.location_chain_def*, %struct.location_chain_def** %loc, align 8, !dbg !16359
  %57 = bitcast %struct.location_chain_def* %56 to i8*, !dbg !16359
  call void @pool_free(%struct.alloc_pool_def* %55, i8* %57), !dbg !16360
  br label %for.inc60, !dbg !16361

for.inc60:                                        ; preds = %if.end59, %if.then41
  %58 = load %struct.location_chain_def**, %struct.location_chain_def*** %locp, align 8, !dbg !16362
  %59 = load %struct.location_chain_def*, %struct.location_chain_def** %58, align 8, !dbg !16363
  store %struct.location_chain_def* %59, %struct.location_chain_def** %loc, align 8, !dbg !16364
  br label %for.cond30, !dbg !16365, !llvm.loop !16366

for.end61:                                        ; preds = %for.cond30
  %60 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !16368
  %var_part62 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %60, i32 0, i32 5, !dbg !16370
  %arrayidx63 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part62, i64 0, i64 0, !dbg !16368
  %loc_chain64 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx63, i32 0, i32 0, !dbg !16371
  %61 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain64, align 8, !dbg !16371
  %tobool65 = icmp ne %struct.location_chain_def* %61, null, !dbg !16368
  br i1 %tobool65, label %if.end68, label %if.then66, !dbg !16372

if.then66:                                        ; preds = %for.end61
  %62 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !16373
  %n_var_parts67 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %62, i32 0, i32 2, !dbg !16375
  %63 = load i8, i8* %n_var_parts67, align 4, !dbg !16376
  %dec = add i8 %63, -1, !dbg !16376
  store i8 %dec, i8* %n_var_parts67, align 4, !dbg !16376
  store i8 1, i8* %changed, align 1, !dbg !16377
  br label %if.end68, !dbg !16378

if.end68:                                         ; preds = %if.then66, %for.end61
  %64 = load i8, i8* %changed, align 1, !dbg !16379
  %tobool69 = icmp ne i8 %64, 0, !dbg !16379
  br i1 %tobool69, label %if.then70, label %if.end71, !dbg !16381

if.then70:                                        ; preds = %if.end68
  %65 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !16382
  %66 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set, align 8, !dbg !16383
  call void @variable_was_changed(%struct.variable_def* %65, %struct.dataflow_set_def* %66), !dbg !16384
  br label %if.end71, !dbg !16384

if.end71:                                         ; preds = %if.then70, %if.end68
  br label %if.end72, !dbg !16385

if.end72:                                         ; preds = %if.end71, %entry
  store i32 1, i32* %retval, align 4, !dbg !16386
  br label %return, !dbg !16386

return:                                           ; preds = %if.end72, %if.then15
  %67 = load i32, i32* %retval, align 4, !dbg !16387
  ret i32 %67, !dbg !16387
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @mem_dies_at_call(%struct.rtx_def* %mem) #0 !dbg !16388 {
entry:
  %retval = alloca i8, align 1
  %mem.addr = alloca %struct.rtx_def*, align 8
  %expr = alloca %union.tree_node*, align 8
  %decl = alloca %union.tree_node*, align 8
  store %struct.rtx_def* %mem, %struct.rtx_def** %mem.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %mem.addr, metadata !16389, metadata !DIExpression()), !dbg !16390
  call void @llvm.dbg.declare(metadata %union.tree_node** %expr, metadata !16391, metadata !DIExpression()), !dbg !16392
  %0 = load %struct.rtx_def*, %struct.rtx_def** %mem.addr, align 8, !dbg !16393
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !16393
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !16393
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 1, !dbg !16393
  %rt_mem = bitcast %union.rtunion_def* %arrayidx to %struct.mem_attrs**, !dbg !16393
  %1 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !16393
  %cmp = icmp eq %struct.mem_attrs* %1, null, !dbg !16393
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !16393

cond.true:                                        ; preds = %entry
  br label %cond.end, !dbg !16393

cond.false:                                       ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %mem.addr, align 8, !dbg !16393
  %u1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1, !dbg !16393
  %fld2 = bitcast %union.u* %u1 to [1 x %union.rtunion_def]*, !dbg !16393
  %arrayidx3 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2, i64 0, i64 1, !dbg !16393
  %rt_mem4 = bitcast %union.rtunion_def* %arrayidx3 to %struct.mem_attrs**, !dbg !16393
  %3 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem4, align 8, !dbg !16393
  %expr5 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %3, i32 0, i32 0, !dbg !16393
  %4 = load %union.tree_node*, %union.tree_node** %expr5, align 8, !dbg !16393
  br label %cond.end, !dbg !16393

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %union.tree_node* [ null, %cond.true ], [ %4, %cond.false ], !dbg !16393
  store %union.tree_node* %cond, %union.tree_node** %expr, align 8, !dbg !16392
  call void @llvm.dbg.declare(metadata %union.tree_node** %decl, metadata !16394, metadata !DIExpression()), !dbg !16395
  %5 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !16396
  %tobool = icmp ne %union.tree_node* %5, null, !dbg !16396
  br i1 %tobool, label %if.end, label %if.then, !dbg !16398

if.then:                                          ; preds = %cond.end
  store i8 1, i8* %retval, align 1, !dbg !16399
  br label %return, !dbg !16399

if.end:                                           ; preds = %cond.end
  %6 = load %union.tree_node*, %union.tree_node** %expr, align 8, !dbg !16400
  %call = call %union.tree_node* @get_base_address(%union.tree_node* %6), !dbg !16401
  store %union.tree_node* %call, %union.tree_node** %decl, align 8, !dbg !16402
  %7 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !16403
  %tobool6 = icmp ne %union.tree_node* %7, null, !dbg !16403
  br i1 %tobool6, label %if.end8, label %if.then7, !dbg !16405

if.then7:                                         ; preds = %if.end
  store i8 1, i8* %retval, align 1, !dbg !16406
  br label %return, !dbg !16406

if.end8:                                          ; preds = %if.end
  %8 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !16407
  %base = bitcast %union.tree_node* %8 to %struct.tree_base*, !dbg !16407
  %9 = bitcast %struct.tree_base* %base to i64*, !dbg !16407
  %bf.load = load i64, i64* %9, align 8, !dbg !16407
  %bf.clear = and i64 %bf.load, 65535, !dbg !16407
  %bf.cast = trunc i64 %bf.clear to i32, !dbg !16407
  %idxprom = sext i32 %bf.cast to i64, !dbg !16407
  %arrayidx9 = getelementptr inbounds [0 x i32], [0 x i32]* @tree_code_type, i64 0, i64 %idxprom, !dbg !16407
  %10 = load i32, i32* %arrayidx9, align 4, !dbg !16407
  %cmp10 = icmp eq i32 %10, 3, !dbg !16407
  br i1 %cmp10, label %if.end12, label %if.then11, !dbg !16409

if.then11:                                        ; preds = %if.end8
  store i8 1, i8* %retval, align 1, !dbg !16410
  br label %return, !dbg !16410

if.end12:                                         ; preds = %if.end8
  %11 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !16411
  %call13 = call zeroext i8 @may_be_aliased(%union.tree_node* %11), !dbg !16412
  %conv = zext i8 %call13 to i32, !dbg !16412
  %tobool14 = icmp ne i32 %conv, 0, !dbg !16412
  br i1 %tobool14, label %lor.end, label %lor.rhs, !dbg !16413

lor.rhs:                                          ; preds = %if.end12
  %12 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !16414
  %base15 = bitcast %union.tree_node* %12 to %struct.tree_base*, !dbg !16414
  %13 = bitcast %struct.tree_base* %base15 to i64*, !dbg !16414
  %bf.load16 = load i64, i64* %13, align 8, !dbg !16414
  %bf.lshr = lshr i64 %bf.load16, 20, !dbg !16414
  %bf.clear17 = and i64 %bf.lshr, 1, !dbg !16414
  %bf.cast18 = trunc i64 %bf.clear17 to i32, !dbg !16414
  %tobool19 = icmp ne i32 %bf.cast18, 0, !dbg !16414
  br i1 %tobool19, label %land.end, label %land.rhs, !dbg !16415

land.rhs:                                         ; preds = %lor.rhs
  %14 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !16416
  %call20 = call zeroext i8 @is_global_var(%union.tree_node* %14), !dbg !16417
  %conv21 = zext i8 %call20 to i32, !dbg !16417
  %tobool22 = icmp ne i32 %conv21, 0, !dbg !16415
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %15 = phi i1 [ false, %lor.rhs ], [ %tobool22, %land.rhs ], !dbg !16418
  br label %lor.end, !dbg !16413

lor.end:                                          ; preds = %land.end, %if.end12
  %16 = phi i1 [ true, %if.end12 ], [ %15, %land.end ]
  %lor.ext = zext i1 %16 to i32, !dbg !16413
  %conv23 = trunc i32 %lor.ext to i8, !dbg !16419
  store i8 %conv23, i8* %retval, align 1, !dbg !16420
  br label %return, !dbg !16420

return:                                           ; preds = %lor.end, %if.then11, %if.then7, %if.then
  %17 = load i8, i8* %retval, align 1, !dbg !16421
  ret i8 %17, !dbg !16421
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.location_chain_def* @find_mem_expr_in_1pdv(%union.tree_node* %expr, %struct.rtx_def* %val, %struct.htab* %vars) #0 !dbg !16422 {
entry:
  %retval = alloca %struct.location_chain_def*, align 8
  %expr.addr = alloca %union.tree_node*, align 8
  %val.addr = alloca %struct.rtx_def*, align 8
  %vars.addr = alloca %struct.htab*, align 8
  %node = alloca %struct.location_chain_def*, align 8
  %dv = alloca i8*, align 8
  %var = alloca %struct.variable_def*, align 8
  %where = alloca %struct.location_chain_def*, align 8
  store %union.tree_node* %expr, %union.tree_node** %expr.addr, align 8
  call void @llvm.dbg.declare(metadata %union.tree_node** %expr.addr, metadata !16425, metadata !DIExpression()), !dbg !16426
  store %struct.rtx_def* %val, %struct.rtx_def** %val.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %val.addr, metadata !16427, metadata !DIExpression()), !dbg !16428
  store %struct.htab* %vars, %struct.htab** %vars.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.htab** %vars.addr, metadata !16429, metadata !DIExpression()), !dbg !16430
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %node, metadata !16431, metadata !DIExpression()), !dbg !16432
  call void @llvm.dbg.declare(metadata i8** %dv, metadata !16433, metadata !DIExpression()), !dbg !16434
  call void @llvm.dbg.declare(metadata %struct.variable_def** %var, metadata !16435, metadata !DIExpression()), !dbg !16436
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %where, metadata !16437, metadata !DIExpression()), !dbg !16438
  store %struct.location_chain_def* null, %struct.location_chain_def** %where, align 8, !dbg !16438
  %0 = load %struct.rtx_def*, %struct.rtx_def** %val.addr, align 8, !dbg !16439
  %tobool = icmp ne %struct.rtx_def* %0, null, !dbg !16439
  br i1 %tobool, label %if.end, label %if.then, !dbg !16441

if.then:                                          ; preds = %entry
  store %struct.location_chain_def* null, %struct.location_chain_def** %retval, align 8, !dbg !16442
  br label %return, !dbg !16442

if.end:                                           ; preds = %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** %val.addr, align 8, !dbg !16443
  %2 = bitcast %struct.rtx_def* %1 to i32*, !dbg !16443
  %bf.load = load i32, i32* %2, align 8, !dbg !16443
  %bf.clear = and i32 %bf.load, 65535, !dbg !16443
  %cmp = icmp eq i32 %bf.clear, 1, !dbg !16443
  br i1 %cmp, label %cond.false, label %cond.true, !dbg !16443

cond.true:                                        ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 4008, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !16443
  br label %cond.end, !dbg !16443

cond.false:                                       ; preds = %if.end
  br label %cond.end, !dbg !16443

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !16443
  %3 = load %struct.rtx_def*, %struct.rtx_def** %val.addr, align 8, !dbg !16444
  %4 = bitcast %struct.rtx_def* %3 to i32*, !dbg !16444
  %bf.load1 = load i32, i32* %4, align 8, !dbg !16444
  %bf.lshr = lshr i32 %bf.load1, 29, !dbg !16444
  %bf.clear2 = and i32 %bf.lshr, 1, !dbg !16444
  %tobool3 = icmp ne i32 %bf.clear2, 0, !dbg !16444
  br i1 %tobool3, label %cond.true4, label %cond.false5, !dbg !16444

cond.true4:                                       ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 4010, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !16444
  br label %cond.end6, !dbg !16444

cond.false5:                                      ; preds = %cond.end
  br label %cond.end6, !dbg !16444

cond.end6:                                        ; preds = %cond.false5, %cond.true4
  %cond7 = phi i32 [ 0, %cond.true4 ], [ 0, %cond.false5 ], !dbg !16444
  %5 = load %struct.rtx_def*, %struct.rtx_def** %val.addr, align 8, !dbg !16445
  %call = call i8* @dv_from_value(%struct.rtx_def* %5), !dbg !16446
  store i8* %call, i8** %dv, align 8, !dbg !16447
  %6 = load %struct.htab*, %struct.htab** %vars.addr, align 8, !dbg !16448
  %7 = load i8*, i8** %dv, align 8, !dbg !16449
  %8 = load i8*, i8** %dv, align 8, !dbg !16450
  %call8 = call i32 @dv_htab_hash(i8* %8), !dbg !16451
  %call9 = call i8* @htab_find_with_hash(%struct.htab* %6, i8* %7, i32 %call8), !dbg !16452
  %9 = bitcast i8* %call9 to %struct.variable_def*, !dbg !16453
  store %struct.variable_def* %9, %struct.variable_def** %var, align 8, !dbg !16454
  %10 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !16455
  %tobool10 = icmp ne %struct.variable_def* %10, null, !dbg !16455
  br i1 %tobool10, label %if.end12, label %if.then11, !dbg !16457

if.then11:                                        ; preds = %cond.end6
  store %struct.location_chain_def* null, %struct.location_chain_def** %retval, align 8, !dbg !16458
  br label %return, !dbg !16458

if.end12:                                         ; preds = %cond.end6
  %11 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !16459
  %dv13 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %11, i32 0, i32 0, !dbg !16459
  %12 = load i8*, i8** %dv13, align 8, !dbg !16459
  %call14 = call zeroext i8 @dv_onepart_p(i8* %12), !dbg !16459
  %tobool15 = icmp ne i8 %call14, 0, !dbg !16459
  br i1 %tobool15, label %cond.false17, label %cond.true16, !dbg !16459

cond.true16:                                      ; preds = %if.end12
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 4018, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !16459
  br label %cond.end18, !dbg !16459

cond.false17:                                     ; preds = %if.end12
  br label %cond.end18, !dbg !16459

cond.end18:                                       ; preds = %cond.false17, %cond.true16
  %cond19 = phi i32 [ 0, %cond.true16 ], [ 0, %cond.false17 ], !dbg !16459
  %13 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !16460
  %n_var_parts = getelementptr inbounds %struct.variable_def, %struct.variable_def* %13, i32 0, i32 2, !dbg !16462
  %14 = load i8, i8* %n_var_parts, align 4, !dbg !16462
  %tobool20 = icmp ne i8 %14, 0, !dbg !16460
  br i1 %tobool20, label %if.end22, label %if.then21, !dbg !16463

if.then21:                                        ; preds = %cond.end18
  store %struct.location_chain_def* null, %struct.location_chain_def** %retval, align 8, !dbg !16464
  br label %return, !dbg !16464

if.end22:                                         ; preds = %cond.end18
  %15 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !16465
  %var_part = getelementptr inbounds %struct.variable_def, %struct.variable_def* %15, i32 0, i32 5, !dbg !16465
  %arrayidx = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part, i64 0, i64 0, !dbg !16465
  %offset = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx, i32 0, i32 2, !dbg !16465
  %16 = load i64, i64* %offset, align 8, !dbg !16465
  %cmp23 = icmp eq i64 %16, 0, !dbg !16465
  br i1 %cmp23, label %cond.false25, label %cond.true24, !dbg !16465

cond.true24:                                      ; preds = %if.end22
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 4023, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !16465
  br label %cond.end26, !dbg !16465

cond.false25:                                     ; preds = %if.end22
  br label %cond.end26, !dbg !16465

cond.end26:                                       ; preds = %cond.false25, %cond.true24
  %cond27 = phi i32 [ 0, %cond.true24 ], [ 0, %cond.false25 ], !dbg !16465
  %17 = load %struct.rtx_def*, %struct.rtx_def** %val.addr, align 8, !dbg !16466
  %18 = bitcast %struct.rtx_def* %17 to i32*, !dbg !16466
  %bf.load28 = load i32, i32* %18, align 8, !dbg !16467
  %bf.clear29 = and i32 %bf.load28, -536870913, !dbg !16467
  %bf.set = or i32 %bf.clear29, 536870912, !dbg !16467
  store i32 %bf.set, i32* %18, align 8, !dbg !16467
  %19 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !16468
  %var_part30 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %19, i32 0, i32 5, !dbg !16470
  %arrayidx31 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part30, i64 0, i64 0, !dbg !16468
  %loc_chain = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx31, i32 0, i32 0, !dbg !16471
  %20 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain, align 8, !dbg !16471
  store %struct.location_chain_def* %20, %struct.location_chain_def** %node, align 8, !dbg !16472
  br label %for.cond, !dbg !16473

for.cond:                                         ; preds = %for.inc, %cond.end26
  %21 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !16474
  %tobool32 = icmp ne %struct.location_chain_def* %21, null, !dbg !16476
  br i1 %tobool32, label %for.body, label %for.end, !dbg !16476

for.body:                                         ; preds = %for.cond
  %22 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !16477
  %loc = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %22, i32 0, i32 1, !dbg !16477
  %23 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !16477
  %24 = bitcast %struct.rtx_def* %23 to i32*, !dbg !16477
  %bf.load33 = load i32, i32* %24, align 8, !dbg !16477
  %bf.clear34 = and i32 %bf.load33, 65535, !dbg !16477
  %cmp35 = icmp eq i32 %bf.clear34, 43, !dbg !16477
  br i1 %cmp35, label %land.lhs.true, label %if.else, !dbg !16479

land.lhs.true:                                    ; preds = %for.body
  %25 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !16480
  %loc36 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %25, i32 0, i32 1, !dbg !16480
  %26 = load %struct.rtx_def*, %struct.rtx_def** %loc36, align 8, !dbg !16480
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1, !dbg !16480
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !16480
  %arrayidx37 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 1, !dbg !16480
  %rt_mem = bitcast %union.rtunion_def* %arrayidx37 to %struct.mem_attrs**, !dbg !16480
  %27 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !16480
  %cmp38 = icmp eq %struct.mem_attrs* %27, null, !dbg !16480
  br i1 %cmp38, label %cond.true39, label %cond.false40, !dbg !16480

cond.true39:                                      ; preds = %land.lhs.true
  br label %cond.end47, !dbg !16480

cond.false40:                                     ; preds = %land.lhs.true
  %28 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !16480
  %loc41 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %28, i32 0, i32 1, !dbg !16480
  %29 = load %struct.rtx_def*, %struct.rtx_def** %loc41, align 8, !dbg !16480
  %u42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1, !dbg !16480
  %fld43 = bitcast %union.u* %u42 to [1 x %union.rtunion_def]*, !dbg !16480
  %arrayidx44 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld43, i64 0, i64 1, !dbg !16480
  %rt_mem45 = bitcast %union.rtunion_def* %arrayidx44 to %struct.mem_attrs**, !dbg !16480
  %30 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem45, align 8, !dbg !16480
  %expr46 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %30, i32 0, i32 0, !dbg !16480
  %31 = load %union.tree_node*, %union.tree_node** %expr46, align 8, !dbg !16480
  br label %cond.end47, !dbg !16480

cond.end47:                                       ; preds = %cond.false40, %cond.true39
  %cond48 = phi %union.tree_node* [ null, %cond.true39 ], [ %31, %cond.false40 ], !dbg !16480
  %32 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8, !dbg !16481
  %cmp49 = icmp eq %union.tree_node* %cond48, %32, !dbg !16482
  br i1 %cmp49, label %land.lhs.true50, label %if.else, !dbg !16483

land.lhs.true50:                                  ; preds = %cond.end47
  %33 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !16484
  %loc51 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %33, i32 0, i32 1, !dbg !16484
  %34 = load %struct.rtx_def*, %struct.rtx_def** %loc51, align 8, !dbg !16484
  %u52 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1, !dbg !16484
  %fld53 = bitcast %union.u* %u52 to [1 x %union.rtunion_def]*, !dbg !16484
  %arrayidx54 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld53, i64 0, i64 1, !dbg !16484
  %rt_mem55 = bitcast %union.rtunion_def* %arrayidx54 to %struct.mem_attrs**, !dbg !16484
  %35 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem55, align 8, !dbg !16484
  %cmp56 = icmp eq %struct.mem_attrs* %35, null, !dbg !16484
  br i1 %cmp56, label %cond.true57, label %cond.false58, !dbg !16484

cond.true57:                                      ; preds = %land.lhs.true50
  br label %cond.end65, !dbg !16484

cond.false58:                                     ; preds = %land.lhs.true50
  %36 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !16484
  %loc59 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %36, i32 0, i32 1, !dbg !16484
  %37 = load %struct.rtx_def*, %struct.rtx_def** %loc59, align 8, !dbg !16484
  %u60 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1, !dbg !16484
  %fld61 = bitcast %union.u* %u60 to [1 x %union.rtunion_def]*, !dbg !16484
  %arrayidx62 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld61, i64 0, i64 1, !dbg !16484
  %rt_mem63 = bitcast %union.rtunion_def* %arrayidx62 to %struct.mem_attrs**, !dbg !16484
  %38 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem63, align 8, !dbg !16484
  %offset64 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %38, i32 0, i32 1, !dbg !16484
  %39 = load %struct.rtx_def*, %struct.rtx_def** %offset64, align 8, !dbg !16484
  br label %cond.end65, !dbg !16484

cond.end65:                                       ; preds = %cond.false58, %cond.true57
  %cond66 = phi %struct.rtx_def* [ null, %cond.true57 ], [ %39, %cond.false58 ], !dbg !16484
  %cmp67 = icmp eq %struct.rtx_def* %cond66, null, !dbg !16485
  br i1 %cmp67, label %if.then68, label %if.else, !dbg !16486

if.then68:                                        ; preds = %cond.end65
  %40 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !16487
  store %struct.location_chain_def* %40, %struct.location_chain_def** %where, align 8, !dbg !16489
  br label %for.end, !dbg !16490

if.else:                                          ; preds = %cond.end65, %cond.end47, %for.body
  %41 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !16491
  %loc69 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %41, i32 0, i32 1, !dbg !16491
  %42 = load %struct.rtx_def*, %struct.rtx_def** %loc69, align 8, !dbg !16491
  %43 = bitcast %struct.rtx_def* %42 to i32*, !dbg !16491
  %bf.load70 = load i32, i32* %43, align 8, !dbg !16491
  %bf.clear71 = and i32 %bf.load70, 65535, !dbg !16491
  %cmp72 = icmp eq i32 %bf.clear71, 1, !dbg !16493
  br i1 %cmp72, label %land.lhs.true73, label %if.end84, !dbg !16494

land.lhs.true73:                                  ; preds = %if.else
  %44 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !16495
  %loc74 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %44, i32 0, i32 1, !dbg !16495
  %45 = load %struct.rtx_def*, %struct.rtx_def** %loc74, align 8, !dbg !16495
  %46 = bitcast %struct.rtx_def* %45 to i32*, !dbg !16495
  %bf.load75 = load i32, i32* %46, align 8, !dbg !16495
  %bf.lshr76 = lshr i32 %bf.load75, 29, !dbg !16495
  %bf.clear77 = and i32 %bf.lshr76, 1, !dbg !16495
  %tobool78 = icmp ne i32 %bf.clear77, 0, !dbg !16495
  br i1 %tobool78, label %if.end84, label %land.lhs.true79, !dbg !16496

land.lhs.true79:                                  ; preds = %land.lhs.true73
  %47 = load %union.tree_node*, %union.tree_node** %expr.addr, align 8, !dbg !16497
  %48 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !16498
  %loc80 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %48, i32 0, i32 1, !dbg !16499
  %49 = load %struct.rtx_def*, %struct.rtx_def** %loc80, align 8, !dbg !16499
  %50 = load %struct.htab*, %struct.htab** %vars.addr, align 8, !dbg !16500
  %call81 = call %struct.location_chain_def* @find_mem_expr_in_1pdv(%union.tree_node* %47, %struct.rtx_def* %49, %struct.htab* %50), !dbg !16501
  store %struct.location_chain_def* %call81, %struct.location_chain_def** %where, align 8, !dbg !16502
  %tobool82 = icmp ne %struct.location_chain_def* %call81, null, !dbg !16502
  br i1 %tobool82, label %if.then83, label %if.end84, !dbg !16503

if.then83:                                        ; preds = %land.lhs.true79
  br label %for.end, !dbg !16504

if.end84:                                         ; preds = %land.lhs.true79, %land.lhs.true73, %if.else
  br label %if.end85

if.end85:                                         ; preds = %if.end84
  br label %for.inc, !dbg !16505

for.inc:                                          ; preds = %if.end85
  %51 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !16506
  %next = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %51, i32 0, i32 0, !dbg !16507
  %52 = load %struct.location_chain_def*, %struct.location_chain_def** %next, align 8, !dbg !16507
  store %struct.location_chain_def* %52, %struct.location_chain_def** %node, align 8, !dbg !16508
  br label %for.cond, !dbg !16509, !llvm.loop !16510

for.end:                                          ; preds = %if.then83, %if.then68, %for.cond
  %53 = load %struct.rtx_def*, %struct.rtx_def** %val.addr, align 8, !dbg !16512
  %54 = bitcast %struct.rtx_def* %53 to i32*, !dbg !16512
  %bf.load86 = load i32, i32* %54, align 8, !dbg !16513
  %bf.clear87 = and i32 %bf.load86, -536870913, !dbg !16513
  store i32 %bf.clear87, i32* %54, align 8, !dbg !16513
  %55 = load %struct.location_chain_def*, %struct.location_chain_def** %where, align 8, !dbg !16514
  store %struct.location_chain_def* %55, %struct.location_chain_def** %retval, align 8, !dbg !16515
  br label %return, !dbg !16515

return:                                           ; preds = %for.end, %if.then21, %if.then11, %if.then
  %56 = load %struct.location_chain_def*, %struct.location_chain_def** %retval, align 8, !dbg !16516
  ret %struct.location_chain_def* %56, !dbg !16516
}

declare dso_local %union.tree_node* @get_base_address(%union.tree_node*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @may_be_aliased(%union.tree_node* %var) #0 !dbg !16517 {
entry:
  %var.addr = alloca %union.tree_node*, align 8
  store %union.tree_node* %var, %union.tree_node** %var.addr, align 8
  call void @llvm.dbg.declare(metadata %union.tree_node** %var.addr, metadata !16524, metadata !DIExpression()), !dbg !16525
  %0 = load %union.tree_node*, %union.tree_node** %var.addr, align 8, !dbg !16526
  %base = bitcast %union.tree_node* %0 to %struct.tree_base*, !dbg !16526
  %1 = bitcast %struct.tree_base* %base to i64*, !dbg !16526
  %bf.load = load i64, i64* %1, align 8, !dbg !16526
  %bf.clear = and i64 %bf.load, 65535, !dbg !16526
  %bf.cast = trunc i64 %bf.clear to i32, !dbg !16526
  %cmp = icmp ne i32 %bf.cast, 33, !dbg !16527
  br i1 %cmp, label %land.lhs.true, label %land.end, !dbg !16528

land.lhs.true:                                    ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** %var.addr, align 8, !dbg !16529
  %base1 = bitcast %union.tree_node* %2 to %struct.tree_base*, !dbg !16529
  %3 = bitcast %struct.tree_base* %base1 to i64*, !dbg !16529
  %bf.load2 = load i64, i64* %3, align 8, !dbg !16529
  %bf.lshr = lshr i64 %bf.load2, 26, !dbg !16529
  %bf.clear3 = and i64 %bf.lshr, 1, !dbg !16529
  %bf.cast4 = trunc i64 %bf.clear3 to i32, !dbg !16529
  %tobool = icmp ne i32 %bf.cast4, 0, !dbg !16529
  br i1 %tobool, label %land.lhs.true17, label %lor.lhs.false, !dbg !16530

lor.lhs.false:                                    ; preds = %land.lhs.true
  %4 = load %union.tree_node*, %union.tree_node** %var.addr, align 8, !dbg !16531
  %base5 = bitcast %union.tree_node* %4 to %struct.tree_base*, !dbg !16531
  %5 = bitcast %struct.tree_base* %base5 to i64*, !dbg !16531
  %bf.load6 = load i64, i64* %5, align 8, !dbg !16531
  %bf.lshr7 = lshr i64 %bf.load6, 27, !dbg !16531
  %bf.clear8 = and i64 %bf.lshr7, 1, !dbg !16531
  %bf.cast9 = trunc i64 %bf.clear8 to i32, !dbg !16531
  %tobool10 = icmp ne i32 %bf.cast9, 0, !dbg !16531
  br i1 %tobool10, label %land.lhs.true17, label %lor.lhs.false11, !dbg !16532

lor.lhs.false11:                                  ; preds = %lor.lhs.false
  %6 = load %union.tree_node*, %union.tree_node** %var.addr, align 8, !dbg !16533
  %decl_common = bitcast %union.tree_node* %6 to %struct.tree_decl_common*, !dbg !16533
  %decl_flag_1 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %decl_common, i32 0, i32 2, !dbg !16533
  %7 = bitcast i40* %decl_flag_1 to i64*, !dbg !16533
  %bf.load12 = load i64, i64* %7, align 8, !dbg !16533
  %bf.lshr13 = lshr i64 %bf.load12, 25, !dbg !16533
  %bf.clear14 = and i64 %bf.lshr13, 1, !dbg !16533
  %bf.cast15 = trunc i64 %bf.clear14 to i32, !dbg !16533
  %tobool16 = icmp ne i32 %bf.cast15, 0, !dbg !16533
  br i1 %tobool16, label %land.lhs.true17, label %land.rhs, !dbg !16534

land.lhs.true17:                                  ; preds = %lor.lhs.false11, %lor.lhs.false, %land.lhs.true
  %8 = load %union.tree_node*, %union.tree_node** %var.addr, align 8, !dbg !16535
  %base18 = bitcast %union.tree_node* %8 to %struct.tree_base*, !dbg !16535
  %9 = bitcast %struct.tree_base* %base18 to i64*, !dbg !16535
  %bf.load19 = load i64, i64* %9, align 8, !dbg !16535
  %bf.lshr20 = lshr i64 %bf.load19, 20, !dbg !16535
  %bf.clear21 = and i64 %bf.lshr20, 1, !dbg !16535
  %bf.cast22 = trunc i64 %bf.clear21 to i32, !dbg !16535
  %tobool23 = icmp ne i32 %bf.cast22, 0, !dbg !16535
  br i1 %tobool23, label %land.lhs.true24, label %land.rhs, !dbg !16536

land.lhs.true24:                                  ; preds = %land.lhs.true17
  %10 = load %union.tree_node*, %union.tree_node** %var.addr, align 8, !dbg !16537
  %common = bitcast %union.tree_node* %10 to %struct.tree_common*, !dbg !16537
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2, !dbg !16537
  %11 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !16537
  %type25 = bitcast %union.tree_node* %11 to %struct.tree_type*, !dbg !16537
  %needs_constructing_flag = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type25, i32 0, i32 6, !dbg !16537
  %bf.load26 = load i32, i32* %needs_constructing_flag, align 4, !dbg !16537
  %bf.lshr27 = lshr i32 %bf.load26, 11, !dbg !16537
  %bf.clear28 = and i32 %bf.lshr27, 1, !dbg !16537
  %tobool29 = icmp ne i32 %bf.clear28, 0, !dbg !16537
  br i1 %tobool29, label %land.rhs, label %land.end, !dbg !16538

land.rhs:                                         ; preds = %land.lhs.true24, %land.lhs.true17, %lor.lhs.false11
  %12 = load %union.tree_node*, %union.tree_node** %var.addr, align 8, !dbg !16539
  %base30 = bitcast %union.tree_node* %12 to %struct.tree_base*, !dbg !16539
  %13 = bitcast %struct.tree_base* %base30 to i64*, !dbg !16539
  %bf.load31 = load i64, i64* %13, align 8, !dbg !16539
  %bf.lshr32 = lshr i64 %bf.load31, 27, !dbg !16539
  %bf.clear33 = and i64 %bf.lshr32, 1, !dbg !16539
  %bf.cast34 = trunc i64 %bf.clear33 to i32, !dbg !16539
  %tobool35 = icmp ne i32 %bf.cast34, 0, !dbg !16539
  br i1 %tobool35, label %lor.end, label %lor.lhs.false36, !dbg !16540

lor.lhs.false36:                                  ; preds = %land.rhs
  %14 = load %union.tree_node*, %union.tree_node** %var.addr, align 8, !dbg !16541
  %decl_common37 = bitcast %union.tree_node* %14 to %struct.tree_decl_common*, !dbg !16541
  %decl_flag_138 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %decl_common37, i32 0, i32 2, !dbg !16541
  %15 = bitcast i40* %decl_flag_138 to i64*, !dbg !16541
  %bf.load39 = load i64, i64* %15, align 8, !dbg !16541
  %bf.lshr40 = lshr i64 %bf.load39, 25, !dbg !16541
  %bf.clear41 = and i64 %bf.lshr40, 1, !dbg !16541
  %bf.cast42 = trunc i64 %bf.clear41 to i32, !dbg !16541
  %tobool43 = icmp ne i32 %bf.cast42, 0, !dbg !16541
  br i1 %tobool43, label %lor.end, label %lor.rhs, !dbg !16542

lor.rhs:                                          ; preds = %lor.lhs.false36
  %16 = load %union.tree_node*, %union.tree_node** %var.addr, align 8, !dbg !16543
  %base44 = bitcast %union.tree_node* %16 to %struct.tree_base*, !dbg !16543
  %17 = bitcast %struct.tree_base* %base44 to i64*, !dbg !16543
  %bf.load45 = load i64, i64* %17, align 8, !dbg !16543
  %bf.lshr46 = lshr i64 %bf.load45, 18, !dbg !16543
  %bf.clear47 = and i64 %bf.lshr46, 1, !dbg !16543
  %bf.cast48 = trunc i64 %bf.clear47 to i32, !dbg !16543
  %tobool49 = icmp ne i32 %bf.cast48, 0, !dbg !16542
  br label %lor.end, !dbg !16542

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false36, %land.rhs
  %18 = phi i1 [ true, %lor.lhs.false36 ], [ true, %land.rhs ], [ %tobool49, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %land.lhs.true24, %entry
  %19 = phi i1 [ false, %land.lhs.true24 ], [ false, %entry ], [ %18, %lor.end ], !dbg !16544
  %land.ext = zext i1 %19 to i32, !dbg !16538
  %conv = trunc i32 %land.ext to i8, !dbg !16545
  ret i8 %conv, !dbg !16546
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @is_global_var(%union.tree_node* %t) #0 !dbg !16547 {
entry:
  %t.addr = alloca %union.tree_node*, align 8
  store %union.tree_node* %t, %union.tree_node** %t.addr, align 8
  call void @llvm.dbg.declare(metadata %union.tree_node** %t.addr, metadata !16548, metadata !DIExpression()), !dbg !16549
  %0 = load %union.tree_node*, %union.tree_node** %t.addr, align 8, !dbg !16550
  %base = bitcast %union.tree_node* %0 to %struct.tree_base*, !dbg !16550
  %1 = bitcast %struct.tree_base* %base to i64*, !dbg !16550
  %bf.load = load i64, i64* %1, align 8, !dbg !16550
  %bf.lshr = lshr i64 %bf.load, 26, !dbg !16550
  %bf.clear = and i64 %bf.lshr, 1, !dbg !16550
  %bf.cast = trunc i64 %bf.clear to i32, !dbg !16550
  %tobool = icmp ne i32 %bf.cast, 0, !dbg !16550
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !16551

lor.rhs:                                          ; preds = %entry
  %2 = load %union.tree_node*, %union.tree_node** %t.addr, align 8, !dbg !16552
  %decl_common = bitcast %union.tree_node* %2 to %struct.tree_decl_common*, !dbg !16552
  %decl_flag_1 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %decl_common, i32 0, i32 2, !dbg !16552
  %3 = bitcast i40* %decl_flag_1 to i64*, !dbg !16552
  %bf.load1 = load i64, i64* %3, align 8, !dbg !16552
  %bf.lshr2 = lshr i64 %bf.load1, 25, !dbg !16552
  %bf.clear3 = and i64 %bf.lshr2, 1, !dbg !16552
  %bf.cast4 = trunc i64 %bf.clear3 to i32, !dbg !16552
  %tobool5 = icmp ne i32 %bf.cast4, 0, !dbg !16551
  br label %lor.end, !dbg !16551

lor.end:                                          ; preds = %lor.rhs, %entry
  %4 = phi i1 [ true, %entry ], [ %tobool5, %lor.rhs ]
  %lor.ext = zext i1 %4 to i32, !dbg !16551
  %conv = trunc i32 %lor.ext to i8, !dbg !16553
  ret i8 %conv, !dbg !16554
}

declare dso_local i32 @fputs(i8*, %struct._IO_FILE*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @get_init_value(%struct.dataflow_set_def* %set, %struct.rtx_def* %loc, i8* %dv) #0 !dbg !16555 {
entry:
  %retval = alloca i32, align 4
  %set.addr = alloca %struct.dataflow_set_def*, align 8
  %loc.addr = alloca %struct.rtx_def*, align 8
  %dv.addr = alloca i8*, align 8
  %var = alloca %struct.variable_def*, align 8
  %i = alloca i32, align 4
  %ret_val = alloca i32, align 4
  %nextp = alloca %struct.location_chain_def*, align 8
  store %struct.dataflow_set_def* %set, %struct.dataflow_set_def** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %set.addr, metadata !16558, metadata !DIExpression()), !dbg !16559
  store %struct.rtx_def* %loc, %struct.rtx_def** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %loc.addr, metadata !16560, metadata !DIExpression()), !dbg !16561
  store i8* %dv, i8** %dv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dv.addr, metadata !16562, metadata !DIExpression()), !dbg !16563
  call void @llvm.dbg.declare(metadata %struct.variable_def** %var, metadata !16564, metadata !DIExpression()), !dbg !16565
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16566, metadata !DIExpression()), !dbg !16567
  call void @llvm.dbg.declare(metadata i32* %ret_val, metadata !16568, metadata !DIExpression()), !dbg !16569
  store i32 0, i32* %ret_val, align 4, !dbg !16569
  %0 = load i32, i32* @flag_var_tracking_uninit, align 4, !dbg !16570
  %tobool = icmp ne i32 %0, 0, !dbg !16570
  br i1 %tobool, label %if.end, label %if.then, !dbg !16572

if.then:                                          ; preds = %entry
  store i32 2, i32* %retval, align 4, !dbg !16573
  br label %return, !dbg !16573

if.end:                                           ; preds = %entry
  %1 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !16574
  %vars = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %1, i32 0, i32 2, !dbg !16575
  %2 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars, align 8, !dbg !16575
  %3 = load i8*, i8** %dv.addr, align 8, !dbg !16576
  %call = call %struct.variable_def* @shared_hash_find(%struct.shared_hash_def* %2, i8* %3), !dbg !16577
  store %struct.variable_def* %call, %struct.variable_def** %var, align 8, !dbg !16578
  %4 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !16579
  %tobool1 = icmp ne %struct.variable_def* %4, null, !dbg !16579
  br i1 %tobool1, label %if.then2, label %if.end16, !dbg !16581

if.then2:                                         ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !16582
  br label %for.cond, !dbg !16585

for.cond:                                         ; preds = %for.inc14, %if.then2
  %5 = load i32, i32* %i, align 4, !dbg !16586
  %6 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !16588
  %n_var_parts = getelementptr inbounds %struct.variable_def, %struct.variable_def* %6, i32 0, i32 2, !dbg !16589
  %7 = load i8, i8* %n_var_parts, align 4, !dbg !16589
  %conv = sext i8 %7 to i32, !dbg !16588
  %cmp = icmp slt i32 %5, %conv, !dbg !16590
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !16591

land.rhs:                                         ; preds = %for.cond
  %8 = load i32, i32* %ret_val, align 4, !dbg !16592
  %cmp4 = icmp eq i32 %8, 0, !dbg !16593
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %9 = phi i1 [ false, %for.cond ], [ %cmp4, %land.rhs ], !dbg !16594
  br i1 %9, label %for.body, label %for.end15, !dbg !16595

for.body:                                         ; preds = %land.end
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %nextp, metadata !16596, metadata !DIExpression()), !dbg !16598
  %10 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !16599
  %var_part = getelementptr inbounds %struct.variable_def, %struct.variable_def* %10, i32 0, i32 5, !dbg !16601
  %11 = load i32, i32* %i, align 4, !dbg !16602
  %idxprom = sext i32 %11 to i64, !dbg !16599
  %arrayidx = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part, i64 0, i64 %idxprom, !dbg !16599
  %loc_chain = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx, i32 0, i32 0, !dbg !16603
  %12 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain, align 8, !dbg !16603
  store %struct.location_chain_def* %12, %struct.location_chain_def** %nextp, align 8, !dbg !16604
  br label %for.cond6, !dbg !16605

for.cond6:                                        ; preds = %for.inc, %for.body
  %13 = load %struct.location_chain_def*, %struct.location_chain_def** %nextp, align 8, !dbg !16606
  %tobool7 = icmp ne %struct.location_chain_def* %13, null, !dbg !16608
  br i1 %tobool7, label %for.body8, label %for.end, !dbg !16608

for.body8:                                        ; preds = %for.cond6
  %14 = load %struct.location_chain_def*, %struct.location_chain_def** %nextp, align 8, !dbg !16609
  %loc9 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %14, i32 0, i32 1, !dbg !16611
  %15 = load %struct.rtx_def*, %struct.rtx_def** %loc9, align 8, !dbg !16611
  %16 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !16612
  %call10 = call i32 @rtx_equal_p(%struct.rtx_def* %15, %struct.rtx_def* %16), !dbg !16613
  %tobool11 = icmp ne i32 %call10, 0, !dbg !16613
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !16614

if.then12:                                        ; preds = %for.body8
  %17 = load %struct.location_chain_def*, %struct.location_chain_def** %nextp, align 8, !dbg !16615
  %init = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %17, i32 0, i32 3, !dbg !16617
  %18 = load i32, i32* %init, align 8, !dbg !16617
  store i32 %18, i32* %ret_val, align 4, !dbg !16618
  br label %for.end, !dbg !16619

if.end13:                                         ; preds = %for.body8
  br label %for.inc, !dbg !16620

for.inc:                                          ; preds = %if.end13
  %19 = load %struct.location_chain_def*, %struct.location_chain_def** %nextp, align 8, !dbg !16621
  %next = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %19, i32 0, i32 0, !dbg !16622
  %20 = load %struct.location_chain_def*, %struct.location_chain_def** %next, align 8, !dbg !16622
  store %struct.location_chain_def* %20, %struct.location_chain_def** %nextp, align 8, !dbg !16623
  br label %for.cond6, !dbg !16624, !llvm.loop !16625

for.end:                                          ; preds = %if.then12, %for.cond6
  br label %for.inc14, !dbg !16627

for.inc14:                                        ; preds = %for.end
  %21 = load i32, i32* %i, align 4, !dbg !16628
  %inc = add nsw i32 %21, 1, !dbg !16628
  store i32 %inc, i32* %i, align 4, !dbg !16628
  br label %for.cond, !dbg !16629, !llvm.loop !16630

for.end15:                                        ; preds = %land.end
  br label %if.end16, !dbg !16632

if.end16:                                         ; preds = %for.end15, %if.end
  %22 = load i32, i32* %ret_val, align 4, !dbg !16633
  store i32 %22, i32* %retval, align 4, !dbg !16634
  br label %return, !dbg !16634

return:                                           ; preds = %if.end16, %if.then
  %23 = load i32, i32* %retval, align 4, !dbg !16635
  ret i32 %23, !dbg !16635
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @dataflow_set_different_1(i8** %slot, i8* %data) #0 !dbg !16636 {
entry:
  %retval = alloca i32, align 4
  %slot.addr = alloca i8**, align 8
  %data.addr = alloca i8*, align 8
  %htab = alloca %struct.htab*, align 8
  %var1 = alloca %struct.variable_def*, align 8
  %var2 = alloca %struct.variable_def*, align 8
  store i8** %slot, i8*** %slot.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %slot.addr, metadata !16637, metadata !DIExpression()), !dbg !16638
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !16639, metadata !DIExpression()), !dbg !16640
  call void @llvm.dbg.declare(metadata %struct.htab** %htab, metadata !16641, metadata !DIExpression()), !dbg !16642
  %0 = load i8*, i8** %data.addr, align 8, !dbg !16643
  %1 = bitcast i8* %0 to %struct.htab*, !dbg !16644
  store %struct.htab* %1, %struct.htab** %htab, align 8, !dbg !16642
  call void @llvm.dbg.declare(metadata %struct.variable_def** %var1, metadata !16645, metadata !DIExpression()), !dbg !16646
  call void @llvm.dbg.declare(metadata %struct.variable_def** %var2, metadata !16647, metadata !DIExpression()), !dbg !16648
  %2 = load i8**, i8*** %slot.addr, align 8, !dbg !16649
  %3 = load i8*, i8** %2, align 8, !dbg !16650
  %4 = bitcast i8* %3 to %struct.variable_def*, !dbg !16651
  store %struct.variable_def* %4, %struct.variable_def** %var1, align 8, !dbg !16652
  %5 = load %struct.htab*, %struct.htab** %htab, align 8, !dbg !16653
  %6 = load %struct.variable_def*, %struct.variable_def** %var1, align 8, !dbg !16654
  %dv = getelementptr inbounds %struct.variable_def, %struct.variable_def* %6, i32 0, i32 0, !dbg !16655
  %7 = load i8*, i8** %dv, align 8, !dbg !16655
  %8 = load %struct.variable_def*, %struct.variable_def** %var1, align 8, !dbg !16656
  %dv1 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %8, i32 0, i32 0, !dbg !16657
  %9 = load i8*, i8** %dv1, align 8, !dbg !16657
  %call = call i32 @dv_htab_hash(i8* %9), !dbg !16658
  %call2 = call i8* @htab_find_with_hash(%struct.htab* %5, i8* %7, i32 %call), !dbg !16659
  %10 = bitcast i8* %call2 to %struct.variable_def*, !dbg !16660
  store %struct.variable_def* %10, %struct.variable_def** %var2, align 8, !dbg !16661
  %11 = load %struct.variable_def*, %struct.variable_def** %var2, align 8, !dbg !16662
  %tobool = icmp ne %struct.variable_def* %11, null, !dbg !16662
  br i1 %tobool, label %if.end7, label %if.then, !dbg !16664

if.then:                                          ; preds = %entry
  store i8 1, i8* @dataflow_set_different_value, align 1, !dbg !16665
  %12 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !16667
  %tobool3 = icmp ne %struct._IO_FILE* %12, null, !dbg !16667
  br i1 %tobool3, label %land.lhs.true, label %if.end, !dbg !16669

land.lhs.true:                                    ; preds = %if.then
  %13 = load i32, i32* @dump_flags, align 4, !dbg !16670
  %and = and i32 %13, 8, !dbg !16671
  %tobool4 = icmp ne i32 %and, 0, !dbg !16671
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !16672

if.then5:                                         ; preds = %land.lhs.true
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !16673
  %call6 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.34, i64 0, i64 0)), !dbg !16675
  %15 = load %struct.variable_def*, %struct.variable_def** %var1, align 8, !dbg !16676
  call void @dump_var(%struct.variable_def* %15), !dbg !16677
  br label %if.end, !dbg !16678

if.end:                                           ; preds = %if.then5, %land.lhs.true, %if.then
  store i32 0, i32* %retval, align 4, !dbg !16679
  br label %return, !dbg !16679

if.end7:                                          ; preds = %entry
  %16 = load %struct.variable_def*, %struct.variable_def** %var1, align 8, !dbg !16680
  %17 = load %struct.variable_def*, %struct.variable_def** %var2, align 8, !dbg !16682
  %call8 = call zeroext i8 @variable_different_p(%struct.variable_def* %16, %struct.variable_def* %17), !dbg !16683
  %tobool9 = icmp ne i8 %call8, 0, !dbg !16683
  br i1 %tobool9, label %if.then10, label %if.end18, !dbg !16684

if.then10:                                        ; preds = %if.end7
  store i8 1, i8* @dataflow_set_different_value, align 1, !dbg !16685
  %18 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !16687
  %tobool11 = icmp ne %struct._IO_FILE* %18, null, !dbg !16687
  br i1 %tobool11, label %land.lhs.true12, label %if.end17, !dbg !16689

land.lhs.true12:                                  ; preds = %if.then10
  %19 = load i32, i32* @dump_flags, align 4, !dbg !16690
  %and13 = and i32 %19, 8, !dbg !16691
  %tobool14 = icmp ne i32 %and13, 0, !dbg !16691
  br i1 %tobool14, label %if.then15, label %if.end17, !dbg !16692

if.then15:                                        ; preds = %land.lhs.true12
  %20 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !16693
  %call16 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %20, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.35, i64 0, i64 0)), !dbg !16695
  %21 = load %struct.variable_def*, %struct.variable_def** %var1, align 8, !dbg !16696
  call void @dump_var(%struct.variable_def* %21), !dbg !16697
  %22 = load %struct.variable_def*, %struct.variable_def** %var2, align 8, !dbg !16698
  call void @dump_var(%struct.variable_def* %22), !dbg !16699
  br label %if.end17, !dbg !16700

if.end17:                                         ; preds = %if.then15, %land.lhs.true12, %if.then10
  store i32 0, i32* %retval, align 4, !dbg !16701
  br label %return, !dbg !16701

if.end18:                                         ; preds = %if.end7
  store i32 1, i32* %retval, align 4, !dbg !16702
  br label %return, !dbg !16702

return:                                           ; preds = %if.end18, %if.end17, %if.end
  %23 = load i32, i32* %retval, align 4, !dbg !16703
  ret i32 %23, !dbg !16703
}

; Function Attrs: noinline nounwind uwtable
define internal void @dump_var(%struct.variable_def* %var) #0 !dbg !16704 {
entry:
  %var.addr = alloca %struct.variable_def*, align 8
  %i = alloca i32, align 4
  %node = alloca %struct.location_chain_def*, align 8
  %decl = alloca %union.tree_node*, align 8
  store %struct.variable_def* %var, %struct.variable_def** %var.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.variable_def** %var.addr, metadata !16705, metadata !DIExpression()), !dbg !16706
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16707, metadata !DIExpression()), !dbg !16708
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %node, metadata !16709, metadata !DIExpression()), !dbg !16710
  %0 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !16711
  %dv = getelementptr inbounds %struct.variable_def, %struct.variable_def* %0, i32 0, i32 0, !dbg !16713
  %1 = load i8*, i8** %dv, align 8, !dbg !16713
  %call = call zeroext i8 @dv_is_decl_p(i8* %1), !dbg !16714
  %tobool = icmp ne i8 %call, 0, !dbg !16714
  br i1 %tobool, label %if.then, label %if.else23, !dbg !16715

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %union.tree_node** %decl, metadata !16716, metadata !DIExpression()), !dbg !16718
  %2 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !16719
  %dv1 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %2, i32 0, i32 0, !dbg !16720
  %3 = load i8*, i8** %dv1, align 8, !dbg !16720
  %call2 = call %union.tree_node* @dv_as_decl(i8* %3), !dbg !16721
  store %union.tree_node* %call2, %union.tree_node** %decl, align 8, !dbg !16718
  %4 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !16722
  %decl_minimal = bitcast %union.tree_node* %4 to %struct.tree_decl_minimal*, !dbg !16722
  %name = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %decl_minimal, i32 0, i32 3, !dbg !16722
  %5 = load %union.tree_node*, %union.tree_node** %name, align 8, !dbg !16722
  %tobool3 = icmp ne %union.tree_node* %5, null, !dbg !16722
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !16724

if.then4:                                         ; preds = %if.then
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !16725
  %7 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !16727
  %decl_minimal5 = bitcast %union.tree_node* %7 to %struct.tree_decl_minimal*, !dbg !16727
  %name6 = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %decl_minimal5, i32 0, i32 3, !dbg !16727
  %8 = load %union.tree_node*, %union.tree_node** %name6, align 8, !dbg !16727
  %identifier = bitcast %union.tree_node* %8 to %struct.tree_identifier*, !dbg !16727
  %id = getelementptr inbounds %struct.tree_identifier, %struct.tree_identifier* %identifier, i32 0, i32 1, !dbg !16727
  %str = getelementptr inbounds %struct.ht_identifier, %struct.ht_identifier* %id, i32 0, i32 0, !dbg !16727
  %9 = load i8*, i8** %str, align 8, !dbg !16727
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %6, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.36, i64 0, i64 0), i8* %9), !dbg !16728
  %10 = load i32, i32* @dump_flags, align 4, !dbg !16729
  %and = and i32 %10, 256, !dbg !16731
  %tobool8 = icmp ne i32 %and, 0, !dbg !16731
  br i1 %tobool8, label %if.then9, label %if.end, !dbg !16732

if.then9:                                         ; preds = %if.then4
  %11 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !16733
  %12 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !16734
  %decl_minimal10 = bitcast %union.tree_node* %12 to %struct.tree_decl_minimal*, !dbg !16734
  %uid = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %decl_minimal10, i32 0, i32 2, !dbg !16734
  %13 = load i32, i32* %uid, align 4, !dbg !16734
  %call11 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %11, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.37, i64 0, i64 0), i32 %13), !dbg !16735
  br label %if.end, !dbg !16735

if.end:                                           ; preds = %if.then9, %if.then4
  br label %if.end21, !dbg !16736

if.else:                                          ; preds = %if.then
  %14 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !16737
  %base = bitcast %union.tree_node* %14 to %struct.tree_base*, !dbg !16737
  %15 = bitcast %struct.tree_base* %base to i64*, !dbg !16737
  %bf.load = load i64, i64* %15, align 8, !dbg !16737
  %bf.clear = and i64 %bf.load, 65535, !dbg !16737
  %bf.cast = trunc i64 %bf.clear to i32, !dbg !16737
  %cmp = icmp eq i32 %bf.cast, 37, !dbg !16739
  br i1 %cmp, label %if.then12, label %if.else16, !dbg !16740

if.then12:                                        ; preds = %if.else
  %16 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !16741
  %17 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !16742
  %decl_minimal13 = bitcast %union.tree_node* %17 to %struct.tree_decl_minimal*, !dbg !16742
  %uid14 = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %decl_minimal13, i32 0, i32 2, !dbg !16742
  %18 = load i32, i32* %uid14, align 4, !dbg !16742
  %sub = sub i32 0, %18, !dbg !16742
  %call15 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %16, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.38, i64 0, i64 0), i32 %sub), !dbg !16743
  br label %if.end20, !dbg !16743

if.else16:                                        ; preds = %if.else
  %19 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !16744
  %20 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !16745
  %decl_minimal17 = bitcast %union.tree_node* %20 to %struct.tree_decl_minimal*, !dbg !16745
  %uid18 = getelementptr inbounds %struct.tree_decl_minimal, %struct.tree_decl_minimal* %decl_minimal17, i32 0, i32 2, !dbg !16745
  %21 = load i32, i32* %uid18, align 4, !dbg !16745
  %call19 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %19, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.39, i64 0, i64 0), i32 %21), !dbg !16746
  br label %if.end20

if.end20:                                         ; preds = %if.else16, %if.then12
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.end
  %22 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !16747
  %call22 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %22, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.33, i64 0, i64 0)), !dbg !16748
  br label %if.end28, !dbg !16749

if.else23:                                        ; preds = %entry
  %23 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !16750
  %call24 = call i32 @fputc(i32 32, %struct._IO_FILE* %23), !dbg !16752
  %24 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !16753
  %25 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !16754
  %dv25 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %25, i32 0, i32 0, !dbg !16755
  %26 = load i8*, i8** %dv25, align 8, !dbg !16755
  %call26 = call %struct.rtx_def* @dv_as_value(i8* %26), !dbg !16756
  %call27 = call i32 @print_rtl_single(%struct._IO_FILE* %24, %struct.rtx_def* %call26), !dbg !16757
  br label %if.end28

if.end28:                                         ; preds = %if.else23, %if.end21
  store i32 0, i32* %i, align 4, !dbg !16758
  br label %for.cond, !dbg !16760

for.cond:                                         ; preds = %for.inc45, %if.end28
  %27 = load i32, i32* %i, align 4, !dbg !16761
  %28 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !16763
  %n_var_parts = getelementptr inbounds %struct.variable_def, %struct.variable_def* %28, i32 0, i32 2, !dbg !16764
  %29 = load i8, i8* %n_var_parts, align 4, !dbg !16764
  %conv = sext i8 %29 to i32, !dbg !16763
  %cmp29 = icmp slt i32 %27, %conv, !dbg !16765
  br i1 %cmp29, label %for.body, label %for.end46, !dbg !16766

for.body:                                         ; preds = %for.cond
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !16767
  %31 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !16769
  %var_part = getelementptr inbounds %struct.variable_def, %struct.variable_def* %31, i32 0, i32 5, !dbg !16770
  %32 = load i32, i32* %i, align 4, !dbg !16771
  %idxprom = sext i32 %32 to i64, !dbg !16769
  %arrayidx = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part, i64 0, i64 %idxprom, !dbg !16769
  %offset = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx, i32 0, i32 2, !dbg !16772
  %33 = load i64, i64* %offset, align 8, !dbg !16772
  %call31 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %30, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.40, i64 0, i64 0), i64 %33), !dbg !16773
  %34 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !16774
  %var_part32 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %34, i32 0, i32 5, !dbg !16776
  %35 = load i32, i32* %i, align 4, !dbg !16777
  %idxprom33 = sext i32 %35 to i64, !dbg !16774
  %arrayidx34 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part32, i64 0, i64 %idxprom33, !dbg !16774
  %loc_chain = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx34, i32 0, i32 0, !dbg !16778
  %36 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain, align 8, !dbg !16778
  store %struct.location_chain_def* %36, %struct.location_chain_def** %node, align 8, !dbg !16779
  br label %for.cond35, !dbg !16780

for.cond35:                                       ; preds = %for.inc, %for.body
  %37 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !16781
  %tobool36 = icmp ne %struct.location_chain_def* %37, null, !dbg !16783
  br i1 %tobool36, label %for.body37, label %for.end, !dbg !16783

for.body37:                                       ; preds = %for.cond35
  %38 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !16784
  %call38 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %38, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.41, i64 0, i64 0)), !dbg !16786
  %39 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !16787
  %init = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %39, i32 0, i32 3, !dbg !16789
  %40 = load i32, i32* %init, align 8, !dbg !16789
  %cmp39 = icmp eq i32 %40, 1, !dbg !16790
  br i1 %cmp39, label %if.then41, label %if.end43, !dbg !16791

if.then41:                                        ; preds = %for.body37
  %41 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !16792
  %call42 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %41, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.42, i64 0, i64 0)), !dbg !16793
  br label %if.end43, !dbg !16793

if.end43:                                         ; preds = %if.then41, %for.body37
  %42 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !16794
  %43 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !16795
  %loc = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %43, i32 0, i32 1, !dbg !16796
  %44 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !16796
  %call44 = call i32 @print_rtl_single(%struct._IO_FILE* %42, %struct.rtx_def* %44), !dbg !16797
  br label %for.inc, !dbg !16798

for.inc:                                          ; preds = %if.end43
  %45 = load %struct.location_chain_def*, %struct.location_chain_def** %node, align 8, !dbg !16799
  %next = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %45, i32 0, i32 0, !dbg !16800
  %46 = load %struct.location_chain_def*, %struct.location_chain_def** %next, align 8, !dbg !16800
  store %struct.location_chain_def* %46, %struct.location_chain_def** %node, align 8, !dbg !16801
  br label %for.cond35, !dbg !16802, !llvm.loop !16803

for.end:                                          ; preds = %for.cond35
  br label %for.inc45, !dbg !16805

for.inc45:                                        ; preds = %for.end
  %47 = load i32, i32* %i, align 4, !dbg !16806
  %inc = add nsw i32 %47, 1, !dbg !16806
  store i32 %inc, i32* %i, align 4, !dbg !16806
  br label %for.cond, !dbg !16807, !llvm.loop !16808

for.end46:                                        ; preds = %for.cond
  ret void, !dbg !16810
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @variable_different_p(%struct.variable_def* %var1, %struct.variable_def* %var2) #0 !dbg !16811 {
entry:
  %retval = alloca i8, align 1
  %var1.addr = alloca %struct.variable_def*, align 8
  %var2.addr = alloca %struct.variable_def*, align 8
  %i = alloca i32, align 4
  store %struct.variable_def* %var1, %struct.variable_def** %var1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.variable_def** %var1.addr, metadata !16812, metadata !DIExpression()), !dbg !16813
  store %struct.variable_def* %var2, %struct.variable_def** %var2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.variable_def** %var2.addr, metadata !16814, metadata !DIExpression()), !dbg !16815
  call void @llvm.dbg.declare(metadata i32* %i, metadata !16816, metadata !DIExpression()), !dbg !16817
  %0 = load %struct.variable_def*, %struct.variable_def** %var1.addr, align 8, !dbg !16818
  %1 = load %struct.variable_def*, %struct.variable_def** %var2.addr, align 8, !dbg !16820
  %cmp = icmp eq %struct.variable_def* %0, %1, !dbg !16821
  br i1 %cmp, label %if.then, label %if.end, !dbg !16822

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !16823
  br label %return, !dbg !16823

if.end:                                           ; preds = %entry
  %2 = load %struct.variable_def*, %struct.variable_def** %var1.addr, align 8, !dbg !16824
  %n_var_parts = getelementptr inbounds %struct.variable_def, %struct.variable_def* %2, i32 0, i32 2, !dbg !16826
  %3 = load i8, i8* %n_var_parts, align 4, !dbg !16826
  %conv = sext i8 %3 to i32, !dbg !16824
  %4 = load %struct.variable_def*, %struct.variable_def** %var2.addr, align 8, !dbg !16827
  %n_var_parts1 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %4, i32 0, i32 2, !dbg !16828
  %5 = load i8, i8* %n_var_parts1, align 4, !dbg !16828
  %conv2 = sext i8 %5 to i32, !dbg !16827
  %cmp3 = icmp ne i32 %conv, %conv2, !dbg !16829
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !16830

if.then5:                                         ; preds = %if.end
  store i8 1, i8* %retval, align 1, !dbg !16831
  br label %return, !dbg !16831

if.end6:                                          ; preds = %if.end
  store i32 0, i32* %i, align 4, !dbg !16832
  br label %for.cond, !dbg !16834

for.cond:                                         ; preds = %for.inc, %if.end6
  %6 = load i32, i32* %i, align 4, !dbg !16835
  %7 = load %struct.variable_def*, %struct.variable_def** %var1.addr, align 8, !dbg !16837
  %n_var_parts7 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %7, i32 0, i32 2, !dbg !16838
  %8 = load i8, i8* %n_var_parts7, align 4, !dbg !16838
  %conv8 = sext i8 %8 to i32, !dbg !16837
  %cmp9 = icmp slt i32 %6, %conv8, !dbg !16839
  br i1 %cmp9, label %for.body, label %for.end, !dbg !16840

for.body:                                         ; preds = %for.cond
  %9 = load %struct.variable_def*, %struct.variable_def** %var1.addr, align 8, !dbg !16841
  %var_part = getelementptr inbounds %struct.variable_def, %struct.variable_def* %9, i32 0, i32 5, !dbg !16844
  %10 = load i32, i32* %i, align 4, !dbg !16845
  %idxprom = sext i32 %10 to i64, !dbg !16841
  %arrayidx = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part, i64 0, i64 %idxprom, !dbg !16841
  %offset = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx, i32 0, i32 2, !dbg !16846
  %11 = load i64, i64* %offset, align 8, !dbg !16846
  %12 = load %struct.variable_def*, %struct.variable_def** %var2.addr, align 8, !dbg !16847
  %var_part11 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %12, i32 0, i32 5, !dbg !16848
  %13 = load i32, i32* %i, align 4, !dbg !16849
  %idxprom12 = sext i32 %13 to i64, !dbg !16847
  %arrayidx13 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part11, i64 0, i64 %idxprom12, !dbg !16847
  %offset14 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx13, i32 0, i32 2, !dbg !16850
  %14 = load i64, i64* %offset14, align 8, !dbg !16850
  %cmp15 = icmp ne i64 %11, %14, !dbg !16851
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !16852

if.then17:                                        ; preds = %for.body
  store i8 1, i8* %retval, align 1, !dbg !16853
  br label %return, !dbg !16853

if.end18:                                         ; preds = %for.body
  %15 = load i32, i32* %i, align 4, !dbg !16854
  %cmp19 = icmp eq i32 %15, 0, !dbg !16856
  br i1 %cmp19, label %land.lhs.true, label %if.end45, !dbg !16857

land.lhs.true:                                    ; preds = %if.end18
  %16 = load %struct.variable_def*, %struct.variable_def** %var1.addr, align 8, !dbg !16858
  %var_part21 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %16, i32 0, i32 5, !dbg !16859
  %17 = load i32, i32* %i, align 4, !dbg !16860
  %idxprom22 = sext i32 %17 to i64, !dbg !16858
  %arrayidx23 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part21, i64 0, i64 %idxprom22, !dbg !16858
  %offset24 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx23, i32 0, i32 2, !dbg !16861
  %18 = load i64, i64* %offset24, align 8, !dbg !16861
  %cmp25 = icmp eq i64 %18, 0, !dbg !16862
  br i1 %cmp25, label %land.lhs.true27, label %if.end45, !dbg !16863

land.lhs.true27:                                  ; preds = %land.lhs.true
  %19 = load %struct.variable_def*, %struct.variable_def** %var1.addr, align 8, !dbg !16864
  %dv = getelementptr inbounds %struct.variable_def, %struct.variable_def* %19, i32 0, i32 0, !dbg !16865
  %20 = load i8*, i8** %dv, align 8, !dbg !16865
  %call = call zeroext i8 @dv_onepart_p(i8* %20), !dbg !16866
  %conv28 = zext i8 %call to i32, !dbg !16866
  %tobool = icmp ne i32 %conv28, 0, !dbg !16866
  br i1 %tobool, label %if.then29, label %if.end45, !dbg !16867

if.then29:                                        ; preds = %land.lhs.true27
  %21 = load %struct.variable_def*, %struct.variable_def** %var1.addr, align 8, !dbg !16868
  %n_var_parts30 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %21, i32 0, i32 2, !dbg !16868
  %22 = load i8, i8* %n_var_parts30, align 4, !dbg !16868
  %conv31 = sext i8 %22 to i32, !dbg !16868
  %cmp32 = icmp eq i32 %conv31, 1, !dbg !16868
  br i1 %cmp32, label %cond.false, label %cond.true, !dbg !16868

cond.true:                                        ; preds = %if.then29
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 4354, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !16868
  br label %cond.end, !dbg !16868

cond.false:                                       ; preds = %if.then29
  br label %cond.end, !dbg !16868

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !16868
  %23 = load %struct.variable_def*, %struct.variable_def** %var1.addr, align 8, !dbg !16870
  %dv34 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %23, i32 0, i32 0, !dbg !16870
  %24 = load i8*, i8** %dv34, align 8, !dbg !16870
  %call35 = call i8* @dv_as_opaque(i8* %24), !dbg !16870
  %25 = load %struct.variable_def*, %struct.variable_def** %var2.addr, align 8, !dbg !16870
  %dv36 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %25, i32 0, i32 0, !dbg !16870
  %26 = load i8*, i8** %dv36, align 8, !dbg !16870
  %call37 = call i8* @dv_as_opaque(i8* %26), !dbg !16870
  %cmp38 = icmp eq i8* %call35, %call37, !dbg !16870
  br i1 %cmp38, label %cond.false41, label %cond.true40, !dbg !16870

cond.true40:                                      ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 4355, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !16870
  br label %cond.end42, !dbg !16870

cond.false41:                                     ; preds = %cond.end
  br label %cond.end42, !dbg !16870

cond.end42:                                       ; preds = %cond.false41, %cond.true40
  %cond43 = phi i32 [ 0, %cond.true40 ], [ 0, %cond.false41 ], !dbg !16870
  %27 = load %struct.variable_def*, %struct.variable_def** %var1.addr, align 8, !dbg !16871
  %28 = load %struct.variable_def*, %struct.variable_def** %var2.addr, align 8, !dbg !16872
  %call44 = call zeroext i8 @onepart_variable_different_p(%struct.variable_def* %27, %struct.variable_def* %28), !dbg !16873
  store i8 %call44, i8* %retval, align 1, !dbg !16874
  br label %return, !dbg !16874

if.end45:                                         ; preds = %land.lhs.true27, %land.lhs.true, %if.end18
  %29 = load %struct.variable_def*, %struct.variable_def** %var1.addr, align 8, !dbg !16875
  %var_part46 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %29, i32 0, i32 5, !dbg !16877
  %30 = load i32, i32* %i, align 4, !dbg !16878
  %idxprom47 = sext i32 %30 to i64, !dbg !16875
  %arrayidx48 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part46, i64 0, i64 %idxprom47, !dbg !16875
  %31 = load %struct.variable_def*, %struct.variable_def** %var2.addr, align 8, !dbg !16879
  %var_part49 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %31, i32 0, i32 5, !dbg !16880
  %32 = load i32, i32* %i, align 4, !dbg !16881
  %idxprom50 = sext i32 %32 to i64, !dbg !16879
  %arrayidx51 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part49, i64 0, i64 %idxprom50, !dbg !16879
  %call52 = call zeroext i8 @variable_part_different_p(%struct.variable_part_def* %arrayidx48, %struct.variable_part_def* %arrayidx51), !dbg !16882
  %tobool53 = icmp ne i8 %call52, 0, !dbg !16882
  br i1 %tobool53, label %if.then54, label %if.end55, !dbg !16883

if.then54:                                        ; preds = %if.end45
  store i8 1, i8* %retval, align 1, !dbg !16884
  br label %return, !dbg !16884

if.end55:                                         ; preds = %if.end45
  %33 = load %struct.variable_def*, %struct.variable_def** %var2.addr, align 8, !dbg !16885
  %var_part56 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %33, i32 0, i32 5, !dbg !16887
  %34 = load i32, i32* %i, align 4, !dbg !16888
  %idxprom57 = sext i32 %34 to i64, !dbg !16885
  %arrayidx58 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part56, i64 0, i64 %idxprom57, !dbg !16885
  %35 = load %struct.variable_def*, %struct.variable_def** %var1.addr, align 8, !dbg !16889
  %var_part59 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %35, i32 0, i32 5, !dbg !16890
  %36 = load i32, i32* %i, align 4, !dbg !16891
  %idxprom60 = sext i32 %36 to i64, !dbg !16889
  %arrayidx61 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part59, i64 0, i64 %idxprom60, !dbg !16889
  %call62 = call zeroext i8 @variable_part_different_p(%struct.variable_part_def* %arrayidx58, %struct.variable_part_def* %arrayidx61), !dbg !16892
  %tobool63 = icmp ne i8 %call62, 0, !dbg !16892
  br i1 %tobool63, label %if.then64, label %if.end65, !dbg !16893

if.then64:                                        ; preds = %if.end55
  store i8 1, i8* %retval, align 1, !dbg !16894
  br label %return, !dbg !16894

if.end65:                                         ; preds = %if.end55
  br label %for.inc, !dbg !16895

for.inc:                                          ; preds = %if.end65
  %37 = load i32, i32* %i, align 4, !dbg !16896
  %inc = add nsw i32 %37, 1, !dbg !16896
  store i32 %inc, i32* %i, align 4, !dbg !16896
  br label %for.cond, !dbg !16897, !llvm.loop !16898

for.end:                                          ; preds = %for.cond
  store i8 0, i8* %retval, align 1, !dbg !16900
  br label %return, !dbg !16900

return:                                           ; preds = %for.end, %if.then64, %if.then54, %cond.end42, %if.then17, %if.then5, %if.then
  %38 = load i8, i8* %retval, align 1, !dbg !16901
  ret i8 %38, !dbg !16901
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @variable_part_different_p(%struct.variable_part_def* %vp1, %struct.variable_part_def* %vp2) #0 !dbg !16902 {
entry:
  %retval = alloca i8, align 1
  %vp1.addr = alloca %struct.variable_part_def*, align 8
  %vp2.addr = alloca %struct.variable_part_def*, align 8
  %lc1 = alloca %struct.location_chain_def*, align 8
  %lc2 = alloca %struct.location_chain_def*, align 8
  store %struct.variable_part_def* %vp1, %struct.variable_part_def** %vp1.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.variable_part_def** %vp1.addr, metadata !16906, metadata !DIExpression()), !dbg !16907
  store %struct.variable_part_def* %vp2, %struct.variable_part_def** %vp2.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.variable_part_def** %vp2.addr, metadata !16908, metadata !DIExpression()), !dbg !16909
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %lc1, metadata !16910, metadata !DIExpression()), !dbg !16911
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %lc2, metadata !16912, metadata !DIExpression()), !dbg !16913
  %0 = load %struct.variable_part_def*, %struct.variable_part_def** %vp1.addr, align 8, !dbg !16914
  %loc_chain = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %0, i32 0, i32 0, !dbg !16916
  %1 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain, align 8, !dbg !16916
  store %struct.location_chain_def* %1, %struct.location_chain_def** %lc1, align 8, !dbg !16917
  br label %for.cond, !dbg !16918

for.cond:                                         ; preds = %for.inc24, %entry
  %2 = load %struct.location_chain_def*, %struct.location_chain_def** %lc1, align 8, !dbg !16919
  %tobool = icmp ne %struct.location_chain_def* %2, null, !dbg !16921
  br i1 %tobool, label %for.body, label %for.end26, !dbg !16921

for.body:                                         ; preds = %for.cond
  %3 = load %struct.variable_part_def*, %struct.variable_part_def** %vp2.addr, align 8, !dbg !16922
  %loc_chain1 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %3, i32 0, i32 0, !dbg !16925
  %4 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain1, align 8, !dbg !16925
  store %struct.location_chain_def* %4, %struct.location_chain_def** %lc2, align 8, !dbg !16926
  br label %for.cond2, !dbg !16927

for.cond2:                                        ; preds = %for.inc, %for.body
  %5 = load %struct.location_chain_def*, %struct.location_chain_def** %lc2, align 8, !dbg !16928
  %tobool3 = icmp ne %struct.location_chain_def* %5, null, !dbg !16930
  br i1 %tobool3, label %for.body4, label %for.end, !dbg !16930

for.body4:                                        ; preds = %for.cond2
  %6 = load %struct.location_chain_def*, %struct.location_chain_def** %lc1, align 8, !dbg !16931
  %loc = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %6, i32 0, i32 1, !dbg !16931
  %7 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !16931
  %8 = bitcast %struct.rtx_def* %7 to i32*, !dbg !16931
  %bf.load = load i32, i32* %8, align 8, !dbg !16931
  %bf.clear = and i32 %bf.load, 65535, !dbg !16931
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !16931
  br i1 %cmp, label %land.lhs.true, label %if.end14, !dbg !16934

land.lhs.true:                                    ; preds = %for.body4
  %9 = load %struct.location_chain_def*, %struct.location_chain_def** %lc2, align 8, !dbg !16935
  %loc5 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %9, i32 0, i32 1, !dbg !16935
  %10 = load %struct.rtx_def*, %struct.rtx_def** %loc5, align 8, !dbg !16935
  %11 = bitcast %struct.rtx_def* %10 to i32*, !dbg !16935
  %bf.load6 = load i32, i32* %11, align 8, !dbg !16935
  %bf.clear7 = and i32 %bf.load6, 65535, !dbg !16935
  %cmp8 = icmp eq i32 %bf.clear7, 37, !dbg !16935
  br i1 %cmp8, label %if.then, label %if.end14, !dbg !16936

if.then:                                          ; preds = %land.lhs.true
  %12 = load %struct.location_chain_def*, %struct.location_chain_def** %lc1, align 8, !dbg !16937
  %loc9 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %12, i32 0, i32 1, !dbg !16937
  %13 = load %struct.rtx_def*, %struct.rtx_def** %loc9, align 8, !dbg !16937
  %call = call i32 @rhs_regno(%struct.rtx_def* %13), !dbg !16937
  %14 = load %struct.location_chain_def*, %struct.location_chain_def** %lc2, align 8, !dbg !16940
  %loc10 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %14, i32 0, i32 1, !dbg !16940
  %15 = load %struct.rtx_def*, %struct.rtx_def** %loc10, align 8, !dbg !16940
  %call11 = call i32 @rhs_regno(%struct.rtx_def* %15), !dbg !16940
  %cmp12 = icmp eq i32 %call, %call11, !dbg !16941
  br i1 %cmp12, label %if.then13, label %if.end, !dbg !16942

if.then13:                                        ; preds = %if.then
  br label %for.end, !dbg !16943

if.end:                                           ; preds = %if.then
  br label %if.end14, !dbg !16944

if.end14:                                         ; preds = %if.end, %land.lhs.true, %for.body4
  %16 = load %struct.location_chain_def*, %struct.location_chain_def** %lc1, align 8, !dbg !16945
  %loc15 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %16, i32 0, i32 1, !dbg !16947
  %17 = load %struct.rtx_def*, %struct.rtx_def** %loc15, align 8, !dbg !16947
  %18 = load %struct.location_chain_def*, %struct.location_chain_def** %lc2, align 8, !dbg !16948
  %loc16 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %18, i32 0, i32 1, !dbg !16949
  %19 = load %struct.rtx_def*, %struct.rtx_def** %loc16, align 8, !dbg !16949
  %call17 = call i32 @rtx_equal_p(%struct.rtx_def* %17, %struct.rtx_def* %19), !dbg !16950
  %tobool18 = icmp ne i32 %call17, 0, !dbg !16950
  br i1 %tobool18, label %if.then19, label %if.end20, !dbg !16951

if.then19:                                        ; preds = %if.end14
  br label %for.end, !dbg !16952

if.end20:                                         ; preds = %if.end14
  br label %for.inc, !dbg !16953

for.inc:                                          ; preds = %if.end20
  %20 = load %struct.location_chain_def*, %struct.location_chain_def** %lc2, align 8, !dbg !16954
  %next = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %20, i32 0, i32 0, !dbg !16955
  %21 = load %struct.location_chain_def*, %struct.location_chain_def** %next, align 8, !dbg !16955
  store %struct.location_chain_def* %21, %struct.location_chain_def** %lc2, align 8, !dbg !16956
  br label %for.cond2, !dbg !16957, !llvm.loop !16958

for.end:                                          ; preds = %if.then19, %if.then13, %for.cond2
  %22 = load %struct.location_chain_def*, %struct.location_chain_def** %lc2, align 8, !dbg !16960
  %tobool21 = icmp ne %struct.location_chain_def* %22, null, !dbg !16960
  br i1 %tobool21, label %if.end23, label %if.then22, !dbg !16962

if.then22:                                        ; preds = %for.end
  store i8 1, i8* %retval, align 1, !dbg !16963
  br label %return, !dbg !16963

if.end23:                                         ; preds = %for.end
  br label %for.inc24, !dbg !16964

for.inc24:                                        ; preds = %if.end23
  %23 = load %struct.location_chain_def*, %struct.location_chain_def** %lc1, align 8, !dbg !16965
  %next25 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %23, i32 0, i32 0, !dbg !16966
  %24 = load %struct.location_chain_def*, %struct.location_chain_def** %next25, align 8, !dbg !16966
  store %struct.location_chain_def* %24, %struct.location_chain_def** %lc1, align 8, !dbg !16967
  br label %for.cond, !dbg !16968, !llvm.loop !16969

for.end26:                                        ; preds = %for.cond
  store i8 0, i8* %retval, align 1, !dbg !16971
  br label %return, !dbg !16971

return:                                           ; preds = %for.end26, %if.then22
  %25 = load i8, i8* %retval, align 1, !dbg !16972
  ret i8 %25, !dbg !16972
}

; Function Attrs: noinline nounwind uwtable
define internal void @dump_attrs_list(%struct.attrs_def* %list) #0 !dbg !16973 {
entry:
  %list.addr = alloca %struct.attrs_def*, align 8
  store %struct.attrs_def* %list, %struct.attrs_def** %list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.attrs_def** %list.addr, metadata !16976, metadata !DIExpression()), !dbg !16977
  br label %for.cond, !dbg !16978

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.attrs_def*, %struct.attrs_def** %list.addr, align 8, !dbg !16979
  %tobool = icmp ne %struct.attrs_def* %0, null, !dbg !16982
  br i1 %tobool, label %for.body, label %for.end, !dbg !16982

for.body:                                         ; preds = %for.cond
  %1 = load %struct.attrs_def*, %struct.attrs_def** %list.addr, align 8, !dbg !16983
  %dv = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %1, i32 0, i32 2, !dbg !16986
  %2 = load i8*, i8** %dv, align 8, !dbg !16986
  %call = call zeroext i8 @dv_is_decl_p(i8* %2), !dbg !16987
  %tobool1 = icmp ne i8 %call, 0, !dbg !16987
  br i1 %tobool1, label %if.then, label %if.else, !dbg !16988

if.then:                                          ; preds = %for.body
  %3 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !16989
  %4 = load %struct.attrs_def*, %struct.attrs_def** %list.addr, align 8, !dbg !16990
  %dv2 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %4, i32 0, i32 2, !dbg !16991
  %5 = load i8*, i8** %dv2, align 8, !dbg !16991
  %call3 = call %union.tree_node* @dv_as_decl(i8* %5), !dbg !16992
  call void @print_mem_expr(%struct._IO_FILE* %3, %union.tree_node* %call3), !dbg !16993
  br label %if.end, !dbg !16993

if.else:                                          ; preds = %for.body
  %6 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !16994
  %7 = load %struct.attrs_def*, %struct.attrs_def** %list.addr, align 8, !dbg !16995
  %dv4 = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %7, i32 0, i32 2, !dbg !16996
  %8 = load i8*, i8** %dv4, align 8, !dbg !16996
  %call5 = call %struct.rtx_def* @dv_as_value(i8* %8), !dbg !16997
  %call6 = call i32 @print_rtl_single(%struct._IO_FILE* %6, %struct.rtx_def* %call5), !dbg !16998
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %9 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !16999
  %10 = load %struct.attrs_def*, %struct.attrs_def** %list.addr, align 8, !dbg !17000
  %offset = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %10, i32 0, i32 3, !dbg !17001
  %11 = load i64, i64* %offset, align 8, !dbg !17001
  %call7 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.45, i64 0, i64 0), i64 %11), !dbg !17002
  br label %for.inc, !dbg !17003

for.inc:                                          ; preds = %if.end
  %12 = load %struct.attrs_def*, %struct.attrs_def** %list.addr, align 8, !dbg !17004
  %next = getelementptr inbounds %struct.attrs_def, %struct.attrs_def* %12, i32 0, i32 0, !dbg !17005
  %13 = load %struct.attrs_def*, %struct.attrs_def** %next, align 8, !dbg !17005
  store %struct.attrs_def* %13, %struct.attrs_def** %list.addr, align 8, !dbg !17006
  br label %for.cond, !dbg !17007, !llvm.loop !17008

for.end:                                          ; preds = %for.cond
  %14 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !17010
  %call8 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.33, i64 0, i64 0)), !dbg !17011
  ret void, !dbg !17012
}

; Function Attrs: noinline nounwind uwtable
define internal void @dump_vars(%struct.htab* %vars) #0 !dbg !17013 {
entry:
  %vars.addr = alloca %struct.htab*, align 8
  store %struct.htab* %vars, %struct.htab** %vars.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.htab** %vars.addr, metadata !17016, metadata !DIExpression()), !dbg !17017
  %0 = load %struct.htab*, %struct.htab** %vars.addr, align 8, !dbg !17018
  %call = call i64 @htab_elements(%struct.htab* %0), !dbg !17020
  %cmp = icmp ugt i64 %call, 0, !dbg !17021
  br i1 %cmp, label %if.then, label %if.end, !dbg !17022

if.then:                                          ; preds = %entry
  %1 = load %struct._IO_FILE*, %struct._IO_FILE** @dump_file, align 8, !dbg !17023
  %call1 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.46, i64 0, i64 0)), !dbg !17025
  %2 = load %struct.htab*, %struct.htab** %vars.addr, align 8, !dbg !17026
  call void @htab_traverse(%struct.htab* %2, i32 (i8**, i8*)* @dump_var_slot, i8* null), !dbg !17027
  br label %if.end, !dbg !17028

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !17029
}

declare dso_local void @print_mem_expr(%struct._IO_FILE*, %union.tree_node*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @dump_var_slot(i8** %slot, i8* %data) #0 !dbg !17030 {
entry:
  %slot.addr = alloca i8**, align 8
  %data.addr = alloca i8*, align 8
  %var = alloca %struct.variable_def*, align 8
  store i8** %slot, i8*** %slot.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %slot.addr, metadata !17031, metadata !DIExpression()), !dbg !17032
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !17033, metadata !DIExpression()), !dbg !17034
  call void @llvm.dbg.declare(metadata %struct.variable_def** %var, metadata !17035, metadata !DIExpression()), !dbg !17036
  %0 = load i8**, i8*** %slot.addr, align 8, !dbg !17037
  %1 = load i8*, i8** %0, align 8, !dbg !17038
  %2 = bitcast i8* %1 to %struct.variable_def*, !dbg !17039
  store %struct.variable_def* %2, %struct.variable_def** %var, align 8, !dbg !17036
  %3 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !17040
  call void @dump_var(%struct.variable_def* %3), !dbg !17041
  ret i32 1, !dbg !17042
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_rtx_base_iterate(%struct.VEC_rtx_base* %vec_, i32 %ix_, %struct.rtx_def** %ptr) #0 !dbg !17043 {
entry:
  %retval = alloca i32, align 4
  %vec_.addr = alloca %struct.VEC_rtx_base*, align 8
  %ix_.addr = alloca i32, align 4
  %ptr.addr = alloca %struct.rtx_def**, align 8
  store %struct.VEC_rtx_base* %vec_, %struct.VEC_rtx_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_rtx_base** %vec_.addr, metadata !17048, metadata !DIExpression()), !dbg !17049
  store i32 %ix_, i32* %ix_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ix_.addr, metadata !17050, metadata !DIExpression()), !dbg !17049
  store %struct.rtx_def** %ptr, %struct.rtx_def*** %ptr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %ptr.addr, metadata !17051, metadata !DIExpression()), !dbg !17049
  %0 = load %struct.VEC_rtx_base*, %struct.VEC_rtx_base** %vec_.addr, align 8, !dbg !17052
  %tobool = icmp ne %struct.VEC_rtx_base* %0, null, !dbg !17052
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !17052

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %ix_.addr, align 4, !dbg !17052
  %2 = load %struct.VEC_rtx_base*, %struct.VEC_rtx_base** %vec_.addr, align 8, !dbg !17052
  %num = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %2, i32 0, i32 0, !dbg !17052
  %3 = load i32, i32* %num, align 8, !dbg !17052
  %cmp = icmp ult i32 %1, %3, !dbg !17052
  br i1 %cmp, label %if.then, label %if.else, !dbg !17049

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.VEC_rtx_base*, %struct.VEC_rtx_base** %vec_.addr, align 8, !dbg !17054
  %vec = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %4, i32 0, i32 2, !dbg !17054
  %5 = load i32, i32* %ix_.addr, align 4, !dbg !17054
  %idxprom = zext i32 %5 to i64, !dbg !17054
  %arrayidx = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %vec, i64 0, i64 %idxprom, !dbg !17054
  %6 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !17054
  %7 = load %struct.rtx_def**, %struct.rtx_def*** %ptr.addr, align 8, !dbg !17054
  store %struct.rtx_def* %6, %struct.rtx_def** %7, align 8, !dbg !17054
  store i32 1, i32* %retval, align 4, !dbg !17054
  br label %return, !dbg !17054

if.else:                                          ; preds = %land.lhs.true, %entry
  %8 = load %struct.rtx_def**, %struct.rtx_def*** %ptr.addr, align 8, !dbg !17056
  store %struct.rtx_def* null, %struct.rtx_def** %8, align 8, !dbg !17056
  store i32 0, i32* %retval, align 4, !dbg !17056
  br label %return, !dbg !17056

return:                                           ; preds = %if.else, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !17049
  ret i32 %9, !dbg !17049
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_cselib_value_chains(i8* %dv) #0 !dbg !17058 {
entry:
  %dv.addr = alloca i8*, align 8
  %l = alloca %struct.elt_loc_list**, align 8
  store i8* %dv, i8** %dv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dv.addr, metadata !17059, metadata !DIExpression()), !dbg !17060
  call void @llvm.dbg.declare(metadata %struct.elt_loc_list*** %l, metadata !17061, metadata !DIExpression()), !dbg !17063
  %0 = load i8*, i8** %dv.addr, align 8, !dbg !17064
  %call = call %struct.rtx_def* @dv_as_value(i8* %0), !dbg !17064
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %call, i32 0, i32 1, !dbg !17064
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !17064
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !17064
  %rt_cselib = bitcast %union.rtunion_def* %arrayidx to %struct.cselib_val_struct**, !dbg !17064
  %1 = load %struct.cselib_val_struct*, %struct.cselib_val_struct** %rt_cselib, align 8, !dbg !17064
  %locs = getelementptr inbounds %struct.cselib_val_struct, %struct.cselib_val_struct* %1, i32 0, i32 3, !dbg !17066
  store %struct.elt_loc_list** %locs, %struct.elt_loc_list*** %l, align 8, !dbg !17067
  br label %for.cond, !dbg !17068

for.cond:                                         ; preds = %if.end, %entry
  %2 = load %struct.elt_loc_list**, %struct.elt_loc_list*** %l, align 8, !dbg !17069
  %3 = load %struct.elt_loc_list*, %struct.elt_loc_list** %2, align 8, !dbg !17071
  %tobool = icmp ne %struct.elt_loc_list* %3, null, !dbg !17072
  br i1 %tobool, label %for.body, label %for.end, !dbg !17072

for.body:                                         ; preds = %for.cond
  %4 = load %struct.elt_loc_list**, %struct.elt_loc_list*** %l, align 8, !dbg !17073
  %5 = load %struct.elt_loc_list*, %struct.elt_loc_list** %4, align 8, !dbg !17073
  %loc = getelementptr inbounds %struct.elt_loc_list, %struct.elt_loc_list* %5, i32 0, i32 1, !dbg !17073
  %6 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !17073
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !17073
  %bf.load = load i32, i32* %7, align 8, !dbg !17073
  %bf.clear = and i32 %bf.load, 65535, !dbg !17073
  %cmp = icmp eq i32 %bf.clear, 17, !dbg !17075
  br i1 %cmp, label %if.then, label %if.else, !dbg !17076

if.then:                                          ; preds = %for.body
  %8 = load %struct.elt_loc_list**, %struct.elt_loc_list*** %l, align 8, !dbg !17077
  %9 = load %struct.elt_loc_list*, %struct.elt_loc_list** %8, align 8, !dbg !17078
  %next = getelementptr inbounds %struct.elt_loc_list, %struct.elt_loc_list* %9, i32 0, i32 0, !dbg !17079
  %10 = load %struct.elt_loc_list*, %struct.elt_loc_list** %next, align 8, !dbg !17079
  %11 = load %struct.elt_loc_list**, %struct.elt_loc_list*** %l, align 8, !dbg !17080
  store %struct.elt_loc_list* %10, %struct.elt_loc_list** %11, align 8, !dbg !17081
  br label %if.end, !dbg !17082

if.else:                                          ; preds = %for.body
  %12 = load %struct.elt_loc_list**, %struct.elt_loc_list*** %l, align 8, !dbg !17083
  %13 = load %struct.elt_loc_list*, %struct.elt_loc_list** %12, align 8, !dbg !17085
  %loc1 = getelementptr inbounds %struct.elt_loc_list, %struct.elt_loc_list* %13, i32 0, i32 1, !dbg !17086
  %14 = load i8*, i8** %dv.addr, align 8, !dbg !17087
  %call2 = call i8* @dv_as_opaque(i8* %14), !dbg !17088
  %call3 = call i32 @for_each_rtx(%struct.rtx_def** %loc1, i32 (%struct.rtx_def**, i8*)* @add_value_chain, i8* %call2), !dbg !17089
  %15 = load %struct.elt_loc_list**, %struct.elt_loc_list*** %l, align 8, !dbg !17090
  %16 = load %struct.elt_loc_list*, %struct.elt_loc_list** %15, align 8, !dbg !17091
  %next4 = getelementptr inbounds %struct.elt_loc_list, %struct.elt_loc_list* %16, i32 0, i32 0, !dbg !17092
  store %struct.elt_loc_list** %next4, %struct.elt_loc_list*** %l, align 8, !dbg !17093
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %for.cond, !dbg !17094, !llvm.loop !17095

for.end:                                          ; preds = %for.cond
  ret void, !dbg !17097
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.VEC_variable_heap* @VEC_variable_heap_alloc(i32 %alloc_) #0 !dbg !17098 {
entry:
  %alloc_.addr = alloca i32, align 4
  store i32 %alloc_, i32* %alloc_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %alloc_.addr, metadata !17101, metadata !DIExpression()), !dbg !17102
  %0 = load i32, i32* %alloc_.addr, align 4, !dbg !17102
  %call = call i8* @vec_heap_p_reserve_exact(i8* null, i32 %0), !dbg !17102
  %1 = bitcast i8* %call to %struct.VEC_variable_heap*, !dbg !17102
  ret %struct.VEC_variable_heap* %1, !dbg !17102
}

; Function Attrs: noinline nounwind uwtable
define internal void @emit_notes_for_differences(%struct.rtx_def* %insn, %struct.dataflow_set_def* %old_set, %struct.dataflow_set_def* %new_set) #0 !dbg !17103 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %old_set.addr = alloca %struct.dataflow_set_def*, align 8
  %new_set.addr = alloca %struct.dataflow_set_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !17106, metadata !DIExpression()), !dbg !17107
  store %struct.dataflow_set_def* %old_set, %struct.dataflow_set_def** %old_set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %old_set.addr, metadata !17108, metadata !DIExpression()), !dbg !17109
  store %struct.dataflow_set_def* %new_set, %struct.dataflow_set_def** %new_set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %new_set.addr, metadata !17110, metadata !DIExpression()), !dbg !17111
  %0 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %old_set.addr, align 8, !dbg !17112
  %vars = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %0, i32 0, i32 2, !dbg !17113
  %1 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars, align 8, !dbg !17113
  %call = call %struct.htab* @shared_hash_htab(%struct.shared_hash_def* %1), !dbg !17114
  %2 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %new_set.addr, align 8, !dbg !17115
  %vars1 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %2, i32 0, i32 2, !dbg !17116
  %3 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars1, align 8, !dbg !17116
  %call2 = call %struct.htab* @shared_hash_htab(%struct.shared_hash_def* %3), !dbg !17117
  %4 = bitcast %struct.htab* %call2 to i8*, !dbg !17117
  call void @htab_traverse(%struct.htab* %call, i32 (i8**, i8*)* @emit_notes_for_differences_1, i8* %4), !dbg !17118
  %5 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %new_set.addr, align 8, !dbg !17119
  %vars3 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %5, i32 0, i32 2, !dbg !17120
  %6 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars3, align 8, !dbg !17120
  %call4 = call %struct.htab* @shared_hash_htab(%struct.shared_hash_def* %6), !dbg !17121
  %7 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %old_set.addr, align 8, !dbg !17122
  %vars5 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %7, i32 0, i32 2, !dbg !17123
  %8 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars5, align 8, !dbg !17123
  %call6 = call %struct.htab* @shared_hash_htab(%struct.shared_hash_def* %8), !dbg !17124
  %9 = bitcast %struct.htab* %call6 to i8*, !dbg !17124
  call void @htab_traverse(%struct.htab* %call4, i32 (i8**, i8*)* @emit_notes_for_differences_2, i8* %9), !dbg !17125
  %10 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !17126
  %11 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %new_set.addr, align 8, !dbg !17127
  %vars7 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %11, i32 0, i32 2, !dbg !17128
  %12 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars7, align 8, !dbg !17128
  call void @emit_notes_for_changes(%struct.rtx_def* %10, i32 0, %struct.shared_hash_def* %12), !dbg !17129
  ret void, !dbg !17130
}

; Function Attrs: noinline nounwind uwtable
define internal void @emit_notes_in_bb(%struct.basic_block_def* %bb, %struct.dataflow_set_def* %set) #0 !dbg !17131 {
entry:
  %bb.addr = alloca %struct.basic_block_def*, align 8
  %set.addr = alloca %struct.dataflow_set_def*, align 8
  %i = alloca i32, align 4
  %mo = alloca %struct.micro_operation_def*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %loc = alloca %struct.rtx_def*, align 8
  %loc10 = alloca %struct.rtx_def*, align 8
  %val = alloca %struct.rtx_def*, align 8
  %vloc = alloca %struct.rtx_def*, align 8
  %var = alloca %union.tree_node*, align 8
  %loc67 = alloca %struct.rtx_def*, align 8
  %val70 = alloca %struct.rtx_def*, align 8
  %vloc71 = alloca %struct.rtx_def*, align 8
  %uloc = alloca %struct.rtx_def*, align 8
  %loc119 = alloca %struct.rtx_def*, align 8
  %val122 = alloca %struct.rtx_def*, align 8
  %vloc123 = alloca %struct.rtx_def*, align 8
  %uloc124 = alloca %struct.rtx_def*, align 8
  %reverse = alloca %struct.rtx_def*, align 8
  %vsrc = alloca %struct.rtx_def*, align 8
  %copied_p = alloca i8, align 1
  %set_src = alloca %struct.rtx_def*, align 8
  %status = alloca i32, align 4
  %loc308 = alloca %struct.rtx_def*, align 8
  %set_src311 = alloca %struct.rtx_def*, align 8
  %loc339 = alloca %struct.rtx_def*, align 8
  %src_status = alloca i32, align 4
  %set_src342 = alloca %struct.rtx_def*, align 8
  %loc372 = alloca %struct.rtx_def*, align 8
  %loc384 = alloca %struct.rtx_def*, align 8
  store %struct.basic_block_def* %bb, %struct.basic_block_def** %bb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb.addr, metadata !17134, metadata !DIExpression()), !dbg !17135
  store %struct.dataflow_set_def* %set, %struct.dataflow_set_def** %set.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.dataflow_set_def** %set.addr, metadata !17136, metadata !DIExpression()), !dbg !17137
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17138, metadata !DIExpression()), !dbg !17139
  call void @llvm.dbg.declare(metadata %struct.micro_operation_def** %mo, metadata !17140, metadata !DIExpression()), !dbg !17141
  %0 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !17142
  call void @dataflow_set_clear(%struct.dataflow_set_def* %0), !dbg !17143
  %1 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !17144
  %2 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !17145
  %aux = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %2, i32 0, i32 2, !dbg !17145
  %3 = load i8*, i8** %aux, align 8, !dbg !17145
  %4 = bitcast i8* %3 to %struct.variable_tracking_info_def*, !dbg !17145
  %in = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %4, i32 0, i32 1, !dbg !17146
  call void @dataflow_set_copy(%struct.dataflow_set_def* %1, %struct.dataflow_set_def* %in), !dbg !17147
  store i32 0, i32* %i, align 4, !dbg !17148
  br label %for.cond, !dbg !17150

for.cond:                                         ; preds = %for.inc, %entry
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !17151
  %aux1 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %5, i32 0, i32 2, !dbg !17151
  %6 = load i8*, i8** %aux1, align 8, !dbg !17151
  %7 = bitcast i8* %6 to %struct.variable_tracking_info_def*, !dbg !17151
  %mos = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %7, i32 0, i32 0, !dbg !17151
  %8 = load %struct.VEC_micro_operation_heap*, %struct.VEC_micro_operation_heap** %mos, align 8, !dbg !17151
  %tobool = icmp ne %struct.VEC_micro_operation_heap* %8, null, !dbg !17151
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !17151

cond.true:                                        ; preds = %for.cond
  %9 = load %struct.basic_block_def*, %struct.basic_block_def** %bb.addr, align 8, !dbg !17151
  %aux2 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %9, i32 0, i32 2, !dbg !17151
  %10 = load i8*, i8** %aux2, align 8, !dbg !17151
  %11 = bitcast i8* %10 to %struct.variable_tracking_info_def*, !dbg !17151
  %mos3 = getelementptr inbounds %struct.variable_tracking_info_def, %struct.variable_tracking_info_def* %11, i32 0, i32 0, !dbg !17151
  %12 = load %struct.VEC_micro_operation_heap*, %struct.VEC_micro_operation_heap** %mos3, align 8, !dbg !17151
  %base = getelementptr inbounds %struct.VEC_micro_operation_heap, %struct.VEC_micro_operation_heap* %12, i32 0, i32 0, !dbg !17151
  br label %cond.end, !dbg !17151

cond.false:                                       ; preds = %for.cond
  br label %cond.end, !dbg !17151

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_micro_operation_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !17151
  %13 = load i32, i32* %i, align 4, !dbg !17151
  %call = call i32 @VEC_micro_operation_base_iterate(%struct.VEC_micro_operation_base* %cond, i32 %13, %struct.micro_operation_def** %mo), !dbg !17151
  %tobool4 = icmp ne i32 %call, 0, !dbg !17153
  br i1 %tobool4, label %for.body, label %for.end, !dbg !17153

for.body:                                         ; preds = %cond.end
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !17154, metadata !DIExpression()), !dbg !17156
  %14 = load %struct.micro_operation_def*, %struct.micro_operation_def** %mo, align 8, !dbg !17157
  %insn5 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %14, i32 0, i32 1, !dbg !17158
  %15 = load %struct.rtx_def*, %struct.rtx_def** %insn5, align 8, !dbg !17158
  store %struct.rtx_def* %15, %struct.rtx_def** %insn, align 8, !dbg !17156
  %16 = load %struct.micro_operation_def*, %struct.micro_operation_def** %mo, align 8, !dbg !17159
  %type = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %16, i32 0, i32 0, !dbg !17160
  %17 = load i32, i32* %type, align 8, !dbg !17160
  switch i32 %17, label %sw.epilog [
    i32 8, label %sw.bb
    i32 0, label %sw.bb6
    i32 3, label %sw.bb9
    i32 2, label %sw.bb66
    i32 4, label %sw.bb118
    i32 5, label %sw.bb307
    i32 6, label %sw.bb338
    i32 1, label %sw.bb371
    i32 7, label %sw.bb383
    i32 9, label %sw.bb399
  ], !dbg !17161

sw.bb:                                            ; preds = %for.body
  %18 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !17162
  call void @dataflow_set_clear_at_call(%struct.dataflow_set_def* %18), !dbg !17164
  %19 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !17165
  %20 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !17166
  %vars = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %20, i32 0, i32 2, !dbg !17167
  %21 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars, align 8, !dbg !17167
  call void @emit_notes_for_changes(%struct.rtx_def* %19, i32 2, %struct.shared_hash_def* %21), !dbg !17168
  br label %sw.epilog, !dbg !17169

sw.bb6:                                           ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %loc, metadata !17170, metadata !DIExpression()), !dbg !17172
  %22 = load %struct.micro_operation_def*, %struct.micro_operation_def** %mo, align 8, !dbg !17173
  %u = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %22, i32 0, i32 2, !dbg !17174
  %loc7 = bitcast %union.anon.0* %u to %struct.rtx_def**, !dbg !17175
  %23 = load %struct.rtx_def*, %struct.rtx_def** %loc7, align 8, !dbg !17175
  store %struct.rtx_def* %23, %struct.rtx_def** %loc, align 8, !dbg !17172
  %24 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !17176
  %25 = bitcast %struct.rtx_def* %24 to i32*, !dbg !17176
  %bf.load = load i32, i32* %25, align 8, !dbg !17176
  %bf.clear = and i32 %bf.load, 65535, !dbg !17176
  %cmp = icmp eq i32 %bf.clear, 37, !dbg !17176
  br i1 %cmp, label %if.then, label %if.else, !dbg !17178

if.then:                                          ; preds = %sw.bb6
  %26 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !17179
  %27 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !17180
  call void @var_reg_set(%struct.dataflow_set_def* %26, %struct.rtx_def* %27, i32 1, %struct.rtx_def* null), !dbg !17181
  br label %if.end, !dbg !17181

if.else:                                          ; preds = %sw.bb6
  %28 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !17182
  %29 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !17183
  call void @var_mem_set(%struct.dataflow_set_def* %28, %struct.rtx_def* %29, i32 1, %struct.rtx_def* null), !dbg !17184
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %30 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !17185
  %31 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !17186
  %vars8 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %31, i32 0, i32 2, !dbg !17187
  %32 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars8, align 8, !dbg !17187
  call void @emit_notes_for_changes(%struct.rtx_def* %30, i32 1, %struct.shared_hash_def* %32), !dbg !17188
  br label %sw.epilog, !dbg !17189

sw.bb9:                                           ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %loc10, metadata !17190, metadata !DIExpression()), !dbg !17192
  %33 = load %struct.micro_operation_def*, %struct.micro_operation_def** %mo, align 8, !dbg !17193
  %u11 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %33, i32 0, i32 2, !dbg !17194
  %loc12 = bitcast %union.anon.0* %u11 to %struct.rtx_def**, !dbg !17195
  %34 = load %struct.rtx_def*, %struct.rtx_def** %loc12, align 8, !dbg !17195
  store %struct.rtx_def* %34, %struct.rtx_def** %loc10, align 8, !dbg !17192
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %val, metadata !17196, metadata !DIExpression()), !dbg !17197
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %vloc, metadata !17198, metadata !DIExpression()), !dbg !17199
  call void @llvm.dbg.declare(metadata %union.tree_node** %var, metadata !17200, metadata !DIExpression()), !dbg !17201
  %35 = load %struct.rtx_def*, %struct.rtx_def** %loc10, align 8, !dbg !17202
  %36 = bitcast %struct.rtx_def* %35 to i32*, !dbg !17202
  %bf.load13 = load i32, i32* %36, align 8, !dbg !17202
  %bf.clear14 = and i32 %bf.load13, 65535, !dbg !17202
  %cmp15 = icmp eq i32 %bf.clear14, 41, !dbg !17204
  br i1 %cmp15, label %if.then16, label %if.else22, !dbg !17205

if.then16:                                        ; preds = %sw.bb9
  %37 = load %struct.rtx_def*, %struct.rtx_def** %loc10, align 8, !dbg !17206
  %u17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1, !dbg !17206
  %fld = bitcast %union.u* %u17 to [1 x %union.rtunion_def]*, !dbg !17206
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !17206
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !17206
  %38 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !17206
  store %struct.rtx_def* %38, %struct.rtx_def** %val, align 8, !dbg !17208
  %39 = load %struct.rtx_def*, %struct.rtx_def** %loc10, align 8, !dbg !17209
  %u18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i32 0, i32 1, !dbg !17209
  %fld19 = bitcast %union.u* %u18 to [1 x %union.rtunion_def]*, !dbg !17209
  %arrayidx20 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld19, i64 0, i64 1, !dbg !17209
  %rt_rtx21 = bitcast %union.rtunion_def* %arrayidx20 to %struct.rtx_def**, !dbg !17209
  %40 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx21, align 8, !dbg !17209
  store %struct.rtx_def* %40, %struct.rtx_def** %vloc, align 8, !dbg !17210
  br label %if.end23, !dbg !17211

if.else22:                                        ; preds = %sw.bb9
  store %struct.rtx_def* null, %struct.rtx_def** %val, align 8, !dbg !17212
  %41 = load %struct.rtx_def*, %struct.rtx_def** %loc10, align 8, !dbg !17214
  store %struct.rtx_def* %41, %struct.rtx_def** %vloc, align 8, !dbg !17215
  br label %if.end23

if.end23:                                         ; preds = %if.else22, %if.then16
  %42 = load %struct.rtx_def*, %struct.rtx_def** %vloc, align 8, !dbg !17216
  %u24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %42, i32 0, i32 1, !dbg !17216
  %fld25 = bitcast %union.u* %u24 to [1 x %union.rtunion_def]*, !dbg !17216
  %arrayidx26 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld25, i64 0, i64 0, !dbg !17216
  %rt_tree = bitcast %union.rtunion_def* %arrayidx26 to %union.tree_node**, !dbg !17216
  %43 = load %union.tree_node*, %union.tree_node** %rt_tree, align 8, !dbg !17216
  store %union.tree_node* %43, %union.tree_node** %var, align 8, !dbg !17217
  %44 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !17218
  %45 = load %union.tree_node*, %union.tree_node** %var, align 8, !dbg !17219
  %call27 = call i8* @dv_from_decl(%union.tree_node* %45), !dbg !17220
  call void @clobber_variable_part(%struct.dataflow_set_def* %44, %struct.rtx_def* null, i8* %call27, i64 0, %struct.rtx_def* null), !dbg !17221
  %46 = load %struct.rtx_def*, %struct.rtx_def** %val, align 8, !dbg !17222
  %tobool28 = icmp ne %struct.rtx_def* %46, null, !dbg !17222
  br i1 %tobool28, label %if.then29, label %if.else40, !dbg !17224

if.then29:                                        ; preds = %if.end23
  %47 = load %struct.rtx_def*, %struct.rtx_def** %loc10, align 8, !dbg !17225
  %48 = bitcast %struct.rtx_def* %47 to i32*, !dbg !17225
  %bf.load30 = load i32, i32* %48, align 8, !dbg !17225
  %bf.lshr = lshr i32 %bf.load30, 27, !dbg !17225
  %bf.clear31 = and i32 %bf.lshr, 1, !dbg !17225
  %tobool32 = icmp ne i32 %bf.clear31, 0, !dbg !17225
  br i1 %tobool32, label %if.then33, label %if.end38, !dbg !17228

if.then33:                                        ; preds = %if.then29
  %49 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !17229
  %50 = load %struct.rtx_def*, %struct.rtx_def** %val, align 8, !dbg !17230
  %51 = load %struct.rtx_def*, %struct.rtx_def** %vloc, align 8, !dbg !17231
  %u34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %51, i32 0, i32 1, !dbg !17231
  %fld35 = bitcast %union.u* %u34 to [1 x %union.rtunion_def]*, !dbg !17231
  %arrayidx36 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld35, i64 0, i64 1, !dbg !17231
  %rt_rtx37 = bitcast %union.rtunion_def* %arrayidx36 to %struct.rtx_def**, !dbg !17231
  %52 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx37, align 8, !dbg !17231
  %53 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !17232
  call void @val_resolve(%struct.dataflow_set_def* %49, %struct.rtx_def* %50, %struct.rtx_def* %52, %struct.rtx_def* %53), !dbg !17233
  br label %if.end38, !dbg !17233

if.end38:                                         ; preds = %if.then33, %if.then29
  %54 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !17234
  %55 = load %struct.rtx_def*, %struct.rtx_def** %val, align 8, !dbg !17235
  %56 = load %union.tree_node*, %union.tree_node** %var, align 8, !dbg !17236
  %call39 = call i8* @dv_from_decl(%union.tree_node* %56), !dbg !17237
  call void @set_variable_part(%struct.dataflow_set_def* %54, %struct.rtx_def* %55, i8* %call39, i64 0, i32 2, %struct.rtx_def* null, i32 1), !dbg !17238
  br label %if.end64, !dbg !17239

if.else40:                                        ; preds = %if.end23
  %57 = load %struct.rtx_def*, %struct.rtx_def** %vloc, align 8, !dbg !17240
  %u41 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %57, i32 0, i32 1, !dbg !17240
  %fld42 = bitcast %union.u* %u41 to [1 x %union.rtunion_def]*, !dbg !17240
  %arrayidx43 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld42, i64 0, i64 1, !dbg !17240
  %rt_rtx44 = bitcast %union.rtunion_def* %arrayidx43 to %struct.rtx_def**, !dbg !17240
  %58 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx44, align 8, !dbg !17240
  %59 = bitcast %struct.rtx_def* %58 to i32*, !dbg !17240
  %bf.load45 = load i32, i32* %59, align 8, !dbg !17240
  %bf.clear46 = and i32 %bf.load45, 65535, !dbg !17240
  %cmp47 = icmp eq i32 %bf.clear46, 25, !dbg !17240
  br i1 %cmp47, label %land.lhs.true, label %if.then57, !dbg !17240

land.lhs.true:                                    ; preds = %if.else40
  %60 = load %struct.rtx_def*, %struct.rtx_def** %vloc, align 8, !dbg !17240
  %u48 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %60, i32 0, i32 1, !dbg !17240
  %fld49 = bitcast %union.u* %u48 to [1 x %union.rtunion_def]*, !dbg !17240
  %arrayidx50 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld49, i64 0, i64 1, !dbg !17240
  %rt_rtx51 = bitcast %union.rtunion_def* %arrayidx50 to %struct.rtx_def**, !dbg !17240
  %61 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx51, align 8, !dbg !17240
  %u52 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %61, i32 0, i32 1, !dbg !17240
  %fld53 = bitcast %union.u* %u52 to [1 x %union.rtunion_def]*, !dbg !17240
  %arrayidx54 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld53, i64 0, i64 0, !dbg !17240
  %rt_rtx55 = bitcast %union.rtunion_def* %arrayidx54 to %struct.rtx_def**, !dbg !17240
  %62 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx55, align 8, !dbg !17240
  %63 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !17240
  %cmp56 = icmp eq %struct.rtx_def* %62, %63, !dbg !17240
  br i1 %cmp56, label %if.end63, label %if.then57, !dbg !17242

if.then57:                                        ; preds = %land.lhs.true, %if.else40
  %64 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !17243
  %65 = load %struct.rtx_def*, %struct.rtx_def** %vloc, align 8, !dbg !17244
  %u58 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %65, i32 0, i32 1, !dbg !17244
  %fld59 = bitcast %union.u* %u58 to [1 x %union.rtunion_def]*, !dbg !17244
  %arrayidx60 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld59, i64 0, i64 1, !dbg !17244
  %rt_rtx61 = bitcast %union.rtunion_def* %arrayidx60 to %struct.rtx_def**, !dbg !17244
  %66 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx61, align 8, !dbg !17244
  %67 = load %union.tree_node*, %union.tree_node** %var, align 8, !dbg !17245
  %call62 = call i8* @dv_from_decl(%union.tree_node* %67), !dbg !17246
  call void @set_variable_part(%struct.dataflow_set_def* %64, %struct.rtx_def* %66, i8* %call62, i64 0, i32 2, %struct.rtx_def* null, i32 1), !dbg !17247
  br label %if.end63, !dbg !17247

if.end63:                                         ; preds = %if.then57, %land.lhs.true
  br label %if.end64

if.end64:                                         ; preds = %if.end63, %if.end38
  %68 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !17248
  %69 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !17249
  %vars65 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %69, i32 0, i32 2, !dbg !17250
  %70 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars65, align 8, !dbg !17250
  call void @emit_notes_for_changes(%struct.rtx_def* %68, i32 1, %struct.shared_hash_def* %70), !dbg !17251
  br label %sw.epilog, !dbg !17252

sw.bb66:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %loc67, metadata !17253, metadata !DIExpression()), !dbg !17255
  %71 = load %struct.micro_operation_def*, %struct.micro_operation_def** %mo, align 8, !dbg !17256
  %u68 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %71, i32 0, i32 2, !dbg !17257
  %loc69 = bitcast %union.anon.0* %u68 to %struct.rtx_def**, !dbg !17258
  %72 = load %struct.rtx_def*, %struct.rtx_def** %loc69, align 8, !dbg !17258
  store %struct.rtx_def* %72, %struct.rtx_def** %loc67, align 8, !dbg !17255
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %val70, metadata !17259, metadata !DIExpression()), !dbg !17260
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %vloc71, metadata !17261, metadata !DIExpression()), !dbg !17262
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %uloc, metadata !17263, metadata !DIExpression()), !dbg !17264
  %73 = load %struct.rtx_def*, %struct.rtx_def** %loc67, align 8, !dbg !17265
  %u72 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %73, i32 0, i32 1, !dbg !17265
  %fld73 = bitcast %union.u* %u72 to [1 x %union.rtunion_def]*, !dbg !17265
  %arrayidx74 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld73, i64 0, i64 1, !dbg !17265
  %rt_rtx75 = bitcast %union.rtunion_def* %arrayidx74 to %struct.rtx_def**, !dbg !17265
  %74 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx75, align 8, !dbg !17265
  store %struct.rtx_def* %74, %struct.rtx_def** %uloc, align 8, !dbg !17266
  store %struct.rtx_def* %74, %struct.rtx_def** %vloc71, align 8, !dbg !17267
  %75 = load %struct.rtx_def*, %struct.rtx_def** %loc67, align 8, !dbg !17268
  %u76 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %75, i32 0, i32 1, !dbg !17268
  %fld77 = bitcast %union.u* %u76 to [1 x %union.rtunion_def]*, !dbg !17268
  %arrayidx78 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld77, i64 0, i64 0, !dbg !17268
  %rt_rtx79 = bitcast %union.rtunion_def* %arrayidx78 to %struct.rtx_def**, !dbg !17268
  %76 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx79, align 8, !dbg !17268
  store %struct.rtx_def* %76, %struct.rtx_def** %val70, align 8, !dbg !17269
  %77 = load %struct.rtx_def*, %struct.rtx_def** %val70, align 8, !dbg !17270
  %78 = bitcast %struct.rtx_def* %77 to i32*, !dbg !17270
  %bf.load80 = load i32, i32* %78, align 8, !dbg !17270
  %bf.clear81 = and i32 %bf.load80, 65535, !dbg !17270
  %cmp82 = icmp eq i32 %bf.clear81, 41, !dbg !17272
  br i1 %cmp82, label %if.then83, label %if.end92, !dbg !17273

if.then83:                                        ; preds = %sw.bb66
  %79 = load %struct.rtx_def*, %struct.rtx_def** %val70, align 8, !dbg !17274
  %u84 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %79, i32 0, i32 1, !dbg !17274
  %fld85 = bitcast %union.u* %u84 to [1 x %union.rtunion_def]*, !dbg !17274
  %arrayidx86 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld85, i64 0, i64 1, !dbg !17274
  %rt_rtx87 = bitcast %union.rtunion_def* %arrayidx86 to %struct.rtx_def**, !dbg !17274
  %80 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx87, align 8, !dbg !17274
  store %struct.rtx_def* %80, %struct.rtx_def** %uloc, align 8, !dbg !17276
  %81 = load %struct.rtx_def*, %struct.rtx_def** %val70, align 8, !dbg !17277
  %u88 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %81, i32 0, i32 1, !dbg !17277
  %fld89 = bitcast %union.u* %u88 to [1 x %union.rtunion_def]*, !dbg !17277
  %arrayidx90 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld89, i64 0, i64 0, !dbg !17277
  %rt_rtx91 = bitcast %union.rtunion_def* %arrayidx90 to %struct.rtx_def**, !dbg !17277
  %82 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx91, align 8, !dbg !17277
  store %struct.rtx_def* %82, %struct.rtx_def** %val70, align 8, !dbg !17278
  br label %if.end92, !dbg !17279

if.end92:                                         ; preds = %if.then83, %sw.bb66
  %83 = load %struct.rtx_def*, %struct.rtx_def** %loc67, align 8, !dbg !17280
  %84 = bitcast %struct.rtx_def* %83 to i32*, !dbg !17280
  %bf.load93 = load i32, i32* %84, align 8, !dbg !17280
  %bf.lshr94 = lshr i32 %bf.load93, 27, !dbg !17280
  %bf.clear95 = and i32 %bf.lshr94, 1, !dbg !17280
  %tobool96 = icmp ne i32 %bf.clear95, 0, !dbg !17280
  br i1 %tobool96, label %if.then97, label %if.else98, !dbg !17282

if.then97:                                        ; preds = %if.end92
  %85 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !17283
  %86 = load %struct.rtx_def*, %struct.rtx_def** %val70, align 8, !dbg !17284
  %87 = load %struct.rtx_def*, %struct.rtx_def** %vloc71, align 8, !dbg !17285
  %88 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !17286
  call void @val_resolve(%struct.dataflow_set_def* %85, %struct.rtx_def* %86, %struct.rtx_def* %87, %struct.rtx_def* %88), !dbg !17287
  br label %if.end99, !dbg !17287

if.else98:                                        ; preds = %if.end92
  %89 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !17288
  %90 = load %struct.rtx_def*, %struct.rtx_def** %val70, align 8, !dbg !17289
  %91 = load %struct.rtx_def*, %struct.rtx_def** %uloc, align 8, !dbg !17290
  %92 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !17291
  call void @val_store(%struct.dataflow_set_def* %89, %struct.rtx_def* %90, %struct.rtx_def* %91, %struct.rtx_def* %92, i8 zeroext 0), !dbg !17292
  br label %if.end99

if.end99:                                         ; preds = %if.else98, %if.then97
  %93 = load %struct.rtx_def*, %struct.rtx_def** %loc67, align 8, !dbg !17293
  %94 = bitcast %struct.rtx_def* %93 to i32*, !dbg !17293
  %bf.load100 = load i32, i32* %94, align 8, !dbg !17293
  %bf.lshr101 = lshr i32 %bf.load100, 29, !dbg !17293
  %bf.clear102 = and i32 %bf.lshr101, 1, !dbg !17293
  %tobool103 = icmp ne i32 %bf.clear102, 0, !dbg !17293
  br i1 %tobool103, label %if.then104, label %if.end116, !dbg !17295

if.then104:                                       ; preds = %if.end99
  %95 = load %struct.rtx_def*, %struct.rtx_def** %uloc, align 8, !dbg !17296
  %96 = bitcast %struct.rtx_def* %95 to i32*, !dbg !17296
  %bf.load105 = load i32, i32* %96, align 8, !dbg !17296
  %bf.clear106 = and i32 %bf.load105, 65535, !dbg !17296
  %cmp107 = icmp eq i32 %bf.clear106, 37, !dbg !17299
  br i1 %cmp107, label %if.then108, label %if.else109, !dbg !17300

if.then108:                                       ; preds = %if.then104
  %97 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !17301
  %98 = load %struct.rtx_def*, %struct.rtx_def** %uloc, align 8, !dbg !17302
  call void @var_reg_set(%struct.dataflow_set_def* %97, %struct.rtx_def* %98, i32 1, %struct.rtx_def* null), !dbg !17303
  br label %if.end115, !dbg !17303

if.else109:                                       ; preds = %if.then104
  %99 = load %struct.rtx_def*, %struct.rtx_def** %uloc, align 8, !dbg !17304
  %100 = bitcast %struct.rtx_def* %99 to i32*, !dbg !17304
  %bf.load110 = load i32, i32* %100, align 8, !dbg !17304
  %bf.clear111 = and i32 %bf.load110, 65535, !dbg !17304
  %cmp112 = icmp eq i32 %bf.clear111, 43, !dbg !17306
  br i1 %cmp112, label %if.then113, label %if.end114, !dbg !17307

if.then113:                                       ; preds = %if.else109
  %101 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !17308
  %102 = load %struct.rtx_def*, %struct.rtx_def** %uloc, align 8, !dbg !17309
  call void @var_mem_set(%struct.dataflow_set_def* %101, %struct.rtx_def* %102, i32 1, %struct.rtx_def* null), !dbg !17310
  br label %if.end114, !dbg !17310

if.end114:                                        ; preds = %if.then113, %if.else109
  br label %if.end115

if.end115:                                        ; preds = %if.end114, %if.then108
  br label %if.end116, !dbg !17311

if.end116:                                        ; preds = %if.end115, %if.end99
  %103 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !17312
  %104 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !17313
  %vars117 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %104, i32 0, i32 2, !dbg !17314
  %105 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars117, align 8, !dbg !17314
  call void @emit_notes_for_changes(%struct.rtx_def* %103, i32 0, %struct.shared_hash_def* %105), !dbg !17315
  br label %sw.epilog, !dbg !17316

sw.bb118:                                         ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %loc119, metadata !17317, metadata !DIExpression()), !dbg !17319
  %106 = load %struct.micro_operation_def*, %struct.micro_operation_def** %mo, align 8, !dbg !17320
  %u120 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %106, i32 0, i32 2, !dbg !17321
  %loc121 = bitcast %union.anon.0* %u120 to %struct.rtx_def**, !dbg !17322
  %107 = load %struct.rtx_def*, %struct.rtx_def** %loc121, align 8, !dbg !17322
  store %struct.rtx_def* %107, %struct.rtx_def** %loc119, align 8, !dbg !17319
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %val122, metadata !17323, metadata !DIExpression()), !dbg !17324
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %vloc123, metadata !17325, metadata !DIExpression()), !dbg !17326
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %uloc124, metadata !17327, metadata !DIExpression()), !dbg !17328
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %reverse, metadata !17329, metadata !DIExpression()), !dbg !17330
  store %struct.rtx_def* null, %struct.rtx_def** %reverse, align 8, !dbg !17330
  %108 = load %struct.rtx_def*, %struct.rtx_def** %loc119, align 8, !dbg !17331
  store %struct.rtx_def* %108, %struct.rtx_def** %vloc123, align 8, !dbg !17332
  %109 = load %struct.rtx_def*, %struct.rtx_def** %loc119, align 8, !dbg !17333
  %110 = bitcast %struct.rtx_def* %109 to i32*, !dbg !17333
  %bf.load125 = load i32, i32* %110, align 8, !dbg !17333
  %bf.lshr126 = lshr i32 %bf.load125, 31, !dbg !17333
  %tobool127 = icmp ne i32 %bf.lshr126, 0, !dbg !17333
  br i1 %tobool127, label %if.then128, label %if.end137, !dbg !17335

if.then128:                                       ; preds = %sw.bb118
  %111 = load %struct.rtx_def*, %struct.rtx_def** %loc119, align 8, !dbg !17336
  %u129 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %111, i32 0, i32 1, !dbg !17336
  %fld130 = bitcast %union.u* %u129 to [1 x %union.rtunion_def]*, !dbg !17336
  %arrayidx131 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld130, i64 0, i64 1, !dbg !17336
  %rt_rtx132 = bitcast %union.rtunion_def* %arrayidx131 to %struct.rtx_def**, !dbg !17336
  %112 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx132, align 8, !dbg !17336
  store %struct.rtx_def* %112, %struct.rtx_def** %reverse, align 8, !dbg !17338
  %113 = load %struct.rtx_def*, %struct.rtx_def** %loc119, align 8, !dbg !17339
  %u133 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %113, i32 0, i32 1, !dbg !17339
  %fld134 = bitcast %union.u* %u133 to [1 x %union.rtunion_def]*, !dbg !17339
  %arrayidx135 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld134, i64 0, i64 0, !dbg !17339
  %rt_rtx136 = bitcast %union.rtunion_def* %arrayidx135 to %struct.rtx_def**, !dbg !17339
  %114 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx136, align 8, !dbg !17339
  store %struct.rtx_def* %114, %struct.rtx_def** %vloc123, align 8, !dbg !17340
  br label %if.end137, !dbg !17341

if.end137:                                        ; preds = %if.then128, %sw.bb118
  %115 = load %struct.rtx_def*, %struct.rtx_def** %vloc123, align 8, !dbg !17342
  %u138 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %115, i32 0, i32 1, !dbg !17342
  %fld139 = bitcast %union.u* %u138 to [1 x %union.rtunion_def]*, !dbg !17342
  %arrayidx140 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld139, i64 0, i64 1, !dbg !17342
  %rt_rtx141 = bitcast %union.rtunion_def* %arrayidx140 to %struct.rtx_def**, !dbg !17342
  %116 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx141, align 8, !dbg !17342
  store %struct.rtx_def* %116, %struct.rtx_def** %uloc124, align 8, !dbg !17343
  %117 = load %struct.rtx_def*, %struct.rtx_def** %vloc123, align 8, !dbg !17344
  %u142 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %117, i32 0, i32 1, !dbg !17344
  %fld143 = bitcast %union.u* %u142 to [1 x %union.rtunion_def]*, !dbg !17344
  %arrayidx144 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld143, i64 0, i64 0, !dbg !17344
  %rt_rtx145 = bitcast %union.rtunion_def* %arrayidx144 to %struct.rtx_def**, !dbg !17344
  %118 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx145, align 8, !dbg !17344
  store %struct.rtx_def* %118, %struct.rtx_def** %val122, align 8, !dbg !17345
  %119 = load %struct.rtx_def*, %struct.rtx_def** %uloc124, align 8, !dbg !17346
  store %struct.rtx_def* %119, %struct.rtx_def** %vloc123, align 8, !dbg !17347
  %120 = load %struct.rtx_def*, %struct.rtx_def** %val122, align 8, !dbg !17348
  %121 = bitcast %struct.rtx_def* %120 to i32*, !dbg !17348
  %bf.load146 = load i32, i32* %121, align 8, !dbg !17348
  %bf.clear147 = and i32 %bf.load146, 65535, !dbg !17348
  %cmp148 = icmp eq i32 %bf.clear147, 41, !dbg !17350
  br i1 %cmp148, label %if.then149, label %if.end158, !dbg !17351

if.then149:                                       ; preds = %if.end137
  %122 = load %struct.rtx_def*, %struct.rtx_def** %val122, align 8, !dbg !17352
  %u150 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %122, i32 0, i32 1, !dbg !17352
  %fld151 = bitcast %union.u* %u150 to [1 x %union.rtunion_def]*, !dbg !17352
  %arrayidx152 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld151, i64 0, i64 1, !dbg !17352
  %rt_rtx153 = bitcast %union.rtunion_def* %arrayidx152 to %struct.rtx_def**, !dbg !17352
  %123 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx153, align 8, !dbg !17352
  store %struct.rtx_def* %123, %struct.rtx_def** %vloc123, align 8, !dbg !17354
  %124 = load %struct.rtx_def*, %struct.rtx_def** %val122, align 8, !dbg !17355
  %u154 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %124, i32 0, i32 1, !dbg !17355
  %fld155 = bitcast %union.u* %u154 to [1 x %union.rtunion_def]*, !dbg !17355
  %arrayidx156 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld155, i64 0, i64 0, !dbg !17355
  %rt_rtx157 = bitcast %union.rtunion_def* %arrayidx156 to %struct.rtx_def**, !dbg !17355
  %125 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx157, align 8, !dbg !17355
  store %struct.rtx_def* %125, %struct.rtx_def** %val122, align 8, !dbg !17356
  br label %if.end158, !dbg !17357

if.end158:                                        ; preds = %if.then149, %if.end137
  %126 = load %struct.rtx_def*, %struct.rtx_def** %vloc123, align 8, !dbg !17358
  %127 = bitcast %struct.rtx_def* %126 to i32*, !dbg !17358
  %bf.load159 = load i32, i32* %127, align 8, !dbg !17358
  %bf.clear160 = and i32 %bf.load159, 65535, !dbg !17358
  %cmp161 = icmp eq i32 %bf.clear160, 23, !dbg !17360
  br i1 %cmp161, label %if.then162, label %if.else191, !dbg !17361

if.then162:                                       ; preds = %if.end158
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %vsrc, metadata !17362, metadata !DIExpression()), !dbg !17364
  %128 = load %struct.rtx_def*, %struct.rtx_def** %vloc123, align 8, !dbg !17365
  %u163 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %128, i32 0, i32 1, !dbg !17365
  %fld164 = bitcast %union.u* %u163 to [1 x %union.rtunion_def]*, !dbg !17365
  %arrayidx165 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld164, i64 0, i64 1, !dbg !17365
  %rt_rtx166 = bitcast %union.rtunion_def* %arrayidx165 to %struct.rtx_def**, !dbg !17365
  %129 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx166, align 8, !dbg !17365
  store %struct.rtx_def* %129, %struct.rtx_def** %vsrc, align 8, !dbg !17364
  %130 = load %struct.rtx_def*, %struct.rtx_def** %val122, align 8, !dbg !17366
  %131 = load %struct.rtx_def*, %struct.rtx_def** %vsrc, align 8, !dbg !17366
  %cmp167 = icmp ne %struct.rtx_def* %130, %131, !dbg !17366
  br i1 %cmp167, label %cond.false169, label %cond.true168, !dbg !17366

cond.true168:                                     ; preds = %if.then162
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 7693, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !17366
  br label %cond.end170, !dbg !17366

cond.false169:                                    ; preds = %if.then162
  br label %cond.end170, !dbg !17366

cond.end170:                                      ; preds = %cond.false169, %cond.true168
  %cond171 = phi i32 [ 0, %cond.true168 ], [ 0, %cond.false169 ], !dbg !17366
  %132 = load %struct.rtx_def*, %struct.rtx_def** %vloc123, align 8, !dbg !17367
  %133 = load %struct.rtx_def*, %struct.rtx_def** %uloc124, align 8, !dbg !17367
  %cmp172 = icmp eq %struct.rtx_def* %132, %133, !dbg !17367
  br i1 %cmp172, label %cond.false178, label %lor.lhs.false, !dbg !17367

lor.lhs.false:                                    ; preds = %cond.end170
  %134 = load %struct.rtx_def*, %struct.rtx_def** %loc119, align 8, !dbg !17367
  %135 = bitcast %struct.rtx_def* %134 to i32*, !dbg !17367
  %bf.load173 = load i32, i32* %135, align 8, !dbg !17367
  %bf.lshr174 = lshr i32 %bf.load173, 27, !dbg !17367
  %bf.clear175 = and i32 %bf.lshr174, 1, !dbg !17367
  %tobool176 = icmp ne i32 %bf.clear175, 0, !dbg !17367
  br i1 %tobool176, label %cond.false178, label %cond.true177, !dbg !17367

cond.true177:                                     ; preds = %lor.lhs.false
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 7694, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !17367
  br label %cond.end179, !dbg !17367

cond.false178:                                    ; preds = %lor.lhs.false, %cond.end170
  br label %cond.end179, !dbg !17367

cond.end179:                                      ; preds = %cond.false178, %cond.true177
  %cond180 = phi i32 [ 0, %cond.true177 ], [ 0, %cond.false178 ], !dbg !17367
  %136 = load %struct.rtx_def*, %struct.rtx_def** %vloc123, align 8, !dbg !17368
  %u181 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %136, i32 0, i32 1, !dbg !17368
  %fld182 = bitcast %union.u* %u181 to [1 x %union.rtunion_def]*, !dbg !17368
  %arrayidx183 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld182, i64 0, i64 0, !dbg !17368
  %rt_rtx184 = bitcast %union.rtunion_def* %arrayidx183 to %struct.rtx_def**, !dbg !17368
  %137 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx184, align 8, !dbg !17368
  store %struct.rtx_def* %137, %struct.rtx_def** %vloc123, align 8, !dbg !17369
  %138 = load %struct.rtx_def*, %struct.rtx_def** %loc119, align 8, !dbg !17370
  %139 = bitcast %struct.rtx_def* %138 to i32*, !dbg !17370
  %bf.load185 = load i32, i32* %139, align 8, !dbg !17370
  %bf.lshr186 = lshr i32 %bf.load185, 27, !dbg !17370
  %bf.clear187 = and i32 %bf.lshr186, 1, !dbg !17370
  %tobool188 = icmp ne i32 %bf.clear187, 0, !dbg !17370
  br i1 %tobool188, label %if.then189, label %if.end190, !dbg !17372

if.then189:                                       ; preds = %cond.end179
  %140 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !17373
  %141 = load %struct.rtx_def*, %struct.rtx_def** %val122, align 8, !dbg !17374
  %142 = load %struct.rtx_def*, %struct.rtx_def** %vsrc, align 8, !dbg !17375
  %143 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !17376
  call void @val_resolve(%struct.dataflow_set_def* %140, %struct.rtx_def* %141, %struct.rtx_def* %142, %struct.rtx_def* %143), !dbg !17377
  br label %if.end190, !dbg !17377

if.end190:                                        ; preds = %if.then189, %cond.end179
  br label %if.end217, !dbg !17378

if.else191:                                       ; preds = %if.end158
  %144 = load %struct.rtx_def*, %struct.rtx_def** %loc119, align 8, !dbg !17379
  %145 = bitcast %struct.rtx_def* %144 to i32*, !dbg !17379
  %bf.load192 = load i32, i32* %145, align 8, !dbg !17379
  %bf.lshr193 = lshr i32 %bf.load192, 27, !dbg !17379
  %bf.clear194 = and i32 %bf.lshr193, 1, !dbg !17379
  %tobool195 = icmp ne i32 %bf.clear194, 0, !dbg !17379
  br i1 %tobool195, label %if.then196, label %if.end216, !dbg !17381

if.then196:                                       ; preds = %if.else191
  %146 = load %struct.rtx_def*, %struct.rtx_def** %uloc124, align 8, !dbg !17382
  %147 = bitcast %struct.rtx_def* %146 to i32*, !dbg !17382
  %bf.load197 = load i32, i32* %147, align 8, !dbg !17382
  %bf.clear198 = and i32 %bf.load197, 65535, !dbg !17382
  %cmp199 = icmp eq i32 %bf.clear198, 23, !dbg !17382
  br i1 %cmp199, label %land.lhs.true200, label %cond.true208, !dbg !17382

land.lhs.true200:                                 ; preds = %if.then196
  %148 = load %struct.rtx_def*, %struct.rtx_def** %uloc124, align 8, !dbg !17382
  %u201 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %148, i32 0, i32 1, !dbg !17382
  %fld202 = bitcast %union.u* %u201 to [1 x %union.rtunion_def]*, !dbg !17382
  %arrayidx203 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld202, i64 0, i64 1, !dbg !17382
  %rt_rtx204 = bitcast %union.rtunion_def* %arrayidx203 to %struct.rtx_def**, !dbg !17382
  %149 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx204, align 8, !dbg !17382
  %150 = bitcast %struct.rtx_def* %149 to i32*, !dbg !17382
  %bf.load205 = load i32, i32* %150, align 8, !dbg !17382
  %bf.clear206 = and i32 %bf.load205, 65535, !dbg !17382
  %cmp207 = icmp eq i32 %bf.clear206, 37, !dbg !17382
  br i1 %cmp207, label %cond.false209, label %cond.true208, !dbg !17382

cond.true208:                                     ; preds = %land.lhs.true200, %if.then196
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 7704, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !17382
  br label %cond.end210, !dbg !17382

cond.false209:                                    ; preds = %land.lhs.true200
  br label %cond.end210, !dbg !17382

cond.end210:                                      ; preds = %cond.false209, %cond.true208
  %cond211 = phi i32 [ 0, %cond.true208 ], [ 0, %cond.false209 ], !dbg !17382
  %151 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !17384
  %152 = load %struct.rtx_def*, %struct.rtx_def** %val122, align 8, !dbg !17385
  %153 = load %struct.rtx_def*, %struct.rtx_def** %uloc124, align 8, !dbg !17386
  %u212 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %153, i32 0, i32 1, !dbg !17386
  %fld213 = bitcast %union.u* %u212 to [1 x %union.rtunion_def]*, !dbg !17386
  %arrayidx214 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld213, i64 0, i64 1, !dbg !17386
  %rt_rtx215 = bitcast %union.rtunion_def* %arrayidx214 to %struct.rtx_def**, !dbg !17386
  %154 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx215, align 8, !dbg !17386
  %155 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !17387
  call void @val_resolve(%struct.dataflow_set_def* %151, %struct.rtx_def* %152, %struct.rtx_def* %154, %struct.rtx_def* %155), !dbg !17388
  br label %if.end216, !dbg !17389

if.end216:                                        ; preds = %cond.end210, %if.else191
  br label %if.end217

if.end217:                                        ; preds = %if.end216, %if.end190
  %156 = load %struct.rtx_def*, %struct.rtx_def** %loc119, align 8, !dbg !17390
  %157 = bitcast %struct.rtx_def* %156 to i32*, !dbg !17390
  %bf.load218 = load i32, i32* %157, align 8, !dbg !17390
  %bf.lshr219 = lshr i32 %bf.load218, 29, !dbg !17390
  %bf.clear220 = and i32 %bf.lshr219, 1, !dbg !17390
  %tobool221 = icmp ne i32 %bf.clear220, 0, !dbg !17390
  br i1 %tobool221, label %if.then222, label %if.else282, !dbg !17392

if.then222:                                       ; preds = %if.end217
  %158 = load %struct.rtx_def*, %struct.rtx_def** %loc119, align 8, !dbg !17393
  %159 = bitcast %struct.rtx_def* %158 to i32*, !dbg !17393
  %bf.load223 = load i32, i32* %159, align 8, !dbg !17393
  %bf.lshr224 = lshr i32 %bf.load223, 26, !dbg !17393
  %bf.clear225 = and i32 %bf.lshr224, 1, !dbg !17393
  %tobool226 = icmp ne i32 %bf.clear225, 0, !dbg !17393
  br i1 %tobool226, label %if.then227, label %if.else239, !dbg !17396

if.then227:                                       ; preds = %if.then222
  %160 = load %struct.rtx_def*, %struct.rtx_def** %uloc124, align 8, !dbg !17397
  %161 = bitcast %struct.rtx_def* %160 to i32*, !dbg !17397
  %bf.load228 = load i32, i32* %161, align 8, !dbg !17397
  %bf.clear229 = and i32 %bf.load228, 65535, !dbg !17397
  %cmp230 = icmp eq i32 %bf.clear229, 37, !dbg !17397
  br i1 %cmp230, label %if.then231, label %if.else232, !dbg !17400

if.then231:                                       ; preds = %if.then227
  %162 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !17401
  %163 = load %struct.rtx_def*, %struct.rtx_def** %uloc124, align 8, !dbg !17402
  call void @var_reg_delete(%struct.dataflow_set_def* %162, %struct.rtx_def* %163, i8 zeroext 1), !dbg !17403
  br label %if.end238, !dbg !17403

if.else232:                                       ; preds = %if.then227
  %164 = load %struct.rtx_def*, %struct.rtx_def** %uloc124, align 8, !dbg !17404
  %165 = bitcast %struct.rtx_def* %164 to i32*, !dbg !17404
  %bf.load233 = load i32, i32* %165, align 8, !dbg !17404
  %bf.clear234 = and i32 %bf.load233, 65535, !dbg !17404
  %cmp235 = icmp eq i32 %bf.clear234, 43, !dbg !17404
  br i1 %cmp235, label %if.then236, label %if.end237, !dbg !17406

if.then236:                                       ; preds = %if.else232
  %166 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !17407
  %167 = load %struct.rtx_def*, %struct.rtx_def** %uloc124, align 8, !dbg !17408
  call void @var_mem_delete(%struct.dataflow_set_def* %166, %struct.rtx_def* %167, i8 zeroext 1), !dbg !17409
  br label %if.end237, !dbg !17409

if.end237:                                        ; preds = %if.then236, %if.else232
  br label %if.end238

if.end238:                                        ; preds = %if.end237, %if.then231
  br label %if.end281, !dbg !17410

if.else239:                                       ; preds = %if.then222
  call void @llvm.dbg.declare(metadata i8* %copied_p, metadata !17411, metadata !DIExpression()), !dbg !17413
  %168 = load %struct.rtx_def*, %struct.rtx_def** %loc119, align 8, !dbg !17414
  %169 = bitcast %struct.rtx_def* %168 to i32*, !dbg !17414
  %bf.load240 = load i32, i32* %169, align 8, !dbg !17414
  %bf.lshr241 = lshr i32 %bf.load240, 24, !dbg !17414
  %bf.clear242 = and i32 %bf.lshr241, 1, !dbg !17414
  %conv = trunc i32 %bf.clear242 to i8, !dbg !17414
  store i8 %conv, i8* %copied_p, align 1, !dbg !17413
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %set_src, metadata !17415, metadata !DIExpression()), !dbg !17416
  store %struct.rtx_def* null, %struct.rtx_def** %set_src, align 8, !dbg !17416
  call void @llvm.dbg.declare(metadata i32* %status, metadata !17417, metadata !DIExpression()), !dbg !17418
  store i32 2, i32* %status, align 4, !dbg !17418
  %170 = load %struct.rtx_def*, %struct.rtx_def** %uloc124, align 8, !dbg !17419
  %171 = bitcast %struct.rtx_def* %170 to i32*, !dbg !17419
  %bf.load243 = load i32, i32* %171, align 8, !dbg !17419
  %bf.clear244 = and i32 %bf.load243, 65535, !dbg !17419
  %cmp245 = icmp eq i32 %bf.clear244, 23, !dbg !17421
  br i1 %cmp245, label %if.then247, label %if.end256, !dbg !17422

if.then247:                                       ; preds = %if.else239
  %172 = load %struct.rtx_def*, %struct.rtx_def** %uloc124, align 8, !dbg !17423
  %u248 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %172, i32 0, i32 1, !dbg !17423
  %fld249 = bitcast %union.u* %u248 to [1 x %union.rtunion_def]*, !dbg !17423
  %arrayidx250 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld249, i64 0, i64 1, !dbg !17423
  %rt_rtx251 = bitcast %union.rtunion_def* %arrayidx250 to %struct.rtx_def**, !dbg !17423
  %173 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx251, align 8, !dbg !17423
  store %struct.rtx_def* %173, %struct.rtx_def** %set_src, align 8, !dbg !17425
  %174 = load %struct.rtx_def*, %struct.rtx_def** %uloc124, align 8, !dbg !17426
  %u252 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %174, i32 0, i32 1, !dbg !17426
  %fld253 = bitcast %union.u* %u252 to [1 x %union.rtunion_def]*, !dbg !17426
  %arrayidx254 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld253, i64 0, i64 0, !dbg !17426
  %rt_rtx255 = bitcast %union.rtunion_def* %arrayidx254 to %struct.rtx_def**, !dbg !17426
  %175 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx255, align 8, !dbg !17426
  store %struct.rtx_def* %175, %struct.rtx_def** %uloc124, align 8, !dbg !17427
  br label %if.end256, !dbg !17428

if.end256:                                        ; preds = %if.then247, %if.else239
  %176 = load i8, i8* %copied_p, align 1, !dbg !17429
  %tobool257 = icmp ne i8 %176, 0, !dbg !17429
  br i1 %tobool257, label %if.then258, label %if.end261, !dbg !17431

if.then258:                                       ; preds = %if.end256
  %177 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !17432
  %178 = load %struct.rtx_def*, %struct.rtx_def** %set_src, align 8, !dbg !17434
  %call259 = call i32 @find_src_status(%struct.dataflow_set_def* %177, %struct.rtx_def* %178), !dbg !17435
  store i32 %call259, i32* %status, align 4, !dbg !17436
  %179 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !17437
  %180 = load %struct.rtx_def*, %struct.rtx_def** %set_src, align 8, !dbg !17438
  %call260 = call %struct.rtx_def* @find_src_set_src(%struct.dataflow_set_def* %179, %struct.rtx_def* %180), !dbg !17439
  store %struct.rtx_def* %call260, %struct.rtx_def** %set_src, align 8, !dbg !17440
  br label %if.end261, !dbg !17441

if.end261:                                        ; preds = %if.then258, %if.end256
  %181 = load %struct.rtx_def*, %struct.rtx_def** %uloc124, align 8, !dbg !17442
  %182 = bitcast %struct.rtx_def* %181 to i32*, !dbg !17442
  %bf.load262 = load i32, i32* %182, align 8, !dbg !17442
  %bf.clear263 = and i32 %bf.load262, 65535, !dbg !17442
  %cmp264 = icmp eq i32 %bf.clear263, 37, !dbg !17442
  br i1 %cmp264, label %if.then266, label %if.else269, !dbg !17444

if.then266:                                       ; preds = %if.end261
  %183 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !17445
  %184 = load %struct.rtx_def*, %struct.rtx_def** %uloc124, align 8, !dbg !17446
  %185 = load i8, i8* %copied_p, align 1, !dbg !17447
  %tobool267 = icmp ne i8 %185, 0, !dbg !17448
  %lnot = xor i1 %tobool267, true, !dbg !17448
  %lnot.ext = zext i1 %lnot to i32, !dbg !17448
  %conv268 = trunc i32 %lnot.ext to i8, !dbg !17448
  %186 = load i32, i32* %status, align 4, !dbg !17449
  %187 = load %struct.rtx_def*, %struct.rtx_def** %set_src, align 8, !dbg !17450
  call void @var_reg_delete_and_set(%struct.dataflow_set_def* %183, %struct.rtx_def* %184, i8 zeroext %conv268, i32 %186, %struct.rtx_def* %187), !dbg !17451
  br label %if.end280, !dbg !17451

if.else269:                                       ; preds = %if.end261
  %188 = load %struct.rtx_def*, %struct.rtx_def** %uloc124, align 8, !dbg !17452
  %189 = bitcast %struct.rtx_def* %188 to i32*, !dbg !17452
  %bf.load270 = load i32, i32* %189, align 8, !dbg !17452
  %bf.clear271 = and i32 %bf.load270, 65535, !dbg !17452
  %cmp272 = icmp eq i32 %bf.clear271, 43, !dbg !17452
  br i1 %cmp272, label %if.then274, label %if.end279, !dbg !17454

if.then274:                                       ; preds = %if.else269
  %190 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !17455
  %191 = load %struct.rtx_def*, %struct.rtx_def** %uloc124, align 8, !dbg !17456
  %192 = load i8, i8* %copied_p, align 1, !dbg !17457
  %tobool275 = icmp ne i8 %192, 0, !dbg !17458
  %lnot276 = xor i1 %tobool275, true, !dbg !17458
  %lnot.ext277 = zext i1 %lnot276 to i32, !dbg !17458
  %conv278 = trunc i32 %lnot.ext277 to i8, !dbg !17458
  %193 = load i32, i32* %status, align 4, !dbg !17459
  %194 = load %struct.rtx_def*, %struct.rtx_def** %set_src, align 8, !dbg !17460
  call void @var_mem_delete_and_set(%struct.dataflow_set_def* %190, %struct.rtx_def* %191, i8 zeroext %conv278, i32 %193, %struct.rtx_def* %194), !dbg !17461
  br label %if.end279, !dbg !17461

if.end279:                                        ; preds = %if.then274, %if.else269
  br label %if.end280

if.end280:                                        ; preds = %if.end279, %if.then266
  br label %if.end281

if.end281:                                        ; preds = %if.end280, %if.end238
  br label %if.end290, !dbg !17462

if.else282:                                       ; preds = %if.end217
  %195 = load %struct.rtx_def*, %struct.rtx_def** %uloc124, align 8, !dbg !17463
  %196 = bitcast %struct.rtx_def* %195 to i32*, !dbg !17463
  %bf.load283 = load i32, i32* %196, align 8, !dbg !17463
  %bf.clear284 = and i32 %bf.load283, 65535, !dbg !17463
  %cmp285 = icmp eq i32 %bf.clear284, 37, !dbg !17463
  br i1 %cmp285, label %if.then287, label %if.end289, !dbg !17465

if.then287:                                       ; preds = %if.else282
  %197 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !17466
  %198 = load %struct.rtx_def*, %struct.rtx_def** %uloc124, align 8, !dbg !17467
  %call288 = call i32 @rhs_regno(%struct.rtx_def* %198), !dbg !17467
  call void @var_regno_delete(%struct.dataflow_set_def* %197, i32 %call288), !dbg !17468
  br label %if.end289, !dbg !17468

if.end289:                                        ; preds = %if.then287, %if.else282
  br label %if.end290

if.end290:                                        ; preds = %if.end289, %if.end281
  %199 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !17469
  %200 = load %struct.rtx_def*, %struct.rtx_def** %val122, align 8, !dbg !17470
  %201 = load %struct.rtx_def*, %struct.rtx_def** %vloc123, align 8, !dbg !17471
  %202 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !17472
  call void @val_store(%struct.dataflow_set_def* %199, %struct.rtx_def* %200, %struct.rtx_def* %201, %struct.rtx_def* %202, i8 zeroext 1), !dbg !17473
  %203 = load %struct.rtx_def*, %struct.rtx_def** %reverse, align 8, !dbg !17474
  %tobool291 = icmp ne %struct.rtx_def* %203, null, !dbg !17474
  br i1 %tobool291, label %if.then292, label %if.end301, !dbg !17476

if.then292:                                       ; preds = %if.end290
  %204 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !17477
  %205 = load %struct.rtx_def*, %struct.rtx_def** %reverse, align 8, !dbg !17478
  %u293 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %205, i32 0, i32 1, !dbg !17478
  %fld294 = bitcast %union.u* %u293 to [1 x %union.rtunion_def]*, !dbg !17478
  %arrayidx295 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld294, i64 0, i64 0, !dbg !17478
  %rt_rtx296 = bitcast %union.rtunion_def* %arrayidx295 to %struct.rtx_def**, !dbg !17478
  %206 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx296, align 8, !dbg !17478
  %207 = load %struct.rtx_def*, %struct.rtx_def** %reverse, align 8, !dbg !17479
  %u297 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %207, i32 0, i32 1, !dbg !17479
  %fld298 = bitcast %union.u* %u297 to [1 x %union.rtunion_def]*, !dbg !17479
  %arrayidx299 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld298, i64 0, i64 1, !dbg !17479
  %rt_rtx300 = bitcast %union.rtunion_def* %arrayidx299 to %struct.rtx_def**, !dbg !17479
  %208 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx300, align 8, !dbg !17479
  %209 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !17480
  call void @val_store(%struct.dataflow_set_def* %204, %struct.rtx_def* %206, %struct.rtx_def* %208, %struct.rtx_def* %209, i8 zeroext 0), !dbg !17481
  br label %if.end301, !dbg !17481

if.end301:                                        ; preds = %if.then292, %if.end290
  %210 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !17482
  %u302 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %210, i32 0, i32 1, !dbg !17482
  %fld303 = bitcast %union.u* %u302 to [1 x %union.rtunion_def]*, !dbg !17482
  %arrayidx304 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld303, i64 0, i64 2, !dbg !17482
  %rt_rtx305 = bitcast %union.rtunion_def* %arrayidx304 to %struct.rtx_def**, !dbg !17482
  %211 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx305, align 8, !dbg !17482
  %212 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !17483
  %vars306 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %212, i32 0, i32 2, !dbg !17484
  %213 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars306, align 8, !dbg !17484
  call void @emit_notes_for_changes(%struct.rtx_def* %211, i32 0, %struct.shared_hash_def* %213), !dbg !17485
  br label %sw.epilog, !dbg !17486

sw.bb307:                                         ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %loc308, metadata !17487, metadata !DIExpression()), !dbg !17489
  %214 = load %struct.micro_operation_def*, %struct.micro_operation_def** %mo, align 8, !dbg !17490
  %u309 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %214, i32 0, i32 2, !dbg !17491
  %loc310 = bitcast %union.anon.0* %u309 to %struct.rtx_def**, !dbg !17492
  %215 = load %struct.rtx_def*, %struct.rtx_def** %loc310, align 8, !dbg !17492
  store %struct.rtx_def* %215, %struct.rtx_def** %loc308, align 8, !dbg !17489
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %set_src311, metadata !17493, metadata !DIExpression()), !dbg !17494
  store %struct.rtx_def* null, %struct.rtx_def** %set_src311, align 8, !dbg !17494
  %216 = load %struct.rtx_def*, %struct.rtx_def** %loc308, align 8, !dbg !17495
  %217 = bitcast %struct.rtx_def* %216 to i32*, !dbg !17495
  %bf.load312 = load i32, i32* %217, align 8, !dbg !17495
  %bf.clear313 = and i32 %bf.load312, 65535, !dbg !17495
  %cmp314 = icmp eq i32 %bf.clear313, 23, !dbg !17497
  br i1 %cmp314, label %if.then316, label %if.end325, !dbg !17498

if.then316:                                       ; preds = %sw.bb307
  %218 = load %struct.rtx_def*, %struct.rtx_def** %loc308, align 8, !dbg !17499
  %u317 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %218, i32 0, i32 1, !dbg !17499
  %fld318 = bitcast %union.u* %u317 to [1 x %union.rtunion_def]*, !dbg !17499
  %arrayidx319 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld318, i64 0, i64 1, !dbg !17499
  %rt_rtx320 = bitcast %union.rtunion_def* %arrayidx319 to %struct.rtx_def**, !dbg !17499
  %219 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx320, align 8, !dbg !17499
  store %struct.rtx_def* %219, %struct.rtx_def** %set_src311, align 8, !dbg !17501
  %220 = load %struct.rtx_def*, %struct.rtx_def** %loc308, align 8, !dbg !17502
  %u321 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %220, i32 0, i32 1, !dbg !17502
  %fld322 = bitcast %union.u* %u321 to [1 x %union.rtunion_def]*, !dbg !17502
  %arrayidx323 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld322, i64 0, i64 0, !dbg !17502
  %rt_rtx324 = bitcast %union.rtunion_def* %arrayidx323 to %struct.rtx_def**, !dbg !17502
  %221 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx324, align 8, !dbg !17502
  store %struct.rtx_def* %221, %struct.rtx_def** %loc308, align 8, !dbg !17503
  br label %if.end325, !dbg !17504

if.end325:                                        ; preds = %if.then316, %sw.bb307
  %222 = load %struct.rtx_def*, %struct.rtx_def** %loc308, align 8, !dbg !17505
  %223 = bitcast %struct.rtx_def* %222 to i32*, !dbg !17505
  %bf.load326 = load i32, i32* %223, align 8, !dbg !17505
  %bf.clear327 = and i32 %bf.load326, 65535, !dbg !17505
  %cmp328 = icmp eq i32 %bf.clear327, 37, !dbg !17505
  br i1 %cmp328, label %if.then330, label %if.else331, !dbg !17507

if.then330:                                       ; preds = %if.end325
  %224 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !17508
  %225 = load %struct.rtx_def*, %struct.rtx_def** %loc308, align 8, !dbg !17509
  %226 = load %struct.rtx_def*, %struct.rtx_def** %set_src311, align 8, !dbg !17510
  call void @var_reg_delete_and_set(%struct.dataflow_set_def* %224, %struct.rtx_def* %225, i8 zeroext 1, i32 2, %struct.rtx_def* %226), !dbg !17511
  br label %if.end332, !dbg !17511

if.else331:                                       ; preds = %if.end325
  %227 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !17512
  %228 = load %struct.rtx_def*, %struct.rtx_def** %loc308, align 8, !dbg !17513
  %229 = load %struct.rtx_def*, %struct.rtx_def** %set_src311, align 8, !dbg !17514
  call void @var_mem_delete_and_set(%struct.dataflow_set_def* %227, %struct.rtx_def* %228, i8 zeroext 1, i32 2, %struct.rtx_def* %229), !dbg !17515
  br label %if.end332

if.end332:                                        ; preds = %if.else331, %if.then330
  %230 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !17516
  %u333 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %230, i32 0, i32 1, !dbg !17516
  %fld334 = bitcast %union.u* %u333 to [1 x %union.rtunion_def]*, !dbg !17516
  %arrayidx335 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld334, i64 0, i64 2, !dbg !17516
  %rt_rtx336 = bitcast %union.rtunion_def* %arrayidx335 to %struct.rtx_def**, !dbg !17516
  %231 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx336, align 8, !dbg !17516
  %232 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !17517
  %vars337 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %232, i32 0, i32 2, !dbg !17518
  %233 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars337, align 8, !dbg !17518
  call void @emit_notes_for_changes(%struct.rtx_def* %231, i32 0, %struct.shared_hash_def* %233), !dbg !17519
  br label %sw.epilog, !dbg !17520

sw.bb338:                                         ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %loc339, metadata !17521, metadata !DIExpression()), !dbg !17523
  %234 = load %struct.micro_operation_def*, %struct.micro_operation_def** %mo, align 8, !dbg !17524
  %u340 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %234, i32 0, i32 2, !dbg !17525
  %loc341 = bitcast %union.anon.0* %u340 to %struct.rtx_def**, !dbg !17526
  %235 = load %struct.rtx_def*, %struct.rtx_def** %loc341, align 8, !dbg !17526
  store %struct.rtx_def* %235, %struct.rtx_def** %loc339, align 8, !dbg !17523
  call void @llvm.dbg.declare(metadata i32* %src_status, metadata !17527, metadata !DIExpression()), !dbg !17528
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %set_src342, metadata !17529, metadata !DIExpression()), !dbg !17530
  store %struct.rtx_def* null, %struct.rtx_def** %set_src342, align 8, !dbg !17530
  %236 = load %struct.rtx_def*, %struct.rtx_def** %loc339, align 8, !dbg !17531
  %237 = bitcast %struct.rtx_def* %236 to i32*, !dbg !17531
  %bf.load343 = load i32, i32* %237, align 8, !dbg !17531
  %bf.clear344 = and i32 %bf.load343, 65535, !dbg !17531
  %cmp345 = icmp eq i32 %bf.clear344, 23, !dbg !17533
  br i1 %cmp345, label %if.then347, label %if.end356, !dbg !17534

if.then347:                                       ; preds = %sw.bb338
  %238 = load %struct.rtx_def*, %struct.rtx_def** %loc339, align 8, !dbg !17535
  %u348 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %238, i32 0, i32 1, !dbg !17535
  %fld349 = bitcast %union.u* %u348 to [1 x %union.rtunion_def]*, !dbg !17535
  %arrayidx350 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld349, i64 0, i64 1, !dbg !17535
  %rt_rtx351 = bitcast %union.rtunion_def* %arrayidx350 to %struct.rtx_def**, !dbg !17535
  %239 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx351, align 8, !dbg !17535
  store %struct.rtx_def* %239, %struct.rtx_def** %set_src342, align 8, !dbg !17537
  %240 = load %struct.rtx_def*, %struct.rtx_def** %loc339, align 8, !dbg !17538
  %u352 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %240, i32 0, i32 1, !dbg !17538
  %fld353 = bitcast %union.u* %u352 to [1 x %union.rtunion_def]*, !dbg !17538
  %arrayidx354 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld353, i64 0, i64 0, !dbg !17538
  %rt_rtx355 = bitcast %union.rtunion_def* %arrayidx354 to %struct.rtx_def**, !dbg !17538
  %241 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx355, align 8, !dbg !17538
  store %struct.rtx_def* %241, %struct.rtx_def** %loc339, align 8, !dbg !17539
  br label %if.end356, !dbg !17540

if.end356:                                        ; preds = %if.then347, %sw.bb338
  %242 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !17541
  %243 = load %struct.rtx_def*, %struct.rtx_def** %set_src342, align 8, !dbg !17542
  %call357 = call i32 @find_src_status(%struct.dataflow_set_def* %242, %struct.rtx_def* %243), !dbg !17543
  store i32 %call357, i32* %src_status, align 4, !dbg !17544
  %244 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !17545
  %245 = load %struct.rtx_def*, %struct.rtx_def** %set_src342, align 8, !dbg !17546
  %call358 = call %struct.rtx_def* @find_src_set_src(%struct.dataflow_set_def* %244, %struct.rtx_def* %245), !dbg !17547
  store %struct.rtx_def* %call358, %struct.rtx_def** %set_src342, align 8, !dbg !17548
  %246 = load %struct.rtx_def*, %struct.rtx_def** %loc339, align 8, !dbg !17549
  %247 = bitcast %struct.rtx_def* %246 to i32*, !dbg !17549
  %bf.load359 = load i32, i32* %247, align 8, !dbg !17549
  %bf.clear360 = and i32 %bf.load359, 65535, !dbg !17549
  %cmp361 = icmp eq i32 %bf.clear360, 37, !dbg !17549
  br i1 %cmp361, label %if.then363, label %if.else364, !dbg !17551

if.then363:                                       ; preds = %if.end356
  %248 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !17552
  %249 = load %struct.rtx_def*, %struct.rtx_def** %loc339, align 8, !dbg !17553
  %250 = load i32, i32* %src_status, align 4, !dbg !17554
  %251 = load %struct.rtx_def*, %struct.rtx_def** %set_src342, align 8, !dbg !17555
  call void @var_reg_delete_and_set(%struct.dataflow_set_def* %248, %struct.rtx_def* %249, i8 zeroext 0, i32 %250, %struct.rtx_def* %251), !dbg !17556
  br label %if.end365, !dbg !17556

if.else364:                                       ; preds = %if.end356
  %252 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !17557
  %253 = load %struct.rtx_def*, %struct.rtx_def** %loc339, align 8, !dbg !17558
  %254 = load i32, i32* %src_status, align 4, !dbg !17559
  %255 = load %struct.rtx_def*, %struct.rtx_def** %set_src342, align 8, !dbg !17560
  call void @var_mem_delete_and_set(%struct.dataflow_set_def* %252, %struct.rtx_def* %253, i8 zeroext 0, i32 %254, %struct.rtx_def* %255), !dbg !17561
  br label %if.end365

if.end365:                                        ; preds = %if.else364, %if.then363
  %256 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !17562
  %u366 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %256, i32 0, i32 1, !dbg !17562
  %fld367 = bitcast %union.u* %u366 to [1 x %union.rtunion_def]*, !dbg !17562
  %arrayidx368 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld367, i64 0, i64 2, !dbg !17562
  %rt_rtx369 = bitcast %union.rtunion_def* %arrayidx368 to %struct.rtx_def**, !dbg !17562
  %257 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx369, align 8, !dbg !17562
  %258 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !17563
  %vars370 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %258, i32 0, i32 2, !dbg !17564
  %259 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars370, align 8, !dbg !17564
  call void @emit_notes_for_changes(%struct.rtx_def* %257, i32 0, %struct.shared_hash_def* %259), !dbg !17565
  br label %sw.epilog, !dbg !17566

sw.bb371:                                         ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %loc372, metadata !17567, metadata !DIExpression()), !dbg !17569
  %260 = load %struct.micro_operation_def*, %struct.micro_operation_def** %mo, align 8, !dbg !17570
  %u373 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %260, i32 0, i32 2, !dbg !17571
  %loc374 = bitcast %union.anon.0* %u373 to %struct.rtx_def**, !dbg !17572
  %261 = load %struct.rtx_def*, %struct.rtx_def** %loc374, align 8, !dbg !17572
  store %struct.rtx_def* %261, %struct.rtx_def** %loc372, align 8, !dbg !17569
  %262 = load %struct.rtx_def*, %struct.rtx_def** %loc372, align 8, !dbg !17573
  %263 = bitcast %struct.rtx_def* %262 to i32*, !dbg !17573
  %bf.load375 = load i32, i32* %263, align 8, !dbg !17573
  %bf.clear376 = and i32 %bf.load375, 65535, !dbg !17573
  %cmp377 = icmp eq i32 %bf.clear376, 37, !dbg !17573
  br i1 %cmp377, label %if.then379, label %if.else380, !dbg !17575

if.then379:                                       ; preds = %sw.bb371
  %264 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !17576
  %265 = load %struct.rtx_def*, %struct.rtx_def** %loc372, align 8, !dbg !17577
  call void @var_reg_delete(%struct.dataflow_set_def* %264, %struct.rtx_def* %265, i8 zeroext 0), !dbg !17578
  br label %if.end381, !dbg !17578

if.else380:                                       ; preds = %sw.bb371
  %266 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !17579
  %267 = load %struct.rtx_def*, %struct.rtx_def** %loc372, align 8, !dbg !17580
  call void @var_mem_delete(%struct.dataflow_set_def* %266, %struct.rtx_def* %267, i8 zeroext 0), !dbg !17581
  br label %if.end381

if.end381:                                        ; preds = %if.else380, %if.then379
  %268 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !17582
  %269 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !17583
  %vars382 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %269, i32 0, i32 2, !dbg !17584
  %270 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars382, align 8, !dbg !17584
  call void @emit_notes_for_changes(%struct.rtx_def* %268, i32 1, %struct.shared_hash_def* %270), !dbg !17585
  br label %sw.epilog, !dbg !17586

sw.bb383:                                         ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %loc384, metadata !17587, metadata !DIExpression()), !dbg !17589
  %271 = load %struct.micro_operation_def*, %struct.micro_operation_def** %mo, align 8, !dbg !17590
  %u385 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %271, i32 0, i32 2, !dbg !17591
  %loc386 = bitcast %union.anon.0* %u385 to %struct.rtx_def**, !dbg !17592
  %272 = load %struct.rtx_def*, %struct.rtx_def** %loc386, align 8, !dbg !17592
  store %struct.rtx_def* %272, %struct.rtx_def** %loc384, align 8, !dbg !17589
  %273 = load %struct.rtx_def*, %struct.rtx_def** %loc384, align 8, !dbg !17593
  %274 = bitcast %struct.rtx_def* %273 to i32*, !dbg !17593
  %bf.load387 = load i32, i32* %274, align 8, !dbg !17593
  %bf.clear388 = and i32 %bf.load387, 65535, !dbg !17593
  %cmp389 = icmp eq i32 %bf.clear388, 37, !dbg !17593
  br i1 %cmp389, label %if.then391, label %if.else392, !dbg !17595

if.then391:                                       ; preds = %sw.bb383
  %275 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !17596
  %276 = load %struct.rtx_def*, %struct.rtx_def** %loc384, align 8, !dbg !17597
  call void @var_reg_delete(%struct.dataflow_set_def* %275, %struct.rtx_def* %276, i8 zeroext 1), !dbg !17598
  br label %if.end393, !dbg !17598

if.else392:                                       ; preds = %sw.bb383
  %277 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !17599
  %278 = load %struct.rtx_def*, %struct.rtx_def** %loc384, align 8, !dbg !17600
  call void @var_mem_delete(%struct.dataflow_set_def* %277, %struct.rtx_def* %278, i8 zeroext 1), !dbg !17601
  br label %if.end393

if.end393:                                        ; preds = %if.else392, %if.then391
  %279 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !17602
  %u394 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %279, i32 0, i32 1, !dbg !17602
  %fld395 = bitcast %union.u* %u394 to [1 x %union.rtunion_def]*, !dbg !17602
  %arrayidx396 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld395, i64 0, i64 2, !dbg !17602
  %rt_rtx397 = bitcast %union.rtunion_def* %arrayidx396 to %struct.rtx_def**, !dbg !17602
  %280 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx397, align 8, !dbg !17602
  %281 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !17603
  %vars398 = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %281, i32 0, i32 2, !dbg !17604
  %282 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars398, align 8, !dbg !17604
  call void @emit_notes_for_changes(%struct.rtx_def* %280, i32 0, %struct.shared_hash_def* %282), !dbg !17605
  br label %sw.epilog, !dbg !17606

sw.bb399:                                         ; preds = %for.body
  %283 = load %struct.micro_operation_def*, %struct.micro_operation_def** %mo, align 8, !dbg !17607
  %u400 = getelementptr inbounds %struct.micro_operation_def, %struct.micro_operation_def* %283, i32 0, i32 2, !dbg !17608
  %adjust = bitcast %union.anon.0* %u400 to i64*, !dbg !17609
  %284 = load i64, i64* %adjust, align 8, !dbg !17609
  %285 = load %struct.dataflow_set_def*, %struct.dataflow_set_def** %set.addr, align 8, !dbg !17610
  %stack_adjust = getelementptr inbounds %struct.dataflow_set_def, %struct.dataflow_set_def* %285, i32 0, i32 0, !dbg !17611
  %286 = load i64, i64* %stack_adjust, align 8, !dbg !17612
  %add = add nsw i64 %286, %284, !dbg !17612
  store i64 %add, i64* %stack_adjust, align 8, !dbg !17612
  br label %sw.epilog, !dbg !17613

sw.epilog:                                        ; preds = %for.body, %sw.bb399, %if.end393, %if.end381, %if.end365, %if.end332, %if.end301, %if.end116, %if.end64, %if.end, %sw.bb
  br label %for.inc, !dbg !17614

for.inc:                                          ; preds = %sw.epilog
  %287 = load i32, i32* %i, align 4, !dbg !17615
  %inc = add i32 %287, 1, !dbg !17615
  store i32 %inc, i32* %i, align 4, !dbg !17615
  br label %for.cond, !dbg !17616, !llvm.loop !17617

for.end:                                          ; preds = %cond.end
  ret void, !dbg !17619
}

; Function Attrs: noinline nounwind uwtable
define internal void @VEC_variable_heap_free(%struct.VEC_variable_heap** %vec_) #0 !dbg !17620 {
entry:
  %vec_.addr = alloca %struct.VEC_variable_heap**, align 8
  store %struct.VEC_variable_heap** %vec_, %struct.VEC_variable_heap*** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_variable_heap*** %vec_.addr, metadata !17624, metadata !DIExpression()), !dbg !17625
  %0 = load %struct.VEC_variable_heap**, %struct.VEC_variable_heap*** %vec_.addr, align 8, !dbg !17626
  %1 = load %struct.VEC_variable_heap*, %struct.VEC_variable_heap** %0, align 8, !dbg !17626
  %tobool = icmp ne %struct.VEC_variable_heap* %1, null, !dbg !17626
  br i1 %tobool, label %if.then, label %if.end, !dbg !17625

if.then:                                          ; preds = %entry
  %2 = load %struct.VEC_variable_heap**, %struct.VEC_variable_heap*** %vec_.addr, align 8, !dbg !17626
  %3 = load %struct.VEC_variable_heap*, %struct.VEC_variable_heap** %2, align 8, !dbg !17626
  %4 = bitcast %struct.VEC_variable_heap* %3 to i8*, !dbg !17626
  call void @free(i8* %4), !dbg !17626
  br label %if.end, !dbg !17626

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.VEC_variable_heap**, %struct.VEC_variable_heap*** %vec_.addr, align 8, !dbg !17625
  store %struct.VEC_variable_heap* null, %struct.VEC_variable_heap** %5, align 8, !dbg !17625
  ret void, !dbg !17625
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @emit_notes_for_differences_1(i8** %slot, i8* %data) #0 !dbg !17628 {
entry:
  %retval = alloca i32, align 4
  %slot.addr = alloca i8**, align 8
  %data.addr = alloca i8*, align 8
  %new_vars = alloca %struct.htab*, align 8
  %old_var = alloca %struct.variable_def*, align 8
  %new_var = alloca %struct.variable_def*, align 8
  %empty_var = alloca %struct.variable_def*, align 8
  %lc = alloca %struct.location_chain_def*, align 8
  %lc1 = alloca %struct.location_chain_def*, align 8
  %lc2 = alloca %struct.location_chain_def*, align 8
  %i = alloca i32, align 4
  %lc116 = alloca %struct.location_chain_def*, align 8
  %cur_loc117 = alloca %struct.rtx_def*, align 8
  store i8** %slot, i8*** %slot.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %slot.addr, metadata !17629, metadata !DIExpression()), !dbg !17630
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !17631, metadata !DIExpression()), !dbg !17632
  call void @llvm.dbg.declare(metadata %struct.htab** %new_vars, metadata !17633, metadata !DIExpression()), !dbg !17634
  %0 = load i8*, i8** %data.addr, align 8, !dbg !17635
  %1 = bitcast i8* %0 to %struct.htab*, !dbg !17636
  store %struct.htab* %1, %struct.htab** %new_vars, align 8, !dbg !17634
  call void @llvm.dbg.declare(metadata %struct.variable_def** %old_var, metadata !17637, metadata !DIExpression()), !dbg !17638
  call void @llvm.dbg.declare(metadata %struct.variable_def** %new_var, metadata !17639, metadata !DIExpression()), !dbg !17640
  %2 = load i8**, i8*** %slot.addr, align 8, !dbg !17641
  %3 = load i8*, i8** %2, align 8, !dbg !17642
  %4 = bitcast i8* %3 to %struct.variable_def*, !dbg !17643
  store %struct.variable_def* %4, %struct.variable_def** %old_var, align 8, !dbg !17644
  %5 = load %struct.htab*, %struct.htab** %new_vars, align 8, !dbg !17645
  %6 = load %struct.variable_def*, %struct.variable_def** %old_var, align 8, !dbg !17646
  %dv = getelementptr inbounds %struct.variable_def, %struct.variable_def* %6, i32 0, i32 0, !dbg !17647
  %7 = load i8*, i8** %dv, align 8, !dbg !17647
  %8 = load %struct.variable_def*, %struct.variable_def** %old_var, align 8, !dbg !17648
  %dv1 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %8, i32 0, i32 0, !dbg !17649
  %9 = load i8*, i8** %dv1, align 8, !dbg !17649
  %call = call i32 @dv_htab_hash(i8* %9), !dbg !17650
  %call2 = call i8* @htab_find_with_hash(%struct.htab* %5, i8* %7, i32 %call), !dbg !17651
  %10 = bitcast i8* %call2 to %struct.variable_def*, !dbg !17652
  store %struct.variable_def* %10, %struct.variable_def** %new_var, align 8, !dbg !17653
  %11 = load %struct.variable_def*, %struct.variable_def** %new_var, align 8, !dbg !17654
  %tobool = icmp ne %struct.variable_def* %11, null, !dbg !17654
  br i1 %tobool, label %if.end16, label %if.then, !dbg !17656

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.variable_def** %empty_var, metadata !17657, metadata !DIExpression()), !dbg !17659
  %12 = load %struct.variable_def*, %struct.variable_def** %old_var, align 8, !dbg !17660
  %dv3 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %12, i32 0, i32 0, !dbg !17661
  %13 = load i8*, i8** %dv3, align 8, !dbg !17661
  %call4 = call %struct.alloc_pool_def* @dv_pool(i8* %13), !dbg !17662
  %call5 = call i8* @pool_alloc(%struct.alloc_pool_def* %call4), !dbg !17663
  %14 = bitcast i8* %call5 to %struct.variable_def*, !dbg !17664
  store %struct.variable_def* %14, %struct.variable_def** %empty_var, align 8, !dbg !17665
  %15 = load %struct.variable_def*, %struct.variable_def** %old_var, align 8, !dbg !17666
  %dv6 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %15, i32 0, i32 0, !dbg !17667
  %16 = load i8*, i8** %dv6, align 8, !dbg !17667
  %17 = load %struct.variable_def*, %struct.variable_def** %empty_var, align 8, !dbg !17668
  %dv7 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %17, i32 0, i32 0, !dbg !17669
  store i8* %16, i8** %dv7, align 8, !dbg !17670
  %18 = load %struct.variable_def*, %struct.variable_def** %empty_var, align 8, !dbg !17671
  %refcount = getelementptr inbounds %struct.variable_def, %struct.variable_def* %18, i32 0, i32 1, !dbg !17672
  store i32 0, i32* %refcount, align 8, !dbg !17673
  %19 = load %struct.variable_def*, %struct.variable_def** %empty_var, align 8, !dbg !17674
  %n_var_parts = getelementptr inbounds %struct.variable_def, %struct.variable_def* %19, i32 0, i32 2, !dbg !17675
  store i8 0, i8* %n_var_parts, align 4, !dbg !17676
  %20 = load %struct.variable_def*, %struct.variable_def** %empty_var, align 8, !dbg !17677
  %cur_loc_changed = getelementptr inbounds %struct.variable_def, %struct.variable_def* %20, i32 0, i32 3, !dbg !17678
  store i8 0, i8* %cur_loc_changed, align 1, !dbg !17679
  %21 = load %struct.variable_def*, %struct.variable_def** %empty_var, align 8, !dbg !17680
  %in_changed_variables = getelementptr inbounds %struct.variable_def, %struct.variable_def* %21, i32 0, i32 4, !dbg !17681
  store i8 0, i8* %in_changed_variables, align 2, !dbg !17682
  %22 = load %struct.variable_def*, %struct.variable_def** %old_var, align 8, !dbg !17683
  %dv8 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %22, i32 0, i32 0, !dbg !17685
  %23 = load i8*, i8** %dv8, align 8, !dbg !17685
  %call9 = call zeroext i8 @dv_onepart_p(i8* %23), !dbg !17686
  %tobool10 = icmp ne i8 %call9, 0, !dbg !17686
  br i1 %tobool10, label %if.then11, label %if.end, !dbg !17687

if.then11:                                        ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %lc, metadata !17688, metadata !DIExpression()), !dbg !17690
  %24 = load %struct.variable_def*, %struct.variable_def** %old_var, align 8, !dbg !17691
  %n_var_parts12 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %24, i32 0, i32 2, !dbg !17691
  %25 = load i8, i8* %n_var_parts12, align 4, !dbg !17691
  %conv = sext i8 %25 to i32, !dbg !17691
  %cmp = icmp eq i32 %conv, 1, !dbg !17691
  br i1 %cmp, label %cond.false, label %cond.true, !dbg !17691

cond.true:                                        ; preds = %if.then11
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 7447, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !17691
  br label %cond.end, !dbg !17691

cond.false:                                       ; preds = %if.then11
  br label %cond.end, !dbg !17691

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !17691
  %26 = load %struct.variable_def*, %struct.variable_def** %old_var, align 8, !dbg !17692
  %var_part = getelementptr inbounds %struct.variable_def, %struct.variable_def* %26, i32 0, i32 5, !dbg !17694
  %arrayidx = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part, i64 0, i64 0, !dbg !17692
  %loc_chain = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx, i32 0, i32 0, !dbg !17695
  %27 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain, align 8, !dbg !17695
  store %struct.location_chain_def* %27, %struct.location_chain_def** %lc, align 8, !dbg !17696
  br label %for.cond, !dbg !17697

for.cond:                                         ; preds = %for.inc, %cond.end
  %28 = load %struct.location_chain_def*, %struct.location_chain_def** %lc, align 8, !dbg !17698
  %tobool14 = icmp ne %struct.location_chain_def* %28, null, !dbg !17700
  br i1 %tobool14, label %for.body, label %for.end, !dbg !17700

for.body:                                         ; preds = %for.cond
  %29 = load %struct.variable_def*, %struct.variable_def** %old_var, align 8, !dbg !17701
  %dv15 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %29, i32 0, i32 0, !dbg !17702
  %30 = load i8*, i8** %dv15, align 8, !dbg !17702
  %31 = load %struct.location_chain_def*, %struct.location_chain_def** %lc, align 8, !dbg !17703
  %loc = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %31, i32 0, i32 1, !dbg !17704
  %32 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !17704
  call void @remove_value_chains(i8* %30, %struct.rtx_def* %32), !dbg !17705
  br label %for.inc, !dbg !17705

for.inc:                                          ; preds = %for.body
  %33 = load %struct.location_chain_def*, %struct.location_chain_def** %lc, align 8, !dbg !17706
  %next = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %33, i32 0, i32 0, !dbg !17707
  %34 = load %struct.location_chain_def*, %struct.location_chain_def** %next, align 8, !dbg !17707
  store %struct.location_chain_def* %34, %struct.location_chain_def** %lc, align 8, !dbg !17708
  br label %for.cond, !dbg !17709, !llvm.loop !17710

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !17712

if.end:                                           ; preds = %for.end, %if.then
  %35 = load %struct.variable_def*, %struct.variable_def** %empty_var, align 8, !dbg !17713
  call void @variable_was_changed(%struct.variable_def* %35, %struct.dataflow_set_def* null), !dbg !17714
  store i32 1, i32* %retval, align 4, !dbg !17715
  br label %return, !dbg !17715

if.end16:                                         ; preds = %entry
  %36 = load %struct.variable_def*, %struct.variable_def** %old_var, align 8, !dbg !17716
  %37 = load %struct.variable_def*, %struct.variable_def** %new_var, align 8, !dbg !17718
  %call17 = call zeroext i8 @variable_different_p(%struct.variable_def* %36, %struct.variable_def* %37), !dbg !17719
  %tobool18 = icmp ne i8 %call17, 0, !dbg !17719
  br i1 %tobool18, label %if.then19, label %if.end80, !dbg !17720

if.then19:                                        ; preds = %if.end16
  %38 = load %struct.variable_def*, %struct.variable_def** %old_var, align 8, !dbg !17721
  %dv20 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %38, i32 0, i32 0, !dbg !17724
  %39 = load i8*, i8** %dv20, align 8, !dbg !17724
  %call21 = call zeroext i8 @dv_onepart_p(i8* %39), !dbg !17725
  %tobool22 = icmp ne i8 %call21, 0, !dbg !17725
  br i1 %tobool22, label %if.then23, label %if.end79, !dbg !17726

if.then23:                                        ; preds = %if.then19
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %lc1, metadata !17727, metadata !DIExpression()), !dbg !17729
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %lc2, metadata !17730, metadata !DIExpression()), !dbg !17731
  %40 = load %struct.variable_def*, %struct.variable_def** %old_var, align 8, !dbg !17732
  %n_var_parts24 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %40, i32 0, i32 2, !dbg !17732
  %41 = load i8, i8* %n_var_parts24, align 4, !dbg !17732
  %conv25 = sext i8 %41 to i32, !dbg !17732
  %cmp26 = icmp eq i32 %conv25, 1, !dbg !17732
  br i1 %cmp26, label %cond.false29, label %cond.true28, !dbg !17732

cond.true28:                                      ; preds = %if.then23
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 7461, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !17732
  br label %cond.end30, !dbg !17732

cond.false29:                                     ; preds = %if.then23
  br label %cond.end30, !dbg !17732

cond.end30:                                       ; preds = %cond.false29, %cond.true28
  %cond31 = phi i32 [ 0, %cond.true28 ], [ 0, %cond.false29 ], !dbg !17732
  %42 = load %struct.variable_def*, %struct.variable_def** %new_var, align 8, !dbg !17733
  %n_var_parts32 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %42, i32 0, i32 2, !dbg !17733
  %43 = load i8, i8* %n_var_parts32, align 4, !dbg !17733
  %conv33 = sext i8 %43 to i32, !dbg !17733
  %cmp34 = icmp eq i32 %conv33, 1, !dbg !17733
  br i1 %cmp34, label %cond.false37, label %cond.true36, !dbg !17733

cond.true36:                                      ; preds = %cond.end30
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 7462, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !17733
  br label %cond.end38, !dbg !17733

cond.false37:                                     ; preds = %cond.end30
  br label %cond.end38, !dbg !17733

cond.end38:                                       ; preds = %cond.false37, %cond.true36
  %cond39 = phi i32 [ 0, %cond.true36 ], [ 0, %cond.false37 ], !dbg !17733
  %44 = load %struct.variable_def*, %struct.variable_def** %old_var, align 8, !dbg !17734
  %var_part40 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %44, i32 0, i32 5, !dbg !17735
  %arrayidx41 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part40, i64 0, i64 0, !dbg !17734
  %loc_chain42 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx41, i32 0, i32 0, !dbg !17736
  %45 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain42, align 8, !dbg !17736
  store %struct.location_chain_def* %45, %struct.location_chain_def** %lc1, align 8, !dbg !17737
  %46 = load %struct.variable_def*, %struct.variable_def** %new_var, align 8, !dbg !17738
  %var_part43 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %46, i32 0, i32 5, !dbg !17739
  %arrayidx44 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part43, i64 0, i64 0, !dbg !17738
  %loc_chain45 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx44, i32 0, i32 0, !dbg !17740
  %47 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain45, align 8, !dbg !17740
  store %struct.location_chain_def* %47, %struct.location_chain_def** %lc2, align 8, !dbg !17741
  br label %while.cond, !dbg !17742

while.cond:                                       ; preds = %while.body, %cond.end38
  %48 = load %struct.location_chain_def*, %struct.location_chain_def** %lc1, align 8, !dbg !17743
  %tobool46 = icmp ne %struct.location_chain_def* %48, null, !dbg !17743
  br i1 %tobool46, label %land.lhs.true, label %land.end, !dbg !17744

land.lhs.true:                                    ; preds = %while.cond
  %49 = load %struct.location_chain_def*, %struct.location_chain_def** %lc2, align 8, !dbg !17745
  %tobool47 = icmp ne %struct.location_chain_def* %49, null, !dbg !17745
  br i1 %tobool47, label %land.rhs, label %land.end, !dbg !17746

land.rhs:                                         ; preds = %land.lhs.true
  %50 = load %struct.location_chain_def*, %struct.location_chain_def** %lc1, align 8, !dbg !17747
  %loc48 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %50, i32 0, i32 1, !dbg !17747
  %51 = load %struct.rtx_def*, %struct.rtx_def** %loc48, align 8, !dbg !17747
  %52 = bitcast %struct.rtx_def* %51 to i32*, !dbg !17747
  %bf.load = load i32, i32* %52, align 8, !dbg !17747
  %bf.clear = and i32 %bf.load, 65535, !dbg !17747
  %cmp49 = icmp eq i32 %bf.clear, 37, !dbg !17747
  br i1 %cmp49, label %land.lhs.true51, label %lor.rhs, !dbg !17748

land.lhs.true51:                                  ; preds = %land.rhs
  %53 = load %struct.location_chain_def*, %struct.location_chain_def** %lc2, align 8, !dbg !17749
  %loc52 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %53, i32 0, i32 1, !dbg !17749
  %54 = load %struct.rtx_def*, %struct.rtx_def** %loc52, align 8, !dbg !17749
  %55 = bitcast %struct.rtx_def* %54 to i32*, !dbg !17749
  %bf.load53 = load i32, i32* %55, align 8, !dbg !17749
  %bf.clear54 = and i32 %bf.load53, 65535, !dbg !17749
  %cmp55 = icmp eq i32 %bf.clear54, 37, !dbg !17749
  br i1 %cmp55, label %lor.end, label %lor.rhs, !dbg !17750

lor.rhs:                                          ; preds = %land.lhs.true51, %land.rhs
  %56 = load %struct.location_chain_def*, %struct.location_chain_def** %lc1, align 8, !dbg !17751
  %loc57 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %56, i32 0, i32 1, !dbg !17752
  %57 = load %struct.rtx_def*, %struct.rtx_def** %loc57, align 8, !dbg !17752
  %58 = load %struct.location_chain_def*, %struct.location_chain_def** %lc2, align 8, !dbg !17753
  %loc58 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %58, i32 0, i32 1, !dbg !17754
  %59 = load %struct.rtx_def*, %struct.rtx_def** %loc58, align 8, !dbg !17754
  %call59 = call i32 @rtx_equal_p(%struct.rtx_def* %57, %struct.rtx_def* %59), !dbg !17755
  %tobool60 = icmp ne i32 %call59, 0, !dbg !17750
  br label %lor.end, !dbg !17750

lor.end:                                          ; preds = %lor.rhs, %land.lhs.true51
  %60 = phi i1 [ true, %land.lhs.true51 ], [ %tobool60, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %land.lhs.true, %while.cond
  %61 = phi i1 [ false, %land.lhs.true ], [ false, %while.cond ], [ %60, %lor.end ], !dbg !17756
  br i1 %61, label %while.body, label %while.end, !dbg !17742

while.body:                                       ; preds = %land.end
  %62 = load %struct.location_chain_def*, %struct.location_chain_def** %lc1, align 8, !dbg !17757
  %next61 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %62, i32 0, i32 0, !dbg !17759
  %63 = load %struct.location_chain_def*, %struct.location_chain_def** %next61, align 8, !dbg !17759
  store %struct.location_chain_def* %63, %struct.location_chain_def** %lc1, align 8, !dbg !17760
  %64 = load %struct.location_chain_def*, %struct.location_chain_def** %lc2, align 8, !dbg !17761
  %next62 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %64, i32 0, i32 0, !dbg !17762
  %65 = load %struct.location_chain_def*, %struct.location_chain_def** %next62, align 8, !dbg !17762
  store %struct.location_chain_def* %65, %struct.location_chain_def** %lc2, align 8, !dbg !17763
  br label %while.cond, !dbg !17742, !llvm.loop !17764

while.end:                                        ; preds = %land.end
  br label %for.cond63, !dbg !17766

for.cond63:                                       ; preds = %for.inc68, %while.end
  %66 = load %struct.location_chain_def*, %struct.location_chain_def** %lc2, align 8, !dbg !17767
  %tobool64 = icmp ne %struct.location_chain_def* %66, null, !dbg !17770
  br i1 %tobool64, label %for.body65, label %for.end70, !dbg !17770

for.body65:                                       ; preds = %for.cond63
  %67 = load %struct.variable_def*, %struct.variable_def** %old_var, align 8, !dbg !17771
  %dv66 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %67, i32 0, i32 0, !dbg !17772
  %68 = load i8*, i8** %dv66, align 8, !dbg !17772
  %69 = load %struct.location_chain_def*, %struct.location_chain_def** %lc2, align 8, !dbg !17773
  %loc67 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %69, i32 0, i32 1, !dbg !17774
  %70 = load %struct.rtx_def*, %struct.rtx_def** %loc67, align 8, !dbg !17774
  call void @add_value_chains(i8* %68, %struct.rtx_def* %70), !dbg !17775
  br label %for.inc68, !dbg !17775

for.inc68:                                        ; preds = %for.body65
  %71 = load %struct.location_chain_def*, %struct.location_chain_def** %lc2, align 8, !dbg !17776
  %next69 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %71, i32 0, i32 0, !dbg !17777
  %72 = load %struct.location_chain_def*, %struct.location_chain_def** %next69, align 8, !dbg !17777
  store %struct.location_chain_def* %72, %struct.location_chain_def** %lc2, align 8, !dbg !17778
  br label %for.cond63, !dbg !17779, !llvm.loop !17780

for.end70:                                        ; preds = %for.cond63
  br label %for.cond71, !dbg !17782

for.cond71:                                       ; preds = %for.inc76, %for.end70
  %73 = load %struct.location_chain_def*, %struct.location_chain_def** %lc1, align 8, !dbg !17783
  %tobool72 = icmp ne %struct.location_chain_def* %73, null, !dbg !17786
  br i1 %tobool72, label %for.body73, label %for.end78, !dbg !17786

for.body73:                                       ; preds = %for.cond71
  %74 = load %struct.variable_def*, %struct.variable_def** %old_var, align 8, !dbg !17787
  %dv74 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %74, i32 0, i32 0, !dbg !17788
  %75 = load i8*, i8** %dv74, align 8, !dbg !17788
  %76 = load %struct.location_chain_def*, %struct.location_chain_def** %lc1, align 8, !dbg !17789
  %loc75 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %76, i32 0, i32 1, !dbg !17790
  %77 = load %struct.rtx_def*, %struct.rtx_def** %loc75, align 8, !dbg !17790
  call void @remove_value_chains(i8* %75, %struct.rtx_def* %77), !dbg !17791
  br label %for.inc76, !dbg !17791

for.inc76:                                        ; preds = %for.body73
  %78 = load %struct.location_chain_def*, %struct.location_chain_def** %lc1, align 8, !dbg !17792
  %next77 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %78, i32 0, i32 0, !dbg !17793
  %79 = load %struct.location_chain_def*, %struct.location_chain_def** %next77, align 8, !dbg !17793
  store %struct.location_chain_def* %79, %struct.location_chain_def** %lc1, align 8, !dbg !17794
  br label %for.cond71, !dbg !17795, !llvm.loop !17796

for.end78:                                        ; preds = %for.cond71
  br label %if.end79, !dbg !17798

if.end79:                                         ; preds = %for.end78, %if.then19
  %80 = load %struct.variable_def*, %struct.variable_def** %new_var, align 8, !dbg !17799
  call void @variable_was_changed(%struct.variable_def* %80, %struct.dataflow_set_def* null), !dbg !17800
  br label %if.end80, !dbg !17801

if.end80:                                         ; preds = %if.end79, %if.end16
  %81 = load %struct.variable_def*, %struct.variable_def** %old_var, align 8, !dbg !17802
  %82 = load %struct.variable_def*, %struct.variable_def** %new_var, align 8, !dbg !17804
  %cmp81 = icmp ne %struct.variable_def* %81, %82, !dbg !17805
  br i1 %cmp81, label %if.then83, label %if.end155, !dbg !17806

if.then83:                                        ; preds = %if.end80
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17807, metadata !DIExpression()), !dbg !17809
  store i32 0, i32* %i, align 4, !dbg !17810
  br label %for.cond84, !dbg !17812

for.cond84:                                       ; preds = %for.inc153, %if.then83
  %83 = load i32, i32* %i, align 4, !dbg !17813
  %84 = load %struct.variable_def*, %struct.variable_def** %new_var, align 8, !dbg !17815
  %n_var_parts85 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %84, i32 0, i32 2, !dbg !17816
  %85 = load i8, i8* %n_var_parts85, align 4, !dbg !17816
  %conv86 = sext i8 %85 to i32, !dbg !17815
  %cmp87 = icmp slt i32 %83, %conv86, !dbg !17817
  br i1 %cmp87, label %for.body89, label %for.end154, !dbg !17818

for.body89:                                       ; preds = %for.cond84
  %86 = load %struct.variable_def*, %struct.variable_def** %new_var, align 8, !dbg !17819
  %var_part90 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %86, i32 0, i32 5, !dbg !17821
  %87 = load i32, i32* %i, align 4, !dbg !17822
  %idxprom = sext i32 %87 to i64, !dbg !17819
  %arrayidx91 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part90, i64 0, i64 %idxprom, !dbg !17819
  %cur_loc = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx91, i32 0, i32 1, !dbg !17823
  store %struct.rtx_def* null, %struct.rtx_def** %cur_loc, align 8, !dbg !17824
  %88 = load %struct.variable_def*, %struct.variable_def** %old_var, align 8, !dbg !17825
  %n_var_parts92 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %88, i32 0, i32 2, !dbg !17827
  %89 = load i8, i8* %n_var_parts92, align 4, !dbg !17827
  %conv93 = sext i8 %89 to i32, !dbg !17825
  %90 = load %struct.variable_def*, %struct.variable_def** %new_var, align 8, !dbg !17828
  %n_var_parts94 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %90, i32 0, i32 2, !dbg !17829
  %91 = load i8, i8* %n_var_parts94, align 4, !dbg !17829
  %conv95 = sext i8 %91 to i32, !dbg !17828
  %cmp96 = icmp ne i32 %conv93, %conv95, !dbg !17830
  br i1 %cmp96, label %if.then107, label %lor.lhs.false, !dbg !17831

lor.lhs.false:                                    ; preds = %for.body89
  %92 = load %struct.variable_def*, %struct.variable_def** %old_var, align 8, !dbg !17832
  %var_part98 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %92, i32 0, i32 5, !dbg !17833
  %93 = load i32, i32* %i, align 4, !dbg !17834
  %idxprom99 = sext i32 %93 to i64, !dbg !17832
  %arrayidx100 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part98, i64 0, i64 %idxprom99, !dbg !17832
  %offset = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx100, i32 0, i32 2, !dbg !17835
  %94 = load i64, i64* %offset, align 8, !dbg !17835
  %95 = load %struct.variable_def*, %struct.variable_def** %new_var, align 8, !dbg !17836
  %var_part101 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %95, i32 0, i32 5, !dbg !17837
  %96 = load i32, i32* %i, align 4, !dbg !17838
  %idxprom102 = sext i32 %96 to i64, !dbg !17836
  %arrayidx103 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part101, i64 0, i64 %idxprom102, !dbg !17836
  %offset104 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx103, i32 0, i32 2, !dbg !17839
  %97 = load i64, i64* %offset104, align 8, !dbg !17839
  %cmp105 = icmp ne i64 %94, %97, !dbg !17840
  br i1 %cmp105, label %if.then107, label %if.else, !dbg !17841

if.then107:                                       ; preds = %lor.lhs.false, %for.body89
  %98 = load %struct.variable_def*, %struct.variable_def** %new_var, align 8, !dbg !17842
  %cur_loc_changed108 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %98, i32 0, i32 3, !dbg !17843
  store i8 1, i8* %cur_loc_changed108, align 1, !dbg !17844
  br label %if.end152, !dbg !17842

if.else:                                          ; preds = %lor.lhs.false
  %99 = load %struct.variable_def*, %struct.variable_def** %old_var, align 8, !dbg !17845
  %var_part109 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %99, i32 0, i32 5, !dbg !17847
  %100 = load i32, i32* %i, align 4, !dbg !17848
  %idxprom110 = sext i32 %100 to i64, !dbg !17845
  %arrayidx111 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part109, i64 0, i64 %idxprom110, !dbg !17845
  %cur_loc112 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx111, i32 0, i32 1, !dbg !17849
  %101 = load %struct.rtx_def*, %struct.rtx_def** %cur_loc112, align 8, !dbg !17849
  %cmp113 = icmp ne %struct.rtx_def* %101, null, !dbg !17850
  br i1 %cmp113, label %if.then115, label %if.end151, !dbg !17851

if.then115:                                       ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %lc116, metadata !17852, metadata !DIExpression()), !dbg !17854
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %cur_loc117, metadata !17855, metadata !DIExpression()), !dbg !17856
  %102 = load %struct.variable_def*, %struct.variable_def** %old_var, align 8, !dbg !17857
  %var_part118 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %102, i32 0, i32 5, !dbg !17858
  %103 = load i32, i32* %i, align 4, !dbg !17859
  %idxprom119 = sext i32 %103 to i64, !dbg !17857
  %arrayidx120 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part118, i64 0, i64 %idxprom119, !dbg !17857
  %cur_loc121 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx120, i32 0, i32 1, !dbg !17860
  %104 = load %struct.rtx_def*, %struct.rtx_def** %cur_loc121, align 8, !dbg !17860
  store %struct.rtx_def* %104, %struct.rtx_def** %cur_loc117, align 8, !dbg !17856
  %105 = load %struct.variable_def*, %struct.variable_def** %new_var, align 8, !dbg !17861
  %var_part122 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %105, i32 0, i32 5, !dbg !17863
  %106 = load i32, i32* %i, align 4, !dbg !17864
  %idxprom123 = sext i32 %106 to i64, !dbg !17861
  %arrayidx124 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part122, i64 0, i64 %idxprom123, !dbg !17861
  %loc_chain125 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx124, i32 0, i32 0, !dbg !17865
  %107 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain125, align 8, !dbg !17865
  store %struct.location_chain_def* %107, %struct.location_chain_def** %lc116, align 8, !dbg !17866
  br label %for.cond126, !dbg !17867

for.cond126:                                      ; preds = %for.inc143, %if.then115
  %108 = load %struct.location_chain_def*, %struct.location_chain_def** %lc116, align 8, !dbg !17868
  %tobool127 = icmp ne %struct.location_chain_def* %108, null, !dbg !17870
  br i1 %tobool127, label %for.body128, label %for.end145, !dbg !17870

for.body128:                                      ; preds = %for.cond126
  %109 = load %struct.location_chain_def*, %struct.location_chain_def** %lc116, align 8, !dbg !17871
  %loc129 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %109, i32 0, i32 1, !dbg !17873
  %110 = load %struct.rtx_def*, %struct.rtx_def** %loc129, align 8, !dbg !17873
  %111 = load %struct.rtx_def*, %struct.rtx_def** %cur_loc117, align 8, !dbg !17874
  %cmp130 = icmp eq %struct.rtx_def* %110, %111, !dbg !17875
  br i1 %cmp130, label %if.then136, label %lor.lhs.false132, !dbg !17876

lor.lhs.false132:                                 ; preds = %for.body128
  %112 = load %struct.rtx_def*, %struct.rtx_def** %cur_loc117, align 8, !dbg !17877
  %113 = load %struct.location_chain_def*, %struct.location_chain_def** %lc116, align 8, !dbg !17878
  %loc133 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %113, i32 0, i32 1, !dbg !17879
  %114 = load %struct.rtx_def*, %struct.rtx_def** %loc133, align 8, !dbg !17879
  %call134 = call i32 @rtx_equal_p(%struct.rtx_def* %112, %struct.rtx_def* %114), !dbg !17880
  %tobool135 = icmp ne i32 %call134, 0, !dbg !17880
  br i1 %tobool135, label %if.then136, label %if.end142, !dbg !17881

if.then136:                                       ; preds = %lor.lhs.false132, %for.body128
  %115 = load %struct.location_chain_def*, %struct.location_chain_def** %lc116, align 8, !dbg !17882
  %loc137 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %115, i32 0, i32 1, !dbg !17884
  %116 = load %struct.rtx_def*, %struct.rtx_def** %loc137, align 8, !dbg !17884
  %117 = load %struct.variable_def*, %struct.variable_def** %new_var, align 8, !dbg !17885
  %var_part138 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %117, i32 0, i32 5, !dbg !17886
  %118 = load i32, i32* %i, align 4, !dbg !17887
  %idxprom139 = sext i32 %118 to i64, !dbg !17885
  %arrayidx140 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part138, i64 0, i64 %idxprom139, !dbg !17885
  %cur_loc141 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx140, i32 0, i32 1, !dbg !17888
  store %struct.rtx_def* %116, %struct.rtx_def** %cur_loc141, align 8, !dbg !17889
  br label %for.end145, !dbg !17890

if.end142:                                        ; preds = %lor.lhs.false132
  br label %for.inc143, !dbg !17891

for.inc143:                                       ; preds = %if.end142
  %119 = load %struct.location_chain_def*, %struct.location_chain_def** %lc116, align 8, !dbg !17892
  %next144 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %119, i32 0, i32 0, !dbg !17893
  %120 = load %struct.location_chain_def*, %struct.location_chain_def** %next144, align 8, !dbg !17893
  store %struct.location_chain_def* %120, %struct.location_chain_def** %lc116, align 8, !dbg !17894
  br label %for.cond126, !dbg !17895, !llvm.loop !17896

for.end145:                                       ; preds = %if.then136, %for.cond126
  %121 = load %struct.location_chain_def*, %struct.location_chain_def** %lc116, align 8, !dbg !17898
  %cmp146 = icmp eq %struct.location_chain_def* %121, null, !dbg !17900
  br i1 %cmp146, label %if.then148, label %if.end150, !dbg !17901

if.then148:                                       ; preds = %for.end145
  %122 = load %struct.variable_def*, %struct.variable_def** %new_var, align 8, !dbg !17902
  %cur_loc_changed149 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %122, i32 0, i32 3, !dbg !17903
  store i8 1, i8* %cur_loc_changed149, align 1, !dbg !17904
  br label %if.end150, !dbg !17902

if.end150:                                        ; preds = %if.then148, %for.end145
  br label %if.end151, !dbg !17905

if.end151:                                        ; preds = %if.end150, %if.else
  br label %if.end152

if.end152:                                        ; preds = %if.end151, %if.then107
  br label %for.inc153, !dbg !17906

for.inc153:                                       ; preds = %if.end152
  %123 = load i32, i32* %i, align 4, !dbg !17907
  %inc = add nsw i32 %123, 1, !dbg !17907
  store i32 %inc, i32* %i, align 4, !dbg !17907
  br label %for.cond84, !dbg !17908, !llvm.loop !17909

for.end154:                                       ; preds = %for.cond84
  br label %if.end155, !dbg !17911

if.end155:                                        ; preds = %for.end154, %if.end80
  store i32 1, i32* %retval, align 4, !dbg !17912
  br label %return, !dbg !17912

return:                                           ; preds = %if.end155, %if.end
  %124 = load i32, i32* %retval, align 4, !dbg !17913
  ret i32 %124, !dbg !17913
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @emit_notes_for_differences_2(i8** %slot, i8* %data) #0 !dbg !17914 {
entry:
  %slot.addr = alloca i8**, align 8
  %data.addr = alloca i8*, align 8
  %old_vars = alloca %struct.htab*, align 8
  %old_var = alloca %struct.variable_def*, align 8
  %new_var = alloca %struct.variable_def*, align 8
  %i = alloca i32, align 4
  %lc = alloca %struct.location_chain_def*, align 8
  store i8** %slot, i8*** %slot.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %slot.addr, metadata !17915, metadata !DIExpression()), !dbg !17916
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !17917, metadata !DIExpression()), !dbg !17918
  call void @llvm.dbg.declare(metadata %struct.htab** %old_vars, metadata !17919, metadata !DIExpression()), !dbg !17920
  %0 = load i8*, i8** %data.addr, align 8, !dbg !17921
  %1 = bitcast i8* %0 to %struct.htab*, !dbg !17922
  store %struct.htab* %1, %struct.htab** %old_vars, align 8, !dbg !17920
  call void @llvm.dbg.declare(metadata %struct.variable_def** %old_var, metadata !17923, metadata !DIExpression()), !dbg !17924
  call void @llvm.dbg.declare(metadata %struct.variable_def** %new_var, metadata !17925, metadata !DIExpression()), !dbg !17926
  %2 = load i8**, i8*** %slot.addr, align 8, !dbg !17927
  %3 = load i8*, i8** %2, align 8, !dbg !17928
  %4 = bitcast i8* %3 to %struct.variable_def*, !dbg !17929
  store %struct.variable_def* %4, %struct.variable_def** %new_var, align 8, !dbg !17930
  %5 = load %struct.htab*, %struct.htab** %old_vars, align 8, !dbg !17931
  %6 = load %struct.variable_def*, %struct.variable_def** %new_var, align 8, !dbg !17932
  %dv = getelementptr inbounds %struct.variable_def, %struct.variable_def* %6, i32 0, i32 0, !dbg !17933
  %7 = load i8*, i8** %dv, align 8, !dbg !17933
  %8 = load %struct.variable_def*, %struct.variable_def** %new_var, align 8, !dbg !17934
  %dv1 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %8, i32 0, i32 0, !dbg !17935
  %9 = load i8*, i8** %dv1, align 8, !dbg !17935
  %call = call i32 @dv_htab_hash(i8* %9), !dbg !17936
  %call2 = call i8* @htab_find_with_hash(%struct.htab* %5, i8* %7, i32 %call), !dbg !17937
  %10 = bitcast i8* %call2 to %struct.variable_def*, !dbg !17938
  store %struct.variable_def* %10, %struct.variable_def** %old_var, align 8, !dbg !17939
  %11 = load %struct.variable_def*, %struct.variable_def** %old_var, align 8, !dbg !17940
  %tobool = icmp ne %struct.variable_def* %11, null, !dbg !17940
  br i1 %tobool, label %if.end20, label %if.then, !dbg !17942

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !17943, metadata !DIExpression()), !dbg !17945
  %12 = load %struct.variable_def*, %struct.variable_def** %new_var, align 8, !dbg !17946
  %dv3 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %12, i32 0, i32 0, !dbg !17948
  %13 = load i8*, i8** %dv3, align 8, !dbg !17948
  %call4 = call zeroext i8 @dv_onepart_p(i8* %13), !dbg !17949
  %tobool5 = icmp ne i8 %call4, 0, !dbg !17949
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !17950

if.then6:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %lc, metadata !17951, metadata !DIExpression()), !dbg !17953
  %14 = load %struct.variable_def*, %struct.variable_def** %new_var, align 8, !dbg !17954
  %n_var_parts = getelementptr inbounds %struct.variable_def, %struct.variable_def* %14, i32 0, i32 2, !dbg !17954
  %15 = load i8, i8* %n_var_parts, align 4, !dbg !17954
  %conv = sext i8 %15 to i32, !dbg !17954
  %cmp = icmp eq i32 %conv, 1, !dbg !17954
  br i1 %cmp, label %cond.false, label %cond.true, !dbg !17954

cond.true:                                        ; preds = %if.then6
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 7532, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !17954
  br label %cond.end, !dbg !17954

cond.false:                                       ; preds = %if.then6
  br label %cond.end, !dbg !17954

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !17954
  %16 = load %struct.variable_def*, %struct.variable_def** %new_var, align 8, !dbg !17955
  %var_part = getelementptr inbounds %struct.variable_def, %struct.variable_def* %16, i32 0, i32 5, !dbg !17957
  %arrayidx = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part, i64 0, i64 0, !dbg !17955
  %loc_chain = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx, i32 0, i32 0, !dbg !17958
  %17 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain, align 8, !dbg !17958
  store %struct.location_chain_def* %17, %struct.location_chain_def** %lc, align 8, !dbg !17959
  br label %for.cond, !dbg !17960

for.cond:                                         ; preds = %for.inc, %cond.end
  %18 = load %struct.location_chain_def*, %struct.location_chain_def** %lc, align 8, !dbg !17961
  %tobool8 = icmp ne %struct.location_chain_def* %18, null, !dbg !17963
  br i1 %tobool8, label %for.body, label %for.end, !dbg !17963

for.body:                                         ; preds = %for.cond
  %19 = load %struct.variable_def*, %struct.variable_def** %new_var, align 8, !dbg !17964
  %dv9 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %19, i32 0, i32 0, !dbg !17965
  %20 = load i8*, i8** %dv9, align 8, !dbg !17965
  %21 = load %struct.location_chain_def*, %struct.location_chain_def** %lc, align 8, !dbg !17966
  %loc = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %21, i32 0, i32 1, !dbg !17967
  %22 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !17967
  call void @add_value_chains(i8* %20, %struct.rtx_def* %22), !dbg !17968
  br label %for.inc, !dbg !17968

for.inc:                                          ; preds = %for.body
  %23 = load %struct.location_chain_def*, %struct.location_chain_def** %lc, align 8, !dbg !17969
  %next = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %23, i32 0, i32 0, !dbg !17970
  %24 = load %struct.location_chain_def*, %struct.location_chain_def** %next, align 8, !dbg !17970
  store %struct.location_chain_def* %24, %struct.location_chain_def** %lc, align 8, !dbg !17971
  br label %for.cond, !dbg !17972, !llvm.loop !17973

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !17975

if.end:                                           ; preds = %for.end, %if.then
  store i32 0, i32* %i, align 4, !dbg !17976
  br label %for.cond10, !dbg !17978

for.cond10:                                       ; preds = %for.inc18, %if.end
  %25 = load i32, i32* %i, align 4, !dbg !17979
  %26 = load %struct.variable_def*, %struct.variable_def** %new_var, align 8, !dbg !17981
  %n_var_parts11 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %26, i32 0, i32 2, !dbg !17982
  %27 = load i8, i8* %n_var_parts11, align 4, !dbg !17982
  %conv12 = sext i8 %27 to i32, !dbg !17981
  %cmp13 = icmp slt i32 %25, %conv12, !dbg !17983
  br i1 %cmp13, label %for.body15, label %for.end19, !dbg !17984

for.body15:                                       ; preds = %for.cond10
  %28 = load %struct.variable_def*, %struct.variable_def** %new_var, align 8, !dbg !17985
  %var_part16 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %28, i32 0, i32 5, !dbg !17986
  %29 = load i32, i32* %i, align 4, !dbg !17987
  %idxprom = sext i32 %29 to i64, !dbg !17985
  %arrayidx17 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part16, i64 0, i64 %idxprom, !dbg !17985
  %cur_loc = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx17, i32 0, i32 1, !dbg !17988
  store %struct.rtx_def* null, %struct.rtx_def** %cur_loc, align 8, !dbg !17989
  br label %for.inc18, !dbg !17985

for.inc18:                                        ; preds = %for.body15
  %30 = load i32, i32* %i, align 4, !dbg !17990
  %inc = add nsw i32 %30, 1, !dbg !17990
  store i32 %inc, i32* %i, align 4, !dbg !17990
  br label %for.cond10, !dbg !17991, !llvm.loop !17992

for.end19:                                        ; preds = %for.cond10
  %31 = load %struct.variable_def*, %struct.variable_def** %new_var, align 8, !dbg !17994
  call void @variable_was_changed(%struct.variable_def* %31, %struct.dataflow_set_def* null), !dbg !17995
  br label %if.end20, !dbg !17996

if.end20:                                         ; preds = %for.end19, %entry
  ret i32 1, !dbg !17997
}

; Function Attrs: noinline nounwind uwtable
define internal void @emit_notes_for_changes(%struct.rtx_def* %insn, i32 %where, %struct.shared_hash_def* %vars) #0 !dbg !17998 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %where.addr = alloca i32, align 4
  %vars.addr = alloca %struct.shared_hash_def*, align 8
  %data = alloca %struct.emit_note_data_def, align 8
  %htab = alloca %struct.htab*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !18001, metadata !DIExpression()), !dbg !18002
  store i32 %where, i32* %where.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %where.addr, metadata !18003, metadata !DIExpression()), !dbg !18004
  store %struct.shared_hash_def* %vars, %struct.shared_hash_def** %vars.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.shared_hash_def** %vars.addr, metadata !18005, metadata !DIExpression()), !dbg !18006
  call void @llvm.dbg.declare(metadata %struct.emit_note_data_def* %data, metadata !18007, metadata !DIExpression()), !dbg !18008
  call void @llvm.dbg.declare(metadata %struct.htab** %htab, metadata !18009, metadata !DIExpression()), !dbg !18010
  %0 = load %struct.shared_hash_def*, %struct.shared_hash_def** %vars.addr, align 8, !dbg !18011
  %call = call %struct.htab* @shared_hash_htab(%struct.shared_hash_def* %0), !dbg !18012
  store %struct.htab* %call, %struct.htab** %htab, align 8, !dbg !18010
  %1 = load %struct.htab*, %struct.htab** @changed_variables, align 8, !dbg !18013
  %call1 = call i64 @htab_elements(%struct.htab* %1), !dbg !18015
  %tobool = icmp ne i64 %call1, 0, !dbg !18015
  br i1 %tobool, label %if.end, label %if.then, !dbg !18016

if.then:                                          ; preds = %entry
  br label %return, !dbg !18017

if.end:                                           ; preds = %entry
  %2 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !18018
  %tobool2 = icmp ne i32 %2, 0, !dbg !18018
  br i1 %tobool2, label %if.then3, label %if.end32, !dbg !18020

if.then3:                                         ; preds = %if.end
  %3 = load %struct.htab*, %struct.htab** @changed_variables, align 8, !dbg !18021
  %4 = load %struct.htab*, %struct.htab** %htab, align 8, !dbg !18023
  %5 = bitcast %struct.htab* %4 to i8*, !dbg !18023
  call void @htab_traverse(%struct.htab* %3, i32 (i8**, i8*)* @check_changed_vars_1, i8* %5), !dbg !18024
  br label %while.cond, !dbg !18025

while.cond:                                       ; preds = %cond.end10, %if.then3
  %6 = load %struct.VEC_variable_heap*, %struct.VEC_variable_heap** @changed_variables_stack, align 8, !dbg !18026
  %tobool4 = icmp ne %struct.VEC_variable_heap* %6, null, !dbg !18026
  br i1 %tobool4, label %cond.true, label %cond.false, !dbg !18026

cond.true:                                        ; preds = %while.cond
  %7 = load %struct.VEC_variable_heap*, %struct.VEC_variable_heap** @changed_variables_stack, align 8, !dbg !18026
  %base = getelementptr inbounds %struct.VEC_variable_heap, %struct.VEC_variable_heap* %7, i32 0, i32 0, !dbg !18026
  br label %cond.end, !dbg !18026

cond.false:                                       ; preds = %while.cond
  br label %cond.end, !dbg !18026

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_variable_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !18026
  %call5 = call i32 @VEC_variable_base_length(%struct.VEC_variable_base* %cond), !dbg !18026
  %cmp = icmp ugt i32 %call5, 0, !dbg !18027
  br i1 %cmp, label %while.body, label %while.end, !dbg !18025

while.body:                                       ; preds = %cond.end
  %8 = load %struct.VEC_variable_heap*, %struct.VEC_variable_heap** @changed_variables_stack, align 8, !dbg !18028
  %tobool6 = icmp ne %struct.VEC_variable_heap* %8, null, !dbg !18028
  br i1 %tobool6, label %cond.true7, label %cond.false9, !dbg !18028

cond.true7:                                       ; preds = %while.body
  %9 = load %struct.VEC_variable_heap*, %struct.VEC_variable_heap** @changed_variables_stack, align 8, !dbg !18028
  %base8 = getelementptr inbounds %struct.VEC_variable_heap, %struct.VEC_variable_heap* %9, i32 0, i32 0, !dbg !18028
  br label %cond.end10, !dbg !18028

cond.false9:                                      ; preds = %while.body
  br label %cond.end10, !dbg !18028

cond.end10:                                       ; preds = %cond.false9, %cond.true7
  %cond11 = phi %struct.VEC_variable_base* [ %base8, %cond.true7 ], [ null, %cond.false9 ], !dbg !18028
  %call12 = call %struct.variable_def* @VEC_variable_base_pop(%struct.VEC_variable_base* %cond11), !dbg !18028
  %10 = load %struct.htab*, %struct.htab** %htab, align 8, !dbg !18029
  call void @check_changed_vars_2(%struct.variable_def* %call12, %struct.htab* %10), !dbg !18030
  br label %while.cond, !dbg !18025, !llvm.loop !18031

while.end:                                        ; preds = %cond.end
  br label %while.cond13, !dbg !18033

while.cond13:                                     ; preds = %cond.end27, %while.end
  %11 = load %struct.VEC_rtx_heap*, %struct.VEC_rtx_heap** @changed_values_stack, align 8, !dbg !18034
  %tobool14 = icmp ne %struct.VEC_rtx_heap* %11, null, !dbg !18034
  br i1 %tobool14, label %cond.true15, label %cond.false17, !dbg !18034

cond.true15:                                      ; preds = %while.cond13
  %12 = load %struct.VEC_rtx_heap*, %struct.VEC_rtx_heap** @changed_values_stack, align 8, !dbg !18034
  %base16 = getelementptr inbounds %struct.VEC_rtx_heap, %struct.VEC_rtx_heap* %12, i32 0, i32 0, !dbg !18034
  br label %cond.end18, !dbg !18034

cond.false17:                                     ; preds = %while.cond13
  br label %cond.end18, !dbg !18034

cond.end18:                                       ; preds = %cond.false17, %cond.true15
  %cond19 = phi %struct.VEC_rtx_base* [ %base16, %cond.true15 ], [ null, %cond.false17 ], !dbg !18034
  %call20 = call i32 @VEC_rtx_base_length(%struct.VEC_rtx_base* %cond19), !dbg !18034
  %cmp21 = icmp ugt i32 %call20, 0, !dbg !18035
  br i1 %cmp21, label %while.body22, label %while.end31, !dbg !18033

while.body22:                                     ; preds = %cond.end18
  %13 = load %struct.VEC_rtx_heap*, %struct.VEC_rtx_heap** @changed_values_stack, align 8, !dbg !18036
  %tobool23 = icmp ne %struct.VEC_rtx_heap* %13, null, !dbg !18036
  br i1 %tobool23, label %cond.true24, label %cond.false26, !dbg !18036

cond.true24:                                      ; preds = %while.body22
  %14 = load %struct.VEC_rtx_heap*, %struct.VEC_rtx_heap** @changed_values_stack, align 8, !dbg !18036
  %base25 = getelementptr inbounds %struct.VEC_rtx_heap, %struct.VEC_rtx_heap* %14, i32 0, i32 0, !dbg !18036
  br label %cond.end27, !dbg !18036

cond.false26:                                     ; preds = %while.body22
  br label %cond.end27, !dbg !18036

cond.end27:                                       ; preds = %cond.false26, %cond.true24
  %cond28 = phi %struct.VEC_rtx_base* [ %base25, %cond.true24 ], [ null, %cond.false26 ], !dbg !18036
  %call29 = call %struct.rtx_def* @VEC_rtx_base_pop(%struct.VEC_rtx_base* %cond28), !dbg !18036
  %call30 = call i8* @dv_from_value(%struct.rtx_def* %call29), !dbg !18037
  call void @set_dv_changed(i8* %call30, i8 zeroext 0), !dbg !18038
  br label %while.cond13, !dbg !18033, !llvm.loop !18039

while.end31:                                      ; preds = %cond.end18
  %15 = load %struct.htab*, %struct.htab** @changed_variables, align 8, !dbg !18041
  %16 = load %struct.htab*, %struct.htab** %htab, align 8, !dbg !18042
  %17 = bitcast %struct.htab* %16 to i8*, !dbg !18042
  call void @htab_traverse(%struct.htab* %15, i32 (i8**, i8*)* @check_changed_vars_3, i8* %17), !dbg !18043
  br label %if.end32, !dbg !18044

if.end32:                                         ; preds = %while.end31, %if.end
  %18 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !18045
  %insn33 = getelementptr inbounds %struct.emit_note_data_def, %struct.emit_note_data_def* %data, i32 0, i32 0, !dbg !18046
  store %struct.rtx_def* %18, %struct.rtx_def** %insn33, align 8, !dbg !18047
  %19 = load i32, i32* %where.addr, align 4, !dbg !18048
  %where34 = getelementptr inbounds %struct.emit_note_data_def, %struct.emit_note_data_def* %data, i32 0, i32 1, !dbg !18049
  store i32 %19, i32* %where34, align 8, !dbg !18050
  %20 = load %struct.htab*, %struct.htab** %htab, align 8, !dbg !18051
  %vars35 = getelementptr inbounds %struct.emit_note_data_def, %struct.emit_note_data_def* %data, i32 0, i32 2, !dbg !18052
  store %struct.htab* %20, %struct.htab** %vars35, align 8, !dbg !18053
  %21 = load %struct.htab*, %struct.htab** @changed_variables, align 8, !dbg !18054
  %22 = bitcast %struct.emit_note_data_def* %data to i8*, !dbg !18055
  call void @htab_traverse(%struct.htab* %21, i32 (i8**, i8*)* @emit_note_insn_var_location, i8* %22), !dbg !18056
  br label %return, !dbg !18057

return:                                           ; preds = %if.end32, %if.then
  ret void, !dbg !18057
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @check_changed_vars_1(i8** %slot, i8* %data) #0 !dbg !18058 {
entry:
  %slot.addr = alloca i8**, align 8
  %data.addr = alloca i8*, align 8
  %var = alloca %struct.variable_def*, align 8
  %htab = alloca %struct.htab*, align 8
  store i8** %slot, i8*** %slot.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %slot.addr, metadata !18059, metadata !DIExpression()), !dbg !18060
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !18061, metadata !DIExpression()), !dbg !18062
  call void @llvm.dbg.declare(metadata %struct.variable_def** %var, metadata !18063, metadata !DIExpression()), !dbg !18064
  %0 = load i8**, i8*** %slot.addr, align 8, !dbg !18065
  %1 = load i8*, i8** %0, align 8, !dbg !18066
  %2 = bitcast i8* %1 to %struct.variable_def*, !dbg !18067
  store %struct.variable_def* %2, %struct.variable_def** %var, align 8, !dbg !18064
  call void @llvm.dbg.declare(metadata %struct.htab** %htab, metadata !18068, metadata !DIExpression()), !dbg !18069
  %3 = load i8*, i8** %data.addr, align 8, !dbg !18070
  %4 = bitcast i8* %3 to %struct.htab*, !dbg !18071
  store %struct.htab* %4, %struct.htab** %htab, align 8, !dbg !18069
  %5 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18072
  %dv = getelementptr inbounds %struct.variable_def, %struct.variable_def* %5, i32 0, i32 0, !dbg !18074
  %6 = load i8*, i8** %dv, align 8, !dbg !18074
  %call = call zeroext i8 @dv_is_value_p(i8* %6), !dbg !18075
  %conv = zext i8 %call to i32, !dbg !18075
  %tobool = icmp ne i32 %conv, 0, !dbg !18075
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !18076

lor.lhs.false:                                    ; preds = %entry
  %7 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18077
  %dv1 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %7, i32 0, i32 0, !dbg !18077
  %8 = load i8*, i8** %dv1, align 8, !dbg !18077
  %call2 = call %union.tree_node* @dv_as_decl(i8* %8), !dbg !18077
  %base = bitcast %union.tree_node* %call2 to %struct.tree_base*, !dbg !18077
  %9 = bitcast %struct.tree_base* %base to i64*, !dbg !18077
  %bf.load = load i64, i64* %9, align 8, !dbg !18077
  %bf.clear = and i64 %bf.load, 65535, !dbg !18077
  %bf.cast = trunc i64 %bf.clear to i32, !dbg !18077
  %cmp = icmp eq i32 %bf.cast, 37, !dbg !18078
  br i1 %cmp, label %if.then, label %if.end, !dbg !18079

if.then:                                          ; preds = %lor.lhs.false, %entry
  %10 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18080
  %dv4 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %10, i32 0, i32 0, !dbg !18081
  %11 = load i8*, i8** %dv4, align 8, !dbg !18081
  %12 = load %struct.htab*, %struct.htab** %htab, align 8, !dbg !18082
  call void @check_changed_vars_0(i8* %11, %struct.htab* %12), !dbg !18083
  br label %if.end, !dbg !18083

if.end:                                           ; preds = %if.then, %lor.lhs.false
  ret i32 1, !dbg !18084
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_variable_base_length(%struct.VEC_variable_base* %vec_) #0 !dbg !18085 {
entry:
  %vec_.addr = alloca %struct.VEC_variable_base*, align 8
  store %struct.VEC_variable_base* %vec_, %struct.VEC_variable_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_variable_base** %vec_.addr, metadata !18090, metadata !DIExpression()), !dbg !18091
  %0 = load %struct.VEC_variable_base*, %struct.VEC_variable_base** %vec_.addr, align 8, !dbg !18091
  %tobool = icmp ne %struct.VEC_variable_base* %0, null, !dbg !18091
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !18091

cond.true:                                        ; preds = %entry
  %1 = load %struct.VEC_variable_base*, %struct.VEC_variable_base** %vec_.addr, align 8, !dbg !18091
  %num = getelementptr inbounds %struct.VEC_variable_base, %struct.VEC_variable_base* %1, i32 0, i32 0, !dbg !18091
  %2 = load i32, i32* %num, align 8, !dbg !18091
  br label %cond.end, !dbg !18091

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !18091

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ 0, %cond.false ], !dbg !18091
  ret i32 %cond, !dbg !18091
}

; Function Attrs: noinline nounwind uwtable
define internal void @check_changed_vars_2(%struct.variable_def* %var, %struct.htab* %htab) #0 !dbg !18092 {
entry:
  %var.addr = alloca %struct.variable_def*, align 8
  %htab.addr = alloca %struct.htab*, align 8
  store %struct.variable_def* %var, %struct.variable_def** %var.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.variable_def** %var.addr, metadata !18095, metadata !DIExpression()), !dbg !18096
  store %struct.htab* %htab, %struct.htab** %htab.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.htab** %htab.addr, metadata !18097, metadata !DIExpression()), !dbg !18098
  %0 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !18099
  call void @variable_was_changed(%struct.variable_def* %0, %struct.dataflow_set_def* null), !dbg !18100
  %1 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !18101
  %dv = getelementptr inbounds %struct.variable_def, %struct.variable_def* %1, i32 0, i32 0, !dbg !18103
  %2 = load i8*, i8** %dv, align 8, !dbg !18103
  %call = call zeroext i8 @dv_is_value_p(i8* %2), !dbg !18104
  %conv = zext i8 %call to i32, !dbg !18104
  %tobool = icmp ne i32 %conv, 0, !dbg !18104
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !18105

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !18106
  %dv1 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %3, i32 0, i32 0, !dbg !18106
  %4 = load i8*, i8** %dv1, align 8, !dbg !18106
  %call2 = call %union.tree_node* @dv_as_decl(i8* %4), !dbg !18106
  %base = bitcast %union.tree_node* %call2 to %struct.tree_base*, !dbg !18106
  %5 = bitcast %struct.tree_base* %base to i64*, !dbg !18106
  %bf.load = load i64, i64* %5, align 8, !dbg !18106
  %bf.clear = and i64 %bf.load, 65535, !dbg !18106
  %bf.cast = trunc i64 %bf.clear to i32, !dbg !18106
  %cmp = icmp eq i32 %bf.cast, 37, !dbg !18107
  br i1 %cmp, label %if.then, label %if.end, !dbg !18108

if.then:                                          ; preds = %lor.lhs.false, %entry
  %6 = load %struct.variable_def*, %struct.variable_def** %var.addr, align 8, !dbg !18109
  %dv4 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %6, i32 0, i32 0, !dbg !18110
  %7 = load i8*, i8** %dv4, align 8, !dbg !18110
  %8 = load %struct.htab*, %struct.htab** %htab.addr, align 8, !dbg !18111
  call void @check_changed_vars_0(i8* %7, %struct.htab* %8), !dbg !18112
  br label %if.end, !dbg !18112

if.end:                                           ; preds = %if.then, %lor.lhs.false
  ret void, !dbg !18113
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.variable_def* @VEC_variable_base_pop(%struct.VEC_variable_base* %vec_) #0 !dbg !18114 {
entry:
  %vec_.addr = alloca %struct.VEC_variable_base*, align 8
  %obj_ = alloca %struct.variable_def*, align 8
  store %struct.VEC_variable_base* %vec_, %struct.VEC_variable_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_variable_base** %vec_.addr, metadata !18118, metadata !DIExpression()), !dbg !18119
  call void @llvm.dbg.declare(metadata %struct.variable_def** %obj_, metadata !18120, metadata !DIExpression()), !dbg !18119
  %0 = load %struct.VEC_variable_base*, %struct.VEC_variable_base** %vec_.addr, align 8, !dbg !18119
  %num = getelementptr inbounds %struct.VEC_variable_base, %struct.VEC_variable_base* %0, i32 0, i32 0, !dbg !18119
  %1 = load i32, i32* %num, align 8, !dbg !18119
  %2 = load %struct.VEC_variable_base*, %struct.VEC_variable_base** %vec_.addr, align 8, !dbg !18119
  %vec = getelementptr inbounds %struct.VEC_variable_base, %struct.VEC_variable_base* %2, i32 0, i32 2, !dbg !18119
  %3 = load %struct.VEC_variable_base*, %struct.VEC_variable_base** %vec_.addr, align 8, !dbg !18119
  %num1 = getelementptr inbounds %struct.VEC_variable_base, %struct.VEC_variable_base* %3, i32 0, i32 0, !dbg !18119
  %4 = load i32, i32* %num1, align 8, !dbg !18119
  %dec = add i32 %4, -1, !dbg !18119
  store i32 %dec, i32* %num1, align 8, !dbg !18119
  %idxprom = zext i32 %dec to i64, !dbg !18119
  %arrayidx = getelementptr inbounds [1 x %struct.variable_def*], [1 x %struct.variable_def*]* %vec, i64 0, i64 %idxprom, !dbg !18119
  %5 = load %struct.variable_def*, %struct.variable_def** %arrayidx, align 8, !dbg !18119
  store %struct.variable_def* %5, %struct.variable_def** %obj_, align 8, !dbg !18119
  %6 = load %struct.variable_def*, %struct.variable_def** %obj_, align 8, !dbg !18119
  ret %struct.variable_def* %6, !dbg !18119
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_rtx_base_length(%struct.VEC_rtx_base* %vec_) #0 !dbg !18121 {
entry:
  %vec_.addr = alloca %struct.VEC_rtx_base*, align 8
  store %struct.VEC_rtx_base* %vec_, %struct.VEC_rtx_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_rtx_base** %vec_.addr, metadata !18124, metadata !DIExpression()), !dbg !18125
  %0 = load %struct.VEC_rtx_base*, %struct.VEC_rtx_base** %vec_.addr, align 8, !dbg !18125
  %tobool = icmp ne %struct.VEC_rtx_base* %0, null, !dbg !18125
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !18125

cond.true:                                        ; preds = %entry
  %1 = load %struct.VEC_rtx_base*, %struct.VEC_rtx_base** %vec_.addr, align 8, !dbg !18125
  %num = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %1, i32 0, i32 0, !dbg !18125
  %2 = load i32, i32* %num, align 8, !dbg !18125
  br label %cond.end, !dbg !18125

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !18125

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ 0, %cond.false ], !dbg !18125
  ret i32 %cond, !dbg !18125
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @VEC_rtx_base_pop(%struct.VEC_rtx_base* %vec_) #0 !dbg !18126 {
entry:
  %vec_.addr = alloca %struct.VEC_rtx_base*, align 8
  %obj_ = alloca %struct.rtx_def*, align 8
  store %struct.VEC_rtx_base* %vec_, %struct.VEC_rtx_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_rtx_base** %vec_.addr, metadata !18129, metadata !DIExpression()), !dbg !18130
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %obj_, metadata !18131, metadata !DIExpression()), !dbg !18130
  %0 = load %struct.VEC_rtx_base*, %struct.VEC_rtx_base** %vec_.addr, align 8, !dbg !18130
  %num = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %0, i32 0, i32 0, !dbg !18130
  %1 = load i32, i32* %num, align 8, !dbg !18130
  %2 = load %struct.VEC_rtx_base*, %struct.VEC_rtx_base** %vec_.addr, align 8, !dbg !18130
  %vec = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %2, i32 0, i32 2, !dbg !18130
  %3 = load %struct.VEC_rtx_base*, %struct.VEC_rtx_base** %vec_.addr, align 8, !dbg !18130
  %num1 = getelementptr inbounds %struct.VEC_rtx_base, %struct.VEC_rtx_base* %3, i32 0, i32 0, !dbg !18130
  %4 = load i32, i32* %num1, align 8, !dbg !18130
  %dec = add i32 %4, -1, !dbg !18130
  store i32 %dec, i32* %num1, align 8, !dbg !18130
  %idxprom = zext i32 %dec to i64, !dbg !18130
  %arrayidx = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %vec, i64 0, i64 %idxprom, !dbg !18130
  %5 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx, align 8, !dbg !18130
  store %struct.rtx_def* %5, %struct.rtx_def** %obj_, align 8, !dbg !18130
  %6 = load %struct.rtx_def*, %struct.rtx_def** %obj_, align 8, !dbg !18130
  ret %struct.rtx_def* %6, !dbg !18130
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @check_changed_vars_3(i8** %slot, i8* %data) #0 !dbg !18132 {
entry:
  %retval = alloca i32, align 4
  %slot.addr = alloca i8**, align 8
  %data.addr = alloca i8*, align 8
  %var = alloca %struct.variable_def*, align 8
  %vars = alloca %struct.htab*, align 8
  %i = alloca i32, align 4
  %lc = alloca %struct.location_chain_def*, align 8
  %cur_loc_changed = alloca i8, align 1
  store i8** %slot, i8*** %slot.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %slot.addr, metadata !18133, metadata !DIExpression()), !dbg !18134
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !18135, metadata !DIExpression()), !dbg !18136
  call void @llvm.dbg.declare(metadata %struct.variable_def** %var, metadata !18137, metadata !DIExpression()), !dbg !18138
  %0 = load i8**, i8*** %slot.addr, align 8, !dbg !18139
  %1 = load i8*, i8** %0, align 8, !dbg !18140
  %2 = bitcast i8* %1 to %struct.variable_def*, !dbg !18141
  store %struct.variable_def* %2, %struct.variable_def** %var, align 8, !dbg !18138
  call void @llvm.dbg.declare(metadata %struct.htab** %vars, metadata !18142, metadata !DIExpression()), !dbg !18143
  %3 = load i8*, i8** %data.addr, align 8, !dbg !18144
  %4 = bitcast i8* %3 to %struct.htab*, !dbg !18145
  store %struct.htab* %4, %struct.htab** %vars, align 8, !dbg !18143
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18146, metadata !DIExpression()), !dbg !18147
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %lc, metadata !18148, metadata !DIExpression()), !dbg !18149
  call void @llvm.dbg.declare(metadata i8* %cur_loc_changed, metadata !18150, metadata !DIExpression()), !dbg !18151
  %5 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18152
  %dv = getelementptr inbounds %struct.variable_def, %struct.variable_def* %5, i32 0, i32 0, !dbg !18154
  %6 = load i8*, i8** %dv, align 8, !dbg !18154
  %call = call zeroext i8 @dv_is_value_p(i8* %6), !dbg !18155
  %conv = zext i8 %call to i32, !dbg !18155
  %tobool = icmp ne i32 %conv, 0, !dbg !18155
  br i1 %tobool, label %if.then, label %lor.lhs.false, !dbg !18156

lor.lhs.false:                                    ; preds = %entry
  %7 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18157
  %dv1 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %7, i32 0, i32 0, !dbg !18157
  %8 = load i8*, i8** %dv1, align 8, !dbg !18157
  %call2 = call %union.tree_node* @dv_as_decl(i8* %8), !dbg !18157
  %base = bitcast %union.tree_node* %call2 to %struct.tree_base*, !dbg !18157
  %9 = bitcast %struct.tree_base* %base to i64*, !dbg !18157
  %bf.load = load i64, i64* %9, align 8, !dbg !18157
  %bf.clear = and i64 %bf.load, 65535, !dbg !18157
  %bf.cast = trunc i64 %bf.clear to i32, !dbg !18157
  %cmp = icmp eq i32 %bf.cast, 37, !dbg !18158
  br i1 %cmp, label %if.then, label %if.end, !dbg !18159

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 1, i32* %retval, align 4, !dbg !18160
  br label %return, !dbg !18160

if.end:                                           ; preds = %lor.lhs.false
  store i32 0, i32* %i, align 4, !dbg !18161
  br label %for.cond, !dbg !18163

for.cond:                                         ; preds = %for.inc56, %if.end
  %10 = load i32, i32* %i, align 4, !dbg !18164
  %11 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18166
  %n_var_parts = getelementptr inbounds %struct.variable_def, %struct.variable_def* %11, i32 0, i32 2, !dbg !18167
  %12 = load i8, i8* %n_var_parts, align 4, !dbg !18167
  %conv4 = sext i8 %12 to i32, !dbg !18166
  %cmp5 = icmp slt i32 %10, %conv4, !dbg !18168
  br i1 %cmp5, label %for.body, label %for.end57, !dbg !18169

for.body:                                         ; preds = %for.cond
  %13 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18170
  %var_part = getelementptr inbounds %struct.variable_def, %struct.variable_def* %13, i32 0, i32 5, !dbg !18173
  %14 = load i32, i32* %i, align 4, !dbg !18174
  %idxprom = sext i32 %14 to i64, !dbg !18170
  %arrayidx = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part, i64 0, i64 %idxprom, !dbg !18170
  %cur_loc = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx, i32 0, i32 1, !dbg !18175
  %15 = load %struct.rtx_def*, %struct.rtx_def** %cur_loc, align 8, !dbg !18175
  %tobool7 = icmp ne %struct.rtx_def* %15, null, !dbg !18170
  br i1 %tobool7, label %land.lhs.true, label %if.end20, !dbg !18176

land.lhs.true:                                    ; preds = %for.body
  %16 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18177
  %var_part8 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %16, i32 0, i32 5, !dbg !18178
  %17 = load i32, i32* %i, align 4, !dbg !18179
  %idxprom9 = sext i32 %17 to i64, !dbg !18177
  %arrayidx10 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part8, i64 0, i64 %idxprom9, !dbg !18177
  %cur_loc11 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx10, i32 0, i32 1, !dbg !18180
  %18 = load %struct.rtx_def*, %struct.rtx_def** %cur_loc11, align 8, !dbg !18180
  %19 = load %struct.htab*, %struct.htab** %vars, align 8, !dbg !18181
  %call12 = call zeroext i8 @vt_expand_loc_dummy(%struct.rtx_def* %18, %struct.htab* %19, i8* %cur_loc_changed), !dbg !18182
  %conv13 = zext i8 %call12 to i32, !dbg !18182
  %tobool14 = icmp ne i32 %conv13, 0, !dbg !18182
  br i1 %tobool14, label %if.then15, label %if.end20, !dbg !18183

if.then15:                                        ; preds = %land.lhs.true
  %20 = load i8, i8* %cur_loc_changed, align 1, !dbg !18184
  %tobool16 = icmp ne i8 %20, 0, !dbg !18184
  br i1 %tobool16, label %if.then17, label %if.end19, !dbg !18187

if.then17:                                        ; preds = %if.then15
  %21 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18188
  %cur_loc_changed18 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %21, i32 0, i32 3, !dbg !18189
  store i8 1, i8* %cur_loc_changed18, align 1, !dbg !18190
  br label %if.end19, !dbg !18188

if.end19:                                         ; preds = %if.then17, %if.then15
  br label %for.inc56, !dbg !18191

if.end20:                                         ; preds = %land.lhs.true, %for.body
  %22 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18192
  %var_part21 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %22, i32 0, i32 5, !dbg !18194
  %23 = load i32, i32* %i, align 4, !dbg !18195
  %idxprom22 = sext i32 %23 to i64, !dbg !18192
  %arrayidx23 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part21, i64 0, i64 %idxprom22, !dbg !18192
  %loc_chain = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx23, i32 0, i32 0, !dbg !18196
  %24 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain, align 8, !dbg !18196
  store %struct.location_chain_def* %24, %struct.location_chain_def** %lc, align 8, !dbg !18197
  br label %for.cond24, !dbg !18198

for.cond24:                                       ; preds = %for.inc, %if.end20
  %25 = load %struct.location_chain_def*, %struct.location_chain_def** %lc, align 8, !dbg !18199
  %tobool25 = icmp ne %struct.location_chain_def* %25, null, !dbg !18201
  br i1 %tobool25, label %for.body26, label %for.end, !dbg !18201

for.body26:                                       ; preds = %for.cond24
  %26 = load %struct.location_chain_def*, %struct.location_chain_def** %lc, align 8, !dbg !18202
  %loc = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %26, i32 0, i32 1, !dbg !18204
  %27 = load %struct.rtx_def*, %struct.rtx_def** %loc, align 8, !dbg !18204
  %28 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18205
  %var_part27 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %28, i32 0, i32 5, !dbg !18206
  %29 = load i32, i32* %i, align 4, !dbg !18207
  %idxprom28 = sext i32 %29 to i64, !dbg !18205
  %arrayidx29 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part27, i64 0, i64 %idxprom28, !dbg !18205
  %cur_loc30 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx29, i32 0, i32 1, !dbg !18208
  %30 = load %struct.rtx_def*, %struct.rtx_def** %cur_loc30, align 8, !dbg !18208
  %cmp31 = icmp ne %struct.rtx_def* %27, %30, !dbg !18209
  br i1 %cmp31, label %land.lhs.true33, label %if.end39, !dbg !18210

land.lhs.true33:                                  ; preds = %for.body26
  %31 = load %struct.location_chain_def*, %struct.location_chain_def** %lc, align 8, !dbg !18211
  %loc34 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %31, i32 0, i32 1, !dbg !18212
  %32 = load %struct.rtx_def*, %struct.rtx_def** %loc34, align 8, !dbg !18212
  %33 = load %struct.htab*, %struct.htab** %vars, align 8, !dbg !18213
  %call35 = call zeroext i8 @vt_expand_loc_dummy(%struct.rtx_def* %32, %struct.htab* %33, i8* %cur_loc_changed), !dbg !18214
  %conv36 = zext i8 %call35 to i32, !dbg !18214
  %tobool37 = icmp ne i32 %conv36, 0, !dbg !18214
  br i1 %tobool37, label %if.then38, label %if.end39, !dbg !18215

if.then38:                                        ; preds = %land.lhs.true33
  br label %for.end, !dbg !18216

if.end39:                                         ; preds = %land.lhs.true33, %for.body26
  br label %for.inc, !dbg !18217

for.inc:                                          ; preds = %if.end39
  %34 = load %struct.location_chain_def*, %struct.location_chain_def** %lc, align 8, !dbg !18218
  %next = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %34, i32 0, i32 0, !dbg !18219
  %35 = load %struct.location_chain_def*, %struct.location_chain_def** %next, align 8, !dbg !18219
  store %struct.location_chain_def* %35, %struct.location_chain_def** %lc, align 8, !dbg !18220
  br label %for.cond24, !dbg !18221, !llvm.loop !18222

for.end:                                          ; preds = %if.then38, %for.cond24
  %36 = load %struct.location_chain_def*, %struct.location_chain_def** %lc, align 8, !dbg !18224
  %tobool40 = icmp ne %struct.location_chain_def* %36, null, !dbg !18224
  br i1 %tobool40, label %if.then47, label %lor.lhs.false41, !dbg !18226

lor.lhs.false41:                                  ; preds = %for.end
  %37 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18227
  %var_part42 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %37, i32 0, i32 5, !dbg !18228
  %38 = load i32, i32* %i, align 4, !dbg !18229
  %idxprom43 = sext i32 %38 to i64, !dbg !18227
  %arrayidx44 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part42, i64 0, i64 %idxprom43, !dbg !18227
  %cur_loc45 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx44, i32 0, i32 1, !dbg !18230
  %39 = load %struct.rtx_def*, %struct.rtx_def** %cur_loc45, align 8, !dbg !18230
  %tobool46 = icmp ne %struct.rtx_def* %39, null, !dbg !18227
  br i1 %tobool46, label %if.then47, label %if.end49, !dbg !18231

if.then47:                                        ; preds = %lor.lhs.false41, %for.end
  %40 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18232
  %cur_loc_changed48 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %40, i32 0, i32 3, !dbg !18233
  store i8 1, i8* %cur_loc_changed48, align 1, !dbg !18234
  br label %if.end49, !dbg !18232

if.end49:                                         ; preds = %if.then47, %lor.lhs.false41
  %41 = load %struct.location_chain_def*, %struct.location_chain_def** %lc, align 8, !dbg !18235
  %tobool50 = icmp ne %struct.location_chain_def* %41, null, !dbg !18235
  br i1 %tobool50, label %cond.true, label %cond.false, !dbg !18235

cond.true:                                        ; preds = %if.end49
  %42 = load %struct.location_chain_def*, %struct.location_chain_def** %lc, align 8, !dbg !18236
  %loc51 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %42, i32 0, i32 1, !dbg !18237
  %43 = load %struct.rtx_def*, %struct.rtx_def** %loc51, align 8, !dbg !18237
  br label %cond.end, !dbg !18235

cond.false:                                       ; preds = %if.end49
  br label %cond.end, !dbg !18235

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.rtx_def* [ %43, %cond.true ], [ null, %cond.false ], !dbg !18235
  %44 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18238
  %var_part52 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %44, i32 0, i32 5, !dbg !18239
  %45 = load i32, i32* %i, align 4, !dbg !18240
  %idxprom53 = sext i32 %45 to i64, !dbg !18238
  %arrayidx54 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part52, i64 0, i64 %idxprom53, !dbg !18238
  %cur_loc55 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx54, i32 0, i32 1, !dbg !18241
  store %struct.rtx_def* %cond, %struct.rtx_def** %cur_loc55, align 8, !dbg !18242
  br label %for.inc56, !dbg !18243

for.inc56:                                        ; preds = %cond.end, %if.end19
  %46 = load i32, i32* %i, align 4, !dbg !18244
  %inc = add nsw i32 %46, 1, !dbg !18244
  store i32 %inc, i32* %i, align 4, !dbg !18244
  br label %for.cond, !dbg !18245, !llvm.loop !18246

for.end57:                                        ; preds = %for.cond
  %47 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18248
  %n_var_parts58 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %47, i32 0, i32 2, !dbg !18250
  %48 = load i8, i8* %n_var_parts58, align 4, !dbg !18250
  %conv59 = sext i8 %48 to i32, !dbg !18248
  %cmp60 = icmp eq i32 %conv59, 0, !dbg !18251
  br i1 %cmp60, label %if.then62, label %if.end64, !dbg !18252

if.then62:                                        ; preds = %for.end57
  %49 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18253
  %cur_loc_changed63 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %49, i32 0, i32 3, !dbg !18254
  store i8 1, i8* %cur_loc_changed63, align 1, !dbg !18255
  br label %if.end64, !dbg !18253

if.end64:                                         ; preds = %if.then62, %for.end57
  store i32 1, i32* %retval, align 4, !dbg !18256
  br label %return, !dbg !18256

return:                                           ; preds = %if.end64, %if.then
  %50 = load i32, i32* %retval, align 4, !dbg !18257
  ret i32 %50, !dbg !18257
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @emit_note_insn_var_location(i8** %varp, i8* %data) #0 !dbg !18258 {
entry:
  %varp.addr = alloca i8**, align 8
  %data.addr = alloca i8*, align 8
  %var = alloca %struct.variable_def*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %where = alloca i32, align 4
  %vars = alloca %struct.htab*, align 8
  %note = alloca %struct.rtx_def*, align 8
  %note_vl = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %n_var_parts = alloca i32, align 4
  %complete = alloca i8, align 1
  %initialized = alloca i32, align 4
  %last_limit = alloca i64, align 8
  %type_size_unit = alloca %union.tree_node*, align 8
  %offsets = alloca [16 x i64], align 16
  %loc = alloca [16 x %struct.rtx_def*], align 16
  %decl = alloca %union.tree_node*, align 8
  %lc = alloca %struct.location_chain_def*, align 8
  %mode = alloca i32, align 4
  %wider_mode = alloca i32, align 4
  %loc2 = alloca %struct.rtx_def*, align 8
  %new_loc = alloca %struct.rtx_def*, align 8
  %expr_list = alloca %struct.rtx_def*, align 8
  %parallel = alloca %struct.rtx_def*, align 8
  %lc552 = alloca %struct.location_chain_def*, align 8
  %cur_loc_changed553 = alloca i8, align 1
  store i8** %varp, i8*** %varp.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %varp.addr, metadata !18259, metadata !DIExpression()), !dbg !18260
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !18261, metadata !DIExpression()), !dbg !18262
  call void @llvm.dbg.declare(metadata %struct.variable_def** %var, metadata !18263, metadata !DIExpression()), !dbg !18264
  %0 = load i8**, i8*** %varp.addr, align 8, !dbg !18265
  %1 = load i8*, i8** %0, align 8, !dbg !18266
  %2 = bitcast i8* %1 to %struct.variable_def*, !dbg !18267
  store %struct.variable_def* %2, %struct.variable_def** %var, align 8, !dbg !18264
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !18268, metadata !DIExpression()), !dbg !18269
  %3 = load i8*, i8** %data.addr, align 8, !dbg !18270
  %4 = bitcast i8* %3 to %struct.emit_note_data_def*, !dbg !18271
  %insn1 = getelementptr inbounds %struct.emit_note_data_def, %struct.emit_note_data_def* %4, i32 0, i32 0, !dbg !18272
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn1, align 8, !dbg !18272
  store %struct.rtx_def* %5, %struct.rtx_def** %insn, align 8, !dbg !18269
  call void @llvm.dbg.declare(metadata i32* %where, metadata !18273, metadata !DIExpression()), !dbg !18274
  %6 = load i8*, i8** %data.addr, align 8, !dbg !18275
  %7 = bitcast i8* %6 to %struct.emit_note_data_def*, !dbg !18276
  %where2 = getelementptr inbounds %struct.emit_note_data_def, %struct.emit_note_data_def* %7, i32 0, i32 1, !dbg !18277
  %8 = load i32, i32* %where2, align 8, !dbg !18277
  store i32 %8, i32* %where, align 4, !dbg !18274
  call void @llvm.dbg.declare(metadata %struct.htab** %vars, metadata !18278, metadata !DIExpression()), !dbg !18279
  %9 = load i8*, i8** %data.addr, align 8, !dbg !18280
  %10 = bitcast i8* %9 to %struct.emit_note_data_def*, !dbg !18281
  %vars3 = getelementptr inbounds %struct.emit_note_data_def, %struct.emit_note_data_def* %10, i32 0, i32 2, !dbg !18282
  %11 = load %struct.htab*, %struct.htab** %vars3, align 8, !dbg !18282
  store %struct.htab* %11, %struct.htab** %vars, align 8, !dbg !18279
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %note, metadata !18283, metadata !DIExpression()), !dbg !18284
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %note_vl, metadata !18285, metadata !DIExpression()), !dbg !18286
  call void @llvm.dbg.declare(metadata i32* %i, metadata !18287, metadata !DIExpression()), !dbg !18288
  call void @llvm.dbg.declare(metadata i32* %j, metadata !18289, metadata !DIExpression()), !dbg !18290
  call void @llvm.dbg.declare(metadata i32* %n_var_parts, metadata !18291, metadata !DIExpression()), !dbg !18292
  call void @llvm.dbg.declare(metadata i8* %complete, metadata !18293, metadata !DIExpression()), !dbg !18294
  call void @llvm.dbg.declare(metadata i32* %initialized, metadata !18295, metadata !DIExpression()), !dbg !18296
  store i32 1, i32* %initialized, align 4, !dbg !18296
  call void @llvm.dbg.declare(metadata i64* %last_limit, metadata !18297, metadata !DIExpression()), !dbg !18298
  call void @llvm.dbg.declare(metadata %union.tree_node** %type_size_unit, metadata !18299, metadata !DIExpression()), !dbg !18300
  call void @llvm.dbg.declare(metadata [16 x i64]* %offsets, metadata !18301, metadata !DIExpression()), !dbg !18305
  call void @llvm.dbg.declare(metadata [16 x %struct.rtx_def*]* %loc, metadata !18306, metadata !DIExpression()), !dbg !18308
  call void @llvm.dbg.declare(metadata %union.tree_node** %decl, metadata !18309, metadata !DIExpression()), !dbg !18310
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %lc, metadata !18311, metadata !DIExpression()), !dbg !18312
  %12 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18313
  %dv = getelementptr inbounds %struct.variable_def, %struct.variable_def* %12, i32 0, i32 0, !dbg !18315
  %13 = load i8*, i8** %dv, align 8, !dbg !18315
  %call = call zeroext i8 @dv_is_value_p(i8* %13), !dbg !18316
  %tobool = icmp ne i8 %call, 0, !dbg !18316
  br i1 %tobool, label %if.then, label %if.end, !dbg !18317

if.then:                                          ; preds = %entry
  br label %value_or_debug_decl, !dbg !18318

if.end:                                           ; preds = %entry
  %14 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18319
  %dv4 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %14, i32 0, i32 0, !dbg !18320
  %15 = load i8*, i8** %dv4, align 8, !dbg !18320
  %call5 = call %union.tree_node* @dv_as_decl(i8* %15), !dbg !18321
  store %union.tree_node* %call5, %union.tree_node** %decl, align 8, !dbg !18322
  %16 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !18323
  %base = bitcast %union.tree_node* %16 to %struct.tree_base*, !dbg !18323
  %17 = bitcast %struct.tree_base* %base to i64*, !dbg !18323
  %bf.load = load i64, i64* %17, align 8, !dbg !18323
  %bf.clear = and i64 %bf.load, 65535, !dbg !18323
  %bf.cast = trunc i64 %bf.clear to i32, !dbg !18323
  %cmp = icmp eq i32 %bf.cast, 37, !dbg !18325
  br i1 %cmp, label %if.then6, label %if.end7, !dbg !18326

if.then6:                                         ; preds = %if.end
  br label %value_or_debug_decl, !dbg !18327

if.end7:                                          ; preds = %if.end
  store i8 1, i8* %complete, align 1, !dbg !18328
  store i64 0, i64* %last_limit, align 8, !dbg !18329
  store i32 0, i32* %n_var_parts, align 4, !dbg !18330
  %18 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !18331
  %tobool8 = icmp ne i32 %18, 0, !dbg !18331
  br i1 %tobool8, label %if.end37, label %if.then9, !dbg !18333

if.then9:                                         ; preds = %if.end7
  store i32 0, i32* %i, align 4, !dbg !18334
  br label %for.cond, !dbg !18337

for.cond:                                         ; preds = %for.inc, %if.then9
  %19 = load i32, i32* %i, align 4, !dbg !18338
  %20 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18340
  %n_var_parts10 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %20, i32 0, i32 2, !dbg !18341
  %21 = load i8, i8* %n_var_parts10, align 4, !dbg !18341
  %conv = sext i8 %21 to i32, !dbg !18340
  %cmp11 = icmp slt i32 %19, %conv, !dbg !18342
  br i1 %cmp11, label %for.body, label %for.end, !dbg !18343

for.body:                                         ; preds = %for.cond
  %22 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18344
  %var_part = getelementptr inbounds %struct.variable_def, %struct.variable_def* %22, i32 0, i32 5, !dbg !18346
  %23 = load i32, i32* %i, align 4, !dbg !18347
  %idxprom = sext i32 %23 to i64, !dbg !18344
  %arrayidx = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part, i64 0, i64 %idxprom, !dbg !18344
  %cur_loc = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx, i32 0, i32 1, !dbg !18348
  %24 = load %struct.rtx_def*, %struct.rtx_def** %cur_loc, align 8, !dbg !18348
  %cmp13 = icmp eq %struct.rtx_def* %24, null, !dbg !18349
  br i1 %cmp13, label %land.lhs.true, label %if.end29, !dbg !18350

land.lhs.true:                                    ; preds = %for.body
  %25 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18351
  %var_part15 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %25, i32 0, i32 5, !dbg !18352
  %26 = load i32, i32* %i, align 4, !dbg !18353
  %idxprom16 = sext i32 %26 to i64, !dbg !18351
  %arrayidx17 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part15, i64 0, i64 %idxprom16, !dbg !18351
  %loc_chain = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx17, i32 0, i32 0, !dbg !18354
  %27 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain, align 8, !dbg !18354
  %tobool18 = icmp ne %struct.location_chain_def* %27, null, !dbg !18351
  br i1 %tobool18, label %if.then19, label %if.end29, !dbg !18355

if.then19:                                        ; preds = %land.lhs.true
  %28 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18356
  %var_part20 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %28, i32 0, i32 5, !dbg !18358
  %29 = load i32, i32* %i, align 4, !dbg !18359
  %idxprom21 = sext i32 %29 to i64, !dbg !18356
  %arrayidx22 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part20, i64 0, i64 %idxprom21, !dbg !18356
  %loc_chain23 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx22, i32 0, i32 0, !dbg !18360
  %30 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain23, align 8, !dbg !18360
  %loc24 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %30, i32 0, i32 1, !dbg !18361
  %31 = load %struct.rtx_def*, %struct.rtx_def** %loc24, align 8, !dbg !18361
  %32 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18362
  %var_part25 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %32, i32 0, i32 5, !dbg !18363
  %33 = load i32, i32* %i, align 4, !dbg !18364
  %idxprom26 = sext i32 %33 to i64, !dbg !18362
  %arrayidx27 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part25, i64 0, i64 %idxprom26, !dbg !18362
  %cur_loc28 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx27, i32 0, i32 1, !dbg !18365
  store %struct.rtx_def* %31, %struct.rtx_def** %cur_loc28, align 8, !dbg !18366
  %34 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18367
  %cur_loc_changed = getelementptr inbounds %struct.variable_def, %struct.variable_def* %34, i32 0, i32 3, !dbg !18368
  store i8 1, i8* %cur_loc_changed, align 1, !dbg !18369
  br label %if.end29, !dbg !18370

if.end29:                                         ; preds = %if.then19, %land.lhs.true, %for.body
  br label %for.inc, !dbg !18354

for.inc:                                          ; preds = %if.end29
  %35 = load i32, i32* %i, align 4, !dbg !18371
  %inc = add nsw i32 %35, 1, !dbg !18371
  store i32 %inc, i32* %i, align 4, !dbg !18371
  br label %for.cond, !dbg !18372, !llvm.loop !18373

for.end:                                          ; preds = %for.cond
  %36 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18375
  %n_var_parts30 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %36, i32 0, i32 2, !dbg !18377
  %37 = load i8, i8* %n_var_parts30, align 4, !dbg !18377
  %conv31 = sext i8 %37 to i32, !dbg !18375
  %cmp32 = icmp eq i32 %conv31, 0, !dbg !18378
  br i1 %cmp32, label %if.then34, label %if.end36, !dbg !18379

if.then34:                                        ; preds = %for.end
  %38 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18380
  %cur_loc_changed35 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %38, i32 0, i32 3, !dbg !18381
  store i8 1, i8* %cur_loc_changed35, align 1, !dbg !18382
  br label %if.end36, !dbg !18380

if.end36:                                         ; preds = %if.then34, %for.end
  br label %if.end37, !dbg !18383

if.end37:                                         ; preds = %if.end36, %if.end7
  %39 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18384
  %cur_loc_changed38 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %39, i32 0, i32 3, !dbg !18386
  %40 = load i8, i8* %cur_loc_changed38, align 1, !dbg !18386
  %tobool39 = icmp ne i8 %40, 0, !dbg !18384
  br i1 %tobool39, label %if.end41, label %if.then40, !dbg !18387

if.then40:                                        ; preds = %if.end37
  br label %clear, !dbg !18388

if.end41:                                         ; preds = %if.end37
  store i32 0, i32* %i, align 4, !dbg !18389
  br label %for.cond42, !dbg !18391

for.cond42:                                       ; preds = %for.inc458, %if.end41
  %41 = load i32, i32* %i, align 4, !dbg !18392
  %42 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18394
  %n_var_parts43 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %42, i32 0, i32 2, !dbg !18395
  %43 = load i8, i8* %n_var_parts43, align 4, !dbg !18395
  %conv44 = sext i8 %43 to i32, !dbg !18394
  %cmp45 = icmp slt i32 %41, %conv44, !dbg !18396
  br i1 %cmp45, label %for.body47, label %for.end460, !dbg !18397

for.body47:                                       ; preds = %for.cond42
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !18398, metadata !DIExpression()), !dbg !18400
  call void @llvm.dbg.declare(metadata i32* %wider_mode, metadata !18401, metadata !DIExpression()), !dbg !18402
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %loc2, metadata !18403, metadata !DIExpression()), !dbg !18404
  %44 = load i64, i64* %last_limit, align 8, !dbg !18405
  %45 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18407
  %var_part48 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %45, i32 0, i32 5, !dbg !18408
  %46 = load i32, i32* %i, align 4, !dbg !18409
  %idxprom49 = sext i32 %46 to i64, !dbg !18407
  %arrayidx50 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part48, i64 0, i64 %idxprom49, !dbg !18407
  %offset = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx50, i32 0, i32 2, !dbg !18410
  %47 = load i64, i64* %offset, align 8, !dbg !18410
  %cmp51 = icmp slt i64 %44, %47, !dbg !18411
  br i1 %cmp51, label %if.then53, label %if.else, !dbg !18412

if.then53:                                        ; preds = %for.body47
  store i8 0, i8* %complete, align 1, !dbg !18413
  br label %for.end460, !dbg !18415

if.else:                                          ; preds = %for.body47
  %48 = load i64, i64* %last_limit, align 8, !dbg !18416
  %49 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18418
  %var_part54 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %49, i32 0, i32 5, !dbg !18419
  %50 = load i32, i32* %i, align 4, !dbg !18420
  %idxprom55 = sext i32 %50 to i64, !dbg !18418
  %arrayidx56 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part54, i64 0, i64 %idxprom55, !dbg !18418
  %offset57 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx56, i32 0, i32 2, !dbg !18421
  %51 = load i64, i64* %offset57, align 8, !dbg !18421
  %cmp58 = icmp sgt i64 %48, %51, !dbg !18422
  br i1 %cmp58, label %if.then60, label %if.end61, !dbg !18423

if.then60:                                        ; preds = %if.else
  br label %for.inc458, !dbg !18424

if.end61:                                         ; preds = %if.else
  br label %if.end62

if.end62:                                         ; preds = %if.end61
  %52 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18425
  %var_part63 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %52, i32 0, i32 5, !dbg !18426
  %53 = load i32, i32* %i, align 4, !dbg !18427
  %idxprom64 = sext i32 %53 to i64, !dbg !18425
  %arrayidx65 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part63, i64 0, i64 %idxprom64, !dbg !18425
  %offset66 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx65, i32 0, i32 2, !dbg !18428
  %54 = load i64, i64* %offset66, align 8, !dbg !18428
  %55 = load i32, i32* %n_var_parts, align 4, !dbg !18429
  %idxprom67 = sext i32 %55 to i64, !dbg !18430
  %arrayidx68 = getelementptr inbounds [16 x i64], [16 x i64]* %offsets, i64 0, i64 %idxprom67, !dbg !18430
  store i64 %54, i64* %arrayidx68, align 8, !dbg !18431
  %56 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18432
  %var_part69 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %56, i32 0, i32 5, !dbg !18434
  %57 = load i32, i32* %i, align 4, !dbg !18435
  %idxprom70 = sext i32 %57 to i64, !dbg !18432
  %arrayidx71 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part69, i64 0, i64 %idxprom70, !dbg !18432
  %cur_loc72 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx71, i32 0, i32 1, !dbg !18436
  %58 = load %struct.rtx_def*, %struct.rtx_def** %cur_loc72, align 8, !dbg !18436
  %tobool73 = icmp ne %struct.rtx_def* %58, null, !dbg !18432
  br i1 %tobool73, label %if.end75, label %if.then74, !dbg !18437

if.then74:                                        ; preds = %if.end62
  store i8 0, i8* %complete, align 1, !dbg !18438
  br label %for.inc458, !dbg !18440

if.end75:                                         ; preds = %if.end62
  %59 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18441
  %var_part76 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %59, i32 0, i32 5, !dbg !18442
  %60 = load i32, i32* %i, align 4, !dbg !18443
  %idxprom77 = sext i32 %60 to i64, !dbg !18441
  %arrayidx78 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part76, i64 0, i64 %idxprom77, !dbg !18441
  %cur_loc79 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx78, i32 0, i32 1, !dbg !18444
  %61 = load %struct.rtx_def*, %struct.rtx_def** %cur_loc79, align 8, !dbg !18444
  %62 = load %struct.htab*, %struct.htab** %vars, align 8, !dbg !18445
  %call80 = call %struct.rtx_def* @vt_expand_loc(%struct.rtx_def* %61, %struct.htab* %62), !dbg !18446
  store %struct.rtx_def* %call80, %struct.rtx_def** %loc2, align 8, !dbg !18447
  %63 = load %struct.rtx_def*, %struct.rtx_def** %loc2, align 8, !dbg !18448
  %tobool81 = icmp ne %struct.rtx_def* %63, null, !dbg !18448
  br i1 %tobool81, label %if.end83, label %if.then82, !dbg !18450

if.then82:                                        ; preds = %if.end75
  store i8 0, i8* %complete, align 1, !dbg !18451
  br label %for.inc458, !dbg !18453

if.end83:                                         ; preds = %if.end75
  %64 = load %struct.rtx_def*, %struct.rtx_def** %loc2, align 8, !dbg !18454
  %65 = load i32, i32* %n_var_parts, align 4, !dbg !18455
  %idxprom84 = sext i32 %65 to i64, !dbg !18456
  %arrayidx85 = getelementptr inbounds [16 x %struct.rtx_def*], [16 x %struct.rtx_def*]* %loc, i64 0, i64 %idxprom84, !dbg !18456
  store %struct.rtx_def* %64, %struct.rtx_def** %arrayidx85, align 8, !dbg !18457
  %66 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18458
  %var_part86 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %66, i32 0, i32 5, !dbg !18458
  %67 = load i32, i32* %i, align 4, !dbg !18458
  %idxprom87 = sext i32 %67 to i64, !dbg !18458
  %arrayidx88 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part86, i64 0, i64 %idxprom87, !dbg !18458
  %cur_loc89 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx88, i32 0, i32 1, !dbg !18458
  %68 = load %struct.rtx_def*, %struct.rtx_def** %cur_loc89, align 8, !dbg !18458
  %69 = bitcast %struct.rtx_def* %68 to i32*, !dbg !18458
  %bf.load90 = load i32, i32* %69, align 8, !dbg !18458
  %bf.lshr = lshr i32 %bf.load90, 16, !dbg !18458
  %bf.clear91 = and i32 %bf.lshr, 255, !dbg !18458
  store i32 %bf.clear91, i32* %mode, align 4, !dbg !18459
  %70 = load i32, i32* %mode, align 4, !dbg !18460
  %cmp92 = icmp eq i32 %70, 0, !dbg !18462
  br i1 %cmp92, label %land.lhs.true94, label %if.end104, !dbg !18463

land.lhs.true94:                                  ; preds = %if.end83
  %71 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18464
  %dv95 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %71, i32 0, i32 0, !dbg !18465
  %72 = load i8*, i8** %dv95, align 8, !dbg !18465
  %call96 = call zeroext i8 @dv_onepart_p(i8* %72), !dbg !18466
  %conv97 = zext i8 %call96 to i32, !dbg !18466
  %tobool98 = icmp ne i32 %conv97, 0, !dbg !18466
  br i1 %tobool98, label %if.then99, label %if.end104, !dbg !18467

if.then99:                                        ; preds = %land.lhs.true94
  %73 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !18468
  %decl_common = bitcast %union.tree_node* %73 to %struct.tree_decl_common*, !dbg !18468
  %mode100 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %decl_common, i32 0, i32 2, !dbg !18468
  %74 = bitcast i40* %mode100 to i64*, !dbg !18468
  %bf.load101 = load i64, i64* %74, align 8, !dbg !18468
  %bf.clear102 = and i64 %bf.load101, 255, !dbg !18468
  %bf.cast103 = trunc i64 %bf.clear102 to i32, !dbg !18468
  store i32 %bf.cast103, i32* %mode, align 4, !dbg !18469
  br label %if.end104, !dbg !18470

if.end104:                                        ; preds = %if.then99, %land.lhs.true94, %if.end83
  %75 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18471
  %var_part105 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %75, i32 0, i32 5, !dbg !18473
  %76 = load i32, i32* %i, align 4, !dbg !18474
  %idxprom106 = sext i32 %76 to i64, !dbg !18471
  %arrayidx107 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part105, i64 0, i64 %idxprom106, !dbg !18471
  %loc_chain108 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx107, i32 0, i32 0, !dbg !18475
  %77 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain108, align 8, !dbg !18475
  store %struct.location_chain_def* %77, %struct.location_chain_def** %lc, align 8, !dbg !18476
  br label %for.cond109, !dbg !18477

for.cond109:                                      ; preds = %for.inc121, %if.end104
  %78 = load %struct.location_chain_def*, %struct.location_chain_def** %lc, align 8, !dbg !18478
  %tobool110 = icmp ne %struct.location_chain_def* %78, null, !dbg !18480
  br i1 %tobool110, label %for.body111, label %for.end122, !dbg !18480

for.body111:                                      ; preds = %for.cond109
  %79 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18481
  %var_part112 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %79, i32 0, i32 5, !dbg !18483
  %80 = load i32, i32* %i, align 4, !dbg !18484
  %idxprom113 = sext i32 %80 to i64, !dbg !18481
  %arrayidx114 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part112, i64 0, i64 %idxprom113, !dbg !18481
  %cur_loc115 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx114, i32 0, i32 1, !dbg !18485
  %81 = load %struct.rtx_def*, %struct.rtx_def** %cur_loc115, align 8, !dbg !18485
  %82 = load %struct.location_chain_def*, %struct.location_chain_def** %lc, align 8, !dbg !18486
  %loc116 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %82, i32 0, i32 1, !dbg !18487
  %83 = load %struct.rtx_def*, %struct.rtx_def** %loc116, align 8, !dbg !18487
  %cmp117 = icmp eq %struct.rtx_def* %81, %83, !dbg !18488
  br i1 %cmp117, label %if.then119, label %if.end120, !dbg !18489

if.then119:                                       ; preds = %for.body111
  %84 = load %struct.location_chain_def*, %struct.location_chain_def** %lc, align 8, !dbg !18490
  %init = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %84, i32 0, i32 3, !dbg !18492
  %85 = load i32, i32* %init, align 8, !dbg !18492
  store i32 %85, i32* %initialized, align 4, !dbg !18493
  br label %for.end122, !dbg !18494

if.end120:                                        ; preds = %for.body111
  br label %for.inc121, !dbg !18487

for.inc121:                                       ; preds = %if.end120
  %86 = load %struct.location_chain_def*, %struct.location_chain_def** %lc, align 8, !dbg !18495
  %next = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %86, i32 0, i32 0, !dbg !18496
  %87 = load %struct.location_chain_def*, %struct.location_chain_def** %next, align 8, !dbg !18496
  store %struct.location_chain_def* %87, %struct.location_chain_def** %lc, align 8, !dbg !18497
  br label %for.cond109, !dbg !18498, !llvm.loop !18499

for.end122:                                       ; preds = %if.then119, %for.cond109
  %88 = load %struct.location_chain_def*, %struct.location_chain_def** %lc, align 8, !dbg !18501
  %tobool123 = icmp ne %struct.location_chain_def* %88, null, !dbg !18501
  br i1 %tobool123, label %cond.false, label %cond.true, !dbg !18501

cond.true:                                        ; preds = %for.end122
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 7106, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !18501
  br label %cond.end, !dbg !18501

cond.false:                                       ; preds = %for.end122
  br label %cond.end, !dbg !18501

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !18501
  %89 = load i32, i32* %n_var_parts, align 4, !dbg !18502
  %idxprom124 = sext i32 %89 to i64, !dbg !18503
  %arrayidx125 = getelementptr inbounds [16 x i64], [16 x i64]* %offsets, i64 0, i64 %idxprom124, !dbg !18503
  %90 = load i64, i64* %arrayidx125, align 8, !dbg !18503
  %91 = load i32, i32* %mode, align 4, !dbg !18504
  %idxprom126 = zext i32 %91 to i64, !dbg !18504
  %arrayidx127 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom126, !dbg !18504
  %92 = load i8, i8* %arrayidx127, align 1, !dbg !18504
  %conv128 = zext i8 %92 to i16, !dbg !18504
  %conv129 = zext i16 %conv128 to i64, !dbg !18504
  %add = add nsw i64 %90, %conv129, !dbg !18505
  store i64 %add, i64* %last_limit, align 8, !dbg !18506
  %93 = load i32, i32* %mode, align 4, !dbg !18507
  %idxprom130 = zext i32 %93 to i64, !dbg !18507
  %arrayidx131 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_wider, i64 0, i64 %idxprom130, !dbg !18507
  %94 = load i8, i8* %arrayidx131, align 1, !dbg !18507
  %conv132 = zext i8 %94 to i32, !dbg !18507
  store i32 %conv132, i32* %wider_mode, align 4, !dbg !18508
  %95 = load i32, i32* %i, align 4, !dbg !18509
  %add133 = add nsw i32 %95, 1, !dbg !18511
  store i32 %add133, i32* %j, align 4, !dbg !18512
  br label %for.cond134, !dbg !18513

for.cond134:                                      ; preds = %for.inc148, %cond.end
  %96 = load i32, i32* %j, align 4, !dbg !18514
  %97 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18516
  %n_var_parts135 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %97, i32 0, i32 2, !dbg !18517
  %98 = load i8, i8* %n_var_parts135, align 4, !dbg !18517
  %conv136 = sext i8 %98 to i32, !dbg !18516
  %cmp137 = icmp slt i32 %96, %conv136, !dbg !18518
  br i1 %cmp137, label %for.body139, label %for.end150, !dbg !18519

for.body139:                                      ; preds = %for.cond134
  %99 = load i64, i64* %last_limit, align 8, !dbg !18520
  %100 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18522
  %var_part140 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %100, i32 0, i32 5, !dbg !18523
  %101 = load i32, i32* %j, align 4, !dbg !18524
  %idxprom141 = sext i32 %101 to i64, !dbg !18522
  %arrayidx142 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part140, i64 0, i64 %idxprom141, !dbg !18522
  %offset143 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx142, i32 0, i32 2, !dbg !18525
  %102 = load i64, i64* %offset143, align 8, !dbg !18525
  %cmp144 = icmp sle i64 %99, %102, !dbg !18526
  br i1 %cmp144, label %if.then146, label %if.end147, !dbg !18527

if.then146:                                       ; preds = %for.body139
  br label %for.end150, !dbg !18528

if.end147:                                        ; preds = %for.body139
  br label %for.inc148, !dbg !18525

for.inc148:                                       ; preds = %if.end147
  %103 = load i32, i32* %j, align 4, !dbg !18529
  %inc149 = add nsw i32 %103, 1, !dbg !18529
  store i32 %inc149, i32* %j, align 4, !dbg !18529
  br label %for.cond134, !dbg !18530, !llvm.loop !18531

for.end150:                                       ; preds = %if.then146, %for.cond134
  %104 = load i32, i32* %j, align 4, !dbg !18533
  %105 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18535
  %n_var_parts151 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %105, i32 0, i32 2, !dbg !18536
  %106 = load i8, i8* %n_var_parts151, align 4, !dbg !18536
  %conv152 = sext i8 %106 to i32, !dbg !18535
  %cmp153 = icmp slt i32 %104, %conv152, !dbg !18537
  br i1 %cmp153, label %land.lhs.true155, label %if.end456, !dbg !18538

land.lhs.true155:                                 ; preds = %for.end150
  %107 = load i32, i32* %wider_mode, align 4, !dbg !18539
  %cmp156 = icmp ne i32 %107, 0, !dbg !18540
  br i1 %cmp156, label %land.lhs.true158, label %if.end456, !dbg !18541

land.lhs.true158:                                 ; preds = %land.lhs.true155
  %108 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18542
  %var_part159 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %108, i32 0, i32 5, !dbg !18543
  %109 = load i32, i32* %j, align 4, !dbg !18544
  %idxprom160 = sext i32 %109 to i64, !dbg !18542
  %arrayidx161 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part159, i64 0, i64 %idxprom160, !dbg !18542
  %cur_loc162 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx161, i32 0, i32 1, !dbg !18545
  %110 = load %struct.rtx_def*, %struct.rtx_def** %cur_loc162, align 8, !dbg !18545
  %tobool163 = icmp ne %struct.rtx_def* %110, null, !dbg !18542
  br i1 %tobool163, label %land.lhs.true164, label %if.end456, !dbg !18546

land.lhs.true164:                                 ; preds = %land.lhs.true158
  %111 = load i32, i32* %mode, align 4, !dbg !18547
  %112 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18548
  %var_part165 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %112, i32 0, i32 5, !dbg !18548
  %113 = load i32, i32* %j, align 4, !dbg !18548
  %idxprom166 = sext i32 %113 to i64, !dbg !18548
  %arrayidx167 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part165, i64 0, i64 %idxprom166, !dbg !18548
  %cur_loc168 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx167, i32 0, i32 1, !dbg !18548
  %114 = load %struct.rtx_def*, %struct.rtx_def** %cur_loc168, align 8, !dbg !18548
  %115 = bitcast %struct.rtx_def* %114 to i32*, !dbg !18548
  %bf.load169 = load i32, i32* %115, align 8, !dbg !18548
  %bf.lshr170 = lshr i32 %bf.load169, 16, !dbg !18548
  %bf.clear171 = and i32 %bf.lshr170, 255, !dbg !18548
  %cmp172 = icmp eq i32 %111, %bf.clear171, !dbg !18549
  br i1 %cmp172, label %land.lhs.true174, label %if.end456, !dbg !18550

land.lhs.true174:                                 ; preds = %land.lhs.true164
  %116 = load i32, i32* %n_var_parts, align 4, !dbg !18551
  %idxprom175 = sext i32 %116 to i64, !dbg !18551
  %arrayidx176 = getelementptr inbounds [16 x %struct.rtx_def*], [16 x %struct.rtx_def*]* %loc, i64 0, i64 %idxprom175, !dbg !18551
  %117 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx176, align 8, !dbg !18551
  %118 = bitcast %struct.rtx_def* %117 to i32*, !dbg !18551
  %bf.load177 = load i32, i32* %118, align 8, !dbg !18551
  %bf.clear178 = and i32 %bf.load177, 65535, !dbg !18551
  %cmp179 = icmp eq i32 %bf.clear178, 37, !dbg !18551
  br i1 %cmp179, label %land.lhs.true187, label %lor.lhs.false, !dbg !18552

lor.lhs.false:                                    ; preds = %land.lhs.true174
  %119 = load i32, i32* %n_var_parts, align 4, !dbg !18553
  %idxprom181 = sext i32 %119 to i64, !dbg !18553
  %arrayidx182 = getelementptr inbounds [16 x %struct.rtx_def*], [16 x %struct.rtx_def*]* %loc, i64 0, i64 %idxprom181, !dbg !18553
  %120 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx182, align 8, !dbg !18553
  %121 = bitcast %struct.rtx_def* %120 to i32*, !dbg !18553
  %bf.load183 = load i32, i32* %121, align 8, !dbg !18553
  %bf.clear184 = and i32 %bf.load183, 65535, !dbg !18553
  %cmp185 = icmp eq i32 %bf.clear184, 43, !dbg !18553
  br i1 %cmp185, label %land.lhs.true187, label %if.end456, !dbg !18554

land.lhs.true187:                                 ; preds = %lor.lhs.false, %land.lhs.true174
  %122 = load i64, i64* %last_limit, align 8, !dbg !18555
  %123 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18556
  %var_part188 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %123, i32 0, i32 5, !dbg !18557
  %124 = load i32, i32* %j, align 4, !dbg !18558
  %idxprom189 = sext i32 %124 to i64, !dbg !18556
  %arrayidx190 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part188, i64 0, i64 %idxprom189, !dbg !18556
  %offset191 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx190, i32 0, i32 2, !dbg !18559
  %125 = load i64, i64* %offset191, align 8, !dbg !18559
  %cmp192 = icmp eq i64 %122, %125, !dbg !18560
  br i1 %cmp192, label %land.lhs.true194, label %if.end456, !dbg !18561

land.lhs.true194:                                 ; preds = %land.lhs.true187
  %126 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18562
  %var_part195 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %126, i32 0, i32 5, !dbg !18563
  %127 = load i32, i32* %j, align 4, !dbg !18564
  %idxprom196 = sext i32 %127 to i64, !dbg !18562
  %arrayidx197 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part195, i64 0, i64 %idxprom196, !dbg !18562
  %cur_loc198 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx197, i32 0, i32 1, !dbg !18565
  %128 = load %struct.rtx_def*, %struct.rtx_def** %cur_loc198, align 8, !dbg !18565
  %129 = load %struct.htab*, %struct.htab** %vars, align 8, !dbg !18566
  %call199 = call %struct.rtx_def* @vt_expand_loc(%struct.rtx_def* %128, %struct.htab* %129), !dbg !18567
  store %struct.rtx_def* %call199, %struct.rtx_def** %loc2, align 8, !dbg !18568
  %tobool200 = icmp ne %struct.rtx_def* %call199, null, !dbg !18568
  br i1 %tobool200, label %land.lhs.true201, label %if.end456, !dbg !18569

land.lhs.true201:                                 ; preds = %land.lhs.true194
  %130 = load i32, i32* %n_var_parts, align 4, !dbg !18570
  %idxprom202 = sext i32 %130 to i64, !dbg !18570
  %arrayidx203 = getelementptr inbounds [16 x %struct.rtx_def*], [16 x %struct.rtx_def*]* %loc, i64 0, i64 %idxprom202, !dbg !18570
  %131 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx203, align 8, !dbg !18570
  %132 = bitcast %struct.rtx_def* %131 to i32*, !dbg !18570
  %bf.load204 = load i32, i32* %132, align 8, !dbg !18570
  %bf.clear205 = and i32 %bf.load204, 65535, !dbg !18570
  %133 = load %struct.rtx_def*, %struct.rtx_def** %loc2, align 8, !dbg !18571
  %134 = bitcast %struct.rtx_def* %133 to i32*, !dbg !18571
  %bf.load206 = load i32, i32* %134, align 8, !dbg !18571
  %bf.clear207 = and i32 %bf.load206, 65535, !dbg !18571
  %cmp208 = icmp eq i32 %bf.clear205, %bf.clear207, !dbg !18572
  br i1 %cmp208, label %if.then210, label %if.end456, !dbg !18573

if.then210:                                       ; preds = %land.lhs.true201
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %new_loc, metadata !18574, metadata !DIExpression()), !dbg !18576
  store %struct.rtx_def* null, %struct.rtx_def** %new_loc, align 8, !dbg !18576
  %135 = load i32, i32* %n_var_parts, align 4, !dbg !18577
  %idxprom211 = sext i32 %135 to i64, !dbg !18577
  %arrayidx212 = getelementptr inbounds [16 x %struct.rtx_def*], [16 x %struct.rtx_def*]* %loc, i64 0, i64 %idxprom211, !dbg !18577
  %136 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx212, align 8, !dbg !18577
  %137 = bitcast %struct.rtx_def* %136 to i32*, !dbg !18577
  %bf.load213 = load i32, i32* %137, align 8, !dbg !18577
  %bf.clear214 = and i32 %bf.load213, 65535, !dbg !18577
  %cmp215 = icmp eq i32 %bf.clear214, 37, !dbg !18577
  br i1 %cmp215, label %land.lhs.true217, label %if.else272, !dbg !18579

land.lhs.true217:                                 ; preds = %if.then210
  %138 = load i32, i32* %n_var_parts, align 4, !dbg !18580
  %idxprom218 = sext i32 %138 to i64, !dbg !18580
  %arrayidx219 = getelementptr inbounds [16 x %struct.rtx_def*], [16 x %struct.rtx_def*]* %loc, i64 0, i64 %idxprom218, !dbg !18580
  %139 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx219, align 8, !dbg !18580
  %call220 = call i32 @rhs_regno(%struct.rtx_def* %139), !dbg !18580
  %idxprom221 = zext i32 %call220 to i64, !dbg !18581
  %arrayidx222 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom221, !dbg !18581
  %140 = load i32, i32* %mode, align 4, !dbg !18582
  %idxprom223 = zext i32 %140 to i64, !dbg !18581
  %arrayidx224 = getelementptr inbounds [87 x i8], [87 x i8]* %arrayidx222, i64 0, i64 %idxprom223, !dbg !18581
  %141 = load i8, i8* %arrayidx224, align 1, !dbg !18581
  %conv225 = zext i8 %141 to i32, !dbg !18581
  %mul = mul nsw i32 %conv225, 2, !dbg !18583
  %142 = load i32, i32* %n_var_parts, align 4, !dbg !18584
  %idxprom226 = sext i32 %142 to i64, !dbg !18584
  %arrayidx227 = getelementptr inbounds [16 x %struct.rtx_def*], [16 x %struct.rtx_def*]* %loc, i64 0, i64 %idxprom226, !dbg !18584
  %143 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx227, align 8, !dbg !18584
  %call228 = call i32 @rhs_regno(%struct.rtx_def* %143), !dbg !18584
  %idxprom229 = zext i32 %call228 to i64, !dbg !18585
  %arrayidx230 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom229, !dbg !18585
  %144 = load i32, i32* %wider_mode, align 4, !dbg !18586
  %idxprom231 = zext i32 %144 to i64, !dbg !18585
  %arrayidx232 = getelementptr inbounds [87 x i8], [87 x i8]* %arrayidx230, i64 0, i64 %idxprom231, !dbg !18585
  %145 = load i8, i8* %arrayidx232, align 1, !dbg !18585
  %conv233 = zext i8 %145 to i32, !dbg !18585
  %cmp234 = icmp eq i32 %mul, %conv233, !dbg !18587
  br i1 %cmp234, label %land.lhs.true236, label %if.else272, !dbg !18588

land.lhs.true236:                                 ; preds = %land.lhs.true217
  %146 = load i32, i32* %mode, align 4, !dbg !18589
  %147 = load i32, i32* %n_var_parts, align 4, !dbg !18590
  %idxprom237 = sext i32 %147 to i64, !dbg !18590
  %arrayidx238 = getelementptr inbounds [16 x %struct.rtx_def*], [16 x %struct.rtx_def*]* %loc, i64 0, i64 %idxprom237, !dbg !18590
  %148 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx238, align 8, !dbg !18590
  %call239 = call i32 @rhs_regno(%struct.rtx_def* %148), !dbg !18590
  %call240 = call i32 @end_hard_regno(i32 %146, i32 %call239), !dbg !18591
  %149 = load %struct.rtx_def*, %struct.rtx_def** %loc2, align 8, !dbg !18592
  %call241 = call i32 @rhs_regno(%struct.rtx_def* %149), !dbg !18592
  %cmp242 = icmp eq i32 %call240, %call241, !dbg !18593
  br i1 %cmp242, label %if.then244, label %if.else272, !dbg !18594

if.then244:                                       ; preds = %land.lhs.true236
  %150 = load i32, i32* %wider_mode, align 4, !dbg !18595
  %151 = load i32, i32* %n_var_parts, align 4, !dbg !18598
  %idxprom245 = sext i32 %151 to i64, !dbg !18599
  %arrayidx246 = getelementptr inbounds [16 x %struct.rtx_def*], [16 x %struct.rtx_def*]* %loc, i64 0, i64 %idxprom245, !dbg !18599
  %152 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx246, align 8, !dbg !18599
  %153 = load i32, i32* %mode, align 4, !dbg !18600
  %call247 = call %struct.rtx_def* @simplify_subreg(i32 %150, %struct.rtx_def* %152, i32 %153, i32 0), !dbg !18601
  store %struct.rtx_def* %call247, %struct.rtx_def** %new_loc, align 8, !dbg !18602
  %154 = load %struct.rtx_def*, %struct.rtx_def** %new_loc, align 8, !dbg !18603
  %tobool248 = icmp ne %struct.rtx_def* %154, null, !dbg !18603
  br i1 %tobool248, label %if.then249, label %if.end271, !dbg !18605

if.then249:                                       ; preds = %if.then244
  %155 = load %struct.rtx_def*, %struct.rtx_def** %new_loc, align 8, !dbg !18606
  %156 = bitcast %struct.rtx_def* %155 to i32*, !dbg !18606
  %bf.load250 = load i32, i32* %156, align 8, !dbg !18606
  %bf.clear251 = and i32 %bf.load250, 65535, !dbg !18606
  %cmp252 = icmp eq i32 %bf.clear251, 37, !dbg !18606
  br i1 %cmp252, label %lor.lhs.false254, label %if.then261, !dbg !18609

lor.lhs.false254:                                 ; preds = %if.then249
  %157 = load %struct.rtx_def*, %struct.rtx_def** %new_loc, align 8, !dbg !18610
  %call255 = call i32 @rhs_regno(%struct.rtx_def* %157), !dbg !18610
  %158 = load i32, i32* %n_var_parts, align 4, !dbg !18611
  %idxprom256 = sext i32 %158 to i64, !dbg !18611
  %arrayidx257 = getelementptr inbounds [16 x %struct.rtx_def*], [16 x %struct.rtx_def*]* %loc, i64 0, i64 %idxprom256, !dbg !18611
  %159 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx257, align 8, !dbg !18611
  %call258 = call i32 @rhs_regno(%struct.rtx_def* %159), !dbg !18611
  %cmp259 = icmp ne i32 %call255, %call258, !dbg !18612
  br i1 %cmp259, label %if.then261, label %if.else262, !dbg !18613

if.then261:                                       ; preds = %lor.lhs.false254, %if.then249
  store %struct.rtx_def* null, %struct.rtx_def** %new_loc, align 8, !dbg !18614
  br label %if.end270, !dbg !18615

if.else262:                                       ; preds = %lor.lhs.false254
  %160 = load i32, i32* %n_var_parts, align 4, !dbg !18616
  %idxprom263 = sext i32 %160 to i64, !dbg !18616
  %arrayidx264 = getelementptr inbounds [16 x %struct.rtx_def*], [16 x %struct.rtx_def*]* %loc, i64 0, i64 %idxprom263, !dbg !18616
  %161 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx264, align 8, !dbg !18616
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %161, i32 0, i32 1, !dbg !18616
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !18616
  %arrayidx265 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 2, !dbg !18616
  %rt_reg = bitcast %union.rtunion_def* %arrayidx265 to %struct.reg_attrs**, !dbg !18616
  %162 = load %struct.reg_attrs*, %struct.reg_attrs** %rt_reg, align 8, !dbg !18616
  %163 = load %struct.rtx_def*, %struct.rtx_def** %new_loc, align 8, !dbg !18617
  %u266 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %163, i32 0, i32 1, !dbg !18617
  %fld267 = bitcast %union.u* %u266 to [1 x %union.rtunion_def]*, !dbg !18617
  %arrayidx268 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld267, i64 0, i64 2, !dbg !18617
  %rt_reg269 = bitcast %union.rtunion_def* %arrayidx268 to %struct.reg_attrs**, !dbg !18617
  store %struct.reg_attrs* %162, %struct.reg_attrs** %rt_reg269, align 8, !dbg !18618
  br label %if.end270

if.end270:                                        ; preds = %if.else262, %if.then261
  br label %if.end271, !dbg !18619

if.end271:                                        ; preds = %if.end270, %if.then244
  br label %if.end443, !dbg !18620

if.else272:                                       ; preds = %land.lhs.true236, %land.lhs.true217, %if.then210
  %164 = load i32, i32* %n_var_parts, align 4, !dbg !18621
  %idxprom273 = sext i32 %164 to i64, !dbg !18621
  %arrayidx274 = getelementptr inbounds [16 x %struct.rtx_def*], [16 x %struct.rtx_def*]* %loc, i64 0, i64 %idxprom273, !dbg !18621
  %165 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx274, align 8, !dbg !18621
  %166 = bitcast %struct.rtx_def* %165 to i32*, !dbg !18621
  %bf.load275 = load i32, i32* %166, align 8, !dbg !18621
  %bf.clear276 = and i32 %bf.load275, 65535, !dbg !18621
  %cmp277 = icmp eq i32 %bf.clear276, 43, !dbg !18621
  br i1 %cmp277, label %land.lhs.true279, label %if.end442, !dbg !18623

land.lhs.true279:                                 ; preds = %if.else272
  %167 = load %struct.rtx_def*, %struct.rtx_def** %loc2, align 8, !dbg !18624
  %u280 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %167, i32 0, i32 1, !dbg !18624
  %fld281 = bitcast %union.u* %u280 to [1 x %union.rtunion_def]*, !dbg !18624
  %arrayidx282 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld281, i64 0, i64 0, !dbg !18624
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx282 to %struct.rtx_def**, !dbg !18624
  %168 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !18624
  %169 = bitcast %struct.rtx_def* %168 to i32*, !dbg !18624
  %bf.load283 = load i32, i32* %169, align 8, !dbg !18624
  %bf.clear284 = and i32 %bf.load283, 65535, !dbg !18624
  %cmp285 = icmp eq i32 %bf.clear284, 49, !dbg !18625
  br i1 %cmp285, label %land.lhs.true287, label %if.end442, !dbg !18626

land.lhs.true287:                                 ; preds = %land.lhs.true279
  %170 = load %struct.rtx_def*, %struct.rtx_def** %loc2, align 8, !dbg !18627
  %u288 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %170, i32 0, i32 1, !dbg !18627
  %fld289 = bitcast %union.u* %u288 to [1 x %union.rtunion_def]*, !dbg !18627
  %arrayidx290 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld289, i64 0, i64 0, !dbg !18627
  %rt_rtx291 = bitcast %union.rtunion_def* %arrayidx290 to %struct.rtx_def**, !dbg !18627
  %171 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx291, align 8, !dbg !18627
  %u292 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %171, i32 0, i32 1, !dbg !18627
  %fld293 = bitcast %union.u* %u292 to [1 x %union.rtunion_def]*, !dbg !18627
  %arrayidx294 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld293, i64 0, i64 0, !dbg !18627
  %rt_rtx295 = bitcast %union.rtunion_def* %arrayidx294 to %struct.rtx_def**, !dbg !18627
  %172 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx295, align 8, !dbg !18627
  %173 = bitcast %struct.rtx_def* %172 to i32*, !dbg !18627
  %bf.load296 = load i32, i32* %173, align 8, !dbg !18627
  %bf.clear297 = and i32 %bf.load296, 65535, !dbg !18627
  %cmp298 = icmp eq i32 %bf.clear297, 37, !dbg !18627
  br i1 %cmp298, label %land.lhs.true300, label %if.end442, !dbg !18628

land.lhs.true300:                                 ; preds = %land.lhs.true287
  %174 = load %struct.rtx_def*, %struct.rtx_def** %loc2, align 8, !dbg !18629
  %u301 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %174, i32 0, i32 1, !dbg !18629
  %fld302 = bitcast %union.u* %u301 to [1 x %union.rtunion_def]*, !dbg !18629
  %arrayidx303 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld302, i64 0, i64 0, !dbg !18629
  %rt_rtx304 = bitcast %union.rtunion_def* %arrayidx303 to %struct.rtx_def**, !dbg !18629
  %175 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx304, align 8, !dbg !18629
  %u305 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %175, i32 0, i32 1, !dbg !18629
  %fld306 = bitcast %union.u* %u305 to [1 x %union.rtunion_def]*, !dbg !18629
  %arrayidx307 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld306, i64 0, i64 1, !dbg !18629
  %rt_rtx308 = bitcast %union.rtunion_def* %arrayidx307 to %struct.rtx_def**, !dbg !18629
  %176 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx308, align 8, !dbg !18629
  %177 = bitcast %struct.rtx_def* %176 to i32*, !dbg !18629
  %bf.load309 = load i32, i32* %177, align 8, !dbg !18629
  %bf.clear310 = and i32 %bf.load309, 65535, !dbg !18629
  %cmp311 = icmp eq i32 %bf.clear310, 30, !dbg !18629
  br i1 %cmp311, label %if.then313, label %if.end442, !dbg !18630

if.then313:                                       ; preds = %land.lhs.true300
  %178 = load i32, i32* %n_var_parts, align 4, !dbg !18631
  %idxprom314 = sext i32 %178 to i64, !dbg !18631
  %arrayidx315 = getelementptr inbounds [16 x %struct.rtx_def*], [16 x %struct.rtx_def*]* %loc, i64 0, i64 %idxprom314, !dbg !18631
  %179 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx315, align 8, !dbg !18631
  %u316 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %179, i32 0, i32 1, !dbg !18631
  %fld317 = bitcast %union.u* %u316 to [1 x %union.rtunion_def]*, !dbg !18631
  %arrayidx318 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld317, i64 0, i64 0, !dbg !18631
  %rt_rtx319 = bitcast %union.rtunion_def* %arrayidx318 to %struct.rtx_def**, !dbg !18631
  %180 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx319, align 8, !dbg !18631
  %181 = bitcast %struct.rtx_def* %180 to i32*, !dbg !18631
  %bf.load320 = load i32, i32* %181, align 8, !dbg !18631
  %bf.clear321 = and i32 %bf.load320, 65535, !dbg !18631
  %cmp322 = icmp eq i32 %bf.clear321, 37, !dbg !18631
  br i1 %cmp322, label %land.lhs.true324, label %lor.lhs.false358, !dbg !18634

land.lhs.true324:                                 ; preds = %if.then313
  %182 = load i32, i32* %n_var_parts, align 4, !dbg !18635
  %idxprom325 = sext i32 %182 to i64, !dbg !18635
  %arrayidx326 = getelementptr inbounds [16 x %struct.rtx_def*], [16 x %struct.rtx_def*]* %loc, i64 0, i64 %idxprom325, !dbg !18635
  %183 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx326, align 8, !dbg !18635
  %u327 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %183, i32 0, i32 1, !dbg !18635
  %fld328 = bitcast %union.u* %u327 to [1 x %union.rtunion_def]*, !dbg !18635
  %arrayidx329 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld328, i64 0, i64 0, !dbg !18635
  %rt_rtx330 = bitcast %union.rtunion_def* %arrayidx329 to %struct.rtx_def**, !dbg !18635
  %184 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx330, align 8, !dbg !18635
  %185 = load %struct.rtx_def*, %struct.rtx_def** %loc2, align 8, !dbg !18636
  %u331 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %185, i32 0, i32 1, !dbg !18636
  %fld332 = bitcast %union.u* %u331 to [1 x %union.rtunion_def]*, !dbg !18636
  %arrayidx333 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld332, i64 0, i64 0, !dbg !18636
  %rt_rtx334 = bitcast %union.rtunion_def* %arrayidx333 to %struct.rtx_def**, !dbg !18636
  %186 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx334, align 8, !dbg !18636
  %u335 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %186, i32 0, i32 1, !dbg !18636
  %fld336 = bitcast %union.u* %u335 to [1 x %union.rtunion_def]*, !dbg !18636
  %arrayidx337 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld336, i64 0, i64 0, !dbg !18636
  %rt_rtx338 = bitcast %union.rtunion_def* %arrayidx337 to %struct.rtx_def**, !dbg !18636
  %187 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx338, align 8, !dbg !18636
  %call339 = call i32 @rtx_equal_p(%struct.rtx_def* %184, %struct.rtx_def* %187), !dbg !18637
  %tobool340 = icmp ne i32 %call339, 0, !dbg !18637
  br i1 %tobool340, label %land.lhs.true341, label %lor.lhs.false358, !dbg !18638

land.lhs.true341:                                 ; preds = %land.lhs.true324
  %188 = load %struct.rtx_def*, %struct.rtx_def** %loc2, align 8, !dbg !18639
  %u342 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %188, i32 0, i32 1, !dbg !18639
  %fld343 = bitcast %union.u* %u342 to [1 x %union.rtunion_def]*, !dbg !18639
  %arrayidx344 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld343, i64 0, i64 0, !dbg !18639
  %rt_rtx345 = bitcast %union.rtunion_def* %arrayidx344 to %struct.rtx_def**, !dbg !18639
  %189 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx345, align 8, !dbg !18639
  %u346 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %189, i32 0, i32 1, !dbg !18639
  %fld347 = bitcast %union.u* %u346 to [1 x %union.rtunion_def]*, !dbg !18639
  %arrayidx348 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld347, i64 0, i64 1, !dbg !18639
  %rt_rtx349 = bitcast %union.rtunion_def* %arrayidx348 to %struct.rtx_def**, !dbg !18639
  %190 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx349, align 8, !dbg !18639
  %u350 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %190, i32 0, i32 1, !dbg !18639
  %hwint = bitcast %union.u* %u350 to [1 x i64]*, !dbg !18639
  %arrayidx351 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 0, !dbg !18639
  %191 = load i64, i64* %arrayidx351, align 8, !dbg !18639
  %192 = load i32, i32* %mode, align 4, !dbg !18640
  %idxprom352 = zext i32 %192 to i64, !dbg !18640
  %arrayidx353 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom352, !dbg !18640
  %193 = load i8, i8* %arrayidx353, align 1, !dbg !18640
  %conv354 = zext i8 %193 to i16, !dbg !18640
  %conv355 = zext i16 %conv354 to i64, !dbg !18640
  %cmp356 = icmp eq i64 %191, %conv355, !dbg !18641
  br i1 %cmp356, label %if.then437, label %lor.lhs.false358, !dbg !18642

lor.lhs.false358:                                 ; preds = %land.lhs.true341, %land.lhs.true324, %if.then313
  %194 = load i32, i32* %n_var_parts, align 4, !dbg !18643
  %idxprom359 = sext i32 %194 to i64, !dbg !18643
  %arrayidx360 = getelementptr inbounds [16 x %struct.rtx_def*], [16 x %struct.rtx_def*]* %loc, i64 0, i64 %idxprom359, !dbg !18643
  %195 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx360, align 8, !dbg !18643
  %u361 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %195, i32 0, i32 1, !dbg !18643
  %fld362 = bitcast %union.u* %u361 to [1 x %union.rtunion_def]*, !dbg !18643
  %arrayidx363 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld362, i64 0, i64 0, !dbg !18643
  %rt_rtx364 = bitcast %union.rtunion_def* %arrayidx363 to %struct.rtx_def**, !dbg !18643
  %196 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx364, align 8, !dbg !18643
  %197 = bitcast %struct.rtx_def* %196 to i32*, !dbg !18643
  %bf.load365 = load i32, i32* %197, align 8, !dbg !18643
  %bf.clear366 = and i32 %bf.load365, 65535, !dbg !18643
  %cmp367 = icmp eq i32 %bf.clear366, 49, !dbg !18644
  br i1 %cmp367, label %land.lhs.true369, label %if.end441, !dbg !18645

land.lhs.true369:                                 ; preds = %lor.lhs.false358
  %198 = load i32, i32* %n_var_parts, align 4, !dbg !18646
  %idxprom370 = sext i32 %198 to i64, !dbg !18646
  %arrayidx371 = getelementptr inbounds [16 x %struct.rtx_def*], [16 x %struct.rtx_def*]* %loc, i64 0, i64 %idxprom370, !dbg !18646
  %199 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx371, align 8, !dbg !18646
  %u372 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %199, i32 0, i32 1, !dbg !18646
  %fld373 = bitcast %union.u* %u372 to [1 x %union.rtunion_def]*, !dbg !18646
  %arrayidx374 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld373, i64 0, i64 0, !dbg !18646
  %rt_rtx375 = bitcast %union.rtunion_def* %arrayidx374 to %struct.rtx_def**, !dbg !18646
  %200 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx375, align 8, !dbg !18646
  %u376 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %200, i32 0, i32 1, !dbg !18646
  %fld377 = bitcast %union.u* %u376 to [1 x %union.rtunion_def]*, !dbg !18646
  %arrayidx378 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld377, i64 0, i64 1, !dbg !18646
  %rt_rtx379 = bitcast %union.rtunion_def* %arrayidx378 to %struct.rtx_def**, !dbg !18646
  %201 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx379, align 8, !dbg !18646
  %202 = bitcast %struct.rtx_def* %201 to i32*, !dbg !18646
  %bf.load380 = load i32, i32* %202, align 8, !dbg !18646
  %bf.clear381 = and i32 %bf.load380, 65535, !dbg !18646
  %cmp382 = icmp eq i32 %bf.clear381, 30, !dbg !18646
  br i1 %cmp382, label %land.lhs.true384, label %if.end441, !dbg !18647

land.lhs.true384:                                 ; preds = %land.lhs.true369
  %203 = load i32, i32* %n_var_parts, align 4, !dbg !18648
  %idxprom385 = sext i32 %203 to i64, !dbg !18648
  %arrayidx386 = getelementptr inbounds [16 x %struct.rtx_def*], [16 x %struct.rtx_def*]* %loc, i64 0, i64 %idxprom385, !dbg !18648
  %204 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx386, align 8, !dbg !18648
  %u387 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %204, i32 0, i32 1, !dbg !18648
  %fld388 = bitcast %union.u* %u387 to [1 x %union.rtunion_def]*, !dbg !18648
  %arrayidx389 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld388, i64 0, i64 0, !dbg !18648
  %rt_rtx390 = bitcast %union.rtunion_def* %arrayidx389 to %struct.rtx_def**, !dbg !18648
  %205 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx390, align 8, !dbg !18648
  %u391 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %205, i32 0, i32 1, !dbg !18648
  %fld392 = bitcast %union.u* %u391 to [1 x %union.rtunion_def]*, !dbg !18648
  %arrayidx393 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld392, i64 0, i64 0, !dbg !18648
  %rt_rtx394 = bitcast %union.rtunion_def* %arrayidx393 to %struct.rtx_def**, !dbg !18648
  %206 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx394, align 8, !dbg !18648
  %207 = load %struct.rtx_def*, %struct.rtx_def** %loc2, align 8, !dbg !18649
  %u395 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %207, i32 0, i32 1, !dbg !18649
  %fld396 = bitcast %union.u* %u395 to [1 x %union.rtunion_def]*, !dbg !18649
  %arrayidx397 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld396, i64 0, i64 0, !dbg !18649
  %rt_rtx398 = bitcast %union.rtunion_def* %arrayidx397 to %struct.rtx_def**, !dbg !18649
  %208 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx398, align 8, !dbg !18649
  %u399 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %208, i32 0, i32 1, !dbg !18649
  %fld400 = bitcast %union.u* %u399 to [1 x %union.rtunion_def]*, !dbg !18649
  %arrayidx401 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld400, i64 0, i64 0, !dbg !18649
  %rt_rtx402 = bitcast %union.rtunion_def* %arrayidx401 to %struct.rtx_def**, !dbg !18649
  %209 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx402, align 8, !dbg !18649
  %call403 = call i32 @rtx_equal_p(%struct.rtx_def* %206, %struct.rtx_def* %209), !dbg !18650
  %tobool404 = icmp ne i32 %call403, 0, !dbg !18650
  br i1 %tobool404, label %land.lhs.true405, label %if.end441, !dbg !18651

land.lhs.true405:                                 ; preds = %land.lhs.true384
  %210 = load i32, i32* %n_var_parts, align 4, !dbg !18652
  %idxprom406 = sext i32 %210 to i64, !dbg !18652
  %arrayidx407 = getelementptr inbounds [16 x %struct.rtx_def*], [16 x %struct.rtx_def*]* %loc, i64 0, i64 %idxprom406, !dbg !18652
  %211 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx407, align 8, !dbg !18652
  %u408 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %211, i32 0, i32 1, !dbg !18652
  %fld409 = bitcast %union.u* %u408 to [1 x %union.rtunion_def]*, !dbg !18652
  %arrayidx410 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld409, i64 0, i64 0, !dbg !18652
  %rt_rtx411 = bitcast %union.rtunion_def* %arrayidx410 to %struct.rtx_def**, !dbg !18652
  %212 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx411, align 8, !dbg !18652
  %u412 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %212, i32 0, i32 1, !dbg !18652
  %fld413 = bitcast %union.u* %u412 to [1 x %union.rtunion_def]*, !dbg !18652
  %arrayidx414 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld413, i64 0, i64 1, !dbg !18652
  %rt_rtx415 = bitcast %union.rtunion_def* %arrayidx414 to %struct.rtx_def**, !dbg !18652
  %213 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx415, align 8, !dbg !18652
  %u416 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %213, i32 0, i32 1, !dbg !18652
  %hwint417 = bitcast %union.u* %u416 to [1 x i64]*, !dbg !18652
  %arrayidx418 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint417, i64 0, i64 0, !dbg !18652
  %214 = load i64, i64* %arrayidx418, align 8, !dbg !18652
  %215 = load i32, i32* %mode, align 4, !dbg !18653
  %idxprom419 = zext i32 %215 to i64, !dbg !18653
  %arrayidx420 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom419, !dbg !18653
  %216 = load i8, i8* %arrayidx420, align 1, !dbg !18653
  %conv421 = zext i8 %216 to i16, !dbg !18653
  %conv422 = zext i16 %conv421 to i64, !dbg !18653
  %add423 = add nsw i64 %214, %conv422, !dbg !18654
  %217 = load %struct.rtx_def*, %struct.rtx_def** %loc2, align 8, !dbg !18655
  %u424 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %217, i32 0, i32 1, !dbg !18655
  %fld425 = bitcast %union.u* %u424 to [1 x %union.rtunion_def]*, !dbg !18655
  %arrayidx426 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld425, i64 0, i64 0, !dbg !18655
  %rt_rtx427 = bitcast %union.rtunion_def* %arrayidx426 to %struct.rtx_def**, !dbg !18655
  %218 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx427, align 8, !dbg !18655
  %u428 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %218, i32 0, i32 1, !dbg !18655
  %fld429 = bitcast %union.u* %u428 to [1 x %union.rtunion_def]*, !dbg !18655
  %arrayidx430 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld429, i64 0, i64 1, !dbg !18655
  %rt_rtx431 = bitcast %union.rtunion_def* %arrayidx430 to %struct.rtx_def**, !dbg !18655
  %219 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx431, align 8, !dbg !18655
  %u432 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %219, i32 0, i32 1, !dbg !18655
  %hwint433 = bitcast %union.u* %u432 to [1 x i64]*, !dbg !18655
  %arrayidx434 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint433, i64 0, i64 0, !dbg !18655
  %220 = load i64, i64* %arrayidx434, align 8, !dbg !18655
  %cmp435 = icmp eq i64 %add423, %220, !dbg !18656
  br i1 %cmp435, label %if.then437, label %if.end441, !dbg !18657

if.then437:                                       ; preds = %land.lhs.true405, %land.lhs.true341
  %221 = load i32, i32* %n_var_parts, align 4, !dbg !18658
  %idxprom438 = sext i32 %221 to i64, !dbg !18658
  %arrayidx439 = getelementptr inbounds [16 x %struct.rtx_def*], [16 x %struct.rtx_def*]* %loc, i64 0, i64 %idxprom438, !dbg !18658
  %222 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx439, align 8, !dbg !18658
  %223 = load i32, i32* %wider_mode, align 4, !dbg !18658
  %call440 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %222, i32 %223, i64 0, i32 0, i32 1), !dbg !18658
  store %struct.rtx_def* %call440, %struct.rtx_def** %new_loc, align 8, !dbg !18659
  br label %if.end441, !dbg !18660

if.end441:                                        ; preds = %if.then437, %land.lhs.true405, %land.lhs.true384, %land.lhs.true369, %lor.lhs.false358
  br label %if.end442, !dbg !18661

if.end442:                                        ; preds = %if.end441, %land.lhs.true300, %land.lhs.true287, %land.lhs.true279, %if.else272
  br label %if.end443

if.end443:                                        ; preds = %if.end442, %if.end271
  %224 = load %struct.rtx_def*, %struct.rtx_def** %new_loc, align 8, !dbg !18662
  %tobool444 = icmp ne %struct.rtx_def* %224, null, !dbg !18662
  br i1 %tobool444, label %if.then445, label %if.end455, !dbg !18664

if.then445:                                       ; preds = %if.end443
  %225 = load %struct.rtx_def*, %struct.rtx_def** %new_loc, align 8, !dbg !18665
  %226 = load i32, i32* %n_var_parts, align 4, !dbg !18667
  %idxprom446 = sext i32 %226 to i64, !dbg !18668
  %arrayidx447 = getelementptr inbounds [16 x %struct.rtx_def*], [16 x %struct.rtx_def*]* %loc, i64 0, i64 %idxprom446, !dbg !18668
  store %struct.rtx_def* %225, %struct.rtx_def** %arrayidx447, align 8, !dbg !18669
  %227 = load i32, i32* %wider_mode, align 4, !dbg !18670
  store i32 %227, i32* %mode, align 4, !dbg !18671
  %228 = load i32, i32* %n_var_parts, align 4, !dbg !18672
  %idxprom448 = sext i32 %228 to i64, !dbg !18673
  %arrayidx449 = getelementptr inbounds [16 x i64], [16 x i64]* %offsets, i64 0, i64 %idxprom448, !dbg !18673
  %229 = load i64, i64* %arrayidx449, align 8, !dbg !18673
  %230 = load i32, i32* %mode, align 4, !dbg !18674
  %idxprom450 = zext i32 %230 to i64, !dbg !18674
  %arrayidx451 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom450, !dbg !18674
  %231 = load i8, i8* %arrayidx451, align 1, !dbg !18674
  %conv452 = zext i8 %231 to i16, !dbg !18674
  %conv453 = zext i16 %conv452 to i64, !dbg !18674
  %add454 = add nsw i64 %229, %conv453, !dbg !18675
  store i64 %add454, i64* %last_limit, align 8, !dbg !18676
  %232 = load i32, i32* %j, align 4, !dbg !18677
  store i32 %232, i32* %i, align 4, !dbg !18678
  br label %if.end455, !dbg !18679

if.end455:                                        ; preds = %if.then445, %if.end443
  br label %if.end456, !dbg !18680

if.end456:                                        ; preds = %if.end455, %land.lhs.true201, %land.lhs.true194, %land.lhs.true187, %lor.lhs.false, %land.lhs.true164, %land.lhs.true158, %land.lhs.true155, %for.end150
  %233 = load i32, i32* %n_var_parts, align 4, !dbg !18681
  %inc457 = add nsw i32 %233, 1, !dbg !18681
  store i32 %inc457, i32* %n_var_parts, align 4, !dbg !18681
  br label %for.inc458, !dbg !18682

for.inc458:                                       ; preds = %if.end456, %if.then82, %if.then74, %if.then60
  %234 = load i32, i32* %i, align 4, !dbg !18683
  %inc459 = add nsw i32 %234, 1, !dbg !18683
  store i32 %inc459, i32* %i, align 4, !dbg !18683
  br label %for.cond42, !dbg !18684, !llvm.loop !18685

for.end460:                                       ; preds = %if.then53, %for.cond42
  %235 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !18687
  %common = bitcast %union.tree_node* %235 to %struct.tree_common*, !dbg !18687
  %type = getelementptr inbounds %struct.tree_common, %struct.tree_common* %common, i32 0, i32 2, !dbg !18687
  %236 = load %union.tree_node*, %union.tree_node** %type, align 8, !dbg !18687
  %type461 = bitcast %union.tree_node* %236 to %struct.tree_type*, !dbg !18687
  %size_unit = getelementptr inbounds %struct.tree_type, %struct.tree_type* %type461, i32 0, i32 3, !dbg !18687
  %237 = load %union.tree_node*, %union.tree_node** %size_unit, align 8, !dbg !18687
  store %union.tree_node* %237, %union.tree_node** %type_size_unit, align 8, !dbg !18688
  %238 = load i64, i64* %last_limit, align 8, !dbg !18689
  %239 = load %union.tree_node*, %union.tree_node** %type_size_unit, align 8, !dbg !18691
  %int_cst = bitcast %union.tree_node* %239 to %struct.tree_int_cst*, !dbg !18691
  %int_cst462 = getelementptr inbounds %struct.tree_int_cst, %struct.tree_int_cst* %int_cst, i32 0, i32 1, !dbg !18691
  %low = getelementptr inbounds %struct.double_int, %struct.double_int* %int_cst462, i32 0, i32 0, !dbg !18691
  %240 = load i64, i64* %low, align 8, !dbg !18691
  %cmp463 = icmp ult i64 %238, %240, !dbg !18692
  br i1 %cmp463, label %if.then465, label %if.end466, !dbg !18693

if.then465:                                       ; preds = %for.end460
  store i8 0, i8* %complete, align 1, !dbg !18694
  br label %if.end466, !dbg !18695

if.end466:                                        ; preds = %if.then465, %for.end460
  %241 = load i32, i32* @flag_var_tracking_uninit, align 4, !dbg !18696
  %tobool467 = icmp ne i32 %241, 0, !dbg !18696
  br i1 %tobool467, label %if.end469, label %if.then468, !dbg !18698

if.then468:                                       ; preds = %if.end466
  store i32 2, i32* %initialized, align 4, !dbg !18699
  br label %if.end469, !dbg !18700

if.end469:                                        ; preds = %if.then468, %if.end466
  store %struct.rtx_def* null, %struct.rtx_def** %note_vl, align 8, !dbg !18701
  %242 = load i8, i8* %complete, align 1, !dbg !18702
  %tobool470 = icmp ne i8 %242, 0, !dbg !18702
  br i1 %tobool470, label %if.else473, label %if.then471, !dbg !18704

if.then471:                                       ; preds = %if.end469
  %243 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !18705
  %244 = load i32, i32* %initialized, align 4, !dbg !18705
  %call472 = call %struct.rtx_def* @gen_rtx_fmt_tei_stat(i32 138, i32 0, %union.tree_node* %243, %struct.rtx_def* null, i32 %244), !dbg !18705
  store %struct.rtx_def* %call472, %struct.rtx_def** %note_vl, align 8, !dbg !18706
  br label %if.end517, !dbg !18707

if.else473:                                       ; preds = %if.end469
  %245 = load i32, i32* %n_var_parts, align 4, !dbg !18708
  %cmp474 = icmp eq i32 %245, 1, !dbg !18710
  br i1 %cmp474, label %if.then476, label %if.else494, !dbg !18711

if.then476:                                       ; preds = %if.else473
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %expr_list, metadata !18712, metadata !DIExpression()), !dbg !18714
  %arrayidx477 = getelementptr inbounds [16 x i64], [16 x i64]* %offsets, i64 0, i64 0, !dbg !18715
  %246 = load i64, i64* %arrayidx477, align 16, !dbg !18715
  %tobool478 = icmp ne i64 %246, 0, !dbg !18715
  br i1 %tobool478, label %if.then485, label %lor.lhs.false479, !dbg !18717

lor.lhs.false479:                                 ; preds = %if.then476
  %arrayidx480 = getelementptr inbounds [16 x %struct.rtx_def*], [16 x %struct.rtx_def*]* %loc, i64 0, i64 0, !dbg !18718
  %247 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx480, align 16, !dbg !18718
  %248 = bitcast %struct.rtx_def* %247 to i32*, !dbg !18718
  %bf.load481 = load i32, i32* %248, align 8, !dbg !18718
  %bf.clear482 = and i32 %bf.load481, 65535, !dbg !18718
  %cmp483 = icmp eq i32 %bf.clear482, 15, !dbg !18719
  br i1 %cmp483, label %if.then485, label %if.else490, !dbg !18720

if.then485:                                       ; preds = %lor.lhs.false479, %if.then476
  %arrayidx486 = getelementptr inbounds [16 x %struct.rtx_def*], [16 x %struct.rtx_def*]* %loc, i64 0, i64 0, !dbg !18721
  %249 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx486, align 16, !dbg !18721
  %arrayidx487 = getelementptr inbounds [16 x i64], [16 x i64]* %offsets, i64 0, i64 0, !dbg !18721
  %250 = load i64, i64* %arrayidx487, align 16, !dbg !18721
  %call488 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %250), !dbg !18721
  %call489 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 3, i32 0, %struct.rtx_def* %249, %struct.rtx_def* %call488), !dbg !18721
  store %struct.rtx_def* %call489, %struct.rtx_def** %expr_list, align 8, !dbg !18722
  br label %if.end492, !dbg !18723

if.else490:                                       ; preds = %lor.lhs.false479
  %arrayidx491 = getelementptr inbounds [16 x %struct.rtx_def*], [16 x %struct.rtx_def*]* %loc, i64 0, i64 0, !dbg !18724
  %251 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx491, align 16, !dbg !18724
  store %struct.rtx_def* %251, %struct.rtx_def** %expr_list, align 8, !dbg !18725
  br label %if.end492

if.end492:                                        ; preds = %if.else490, %if.then485
  %252 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !18726
  %253 = load %struct.rtx_def*, %struct.rtx_def** %expr_list, align 8, !dbg !18726
  %254 = load i32, i32* %initialized, align 4, !dbg !18726
  %call493 = call %struct.rtx_def* @gen_rtx_fmt_tei_stat(i32 138, i32 0, %union.tree_node* %252, %struct.rtx_def* %253, i32 %254), !dbg !18726
  store %struct.rtx_def* %call493, %struct.rtx_def** %note_vl, align 8, !dbg !18727
  br label %if.end516, !dbg !18728

if.else494:                                       ; preds = %if.else473
  %255 = load i32, i32* %n_var_parts, align 4, !dbg !18729
  %tobool495 = icmp ne i32 %255, 0, !dbg !18729
  br i1 %tobool495, label %if.then496, label %if.end515, !dbg !18731

if.then496:                                       ; preds = %if.else494
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %parallel, metadata !18732, metadata !DIExpression()), !dbg !18734
  store i32 0, i32* %i, align 4, !dbg !18735
  br label %for.cond497, !dbg !18737

for.cond497:                                      ; preds = %for.inc509, %if.then496
  %256 = load i32, i32* %i, align 4, !dbg !18738
  %257 = load i32, i32* %n_var_parts, align 4, !dbg !18740
  %cmp498 = icmp slt i32 %256, %257, !dbg !18741
  br i1 %cmp498, label %for.body500, label %for.end511, !dbg !18742

for.body500:                                      ; preds = %for.cond497
  %258 = load i32, i32* %i, align 4, !dbg !18743
  %idxprom501 = sext i32 %258 to i64, !dbg !18743
  %arrayidx502 = getelementptr inbounds [16 x %struct.rtx_def*], [16 x %struct.rtx_def*]* %loc, i64 0, i64 %idxprom501, !dbg !18743
  %259 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx502, align 8, !dbg !18743
  %260 = load i32, i32* %i, align 4, !dbg !18743
  %idxprom503 = sext i32 %260 to i64, !dbg !18743
  %arrayidx504 = getelementptr inbounds [16 x i64], [16 x i64]* %offsets, i64 0, i64 %idxprom503, !dbg !18743
  %261 = load i64, i64* %arrayidx504, align 8, !dbg !18743
  %call505 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %261), !dbg !18743
  %call506 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 3, i32 0, %struct.rtx_def* %259, %struct.rtx_def* %call505), !dbg !18743
  %262 = load i32, i32* %i, align 4, !dbg !18744
  %idxprom507 = sext i32 %262 to i64, !dbg !18745
  %arrayidx508 = getelementptr inbounds [16 x %struct.rtx_def*], [16 x %struct.rtx_def*]* %loc, i64 0, i64 %idxprom507, !dbg !18745
  store %struct.rtx_def* %call506, %struct.rtx_def** %arrayidx508, align 8, !dbg !18746
  br label %for.inc509, !dbg !18745

for.inc509:                                       ; preds = %for.body500
  %263 = load i32, i32* %i, align 4, !dbg !18747
  %inc510 = add nsw i32 %263, 1, !dbg !18747
  store i32 %inc510, i32* %i, align 4, !dbg !18747
  br label %for.cond497, !dbg !18748, !llvm.loop !18749

for.end511:                                       ; preds = %for.cond497
  %264 = load i32, i32* %n_var_parts, align 4, !dbg !18751
  %arraydecay = getelementptr inbounds [16 x %struct.rtx_def*], [16 x %struct.rtx_def*]* %loc, i64 0, i64 0, !dbg !18751
  %call512 = call %struct.rtvec_def* @gen_rtvec_v(i32 %264, %struct.rtx_def** %arraydecay), !dbg !18751
  %call513 = call %struct.rtx_def* @gen_rtx_fmt_E_stat(i32 15, i32 0, %struct.rtvec_def* %call512), !dbg !18751
  store %struct.rtx_def* %call513, %struct.rtx_def** %parallel, align 8, !dbg !18752
  %265 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !18753
  %266 = load %struct.rtx_def*, %struct.rtx_def** %parallel, align 8, !dbg !18753
  %267 = load i32, i32* %initialized, align 4, !dbg !18753
  %call514 = call %struct.rtx_def* @gen_rtx_fmt_tei_stat(i32 138, i32 0, %union.tree_node* %265, %struct.rtx_def* %266, i32 %267), !dbg !18753
  store %struct.rtx_def* %call514, %struct.rtx_def** %note_vl, align 8, !dbg !18754
  br label %if.end515, !dbg !18755

if.end515:                                        ; preds = %for.end511, %if.else494
  br label %if.end516

if.end516:                                        ; preds = %if.end515, %if.end492
  br label %if.end517

if.end517:                                        ; preds = %if.end516, %if.then471
  %268 = load i32, i32* %where, align 4, !dbg !18756
  %cmp518 = icmp ne i32 %268, 0, !dbg !18758
  br i1 %cmp518, label %if.then520, label %if.else528, !dbg !18759

if.then520:                                       ; preds = %if.end517
  %269 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !18760
  %call521 = call %struct.rtx_def* @emit_note_after(i32 9, %struct.rtx_def* %269), !dbg !18762
  store %struct.rtx_def* %call521, %struct.rtx_def** %note, align 8, !dbg !18763
  %270 = load i32, i32* %where, align 4, !dbg !18764
  %cmp522 = icmp eq i32 %270, 2, !dbg !18766
  br i1 %cmp522, label %if.then524, label %if.end527, !dbg !18767

if.then524:                                       ; preds = %if.then520
  %271 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !18768
  %272 = bitcast %struct.rtx_def* %271 to i32*, !dbg !18768
  %bf.load525 = load i32, i32* %272, align 8, !dbg !18769
  %bf.clear526 = and i32 %bf.load525, -33554433, !dbg !18769
  %bf.set = or i32 %bf.clear526, 33554432, !dbg !18769
  store i32 %bf.set, i32* %272, align 8, !dbg !18769
  br label %if.end527, !dbg !18768

if.end527:                                        ; preds = %if.then524, %if.then520
  br label %if.end530, !dbg !18770

if.else528:                                       ; preds = %if.end517
  %273 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !18771
  %call529 = call %struct.rtx_def* @emit_note_before(i32 9, %struct.rtx_def* %273), !dbg !18772
  store %struct.rtx_def* %call529, %struct.rtx_def** %note, align 8, !dbg !18773
  br label %if.end530

if.end530:                                        ; preds = %if.else528, %if.end527
  %274 = load %struct.rtx_def*, %struct.rtx_def** %note_vl, align 8, !dbg !18774
  %275 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !18775
  %u531 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %275, i32 0, i32 1, !dbg !18775
  %fld532 = bitcast %union.u* %u531 to [1 x %union.rtunion_def]*, !dbg !18775
  %arrayidx533 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld532, i64 0, i64 4, !dbg !18775
  %rt_rtx534 = bitcast %union.rtunion_def* %arrayidx533 to %struct.rtx_def**, !dbg !18775
  store %struct.rtx_def* %274, %struct.rtx_def** %rt_rtx534, align 8, !dbg !18776
  br label %clear, !dbg !18775

clear:                                            ; preds = %if.end598, %if.then565, %if.end530, %if.then40
  call void @llvm.dbg.label(metadata !18777), !dbg !18778
  %276 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18779
  %dv535 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %276, i32 0, i32 0, !dbg !18780
  %277 = load i8*, i8** %dv535, align 8, !dbg !18780
  call void @set_dv_changed(i8* %277, i8 zeroext 0), !dbg !18781
  %278 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18782
  %cur_loc_changed536 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %278, i32 0, i32 3, !dbg !18783
  store i8 0, i8* %cur_loc_changed536, align 1, !dbg !18784
  %279 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18785
  %in_changed_variables = getelementptr inbounds %struct.variable_def, %struct.variable_def* %279, i32 0, i32 4, !dbg !18785
  %280 = load i8, i8* %in_changed_variables, align 2, !dbg !18785
  %tobool537 = icmp ne i8 %280, 0, !dbg !18785
  br i1 %tobool537, label %cond.false539, label %cond.true538, !dbg !18785

cond.true538:                                     ; preds = %clear
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 7243, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !18785
  br label %cond.end540, !dbg !18785

cond.false539:                                    ; preds = %clear
  br label %cond.end540, !dbg !18785

cond.end540:                                      ; preds = %cond.false539, %cond.true538
  %cond541 = phi i32 [ 0, %cond.true538 ], [ 0, %cond.false539 ], !dbg !18785
  %281 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18786
  %in_changed_variables542 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %281, i32 0, i32 4, !dbg !18787
  store i8 0, i8* %in_changed_variables542, align 2, !dbg !18788
  %282 = load %struct.htab*, %struct.htab** @changed_variables, align 8, !dbg !18789
  %283 = load i8**, i8*** %varp.addr, align 8, !dbg !18790
  call void @htab_clear_slot(%struct.htab* %282, i8** %283), !dbg !18791
  ret i32 1, !dbg !18792

value_or_debug_decl:                              ; preds = %if.then6, %if.then
  call void @llvm.dbg.label(metadata !18793), !dbg !18794
  %284 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18795
  %dv543 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %284, i32 0, i32 0, !dbg !18797
  %285 = load i8*, i8** %dv543, align 8, !dbg !18797
  %call544 = call zeroext i8 @dv_changed_p(i8* %285), !dbg !18798
  %conv545 = zext i8 %call544 to i32, !dbg !18798
  %tobool546 = icmp ne i32 %conv545, 0, !dbg !18798
  br i1 %tobool546, label %land.lhs.true547, label %if.end598, !dbg !18799

land.lhs.true547:                                 ; preds = %value_or_debug_decl
  %286 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18800
  %n_var_parts548 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %286, i32 0, i32 2, !dbg !18801
  %287 = load i8, i8* %n_var_parts548, align 4, !dbg !18801
  %conv549 = sext i8 %287 to i32, !dbg !18800
  %tobool550 = icmp ne i32 %conv549, 0, !dbg !18800
  br i1 %tobool550, label %if.then551, label %if.end598, !dbg !18802

if.then551:                                       ; preds = %land.lhs.true547
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %lc552, metadata !18803, metadata !DIExpression()), !dbg !18805
  call void @llvm.dbg.declare(metadata i8* %cur_loc_changed553, metadata !18806, metadata !DIExpression()), !dbg !18807
  %288 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18808
  %var_part554 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %288, i32 0, i32 5, !dbg !18810
  %arrayidx555 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part554, i64 0, i64 0, !dbg !18808
  %cur_loc556 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx555, i32 0, i32 1, !dbg !18811
  %289 = load %struct.rtx_def*, %struct.rtx_def** %cur_loc556, align 8, !dbg !18811
  %tobool557 = icmp ne %struct.rtx_def* %289, null, !dbg !18808
  br i1 %tobool557, label %land.lhs.true558, label %if.end566, !dbg !18812

land.lhs.true558:                                 ; preds = %if.then551
  %290 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18813
  %var_part559 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %290, i32 0, i32 5, !dbg !18814
  %arrayidx560 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part559, i64 0, i64 0, !dbg !18813
  %cur_loc561 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx560, i32 0, i32 1, !dbg !18815
  %291 = load %struct.rtx_def*, %struct.rtx_def** %cur_loc561, align 8, !dbg !18815
  %292 = load %struct.htab*, %struct.htab** %vars, align 8, !dbg !18816
  %call562 = call zeroext i8 @vt_expand_loc_dummy(%struct.rtx_def* %291, %struct.htab* %292, i8* %cur_loc_changed553), !dbg !18817
  %conv563 = zext i8 %call562 to i32, !dbg !18817
  %tobool564 = icmp ne i32 %conv563, 0, !dbg !18817
  br i1 %tobool564, label %if.then565, label %if.end566, !dbg !18818

if.then565:                                       ; preds = %land.lhs.true558
  br label %clear, !dbg !18819

if.end566:                                        ; preds = %land.lhs.true558, %if.then551
  %293 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18820
  %var_part567 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %293, i32 0, i32 5, !dbg !18822
  %arrayidx568 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part567, i64 0, i64 0, !dbg !18820
  %loc_chain569 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx568, i32 0, i32 0, !dbg !18823
  %294 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain569, align 8, !dbg !18823
  store %struct.location_chain_def* %294, %struct.location_chain_def** %lc552, align 8, !dbg !18824
  br label %for.cond570, !dbg !18825

for.cond570:                                      ; preds = %for.inc586, %if.end566
  %295 = load %struct.location_chain_def*, %struct.location_chain_def** %lc552, align 8, !dbg !18826
  %tobool571 = icmp ne %struct.location_chain_def* %295, null, !dbg !18828
  br i1 %tobool571, label %for.body572, label %for.end588, !dbg !18828

for.body572:                                      ; preds = %for.cond570
  %296 = load %struct.location_chain_def*, %struct.location_chain_def** %lc552, align 8, !dbg !18829
  %loc573 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %296, i32 0, i32 1, !dbg !18831
  %297 = load %struct.rtx_def*, %struct.rtx_def** %loc573, align 8, !dbg !18831
  %298 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18832
  %var_part574 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %298, i32 0, i32 5, !dbg !18833
  %arrayidx575 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part574, i64 0, i64 0, !dbg !18832
  %cur_loc576 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx575, i32 0, i32 1, !dbg !18834
  %299 = load %struct.rtx_def*, %struct.rtx_def** %cur_loc576, align 8, !dbg !18834
  %cmp577 = icmp ne %struct.rtx_def* %297, %299, !dbg !18835
  br i1 %cmp577, label %land.lhs.true579, label %if.end585, !dbg !18836

land.lhs.true579:                                 ; preds = %for.body572
  %300 = load %struct.location_chain_def*, %struct.location_chain_def** %lc552, align 8, !dbg !18837
  %loc580 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %300, i32 0, i32 1, !dbg !18838
  %301 = load %struct.rtx_def*, %struct.rtx_def** %loc580, align 8, !dbg !18838
  %302 = load %struct.htab*, %struct.htab** %vars, align 8, !dbg !18839
  %call581 = call zeroext i8 @vt_expand_loc_dummy(%struct.rtx_def* %301, %struct.htab* %302, i8* %cur_loc_changed553), !dbg !18840
  %conv582 = zext i8 %call581 to i32, !dbg !18840
  %tobool583 = icmp ne i32 %conv582, 0, !dbg !18840
  br i1 %tobool583, label %if.then584, label %if.end585, !dbg !18841

if.then584:                                       ; preds = %land.lhs.true579
  br label %for.end588, !dbg !18842

if.end585:                                        ; preds = %land.lhs.true579, %for.body572
  br label %for.inc586, !dbg !18843

for.inc586:                                       ; preds = %if.end585
  %303 = load %struct.location_chain_def*, %struct.location_chain_def** %lc552, align 8, !dbg !18844
  %next587 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %303, i32 0, i32 0, !dbg !18845
  %304 = load %struct.location_chain_def*, %struct.location_chain_def** %next587, align 8, !dbg !18845
  store %struct.location_chain_def* %304, %struct.location_chain_def** %lc552, align 8, !dbg !18846
  br label %for.cond570, !dbg !18847, !llvm.loop !18848

for.end588:                                       ; preds = %if.then584, %for.cond570
  %305 = load %struct.location_chain_def*, %struct.location_chain_def** %lc552, align 8, !dbg !18850
  %tobool589 = icmp ne %struct.location_chain_def* %305, null, !dbg !18850
  br i1 %tobool589, label %cond.true590, label %cond.false592, !dbg !18850

cond.true590:                                     ; preds = %for.end588
  %306 = load %struct.location_chain_def*, %struct.location_chain_def** %lc552, align 8, !dbg !18851
  %loc591 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %306, i32 0, i32 1, !dbg !18852
  %307 = load %struct.rtx_def*, %struct.rtx_def** %loc591, align 8, !dbg !18852
  br label %cond.end593, !dbg !18850

cond.false592:                                    ; preds = %for.end588
  br label %cond.end593, !dbg !18850

cond.end593:                                      ; preds = %cond.false592, %cond.true590
  %cond594 = phi %struct.rtx_def* [ %307, %cond.true590 ], [ null, %cond.false592 ], !dbg !18850
  %308 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !18853
  %var_part595 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %308, i32 0, i32 5, !dbg !18854
  %arrayidx596 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part595, i64 0, i64 0, !dbg !18853
  %cur_loc597 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx596, i32 0, i32 1, !dbg !18855
  store %struct.rtx_def* %cond594, %struct.rtx_def** %cur_loc597, align 8, !dbg !18856
  br label %if.end598, !dbg !18857

if.end598:                                        ; preds = %cond.end593, %land.lhs.true547, %value_or_debug_decl
  br label %clear, !dbg !18858
}

; Function Attrs: noinline nounwind uwtable
define internal void @check_changed_vars_0(i8* %dv, %struct.htab* %htab) #0 !dbg !18859 {
entry:
  %dv.addr = alloca i8*, align 8
  %htab.addr = alloca %struct.htab*, align 8
  %vc = alloca %struct.value_chain_def*, align 8
  %vcvar = alloca %struct.variable_def*, align 8
  store i8* %dv, i8** %dv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dv.addr, metadata !18862, metadata !DIExpression()), !dbg !18863
  store %struct.htab* %htab, %struct.htab** %htab.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.htab** %htab.addr, metadata !18864, metadata !DIExpression()), !dbg !18865
  call void @llvm.dbg.declare(metadata %struct.value_chain_def** %vc, metadata !18866, metadata !DIExpression()), !dbg !18867
  %0 = load %struct.htab*, %struct.htab** @value_chains, align 8, !dbg !18868
  %1 = load i8*, i8** %dv.addr, align 8, !dbg !18869
  %2 = load i8*, i8** %dv.addr, align 8, !dbg !18870
  %call = call i32 @dv_htab_hash(i8* %2), !dbg !18871
  %call1 = call i8* @htab_find_with_hash(%struct.htab* %0, i8* %1, i32 %call), !dbg !18872
  %3 = bitcast i8* %call1 to %struct.value_chain_def*, !dbg !18873
  store %struct.value_chain_def* %3, %struct.value_chain_def** %vc, align 8, !dbg !18867
  %4 = load %struct.value_chain_def*, %struct.value_chain_def** %vc, align 8, !dbg !18874
  %cmp = icmp eq %struct.value_chain_def* %4, null, !dbg !18876
  br i1 %cmp, label %if.then, label %if.end, !dbg !18877

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !18878

if.end:                                           ; preds = %entry
  %5 = load %struct.value_chain_def*, %struct.value_chain_def** %vc, align 8, !dbg !18879
  %next = getelementptr inbounds %struct.value_chain_def, %struct.value_chain_def* %5, i32 0, i32 0, !dbg !18881
  %6 = load %struct.value_chain_def*, %struct.value_chain_def** %next, align 8, !dbg !18881
  store %struct.value_chain_def* %6, %struct.value_chain_def** %vc, align 8, !dbg !18882
  br label %for.cond, !dbg !18883

for.cond:                                         ; preds = %for.inc, %if.end
  %7 = load %struct.value_chain_def*, %struct.value_chain_def** %vc, align 8, !dbg !18884
  %tobool = icmp ne %struct.value_chain_def* %7, null, !dbg !18886
  br i1 %tobool, label %for.body, label %for.end, !dbg !18886

for.body:                                         ; preds = %for.cond
  %8 = load %struct.value_chain_def*, %struct.value_chain_def** %vc, align 8, !dbg !18887
  %dv2 = getelementptr inbounds %struct.value_chain_def, %struct.value_chain_def* %8, i32 0, i32 1, !dbg !18889
  %9 = load i8*, i8** %dv2, align 8, !dbg !18889
  %call3 = call zeroext i8 @dv_changed_p(i8* %9), !dbg !18890
  %tobool4 = icmp ne i8 %call3, 0, !dbg !18890
  br i1 %tobool4, label %if.end25, label %if.then5, !dbg !18891

if.then5:                                         ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.variable_def** %vcvar, metadata !18892, metadata !DIExpression()), !dbg !18894
  %10 = load %struct.htab*, %struct.htab** %htab.addr, align 8, !dbg !18895
  %11 = load %struct.value_chain_def*, %struct.value_chain_def** %vc, align 8, !dbg !18896
  %dv6 = getelementptr inbounds %struct.value_chain_def, %struct.value_chain_def* %11, i32 0, i32 1, !dbg !18897
  %12 = load i8*, i8** %dv6, align 8, !dbg !18897
  %13 = load %struct.value_chain_def*, %struct.value_chain_def** %vc, align 8, !dbg !18898
  %dv7 = getelementptr inbounds %struct.value_chain_def, %struct.value_chain_def* %13, i32 0, i32 1, !dbg !18899
  %14 = load i8*, i8** %dv7, align 8, !dbg !18899
  %call8 = call i32 @dv_htab_hash(i8* %14), !dbg !18900
  %call9 = call i8* @htab_find_with_hash(%struct.htab* %10, i8* %12, i32 %call8), !dbg !18901
  %15 = bitcast i8* %call9 to %struct.variable_def*, !dbg !18902
  store %struct.variable_def* %15, %struct.variable_def** %vcvar, align 8, !dbg !18894
  %16 = load %struct.variable_def*, %struct.variable_def** %vcvar, align 8, !dbg !18903
  %tobool10 = icmp ne %struct.variable_def* %16, null, !dbg !18903
  br i1 %tobool10, label %if.then11, label %if.else, !dbg !18905

if.then11:                                        ; preds = %if.then5
  %17 = load %struct.value_chain_def*, %struct.value_chain_def** %vc, align 8, !dbg !18906
  %dv12 = getelementptr inbounds %struct.value_chain_def, %struct.value_chain_def* %17, i32 0, i32 1, !dbg !18908
  %18 = load i8*, i8** %dv12, align 8, !dbg !18908
  call void @set_dv_changed(i8* %18, i8 zeroext 1), !dbg !18909
  %19 = load %struct.variable_def*, %struct.variable_def** %vcvar, align 8, !dbg !18910
  %call13 = call %struct.variable_def** @VEC_variable_heap_safe_push(%struct.VEC_variable_heap** @changed_variables_stack, %struct.variable_def* %19), !dbg !18910
  br label %if.end24, !dbg !18911

if.else:                                          ; preds = %if.then5
  %20 = load %struct.value_chain_def*, %struct.value_chain_def** %vc, align 8, !dbg !18912
  %dv14 = getelementptr inbounds %struct.value_chain_def, %struct.value_chain_def* %20, i32 0, i32 1, !dbg !18914
  %21 = load i8*, i8** %dv14, align 8, !dbg !18914
  %call15 = call zeroext i8 @dv_is_value_p(i8* %21), !dbg !18915
  %tobool16 = icmp ne i8 %call15, 0, !dbg !18915
  br i1 %tobool16, label %if.then17, label %if.end23, !dbg !18916

if.then17:                                        ; preds = %if.else
  %22 = load %struct.value_chain_def*, %struct.value_chain_def** %vc, align 8, !dbg !18917
  %dv18 = getelementptr inbounds %struct.value_chain_def, %struct.value_chain_def* %22, i32 0, i32 1, !dbg !18919
  %23 = load i8*, i8** %dv18, align 8, !dbg !18919
  call void @set_dv_changed(i8* %23, i8 zeroext 1), !dbg !18920
  %24 = load %struct.value_chain_def*, %struct.value_chain_def** %vc, align 8, !dbg !18921
  %dv19 = getelementptr inbounds %struct.value_chain_def, %struct.value_chain_def* %24, i32 0, i32 1, !dbg !18921
  %25 = load i8*, i8** %dv19, align 8, !dbg !18921
  %call20 = call %struct.rtx_def* @dv_as_value(i8* %25), !dbg !18921
  %call21 = call %struct.rtx_def** @VEC_rtx_heap_safe_push(%struct.VEC_rtx_heap** @changed_values_stack, %struct.rtx_def* %call20), !dbg !18921
  %26 = load %struct.value_chain_def*, %struct.value_chain_def** %vc, align 8, !dbg !18922
  %dv22 = getelementptr inbounds %struct.value_chain_def, %struct.value_chain_def* %26, i32 0, i32 1, !dbg !18923
  %27 = load i8*, i8** %dv22, align 8, !dbg !18923
  %28 = load %struct.htab*, %struct.htab** %htab.addr, align 8, !dbg !18924
  call void @check_changed_vars_0(i8* %27, %struct.htab* %28), !dbg !18925
  br label %if.end23, !dbg !18926

if.end23:                                         ; preds = %if.then17, %if.else
  br label %if.end24

if.end24:                                         ; preds = %if.end23, %if.then11
  br label %if.end25, !dbg !18927

if.end25:                                         ; preds = %if.end24, %for.body
  br label %for.inc, !dbg !18928

for.inc:                                          ; preds = %if.end25
  %29 = load %struct.value_chain_def*, %struct.value_chain_def** %vc, align 8, !dbg !18929
  %next26 = getelementptr inbounds %struct.value_chain_def, %struct.value_chain_def* %29, i32 0, i32 0, !dbg !18930
  %30 = load %struct.value_chain_def*, %struct.value_chain_def** %next26, align 8, !dbg !18930
  store %struct.value_chain_def* %30, %struct.value_chain_def** %vc, align 8, !dbg !18931
  br label %for.cond, !dbg !18932, !llvm.loop !18933

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !18935
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @dv_changed_p(i8* %dv) #0 !dbg !18936 {
entry:
  %dv.addr = alloca i8*, align 8
  store i8* %dv, i8** %dv.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dv.addr, metadata !18937, metadata !DIExpression()), !dbg !18938
  %0 = load i8*, i8** %dv.addr, align 8, !dbg !18939
  %call = call zeroext i8 @dv_is_value_p(i8* %0), !dbg !18940
  %conv = zext i8 %call to i32, !dbg !18940
  %tobool = icmp ne i32 %conv, 0, !dbg !18940
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !18940

cond.true:                                        ; preds = %entry
  %1 = load i8*, i8** %dv.addr, align 8, !dbg !18941
  %call1 = call %struct.rtx_def* @dv_as_value(i8* %1), !dbg !18941
  %2 = bitcast %struct.rtx_def* %call1 to i32*, !dbg !18941
  %bf.load = load i32, i32* %2, align 8, !dbg !18941
  %bf.lshr = lshr i32 %bf.load, 30, !dbg !18941
  %bf.clear = and i32 %bf.lshr, 1, !dbg !18941
  br label %cond.end, !dbg !18940

cond.false:                                       ; preds = %entry
  %3 = load i8*, i8** %dv.addr, align 8, !dbg !18942
  %call2 = call %union.tree_node* @dv_as_decl(i8* %3), !dbg !18942
  %base = bitcast %union.tree_node* %call2 to %struct.tree_base*, !dbg !18942
  %4 = bitcast %struct.tree_base* %base to i64*, !dbg !18942
  %bf.load3 = load i64, i64* %4, align 8, !dbg !18942
  %bf.lshr4 = lshr i64 %bf.load3, 40, !dbg !18942
  %bf.clear5 = and i64 %bf.lshr4, 1, !dbg !18942
  %bf.cast = trunc i64 %bf.clear5 to i32, !dbg !18942
  br label %cond.end, !dbg !18940

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %bf.clear, %cond.true ], [ %bf.cast, %cond.false ], !dbg !18940
  %conv6 = trunc i32 %cond to i8, !dbg !18943
  ret i8 %conv6, !dbg !18944
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.variable_def** @VEC_variable_heap_safe_push(%struct.VEC_variable_heap** %vec_, %struct.variable_def* %obj_) #0 !dbg !18945 {
entry:
  %vec_.addr = alloca %struct.VEC_variable_heap**, align 8
  %obj_.addr = alloca %struct.variable_def*, align 8
  store %struct.VEC_variable_heap** %vec_, %struct.VEC_variable_heap*** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_variable_heap*** %vec_.addr, metadata !18949, metadata !DIExpression()), !dbg !18950
  store %struct.variable_def* %obj_, %struct.variable_def** %obj_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.variable_def** %obj_.addr, metadata !18951, metadata !DIExpression()), !dbg !18950
  %0 = load %struct.VEC_variable_heap**, %struct.VEC_variable_heap*** %vec_.addr, align 8, !dbg !18950
  %call = call i32 @VEC_variable_heap_reserve(%struct.VEC_variable_heap** %0, i32 1), !dbg !18950
  %1 = load %struct.VEC_variable_heap**, %struct.VEC_variable_heap*** %vec_.addr, align 8, !dbg !18950
  %2 = load %struct.VEC_variable_heap*, %struct.VEC_variable_heap** %1, align 8, !dbg !18950
  %tobool = icmp ne %struct.VEC_variable_heap* %2, null, !dbg !18950
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !18950

cond.true:                                        ; preds = %entry
  %3 = load %struct.VEC_variable_heap**, %struct.VEC_variable_heap*** %vec_.addr, align 8, !dbg !18950
  %4 = load %struct.VEC_variable_heap*, %struct.VEC_variable_heap** %3, align 8, !dbg !18950
  %base = getelementptr inbounds %struct.VEC_variable_heap, %struct.VEC_variable_heap* %4, i32 0, i32 0, !dbg !18950
  br label %cond.end, !dbg !18950

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !18950

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_variable_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !18950
  %5 = load %struct.variable_def*, %struct.variable_def** %obj_.addr, align 8, !dbg !18950
  %call1 = call %struct.variable_def** @VEC_variable_base_quick_push(%struct.VEC_variable_base* %cond, %struct.variable_def* %5), !dbg !18950
  ret %struct.variable_def** %call1, !dbg !18950
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_variable_heap_reserve(%struct.VEC_variable_heap** %vec_, i32 %alloc_) #0 !dbg !18952 {
entry:
  %vec_.addr = alloca %struct.VEC_variable_heap**, align 8
  %alloc_.addr = alloca i32, align 4
  %extend = alloca i32, align 4
  store %struct.VEC_variable_heap** %vec_, %struct.VEC_variable_heap*** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_variable_heap*** %vec_.addr, metadata !18955, metadata !DIExpression()), !dbg !18956
  store i32 %alloc_, i32* %alloc_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %alloc_.addr, metadata !18957, metadata !DIExpression()), !dbg !18956
  call void @llvm.dbg.declare(metadata i32* %extend, metadata !18958, metadata !DIExpression()), !dbg !18956
  %0 = load %struct.VEC_variable_heap**, %struct.VEC_variable_heap*** %vec_.addr, align 8, !dbg !18956
  %1 = load %struct.VEC_variable_heap*, %struct.VEC_variable_heap** %0, align 8, !dbg !18956
  %tobool = icmp ne %struct.VEC_variable_heap* %1, null, !dbg !18956
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !18956

cond.true:                                        ; preds = %entry
  %2 = load %struct.VEC_variable_heap**, %struct.VEC_variable_heap*** %vec_.addr, align 8, !dbg !18956
  %3 = load %struct.VEC_variable_heap*, %struct.VEC_variable_heap** %2, align 8, !dbg !18956
  %base = getelementptr inbounds %struct.VEC_variable_heap, %struct.VEC_variable_heap* %3, i32 0, i32 0, !dbg !18956
  br label %cond.end, !dbg !18956

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !18956

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_variable_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !18956
  %4 = load i32, i32* %alloc_.addr, align 4, !dbg !18956
  %call = call i32 @VEC_variable_base_space(%struct.VEC_variable_base* %cond, i32 %4), !dbg !18956
  %tobool1 = icmp ne i32 %call, 0, !dbg !18956
  %lnot = xor i1 %tobool1, true, !dbg !18956
  %lnot.ext = zext i1 %lnot to i32, !dbg !18956
  store i32 %lnot.ext, i32* %extend, align 4, !dbg !18956
  %5 = load i32, i32* %extend, align 4, !dbg !18959
  %tobool2 = icmp ne i32 %5, 0, !dbg !18959
  br i1 %tobool2, label %if.then, label %if.end, !dbg !18956

if.then:                                          ; preds = %cond.end
  %6 = load %struct.VEC_variable_heap**, %struct.VEC_variable_heap*** %vec_.addr, align 8, !dbg !18959
  %7 = load %struct.VEC_variable_heap*, %struct.VEC_variable_heap** %6, align 8, !dbg !18959
  %8 = bitcast %struct.VEC_variable_heap* %7 to i8*, !dbg !18959
  %9 = load i32, i32* %alloc_.addr, align 4, !dbg !18959
  %call3 = call i8* @vec_heap_p_reserve(i8* %8, i32 %9), !dbg !18959
  %10 = bitcast i8* %call3 to %struct.VEC_variable_heap*, !dbg !18959
  %11 = load %struct.VEC_variable_heap**, %struct.VEC_variable_heap*** %vec_.addr, align 8, !dbg !18959
  store %struct.VEC_variable_heap* %10, %struct.VEC_variable_heap** %11, align 8, !dbg !18959
  br label %if.end, !dbg !18959

if.end:                                           ; preds = %if.then, %cond.end
  %12 = load i32, i32* %extend, align 4, !dbg !18956
  ret i32 %12, !dbg !18956
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.variable_def** @VEC_variable_base_quick_push(%struct.VEC_variable_base* %vec_, %struct.variable_def* %obj_) #0 !dbg !18961 {
entry:
  %vec_.addr = alloca %struct.VEC_variable_base*, align 8
  %obj_.addr = alloca %struct.variable_def*, align 8
  %slot_ = alloca %struct.variable_def**, align 8
  store %struct.VEC_variable_base* %vec_, %struct.VEC_variable_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_variable_base** %vec_.addr, metadata !18964, metadata !DIExpression()), !dbg !18965
  store %struct.variable_def* %obj_, %struct.variable_def** %obj_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.variable_def** %obj_.addr, metadata !18966, metadata !DIExpression()), !dbg !18965
  call void @llvm.dbg.declare(metadata %struct.variable_def*** %slot_, metadata !18967, metadata !DIExpression()), !dbg !18965
  %0 = load %struct.VEC_variable_base*, %struct.VEC_variable_base** %vec_.addr, align 8, !dbg !18965
  %num = getelementptr inbounds %struct.VEC_variable_base, %struct.VEC_variable_base* %0, i32 0, i32 0, !dbg !18965
  %1 = load i32, i32* %num, align 8, !dbg !18965
  %2 = load %struct.VEC_variable_base*, %struct.VEC_variable_base** %vec_.addr, align 8, !dbg !18965
  %alloc = getelementptr inbounds %struct.VEC_variable_base, %struct.VEC_variable_base* %2, i32 0, i32 1, !dbg !18965
  %3 = load i32, i32* %alloc, align 4, !dbg !18965
  %cmp = icmp ult i32 %1, %3, !dbg !18965
  %conv = zext i1 %cmp to i32, !dbg !18965
  %4 = load %struct.VEC_variable_base*, %struct.VEC_variable_base** %vec_.addr, align 8, !dbg !18965
  %vec = getelementptr inbounds %struct.VEC_variable_base, %struct.VEC_variable_base* %4, i32 0, i32 2, !dbg !18965
  %5 = load %struct.VEC_variable_base*, %struct.VEC_variable_base** %vec_.addr, align 8, !dbg !18965
  %num1 = getelementptr inbounds %struct.VEC_variable_base, %struct.VEC_variable_base* %5, i32 0, i32 0, !dbg !18965
  %6 = load i32, i32* %num1, align 8, !dbg !18965
  %inc = add i32 %6, 1, !dbg !18965
  store i32 %inc, i32* %num1, align 8, !dbg !18965
  %idxprom = zext i32 %6 to i64, !dbg !18965
  %arrayidx = getelementptr inbounds [1 x %struct.variable_def*], [1 x %struct.variable_def*]* %vec, i64 0, i64 %idxprom, !dbg !18965
  store %struct.variable_def** %arrayidx, %struct.variable_def*** %slot_, align 8, !dbg !18965
  %7 = load %struct.variable_def*, %struct.variable_def** %obj_.addr, align 8, !dbg !18965
  %8 = load %struct.variable_def**, %struct.variable_def*** %slot_, align 8, !dbg !18965
  store %struct.variable_def* %7, %struct.variable_def** %8, align 8, !dbg !18965
  %9 = load %struct.variable_def**, %struct.variable_def*** %slot_, align 8, !dbg !18965
  ret %struct.variable_def** %9, !dbg !18965
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_variable_base_space(%struct.VEC_variable_base* %vec_, i32 %alloc_) #0 !dbg !18968 {
entry:
  %vec_.addr = alloca %struct.VEC_variable_base*, align 8
  %alloc_.addr = alloca i32, align 4
  store %struct.VEC_variable_base* %vec_, %struct.VEC_variable_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_variable_base** %vec_.addr, metadata !18971, metadata !DIExpression()), !dbg !18972
  store i32 %alloc_, i32* %alloc_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %alloc_.addr, metadata !18973, metadata !DIExpression()), !dbg !18972
  %0 = load i32, i32* %alloc_.addr, align 4, !dbg !18972
  %cmp = icmp sge i32 %0, 0, !dbg !18972
  %conv = zext i1 %cmp to i32, !dbg !18972
  %1 = load %struct.VEC_variable_base*, %struct.VEC_variable_base** %vec_.addr, align 8, !dbg !18972
  %tobool = icmp ne %struct.VEC_variable_base* %1, null, !dbg !18972
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !18972

cond.true:                                        ; preds = %entry
  %2 = load %struct.VEC_variable_base*, %struct.VEC_variable_base** %vec_.addr, align 8, !dbg !18972
  %alloc = getelementptr inbounds %struct.VEC_variable_base, %struct.VEC_variable_base* %2, i32 0, i32 1, !dbg !18972
  %3 = load i32, i32* %alloc, align 4, !dbg !18972
  %4 = load %struct.VEC_variable_base*, %struct.VEC_variable_base** %vec_.addr, align 8, !dbg !18972
  %num = getelementptr inbounds %struct.VEC_variable_base, %struct.VEC_variable_base* %4, i32 0, i32 0, !dbg !18972
  %5 = load i32, i32* %num, align 8, !dbg !18972
  %sub = sub i32 %3, %5, !dbg !18972
  %6 = load i32, i32* %alloc_.addr, align 4, !dbg !18972
  %cmp1 = icmp uge i32 %sub, %6, !dbg !18972
  %conv2 = zext i1 %cmp1 to i32, !dbg !18972
  br label %cond.end, !dbg !18972

cond.false:                                       ; preds = %entry
  %7 = load i32, i32* %alloc_.addr, align 4, !dbg !18972
  %tobool3 = icmp ne i32 %7, 0, !dbg !18972
  %lnot = xor i1 %tobool3, true, !dbg !18972
  %lnot.ext = zext i1 %lnot to i32, !dbg !18972
  br label %cond.end, !dbg !18972

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv2, %cond.true ], [ %lnot.ext, %cond.false ], !dbg !18972
  ret i32 %cond, !dbg !18972
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @vt_expand_loc_dummy(%struct.rtx_def* %loc, %struct.htab* %vars, i8* %pcur_loc_changed) #0 !dbg !18974 {
entry:
  %loc.addr = alloca %struct.rtx_def*, align 8
  %vars.addr = alloca %struct.htab*, align 8
  %pcur_loc_changed.addr = alloca i8*, align 8
  %data = alloca %struct.expand_loc_callback_data, align 8
  %ret = alloca i8, align 1
  store %struct.rtx_def* %loc, %struct.rtx_def** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %loc.addr, metadata !18977, metadata !DIExpression()), !dbg !18978
  store %struct.htab* %vars, %struct.htab** %vars.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.htab** %vars.addr, metadata !18979, metadata !DIExpression()), !dbg !18980
  store i8* %pcur_loc_changed, i8** %pcur_loc_changed.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %pcur_loc_changed.addr, metadata !18981, metadata !DIExpression()), !dbg !18982
  call void @llvm.dbg.declare(metadata %struct.expand_loc_callback_data* %data, metadata !18983, metadata !DIExpression()), !dbg !18984
  call void @llvm.dbg.declare(metadata i8* %ret, metadata !18985, metadata !DIExpression()), !dbg !18986
  %0 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !18987
  %tobool = icmp ne i32 %0, 0, !dbg !18987
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !18987

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 7009, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !18987
  br label %cond.end, !dbg !18987

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !18987

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !18987
  %1 = load %struct.htab*, %struct.htab** %vars.addr, align 8, !dbg !18988
  %vars1 = getelementptr inbounds %struct.expand_loc_callback_data, %struct.expand_loc_callback_data* %data, i32 0, i32 0, !dbg !18989
  store %struct.htab* %1, %struct.htab** %vars1, align 8, !dbg !18990
  %dummy = getelementptr inbounds %struct.expand_loc_callback_data, %struct.expand_loc_callback_data* %data, i32 0, i32 1, !dbg !18991
  store i8 1, i8* %dummy, align 8, !dbg !18992
  %cur_loc_changed = getelementptr inbounds %struct.expand_loc_callback_data, %struct.expand_loc_callback_data* %data, i32 0, i32 2, !dbg !18993
  store i8 0, i8* %cur_loc_changed, align 1, !dbg !18994
  %2 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !18995
  %3 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @scratch_regs, align 8, !dbg !18996
  %4 = bitcast %struct.expand_loc_callback_data* %data to i8*, !dbg !18997
  %call = call zeroext i8 @cselib_dummy_expand_value_rtx_cb(%struct.rtx_def* %2, %struct.bitmap_head_def* %3, i32 5, %struct.rtx_def* (%struct.rtx_def*, %struct.bitmap_head_def*, i32, i8*)* @vt_expand_loc_callback, i8* %4), !dbg !18998
  store i8 %call, i8* %ret, align 1, !dbg !18999
  %cur_loc_changed2 = getelementptr inbounds %struct.expand_loc_callback_data, %struct.expand_loc_callback_data* %data, i32 0, i32 2, !dbg !19000
  %5 = load i8, i8* %cur_loc_changed2, align 1, !dbg !19000
  %6 = load i8*, i8** %pcur_loc_changed.addr, align 8, !dbg !19001
  store i8 %5, i8* %6, align 1, !dbg !19002
  %7 = load i8, i8* %ret, align 1, !dbg !19003
  ret i8 %7, !dbg !19004
}

declare dso_local zeroext i8 @cselib_dummy_expand_value_rtx_cb(%struct.rtx_def*, %struct.bitmap_head_def*, i32, %struct.rtx_def* (%struct.rtx_def*, %struct.bitmap_head_def*, i32, i8*)*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @vt_expand_loc_callback(%struct.rtx_def* %x, %struct.bitmap_head_def* %regs, i32 %max_depth, i8* %data) #0 !dbg !19005 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %regs.addr = alloca %struct.bitmap_head_def*, align 8
  %max_depth.addr = alloca i32, align 4
  %data.addr = alloca i8*, align 8
  %elcd = alloca %struct.expand_loc_callback_data*, align 8
  %dummy = alloca i8, align 1
  %cur_loc_changed = alloca i8, align 1
  %dv = alloca i8*, align 8
  %var = alloca %struct.variable_def*, align 8
  %loc = alloca %struct.location_chain_def*, align 8
  %result = alloca %struct.rtx_def*, align 8
  %subreg = alloca %struct.rtx_def*, align 8
  %xret = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !19008, metadata !DIExpression()), !dbg !19009
  store %struct.bitmap_head_def* %regs, %struct.bitmap_head_def** %regs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %regs.addr, metadata !19010, metadata !DIExpression()), !dbg !19011
  store i32 %max_depth, i32* %max_depth.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %max_depth.addr, metadata !19012, metadata !DIExpression()), !dbg !19013
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !19014, metadata !DIExpression()), !dbg !19015
  call void @llvm.dbg.declare(metadata %struct.expand_loc_callback_data** %elcd, metadata !19016, metadata !DIExpression()), !dbg !19017
  %0 = load i8*, i8** %data.addr, align 8, !dbg !19018
  %1 = bitcast i8* %0 to %struct.expand_loc_callback_data*, !dbg !19019
  store %struct.expand_loc_callback_data* %1, %struct.expand_loc_callback_data** %elcd, align 8, !dbg !19017
  call void @llvm.dbg.declare(metadata i8* %dummy, metadata !19020, metadata !DIExpression()), !dbg !19021
  %2 = load %struct.expand_loc_callback_data*, %struct.expand_loc_callback_data** %elcd, align 8, !dbg !19022
  %dummy1 = getelementptr inbounds %struct.expand_loc_callback_data, %struct.expand_loc_callback_data* %2, i32 0, i32 1, !dbg !19023
  %3 = load i8, i8* %dummy1, align 8, !dbg !19023
  store i8 %3, i8* %dummy, align 1, !dbg !19021
  call void @llvm.dbg.declare(metadata i8* %cur_loc_changed, metadata !19024, metadata !DIExpression()), !dbg !19025
  %4 = load %struct.expand_loc_callback_data*, %struct.expand_loc_callback_data** %elcd, align 8, !dbg !19026
  %cur_loc_changed2 = getelementptr inbounds %struct.expand_loc_callback_data, %struct.expand_loc_callback_data* %4, i32 0, i32 2, !dbg !19027
  %5 = load i8, i8* %cur_loc_changed2, align 1, !dbg !19027
  store i8 %5, i8* %cur_loc_changed, align 1, !dbg !19025
  call void @llvm.dbg.declare(metadata i8** %dv, metadata !19028, metadata !DIExpression()), !dbg !19029
  call void @llvm.dbg.declare(metadata %struct.variable_def** %var, metadata !19030, metadata !DIExpression()), !dbg !19031
  call void @llvm.dbg.declare(metadata %struct.location_chain_def** %loc, metadata !19032, metadata !DIExpression()), !dbg !19033
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %result, metadata !19034, metadata !DIExpression()), !dbg !19035
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %subreg, metadata !19036, metadata !DIExpression()), !dbg !19037
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %xret, metadata !19038, metadata !DIExpression()), !dbg !19039
  %6 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !19040
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !19040
  %bf.load = load i32, i32* %7, align 8, !dbg !19040
  %bf.clear = and i32 %bf.load, 65535, !dbg !19040
  switch i32 %bf.clear, label %sw.default [
    i32 39, label %sw.bb
    i32 2, label %sw.bb38
    i32 1, label %sw.bb43
  ], !dbg !19041

sw.bb:                                            ; preds = %entry
  %8 = load i8, i8* %dummy, align 1, !dbg !19042
  %tobool = icmp ne i8 %8, 0, !dbg !19042
  br i1 %tobool, label %if.then, label %if.end, !dbg !19045

if.then:                                          ; preds = %sw.bb
  %9 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !19046
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1, !dbg !19046
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !19046
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !19046
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !19046
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !19046
  %11 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %regs.addr, align 8, !dbg !19049
  %12 = load i32, i32* %max_depth.addr, align 4, !dbg !19050
  %sub = sub nsw i32 %12, 1, !dbg !19051
  %13 = load i8*, i8** %data.addr, align 8, !dbg !19052
  %call = call zeroext i8 @cselib_dummy_expand_value_rtx_cb(%struct.rtx_def* %10, %struct.bitmap_head_def* %11, i32 %sub, %struct.rtx_def* (%struct.rtx_def*, %struct.bitmap_head_def*, i32, i8*)* @vt_expand_loc_callback, i8* %13), !dbg !19053
  %tobool3 = icmp ne i8 %call, 0, !dbg !19053
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !19054

if.then4:                                         ; preds = %if.then
  %14 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 16, !dbg !19055
  store %struct.rtx_def* %14, %struct.rtx_def** %retval, align 8, !dbg !19056
  br label %return, !dbg !19056

if.else:                                          ; preds = %if.then
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !19057
  br label %return, !dbg !19057

if.end:                                           ; preds = %sw.bb
  %15 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !19058
  %u5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1, !dbg !19058
  %fld6 = bitcast %union.u* %u5 to [1 x %union.rtunion_def]*, !dbg !19058
  %arrayidx7 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld6, i64 0, i64 0, !dbg !19058
  %rt_rtx8 = bitcast %union.rtunion_def* %arrayidx7 to %struct.rtx_def**, !dbg !19058
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx8, align 8, !dbg !19058
  %17 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %regs.addr, align 8, !dbg !19059
  %18 = load i32, i32* %max_depth.addr, align 4, !dbg !19060
  %sub9 = sub nsw i32 %18, 1, !dbg !19061
  %19 = load i8*, i8** %data.addr, align 8, !dbg !19062
  %call10 = call %struct.rtx_def* @cselib_expand_value_rtx_cb(%struct.rtx_def* %16, %struct.bitmap_head_def* %17, i32 %sub9, %struct.rtx_def* (%struct.rtx_def*, %struct.bitmap_head_def*, i32, i8*)* @vt_expand_loc_callback, i8* %19), !dbg !19063
  store %struct.rtx_def* %call10, %struct.rtx_def** %subreg, align 8, !dbg !19064
  %20 = load %struct.rtx_def*, %struct.rtx_def** %subreg, align 8, !dbg !19065
  %tobool11 = icmp ne %struct.rtx_def* %20, null, !dbg !19065
  br i1 %tobool11, label %if.end13, label %if.then12, !dbg !19067

if.then12:                                        ; preds = %if.end
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !19068
  br label %return, !dbg !19068

if.end13:                                         ; preds = %if.end
  %21 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !19069
  %22 = bitcast %struct.rtx_def* %21 to i32*, !dbg !19069
  %bf.load14 = load i32, i32* %22, align 8, !dbg !19069
  %bf.lshr = lshr i32 %bf.load14, 16, !dbg !19069
  %bf.clear15 = and i32 %bf.lshr, 255, !dbg !19069
  %23 = load %struct.rtx_def*, %struct.rtx_def** %subreg, align 8, !dbg !19070
  %24 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !19071
  %u16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i32 0, i32 1, !dbg !19071
  %fld17 = bitcast %union.u* %u16 to [1 x %union.rtunion_def]*, !dbg !19071
  %arrayidx18 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld17, i64 0, i64 0, !dbg !19071
  %rt_rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**, !dbg !19071
  %25 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx19, align 8, !dbg !19071
  %26 = bitcast %struct.rtx_def* %25 to i32*, !dbg !19071
  %bf.load20 = load i32, i32* %26, align 8, !dbg !19071
  %bf.lshr21 = lshr i32 %bf.load20, 16, !dbg !19071
  %bf.clear22 = and i32 %bf.lshr21, 255, !dbg !19071
  %27 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !19072
  %u23 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1, !dbg !19072
  %fld24 = bitcast %union.u* %u23 to [1 x %union.rtunion_def]*, !dbg !19072
  %arrayidx25 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld24, i64 0, i64 1, !dbg !19072
  %rt_uint = bitcast %union.rtunion_def* %arrayidx25 to i32*, !dbg !19072
  %28 = load i32, i32* %rt_uint, align 8, !dbg !19072
  %call26 = call %struct.rtx_def* @simplify_gen_subreg(i32 %bf.clear15, %struct.rtx_def* %23, i32 %bf.clear22, i32 %28), !dbg !19073
  store %struct.rtx_def* %call26, %struct.rtx_def** %result, align 8, !dbg !19074
  %29 = load %struct.rtx_def*, %struct.rtx_def** %result, align 8, !dbg !19075
  %tobool27 = icmp ne %struct.rtx_def* %29, null, !dbg !19075
  br i1 %tobool27, label %if.end37, label %if.then28, !dbg !19077

if.then28:                                        ; preds = %if.end13
  %30 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !19078
  %31 = bitcast %struct.rtx_def* %30 to i32*, !dbg !19078
  %bf.load29 = load i32, i32* %31, align 8, !dbg !19078
  %bf.lshr30 = lshr i32 %bf.load29, 16, !dbg !19078
  %bf.clear31 = and i32 %bf.lshr30, 255, !dbg !19078
  %32 = load %struct.rtx_def*, %struct.rtx_def** %subreg, align 8, !dbg !19078
  %33 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !19078
  %u32 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i32 0, i32 1, !dbg !19078
  %fld33 = bitcast %union.u* %u32 to [1 x %union.rtunion_def]*, !dbg !19078
  %arrayidx34 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld33, i64 0, i64 1, !dbg !19078
  %rt_uint35 = bitcast %union.rtunion_def* %arrayidx34 to i32*, !dbg !19078
  %34 = load i32, i32* %rt_uint35, align 8, !dbg !19078
  %call36 = call %struct.rtx_def* @gen_rtx_fmt_ei_stat(i32 39, i32 %bf.clear31, %struct.rtx_def* %32, i32 %34), !dbg !19078
  store %struct.rtx_def* %call36, %struct.rtx_def** %result, align 8, !dbg !19079
  br label %if.end37, !dbg !19080

if.end37:                                         ; preds = %if.then28, %if.end13
  %35 = load %struct.rtx_def*, %struct.rtx_def** %result, align 8, !dbg !19081
  store %struct.rtx_def* %35, %struct.rtx_def** %retval, align 8, !dbg !19082
  br label %return, !dbg !19082

sw.bb38:                                          ; preds = %entry
  %36 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !19083
  %u39 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %36, i32 0, i32 1, !dbg !19083
  %fld40 = bitcast %union.u* %u39 to [1 x %union.rtunion_def]*, !dbg !19083
  %arrayidx41 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld40, i64 0, i64 0, !dbg !19083
  %rt_tree = bitcast %union.rtunion_def* %arrayidx41 to %union.tree_node**, !dbg !19083
  %37 = load %union.tree_node*, %union.tree_node** %rt_tree, align 8, !dbg !19083
  %call42 = call i8* @dv_from_decl(%union.tree_node* %37), !dbg !19084
  store i8* %call42, i8** %dv, align 8, !dbg !19085
  store %struct.rtx_def* null, %struct.rtx_def** %xret, align 8, !dbg !19086
  br label %sw.epilog, !dbg !19087

sw.bb43:                                          ; preds = %entry
  %38 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !19088
  %call44 = call i8* @dv_from_value(%struct.rtx_def* %38), !dbg !19089
  store i8* %call44, i8** %dv, align 8, !dbg !19090
  %39 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !19091
  store %struct.rtx_def* %39, %struct.rtx_def** %xret, align 8, !dbg !19092
  br label %sw.epilog, !dbg !19093

sw.default:                                       ; preds = %entry
  %40 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !19094
  store %struct.rtx_def* %40, %struct.rtx_def** %retval, align 8, !dbg !19095
  br label %return, !dbg !19095

sw.epilog:                                        ; preds = %sw.bb43, %sw.bb38
  %41 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !19096
  %42 = bitcast %struct.rtx_def* %41 to i32*, !dbg !19096
  %bf.load45 = load i32, i32* %42, align 8, !dbg !19096
  %bf.lshr46 = lshr i32 %bf.load45, 29, !dbg !19096
  %bf.clear47 = and i32 %bf.lshr46, 1, !dbg !19096
  %tobool48 = icmp ne i32 %bf.clear47, 0, !dbg !19096
  br i1 %tobool48, label %if.then49, label %if.end50, !dbg !19098

if.then49:                                        ; preds = %sw.epilog
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !19099
  br label %return, !dbg !19099

if.end50:                                         ; preds = %sw.epilog
  %43 = load %struct.expand_loc_callback_data*, %struct.expand_loc_callback_data** %elcd, align 8, !dbg !19100
  %vars = getelementptr inbounds %struct.expand_loc_callback_data, %struct.expand_loc_callback_data* %43, i32 0, i32 0, !dbg !19101
  %44 = load %struct.htab*, %struct.htab** %vars, align 8, !dbg !19101
  %45 = load i8*, i8** %dv, align 8, !dbg !19102
  %46 = load i8*, i8** %dv, align 8, !dbg !19103
  %call51 = call i32 @dv_htab_hash(i8* %46), !dbg !19104
  %call52 = call i8* @htab_find_with_hash(%struct.htab* %44, i8* %45, i32 %call51), !dbg !19105
  %47 = bitcast i8* %call52 to %struct.variable_def*, !dbg !19106
  store %struct.variable_def* %47, %struct.variable_def** %var, align 8, !dbg !19107
  %48 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !19108
  %tobool53 = icmp ne %struct.variable_def* %48, null, !dbg !19108
  br i1 %tobool53, label %if.end62, label %if.then54, !dbg !19110

if.then54:                                        ; preds = %if.end50
  %49 = load i8, i8* %dummy, align 1, !dbg !19111
  %conv = zext i8 %49 to i32, !dbg !19111
  %tobool55 = icmp ne i32 %conv, 0, !dbg !19111
  br i1 %tobool55, label %land.lhs.true, label %if.end61, !dbg !19114

land.lhs.true:                                    ; preds = %if.then54
  %50 = load i8*, i8** %dv, align 8, !dbg !19115
  %call56 = call zeroext i8 @dv_changed_p(i8* %50), !dbg !19116
  %conv57 = zext i8 %call56 to i32, !dbg !19116
  %tobool58 = icmp ne i32 %conv57, 0, !dbg !19116
  br i1 %tobool58, label %if.then59, label %if.end61, !dbg !19117

if.then59:                                        ; preds = %land.lhs.true
  %51 = load %struct.expand_loc_callback_data*, %struct.expand_loc_callback_data** %elcd, align 8, !dbg !19118
  %cur_loc_changed60 = getelementptr inbounds %struct.expand_loc_callback_data, %struct.expand_loc_callback_data* %51, i32 0, i32 2, !dbg !19119
  store i8 1, i8* %cur_loc_changed60, align 1, !dbg !19120
  br label %if.end61, !dbg !19118

if.end61:                                         ; preds = %if.then59, %land.lhs.true, %if.then54
  %52 = load %struct.rtx_def*, %struct.rtx_def** %xret, align 8, !dbg !19121
  store %struct.rtx_def* %52, %struct.rtx_def** %retval, align 8, !dbg !19122
  br label %return, !dbg !19122

if.end62:                                         ; preds = %if.end50
  %53 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !19123
  %n_var_parts = getelementptr inbounds %struct.variable_def, %struct.variable_def* %53, i32 0, i32 2, !dbg !19125
  %54 = load i8, i8* %n_var_parts, align 4, !dbg !19125
  %conv63 = sext i8 %54 to i32, !dbg !19123
  %cmp = icmp eq i32 %conv63, 0, !dbg !19126
  br i1 %cmp, label %if.then65, label %if.end70, !dbg !19127

if.then65:                                        ; preds = %if.end62
  %55 = load i8, i8* %dummy, align 1, !dbg !19128
  %tobool66 = icmp ne i8 %55, 0, !dbg !19128
  br i1 %tobool66, label %if.then67, label %if.end69, !dbg !19131

if.then67:                                        ; preds = %if.then65
  %56 = load %struct.expand_loc_callback_data*, %struct.expand_loc_callback_data** %elcd, align 8, !dbg !19132
  %cur_loc_changed68 = getelementptr inbounds %struct.expand_loc_callback_data, %struct.expand_loc_callback_data* %56, i32 0, i32 2, !dbg !19133
  store i8 1, i8* %cur_loc_changed68, align 1, !dbg !19134
  br label %if.end69, !dbg !19132

if.end69:                                         ; preds = %if.then67, %if.then65
  %57 = load %struct.rtx_def*, %struct.rtx_def** %xret, align 8, !dbg !19135
  store %struct.rtx_def* %57, %struct.rtx_def** %retval, align 8, !dbg !19136
  br label %return, !dbg !19136

if.end70:                                         ; preds = %if.end62
  %58 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !19137
  %n_var_parts71 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %58, i32 0, i32 2, !dbg !19137
  %59 = load i8, i8* %n_var_parts71, align 4, !dbg !19137
  %conv72 = sext i8 %59 to i32, !dbg !19137
  %cmp73 = icmp eq i32 %conv72, 1, !dbg !19137
  br i1 %cmp73, label %cond.false, label %cond.true, !dbg !19137

cond.true:                                        ; preds = %if.end70
  call void @fancy_abort(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i32 6914, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)), !dbg !19137
  br label %cond.end, !dbg !19137

cond.false:                                       ; preds = %if.end70
  br label %cond.end, !dbg !19137

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !19137
  %60 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !19138
  %61 = bitcast %struct.rtx_def* %60 to i32*, !dbg !19138
  %bf.load75 = load i32, i32* %61, align 8, !dbg !19139
  %bf.clear76 = and i32 %bf.load75, -536870913, !dbg !19139
  %bf.set = or i32 %bf.clear76, 536870912, !dbg !19139
  store i32 %bf.set, i32* %61, align 8, !dbg !19139
  store %struct.rtx_def* null, %struct.rtx_def** %result, align 8, !dbg !19140
  %62 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !19141
  %var_part = getelementptr inbounds %struct.variable_def, %struct.variable_def* %62, i32 0, i32 5, !dbg !19143
  %arrayidx77 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part, i64 0, i64 0, !dbg !19141
  %cur_loc = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx77, i32 0, i32 1, !dbg !19144
  %63 = load %struct.rtx_def*, %struct.rtx_def** %cur_loc, align 8, !dbg !19144
  %tobool78 = icmp ne %struct.rtx_def* %63, null, !dbg !19141
  br i1 %tobool78, label %if.then79, label %if.end98, !dbg !19145

if.then79:                                        ; preds = %cond.end
  %64 = load i8, i8* %dummy, align 1, !dbg !19146
  %tobool80 = icmp ne i8 %64, 0, !dbg !19146
  br i1 %tobool80, label %if.then81, label %if.else89, !dbg !19149

if.then81:                                        ; preds = %if.then79
  %65 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !19150
  %var_part82 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %65, i32 0, i32 5, !dbg !19153
  %arrayidx83 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part82, i64 0, i64 0, !dbg !19150
  %cur_loc84 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx83, i32 0, i32 1, !dbg !19154
  %66 = load %struct.rtx_def*, %struct.rtx_def** %cur_loc84, align 8, !dbg !19154
  %67 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %regs.addr, align 8, !dbg !19155
  %68 = load i32, i32* %max_depth.addr, align 4, !dbg !19156
  %69 = load i8*, i8** %data.addr, align 8, !dbg !19157
  %call85 = call zeroext i8 @cselib_dummy_expand_value_rtx_cb(%struct.rtx_def* %66, %struct.bitmap_head_def* %67, i32 %68, %struct.rtx_def* (%struct.rtx_def*, %struct.bitmap_head_def*, i32, i8*)* @vt_expand_loc_callback, i8* %69), !dbg !19158
  %tobool86 = icmp ne i8 %call85, 0, !dbg !19158
  br i1 %tobool86, label %if.then87, label %if.end88, !dbg !19159

if.then87:                                        ; preds = %if.then81
  %70 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 16, !dbg !19160
  store %struct.rtx_def* %70, %struct.rtx_def** %result, align 8, !dbg !19161
  br label %if.end88, !dbg !19162

if.end88:                                         ; preds = %if.then87, %if.then81
  br label %if.end94, !dbg !19163

if.else89:                                        ; preds = %if.then79
  %71 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !19164
  %var_part90 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %71, i32 0, i32 5, !dbg !19165
  %arrayidx91 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part90, i64 0, i64 0, !dbg !19164
  %cur_loc92 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx91, i32 0, i32 1, !dbg !19166
  %72 = load %struct.rtx_def*, %struct.rtx_def** %cur_loc92, align 8, !dbg !19166
  %73 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %regs.addr, align 8, !dbg !19167
  %74 = load i32, i32* %max_depth.addr, align 4, !dbg !19168
  %75 = load i8*, i8** %data.addr, align 8, !dbg !19169
  %call93 = call %struct.rtx_def* @cselib_expand_value_rtx_cb(%struct.rtx_def* %72, %struct.bitmap_head_def* %73, i32 %74, %struct.rtx_def* (%struct.rtx_def*, %struct.bitmap_head_def*, i32, i8*)* @vt_expand_loc_callback, i8* %75), !dbg !19170
  store %struct.rtx_def* %call93, %struct.rtx_def** %result, align 8, !dbg !19171
  br label %if.end94

if.end94:                                         ; preds = %if.else89, %if.end88
  %76 = load %struct.rtx_def*, %struct.rtx_def** %result, align 8, !dbg !19172
  %tobool95 = icmp ne %struct.rtx_def* %76, null, !dbg !19172
  br i1 %tobool95, label %if.then96, label %if.end97, !dbg !19174

if.then96:                                        ; preds = %if.end94
  %77 = load i8*, i8** %dv, align 8, !dbg !19175
  call void @set_dv_changed(i8* %77, i8 zeroext 0), !dbg !19176
  br label %if.end97, !dbg !19176

if.end97:                                         ; preds = %if.then96, %if.end94
  br label %if.end98, !dbg !19177

if.end98:                                         ; preds = %if.end97, %cond.end
  %78 = load %struct.rtx_def*, %struct.rtx_def** %result, align 8, !dbg !19178
  %tobool99 = icmp ne %struct.rtx_def* %78, null, !dbg !19178
  br i1 %tobool99, label %if.end152, label %land.lhs.true100, !dbg !19180

land.lhs.true100:                                 ; preds = %if.end98
  %79 = load i8*, i8** %dv, align 8, !dbg !19181
  %call101 = call zeroext i8 @dv_changed_p(i8* %79), !dbg !19182
  %conv102 = zext i8 %call101 to i32, !dbg !19182
  %tobool103 = icmp ne i32 %conv102, 0, !dbg !19182
  br i1 %tobool103, label %if.then104, label %if.end152, !dbg !19183

if.then104:                                       ; preds = %land.lhs.true100
  %80 = load i8*, i8** %dv, align 8, !dbg !19184
  call void @set_dv_changed(i8* %80, i8 zeroext 0), !dbg !19186
  %81 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !19187
  %var_part105 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %81, i32 0, i32 5, !dbg !19189
  %arrayidx106 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part105, i64 0, i64 0, !dbg !19187
  %loc_chain = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx106, i32 0, i32 0, !dbg !19190
  %82 = load %struct.location_chain_def*, %struct.location_chain_def** %loc_chain, align 8, !dbg !19190
  store %struct.location_chain_def* %82, %struct.location_chain_def** %loc, align 8, !dbg !19191
  br label %for.cond, !dbg !19192

for.cond:                                         ; preds = %for.inc, %if.then104
  %83 = load %struct.location_chain_def*, %struct.location_chain_def** %loc, align 8, !dbg !19193
  %tobool107 = icmp ne %struct.location_chain_def* %83, null, !dbg !19195
  br i1 %tobool107, label %for.body, label %for.end, !dbg !19195

for.body:                                         ; preds = %for.cond
  %84 = load %struct.location_chain_def*, %struct.location_chain_def** %loc, align 8, !dbg !19196
  %loc108 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %84, i32 0, i32 1, !dbg !19198
  %85 = load %struct.rtx_def*, %struct.rtx_def** %loc108, align 8, !dbg !19198
  %86 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !19199
  %var_part109 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %86, i32 0, i32 5, !dbg !19200
  %arrayidx110 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part109, i64 0, i64 0, !dbg !19199
  %cur_loc111 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx110, i32 0, i32 1, !dbg !19201
  %87 = load %struct.rtx_def*, %struct.rtx_def** %cur_loc111, align 8, !dbg !19201
  %cmp112 = icmp eq %struct.rtx_def* %85, %87, !dbg !19202
  br i1 %cmp112, label %if.then114, label %if.else115, !dbg !19203

if.then114:                                       ; preds = %for.body
  br label %for.inc, !dbg !19204

if.else115:                                       ; preds = %for.body
  %88 = load i8, i8* %dummy, align 1, !dbg !19205
  %tobool116 = icmp ne i8 %88, 0, !dbg !19205
  br i1 %tobool116, label %if.then117, label %if.else124, !dbg !19207

if.then117:                                       ; preds = %if.else115
  %89 = load i8, i8* %cur_loc_changed, align 1, !dbg !19208
  %90 = load %struct.expand_loc_callback_data*, %struct.expand_loc_callback_data** %elcd, align 8, !dbg !19210
  %cur_loc_changed118 = getelementptr inbounds %struct.expand_loc_callback_data, %struct.expand_loc_callback_data* %90, i32 0, i32 2, !dbg !19211
  store i8 %89, i8* %cur_loc_changed118, align 1, !dbg !19212
  %91 = load %struct.location_chain_def*, %struct.location_chain_def** %loc, align 8, !dbg !19213
  %loc119 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %91, i32 0, i32 1, !dbg !19215
  %92 = load %struct.rtx_def*, %struct.rtx_def** %loc119, align 8, !dbg !19215
  %93 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %regs.addr, align 8, !dbg !19216
  %94 = load i32, i32* %max_depth.addr, align 4, !dbg !19217
  %95 = load i8*, i8** %data.addr, align 8, !dbg !19218
  %call120 = call zeroext i8 @cselib_dummy_expand_value_rtx_cb(%struct.rtx_def* %92, %struct.bitmap_head_def* %93, i32 %94, %struct.rtx_def* (%struct.rtx_def*, %struct.bitmap_head_def*, i32, i8*)* @vt_expand_loc_callback, i8* %95), !dbg !19219
  %tobool121 = icmp ne i8 %call120, 0, !dbg !19219
  br i1 %tobool121, label %if.then122, label %if.end123, !dbg !19220

if.then122:                                       ; preds = %if.then117
  %96 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 16, !dbg !19221
  store %struct.rtx_def* %96, %struct.rtx_def** %result, align 8, !dbg !19223
  br label %for.end, !dbg !19224

if.end123:                                        ; preds = %if.then117
  br label %if.end130, !dbg !19225

if.else124:                                       ; preds = %if.else115
  %97 = load %struct.location_chain_def*, %struct.location_chain_def** %loc, align 8, !dbg !19226
  %loc125 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %97, i32 0, i32 1, !dbg !19228
  %98 = load %struct.rtx_def*, %struct.rtx_def** %loc125, align 8, !dbg !19228
  %99 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %regs.addr, align 8, !dbg !19229
  %100 = load i32, i32* %max_depth.addr, align 4, !dbg !19230
  %101 = load i8*, i8** %data.addr, align 8, !dbg !19231
  %call126 = call %struct.rtx_def* @cselib_expand_value_rtx_cb(%struct.rtx_def* %98, %struct.bitmap_head_def* %99, i32 %100, %struct.rtx_def* (%struct.rtx_def*, %struct.bitmap_head_def*, i32, i8*)* @vt_expand_loc_callback, i8* %101), !dbg !19232
  store %struct.rtx_def* %call126, %struct.rtx_def** %result, align 8, !dbg !19233
  %102 = load %struct.rtx_def*, %struct.rtx_def** %result, align 8, !dbg !19234
  %tobool127 = icmp ne %struct.rtx_def* %102, null, !dbg !19234
  br i1 %tobool127, label %if.then128, label %if.end129, !dbg !19236

if.then128:                                       ; preds = %if.else124
  br label %for.end, !dbg !19237

if.end129:                                        ; preds = %if.else124
  br label %if.end130

if.end130:                                        ; preds = %if.end129, %if.end123
  br label %if.end131

if.end131:                                        ; preds = %if.end130
  br label %for.inc, !dbg !19201

for.inc:                                          ; preds = %if.end131, %if.then114
  %103 = load %struct.location_chain_def*, %struct.location_chain_def** %loc, align 8, !dbg !19238
  %next = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %103, i32 0, i32 0, !dbg !19239
  %104 = load %struct.location_chain_def*, %struct.location_chain_def** %next, align 8, !dbg !19239
  store %struct.location_chain_def* %104, %struct.location_chain_def** %loc, align 8, !dbg !19240
  br label %for.cond, !dbg !19241, !llvm.loop !19242

for.end:                                          ; preds = %if.then128, %if.then122, %for.cond
  %105 = load i8, i8* %dummy, align 1, !dbg !19244
  %conv132 = zext i8 %105 to i32, !dbg !19244
  %tobool133 = icmp ne i32 %conv132, 0, !dbg !19244
  br i1 %tobool133, label %land.lhs.true134, label %if.end142, !dbg !19246

land.lhs.true134:                                 ; preds = %for.end
  %106 = load %struct.rtx_def*, %struct.rtx_def** %result, align 8, !dbg !19247
  %tobool135 = icmp ne %struct.rtx_def* %106, null, !dbg !19247
  br i1 %tobool135, label %if.then140, label %lor.lhs.false, !dbg !19248

lor.lhs.false:                                    ; preds = %land.lhs.true134
  %107 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !19249
  %var_part136 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %107, i32 0, i32 5, !dbg !19250
  %arrayidx137 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part136, i64 0, i64 0, !dbg !19249
  %cur_loc138 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx137, i32 0, i32 1, !dbg !19251
  %108 = load %struct.rtx_def*, %struct.rtx_def** %cur_loc138, align 8, !dbg !19251
  %tobool139 = icmp ne %struct.rtx_def* %108, null, !dbg !19249
  br i1 %tobool139, label %if.then140, label %if.end142, !dbg !19252

if.then140:                                       ; preds = %lor.lhs.false, %land.lhs.true134
  %109 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !19253
  %cur_loc_changed141 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %109, i32 0, i32 3, !dbg !19254
  store i8 1, i8* %cur_loc_changed141, align 1, !dbg !19255
  br label %if.end142, !dbg !19253

if.end142:                                        ; preds = %if.then140, %lor.lhs.false, %for.end
  %110 = load %struct.location_chain_def*, %struct.location_chain_def** %loc, align 8, !dbg !19256
  %tobool143 = icmp ne %struct.location_chain_def* %110, null, !dbg !19256
  br i1 %tobool143, label %cond.true144, label %cond.false146, !dbg !19256

cond.true144:                                     ; preds = %if.end142
  %111 = load %struct.location_chain_def*, %struct.location_chain_def** %loc, align 8, !dbg !19257
  %loc145 = getelementptr inbounds %struct.location_chain_def, %struct.location_chain_def* %111, i32 0, i32 1, !dbg !19258
  %112 = load %struct.rtx_def*, %struct.rtx_def** %loc145, align 8, !dbg !19258
  br label %cond.end147, !dbg !19256

cond.false146:                                    ; preds = %if.end142
  br label %cond.end147, !dbg !19256

cond.end147:                                      ; preds = %cond.false146, %cond.true144
  %cond148 = phi %struct.rtx_def* [ %112, %cond.true144 ], [ null, %cond.false146 ], !dbg !19256
  %113 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !19259
  %var_part149 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %113, i32 0, i32 5, !dbg !19260
  %arrayidx150 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part149, i64 0, i64 0, !dbg !19259
  %cur_loc151 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx150, i32 0, i32 1, !dbg !19261
  store %struct.rtx_def* %cond148, %struct.rtx_def** %cur_loc151, align 8, !dbg !19262
  br label %if.end152, !dbg !19263

if.end152:                                        ; preds = %cond.end147, %land.lhs.true100, %if.end98
  %114 = load i8, i8* %dummy, align 1, !dbg !19264
  %tobool153 = icmp ne i8 %114, 0, !dbg !19264
  br i1 %tobool153, label %if.then154, label %if.end171, !dbg !19266

if.then154:                                       ; preds = %if.end152
  %115 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !19267
  %cur_loc_changed155 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %115, i32 0, i32 3, !dbg !19270
  %116 = load i8, i8* %cur_loc_changed155, align 1, !dbg !19270
  %tobool156 = icmp ne i8 %116, 0, !dbg !19267
  br i1 %tobool156, label %if.then157, label %if.else159, !dbg !19271

if.then157:                                       ; preds = %if.then154
  %117 = load %struct.expand_loc_callback_data*, %struct.expand_loc_callback_data** %elcd, align 8, !dbg !19272
  %cur_loc_changed158 = getelementptr inbounds %struct.expand_loc_callback_data, %struct.expand_loc_callback_data* %117, i32 0, i32 2, !dbg !19273
  store i8 1, i8* %cur_loc_changed158, align 1, !dbg !19274
  br label %if.end170, !dbg !19272

if.else159:                                       ; preds = %if.then154
  %118 = load %struct.rtx_def*, %struct.rtx_def** %result, align 8, !dbg !19275
  %tobool160 = icmp ne %struct.rtx_def* %118, null, !dbg !19275
  br i1 %tobool160, label %if.end169, label %land.lhs.true161, !dbg !19277

land.lhs.true161:                                 ; preds = %if.else159
  %119 = load %struct.variable_def*, %struct.variable_def** %var, align 8, !dbg !19278
  %var_part162 = getelementptr inbounds %struct.variable_def, %struct.variable_def* %119, i32 0, i32 5, !dbg !19279
  %arrayidx163 = getelementptr inbounds [1 x %struct.variable_part_def], [1 x %struct.variable_part_def]* %var_part162, i64 0, i64 0, !dbg !19278
  %cur_loc164 = getelementptr inbounds %struct.variable_part_def, %struct.variable_part_def* %arrayidx163, i32 0, i32 1, !dbg !19280
  %120 = load %struct.rtx_def*, %struct.rtx_def** %cur_loc164, align 8, !dbg !19280
  %cmp165 = icmp eq %struct.rtx_def* %120, null, !dbg !19281
  br i1 %cmp165, label %if.then167, label %if.end169, !dbg !19282

if.then167:                                       ; preds = %land.lhs.true161
  %121 = load i8, i8* %cur_loc_changed, align 1, !dbg !19283
  %122 = load %struct.expand_loc_callback_data*, %struct.expand_loc_callback_data** %elcd, align 8, !dbg !19284
  %cur_loc_changed168 = getelementptr inbounds %struct.expand_loc_callback_data, %struct.expand_loc_callback_data* %122, i32 0, i32 2, !dbg !19285
  store i8 %121, i8* %cur_loc_changed168, align 1, !dbg !19286
  br label %if.end169, !dbg !19284

if.end169:                                        ; preds = %if.then167, %land.lhs.true161, %if.else159
  br label %if.end170

if.end170:                                        ; preds = %if.end169, %if.then157
  br label %if.end171, !dbg !19287

if.end171:                                        ; preds = %if.end170, %if.end152
  %123 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !19288
  %124 = bitcast %struct.rtx_def* %123 to i32*, !dbg !19288
  %bf.load172 = load i32, i32* %124, align 8, !dbg !19289
  %bf.clear173 = and i32 %bf.load172, -536870913, !dbg !19289
  store i32 %bf.clear173, i32* %124, align 8, !dbg !19289
  %125 = load %struct.rtx_def*, %struct.rtx_def** %result, align 8, !dbg !19290
  %tobool174 = icmp ne %struct.rtx_def* %125, null, !dbg !19290
  br i1 %tobool174, label %if.then175, label %if.else176, !dbg !19292

if.then175:                                       ; preds = %if.end171
  %126 = load %struct.rtx_def*, %struct.rtx_def** %result, align 8, !dbg !19293
  store %struct.rtx_def* %126, %struct.rtx_def** %retval, align 8, !dbg !19294
  br label %return, !dbg !19294

if.else176:                                       ; preds = %if.end171
  %127 = load %struct.rtx_def*, %struct.rtx_def** %xret, align 8, !dbg !19295
  store %struct.rtx_def* %127, %struct.rtx_def** %retval, align 8, !dbg !19296
  br label %return, !dbg !19296

return:                                           ; preds = %if.else176, %if.then175, %if.end69, %if.end61, %if.then49, %sw.default, %if.end37, %if.then12, %if.else, %if.then4
  %128 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !19297
  ret %struct.rtx_def* %128, !dbg !19297
}

declare dso_local %struct.rtx_def* @cselib_expand_value_rtx_cb(%struct.rtx_def*, %struct.bitmap_head_def*, i32, %struct.rtx_def* (%struct.rtx_def*, %struct.bitmap_head_def*, i32, i8*)*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @vt_expand_loc(%struct.rtx_def* %loc, %struct.htab* %vars) #0 !dbg !19298 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %loc.addr = alloca %struct.rtx_def*, align 8
  %vars.addr = alloca %struct.htab*, align 8
  %data = alloca %struct.expand_loc_callback_data, align 8
  store %struct.rtx_def* %loc, %struct.rtx_def** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %loc.addr, metadata !19301, metadata !DIExpression()), !dbg !19302
  store %struct.htab* %vars, %struct.htab** %vars.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.htab** %vars.addr, metadata !19303, metadata !DIExpression()), !dbg !19304
  call void @llvm.dbg.declare(metadata %struct.expand_loc_callback_data* %data, metadata !19305, metadata !DIExpression()), !dbg !19306
  %0 = load i32, i32* @flag_var_tracking_assignments, align 4, !dbg !19307
  %tobool = icmp ne i32 %0, 0, !dbg !19307
  br i1 %tobool, label %if.end, label %if.then, !dbg !19309

if.then:                                          ; preds = %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !19310
  store %struct.rtx_def* %1, %struct.rtx_def** %retval, align 8, !dbg !19311
  br label %return, !dbg !19311

if.end:                                           ; preds = %entry
  %2 = load %struct.htab*, %struct.htab** %vars.addr, align 8, !dbg !19312
  %vars1 = getelementptr inbounds %struct.expand_loc_callback_data, %struct.expand_loc_callback_data* %data, i32 0, i32 0, !dbg !19313
  store %struct.htab* %2, %struct.htab** %vars1, align 8, !dbg !19314
  %dummy = getelementptr inbounds %struct.expand_loc_callback_data, %struct.expand_loc_callback_data* %data, i32 0, i32 1, !dbg !19315
  store i8 0, i8* %dummy, align 8, !dbg !19316
  %cur_loc_changed = getelementptr inbounds %struct.expand_loc_callback_data, %struct.expand_loc_callback_data* %data, i32 0, i32 2, !dbg !19317
  store i8 0, i8* %cur_loc_changed, align 1, !dbg !19318
  %3 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !19319
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** @scratch_regs, align 8, !dbg !19320
  %5 = bitcast %struct.expand_loc_callback_data* %data to i8*, !dbg !19321
  %call = call %struct.rtx_def* @cselib_expand_value_rtx_cb(%struct.rtx_def* %3, %struct.bitmap_head_def* %4, i32 5, %struct.rtx_def* (%struct.rtx_def*, %struct.bitmap_head_def*, i32, i8*)* @vt_expand_loc_callback, i8* %5), !dbg !19322
  store %struct.rtx_def* %call, %struct.rtx_def** %loc.addr, align 8, !dbg !19323
  %6 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !19324
  %tobool2 = icmp ne %struct.rtx_def* %6, null, !dbg !19324
  br i1 %tobool2, label %land.lhs.true, label %if.end5, !dbg !19326

land.lhs.true:                                    ; preds = %if.end
  %7 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !19327
  %8 = bitcast %struct.rtx_def* %7 to i32*, !dbg !19327
  %bf.load = load i32, i32* %8, align 8, !dbg !19327
  %bf.clear = and i32 %bf.load, 65535, !dbg !19327
  %cmp = icmp eq i32 %bf.clear, 43, !dbg !19327
  br i1 %cmp, label %if.then3, label %if.end5, !dbg !19328

if.then3:                                         ; preds = %land.lhs.true
  %9 = load %struct.rtx_def* (%struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 40), align 8, !dbg !19329
  %10 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !19330
  %call4 = call %struct.rtx_def* %9(%struct.rtx_def* %10), !dbg !19331
  store %struct.rtx_def* %call4, %struct.rtx_def** %loc.addr, align 8, !dbg !19332
  br label %if.end5, !dbg !19333

if.end5:                                          ; preds = %if.then3, %land.lhs.true, %if.end
  %11 = load %struct.rtx_def*, %struct.rtx_def** %loc.addr, align 8, !dbg !19334
  store %struct.rtx_def* %11, %struct.rtx_def** %retval, align 8, !dbg !19335
  br label %return, !dbg !19335

return:                                           ; preds = %if.end5, %if.then
  %12 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !19336
  ret %struct.rtx_def* %12, !dbg !19336
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @end_hard_regno(i32 %mode, i32 %regno) #0 !dbg !19337 {
entry:
  %mode.addr = alloca i32, align 4
  %regno.addr = alloca i32, align 4
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !19341, metadata !DIExpression()), !dbg !19342
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !19343, metadata !DIExpression()), !dbg !19344
  %0 = load i32, i32* %regno.addr, align 4, !dbg !19345
  %1 = load i32, i32* %regno.addr, align 4, !dbg !19346
  %idxprom = zext i32 %1 to i64, !dbg !19347
  %arrayidx = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom, !dbg !19347
  %2 = load i32, i32* %mode.addr, align 4, !dbg !19348
  %idxprom1 = sext i32 %2 to i64, !dbg !19347
  %arrayidx2 = getelementptr inbounds [87 x i8], [87 x i8]* %arrayidx, i64 0, i64 %idxprom1, !dbg !19347
  %3 = load i8, i8* %arrayidx2, align 1, !dbg !19347
  %conv = zext i8 %3 to i32, !dbg !19347
  %add = add i32 %0, %conv, !dbg !19349
  ret i32 %add, !dbg !19350
}

declare dso_local %struct.rtx_def* @simplify_subreg(i32, %struct.rtx_def*, i32, i32) #2

declare dso_local %struct.rtx_def* @gen_rtx_fmt_tei_stat(i32, i32, %union.tree_node*, %struct.rtx_def*, i32) #2

declare dso_local %struct.rtvec_def* @gen_rtvec_v(i32, %struct.rtx_def**) #2

declare dso_local %struct.rtx_def* @emit_note_after(i32, %struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @emit_note_before(i32, %struct.rtx_def*) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2641, !2642, !2643}
!llvm.ident = !{!2644}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "pass_variable_tracking", scope: !2, file: !3, line: 8514, type: !2615, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !1009, globals: !2545, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "var-tracking.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !13, !189, !384, !512, !518, !523, !528, !546, !553, !560, !703, !715, !720, !734, !739, !744, !757, !772, !809, !831, !865, !988, !993}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "opt_pass_type", file: !6, line: 104, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./tree-pass.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12}
!9 = !DIEnumerator(name: "GIMPLE_PASS", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "RTL_PASS", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "SIMPLE_IPA_PASS", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "IPA_PASS", value: 3, isUnsigned: true)
!13 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !14, line: 74, baseType: !7, size: 32, elements: !15)
!14 = !DIFile(filename: "./timevar.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!15 = !{!16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168, !169, !170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188}
!16 = !DIEnumerator(name: "TV_NONE", value: 0, isUnsigned: true)
!17 = !DIEnumerator(name: "TV_TOTAL", value: 1, isUnsigned: true)
!18 = !DIEnumerator(name: "TV_GC", value: 2, isUnsigned: true)
!19 = !DIEnumerator(name: "TV_DUMP", value: 3, isUnsigned: true)
!20 = !DIEnumerator(name: "TV_CGRAPH", value: 4, isUnsigned: true)
!21 = !DIEnumerator(name: "TV_CGRAPHOPT", value: 5, isUnsigned: true)
!22 = !DIEnumerator(name: "TV_IPA_CONSTANT_PROP", value: 6, isUnsigned: true)
!23 = !DIEnumerator(name: "TV_IPA_LTO_GIMPLE_IO", value: 7, isUnsigned: true)
!24 = !DIEnumerator(name: "TV_IPA_LTO_DECL_IO", value: 8, isUnsigned: true)
!25 = !DIEnumerator(name: "TV_IPA_LTO_CGRAPH_IO", value: 9, isUnsigned: true)
!26 = !DIEnumerator(name: "TV_LTO", value: 10, isUnsigned: true)
!27 = !DIEnumerator(name: "TV_WHOPR_WPA", value: 11, isUnsigned: true)
!28 = !DIEnumerator(name: "TV_WHOPR_WPA_IO", value: 12, isUnsigned: true)
!29 = !DIEnumerator(name: "TV_WHOPR_LTRANS", value: 13, isUnsigned: true)
!30 = !DIEnumerator(name: "TV_WHOPR_WPA_FIXUP", value: 14, isUnsigned: true)
!31 = !DIEnumerator(name: "TV_WHOPR_WPA_LTRANS_EXEC", value: 15, isUnsigned: true)
!32 = !DIEnumerator(name: "TV_IPA_REFERENCE", value: 16, isUnsigned: true)
!33 = !DIEnumerator(name: "TV_IPA_PURE_CONST", value: 17, isUnsigned: true)
!34 = !DIEnumerator(name: "TV_IPA_TYPE_ESCAPE", value: 18, isUnsigned: true)
!35 = !DIEnumerator(name: "TV_IPA_PTA", value: 19, isUnsigned: true)
!36 = !DIEnumerator(name: "TV_IPA_SRA", value: 20, isUnsigned: true)
!37 = !DIEnumerator(name: "TV_IPA_FREE_LANG_DATA", value: 21, isUnsigned: true)
!38 = !DIEnumerator(name: "TV_CFG", value: 22, isUnsigned: true)
!39 = !DIEnumerator(name: "TV_CLEANUP_CFG", value: 23, isUnsigned: true)
!40 = !DIEnumerator(name: "TV_CFG_VERIFY", value: 24, isUnsigned: true)
!41 = !DIEnumerator(name: "TV_DELETE_TRIVIALLY_DEAD", value: 25, isUnsigned: true)
!42 = !DIEnumerator(name: "TV_LIFE", value: 26, isUnsigned: true)
!43 = !DIEnumerator(name: "TV_LIFE_UPDATE", value: 27, isUnsigned: true)
!44 = !DIEnumerator(name: "TV_DF_SCAN", value: 28, isUnsigned: true)
!45 = !DIEnumerator(name: "TV_DF_MD", value: 29, isUnsigned: true)
!46 = !DIEnumerator(name: "TV_DF_RD", value: 30, isUnsigned: true)
!47 = !DIEnumerator(name: "TV_DF_LR", value: 31, isUnsigned: true)
!48 = !DIEnumerator(name: "TV_DF_LIVE", value: 32, isUnsigned: true)
!49 = !DIEnumerator(name: "TV_DF_UREC", value: 33, isUnsigned: true)
!50 = !DIEnumerator(name: "TV_DF_CHAIN", value: 34, isUnsigned: true)
!51 = !DIEnumerator(name: "TV_DF_BYTE_LR", value: 35, isUnsigned: true)
!52 = !DIEnumerator(name: "TV_DF_NOTE", value: 36, isUnsigned: true)
!53 = !DIEnumerator(name: "TV_REG_STATS", value: 37, isUnsigned: true)
!54 = !DIEnumerator(name: "TV_ALIAS_ANALYSIS", value: 38, isUnsigned: true)
!55 = !DIEnumerator(name: "TV_ALIAS_STMT_WALK", value: 39, isUnsigned: true)
!56 = !DIEnumerator(name: "TV_REG_SCAN", value: 40, isUnsigned: true)
!57 = !DIEnumerator(name: "TV_REBUILD_JUMP", value: 41, isUnsigned: true)
!58 = !DIEnumerator(name: "TV_CPP", value: 42, isUnsigned: true)
!59 = !DIEnumerator(name: "TV_LEX", value: 43, isUnsigned: true)
!60 = !DIEnumerator(name: "TV_PARSE", value: 44, isUnsigned: true)
!61 = !DIEnumerator(name: "TV_NAME_LOOKUP", value: 45, isUnsigned: true)
!62 = !DIEnumerator(name: "TV_INLINE_HEURISTICS", value: 46, isUnsigned: true)
!63 = !DIEnumerator(name: "TV_INTEGRATION", value: 47, isUnsigned: true)
!64 = !DIEnumerator(name: "TV_TREE_GIMPLIFY", value: 48, isUnsigned: true)
!65 = !DIEnumerator(name: "TV_TREE_EH", value: 49, isUnsigned: true)
!66 = !DIEnumerator(name: "TV_TREE_CFG", value: 50, isUnsigned: true)
!67 = !DIEnumerator(name: "TV_TREE_CLEANUP_CFG", value: 51, isUnsigned: true)
!68 = !DIEnumerator(name: "TV_TREE_VRP", value: 52, isUnsigned: true)
!69 = !DIEnumerator(name: "TV_TREE_COPY_PROP", value: 53, isUnsigned: true)
!70 = !DIEnumerator(name: "TV_TREE_STORE_COPY_PROP", value: 54, isUnsigned: true)
!71 = !DIEnumerator(name: "TV_FIND_REFERENCED_VARS", value: 55, isUnsigned: true)
!72 = !DIEnumerator(name: "TV_TREE_PTA", value: 56, isUnsigned: true)
!73 = !DIEnumerator(name: "TV_TREE_INSERT_PHI_NODES", value: 57, isUnsigned: true)
!74 = !DIEnumerator(name: "TV_TREE_SSA_REWRITE_BLOCKS", value: 58, isUnsigned: true)
!75 = !DIEnumerator(name: "TV_TREE_SSA_OTHER", value: 59, isUnsigned: true)
!76 = !DIEnumerator(name: "TV_TREE_SSA_INCREMENTAL", value: 60, isUnsigned: true)
!77 = !DIEnumerator(name: "TV_TREE_OPS", value: 61, isUnsigned: true)
!78 = !DIEnumerator(name: "TV_TREE_SSA_DOMINATOR_OPTS", value: 62, isUnsigned: true)
!79 = !DIEnumerator(name: "TV_TREE_SRA", value: 63, isUnsigned: true)
!80 = !DIEnumerator(name: "TV_TREE_STORE_CCP", value: 64, isUnsigned: true)
!81 = !DIEnumerator(name: "TV_TREE_CCP", value: 65, isUnsigned: true)
!82 = !DIEnumerator(name: "TV_TREE_PHI_CPROP", value: 66, isUnsigned: true)
!83 = !DIEnumerator(name: "TV_TREE_SPLIT_EDGES", value: 67, isUnsigned: true)
!84 = !DIEnumerator(name: "TV_TREE_REASSOC", value: 68, isUnsigned: true)
!85 = !DIEnumerator(name: "TV_TREE_PRE", value: 69, isUnsigned: true)
!86 = !DIEnumerator(name: "TV_TREE_REDPHI", value: 70, isUnsigned: true)
!87 = !DIEnumerator(name: "TV_TREE_FRE", value: 71, isUnsigned: true)
!88 = !DIEnumerator(name: "TV_TREE_SINK", value: 72, isUnsigned: true)
!89 = !DIEnumerator(name: "TV_TREE_PHIOPT", value: 73, isUnsigned: true)
!90 = !DIEnumerator(name: "TV_TREE_FORWPROP", value: 74, isUnsigned: true)
!91 = !DIEnumerator(name: "TV_TREE_PHIPROP", value: 75, isUnsigned: true)
!92 = !DIEnumerator(name: "TV_TREE_DCE", value: 76, isUnsigned: true)
!93 = !DIEnumerator(name: "TV_TREE_CD_DCE", value: 77, isUnsigned: true)
!94 = !DIEnumerator(name: "TV_TREE_CALL_CDCE", value: 78, isUnsigned: true)
!95 = !DIEnumerator(name: "TV_TREE_DSE", value: 79, isUnsigned: true)
!96 = !DIEnumerator(name: "TV_TREE_MERGE_PHI", value: 80, isUnsigned: true)
!97 = !DIEnumerator(name: "TV_TREE_LOOP", value: 81, isUnsigned: true)
!98 = !DIEnumerator(name: "TV_TREE_LOOP_BOUNDS", value: 82, isUnsigned: true)
!99 = !DIEnumerator(name: "TV_LIM", value: 83, isUnsigned: true)
!100 = !DIEnumerator(name: "TV_TREE_LOOP_IVCANON", value: 84, isUnsigned: true)
!101 = !DIEnumerator(name: "TV_SCEV_CONST", value: 85, isUnsigned: true)
!102 = !DIEnumerator(name: "TV_TREE_LOOP_UNSWITCH", value: 86, isUnsigned: true)
!103 = !DIEnumerator(name: "TV_COMPLETE_UNROLL", value: 87, isUnsigned: true)
!104 = !DIEnumerator(name: "TV_TREE_PARALLELIZE_LOOPS", value: 88, isUnsigned: true)
!105 = !DIEnumerator(name: "TV_TREE_VECTORIZATION", value: 89, isUnsigned: true)
!106 = !DIEnumerator(name: "TV_TREE_SLP_VECTORIZATION", value: 90, isUnsigned: true)
!107 = !DIEnumerator(name: "TV_GRAPHITE_TRANSFORMS", value: 91, isUnsigned: true)
!108 = !DIEnumerator(name: "TV_GRAPHITE_DATA_DEPS", value: 92, isUnsigned: true)
!109 = !DIEnumerator(name: "TV_GRAPHITE_CODE_GEN", value: 93, isUnsigned: true)
!110 = !DIEnumerator(name: "TV_TREE_LINEAR_TRANSFORM", value: 94, isUnsigned: true)
!111 = !DIEnumerator(name: "TV_TREE_LOOP_DISTRIBUTION", value: 95, isUnsigned: true)
!112 = !DIEnumerator(name: "TV_CHECK_DATA_DEPS", value: 96, isUnsigned: true)
!113 = !DIEnumerator(name: "TV_TREE_PREFETCH", value: 97, isUnsigned: true)
!114 = !DIEnumerator(name: "TV_TREE_LOOP_IVOPTS", value: 98, isUnsigned: true)
!115 = !DIEnumerator(name: "TV_PREDCOM", value: 99, isUnsigned: true)
!116 = !DIEnumerator(name: "TV_TREE_LOOP_INIT", value: 100, isUnsigned: true)
!117 = !DIEnumerator(name: "TV_TREE_LOOP_FINI", value: 101, isUnsigned: true)
!118 = !DIEnumerator(name: "TV_TREE_CH", value: 102, isUnsigned: true)
!119 = !DIEnumerator(name: "TV_TREE_SSA_UNCPROP", value: 103, isUnsigned: true)
!120 = !DIEnumerator(name: "TV_TREE_SSA_TO_NORMAL", value: 104, isUnsigned: true)
!121 = !DIEnumerator(name: "TV_TREE_NRV", value: 105, isUnsigned: true)
!122 = !DIEnumerator(name: "TV_TREE_COPY_RENAME", value: 106, isUnsigned: true)
!123 = !DIEnumerator(name: "TV_TREE_SSA_VERIFY", value: 107, isUnsigned: true)
!124 = !DIEnumerator(name: "TV_TREE_STMT_VERIFY", value: 108, isUnsigned: true)
!125 = !DIEnumerator(name: "TV_TREE_SWITCH_CONVERSION", value: 109, isUnsigned: true)
!126 = !DIEnumerator(name: "TV_CGRAPH_VERIFY", value: 110, isUnsigned: true)
!127 = !DIEnumerator(name: "TV_DOM_FRONTIERS", value: 111, isUnsigned: true)
!128 = !DIEnumerator(name: "TV_DOMINANCE", value: 112, isUnsigned: true)
!129 = !DIEnumerator(name: "TV_CONTROL_DEPENDENCES", value: 113, isUnsigned: true)
!130 = !DIEnumerator(name: "TV_OVERLOAD", value: 114, isUnsigned: true)
!131 = !DIEnumerator(name: "TV_TEMPLATE_INSTANTIATION", value: 115, isUnsigned: true)
!132 = !DIEnumerator(name: "TV_EXPAND", value: 116, isUnsigned: true)
!133 = !DIEnumerator(name: "TV_VARCONST", value: 117, isUnsigned: true)
!134 = !DIEnumerator(name: "TV_LOWER_SUBREG", value: 118, isUnsigned: true)
!135 = !DIEnumerator(name: "TV_JUMP", value: 119, isUnsigned: true)
!136 = !DIEnumerator(name: "TV_FWPROP", value: 120, isUnsigned: true)
!137 = !DIEnumerator(name: "TV_CSE", value: 121, isUnsigned: true)
!138 = !DIEnumerator(name: "TV_DCE", value: 122, isUnsigned: true)
!139 = !DIEnumerator(name: "TV_DSE1", value: 123, isUnsigned: true)
!140 = !DIEnumerator(name: "TV_DSE2", value: 124, isUnsigned: true)
!141 = !DIEnumerator(name: "TV_LOOP", value: 125, isUnsigned: true)
!142 = !DIEnumerator(name: "TV_LOOP_MOVE_INVARIANTS", value: 126, isUnsigned: true)
!143 = !DIEnumerator(name: "TV_LOOP_UNSWITCH", value: 127, isUnsigned: true)
!144 = !DIEnumerator(name: "TV_LOOP_UNROLL", value: 128, isUnsigned: true)
!145 = !DIEnumerator(name: "TV_LOOP_DOLOOP", value: 129, isUnsigned: true)
!146 = !DIEnumerator(name: "TV_CPROP", value: 130, isUnsigned: true)
!147 = !DIEnumerator(name: "TV_PRE", value: 131, isUnsigned: true)
!148 = !DIEnumerator(name: "TV_HOIST", value: 132, isUnsigned: true)
!149 = !DIEnumerator(name: "TV_LSM", value: 133, isUnsigned: true)
!150 = !DIEnumerator(name: "TV_TRACER", value: 134, isUnsigned: true)
!151 = !DIEnumerator(name: "TV_WEB", value: 135, isUnsigned: true)
!152 = !DIEnumerator(name: "TV_AUTO_INC_DEC", value: 136, isUnsigned: true)
!153 = !DIEnumerator(name: "TV_CSE2", value: 137, isUnsigned: true)
!154 = !DIEnumerator(name: "TV_BRANCH_PROB", value: 138, isUnsigned: true)
!155 = !DIEnumerator(name: "TV_VPT", value: 139, isUnsigned: true)
!156 = !DIEnumerator(name: "TV_COMBINE", value: 140, isUnsigned: true)
!157 = !DIEnumerator(name: "TV_IFCVT", value: 141, isUnsigned: true)
!158 = !DIEnumerator(name: "TV_REGMOVE", value: 142, isUnsigned: true)
!159 = !DIEnumerator(name: "TV_MODE_SWITCH", value: 143, isUnsigned: true)
!160 = !DIEnumerator(name: "TV_SMS", value: 144, isUnsigned: true)
!161 = !DIEnumerator(name: "TV_SCHED", value: 145, isUnsigned: true)
!162 = !DIEnumerator(name: "TV_LOCAL_ALLOC", value: 146, isUnsigned: true)
!163 = !DIEnumerator(name: "TV_GLOBAL_ALLOC", value: 147, isUnsigned: true)
!164 = !DIEnumerator(name: "TV_IRA", value: 148, isUnsigned: true)
!165 = !DIEnumerator(name: "TV_RELOAD", value: 149, isUnsigned: true)
!166 = !DIEnumerator(name: "TV_RELOAD_CSE_REGS", value: 150, isUnsigned: true)
!167 = !DIEnumerator(name: "TV_SEQABSTR", value: 151, isUnsigned: true)
!168 = !DIEnumerator(name: "TV_GCSE_AFTER_RELOAD", value: 152, isUnsigned: true)
!169 = !DIEnumerator(name: "TV_THREAD_PROLOGUE_AND_EPILOGUE", value: 153, isUnsigned: true)
!170 = !DIEnumerator(name: "TV_IFCVT2", value: 154, isUnsigned: true)
!171 = !DIEnumerator(name: "TV_COMBINE_STACK_ADJUST", value: 155, isUnsigned: true)
!172 = !DIEnumerator(name: "TV_PEEPHOLE2", value: 156, isUnsigned: true)
!173 = !DIEnumerator(name: "TV_RENAME_REGISTERS", value: 157, isUnsigned: true)
!174 = !DIEnumerator(name: "TV_CPROP_REGISTERS", value: 158, isUnsigned: true)
!175 = !DIEnumerator(name: "TV_SCHED2", value: 159, isUnsigned: true)
!176 = !DIEnumerator(name: "TV_MACH_DEP", value: 160, isUnsigned: true)
!177 = !DIEnumerator(name: "TV_DBR_SCHED", value: 161, isUnsigned: true)
!178 = !DIEnumerator(name: "TV_REORDER_BLOCKS", value: 162, isUnsigned: true)
!179 = !DIEnumerator(name: "TV_SHORTEN_BRANCH", value: 163, isUnsigned: true)
!180 = !DIEnumerator(name: "TV_REG_STACK", value: 164, isUnsigned: true)
!181 = !DIEnumerator(name: "TV_FINAL", value: 165, isUnsigned: true)
!182 = !DIEnumerator(name: "TV_SYMOUT", value: 166, isUnsigned: true)
!183 = !DIEnumerator(name: "TV_VAR_TRACKING", value: 167, isUnsigned: true)
!184 = !DIEnumerator(name: "TV_TREE_IFCOMBINE", value: 168, isUnsigned: true)
!185 = !DIEnumerator(name: "TV_PLUGIN_INIT", value: 169, isUnsigned: true)
!186 = !DIEnumerator(name: "TV_PLUGIN_RUN", value: 170, isUnsigned: true)
!187 = !DIEnumerator(name: "TV_REST_OF_COMPILATION", value: 171, isUnsigned: true)
!188 = !DIEnumerator(name: "TIMEVAR_LAST", value: 172, isUnsigned: true)
!189 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !190, line: 39, baseType: !7, size: 32, elements: !191)
!190 = !DIFile(filename: "./tree.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!191 = !{!192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383}
!192 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!193 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!194 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!195 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!196 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!197 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!198 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!199 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!200 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!201 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!202 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!203 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!204 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!205 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!206 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!207 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!208 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!209 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!210 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!211 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!212 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!213 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!214 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!215 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!216 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!217 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!218 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!219 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!220 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!221 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!222 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!223 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!224 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!225 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!226 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!227 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!228 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!229 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!230 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!231 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!232 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!233 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!234 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!235 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!236 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!237 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!238 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!239 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!240 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!241 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!242 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!243 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!244 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!245 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!246 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!247 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!248 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!249 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!250 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!251 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!252 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!253 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!254 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!255 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!256 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!257 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!258 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!259 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!260 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!261 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!262 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!263 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!264 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!265 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!266 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!267 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!268 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!269 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!270 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!271 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!272 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!273 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!274 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!275 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!276 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!277 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!278 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!279 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!280 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!281 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!282 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!283 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!284 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!285 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!286 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!287 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!288 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!289 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!290 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!291 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!292 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!293 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!294 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!295 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!296 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!297 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!298 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!299 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!300 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!301 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!302 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!303 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!304 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!305 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!306 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!307 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!308 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!309 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!310 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!311 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!312 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!313 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!314 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!315 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!316 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!317 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!318 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!319 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!320 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!321 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!322 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!323 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!324 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!325 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!326 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!327 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!328 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!329 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!330 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!331 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!332 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!333 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!334 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!335 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!336 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!337 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!338 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!339 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!340 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!341 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!342 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!343 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!344 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!345 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!346 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!347 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!348 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!349 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!350 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!351 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!352 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!353 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!354 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!355 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!356 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!357 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!358 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!359 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!360 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!361 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!362 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!363 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!364 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!365 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!366 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!367 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!368 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!369 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!370 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!371 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!372 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!373 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!374 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!375 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!376 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!377 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!378 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!379 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!380 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!381 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!382 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!383 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!384 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !385, line: 7, baseType: !7, size: 32, elements: !386)
!385 = !DIFile(filename: "./insn-modes.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!386 = !{!387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511}
!387 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!388 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!389 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!390 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!391 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!392 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!393 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!394 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!395 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!396 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!397 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!398 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!399 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!400 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!401 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!402 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!403 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!404 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!405 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!406 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!407 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!408 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!409 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!410 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!411 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!412 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!413 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!414 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!415 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!416 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!417 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!418 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!419 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!420 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!421 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!422 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!423 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!424 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!425 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!426 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!427 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!428 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!429 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!430 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!431 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!432 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!433 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!434 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!435 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!436 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!437 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!438 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!439 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!440 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!441 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!442 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!443 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!444 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!445 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!446 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!447 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!448 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!449 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!450 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!451 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!452 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!453 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!454 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!455 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!456 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!457 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!458 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!459 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!460 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!461 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!462 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!463 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!464 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!465 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!466 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!467 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!468 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!469 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!470 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!471 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!472 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!473 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!474 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!475 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!476 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!477 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!478 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!479 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!480 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!481 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!482 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!483 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!484 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!485 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!486 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!487 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!488 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!489 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!490 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!491 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!492 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!493 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!494 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!495 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!496 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!497 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!498 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!499 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!500 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!501 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!502 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!503 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!504 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!505 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!506 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!507 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!508 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!509 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!510 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!511 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!512 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !513, line: 363, baseType: !7, size: 32, elements: !514)
!513 = !DIFile(filename: "./basic-block.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!514 = !{!515, !516, !517}
!515 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!516 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!517 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!518 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !513, line: 355, baseType: !7, size: 32, elements: !519)
!519 = !{!520, !521, !522}
!520 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!521 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!522 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!523 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !524, line: 474, baseType: !7, size: 32, elements: !525)
!524 = !DIFile(filename: "./config/i386/i386.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!525 = !{!526, !527}
!526 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!527 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!528 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !190, line: 280, baseType: !7, size: 32, elements: !529)
!529 = !{!530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545}
!530 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!531 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!532 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!533 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!534 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!535 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!536 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!537 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!538 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!539 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!540 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!541 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!542 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!543 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!544 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!545 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!546 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !190, line: 1817, baseType: !7, size: 32, elements: !547)
!547 = !{!548, !549, !550, !551, !552}
!548 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!549 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!550 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!551 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!552 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!553 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !190, line: 1805, baseType: !7, size: 32, elements: !554)
!554 = !{!555, !556, !557, !558, !559}
!555 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!556 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!557 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!558 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!559 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!560 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtx_code", file: !561, line: 45, baseType: !7, size: 32, elements: !562)
!561 = !DIFile(filename: "./rtl.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!562 = !{!563, !564, !565, !566, !567, !568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702}
!563 = !DIEnumerator(name: "UNKNOWN", value: 0, isUnsigned: true)
!564 = !DIEnumerator(name: "VALUE", value: 1, isUnsigned: true)
!565 = !DIEnumerator(name: "DEBUG_EXPR", value: 2, isUnsigned: true)
!566 = !DIEnumerator(name: "EXPR_LIST", value: 3, isUnsigned: true)
!567 = !DIEnumerator(name: "INSN_LIST", value: 4, isUnsigned: true)
!568 = !DIEnumerator(name: "SEQUENCE", value: 5, isUnsigned: true)
!569 = !DIEnumerator(name: "ADDRESS", value: 6, isUnsigned: true)
!570 = !DIEnumerator(name: "DEBUG_INSN", value: 7, isUnsigned: true)
!571 = !DIEnumerator(name: "INSN", value: 8, isUnsigned: true)
!572 = !DIEnumerator(name: "JUMP_INSN", value: 9, isUnsigned: true)
!573 = !DIEnumerator(name: "CALL_INSN", value: 10, isUnsigned: true)
!574 = !DIEnumerator(name: "BARRIER", value: 11, isUnsigned: true)
!575 = !DIEnumerator(name: "CODE_LABEL", value: 12, isUnsigned: true)
!576 = !DIEnumerator(name: "NOTE", value: 13, isUnsigned: true)
!577 = !DIEnumerator(name: "COND_EXEC", value: 14, isUnsigned: true)
!578 = !DIEnumerator(name: "PARALLEL", value: 15, isUnsigned: true)
!579 = !DIEnumerator(name: "ASM_INPUT", value: 16, isUnsigned: true)
!580 = !DIEnumerator(name: "ASM_OPERANDS", value: 17, isUnsigned: true)
!581 = !DIEnumerator(name: "UNSPEC", value: 18, isUnsigned: true)
!582 = !DIEnumerator(name: "UNSPEC_VOLATILE", value: 19, isUnsigned: true)
!583 = !DIEnumerator(name: "ADDR_VEC", value: 20, isUnsigned: true)
!584 = !DIEnumerator(name: "ADDR_DIFF_VEC", value: 21, isUnsigned: true)
!585 = !DIEnumerator(name: "PREFETCH", value: 22, isUnsigned: true)
!586 = !DIEnumerator(name: "SET", value: 23, isUnsigned: true)
!587 = !DIEnumerator(name: "USE", value: 24, isUnsigned: true)
!588 = !DIEnumerator(name: "CLOBBER", value: 25, isUnsigned: true)
!589 = !DIEnumerator(name: "CALL", value: 26, isUnsigned: true)
!590 = !DIEnumerator(name: "RETURN", value: 27, isUnsigned: true)
!591 = !DIEnumerator(name: "EH_RETURN", value: 28, isUnsigned: true)
!592 = !DIEnumerator(name: "TRAP_IF", value: 29, isUnsigned: true)
!593 = !DIEnumerator(name: "CONST_INT", value: 30, isUnsigned: true)
!594 = !DIEnumerator(name: "CONST_FIXED", value: 31, isUnsigned: true)
!595 = !DIEnumerator(name: "CONST_DOUBLE", value: 32, isUnsigned: true)
!596 = !DIEnumerator(name: "CONST_VECTOR", value: 33, isUnsigned: true)
!597 = !DIEnumerator(name: "CONST_STRING", value: 34, isUnsigned: true)
!598 = !DIEnumerator(name: "CONST", value: 35, isUnsigned: true)
!599 = !DIEnumerator(name: "PC", value: 36, isUnsigned: true)
!600 = !DIEnumerator(name: "REG", value: 37, isUnsigned: true)
!601 = !DIEnumerator(name: "SCRATCH", value: 38, isUnsigned: true)
!602 = !DIEnumerator(name: "SUBREG", value: 39, isUnsigned: true)
!603 = !DIEnumerator(name: "STRICT_LOW_PART", value: 40, isUnsigned: true)
!604 = !DIEnumerator(name: "CONCAT", value: 41, isUnsigned: true)
!605 = !DIEnumerator(name: "CONCATN", value: 42, isUnsigned: true)
!606 = !DIEnumerator(name: "MEM", value: 43, isUnsigned: true)
!607 = !DIEnumerator(name: "LABEL_REF", value: 44, isUnsigned: true)
!608 = !DIEnumerator(name: "SYMBOL_REF", value: 45, isUnsigned: true)
!609 = !DIEnumerator(name: "CC0", value: 46, isUnsigned: true)
!610 = !DIEnumerator(name: "IF_THEN_ELSE", value: 47, isUnsigned: true)
!611 = !DIEnumerator(name: "COMPARE", value: 48, isUnsigned: true)
!612 = !DIEnumerator(name: "PLUS", value: 49, isUnsigned: true)
!613 = !DIEnumerator(name: "MINUS", value: 50, isUnsigned: true)
!614 = !DIEnumerator(name: "NEG", value: 51, isUnsigned: true)
!615 = !DIEnumerator(name: "MULT", value: 52, isUnsigned: true)
!616 = !DIEnumerator(name: "SS_MULT", value: 53, isUnsigned: true)
!617 = !DIEnumerator(name: "US_MULT", value: 54, isUnsigned: true)
!618 = !DIEnumerator(name: "DIV", value: 55, isUnsigned: true)
!619 = !DIEnumerator(name: "SS_DIV", value: 56, isUnsigned: true)
!620 = !DIEnumerator(name: "US_DIV", value: 57, isUnsigned: true)
!621 = !DIEnumerator(name: "MOD", value: 58, isUnsigned: true)
!622 = !DIEnumerator(name: "UDIV", value: 59, isUnsigned: true)
!623 = !DIEnumerator(name: "UMOD", value: 60, isUnsigned: true)
!624 = !DIEnumerator(name: "AND", value: 61, isUnsigned: true)
!625 = !DIEnumerator(name: "IOR", value: 62, isUnsigned: true)
!626 = !DIEnumerator(name: "XOR", value: 63, isUnsigned: true)
!627 = !DIEnumerator(name: "NOT", value: 64, isUnsigned: true)
!628 = !DIEnumerator(name: "ASHIFT", value: 65, isUnsigned: true)
!629 = !DIEnumerator(name: "ROTATE", value: 66, isUnsigned: true)
!630 = !DIEnumerator(name: "ASHIFTRT", value: 67, isUnsigned: true)
!631 = !DIEnumerator(name: "LSHIFTRT", value: 68, isUnsigned: true)
!632 = !DIEnumerator(name: "ROTATERT", value: 69, isUnsigned: true)
!633 = !DIEnumerator(name: "SMIN", value: 70, isUnsigned: true)
!634 = !DIEnumerator(name: "SMAX", value: 71, isUnsigned: true)
!635 = !DIEnumerator(name: "UMIN", value: 72, isUnsigned: true)
!636 = !DIEnumerator(name: "UMAX", value: 73, isUnsigned: true)
!637 = !DIEnumerator(name: "PRE_DEC", value: 74, isUnsigned: true)
!638 = !DIEnumerator(name: "PRE_INC", value: 75, isUnsigned: true)
!639 = !DIEnumerator(name: "POST_DEC", value: 76, isUnsigned: true)
!640 = !DIEnumerator(name: "POST_INC", value: 77, isUnsigned: true)
!641 = !DIEnumerator(name: "PRE_MODIFY", value: 78, isUnsigned: true)
!642 = !DIEnumerator(name: "POST_MODIFY", value: 79, isUnsigned: true)
!643 = !DIEnumerator(name: "NE", value: 80, isUnsigned: true)
!644 = !DIEnumerator(name: "EQ", value: 81, isUnsigned: true)
!645 = !DIEnumerator(name: "GE", value: 82, isUnsigned: true)
!646 = !DIEnumerator(name: "GT", value: 83, isUnsigned: true)
!647 = !DIEnumerator(name: "LE", value: 84, isUnsigned: true)
!648 = !DIEnumerator(name: "LT", value: 85, isUnsigned: true)
!649 = !DIEnumerator(name: "GEU", value: 86, isUnsigned: true)
!650 = !DIEnumerator(name: "GTU", value: 87, isUnsigned: true)
!651 = !DIEnumerator(name: "LEU", value: 88, isUnsigned: true)
!652 = !DIEnumerator(name: "LTU", value: 89, isUnsigned: true)
!653 = !DIEnumerator(name: "UNORDERED", value: 90, isUnsigned: true)
!654 = !DIEnumerator(name: "ORDERED", value: 91, isUnsigned: true)
!655 = !DIEnumerator(name: "UNEQ", value: 92, isUnsigned: true)
!656 = !DIEnumerator(name: "UNGE", value: 93, isUnsigned: true)
!657 = !DIEnumerator(name: "UNGT", value: 94, isUnsigned: true)
!658 = !DIEnumerator(name: "UNLE", value: 95, isUnsigned: true)
!659 = !DIEnumerator(name: "UNLT", value: 96, isUnsigned: true)
!660 = !DIEnumerator(name: "LTGT", value: 97, isUnsigned: true)
!661 = !DIEnumerator(name: "SIGN_EXTEND", value: 98, isUnsigned: true)
!662 = !DIEnumerator(name: "ZERO_EXTEND", value: 99, isUnsigned: true)
!663 = !DIEnumerator(name: "TRUNCATE", value: 100, isUnsigned: true)
!664 = !DIEnumerator(name: "FLOAT_EXTEND", value: 101, isUnsigned: true)
!665 = !DIEnumerator(name: "FLOAT_TRUNCATE", value: 102, isUnsigned: true)
!666 = !DIEnumerator(name: "FLOAT", value: 103, isUnsigned: true)
!667 = !DIEnumerator(name: "FIX", value: 104, isUnsigned: true)
!668 = !DIEnumerator(name: "UNSIGNED_FLOAT", value: 105, isUnsigned: true)
!669 = !DIEnumerator(name: "UNSIGNED_FIX", value: 106, isUnsigned: true)
!670 = !DIEnumerator(name: "FRACT_CONVERT", value: 107, isUnsigned: true)
!671 = !DIEnumerator(name: "UNSIGNED_FRACT_CONVERT", value: 108, isUnsigned: true)
!672 = !DIEnumerator(name: "SAT_FRACT", value: 109, isUnsigned: true)
!673 = !DIEnumerator(name: "UNSIGNED_SAT_FRACT", value: 110, isUnsigned: true)
!674 = !DIEnumerator(name: "ABS", value: 111, isUnsigned: true)
!675 = !DIEnumerator(name: "SQRT", value: 112, isUnsigned: true)
!676 = !DIEnumerator(name: "BSWAP", value: 113, isUnsigned: true)
!677 = !DIEnumerator(name: "FFS", value: 114, isUnsigned: true)
!678 = !DIEnumerator(name: "CLZ", value: 115, isUnsigned: true)
!679 = !DIEnumerator(name: "CTZ", value: 116, isUnsigned: true)
!680 = !DIEnumerator(name: "POPCOUNT", value: 117, isUnsigned: true)
!681 = !DIEnumerator(name: "PARITY", value: 118, isUnsigned: true)
!682 = !DIEnumerator(name: "SIGN_EXTRACT", value: 119, isUnsigned: true)
!683 = !DIEnumerator(name: "ZERO_EXTRACT", value: 120, isUnsigned: true)
!684 = !DIEnumerator(name: "HIGH", value: 121, isUnsigned: true)
!685 = !DIEnumerator(name: "LO_SUM", value: 122, isUnsigned: true)
!686 = !DIEnumerator(name: "VEC_MERGE", value: 123, isUnsigned: true)
!687 = !DIEnumerator(name: "VEC_SELECT", value: 124, isUnsigned: true)
!688 = !DIEnumerator(name: "VEC_CONCAT", value: 125, isUnsigned: true)
!689 = !DIEnumerator(name: "VEC_DUPLICATE", value: 126, isUnsigned: true)
!690 = !DIEnumerator(name: "SS_PLUS", value: 127, isUnsigned: true)
!691 = !DIEnumerator(name: "US_PLUS", value: 128, isUnsigned: true)
!692 = !DIEnumerator(name: "SS_MINUS", value: 129, isUnsigned: true)
!693 = !DIEnumerator(name: "SS_NEG", value: 130, isUnsigned: true)
!694 = !DIEnumerator(name: "US_NEG", value: 131, isUnsigned: true)
!695 = !DIEnumerator(name: "SS_ABS", value: 132, isUnsigned: true)
!696 = !DIEnumerator(name: "SS_ASHIFT", value: 133, isUnsigned: true)
!697 = !DIEnumerator(name: "US_ASHIFT", value: 134, isUnsigned: true)
!698 = !DIEnumerator(name: "US_MINUS", value: 135, isUnsigned: true)
!699 = !DIEnumerator(name: "SS_TRUNCATE", value: 136, isUnsigned: true)
!700 = !DIEnumerator(name: "US_TRUNCATE", value: 137, isUnsigned: true)
!701 = !DIEnumerator(name: "VAR_LOCATION", value: 138, isUnsigned: true)
!702 = !DIEnumerator(name: "LAST_AND_UNUSED_RTX_CODE", value: 139, isUnsigned: true)
!703 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "micro_operation_type", file: !3, line: 126, baseType: !7, size: 32, elements: !704)
!704 = !{!705, !706, !707, !708, !709, !710, !711, !712, !713, !714}
!705 = !DIEnumerator(name: "MO_USE", value: 0, isUnsigned: true)
!706 = !DIEnumerator(name: "MO_USE_NO_VAR", value: 1, isUnsigned: true)
!707 = !DIEnumerator(name: "MO_VAL_USE", value: 2, isUnsigned: true)
!708 = !DIEnumerator(name: "MO_VAL_LOC", value: 3, isUnsigned: true)
!709 = !DIEnumerator(name: "MO_VAL_SET", value: 4, isUnsigned: true)
!710 = !DIEnumerator(name: "MO_SET", value: 5, isUnsigned: true)
!711 = !DIEnumerator(name: "MO_COPY", value: 6, isUnsigned: true)
!712 = !DIEnumerator(name: "MO_CLOBBER", value: 7, isUnsigned: true)
!713 = !DIEnumerator(name: "MO_CALL", value: 8, isUnsigned: true)
!714 = !DIEnumerator(name: "MO_ADJUST", value: 9, isUnsigned: true)
!715 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "cselib_record_what", file: !716, line: 69, baseType: !7, size: 32, elements: !717)
!716 = !DIFile(filename: "./cselib.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!717 = !{!718, !719}
!718 = !DIEnumerator(name: "CSELIB_RECORD_MEMORY", value: 1, isUnsigned: true)
!719 = !DIEnumerator(name: "CSELIB_PRESERVE_CONSTANTS", value: 2, isUnsigned: true)
!720 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "global_rtl_index", file: !561, line: 1994, baseType: !7, size: 32, elements: !721)
!721 = !{!722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733}
!722 = !DIEnumerator(name: "GR_PC", value: 0, isUnsigned: true)
!723 = !DIEnumerator(name: "GR_CC0", value: 1, isUnsigned: true)
!724 = !DIEnumerator(name: "GR_STACK_POINTER", value: 2, isUnsigned: true)
!725 = !DIEnumerator(name: "GR_FRAME_POINTER", value: 3, isUnsigned: true)
!726 = !DIEnumerator(name: "GR_HARD_FRAME_POINTER", value: 4, isUnsigned: true)
!727 = !DIEnumerator(name: "GR_ARG_POINTER", value: 5, isUnsigned: true)
!728 = !DIEnumerator(name: "GR_VIRTUAL_INCOMING_ARGS", value: 6, isUnsigned: true)
!729 = !DIEnumerator(name: "GR_VIRTUAL_STACK_ARGS", value: 7, isUnsigned: true)
!730 = !DIEnumerator(name: "GR_VIRTUAL_STACK_DYNAMIC", value: 8, isUnsigned: true)
!731 = !DIEnumerator(name: "GR_VIRTUAL_OUTGOING_ARGS", value: 9, isUnsigned: true)
!732 = !DIEnumerator(name: "GR_VIRTUAL_CFA", value: 10, isUnsigned: true)
!733 = !DIEnumerator(name: "GR_MAX", value: 11, isUnsigned: true)
!734 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "var_init_status", file: !561, line: 940, baseType: !7, size: 32, elements: !735)
!735 = !{!736, !737, !738}
!736 = !DIEnumerator(name: "VAR_INIT_STATUS_UNKNOWN", value: 0, isUnsigned: true)
!737 = !DIEnumerator(name: "VAR_INIT_STATUS_UNINITIALIZED", value: 1, isUnsigned: true)
!738 = !DIEnumerator(name: "VAR_INIT_STATUS_INITIALIZED", value: 2, isUnsigned: true)
!739 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "insert_option", file: !740, line: 147, baseType: !7, size: 32, elements: !741)
!740 = !DIFile(filename: "./include/hashtab.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!741 = !{!742, !743}
!742 = !DIEnumerator(name: "NO_INSERT", value: 0, isUnsigned: true)
!743 = !DIEnumerator(name: "INSERT", value: 1, isUnsigned: true)
!744 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code_class", file: !190, line: 58, baseType: !7, size: 32, elements: !745)
!745 = !{!746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756}
!746 = !DIEnumerator(name: "tcc_exceptional", value: 0, isUnsigned: true)
!747 = !DIEnumerator(name: "tcc_constant", value: 1, isUnsigned: true)
!748 = !DIEnumerator(name: "tcc_type", value: 2, isUnsigned: true)
!749 = !DIEnumerator(name: "tcc_declaration", value: 3, isUnsigned: true)
!750 = !DIEnumerator(name: "tcc_reference", value: 4, isUnsigned: true)
!751 = !DIEnumerator(name: "tcc_comparison", value: 5, isUnsigned: true)
!752 = !DIEnumerator(name: "tcc_unary", value: 6, isUnsigned: true)
!753 = !DIEnumerator(name: "tcc_binary", value: 7, isUnsigned: true)
!754 = !DIEnumerator(name: "tcc_statement", value: 8, isUnsigned: true)
!755 = !DIEnumerator(name: "tcc_vl_exp", value: 9, isUnsigned: true)
!756 = !DIEnumerator(name: "tcc_expression", value: 10, isUnsigned: true)
!757 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtx_class", file: !561, line: 60, baseType: !7, size: 32, elements: !758)
!758 = !{!759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771}
!759 = !DIEnumerator(name: "RTX_COMPARE", value: 0, isUnsigned: true)
!760 = !DIEnumerator(name: "RTX_COMM_COMPARE", value: 1, isUnsigned: true)
!761 = !DIEnumerator(name: "RTX_BIN_ARITH", value: 2, isUnsigned: true)
!762 = !DIEnumerator(name: "RTX_COMM_ARITH", value: 3, isUnsigned: true)
!763 = !DIEnumerator(name: "RTX_UNARY", value: 4, isUnsigned: true)
!764 = !DIEnumerator(name: "RTX_EXTRA", value: 5, isUnsigned: true)
!765 = !DIEnumerator(name: "RTX_MATCH", value: 6, isUnsigned: true)
!766 = !DIEnumerator(name: "RTX_INSN", value: 7, isUnsigned: true)
!767 = !DIEnumerator(name: "RTX_OBJ", value: 8, isUnsigned: true)
!768 = !DIEnumerator(name: "RTX_CONST_OBJ", value: 9, isUnsigned: true)
!769 = !DIEnumerator(name: "RTX_TERNARY", value: 10, isUnsigned: true)
!770 = !DIEnumerator(name: "RTX_BITFIELD_OPS", value: 11, isUnsigned: true)
!771 = !DIEnumerator(name: "RTX_AUTOINC", value: 12, isUnsigned: true)
!772 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_node_structure_enum", file: !190, line: 630, baseType: !7, size: 32, elements: !773)
!773 = !{!774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808}
!774 = !DIEnumerator(name: "TS_BASE", value: 0, isUnsigned: true)
!775 = !DIEnumerator(name: "TS_COMMON", value: 1, isUnsigned: true)
!776 = !DIEnumerator(name: "TS_INT_CST", value: 2, isUnsigned: true)
!777 = !DIEnumerator(name: "TS_REAL_CST", value: 3, isUnsigned: true)
!778 = !DIEnumerator(name: "TS_FIXED_CST", value: 4, isUnsigned: true)
!779 = !DIEnumerator(name: "TS_VECTOR", value: 5, isUnsigned: true)
!780 = !DIEnumerator(name: "TS_STRING", value: 6, isUnsigned: true)
!781 = !DIEnumerator(name: "TS_COMPLEX", value: 7, isUnsigned: true)
!782 = !DIEnumerator(name: "TS_IDENTIFIER", value: 8, isUnsigned: true)
!783 = !DIEnumerator(name: "TS_DECL_MINIMAL", value: 9, isUnsigned: true)
!784 = !DIEnumerator(name: "TS_DECL_COMMON", value: 10, isUnsigned: true)
!785 = !DIEnumerator(name: "TS_DECL_WRTL", value: 11, isUnsigned: true)
!786 = !DIEnumerator(name: "TS_DECL_NON_COMMON", value: 12, isUnsigned: true)
!787 = !DIEnumerator(name: "TS_DECL_WITH_VIS", value: 13, isUnsigned: true)
!788 = !DIEnumerator(name: "TS_FIELD_DECL", value: 14, isUnsigned: true)
!789 = !DIEnumerator(name: "TS_VAR_DECL", value: 15, isUnsigned: true)
!790 = !DIEnumerator(name: "TS_PARM_DECL", value: 16, isUnsigned: true)
!791 = !DIEnumerator(name: "TS_LABEL_DECL", value: 17, isUnsigned: true)
!792 = !DIEnumerator(name: "TS_RESULT_DECL", value: 18, isUnsigned: true)
!793 = !DIEnumerator(name: "TS_CONST_DECL", value: 19, isUnsigned: true)
!794 = !DIEnumerator(name: "TS_TYPE_DECL", value: 20, isUnsigned: true)
!795 = !DIEnumerator(name: "TS_FUNCTION_DECL", value: 21, isUnsigned: true)
!796 = !DIEnumerator(name: "TS_TYPE", value: 22, isUnsigned: true)
!797 = !DIEnumerator(name: "TS_LIST", value: 23, isUnsigned: true)
!798 = !DIEnumerator(name: "TS_VEC", value: 24, isUnsigned: true)
!799 = !DIEnumerator(name: "TS_EXP", value: 25, isUnsigned: true)
!800 = !DIEnumerator(name: "TS_SSA_NAME", value: 26, isUnsigned: true)
!801 = !DIEnumerator(name: "TS_BLOCK", value: 27, isUnsigned: true)
!802 = !DIEnumerator(name: "TS_BINFO", value: 28, isUnsigned: true)
!803 = !DIEnumerator(name: "TS_STATEMENT_LIST", value: 29, isUnsigned: true)
!804 = !DIEnumerator(name: "TS_CONSTRUCTOR", value: 30, isUnsigned: true)
!805 = !DIEnumerator(name: "TS_OMP_CLAUSE", value: 31, isUnsigned: true)
!806 = !DIEnumerator(name: "TS_OPTIMIZATION", value: 32, isUnsigned: true)
!807 = !DIEnumerator(name: "TS_TARGET_OPTION", value: 33, isUnsigned: true)
!808 = !DIEnumerator(name: "LAST_TS_ENUM", value: 34, isUnsigned: true)
!809 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mode_class", file: !810, line: 36, baseType: !7, size: 32, elements: !811)
!810 = !DIFile(filename: "./machmode.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!811 = !{!812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830}
!812 = !DIEnumerator(name: "MODE_RANDOM", value: 0, isUnsigned: true)
!813 = !DIEnumerator(name: "MODE_CC", value: 1, isUnsigned: true)
!814 = !DIEnumerator(name: "MODE_INT", value: 2, isUnsigned: true)
!815 = !DIEnumerator(name: "MODE_PARTIAL_INT", value: 3, isUnsigned: true)
!816 = !DIEnumerator(name: "MODE_FRACT", value: 4, isUnsigned: true)
!817 = !DIEnumerator(name: "MODE_UFRACT", value: 5, isUnsigned: true)
!818 = !DIEnumerator(name: "MODE_ACCUM", value: 6, isUnsigned: true)
!819 = !DIEnumerator(name: "MODE_UACCUM", value: 7, isUnsigned: true)
!820 = !DIEnumerator(name: "MODE_FLOAT", value: 8, isUnsigned: true)
!821 = !DIEnumerator(name: "MODE_DECIMAL_FLOAT", value: 9, isUnsigned: true)
!822 = !DIEnumerator(name: "MODE_COMPLEX_INT", value: 10, isUnsigned: true)
!823 = !DIEnumerator(name: "MODE_COMPLEX_FLOAT", value: 11, isUnsigned: true)
!824 = !DIEnumerator(name: "MODE_VECTOR_INT", value: 12, isUnsigned: true)
!825 = !DIEnumerator(name: "MODE_VECTOR_FRACT", value: 13, isUnsigned: true)
!826 = !DIEnumerator(name: "MODE_VECTOR_UFRACT", value: 14, isUnsigned: true)
!827 = !DIEnumerator(name: "MODE_VECTOR_ACCUM", value: 15, isUnsigned: true)
!828 = !DIEnumerator(name: "MODE_VECTOR_UACCUM", value: 16, isUnsigned: true)
!829 = !DIEnumerator(name: "MODE_VECTOR_FLOAT", value: 17, isUnsigned: true)
!830 = !DIEnumerator(name: "MAX_MODE_CLASS", value: 18, isUnsigned: true)
!831 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "reg_note", file: !561, line: 836, baseType: !7, size: 32, elements: !832)
!832 = !{!833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864}
!833 = !DIEnumerator(name: "REG_DEP_TRUE", value: 0, isUnsigned: true)
!834 = !DIEnumerator(name: "REG_DEAD", value: 1, isUnsigned: true)
!835 = !DIEnumerator(name: "REG_INC", value: 2, isUnsigned: true)
!836 = !DIEnumerator(name: "REG_EQUIV", value: 3, isUnsigned: true)
!837 = !DIEnumerator(name: "REG_EQUAL", value: 4, isUnsigned: true)
!838 = !DIEnumerator(name: "REG_NONNEG", value: 5, isUnsigned: true)
!839 = !DIEnumerator(name: "REG_UNUSED", value: 6, isUnsigned: true)
!840 = !DIEnumerator(name: "REG_CC_SETTER", value: 7, isUnsigned: true)
!841 = !DIEnumerator(name: "REG_CC_USER", value: 8, isUnsigned: true)
!842 = !DIEnumerator(name: "REG_LABEL_TARGET", value: 9, isUnsigned: true)
!843 = !DIEnumerator(name: "REG_LABEL_OPERAND", value: 10, isUnsigned: true)
!844 = !DIEnumerator(name: "REG_DEP_OUTPUT", value: 11, isUnsigned: true)
!845 = !DIEnumerator(name: "REG_DEP_ANTI", value: 12, isUnsigned: true)
!846 = !DIEnumerator(name: "REG_BR_PROB", value: 13, isUnsigned: true)
!847 = !DIEnumerator(name: "REG_VALUE_PROFILE", value: 14, isUnsigned: true)
!848 = !DIEnumerator(name: "REG_NOALIAS", value: 15, isUnsigned: true)
!849 = !DIEnumerator(name: "REG_BR_PRED", value: 16, isUnsigned: true)
!850 = !DIEnumerator(name: "REG_FRAME_RELATED_EXPR", value: 17, isUnsigned: true)
!851 = !DIEnumerator(name: "REG_CFA_DEF_CFA", value: 18, isUnsigned: true)
!852 = !DIEnumerator(name: "REG_CFA_ADJUST_CFA", value: 19, isUnsigned: true)
!853 = !DIEnumerator(name: "REG_CFA_OFFSET", value: 20, isUnsigned: true)
!854 = !DIEnumerator(name: "REG_CFA_REGISTER", value: 21, isUnsigned: true)
!855 = !DIEnumerator(name: "REG_CFA_RESTORE", value: 22, isUnsigned: true)
!856 = !DIEnumerator(name: "REG_CFA_SET_VDRAP", value: 23, isUnsigned: true)
!857 = !DIEnumerator(name: "REG_EH_CONTEXT", value: 24, isUnsigned: true)
!858 = !DIEnumerator(name: "REG_EH_REGION", value: 25, isUnsigned: true)
!859 = !DIEnumerator(name: "REG_SAVE_NOTE", value: 26, isUnsigned: true)
!860 = !DIEnumerator(name: "REG_NORETURN", value: 27, isUnsigned: true)
!861 = !DIEnumerator(name: "REG_NON_LOCAL_GOTO", value: 28, isUnsigned: true)
!862 = !DIEnumerator(name: "REG_CROSSING_JUMP", value: 29, isUnsigned: true)
!863 = !DIEnumerator(name: "REG_SETJMP", value: 30, isUnsigned: true)
!864 = !DIEnumerator(name: "REG_NOTE_MAX", value: 31, isUnsigned: true)
!865 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "compiler_param", file: !866, line: 82, baseType: !7, size: 32, elements: !867)
!866 = !DIFile(filename: "./params.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!867 = !{!868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881, !882, !883, !884, !885, !886, !887, !888, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !902, !903, !904, !905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !927, !928, !929, !930, !931, !932, !933, !934, !935, !936, !937, !938, !939, !940, !941, !942, !943, !944, !945, !946, !947, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987}
!868 = !DIEnumerator(name: "PARAM_STRUCT_REORG_COLD_STRUCT_RATIO", value: 0, isUnsigned: true)
!869 = !DIEnumerator(name: "PARAM_PREDICTABLE_BRANCH_OUTCOME", value: 1, isUnsigned: true)
!870 = !DIEnumerator(name: "PARAM_MAX_INLINE_INSNS_SINGLE", value: 2, isUnsigned: true)
!871 = !DIEnumerator(name: "PARAM_MAX_INLINE_INSNS_AUTO", value: 3, isUnsigned: true)
!872 = !DIEnumerator(name: "PARAM_MAX_INLINE_INSNS_RECURSIVE", value: 4, isUnsigned: true)
!873 = !DIEnumerator(name: "PARAM_MAX_INLINE_INSNS_RECURSIVE_AUTO", value: 5, isUnsigned: true)
!874 = !DIEnumerator(name: "PARAM_MAX_INLINE_RECURSIVE_DEPTH", value: 6, isUnsigned: true)
!875 = !DIEnumerator(name: "PARAM_MAX_INLINE_RECURSIVE_DEPTH_AUTO", value: 7, isUnsigned: true)
!876 = !DIEnumerator(name: "PARAM_MIN_INLINE_RECURSIVE_PROBABILITY", value: 8, isUnsigned: true)
!877 = !DIEnumerator(name: "PARAM_EARLY_INLINER_MAX_ITERATIONS", value: 9, isUnsigned: true)
!878 = !DIEnumerator(name: "PARAM_MAX_VARIABLE_EXPANSIONS", value: 10, isUnsigned: true)
!879 = !DIEnumerator(name: "PARAM_MIN_VECT_LOOP_BOUND", value: 11, isUnsigned: true)
!880 = !DIEnumerator(name: "PARAM_MAX_DELAY_SLOT_INSN_SEARCH", value: 12, isUnsigned: true)
!881 = !DIEnumerator(name: "PARAM_MAX_DELAY_SLOT_LIVE_SEARCH", value: 13, isUnsigned: true)
!882 = !DIEnumerator(name: "PARAM_MAX_PENDING_LIST_LENGTH", value: 14, isUnsigned: true)
!883 = !DIEnumerator(name: "PARAM_LARGE_FUNCTION_INSNS", value: 15, isUnsigned: true)
!884 = !DIEnumerator(name: "PARAM_LARGE_FUNCTION_GROWTH", value: 16, isUnsigned: true)
!885 = !DIEnumerator(name: "PARAM_LARGE_UNIT_INSNS", value: 17, isUnsigned: true)
!886 = !DIEnumerator(name: "PARAM_INLINE_UNIT_GROWTH", value: 18, isUnsigned: true)
!887 = !DIEnumerator(name: "PARAM_IPCP_UNIT_GROWTH", value: 19, isUnsigned: true)
!888 = !DIEnumerator(name: "PARAM_EARLY_INLINING_INSNS", value: 20, isUnsigned: true)
!889 = !DIEnumerator(name: "PARAM_LARGE_STACK_FRAME", value: 21, isUnsigned: true)
!890 = !DIEnumerator(name: "PARAM_STACK_FRAME_GROWTH", value: 22, isUnsigned: true)
!891 = !DIEnumerator(name: "PARAM_MAX_GCSE_MEMORY", value: 23, isUnsigned: true)
!892 = !DIEnumerator(name: "PARAM_GCSE_AFTER_RELOAD_PARTIAL_FRACTION", value: 24, isUnsigned: true)
!893 = !DIEnumerator(name: "PARAM_GCSE_AFTER_RELOAD_CRITICAL_FRACTION", value: 25, isUnsigned: true)
!894 = !DIEnumerator(name: "PARAM_MAX_UNROLLED_INSNS", value: 26, isUnsigned: true)
!895 = !DIEnumerator(name: "PARAM_MAX_AVERAGE_UNROLLED_INSNS", value: 27, isUnsigned: true)
!896 = !DIEnumerator(name: "PARAM_MAX_UNROLL_TIMES", value: 28, isUnsigned: true)
!897 = !DIEnumerator(name: "PARAM_MAX_PEELED_INSNS", value: 29, isUnsigned: true)
!898 = !DIEnumerator(name: "PARAM_MAX_PEEL_TIMES", value: 30, isUnsigned: true)
!899 = !DIEnumerator(name: "PARAM_MAX_COMPLETELY_PEELED_INSNS", value: 31, isUnsigned: true)
!900 = !DIEnumerator(name: "PARAM_MAX_COMPLETELY_PEEL_TIMES", value: 32, isUnsigned: true)
!901 = !DIEnumerator(name: "PARAM_MAX_ONCE_PEELED_INSNS", value: 33, isUnsigned: true)
!902 = !DIEnumerator(name: "PARAM_MAX_UNROLL_ITERATIONS", value: 34, isUnsigned: true)
!903 = !DIEnumerator(name: "PARAM_MAX_UNSWITCH_INSNS", value: 35, isUnsigned: true)
!904 = !DIEnumerator(name: "PARAM_MAX_UNSWITCH_LEVEL", value: 36, isUnsigned: true)
!905 = !DIEnumerator(name: "PARAM_MAX_ITERATIONS_TO_TRACK", value: 37, isUnsigned: true)
!906 = !DIEnumerator(name: "PARAM_MAX_ITERATIONS_COMPUTATION_COST", value: 38, isUnsigned: true)
!907 = !DIEnumerator(name: "PARAM_SMS_MAX_II_FACTOR", value: 39, isUnsigned: true)
!908 = !DIEnumerator(name: "PARAM_SMS_DFA_HISTORY", value: 40, isUnsigned: true)
!909 = !DIEnumerator(name: "PARAM_SMS_LOOP_AVERAGE_COUNT_THRESHOLD", value: 41, isUnsigned: true)
!910 = !DIEnumerator(name: "HOT_BB_COUNT_FRACTION", value: 42, isUnsigned: true)
!911 = !DIEnumerator(name: "HOT_BB_FREQUENCY_FRACTION", value: 43, isUnsigned: true)
!912 = !DIEnumerator(name: "PARAM_ALIGN_THRESHOLD", value: 44, isUnsigned: true)
!913 = !DIEnumerator(name: "PARAM_ALIGN_LOOP_ITERATIONS", value: 45, isUnsigned: true)
!914 = !DIEnumerator(name: "PARAM_MAX_PREDICTED_ITERATIONS", value: 46, isUnsigned: true)
!915 = !DIEnumerator(name: "TRACER_DYNAMIC_COVERAGE_FEEDBACK", value: 47, isUnsigned: true)
!916 = !DIEnumerator(name: "TRACER_DYNAMIC_COVERAGE", value: 48, isUnsigned: true)
!917 = !DIEnumerator(name: "TRACER_MAX_CODE_GROWTH", value: 49, isUnsigned: true)
!918 = !DIEnumerator(name: "TRACER_MIN_BRANCH_RATIO", value: 50, isUnsigned: true)
!919 = !DIEnumerator(name: "TRACER_MIN_BRANCH_PROBABILITY_FEEDBACK", value: 51, isUnsigned: true)
!920 = !DIEnumerator(name: "TRACER_MIN_BRANCH_PROBABILITY", value: 52, isUnsigned: true)
!921 = !DIEnumerator(name: "PARAM_MAX_CROSSJUMP_EDGES", value: 53, isUnsigned: true)
!922 = !DIEnumerator(name: "PARAM_MIN_CROSSJUMP_INSNS", value: 54, isUnsigned: true)
!923 = !DIEnumerator(name: "PARAM_MAX_GROW_COPY_BB_INSNS", value: 55, isUnsigned: true)
!924 = !DIEnumerator(name: "PARAM_MAX_GOTO_DUPLICATION_INSNS", value: 56, isUnsigned: true)
!925 = !DIEnumerator(name: "PARAM_MAX_CSE_PATH_LENGTH", value: 57, isUnsigned: true)
!926 = !DIEnumerator(name: "PARAM_MAX_CSE_INSNS", value: 58, isUnsigned: true)
!927 = !DIEnumerator(name: "PARAM_LIM_EXPENSIVE", value: 59, isUnsigned: true)
!928 = !DIEnumerator(name: "PARAM_IV_CONSIDER_ALL_CANDIDATES_BOUND", value: 60, isUnsigned: true)
!929 = !DIEnumerator(name: "PARAM_IV_MAX_CONSIDERED_USES", value: 61, isUnsigned: true)
!930 = !DIEnumerator(name: "PARAM_IV_ALWAYS_PRUNE_CAND_SET_BOUND", value: 62, isUnsigned: true)
!931 = !DIEnumerator(name: "PARAM_SCEV_MAX_EXPR_SIZE", value: 63, isUnsigned: true)
!932 = !DIEnumerator(name: "PARAM_OMEGA_MAX_VARS", value: 64, isUnsigned: true)
!933 = !DIEnumerator(name: "PARAM_OMEGA_MAX_GEQS", value: 65, isUnsigned: true)
!934 = !DIEnumerator(name: "PARAM_OMEGA_MAX_EQS", value: 66, isUnsigned: true)
!935 = !DIEnumerator(name: "PARAM_OMEGA_MAX_WILD_CARDS", value: 67, isUnsigned: true)
!936 = !DIEnumerator(name: "PARAM_OMEGA_HASH_TABLE_SIZE", value: 68, isUnsigned: true)
!937 = !DIEnumerator(name: "PARAM_OMEGA_MAX_KEYS", value: 69, isUnsigned: true)
!938 = !DIEnumerator(name: "PARAM_OMEGA_ELIMINATE_REDUNDANT_CONSTRAINTS", value: 70, isUnsigned: true)
!939 = !DIEnumerator(name: "PARAM_VECT_MAX_VERSION_FOR_ALIGNMENT_CHECKS", value: 71, isUnsigned: true)
!940 = !DIEnumerator(name: "PARAM_VECT_MAX_VERSION_FOR_ALIAS_CHECKS", value: 72, isUnsigned: true)
!941 = !DIEnumerator(name: "PARAM_MAX_CSELIB_MEMORY_LOCATIONS", value: 73, isUnsigned: true)
!942 = !DIEnumerator(name: "GGC_MIN_EXPAND", value: 74, isUnsigned: true)
!943 = !DIEnumerator(name: "GGC_MIN_HEAPSIZE", value: 75, isUnsigned: true)
!944 = !DIEnumerator(name: "PARAM_MAX_RELOAD_SEARCH_INSNS", value: 76, isUnsigned: true)
!945 = !DIEnumerator(name: "PARAM_MAX_SCHED_REGION_BLOCKS", value: 77, isUnsigned: true)
!946 = !DIEnumerator(name: "PARAM_MAX_SCHED_REGION_INSNS", value: 78, isUnsigned: true)
!947 = !DIEnumerator(name: "PARAM_MAX_PIPELINE_REGION_BLOCKS", value: 79, isUnsigned: true)
!948 = !DIEnumerator(name: "PARAM_MAX_PIPELINE_REGION_INSNS", value: 80, isUnsigned: true)
!949 = !DIEnumerator(name: "PARAM_MIN_SPEC_PROB", value: 81, isUnsigned: true)
!950 = !DIEnumerator(name: "PARAM_MAX_SCHED_EXTEND_REGIONS_ITERS", value: 82, isUnsigned: true)
!951 = !DIEnumerator(name: "PARAM_MAX_SCHED_INSN_CONFLICT_DELAY", value: 83, isUnsigned: true)
!952 = !DIEnumerator(name: "PARAM_SCHED_SPEC_PROB_CUTOFF", value: 84, isUnsigned: true)
!953 = !DIEnumerator(name: "PARAM_SELSCHED_MAX_LOOKAHEAD", value: 85, isUnsigned: true)
!954 = !DIEnumerator(name: "PARAM_SELSCHED_MAX_SCHED_TIMES", value: 86, isUnsigned: true)
!955 = !DIEnumerator(name: "PARAM_SELSCHED_INSNS_TO_RENAME", value: 87, isUnsigned: true)
!956 = !DIEnumerator(name: "PARAM_SCHED_MEM_TRUE_DEP_COST", value: 88, isUnsigned: true)
!957 = !DIEnumerator(name: "PARAM_MAX_LAST_VALUE_RTL", value: 89, isUnsigned: true)
!958 = !DIEnumerator(name: "PARAM_INTEGER_SHARE_LIMIT", value: 90, isUnsigned: true)
!959 = !DIEnumerator(name: "PARAM_MIN_VIRTUAL_MAPPINGS", value: 91, isUnsigned: true)
!960 = !DIEnumerator(name: "PARAM_VIRTUAL_MAPPINGS_TO_SYMS_RATIO", value: 92, isUnsigned: true)
!961 = !DIEnumerator(name: "PARAM_SSP_BUFFER_SIZE", value: 93, isUnsigned: true)
!962 = !DIEnumerator(name: "PARAM_MAX_JUMP_THREAD_DUPLICATION_STMTS", value: 94, isUnsigned: true)
!963 = !DIEnumerator(name: "PARAM_MAX_FIELDS_FOR_FIELD_SENSITIVE", value: 95, isUnsigned: true)
!964 = !DIEnumerator(name: "PARAM_MAX_SCHED_READY_INSNS", value: 96, isUnsigned: true)
!965 = !DIEnumerator(name: "PARAM_PREFETCH_LATENCY", value: 97, isUnsigned: true)
!966 = !DIEnumerator(name: "PARAM_SIMULTANEOUS_PREFETCHES", value: 98, isUnsigned: true)
!967 = !DIEnumerator(name: "PARAM_L1_CACHE_SIZE", value: 99, isUnsigned: true)
!968 = !DIEnumerator(name: "PARAM_L1_CACHE_LINE_SIZE", value: 100, isUnsigned: true)
!969 = !DIEnumerator(name: "PARAM_L2_CACHE_SIZE", value: 101, isUnsigned: true)
!970 = !DIEnumerator(name: "PARAM_USE_CANONICAL_TYPES", value: 102, isUnsigned: true)
!971 = !DIEnumerator(name: "PARAM_MAX_PARTIAL_ANTIC_LENGTH", value: 103, isUnsigned: true)
!972 = !DIEnumerator(name: "PARAM_SCCVN_MAX_SCC_SIZE", value: 104, isUnsigned: true)
!973 = !DIEnumerator(name: "PARAM_IRA_MAX_LOOPS_NUM", value: 105, isUnsigned: true)
!974 = !DIEnumerator(name: "PARAM_IRA_MAX_CONFLICT_TABLE_SIZE", value: 106, isUnsigned: true)
!975 = !DIEnumerator(name: "PARAM_IRA_LOOP_RESERVED_REGS", value: 107, isUnsigned: true)
!976 = !DIEnumerator(name: "PARAM_SWITCH_CONVERSION_BRANCH_RATIO", value: 108, isUnsigned: true)
!977 = !DIEnumerator(name: "PARAM_LOOP_BLOCK_TILE_SIZE", value: 109, isUnsigned: true)
!978 = !DIEnumerator(name: "PARAM_GRAPHITE_MAX_NB_SCOP_PARAMS", value: 110, isUnsigned: true)
!979 = !DIEnumerator(name: "PARAM_GRAPHITE_MAX_BBS_PER_FUNCTION", value: 111, isUnsigned: true)
!980 = !DIEnumerator(name: "PARAM_LOOP_INVARIANT_MAX_BBS_IN_LOOP", value: 112, isUnsigned: true)
!981 = !DIEnumerator(name: "PARAM_SLP_MAX_INSNS_IN_BB", value: 113, isUnsigned: true)
!982 = !DIEnumerator(name: "PARAM_MIN_INSN_TO_PREFETCH_RATIO", value: 114, isUnsigned: true)
!983 = !DIEnumerator(name: "PARAM_PREFETCH_MIN_INSN_TO_MEM_RATIO", value: 115, isUnsigned: true)
!984 = !DIEnumerator(name: "PARAM_MAX_VARTRACK_SIZE", value: 116, isUnsigned: true)
!985 = !DIEnumerator(name: "PARAM_MIN_NONDEBUG_INSN_UID", value: 117, isUnsigned: true)
!986 = !DIEnumerator(name: "PARAM_IPA_SRA_PTR_GROWTH_FACTOR", value: 118, isUnsigned: true)
!987 = !DIEnumerator(name: "LAST_PARAM", value: 119, isUnsigned: true)
!988 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "emit_note_where", file: !3, line: 160, baseType: !7, size: 32, elements: !989)
!989 = !{!990, !991, !992}
!990 = !DIEnumerator(name: "EMIT_NOTE_BEFORE_INSN", value: 0, isUnsigned: true)
!991 = !DIEnumerator(name: "EMIT_NOTE_AFTER_INSN", value: 1, isUnsigned: true)
!992 = !DIEnumerator(name: "EMIT_NOTE_AFTER_CALL_INSN", value: 2, isUnsigned: true)
!993 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "insn_note", file: !561, line: 956, baseType: !7, size: 32, elements: !994)
!994 = !{!995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1005, !1006, !1007, !1008}
!995 = !DIEnumerator(name: "NOTE_INSN_DELETED", value: 0, isUnsigned: true)
!996 = !DIEnumerator(name: "NOTE_INSN_DELETED_LABEL", value: 1, isUnsigned: true)
!997 = !DIEnumerator(name: "NOTE_INSN_BLOCK_BEG", value: 2, isUnsigned: true)
!998 = !DIEnumerator(name: "NOTE_INSN_BLOCK_END", value: 3, isUnsigned: true)
!999 = !DIEnumerator(name: "NOTE_INSN_FUNCTION_BEG", value: 4, isUnsigned: true)
!1000 = !DIEnumerator(name: "NOTE_INSN_PROLOGUE_END", value: 5, isUnsigned: true)
!1001 = !DIEnumerator(name: "NOTE_INSN_EPILOGUE_BEG", value: 6, isUnsigned: true)
!1002 = !DIEnumerator(name: "NOTE_INSN_EH_REGION_BEG", value: 7, isUnsigned: true)
!1003 = !DIEnumerator(name: "NOTE_INSN_EH_REGION_END", value: 8, isUnsigned: true)
!1004 = !DIEnumerator(name: "NOTE_INSN_VAR_LOCATION", value: 9, isUnsigned: true)
!1005 = !DIEnumerator(name: "NOTE_INSN_BASIC_BLOCK", value: 10, isUnsigned: true)
!1006 = !DIEnumerator(name: "NOTE_INSN_SWITCH_TEXT_SECTIONS", value: 11, isUnsigned: true)
!1007 = !DIEnumerator(name: "NOTE_INSN_CFA_RESTORE_STATE", value: 12, isUnsigned: true)
!1008 = !DIEnumerator(name: "NOTE_INSN_MAX", value: 13, isUnsigned: true)
!1009 = !{!1010, !189, !1011, !1188, !560, !2363, !2369, !2421, !2410, !1668, !2447, !1313, !2449, !2458, !2463, !384, !7, !2403, !1827, !2437, !2470, !2471, !2486, !809, !2374, !1189, !2487, !2489, !1910, !2496, !1795, !1065, !2497, !2418, !2504, !2510, !2512, !2518, !1213, !1067, !2520, !2532, !2538}
!1010 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!1011 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !1012, line: 56, baseType: !1013)
!1012 = !DIFile(filename: "./coretypes.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1013 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1014, size: 64)
!1014 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !190, line: 3371, size: 1792, elements: !1015)
!1015 = !{!1016, !1049, !1055, !1068, !1087, !1098, !1103, !1113, !1119, !1133, !1145, !1183, !1699, !1727, !1744, !1745, !1750, !1759, !1765, !1770, !1774, !1778, !2014, !2061, !2067, !2073, !2080, !2093, !2107, !2124, !2136, !2158, !2173, !2345}
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1014, file: !190, line: 3372, baseType: !1017, size: 64)
!1017 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !190, line: 360, size: 64, elements: !1018)
!1018 = !{!1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1027, !1028, !1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048}
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1017, file: !190, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !1017, file: !190, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !1017, file: !190, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !1017, file: !190, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !1017, file: !190, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !1017, file: !190, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !1017, file: !190, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !1017, file: !190, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !1017, file: !190, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !1017, file: !190, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !1017, file: !190, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !1017, file: !190, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !1017, file: !190, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !1017, file: !190, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !1017, file: !190, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !1017, file: !190, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !1017, file: !190, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !1017, file: !190, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1017, file: !190, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1017, file: !190, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1017, file: !190, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1017, file: !190, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1017, file: !190, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1017, file: !190, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1017, file: !190, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1017, file: !190, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !1017, file: !190, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !1017, file: !190, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !1017, file: !190, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !1017, file: !190, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1014, file: !190, line: 3373, baseType: !1050, size: 192)
!1050 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !190, line: 402, size: 192, elements: !1051)
!1051 = !{!1052, !1053, !1054}
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1050, file: !190, line: 403, baseType: !1017, size: 64)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !1050, file: !190, line: 404, baseType: !1011, size: 64, offset: 64)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1050, file: !190, line: 405, baseType: !1011, size: 64, offset: 128)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !1014, file: !190, line: 3374, baseType: !1056, size: 320)
!1056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !190, line: 1384, size: 320, elements: !1057)
!1057 = !{!1058, !1059}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1056, file: !190, line: 1385, baseType: !1050, size: 192)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !1056, file: !190, line: 1386, baseType: !1060, size: 128, offset: 192)
!1060 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !1061, line: 58, baseType: !1062)
!1061 = !DIFile(filename: "./double-int.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1062 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1061, line: 54, size: 128, elements: !1063)
!1063 = !{!1064, !1066}
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !1062, file: !1061, line: 56, baseType: !1065, size: 64)
!1065 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !1062, file: !1061, line: 57, baseType: !1067, size: 64, offset: 64)
!1067 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !1014, file: !190, line: 3375, baseType: !1069, size: 256)
!1069 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !190, line: 1397, size: 256, elements: !1070)
!1070 = !{!1071, !1072}
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1069, file: !190, line: 1398, baseType: !1050, size: 192)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !1069, file: !190, line: 1399, baseType: !1073, size: 64, offset: 192)
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1074, size: 64)
!1074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !1075, line: 52, size: 256, elements: !1076)
!1075 = !DIFile(filename: "./real.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1076 = !{!1077, !1078, !1079, !1080, !1081, !1082, !1083}
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !1074, file: !1075, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !1074, file: !1075, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !1074, file: !1075, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !1074, file: !1075, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1074, file: !1075, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !1074, file: !1075, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1074, file: !1075, line: 62, baseType: !1084, size: 192, offset: 64)
!1084 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1065, size: 192, elements: !1085)
!1085 = !{!1086}
!1086 = !DISubrange(count: 3)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !1014, file: !190, line: 3376, baseType: !1088, size: 256)
!1088 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !190, line: 1408, size: 256, elements: !1089)
!1089 = !{!1090, !1091}
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1088, file: !190, line: 1409, baseType: !1050, size: 192)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !1088, file: !190, line: 1410, baseType: !1092, size: 64, offset: 192)
!1092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1093, size: 64)
!1093 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !1094, line: 27, size: 192, elements: !1095)
!1094 = !DIFile(filename: "./fixed-value.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1095 = !{!1096, !1097}
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1093, file: !1094, line: 29, baseType: !1060, size: 128)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1093, file: !1094, line: 30, baseType: !384, size: 32, offset: 128)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !1014, file: !190, line: 3377, baseType: !1099, size: 256)
!1099 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !190, line: 1437, size: 256, elements: !1100)
!1100 = !{!1101, !1102}
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1099, file: !190, line: 1438, baseType: !1050, size: 192)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !1099, file: !190, line: 1439, baseType: !1011, size: 64, offset: 192)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !1014, file: !190, line: 3378, baseType: !1104, size: 256)
!1104 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !190, line: 1418, size: 256, elements: !1105)
!1105 = !{!1106, !1107, !1108}
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1104, file: !190, line: 1419, baseType: !1050, size: 192)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1104, file: !190, line: 1420, baseType: !1010, size: 32, offset: 192)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1104, file: !190, line: 1421, baseType: !1109, size: 8, offset: 224)
!1109 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1110, size: 8, elements: !1111)
!1110 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!1111 = !{!1112}
!1112 = !DISubrange(count: 1)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !1014, file: !190, line: 3379, baseType: !1114, size: 320)
!1114 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !190, line: 1428, size: 320, elements: !1115)
!1115 = !{!1116, !1117, !1118}
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1114, file: !190, line: 1429, baseType: !1050, size: 192)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !1114, file: !190, line: 1430, baseType: !1011, size: 64, offset: 192)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !1114, file: !190, line: 1431, baseType: !1011, size: 64, offset: 256)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !1014, file: !190, line: 3380, baseType: !1120, size: 320)
!1120 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !190, line: 1460, size: 320, elements: !1121)
!1121 = !{!1122, !1123}
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1120, file: !190, line: 1461, baseType: !1050, size: 192)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1120, file: !190, line: 1462, baseType: !1124, size: 128, offset: 192)
!1124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !1125, line: 31, size: 128, elements: !1126)
!1125 = !DIFile(filename: "./symtab.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1126 = !{!1127, !1131, !1132}
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1124, file: !1125, line: 32, baseType: !1128, size: 64)
!1128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1129, size: 64)
!1129 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1130)
!1130 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1124, file: !1125, line: 33, baseType: !7, size: 32, offset: 64)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !1124, file: !1125, line: 34, baseType: !7, size: 32, offset: 96)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !1014, file: !190, line: 3381, baseType: !1134, size: 384)
!1134 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !190, line: 2507, size: 384, elements: !1135)
!1135 = !{!1136, !1137, !1142, !1143, !1144}
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1134, file: !190, line: 2508, baseType: !1050, size: 192)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1134, file: !190, line: 2509, baseType: !1138, size: 32, offset: 192)
!1138 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !1139, line: 58, baseType: !1140)
!1139 = !DIFile(filename: "./input.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1140 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !1141, line: 44, baseType: !7)
!1141 = !DIFile(filename: "./line-map.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1134, file: !190, line: 2510, baseType: !7, size: 32, offset: 224)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1134, file: !190, line: 2511, baseType: !1011, size: 64, offset: 256)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1134, file: !190, line: 2512, baseType: !1011, size: 64, offset: 320)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !1014, file: !190, line: 3382, baseType: !1146, size: 896)
!1146 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !190, line: 2652, size: 896, elements: !1147)
!1147 = !{!1148, !1149, !1150, !1151, !1152, !1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180}
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1146, file: !190, line: 2653, baseType: !1134, size: 384)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1146, file: !190, line: 2654, baseType: !1011, size: 64, offset: 384)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1146, file: !190, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !1146, file: !190, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !1146, file: !190, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !1146, file: !190, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1146, file: !190, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !1146, file: !190, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !1146, file: !190, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !1146, file: !190, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1146, file: !190, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1146, file: !190, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1146, file: !190, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1146, file: !190, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1146, file: !190, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1146, file: !190, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1146, file: !190, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !1146, file: !190, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !1146, file: !190, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !1146, file: !190, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !1146, file: !190, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !1146, file: !190, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !1146, file: !190, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !1146, file: !190, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !1146, file: !190, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !1146, file: !190, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !1146, file: !190, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1146, file: !190, line: 2703, baseType: !7, size: 32, offset: 512)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1146, file: !190, line: 2705, baseType: !1011, size: 64, offset: 576)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !1146, file: !190, line: 2706, baseType: !1011, size: 64, offset: 640)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1146, file: !190, line: 2707, baseType: !1011, size: 64, offset: 704)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1146, file: !190, line: 2708, baseType: !1011, size: 64, offset: 768)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1146, file: !190, line: 2711, baseType: !1181, size: 64, offset: 832)
!1181 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1182, size: 64)
!1182 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !190, line: 2711, flags: DIFlagFwdDecl)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !1014, file: !190, line: 3383, baseType: !1184, size: 960)
!1184 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !190, line: 2756, size: 960, elements: !1185)
!1185 = !{!1186, !1187}
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1184, file: !190, line: 2757, baseType: !1146, size: 896)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1184, file: !190, line: 2758, baseType: !1188, size: 64, offset: 896)
!1188 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !1012, line: 50, baseType: !1189)
!1189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1190, size: 64)
!1190 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !561, line: 240, size: 384, elements: !1191)
!1191 = !{!1192, !1193, !1194, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202}
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1190, file: !561, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1190, file: !561, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !1190, file: !561, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !1190, file: !561, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !1190, file: !561, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !1190, file: !561, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !1190, file: !561, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1190, file: !561, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !1190, file: !561, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !1190, file: !561, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !1190, file: !561, line: 321, baseType: !1203, size: 320, offset: 64)
!1203 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !561, line: 315, size: 320, elements: !1204)
!1204 = !{!1205, !1632, !1634, !1697, !1698}
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1203, file: !561, line: 316, baseType: !1206, size: 64)
!1206 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1207, size: 64, elements: !1111)
!1207 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !561, line: 183, baseType: !1208)
!1208 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !561, line: 166, size: 64, elements: !1209)
!1209 = !{!1210, !1211, !1212, !1215, !1216, !1224, !1225, !1237, !1260, !1322, !1323, !1609, !1622, !1629}
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !1208, file: !561, line: 168, baseType: !1010, size: 32)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !1208, file: !561, line: 169, baseType: !7, size: 32)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !1208, file: !561, line: 170, baseType: !1213, size: 64)
!1213 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1214, size: 64)
!1214 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1110)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !1208, file: !561, line: 171, baseType: !1188, size: 64)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !1208, file: !561, line: 172, baseType: !1217, size: 64)
!1217 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !1012, line: 53, baseType: !1218)
!1218 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1219, size: 64)
!1219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !561, line: 359, size: 128, elements: !1220)
!1220 = !{!1221, !1222}
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !1219, file: !561, line: 360, baseType: !1010, size: 32)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !1219, file: !561, line: 361, baseType: !1223, size: 64, offset: 64)
!1223 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1188, size: 64, elements: !1111)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !1208, file: !561, line: 173, baseType: !384, size: 32)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !1208, file: !561, line: 174, baseType: !1226, size: 32)
!1226 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !561, line: 133, baseType: !1227)
!1227 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !561, line: 115, size: 32, elements: !1228)
!1228 = !{!1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236}
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !1227, file: !561, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !1227, file: !561, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !1227, file: !561, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !1227, file: !561, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !1227, file: !561, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !1227, file: !561, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !1227, file: !561, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !1227, file: !561, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !1208, file: !561, line: 175, baseType: !1238, size: 64)
!1238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1239, size: 64)
!1239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !716, line: 23, size: 320, elements: !1240)
!1240 = !{!1241, !1242, !1243, !1244, !1251, !1259}
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "hash", scope: !1239, file: !716, line: 25, baseType: !7, size: 32)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1239, file: !716, line: 28, baseType: !1010, size: 32, offset: 32)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "val_rtx", scope: !1239, file: !716, line: 31, baseType: !1188, size: 64, offset: 64)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "locs", scope: !1239, file: !716, line: 35, baseType: !1245, size: 64, offset: 128)
!1245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1246, size: 64)
!1246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elt_loc_list", file: !716, line: 45, size: 192, elements: !1247)
!1247 = !{!1248, !1249, !1250}
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1246, file: !716, line: 47, baseType: !1245, size: 64)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1246, file: !716, line: 49, baseType: !1188, size: 64, offset: 64)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "setting_insn", scope: !1246, file: !716, line: 51, baseType: !1188, size: 64, offset: 128)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "addr_list", scope: !1239, file: !716, line: 39, baseType: !1252, size: 64, offset: 192)
!1252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1253, size: 64)
!1253 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "elt_list", file: !716, line: 55, size: 128, elements: !1254)
!1254 = !{!1255, !1256}
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1253, file: !716, line: 56, baseType: !1252, size: 64)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "elt", scope: !1253, file: !716, line: 57, baseType: !1257, size: 64, offset: 64)
!1257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 64)
!1258 = !DIDerivedType(tag: DW_TAG_typedef, name: "cselib_val", file: !716, line: 42, baseType: !1239)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "next_containing_mem", scope: !1239, file: !716, line: 41, baseType: !1238, size: 64, offset: 256)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !1208, file: !561, line: 176, baseType: !1261, size: 64)
!1261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1262, size: 64)
!1262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !1263, line: 75, size: 256, elements: !1264)
!1263 = !DIFile(filename: "./bitmap.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1264 = !{!1265, !1279, !1280, !1281}
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1262, file: !1263, line: 76, baseType: !1266, size: 64)
!1266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1267, size: 64)
!1267 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !1263, line: 68, baseType: !1268)
!1268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !1263, line: 63, size: 320, elements: !1269)
!1269 = !{!1270, !1272, !1273, !1274}
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1268, file: !1263, line: 64, baseType: !1271, size: 64)
!1271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 64)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1268, file: !1263, line: 65, baseType: !1271, size: 64, offset: 64)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !1268, file: !1263, line: 66, baseType: !7, size: 32, offset: 128)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !1268, file: !1263, line: 67, baseType: !1275, size: 128, offset: 192)
!1275 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1276, size: 128, elements: !1277)
!1276 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !1263, line: 29, baseType: !1065)
!1277 = !{!1278}
!1278 = !DISubrange(count: 2)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1262, file: !1263, line: 77, baseType: !1266, size: 64, offset: 64)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !1262, file: !1263, line: 78, baseType: !7, size: 32, offset: 128)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !1262, file: !1263, line: 79, baseType: !1282, size: 64, offset: 192)
!1282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1283, size: 64)
!1283 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !1263, line: 49, baseType: !1284)
!1284 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !1263, line: 45, size: 832, elements: !1285)
!1285 = !{!1286, !1287, !1288}
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !1284, file: !1263, line: 46, baseType: !1271, size: 64)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !1284, file: !1263, line: 47, baseType: !1261, size: 64, offset: 64)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !1284, file: !1263, line: 48, baseType: !1289, size: 704, offset: 128)
!1289 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !1290, line: 164, size: 704, elements: !1291)
!1290 = !DIFile(filename: "./include/obstack.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1291 = !{!1292, !1293, !1304, !1305, !1306, !1307, !1308, !1309, !1314, !1318, !1319, !1320, !1321}
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !1289, file: !1290, line: 166, baseType: !1067, size: 64)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !1289, file: !1290, line: 167, baseType: !1294, size: 64, offset: 64)
!1294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1295, size: 64)
!1295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !1290, line: 157, size: 192, elements: !1296)
!1296 = !{!1297, !1299, !1300}
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !1295, file: !1290, line: 159, baseType: !1298, size: 64)
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 64)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1295, file: !1290, line: 160, baseType: !1294, size: 64, offset: 64)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !1295, file: !1290, line: 161, baseType: !1301, size: 32, offset: 128)
!1301 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1110, size: 32, elements: !1302)
!1302 = !{!1303}
!1303 = !DISubrange(count: 4)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !1289, file: !1290, line: 168, baseType: !1298, size: 64, offset: 128)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !1289, file: !1290, line: 169, baseType: !1298, size: 64, offset: 192)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !1289, file: !1290, line: 170, baseType: !1298, size: 64, offset: 256)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !1289, file: !1290, line: 171, baseType: !1067, size: 64, offset: 320)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !1289, file: !1290, line: 172, baseType: !1010, size: 32, offset: 384)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !1289, file: !1290, line: 176, baseType: !1310, size: 64, offset: 448)
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1311, size: 64)
!1311 = !DISubroutineType(types: !1312)
!1312 = !{!1294, !1313, !1067}
!1313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !1289, file: !1290, line: 177, baseType: !1315, size: 64, offset: 512)
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 64)
!1316 = !DISubroutineType(types: !1317)
!1317 = !{null, !1313, !1294}
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !1289, file: !1290, line: 178, baseType: !1313, size: 64, offset: 576)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !1289, file: !1290, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !1289, file: !1290, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !1289, file: !1290, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !1208, file: !561, line: 177, baseType: !1011, size: 64)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !1208, file: !561, line: 178, baseType: !1324, size: 64)
!1324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1325, size: 64)
!1325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !513, line: 217, size: 832, elements: !1326)
!1326 = !{!1327, !1574, !1575, !1576, !1579, !1583, !1584, !1585, !1603, !1604, !1605, !1606, !1607, !1608}
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !1325, file: !513, line: 219, baseType: !1328, size: 64)
!1328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1329, size: 64)
!1329 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !513, line: 151, baseType: !1330)
!1330 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !513, line: 151, size: 128, elements: !1331)
!1331 = !{!1332}
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1330, file: !513, line: 151, baseType: !1333, size: 128)
!1333 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !513, line: 150, baseType: !1334)
!1334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !513, line: 150, size: 128, elements: !1335)
!1335 = !{!1336, !1337, !1338}
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1334, file: !513, line: 150, baseType: !7, size: 32)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1334, file: !513, line: 150, baseType: !7, size: 32, offset: 32)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1334, file: !513, line: 150, baseType: !1339, size: 64, offset: 64)
!1339 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1340, size: 64, elements: !1111)
!1340 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !1012, line: 108, baseType: !1341)
!1341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1342, size: 64)
!1342 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !513, line: 122, size: 512, elements: !1343)
!1343 = !{!1344, !1345, !1346, !1566, !1567, !1568, !1569, !1570, !1571, !1572}
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1342, file: !513, line: 124, baseType: !1324, size: 64)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !1342, file: !513, line: 125, baseType: !1324, size: 64, offset: 64)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !1342, file: !513, line: 131, baseType: !1347, size: 64, offset: 128)
!1347 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !513, line: 128, size: 64, elements: !1348)
!1348 = !{!1349, !1565}
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1347, file: !513, line: 129, baseType: !1350, size: 64)
!1350 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !1012, line: 66, baseType: !1351)
!1351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1352, size: 64)
!1352 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !1353, line: 143, size: 192, elements: !1354)
!1353 = !DIFile(filename: "./gimple.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1354 = !{!1355, !1563, !1564}
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !1352, file: !1353, line: 145, baseType: !1356, size: 64)
!1356 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq_node", file: !1012, line: 69, baseType: !1357)
!1357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1358, size: 64)
!1358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_node_d", file: !1353, line: 136, size: 192, elements: !1359)
!1359 = !{!1360, !1561, !1562}
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1358, file: !1353, line: 137, baseType: !1361, size: 64)
!1361 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !1012, line: 58, baseType: !1362)
!1362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1363, size: 64)
!1363 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !1353, line: 737, size: 768, elements: !1364)
!1364 = !{!1365, !1382, !1416, !1422, !1427, !1432, !1439, !1445, !1451, !1456, !1470, !1475, !1481, !1486, !1496, !1501, !1519, !1526, !1533, !1539, !1544, !1550, !1556}
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1363, file: !1353, line: 738, baseType: !1366, size: 256)
!1366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_base", file: !1353, line: 271, size: 256, elements: !1367)
!1367 = !{!1368, !1369, !1370, !1371, !1372, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381}
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1366, file: !1353, line: 274, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "no_warning", scope: !1366, file: !1353, line: 277, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1366, file: !1353, line: 281, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "nontemporal_move", scope: !1366, file: !1353, line: 284, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "plf", scope: !1366, file: !1353, line: 291, baseType: !7, size: 2, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "modified", scope: !1366, file: !1353, line: 295, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "has_volatile_ops", scope: !1366, file: !1353, line: 298, baseType: !7, size: 1, offset: 14, flags: DIFlagBitField, extraData: i64 0)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1366, file: !1353, line: 301, baseType: !7, size: 1, offset: 15, flags: DIFlagBitField, extraData: i64 0)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1366, file: !1353, line: 307, baseType: !7, size: 16, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1366, file: !1353, line: 312, baseType: !7, size: 32, offset: 32)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "location", scope: !1366, file: !1353, line: 316, baseType: !1138, size: 32, offset: 64)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "num_ops", scope: !1366, file: !1353, line: 319, baseType: !7, size: 32, offset: 96)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !1366, file: !1353, line: 323, baseType: !1324, size: 64, offset: 128)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1366, file: !1353, line: 327, baseType: !1011, size: 64, offset: 192)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "gsops", scope: !1363, file: !1353, line: 739, baseType: !1383, size: 448)
!1383 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops", file: !1353, line: 350, size: 448, elements: !1384)
!1384 = !{!1385, !1414}
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !1383, file: !1353, line: 353, baseType: !1386, size: 384)
!1386 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_ops_base", file: !1353, line: 333, size: 384, elements: !1387)
!1387 = !{!1388, !1389, !1397}
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1386, file: !1353, line: 336, baseType: !1366, size: 256)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "def_ops", scope: !1386, file: !1353, line: 343, baseType: !1390, size: 64, offset: 256)
!1390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1391, size: 64)
!1391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "def_optype_d", file: !1392, line: 37, size: 128, elements: !1393)
!1392 = !DIFile(filename: "./tree-ssa-operands.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1393 = !{!1394, !1395}
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1391, file: !1392, line: 39, baseType: !1390, size: 64)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "def_ptr", scope: !1391, file: !1392, line: 40, baseType: !1396, size: 64, offset: 64)
!1396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1011, size: 64)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "use_ops", scope: !1386, file: !1353, line: 344, baseType: !1398, size: 64, offset: 320)
!1398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1399, size: 64)
!1399 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "use_optype_d", file: !1392, line: 45, size: 320, elements: !1400)
!1400 = !{!1401, !1402}
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1399, file: !1392, line: 47, baseType: !1398, size: 64)
!1402 = !DIDerivedType(tag: DW_TAG_member, name: "use_ptr", scope: !1399, file: !1392, line: 48, baseType: !1403, size: 256, offset: 64)
!1403 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !190, line: 1883, size: 256, elements: !1404)
!1404 = !{!1405, !1407, !1408, !1413}
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1403, file: !190, line: 1884, baseType: !1406, size: 64)
!1406 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1403, size: 64)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1403, file: !190, line: 1885, baseType: !1406, size: 64, offset: 64)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1403, file: !190, line: 1891, baseType: !1409, size: 64, offset: 128)
!1409 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1403, file: !190, line: 1891, size: 64, elements: !1410)
!1410 = !{!1411, !1412}
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1409, file: !190, line: 1891, baseType: !1361, size: 64)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1409, file: !190, line: 1891, baseType: !1011, size: 64)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1403, file: !190, line: 1892, baseType: !1396, size: 64, offset: 192)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1383, file: !1353, line: 359, baseType: !1415, size: 64, offset: 384)
!1415 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1011, size: 64, elements: !1111)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "gsmembase", scope: !1363, file: !1353, line: 740, baseType: !1417, size: 512)
!1417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops_base", file: !1353, line: 365, size: 512, elements: !1418)
!1418 = !{!1419, !1420, !1421}
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "opbase", scope: !1417, file: !1353, line: 368, baseType: !1386, size: 384)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "vdef", scope: !1417, file: !1353, line: 373, baseType: !1011, size: 64, offset: 384)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "vuse", scope: !1417, file: !1353, line: 374, baseType: !1011, size: 64, offset: 448)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "gsmem", scope: !1363, file: !1353, line: 741, baseType: !1423, size: 576)
!1423 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_with_memory_ops", file: !1353, line: 380, size: 576, elements: !1424)
!1424 = !{!1425, !1426}
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !1423, file: !1353, line: 383, baseType: !1417, size: 512)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1423, file: !1353, line: 389, baseType: !1415, size: 64, offset: 512)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1363, file: !1353, line: 742, baseType: !1428, size: 320)
!1428 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp", file: !1353, line: 395, size: 320, elements: !1429)
!1429 = !{!1430, !1431}
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1428, file: !1353, line: 397, baseType: !1366, size: 256)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !1428, file: !1353, line: 400, baseType: !1350, size: 64, offset: 256)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_bind", scope: !1363, file: !1353, line: 743, baseType: !1433, size: 448)
!1433 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_bind", file: !1353, line: 406, size: 448, elements: !1434)
!1434 = !{!1435, !1436, !1437, !1438}
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1433, file: !1353, line: 408, baseType: !1366, size: 256)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1433, file: !1353, line: 412, baseType: !1011, size: 64, offset: 256)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1433, file: !1353, line: 420, baseType: !1011, size: 64, offset: 320)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "body", scope: !1433, file: !1353, line: 423, baseType: !1350, size: 64, offset: 384)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_catch", scope: !1363, file: !1353, line: 744, baseType: !1440, size: 384)
!1440 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_catch", file: !1353, line: 429, size: 384, elements: !1441)
!1441 = !{!1442, !1443, !1444}
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1440, file: !1353, line: 431, baseType: !1366, size: 256)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !1440, file: !1353, line: 434, baseType: !1011, size: 64, offset: 256)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "handler", scope: !1440, file: !1353, line: 437, baseType: !1350, size: 64, offset: 320)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_filter", scope: !1363, file: !1353, line: 745, baseType: !1446, size: 384)
!1446 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_filter", file: !1353, line: 443, size: 384, elements: !1447)
!1447 = !{!1448, !1449, !1450}
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1446, file: !1353, line: 445, baseType: !1366, size: 256)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "types", scope: !1446, file: !1353, line: 449, baseType: !1011, size: 64, offset: 256)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "failure", scope: !1446, file: !1353, line: 453, baseType: !1350, size: 64, offset: 320)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_mnt", scope: !1363, file: !1353, line: 746, baseType: !1452, size: 320)
!1452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_mnt", file: !1353, line: 459, size: 320, elements: !1453)
!1453 = !{!1454, !1455}
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1452, file: !1353, line: 461, baseType: !1366, size: 256)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "fndecl", scope: !1452, file: !1353, line: 464, baseType: !1011, size: 64, offset: 256)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_phi", scope: !1363, file: !1353, line: 747, baseType: !1457, size: 768)
!1457 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_phi", file: !1353, line: 469, size: 768, elements: !1458)
!1458 = !{!1459, !1460, !1461, !1462, !1463}
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1457, file: !1353, line: 471, baseType: !1366, size: 256)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !1457, file: !1353, line: 474, baseType: !7, size: 32, offset: 256)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "nargs", scope: !1457, file: !1353, line: 475, baseType: !7, size: 32, offset: 288)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1457, file: !1353, line: 478, baseType: !1011, size: 64, offset: 320)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "args", scope: !1457, file: !1353, line: 481, baseType: !1464, size: 384, offset: 384)
!1464 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1465, size: 384, elements: !1111)
!1465 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "phi_arg_d", file: !190, line: 1917, size: 384, elements: !1466)
!1466 = !{!1467, !1468, !1469}
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "imm_use", scope: !1465, file: !190, line: 1920, baseType: !1403, size: 256)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !1465, file: !190, line: 1921, baseType: !1011, size: 64, offset: 256)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1465, file: !190, line: 1922, baseType: !1138, size: 32, offset: 320)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_eh_ctrl", scope: !1363, file: !1353, line: 748, baseType: !1471, size: 320)
!1471 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_eh_ctrl", file: !1353, line: 487, size: 320, elements: !1472)
!1472 = !{!1473, !1474}
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1471, file: !1353, line: 490, baseType: !1366, size: 256)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "region", scope: !1471, file: !1353, line: 494, baseType: !1010, size: 32, offset: 256)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_try", scope: !1363, file: !1353, line: 749, baseType: !1476, size: 384)
!1476 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_try", file: !1353, line: 500, size: 384, elements: !1477)
!1477 = !{!1478, !1479, !1480}
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1476, file: !1353, line: 502, baseType: !1366, size: 256)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "eval", scope: !1476, file: !1353, line: 506, baseType: !1350, size: 64, offset: 256)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !1476, file: !1353, line: 510, baseType: !1350, size: 64, offset: 320)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_wce", scope: !1363, file: !1353, line: 750, baseType: !1482, size: 320)
!1482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_wce", file: !1353, line: 529, size: 320, elements: !1483)
!1483 = !{!1484, !1485}
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1482, file: !1353, line: 531, baseType: !1366, size: 256)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "cleanup", scope: !1482, file: !1353, line: 540, baseType: !1350, size: 64, offset: 256)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_asm", scope: !1363, file: !1353, line: 751, baseType: !1487, size: 704)
!1487 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_asm", file: !1353, line: 546, size: 704, elements: !1488)
!1488 = !{!1489, !1490, !1491, !1492, !1493, !1494, !1495}
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "membase", scope: !1487, file: !1353, line: 549, baseType: !1417, size: 512)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !1487, file: !1353, line: 553, baseType: !1213, size: 64, offset: 512)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "ni", scope: !1487, file: !1353, line: 557, baseType: !1130, size: 8, offset: 576)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !1487, file: !1353, line: 558, baseType: !1130, size: 8, offset: 584)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "nc", scope: !1487, file: !1353, line: 559, baseType: !1130, size: 8, offset: 592)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "nl", scope: !1487, file: !1353, line: 560, baseType: !1130, size: 8, offset: 600)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !1487, file: !1353, line: 566, baseType: !1415, size: 64, offset: 640)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_critical", scope: !1363, file: !1353, line: 752, baseType: !1497, size: 384)
!1497 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_critical", file: !1353, line: 571, size: 384, elements: !1498)
!1498 = !{!1499, !1500}
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1497, file: !1353, line: 573, baseType: !1428, size: 320)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1497, file: !1353, line: 577, baseType: !1011, size: 64, offset: 320)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_for", scope: !1363, file: !1353, line: 753, baseType: !1502, size: 576)
!1502 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_for", file: !1353, line: 600, size: 576, elements: !1503)
!1503 = !{!1504, !1505, !1506, !1509, !1518}
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1502, file: !1353, line: 602, baseType: !1428, size: 320)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1502, file: !1353, line: 605, baseType: !1011, size: 64, offset: 320)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "collapse", scope: !1502, file: !1353, line: 609, baseType: !1507, size: 64, offset: 384)
!1507 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1508, line: 46, baseType: !1065)
!1508 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "iter", scope: !1502, file: !1353, line: 612, baseType: !1510, size: 64, offset: 448)
!1510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1511, size: 64)
!1511 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_omp_for_iter", file: !1353, line: 581, size: 320, elements: !1512)
!1512 = !{!1513, !1514, !1515, !1516, !1517}
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "cond", scope: !1511, file: !1353, line: 583, baseType: !189, size: 32)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1511, file: !1353, line: 586, baseType: !1011, size: 64, offset: 64)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !1511, file: !1353, line: 589, baseType: !1011, size: 64, offset: 128)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "final", scope: !1511, file: !1353, line: 592, baseType: !1011, size: 64, offset: 192)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "incr", scope: !1511, file: !1353, line: 595, baseType: !1011, size: 64, offset: 256)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "pre_body", scope: !1502, file: !1353, line: 616, baseType: !1350, size: 64, offset: 512)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_parallel", scope: !1363, file: !1353, line: 754, baseType: !1520, size: 512)
!1520 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_parallel", file: !1353, line: 622, size: 512, elements: !1521)
!1521 = !{!1522, !1523, !1524, !1525}
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1520, file: !1353, line: 624, baseType: !1428, size: 320)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1520, file: !1353, line: 628, baseType: !1011, size: 64, offset: 320)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "child_fn", scope: !1520, file: !1353, line: 632, baseType: !1011, size: 64, offset: 384)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "data_arg", scope: !1520, file: !1353, line: 636, baseType: !1011, size: 64, offset: 448)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_task", scope: !1363, file: !1353, line: 755, baseType: !1527, size: 704)
!1527 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_task", file: !1353, line: 642, size: 704, elements: !1528)
!1528 = !{!1529, !1530, !1531, !1532}
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !1527, file: !1353, line: 644, baseType: !1520, size: 512)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "copy_fn", scope: !1527, file: !1353, line: 648, baseType: !1011, size: 64, offset: 512)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "arg_size", scope: !1527, file: !1353, line: 652, baseType: !1011, size: 64, offset: 576)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "arg_align", scope: !1527, file: !1353, line: 653, baseType: !1011, size: 64, offset: 640)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_sections", scope: !1363, file: !1353, line: 756, baseType: !1534, size: 448)
!1534 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_sections", file: !1353, line: 663, size: 448, elements: !1535)
!1535 = !{!1536, !1537, !1538}
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1534, file: !1353, line: 665, baseType: !1428, size: 320)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1534, file: !1353, line: 668, baseType: !1011, size: 64, offset: 320)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "control", scope: !1534, file: !1353, line: 673, baseType: !1011, size: 64, offset: 384)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_single", scope: !1363, file: !1353, line: 757, baseType: !1540, size: 384)
!1540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_single", file: !1353, line: 694, size: 384, elements: !1541)
!1541 = !{!1542, !1543}
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "omp", scope: !1540, file: !1353, line: 696, baseType: !1428, size: 320)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "clauses", scope: !1540, file: !1353, line: 699, baseType: !1011, size: 64, offset: 320)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_continue", scope: !1363, file: !1353, line: 758, baseType: !1545, size: 384)
!1545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_continue", file: !1353, line: 681, size: 384, elements: !1546)
!1546 = !{!1547, !1548, !1549}
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1545, file: !1353, line: 683, baseType: !1366, size: 256)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "control_def", scope: !1545, file: !1353, line: 686, baseType: !1011, size: 64, offset: 256)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "control_use", scope: !1545, file: !1353, line: 689, baseType: !1011, size: 64, offset: 320)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_load", scope: !1363, file: !1353, line: 759, baseType: !1551, size: 384)
!1551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_load", file: !1353, line: 707, size: 384, elements: !1552)
!1552 = !{!1553, !1554, !1555}
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1551, file: !1353, line: 709, baseType: !1366, size: 256)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "rhs", scope: !1551, file: !1353, line: 712, baseType: !1011, size: 64, offset: 256)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "lhs", scope: !1551, file: !1353, line: 712, baseType: !1011, size: 64, offset: 320)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_omp_atomic_store", scope: !1363, file: !1353, line: 760, baseType: !1557, size: 320)
!1557 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_statement_omp_atomic_store", file: !1353, line: 718, size: 320, elements: !1558)
!1558 = !{!1559, !1560}
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "gsbase", scope: !1557, file: !1353, line: 720, baseType: !1366, size: 256)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1557, file: !1353, line: 723, baseType: !1011, size: 64, offset: 256)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1358, file: !1353, line: 138, baseType: !1357, size: 64, offset: 64)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1358, file: !1353, line: 139, baseType: !1357, size: 64, offset: 128)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !1352, file: !1353, line: 146, baseType: !1356, size: 64, offset: 64)
!1564 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !1352, file: !1353, line: 152, baseType: !1350, size: 64, offset: 128)
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1347, file: !513, line: 130, baseType: !1188, size: 64)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1342, file: !513, line: 134, baseType: !1313, size: 64, offset: 192)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !1342, file: !513, line: 137, baseType: !1011, size: 64, offset: 256)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !1342, file: !513, line: 138, baseType: !1138, size: 32, offset: 320)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !1342, file: !513, line: 142, baseType: !7, size: 32, offset: 352)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1342, file: !513, line: 144, baseType: !1010, size: 32, offset: 384)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !1342, file: !513, line: 145, baseType: !1010, size: 32, offset: 416)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1342, file: !513, line: 146, baseType: !1573, size: 64, offset: 448)
!1573 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !513, line: 119, baseType: !1067)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !1325, file: !513, line: 220, baseType: !1328, size: 64, offset: 64)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1325, file: !513, line: 223, baseType: !1313, size: 64, offset: 128)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !1325, file: !513, line: 226, baseType: !1577, size: 64, offset: 192)
!1577 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1578, size: 64)
!1578 = !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !513, line: 185, flags: DIFlagFwdDecl)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !1325, file: !513, line: 229, baseType: !1580, size: 128, offset: 256)
!1580 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1581, size: 128, elements: !1277)
!1581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1582, size: 64)
!1582 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !513, line: 229, flags: DIFlagFwdDecl)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !1325, file: !513, line: 232, baseType: !1324, size: 64, offset: 384)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !1325, file: !513, line: 233, baseType: !1324, size: 64, offset: 448)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !1325, file: !513, line: 238, baseType: !1586, size: 64, offset: 512)
!1586 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !513, line: 235, size: 64, elements: !1587)
!1587 = !{!1588, !1594}
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1586, file: !513, line: 236, baseType: !1589, size: 64)
!1589 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1590, size: 64)
!1590 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !513, line: 273, size: 128, elements: !1591)
!1591 = !{!1592, !1593}
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1590, file: !513, line: 275, baseType: !1350, size: 64)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1590, file: !513, line: 278, baseType: !1350, size: 64, offset: 64)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1586, file: !513, line: 237, baseType: !1595, size: 64)
!1595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1596, size: 64)
!1596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !513, line: 259, size: 320, elements: !1597)
!1597 = !{!1598, !1599, !1600, !1601, !1602}
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1596, file: !513, line: 261, baseType: !1188, size: 64)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1596, file: !513, line: 262, baseType: !1188, size: 64, offset: 64)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1596, file: !513, line: 266, baseType: !1188, size: 64, offset: 128)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1596, file: !513, line: 267, baseType: !1188, size: 64, offset: 192)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1596, file: !513, line: 270, baseType: !1010, size: 32, offset: 256)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1325, file: !513, line: 241, baseType: !1573, size: 64, offset: 576)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1325, file: !513, line: 244, baseType: !1010, size: 32, offset: 640)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !1325, file: !513, line: 247, baseType: !1010, size: 32, offset: 672)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !1325, file: !513, line: 250, baseType: !1010, size: 32, offset: 704)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !1325, file: !513, line: 253, baseType: !1010, size: 32, offset: 736)
!1608 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1325, file: !513, line: 256, baseType: !1010, size: 32, offset: 768)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !1208, file: !561, line: 179, baseType: !1610, size: 64)
!1610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1611, size: 64)
!1611 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !561, line: 150, baseType: !1612)
!1612 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !561, line: 142, size: 320, elements: !1613)
!1613 = !{!1614, !1615, !1616, !1617, !1620, !1621}
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1612, file: !561, line: 144, baseType: !1011, size: 64)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1612, file: !561, line: 145, baseType: !1188, size: 64, offset: 64)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1612, file: !561, line: 146, baseType: !1188, size: 64, offset: 128)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1612, file: !561, line: 147, baseType: !1618, size: 32, offset: 192)
!1618 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1619, line: 31, baseType: !1010)
!1619 = !DIFile(filename: "./alias.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1612, file: !561, line: 148, baseType: !7, size: 32, offset: 224)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1612, file: !561, line: 149, baseType: !1130, size: 8, offset: 256)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !1208, file: !561, line: 180, baseType: !1623, size: 64)
!1623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1624, size: 64)
!1624 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !561, line: 162, baseType: !1625)
!1625 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !561, line: 159, size: 128, elements: !1626)
!1626 = !{!1627, !1628}
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1625, file: !561, line: 160, baseType: !1011, size: 64)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1625, file: !561, line: 161, baseType: !1067, size: 64, offset: 64)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !1208, file: !561, line: 181, baseType: !1630, size: 64)
!1630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1631, size: 64)
!1631 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !561, line: 181, flags: DIFlagFwdDecl)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !1203, file: !561, line: 317, baseType: !1633, size: 64)
!1633 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1067, size: 64, elements: !1111)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !1203, file: !561, line: 318, baseType: !1635, size: 320)
!1635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !561, line: 188, size: 320, elements: !1636)
!1636 = !{!1637, !1639, !1696}
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1635, file: !561, line: 190, baseType: !1638, size: 192)
!1638 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1207, size: 192, elements: !1085)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1635, file: !561, line: 193, baseType: !1640, size: 64, offset: 192)
!1640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1641, size: 64)
!1641 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !561, line: 206, size: 320, elements: !1642)
!1642 = !{!1643, !1681, !1682, !1683, !1695}
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1641, file: !561, line: 208, baseType: !1644, size: 64)
!1644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1645, size: 64)
!1645 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !1012, line: 62, baseType: !1646)
!1646 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !1647, line: 538, size: 256, elements: !1648)
!1647 = !DIFile(filename: "./output.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1648 = !{!1649, !1653, !1659, !1672}
!1649 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1646, file: !1647, line: 539, baseType: !1650, size: 32)
!1650 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "section_common", file: !1647, line: 482, size: 32, elements: !1651)
!1651 = !{!1652}
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1650, file: !1647, line: 484, baseType: !7, size: 32)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "named", scope: !1646, file: !1647, line: 540, baseType: !1654, size: 192)
!1654 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "named_section", file: !1647, line: 488, size: 192, elements: !1655)
!1655 = !{!1656, !1657, !1658}
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1654, file: !1647, line: 489, baseType: !1650, size: 32)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1654, file: !1647, line: 492, baseType: !1213, size: 64, offset: 64)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1654, file: !1647, line: 496, baseType: !1011, size: 64, offset: 128)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "unnamed", scope: !1646, file: !1647, line: 541, baseType: !1660, size: 256)
!1660 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "unnamed_section", file: !1647, line: 504, size: 256, elements: !1661)
!1661 = !{!1662, !1663, !1670, !1671}
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1660, file: !1647, line: 505, baseType: !1650, size: 32)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1660, file: !1647, line: 509, baseType: !1664, size: 64, offset: 64)
!1664 = !DIDerivedType(tag: DW_TAG_typedef, name: "unnamed_section_callback", file: !1647, line: 501, baseType: !1665)
!1665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1666, size: 64)
!1666 = !DISubroutineType(types: !1667)
!1667 = !{null, !1668}
!1668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1669, size: 64)
!1669 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1670 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1660, file: !1647, line: 510, baseType: !1668, size: 64, offset: 128)
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1660, file: !1647, line: 513, baseType: !1644, size: 64, offset: 192)
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "noswitch", scope: !1646, file: !1647, line: 542, baseType: !1673, size: 128)
!1673 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "noswitch_section", file: !1647, line: 530, size: 128, elements: !1674)
!1674 = !{!1675, !1676}
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1673, file: !1647, line: 531, baseType: !1650, size: 32)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1673, file: !1647, line: 534, baseType: !1677, size: 64, offset: 64)
!1677 = !DIDerivedType(tag: DW_TAG_typedef, name: "noswitch_section_callback", file: !1647, line: 525, baseType: !1678)
!1678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1679, size: 64)
!1679 = !DISubroutineType(types: !1680)
!1680 = !{!1130, !1011, !1213, !1065, !1065}
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1641, file: !561, line: 211, baseType: !7, size: 32, offset: 64)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1641, file: !561, line: 214, baseType: !1067, size: 64, offset: 128)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1641, file: !561, line: 224, baseType: !1684, size: 64, offset: 192)
!1684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1685, size: 64)
!1685 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !561, line: 202, baseType: !1686)
!1686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !561, line: 202, size: 128, elements: !1687)
!1687 = !{!1688}
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1686, file: !561, line: 202, baseType: !1689, size: 128)
!1689 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !561, line: 200, baseType: !1690)
!1690 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !561, line: 200, size: 128, elements: !1691)
!1691 = !{!1692, !1693, !1694}
!1692 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1690, file: !561, line: 200, baseType: !7, size: 32)
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1690, file: !561, line: 200, baseType: !7, size: 32, offset: 32)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1690, file: !561, line: 200, baseType: !1223, size: 64, offset: 64)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1641, file: !561, line: 234, baseType: !1684, size: 64, offset: 256)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1635, file: !561, line: 197, baseType: !1067, size: 64, offset: 256)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !1203, file: !561, line: 319, baseType: !1074, size: 256)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !1203, file: !561, line: 320, baseType: !1093, size: 192)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !1014, file: !190, line: 3384, baseType: !1700, size: 1472)
!1700 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !190, line: 3114, size: 1472, elements: !1701)
!1701 = !{!1702, !1723, !1724, !1725, !1726}
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1700, file: !190, line: 3115, baseType: !1703, size: 1216)
!1703 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !190, line: 2984, size: 1216, elements: !1704)
!1704 = !{!1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722}
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1703, file: !190, line: 2985, baseType: !1184, size: 960)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !1703, file: !190, line: 2986, baseType: !1011, size: 64, offset: 960)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !1703, file: !190, line: 2987, baseType: !1011, size: 64, offset: 1024)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !1703, file: !190, line: 2988, baseType: !1011, size: 64, offset: 1088)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !1703, file: !190, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !1703, file: !190, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !1703, file: !190, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !1703, file: !190, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !1703, file: !190, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !1703, file: !190, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !1703, file: !190, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !1703, file: !190, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !1703, file: !190, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !1703, file: !190, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !1703, file: !190, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !1703, file: !190, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !1703, file: !190, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !1703, file: !190, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !1700, file: !190, line: 3117, baseType: !1011, size: 64, offset: 1216)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !1700, file: !190, line: 3119, baseType: !1011, size: 64, offset: 1280)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1700, file: !190, line: 3121, baseType: !1011, size: 64, offset: 1344)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !1700, file: !190, line: 3123, baseType: !1011, size: 64, offset: 1408)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !1014, file: !190, line: 3385, baseType: !1728, size: 1088)
!1728 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !190, line: 2874, size: 1088, elements: !1729)
!1729 = !{!1730, !1731, !1732}
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1728, file: !190, line: 2875, baseType: !1184, size: 960)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !1728, file: !190, line: 2876, baseType: !1188, size: 64, offset: 960)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1728, file: !190, line: 2877, baseType: !1733, size: 64, offset: 1024)
!1733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1734, size: 64)
!1734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !1735, line: 172, size: 128, elements: !1736)
!1735 = !DIFile(filename: "./tree-flow.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1736 = !{!1737, !1738, !1739, !1740, !1741, !1742, !1743}
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "base_var_processed", scope: !1734, file: !1735, line: 174, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !1734, file: !1735, line: 178, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "need_phi_state", scope: !1734, file: !1735, line: 183, baseType: !7, size: 2, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "is_heapvar", scope: !1734, file: !1735, line: 187, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "noalias_state", scope: !1734, file: !1735, line: 192, baseType: !7, size: 2, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "base_index", scope: !1734, file: !1735, line: 195, baseType: !7, size: 32, offset: 32)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "current_def", scope: !1734, file: !1735, line: 199, baseType: !1011, size: 64, offset: 64)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !1014, file: !190, line: 3386, baseType: !1703, size: 1216)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !1014, file: !190, line: 3387, baseType: !1746, size: 1280)
!1746 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !190, line: 3093, size: 1280, elements: !1747)
!1747 = !{!1748, !1749}
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1746, file: !190, line: 3094, baseType: !1703, size: 1216)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1746, file: !190, line: 3095, baseType: !1733, size: 64, offset: 1216)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !1014, file: !190, line: 3388, baseType: !1751, size: 1216)
!1751 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !190, line: 2824, size: 1216, elements: !1752)
!1752 = !{!1753, !1754, !1755, !1756, !1757, !1758}
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1751, file: !190, line: 2825, baseType: !1146, size: 896)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1751, file: !190, line: 2827, baseType: !1011, size: 64, offset: 896)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !1751, file: !190, line: 2828, baseType: !1011, size: 64, offset: 960)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !1751, file: !190, line: 2829, baseType: !1011, size: 64, offset: 1024)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !1751, file: !190, line: 2830, baseType: !1011, size: 64, offset: 1088)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !1751, file: !190, line: 2831, baseType: !1011, size: 64, offset: 1152)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !1014, file: !190, line: 3389, baseType: !1760, size: 1024)
!1760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !190, line: 2850, size: 1024, elements: !1761)
!1761 = !{!1762, !1763, !1764}
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1760, file: !190, line: 2851, baseType: !1184, size: 960)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !1760, file: !190, line: 2852, baseType: !1010, size: 32, offset: 960)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !1760, file: !190, line: 2853, baseType: !1010, size: 32, offset: 992)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !1014, file: !190, line: 3390, baseType: !1766, size: 1024)
!1766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !190, line: 2857, size: 1024, elements: !1767)
!1767 = !{!1768, !1769}
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1766, file: !190, line: 2858, baseType: !1184, size: 960)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1766, file: !190, line: 2859, baseType: !1733, size: 64, offset: 960)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !1014, file: !190, line: 3391, baseType: !1771, size: 960)
!1771 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !190, line: 2862, size: 960, elements: !1772)
!1772 = !{!1773}
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1771, file: !190, line: 2863, baseType: !1184, size: 960)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !1014, file: !190, line: 3392, baseType: !1775, size: 1472)
!1775 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !190, line: 3304, size: 1472, elements: !1776)
!1776 = !{!1777}
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1775, file: !190, line: 3305, baseType: !1700, size: 1472)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !1014, file: !190, line: 3393, baseType: !1779, size: 1792)
!1779 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !190, line: 3248, size: 1792, elements: !1780)
!1780 = !{!1781, !1782, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012, !2013}
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1779, file: !190, line: 3249, baseType: !1700, size: 1472)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1779, file: !190, line: 3251, baseType: !1783, size: 64, offset: 1472)
!1783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1784, size: 64)
!1784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1785, line: 463, size: 1152, elements: !1786)
!1785 = !DIFile(filename: "./function.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1786 = !{!1787, !1790, !1821, !1822, !1934, !1937, !1938, !1939, !1940, !1941, !1942, !1966, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985, !1986, !1987, !1988, !1989, !1990, !1991, !1992}
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1784, file: !1785, line: 464, baseType: !1788, size: 64)
!1788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1789, size: 64)
!1789 = !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !1785, line: 464, flags: DIFlagFwdDecl)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1784, file: !1785, line: 467, baseType: !1791, size: 64, offset: 64)
!1791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1792, size: 64)
!1792 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !513, line: 374, size: 640, elements: !1793)
!1793 = !{!1794, !1796, !1797, !1810, !1811, !1812, !1813, !1814, !1815, !1817, !1819, !1820}
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1792, file: !513, line: 377, baseType: !1795, size: 64)
!1795 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !1012, line: 111, baseType: !1324)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1792, file: !513, line: 378, baseType: !1795, size: 64, offset: 64)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1792, file: !513, line: 381, baseType: !1798, size: 64, offset: 128)
!1798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1799, size: 64)
!1799 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !513, line: 282, baseType: !1800)
!1800 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !513, line: 282, size: 128, elements: !1801)
!1801 = !{!1802}
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1800, file: !513, line: 282, baseType: !1803, size: 128)
!1803 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !513, line: 281, baseType: !1804)
!1804 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !513, line: 281, size: 128, elements: !1805)
!1805 = !{!1806, !1807, !1808}
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1804, file: !513, line: 281, baseType: !7, size: 32)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1804, file: !513, line: 281, baseType: !7, size: 32, offset: 32)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1804, file: !513, line: 281, baseType: !1809, size: 64, offset: 64)
!1809 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1795, size: 64, elements: !1111)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1792, file: !513, line: 384, baseType: !1010, size: 32, offset: 192)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1792, file: !513, line: 387, baseType: !1010, size: 32, offset: 224)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1792, file: !513, line: 390, baseType: !1010, size: 32, offset: 256)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1792, file: !513, line: 394, baseType: !1798, size: 64, offset: 320)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1792, file: !513, line: 396, baseType: !512, size: 32, offset: 384)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1792, file: !513, line: 399, baseType: !1816, size: 64, offset: 416)
!1816 = !DICompositeType(tag: DW_TAG_array_type, baseType: !518, size: 64, elements: !1277)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1792, file: !513, line: 402, baseType: !1818, size: 64, offset: 480)
!1818 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !1277)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1792, file: !513, line: 406, baseType: !1010, size: 32, offset: 544)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1792, file: !513, line: 409, baseType: !1010, size: 32, offset: 576)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1784, file: !1785, line: 470, baseType: !1351, size: 64, offset: 128)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1784, file: !1785, line: 473, baseType: !1823, size: 64, offset: 192)
!1823 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1824, size: 64)
!1824 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !1735, line: 39, size: 1152, elements: !1825)
!1825 = !{!1826, !1873, !1886, !1898, !1899, !1911, !1912, !1916, !1917, !1918, !1919, !1920}
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "referenced_vars", scope: !1824, file: !1735, line: 41, baseType: !1827, size: 64)
!1827 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !740, line: 144, baseType: !1828)
!1828 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1829, size: 64)
!1829 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !740, line: 100, size: 896, elements: !1830)
!1830 = !{!1831, !1837, !1842, !1847, !1849, !1850, !1851, !1852, !1853, !1854, !1859, !1861, !1862, !1867, !1872}
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1829, file: !740, line: 102, baseType: !1832, size: 64)
!1832 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !740, line: 52, baseType: !1833)
!1833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1834, size: 64)
!1834 = !DISubroutineType(types: !1835)
!1835 = !{!1836, !1668}
!1836 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !740, line: 47, baseType: !7)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1829, file: !740, line: 105, baseType: !1838, size: 64, offset: 64)
!1838 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !740, line: 59, baseType: !1839)
!1839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1840, size: 64)
!1840 = !DISubroutineType(types: !1841)
!1841 = !{!1010, !1668, !1668}
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1829, file: !740, line: 108, baseType: !1843, size: 64, offset: 128)
!1843 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !740, line: 63, baseType: !1844)
!1844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1845, size: 64)
!1845 = !DISubroutineType(types: !1846)
!1846 = !{null, !1313}
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1829, file: !740, line: 111, baseType: !1848, size: 64, offset: 192)
!1848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1313, size: 64)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1829, file: !740, line: 114, baseType: !1507, size: 64, offset: 256)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1829, file: !740, line: 117, baseType: !1507, size: 64, offset: 320)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1829, file: !740, line: 120, baseType: !1507, size: 64, offset: 384)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1829, file: !740, line: 124, baseType: !7, size: 32, offset: 448)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1829, file: !740, line: 128, baseType: !7, size: 32, offset: 480)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1829, file: !740, line: 131, baseType: !1855, size: 64, offset: 512)
!1855 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !740, line: 75, baseType: !1856)
!1856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1857, size: 64)
!1857 = !DISubroutineType(types: !1858)
!1858 = !{!1313, !1507, !1507}
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1829, file: !740, line: 132, baseType: !1860, size: 64, offset: 576)
!1860 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !740, line: 78, baseType: !1844)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1829, file: !740, line: 135, baseType: !1313, size: 64, offset: 640)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1829, file: !740, line: 136, baseType: !1863, size: 64, offset: 704)
!1863 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !740, line: 82, baseType: !1864)
!1864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1865, size: 64)
!1865 = !DISubroutineType(types: !1866)
!1866 = !{!1313, !1313, !1507, !1507}
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1829, file: !740, line: 137, baseType: !1868, size: 64, offset: 768)
!1868 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !740, line: 83, baseType: !1869)
!1869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1870, size: 64)
!1870 = !DISubroutineType(types: !1871)
!1871 = !{null, !1313, !1313}
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1829, file: !740, line: 141, baseType: !7, size: 32, offset: 832)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "modified_noreturn_calls", scope: !1824, file: !1735, line: 48, baseType: !1874, size: 64, offset: 64)
!1874 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1875, size: 64)
!1875 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_gc", file: !1353, line: 35, baseType: !1876)
!1876 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_gc", file: !1353, line: 35, size: 128, elements: !1877)
!1877 = !{!1878}
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1876, file: !1353, line: 35, baseType: !1879, size: 128)
!1879 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_gimple_base", file: !1353, line: 33, baseType: !1880)
!1880 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_gimple_base", file: !1353, line: 33, size: 128, elements: !1881)
!1881 = !{!1882, !1883, !1884}
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1880, file: !1353, line: 33, baseType: !7, size: 32)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1880, file: !1353, line: 33, baseType: !7, size: 32, offset: 32)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1880, file: !1353, line: 33, baseType: !1885, size: 64, offset: 64)
!1885 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1361, size: 64, elements: !1111)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_names", scope: !1824, file: !1735, line: 51, baseType: !1887, size: 64, offset: 128)
!1887 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1888, size: 64)
!1888 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !190, line: 183, baseType: !1889)
!1889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !190, line: 183, size: 128, elements: !1890)
!1890 = !{!1891}
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1889, file: !190, line: 183, baseType: !1892, size: 128)
!1892 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !190, line: 182, baseType: !1893)
!1893 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !190, line: 182, size: 128, elements: !1894)
!1894 = !{!1895, !1896, !1897}
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1893, file: !190, line: 182, baseType: !7, size: 32)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1893, file: !190, line: 182, baseType: !7, size: 32, offset: 32)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1893, file: !190, line: 182, baseType: !1415, size: 64, offset: 64)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "vop", scope: !1824, file: !1735, line: 54, baseType: !1011, size: 64, offset: 192)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1824, file: !1735, line: 57, baseType: !1900, size: 128, offset: 256)
!1900 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "pt_solution", file: !1901, line: 31, size: 128, elements: !1902)
!1901 = !DIFile(filename: "./tree-ssa-alias.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1902 = !{!1903, !1904, !1905, !1906, !1907, !1908, !1909}
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "anything", scope: !1900, file: !1901, line: 35, baseType: !7, size: 1, flags: DIFlagBitField, extraData: i64 0)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal", scope: !1900, file: !1901, line: 39, baseType: !7, size: 1, offset: 1, flags: DIFlagBitField, extraData: i64 0)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "escaped", scope: !1900, file: !1901, line: 42, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "null", scope: !1900, file: !1901, line: 46, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_global", scope: !1900, file: !1901, line: 50, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "vars_contains_restrict", scope: !1900, file: !1901, line: 53, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1900, file: !1901, line: 56, baseType: !1910, size: 64, offset: 64)
!1910 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !1012, line: 47, baseType: !1261)
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "callused", scope: !1824, file: !1735, line: 60, baseType: !1900, size: 128, offset: 384)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "decls_to_pointers", scope: !1824, file: !1735, line: 64, baseType: !1913, size: 64, offset: 512)
!1913 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1914, size: 64)
!1914 = !DICompositeType(tag: DW_TAG_structure_type, name: "pointer_map_t", file: !1915, line: 33, flags: DIFlagFwdDecl)
!1915 = !DIFile(filename: "./pointer-set.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "free_ssanames", scope: !1824, file: !1735, line: 67, baseType: !1011, size: 64, offset: 576)
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "default_defs", scope: !1824, file: !1735, line: 73, baseType: !1827, size: 64, offset: 640)
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "syms_to_rename", scope: !1824, file: !1735, line: 77, baseType: !1910, size: 64, offset: 704)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "in_ssa_p", scope: !1824, file: !1735, line: 80, baseType: !7, size: 1, offset: 768, flags: DIFlagBitField, extraData: i64 768)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operands", scope: !1824, file: !1735, line: 82, baseType: !1921, size: 320, offset: 832)
!1921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operands", file: !1392, line: 62, size: 320, elements: !1922)
!1922 = !{!1923, !1929, !1930, !1931, !1932, !1933}
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory", scope: !1921, file: !1392, line: 63, baseType: !1924, size: 64)
!1924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1925, size: 64)
!1925 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_operand_memory_d", file: !1392, line: 56, size: 128, elements: !1926)
!1926 = !{!1927, !1928}
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1925, file: !1392, line: 57, baseType: !1924, size: 64)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "mem", scope: !1925, file: !1392, line: 58, baseType: !1109, size: 8, offset: 64)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "operand_memory_index", scope: !1921, file: !1392, line: 64, baseType: !7, size: 32, offset: 64)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_operand_mem_size", scope: !1921, file: !1392, line: 66, baseType: !7, size: 32, offset: 96)
!1931 = !DIDerivedType(tag: DW_TAG_member, name: "ops_active", scope: !1921, file: !1392, line: 68, baseType: !1130, size: 8, offset: 128)
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "free_defs", scope: !1921, file: !1392, line: 70, baseType: !1390, size: 64, offset: 192)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "free_uses", scope: !1921, file: !1392, line: 71, baseType: !1398, size: 64, offset: 256)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1784, file: !1785, line: 476, baseType: !1935, size: 64, offset: 256)
!1935 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1936, size: 64)
!1936 = !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !1785, line: 476, flags: DIFlagFwdDecl)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1784, file: !1785, line: 479, baseType: !1827, size: 64, offset: 320)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1784, file: !1785, line: 484, baseType: !1011, size: 64, offset: 384)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1784, file: !1785, line: 488, baseType: !1011, size: 64, offset: 448)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1784, file: !1785, line: 493, baseType: !1011, size: 64, offset: 512)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1784, file: !1785, line: 496, baseType: !1011, size: 64, offset: 576)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1784, file: !1785, line: 501, baseType: !1943, size: 64, offset: 640)
!1943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1944, size: 64)
!1944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !524, line: 2355, size: 576, elements: !1945)
!1945 = !{!1946, !1949, !1950, !1951, !1952, !1954, !1955, !1960, !1961, !1962, !1963, !1964, !1965}
!1946 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1944, file: !524, line: 2356, baseType: !1947, size: 64)
!1947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1948, size: 64)
!1948 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !524, line: 2356, flags: DIFlagFwdDecl)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1944, file: !524, line: 2357, baseType: !1213, size: 64, offset: 64)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1944, file: !524, line: 2358, baseType: !1010, size: 32, offset: 128)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1944, file: !524, line: 2359, baseType: !1010, size: 32, offset: 160)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1944, file: !524, line: 2360, baseType: !1953, size: 128, offset: 192)
!1953 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1010, size: 128, elements: !1302)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1944, file: !524, line: 2364, baseType: !1010, size: 32, offset: 320)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1944, file: !524, line: 2367, baseType: !1956, size: 128, offset: 384)
!1956 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !524, line: 2349, size: 128, elements: !1957)
!1957 = !{!1958, !1959}
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1956, file: !524, line: 2351, baseType: !1188, size: 64)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1956, file: !524, line: 2352, baseType: !1067, size: 64, offset: 64)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1944, file: !524, line: 2371, baseType: !523, size: 32, offset: 512)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1944, file: !524, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1944, file: !524, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1944, file: !524, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1944, file: !524, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1944, file: !524, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1784, file: !1785, line: 504, baseType: !1967, size: 64, offset: 704)
!1967 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1968, size: 64)
!1968 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !1785, line: 504, flags: DIFlagFwdDecl)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1784, file: !1785, line: 507, baseType: !1827, size: 64, offset: 768)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1784, file: !1785, line: 510, baseType: !1010, size: 32, offset: 832)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1784, file: !1785, line: 513, baseType: !1010, size: 32, offset: 864)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1784, file: !1785, line: 516, baseType: !1138, size: 32, offset: 896)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1784, file: !1785, line: 519, baseType: !1138, size: 32, offset: 928)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1784, file: !1785, line: 522, baseType: !7, size: 32, offset: 960)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1784, file: !1785, line: 523, baseType: !7, size: 32, offset: 992)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1784, file: !1785, line: 528, baseType: !1213, size: 64, offset: 1024)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1784, file: !1785, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1784, file: !1785, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1784, file: !1785, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1784, file: !1785, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1784, file: !1785, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1784, file: !1785, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1784, file: !1785, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1984 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1784, file: !1785, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1784, file: !1785, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1784, file: !1785, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1784, file: !1785, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1784, file: !1785, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1784, file: !1785, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1784, file: !1785, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1784, file: !1785, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1992 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1784, file: !1785, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1779, file: !190, line: 3254, baseType: !1011, size: 64, offset: 1536)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !1779, file: !190, line: 3257, baseType: !1011, size: 64, offset: 1600)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !1779, file: !190, line: 3258, baseType: !1011, size: 64, offset: 1664)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !1779, file: !190, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !1779, file: !190, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1998 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !1779, file: !190, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1999 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !1779, file: !190, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !1779, file: !190, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !1779, file: !190, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !1779, file: !190, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !1779, file: !190, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !1779, file: !190, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !1779, file: !190, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!2006 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !1779, file: !190, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!2007 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !1779, file: !190, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !1779, file: !190, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !1779, file: !190, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !1779, file: !190, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1779, file: !190, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !1779, file: !190, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !1779, file: !190, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1014, file: !190, line: 3394, baseType: !2015, size: 1344)
!2015 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !190, line: 2279, size: 1344, elements: !2016)
!2016 = !{!2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2058}
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2015, file: !190, line: 2280, baseType: !1050, size: 192)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !2015, file: !190, line: 2281, baseType: !1011, size: 64, offset: 192)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2015, file: !190, line: 2282, baseType: !1011, size: 64, offset: 256)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !2015, file: !190, line: 2283, baseType: !1011, size: 64, offset: 320)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !2015, file: !190, line: 2284, baseType: !1011, size: 64, offset: 384)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !2015, file: !190, line: 2285, baseType: !7, size: 32, offset: 448)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !2015, file: !190, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!2024 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !2015, file: !190, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!2025 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !2015, file: !190, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!2026 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !2015, file: !190, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !2015, file: !190, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!2028 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !2015, file: !190, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !2015, file: !190, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !2015, file: !190, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !2015, file: !190, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !2015, file: !190, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !2015, file: !190, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !2015, file: !190, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !2015, file: !190, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!2036 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !2015, file: !190, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !2015, file: !190, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2015, file: !190, line: 2305, baseType: !7, size: 32, offset: 512)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !2015, file: !190, line: 2306, baseType: !1618, size: 32, offset: 544)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !2015, file: !190, line: 2307, baseType: !1011, size: 64, offset: 576)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !2015, file: !190, line: 2308, baseType: !1011, size: 64, offset: 640)
!2042 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !2015, file: !190, line: 2314, baseType: !2043, size: 64, offset: 704)
!2043 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !190, line: 2309, size: 64, elements: !2044)
!2044 = !{!2045, !2046, !2047}
!2045 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !2043, file: !190, line: 2310, baseType: !1010, size: 32)
!2046 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !2043, file: !190, line: 2311, baseType: !1213, size: 64)
!2047 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !2043, file: !190, line: 2312, baseType: !2048, size: 64)
!2048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2049, size: 64)
!2049 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !190, line: 2277, flags: DIFlagFwdDecl)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2015, file: !190, line: 2315, baseType: !1011, size: 64, offset: 768)
!2051 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !2015, file: !190, line: 2316, baseType: !1011, size: 64, offset: 832)
!2052 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !2015, file: !190, line: 2317, baseType: !1011, size: 64, offset: 896)
!2053 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !2015, file: !190, line: 2318, baseType: !1011, size: 64, offset: 960)
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !2015, file: !190, line: 2319, baseType: !1011, size: 64, offset: 1024)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !2015, file: !190, line: 2320, baseType: !1011, size: 64, offset: 1088)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !2015, file: !190, line: 2321, baseType: !1011, size: 64, offset: 1152)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !2015, file: !190, line: 2322, baseType: !1011, size: 64, offset: 1216)
!2058 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !2015, file: !190, line: 2324, baseType: !2059, size: 64, offset: 1280)
!2059 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2060, size: 64)
!2060 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !190, line: 2324, flags: DIFlagFwdDecl)
!2061 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1014, file: !190, line: 3395, baseType: !2062, size: 320)
!2062 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !190, line: 1469, size: 320, elements: !2063)
!2063 = !{!2064, !2065, !2066}
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2062, file: !190, line: 1470, baseType: !1050, size: 192)
!2065 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !2062, file: !190, line: 1471, baseType: !1011, size: 64, offset: 192)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2062, file: !190, line: 1472, baseType: !1011, size: 64, offset: 256)
!2067 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1014, file: !190, line: 3396, baseType: !2068, size: 320)
!2068 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !190, line: 1482, size: 320, elements: !2069)
!2069 = !{!2070, !2071, !2072}
!2070 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2068, file: !190, line: 1483, baseType: !1050, size: 192)
!2071 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !2068, file: !190, line: 1484, baseType: !1010, size: 32, offset: 192)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !2068, file: !190, line: 1485, baseType: !1415, size: 64, offset: 256)
!2073 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !1014, file: !190, line: 3397, baseType: !2074, size: 384)
!2074 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !190, line: 1829, size: 384, elements: !2075)
!2075 = !{!2076, !2077, !2078, !2079}
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2074, file: !190, line: 1830, baseType: !1050, size: 192)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !2074, file: !190, line: 1831, baseType: !1138, size: 32, offset: 192)
!2078 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !2074, file: !190, line: 1832, baseType: !1011, size: 64, offset: 256)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !2074, file: !190, line: 1835, baseType: !1415, size: 64, offset: 320)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1014, file: !190, line: 3398, baseType: !2081, size: 704)
!2081 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !190, line: 1898, size: 704, elements: !2082)
!2082 = !{!2083, !2084, !2085, !2086, !2087, !2092}
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2081, file: !190, line: 1899, baseType: !1050, size: 192)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !2081, file: !190, line: 1902, baseType: !1011, size: 64, offset: 192)
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !2081, file: !190, line: 1905, baseType: !1361, size: 64, offset: 256)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !2081, file: !190, line: 1908, baseType: !7, size: 32, offset: 320)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !2081, file: !190, line: 1911, baseType: !2088, size: 64, offset: 384)
!2088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2089, size: 64)
!2089 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !1735, line: 117, size: 128, elements: !2090)
!2090 = !{!2091}
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "pt", scope: !2089, file: !1735, line: 120, baseType: !1900, size: 128)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !2081, file: !190, line: 1914, baseType: !1403, size: 256, offset: 448)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1014, file: !190, line: 3399, baseType: !2094, size: 704)
!2094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !190, line: 2008, size: 704, elements: !2095)
!2095 = !{!2096, !2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106}
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2094, file: !190, line: 2009, baseType: !1050, size: 192)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !2094, file: !190, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2098 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !2094, file: !190, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !2094, file: !190, line: 2014, baseType: !1138, size: 32, offset: 224)
!2100 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !2094, file: !190, line: 2016, baseType: !1011, size: 64, offset: 256)
!2101 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !2094, file: !190, line: 2017, baseType: !1887, size: 64, offset: 320)
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !2094, file: !190, line: 2019, baseType: !1011, size: 64, offset: 384)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !2094, file: !190, line: 2020, baseType: !1011, size: 64, offset: 448)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !2094, file: !190, line: 2021, baseType: !1011, size: 64, offset: 512)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !2094, file: !190, line: 2022, baseType: !1011, size: 64, offset: 576)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !2094, file: !190, line: 2023, baseType: !1011, size: 64, offset: 640)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1014, file: !190, line: 3400, baseType: !2108, size: 832)
!2108 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !190, line: 2430, size: 832, elements: !2109)
!2109 = !{!2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119}
!2110 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2108, file: !190, line: 2431, baseType: !1050, size: 192)
!2111 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2108, file: !190, line: 2433, baseType: !1011, size: 64, offset: 192)
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !2108, file: !190, line: 2434, baseType: !1011, size: 64, offset: 256)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !2108, file: !190, line: 2435, baseType: !1011, size: 64, offset: 320)
!2114 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !2108, file: !190, line: 2436, baseType: !1011, size: 64, offset: 384)
!2115 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !2108, file: !190, line: 2437, baseType: !1887, size: 64, offset: 448)
!2116 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !2108, file: !190, line: 2438, baseType: !1011, size: 64, offset: 512)
!2117 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !2108, file: !190, line: 2440, baseType: !1011, size: 64, offset: 576)
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !2108, file: !190, line: 2441, baseType: !1011, size: 64, offset: 640)
!2119 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !2108, file: !190, line: 2443, baseType: !2120, size: 128, offset: 704)
!2120 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !190, line: 182, baseType: !2121)
!2121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !190, line: 182, size: 128, elements: !2122)
!2122 = !{!2123}
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2121, file: !190, line: 182, baseType: !1892, size: 128)
!2124 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !1014, file: !190, line: 3401, baseType: !2125, size: 320)
!2125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !190, line: 3327, size: 320, elements: !2126)
!2126 = !{!2127, !2128, !2135}
!2127 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2125, file: !190, line: 3329, baseType: !1050, size: 192)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2125, file: !190, line: 3330, baseType: !2129, size: 64, offset: 192)
!2129 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2130, size: 64)
!2130 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !190, line: 3320, size: 192, elements: !2131)
!2131 = !{!2132, !2133, !2134}
!2132 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2130, file: !190, line: 3322, baseType: !2129, size: 64)
!2133 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2130, file: !190, line: 3323, baseType: !2129, size: 64, offset: 64)
!2134 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !2130, file: !190, line: 3324, baseType: !1011, size: 64, offset: 128)
!2135 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2125, file: !190, line: 3331, baseType: !2129, size: 64, offset: 256)
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !1014, file: !190, line: 3402, baseType: !2137, size: 256)
!2137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !190, line: 1540, size: 256, elements: !2138)
!2138 = !{!2139, !2140}
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2137, file: !190, line: 1541, baseType: !1050, size: 192)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !2137, file: !190, line: 1542, baseType: !2141, size: 64, offset: 192)
!2141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2142, size: 64)
!2142 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !190, line: 1538, baseType: !2143)
!2143 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !190, line: 1538, size: 192, elements: !2144)
!2144 = !{!2145}
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2143, file: !190, line: 1538, baseType: !2146, size: 192)
!2146 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !190, line: 1537, baseType: !2147)
!2147 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !190, line: 1537, size: 192, elements: !2148)
!2148 = !{!2149, !2150, !2151}
!2149 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2147, file: !190, line: 1537, baseType: !7, size: 32)
!2150 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2147, file: !190, line: 1537, baseType: !7, size: 32, offset: 32)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2147, file: !190, line: 1537, baseType: !2152, size: 128, offset: 64)
!2152 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2153, size: 128, elements: !1111)
!2153 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !190, line: 1535, baseType: !2154)
!2154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !190, line: 1532, size: 128, elements: !2155)
!2155 = !{!2156, !2157}
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2154, file: !190, line: 1533, baseType: !1011, size: 64)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !2154, file: !190, line: 1534, baseType: !1011, size: 64, offset: 64)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !1014, file: !190, line: 3403, baseType: !2159, size: 512)
!2159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !190, line: 1938, size: 512, elements: !2160)
!2160 = !{!2161, !2162, !2163, !2164, !2170, !2171, !2172}
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2159, file: !190, line: 1939, baseType: !1050, size: 192)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !2159, file: !190, line: 1940, baseType: !1138, size: 32, offset: 192)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !2159, file: !190, line: 1941, baseType: !528, size: 32, offset: 224)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !2159, file: !190, line: 1946, baseType: !2165, size: 32, offset: 256)
!2165 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !190, line: 1942, size: 32, elements: !2166)
!2166 = !{!2167, !2168, !2169}
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !2165, file: !190, line: 1943, baseType: !546, size: 32)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !2165, file: !190, line: 1944, baseType: !553, size: 32)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !2165, file: !190, line: 1945, baseType: !189, size: 32)
!2170 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !2159, file: !190, line: 1950, baseType: !1350, size: 64, offset: 320)
!2171 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !2159, file: !190, line: 1951, baseType: !1350, size: 64, offset: 384)
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !2159, file: !190, line: 1953, baseType: !1415, size: 64, offset: 448)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !1014, file: !190, line: 3404, baseType: !2174, size: 1664)
!2174 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !190, line: 3337, size: 1664, elements: !2175)
!2175 = !{!2176, !2177}
!2176 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2174, file: !190, line: 3338, baseType: !1050, size: 192)
!2177 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !2174, file: !190, line: 3341, baseType: !2178, size: 1472, offset: 192)
!2178 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !2179, line: 410, size: 1472, elements: !2180)
!2179 = !DIFile(filename: "./options.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!2180 = !{!2181, !2182, !2183, !2184, !2185, !2186, !2187, !2188, !2189, !2191, !2192, !2193, !2194, !2195, !2196, !2197, !2198, !2199, !2200, !2201, !2202, !2203, !2204, !2205, !2206, !2207, !2208, !2209, !2210, !2211, !2212, !2213, !2214, !2215, !2216, !2217, !2218, !2219, !2220, !2221, !2222, !2223, !2224, !2225, !2226, !2227, !2228, !2229, !2230, !2231, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2243, !2244, !2245, !2246, !2247, !2248, !2249, !2250, !2251, !2252, !2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262, !2263, !2264, !2265, !2266, !2267, !2268, !2269, !2270, !2271, !2272, !2273, !2274, !2275, !2276, !2277, !2278, !2279, !2280, !2281, !2282, !2283, !2284, !2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294, !2295, !2296, !2297, !2298, !2299, !2300, !2301, !2302, !2303, !2304, !2305, !2306, !2307, !2308, !2309, !2310, !2311, !2312, !2313, !2314, !2315, !2316, !2317, !2318, !2319, !2320, !2321, !2322, !2323, !2324, !2325, !2326, !2327, !2328, !2329, !2330, !2331, !2332, !2333, !2334, !2335, !2336, !2337, !2338, !2339, !2340, !2341, !2342, !2343, !2344}
!2181 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !2178, file: !2179, line: 412, baseType: !1010, size: 32)
!2182 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !2178, file: !2179, line: 413, baseType: !1010, size: 32, offset: 32)
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !2178, file: !2179, line: 414, baseType: !1010, size: 32, offset: 64)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !2178, file: !2179, line: 415, baseType: !1010, size: 32, offset: 96)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !2178, file: !2179, line: 416, baseType: !1010, size: 32, offset: 128)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !2178, file: !2179, line: 417, baseType: !1010, size: 32, offset: 160)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !2178, file: !2179, line: 418, baseType: !1130, size: 8, offset: 192)
!2188 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !2178, file: !2179, line: 419, baseType: !1130, size: 8, offset: 200)
!2189 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !2178, file: !2179, line: 420, baseType: !2190, size: 8, offset: 208)
!2190 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !2178, file: !2179, line: 421, baseType: !2190, size: 8, offset: 216)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !2178, file: !2179, line: 422, baseType: !2190, size: 8, offset: 224)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !2178, file: !2179, line: 423, baseType: !2190, size: 8, offset: 232)
!2194 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !2178, file: !2179, line: 424, baseType: !2190, size: 8, offset: 240)
!2195 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !2178, file: !2179, line: 425, baseType: !2190, size: 8, offset: 248)
!2196 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !2178, file: !2179, line: 426, baseType: !2190, size: 8, offset: 256)
!2197 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !2178, file: !2179, line: 427, baseType: !2190, size: 8, offset: 264)
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !2178, file: !2179, line: 428, baseType: !2190, size: 8, offset: 272)
!2199 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !2178, file: !2179, line: 429, baseType: !2190, size: 8, offset: 280)
!2200 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !2178, file: !2179, line: 430, baseType: !2190, size: 8, offset: 288)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !2178, file: !2179, line: 431, baseType: !2190, size: 8, offset: 296)
!2202 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !2178, file: !2179, line: 432, baseType: !2190, size: 8, offset: 304)
!2203 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !2178, file: !2179, line: 433, baseType: !2190, size: 8, offset: 312)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !2178, file: !2179, line: 434, baseType: !2190, size: 8, offset: 320)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !2178, file: !2179, line: 435, baseType: !2190, size: 8, offset: 328)
!2206 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !2178, file: !2179, line: 436, baseType: !2190, size: 8, offset: 336)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !2178, file: !2179, line: 437, baseType: !2190, size: 8, offset: 344)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !2178, file: !2179, line: 438, baseType: !2190, size: 8, offset: 352)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !2178, file: !2179, line: 439, baseType: !2190, size: 8, offset: 360)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !2178, file: !2179, line: 440, baseType: !2190, size: 8, offset: 368)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !2178, file: !2179, line: 441, baseType: !2190, size: 8, offset: 376)
!2212 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !2178, file: !2179, line: 442, baseType: !2190, size: 8, offset: 384)
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !2178, file: !2179, line: 443, baseType: !2190, size: 8, offset: 392)
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !2178, file: !2179, line: 444, baseType: !2190, size: 8, offset: 400)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !2178, file: !2179, line: 445, baseType: !2190, size: 8, offset: 408)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !2178, file: !2179, line: 446, baseType: !2190, size: 8, offset: 416)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !2178, file: !2179, line: 447, baseType: !2190, size: 8, offset: 424)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !2178, file: !2179, line: 448, baseType: !2190, size: 8, offset: 432)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !2178, file: !2179, line: 449, baseType: !2190, size: 8, offset: 440)
!2220 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !2178, file: !2179, line: 450, baseType: !2190, size: 8, offset: 448)
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !2178, file: !2179, line: 451, baseType: !2190, size: 8, offset: 456)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !2178, file: !2179, line: 452, baseType: !2190, size: 8, offset: 464)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !2178, file: !2179, line: 453, baseType: !2190, size: 8, offset: 472)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !2178, file: !2179, line: 454, baseType: !2190, size: 8, offset: 480)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !2178, file: !2179, line: 455, baseType: !2190, size: 8, offset: 488)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !2178, file: !2179, line: 456, baseType: !2190, size: 8, offset: 496)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !2178, file: !2179, line: 457, baseType: !2190, size: 8, offset: 504)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !2178, file: !2179, line: 458, baseType: !2190, size: 8, offset: 512)
!2229 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !2178, file: !2179, line: 459, baseType: !2190, size: 8, offset: 520)
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !2178, file: !2179, line: 460, baseType: !2190, size: 8, offset: 528)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !2178, file: !2179, line: 461, baseType: !2190, size: 8, offset: 536)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !2178, file: !2179, line: 462, baseType: !2190, size: 8, offset: 544)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !2178, file: !2179, line: 463, baseType: !2190, size: 8, offset: 552)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !2178, file: !2179, line: 464, baseType: !2190, size: 8, offset: 560)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !2178, file: !2179, line: 465, baseType: !2190, size: 8, offset: 568)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !2178, file: !2179, line: 466, baseType: !2190, size: 8, offset: 576)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !2178, file: !2179, line: 467, baseType: !2190, size: 8, offset: 584)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !2178, file: !2179, line: 468, baseType: !2190, size: 8, offset: 592)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !2178, file: !2179, line: 469, baseType: !2190, size: 8, offset: 600)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !2178, file: !2179, line: 470, baseType: !2190, size: 8, offset: 608)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !2178, file: !2179, line: 471, baseType: !2190, size: 8, offset: 616)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !2178, file: !2179, line: 472, baseType: !2190, size: 8, offset: 624)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !2178, file: !2179, line: 473, baseType: !2190, size: 8, offset: 632)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !2178, file: !2179, line: 474, baseType: !2190, size: 8, offset: 640)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !2178, file: !2179, line: 475, baseType: !2190, size: 8, offset: 648)
!2246 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !2178, file: !2179, line: 476, baseType: !2190, size: 8, offset: 656)
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !2178, file: !2179, line: 477, baseType: !2190, size: 8, offset: 664)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !2178, file: !2179, line: 478, baseType: !2190, size: 8, offset: 672)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !2178, file: !2179, line: 479, baseType: !2190, size: 8, offset: 680)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !2178, file: !2179, line: 480, baseType: !2190, size: 8, offset: 688)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !2178, file: !2179, line: 481, baseType: !2190, size: 8, offset: 696)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !2178, file: !2179, line: 482, baseType: !2190, size: 8, offset: 704)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !2178, file: !2179, line: 483, baseType: !2190, size: 8, offset: 712)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !2178, file: !2179, line: 484, baseType: !2190, size: 8, offset: 720)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !2178, file: !2179, line: 485, baseType: !2190, size: 8, offset: 728)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !2178, file: !2179, line: 486, baseType: !2190, size: 8, offset: 736)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !2178, file: !2179, line: 487, baseType: !2190, size: 8, offset: 744)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !2178, file: !2179, line: 488, baseType: !2190, size: 8, offset: 752)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !2178, file: !2179, line: 489, baseType: !2190, size: 8, offset: 760)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !2178, file: !2179, line: 490, baseType: !2190, size: 8, offset: 768)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !2178, file: !2179, line: 491, baseType: !2190, size: 8, offset: 776)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !2178, file: !2179, line: 492, baseType: !2190, size: 8, offset: 784)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !2178, file: !2179, line: 493, baseType: !2190, size: 8, offset: 792)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !2178, file: !2179, line: 494, baseType: !2190, size: 8, offset: 800)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !2178, file: !2179, line: 495, baseType: !2190, size: 8, offset: 808)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !2178, file: !2179, line: 496, baseType: !2190, size: 8, offset: 816)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !2178, file: !2179, line: 497, baseType: !2190, size: 8, offset: 824)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !2178, file: !2179, line: 498, baseType: !2190, size: 8, offset: 832)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !2178, file: !2179, line: 499, baseType: !2190, size: 8, offset: 840)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !2178, file: !2179, line: 500, baseType: !2190, size: 8, offset: 848)
!2271 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !2178, file: !2179, line: 501, baseType: !2190, size: 8, offset: 856)
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !2178, file: !2179, line: 502, baseType: !2190, size: 8, offset: 864)
!2273 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !2178, file: !2179, line: 503, baseType: !2190, size: 8, offset: 872)
!2274 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !2178, file: !2179, line: 504, baseType: !2190, size: 8, offset: 880)
!2275 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !2178, file: !2179, line: 505, baseType: !2190, size: 8, offset: 888)
!2276 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !2178, file: !2179, line: 506, baseType: !2190, size: 8, offset: 896)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !2178, file: !2179, line: 507, baseType: !2190, size: 8, offset: 904)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !2178, file: !2179, line: 508, baseType: !2190, size: 8, offset: 912)
!2279 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !2178, file: !2179, line: 509, baseType: !2190, size: 8, offset: 920)
!2280 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !2178, file: !2179, line: 510, baseType: !2190, size: 8, offset: 928)
!2281 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !2178, file: !2179, line: 511, baseType: !2190, size: 8, offset: 936)
!2282 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !2178, file: !2179, line: 512, baseType: !2190, size: 8, offset: 944)
!2283 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !2178, file: !2179, line: 513, baseType: !2190, size: 8, offset: 952)
!2284 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !2178, file: !2179, line: 514, baseType: !2190, size: 8, offset: 960)
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !2178, file: !2179, line: 515, baseType: !2190, size: 8, offset: 968)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !2178, file: !2179, line: 516, baseType: !2190, size: 8, offset: 976)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !2178, file: !2179, line: 517, baseType: !2190, size: 8, offset: 984)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !2178, file: !2179, line: 518, baseType: !2190, size: 8, offset: 992)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !2178, file: !2179, line: 519, baseType: !2190, size: 8, offset: 1000)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !2178, file: !2179, line: 520, baseType: !2190, size: 8, offset: 1008)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !2178, file: !2179, line: 521, baseType: !2190, size: 8, offset: 1016)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !2178, file: !2179, line: 522, baseType: !2190, size: 8, offset: 1024)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !2178, file: !2179, line: 523, baseType: !2190, size: 8, offset: 1032)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !2178, file: !2179, line: 524, baseType: !2190, size: 8, offset: 1040)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !2178, file: !2179, line: 525, baseType: !2190, size: 8, offset: 1048)
!2296 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !2178, file: !2179, line: 526, baseType: !2190, size: 8, offset: 1056)
!2297 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !2178, file: !2179, line: 527, baseType: !2190, size: 8, offset: 1064)
!2298 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !2178, file: !2179, line: 528, baseType: !2190, size: 8, offset: 1072)
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !2178, file: !2179, line: 529, baseType: !2190, size: 8, offset: 1080)
!2300 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !2178, file: !2179, line: 530, baseType: !2190, size: 8, offset: 1088)
!2301 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !2178, file: !2179, line: 531, baseType: !2190, size: 8, offset: 1096)
!2302 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !2178, file: !2179, line: 532, baseType: !2190, size: 8, offset: 1104)
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !2178, file: !2179, line: 533, baseType: !2190, size: 8, offset: 1112)
!2304 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !2178, file: !2179, line: 534, baseType: !2190, size: 8, offset: 1120)
!2305 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !2178, file: !2179, line: 535, baseType: !2190, size: 8, offset: 1128)
!2306 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !2178, file: !2179, line: 536, baseType: !2190, size: 8, offset: 1136)
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !2178, file: !2179, line: 537, baseType: !2190, size: 8, offset: 1144)
!2308 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !2178, file: !2179, line: 538, baseType: !2190, size: 8, offset: 1152)
!2309 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !2178, file: !2179, line: 539, baseType: !2190, size: 8, offset: 1160)
!2310 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !2178, file: !2179, line: 540, baseType: !2190, size: 8, offset: 1168)
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !2178, file: !2179, line: 541, baseType: !2190, size: 8, offset: 1176)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !2178, file: !2179, line: 542, baseType: !2190, size: 8, offset: 1184)
!2313 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !2178, file: !2179, line: 543, baseType: !2190, size: 8, offset: 1192)
!2314 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !2178, file: !2179, line: 544, baseType: !2190, size: 8, offset: 1200)
!2315 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !2178, file: !2179, line: 545, baseType: !2190, size: 8, offset: 1208)
!2316 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !2178, file: !2179, line: 546, baseType: !2190, size: 8, offset: 1216)
!2317 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !2178, file: !2179, line: 547, baseType: !2190, size: 8, offset: 1224)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !2178, file: !2179, line: 548, baseType: !2190, size: 8, offset: 1232)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !2178, file: !2179, line: 549, baseType: !2190, size: 8, offset: 1240)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !2178, file: !2179, line: 550, baseType: !2190, size: 8, offset: 1248)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !2178, file: !2179, line: 551, baseType: !2190, size: 8, offset: 1256)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !2178, file: !2179, line: 552, baseType: !2190, size: 8, offset: 1264)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !2178, file: !2179, line: 553, baseType: !2190, size: 8, offset: 1272)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !2178, file: !2179, line: 554, baseType: !2190, size: 8, offset: 1280)
!2325 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !2178, file: !2179, line: 555, baseType: !2190, size: 8, offset: 1288)
!2326 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !2178, file: !2179, line: 556, baseType: !2190, size: 8, offset: 1296)
!2327 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !2178, file: !2179, line: 557, baseType: !2190, size: 8, offset: 1304)
!2328 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !2178, file: !2179, line: 558, baseType: !2190, size: 8, offset: 1312)
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !2178, file: !2179, line: 559, baseType: !2190, size: 8, offset: 1320)
!2330 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !2178, file: !2179, line: 560, baseType: !2190, size: 8, offset: 1328)
!2331 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !2178, file: !2179, line: 561, baseType: !2190, size: 8, offset: 1336)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !2178, file: !2179, line: 562, baseType: !2190, size: 8, offset: 1344)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !2178, file: !2179, line: 563, baseType: !2190, size: 8, offset: 1352)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !2178, file: !2179, line: 564, baseType: !2190, size: 8, offset: 1360)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !2178, file: !2179, line: 565, baseType: !2190, size: 8, offset: 1368)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !2178, file: !2179, line: 566, baseType: !2190, size: 8, offset: 1376)
!2337 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !2178, file: !2179, line: 567, baseType: !2190, size: 8, offset: 1384)
!2338 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !2178, file: !2179, line: 568, baseType: !2190, size: 8, offset: 1392)
!2339 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !2178, file: !2179, line: 569, baseType: !2190, size: 8, offset: 1400)
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !2178, file: !2179, line: 570, baseType: !2190, size: 8, offset: 1408)
!2341 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !2178, file: !2179, line: 571, baseType: !2190, size: 8, offset: 1416)
!2342 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !2178, file: !2179, line: 572, baseType: !2190, size: 8, offset: 1424)
!2343 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !2178, file: !2179, line: 573, baseType: !2190, size: 8, offset: 1432)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !2178, file: !2179, line: 574, baseType: !2190, size: 8, offset: 1440)
!2345 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !1014, file: !190, line: 3405, baseType: !2346, size: 384)
!2346 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !190, line: 3352, size: 384, elements: !2347)
!2347 = !{!2348, !2349}
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !2346, file: !190, line: 3353, baseType: !1050, size: 192)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !2346, file: !190, line: 3356, baseType: !2350, size: 192, offset: 192)
!2350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !2179, line: 578, size: 192, elements: !2351)
!2351 = !{!2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361, !2362}
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !2350, file: !2179, line: 580, baseType: !1010, size: 32)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !2350, file: !2179, line: 581, baseType: !1010, size: 32, offset: 32)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !2350, file: !2179, line: 582, baseType: !1010, size: 32, offset: 64)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !2350, file: !2179, line: 583, baseType: !1010, size: 32, offset: 96)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2350, file: !2179, line: 584, baseType: !1130, size: 8, offset: 128)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !2350, file: !2179, line: 585, baseType: !1130, size: 8, offset: 136)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !2350, file: !2179, line: 586, baseType: !1130, size: 8, offset: 144)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !2350, file: !2179, line: 587, baseType: !1130, size: 8, offset: 152)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !2350, file: !2179, line: 588, baseType: !1130, size: 8, offset: 160)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !2350, file: !2179, line: 589, baseType: !1130, size: 8, offset: 168)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !2350, file: !2179, line: 590, baseType: !1130, size: 8, offset: 176)
!2363 = !DIDerivedType(tag: DW_TAG_typedef, name: "shared_hash", file: !3, line: 243, baseType: !2364)
!2364 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2365, size: 64)
!2365 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "shared_hash_def", file: !3, line: 236, size: 128, elements: !2366)
!2366 = !{!2367, !2368}
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2365, file: !3, line: 239, baseType: !1010, size: 32)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "htab", scope: !2365, file: !3, line: 242, baseType: !1827, size: 64, offset: 64)
!2369 = !DIDerivedType(tag: DW_TAG_typedef, name: "variable_tracking_info", file: !3, line: 284, baseType: !2370)
!2370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2371, size: 64)
!2371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "variable_tracking_info_def", file: !3, line: 263, size: 7360, elements: !2372)
!2372 = !{!2373, !2396, !2416, !2417, !2419, !2420}
!2373 = !DIDerivedType(tag: DW_TAG_member, name: "mos", scope: !2371, file: !3, line: 266, baseType: !2374, size: 64)
!2374 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2375, size: 64)
!2375 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_micro_operation_heap", file: !3, line: 195, baseType: !2376)
!2376 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_micro_operation_heap", file: !3, line: 195, size: 256, elements: !2377)
!2377 = !{!2378}
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2376, file: !3, line: 195, baseType: !2379, size: 256)
!2379 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_micro_operation_base", file: !3, line: 194, baseType: !2380)
!2380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_micro_operation_base", file: !3, line: 194, size: 256, elements: !2381)
!2381 = !{!2382, !2383, !2384}
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2380, file: !3, line: 194, baseType: !7, size: 32)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2380, file: !3, line: 194, baseType: !7, size: 32, offset: 32)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2380, file: !3, line: 194, baseType: !2385, size: 192, offset: 64)
!2385 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2386, size: 192, elements: !1111)
!2386 = !DIDerivedType(tag: DW_TAG_typedef, name: "micro_operation", file: !3, line: 192, baseType: !2387)
!2387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "micro_operation_def", file: !3, line: 168, size: 192, elements: !2388)
!2388 = !{!2389, !2390, !2391}
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2387, file: !3, line: 171, baseType: !703, size: 32)
!2390 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !2387, file: !3, line: 178, baseType: !1188, size: 64, offset: 64)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !2387, file: !3, line: 191, baseType: !2392, size: 64, offset: 128)
!2392 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2387, file: !3, line: 180, size: 64, elements: !2393)
!2393 = !{!2394, !2395}
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !2392, file: !3, line: 187, baseType: !1188, size: 64)
!2395 = !DIDerivedType(tag: DW_TAG_member, name: "adjust", scope: !2392, file: !3, line: 190, baseType: !1067, size: 64)
!2396 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !2371, file: !3, line: 269, baseType: !2397, size: 3584, offset: 64)
!2397 = !DIDerivedType(tag: DW_TAG_typedef, name: "dataflow_set", file: !3, line: 259, baseType: !2398)
!2398 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dataflow_set_def", file: !3, line: 246, size: 3584, elements: !2399)
!2399 = !{!2400, !2401, !2414, !2415}
!2400 = !DIDerivedType(tag: DW_TAG_member, name: "stack_adjust", scope: !2398, file: !3, line: 249, baseType: !1067, size: 64)
!2401 = !DIDerivedType(tag: DW_TAG_member, name: "regs", scope: !2398, file: !3, line: 252, baseType: !2402, size: 3392, offset: 64)
!2402 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2403, size: 3392, elements: !2412)
!2403 = !DIDerivedType(tag: DW_TAG_typedef, name: "attrs", file: !3, line: 232, baseType: !2404)
!2404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2405, size: 64)
!2405 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "attrs_def", file: !3, line: 219, size: 256, elements: !2406)
!2406 = !{!2407, !2408, !2409, !2411}
!2407 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2405, file: !3, line: 222, baseType: !2404, size: 64)
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !2405, file: !3, line: 225, baseType: !1188, size: 64, offset: 64)
!2409 = !DIDerivedType(tag: DW_TAG_member, name: "dv", scope: !2405, file: !3, line: 228, baseType: !2410, size: 64, offset: 128)
!2410 = !DIDerivedType(tag: DW_TAG_typedef, name: "decl_or_value", file: !3, line: 199, baseType: !1313)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2405, file: !3, line: 231, baseType: !1067, size: 64, offset: 192)
!2412 = !{!2413}
!2413 = !DISubrange(count: 53)
!2414 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !2398, file: !3, line: 255, baseType: !2363, size: 64, offset: 3456)
!2415 = !DIDerivedType(tag: DW_TAG_member, name: "traversed_vars", scope: !2398, file: !3, line: 258, baseType: !2363, size: 64, offset: 3520)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !2371, file: !3, line: 270, baseType: !2397, size: 3584, offset: 3648)
!2417 = !DIDerivedType(tag: DW_TAG_member, name: "permp", scope: !2371, file: !3, line: 276, baseType: !2418, size: 64, offset: 7232)
!2418 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2397, size: 64)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !2371, file: !3, line: 279, baseType: !1130, size: 8, offset: 7296)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "flooded", scope: !2371, file: !3, line: 282, baseType: !1130, size: 8, offset: 7304)
!2421 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_variable", file: !3, line: 343, baseType: !2422)
!2422 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2423, size: 64)
!2423 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2424)
!2424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "variable_def", file: !3, line: 319, size: 320, elements: !2425)
!2425 = !{!2426, !2427, !2428, !2429, !2430, !2431}
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "dv", scope: !2424, file: !3, line: 323, baseType: !2410, size: 64)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2424, file: !3, line: 326, baseType: !1010, size: 32, offset: 64)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "n_var_parts", scope: !2424, file: !3, line: 329, baseType: !1110, size: 8, offset: 96)
!2429 = !DIDerivedType(tag: DW_TAG_member, name: "cur_loc_changed", scope: !2424, file: !3, line: 334, baseType: !1130, size: 8, offset: 104)
!2430 = !DIDerivedType(tag: DW_TAG_member, name: "in_changed_variables", scope: !2424, file: !3, line: 338, baseType: !1130, size: 8, offset: 112)
!2431 = !DIDerivedType(tag: DW_TAG_member, name: "var_part", scope: !2424, file: !3, line: 341, baseType: !2432, size: 192, offset: 128)
!2432 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2433, size: 192, elements: !1111)
!2433 = !DIDerivedType(tag: DW_TAG_typedef, name: "variable_part", file: !3, line: 313, baseType: !2434)
!2434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "variable_part_def", file: !3, line: 303, size: 192, elements: !2435)
!2435 = !{!2436, !2445, !2446}
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "loc_chain", scope: !2434, file: !3, line: 306, baseType: !2437, size: 64)
!2437 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_chain", file: !3, line: 300, baseType: !2438)
!2438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2439, size: 64)
!2439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "location_chain_def", file: !3, line: 287, size: 256, elements: !2440)
!2440 = !{!2441, !2442, !2443, !2444}
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2439, file: !3, line: 290, baseType: !2438, size: 64)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !2439, file: !3, line: 293, baseType: !1188, size: 64, offset: 64)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "set_src", scope: !2439, file: !3, line: 296, baseType: !1188, size: 64, offset: 128)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2439, file: !3, line: 299, baseType: !734, size: 32, offset: 192)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "cur_loc", scope: !2434, file: !3, line: 309, baseType: !1188, size: 64, offset: 64)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !2434, file: !3, line: 312, baseType: !1067, size: 64, offset: 128)
!2447 = !DIDerivedType(tag: DW_TAG_typedef, name: "variable", file: !3, line: 342, baseType: !2448)
!2448 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2424, size: 64)
!2449 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_value_chain", file: !3, line: 360, baseType: !2450)
!2450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2451, size: 64)
!2451 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2452)
!2452 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "value_chain_def", file: !3, line: 347, size: 192, elements: !2453)
!2453 = !{!2454, !2456, !2457}
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2452, file: !3, line: 350, baseType: !2455, size: 64)
!2455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2452, size: 64)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "dv", scope: !2452, file: !3, line: 355, baseType: !2410, size: 64, offset: 64)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "refcount", scope: !2452, file: !3, line: 358, baseType: !1010, size: 32, offset: 128)
!2458 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2459, size: 64)
!2459 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_heap", file: !561, line: 201, baseType: !2460)
!2460 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_heap", file: !561, line: 201, size: 128, elements: !2461)
!2461 = !{!2462}
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2460, file: !561, line: 201, baseType: !1689, size: 128)
!2463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2464, size: 64)
!2464 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge_iterator", file: !513, line: 682, baseType: !2465)
!2465 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !513, line: 679, size: 128, elements: !2466)
!2466 = !{!2467, !2468}
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !2465, file: !513, line: 680, baseType: !7, size: 32)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "container", scope: !2465, file: !513, line: 681, baseType: !2469, size: 64, offset: 64)
!2469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1328, size: 64)
!2470 = !DIDerivedType(tag: DW_TAG_typedef, name: "value_chain", file: !3, line: 359, baseType: !2455)
!2471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2472, size: 64)
!2472 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "count_use_info", file: !3, line: 4687, size: 256, elements: !2473)
!2473 = !{!2474, !2475, !2476, !2484, !2485}
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !2472, file: !3, line: 4690, baseType: !1188, size: 64)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !2472, file: !3, line: 4693, baseType: !1795, size: 64, offset: 64)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "sets", scope: !2472, file: !3, line: 4696, baseType: !2477, size: 64, offset: 128)
!2477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2478, size: 64)
!2478 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_set", file: !716, line: 61, size: 256, elements: !2479)
!2479 = !{!2480, !2481, !2482, !2483}
!2480 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !2478, file: !716, line: 63, baseType: !1188, size: 64)
!2481 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !2478, file: !716, line: 64, baseType: !1188, size: 64, offset: 64)
!2482 = !DIDerivedType(tag: DW_TAG_member, name: "src_elt", scope: !2478, file: !716, line: 65, baseType: !1257, size: 64, offset: 128)
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "dest_addr_elt", scope: !2478, file: !716, line: 66, baseType: !1257, size: 64, offset: 192)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "n_sets", scope: !2472, file: !3, line: 4697, baseType: !1010, size: 32, offset: 192)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "store_p", scope: !2472, file: !3, line: 4700, baseType: !1130, size: 8, offset: 224)
!2486 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!2487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2488, size: 64)
!2488 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1190)
!2489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2490, size: 64)
!2490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "adjust_mem_data", file: !3, line: 724, size: 192, elements: !2491)
!2491 = !{!2492, !2493, !2494, !2495}
!2492 = !DIDerivedType(tag: DW_TAG_member, name: "store", scope: !2490, file: !3, line: 726, baseType: !1130, size: 8)
!2493 = !DIDerivedType(tag: DW_TAG_member, name: "mem_mode", scope: !2490, file: !3, line: 727, baseType: !384, size: 32, offset: 32)
!2494 = !DIDerivedType(tag: DW_TAG_member, name: "stack_adjust", scope: !2490, file: !3, line: 728, baseType: !1067, size: 64, offset: 64)
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects", scope: !2490, file: !3, line: 729, baseType: !1188, size: 64, offset: 128)
!2496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 64)
!2497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2498, size: 64)
!2498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dfset_merge", file: !3, line: 2540, size: 256, elements: !2499)
!2499 = !{!2500, !2501, !2502, !2503}
!2500 = !DIDerivedType(tag: DW_TAG_member, name: "dst", scope: !2498, file: !3, line: 2543, baseType: !2418, size: 64)
!2501 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !2498, file: !3, line: 2545, baseType: !2418, size: 64, offset: 64)
!2502 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !2498, file: !3, line: 2547, baseType: !2418, size: 64, offset: 128)
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "src_onepart_cnt", scope: !2498, file: !3, line: 2549, baseType: !1010, size: 32, offset: 192)
!2504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2505, size: 64)
!2505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "variable_union_info", file: !3, line: 2029, size: 128, elements: !2506)
!2506 = !{!2507, !2508, !2509}
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "lc", scope: !2505, file: !3, line: 2032, baseType: !2437, size: 64)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !2505, file: !3, line: 2035, baseType: !1010, size: 32, offset: 64)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "pos_dst", scope: !2505, file: !3, line: 2038, baseType: !1010, size: 32, offset: 96)
!2510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2511, size: 64)
!2511 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2505)
!2512 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2513, size: 64)
!2513 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "dfset_post_merge", file: !3, line: 3774, size: 128, elements: !2514)
!2514 = !{!2515, !2516}
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !2513, file: !3, line: 3777, baseType: !2418, size: 64)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "permp", scope: !2513, file: !3, line: 3780, baseType: !2517, size: 64, offset: 64)
!2517 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2418, size: 64)
!2518 = !DIDerivedType(tag: DW_TAG_typedef, name: "HARD_REG_ELT_TYPE", file: !2519, line: 42, baseType: !1065)
!2519 = !DIFile(filename: "./hard-reg-set.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!2520 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2521, size: 64)
!2521 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_variable_heap", file: !3, line: 7270, baseType: !2522)
!2522 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_variable_heap", file: !3, line: 7270, size: 128, elements: !2523)
!2523 = !{!2524}
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2522, file: !3, line: 7270, baseType: !2525, size: 128)
!2525 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_variable_base", file: !3, line: 7269, baseType: !2526)
!2526 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_variable_base", file: !3, line: 7269, size: 128, elements: !2527)
!2527 = !{!2528, !2529, !2530}
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !2526, file: !3, line: 7269, baseType: !7, size: 32)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !2526, file: !3, line: 7269, baseType: !7, size: 32, offset: 32)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2526, file: !3, line: 7269, baseType: !2531, size: 64, offset: 64)
!2531 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2447, size: 64, elements: !1111)
!2532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2533, size: 64)
!2533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "expand_loc_callback_data", file: !3, line: 6815, size: 128, elements: !2534)
!2534 = !{!2535, !2536, !2537}
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !2533, file: !3, line: 6818, baseType: !1827, size: 64)
!2536 = !DIDerivedType(tag: DW_TAG_member, name: "dummy", scope: !2533, file: !3, line: 6825, baseType: !1130, size: 8, offset: 64)
!2537 = !DIDerivedType(tag: DW_TAG_member, name: "cur_loc_changed", scope: !2533, file: !3, line: 6831, baseType: !1130, size: 8, offset: 72)
!2538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2539, size: 64)
!2539 = !DIDerivedType(tag: DW_TAG_typedef, name: "emit_note_data", file: !3, line: 213, baseType: !2540)
!2540 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "emit_note_data_def", file: !3, line: 203, size: 192, elements: !2541)
!2541 = !{!2542, !2543, !2544}
!2542 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !2540, file: !3, line: 206, baseType: !1188, size: 64)
!2543 = !DIDerivedType(tag: DW_TAG_member, name: "where", scope: !2540, file: !3, line: 209, baseType: !988, size: 32, offset: 64)
!2544 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !2540, file: !3, line: 212, baseType: !1827, size: 64, offset: 128)
!2545 = !{!0, !2546, !2569, !2571, !2573, !2575, !2577, !2579, !2581, !2583, !2585, !2587, !2589, !2591, !2593, !2595, !2601, !2603, !2605, !2607, !2609, !2611, !2613}
!2546 = !DIGlobalVariableExpression(var: !2547, expr: !DIExpression())
!2547 = distinct !DIGlobalVariable(name: "attrs_pool", scope: !2, file: !3, line: 369, type: !2548, isLocal: true, isDefinition: true)
!2548 = !DIDerivedType(tag: DW_TAG_typedef, name: "alloc_pool", file: !2549, line: 58, baseType: !2550)
!2549 = !DIFile(filename: "./alloc-pool.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!2550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2551, size: 64)
!2551 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alloc_pool_def", file: !2549, line: 32, size: 704, elements: !2552)
!2552 = !{!2553, !2554, !2555, !2561, !2562, !2563, !2564, !2565, !2566, !2567, !2568}
!2553 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2551, file: !2549, line: 34, baseType: !1213, size: 64)
!2554 = !DIDerivedType(tag: DW_TAG_member, name: "elts_per_block", scope: !2551, file: !2549, line: 38, baseType: !1507, size: 64, offset: 64)
!2555 = !DIDerivedType(tag: DW_TAG_member, name: "returned_free_list", scope: !2551, file: !2549, line: 41, baseType: !2556, size: 64, offset: 128)
!2556 = !DIDerivedType(tag: DW_TAG_typedef, name: "alloc_pool_list", file: !2549, line: 30, baseType: !2557)
!2557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2558, size: 64)
!2558 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "alloc_pool_list_def", file: !2549, line: 26, size: 64, elements: !2559)
!2559 = !{!2560}
!2560 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2558, file: !2549, line: 28, baseType: !2557, size: 64)
!2561 = !DIDerivedType(tag: DW_TAG_member, name: "virgin_free_list", scope: !2551, file: !2549, line: 45, baseType: !1298, size: 64, offset: 192)
!2562 = !DIDerivedType(tag: DW_TAG_member, name: "virgin_elts_remaining", scope: !2551, file: !2549, line: 49, baseType: !1507, size: 64, offset: 256)
!2563 = !DIDerivedType(tag: DW_TAG_member, name: "elts_allocated", scope: !2551, file: !2549, line: 51, baseType: !1507, size: 64, offset: 320)
!2564 = !DIDerivedType(tag: DW_TAG_member, name: "elts_free", scope: !2551, file: !2549, line: 52, baseType: !1507, size: 64, offset: 384)
!2565 = !DIDerivedType(tag: DW_TAG_member, name: "blocks_allocated", scope: !2551, file: !2549, line: 53, baseType: !1507, size: 64, offset: 448)
!2566 = !DIDerivedType(tag: DW_TAG_member, name: "block_list", scope: !2551, file: !2549, line: 54, baseType: !2556, size: 64, offset: 512)
!2567 = !DIDerivedType(tag: DW_TAG_member, name: "block_size", scope: !2551, file: !2549, line: 55, baseType: !1507, size: 64, offset: 576)
!2568 = !DIDerivedType(tag: DW_TAG_member, name: "elt_size", scope: !2551, file: !2549, line: 56, baseType: !1507, size: 64, offset: 640)
!2569 = !DIGlobalVariableExpression(var: !2570, expr: !DIExpression())
!2570 = distinct !DIGlobalVariable(name: "var_pool", scope: !2, file: !3, line: 372, type: !2548, isLocal: true, isDefinition: true)
!2571 = !DIGlobalVariableExpression(var: !2572, expr: !DIExpression())
!2572 = distinct !DIGlobalVariable(name: "loc_chain_pool", scope: !2, file: !3, line: 378, type: !2548, isLocal: true, isDefinition: true)
!2573 = !DIGlobalVariableExpression(var: !2574, expr: !DIExpression())
!2574 = distinct !DIGlobalVariable(name: "shared_hash_pool", scope: !2, file: !3, line: 381, type: !2548, isLocal: true, isDefinition: true)
!2575 = !DIGlobalVariableExpression(var: !2576, expr: !DIExpression())
!2576 = distinct !DIGlobalVariable(name: "empty_shared_hash", scope: !2, file: !3, line: 396, type: !2363, isLocal: true, isDefinition: true)
!2577 = !DIGlobalVariableExpression(var: !2578, expr: !DIExpression())
!2578 = distinct !DIGlobalVariable(name: "changed_variables", scope: !2, file: !3, line: 387, type: !1827, isLocal: true, isDefinition: true)
!2579 = !DIGlobalVariableExpression(var: !2580, expr: !DIExpression())
!2580 = distinct !DIGlobalVariable(name: "value_chain_pool", scope: !2, file: !3, line: 384, type: !2548, isLocal: true, isDefinition: true)
!2581 = !DIGlobalVariableExpression(var: !2582, expr: !DIExpression())
!2582 = distinct !DIGlobalVariable(name: "value_chains", scope: !2, file: !3, line: 390, type: !1827, isLocal: true, isDefinition: true)
!2583 = !DIGlobalVariableExpression(var: !2584, expr: !DIExpression())
!2584 = distinct !DIGlobalVariable(name: "scratch_regs", scope: !2, file: !3, line: 399, type: !1910, isLocal: true, isDefinition: true)
!2585 = !DIGlobalVariableExpression(var: !2586, expr: !DIExpression())
!2586 = distinct !DIGlobalVariable(name: "valvar_pool", scope: !2, file: !3, line: 375, type: !2548, isLocal: true, isDefinition: true)
!2587 = !DIGlobalVariableExpression(var: !2588, expr: !DIExpression())
!2588 = distinct !DIGlobalVariable(name: "preserved_values", scope: !2, file: !3, line: 4888, type: !2458, isLocal: true, isDefinition: true)
!2589 = !DIGlobalVariableExpression(var: !2590, expr: !DIExpression())
!2590 = distinct !DIGlobalVariable(name: "dst_can_be_shared", scope: !2, file: !3, line: 1470, type: !1130, isLocal: true, isDefinition: true)
!2591 = !DIGlobalVariableExpression(var: !2592, expr: !DIExpression())
!2592 = distinct !DIGlobalVariable(name: "emit_notes", scope: !2, file: !3, line: 393, type: !1130, isLocal: true, isDefinition: true)
!2593 = !DIGlobalVariableExpression(var: !2594, expr: !DIExpression())
!2594 = distinct !DIGlobalVariable(name: "hard_frame_pointer_adjustment", scope: !2, file: !3, line: 720, type: !1067, isLocal: true, isDefinition: true)
!2595 = !DIGlobalVariableExpression(var: !2596, expr: !DIExpression())
!2596 = distinct !DIGlobalVariable(name: "micro_operation_type_name", scope: !2, file: !3, line: 144, type: !2597, isLocal: true, isDefinition: true)
!2597 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2598, size: 640, elements: !2599)
!2598 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1213)
!2599 = !{!2600}
!2600 = !DISubrange(count: 10)
!2601 = !DIGlobalVariableExpression(var: !2602, expr: !DIExpression())
!2602 = distinct !DIGlobalVariable(name: "cselib_hook_called", scope: !2, file: !3, line: 402, type: !1130, isLocal: true, isDefinition: true)
!2603 = !DIGlobalVariableExpression(var: !2604, expr: !DIExpression())
!2604 = distinct !DIGlobalVariable(name: "cfa_base_rtx", scope: !2, file: !3, line: 4683, type: !1188, isLocal: true, isDefinition: true)
!2605 = !DIGlobalVariableExpression(var: !2606, expr: !DIExpression())
!2606 = distinct !DIGlobalVariable(name: "vui_vec", scope: !2, file: !3, line: 2042, type: !2504, isLocal: true, isDefinition: true)
!2607 = !DIGlobalVariableExpression(var: !2608, expr: !DIExpression())
!2608 = distinct !DIGlobalVariable(name: "vui_allocated", scope: !2, file: !3, line: 2043, type: !1010, isLocal: true, isDefinition: true)
!2609 = !DIGlobalVariableExpression(var: !2610, expr: !DIExpression())
!2610 = distinct !DIGlobalVariable(name: "dataflow_set_different_value", scope: !2, file: !3, line: 4278, type: !1130, isLocal: true, isDefinition: true)
!2611 = !DIGlobalVariableExpression(var: !2612, expr: !DIExpression())
!2612 = distinct !DIGlobalVariable(name: "changed_variables_stack", scope: !2, file: !3, line: 7275, type: !2520, isLocal: true, isDefinition: true)
!2613 = !DIGlobalVariableExpression(var: !2614, expr: !DIExpression())
!2614 = distinct !DIGlobalVariable(name: "changed_values_stack", scope: !2, file: !3, line: 7280, type: !2458, isLocal: true, isDefinition: true)
!2615 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_opt_pass", file: !6, line: 162, size: 640, elements: !2616)
!2616 = !{!2617}
!2617 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !2615, file: !6, line: 164, baseType: !2618, size: 640)
!2618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "opt_pass", file: !6, line: 114, size: 640, elements: !2619)
!2619 = !{!2620, !2621, !2622, !2626, !2630, !2632, !2633, !2634, !2636, !2637, !2638, !2639, !2640}
!2620 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2618, file: !6, line: 117, baseType: !5, size: 32)
!2621 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2618, file: !6, line: 121, baseType: !1213, size: 64, offset: 64)
!2622 = !DIDerivedType(tag: DW_TAG_member, name: "gate", scope: !2618, file: !6, line: 125, baseType: !2623, size: 64, offset: 128)
!2623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2624, size: 64)
!2624 = !DISubroutineType(types: !2625)
!2625 = !{!1130}
!2626 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !2618, file: !6, line: 130, baseType: !2627, size: 64, offset: 192)
!2627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2628, size: 64)
!2628 = !DISubroutineType(types: !2629)
!2629 = !{!7}
!2630 = !DIDerivedType(tag: DW_TAG_member, name: "sub", scope: !2618, file: !6, line: 133, baseType: !2631, size: 64, offset: 256)
!2631 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2618, size: 64)
!2632 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2618, file: !6, line: 136, baseType: !2631, size: 64, offset: 320)
!2633 = !DIDerivedType(tag: DW_TAG_member, name: "static_pass_number", scope: !2618, file: !6, line: 139, baseType: !1010, size: 32, offset: 384)
!2634 = !DIDerivedType(tag: DW_TAG_member, name: "tv_id", scope: !2618, file: !6, line: 143, baseType: !2635, size: 32, offset: 416)
!2635 = !DIDerivedType(tag: DW_TAG_typedef, name: "timevar_id_t", file: !14, line: 80, baseType: !13)
!2636 = !DIDerivedType(tag: DW_TAG_member, name: "properties_required", scope: !2618, file: !6, line: 146, baseType: !7, size: 32, offset: 448)
!2637 = !DIDerivedType(tag: DW_TAG_member, name: "properties_provided", scope: !2618, file: !6, line: 147, baseType: !7, size: 32, offset: 480)
!2638 = !DIDerivedType(tag: DW_TAG_member, name: "properties_destroyed", scope: !2618, file: !6, line: 148, baseType: !7, size: 32, offset: 512)
!2639 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_start", scope: !2618, file: !6, line: 151, baseType: !7, size: 32, offset: 544)
!2640 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_finish", scope: !2618, file: !6, line: 152, baseType: !7, size: 32, offset: 576)
!2641 = !{i32 7, !"Dwarf Version", i32 4}
!2642 = !{i32 2, !"Debug Info Version", i32 3}
!2643 = !{i32 1, !"wchar_size", i32 4}
!2644 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!2645 = distinct !DISubprogram(name: "debug_dv", scope: !3, file: !3, line: 1107, type: !2646, scopeLine: 1108, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!2646 = !DISubroutineType(types: !2647)
!2647 = !{null, !2410}
!2648 = !{}
!2649 = !DILocalVariable(name: "dv", arg: 1, scope: !2645, file: !3, line: 1107, type: !2410)
!2650 = !DILocation(line: 1107, column: 25, scope: !2645)
!2651 = !DILocation(line: 1109, column: 22, scope: !2652)
!2652 = distinct !DILexicalBlock(scope: !2645, file: !3, line: 1109, column: 7)
!2653 = !DILocation(line: 1109, column: 7, scope: !2652)
!2654 = !DILocation(line: 1109, column: 7, scope: !2645)
!2655 = !DILocation(line: 1110, column: 29, scope: !2652)
!2656 = !DILocation(line: 1110, column: 16, scope: !2652)
!2657 = !DILocation(line: 1110, column: 5, scope: !2652)
!2658 = !DILocation(line: 1112, column: 37, scope: !2652)
!2659 = !DILocation(line: 1112, column: 25, scope: !2652)
!2660 = !DILocation(line: 1112, column: 5, scope: !2652)
!2661 = !DILocation(line: 1113, column: 1, scope: !2645)
!2662 = distinct !DISubprogram(name: "dv_is_value_p", scope: !3, file: !3, line: 1016, type: !2663, scopeLine: 1017, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!2663 = !DISubroutineType(types: !2664)
!2664 = !{!1130, !2410}
!2665 = !DILocalVariable(name: "dv", arg: 1, scope: !2662, file: !3, line: 1016, type: !2410)
!2666 = !DILocation(line: 1016, column: 30, scope: !2662)
!2667 = !DILocation(line: 1018, column: 10, scope: !2662)
!2668 = !DILocation(line: 1018, column: 13, scope: !2662)
!2669 = !DILocation(line: 1018, column: 31, scope: !2662)
!2670 = !DILocation(line: 1018, column: 17, scope: !2662)
!2671 = !DILocation(line: 1018, column: 16, scope: !2662)
!2672 = !DILocation(line: 0, scope: !2662)
!2673 = !DILocation(line: 1018, column: 3, scope: !2662)
!2674 = distinct !DISubprogram(name: "dv_as_value", scope: !3, file: !3, line: 1033, type: !2675, scopeLine: 1034, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!2675 = !DISubroutineType(types: !2676)
!2676 = !{!1188, !2410}
!2677 = !DILocalVariable(name: "dv", arg: 1, scope: !2674, file: !3, line: 1033, type: !2410)
!2678 = !DILocation(line: 1033, column: 28, scope: !2674)
!2679 = !DILocation(line: 1038, column: 15, scope: !2674)
!2680 = !DILocation(line: 1038, column: 10, scope: !2674)
!2681 = !DILocation(line: 1038, column: 3, scope: !2674)
!2682 = distinct !DISubprogram(name: "dv_as_decl", scope: !3, file: !3, line: 1023, type: !2683, scopeLine: 1024, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!2683 = !DISubroutineType(types: !2684)
!2684 = !{!1011, !2410}
!2685 = !DILocalVariable(name: "dv", arg: 1, scope: !2682, file: !3, line: 1023, type: !2410)
!2686 = !DILocation(line: 1023, column: 27, scope: !2682)
!2687 = !DILocation(line: 1028, column: 17, scope: !2682)
!2688 = !DILocation(line: 1028, column: 10, scope: !2682)
!2689 = !DILocation(line: 1028, column: 3, scope: !2682)
!2690 = distinct !DISubprogram(name: "variable_tracking_main", scope: !3, file: !3, line: 8494, type: !2628, scopeLine: 8495, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!2691 = !DILocalVariable(name: "ret", scope: !2690, file: !3, line: 8496, type: !7)
!2692 = !DILocation(line: 8496, column: 16, scope: !2690)
!2693 = !DILocalVariable(name: "save", scope: !2690, file: !3, line: 8497, type: !1010)
!2694 = !DILocation(line: 8497, column: 7, scope: !2690)
!2695 = !DILocation(line: 8497, column: 14, scope: !2690)
!2696 = !DILocation(line: 8499, column: 9, scope: !2690)
!2697 = !DILocation(line: 8499, column: 7, scope: !2690)
!2698 = !DILocation(line: 8501, column: 35, scope: !2690)
!2699 = !DILocation(line: 8501, column: 33, scope: !2690)
!2700 = !DILocation(line: 8503, column: 10, scope: !2690)
!2701 = !DILocation(line: 8503, column: 3, scope: !2690)
!2702 = distinct !DISubprogram(name: "variable_tracking_main_1", scope: !3, file: !3, line: 8432, type: !2628, scopeLine: 8433, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!2703 = !DILocalVariable(name: "success", scope: !2702, file: !3, line: 8434, type: !1130)
!2704 = !DILocation(line: 8434, column: 8, scope: !2702)
!2705 = !DILocation(line: 8436, column: 7, scope: !2706)
!2706 = distinct !DILexicalBlock(scope: !2702, file: !3, line: 8436, column: 7)
!2707 = !DILocation(line: 8436, column: 37, scope: !2706)
!2708 = !DILocation(line: 8436, column: 7, scope: !2702)
!2709 = !DILocation(line: 8438, column: 7, scope: !2710)
!2710 = distinct !DILexicalBlock(scope: !2706, file: !3, line: 8437, column: 5)
!2711 = !DILocation(line: 8439, column: 7, scope: !2710)
!2712 = !DILocation(line: 8442, column: 7, scope: !2713)
!2713 = distinct !DILexicalBlock(scope: !2702, file: !3, line: 8442, column: 7)
!2714 = !DILocation(line: 8442, column: 22, scope: !2713)
!2715 = !DILocation(line: 8442, column: 28, scope: !2713)
!2716 = !DILocation(line: 8442, column: 31, scope: !2713)
!2717 = !DILocation(line: 8442, column: 41, scope: !2713)
!2718 = !DILocation(line: 8442, column: 39, scope: !2713)
!2719 = !DILocation(line: 8442, column: 56, scope: !2713)
!2720 = !DILocation(line: 8442, column: 7, scope: !2702)
!2721 = !DILocation(line: 8444, column: 7, scope: !2722)
!2722 = distinct !DILexicalBlock(scope: !2713, file: !3, line: 8443, column: 5)
!2723 = !DILocation(line: 8445, column: 7, scope: !2722)
!2724 = !DILocation(line: 8448, column: 3, scope: !2702)
!2725 = !DILocation(line: 8449, column: 8, scope: !2726)
!2726 = distinct !DILexicalBlock(scope: !2702, file: !3, line: 8449, column: 7)
!2727 = !DILocation(line: 8449, column: 7, scope: !2702)
!2728 = !DILocation(line: 8451, column: 7, scope: !2729)
!2729 = distinct !DILexicalBlock(scope: !2726, file: !3, line: 8450, column: 5)
!2730 = !DILocation(line: 8452, column: 7, scope: !2729)
!2731 = !DILocation(line: 8453, column: 7, scope: !2729)
!2732 = !DILocation(line: 8456, column: 13, scope: !2702)
!2733 = !DILocation(line: 8456, column: 11, scope: !2702)
!2734 = !DILocation(line: 8458, column: 8, scope: !2735)
!2735 = distinct !DILexicalBlock(scope: !2702, file: !3, line: 8458, column: 7)
!2736 = !DILocation(line: 8458, column: 16, scope: !2735)
!2737 = !DILocation(line: 8458, column: 19, scope: !2735)
!2738 = !DILocation(line: 8458, column: 49, scope: !2735)
!2739 = !DILocation(line: 8458, column: 7, scope: !2702)
!2740 = !DILocation(line: 8460, column: 7, scope: !2741)
!2741 = distinct !DILexicalBlock(scope: !2735, file: !3, line: 8459, column: 5)
!2742 = !DILocation(line: 8462, column: 7, scope: !2741)
!2743 = !DILocation(line: 8465, column: 37, scope: !2741)
!2744 = !DILocation(line: 8467, column: 17, scope: !2741)
!2745 = !DILocation(line: 8467, column: 15, scope: !2741)
!2746 = !DILocation(line: 8468, column: 7, scope: !2741)
!2747 = !DILocation(line: 8470, column: 17, scope: !2741)
!2748 = !DILocation(line: 8470, column: 15, scope: !2741)
!2749 = !DILocation(line: 8471, column: 5, scope: !2741)
!2750 = !DILocation(line: 8473, column: 8, scope: !2751)
!2751 = distinct !DILexicalBlock(scope: !2702, file: !3, line: 8473, column: 7)
!2752 = !DILocation(line: 8473, column: 7, scope: !2702)
!2753 = !DILocation(line: 8475, column: 7, scope: !2754)
!2754 = distinct !DILexicalBlock(scope: !2751, file: !3, line: 8474, column: 5)
!2755 = !DILocation(line: 8476, column: 7, scope: !2754)
!2756 = !DILocation(line: 8477, column: 7, scope: !2754)
!2757 = !DILocation(line: 8480, column: 7, scope: !2758)
!2758 = distinct !DILexicalBlock(scope: !2702, file: !3, line: 8480, column: 7)
!2759 = !DILocation(line: 8480, column: 17, scope: !2758)
!2760 = !DILocation(line: 8480, column: 21, scope: !2758)
!2761 = !DILocation(line: 8480, column: 32, scope: !2758)
!2762 = !DILocation(line: 8480, column: 7, scope: !2702)
!2763 = !DILocation(line: 8482, column: 7, scope: !2764)
!2764 = distinct !DILexicalBlock(scope: !2758, file: !3, line: 8481, column: 5)
!2765 = !DILocation(line: 8483, column: 23, scope: !2764)
!2766 = !DILocation(line: 8483, column: 34, scope: !2764)
!2767 = !DILocation(line: 8483, column: 7, scope: !2764)
!2768 = !DILocation(line: 8484, column: 5, scope: !2764)
!2769 = !DILocation(line: 8486, column: 3, scope: !2702)
!2770 = !DILocation(line: 8488, column: 3, scope: !2702)
!2771 = !DILocation(line: 8489, column: 3, scope: !2702)
!2772 = !DILocation(line: 8490, column: 3, scope: !2702)
!2773 = !DILocation(line: 8491, column: 1, scope: !2702)
!2774 = distinct !DISubprogram(name: "gate_handle_var_tracking", scope: !3, file: !3, line: 8507, type: !2624, scopeLine: 8508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!2775 = !DILocation(line: 8509, column: 11, scope: !2774)
!2776 = !DILocation(line: 8509, column: 10, scope: !2774)
!2777 = !DILocation(line: 8509, column: 3, scope: !2774)
!2778 = distinct !DISubprogram(name: "dv_is_decl_p", scope: !3, file: !3, line: 1009, type: !2663, scopeLine: 1010, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!2779 = !DILocalVariable(name: "dv", arg: 1, scope: !2778, file: !3, line: 1009, type: !2410)
!2780 = !DILocation(line: 1009, column: 29, scope: !2778)
!2781 = !DILocation(line: 1011, column: 11, scope: !2778)
!2782 = !DILocation(line: 1011, column: 14, scope: !2778)
!2783 = !DILocation(line: 1011, column: 23, scope: !2778)
!2784 = !DILocation(line: 1011, column: 45, scope: !2778)
!2785 = !DILocation(line: 1011, column: 10, scope: !2778)
!2786 = !DILocation(line: 1011, column: 3, scope: !2778)
!2787 = distinct !DISubprogram(name: "delete_debug_insns", scope: !3, file: !3, line: 8353, type: !2788, scopeLine: 8354, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!2788 = !DISubroutineType(types: !2789)
!2789 = !{null}
!2790 = !DILocalVariable(name: "bb", scope: !2787, file: !3, line: 8355, type: !1795)
!2791 = !DILocation(line: 8355, column: 15, scope: !2787)
!2792 = !DILocalVariable(name: "insn", scope: !2787, file: !3, line: 8356, type: !1188)
!2793 = !DILocation(line: 8356, column: 7, scope: !2787)
!2794 = !DILocalVariable(name: "next", scope: !2787, file: !3, line: 8356, type: !1188)
!2795 = !DILocation(line: 8356, column: 13, scope: !2787)
!2796 = !DILocation(line: 8358, column: 8, scope: !2797)
!2797 = distinct !DILexicalBlock(scope: !2787, file: !3, line: 8358, column: 7)
!2798 = !DILocation(line: 8358, column: 7, scope: !2787)
!2799 = !DILocation(line: 8359, column: 5, scope: !2797)
!2800 = !DILocation(line: 8361, column: 3, scope: !2801)
!2801 = distinct !DILexicalBlock(scope: !2787, file: !3, line: 8361, column: 3)
!2802 = !DILocation(line: 8361, column: 3, scope: !2803)
!2803 = distinct !DILexicalBlock(scope: !2801, file: !3, line: 8361, column: 3)
!2804 = !DILocation(line: 8363, column: 7, scope: !2805)
!2805 = distinct !DILexicalBlock(scope: !2806, file: !3, line: 8363, column: 7)
!2806 = distinct !DILexicalBlock(scope: !2803, file: !3, line: 8362, column: 5)
!2807 = !DILocation(line: 8363, column: 7, scope: !2808)
!2808 = distinct !DILexicalBlock(scope: !2805, file: !3, line: 8363, column: 7)
!2809 = !DILocation(line: 0, scope: !2808)
!2810 = !DILocation(line: 8364, column: 6, scope: !2811)
!2811 = distinct !DILexicalBlock(scope: !2808, file: !3, line: 8364, column: 6)
!2812 = !DILocation(line: 8364, column: 6, scope: !2808)
!2813 = !DILocation(line: 8365, column: 17, scope: !2811)
!2814 = !DILocation(line: 8365, column: 4, scope: !2811)
!2815 = distinct !{!2815, !2804, !2816}
!2816 = !DILocation(line: 8365, column: 21, scope: !2805)
!2817 = !DILocation(line: 8366, column: 5, scope: !2806)
!2818 = distinct !{!2818, !2800, !2819}
!2819 = !DILocation(line: 8366, column: 5, scope: !2801)
!2820 = !DILocation(line: 8367, column: 1, scope: !2787)
!2821 = distinct !DISubprogram(name: "vt_debug_insns_local", scope: !3, file: !3, line: 8376, type: !2822, scopeLine: 8377, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!2822 = !DISubroutineType(types: !2823)
!2823 = !{null, !1130}
!2824 = !DILocalVariable(name: "skipped", arg: 1, scope: !2821, file: !3, line: 8376, type: !1130)
!2825 = !DILocation(line: 8376, column: 28, scope: !2821)
!2826 = !DILocation(line: 8379, column: 3, scope: !2821)
!2827 = !DILocation(line: 8380, column: 1, scope: !2821)
!2828 = distinct !DISubprogram(name: "vt_initialize", scope: !3, file: !3, line: 8128, type: !2624, scopeLine: 8129, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!2829 = !DILocalVariable(name: "bb", scope: !2828, file: !3, line: 8130, type: !1795)
!2830 = !DILocation(line: 8130, column: 15, scope: !2828)
!2831 = !DILocalVariable(name: "prologue_bb", scope: !2828, file: !3, line: 8130, type: !1795)
!2832 = !DILocation(line: 8130, column: 19, scope: !2828)
!2833 = !DILocalVariable(name: "fp_cfa_offset", scope: !2828, file: !3, line: 8131, type: !1067)
!2834 = !DILocation(line: 8131, column: 17, scope: !2828)
!2835 = !DILocation(line: 8133, column: 3, scope: !2828)
!2836 = !DILocation(line: 8135, column: 16, scope: !2828)
!2837 = !DILocation(line: 8135, column: 14, scope: !2828)
!2838 = !DILocation(line: 8137, column: 14, scope: !2828)
!2839 = !DILocation(line: 8137, column: 12, scope: !2828)
!2840 = !DILocation(line: 8141, column: 20, scope: !2828)
!2841 = !DILocation(line: 8141, column: 18, scope: !2828)
!2842 = !DILocation(line: 8144, column: 22, scope: !2828)
!2843 = !DILocation(line: 8144, column: 20, scope: !2828)
!2844 = !DILocation(line: 8146, column: 49, scope: !2828)
!2845 = !DILocation(line: 8146, column: 37, scope: !2828)
!2846 = !DILocation(line: 8146, column: 23, scope: !2828)
!2847 = !DILocation(line: 8146, column: 21, scope: !2828)
!2848 = !DILocation(line: 8147, column: 3, scope: !2828)
!2849 = !DILocation(line: 8147, column: 22, scope: !2828)
!2850 = !DILocation(line: 8147, column: 31, scope: !2828)
!2851 = !DILocation(line: 8149, column: 7, scope: !2828)
!2852 = !DILocation(line: 8148, column: 3, scope: !2828)
!2853 = !DILocation(line: 8148, column: 22, scope: !2828)
!2854 = !DILocation(line: 8149, column: 5, scope: !2828)
!2855 = !DILocation(line: 8151, column: 23, scope: !2828)
!2856 = !DILocation(line: 8151, column: 21, scope: !2828)
!2857 = !DILocation(line: 8153, column: 7, scope: !2858)
!2858 = distinct !DILexicalBlock(scope: !2828, file: !3, line: 8153, column: 7)
!2859 = !DILocation(line: 8153, column: 7, scope: !2828)
!2860 = !DILocation(line: 8155, column: 26, scope: !2861)
!2861 = distinct !DILexicalBlock(scope: !2858, file: !3, line: 8154, column: 5)
!2862 = !DILocation(line: 8155, column: 24, scope: !2861)
!2863 = !DILocation(line: 8158, column: 22, scope: !2861)
!2864 = !DILocation(line: 8158, column: 20, scope: !2861)
!2865 = !DILocation(line: 8160, column: 5, scope: !2861)
!2866 = !DILocation(line: 8163, column: 3, scope: !2867)
!2867 = distinct !DILexicalBlock(scope: !2828, file: !3, line: 8163, column: 3)
!2868 = !DILocation(line: 8163, column: 3, scope: !2869)
!2869 = distinct !DILexicalBlock(scope: !2867, file: !3, line: 8163, column: 3)
!2870 = !DILocation(line: 8165, column: 7, scope: !2871)
!2871 = distinct !DILexicalBlock(scope: !2869, file: !3, line: 8164, column: 5)
!2872 = !DILocation(line: 8165, column: 17, scope: !2871)
!2873 = !DILocation(line: 8165, column: 25, scope: !2871)
!2874 = !DILocation(line: 8166, column: 7, scope: !2871)
!2875 = !DILocation(line: 8166, column: 17, scope: !2871)
!2876 = !DILocation(line: 8166, column: 25, scope: !2871)
!2877 = !DILocation(line: 8167, column: 27, scope: !2871)
!2878 = !DILocation(line: 8167, column: 37, scope: !2871)
!2879 = !DILocation(line: 8167, column: 7, scope: !2871)
!2880 = !DILocation(line: 8168, column: 27, scope: !2871)
!2881 = !DILocation(line: 8168, column: 37, scope: !2871)
!2882 = !DILocation(line: 8168, column: 7, scope: !2871)
!2883 = !DILocation(line: 8169, column: 7, scope: !2871)
!2884 = !DILocation(line: 8169, column: 17, scope: !2871)
!2885 = !DILocation(line: 8169, column: 23, scope: !2871)
!2886 = !DILocation(line: 8170, column: 5, scope: !2871)
!2887 = distinct !{!2887, !2866, !2888}
!2888 = !DILocation(line: 8170, column: 5, scope: !2867)
!2889 = !DILocation(line: 8172, column: 7, scope: !2890)
!2890 = distinct !DILexicalBlock(scope: !2828, file: !3, line: 8172, column: 7)
!2891 = !DILocation(line: 8172, column: 7, scope: !2828)
!2892 = !DILocation(line: 8174, column: 7, scope: !2893)
!2893 = distinct !DILexicalBlock(scope: !2890, file: !3, line: 8173, column: 5)
!2894 = !DILocation(line: 8175, column: 22, scope: !2893)
!2895 = !DILocation(line: 8175, column: 20, scope: !2893)
!2896 = !DILocation(line: 8176, column: 21, scope: !2893)
!2897 = !DILocation(line: 8176, column: 19, scope: !2893)
!2898 = !DILocation(line: 8178, column: 26, scope: !2893)
!2899 = !DILocation(line: 8178, column: 24, scope: !2893)
!2900 = !DILocation(line: 8179, column: 5, scope: !2893)
!2901 = !DILocation(line: 8182, column: 20, scope: !2902)
!2902 = distinct !DILexicalBlock(scope: !2890, file: !3, line: 8181, column: 5)
!2903 = !DILocation(line: 8183, column: 19, scope: !2902)
!2904 = !DILocation(line: 8186, column: 8, scope: !2905)
!2905 = distinct !DILexicalBlock(scope: !2828, file: !3, line: 8186, column: 7)
!2906 = !DILocation(line: 8186, column: 7, scope: !2828)
!2907 = !DILocalVariable(name: "reg", scope: !2908, file: !3, line: 8188, type: !1188)
!2908 = distinct !DILexicalBlock(scope: !2905, file: !3, line: 8187, column: 5)
!2909 = !DILocation(line: 8188, column: 11, scope: !2908)
!2910 = !DILocalVariable(name: "elim", scope: !2908, file: !3, line: 8188, type: !1188)
!2911 = !DILocation(line: 8188, column: 16, scope: !2908)
!2912 = !DILocation(line: 8190, column: 12, scope: !2913)
!2913 = distinct !DILexicalBlock(scope: !2908, file: !3, line: 8190, column: 11)
!2914 = !DILocation(line: 8190, column: 11, scope: !2908)
!2915 = !DILocation(line: 8191, column: 2, scope: !2913)
!2916 = !DILocation(line: 8196, column: 13, scope: !2908)
!2917 = !DILocation(line: 8196, column: 11, scope: !2908)
!2918 = !DILocation(line: 8198, column: 30, scope: !2908)
!2919 = !DILocation(line: 8198, column: 14, scope: !2908)
!2920 = !DILocation(line: 8198, column: 12, scope: !2908)
!2921 = !DILocation(line: 8199, column: 11, scope: !2922)
!2922 = distinct !DILexicalBlock(scope: !2908, file: !3, line: 8199, column: 11)
!2923 = !DILocation(line: 8199, column: 19, scope: !2922)
!2924 = !DILocation(line: 8199, column: 16, scope: !2922)
!2925 = !DILocation(line: 8199, column: 11, scope: !2908)
!2926 = !DILocation(line: 8201, column: 8, scope: !2927)
!2927 = distinct !DILexicalBlock(scope: !2928, file: !3, line: 8201, column: 8)
!2928 = distinct !DILexicalBlock(scope: !2922, file: !3, line: 8200, column: 2)
!2929 = !DILocation(line: 8201, column: 24, scope: !2927)
!2930 = !DILocation(line: 8201, column: 8, scope: !2928)
!2931 = !DILocation(line: 8202, column: 13, scope: !2927)
!2932 = !DILocation(line: 8202, column: 11, scope: !2927)
!2933 = !DILocation(line: 8202, column: 6, scope: !2927)
!2934 = !DILocation(line: 8203, column: 8, scope: !2935)
!2935 = distinct !DILexicalBlock(scope: !2928, file: !3, line: 8203, column: 8)
!2936 = !DILocation(line: 8203, column: 16, scope: !2935)
!2937 = !DILocation(line: 8203, column: 13, scope: !2935)
!2938 = !DILocation(line: 8203, column: 8, scope: !2928)
!2939 = !DILocation(line: 8204, column: 6, scope: !2935)
!2940 = !DILocation(line: 8205, column: 2, scope: !2928)
!2941 = !DILocation(line: 8206, column: 5, scope: !2908)
!2942 = !DILocation(line: 8207, column: 19, scope: !2943)
!2943 = distinct !DILexicalBlock(scope: !2905, file: !3, line: 8207, column: 12)
!2944 = !DILocation(line: 8207, column: 13, scope: !2943)
!2945 = !DILocation(line: 8207, column: 12, scope: !2905)
!2946 = !DILocalVariable(name: "reg", scope: !2947, file: !3, line: 8209, type: !1188)
!2947 = distinct !DILexicalBlock(scope: !2943, file: !3, line: 8208, column: 5)
!2948 = !DILocation(line: 8209, column: 11, scope: !2947)
!2949 = !DILocalVariable(name: "elim", scope: !2947, file: !3, line: 8209, type: !1188)
!2950 = !DILocation(line: 8209, column: 16, scope: !2947)
!2951 = !DILocation(line: 8215, column: 13, scope: !2947)
!2952 = !DILocation(line: 8215, column: 11, scope: !2947)
!2953 = !DILocation(line: 8216, column: 23, scope: !2947)
!2954 = !DILocation(line: 8216, column: 21, scope: !2947)
!2955 = !DILocation(line: 8218, column: 30, scope: !2947)
!2956 = !DILocation(line: 8218, column: 14, scope: !2947)
!2957 = !DILocation(line: 8218, column: 12, scope: !2947)
!2958 = !DILocation(line: 8219, column: 11, scope: !2959)
!2959 = distinct !DILexicalBlock(scope: !2947, file: !3, line: 8219, column: 11)
!2960 = !DILocation(line: 8219, column: 19, scope: !2959)
!2961 = !DILocation(line: 8219, column: 16, scope: !2959)
!2962 = !DILocation(line: 8219, column: 11, scope: !2947)
!2963 = !DILocation(line: 8221, column: 8, scope: !2964)
!2964 = distinct !DILexicalBlock(scope: !2965, file: !3, line: 8221, column: 8)
!2965 = distinct !DILexicalBlock(scope: !2959, file: !3, line: 8220, column: 2)
!2966 = !DILocation(line: 8221, column: 24, scope: !2964)
!2967 = !DILocation(line: 8221, column: 8, scope: !2965)
!2968 = !DILocation(line: 8223, column: 25, scope: !2969)
!2969 = distinct !DILexicalBlock(scope: !2964, file: !3, line: 8222, column: 6)
!2970 = !DILocation(line: 8223, column: 22, scope: !2969)
!2971 = !DILocation(line: 8224, column: 15, scope: !2969)
!2972 = !DILocation(line: 8224, column: 13, scope: !2969)
!2973 = !DILocation(line: 8225, column: 6, scope: !2969)
!2974 = !DILocation(line: 8226, column: 8, scope: !2975)
!2975 = distinct !DILexicalBlock(scope: !2965, file: !3, line: 8226, column: 8)
!2976 = !DILocation(line: 8226, column: 16, scope: !2975)
!2977 = !DILocation(line: 8226, column: 13, scope: !2975)
!2978 = !DILocation(line: 8226, column: 8, scope: !2965)
!2979 = !DILocation(line: 8227, column: 20, scope: !2975)
!2980 = !DILocation(line: 8227, column: 6, scope: !2975)
!2981 = !DILocation(line: 8229, column: 33, scope: !2975)
!2982 = !DILocation(line: 8229, column: 20, scope: !2975)
!2983 = !DILocation(line: 8229, column: 18, scope: !2975)
!2984 = !DILocation(line: 8230, column: 2, scope: !2965)
!2985 = !DILocation(line: 8231, column: 5, scope: !2947)
!2986 = !DILocation(line: 8233, column: 33, scope: !2828)
!2987 = !DILocation(line: 8235, column: 3, scope: !2988)
!2988 = distinct !DILexicalBlock(scope: !2828, file: !3, line: 8235, column: 3)
!2989 = !DILocation(line: 8235, column: 3, scope: !2990)
!2990 = distinct !DILexicalBlock(scope: !2988, file: !3, line: 8235, column: 3)
!2991 = !DILocalVariable(name: "insn", scope: !2992, file: !3, line: 8237, type: !1188)
!2992 = distinct !DILexicalBlock(scope: !2990, file: !3, line: 8236, column: 5)
!2993 = !DILocation(line: 8237, column: 11, scope: !2992)
!2994 = !DILocalVariable(name: "pre", scope: !2992, file: !3, line: 8238, type: !1067)
!2995 = !DILocation(line: 8238, column: 21, scope: !2992)
!2996 = !DILocalVariable(name: "post", scope: !2992, file: !3, line: 8238, type: !1067)
!2997 = !DILocation(line: 8238, column: 26, scope: !2992)
!2998 = !DILocalVariable(name: "first_bb", scope: !2992, file: !3, line: 8239, type: !1795)
!2999 = !DILocation(line: 8239, column: 19, scope: !2992)
!3000 = !DILocalVariable(name: "last_bb", scope: !2992, file: !3, line: 8239, type: !1795)
!3001 = !DILocation(line: 8239, column: 29, scope: !2992)
!3002 = !DILocation(line: 8241, column: 11, scope: !3003)
!3003 = distinct !DILexicalBlock(scope: !2992, file: !3, line: 8241, column: 11)
!3004 = !DILocation(line: 8241, column: 11, scope: !2992)
!3005 = !DILocation(line: 8243, column: 28, scope: !3006)
!3006 = distinct !DILexicalBlock(scope: !3003, file: !3, line: 8242, column: 2)
!3007 = !DILocation(line: 8244, column: 8, scope: !3008)
!3008 = distinct !DILexicalBlock(scope: !3006, file: !3, line: 8244, column: 8)
!3009 = !DILocation(line: 8244, column: 18, scope: !3008)
!3010 = !DILocation(line: 8244, column: 22, scope: !3008)
!3011 = !DILocation(line: 8244, column: 33, scope: !3008)
!3012 = !DILocation(line: 8244, column: 8, scope: !3006)
!3013 = !DILocation(line: 8245, column: 15, scope: !3008)
!3014 = !DILocation(line: 8246, column: 8, scope: !3008)
!3015 = !DILocation(line: 8245, column: 6, scope: !3008)
!3016 = !DILocation(line: 8247, column: 2, scope: !3006)
!3017 = !DILocation(line: 8249, column: 18, scope: !2992)
!3018 = !DILocation(line: 8249, column: 16, scope: !2992)
!3019 = !DILocation(line: 8250, column: 7, scope: !2992)
!3020 = !DILocalVariable(name: "e", scope: !3021, file: !3, line: 8252, type: !1340)
!3021 = distinct !DILexicalBlock(scope: !3022, file: !3, line: 8251, column: 2)
!3022 = distinct !DILexicalBlock(scope: !3023, file: !3, line: 8250, column: 7)
!3023 = distinct !DILexicalBlock(scope: !2992, file: !3, line: 8250, column: 7)
!3024 = !DILocation(line: 8252, column: 9, scope: !3021)
!3025 = !DILocation(line: 8253, column: 8, scope: !3026)
!3026 = distinct !DILexicalBlock(scope: !3021, file: !3, line: 8253, column: 8)
!3027 = !DILocation(line: 8253, column: 12, scope: !3026)
!3028 = !DILocation(line: 8253, column: 23, scope: !3026)
!3029 = !DILocation(line: 8253, column: 20, scope: !3026)
!3030 = !DILocation(line: 8254, column: 8, scope: !3026)
!3031 = !DILocation(line: 8254, column: 28, scope: !3026)
!3032 = !DILocation(line: 8254, column: 32, scope: !3026)
!3033 = !DILocation(line: 8254, column: 13, scope: !3026)
!3034 = !DILocation(line: 8253, column: 8, scope: !3021)
!3035 = !DILocation(line: 8255, column: 6, scope: !3026)
!3036 = !DILocation(line: 8256, column: 19, scope: !3021)
!3037 = !DILocation(line: 8256, column: 23, scope: !3021)
!3038 = !DILocation(line: 8256, column: 27, scope: !3021)
!3039 = !DILocation(line: 8256, column: 8, scope: !3021)
!3040 = !DILocation(line: 8256, column: 6, scope: !3021)
!3041 = !DILocation(line: 8257, column: 10, scope: !3042)
!3042 = distinct !DILexicalBlock(scope: !3021, file: !3, line: 8257, column: 8)
!3043 = !DILocation(line: 8257, column: 12, scope: !3042)
!3044 = !DILocation(line: 8257, column: 16, scope: !3042)
!3045 = !DILocation(line: 8257, column: 19, scope: !3042)
!3046 = !DILocation(line: 8257, column: 25, scope: !3042)
!3047 = !DILocation(line: 8257, column: 42, scope: !3042)
!3048 = !DILocation(line: 8257, column: 8, scope: !3021)
!3049 = !DILocation(line: 8258, column: 6, scope: !3042)
!3050 = !DILocation(line: 8259, column: 9, scope: !3021)
!3051 = !DILocation(line: 8259, column: 13, scope: !3021)
!3052 = !DILocation(line: 8259, column: 7, scope: !3021)
!3053 = !DILocation(line: 8250, column: 7, scope: !3022)
!3054 = distinct !{!3054, !3055, !3056}
!3055 = !DILocation(line: 8250, column: 7, scope: !3023)
!3056 = !DILocation(line: 8260, column: 2, scope: !3023)
!3057 = !DILocation(line: 8261, column: 17, scope: !2992)
!3058 = !DILocation(line: 8261, column: 15, scope: !2992)
!3059 = !DILocation(line: 8264, column: 7, scope: !3060)
!3060 = distinct !DILexicalBlock(scope: !2992, file: !3, line: 8264, column: 7)
!3061 = !DILocation(line: 8264, column: 7, scope: !3062)
!3062 = distinct !DILexicalBlock(scope: !3060, file: !3, line: 8264, column: 7)
!3063 = !DILocalVariable(name: "offset", scope: !3064, file: !3, line: 8266, type: !1067)
!3064 = distinct !DILexicalBlock(scope: !3062, file: !3, line: 8265, column: 2)
!3065 = !DILocation(line: 8266, column: 18, scope: !3064)
!3066 = !DILocation(line: 8266, column: 27, scope: !3064)
!3067 = !DILocation(line: 8266, column: 37, scope: !3064)
!3068 = !DILocation(line: 8266, column: 41, scope: !3064)
!3069 = !DILocation(line: 8267, column: 33, scope: !3064)
!3070 = !DILocation(line: 8267, column: 43, scope: !3064)
!3071 = !DILocation(line: 8267, column: 46, scope: !3064)
!3072 = !DILocation(line: 8267, column: 4, scope: !3064)
!3073 = !DILocation(line: 8267, column: 14, scope: !3064)
!3074 = !DILocation(line: 8267, column: 18, scope: !3064)
!3075 = !DILocation(line: 8267, column: 31, scope: !3064)
!3076 = !DILocation(line: 8268, column: 16, scope: !3077)
!3077 = distinct !DILexicalBlock(scope: !3064, file: !3, line: 8268, column: 4)
!3078 = !DILocation(line: 8268, column: 14, scope: !3077)
!3079 = !DILocation(line: 8268, column: 9, scope: !3077)
!3080 = !DILocation(line: 8268, column: 30, scope: !3081)
!3081 = distinct !DILexicalBlock(scope: !3077, file: !3, line: 8268, column: 4)
!3082 = !DILocation(line: 8268, column: 38, scope: !3081)
!3083 = !DILocation(line: 8268, column: 35, scope: !3081)
!3084 = !DILocation(line: 8268, column: 4, scope: !3077)
!3085 = !DILocation(line: 8271, column: 12, scope: !3086)
!3086 = distinct !DILexicalBlock(scope: !3087, file: !3, line: 8271, column: 12)
!3087 = distinct !DILexicalBlock(scope: !3081, file: !3, line: 8270, column: 6)
!3088 = !DILocation(line: 8271, column: 12, scope: !3087)
!3089 = !DILocation(line: 8273, column: 10, scope: !3090)
!3090 = distinct !DILexicalBlock(scope: !3091, file: !3, line: 8273, column: 9)
!3091 = distinct !DILexicalBlock(scope: !3086, file: !3, line: 8272, column: 3)
!3092 = !DILocation(line: 8273, column: 9, scope: !3091)
!3093 = !DILocation(line: 8275, column: 44, scope: !3094)
!3094 = distinct !DILexicalBlock(scope: !3090, file: !3, line: 8274, column: 7)
!3095 = !DILocation(line: 8275, column: 9, scope: !3094)
!3096 = !DILocation(line: 8276, column: 13, scope: !3097)
!3097 = distinct !DILexicalBlock(scope: !3094, file: !3, line: 8276, column: 13)
!3098 = !DILocation(line: 8276, column: 13, scope: !3094)
!3099 = !DILocalVariable(name: "mo", scope: !3100, file: !3, line: 8278, type: !2386)
!3100 = distinct !DILexicalBlock(scope: !3097, file: !3, line: 8277, column: 4)
!3101 = !DILocation(line: 8278, column: 22, scope: !3100)
!3102 = !DILocation(line: 8279, column: 9, scope: !3100)
!3103 = !DILocation(line: 8279, column: 14, scope: !3100)
!3104 = !DILocation(line: 8280, column: 20, scope: !3100)
!3105 = !DILocation(line: 8280, column: 9, scope: !3100)
!3106 = !DILocation(line: 8280, column: 11, scope: !3100)
!3107 = !DILocation(line: 8280, column: 18, scope: !3100)
!3108 = !DILocation(line: 8281, column: 16, scope: !3100)
!3109 = !DILocation(line: 8281, column: 9, scope: !3100)
!3110 = !DILocation(line: 8281, column: 14, scope: !3100)
!3111 = !DILocation(line: 8282, column: 10, scope: !3112)
!3112 = distinct !DILexicalBlock(scope: !3100, file: !3, line: 8282, column: 10)
!3113 = !DILocation(line: 8282, column: 20, scope: !3112)
!3114 = !DILocation(line: 8282, column: 24, scope: !3112)
!3115 = !DILocation(line: 8282, column: 35, scope: !3112)
!3116 = !DILocation(line: 8282, column: 10, scope: !3100)
!3117 = !DILocation(line: 8283, column: 21, scope: !3112)
!3118 = !DILocation(line: 8283, column: 37, scope: !3112)
!3119 = !DILocation(line: 8283, column: 41, scope: !3112)
!3120 = !DILocation(line: 8284, column: 18, scope: !3112)
!3121 = !DILocation(line: 8283, column: 8, scope: !3112)
!3122 = !DILocation(line: 8285, column: 6, scope: !3100)
!3123 = !DILocation(line: 8287, column: 36, scope: !3100)
!3124 = !DILocation(line: 8287, column: 6, scope: !3100)
!3125 = !DILocation(line: 8287, column: 16, scope: !3100)
!3126 = !DILocation(line: 8287, column: 20, scope: !3100)
!3127 = !DILocation(line: 8287, column: 33, scope: !3100)
!3128 = !DILocation(line: 8288, column: 4, scope: !3100)
!3129 = !DILocation(line: 8289, column: 7, scope: !3094)
!3130 = !DILocation(line: 8291, column: 24, scope: !3091)
!3131 = !DILocation(line: 8292, column: 18, scope: !3091)
!3132 = !DILocation(line: 8292, column: 22, scope: !3091)
!3133 = !DILocation(line: 8292, column: 5, scope: !3091)
!3134 = !DILocation(line: 8293, column: 9, scope: !3135)
!3135 = distinct !DILexicalBlock(scope: !3091, file: !3, line: 8293, column: 9)
!3136 = !DILocation(line: 8293, column: 9, scope: !3091)
!3137 = !DILocation(line: 8295, column: 30, scope: !3138)
!3138 = distinct !DILexicalBlock(scope: !3135, file: !3, line: 8294, column: 7)
!3139 = !DILocation(line: 8295, column: 9, scope: !3138)
!3140 = !DILocation(line: 8296, column: 13, scope: !3141)
!3141 = distinct !DILexicalBlock(scope: !3138, file: !3, line: 8296, column: 13)
!3142 = !DILocation(line: 8296, column: 23, scope: !3141)
!3143 = !DILocation(line: 8296, column: 27, scope: !3141)
!3144 = !DILocation(line: 8296, column: 38, scope: !3141)
!3145 = !DILocation(line: 8296, column: 13, scope: !3138)
!3146 = !DILocation(line: 8298, column: 24, scope: !3147)
!3147 = distinct !DILexicalBlock(scope: !3141, file: !3, line: 8297, column: 4)
!3148 = !DILocation(line: 8298, column: 35, scope: !3147)
!3149 = !DILocation(line: 8298, column: 6, scope: !3147)
!3150 = !DILocation(line: 8299, column: 25, scope: !3147)
!3151 = !DILocation(line: 8299, column: 6, scope: !3147)
!3152 = !DILocation(line: 8300, column: 4, scope: !3147)
!3153 = !DILocation(line: 8301, column: 7, scope: !3138)
!3154 = !DILocation(line: 8302, column: 10, scope: !3155)
!3155 = distinct !DILexicalBlock(scope: !3091, file: !3, line: 8302, column: 9)
!3156 = !DILocation(line: 8302, column: 9, scope: !3091)
!3157 = !DILocation(line: 8303, column: 22, scope: !3155)
!3158 = !DILocation(line: 8303, column: 7, scope: !3155)
!3159 = !DILocation(line: 8304, column: 5, scope: !3091)
!3160 = !DILocation(line: 8306, column: 10, scope: !3161)
!3161 = distinct !DILexicalBlock(scope: !3091, file: !3, line: 8306, column: 9)
!3162 = !DILocation(line: 8306, column: 31, scope: !3161)
!3163 = !DILocation(line: 8306, column: 34, scope: !3161)
!3164 = !DILocation(line: 8306, column: 9, scope: !3091)
!3165 = !DILocalVariable(name: "mo", scope: !3166, file: !3, line: 8308, type: !2386)
!3166 = distinct !DILexicalBlock(scope: !3161, file: !3, line: 8307, column: 7)
!3167 = !DILocation(line: 8308, column: 25, scope: !3166)
!3168 = !DILocation(line: 8309, column: 12, scope: !3166)
!3169 = !DILocation(line: 8309, column: 17, scope: !3166)
!3170 = !DILocation(line: 8310, column: 23, scope: !3166)
!3171 = !DILocation(line: 8310, column: 12, scope: !3166)
!3172 = !DILocation(line: 8310, column: 14, scope: !3166)
!3173 = !DILocation(line: 8310, column: 21, scope: !3166)
!3174 = !DILocation(line: 8311, column: 19, scope: !3166)
!3175 = !DILocation(line: 8311, column: 12, scope: !3166)
!3176 = !DILocation(line: 8311, column: 17, scope: !3166)
!3177 = !DILocation(line: 8312, column: 13, scope: !3178)
!3178 = distinct !DILexicalBlock(scope: !3166, file: !3, line: 8312, column: 13)
!3179 = !DILocation(line: 8312, column: 23, scope: !3178)
!3180 = !DILocation(line: 8312, column: 27, scope: !3178)
!3181 = !DILocation(line: 8312, column: 38, scope: !3178)
!3182 = !DILocation(line: 8312, column: 13, scope: !3166)
!3183 = !DILocation(line: 8313, column: 17, scope: !3178)
!3184 = !DILocation(line: 8313, column: 33, scope: !3178)
!3185 = !DILocation(line: 8313, column: 37, scope: !3178)
!3186 = !DILocation(line: 8314, column: 21, scope: !3178)
!3187 = !DILocation(line: 8313, column: 4, scope: !3178)
!3188 = !DILocation(line: 8315, column: 9, scope: !3166)
!3189 = !DILocation(line: 8317, column: 39, scope: !3166)
!3190 = !DILocation(line: 8317, column: 9, scope: !3166)
!3191 = !DILocation(line: 8317, column: 19, scope: !3166)
!3192 = !DILocation(line: 8317, column: 23, scope: !3166)
!3193 = !DILocation(line: 8317, column: 36, scope: !3166)
!3194 = !DILocation(line: 8318, column: 7, scope: !3166)
!3195 = !DILocation(line: 8320, column: 9, scope: !3196)
!3196 = distinct !DILexicalBlock(scope: !3091, file: !3, line: 8320, column: 9)
!3197 = !DILocation(line: 8320, column: 15, scope: !3196)
!3198 = !DILocation(line: 8320, column: 12, scope: !3196)
!3199 = !DILocation(line: 8321, column: 9, scope: !3196)
!3200 = !DILocation(line: 8321, column: 12, scope: !3196)
!3201 = !DILocation(line: 8321, column: 42, scope: !3196)
!3202 = !DILocation(line: 8322, column: 9, scope: !3196)
!3203 = !DILocation(line: 8322, column: 12, scope: !3196)
!3204 = !DILocation(line: 8323, column: 9, scope: !3196)
!3205 = !DILocation(line: 8323, column: 23, scope: !3196)
!3206 = !DILocation(line: 8323, column: 12, scope: !3196)
!3207 = !DILocation(line: 8320, column: 9, scope: !3091)
!3208 = !DILocation(line: 8325, column: 9, scope: !3209)
!3209 = distinct !DILexicalBlock(scope: !3196, file: !3, line: 8324, column: 7)
!3210 = !DILocation(line: 8326, column: 41, scope: !3209)
!3211 = !DILocation(line: 8326, column: 39, scope: !3209)
!3212 = !DILocation(line: 8327, column: 7, scope: !3209)
!3213 = !DILocation(line: 8328, column: 3, scope: !3091)
!3214 = !DILocation(line: 8329, column: 6, scope: !3087)
!3215 = !DILocation(line: 8269, column: 16, scope: !3081)
!3216 = !DILocation(line: 8269, column: 14, scope: !3081)
!3217 = !DILocation(line: 8268, column: 4, scope: !3081)
!3218 = distinct !{!3218, !3084, !3219}
!3219 = !DILocation(line: 8329, column: 6, scope: !3077)
!3220 = !DILocation(line: 8330, column: 4, scope: !3064)
!3221 = !DILocation(line: 8331, column: 2, scope: !3064)
!3222 = distinct !{!3222, !3059, !3223}
!3223 = !DILocation(line: 8331, column: 2, scope: !3060)
!3224 = !DILocation(line: 8333, column: 12, scope: !2992)
!3225 = !DILocation(line: 8333, column: 10, scope: !2992)
!3226 = !DILocation(line: 8335, column: 11, scope: !3227)
!3227 = distinct !DILexicalBlock(scope: !2992, file: !3, line: 8335, column: 11)
!3228 = !DILocation(line: 8335, column: 11, scope: !2992)
!3229 = !DILocation(line: 8337, column: 4, scope: !3230)
!3230 = distinct !DILexicalBlock(scope: !3227, file: !3, line: 8336, column: 2)
!3231 = !DILocation(line: 8338, column: 24, scope: !3230)
!3232 = !DILocation(line: 8338, column: 4, scope: !3230)
!3233 = !DILocation(line: 8339, column: 28, scope: !3230)
!3234 = !DILocation(line: 8340, column: 2, scope: !3230)
!3235 = !DILocation(line: 8341, column: 5, scope: !2992)
!3236 = distinct !{!3236, !2987, !3237}
!3237 = !DILocation(line: 8341, column: 5, scope: !2988)
!3238 = !DILocation(line: 8343, column: 33, scope: !2828)
!3239 = !DILocation(line: 8344, column: 3, scope: !2828)
!3240 = !DILocation(line: 8344, column: 26, scope: !2828)
!3241 = !DILocation(line: 8344, column: 34, scope: !2828)
!3242 = !DILocation(line: 8345, column: 3, scope: !2828)
!3243 = !DILocation(line: 8346, column: 16, scope: !2828)
!3244 = !DILocation(line: 8347, column: 3, scope: !2828)
!3245 = !DILocation(line: 8348, column: 1, scope: !2828)
!3246 = distinct !DISubprogram(name: "vt_finalize", scope: !3, file: !3, line: 8385, type: !2788, scopeLine: 8386, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!3247 = !DILocalVariable(name: "bb", scope: !3246, file: !3, line: 8387, type: !1795)
!3248 = !DILocation(line: 8387, column: 15, scope: !3246)
!3249 = !DILocation(line: 8389, column: 3, scope: !3250)
!3250 = distinct !DILexicalBlock(scope: !3246, file: !3, line: 8389, column: 3)
!3251 = !DILocation(line: 8389, column: 3, scope: !3252)
!3252 = distinct !DILexicalBlock(scope: !3250, file: !3, line: 8389, column: 3)
!3253 = !DILocation(line: 8391, column: 7, scope: !3254)
!3254 = distinct !DILexicalBlock(scope: !3252, file: !3, line: 8390, column: 5)
!3255 = !DILocation(line: 8392, column: 5, scope: !3254)
!3256 = distinct !{!3256, !3249, !3257}
!3257 = !DILocation(line: 8392, column: 5, scope: !3250)
!3258 = !DILocation(line: 8394, column: 3, scope: !3259)
!3259 = distinct !DILexicalBlock(scope: !3246, file: !3, line: 8394, column: 3)
!3260 = !DILocation(line: 8394, column: 3, scope: !3261)
!3261 = distinct !DILexicalBlock(scope: !3259, file: !3, line: 8394, column: 3)
!3262 = !DILocation(line: 8396, column: 30, scope: !3263)
!3263 = distinct !DILexicalBlock(scope: !3261, file: !3, line: 8395, column: 5)
!3264 = !DILocation(line: 8396, column: 40, scope: !3263)
!3265 = !DILocation(line: 8396, column: 7, scope: !3263)
!3266 = !DILocation(line: 8397, column: 30, scope: !3263)
!3267 = !DILocation(line: 8397, column: 40, scope: !3263)
!3268 = !DILocation(line: 8397, column: 7, scope: !3263)
!3269 = !DILocation(line: 8398, column: 11, scope: !3270)
!3270 = distinct !DILexicalBlock(scope: !3263, file: !3, line: 8398, column: 11)
!3271 = !DILocation(line: 8398, column: 21, scope: !3270)
!3272 = !DILocation(line: 8398, column: 11, scope: !3263)
!3273 = !DILocation(line: 8400, column: 26, scope: !3274)
!3274 = distinct !DILexicalBlock(scope: !3270, file: !3, line: 8399, column: 2)
!3275 = !DILocation(line: 8400, column: 36, scope: !3274)
!3276 = !DILocation(line: 8400, column: 4, scope: !3274)
!3277 = !DILocation(line: 8401, column: 4, scope: !3274)
!3278 = !DILocation(line: 8402, column: 2, scope: !3274)
!3279 = !DILocation(line: 8403, column: 5, scope: !3263)
!3280 = distinct !{!3280, !3258, !3281}
!3281 = !DILocation(line: 8403, column: 5, scope: !3259)
!3282 = !DILocation(line: 8404, column: 3, scope: !3246)
!3283 = !DILocation(line: 8405, column: 16, scope: !3246)
!3284 = !DILocation(line: 8405, column: 35, scope: !3246)
!3285 = !DILocation(line: 8405, column: 3, scope: !3246)
!3286 = !DILocation(line: 8406, column: 16, scope: !3246)
!3287 = !DILocation(line: 8406, column: 3, scope: !3246)
!3288 = !DILocation(line: 8407, column: 20, scope: !3246)
!3289 = !DILocation(line: 8407, column: 3, scope: !3246)
!3290 = !DILocation(line: 8408, column: 20, scope: !3246)
!3291 = !DILocation(line: 8408, column: 3, scope: !3246)
!3292 = !DILocation(line: 8409, column: 20, scope: !3246)
!3293 = !DILocation(line: 8409, column: 3, scope: !3246)
!3294 = !DILocation(line: 8410, column: 20, scope: !3246)
!3295 = !DILocation(line: 8410, column: 3, scope: !3246)
!3296 = !DILocation(line: 8412, column: 7, scope: !3297)
!3297 = distinct !DILexicalBlock(scope: !3246, file: !3, line: 8412, column: 7)
!3298 = !DILocation(line: 8412, column: 7, scope: !3246)
!3299 = !DILocation(line: 8414, column: 20, scope: !3300)
!3300 = distinct !DILexicalBlock(scope: !3297, file: !3, line: 8413, column: 5)
!3301 = !DILocation(line: 8414, column: 7, scope: !3300)
!3302 = !DILocation(line: 8415, column: 24, scope: !3300)
!3303 = !DILocation(line: 8415, column: 7, scope: !3300)
!3304 = !DILocation(line: 8416, column: 24, scope: !3300)
!3305 = !DILocation(line: 8416, column: 7, scope: !3300)
!3306 = !DILocation(line: 8417, column: 7, scope: !3300)
!3307 = !DILocation(line: 8418, column: 7, scope: !3300)
!3308 = !DILocation(line: 8419, column: 7, scope: !3300)
!3309 = !DILocation(line: 8420, column: 20, scope: !3300)
!3310 = !DILocation(line: 8421, column: 5, scope: !3300)
!3311 = !DILocation(line: 8423, column: 7, scope: !3312)
!3312 = distinct !DILexicalBlock(scope: !3246, file: !3, line: 8423, column: 7)
!3313 = !DILocation(line: 8423, column: 7, scope: !3246)
!3314 = !DILocation(line: 8424, column: 5, scope: !3312)
!3315 = !DILocation(line: 8425, column: 11, scope: !3246)
!3316 = !DILocation(line: 8426, column: 17, scope: !3246)
!3317 = !DILocation(line: 8427, column: 1, scope: !3246)
!3318 = distinct !DISubprogram(name: "vt_find_locations", scope: !3, file: !3, line: 5931, type: !2624, scopeLine: 5932, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!3319 = !DILocalVariable(name: "worklist", scope: !3318, file: !3, line: 5933, type: !3320)
!3320 = !DIDerivedType(tag: DW_TAG_typedef, name: "fibheap_t", file: !3321, line: 57, baseType: !3322)
!3321 = !DIFile(filename: "./include/fibheap.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!3322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3323, size: 64)
!3323 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fibheap", file: !3321, line: 52, size: 192, elements: !3324)
!3324 = !{!3325, !3326, !3339}
!3325 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !3323, file: !3321, line: 54, baseType: !1507, size: 64)
!3326 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !3323, file: !3321, line: 55, baseType: !3327, size: 64, offset: 64)
!3327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3328, size: 64)
!3328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fibnode", file: !3321, line: 59, size: 448, elements: !3329)
!3329 = !{!3330, !3331, !3332, !3333, !3334, !3336, !3337, !3338}
!3330 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !3328, file: !3321, line: 61, baseType: !3327, size: 64)
!3331 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !3328, file: !3321, line: 62, baseType: !3327, size: 64, offset: 64)
!3332 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !3328, file: !3321, line: 63, baseType: !3327, size: 64, offset: 128)
!3333 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !3328, file: !3321, line: 64, baseType: !3327, size: 64, offset: 192)
!3334 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3328, file: !3321, line: 65, baseType: !3335, size: 64, offset: 256)
!3335 = !DIDerivedType(tag: DW_TAG_typedef, name: "fibheapkey_t", file: !3321, line: 50, baseType: !1067)
!3336 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3328, file: !3321, line: 66, baseType: !1313, size: 64, offset: 320)
!3337 = !DIDerivedType(tag: DW_TAG_member, name: "degree", scope: !3328, file: !3321, line: 71, baseType: !7, size: 31, offset: 384, flags: DIFlagBitField, extraData: i64 384)
!3338 = !DIDerivedType(tag: DW_TAG_member, name: "mark", scope: !3328, file: !3321, line: 72, baseType: !7, size: 1, offset: 415, flags: DIFlagBitField, extraData: i64 384)
!3339 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !3323, file: !3321, line: 56, baseType: !3327, size: 64, offset: 128)
!3340 = !DILocation(line: 5933, column: 13, scope: !3318)
!3341 = !DILocalVariable(name: "pending", scope: !3318, file: !3, line: 5933, type: !3320)
!3342 = !DILocation(line: 5933, column: 23, scope: !3318)
!3343 = !DILocalVariable(name: "fibheap_swap", scope: !3318, file: !3, line: 5933, type: !3320)
!3344 = !DILocation(line: 5933, column: 32, scope: !3318)
!3345 = !DILocalVariable(name: "visited", scope: !3318, file: !3, line: 5934, type: !3346)
!3346 = !DIDerivedType(tag: DW_TAG_typedef, name: "sbitmap", file: !3347, line: 45, baseType: !3348)
!3347 = !DIFile(filename: "./sbitmap.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!3348 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3349, size: 64)
!3349 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "simple_bitmap_def", file: !3347, line: 39, size: 192, elements: !3350)
!3350 = !{!3351, !3353, !3354, !3355}
!3351 = !DIDerivedType(tag: DW_TAG_member, name: "popcount", scope: !3349, file: !3347, line: 41, baseType: !3352, size: 64)
!3352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1130, size: 64)
!3353 = !DIDerivedType(tag: DW_TAG_member, name: "n_bits", scope: !3349, file: !3347, line: 42, baseType: !7, size: 32, offset: 64)
!3354 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3349, file: !3347, line: 43, baseType: !7, size: 32, offset: 96)
!3355 = !DIDerivedType(tag: DW_TAG_member, name: "elms", scope: !3349, file: !3347, line: 44, baseType: !3356, size: 64, offset: 128)
!3356 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1065, size: 64, elements: !1111)
!3357 = !DILocation(line: 5934, column: 11, scope: !3318)
!3358 = !DILocalVariable(name: "in_worklist", scope: !3318, file: !3, line: 5934, type: !3346)
!3359 = !DILocation(line: 5934, column: 20, scope: !3318)
!3360 = !DILocalVariable(name: "in_pending", scope: !3318, file: !3, line: 5934, type: !3346)
!3361 = !DILocation(line: 5934, column: 33, scope: !3318)
!3362 = !DILocalVariable(name: "sbitmap_swap", scope: !3318, file: !3, line: 5934, type: !3346)
!3363 = !DILocation(line: 5934, column: 45, scope: !3318)
!3364 = !DILocalVariable(name: "bb", scope: !3318, file: !3, line: 5935, type: !1795)
!3365 = !DILocation(line: 5935, column: 15, scope: !3318)
!3366 = !DILocalVariable(name: "e", scope: !3318, file: !3, line: 5936, type: !1340)
!3367 = !DILocation(line: 5936, column: 8, scope: !3318)
!3368 = !DILocalVariable(name: "bb_order", scope: !3318, file: !3, line: 5937, type: !2496)
!3369 = !DILocation(line: 5937, column: 8, scope: !3318)
!3370 = !DILocalVariable(name: "rc_order", scope: !3318, file: !3, line: 5938, type: !2496)
!3371 = !DILocation(line: 5938, column: 8, scope: !3318)
!3372 = !DILocalVariable(name: "i", scope: !3318, file: !3, line: 5939, type: !1010)
!3373 = !DILocation(line: 5939, column: 7, scope: !3318)
!3374 = !DILocalVariable(name: "htabsz", scope: !3318, file: !3, line: 5940, type: !1010)
!3375 = !DILocation(line: 5940, column: 7, scope: !3318)
!3376 = !DILocalVariable(name: "htabmax", scope: !3318, file: !3, line: 5941, type: !1010)
!3377 = !DILocation(line: 5941, column: 7, scope: !3318)
!3378 = !DILocation(line: 5941, column: 17, scope: !3318)
!3379 = !DILocalVariable(name: "success", scope: !3318, file: !3, line: 5942, type: !1130)
!3380 = !DILocation(line: 5942, column: 8, scope: !3318)
!3381 = !DILocation(line: 5946, column: 14, scope: !3318)
!3382 = !DILocation(line: 5946, column: 12, scope: !3318)
!3383 = !DILocation(line: 5947, column: 14, scope: !3318)
!3384 = !DILocation(line: 5947, column: 12, scope: !3318)
!3385 = !DILocation(line: 5948, column: 41, scope: !3318)
!3386 = !DILocation(line: 5948, column: 3, scope: !3318)
!3387 = !DILocation(line: 5949, column: 10, scope: !3388)
!3388 = distinct !DILexicalBlock(scope: !3318, file: !3, line: 5949, column: 3)
!3389 = !DILocation(line: 5949, column: 8, scope: !3388)
!3390 = !DILocation(line: 5949, column: 15, scope: !3391)
!3391 = distinct !DILexicalBlock(scope: !3388, file: !3, line: 5949, column: 3)
!3392 = !DILocation(line: 5949, column: 19, scope: !3391)
!3393 = !DILocation(line: 5949, column: 34, scope: !3391)
!3394 = !DILocation(line: 5949, column: 17, scope: !3391)
!3395 = !DILocation(line: 5949, column: 3, scope: !3388)
!3396 = !DILocation(line: 5950, column: 29, scope: !3391)
!3397 = !DILocation(line: 5950, column: 5, scope: !3391)
!3398 = !DILocation(line: 5950, column: 14, scope: !3391)
!3399 = !DILocation(line: 5950, column: 23, scope: !3391)
!3400 = !DILocation(line: 5950, column: 27, scope: !3391)
!3401 = !DILocation(line: 5949, column: 55, scope: !3391)
!3402 = !DILocation(line: 5949, column: 3, scope: !3391)
!3403 = distinct !{!3403, !3395, !3404}
!3404 = !DILocation(line: 5950, column: 29, scope: !3388)
!3405 = !DILocation(line: 5951, column: 9, scope: !3318)
!3406 = !DILocation(line: 5951, column: 3, scope: !3318)
!3407 = !DILocation(line: 5953, column: 14, scope: !3318)
!3408 = !DILocation(line: 5953, column: 12, scope: !3318)
!3409 = !DILocation(line: 5954, column: 13, scope: !3318)
!3410 = !DILocation(line: 5954, column: 11, scope: !3318)
!3411 = !DILocation(line: 5955, column: 28, scope: !3318)
!3412 = !DILocation(line: 5955, column: 13, scope: !3318)
!3413 = !DILocation(line: 5955, column: 11, scope: !3318)
!3414 = !DILocation(line: 5956, column: 32, scope: !3318)
!3415 = !DILocation(line: 5956, column: 17, scope: !3318)
!3416 = !DILocation(line: 5956, column: 15, scope: !3318)
!3417 = !DILocation(line: 5957, column: 31, scope: !3318)
!3418 = !DILocation(line: 5957, column: 16, scope: !3318)
!3419 = !DILocation(line: 5957, column: 14, scope: !3318)
!3420 = !DILocation(line: 5958, column: 17, scope: !3318)
!3421 = !DILocation(line: 5958, column: 3, scope: !3318)
!3422 = !DILocation(line: 5960, column: 3, scope: !3423)
!3423 = distinct !DILexicalBlock(scope: !3318, file: !3, line: 5960, column: 3)
!3424 = !DILocation(line: 5960, column: 3, scope: !3425)
!3425 = distinct !DILexicalBlock(scope: !3423, file: !3, line: 5960, column: 3)
!3426 = !DILocation(line: 5961, column: 21, scope: !3425)
!3427 = !DILocation(line: 5961, column: 30, scope: !3425)
!3428 = !DILocation(line: 5961, column: 39, scope: !3425)
!3429 = !DILocation(line: 5961, column: 43, scope: !3425)
!3430 = !DILocation(line: 5961, column: 51, scope: !3425)
!3431 = !DILocation(line: 5961, column: 5, scope: !3425)
!3432 = distinct !{!3432, !3422, !3433}
!3433 = !DILocation(line: 5961, column: 53, scope: !3423)
!3434 = !DILocation(line: 5962, column: 17, scope: !3318)
!3435 = !DILocation(line: 5962, column: 3, scope: !3318)
!3436 = !DILocation(line: 5964, column: 3, scope: !3318)
!3437 = !DILocation(line: 5964, column: 10, scope: !3318)
!3438 = !DILocation(line: 5964, column: 18, scope: !3318)
!3439 = !DILocation(line: 5964, column: 37, scope: !3318)
!3440 = !DILocation(line: 5964, column: 22, scope: !3318)
!3441 = !DILocation(line: 5964, column: 21, scope: !3318)
!3442 = !DILocation(line: 0, scope: !3318)
!3443 = !DILocation(line: 5966, column: 22, scope: !3444)
!3444 = distinct !DILexicalBlock(scope: !3318, file: !3, line: 5965, column: 5)
!3445 = !DILocation(line: 5966, column: 20, scope: !3444)
!3446 = !DILocation(line: 5967, column: 17, scope: !3444)
!3447 = !DILocation(line: 5967, column: 15, scope: !3444)
!3448 = !DILocation(line: 5968, column: 18, scope: !3444)
!3449 = !DILocation(line: 5968, column: 16, scope: !3444)
!3450 = !DILocation(line: 5969, column: 22, scope: !3444)
!3451 = !DILocation(line: 5969, column: 20, scope: !3444)
!3452 = !DILocation(line: 5970, column: 20, scope: !3444)
!3453 = !DILocation(line: 5970, column: 18, scope: !3444)
!3454 = !DILocation(line: 5971, column: 21, scope: !3444)
!3455 = !DILocation(line: 5971, column: 19, scope: !3444)
!3456 = !DILocation(line: 5973, column: 21, scope: !3444)
!3457 = !DILocation(line: 5973, column: 7, scope: !3444)
!3458 = !DILocation(line: 5975, column: 7, scope: !3444)
!3459 = !DILocation(line: 5975, column: 30, scope: !3444)
!3460 = !DILocation(line: 5975, column: 15, scope: !3444)
!3461 = !DILocation(line: 5975, column: 14, scope: !3444)
!3462 = !DILocation(line: 5977, column: 44, scope: !3463)
!3463 = distinct !DILexicalBlock(scope: !3444, file: !3, line: 5976, column: 2)
!3464 = !DILocation(line: 5977, column: 23, scope: !3463)
!3465 = !DILocation(line: 5977, column: 9, scope: !3463)
!3466 = !DILocation(line: 5977, column: 7, scope: !3463)
!3467 = !DILocation(line: 5978, column: 15, scope: !3463)
!3468 = !DILocation(line: 5978, column: 28, scope: !3463)
!3469 = !DILocation(line: 5978, column: 32, scope: !3463)
!3470 = !DILocation(line: 5978, column: 4, scope: !3463)
!3471 = !DILocation(line: 5979, column: 9, scope: !3472)
!3472 = distinct !DILexicalBlock(scope: !3463, file: !3, line: 5979, column: 8)
!3473 = !DILocation(line: 5979, column: 8, scope: !3463)
!3474 = !DILocalVariable(name: "changed", scope: !3475, file: !3, line: 5981, type: !1130)
!3475 = distinct !DILexicalBlock(scope: !3472, file: !3, line: 5980, column: 6)
!3476 = !DILocation(line: 5981, column: 13, scope: !3475)
!3477 = !DILocalVariable(name: "ei", scope: !3475, file: !3, line: 5982, type: !2464)
!3478 = !DILocation(line: 5982, column: 22, scope: !3475)
!3479 = !DILocalVariable(name: "oldinsz", scope: !3475, file: !3, line: 5983, type: !1010)
!3480 = !DILocation(line: 5983, column: 12, scope: !3475)
!3481 = !DILocalVariable(name: "oldoutsz", scope: !3475, file: !3, line: 5983, type: !1010)
!3482 = !DILocation(line: 5983, column: 21, scope: !3475)
!3483 = !DILocation(line: 5985, column: 17, scope: !3475)
!3484 = !DILocation(line: 5985, column: 26, scope: !3475)
!3485 = !DILocation(line: 5985, column: 30, scope: !3475)
!3486 = !DILocation(line: 5985, column: 8, scope: !3475)
!3487 = !DILocation(line: 5987, column: 12, scope: !3488)
!3488 = distinct !DILexicalBlock(scope: !3475, file: !3, line: 5987, column: 12)
!3489 = !DILocation(line: 5987, column: 22, scope: !3488)
!3490 = !DILocation(line: 5987, column: 25, scope: !3488)
!3491 = !DILocation(line: 5987, column: 12, scope: !3475)
!3492 = !DILocation(line: 5990, column: 40, scope: !3493)
!3493 = distinct !DILexicalBlock(scope: !3488, file: !3, line: 5988, column: 3)
!3494 = !DILocation(line: 5990, column: 50, scope: !3493)
!3495 = !DILocation(line: 5990, column: 53, scope: !3493)
!3496 = !DILocation(line: 5990, column: 22, scope: !3493)
!3497 = !DILocation(line: 5990, column: 11, scope: !3493)
!3498 = !DILocation(line: 5991, column: 35, scope: !3493)
!3499 = !DILocation(line: 5991, column: 45, scope: !3493)
!3500 = !DILocation(line: 5991, column: 49, scope: !3493)
!3501 = !DILocation(line: 5991, column: 17, scope: !3493)
!3502 = !DILocation(line: 5991, column: 6, scope: !3493)
!3503 = !DILocation(line: 5991, column: 4, scope: !3493)
!3504 = !DILocation(line: 5990, column: 7, scope: !3493)
!3505 = !DILocation(line: 5993, column: 42, scope: !3493)
!3506 = !DILocation(line: 5993, column: 52, scope: !3493)
!3507 = !DILocation(line: 5993, column: 55, scope: !3493)
!3508 = !DILocation(line: 5993, column: 24, scope: !3493)
!3509 = !DILocation(line: 5993, column: 9, scope: !3493)
!3510 = !DILocation(line: 5993, column: 7, scope: !3493)
!3511 = !DILocation(line: 5995, column: 42, scope: !3493)
!3512 = !DILocation(line: 5995, column: 52, scope: !3493)
!3513 = !DILocation(line: 5995, column: 56, scope: !3493)
!3514 = !DILocation(line: 5995, column: 24, scope: !3493)
!3515 = !DILocation(line: 5995, column: 9, scope: !3493)
!3516 = !DILocation(line: 5995, column: 7, scope: !3493)
!3517 = !DILocation(line: 5996, column: 3, scope: !3493)
!3518 = !DILocation(line: 5998, column: 22, scope: !3488)
!3519 = !DILocation(line: 5998, column: 11, scope: !3488)
!3520 = !DILocation(line: 6000, column: 12, scope: !3521)
!3521 = distinct !DILexicalBlock(scope: !3475, file: !3, line: 6000, column: 12)
!3522 = !DILocation(line: 6000, column: 12, scope: !3475)
!3523 = !DILocalVariable(name: "in", scope: !3524, file: !3, line: 6002, type: !2418)
!3524 = distinct !DILexicalBlock(scope: !3521, file: !3, line: 6001, column: 3)
!3525 = !DILocation(line: 6002, column: 19, scope: !3524)
!3526 = !DILocation(line: 6002, column: 25, scope: !3524)
!3527 = !DILocation(line: 6002, column: 35, scope: !3524)
!3528 = !DILocalVariable(name: "first_out", scope: !3524, file: !3, line: 6002, type: !2418)
!3529 = !DILocation(line: 6002, column: 40, scope: !3524)
!3530 = !DILocalVariable(name: "first", scope: !3524, file: !3, line: 6003, type: !1130)
!3531 = !DILocation(line: 6003, column: 10, scope: !3524)
!3532 = !DILocalVariable(name: "adjust", scope: !3524, file: !3, line: 6003, type: !1130)
!3533 = !DILocation(line: 6003, column: 24, scope: !3524)
!3534 = !DILocation(line: 6008, column: 25, scope: !3524)
!3535 = !DILocation(line: 6008, column: 5, scope: !3524)
!3536 = !DILocation(line: 6009, column: 23, scope: !3524)
!3537 = !DILocation(line: 6011, column: 5, scope: !3538)
!3538 = distinct !DILexicalBlock(scope: !3524, file: !3, line: 6011, column: 5)
!3539 = !DILocation(line: 6011, column: 5, scope: !3540)
!3540 = distinct !DILexicalBlock(scope: !3538, file: !3, line: 6011, column: 5)
!3541 = !DILocation(line: 6012, column: 12, scope: !3542)
!3542 = distinct !DILexicalBlock(scope: !3540, file: !3, line: 6012, column: 11)
!3543 = !DILocation(line: 6012, column: 26, scope: !3542)
!3544 = !DILocation(line: 6012, column: 11, scope: !3540)
!3545 = !DILocation(line: 6013, column: 9, scope: !3542)
!3546 = !DILocation(line: 6015, column: 16, scope: !3547)
!3547 = distinct !DILexicalBlock(scope: !3542, file: !3, line: 6015, column: 16)
!3548 = !DILocation(line: 6015, column: 16, scope: !3542)
!3549 = !DILocation(line: 6017, column: 23, scope: !3550)
!3550 = distinct !DILexicalBlock(scope: !3547, file: !3, line: 6016, column: 9)
!3551 = !DILocation(line: 6017, column: 28, scope: !3550)
!3552 = !DILocation(line: 6017, column: 42, scope: !3550)
!3553 = !DILocation(line: 6017, column: 4, scope: !3550)
!3554 = !DILocation(line: 6018, column: 17, scope: !3550)
!3555 = !DILocation(line: 6018, column: 31, scope: !3550)
!3556 = !DILocation(line: 6018, column: 14, scope: !3550)
!3557 = !DILocation(line: 6019, column: 10, scope: !3550)
!3558 = !DILocation(line: 6020, column: 9, scope: !3550)
!3559 = !DILocation(line: 6023, column: 24, scope: !3560)
!3560 = distinct !DILexicalBlock(scope: !3547, file: !3, line: 6022, column: 9)
!3561 = !DILocation(line: 6023, column: 29, scope: !3560)
!3562 = !DILocation(line: 6023, column: 43, scope: !3560)
!3563 = !DILocation(line: 6023, column: 4, scope: !3560)
!3564 = !DILocation(line: 6024, column: 11, scope: !3560)
!3565 = distinct !{!3565, !3537, !3566}
!3566 = !DILocation(line: 6025, column: 9, scope: !3538)
!3567 = !DILocation(line: 6027, column: 9, scope: !3568)
!3568 = distinct !DILexicalBlock(scope: !3524, file: !3, line: 6027, column: 9)
!3569 = !DILocation(line: 6027, column: 9, scope: !3524)
!3570 = !DILocation(line: 6029, column: 37, scope: !3571)
!3571 = distinct !DILexicalBlock(scope: !3568, file: !3, line: 6028, column: 7)
!3572 = !DILocation(line: 6029, column: 42, scope: !3571)
!3573 = !DILocation(line: 6029, column: 52, scope: !3571)
!3574 = !DILocation(line: 6029, column: 9, scope: !3571)
!3575 = !DILocation(line: 6037, column: 13, scope: !3576)
!3576 = distinct !DILexicalBlock(scope: !3571, file: !3, line: 6037, column: 13)
!3577 = !DILocation(line: 6037, column: 13, scope: !3571)
!3578 = !DILocation(line: 6039, column: 27, scope: !3579)
!3579 = distinct !DILexicalBlock(scope: !3576, file: !3, line: 6038, column: 4)
!3580 = !DILocation(line: 6039, column: 31, scope: !3579)
!3581 = !DILocation(line: 6039, column: 6, scope: !3579)
!3582 = !DILocation(line: 6040, column: 35, scope: !3579)
!3583 = !DILocation(line: 6040, column: 46, scope: !3579)
!3584 = !DILocation(line: 6040, column: 17, scope: !3579)
!3585 = !DILocation(line: 6040, column: 6, scope: !3579)
!3586 = !DILocation(line: 6040, column: 10, scope: !3579)
!3587 = !DILocation(line: 6040, column: 15, scope: !3579)
!3588 = !DILocation(line: 6041, column: 4, scope: !3579)
!3589 = !DILocation(line: 6042, column: 7, scope: !3571)
!3590 = !DILocation(line: 6044, column: 5, scope: !3524)
!3591 = !DILocation(line: 6044, column: 15, scope: !3524)
!3592 = !DILocation(line: 6044, column: 23, scope: !3524)
!3593 = !DILocation(line: 6045, column: 3, scope: !3524)
!3594 = !DILocation(line: 6049, column: 26, scope: !3595)
!3595 = distinct !DILexicalBlock(scope: !3521, file: !3, line: 6047, column: 3)
!3596 = !DILocation(line: 6049, column: 36, scope: !3595)
!3597 = !DILocation(line: 6049, column: 5, scope: !3595)
!3598 = !DILocation(line: 6050, column: 5, scope: !3599)
!3599 = distinct !DILexicalBlock(scope: !3595, file: !3, line: 6050, column: 5)
!3600 = !DILocation(line: 6050, column: 5, scope: !3601)
!3601 = distinct !DILexicalBlock(scope: !3599, file: !3, line: 6050, column: 5)
!3602 = !DILocation(line: 6051, column: 28, scope: !3601)
!3603 = !DILocation(line: 6051, column: 38, scope: !3601)
!3604 = !DILocation(line: 6051, column: 43, scope: !3601)
!3605 = !DILocation(line: 6051, column: 57, scope: !3601)
!3606 = !DILocation(line: 6051, column: 7, scope: !3601)
!3607 = distinct !{!3607, !3598, !3608}
!3608 = !DILocation(line: 6051, column: 60, scope: !3599)
!3609 = !DILocation(line: 6054, column: 39, scope: !3475)
!3610 = !DILocation(line: 6054, column: 18, scope: !3475)
!3611 = !DILocation(line: 6054, column: 16, scope: !3475)
!3612 = !DILocation(line: 6055, column: 48, scope: !3475)
!3613 = !DILocation(line: 6055, column: 58, scope: !3475)
!3614 = !DILocation(line: 6055, column: 61, scope: !3475)
!3615 = !DILocation(line: 6055, column: 30, scope: !3475)
!3616 = !DILocation(line: 6055, column: 19, scope: !3475)
!3617 = !DILocation(line: 6056, column: 36, scope: !3475)
!3618 = !DILocation(line: 6056, column: 46, scope: !3475)
!3619 = !DILocation(line: 6056, column: 50, scope: !3475)
!3620 = !DILocation(line: 6056, column: 18, scope: !3475)
!3621 = !DILocation(line: 6056, column: 7, scope: !3475)
!3622 = !DILocation(line: 6056, column: 5, scope: !3475)
!3623 = !DILocation(line: 6055, column: 15, scope: !3475)
!3624 = !DILocation(line: 6058, column: 12, scope: !3625)
!3625 = distinct !DILexicalBlock(scope: !3475, file: !3, line: 6058, column: 12)
!3626 = !DILocation(line: 6058, column: 20, scope: !3625)
!3627 = !DILocation(line: 6058, column: 23, scope: !3625)
!3628 = !DILocation(line: 6058, column: 32, scope: !3625)
!3629 = !DILocation(line: 6058, column: 30, scope: !3625)
!3630 = !DILocation(line: 6058, column: 12, scope: !3475)
!3631 = !DILocation(line: 6060, column: 9, scope: !3632)
!3632 = distinct !DILexicalBlock(scope: !3633, file: !3, line: 6060, column: 9)
!3633 = distinct !DILexicalBlock(scope: !3625, file: !3, line: 6059, column: 3)
!3634 = !DILocation(line: 6060, column: 9, scope: !3633)
!3635 = !DILocation(line: 6061, column: 15, scope: !3632)
!3636 = !DILocation(line: 6061, column: 7, scope: !3632)
!3637 = !DILocation(line: 6065, column: 15, scope: !3632)
!3638 = !DILocation(line: 6065, column: 7, scope: !3632)
!3639 = !DILocation(line: 6067, column: 13, scope: !3633)
!3640 = !DILocation(line: 6068, column: 5, scope: !3633)
!3641 = !DILocation(line: 6071, column: 12, scope: !3642)
!3642 = distinct !DILexicalBlock(scope: !3475, file: !3, line: 6071, column: 12)
!3643 = !DILocation(line: 6071, column: 12, scope: !3475)
!3644 = !DILocation(line: 6073, column: 5, scope: !3645)
!3645 = distinct !DILexicalBlock(scope: !3646, file: !3, line: 6073, column: 5)
!3646 = distinct !DILexicalBlock(scope: !3642, file: !3, line: 6072, column: 3)
!3647 = !DILocation(line: 6073, column: 5, scope: !3648)
!3648 = distinct !DILexicalBlock(scope: !3645, file: !3, line: 6073, column: 5)
!3649 = !DILocation(line: 6075, column: 13, scope: !3650)
!3650 = distinct !DILexicalBlock(scope: !3651, file: !3, line: 6075, column: 13)
!3651 = distinct !DILexicalBlock(scope: !3648, file: !3, line: 6074, column: 7)
!3652 = !DILocation(line: 6075, column: 16, scope: !3650)
!3653 = !DILocation(line: 6075, column: 24, scope: !3650)
!3654 = !DILocation(line: 6075, column: 21, scope: !3650)
!3655 = !DILocation(line: 6075, column: 13, scope: !3651)
!3656 = !DILocation(line: 6076, column: 4, scope: !3650)
!3657 = !DILocation(line: 6078, column: 13, scope: !3658)
!3658 = distinct !DILexicalBlock(scope: !3651, file: !3, line: 6078, column: 13)
!3659 = !DILocation(line: 6078, column: 13, scope: !3651)
!3660 = !DILocation(line: 6080, column: 11, scope: !3661)
!3661 = distinct !DILexicalBlock(scope: !3662, file: !3, line: 6080, column: 10)
!3662 = distinct !DILexicalBlock(scope: !3658, file: !3, line: 6079, column: 4)
!3663 = !DILocation(line: 6080, column: 10, scope: !3662)
!3664 = !DILocation(line: 6083, column: 19, scope: !3665)
!3665 = distinct !DILexicalBlock(scope: !3661, file: !3, line: 6081, column: 8)
!3666 = !DILocation(line: 6083, column: 31, scope: !3665)
!3667 = !DILocation(line: 6083, column: 34, scope: !3665)
!3668 = !DILocation(line: 6083, column: 40, scope: !3665)
!3669 = !DILocation(line: 6083, column: 10, scope: !3665)
!3670 = !DILocation(line: 6084, column: 26, scope: !3665)
!3671 = !DILocation(line: 6085, column: 12, scope: !3665)
!3672 = !DILocation(line: 6085, column: 21, scope: !3665)
!3673 = !DILocation(line: 6085, column: 24, scope: !3665)
!3674 = !DILocation(line: 6085, column: 30, scope: !3665)
!3675 = !DILocation(line: 6086, column: 12, scope: !3665)
!3676 = !DILocation(line: 6086, column: 15, scope: !3665)
!3677 = !DILocation(line: 6084, column: 10, scope: !3665)
!3678 = !DILocation(line: 6087, column: 8, scope: !3665)
!3679 = !DILocation(line: 6088, column: 4, scope: !3662)
!3680 = !DILocation(line: 6089, column: 19, scope: !3681)
!3681 = distinct !DILexicalBlock(scope: !3658, file: !3, line: 6089, column: 18)
!3682 = !DILocation(line: 6089, column: 18, scope: !3658)
!3683 = !DILocation(line: 6092, column: 15, scope: !3684)
!3684 = distinct !DILexicalBlock(scope: !3681, file: !3, line: 6090, column: 4)
!3685 = !DILocation(line: 6092, column: 28, scope: !3684)
!3686 = !DILocation(line: 6092, column: 31, scope: !3684)
!3687 = !DILocation(line: 6092, column: 37, scope: !3684)
!3688 = !DILocation(line: 6092, column: 6, scope: !3684)
!3689 = !DILocation(line: 6093, column: 22, scope: !3684)
!3690 = !DILocation(line: 6093, column: 32, scope: !3684)
!3691 = !DILocation(line: 6093, column: 41, scope: !3684)
!3692 = !DILocation(line: 6093, column: 44, scope: !3684)
!3693 = !DILocation(line: 6093, column: 50, scope: !3684)
!3694 = !DILocation(line: 6094, column: 8, scope: !3684)
!3695 = !DILocation(line: 6094, column: 11, scope: !3684)
!3696 = !DILocation(line: 6093, column: 6, scope: !3684)
!3697 = !DILocation(line: 6095, column: 4, scope: !3684)
!3698 = !DILocation(line: 6096, column: 7, scope: !3651)
!3699 = distinct !{!3699, !3644, !3700}
!3700 = !DILocation(line: 6096, column: 7, scope: !3645)
!3701 = !DILocation(line: 6097, column: 3, scope: !3646)
!3702 = !DILocation(line: 6099, column: 12, scope: !3703)
!3703 = distinct !DILexicalBlock(scope: !3475, file: !3, line: 6099, column: 12)
!3704 = !DILocation(line: 6099, column: 12, scope: !3475)
!3705 = !DILocation(line: 6100, column: 12, scope: !3703)
!3706 = !DILocation(line: 6102, column: 5, scope: !3703)
!3707 = !DILocation(line: 6102, column: 9, scope: !3703)
!3708 = !DILocation(line: 6103, column: 43, scope: !3703)
!3709 = !DILocation(line: 6103, column: 53, scope: !3703)
!3710 = !DILocation(line: 6103, column: 56, scope: !3703)
!3711 = !DILocation(line: 6103, column: 25, scope: !3703)
!3712 = !DILocation(line: 6103, column: 10, scope: !3703)
!3713 = !DILocation(line: 6103, column: 5, scope: !3703)
!3714 = !DILocation(line: 6104, column: 5, scope: !3703)
!3715 = !DILocation(line: 6105, column: 43, scope: !3703)
!3716 = !DILocation(line: 6105, column: 53, scope: !3703)
!3717 = !DILocation(line: 6105, column: 57, scope: !3703)
!3718 = !DILocation(line: 6105, column: 25, scope: !3703)
!3719 = !DILocation(line: 6105, column: 10, scope: !3703)
!3720 = !DILocation(line: 6105, column: 5, scope: !3703)
!3721 = !DILocation(line: 6106, column: 5, scope: !3703)
!3722 = !DILocation(line: 6107, column: 10, scope: !3703)
!3723 = !DILocation(line: 6107, column: 20, scope: !3703)
!3724 = !DILocation(line: 6107, column: 5, scope: !3703)
!3725 = !DILocation(line: 6107, column: 32, scope: !3703)
!3726 = !DILocation(line: 6107, column: 41, scope: !3703)
!3727 = !DILocation(line: 6107, column: 27, scope: !3703)
!3728 = !DILocation(line: 6107, column: 48, scope: !3703)
!3729 = !DILocation(line: 6100, column: 3, scope: !3703)
!3730 = !DILocation(line: 6109, column: 12, scope: !3731)
!3731 = distinct !DILexicalBlock(scope: !3475, file: !3, line: 6109, column: 12)
!3732 = !DILocation(line: 6109, column: 22, scope: !3731)
!3733 = !DILocation(line: 6109, column: 26, scope: !3731)
!3734 = !DILocation(line: 6109, column: 37, scope: !3731)
!3735 = !DILocation(line: 6109, column: 12, scope: !3475)
!3736 = !DILocation(line: 6111, column: 14, scope: !3737)
!3737 = distinct !DILexicalBlock(scope: !3731, file: !3, line: 6110, column: 3)
!3738 = !DILocation(line: 6111, column: 40, scope: !3737)
!3739 = !DILocation(line: 6111, column: 44, scope: !3737)
!3740 = !DILocation(line: 6111, column: 5, scope: !3737)
!3741 = !DILocation(line: 6112, column: 25, scope: !3737)
!3742 = !DILocation(line: 6112, column: 35, scope: !3737)
!3743 = !DILocation(line: 6112, column: 5, scope: !3737)
!3744 = !DILocation(line: 6113, column: 14, scope: !3737)
!3745 = !DILocation(line: 6113, column: 41, scope: !3737)
!3746 = !DILocation(line: 6113, column: 45, scope: !3737)
!3747 = !DILocation(line: 6113, column: 5, scope: !3737)
!3748 = !DILocation(line: 6114, column: 25, scope: !3737)
!3749 = !DILocation(line: 6114, column: 35, scope: !3737)
!3750 = !DILocation(line: 6114, column: 5, scope: !3737)
!3751 = !DILocation(line: 6115, column: 3, scope: !3737)
!3752 = !DILocation(line: 6116, column: 6, scope: !3475)
!3753 = distinct !{!3753, !3458, !3754}
!3754 = !DILocation(line: 6117, column: 2, scope: !3444)
!3755 = distinct !{!3755, !3436, !3756}
!3756 = !DILocation(line: 6118, column: 5, scope: !3318)
!3757 = !DILocation(line: 6120, column: 7, scope: !3758)
!3758 = distinct !DILexicalBlock(scope: !3318, file: !3, line: 6120, column: 7)
!3759 = !DILocation(line: 6120, column: 15, scope: !3758)
!3760 = !DILocation(line: 6120, column: 18, scope: !3758)
!3761 = !DILocation(line: 6120, column: 7, scope: !3318)
!3762 = !DILocation(line: 6121, column: 5, scope: !3763)
!3763 = distinct !DILexicalBlock(scope: !3758, file: !3, line: 6121, column: 5)
!3764 = !DILocation(line: 6121, column: 5, scope: !3765)
!3765 = distinct !DILexicalBlock(scope: !3763, file: !3, line: 6121, column: 5)
!3766 = !DILocation(line: 6122, column: 7, scope: !3765)
!3767 = distinct !{!3767, !3762, !3768}
!3768 = !DILocation(line: 6122, column: 7, scope: !3763)
!3769 = !DILocation(line: 6124, column: 9, scope: !3318)
!3770 = !DILocation(line: 6124, column: 3, scope: !3318)
!3771 = !DILocation(line: 6125, column: 19, scope: !3318)
!3772 = !DILocation(line: 6125, column: 3, scope: !3318)
!3773 = !DILocation(line: 6126, column: 19, scope: !3318)
!3774 = !DILocation(line: 6126, column: 3, scope: !3318)
!3775 = !DILocation(line: 6127, column: 3, scope: !3318)
!3776 = !DILocation(line: 6128, column: 3, scope: !3318)
!3777 = !DILocation(line: 6129, column: 3, scope: !3318)
!3778 = !DILocation(line: 6131, column: 10, scope: !3318)
!3779 = !DILocation(line: 6131, column: 3, scope: !3318)
!3780 = distinct !DISubprogram(name: "dump_dataflow_sets", scope: !3, file: !3, line: 6244, type: !2788, scopeLine: 6245, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!3781 = !DILocalVariable(name: "bb", scope: !3780, file: !3, line: 6246, type: !1795)
!3782 = !DILocation(line: 6246, column: 15, scope: !3780)
!3783 = !DILocation(line: 6248, column: 3, scope: !3784)
!3784 = distinct !DILexicalBlock(scope: !3780, file: !3, line: 6248, column: 3)
!3785 = !DILocation(line: 6248, column: 3, scope: !3786)
!3786 = distinct !DILexicalBlock(scope: !3784, file: !3, line: 6248, column: 3)
!3787 = !DILocation(line: 6250, column: 16, scope: !3788)
!3788 = distinct !DILexicalBlock(scope: !3786, file: !3, line: 6249, column: 5)
!3789 = !DILocation(line: 6250, column: 50, scope: !3788)
!3790 = !DILocation(line: 6250, column: 54, scope: !3788)
!3791 = !DILocation(line: 6250, column: 7, scope: !3788)
!3792 = !DILocation(line: 6251, column: 16, scope: !3788)
!3793 = !DILocation(line: 6251, column: 7, scope: !3788)
!3794 = !DILocation(line: 6252, column: 27, scope: !3788)
!3795 = !DILocation(line: 6252, column: 37, scope: !3788)
!3796 = !DILocation(line: 6252, column: 7, scope: !3788)
!3797 = !DILocation(line: 6253, column: 16, scope: !3788)
!3798 = !DILocation(line: 6253, column: 7, scope: !3788)
!3799 = !DILocation(line: 6254, column: 27, scope: !3788)
!3800 = !DILocation(line: 6254, column: 37, scope: !3788)
!3801 = !DILocation(line: 6254, column: 7, scope: !3788)
!3802 = !DILocation(line: 6255, column: 5, scope: !3788)
!3803 = distinct !{!3803, !3783, !3804}
!3804 = !DILocation(line: 6255, column: 5, scope: !3784)
!3805 = !DILocation(line: 6256, column: 1, scope: !3780)
!3806 = distinct !DISubprogram(name: "vt_emit_notes", scope: !3, file: !3, line: 7843, type: !2788, scopeLine: 7844, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!3807 = !DILocalVariable(name: "bb", scope: !3806, file: !3, line: 7845, type: !1795)
!3808 = !DILocation(line: 7845, column: 15, scope: !3806)
!3809 = !DILocalVariable(name: "cur", scope: !3806, file: !3, line: 7846, type: !2397)
!3810 = !DILocation(line: 7846, column: 16, scope: !3806)
!3811 = !DILocation(line: 7851, column: 3, scope: !3806)
!3812 = !DILocation(line: 7855, column: 3, scope: !3813)
!3813 = distinct !DILexicalBlock(scope: !3806, file: !3, line: 7855, column: 3)
!3814 = !DILocation(line: 7855, column: 3, scope: !3815)
!3815 = distinct !DILexicalBlock(scope: !3813, file: !3, line: 7855, column: 3)
!3816 = !DILocation(line: 7856, column: 26, scope: !3815)
!3817 = !DILocation(line: 7856, column: 36, scope: !3815)
!3818 = !DILocation(line: 7856, column: 5, scope: !3815)
!3819 = distinct !{!3819, !3812, !3820}
!3820 = !DILocation(line: 7856, column: 39, scope: !3813)
!3821 = !DILocation(line: 7860, column: 14, scope: !3806)
!3822 = !DILocation(line: 7862, column: 7, scope: !3823)
!3823 = distinct !DILexicalBlock(scope: !3806, file: !3, line: 7862, column: 7)
!3824 = !DILocation(line: 7862, column: 7, scope: !3806)
!3825 = !DILocalVariable(name: "i", scope: !3826, file: !3, line: 7864, type: !7)
!3826 = distinct !DILexicalBlock(scope: !3823, file: !3, line: 7863, column: 5)
!3827 = !DILocation(line: 7864, column: 20, scope: !3826)
!3828 = !DILocalVariable(name: "val", scope: !3826, file: !3, line: 7865, type: !1188)
!3829 = !DILocation(line: 7865, column: 11, scope: !3826)
!3830 = !DILocation(line: 7867, column: 14, scope: !3831)
!3831 = distinct !DILexicalBlock(scope: !3826, file: !3, line: 7867, column: 7)
!3832 = !DILocation(line: 7867, column: 12, scope: !3831)
!3833 = !DILocation(line: 7867, column: 19, scope: !3834)
!3834 = distinct !DILexicalBlock(scope: !3831, file: !3, line: 7867, column: 7)
!3835 = !DILocation(line: 7867, column: 7, scope: !3831)
!3836 = !DILocation(line: 7868, column: 42, scope: !3834)
!3837 = !DILocation(line: 7868, column: 27, scope: !3834)
!3838 = !DILocation(line: 7868, column: 2, scope: !3834)
!3839 = !DILocation(line: 7867, column: 65, scope: !3834)
!3840 = !DILocation(line: 7867, column: 7, scope: !3834)
!3841 = distinct !{!3841, !3835, !3842}
!3842 = !DILocation(line: 7868, column: 46, scope: !3831)
!3843 = !DILocation(line: 7869, column: 33, scope: !3826)
!3844 = !DILocation(line: 7869, column: 31, scope: !3826)
!3845 = !DILocation(line: 7870, column: 30, scope: !3826)
!3846 = !DILocation(line: 7870, column: 28, scope: !3826)
!3847 = !DILocation(line: 7871, column: 5, scope: !3826)
!3848 = !DILocation(line: 7873, column: 3, scope: !3806)
!3849 = !DILocation(line: 7875, column: 3, scope: !3850)
!3850 = distinct !DILexicalBlock(scope: !3806, file: !3, line: 7875, column: 3)
!3851 = !DILocation(line: 7875, column: 3, scope: !3852)
!3852 = distinct !DILexicalBlock(scope: !3850, file: !3, line: 7875, column: 3)
!3853 = !DILocation(line: 7879, column: 35, scope: !3854)
!3854 = distinct !DILexicalBlock(scope: !3852, file: !3, line: 7876, column: 5)
!3855 = !DILocation(line: 7879, column: 56, scope: !3854)
!3856 = !DILocation(line: 7879, column: 66, scope: !3854)
!3857 = !DILocation(line: 7879, column: 7, scope: !3854)
!3858 = !DILocation(line: 7882, column: 25, scope: !3854)
!3859 = !DILocation(line: 7882, column: 7, scope: !3854)
!3860 = !DILocation(line: 7886, column: 28, scope: !3854)
!3861 = !DILocation(line: 7886, column: 38, scope: !3854)
!3862 = !DILocation(line: 7886, column: 7, scope: !3854)
!3863 = !DILocation(line: 7887, column: 5, scope: !3854)
!3864 = distinct !{!3864, !3849, !3865}
!3865 = !DILocation(line: 7887, column: 5, scope: !3850)
!3866 = !DILocation(line: 7902, column: 3, scope: !3806)
!3867 = !DILocation(line: 7904, column: 7, scope: !3868)
!3868 = distinct !DILexicalBlock(scope: !3806, file: !3, line: 7904, column: 7)
!3869 = !DILocation(line: 7904, column: 7, scope: !3806)
!3870 = !DILocation(line: 7906, column: 7, scope: !3871)
!3871 = distinct !DILexicalBlock(scope: !3868, file: !3, line: 7905, column: 5)
!3872 = !DILocation(line: 7907, column: 7, scope: !3871)
!3873 = !DILocation(line: 7908, column: 5, scope: !3871)
!3874 = !DILocation(line: 7913, column: 14, scope: !3806)
!3875 = !DILocation(line: 7914, column: 1, scope: !3806)
!3876 = distinct !DISubprogram(name: "variable_htab_hash", scope: !3, file: !3, line: 1148, type: !1834, scopeLine: 1149, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!3877 = !DILocalVariable(name: "x", arg: 1, scope: !3876, file: !3, line: 1148, type: !1668)
!3878 = !DILocation(line: 1148, column: 33, scope: !3876)
!3879 = !DILocalVariable(name: "v", scope: !3876, file: !3, line: 1150, type: !3880)
!3880 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2421)
!3881 = !DILocation(line: 1150, column: 24, scope: !3876)
!3882 = !DILocation(line: 1150, column: 45, scope: !3876)
!3883 = !DILocation(line: 1150, column: 28, scope: !3876)
!3884 = !DILocation(line: 1152, column: 24, scope: !3876)
!3885 = !DILocation(line: 1152, column: 27, scope: !3876)
!3886 = !DILocation(line: 1152, column: 10, scope: !3876)
!3887 = !DILocation(line: 1152, column: 3, scope: !3876)
!3888 = distinct !DISubprogram(name: "variable_htab_eq", scope: !3, file: !3, line: 1158, type: !1840, scopeLine: 1159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!3889 = !DILocalVariable(name: "x", arg: 1, scope: !3888, file: !3, line: 1158, type: !1668)
!3890 = !DILocation(line: 1158, column: 31, scope: !3888)
!3891 = !DILocalVariable(name: "y", arg: 2, scope: !3888, file: !3, line: 1158, type: !1668)
!3892 = !DILocation(line: 1158, column: 46, scope: !3888)
!3893 = !DILocalVariable(name: "v", scope: !3888, file: !3, line: 1160, type: !3880)
!3894 = !DILocation(line: 1160, column: 24, scope: !3888)
!3895 = !DILocation(line: 1160, column: 45, scope: !3888)
!3896 = !DILocation(line: 1160, column: 28, scope: !3888)
!3897 = !DILocalVariable(name: "dv", scope: !3888, file: !3, line: 1161, type: !2410)
!3898 = !DILocation(line: 1161, column: 17, scope: !3888)
!3899 = !DILocation(line: 1161, column: 22, scope: !3888)
!3900 = !DILocation(line: 1163, column: 25, scope: !3888)
!3901 = !DILocation(line: 1163, column: 28, scope: !3888)
!3902 = !DILocation(line: 1163, column: 11, scope: !3888)
!3903 = !DILocation(line: 1163, column: 49, scope: !3888)
!3904 = !DILocation(line: 1163, column: 35, scope: !3888)
!3905 = !DILocation(line: 1163, column: 32, scope: !3888)
!3906 = !DILocation(line: 1163, column: 3, scope: !3888)
!3907 = distinct !DISubprogram(name: "variable_htab_free", scope: !3, file: !3, line: 1169, type: !1845, scopeLine: 1170, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!3908 = !DILocalVariable(name: "elem", arg: 1, scope: !3907, file: !3, line: 1169, type: !1313)
!3909 = !DILocation(line: 1169, column: 27, scope: !3907)
!3910 = !DILocalVariable(name: "i", scope: !3907, file: !3, line: 1171, type: !1010)
!3911 = !DILocation(line: 1171, column: 7, scope: !3907)
!3912 = !DILocalVariable(name: "var", scope: !3907, file: !3, line: 1172, type: !2447)
!3913 = !DILocation(line: 1172, column: 12, scope: !3907)
!3914 = !DILocation(line: 1172, column: 29, scope: !3907)
!3915 = !DILocation(line: 1172, column: 18, scope: !3907)
!3916 = !DILocalVariable(name: "node", scope: !3907, file: !3, line: 1173, type: !2437)
!3917 = !DILocation(line: 1173, column: 18, scope: !3907)
!3918 = !DILocalVariable(name: "next", scope: !3907, file: !3, line: 1173, type: !2437)
!3919 = !DILocation(line: 1173, column: 24, scope: !3907)
!3920 = !DILocation(line: 1175, column: 3, scope: !3907)
!3921 = !DILocation(line: 1177, column: 3, scope: !3907)
!3922 = !DILocation(line: 1177, column: 8, scope: !3907)
!3923 = !DILocation(line: 1177, column: 16, scope: !3907)
!3924 = !DILocation(line: 1178, column: 7, scope: !3925)
!3925 = distinct !DILexicalBlock(scope: !3907, file: !3, line: 1178, column: 7)
!3926 = !DILocation(line: 1178, column: 12, scope: !3925)
!3927 = !DILocation(line: 1178, column: 21, scope: !3925)
!3928 = !DILocation(line: 1178, column: 7, scope: !3907)
!3929 = !DILocation(line: 1179, column: 5, scope: !3925)
!3930 = !DILocation(line: 1181, column: 10, scope: !3931)
!3931 = distinct !DILexicalBlock(scope: !3907, file: !3, line: 1181, column: 3)
!3932 = !DILocation(line: 1181, column: 8, scope: !3931)
!3933 = !DILocation(line: 1181, column: 15, scope: !3934)
!3934 = distinct !DILexicalBlock(scope: !3931, file: !3, line: 1181, column: 3)
!3935 = !DILocation(line: 1181, column: 19, scope: !3934)
!3936 = !DILocation(line: 1181, column: 24, scope: !3934)
!3937 = !DILocation(line: 1181, column: 17, scope: !3934)
!3938 = !DILocation(line: 1181, column: 3, scope: !3931)
!3939 = !DILocation(line: 1183, column: 19, scope: !3940)
!3940 = distinct !DILexicalBlock(scope: !3941, file: !3, line: 1183, column: 7)
!3941 = distinct !DILexicalBlock(scope: !3934, file: !3, line: 1182, column: 5)
!3942 = !DILocation(line: 1183, column: 24, scope: !3940)
!3943 = !DILocation(line: 1183, column: 33, scope: !3940)
!3944 = !DILocation(line: 1183, column: 36, scope: !3940)
!3945 = !DILocation(line: 1183, column: 17, scope: !3940)
!3946 = !DILocation(line: 1183, column: 12, scope: !3940)
!3947 = !DILocation(line: 1183, column: 47, scope: !3948)
!3948 = distinct !DILexicalBlock(scope: !3940, file: !3, line: 1183, column: 7)
!3949 = !DILocation(line: 1183, column: 7, scope: !3940)
!3950 = !DILocation(line: 1185, column: 11, scope: !3951)
!3951 = distinct !DILexicalBlock(scope: !3948, file: !3, line: 1184, column: 2)
!3952 = !DILocation(line: 1185, column: 17, scope: !3951)
!3953 = !DILocation(line: 1185, column: 9, scope: !3951)
!3954 = !DILocation(line: 1186, column: 15, scope: !3951)
!3955 = !DILocation(line: 1186, column: 31, scope: !3951)
!3956 = !DILocation(line: 1186, column: 4, scope: !3951)
!3957 = !DILocation(line: 1187, column: 2, scope: !3951)
!3958 = !DILocation(line: 1183, column: 60, scope: !3948)
!3959 = !DILocation(line: 1183, column: 58, scope: !3948)
!3960 = !DILocation(line: 1183, column: 7, scope: !3948)
!3961 = distinct !{!3961, !3949, !3962}
!3962 = !DILocation(line: 1187, column: 2, scope: !3940)
!3963 = !DILocation(line: 1188, column: 7, scope: !3941)
!3964 = !DILocation(line: 1188, column: 12, scope: !3941)
!3965 = !DILocation(line: 1188, column: 21, scope: !3941)
!3966 = !DILocation(line: 1188, column: 24, scope: !3941)
!3967 = !DILocation(line: 1188, column: 34, scope: !3941)
!3968 = !DILocation(line: 1189, column: 5, scope: !3941)
!3969 = !DILocation(line: 1181, column: 38, scope: !3934)
!3970 = !DILocation(line: 1181, column: 3, scope: !3934)
!3971 = distinct !{!3971, !3938, !3972}
!3972 = !DILocation(line: 1189, column: 5, scope: !3931)
!3973 = !DILocation(line: 1190, column: 23, scope: !3907)
!3974 = !DILocation(line: 1190, column: 28, scope: !3907)
!3975 = !DILocation(line: 1190, column: 14, scope: !3907)
!3976 = !DILocation(line: 1190, column: 33, scope: !3907)
!3977 = !DILocation(line: 1190, column: 3, scope: !3907)
!3978 = !DILocation(line: 1191, column: 1, scope: !3907)
!3979 = distinct !DISubprogram(name: "value_chain_htab_hash", scope: !3, file: !3, line: 1197, type: !1834, scopeLine: 1198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!3980 = !DILocalVariable(name: "x", arg: 1, scope: !3979, file: !3, line: 1197, type: !1668)
!3981 = !DILocation(line: 1197, column: 36, scope: !3979)
!3982 = !DILocalVariable(name: "v", scope: !3979, file: !3, line: 1199, type: !3983)
!3983 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2449)
!3984 = !DILocation(line: 1199, column: 27, scope: !3979)
!3985 = !DILocation(line: 1199, column: 51, scope: !3979)
!3986 = !DILocation(line: 1199, column: 31, scope: !3979)
!3987 = !DILocation(line: 1201, column: 24, scope: !3979)
!3988 = !DILocation(line: 1201, column: 27, scope: !3979)
!3989 = !DILocation(line: 1201, column: 10, scope: !3979)
!3990 = !DILocation(line: 1201, column: 3, scope: !3979)
!3991 = distinct !DISubprogram(name: "value_chain_htab_eq", scope: !3, file: !3, line: 1207, type: !1840, scopeLine: 1208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!3992 = !DILocalVariable(name: "x", arg: 1, scope: !3991, file: !3, line: 1207, type: !1668)
!3993 = !DILocation(line: 1207, column: 34, scope: !3991)
!3994 = !DILocalVariable(name: "y", arg: 2, scope: !3991, file: !3, line: 1207, type: !1668)
!3995 = !DILocation(line: 1207, column: 49, scope: !3991)
!3996 = !DILocalVariable(name: "v", scope: !3991, file: !3, line: 1209, type: !3983)
!3997 = !DILocation(line: 1209, column: 27, scope: !3991)
!3998 = !DILocation(line: 1209, column: 51, scope: !3991)
!3999 = !DILocation(line: 1209, column: 31, scope: !3991)
!4000 = !DILocalVariable(name: "dv", scope: !3991, file: !3, line: 1210, type: !2410)
!4001 = !DILocation(line: 1210, column: 17, scope: !3991)
!4002 = !DILocation(line: 1210, column: 22, scope: !3991)
!4003 = !DILocation(line: 1212, column: 24, scope: !3991)
!4004 = !DILocation(line: 1212, column: 27, scope: !3991)
!4005 = !DILocation(line: 1212, column: 10, scope: !3991)
!4006 = !DILocation(line: 1212, column: 48, scope: !3991)
!4007 = !DILocation(line: 1212, column: 34, scope: !3991)
!4008 = !DILocation(line: 1212, column: 31, scope: !3991)
!4009 = !DILocation(line: 1212, column: 3, scope: !3991)
!4010 = distinct !DISubprogram(name: "dataflow_set_init", scope: !3, file: !3, line: 1990, type: !4011, scopeLine: 1991, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!4011 = !DISubroutineType(types: !4012)
!4012 = !{null, !2418}
!4013 = !DILocalVariable(name: "set", arg: 1, scope: !4010, file: !3, line: 1990, type: !2418)
!4014 = !DILocation(line: 1990, column: 34, scope: !4010)
!4015 = !DILocation(line: 1992, column: 24, scope: !4010)
!4016 = !DILocation(line: 1992, column: 29, scope: !4010)
!4017 = !DILocation(line: 1992, column: 3, scope: !4010)
!4018 = !DILocation(line: 1993, column: 33, scope: !4010)
!4019 = !DILocation(line: 1993, column: 15, scope: !4010)
!4020 = !DILocation(line: 1993, column: 3, scope: !4010)
!4021 = !DILocation(line: 1993, column: 8, scope: !4010)
!4022 = !DILocation(line: 1993, column: 13, scope: !4010)
!4023 = !DILocation(line: 1994, column: 3, scope: !4010)
!4024 = !DILocation(line: 1994, column: 8, scope: !4010)
!4025 = !DILocation(line: 1994, column: 21, scope: !4010)
!4026 = !DILocation(line: 1995, column: 3, scope: !4010)
!4027 = !DILocation(line: 1995, column: 8, scope: !4010)
!4028 = !DILocation(line: 1995, column: 23, scope: !4010)
!4029 = !DILocation(line: 1996, column: 1, scope: !4010)
!4030 = distinct !DISubprogram(name: "VEC_rtx_heap_alloc", scope: !561, file: !561, line: 201, type: !4031, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!4031 = !DISubroutineType(types: !4032)
!4032 = !{!2458, !1010}
!4033 = !DILocalVariable(name: "alloc_", arg: 1, scope: !4030, file: !561, line: 201, type: !1010)
!4034 = !DILocation(line: 201, column: 1, scope: !4030)
!4035 = distinct !DISubprogram(name: "vt_stack_adjustments", scope: !3, file: !3, line: 625, type: !2624, scopeLine: 626, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!4036 = !DILocalVariable(name: "stack", scope: !4035, file: !3, line: 627, type: !2463)
!4037 = !DILocation(line: 627, column: 18, scope: !4035)
!4038 = !DILocalVariable(name: "sp", scope: !4035, file: !3, line: 628, type: !1010)
!4039 = !DILocation(line: 628, column: 7, scope: !4035)
!4040 = !DILocation(line: 631, column: 3, scope: !4035)
!4041 = !DILocation(line: 631, column: 26, scope: !4035)
!4042 = !DILocation(line: 631, column: 34, scope: !4035)
!4043 = !DILocation(line: 632, column: 3, scope: !4035)
!4044 = !DILocation(line: 632, column: 26, scope: !4035)
!4045 = !DILocation(line: 632, column: 29, scope: !4035)
!4046 = !DILocation(line: 632, column: 42, scope: !4035)
!4047 = !DILocation(line: 633, column: 3, scope: !4035)
!4048 = !DILocation(line: 633, column: 26, scope: !4035)
!4049 = !DILocation(line: 633, column: 30, scope: !4035)
!4050 = !DILocation(line: 633, column: 43, scope: !4035)
!4051 = !DILocation(line: 636, column: 11, scope: !4035)
!4052 = !DILocation(line: 636, column: 9, scope: !4035)
!4053 = !DILocation(line: 637, column: 6, scope: !4035)
!4054 = !DILocation(line: 640, column: 3, scope: !4035)
!4055 = !DILocation(line: 640, column: 11, scope: !4035)
!4056 = !DILocation(line: 640, column: 17, scope: !4035)
!4057 = !DILocation(line: 642, column: 3, scope: !4035)
!4058 = !DILocation(line: 642, column: 10, scope: !4035)
!4059 = !DILocalVariable(name: "ei", scope: !4060, file: !3, line: 644, type: !2464)
!4060 = distinct !DILexicalBlock(scope: !4035, file: !3, line: 643, column: 5)
!4061 = !DILocation(line: 644, column: 21, scope: !4060)
!4062 = !DILocalVariable(name: "src", scope: !4060, file: !3, line: 645, type: !1795)
!4063 = !DILocation(line: 645, column: 19, scope: !4060)
!4064 = !DILocalVariable(name: "dest", scope: !4060, file: !3, line: 646, type: !1795)
!4065 = !DILocation(line: 646, column: 19, scope: !4060)
!4066 = !DILocation(line: 649, column: 12, scope: !4060)
!4067 = !DILocation(line: 649, column: 18, scope: !4060)
!4068 = !DILocation(line: 649, column: 21, scope: !4060)
!4069 = !DILocation(line: 650, column: 13, scope: !4060)
!4070 = !DILocation(line: 650, column: 27, scope: !4060)
!4071 = !DILocation(line: 650, column: 11, scope: !4060)
!4072 = !DILocation(line: 651, column: 14, scope: !4060)
!4073 = !DILocation(line: 651, column: 28, scope: !4060)
!4074 = !DILocation(line: 651, column: 12, scope: !4060)
!4075 = !DILocation(line: 654, column: 12, scope: !4076)
!4076 = distinct !DILexicalBlock(scope: !4060, file: !3, line: 654, column: 11)
!4077 = !DILocation(line: 654, column: 24, scope: !4076)
!4078 = !DILocation(line: 654, column: 11, scope: !4060)
!4079 = !DILocalVariable(name: "insn", scope: !4080, file: !3, line: 656, type: !1188)
!4080 = distinct !DILexicalBlock(scope: !4076, file: !3, line: 655, column: 2)
!4081 = !DILocation(line: 656, column: 8, scope: !4080)
!4082 = !DILocalVariable(name: "pre", scope: !4080, file: !3, line: 657, type: !1067)
!4083 = !DILocation(line: 657, column: 18, scope: !4080)
!4084 = !DILocalVariable(name: "post", scope: !4080, file: !3, line: 657, type: !1067)
!4085 = !DILocation(line: 657, column: 23, scope: !4080)
!4086 = !DILocalVariable(name: "offset", scope: !4080, file: !3, line: 657, type: !1067)
!4087 = !DILocation(line: 657, column: 29, scope: !4080)
!4088 = !DILocation(line: 658, column: 4, scope: !4080)
!4089 = !DILocation(line: 658, column: 16, scope: !4080)
!4090 = !DILocation(line: 658, column: 24, scope: !4080)
!4091 = !DILocation(line: 659, column: 43, scope: !4080)
!4092 = !DILocation(line: 659, column: 54, scope: !4080)
!4093 = !DILocation(line: 659, column: 58, scope: !4080)
!4094 = !DILocation(line: 659, column: 41, scope: !4080)
!4095 = !DILocation(line: 659, column: 4, scope: !4080)
!4096 = !DILocation(line: 659, column: 16, scope: !4080)
!4097 = !DILocation(line: 659, column: 19, scope: !4080)
!4098 = !DILocation(line: 659, column: 32, scope: !4080)
!4099 = !DILocation(line: 661, column: 8, scope: !4100)
!4100 = distinct !DILexicalBlock(scope: !4080, file: !3, line: 661, column: 8)
!4101 = !DILocation(line: 661, column: 16, scope: !4100)
!4102 = !DILocation(line: 661, column: 13, scope: !4100)
!4103 = !DILocation(line: 661, column: 8, scope: !4080)
!4104 = !DILocation(line: 662, column: 18, scope: !4105)
!4105 = distinct !DILexicalBlock(scope: !4100, file: !3, line: 662, column: 6)
!4106 = !DILocation(line: 662, column: 16, scope: !4105)
!4107 = !DILocation(line: 662, column: 11, scope: !4105)
!4108 = !DILocation(line: 663, column: 4, scope: !4109)
!4109 = distinct !DILexicalBlock(scope: !4105, file: !3, line: 662, column: 6)
!4110 = !DILocation(line: 663, column: 12, scope: !4109)
!4111 = !DILocation(line: 663, column: 9, scope: !4109)
!4112 = !DILocation(line: 662, column: 6, scope: !4105)
!4113 = !DILocation(line: 665, column: 12, scope: !4114)
!4114 = distinct !DILexicalBlock(scope: !4109, file: !3, line: 665, column: 12)
!4115 = !DILocation(line: 665, column: 12, scope: !4109)
!4116 = !DILocation(line: 667, column: 40, scope: !4117)
!4117 = distinct !DILexicalBlock(scope: !4114, file: !3, line: 666, column: 3)
!4118 = !DILocation(line: 667, column: 5, scope: !4117)
!4119 = !DILocation(line: 668, column: 15, scope: !4117)
!4120 = !DILocation(line: 668, column: 21, scope: !4117)
!4121 = !DILocation(line: 668, column: 19, scope: !4117)
!4122 = !DILocation(line: 668, column: 12, scope: !4117)
!4123 = !DILocation(line: 669, column: 3, scope: !4117)
!4124 = !DILocation(line: 664, column: 11, scope: !4109)
!4125 = !DILocation(line: 664, column: 9, scope: !4109)
!4126 = !DILocation(line: 662, column: 6, scope: !4109)
!4127 = distinct !{!4127, !4112, !4128}
!4128 = !DILocation(line: 669, column: 3, scope: !4105)
!4129 = !DILocation(line: 671, column: 35, scope: !4080)
!4130 = !DILocation(line: 671, column: 4, scope: !4080)
!4131 = !DILocation(line: 671, column: 16, scope: !4080)
!4132 = !DILocation(line: 671, column: 20, scope: !4080)
!4133 = !DILocation(line: 671, column: 33, scope: !4080)
!4134 = !DILocation(line: 673, column: 8, scope: !4135)
!4135 = distinct !DILexicalBlock(scope: !4080, file: !3, line: 673, column: 8)
!4136 = !DILocation(line: 673, column: 33, scope: !4135)
!4137 = !DILocation(line: 673, column: 8, scope: !4080)
!4138 = !DILocation(line: 676, column: 6, scope: !4135)
!4139 = !DILocation(line: 676, column: 14, scope: !4135)
!4140 = !DILocation(line: 676, column: 20, scope: !4135)
!4141 = !DILocation(line: 677, column: 2, scope: !4080)
!4142 = !DILocation(line: 681, column: 8, scope: !4143)
!4143 = distinct !DILexicalBlock(scope: !4144, file: !3, line: 681, column: 8)
!4144 = distinct !DILexicalBlock(scope: !4076, file: !3, line: 679, column: 2)
!4145 = !DILocation(line: 681, column: 20, scope: !4143)
!4146 = !DILocation(line: 681, column: 23, scope: !4143)
!4147 = !DILocation(line: 681, column: 39, scope: !4143)
!4148 = !DILocation(line: 681, column: 50, scope: !4143)
!4149 = !DILocation(line: 681, column: 54, scope: !4143)
!4150 = !DILocation(line: 681, column: 36, scope: !4143)
!4151 = !DILocation(line: 681, column: 8, scope: !4144)
!4152 = !DILocation(line: 683, column: 14, scope: !4153)
!4153 = distinct !DILexicalBlock(scope: !4143, file: !3, line: 682, column: 6)
!4154 = !DILocation(line: 683, column: 8, scope: !4153)
!4155 = !DILocation(line: 684, column: 8, scope: !4153)
!4156 = !DILocation(line: 687, column: 10, scope: !4157)
!4157 = distinct !DILexicalBlock(scope: !4144, file: !3, line: 687, column: 8)
!4158 = !DILocation(line: 687, column: 8, scope: !4144)
!4159 = !DILocation(line: 689, column: 16, scope: !4157)
!4160 = !DILocation(line: 689, column: 22, scope: !4157)
!4161 = !DILocation(line: 689, column: 25, scope: !4157)
!4162 = !DILocation(line: 689, column: 6, scope: !4157)
!4163 = !DILocation(line: 692, column: 8, scope: !4157)
!4164 = distinct !{!4164, !4057, !4165}
!4165 = !DILocation(line: 694, column: 5, scope: !4035)
!4166 = !DILocation(line: 696, column: 9, scope: !4035)
!4167 = !DILocation(line: 696, column: 3, scope: !4035)
!4168 = !DILocation(line: 697, column: 3, scope: !4035)
!4169 = !DILocation(line: 698, column: 1, scope: !4035)
!4170 = distinct !DISubprogram(name: "vt_init_cfa_base", scope: !3, file: !3, line: 8097, type: !2788, scopeLine: 8098, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!4171 = !DILocalVariable(name: "val", scope: !4170, file: !3, line: 8099, type: !1257)
!4172 = !DILocation(line: 8099, column: 15, scope: !4170)
!4173 = !DILocation(line: 8104, column: 18, scope: !4170)
!4174 = !DILocation(line: 8104, column: 16, scope: !4170)
!4175 = !DILocation(line: 8106, column: 7, scope: !4176)
!4176 = distinct !DILexicalBlock(scope: !4170, file: !3, line: 8106, column: 7)
!4177 = !DILocation(line: 8106, column: 23, scope: !4176)
!4178 = !DILocation(line: 8106, column: 20, scope: !4176)
!4179 = !DILocation(line: 8107, column: 7, scope: !4176)
!4180 = !DILocation(line: 8107, column: 22, scope: !4176)
!4181 = !DILocation(line: 8107, column: 11, scope: !4176)
!4182 = !DILocation(line: 8106, column: 7, scope: !4170)
!4183 = !DILocation(line: 8109, column: 20, scope: !4184)
!4184 = distinct !DILexicalBlock(scope: !4176, file: !3, line: 8108, column: 5)
!4185 = !DILocation(line: 8110, column: 7, scope: !4184)
!4186 = !DILocation(line: 8112, column: 8, scope: !4187)
!4187 = distinct !DILexicalBlock(scope: !4170, file: !3, line: 8112, column: 7)
!4188 = !DILocation(line: 8112, column: 7, scope: !4170)
!4189 = !DILocation(line: 8113, column: 5, scope: !4187)
!4190 = !DILocation(line: 8115, column: 34, scope: !4170)
!4191 = !DILocation(line: 8115, column: 48, scope: !4170)
!4192 = !DILocation(line: 8116, column: 6, scope: !4170)
!4193 = !DILocation(line: 8115, column: 9, scope: !4170)
!4194 = !DILocation(line: 8115, column: 7, scope: !4170)
!4195 = !DILocation(line: 8117, column: 19, scope: !4170)
!4196 = !DILocation(line: 8117, column: 3, scope: !4170)
!4197 = !DILocation(line: 8118, column: 35, scope: !4170)
!4198 = !DILocation(line: 8118, column: 3, scope: !4170)
!4199 = !DILocation(line: 8119, column: 22, scope: !4170)
!4200 = !DILocation(line: 8119, column: 45, scope: !4170)
!4201 = !DILocation(line: 8119, column: 50, scope: !4170)
!4202 = !DILocation(line: 8120, column: 51, scope: !4170)
!4203 = !DILocation(line: 8120, column: 56, scope: !4170)
!4204 = !DILocation(line: 8120, column: 36, scope: !4170)
!4205 = !DILocation(line: 8119, column: 3, scope: !4170)
!4206 = !DILocation(line: 8122, column: 1, scope: !4170)
!4207 = distinct !DISubprogram(name: "single_succ", scope: !513, file: !513, line: 663, type: !4208, scopeLine: 664, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!4208 = !DISubroutineType(types: !4209)
!4209 = !{!1795, !4210}
!4210 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_basic_block", file: !1012, line: 112, baseType: !4211)
!4211 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4212, size: 64)
!4212 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1325)
!4213 = !DILocalVariable(name: "bb", arg: 1, scope: !4207, file: !513, line: 663, type: !4210)
!4214 = !DILocation(line: 663, column: 32, scope: !4207)
!4215 = !DILocation(line: 665, column: 28, scope: !4207)
!4216 = !DILocation(line: 665, column: 10, scope: !4207)
!4217 = !DILocation(line: 665, column: 33, scope: !4207)
!4218 = !DILocation(line: 665, column: 3, scope: !4207)
!4219 = distinct !DISubprogram(name: "add_with_sets", scope: !3, file: !3, line: 5458, type: !4220, scopeLine: 5459, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!4220 = !DISubroutineType(types: !4221)
!4221 = !{null, !1188, !2477, !1010}
!4222 = !DILocalVariable(name: "insn", arg: 1, scope: !4219, file: !3, line: 5458, type: !1188)
!4223 = !DILocation(line: 5458, column: 20, scope: !4219)
!4224 = !DILocalVariable(name: "sets", arg: 2, scope: !4219, file: !3, line: 5458, type: !2477)
!4225 = !DILocation(line: 5458, column: 45, scope: !4219)
!4226 = !DILocalVariable(name: "n_sets", arg: 3, scope: !4219, file: !3, line: 5458, type: !1010)
!4227 = !DILocation(line: 5458, column: 55, scope: !4219)
!4228 = !DILocalVariable(name: "bb", scope: !4219, file: !3, line: 5460, type: !1795)
!4229 = !DILocation(line: 5460, column: 15, scope: !4219)
!4230 = !DILocation(line: 5460, column: 20, scope: !4219)
!4231 = !DILocalVariable(name: "n1", scope: !4219, file: !3, line: 5461, type: !1010)
!4232 = !DILocation(line: 5461, column: 7, scope: !4219)
!4233 = !DILocalVariable(name: "n2", scope: !4219, file: !3, line: 5461, type: !1010)
!4234 = !DILocation(line: 5461, column: 11, scope: !4219)
!4235 = !DILocalVariable(name: "cui", scope: !4219, file: !3, line: 5462, type: !2472)
!4236 = !DILocation(line: 5462, column: 25, scope: !4219)
!4237 = !DILocalVariable(name: "mos", scope: !4219, file: !3, line: 5463, type: !4238)
!4238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2386, size: 64)
!4239 = !DILocation(line: 5463, column: 20, scope: !4219)
!4240 = !DILocation(line: 5465, column: 22, scope: !4219)
!4241 = !DILocation(line: 5467, column: 14, scope: !4219)
!4242 = !DILocation(line: 5467, column: 7, scope: !4219)
!4243 = !DILocation(line: 5467, column: 12, scope: !4219)
!4244 = !DILocation(line: 5468, column: 12, scope: !4219)
!4245 = !DILocation(line: 5468, column: 7, scope: !4219)
!4246 = !DILocation(line: 5468, column: 10, scope: !4219)
!4247 = !DILocation(line: 5469, column: 14, scope: !4219)
!4248 = !DILocation(line: 5469, column: 7, scope: !4219)
!4249 = !DILocation(line: 5469, column: 12, scope: !4219)
!4250 = !DILocation(line: 5470, column: 16, scope: !4219)
!4251 = !DILocation(line: 5470, column: 7, scope: !4219)
!4252 = !DILocation(line: 5470, column: 14, scope: !4219)
!4253 = !DILocation(line: 5472, column: 8, scope: !4219)
!4254 = !DILocation(line: 5472, column: 6, scope: !4219)
!4255 = !DILocation(line: 5473, column: 7, scope: !4219)
!4256 = !DILocation(line: 5473, column: 15, scope: !4219)
!4257 = !DILocation(line: 5474, column: 15, scope: !4219)
!4258 = !DILocation(line: 5474, column: 43, scope: !4219)
!4259 = !DILocation(line: 5474, column: 3, scope: !4219)
!4260 = !DILocation(line: 5475, column: 8, scope: !4219)
!4261 = !DILocation(line: 5475, column: 52, scope: !4219)
!4262 = !DILocation(line: 5475, column: 6, scope: !4219)
!4263 = !DILocation(line: 5476, column: 9, scope: !4219)
!4264 = !DILocation(line: 5476, column: 7, scope: !4219)
!4265 = !DILocation(line: 5480, column: 3, scope: !4219)
!4266 = !DILocation(line: 5480, column: 10, scope: !4219)
!4267 = !DILocation(line: 5480, column: 15, scope: !4219)
!4268 = !DILocation(line: 5480, column: 13, scope: !4219)
!4269 = !DILocation(line: 5482, column: 7, scope: !4270)
!4270 = distinct !DILexicalBlock(scope: !4219, file: !3, line: 5481, column: 5)
!4271 = !DILocation(line: 5482, column: 14, scope: !4270)
!4272 = !DILocation(line: 5482, column: 19, scope: !4270)
!4273 = !DILocation(line: 5482, column: 17, scope: !4270)
!4274 = !DILocation(line: 5482, column: 22, scope: !4270)
!4275 = !DILocation(line: 5482, column: 25, scope: !4270)
!4276 = !DILocation(line: 5482, column: 29, scope: !4270)
!4277 = !DILocation(line: 5482, column: 33, scope: !4270)
!4278 = !DILocation(line: 5482, column: 38, scope: !4270)
!4279 = !DILocation(line: 0, scope: !4270)
!4280 = !DILocation(line: 5483, column: 4, scope: !4270)
!4281 = distinct !{!4281, !4269, !4280}
!4282 = !DILocation(line: 5484, column: 7, scope: !4270)
!4283 = !DILocation(line: 5484, column: 14, scope: !4270)
!4284 = !DILocation(line: 5484, column: 19, scope: !4270)
!4285 = !DILocation(line: 5484, column: 17, scope: !4270)
!4286 = !DILocation(line: 5484, column: 22, scope: !4270)
!4287 = !DILocation(line: 5484, column: 25, scope: !4270)
!4288 = !DILocation(line: 5484, column: 29, scope: !4270)
!4289 = !DILocation(line: 5484, column: 33, scope: !4270)
!4290 = !DILocation(line: 5484, column: 38, scope: !4270)
!4291 = !DILocation(line: 5485, column: 4, scope: !4270)
!4292 = distinct !{!4292, !4282, !4291}
!4293 = !DILocation(line: 5486, column: 11, scope: !4294)
!4294 = distinct !DILexicalBlock(scope: !4270, file: !3, line: 5486, column: 11)
!4295 = !DILocation(line: 5486, column: 16, scope: !4294)
!4296 = !DILocation(line: 5486, column: 14, scope: !4294)
!4297 = !DILocation(line: 5486, column: 11, scope: !4270)
!4298 = !DILocalVariable(name: "sw", scope: !4299, file: !3, line: 5488, type: !2386)
!4299 = distinct !DILexicalBlock(scope: !4294, file: !3, line: 5487, column: 2)
!4300 = !DILocation(line: 5488, column: 20, scope: !4299)
!4301 = !DILocation(line: 5490, column: 9, scope: !4299)
!4302 = !DILocation(line: 5490, column: 13, scope: !4299)
!4303 = !DILocation(line: 5491, column: 4, scope: !4299)
!4304 = !DILocation(line: 5491, column: 8, scope: !4299)
!4305 = !DILocation(line: 5491, column: 14, scope: !4299)
!4306 = !DILocation(line: 5491, column: 18, scope: !4299)
!4307 = !DILocation(line: 5492, column: 4, scope: !4299)
!4308 = !DILocation(line: 5492, column: 8, scope: !4299)
!4309 = !DILocation(line: 5492, column: 14, scope: !4299)
!4310 = !DILocation(line: 5493, column: 2, scope: !4299)
!4311 = distinct !{!4311, !4265, !4312}
!4312 = !DILocation(line: 5494, column: 5, scope: !4219)
!4313 = !DILocation(line: 5496, column: 8, scope: !4219)
!4314 = !DILocation(line: 5496, column: 52, scope: !4219)
!4315 = !DILocation(line: 5496, column: 6, scope: !4219)
!4316 = !DILocation(line: 5497, column: 3, scope: !4219)
!4317 = !DILocation(line: 5497, column: 10, scope: !4219)
!4318 = !DILocation(line: 5497, column: 15, scope: !4219)
!4319 = !DILocation(line: 5497, column: 13, scope: !4219)
!4320 = !DILocation(line: 5499, column: 7, scope: !4321)
!4321 = distinct !DILexicalBlock(scope: !4219, file: !3, line: 5498, column: 5)
!4322 = !DILocation(line: 5499, column: 14, scope: !4321)
!4323 = !DILocation(line: 5499, column: 19, scope: !4321)
!4324 = !DILocation(line: 5499, column: 17, scope: !4321)
!4325 = !DILocation(line: 5499, column: 22, scope: !4321)
!4326 = !DILocation(line: 5499, column: 25, scope: !4321)
!4327 = !DILocation(line: 5499, column: 29, scope: !4321)
!4328 = !DILocation(line: 5499, column: 33, scope: !4321)
!4329 = !DILocation(line: 5499, column: 38, scope: !4321)
!4330 = !DILocation(line: 0, scope: !4321)
!4331 = !DILocation(line: 5500, column: 4, scope: !4321)
!4332 = distinct !{!4332, !4320, !4331}
!4333 = !DILocation(line: 5501, column: 7, scope: !4321)
!4334 = !DILocation(line: 5501, column: 14, scope: !4321)
!4335 = !DILocation(line: 5501, column: 19, scope: !4321)
!4336 = !DILocation(line: 5501, column: 17, scope: !4321)
!4337 = !DILocation(line: 5501, column: 22, scope: !4321)
!4338 = !DILocation(line: 5501, column: 25, scope: !4321)
!4339 = !DILocation(line: 5501, column: 29, scope: !4321)
!4340 = !DILocation(line: 5501, column: 33, scope: !4321)
!4341 = !DILocation(line: 5501, column: 38, scope: !4321)
!4342 = !DILocation(line: 5502, column: 4, scope: !4321)
!4343 = distinct !{!4343, !4333, !4342}
!4344 = !DILocation(line: 5503, column: 11, scope: !4345)
!4345 = distinct !DILexicalBlock(scope: !4321, file: !3, line: 5503, column: 11)
!4346 = !DILocation(line: 5503, column: 16, scope: !4345)
!4347 = !DILocation(line: 5503, column: 14, scope: !4345)
!4348 = !DILocation(line: 5503, column: 11, scope: !4321)
!4349 = !DILocalVariable(name: "sw", scope: !4350, file: !3, line: 5505, type: !2386)
!4350 = distinct !DILexicalBlock(scope: !4345, file: !3, line: 5504, column: 2)
!4351 = !DILocation(line: 5505, column: 20, scope: !4350)
!4352 = !DILocation(line: 5507, column: 9, scope: !4350)
!4353 = !DILocation(line: 5507, column: 13, scope: !4350)
!4354 = !DILocation(line: 5508, column: 4, scope: !4350)
!4355 = !DILocation(line: 5508, column: 8, scope: !4350)
!4356 = !DILocation(line: 5508, column: 14, scope: !4350)
!4357 = !DILocation(line: 5508, column: 18, scope: !4350)
!4358 = !DILocation(line: 5509, column: 4, scope: !4350)
!4359 = !DILocation(line: 5509, column: 8, scope: !4350)
!4360 = !DILocation(line: 5509, column: 14, scope: !4350)
!4361 = !DILocation(line: 5510, column: 2, scope: !4350)
!4362 = distinct !{!4362, !4316, !4363}
!4363 = !DILocation(line: 5511, column: 5, scope: !4219)
!4364 = !DILocation(line: 5513, column: 7, scope: !4365)
!4365 = distinct !DILexicalBlock(scope: !4219, file: !3, line: 5513, column: 7)
!4366 = !DILocation(line: 5513, column: 7, scope: !4219)
!4367 = !DILocalVariable(name: "mo", scope: !4368, file: !3, line: 5515, type: !2386)
!4368 = distinct !DILexicalBlock(scope: !4365, file: !3, line: 5514, column: 5)
!4369 = !DILocation(line: 5515, column: 23, scope: !4368)
!4370 = !DILocation(line: 5517, column: 10, scope: !4368)
!4371 = !DILocation(line: 5517, column: 15, scope: !4368)
!4372 = !DILocation(line: 5518, column: 17, scope: !4368)
!4373 = !DILocation(line: 5518, column: 10, scope: !4368)
!4374 = !DILocation(line: 5518, column: 15, scope: !4368)
!4375 = !DILocation(line: 5519, column: 10, scope: !4368)
!4376 = !DILocation(line: 5519, column: 12, scope: !4368)
!4377 = !DILocation(line: 5519, column: 16, scope: !4368)
!4378 = !DILocation(line: 5521, column: 11, scope: !4379)
!4379 = distinct !DILexicalBlock(scope: !4368, file: !3, line: 5521, column: 11)
!4380 = !DILocation(line: 5521, column: 21, scope: !4379)
!4381 = !DILocation(line: 5521, column: 25, scope: !4379)
!4382 = !DILocation(line: 5521, column: 36, scope: !4379)
!4383 = !DILocation(line: 5521, column: 11, scope: !4368)
!4384 = !DILocation(line: 5522, column: 15, scope: !4379)
!4385 = !DILocation(line: 5522, column: 31, scope: !4379)
!4386 = !DILocation(line: 5522, column: 35, scope: !4379)
!4387 = !DILocation(line: 5522, column: 44, scope: !4379)
!4388 = !DILocation(line: 5522, column: 50, scope: !4379)
!4389 = !DILocation(line: 5522, column: 2, scope: !4379)
!4390 = !DILocation(line: 5523, column: 7, scope: !4368)
!4391 = !DILocation(line: 5524, column: 5, scope: !4368)
!4392 = !DILocation(line: 5526, column: 8, scope: !4219)
!4393 = !DILocation(line: 5526, column: 6, scope: !4219)
!4394 = !DILocation(line: 5530, column: 7, scope: !4219)
!4395 = !DILocation(line: 5530, column: 15, scope: !4219)
!4396 = !DILocation(line: 5531, column: 16, scope: !4219)
!4397 = !DILocation(line: 5531, column: 44, scope: !4219)
!4398 = !DILocation(line: 5531, column: 3, scope: !4219)
!4399 = !DILocation(line: 5532, column: 8, scope: !4219)
!4400 = !DILocation(line: 5532, column: 52, scope: !4219)
!4401 = !DILocation(line: 5532, column: 6, scope: !4219)
!4402 = !DILocation(line: 5533, column: 9, scope: !4219)
!4403 = !DILocation(line: 5533, column: 7, scope: !4219)
!4404 = !DILocation(line: 5538, column: 3, scope: !4219)
!4405 = !DILocation(line: 5538, column: 10, scope: !4219)
!4406 = !DILocation(line: 5538, column: 15, scope: !4219)
!4407 = !DILocation(line: 5538, column: 13, scope: !4219)
!4408 = !DILocation(line: 5540, column: 7, scope: !4409)
!4409 = distinct !DILexicalBlock(scope: !4219, file: !3, line: 5539, column: 5)
!4410 = !DILocation(line: 5540, column: 14, scope: !4409)
!4411 = !DILocation(line: 5540, column: 19, scope: !4409)
!4412 = !DILocation(line: 5540, column: 17, scope: !4409)
!4413 = !DILocation(line: 5540, column: 22, scope: !4409)
!4414 = !DILocation(line: 5540, column: 25, scope: !4409)
!4415 = !DILocation(line: 5540, column: 29, scope: !4409)
!4416 = !DILocation(line: 5540, column: 33, scope: !4409)
!4417 = !DILocation(line: 5540, column: 38, scope: !4409)
!4418 = !DILocation(line: 0, scope: !4409)
!4419 = !DILocation(line: 5541, column: 4, scope: !4409)
!4420 = distinct !{!4420, !4408, !4419}
!4421 = !DILocation(line: 5542, column: 7, scope: !4409)
!4422 = !DILocation(line: 5542, column: 14, scope: !4409)
!4423 = !DILocation(line: 5542, column: 19, scope: !4409)
!4424 = !DILocation(line: 5542, column: 17, scope: !4409)
!4425 = !DILocation(line: 5542, column: 22, scope: !4409)
!4426 = !DILocation(line: 5542, column: 25, scope: !4409)
!4427 = !DILocation(line: 5542, column: 29, scope: !4409)
!4428 = !DILocation(line: 5542, column: 33, scope: !4409)
!4429 = !DILocation(line: 5542, column: 38, scope: !4409)
!4430 = !DILocation(line: 5543, column: 4, scope: !4409)
!4431 = distinct !{!4431, !4421, !4430}
!4432 = !DILocation(line: 5544, column: 11, scope: !4433)
!4433 = distinct !DILexicalBlock(scope: !4409, file: !3, line: 5544, column: 11)
!4434 = !DILocation(line: 5544, column: 16, scope: !4433)
!4435 = !DILocation(line: 5544, column: 14, scope: !4433)
!4436 = !DILocation(line: 5544, column: 11, scope: !4409)
!4437 = !DILocalVariable(name: "sw", scope: !4438, file: !3, line: 5546, type: !2386)
!4438 = distinct !DILexicalBlock(scope: !4433, file: !3, line: 5545, column: 2)
!4439 = !DILocation(line: 5546, column: 20, scope: !4438)
!4440 = !DILocation(line: 5548, column: 9, scope: !4438)
!4441 = !DILocation(line: 5548, column: 13, scope: !4438)
!4442 = !DILocation(line: 5549, column: 4, scope: !4438)
!4443 = !DILocation(line: 5549, column: 8, scope: !4438)
!4444 = !DILocation(line: 5549, column: 14, scope: !4438)
!4445 = !DILocation(line: 5549, column: 18, scope: !4438)
!4446 = !DILocation(line: 5550, column: 4, scope: !4438)
!4447 = !DILocation(line: 5550, column: 8, scope: !4438)
!4448 = !DILocation(line: 5550, column: 14, scope: !4438)
!4449 = !DILocation(line: 5551, column: 2, scope: !4438)
!4450 = distinct !{!4450, !4404, !4451}
!4451 = !DILocation(line: 5552, column: 5, scope: !4219)
!4452 = !DILocation(line: 5554, column: 8, scope: !4219)
!4453 = !DILocation(line: 5554, column: 52, scope: !4219)
!4454 = !DILocation(line: 5554, column: 6, scope: !4219)
!4455 = !DILocation(line: 5555, column: 3, scope: !4219)
!4456 = !DILocation(line: 5555, column: 10, scope: !4219)
!4457 = !DILocation(line: 5555, column: 15, scope: !4219)
!4458 = !DILocation(line: 5555, column: 13, scope: !4219)
!4459 = !DILocation(line: 5557, column: 7, scope: !4460)
!4460 = distinct !DILexicalBlock(scope: !4219, file: !3, line: 5556, column: 5)
!4461 = !DILocation(line: 5557, column: 14, scope: !4460)
!4462 = !DILocation(line: 5557, column: 19, scope: !4460)
!4463 = !DILocation(line: 5557, column: 17, scope: !4460)
!4464 = !DILocation(line: 5557, column: 22, scope: !4460)
!4465 = !DILocation(line: 5557, column: 25, scope: !4460)
!4466 = !DILocation(line: 5557, column: 29, scope: !4460)
!4467 = !DILocation(line: 5557, column: 33, scope: !4460)
!4468 = !DILocation(line: 5557, column: 38, scope: !4460)
!4469 = !DILocation(line: 0, scope: !4460)
!4470 = !DILocation(line: 5558, column: 4, scope: !4460)
!4471 = distinct !{!4471, !4459, !4470}
!4472 = !DILocation(line: 5559, column: 7, scope: !4460)
!4473 = !DILocation(line: 5559, column: 14, scope: !4460)
!4474 = !DILocation(line: 5559, column: 19, scope: !4460)
!4475 = !DILocation(line: 5559, column: 17, scope: !4460)
!4476 = !DILocation(line: 5559, column: 22, scope: !4460)
!4477 = !DILocation(line: 5559, column: 25, scope: !4460)
!4478 = !DILocation(line: 5559, column: 29, scope: !4460)
!4479 = !DILocation(line: 5559, column: 33, scope: !4460)
!4480 = !DILocation(line: 5559, column: 38, scope: !4460)
!4481 = !DILocation(line: 5560, column: 4, scope: !4460)
!4482 = distinct !{!4482, !4472, !4481}
!4483 = !DILocation(line: 5561, column: 11, scope: !4484)
!4484 = distinct !DILexicalBlock(scope: !4460, file: !3, line: 5561, column: 11)
!4485 = !DILocation(line: 5561, column: 16, scope: !4484)
!4486 = !DILocation(line: 5561, column: 14, scope: !4484)
!4487 = !DILocation(line: 5561, column: 11, scope: !4460)
!4488 = !DILocalVariable(name: "sw", scope: !4489, file: !3, line: 5563, type: !2386)
!4489 = distinct !DILexicalBlock(scope: !4484, file: !3, line: 5562, column: 2)
!4490 = !DILocation(line: 5563, column: 20, scope: !4489)
!4491 = !DILocation(line: 5565, column: 9, scope: !4489)
!4492 = !DILocation(line: 5565, column: 13, scope: !4489)
!4493 = !DILocation(line: 5566, column: 4, scope: !4489)
!4494 = !DILocation(line: 5566, column: 8, scope: !4489)
!4495 = !DILocation(line: 5566, column: 14, scope: !4489)
!4496 = !DILocation(line: 5566, column: 18, scope: !4489)
!4497 = !DILocation(line: 5567, column: 4, scope: !4489)
!4498 = !DILocation(line: 5567, column: 8, scope: !4489)
!4499 = !DILocation(line: 5567, column: 14, scope: !4489)
!4500 = !DILocation(line: 5568, column: 2, scope: !4489)
!4501 = distinct !{!4501, !4455, !4502}
!4502 = !DILocation(line: 5569, column: 5, scope: !4219)
!4503 = !DILocation(line: 5570, column: 1, scope: !4219)
!4504 = distinct !DISubprogram(name: "single_pred_p", scope: !513, file: !513, line: 634, type: !4505, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!4505 = !DISubroutineType(types: !4506)
!4506 = !{!1130, !4210}
!4507 = !DILocalVariable(name: "bb", arg: 1, scope: !4504, file: !513, line: 634, type: !4210)
!4508 = !DILocation(line: 634, column: 34, scope: !4504)
!4509 = !DILocation(line: 636, column: 10, scope: !4504)
!4510 = !DILocation(line: 636, column: 33, scope: !4504)
!4511 = !DILocation(line: 636, column: 3, scope: !4504)
!4512 = distinct !DISubprogram(name: "insn_stack_adjust_offset_pre_post", scope: !3, file: !3, line: 589, type: !4513, scopeLine: 591, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!4513 = !DISubroutineType(types: !4514)
!4514 = !{null, !1188, !4515, !4515}
!4515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1067, size: 64)
!4516 = !DILocalVariable(name: "insn", arg: 1, scope: !4512, file: !3, line: 589, type: !1188)
!4517 = !DILocation(line: 589, column: 40, scope: !4512)
!4518 = !DILocalVariable(name: "pre", arg: 2, scope: !4512, file: !3, line: 589, type: !4515)
!4519 = !DILocation(line: 589, column: 61, scope: !4512)
!4520 = !DILocalVariable(name: "post", arg: 3, scope: !4512, file: !3, line: 590, type: !4515)
!4521 = !DILocation(line: 590, column: 23, scope: !4512)
!4522 = !DILocalVariable(name: "pattern", scope: !4512, file: !3, line: 592, type: !1188)
!4523 = !DILocation(line: 592, column: 7, scope: !4512)
!4524 = !DILocation(line: 594, column: 4, scope: !4512)
!4525 = !DILocation(line: 594, column: 8, scope: !4512)
!4526 = !DILocation(line: 595, column: 4, scope: !4512)
!4527 = !DILocation(line: 595, column: 9, scope: !4512)
!4528 = !DILocation(line: 597, column: 13, scope: !4512)
!4529 = !DILocation(line: 597, column: 11, scope: !4512)
!4530 = !DILocation(line: 598, column: 7, scope: !4531)
!4531 = distinct !DILexicalBlock(scope: !4512, file: !3, line: 598, column: 7)
!4532 = !DILocation(line: 598, column: 7, scope: !4512)
!4533 = !DILocalVariable(name: "expr", scope: !4534, file: !3, line: 600, type: !1188)
!4534 = distinct !DILexicalBlock(scope: !4531, file: !3, line: 599, column: 5)
!4535 = !DILocation(line: 600, column: 11, scope: !4534)
!4536 = !DILocation(line: 600, column: 33, scope: !4534)
!4537 = !DILocation(line: 600, column: 18, scope: !4534)
!4538 = !DILocation(line: 601, column: 11, scope: !4539)
!4539 = distinct !DILexicalBlock(scope: !4534, file: !3, line: 601, column: 11)
!4540 = !DILocation(line: 601, column: 11, scope: !4534)
!4541 = !DILocation(line: 602, column: 12, scope: !4539)
!4542 = !DILocation(line: 602, column: 10, scope: !4539)
!4543 = !DILocation(line: 602, column: 2, scope: !4539)
!4544 = !DILocation(line: 603, column: 5, scope: !4534)
!4545 = !DILocation(line: 605, column: 7, scope: !4546)
!4546 = distinct !DILexicalBlock(scope: !4512, file: !3, line: 605, column: 7)
!4547 = !DILocation(line: 605, column: 26, scope: !4546)
!4548 = !DILocation(line: 605, column: 7, scope: !4512)
!4549 = !DILocation(line: 606, column: 35, scope: !4546)
!4550 = !DILocation(line: 606, column: 44, scope: !4546)
!4551 = !DILocation(line: 606, column: 49, scope: !4546)
!4552 = !DILocation(line: 606, column: 5, scope: !4546)
!4553 = !DILocation(line: 607, column: 12, scope: !4554)
!4554 = distinct !DILexicalBlock(scope: !4546, file: !3, line: 607, column: 12)
!4555 = !DILocation(line: 607, column: 31, scope: !4554)
!4556 = !DILocation(line: 608, column: 5, scope: !4554)
!4557 = !DILocation(line: 608, column: 8, scope: !4554)
!4558 = !DILocation(line: 608, column: 27, scope: !4554)
!4559 = !DILocation(line: 607, column: 12, scope: !4546)
!4560 = !DILocalVariable(name: "i", scope: !4561, file: !3, line: 610, type: !1010)
!4561 = distinct !DILexicalBlock(scope: !4554, file: !3, line: 609, column: 5)
!4562 = !DILocation(line: 610, column: 11, scope: !4561)
!4563 = !DILocation(line: 614, column: 17, scope: !4564)
!4564 = distinct !DILexicalBlock(scope: !4561, file: !3, line: 614, column: 7)
!4565 = !DILocation(line: 614, column: 38, scope: !4564)
!4566 = !DILocation(line: 614, column: 15, scope: !4564)
!4567 = !DILocation(line: 614, column: 13, scope: !4564)
!4568 = !DILocation(line: 614, column: 43, scope: !4569)
!4569 = distinct !DILexicalBlock(scope: !4564, file: !3, line: 614, column: 7)
!4570 = !DILocation(line: 614, column: 45, scope: !4569)
!4571 = !DILocation(line: 614, column: 7, scope: !4564)
!4572 = !DILocation(line: 615, column: 6, scope: !4573)
!4573 = distinct !DILexicalBlock(scope: !4569, file: !3, line: 615, column: 6)
!4574 = !DILocation(line: 615, column: 41, scope: !4573)
!4575 = !DILocation(line: 615, column: 6, scope: !4569)
!4576 = !DILocation(line: 616, column: 34, scope: !4573)
!4577 = !DILocation(line: 616, column: 59, scope: !4573)
!4578 = !DILocation(line: 616, column: 64, scope: !4573)
!4579 = !DILocation(line: 616, column: 4, scope: !4573)
!4580 = !DILocation(line: 615, column: 44, scope: !4573)
!4581 = !DILocation(line: 614, column: 52, scope: !4569)
!4582 = !DILocation(line: 614, column: 7, scope: !4569)
!4583 = distinct !{!4583, !4571, !4584}
!4584 = !DILocation(line: 616, column: 68, scope: !4564)
!4585 = !DILocation(line: 617, column: 5, scope: !4561)
!4586 = !DILocation(line: 618, column: 1, scope: !4512)
!4587 = distinct !DISubprogram(name: "log_op_type", scope: !3, file: !3, line: 4855, type: !4588, scopeLine: 4857, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!4588 = !DISubroutineType(types: !4589)
!4589 = !{null, !1188, !1795, !1188, !703, !4590}
!4590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4591, size: 64)
!4591 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !4592, line: 7, baseType: !4593)
!4592 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!4593 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !4594, line: 49, size: 1728, elements: !4595)
!4594 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!4595 = !{!4596, !4597, !4598, !4599, !4600, !4601, !4602, !4603, !4604, !4605, !4606, !4607, !4608, !4611, !4613, !4614, !4615, !4618, !4619, !4620, !4621, !4624, !4626, !4629, !4632, !4633, !4634, !4635, !4636}
!4596 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !4593, file: !4594, line: 51, baseType: !1010, size: 32)
!4597 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !4593, file: !4594, line: 54, baseType: !1298, size: 64, offset: 64)
!4598 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !4593, file: !4594, line: 55, baseType: !1298, size: 64, offset: 128)
!4599 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !4593, file: !4594, line: 56, baseType: !1298, size: 64, offset: 192)
!4600 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !4593, file: !4594, line: 57, baseType: !1298, size: 64, offset: 256)
!4601 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !4593, file: !4594, line: 58, baseType: !1298, size: 64, offset: 320)
!4602 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !4593, file: !4594, line: 59, baseType: !1298, size: 64, offset: 384)
!4603 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !4593, file: !4594, line: 60, baseType: !1298, size: 64, offset: 448)
!4604 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !4593, file: !4594, line: 61, baseType: !1298, size: 64, offset: 512)
!4605 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !4593, file: !4594, line: 64, baseType: !1298, size: 64, offset: 576)
!4606 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !4593, file: !4594, line: 65, baseType: !1298, size: 64, offset: 640)
!4607 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !4593, file: !4594, line: 66, baseType: !1298, size: 64, offset: 704)
!4608 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !4593, file: !4594, line: 68, baseType: !4609, size: 64, offset: 768)
!4609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4610, size: 64)
!4610 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !4594, line: 36, flags: DIFlagFwdDecl)
!4611 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !4593, file: !4594, line: 70, baseType: !4612, size: 64, offset: 832)
!4612 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4593, size: 64)
!4613 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !4593, file: !4594, line: 72, baseType: !1010, size: 32, offset: 896)
!4614 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !4593, file: !4594, line: 73, baseType: !1010, size: 32, offset: 928)
!4615 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !4593, file: !4594, line: 74, baseType: !4616, size: 64, offset: 960)
!4616 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !4617, line: 152, baseType: !1067)
!4617 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!4618 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !4593, file: !4594, line: 77, baseType: !2486, size: 16, offset: 1024)
!4619 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !4593, file: !4594, line: 78, baseType: !2190, size: 8, offset: 1040)
!4620 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !4593, file: !4594, line: 79, baseType: !1109, size: 8, offset: 1048)
!4621 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !4593, file: !4594, line: 81, baseType: !4622, size: 64, offset: 1088)
!4622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4623, size: 64)
!4623 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !4594, line: 43, baseType: null)
!4624 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !4593, file: !4594, line: 89, baseType: !4625, size: 64, offset: 1152)
!4625 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !4617, line: 153, baseType: !1067)
!4626 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !4593, file: !4594, line: 91, baseType: !4627, size: 64, offset: 1216)
!4627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4628, size: 64)
!4628 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !4594, line: 37, flags: DIFlagFwdDecl)
!4629 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !4593, file: !4594, line: 92, baseType: !4630, size: 64, offset: 1280)
!4630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4631, size: 64)
!4631 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !4594, line: 38, flags: DIFlagFwdDecl)
!4632 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !4593, file: !4594, line: 93, baseType: !4612, size: 64, offset: 1344)
!4633 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !4593, file: !4594, line: 94, baseType: !1313, size: 64, offset: 1408)
!4634 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !4593, file: !4594, line: 95, baseType: !1507, size: 64, offset: 1472)
!4635 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !4593, file: !4594, line: 96, baseType: !1010, size: 32, offset: 1536)
!4636 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !4593, file: !4594, line: 98, baseType: !4637, size: 160, offset: 1568)
!4637 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1110, size: 160, elements: !4638)
!4638 = !{!4639}
!4639 = !DISubrange(count: 20)
!4640 = !DILocalVariable(name: "x", arg: 1, scope: !4587, file: !3, line: 4855, type: !1188)
!4641 = !DILocation(line: 4855, column: 18, scope: !4587)
!4642 = !DILocalVariable(name: "bb", arg: 2, scope: !4587, file: !3, line: 4855, type: !1795)
!4643 = !DILocation(line: 4855, column: 33, scope: !4587)
!4644 = !DILocalVariable(name: "insn", arg: 3, scope: !4587, file: !3, line: 4855, type: !1188)
!4645 = !DILocation(line: 4855, column: 41, scope: !4587)
!4646 = !DILocalVariable(name: "mopt", arg: 4, scope: !4587, file: !3, line: 4856, type: !703)
!4647 = !DILocation(line: 4856, column: 33, scope: !4587)
!4648 = !DILocalVariable(name: "out", arg: 5, scope: !4587, file: !3, line: 4856, type: !4590)
!4649 = !DILocation(line: 4856, column: 45, scope: !4587)
!4650 = !DILocation(line: 4858, column: 12, scope: !4587)
!4651 = !DILocation(line: 4859, column: 5, scope: !4587)
!4652 = !DILocation(line: 4859, column: 9, scope: !4587)
!4653 = !DILocation(line: 4859, column: 16, scope: !4587)
!4654 = !DILocation(line: 4860, column: 5, scope: !4587)
!4655 = !DILocation(line: 4860, column: 48, scope: !4587)
!4656 = !DILocation(line: 4860, column: 22, scope: !4587)
!4657 = !DILocation(line: 4858, column: 3, scope: !4587)
!4658 = !DILocation(line: 4861, column: 21, scope: !4587)
!4659 = !DILocation(line: 4861, column: 26, scope: !4587)
!4660 = !DILocation(line: 4861, column: 3, scope: !4587)
!4661 = !DILocation(line: 4862, column: 16, scope: !4587)
!4662 = !DILocation(line: 4862, column: 3, scope: !4587)
!4663 = !DILocation(line: 4863, column: 1, scope: !4587)
!4664 = distinct !DISubprogram(name: "VEC_micro_operation_heap_safe_push", scope: !3, file: !3, line: 195, type: !4665, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!4665 = !DISubroutineType(types: !4666)
!4666 = !{!4238, !4667, !4668}
!4667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2374, size: 64)
!4668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4669, size: 64)
!4669 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2386)
!4670 = !DILocalVariable(name: "vec_", arg: 1, scope: !4664, file: !3, line: 195, type: !4667)
!4671 = !DILocation(line: 195, column: 1, scope: !4664)
!4672 = !DILocalVariable(name: "obj_", arg: 2, scope: !4664, file: !3, line: 195, type: !4668)
!4673 = distinct !DISubprogram(name: "adjust_insn", scope: !3, file: !3, line: 955, type: !4674, scopeLine: 956, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!4674 = !DISubroutineType(types: !4675)
!4675 = !{null, !1795, !1188}
!4676 = !DILocalVariable(name: "bb", arg: 1, scope: !4673, file: !3, line: 955, type: !1795)
!4677 = !DILocation(line: 955, column: 26, scope: !4673)
!4678 = !DILocalVariable(name: "insn", arg: 2, scope: !4673, file: !3, line: 955, type: !1188)
!4679 = !DILocation(line: 955, column: 34, scope: !4673)
!4680 = !DILocalVariable(name: "amd", scope: !4673, file: !3, line: 957, type: !2490)
!4681 = !DILocation(line: 957, column: 26, scope: !4673)
!4682 = !DILocalVariable(name: "set", scope: !4673, file: !3, line: 958, type: !1188)
!4683 = !DILocation(line: 958, column: 7, scope: !4673)
!4684 = !DILocation(line: 959, column: 7, scope: !4673)
!4685 = !DILocation(line: 959, column: 16, scope: !4673)
!4686 = !DILocation(line: 960, column: 23, scope: !4673)
!4687 = !DILocation(line: 960, column: 33, scope: !4673)
!4688 = !DILocation(line: 960, column: 37, scope: !4673)
!4689 = !DILocation(line: 960, column: 22, scope: !4673)
!4690 = !DILocation(line: 960, column: 7, scope: !4673)
!4691 = !DILocation(line: 960, column: 20, scope: !4673)
!4692 = !DILocation(line: 961, column: 7, scope: !4673)
!4693 = !DILocation(line: 961, column: 20, scope: !4673)
!4694 = !DILocation(line: 963, column: 7, scope: !4673)
!4695 = !DILocation(line: 963, column: 13, scope: !4673)
!4696 = !DILocation(line: 964, column: 16, scope: !4673)
!4697 = !DILocation(line: 964, column: 51, scope: !4673)
!4698 = !DILocation(line: 964, column: 3, scope: !4673)
!4699 = !DILocation(line: 966, column: 7, scope: !4673)
!4700 = !DILocation(line: 966, column: 13, scope: !4673)
!4701 = !DILocation(line: 967, column: 15, scope: !4673)
!4702 = !DILocation(line: 967, column: 48, scope: !4673)
!4703 = !DILocation(line: 967, column: 3, scope: !4673)
!4704 = !DILocation(line: 971, column: 9, scope: !4673)
!4705 = !DILocation(line: 971, column: 7, scope: !4673)
!4706 = !DILocation(line: 972, column: 7, scope: !4707)
!4707 = distinct !DILexicalBlock(scope: !4673, file: !3, line: 972, column: 7)
!4708 = !DILocation(line: 972, column: 11, scope: !4707)
!4709 = !DILocation(line: 972, column: 14, scope: !4707)
!4710 = !DILocation(line: 972, column: 36, scope: !4707)
!4711 = !DILocation(line: 972, column: 39, scope: !4707)
!4712 = !DILocation(line: 972, column: 7, scope: !4673)
!4713 = !DILocalVariable(name: "note", scope: !4714, file: !3, line: 974, type: !1188)
!4714 = distinct !DILexicalBlock(scope: !4707, file: !3, line: 973, column: 5)
!4715 = !DILocation(line: 974, column: 11, scope: !4714)
!4716 = !DILocation(line: 974, column: 45, scope: !4714)
!4717 = !DILocation(line: 974, column: 18, scope: !4714)
!4718 = !DILocation(line: 976, column: 11, scope: !4719)
!4719 = distinct !DILexicalBlock(scope: !4714, file: !3, line: 976, column: 11)
!4720 = !DILocation(line: 976, column: 16, scope: !4719)
!4721 = !DILocation(line: 976, column: 19, scope: !4719)
!4722 = !DILocation(line: 976, column: 11, scope: !4714)
!4723 = !DILocation(line: 977, column: 30, scope: !4719)
!4724 = !DILocation(line: 977, column: 45, scope: !4719)
!4725 = !DILocation(line: 977, column: 2, scope: !4719)
!4726 = !DILocation(line: 978, column: 5, scope: !4714)
!4727 = !DILocation(line: 980, column: 11, scope: !4728)
!4728 = distinct !DILexicalBlock(scope: !4673, file: !3, line: 980, column: 7)
!4729 = !DILocation(line: 980, column: 7, scope: !4728)
!4730 = !DILocation(line: 980, column: 7, scope: !4673)
!4731 = !DILocalVariable(name: "pat", scope: !4732, file: !3, line: 982, type: !4733)
!4732 = distinct !DILexicalBlock(scope: !4728, file: !3, line: 981, column: 5)
!4733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1188, size: 64)
!4734 = !DILocation(line: 982, column: 12, scope: !4732)
!4735 = !DILocalVariable(name: "new_pat", scope: !4732, file: !3, line: 982, type: !1188)
!4736 = !DILocation(line: 982, column: 17, scope: !4732)
!4737 = !DILocalVariable(name: "s", scope: !4732, file: !3, line: 982, type: !1188)
!4738 = !DILocation(line: 982, column: 26, scope: !4732)
!4739 = !DILocalVariable(name: "i", scope: !4732, file: !3, line: 983, type: !1010)
!4740 = !DILocation(line: 983, column: 11, scope: !4732)
!4741 = !DILocalVariable(name: "oldn", scope: !4732, file: !3, line: 983, type: !1010)
!4742 = !DILocation(line: 983, column: 14, scope: !4732)
!4743 = !DILocalVariable(name: "newn", scope: !4732, file: !3, line: 983, type: !1010)
!4744 = !DILocation(line: 983, column: 20, scope: !4732)
!4745 = !DILocation(line: 985, column: 14, scope: !4732)
!4746 = !DILocation(line: 985, column: 11, scope: !4732)
!4747 = !DILocation(line: 986, column: 11, scope: !4748)
!4748 = distinct !DILexicalBlock(scope: !4732, file: !3, line: 986, column: 11)
!4749 = !DILocation(line: 986, column: 27, scope: !4748)
!4750 = !DILocation(line: 986, column: 11, scope: !4732)
!4751 = !DILocation(line: 987, column: 9, scope: !4748)
!4752 = !DILocation(line: 987, column: 6, scope: !4748)
!4753 = !DILocation(line: 987, column: 2, scope: !4748)
!4754 = !DILocation(line: 988, column: 11, scope: !4755)
!4755 = distinct !DILexicalBlock(scope: !4732, file: !3, line: 988, column: 11)
!4756 = !DILocation(line: 988, column: 27, scope: !4755)
!4757 = !DILocation(line: 988, column: 11, scope: !4732)
!4758 = !DILocation(line: 989, column: 9, scope: !4755)
!4759 = !DILocation(line: 989, column: 7, scope: !4755)
!4760 = !DILocation(line: 989, column: 2, scope: !4755)
!4761 = !DILocation(line: 991, column: 7, scope: !4755)
!4762 = !DILocation(line: 992, column: 20, scope: !4763)
!4763 = distinct !DILexicalBlock(scope: !4732, file: !3, line: 992, column: 7)
!4764 = !DILocation(line: 992, column: 14, scope: !4763)
!4765 = !DILocation(line: 992, column: 39, scope: !4763)
!4766 = !DILocation(line: 992, column: 12, scope: !4763)
!4767 = !DILocation(line: 992, column: 44, scope: !4768)
!4768 = distinct !DILexicalBlock(scope: !4763, file: !3, line: 992, column: 7)
!4769 = !DILocation(line: 992, column: 7, scope: !4763)
!4770 = !DILocation(line: 993, column: 6, scope: !4768)
!4771 = !DILocation(line: 993, column: 4, scope: !4768)
!4772 = !DILocation(line: 993, column: 2, scope: !4768)
!4773 = !DILocation(line: 992, column: 51, scope: !4768)
!4774 = !DILocation(line: 992, column: 7, scope: !4768)
!4775 = distinct !{!4775, !4769, !4776}
!4776 = !DILocation(line: 993, column: 6, scope: !4763)
!4777 = !DILocation(line: 994, column: 17, scope: !4732)
!4778 = !DILocation(line: 994, column: 15, scope: !4732)
!4779 = !DILocation(line: 995, column: 11, scope: !4780)
!4780 = distinct !DILexicalBlock(scope: !4732, file: !3, line: 995, column: 11)
!4781 = !DILocation(line: 995, column: 27, scope: !4780)
!4782 = !DILocation(line: 995, column: 11, scope: !4732)
!4783 = !DILocation(line: 996, column: 9, scope: !4784)
!4784 = distinct !DILexicalBlock(scope: !4780, file: !3, line: 996, column: 2)
!4785 = !DILocation(line: 996, column: 7, scope: !4784)
!4786 = !DILocation(line: 996, column: 14, scope: !4787)
!4787 = distinct !DILexicalBlock(scope: !4784, file: !3, line: 996, column: 2)
!4788 = !DILocation(line: 996, column: 18, scope: !4787)
!4789 = !DILocation(line: 996, column: 16, scope: !4787)
!4790 = !DILocation(line: 996, column: 2, scope: !4784)
!4791 = !DILocation(line: 997, column: 30, scope: !4787)
!4792 = !DILocation(line: 997, column: 4, scope: !4787)
!4793 = !DILocation(line: 997, column: 28, scope: !4787)
!4794 = !DILocation(line: 996, column: 25, scope: !4787)
!4795 = !DILocation(line: 996, column: 2, scope: !4787)
!4796 = distinct !{!4796, !4790, !4797}
!4797 = !DILocation(line: 997, column: 30, scope: !4784)
!4798 = !DILocation(line: 999, column: 29, scope: !4780)
!4799 = !DILocation(line: 999, column: 28, scope: !4780)
!4800 = !DILocation(line: 999, column: 2, scope: !4780)
!4801 = !DILocation(line: 999, column: 26, scope: !4780)
!4802 = !DILocation(line: 1000, column: 20, scope: !4803)
!4803 = distinct !DILexicalBlock(scope: !4732, file: !3, line: 1000, column: 7)
!4804 = !DILocation(line: 1000, column: 14, scope: !4803)
!4805 = !DILocation(line: 1000, column: 38, scope: !4803)
!4806 = !DILocation(line: 1000, column: 36, scope: !4803)
!4807 = !DILocation(line: 1000, column: 12, scope: !4803)
!4808 = !DILocation(line: 1000, column: 44, scope: !4809)
!4809 = distinct !DILexicalBlock(scope: !4803, file: !3, line: 1000, column: 7)
!4810 = !DILocation(line: 1000, column: 48, scope: !4809)
!4811 = !DILocation(line: 1000, column: 55, scope: !4809)
!4812 = !DILocation(line: 1000, column: 53, scope: !4809)
!4813 = !DILocation(line: 1000, column: 46, scope: !4809)
!4814 = !DILocation(line: 1000, column: 7, scope: !4803)
!4815 = !DILocation(line: 1001, column: 28, scope: !4809)
!4816 = !DILocation(line: 1001, column: 2, scope: !4809)
!4817 = !DILocation(line: 1001, column: 26, scope: !4809)
!4818 = !DILocation(line: 1000, column: 62, scope: !4809)
!4819 = !DILocation(line: 1000, column: 70, scope: !4809)
!4820 = !DILocation(line: 1000, column: 68, scope: !4809)
!4821 = !DILocation(line: 1000, column: 7, scope: !4809)
!4822 = distinct !{!4822, !4814, !4823}
!4823 = !DILocation(line: 1001, column: 28, scope: !4803)
!4824 = !DILocation(line: 1002, column: 33, scope: !4732)
!4825 = !DILocation(line: 1002, column: 7, scope: !4732)
!4826 = !DILocation(line: 1003, column: 34, scope: !4732)
!4827 = !DILocation(line: 1003, column: 39, scope: !4732)
!4828 = !DILocation(line: 1003, column: 7, scope: !4732)
!4829 = !DILocation(line: 1004, column: 5, scope: !4732)
!4830 = !DILocation(line: 1005, column: 1, scope: !4673)
!4831 = distinct !DISubprogram(name: "fp_setter", scope: !3, file: !3, line: 8069, type: !4832, scopeLine: 8070, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!4832 = !DISubroutineType(types: !4833)
!4833 = !{!1130, !1188}
!4834 = !DILocalVariable(name: "insn", arg: 1, scope: !4831, file: !3, line: 8069, type: !1188)
!4835 = !DILocation(line: 8069, column: 16, scope: !4831)
!4836 = !DILocalVariable(name: "pat", scope: !4831, file: !3, line: 8071, type: !1188)
!4837 = !DILocation(line: 8071, column: 7, scope: !4831)
!4838 = !DILocation(line: 8071, column: 13, scope: !4831)
!4839 = !DILocation(line: 8072, column: 7, scope: !4840)
!4840 = distinct !DILexicalBlock(scope: !4831, file: !3, line: 8072, column: 7)
!4841 = !DILocation(line: 8072, column: 7, scope: !4831)
!4842 = !DILocalVariable(name: "expr", scope: !4843, file: !3, line: 8074, type: !1188)
!4843 = distinct !DILexicalBlock(scope: !4840, file: !3, line: 8073, column: 5)
!4844 = !DILocation(line: 8074, column: 11, scope: !4843)
!4845 = !DILocation(line: 8074, column: 33, scope: !4843)
!4846 = !DILocation(line: 8074, column: 18, scope: !4843)
!4847 = !DILocation(line: 8075, column: 11, scope: !4848)
!4848 = distinct !DILexicalBlock(scope: !4843, file: !3, line: 8075, column: 11)
!4849 = !DILocation(line: 8075, column: 11, scope: !4843)
!4850 = !DILocation(line: 8076, column: 8, scope: !4848)
!4851 = !DILocation(line: 8076, column: 6, scope: !4848)
!4852 = !DILocation(line: 8076, column: 2, scope: !4848)
!4853 = !DILocation(line: 8077, column: 5, scope: !4843)
!4854 = !DILocation(line: 8078, column: 7, scope: !4855)
!4855 = distinct !DILexicalBlock(scope: !4831, file: !3, line: 8078, column: 7)
!4856 = !DILocation(line: 8078, column: 22, scope: !4855)
!4857 = !DILocation(line: 8078, column: 7, scope: !4831)
!4858 = !DILocation(line: 8079, column: 12, scope: !4855)
!4859 = !DILocation(line: 8079, column: 30, scope: !4855)
!4860 = !DILocation(line: 8079, column: 27, scope: !4855)
!4861 = !DILocation(line: 8079, column: 5, scope: !4855)
!4862 = !DILocation(line: 8080, column: 12, scope: !4863)
!4863 = distinct !DILexicalBlock(scope: !4855, file: !3, line: 8080, column: 12)
!4864 = !DILocation(line: 8080, column: 27, scope: !4863)
!4865 = !DILocation(line: 8080, column: 12, scope: !4855)
!4866 = !DILocalVariable(name: "i", scope: !4867, file: !3, line: 8082, type: !1010)
!4867 = distinct !DILexicalBlock(scope: !4863, file: !3, line: 8081, column: 5)
!4868 = !DILocation(line: 8082, column: 11, scope: !4867)
!4869 = !DILocation(line: 8083, column: 16, scope: !4870)
!4870 = distinct !DILexicalBlock(scope: !4867, file: !3, line: 8083, column: 7)
!4871 = !DILocation(line: 8083, column: 33, scope: !4870)
!4872 = !DILocation(line: 8083, column: 14, scope: !4870)
!4873 = !DILocation(line: 8083, column: 12, scope: !4870)
!4874 = !DILocation(line: 8083, column: 38, scope: !4875)
!4875 = distinct !DILexicalBlock(scope: !4870, file: !3, line: 8083, column: 7)
!4876 = !DILocation(line: 8083, column: 40, scope: !4875)
!4877 = !DILocation(line: 8083, column: 7, scope: !4870)
!4878 = !DILocation(line: 8084, column: 6, scope: !4879)
!4879 = distinct !DILexicalBlock(scope: !4875, file: !3, line: 8084, column: 6)
!4880 = !DILocation(line: 8084, column: 37, scope: !4879)
!4881 = !DILocation(line: 8085, column: 6, scope: !4879)
!4882 = !DILocation(line: 8085, column: 9, scope: !4879)
!4883 = !DILocation(line: 8085, column: 43, scope: !4879)
!4884 = !DILocation(line: 8085, column: 40, scope: !4879)
!4885 = !DILocation(line: 8084, column: 6, scope: !4875)
!4886 = !DILocation(line: 8086, column: 4, scope: !4879)
!4887 = !DILocation(line: 8083, column: 47, scope: !4875)
!4888 = !DILocation(line: 8083, column: 7, scope: !4875)
!4889 = distinct !{!4889, !4877, !4890}
!4890 = !DILocation(line: 8086, column: 11, scope: !4870)
!4891 = !DILocation(line: 8087, column: 5, scope: !4867)
!4892 = !DILocation(line: 8088, column: 3, scope: !4831)
!4893 = !DILocation(line: 8089, column: 1, scope: !4831)
!4894 = distinct !DISubprogram(name: "vt_add_function_parameters", scope: !3, file: !3, line: 7946, type: !2788, scopeLine: 7947, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!4895 = !DILocalVariable(name: "parm", scope: !4894, file: !3, line: 7948, type: !1011)
!4896 = !DILocation(line: 7948, column: 8, scope: !4894)
!4897 = !DILocation(line: 7950, column: 15, scope: !4898)
!4898 = distinct !DILexicalBlock(scope: !4894, file: !3, line: 7950, column: 3)
!4899 = !DILocation(line: 7950, column: 13, scope: !4898)
!4900 = !DILocation(line: 7950, column: 8, scope: !4898)
!4901 = !DILocation(line: 7951, column: 8, scope: !4902)
!4902 = distinct !DILexicalBlock(scope: !4898, file: !3, line: 7950, column: 3)
!4903 = !DILocation(line: 7950, column: 3, scope: !4898)
!4904 = !DILocalVariable(name: "decl_rtl", scope: !4905, file: !3, line: 7953, type: !1188)
!4905 = distinct !DILexicalBlock(scope: !4902, file: !3, line: 7952, column: 5)
!4906 = !DILocation(line: 7953, column: 11, scope: !4905)
!4907 = !DILocation(line: 7953, column: 22, scope: !4905)
!4908 = !DILocalVariable(name: "incoming", scope: !4905, file: !3, line: 7954, type: !1188)
!4909 = !DILocation(line: 7954, column: 11, scope: !4905)
!4910 = !DILocation(line: 7954, column: 22, scope: !4905)
!4911 = !DILocalVariable(name: "decl", scope: !4905, file: !3, line: 7955, type: !1011)
!4912 = !DILocation(line: 7955, column: 12, scope: !4905)
!4913 = !DILocalVariable(name: "mode", scope: !4905, file: !3, line: 7956, type: !384)
!4914 = !DILocation(line: 7956, column: 25, scope: !4905)
!4915 = !DILocalVariable(name: "offset", scope: !4905, file: !3, line: 7957, type: !1067)
!4916 = !DILocation(line: 7957, column: 21, scope: !4905)
!4917 = !DILocalVariable(name: "out", scope: !4905, file: !3, line: 7958, type: !2418)
!4918 = !DILocation(line: 7958, column: 21, scope: !4905)
!4919 = !DILocalVariable(name: "dv", scope: !4905, file: !3, line: 7959, type: !2410)
!4920 = !DILocation(line: 7959, column: 21, scope: !4905)
!4921 = !DILocation(line: 7961, column: 11, scope: !4922)
!4922 = distinct !DILexicalBlock(scope: !4905, file: !3, line: 7961, column: 11)
!4923 = !DILocation(line: 7961, column: 28, scope: !4922)
!4924 = !DILocation(line: 7961, column: 11, scope: !4905)
!4925 = !DILocation(line: 7962, column: 2, scope: !4922)
!4926 = !DILocation(line: 7964, column: 12, scope: !4927)
!4927 = distinct !DILexicalBlock(scope: !4905, file: !3, line: 7964, column: 11)
!4928 = !DILocation(line: 7964, column: 11, scope: !4905)
!4929 = !DILocation(line: 7965, column: 2, scope: !4927)
!4930 = !DILocation(line: 7967, column: 12, scope: !4931)
!4931 = distinct !DILexicalBlock(scope: !4905, file: !3, line: 7967, column: 11)
!4932 = !DILocation(line: 7967, column: 21, scope: !4931)
!4933 = !DILocation(line: 7967, column: 25, scope: !4931)
!4934 = !DILocation(line: 7967, column: 11, scope: !4905)
!4935 = !DILocation(line: 7968, column: 2, scope: !4931)
!4936 = !DILocation(line: 7970, column: 11, scope: !4937)
!4937 = distinct !DILexicalBlock(scope: !4905, file: !3, line: 7970, column: 11)
!4938 = !DILocation(line: 7970, column: 31, scope: !4937)
!4939 = !DILocation(line: 7970, column: 42, scope: !4937)
!4940 = !DILocation(line: 7970, column: 45, scope: !4937)
!4941 = !DILocation(line: 7970, column: 65, scope: !4937)
!4942 = !DILocation(line: 7970, column: 11, scope: !4905)
!4943 = !DILocation(line: 7971, column: 2, scope: !4937)
!4944 = !DILocation(line: 7973, column: 36, scope: !4945)
!4945 = distinct !DILexicalBlock(scope: !4905, file: !3, line: 7973, column: 11)
!4946 = !DILocation(line: 7973, column: 12, scope: !4945)
!4947 = !DILocation(line: 7973, column: 11, scope: !4905)
!4948 = !DILocation(line: 7975, column: 8, scope: !4949)
!4949 = distinct !DILexicalBlock(scope: !4950, file: !3, line: 7975, column: 8)
!4950 = distinct !DILexicalBlock(scope: !4945, file: !3, line: 7974, column: 2)
!4951 = !DILocation(line: 7975, column: 25, scope: !4949)
!4952 = !DILocation(line: 7975, column: 28, scope: !4949)
!4953 = !DILocation(line: 7975, column: 8, scope: !4950)
!4954 = !DILocation(line: 7978, column: 15, scope: !4955)
!4955 = distinct !DILexicalBlock(scope: !4949, file: !3, line: 7976, column: 6)
!4956 = !DILocation(line: 7979, column: 15, scope: !4955)
!4957 = !DILocation(line: 7979, column: 13, scope: !4955)
!4958 = !DILocation(line: 7980, column: 32, scope: !4955)
!4959 = !DILocation(line: 7980, column: 53, scope: !4955)
!4960 = !DILocation(line: 7980, column: 19, scope: !4955)
!4961 = !DILocation(line: 7980, column: 17, scope: !4955)
!4962 = !DILocation(line: 7981, column: 6, scope: !4955)
!4963 = !DILocation(line: 7984, column: 37, scope: !4964)
!4964 = distinct !DILexicalBlock(scope: !4965, file: !3, line: 7984, column: 12)
!4965 = distinct !DILexicalBlock(scope: !4949, file: !3, line: 7983, column: 6)
!4966 = !DILocation(line: 7984, column: 13, scope: !4964)
!4967 = !DILocation(line: 7984, column: 12, scope: !4965)
!4968 = !DILocation(line: 7985, column: 3, scope: !4964)
!4969 = !DILocation(line: 7986, column: 39, scope: !4965)
!4970 = !DILocation(line: 7987, column: 11, scope: !4965)
!4971 = !DILocation(line: 7986, column: 18, scope: !4965)
!4972 = !DILocation(line: 7986, column: 15, scope: !4965)
!4973 = !DILocation(line: 7989, column: 2, scope: !4950)
!4974 = !DILocation(line: 7991, column: 12, scope: !4975)
!4975 = distinct !DILexicalBlock(scope: !4905, file: !3, line: 7991, column: 11)
!4976 = !DILocation(line: 7991, column: 11, scope: !4905)
!4977 = !DILocation(line: 7992, column: 2, scope: !4975)
!4978 = !DILocation(line: 7994, column: 11, scope: !4979)
!4979 = distinct !DILexicalBlock(scope: !4905, file: !3, line: 7994, column: 11)
!4980 = !DILocation(line: 7994, column: 19, scope: !4979)
!4981 = !DILocation(line: 7994, column: 16, scope: !4979)
!4982 = !DILocation(line: 7994, column: 11, scope: !4905)
!4983 = !DILocation(line: 8001, column: 4, scope: !4984)
!4984 = distinct !DILexicalBlock(scope: !4979, file: !3, line: 7995, column: 2)
!4985 = !DILocation(line: 8002, column: 11, scope: !4984)
!4986 = !DILocation(line: 8003, column: 2, scope: !4984)
!4987 = !DILocation(line: 8005, column: 25, scope: !4988)
!4988 = distinct !DILexicalBlock(scope: !4905, file: !3, line: 8005, column: 11)
!4989 = !DILocation(line: 8005, column: 35, scope: !4988)
!4990 = !DILocation(line: 8005, column: 41, scope: !4988)
!4991 = !DILocation(line: 8005, column: 12, scope: !4988)
!4992 = !DILocation(line: 8005, column: 11, scope: !4905)
!4993 = !DILocation(line: 8006, column: 2, scope: !4988)
!4994 = !DILocation(line: 8008, column: 14, scope: !4905)
!4995 = !DILocation(line: 8008, column: 37, scope: !4905)
!4996 = !DILocation(line: 8008, column: 11, scope: !4905)
!4997 = !DILocation(line: 8010, column: 26, scope: !4905)
!4998 = !DILocation(line: 8010, column: 12, scope: !4905)
!4999 = !DILocation(line: 8010, column: 10, scope: !4905)
!5000 = !DILocation(line: 8012, column: 34, scope: !5001)
!5001 = distinct !DILexicalBlock(scope: !4905, file: !3, line: 8012, column: 11)
!5002 = !DILocation(line: 8012, column: 11, scope: !5001)
!5003 = !DILocation(line: 8017, column: 4, scope: !5001)
!5004 = !DILocation(line: 8017, column: 7, scope: !5001)
!5005 = !DILocation(line: 8017, column: 27, scope: !5001)
!5006 = !DILocation(line: 8012, column: 11, scope: !4905)
!5007 = !DILocalVariable(name: "val", scope: !5008, file: !3, line: 8019, type: !1257)
!5008 = distinct !DILexicalBlock(scope: !5001, file: !3, line: 8018, column: 2)
!5009 = !DILocation(line: 8019, column: 16, scope: !5008)
!5010 = !DILocation(line: 8025, column: 8, scope: !5011)
!5011 = distinct !DILexicalBlock(scope: !5008, file: !3, line: 8025, column: 8)
!5012 = !DILocation(line: 8025, column: 8, scope: !5008)
!5013 = !DILocation(line: 8026, column: 6, scope: !5011)
!5014 = !DILocation(line: 8028, column: 38, scope: !5008)
!5015 = !DILocation(line: 8028, column: 44, scope: !5008)
!5016 = !DILocation(line: 8028, column: 25, scope: !5008)
!5017 = !DILocation(line: 8028, column: 55, scope: !5008)
!5018 = !DILocation(line: 8028, column: 10, scope: !5008)
!5019 = !DILocation(line: 8028, column: 8, scope: !5008)
!5020 = !DILocation(line: 8032, column: 8, scope: !5021)
!5021 = distinct !DILexicalBlock(scope: !5008, file: !3, line: 8032, column: 8)
!5022 = !DILocation(line: 8032, column: 8, scope: !5008)
!5023 = !DILocation(line: 8034, column: 24, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !5021, file: !3, line: 8033, column: 6)
!5025 = !DILocation(line: 8034, column: 8, scope: !5024)
!5026 = !DILocation(line: 8035, column: 27, scope: !5024)
!5027 = !DILocation(line: 8035, column: 32, scope: !5024)
!5028 = !DILocation(line: 8035, column: 37, scope: !5024)
!5029 = !DILocation(line: 8035, column: 46, scope: !5024)
!5030 = !DILocation(line: 8035, column: 50, scope: !5024)
!5031 = !DILocation(line: 8035, column: 8, scope: !5024)
!5032 = !DILocation(line: 8037, column: 28, scope: !5024)
!5033 = !DILocation(line: 8037, column: 33, scope: !5024)
!5034 = !DILocation(line: 8037, column: 13, scope: !5024)
!5035 = !DILocation(line: 8037, column: 11, scope: !5024)
!5036 = !DILocation(line: 8038, column: 6, scope: !5024)
!5037 = !DILocation(line: 8039, column: 2, scope: !5008)
!5038 = !DILocation(line: 8041, column: 11, scope: !5039)
!5039 = distinct !DILexicalBlock(scope: !4905, file: !3, line: 8041, column: 11)
!5040 = !DILocation(line: 8041, column: 11, scope: !4905)
!5041 = !DILocation(line: 8043, column: 28, scope: !5042)
!5042 = distinct !DILexicalBlock(scope: !5039, file: !3, line: 8042, column: 2)
!5043 = !DILocation(line: 8043, column: 34, scope: !5042)
!5044 = !DILocation(line: 8043, column: 15, scope: !5042)
!5045 = !DILocation(line: 8043, column: 13, scope: !5042)
!5046 = !DILocation(line: 8044, column: 4, scope: !5042)
!5047 = !DILocation(line: 8045, column: 24, scope: !5042)
!5048 = !DILocation(line: 8045, column: 29, scope: !5042)
!5049 = !DILocation(line: 8045, column: 34, scope: !5042)
!5050 = !DILocation(line: 8045, column: 53, scope: !5042)
!5051 = !DILocation(line: 8045, column: 57, scope: !5042)
!5052 = !DILocation(line: 8046, column: 9, scope: !5042)
!5053 = !DILocation(line: 8045, column: 4, scope: !5042)
!5054 = !DILocation(line: 8047, column: 23, scope: !5042)
!5055 = !DILocation(line: 8047, column: 28, scope: !5042)
!5056 = !DILocation(line: 8047, column: 38, scope: !5042)
!5057 = !DILocation(line: 8047, column: 42, scope: !5042)
!5058 = !DILocation(line: 8047, column: 4, scope: !5042)
!5059 = !DILocation(line: 8049, column: 2, scope: !5042)
!5060 = !DILocation(line: 8050, column: 16, scope: !5061)
!5061 = distinct !DILexicalBlock(scope: !5039, file: !3, line: 8050, column: 16)
!5062 = !DILocation(line: 8050, column: 16, scope: !5039)
!5063 = !DILocation(line: 8052, column: 28, scope: !5064)
!5064 = distinct !DILexicalBlock(scope: !5061, file: !3, line: 8051, column: 2)
!5065 = !DILocation(line: 8052, column: 34, scope: !5064)
!5066 = !DILocation(line: 8052, column: 15, scope: !5064)
!5067 = !DILocation(line: 8052, column: 13, scope: !5064)
!5068 = !DILocation(line: 8053, column: 23, scope: !5064)
!5069 = !DILocation(line: 8053, column: 28, scope: !5064)
!5070 = !DILocation(line: 8053, column: 38, scope: !5064)
!5071 = !DILocation(line: 8053, column: 42, scope: !5064)
!5072 = !DILocation(line: 8053, column: 4, scope: !5064)
!5073 = !DILocation(line: 8055, column: 2, scope: !5064)
!5074 = !DILocation(line: 8056, column: 5, scope: !4905)
!5075 = !DILocation(line: 7951, column: 21, scope: !4902)
!5076 = !DILocation(line: 7951, column: 19, scope: !4902)
!5077 = !DILocation(line: 7950, column: 3, scope: !4902)
!5078 = distinct !{!5078, !4903, !5079}
!5079 = !DILocation(line: 8056, column: 5, scope: !4898)
!5080 = !DILocation(line: 8058, column: 7, scope: !5081)
!5081 = distinct !DILexicalBlock(scope: !4894, file: !3, line: 8058, column: 7)
!5082 = !DILocation(line: 8058, column: 7, scope: !4894)
!5083 = !DILocation(line: 8060, column: 7, scope: !5084)
!5084 = distinct !DILexicalBlock(scope: !5081, file: !3, line: 8059, column: 5)
!5085 = !DILocation(line: 8061, column: 27, scope: !5084)
!5086 = !DILocation(line: 8061, column: 7, scope: !5084)
!5087 = !DILocation(line: 8062, column: 5, scope: !5084)
!5088 = !DILocation(line: 8064, column: 1, scope: !4894)
!5089 = distinct !DISubprogram(name: "dv_htab_hash", scope: !3, file: !3, line: 1139, type: !5090, scopeLine: 1140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!5090 = !DISubroutineType(types: !5091)
!5091 = !{!1836, !2410}
!5092 = !DILocalVariable(name: "dv", arg: 1, scope: !5089, file: !3, line: 1139, type: !2410)
!5093 = !DILocation(line: 1139, column: 29, scope: !5089)
!5094 = !DILocation(line: 1141, column: 31, scope: !5089)
!5095 = !DILocation(line: 1141, column: 23, scope: !5089)
!5096 = !DILocation(line: 1141, column: 10, scope: !5089)
!5097 = !DILocation(line: 1141, column: 3, scope: !5089)
!5098 = distinct !DISubprogram(name: "dv_uid2hash", scope: !3, file: !3, line: 1131, type: !5099, scopeLine: 1132, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!5099 = !DISubroutineType(types: !5100)
!5100 = !{!1836, !5101}
!5101 = !DIDerivedType(tag: DW_TAG_typedef, name: "dvuid", file: !3, line: 1115, baseType: !7)
!5102 = !DILocalVariable(name: "uid", arg: 1, scope: !5098, file: !3, line: 1131, type: !5101)
!5103 = !DILocation(line: 1131, column: 20, scope: !5098)
!5104 = !DILocation(line: 1133, column: 10, scope: !5098)
!5105 = !DILocation(line: 1133, column: 3, scope: !5098)
!5106 = distinct !DISubprogram(name: "dv_uid", scope: !3, file: !3, line: 1120, type: !5107, scopeLine: 1121, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!5107 = !DISubroutineType(types: !5108)
!5108 = !{!5101, !2410}
!5109 = !DILocalVariable(name: "dv", arg: 1, scope: !5106, file: !3, line: 1120, type: !2410)
!5110 = !DILocation(line: 1120, column: 23, scope: !5106)
!5111 = !DILocation(line: 1122, column: 22, scope: !5112)
!5112 = distinct !DILexicalBlock(scope: !5106, file: !3, line: 1122, column: 7)
!5113 = !DILocation(line: 1122, column: 7, scope: !5112)
!5114 = !DILocation(line: 1122, column: 7, scope: !5106)
!5115 = !DILocation(line: 1123, column: 12, scope: !5112)
!5116 = !DILocation(line: 1123, column: 47, scope: !5112)
!5117 = !DILocation(line: 1123, column: 5, scope: !5112)
!5118 = !DILocation(line: 1125, column: 12, scope: !5112)
!5119 = !DILocation(line: 1125, column: 5, scope: !5112)
!5120 = !DILocation(line: 1126, column: 1, scope: !5106)
!5121 = distinct !DISubprogram(name: "dv_as_opaque", scope: !3, file: !3, line: 1043, type: !5122, scopeLine: 1044, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!5122 = !DISubroutineType(types: !5123)
!5123 = !{!1313, !2410}
!5124 = !DILocalVariable(name: "dv", arg: 1, scope: !5121, file: !3, line: 1043, type: !2410)
!5125 = !DILocation(line: 1043, column: 29, scope: !5121)
!5126 = !DILocation(line: 1045, column: 10, scope: !5121)
!5127 = !DILocation(line: 1045, column: 3, scope: !5121)
!5128 = distinct !DISubprogram(name: "dv_pool", scope: !3, file: !3, line: 1075, type: !5129, scopeLine: 1076, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!5129 = !DISubroutineType(types: !5130)
!5130 = !{!2548, !2410}
!5131 = !DILocalVariable(name: "dv", arg: 1, scope: !5128, file: !3, line: 1075, type: !2410)
!5132 = !DILocation(line: 1075, column: 24, scope: !5128)
!5133 = !DILocation(line: 1077, column: 24, scope: !5128)
!5134 = !DILocation(line: 1077, column: 10, scope: !5128)
!5135 = !DILocation(line: 1077, column: 30, scope: !5128)
!5136 = !DILocation(line: 1077, column: 44, scope: !5128)
!5137 = !DILocation(line: 1077, column: 3, scope: !5128)
!5138 = distinct !DISubprogram(name: "dv_onepart_p", scope: !3, file: !3, line: 1051, type: !2663, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!5139 = !DILocalVariable(name: "dv", arg: 1, scope: !5138, file: !3, line: 1051, type: !2410)
!5140 = !DILocation(line: 1051, column: 29, scope: !5138)
!5141 = !DILocalVariable(name: "decl", scope: !5138, file: !3, line: 1053, type: !1011)
!5142 = !DILocation(line: 1053, column: 8, scope: !5138)
!5143 = !DILocation(line: 1055, column: 8, scope: !5144)
!5144 = distinct !DILexicalBlock(scope: !5138, file: !3, line: 1055, column: 7)
!5145 = !DILocation(line: 1055, column: 7, scope: !5138)
!5146 = !DILocation(line: 1056, column: 5, scope: !5144)
!5147 = !DILocation(line: 1058, column: 22, scope: !5148)
!5148 = distinct !DILexicalBlock(scope: !5138, file: !3, line: 1058, column: 7)
!5149 = !DILocation(line: 1058, column: 7, scope: !5148)
!5150 = !DILocation(line: 1058, column: 7, scope: !5138)
!5151 = !DILocation(line: 1059, column: 5, scope: !5148)
!5152 = !DILocation(line: 1061, column: 22, scope: !5138)
!5153 = !DILocation(line: 1061, column: 10, scope: !5138)
!5154 = !DILocation(line: 1061, column: 8, scope: !5138)
!5155 = !DILocation(line: 1063, column: 8, scope: !5156)
!5156 = distinct !DILexicalBlock(scope: !5138, file: !3, line: 1063, column: 7)
!5157 = !DILocation(line: 1063, column: 7, scope: !5138)
!5158 = !DILocation(line: 1064, column: 5, scope: !5156)
!5159 = !DILocation(line: 1066, column: 7, scope: !5160)
!5160 = distinct !DILexicalBlock(scope: !5138, file: !3, line: 1066, column: 7)
!5161 = !DILocation(line: 1066, column: 24, scope: !5160)
!5162 = !DILocation(line: 1066, column: 7, scope: !5138)
!5163 = !DILocation(line: 1067, column: 5, scope: !5160)
!5164 = !DILocation(line: 1069, column: 34, scope: !5138)
!5165 = !DILocation(line: 1069, column: 11, scope: !5138)
!5166 = !DILocation(line: 1069, column: 40, scope: !5138)
!5167 = !DILocation(line: 1069, column: 10, scope: !5138)
!5168 = !DILocation(line: 1069, column: 3, scope: !5138)
!5169 = !DILocation(line: 1070, column: 1, scope: !5138)
!5170 = distinct !DISubprogram(name: "init_attrs_list_set", scope: !3, file: !3, line: 1218, type: !5171, scopeLine: 1219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!5171 = !DISubroutineType(types: !5172)
!5172 = !{null, !5173}
!5173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2403, size: 64)
!5174 = !DILocalVariable(name: "set", arg: 1, scope: !5170, file: !3, line: 1218, type: !5173)
!5175 = !DILocation(line: 1218, column: 29, scope: !5170)
!5176 = !DILocalVariable(name: "i", scope: !5170, file: !3, line: 1220, type: !1010)
!5177 = !DILocation(line: 1220, column: 7, scope: !5170)
!5178 = !DILocation(line: 1222, column: 10, scope: !5179)
!5179 = distinct !DILexicalBlock(scope: !5170, file: !3, line: 1222, column: 3)
!5180 = !DILocation(line: 1222, column: 8, scope: !5179)
!5181 = !DILocation(line: 1222, column: 15, scope: !5182)
!5182 = distinct !DILexicalBlock(scope: !5179, file: !3, line: 1222, column: 3)
!5183 = !DILocation(line: 1222, column: 17, scope: !5182)
!5184 = !DILocation(line: 1222, column: 3, scope: !5179)
!5185 = !DILocation(line: 1223, column: 5, scope: !5182)
!5186 = !DILocation(line: 1223, column: 9, scope: !5182)
!5187 = !DILocation(line: 1223, column: 12, scope: !5182)
!5188 = !DILocation(line: 1222, column: 43, scope: !5182)
!5189 = !DILocation(line: 1222, column: 3, scope: !5182)
!5190 = distinct !{!5190, !5184, !5191}
!5191 = !DILocation(line: 1223, column: 14, scope: !5179)
!5192 = !DILocation(line: 1224, column: 1, scope: !5170)
!5193 = distinct !DISubprogram(name: "shared_hash_copy", scope: !3, file: !3, line: 1366, type: !5194, scopeLine: 1367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!5194 = !DISubroutineType(types: !5195)
!5195 = !{!2363, !2363}
!5196 = !DILocalVariable(name: "vars", arg: 1, scope: !5193, file: !3, line: 1366, type: !2363)
!5197 = !DILocation(line: 1366, column: 31, scope: !5193)
!5198 = !DILocation(line: 1368, column: 3, scope: !5193)
!5199 = !DILocation(line: 1368, column: 9, scope: !5193)
!5200 = !DILocation(line: 1368, column: 17, scope: !5193)
!5201 = !DILocation(line: 1369, column: 10, scope: !5193)
!5202 = !DILocation(line: 1369, column: 3, scope: !5193)
!5203 = distinct !DISubprogram(name: "ei_start_1", scope: !513, file: !513, line: 696, type: !5204, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!5204 = !DISubroutineType(types: !5205)
!5205 = !{!2464, !2469}
!5206 = !DILocalVariable(name: "ev", arg: 1, scope: !5203, file: !513, line: 696, type: !2469)
!5207 = !DILocation(line: 696, column: 28, scope: !5203)
!5208 = !DILocalVariable(name: "i", scope: !5203, file: !513, line: 698, type: !2464)
!5209 = !DILocation(line: 698, column: 17, scope: !5203)
!5210 = !DILocation(line: 700, column: 5, scope: !5203)
!5211 = !DILocation(line: 700, column: 11, scope: !5203)
!5212 = !DILocation(line: 701, column: 17, scope: !5203)
!5213 = !DILocation(line: 701, column: 5, scope: !5203)
!5214 = !DILocation(line: 701, column: 15, scope: !5203)
!5215 = !DILocation(line: 703, column: 3, scope: !5203)
!5216 = distinct !DISubprogram(name: "ei_edge", scope: !513, file: !513, line: 752, type: !5217, scopeLine: 753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!5217 = !DISubroutineType(types: !5218)
!5218 = !{!1340, !2464}
!5219 = !DILocalVariable(name: "i", arg: 1, scope: !5216, file: !513, line: 752, type: !2464)
!5220 = !DILocation(line: 752, column: 24, scope: !5216)
!5221 = !DILocation(line: 754, column: 10, scope: !5216)
!5222 = !DILocation(line: 754, column: 3, scope: !5216)
!5223 = distinct !DISubprogram(name: "VEC_edge_base_length", scope: !513, file: !513, line: 150, type: !5224, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!5224 = !DISubroutineType(types: !5225)
!5225 = !{!7, !5226}
!5226 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5227, size: 64)
!5227 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1333)
!5228 = !DILocalVariable(name: "vec_", arg: 1, scope: !5223, file: !513, line: 150, type: !5226)
!5229 = !DILocation(line: 150, column: 1, scope: !5223)
!5230 = distinct !DISubprogram(name: "ei_one_before_end_p", scope: !513, file: !513, line: 729, type: !5231, scopeLine: 730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!5231 = !DISubroutineType(types: !5232)
!5232 = !{!1130, !2464}
!5233 = !DILocalVariable(name: "i", arg: 1, scope: !5230, file: !513, line: 729, type: !2464)
!5234 = !DILocation(line: 729, column: 36, scope: !5230)
!5235 = !DILocation(line: 731, column: 13, scope: !5230)
!5236 = !DILocation(line: 731, column: 19, scope: !5230)
!5237 = !DILocation(line: 731, column: 26, scope: !5230)
!5238 = !DILocation(line: 731, column: 23, scope: !5230)
!5239 = !DILocation(line: 731, column: 10, scope: !5230)
!5240 = !DILocation(line: 731, column: 3, scope: !5230)
!5241 = distinct !DISubprogram(name: "ei_next", scope: !513, file: !513, line: 736, type: !5242, scopeLine: 737, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!5242 = !DISubroutineType(types: !5243)
!5243 = !{null, !2463}
!5244 = !DILocalVariable(name: "i", arg: 1, scope: !5241, file: !513, line: 736, type: !2463)
!5245 = !DILocation(line: 736, column: 25, scope: !5241)
!5246 = !DILocation(line: 738, column: 3, scope: !5241)
!5247 = !DILocation(line: 739, column: 3, scope: !5241)
!5248 = !DILocation(line: 739, column: 6, scope: !5241)
!5249 = !DILocation(line: 739, column: 11, scope: !5241)
!5250 = !DILocation(line: 740, column: 1, scope: !5241)
!5251 = distinct !DISubprogram(name: "VEC_edge_base_index", scope: !513, file: !513, line: 150, type: !5252, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!5252 = !DISubroutineType(types: !5253)
!5253 = !{!1340, !5226, !7}
!5254 = !DILocalVariable(name: "vec_", arg: 1, scope: !5251, file: !513, line: 150, type: !5226)
!5255 = !DILocation(line: 150, column: 1, scope: !5251)
!5256 = !DILocalVariable(name: "ix_", arg: 2, scope: !5251, file: !513, line: 150, type: !7)
!5257 = !DILocation(line: 0, scope: !5251)
!5258 = distinct !DISubprogram(name: "ei_container", scope: !513, file: !513, line: 685, type: !5259, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!5259 = !DISubroutineType(types: !5260)
!5260 = !{!1328, !2464}
!5261 = !DILocalVariable(name: "i", arg: 1, scope: !5258, file: !513, line: 685, type: !2464)
!5262 = !DILocation(line: 685, column: 29, scope: !5258)
!5263 = !DILocation(line: 687, column: 3, scope: !5258)
!5264 = !DILocation(line: 688, column: 13, scope: !5258)
!5265 = !DILocation(line: 688, column: 10, scope: !5258)
!5266 = !DILocation(line: 688, column: 3, scope: !5258)
!5267 = distinct !DISubprogram(name: "rhs_regno", scope: !561, file: !561, line: 1051, type: !5268, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!5268 = !DISubroutineType(types: !5269)
!5269 = !{!7, !5270}
!5270 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_rtx", file: !1012, line: 51, baseType: !2487)
!5271 = !DILocalVariable(name: "x", arg: 1, scope: !5267, file: !561, line: 1051, type: !5270)
!5272 = !DILocation(line: 1051, column: 22, scope: !5267)
!5273 = !DILocation(line: 1053, column: 10, scope: !5267)
!5274 = !DILocation(line: 1053, column: 3, scope: !5267)
!5275 = distinct !DISubprogram(name: "preserve_value", scope: !3, file: !3, line: 4893, type: !5276, scopeLine: 4894, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!5276 = !DISubroutineType(types: !5277)
!5277 = !{null, !1257}
!5278 = !DILocalVariable(name: "val", arg: 1, scope: !5275, file: !3, line: 4893, type: !1257)
!5279 = !DILocation(line: 4893, column: 29, scope: !5275)
!5280 = !DILocation(line: 4895, column: 26, scope: !5275)
!5281 = !DILocation(line: 4895, column: 3, scope: !5275)
!5282 = !DILocation(line: 4896, column: 3, scope: !5275)
!5283 = !DILocation(line: 4897, column: 1, scope: !5275)
!5284 = distinct !DISubprogram(name: "var_reg_decl_set", scope: !3, file: !3, line: 1589, type: !5285, scopeLine: 1592, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!5285 = !DISubroutineType(types: !5286)
!5286 = !{null, !2418, !1188, !734, !2410, !1067, !1188, !739}
!5287 = !DILocalVariable(name: "set", arg: 1, scope: !5284, file: !3, line: 1589, type: !2418)
!5288 = !DILocation(line: 1589, column: 33, scope: !5284)
!5289 = !DILocalVariable(name: "loc", arg: 2, scope: !5284, file: !3, line: 1589, type: !1188)
!5290 = !DILocation(line: 1589, column: 42, scope: !5284)
!5291 = !DILocalVariable(name: "initialized", arg: 3, scope: !5284, file: !3, line: 1589, type: !734)
!5292 = !DILocation(line: 1589, column: 68, scope: !5284)
!5293 = !DILocalVariable(name: "dv", arg: 4, scope: !5284, file: !3, line: 1590, type: !2410)
!5294 = !DILocation(line: 1590, column: 19, scope: !5284)
!5295 = !DILocalVariable(name: "offset", arg: 5, scope: !5284, file: !3, line: 1590, type: !1067)
!5296 = !DILocation(line: 1590, column: 37, scope: !5284)
!5297 = !DILocalVariable(name: "set_src", arg: 6, scope: !5284, file: !3, line: 1590, type: !1188)
!5298 = !DILocation(line: 1590, column: 49, scope: !5284)
!5299 = !DILocalVariable(name: "iopt", arg: 7, scope: !5284, file: !3, line: 1591, type: !739)
!5300 = !DILocation(line: 1591, column: 24, scope: !5284)
!5301 = !DILocalVariable(name: "node", scope: !5284, file: !3, line: 1593, type: !2403)
!5302 = !DILocation(line: 1593, column: 9, scope: !5284)
!5303 = !DILocalVariable(name: "decl_p", scope: !5284, file: !3, line: 1594, type: !1130)
!5304 = !DILocation(line: 1594, column: 8, scope: !5284)
!5305 = !DILocation(line: 1594, column: 31, scope: !5284)
!5306 = !DILocation(line: 1594, column: 17, scope: !5284)
!5307 = !DILocation(line: 1596, column: 7, scope: !5308)
!5308 = distinct !DILexicalBlock(scope: !5284, file: !3, line: 1596, column: 7)
!5309 = !DILocation(line: 1596, column: 7, scope: !5284)
!5310 = !DILocation(line: 1597, column: 52, scope: !5308)
!5311 = !DILocation(line: 1597, column: 40, scope: !5308)
!5312 = !DILocation(line: 1597, column: 24, scope: !5308)
!5313 = !DILocation(line: 1597, column: 10, scope: !5308)
!5314 = !DILocation(line: 1597, column: 8, scope: !5308)
!5315 = !DILocation(line: 1597, column: 5, scope: !5308)
!5316 = !DILocation(line: 1599, column: 15, scope: !5317)
!5317 = distinct !DILexicalBlock(scope: !5284, file: !3, line: 1599, column: 3)
!5318 = !DILocation(line: 1599, column: 20, scope: !5317)
!5319 = !DILocation(line: 1599, column: 25, scope: !5317)
!5320 = !DILocation(line: 1599, column: 13, scope: !5317)
!5321 = !DILocation(line: 1599, column: 8, scope: !5317)
!5322 = !DILocation(line: 1599, column: 39, scope: !5323)
!5323 = distinct !DILexicalBlock(scope: !5317, file: !3, line: 1599, column: 3)
!5324 = !DILocation(line: 1599, column: 3, scope: !5317)
!5325 = !DILocation(line: 1600, column: 23, scope: !5326)
!5326 = distinct !DILexicalBlock(scope: !5323, file: !3, line: 1600, column: 9)
!5327 = !DILocation(line: 1600, column: 29, scope: !5326)
!5328 = !DILocation(line: 1600, column: 9, scope: !5326)
!5329 = !DILocation(line: 1600, column: 50, scope: !5326)
!5330 = !DILocation(line: 1600, column: 36, scope: !5326)
!5331 = !DILocation(line: 1600, column: 33, scope: !5326)
!5332 = !DILocation(line: 1601, column: 2, scope: !5326)
!5333 = !DILocation(line: 1601, column: 5, scope: !5326)
!5334 = !DILocation(line: 1601, column: 11, scope: !5326)
!5335 = !DILocation(line: 1601, column: 21, scope: !5326)
!5336 = !DILocation(line: 1601, column: 18, scope: !5326)
!5337 = !DILocation(line: 1600, column: 9, scope: !5323)
!5338 = !DILocation(line: 1602, column: 7, scope: !5326)
!5339 = !DILocation(line: 1599, column: 52, scope: !5323)
!5340 = !DILocation(line: 1599, column: 58, scope: !5323)
!5341 = !DILocation(line: 1599, column: 50, scope: !5323)
!5342 = !DILocation(line: 1599, column: 3, scope: !5323)
!5343 = distinct !{!5343, !5324, !5344}
!5344 = !DILocation(line: 1602, column: 7, scope: !5317)
!5345 = !DILocation(line: 1603, column: 8, scope: !5346)
!5346 = distinct !DILexicalBlock(scope: !5284, file: !3, line: 1603, column: 7)
!5347 = !DILocation(line: 1603, column: 7, scope: !5284)
!5348 = !DILocation(line: 1604, column: 25, scope: !5346)
!5349 = !DILocation(line: 1604, column: 30, scope: !5346)
!5350 = !DILocation(line: 1604, column: 35, scope: !5346)
!5351 = !DILocation(line: 1604, column: 49, scope: !5346)
!5352 = !DILocation(line: 1604, column: 53, scope: !5346)
!5353 = !DILocation(line: 1604, column: 61, scope: !5346)
!5354 = !DILocation(line: 1604, column: 5, scope: !5346)
!5355 = !DILocation(line: 1605, column: 22, scope: !5284)
!5356 = !DILocation(line: 1605, column: 27, scope: !5284)
!5357 = !DILocation(line: 1605, column: 32, scope: !5284)
!5358 = !DILocation(line: 1605, column: 36, scope: !5284)
!5359 = !DILocation(line: 1605, column: 44, scope: !5284)
!5360 = !DILocation(line: 1605, column: 57, scope: !5284)
!5361 = !DILocation(line: 1605, column: 66, scope: !5284)
!5362 = !DILocation(line: 1605, column: 3, scope: !5284)
!5363 = !DILocation(line: 1606, column: 1, scope: !5284)
!5364 = distinct !DISubprogram(name: "dv_from_value", scope: !3, file: !3, line: 1094, type: !5365, scopeLine: 1095, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!5365 = !DISubroutineType(types: !5366)
!5366 = !{!2410, !1188}
!5367 = !DILocalVariable(name: "value", arg: 1, scope: !5364, file: !3, line: 1094, type: !1188)
!5368 = !DILocation(line: 1094, column: 20, scope: !5364)
!5369 = !DILocalVariable(name: "dv", scope: !5364, file: !3, line: 1096, type: !2410)
!5370 = !DILocation(line: 1096, column: 17, scope: !5364)
!5371 = !DILocation(line: 1097, column: 8, scope: !5364)
!5372 = !DILocation(line: 1097, column: 6, scope: !5364)
!5373 = !DILocation(line: 1101, column: 10, scope: !5364)
!5374 = !DILocation(line: 1101, column: 3, scope: !5364)
!5375 = distinct !DISubprogram(name: "VEC_rtx_heap_safe_push", scope: !561, file: !561, line: 201, type: !5376, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!5376 = !DISubroutineType(types: !5377)
!5377 = !{!4733, !5378, !1188}
!5378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2458, size: 64)
!5379 = !DILocalVariable(name: "vec_", arg: 1, scope: !5375, file: !561, line: 201, type: !5378)
!5380 = !DILocation(line: 201, column: 1, scope: !5375)
!5381 = !DILocalVariable(name: "obj_", arg: 2, scope: !5375, file: !561, line: 201, type: !1188)
!5382 = distinct !DISubprogram(name: "VEC_rtx_heap_reserve", scope: !561, file: !561, line: 201, type: !5383, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!5383 = !DISubroutineType(types: !5384)
!5384 = !{!1010, !5378, !1010}
!5385 = !DILocalVariable(name: "vec_", arg: 1, scope: !5382, file: !561, line: 201, type: !5378)
!5386 = !DILocation(line: 201, column: 1, scope: !5382)
!5387 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5382, file: !561, line: 201, type: !1010)
!5388 = !DILocalVariable(name: "extend", scope: !5382, file: !561, line: 201, type: !1010)
!5389 = !DILocation(line: 201, column: 1, scope: !5390)
!5390 = distinct !DILexicalBlock(scope: !5382, file: !561, line: 201, column: 1)
!5391 = distinct !DISubprogram(name: "VEC_rtx_base_quick_push", scope: !561, file: !561, line: 200, type: !5392, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!5392 = !DISubroutineType(types: !5393)
!5393 = !{!4733, !5394, !1188}
!5394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1689, size: 64)
!5395 = !DILocalVariable(name: "vec_", arg: 1, scope: !5391, file: !561, line: 200, type: !5394)
!5396 = !DILocation(line: 200, column: 1, scope: !5391)
!5397 = !DILocalVariable(name: "obj_", arg: 2, scope: !5391, file: !561, line: 200, type: !1188)
!5398 = !DILocalVariable(name: "slot_", scope: !5391, file: !561, line: 200, type: !4733)
!5399 = distinct !DISubprogram(name: "VEC_rtx_base_space", scope: !561, file: !561, line: 200, type: !5400, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!5400 = !DISubroutineType(types: !5401)
!5401 = !{!1010, !5394, !1010}
!5402 = !DILocalVariable(name: "vec_", arg: 1, scope: !5399, file: !561, line: 200, type: !5394)
!5403 = !DILocation(line: 200, column: 1, scope: !5399)
!5404 = !DILocalVariable(name: "alloc_", arg: 2, scope: !5399, file: !561, line: 200, type: !1010)
!5405 = distinct !DISubprogram(name: "dv_from_decl", scope: !3, file: !3, line: 1082, type: !5406, scopeLine: 1083, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!5406 = !DISubroutineType(types: !5407)
!5407 = !{!2410, !1011}
!5408 = !DILocalVariable(name: "decl", arg: 1, scope: !5405, file: !3, line: 1082, type: !1011)
!5409 = !DILocation(line: 1082, column: 20, scope: !5405)
!5410 = !DILocalVariable(name: "dv", scope: !5405, file: !3, line: 1084, type: !2410)
!5411 = !DILocation(line: 1084, column: 17, scope: !5405)
!5412 = !DILocation(line: 1085, column: 8, scope: !5405)
!5413 = !DILocation(line: 1085, column: 6, scope: !5405)
!5414 = !DILocation(line: 1089, column: 10, scope: !5405)
!5415 = !DILocation(line: 1089, column: 3, scope: !5405)
!5416 = distinct !DISubprogram(name: "var_debug_decl", scope: !3, file: !3, line: 1576, type: !5417, scopeLine: 1577, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!5417 = !DISubroutineType(types: !5418)
!5418 = !{!1011, !1011}
!5419 = !DILocalVariable(name: "decl", arg: 1, scope: !5416, file: !3, line: 1576, type: !1011)
!5420 = !DILocation(line: 1576, column: 22, scope: !5416)
!5421 = !DILocation(line: 1578, column: 7, scope: !5422)
!5422 = distinct !DILexicalBlock(scope: !5416, file: !3, line: 1578, column: 7)
!5423 = !DILocation(line: 1578, column: 12, scope: !5422)
!5424 = !DILocation(line: 1578, column: 15, scope: !5422)
!5425 = !DILocation(line: 1579, column: 7, scope: !5422)
!5426 = !DILocation(line: 1579, column: 10, scope: !5422)
!5427 = !DILocation(line: 1579, column: 41, scope: !5422)
!5428 = !DILocation(line: 1579, column: 44, scope: !5422)
!5429 = !DILocation(line: 1580, column: 7, scope: !5422)
!5430 = !DILocation(line: 1580, column: 10, scope: !5422)
!5431 = !DILocation(line: 1578, column: 7, scope: !5416)
!5432 = !DILocation(line: 1581, column: 12, scope: !5422)
!5433 = !DILocation(line: 1581, column: 10, scope: !5422)
!5434 = !DILocation(line: 1581, column: 5, scope: !5422)
!5435 = !DILocation(line: 1583, column: 10, scope: !5416)
!5436 = !DILocation(line: 1583, column: 3, scope: !5416)
!5437 = distinct !DISubprogram(name: "attrs_list_insert", scope: !3, file: !3, line: 1255, type: !5438, scopeLine: 1257, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!5438 = !DISubroutineType(types: !5439)
!5439 = !{null, !5173, !2410, !1067, !1188}
!5440 = !DILocalVariable(name: "listp", arg: 1, scope: !5437, file: !3, line: 1255, type: !5173)
!5441 = !DILocation(line: 1255, column: 27, scope: !5437)
!5442 = !DILocalVariable(name: "dv", arg: 2, scope: !5437, file: !3, line: 1255, type: !2410)
!5443 = !DILocation(line: 1255, column: 48, scope: !5437)
!5444 = !DILocalVariable(name: "offset", arg: 3, scope: !5437, file: !3, line: 1256, type: !1067)
!5445 = !DILocation(line: 1256, column: 20, scope: !5437)
!5446 = !DILocalVariable(name: "loc", arg: 4, scope: !5437, file: !3, line: 1256, type: !1188)
!5447 = !DILocation(line: 1256, column: 32, scope: !5437)
!5448 = !DILocalVariable(name: "list", scope: !5437, file: !3, line: 1258, type: !2403)
!5449 = !DILocation(line: 1258, column: 9, scope: !5437)
!5450 = !DILocation(line: 1260, column: 30, scope: !5437)
!5451 = !DILocation(line: 1260, column: 18, scope: !5437)
!5452 = !DILocation(line: 1260, column: 10, scope: !5437)
!5453 = !DILocation(line: 1260, column: 8, scope: !5437)
!5454 = !DILocation(line: 1261, column: 15, scope: !5437)
!5455 = !DILocation(line: 1261, column: 3, scope: !5437)
!5456 = !DILocation(line: 1261, column: 9, scope: !5437)
!5457 = !DILocation(line: 1261, column: 13, scope: !5437)
!5458 = !DILocation(line: 1262, column: 14, scope: !5437)
!5459 = !DILocation(line: 1262, column: 3, scope: !5437)
!5460 = !DILocation(line: 1262, column: 9, scope: !5437)
!5461 = !DILocation(line: 1262, column: 12, scope: !5437)
!5462 = !DILocation(line: 1263, column: 18, scope: !5437)
!5463 = !DILocation(line: 1263, column: 3, scope: !5437)
!5464 = !DILocation(line: 1263, column: 9, scope: !5437)
!5465 = !DILocation(line: 1263, column: 16, scope: !5437)
!5466 = !DILocation(line: 1264, column: 17, scope: !5437)
!5467 = !DILocation(line: 1264, column: 16, scope: !5437)
!5468 = !DILocation(line: 1264, column: 3, scope: !5437)
!5469 = !DILocation(line: 1264, column: 9, scope: !5437)
!5470 = !DILocation(line: 1264, column: 14, scope: !5437)
!5471 = !DILocation(line: 1265, column: 12, scope: !5437)
!5472 = !DILocation(line: 1265, column: 4, scope: !5437)
!5473 = !DILocation(line: 1265, column: 10, scope: !5437)
!5474 = !DILocation(line: 1266, column: 1, scope: !5437)
!5475 = distinct !DISubprogram(name: "set_variable_part", scope: !3, file: !3, line: 6615, type: !5476, scopeLine: 6619, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!5476 = !DISubroutineType(types: !5477)
!5477 = !{null, !2418, !1188, !2410, !1067, !734, !1188, !739}
!5478 = !DILocalVariable(name: "set", arg: 1, scope: !5475, file: !3, line: 6615, type: !2418)
!5479 = !DILocation(line: 6615, column: 34, scope: !5475)
!5480 = !DILocalVariable(name: "loc", arg: 2, scope: !5475, file: !3, line: 6615, type: !1188)
!5481 = !DILocation(line: 6615, column: 43, scope: !5475)
!5482 = !DILocalVariable(name: "dv", arg: 3, scope: !5475, file: !3, line: 6616, type: !2410)
!5483 = !DILocation(line: 6616, column: 20, scope: !5475)
!5484 = !DILocalVariable(name: "offset", arg: 4, scope: !5475, file: !3, line: 6616, type: !1067)
!5485 = !DILocation(line: 6616, column: 38, scope: !5475)
!5486 = !DILocalVariable(name: "initialized", arg: 5, scope: !5475, file: !3, line: 6617, type: !734)
!5487 = !DILocation(line: 6617, column: 27, scope: !5475)
!5488 = !DILocalVariable(name: "set_src", arg: 6, scope: !5475, file: !3, line: 6617, type: !1188)
!5489 = !DILocation(line: 6617, column: 44, scope: !5475)
!5490 = !DILocalVariable(name: "iopt", arg: 7, scope: !5475, file: !3, line: 6618, type: !739)
!5491 = !DILocation(line: 6618, column: 25, scope: !5475)
!5492 = !DILocalVariable(name: "slot", scope: !5475, file: !3, line: 6620, type: !1848)
!5493 = !DILocation(line: 6620, column: 10, scope: !5475)
!5494 = !DILocation(line: 6622, column: 7, scope: !5495)
!5495 = distinct !DILexicalBlock(scope: !5475, file: !3, line: 6622, column: 7)
!5496 = !DILocation(line: 6622, column: 12, scope: !5495)
!5497 = !DILocation(line: 6622, column: 7, scope: !5475)
!5498 = !DILocation(line: 6623, column: 44, scope: !5495)
!5499 = !DILocation(line: 6623, column: 49, scope: !5495)
!5500 = !DILocation(line: 6623, column: 55, scope: !5495)
!5501 = !DILocation(line: 6623, column: 12, scope: !5495)
!5502 = !DILocation(line: 6623, column: 10, scope: !5495)
!5503 = !DILocation(line: 6623, column: 5, scope: !5495)
!5504 = !DILocation(line: 6626, column: 37, scope: !5505)
!5505 = distinct !DILexicalBlock(scope: !5495, file: !3, line: 6625, column: 5)
!5506 = !DILocation(line: 6626, column: 42, scope: !5505)
!5507 = !DILocation(line: 6626, column: 48, scope: !5505)
!5508 = !DILocation(line: 6626, column: 14, scope: !5505)
!5509 = !DILocation(line: 6626, column: 12, scope: !5505)
!5510 = !DILocation(line: 6627, column: 12, scope: !5511)
!5511 = distinct !DILexicalBlock(scope: !5505, file: !3, line: 6627, column: 11)
!5512 = !DILocation(line: 6627, column: 11, scope: !5505)
!5513 = !DILocation(line: 6628, column: 41, scope: !5511)
!5514 = !DILocation(line: 6628, column: 46, scope: !5511)
!5515 = !DILocation(line: 6628, column: 52, scope: !5511)
!5516 = !DILocation(line: 6628, column: 56, scope: !5511)
!5517 = !DILocation(line: 6628, column: 9, scope: !5511)
!5518 = !DILocation(line: 6628, column: 7, scope: !5511)
!5519 = !DILocation(line: 6628, column: 2, scope: !5511)
!5520 = !DILocation(line: 6630, column: 25, scope: !5475)
!5521 = !DILocation(line: 6630, column: 30, scope: !5475)
!5522 = !DILocation(line: 6630, column: 35, scope: !5475)
!5523 = !DILocation(line: 6630, column: 41, scope: !5475)
!5524 = !DILocation(line: 6630, column: 45, scope: !5475)
!5525 = !DILocation(line: 6630, column: 53, scope: !5475)
!5526 = !DILocation(line: 6630, column: 66, scope: !5475)
!5527 = !DILocation(line: 6630, column: 10, scope: !5475)
!5528 = !DILocation(line: 6630, column: 8, scope: !5475)
!5529 = !DILocation(line: 6631, column: 1, scope: !5475)
!5530 = distinct !DISubprogram(name: "shared_hash_find_slot_noinsert", scope: !3, file: !3, line: 1434, type: !5531, scopeLine: 1435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!5531 = !DISubroutineType(types: !5532)
!5532 = !{!1848, !2363, !2410}
!5533 = !DILocalVariable(name: "vars", arg: 1, scope: !5530, file: !3, line: 1434, type: !2363)
!5534 = !DILocation(line: 1434, column: 45, scope: !5530)
!5535 = !DILocalVariable(name: "dv", arg: 2, scope: !5530, file: !3, line: 1434, type: !2410)
!5536 = !DILocation(line: 1434, column: 65, scope: !5530)
!5537 = !DILocation(line: 1436, column: 44, scope: !5530)
!5538 = !DILocation(line: 1436, column: 50, scope: !5530)
!5539 = !DILocation(line: 1436, column: 68, scope: !5530)
!5540 = !DILocation(line: 1436, column: 54, scope: !5530)
!5541 = !DILocation(line: 1436, column: 10, scope: !5530)
!5542 = !DILocation(line: 1436, column: 3, scope: !5530)
!5543 = distinct !DISubprogram(name: "shared_hash_find_slot", scope: !3, file: !3, line: 1418, type: !5531, scopeLine: 1419, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!5544 = !DILocalVariable(name: "vars", arg: 1, scope: !5543, file: !3, line: 1418, type: !2363)
!5545 = !DILocation(line: 1418, column: 36, scope: !5543)
!5546 = !DILocalVariable(name: "dv", arg: 2, scope: !5543, file: !3, line: 1418, type: !2410)
!5547 = !DILocation(line: 1418, column: 56, scope: !5543)
!5548 = !DILocation(line: 1420, column: 35, scope: !5543)
!5549 = !DILocation(line: 1420, column: 41, scope: !5543)
!5550 = !DILocation(line: 1420, column: 59, scope: !5543)
!5551 = !DILocation(line: 1420, column: 45, scope: !5543)
!5552 = !DILocation(line: 1420, column: 10, scope: !5543)
!5553 = !DILocation(line: 1420, column: 3, scope: !5543)
!5554 = distinct !DISubprogram(name: "shared_hash_find_slot_unshare", scope: !3, file: !3, line: 1399, type: !5555, scopeLine: 1401, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!5555 = !DISubroutineType(types: !5556)
!5556 = !{!1848, !5557, !2410, !739}
!5557 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2363, size: 64)
!5558 = !DILocalVariable(name: "pvars", arg: 1, scope: !5554, file: !3, line: 1399, type: !5557)
!5559 = !DILocation(line: 1399, column: 45, scope: !5554)
!5560 = !DILocalVariable(name: "dv", arg: 2, scope: !5554, file: !3, line: 1399, type: !2410)
!5561 = !DILocation(line: 1399, column: 66, scope: !5554)
!5562 = !DILocalVariable(name: "ins", arg: 3, scope: !5554, file: !3, line: 1400, type: !739)
!5563 = !DILocation(line: 1400, column: 30, scope: !5554)
!5564 = !DILocation(line: 1402, column: 43, scope: !5554)
!5565 = !DILocation(line: 1402, column: 50, scope: !5554)
!5566 = !DILocation(line: 1402, column: 68, scope: !5554)
!5567 = !DILocation(line: 1402, column: 54, scope: !5554)
!5568 = !DILocation(line: 1402, column: 73, scope: !5554)
!5569 = !DILocation(line: 1402, column: 10, scope: !5554)
!5570 = !DILocation(line: 1402, column: 3, scope: !5554)
!5571 = distinct !DISubprogram(name: "set_slot_part", scope: !3, file: !3, line: 6364, type: !5572, scopeLine: 6367, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!5572 = !DISubroutineType(types: !5573)
!5573 = !{!1848, !2418, !1188, !1848, !2410, !1067, !734, !1188}
!5574 = !DILocalVariable(name: "set", arg: 1, scope: !5571, file: !3, line: 6364, type: !2418)
!5575 = !DILocation(line: 6364, column: 30, scope: !5571)
!5576 = !DILocalVariable(name: "loc", arg: 2, scope: !5571, file: !3, line: 6364, type: !1188)
!5577 = !DILocation(line: 6364, column: 39, scope: !5571)
!5578 = !DILocalVariable(name: "slot", arg: 3, scope: !5571, file: !3, line: 6364, type: !1848)
!5579 = !DILocation(line: 6364, column: 51, scope: !5571)
!5580 = !DILocalVariable(name: "dv", arg: 4, scope: !5571, file: !3, line: 6365, type: !2410)
!5581 = !DILocation(line: 6365, column: 23, scope: !5571)
!5582 = !DILocalVariable(name: "offset", arg: 5, scope: !5571, file: !3, line: 6365, type: !1067)
!5583 = !DILocation(line: 6365, column: 41, scope: !5571)
!5584 = !DILocalVariable(name: "initialized", arg: 6, scope: !5571, file: !3, line: 6366, type: !734)
!5585 = !DILocation(line: 6366, column: 30, scope: !5571)
!5586 = !DILocalVariable(name: "set_src", arg: 7, scope: !5571, file: !3, line: 6366, type: !1188)
!5587 = !DILocation(line: 6366, column: 47, scope: !5571)
!5588 = !DILocalVariable(name: "pos", scope: !5571, file: !3, line: 6368, type: !1010)
!5589 = !DILocation(line: 6368, column: 7, scope: !5571)
!5590 = !DILocalVariable(name: "node", scope: !5571, file: !3, line: 6369, type: !2437)
!5591 = !DILocation(line: 6369, column: 18, scope: !5571)
!5592 = !DILocalVariable(name: "next", scope: !5571, file: !3, line: 6369, type: !2437)
!5593 = !DILocation(line: 6369, column: 24, scope: !5571)
!5594 = !DILocalVariable(name: "nextp", scope: !5571, file: !3, line: 6370, type: !5595)
!5595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2437, size: 64)
!5596 = !DILocation(line: 6370, column: 19, scope: !5571)
!5597 = !DILocalVariable(name: "var", scope: !5571, file: !3, line: 6371, type: !2447)
!5598 = !DILocation(line: 6371, column: 12, scope: !5571)
!5599 = !DILocalVariable(name: "onepart", scope: !5571, file: !3, line: 6372, type: !1130)
!5600 = !DILocation(line: 6372, column: 8, scope: !5571)
!5601 = !DILocation(line: 6372, column: 32, scope: !5571)
!5602 = !DILocation(line: 6372, column: 18, scope: !5571)
!5603 = !DILocation(line: 6374, column: 3, scope: !5571)
!5604 = !DILocation(line: 6375, column: 3, scope: !5571)
!5605 = !DILocation(line: 6377, column: 21, scope: !5571)
!5606 = !DILocation(line: 6377, column: 20, scope: !5571)
!5607 = !DILocation(line: 6377, column: 9, scope: !5571)
!5608 = !DILocation(line: 6377, column: 7, scope: !5571)
!5609 = !DILocation(line: 6379, column: 9, scope: !5610)
!5610 = distinct !DILexicalBlock(scope: !5571, file: !3, line: 6379, column: 7)
!5611 = !DILocation(line: 6379, column: 7, scope: !5571)
!5612 = !DILocation(line: 6380, column: 17, scope: !5610)
!5613 = !DILocation(line: 6380, column: 5, scope: !5610)
!5614 = !DILocation(line: 6382, column: 8, scope: !5615)
!5615 = distinct !DILexicalBlock(scope: !5571, file: !3, line: 6382, column: 7)
!5616 = !DILocation(line: 6382, column: 7, scope: !5571)
!5617 = !DILocation(line: 6385, column: 45, scope: !5618)
!5618 = distinct !DILexicalBlock(scope: !5615, file: !3, line: 6383, column: 5)
!5619 = !DILocation(line: 6385, column: 36, scope: !5618)
!5620 = !DILocation(line: 6385, column: 24, scope: !5618)
!5621 = !DILocation(line: 6385, column: 13, scope: !5618)
!5622 = !DILocation(line: 6385, column: 11, scope: !5618)
!5623 = !DILocation(line: 6386, column: 17, scope: !5618)
!5624 = !DILocation(line: 6386, column: 7, scope: !5618)
!5625 = !DILocation(line: 6386, column: 12, scope: !5618)
!5626 = !DILocation(line: 6386, column: 15, scope: !5618)
!5627 = !DILocation(line: 6387, column: 7, scope: !5618)
!5628 = !DILocation(line: 6387, column: 12, scope: !5618)
!5629 = !DILocation(line: 6387, column: 21, scope: !5618)
!5630 = !DILocation(line: 6388, column: 7, scope: !5618)
!5631 = !DILocation(line: 6388, column: 12, scope: !5618)
!5632 = !DILocation(line: 6388, column: 24, scope: !5618)
!5633 = !DILocation(line: 6389, column: 7, scope: !5618)
!5634 = !DILocation(line: 6389, column: 12, scope: !5618)
!5635 = !DILocation(line: 6389, column: 28, scope: !5618)
!5636 = !DILocation(line: 6390, column: 7, scope: !5618)
!5637 = !DILocation(line: 6390, column: 12, scope: !5618)
!5638 = !DILocation(line: 6390, column: 33, scope: !5618)
!5639 = !DILocation(line: 6391, column: 33, scope: !5618)
!5640 = !DILocation(line: 6391, column: 7, scope: !5618)
!5641 = !DILocation(line: 6391, column: 12, scope: !5618)
!5642 = !DILocation(line: 6391, column: 24, scope: !5618)
!5643 = !DILocation(line: 6391, column: 31, scope: !5618)
!5644 = !DILocation(line: 6392, column: 7, scope: !5618)
!5645 = !DILocation(line: 6392, column: 12, scope: !5618)
!5646 = !DILocation(line: 6392, column: 24, scope: !5618)
!5647 = !DILocation(line: 6392, column: 34, scope: !5618)
!5648 = !DILocation(line: 6393, column: 7, scope: !5618)
!5649 = !DILocation(line: 6393, column: 12, scope: !5618)
!5650 = !DILocation(line: 6393, column: 24, scope: !5618)
!5651 = !DILocation(line: 6393, column: 32, scope: !5618)
!5652 = !DILocation(line: 6394, column: 15, scope: !5618)
!5653 = !DILocation(line: 6394, column: 8, scope: !5618)
!5654 = !DILocation(line: 6394, column: 13, scope: !5618)
!5655 = !DILocation(line: 6395, column: 11, scope: !5618)
!5656 = !DILocation(line: 6396, column: 16, scope: !5618)
!5657 = !DILocation(line: 6396, column: 21, scope: !5618)
!5658 = !DILocation(line: 6396, column: 33, scope: !5618)
!5659 = !DILocation(line: 6396, column: 13, scope: !5618)
!5660 = !DILocation(line: 6397, column: 5, scope: !5618)
!5661 = !DILocation(line: 6398, column: 12, scope: !5662)
!5662 = distinct !DILexicalBlock(scope: !5615, file: !3, line: 6398, column: 12)
!5663 = !DILocation(line: 6398, column: 12, scope: !5615)
!5664 = !DILocalVariable(name: "r", scope: !5665, file: !3, line: 6400, type: !1010)
!5665 = distinct !DILexicalBlock(scope: !5662, file: !3, line: 6399, column: 5)
!5666 = !DILocation(line: 6400, column: 11, scope: !5665)
!5667 = !DILocalVariable(name: "c", scope: !5665, file: !3, line: 6400, type: !1010)
!5668 = !DILocation(line: 6400, column: 19, scope: !5665)
!5669 = !DILocation(line: 6402, column: 7, scope: !5665)
!5670 = !DILocation(line: 6404, column: 11, scope: !5665)
!5671 = !DILocation(line: 6406, column: 11, scope: !5672)
!5672 = distinct !DILexicalBlock(scope: !5665, file: !3, line: 6406, column: 11)
!5673 = !DILocation(line: 6406, column: 26, scope: !5672)
!5674 = !DILocation(line: 6406, column: 11, scope: !5665)
!5675 = !DILocation(line: 6408, column: 18, scope: !5676)
!5676 = distinct !DILexicalBlock(scope: !5677, file: !3, line: 6408, column: 4)
!5677 = distinct !DILexicalBlock(scope: !5672, file: !3, line: 6407, column: 2)
!5678 = !DILocation(line: 6408, column: 23, scope: !5676)
!5679 = !DILocation(line: 6408, column: 35, scope: !5676)
!5680 = !DILocation(line: 6408, column: 15, scope: !5676)
!5681 = !DILocation(line: 6408, column: 9, scope: !5676)
!5682 = !DILocation(line: 6408, column: 55, scope: !5683)
!5683 = distinct !DILexicalBlock(scope: !5676, file: !3, line: 6408, column: 4)
!5684 = !DILocation(line: 6408, column: 54, scope: !5683)
!5685 = !DILocation(line: 6408, column: 52, scope: !5683)
!5686 = !DILocation(line: 6408, column: 4, scope: !5676)
!5687 = !DILocation(line: 6410, column: 10, scope: !5688)
!5688 = distinct !DILexicalBlock(scope: !5683, file: !3, line: 6410, column: 10)
!5689 = !DILocation(line: 6410, column: 31, scope: !5688)
!5690 = !DILocation(line: 6410, column: 10, scope: !5683)
!5691 = !DILocation(line: 6412, column: 7, scope: !5692)
!5692 = distinct !DILexicalBlock(scope: !5693, file: !3, line: 6412, column: 7)
!5693 = distinct !DILexicalBlock(scope: !5688, file: !3, line: 6411, column: 8)
!5694 = !DILocation(line: 6412, column: 13, scope: !5692)
!5695 = !DILocation(line: 6412, column: 20, scope: !5692)
!5696 = !DILocation(line: 6412, column: 17, scope: !5692)
!5697 = !DILocation(line: 6412, column: 7, scope: !5693)
!5698 = !DILocation(line: 6414, column: 9, scope: !5699)
!5699 = distinct !DILexicalBlock(scope: !5692, file: !3, line: 6413, column: 5)
!5700 = !DILocation(line: 6415, column: 7, scope: !5699)
!5701 = !DILocation(line: 6417, column: 24, scope: !5702)
!5702 = distinct !DILexicalBlock(scope: !5693, file: !3, line: 6417, column: 7)
!5703 = !DILocation(line: 6417, column: 30, scope: !5702)
!5704 = !DILocation(line: 6417, column: 35, scope: !5702)
!5705 = !DILocation(line: 6417, column: 7, scope: !5702)
!5706 = !DILocation(line: 6417, column: 7, scope: !5693)
!5707 = !DILocation(line: 6418, column: 6, scope: !5702)
!5708 = !DILocation(line: 6418, column: 5, scope: !5702)
!5709 = !DILocation(line: 6421, column: 9, scope: !5710)
!5710 = distinct !DILexicalBlock(scope: !5702, file: !3, line: 6420, column: 5)
!5711 = !DILocation(line: 6422, column: 7, scope: !5710)
!5712 = !DILocation(line: 6424, column: 8, scope: !5693)
!5713 = !DILocation(line: 6425, column: 15, scope: !5714)
!5714 = distinct !DILexicalBlock(scope: !5688, file: !3, line: 6425, column: 15)
!5715 = !DILocation(line: 6425, column: 33, scope: !5714)
!5716 = !DILocation(line: 6425, column: 36, scope: !5714)
!5717 = !DILocation(line: 6425, column: 15, scope: !5688)
!5718 = !DILocation(line: 6426, column: 9, scope: !5714)
!5719 = !DILocation(line: 6426, column: 8, scope: !5714)
!5720 = !DILocation(line: 6429, column: 5, scope: !5721)
!5721 = distinct !DILexicalBlock(scope: !5714, file: !3, line: 6428, column: 8)
!5722 = !DILocation(line: 6430, column: 3, scope: !5721)
!5723 = !DILocation(line: 6410, column: 34, scope: !5688)
!5724 = !DILocation(line: 6409, column: 18, scope: !5683)
!5725 = !DILocation(line: 6409, column: 24, scope: !5683)
!5726 = !DILocation(line: 6409, column: 15, scope: !5683)
!5727 = !DILocation(line: 6408, column: 4, scope: !5683)
!5728 = distinct !{!5728, !5686, !5729}
!5729 = !DILocation(line: 6431, column: 8, scope: !5676)
!5730 = !DILocation(line: 6432, column: 2, scope: !5677)
!5731 = !DILocation(line: 6433, column: 16, scope: !5732)
!5732 = distinct !DILexicalBlock(scope: !5672, file: !3, line: 6433, column: 16)
!5733 = !DILocation(line: 6433, column: 16, scope: !5672)
!5734 = !DILocation(line: 6435, column: 18, scope: !5735)
!5735 = distinct !DILexicalBlock(scope: !5736, file: !3, line: 6435, column: 4)
!5736 = distinct !DILexicalBlock(scope: !5732, file: !3, line: 6434, column: 2)
!5737 = !DILocation(line: 6435, column: 23, scope: !5735)
!5738 = !DILocation(line: 6435, column: 35, scope: !5735)
!5739 = !DILocation(line: 6435, column: 15, scope: !5735)
!5740 = !DILocation(line: 6435, column: 9, scope: !5735)
!5741 = !DILocation(line: 6435, column: 55, scope: !5742)
!5742 = distinct !DILexicalBlock(scope: !5735, file: !3, line: 6435, column: 4)
!5743 = !DILocation(line: 6435, column: 54, scope: !5742)
!5744 = !DILocation(line: 6435, column: 52, scope: !5742)
!5745 = !DILocation(line: 6435, column: 4, scope: !5735)
!5746 = !DILocation(line: 6437, column: 10, scope: !5747)
!5747 = distinct !DILexicalBlock(scope: !5742, file: !3, line: 6437, column: 10)
!5748 = !DILocation(line: 6437, column: 10, scope: !5742)
!5749 = !DILocation(line: 6439, column: 7, scope: !5750)
!5750 = distinct !DILexicalBlock(scope: !5751, file: !3, line: 6439, column: 7)
!5751 = distinct !DILexicalBlock(scope: !5747, file: !3, line: 6438, column: 8)
!5752 = !DILocation(line: 6439, column: 27, scope: !5750)
!5753 = !DILocation(line: 6439, column: 25, scope: !5750)
!5754 = !DILocation(line: 6439, column: 7, scope: !5751)
!5755 = !DILocation(line: 6440, column: 6, scope: !5750)
!5756 = !DILocation(line: 6440, column: 5, scope: !5750)
!5757 = !DILocation(line: 6443, column: 11, scope: !5758)
!5758 = distinct !DILexicalBlock(scope: !5759, file: !3, line: 6443, column: 11)
!5759 = distinct !DILexicalBlock(scope: !5750, file: !3, line: 6442, column: 5)
!5760 = !DILocation(line: 6443, column: 32, scope: !5758)
!5761 = !DILocation(line: 6443, column: 29, scope: !5758)
!5762 = !DILocation(line: 6443, column: 11, scope: !5759)
!5763 = !DILocation(line: 6444, column: 11, scope: !5758)
!5764 = !DILocation(line: 6444, column: 9, scope: !5758)
!5765 = !DILocation(line: 6446, column: 11, scope: !5758)
!5766 = !DILocation(line: 6447, column: 7, scope: !5759)
!5767 = !DILocation(line: 6449, column: 8, scope: !5751)
!5768 = !DILocation(line: 6452, column: 5, scope: !5769)
!5769 = distinct !DILexicalBlock(scope: !5747, file: !3, line: 6451, column: 8)
!5770 = !DILocation(line: 6453, column: 3, scope: !5769)
!5771 = !DILocation(line: 6436, column: 18, scope: !5742)
!5772 = !DILocation(line: 6436, column: 24, scope: !5742)
!5773 = !DILocation(line: 6436, column: 15, scope: !5742)
!5774 = !DILocation(line: 6435, column: 4, scope: !5742)
!5775 = distinct !{!5775, !5745, !5776}
!5776 = !DILocation(line: 6454, column: 8, scope: !5735)
!5777 = !DILocation(line: 6455, column: 2, scope: !5736)
!5778 = !DILocation(line: 6456, column: 16, scope: !5779)
!5779 = distinct !DILexicalBlock(scope: !5732, file: !3, line: 6456, column: 16)
!5780 = !DILocation(line: 6456, column: 16, scope: !5732)
!5781 = !DILocation(line: 6458, column: 18, scope: !5782)
!5782 = distinct !DILexicalBlock(scope: !5783, file: !3, line: 6458, column: 4)
!5783 = distinct !DILexicalBlock(scope: !5779, file: !3, line: 6457, column: 2)
!5784 = !DILocation(line: 6458, column: 23, scope: !5782)
!5785 = !DILocation(line: 6458, column: 35, scope: !5782)
!5786 = !DILocation(line: 6458, column: 15, scope: !5782)
!5787 = !DILocation(line: 6458, column: 9, scope: !5782)
!5788 = !DILocation(line: 6458, column: 55, scope: !5789)
!5789 = distinct !DILexicalBlock(scope: !5782, file: !3, line: 6458, column: 4)
!5790 = !DILocation(line: 6458, column: 54, scope: !5789)
!5791 = !DILocation(line: 6458, column: 52, scope: !5789)
!5792 = !DILocation(line: 6458, column: 4, scope: !5782)
!5793 = !DILocation(line: 6460, column: 10, scope: !5794)
!5794 = distinct !DILexicalBlock(scope: !5789, file: !3, line: 6460, column: 10)
!5795 = !DILocation(line: 6460, column: 10, scope: !5789)
!5796 = !DILocation(line: 6461, column: 9, scope: !5794)
!5797 = !DILocation(line: 6461, column: 8, scope: !5794)
!5798 = !DILocation(line: 6462, column: 15, scope: !5799)
!5799 = distinct !DILexicalBlock(scope: !5794, file: !3, line: 6462, column: 15)
!5800 = !DILocation(line: 6462, column: 15, scope: !5794)
!5801 = !DILocation(line: 6464, column: 21, scope: !5802)
!5802 = distinct !DILexicalBlock(scope: !5803, file: !3, line: 6464, column: 7)
!5803 = distinct !DILexicalBlock(scope: !5799, file: !3, line: 6463, column: 8)
!5804 = !DILocation(line: 6464, column: 42, scope: !5802)
!5805 = !DILocation(line: 6464, column: 12, scope: !5802)
!5806 = !DILocation(line: 6464, column: 10, scope: !5802)
!5807 = !DILocation(line: 6464, column: 58, scope: !5802)
!5808 = !DILocation(line: 6464, column: 7, scope: !5803)
!5809 = !DILocation(line: 6465, column: 5, scope: !5802)
!5810 = !DILocation(line: 6467, column: 6, scope: !5802)
!5811 = !DILocation(line: 6468, column: 8, scope: !5803)
!5812 = !DILocation(line: 6471, column: 5, scope: !5813)
!5813 = distinct !DILexicalBlock(scope: !5799, file: !3, line: 6470, column: 8)
!5814 = !DILocation(line: 6472, column: 3, scope: !5813)
!5815 = !DILocation(line: 6459, column: 18, scope: !5789)
!5816 = !DILocation(line: 6459, column: 24, scope: !5789)
!5817 = !DILocation(line: 6459, column: 15, scope: !5789)
!5818 = !DILocation(line: 6458, column: 4, scope: !5789)
!5819 = distinct !{!5819, !5792, !5820}
!5820 = !DILocation(line: 6473, column: 8, scope: !5782)
!5821 = !DILocation(line: 6474, column: 2, scope: !5783)
!5822 = !DILocation(line: 6476, column: 16, scope: !5823)
!5823 = distinct !DILexicalBlock(scope: !5779, file: !3, line: 6476, column: 2)
!5824 = !DILocation(line: 6476, column: 21, scope: !5823)
!5825 = !DILocation(line: 6476, column: 33, scope: !5823)
!5826 = !DILocation(line: 6476, column: 13, scope: !5823)
!5827 = !DILocation(line: 6476, column: 7, scope: !5823)
!5828 = !DILocation(line: 6476, column: 53, scope: !5829)
!5829 = distinct !DILexicalBlock(scope: !5823, file: !3, line: 6476, column: 2)
!5830 = !DILocation(line: 6476, column: 52, scope: !5829)
!5831 = !DILocation(line: 6476, column: 50, scope: !5829)
!5832 = !DILocation(line: 6476, column: 2, scope: !5823)
!5833 = !DILocation(line: 6478, column: 22, scope: !5834)
!5834 = distinct !DILexicalBlock(scope: !5829, file: !3, line: 6478, column: 8)
!5835 = !DILocation(line: 6478, column: 28, scope: !5834)
!5836 = !DILocation(line: 6478, column: 33, scope: !5834)
!5837 = !DILocation(line: 6478, column: 13, scope: !5834)
!5838 = !DILocation(line: 6478, column: 11, scope: !5834)
!5839 = !DILocation(line: 6478, column: 39, scope: !5834)
!5840 = !DILocation(line: 6478, column: 8, scope: !5829)
!5841 = !DILocation(line: 6479, column: 6, scope: !5834)
!5842 = !DILocation(line: 6481, column: 7, scope: !5834)
!5843 = !DILocation(line: 6478, column: 42, scope: !5834)
!5844 = !DILocation(line: 6477, column: 16, scope: !5829)
!5845 = !DILocation(line: 6477, column: 22, scope: !5829)
!5846 = !DILocation(line: 6477, column: 13, scope: !5829)
!5847 = !DILocation(line: 6476, column: 2, scope: !5829)
!5848 = distinct !{!5848, !5832, !5849}
!5849 = !DILocation(line: 6481, column: 7, scope: !5823)
!5850 = !DILocation(line: 6483, column: 11, scope: !5851)
!5851 = distinct !DILexicalBlock(scope: !5665, file: !3, line: 6483, column: 11)
!5852 = !DILocation(line: 6483, column: 13, scope: !5851)
!5853 = !DILocation(line: 6483, column: 11, scope: !5665)
!5854 = !DILocation(line: 6484, column: 9, scope: !5851)
!5855 = !DILocation(line: 6484, column: 2, scope: !5851)
!5856 = !DILocation(line: 6486, column: 25, scope: !5857)
!5857 = distinct !DILexicalBlock(scope: !5665, file: !3, line: 6486, column: 11)
!5858 = !DILocation(line: 6486, column: 30, scope: !5857)
!5859 = !DILocation(line: 6486, column: 35, scope: !5857)
!5860 = !DILocation(line: 6486, column: 11, scope: !5857)
!5861 = !DILocation(line: 6486, column: 11, scope: !5665)
!5862 = !DILocation(line: 6488, column: 29, scope: !5863)
!5863 = distinct !DILexicalBlock(scope: !5857, file: !3, line: 6487, column: 2)
!5864 = !DILocation(line: 6488, column: 34, scope: !5863)
!5865 = !DILocation(line: 6488, column: 40, scope: !5863)
!5866 = !DILocation(line: 6488, column: 45, scope: !5863)
!5867 = !DILocation(line: 6488, column: 11, scope: !5863)
!5868 = !DILocation(line: 6488, column: 9, scope: !5863)
!5869 = !DILocation(line: 6489, column: 21, scope: !5863)
!5870 = !DILocation(line: 6489, column: 20, scope: !5863)
!5871 = !DILocation(line: 6489, column: 10, scope: !5863)
!5872 = !DILocation(line: 6489, column: 8, scope: !5863)
!5873 = !DILocation(line: 6490, column: 18, scope: !5874)
!5874 = distinct !DILexicalBlock(scope: !5863, file: !3, line: 6490, column: 4)
!5875 = !DILocation(line: 6490, column: 23, scope: !5874)
!5876 = !DILocation(line: 6490, column: 35, scope: !5874)
!5877 = !DILocation(line: 6490, column: 15, scope: !5874)
!5878 = !DILocation(line: 6490, column: 9, scope: !5874)
!5879 = !DILocation(line: 6490, column: 46, scope: !5880)
!5880 = distinct !DILexicalBlock(scope: !5874, file: !3, line: 6490, column: 4)
!5881 = !DILocation(line: 6490, column: 4, scope: !5874)
!5882 = !DILocation(line: 6492, column: 7, scope: !5880)
!5883 = !DILocation(line: 6492, column: 6, scope: !5880)
!5884 = !DILocation(line: 6491, column: 20, scope: !5880)
!5885 = !DILocation(line: 6491, column: 19, scope: !5880)
!5886 = !DILocation(line: 6491, column: 28, scope: !5880)
!5887 = !DILocation(line: 6491, column: 15, scope: !5880)
!5888 = !DILocation(line: 6490, column: 4, scope: !5880)
!5889 = distinct !{!5889, !5881, !5890}
!5890 = !DILocation(line: 6492, column: 7, scope: !5874)
!5891 = !DILocation(line: 6493, column: 4, scope: !5863)
!5892 = !DILocation(line: 6494, column: 2, scope: !5863)
!5893 = !DILocation(line: 6495, column: 5, scope: !5665)
!5894 = !DILocalVariable(name: "inspos", scope: !5895, file: !3, line: 6498, type: !1010)
!5895 = distinct !DILexicalBlock(scope: !5662, file: !3, line: 6497, column: 5)
!5896 = !DILocation(line: 6498, column: 11, scope: !5895)
!5897 = !DILocation(line: 6500, column: 7, scope: !5895)
!5898 = !DILocation(line: 6502, column: 42, scope: !5895)
!5899 = !DILocation(line: 6502, column: 47, scope: !5895)
!5900 = !DILocation(line: 6502, column: 13, scope: !5895)
!5901 = !DILocation(line: 6502, column: 11, scope: !5895)
!5902 = !DILocation(line: 6504, column: 11, scope: !5903)
!5903 = distinct !DILexicalBlock(scope: !5895, file: !3, line: 6504, column: 11)
!5904 = !DILocation(line: 6504, column: 15, scope: !5903)
!5905 = !DILocation(line: 6504, column: 11, scope: !5895)
!5906 = !DILocation(line: 6506, column: 11, scope: !5907)
!5907 = distinct !DILexicalBlock(scope: !5903, file: !3, line: 6505, column: 2)
!5908 = !DILocation(line: 6506, column: 16, scope: !5907)
!5909 = !DILocation(line: 6506, column: 25, scope: !5907)
!5910 = !DILocation(line: 6506, column: 30, scope: !5907)
!5911 = !DILocation(line: 6506, column: 9, scope: !5907)
!5912 = !DILocation(line: 6508, column: 8, scope: !5913)
!5913 = distinct !DILexicalBlock(scope: !5907, file: !3, line: 6508, column: 8)
!5914 = !DILocation(line: 6509, column: 8, scope: !5913)
!5915 = !DILocation(line: 6509, column: 13, scope: !5913)
!5916 = !DILocation(line: 6509, column: 31, scope: !5913)
!5917 = !DILocation(line: 6509, column: 34, scope: !5913)
!5918 = !DILocation(line: 6510, column: 6, scope: !5913)
!5919 = !DILocation(line: 6510, column: 9, scope: !5913)
!5920 = !DILocation(line: 6510, column: 30, scope: !5913)
!5921 = !DILocation(line: 6510, column: 27, scope: !5913)
!5922 = !DILocation(line: 6511, column: 5, scope: !5913)
!5923 = !DILocation(line: 6511, column: 21, scope: !5913)
!5924 = !DILocation(line: 6511, column: 27, scope: !5913)
!5925 = !DILocation(line: 6511, column: 32, scope: !5913)
!5926 = !DILocation(line: 6511, column: 8, scope: !5913)
!5927 = !DILocation(line: 6508, column: 8, scope: !5907)
!5928 = !DILocation(line: 6515, column: 12, scope: !5929)
!5929 = distinct !DILexicalBlock(scope: !5930, file: !3, line: 6515, column: 12)
!5930 = distinct !DILexicalBlock(scope: !5913, file: !3, line: 6512, column: 6)
!5931 = !DILocation(line: 6515, column: 18, scope: !5929)
!5932 = !DILocation(line: 6515, column: 25, scope: !5929)
!5933 = !DILocation(line: 6515, column: 23, scope: !5929)
!5934 = !DILocation(line: 6515, column: 12, scope: !5930)
!5935 = !DILocation(line: 6516, column: 16, scope: !5929)
!5936 = !DILocation(line: 6516, column: 3, scope: !5929)
!5937 = !DILocation(line: 6516, column: 9, scope: !5929)
!5938 = !DILocation(line: 6516, column: 14, scope: !5929)
!5939 = !DILocation(line: 6517, column: 12, scope: !5940)
!5940 = distinct !DILexicalBlock(scope: !5930, file: !3, line: 6517, column: 12)
!5941 = !DILocation(line: 6517, column: 20, scope: !5940)
!5942 = !DILocation(line: 6517, column: 12, scope: !5930)
!5943 = !DILocation(line: 6518, column: 19, scope: !5940)
!5944 = !DILocation(line: 6518, column: 3, scope: !5940)
!5945 = !DILocation(line: 6518, column: 9, scope: !5940)
!5946 = !DILocation(line: 6518, column: 17, scope: !5940)
!5947 = !DILocation(line: 6520, column: 15, scope: !5930)
!5948 = !DILocation(line: 6520, column: 8, scope: !5930)
!5949 = !DILocation(line: 6525, column: 26, scope: !5950)
!5950 = distinct !DILexicalBlock(scope: !5951, file: !3, line: 6525, column: 12)
!5951 = distinct !DILexicalBlock(scope: !5913, file: !3, line: 6523, column: 6)
!5952 = !DILocation(line: 6525, column: 31, scope: !5950)
!5953 = !DILocation(line: 6525, column: 36, scope: !5950)
!5954 = !DILocation(line: 6525, column: 12, scope: !5950)
!5955 = !DILocation(line: 6525, column: 12, scope: !5951)
!5956 = !DILocation(line: 6527, column: 30, scope: !5957)
!5957 = distinct !DILexicalBlock(scope: !5950, file: !3, line: 6526, column: 3)
!5958 = !DILocation(line: 6527, column: 35, scope: !5957)
!5959 = !DILocation(line: 6527, column: 41, scope: !5957)
!5960 = !DILocation(line: 6527, column: 46, scope: !5957)
!5961 = !DILocation(line: 6527, column: 12, scope: !5957)
!5962 = !DILocation(line: 6527, column: 10, scope: !5957)
!5963 = !DILocation(line: 6528, column: 22, scope: !5957)
!5964 = !DILocation(line: 6528, column: 21, scope: !5957)
!5965 = !DILocation(line: 6528, column: 11, scope: !5957)
!5966 = !DILocation(line: 6528, column: 9, scope: !5957)
!5967 = !DILocation(line: 6529, column: 3, scope: !5957)
!5968 = !DILocation(line: 6531, column: 2, scope: !5907)
!5969 = !DILocation(line: 6537, column: 22, scope: !5970)
!5970 = distinct !DILexicalBlock(scope: !5971, file: !3, line: 6537, column: 8)
!5971 = distinct !DILexicalBlock(scope: !5903, file: !3, line: 6533, column: 2)
!5972 = !DILocation(line: 6537, column: 27, scope: !5970)
!5973 = !DILocation(line: 6537, column: 32, scope: !5970)
!5974 = !DILocation(line: 6537, column: 8, scope: !5970)
!5975 = !DILocation(line: 6537, column: 8, scope: !5971)
!5976 = !DILocation(line: 6539, column: 33, scope: !5977)
!5977 = distinct !DILexicalBlock(scope: !5970, file: !3, line: 6538, column: 6)
!5978 = !DILocation(line: 6539, column: 38, scope: !5977)
!5979 = !DILocation(line: 6539, column: 44, scope: !5977)
!5980 = !DILocation(line: 6539, column: 49, scope: !5977)
!5981 = !DILocation(line: 6539, column: 15, scope: !5977)
!5982 = !DILocation(line: 6539, column: 13, scope: !5977)
!5983 = !DILocation(line: 6540, column: 25, scope: !5977)
!5984 = !DILocation(line: 6540, column: 24, scope: !5977)
!5985 = !DILocation(line: 6540, column: 14, scope: !5977)
!5986 = !DILocation(line: 6540, column: 12, scope: !5977)
!5987 = !DILocation(line: 6541, column: 6, scope: !5977)
!5988 = !DILocation(line: 6545, column: 4, scope: !5971)
!5989 = !DILocation(line: 6550, column: 15, scope: !5990)
!5990 = distinct !DILexicalBlock(scope: !5971, file: !3, line: 6550, column: 4)
!5991 = !DILocation(line: 6550, column: 20, scope: !5990)
!5992 = !DILocation(line: 6550, column: 13, scope: !5990)
!5993 = !DILocation(line: 6550, column: 9, scope: !5990)
!5994 = !DILocation(line: 6550, column: 33, scope: !5995)
!5995 = distinct !DILexicalBlock(scope: !5990, file: !3, line: 6550, column: 4)
!5996 = !DILocation(line: 6550, column: 39, scope: !5995)
!5997 = !DILocation(line: 6550, column: 37, scope: !5995)
!5998 = !DILocation(line: 6550, column: 4, scope: !5990)
!5999 = !DILocation(line: 6551, column: 6, scope: !5995)
!6000 = !DILocation(line: 6551, column: 11, scope: !5995)
!6001 = !DILocation(line: 6551, column: 20, scope: !5995)
!6002 = !DILocation(line: 6551, column: 27, scope: !5995)
!6003 = !DILocation(line: 6551, column: 32, scope: !5995)
!6004 = !DILocation(line: 6551, column: 41, scope: !5995)
!6005 = !DILocation(line: 6551, column: 45, scope: !5995)
!6006 = !DILocation(line: 6550, column: 50, scope: !5995)
!6007 = !DILocation(line: 6550, column: 4, scope: !5995)
!6008 = distinct !{!6008, !5998, !6009}
!6009 = !DILocation(line: 6551, column: 48, scope: !5990)
!6010 = !DILocation(line: 6553, column: 4, scope: !5971)
!6011 = !DILocation(line: 6553, column: 9, scope: !5971)
!6012 = !DILocation(line: 6553, column: 20, scope: !5971)
!6013 = !DILocation(line: 6554, column: 32, scope: !5971)
!6014 = !DILocation(line: 6554, column: 4, scope: !5971)
!6015 = !DILocation(line: 6554, column: 9, scope: !5971)
!6016 = !DILocation(line: 6554, column: 18, scope: !5971)
!6017 = !DILocation(line: 6554, column: 23, scope: !5971)
!6018 = !DILocation(line: 6554, column: 30, scope: !5971)
!6019 = !DILocation(line: 6555, column: 4, scope: !5971)
!6020 = !DILocation(line: 6555, column: 9, scope: !5971)
!6021 = !DILocation(line: 6555, column: 18, scope: !5971)
!6022 = !DILocation(line: 6555, column: 23, scope: !5971)
!6023 = !DILocation(line: 6555, column: 33, scope: !5971)
!6024 = !DILocation(line: 6556, column: 4, scope: !5971)
!6025 = !DILocation(line: 6556, column: 9, scope: !5971)
!6026 = !DILocation(line: 6556, column: 18, scope: !5971)
!6027 = !DILocation(line: 6556, column: 23, scope: !5971)
!6028 = !DILocation(line: 6556, column: 31, scope: !5971)
!6029 = !DILocation(line: 6560, column: 16, scope: !5895)
!6030 = !DILocation(line: 6560, column: 21, scope: !5895)
!6031 = !DILocation(line: 6560, column: 30, scope: !5895)
!6032 = !DILocation(line: 6560, column: 35, scope: !5895)
!6033 = !DILocation(line: 6560, column: 13, scope: !5895)
!6034 = !DILocation(line: 6561, column: 19, scope: !6035)
!6035 = distinct !DILexicalBlock(scope: !5895, file: !3, line: 6561, column: 7)
!6036 = !DILocation(line: 6561, column: 24, scope: !6035)
!6037 = !DILocation(line: 6561, column: 33, scope: !6035)
!6038 = !DILocation(line: 6561, column: 38, scope: !6035)
!6039 = !DILocation(line: 6561, column: 17, scope: !6035)
!6040 = !DILocation(line: 6561, column: 12, scope: !6035)
!6041 = !DILocation(line: 6561, column: 49, scope: !6042)
!6042 = distinct !DILexicalBlock(scope: !6035, file: !3, line: 6561, column: 7)
!6043 = !DILocation(line: 6561, column: 7, scope: !6035)
!6044 = !DILocation(line: 6563, column: 11, scope: !6045)
!6045 = distinct !DILexicalBlock(scope: !6042, file: !3, line: 6562, column: 2)
!6046 = !DILocation(line: 6563, column: 17, scope: !6045)
!6047 = !DILocation(line: 6563, column: 9, scope: !6045)
!6048 = !DILocation(line: 6564, column: 9, scope: !6049)
!6049 = distinct !DILexicalBlock(scope: !6045, file: !3, line: 6564, column: 8)
!6050 = !DILocation(line: 6564, column: 27, scope: !6049)
!6051 = !DILocation(line: 6564, column: 30, scope: !6049)
!6052 = !DILocation(line: 6565, column: 9, scope: !6049)
!6053 = !DILocation(line: 6565, column: 12, scope: !6049)
!6054 = !DILocation(line: 6565, column: 33, scope: !6049)
!6055 = !DILocation(line: 6565, column: 30, scope: !6049)
!6056 = !DILocation(line: 6566, column: 8, scope: !6049)
!6057 = !DILocation(line: 6566, column: 24, scope: !6049)
!6058 = !DILocation(line: 6566, column: 30, scope: !6049)
!6059 = !DILocation(line: 6566, column: 35, scope: !6049)
!6060 = !DILocation(line: 6566, column: 11, scope: !6049)
!6061 = !DILocation(line: 6564, column: 8, scope: !6045)
!6062 = !DILocation(line: 6570, column: 12, scope: !6063)
!6063 = distinct !DILexicalBlock(scope: !6064, file: !3, line: 6570, column: 12)
!6064 = distinct !DILexicalBlock(scope: !6049, file: !3, line: 6567, column: 6)
!6065 = !DILocation(line: 6570, column: 18, scope: !6063)
!6066 = !DILocation(line: 6570, column: 25, scope: !6063)
!6067 = !DILocation(line: 6570, column: 23, scope: !6063)
!6068 = !DILocation(line: 6570, column: 12, scope: !6064)
!6069 = !DILocation(line: 6571, column: 17, scope: !6063)
!6070 = !DILocation(line: 6571, column: 23, scope: !6063)
!6071 = !DILocation(line: 6571, column: 15, scope: !6063)
!6072 = !DILocation(line: 6571, column: 3, scope: !6063)
!6073 = !DILocation(line: 6572, column: 12, scope: !6074)
!6074 = distinct !DILexicalBlock(scope: !6064, file: !3, line: 6572, column: 12)
!6075 = !DILocation(line: 6572, column: 18, scope: !6074)
!6076 = !DILocation(line: 6572, column: 26, scope: !6074)
!6077 = !DILocation(line: 6572, column: 34, scope: !6074)
!6078 = !DILocation(line: 6572, column: 37, scope: !6074)
!6079 = !DILocation(line: 6572, column: 45, scope: !6074)
!6080 = !DILocation(line: 6572, column: 12, scope: !6064)
!6081 = !DILocation(line: 6573, column: 13, scope: !6074)
!6082 = !DILocation(line: 6573, column: 19, scope: !6074)
!6083 = !DILocation(line: 6573, column: 11, scope: !6074)
!6084 = !DILocation(line: 6573, column: 3, scope: !6074)
!6085 = !DILocation(line: 6574, column: 12, scope: !6086)
!6086 = distinct !DILexicalBlock(scope: !6064, file: !3, line: 6574, column: 12)
!6087 = !DILocation(line: 6574, column: 17, scope: !6086)
!6088 = !DILocation(line: 6574, column: 26, scope: !6086)
!6089 = !DILocation(line: 6574, column: 31, scope: !6086)
!6090 = !DILocation(line: 6574, column: 42, scope: !6086)
!6091 = !DILocation(line: 6574, column: 48, scope: !6086)
!6092 = !DILocation(line: 6574, column: 39, scope: !6086)
!6093 = !DILocation(line: 6574, column: 12, scope: !6064)
!6094 = !DILocation(line: 6576, column: 5, scope: !6095)
!6095 = distinct !DILexicalBlock(scope: !6086, file: !3, line: 6575, column: 3)
!6096 = !DILocation(line: 6576, column: 10, scope: !6095)
!6097 = !DILocation(line: 6576, column: 19, scope: !6095)
!6098 = !DILocation(line: 6576, column: 24, scope: !6095)
!6099 = !DILocation(line: 6576, column: 32, scope: !6095)
!6100 = !DILocation(line: 6577, column: 5, scope: !6095)
!6101 = !DILocation(line: 6577, column: 10, scope: !6095)
!6102 = !DILocation(line: 6577, column: 26, scope: !6095)
!6103 = !DILocation(line: 6578, column: 3, scope: !6095)
!6104 = !DILocation(line: 6579, column: 19, scope: !6064)
!6105 = !DILocation(line: 6579, column: 35, scope: !6064)
!6106 = !DILocation(line: 6579, column: 8, scope: !6064)
!6107 = !DILocation(line: 6580, column: 17, scope: !6064)
!6108 = !DILocation(line: 6580, column: 9, scope: !6064)
!6109 = !DILocation(line: 6580, column: 15, scope: !6064)
!6110 = !DILocation(line: 6581, column: 8, scope: !6064)
!6111 = !DILocation(line: 6584, column: 15, scope: !6049)
!6112 = !DILocation(line: 6584, column: 21, scope: !6049)
!6113 = !DILocation(line: 6584, column: 12, scope: !6049)
!6114 = !DILocation(line: 6585, column: 2, scope: !6045)
!6115 = !DILocation(line: 6561, column: 62, scope: !6042)
!6116 = !DILocation(line: 6561, column: 60, scope: !6042)
!6117 = !DILocation(line: 6561, column: 7, scope: !6042)
!6118 = distinct !{!6118, !6043, !6119}
!6119 = !DILocation(line: 6585, column: 2, scope: !6035)
!6120 = !DILocation(line: 6587, column: 16, scope: !5895)
!6121 = !DILocation(line: 6587, column: 21, scope: !5895)
!6122 = !DILocation(line: 6587, column: 30, scope: !5895)
!6123 = !DILocation(line: 6587, column: 35, scope: !5895)
!6124 = !DILocation(line: 6587, column: 13, scope: !5895)
!6125 = !DILocation(line: 6591, column: 39, scope: !5571)
!6126 = !DILocation(line: 6591, column: 27, scope: !5571)
!6127 = !DILocation(line: 6591, column: 10, scope: !5571)
!6128 = !DILocation(line: 6591, column: 8, scope: !5571)
!6129 = !DILocation(line: 6592, column: 15, scope: !5571)
!6130 = !DILocation(line: 6592, column: 3, scope: !5571)
!6131 = !DILocation(line: 6592, column: 9, scope: !5571)
!6132 = !DILocation(line: 6592, column: 13, scope: !5571)
!6133 = !DILocation(line: 6593, column: 16, scope: !5571)
!6134 = !DILocation(line: 6593, column: 3, scope: !5571)
!6135 = !DILocation(line: 6593, column: 9, scope: !5571)
!6136 = !DILocation(line: 6593, column: 14, scope: !5571)
!6137 = !DILocation(line: 6594, column: 19, scope: !5571)
!6138 = !DILocation(line: 6594, column: 3, scope: !5571)
!6139 = !DILocation(line: 6594, column: 9, scope: !5571)
!6140 = !DILocation(line: 6594, column: 17, scope: !5571)
!6141 = !DILocation(line: 6595, column: 17, scope: !5571)
!6142 = !DILocation(line: 6595, column: 16, scope: !5571)
!6143 = !DILocation(line: 6595, column: 3, scope: !5571)
!6144 = !DILocation(line: 6595, column: 9, scope: !5571)
!6145 = !DILocation(line: 6595, column: 14, scope: !5571)
!6146 = !DILocation(line: 6596, column: 12, scope: !5571)
!6147 = !DILocation(line: 6596, column: 4, scope: !5571)
!6148 = !DILocation(line: 6596, column: 10, scope: !5571)
!6149 = !DILocation(line: 6598, column: 7, scope: !6150)
!6150 = distinct !DILexicalBlock(scope: !5571, file: !3, line: 6598, column: 7)
!6151 = !DILocation(line: 6598, column: 15, scope: !6150)
!6152 = !DILocation(line: 6598, column: 18, scope: !6150)
!6153 = !DILocation(line: 6598, column: 7, scope: !5571)
!6154 = !DILocation(line: 6599, column: 23, scope: !6150)
!6155 = !DILocation(line: 6599, column: 28, scope: !6150)
!6156 = !DILocation(line: 6599, column: 32, scope: !6150)
!6157 = !DILocation(line: 6599, column: 5, scope: !6150)
!6158 = !DILocation(line: 6602, column: 7, scope: !6159)
!6159 = distinct !DILexicalBlock(scope: !5571, file: !3, line: 6602, column: 7)
!6160 = !DILocation(line: 6602, column: 12, scope: !6159)
!6161 = !DILocation(line: 6602, column: 21, scope: !6159)
!6162 = !DILocation(line: 6602, column: 26, scope: !6159)
!6163 = !DILocation(line: 6602, column: 34, scope: !6159)
!6164 = !DILocation(line: 6602, column: 7, scope: !5571)
!6165 = !DILocation(line: 6603, column: 27, scope: !6159)
!6166 = !DILocation(line: 6603, column: 32, scope: !6159)
!6167 = !DILocation(line: 6603, column: 5, scope: !6159)
!6168 = !DILocation(line: 6605, column: 10, scope: !5571)
!6169 = !DILocation(line: 6605, column: 3, scope: !5571)
!6170 = !DILocation(line: 6606, column: 1, scope: !5571)
!6171 = distinct !DISubprogram(name: "shared_hash_find_slot_noinsert_1", scope: !3, file: !3, line: 1426, type: !6172, scopeLine: 1428, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!6172 = !DISubroutineType(types: !6173)
!6173 = !{!1848, !2363, !2410, !1836}
!6174 = !DILocalVariable(name: "vars", arg: 1, scope: !6171, file: !3, line: 1426, type: !2363)
!6175 = !DILocation(line: 1426, column: 47, scope: !6171)
!6176 = !DILocalVariable(name: "dv", arg: 2, scope: !6171, file: !3, line: 1426, type: !2410)
!6177 = !DILocation(line: 1426, column: 67, scope: !6171)
!6178 = !DILocalVariable(name: "dvhash", arg: 3, scope: !6171, file: !3, line: 1427, type: !1836)
!6179 = !DILocation(line: 1427, column: 17, scope: !6171)
!6180 = !DILocation(line: 1429, column: 54, scope: !6171)
!6181 = !DILocation(line: 1429, column: 36, scope: !6171)
!6182 = !DILocation(line: 1429, column: 61, scope: !6171)
!6183 = !DILocation(line: 1429, column: 65, scope: !6171)
!6184 = !DILocation(line: 1429, column: 10, scope: !6171)
!6185 = !DILocation(line: 1429, column: 3, scope: !6171)
!6186 = distinct !DISubprogram(name: "shared_hash_htab", scope: !3, file: !3, line: 1332, type: !6187, scopeLine: 1333, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!6187 = !DISubroutineType(types: !6188)
!6188 = !{!1827, !2363}
!6189 = !DILocalVariable(name: "vars", arg: 1, scope: !6186, file: !3, line: 1332, type: !2363)
!6190 = !DILocation(line: 1332, column: 31, scope: !6186)
!6191 = !DILocation(line: 1334, column: 10, scope: !6186)
!6192 = !DILocation(line: 1334, column: 16, scope: !6186)
!6193 = !DILocation(line: 1334, column: 3, scope: !6186)
!6194 = distinct !DISubprogram(name: "shared_hash_find_slot_1", scope: !3, file: !3, line: 1410, type: !6172, scopeLine: 1411, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!6195 = !DILocalVariable(name: "vars", arg: 1, scope: !6194, file: !3, line: 1410, type: !2363)
!6196 = !DILocation(line: 1410, column: 38, scope: !6194)
!6197 = !DILocalVariable(name: "dv", arg: 2, scope: !6194, file: !3, line: 1410, type: !2410)
!6198 = !DILocation(line: 1410, column: 58, scope: !6194)
!6199 = !DILocalVariable(name: "dvhash", arg: 3, scope: !6194, file: !3, line: 1410, type: !1836)
!6200 = !DILocation(line: 1410, column: 72, scope: !6194)
!6201 = !DILocation(line: 1412, column: 54, scope: !6194)
!6202 = !DILocation(line: 1412, column: 36, scope: !6194)
!6203 = !DILocation(line: 1412, column: 61, scope: !6194)
!6204 = !DILocation(line: 1412, column: 65, scope: !6194)
!6205 = !DILocation(line: 1413, column: 28, scope: !6194)
!6206 = !DILocation(line: 1413, column: 8, scope: !6194)
!6207 = !DILocation(line: 1412, column: 10, scope: !6194)
!6208 = !DILocation(line: 1412, column: 3, scope: !6194)
!6209 = distinct !DISubprogram(name: "shared_hash_shared", scope: !3, file: !3, line: 1324, type: !6210, scopeLine: 1325, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!6210 = !DISubroutineType(types: !6211)
!6211 = !{!1130, !2363}
!6212 = !DILocalVariable(name: "vars", arg: 1, scope: !6209, file: !3, line: 1324, type: !2363)
!6213 = !DILocation(line: 1324, column: 33, scope: !6209)
!6214 = !DILocation(line: 1326, column: 10, scope: !6209)
!6215 = !DILocation(line: 1326, column: 16, scope: !6209)
!6216 = !DILocation(line: 1326, column: 25, scope: !6209)
!6217 = !DILocation(line: 1326, column: 3, scope: !6209)
!6218 = distinct !DISubprogram(name: "shared_hash_find_slot_unshare_1", scope: !3, file: !3, line: 1390, type: !6219, scopeLine: 1392, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!6219 = !DISubroutineType(types: !6220)
!6220 = !{!1848, !5557, !2410, !1836, !739}
!6221 = !DILocalVariable(name: "pvars", arg: 1, scope: !6218, file: !3, line: 1390, type: !5557)
!6222 = !DILocation(line: 1390, column: 47, scope: !6218)
!6223 = !DILocalVariable(name: "dv", arg: 2, scope: !6218, file: !3, line: 1390, type: !2410)
!6224 = !DILocation(line: 1390, column: 68, scope: !6218)
!6225 = !DILocalVariable(name: "dvhash", arg: 3, scope: !6218, file: !3, line: 1391, type: !1836)
!6226 = !DILocation(line: 1391, column: 16, scope: !6218)
!6227 = !DILocalVariable(name: "ins", arg: 4, scope: !6218, file: !3, line: 1391, type: !739)
!6228 = !DILocation(line: 1391, column: 43, scope: !6218)
!6229 = !DILocation(line: 1393, column: 28, scope: !6230)
!6230 = distinct !DILexicalBlock(scope: !6218, file: !3, line: 1393, column: 7)
!6231 = !DILocation(line: 1393, column: 27, scope: !6230)
!6232 = !DILocation(line: 1393, column: 7, scope: !6230)
!6233 = !DILocation(line: 1393, column: 7, scope: !6218)
!6234 = !DILocation(line: 1394, column: 36, scope: !6230)
!6235 = !DILocation(line: 1394, column: 35, scope: !6230)
!6236 = !DILocation(line: 1394, column: 14, scope: !6230)
!6237 = !DILocation(line: 1394, column: 6, scope: !6230)
!6238 = !DILocation(line: 1394, column: 12, scope: !6230)
!6239 = !DILocation(line: 1394, column: 5, scope: !6230)
!6240 = !DILocation(line: 1395, column: 55, scope: !6218)
!6241 = !DILocation(line: 1395, column: 54, scope: !6218)
!6242 = !DILocation(line: 1395, column: 36, scope: !6218)
!6243 = !DILocation(line: 1395, column: 63, scope: !6218)
!6244 = !DILocation(line: 1395, column: 67, scope: !6218)
!6245 = !DILocation(line: 1395, column: 75, scope: !6218)
!6246 = !DILocation(line: 1395, column: 10, scope: !6218)
!6247 = !DILocation(line: 1395, column: 3, scope: !6218)
!6248 = distinct !DISubprogram(name: "shared_hash_unshare", scope: !3, file: !3, line: 1350, type: !5194, scopeLine: 1351, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!6249 = !DILocalVariable(name: "vars", arg: 1, scope: !6248, file: !3, line: 1350, type: !2363)
!6250 = !DILocation(line: 1350, column: 34, scope: !6248)
!6251 = !DILocalVariable(name: "new_vars", scope: !6248, file: !3, line: 1352, type: !2363)
!6252 = !DILocation(line: 1352, column: 15, scope: !6248)
!6253 = !DILocation(line: 1352, column: 52, scope: !6248)
!6254 = !DILocation(line: 1352, column: 40, scope: !6248)
!6255 = !DILocation(line: 1352, column: 26, scope: !6248)
!6256 = !DILocation(line: 1353, column: 3, scope: !6248)
!6257 = !DILocation(line: 1354, column: 3, scope: !6248)
!6258 = !DILocation(line: 1354, column: 13, scope: !6248)
!6259 = !DILocation(line: 1354, column: 22, scope: !6248)
!6260 = !DILocation(line: 1356, column: 35, scope: !6248)
!6261 = !DILocation(line: 1356, column: 41, scope: !6248)
!6262 = !DILocation(line: 1356, column: 20, scope: !6248)
!6263 = !DILocation(line: 1356, column: 47, scope: !6248)
!6264 = !DILocation(line: 1356, column: 7, scope: !6248)
!6265 = !DILocation(line: 1355, column: 3, scope: !6248)
!6266 = !DILocation(line: 1355, column: 13, scope: !6248)
!6267 = !DILocation(line: 1356, column: 5, scope: !6248)
!6268 = !DILocation(line: 1358, column: 14, scope: !6248)
!6269 = !DILocation(line: 1358, column: 24, scope: !6248)
!6270 = !DILocation(line: 1358, column: 30, scope: !6248)
!6271 = !DILocation(line: 1358, column: 36, scope: !6248)
!6272 = !DILocation(line: 1358, column: 3, scope: !6248)
!6273 = !DILocation(line: 1359, column: 3, scope: !6248)
!6274 = !DILocation(line: 1359, column: 9, scope: !6248)
!6275 = !DILocation(line: 1359, column: 17, scope: !6248)
!6276 = !DILocation(line: 1360, column: 10, scope: !6248)
!6277 = !DILocation(line: 1360, column: 3, scope: !6248)
!6278 = distinct !DISubprogram(name: "vars_copy", scope: !3, file: !3, line: 1568, type: !6279, scopeLine: 1569, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!6279 = !DISubroutineType(types: !6280)
!6280 = !{null, !1827, !1827}
!6281 = !DILocalVariable(name: "dst", arg: 1, scope: !6278, file: !3, line: 1568, type: !1827)
!6282 = !DILocation(line: 1568, column: 19, scope: !6278)
!6283 = !DILocalVariable(name: "src", arg: 2, scope: !6278, file: !3, line: 1568, type: !1827)
!6284 = !DILocation(line: 1568, column: 31, scope: !6278)
!6285 = !DILocation(line: 1570, column: 27, scope: !6278)
!6286 = !DILocation(line: 1570, column: 45, scope: !6278)
!6287 = !DILocation(line: 1570, column: 3, scope: !6278)
!6288 = !DILocation(line: 1571, column: 1, scope: !6278)
!6289 = distinct !DISubprogram(name: "vars_copy_1", scope: !3, file: !3, line: 1547, type: !6290, scopeLine: 1548, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!6290 = !DISubroutineType(types: !6291)
!6291 = !{!1010, !1848, !1313}
!6292 = !DILocalVariable(name: "slot", arg: 1, scope: !6289, file: !3, line: 1547, type: !1848)
!6293 = !DILocation(line: 1547, column: 21, scope: !6289)
!6294 = !DILocalVariable(name: "data", arg: 2, scope: !6289, file: !3, line: 1547, type: !1313)
!6295 = !DILocation(line: 1547, column: 33, scope: !6289)
!6296 = !DILocalVariable(name: "dst", scope: !6289, file: !3, line: 1549, type: !1827)
!6297 = !DILocation(line: 1549, column: 10, scope: !6289)
!6298 = !DILocation(line: 1549, column: 25, scope: !6289)
!6299 = !DILocation(line: 1549, column: 16, scope: !6289)
!6300 = !DILocalVariable(name: "src", scope: !6289, file: !3, line: 1550, type: !2447)
!6301 = !DILocation(line: 1550, column: 12, scope: !6289)
!6302 = !DILocalVariable(name: "dstp", scope: !6289, file: !3, line: 1551, type: !1848)
!6303 = !DILocation(line: 1551, column: 10, scope: !6289)
!6304 = !DILocation(line: 1553, column: 21, scope: !6289)
!6305 = !DILocation(line: 1553, column: 20, scope: !6289)
!6306 = !DILocation(line: 1553, column: 9, scope: !6289)
!6307 = !DILocation(line: 1553, column: 7, scope: !6289)
!6308 = !DILocation(line: 1554, column: 3, scope: !6289)
!6309 = !DILocation(line: 1554, column: 8, scope: !6289)
!6310 = !DILocation(line: 1554, column: 16, scope: !6289)
!6311 = !DILocation(line: 1556, column: 36, scope: !6289)
!6312 = !DILocation(line: 1556, column: 41, scope: !6289)
!6313 = !DILocation(line: 1556, column: 46, scope: !6289)
!6314 = !DILocation(line: 1557, column: 22, scope: !6289)
!6315 = !DILocation(line: 1557, column: 27, scope: !6289)
!6316 = !DILocation(line: 1557, column: 8, scope: !6289)
!6317 = !DILocation(line: 1556, column: 10, scope: !6289)
!6318 = !DILocation(line: 1556, column: 8, scope: !6289)
!6319 = !DILocation(line: 1559, column: 11, scope: !6289)
!6320 = !DILocation(line: 1559, column: 4, scope: !6289)
!6321 = !DILocation(line: 1559, column: 9, scope: !6289)
!6322 = !DILocation(line: 1562, column: 3, scope: !6289)
!6323 = distinct !DISubprogram(name: "canon_value_cmp", scope: !3, file: !3, line: 1464, type: !6324, scopeLine: 1465, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!6324 = !DISubroutineType(types: !6325)
!6325 = !{!1130, !1188, !1188}
!6326 = !DILocalVariable(name: "tval", arg: 1, scope: !6323, file: !3, line: 1464, type: !1188)
!6327 = !DILocation(line: 1464, column: 22, scope: !6323)
!6328 = !DILocalVariable(name: "cval", arg: 2, scope: !6323, file: !3, line: 1464, type: !1188)
!6329 = !DILocation(line: 1464, column: 32, scope: !6323)
!6330 = !DILocation(line: 1466, column: 11, scope: !6323)
!6331 = !DILocation(line: 1467, column: 5, scope: !6323)
!6332 = !DILocation(line: 1467, column: 8, scope: !6323)
!6333 = !DILocation(line: 1467, column: 31, scope: !6323)
!6334 = !DILocation(line: 1467, column: 37, scope: !6323)
!6335 = !DILocation(line: 1467, column: 60, scope: !6323)
!6336 = !DILocation(line: 1467, column: 35, scope: !6323)
!6337 = !DILocation(line: 1466, column: 10, scope: !6323)
!6338 = !DILocation(line: 1466, column: 3, scope: !6323)
!6339 = distinct !DISubprogram(name: "loc_cmp", scope: !3, file: !3, line: 2660, type: !6340, scopeLine: 2661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!6340 = !DISubroutineType(types: !6341)
!6341 = !{!1010, !1188, !1188}
!6342 = !DILocalVariable(name: "x", arg: 1, scope: !6339, file: !3, line: 2660, type: !1188)
!6343 = !DILocation(line: 2660, column: 14, scope: !6339)
!6344 = !DILocalVariable(name: "y", arg: 2, scope: !6339, file: !3, line: 2660, type: !1188)
!6345 = !DILocation(line: 2660, column: 21, scope: !6339)
!6346 = !DILocalVariable(name: "i", scope: !6339, file: !3, line: 2662, type: !1010)
!6347 = !DILocation(line: 2662, column: 7, scope: !6339)
!6348 = !DILocalVariable(name: "j", scope: !6339, file: !3, line: 2662, type: !1010)
!6349 = !DILocation(line: 2662, column: 10, scope: !6339)
!6350 = !DILocalVariable(name: "r", scope: !6339, file: !3, line: 2662, type: !1010)
!6351 = !DILocation(line: 2662, column: 13, scope: !6339)
!6352 = !DILocalVariable(name: "code", scope: !6339, file: !3, line: 2663, type: !560)
!6353 = !DILocation(line: 2663, column: 12, scope: !6339)
!6354 = !DILocation(line: 2663, column: 19, scope: !6339)
!6355 = !DILocalVariable(name: "fmt", scope: !6339, file: !3, line: 2664, type: !1213)
!6356 = !DILocation(line: 2664, column: 15, scope: !6339)
!6357 = !DILocation(line: 2666, column: 7, scope: !6358)
!6358 = distinct !DILexicalBlock(scope: !6339, file: !3, line: 2666, column: 7)
!6359 = !DILocation(line: 2666, column: 12, scope: !6358)
!6360 = !DILocation(line: 2666, column: 9, scope: !6358)
!6361 = !DILocation(line: 2666, column: 7, scope: !6339)
!6362 = !DILocation(line: 2667, column: 5, scope: !6358)
!6363 = !DILocation(line: 2669, column: 7, scope: !6364)
!6364 = distinct !DILexicalBlock(scope: !6339, file: !3, line: 2669, column: 7)
!6365 = !DILocation(line: 2669, column: 7, scope: !6339)
!6366 = !DILocation(line: 2671, column: 12, scope: !6367)
!6367 = distinct !DILexicalBlock(scope: !6368, file: !3, line: 2671, column: 11)
!6368 = distinct !DILexicalBlock(scope: !6364, file: !3, line: 2670, column: 5)
!6369 = !DILocation(line: 2671, column: 11, scope: !6368)
!6370 = !DILocation(line: 2672, column: 2, scope: !6367)
!6371 = !DILocation(line: 2673, column: 7, scope: !6368)
!6372 = !DILocation(line: 2674, column: 11, scope: !6373)
!6373 = distinct !DILexicalBlock(scope: !6368, file: !3, line: 2674, column: 11)
!6374 = !DILocation(line: 2674, column: 24, scope: !6373)
!6375 = !DILocation(line: 2674, column: 21, scope: !6373)
!6376 = !DILocation(line: 2674, column: 11, scope: !6368)
!6377 = !DILocation(line: 2675, column: 2, scope: !6373)
!6378 = !DILocation(line: 2676, column: 16, scope: !6379)
!6379 = distinct !DILexicalBlock(scope: !6373, file: !3, line: 2676, column: 16)
!6380 = !DILocation(line: 2676, column: 28, scope: !6379)
!6381 = !DILocation(line: 2676, column: 26, scope: !6379)
!6382 = !DILocation(line: 2676, column: 16, scope: !6373)
!6383 = !DILocation(line: 2677, column: 2, scope: !6379)
!6384 = !DILocation(line: 2679, column: 2, scope: !6379)
!6385 = !DILocation(line: 2682, column: 7, scope: !6386)
!6386 = distinct !DILexicalBlock(scope: !6339, file: !3, line: 2682, column: 7)
!6387 = !DILocation(line: 2682, column: 7, scope: !6339)
!6388 = !DILocation(line: 2683, column: 5, scope: !6386)
!6389 = !DILocation(line: 2685, column: 7, scope: !6390)
!6390 = distinct !DILexicalBlock(scope: !6339, file: !3, line: 2685, column: 7)
!6391 = !DILocation(line: 2685, column: 7, scope: !6339)
!6392 = !DILocation(line: 2687, column: 12, scope: !6393)
!6393 = distinct !DILexicalBlock(scope: !6394, file: !3, line: 2687, column: 11)
!6394 = distinct !DILexicalBlock(scope: !6390, file: !3, line: 2686, column: 5)
!6395 = !DILocation(line: 2687, column: 11, scope: !6394)
!6396 = !DILocation(line: 2688, column: 2, scope: !6393)
!6397 = !DILocation(line: 2689, column: 7, scope: !6394)
!6398 = !DILocation(line: 2690, column: 23, scope: !6394)
!6399 = !DILocation(line: 2690, column: 36, scope: !6394)
!6400 = !DILocation(line: 2690, column: 14, scope: !6394)
!6401 = !DILocation(line: 2690, column: 7, scope: !6394)
!6402 = !DILocation(line: 2693, column: 7, scope: !6403)
!6403 = distinct !DILexicalBlock(scope: !6339, file: !3, line: 2693, column: 7)
!6404 = !DILocation(line: 2693, column: 7, scope: !6339)
!6405 = !DILocation(line: 2694, column: 5, scope: !6403)
!6406 = !DILocation(line: 2696, column: 7, scope: !6407)
!6407 = distinct !DILexicalBlock(scope: !6339, file: !3, line: 2696, column: 7)
!6408 = !DILocation(line: 2696, column: 20, scope: !6407)
!6409 = !DILocation(line: 2696, column: 7, scope: !6339)
!6410 = !DILocation(line: 2698, column: 11, scope: !6411)
!6411 = distinct !DILexicalBlock(scope: !6412, file: !3, line: 2698, column: 11)
!6412 = distinct !DILexicalBlock(scope: !6407, file: !3, line: 2697, column: 5)
!6413 = !DILocation(line: 2698, column: 24, scope: !6411)
!6414 = !DILocation(line: 2698, column: 11, scope: !6412)
!6415 = !DILocation(line: 2699, column: 2, scope: !6411)
!6416 = !DILocation(line: 2704, column: 28, scope: !6417)
!6417 = distinct !DILexicalBlock(scope: !6412, file: !3, line: 2704, column: 11)
!6418 = !DILocation(line: 2704, column: 31, scope: !6417)
!6419 = !DILocation(line: 2704, column: 11, scope: !6417)
!6420 = !DILocation(line: 2704, column: 11, scope: !6412)
!6421 = !DILocation(line: 2705, column: 2, scope: !6417)
!6422 = !DILocation(line: 2707, column: 2, scope: !6417)
!6423 = !DILocation(line: 2710, column: 7, scope: !6424)
!6424 = distinct !DILexicalBlock(scope: !6339, file: !3, line: 2710, column: 7)
!6425 = !DILocation(line: 2710, column: 20, scope: !6424)
!6426 = !DILocation(line: 2710, column: 7, scope: !6339)
!6427 = !DILocation(line: 2711, column: 5, scope: !6424)
!6428 = !DILocation(line: 2713, column: 7, scope: !6429)
!6429 = distinct !DILexicalBlock(scope: !6339, file: !3, line: 2713, column: 7)
!6430 = !DILocation(line: 2713, column: 23, scope: !6429)
!6431 = !DILocation(line: 2713, column: 20, scope: !6429)
!6432 = !DILocation(line: 2713, column: 7, scope: !6339)
!6433 = !DILocation(line: 2715, column: 12, scope: !6434)
!6434 = distinct !DILexicalBlock(scope: !6429, file: !3, line: 2715, column: 12)
!6435 = !DILocation(line: 2715, column: 27, scope: !6434)
!6436 = !DILocation(line: 2715, column: 25, scope: !6434)
!6437 = !DILocation(line: 2715, column: 12, scope: !6429)
!6438 = !DILocation(line: 2716, column: 5, scope: !6434)
!6439 = !DILocation(line: 2718, column: 5, scope: !6434)
!6440 = !DILocation(line: 2720, column: 3, scope: !6339)
!6441 = !DILocation(line: 2722, column: 7, scope: !6442)
!6442 = distinct !DILexicalBlock(scope: !6339, file: !3, line: 2722, column: 7)
!6443 = !DILocation(line: 2722, column: 20, scope: !6442)
!6444 = !DILocation(line: 2722, column: 7, scope: !6339)
!6445 = !DILocation(line: 2724, column: 11, scope: !6446)
!6446 = distinct !DILexicalBlock(scope: !6447, file: !3, line: 2724, column: 11)
!6447 = distinct !DILexicalBlock(scope: !6442, file: !3, line: 2723, column: 5)
!6448 = !DILocation(line: 2725, column: 6, scope: !6446)
!6449 = !DILocation(line: 2725, column: 4, scope: !6446)
!6450 = !DILocation(line: 2724, column: 11, scope: !6447)
!6451 = !DILocation(line: 2726, column: 2, scope: !6446)
!6452 = !DILocation(line: 2731, column: 7, scope: !6447)
!6453 = !DILocation(line: 2734, column: 9, scope: !6339)
!6454 = !DILocation(line: 2734, column: 7, scope: !6339)
!6455 = !DILocation(line: 2735, column: 10, scope: !6456)
!6456 = distinct !DILexicalBlock(scope: !6339, file: !3, line: 2735, column: 3)
!6457 = !DILocation(line: 2735, column: 8, scope: !6456)
!6458 = !DILocation(line: 2735, column: 15, scope: !6459)
!6459 = distinct !DILexicalBlock(scope: !6456, file: !3, line: 2735, column: 3)
!6460 = !DILocation(line: 2735, column: 19, scope: !6459)
!6461 = !DILocation(line: 2735, column: 17, scope: !6459)
!6462 = !DILocation(line: 2735, column: 3, scope: !6456)
!6463 = !DILocation(line: 2736, column: 13, scope: !6459)
!6464 = !DILocation(line: 2736, column: 17, scope: !6459)
!6465 = !DILocation(line: 2736, column: 5, scope: !6459)
!6466 = !DILocation(line: 2739, column: 6, scope: !6467)
!6467 = distinct !DILexicalBlock(scope: !6468, file: !3, line: 2739, column: 6)
!6468 = distinct !DILexicalBlock(scope: !6459, file: !3, line: 2737, column: 7)
!6469 = !DILocation(line: 2739, column: 22, scope: !6467)
!6470 = !DILocation(line: 2739, column: 19, scope: !6467)
!6471 = !DILocation(line: 2739, column: 6, scope: !6468)
!6472 = !DILocation(line: 2740, column: 4, scope: !6467)
!6473 = !DILocation(line: 2741, column: 11, scope: !6474)
!6474 = distinct !DILexicalBlock(scope: !6467, file: !3, line: 2741, column: 11)
!6475 = !DILocation(line: 2741, column: 26, scope: !6474)
!6476 = !DILocation(line: 2741, column: 24, scope: !6474)
!6477 = !DILocation(line: 2741, column: 11, scope: !6467)
!6478 = !DILocation(line: 2742, column: 4, scope: !6474)
!6479 = !DILocation(line: 2744, column: 4, scope: !6474)
!6480 = !DILocation(line: 2748, column: 6, scope: !6481)
!6481 = distinct !DILexicalBlock(scope: !6468, file: !3, line: 2748, column: 6)
!6482 = !DILocation(line: 2748, column: 21, scope: !6481)
!6483 = !DILocation(line: 2748, column: 18, scope: !6481)
!6484 = !DILocation(line: 2748, column: 6, scope: !6468)
!6485 = !DILocation(line: 2749, column: 4, scope: !6481)
!6486 = !DILocation(line: 2750, column: 11, scope: !6487)
!6487 = distinct !DILexicalBlock(scope: !6481, file: !3, line: 2750, column: 11)
!6488 = !DILocation(line: 2750, column: 25, scope: !6487)
!6489 = !DILocation(line: 2750, column: 23, scope: !6487)
!6490 = !DILocation(line: 2750, column: 11, scope: !6481)
!6491 = !DILocation(line: 2751, column: 4, scope: !6487)
!6492 = !DILocation(line: 2753, column: 4, scope: !6487)
!6493 = !DILocation(line: 2758, column: 6, scope: !6494)
!6494 = distinct !DILexicalBlock(scope: !6468, file: !3, line: 2758, column: 6)
!6495 = !DILocation(line: 2758, column: 24, scope: !6494)
!6496 = !DILocation(line: 2758, column: 21, scope: !6494)
!6497 = !DILocation(line: 2758, column: 6, scope: !6468)
!6498 = !DILocation(line: 2760, column: 11, scope: !6499)
!6499 = distinct !DILexicalBlock(scope: !6494, file: !3, line: 2760, column: 11)
!6500 = !DILocation(line: 2760, column: 28, scope: !6499)
!6501 = !DILocation(line: 2760, column: 26, scope: !6499)
!6502 = !DILocation(line: 2760, column: 11, scope: !6494)
!6503 = !DILocation(line: 2761, column: 4, scope: !6499)
!6504 = !DILocation(line: 2763, column: 4, scope: !6499)
!6505 = !DILocation(line: 2765, column: 9, scope: !6506)
!6506 = distinct !DILexicalBlock(scope: !6468, file: !3, line: 2765, column: 2)
!6507 = !DILocation(line: 2765, column: 7, scope: !6506)
!6508 = !DILocation(line: 2765, column: 14, scope: !6509)
!6509 = distinct !DILexicalBlock(scope: !6506, file: !3, line: 2765, column: 2)
!6510 = !DILocation(line: 2765, column: 18, scope: !6509)
!6511 = !DILocation(line: 2765, column: 16, scope: !6509)
!6512 = !DILocation(line: 2765, column: 2, scope: !6506)
!6513 = !DILocation(line: 2766, column: 22, scope: !6514)
!6514 = distinct !DILexicalBlock(scope: !6509, file: !3, line: 2766, column: 8)
!6515 = !DILocation(line: 2767, column: 8, scope: !6514)
!6516 = !DILocation(line: 2766, column: 13, scope: !6514)
!6517 = !DILocation(line: 2766, column: 11, scope: !6514)
!6518 = !DILocation(line: 2766, column: 8, scope: !6509)
!6519 = !DILocation(line: 2768, column: 13, scope: !6514)
!6520 = !DILocation(line: 2768, column: 6, scope: !6514)
!6521 = !DILocation(line: 2767, column: 26, scope: !6514)
!6522 = !DILocation(line: 2765, column: 35, scope: !6509)
!6523 = !DILocation(line: 2765, column: 2, scope: !6509)
!6524 = distinct !{!6524, !6512, !6525}
!6525 = !DILocation(line: 2768, column: 13, scope: !6506)
!6526 = !DILocation(line: 2769, column: 2, scope: !6468)
!6527 = !DILocation(line: 2772, column: 20, scope: !6528)
!6528 = distinct !DILexicalBlock(scope: !6468, file: !3, line: 2772, column: 6)
!6529 = !DILocation(line: 2772, column: 33, scope: !6528)
!6530 = !DILocation(line: 2772, column: 11, scope: !6528)
!6531 = !DILocation(line: 2772, column: 9, scope: !6528)
!6532 = !DILocation(line: 2772, column: 6, scope: !6468)
!6533 = !DILocation(line: 2773, column: 11, scope: !6528)
!6534 = !DILocation(line: 2773, column: 4, scope: !6528)
!6535 = !DILocation(line: 2774, column: 2, scope: !6468)
!6536 = !DILocation(line: 2778, column: 6, scope: !6537)
!6537 = distinct !DILexicalBlock(scope: !6468, file: !3, line: 2778, column: 6)
!6538 = !DILocation(line: 2778, column: 21, scope: !6537)
!6539 = !DILocation(line: 2778, column: 18, scope: !6537)
!6540 = !DILocation(line: 2778, column: 6, scope: !6468)
!6541 = !DILocation(line: 2779, column: 4, scope: !6537)
!6542 = !DILocation(line: 2780, column: 7, scope: !6543)
!6543 = distinct !DILexicalBlock(scope: !6468, file: !3, line: 2780, column: 6)
!6544 = !DILocation(line: 2780, column: 6, scope: !6468)
!6545 = !DILocation(line: 2781, column: 4, scope: !6543)
!6546 = !DILocation(line: 2782, column: 7, scope: !6547)
!6547 = distinct !DILexicalBlock(scope: !6468, file: !3, line: 2782, column: 6)
!6548 = !DILocation(line: 2782, column: 6, scope: !6468)
!6549 = !DILocation(line: 2783, column: 4, scope: !6547)
!6550 = !DILocation(line: 2784, column: 19, scope: !6551)
!6551 = distinct !DILexicalBlock(scope: !6468, file: !3, line: 2784, column: 6)
!6552 = !DILocation(line: 2784, column: 32, scope: !6551)
!6553 = !DILocation(line: 2784, column: 11, scope: !6551)
!6554 = !DILocation(line: 2784, column: 9, scope: !6551)
!6555 = !DILocation(line: 2784, column: 46, scope: !6551)
!6556 = !DILocation(line: 2784, column: 6, scope: !6468)
!6557 = !DILocation(line: 2785, column: 4, scope: !6551)
!6558 = !DILocation(line: 2786, column: 11, scope: !6559)
!6559 = distinct !DILexicalBlock(scope: !6551, file: !3, line: 2786, column: 11)
!6560 = !DILocation(line: 2786, column: 13, scope: !6559)
!6561 = !DILocation(line: 2786, column: 11, scope: !6551)
!6562 = !DILocation(line: 2787, column: 4, scope: !6559)
!6563 = !DILocation(line: 2789, column: 4, scope: !6559)
!6564 = !DILocation(line: 2793, column: 2, scope: !6468)
!6565 = !DILocation(line: 2797, column: 2, scope: !6468)
!6566 = !DILocation(line: 2803, column: 2, scope: !6468)
!6567 = !DILocation(line: 2804, column: 7, scope: !6468)
!6568 = !DILocation(line: 2735, column: 43, scope: !6459)
!6569 = !DILocation(line: 2735, column: 3, scope: !6459)
!6570 = distinct !{!6570, !6462, !6571}
!6571 = !DILocation(line: 2804, column: 7, scope: !6456)
!6572 = !DILocation(line: 2806, column: 3, scope: !6339)
!6573 = !DILocation(line: 2807, column: 1, scope: !6339)
!6574 = distinct !DISubprogram(name: "shared_var_p", scope: !3, file: !3, line: 1340, type: !6575, scopeLine: 1341, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!6575 = !DISubroutineType(types: !6576)
!6576 = !{!1130, !2447, !2363}
!6577 = !DILocalVariable(name: "var", arg: 1, scope: !6574, file: !3, line: 1340, type: !2447)
!6578 = !DILocation(line: 1340, column: 24, scope: !6574)
!6579 = !DILocalVariable(name: "vars", arg: 2, scope: !6574, file: !3, line: 1340, type: !2363)
!6580 = !DILocation(line: 1340, column: 41, scope: !6574)
!6581 = !DILocation(line: 1343, column: 12, scope: !6574)
!6582 = !DILocation(line: 1343, column: 17, scope: !6574)
!6583 = !DILocation(line: 1343, column: 38, scope: !6574)
!6584 = !DILocation(line: 1343, column: 43, scope: !6574)
!6585 = !DILocation(line: 1343, column: 32, scope: !6574)
!6586 = !DILocation(line: 1343, column: 30, scope: !6574)
!6587 = !DILocation(line: 1343, column: 26, scope: !6574)
!6588 = !DILocation(line: 1344, column: 4, scope: !6574)
!6589 = !DILocation(line: 1344, column: 27, scope: !6574)
!6590 = !DILocation(line: 1344, column: 7, scope: !6574)
!6591 = !DILocation(line: 1343, column: 10, scope: !6574)
!6592 = !DILocation(line: 1343, column: 3, scope: !6574)
!6593 = distinct !DISubprogram(name: "unshare_variable", scope: !3, file: !3, line: 1475, type: !6594, scopeLine: 1477, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!6594 = !DISubroutineType(types: !6595)
!6595 = !{!1848, !2418, !1848, !2447, !734}
!6596 = !DILocalVariable(name: "set", arg: 1, scope: !6593, file: !3, line: 1475, type: !2418)
!6597 = !DILocation(line: 1475, column: 33, scope: !6593)
!6598 = !DILocalVariable(name: "slot", arg: 2, scope: !6593, file: !3, line: 1475, type: !1848)
!6599 = !DILocation(line: 1475, column: 45, scope: !6593)
!6600 = !DILocalVariable(name: "var", arg: 3, scope: !6593, file: !3, line: 1475, type: !2447)
!6601 = !DILocation(line: 1475, column: 60, scope: !6593)
!6602 = !DILocalVariable(name: "initialized", arg: 4, scope: !6593, file: !3, line: 1476, type: !734)
!6603 = !DILocation(line: 1476, column: 26, scope: !6593)
!6604 = !DILocalVariable(name: "new_var", scope: !6593, file: !3, line: 1478, type: !2447)
!6605 = !DILocation(line: 1478, column: 12, scope: !6593)
!6606 = !DILocalVariable(name: "i", scope: !6593, file: !3, line: 1479, type: !1010)
!6607 = !DILocation(line: 1479, column: 7, scope: !6593)
!6608 = !DILocation(line: 1481, column: 45, scope: !6593)
!6609 = !DILocation(line: 1481, column: 50, scope: !6593)
!6610 = !DILocation(line: 1481, column: 36, scope: !6593)
!6611 = !DILocation(line: 1481, column: 24, scope: !6593)
!6612 = !DILocation(line: 1481, column: 13, scope: !6593)
!6613 = !DILocation(line: 1481, column: 11, scope: !6593)
!6614 = !DILocation(line: 1482, column: 17, scope: !6593)
!6615 = !DILocation(line: 1482, column: 22, scope: !6593)
!6616 = !DILocation(line: 1482, column: 3, scope: !6593)
!6617 = !DILocation(line: 1482, column: 12, scope: !6593)
!6618 = !DILocation(line: 1482, column: 15, scope: !6593)
!6619 = !DILocation(line: 1483, column: 3, scope: !6593)
!6620 = !DILocation(line: 1483, column: 12, scope: !6593)
!6621 = !DILocation(line: 1483, column: 21, scope: !6593)
!6622 = !DILocation(line: 1484, column: 3, scope: !6593)
!6623 = !DILocation(line: 1484, column: 8, scope: !6593)
!6624 = !DILocation(line: 1484, column: 16, scope: !6593)
!6625 = !DILocation(line: 1485, column: 26, scope: !6593)
!6626 = !DILocation(line: 1485, column: 31, scope: !6593)
!6627 = !DILocation(line: 1485, column: 3, scope: !6593)
!6628 = !DILocation(line: 1485, column: 12, scope: !6593)
!6629 = !DILocation(line: 1485, column: 24, scope: !6593)
!6630 = !DILocation(line: 1486, column: 30, scope: !6593)
!6631 = !DILocation(line: 1486, column: 35, scope: !6593)
!6632 = !DILocation(line: 1486, column: 3, scope: !6593)
!6633 = !DILocation(line: 1486, column: 12, scope: !6593)
!6634 = !DILocation(line: 1486, column: 28, scope: !6593)
!6635 = !DILocation(line: 1487, column: 3, scope: !6593)
!6636 = !DILocation(line: 1487, column: 8, scope: !6593)
!6637 = !DILocation(line: 1487, column: 24, scope: !6593)
!6638 = !DILocation(line: 1488, column: 3, scope: !6593)
!6639 = !DILocation(line: 1488, column: 12, scope: !6593)
!6640 = !DILocation(line: 1488, column: 33, scope: !6593)
!6641 = !DILocation(line: 1490, column: 9, scope: !6642)
!6642 = distinct !DILexicalBlock(scope: !6593, file: !3, line: 1490, column: 7)
!6643 = !DILocation(line: 1490, column: 7, scope: !6593)
!6644 = !DILocation(line: 1491, column: 17, scope: !6642)
!6645 = !DILocation(line: 1491, column: 5, scope: !6642)
!6646 = !DILocation(line: 1493, column: 10, scope: !6647)
!6647 = distinct !DILexicalBlock(scope: !6593, file: !3, line: 1493, column: 3)
!6648 = !DILocation(line: 1493, column: 8, scope: !6647)
!6649 = !DILocation(line: 1493, column: 15, scope: !6650)
!6650 = distinct !DILexicalBlock(scope: !6647, file: !3, line: 1493, column: 3)
!6651 = !DILocation(line: 1493, column: 19, scope: !6650)
!6652 = !DILocation(line: 1493, column: 24, scope: !6650)
!6653 = !DILocation(line: 1493, column: 17, scope: !6650)
!6654 = !DILocation(line: 1493, column: 3, scope: !6647)
!6655 = !DILocalVariable(name: "node", scope: !6656, file: !3, line: 1495, type: !2437)
!6656 = distinct !DILexicalBlock(scope: !6650, file: !3, line: 1494, column: 5)
!6657 = !DILocation(line: 1495, column: 22, scope: !6656)
!6658 = !DILocalVariable(name: "nextp", scope: !6656, file: !3, line: 1496, type: !5595)
!6659 = !DILocation(line: 1496, column: 23, scope: !6656)
!6660 = !DILocation(line: 1498, column: 37, scope: !6656)
!6661 = !DILocation(line: 1498, column: 42, scope: !6656)
!6662 = !DILocation(line: 1498, column: 51, scope: !6656)
!6663 = !DILocation(line: 1498, column: 54, scope: !6656)
!6664 = !DILocation(line: 1498, column: 7, scope: !6656)
!6665 = !DILocation(line: 1498, column: 16, scope: !6656)
!6666 = !DILocation(line: 1498, column: 25, scope: !6656)
!6667 = !DILocation(line: 1498, column: 28, scope: !6656)
!6668 = !DILocation(line: 1498, column: 35, scope: !6656)
!6669 = !DILocation(line: 1499, column: 16, scope: !6656)
!6670 = !DILocation(line: 1499, column: 25, scope: !6656)
!6671 = !DILocation(line: 1499, column: 34, scope: !6656)
!6672 = !DILocation(line: 1499, column: 37, scope: !6656)
!6673 = !DILocation(line: 1499, column: 13, scope: !6656)
!6674 = !DILocation(line: 1500, column: 19, scope: !6675)
!6675 = distinct !DILexicalBlock(scope: !6656, file: !3, line: 1500, column: 7)
!6676 = !DILocation(line: 1500, column: 24, scope: !6675)
!6677 = !DILocation(line: 1500, column: 33, scope: !6675)
!6678 = !DILocation(line: 1500, column: 36, scope: !6675)
!6679 = !DILocation(line: 1500, column: 17, scope: !6675)
!6680 = !DILocation(line: 1500, column: 12, scope: !6675)
!6681 = !DILocation(line: 1500, column: 47, scope: !6682)
!6682 = distinct !DILexicalBlock(scope: !6675, file: !3, line: 1500, column: 7)
!6683 = !DILocation(line: 1500, column: 7, scope: !6675)
!6684 = !DILocalVariable(name: "new_lc", scope: !6685, file: !3, line: 1502, type: !2437)
!6685 = distinct !DILexicalBlock(scope: !6682, file: !3, line: 1501, column: 2)
!6686 = !DILocation(line: 1502, column: 19, scope: !6685)
!6687 = !DILocation(line: 1504, column: 42, scope: !6685)
!6688 = !DILocation(line: 1504, column: 30, scope: !6685)
!6689 = !DILocation(line: 1504, column: 13, scope: !6685)
!6690 = !DILocation(line: 1504, column: 11, scope: !6685)
!6691 = !DILocation(line: 1505, column: 4, scope: !6685)
!6692 = !DILocation(line: 1505, column: 12, scope: !6685)
!6693 = !DILocation(line: 1505, column: 17, scope: !6685)
!6694 = !DILocation(line: 1506, column: 8, scope: !6695)
!6695 = distinct !DILexicalBlock(scope: !6685, file: !3, line: 1506, column: 8)
!6696 = !DILocation(line: 1506, column: 14, scope: !6695)
!6697 = !DILocation(line: 1506, column: 21, scope: !6695)
!6698 = !DILocation(line: 1506, column: 19, scope: !6695)
!6699 = !DILocation(line: 1506, column: 8, scope: !6685)
!6700 = !DILocation(line: 1507, column: 21, scope: !6695)
!6701 = !DILocation(line: 1507, column: 27, scope: !6695)
!6702 = !DILocation(line: 1507, column: 6, scope: !6695)
!6703 = !DILocation(line: 1507, column: 14, scope: !6695)
!6704 = !DILocation(line: 1507, column: 19, scope: !6695)
!6705 = !DILocation(line: 1509, column: 21, scope: !6695)
!6706 = !DILocation(line: 1509, column: 6, scope: !6695)
!6707 = !DILocation(line: 1509, column: 14, scope: !6695)
!6708 = !DILocation(line: 1509, column: 19, scope: !6695)
!6709 = !DILocation(line: 1510, column: 8, scope: !6710)
!6710 = distinct !DILexicalBlock(scope: !6685, file: !3, line: 1510, column: 8)
!6711 = !DILocation(line: 1510, column: 14, scope: !6710)
!6712 = !DILocation(line: 1510, column: 22, scope: !6710)
!6713 = !DILocation(line: 1510, column: 27, scope: !6710)
!6714 = !DILocation(line: 1510, column: 8, scope: !6685)
!6715 = !DILocation(line: 1511, column: 24, scope: !6710)
!6716 = !DILocation(line: 1511, column: 30, scope: !6710)
!6717 = !DILocation(line: 1511, column: 6, scope: !6710)
!6718 = !DILocation(line: 1511, column: 14, scope: !6710)
!6719 = !DILocation(line: 1511, column: 22, scope: !6710)
!6720 = !DILocation(line: 1513, column: 6, scope: !6710)
!6721 = !DILocation(line: 1513, column: 14, scope: !6710)
!6722 = !DILocation(line: 1513, column: 22, scope: !6710)
!6723 = !DILocation(line: 1514, column: 18, scope: !6685)
!6724 = !DILocation(line: 1514, column: 24, scope: !6685)
!6725 = !DILocation(line: 1514, column: 4, scope: !6685)
!6726 = !DILocation(line: 1514, column: 12, scope: !6685)
!6727 = !DILocation(line: 1514, column: 16, scope: !6685)
!6728 = !DILocation(line: 1516, column: 13, scope: !6685)
!6729 = !DILocation(line: 1516, column: 5, scope: !6685)
!6730 = !DILocation(line: 1516, column: 11, scope: !6685)
!6731 = !DILocation(line: 1517, column: 13, scope: !6685)
!6732 = !DILocation(line: 1517, column: 21, scope: !6685)
!6733 = !DILocation(line: 1517, column: 10, scope: !6685)
!6734 = !DILocation(line: 1518, column: 2, scope: !6685)
!6735 = !DILocation(line: 1500, column: 60, scope: !6682)
!6736 = !DILocation(line: 1500, column: 66, scope: !6682)
!6737 = !DILocation(line: 1500, column: 58, scope: !6682)
!6738 = !DILocation(line: 1500, column: 7, scope: !6682)
!6739 = distinct !{!6739, !6683, !6740}
!6740 = !DILocation(line: 1518, column: 2, scope: !6675)
!6741 = !DILocation(line: 1520, column: 38, scope: !6656)
!6742 = !DILocation(line: 1520, column: 43, scope: !6656)
!6743 = !DILocation(line: 1520, column: 52, scope: !6656)
!6744 = !DILocation(line: 1520, column: 55, scope: !6656)
!6745 = !DILocation(line: 1520, column: 7, scope: !6656)
!6746 = !DILocation(line: 1520, column: 16, scope: !6656)
!6747 = !DILocation(line: 1520, column: 25, scope: !6656)
!6748 = !DILocation(line: 1520, column: 28, scope: !6656)
!6749 = !DILocation(line: 1520, column: 36, scope: !6656)
!6750 = !DILocation(line: 1521, column: 5, scope: !6656)
!6751 = !DILocation(line: 1493, column: 38, scope: !6650)
!6752 = !DILocation(line: 1493, column: 3, scope: !6650)
!6753 = distinct !{!6753, !6654, !6754}
!6754 = !DILocation(line: 1521, column: 5, scope: !6647)
!6755 = !DILocation(line: 1523, column: 21, scope: !6593)
!6756 = !DILocation(line: 1524, column: 27, scope: !6757)
!6757 = distinct !DILexicalBlock(scope: !6593, file: !3, line: 1524, column: 7)
!6758 = !DILocation(line: 1524, column: 32, scope: !6757)
!6759 = !DILocation(line: 1524, column: 7, scope: !6757)
!6760 = !DILocation(line: 1524, column: 7, scope: !6593)
!6761 = !DILocation(line: 1525, column: 44, scope: !6757)
!6762 = !DILocation(line: 1525, column: 49, scope: !6757)
!6763 = !DILocation(line: 1525, column: 55, scope: !6757)
!6764 = !DILocation(line: 1525, column: 60, scope: !6757)
!6765 = !DILocation(line: 1525, column: 12, scope: !6757)
!6766 = !DILocation(line: 1525, column: 10, scope: !6757)
!6767 = !DILocation(line: 1525, column: 5, scope: !6757)
!6768 = !DILocation(line: 1526, column: 12, scope: !6769)
!6769 = distinct !DILexicalBlock(scope: !6757, file: !3, line: 1526, column: 12)
!6770 = !DILocation(line: 1526, column: 17, scope: !6769)
!6771 = !DILocation(line: 1526, column: 32, scope: !6769)
!6772 = !DILocation(line: 1526, column: 35, scope: !6769)
!6773 = !DILocation(line: 1526, column: 40, scope: !6769)
!6774 = !DILocation(line: 1526, column: 48, scope: !6769)
!6775 = !DILocation(line: 1526, column: 53, scope: !6769)
!6776 = !DILocation(line: 1526, column: 45, scope: !6769)
!6777 = !DILocation(line: 1526, column: 12, scope: !6757)
!6778 = !DILocation(line: 1527, column: 44, scope: !6769)
!6779 = !DILocation(line: 1527, column: 49, scope: !6769)
!6780 = !DILocation(line: 1527, column: 55, scope: !6769)
!6781 = !DILocation(line: 1527, column: 60, scope: !6769)
!6782 = !DILocation(line: 1527, column: 12, scope: !6769)
!6783 = !DILocation(line: 1527, column: 10, scope: !6769)
!6784 = !DILocation(line: 1527, column: 5, scope: !6769)
!6785 = !DILocation(line: 1528, column: 11, scope: !6593)
!6786 = !DILocation(line: 1528, column: 4, scope: !6593)
!6787 = !DILocation(line: 1528, column: 9, scope: !6593)
!6788 = !DILocation(line: 1529, column: 7, scope: !6789)
!6789 = distinct !DILexicalBlock(scope: !6593, file: !3, line: 1529, column: 7)
!6790 = !DILocation(line: 1529, column: 12, scope: !6789)
!6791 = !DILocation(line: 1529, column: 7, scope: !6593)
!6792 = !DILocalVariable(name: "cslot", scope: !6793, file: !3, line: 1531, type: !1848)
!6793 = distinct !DILexicalBlock(scope: !6789, file: !3, line: 1530, column: 5)
!6794 = !DILocation(line: 1531, column: 14, scope: !6793)
!6795 = !DILocation(line: 1532, column: 30, scope: !6793)
!6796 = !DILocation(line: 1532, column: 49, scope: !6793)
!6797 = !DILocation(line: 1532, column: 54, scope: !6793)
!6798 = !DILocation(line: 1533, column: 23, scope: !6793)
!6799 = !DILocation(line: 1533, column: 28, scope: !6793)
!6800 = !DILocation(line: 1533, column: 9, scope: !6793)
!6801 = !DILocation(line: 1532, column: 4, scope: !6793)
!6802 = !DILocation(line: 1534, column: 7, scope: !6793)
!6803 = !DILocation(line: 1535, column: 7, scope: !6793)
!6804 = !DILocation(line: 1535, column: 12, scope: !6793)
!6805 = !DILocation(line: 1535, column: 33, scope: !6793)
!6806 = !DILocation(line: 1536, column: 27, scope: !6793)
!6807 = !DILocation(line: 1536, column: 7, scope: !6793)
!6808 = !DILocation(line: 1537, column: 16, scope: !6793)
!6809 = !DILocation(line: 1537, column: 8, scope: !6793)
!6810 = !DILocation(line: 1537, column: 14, scope: !6793)
!6811 = !DILocation(line: 1538, column: 7, scope: !6793)
!6812 = !DILocation(line: 1538, column: 16, scope: !6793)
!6813 = !DILocation(line: 1538, column: 37, scope: !6793)
!6814 = !DILocation(line: 1539, column: 5, scope: !6793)
!6815 = !DILocation(line: 1540, column: 10, scope: !6593)
!6816 = !DILocation(line: 1540, column: 3, scope: !6593)
!6817 = distinct !DISubprogram(name: "find_variable_location_part", scope: !3, file: !3, line: 6336, type: !6818, scopeLine: 6338, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!6818 = !DISubroutineType(types: !6819)
!6819 = !{!1010, !2447, !1067, !2496}
!6820 = !DILocalVariable(name: "var", arg: 1, scope: !6817, file: !3, line: 6336, type: !2447)
!6821 = !DILocation(line: 6336, column: 39, scope: !6817)
!6822 = !DILocalVariable(name: "offset", arg: 2, scope: !6817, file: !3, line: 6336, type: !1067)
!6823 = !DILocation(line: 6336, column: 58, scope: !6817)
!6824 = !DILocalVariable(name: "insertion_point", arg: 3, scope: !6817, file: !3, line: 6337, type: !2496)
!6825 = !DILocation(line: 6337, column: 14, scope: !6817)
!6826 = !DILocalVariable(name: "pos", scope: !6817, file: !3, line: 6339, type: !1010)
!6827 = !DILocation(line: 6339, column: 7, scope: !6817)
!6828 = !DILocalVariable(name: "low", scope: !6817, file: !3, line: 6339, type: !1010)
!6829 = !DILocation(line: 6339, column: 12, scope: !6817)
!6830 = !DILocalVariable(name: "high", scope: !6817, file: !3, line: 6339, type: !1010)
!6831 = !DILocation(line: 6339, column: 17, scope: !6817)
!6832 = !DILocation(line: 6342, column: 7, scope: !6817)
!6833 = !DILocation(line: 6343, column: 10, scope: !6817)
!6834 = !DILocation(line: 6343, column: 15, scope: !6817)
!6835 = !DILocation(line: 6343, column: 8, scope: !6817)
!6836 = !DILocation(line: 6344, column: 3, scope: !6817)
!6837 = !DILocation(line: 6344, column: 10, scope: !6817)
!6838 = !DILocation(line: 6344, column: 17, scope: !6817)
!6839 = !DILocation(line: 6344, column: 14, scope: !6817)
!6840 = !DILocation(line: 6346, column: 14, scope: !6841)
!6841 = distinct !DILexicalBlock(scope: !6817, file: !3, line: 6345, column: 5)
!6842 = !DILocation(line: 6346, column: 20, scope: !6841)
!6843 = !DILocation(line: 6346, column: 18, scope: !6841)
!6844 = !DILocation(line: 6346, column: 26, scope: !6841)
!6845 = !DILocation(line: 6346, column: 11, scope: !6841)
!6846 = !DILocation(line: 6347, column: 11, scope: !6847)
!6847 = distinct !DILexicalBlock(scope: !6841, file: !3, line: 6347, column: 11)
!6848 = !DILocation(line: 6347, column: 16, scope: !6847)
!6849 = !DILocation(line: 6347, column: 25, scope: !6847)
!6850 = !DILocation(line: 6347, column: 30, scope: !6847)
!6851 = !DILocation(line: 6347, column: 39, scope: !6847)
!6852 = !DILocation(line: 6347, column: 37, scope: !6847)
!6853 = !DILocation(line: 6347, column: 11, scope: !6841)
!6854 = !DILocation(line: 6348, column: 8, scope: !6847)
!6855 = !DILocation(line: 6348, column: 12, scope: !6847)
!6856 = !DILocation(line: 6348, column: 6, scope: !6847)
!6857 = !DILocation(line: 6348, column: 2, scope: !6847)
!6858 = !DILocation(line: 6350, column: 9, scope: !6847)
!6859 = !DILocation(line: 6350, column: 7, scope: !6847)
!6860 = distinct !{!6860, !6836, !6861}
!6861 = !DILocation(line: 6351, column: 5, scope: !6817)
!6862 = !DILocation(line: 6352, column: 9, scope: !6817)
!6863 = !DILocation(line: 6352, column: 7, scope: !6817)
!6864 = !DILocation(line: 6354, column: 7, scope: !6865)
!6865 = distinct !DILexicalBlock(scope: !6817, file: !3, line: 6354, column: 7)
!6866 = !DILocation(line: 6354, column: 7, scope: !6817)
!6867 = !DILocation(line: 6355, column: 24, scope: !6865)
!6868 = !DILocation(line: 6355, column: 6, scope: !6865)
!6869 = !DILocation(line: 6355, column: 22, scope: !6865)
!6870 = !DILocation(line: 6355, column: 5, scope: !6865)
!6871 = !DILocation(line: 6357, column: 7, scope: !6872)
!6872 = distinct !DILexicalBlock(scope: !6817, file: !3, line: 6357, column: 7)
!6873 = !DILocation(line: 6357, column: 13, scope: !6872)
!6874 = !DILocation(line: 6357, column: 18, scope: !6872)
!6875 = !DILocation(line: 6357, column: 11, scope: !6872)
!6876 = !DILocation(line: 6357, column: 30, scope: !6872)
!6877 = !DILocation(line: 6357, column: 33, scope: !6872)
!6878 = !DILocation(line: 6357, column: 38, scope: !6872)
!6879 = !DILocation(line: 6357, column: 47, scope: !6872)
!6880 = !DILocation(line: 6357, column: 52, scope: !6872)
!6881 = !DILocation(line: 6357, column: 62, scope: !6872)
!6882 = !DILocation(line: 6357, column: 59, scope: !6872)
!6883 = !DILocation(line: 6357, column: 7, scope: !6817)
!6884 = !DILocation(line: 6358, column: 12, scope: !6872)
!6885 = !DILocation(line: 6358, column: 5, scope: !6872)
!6886 = !DILocation(line: 6360, column: 3, scope: !6817)
!6887 = !DILocation(line: 6361, column: 1, scope: !6817)
!6888 = distinct !DISubprogram(name: "add_value_chains", scope: !3, file: !3, line: 2864, type: !6889, scopeLine: 2865, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!6889 = !DISubroutineType(types: !6890)
!6890 = !{null, !2410, !1188}
!6891 = !DILocalVariable(name: "dv", arg: 1, scope: !6888, file: !3, line: 2864, type: !2410)
!6892 = !DILocation(line: 2864, column: 33, scope: !6888)
!6893 = !DILocalVariable(name: "loc", arg: 2, scope: !6888, file: !3, line: 2864, type: !1188)
!6894 = !DILocation(line: 2864, column: 41, scope: !6888)
!6895 = !DILocation(line: 2866, column: 7, scope: !6896)
!6896 = distinct !DILexicalBlock(scope: !6888, file: !3, line: 2866, column: 7)
!6897 = !DILocation(line: 2866, column: 22, scope: !6896)
!6898 = !DILocation(line: 2866, column: 31, scope: !6896)
!6899 = !DILocation(line: 2866, column: 34, scope: !6896)
!6900 = !DILocation(line: 2866, column: 49, scope: !6896)
!6901 = !DILocation(line: 2866, column: 7, scope: !6888)
!6902 = !DILocation(line: 2868, column: 44, scope: !6903)
!6903 = distinct !DILexicalBlock(scope: !6896, file: !3, line: 2867, column: 5)
!6904 = !DILocation(line: 2868, column: 30, scope: !6903)
!6905 = !DILocation(line: 2868, column: 7, scope: !6903)
!6906 = !DILocation(line: 2869, column: 7, scope: !6903)
!6907 = !DILocation(line: 2871, column: 7, scope: !6908)
!6908 = distinct !DILexicalBlock(scope: !6888, file: !3, line: 2871, column: 7)
!6909 = !DILocation(line: 2871, column: 7, scope: !6888)
!6910 = !DILocation(line: 2872, column: 5, scope: !6908)
!6911 = !DILocation(line: 2873, column: 7, scope: !6912)
!6912 = distinct !DILexicalBlock(scope: !6888, file: !3, line: 2873, column: 7)
!6913 = !DILocation(line: 2873, column: 7, scope: !6888)
!6914 = !DILocation(line: 2874, column: 11, scope: !6912)
!6915 = !DILocation(line: 2874, column: 9, scope: !6912)
!6916 = !DILocation(line: 2874, column: 5, scope: !6912)
!6917 = !DILocation(line: 2875, column: 54, scope: !6888)
!6918 = !DILocation(line: 2875, column: 40, scope: !6888)
!6919 = !DILocation(line: 2875, column: 3, scope: !6888)
!6920 = !DILocation(line: 2876, column: 1, scope: !6888)
!6921 = distinct !DISubprogram(name: "variable_was_changed", scope: !3, file: !3, line: 6262, type: !6922, scopeLine: 6263, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!6922 = !DISubroutineType(types: !6923)
!6923 = !{null, !2447, !2418}
!6924 = !DILocalVariable(name: "var", arg: 1, scope: !6921, file: !3, line: 6262, type: !2447)
!6925 = !DILocation(line: 6262, column: 32, scope: !6921)
!6926 = !DILocalVariable(name: "set", arg: 2, scope: !6921, file: !3, line: 6262, type: !2418)
!6927 = !DILocation(line: 6262, column: 51, scope: !6921)
!6928 = !DILocalVariable(name: "hash", scope: !6921, file: !3, line: 6264, type: !1836)
!6929 = !DILocation(line: 6264, column: 13, scope: !6921)
!6930 = !DILocation(line: 6264, column: 34, scope: !6921)
!6931 = !DILocation(line: 6264, column: 39, scope: !6921)
!6932 = !DILocation(line: 6264, column: 20, scope: !6921)
!6933 = !DILocation(line: 6266, column: 7, scope: !6934)
!6934 = distinct !DILexicalBlock(scope: !6921, file: !3, line: 6266, column: 7)
!6935 = !DILocation(line: 6266, column: 7, scope: !6921)
!6936 = !DILocalVariable(name: "slot", scope: !6937, file: !3, line: 6268, type: !1848)
!6937 = distinct !DILexicalBlock(scope: !6934, file: !3, line: 6267, column: 5)
!6938 = !DILocation(line: 6268, column: 14, scope: !6937)
!6939 = !DILocalVariable(name: "old_cur_loc_changed", scope: !6937, file: !3, line: 6269, type: !1130)
!6940 = !DILocation(line: 6269, column: 12, scope: !6937)
!6941 = !DILocation(line: 6272, column: 23, scope: !6937)
!6942 = !DILocation(line: 6272, column: 28, scope: !6937)
!6943 = !DILocation(line: 6272, column: 7, scope: !6937)
!6944 = !DILocation(line: 6274, column: 40, scope: !6937)
!6945 = !DILocation(line: 6275, column: 12, scope: !6937)
!6946 = !DILocation(line: 6275, column: 17, scope: !6937)
!6947 = !DILocation(line: 6276, column: 12, scope: !6937)
!6948 = !DILocation(line: 6274, column: 14, scope: !6937)
!6949 = !DILocation(line: 6274, column: 12, scope: !6937)
!6950 = !DILocation(line: 6278, column: 12, scope: !6951)
!6951 = distinct !DILexicalBlock(scope: !6937, file: !3, line: 6278, column: 11)
!6952 = !DILocation(line: 6278, column: 11, scope: !6951)
!6953 = !DILocation(line: 6278, column: 11, scope: !6937)
!6954 = !DILocalVariable(name: "old_var", scope: !6955, file: !3, line: 6280, type: !2447)
!6955 = distinct !DILexicalBlock(scope: !6951, file: !3, line: 6279, column: 2)
!6956 = !DILocation(line: 6280, column: 13, scope: !6955)
!6957 = !DILocation(line: 6280, column: 35, scope: !6955)
!6958 = !DILocation(line: 6280, column: 34, scope: !6955)
!6959 = !DILocation(line: 6280, column: 23, scope: !6955)
!6960 = !DILocation(line: 6281, column: 4, scope: !6955)
!6961 = !DILocation(line: 6282, column: 4, scope: !6955)
!6962 = !DILocation(line: 6282, column: 13, scope: !6955)
!6963 = !DILocation(line: 6282, column: 34, scope: !6955)
!6964 = !DILocation(line: 6283, column: 26, scope: !6955)
!6965 = !DILocation(line: 6283, column: 35, scope: !6955)
!6966 = !DILocation(line: 6283, column: 24, scope: !6955)
!6967 = !DILocation(line: 6284, column: 25, scope: !6955)
!6968 = !DILocation(line: 6284, column: 24, scope: !6955)
!6969 = !DILocation(line: 6284, column: 4, scope: !6955)
!6970 = !DILocation(line: 6285, column: 2, scope: !6955)
!6971 = !DILocation(line: 6286, column: 11, scope: !6972)
!6972 = distinct !DILexicalBlock(scope: !6937, file: !3, line: 6286, column: 11)
!6973 = !DILocation(line: 6286, column: 15, scope: !6972)
!6974 = !DILocation(line: 6286, column: 18, scope: !6972)
!6975 = !DILocation(line: 6286, column: 23, scope: !6972)
!6976 = !DILocation(line: 6286, column: 35, scope: !6972)
!6977 = !DILocation(line: 6286, column: 11, scope: !6937)
!6978 = !DILocalVariable(name: "empty_var", scope: !6979, file: !3, line: 6288, type: !2447)
!6979 = distinct !DILexicalBlock(scope: !6972, file: !3, line: 6287, column: 2)
!6980 = !DILocation(line: 6288, column: 13, scope: !6979)
!6981 = !DILocation(line: 6290, column: 48, scope: !6979)
!6982 = !DILocation(line: 6290, column: 53, scope: !6979)
!6983 = !DILocation(line: 6290, column: 39, scope: !6979)
!6984 = !DILocation(line: 6290, column: 27, scope: !6979)
!6985 = !DILocation(line: 6290, column: 16, scope: !6979)
!6986 = !DILocation(line: 6290, column: 14, scope: !6979)
!6987 = !DILocation(line: 6291, column: 20, scope: !6979)
!6988 = !DILocation(line: 6291, column: 25, scope: !6979)
!6989 = !DILocation(line: 6291, column: 4, scope: !6979)
!6990 = !DILocation(line: 6291, column: 15, scope: !6979)
!6991 = !DILocation(line: 6291, column: 18, scope: !6979)
!6992 = !DILocation(line: 6292, column: 4, scope: !6979)
!6993 = !DILocation(line: 6292, column: 15, scope: !6979)
!6994 = !DILocation(line: 6292, column: 24, scope: !6979)
!6995 = !DILocation(line: 6293, column: 4, scope: !6979)
!6996 = !DILocation(line: 6293, column: 15, scope: !6979)
!6997 = !DILocation(line: 6293, column: 27, scope: !6979)
!6998 = !DILocation(line: 6294, column: 4, scope: !6979)
!6999 = !DILocation(line: 6294, column: 15, scope: !6979)
!7000 = !DILocation(line: 6294, column: 31, scope: !6979)
!7001 = !DILocation(line: 6295, column: 4, scope: !6979)
!7002 = !DILocation(line: 6295, column: 15, scope: !6979)
!7003 = !DILocation(line: 6295, column: 36, scope: !6979)
!7004 = !DILocation(line: 6296, column: 12, scope: !6979)
!7005 = !DILocation(line: 6296, column: 5, scope: !6979)
!7006 = !DILocation(line: 6296, column: 10, scope: !6979)
!7007 = !DILocation(line: 6297, column: 4, scope: !6979)
!7008 = !DILocation(line: 6301, column: 4, scope: !7009)
!7009 = distinct !DILexicalBlock(scope: !6972, file: !3, line: 6300, column: 2)
!7010 = !DILocation(line: 6301, column: 9, scope: !7009)
!7011 = !DILocation(line: 6301, column: 17, scope: !7009)
!7012 = !DILocation(line: 6302, column: 4, scope: !7009)
!7013 = !DILocation(line: 6302, column: 9, scope: !7009)
!7014 = !DILocation(line: 6302, column: 30, scope: !7009)
!7015 = !DILocation(line: 6305, column: 8, scope: !7016)
!7016 = distinct !DILexicalBlock(scope: !7009, file: !3, line: 6305, column: 8)
!7017 = !DILocation(line: 6305, column: 8, scope: !7009)
!7018 = !DILocation(line: 6306, column: 6, scope: !7016)
!7019 = !DILocation(line: 6306, column: 11, scope: !7016)
!7020 = !DILocation(line: 6306, column: 27, scope: !7016)
!7021 = !DILocation(line: 6307, column: 12, scope: !7009)
!7022 = !DILocation(line: 6307, column: 5, scope: !7009)
!7023 = !DILocation(line: 6307, column: 10, scope: !7009)
!7024 = !DILocation(line: 6309, column: 5, scope: !6937)
!7025 = !DILocation(line: 6312, column: 7, scope: !7026)
!7026 = distinct !DILexicalBlock(scope: !6934, file: !3, line: 6311, column: 5)
!7027 = !DILocation(line: 6313, column: 11, scope: !7028)
!7028 = distinct !DILexicalBlock(scope: !7026, file: !3, line: 6313, column: 11)
!7029 = !DILocation(line: 6313, column: 16, scope: !7028)
!7030 = !DILocation(line: 6313, column: 28, scope: !7028)
!7031 = !DILocation(line: 6313, column: 11, scope: !7026)
!7032 = !DILocalVariable(name: "slot", scope: !7033, file: !3, line: 6315, type: !1848)
!7033 = distinct !DILexicalBlock(scope: !7028, file: !3, line: 6314, column: 2)
!7034 = !DILocation(line: 6315, column: 11, scope: !7033)
!7035 = !DILocation(line: 6315, column: 4, scope: !7033)
!7036 = !DILabel(scope: !7033, name: "drop_var", file: !3, line: 6317)
!7037 = !DILocation(line: 6317, column: 2, scope: !7033)
!7038 = !DILocation(line: 6318, column: 43, scope: !7033)
!7039 = !DILocation(line: 6318, column: 48, scope: !7033)
!7040 = !DILocation(line: 6318, column: 54, scope: !7033)
!7041 = !DILocation(line: 6318, column: 59, scope: !7033)
!7042 = !DILocation(line: 6318, column: 11, scope: !7033)
!7043 = !DILocation(line: 6318, column: 9, scope: !7033)
!7044 = !DILocation(line: 6319, column: 8, scope: !7045)
!7045 = distinct !DILexicalBlock(scope: !7033, file: !3, line: 6319, column: 8)
!7046 = !DILocation(line: 6319, column: 8, scope: !7033)
!7047 = !DILocation(line: 6321, column: 32, scope: !7048)
!7048 = distinct !DILexicalBlock(scope: !7049, file: !3, line: 6321, column: 12)
!7049 = distinct !DILexicalBlock(scope: !7045, file: !3, line: 6320, column: 6)
!7050 = !DILocation(line: 6321, column: 37, scope: !7048)
!7051 = !DILocation(line: 6321, column: 12, scope: !7048)
!7052 = !DILocation(line: 6321, column: 12, scope: !7049)
!7053 = !DILocation(line: 6322, column: 42, scope: !7048)
!7054 = !DILocation(line: 6322, column: 47, scope: !7048)
!7055 = !DILocation(line: 6322, column: 53, scope: !7048)
!7056 = !DILocation(line: 6322, column: 58, scope: !7048)
!7057 = !DILocation(line: 6322, column: 10, scope: !7048)
!7058 = !DILocation(line: 6322, column: 8, scope: !7048)
!7059 = !DILocation(line: 6322, column: 3, scope: !7048)
!7060 = !DILocation(line: 6324, column: 43, scope: !7049)
!7061 = !DILocation(line: 6324, column: 48, scope: !7049)
!7062 = !DILocation(line: 6324, column: 25, scope: !7049)
!7063 = !DILocation(line: 6324, column: 55, scope: !7049)
!7064 = !DILocation(line: 6324, column: 8, scope: !7049)
!7065 = !DILocation(line: 6325, column: 6, scope: !7049)
!7066 = !DILocation(line: 6326, column: 2, scope: !7033)
!7067 = !DILocation(line: 6328, column: 1, scope: !6921)
!7068 = distinct !DISubprogram(name: "add_value_chain", scope: !3, file: !3, line: 2813, type: !7069, scopeLine: 2814, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!7069 = !DISubroutineType(types: !7070)
!7070 = !{!1010, !4733, !1313}
!7071 = !DILocalVariable(name: "loc", arg: 1, scope: !7068, file: !3, line: 2813, type: !4733)
!7072 = !DILocation(line: 2813, column: 23, scope: !7068)
!7073 = !DILocalVariable(name: "dvp", arg: 2, scope: !7068, file: !3, line: 2813, type: !1313)
!7074 = !DILocation(line: 2813, column: 34, scope: !7068)
!7075 = !DILocalVariable(name: "dv", scope: !7068, file: !3, line: 2815, type: !2410)
!7076 = !DILocation(line: 2815, column: 17, scope: !7068)
!7077 = !DILocalVariable(name: "ldv", scope: !7068, file: !3, line: 2815, type: !2410)
!7078 = !DILocation(line: 2815, column: 21, scope: !7068)
!7079 = !DILocalVariable(name: "vc", scope: !7068, file: !3, line: 2816, type: !2470)
!7080 = !DILocation(line: 2816, column: 15, scope: !7068)
!7081 = !DILocalVariable(name: "nvc", scope: !7068, file: !3, line: 2816, type: !2470)
!7082 = !DILocation(line: 2816, column: 19, scope: !7068)
!7083 = !DILocalVariable(name: "slot", scope: !7068, file: !3, line: 2817, type: !1848)
!7084 = !DILocation(line: 2817, column: 10, scope: !7068)
!7085 = !DILocation(line: 2819, column: 7, scope: !7086)
!7086 = distinct !DILexicalBlock(scope: !7068, file: !3, line: 2819, column: 7)
!7087 = !DILocation(line: 2819, column: 23, scope: !7086)
!7088 = !DILocation(line: 2819, column: 7, scope: !7068)
!7089 = !DILocation(line: 2820, column: 27, scope: !7086)
!7090 = !DILocation(line: 2820, column: 26, scope: !7086)
!7091 = !DILocation(line: 2820, column: 11, scope: !7086)
!7092 = !DILocation(line: 2820, column: 9, scope: !7086)
!7093 = !DILocation(line: 2820, column: 5, scope: !7086)
!7094 = !DILocation(line: 2821, column: 12, scope: !7095)
!7095 = distinct !DILexicalBlock(scope: !7086, file: !3, line: 2821, column: 12)
!7096 = !DILocation(line: 2821, column: 28, scope: !7095)
!7097 = !DILocation(line: 2821, column: 12, scope: !7086)
!7098 = !DILocation(line: 2822, column: 25, scope: !7095)
!7099 = !DILocation(line: 2822, column: 11, scope: !7095)
!7100 = !DILocation(line: 2822, column: 9, scope: !7095)
!7101 = !DILocation(line: 2822, column: 5, scope: !7095)
!7102 = !DILocation(line: 2824, column: 5, scope: !7095)
!7103 = !DILocation(line: 2826, column: 21, scope: !7104)
!7104 = distinct !DILexicalBlock(scope: !7068, file: !3, line: 2826, column: 7)
!7105 = !DILocation(line: 2826, column: 7, scope: !7104)
!7106 = !DILocation(line: 2826, column: 29, scope: !7104)
!7107 = !DILocation(line: 2826, column: 26, scope: !7104)
!7108 = !DILocation(line: 2826, column: 7, scope: !7068)
!7109 = !DILocation(line: 2827, column: 5, scope: !7104)
!7110 = !DILocation(line: 2829, column: 24, scope: !7068)
!7111 = !DILocation(line: 2829, column: 6, scope: !7068)
!7112 = !DILocation(line: 2830, column: 36, scope: !7068)
!7113 = !DILocation(line: 2830, column: 50, scope: !7068)
!7114 = !DILocation(line: 2830, column: 69, scope: !7068)
!7115 = !DILocation(line: 2830, column: 55, scope: !7068)
!7116 = !DILocation(line: 2830, column: 10, scope: !7068)
!7117 = !DILocation(line: 2830, column: 8, scope: !7068)
!7118 = !DILocation(line: 2832, column: 9, scope: !7119)
!7119 = distinct !DILexicalBlock(scope: !7068, file: !3, line: 2832, column: 7)
!7120 = !DILocation(line: 2832, column: 8, scope: !7119)
!7121 = !DILocation(line: 2832, column: 7, scope: !7068)
!7122 = !DILocation(line: 2834, column: 38, scope: !7123)
!7123 = distinct !DILexicalBlock(scope: !7119, file: !3, line: 2833, column: 5)
!7124 = !DILocation(line: 2834, column: 26, scope: !7123)
!7125 = !DILocation(line: 2834, column: 12, scope: !7123)
!7126 = !DILocation(line: 2834, column: 10, scope: !7123)
!7127 = !DILocation(line: 2835, column: 16, scope: !7123)
!7128 = !DILocation(line: 2835, column: 7, scope: !7123)
!7129 = !DILocation(line: 2835, column: 11, scope: !7123)
!7130 = !DILocation(line: 2835, column: 14, scope: !7123)
!7131 = !DILocation(line: 2836, column: 7, scope: !7123)
!7132 = !DILocation(line: 2836, column: 11, scope: !7123)
!7133 = !DILocation(line: 2836, column: 16, scope: !7123)
!7134 = !DILocation(line: 2837, column: 7, scope: !7123)
!7135 = !DILocation(line: 2837, column: 11, scope: !7123)
!7136 = !DILocation(line: 2837, column: 20, scope: !7123)
!7137 = !DILocation(line: 2838, column: 24, scope: !7123)
!7138 = !DILocation(line: 2838, column: 15, scope: !7123)
!7139 = !DILocation(line: 2838, column: 8, scope: !7123)
!7140 = !DILocation(line: 2838, column: 13, scope: !7123)
!7141 = !DILocation(line: 2839, column: 5, scope: !7123)
!7142 = !DILocation(line: 2842, column: 33, scope: !7143)
!7143 = distinct !DILexicalBlock(scope: !7144, file: !3, line: 2842, column: 7)
!7144 = distinct !DILexicalBlock(scope: !7119, file: !3, line: 2841, column: 5)
!7145 = !DILocation(line: 2842, column: 32, scope: !7143)
!7146 = !DILocation(line: 2842, column: 18, scope: !7143)
!7147 = !DILocation(line: 2842, column: 40, scope: !7143)
!7148 = !DILocation(line: 2842, column: 15, scope: !7143)
!7149 = !DILocation(line: 2842, column: 12, scope: !7143)
!7150 = !DILocation(line: 2842, column: 46, scope: !7151)
!7151 = distinct !DILexicalBlock(scope: !7143, file: !3, line: 2842, column: 7)
!7152 = !DILocation(line: 2842, column: 7, scope: !7143)
!7153 = !DILocation(line: 2843, column: 20, scope: !7154)
!7154 = distinct !DILexicalBlock(scope: !7151, file: !3, line: 2843, column: 6)
!7155 = !DILocation(line: 2843, column: 24, scope: !7154)
!7156 = !DILocation(line: 2843, column: 6, scope: !7154)
!7157 = !DILocation(line: 2843, column: 45, scope: !7154)
!7158 = !DILocation(line: 2843, column: 31, scope: !7154)
!7159 = !DILocation(line: 2843, column: 28, scope: !7154)
!7160 = !DILocation(line: 2843, column: 6, scope: !7151)
!7161 = !DILocation(line: 2844, column: 4, scope: !7154)
!7162 = !DILocation(line: 2843, column: 47, scope: !7154)
!7163 = !DILocation(line: 2842, column: 55, scope: !7151)
!7164 = !DILocation(line: 2842, column: 59, scope: !7151)
!7165 = !DILocation(line: 2842, column: 53, scope: !7151)
!7166 = !DILocation(line: 2842, column: 7, scope: !7151)
!7167 = distinct !{!7167, !7152, !7168}
!7168 = !DILocation(line: 2844, column: 4, scope: !7143)
!7169 = !DILocation(line: 2845, column: 11, scope: !7170)
!7170 = distinct !DILexicalBlock(scope: !7144, file: !3, line: 2845, column: 11)
!7171 = !DILocation(line: 2845, column: 11, scope: !7144)
!7172 = !DILocation(line: 2847, column: 4, scope: !7173)
!7173 = distinct !DILexicalBlock(scope: !7170, file: !3, line: 2846, column: 2)
!7174 = !DILocation(line: 2847, column: 8, scope: !7173)
!7175 = !DILocation(line: 2847, column: 16, scope: !7173)
!7176 = !DILocation(line: 2848, column: 4, scope: !7173)
!7177 = !DILocation(line: 2851, column: 23, scope: !7068)
!7178 = !DILocation(line: 2851, column: 22, scope: !7068)
!7179 = !DILocation(line: 2851, column: 8, scope: !7068)
!7180 = !DILocation(line: 2851, column: 6, scope: !7068)
!7181 = !DILocation(line: 2852, column: 35, scope: !7068)
!7182 = !DILocation(line: 2852, column: 23, scope: !7068)
!7183 = !DILocation(line: 2852, column: 9, scope: !7068)
!7184 = !DILocation(line: 2852, column: 7, scope: !7068)
!7185 = !DILocation(line: 2853, column: 13, scope: !7068)
!7186 = !DILocation(line: 2853, column: 3, scope: !7068)
!7187 = !DILocation(line: 2853, column: 8, scope: !7068)
!7188 = !DILocation(line: 2853, column: 11, scope: !7068)
!7189 = !DILocation(line: 2854, column: 15, scope: !7068)
!7190 = !DILocation(line: 2854, column: 19, scope: !7068)
!7191 = !DILocation(line: 2854, column: 3, scope: !7068)
!7192 = !DILocation(line: 2854, column: 8, scope: !7068)
!7193 = !DILocation(line: 2854, column: 13, scope: !7068)
!7194 = !DILocation(line: 2855, column: 3, scope: !7068)
!7195 = !DILocation(line: 2855, column: 8, scope: !7068)
!7196 = !DILocation(line: 2855, column: 17, scope: !7068)
!7197 = !DILocation(line: 2856, column: 14, scope: !7068)
!7198 = !DILocation(line: 2856, column: 3, scope: !7068)
!7199 = !DILocation(line: 2856, column: 7, scope: !7068)
!7200 = !DILocation(line: 2856, column: 12, scope: !7068)
!7201 = !DILocation(line: 2857, column: 3, scope: !7068)
!7202 = !DILocation(line: 2858, column: 1, scope: !7068)
!7203 = distinct !DISubprogram(name: "set_dv_changed", scope: !3, file: !3, line: 2476, type: !7204, scopeLine: 2477, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!7204 = !DISubroutineType(types: !7205)
!7205 = !{null, !2410, !1130}
!7206 = !DILocalVariable(name: "dv", arg: 1, scope: !7203, file: !3, line: 2476, type: !2410)
!7207 = !DILocation(line: 2476, column: 31, scope: !7203)
!7208 = !DILocalVariable(name: "newv", arg: 2, scope: !7203, file: !3, line: 2476, type: !1130)
!7209 = !DILocation(line: 2476, column: 40, scope: !7203)
!7210 = !DILocation(line: 2478, column: 22, scope: !7211)
!7211 = distinct !DILexicalBlock(scope: !7203, file: !3, line: 2478, column: 7)
!7212 = !DILocation(line: 2478, column: 7, scope: !7211)
!7213 = !DILocation(line: 2478, column: 7, scope: !7203)
!7214 = !DILocation(line: 2479, column: 40, scope: !7211)
!7215 = !DILocation(line: 2479, column: 5, scope: !7211)
!7216 = !DILocation(line: 2479, column: 38, scope: !7211)
!7217 = !DILocation(line: 2481, column: 38, scope: !7211)
!7218 = !DILocation(line: 2481, column: 5, scope: !7211)
!7219 = !DILocation(line: 2481, column: 36, scope: !7211)
!7220 = !DILocation(line: 2482, column: 1, scope: !7203)
!7221 = distinct !DISubprogram(name: "single_succ_edge", scope: !513, file: !513, line: 643, type: !7222, scopeLine: 644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!7222 = !DISubroutineType(types: !7223)
!7223 = !{!1340, !4210}
!7224 = !DILocalVariable(name: "bb", arg: 1, scope: !7221, file: !513, line: 643, type: !4210)
!7225 = !DILocation(line: 643, column: 37, scope: !7221)
!7226 = !DILocation(line: 645, column: 3, scope: !7221)
!7227 = !DILocation(line: 646, column: 10, scope: !7221)
!7228 = !DILocation(line: 646, column: 3, scope: !7221)
!7229 = distinct !DISubprogram(name: "single_succ_p", scope: !513, file: !513, line: 626, type: !4505, scopeLine: 627, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!7230 = !DILocalVariable(name: "bb", arg: 1, scope: !7229, file: !513, line: 626, type: !4210)
!7231 = !DILocation(line: 626, column: 34, scope: !7229)
!7232 = !DILocation(line: 628, column: 10, scope: !7229)
!7233 = !DILocation(line: 628, column: 33, scope: !7229)
!7234 = !DILocation(line: 628, column: 3, scope: !7229)
!7235 = distinct !DISubprogram(name: "VEC_micro_operation_base_length", scope: !3, file: !3, line: 194, type: !7236, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!7236 = !DISubroutineType(types: !7237)
!7237 = !{!7, !7238}
!7238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7239, size: 64)
!7239 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2379)
!7240 = !DILocalVariable(name: "vec_", arg: 1, scope: !7235, file: !3, line: 194, type: !7238)
!7241 = !DILocation(line: 194, column: 1, scope: !7235)
!7242 = distinct !DISubprogram(name: "add_uses_1", scope: !3, file: !3, line: 5111, type: !7243, scopeLine: 5112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!7243 = !DISubroutineType(types: !7244)
!7244 = !{null, !4733, !1313}
!7245 = !DILocalVariable(name: "x", arg: 1, scope: !7242, file: !3, line: 5111, type: !4733)
!7246 = !DILocation(line: 5111, column: 18, scope: !7242)
!7247 = !DILocalVariable(name: "cui", arg: 2, scope: !7242, file: !3, line: 5111, type: !1313)
!7248 = !DILocation(line: 5111, column: 27, scope: !7242)
!7249 = !DILocation(line: 5113, column: 17, scope: !7242)
!7250 = !DILocation(line: 5113, column: 30, scope: !7242)
!7251 = !DILocation(line: 5113, column: 3, scope: !7242)
!7252 = !DILocation(line: 5114, column: 1, scope: !7242)
!7253 = distinct !DISubprogram(name: "VEC_micro_operation_base_address", scope: !3, file: !3, line: 194, type: !7254, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!7254 = !DISubroutineType(types: !7255)
!7255 = !{!4238, !7256}
!7256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2379, size: 64)
!7257 = !DILocalVariable(name: "vec_", arg: 1, scope: !7253, file: !3, line: 194, type: !7256)
!7258 = !DILocation(line: 194, column: 1, scope: !7253)
!7259 = distinct !DISubprogram(name: "add_stores", scope: !3, file: !3, line: 5207, type: !7260, scopeLine: 5208, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!7260 = !DISubroutineType(types: !7261)
!7261 = !{null, !1188, !5270, !1313}
!7262 = !DILocalVariable(name: "loc", arg: 1, scope: !7259, file: !3, line: 5207, type: !1188)
!7263 = !DILocation(line: 5207, column: 17, scope: !7259)
!7264 = !DILocalVariable(name: "expr", arg: 2, scope: !7259, file: !3, line: 5207, type: !5270)
!7265 = !DILocation(line: 5207, column: 32, scope: !7259)
!7266 = !DILocalVariable(name: "cuip", arg: 3, scope: !7259, file: !3, line: 5207, type: !1313)
!7267 = !DILocation(line: 5207, column: 44, scope: !7259)
!7268 = !DILocalVariable(name: "mode", scope: !7259, file: !3, line: 5209, type: !384)
!7269 = !DILocation(line: 5209, column: 21, scope: !7259)
!7270 = !DILocalVariable(name: "mode2", scope: !7259, file: !3, line: 5209, type: !384)
!7271 = !DILocation(line: 5209, column: 38, scope: !7259)
!7272 = !DILocalVariable(name: "cui", scope: !7259, file: !3, line: 5210, type: !2471)
!7273 = !DILocation(line: 5210, column: 26, scope: !7259)
!7274 = !DILocation(line: 5210, column: 57, scope: !7259)
!7275 = !DILocation(line: 5210, column: 32, scope: !7259)
!7276 = !DILocalVariable(name: "bb", scope: !7259, file: !3, line: 5211, type: !1795)
!7277 = !DILocation(line: 5211, column: 15, scope: !7259)
!7278 = !DILocation(line: 5211, column: 20, scope: !7259)
!7279 = !DILocation(line: 5211, column: 25, scope: !7259)
!7280 = !DILocalVariable(name: "mo", scope: !7259, file: !3, line: 5212, type: !2386)
!7281 = !DILocation(line: 5212, column: 19, scope: !7259)
!7282 = !DILocalVariable(name: "oloc", scope: !7259, file: !3, line: 5213, type: !1188)
!7283 = !DILocation(line: 5213, column: 7, scope: !7259)
!7284 = !DILocation(line: 5213, column: 14, scope: !7259)
!7285 = !DILocalVariable(name: "nloc", scope: !7259, file: !3, line: 5213, type: !1188)
!7286 = !DILocation(line: 5213, column: 19, scope: !7259)
!7287 = !DILocalVariable(name: "src", scope: !7259, file: !3, line: 5213, type: !1188)
!7288 = !DILocation(line: 5213, column: 25, scope: !7259)
!7289 = !DILocalVariable(name: "type", scope: !7259, file: !3, line: 5214, type: !703)
!7290 = !DILocation(line: 5214, column: 29, scope: !7259)
!7291 = !DILocation(line: 5214, column: 46, scope: !7259)
!7292 = !DILocation(line: 5214, column: 51, scope: !7259)
!7293 = !DILocation(line: 5214, column: 36, scope: !7259)
!7294 = !DILocalVariable(name: "track_p", scope: !7259, file: !3, line: 5215, type: !1130)
!7295 = !DILocation(line: 5215, column: 8, scope: !7259)
!7296 = !DILocalVariable(name: "v", scope: !7259, file: !3, line: 5216, type: !1257)
!7297 = !DILocation(line: 5216, column: 15, scope: !7259)
!7298 = !DILocalVariable(name: "resolve", scope: !7259, file: !3, line: 5217, type: !1130)
!7299 = !DILocation(line: 5217, column: 8, scope: !7259)
!7300 = !DILocalVariable(name: "preserve", scope: !7259, file: !3, line: 5217, type: !1130)
!7301 = !DILocation(line: 5217, column: 17, scope: !7259)
!7302 = !DILocalVariable(name: "reverse", scope: !7259, file: !3, line: 5218, type: !1188)
!7303 = !DILocation(line: 5218, column: 7, scope: !7259)
!7304 = !DILocation(line: 5220, column: 7, scope: !7305)
!7305 = distinct !DILexicalBlock(scope: !7259, file: !3, line: 5220, column: 7)
!7306 = !DILocation(line: 5220, column: 12, scope: !7305)
!7307 = !DILocation(line: 5220, column: 7, scope: !7259)
!7308 = !DILocation(line: 5221, column: 5, scope: !7305)
!7309 = !DILocation(line: 5223, column: 11, scope: !7259)
!7310 = !DILocation(line: 5223, column: 9, scope: !7259)
!7311 = !DILocation(line: 5225, column: 7, scope: !7312)
!7312 = distinct !DILexicalBlock(scope: !7259, file: !3, line: 5225, column: 7)
!7313 = !DILocation(line: 5225, column: 7, scope: !7259)
!7314 = !DILocation(line: 5227, column: 7, scope: !7315)
!7315 = distinct !DILexicalBlock(scope: !7312, file: !3, line: 5226, column: 5)
!7316 = !DILocation(line: 5228, column: 12, scope: !7317)
!7317 = distinct !DILexicalBlock(scope: !7315, file: !3, line: 5228, column: 11)
!7318 = !DILocation(line: 5228, column: 28, scope: !7317)
!7319 = !DILocation(line: 5228, column: 39, scope: !7317)
!7320 = !DILocation(line: 5228, column: 42, scope: !7317)
!7321 = !DILocation(line: 5228, column: 47, scope: !7317)
!7322 = !DILocation(line: 5229, column: 4, scope: !7317)
!7323 = !DILocation(line: 5229, column: 29, scope: !7317)
!7324 = !DILocation(line: 5229, column: 19, scope: !7317)
!7325 = !DILocation(line: 5229, column: 48, scope: !7317)
!7326 = !DILocation(line: 5229, column: 17, scope: !7317)
!7327 = !DILocation(line: 5230, column: 4, scope: !7317)
!7328 = !DILocation(line: 5230, column: 7, scope: !7317)
!7329 = !DILocation(line: 5230, column: 23, scope: !7317)
!7330 = !DILocation(line: 5228, column: 11, scope: !7315)
!7331 = !DILocation(line: 5232, column: 7, scope: !7332)
!7332 = distinct !DILexicalBlock(scope: !7317, file: !3, line: 5231, column: 2)
!7333 = !DILocation(line: 5232, column: 12, scope: !7332)
!7334 = !DILocation(line: 5233, column: 15, scope: !7332)
!7335 = !DILocation(line: 5233, column: 7, scope: !7332)
!7336 = !DILocation(line: 5233, column: 9, scope: !7332)
!7337 = !DILocation(line: 5233, column: 13, scope: !7332)
!7338 = !DILocation(line: 5234, column: 2, scope: !7332)
!7339 = !DILocation(line: 5237, column: 8, scope: !7340)
!7340 = distinct !DILexicalBlock(scope: !7341, file: !3, line: 5237, column: 8)
!7341 = distinct !DILexicalBlock(scope: !7317, file: !3, line: 5236, column: 2)
!7342 = !DILocation(line: 5237, column: 24, scope: !7340)
!7343 = !DILocation(line: 5237, column: 31, scope: !7340)
!7344 = !DILocation(line: 5237, column: 34, scope: !7340)
!7345 = !DILocation(line: 5237, column: 53, scope: !7340)
!7346 = !DILocation(line: 5237, column: 50, scope: !7340)
!7347 = !DILocation(line: 5237, column: 8, scope: !7341)
!7348 = !DILocation(line: 5238, column: 25, scope: !7340)
!7349 = !DILocation(line: 5238, column: 32, scope: !7340)
!7350 = !DILocation(line: 5238, column: 12, scope: !7340)
!7351 = !DILocation(line: 5238, column: 10, scope: !7340)
!7352 = !DILocation(line: 5238, column: 6, scope: !7340)
!7353 = !DILocation(line: 5239, column: 23, scope: !7341)
!7354 = !DILocation(line: 5239, column: 30, scope: !7341)
!7355 = !DILocation(line: 5239, column: 10, scope: !7341)
!7356 = !DILocation(line: 5239, column: 8, scope: !7341)
!7357 = !DILocation(line: 5241, column: 8, scope: !7358)
!7358 = distinct !DILexicalBlock(scope: !7341, file: !3, line: 5241, column: 8)
!7359 = !DILocation(line: 5241, column: 12, scope: !7358)
!7360 = !DILocation(line: 5241, column: 8, scope: !7341)
!7361 = !DILocation(line: 5243, column: 11, scope: !7362)
!7362 = distinct !DILexicalBlock(scope: !7358, file: !3, line: 5242, column: 6)
!7363 = !DILocation(line: 5243, column: 16, scope: !7362)
!7364 = !DILocation(line: 5244, column: 19, scope: !7362)
!7365 = !DILocation(line: 5244, column: 11, scope: !7362)
!7366 = !DILocation(line: 5244, column: 13, scope: !7362)
!7367 = !DILocation(line: 5244, column: 17, scope: !7362)
!7368 = !DILocation(line: 5245, column: 6, scope: !7362)
!7369 = !DILocalVariable(name: "xexpr", scope: !7370, file: !3, line: 5248, type: !1188)
!7370 = distinct !DILexicalBlock(scope: !7358, file: !3, line: 5247, column: 6)
!7371 = !DILocation(line: 5248, column: 12, scope: !7370)
!7372 = !DILocation(line: 5248, column: 20, scope: !7370)
!7373 = !DILocation(line: 5249, column: 34, scope: !7374)
!7374 = distinct !DILexicalBlock(scope: !7370, file: !3, line: 5249, column: 12)
!7375 = !DILocation(line: 5249, column: 39, scope: !7374)
!7376 = !DILocation(line: 5249, column: 55, scope: !7374)
!7377 = !DILocation(line: 5249, column: 12, scope: !7374)
!7378 = !DILocation(line: 5249, column: 12, scope: !7370)
!7379 = !DILocation(line: 5250, column: 6, scope: !7374)
!7380 = !DILocation(line: 5250, column: 11, scope: !7374)
!7381 = !DILocation(line: 5250, column: 3, scope: !7374)
!7382 = !DILocation(line: 5252, column: 6, scope: !7374)
!7383 = !DILocation(line: 5252, column: 11, scope: !7374)
!7384 = !DILocation(line: 5253, column: 19, scope: !7370)
!7385 = !DILocation(line: 5253, column: 11, scope: !7370)
!7386 = !DILocation(line: 5253, column: 13, scope: !7370)
!7387 = !DILocation(line: 5253, column: 17, scope: !7370)
!7388 = !DILocation(line: 5256, column: 17, scope: !7315)
!7389 = !DILocation(line: 5256, column: 22, scope: !7315)
!7390 = !DILocation(line: 5256, column: 10, scope: !7315)
!7391 = !DILocation(line: 5256, column: 15, scope: !7315)
!7392 = !DILocation(line: 5257, column: 5, scope: !7315)
!7393 = !DILocation(line: 5258, column: 12, scope: !7394)
!7394 = distinct !DILexicalBlock(scope: !7312, file: !3, line: 5258, column: 12)
!7395 = !DILocation(line: 5259, column: 5, scope: !7394)
!7396 = !DILocation(line: 5259, column: 30, scope: !7394)
!7397 = !DILocation(line: 5259, column: 20, scope: !7394)
!7398 = !DILocation(line: 5259, column: 49, scope: !7394)
!7399 = !DILocation(line: 5259, column: 18, scope: !7394)
!7400 = !DILocation(line: 5259, column: 9, scope: !7394)
!7401 = !DILocation(line: 5260, column: 9, scope: !7394)
!7402 = !DILocation(line: 5260, column: 12, scope: !7394)
!7403 = !DILocation(line: 5260, column: 17, scope: !7394)
!7404 = !DILocation(line: 5258, column: 12, scope: !7312)
!7405 = !DILocation(line: 5262, column: 11, scope: !7406)
!7406 = distinct !DILexicalBlock(scope: !7407, file: !3, line: 5262, column: 11)
!7407 = distinct !DILexicalBlock(scope: !7394, file: !3, line: 5261, column: 5)
!7408 = !DILocation(line: 5262, column: 23, scope: !7406)
!7409 = !DILocation(line: 5262, column: 26, scope: !7406)
!7410 = !DILocation(line: 5262, column: 31, scope: !7406)
!7411 = !DILocation(line: 5263, column: 4, scope: !7406)
!7412 = !DILocation(line: 5263, column: 8, scope: !7406)
!7413 = !DILocation(line: 5264, column: 4, scope: !7406)
!7414 = !DILocation(line: 5264, column: 8, scope: !7406)
!7415 = !DILocation(line: 5265, column: 4, scope: !7406)
!7416 = !DILocation(line: 5265, column: 8, scope: !7406)
!7417 = !DILocation(line: 5265, column: 33, scope: !7406)
!7418 = !DILocation(line: 5266, column: 8, scope: !7406)
!7419 = !DILocation(line: 5266, column: 11, scope: !7406)
!7420 = !DILocation(line: 5266, column: 38, scope: !7406)
!7421 = !DILocation(line: 5266, column: 35, scope: !7406)
!7422 = !DILocation(line: 5267, column: 8, scope: !7406)
!7423 = !DILocation(line: 5267, column: 12, scope: !7406)
!7424 = !DILocation(line: 5262, column: 11, scope: !7407)
!7425 = !DILocalVariable(name: "mloc", scope: !7426, file: !3, line: 5269, type: !1188)
!7426 = distinct !DILexicalBlock(scope: !7406, file: !3, line: 5268, column: 2)
!7427 = !DILocation(line: 5269, column: 8, scope: !7426)
!7428 = !DILocation(line: 5269, column: 15, scope: !7426)
!7429 = !DILocalVariable(name: "address_mode", scope: !7426, file: !3, line: 5270, type: !384)
!7430 = !DILocation(line: 5270, column: 22, scope: !7426)
!7431 = !DILocation(line: 5270, column: 55, scope: !7426)
!7432 = !DILocation(line: 5270, column: 37, scope: !7426)
!7433 = !DILocalVariable(name: "val", scope: !7426, file: !3, line: 5271, type: !1257)
!7434 = !DILocation(line: 5271, column: 16, scope: !7426)
!7435 = !DILocation(line: 5271, column: 37, scope: !7426)
!7436 = !DILocation(line: 5272, column: 9, scope: !7426)
!7437 = !DILocation(line: 5271, column: 22, scope: !7426)
!7438 = !DILocation(line: 5274, column: 8, scope: !7439)
!7439 = distinct !DILexicalBlock(scope: !7426, file: !3, line: 5274, column: 8)
!7440 = !DILocation(line: 5274, column: 12, scope: !7439)
!7441 = !DILocation(line: 5274, column: 42, scope: !7439)
!7442 = !DILocation(line: 5274, column: 16, scope: !7439)
!7443 = !DILocation(line: 5274, column: 8, scope: !7426)
!7444 = !DILocation(line: 5276, column: 24, scope: !7445)
!7445 = distinct !DILexicalBlock(scope: !7439, file: !3, line: 5275, column: 6)
!7446 = !DILocation(line: 5276, column: 8, scope: !7445)
!7447 = !DILocation(line: 5277, column: 11, scope: !7445)
!7448 = !DILocation(line: 5277, column: 16, scope: !7445)
!7449 = !DILocation(line: 5278, column: 39, scope: !7445)
!7450 = !DILocation(line: 5278, column: 15, scope: !7445)
!7451 = !DILocation(line: 5278, column: 13, scope: !7445)
!7452 = !DILocation(line: 5279, column: 19, scope: !7445)
!7453 = !DILocation(line: 5279, column: 11, scope: !7445)
!7454 = !DILocation(line: 5279, column: 13, scope: !7445)
!7455 = !DILocation(line: 5279, column: 17, scope: !7445)
!7456 = !DILocation(line: 5280, column: 18, scope: !7445)
!7457 = !DILocation(line: 5280, column: 23, scope: !7445)
!7458 = !DILocation(line: 5280, column: 11, scope: !7445)
!7459 = !DILocation(line: 5280, column: 16, scope: !7445)
!7460 = !DILocation(line: 5281, column: 12, scope: !7461)
!7461 = distinct !DILexicalBlock(scope: !7445, file: !3, line: 5281, column: 12)
!7462 = !DILocation(line: 5281, column: 22, scope: !7461)
!7463 = !DILocation(line: 5281, column: 26, scope: !7461)
!7464 = !DILocation(line: 5281, column: 37, scope: !7461)
!7465 = !DILocation(line: 5281, column: 12, scope: !7445)
!7466 = !DILocation(line: 5282, column: 19, scope: !7461)
!7467 = !DILocation(line: 5282, column: 21, scope: !7461)
!7468 = !DILocation(line: 5282, column: 26, scope: !7461)
!7469 = !DILocation(line: 5282, column: 31, scope: !7461)
!7470 = !DILocation(line: 5282, column: 35, scope: !7461)
!7471 = !DILocation(line: 5282, column: 40, scope: !7461)
!7472 = !DILocation(line: 5283, column: 12, scope: !7461)
!7473 = !DILocation(line: 5283, column: 18, scope: !7461)
!7474 = !DILocation(line: 5282, column: 3, scope: !7461)
!7475 = !DILocation(line: 5284, column: 8, scope: !7445)
!7476 = !DILocation(line: 5285, column: 6, scope: !7445)
!7477 = !DILocation(line: 5286, column: 2, scope: !7426)
!7478 = !DILocation(line: 5288, column: 11, scope: !7479)
!7479 = distinct !DILexicalBlock(scope: !7407, file: !3, line: 5288, column: 11)
!7480 = !DILocation(line: 5288, column: 27, scope: !7479)
!7481 = !DILocation(line: 5288, column: 38, scope: !7479)
!7482 = !DILocation(line: 5288, column: 42, scope: !7479)
!7483 = !DILocation(line: 5288, column: 11, scope: !7407)
!7484 = !DILocation(line: 5290, column: 7, scope: !7485)
!7485 = distinct !DILexicalBlock(scope: !7479, file: !3, line: 5289, column: 2)
!7486 = !DILocation(line: 5290, column: 12, scope: !7485)
!7487 = !DILocation(line: 5291, column: 15, scope: !7485)
!7488 = !DILocation(line: 5291, column: 38, scope: !7485)
!7489 = !DILocation(line: 5291, column: 45, scope: !7485)
!7490 = !DILocation(line: 5291, column: 25, scope: !7485)
!7491 = !DILocation(line: 5291, column: 52, scope: !7485)
!7492 = !DILocation(line: 5291, column: 7, scope: !7485)
!7493 = !DILocation(line: 5291, column: 9, scope: !7485)
!7494 = !DILocation(line: 5291, column: 13, scope: !7485)
!7495 = !DILocation(line: 5292, column: 2, scope: !7485)
!7496 = !DILocation(line: 5295, column: 8, scope: !7497)
!7497 = distinct !DILexicalBlock(scope: !7498, file: !3, line: 5295, column: 8)
!7498 = distinct !DILexicalBlock(scope: !7479, file: !3, line: 5294, column: 2)
!7499 = !DILocation(line: 5295, column: 24, scope: !7497)
!7500 = !DILocation(line: 5295, column: 31, scope: !7497)
!7501 = !DILocation(line: 5295, column: 34, scope: !7497)
!7502 = !DILocation(line: 5295, column: 53, scope: !7497)
!7503 = !DILocation(line: 5295, column: 50, scope: !7497)
!7504 = !DILocation(line: 5295, column: 8, scope: !7498)
!7505 = !DILocation(line: 5296, column: 25, scope: !7497)
!7506 = !DILocation(line: 5296, column: 32, scope: !7497)
!7507 = !DILocation(line: 5296, column: 12, scope: !7497)
!7508 = !DILocation(line: 5296, column: 10, scope: !7497)
!7509 = !DILocation(line: 5296, column: 6, scope: !7497)
!7510 = !DILocation(line: 5297, column: 23, scope: !7498)
!7511 = !DILocation(line: 5297, column: 30, scope: !7498)
!7512 = !DILocation(line: 5297, column: 10, scope: !7498)
!7513 = !DILocation(line: 5297, column: 8, scope: !7498)
!7514 = !DILocation(line: 5299, column: 8, scope: !7515)
!7515 = distinct !DILexicalBlock(scope: !7498, file: !3, line: 5299, column: 8)
!7516 = !DILocation(line: 5299, column: 12, scope: !7515)
!7517 = !DILocation(line: 5299, column: 8, scope: !7498)
!7518 = !DILocation(line: 5301, column: 11, scope: !7519)
!7519 = distinct !DILexicalBlock(scope: !7515, file: !3, line: 5300, column: 6)
!7520 = !DILocation(line: 5301, column: 16, scope: !7519)
!7521 = !DILocation(line: 5302, column: 19, scope: !7519)
!7522 = !DILocation(line: 5302, column: 11, scope: !7519)
!7523 = !DILocation(line: 5302, column: 13, scope: !7519)
!7524 = !DILocation(line: 5302, column: 17, scope: !7519)
!7525 = !DILocation(line: 5303, column: 6, scope: !7519)
!7526 = !DILocalVariable(name: "xexpr", scope: !7527, file: !3, line: 5306, type: !1188)
!7527 = distinct !DILexicalBlock(scope: !7515, file: !3, line: 5305, column: 6)
!7528 = !DILocation(line: 5306, column: 12, scope: !7527)
!7529 = !DILocation(line: 5306, column: 20, scope: !7527)
!7530 = !DILocation(line: 5307, column: 34, scope: !7531)
!7531 = distinct !DILexicalBlock(scope: !7527, file: !3, line: 5307, column: 12)
!7532 = !DILocation(line: 5308, column: 6, scope: !7531)
!7533 = !DILocation(line: 5309, column: 6, scope: !7531)
!7534 = !DILocation(line: 5307, column: 12, scope: !7531)
!7535 = !DILocation(line: 5307, column: 12, scope: !7527)
!7536 = !DILocation(line: 5310, column: 6, scope: !7531)
!7537 = !DILocation(line: 5310, column: 11, scope: !7531)
!7538 = !DILocation(line: 5310, column: 3, scope: !7531)
!7539 = !DILocation(line: 5312, column: 6, scope: !7531)
!7540 = !DILocation(line: 5312, column: 11, scope: !7531)
!7541 = !DILocation(line: 5313, column: 19, scope: !7527)
!7542 = !DILocation(line: 5313, column: 11, scope: !7527)
!7543 = !DILocation(line: 5313, column: 13, scope: !7527)
!7544 = !DILocation(line: 5313, column: 17, scope: !7527)
!7545 = !DILocation(line: 5316, column: 17, scope: !7407)
!7546 = !DILocation(line: 5316, column: 22, scope: !7407)
!7547 = !DILocation(line: 5316, column: 10, scope: !7407)
!7548 = !DILocation(line: 5316, column: 15, scope: !7407)
!7549 = !DILocation(line: 5317, column: 5, scope: !7407)
!7550 = !DILocation(line: 5319, column: 5, scope: !7394)
!7551 = !DILocation(line: 5321, column: 7, scope: !7552)
!7552 = distinct !DILexicalBlock(scope: !7259, file: !3, line: 5321, column: 7)
!7553 = !DILocation(line: 5321, column: 12, scope: !7552)
!7554 = !DILocation(line: 5321, column: 7, scope: !7259)
!7555 = !DILocation(line: 5322, column: 5, scope: !7552)
!7556 = !DILocation(line: 5324, column: 21, scope: !7259)
!7557 = !DILocation(line: 5324, column: 27, scope: !7259)
!7558 = !DILocation(line: 5324, column: 33, scope: !7259)
!7559 = !DILocation(line: 5324, column: 7, scope: !7259)
!7560 = !DILocation(line: 5324, column: 5, scope: !7259)
!7561 = !DILocation(line: 5326, column: 8, scope: !7562)
!7562 = distinct !DILexicalBlock(scope: !7259, file: !3, line: 5326, column: 7)
!7563 = !DILocation(line: 5326, column: 7, scope: !7259)
!7564 = !DILocation(line: 5327, column: 5, scope: !7562)
!7565 = !DILocation(line: 5329, column: 51, scope: !7259)
!7566 = !DILocation(line: 5329, column: 25, scope: !7259)
!7567 = !DILocation(line: 5329, column: 24, scope: !7259)
!7568 = !DILocation(line: 5329, column: 22, scope: !7259)
!7569 = !DILocation(line: 5329, column: 11, scope: !7259)
!7570 = !DILocation(line: 5331, column: 36, scope: !7259)
!7571 = !DILocation(line: 5331, column: 10, scope: !7259)
!7572 = !DILocation(line: 5331, column: 8, scope: !7259)
!7573 = !DILocation(line: 5332, column: 7, scope: !7574)
!7574 = distinct !DILexicalBlock(scope: !7259, file: !3, line: 5332, column: 7)
!7575 = !DILocation(line: 5332, column: 7, scope: !7259)
!7576 = !DILocation(line: 5333, column: 12, scope: !7574)
!7577 = !DILocation(line: 5333, column: 10, scope: !7574)
!7578 = !DILocation(line: 5333, column: 5, scope: !7574)
!7579 = !DILocation(line: 5335, column: 7, scope: !7580)
!7580 = distinct !DILexicalBlock(scope: !7259, file: !3, line: 5335, column: 7)
!7581 = !DILocation(line: 5335, column: 38, scope: !7580)
!7582 = !DILocation(line: 5335, column: 7, scope: !7259)
!7583 = !DILocalVariable(name: "oval", scope: !7584, file: !3, line: 5337, type: !1257)
!7584 = distinct !DILexicalBlock(scope: !7580, file: !3, line: 5336, column: 5)
!7585 = !DILocation(line: 5337, column: 19, scope: !7584)
!7586 = !DILocation(line: 5337, column: 41, scope: !7584)
!7587 = !DILocation(line: 5337, column: 47, scope: !7584)
!7588 = !DILocation(line: 5337, column: 26, scope: !7584)
!7589 = !DILocation(line: 5339, column: 7, scope: !7584)
!7590 = !DILocation(line: 5340, column: 7, scope: !7584)
!7591 = !DILocation(line: 5342, column: 38, scope: !7592)
!7592 = distinct !DILexicalBlock(scope: !7584, file: !3, line: 5342, column: 11)
!7593 = !DILocation(line: 5342, column: 12, scope: !7592)
!7594 = !DILocation(line: 5342, column: 11, scope: !7584)
!7595 = !DILocalVariable(name: "moa", scope: !7596, file: !3, line: 5344, type: !2386)
!7596 = distinct !DILexicalBlock(scope: !7592, file: !3, line: 5343, column: 2)
!7597 = !DILocation(line: 5344, column: 20, scope: !7596)
!7598 = !DILocation(line: 5346, column: 20, scope: !7596)
!7599 = !DILocation(line: 5346, column: 4, scope: !7596)
!7600 = !DILocation(line: 5348, column: 8, scope: !7596)
!7601 = !DILocation(line: 5348, column: 13, scope: !7596)
!7602 = !DILocation(line: 5349, column: 16, scope: !7596)
!7603 = !DILocation(line: 5349, column: 8, scope: !7596)
!7604 = !DILocation(line: 5349, column: 10, scope: !7596)
!7605 = !DILocation(line: 5349, column: 14, scope: !7596)
!7606 = !DILocation(line: 5350, column: 4, scope: !7596)
!7607 = !DILocation(line: 5350, column: 37, scope: !7596)
!7608 = !DILocation(line: 5351, column: 15, scope: !7596)
!7609 = !DILocation(line: 5351, column: 20, scope: !7596)
!7610 = !DILocation(line: 5351, column: 8, scope: !7596)
!7611 = !DILocation(line: 5351, column: 13, scope: !7596)
!7612 = !DILocation(line: 5353, column: 8, scope: !7613)
!7613 = distinct !DILexicalBlock(scope: !7596, file: !3, line: 5353, column: 8)
!7614 = !DILocation(line: 5353, column: 18, scope: !7613)
!7615 = !DILocation(line: 5353, column: 22, scope: !7613)
!7616 = !DILocation(line: 5353, column: 33, scope: !7613)
!7617 = !DILocation(line: 5353, column: 8, scope: !7596)
!7618 = !DILocation(line: 5354, column: 23, scope: !7613)
!7619 = !DILocation(line: 5354, column: 25, scope: !7613)
!7620 = !DILocation(line: 5354, column: 30, scope: !7613)
!7621 = !DILocation(line: 5354, column: 35, scope: !7613)
!7622 = !DILocation(line: 5354, column: 39, scope: !7613)
!7623 = !DILocation(line: 5354, column: 44, scope: !7613)
!7624 = !DILocation(line: 5355, column: 9, scope: !7613)
!7625 = !DILocation(line: 5355, column: 15, scope: !7613)
!7626 = !DILocation(line: 5354, column: 6, scope: !7613)
!7627 = !DILocation(line: 5356, column: 4, scope: !7596)
!7628 = !DILocation(line: 5357, column: 2, scope: !7596)
!7629 = !DILocation(line: 5359, column: 15, scope: !7584)
!7630 = !DILocation(line: 5360, column: 5, scope: !7584)
!7631 = !DILocation(line: 5361, column: 12, scope: !7632)
!7632 = distinct !DILexicalBlock(scope: !7580, file: !3, line: 5361, column: 12)
!7633 = !DILocation(line: 5361, column: 20, scope: !7632)
!7634 = !DILocation(line: 5361, column: 23, scope: !7632)
!7635 = !DILocation(line: 5361, column: 43, scope: !7632)
!7636 = !DILocation(line: 5361, column: 12, scope: !7580)
!7637 = !DILocation(line: 5363, column: 40, scope: !7638)
!7638 = distinct !DILexicalBlock(scope: !7632, file: !3, line: 5362, column: 5)
!7639 = !DILocation(line: 5363, column: 14, scope: !7638)
!7640 = !DILocation(line: 5363, column: 12, scope: !7638)
!7641 = !DILocation(line: 5366, column: 12, scope: !7642)
!7642 = distinct !DILexicalBlock(scope: !7638, file: !3, line: 5366, column: 11)
!7643 = !DILocation(line: 5366, column: 17, scope: !7642)
!7644 = !DILocation(line: 5366, column: 20, scope: !7642)
!7645 = !DILocation(line: 5366, column: 28, scope: !7642)
!7646 = !DILocation(line: 5366, column: 25, scope: !7642)
!7647 = !DILocation(line: 5366, column: 11, scope: !7638)
!7648 = !DILocation(line: 5368, column: 11, scope: !7649)
!7649 = distinct !DILexicalBlock(scope: !7642, file: !3, line: 5367, column: 2)
!7650 = !DILocation(line: 5368, column: 9, scope: !7649)
!7651 = !DILocation(line: 5369, column: 4, scope: !7649)
!7652 = !DILocation(line: 5370, column: 2, scope: !7649)
!7653 = !DILocation(line: 5372, column: 11, scope: !7654)
!7654 = distinct !DILexicalBlock(scope: !7638, file: !3, line: 5372, column: 11)
!7655 = !DILocation(line: 5372, column: 11, scope: !7638)
!7656 = !DILocation(line: 5373, column: 9, scope: !7654)
!7657 = !DILocation(line: 5373, column: 7, scope: !7654)
!7658 = !DILocation(line: 5373, column: 2, scope: !7654)
!7659 = !DILocation(line: 5376, column: 8, scope: !7660)
!7660 = distinct !DILexicalBlock(scope: !7661, file: !3, line: 5376, column: 8)
!7661 = distinct !DILexicalBlock(scope: !7654, file: !3, line: 5375, column: 2)
!7662 = !DILocation(line: 5376, column: 16, scope: !7660)
!7663 = !DILocation(line: 5376, column: 13, scope: !7660)
!7664 = !DILocation(line: 5376, column: 8, scope: !7661)
!7665 = !DILocation(line: 5378, column: 16, scope: !7660)
!7666 = !DILocation(line: 5378, column: 18, scope: !7660)
!7667 = !DILocation(line: 5378, column: 11, scope: !7660)
!7668 = !DILocation(line: 5378, column: 6, scope: !7660)
!7669 = !DILocation(line: 5379, column: 9, scope: !7670)
!7670 = distinct !DILexicalBlock(scope: !7661, file: !3, line: 5379, column: 8)
!7671 = !DILocation(line: 5379, column: 8, scope: !7661)
!7672 = !DILocation(line: 5380, column: 14, scope: !7670)
!7673 = !DILocation(line: 5380, column: 6, scope: !7670)
!7674 = !DILocation(line: 5382, column: 5, scope: !7638)
!7675 = !DILocation(line: 5383, column: 13, scope: !7676)
!7676 = distinct !DILexicalBlock(scope: !7632, file: !3, line: 5383, column: 12)
!7677 = !DILocation(line: 5383, column: 12, scope: !7632)
!7678 = !DILocation(line: 5385, column: 11, scope: !7679)
!7679 = distinct !DILexicalBlock(scope: !7680, file: !3, line: 5385, column: 11)
!7680 = distinct !DILexicalBlock(scope: !7676, file: !3, line: 5384, column: 5)
!7681 = !DILocation(line: 5385, column: 31, scope: !7679)
!7682 = !DILocation(line: 5386, column: 4, scope: !7679)
!7683 = !DILocation(line: 5386, column: 7, scope: !7679)
!7684 = !DILocation(line: 5386, column: 15, scope: !7679)
!7685 = !DILocation(line: 5386, column: 12, scope: !7679)
!7686 = !DILocation(line: 5385, column: 11, scope: !7680)
!7687 = !DILocation(line: 5388, column: 12, scope: !7679)
!7688 = !DILocation(line: 5388, column: 14, scope: !7679)
!7689 = !DILocation(line: 5388, column: 7, scope: !7679)
!7690 = !DILocation(line: 5388, column: 2, scope: !7679)
!7691 = !DILocation(line: 5389, column: 5, scope: !7680)
!7692 = !DILocation(line: 5391, column: 13, scope: !7676)
!7693 = !DILocation(line: 5393, column: 9, scope: !7259)
!7694 = !DILocation(line: 5393, column: 7, scope: !7259)
!7695 = !DILocation(line: 5395, column: 10, scope: !7696)
!7696 = distinct !DILexicalBlock(scope: !7259, file: !3, line: 5395, column: 7)
!7697 = !DILocation(line: 5395, column: 12, scope: !7696)
!7698 = !DILocation(line: 5395, column: 19, scope: !7696)
!7699 = !DILocation(line: 5395, column: 16, scope: !7696)
!7700 = !DILocation(line: 5395, column: 7, scope: !7259)
!7701 = !DILocation(line: 5396, column: 11, scope: !7696)
!7702 = !DILocation(line: 5396, column: 9, scope: !7696)
!7703 = !DILocation(line: 5396, column: 5, scope: !7696)
!7704 = !DILocation(line: 5418, column: 7, scope: !7705)
!7705 = distinct !DILexicalBlock(scope: !7259, file: !3, line: 5418, column: 7)
!7706 = !DILocation(line: 5418, column: 38, scope: !7705)
!7707 = !DILocation(line: 5418, column: 7, scope: !7259)
!7708 = !DILocation(line: 5420, column: 29, scope: !7709)
!7709 = distinct !DILexicalBlock(scope: !7705, file: !3, line: 5419, column: 5)
!7710 = !DILocation(line: 5420, column: 32, scope: !7709)
!7711 = !DILocation(line: 5420, column: 41, scope: !7709)
!7712 = !DILocation(line: 5420, column: 17, scope: !7709)
!7713 = !DILocation(line: 5420, column: 15, scope: !7709)
!7714 = !DILocation(line: 5421, column: 11, scope: !7715)
!7715 = distinct !DILexicalBlock(scope: !7709, file: !3, line: 5421, column: 11)
!7716 = !DILocation(line: 5421, column: 11, scope: !7709)
!7717 = !DILocation(line: 5423, column: 10, scope: !7718)
!7718 = distinct !DILexicalBlock(scope: !7715, file: !3, line: 5422, column: 2)
!7719 = !DILocation(line: 5423, column: 8, scope: !7718)
!7720 = !DILocation(line: 5424, column: 4, scope: !7718)
!7721 = !DILocation(line: 5424, column: 31, scope: !7718)
!7722 = !DILocation(line: 5425, column: 2, scope: !7718)
!7723 = !DILocation(line: 5426, column: 5, scope: !7709)
!7724 = !DILocation(line: 5428, column: 14, scope: !7259)
!7725 = !DILocation(line: 5428, column: 6, scope: !7259)
!7726 = !DILocation(line: 5428, column: 8, scope: !7259)
!7727 = !DILocation(line: 5428, column: 12, scope: !7259)
!7728 = !DILocation(line: 5430, column: 7, scope: !7729)
!7729 = distinct !DILexicalBlock(scope: !7259, file: !3, line: 5430, column: 7)
!7730 = !DILocation(line: 5430, column: 7, scope: !7259)
!7731 = !DILocation(line: 5431, column: 5, scope: !7729)
!7732 = !DILocation(line: 5431, column: 32, scope: !7729)
!7733 = !DILocation(line: 5432, column: 7, scope: !7734)
!7734 = distinct !DILexicalBlock(scope: !7259, file: !3, line: 5432, column: 7)
!7735 = !DILocation(line: 5432, column: 7, scope: !7259)
!7736 = !DILocation(line: 5434, column: 36, scope: !7737)
!7737 = distinct !DILexicalBlock(scope: !7734, file: !3, line: 5433, column: 5)
!7738 = !DILocation(line: 5434, column: 7, scope: !7737)
!7739 = !DILocation(line: 5434, column: 34, scope: !7737)
!7740 = !DILocation(line: 5435, column: 23, scope: !7737)
!7741 = !DILocation(line: 5435, column: 7, scope: !7737)
!7742 = !DILocation(line: 5436, column: 5, scope: !7737)
!7743 = !DILocation(line: 5437, column: 10, scope: !7744)
!7744 = distinct !DILexicalBlock(scope: !7259, file: !3, line: 5437, column: 7)
!7745 = !DILocation(line: 5437, column: 15, scope: !7744)
!7746 = !DILocation(line: 5437, column: 7, scope: !7259)
!7747 = !DILocation(line: 5438, column: 5, scope: !7744)
!7748 = !DILocation(line: 5438, column: 33, scope: !7744)
!7749 = !DILocation(line: 5439, column: 10, scope: !7750)
!7750 = distinct !DILexicalBlock(scope: !7259, file: !3, line: 5439, column: 7)
!7751 = !DILocation(line: 5439, column: 15, scope: !7750)
!7752 = !DILocation(line: 5439, column: 7, scope: !7259)
!7753 = !DILocation(line: 5440, column: 5, scope: !7750)
!7754 = !DILocation(line: 5440, column: 30, scope: !7750)
!7755 = !DILocation(line: 5442, column: 6, scope: !7259)
!7756 = !DILocation(line: 5442, column: 11, scope: !7259)
!7757 = !DILocation(line: 5442, column: 3, scope: !7259)
!7758 = !DILabel(scope: !7259, name: "log_and_return", file: !3, line: 5444)
!7759 = !DILocation(line: 5444, column: 2, scope: !7259)
!7760 = !DILocation(line: 5445, column: 7, scope: !7761)
!7761 = distinct !DILexicalBlock(scope: !7259, file: !3, line: 5445, column: 7)
!7762 = !DILocation(line: 5445, column: 17, scope: !7761)
!7763 = !DILocation(line: 5445, column: 21, scope: !7761)
!7764 = !DILocation(line: 5445, column: 32, scope: !7761)
!7765 = !DILocation(line: 5445, column: 7, scope: !7259)
!7766 = !DILocation(line: 5446, column: 21, scope: !7761)
!7767 = !DILocation(line: 5446, column: 23, scope: !7761)
!7768 = !DILocation(line: 5446, column: 28, scope: !7761)
!7769 = !DILocation(line: 5446, column: 33, scope: !7761)
!7770 = !DILocation(line: 5446, column: 37, scope: !7761)
!7771 = !DILocation(line: 5446, column: 42, scope: !7761)
!7772 = !DILocation(line: 5446, column: 51, scope: !7761)
!7773 = !DILocation(line: 5446, column: 57, scope: !7761)
!7774 = !DILocation(line: 5446, column: 5, scope: !7761)
!7775 = !DILocation(line: 5447, column: 3, scope: !7259)
!7776 = !DILocation(line: 5448, column: 1, scope: !7259)
!7777 = distinct !DISubprogram(name: "add_uses", scope: !3, file: !3, line: 4930, type: !7069, scopeLine: 4931, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!7778 = !DILocalVariable(name: "ploc", arg: 1, scope: !7777, file: !3, line: 4930, type: !4733)
!7779 = !DILocation(line: 4930, column: 16, scope: !7777)
!7780 = !DILocalVariable(name: "data", arg: 2, scope: !7777, file: !3, line: 4930, type: !1313)
!7781 = !DILocation(line: 4930, column: 28, scope: !7777)
!7782 = !DILocalVariable(name: "loc", scope: !7777, file: !3, line: 4932, type: !1188)
!7783 = !DILocation(line: 4932, column: 7, scope: !7777)
!7784 = !DILocation(line: 4932, column: 14, scope: !7777)
!7785 = !DILocation(line: 4932, column: 13, scope: !7777)
!7786 = !DILocalVariable(name: "mode", scope: !7777, file: !3, line: 4933, type: !384)
!7787 = !DILocation(line: 4933, column: 21, scope: !7777)
!7788 = !DILocalVariable(name: "cui", scope: !7777, file: !3, line: 4934, type: !2471)
!7789 = !DILocation(line: 4934, column: 26, scope: !7777)
!7790 = !DILocation(line: 4934, column: 57, scope: !7777)
!7791 = !DILocation(line: 4934, column: 32, scope: !7777)
!7792 = !DILocalVariable(name: "type", scope: !7777, file: !3, line: 4935, type: !703)
!7793 = !DILocation(line: 4935, column: 29, scope: !7777)
!7794 = !DILocation(line: 4935, column: 46, scope: !7777)
!7795 = !DILocation(line: 4935, column: 51, scope: !7777)
!7796 = !DILocation(line: 4935, column: 36, scope: !7777)
!7797 = !DILocation(line: 4937, column: 7, scope: !7798)
!7798 = distinct !DILexicalBlock(scope: !7777, file: !3, line: 4937, column: 7)
!7799 = !DILocation(line: 4937, column: 12, scope: !7798)
!7800 = !DILocation(line: 4937, column: 7, scope: !7777)
!7801 = !DILocalVariable(name: "bb", scope: !7802, file: !3, line: 4939, type: !1795)
!7802 = distinct !DILexicalBlock(scope: !7798, file: !3, line: 4938, column: 5)
!7803 = !DILocation(line: 4939, column: 19, scope: !7802)
!7804 = !DILocation(line: 4939, column: 24, scope: !7802)
!7805 = !DILocation(line: 4939, column: 29, scope: !7802)
!7806 = !DILocalVariable(name: "mo", scope: !7802, file: !3, line: 4940, type: !2386)
!7807 = !DILocation(line: 4940, column: 23, scope: !7802)
!7808 = !DILocation(line: 4942, column: 17, scope: !7802)
!7809 = !DILocation(line: 4942, column: 10, scope: !7802)
!7810 = !DILocation(line: 4942, column: 15, scope: !7802)
!7811 = !DILocation(line: 4943, column: 18, scope: !7802)
!7812 = !DILocation(line: 4943, column: 23, scope: !7802)
!7813 = !DILocation(line: 4943, column: 48, scope: !7802)
!7814 = !DILocation(line: 4943, column: 54, scope: !7802)
!7815 = !DILocation(line: 4943, column: 35, scope: !7802)
!7816 = !DILocation(line: 4943, column: 61, scope: !7802)
!7817 = !DILocation(line: 4943, column: 10, scope: !7802)
!7818 = !DILocation(line: 4943, column: 12, scope: !7802)
!7819 = !DILocation(line: 4943, column: 16, scope: !7802)
!7820 = !DILocation(line: 4944, column: 17, scope: !7802)
!7821 = !DILocation(line: 4944, column: 22, scope: !7802)
!7822 = !DILocation(line: 4944, column: 10, scope: !7802)
!7823 = !DILocation(line: 4944, column: 15, scope: !7802)
!7824 = !DILocation(line: 4946, column: 11, scope: !7825)
!7825 = distinct !DILexicalBlock(scope: !7802, file: !3, line: 4946, column: 11)
!7826 = !DILocation(line: 4946, column: 16, scope: !7825)
!7827 = !DILocation(line: 4946, column: 11, scope: !7802)
!7828 = !DILocalVariable(name: "oloc", scope: !7829, file: !3, line: 4948, type: !1188)
!7829 = distinct !DILexicalBlock(scope: !7825, file: !3, line: 4947, column: 2)
!7830 = !DILocation(line: 4948, column: 8, scope: !7829)
!7831 = !DILocation(line: 4948, column: 15, scope: !7829)
!7832 = !DILocalVariable(name: "vloc", scope: !7829, file: !3, line: 4949, type: !1188)
!7833 = !DILocation(line: 4949, column: 8, scope: !7829)
!7834 = !DILocation(line: 4949, column: 15, scope: !7829)
!7835 = !DILocalVariable(name: "val", scope: !7829, file: !3, line: 4950, type: !1257)
!7836 = !DILocation(line: 4950, column: 16, scope: !7829)
!7837 = !DILocation(line: 4952, column: 4, scope: !7829)
!7838 = !DILocation(line: 4954, column: 8, scope: !7839)
!7839 = distinct !DILexicalBlock(scope: !7829, file: !3, line: 4954, column: 8)
!7840 = !DILocation(line: 4955, column: 8, scope: !7839)
!7841 = !DILocation(line: 4955, column: 12, scope: !7839)
!7842 = !DILocation(line: 4956, column: 8, scope: !7839)
!7843 = !DILocation(line: 4956, column: 12, scope: !7839)
!7844 = !DILocation(line: 4957, column: 8, scope: !7839)
!7845 = !DILocation(line: 4957, column: 12, scope: !7839)
!7846 = !DILocation(line: 4957, column: 38, scope: !7839)
!7847 = !DILocation(line: 4958, column: 5, scope: !7839)
!7848 = !DILocation(line: 4958, column: 8, scope: !7839)
!7849 = !DILocation(line: 4958, column: 36, scope: !7839)
!7850 = !DILocation(line: 4958, column: 33, scope: !7839)
!7851 = !DILocation(line: 4959, column: 5, scope: !7839)
!7852 = !DILocation(line: 4959, column: 9, scope: !7839)
!7853 = !DILocation(line: 4954, column: 8, scope: !7829)
!7854 = !DILocalVariable(name: "mloc", scope: !7855, file: !3, line: 4961, type: !1188)
!7855 = distinct !DILexicalBlock(scope: !7839, file: !3, line: 4960, column: 6)
!7856 = !DILocation(line: 4961, column: 12, scope: !7855)
!7857 = !DILocation(line: 4961, column: 19, scope: !7855)
!7858 = !DILocalVariable(name: "address_mode", scope: !7855, file: !3, line: 4962, type: !384)
!7859 = !DILocation(line: 4962, column: 26, scope: !7855)
!7860 = !DILocation(line: 4962, column: 59, scope: !7855)
!7861 = !DILocation(line: 4962, column: 41, scope: !7855)
!7862 = !DILocalVariable(name: "val", scope: !7855, file: !3, line: 4963, type: !1257)
!7863 = !DILocation(line: 4963, column: 20, scope: !7855)
!7864 = !DILocation(line: 4964, column: 20, scope: !7855)
!7865 = !DILocation(line: 4964, column: 36, scope: !7855)
!7866 = !DILocation(line: 4964, column: 5, scope: !7855)
!7867 = !DILocation(line: 4966, column: 12, scope: !7868)
!7868 = distinct !DILexicalBlock(scope: !7855, file: !3, line: 4966, column: 12)
!7869 = !DILocation(line: 4966, column: 16, scope: !7868)
!7870 = !DILocation(line: 4966, column: 46, scope: !7868)
!7871 = !DILocation(line: 4966, column: 20, scope: !7868)
!7872 = !DILocation(line: 4966, column: 12, scope: !7855)
!7873 = !DILocalVariable(name: "moa", scope: !7874, file: !3, line: 4968, type: !2386)
!7874 = distinct !DILexicalBlock(scope: !7868, file: !3, line: 4967, column: 3)
!7875 = !DILocation(line: 4968, column: 21, scope: !7874)
!7876 = !DILocation(line: 4969, column: 21, scope: !7874)
!7877 = !DILocation(line: 4969, column: 5, scope: !7874)
!7878 = !DILocation(line: 4970, column: 36, scope: !7874)
!7879 = !DILocation(line: 4970, column: 12, scope: !7874)
!7880 = !DILocation(line: 4970, column: 10, scope: !7874)
!7881 = !DILocation(line: 4971, column: 9, scope: !7874)
!7882 = !DILocation(line: 4971, column: 14, scope: !7874)
!7883 = !DILocation(line: 4972, column: 16, scope: !7874)
!7884 = !DILocation(line: 4972, column: 21, scope: !7874)
!7885 = !DILocation(line: 4972, column: 9, scope: !7874)
!7886 = !DILocation(line: 4972, column: 14, scope: !7874)
!7887 = !DILocation(line: 4973, column: 17, scope: !7874)
!7888 = !DILocation(line: 4973, column: 9, scope: !7874)
!7889 = !DILocation(line: 4973, column: 11, scope: !7874)
!7890 = !DILocation(line: 4973, column: 15, scope: !7874)
!7891 = !DILocation(line: 4975, column: 9, scope: !7892)
!7892 = distinct !DILexicalBlock(scope: !7874, file: !3, line: 4975, column: 9)
!7893 = !DILocation(line: 4975, column: 19, scope: !7892)
!7894 = !DILocation(line: 4975, column: 23, scope: !7892)
!7895 = !DILocation(line: 4975, column: 34, scope: !7892)
!7896 = !DILocation(line: 4975, column: 9, scope: !7874)
!7897 = !DILocation(line: 4976, column: 24, scope: !7892)
!7898 = !DILocation(line: 4976, column: 26, scope: !7892)
!7899 = !DILocation(line: 4976, column: 31, scope: !7892)
!7900 = !DILocation(line: 4976, column: 36, scope: !7892)
!7901 = !DILocation(line: 4976, column: 40, scope: !7892)
!7902 = !DILocation(line: 4976, column: 45, scope: !7892)
!7903 = !DILocation(line: 4977, column: 10, scope: !7892)
!7904 = !DILocation(line: 4977, column: 16, scope: !7892)
!7905 = !DILocation(line: 4976, column: 7, scope: !7892)
!7906 = !DILocation(line: 4978, column: 5, scope: !7874)
!7907 = !DILocation(line: 4979, column: 3, scope: !7874)
!7908 = !DILocation(line: 4980, column: 6, scope: !7855)
!7909 = !DILocation(line: 4982, column: 8, scope: !7910)
!7910 = distinct !DILexicalBlock(scope: !7829, file: !3, line: 4982, column: 8)
!7911 = !DILocation(line: 4983, column: 8, scope: !7910)
!7912 = !DILocation(line: 4983, column: 12, scope: !7910)
!7913 = !DILocation(line: 4983, column: 28, scope: !7910)
!7914 = !DILocation(line: 4984, column: 5, scope: !7910)
!7915 = !DILocation(line: 4984, column: 8, scope: !7910)
!7916 = !DILocation(line: 4982, column: 8, scope: !7829)
!7917 = !DILocation(line: 4986, column: 14, scope: !7918)
!7918 = distinct !DILexicalBlock(scope: !7910, file: !3, line: 4986, column: 13)
!7919 = !DILocation(line: 4987, column: 6, scope: !7918)
!7920 = !DILocation(line: 4987, column: 30, scope: !7918)
!7921 = !DILocation(line: 4987, column: 36, scope: !7918)
!7922 = !DILocation(line: 4987, column: 53, scope: !7918)
!7923 = !DILocation(line: 4987, column: 16, scope: !7918)
!7924 = !DILocation(line: 4987, column: 14, scope: !7918)
!7925 = !DILocation(line: 4986, column: 13, scope: !7910)
!7926 = !DILocalVariable(name: "mode2", scope: !7927, file: !3, line: 4989, type: !384)
!7927 = distinct !DILexicalBlock(scope: !7918, file: !3, line: 4988, column: 6)
!7928 = !DILocation(line: 4989, column: 26, scope: !7927)
!7929 = !DILocalVariable(name: "type2", scope: !7927, file: !3, line: 4990, type: !703)
!7930 = !DILocation(line: 4990, column: 34, scope: !7927)
!7931 = !DILocalVariable(name: "nloc", scope: !7927, file: !3, line: 4991, type: !1188)
!7932 = !DILocation(line: 4991, column: 12, scope: !7927)
!7933 = !DILocation(line: 4991, column: 45, scope: !7927)
!7934 = !DILocation(line: 4991, column: 19, scope: !7927)
!7935 = !DILocation(line: 4993, column: 12, scope: !7936)
!7936 = distinct !DILexicalBlock(scope: !7927, file: !3, line: 4993, column: 12)
!7937 = !DILocation(line: 4993, column: 12, scope: !7927)
!7938 = !DILocation(line: 4995, column: 12, scope: !7939)
!7939 = distinct !DILexicalBlock(scope: !7936, file: !3, line: 4994, column: 3)
!7940 = !DILocation(line: 4995, column: 10, scope: !7939)
!7941 = !DILocation(line: 4996, column: 35, scope: !7939)
!7942 = !DILocation(line: 4996, column: 5, scope: !7939)
!7943 = !DILocation(line: 4996, column: 33, scope: !7939)
!7944 = !DILocation(line: 4997, column: 3, scope: !7939)
!7945 = !DILocation(line: 4999, column: 15, scope: !7927)
!7946 = !DILocation(line: 4999, column: 13, scope: !7927)
!7947 = !DILocation(line: 5001, column: 26, scope: !7927)
!7948 = !DILocation(line: 5001, column: 16, scope: !7927)
!7949 = !DILocation(line: 5001, column: 14, scope: !7927)
!7950 = !DILocation(line: 5003, column: 8, scope: !7927)
!7951 = !DILocation(line: 5006, column: 12, scope: !7952)
!7952 = distinct !DILexicalBlock(scope: !7927, file: !3, line: 5006, column: 12)
!7953 = !DILocation(line: 5006, column: 18, scope: !7952)
!7954 = !DILocation(line: 5007, column: 5, scope: !7952)
!7955 = !DILocation(line: 5007, column: 35, scope: !7952)
!7956 = !DILocation(line: 5007, column: 9, scope: !7952)
!7957 = !DILocation(line: 5006, column: 12, scope: !7927)
!7958 = !DILocation(line: 5009, column: 5, scope: !7959)
!7959 = distinct !DILexicalBlock(scope: !7952, file: !3, line: 5008, column: 3)
!7960 = !DILocation(line: 5009, column: 33, scope: !7959)
!7961 = !DILocation(line: 5010, column: 21, scope: !7959)
!7962 = !DILocation(line: 5010, column: 5, scope: !7959)
!7963 = !DILocation(line: 5011, column: 3, scope: !7959)
!7964 = !DILocation(line: 5012, column: 6, scope: !7927)
!7965 = !DILocation(line: 5013, column: 14, scope: !7966)
!7966 = distinct !DILexicalBlock(scope: !7918, file: !3, line: 5013, column: 13)
!7967 = !DILocation(line: 5013, column: 13, scope: !7918)
!7968 = !DILocation(line: 5015, column: 15, scope: !7969)
!7969 = distinct !DILexicalBlock(scope: !7966, file: !3, line: 5014, column: 6)
!7970 = !DILocation(line: 5015, column: 13, scope: !7969)
!7971 = !DILocation(line: 5016, column: 38, scope: !7969)
!7972 = !DILocation(line: 5016, column: 8, scope: !7969)
!7973 = !DILocation(line: 5016, column: 36, scope: !7969)
!7974 = !DILocation(line: 5017, column: 6, scope: !7969)
!7975 = !DILocation(line: 5019, column: 15, scope: !7829)
!7976 = !DILocation(line: 5019, column: 7, scope: !7829)
!7977 = !DILocation(line: 5019, column: 9, scope: !7829)
!7978 = !DILocation(line: 5019, column: 13, scope: !7829)
!7979 = !DILocation(line: 5020, column: 2, scope: !7829)
!7980 = !DILocation(line: 5021, column: 16, scope: !7981)
!7981 = distinct !DILexicalBlock(scope: !7825, file: !3, line: 5021, column: 16)
!7982 = !DILocation(line: 5021, column: 21, scope: !7981)
!7983 = !DILocation(line: 5021, column: 16, scope: !7825)
!7984 = !DILocalVariable(name: "mode2", scope: !7985, file: !3, line: 5023, type: !384)
!7985 = distinct !DILexicalBlock(scope: !7981, file: !3, line: 5022, column: 2)
!7986 = !DILocation(line: 5023, column: 22, scope: !7985)
!7987 = !DILocalVariable(name: "type2", scope: !7985, file: !3, line: 5024, type: !703)
!7988 = !DILocation(line: 5024, column: 30, scope: !7985)
!7989 = !DILocalVariable(name: "val", scope: !7985, file: !3, line: 5025, type: !1257)
!7990 = !DILocation(line: 5025, column: 16, scope: !7985)
!7991 = !DILocation(line: 5025, column: 36, scope: !7985)
!7992 = !DILocation(line: 5025, column: 41, scope: !7985)
!7993 = !DILocation(line: 5025, column: 57, scope: !7985)
!7994 = !DILocation(line: 5025, column: 22, scope: !7985)
!7995 = !DILocalVariable(name: "vloc", scope: !7985, file: !3, line: 5026, type: !1188)
!7996 = !DILocation(line: 5026, column: 8, scope: !7985)
!7997 = !DILocalVariable(name: "oloc", scope: !7985, file: !3, line: 5026, type: !1188)
!7998 = !DILocation(line: 5026, column: 14, scope: !7985)
!7999 = !DILocation(line: 5026, column: 21, scope: !7985)
!8000 = !DILocalVariable(name: "nloc", scope: !7985, file: !3, line: 5026, type: !1188)
!8001 = !DILocation(line: 5026, column: 26, scope: !7985)
!8002 = !DILocation(line: 5028, column: 4, scope: !7985)
!8003 = !DILocation(line: 5030, column: 8, scope: !8004)
!8004 = distinct !DILexicalBlock(scope: !7985, file: !3, line: 5030, column: 8)
!8005 = !DILocation(line: 5031, column: 8, scope: !8004)
!8006 = !DILocation(line: 5031, column: 12, scope: !8004)
!8007 = !DILocation(line: 5032, column: 8, scope: !8004)
!8008 = !DILocation(line: 5032, column: 12, scope: !8004)
!8009 = !DILocation(line: 5033, column: 8, scope: !8004)
!8010 = !DILocation(line: 5033, column: 12, scope: !8004)
!8011 = !DILocation(line: 5033, column: 38, scope: !8004)
!8012 = !DILocation(line: 5034, column: 5, scope: !8004)
!8013 = !DILocation(line: 5034, column: 8, scope: !8004)
!8014 = !DILocation(line: 5034, column: 36, scope: !8004)
!8015 = !DILocation(line: 5034, column: 33, scope: !8004)
!8016 = !DILocation(line: 5035, column: 5, scope: !8004)
!8017 = !DILocation(line: 5035, column: 9, scope: !8004)
!8018 = !DILocation(line: 5030, column: 8, scope: !7985)
!8019 = !DILocalVariable(name: "mloc", scope: !8020, file: !3, line: 5037, type: !1188)
!8020 = distinct !DILexicalBlock(scope: !8004, file: !3, line: 5036, column: 6)
!8021 = !DILocation(line: 5037, column: 12, scope: !8020)
!8022 = !DILocation(line: 5037, column: 19, scope: !8020)
!8023 = !DILocalVariable(name: "address_mode", scope: !8020, file: !3, line: 5038, type: !384)
!8024 = !DILocation(line: 5038, column: 26, scope: !8020)
!8025 = !DILocation(line: 5038, column: 59, scope: !8020)
!8026 = !DILocation(line: 5038, column: 41, scope: !8020)
!8027 = !DILocalVariable(name: "val", scope: !8020, file: !3, line: 5039, type: !1257)
!8028 = !DILocation(line: 5039, column: 20, scope: !8020)
!8029 = !DILocation(line: 5040, column: 20, scope: !8020)
!8030 = !DILocation(line: 5040, column: 36, scope: !8020)
!8031 = !DILocation(line: 5040, column: 5, scope: !8020)
!8032 = !DILocation(line: 5042, column: 12, scope: !8033)
!8033 = distinct !DILexicalBlock(scope: !8020, file: !3, line: 5042, column: 12)
!8034 = !DILocation(line: 5042, column: 16, scope: !8033)
!8035 = !DILocation(line: 5042, column: 46, scope: !8033)
!8036 = !DILocation(line: 5042, column: 20, scope: !8033)
!8037 = !DILocation(line: 5042, column: 12, scope: !8020)
!8038 = !DILocalVariable(name: "moa", scope: !8039, file: !3, line: 5044, type: !2386)
!8039 = distinct !DILexicalBlock(scope: !8033, file: !3, line: 5043, column: 3)
!8040 = !DILocation(line: 5044, column: 21, scope: !8039)
!8041 = !DILocation(line: 5045, column: 21, scope: !8039)
!8042 = !DILocation(line: 5045, column: 5, scope: !8039)
!8043 = !DILocation(line: 5046, column: 36, scope: !8039)
!8044 = !DILocation(line: 5046, column: 12, scope: !8039)
!8045 = !DILocation(line: 5046, column: 10, scope: !8039)
!8046 = !DILocation(line: 5047, column: 9, scope: !8039)
!8047 = !DILocation(line: 5047, column: 14, scope: !8039)
!8048 = !DILocation(line: 5048, column: 16, scope: !8039)
!8049 = !DILocation(line: 5048, column: 21, scope: !8039)
!8050 = !DILocation(line: 5048, column: 9, scope: !8039)
!8051 = !DILocation(line: 5048, column: 14, scope: !8039)
!8052 = !DILocation(line: 5049, column: 17, scope: !8039)
!8053 = !DILocation(line: 5049, column: 9, scope: !8039)
!8054 = !DILocation(line: 5049, column: 11, scope: !8039)
!8055 = !DILocation(line: 5049, column: 15, scope: !8039)
!8056 = !DILocation(line: 5051, column: 9, scope: !8057)
!8057 = distinct !DILexicalBlock(scope: !8039, file: !3, line: 5051, column: 9)
!8058 = !DILocation(line: 5051, column: 19, scope: !8057)
!8059 = !DILocation(line: 5051, column: 23, scope: !8057)
!8060 = !DILocation(line: 5051, column: 34, scope: !8057)
!8061 = !DILocation(line: 5051, column: 9, scope: !8039)
!8062 = !DILocation(line: 5052, column: 24, scope: !8057)
!8063 = !DILocation(line: 5052, column: 26, scope: !8057)
!8064 = !DILocation(line: 5052, column: 31, scope: !8057)
!8065 = !DILocation(line: 5052, column: 36, scope: !8057)
!8066 = !DILocation(line: 5052, column: 40, scope: !8057)
!8067 = !DILocation(line: 5052, column: 45, scope: !8057)
!8068 = !DILocation(line: 5053, column: 10, scope: !8057)
!8069 = !DILocation(line: 5053, column: 16, scope: !8057)
!8070 = !DILocation(line: 5052, column: 7, scope: !8057)
!8071 = !DILocation(line: 5054, column: 5, scope: !8039)
!8072 = !DILocation(line: 5055, column: 3, scope: !8039)
!8073 = !DILocation(line: 5056, column: 6, scope: !8020)
!8074 = !DILocation(line: 5058, column: 22, scope: !7985)
!8075 = !DILocation(line: 5058, column: 12, scope: !7985)
!8076 = !DILocation(line: 5058, column: 10, scope: !7985)
!8077 = !DILocation(line: 5060, column: 4, scope: !7985)
!8078 = !DILocation(line: 5063, column: 8, scope: !8079)
!8079 = distinct !DILexicalBlock(scope: !7985, file: !3, line: 5063, column: 8)
!8080 = !DILocation(line: 5063, column: 14, scope: !8079)
!8081 = !DILocation(line: 5063, column: 8, scope: !7985)
!8082 = !DILocation(line: 5064, column: 26, scope: !8079)
!8083 = !DILocation(line: 5064, column: 33, scope: !8079)
!8084 = !DILocation(line: 5064, column: 13, scope: !8079)
!8085 = !DILocation(line: 5064, column: 11, scope: !8079)
!8086 = !DILocation(line: 5064, column: 6, scope: !8079)
!8087 = !DILocation(line: 5066, column: 13, scope: !8079)
!8088 = !DILocation(line: 5066, column: 11, scope: !8079)
!8089 = !DILocation(line: 5078, column: 37, scope: !7985)
!8090 = !DILocation(line: 5078, column: 11, scope: !7985)
!8091 = !DILocation(line: 5078, column: 9, scope: !7985)
!8092 = !DILocation(line: 5079, column: 9, scope: !8093)
!8093 = distinct !DILexicalBlock(scope: !7985, file: !3, line: 5079, column: 8)
!8094 = !DILocation(line: 5079, column: 8, scope: !7985)
!8095 = !DILocation(line: 5080, column: 13, scope: !8093)
!8096 = !DILocation(line: 5080, column: 11, scope: !8093)
!8097 = !DILocation(line: 5080, column: 6, scope: !8093)
!8098 = !DILocation(line: 5082, column: 8, scope: !8099)
!8099 = distinct !DILexicalBlock(scope: !7985, file: !3, line: 5082, column: 8)
!8100 = !DILocation(line: 5082, column: 16, scope: !8099)
!8101 = !DILocation(line: 5082, column: 13, scope: !8099)
!8102 = !DILocation(line: 5082, column: 8, scope: !7985)
!8103 = !DILocation(line: 5083, column: 13, scope: !8099)
!8104 = !DILocation(line: 5083, column: 11, scope: !8099)
!8105 = !DILocation(line: 5083, column: 6, scope: !8099)
!8106 = !DILocation(line: 5085, column: 13, scope: !8099)
!8107 = !DILocation(line: 5085, column: 18, scope: !8099)
!8108 = !DILocation(line: 5085, column: 11, scope: !8099)
!8109 = !DILocation(line: 5087, column: 15, scope: !7985)
!8110 = !DILocation(line: 5087, column: 7, scope: !7985)
!8111 = !DILocation(line: 5087, column: 9, scope: !7985)
!8112 = !DILocation(line: 5087, column: 13, scope: !7985)
!8113 = !DILocation(line: 5089, column: 8, scope: !8114)
!8114 = distinct !DILexicalBlock(scope: !7985, file: !3, line: 5089, column: 8)
!8115 = !DILocation(line: 5089, column: 14, scope: !8114)
!8116 = !DILocation(line: 5089, column: 8, scope: !7985)
!8117 = !DILocation(line: 5090, column: 6, scope: !8114)
!8118 = !DILocation(line: 5090, column: 38, scope: !8114)
!8119 = !DILocation(line: 5091, column: 35, scope: !8120)
!8120 = distinct !DILexicalBlock(scope: !7985, file: !3, line: 5091, column: 8)
!8121 = !DILocation(line: 5091, column: 9, scope: !8120)
!8122 = !DILocation(line: 5091, column: 8, scope: !7985)
!8123 = !DILocation(line: 5093, column: 8, scope: !8124)
!8124 = distinct !DILexicalBlock(scope: !8120, file: !3, line: 5092, column: 6)
!8125 = !DILocation(line: 5093, column: 40, scope: !8124)
!8126 = !DILocation(line: 5094, column: 24, scope: !8124)
!8127 = !DILocation(line: 5094, column: 8, scope: !8124)
!8128 = !DILocation(line: 5095, column: 6, scope: !8124)
!8129 = !DILocation(line: 5096, column: 2, scope: !7985)
!8130 = !DILocation(line: 5098, column: 2, scope: !7981)
!8131 = !DILocation(line: 5100, column: 11, scope: !8132)
!8132 = distinct !DILexicalBlock(scope: !7802, file: !3, line: 5100, column: 11)
!8133 = !DILocation(line: 5100, column: 21, scope: !8132)
!8134 = !DILocation(line: 5100, column: 25, scope: !8132)
!8135 = !DILocation(line: 5100, column: 36, scope: !8132)
!8136 = !DILocation(line: 5100, column: 11, scope: !7802)
!8137 = !DILocation(line: 5101, column: 18, scope: !8132)
!8138 = !DILocation(line: 5101, column: 20, scope: !8132)
!8139 = !DILocation(line: 5101, column: 25, scope: !8132)
!8140 = !DILocation(line: 5101, column: 30, scope: !8132)
!8141 = !DILocation(line: 5101, column: 34, scope: !8132)
!8142 = !DILocation(line: 5101, column: 39, scope: !8132)
!8143 = !DILocation(line: 5101, column: 48, scope: !8132)
!8144 = !DILocation(line: 5101, column: 54, scope: !8132)
!8145 = !DILocation(line: 5101, column: 2, scope: !8132)
!8146 = !DILocation(line: 5102, column: 7, scope: !7802)
!8147 = !DILocation(line: 5103, column: 5, scope: !7802)
!8148 = !DILocation(line: 5105, column: 3, scope: !7777)
!8149 = distinct !DISubprogram(name: "use_type", scope: !3, file: !3, line: 4767, type: !8150, scopeLine: 4768, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!8150 = !DISubroutineType(types: !8151)
!8151 = !{!703, !1188, !2471, !8152}
!8152 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !384, size: 64)
!8153 = !DILocalVariable(name: "loc", arg: 1, scope: !8149, file: !3, line: 4767, type: !1188)
!8154 = !DILocation(line: 4767, column: 15, scope: !8149)
!8155 = !DILocalVariable(name: "cui", arg: 2, scope: !8149, file: !3, line: 4767, type: !2471)
!8156 = !DILocation(line: 4767, column: 43, scope: !8149)
!8157 = !DILocalVariable(name: "modep", arg: 3, scope: !8149, file: !3, line: 4767, type: !8152)
!8158 = !DILocation(line: 4767, column: 67, scope: !8149)
!8159 = !DILocalVariable(name: "expr", scope: !8149, file: !3, line: 4769, type: !1011)
!8160 = !DILocation(line: 4769, column: 8, scope: !8149)
!8161 = !DILocation(line: 4771, column: 7, scope: !8162)
!8162 = distinct !DILexicalBlock(scope: !8149, file: !3, line: 4771, column: 7)
!8163 = !DILocation(line: 4771, column: 11, scope: !8162)
!8164 = !DILocation(line: 4771, column: 14, scope: !8162)
!8165 = !DILocation(line: 4771, column: 19, scope: !8162)
!8166 = !DILocation(line: 4771, column: 7, scope: !8149)
!8167 = !DILocation(line: 4773, column: 11, scope: !8168)
!8168 = distinct !DILexicalBlock(scope: !8169, file: !3, line: 4773, column: 11)
!8169 = distinct !DILexicalBlock(scope: !8162, file: !3, line: 4772, column: 5)
!8170 = !DILocation(line: 4773, column: 26, scope: !8168)
!8171 = !DILocation(line: 4773, column: 11, scope: !8169)
!8172 = !DILocation(line: 4775, column: 22, scope: !8173)
!8173 = distinct !DILexicalBlock(scope: !8174, file: !3, line: 4775, column: 8)
!8174 = distinct !DILexicalBlock(scope: !8168, file: !3, line: 4774, column: 2)
!8175 = !DILocation(line: 4775, column: 8, scope: !8173)
!8176 = !DILocation(line: 4775, column: 8, scope: !8174)
!8177 = !DILocalVariable(name: "ploc", scope: !8178, file: !3, line: 4777, type: !1188)
!8178 = distinct !DILexicalBlock(scope: !8173, file: !3, line: 4776, column: 6)
!8179 = !DILocation(line: 4777, column: 12, scope: !8178)
!8180 = !DILocation(line: 4777, column: 19, scope: !8178)
!8181 = !DILocation(line: 4778, column: 14, scope: !8182)
!8182 = distinct !DILexicalBlock(scope: !8178, file: !3, line: 4778, column: 12)
!8183 = !DILocation(line: 4778, column: 12, scope: !8178)
!8184 = !DILocalVariable(name: "val", scope: !8185, file: !3, line: 4780, type: !1257)
!8185 = distinct !DILexicalBlock(scope: !8182, file: !3, line: 4779, column: 3)
!8186 = !DILocation(line: 4780, column: 17, scope: !8185)
!8187 = !DILocation(line: 4780, column: 38, scope: !8185)
!8188 = !DILocation(line: 4780, column: 44, scope: !8185)
!8189 = !DILocation(line: 4780, column: 23, scope: !8185)
!8190 = !DILocation(line: 4785, column: 5, scope: !8185)
!8191 = !DILocation(line: 4786, column: 3, scope: !8185)
!8192 = !DILocation(line: 4787, column: 8, scope: !8178)
!8193 = !DILocation(line: 4790, column: 6, scope: !8173)
!8194 = !DILocation(line: 4793, column: 11, scope: !8195)
!8195 = distinct !DILexicalBlock(scope: !8169, file: !3, line: 4793, column: 11)
!8196 = !DILocation(line: 4793, column: 23, scope: !8195)
!8197 = !DILocation(line: 4793, column: 26, scope: !8195)
!8198 = !DILocation(line: 4793, column: 11, scope: !8169)
!8199 = !DILocation(line: 4795, column: 8, scope: !8200)
!8200 = distinct !DILexicalBlock(scope: !8201, file: !3, line: 4795, column: 8)
!8201 = distinct !DILexicalBlock(scope: !8195, file: !3, line: 4794, column: 2)
!8202 = !DILocation(line: 4795, column: 8, scope: !8201)
!8203 = !DILocation(line: 4796, column: 15, scope: !8200)
!8204 = !DILocation(line: 4796, column: 7, scope: !8200)
!8205 = !DILocation(line: 4796, column: 13, scope: !8200)
!8206 = !DILocation(line: 4796, column: 6, scope: !8200)
!8207 = !DILocation(line: 4797, column: 8, scope: !8208)
!8208 = distinct !DILexicalBlock(scope: !8201, file: !3, line: 4797, column: 8)
!8209 = !DILocation(line: 4797, column: 13, scope: !8208)
!8210 = !DILocation(line: 4797, column: 8, scope: !8201)
!8211 = !DILocation(line: 4799, column: 12, scope: !8212)
!8212 = distinct !DILexicalBlock(scope: !8213, file: !3, line: 4799, column: 12)
!8213 = distinct !DILexicalBlock(scope: !8208, file: !3, line: 4798, column: 6)
!8214 = !DILocation(line: 4800, column: 5, scope: !8212)
!8215 = !DILocation(line: 4800, column: 23, scope: !8212)
!8216 = !DILocation(line: 4800, column: 28, scope: !8212)
!8217 = !DILocation(line: 4800, column: 44, scope: !8212)
!8218 = !DILocation(line: 4800, column: 9, scope: !8212)
!8219 = !DILocation(line: 4801, column: 9, scope: !8212)
!8220 = !DILocation(line: 4801, column: 27, scope: !8212)
!8221 = !DILocation(line: 4802, column: 24, scope: !8212)
!8222 = !DILocation(line: 4802, column: 6, scope: !8212)
!8223 = !DILocation(line: 4801, column: 12, scope: !8212)
!8224 = !DILocation(line: 4799, column: 12, scope: !8213)
!8225 = !DILocation(line: 4803, column: 3, scope: !8212)
!8226 = !DILocation(line: 4804, column: 6, scope: !8213)
!8227 = !DILocalVariable(name: "val", scope: !8228, file: !3, line: 4807, type: !1257)
!8228 = distinct !DILexicalBlock(scope: !8208, file: !3, line: 4806, column: 6)
!8229 = !DILocation(line: 4807, column: 20, scope: !8228)
!8230 = !DILocation(line: 4807, column: 40, scope: !8228)
!8231 = !DILocation(line: 4807, column: 45, scope: !8228)
!8232 = !DILocation(line: 4807, column: 61, scope: !8228)
!8233 = !DILocation(line: 4807, column: 26, scope: !8228)
!8234 = !DILocation(line: 4809, column: 12, scope: !8235)
!8235 = distinct !DILexicalBlock(scope: !8228, file: !3, line: 4809, column: 12)
!8236 = !DILocation(line: 4809, column: 16, scope: !8235)
!8237 = !DILocation(line: 4809, column: 46, scope: !8235)
!8238 = !DILocation(line: 4809, column: 20, scope: !8235)
!8239 = !DILocation(line: 4809, column: 12, scope: !8228)
!8240 = !DILocation(line: 4810, column: 3, scope: !8235)
!8241 = !DILocation(line: 4812, column: 2, scope: !8201)
!8242 = !DILocation(line: 4813, column: 5, scope: !8169)
!8243 = !DILocation(line: 4815, column: 7, scope: !8244)
!8244 = distinct !DILexicalBlock(scope: !8149, file: !3, line: 4815, column: 7)
!8245 = !DILocation(line: 4815, column: 7, scope: !8149)
!8246 = !DILocation(line: 4817, column: 7, scope: !8247)
!8247 = distinct !DILexicalBlock(scope: !8244, file: !3, line: 4816, column: 5)
!8248 = !DILocation(line: 4819, column: 11, scope: !8249)
!8249 = distinct !DILexicalBlock(scope: !8247, file: !3, line: 4819, column: 11)
!8250 = !DILocation(line: 4819, column: 18, scope: !8249)
!8251 = !DILocation(line: 4819, column: 15, scope: !8249)
!8252 = !DILocation(line: 4819, column: 11, scope: !8247)
!8253 = !DILocation(line: 4820, column: 2, scope: !8249)
!8254 = !DILocation(line: 4821, column: 14, scope: !8247)
!8255 = !DILocation(line: 4821, column: 12, scope: !8247)
!8256 = !DILocation(line: 4823, column: 12, scope: !8257)
!8257 = distinct !DILexicalBlock(scope: !8247, file: !3, line: 4823, column: 11)
!8258 = !DILocation(line: 4823, column: 11, scope: !8247)
!8259 = !DILocation(line: 4824, column: 2, scope: !8257)
!8260 = !DILocation(line: 4825, column: 55, scope: !8261)
!8261 = distinct !DILexicalBlock(scope: !8257, file: !3, line: 4825, column: 16)
!8262 = !DILocation(line: 4825, column: 39, scope: !8261)
!8263 = !DILocation(line: 4825, column: 16, scope: !8261)
!8264 = !DILocation(line: 4825, column: 16, scope: !8257)
!8265 = !DILocation(line: 4826, column: 2, scope: !8261)
!8266 = !DILocation(line: 4827, column: 29, scope: !8267)
!8267 = distinct !DILexicalBlock(scope: !8261, file: !3, line: 4827, column: 16)
!8268 = !DILocation(line: 4827, column: 34, scope: !8267)
!8269 = !DILocation(line: 4827, column: 40, scope: !8267)
!8270 = !DILocation(line: 4828, column: 15, scope: !8267)
!8271 = !DILocation(line: 4827, column: 16, scope: !8267)
!8272 = !DILocation(line: 4827, column: 16, scope: !8261)
!8273 = !DILocation(line: 4829, column: 2, scope: !8267)
!8274 = !DILocation(line: 4831, column: 2, scope: !8267)
!8275 = !DILocation(line: 4833, column: 12, scope: !8276)
!8276 = distinct !DILexicalBlock(scope: !8244, file: !3, line: 4833, column: 12)
!8277 = !DILocation(line: 4833, column: 12, scope: !8244)
!8278 = !DILocation(line: 4835, column: 14, scope: !8279)
!8279 = distinct !DILexicalBlock(scope: !8276, file: !3, line: 4834, column: 5)
!8280 = !DILocation(line: 4835, column: 12, scope: !8279)
!8281 = !DILocation(line: 4837, column: 12, scope: !8282)
!8282 = distinct !DILexicalBlock(scope: !8279, file: !3, line: 4837, column: 11)
!8283 = !DILocation(line: 4837, column: 11, scope: !8279)
!8284 = !DILocation(line: 4838, column: 2, scope: !8282)
!8285 = !DILocation(line: 4839, column: 55, scope: !8286)
!8286 = distinct !DILexicalBlock(scope: !8282, file: !3, line: 4839, column: 16)
!8287 = !DILocation(line: 4839, column: 39, scope: !8286)
!8288 = !DILocation(line: 4839, column: 16, scope: !8286)
!8289 = !DILocation(line: 4839, column: 16, scope: !8282)
!8290 = !DILocation(line: 4840, column: 2, scope: !8286)
!8291 = !DILocation(line: 4841, column: 29, scope: !8292)
!8292 = distinct !DILexicalBlock(scope: !8286, file: !3, line: 4841, column: 16)
!8293 = !DILocation(line: 4841, column: 34, scope: !8292)
!8294 = !DILocation(line: 4841, column: 40, scope: !8292)
!8295 = !DILocation(line: 4842, column: 15, scope: !8292)
!8296 = !DILocation(line: 4841, column: 16, scope: !8292)
!8297 = !DILocation(line: 4841, column: 16, scope: !8286)
!8298 = !DILocation(line: 4843, column: 2, scope: !8292)
!8299 = !DILocation(line: 4845, column: 2, scope: !8292)
!8300 = !DILocation(line: 4848, column: 3, scope: !8149)
!8301 = !DILocation(line: 4849, column: 1, scope: !8149)
!8302 = distinct !DISubprogram(name: "var_lowpart", scope: !3, file: !3, line: 4660, type: !8303, scopeLine: 4661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!8303 = !DISubroutineType(types: !8304)
!8304 = !{!1188, !384, !1188}
!8305 = !DILocalVariable(name: "mode", arg: 1, scope: !8302, file: !3, line: 4660, type: !384)
!8306 = !DILocation(line: 4660, column: 32, scope: !8302)
!8307 = !DILocalVariable(name: "loc", arg: 2, scope: !8302, file: !3, line: 4660, type: !1188)
!8308 = !DILocation(line: 4660, column: 42, scope: !8302)
!8309 = !DILocalVariable(name: "offset", scope: !8302, file: !3, line: 4662, type: !7)
!8310 = !DILocation(line: 4662, column: 16, scope: !8302)
!8311 = !DILocalVariable(name: "reg_offset", scope: !8302, file: !3, line: 4662, type: !7)
!8312 = !DILocation(line: 4662, column: 24, scope: !8302)
!8313 = !DILocalVariable(name: "regno", scope: !8302, file: !3, line: 4662, type: !7)
!8314 = !DILocation(line: 4662, column: 36, scope: !8302)
!8315 = !DILocation(line: 4664, column: 8, scope: !8316)
!8316 = distinct !DILexicalBlock(scope: !8302, file: !3, line: 4664, column: 7)
!8317 = !DILocation(line: 4664, column: 20, scope: !8316)
!8318 = !DILocation(line: 4664, column: 24, scope: !8316)
!8319 = !DILocation(line: 4664, column: 7, scope: !8302)
!8320 = !DILocation(line: 4665, column: 5, scope: !8316)
!8321 = !DILocation(line: 4667, column: 7, scope: !8322)
!8322 = distinct !DILexicalBlock(scope: !8302, file: !3, line: 4667, column: 7)
!8323 = !DILocation(line: 4667, column: 25, scope: !8322)
!8324 = !DILocation(line: 4667, column: 22, scope: !8322)
!8325 = !DILocation(line: 4667, column: 7, scope: !8302)
!8326 = !DILocation(line: 4668, column: 12, scope: !8322)
!8327 = !DILocation(line: 4668, column: 5, scope: !8322)
!8328 = !DILocation(line: 4670, column: 33, scope: !8302)
!8329 = !DILocation(line: 4670, column: 39, scope: !8302)
!8330 = !DILocation(line: 4670, column: 12, scope: !8302)
!8331 = !DILocation(line: 4670, column: 10, scope: !8302)
!8332 = !DILocation(line: 4672, column: 7, scope: !8333)
!8333 = distinct !DILexicalBlock(scope: !8302, file: !3, line: 4672, column: 7)
!8334 = !DILocation(line: 4672, column: 7, scope: !8302)
!8335 = !DILocation(line: 4673, column: 12, scope: !8333)
!8336 = !DILocation(line: 4673, column: 5, scope: !8333)
!8337 = !DILocation(line: 4675, column: 39, scope: !8302)
!8338 = !DILocation(line: 4675, column: 45, scope: !8302)
!8339 = !DILocation(line: 4675, column: 16, scope: !8302)
!8340 = !DILocation(line: 4675, column: 14, scope: !8302)
!8341 = !DILocation(line: 4676, column: 11, scope: !8302)
!8342 = !DILocation(line: 4676, column: 46, scope: !8302)
!8343 = !DILocation(line: 4676, column: 59, scope: !8302)
!8344 = !DILocation(line: 4677, column: 11, scope: !8302)
!8345 = !DILocation(line: 4677, column: 23, scope: !8302)
!8346 = !DILocation(line: 4676, column: 25, scope: !8302)
!8347 = !DILocation(line: 4676, column: 23, scope: !8302)
!8348 = !DILocation(line: 4676, column: 9, scope: !8302)
!8349 = !DILocation(line: 4678, column: 30, scope: !8302)
!8350 = !DILocation(line: 4678, column: 35, scope: !8302)
!8351 = !DILocation(line: 4678, column: 41, scope: !8302)
!8352 = !DILocation(line: 4678, column: 48, scope: !8302)
!8353 = !DILocation(line: 4678, column: 10, scope: !8302)
!8354 = !DILocation(line: 4678, column: 3, scope: !8302)
!8355 = !DILocation(line: 4679, column: 1, scope: !8302)
!8356 = distinct !DISubprogram(name: "get_address_mode", scope: !3, file: !3, line: 4733, type: !8357, scopeLine: 4734, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!8357 = !DISubroutineType(types: !8358)
!8358 = !{!384, !1188}
!8359 = !DILocalVariable(name: "mem", arg: 1, scope: !8356, file: !3, line: 4733, type: !1188)
!8360 = !DILocation(line: 4733, column: 23, scope: !8356)
!8361 = !DILocalVariable(name: "mode", scope: !8356, file: !3, line: 4735, type: !384)
!8362 = !DILocation(line: 4735, column: 21, scope: !8356)
!8363 = !DILocation(line: 4735, column: 28, scope: !8356)
!8364 = !DILocation(line: 4736, column: 7, scope: !8365)
!8365 = distinct !DILexicalBlock(scope: !8356, file: !3, line: 4736, column: 7)
!8366 = !DILocation(line: 4736, column: 12, scope: !8365)
!8367 = !DILocation(line: 4736, column: 7, scope: !8356)
!8368 = !DILocation(line: 4737, column: 12, scope: !8365)
!8369 = !DILocation(line: 4737, column: 5, scope: !8365)
!8370 = !DILocation(line: 4738, column: 29, scope: !8356)
!8371 = !DILocation(line: 4738, column: 43, scope: !8356)
!8372 = !DILocation(line: 4738, column: 10, scope: !8356)
!8373 = !DILocation(line: 4738, column: 3, scope: !8356)
!8374 = !DILocation(line: 4739, column: 1, scope: !8356)
!8375 = distinct !DISubprogram(name: "non_suitable_const", scope: !3, file: !3, line: 4904, type: !7069, scopeLine: 4905, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!8376 = !DILocalVariable(name: "x", arg: 1, scope: !8375, file: !3, line: 4904, type: !4733)
!8377 = !DILocation(line: 4904, column: 26, scope: !8375)
!8378 = !DILocalVariable(name: "data", arg: 2, scope: !8375, file: !3, line: 4904, type: !1313)
!8379 = !DILocation(line: 4904, column: 35, scope: !8375)
!8380 = !DILocation(line: 4906, column: 8, scope: !8381)
!8381 = distinct !DILexicalBlock(scope: !8375, file: !3, line: 4906, column: 7)
!8382 = !DILocation(line: 4906, column: 7, scope: !8381)
!8383 = !DILocation(line: 4906, column: 10, scope: !8381)
!8384 = !DILocation(line: 4906, column: 7, scope: !8375)
!8385 = !DILocation(line: 4907, column: 5, scope: !8381)
!8386 = !DILocation(line: 4909, column: 11, scope: !8375)
!8387 = !DILocation(line: 4909, column: 3, scope: !8375)
!8388 = !DILocation(line: 4918, column: 7, scope: !8389)
!8389 = distinct !DILexicalBlock(scope: !8375, file: !3, line: 4910, column: 5)
!8390 = !DILocation(line: 4920, column: 15, scope: !8389)
!8391 = !DILocation(line: 4920, column: 14, scope: !8389)
!8392 = !DILocation(line: 4920, column: 7, scope: !8389)
!8393 = !DILocation(line: 4922, column: 7, scope: !8389)
!8394 = !DILocation(line: 4924, column: 1, scope: !8375)
!8395 = distinct !DISubprogram(name: "find_use_val", scope: !3, file: !3, line: 4706, type: !8396, scopeLine: 4707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!8396 = !DISubroutineType(types: !8397)
!8397 = !{!1257, !1188, !384, !2471}
!8398 = !DILocalVariable(name: "x", arg: 1, scope: !8395, file: !3, line: 4706, type: !1188)
!8399 = !DILocation(line: 4706, column: 19, scope: !8395)
!8400 = !DILocalVariable(name: "mode", arg: 2, scope: !8395, file: !3, line: 4706, type: !384)
!8401 = !DILocation(line: 4706, column: 40, scope: !8395)
!8402 = !DILocalVariable(name: "cui", arg: 3, scope: !8395, file: !3, line: 4706, type: !2471)
!8403 = !DILocation(line: 4706, column: 69, scope: !8395)
!8404 = !DILocalVariable(name: "i", scope: !8395, file: !3, line: 4708, type: !1010)
!8405 = !DILocation(line: 4708, column: 7, scope: !8395)
!8406 = !DILocation(line: 4710, column: 7, scope: !8407)
!8407 = distinct !DILexicalBlock(scope: !8395, file: !3, line: 4710, column: 7)
!8408 = !DILocation(line: 4710, column: 12, scope: !8407)
!8409 = !DILocation(line: 4710, column: 7, scope: !8395)
!8410 = !DILocation(line: 4717, column: 11, scope: !8411)
!8411 = distinct !DILexicalBlock(scope: !8412, file: !3, line: 4717, column: 11)
!8412 = distinct !DILexicalBlock(scope: !8407, file: !3, line: 4711, column: 5)
!8413 = !DILocation(line: 4717, column: 16, scope: !8411)
!8414 = !DILocation(line: 4717, column: 11, scope: !8412)
!8415 = !DILocation(line: 4719, column: 11, scope: !8416)
!8416 = distinct !DILexicalBlock(scope: !8417, file: !3, line: 4719, column: 4)
!8417 = distinct !DILexicalBlock(scope: !8411, file: !3, line: 4718, column: 2)
!8418 = !DILocation(line: 4719, column: 9, scope: !8416)
!8419 = !DILocation(line: 4719, column: 16, scope: !8420)
!8420 = distinct !DILexicalBlock(scope: !8416, file: !3, line: 4719, column: 4)
!8421 = !DILocation(line: 4719, column: 20, scope: !8420)
!8422 = !DILocation(line: 4719, column: 25, scope: !8420)
!8423 = !DILocation(line: 4719, column: 18, scope: !8420)
!8424 = !DILocation(line: 4719, column: 4, scope: !8416)
!8425 = !DILocation(line: 4720, column: 10, scope: !8426)
!8426 = distinct !DILexicalBlock(scope: !8420, file: !3, line: 4720, column: 10)
!8427 = !DILocation(line: 4720, column: 15, scope: !8426)
!8428 = !DILocation(line: 4720, column: 20, scope: !8426)
!8429 = !DILocation(line: 4720, column: 23, scope: !8426)
!8430 = !DILocation(line: 4720, column: 31, scope: !8426)
!8431 = !DILocation(line: 4720, column: 28, scope: !8426)
!8432 = !DILocation(line: 4720, column: 10, scope: !8420)
!8433 = !DILocation(line: 4721, column: 15, scope: !8426)
!8434 = !DILocation(line: 4721, column: 20, scope: !8426)
!8435 = !DILocation(line: 4721, column: 25, scope: !8426)
!8436 = !DILocation(line: 4721, column: 28, scope: !8426)
!8437 = !DILocation(line: 4721, column: 8, scope: !8426)
!8438 = !DILocation(line: 4719, column: 34, scope: !8420)
!8439 = !DILocation(line: 4719, column: 4, scope: !8420)
!8440 = distinct !{!8440, !8424, !8441}
!8441 = !DILocation(line: 4721, column: 28, scope: !8416)
!8442 = !DILocation(line: 4722, column: 2, scope: !8417)
!8443 = !DILocation(line: 4724, column: 24, scope: !8411)
!8444 = !DILocation(line: 4724, column: 27, scope: !8411)
!8445 = !DILocation(line: 4724, column: 9, scope: !8411)
!8446 = !DILocation(line: 4724, column: 2, scope: !8411)
!8447 = !DILocation(line: 4725, column: 5, scope: !8412)
!8448 = !DILocation(line: 4727, column: 3, scope: !8395)
!8449 = !DILocation(line: 4728, column: 1, scope: !8395)
!8450 = distinct !DISubprogram(name: "replace_expr_with_values", scope: !3, file: !3, line: 4746, type: !8451, scopeLine: 4747, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!8451 = !DISubroutineType(types: !8452)
!8452 = !{!1188, !1188}
!8453 = !DILocalVariable(name: "loc", arg: 1, scope: !8450, file: !3, line: 4746, type: !1188)
!8454 = !DILocation(line: 4746, column: 31, scope: !8450)
!8455 = !DILocation(line: 4748, column: 7, scope: !8456)
!8456 = distinct !DILexicalBlock(scope: !8450, file: !3, line: 4748, column: 7)
!8457 = !DILocation(line: 4748, column: 7, scope: !8450)
!8458 = !DILocation(line: 4749, column: 5, scope: !8456)
!8459 = !DILocation(line: 4750, column: 12, scope: !8460)
!8460 = distinct !DILexicalBlock(scope: !8456, file: !3, line: 4750, column: 12)
!8461 = !DILocation(line: 4750, column: 12, scope: !8456)
!8462 = !DILocalVariable(name: "addr", scope: !8463, file: !3, line: 4752, type: !1257)
!8463 = distinct !DILexicalBlock(scope: !8460, file: !3, line: 4751, column: 5)
!8464 = !DILocation(line: 4752, column: 19, scope: !8463)
!8465 = !DILocation(line: 4752, column: 41, scope: !8463)
!8466 = !DILocation(line: 4753, column: 24, scope: !8463)
!8467 = !DILocation(line: 4753, column: 6, scope: !8463)
!8468 = !DILocation(line: 4752, column: 26, scope: !8463)
!8469 = !DILocation(line: 4754, column: 11, scope: !8470)
!8470 = distinct !DILexicalBlock(scope: !8463, file: !3, line: 4754, column: 11)
!8471 = !DILocation(line: 4754, column: 11, scope: !8463)
!8472 = !DILocation(line: 4755, column: 35, scope: !8470)
!8473 = !DILocation(line: 4755, column: 40, scope: !8470)
!8474 = !DILocation(line: 4755, column: 46, scope: !8470)
!8475 = !DILocation(line: 4755, column: 9, scope: !8470)
!8476 = !DILocation(line: 4755, column: 2, scope: !8470)
!8477 = !DILocation(line: 4757, column: 2, scope: !8470)
!8478 = !DILocation(line: 4760, column: 36, scope: !8460)
!8479 = !DILocation(line: 4760, column: 12, scope: !8460)
!8480 = !DILocation(line: 4760, column: 5, scope: !8460)
!8481 = !DILocation(line: 4761, column: 1, scope: !8450)
!8482 = distinct !DISubprogram(name: "track_expr_p", scope: !3, file: !3, line: 4486, type: !8483, scopeLine: 4487, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!8483 = !DISubroutineType(types: !8484)
!8484 = !{!1130, !1011, !1130}
!8485 = !DILocalVariable(name: "expr", arg: 1, scope: !8482, file: !3, line: 4486, type: !1011)
!8486 = !DILocation(line: 4486, column: 20, scope: !8482)
!8487 = !DILocalVariable(name: "need_rtl", arg: 2, scope: !8482, file: !3, line: 4486, type: !1130)
!8488 = !DILocation(line: 4486, column: 31, scope: !8482)
!8489 = !DILocalVariable(name: "decl_rtl", scope: !8482, file: !3, line: 4488, type: !1188)
!8490 = !DILocation(line: 4488, column: 7, scope: !8482)
!8491 = !DILocalVariable(name: "realdecl", scope: !8482, file: !3, line: 4489, type: !1011)
!8492 = !DILocation(line: 4489, column: 8, scope: !8482)
!8493 = !DILocation(line: 4491, column: 7, scope: !8494)
!8494 = distinct !DILexicalBlock(scope: !8482, file: !3, line: 4491, column: 7)
!8495 = !DILocation(line: 4491, column: 24, scope: !8494)
!8496 = !DILocation(line: 4491, column: 7, scope: !8482)
!8497 = !DILocation(line: 4492, column: 12, scope: !8494)
!8498 = !DILocation(line: 0, scope: !8494)
!8499 = !DILocation(line: 4492, column: 5, scope: !8494)
!8500 = !DILocation(line: 4495, column: 7, scope: !8501)
!8501 = distinct !DILexicalBlock(scope: !8482, file: !3, line: 4495, column: 7)
!8502 = !DILocation(line: 4495, column: 24, scope: !8501)
!8503 = !DILocation(line: 4495, column: 36, scope: !8501)
!8504 = !DILocation(line: 4495, column: 39, scope: !8501)
!8505 = !DILocation(line: 4495, column: 56, scope: !8501)
!8506 = !DILocation(line: 4495, column: 7, scope: !8482)
!8507 = !DILocation(line: 4496, column: 5, scope: !8501)
!8508 = !DILocation(line: 4499, column: 8, scope: !8509)
!8509 = distinct !DILexicalBlock(scope: !8482, file: !3, line: 4499, column: 7)
!8510 = !DILocation(line: 4499, column: 25, scope: !8509)
!8511 = !DILocation(line: 4499, column: 28, scope: !8509)
!8512 = !DILocation(line: 4499, column: 7, scope: !8482)
!8513 = !DILocation(line: 4500, column: 5, scope: !8509)
!8514 = !DILocation(line: 4503, column: 14, scope: !8482)
!8515 = !DILocation(line: 4503, column: 12, scope: !8482)
!8516 = !DILocation(line: 4504, column: 8, scope: !8517)
!8517 = distinct !DILexicalBlock(scope: !8482, file: !3, line: 4504, column: 7)
!8518 = !DILocation(line: 4504, column: 17, scope: !8517)
!8519 = !DILocation(line: 4504, column: 20, scope: !8517)
!8520 = !DILocation(line: 4504, column: 7, scope: !8482)
!8521 = !DILocation(line: 4505, column: 5, scope: !8517)
!8522 = !DILocation(line: 4510, column: 14, scope: !8482)
!8523 = !DILocation(line: 4510, column: 12, scope: !8482)
!8524 = !DILocation(line: 4511, column: 7, scope: !8525)
!8525 = distinct !DILexicalBlock(scope: !8482, file: !3, line: 4511, column: 7)
!8526 = !DILocation(line: 4511, column: 42, scope: !8525)
!8527 = !DILocation(line: 4511, column: 45, scope: !8525)
!8528 = !DILocation(line: 4511, column: 7, scope: !8482)
!8529 = !DILocation(line: 4513, column: 18, scope: !8530)
!8530 = distinct !DILexicalBlock(scope: !8525, file: !3, line: 4512, column: 5)
!8531 = !DILocation(line: 4513, column: 16, scope: !8530)
!8532 = !DILocation(line: 4516, column: 12, scope: !8533)
!8533 = distinct !DILexicalBlock(scope: !8530, file: !3, line: 4516, column: 11)
!8534 = !DILocation(line: 4516, column: 11, scope: !8530)
!8535 = !DILocation(line: 4517, column: 2, scope: !8533)
!8536 = !DILocation(line: 4518, column: 5, scope: !8530)
!8537 = !DILocation(line: 4522, column: 7, scope: !8538)
!8538 = distinct !DILexicalBlock(scope: !8482, file: !3, line: 4522, column: 7)
!8539 = !DILocation(line: 4522, column: 7, scope: !8482)
!8540 = !DILocation(line: 4523, column: 5, scope: !8538)
!8541 = !DILocation(line: 4527, column: 7, scope: !8542)
!8542 = distinct !DILexicalBlock(scope: !8482, file: !3, line: 4527, column: 7)
!8543 = !DILocation(line: 4527, column: 7, scope: !8482)
!8544 = !DILocation(line: 4528, column: 5, scope: !8542)
!8545 = !DILocation(line: 4538, column: 7, scope: !8546)
!8546 = distinct !DILexicalBlock(scope: !8482, file: !3, line: 4538, column: 7)
!8547 = !DILocation(line: 4538, column: 16, scope: !8546)
!8548 = !DILocation(line: 4538, column: 19, scope: !8546)
!8549 = !DILocation(line: 4539, column: 7, scope: !8546)
!8550 = !DILocation(line: 4539, column: 31, scope: !8546)
!8551 = !DILocation(line: 4539, column: 10, scope: !8546)
!8552 = !DILocation(line: 4538, column: 7, scope: !8482)
!8553 = !DILocation(line: 4540, column: 5, scope: !8546)
!8554 = !DILocation(line: 4544, column: 7, scope: !8555)
!8555 = distinct !DILexicalBlock(scope: !8482, file: !3, line: 4544, column: 7)
!8556 = !DILocation(line: 4544, column: 16, scope: !8555)
!8557 = !DILocation(line: 4544, column: 19, scope: !8555)
!8558 = !DILocation(line: 4544, column: 7, scope: !8482)
!8559 = !DILocation(line: 4547, column: 11, scope: !8560)
!8560 = distinct !DILexicalBlock(scope: !8561, file: !3, line: 4547, column: 11)
!8561 = distinct !DILexicalBlock(scope: !8555, file: !3, line: 4545, column: 5)
!8562 = !DILocation(line: 4547, column: 31, scope: !8560)
!8563 = !DILocation(line: 4548, column: 4, scope: !8560)
!8564 = !DILocation(line: 4548, column: 7, scope: !8560)
!8565 = !DILocation(line: 4547, column: 11, scope: !8561)
!8566 = !DILocation(line: 4549, column: 2, scope: !8560)
!8567 = !DILocation(line: 4550, column: 11, scope: !8568)
!8568 = distinct !DILexicalBlock(scope: !8561, file: !3, line: 4550, column: 11)
!8569 = !DILocation(line: 4551, column: 4, scope: !8568)
!8570 = !DILocation(line: 4551, column: 7, scope: !8568)
!8571 = !DILocation(line: 4551, column: 36, scope: !8568)
!8572 = !DILocation(line: 4550, column: 11, scope: !8561)
!8573 = !DILocation(line: 4552, column: 2, scope: !8568)
!8574 = !DILocation(line: 4553, column: 5, scope: !8561)
!8575 = !DILocation(line: 4555, column: 3, scope: !8482)
!8576 = !DILocation(line: 4555, column: 23, scope: !8482)
!8577 = !DILocation(line: 4556, column: 3, scope: !8482)
!8578 = !DILocation(line: 4556, column: 27, scope: !8482)
!8579 = !DILocation(line: 4557, column: 3, scope: !8482)
!8580 = !DILocation(line: 4558, column: 1, scope: !8482)
!8581 = distinct !DISubprogram(name: "track_loc_p", scope: !3, file: !3, line: 4605, type: !8582, scopeLine: 4607, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!8582 = !DISubroutineType(types: !8583)
!8583 = !{!1130, !1188, !1011, !1067, !1130, !8152, !4515}
!8584 = !DILocalVariable(name: "loc", arg: 1, scope: !8581, file: !3, line: 4605, type: !1188)
!8585 = !DILocation(line: 4605, column: 18, scope: !8581)
!8586 = !DILocalVariable(name: "expr", arg: 2, scope: !8581, file: !3, line: 4605, type: !1011)
!8587 = !DILocation(line: 4605, column: 28, scope: !8581)
!8588 = !DILocalVariable(name: "offset", arg: 3, scope: !8581, file: !3, line: 4605, type: !1067)
!8589 = !DILocation(line: 4605, column: 48, scope: !8581)
!8590 = !DILocalVariable(name: "store_reg_p", arg: 4, scope: !8581, file: !3, line: 4605, type: !1130)
!8591 = !DILocation(line: 4605, column: 61, scope: !8581)
!8592 = !DILocalVariable(name: "mode_out", arg: 5, scope: !8581, file: !3, line: 4606, type: !8152)
!8593 = !DILocation(line: 4606, column: 26, scope: !8581)
!8594 = !DILocalVariable(name: "offset_out", arg: 6, scope: !8581, file: !3, line: 4606, type: !4515)
!8595 = !DILocation(line: 4606, column: 51, scope: !8581)
!8596 = !DILocalVariable(name: "mode", scope: !8581, file: !3, line: 4608, type: !384)
!8597 = !DILocation(line: 4608, column: 21, scope: !8581)
!8598 = !DILocation(line: 4610, column: 7, scope: !8599)
!8599 = distinct !DILexicalBlock(scope: !8581, file: !3, line: 4610, column: 7)
!8600 = !DILocation(line: 4610, column: 12, scope: !8599)
!8601 = !DILocation(line: 4610, column: 20, scope: !8599)
!8602 = !DILocation(line: 4610, column: 38, scope: !8599)
!8603 = !DILocation(line: 4610, column: 24, scope: !8599)
!8604 = !DILocation(line: 4610, column: 7, scope: !8581)
!8605 = !DILocation(line: 4611, column: 5, scope: !8599)
!8606 = !DILocation(line: 4615, column: 10, scope: !8581)
!8607 = !DILocation(line: 4615, column: 8, scope: !8581)
!8608 = !DILocation(line: 4616, column: 7, scope: !8609)
!8609 = distinct !DILexicalBlock(scope: !8581, file: !3, line: 4616, column: 7)
!8610 = !DILocation(line: 4616, column: 19, scope: !8609)
!8611 = !DILocation(line: 4616, column: 23, scope: !8609)
!8612 = !DILocation(line: 4616, column: 7, scope: !8581)
!8613 = !DILocalVariable(name: "pseudo_mode", scope: !8614, file: !3, line: 4618, type: !384)
!8614 = distinct !DILexicalBlock(scope: !8609, file: !3, line: 4617, column: 5)
!8615 = !DILocation(line: 4618, column: 25, scope: !8614)
!8616 = !DILocation(line: 4620, column: 21, scope: !8614)
!8617 = !DILocation(line: 4620, column: 19, scope: !8614)
!8618 = !DILocation(line: 4621, column: 11, scope: !8619)
!8619 = distinct !DILexicalBlock(scope: !8614, file: !3, line: 4621, column: 11)
!8620 = !DILocation(line: 4621, column: 34, scope: !8619)
!8621 = !DILocation(line: 4621, column: 32, scope: !8619)
!8622 = !DILocation(line: 4621, column: 11, scope: !8614)
!8623 = !DILocation(line: 4623, column: 35, scope: !8624)
!8624 = distinct !DILexicalBlock(scope: !8619, file: !3, line: 4622, column: 2)
!8625 = !DILocation(line: 4623, column: 48, scope: !8624)
!8626 = !DILocation(line: 4623, column: 14, scope: !8624)
!8627 = !DILocation(line: 4623, column: 11, scope: !8624)
!8628 = !DILocation(line: 4624, column: 11, scope: !8624)
!8629 = !DILocation(line: 4624, column: 9, scope: !8624)
!8630 = !DILocation(line: 4625, column: 2, scope: !8624)
!8631 = !DILocation(line: 4626, column: 5, scope: !8614)
!8632 = !DILocation(line: 4635, column: 8, scope: !8633)
!8633 = distinct !DILexicalBlock(scope: !8581, file: !3, line: 4635, column: 7)
!8634 = !DILocation(line: 4635, column: 31, scope: !8633)
!8635 = !DILocation(line: 4635, column: 29, scope: !8633)
!8636 = !DILocation(line: 4636, column: 8, scope: !8633)
!8637 = !DILocation(line: 4636, column: 12, scope: !8633)
!8638 = !DILocation(line: 4637, column: 5, scope: !8633)
!8639 = !DILocation(line: 4637, column: 9, scope: !8633)
!8640 = !DILocation(line: 4638, column: 5, scope: !8633)
!8641 = !DILocation(line: 4638, column: 25, scope: !8633)
!8642 = !DILocation(line: 4638, column: 8, scope: !8633)
!8643 = !DILocation(line: 4638, column: 38, scope: !8633)
!8644 = !DILocation(line: 4638, column: 56, scope: !8633)
!8645 = !DILocation(line: 4639, column: 7, scope: !8633)
!8646 = !DILocation(line: 4639, column: 10, scope: !8633)
!8647 = !DILocation(line: 4639, column: 40, scope: !8633)
!8648 = !DILocation(line: 4639, column: 58, scope: !8633)
!8649 = !DILocation(line: 4639, column: 19, scope: !8633)
!8650 = !DILocation(line: 4639, column: 17, scope: !8633)
!8651 = !DILocation(line: 4639, column: 64, scope: !8633)
!8652 = !DILocation(line: 4635, column: 7, scope: !8581)
!8653 = !DILocation(line: 4641, column: 14, scope: !8654)
!8654 = distinct !DILexicalBlock(scope: !8633, file: !3, line: 4640, column: 5)
!8655 = !DILocation(line: 4641, column: 12, scope: !8654)
!8656 = !DILocation(line: 4642, column: 14, scope: !8654)
!8657 = !DILocation(line: 4643, column: 5, scope: !8654)
!8658 = !DILocation(line: 4645, column: 7, scope: !8659)
!8659 = distinct !DILexicalBlock(scope: !8581, file: !3, line: 4645, column: 7)
!8660 = !DILocation(line: 4645, column: 14, scope: !8659)
!8661 = !DILocation(line: 4645, column: 18, scope: !8659)
!8662 = !DILocation(line: 4645, column: 21, scope: !8659)
!8663 = !DILocation(line: 4645, column: 28, scope: !8659)
!8664 = !DILocation(line: 4645, column: 7, scope: !8581)
!8665 = !DILocation(line: 4646, column: 5, scope: !8659)
!8666 = !DILocation(line: 4648, column: 7, scope: !8667)
!8667 = distinct !DILexicalBlock(scope: !8581, file: !3, line: 4648, column: 7)
!8668 = !DILocation(line: 4648, column: 7, scope: !8581)
!8669 = !DILocation(line: 4649, column: 17, scope: !8667)
!8670 = !DILocation(line: 4649, column: 6, scope: !8667)
!8671 = !DILocation(line: 4649, column: 15, scope: !8667)
!8672 = !DILocation(line: 4649, column: 5, scope: !8667)
!8673 = !DILocation(line: 4650, column: 7, scope: !8674)
!8674 = distinct !DILexicalBlock(scope: !8581, file: !3, line: 4650, column: 7)
!8675 = !DILocation(line: 4650, column: 7, scope: !8581)
!8676 = !DILocation(line: 4651, column: 19, scope: !8674)
!8677 = !DILocation(line: 4651, column: 6, scope: !8674)
!8678 = !DILocation(line: 4651, column: 17, scope: !8674)
!8679 = !DILocation(line: 4651, column: 5, scope: !8674)
!8680 = !DILocation(line: 4652, column: 3, scope: !8581)
!8681 = !DILocation(line: 4653, column: 1, scope: !8581)
!8682 = distinct !DISubprogram(name: "contains_symbol_ref", scope: !3, file: !3, line: 4450, type: !4832, scopeLine: 4451, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!8683 = !DILocalVariable(name: "x", arg: 1, scope: !8682, file: !3, line: 4450, type: !1188)
!8684 = !DILocation(line: 4450, column: 26, scope: !8682)
!8685 = !DILocalVariable(name: "fmt", scope: !8682, file: !3, line: 4452, type: !1213)
!8686 = !DILocation(line: 4452, column: 15, scope: !8682)
!8687 = !DILocalVariable(name: "code", scope: !8682, file: !3, line: 4453, type: !560)
!8688 = !DILocation(line: 4453, column: 12, scope: !8682)
!8689 = !DILocalVariable(name: "i", scope: !8682, file: !3, line: 4454, type: !1010)
!8690 = !DILocation(line: 4454, column: 7, scope: !8682)
!8691 = !DILocation(line: 4456, column: 8, scope: !8692)
!8692 = distinct !DILexicalBlock(scope: !8682, file: !3, line: 4456, column: 7)
!8693 = !DILocation(line: 4456, column: 7, scope: !8682)
!8694 = !DILocation(line: 4457, column: 5, scope: !8692)
!8695 = !DILocation(line: 4459, column: 10, scope: !8682)
!8696 = !DILocation(line: 4459, column: 8, scope: !8682)
!8697 = !DILocation(line: 4460, column: 7, scope: !8698)
!8698 = distinct !DILexicalBlock(scope: !8682, file: !3, line: 4460, column: 7)
!8699 = !DILocation(line: 4460, column: 12, scope: !8698)
!8700 = !DILocation(line: 4460, column: 7, scope: !8682)
!8701 = !DILocation(line: 4461, column: 5, scope: !8698)
!8702 = !DILocation(line: 4463, column: 9, scope: !8682)
!8703 = !DILocation(line: 4463, column: 7, scope: !8682)
!8704 = !DILocation(line: 4464, column: 12, scope: !8705)
!8705 = distinct !DILexicalBlock(scope: !8682, file: !3, line: 4464, column: 3)
!8706 = !DILocation(line: 4464, column: 34, scope: !8705)
!8707 = !DILocation(line: 4464, column: 10, scope: !8705)
!8708 = !DILocation(line: 4464, column: 8, scope: !8705)
!8709 = !DILocation(line: 4464, column: 39, scope: !8710)
!8710 = distinct !DILexicalBlock(scope: !8705, file: !3, line: 4464, column: 3)
!8711 = !DILocation(line: 4464, column: 41, scope: !8710)
!8712 = !DILocation(line: 4464, column: 3, scope: !8705)
!8713 = !DILocation(line: 4466, column: 11, scope: !8714)
!8714 = distinct !DILexicalBlock(scope: !8715, file: !3, line: 4466, column: 11)
!8715 = distinct !DILexicalBlock(scope: !8710, file: !3, line: 4465, column: 5)
!8716 = !DILocation(line: 4466, column: 15, scope: !8714)
!8717 = !DILocation(line: 4466, column: 18, scope: !8714)
!8718 = !DILocation(line: 4466, column: 11, scope: !8715)
!8719 = !DILocation(line: 4468, column: 29, scope: !8720)
!8720 = distinct !DILexicalBlock(scope: !8721, file: !3, line: 4468, column: 8)
!8721 = distinct !DILexicalBlock(scope: !8714, file: !3, line: 4467, column: 2)
!8722 = !DILocation(line: 4468, column: 8, scope: !8720)
!8723 = !DILocation(line: 4468, column: 8, scope: !8721)
!8724 = !DILocation(line: 4469, column: 6, scope: !8720)
!8725 = !DILocation(line: 4470, column: 2, scope: !8721)
!8726 = !DILocation(line: 4471, column: 16, scope: !8727)
!8727 = distinct !DILexicalBlock(scope: !8714, file: !3, line: 4471, column: 16)
!8728 = !DILocation(line: 4471, column: 20, scope: !8727)
!8729 = !DILocation(line: 4471, column: 23, scope: !8727)
!8730 = !DILocation(line: 4471, column: 16, scope: !8714)
!8731 = !DILocalVariable(name: "j", scope: !8732, file: !3, line: 4473, type: !1010)
!8732 = distinct !DILexicalBlock(scope: !8727, file: !3, line: 4472, column: 2)
!8733 = !DILocation(line: 4473, column: 8, scope: !8732)
!8734 = !DILocation(line: 4474, column: 11, scope: !8735)
!8735 = distinct !DILexicalBlock(scope: !8732, file: !3, line: 4474, column: 4)
!8736 = !DILocation(line: 4474, column: 9, scope: !8735)
!8737 = !DILocation(line: 4474, column: 16, scope: !8738)
!8738 = distinct !DILexicalBlock(scope: !8735, file: !3, line: 4474, column: 4)
!8739 = !DILocation(line: 4474, column: 20, scope: !8738)
!8740 = !DILocation(line: 4474, column: 18, scope: !8738)
!8741 = !DILocation(line: 4474, column: 4, scope: !8735)
!8742 = !DILocation(line: 4475, column: 31, scope: !8743)
!8743 = distinct !DILexicalBlock(scope: !8738, file: !3, line: 4475, column: 10)
!8744 = !DILocation(line: 4475, column: 10, scope: !8743)
!8745 = !DILocation(line: 4475, column: 10, scope: !8738)
!8746 = !DILocation(line: 4476, column: 8, scope: !8743)
!8747 = !DILocation(line: 4475, column: 48, scope: !8743)
!8748 = !DILocation(line: 4474, column: 37, scope: !8738)
!8749 = !DILocation(line: 4474, column: 4, scope: !8738)
!8750 = distinct !{!8750, !8741, !8751}
!8751 = !DILocation(line: 4476, column: 15, scope: !8735)
!8752 = !DILocation(line: 4477, column: 2, scope: !8732)
!8753 = !DILocation(line: 4478, column: 5, scope: !8715)
!8754 = !DILocation(line: 4464, column: 48, scope: !8710)
!8755 = !DILocation(line: 4464, column: 3, scope: !8710)
!8756 = distinct !{!8756, !8712, !8757}
!8757 = !DILocation(line: 4478, column: 5, scope: !8705)
!8758 = !DILocation(line: 4480, column: 3, scope: !8682)
!8759 = !DILocation(line: 4481, column: 1, scope: !8682)
!8760 = distinct !DISubprogram(name: "same_variable_part_p", scope: !3, file: !3, line: 4564, type: !8761, scopeLine: 4565, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!8761 = !DISubroutineType(types: !8762)
!8762 = !{!1130, !1188, !1011, !1067}
!8763 = !DILocalVariable(name: "loc", arg: 1, scope: !8760, file: !3, line: 4564, type: !1188)
!8764 = !DILocation(line: 4564, column: 27, scope: !8760)
!8765 = !DILocalVariable(name: "expr", arg: 2, scope: !8760, file: !3, line: 4564, type: !1011)
!8766 = !DILocation(line: 4564, column: 37, scope: !8760)
!8767 = !DILocalVariable(name: "offset", arg: 3, scope: !8760, file: !3, line: 4564, type: !1067)
!8768 = !DILocation(line: 4564, column: 57, scope: !8760)
!8769 = !DILocalVariable(name: "expr2", scope: !8760, file: !3, line: 4566, type: !1011)
!8770 = !DILocation(line: 4566, column: 8, scope: !8760)
!8771 = !DILocalVariable(name: "offset2", scope: !8760, file: !3, line: 4567, type: !1067)
!8772 = !DILocation(line: 4567, column: 17, scope: !8760)
!8773 = !DILocation(line: 4569, column: 9, scope: !8774)
!8774 = distinct !DILexicalBlock(scope: !8760, file: !3, line: 4569, column: 7)
!8775 = !DILocation(line: 4569, column: 7, scope: !8760)
!8776 = !DILocation(line: 4570, column: 5, scope: !8774)
!8777 = !DILocation(line: 4572, column: 7, scope: !8778)
!8778 = distinct !DILexicalBlock(scope: !8760, file: !3, line: 4572, column: 7)
!8779 = !DILocation(line: 4572, column: 7, scope: !8760)
!8780 = !DILocation(line: 4574, column: 15, scope: !8781)
!8781 = distinct !DILexicalBlock(scope: !8778, file: !3, line: 4573, column: 5)
!8782 = !DILocation(line: 4574, column: 13, scope: !8781)
!8783 = !DILocation(line: 4575, column: 17, scope: !8781)
!8784 = !DILocation(line: 4575, column: 15, scope: !8781)
!8785 = !DILocation(line: 4576, column: 5, scope: !8781)
!8786 = !DILocation(line: 4577, column: 12, scope: !8787)
!8787 = distinct !DILexicalBlock(scope: !8778, file: !3, line: 4577, column: 12)
!8788 = !DILocation(line: 4577, column: 12, scope: !8778)
!8789 = !DILocation(line: 4579, column: 15, scope: !8790)
!8790 = distinct !DILexicalBlock(scope: !8787, file: !3, line: 4578, column: 5)
!8791 = !DILocation(line: 4579, column: 13, scope: !8790)
!8792 = !DILocation(line: 4580, column: 17, scope: !8790)
!8793 = !DILocation(line: 4580, column: 15, scope: !8790)
!8794 = !DILocation(line: 4581, column: 5, scope: !8790)
!8795 = !DILocation(line: 4583, column: 5, scope: !8787)
!8796 = !DILocation(line: 4585, column: 9, scope: !8797)
!8797 = distinct !DILexicalBlock(scope: !8760, file: !3, line: 4585, column: 7)
!8798 = !DILocation(line: 4585, column: 15, scope: !8797)
!8799 = !DILocation(line: 4585, column: 20, scope: !8797)
!8800 = !DILocation(line: 4585, column: 7, scope: !8760)
!8801 = !DILocation(line: 4586, column: 5, scope: !8797)
!8802 = !DILocation(line: 4588, column: 26, scope: !8760)
!8803 = !DILocation(line: 4588, column: 10, scope: !8760)
!8804 = !DILocation(line: 4588, column: 8, scope: !8760)
!8805 = !DILocation(line: 4589, column: 27, scope: !8760)
!8806 = !DILocation(line: 4589, column: 11, scope: !8760)
!8807 = !DILocation(line: 4589, column: 9, scope: !8760)
!8808 = !DILocation(line: 4591, column: 11, scope: !8760)
!8809 = !DILocation(line: 4591, column: 19, scope: !8760)
!8810 = !DILocation(line: 4591, column: 16, scope: !8760)
!8811 = !DILocation(line: 4591, column: 25, scope: !8760)
!8812 = !DILocation(line: 4591, column: 28, scope: !8760)
!8813 = !DILocation(line: 4591, column: 38, scope: !8760)
!8814 = !DILocation(line: 4591, column: 35, scope: !8760)
!8815 = !DILocation(line: 0, scope: !8760)
!8816 = !DILocation(line: 4591, column: 10, scope: !8760)
!8817 = !DILocation(line: 4591, column: 3, scope: !8760)
!8818 = !DILocation(line: 4592, column: 1, scope: !8760)
!8819 = distinct !DISubprogram(name: "reverse_op", scope: !3, file: !3, line: 5121, type: !8820, scopeLine: 5122, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!8820 = !DISubroutineType(types: !8821)
!8821 = !{!1188, !1188, !5270}
!8822 = !DILocalVariable(name: "val", arg: 1, scope: !8819, file: !3, line: 5121, type: !1188)
!8823 = !DILocation(line: 5121, column: 17, scope: !8819)
!8824 = !DILocalVariable(name: "expr", arg: 2, scope: !8819, file: !3, line: 5121, type: !5270)
!8825 = !DILocation(line: 5121, column: 32, scope: !8819)
!8826 = !DILocalVariable(name: "src", scope: !8819, file: !3, line: 5123, type: !1188)
!8827 = !DILocation(line: 5123, column: 7, scope: !8819)
!8828 = !DILocalVariable(name: "arg", scope: !8819, file: !3, line: 5123, type: !1188)
!8829 = !DILocation(line: 5123, column: 12, scope: !8819)
!8830 = !DILocalVariable(name: "ret", scope: !8819, file: !3, line: 5123, type: !1188)
!8831 = !DILocation(line: 5123, column: 17, scope: !8819)
!8832 = !DILocalVariable(name: "v", scope: !8819, file: !3, line: 5124, type: !1257)
!8833 = !DILocation(line: 5124, column: 15, scope: !8819)
!8834 = !DILocalVariable(name: "code", scope: !8819, file: !3, line: 5125, type: !560)
!8835 = !DILocation(line: 5125, column: 17, scope: !8819)
!8836 = !DILocation(line: 5127, column: 7, scope: !8837)
!8837 = distinct !DILexicalBlock(scope: !8819, file: !3, line: 5127, column: 7)
!8838 = !DILocation(line: 5127, column: 23, scope: !8837)
!8839 = !DILocation(line: 5127, column: 7, scope: !8819)
!8840 = !DILocation(line: 5128, column: 5, scope: !8837)
!8841 = !DILocation(line: 5130, column: 8, scope: !8842)
!8842 = distinct !DILexicalBlock(scope: !8819, file: !3, line: 5130, column: 7)
!8843 = !DILocation(line: 5130, column: 32, scope: !8842)
!8844 = !DILocation(line: 5130, column: 35, scope: !8842)
!8845 = !DILocation(line: 5130, column: 53, scope: !8842)
!8846 = !DILocation(line: 5130, column: 50, scope: !8842)
!8847 = !DILocation(line: 5130, column: 7, scope: !8819)
!8848 = !DILocation(line: 5131, column: 5, scope: !8842)
!8849 = !DILocation(line: 5133, column: 9, scope: !8819)
!8850 = !DILocation(line: 5133, column: 7, scope: !8819)
!8851 = !DILocation(line: 5134, column: 11, scope: !8819)
!8852 = !DILocation(line: 5134, column: 3, scope: !8819)
!8853 = !DILocation(line: 5143, column: 7, scope: !8854)
!8854 = distinct !DILexicalBlock(scope: !8819, file: !3, line: 5135, column: 5)
!8855 = !DILocation(line: 5145, column: 7, scope: !8854)
!8856 = !DILocation(line: 5148, column: 8, scope: !8857)
!8857 = distinct !DILexicalBlock(scope: !8819, file: !3, line: 5148, column: 7)
!8858 = !DILocation(line: 5148, column: 30, scope: !8857)
!8859 = !DILocation(line: 5148, column: 34, scope: !8857)
!8860 = !DILocation(line: 5148, column: 7, scope: !8819)
!8861 = !DILocation(line: 5149, column: 5, scope: !8857)
!8862 = !DILocation(line: 5151, column: 22, scope: !8819)
!8863 = !DILocation(line: 5151, column: 37, scope: !8819)
!8864 = !DILocation(line: 5151, column: 7, scope: !8819)
!8865 = !DILocation(line: 5151, column: 5, scope: !8819)
!8866 = !DILocation(line: 5152, column: 8, scope: !8867)
!8867 = distinct !DILexicalBlock(scope: !8819, file: !3, line: 5152, column: 7)
!8868 = !DILocation(line: 5152, column: 10, scope: !8867)
!8869 = !DILocation(line: 5152, column: 40, scope: !8867)
!8870 = !DILocation(line: 5152, column: 14, scope: !8867)
!8871 = !DILocation(line: 5152, column: 7, scope: !8819)
!8872 = !DILocation(line: 5153, column: 5, scope: !8867)
!8873 = !DILocation(line: 5155, column: 11, scope: !8819)
!8874 = !DILocation(line: 5155, column: 3, scope: !8819)
!8875 = !DILocation(line: 5159, column: 11, scope: !8876)
!8876 = distinct !DILexicalBlock(scope: !8877, file: !3, line: 5159, column: 11)
!8877 = distinct !DILexicalBlock(scope: !8819, file: !3, line: 5156, column: 5)
!8878 = !DILocation(line: 5159, column: 36, scope: !8876)
!8879 = !DILocation(line: 5159, column: 33, scope: !8876)
!8880 = !DILocation(line: 5159, column: 11, scope: !8877)
!8881 = !DILocation(line: 5160, column: 2, scope: !8876)
!8882 = !DILocation(line: 5161, column: 13, scope: !8877)
!8883 = !DILocation(line: 5161, column: 11, scope: !8877)
!8884 = !DILocation(line: 5162, column: 7, scope: !8877)
!8885 = !DILocation(line: 5165, column: 33, scope: !8877)
!8886 = !DILocation(line: 5165, column: 56, scope: !8877)
!8887 = !DILocation(line: 5165, column: 13, scope: !8877)
!8888 = !DILocation(line: 5165, column: 11, scope: !8877)
!8889 = !DILocation(line: 5166, column: 7, scope: !8877)
!8890 = !DILocation(line: 5168, column: 12, scope: !8877)
!8891 = !DILocation(line: 5169, column: 7, scope: !8877)
!8892 = !DILocation(line: 5171, column: 12, scope: !8877)
!8893 = !DILocation(line: 5172, column: 7, scope: !8877)
!8894 = !DILocation(line: 5174, column: 12, scope: !8877)
!8895 = !DILocation(line: 5175, column: 7, scope: !8877)
!8896 = !DILabel(scope: !8877, name: "binary", file: !3, line: 5176)
!8897 = !DILocation(line: 5176, column: 5, scope: !8877)
!8898 = !DILocation(line: 5177, column: 11, scope: !8899)
!8899 = distinct !DILexicalBlock(scope: !8877, file: !3, line: 5177, column: 11)
!8900 = !DILocation(line: 5177, column: 36, scope: !8899)
!8901 = !DILocation(line: 5177, column: 33, scope: !8899)
!8902 = !DILocation(line: 5177, column: 11, scope: !8877)
!8903 = !DILocation(line: 5178, column: 2, scope: !8899)
!8904 = !DILocation(line: 5179, column: 13, scope: !8877)
!8905 = !DILocation(line: 5179, column: 11, scope: !8877)
!8906 = !DILocation(line: 5180, column: 12, scope: !8907)
!8907 = distinct !DILexicalBlock(scope: !8877, file: !3, line: 5180, column: 11)
!8908 = !DILocation(line: 5180, column: 30, scope: !8907)
!8909 = !DILocation(line: 5180, column: 33, scope: !8907)
!8910 = !DILocation(line: 5180, column: 48, scope: !8907)
!8911 = !DILocation(line: 5180, column: 11, scope: !8877)
!8912 = !DILocation(line: 5182, column: 35, scope: !8913)
!8913 = distinct !DILexicalBlock(scope: !8907, file: !3, line: 5181, column: 2)
!8914 = !DILocation(line: 5182, column: 40, scope: !8913)
!8915 = !DILocation(line: 5182, column: 10, scope: !8913)
!8916 = !DILocation(line: 5182, column: 8, scope: !8913)
!8917 = !DILocation(line: 5183, column: 8, scope: !8918)
!8918 = distinct !DILexicalBlock(scope: !8913, file: !3, line: 5183, column: 8)
!8919 = !DILocation(line: 5183, column: 12, scope: !8918)
!8920 = !DILocation(line: 5183, column: 8, scope: !8913)
!8921 = !DILocation(line: 5184, column: 6, scope: !8918)
!8922 = !DILocation(line: 5185, column: 9, scope: !8923)
!8923 = distinct !DILexicalBlock(scope: !8913, file: !3, line: 5185, column: 8)
!8924 = !DILocation(line: 5185, column: 27, scope: !8923)
!8925 = !DILocation(line: 5185, column: 30, scope: !8923)
!8926 = !DILocation(line: 5185, column: 45, scope: !8923)
!8927 = !DILocation(line: 5185, column: 8, scope: !8913)
!8928 = !DILocation(line: 5186, column: 6, scope: !8923)
!8929 = !DILocation(line: 5187, column: 2, scope: !8913)
!8930 = !DILocation(line: 5188, column: 34, scope: !8877)
!8931 = !DILocation(line: 5188, column: 40, scope: !8877)
!8932 = !DILocation(line: 5188, column: 56, scope: !8877)
!8933 = !DILocation(line: 5188, column: 61, scope: !8877)
!8934 = !DILocation(line: 5188, column: 13, scope: !8877)
!8935 = !DILocation(line: 5188, column: 11, scope: !8877)
!8936 = !DILocation(line: 5189, column: 11, scope: !8937)
!8937 = distinct !DILexicalBlock(scope: !8877, file: !3, line: 5189, column: 11)
!8938 = !DILocation(line: 5189, column: 18, scope: !8937)
!8939 = !DILocation(line: 5189, column: 15, scope: !8937)
!8940 = !DILocation(line: 5189, column: 11, scope: !8877)
!8941 = !DILocation(line: 5193, column: 8, scope: !8937)
!8942 = !DILocation(line: 5193, column: 6, scope: !8937)
!8943 = !DILocation(line: 5193, column: 2, scope: !8937)
!8944 = !DILocation(line: 5194, column: 7, scope: !8877)
!8945 = !DILocation(line: 5196, column: 7, scope: !8877)
!8946 = !DILocation(line: 5197, column: 5, scope: !8877)
!8947 = !DILocation(line: 5199, column: 10, scope: !8819)
!8948 = !DILocation(line: 5199, column: 3, scope: !8819)
!8949 = !DILocation(line: 5200, column: 1, scope: !8819)
!8950 = distinct !DISubprogram(name: "stack_adjust_offset_pre_post", scope: !3, file: !3, line: 501, type: !4513, scopeLine: 503, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!8951 = !DILocalVariable(name: "pattern", arg: 1, scope: !8950, file: !3, line: 501, type: !1188)
!8952 = !DILocation(line: 501, column: 35, scope: !8950)
!8953 = !DILocalVariable(name: "pre", arg: 2, scope: !8950, file: !3, line: 501, type: !4515)
!8954 = !DILocation(line: 501, column: 59, scope: !8950)
!8955 = !DILocalVariable(name: "post", arg: 3, scope: !8950, file: !3, line: 502, type: !4515)
!8956 = !DILocation(line: 502, column: 25, scope: !8950)
!8957 = !DILocalVariable(name: "src", scope: !8950, file: !3, line: 504, type: !1188)
!8958 = !DILocation(line: 504, column: 7, scope: !8950)
!8959 = !DILocation(line: 504, column: 13, scope: !8950)
!8960 = !DILocalVariable(name: "dest", scope: !8950, file: !3, line: 505, type: !1188)
!8961 = !DILocation(line: 505, column: 7, scope: !8950)
!8962 = !DILocation(line: 505, column: 14, scope: !8950)
!8963 = !DILocalVariable(name: "code", scope: !8950, file: !3, line: 506, type: !560)
!8964 = !DILocation(line: 506, column: 17, scope: !8950)
!8965 = !DILocation(line: 508, column: 7, scope: !8966)
!8966 = distinct !DILexicalBlock(scope: !8950, file: !3, line: 508, column: 7)
!8967 = !DILocation(line: 508, column: 15, scope: !8966)
!8968 = !DILocation(line: 508, column: 12, scope: !8966)
!8969 = !DILocation(line: 508, column: 7, scope: !8950)
!8970 = !DILocation(line: 511, column: 14, scope: !8971)
!8971 = distinct !DILexicalBlock(scope: !8966, file: !3, line: 509, column: 5)
!8972 = !DILocation(line: 511, column: 12, scope: !8971)
!8973 = !DILocation(line: 512, column: 14, scope: !8974)
!8974 = distinct !DILexicalBlock(scope: !8971, file: !3, line: 512, column: 11)
!8975 = !DILocation(line: 512, column: 19, scope: !8974)
!8976 = !DILocation(line: 512, column: 27, scope: !8974)
!8977 = !DILocation(line: 512, column: 30, scope: !8974)
!8978 = !DILocation(line: 512, column: 35, scope: !8974)
!8979 = !DILocation(line: 513, column: 4, scope: !8974)
!8980 = !DILocation(line: 513, column: 7, scope: !8974)
!8981 = !DILocation(line: 513, column: 24, scope: !8974)
!8982 = !DILocation(line: 513, column: 21, scope: !8974)
!8983 = !DILocation(line: 514, column: 4, scope: !8974)
!8984 = !DILocation(line: 514, column: 8, scope: !8974)
!8985 = !DILocation(line: 512, column: 11, scope: !8971)
!8986 = !DILocation(line: 515, column: 2, scope: !8974)
!8987 = !DILocation(line: 517, column: 11, scope: !8988)
!8988 = distinct !DILexicalBlock(scope: !8971, file: !3, line: 517, column: 11)
!8989 = !DILocation(line: 517, column: 16, scope: !8988)
!8990 = !DILocation(line: 517, column: 11, scope: !8971)
!8991 = !DILocation(line: 518, column: 11, scope: !8988)
!8992 = !DILocation(line: 518, column: 3, scope: !8988)
!8993 = !DILocation(line: 518, column: 8, scope: !8988)
!8994 = !DILocation(line: 518, column: 2, scope: !8988)
!8995 = !DILocation(line: 520, column: 11, scope: !8988)
!8996 = !DILocation(line: 520, column: 3, scope: !8988)
!8997 = !DILocation(line: 520, column: 8, scope: !8988)
!8998 = !DILocation(line: 521, column: 5, scope: !8971)
!8999 = !DILocation(line: 522, column: 12, scope: !9000)
!9000 = distinct !DILexicalBlock(scope: !8966, file: !3, line: 522, column: 12)
!9001 = !DILocation(line: 522, column: 12, scope: !8966)
!9002 = !DILocation(line: 525, column: 13, scope: !9003)
!9003 = distinct !DILexicalBlock(scope: !9000, file: !3, line: 523, column: 5)
!9004 = !DILocation(line: 525, column: 11, scope: !9003)
!9005 = !DILocation(line: 526, column: 14, scope: !9003)
!9006 = !DILocation(line: 526, column: 12, scope: !9003)
!9007 = !DILocation(line: 528, column: 15, scope: !9003)
!9008 = !DILocation(line: 528, column: 7, scope: !9003)
!9009 = !DILocation(line: 532, column: 8, scope: !9010)
!9010 = distinct !DILexicalBlock(scope: !9011, file: !3, line: 532, column: 8)
!9011 = distinct !DILexicalBlock(scope: !9003, file: !3, line: 529, column: 2)
!9012 = !DILocation(line: 532, column: 25, scope: !9010)
!9013 = !DILocation(line: 532, column: 22, scope: !9010)
!9014 = !DILocation(line: 532, column: 8, scope: !9011)
!9015 = !DILocalVariable(name: "val", scope: !9016, file: !3, line: 534, type: !1188)
!9016 = distinct !DILexicalBlock(scope: !9010, file: !3, line: 533, column: 6)
!9017 = !DILocation(line: 534, column: 12, scope: !9016)
!9018 = !DILocation(line: 534, column: 18, scope: !9016)
!9019 = !DILocation(line: 536, column: 8, scope: !9016)
!9020 = !DILocation(line: 539, column: 12, scope: !9021)
!9021 = distinct !DILexicalBlock(scope: !9016, file: !3, line: 539, column: 12)
!9022 = !DILocation(line: 539, column: 17, scope: !9021)
!9023 = !DILocation(line: 539, column: 12, scope: !9016)
!9024 = !DILocation(line: 540, column: 11, scope: !9021)
!9025 = !DILocation(line: 540, column: 4, scope: !9021)
!9026 = !DILocation(line: 540, column: 8, scope: !9021)
!9027 = !DILocation(line: 540, column: 3, scope: !9021)
!9028 = !DILocation(line: 542, column: 12, scope: !9021)
!9029 = !DILocation(line: 542, column: 4, scope: !9021)
!9030 = !DILocation(line: 542, column: 9, scope: !9021)
!9031 = !DILocation(line: 543, column: 8, scope: !9016)
!9032 = !DILocation(line: 545, column: 4, scope: !9011)
!9033 = !DILocation(line: 548, column: 8, scope: !9034)
!9034 = distinct !DILexicalBlock(scope: !9011, file: !3, line: 548, column: 8)
!9035 = !DILocation(line: 548, column: 25, scope: !9034)
!9036 = !DILocation(line: 548, column: 22, scope: !9034)
!9037 = !DILocation(line: 548, column: 8, scope: !9011)
!9038 = !DILocation(line: 550, column: 16, scope: !9039)
!9039 = distinct !DILexicalBlock(scope: !9034, file: !3, line: 549, column: 6)
!9040 = !DILocation(line: 550, column: 9, scope: !9039)
!9041 = !DILocation(line: 550, column: 13, scope: !9039)
!9042 = !DILocation(line: 551, column: 8, scope: !9039)
!9043 = !DILocation(line: 553, column: 4, scope: !9011)
!9044 = !DILocation(line: 556, column: 8, scope: !9045)
!9045 = distinct !DILexicalBlock(scope: !9011, file: !3, line: 556, column: 8)
!9046 = !DILocation(line: 556, column: 25, scope: !9045)
!9047 = !DILocation(line: 556, column: 22, scope: !9045)
!9048 = !DILocation(line: 556, column: 8, scope: !9011)
!9049 = !DILocation(line: 558, column: 17, scope: !9050)
!9050 = distinct !DILexicalBlock(scope: !9045, file: !3, line: 557, column: 6)
!9051 = !DILocation(line: 558, column: 9, scope: !9050)
!9052 = !DILocation(line: 558, column: 14, scope: !9050)
!9053 = !DILocation(line: 559, column: 8, scope: !9050)
!9054 = !DILocation(line: 561, column: 4, scope: !9011)
!9055 = !DILocation(line: 564, column: 8, scope: !9056)
!9056 = distinct !DILexicalBlock(scope: !9011, file: !3, line: 564, column: 8)
!9057 = !DILocation(line: 564, column: 25, scope: !9056)
!9058 = !DILocation(line: 564, column: 22, scope: !9056)
!9059 = !DILocation(line: 564, column: 8, scope: !9011)
!9060 = !DILocation(line: 566, column: 16, scope: !9061)
!9061 = distinct !DILexicalBlock(scope: !9056, file: !3, line: 565, column: 6)
!9062 = !DILocation(line: 566, column: 9, scope: !9061)
!9063 = !DILocation(line: 566, column: 13, scope: !9061)
!9064 = !DILocation(line: 567, column: 8, scope: !9061)
!9065 = !DILocation(line: 569, column: 4, scope: !9011)
!9066 = !DILocation(line: 572, column: 8, scope: !9067)
!9067 = distinct !DILexicalBlock(scope: !9011, file: !3, line: 572, column: 8)
!9068 = !DILocation(line: 572, column: 25, scope: !9067)
!9069 = !DILocation(line: 572, column: 22, scope: !9067)
!9070 = !DILocation(line: 572, column: 8, scope: !9011)
!9071 = !DILocation(line: 574, column: 17, scope: !9072)
!9072 = distinct !DILexicalBlock(scope: !9067, file: !3, line: 573, column: 6)
!9073 = !DILocation(line: 574, column: 9, scope: !9072)
!9074 = !DILocation(line: 574, column: 14, scope: !9072)
!9075 = !DILocation(line: 575, column: 8, scope: !9072)
!9076 = !DILocation(line: 577, column: 4, scope: !9011)
!9077 = !DILocation(line: 580, column: 4, scope: !9011)
!9078 = !DILocation(line: 582, column: 5, scope: !9003)
!9079 = !DILocation(line: 583, column: 1, scope: !8950)
!9080 = distinct !DISubprogram(name: "VEC_micro_operation_heap_reserve", scope: !3, file: !3, line: 195, type: !9081, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!9081 = !DISubroutineType(types: !9082)
!9082 = !{!1010, !4667, !1010}
!9083 = !DILocalVariable(name: "vec_", arg: 1, scope: !9080, file: !3, line: 195, type: !4667)
!9084 = !DILocation(line: 195, column: 1, scope: !9080)
!9085 = !DILocalVariable(name: "alloc_", arg: 2, scope: !9080, file: !3, line: 195, type: !1010)
!9086 = !DILocalVariable(name: "extend", scope: !9080, file: !3, line: 195, type: !1010)
!9087 = !DILocation(line: 195, column: 1, scope: !9088)
!9088 = distinct !DILexicalBlock(scope: !9080, file: !3, line: 195, column: 1)
!9089 = distinct !DISubprogram(name: "VEC_micro_operation_base_quick_push", scope: !3, file: !3, line: 194, type: !9090, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!9090 = !DISubroutineType(types: !9091)
!9091 = !{!4238, !7256, !4668}
!9092 = !DILocalVariable(name: "vec_", arg: 1, scope: !9089, file: !3, line: 194, type: !7256)
!9093 = !DILocation(line: 194, column: 1, scope: !9089)
!9094 = !DILocalVariable(name: "obj_", arg: 2, scope: !9089, file: !3, line: 194, type: !4668)
!9095 = !DILocalVariable(name: "slot_", scope: !9089, file: !3, line: 194, type: !4238)
!9096 = !DILocation(line: 194, column: 1, scope: !9097)
!9097 = distinct !DILexicalBlock(scope: !9089, file: !3, line: 194, column: 1)
!9098 = distinct !DISubprogram(name: "VEC_micro_operation_base_space", scope: !3, file: !3, line: 194, type: !9099, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!9099 = !DISubroutineType(types: !9100)
!9100 = !{!1010, !7256, !1010}
!9101 = !DILocalVariable(name: "vec_", arg: 1, scope: !9098, file: !3, line: 194, type: !7256)
!9102 = !DILocation(line: 194, column: 1, scope: !9098)
!9103 = !DILocalVariable(name: "alloc_", arg: 2, scope: !9098, file: !3, line: 194, type: !1010)
!9104 = distinct !DISubprogram(name: "adjust_mem_stores", scope: !3, file: !3, line: 936, type: !7260, scopeLine: 937, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!9105 = !DILocalVariable(name: "loc", arg: 1, scope: !9104, file: !3, line: 936, type: !1188)
!9106 = !DILocation(line: 936, column: 24, scope: !9104)
!9107 = !DILocalVariable(name: "expr", arg: 2, scope: !9104, file: !3, line: 936, type: !5270)
!9108 = !DILocation(line: 936, column: 39, scope: !9104)
!9109 = !DILocalVariable(name: "data", arg: 3, scope: !9104, file: !3, line: 936, type: !1313)
!9110 = !DILocation(line: 936, column: 51, scope: !9104)
!9111 = !DILocation(line: 938, column: 7, scope: !9112)
!9112 = distinct !DILexicalBlock(scope: !9104, file: !3, line: 938, column: 7)
!9113 = !DILocation(line: 938, column: 7, scope: !9104)
!9114 = !DILocalVariable(name: "new_dest", scope: !9115, file: !3, line: 940, type: !1188)
!9115 = distinct !DILexicalBlock(scope: !9112, file: !3, line: 939, column: 5)
!9116 = !DILocation(line: 940, column: 11, scope: !9115)
!9117 = !DILocation(line: 940, column: 47, scope: !9115)
!9118 = !DILocation(line: 941, column: 25, scope: !9115)
!9119 = !DILocation(line: 940, column: 22, scope: !9115)
!9120 = !DILocation(line: 942, column: 11, scope: !9121)
!9121 = distinct !DILexicalBlock(scope: !9115, file: !3, line: 942, column: 11)
!9122 = !DILocation(line: 942, column: 23, scope: !9121)
!9123 = !DILocation(line: 942, column: 20, scope: !9121)
!9124 = !DILocation(line: 942, column: 11, scope: !9115)
!9125 = !DILocalVariable(name: "xexpr", scope: !9126, file: !3, line: 944, type: !1188)
!9126 = distinct !DILexicalBlock(scope: !9121, file: !3, line: 943, column: 2)
!9127 = !DILocation(line: 944, column: 8, scope: !9126)
!9128 = !DILocation(line: 944, column: 16, scope: !9126)
!9129 = !DILocation(line: 945, column: 32, scope: !9126)
!9130 = !DILocation(line: 945, column: 50, scope: !9126)
!9131 = !DILocation(line: 945, column: 4, scope: !9126)
!9132 = !DILocation(line: 946, column: 2, scope: !9126)
!9133 = !DILocation(line: 947, column: 5, scope: !9115)
!9134 = !DILocation(line: 948, column: 1, scope: !9104)
!9135 = distinct !DISubprogram(name: "adjust_mem_uses", scope: !3, file: !3, line: 926, type: !7243, scopeLine: 927, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!9136 = !DILocalVariable(name: "x", arg: 1, scope: !9135, file: !3, line: 926, type: !4733)
!9137 = !DILocation(line: 926, column: 23, scope: !9135)
!9138 = !DILocalVariable(name: "data", arg: 2, scope: !9135, file: !3, line: 926, type: !1313)
!9139 = !DILocation(line: 926, column: 32, scope: !9135)
!9140 = !DILocalVariable(name: "new_x", scope: !9135, file: !3, line: 928, type: !1188)
!9141 = !DILocation(line: 928, column: 7, scope: !9135)
!9142 = !DILocation(line: 928, column: 41, scope: !9135)
!9143 = !DILocation(line: 928, column: 40, scope: !9135)
!9144 = !DILocation(line: 928, column: 67, scope: !9135)
!9145 = !DILocation(line: 928, column: 15, scope: !9135)
!9146 = !DILocation(line: 929, column: 7, scope: !9147)
!9147 = distinct !DILexicalBlock(scope: !9135, file: !3, line: 929, column: 7)
!9148 = !DILocation(line: 929, column: 17, scope: !9147)
!9149 = !DILocation(line: 929, column: 16, scope: !9147)
!9150 = !DILocation(line: 929, column: 13, scope: !9147)
!9151 = !DILocation(line: 929, column: 7, scope: !9135)
!9152 = !DILocation(line: 930, column: 32, scope: !9147)
!9153 = !DILocation(line: 930, column: 35, scope: !9147)
!9154 = !DILocation(line: 930, column: 5, scope: !9147)
!9155 = !DILocation(line: 931, column: 1, scope: !9135)
!9156 = distinct !DISubprogram(name: "adjust_mems", scope: !3, file: !3, line: 797, type: !9157, scopeLine: 798, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!9157 = !DISubroutineType(types: !9158)
!9158 = !{!1188, !1188, !5270, !1313}
!9159 = !DILocalVariable(name: "loc", arg: 1, scope: !9156, file: !3, line: 797, type: !1188)
!9160 = !DILocation(line: 797, column: 18, scope: !9156)
!9161 = !DILocalVariable(name: "old_rtx", arg: 2, scope: !9156, file: !3, line: 797, type: !5270)
!9162 = !DILocation(line: 797, column: 33, scope: !9156)
!9163 = !DILocalVariable(name: "data", arg: 3, scope: !9156, file: !3, line: 797, type: !1313)
!9164 = !DILocation(line: 797, column: 48, scope: !9156)
!9165 = !DILocalVariable(name: "amd", scope: !9156, file: !3, line: 799, type: !2489)
!9166 = !DILocation(line: 799, column: 27, scope: !9156)
!9167 = !DILocation(line: 799, column: 60, scope: !9156)
!9168 = !DILocation(line: 799, column: 33, scope: !9156)
!9169 = !DILocalVariable(name: "mem", scope: !9156, file: !3, line: 800, type: !1188)
!9170 = !DILocation(line: 800, column: 7, scope: !9156)
!9171 = !DILocalVariable(name: "addr", scope: !9156, file: !3, line: 800, type: !1188)
!9172 = !DILocation(line: 800, column: 12, scope: !9156)
!9173 = !DILocation(line: 800, column: 19, scope: !9156)
!9174 = !DILocalVariable(name: "tem", scope: !9156, file: !3, line: 800, type: !1188)
!9175 = !DILocation(line: 800, column: 24, scope: !9156)
!9176 = !DILocalVariable(name: "mem_mode_save", scope: !9156, file: !3, line: 801, type: !384)
!9177 = !DILocation(line: 801, column: 21, scope: !9156)
!9178 = !DILocalVariable(name: "store_save", scope: !9156, file: !3, line: 802, type: !1130)
!9179 = !DILocation(line: 802, column: 8, scope: !9156)
!9180 = !DILocation(line: 803, column: 11, scope: !9156)
!9181 = !DILocation(line: 803, column: 3, scope: !9156)
!9182 = !DILocation(line: 807, column: 11, scope: !9183)
!9183 = distinct !DILexicalBlock(scope: !9184, file: !3, line: 807, column: 11)
!9184 = distinct !DILexicalBlock(scope: !9156, file: !3, line: 804, column: 5)
!9185 = !DILocation(line: 807, column: 16, scope: !9183)
!9186 = !DILocation(line: 807, column: 25, scope: !9183)
!9187 = !DILocation(line: 807, column: 11, scope: !9184)
!9188 = !DILocation(line: 808, column: 9, scope: !9183)
!9189 = !DILocation(line: 808, column: 2, scope: !9183)
!9190 = !DILocation(line: 809, column: 11, scope: !9191)
!9191 = distinct !DILexicalBlock(scope: !9184, file: !3, line: 809, column: 11)
!9192 = !DILocation(line: 809, column: 18, scope: !9191)
!9193 = !DILocation(line: 809, column: 15, scope: !9191)
!9194 = !DILocation(line: 810, column: 4, scope: !9191)
!9195 = !DILocation(line: 810, column: 8, scope: !9191)
!9196 = !DILocation(line: 809, column: 11, scope: !9184)
!9197 = !DILocation(line: 811, column: 30, scope: !9191)
!9198 = !DILocation(line: 811, column: 35, scope: !9191)
!9199 = !DILocation(line: 811, column: 9, scope: !9191)
!9200 = !DILocation(line: 811, column: 2, scope: !9191)
!9201 = !DILocation(line: 812, column: 16, scope: !9202)
!9202 = distinct !DILexicalBlock(scope: !9191, file: !3, line: 812, column: 16)
!9203 = !DILocation(line: 812, column: 23, scope: !9202)
!9204 = !DILocation(line: 812, column: 20, scope: !9202)
!9205 = !DILocation(line: 813, column: 9, scope: !9202)
!9206 = !DILocation(line: 813, column: 12, scope: !9202)
!9207 = !DILocation(line: 814, column: 9, scope: !9202)
!9208 = !DILocation(line: 814, column: 12, scope: !9202)
!9209 = !DILocation(line: 814, column: 42, scope: !9202)
!9210 = !DILocation(line: 812, column: 16, scope: !9191)
!9211 = !DILocation(line: 815, column: 30, scope: !9202)
!9212 = !DILocation(line: 815, column: 9, scope: !9202)
!9213 = !DILocation(line: 815, column: 2, scope: !9202)
!9214 = !DILocation(line: 816, column: 14, scope: !9184)
!9215 = !DILocation(line: 816, column: 7, scope: !9184)
!9216 = !DILocation(line: 818, column: 13, scope: !9184)
!9217 = !DILocation(line: 818, column: 11, scope: !9184)
!9218 = !DILocation(line: 819, column: 12, scope: !9219)
!9219 = distinct !DILexicalBlock(scope: !9184, file: !3, line: 819, column: 11)
!9220 = !DILocation(line: 819, column: 17, scope: !9219)
!9221 = !DILocation(line: 819, column: 11, scope: !9184)
!9222 = !DILocation(line: 821, column: 18, scope: !9223)
!9223 = distinct !DILexicalBlock(scope: !9219, file: !3, line: 820, column: 2)
!9224 = !DILocation(line: 821, column: 40, scope: !9223)
!9225 = !DILocation(line: 821, column: 10, scope: !9223)
!9226 = !DILocation(line: 821, column: 8, scope: !9223)
!9227 = !DILocation(line: 822, column: 8, scope: !9228)
!9228 = distinct !DILexicalBlock(scope: !9223, file: !3, line: 822, column: 8)
!9229 = !DILocation(line: 822, column: 15, scope: !9228)
!9230 = !DILocation(line: 822, column: 12, scope: !9228)
!9231 = !DILocation(line: 822, column: 19, scope: !9228)
!9232 = !DILocation(line: 822, column: 23, scope: !9228)
!9233 = !DILocation(line: 822, column: 8, scope: !9223)
!9234 = !DILocation(line: 823, column: 38, scope: !9228)
!9235 = !DILocation(line: 823, column: 43, scope: !9228)
!9236 = !DILocation(line: 823, column: 65, scope: !9228)
!9237 = !DILocation(line: 823, column: 13, scope: !9228)
!9238 = !DILocation(line: 823, column: 6, scope: !9228)
!9239 = !DILocation(line: 824, column: 2, scope: !9223)
!9240 = !DILocation(line: 826, column: 14, scope: !9184)
!9241 = !DILocation(line: 826, column: 12, scope: !9184)
!9242 = !DILocation(line: 827, column: 23, scope: !9184)
!9243 = !DILocation(line: 827, column: 28, scope: !9184)
!9244 = !DILocation(line: 827, column: 21, scope: !9184)
!9245 = !DILocation(line: 828, column: 23, scope: !9184)
!9246 = !DILocation(line: 828, column: 7, scope: !9184)
!9247 = !DILocation(line: 828, column: 12, scope: !9184)
!9248 = !DILocation(line: 828, column: 21, scope: !9184)
!9249 = !DILocation(line: 829, column: 20, scope: !9184)
!9250 = !DILocation(line: 829, column: 25, scope: !9184)
!9251 = !DILocation(line: 829, column: 18, scope: !9184)
!9252 = !DILocation(line: 830, column: 7, scope: !9184)
!9253 = !DILocation(line: 830, column: 12, scope: !9184)
!9254 = !DILocation(line: 830, column: 18, scope: !9184)
!9255 = !DILocation(line: 831, column: 39, scope: !9184)
!9256 = !DILocation(line: 831, column: 45, scope: !9184)
!9257 = !DILocation(line: 831, column: 67, scope: !9184)
!9258 = !DILocation(line: 831, column: 14, scope: !9184)
!9259 = !DILocation(line: 831, column: 12, scope: !9184)
!9260 = !DILocation(line: 832, column: 20, scope: !9184)
!9261 = !DILocation(line: 832, column: 7, scope: !9184)
!9262 = !DILocation(line: 832, column: 12, scope: !9184)
!9263 = !DILocation(line: 832, column: 18, scope: !9184)
!9264 = !DILocation(line: 833, column: 23, scope: !9184)
!9265 = !DILocation(line: 833, column: 7, scope: !9184)
!9266 = !DILocation(line: 833, column: 12, scope: !9184)
!9267 = !DILocation(line: 833, column: 21, scope: !9184)
!9268 = !DILocation(line: 834, column: 11, scope: !9269)
!9269 = distinct !DILexicalBlock(scope: !9184, file: !3, line: 834, column: 11)
!9270 = !DILocation(line: 834, column: 18, scope: !9269)
!9271 = !DILocation(line: 834, column: 15, scope: !9269)
!9272 = !DILocation(line: 834, column: 11, scope: !9184)
!9273 = !DILocation(line: 835, column: 17, scope: !9269)
!9274 = !DILocation(line: 835, column: 39, scope: !9269)
!9275 = !DILocation(line: 835, column: 9, scope: !9269)
!9276 = !DILocation(line: 835, column: 7, scope: !9269)
!9277 = !DILocation(line: 835, column: 2, scope: !9269)
!9278 = !DILocation(line: 836, column: 11, scope: !9279)
!9279 = distinct !DILexicalBlock(scope: !9184, file: !3, line: 836, column: 11)
!9280 = !DILocation(line: 836, column: 19, scope: !9279)
!9281 = !DILocation(line: 836, column: 16, scope: !9279)
!9282 = !DILocation(line: 836, column: 11, scope: !9184)
!9283 = !DILocation(line: 837, column: 34, scope: !9279)
!9284 = !DILocation(line: 837, column: 39, scope: !9279)
!9285 = !DILocation(line: 837, column: 8, scope: !9279)
!9286 = !DILocation(line: 837, column: 6, scope: !9279)
!9287 = !DILocation(line: 837, column: 2, scope: !9279)
!9288 = !DILocation(line: 838, column: 12, scope: !9289)
!9289 = distinct !DILexicalBlock(scope: !9184, file: !3, line: 838, column: 11)
!9290 = !DILocation(line: 838, column: 17, scope: !9289)
!9291 = !DILocation(line: 838, column: 11, scope: !9184)
!9292 = !DILocation(line: 839, column: 39, scope: !9289)
!9293 = !DILocation(line: 839, column: 8, scope: !9289)
!9294 = !DILocation(line: 839, column: 6, scope: !9289)
!9295 = !DILocation(line: 839, column: 2, scope: !9289)
!9296 = !DILocation(line: 840, column: 14, scope: !9184)
!9297 = !DILocation(line: 840, column: 7, scope: !9184)
!9298 = !DILocation(line: 843, column: 14, scope: !9184)
!9299 = !DILocation(line: 843, column: 12, scope: !9184)
!9300 = !DILocation(line: 843, column: 7, scope: !9184)
!9301 = !DILocation(line: 849, column: 11, scope: !9302)
!9302 = distinct !DILexicalBlock(scope: !9184, file: !3, line: 849, column: 11)
!9303 = !DILocation(line: 849, column: 19, scope: !9302)
!9304 = !DILocation(line: 849, column: 16, scope: !9302)
!9305 = !DILocation(line: 849, column: 11, scope: !9184)
!9306 = !DILocation(line: 850, column: 9, scope: !9302)
!9307 = !DILocation(line: 850, column: 7, scope: !9302)
!9308 = !DILocation(line: 850, column: 2, scope: !9302)
!9309 = !DILocation(line: 851, column: 7, scope: !9184)
!9310 = !DILocation(line: 852, column: 39, scope: !9184)
!9311 = !DILocation(line: 852, column: 45, scope: !9184)
!9312 = !DILocation(line: 852, column: 67, scope: !9184)
!9313 = !DILocation(line: 852, column: 14, scope: !9184)
!9314 = !DILocation(line: 852, column: 12, scope: !9184)
!9315 = !DILocation(line: 853, column: 13, scope: !9184)
!9316 = !DILocation(line: 853, column: 11, scope: !9184)
!9317 = !DILocation(line: 859, column: 9, scope: !9184)
!9318 = !DILocation(line: 862, column: 9, scope: !9184)
!9319 = !DILocation(line: 862, column: 14, scope: !9184)
!9320 = !DILocation(line: 858, column: 27, scope: !9184)
!9321 = !DILocation(line: 858, column: 7, scope: !9184)
!9322 = !DILocation(line: 858, column: 12, scope: !9184)
!9323 = !DILocation(line: 858, column: 25, scope: !9184)
!9324 = !DILocation(line: 863, column: 14, scope: !9184)
!9325 = !DILocation(line: 863, column: 7, scope: !9184)
!9326 = !DILocation(line: 865, column: 14, scope: !9184)
!9327 = !DILocation(line: 865, column: 12, scope: !9184)
!9328 = !DILocation(line: 865, column: 7, scope: !9184)
!9329 = !DILocation(line: 867, column: 11, scope: !9330)
!9330 = distinct !DILexicalBlock(scope: !9184, file: !3, line: 867, column: 11)
!9331 = !DILocation(line: 867, column: 19, scope: !9330)
!9332 = !DILocation(line: 867, column: 16, scope: !9330)
!9333 = !DILocation(line: 867, column: 11, scope: !9184)
!9334 = !DILocation(line: 868, column: 9, scope: !9330)
!9335 = !DILocation(line: 868, column: 7, scope: !9330)
!9336 = !DILocation(line: 868, column: 2, scope: !9330)
!9337 = !DILocation(line: 869, column: 7, scope: !9184)
!9338 = !DILocation(line: 870, column: 39, scope: !9184)
!9339 = !DILocation(line: 870, column: 45, scope: !9184)
!9340 = !DILocation(line: 870, column: 67, scope: !9184)
!9341 = !DILocation(line: 870, column: 14, scope: !9184)
!9342 = !DILocation(line: 870, column: 12, scope: !9184)
!9343 = !DILocation(line: 872, column: 9, scope: !9184)
!9344 = !DILocation(line: 875, column: 9, scope: !9184)
!9345 = !DILocation(line: 875, column: 14, scope: !9184)
!9346 = !DILocation(line: 871, column: 27, scope: !9184)
!9347 = !DILocation(line: 871, column: 7, scope: !9184)
!9348 = !DILocation(line: 871, column: 12, scope: !9184)
!9349 = !DILocation(line: 871, column: 25, scope: !9184)
!9350 = !DILocation(line: 876, column: 14, scope: !9184)
!9351 = !DILocation(line: 876, column: 7, scope: !9184)
!9352 = !DILocation(line: 880, column: 20, scope: !9184)
!9353 = !DILocation(line: 880, column: 25, scope: !9184)
!9354 = !DILocation(line: 880, column: 18, scope: !9184)
!9355 = !DILocation(line: 881, column: 7, scope: !9184)
!9356 = !DILocation(line: 881, column: 12, scope: !9184)
!9357 = !DILocation(line: 881, column: 18, scope: !9184)
!9358 = !DILocation(line: 882, column: 39, scope: !9184)
!9359 = !DILocation(line: 882, column: 57, scope: !9184)
!9360 = !DILocation(line: 883, column: 11, scope: !9184)
!9361 = !DILocation(line: 882, column: 14, scope: !9184)
!9362 = !DILocation(line: 882, column: 12, scope: !9184)
!9363 = !DILocation(line: 884, column: 20, scope: !9184)
!9364 = !DILocation(line: 884, column: 7, scope: !9184)
!9365 = !DILocation(line: 884, column: 12, scope: !9184)
!9366 = !DILocation(line: 884, column: 18, scope: !9184)
!9367 = !DILocation(line: 885, column: 38, scope: !9184)
!9368 = !DILocation(line: 885, column: 44, scope: !9184)
!9369 = !DILocation(line: 885, column: 66, scope: !9184)
!9370 = !DILocation(line: 885, column: 13, scope: !9184)
!9371 = !DILocation(line: 885, column: 11, scope: !9184)
!9372 = !DILocation(line: 886, column: 11, scope: !9373)
!9373 = distinct !DILexicalBlock(scope: !9184, file: !3, line: 886, column: 11)
!9374 = !DILocation(line: 886, column: 18, scope: !9373)
!9375 = !DILocation(line: 886, column: 15, scope: !9373)
!9376 = !DILocation(line: 886, column: 11, scope: !9184)
!9377 = !DILocation(line: 888, column: 10, scope: !9378)
!9378 = distinct !DILexicalBlock(scope: !9373, file: !3, line: 887, column: 2)
!9379 = !DILocation(line: 888, column: 8, scope: !9378)
!9380 = !DILocation(line: 889, column: 4, scope: !9378)
!9381 = !DILocation(line: 891, column: 34, scope: !9184)
!9382 = !DILocation(line: 891, column: 50, scope: !9184)
!9383 = !DILocation(line: 892, column: 6, scope: !9184)
!9384 = !DILocation(line: 893, column: 6, scope: !9184)
!9385 = !DILocation(line: 891, column: 13, scope: !9184)
!9386 = !DILocation(line: 891, column: 11, scope: !9184)
!9387 = !DILocation(line: 894, column: 11, scope: !9388)
!9388 = distinct !DILexicalBlock(scope: !9184, file: !3, line: 894, column: 11)
!9389 = !DILocation(line: 894, column: 11, scope: !9184)
!9390 = !DILocation(line: 895, column: 2, scope: !9388)
!9391 = !DILocation(line: 896, column: 34, scope: !9184)
!9392 = !DILocation(line: 896, column: 50, scope: !9184)
!9393 = !DILocation(line: 897, column: 6, scope: !9184)
!9394 = !DILocation(line: 898, column: 6, scope: !9184)
!9395 = !DILocation(line: 896, column: 13, scope: !9184)
!9396 = !DILocation(line: 896, column: 11, scope: !9184)
!9397 = !DILocation(line: 899, column: 11, scope: !9398)
!9398 = distinct !DILexicalBlock(scope: !9184, file: !3, line: 899, column: 11)
!9399 = !DILocation(line: 899, column: 15, scope: !9398)
!9400 = !DILocation(line: 899, column: 11, scope: !9184)
!9401 = !DILocation(line: 900, column: 8, scope: !9398)
!9402 = !DILocation(line: 900, column: 6, scope: !9398)
!9403 = !DILocation(line: 900, column: 2, scope: !9398)
!9404 = !DILocation(line: 899, column: 18, scope: !9398)
!9405 = !DILabel(scope: !9184, name: "finish_subreg", file: !3, line: 901)
!9406 = !DILocation(line: 901, column: 5, scope: !9184)
!9407 = !DILocation(line: 902, column: 11, scope: !9408)
!9408 = distinct !DILexicalBlock(scope: !9184, file: !3, line: 902, column: 11)
!9409 = !DILocation(line: 903, column: 4, scope: !9408)
!9410 = !DILocation(line: 903, column: 7, scope: !9408)
!9411 = !DILocation(line: 903, column: 22, scope: !9408)
!9412 = !DILocation(line: 904, column: 4, scope: !9408)
!9413 = !DILocation(line: 904, column: 8, scope: !9408)
!9414 = !DILocation(line: 904, column: 36, scope: !9408)
!9415 = !DILocation(line: 905, column: 8, scope: !9408)
!9416 = !DILocation(line: 905, column: 11, scope: !9408)
!9417 = !DILocation(line: 905, column: 39, scope: !9408)
!9418 = !DILocation(line: 906, column: 8, scope: !9408)
!9419 = !DILocation(line: 906, column: 11, scope: !9408)
!9420 = !DILocation(line: 906, column: 39, scope: !9408)
!9421 = !DILocation(line: 907, column: 8, scope: !9408)
!9422 = !DILocation(line: 907, column: 11, scope: !9408)
!9423 = !DILocation(line: 907, column: 39, scope: !9408)
!9424 = !DILocation(line: 908, column: 4, scope: !9408)
!9425 = !DILocation(line: 908, column: 7, scope: !9408)
!9426 = !DILocation(line: 908, column: 39, scope: !9408)
!9427 = !DILocation(line: 909, column: 4, scope: !9408)
!9428 = !DILocation(line: 909, column: 7, scope: !9408)
!9429 = !DILocation(line: 909, column: 52, scope: !9408)
!9430 = !DILocation(line: 910, column: 4, scope: !9408)
!9431 = !DILocation(line: 910, column: 7, scope: !9408)
!9432 = !DILocation(line: 911, column: 9, scope: !9408)
!9433 = !DILocation(line: 911, column: 7, scope: !9408)
!9434 = !DILocation(line: 912, column: 4, scope: !9408)
!9435 = !DILocation(line: 912, column: 25, scope: !9408)
!9436 = !DILocation(line: 912, column: 7, scope: !9408)
!9437 = !DILocation(line: 913, column: 4, scope: !9408)
!9438 = !DILocation(line: 913, column: 23, scope: !9408)
!9439 = !DILocation(line: 913, column: 65, scope: !9408)
!9440 = !DILocation(line: 913, column: 8, scope: !9408)
!9441 = !DILocation(line: 902, column: 11, scope: !9184)
!9442 = !DILocation(line: 914, column: 28, scope: !9408)
!9443 = !DILocation(line: 914, column: 46, scope: !9408)
!9444 = !DILocation(line: 915, column: 7, scope: !9408)
!9445 = !DILocation(line: 914, column: 9, scope: !9408)
!9446 = !DILocation(line: 914, column: 2, scope: !9408)
!9447 = !DILocation(line: 916, column: 14, scope: !9184)
!9448 = !DILocation(line: 916, column: 7, scope: !9184)
!9449 = !DILocation(line: 918, column: 7, scope: !9184)
!9450 = !DILocation(line: 920, column: 3, scope: !9156)
!9451 = !DILocation(line: 921, column: 1, scope: !9156)
!9452 = distinct !DISubprogram(name: "compute_cfa_pointer", scope: !3, file: !3, line: 703, type: !9453, scopeLine: 704, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!9453 = !DISubroutineType(types: !9454)
!9454 = !{!1188, !1067}
!9455 = !DILocalVariable(name: "adjustment", arg: 1, scope: !9452, file: !3, line: 703, type: !1067)
!9456 = !DILocation(line: 703, column: 36, scope: !9452)
!9457 = !DILocalVariable(name: "cfa", scope: !9452, file: !3, line: 705, type: !1188)
!9458 = !DILocation(line: 705, column: 7, scope: !9452)
!9459 = !DILocation(line: 711, column: 17, scope: !9452)
!9460 = !DILocation(line: 711, column: 14, scope: !9452)
!9461 = !DILocation(line: 712, column: 24, scope: !9452)
!9462 = !DILocation(line: 712, column: 41, scope: !9452)
!9463 = !DILocation(line: 712, column: 9, scope: !9452)
!9464 = !DILocation(line: 712, column: 7, scope: !9452)
!9465 = !DILocation(line: 715, column: 10, scope: !9452)
!9466 = !DILocation(line: 715, column: 3, scope: !9452)
!9467 = distinct !DISubprogram(name: "use_narrower_mode_test", scope: !3, file: !3, line: 739, type: !7069, scopeLine: 740, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!9468 = !DILocalVariable(name: "loc", arg: 1, scope: !9467, file: !3, line: 739, type: !4733)
!9469 = !DILocation(line: 739, column: 30, scope: !9467)
!9470 = !DILocalVariable(name: "data", arg: 2, scope: !9467, file: !3, line: 739, type: !1313)
!9471 = !DILocation(line: 739, column: 41, scope: !9467)
!9472 = !DILocalVariable(name: "subreg", scope: !9467, file: !3, line: 741, type: !1188)
!9473 = !DILocation(line: 741, column: 7, scope: !9467)
!9474 = !DILocation(line: 741, column: 22, scope: !9467)
!9475 = !DILocation(line: 741, column: 16, scope: !9467)
!9476 = !DILocation(line: 743, column: 7, scope: !9477)
!9477 = distinct !DILexicalBlock(scope: !9467, file: !3, line: 743, column: 7)
!9478 = !DILocation(line: 743, column: 7, scope: !9467)
!9479 = !DILocation(line: 744, column: 5, scope: !9477)
!9480 = !DILocation(line: 745, column: 11, scope: !9467)
!9481 = !DILocation(line: 745, column: 3, scope: !9467)
!9482 = !DILocation(line: 748, column: 27, scope: !9483)
!9483 = distinct !DILexicalBlock(scope: !9484, file: !3, line: 748, column: 11)
!9484 = distinct !DILexicalBlock(scope: !9467, file: !3, line: 746, column: 5)
!9485 = !DILocation(line: 748, column: 26, scope: !9483)
!9486 = !DILocation(line: 748, column: 32, scope: !9483)
!9487 = !DILocation(line: 748, column: 11, scope: !9483)
!9488 = !DILocation(line: 748, column: 11, scope: !9484)
!9489 = !DILocation(line: 749, column: 2, scope: !9483)
!9490 = !DILocation(line: 750, column: 7, scope: !9484)
!9491 = !DILocation(line: 754, column: 7, scope: !9484)
!9492 = !DILocation(line: 756, column: 26, scope: !9493)
!9493 = distinct !DILexicalBlock(scope: !9484, file: !3, line: 756, column: 11)
!9494 = !DILocation(line: 756, column: 66, scope: !9493)
!9495 = !DILocation(line: 756, column: 11, scope: !9493)
!9496 = !DILocation(line: 756, column: 11, scope: !9484)
!9497 = !DILocation(line: 757, column: 2, scope: !9493)
!9498 = !DILocation(line: 759, column: 2, scope: !9493)
!9499 = !DILocation(line: 761, column: 7, scope: !9484)
!9500 = !DILocation(line: 763, column: 1, scope: !9467)
!9501 = distinct !DISubprogram(name: "use_narrower_mode", scope: !3, file: !3, line: 768, type: !9502, scopeLine: 769, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!9502 = !DISubroutineType(types: !9503)
!9503 = !{!1188, !1188, !384, !384}
!9504 = !DILocalVariable(name: "x", arg: 1, scope: !9501, file: !3, line: 768, type: !1188)
!9505 = !DILocation(line: 768, column: 24, scope: !9501)
!9506 = !DILocalVariable(name: "mode", arg: 2, scope: !9501, file: !3, line: 768, type: !384)
!9507 = !DILocation(line: 768, column: 45, scope: !9501)
!9508 = !DILocalVariable(name: "wmode", arg: 3, scope: !9501, file: !3, line: 768, type: !384)
!9509 = !DILocation(line: 768, column: 69, scope: !9501)
!9510 = !DILocalVariable(name: "op0", scope: !9501, file: !3, line: 770, type: !1188)
!9511 = !DILocation(line: 770, column: 7, scope: !9501)
!9512 = !DILocalVariable(name: "op1", scope: !9501, file: !3, line: 770, type: !1188)
!9513 = !DILocation(line: 770, column: 12, scope: !9501)
!9514 = !DILocation(line: 771, column: 7, scope: !9515)
!9515 = distinct !DILexicalBlock(scope: !9501, file: !3, line: 771, column: 7)
!9516 = !DILocation(line: 771, column: 7, scope: !9501)
!9517 = !DILocation(line: 772, column: 28, scope: !9515)
!9518 = !DILocation(line: 772, column: 34, scope: !9515)
!9519 = !DILocation(line: 772, column: 37, scope: !9515)
!9520 = !DILocation(line: 772, column: 12, scope: !9515)
!9521 = !DILocation(line: 772, column: 5, scope: !9515)
!9522 = !DILocation(line: 773, column: 11, scope: !9501)
!9523 = !DILocation(line: 773, column: 3, scope: !9501)
!9524 = !DILocation(line: 776, column: 30, scope: !9525)
!9525 = distinct !DILexicalBlock(scope: !9501, file: !3, line: 774, column: 5)
!9526 = !DILocation(line: 776, column: 36, scope: !9525)
!9527 = !DILocation(line: 776, column: 39, scope: !9525)
!9528 = !DILocation(line: 776, column: 14, scope: !9525)
!9529 = !DILocation(line: 776, column: 7, scope: !9525)
!9530 = !DILocation(line: 780, column: 32, scope: !9525)
!9531 = !DILocation(line: 780, column: 45, scope: !9525)
!9532 = !DILocation(line: 780, column: 51, scope: !9525)
!9533 = !DILocation(line: 780, column: 13, scope: !9525)
!9534 = !DILocation(line: 780, column: 11, scope: !9525)
!9535 = !DILocation(line: 781, column: 32, scope: !9525)
!9536 = !DILocation(line: 781, column: 45, scope: !9525)
!9537 = !DILocation(line: 781, column: 51, scope: !9525)
!9538 = !DILocation(line: 781, column: 13, scope: !9525)
!9539 = !DILocation(line: 781, column: 11, scope: !9525)
!9540 = !DILocation(line: 782, column: 35, scope: !9525)
!9541 = !DILocation(line: 782, column: 49, scope: !9525)
!9542 = !DILocation(line: 782, column: 55, scope: !9525)
!9543 = !DILocation(line: 782, column: 60, scope: !9525)
!9544 = !DILocation(line: 782, column: 14, scope: !9525)
!9545 = !DILocation(line: 782, column: 7, scope: !9525)
!9546 = !DILocation(line: 784, column: 32, scope: !9525)
!9547 = !DILocation(line: 784, column: 45, scope: !9525)
!9548 = !DILocation(line: 784, column: 51, scope: !9525)
!9549 = !DILocation(line: 784, column: 13, scope: !9525)
!9550 = !DILocation(line: 784, column: 11, scope: !9525)
!9551 = !DILocation(line: 785, column: 43, scope: !9525)
!9552 = !DILocation(line: 785, column: 49, scope: !9525)
!9553 = !DILocation(line: 785, column: 54, scope: !9525)
!9554 = !DILocation(line: 785, column: 14, scope: !9525)
!9555 = !DILocation(line: 785, column: 7, scope: !9525)
!9556 = !DILocation(line: 787, column: 7, scope: !9525)
!9557 = !DILocation(line: 788, column: 5, scope: !9525)
!9558 = !DILocation(line: 790, column: 5, scope: !9501)
!9559 = !DILocation(line: 792, column: 1, scope: !9501)
!9560 = distinct !DISubprogram(name: "vt_get_decl_and_offset", scope: !3, file: !3, line: 7920, type: !9561, scopeLine: 7921, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!9561 = !DISubroutineType(types: !9562)
!9562 = !{!1130, !1188, !1396, !4515}
!9563 = !DILocalVariable(name: "rtl", arg: 1, scope: !9560, file: !3, line: 7920, type: !1188)
!9564 = !DILocation(line: 7920, column: 29, scope: !9560)
!9565 = !DILocalVariable(name: "declp", arg: 2, scope: !9560, file: !3, line: 7920, type: !1396)
!9566 = !DILocation(line: 7920, column: 40, scope: !9560)
!9567 = !DILocalVariable(name: "offsetp", arg: 3, scope: !9560, file: !3, line: 7920, type: !4515)
!9568 = !DILocation(line: 7920, column: 62, scope: !9560)
!9569 = !DILocation(line: 7922, column: 7, scope: !9570)
!9570 = distinct !DILexicalBlock(scope: !9560, file: !3, line: 7922, column: 7)
!9571 = !DILocation(line: 7922, column: 7, scope: !9560)
!9572 = !DILocation(line: 7924, column: 11, scope: !9573)
!9573 = distinct !DILexicalBlock(scope: !9574, file: !3, line: 7924, column: 11)
!9574 = distinct !DILexicalBlock(scope: !9570, file: !3, line: 7923, column: 5)
!9575 = !DILocation(line: 7924, column: 11, scope: !9574)
!9576 = !DILocation(line: 7926, column: 13, scope: !9577)
!9577 = distinct !DILexicalBlock(scope: !9573, file: !3, line: 7925, column: 2)
!9578 = !DILocation(line: 7926, column: 5, scope: !9577)
!9579 = !DILocation(line: 7926, column: 11, scope: !9577)
!9580 = !DILocation(line: 7927, column: 15, scope: !9577)
!9581 = !DILocation(line: 7927, column: 5, scope: !9577)
!9582 = !DILocation(line: 7927, column: 13, scope: !9577)
!9583 = !DILocation(line: 7928, column: 4, scope: !9577)
!9584 = !DILocation(line: 7930, column: 5, scope: !9574)
!9585 = !DILocation(line: 7931, column: 12, scope: !9586)
!9586 = distinct !DILexicalBlock(scope: !9570, file: !3, line: 7931, column: 12)
!9587 = !DILocation(line: 7931, column: 12, scope: !9570)
!9588 = !DILocation(line: 7933, column: 11, scope: !9589)
!9589 = distinct !DILexicalBlock(scope: !9590, file: !3, line: 7933, column: 11)
!9590 = distinct !DILexicalBlock(scope: !9586, file: !3, line: 7932, column: 5)
!9591 = !DILocation(line: 7933, column: 11, scope: !9590)
!9592 = !DILocation(line: 7935, column: 13, scope: !9593)
!9593 = distinct !DILexicalBlock(scope: !9589, file: !3, line: 7934, column: 2)
!9594 = !DILocation(line: 7935, column: 5, scope: !9593)
!9595 = !DILocation(line: 7935, column: 11, scope: !9593)
!9596 = !DILocation(line: 7936, column: 15, scope: !9593)
!9597 = !DILocation(line: 7936, column: 5, scope: !9593)
!9598 = !DILocation(line: 7936, column: 13, scope: !9593)
!9599 = !DILocation(line: 7937, column: 4, scope: !9593)
!9600 = !DILocation(line: 7939, column: 5, scope: !9590)
!9601 = !DILocation(line: 7940, column: 3, scope: !9560)
!9602 = !DILocation(line: 7941, column: 1, scope: !9560)
!9603 = distinct !DISubprogram(name: "VEC_micro_operation_heap_free", scope: !3, file: !3, line: 195, type: !9604, scopeLine: 195, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!9604 = !DISubroutineType(types: !9605)
!9605 = !{null, !4667}
!9606 = !DILocalVariable(name: "vec_", arg: 1, scope: !9603, file: !3, line: 195, type: !4667)
!9607 = !DILocation(line: 195, column: 1, scope: !9603)
!9608 = !DILocation(line: 195, column: 1, scope: !9609)
!9609 = distinct !DILexicalBlock(scope: !9603, file: !3, line: 195, column: 1)
!9610 = distinct !DISubprogram(name: "dataflow_set_destroy", scope: !3, file: !3, line: 4436, type: !4011, scopeLine: 4437, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!9611 = !DILocalVariable(name: "set", arg: 1, scope: !9610, file: !3, line: 4436, type: !2418)
!9612 = !DILocation(line: 4436, column: 37, scope: !9610)
!9613 = !DILocalVariable(name: "i", scope: !9610, file: !3, line: 4438, type: !1010)
!9614 = !DILocation(line: 4438, column: 7, scope: !9610)
!9615 = !DILocation(line: 4440, column: 10, scope: !9616)
!9616 = distinct !DILexicalBlock(scope: !9610, file: !3, line: 4440, column: 3)
!9617 = !DILocation(line: 4440, column: 8, scope: !9616)
!9618 = !DILocation(line: 4440, column: 15, scope: !9619)
!9619 = distinct !DILexicalBlock(scope: !9616, file: !3, line: 4440, column: 3)
!9620 = !DILocation(line: 4440, column: 17, scope: !9619)
!9621 = !DILocation(line: 4440, column: 3, scope: !9616)
!9622 = !DILocation(line: 4441, column: 24, scope: !9619)
!9623 = !DILocation(line: 4441, column: 29, scope: !9619)
!9624 = !DILocation(line: 4441, column: 34, scope: !9619)
!9625 = !DILocation(line: 4441, column: 5, scope: !9619)
!9626 = !DILocation(line: 4440, column: 43, scope: !9619)
!9627 = !DILocation(line: 4440, column: 3, scope: !9619)
!9628 = distinct !{!9628, !9621, !9629}
!9629 = !DILocation(line: 4441, column: 36, scope: !9616)
!9630 = !DILocation(line: 4443, column: 24, scope: !9610)
!9631 = !DILocation(line: 4443, column: 29, scope: !9610)
!9632 = !DILocation(line: 4443, column: 3, scope: !9610)
!9633 = !DILocation(line: 4444, column: 3, scope: !9610)
!9634 = !DILocation(line: 4444, column: 8, scope: !9610)
!9635 = !DILocation(line: 4444, column: 13, scope: !9610)
!9636 = !DILocation(line: 4445, column: 1, scope: !9610)
!9637 = distinct !DISubprogram(name: "VEC_rtx_heap_free", scope: !561, file: !561, line: 201, type: !9638, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!9638 = !DISubroutineType(types: !9639)
!9639 = !{null, !5378}
!9640 = !DILocalVariable(name: "vec_", arg: 1, scope: !9637, file: !561, line: 201, type: !5378)
!9641 = !DILocation(line: 201, column: 1, scope: !9637)
!9642 = !DILocation(line: 201, column: 1, scope: !9643)
!9643 = distinct !DILexicalBlock(scope: !9637, file: !561, line: 201, column: 1)
!9644 = distinct !DISubprogram(name: "attrs_list_clear", scope: !3, file: !3, line: 1229, type: !5171, scopeLine: 1230, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!9645 = !DILocalVariable(name: "listp", arg: 1, scope: !9644, file: !3, line: 1229, type: !5173)
!9646 = !DILocation(line: 1229, column: 26, scope: !9644)
!9647 = !DILocalVariable(name: "list", scope: !9644, file: !3, line: 1231, type: !2403)
!9648 = !DILocation(line: 1231, column: 9, scope: !9644)
!9649 = !DILocalVariable(name: "next", scope: !9644, file: !3, line: 1231, type: !2403)
!9650 = !DILocation(line: 1231, column: 15, scope: !9644)
!9651 = !DILocation(line: 1233, column: 16, scope: !9652)
!9652 = distinct !DILexicalBlock(scope: !9644, file: !3, line: 1233, column: 3)
!9653 = !DILocation(line: 1233, column: 15, scope: !9652)
!9654 = !DILocation(line: 1233, column: 13, scope: !9652)
!9655 = !DILocation(line: 1233, column: 8, scope: !9652)
!9656 = !DILocation(line: 1233, column: 23, scope: !9657)
!9657 = distinct !DILexicalBlock(scope: !9652, file: !3, line: 1233, column: 3)
!9658 = !DILocation(line: 1233, column: 3, scope: !9652)
!9659 = !DILocation(line: 1235, column: 14, scope: !9660)
!9660 = distinct !DILexicalBlock(scope: !9657, file: !3, line: 1234, column: 5)
!9661 = !DILocation(line: 1235, column: 20, scope: !9660)
!9662 = !DILocation(line: 1235, column: 12, scope: !9660)
!9663 = !DILocation(line: 1236, column: 18, scope: !9660)
!9664 = !DILocation(line: 1236, column: 30, scope: !9660)
!9665 = !DILocation(line: 1236, column: 7, scope: !9660)
!9666 = !DILocation(line: 1237, column: 5, scope: !9660)
!9667 = !DILocation(line: 1233, column: 36, scope: !9657)
!9668 = !DILocation(line: 1233, column: 34, scope: !9657)
!9669 = !DILocation(line: 1233, column: 3, scope: !9657)
!9670 = distinct !{!9670, !9658, !9671}
!9671 = !DILocation(line: 1237, column: 5, scope: !9652)
!9672 = !DILocation(line: 1238, column: 4, scope: !9644)
!9673 = !DILocation(line: 1238, column: 10, scope: !9644)
!9674 = !DILocation(line: 1239, column: 1, scope: !9644)
!9675 = distinct !DISubprogram(name: "shared_hash_destroy", scope: !3, file: !3, line: 1376, type: !9676, scopeLine: 1377, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!9676 = !DISubroutineType(types: !9677)
!9677 = !{null, !2363}
!9678 = !DILocalVariable(name: "vars", arg: 1, scope: !9675, file: !3, line: 1376, type: !2363)
!9679 = !DILocation(line: 1376, column: 34, scope: !9675)
!9680 = !DILocation(line: 1378, column: 3, scope: !9675)
!9681 = !DILocation(line: 1379, column: 9, scope: !9682)
!9682 = distinct !DILexicalBlock(scope: !9675, file: !3, line: 1379, column: 7)
!9683 = !DILocation(line: 1379, column: 15, scope: !9682)
!9684 = !DILocation(line: 1379, column: 7, scope: !9682)
!9685 = !DILocation(line: 1379, column: 24, scope: !9682)
!9686 = !DILocation(line: 1379, column: 7, scope: !9675)
!9687 = !DILocation(line: 1381, column: 20, scope: !9688)
!9688 = distinct !DILexicalBlock(scope: !9682, file: !3, line: 1380, column: 5)
!9689 = !DILocation(line: 1381, column: 26, scope: !9688)
!9690 = !DILocation(line: 1381, column: 7, scope: !9688)
!9691 = !DILocation(line: 1382, column: 18, scope: !9688)
!9692 = !DILocation(line: 1382, column: 36, scope: !9688)
!9693 = !DILocation(line: 1382, column: 7, scope: !9688)
!9694 = !DILocation(line: 1383, column: 5, scope: !9688)
!9695 = !DILocation(line: 1384, column: 1, scope: !9675)
!9696 = distinct !DISubprogram(name: "RESET_BIT", scope: !3347, file: !3347, line: 82, type: !9697, scopeLine: 83, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!9697 = !DISubroutineType(types: !9698)
!9698 = !{null, !3346, !7}
!9699 = !DILocalVariable(name: "map", arg: 1, scope: !9696, file: !3347, line: 82, type: !3346)
!9700 = !DILocation(line: 82, column: 20, scope: !9696)
!9701 = !DILocalVariable(name: "bitno", arg: 2, scope: !9696, file: !3347, line: 82, type: !7)
!9702 = !DILocation(line: 82, column: 39, scope: !9696)
!9703 = !DILocation(line: 84, column: 7, scope: !9704)
!9704 = distinct !DILexicalBlock(scope: !9696, file: !3347, line: 84, column: 7)
!9705 = !DILocation(line: 84, column: 12, scope: !9704)
!9706 = !DILocation(line: 84, column: 7, scope: !9696)
!9707 = !DILocalVariable(name: "oldbit", scope: !9708, file: !3347, line: 86, type: !1130)
!9708 = distinct !DILexicalBlock(scope: !9704, file: !3347, line: 85, column: 5)
!9709 = !DILocation(line: 86, column: 12, scope: !9708)
!9710 = !DILocation(line: 87, column: 16, scope: !9708)
!9711 = !DILocation(line: 87, column: 14, scope: !9708)
!9712 = !DILocation(line: 88, column: 11, scope: !9713)
!9713 = distinct !DILexicalBlock(scope: !9708, file: !3347, line: 88, column: 11)
!9714 = !DILocation(line: 88, column: 11, scope: !9708)
!9715 = !DILocation(line: 89, column: 2, scope: !9713)
!9716 = !DILocation(line: 89, column: 7, scope: !9713)
!9717 = !DILocation(line: 89, column: 16, scope: !9713)
!9718 = !DILocation(line: 89, column: 22, scope: !9713)
!9719 = !DILocation(line: 89, column: 41, scope: !9713)
!9720 = !DILocation(line: 90, column: 5, scope: !9708)
!9721 = !DILocation(line: 92, column: 35, scope: !9696)
!9722 = !DILocation(line: 92, column: 42, scope: !9696)
!9723 = !DILocation(line: 92, column: 31, scope: !9696)
!9724 = !DILocation(line: 92, column: 8, scope: !9696)
!9725 = !DILocation(line: 91, column: 3, scope: !9696)
!9726 = !DILocation(line: 91, column: 8, scope: !9696)
!9727 = !DILocation(line: 91, column: 13, scope: !9696)
!9728 = !DILocation(line: 91, column: 19, scope: !9696)
!9729 = !DILocation(line: 92, column: 5, scope: !9696)
!9730 = !DILocation(line: 93, column: 1, scope: !9696)
!9731 = distinct !DISubprogram(name: "SET_BIT", scope: !3347, file: !3347, line: 63, type: !9697, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!9732 = !DILocalVariable(name: "map", arg: 1, scope: !9731, file: !3347, line: 63, type: !3346)
!9733 = !DILocation(line: 63, column: 18, scope: !9731)
!9734 = !DILocalVariable(name: "bitno", arg: 2, scope: !9731, file: !3347, line: 63, type: !7)
!9735 = !DILocation(line: 63, column: 36, scope: !9731)
!9736 = !DILocation(line: 65, column: 7, scope: !9737)
!9737 = distinct !DILexicalBlock(scope: !9731, file: !3347, line: 65, column: 7)
!9738 = !DILocation(line: 65, column: 12, scope: !9737)
!9739 = !DILocation(line: 65, column: 7, scope: !9731)
!9740 = !DILocalVariable(name: "oldbit", scope: !9741, file: !3347, line: 67, type: !1130)
!9741 = distinct !DILexicalBlock(scope: !9737, file: !3347, line: 66, column: 5)
!9742 = !DILocation(line: 67, column: 12, scope: !9741)
!9743 = !DILocation(line: 68, column: 16, scope: !9741)
!9744 = !DILocation(line: 68, column: 14, scope: !9741)
!9745 = !DILocation(line: 69, column: 12, scope: !9746)
!9746 = distinct !DILexicalBlock(scope: !9741, file: !3347, line: 69, column: 11)
!9747 = !DILocation(line: 69, column: 11, scope: !9741)
!9748 = !DILocation(line: 70, column: 2, scope: !9746)
!9749 = !DILocation(line: 70, column: 7, scope: !9746)
!9750 = !DILocation(line: 70, column: 16, scope: !9746)
!9751 = !DILocation(line: 70, column: 22, scope: !9746)
!9752 = !DILocation(line: 70, column: 41, scope: !9746)
!9753 = !DILocation(line: 71, column: 5, scope: !9741)
!9754 = !DILocation(line: 73, column: 33, scope: !9731)
!9755 = !DILocation(line: 73, column: 40, scope: !9731)
!9756 = !DILocation(line: 73, column: 29, scope: !9731)
!9757 = !DILocation(line: 72, column: 3, scope: !9731)
!9758 = !DILocation(line: 72, column: 8, scope: !9731)
!9759 = !DILocation(line: 72, column: 13, scope: !9731)
!9760 = !DILocation(line: 72, column: 19, scope: !9731)
!9761 = !DILocation(line: 73, column: 5, scope: !9731)
!9762 = !DILocation(line: 74, column: 1, scope: !9731)
!9763 = distinct !DISubprogram(name: "dataflow_set_clear", scope: !3, file: !3, line: 2001, type: !4011, scopeLine: 2002, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!9764 = !DILocalVariable(name: "set", arg: 1, scope: !9763, file: !3, line: 2001, type: !2418)
!9765 = !DILocation(line: 2001, column: 35, scope: !9763)
!9766 = !DILocalVariable(name: "i", scope: !9763, file: !3, line: 2003, type: !1010)
!9767 = !DILocation(line: 2003, column: 7, scope: !9763)
!9768 = !DILocation(line: 2005, column: 10, scope: !9769)
!9769 = distinct !DILexicalBlock(scope: !9763, file: !3, line: 2005, column: 3)
!9770 = !DILocation(line: 2005, column: 8, scope: !9769)
!9771 = !DILocation(line: 2005, column: 15, scope: !9772)
!9772 = distinct !DILexicalBlock(scope: !9769, file: !3, line: 2005, column: 3)
!9773 = !DILocation(line: 2005, column: 17, scope: !9772)
!9774 = !DILocation(line: 2005, column: 3, scope: !9769)
!9775 = !DILocation(line: 2006, column: 24, scope: !9772)
!9776 = !DILocation(line: 2006, column: 29, scope: !9772)
!9777 = !DILocation(line: 2006, column: 34, scope: !9772)
!9778 = !DILocation(line: 2006, column: 5, scope: !9772)
!9779 = !DILocation(line: 2005, column: 43, scope: !9772)
!9780 = !DILocation(line: 2005, column: 3, scope: !9772)
!9781 = distinct !{!9781, !9774, !9782}
!9782 = !DILocation(line: 2006, column: 36, scope: !9769)
!9783 = !DILocation(line: 2008, column: 24, scope: !9763)
!9784 = !DILocation(line: 2008, column: 29, scope: !9763)
!9785 = !DILocation(line: 2008, column: 3, scope: !9763)
!9786 = !DILocation(line: 2009, column: 33, scope: !9763)
!9787 = !DILocation(line: 2009, column: 15, scope: !9763)
!9788 = !DILocation(line: 2009, column: 3, scope: !9763)
!9789 = !DILocation(line: 2009, column: 8, scope: !9763)
!9790 = !DILocation(line: 2009, column: 13, scope: !9763)
!9791 = !DILocation(line: 2010, column: 1, scope: !9763)
!9792 = distinct !DISubprogram(name: "ei_cond", scope: !513, file: !513, line: 771, type: !9793, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!9793 = !DISubroutineType(types: !9794)
!9794 = !{!1130, !2464, !9795}
!9795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1340, size: 64)
!9796 = !DILocalVariable(name: "ei", arg: 1, scope: !9792, file: !513, line: 771, type: !2464)
!9797 = !DILocation(line: 771, column: 24, scope: !9792)
!9798 = !DILocalVariable(name: "p", arg: 2, scope: !9792, file: !513, line: 771, type: !9795)
!9799 = !DILocation(line: 771, column: 34, scope: !9792)
!9800 = !DILocation(line: 773, column: 8, scope: !9801)
!9801 = distinct !DILexicalBlock(scope: !9792, file: !513, line: 773, column: 7)
!9802 = !DILocation(line: 773, column: 7, scope: !9792)
!9803 = !DILocation(line: 775, column: 12, scope: !9804)
!9804 = distinct !DILexicalBlock(scope: !9801, file: !513, line: 774, column: 5)
!9805 = !DILocation(line: 775, column: 8, scope: !9804)
!9806 = !DILocation(line: 775, column: 10, scope: !9804)
!9807 = !DILocation(line: 776, column: 7, scope: !9804)
!9808 = !DILocation(line: 780, column: 8, scope: !9809)
!9809 = distinct !DILexicalBlock(scope: !9801, file: !513, line: 779, column: 5)
!9810 = !DILocation(line: 780, column: 10, scope: !9809)
!9811 = !DILocation(line: 781, column: 7, scope: !9809)
!9812 = !DILocation(line: 783, column: 1, scope: !9792)
!9813 = distinct !DISubprogram(name: "dataflow_set_copy", scope: !3, file: !3, line: 2015, type: !9814, scopeLine: 2016, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!9814 = !DISubroutineType(types: !9815)
!9815 = !{null, !2418, !2418}
!9816 = !DILocalVariable(name: "dst", arg: 1, scope: !9813, file: !3, line: 2015, type: !2418)
!9817 = !DILocation(line: 2015, column: 34, scope: !9813)
!9818 = !DILocalVariable(name: "src", arg: 2, scope: !9813, file: !3, line: 2015, type: !2418)
!9819 = !DILocation(line: 2015, column: 53, scope: !9813)
!9820 = !DILocalVariable(name: "i", scope: !9813, file: !3, line: 2017, type: !1010)
!9821 = !DILocation(line: 2017, column: 7, scope: !9813)
!9822 = !DILocation(line: 2019, column: 10, scope: !9823)
!9823 = distinct !DILexicalBlock(scope: !9813, file: !3, line: 2019, column: 3)
!9824 = !DILocation(line: 2019, column: 8, scope: !9823)
!9825 = !DILocation(line: 2019, column: 15, scope: !9826)
!9826 = distinct !DILexicalBlock(scope: !9823, file: !3, line: 2019, column: 3)
!9827 = !DILocation(line: 2019, column: 17, scope: !9826)
!9828 = !DILocation(line: 2019, column: 3, scope: !9823)
!9829 = !DILocation(line: 2020, column: 23, scope: !9826)
!9830 = !DILocation(line: 2020, column: 28, scope: !9826)
!9831 = !DILocation(line: 2020, column: 33, scope: !9826)
!9832 = !DILocation(line: 2020, column: 37, scope: !9826)
!9833 = !DILocation(line: 2020, column: 42, scope: !9826)
!9834 = !DILocation(line: 2020, column: 47, scope: !9826)
!9835 = !DILocation(line: 2020, column: 5, scope: !9826)
!9836 = !DILocation(line: 2019, column: 43, scope: !9826)
!9837 = !DILocation(line: 2019, column: 3, scope: !9826)
!9838 = distinct !{!9838, !9828, !9839}
!9839 = !DILocation(line: 2020, column: 49, scope: !9823)
!9840 = !DILocation(line: 2022, column: 24, scope: !9813)
!9841 = !DILocation(line: 2022, column: 29, scope: !9813)
!9842 = !DILocation(line: 2022, column: 3, scope: !9813)
!9843 = !DILocation(line: 2023, column: 33, scope: !9813)
!9844 = !DILocation(line: 2023, column: 38, scope: !9813)
!9845 = !DILocation(line: 2023, column: 15, scope: !9813)
!9846 = !DILocation(line: 2023, column: 3, scope: !9813)
!9847 = !DILocation(line: 2023, column: 8, scope: !9813)
!9848 = !DILocation(line: 2023, column: 13, scope: !9813)
!9849 = !DILocation(line: 2024, column: 23, scope: !9813)
!9850 = !DILocation(line: 2024, column: 28, scope: !9813)
!9851 = !DILocation(line: 2024, column: 3, scope: !9813)
!9852 = !DILocation(line: 2024, column: 8, scope: !9813)
!9853 = !DILocation(line: 2024, column: 21, scope: !9813)
!9854 = !DILocation(line: 2025, column: 1, scope: !9813)
!9855 = distinct !DISubprogram(name: "dataflow_set_merge", scope: !3, file: !3, line: 3621, type: !9814, scopeLine: 3622, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!9856 = !DILocalVariable(name: "dst", arg: 1, scope: !9855, file: !3, line: 3621, type: !2418)
!9857 = !DILocation(line: 3621, column: 35, scope: !9855)
!9858 = !DILocalVariable(name: "src2", arg: 2, scope: !9855, file: !3, line: 3621, type: !2418)
!9859 = !DILocation(line: 3621, column: 54, scope: !9855)
!9860 = !DILocalVariable(name: "cur", scope: !9855, file: !3, line: 3623, type: !2397)
!9861 = !DILocation(line: 3623, column: 16, scope: !9855)
!9862 = !DILocation(line: 3623, column: 23, scope: !9855)
!9863 = !DILocation(line: 3623, column: 22, scope: !9855)
!9864 = !DILocalVariable(name: "src1", scope: !9855, file: !3, line: 3624, type: !2418)
!9865 = !DILocation(line: 3624, column: 17, scope: !9855)
!9866 = !DILocalVariable(name: "dsm", scope: !9855, file: !3, line: 3625, type: !2498)
!9867 = !DILocation(line: 3625, column: 22, scope: !9855)
!9868 = !DILocalVariable(name: "i", scope: !9855, file: !3, line: 3626, type: !1010)
!9869 = !DILocation(line: 3626, column: 7, scope: !9855)
!9870 = !DILocalVariable(name: "src1_elems", scope: !9855, file: !3, line: 3627, type: !1507)
!9871 = !DILocation(line: 3627, column: 10, scope: !9855)
!9872 = !DILocalVariable(name: "src2_elems", scope: !9855, file: !3, line: 3627, type: !1507)
!9873 = !DILocation(line: 3627, column: 22, scope: !9855)
!9874 = !DILocation(line: 3629, column: 49, scope: !9855)
!9875 = !DILocation(line: 3629, column: 55, scope: !9855)
!9876 = !DILocation(line: 3629, column: 31, scope: !9855)
!9877 = !DILocation(line: 3629, column: 16, scope: !9855)
!9878 = !DILocation(line: 3629, column: 14, scope: !9855)
!9879 = !DILocation(line: 3630, column: 49, scope: !9855)
!9880 = !DILocation(line: 3630, column: 55, scope: !9855)
!9881 = !DILocation(line: 3630, column: 31, scope: !9855)
!9882 = !DILocation(line: 3630, column: 16, scope: !9855)
!9883 = !DILocation(line: 3630, column: 14, scope: !9855)
!9884 = !DILocation(line: 3631, column: 22, scope: !9855)
!9885 = !DILocation(line: 3631, column: 3, scope: !9855)
!9886 = !DILocation(line: 3632, column: 27, scope: !9855)
!9887 = !DILocation(line: 3632, column: 3, scope: !9855)
!9888 = !DILocation(line: 3632, column: 8, scope: !9855)
!9889 = !DILocation(line: 3632, column: 21, scope: !9855)
!9890 = !DILocation(line: 3633, column: 24, scope: !9855)
!9891 = !DILocation(line: 3633, column: 29, scope: !9855)
!9892 = !DILocation(line: 3633, column: 3, scope: !9855)
!9893 = !DILocation(line: 3634, column: 41, scope: !9855)
!9894 = !DILocation(line: 3634, column: 29, scope: !9855)
!9895 = !DILocation(line: 3634, column: 15, scope: !9855)
!9896 = !DILocation(line: 3634, column: 3, scope: !9855)
!9897 = !DILocation(line: 3634, column: 8, scope: !9855)
!9898 = !DILocation(line: 3634, column: 13, scope: !9855)
!9899 = !DILocation(line: 3635, column: 3, scope: !9855)
!9900 = !DILocation(line: 3635, column: 8, scope: !9855)
!9901 = !DILocation(line: 3635, column: 14, scope: !9855)
!9902 = !DILocation(line: 3635, column: 23, scope: !9855)
!9903 = !DILocation(line: 3637, column: 20, scope: !9855)
!9904 = !DILocation(line: 3637, column: 7, scope: !9855)
!9905 = !DILocation(line: 3636, column: 3, scope: !9855)
!9906 = !DILocation(line: 3636, column: 8, scope: !9855)
!9907 = !DILocation(line: 3636, column: 14, scope: !9855)
!9908 = !DILocation(line: 3637, column: 5, scope: !9855)
!9909 = !DILocation(line: 3640, column: 10, scope: !9910)
!9910 = distinct !DILexicalBlock(scope: !9855, file: !3, line: 3640, column: 3)
!9911 = !DILocation(line: 3640, column: 8, scope: !9910)
!9912 = !DILocation(line: 3640, column: 15, scope: !9913)
!9913 = distinct !DILexicalBlock(scope: !9910, file: !3, line: 3640, column: 3)
!9914 = !DILocation(line: 3640, column: 17, scope: !9913)
!9915 = !DILocation(line: 3640, column: 3, scope: !9910)
!9916 = !DILocation(line: 3641, column: 29, scope: !9913)
!9917 = !DILocation(line: 3641, column: 34, scope: !9913)
!9918 = !DILocation(line: 3641, column: 39, scope: !9913)
!9919 = !DILocation(line: 3641, column: 43, scope: !9913)
!9920 = !DILocation(line: 3641, column: 49, scope: !9913)
!9921 = !DILocation(line: 3641, column: 54, scope: !9913)
!9922 = !DILocation(line: 3641, column: 58, scope: !9913)
!9923 = !DILocation(line: 3641, column: 64, scope: !9913)
!9924 = !DILocation(line: 3641, column: 69, scope: !9913)
!9925 = !DILocation(line: 3641, column: 5, scope: !9913)
!9926 = !DILocation(line: 3640, column: 43, scope: !9913)
!9927 = !DILocation(line: 3640, column: 3, scope: !9913)
!9928 = distinct !{!9928, !9915, !9929}
!9929 = !DILocation(line: 3641, column: 71, scope: !9910)
!9930 = !DILocation(line: 3643, column: 13, scope: !9855)
!9931 = !DILocation(line: 3643, column: 7, scope: !9855)
!9932 = !DILocation(line: 3643, column: 11, scope: !9855)
!9933 = !DILocation(line: 3644, column: 13, scope: !9855)
!9934 = !DILocation(line: 3644, column: 7, scope: !9855)
!9935 = !DILocation(line: 3644, column: 11, scope: !9855)
!9936 = !DILocation(line: 3645, column: 13, scope: !9855)
!9937 = !DILocation(line: 3645, column: 7, scope: !9855)
!9938 = !DILocation(line: 3645, column: 11, scope: !9855)
!9939 = !DILocation(line: 3646, column: 7, scope: !9855)
!9940 = !DILocation(line: 3646, column: 23, scope: !9855)
!9941 = !DILocation(line: 3648, column: 40, scope: !9855)
!9942 = !DILocation(line: 3648, column: 45, scope: !9855)
!9943 = !DILocation(line: 3648, column: 18, scope: !9855)
!9944 = !DILocation(line: 3649, column: 4, scope: !9855)
!9945 = !DILocation(line: 3648, column: 3, scope: !9855)
!9946 = !DILocation(line: 3650, column: 40, scope: !9855)
!9947 = !DILocation(line: 3650, column: 45, scope: !9855)
!9948 = !DILocation(line: 3650, column: 18, scope: !9855)
!9949 = !DILocation(line: 3651, column: 4, scope: !9855)
!9950 = !DILocation(line: 3650, column: 3, scope: !9855)
!9951 = !DILocation(line: 3653, column: 11, scope: !9952)
!9952 = distinct !DILexicalBlock(scope: !9855, file: !3, line: 3653, column: 7)
!9953 = !DILocation(line: 3653, column: 7, scope: !9952)
!9954 = !DILocation(line: 3653, column: 7, scope: !9855)
!9955 = !DILocation(line: 3654, column: 23, scope: !9952)
!9956 = !DILocation(line: 3654, column: 5, scope: !9952)
!9957 = !DILocation(line: 3656, column: 25, scope: !9855)
!9958 = !DILocation(line: 3656, column: 3, scope: !9855)
!9959 = !DILocation(line: 3657, column: 1, scope: !9855)
!9960 = distinct !DISubprogram(name: "dataflow_post_merge_adjust", scope: !3, file: !3, line: 3977, type: !9961, scopeLine: 3978, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!9961 = !DISubroutineType(types: !9962)
!9962 = !{null, !2418, !2517}
!9963 = !DILocalVariable(name: "set", arg: 1, scope: !9960, file: !3, line: 3977, type: !2418)
!9964 = !DILocation(line: 3977, column: 43, scope: !9960)
!9965 = !DILocalVariable(name: "permp", arg: 2, scope: !9960, file: !3, line: 3977, type: !2517)
!9966 = !DILocation(line: 3977, column: 63, scope: !9960)
!9967 = !DILocalVariable(name: "dfpm", scope: !9960, file: !3, line: 3979, type: !2513)
!9968 = !DILocation(line: 3979, column: 27, scope: !9960)
!9969 = !DILocation(line: 3981, column: 14, scope: !9960)
!9970 = !DILocation(line: 3981, column: 8, scope: !9960)
!9971 = !DILocation(line: 3981, column: 12, scope: !9960)
!9972 = !DILocation(line: 3982, column: 16, scope: !9960)
!9973 = !DILocation(line: 3982, column: 8, scope: !9960)
!9974 = !DILocation(line: 3982, column: 14, scope: !9960)
!9975 = !DILocation(line: 3984, column: 36, scope: !9960)
!9976 = !DILocation(line: 3984, column: 41, scope: !9960)
!9977 = !DILocation(line: 3984, column: 18, scope: !9960)
!9978 = !DILocation(line: 3985, column: 4, scope: !9960)
!9979 = !DILocation(line: 3984, column: 3, scope: !9960)
!9980 = !DILocation(line: 3986, column: 8, scope: !9981)
!9981 = distinct !DILexicalBlock(scope: !9960, file: !3, line: 3986, column: 7)
!9982 = !DILocation(line: 3986, column: 7, scope: !9981)
!9983 = !DILocation(line: 3986, column: 7, scope: !9960)
!9984 = !DILocation(line: 3987, column: 40, scope: !9981)
!9985 = !DILocation(line: 3987, column: 39, scope: !9981)
!9986 = !DILocation(line: 3987, column: 48, scope: !9981)
!9987 = !DILocation(line: 3987, column: 20, scope: !9981)
!9988 = !DILocation(line: 3988, column: 37, scope: !9981)
!9989 = !DILocation(line: 3987, column: 5, scope: !9981)
!9990 = !DILocation(line: 3989, column: 36, scope: !9960)
!9991 = !DILocation(line: 3989, column: 41, scope: !9960)
!9992 = !DILocation(line: 3989, column: 18, scope: !9960)
!9993 = !DILocation(line: 3989, column: 74, scope: !9960)
!9994 = !DILocation(line: 3989, column: 3, scope: !9960)
!9995 = !DILocation(line: 3990, column: 36, scope: !9960)
!9996 = !DILocation(line: 3990, column: 41, scope: !9960)
!9997 = !DILocation(line: 3990, column: 18, scope: !9960)
!9998 = !DILocation(line: 3990, column: 72, scope: !9960)
!9999 = !DILocation(line: 3990, column: 3, scope: !9960)
!10000 = !DILocation(line: 3991, column: 1, scope: !9960)
!10001 = distinct !DISubprogram(name: "dataflow_set_union", scope: !3, file: !3, line: 2447, type: !9814, scopeLine: 2448, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!10002 = !DILocalVariable(name: "dst", arg: 1, scope: !10001, file: !3, line: 2447, type: !2418)
!10003 = !DILocation(line: 2447, column: 35, scope: !10001)
!10004 = !DILocalVariable(name: "src", arg: 2, scope: !10001, file: !3, line: 2447, type: !2418)
!10005 = !DILocation(line: 2447, column: 54, scope: !10001)
!10006 = !DILocalVariable(name: "i", scope: !10001, file: !3, line: 2449, type: !1010)
!10007 = !DILocation(line: 2449, column: 7, scope: !10001)
!10008 = !DILocation(line: 2451, column: 10, scope: !10009)
!10009 = distinct !DILexicalBlock(scope: !10001, file: !3, line: 2451, column: 3)
!10010 = !DILocation(line: 2451, column: 8, scope: !10009)
!10011 = !DILocation(line: 2451, column: 15, scope: !10012)
!10012 = distinct !DILexicalBlock(scope: !10009, file: !3, line: 2451, column: 3)
!10013 = !DILocation(line: 2451, column: 17, scope: !10012)
!10014 = !DILocation(line: 2451, column: 3, scope: !10009)
!10015 = !DILocation(line: 2452, column: 24, scope: !10012)
!10016 = !DILocation(line: 2452, column: 29, scope: !10012)
!10017 = !DILocation(line: 2452, column: 34, scope: !10012)
!10018 = !DILocation(line: 2452, column: 38, scope: !10012)
!10019 = !DILocation(line: 2452, column: 43, scope: !10012)
!10020 = !DILocation(line: 2452, column: 48, scope: !10012)
!10021 = !DILocation(line: 2452, column: 5, scope: !10012)
!10022 = !DILocation(line: 2451, column: 43, scope: !10012)
!10023 = !DILocation(line: 2451, column: 3, scope: !10012)
!10024 = distinct !{!10024, !10014, !10025}
!10025 = !DILocation(line: 2452, column: 50, scope: !10009)
!10026 = !DILocation(line: 2454, column: 7, scope: !10027)
!10027 = distinct !DILexicalBlock(scope: !10001, file: !3, line: 2454, column: 7)
!10028 = !DILocation(line: 2454, column: 12, scope: !10027)
!10029 = !DILocation(line: 2454, column: 20, scope: !10027)
!10030 = !DILocation(line: 2454, column: 17, scope: !10027)
!10031 = !DILocation(line: 2454, column: 7, scope: !10001)
!10032 = !DILocation(line: 2456, column: 28, scope: !10033)
!10033 = distinct !DILexicalBlock(scope: !10027, file: !3, line: 2455, column: 5)
!10034 = !DILocation(line: 2456, column: 33, scope: !10033)
!10035 = !DILocation(line: 2456, column: 7, scope: !10033)
!10036 = !DILocation(line: 2457, column: 37, scope: !10033)
!10037 = !DILocation(line: 2457, column: 42, scope: !10033)
!10038 = !DILocation(line: 2457, column: 19, scope: !10033)
!10039 = !DILocation(line: 2457, column: 7, scope: !10033)
!10040 = !DILocation(line: 2457, column: 12, scope: !10033)
!10041 = !DILocation(line: 2457, column: 17, scope: !10033)
!10042 = !DILocation(line: 2458, column: 5, scope: !10033)
!10043 = !DILocation(line: 2460, column: 38, scope: !10027)
!10044 = !DILocation(line: 2460, column: 43, scope: !10027)
!10045 = !DILocation(line: 2460, column: 20, scope: !10027)
!10046 = !DILocation(line: 2460, column: 66, scope: !10027)
!10047 = !DILocation(line: 2460, column: 5, scope: !10027)
!10048 = !DILocation(line: 2461, column: 1, scope: !10001)
!10049 = distinct !DISubprogram(name: "compute_bb_dataflow", scope: !3, file: !3, line: 5637, type: !10050, scopeLine: 5638, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!10050 = !DISubroutineType(types: !10051)
!10051 = !{!1130, !1795}
!10052 = !DILocalVariable(name: "bb", arg: 1, scope: !10049, file: !3, line: 5637, type: !1795)
!10053 = !DILocation(line: 5637, column: 34, scope: !10049)
!10054 = !DILocalVariable(name: "i", scope: !10049, file: !3, line: 5639, type: !7)
!10055 = !DILocation(line: 5639, column: 16, scope: !10049)
!10056 = !DILocalVariable(name: "mo", scope: !10049, file: !3, line: 5640, type: !4238)
!10057 = !DILocation(line: 5640, column: 20, scope: !10049)
!10058 = !DILocalVariable(name: "changed", scope: !10049, file: !3, line: 5641, type: !1130)
!10059 = !DILocation(line: 5641, column: 8, scope: !10049)
!10060 = !DILocalVariable(name: "old_out", scope: !10049, file: !3, line: 5642, type: !2397)
!10061 = !DILocation(line: 5642, column: 16, scope: !10049)
!10062 = !DILocalVariable(name: "in", scope: !10049, file: !3, line: 5643, type: !2418)
!10063 = !DILocation(line: 5643, column: 17, scope: !10049)
!10064 = !DILocation(line: 5643, column: 23, scope: !10049)
!10065 = !DILocation(line: 5643, column: 33, scope: !10049)
!10066 = !DILocalVariable(name: "out", scope: !10049, file: !3, line: 5644, type: !2418)
!10067 = !DILocation(line: 5644, column: 17, scope: !10049)
!10068 = !DILocation(line: 5644, column: 24, scope: !10049)
!10069 = !DILocation(line: 5644, column: 34, scope: !10049)
!10070 = !DILocation(line: 5646, column: 3, scope: !10049)
!10071 = !DILocation(line: 5647, column: 32, scope: !10049)
!10072 = !DILocation(line: 5647, column: 3, scope: !10049)
!10073 = !DILocation(line: 5648, column: 22, scope: !10049)
!10074 = !DILocation(line: 5648, column: 27, scope: !10049)
!10075 = !DILocation(line: 5648, column: 3, scope: !10049)
!10076 = !DILocation(line: 5650, column: 10, scope: !10077)
!10077 = distinct !DILexicalBlock(scope: !10049, file: !3, line: 5650, column: 3)
!10078 = !DILocation(line: 5650, column: 8, scope: !10077)
!10079 = !DILocation(line: 5650, column: 15, scope: !10080)
!10080 = distinct !DILexicalBlock(scope: !10077, file: !3, line: 5650, column: 3)
!10081 = !DILocation(line: 5650, column: 3, scope: !10077)
!10082 = !DILocalVariable(name: "insn", scope: !10083, file: !3, line: 5652, type: !1188)
!10083 = distinct !DILexicalBlock(scope: !10080, file: !3, line: 5651, column: 5)
!10084 = !DILocation(line: 5652, column: 11, scope: !10083)
!10085 = !DILocation(line: 5652, column: 18, scope: !10083)
!10086 = !DILocation(line: 5652, column: 22, scope: !10083)
!10087 = !DILocation(line: 5654, column: 15, scope: !10083)
!10088 = !DILocation(line: 5654, column: 19, scope: !10083)
!10089 = !DILocation(line: 5654, column: 7, scope: !10083)
!10090 = !DILocation(line: 5657, column: 34, scope: !10091)
!10091 = distinct !DILexicalBlock(scope: !10083, file: !3, line: 5655, column: 2)
!10092 = !DILocation(line: 5657, column: 6, scope: !10091)
!10093 = !DILocation(line: 5658, column: 6, scope: !10091)
!10094 = !DILocalVariable(name: "loc", scope: !10095, file: !3, line: 5662, type: !1188)
!10095 = distinct !DILexicalBlock(scope: !10091, file: !3, line: 5661, column: 6)
!10096 = !DILocation(line: 5662, column: 12, scope: !10095)
!10097 = !DILocation(line: 5662, column: 18, scope: !10095)
!10098 = !DILocation(line: 5662, column: 22, scope: !10095)
!10099 = !DILocation(line: 5662, column: 24, scope: !10095)
!10100 = !DILocation(line: 5664, column: 12, scope: !10101)
!10101 = distinct !DILexicalBlock(scope: !10095, file: !3, line: 5664, column: 12)
!10102 = !DILocation(line: 5664, column: 12, scope: !10095)
!10103 = !DILocation(line: 5665, column: 16, scope: !10101)
!10104 = !DILocation(line: 5665, column: 21, scope: !10101)
!10105 = !DILocation(line: 5665, column: 3, scope: !10101)
!10106 = !DILocation(line: 5666, column: 17, scope: !10107)
!10107 = distinct !DILexicalBlock(scope: !10101, file: !3, line: 5666, column: 17)
!10108 = !DILocation(line: 5666, column: 17, scope: !10101)
!10109 = !DILocation(line: 5667, column: 16, scope: !10107)
!10110 = !DILocation(line: 5667, column: 21, scope: !10107)
!10111 = !DILocation(line: 5667, column: 3, scope: !10107)
!10112 = !DILocation(line: 5669, column: 6, scope: !10091)
!10113 = !DILocalVariable(name: "loc", scope: !10114, file: !3, line: 5673, type: !1188)
!10114 = distinct !DILexicalBlock(scope: !10091, file: !3, line: 5672, column: 6)
!10115 = !DILocation(line: 5673, column: 12, scope: !10114)
!10116 = !DILocation(line: 5673, column: 18, scope: !10114)
!10117 = !DILocation(line: 5673, column: 22, scope: !10114)
!10118 = !DILocation(line: 5673, column: 24, scope: !10114)
!10119 = !DILocalVariable(name: "val", scope: !10114, file: !3, line: 5674, type: !1188)
!10120 = !DILocation(line: 5674, column: 12, scope: !10114)
!10121 = !DILocalVariable(name: "vloc", scope: !10114, file: !3, line: 5674, type: !1188)
!10122 = !DILocation(line: 5674, column: 17, scope: !10114)
!10123 = !DILocalVariable(name: "var", scope: !10114, file: !3, line: 5675, type: !1011)
!10124 = !DILocation(line: 5675, column: 13, scope: !10114)
!10125 = !DILocation(line: 5677, column: 12, scope: !10126)
!10126 = distinct !DILexicalBlock(scope: !10114, file: !3, line: 5677, column: 12)
!10127 = !DILocation(line: 5677, column: 27, scope: !10126)
!10128 = !DILocation(line: 5677, column: 12, scope: !10114)
!10129 = !DILocation(line: 5679, column: 11, scope: !10130)
!10130 = distinct !DILexicalBlock(scope: !10126, file: !3, line: 5678, column: 3)
!10131 = !DILocation(line: 5679, column: 9, scope: !10130)
!10132 = !DILocation(line: 5680, column: 12, scope: !10130)
!10133 = !DILocation(line: 5680, column: 10, scope: !10130)
!10134 = !DILocation(line: 5681, column: 3, scope: !10130)
!10135 = !DILocation(line: 5684, column: 9, scope: !10136)
!10136 = distinct !DILexicalBlock(scope: !10126, file: !3, line: 5683, column: 3)
!10137 = !DILocation(line: 5685, column: 12, scope: !10136)
!10138 = !DILocation(line: 5685, column: 10, scope: !10136)
!10139 = !DILocation(line: 5688, column: 14, scope: !10114)
!10140 = !DILocation(line: 5688, column: 12, scope: !10114)
!10141 = !DILocation(line: 5690, column: 31, scope: !10114)
!10142 = !DILocation(line: 5691, column: 24, scope: !10114)
!10143 = !DILocation(line: 5691, column: 10, scope: !10114)
!10144 = !DILocation(line: 5690, column: 8, scope: !10114)
!10145 = !DILocation(line: 5692, column: 12, scope: !10146)
!10146 = distinct !DILexicalBlock(scope: !10114, file: !3, line: 5692, column: 12)
!10147 = !DILocation(line: 5692, column: 12, scope: !10114)
!10148 = !DILocation(line: 5694, column: 9, scope: !10149)
!10149 = distinct !DILexicalBlock(scope: !10150, file: !3, line: 5694, column: 9)
!10150 = distinct !DILexicalBlock(scope: !10146, file: !3, line: 5693, column: 3)
!10151 = !DILocation(line: 5694, column: 9, scope: !10150)
!10152 = !DILocation(line: 5695, column: 20, scope: !10149)
!10153 = !DILocation(line: 5695, column: 25, scope: !10149)
!10154 = !DILocation(line: 5695, column: 30, scope: !10149)
!10155 = !DILocation(line: 5695, column: 59, scope: !10149)
!10156 = !DILocation(line: 5695, column: 7, scope: !10149)
!10157 = !DILocation(line: 5696, column: 24, scope: !10150)
!10158 = !DILocation(line: 5696, column: 29, scope: !10150)
!10159 = !DILocation(line: 5696, column: 48, scope: !10150)
!10160 = !DILocation(line: 5696, column: 34, scope: !10150)
!10161 = !DILocation(line: 5696, column: 5, scope: !10150)
!10162 = !DILocation(line: 5699, column: 3, scope: !10150)
!10163 = !DILocation(line: 5700, column: 18, scope: !10164)
!10164 = distinct !DILexicalBlock(scope: !10146, file: !3, line: 5700, column: 17)
!10165 = !DILocation(line: 5700, column: 17, scope: !10146)
!10166 = !DILocation(line: 5701, column: 22, scope: !10164)
!10167 = !DILocation(line: 5701, column: 27, scope: !10164)
!10168 = !DILocation(line: 5702, column: 22, scope: !10164)
!10169 = !DILocation(line: 5702, column: 8, scope: !10164)
!10170 = !DILocation(line: 5701, column: 3, scope: !10164)
!10171 = !DILocation(line: 5706, column: 6, scope: !10091)
!10172 = !DILocalVariable(name: "loc", scope: !10173, file: !3, line: 5710, type: !1188)
!10173 = distinct !DILexicalBlock(scope: !10091, file: !3, line: 5709, column: 6)
!10174 = !DILocation(line: 5710, column: 12, scope: !10173)
!10175 = !DILocation(line: 5710, column: 18, scope: !10173)
!10176 = !DILocation(line: 5710, column: 22, scope: !10173)
!10177 = !DILocation(line: 5710, column: 24, scope: !10173)
!10178 = !DILocalVariable(name: "val", scope: !10173, file: !3, line: 5711, type: !1188)
!10179 = !DILocation(line: 5711, column: 12, scope: !10173)
!10180 = !DILocalVariable(name: "vloc", scope: !10173, file: !3, line: 5711, type: !1188)
!10181 = !DILocation(line: 5711, column: 17, scope: !10173)
!10182 = !DILocalVariable(name: "uloc", scope: !10173, file: !3, line: 5711, type: !1188)
!10183 = !DILocation(line: 5711, column: 23, scope: !10173)
!10184 = !DILocation(line: 5713, column: 22, scope: !10173)
!10185 = !DILocation(line: 5713, column: 20, scope: !10173)
!10186 = !DILocation(line: 5713, column: 13, scope: !10173)
!10187 = !DILocation(line: 5714, column: 14, scope: !10173)
!10188 = !DILocation(line: 5714, column: 12, scope: !10173)
!10189 = !DILocation(line: 5716, column: 12, scope: !10190)
!10190 = distinct !DILexicalBlock(scope: !10173, file: !3, line: 5716, column: 12)
!10191 = !DILocation(line: 5716, column: 27, scope: !10190)
!10192 = !DILocation(line: 5716, column: 12, scope: !10173)
!10193 = !DILocation(line: 5718, column: 12, scope: !10194)
!10194 = distinct !DILexicalBlock(scope: !10190, file: !3, line: 5717, column: 3)
!10195 = !DILocation(line: 5718, column: 10, scope: !10194)
!10196 = !DILocation(line: 5719, column: 11, scope: !10194)
!10197 = !DILocation(line: 5719, column: 9, scope: !10194)
!10198 = !DILocation(line: 5720, column: 3, scope: !10194)
!10199 = !DILocation(line: 5722, column: 12, scope: !10200)
!10200 = distinct !DILexicalBlock(scope: !10173, file: !3, line: 5722, column: 12)
!10201 = !DILocation(line: 5722, column: 12, scope: !10173)
!10202 = !DILocation(line: 5723, column: 16, scope: !10200)
!10203 = !DILocation(line: 5723, column: 21, scope: !10200)
!10204 = !DILocation(line: 5723, column: 26, scope: !10200)
!10205 = !DILocation(line: 5723, column: 32, scope: !10200)
!10206 = !DILocation(line: 5723, column: 3, scope: !10200)
!10207 = !DILocation(line: 5725, column: 14, scope: !10200)
!10208 = !DILocation(line: 5725, column: 19, scope: !10200)
!10209 = !DILocation(line: 5725, column: 24, scope: !10200)
!10210 = !DILocation(line: 5725, column: 30, scope: !10200)
!10211 = !DILocation(line: 5725, column: 3, scope: !10200)
!10212 = !DILocation(line: 5727, column: 12, scope: !10213)
!10213 = distinct !DILexicalBlock(scope: !10173, file: !3, line: 5727, column: 12)
!10214 = !DILocation(line: 5727, column: 12, scope: !10173)
!10215 = !DILocation(line: 5729, column: 9, scope: !10216)
!10216 = distinct !DILexicalBlock(scope: !10217, file: !3, line: 5729, column: 9)
!10217 = distinct !DILexicalBlock(scope: !10213, file: !3, line: 5728, column: 3)
!10218 = !DILocation(line: 5729, column: 25, scope: !10216)
!10219 = !DILocation(line: 5729, column: 9, scope: !10217)
!10220 = !DILocation(line: 5730, column: 20, scope: !10216)
!10221 = !DILocation(line: 5730, column: 25, scope: !10216)
!10222 = !DILocation(line: 5730, column: 7, scope: !10216)
!10223 = !DILocation(line: 5732, column: 14, scope: !10224)
!10224 = distinct !DILexicalBlock(scope: !10216, file: !3, line: 5732, column: 14)
!10225 = !DILocation(line: 5732, column: 30, scope: !10224)
!10226 = !DILocation(line: 5732, column: 14, scope: !10216)
!10227 = !DILocation(line: 5733, column: 20, scope: !10224)
!10228 = !DILocation(line: 5733, column: 25, scope: !10224)
!10229 = !DILocation(line: 5733, column: 7, scope: !10224)
!10230 = !DILocation(line: 5735, column: 3, scope: !10217)
!10231 = !DILocation(line: 5737, column: 6, scope: !10091)
!10232 = !DILocalVariable(name: "loc", scope: !10233, file: !3, line: 5741, type: !1188)
!10233 = distinct !DILexicalBlock(scope: !10091, file: !3, line: 5740, column: 6)
!10234 = !DILocation(line: 5741, column: 12, scope: !10233)
!10235 = !DILocation(line: 5741, column: 18, scope: !10233)
!10236 = !DILocation(line: 5741, column: 22, scope: !10233)
!10237 = !DILocation(line: 5741, column: 24, scope: !10233)
!10238 = !DILocalVariable(name: "val", scope: !10233, file: !3, line: 5742, type: !1188)
!10239 = !DILocation(line: 5742, column: 12, scope: !10233)
!10240 = !DILocalVariable(name: "vloc", scope: !10233, file: !3, line: 5742, type: !1188)
!10241 = !DILocation(line: 5742, column: 17, scope: !10233)
!10242 = !DILocalVariable(name: "uloc", scope: !10233, file: !3, line: 5742, type: !1188)
!10243 = !DILocation(line: 5742, column: 23, scope: !10233)
!10244 = !DILocalVariable(name: "reverse", scope: !10233, file: !3, line: 5742, type: !1188)
!10245 = !DILocation(line: 5742, column: 29, scope: !10233)
!10246 = !DILocation(line: 5744, column: 15, scope: !10233)
!10247 = !DILocation(line: 5744, column: 13, scope: !10233)
!10248 = !DILocation(line: 5745, column: 12, scope: !10249)
!10249 = distinct !DILexicalBlock(scope: !10233, file: !3, line: 5745, column: 12)
!10250 = !DILocation(line: 5745, column: 12, scope: !10233)
!10251 = !DILocation(line: 5747, column: 15, scope: !10252)
!10252 = distinct !DILexicalBlock(scope: !10249, file: !3, line: 5746, column: 3)
!10253 = !DILocation(line: 5747, column: 13, scope: !10252)
!10254 = !DILocation(line: 5748, column: 12, scope: !10252)
!10255 = !DILocation(line: 5748, column: 10, scope: !10252)
!10256 = !DILocation(line: 5749, column: 3, scope: !10252)
!10257 = !DILocation(line: 5750, column: 15, scope: !10233)
!10258 = !DILocation(line: 5750, column: 13, scope: !10233)
!10259 = !DILocation(line: 5751, column: 14, scope: !10233)
!10260 = !DILocation(line: 5751, column: 12, scope: !10233)
!10261 = !DILocation(line: 5752, column: 15, scope: !10233)
!10262 = !DILocation(line: 5752, column: 13, scope: !10233)
!10263 = !DILocation(line: 5754, column: 12, scope: !10264)
!10264 = distinct !DILexicalBlock(scope: !10233, file: !3, line: 5754, column: 12)
!10265 = !DILocation(line: 5754, column: 27, scope: !10264)
!10266 = !DILocation(line: 5754, column: 12, scope: !10233)
!10267 = !DILocation(line: 5756, column: 12, scope: !10268)
!10268 = distinct !DILexicalBlock(scope: !10264, file: !3, line: 5755, column: 3)
!10269 = !DILocation(line: 5756, column: 10, scope: !10268)
!10270 = !DILocation(line: 5757, column: 11, scope: !10268)
!10271 = !DILocation(line: 5757, column: 9, scope: !10268)
!10272 = !DILocation(line: 5758, column: 3, scope: !10268)
!10273 = !DILocation(line: 5760, column: 12, scope: !10274)
!10274 = distinct !DILexicalBlock(scope: !10233, file: !3, line: 5760, column: 12)
!10275 = !DILocation(line: 5760, column: 28, scope: !10274)
!10276 = !DILocation(line: 5760, column: 12, scope: !10233)
!10277 = !DILocalVariable(name: "vsrc", scope: !10278, file: !3, line: 5762, type: !1188)
!10278 = distinct !DILexicalBlock(scope: !10274, file: !3, line: 5761, column: 3)
!10279 = !DILocation(line: 5762, column: 9, scope: !10278)
!10280 = !DILocation(line: 5762, column: 16, scope: !10278)
!10281 = !DILocation(line: 5764, column: 5, scope: !10278)
!10282 = !DILocation(line: 5765, column: 5, scope: !10278)
!10283 = !DILocation(line: 5767, column: 12, scope: !10278)
!10284 = !DILocation(line: 5767, column: 10, scope: !10278)
!10285 = !DILocation(line: 5769, column: 9, scope: !10286)
!10286 = distinct !DILexicalBlock(scope: !10278, file: !3, line: 5769, column: 9)
!10287 = !DILocation(line: 5769, column: 9, scope: !10278)
!10288 = !DILocation(line: 5770, column: 20, scope: !10286)
!10289 = !DILocation(line: 5770, column: 25, scope: !10286)
!10290 = !DILocation(line: 5770, column: 30, scope: !10286)
!10291 = !DILocation(line: 5770, column: 36, scope: !10286)
!10292 = !DILocation(line: 5770, column: 7, scope: !10286)
!10293 = !DILocation(line: 5771, column: 3, scope: !10278)
!10294 = !DILocation(line: 5772, column: 17, scope: !10295)
!10295 = distinct !DILexicalBlock(scope: !10274, file: !3, line: 5772, column: 17)
!10296 = !DILocation(line: 5772, column: 17, scope: !10274)
!10297 = !DILocation(line: 5774, column: 5, scope: !10298)
!10298 = distinct !DILexicalBlock(scope: !10295, file: !3, line: 5773, column: 3)
!10299 = !DILocation(line: 5776, column: 18, scope: !10298)
!10300 = !DILocation(line: 5776, column: 23, scope: !10298)
!10301 = !DILocation(line: 5776, column: 28, scope: !10298)
!10302 = !DILocation(line: 5776, column: 44, scope: !10298)
!10303 = !DILocation(line: 5776, column: 5, scope: !10298)
!10304 = !DILocation(line: 5777, column: 3, scope: !10298)
!10305 = !DILocation(line: 5779, column: 12, scope: !10306)
!10306 = distinct !DILexicalBlock(scope: !10233, file: !3, line: 5779, column: 12)
!10307 = !DILocation(line: 5779, column: 12, scope: !10233)
!10308 = !DILocation(line: 5781, column: 9, scope: !10309)
!10309 = distinct !DILexicalBlock(scope: !10310, file: !3, line: 5781, column: 9)
!10310 = distinct !DILexicalBlock(scope: !10306, file: !3, line: 5780, column: 3)
!10311 = !DILocation(line: 5781, column: 9, scope: !10310)
!10312 = !DILocation(line: 5783, column: 13, scope: !10313)
!10313 = distinct !DILexicalBlock(scope: !10314, file: !3, line: 5783, column: 13)
!10314 = distinct !DILexicalBlock(scope: !10309, file: !3, line: 5782, column: 7)
!10315 = !DILocation(line: 5783, column: 13, scope: !10314)
!10316 = !DILocation(line: 5784, column: 20, scope: !10313)
!10317 = !DILocation(line: 5784, column: 25, scope: !10313)
!10318 = !DILocation(line: 5784, column: 4, scope: !10313)
!10319 = !DILocation(line: 5785, column: 18, scope: !10320)
!10320 = distinct !DILexicalBlock(scope: !10313, file: !3, line: 5785, column: 18)
!10321 = !DILocation(line: 5785, column: 18, scope: !10313)
!10322 = !DILocation(line: 5786, column: 20, scope: !10320)
!10323 = !DILocation(line: 5786, column: 25, scope: !10320)
!10324 = !DILocation(line: 5786, column: 4, scope: !10320)
!10325 = !DILocation(line: 5787, column: 7, scope: !10314)
!10326 = !DILocalVariable(name: "copied_p", scope: !10327, file: !3, line: 5790, type: !1130)
!10327 = distinct !DILexicalBlock(scope: !10309, file: !3, line: 5789, column: 7)
!10328 = !DILocation(line: 5790, column: 14, scope: !10327)
!10329 = !DILocation(line: 5790, column: 25, scope: !10327)
!10330 = !DILocalVariable(name: "set_src", scope: !10327, file: !3, line: 5791, type: !1188)
!10331 = !DILocation(line: 5791, column: 13, scope: !10327)
!10332 = !DILocalVariable(name: "status", scope: !10327, file: !3, line: 5792, type: !734)
!10333 = !DILocation(line: 5792, column: 30, scope: !10327)
!10334 = !DILocation(line: 5794, column: 13, scope: !10335)
!10335 = distinct !DILexicalBlock(scope: !10327, file: !3, line: 5794, column: 13)
!10336 = !DILocation(line: 5794, column: 29, scope: !10335)
!10337 = !DILocation(line: 5794, column: 13, scope: !10327)
!10338 = !DILocation(line: 5796, column: 16, scope: !10339)
!10339 = distinct !DILexicalBlock(scope: !10335, file: !3, line: 5795, column: 4)
!10340 = !DILocation(line: 5796, column: 14, scope: !10339)
!10341 = !DILocation(line: 5797, column: 13, scope: !10339)
!10342 = !DILocation(line: 5797, column: 11, scope: !10339)
!10343 = !DILocation(line: 5798, column: 4, scope: !10339)
!10344 = !DILocation(line: 5800, column: 13, scope: !10345)
!10345 = distinct !DILexicalBlock(scope: !10327, file: !3, line: 5800, column: 13)
!10346 = !DILocation(line: 5800, column: 13, scope: !10327)
!10347 = !DILocation(line: 5802, column: 10, scope: !10348)
!10348 = distinct !DILexicalBlock(scope: !10349, file: !3, line: 5802, column: 10)
!10349 = distinct !DILexicalBlock(scope: !10345, file: !3, line: 5801, column: 4)
!10350 = !DILocation(line: 5802, column: 10, scope: !10349)
!10351 = !DILocation(line: 5804, column: 36, scope: !10352)
!10352 = distinct !DILexicalBlock(scope: !10348, file: !3, line: 5803, column: 8)
!10353 = !DILocation(line: 5804, column: 40, scope: !10352)
!10354 = !DILocation(line: 5804, column: 19, scope: !10352)
!10355 = !DILocation(line: 5804, column: 17, scope: !10352)
!10356 = !DILocation(line: 5806, column: 14, scope: !10357)
!10357 = distinct !DILexicalBlock(scope: !10352, file: !3, line: 5806, column: 14)
!10358 = !DILocation(line: 5806, column: 21, scope: !10357)
!10359 = !DILocation(line: 5806, column: 14, scope: !10352)
!10360 = !DILocation(line: 5807, column: 31, scope: !10357)
!10361 = !DILocation(line: 5807, column: 36, scope: !10357)
!10362 = !DILocation(line: 5807, column: 14, scope: !10357)
!10363 = !DILocation(line: 5807, column: 12, scope: !10357)
!10364 = !DILocation(line: 5807, column: 5, scope: !10357)
!10365 = !DILocation(line: 5808, column: 8, scope: !10352)
!10366 = !DILocation(line: 5810, column: 34, scope: !10349)
!10367 = !DILocation(line: 5810, column: 38, scope: !10349)
!10368 = !DILocation(line: 5810, column: 16, scope: !10349)
!10369 = !DILocation(line: 5810, column: 14, scope: !10349)
!10370 = !DILocation(line: 5811, column: 4, scope: !10349)
!10371 = !DILocation(line: 5813, column: 13, scope: !10372)
!10372 = distinct !DILexicalBlock(scope: !10327, file: !3, line: 5813, column: 13)
!10373 = !DILocation(line: 5813, column: 13, scope: !10327)
!10374 = !DILocation(line: 5814, column: 28, scope: !10372)
!10375 = !DILocation(line: 5814, column: 33, scope: !10372)
!10376 = !DILocation(line: 5814, column: 40, scope: !10372)
!10377 = !DILocation(line: 5814, column: 39, scope: !10372)
!10378 = !DILocation(line: 5815, column: 7, scope: !10372)
!10379 = !DILocation(line: 5815, column: 15, scope: !10372)
!10380 = !DILocation(line: 5814, column: 4, scope: !10372)
!10381 = !DILocation(line: 5816, column: 18, scope: !10382)
!10382 = distinct !DILexicalBlock(scope: !10372, file: !3, line: 5816, column: 18)
!10383 = !DILocation(line: 5816, column: 18, scope: !10372)
!10384 = !DILocation(line: 5817, column: 28, scope: !10382)
!10385 = !DILocation(line: 5817, column: 33, scope: !10382)
!10386 = !DILocation(line: 5817, column: 40, scope: !10382)
!10387 = !DILocation(line: 5817, column: 39, scope: !10382)
!10388 = !DILocation(line: 5818, column: 7, scope: !10382)
!10389 = !DILocation(line: 5818, column: 15, scope: !10382)
!10390 = !DILocation(line: 5817, column: 4, scope: !10382)
!10391 = !DILocation(line: 5820, column: 3, scope: !10310)
!10392 = !DILocation(line: 5821, column: 17, scope: !10393)
!10393 = distinct !DILexicalBlock(scope: !10306, file: !3, line: 5821, column: 17)
!10394 = !DILocation(line: 5821, column: 17, scope: !10306)
!10395 = !DILocation(line: 5822, column: 21, scope: !10393)
!10396 = !DILocation(line: 5822, column: 26, scope: !10393)
!10397 = !DILocation(line: 5822, column: 3, scope: !10393)
!10398 = !DILocation(line: 5824, column: 19, scope: !10233)
!10399 = !DILocation(line: 5824, column: 24, scope: !10233)
!10400 = !DILocation(line: 5824, column: 29, scope: !10233)
!10401 = !DILocation(line: 5824, column: 35, scope: !10233)
!10402 = !DILocation(line: 5824, column: 8, scope: !10233)
!10403 = !DILocation(line: 5826, column: 12, scope: !10404)
!10404 = distinct !DILexicalBlock(scope: !10233, file: !3, line: 5826, column: 12)
!10405 = !DILocation(line: 5826, column: 12, scope: !10233)
!10406 = !DILocation(line: 5827, column: 14, scope: !10404)
!10407 = !DILocation(line: 5827, column: 19, scope: !10404)
!10408 = !DILocation(line: 5827, column: 38, scope: !10404)
!10409 = !DILocation(line: 5828, column: 7, scope: !10404)
!10410 = !DILocation(line: 5827, column: 3, scope: !10404)
!10411 = !DILocation(line: 5830, column: 6, scope: !10091)
!10412 = !DILocalVariable(name: "loc", scope: !10413, file: !3, line: 5834, type: !1188)
!10413 = distinct !DILexicalBlock(scope: !10091, file: !3, line: 5833, column: 6)
!10414 = !DILocation(line: 5834, column: 12, scope: !10413)
!10415 = !DILocation(line: 5834, column: 18, scope: !10413)
!10416 = !DILocation(line: 5834, column: 22, scope: !10413)
!10417 = !DILocation(line: 5834, column: 24, scope: !10413)
!10418 = !DILocalVariable(name: "set_src", scope: !10413, file: !3, line: 5835, type: !1188)
!10419 = !DILocation(line: 5835, column: 12, scope: !10413)
!10420 = !DILocation(line: 5837, column: 12, scope: !10421)
!10421 = distinct !DILexicalBlock(scope: !10413, file: !3, line: 5837, column: 12)
!10422 = !DILocation(line: 5837, column: 27, scope: !10421)
!10423 = !DILocation(line: 5837, column: 12, scope: !10413)
!10424 = !DILocation(line: 5839, column: 15, scope: !10425)
!10425 = distinct !DILexicalBlock(scope: !10421, file: !3, line: 5838, column: 3)
!10426 = !DILocation(line: 5839, column: 13, scope: !10425)
!10427 = !DILocation(line: 5840, column: 11, scope: !10425)
!10428 = !DILocation(line: 5840, column: 9, scope: !10425)
!10429 = !DILocation(line: 5841, column: 3, scope: !10425)
!10430 = !DILocation(line: 5843, column: 12, scope: !10431)
!10431 = distinct !DILexicalBlock(scope: !10413, file: !3, line: 5843, column: 12)
!10432 = !DILocation(line: 5843, column: 12, scope: !10413)
!10433 = !DILocation(line: 5844, column: 27, scope: !10431)
!10434 = !DILocation(line: 5844, column: 32, scope: !10431)
!10435 = !DILocation(line: 5845, column: 6, scope: !10431)
!10436 = !DILocation(line: 5844, column: 3, scope: !10431)
!10437 = !DILocation(line: 5846, column: 17, scope: !10438)
!10438 = distinct !DILexicalBlock(scope: !10431, file: !3, line: 5846, column: 17)
!10439 = !DILocation(line: 5846, column: 17, scope: !10431)
!10440 = !DILocation(line: 5847, column: 27, scope: !10438)
!10441 = !DILocation(line: 5847, column: 32, scope: !10438)
!10442 = !DILocation(line: 5848, column: 6, scope: !10438)
!10443 = !DILocation(line: 5847, column: 3, scope: !10438)
!10444 = !DILocation(line: 5850, column: 6, scope: !10091)
!10445 = !DILocalVariable(name: "loc", scope: !10446, file: !3, line: 5854, type: !1188)
!10446 = distinct !DILexicalBlock(scope: !10091, file: !3, line: 5853, column: 6)
!10447 = !DILocation(line: 5854, column: 12, scope: !10446)
!10448 = !DILocation(line: 5854, column: 18, scope: !10446)
!10449 = !DILocation(line: 5854, column: 22, scope: !10446)
!10450 = !DILocation(line: 5854, column: 24, scope: !10446)
!10451 = !DILocalVariable(name: "src_status", scope: !10446, file: !3, line: 5855, type: !734)
!10452 = !DILocation(line: 5855, column: 29, scope: !10446)
!10453 = !DILocalVariable(name: "set_src", scope: !10446, file: !3, line: 5856, type: !1188)
!10454 = !DILocation(line: 5856, column: 12, scope: !10446)
!10455 = !DILocation(line: 5858, column: 12, scope: !10456)
!10456 = distinct !DILexicalBlock(scope: !10446, file: !3, line: 5858, column: 12)
!10457 = !DILocation(line: 5858, column: 27, scope: !10456)
!10458 = !DILocation(line: 5858, column: 12, scope: !10446)
!10459 = !DILocation(line: 5860, column: 15, scope: !10460)
!10460 = distinct !DILexicalBlock(scope: !10456, file: !3, line: 5859, column: 3)
!10461 = !DILocation(line: 5860, column: 13, scope: !10460)
!10462 = !DILocation(line: 5861, column: 11, scope: !10460)
!10463 = !DILocation(line: 5861, column: 9, scope: !10460)
!10464 = !DILocation(line: 5862, column: 3, scope: !10460)
!10465 = !DILocation(line: 5864, column: 14, scope: !10466)
!10466 = distinct !DILexicalBlock(scope: !10446, file: !3, line: 5864, column: 12)
!10467 = !DILocation(line: 5864, column: 12, scope: !10446)
!10468 = !DILocation(line: 5865, column: 14, scope: !10466)
!10469 = !DILocation(line: 5865, column: 3, scope: !10466)
!10470 = !DILocation(line: 5868, column: 35, scope: !10471)
!10471 = distinct !DILexicalBlock(scope: !10466, file: !3, line: 5867, column: 3)
!10472 = !DILocation(line: 5868, column: 39, scope: !10471)
!10473 = !DILocation(line: 5868, column: 18, scope: !10471)
!10474 = !DILocation(line: 5868, column: 16, scope: !10471)
!10475 = !DILocation(line: 5870, column: 9, scope: !10476)
!10476 = distinct !DILexicalBlock(scope: !10471, file: !3, line: 5870, column: 9)
!10477 = !DILocation(line: 5870, column: 20, scope: !10476)
!10478 = !DILocation(line: 5870, column: 9, scope: !10471)
!10479 = !DILocation(line: 5871, column: 37, scope: !10476)
!10480 = !DILocation(line: 5871, column: 42, scope: !10476)
!10481 = !DILocation(line: 5871, column: 20, scope: !10476)
!10482 = !DILocation(line: 5871, column: 18, scope: !10476)
!10483 = !DILocation(line: 5871, column: 7, scope: !10476)
!10484 = !DILocation(line: 5874, column: 36, scope: !10446)
!10485 = !DILocation(line: 5874, column: 40, scope: !10446)
!10486 = !DILocation(line: 5874, column: 18, scope: !10446)
!10487 = !DILocation(line: 5874, column: 16, scope: !10446)
!10488 = !DILocation(line: 5876, column: 12, scope: !10489)
!10489 = distinct !DILexicalBlock(scope: !10446, file: !3, line: 5876, column: 12)
!10490 = !DILocation(line: 5876, column: 12, scope: !10446)
!10491 = !DILocation(line: 5877, column: 27, scope: !10489)
!10492 = !DILocation(line: 5877, column: 32, scope: !10489)
!10493 = !DILocation(line: 5877, column: 44, scope: !10489)
!10494 = !DILocation(line: 5877, column: 56, scope: !10489)
!10495 = !DILocation(line: 5877, column: 3, scope: !10489)
!10496 = !DILocation(line: 5878, column: 17, scope: !10497)
!10497 = distinct !DILexicalBlock(scope: !10489, file: !3, line: 5878, column: 17)
!10498 = !DILocation(line: 5878, column: 17, scope: !10489)
!10499 = !DILocation(line: 5879, column: 27, scope: !10497)
!10500 = !DILocation(line: 5879, column: 32, scope: !10497)
!10501 = !DILocation(line: 5879, column: 44, scope: !10497)
!10502 = !DILocation(line: 5879, column: 56, scope: !10497)
!10503 = !DILocation(line: 5879, column: 3, scope: !10497)
!10504 = !DILocation(line: 5881, column: 6, scope: !10091)
!10505 = !DILocalVariable(name: "loc", scope: !10506, file: !3, line: 5885, type: !1188)
!10506 = distinct !DILexicalBlock(scope: !10091, file: !3, line: 5884, column: 6)
!10507 = !DILocation(line: 5885, column: 12, scope: !10506)
!10508 = !DILocation(line: 5885, column: 18, scope: !10506)
!10509 = !DILocation(line: 5885, column: 22, scope: !10506)
!10510 = !DILocation(line: 5885, column: 24, scope: !10506)
!10511 = !DILocation(line: 5887, column: 12, scope: !10512)
!10512 = distinct !DILexicalBlock(scope: !10506, file: !3, line: 5887, column: 12)
!10513 = !DILocation(line: 5887, column: 12, scope: !10506)
!10514 = !DILocation(line: 5888, column: 19, scope: !10512)
!10515 = !DILocation(line: 5888, column: 24, scope: !10512)
!10516 = !DILocation(line: 5888, column: 3, scope: !10512)
!10517 = !DILocation(line: 5889, column: 17, scope: !10518)
!10518 = distinct !DILexicalBlock(scope: !10512, file: !3, line: 5889, column: 17)
!10519 = !DILocation(line: 5889, column: 17, scope: !10512)
!10520 = !DILocation(line: 5890, column: 19, scope: !10518)
!10521 = !DILocation(line: 5890, column: 24, scope: !10518)
!10522 = !DILocation(line: 5890, column: 3, scope: !10518)
!10523 = !DILocation(line: 5892, column: 6, scope: !10091)
!10524 = !DILocalVariable(name: "loc", scope: !10525, file: !3, line: 5896, type: !1188)
!10525 = distinct !DILexicalBlock(scope: !10091, file: !3, line: 5895, column: 6)
!10526 = !DILocation(line: 5896, column: 12, scope: !10525)
!10527 = !DILocation(line: 5896, column: 18, scope: !10525)
!10528 = !DILocation(line: 5896, column: 22, scope: !10525)
!10529 = !DILocation(line: 5896, column: 24, scope: !10525)
!10530 = !DILocation(line: 5898, column: 12, scope: !10531)
!10531 = distinct !DILexicalBlock(scope: !10525, file: !3, line: 5898, column: 12)
!10532 = !DILocation(line: 5898, column: 12, scope: !10525)
!10533 = !DILocation(line: 5899, column: 19, scope: !10531)
!10534 = !DILocation(line: 5899, column: 24, scope: !10531)
!10535 = !DILocation(line: 5899, column: 3, scope: !10531)
!10536 = !DILocation(line: 5900, column: 17, scope: !10537)
!10537 = distinct !DILexicalBlock(scope: !10531, file: !3, line: 5900, column: 17)
!10538 = !DILocation(line: 5900, column: 17, scope: !10531)
!10539 = !DILocation(line: 5901, column: 19, scope: !10537)
!10540 = !DILocation(line: 5901, column: 24, scope: !10537)
!10541 = !DILocation(line: 5901, column: 3, scope: !10537)
!10542 = !DILocation(line: 5903, column: 6, scope: !10091)
!10543 = !DILocation(line: 5906, column: 27, scope: !10091)
!10544 = !DILocation(line: 5906, column: 31, scope: !10091)
!10545 = !DILocation(line: 5906, column: 33, scope: !10091)
!10546 = !DILocation(line: 5906, column: 6, scope: !10091)
!10547 = !DILocation(line: 5906, column: 11, scope: !10091)
!10548 = !DILocation(line: 5906, column: 24, scope: !10091)
!10549 = !DILocation(line: 5907, column: 6, scope: !10091)
!10550 = !DILocation(line: 5909, column: 5, scope: !10083)
!10551 = !DILocation(line: 5650, column: 69, scope: !10080)
!10552 = !DILocation(line: 5650, column: 3, scope: !10080)
!10553 = distinct !{!10553, !10081, !10554}
!10554 = !DILocation(line: 5909, column: 5, scope: !10077)
!10555 = !DILocation(line: 5911, column: 7, scope: !10556)
!10556 = distinct !DILexicalBlock(scope: !10049, file: !3, line: 5911, column: 7)
!10557 = !DILocation(line: 5911, column: 7, scope: !10049)
!10558 = !DILocation(line: 5913, column: 32, scope: !10559)
!10559 = distinct !DILexicalBlock(scope: !10556, file: !3, line: 5912, column: 5)
!10560 = !DILocation(line: 5913, column: 7, scope: !10559)
!10561 = !DILocation(line: 5914, column: 40, scope: !10559)
!10562 = !DILocation(line: 5914, column: 45, scope: !10559)
!10563 = !DILocation(line: 5914, column: 22, scope: !10559)
!10564 = !DILocation(line: 5915, column: 8, scope: !10559)
!10565 = !DILocation(line: 5914, column: 7, scope: !10559)
!10566 = !DILocation(line: 5916, column: 40, scope: !10559)
!10567 = !DILocation(line: 5916, column: 45, scope: !10559)
!10568 = !DILocation(line: 5916, column: 22, scope: !10559)
!10569 = !DILocation(line: 5917, column: 8, scope: !10559)
!10570 = !DILocation(line: 5916, column: 7, scope: !10559)
!10571 = !DILocation(line: 5922, column: 5, scope: !10559)
!10572 = !DILocation(line: 5923, column: 47, scope: !10049)
!10573 = !DILocation(line: 5923, column: 13, scope: !10049)
!10574 = !DILocation(line: 5923, column: 11, scope: !10049)
!10575 = !DILocation(line: 5924, column: 3, scope: !10049)
!10576 = !DILocation(line: 5925, column: 10, scope: !10049)
!10577 = !DILocation(line: 5925, column: 3, scope: !10049)
!10578 = distinct !DISubprogram(name: "dump_dataflow_set", scope: !3, file: !3, line: 6223, type: !4011, scopeLine: 6224, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!10579 = !DILocalVariable(name: "set", arg: 1, scope: !10578, file: !3, line: 6223, type: !2418)
!10580 = !DILocation(line: 6223, column: 34, scope: !10578)
!10581 = !DILocalVariable(name: "i", scope: !10578, file: !3, line: 6225, type: !1010)
!10582 = !DILocation(line: 6225, column: 7, scope: !10578)
!10583 = !DILocation(line: 6227, column: 12, scope: !10578)
!10584 = !DILocation(line: 6228, column: 5, scope: !10578)
!10585 = !DILocation(line: 6228, column: 10, scope: !10578)
!10586 = !DILocation(line: 6227, column: 3, scope: !10578)
!10587 = !DILocation(line: 6229, column: 10, scope: !10588)
!10588 = distinct !DILexicalBlock(scope: !10578, file: !3, line: 6229, column: 3)
!10589 = !DILocation(line: 6229, column: 8, scope: !10588)
!10590 = !DILocation(line: 6229, column: 15, scope: !10591)
!10591 = distinct !DILexicalBlock(scope: !10588, file: !3, line: 6229, column: 3)
!10592 = !DILocation(line: 6229, column: 17, scope: !10591)
!10593 = !DILocation(line: 6229, column: 3, scope: !10588)
!10594 = !DILocation(line: 6231, column: 11, scope: !10595)
!10595 = distinct !DILexicalBlock(scope: !10596, file: !3, line: 6231, column: 11)
!10596 = distinct !DILexicalBlock(scope: !10591, file: !3, line: 6230, column: 5)
!10597 = !DILocation(line: 6231, column: 16, scope: !10595)
!10598 = !DILocation(line: 6231, column: 21, scope: !10595)
!10599 = !DILocation(line: 6231, column: 11, scope: !10596)
!10600 = !DILocation(line: 6233, column: 13, scope: !10601)
!10601 = distinct !DILexicalBlock(scope: !10595, file: !3, line: 6232, column: 2)
!10602 = !DILocation(line: 6233, column: 35, scope: !10601)
!10603 = !DILocation(line: 6233, column: 4, scope: !10601)
!10604 = !DILocation(line: 6234, column: 21, scope: !10601)
!10605 = !DILocation(line: 6234, column: 26, scope: !10601)
!10606 = !DILocation(line: 6234, column: 31, scope: !10601)
!10607 = !DILocation(line: 6234, column: 4, scope: !10601)
!10608 = !DILocation(line: 6235, column: 2, scope: !10601)
!10609 = !DILocation(line: 6236, column: 5, scope: !10596)
!10610 = !DILocation(line: 6229, column: 43, scope: !10591)
!10611 = !DILocation(line: 6229, column: 3, scope: !10591)
!10612 = distinct !{!10612, !10593, !10613}
!10613 = !DILocation(line: 6236, column: 5, scope: !10588)
!10614 = !DILocation(line: 6237, column: 32, scope: !10578)
!10615 = !DILocation(line: 6237, column: 37, scope: !10578)
!10616 = !DILocation(line: 6237, column: 14, scope: !10578)
!10617 = !DILocation(line: 6237, column: 3, scope: !10578)
!10618 = !DILocation(line: 6238, column: 12, scope: !10578)
!10619 = !DILocation(line: 6238, column: 3, scope: !10578)
!10620 = !DILocation(line: 6239, column: 1, scope: !10578)
!10621 = distinct !DISubprogram(name: "ei_end_p", scope: !513, file: !513, line: 721, type: !5231, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!10622 = !DILocalVariable(name: "i", arg: 1, scope: !10621, file: !513, line: 721, type: !2464)
!10623 = !DILocation(line: 721, column: 25, scope: !10621)
!10624 = !DILocation(line: 723, column: 13, scope: !10621)
!10625 = !DILocation(line: 723, column: 22, scope: !10621)
!10626 = !DILocation(line: 723, column: 19, scope: !10621)
!10627 = !DILocation(line: 723, column: 10, scope: !10621)
!10628 = !DILocation(line: 723, column: 3, scope: !10621)
!10629 = distinct !DISubprogram(name: "attrs_list_copy", scope: !3, file: !3, line: 1271, type: !10630, scopeLine: 1272, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!10630 = !DISubroutineType(types: !10631)
!10631 = !{null, !5173, !2403}
!10632 = !DILocalVariable(name: "dstp", arg: 1, scope: !10629, file: !3, line: 1271, type: !5173)
!10633 = !DILocation(line: 1271, column: 25, scope: !10629)
!10634 = !DILocalVariable(name: "src", arg: 2, scope: !10629, file: !3, line: 1271, type: !2403)
!10635 = !DILocation(line: 1271, column: 37, scope: !10629)
!10636 = !DILocalVariable(name: "n", scope: !10629, file: !3, line: 1273, type: !2403)
!10637 = !DILocation(line: 1273, column: 9, scope: !10629)
!10638 = !DILocation(line: 1275, column: 21, scope: !10629)
!10639 = !DILocation(line: 1275, column: 3, scope: !10629)
!10640 = !DILocation(line: 1276, column: 3, scope: !10629)
!10641 = !DILocation(line: 1276, column: 10, scope: !10642)
!10642 = distinct !DILexicalBlock(scope: !10643, file: !3, line: 1276, column: 3)
!10643 = distinct !DILexicalBlock(scope: !10629, file: !3, line: 1276, column: 3)
!10644 = !DILocation(line: 1276, column: 3, scope: !10643)
!10645 = !DILocation(line: 1278, column: 31, scope: !10646)
!10646 = distinct !DILexicalBlock(scope: !10642, file: !3, line: 1277, column: 5)
!10647 = !DILocation(line: 1278, column: 19, scope: !10646)
!10648 = !DILocation(line: 1278, column: 11, scope: !10646)
!10649 = !DILocation(line: 1278, column: 9, scope: !10646)
!10650 = !DILocation(line: 1279, column: 16, scope: !10646)
!10651 = !DILocation(line: 1279, column: 21, scope: !10646)
!10652 = !DILocation(line: 1279, column: 7, scope: !10646)
!10653 = !DILocation(line: 1279, column: 10, scope: !10646)
!10654 = !DILocation(line: 1279, column: 14, scope: !10646)
!10655 = !DILocation(line: 1280, column: 15, scope: !10646)
!10656 = !DILocation(line: 1280, column: 20, scope: !10646)
!10657 = !DILocation(line: 1280, column: 7, scope: !10646)
!10658 = !DILocation(line: 1280, column: 10, scope: !10646)
!10659 = !DILocation(line: 1280, column: 13, scope: !10646)
!10660 = !DILocation(line: 1281, column: 19, scope: !10646)
!10661 = !DILocation(line: 1281, column: 24, scope: !10646)
!10662 = !DILocation(line: 1281, column: 7, scope: !10646)
!10663 = !DILocation(line: 1281, column: 10, scope: !10646)
!10664 = !DILocation(line: 1281, column: 17, scope: !10646)
!10665 = !DILocation(line: 1282, column: 18, scope: !10646)
!10666 = !DILocation(line: 1282, column: 17, scope: !10646)
!10667 = !DILocation(line: 1282, column: 7, scope: !10646)
!10668 = !DILocation(line: 1282, column: 10, scope: !10646)
!10669 = !DILocation(line: 1282, column: 15, scope: !10646)
!10670 = !DILocation(line: 1283, column: 15, scope: !10646)
!10671 = !DILocation(line: 1283, column: 8, scope: !10646)
!10672 = !DILocation(line: 1283, column: 13, scope: !10646)
!10673 = !DILocation(line: 1284, column: 5, scope: !10646)
!10674 = !DILocation(line: 1276, column: 21, scope: !10642)
!10675 = !DILocation(line: 1276, column: 26, scope: !10642)
!10676 = !DILocation(line: 1276, column: 19, scope: !10642)
!10677 = !DILocation(line: 1276, column: 3, scope: !10642)
!10678 = distinct !{!10678, !10644, !10679}
!10679 = !DILocation(line: 1284, column: 5, scope: !10643)
!10680 = !DILocation(line: 1285, column: 1, scope: !10629)
!10681 = distinct !DISubprogram(name: "attrs_list_mpdv_union", scope: !3, file: !3, line: 1303, type: !10682, scopeLine: 1304, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!10682 = !DISubroutineType(types: !10683)
!10683 = !{null, !5173, !2403, !2403}
!10684 = !DILocalVariable(name: "dstp", arg: 1, scope: !10681, file: !3, line: 1303, type: !5173)
!10685 = !DILocation(line: 1303, column: 31, scope: !10681)
!10686 = !DILocalVariable(name: "src", arg: 2, scope: !10681, file: !3, line: 1303, type: !2403)
!10687 = !DILocation(line: 1303, column: 43, scope: !10681)
!10688 = !DILocalVariable(name: "src2", arg: 3, scope: !10681, file: !3, line: 1303, type: !2403)
!10689 = !DILocation(line: 1303, column: 54, scope: !10681)
!10690 = !DILocation(line: 1305, column: 3, scope: !10681)
!10691 = !DILocation(line: 1306, column: 3, scope: !10681)
!10692 = !DILocation(line: 1306, column: 10, scope: !10693)
!10693 = distinct !DILexicalBlock(scope: !10694, file: !3, line: 1306, column: 3)
!10694 = distinct !DILexicalBlock(scope: !10681, file: !3, line: 1306, column: 3)
!10695 = !DILocation(line: 1306, column: 3, scope: !10694)
!10696 = !DILocation(line: 1308, column: 26, scope: !10697)
!10697 = distinct !DILexicalBlock(scope: !10698, file: !3, line: 1308, column: 11)
!10698 = distinct !DILexicalBlock(scope: !10693, file: !3, line: 1307, column: 5)
!10699 = !DILocation(line: 1308, column: 31, scope: !10697)
!10700 = !DILocation(line: 1308, column: 12, scope: !10697)
!10701 = !DILocation(line: 1308, column: 11, scope: !10698)
!10702 = !DILocation(line: 1309, column: 21, scope: !10697)
!10703 = !DILocation(line: 1309, column: 27, scope: !10697)
!10704 = !DILocation(line: 1309, column: 32, scope: !10697)
!10705 = !DILocation(line: 1309, column: 36, scope: !10697)
!10706 = !DILocation(line: 1309, column: 41, scope: !10697)
!10707 = !DILocation(line: 1309, column: 49, scope: !10697)
!10708 = !DILocation(line: 1309, column: 54, scope: !10697)
!10709 = !DILocation(line: 1309, column: 2, scope: !10697)
!10710 = !DILocation(line: 1310, column: 5, scope: !10698)
!10711 = !DILocation(line: 1306, column: 21, scope: !10693)
!10712 = !DILocation(line: 1306, column: 26, scope: !10693)
!10713 = !DILocation(line: 1306, column: 19, scope: !10693)
!10714 = !DILocation(line: 1306, column: 3, scope: !10693)
!10715 = distinct !{!10715, !10695, !10716}
!10716 = !DILocation(line: 1310, column: 5, scope: !10694)
!10717 = !DILocation(line: 1311, column: 14, scope: !10718)
!10718 = distinct !DILexicalBlock(scope: !10681, file: !3, line: 1311, column: 3)
!10719 = !DILocation(line: 1311, column: 12, scope: !10718)
!10720 = !DILocation(line: 1311, column: 8, scope: !10718)
!10721 = !DILocation(line: 1311, column: 20, scope: !10722)
!10722 = distinct !DILexicalBlock(scope: !10718, file: !3, line: 1311, column: 3)
!10723 = !DILocation(line: 1311, column: 3, scope: !10718)
!10724 = !DILocation(line: 1313, column: 26, scope: !10725)
!10725 = distinct !DILexicalBlock(scope: !10726, file: !3, line: 1313, column: 11)
!10726 = distinct !DILexicalBlock(scope: !10722, file: !3, line: 1312, column: 5)
!10727 = !DILocation(line: 1313, column: 31, scope: !10725)
!10728 = !DILocation(line: 1313, column: 12, scope: !10725)
!10729 = !DILocation(line: 1314, column: 4, scope: !10725)
!10730 = !DILocation(line: 1314, column: 28, scope: !10725)
!10731 = !DILocation(line: 1314, column: 27, scope: !10725)
!10732 = !DILocation(line: 1314, column: 34, scope: !10725)
!10733 = !DILocation(line: 1314, column: 39, scope: !10725)
!10734 = !DILocation(line: 1314, column: 43, scope: !10725)
!10735 = !DILocation(line: 1314, column: 48, scope: !10725)
!10736 = !DILocation(line: 1314, column: 8, scope: !10725)
!10737 = !DILocation(line: 1313, column: 11, scope: !10726)
!10738 = !DILocation(line: 1315, column: 21, scope: !10725)
!10739 = !DILocation(line: 1315, column: 27, scope: !10725)
!10740 = !DILocation(line: 1315, column: 32, scope: !10725)
!10741 = !DILocation(line: 1315, column: 36, scope: !10725)
!10742 = !DILocation(line: 1315, column: 41, scope: !10725)
!10743 = !DILocation(line: 1315, column: 49, scope: !10725)
!10744 = !DILocation(line: 1315, column: 54, scope: !10725)
!10745 = !DILocation(line: 1315, column: 2, scope: !10725)
!10746 = !DILocation(line: 1316, column: 5, scope: !10726)
!10747 = !DILocation(line: 1311, column: 31, scope: !10722)
!10748 = !DILocation(line: 1311, column: 36, scope: !10722)
!10749 = !DILocation(line: 1311, column: 29, scope: !10722)
!10750 = !DILocation(line: 1311, column: 3, scope: !10722)
!10751 = distinct !{!10751, !10723, !10752}
!10752 = !DILocation(line: 1316, column: 5, scope: !10718)
!10753 = !DILocation(line: 1317, column: 1, scope: !10681)
!10754 = distinct !DISubprogram(name: "variable_merge_over_src", scope: !3, file: !3, line: 3597, type: !6290, scopeLine: 3598, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!10755 = !DILocalVariable(name: "s2slot", arg: 1, scope: !10754, file: !3, line: 3597, type: !1848)
!10756 = !DILocation(line: 3597, column: 33, scope: !10754)
!10757 = !DILocalVariable(name: "data", arg: 2, scope: !10754, file: !3, line: 3597, type: !1313)
!10758 = !DILocation(line: 3597, column: 47, scope: !10754)
!10759 = !DILocalVariable(name: "dsm", scope: !10754, file: !3, line: 3599, type: !2497)
!10760 = !DILocation(line: 3599, column: 23, scope: !10754)
!10761 = !DILocation(line: 3599, column: 51, scope: !10754)
!10762 = !DILocation(line: 3599, column: 29, scope: !10754)
!10763 = !DILocalVariable(name: "dst", scope: !10754, file: !3, line: 3600, type: !2418)
!10764 = !DILocation(line: 3600, column: 17, scope: !10754)
!10765 = !DILocation(line: 3600, column: 23, scope: !10754)
!10766 = !DILocation(line: 3600, column: 28, scope: !10754)
!10767 = !DILocalVariable(name: "s2var", scope: !10754, file: !3, line: 3601, type: !2447)
!10768 = !DILocation(line: 3601, column: 12, scope: !10754)
!10769 = !DILocation(line: 3601, column: 32, scope: !10754)
!10770 = !DILocation(line: 3601, column: 31, scope: !10754)
!10771 = !DILocation(line: 3601, column: 20, scope: !10754)
!10772 = !DILocalVariable(name: "dv", scope: !10754, file: !3, line: 3602, type: !2410)
!10773 = !DILocation(line: 3602, column: 17, scope: !10754)
!10774 = !DILocation(line: 3602, column: 22, scope: !10754)
!10775 = !DILocation(line: 3602, column: 29, scope: !10754)
!10776 = !DILocalVariable(name: "onepart", scope: !10754, file: !3, line: 3603, type: !1130)
!10777 = !DILocation(line: 3603, column: 8, scope: !10754)
!10778 = !DILocation(line: 3603, column: 32, scope: !10754)
!10779 = !DILocation(line: 3603, column: 18, scope: !10754)
!10780 = !DILocation(line: 3605, column: 8, scope: !10781)
!10781 = distinct !DILexicalBlock(scope: !10754, file: !3, line: 3605, column: 7)
!10782 = !DILocation(line: 3605, column: 7, scope: !10754)
!10783 = !DILocalVariable(name: "dstp", scope: !10784, file: !3, line: 3607, type: !1848)
!10784 = distinct !DILexicalBlock(scope: !10781, file: !3, line: 3606, column: 5)
!10785 = !DILocation(line: 3607, column: 14, scope: !10784)
!10786 = !DILocation(line: 3607, column: 44, scope: !10784)
!10787 = !DILocation(line: 3607, column: 49, scope: !10784)
!10788 = !DILocation(line: 3607, column: 55, scope: !10784)
!10789 = !DILocation(line: 3607, column: 21, scope: !10784)
!10790 = !DILocation(line: 3608, column: 15, scope: !10784)
!10791 = !DILocation(line: 3608, column: 8, scope: !10784)
!10792 = !DILocation(line: 3608, column: 13, scope: !10784)
!10793 = !DILocation(line: 3609, column: 7, scope: !10784)
!10794 = !DILocation(line: 3609, column: 14, scope: !10784)
!10795 = !DILocation(line: 3609, column: 22, scope: !10784)
!10796 = !DILocation(line: 3610, column: 7, scope: !10784)
!10797 = !DILocation(line: 3613, column: 3, scope: !10754)
!10798 = !DILocation(line: 3613, column: 8, scope: !10754)
!10799 = !DILocation(line: 3613, column: 23, scope: !10754)
!10800 = !DILocation(line: 3614, column: 3, scope: !10754)
!10801 = !DILocation(line: 3615, column: 1, scope: !10754)
!10802 = distinct !DISubprogram(name: "variable_merge_over_cur", scope: !3, file: !3, line: 3334, type: !6290, scopeLine: 3335, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!10803 = !DILocalVariable(name: "s1slot", arg: 1, scope: !10802, file: !3, line: 3334, type: !1848)
!10804 = !DILocation(line: 3334, column: 33, scope: !10802)
!10805 = !DILocalVariable(name: "data", arg: 2, scope: !10802, file: !3, line: 3334, type: !1313)
!10806 = !DILocation(line: 3334, column: 47, scope: !10802)
!10807 = !DILocalVariable(name: "dsm", scope: !10802, file: !3, line: 3336, type: !2497)
!10808 = !DILocation(line: 3336, column: 23, scope: !10802)
!10809 = !DILocation(line: 3336, column: 51, scope: !10802)
!10810 = !DILocation(line: 3336, column: 29, scope: !10802)
!10811 = !DILocalVariable(name: "dst", scope: !10802, file: !3, line: 3337, type: !2418)
!10812 = !DILocation(line: 3337, column: 17, scope: !10802)
!10813 = !DILocation(line: 3337, column: 23, scope: !10802)
!10814 = !DILocation(line: 3337, column: 28, scope: !10802)
!10815 = !DILocalVariable(name: "dstslot", scope: !10802, file: !3, line: 3338, type: !1848)
!10816 = !DILocation(line: 3338, column: 10, scope: !10802)
!10817 = !DILocalVariable(name: "s1var", scope: !10802, file: !3, line: 3339, type: !2447)
!10818 = !DILocation(line: 3339, column: 12, scope: !10802)
!10819 = !DILocation(line: 3339, column: 32, scope: !10802)
!10820 = !DILocation(line: 3339, column: 31, scope: !10802)
!10821 = !DILocation(line: 3339, column: 20, scope: !10802)
!10822 = !DILocalVariable(name: "s2var", scope: !10802, file: !3, line: 3340, type: !2447)
!10823 = !DILocation(line: 3340, column: 12, scope: !10802)
!10824 = !DILocalVariable(name: "dvar", scope: !10802, file: !3, line: 3340, type: !2447)
!10825 = !DILocation(line: 3340, column: 19, scope: !10802)
!10826 = !DILocalVariable(name: "dv", scope: !10802, file: !3, line: 3341, type: !2410)
!10827 = !DILocation(line: 3341, column: 17, scope: !10802)
!10828 = !DILocation(line: 3341, column: 22, scope: !10802)
!10829 = !DILocation(line: 3341, column: 29, scope: !10802)
!10830 = !DILocalVariable(name: "onepart", scope: !10802, file: !3, line: 3342, type: !1130)
!10831 = !DILocation(line: 3342, column: 8, scope: !10802)
!10832 = !DILocation(line: 3342, column: 32, scope: !10802)
!10833 = !DILocation(line: 3342, column: 18, scope: !10802)
!10834 = !DILocalVariable(name: "val", scope: !10802, file: !3, line: 3343, type: !1188)
!10835 = !DILocation(line: 3343, column: 7, scope: !10802)
!10836 = !DILocalVariable(name: "dvhash", scope: !10802, file: !3, line: 3344, type: !1836)
!10837 = !DILocation(line: 3344, column: 13, scope: !10802)
!10838 = !DILocalVariable(name: "node", scope: !10802, file: !3, line: 3345, type: !2437)
!10839 = !DILocation(line: 3345, column: 18, scope: !10802)
!10840 = !DILocalVariable(name: "nodep", scope: !10802, file: !3, line: 3345, type: !5595)
!10841 = !DILocation(line: 3345, column: 25, scope: !10802)
!10842 = !DILocation(line: 3350, column: 3, scope: !10802)
!10843 = !DILocation(line: 3351, column: 3, scope: !10802)
!10844 = !DILocation(line: 3353, column: 8, scope: !10845)
!10845 = distinct !DILexicalBlock(scope: !10802, file: !3, line: 3353, column: 7)
!10846 = !DILocation(line: 3353, column: 7, scope: !10802)
!10847 = !DILocation(line: 3354, column: 28, scope: !10845)
!10848 = !DILocation(line: 3354, column: 36, scope: !10845)
!10849 = !DILocation(line: 3354, column: 12, scope: !10845)
!10850 = !DILocation(line: 3354, column: 5, scope: !10845)
!10851 = !DILocation(line: 3356, column: 3, scope: !10802)
!10852 = !DILocation(line: 3357, column: 3, scope: !10802)
!10853 = !DILocation(line: 3359, column: 26, scope: !10802)
!10854 = !DILocation(line: 3359, column: 12, scope: !10802)
!10855 = !DILocation(line: 3359, column: 10, scope: !10802)
!10856 = !DILocation(line: 3360, column: 22, scope: !10857)
!10857 = distinct !DILexicalBlock(scope: !10802, file: !3, line: 3360, column: 7)
!10858 = !DILocation(line: 3360, column: 7, scope: !10857)
!10859 = !DILocation(line: 3360, column: 7, scope: !10802)
!10860 = !DILocation(line: 3361, column: 24, scope: !10857)
!10861 = !DILocation(line: 3361, column: 11, scope: !10857)
!10862 = !DILocation(line: 3361, column: 9, scope: !10857)
!10863 = !DILocation(line: 3361, column: 5, scope: !10857)
!10864 = !DILocation(line: 3363, column: 9, scope: !10857)
!10865 = !DILocation(line: 3365, column: 31, scope: !10802)
!10866 = !DILocation(line: 3365, column: 36, scope: !10802)
!10867 = !DILocation(line: 3365, column: 41, scope: !10802)
!10868 = !DILocation(line: 3365, column: 47, scope: !10802)
!10869 = !DILocation(line: 3365, column: 51, scope: !10802)
!10870 = !DILocation(line: 3365, column: 11, scope: !10802)
!10871 = !DILocation(line: 3365, column: 9, scope: !10802)
!10872 = !DILocation(line: 3366, column: 8, scope: !10873)
!10873 = distinct !DILexicalBlock(scope: !10802, file: !3, line: 3366, column: 7)
!10874 = !DILocation(line: 3366, column: 7, scope: !10802)
!10875 = !DILocation(line: 3368, column: 25, scope: !10876)
!10876 = distinct !DILexicalBlock(scope: !10873, file: !3, line: 3367, column: 5)
!10877 = !DILocation(line: 3369, column: 7, scope: !10876)
!10878 = !DILocation(line: 3372, column: 3, scope: !10802)
!10879 = !DILocation(line: 3372, column: 8, scope: !10802)
!10880 = !DILocation(line: 3372, column: 23, scope: !10802)
!10881 = !DILocation(line: 3373, column: 3, scope: !10802)
!10882 = !DILocation(line: 3374, column: 3, scope: !10802)
!10883 = !DILocation(line: 3375, column: 3, scope: !10802)
!10884 = !DILocation(line: 3377, column: 47, scope: !10802)
!10885 = !DILocation(line: 3377, column: 52, scope: !10802)
!10886 = !DILocation(line: 3377, column: 58, scope: !10802)
!10887 = !DILocation(line: 3377, column: 62, scope: !10802)
!10888 = !DILocation(line: 3377, column: 13, scope: !10802)
!10889 = !DILocation(line: 3377, column: 11, scope: !10802)
!10890 = !DILocation(line: 3378, column: 7, scope: !10891)
!10891 = distinct !DILexicalBlock(scope: !10802, file: !3, line: 3378, column: 7)
!10892 = !DILocation(line: 3378, column: 7, scope: !10802)
!10893 = !DILocation(line: 3380, column: 25, scope: !10894)
!10894 = distinct !DILexicalBlock(scope: !10891, file: !3, line: 3379, column: 5)
!10895 = !DILocation(line: 3380, column: 24, scope: !10894)
!10896 = !DILocation(line: 3380, column: 14, scope: !10894)
!10897 = !DILocation(line: 3380, column: 12, scope: !10894)
!10898 = !DILocation(line: 3381, column: 7, scope: !10894)
!10899 = !DILocation(line: 3382, column: 7, scope: !10894)
!10900 = !DILocation(line: 3383, column: 7, scope: !10894)
!10901 = !DILocation(line: 3384, column: 16, scope: !10894)
!10902 = !DILocation(line: 3384, column: 22, scope: !10894)
!10903 = !DILocation(line: 3384, column: 34, scope: !10894)
!10904 = !DILocation(line: 3384, column: 13, scope: !10894)
!10905 = !DILocation(line: 3385, column: 5, scope: !10894)
!10906 = !DILocation(line: 3388, column: 13, scope: !10907)
!10907 = distinct !DILexicalBlock(scope: !10891, file: !3, line: 3387, column: 5)
!10908 = !DILocation(line: 3389, column: 12, scope: !10907)
!10909 = !DILocation(line: 3392, column: 8, scope: !10910)
!10910 = distinct !DILexicalBlock(scope: !10802, file: !3, line: 3392, column: 7)
!10911 = !DILocation(line: 3392, column: 16, scope: !10910)
!10912 = !DILocation(line: 3392, column: 50, scope: !10910)
!10913 = !DILocation(line: 3392, column: 57, scope: !10910)
!10914 = !DILocation(line: 3392, column: 20, scope: !10910)
!10915 = !DILocation(line: 3392, column: 7, scope: !10802)
!10916 = !DILocation(line: 3394, column: 51, scope: !10917)
!10917 = distinct !DILexicalBlock(scope: !10910, file: !3, line: 3393, column: 5)
!10918 = !DILocation(line: 3394, column: 56, scope: !10917)
!10919 = !DILocation(line: 3394, column: 62, scope: !10917)
!10920 = !DILocation(line: 3395, column: 8, scope: !10917)
!10921 = !DILocation(line: 3394, column: 17, scope: !10917)
!10922 = !DILocation(line: 3394, column: 15, scope: !10917)
!10923 = !DILocation(line: 3396, column: 25, scope: !10917)
!10924 = !DILocation(line: 3396, column: 23, scope: !10917)
!10925 = !DILocation(line: 3396, column: 18, scope: !10917)
!10926 = !DILocation(line: 3396, column: 8, scope: !10917)
!10927 = !DILocation(line: 3396, column: 16, scope: !10917)
!10928 = !DILocation(line: 3397, column: 7, scope: !10917)
!10929 = !DILocation(line: 3397, column: 13, scope: !10917)
!10930 = !DILocation(line: 3397, column: 21, scope: !10917)
!10931 = !DILocation(line: 3398, column: 5, scope: !10917)
!10932 = !DILocation(line: 3401, column: 25, scope: !10933)
!10933 = distinct !DILexicalBlock(scope: !10910, file: !3, line: 3400, column: 5)
!10934 = !DILocation(line: 3403, column: 29, scope: !10933)
!10935 = !DILocation(line: 3403, column: 34, scope: !10933)
!10936 = !DILocation(line: 3403, column: 41, scope: !10933)
!10937 = !DILocation(line: 3404, column: 8, scope: !10933)
!10938 = !DILocation(line: 3404, column: 15, scope: !10933)
!10939 = !DILocation(line: 3404, column: 27, scope: !10933)
!10940 = !DILocation(line: 3404, column: 38, scope: !10933)
!10941 = !DILocation(line: 3403, column: 7, scope: !10933)
!10942 = !DILocation(line: 3406, column: 12, scope: !10943)
!10943 = distinct !DILexicalBlock(scope: !10933, file: !3, line: 3406, column: 11)
!10944 = !DILocation(line: 3406, column: 11, scope: !10933)
!10945 = !DILocation(line: 3408, column: 8, scope: !10946)
!10946 = distinct !DILexicalBlock(scope: !10947, file: !3, line: 3408, column: 8)
!10947 = distinct !DILexicalBlock(scope: !10943, file: !3, line: 3407, column: 2)
!10948 = !DILocation(line: 3408, column: 8, scope: !10947)
!10949 = !DILocation(line: 3410, column: 47, scope: !10950)
!10950 = distinct !DILexicalBlock(scope: !10946, file: !3, line: 3409, column: 6)
!10951 = !DILocation(line: 3410, column: 38, scope: !10950)
!10952 = !DILocation(line: 3410, column: 26, scope: !10950)
!10953 = !DILocation(line: 3410, column: 15, scope: !10950)
!10954 = !DILocation(line: 3410, column: 13, scope: !10950)
!10955 = !DILocation(line: 3411, column: 19, scope: !10950)
!10956 = !DILocation(line: 3411, column: 8, scope: !10950)
!10957 = !DILocation(line: 3411, column: 14, scope: !10950)
!10958 = !DILocation(line: 3411, column: 17, scope: !10950)
!10959 = !DILocation(line: 3412, column: 8, scope: !10950)
!10960 = !DILocation(line: 3412, column: 14, scope: !10950)
!10961 = !DILocation(line: 3412, column: 23, scope: !10950)
!10962 = !DILocation(line: 3413, column: 8, scope: !10950)
!10963 = !DILocation(line: 3413, column: 14, scope: !10950)
!10964 = !DILocation(line: 3413, column: 26, scope: !10950)
!10965 = !DILocation(line: 3414, column: 8, scope: !10950)
!10966 = !DILocation(line: 3414, column: 14, scope: !10950)
!10967 = !DILocation(line: 3414, column: 30, scope: !10950)
!10968 = !DILocation(line: 3415, column: 8, scope: !10950)
!10969 = !DILocation(line: 3415, column: 14, scope: !10950)
!10970 = !DILocation(line: 3415, column: 35, scope: !10950)
!10971 = !DILocation(line: 3416, column: 8, scope: !10950)
!10972 = !DILocation(line: 3416, column: 14, scope: !10950)
!10973 = !DILocation(line: 3416, column: 26, scope: !10950)
!10974 = !DILocation(line: 3416, column: 33, scope: !10950)
!10975 = !DILocation(line: 3417, column: 38, scope: !10950)
!10976 = !DILocation(line: 3417, column: 8, scope: !10950)
!10977 = !DILocation(line: 3417, column: 14, scope: !10950)
!10978 = !DILocation(line: 3417, column: 26, scope: !10950)
!10979 = !DILocation(line: 3417, column: 36, scope: !10950)
!10980 = !DILocation(line: 3418, column: 8, scope: !10950)
!10981 = !DILocation(line: 3418, column: 14, scope: !10950)
!10982 = !DILocation(line: 3418, column: 26, scope: !10950)
!10983 = !DILocation(line: 3418, column: 34, scope: !10950)
!10984 = !DILocation(line: 3421, column: 39, scope: !10950)
!10985 = !DILocation(line: 3421, column: 44, scope: !10950)
!10986 = !DILocation(line: 3421, column: 50, scope: !10950)
!10987 = !DILocation(line: 3421, column: 54, scope: !10950)
!10988 = !DILocation(line: 3421, column: 5, scope: !10950)
!10989 = !DILocation(line: 3421, column: 3, scope: !10950)
!10990 = !DILocation(line: 3423, column: 8, scope: !10950)
!10991 = !DILocation(line: 3424, column: 19, scope: !10950)
!10992 = !DILocation(line: 3424, column: 9, scope: !10950)
!10993 = !DILocation(line: 3424, column: 17, scope: !10950)
!10994 = !DILocation(line: 3425, column: 6, scope: !10950)
!10995 = !DILocation(line: 3427, column: 6, scope: !10946)
!10996 = !DILocation(line: 3428, column: 2, scope: !10947)
!10997 = !DILocation(line: 3431, column: 12, scope: !10802)
!10998 = !DILocation(line: 3431, column: 18, scope: !10802)
!10999 = !DILocation(line: 3431, column: 30, scope: !10802)
!11000 = !DILocation(line: 3431, column: 9, scope: !10802)
!11001 = !DILocation(line: 3432, column: 3, scope: !10802)
!11002 = !DILocation(line: 3432, column: 19, scope: !10802)
!11003 = !DILocation(line: 3432, column: 18, scope: !10802)
!11004 = !DILocation(line: 3432, column: 16, scope: !10802)
!11005 = !DILocalVariable(name: "nextp", scope: !11006, file: !3, line: 3434, type: !5595)
!11006 = distinct !DILexicalBlock(scope: !10802, file: !3, line: 3433, column: 5)
!11007 = !DILocation(line: 3434, column: 23, scope: !11006)
!11008 = !DILocation(line: 3434, column: 32, scope: !11006)
!11009 = !DILocation(line: 3434, column: 38, scope: !11006)
!11010 = !DILocation(line: 3436, column: 11, scope: !11011)
!11011 = distinct !DILexicalBlock(scope: !11006, file: !3, line: 3436, column: 11)
!11012 = !DILocation(line: 3436, column: 32, scope: !11011)
!11013 = !DILocation(line: 3436, column: 11, scope: !11006)
!11014 = !DILocalVariable(name: "list", scope: !11015, file: !3, line: 3438, type: !2403)
!11015 = distinct !DILexicalBlock(scope: !11011, file: !3, line: 3437, column: 2)
!11016 = !DILocation(line: 3438, column: 10, scope: !11015)
!11017 = !DILocation(line: 3440, column: 16, scope: !11018)
!11018 = distinct !DILexicalBlock(scope: !11015, file: !3, line: 3440, column: 4)
!11019 = !DILocation(line: 3440, column: 21, scope: !11018)
!11020 = !DILocation(line: 3440, column: 26, scope: !11018)
!11021 = !DILocation(line: 3440, column: 14, scope: !11018)
!11022 = !DILocation(line: 3440, column: 9, scope: !11018)
!11023 = !DILocation(line: 3440, column: 46, scope: !11024)
!11024 = distinct !DILexicalBlock(scope: !11018, file: !3, line: 3440, column: 4)
!11025 = !DILocation(line: 3440, column: 4, scope: !11018)
!11026 = !DILocation(line: 3441, column: 10, scope: !11027)
!11027 = distinct !DILexicalBlock(scope: !11024, file: !3, line: 3441, column: 10)
!11028 = !DILocation(line: 3441, column: 34, scope: !11027)
!11029 = !DILocation(line: 3441, column: 31, scope: !11027)
!11030 = !DILocation(line: 3442, column: 3, scope: !11027)
!11031 = !DILocation(line: 3442, column: 21, scope: !11027)
!11032 = !DILocation(line: 3442, column: 27, scope: !11027)
!11033 = !DILocation(line: 3442, column: 6, scope: !11027)
!11034 = !DILocation(line: 3441, column: 10, scope: !11024)
!11035 = !DILocation(line: 3443, column: 8, scope: !11027)
!11036 = !DILocation(line: 3442, column: 29, scope: !11027)
!11037 = !DILocation(line: 3440, column: 59, scope: !11024)
!11038 = !DILocation(line: 3440, column: 65, scope: !11024)
!11039 = !DILocation(line: 3440, column: 57, scope: !11024)
!11040 = !DILocation(line: 3440, column: 4, scope: !11024)
!11041 = distinct !{!11041, !11025, !11042}
!11042 = !DILocation(line: 3443, column: 8, scope: !11018)
!11043 = !DILocation(line: 3445, column: 9, scope: !11044)
!11044 = distinct !DILexicalBlock(scope: !11015, file: !3, line: 3445, column: 8)
!11045 = !DILocation(line: 3445, column: 8, scope: !11015)
!11046 = !DILocation(line: 3446, column: 26, scope: !11044)
!11047 = !DILocation(line: 3446, column: 31, scope: !11044)
!11048 = !DILocation(line: 3446, column: 36, scope: !11044)
!11049 = !DILocation(line: 3447, column: 11, scope: !11044)
!11050 = !DILocation(line: 3447, column: 18, scope: !11044)
!11051 = !DILocation(line: 3447, column: 24, scope: !11044)
!11052 = !DILocation(line: 3446, column: 6, scope: !11044)
!11053 = !DILocation(line: 3450, column: 26, scope: !11054)
!11054 = distinct !DILexicalBlock(scope: !11044, file: !3, line: 3450, column: 13)
!11055 = !DILocation(line: 3450, column: 32, scope: !11054)
!11056 = !DILocation(line: 3450, column: 13, scope: !11054)
!11057 = !DILocation(line: 3450, column: 39, scope: !11054)
!11058 = !DILocation(line: 3450, column: 36, scope: !11054)
!11059 = !DILocation(line: 3450, column: 13, scope: !11044)
!11060 = !DILocation(line: 3452, column: 33, scope: !11061)
!11061 = distinct !DILexicalBlock(scope: !11054, file: !3, line: 3451, column: 6)
!11062 = !DILocation(line: 3452, column: 51, scope: !11061)
!11063 = !DILocation(line: 3452, column: 57, scope: !11061)
!11064 = !DILocation(line: 3452, column: 38, scope: !11061)
!11065 = !DILocation(line: 3453, column: 12, scope: !11061)
!11066 = !DILocation(line: 3453, column: 21, scope: !11061)
!11067 = !DILocation(line: 3454, column: 12, scope: !11061)
!11068 = !DILocation(line: 3454, column: 18, scope: !11061)
!11069 = !DILocation(line: 3452, column: 18, scope: !11061)
!11070 = !DILocation(line: 3452, column: 16, scope: !11061)
!11071 = !DILocation(line: 3455, column: 36, scope: !11061)
!11072 = !DILocation(line: 3455, column: 41, scope: !11061)
!11073 = !DILocation(line: 3455, column: 47, scope: !11061)
!11074 = !DILocation(line: 3455, column: 52, scope: !11061)
!11075 = !DILocation(line: 3455, column: 18, scope: !11061)
!11076 = !DILocation(line: 3455, column: 16, scope: !11061)
!11077 = !DILocation(line: 3464, column: 13, scope: !11078)
!11078 = distinct !DILexicalBlock(scope: !11061, file: !3, line: 3464, column: 12)
!11079 = !DILocation(line: 3464, column: 12, scope: !11078)
!11080 = !DILocation(line: 3464, column: 22, scope: !11078)
!11081 = !DILocation(line: 3464, column: 19, scope: !11078)
!11082 = !DILocation(line: 3464, column: 12, scope: !11061)
!11083 = !DILocation(line: 3465, column: 11, scope: !11078)
!11084 = !DILocation(line: 3465, column: 9, scope: !11078)
!11085 = !DILocation(line: 3465, column: 3, scope: !11078)
!11086 = !DILocation(line: 3466, column: 6, scope: !11061)
!11087 = !DILocation(line: 3467, column: 2, scope: !11015)
!11088 = !DILocation(line: 3471, column: 2, scope: !11011)
!11089 = !DILocation(line: 3472, column: 15, scope: !11006)
!11090 = !DILocation(line: 3472, column: 13, scope: !11006)
!11091 = distinct !{!11091, !11001, !11092}
!11092 = !DILocation(line: 3473, column: 5, scope: !10802)
!11093 = !DILocation(line: 3475, column: 7, scope: !11094)
!11094 = distinct !DILexicalBlock(scope: !10802, file: !3, line: 3475, column: 7)
!11095 = !DILocation(line: 3475, column: 26, scope: !11094)
!11096 = !DILocation(line: 3475, column: 25, scope: !11094)
!11097 = !DILocation(line: 3475, column: 15, scope: !11094)
!11098 = !DILocation(line: 3475, column: 12, scope: !11094)
!11099 = !DILocation(line: 3475, column: 7, scope: !10802)
!11100 = !DILocation(line: 3476, column: 23, scope: !11094)
!11101 = !DILocation(line: 3476, column: 22, scope: !11094)
!11102 = !DILocation(line: 3476, column: 12, scope: !11094)
!11103 = !DILocation(line: 3476, column: 10, scope: !11094)
!11104 = !DILocation(line: 3476, column: 5, scope: !11094)
!11105 = !DILocation(line: 3477, column: 12, scope: !10802)
!11106 = !DILocation(line: 3477, column: 18, scope: !10802)
!11107 = !DILocation(line: 3477, column: 30, scope: !10802)
!11108 = !DILocation(line: 3477, column: 9, scope: !10802)
!11109 = !DILocation(line: 3479, column: 7, scope: !11110)
!11110 = distinct !DILexicalBlock(scope: !10802, file: !3, line: 3479, column: 7)
!11111 = !DILocation(line: 3479, column: 7, scope: !10802)
!11112 = !DILocation(line: 3483, column: 7, scope: !11113)
!11113 = distinct !DILexicalBlock(scope: !11110, file: !3, line: 3480, column: 5)
!11114 = !DILocation(line: 3483, column: 33, scope: !11113)
!11115 = !DILocation(line: 3484, column: 20, scope: !11116)
!11116 = distinct !DILexicalBlock(scope: !11113, file: !3, line: 3484, column: 7)
!11117 = !DILocation(line: 3484, column: 19, scope: !11116)
!11118 = !DILocation(line: 3484, column: 17, scope: !11116)
!11119 = !DILocation(line: 3484, column: 12, scope: !11116)
!11120 = !DILocation(line: 3484, column: 27, scope: !11121)
!11121 = distinct !DILexicalBlock(scope: !11116, file: !3, line: 3484, column: 7)
!11122 = !DILocation(line: 3484, column: 7, scope: !11116)
!11123 = !DILocation(line: 3485, column: 6, scope: !11124)
!11124 = distinct !DILexicalBlock(scope: !11121, file: !3, line: 3485, column: 6)
!11125 = !DILocation(line: 3485, column: 27, scope: !11124)
!11126 = !DILocation(line: 3485, column: 6, scope: !11121)
!11127 = !DILocation(line: 3487, column: 6, scope: !11128)
!11128 = distinct !DILexicalBlock(scope: !11124, file: !3, line: 3486, column: 4)
!11129 = !DILocation(line: 3487, column: 38, scope: !11128)
!11130 = !DILocation(line: 3488, column: 25, scope: !11128)
!11131 = !DILocation(line: 3488, column: 30, scope: !11128)
!11132 = !DILocation(line: 3488, column: 50, scope: !11128)
!11133 = !DILocation(line: 3488, column: 56, scope: !11128)
!11134 = !DILocation(line: 3488, column: 35, scope: !11128)
!11135 = !DILocation(line: 3489, column: 11, scope: !11128)
!11136 = !DILocation(line: 3489, column: 17, scope: !11128)
!11137 = !DILocation(line: 3488, column: 6, scope: !11128)
!11138 = !DILocation(line: 3490, column: 4, scope: !11128)
!11139 = !DILocation(line: 3485, column: 30, scope: !11124)
!11140 = !DILocation(line: 3484, column: 40, scope: !11121)
!11141 = !DILocation(line: 3484, column: 46, scope: !11121)
!11142 = !DILocation(line: 3484, column: 38, scope: !11121)
!11143 = !DILocation(line: 3484, column: 7, scope: !11121)
!11144 = distinct !{!11144, !11122, !11145}
!11145 = !DILocation(line: 3490, column: 4, scope: !11116)
!11146 = !DILocation(line: 3492, column: 51, scope: !11113)
!11147 = !DILocation(line: 3492, column: 56, scope: !11113)
!11148 = !DILocation(line: 3492, column: 62, scope: !11113)
!11149 = !DILocation(line: 3492, column: 66, scope: !11113)
!11150 = !DILocation(line: 3492, column: 17, scope: !11113)
!11151 = !DILocation(line: 3492, column: 15, scope: !11113)
!11152 = !DILocation(line: 3493, column: 7, scope: !11113)
!11153 = !DILocation(line: 3494, column: 33, scope: !11113)
!11154 = !DILocation(line: 3494, column: 42, scope: !11113)
!11155 = !DILocation(line: 3494, column: 7, scope: !11113)
!11156 = !DILocation(line: 3499, column: 25, scope: !11113)
!11157 = !DILocation(line: 3499, column: 24, scope: !11113)
!11158 = !DILocation(line: 3499, column: 14, scope: !11113)
!11159 = !DILocation(line: 3499, column: 12, scope: !11113)
!11160 = !DILocation(line: 3500, column: 5, scope: !11113)
!11161 = !DILocalVariable(name: "has_value", scope: !11162, file: !3, line: 3503, type: !1130)
!11162 = distinct !DILexicalBlock(scope: !11110, file: !3, line: 3502, column: 5)
!11163 = !DILocation(line: 3503, column: 12, scope: !11162)
!11164 = !DILocalVariable(name: "has_other", scope: !11162, file: !3, line: 3503, type: !1130)
!11165 = !DILocation(line: 3503, column: 31, scope: !11162)
!11166 = !DILocation(line: 3508, column: 20, scope: !11167)
!11167 = distinct !DILexicalBlock(scope: !11162, file: !3, line: 3508, column: 7)
!11168 = !DILocation(line: 3508, column: 19, scope: !11167)
!11169 = !DILocation(line: 3508, column: 17, scope: !11167)
!11170 = !DILocation(line: 3508, column: 12, scope: !11167)
!11171 = !DILocation(line: 3508, column: 27, scope: !11172)
!11172 = distinct !DILexicalBlock(scope: !11167, file: !3, line: 3508, column: 7)
!11173 = !DILocation(line: 3508, column: 7, scope: !11167)
!11174 = !DILocation(line: 3510, column: 8, scope: !11175)
!11175 = distinct !DILexicalBlock(scope: !11176, file: !3, line: 3510, column: 8)
!11176 = distinct !DILexicalBlock(scope: !11172, file: !3, line: 3509, column: 2)
!11177 = !DILocation(line: 3510, column: 29, scope: !11175)
!11178 = !DILocation(line: 3510, column: 8, scope: !11176)
!11179 = !DILocation(line: 3514, column: 12, scope: !11180)
!11180 = distinct !DILexicalBlock(scope: !11181, file: !3, line: 3514, column: 12)
!11181 = distinct !DILexicalBlock(scope: !11175, file: !3, line: 3511, column: 6)
!11182 = !DILocation(line: 3514, column: 12, scope: !11181)
!11183 = !DILocation(line: 3515, column: 13, scope: !11180)
!11184 = !DILocation(line: 3515, column: 3, scope: !11180)
!11185 = !DILocation(line: 3516, column: 18, scope: !11181)
!11186 = !DILocation(line: 3517, column: 12, scope: !11187)
!11187 = distinct !DILexicalBlock(scope: !11181, file: !3, line: 3517, column: 12)
!11188 = !DILocation(line: 3517, column: 12, scope: !11181)
!11189 = !DILocation(line: 3518, column: 3, scope: !11187)
!11190 = !DILocation(line: 3519, column: 6, scope: !11181)
!11191 = !DILocation(line: 3522, column: 18, scope: !11192)
!11192 = distinct !DILexicalBlock(scope: !11175, file: !3, line: 3521, column: 6)
!11193 = !DILocation(line: 3523, column: 12, scope: !11194)
!11194 = distinct !DILexicalBlock(scope: !11192, file: !3, line: 3523, column: 12)
!11195 = !DILocation(line: 3523, column: 12, scope: !11192)
!11196 = !DILocation(line: 3524, column: 3, scope: !11194)
!11197 = !DILocation(line: 3526, column: 2, scope: !11176)
!11198 = !DILocation(line: 3508, column: 40, scope: !11172)
!11199 = !DILocation(line: 3508, column: 46, scope: !11172)
!11200 = !DILocation(line: 3508, column: 38, scope: !11172)
!11201 = !DILocation(line: 3508, column: 7, scope: !11172)
!11202 = distinct !{!11202, !11173, !11203}
!11203 = !DILocation(line: 3526, column: 2, scope: !11167)
!11204 = !DILocation(line: 3528, column: 11, scope: !11205)
!11205 = distinct !DILexicalBlock(scope: !11162, file: !3, line: 3528, column: 11)
!11206 = !DILocation(line: 3528, column: 21, scope: !11205)
!11207 = !DILocation(line: 3528, column: 24, scope: !11205)
!11208 = !DILocation(line: 3528, column: 11, scope: !11162)
!11209 = !DILocation(line: 3530, column: 17, scope: !11210)
!11210 = distinct !DILexicalBlock(scope: !11211, file: !3, line: 3530, column: 4)
!11211 = distinct !DILexicalBlock(scope: !11205, file: !3, line: 3529, column: 2)
!11212 = !DILocation(line: 3530, column: 16, scope: !11210)
!11213 = !DILocation(line: 3530, column: 14, scope: !11210)
!11214 = !DILocation(line: 3530, column: 9, scope: !11210)
!11215 = !DILocation(line: 3530, column: 24, scope: !11216)
!11216 = distinct !DILexicalBlock(scope: !11210, file: !3, line: 3530, column: 4)
!11217 = !DILocation(line: 3530, column: 4, scope: !11210)
!11218 = !DILocation(line: 3532, column: 12, scope: !11219)
!11219 = distinct !DILexicalBlock(scope: !11220, file: !3, line: 3532, column: 12)
!11220 = distinct !DILexicalBlock(scope: !11216, file: !3, line: 3531, column: 6)
!11221 = !DILocation(line: 3532, column: 33, scope: !11219)
!11222 = !DILocation(line: 3532, column: 12, scope: !11220)
!11223 = !DILocalVariable(name: "dv", scope: !11224, file: !3, line: 3534, type: !2410)
!11224 = distinct !DILexicalBlock(scope: !11219, file: !3, line: 3533, column: 3)
!11225 = !DILocation(line: 3534, column: 19, scope: !11224)
!11226 = !DILocation(line: 3534, column: 39, scope: !11224)
!11227 = !DILocation(line: 3534, column: 45, scope: !11224)
!11228 = !DILocation(line: 3534, column: 24, scope: !11224)
!11229 = !DILocalVariable(name: "slot", scope: !11224, file: !3, line: 3535, type: !1848)
!11230 = !DILocation(line: 3535, column: 12, scope: !11224)
!11231 = !DILocation(line: 3537, column: 29, scope: !11232)
!11232 = distinct !DILexicalBlock(scope: !11224, file: !3, line: 3537, column: 9)
!11233 = !DILocation(line: 3537, column: 34, scope: !11232)
!11234 = !DILocation(line: 3537, column: 9, scope: !11232)
!11235 = !DILocation(line: 3537, column: 9, scope: !11224)
!11236 = !DILocation(line: 3538, column: 46, scope: !11232)
!11237 = !DILocation(line: 3538, column: 51, scope: !11232)
!11238 = !DILocation(line: 3538, column: 57, scope: !11232)
!11239 = !DILocation(line: 3538, column: 14, scope: !11232)
!11240 = !DILocation(line: 3538, column: 12, scope: !11232)
!11241 = !DILocation(line: 3538, column: 7, scope: !11232)
!11242 = !DILocation(line: 3539, column: 10, scope: !11243)
!11243 = distinct !DILexicalBlock(scope: !11224, file: !3, line: 3539, column: 9)
!11244 = !DILocation(line: 3539, column: 9, scope: !11224)
!11245 = !DILocation(line: 3540, column: 46, scope: !11243)
!11246 = !DILocation(line: 3540, column: 51, scope: !11243)
!11247 = !DILocation(line: 3540, column: 57, scope: !11243)
!11248 = !DILocation(line: 3540, column: 14, scope: !11243)
!11249 = !DILocation(line: 3540, column: 12, scope: !11243)
!11250 = !DILocation(line: 3540, column: 7, scope: !11243)
!11251 = !DILocation(line: 3542, column: 11, scope: !11252)
!11252 = distinct !DILexicalBlock(scope: !11224, file: !3, line: 3542, column: 9)
!11253 = !DILocation(line: 3542, column: 10, scope: !11252)
!11254 = !DILocation(line: 3542, column: 9, scope: !11224)
!11255 = !DILocalVariable(name: "var", scope: !11256, file: !3, line: 3544, type: !2447)
!11256 = distinct !DILexicalBlock(scope: !11252, file: !3, line: 3543, column: 7)
!11257 = !DILocation(line: 3544, column: 18, scope: !11256)
!11258 = !DILocation(line: 3544, column: 56, scope: !11256)
!11259 = !DILocation(line: 3544, column: 47, scope: !11256)
!11260 = !DILocation(line: 3544, column: 35, scope: !11256)
!11261 = !DILocation(line: 3544, column: 24, scope: !11256)
!11262 = !DILocation(line: 3545, column: 19, scope: !11256)
!11263 = !DILocation(line: 3545, column: 9, scope: !11256)
!11264 = !DILocation(line: 3545, column: 14, scope: !11256)
!11265 = !DILocation(line: 3545, column: 17, scope: !11256)
!11266 = !DILocation(line: 3546, column: 9, scope: !11256)
!11267 = !DILocation(line: 3546, column: 14, scope: !11256)
!11268 = !DILocation(line: 3546, column: 23, scope: !11256)
!11269 = !DILocation(line: 3547, column: 9, scope: !11256)
!11270 = !DILocation(line: 3547, column: 14, scope: !11256)
!11271 = !DILocation(line: 3547, column: 26, scope: !11256)
!11272 = !DILocation(line: 3548, column: 9, scope: !11256)
!11273 = !DILocation(line: 3548, column: 14, scope: !11256)
!11274 = !DILocation(line: 3548, column: 30, scope: !11256)
!11275 = !DILocation(line: 3549, column: 9, scope: !11256)
!11276 = !DILocation(line: 3549, column: 14, scope: !11256)
!11277 = !DILocation(line: 3549, column: 35, scope: !11256)
!11278 = !DILocation(line: 3550, column: 9, scope: !11256)
!11279 = !DILocation(line: 3550, column: 14, scope: !11256)
!11280 = !DILocation(line: 3550, column: 26, scope: !11256)
!11281 = !DILocation(line: 3550, column: 33, scope: !11256)
!11282 = !DILocation(line: 3551, column: 9, scope: !11256)
!11283 = !DILocation(line: 3551, column: 14, scope: !11256)
!11284 = !DILocation(line: 3551, column: 26, scope: !11256)
!11285 = !DILocation(line: 3551, column: 36, scope: !11256)
!11286 = !DILocation(line: 3552, column: 9, scope: !11256)
!11287 = !DILocation(line: 3552, column: 14, scope: !11256)
!11288 = !DILocation(line: 3552, column: 26, scope: !11256)
!11289 = !DILocation(line: 3552, column: 34, scope: !11256)
!11290 = !DILocation(line: 3553, column: 17, scope: !11256)
!11291 = !DILocation(line: 3553, column: 10, scope: !11256)
!11292 = !DILocation(line: 3553, column: 15, scope: !11256)
!11293 = !DILocation(line: 3554, column: 7, scope: !11256)
!11294 = !DILocation(line: 3556, column: 5, scope: !11224)
!11295 = !DILocation(line: 3556, column: 37, scope: !11224)
!11296 = !DILocation(line: 3557, column: 3, scope: !11224)
!11297 = !DILocation(line: 3558, column: 6, scope: !11220)
!11298 = !DILocation(line: 3530, column: 37, scope: !11216)
!11299 = !DILocation(line: 3530, column: 43, scope: !11216)
!11300 = !DILocation(line: 3530, column: 35, scope: !11216)
!11301 = !DILocation(line: 3530, column: 4, scope: !11216)
!11302 = distinct !{!11302, !11217, !11303}
!11303 = !DILocation(line: 3558, column: 6, scope: !11210)
!11304 = !DILocation(line: 3560, column: 48, scope: !11211)
!11305 = !DILocation(line: 3560, column: 53, scope: !11211)
!11306 = !DILocation(line: 3560, column: 59, scope: !11211)
!11307 = !DILocation(line: 3560, column: 63, scope: !11211)
!11308 = !DILocation(line: 3560, column: 14, scope: !11211)
!11309 = !DILocation(line: 3560, column: 12, scope: !11211)
!11310 = !DILocation(line: 3561, column: 4, scope: !11211)
!11311 = !DILocation(line: 3562, column: 30, scope: !11211)
!11312 = !DILocation(line: 3562, column: 39, scope: !11211)
!11313 = !DILocation(line: 3562, column: 4, scope: !11211)
!11314 = !DILocation(line: 3568, column: 22, scope: !11211)
!11315 = !DILocation(line: 3568, column: 21, scope: !11211)
!11316 = !DILocation(line: 3568, column: 11, scope: !11211)
!11317 = !DILocation(line: 3568, column: 9, scope: !11211)
!11318 = !DILocation(line: 3569, column: 2, scope: !11211)
!11319 = !DILocation(line: 3572, column: 38, scope: !11320)
!11320 = distinct !DILexicalBlock(scope: !10802, file: !3, line: 3572, column: 7)
!11321 = !DILocation(line: 3572, column: 44, scope: !11320)
!11322 = !DILocation(line: 3572, column: 8, scope: !11320)
!11323 = !DILocation(line: 3572, column: 7, scope: !10802)
!11324 = !DILocation(line: 3574, column: 27, scope: !11325)
!11325 = distinct !DILexicalBlock(scope: !11320, file: !3, line: 3573, column: 5)
!11326 = !DILocation(line: 3574, column: 7, scope: !11325)
!11327 = !DILocation(line: 3575, column: 25, scope: !11325)
!11328 = !DILocation(line: 3575, column: 23, scope: !11325)
!11329 = !DILocation(line: 3575, column: 18, scope: !11325)
!11330 = !DILocation(line: 3575, column: 8, scope: !11325)
!11331 = !DILocation(line: 3575, column: 16, scope: !11325)
!11332 = !DILocation(line: 3576, column: 7, scope: !11325)
!11333 = !DILocation(line: 3576, column: 13, scope: !11325)
!11334 = !DILocation(line: 3576, column: 21, scope: !11325)
!11335 = !DILocation(line: 3577, column: 5, scope: !11325)
!11336 = !DILocation(line: 3578, column: 12, scope: !11337)
!11337 = distinct !DILexicalBlock(scope: !11320, file: !3, line: 3578, column: 12)
!11338 = !DILocation(line: 3578, column: 21, scope: !11337)
!11339 = !DILocation(line: 3578, column: 18, scope: !11337)
!11340 = !DILocation(line: 3578, column: 27, scope: !11337)
!11341 = !DILocation(line: 3578, column: 61, scope: !11337)
!11342 = !DILocation(line: 3578, column: 67, scope: !11337)
!11343 = !DILocation(line: 3578, column: 31, scope: !11337)
!11344 = !DILocation(line: 3578, column: 12, scope: !11320)
!11345 = !DILocation(line: 3580, column: 27, scope: !11346)
!11346 = distinct !DILexicalBlock(scope: !11337, file: !3, line: 3579, column: 5)
!11347 = !DILocation(line: 3580, column: 7, scope: !11346)
!11348 = !DILocation(line: 3581, column: 25, scope: !11346)
!11349 = !DILocation(line: 3581, column: 23, scope: !11346)
!11350 = !DILocation(line: 3581, column: 18, scope: !11346)
!11351 = !DILocation(line: 3581, column: 8, scope: !11346)
!11352 = !DILocation(line: 3581, column: 16, scope: !11346)
!11353 = !DILocation(line: 3582, column: 7, scope: !11346)
!11354 = !DILocation(line: 3582, column: 13, scope: !11346)
!11355 = !DILocation(line: 3582, column: 21, scope: !11346)
!11356 = !DILocation(line: 3583, column: 25, scope: !11346)
!11357 = !DILocation(line: 3584, column: 5, scope: !11346)
!11358 = !DILocation(line: 3586, column: 23, scope: !11337)
!11359 = !DILocation(line: 3588, column: 3, scope: !10802)
!11360 = !DILocation(line: 3589, column: 1, scope: !10802)
!11361 = distinct !DISubprogram(name: "attrs_list_member", scope: !3, file: !3, line: 1244, type: !11362, scopeLine: 1245, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!11362 = !DISubroutineType(types: !11363)
!11363 = !{!2403, !2403, !2410, !1067}
!11364 = !DILocalVariable(name: "list", arg: 1, scope: !11361, file: !3, line: 1244, type: !2403)
!11365 = !DILocation(line: 1244, column: 26, scope: !11361)
!11366 = !DILocalVariable(name: "dv", arg: 2, scope: !11361, file: !3, line: 1244, type: !2410)
!11367 = !DILocation(line: 1244, column: 46, scope: !11361)
!11368 = !DILocalVariable(name: "offset", arg: 3, scope: !11361, file: !3, line: 1244, type: !1067)
!11369 = !DILocation(line: 1244, column: 64, scope: !11361)
!11370 = !DILocation(line: 1246, column: 3, scope: !11361)
!11371 = !DILocation(line: 1246, column: 10, scope: !11372)
!11372 = distinct !DILexicalBlock(scope: !11373, file: !3, line: 1246, column: 3)
!11373 = distinct !DILexicalBlock(scope: !11361, file: !3, line: 1246, column: 3)
!11374 = !DILocation(line: 1246, column: 3, scope: !11373)
!11375 = !DILocation(line: 1247, column: 23, scope: !11376)
!11376 = distinct !DILexicalBlock(scope: !11372, file: !3, line: 1247, column: 9)
!11377 = !DILocation(line: 1247, column: 29, scope: !11376)
!11378 = !DILocation(line: 1247, column: 9, scope: !11376)
!11379 = !DILocation(line: 1247, column: 50, scope: !11376)
!11380 = !DILocation(line: 1247, column: 36, scope: !11376)
!11381 = !DILocation(line: 1247, column: 33, scope: !11376)
!11382 = !DILocation(line: 1247, column: 54, scope: !11376)
!11383 = !DILocation(line: 1247, column: 57, scope: !11376)
!11384 = !DILocation(line: 1247, column: 63, scope: !11376)
!11385 = !DILocation(line: 1247, column: 73, scope: !11376)
!11386 = !DILocation(line: 1247, column: 70, scope: !11376)
!11387 = !DILocation(line: 1247, column: 9, scope: !11372)
!11388 = !DILocation(line: 1248, column: 14, scope: !11376)
!11389 = !DILocation(line: 1248, column: 7, scope: !11376)
!11390 = !DILocation(line: 1246, column: 23, scope: !11372)
!11391 = !DILocation(line: 1246, column: 29, scope: !11372)
!11392 = !DILocation(line: 1246, column: 21, scope: !11372)
!11393 = !DILocation(line: 1246, column: 3, scope: !11372)
!11394 = distinct !{!11394, !11374, !11395}
!11395 = !DILocation(line: 1248, column: 14, scope: !11373)
!11396 = !DILocation(line: 1249, column: 3, scope: !11361)
!11397 = !DILocation(line: 1250, column: 1, scope: !11361)
!11398 = distinct !DISubprogram(name: "variable_union", scope: !3, file: !3, line: 2072, type: !6290, scopeLine: 2073, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!11399 = !DILocalVariable(name: "slot", arg: 1, scope: !11398, file: !3, line: 2072, type: !1848)
!11400 = !DILocation(line: 2072, column: 24, scope: !11398)
!11401 = !DILocalVariable(name: "data", arg: 2, scope: !11398, file: !3, line: 2072, type: !1313)
!11402 = !DILocation(line: 2072, column: 36, scope: !11398)
!11403 = !DILocalVariable(name: "src", scope: !11398, file: !3, line: 2074, type: !2447)
!11404 = !DILocation(line: 2074, column: 12, scope: !11398)
!11405 = !DILocalVariable(name: "dst", scope: !11398, file: !3, line: 2074, type: !2447)
!11406 = !DILocation(line: 2074, column: 17, scope: !11398)
!11407 = !DILocalVariable(name: "dstp", scope: !11398, file: !3, line: 2075, type: !1848)
!11408 = !DILocation(line: 2075, column: 10, scope: !11398)
!11409 = !DILocalVariable(name: "set", scope: !11398, file: !3, line: 2076, type: !2418)
!11410 = !DILocation(line: 2076, column: 17, scope: !11398)
!11411 = !DILocation(line: 2076, column: 40, scope: !11398)
!11412 = !DILocation(line: 2076, column: 23, scope: !11398)
!11413 = !DILocalVariable(name: "i", scope: !11398, file: !3, line: 2077, type: !1010)
!11414 = !DILocation(line: 2077, column: 7, scope: !11398)
!11415 = !DILocalVariable(name: "j", scope: !11398, file: !3, line: 2077, type: !1010)
!11416 = !DILocation(line: 2077, column: 10, scope: !11398)
!11417 = !DILocalVariable(name: "k", scope: !11398, file: !3, line: 2077, type: !1010)
!11418 = !DILocation(line: 2077, column: 13, scope: !11398)
!11419 = !DILocation(line: 2079, column: 21, scope: !11398)
!11420 = !DILocation(line: 2079, column: 20, scope: !11398)
!11421 = !DILocation(line: 2079, column: 9, scope: !11398)
!11422 = !DILocation(line: 2079, column: 7, scope: !11398)
!11423 = !DILocation(line: 2080, column: 33, scope: !11398)
!11424 = !DILocation(line: 2080, column: 38, scope: !11398)
!11425 = !DILocation(line: 2080, column: 44, scope: !11398)
!11426 = !DILocation(line: 2080, column: 49, scope: !11398)
!11427 = !DILocation(line: 2080, column: 10, scope: !11398)
!11428 = !DILocation(line: 2080, column: 8, scope: !11398)
!11429 = !DILocation(line: 2081, column: 8, scope: !11430)
!11430 = distinct !DILexicalBlock(scope: !11398, file: !3, line: 2081, column: 7)
!11431 = !DILocation(line: 2081, column: 13, scope: !11430)
!11432 = !DILocation(line: 2081, column: 18, scope: !11430)
!11433 = !DILocation(line: 2081, column: 17, scope: !11430)
!11434 = !DILocation(line: 2081, column: 7, scope: !11398)
!11435 = !DILocation(line: 2083, column: 7, scope: !11436)
!11436 = distinct !DILexicalBlock(scope: !11430, file: !3, line: 2082, column: 5)
!11437 = !DILocation(line: 2083, column: 12, scope: !11436)
!11438 = !DILocation(line: 2083, column: 20, scope: !11436)
!11439 = !DILocation(line: 2085, column: 25, scope: !11436)
!11440 = !DILocation(line: 2086, column: 12, scope: !11441)
!11441 = distinct !DILexicalBlock(scope: !11436, file: !3, line: 2086, column: 11)
!11442 = !DILocation(line: 2086, column: 11, scope: !11436)
!11443 = !DILocation(line: 2087, column: 41, scope: !11441)
!11444 = !DILocation(line: 2087, column: 46, scope: !11441)
!11445 = !DILocation(line: 2087, column: 52, scope: !11441)
!11446 = !DILocation(line: 2087, column: 57, scope: !11441)
!11447 = !DILocation(line: 2087, column: 9, scope: !11441)
!11448 = !DILocation(line: 2087, column: 7, scope: !11441)
!11449 = !DILocation(line: 2087, column: 2, scope: !11441)
!11450 = !DILocation(line: 2089, column: 15, scope: !11436)
!11451 = !DILocation(line: 2089, column: 8, scope: !11436)
!11452 = !DILocation(line: 2089, column: 13, scope: !11436)
!11453 = !DILocation(line: 2092, column: 7, scope: !11436)
!11454 = !DILocation(line: 2095, column: 23, scope: !11430)
!11455 = !DILocation(line: 2095, column: 22, scope: !11430)
!11456 = !DILocation(line: 2095, column: 11, scope: !11430)
!11457 = !DILocation(line: 2095, column: 9, scope: !11430)
!11458 = !DILocation(line: 2097, column: 3, scope: !11398)
!11459 = !DILocation(line: 2101, column: 21, scope: !11460)
!11460 = distinct !DILexicalBlock(scope: !11398, file: !3, line: 2101, column: 7)
!11461 = !DILocation(line: 2101, column: 26, scope: !11460)
!11462 = !DILocation(line: 2101, column: 7, scope: !11460)
!11463 = !DILocation(line: 2101, column: 7, scope: !11398)
!11464 = !DILocalVariable(name: "nodep", scope: !11465, file: !3, line: 2103, type: !5595)
!11465 = distinct !DILexicalBlock(scope: !11460, file: !3, line: 2102, column: 5)
!11466 = !DILocation(line: 2103, column: 23, scope: !11465)
!11467 = !DILocalVariable(name: "dnode", scope: !11465, file: !3, line: 2103, type: !2437)
!11468 = !DILocation(line: 2103, column: 30, scope: !11465)
!11469 = !DILocalVariable(name: "snode", scope: !11465, file: !3, line: 2103, type: !2437)
!11470 = !DILocation(line: 2103, column: 37, scope: !11465)
!11471 = !DILocation(line: 2105, column: 7, scope: !11465)
!11472 = !DILocation(line: 2106, column: 7, scope: !11465)
!11473 = !DILocation(line: 2108, column: 15, scope: !11465)
!11474 = !DILocation(line: 2108, column: 20, scope: !11465)
!11475 = !DILocation(line: 2108, column: 32, scope: !11465)
!11476 = !DILocation(line: 2108, column: 13, scope: !11465)
!11477 = !DILocation(line: 2109, column: 7, scope: !11465)
!11478 = !DILabel(scope: !11465, name: "restart_onepart_unshared", file: !3, line: 2111)
!11479 = !DILocation(line: 2111, column: 5, scope: !11465)
!11480 = !DILocation(line: 2112, column: 16, scope: !11465)
!11481 = !DILocation(line: 2112, column: 21, scope: !11465)
!11482 = !DILocation(line: 2112, column: 33, scope: !11465)
!11483 = !DILocation(line: 2112, column: 13, scope: !11465)
!11484 = !DILocation(line: 2113, column: 16, scope: !11465)
!11485 = !DILocation(line: 2113, column: 15, scope: !11465)
!11486 = !DILocation(line: 2113, column: 13, scope: !11465)
!11487 = !DILocation(line: 2114, column: 7, scope: !11465)
!11488 = !DILocation(line: 2116, column: 7, scope: !11465)
!11489 = !DILocation(line: 2116, column: 14, scope: !11465)
!11490 = !DILocalVariable(name: "r", scope: !11491, file: !3, line: 2118, type: !1010)
!11491 = distinct !DILexicalBlock(scope: !11465, file: !3, line: 2117, column: 2)
!11492 = !DILocation(line: 2118, column: 8, scope: !11491)
!11493 = !DILocation(line: 2118, column: 12, scope: !11491)
!11494 = !DILocation(line: 2118, column: 29, scope: !11491)
!11495 = !DILocation(line: 2118, column: 36, scope: !11491)
!11496 = !DILocation(line: 2118, column: 41, scope: !11491)
!11497 = !DILocation(line: 2118, column: 48, scope: !11491)
!11498 = !DILocation(line: 2118, column: 20, scope: !11491)
!11499 = !DILocation(line: 2120, column: 8, scope: !11500)
!11500 = distinct !DILexicalBlock(scope: !11491, file: !3, line: 2120, column: 8)
!11501 = !DILocation(line: 2120, column: 10, scope: !11500)
!11502 = !DILocation(line: 2120, column: 8, scope: !11491)
!11503 = !DILocalVariable(name: "nnode", scope: !11504, file: !3, line: 2122, type: !2437)
!11504 = distinct !DILexicalBlock(scope: !11500, file: !3, line: 2121, column: 6)
!11505 = !DILocation(line: 2122, column: 23, scope: !11504)
!11506 = !DILocation(line: 2124, column: 26, scope: !11507)
!11507 = distinct !DILexicalBlock(scope: !11504, file: !3, line: 2124, column: 12)
!11508 = !DILocation(line: 2124, column: 31, scope: !11507)
!11509 = !DILocation(line: 2124, column: 36, scope: !11507)
!11510 = !DILocation(line: 2124, column: 12, scope: !11507)
!11511 = !DILocation(line: 2124, column: 12, scope: !11504)
!11512 = !DILocation(line: 2126, column: 30, scope: !11513)
!11513 = distinct !DILexicalBlock(scope: !11507, file: !3, line: 2125, column: 3)
!11514 = !DILocation(line: 2126, column: 35, scope: !11513)
!11515 = !DILocation(line: 2126, column: 41, scope: !11513)
!11516 = !DILocation(line: 2126, column: 12, scope: !11513)
!11517 = !DILocation(line: 2126, column: 10, scope: !11513)
!11518 = !DILocation(line: 2128, column: 22, scope: !11513)
!11519 = !DILocation(line: 2128, column: 21, scope: !11513)
!11520 = !DILocation(line: 2128, column: 11, scope: !11513)
!11521 = !DILocation(line: 2128, column: 9, scope: !11513)
!11522 = !DILocation(line: 2129, column: 5, scope: !11513)
!11523 = !DILocation(line: 2132, column: 54, scope: !11504)
!11524 = !DILocation(line: 2132, column: 42, scope: !11504)
!11525 = !DILocation(line: 2132, column: 25, scope: !11504)
!11526 = !DILocation(line: 2132, column: 23, scope: !11504)
!11527 = !DILocation(line: 2132, column: 9, scope: !11504)
!11528 = !DILocation(line: 2132, column: 15, scope: !11504)
!11529 = !DILocation(line: 2133, column: 21, scope: !11504)
!11530 = !DILocation(line: 2133, column: 28, scope: !11504)
!11531 = !DILocation(line: 2133, column: 8, scope: !11504)
!11532 = !DILocation(line: 2133, column: 15, scope: !11504)
!11533 = !DILocation(line: 2133, column: 19, scope: !11504)
!11534 = !DILocation(line: 2134, column: 22, scope: !11504)
!11535 = !DILocation(line: 2134, column: 29, scope: !11504)
!11536 = !DILocation(line: 2134, column: 8, scope: !11504)
!11537 = !DILocation(line: 2134, column: 15, scope: !11504)
!11538 = !DILocation(line: 2134, column: 20, scope: !11504)
!11539 = !DILocation(line: 2135, column: 13, scope: !11540)
!11540 = distinct !DILexicalBlock(scope: !11504, file: !3, line: 2135, column: 12)
!11541 = !DILocation(line: 2135, column: 20, scope: !11540)
!11542 = !DILocation(line: 2135, column: 28, scope: !11540)
!11543 = !DILocation(line: 2135, column: 31, scope: !11540)
!11544 = !DILocation(line: 2135, column: 12, scope: !11504)
!11545 = !DILocation(line: 2136, column: 3, scope: !11540)
!11546 = !DILocation(line: 2136, column: 10, scope: !11540)
!11547 = !DILocation(line: 2136, column: 18, scope: !11540)
!11548 = !DILocation(line: 2138, column: 20, scope: !11540)
!11549 = !DILocation(line: 2138, column: 27, scope: !11540)
!11550 = !DILocation(line: 2138, column: 3, scope: !11540)
!11551 = !DILocation(line: 2138, column: 10, scope: !11540)
!11552 = !DILocation(line: 2138, column: 18, scope: !11540)
!11553 = !DILocation(line: 2139, column: 22, scope: !11504)
!11554 = !DILocation(line: 2139, column: 8, scope: !11504)
!11555 = !DILocation(line: 2139, column: 15, scope: !11504)
!11556 = !DILocation(line: 2139, column: 20, scope: !11504)
!11557 = !DILocation(line: 2140, column: 16, scope: !11504)
!11558 = !DILocation(line: 2140, column: 14, scope: !11504)
!11559 = !DILocation(line: 2141, column: 6, scope: !11504)
!11560 = !DILocation(line: 2147, column: 8, scope: !11561)
!11561 = distinct !DILexicalBlock(scope: !11491, file: !3, line: 2147, column: 8)
!11562 = !DILocation(line: 2147, column: 10, scope: !11561)
!11563 = !DILocation(line: 2147, column: 8, scope: !11491)
!11564 = !DILocation(line: 2148, column: 14, scope: !11561)
!11565 = !DILocation(line: 2148, column: 21, scope: !11561)
!11566 = !DILocation(line: 2148, column: 12, scope: !11561)
!11567 = !DILocation(line: 2148, column: 6, scope: !11561)
!11568 = !DILocation(line: 2150, column: 13, scope: !11491)
!11569 = !DILocation(line: 2150, column: 20, scope: !11491)
!11570 = !DILocation(line: 2150, column: 10, scope: !11491)
!11571 = !DILocation(line: 2151, column: 13, scope: !11491)
!11572 = !DILocation(line: 2151, column: 12, scope: !11491)
!11573 = !DILocation(line: 2151, column: 10, scope: !11491)
!11574 = distinct !{!11574, !11488, !11575}
!11575 = !DILocation(line: 2152, column: 2, scope: !11465)
!11576 = !DILocation(line: 2154, column: 7, scope: !11465)
!11577 = !DILocation(line: 2158, column: 10, scope: !11578)
!11578 = distinct !DILexicalBlock(scope: !11398, file: !3, line: 2158, column: 3)
!11579 = !DILocation(line: 2158, column: 17, scope: !11578)
!11580 = !DILocation(line: 2158, column: 24, scope: !11578)
!11581 = !DILocation(line: 2158, column: 8, scope: !11578)
!11582 = !DILocation(line: 2159, column: 8, scope: !11583)
!11583 = distinct !DILexicalBlock(scope: !11578, file: !3, line: 2158, column: 3)
!11584 = !DILocation(line: 2159, column: 12, scope: !11583)
!11585 = !DILocation(line: 2159, column: 17, scope: !11583)
!11586 = !DILocation(line: 2159, column: 10, scope: !11583)
!11587 = !DILocation(line: 2159, column: 29, scope: !11583)
!11588 = !DILocation(line: 2159, column: 32, scope: !11583)
!11589 = !DILocation(line: 2159, column: 36, scope: !11583)
!11590 = !DILocation(line: 2159, column: 41, scope: !11583)
!11591 = !DILocation(line: 2159, column: 34, scope: !11583)
!11592 = !DILocation(line: 0, scope: !11583)
!11593 = !DILocation(line: 2158, column: 3, scope: !11578)
!11594 = !DILocation(line: 2161, column: 11, scope: !11595)
!11595 = distinct !DILexicalBlock(scope: !11596, file: !3, line: 2161, column: 11)
!11596 = distinct !DILexicalBlock(scope: !11583, file: !3, line: 2160, column: 5)
!11597 = !DILocation(line: 2161, column: 16, scope: !11595)
!11598 = !DILocation(line: 2161, column: 25, scope: !11595)
!11599 = !DILocation(line: 2161, column: 28, scope: !11595)
!11600 = !DILocation(line: 2161, column: 38, scope: !11595)
!11601 = !DILocation(line: 2161, column: 43, scope: !11595)
!11602 = !DILocation(line: 2161, column: 52, scope: !11595)
!11603 = !DILocation(line: 2161, column: 55, scope: !11595)
!11604 = !DILocation(line: 2161, column: 35, scope: !11595)
!11605 = !DILocation(line: 2161, column: 11, scope: !11596)
!11606 = !DILocation(line: 2163, column: 5, scope: !11607)
!11607 = distinct !DILexicalBlock(scope: !11595, file: !3, line: 2162, column: 2)
!11608 = !DILocation(line: 2164, column: 5, scope: !11607)
!11609 = !DILocation(line: 2165, column: 2, scope: !11607)
!11610 = !DILocation(line: 2166, column: 16, scope: !11611)
!11611 = distinct !DILexicalBlock(scope: !11595, file: !3, line: 2166, column: 16)
!11612 = !DILocation(line: 2166, column: 21, scope: !11611)
!11613 = !DILocation(line: 2166, column: 30, scope: !11611)
!11614 = !DILocation(line: 2166, column: 33, scope: !11611)
!11615 = !DILocation(line: 2166, column: 42, scope: !11611)
!11616 = !DILocation(line: 2166, column: 47, scope: !11611)
!11617 = !DILocation(line: 2166, column: 56, scope: !11611)
!11618 = !DILocation(line: 2166, column: 59, scope: !11611)
!11619 = !DILocation(line: 2166, column: 40, scope: !11611)
!11620 = !DILocation(line: 2166, column: 16, scope: !11595)
!11621 = !DILocation(line: 2167, column: 3, scope: !11611)
!11622 = !DILocation(line: 2167, column: 2, scope: !11611)
!11623 = !DILocation(line: 2169, column: 3, scope: !11611)
!11624 = !DILocation(line: 2170, column: 5, scope: !11596)
!11625 = !DILocation(line: 2159, column: 55, scope: !11583)
!11626 = !DILocation(line: 2158, column: 3, scope: !11583)
!11627 = distinct !{!11627, !11593, !11628}
!11628 = !DILocation(line: 2170, column: 5, scope: !11578)
!11629 = !DILocation(line: 2171, column: 8, scope: !11398)
!11630 = !DILocation(line: 2171, column: 13, scope: !11398)
!11631 = !DILocation(line: 2171, column: 27, scope: !11398)
!11632 = !DILocation(line: 2171, column: 25, scope: !11398)
!11633 = !DILocation(line: 2171, column: 5, scope: !11398)
!11634 = !DILocation(line: 2172, column: 8, scope: !11398)
!11635 = !DILocation(line: 2172, column: 13, scope: !11398)
!11636 = !DILocation(line: 2172, column: 27, scope: !11398)
!11637 = !DILocation(line: 2172, column: 25, scope: !11398)
!11638 = !DILocation(line: 2172, column: 5, scope: !11398)
!11639 = !DILocation(line: 2176, column: 3, scope: !11398)
!11640 = !DILocation(line: 2178, column: 7, scope: !11641)
!11641 = distinct !DILexicalBlock(scope: !11398, file: !3, line: 2178, column: 7)
!11642 = !DILocation(line: 2178, column: 12, scope: !11641)
!11643 = !DILocation(line: 2178, column: 27, scope: !11641)
!11644 = !DILocation(line: 2178, column: 24, scope: !11641)
!11645 = !DILocation(line: 2178, column: 29, scope: !11641)
!11646 = !DILocation(line: 2178, column: 46, scope: !11641)
!11647 = !DILocation(line: 2178, column: 51, scope: !11641)
!11648 = !DILocation(line: 2178, column: 56, scope: !11641)
!11649 = !DILocation(line: 2178, column: 32, scope: !11641)
!11650 = !DILocation(line: 2178, column: 7, scope: !11398)
!11651 = !DILocation(line: 2180, column: 32, scope: !11652)
!11652 = distinct !DILexicalBlock(scope: !11641, file: !3, line: 2179, column: 5)
!11653 = !DILocation(line: 2180, column: 37, scope: !11652)
!11654 = !DILocation(line: 2180, column: 43, scope: !11652)
!11655 = !DILocation(line: 2180, column: 14, scope: !11652)
!11656 = !DILocation(line: 2180, column: 12, scope: !11652)
!11657 = !DILocation(line: 2181, column: 24, scope: !11652)
!11658 = !DILocation(line: 2181, column: 23, scope: !11652)
!11659 = !DILocation(line: 2181, column: 13, scope: !11652)
!11660 = !DILocation(line: 2181, column: 11, scope: !11652)
!11661 = !DILocation(line: 2182, column: 5, scope: !11652)
!11662 = !DILocation(line: 2184, column: 7, scope: !11398)
!11663 = !DILocation(line: 2184, column: 12, scope: !11398)
!11664 = !DILocation(line: 2184, column: 24, scope: !11398)
!11665 = !DILocation(line: 2184, column: 5, scope: !11398)
!11666 = !DILocation(line: 2185, column: 7, scope: !11398)
!11667 = !DILocation(line: 2185, column: 12, scope: !11398)
!11668 = !DILocation(line: 2185, column: 24, scope: !11398)
!11669 = !DILocation(line: 2185, column: 5, scope: !11398)
!11670 = !DILocation(line: 2186, column: 22, scope: !11398)
!11671 = !DILocation(line: 2186, column: 3, scope: !11398)
!11672 = !DILocation(line: 2186, column: 8, scope: !11398)
!11673 = !DILocation(line: 2186, column: 20, scope: !11398)
!11674 = !DILocation(line: 2188, column: 9, scope: !11675)
!11675 = distinct !DILexicalBlock(scope: !11398, file: !3, line: 2188, column: 3)
!11676 = !DILocation(line: 2188, column: 8, scope: !11675)
!11677 = !DILocation(line: 2188, column: 13, scope: !11678)
!11678 = distinct !DILexicalBlock(scope: !11675, file: !3, line: 2188, column: 3)
!11679 = !DILocation(line: 2188, column: 15, scope: !11678)
!11680 = !DILocation(line: 2188, column: 3, scope: !11675)
!11681 = !DILocalVariable(name: "node", scope: !11682, file: !3, line: 2190, type: !2437)
!11682 = distinct !DILexicalBlock(scope: !11678, file: !3, line: 2189, column: 5)
!11683 = !DILocation(line: 2190, column: 22, scope: !11682)
!11684 = !DILocalVariable(name: "node2", scope: !11682, file: !3, line: 2190, type: !2437)
!11685 = !DILocation(line: 2190, column: 28, scope: !11682)
!11686 = !DILocation(line: 2192, column: 11, scope: !11687)
!11687 = distinct !DILexicalBlock(scope: !11682, file: !3, line: 2192, column: 11)
!11688 = !DILocation(line: 2192, column: 13, scope: !11687)
!11689 = !DILocation(line: 2192, column: 18, scope: !11687)
!11690 = !DILocation(line: 2192, column: 21, scope: !11687)
!11691 = !DILocation(line: 2192, column: 23, scope: !11687)
!11692 = !DILocation(line: 2193, column: 4, scope: !11687)
!11693 = !DILocation(line: 2193, column: 7, scope: !11687)
!11694 = !DILocation(line: 2193, column: 12, scope: !11687)
!11695 = !DILocation(line: 2193, column: 21, scope: !11687)
!11696 = !DILocation(line: 2193, column: 24, scope: !11687)
!11697 = !DILocation(line: 2193, column: 34, scope: !11687)
!11698 = !DILocation(line: 2193, column: 39, scope: !11687)
!11699 = !DILocation(line: 2193, column: 48, scope: !11687)
!11700 = !DILocation(line: 2193, column: 51, scope: !11687)
!11701 = !DILocation(line: 2193, column: 31, scope: !11687)
!11702 = !DILocation(line: 2192, column: 11, scope: !11682)
!11703 = !DILocalVariable(name: "dst_l", scope: !11704, file: !3, line: 2198, type: !1010)
!11704 = distinct !DILexicalBlock(scope: !11687, file: !3, line: 2194, column: 2)
!11705 = !DILocation(line: 2198, column: 8, scope: !11704)
!11706 = !DILocalVariable(name: "src_l", scope: !11704, file: !3, line: 2198, type: !1010)
!11707 = !DILocation(line: 2198, column: 15, scope: !11704)
!11708 = !DILocalVariable(name: "ii", scope: !11704, file: !3, line: 2199, type: !1010)
!11709 = !DILocation(line: 2199, column: 8, scope: !11704)
!11710 = !DILocalVariable(name: "jj", scope: !11704, file: !3, line: 2199, type: !1010)
!11711 = !DILocation(line: 2199, column: 12, scope: !11704)
!11712 = !DILocalVariable(name: "n", scope: !11704, file: !3, line: 2199, type: !1010)
!11713 = !DILocation(line: 2199, column: 16, scope: !11704)
!11714 = !DILocalVariable(name: "vui", scope: !11704, file: !3, line: 2200, type: !2504)
!11715 = !DILocation(line: 2200, column: 32, scope: !11704)
!11716 = !DILocation(line: 2205, column: 22, scope: !11717)
!11717 = distinct !DILexicalBlock(scope: !11704, file: !3, line: 2205, column: 8)
!11718 = !DILocation(line: 2205, column: 27, scope: !11717)
!11719 = !DILocation(line: 2205, column: 32, scope: !11717)
!11720 = !DILocation(line: 2205, column: 8, scope: !11717)
!11721 = !DILocation(line: 2205, column: 8, scope: !11704)
!11722 = !DILocation(line: 2207, column: 20, scope: !11723)
!11723 = distinct !DILexicalBlock(scope: !11724, file: !3, line: 2207, column: 8)
!11724 = distinct !DILexicalBlock(scope: !11717, file: !3, line: 2206, column: 6)
!11725 = !DILocation(line: 2207, column: 25, scope: !11723)
!11726 = !DILocation(line: 2207, column: 34, scope: !11723)
!11727 = !DILocation(line: 2207, column: 37, scope: !11723)
!11728 = !DILocation(line: 2207, column: 18, scope: !11723)
!11729 = !DILocation(line: 2208, column: 14, scope: !11723)
!11730 = !DILocation(line: 2208, column: 19, scope: !11723)
!11731 = !DILocation(line: 2208, column: 28, scope: !11723)
!11732 = !DILocation(line: 2208, column: 31, scope: !11723)
!11733 = !DILocation(line: 2208, column: 12, scope: !11723)
!11734 = !DILocation(line: 2207, column: 13, scope: !11723)
!11735 = !DILocation(line: 2208, column: 42, scope: !11736)
!11736 = distinct !DILexicalBlock(scope: !11723, file: !3, line: 2207, column: 8)
!11737 = !DILocation(line: 2208, column: 47, scope: !11736)
!11738 = !DILocation(line: 2208, column: 50, scope: !11736)
!11739 = !DILocation(line: 0, scope: !11736)
!11740 = !DILocation(line: 2207, column: 8, scope: !11723)
!11741 = !DILocation(line: 2211, column: 12, scope: !11742)
!11742 = distinct !DILexicalBlock(scope: !11743, file: !3, line: 2211, column: 9)
!11743 = distinct !DILexicalBlock(scope: !11736, file: !3, line: 2210, column: 3)
!11744 = !DILocation(line: 2212, column: 5, scope: !11742)
!11745 = !DILocation(line: 2212, column: 8, scope: !11742)
!11746 = !DILocation(line: 2213, column: 5, scope: !11742)
!11747 = !DILocation(line: 2213, column: 8, scope: !11742)
!11748 = !DILocation(line: 2213, column: 30, scope: !11742)
!11749 = !DILocation(line: 2213, column: 27, scope: !11742)
!11750 = !DILocation(line: 2214, column: 4, scope: !11742)
!11751 = !DILocation(line: 2214, column: 20, scope: !11742)
!11752 = !DILocation(line: 2214, column: 27, scope: !11742)
!11753 = !DILocation(line: 2214, column: 32, scope: !11742)
!11754 = !DILocation(line: 2214, column: 38, scope: !11742)
!11755 = !DILocation(line: 2214, column: 7, scope: !11742)
!11756 = !DILocation(line: 2211, column: 9, scope: !11743)
!11757 = !DILocation(line: 2216, column: 13, scope: !11758)
!11758 = distinct !DILexicalBlock(scope: !11759, file: !3, line: 2216, column: 13)
!11759 = distinct !DILexicalBlock(scope: !11742, file: !3, line: 2215, column: 7)
!11760 = !DILocation(line: 2216, column: 20, scope: !11758)
!11761 = !DILocation(line: 2216, column: 27, scope: !11758)
!11762 = !DILocation(line: 2216, column: 33, scope: !11758)
!11763 = !DILocation(line: 2216, column: 25, scope: !11758)
!11764 = !DILocation(line: 2216, column: 13, scope: !11759)
!11765 = !DILocation(line: 2217, column: 25, scope: !11758)
!11766 = !DILocation(line: 2217, column: 31, scope: !11758)
!11767 = !DILocation(line: 2217, column: 11, scope: !11758)
!11768 = !DILocation(line: 2217, column: 18, scope: !11758)
!11769 = !DILocation(line: 2217, column: 23, scope: !11758)
!11770 = !DILocation(line: 2218, column: 9, scope: !11759)
!11771 = !DILocation(line: 2220, column: 3, scope: !11743)
!11772 = !DILocation(line: 2209, column: 13, scope: !11736)
!11773 = !DILocation(line: 2209, column: 19, scope: !11736)
!11774 = !DILocation(line: 2209, column: 11, scope: !11736)
!11775 = !DILocation(line: 2209, column: 33, scope: !11736)
!11776 = !DILocation(line: 2209, column: 40, scope: !11736)
!11777 = !DILocation(line: 2209, column: 31, scope: !11736)
!11778 = !DILocation(line: 2207, column: 8, scope: !11736)
!11779 = distinct !{!11779, !11740, !11780}
!11780 = !DILocation(line: 2220, column: 3, scope: !11723)
!11781 = !DILocation(line: 2221, column: 12, scope: !11782)
!11782 = distinct !DILexicalBlock(scope: !11724, file: !3, line: 2221, column: 12)
!11783 = !DILocation(line: 2221, column: 17, scope: !11782)
!11784 = !DILocation(line: 2221, column: 20, scope: !11782)
!11785 = !DILocation(line: 2221, column: 12, scope: !11724)
!11786 = !DILocation(line: 2223, column: 30, scope: !11787)
!11787 = distinct !DILexicalBlock(scope: !11782, file: !3, line: 2222, column: 3)
!11788 = !DILocation(line: 2223, column: 35, scope: !11787)
!11789 = !DILocation(line: 2223, column: 41, scope: !11787)
!11790 = !DILocation(line: 2223, column: 12, scope: !11787)
!11791 = !DILocation(line: 2223, column: 10, scope: !11787)
!11792 = !DILocation(line: 2225, column: 22, scope: !11787)
!11793 = !DILocation(line: 2225, column: 21, scope: !11787)
!11794 = !DILocation(line: 2225, column: 11, scope: !11787)
!11795 = !DILocation(line: 2225, column: 9, scope: !11787)
!11796 = !DILocation(line: 2226, column: 3, scope: !11787)
!11797 = !DILocation(line: 2227, column: 6, scope: !11724)
!11798 = !DILocation(line: 2229, column: 10, scope: !11704)
!11799 = !DILocation(line: 2230, column: 16, scope: !11800)
!11800 = distinct !DILexicalBlock(scope: !11704, file: !3, line: 2230, column: 4)
!11801 = !DILocation(line: 2230, column: 21, scope: !11800)
!11802 = !DILocation(line: 2230, column: 30, scope: !11800)
!11803 = !DILocation(line: 2230, column: 33, scope: !11800)
!11804 = !DILocation(line: 2230, column: 14, scope: !11800)
!11805 = !DILocation(line: 2230, column: 9, scope: !11800)
!11806 = !DILocation(line: 2230, column: 44, scope: !11807)
!11807 = distinct !DILexicalBlock(scope: !11800, file: !3, line: 2230, column: 4)
!11808 = !DILocation(line: 2230, column: 4, scope: !11800)
!11809 = !DILocation(line: 2231, column: 11, scope: !11807)
!11810 = !DILocation(line: 2231, column: 6, scope: !11807)
!11811 = !DILocation(line: 2230, column: 57, scope: !11807)
!11812 = !DILocation(line: 2230, column: 63, scope: !11807)
!11813 = !DILocation(line: 2230, column: 55, scope: !11807)
!11814 = !DILocation(line: 2230, column: 4, scope: !11807)
!11815 = distinct !{!11815, !11808, !11816}
!11816 = !DILocation(line: 2231, column: 11, scope: !11800)
!11817 = !DILocation(line: 2232, column: 10, scope: !11704)
!11818 = !DILocation(line: 2233, column: 16, scope: !11819)
!11819 = distinct !DILexicalBlock(scope: !11704, file: !3, line: 2233, column: 4)
!11820 = !DILocation(line: 2233, column: 21, scope: !11819)
!11821 = !DILocation(line: 2233, column: 30, scope: !11819)
!11822 = !DILocation(line: 2233, column: 33, scope: !11819)
!11823 = !DILocation(line: 2233, column: 14, scope: !11819)
!11824 = !DILocation(line: 2233, column: 9, scope: !11819)
!11825 = !DILocation(line: 2233, column: 44, scope: !11826)
!11826 = distinct !DILexicalBlock(scope: !11819, file: !3, line: 2233, column: 4)
!11827 = !DILocation(line: 2233, column: 4, scope: !11819)
!11828 = !DILocation(line: 2234, column: 11, scope: !11826)
!11829 = !DILocation(line: 2234, column: 6, scope: !11826)
!11830 = !DILocation(line: 2233, column: 57, scope: !11826)
!11831 = !DILocation(line: 2233, column: 63, scope: !11826)
!11832 = !DILocation(line: 2233, column: 55, scope: !11826)
!11833 = !DILocation(line: 2233, column: 4, scope: !11826)
!11834 = distinct !{!11834, !11827, !11835}
!11835 = !DILocation(line: 2234, column: 11, scope: !11819)
!11836 = !DILocation(line: 2236, column: 8, scope: !11837)
!11837 = distinct !DILexicalBlock(scope: !11704, file: !3, line: 2236, column: 8)
!11838 = !DILocation(line: 2236, column: 14, scope: !11837)
!11839 = !DILocation(line: 2236, column: 8, scope: !11704)
!11840 = !DILocalVariable(name: "dstnode", scope: !11841, file: !3, line: 2239, type: !2437)
!11841 = distinct !DILexicalBlock(scope: !11837, file: !3, line: 2237, column: 6)
!11842 = !DILocation(line: 2239, column: 23, scope: !11841)
!11843 = !DILocation(line: 2239, column: 33, scope: !11841)
!11844 = !DILocation(line: 2239, column: 38, scope: !11841)
!11845 = !DILocation(line: 2239, column: 47, scope: !11841)
!11846 = !DILocation(line: 2239, column: 50, scope: !11841)
!11847 = !DILocation(line: 2240, column: 37, scope: !11841)
!11848 = !DILocation(line: 2240, column: 8, scope: !11841)
!11849 = !DILocation(line: 2240, column: 13, scope: !11841)
!11850 = !DILocation(line: 2240, column: 22, scope: !11841)
!11851 = !DILocation(line: 2240, column: 25, scope: !11841)
!11852 = !DILocation(line: 2240, column: 35, scope: !11841)
!11853 = !DILocation(line: 2241, column: 34, scope: !11841)
!11854 = !DILocation(line: 2241, column: 39, scope: !11841)
!11855 = !DILocation(line: 2241, column: 48, scope: !11841)
!11856 = !DILocation(line: 2241, column: 51, scope: !11841)
!11857 = !DILocation(line: 2241, column: 8, scope: !11841)
!11858 = !DILocation(line: 2241, column: 13, scope: !11841)
!11859 = !DILocation(line: 2241, column: 22, scope: !11841)
!11860 = !DILocation(line: 2241, column: 25, scope: !11841)
!11861 = !DILocation(line: 2241, column: 32, scope: !11841)
!11862 = !DILocation(line: 2242, column: 16, scope: !11841)
!11863 = !DILocation(line: 2242, column: 14, scope: !11841)
!11864 = !DILocation(line: 2243, column: 20, scope: !11865)
!11865 = distinct !DILexicalBlock(scope: !11841, file: !3, line: 2243, column: 8)
!11866 = !DILocation(line: 2243, column: 25, scope: !11865)
!11867 = !DILocation(line: 2243, column: 34, scope: !11865)
!11868 = !DILocation(line: 2243, column: 37, scope: !11865)
!11869 = !DILocation(line: 2243, column: 18, scope: !11865)
!11870 = !DILocation(line: 2243, column: 13, scope: !11865)
!11871 = !DILocation(line: 2243, column: 48, scope: !11872)
!11872 = distinct !DILexicalBlock(scope: !11865, file: !3, line: 2243, column: 8)
!11873 = !DILocation(line: 2243, column: 8, scope: !11865)
!11874 = !DILocation(line: 2244, column: 10, scope: !11875)
!11875 = distinct !DILexicalBlock(scope: !11872, file: !3, line: 2244, column: 7)
!11876 = !DILocation(line: 2245, column: 10, scope: !11875)
!11877 = !DILocation(line: 2245, column: 13, scope: !11875)
!11878 = !DILocation(line: 2246, column: 10, scope: !11875)
!11879 = !DILocation(line: 2246, column: 13, scope: !11875)
!11880 = !DILocation(line: 2246, column: 37, scope: !11875)
!11881 = !DILocation(line: 2246, column: 34, scope: !11875)
!11882 = !DILocation(line: 2247, column: 9, scope: !11875)
!11883 = !DILocation(line: 2247, column: 25, scope: !11875)
!11884 = !DILocation(line: 2247, column: 34, scope: !11875)
!11885 = !DILocation(line: 2247, column: 39, scope: !11875)
!11886 = !DILocation(line: 2247, column: 45, scope: !11875)
!11887 = !DILocation(line: 2247, column: 12, scope: !11875)
!11888 = !DILocation(line: 2244, column: 7, scope: !11872)
!11889 = !DILocalVariable(name: "new_node", scope: !11890, file: !3, line: 2249, type: !2437)
!11890 = distinct !DILexicalBlock(scope: !11875, file: !3, line: 2248, column: 5)
!11891 = !DILocation(line: 2249, column: 22, scope: !11890)
!11892 = !DILocation(line: 2252, column: 47, scope: !11890)
!11893 = !DILocation(line: 2252, column: 35, scope: !11890)
!11894 = !DILocation(line: 2252, column: 18, scope: !11890)
!11895 = !DILocation(line: 2252, column: 16, scope: !11890)
!11896 = !DILocation(line: 2253, column: 23, scope: !11890)
!11897 = !DILocation(line: 2253, column: 29, scope: !11890)
!11898 = !DILocation(line: 2253, column: 7, scope: !11890)
!11899 = !DILocation(line: 2253, column: 17, scope: !11890)
!11900 = !DILocation(line: 2253, column: 21, scope: !11890)
!11901 = !DILocation(line: 2254, column: 24, scope: !11890)
!11902 = !DILocation(line: 2254, column: 30, scope: !11890)
!11903 = !DILocation(line: 2254, column: 7, scope: !11890)
!11904 = !DILocation(line: 2254, column: 17, scope: !11890)
!11905 = !DILocation(line: 2254, column: 22, scope: !11890)
!11906 = !DILocation(line: 2255, column: 12, scope: !11907)
!11907 = distinct !DILexicalBlock(scope: !11890, file: !3, line: 2255, column: 11)
!11908 = !DILocation(line: 2255, column: 18, scope: !11907)
!11909 = !DILocation(line: 2255, column: 26, scope: !11907)
!11910 = !DILocation(line: 2255, column: 29, scope: !11907)
!11911 = !DILocation(line: 2255, column: 11, scope: !11890)
!11912 = !DILocation(line: 2256, column: 9, scope: !11907)
!11913 = !DILocation(line: 2256, column: 19, scope: !11907)
!11914 = !DILocation(line: 2256, column: 27, scope: !11907)
!11915 = !DILocation(line: 2258, column: 29, scope: !11907)
!11916 = !DILocation(line: 2258, column: 35, scope: !11907)
!11917 = !DILocation(line: 2258, column: 9, scope: !11907)
!11918 = !DILocation(line: 2258, column: 19, scope: !11907)
!11919 = !DILocation(line: 2258, column: 27, scope: !11907)
!11920 = !DILocation(line: 2259, column: 21, scope: !11890)
!11921 = !DILocation(line: 2259, column: 7, scope: !11890)
!11922 = !DILocation(line: 2259, column: 14, scope: !11890)
!11923 = !DILocation(line: 2259, column: 19, scope: !11890)
!11924 = !DILocation(line: 2260, column: 15, scope: !11890)
!11925 = !DILocation(line: 2260, column: 13, scope: !11890)
!11926 = !DILocation(line: 2261, column: 5, scope: !11890)
!11927 = !DILocation(line: 2247, column: 49, scope: !11875)
!11928 = !DILocation(line: 2243, column: 61, scope: !11872)
!11929 = !DILocation(line: 2243, column: 67, scope: !11872)
!11930 = !DILocation(line: 2243, column: 59, scope: !11872)
!11931 = !DILocation(line: 2243, column: 8, scope: !11872)
!11932 = distinct !{!11932, !11873, !11933}
!11933 = !DILocation(line: 2261, column: 5, scope: !11865)
!11934 = !DILocation(line: 2262, column: 8, scope: !11841)
!11935 = !DILocation(line: 2262, column: 15, scope: !11841)
!11936 = !DILocation(line: 2262, column: 20, scope: !11841)
!11937 = !DILocation(line: 2263, column: 6, scope: !11841)
!11938 = !DILocation(line: 2266, column: 12, scope: !11939)
!11939 = distinct !DILexicalBlock(scope: !11940, file: !3, line: 2266, column: 12)
!11940 = distinct !DILexicalBlock(scope: !11837, file: !3, line: 2265, column: 6)
!11941 = !DILocation(line: 2266, column: 20, scope: !11939)
!11942 = !DILocation(line: 2266, column: 18, scope: !11939)
!11943 = !DILocation(line: 2266, column: 28, scope: !11939)
!11944 = !DILocation(line: 2266, column: 26, scope: !11939)
!11945 = !DILocation(line: 2266, column: 12, scope: !11940)
!11946 = !DILocation(line: 2268, column: 21, scope: !11947)
!11947 = distinct !DILexicalBlock(scope: !11939, file: !3, line: 2267, column: 3)
!11948 = !DILocation(line: 2268, column: 19, scope: !11947)
!11949 = !DILocation(line: 2269, column: 15, scope: !11947)
!11950 = !DILocation(line: 2269, column: 13, scope: !11947)
!11951 = !DILocation(line: 2271, column: 3, scope: !11947)
!11952 = !DILocation(line: 2272, column: 14, scope: !11940)
!11953 = !DILocation(line: 2272, column: 12, scope: !11940)
!11954 = !DILocation(line: 2275, column: 20, scope: !11955)
!11955 = distinct !DILexicalBlock(scope: !11940, file: !3, line: 2275, column: 8)
!11956 = !DILocation(line: 2275, column: 25, scope: !11955)
!11957 = !DILocation(line: 2275, column: 34, scope: !11955)
!11958 = !DILocation(line: 2275, column: 37, scope: !11955)
!11959 = !DILocation(line: 2275, column: 18, scope: !11955)
!11960 = !DILocation(line: 2275, column: 51, scope: !11955)
!11961 = !DILocation(line: 2275, column: 13, scope: !11955)
!11962 = !DILocation(line: 2275, column: 56, scope: !11963)
!11963 = distinct !DILexicalBlock(scope: !11955, file: !3, line: 2275, column: 8)
!11964 = !DILocation(line: 2275, column: 8, scope: !11955)
!11965 = !DILocation(line: 2278, column: 18, scope: !11966)
!11966 = distinct !DILexicalBlock(scope: !11963, file: !3, line: 2277, column: 3)
!11967 = !DILocation(line: 2278, column: 5, scope: !11966)
!11968 = !DILocation(line: 2278, column: 9, scope: !11966)
!11969 = !DILocation(line: 2278, column: 13, scope: !11966)
!11970 = !DILocation(line: 2278, column: 16, scope: !11966)
!11971 = !DILocation(line: 2279, column: 23, scope: !11966)
!11972 = !DILocation(line: 2279, column: 5, scope: !11966)
!11973 = !DILocation(line: 2279, column: 9, scope: !11966)
!11974 = !DILocation(line: 2279, column: 13, scope: !11966)
!11975 = !DILocation(line: 2279, column: 21, scope: !11966)
!11976 = !DILocation(line: 2282, column: 19, scope: !11966)
!11977 = !DILocation(line: 2282, column: 24, scope: !11966)
!11978 = !DILocation(line: 2282, column: 22, scope: !11966)
!11979 = !DILocation(line: 2282, column: 32, scope: !11966)
!11980 = !DILocation(line: 2282, column: 30, scope: !11966)
!11981 = !DILocation(line: 2282, column: 5, scope: !11966)
!11982 = !DILocation(line: 2282, column: 9, scope: !11966)
!11983 = !DILocation(line: 2282, column: 13, scope: !11966)
!11984 = !DILocation(line: 2282, column: 17, scope: !11966)
!11985 = !DILocation(line: 2283, column: 3, scope: !11966)
!11986 = !DILocation(line: 2276, column: 13, scope: !11963)
!11987 = !DILocation(line: 2276, column: 19, scope: !11963)
!11988 = !DILocation(line: 2276, column: 11, scope: !11963)
!11989 = !DILocation(line: 2276, column: 27, scope: !11963)
!11990 = !DILocation(line: 2275, column: 8, scope: !11963)
!11991 = distinct !{!11991, !11964, !11992}
!11992 = !DILocation(line: 2283, column: 3, scope: !11955)
!11993 = !DILocation(line: 2286, column: 12, scope: !11940)
!11994 = !DILocation(line: 2286, column: 10, scope: !11940)
!11995 = !DILocation(line: 2287, column: 20, scope: !11996)
!11996 = distinct !DILexicalBlock(scope: !11940, file: !3, line: 2287, column: 8)
!11997 = !DILocation(line: 2287, column: 25, scope: !11996)
!11998 = !DILocation(line: 2287, column: 34, scope: !11996)
!11999 = !DILocation(line: 2287, column: 37, scope: !11996)
!12000 = !DILocation(line: 2287, column: 18, scope: !11996)
!12001 = !DILocation(line: 2287, column: 51, scope: !11996)
!12002 = !DILocation(line: 2287, column: 13, scope: !11996)
!12003 = !DILocation(line: 2287, column: 56, scope: !12004)
!12004 = distinct !DILexicalBlock(scope: !11996, file: !3, line: 2287, column: 8)
!12005 = !DILocation(line: 2287, column: 8, scope: !11996)
!12006 = !DILocation(line: 2291, column: 13, scope: !12007)
!12007 = distinct !DILexicalBlock(scope: !12008, file: !3, line: 2291, column: 5)
!12008 = distinct !DILexicalBlock(scope: !12004, file: !3, line: 2289, column: 3)
!12009 = !DILocation(line: 2291, column: 10, scope: !12007)
!12010 = !DILocation(line: 2291, column: 18, scope: !12011)
!12011 = distinct !DILexicalBlock(scope: !12007, file: !3, line: 2291, column: 5)
!12012 = !DILocation(line: 2291, column: 23, scope: !12011)
!12013 = !DILocation(line: 2291, column: 21, scope: !12011)
!12014 = !DILocation(line: 2291, column: 5, scope: !12007)
!12015 = !DILocation(line: 2293, column: 14, scope: !12016)
!12016 = distinct !DILexicalBlock(scope: !12017, file: !3, line: 2293, column: 13)
!12017 = distinct !DILexicalBlock(scope: !12011, file: !3, line: 2292, column: 7)
!12018 = !DILocation(line: 2294, column: 7, scope: !12016)
!12019 = !DILocation(line: 2294, column: 10, scope: !12016)
!12020 = !DILocation(line: 2295, column: 7, scope: !12016)
!12021 = !DILocation(line: 2295, column: 10, scope: !12016)
!12022 = !DILocation(line: 2295, column: 37, scope: !12016)
!12023 = !DILocation(line: 2295, column: 34, scope: !12016)
!12024 = !DILocation(line: 2296, column: 6, scope: !12016)
!12025 = !DILocation(line: 2296, column: 22, scope: !12016)
!12026 = !DILocation(line: 2296, column: 26, scope: !12016)
!12027 = !DILocation(line: 2296, column: 30, scope: !12016)
!12028 = !DILocation(line: 2296, column: 34, scope: !12016)
!12029 = !DILocation(line: 2296, column: 39, scope: !12016)
!12030 = !DILocation(line: 2296, column: 45, scope: !12016)
!12031 = !DILocation(line: 2296, column: 9, scope: !12016)
!12032 = !DILocation(line: 2293, column: 13, scope: !12017)
!12033 = !DILocation(line: 2298, column: 20, scope: !12034)
!12034 = distinct !DILexicalBlock(scope: !12016, file: !3, line: 2297, column: 4)
!12035 = !DILocation(line: 2298, column: 25, scope: !12034)
!12036 = !DILocation(line: 2298, column: 23, scope: !12034)
!12037 = !DILocation(line: 2298, column: 6, scope: !12034)
!12038 = !DILocation(line: 2298, column: 10, scope: !12034)
!12039 = !DILocation(line: 2298, column: 14, scope: !12034)
!12040 = !DILocation(line: 2298, column: 18, scope: !12034)
!12041 = !DILocation(line: 2299, column: 6, scope: !12034)
!12042 = !DILocation(line: 2301, column: 7, scope: !12017)
!12043 = !DILocation(line: 2291, column: 32, scope: !12011)
!12044 = !DILocation(line: 2291, column: 5, scope: !12011)
!12045 = distinct !{!12045, !12014, !12046}
!12046 = !DILocation(line: 2301, column: 7, scope: !12007)
!12047 = !DILocation(line: 2302, column: 9, scope: !12048)
!12048 = distinct !DILexicalBlock(scope: !12008, file: !3, line: 2302, column: 9)
!12049 = !DILocation(line: 2302, column: 15, scope: !12048)
!12050 = !DILocation(line: 2302, column: 12, scope: !12048)
!12051 = !DILocation(line: 2302, column: 9, scope: !12008)
!12052 = !DILocalVariable(name: "new_node", scope: !12053, file: !3, line: 2304, type: !2437)
!12053 = distinct !DILexicalBlock(scope: !12048, file: !3, line: 2303, column: 7)
!12054 = !DILocation(line: 2304, column: 24, scope: !12053)
!12055 = !DILocation(line: 2307, column: 49, scope: !12053)
!12056 = !DILocation(line: 2307, column: 37, scope: !12053)
!12057 = !DILocation(line: 2307, column: 20, scope: !12053)
!12058 = !DILocation(line: 2307, column: 18, scope: !12053)
!12059 = !DILocation(line: 2308, column: 25, scope: !12053)
!12060 = !DILocation(line: 2308, column: 31, scope: !12053)
!12061 = !DILocation(line: 2308, column: 9, scope: !12053)
!12062 = !DILocation(line: 2308, column: 19, scope: !12053)
!12063 = !DILocation(line: 2308, column: 23, scope: !12053)
!12064 = !DILocation(line: 2309, column: 26, scope: !12053)
!12065 = !DILocation(line: 2309, column: 32, scope: !12053)
!12066 = !DILocation(line: 2309, column: 9, scope: !12053)
!12067 = !DILocation(line: 2309, column: 19, scope: !12053)
!12068 = !DILocation(line: 2309, column: 24, scope: !12053)
!12069 = !DILocation(line: 2310, column: 14, scope: !12070)
!12070 = distinct !DILexicalBlock(scope: !12053, file: !3, line: 2310, column: 13)
!12071 = !DILocation(line: 2310, column: 20, scope: !12070)
!12072 = !DILocation(line: 2310, column: 28, scope: !12070)
!12073 = !DILocation(line: 2310, column: 31, scope: !12070)
!12074 = !DILocation(line: 2310, column: 13, scope: !12053)
!12075 = !DILocation(line: 2311, column: 4, scope: !12070)
!12076 = !DILocation(line: 2311, column: 14, scope: !12070)
!12077 = !DILocation(line: 2311, column: 22, scope: !12070)
!12078 = !DILocation(line: 2313, column: 24, scope: !12070)
!12079 = !DILocation(line: 2313, column: 30, scope: !12070)
!12080 = !DILocation(line: 2313, column: 4, scope: !12070)
!12081 = !DILocation(line: 2313, column: 14, scope: !12070)
!12082 = !DILocation(line: 2313, column: 22, scope: !12070)
!12083 = !DILocation(line: 2314, column: 21, scope: !12053)
!12084 = !DILocation(line: 2314, column: 9, scope: !12053)
!12085 = !DILocation(line: 2314, column: 13, scope: !12053)
!12086 = !DILocation(line: 2314, column: 16, scope: !12053)
!12087 = !DILocation(line: 2314, column: 19, scope: !12053)
!12088 = !DILocation(line: 2315, column: 26, scope: !12053)
!12089 = !DILocation(line: 2315, column: 34, scope: !12053)
!12090 = !DILocation(line: 2315, column: 32, scope: !12053)
!12091 = !DILocation(line: 2315, column: 9, scope: !12053)
!12092 = !DILocation(line: 2315, column: 13, scope: !12053)
!12093 = !DILocation(line: 2315, column: 16, scope: !12053)
!12094 = !DILocation(line: 2315, column: 24, scope: !12053)
!12095 = !DILocation(line: 2316, column: 22, scope: !12053)
!12096 = !DILocation(line: 2316, column: 27, scope: !12053)
!12097 = !DILocation(line: 2316, column: 25, scope: !12053)
!12098 = !DILocation(line: 2316, column: 35, scope: !12053)
!12099 = !DILocation(line: 2316, column: 33, scope: !12053)
!12100 = !DILocation(line: 2316, column: 9, scope: !12053)
!12101 = !DILocation(line: 2316, column: 13, scope: !12053)
!12102 = !DILocation(line: 2316, column: 16, scope: !12053)
!12103 = !DILocation(line: 2316, column: 20, scope: !12053)
!12104 = !DILocation(line: 2317, column: 10, scope: !12053)
!12105 = !DILocation(line: 2318, column: 7, scope: !12053)
!12106 = !DILocation(line: 2319, column: 3, scope: !12008)
!12107 = !DILocation(line: 2288, column: 13, scope: !12004)
!12108 = !DILocation(line: 2288, column: 19, scope: !12004)
!12109 = !DILocation(line: 2288, column: 11, scope: !12004)
!12110 = !DILocation(line: 2288, column: 27, scope: !12004)
!12111 = !DILocation(line: 2287, column: 8, scope: !12004)
!12112 = distinct !{!12112, !12005, !12113}
!12113 = !DILocation(line: 2319, column: 3, scope: !11996)
!12114 = !DILocation(line: 2321, column: 12, scope: !12115)
!12115 = distinct !DILexicalBlock(scope: !11940, file: !3, line: 2321, column: 12)
!12116 = !DILocation(line: 2321, column: 18, scope: !12115)
!12117 = !DILocation(line: 2321, column: 12, scope: !11940)
!12118 = !DILocation(line: 2326, column: 9, scope: !12119)
!12119 = distinct !DILexicalBlock(scope: !12120, file: !3, line: 2326, column: 9)
!12120 = distinct !DILexicalBlock(scope: !12115, file: !3, line: 2322, column: 3)
!12121 = !DILocation(line: 2326, column: 16, scope: !12119)
!12122 = !DILocation(line: 2326, column: 22, scope: !12119)
!12123 = !DILocation(line: 2326, column: 29, scope: !12119)
!12124 = !DILocation(line: 2326, column: 20, scope: !12119)
!12125 = !DILocation(line: 2326, column: 9, scope: !12120)
!12126 = !DILocation(line: 2329, column: 38, scope: !12127)
!12127 = distinct !DILexicalBlock(scope: !12119, file: !3, line: 2327, column: 7)
!12128 = !DILocation(line: 2329, column: 45, scope: !12127)
!12129 = !DILocation(line: 2329, column: 9, scope: !12127)
!12130 = !DILocation(line: 2329, column: 14, scope: !12127)
!12131 = !DILocation(line: 2329, column: 23, scope: !12127)
!12132 = !DILocation(line: 2329, column: 26, scope: !12127)
!12133 = !DILocation(line: 2329, column: 36, scope: !12127)
!12134 = !DILocation(line: 2330, column: 27, scope: !12127)
!12135 = !DILocation(line: 2330, column: 34, scope: !12127)
!12136 = !DILocation(line: 2330, column: 9, scope: !12127)
!12137 = !DILocation(line: 2330, column: 16, scope: !12127)
!12138 = !DILocation(line: 2330, column: 20, scope: !12127)
!12139 = !DILocation(line: 2330, column: 25, scope: !12127)
!12140 = !DILocation(line: 2331, column: 13, scope: !12141)
!12141 = distinct !DILexicalBlock(scope: !12127, file: !3, line: 2331, column: 13)
!12142 = !DILocation(line: 2331, column: 15, scope: !12141)
!12143 = !DILocation(line: 2331, column: 13, scope: !12127)
!12144 = !DILocation(line: 2333, column: 24, scope: !12145)
!12145 = distinct !DILexicalBlock(scope: !12141, file: !3, line: 2332, column: 4)
!12146 = !DILocation(line: 2333, column: 31, scope: !12145)
!12147 = !DILocation(line: 2333, column: 6, scope: !12145)
!12148 = !DILocation(line: 2333, column: 13, scope: !12145)
!12149 = !DILocation(line: 2333, column: 17, scope: !12145)
!12150 = !DILocation(line: 2333, column: 22, scope: !12145)
!12151 = !DILocation(line: 2334, column: 6, scope: !12145)
!12152 = !DILocation(line: 2334, column: 10, scope: !12145)
!12153 = !DILocation(line: 2334, column: 12, scope: !12145)
!12154 = !DILocation(line: 2334, column: 17, scope: !12145)
!12155 = !DILocation(line: 2334, column: 21, scope: !12145)
!12156 = !DILocation(line: 2334, column: 26, scope: !12145)
!12157 = !DILocation(line: 2335, column: 4, scope: !12145)
!12158 = !DILocation(line: 2337, column: 4, scope: !12141)
!12159 = !DILocation(line: 2337, column: 11, scope: !12141)
!12160 = !DILocation(line: 2337, column: 15, scope: !12141)
!12161 = !DILocation(line: 2337, column: 20, scope: !12141)
!12162 = !DILocation(line: 2338, column: 12, scope: !12127)
!12163 = !DILocation(line: 2339, column: 7, scope: !12127)
!12164 = !DILocation(line: 2342, column: 38, scope: !12165)
!12165 = distinct !DILexicalBlock(scope: !12119, file: !3, line: 2341, column: 7)
!12166 = !DILocation(line: 2342, column: 45, scope: !12165)
!12167 = !DILocation(line: 2342, column: 9, scope: !12165)
!12168 = !DILocation(line: 2342, column: 14, scope: !12165)
!12169 = !DILocation(line: 2342, column: 23, scope: !12165)
!12170 = !DILocation(line: 2342, column: 26, scope: !12165)
!12171 = !DILocation(line: 2342, column: 36, scope: !12165)
!12172 = !DILocation(line: 2343, column: 13, scope: !12173)
!12173 = distinct !DILexicalBlock(scope: !12165, file: !3, line: 2343, column: 13)
!12174 = !DILocation(line: 2343, column: 15, scope: !12173)
!12175 = !DILocation(line: 2343, column: 20, scope: !12173)
!12176 = !DILocation(line: 2343, column: 23, scope: !12173)
!12177 = !DILocation(line: 2343, column: 30, scope: !12173)
!12178 = !DILocation(line: 2343, column: 36, scope: !12173)
!12179 = !DILocation(line: 2343, column: 43, scope: !12173)
!12180 = !DILocation(line: 2343, column: 34, scope: !12173)
!12181 = !DILocation(line: 2343, column: 13, scope: !12165)
!12182 = !DILocation(line: 2346, column: 24, scope: !12183)
!12183 = distinct !DILexicalBlock(scope: !12173, file: !3, line: 2344, column: 4)
!12184 = !DILocation(line: 2346, column: 31, scope: !12183)
!12185 = !DILocation(line: 2346, column: 6, scope: !12183)
!12186 = !DILocation(line: 2346, column: 13, scope: !12183)
!12187 = !DILocation(line: 2346, column: 17, scope: !12183)
!12188 = !DILocation(line: 2346, column: 22, scope: !12183)
!12189 = !DILocation(line: 2347, column: 24, scope: !12183)
!12190 = !DILocation(line: 2347, column: 31, scope: !12183)
!12191 = !DILocation(line: 2347, column: 6, scope: !12183)
!12192 = !DILocation(line: 2347, column: 13, scope: !12183)
!12193 = !DILocation(line: 2347, column: 17, scope: !12183)
!12194 = !DILocation(line: 2347, column: 22, scope: !12183)
!12195 = !DILocation(line: 2348, column: 10, scope: !12196)
!12196 = distinct !DILexicalBlock(scope: !12183, file: !3, line: 2348, column: 10)
!12197 = !DILocation(line: 2348, column: 12, scope: !12196)
!12198 = !DILocation(line: 2348, column: 10, scope: !12183)
!12199 = !DILocation(line: 2350, column: 28, scope: !12200)
!12200 = distinct !DILexicalBlock(scope: !12196, file: !3, line: 2349, column: 8)
!12201 = !DILocation(line: 2350, column: 35, scope: !12200)
!12202 = !DILocation(line: 2350, column: 10, scope: !12200)
!12203 = !DILocation(line: 2350, column: 17, scope: !12200)
!12204 = !DILocation(line: 2350, column: 21, scope: !12200)
!12205 = !DILocation(line: 2350, column: 26, scope: !12200)
!12206 = !DILocation(line: 2351, column: 10, scope: !12200)
!12207 = !DILocation(line: 2351, column: 14, scope: !12200)
!12208 = !DILocation(line: 2351, column: 16, scope: !12200)
!12209 = !DILocation(line: 2351, column: 21, scope: !12200)
!12210 = !DILocation(line: 2351, column: 25, scope: !12200)
!12211 = !DILocation(line: 2351, column: 30, scope: !12200)
!12212 = !DILocation(line: 2352, column: 8, scope: !12200)
!12213 = !DILocation(line: 2354, column: 8, scope: !12196)
!12214 = !DILocation(line: 2354, column: 15, scope: !12196)
!12215 = !DILocation(line: 2354, column: 19, scope: !12196)
!12216 = !DILocation(line: 2354, column: 24, scope: !12196)
!12217 = !DILocation(line: 2355, column: 9, scope: !12183)
!12218 = !DILocation(line: 2356, column: 4, scope: !12183)
!12219 = !DILocation(line: 2360, column: 9, scope: !12220)
!12220 = distinct !DILexicalBlock(scope: !12173, file: !3, line: 2358, column: 4)
!12221 = !DILocation(line: 2361, column: 6, scope: !12220)
!12222 = !DILocation(line: 2361, column: 10, scope: !12220)
!12223 = !DILocation(line: 2361, column: 12, scope: !12220)
!12224 = !DILocation(line: 2361, column: 17, scope: !12220)
!12225 = !DILocation(line: 2361, column: 21, scope: !12220)
!12226 = !DILocation(line: 2361, column: 26, scope: !12220)
!12227 = !DILocation(line: 2364, column: 5, scope: !12120)
!12228 = !DILocation(line: 2364, column: 12, scope: !12229)
!12229 = distinct !DILexicalBlock(scope: !12230, file: !3, line: 2364, column: 5)
!12230 = distinct !DILexicalBlock(scope: !12120, file: !3, line: 2364, column: 5)
!12231 = !DILocation(line: 2364, column: 17, scope: !12229)
!12232 = !DILocation(line: 2364, column: 15, scope: !12229)
!12233 = !DILocation(line: 2364, column: 5, scope: !12230)
!12234 = !DILocation(line: 2365, column: 30, scope: !12229)
!12235 = !DILocation(line: 2365, column: 34, scope: !12229)
!12236 = !DILocation(line: 2365, column: 38, scope: !12229)
!12237 = !DILocation(line: 2365, column: 7, scope: !12229)
!12238 = !DILocation(line: 2365, column: 11, scope: !12229)
!12239 = !DILocation(line: 2365, column: 14, scope: !12229)
!12240 = !DILocation(line: 2365, column: 19, scope: !12229)
!12241 = !DILocation(line: 2365, column: 23, scope: !12229)
!12242 = !DILocation(line: 2365, column: 28, scope: !12229)
!12243 = !DILocation(line: 2364, column: 22, scope: !12229)
!12244 = !DILocation(line: 2364, column: 5, scope: !12229)
!12245 = distinct !{!12245, !12233, !12246}
!12246 = !DILocation(line: 2365, column: 38, scope: !12230)
!12247 = !DILocation(line: 2366, column: 3, scope: !12120)
!12248 = !DILocation(line: 2370, column: 17, scope: !12249)
!12249 = distinct !DILexicalBlock(scope: !12115, file: !3, line: 2368, column: 3)
!12250 = !DILocation(line: 2370, column: 22, scope: !12249)
!12251 = !DILocation(line: 2370, column: 5, scope: !12249)
!12252 = !DILocation(line: 2378, column: 13, scope: !12253)
!12253 = distinct !DILexicalBlock(scope: !12249, file: !3, line: 2378, column: 5)
!12254 = !DILocation(line: 2378, column: 10, scope: !12253)
!12255 = !DILocation(line: 2378, column: 18, scope: !12256)
!12256 = distinct !DILexicalBlock(scope: !12253, file: !3, line: 2378, column: 5)
!12257 = !DILocation(line: 2378, column: 23, scope: !12256)
!12258 = !DILocation(line: 2378, column: 21, scope: !12256)
!12259 = !DILocation(line: 2378, column: 5, scope: !12253)
!12260 = !DILocation(line: 2379, column: 30, scope: !12256)
!12261 = !DILocation(line: 2379, column: 34, scope: !12256)
!12262 = !DILocation(line: 2379, column: 38, scope: !12256)
!12263 = !DILocation(line: 2379, column: 7, scope: !12256)
!12264 = !DILocation(line: 2379, column: 11, scope: !12256)
!12265 = !DILocation(line: 2379, column: 14, scope: !12256)
!12266 = !DILocation(line: 2379, column: 19, scope: !12256)
!12267 = !DILocation(line: 2379, column: 23, scope: !12256)
!12268 = !DILocation(line: 2379, column: 28, scope: !12256)
!12269 = !DILocation(line: 2378, column: 28, scope: !12256)
!12270 = !DILocation(line: 2378, column: 5, scope: !12256)
!12271 = distinct !{!12271, !12259, !12272}
!12272 = !DILocation(line: 2379, column: 38, scope: !12253)
!12273 = !DILocation(line: 2380, column: 5, scope: !12249)
!12274 = !DILocation(line: 2380, column: 9, scope: !12249)
!12275 = !DILocation(line: 2380, column: 11, scope: !12249)
!12276 = !DILocation(line: 2380, column: 16, scope: !12249)
!12277 = !DILocation(line: 2380, column: 20, scope: !12249)
!12278 = !DILocation(line: 2380, column: 25, scope: !12249)
!12279 = !DILocation(line: 2381, column: 34, scope: !12249)
!12280 = !DILocation(line: 2381, column: 41, scope: !12249)
!12281 = !DILocation(line: 2381, column: 5, scope: !12249)
!12282 = !DILocation(line: 2381, column: 10, scope: !12249)
!12283 = !DILocation(line: 2381, column: 19, scope: !12249)
!12284 = !DILocation(line: 2381, column: 22, scope: !12249)
!12285 = !DILocation(line: 2381, column: 32, scope: !12249)
!12286 = !DILocation(line: 2384, column: 34, scope: !11940)
!12287 = !DILocation(line: 2384, column: 39, scope: !11940)
!12288 = !DILocation(line: 2384, column: 48, scope: !11940)
!12289 = !DILocation(line: 2384, column: 51, scope: !11940)
!12290 = !DILocation(line: 2384, column: 8, scope: !11940)
!12291 = !DILocation(line: 2384, column: 13, scope: !11940)
!12292 = !DILocation(line: 2384, column: 22, scope: !11940)
!12293 = !DILocation(line: 2384, column: 25, scope: !11940)
!12294 = !DILocation(line: 2384, column: 32, scope: !11940)
!12295 = !DILocation(line: 2386, column: 5, scope: !11704)
!12296 = !DILocation(line: 2387, column: 5, scope: !11704)
!12297 = !DILocation(line: 2388, column: 2, scope: !11704)
!12298 = !DILocation(line: 2389, column: 17, scope: !12299)
!12299 = distinct !DILexicalBlock(scope: !11687, file: !3, line: 2389, column: 16)
!12300 = !DILocation(line: 2389, column: 19, scope: !12299)
!12301 = !DILocation(line: 2389, column: 24, scope: !12299)
!12302 = !DILocation(line: 2389, column: 27, scope: !12299)
!12303 = !DILocation(line: 2389, column: 29, scope: !12299)
!12304 = !DILocation(line: 2390, column: 3, scope: !12299)
!12305 = !DILocation(line: 2390, column: 6, scope: !12299)
!12306 = !DILocation(line: 2390, column: 11, scope: !12299)
!12307 = !DILocation(line: 2390, column: 20, scope: !12299)
!12308 = !DILocation(line: 2390, column: 23, scope: !12299)
!12309 = !DILocation(line: 2390, column: 32, scope: !12299)
!12310 = !DILocation(line: 2390, column: 37, scope: !12299)
!12311 = !DILocation(line: 2390, column: 46, scope: !12299)
!12312 = !DILocation(line: 2390, column: 49, scope: !12299)
!12313 = !DILocation(line: 2390, column: 30, scope: !12299)
!12314 = !DILocation(line: 2391, column: 9, scope: !12299)
!12315 = !DILocation(line: 2391, column: 12, scope: !12299)
!12316 = !DILocation(line: 2391, column: 14, scope: !12299)
!12317 = !DILocation(line: 2389, column: 16, scope: !11687)
!12318 = !DILocation(line: 2393, column: 4, scope: !12319)
!12319 = distinct !DILexicalBlock(scope: !12299, file: !3, line: 2392, column: 2)
!12320 = !DILocation(line: 2393, column: 9, scope: !12319)
!12321 = !DILocation(line: 2393, column: 18, scope: !12319)
!12322 = !DILocation(line: 2393, column: 23, scope: !12319)
!12323 = !DILocation(line: 2393, column: 28, scope: !12319)
!12324 = !DILocation(line: 2393, column: 37, scope: !12319)
!12325 = !DILocation(line: 2394, column: 5, scope: !12319)
!12326 = !DILocation(line: 2395, column: 2, scope: !12319)
!12327 = !DILocation(line: 2396, column: 17, scope: !12328)
!12328 = distinct !DILexicalBlock(scope: !12299, file: !3, line: 2396, column: 16)
!12329 = !DILocation(line: 2396, column: 19, scope: !12328)
!12330 = !DILocation(line: 2396, column: 24, scope: !12328)
!12331 = !DILocation(line: 2396, column: 27, scope: !12328)
!12332 = !DILocation(line: 2396, column: 29, scope: !12328)
!12333 = !DILocation(line: 2397, column: 3, scope: !12328)
!12334 = !DILocation(line: 2397, column: 6, scope: !12328)
!12335 = !DILocation(line: 2397, column: 11, scope: !12328)
!12336 = !DILocation(line: 2397, column: 20, scope: !12328)
!12337 = !DILocation(line: 2397, column: 23, scope: !12328)
!12338 = !DILocation(line: 2397, column: 32, scope: !12328)
!12339 = !DILocation(line: 2397, column: 37, scope: !12328)
!12340 = !DILocation(line: 2397, column: 46, scope: !12328)
!12341 = !DILocation(line: 2397, column: 49, scope: !12328)
!12342 = !DILocation(line: 2397, column: 30, scope: !12328)
!12343 = !DILocation(line: 2398, column: 9, scope: !12328)
!12344 = !DILocation(line: 2398, column: 12, scope: !12328)
!12345 = !DILocation(line: 2398, column: 14, scope: !12328)
!12346 = !DILocation(line: 2396, column: 16, scope: !12299)
!12347 = !DILocalVariable(name: "nextp", scope: !12348, file: !3, line: 2400, type: !5595)
!12348 = distinct !DILexicalBlock(scope: !12328, file: !3, line: 2399, column: 2)
!12349 = !DILocation(line: 2400, column: 20, scope: !12348)
!12350 = !DILocation(line: 2403, column: 13, scope: !12348)
!12351 = !DILocation(line: 2403, column: 18, scope: !12348)
!12352 = !DILocation(line: 2403, column: 27, scope: !12348)
!12353 = !DILocation(line: 2403, column: 30, scope: !12348)
!12354 = !DILocation(line: 2403, column: 10, scope: !12348)
!12355 = !DILocation(line: 2404, column: 16, scope: !12356)
!12356 = distinct !DILexicalBlock(scope: !12348, file: !3, line: 2404, column: 4)
!12357 = !DILocation(line: 2404, column: 21, scope: !12356)
!12358 = !DILocation(line: 2404, column: 30, scope: !12356)
!12359 = !DILocation(line: 2404, column: 33, scope: !12356)
!12360 = !DILocation(line: 2404, column: 14, scope: !12356)
!12361 = !DILocation(line: 2404, column: 9, scope: !12356)
!12362 = !DILocation(line: 2404, column: 44, scope: !12363)
!12363 = distinct !DILexicalBlock(scope: !12356, file: !3, line: 2404, column: 4)
!12364 = !DILocation(line: 2404, column: 4, scope: !12356)
!12365 = !DILocalVariable(name: "new_lc", scope: !12366, file: !3, line: 2406, type: !2437)
!12366 = distinct !DILexicalBlock(scope: !12363, file: !3, line: 2405, column: 6)
!12367 = !DILocation(line: 2406, column: 23, scope: !12366)
!12368 = !DILocation(line: 2408, column: 46, scope: !12366)
!12369 = !DILocation(line: 2408, column: 34, scope: !12366)
!12370 = !DILocation(line: 2408, column: 17, scope: !12366)
!12371 = !DILocation(line: 2408, column: 15, scope: !12366)
!12372 = !DILocation(line: 2409, column: 8, scope: !12366)
!12373 = !DILocation(line: 2409, column: 16, scope: !12366)
!12374 = !DILocation(line: 2409, column: 21, scope: !12366)
!12375 = !DILocation(line: 2410, column: 23, scope: !12366)
!12376 = !DILocation(line: 2410, column: 29, scope: !12366)
!12377 = !DILocation(line: 2410, column: 8, scope: !12366)
!12378 = !DILocation(line: 2410, column: 16, scope: !12366)
!12379 = !DILocation(line: 2410, column: 21, scope: !12366)
!12380 = !DILocation(line: 2411, column: 13, scope: !12381)
!12381 = distinct !DILexicalBlock(scope: !12366, file: !3, line: 2411, column: 12)
!12382 = !DILocation(line: 2411, column: 19, scope: !12381)
!12383 = !DILocation(line: 2411, column: 27, scope: !12381)
!12384 = !DILocation(line: 2411, column: 30, scope: !12381)
!12385 = !DILocation(line: 2411, column: 12, scope: !12366)
!12386 = !DILocation(line: 2412, column: 3, scope: !12381)
!12387 = !DILocation(line: 2412, column: 11, scope: !12381)
!12388 = !DILocation(line: 2412, column: 19, scope: !12381)
!12389 = !DILocation(line: 2414, column: 21, scope: !12381)
!12390 = !DILocation(line: 2414, column: 27, scope: !12381)
!12391 = !DILocation(line: 2414, column: 3, scope: !12381)
!12392 = !DILocation(line: 2414, column: 11, scope: !12381)
!12393 = !DILocation(line: 2414, column: 19, scope: !12381)
!12394 = !DILocation(line: 2415, column: 22, scope: !12366)
!12395 = !DILocation(line: 2415, column: 28, scope: !12366)
!12396 = !DILocation(line: 2415, column: 8, scope: !12366)
!12397 = !DILocation(line: 2415, column: 16, scope: !12366)
!12398 = !DILocation(line: 2415, column: 20, scope: !12366)
!12399 = !DILocation(line: 2417, column: 17, scope: !12366)
!12400 = !DILocation(line: 2417, column: 9, scope: !12366)
!12401 = !DILocation(line: 2417, column: 15, scope: !12366)
!12402 = !DILocation(line: 2418, column: 17, scope: !12366)
!12403 = !DILocation(line: 2418, column: 25, scope: !12366)
!12404 = !DILocation(line: 2418, column: 14, scope: !12366)
!12405 = !DILocation(line: 2419, column: 6, scope: !12366)
!12406 = !DILocation(line: 2404, column: 57, scope: !12363)
!12407 = !DILocation(line: 2404, column: 63, scope: !12363)
!12408 = !DILocation(line: 2404, column: 55, scope: !12363)
!12409 = !DILocation(line: 2404, column: 4, scope: !12363)
!12410 = distinct !{!12410, !12364, !12411}
!12411 = !DILocation(line: 2419, column: 6, scope: !12356)
!12412 = !DILocation(line: 2421, column: 30, scope: !12348)
!12413 = !DILocation(line: 2421, column: 35, scope: !12348)
!12414 = !DILocation(line: 2421, column: 44, scope: !12348)
!12415 = !DILocation(line: 2421, column: 47, scope: !12348)
!12416 = !DILocation(line: 2421, column: 4, scope: !12348)
!12417 = !DILocation(line: 2421, column: 9, scope: !12348)
!12418 = !DILocation(line: 2421, column: 18, scope: !12348)
!12419 = !DILocation(line: 2421, column: 21, scope: !12348)
!12420 = !DILocation(line: 2421, column: 28, scope: !12348)
!12421 = !DILocation(line: 2422, column: 5, scope: !12348)
!12422 = !DILocation(line: 2423, column: 2, scope: !12348)
!12423 = !DILocation(line: 2424, column: 7, scope: !11682)
!12424 = !DILocation(line: 2424, column: 12, scope: !11682)
!12425 = !DILocation(line: 2424, column: 21, scope: !11682)
!12426 = !DILocation(line: 2424, column: 24, scope: !11682)
!12427 = !DILocation(line: 2424, column: 32, scope: !11682)
!12428 = !DILocation(line: 2425, column: 5, scope: !11682)
!12429 = !DILocation(line: 2188, column: 22, scope: !11678)
!12430 = !DILocation(line: 2188, column: 3, scope: !11678)
!12431 = distinct !{!12431, !11680, !12432}
!12432 = !DILocation(line: 2425, column: 5, scope: !11675)
!12433 = !DILocation(line: 2427, column: 7, scope: !12434)
!12434 = distinct !DILexicalBlock(scope: !11398, file: !3, line: 2427, column: 7)
!12435 = !DILocation(line: 2427, column: 7, scope: !11398)
!12436 = !DILocation(line: 2428, column: 12, scope: !12437)
!12437 = distinct !DILexicalBlock(scope: !12434, file: !3, line: 2428, column: 5)
!12438 = !DILocation(line: 2428, column: 10, scope: !12437)
!12439 = !DILocation(line: 2428, column: 17, scope: !12440)
!12440 = distinct !DILexicalBlock(scope: !12437, file: !3, line: 2428, column: 5)
!12441 = !DILocation(line: 2428, column: 21, scope: !12440)
!12442 = !DILocation(line: 2428, column: 26, scope: !12440)
!12443 = !DILocation(line: 2428, column: 19, scope: !12440)
!12444 = !DILocation(line: 2428, column: 38, scope: !12440)
!12445 = !DILocation(line: 2428, column: 41, scope: !12440)
!12446 = !DILocation(line: 2428, column: 45, scope: !12440)
!12447 = !DILocation(line: 2428, column: 50, scope: !12440)
!12448 = !DILocation(line: 2428, column: 43, scope: !12440)
!12449 = !DILocation(line: 0, scope: !12440)
!12450 = !DILocation(line: 2428, column: 5, scope: !12437)
!12451 = !DILocalVariable(name: "node", scope: !12452, file: !3, line: 2430, type: !2437)
!12452 = distinct !DILexicalBlock(scope: !12440, file: !3, line: 2429, column: 7)
!12453 = !DILocation(line: 2430, column: 17, scope: !12452)
!12454 = !DILocalVariable(name: "node2", scope: !12452, file: !3, line: 2430, type: !2437)
!12455 = !DILocation(line: 2430, column: 23, scope: !12452)
!12456 = !DILocation(line: 2431, column: 14, scope: !12457)
!12457 = distinct !DILexicalBlock(scope: !12452, file: !3, line: 2431, column: 2)
!12458 = !DILocation(line: 2431, column: 19, scope: !12457)
!12459 = !DILocation(line: 2431, column: 28, scope: !12457)
!12460 = !DILocation(line: 2431, column: 31, scope: !12457)
!12461 = !DILocation(line: 2431, column: 12, scope: !12457)
!12462 = !DILocation(line: 2431, column: 7, scope: !12457)
!12463 = !DILocation(line: 2431, column: 42, scope: !12464)
!12464 = distinct !DILexicalBlock(scope: !12457, file: !3, line: 2431, column: 2)
!12465 = !DILocation(line: 2431, column: 2, scope: !12457)
!12466 = !DILocation(line: 2432, column: 17, scope: !12467)
!12467 = distinct !DILexicalBlock(scope: !12464, file: !3, line: 2432, column: 4)
!12468 = !DILocation(line: 2432, column: 22, scope: !12467)
!12469 = !DILocation(line: 2432, column: 31, scope: !12467)
!12470 = !DILocation(line: 2432, column: 34, scope: !12467)
!12471 = !DILocation(line: 2432, column: 15, scope: !12467)
!12472 = !DILocation(line: 2432, column: 9, scope: !12467)
!12473 = !DILocation(line: 2432, column: 45, scope: !12474)
!12474 = distinct !DILexicalBlock(scope: !12467, file: !3, line: 2432, column: 4)
!12475 = !DILocation(line: 2432, column: 4, scope: !12467)
!12476 = !DILocation(line: 2433, column: 23, scope: !12477)
!12477 = distinct !DILexicalBlock(scope: !12474, file: !3, line: 2433, column: 10)
!12478 = !DILocation(line: 2433, column: 29, scope: !12477)
!12479 = !DILocation(line: 2433, column: 34, scope: !12477)
!12480 = !DILocation(line: 2433, column: 41, scope: !12477)
!12481 = !DILocation(line: 2433, column: 10, scope: !12477)
!12482 = !DILocation(line: 2433, column: 10, scope: !12474)
!12483 = !DILocation(line: 2435, column: 7, scope: !12484)
!12484 = distinct !DILexicalBlock(scope: !12485, file: !3, line: 2435, column: 7)
!12485 = distinct !DILexicalBlock(scope: !12477, file: !3, line: 2434, column: 8)
!12486 = !DILocation(line: 2435, column: 13, scope: !12484)
!12487 = !DILocation(line: 2435, column: 20, scope: !12484)
!12488 = !DILocation(line: 2435, column: 27, scope: !12484)
!12489 = !DILocation(line: 2435, column: 18, scope: !12484)
!12490 = !DILocation(line: 2435, column: 7, scope: !12485)
!12491 = !DILocation(line: 2436, column: 19, scope: !12484)
!12492 = !DILocation(line: 2436, column: 25, scope: !12484)
!12493 = !DILocation(line: 2436, column: 5, scope: !12484)
!12494 = !DILocation(line: 2436, column: 12, scope: !12484)
!12495 = !DILocation(line: 2436, column: 17, scope: !12484)
!12496 = !DILocation(line: 2437, column: 8, scope: !12485)
!12497 = !DILocation(line: 2433, column: 44, scope: !12477)
!12498 = !DILocation(line: 2432, column: 60, scope: !12474)
!12499 = !DILocation(line: 2432, column: 67, scope: !12474)
!12500 = !DILocation(line: 2432, column: 58, scope: !12474)
!12501 = !DILocation(line: 2432, column: 4, scope: !12474)
!12502 = distinct !{!12502, !12475, !12503}
!12503 = !DILocation(line: 2437, column: 8, scope: !12467)
!12504 = !DILocation(line: 2431, column: 55, scope: !12464)
!12505 = !DILocation(line: 2431, column: 61, scope: !12464)
!12506 = !DILocation(line: 2431, column: 53, scope: !12464)
!12507 = !DILocation(line: 2431, column: 2, scope: !12464)
!12508 = distinct !{!12508, !12465, !12509}
!12509 = !DILocation(line: 2437, column: 8, scope: !12457)
!12510 = !DILocation(line: 2438, column: 7, scope: !12452)
!12511 = !DILocation(line: 2428, column: 64, scope: !12440)
!12512 = !DILocation(line: 2428, column: 5, scope: !12440)
!12513 = distinct !{!12513, !12450, !12514}
!12514 = !DILocation(line: 2438, column: 7, scope: !12437)
!12515 = !DILocation(line: 2441, column: 3, scope: !11398)
!12516 = !DILocation(line: 2442, column: 1, scope: !11398)
!12517 = distinct !DISubprogram(name: "shared_hash_find_1", scope: !3, file: !3, line: 1443, type: !12518, scopeLine: 1444, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!12518 = !DISubroutineType(types: !12519)
!12519 = !{!2447, !2363, !2410, !1836}
!12520 = !DILocalVariable(name: "vars", arg: 1, scope: !12517, file: !3, line: 1443, type: !2363)
!12521 = !DILocation(line: 1443, column: 33, scope: !12517)
!12522 = !DILocalVariable(name: "dv", arg: 2, scope: !12517, file: !3, line: 1443, type: !2410)
!12523 = !DILocation(line: 1443, column: 53, scope: !12517)
!12524 = !DILocalVariable(name: "dvhash", arg: 3, scope: !12517, file: !3, line: 1443, type: !1836)
!12525 = !DILocation(line: 1443, column: 67, scope: !12517)
!12526 = !DILocation(line: 1445, column: 60, scope: !12517)
!12527 = !DILocation(line: 1445, column: 42, scope: !12517)
!12528 = !DILocation(line: 1445, column: 67, scope: !12517)
!12529 = !DILocation(line: 1445, column: 71, scope: !12517)
!12530 = !DILocation(line: 1445, column: 21, scope: !12517)
!12531 = !DILocation(line: 1445, column: 10, scope: !12517)
!12532 = !DILocation(line: 1445, column: 3, scope: !12517)
!12533 = distinct !DISubprogram(name: "onepart_variable_different_p", scope: !3, file: !3, line: 4307, type: !12534, scopeLine: 4308, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!12534 = !DISubroutineType(types: !12535)
!12535 = !{!1130, !2447, !2447}
!12536 = !DILocalVariable(name: "var1", arg: 1, scope: !12533, file: !3, line: 4307, type: !2447)
!12537 = !DILocation(line: 4307, column: 40, scope: !12533)
!12538 = !DILocalVariable(name: "var2", arg: 2, scope: !12533, file: !3, line: 4307, type: !2447)
!12539 = !DILocation(line: 4307, column: 55, scope: !12533)
!12540 = !DILocalVariable(name: "lc1", scope: !12533, file: !3, line: 4309, type: !2437)
!12541 = !DILocation(line: 4309, column: 18, scope: !12533)
!12542 = !DILocalVariable(name: "lc2", scope: !12533, file: !3, line: 4309, type: !2437)
!12543 = !DILocation(line: 4309, column: 23, scope: !12533)
!12544 = !DILocation(line: 4311, column: 7, scope: !12545)
!12545 = distinct !DILexicalBlock(scope: !12533, file: !3, line: 4311, column: 7)
!12546 = !DILocation(line: 4311, column: 15, scope: !12545)
!12547 = !DILocation(line: 4311, column: 12, scope: !12545)
!12548 = !DILocation(line: 4311, column: 7, scope: !12533)
!12549 = !DILocation(line: 4312, column: 5, scope: !12545)
!12550 = !DILocation(line: 4314, column: 3, scope: !12533)
!12551 = !DILocation(line: 4315, column: 3, scope: !12533)
!12552 = !DILocation(line: 4317, column: 9, scope: !12533)
!12553 = !DILocation(line: 4317, column: 15, scope: !12533)
!12554 = !DILocation(line: 4317, column: 27, scope: !12533)
!12555 = !DILocation(line: 4317, column: 7, scope: !12533)
!12556 = !DILocation(line: 4318, column: 9, scope: !12533)
!12557 = !DILocation(line: 4318, column: 15, scope: !12533)
!12558 = !DILocation(line: 4318, column: 27, scope: !12533)
!12559 = !DILocation(line: 4318, column: 7, scope: !12533)
!12560 = !DILocation(line: 4320, column: 3, scope: !12533)
!12561 = !DILocation(line: 4321, column: 3, scope: !12533)
!12562 = !DILocation(line: 4323, column: 3, scope: !12533)
!12563 = !DILocation(line: 4323, column: 10, scope: !12533)
!12564 = !DILocation(line: 4323, column: 14, scope: !12533)
!12565 = !DILocation(line: 4323, column: 17, scope: !12533)
!12566 = !DILocation(line: 0, scope: !12533)
!12567 = !DILocation(line: 4325, column: 20, scope: !12568)
!12568 = distinct !DILexicalBlock(scope: !12569, file: !3, line: 4325, column: 11)
!12569 = distinct !DILexicalBlock(scope: !12533, file: !3, line: 4324, column: 5)
!12570 = !DILocation(line: 4325, column: 25, scope: !12568)
!12571 = !DILocation(line: 4325, column: 30, scope: !12568)
!12572 = !DILocation(line: 4325, column: 35, scope: !12568)
!12573 = !DILocation(line: 4325, column: 11, scope: !12568)
!12574 = !DILocation(line: 4325, column: 11, scope: !12569)
!12575 = !DILocation(line: 4326, column: 2, scope: !12568)
!12576 = !DILocation(line: 4327, column: 13, scope: !12569)
!12577 = !DILocation(line: 4327, column: 18, scope: !12569)
!12578 = !DILocation(line: 4327, column: 11, scope: !12569)
!12579 = !DILocation(line: 4328, column: 13, scope: !12569)
!12580 = !DILocation(line: 4328, column: 18, scope: !12569)
!12581 = !DILocation(line: 4328, column: 11, scope: !12569)
!12582 = distinct !{!12582, !12562, !12583}
!12583 = !DILocation(line: 4329, column: 5, scope: !12533)
!12584 = !DILocation(line: 4331, column: 10, scope: !12533)
!12585 = !DILocation(line: 4331, column: 17, scope: !12533)
!12586 = !DILocation(line: 4331, column: 14, scope: !12533)
!12587 = !DILocation(line: 4331, column: 3, scope: !12533)
!12588 = !DILocation(line: 4332, column: 1, scope: !12533)
!12589 = distinct !DISubprogram(name: "intersect_loc_chains", scope: !3, file: !3, line: 2586, type: !12590, scopeLine: 2588, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!12590 = !DISubroutineType(types: !12591)
!12591 = !{null, !1188, !5595, !2497, !2437, !2447}
!12592 = !DILocalVariable(name: "val", arg: 1, scope: !12589, file: !3, line: 2586, type: !1188)
!12593 = !DILocation(line: 2586, column: 27, scope: !12589)
!12594 = !DILocalVariable(name: "dest", arg: 2, scope: !12589, file: !3, line: 2586, type: !5595)
!12595 = !DILocation(line: 2586, column: 48, scope: !12589)
!12596 = !DILocalVariable(name: "dsm", arg: 3, scope: !12589, file: !3, line: 2586, type: !2497)
!12597 = !DILocation(line: 2586, column: 74, scope: !12589)
!12598 = !DILocalVariable(name: "s1node", arg: 4, scope: !12589, file: !3, line: 2587, type: !2437)
!12599 = !DILocation(line: 2587, column: 24, scope: !12589)
!12600 = !DILocalVariable(name: "s2var", arg: 5, scope: !12589, file: !3, line: 2587, type: !2447)
!12601 = !DILocation(line: 2587, column: 41, scope: !12589)
!12602 = !DILocalVariable(name: "s1set", scope: !12589, file: !3, line: 2589, type: !2418)
!12603 = !DILocation(line: 2589, column: 17, scope: !12589)
!12604 = !DILocation(line: 2589, column: 25, scope: !12589)
!12605 = !DILocation(line: 2589, column: 30, scope: !12589)
!12606 = !DILocalVariable(name: "s2set", scope: !12589, file: !3, line: 2590, type: !2418)
!12607 = !DILocation(line: 2590, column: 17, scope: !12589)
!12608 = !DILocation(line: 2590, column: 25, scope: !12589)
!12609 = !DILocation(line: 2590, column: 30, scope: !12589)
!12610 = !DILocalVariable(name: "found", scope: !12589, file: !3, line: 2591, type: !2437)
!12611 = !DILocation(line: 2591, column: 18, scope: !12589)
!12612 = !DILocation(line: 2593, column: 3, scope: !12589)
!12613 = !DILocation(line: 2593, column: 10, scope: !12614)
!12614 = distinct !DILexicalBlock(scope: !12615, file: !3, line: 2593, column: 3)
!12615 = distinct !DILexicalBlock(scope: !12589, file: !3, line: 2593, column: 3)
!12616 = !DILocation(line: 2593, column: 3, scope: !12615)
!12617 = !DILocation(line: 2595, column: 11, scope: !12618)
!12618 = distinct !DILexicalBlock(scope: !12619, file: !3, line: 2595, column: 11)
!12619 = distinct !DILexicalBlock(scope: !12614, file: !3, line: 2594, column: 5)
!12620 = !DILocation(line: 2595, column: 19, scope: !12618)
!12621 = !DILocation(line: 2595, column: 26, scope: !12618)
!12622 = !DILocation(line: 2595, column: 23, scope: !12618)
!12623 = !DILocation(line: 2595, column: 11, scope: !12619)
!12624 = !DILocation(line: 2596, column: 2, scope: !12618)
!12625 = !DILocation(line: 2598, column: 38, scope: !12626)
!12626 = distinct !DILexicalBlock(scope: !12619, file: !3, line: 2598, column: 11)
!12627 = !DILocation(line: 2598, column: 46, scope: !12626)
!12628 = !DILocation(line: 2598, column: 51, scope: !12626)
!12629 = !DILocation(line: 2599, column: 28, scope: !12626)
!12630 = !DILocation(line: 2599, column: 35, scope: !12626)
!12631 = !DILocation(line: 2599, column: 10, scope: !12626)
!12632 = !DILocation(line: 2598, column: 20, scope: !12626)
!12633 = !DILocation(line: 2598, column: 18, scope: !12626)
!12634 = !DILocation(line: 2598, column: 11, scope: !12619)
!12635 = !DILocation(line: 2601, column: 30, scope: !12636)
!12636 = distinct !DILexicalBlock(scope: !12626, file: !3, line: 2600, column: 2)
!12637 = !DILocation(line: 2601, column: 36, scope: !12636)
!12638 = !DILocation(line: 2601, column: 44, scope: !12636)
!12639 = !DILocation(line: 2602, column: 9, scope: !12636)
!12640 = !DILocation(line: 2601, column: 4, scope: !12636)
!12641 = !DILocation(line: 2603, column: 4, scope: !12636)
!12642 = !DILocation(line: 2606, column: 11, scope: !12643)
!12643 = distinct !DILexicalBlock(scope: !12619, file: !3, line: 2606, column: 11)
!12644 = !DILocation(line: 2606, column: 34, scope: !12643)
!12645 = !DILocation(line: 2607, column: 4, scope: !12643)
!12646 = !DILocation(line: 2607, column: 8, scope: !12643)
!12647 = !DILocation(line: 2606, column: 11, scope: !12619)
!12648 = !DILocalVariable(name: "dv", scope: !12649, file: !3, line: 2609, type: !2410)
!12649 = distinct !DILexicalBlock(scope: !12643, file: !3, line: 2608, column: 2)
!12650 = !DILocation(line: 2609, column: 18, scope: !12649)
!12651 = !DILocation(line: 2609, column: 38, scope: !12649)
!12652 = !DILocation(line: 2609, column: 46, scope: !12649)
!12653 = !DILocation(line: 2609, column: 23, scope: !12649)
!12654 = !DILocalVariable(name: "svar", scope: !12649, file: !3, line: 2610, type: !2447)
!12655 = !DILocation(line: 2610, column: 13, scope: !12649)
!12656 = !DILocation(line: 2610, column: 38, scope: !12649)
!12657 = !DILocation(line: 2610, column: 45, scope: !12649)
!12658 = !DILocation(line: 2610, column: 51, scope: !12649)
!12659 = !DILocation(line: 2610, column: 20, scope: !12649)
!12660 = !DILocation(line: 2611, column: 8, scope: !12661)
!12661 = distinct !DILexicalBlock(scope: !12649, file: !3, line: 2611, column: 8)
!12662 = !DILocation(line: 2611, column: 8, scope: !12649)
!12663 = !DILocation(line: 2613, column: 12, scope: !12664)
!12664 = distinct !DILexicalBlock(scope: !12665, file: !3, line: 2613, column: 12)
!12665 = distinct !DILexicalBlock(scope: !12661, file: !3, line: 2612, column: 6)
!12666 = !DILocation(line: 2613, column: 18, scope: !12664)
!12667 = !DILocation(line: 2613, column: 30, scope: !12664)
!12668 = !DILocation(line: 2613, column: 12, scope: !12665)
!12669 = !DILocation(line: 2615, column: 5, scope: !12670)
!12670 = distinct !DILexicalBlock(scope: !12664, file: !3, line: 2614, column: 3)
!12671 = !DILocation(line: 2615, column: 39, scope: !12670)
!12672 = !DILocation(line: 2616, column: 27, scope: !12670)
!12673 = !DILocation(line: 2616, column: 32, scope: !12670)
!12674 = !DILocation(line: 2616, column: 38, scope: !12670)
!12675 = !DILocation(line: 2617, column: 6, scope: !12670)
!12676 = !DILocation(line: 2617, column: 12, scope: !12670)
!12677 = !DILocation(line: 2617, column: 24, scope: !12670)
!12678 = !DILocation(line: 2618, column: 6, scope: !12670)
!12679 = !DILocation(line: 2616, column: 5, scope: !12670)
!12680 = !DILocation(line: 2619, column: 5, scope: !12670)
!12681 = !DILocation(line: 2619, column: 39, scope: !12670)
!12682 = !DILocation(line: 2620, column: 3, scope: !12670)
!12683 = !DILocation(line: 2621, column: 6, scope: !12665)
!12684 = !DILocation(line: 2622, column: 2, scope: !12649)
!12685 = !DILocation(line: 2652, column: 5, scope: !12619)
!12686 = !DILocation(line: 2593, column: 27, scope: !12614)
!12687 = !DILocation(line: 2593, column: 35, scope: !12614)
!12688 = !DILocation(line: 2593, column: 25, scope: !12614)
!12689 = !DILocation(line: 2593, column: 3, scope: !12614)
!12690 = distinct !{!12690, !12616, !12691}
!12691 = !DILocation(line: 2652, column: 5, scope: !12615)
!12692 = !DILocation(line: 2653, column: 1, scope: !12589)
!12693 = distinct !DISubprogram(name: "delete_slot_part", scope: !3, file: !3, line: 6719, type: !12694, scopeLine: 6721, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!12694 = !DISubroutineType(types: !12695)
!12695 = !{!1848, !2418, !1188, !1848, !1067}
!12696 = !DILocalVariable(name: "set", arg: 1, scope: !12693, file: !3, line: 6719, type: !2418)
!12697 = !DILocation(line: 6719, column: 33, scope: !12693)
!12698 = !DILocalVariable(name: "loc", arg: 2, scope: !12693, file: !3, line: 6719, type: !1188)
!12699 = !DILocation(line: 6719, column: 42, scope: !12693)
!12700 = !DILocalVariable(name: "slot", arg: 3, scope: !12693, file: !3, line: 6719, type: !1848)
!12701 = !DILocation(line: 6719, column: 54, scope: !12693)
!12702 = !DILocalVariable(name: "offset", arg: 4, scope: !12693, file: !3, line: 6720, type: !1067)
!12703 = !DILocation(line: 6720, column: 19, scope: !12693)
!12704 = !DILocalVariable(name: "var", scope: !12693, file: !3, line: 6722, type: !2447)
!12705 = !DILocation(line: 6722, column: 12, scope: !12693)
!12706 = !DILocation(line: 6722, column: 30, scope: !12693)
!12707 = !DILocation(line: 6722, column: 29, scope: !12693)
!12708 = !DILocation(line: 6722, column: 18, scope: !12693)
!12709 = !DILocalVariable(name: "pos", scope: !12693, file: !3, line: 6723, type: !1010)
!12710 = !DILocation(line: 6723, column: 7, scope: !12693)
!12711 = !DILocation(line: 6723, column: 42, scope: !12693)
!12712 = !DILocation(line: 6723, column: 47, scope: !12693)
!12713 = !DILocation(line: 6723, column: 13, scope: !12693)
!12714 = !DILocation(line: 6725, column: 7, scope: !12715)
!12715 = distinct !DILexicalBlock(scope: !12693, file: !3, line: 6725, column: 7)
!12716 = !DILocation(line: 6725, column: 11, scope: !12715)
!12717 = !DILocation(line: 6725, column: 7, scope: !12693)
!12718 = !DILocalVariable(name: "node", scope: !12719, file: !3, line: 6727, type: !2437)
!12719 = distinct !DILexicalBlock(scope: !12715, file: !3, line: 6726, column: 5)
!12720 = !DILocation(line: 6727, column: 22, scope: !12719)
!12721 = !DILocalVariable(name: "next", scope: !12719, file: !3, line: 6727, type: !2437)
!12722 = !DILocation(line: 6727, column: 28, scope: !12719)
!12723 = !DILocalVariable(name: "nextp", scope: !12719, file: !3, line: 6728, type: !5595)
!12724 = !DILocation(line: 6728, column: 23, scope: !12719)
!12725 = !DILocalVariable(name: "changed", scope: !12719, file: !3, line: 6729, type: !1130)
!12726 = !DILocation(line: 6729, column: 12, scope: !12719)
!12727 = !DILocation(line: 6731, column: 25, scope: !12728)
!12728 = distinct !DILexicalBlock(scope: !12719, file: !3, line: 6731, column: 11)
!12729 = !DILocation(line: 6731, column: 30, scope: !12728)
!12730 = !DILocation(line: 6731, column: 35, scope: !12728)
!12731 = !DILocation(line: 6731, column: 11, scope: !12728)
!12732 = !DILocation(line: 6731, column: 11, scope: !12719)
!12733 = !DILocation(line: 6735, column: 16, scope: !12734)
!12734 = distinct !DILexicalBlock(scope: !12735, file: !3, line: 6735, column: 4)
!12735 = distinct !DILexicalBlock(scope: !12728, file: !3, line: 6732, column: 2)
!12736 = !DILocation(line: 6735, column: 21, scope: !12734)
!12737 = !DILocation(line: 6735, column: 30, scope: !12734)
!12738 = !DILocation(line: 6735, column: 35, scope: !12734)
!12739 = !DILocation(line: 6735, column: 14, scope: !12734)
!12740 = !DILocation(line: 6735, column: 9, scope: !12734)
!12741 = !DILocation(line: 6735, column: 46, scope: !12742)
!12742 = distinct !DILexicalBlock(scope: !12734, file: !3, line: 6735, column: 4)
!12743 = !DILocation(line: 6735, column: 4, scope: !12734)
!12744 = !DILocation(line: 6738, column: 13, scope: !12745)
!12745 = distinct !DILexicalBlock(scope: !12746, file: !3, line: 6738, column: 12)
!12746 = distinct !DILexicalBlock(scope: !12742, file: !3, line: 6737, column: 6)
!12747 = !DILocation(line: 6738, column: 31, scope: !12745)
!12748 = !DILocation(line: 6738, column: 34, scope: !12745)
!12749 = !DILocation(line: 6739, column: 6, scope: !12745)
!12750 = !DILocation(line: 6739, column: 9, scope: !12745)
!12751 = !DILocation(line: 6739, column: 30, scope: !12745)
!12752 = !DILocation(line: 6739, column: 27, scope: !12745)
!12753 = !DILocation(line: 6740, column: 5, scope: !12745)
!12754 = !DILocation(line: 6740, column: 21, scope: !12745)
!12755 = !DILocation(line: 6740, column: 27, scope: !12745)
!12756 = !DILocation(line: 6740, column: 32, scope: !12745)
!12757 = !DILocation(line: 6740, column: 8, scope: !12745)
!12758 = !DILocation(line: 6738, column: 12, scope: !12746)
!12759 = !DILocation(line: 6742, column: 30, scope: !12760)
!12760 = distinct !DILexicalBlock(scope: !12745, file: !3, line: 6741, column: 3)
!12761 = !DILocation(line: 6742, column: 35, scope: !12760)
!12762 = !DILocation(line: 6742, column: 41, scope: !12760)
!12763 = !DILocation(line: 6742, column: 12, scope: !12760)
!12764 = !DILocation(line: 6742, column: 10, scope: !12760)
!12765 = !DILocation(line: 6744, column: 22, scope: !12760)
!12766 = !DILocation(line: 6744, column: 21, scope: !12760)
!12767 = !DILocation(line: 6744, column: 11, scope: !12760)
!12768 = !DILocation(line: 6744, column: 9, scope: !12760)
!12769 = !DILocation(line: 6745, column: 5, scope: !12760)
!12770 = !DILocation(line: 6747, column: 6, scope: !12746)
!12771 = !DILocation(line: 6736, column: 16, scope: !12742)
!12772 = !DILocation(line: 6736, column: 22, scope: !12742)
!12773 = !DILocation(line: 6736, column: 14, scope: !12742)
!12774 = !DILocation(line: 6735, column: 4, scope: !12742)
!12775 = distinct !{!12775, !12743, !12776}
!12776 = !DILocation(line: 6747, column: 6, scope: !12734)
!12777 = !DILocation(line: 6748, column: 2, scope: !12735)
!12778 = !DILocation(line: 6751, column: 15, scope: !12719)
!12779 = !DILocation(line: 6752, column: 16, scope: !12719)
!12780 = !DILocation(line: 6752, column: 21, scope: !12719)
!12781 = !DILocation(line: 6752, column: 30, scope: !12719)
!12782 = !DILocation(line: 6752, column: 35, scope: !12719)
!12783 = !DILocation(line: 6752, column: 13, scope: !12719)
!12784 = !DILocation(line: 6753, column: 20, scope: !12785)
!12785 = distinct !DILexicalBlock(scope: !12719, file: !3, line: 6753, column: 7)
!12786 = !DILocation(line: 6753, column: 19, scope: !12785)
!12787 = !DILocation(line: 6753, column: 17, scope: !12785)
!12788 = !DILocation(line: 6753, column: 12, scope: !12785)
!12789 = !DILocation(line: 6753, column: 27, scope: !12790)
!12790 = distinct !DILexicalBlock(scope: !12785, file: !3, line: 6753, column: 7)
!12791 = !DILocation(line: 6753, column: 7, scope: !12785)
!12792 = !DILocation(line: 6755, column: 11, scope: !12793)
!12793 = distinct !DILexicalBlock(scope: !12790, file: !3, line: 6754, column: 2)
!12794 = !DILocation(line: 6755, column: 17, scope: !12793)
!12795 = !DILocation(line: 6755, column: 9, scope: !12793)
!12796 = !DILocation(line: 6756, column: 9, scope: !12797)
!12797 = distinct !DILexicalBlock(scope: !12793, file: !3, line: 6756, column: 8)
!12798 = !DILocation(line: 6756, column: 27, scope: !12797)
!12799 = !DILocation(line: 6756, column: 30, scope: !12797)
!12800 = !DILocation(line: 6757, column: 9, scope: !12797)
!12801 = !DILocation(line: 6757, column: 12, scope: !12797)
!12802 = !DILocation(line: 6757, column: 33, scope: !12797)
!12803 = !DILocation(line: 6757, column: 30, scope: !12797)
!12804 = !DILocation(line: 6758, column: 8, scope: !12797)
!12805 = !DILocation(line: 6758, column: 24, scope: !12797)
!12806 = !DILocation(line: 6758, column: 30, scope: !12797)
!12807 = !DILocation(line: 6758, column: 35, scope: !12797)
!12808 = !DILocation(line: 6758, column: 11, scope: !12797)
!12809 = !DILocation(line: 6756, column: 8, scope: !12793)
!12810 = !DILocation(line: 6760, column: 12, scope: !12811)
!12811 = distinct !DILexicalBlock(scope: !12812, file: !3, line: 6760, column: 12)
!12812 = distinct !DILexicalBlock(scope: !12797, file: !3, line: 6759, column: 6)
!12813 = !DILocation(line: 6760, column: 23, scope: !12811)
!12814 = !DILocation(line: 6760, column: 26, scope: !12811)
!12815 = !DILocation(line: 6760, column: 30, scope: !12811)
!12816 = !DILocation(line: 6760, column: 35, scope: !12811)
!12817 = !DILocation(line: 6760, column: 52, scope: !12811)
!12818 = !DILocation(line: 6760, column: 57, scope: !12811)
!12819 = !DILocation(line: 6760, column: 38, scope: !12811)
!12820 = !DILocation(line: 6760, column: 12, scope: !12812)
!12821 = !DILocation(line: 6761, column: 24, scope: !12811)
!12822 = !DILocation(line: 6761, column: 29, scope: !12811)
!12823 = !DILocation(line: 6761, column: 33, scope: !12811)
!12824 = !DILocation(line: 6761, column: 39, scope: !12811)
!12825 = !DILocation(line: 6761, column: 3, scope: !12811)
!12826 = !DILocation(line: 6765, column: 12, scope: !12827)
!12827 = distinct !DILexicalBlock(scope: !12812, file: !3, line: 6765, column: 12)
!12828 = !DILocation(line: 6765, column: 17, scope: !12827)
!12829 = !DILocation(line: 6765, column: 26, scope: !12827)
!12830 = !DILocation(line: 6765, column: 31, scope: !12827)
!12831 = !DILocation(line: 6765, column: 42, scope: !12827)
!12832 = !DILocation(line: 6765, column: 48, scope: !12827)
!12833 = !DILocation(line: 6765, column: 39, scope: !12827)
!12834 = !DILocation(line: 6765, column: 12, scope: !12812)
!12835 = !DILocation(line: 6767, column: 13, scope: !12836)
!12836 = distinct !DILexicalBlock(scope: !12827, file: !3, line: 6766, column: 3)
!12837 = !DILocation(line: 6768, column: 5, scope: !12836)
!12838 = !DILocation(line: 6768, column: 10, scope: !12836)
!12839 = !DILocation(line: 6768, column: 19, scope: !12836)
!12840 = !DILocation(line: 6768, column: 24, scope: !12836)
!12841 = !DILocation(line: 6768, column: 32, scope: !12836)
!12842 = !DILocation(line: 6769, column: 5, scope: !12836)
!12843 = !DILocation(line: 6769, column: 10, scope: !12836)
!12844 = !DILocation(line: 6769, column: 26, scope: !12836)
!12845 = !DILocation(line: 6770, column: 3, scope: !12836)
!12846 = !DILocation(line: 6771, column: 19, scope: !12812)
!12847 = !DILocation(line: 6771, column: 35, scope: !12812)
!12848 = !DILocation(line: 6771, column: 8, scope: !12812)
!12849 = !DILocation(line: 6772, column: 17, scope: !12812)
!12850 = !DILocation(line: 6772, column: 9, scope: !12812)
!12851 = !DILocation(line: 6772, column: 15, scope: !12812)
!12852 = !DILocation(line: 6773, column: 8, scope: !12812)
!12853 = !DILocation(line: 6776, column: 15, scope: !12797)
!12854 = !DILocation(line: 6776, column: 21, scope: !12797)
!12855 = !DILocation(line: 6776, column: 12, scope: !12797)
!12856 = !DILocation(line: 6777, column: 2, scope: !12793)
!12857 = !DILocation(line: 6753, column: 40, scope: !12790)
!12858 = !DILocation(line: 6753, column: 38, scope: !12790)
!12859 = !DILocation(line: 6753, column: 7, scope: !12790)
!12860 = distinct !{!12860, !12791, !12861}
!12861 = !DILocation(line: 6777, column: 2, scope: !12785)
!12862 = !DILocation(line: 6779, column: 11, scope: !12863)
!12863 = distinct !DILexicalBlock(scope: !12719, file: !3, line: 6779, column: 11)
!12864 = !DILocation(line: 6779, column: 16, scope: !12863)
!12865 = !DILocation(line: 6779, column: 25, scope: !12863)
!12866 = !DILocation(line: 6779, column: 30, scope: !12863)
!12867 = !DILocation(line: 6779, column: 40, scope: !12863)
!12868 = !DILocation(line: 6779, column: 11, scope: !12719)
!12869 = !DILocation(line: 6781, column: 12, scope: !12870)
!12870 = distinct !DILexicalBlock(scope: !12863, file: !3, line: 6780, column: 2)
!12871 = !DILocation(line: 6782, column: 4, scope: !12870)
!12872 = !DILocation(line: 6782, column: 9, scope: !12870)
!12873 = !DILocation(line: 6782, column: 20, scope: !12870)
!12874 = !DILocation(line: 6783, column: 8, scope: !12875)
!12875 = distinct !DILexicalBlock(scope: !12870, file: !3, line: 6783, column: 8)
!12876 = !DILocation(line: 6783, column: 8, scope: !12870)
!12877 = !DILocation(line: 6784, column: 6, scope: !12875)
!12878 = !DILocation(line: 6784, column: 11, scope: !12875)
!12879 = !DILocation(line: 6784, column: 27, scope: !12875)
!12880 = !DILocation(line: 6785, column: 4, scope: !12870)
!12881 = !DILocation(line: 6785, column: 11, scope: !12870)
!12882 = !DILocation(line: 6785, column: 17, scope: !12870)
!12883 = !DILocation(line: 6785, column: 22, scope: !12870)
!12884 = !DILocation(line: 6785, column: 15, scope: !12870)
!12885 = !DILocation(line: 6787, column: 8, scope: !12886)
!12886 = distinct !DILexicalBlock(scope: !12870, file: !3, line: 6786, column: 6)
!12887 = !DILocation(line: 6787, column: 13, scope: !12886)
!12888 = !DILocation(line: 6787, column: 22, scope: !12886)
!12889 = !DILocation(line: 6787, column: 29, scope: !12886)
!12890 = !DILocation(line: 6787, column: 34, scope: !12886)
!12891 = !DILocation(line: 6787, column: 43, scope: !12886)
!12892 = !DILocation(line: 6787, column: 47, scope: !12886)
!12893 = !DILocation(line: 6788, column: 11, scope: !12886)
!12894 = distinct !{!12894, !12880, !12895}
!12895 = !DILocation(line: 6789, column: 6, scope: !12870)
!12896 = !DILocation(line: 6790, column: 2, scope: !12870)
!12897 = !DILocation(line: 6791, column: 11, scope: !12898)
!12898 = distinct !DILexicalBlock(scope: !12719, file: !3, line: 6791, column: 11)
!12899 = !DILocation(line: 6791, column: 11, scope: !12719)
!12900 = !DILocation(line: 6792, column: 24, scope: !12898)
!12901 = !DILocation(line: 6792, column: 29, scope: !12898)
!12902 = !DILocation(line: 6792, column: 2, scope: !12898)
!12903 = !DILocation(line: 6793, column: 5, scope: !12719)
!12904 = !DILocation(line: 6795, column: 10, scope: !12693)
!12905 = !DILocation(line: 6795, column: 3, scope: !12693)
!12906 = distinct !DISubprogram(name: "canonicalize_values_star", scope: !3, file: !3, line: 3053, type: !6290, scopeLine: 3054, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!12907 = !DILocalVariable(name: "slot", arg: 1, scope: !12906, file: !3, line: 3053, type: !1848)
!12908 = !DILocation(line: 3053, column: 34, scope: !12906)
!12909 = !DILocalVariable(name: "data", arg: 2, scope: !12906, file: !3, line: 3053, type: !1313)
!12910 = !DILocation(line: 3053, column: 46, scope: !12906)
!12911 = !DILocalVariable(name: "set", scope: !12906, file: !3, line: 3055, type: !2418)
!12912 = !DILocation(line: 3055, column: 17, scope: !12906)
!12913 = !DILocation(line: 3055, column: 39, scope: !12906)
!12914 = !DILocation(line: 3055, column: 23, scope: !12906)
!12915 = !DILocalVariable(name: "var", scope: !12906, file: !3, line: 3056, type: !2447)
!12916 = !DILocation(line: 3056, column: 12, scope: !12906)
!12917 = !DILocation(line: 3056, column: 30, scope: !12906)
!12918 = !DILocation(line: 3056, column: 29, scope: !12906)
!12919 = !DILocation(line: 3056, column: 18, scope: !12906)
!12920 = !DILocalVariable(name: "dv", scope: !12906, file: !3, line: 3057, type: !2410)
!12921 = !DILocation(line: 3057, column: 17, scope: !12906)
!12922 = !DILocation(line: 3057, column: 22, scope: !12906)
!12923 = !DILocation(line: 3057, column: 27, scope: !12906)
!12924 = !DILocalVariable(name: "node", scope: !12906, file: !3, line: 3058, type: !2437)
!12925 = !DILocation(line: 3058, column: 18, scope: !12906)
!12926 = !DILocalVariable(name: "cdv", scope: !12906, file: !3, line: 3059, type: !2410)
!12927 = !DILocation(line: 3059, column: 17, scope: !12906)
!12928 = !DILocalVariable(name: "val", scope: !12906, file: !3, line: 3060, type: !1188)
!12929 = !DILocation(line: 3060, column: 7, scope: !12906)
!12930 = !DILocalVariable(name: "cval", scope: !12906, file: !3, line: 3060, type: !1188)
!12931 = !DILocation(line: 3060, column: 12, scope: !12906)
!12932 = !DILocalVariable(name: "cslot", scope: !12906, file: !3, line: 3061, type: !1848)
!12933 = !DILocation(line: 3061, column: 10, scope: !12906)
!12934 = !DILocalVariable(name: "has_value", scope: !12906, file: !3, line: 3062, type: !1130)
!12935 = !DILocation(line: 3062, column: 8, scope: !12906)
!12936 = !DILocalVariable(name: "has_marks", scope: !12906, file: !3, line: 3063, type: !1130)
!12937 = !DILocation(line: 3063, column: 8, scope: !12906)
!12938 = !DILocation(line: 3065, column: 22, scope: !12939)
!12939 = distinct !DILexicalBlock(scope: !12906, file: !3, line: 3065, column: 7)
!12940 = !DILocation(line: 3065, column: 8, scope: !12939)
!12941 = !DILocation(line: 3065, column: 7, scope: !12906)
!12942 = !DILocation(line: 3066, column: 5, scope: !12939)
!12943 = !DILocation(line: 3068, column: 3, scope: !12906)
!12944 = !DILocation(line: 3070, column: 22, scope: !12945)
!12945 = distinct !DILexicalBlock(scope: !12906, file: !3, line: 3070, column: 7)
!12946 = !DILocation(line: 3070, column: 7, scope: !12945)
!12947 = !DILocation(line: 3070, column: 7, scope: !12906)
!12948 = !DILocation(line: 3072, column: 27, scope: !12949)
!12949 = distinct !DILexicalBlock(scope: !12945, file: !3, line: 3071, column: 5)
!12950 = !DILocation(line: 3072, column: 14, scope: !12949)
!12951 = !DILocation(line: 3072, column: 12, scope: !12949)
!12952 = !DILocation(line: 3073, column: 12, scope: !12953)
!12953 = distinct !DILexicalBlock(scope: !12949, file: !3, line: 3073, column: 11)
!12954 = !DILocation(line: 3073, column: 11, scope: !12949)
!12955 = !DILocation(line: 3074, column: 2, scope: !12953)
!12956 = !DILocation(line: 3075, column: 7, scope: !12949)
!12957 = !DILocation(line: 3075, column: 34, scope: !12949)
!12958 = !DILocation(line: 3076, column: 5, scope: !12949)
!12959 = !DILocation(line: 3078, column: 10, scope: !12945)
!12960 = !DILocation(line: 3070, column: 24, scope: !12945)
!12961 = !DILabel(scope: !12906, name: "restart", file: !3, line: 3080)
!12962 = !DILocation(line: 3080, column: 2, scope: !12906)
!12963 = !DILocation(line: 3081, column: 9, scope: !12906)
!12964 = !DILocation(line: 3081, column: 7, scope: !12906)
!12965 = !DILocation(line: 3082, column: 13, scope: !12906)
!12966 = !DILocation(line: 3083, column: 13, scope: !12906)
!12967 = !DILocation(line: 3085, column: 3, scope: !12906)
!12968 = !DILocation(line: 3087, column: 15, scope: !12969)
!12969 = distinct !DILexicalBlock(scope: !12906, file: !3, line: 3087, column: 3)
!12970 = !DILocation(line: 3087, column: 20, scope: !12969)
!12971 = !DILocation(line: 3087, column: 32, scope: !12969)
!12972 = !DILocation(line: 3087, column: 13, scope: !12969)
!12973 = !DILocation(line: 3087, column: 8, scope: !12969)
!12974 = !DILocation(line: 3087, column: 43, scope: !12975)
!12975 = distinct !DILexicalBlock(scope: !12969, file: !3, line: 3087, column: 3)
!12976 = !DILocation(line: 3087, column: 3, scope: !12969)
!12977 = !DILocation(line: 3088, column: 9, scope: !12978)
!12978 = distinct !DILexicalBlock(scope: !12975, file: !3, line: 3088, column: 9)
!12979 = !DILocation(line: 3088, column: 30, scope: !12978)
!12980 = !DILocation(line: 3088, column: 9, scope: !12975)
!12981 = !DILocation(line: 3090, column: 12, scope: !12982)
!12982 = distinct !DILexicalBlock(scope: !12978, file: !3, line: 3089, column: 7)
!12983 = !DILocation(line: 3091, column: 6, scope: !12984)
!12984 = distinct !DILexicalBlock(scope: !12982, file: !3, line: 3091, column: 6)
!12985 = !DILocation(line: 3091, column: 6, scope: !12982)
!12986 = !DILocation(line: 3092, column: 14, scope: !12984)
!12987 = !DILocation(line: 3092, column: 4, scope: !12984)
!12988 = !DILocation(line: 3093, column: 23, scope: !12989)
!12989 = distinct !DILexicalBlock(scope: !12982, file: !3, line: 3093, column: 6)
!12990 = !DILocation(line: 3093, column: 29, scope: !12989)
!12991 = !DILocation(line: 3093, column: 34, scope: !12989)
!12992 = !DILocation(line: 3093, column: 6, scope: !12989)
!12993 = !DILocation(line: 3093, column: 6, scope: !12982)
!12994 = !DILocation(line: 3094, column: 11, scope: !12989)
!12995 = !DILocation(line: 3094, column: 17, scope: !12989)
!12996 = !DILocation(line: 3094, column: 9, scope: !12989)
!12997 = !DILocation(line: 3094, column: 4, scope: !12989)
!12998 = !DILocation(line: 3095, column: 7, scope: !12982)
!12999 = !DILocation(line: 3088, column: 33, scope: !12978)
!13000 = !DILocation(line: 3087, column: 56, scope: !12975)
!13001 = !DILocation(line: 3087, column: 62, scope: !12975)
!13002 = !DILocation(line: 3087, column: 54, scope: !12975)
!13003 = !DILocation(line: 3087, column: 3, scope: !12975)
!13004 = distinct !{!13004, !12976, !13005}
!13005 = !DILocation(line: 3095, column: 7, scope: !12969)
!13006 = !DILocation(line: 3097, column: 8, scope: !13007)
!13007 = distinct !DILexicalBlock(scope: !12906, file: !3, line: 3097, column: 7)
!13008 = !DILocation(line: 3097, column: 7, scope: !12906)
!13009 = !DILocation(line: 3098, column: 5, scope: !13007)
!13010 = !DILocation(line: 3100, column: 7, scope: !13011)
!13011 = distinct !DILexicalBlock(scope: !12906, file: !3, line: 3100, column: 7)
!13012 = !DILocation(line: 3100, column: 15, scope: !13011)
!13013 = !DILocation(line: 3100, column: 12, scope: !13011)
!13014 = !DILocation(line: 3100, column: 7, scope: !12906)
!13015 = !DILocation(line: 3102, column: 12, scope: !13016)
!13016 = distinct !DILexicalBlock(scope: !13017, file: !3, line: 3102, column: 11)
!13017 = distinct !DILexicalBlock(scope: !13011, file: !3, line: 3101, column: 5)
!13018 = !DILocation(line: 3102, column: 22, scope: !13016)
!13019 = !DILocation(line: 3102, column: 39, scope: !13016)
!13020 = !DILocation(line: 3102, column: 25, scope: !13016)
!13021 = !DILocation(line: 3102, column: 11, scope: !13017)
!13022 = !DILocation(line: 3103, column: 2, scope: !13016)
!13023 = !DILocation(line: 3108, column: 7, scope: !13017)
!13024 = !DILocation(line: 3108, column: 33, scope: !13017)
!13025 = !DILocation(line: 3110, column: 19, scope: !13026)
!13026 = distinct !DILexicalBlock(scope: !13017, file: !3, line: 3110, column: 7)
!13027 = !DILocation(line: 3110, column: 24, scope: !13026)
!13028 = !DILocation(line: 3110, column: 36, scope: !13026)
!13029 = !DILocation(line: 3110, column: 17, scope: !13026)
!13030 = !DILocation(line: 3110, column: 12, scope: !13026)
!13031 = !DILocation(line: 3110, column: 47, scope: !13032)
!13032 = distinct !DILexicalBlock(scope: !13026, file: !3, line: 3110, column: 7)
!13033 = !DILocation(line: 3110, column: 7, scope: !13026)
!13034 = !DILocation(line: 3111, column: 6, scope: !13035)
!13035 = distinct !DILexicalBlock(scope: !13032, file: !3, line: 3111, column: 6)
!13036 = !DILocation(line: 3111, column: 27, scope: !13035)
!13037 = !DILocation(line: 3112, column: 6, scope: !13035)
!13038 = !DILocation(line: 3112, column: 9, scope: !13035)
!13039 = !DILocation(line: 3111, column: 6, scope: !13032)
!13040 = !DILocation(line: 3114, column: 13, scope: !13041)
!13041 = distinct !DILexicalBlock(scope: !13035, file: !3, line: 3113, column: 4)
!13042 = !DILocation(line: 3114, column: 19, scope: !13041)
!13043 = !DILocation(line: 3114, column: 11, scope: !13041)
!13044 = !DILocation(line: 3114, column: 6, scope: !13041)
!13045 = !DILabel(scope: !13041, name: "restart_with_cval", file: !3, line: 3115)
!13046 = !DILocation(line: 3115, column: 4, scope: !13041)
!13047 = !DILocation(line: 3116, column: 6, scope: !13041)
!13048 = !DILocation(line: 3116, column: 33, scope: !13041)
!13049 = !DILocation(line: 3117, column: 26, scope: !13041)
!13050 = !DILocation(line: 3117, column: 11, scope: !13041)
!13051 = !DILocation(line: 3117, column: 9, scope: !13041)
!13052 = !DILocation(line: 3118, column: 45, scope: !13041)
!13053 = !DILocation(line: 3118, column: 50, scope: !13041)
!13054 = !DILocation(line: 3118, column: 56, scope: !13041)
!13055 = !DILocation(line: 3118, column: 13, scope: !13041)
!13056 = !DILocation(line: 3118, column: 11, scope: !13041)
!13057 = !DILocation(line: 3119, column: 11, scope: !13058)
!13058 = distinct !DILexicalBlock(scope: !13041, file: !3, line: 3119, column: 10)
!13059 = !DILocation(line: 3119, column: 10, scope: !13041)
!13060 = !DILocation(line: 3121, column: 3, scope: !13061)
!13061 = distinct !DILexicalBlock(scope: !13058, file: !3, line: 3120, column: 8)
!13062 = !DILocation(line: 3124, column: 26, scope: !13061)
!13063 = !DILocation(line: 3124, column: 37, scope: !13061)
!13064 = !DILocation(line: 3124, column: 42, scope: !13061)
!13065 = !DILocation(line: 3124, column: 3, scope: !13061)
!13066 = !DILocation(line: 3125, column: 3, scope: !13061)
!13067 = !DILocation(line: 3127, column: 23, scope: !13041)
!13068 = !DILocation(line: 3127, column: 22, scope: !13041)
!13069 = !DILocation(line: 3127, column: 12, scope: !13041)
!13070 = !DILocation(line: 3127, column: 10, scope: !13041)
!13071 = !DILocation(line: 3128, column: 6, scope: !13041)
!13072 = !DILocation(line: 3129, column: 10, scope: !13073)
!13073 = distinct !DILexicalBlock(scope: !13041, file: !3, line: 3129, column: 10)
!13074 = !DILocation(line: 3129, column: 15, scope: !13073)
!13075 = !DILocation(line: 3129, column: 27, scope: !13073)
!13076 = !DILocation(line: 3129, column: 10, scope: !13041)
!13077 = !DILocation(line: 3130, column: 8, scope: !13073)
!13078 = !DILocation(line: 3131, column: 6, scope: !13041)
!13079 = !DILocation(line: 3132, column: 6, scope: !13041)
!13080 = !DILocation(line: 3110, column: 60, scope: !13032)
!13081 = !DILocation(line: 3110, column: 66, scope: !13032)
!13082 = !DILocation(line: 3110, column: 58, scope: !13032)
!13083 = !DILocation(line: 3110, column: 7, scope: !13032)
!13084 = distinct !{!13084, !13033, !13085}
!13085 = !DILocation(line: 3133, column: 4, scope: !13026)
!13086 = !DILocation(line: 3135, column: 7, scope: !13017)
!13087 = !DILocation(line: 3135, column: 33, scope: !13017)
!13088 = !DILocation(line: 3137, column: 7, scope: !13017)
!13089 = !DILocation(line: 3141, column: 24, scope: !12906)
!13090 = !DILocation(line: 3141, column: 9, scope: !12906)
!13091 = !DILocation(line: 3141, column: 7, scope: !12906)
!13092 = !DILocation(line: 3142, column: 43, scope: !12906)
!13093 = !DILocation(line: 3142, column: 48, scope: !12906)
!13094 = !DILocation(line: 3142, column: 54, scope: !12906)
!13095 = !DILocation(line: 3142, column: 11, scope: !12906)
!13096 = !DILocation(line: 3142, column: 9, scope: !12906)
!13097 = !DILocation(line: 3144, column: 15, scope: !13098)
!13098 = distinct !DILexicalBlock(scope: !12906, file: !3, line: 3144, column: 3)
!13099 = !DILocation(line: 3144, column: 20, scope: !13098)
!13100 = !DILocation(line: 3144, column: 32, scope: !13098)
!13101 = !DILocation(line: 3144, column: 13, scope: !13098)
!13102 = !DILocation(line: 3144, column: 8, scope: !13098)
!13103 = !DILocation(line: 3144, column: 43, scope: !13104)
!13104 = distinct !DILexicalBlock(scope: !13098, file: !3, line: 3144, column: 3)
!13105 = !DILocation(line: 3144, column: 3, scope: !13098)
!13106 = !DILocation(line: 3145, column: 9, scope: !13107)
!13107 = distinct !DILexicalBlock(scope: !13104, file: !3, line: 3145, column: 9)
!13108 = !DILocation(line: 3145, column: 15, scope: !13107)
!13109 = !DILocation(line: 3145, column: 22, scope: !13107)
!13110 = !DILocation(line: 3145, column: 19, scope: !13107)
!13111 = !DILocation(line: 3145, column: 9, scope: !13104)
!13112 = !DILocation(line: 3147, column: 25, scope: !13113)
!13113 = distinct !DILexicalBlock(scope: !13107, file: !3, line: 3146, column: 7)
!13114 = !DILocation(line: 3147, column: 30, scope: !13113)
!13115 = !DILocation(line: 3147, column: 36, scope: !13113)
!13116 = !DILocation(line: 3147, column: 41, scope: !13113)
!13117 = !DILocation(line: 3147, column: 48, scope: !13113)
!13118 = !DILocation(line: 3148, column: 11, scope: !13113)
!13119 = !DILocation(line: 3148, column: 17, scope: !13113)
!13120 = !DILocation(line: 3147, column: 10, scope: !13113)
!13121 = !DILocation(line: 3147, column: 8, scope: !13113)
!13122 = !DILocation(line: 3149, column: 6, scope: !13123)
!13123 = distinct !DILexicalBlock(scope: !13113, file: !3, line: 3149, column: 6)
!13124 = !DILocation(line: 3149, column: 27, scope: !13123)
!13125 = !DILocation(line: 3149, column: 6, scope: !13113)
!13126 = !DILocalVariable(name: "ndv", scope: !13127, file: !3, line: 3151, type: !2410)
!13127 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 3150, column: 4)
!13128 = !DILocation(line: 3151, column: 20, scope: !13127)
!13129 = !DILocation(line: 3151, column: 41, scope: !13127)
!13130 = !DILocation(line: 3151, column: 47, scope: !13127)
!13131 = !DILocation(line: 3151, column: 26, scope: !13127)
!13132 = !DILocation(line: 3153, column: 25, scope: !13127)
!13133 = !DILocation(line: 3153, column: 30, scope: !13127)
!13134 = !DILocation(line: 3153, column: 36, scope: !13127)
!13135 = !DILocation(line: 3153, column: 44, scope: !13127)
!13136 = !DILocation(line: 3153, column: 50, scope: !13127)
!13137 = !DILocation(line: 3153, column: 6, scope: !13127)
!13138 = !DILocation(line: 3156, column: 27, scope: !13139)
!13139 = distinct !DILexicalBlock(scope: !13127, file: !3, line: 3156, column: 10)
!13140 = !DILocation(line: 3156, column: 33, scope: !13139)
!13141 = !DILocation(line: 3156, column: 38, scope: !13139)
!13142 = !DILocation(line: 3156, column: 10, scope: !13139)
!13143 = !DILocation(line: 3156, column: 10, scope: !13127)
!13144 = !DILocation(line: 3165, column: 3, scope: !13145)
!13145 = distinct !DILexicalBlock(scope: !13139, file: !3, line: 3157, column: 8)
!13146 = !DILocation(line: 3165, column: 35, scope: !13145)
!13147 = !DILocation(line: 3168, column: 3, scope: !13145)
!13148 = !DILocation(line: 3168, column: 30, scope: !13145)
!13149 = !DILocation(line: 3169, column: 8, scope: !13145)
!13150 = !DILocation(line: 3170, column: 16, scope: !13151)
!13151 = distinct !DILexicalBlock(scope: !13139, file: !3, line: 3170, column: 15)
!13152 = !DILocation(line: 3170, column: 15, scope: !13139)
!13153 = !DILocation(line: 3174, column: 31, scope: !13151)
!13154 = !DILocation(line: 3174, column: 36, scope: !13151)
!13155 = !DILocation(line: 3174, column: 42, scope: !13151)
!13156 = !DILocation(line: 3174, column: 8, scope: !13151)
!13157 = !DILocation(line: 3175, column: 4, scope: !13127)
!13158 = !DILocation(line: 3176, column: 11, scope: !13159)
!13159 = distinct !DILexicalBlock(scope: !13123, file: !3, line: 3176, column: 11)
!13160 = !DILocation(line: 3176, column: 32, scope: !13159)
!13161 = !DILocation(line: 3176, column: 11, scope: !13123)
!13162 = !DILocalVariable(name: "list", scope: !13163, file: !3, line: 3178, type: !2403)
!13163 = distinct !DILexicalBlock(scope: !13159, file: !3, line: 3177, column: 4)
!13164 = !DILocation(line: 3178, column: 12, scope: !13163)
!13165 = !DILocation(line: 3178, column: 19, scope: !13163)
!13166 = !DILocation(line: 3178, column: 24, scope: !13163)
!13167 = !DILocation(line: 3178, column: 29, scope: !13163)
!13168 = !DILocalVariable(name: "listp", scope: !13163, file: !3, line: 3178, type: !5173)
!13169 = !DILocation(line: 3178, column: 50, scope: !13163)
!13170 = !DILocation(line: 3185, column: 6, scope: !13163)
!13171 = !DILocation(line: 3185, column: 13, scope: !13163)
!13172 = !DILocation(line: 3187, column: 7, scope: !13173)
!13173 = distinct !DILexicalBlock(scope: !13174, file: !3, line: 3187, column: 7)
!13174 = distinct !DILexicalBlock(scope: !13163, file: !3, line: 3186, column: 8)
!13175 = !DILocation(line: 3187, column: 13, scope: !13173)
!13176 = !DILocation(line: 3187, column: 20, scope: !13173)
!13177 = !DILocation(line: 3188, column: 7, scope: !13173)
!13178 = !DILocation(line: 3188, column: 25, scope: !13173)
!13179 = !DILocation(line: 3188, column: 31, scope: !13173)
!13180 = !DILocation(line: 3188, column: 11, scope: !13173)
!13181 = !DILocation(line: 3188, column: 52, scope: !13173)
!13182 = !DILocation(line: 3188, column: 38, scope: !13173)
!13183 = !DILocation(line: 3188, column: 35, scope: !13173)
!13184 = !DILocation(line: 3189, column: 4, scope: !13173)
!13185 = !DILocation(line: 3189, column: 21, scope: !13173)
!13186 = !DILocation(line: 3189, column: 27, scope: !13173)
!13187 = !DILocation(line: 3189, column: 7, scope: !13173)
!13188 = !DILocation(line: 3189, column: 48, scope: !13173)
!13189 = !DILocation(line: 3189, column: 34, scope: !13173)
!13190 = !DILocation(line: 3189, column: 31, scope: !13173)
!13191 = !DILocation(line: 3187, column: 7, scope: !13174)
!13192 = !DILocation(line: 3190, column: 5, scope: !13173)
!13193 = !DILocation(line: 3192, column: 10, scope: !13174)
!13194 = !DILocation(line: 3192, column: 16, scope: !13174)
!13195 = !DILocation(line: 3192, column: 8, scope: !13174)
!13196 = distinct !{!13196, !13170, !13197}
!13197 = !DILocation(line: 3193, column: 8, scope: !13163)
!13198 = !DILocation(line: 3195, column: 6, scope: !13163)
!13199 = !DILocation(line: 3196, column: 24, scope: !13200)
!13200 = distinct !DILexicalBlock(scope: !13163, file: !3, line: 3196, column: 10)
!13201 = !DILocation(line: 3196, column: 30, scope: !13200)
!13202 = !DILocation(line: 3196, column: 10, scope: !13200)
!13203 = !DILocation(line: 3196, column: 51, scope: !13200)
!13204 = !DILocation(line: 3196, column: 37, scope: !13200)
!13205 = !DILocation(line: 3196, column: 34, scope: !13200)
!13206 = !DILocation(line: 3196, column: 10, scope: !13163)
!13207 = !DILocation(line: 3198, column: 14, scope: !13208)
!13208 = distinct !DILexicalBlock(scope: !13200, file: !3, line: 3197, column: 8)
!13209 = !DILocation(line: 3198, column: 3, scope: !13208)
!13210 = !DILocation(line: 3198, column: 9, scope: !13208)
!13211 = !DILocation(line: 3198, column: 12, scope: !13208)
!13212 = !DILocation(line: 3199, column: 17, scope: !13213)
!13213 = distinct !DILexicalBlock(scope: !13208, file: !3, line: 3199, column: 3)
!13214 = !DILocation(line: 3199, column: 23, scope: !13213)
!13215 = !DILocation(line: 3199, column: 14, scope: !13213)
!13216 = !DILocation(line: 3199, column: 8, scope: !13213)
!13217 = !DILocation(line: 3199, column: 38, scope: !13218)
!13218 = distinct !DILexicalBlock(scope: !13213, file: !3, line: 3199, column: 3)
!13219 = !DILocation(line: 3199, column: 37, scope: !13218)
!13220 = !DILocation(line: 3199, column: 35, scope: !13218)
!13221 = !DILocation(line: 3199, column: 3, scope: !13213)
!13222 = !DILocation(line: 3201, column: 11, scope: !13223)
!13223 = distinct !DILexicalBlock(scope: !13224, file: !3, line: 3201, column: 11)
!13224 = distinct !DILexicalBlock(scope: !13218, file: !3, line: 3200, column: 5)
!13225 = !DILocation(line: 3201, column: 17, scope: !13223)
!13226 = !DILocation(line: 3201, column: 11, scope: !13224)
!13227 = !DILocation(line: 3202, column: 9, scope: !13223)
!13228 = !DILocation(line: 3204, column: 25, scope: !13229)
!13229 = distinct !DILexicalBlock(scope: !13224, file: !3, line: 3204, column: 11)
!13230 = !DILocation(line: 3204, column: 31, scope: !13229)
!13231 = !DILocation(line: 3204, column: 11, scope: !13229)
!13232 = !DILocation(line: 3204, column: 52, scope: !13229)
!13233 = !DILocation(line: 3204, column: 38, scope: !13229)
!13234 = !DILocation(line: 3204, column: 35, scope: !13229)
!13235 = !DILocation(line: 3204, column: 11, scope: !13224)
!13236 = !DILocation(line: 3206, column: 13, scope: !13237)
!13237 = distinct !DILexicalBlock(scope: !13229, file: !3, line: 3205, column: 9)
!13238 = !DILocation(line: 3206, column: 19, scope: !13237)
!13239 = !DILocation(line: 3206, column: 5, scope: !13237)
!13240 = !DILocation(line: 3206, column: 11, scope: !13237)
!13241 = !DILocation(line: 3207, column: 15, scope: !13237)
!13242 = !DILocation(line: 3207, column: 27, scope: !13237)
!13243 = !DILocation(line: 3207, column: 4, scope: !13237)
!13244 = !DILocation(line: 3208, column: 12, scope: !13237)
!13245 = !DILocation(line: 3208, column: 11, scope: !13237)
!13246 = !DILocation(line: 3208, column: 9, scope: !13237)
!13247 = !DILocation(line: 3209, column: 4, scope: !13237)
!13248 = !DILocation(line: 3212, column: 7, scope: !13224)
!13249 = !DILocation(line: 3213, column: 5, scope: !13224)
!13250 = !DILocation(line: 3199, column: 55, scope: !13218)
!13251 = !DILocation(line: 3199, column: 61, scope: !13218)
!13252 = !DILocation(line: 3199, column: 52, scope: !13218)
!13253 = !DILocation(line: 3199, column: 3, scope: !13218)
!13254 = distinct !{!13254, !13221, !13255}
!13255 = !DILocation(line: 3213, column: 5, scope: !13213)
!13256 = !DILocation(line: 3214, column: 8, scope: !13208)
!13257 = !DILocation(line: 3215, column: 29, scope: !13258)
!13258 = distinct !DILexicalBlock(scope: !13200, file: !3, line: 3215, column: 15)
!13259 = !DILocation(line: 3215, column: 35, scope: !13258)
!13260 = !DILocation(line: 3215, column: 15, scope: !13258)
!13261 = !DILocation(line: 3215, column: 56, scope: !13258)
!13262 = !DILocation(line: 3215, column: 42, scope: !13258)
!13263 = !DILocation(line: 3215, column: 39, scope: !13258)
!13264 = !DILocation(line: 3215, column: 15, scope: !13200)
!13265 = !DILocation(line: 3217, column: 17, scope: !13266)
!13266 = distinct !DILexicalBlock(scope: !13267, file: !3, line: 3217, column: 3)
!13267 = distinct !DILexicalBlock(scope: !13258, file: !3, line: 3216, column: 8)
!13268 = !DILocation(line: 3217, column: 23, scope: !13266)
!13269 = !DILocation(line: 3217, column: 14, scope: !13266)
!13270 = !DILocation(line: 3217, column: 8, scope: !13266)
!13271 = !DILocation(line: 3217, column: 38, scope: !13272)
!13272 = distinct !DILexicalBlock(scope: !13266, file: !3, line: 3217, column: 3)
!13273 = !DILocation(line: 3217, column: 37, scope: !13272)
!13274 = !DILocation(line: 3217, column: 35, scope: !13272)
!13275 = !DILocation(line: 3217, column: 3, scope: !13266)
!13276 = !DILocation(line: 3219, column: 11, scope: !13277)
!13277 = distinct !DILexicalBlock(scope: !13278, file: !3, line: 3219, column: 11)
!13278 = distinct !DILexicalBlock(scope: !13272, file: !3, line: 3218, column: 5)
!13279 = !DILocation(line: 3219, column: 17, scope: !13277)
!13280 = !DILocation(line: 3219, column: 11, scope: !13278)
!13281 = !DILocation(line: 3220, column: 9, scope: !13277)
!13282 = !DILocation(line: 3222, column: 25, scope: !13283)
!13283 = distinct !DILexicalBlock(scope: !13278, file: !3, line: 3222, column: 11)
!13284 = !DILocation(line: 3222, column: 31, scope: !13283)
!13285 = !DILocation(line: 3222, column: 11, scope: !13283)
!13286 = !DILocation(line: 3222, column: 52, scope: !13283)
!13287 = !DILocation(line: 3222, column: 38, scope: !13283)
!13288 = !DILocation(line: 3222, column: 35, scope: !13283)
!13289 = !DILocation(line: 3222, column: 11, scope: !13278)
!13290 = !DILocation(line: 3224, column: 13, scope: !13291)
!13291 = distinct !DILexicalBlock(scope: !13283, file: !3, line: 3223, column: 9)
!13292 = !DILocation(line: 3224, column: 19, scope: !13291)
!13293 = !DILocation(line: 3224, column: 5, scope: !13291)
!13294 = !DILocation(line: 3224, column: 11, scope: !13291)
!13295 = !DILocation(line: 3225, column: 15, scope: !13291)
!13296 = !DILocation(line: 3225, column: 27, scope: !13291)
!13297 = !DILocation(line: 3225, column: 4, scope: !13291)
!13298 = !DILocation(line: 3226, column: 12, scope: !13291)
!13299 = !DILocation(line: 3226, column: 11, scope: !13291)
!13300 = !DILocation(line: 3226, column: 9, scope: !13291)
!13301 = !DILocation(line: 3227, column: 4, scope: !13291)
!13302 = !DILocation(line: 3230, column: 7, scope: !13278)
!13303 = !DILocation(line: 3231, column: 5, scope: !13278)
!13304 = !DILocation(line: 3217, column: 55, scope: !13272)
!13305 = !DILocation(line: 3217, column: 61, scope: !13272)
!13306 = !DILocation(line: 3217, column: 52, scope: !13272)
!13307 = !DILocation(line: 3217, column: 3, scope: !13272)
!13308 = distinct !{!13308, !13275, !13309}
!13309 = !DILocation(line: 3231, column: 5, scope: !13266)
!13310 = !DILocation(line: 3232, column: 8, scope: !13267)
!13311 = !DILocation(line: 3234, column: 8, scope: !13258)
!13312 = !DILocation(line: 3247, column: 4, scope: !13163)
!13313 = !DILocation(line: 3248, column: 7, scope: !13113)
!13314 = !DILocation(line: 3144, column: 56, scope: !13104)
!13315 = !DILocation(line: 3144, column: 62, scope: !13104)
!13316 = !DILocation(line: 3144, column: 54, scope: !13104)
!13317 = !DILocation(line: 3144, column: 3, scope: !13104)
!13318 = distinct !{!13318, !13105, !13319}
!13319 = !DILocation(line: 3248, column: 7, scope: !13098)
!13320 = !DILocation(line: 3250, column: 7, scope: !13321)
!13321 = distinct !DILexicalBlock(scope: !12906, file: !3, line: 3250, column: 7)
!13322 = !DILocation(line: 3250, column: 7, scope: !12906)
!13323 = !DILocation(line: 3251, column: 28, scope: !13321)
!13324 = !DILocation(line: 3251, column: 33, scope: !13321)
!13325 = !DILocation(line: 3251, column: 38, scope: !13321)
!13326 = !DILocation(line: 3251, column: 45, scope: !13321)
!13327 = !DILocation(line: 3251, column: 13, scope: !13321)
!13328 = !DILocation(line: 3251, column: 11, scope: !13321)
!13329 = !DILocation(line: 3251, column: 5, scope: !13321)
!13330 = !DILocation(line: 3254, column: 29, scope: !12906)
!13331 = !DILocation(line: 3254, column: 34, scope: !12906)
!13332 = !DILocation(line: 3254, column: 40, scope: !12906)
!13333 = !DILocation(line: 3254, column: 10, scope: !12906)
!13334 = !DILocation(line: 3254, column: 8, scope: !12906)
!13335 = !DILocation(line: 3257, column: 20, scope: !12906)
!13336 = !DILocation(line: 3257, column: 19, scope: !12906)
!13337 = !DILocation(line: 3257, column: 9, scope: !12906)
!13338 = !DILocation(line: 3257, column: 7, scope: !12906)
!13339 = !DILocation(line: 3258, column: 3, scope: !12906)
!13340 = !DILocation(line: 3261, column: 7, scope: !13341)
!13341 = distinct !DILexicalBlock(scope: !12906, file: !3, line: 3261, column: 7)
!13342 = !DILocation(line: 3261, column: 7, scope: !12906)
!13343 = !DILocation(line: 3262, column: 5, scope: !13341)
!13344 = !DILocation(line: 3264, column: 3, scope: !12906)
!13345 = !DILocation(line: 3265, column: 1, scope: !12906)
!13346 = distinct !DISubprogram(name: "variable_union_info_cmp_pos", scope: !3, file: !3, line: 2048, type: !1840, scopeLine: 2049, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!13347 = !DILocalVariable(name: "n1", arg: 1, scope: !13346, file: !3, line: 2048, type: !1668)
!13348 = !DILocation(line: 2048, column: 42, scope: !13346)
!13349 = !DILocalVariable(name: "n2", arg: 2, scope: !13346, file: !3, line: 2048, type: !1668)
!13350 = !DILocation(line: 2048, column: 58, scope: !13346)
!13351 = !DILocalVariable(name: "i1", scope: !13346, file: !3, line: 2050, type: !13352)
!13352 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2510)
!13353 = !DILocation(line: 2050, column: 43, scope: !13346)
!13354 = !DILocation(line: 2051, column: 42, scope: !13346)
!13355 = !DILocation(line: 2051, column: 5, scope: !13346)
!13356 = !DILocalVariable(name: "i2", scope: !13346, file: !3, line: 2052, type: !13352)
!13357 = !DILocation(line: 2052, column: 43, scope: !13346)
!13358 = !DILocation(line: 2053, column: 43, scope: !13346)
!13359 = !DILocation(line: 2053, column: 5, scope: !13346)
!13360 = !DILocation(line: 2055, column: 7, scope: !13361)
!13361 = distinct !DILexicalBlock(scope: !13346, file: !3, line: 2055, column: 7)
!13362 = !DILocation(line: 2055, column: 11, scope: !13361)
!13363 = !DILocation(line: 2055, column: 18, scope: !13361)
!13364 = !DILocation(line: 2055, column: 22, scope: !13361)
!13365 = !DILocation(line: 2055, column: 15, scope: !13361)
!13366 = !DILocation(line: 2055, column: 7, scope: !13346)
!13367 = !DILocation(line: 2056, column: 12, scope: !13361)
!13368 = !DILocation(line: 2056, column: 16, scope: !13361)
!13369 = !DILocation(line: 2056, column: 22, scope: !13361)
!13370 = !DILocation(line: 2056, column: 26, scope: !13361)
!13371 = !DILocation(line: 2056, column: 20, scope: !13361)
!13372 = !DILocation(line: 2056, column: 5, scope: !13361)
!13373 = !DILocation(line: 2058, column: 11, scope: !13346)
!13374 = !DILocation(line: 2058, column: 15, scope: !13346)
!13375 = !DILocation(line: 2058, column: 25, scope: !13346)
!13376 = !DILocation(line: 2058, column: 29, scope: !13346)
!13377 = !DILocation(line: 2058, column: 23, scope: !13346)
!13378 = !DILocation(line: 2058, column: 3, scope: !13346)
!13379 = !DILocation(line: 2059, column: 1, scope: !13346)
!13380 = distinct !DISubprogram(name: "find_loc_in_1pdv", scope: !3, file: !3, line: 2499, type: !13381, scopeLine: 2500, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!13381 = !DISubroutineType(types: !13382)
!13382 = !{!2437, !1188, !2447, !1827}
!13383 = !DILocalVariable(name: "loc", arg: 1, scope: !13380, file: !3, line: 2499, type: !1188)
!13384 = !DILocation(line: 2499, column: 23, scope: !13380)
!13385 = !DILocalVariable(name: "var", arg: 2, scope: !13380, file: !3, line: 2499, type: !2447)
!13386 = !DILocation(line: 2499, column: 37, scope: !13380)
!13387 = !DILocalVariable(name: "vars", arg: 3, scope: !13380, file: !3, line: 2499, type: !1827)
!13388 = !DILocation(line: 2499, column: 49, scope: !13380)
!13389 = !DILocalVariable(name: "node", scope: !13380, file: !3, line: 2501, type: !2437)
!13390 = !DILocation(line: 2501, column: 18, scope: !13380)
!13391 = !DILocation(line: 2503, column: 8, scope: !13392)
!13392 = distinct !DILexicalBlock(scope: !13380, file: !3, line: 2503, column: 7)
!13393 = !DILocation(line: 2503, column: 7, scope: !13380)
!13394 = !DILocation(line: 2504, column: 5, scope: !13392)
!13395 = !DILocation(line: 2506, column: 3, scope: !13380)
!13396 = !DILocation(line: 2508, column: 8, scope: !13397)
!13397 = distinct !DILexicalBlock(scope: !13380, file: !3, line: 2508, column: 7)
!13398 = !DILocation(line: 2508, column: 13, scope: !13397)
!13399 = !DILocation(line: 2508, column: 7, scope: !13380)
!13400 = !DILocation(line: 2509, column: 5, scope: !13397)
!13401 = !DILocation(line: 2511, column: 3, scope: !13380)
!13402 = !DILocation(line: 2513, column: 15, scope: !13403)
!13403 = distinct !DILexicalBlock(scope: !13380, file: !3, line: 2513, column: 3)
!13404 = !DILocation(line: 2513, column: 20, scope: !13403)
!13405 = !DILocation(line: 2513, column: 32, scope: !13403)
!13406 = !DILocation(line: 2513, column: 13, scope: !13403)
!13407 = !DILocation(line: 2513, column: 8, scope: !13403)
!13408 = !DILocation(line: 2513, column: 43, scope: !13409)
!13409 = distinct !DILexicalBlock(scope: !13403, file: !3, line: 2513, column: 3)
!13410 = !DILocation(line: 2513, column: 3, scope: !13403)
!13411 = !DILocation(line: 2514, column: 22, scope: !13412)
!13412 = distinct !DILexicalBlock(scope: !13409, file: !3, line: 2514, column: 9)
!13413 = !DILocation(line: 2514, column: 27, scope: !13412)
!13414 = !DILocation(line: 2514, column: 33, scope: !13412)
!13415 = !DILocation(line: 2514, column: 9, scope: !13412)
!13416 = !DILocation(line: 2514, column: 9, scope: !13409)
!13417 = !DILocation(line: 2515, column: 14, scope: !13412)
!13418 = !DILocation(line: 2515, column: 7, scope: !13412)
!13419 = !DILocation(line: 2516, column: 14, scope: !13420)
!13420 = distinct !DILexicalBlock(scope: !13412, file: !3, line: 2516, column: 14)
!13421 = !DILocation(line: 2516, column: 35, scope: !13420)
!13422 = !DILocation(line: 2517, column: 7, scope: !13420)
!13423 = !DILocation(line: 2517, column: 11, scope: !13420)
!13424 = !DILocation(line: 2516, column: 14, scope: !13412)
!13425 = !DILocalVariable(name: "dv", scope: !13426, file: !3, line: 2519, type: !2410)
!13426 = distinct !DILexicalBlock(scope: !13420, file: !3, line: 2518, column: 7)
!13427 = !DILocation(line: 2519, column: 16, scope: !13426)
!13428 = !DILocation(line: 2519, column: 36, scope: !13426)
!13429 = !DILocation(line: 2519, column: 42, scope: !13426)
!13430 = !DILocation(line: 2519, column: 21, scope: !13426)
!13431 = !DILocalVariable(name: "var", scope: !13426, file: !3, line: 2520, type: !2447)
!13432 = !DILocation(line: 2520, column: 11, scope: !13426)
!13433 = !DILocation(line: 2521, column: 31, scope: !13426)
!13434 = !DILocation(line: 2521, column: 37, scope: !13426)
!13435 = !DILocation(line: 2521, column: 55, scope: !13426)
!13436 = !DILocation(line: 2521, column: 41, scope: !13426)
!13437 = !DILocation(line: 2521, column: 10, scope: !13426)
!13438 = !DILocation(line: 2520, column: 17, scope: !13426)
!13439 = !DILocation(line: 2523, column: 6, scope: !13440)
!13440 = distinct !DILexicalBlock(scope: !13426, file: !3, line: 2523, column: 6)
!13441 = !DILocation(line: 2523, column: 6, scope: !13426)
!13442 = !DILocalVariable(name: "where", scope: !13443, file: !3, line: 2525, type: !2437)
!13443 = distinct !DILexicalBlock(scope: !13440, file: !3, line: 2524, column: 4)
!13444 = !DILocation(line: 2525, column: 21, scope: !13443)
!13445 = !DILocation(line: 2526, column: 6, scope: !13443)
!13446 = !DILocation(line: 2526, column: 38, scope: !13443)
!13447 = !DILocation(line: 2527, column: 37, scope: !13448)
!13448 = distinct !DILexicalBlock(scope: !13443, file: !3, line: 2527, column: 10)
!13449 = !DILocation(line: 2527, column: 42, scope: !13448)
!13450 = !DILocation(line: 2527, column: 47, scope: !13448)
!13451 = !DILocation(line: 2527, column: 19, scope: !13448)
!13452 = !DILocation(line: 2527, column: 17, scope: !13448)
!13453 = !DILocation(line: 2527, column: 10, scope: !13443)
!13454 = !DILocation(line: 2529, column: 3, scope: !13455)
!13455 = distinct !DILexicalBlock(scope: !13448, file: !3, line: 2528, column: 8)
!13456 = !DILocation(line: 2529, column: 35, scope: !13455)
!13457 = !DILocation(line: 2530, column: 10, scope: !13455)
!13458 = !DILocation(line: 2530, column: 3, scope: !13455)
!13459 = !DILocation(line: 2532, column: 6, scope: !13443)
!13460 = !DILocation(line: 2532, column: 38, scope: !13443)
!13461 = !DILocation(line: 2533, column: 4, scope: !13443)
!13462 = !DILocation(line: 2534, column: 7, scope: !13426)
!13463 = !DILocation(line: 2514, column: 36, scope: !13412)
!13464 = !DILocation(line: 2513, column: 56, scope: !13409)
!13465 = !DILocation(line: 2513, column: 62, scope: !13409)
!13466 = !DILocation(line: 2513, column: 54, scope: !13409)
!13467 = !DILocation(line: 2513, column: 3, scope: !13409)
!13468 = distinct !{!13468, !13410, !13469}
!13469 = !DILocation(line: 2534, column: 7, scope: !13403)
!13470 = !DILocation(line: 2536, column: 3, scope: !13380)
!13471 = !DILocation(line: 2537, column: 1, scope: !13380)
!13472 = distinct !DISubprogram(name: "insert_into_intersection", scope: !3, file: !3, line: 2556, type: !13473, scopeLine: 2558, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!13473 = !DISubroutineType(types: !13474)
!13474 = !{null, !5595, !1188, !734}
!13475 = !DILocalVariable(name: "nodep", arg: 1, scope: !13472, file: !3, line: 2556, type: !5595)
!13476 = !DILocation(line: 2556, column: 43, scope: !13472)
!13477 = !DILocalVariable(name: "loc", arg: 2, scope: !13472, file: !3, line: 2556, type: !1188)
!13478 = !DILocation(line: 2556, column: 54, scope: !13472)
!13479 = !DILocalVariable(name: "status", arg: 3, scope: !13472, file: !3, line: 2557, type: !734)
!13480 = !DILocation(line: 2557, column: 27, scope: !13472)
!13481 = !DILocalVariable(name: "node", scope: !13472, file: !3, line: 2559, type: !2437)
!13482 = !DILocation(line: 2559, column: 18, scope: !13472)
!13483 = !DILocalVariable(name: "r", scope: !13472, file: !3, line: 2560, type: !1010)
!13484 = !DILocation(line: 2560, column: 7, scope: !13472)
!13485 = !DILocation(line: 2562, column: 16, scope: !13486)
!13486 = distinct !DILexicalBlock(scope: !13472, file: !3, line: 2562, column: 3)
!13487 = !DILocation(line: 2562, column: 15, scope: !13486)
!13488 = !DILocation(line: 2562, column: 13, scope: !13486)
!13489 = !DILocation(line: 2562, column: 8, scope: !13486)
!13490 = !DILocation(line: 2562, column: 23, scope: !13491)
!13491 = distinct !DILexicalBlock(scope: !13486, file: !3, line: 2562, column: 3)
!13492 = !DILocation(line: 2562, column: 3, scope: !13486)
!13493 = !DILocation(line: 2563, column: 23, scope: !13494)
!13494 = distinct !DILexicalBlock(scope: !13491, file: !3, line: 2563, column: 9)
!13495 = !DILocation(line: 2563, column: 29, scope: !13494)
!13496 = !DILocation(line: 2563, column: 34, scope: !13494)
!13497 = !DILocation(line: 2563, column: 14, scope: !13494)
!13498 = !DILocation(line: 2563, column: 12, scope: !13494)
!13499 = !DILocation(line: 2563, column: 40, scope: !13494)
!13500 = !DILocation(line: 2563, column: 9, scope: !13491)
!13501 = !DILocation(line: 2565, column: 15, scope: !13502)
!13502 = distinct !DILexicalBlock(scope: !13494, file: !3, line: 2564, column: 7)
!13503 = !DILocation(line: 2565, column: 2, scope: !13502)
!13504 = !DILocation(line: 2565, column: 8, scope: !13502)
!13505 = !DILocation(line: 2565, column: 13, scope: !13502)
!13506 = !DILocation(line: 2566, column: 2, scope: !13502)
!13507 = !DILocation(line: 2568, column: 14, scope: !13508)
!13508 = distinct !DILexicalBlock(scope: !13494, file: !3, line: 2568, column: 14)
!13509 = !DILocation(line: 2568, column: 16, scope: !13508)
!13510 = !DILocation(line: 2568, column: 14, scope: !13494)
!13511 = !DILocation(line: 2569, column: 7, scope: !13508)
!13512 = !DILocation(line: 2563, column: 43, scope: !13494)
!13513 = !DILocation(line: 2562, column: 38, scope: !13491)
!13514 = !DILocation(line: 2562, column: 44, scope: !13491)
!13515 = !DILocation(line: 2562, column: 35, scope: !13491)
!13516 = !DILocation(line: 2562, column: 58, scope: !13491)
!13517 = !DILocation(line: 2562, column: 57, scope: !13491)
!13518 = !DILocation(line: 2562, column: 55, scope: !13491)
!13519 = !DILocation(line: 2562, column: 3, scope: !13491)
!13520 = distinct !{!13520, !13492, !13521}
!13521 = !DILocation(line: 2569, column: 7, scope: !13486)
!13522 = !DILocation(line: 2571, column: 39, scope: !13472)
!13523 = !DILocation(line: 2571, column: 27, scope: !13472)
!13524 = !DILocation(line: 2571, column: 10, scope: !13472)
!13525 = !DILocation(line: 2571, column: 8, scope: !13472)
!13526 = !DILocation(line: 2573, column: 15, scope: !13472)
!13527 = !DILocation(line: 2573, column: 3, scope: !13472)
!13528 = !DILocation(line: 2573, column: 9, scope: !13472)
!13529 = !DILocation(line: 2573, column: 13, scope: !13472)
!13530 = !DILocation(line: 2574, column: 3, scope: !13472)
!13531 = !DILocation(line: 2574, column: 9, scope: !13472)
!13532 = !DILocation(line: 2574, column: 17, scope: !13472)
!13533 = !DILocation(line: 2575, column: 16, scope: !13472)
!13534 = !DILocation(line: 2575, column: 3, scope: !13472)
!13535 = !DILocation(line: 2575, column: 9, scope: !13472)
!13536 = !DILocation(line: 2575, column: 14, scope: !13472)
!13537 = !DILocation(line: 2576, column: 17, scope: !13472)
!13538 = !DILocation(line: 2576, column: 16, scope: !13472)
!13539 = !DILocation(line: 2576, column: 3, scope: !13472)
!13540 = !DILocation(line: 2576, column: 9, scope: !13472)
!13541 = !DILocation(line: 2576, column: 14, scope: !13472)
!13542 = !DILocation(line: 2577, column: 12, scope: !13472)
!13543 = !DILocation(line: 2577, column: 4, scope: !13472)
!13544 = !DILocation(line: 2577, column: 10, scope: !13472)
!13545 = !DILocation(line: 2578, column: 1, scope: !13472)
!13546 = distinct !DISubprogram(name: "shared_hash_find", scope: !3, file: !3, line: 1449, type: !13547, scopeLine: 1450, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!13547 = !DISubroutineType(types: !13548)
!13548 = !{!2447, !2363, !2410}
!13549 = !DILocalVariable(name: "vars", arg: 1, scope: !13546, file: !3, line: 1449, type: !2363)
!13550 = !DILocation(line: 1449, column: 31, scope: !13546)
!13551 = !DILocalVariable(name: "dv", arg: 2, scope: !13546, file: !3, line: 1449, type: !2410)
!13552 = !DILocation(line: 1449, column: 51, scope: !13546)
!13553 = !DILocation(line: 1451, column: 30, scope: !13546)
!13554 = !DILocation(line: 1451, column: 36, scope: !13546)
!13555 = !DILocation(line: 1451, column: 54, scope: !13546)
!13556 = !DILocation(line: 1451, column: 40, scope: !13546)
!13557 = !DILocation(line: 1451, column: 10, scope: !13546)
!13558 = !DILocation(line: 1451, column: 3, scope: !13546)
!13559 = distinct !DISubprogram(name: "remove_value_chains", scope: !3, file: !3, line: 2948, type: !6889, scopeLine: 2949, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!13560 = !DILocalVariable(name: "dv", arg: 1, scope: !13559, file: !3, line: 2948, type: !2410)
!13561 = !DILocation(line: 2948, column: 36, scope: !13559)
!13562 = !DILocalVariable(name: "loc", arg: 2, scope: !13559, file: !3, line: 2948, type: !1188)
!13563 = !DILocation(line: 2948, column: 44, scope: !13559)
!13564 = !DILocation(line: 2950, column: 7, scope: !13565)
!13565 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 2950, column: 7)
!13566 = !DILocation(line: 2950, column: 22, scope: !13565)
!13567 = !DILocation(line: 2950, column: 31, scope: !13565)
!13568 = !DILocation(line: 2950, column: 34, scope: !13565)
!13569 = !DILocation(line: 2950, column: 49, scope: !13565)
!13570 = !DILocation(line: 2950, column: 7, scope: !13559)
!13571 = !DILocation(line: 2952, column: 47, scope: !13572)
!13572 = distinct !DILexicalBlock(scope: !13565, file: !3, line: 2951, column: 5)
!13573 = !DILocation(line: 2952, column: 33, scope: !13572)
!13574 = !DILocation(line: 2952, column: 7, scope: !13572)
!13575 = !DILocation(line: 2953, column: 7, scope: !13572)
!13576 = !DILocation(line: 2955, column: 7, scope: !13577)
!13577 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 2955, column: 7)
!13578 = !DILocation(line: 2955, column: 7, scope: !13559)
!13579 = !DILocation(line: 2956, column: 5, scope: !13577)
!13580 = !DILocation(line: 2957, column: 7, scope: !13581)
!13581 = distinct !DILexicalBlock(scope: !13559, file: !3, line: 2957, column: 7)
!13582 = !DILocation(line: 2957, column: 7, scope: !13559)
!13583 = !DILocation(line: 2958, column: 11, scope: !13581)
!13584 = !DILocation(line: 2958, column: 9, scope: !13581)
!13585 = !DILocation(line: 2958, column: 5, scope: !13581)
!13586 = !DILocation(line: 2959, column: 57, scope: !13559)
!13587 = !DILocation(line: 2959, column: 43, scope: !13559)
!13588 = !DILocation(line: 2959, column: 3, scope: !13559)
!13589 = !DILocation(line: 2960, column: 1, scope: !13559)
!13590 = distinct !DISubprogram(name: "remove_value_chain", scope: !3, file: !3, line: 2902, type: !7069, scopeLine: 2903, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!13591 = !DILocalVariable(name: "loc", arg: 1, scope: !13590, file: !3, line: 2902, type: !4733)
!13592 = !DILocation(line: 2902, column: 26, scope: !13590)
!13593 = !DILocalVariable(name: "dvp", arg: 2, scope: !13590, file: !3, line: 2902, type: !1313)
!13594 = !DILocation(line: 2902, column: 37, scope: !13590)
!13595 = !DILocalVariable(name: "dv", scope: !13590, file: !3, line: 2904, type: !2410)
!13596 = !DILocation(line: 2904, column: 17, scope: !13590)
!13597 = !DILocalVariable(name: "ldv", scope: !13590, file: !3, line: 2904, type: !2410)
!13598 = !DILocation(line: 2904, column: 21, scope: !13590)
!13599 = !DILocalVariable(name: "vc", scope: !13590, file: !3, line: 2905, type: !2470)
!13600 = !DILocation(line: 2905, column: 15, scope: !13590)
!13601 = !DILocalVariable(name: "slot", scope: !13590, file: !3, line: 2906, type: !1848)
!13602 = !DILocation(line: 2906, column: 10, scope: !13590)
!13603 = !DILocation(line: 2908, column: 7, scope: !13604)
!13604 = distinct !DILexicalBlock(scope: !13590, file: !3, line: 2908, column: 7)
!13605 = !DILocation(line: 2908, column: 23, scope: !13604)
!13606 = !DILocation(line: 2908, column: 7, scope: !13590)
!13607 = !DILocation(line: 2909, column: 27, scope: !13604)
!13608 = !DILocation(line: 2909, column: 26, scope: !13604)
!13609 = !DILocation(line: 2909, column: 11, scope: !13604)
!13610 = !DILocation(line: 2909, column: 9, scope: !13604)
!13611 = !DILocation(line: 2909, column: 5, scope: !13604)
!13612 = !DILocation(line: 2910, column: 12, scope: !13613)
!13613 = distinct !DILexicalBlock(scope: !13604, file: !3, line: 2910, column: 12)
!13614 = !DILocation(line: 2910, column: 28, scope: !13613)
!13615 = !DILocation(line: 2910, column: 12, scope: !13604)
!13616 = !DILocation(line: 2911, column: 25, scope: !13613)
!13617 = !DILocation(line: 2911, column: 11, scope: !13613)
!13618 = !DILocation(line: 2911, column: 9, scope: !13613)
!13619 = !DILocation(line: 2911, column: 5, scope: !13613)
!13620 = !DILocation(line: 2913, column: 5, scope: !13613)
!13621 = !DILocation(line: 2915, column: 21, scope: !13622)
!13622 = distinct !DILexicalBlock(scope: !13590, file: !3, line: 2915, column: 7)
!13623 = !DILocation(line: 2915, column: 7, scope: !13622)
!13624 = !DILocation(line: 2915, column: 29, scope: !13622)
!13625 = !DILocation(line: 2915, column: 26, scope: !13622)
!13626 = !DILocation(line: 2915, column: 7, scope: !13590)
!13627 = !DILocation(line: 2916, column: 5, scope: !13622)
!13628 = !DILocation(line: 2918, column: 24, scope: !13590)
!13629 = !DILocation(line: 2918, column: 6, scope: !13590)
!13630 = !DILocation(line: 2919, column: 36, scope: !13590)
!13631 = !DILocation(line: 2919, column: 50, scope: !13590)
!13632 = !DILocation(line: 2919, column: 69, scope: !13590)
!13633 = !DILocation(line: 2919, column: 55, scope: !13590)
!13634 = !DILocation(line: 2919, column: 10, scope: !13590)
!13635 = !DILocation(line: 2919, column: 8, scope: !13590)
!13636 = !DILocation(line: 2921, column: 28, scope: !13637)
!13637 = distinct !DILexicalBlock(scope: !13590, file: !3, line: 2921, column: 3)
!13638 = !DILocation(line: 2921, column: 27, scope: !13637)
!13639 = !DILocation(line: 2921, column: 13, scope: !13637)
!13640 = !DILocation(line: 2921, column: 11, scope: !13637)
!13641 = !DILocation(line: 2921, column: 8, scope: !13637)
!13642 = !DILocation(line: 2921, column: 34, scope: !13643)
!13643 = distinct !DILexicalBlock(scope: !13637, file: !3, line: 2921, column: 3)
!13644 = !DILocation(line: 2921, column: 38, scope: !13643)
!13645 = !DILocation(line: 2921, column: 3, scope: !13637)
!13646 = !DILocation(line: 2922, column: 23, scope: !13647)
!13647 = distinct !DILexicalBlock(scope: !13643, file: !3, line: 2922, column: 9)
!13648 = !DILocation(line: 2922, column: 27, scope: !13647)
!13649 = !DILocation(line: 2922, column: 33, scope: !13647)
!13650 = !DILocation(line: 2922, column: 9, scope: !13647)
!13651 = !DILocation(line: 2922, column: 54, scope: !13647)
!13652 = !DILocation(line: 2922, column: 40, scope: !13647)
!13653 = !DILocation(line: 2922, column: 37, scope: !13647)
!13654 = !DILocation(line: 2922, column: 9, scope: !13643)
!13655 = !DILocalVariable(name: "dvc", scope: !13656, file: !3, line: 2924, type: !2470)
!13656 = distinct !DILexicalBlock(scope: !13647, file: !3, line: 2923, column: 7)
!13657 = !DILocation(line: 2924, column: 14, scope: !13656)
!13658 = !DILocation(line: 2924, column: 20, scope: !13656)
!13659 = !DILocation(line: 2924, column: 24, scope: !13656)
!13660 = !DILocation(line: 2925, column: 2, scope: !13656)
!13661 = !DILocation(line: 2926, column: 8, scope: !13662)
!13662 = distinct !DILexicalBlock(scope: !13656, file: !3, line: 2926, column: 6)
!13663 = !DILocation(line: 2926, column: 13, scope: !13662)
!13664 = !DILocation(line: 2926, column: 6, scope: !13662)
!13665 = !DILocation(line: 2926, column: 22, scope: !13662)
!13666 = !DILocation(line: 2926, column: 6, scope: !13656)
!13667 = !DILocation(line: 2928, column: 17, scope: !13668)
!13668 = distinct !DILexicalBlock(scope: !13662, file: !3, line: 2927, column: 4)
!13669 = !DILocation(line: 2928, column: 22, scope: !13668)
!13670 = !DILocation(line: 2928, column: 6, scope: !13668)
!13671 = !DILocation(line: 2928, column: 10, scope: !13668)
!13672 = !DILocation(line: 2928, column: 15, scope: !13668)
!13673 = !DILocation(line: 2929, column: 17, scope: !13668)
!13674 = !DILocation(line: 2929, column: 35, scope: !13668)
!13675 = !DILocation(line: 2929, column: 6, scope: !13668)
!13676 = !DILocation(line: 2930, column: 10, scope: !13677)
!13677 = distinct !DILexicalBlock(scope: !13668, file: !3, line: 2930, column: 10)
!13678 = !DILocation(line: 2930, column: 14, scope: !13677)
!13679 = !DILocation(line: 2930, column: 19, scope: !13677)
!13680 = !DILocation(line: 2930, column: 27, scope: !13677)
!13681 = !DILocation(line: 2930, column: 30, scope: !13677)
!13682 = !DILocation(line: 2930, column: 51, scope: !13677)
!13683 = !DILocation(line: 2930, column: 50, scope: !13677)
!13684 = !DILocation(line: 2930, column: 36, scope: !13677)
!13685 = !DILocation(line: 2930, column: 33, scope: !13677)
!13686 = !DILocation(line: 2930, column: 10, scope: !13668)
!13687 = !DILocation(line: 2932, column: 14, scope: !13688)
!13688 = distinct !DILexicalBlock(scope: !13677, file: !3, line: 2931, column: 8)
!13689 = !DILocation(line: 2932, column: 32, scope: !13688)
!13690 = !DILocation(line: 2932, column: 3, scope: !13688)
!13691 = !DILocation(line: 2933, column: 20, scope: !13688)
!13692 = !DILocation(line: 2933, column: 34, scope: !13688)
!13693 = !DILocation(line: 2933, column: 3, scope: !13688)
!13694 = !DILocation(line: 2934, column: 8, scope: !13688)
!13695 = !DILocation(line: 2935, column: 4, scope: !13668)
!13696 = !DILocation(line: 2936, column: 2, scope: !13656)
!13697 = !DILocation(line: 2922, column: 56, scope: !13647)
!13698 = !DILocation(line: 2921, column: 49, scope: !13643)
!13699 = !DILocation(line: 2921, column: 53, scope: !13643)
!13700 = !DILocation(line: 2921, column: 47, scope: !13643)
!13701 = !DILocation(line: 2921, column: 3, scope: !13643)
!13702 = distinct !{!13702, !13645, !13703}
!13703 = !DILocation(line: 2937, column: 7, scope: !13637)
!13704 = !DILocation(line: 2938, column: 3, scope: !13590)
!13705 = !DILocation(line: 2940, column: 5, scope: !13590)
!13706 = !DILocation(line: 2942, column: 1, scope: !13590)
!13707 = distinct !DISubprogram(name: "clobber_variable_part", scope: !3, file: !3, line: 6698, type: !13708, scopeLine: 6700, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!13708 = !DISubroutineType(types: !13709)
!13709 = !{null, !2418, !1188, !2410, !1067, !1188}
!13710 = !DILocalVariable(name: "set", arg: 1, scope: !13707, file: !3, line: 6698, type: !2418)
!13711 = !DILocation(line: 6698, column: 38, scope: !13707)
!13712 = !DILocalVariable(name: "loc", arg: 2, scope: !13707, file: !3, line: 6698, type: !1188)
!13713 = !DILocation(line: 6698, column: 47, scope: !13707)
!13714 = !DILocalVariable(name: "dv", arg: 3, scope: !13707, file: !3, line: 6698, type: !2410)
!13715 = !DILocation(line: 6698, column: 66, scope: !13707)
!13716 = !DILocalVariable(name: "offset", arg: 4, scope: !13707, file: !3, line: 6699, type: !1067)
!13717 = !DILocation(line: 6699, column: 24, scope: !13707)
!13718 = !DILocalVariable(name: "set_src", arg: 5, scope: !13707, file: !3, line: 6699, type: !1188)
!13719 = !DILocation(line: 6699, column: 36, scope: !13707)
!13720 = !DILocalVariable(name: "slot", scope: !13707, file: !3, line: 6701, type: !1848)
!13721 = !DILocation(line: 6701, column: 10, scope: !13707)
!13722 = !DILocation(line: 6703, column: 22, scope: !13723)
!13723 = distinct !DILexicalBlock(scope: !13707, file: !3, line: 6703, column: 7)
!13724 = !DILocation(line: 6703, column: 8, scope: !13723)
!13725 = !DILocation(line: 6704, column: 7, scope: !13723)
!13726 = !DILocation(line: 6704, column: 27, scope: !13723)
!13727 = !DILocation(line: 6704, column: 12, scope: !13723)
!13728 = !DILocation(line: 6704, column: 31, scope: !13723)
!13729 = !DILocation(line: 6704, column: 36, scope: !13723)
!13730 = !DILocation(line: 6703, column: 7, scope: !13707)
!13731 = !DILocation(line: 6705, column: 5, scope: !13723)
!13732 = !DILocation(line: 6707, column: 42, scope: !13707)
!13733 = !DILocation(line: 6707, column: 47, scope: !13707)
!13734 = !DILocation(line: 6707, column: 53, scope: !13707)
!13735 = !DILocation(line: 6707, column: 10, scope: !13707)
!13736 = !DILocation(line: 6707, column: 8, scope: !13707)
!13737 = !DILocation(line: 6708, column: 8, scope: !13738)
!13738 = distinct !DILexicalBlock(scope: !13707, file: !3, line: 6708, column: 7)
!13739 = !DILocation(line: 6708, column: 7, scope: !13707)
!13740 = !DILocation(line: 6709, column: 5, scope: !13738)
!13741 = !DILocation(line: 6711, column: 29, scope: !13707)
!13742 = !DILocation(line: 6711, column: 34, scope: !13707)
!13743 = !DILocation(line: 6711, column: 39, scope: !13707)
!13744 = !DILocation(line: 6711, column: 45, scope: !13707)
!13745 = !DILocation(line: 6711, column: 53, scope: !13707)
!13746 = !DILocation(line: 6711, column: 10, scope: !13707)
!13747 = !DILocation(line: 6711, column: 8, scope: !13707)
!13748 = !DILocation(line: 6712, column: 1, scope: !13707)
!13749 = distinct !DISubprogram(name: "clobber_slot_part", scope: !3, file: !3, line: 6639, type: !13750, scopeLine: 6641, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!13750 = !DISubroutineType(types: !13751)
!13751 = !{!1848, !2418, !1188, !1848, !1067, !1188}
!13752 = !DILocalVariable(name: "set", arg: 1, scope: !13749, file: !3, line: 6639, type: !2418)
!13753 = !DILocation(line: 6639, column: 34, scope: !13749)
!13754 = !DILocalVariable(name: "loc", arg: 2, scope: !13749, file: !3, line: 6639, type: !1188)
!13755 = !DILocation(line: 6639, column: 43, scope: !13749)
!13756 = !DILocalVariable(name: "slot", arg: 3, scope: !13749, file: !3, line: 6639, type: !1848)
!13757 = !DILocation(line: 6639, column: 55, scope: !13749)
!13758 = !DILocalVariable(name: "offset", arg: 4, scope: !13749, file: !3, line: 6640, type: !1067)
!13759 = !DILocation(line: 6640, column: 20, scope: !13749)
!13760 = !DILocalVariable(name: "set_src", arg: 5, scope: !13749, file: !3, line: 6640, type: !1188)
!13761 = !DILocation(line: 6640, column: 32, scope: !13749)
!13762 = !DILocalVariable(name: "var", scope: !13749, file: !3, line: 6642, type: !2447)
!13763 = !DILocation(line: 6642, column: 12, scope: !13749)
!13764 = !DILocation(line: 6642, column: 30, scope: !13749)
!13765 = !DILocation(line: 6642, column: 29, scope: !13749)
!13766 = !DILocation(line: 6642, column: 18, scope: !13749)
!13767 = !DILocalVariable(name: "pos", scope: !13749, file: !3, line: 6643, type: !1010)
!13768 = !DILocation(line: 6643, column: 7, scope: !13749)
!13769 = !DILocation(line: 6643, column: 42, scope: !13749)
!13770 = !DILocation(line: 6643, column: 47, scope: !13749)
!13771 = !DILocation(line: 6643, column: 13, scope: !13749)
!13772 = !DILocation(line: 6645, column: 7, scope: !13773)
!13773 = distinct !DILexicalBlock(scope: !13749, file: !3, line: 6645, column: 7)
!13774 = !DILocation(line: 6645, column: 11, scope: !13773)
!13775 = !DILocation(line: 6645, column: 7, scope: !13749)
!13776 = !DILocalVariable(name: "node", scope: !13777, file: !3, line: 6647, type: !2437)
!13777 = distinct !DILexicalBlock(scope: !13773, file: !3, line: 6646, column: 5)
!13778 = !DILocation(line: 6647, column: 22, scope: !13777)
!13779 = !DILocalVariable(name: "next", scope: !13777, file: !3, line: 6647, type: !2437)
!13780 = !DILocation(line: 6647, column: 28, scope: !13777)
!13781 = !DILocation(line: 6650, column: 14, scope: !13777)
!13782 = !DILocation(line: 6650, column: 19, scope: !13777)
!13783 = !DILocation(line: 6650, column: 28, scope: !13777)
!13784 = !DILocation(line: 6650, column: 33, scope: !13777)
!13785 = !DILocation(line: 6650, column: 12, scope: !13777)
!13786 = !DILocation(line: 6651, column: 19, scope: !13787)
!13787 = distinct !DILexicalBlock(scope: !13777, file: !3, line: 6651, column: 7)
!13788 = !DILocation(line: 6651, column: 17, scope: !13787)
!13789 = !DILocation(line: 6651, column: 12, scope: !13787)
!13790 = !DILocation(line: 6651, column: 25, scope: !13791)
!13791 = distinct !DILexicalBlock(scope: !13787, file: !3, line: 6651, column: 7)
!13792 = !DILocation(line: 6651, column: 7, scope: !13787)
!13793 = !DILocation(line: 6653, column: 11, scope: !13794)
!13794 = distinct !DILexicalBlock(scope: !13791, file: !3, line: 6652, column: 2)
!13795 = !DILocation(line: 6653, column: 17, scope: !13794)
!13796 = !DILocation(line: 6653, column: 9, scope: !13794)
!13797 = !DILocation(line: 6654, column: 8, scope: !13798)
!13798 = distinct !DILexicalBlock(scope: !13794, file: !3, line: 6654, column: 8)
!13799 = !DILocation(line: 6654, column: 14, scope: !13798)
!13800 = !DILocation(line: 6654, column: 21, scope: !13798)
!13801 = !DILocation(line: 6654, column: 18, scope: !13798)
!13802 = !DILocation(line: 6655, column: 8, scope: !13798)
!13803 = !DILocation(line: 6655, column: 13, scope: !13798)
!13804 = !DILocation(line: 6656, column: 5, scope: !13798)
!13805 = !DILocation(line: 6656, column: 9, scope: !13798)
!13806 = !DILocation(line: 6657, column: 5, scope: !13798)
!13807 = !DILocation(line: 6657, column: 8, scope: !13798)
!13808 = !DILocation(line: 6658, column: 5, scope: !13798)
!13809 = !DILocation(line: 6658, column: 22, scope: !13798)
!13810 = !DILocation(line: 6658, column: 31, scope: !13798)
!13811 = !DILocation(line: 6658, column: 37, scope: !13798)
!13812 = !DILocation(line: 6658, column: 9, scope: !13798)
!13813 = !DILocation(line: 6654, column: 8, scope: !13794)
!13814 = !DILocation(line: 6660, column: 12, scope: !13815)
!13815 = distinct !DILexicalBlock(scope: !13816, file: !3, line: 6660, column: 12)
!13816 = distinct !DILexicalBlock(scope: !13798, file: !3, line: 6659, column: 6)
!13817 = !DILocation(line: 6660, column: 12, scope: !13816)
!13818 = !DILocalVariable(name: "anode", scope: !13819, file: !3, line: 6662, type: !2403)
!13819 = distinct !DILexicalBlock(scope: !13815, file: !3, line: 6661, column: 3)
!13820 = !DILocation(line: 6662, column: 11, scope: !13819)
!13821 = !DILocalVariable(name: "anext", scope: !13819, file: !3, line: 6662, type: !2403)
!13822 = !DILocation(line: 6662, column: 18, scope: !13819)
!13823 = !DILocalVariable(name: "anextp", scope: !13819, file: !3, line: 6663, type: !5173)
!13824 = !DILocation(line: 6663, column: 12, scope: !13819)
!13825 = !DILocation(line: 6669, column: 15, scope: !13819)
!13826 = !DILocation(line: 6669, column: 20, scope: !13819)
!13827 = !DILocation(line: 6669, column: 25, scope: !13819)
!13828 = !DILocation(line: 6669, column: 12, scope: !13819)
!13829 = !DILocation(line: 6670, column: 19, scope: !13830)
!13830 = distinct !DILexicalBlock(scope: !13819, file: !3, line: 6670, column: 5)
!13831 = !DILocation(line: 6670, column: 18, scope: !13830)
!13832 = !DILocation(line: 6670, column: 16, scope: !13830)
!13833 = !DILocation(line: 6670, column: 10, scope: !13830)
!13834 = !DILocation(line: 6670, column: 27, scope: !13835)
!13835 = distinct !DILexicalBlock(scope: !13830, file: !3, line: 6670, column: 5)
!13836 = !DILocation(line: 6670, column: 5, scope: !13830)
!13837 = !DILocation(line: 6672, column: 17, scope: !13838)
!13838 = distinct !DILexicalBlock(scope: !13835, file: !3, line: 6671, column: 7)
!13839 = !DILocation(line: 6672, column: 24, scope: !13838)
!13840 = !DILocation(line: 6672, column: 15, scope: !13838)
!13841 = !DILocation(line: 6673, column: 27, scope: !13842)
!13842 = distinct !DILexicalBlock(scope: !13838, file: !3, line: 6673, column: 13)
!13843 = !DILocation(line: 6673, column: 34, scope: !13842)
!13844 = !DILocation(line: 6673, column: 13, scope: !13842)
!13845 = !DILocation(line: 6673, column: 55, scope: !13842)
!13846 = !DILocation(line: 6673, column: 60, scope: !13842)
!13847 = !DILocation(line: 6673, column: 41, scope: !13842)
!13848 = !DILocation(line: 6673, column: 38, scope: !13842)
!13849 = !DILocation(line: 6674, column: 6, scope: !13842)
!13850 = !DILocation(line: 6674, column: 9, scope: !13842)
!13851 = !DILocation(line: 6674, column: 16, scope: !13842)
!13852 = !DILocation(line: 6674, column: 26, scope: !13842)
!13853 = !DILocation(line: 6674, column: 23, scope: !13842)
!13854 = !DILocation(line: 6673, column: 13, scope: !13838)
!13855 = !DILocation(line: 6676, column: 17, scope: !13856)
!13856 = distinct !DILexicalBlock(scope: !13842, file: !3, line: 6675, column: 4)
!13857 = !DILocation(line: 6676, column: 29, scope: !13856)
!13858 = !DILocation(line: 6676, column: 6, scope: !13856)
!13859 = !DILocation(line: 6677, column: 16, scope: !13856)
!13860 = !DILocation(line: 6677, column: 7, scope: !13856)
!13861 = !DILocation(line: 6677, column: 14, scope: !13856)
!13862 = !DILocation(line: 6678, column: 4, scope: !13856)
!13863 = !DILocation(line: 6680, column: 14, scope: !13842)
!13864 = !DILocation(line: 6680, column: 21, scope: !13842)
!13865 = !DILocation(line: 6680, column: 11, scope: !13842)
!13866 = !DILocation(line: 6681, column: 7, scope: !13838)
!13867 = !DILocation(line: 6670, column: 42, scope: !13835)
!13868 = !DILocation(line: 6670, column: 40, scope: !13835)
!13869 = !DILocation(line: 6670, column: 5, scope: !13835)
!13870 = distinct !{!13870, !13836, !13871}
!13871 = !DILocation(line: 6681, column: 7, scope: !13830)
!13872 = !DILocation(line: 6682, column: 3, scope: !13819)
!13873 = !DILocation(line: 6684, column: 33, scope: !13816)
!13874 = !DILocation(line: 6684, column: 38, scope: !13816)
!13875 = !DILocation(line: 6684, column: 44, scope: !13816)
!13876 = !DILocation(line: 6684, column: 49, scope: !13816)
!13877 = !DILocation(line: 6684, column: 55, scope: !13816)
!13878 = !DILocation(line: 6684, column: 15, scope: !13816)
!13879 = !DILocation(line: 6684, column: 13, scope: !13816)
!13880 = !DILocation(line: 6685, column: 6, scope: !13816)
!13881 = !DILocation(line: 6686, column: 2, scope: !13794)
!13882 = !DILocation(line: 6651, column: 38, scope: !13791)
!13883 = !DILocation(line: 6651, column: 36, scope: !13791)
!13884 = !DILocation(line: 6651, column: 7, scope: !13791)
!13885 = distinct !{!13885, !13792, !13886}
!13886 = !DILocation(line: 6686, column: 2, scope: !13787)
!13887 = !DILocation(line: 6687, column: 5, scope: !13777)
!13888 = !DILocation(line: 6689, column: 10, scope: !13749)
!13889 = !DILocation(line: 6689, column: 3, scope: !13749)
!13890 = distinct !DISubprogram(name: "variable_post_merge_new_vals", scope: !3, file: !3, line: 3787, type: !6290, scopeLine: 3788, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!13891 = !DILocalVariable(name: "slot", arg: 1, scope: !13890, file: !3, line: 3787, type: !1848)
!13892 = !DILocation(line: 3787, column: 38, scope: !13890)
!13893 = !DILocalVariable(name: "info", arg: 2, scope: !13890, file: !3, line: 3787, type: !1313)
!13894 = !DILocation(line: 3787, column: 50, scope: !13890)
!13895 = !DILocalVariable(name: "dfpm", scope: !13890, file: !3, line: 3789, type: !2512)
!13896 = !DILocation(line: 3789, column: 28, scope: !13890)
!13897 = !DILocation(line: 3789, column: 62, scope: !13890)
!13898 = !DILocation(line: 3789, column: 35, scope: !13890)
!13899 = !DILocalVariable(name: "set", scope: !13890, file: !3, line: 3790, type: !2418)
!13900 = !DILocation(line: 3790, column: 17, scope: !13890)
!13901 = !DILocation(line: 3790, column: 23, scope: !13890)
!13902 = !DILocation(line: 3790, column: 29, scope: !13890)
!13903 = !DILocalVariable(name: "var", scope: !13890, file: !3, line: 3791, type: !2447)
!13904 = !DILocation(line: 3791, column: 12, scope: !13890)
!13905 = !DILocation(line: 3791, column: 29, scope: !13890)
!13906 = !DILocation(line: 3791, column: 28, scope: !13890)
!13907 = !DILocation(line: 3791, column: 18, scope: !13890)
!13908 = !DILocalVariable(name: "node", scope: !13890, file: !3, line: 3792, type: !2437)
!13909 = !DILocation(line: 3792, column: 18, scope: !13890)
!13910 = !DILocation(line: 3794, column: 22, scope: !13911)
!13911 = distinct !DILexicalBlock(scope: !13890, file: !3, line: 3794, column: 7)
!13912 = !DILocation(line: 3794, column: 27, scope: !13911)
!13913 = !DILocation(line: 3794, column: 8, scope: !13911)
!13914 = !DILocation(line: 3794, column: 31, scope: !13911)
!13915 = !DILocation(line: 3794, column: 35, scope: !13911)
!13916 = !DILocation(line: 3794, column: 40, scope: !13911)
!13917 = !DILocation(line: 3794, column: 7, scope: !13890)
!13918 = !DILocation(line: 3795, column: 5, scope: !13911)
!13919 = !DILocation(line: 3797, column: 3, scope: !13890)
!13920 = !DILocation(line: 3799, column: 21, scope: !13921)
!13921 = distinct !DILexicalBlock(scope: !13890, file: !3, line: 3799, column: 7)
!13922 = !DILocation(line: 3799, column: 26, scope: !13921)
!13923 = !DILocation(line: 3799, column: 7, scope: !13921)
!13924 = !DILocation(line: 3799, column: 7, scope: !13890)
!13925 = !DILocalVariable(name: "check_dupes", scope: !13926, file: !3, line: 3801, type: !1130)
!13926 = distinct !DILexicalBlock(scope: !13921, file: !3, line: 3800, column: 5)
!13927 = !DILocation(line: 3801, column: 12, scope: !13926)
!13928 = !DILocation(line: 3801, column: 7, scope: !13926)
!13929 = !DILabel(scope: !13926, name: "restart", file: !3, line: 3803)
!13930 = !DILocation(line: 3803, column: 5, scope: !13926)
!13931 = !DILocation(line: 3804, column: 19, scope: !13932)
!13932 = distinct !DILexicalBlock(scope: !13926, file: !3, line: 3804, column: 7)
!13933 = !DILocation(line: 3804, column: 24, scope: !13932)
!13934 = !DILocation(line: 3804, column: 36, scope: !13932)
!13935 = !DILocation(line: 3804, column: 17, scope: !13932)
!13936 = !DILocation(line: 3804, column: 12, scope: !13932)
!13937 = !DILocation(line: 3804, column: 47, scope: !13938)
!13938 = distinct !DILexicalBlock(scope: !13932, file: !3, line: 3804, column: 7)
!13939 = !DILocation(line: 3804, column: 7, scope: !13932)
!13940 = !DILocation(line: 3806, column: 8, scope: !13941)
!13941 = distinct !DILexicalBlock(scope: !13942, file: !3, line: 3806, column: 8)
!13942 = distinct !DILexicalBlock(scope: !13938, file: !3, line: 3805, column: 2)
!13943 = !DILocation(line: 3806, column: 29, scope: !13941)
!13944 = !DILocation(line: 3806, column: 8, scope: !13942)
!13945 = !DILocation(line: 3807, column: 6, scope: !13941)
!13946 = !DILocation(line: 3808, column: 13, scope: !13947)
!13947 = distinct !DILexicalBlock(scope: !13941, file: !3, line: 3808, column: 13)
!13948 = !DILocation(line: 3808, column: 34, scope: !13947)
!13949 = !DILocation(line: 3808, column: 13, scope: !13941)
!13950 = !DILocalVariable(name: "att", scope: !13951, file: !3, line: 3810, type: !2403)
!13951 = distinct !DILexicalBlock(scope: !13947, file: !3, line: 3809, column: 6)
!13952 = !DILocation(line: 3810, column: 14, scope: !13951)
!13953 = !DILocalVariable(name: "attp", scope: !13951, file: !3, line: 3810, type: !5173)
!13954 = !DILocation(line: 3810, column: 20, scope: !13951)
!13955 = !DILocalVariable(name: "curp", scope: !13951, file: !3, line: 3810, type: !5173)
!13956 = !DILocation(line: 3810, column: 27, scope: !13951)
!13957 = !DILocation(line: 3812, column: 12, scope: !13958)
!13958 = distinct !DILexicalBlock(scope: !13951, file: !3, line: 3812, column: 12)
!13959 = !DILocation(line: 3812, column: 17, scope: !13958)
!13960 = !DILocation(line: 3812, column: 26, scope: !13958)
!13961 = !DILocation(line: 3812, column: 12, scope: !13951)
!13962 = !DILocation(line: 3814, column: 30, scope: !13963)
!13963 = distinct !DILexicalBlock(scope: !13958, file: !3, line: 3813, column: 3)
!13964 = !DILocation(line: 3814, column: 35, scope: !13963)
!13965 = !DILocation(line: 3814, column: 41, scope: !13963)
!13966 = !DILocation(line: 3814, column: 12, scope: !13963)
!13967 = !DILocation(line: 3814, column: 10, scope: !13963)
!13968 = !DILocation(line: 3816, column: 22, scope: !13963)
!13969 = !DILocation(line: 3816, column: 21, scope: !13963)
!13970 = !DILocation(line: 3816, column: 11, scope: !13963)
!13971 = !DILocation(line: 3816, column: 9, scope: !13963)
!13972 = !DILocation(line: 3817, column: 5, scope: !13963)
!13973 = !DILocation(line: 3820, column: 21, scope: !13974)
!13974 = distinct !DILexicalBlock(scope: !13951, file: !3, line: 3820, column: 8)
!13975 = !DILocation(line: 3820, column: 26, scope: !13974)
!13976 = !DILocation(line: 3820, column: 31, scope: !13974)
!13977 = !DILocation(line: 3820, column: 18, scope: !13974)
!13978 = !DILocation(line: 3820, column: 13, scope: !13974)
!13979 = !DILocation(line: 3820, column: 59, scope: !13980)
!13980 = distinct !DILexicalBlock(scope: !13974, file: !3, line: 3820, column: 8)
!13981 = !DILocation(line: 3820, column: 58, scope: !13980)
!13982 = !DILocation(line: 3820, column: 56, scope: !13980)
!13983 = !DILocation(line: 3820, column: 8, scope: !13974)
!13984 = !DILocation(line: 3822, column: 7, scope: !13985)
!13985 = distinct !DILexicalBlock(scope: !13980, file: !3, line: 3822, column: 7)
!13986 = !DILocation(line: 3822, column: 12, scope: !13985)
!13987 = !DILocation(line: 3822, column: 19, scope: !13985)
!13988 = !DILocation(line: 3823, column: 7, scope: !13985)
!13989 = !DILocation(line: 3823, column: 10, scope: !13985)
!13990 = !DILocation(line: 3823, column: 33, scope: !13985)
!13991 = !DILocation(line: 3823, column: 30, scope: !13985)
!13992 = !DILocation(line: 3822, column: 7, scope: !13980)
!13993 = !DILocation(line: 3825, column: 26, scope: !13994)
!13994 = distinct !DILexicalBlock(scope: !13995, file: !3, line: 3825, column: 11)
!13995 = distinct !DILexicalBlock(scope: !13985, file: !3, line: 3824, column: 5)
!13996 = !DILocation(line: 3825, column: 31, scope: !13994)
!13997 = !DILocation(line: 3825, column: 11, scope: !13994)
!13998 = !DILocation(line: 3825, column: 11, scope: !13995)
!13999 = !DILocalVariable(name: "cval", scope: !14000, file: !3, line: 3827, type: !1188)
!14000 = distinct !DILexicalBlock(scope: !13994, file: !3, line: 3826, column: 9)
!14001 = !DILocation(line: 3827, column: 8, scope: !14000)
!14002 = !DILocation(line: 3827, column: 28, scope: !14000)
!14003 = !DILocation(line: 3827, column: 33, scope: !14000)
!14004 = !DILocation(line: 3827, column: 15, scope: !14000)
!14005 = !DILocation(line: 3828, column: 16, scope: !14000)
!14006 = !DILocation(line: 3828, column: 4, scope: !14000)
!14007 = !DILocation(line: 3828, column: 10, scope: !14000)
!14008 = !DILocation(line: 3828, column: 14, scope: !14000)
!14009 = !DILocation(line: 3829, column: 16, scope: !14000)
!14010 = !DILocation(line: 3830, column: 4, scope: !14000)
!14011 = !DILocation(line: 3832, column: 30, scope: !14012)
!14012 = distinct !DILexicalBlock(scope: !13994, file: !3, line: 3832, column: 16)
!14013 = !DILocation(line: 3832, column: 35, scope: !14012)
!14014 = !DILocation(line: 3832, column: 16, scope: !14012)
!14015 = !DILocation(line: 3832, column: 56, scope: !14012)
!14016 = !DILocation(line: 3832, column: 61, scope: !14012)
!14017 = !DILocation(line: 3832, column: 42, scope: !14012)
!14018 = !DILocation(line: 3832, column: 39, scope: !14012)
!14019 = !DILocation(line: 3832, column: 16, scope: !13994)
!14020 = !DILocation(line: 3833, column: 16, scope: !14012)
!14021 = !DILocation(line: 3833, column: 14, scope: !14012)
!14022 = !DILocation(line: 3833, column: 9, scope: !14012)
!14023 = !DILocation(line: 3834, column: 5, scope: !13995)
!14024 = !DILocation(line: 3821, column: 14, scope: !13980)
!14025 = !DILocation(line: 3821, column: 19, scope: !13980)
!14026 = !DILocation(line: 3821, column: 11, scope: !13980)
!14027 = !DILocation(line: 3820, column: 8, scope: !13980)
!14028 = distinct !{!14028, !13983, !14029}
!14029 = !DILocation(line: 3834, column: 5, scope: !13974)
!14030 = !DILocation(line: 3836, column: 13, scope: !14031)
!14031 = distinct !DILexicalBlock(scope: !13951, file: !3, line: 3836, column: 12)
!14032 = !DILocation(line: 3836, column: 12, scope: !13951)
!14033 = !DILocation(line: 3838, column: 12, scope: !14034)
!14034 = distinct !DILexicalBlock(scope: !14031, file: !3, line: 3837, column: 3)
!14035 = !DILocation(line: 3838, column: 10, scope: !14034)
!14036 = !DILocation(line: 3839, column: 5, scope: !14034)
!14037 = !DILocation(line: 3839, column: 13, scope: !14034)
!14038 = !DILocation(line: 3839, column: 12, scope: !14034)
!14039 = !DILocation(line: 3840, column: 13, scope: !14040)
!14040 = distinct !DILexicalBlock(scope: !14034, file: !3, line: 3840, column: 11)
!14041 = !DILocation(line: 3840, column: 12, scope: !14040)
!14042 = !DILocation(line: 3840, column: 20, scope: !14040)
!14043 = !DILocation(line: 3840, column: 27, scope: !14040)
!14044 = !DILocation(line: 3841, column: 4, scope: !14040)
!14045 = !DILocation(line: 3841, column: 7, scope: !14040)
!14046 = !DILocation(line: 3841, column: 34, scope: !14040)
!14047 = !DILocation(line: 3841, column: 31, scope: !14040)
!14048 = !DILocation(line: 3842, column: 4, scope: !14040)
!14049 = !DILocation(line: 3842, column: 23, scope: !14040)
!14050 = !DILocation(line: 3842, column: 22, scope: !14040)
!14051 = !DILocation(line: 3842, column: 30, scope: !14040)
!14052 = !DILocation(line: 3842, column: 7, scope: !14040)
!14053 = !DILocation(line: 3842, column: 51, scope: !14040)
!14054 = !DILocation(line: 3842, column: 56, scope: !14040)
!14055 = !DILocation(line: 3842, column: 37, scope: !14040)
!14056 = !DILocation(line: 3842, column: 34, scope: !14040)
!14057 = !DILocation(line: 3840, column: 11, scope: !14034)
!14058 = !DILocation(line: 3843, column: 9, scope: !14040)
!14059 = !DILocation(line: 3845, column: 19, scope: !14040)
!14060 = !DILocation(line: 3845, column: 18, scope: !14040)
!14061 = !DILocation(line: 3845, column: 26, scope: !14040)
!14062 = !DILocation(line: 3845, column: 14, scope: !14040)
!14063 = distinct !{!14063, !14036, !14064}
!14064 = !DILocation(line: 3845, column: 26, scope: !14034)
!14065 = !DILocation(line: 3846, column: 5, scope: !14034)
!14066 = !DILocation(line: 3847, column: 3, scope: !14034)
!14067 = !DILocation(line: 3849, column: 13, scope: !14068)
!14068 = distinct !DILexicalBlock(scope: !13951, file: !3, line: 3849, column: 12)
!14069 = !DILocation(line: 3849, column: 12, scope: !13951)
!14070 = !DILocalVariable(name: "cdv", scope: !14071, file: !3, line: 3851, type: !2410)
!14071 = distinct !DILexicalBlock(scope: !14068, file: !3, line: 3850, column: 3)
!14072 = !DILocation(line: 3851, column: 19, scope: !14071)
!14073 = !DILocalVariable(name: "cval", scope: !14071, file: !3, line: 3852, type: !1188)
!14074 = !DILocation(line: 3852, column: 9, scope: !14071)
!14075 = !DILocation(line: 3854, column: 11, scope: !14076)
!14076 = distinct !DILexicalBlock(scope: !14071, file: !3, line: 3854, column: 9)
!14077 = !DILocation(line: 3854, column: 17, scope: !14076)
!14078 = !DILocation(line: 3854, column: 10, scope: !14076)
!14079 = !DILocation(line: 3854, column: 9, scope: !14071)
!14080 = !DILocation(line: 3856, column: 24, scope: !14081)
!14081 = distinct !DILexicalBlock(scope: !14076, file: !3, line: 3855, column: 7)
!14082 = !DILocation(line: 3856, column: 10, scope: !14081)
!14083 = !DILocation(line: 3856, column: 16, scope: !14081)
!14084 = !DILocation(line: 3856, column: 22, scope: !14081)
!14085 = !DILocation(line: 3857, column: 29, scope: !14081)
!14086 = !DILocation(line: 3857, column: 35, scope: !14081)
!14087 = !DILocation(line: 3857, column: 28, scope: !14081)
!14088 = !DILocation(line: 3857, column: 9, scope: !14081)
!14089 = !DILocation(line: 3858, column: 7, scope: !14081)
!14090 = !DILocation(line: 3860, column: 18, scope: !14091)
!14091 = distinct !DILexicalBlock(scope: !14071, file: !3, line: 3860, column: 5)
!14092 = !DILocation(line: 3860, column: 24, scope: !14091)
!14093 = !DILocation(line: 3860, column: 17, scope: !14091)
!14094 = !DILocation(line: 3860, column: 32, scope: !14091)
!14095 = !DILocation(line: 3860, column: 37, scope: !14091)
!14096 = !DILocation(line: 3860, column: 16, scope: !14091)
!14097 = !DILocation(line: 3860, column: 14, scope: !14091)
!14098 = !DILocation(line: 3860, column: 10, scope: !14091)
!14099 = !DILocation(line: 3861, column: 10, scope: !14100)
!14100 = distinct !DILexicalBlock(scope: !14091, file: !3, line: 3860, column: 5)
!14101 = !DILocation(line: 3860, column: 5, scope: !14091)
!14102 = !DILocation(line: 3862, column: 11, scope: !14103)
!14103 = distinct !DILexicalBlock(scope: !14100, file: !3, line: 3862, column: 11)
!14104 = !DILocation(line: 3862, column: 34, scope: !14103)
!14105 = !DILocation(line: 3862, column: 31, scope: !14103)
!14106 = !DILocation(line: 3862, column: 11, scope: !14100)
!14107 = !DILocation(line: 3864, column: 4, scope: !14108)
!14108 = distinct !DILexicalBlock(scope: !14103, file: !3, line: 3863, column: 9)
!14109 = !DILocation(line: 3865, column: 4, scope: !14108)
!14110 = !DILocation(line: 3866, column: 15, scope: !14108)
!14111 = !DILocation(line: 3866, column: 20, scope: !14108)
!14112 = !DILocation(line: 3866, column: 25, scope: !14108)
!14113 = !DILocation(line: 3866, column: 4, scope: !14108)
!14114 = !DILocation(line: 3867, column: 4, scope: !14108)
!14115 = !DILocation(line: 3861, column: 21, scope: !14100)
!14116 = !DILocation(line: 3861, column: 26, scope: !14100)
!14117 = !DILocation(line: 3861, column: 19, scope: !14100)
!14118 = !DILocation(line: 3860, column: 5, scope: !14100)
!14119 = distinct !{!14119, !14101, !14120}
!14120 = !DILocation(line: 3868, column: 9, scope: !14091)
!14121 = !DILocation(line: 3870, column: 9, scope: !14122)
!14122 = distinct !DILexicalBlock(scope: !14071, file: !3, line: 3870, column: 9)
!14123 = !DILocation(line: 3870, column: 9, scope: !14071)
!14124 = !DILocation(line: 3872, column: 15, scope: !14125)
!14125 = distinct !DILexicalBlock(scope: !14122, file: !3, line: 3871, column: 7)
!14126 = !DILocation(line: 3872, column: 20, scope: !14125)
!14127 = !DILocation(line: 3872, column: 13, scope: !14125)
!14128 = !DILocation(line: 3873, column: 29, scope: !14125)
!14129 = !DILocation(line: 3873, column: 16, scope: !14125)
!14130 = !DILocation(line: 3873, column: 14, scope: !14125)
!14131 = !DILocation(line: 3874, column: 7, scope: !14125)
!14132 = !DILocalVariable(name: "v", scope: !14133, file: !3, line: 3880, type: !1257)
!14133 = distinct !DILexicalBlock(scope: !14122, file: !3, line: 3876, column: 7)
!14134 = !DILocation(line: 3880, column: 21, scope: !14133)
!14135 = !DILocation(line: 3881, column: 9, scope: !14133)
!14136 = !DILocation(line: 3883, column: 28, scope: !14133)
!14137 = !DILocation(line: 3883, column: 34, scope: !14133)
!14138 = !DILocation(line: 3883, column: 39, scope: !14133)
!14139 = !DILocation(line: 3883, column: 13, scope: !14133)
!14140 = !DILocation(line: 3883, column: 11, scope: !14133)
!14141 = !DILocation(line: 3884, column: 32, scope: !14133)
!14142 = !DILocation(line: 3884, column: 9, scope: !14133)
!14143 = !DILocation(line: 3885, column: 32, scope: !14133)
!14144 = !DILocation(line: 3885, column: 38, scope: !14133)
!14145 = !DILocation(line: 3885, column: 9, scope: !14133)
!14146 = !DILocation(line: 3886, column: 16, scope: !14133)
!14147 = !DILocation(line: 3886, column: 19, scope: !14133)
!14148 = !DILocation(line: 3886, column: 14, scope: !14133)
!14149 = !DILocation(line: 3887, column: 30, scope: !14133)
!14150 = !DILocation(line: 3887, column: 15, scope: !14133)
!14151 = !DILocation(line: 3887, column: 13, scope: !14133)
!14152 = !DILocation(line: 3888, column: 13, scope: !14153)
!14153 = distinct !DILexicalBlock(scope: !14133, file: !3, line: 3888, column: 13)
!14154 = !DILocation(line: 3888, column: 13, scope: !14133)
!14155 = !DILocation(line: 3889, column: 13, scope: !14153)
!14156 = !DILocation(line: 3891, column: 6, scope: !14153)
!14157 = !DILocation(line: 3891, column: 9, scope: !14153)
!14158 = !DILocation(line: 3891, column: 14, scope: !14153)
!14159 = !DILocation(line: 3891, column: 17, scope: !14153)
!14160 = !DILocation(line: 3891, column: 23, scope: !14153)
!14161 = !DILocation(line: 3889, column: 4, scope: !14153)
!14162 = !DILocation(line: 3894, column: 24, scope: !14071)
!14163 = !DILocation(line: 3894, column: 30, scope: !14071)
!14164 = !DILocation(line: 3894, column: 23, scope: !14071)
!14165 = !DILocation(line: 3894, column: 37, scope: !14071)
!14166 = !DILocation(line: 3894, column: 43, scope: !14071)
!14167 = !DILocation(line: 3896, column: 9, scope: !14071)
!14168 = !DILocation(line: 3894, column: 5, scope: !14071)
!14169 = !DILocation(line: 3898, column: 17, scope: !14071)
!14170 = !DILocation(line: 3898, column: 5, scope: !14071)
!14171 = !DILocation(line: 3898, column: 11, scope: !14071)
!14172 = !DILocation(line: 3898, column: 15, scope: !14071)
!14173 = !DILocation(line: 3899, column: 17, scope: !14071)
!14174 = !DILocation(line: 3900, column: 3, scope: !14071)
!14175 = !DILocation(line: 3905, column: 15, scope: !13951)
!14176 = !DILocation(line: 3905, column: 14, scope: !13951)
!14177 = !DILocation(line: 3905, column: 12, scope: !13951)
!14178 = !DILocation(line: 3906, column: 16, scope: !13951)
!14179 = !DILocation(line: 3906, column: 21, scope: !13951)
!14180 = !DILocation(line: 3906, column: 9, scope: !13951)
!14181 = !DILocation(line: 3906, column: 14, scope: !13951)
!14182 = !DILocation(line: 3907, column: 19, scope: !13951)
!14183 = !DILocation(line: 3907, column: 31, scope: !13951)
!14184 = !DILocation(line: 3907, column: 8, scope: !13951)
!14185 = !DILocation(line: 3908, column: 6, scope: !13951)
!14186 = !DILocation(line: 3909, column: 2, scope: !13942)
!14187 = !DILocation(line: 3804, column: 60, scope: !13938)
!14188 = !DILocation(line: 3804, column: 66, scope: !13938)
!14189 = !DILocation(line: 3804, column: 58, scope: !13938)
!14190 = !DILocation(line: 3804, column: 7, scope: !13938)
!14191 = distinct !{!14191, !13939, !14192}
!14192 = !DILocation(line: 3909, column: 2, scope: !13932)
!14193 = !DILocation(line: 3911, column: 11, scope: !14194)
!14194 = distinct !DILexicalBlock(scope: !13926, file: !3, line: 3911, column: 11)
!14195 = !DILocation(line: 3911, column: 11, scope: !13926)
!14196 = !DILocation(line: 3912, column: 27, scope: !14194)
!14197 = !DILocation(line: 3912, column: 2, scope: !14194)
!14198 = !DILocation(line: 3913, column: 5, scope: !13926)
!14199 = !DILocation(line: 3915, column: 3, scope: !13890)
!14200 = !DILocation(line: 3916, column: 1, scope: !13890)
!14201 = distinct !DISubprogram(name: "variable_post_merge_perm_vals", scope: !3, file: !3, line: 3922, type: !6290, scopeLine: 3923, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!14202 = !DILocalVariable(name: "pslot", arg: 1, scope: !14201, file: !3, line: 3922, type: !1848)
!14203 = !DILocation(line: 3922, column: 39, scope: !14201)
!14204 = !DILocalVariable(name: "info", arg: 2, scope: !14201, file: !3, line: 3922, type: !1313)
!14205 = !DILocation(line: 3922, column: 52, scope: !14201)
!14206 = !DILocalVariable(name: "dfpm", scope: !14201, file: !3, line: 3924, type: !2512)
!14207 = !DILocation(line: 3924, column: 28, scope: !14201)
!14208 = !DILocation(line: 3924, column: 62, scope: !14201)
!14209 = !DILocation(line: 3924, column: 35, scope: !14201)
!14210 = !DILocalVariable(name: "set", scope: !14201, file: !3, line: 3925, type: !2418)
!14211 = !DILocation(line: 3925, column: 17, scope: !14201)
!14212 = !DILocation(line: 3925, column: 23, scope: !14201)
!14213 = !DILocation(line: 3925, column: 29, scope: !14201)
!14214 = !DILocalVariable(name: "pvar", scope: !14201, file: !3, line: 3926, type: !2447)
!14215 = !DILocation(line: 3926, column: 12, scope: !14201)
!14216 = !DILocation(line: 3926, column: 30, scope: !14201)
!14217 = !DILocation(line: 3926, column: 29, scope: !14201)
!14218 = !DILocation(line: 3926, column: 19, scope: !14201)
!14219 = !DILocalVariable(name: "var", scope: !14201, file: !3, line: 3926, type: !2447)
!14220 = !DILocation(line: 3926, column: 37, scope: !14201)
!14221 = !DILocalVariable(name: "pnode", scope: !14201, file: !3, line: 3927, type: !2437)
!14222 = !DILocation(line: 3927, column: 18, scope: !14201)
!14223 = !DILocalVariable(name: "dv", scope: !14201, file: !3, line: 3928, type: !2410)
!14224 = !DILocation(line: 3928, column: 17, scope: !14201)
!14225 = !DILocalVariable(name: "att", scope: !14201, file: !3, line: 3929, type: !2403)
!14226 = !DILocation(line: 3929, column: 9, scope: !14201)
!14227 = !DILocation(line: 3931, column: 3, scope: !14201)
!14228 = !DILocation(line: 3932, column: 3, scope: !14201)
!14229 = !DILocation(line: 3933, column: 11, scope: !14201)
!14230 = !DILocation(line: 3933, column: 17, scope: !14201)
!14231 = !DILocation(line: 3933, column: 29, scope: !14201)
!14232 = !DILocation(line: 3933, column: 9, scope: !14201)
!14233 = !DILocation(line: 3934, column: 3, scope: !14201)
!14234 = !DILocation(line: 3935, column: 3, scope: !14201)
!14235 = !DILocation(line: 3936, column: 3, scope: !14201)
!14236 = !DILocation(line: 3938, column: 8, scope: !14201)
!14237 = !DILocation(line: 3938, column: 14, scope: !14201)
!14238 = !DILocation(line: 3938, column: 6, scope: !14201)
!14239 = !DILocation(line: 3940, column: 27, scope: !14201)
!14240 = !DILocation(line: 3940, column: 32, scope: !14201)
!14241 = !DILocation(line: 3940, column: 38, scope: !14201)
!14242 = !DILocation(line: 3940, column: 9, scope: !14201)
!14243 = !DILocation(line: 3940, column: 7, scope: !14201)
!14244 = !DILocation(line: 3941, column: 7, scope: !14245)
!14245 = distinct !DILexicalBlock(scope: !14201, file: !3, line: 3941, column: 7)
!14246 = !DILocation(line: 3941, column: 7, scope: !14201)
!14247 = !DILocation(line: 3943, column: 29, scope: !14248)
!14248 = distinct !DILexicalBlock(scope: !14249, file: !3, line: 3943, column: 11)
!14249 = distinct !DILexicalBlock(scope: !14245, file: !3, line: 3942, column: 5)
!14250 = !DILocation(line: 3943, column: 36, scope: !14248)
!14251 = !DILocation(line: 3943, column: 41, scope: !14248)
!14252 = !DILocation(line: 3943, column: 64, scope: !14248)
!14253 = !DILocation(line: 3943, column: 69, scope: !14248)
!14254 = !DILocation(line: 3943, column: 46, scope: !14248)
!14255 = !DILocation(line: 3943, column: 11, scope: !14248)
!14256 = !DILocation(line: 3943, column: 11, scope: !14249)
!14257 = !DILocation(line: 3944, column: 2, scope: !14248)
!14258 = !DILocation(line: 3945, column: 18, scope: !14249)
!14259 = !DILocation(line: 3945, column: 23, scope: !14249)
!14260 = !DILocation(line: 3945, column: 7, scope: !14249)
!14261 = !DILocation(line: 3946, column: 5, scope: !14249)
!14262 = !DILocation(line: 3948, column: 14, scope: !14263)
!14263 = distinct !DILexicalBlock(scope: !14201, file: !3, line: 3948, column: 3)
!14264 = !DILocation(line: 3948, column: 19, scope: !14263)
!14265 = !DILocation(line: 3948, column: 24, scope: !14263)
!14266 = !DILocation(line: 3948, column: 12, scope: !14263)
!14267 = !DILocation(line: 3948, column: 8, scope: !14263)
!14268 = !DILocation(line: 3948, column: 45, scope: !14269)
!14269 = distinct !DILexicalBlock(scope: !14263, file: !3, line: 3948, column: 3)
!14270 = !DILocation(line: 3948, column: 3, scope: !14263)
!14271 = !DILocation(line: 3949, column: 9, scope: !14272)
!14272 = distinct !DILexicalBlock(scope: !14269, file: !3, line: 3949, column: 9)
!14273 = !DILocation(line: 3949, column: 14, scope: !14272)
!14274 = !DILocation(line: 3949, column: 21, scope: !14272)
!14275 = !DILocation(line: 3950, column: 2, scope: !14272)
!14276 = !DILocation(line: 3950, column: 5, scope: !14272)
!14277 = !DILocation(line: 3950, column: 28, scope: !14272)
!14278 = !DILocation(line: 3950, column: 25, scope: !14272)
!14279 = !DILocation(line: 3951, column: 2, scope: !14272)
!14280 = !DILocation(line: 3951, column: 20, scope: !14272)
!14281 = !DILocation(line: 3951, column: 25, scope: !14272)
!14282 = !DILocation(line: 3951, column: 5, scope: !14272)
!14283 = !DILocation(line: 3949, column: 9, scope: !14269)
!14284 = !DILocation(line: 3952, column: 7, scope: !14272)
!14285 = !DILocation(line: 3951, column: 27, scope: !14272)
!14286 = !DILocation(line: 3948, column: 56, scope: !14269)
!14287 = !DILocation(line: 3948, column: 61, scope: !14269)
!14288 = !DILocation(line: 3948, column: 54, scope: !14269)
!14289 = !DILocation(line: 3948, column: 3, scope: !14269)
!14290 = distinct !{!14290, !14270, !14291}
!14291 = !DILocation(line: 3952, column: 7, scope: !14263)
!14292 = !DILocation(line: 3956, column: 7, scope: !14293)
!14293 = distinct !DILexicalBlock(scope: !14201, file: !3, line: 3956, column: 7)
!14294 = !DILocation(line: 3956, column: 11, scope: !14293)
!14295 = !DILocation(line: 3956, column: 27, scope: !14293)
!14296 = !DILocation(line: 3956, column: 32, scope: !14293)
!14297 = !DILocation(line: 3956, column: 14, scope: !14293)
!14298 = !DILocation(line: 3956, column: 52, scope: !14293)
!14299 = !DILocation(line: 3956, column: 39, scope: !14293)
!14300 = !DILocation(line: 3956, column: 36, scope: !14293)
!14301 = !DILocation(line: 3956, column: 7, scope: !14201)
!14302 = !DILocalVariable(name: "cval", scope: !14303, file: !3, line: 3958, type: !1188)
!14303 = distinct !DILexicalBlock(scope: !14293, file: !3, line: 3957, column: 5)
!14304 = !DILocation(line: 3958, column: 11, scope: !14303)
!14305 = !DILocation(line: 3958, column: 31, scope: !14303)
!14306 = !DILocation(line: 3958, column: 36, scope: !14303)
!14307 = !DILocation(line: 3958, column: 18, scope: !14303)
!14308 = !DILocation(line: 3959, column: 26, scope: !14303)
!14309 = !DILocation(line: 3959, column: 31, scope: !14303)
!14310 = !DILocation(line: 3959, column: 37, scope: !14303)
!14311 = !DILocation(line: 3959, column: 44, scope: !14303)
!14312 = !DILocation(line: 3959, column: 51, scope: !14303)
!14313 = !DILocation(line: 3959, column: 7, scope: !14303)
!14314 = !DILocation(line: 3960, column: 26, scope: !14303)
!14315 = !DILocation(line: 3960, column: 44, scope: !14303)
!14316 = !DILocation(line: 3960, column: 31, scope: !14303)
!14317 = !DILocation(line: 3960, column: 49, scope: !14303)
!14318 = !DILocation(line: 3960, column: 54, scope: !14303)
!14319 = !DILocation(line: 3960, column: 61, scope: !14303)
!14320 = !DILocation(line: 3960, column: 68, scope: !14303)
!14321 = !DILocation(line: 3960, column: 7, scope: !14303)
!14322 = !DILocation(line: 3962, column: 5, scope: !14303)
!14323 = !DILocation(line: 3963, column: 13, scope: !14324)
!14324 = distinct !DILexicalBlock(scope: !14293, file: !3, line: 3963, column: 12)
!14325 = !DILocation(line: 3963, column: 12, scope: !14293)
!14326 = !DILocation(line: 3965, column: 27, scope: !14327)
!14327 = distinct !DILexicalBlock(scope: !14324, file: !3, line: 3964, column: 5)
!14328 = !DILocation(line: 3965, column: 32, scope: !14327)
!14329 = !DILocation(line: 3965, column: 37, scope: !14327)
!14330 = !DILocation(line: 3966, column: 5, scope: !14327)
!14331 = !DILocation(line: 3966, column: 12, scope: !14327)
!14332 = !DILocation(line: 3966, column: 19, scope: !14327)
!14333 = !DILocation(line: 3965, column: 7, scope: !14327)
!14334 = !DILocation(line: 3967, column: 23, scope: !14327)
!14335 = !DILocation(line: 3967, column: 30, scope: !14327)
!14336 = !DILocation(line: 3967, column: 7, scope: !14327)
!14337 = !DILocation(line: 3968, column: 5, scope: !14327)
!14338 = !DILocation(line: 3970, column: 3, scope: !14201)
!14339 = !DILocation(line: 3971, column: 1, scope: !14201)
!14340 = distinct !DISubprogram(name: "canonicalize_vars_star", scope: !3, file: !3, line: 3275, type: !6290, scopeLine: 3276, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!14341 = !DILocalVariable(name: "slot", arg: 1, scope: !14340, file: !3, line: 3275, type: !1848)
!14342 = !DILocation(line: 3275, column: 32, scope: !14340)
!14343 = !DILocalVariable(name: "data", arg: 2, scope: !14340, file: !3, line: 3275, type: !1313)
!14344 = !DILocation(line: 3275, column: 44, scope: !14340)
!14345 = !DILocalVariable(name: "set", scope: !14340, file: !3, line: 3277, type: !2418)
!14346 = !DILocation(line: 3277, column: 17, scope: !14340)
!14347 = !DILocation(line: 3277, column: 39, scope: !14340)
!14348 = !DILocation(line: 3277, column: 23, scope: !14340)
!14349 = !DILocalVariable(name: "var", scope: !14340, file: !3, line: 3278, type: !2447)
!14350 = !DILocation(line: 3278, column: 12, scope: !14340)
!14351 = !DILocation(line: 3278, column: 30, scope: !14340)
!14352 = !DILocation(line: 3278, column: 29, scope: !14340)
!14353 = !DILocation(line: 3278, column: 18, scope: !14340)
!14354 = !DILocalVariable(name: "dv", scope: !14340, file: !3, line: 3279, type: !2410)
!14355 = !DILocation(line: 3279, column: 17, scope: !14340)
!14356 = !DILocation(line: 3279, column: 22, scope: !14340)
!14357 = !DILocation(line: 3279, column: 27, scope: !14340)
!14358 = !DILocalVariable(name: "node", scope: !14340, file: !3, line: 3280, type: !2437)
!14359 = !DILocation(line: 3280, column: 18, scope: !14340)
!14360 = !DILocalVariable(name: "cval", scope: !14340, file: !3, line: 3281, type: !1188)
!14361 = !DILocation(line: 3281, column: 7, scope: !14340)
!14362 = !DILocalVariable(name: "cdv", scope: !14340, file: !3, line: 3282, type: !2410)
!14363 = !DILocation(line: 3282, column: 17, scope: !14340)
!14364 = !DILocalVariable(name: "cslot", scope: !14340, file: !3, line: 3283, type: !1848)
!14365 = !DILocation(line: 3283, column: 10, scope: !14340)
!14366 = !DILocalVariable(name: "cvar", scope: !14340, file: !3, line: 3284, type: !2447)
!14367 = !DILocation(line: 3284, column: 12, scope: !14340)
!14368 = !DILocalVariable(name: "cnode", scope: !14340, file: !3, line: 3285, type: !2437)
!14369 = !DILocation(line: 3285, column: 18, scope: !14340)
!14370 = !DILocation(line: 3287, column: 22, scope: !14371)
!14371 = distinct !DILexicalBlock(scope: !14340, file: !3, line: 3287, column: 7)
!14372 = !DILocation(line: 3287, column: 8, scope: !14371)
!14373 = !DILocation(line: 3287, column: 26, scope: !14371)
!14374 = !DILocation(line: 3287, column: 44, scope: !14371)
!14375 = !DILocation(line: 3287, column: 29, scope: !14371)
!14376 = !DILocation(line: 3287, column: 7, scope: !14340)
!14377 = !DILocation(line: 3288, column: 5, scope: !14371)
!14378 = !DILocation(line: 3290, column: 3, scope: !14340)
!14379 = !DILocation(line: 3292, column: 10, scope: !14340)
!14380 = !DILocation(line: 3292, column: 15, scope: !14340)
!14381 = !DILocation(line: 3292, column: 27, scope: !14340)
!14382 = !DILocation(line: 3292, column: 8, scope: !14340)
!14383 = !DILocation(line: 3294, column: 7, scope: !14384)
!14384 = distinct !DILexicalBlock(scope: !14340, file: !3, line: 3294, column: 7)
!14385 = !DILocation(line: 3294, column: 28, scope: !14384)
!14386 = !DILocation(line: 3294, column: 7, scope: !14340)
!14387 = !DILocation(line: 3295, column: 5, scope: !14384)
!14388 = !DILocation(line: 3297, column: 3, scope: !14340)
!14389 = !DILocation(line: 3298, column: 10, scope: !14340)
!14390 = !DILocation(line: 3298, column: 16, scope: !14340)
!14391 = !DILocation(line: 3298, column: 8, scope: !14340)
!14392 = !DILocation(line: 3301, column: 24, scope: !14340)
!14393 = !DILocation(line: 3301, column: 9, scope: !14340)
!14394 = !DILocation(line: 3301, column: 7, scope: !14340)
!14395 = !DILocation(line: 3302, column: 43, scope: !14340)
!14396 = !DILocation(line: 3302, column: 48, scope: !14340)
!14397 = !DILocation(line: 3302, column: 54, scope: !14340)
!14398 = !DILocation(line: 3302, column: 11, scope: !14340)
!14399 = !DILocation(line: 3302, column: 9, scope: !14340)
!14400 = !DILocation(line: 3303, column: 8, scope: !14401)
!14401 = distinct !DILexicalBlock(scope: !14340, file: !3, line: 3303, column: 7)
!14402 = !DILocation(line: 3303, column: 7, scope: !14340)
!14403 = !DILocation(line: 3304, column: 5, scope: !14401)
!14404 = !DILocation(line: 3305, column: 21, scope: !14340)
!14405 = !DILocation(line: 3305, column: 20, scope: !14340)
!14406 = !DILocation(line: 3305, column: 10, scope: !14340)
!14407 = !DILocation(line: 3305, column: 8, scope: !14340)
!14408 = !DILocation(line: 3306, column: 3, scope: !14340)
!14409 = !DILocation(line: 3308, column: 11, scope: !14340)
!14410 = !DILocation(line: 3308, column: 17, scope: !14340)
!14411 = !DILocation(line: 3308, column: 29, scope: !14340)
!14412 = !DILocation(line: 3308, column: 9, scope: !14340)
!14413 = !DILocation(line: 3312, column: 7, scope: !14414)
!14414 = distinct !DILexicalBlock(scope: !14340, file: !3, line: 3312, column: 7)
!14415 = !DILocation(line: 3312, column: 29, scope: !14414)
!14416 = !DILocation(line: 3313, column: 7, scope: !14414)
!14417 = !DILocation(line: 3313, column: 28, scope: !14414)
!14418 = !DILocation(line: 3313, column: 35, scope: !14414)
!14419 = !DILocation(line: 3313, column: 40, scope: !14414)
!14420 = !DILocation(line: 3313, column: 11, scope: !14414)
!14421 = !DILocation(line: 3312, column: 7, scope: !14340)
!14422 = !DILocation(line: 3314, column: 5, scope: !14414)
!14423 = !DILocation(line: 3318, column: 3, scope: !14340)
!14424 = !DILocation(line: 3319, column: 10, scope: !14340)
!14425 = !DILocation(line: 3319, column: 17, scope: !14340)
!14426 = !DILocation(line: 3319, column: 8, scope: !14340)
!14427 = !DILocation(line: 3321, column: 25, scope: !14340)
!14428 = !DILocation(line: 3321, column: 30, scope: !14340)
!14429 = !DILocation(line: 3321, column: 36, scope: !14340)
!14430 = !DILocation(line: 3321, column: 42, scope: !14340)
!14431 = !DILocation(line: 3322, column: 4, scope: !14340)
!14432 = !DILocation(line: 3322, column: 10, scope: !14340)
!14433 = !DILocation(line: 3322, column: 16, scope: !14340)
!14434 = !DILocation(line: 3322, column: 22, scope: !14340)
!14435 = !DILocation(line: 3321, column: 10, scope: !14340)
!14436 = !DILocation(line: 3321, column: 8, scope: !14340)
!14437 = !DILocation(line: 3323, column: 29, scope: !14340)
!14438 = !DILocation(line: 3323, column: 34, scope: !14340)
!14439 = !DILocation(line: 3323, column: 40, scope: !14340)
!14440 = !DILocation(line: 3323, column: 49, scope: !14340)
!14441 = !DILocation(line: 3323, column: 55, scope: !14340)
!14442 = !DILocation(line: 3323, column: 10, scope: !14340)
!14443 = !DILocation(line: 3323, column: 8, scope: !14340)
!14444 = !DILocation(line: 3325, column: 3, scope: !14340)
!14445 = !DILocation(line: 3326, column: 1, scope: !14340)
!14446 = distinct !DISubprogram(name: "val_reset", scope: !3, file: !3, line: 1859, type: !14447, scopeLine: 1860, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!14447 = !DISubroutineType(types: !14448)
!14448 = !{null, !2418, !2410}
!14449 = !DILocalVariable(name: "set", arg: 1, scope: !14446, file: !3, line: 1859, type: !2418)
!14450 = !DILocation(line: 1859, column: 26, scope: !14446)
!14451 = !DILocalVariable(name: "dv", arg: 2, scope: !14446, file: !3, line: 1859, type: !2410)
!14452 = !DILocation(line: 1859, column: 45, scope: !14446)
!14453 = !DILocalVariable(name: "var", scope: !14446, file: !3, line: 1861, type: !2447)
!14454 = !DILocation(line: 1861, column: 12, scope: !14446)
!14455 = !DILocation(line: 1861, column: 36, scope: !14446)
!14456 = !DILocation(line: 1861, column: 41, scope: !14446)
!14457 = !DILocation(line: 1861, column: 47, scope: !14446)
!14458 = !DILocation(line: 1861, column: 18, scope: !14446)
!14459 = !DILocalVariable(name: "node", scope: !14446, file: !3, line: 1862, type: !2437)
!14460 = !DILocation(line: 1862, column: 18, scope: !14446)
!14461 = !DILocalVariable(name: "cval", scope: !14446, file: !3, line: 1863, type: !1188)
!14462 = !DILocation(line: 1863, column: 7, scope: !14446)
!14463 = !DILocation(line: 1865, column: 8, scope: !14464)
!14464 = distinct !DILexicalBlock(scope: !14446, file: !3, line: 1865, column: 7)
!14465 = !DILocation(line: 1865, column: 12, scope: !14464)
!14466 = !DILocation(line: 1865, column: 16, scope: !14464)
!14467 = !DILocation(line: 1865, column: 21, scope: !14464)
!14468 = !DILocation(line: 1865, column: 7, scope: !14446)
!14469 = !DILocation(line: 1866, column: 5, scope: !14464)
!14470 = !DILocation(line: 1868, column: 3, scope: !14446)
!14471 = !DILocation(line: 1870, column: 8, scope: !14446)
!14472 = !DILocation(line: 1871, column: 15, scope: !14473)
!14473 = distinct !DILexicalBlock(scope: !14446, file: !3, line: 1871, column: 3)
!14474 = !DILocation(line: 1871, column: 20, scope: !14473)
!14475 = !DILocation(line: 1871, column: 32, scope: !14473)
!14476 = !DILocation(line: 1871, column: 13, scope: !14473)
!14477 = !DILocation(line: 1871, column: 8, scope: !14473)
!14478 = !DILocation(line: 1871, column: 43, scope: !14479)
!14479 = distinct !DILexicalBlock(scope: !14473, file: !3, line: 1871, column: 3)
!14480 = !DILocation(line: 1871, column: 3, scope: !14473)
!14481 = !DILocation(line: 1872, column: 9, scope: !14482)
!14482 = distinct !DILexicalBlock(scope: !14479, file: !3, line: 1872, column: 9)
!14483 = !DILocation(line: 1872, column: 30, scope: !14482)
!14484 = !DILocation(line: 1873, column: 2, scope: !14482)
!14485 = !DILocation(line: 1873, column: 22, scope: !14482)
!14486 = !DILocation(line: 1873, column: 28, scope: !14482)
!14487 = !DILocation(line: 1873, column: 33, scope: !14482)
!14488 = !DILocation(line: 1873, column: 5, scope: !14482)
!14489 = !DILocation(line: 1872, column: 9, scope: !14479)
!14490 = !DILocation(line: 1874, column: 14, scope: !14482)
!14491 = !DILocation(line: 1874, column: 20, scope: !14482)
!14492 = !DILocation(line: 1874, column: 12, scope: !14482)
!14493 = !DILocation(line: 1874, column: 7, scope: !14482)
!14494 = !DILocation(line: 1873, column: 37, scope: !14482)
!14495 = !DILocation(line: 1871, column: 56, scope: !14479)
!14496 = !DILocation(line: 1871, column: 62, scope: !14479)
!14497 = !DILocation(line: 1871, column: 54, scope: !14479)
!14498 = !DILocation(line: 1871, column: 3, scope: !14479)
!14499 = distinct !{!14499, !14480, !14500}
!14500 = !DILocation(line: 1874, column: 20, scope: !14473)
!14501 = !DILocation(line: 1876, column: 15, scope: !14502)
!14502 = distinct !DILexicalBlock(scope: !14446, file: !3, line: 1876, column: 3)
!14503 = !DILocation(line: 1876, column: 20, scope: !14502)
!14504 = !DILocation(line: 1876, column: 32, scope: !14502)
!14505 = !DILocation(line: 1876, column: 13, scope: !14502)
!14506 = !DILocation(line: 1876, column: 8, scope: !14502)
!14507 = !DILocation(line: 1876, column: 43, scope: !14508)
!14508 = distinct !DILexicalBlock(scope: !14502, file: !3, line: 1876, column: 3)
!14509 = !DILocation(line: 1876, column: 3, scope: !14502)
!14510 = !DILocation(line: 1877, column: 9, scope: !14511)
!14511 = distinct !DILexicalBlock(scope: !14508, file: !3, line: 1877, column: 9)
!14512 = !DILocation(line: 1877, column: 30, scope: !14511)
!14513 = !DILocation(line: 1877, column: 39, scope: !14511)
!14514 = !DILocation(line: 1877, column: 42, scope: !14511)
!14515 = !DILocation(line: 1877, column: 50, scope: !14511)
!14516 = !DILocation(line: 1877, column: 56, scope: !14511)
!14517 = !DILocation(line: 1877, column: 47, scope: !14511)
!14518 = !DILocation(line: 1877, column: 9, scope: !14508)
!14519 = !DILocation(line: 1882, column: 6, scope: !14520)
!14520 = distinct !DILexicalBlock(scope: !14521, file: !3, line: 1882, column: 6)
!14521 = distinct !DILexicalBlock(scope: !14511, file: !3, line: 1878, column: 7)
!14522 = !DILocation(line: 1882, column: 6, scope: !14521)
!14523 = !DILocation(line: 1883, column: 23, scope: !14520)
!14524 = !DILocation(line: 1883, column: 28, scope: !14520)
!14525 = !DILocation(line: 1883, column: 49, scope: !14520)
!14526 = !DILocation(line: 1883, column: 55, scope: !14520)
!14527 = !DILocation(line: 1883, column: 34, scope: !14520)
!14528 = !DILocation(line: 1884, column: 12, scope: !14520)
!14529 = !DILocation(line: 1884, column: 18, scope: !14520)
!14530 = !DILocation(line: 1884, column: 24, scope: !14520)
!14531 = !DILocation(line: 1884, column: 30, scope: !14520)
!14532 = !DILocation(line: 1883, column: 4, scope: !14520)
!14533 = !DILocation(line: 1885, column: 24, scope: !14521)
!14534 = !DILocation(line: 1885, column: 42, scope: !14521)
!14535 = !DILocation(line: 1885, column: 29, scope: !14521)
!14536 = !DILocation(line: 1886, column: 25, scope: !14521)
!14537 = !DILocation(line: 1886, column: 31, scope: !14521)
!14538 = !DILocation(line: 1886, column: 10, scope: !14521)
!14539 = !DILocation(line: 1885, column: 2, scope: !14521)
!14540 = !DILocation(line: 1887, column: 7, scope: !14521)
!14541 = !DILocation(line: 1876, column: 56, scope: !14508)
!14542 = !DILocation(line: 1876, column: 62, scope: !14508)
!14543 = !DILocation(line: 1876, column: 54, scope: !14508)
!14544 = !DILocation(line: 1876, column: 3, scope: !14508)
!14545 = distinct !{!14545, !14509, !14546}
!14546 = !DILocation(line: 1887, column: 7, scope: !14502)
!14547 = !DILocation(line: 1889, column: 7, scope: !14548)
!14548 = distinct !DILexicalBlock(scope: !14446, file: !3, line: 1889, column: 7)
!14549 = !DILocation(line: 1889, column: 7, scope: !14446)
!14550 = !DILocalVariable(name: "cdv", scope: !14551, file: !3, line: 1891, type: !2410)
!14551 = distinct !DILexicalBlock(scope: !14548, file: !3, line: 1890, column: 5)
!14552 = !DILocation(line: 1891, column: 21, scope: !14551)
!14553 = !DILocation(line: 1891, column: 42, scope: !14551)
!14554 = !DILocation(line: 1891, column: 27, scope: !14551)
!14555 = !DILocation(line: 1895, column: 19, scope: !14556)
!14556 = distinct !DILexicalBlock(scope: !14551, file: !3, line: 1895, column: 7)
!14557 = !DILocation(line: 1895, column: 24, scope: !14556)
!14558 = !DILocation(line: 1895, column: 36, scope: !14556)
!14559 = !DILocation(line: 1895, column: 17, scope: !14556)
!14560 = !DILocation(line: 1895, column: 12, scope: !14556)
!14561 = !DILocation(line: 1895, column: 47, scope: !14562)
!14562 = distinct !DILexicalBlock(scope: !14556, file: !3, line: 1895, column: 7)
!14563 = !DILocation(line: 1895, column: 7, scope: !14556)
!14564 = !DILocation(line: 1897, column: 8, scope: !14565)
!14565 = distinct !DILexicalBlock(scope: !14566, file: !3, line: 1897, column: 8)
!14566 = distinct !DILexicalBlock(scope: !14562, file: !3, line: 1896, column: 2)
!14567 = !DILocation(line: 1897, column: 14, scope: !14565)
!14568 = !DILocation(line: 1897, column: 21, scope: !14565)
!14569 = !DILocation(line: 1897, column: 18, scope: !14565)
!14570 = !DILocation(line: 1897, column: 8, scope: !14566)
!14571 = !DILocation(line: 1898, column: 6, scope: !14565)
!14572 = !DILocation(line: 1899, column: 13, scope: !14573)
!14573 = distinct !DILexicalBlock(scope: !14565, file: !3, line: 1899, column: 13)
!14574 = !DILocation(line: 1899, column: 34, scope: !14573)
!14575 = !DILocation(line: 1899, column: 13, scope: !14565)
!14576 = !DILocation(line: 1900, column: 24, scope: !14573)
!14577 = !DILocation(line: 1900, column: 29, scope: !14573)
!14578 = !DILocation(line: 1900, column: 35, scope: !14573)
!14579 = !DILocation(line: 1900, column: 40, scope: !14573)
!14580 = !DILocation(line: 1900, column: 46, scope: !14573)
!14581 = !DILocation(line: 1900, column: 52, scope: !14573)
!14582 = !DILocation(line: 1901, column: 10, scope: !14573)
!14583 = !DILocation(line: 1901, column: 16, scope: !14573)
!14584 = !DILocation(line: 1900, column: 6, scope: !14573)
!14585 = !DILocation(line: 1902, column: 13, scope: !14586)
!14586 = distinct !DILexicalBlock(scope: !14573, file: !3, line: 1902, column: 13)
!14587 = !DILocation(line: 1902, column: 34, scope: !14586)
!14588 = !DILocation(line: 1902, column: 13, scope: !14573)
!14589 = !DILocation(line: 1903, column: 24, scope: !14586)
!14590 = !DILocation(line: 1903, column: 29, scope: !14586)
!14591 = !DILocation(line: 1903, column: 35, scope: !14586)
!14592 = !DILocation(line: 1903, column: 40, scope: !14586)
!14593 = !DILocation(line: 1903, column: 46, scope: !14586)
!14594 = !DILocation(line: 1903, column: 52, scope: !14586)
!14595 = !DILocation(line: 1904, column: 10, scope: !14586)
!14596 = !DILocation(line: 1904, column: 16, scope: !14586)
!14597 = !DILocation(line: 1903, column: 6, scope: !14586)
!14598 = !DILocation(line: 1906, column: 25, scope: !14586)
!14599 = !DILocation(line: 1906, column: 30, scope: !14586)
!14600 = !DILocation(line: 1906, column: 36, scope: !14586)
!14601 = !DILocation(line: 1906, column: 41, scope: !14586)
!14602 = !DILocation(line: 1907, column: 11, scope: !14586)
!14603 = !DILocation(line: 1907, column: 17, scope: !14586)
!14604 = !DILocation(line: 1907, column: 23, scope: !14586)
!14605 = !DILocation(line: 1907, column: 29, scope: !14586)
!14606 = !DILocation(line: 1906, column: 6, scope: !14586)
!14607 = !DILocation(line: 1908, column: 2, scope: !14566)
!14608 = !DILocation(line: 1895, column: 60, scope: !14562)
!14609 = !DILocation(line: 1895, column: 66, scope: !14562)
!14610 = !DILocation(line: 1895, column: 58, scope: !14562)
!14611 = !DILocation(line: 1895, column: 7, scope: !14562)
!14612 = distinct !{!14612, !14563, !14613}
!14613 = !DILocation(line: 1908, column: 2, scope: !14556)
!14614 = !DILocation(line: 1909, column: 5, scope: !14551)
!14615 = !DILocation(line: 1913, column: 7, scope: !14616)
!14616 = distinct !DILexicalBlock(scope: !14446, file: !3, line: 1913, column: 7)
!14617 = !DILocation(line: 1913, column: 7, scope: !14446)
!14618 = !DILocation(line: 1914, column: 27, scope: !14616)
!14619 = !DILocation(line: 1914, column: 45, scope: !14616)
!14620 = !DILocation(line: 1914, column: 32, scope: !14616)
!14621 = !DILocation(line: 1914, column: 65, scope: !14616)
!14622 = !DILocation(line: 1914, column: 50, scope: !14616)
!14623 = !DILocation(line: 1914, column: 5, scope: !14616)
!14624 = !DILocation(line: 1916, column: 26, scope: !14446)
!14625 = !DILocation(line: 1916, column: 37, scope: !14446)
!14626 = !DILocation(line: 1916, column: 3, scope: !14446)
!14627 = !DILocation(line: 1924, column: 1, scope: !14446)
!14628 = distinct !DISubprogram(name: "remove_duplicate_values", scope: !3, file: !3, line: 3739, type: !14629, scopeLine: 3740, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!14629 = !DISubroutineType(types: !14630)
!14630 = !{null, !2447}
!14631 = !DILocalVariable(name: "var", arg: 1, scope: !14628, file: !3, line: 3739, type: !2447)
!14632 = !DILocation(line: 3739, column: 35, scope: !14628)
!14633 = !DILocalVariable(name: "node", scope: !14628, file: !3, line: 3741, type: !2437)
!14634 = !DILocation(line: 3741, column: 18, scope: !14628)
!14635 = !DILocalVariable(name: "nodep", scope: !14628, file: !3, line: 3741, type: !5595)
!14636 = !DILocation(line: 3741, column: 25, scope: !14628)
!14637 = !DILocation(line: 3743, column: 3, scope: !14628)
!14638 = !DILocation(line: 3744, column: 3, scope: !14628)
!14639 = !DILocation(line: 3745, column: 3, scope: !14628)
!14640 = !DILocation(line: 3747, column: 17, scope: !14641)
!14641 = distinct !DILexicalBlock(scope: !14628, file: !3, line: 3747, column: 3)
!14642 = !DILocation(line: 3747, column: 22, scope: !14641)
!14643 = !DILocation(line: 3747, column: 34, scope: !14641)
!14644 = !DILocation(line: 3747, column: 14, scope: !14641)
!14645 = !DILocation(line: 3747, column: 8, scope: !14641)
!14646 = !DILocation(line: 3747, column: 54, scope: !14647)
!14647 = distinct !DILexicalBlock(scope: !14641, file: !3, line: 3747, column: 3)
!14648 = !DILocation(line: 3747, column: 53, scope: !14647)
!14649 = !DILocation(line: 3747, column: 51, scope: !14647)
!14650 = !DILocation(line: 3747, column: 3, scope: !14641)
!14651 = !DILocation(line: 3749, column: 11, scope: !14652)
!14652 = distinct !DILexicalBlock(scope: !14653, file: !3, line: 3749, column: 11)
!14653 = distinct !DILexicalBlock(scope: !14647, file: !3, line: 3748, column: 5)
!14654 = !DILocation(line: 3749, column: 32, scope: !14652)
!14655 = !DILocation(line: 3749, column: 11, scope: !14653)
!14656 = !DILocation(line: 3751, column: 8, scope: !14657)
!14657 = distinct !DILexicalBlock(scope: !14658, file: !3, line: 3751, column: 8)
!14658 = distinct !DILexicalBlock(scope: !14652, file: !3, line: 3750, column: 2)
!14659 = !DILocation(line: 3751, column: 8, scope: !14658)
!14660 = !DILocation(line: 3754, column: 17, scope: !14661)
!14661 = distinct !DILexicalBlock(scope: !14657, file: !3, line: 3752, column: 6)
!14662 = !DILocation(line: 3754, column: 23, scope: !14661)
!14663 = !DILocation(line: 3754, column: 9, scope: !14661)
!14664 = !DILocation(line: 3754, column: 15, scope: !14661)
!14665 = !DILocation(line: 3755, column: 19, scope: !14661)
!14666 = !DILocation(line: 3755, column: 35, scope: !14661)
!14667 = !DILocation(line: 3755, column: 8, scope: !14661)
!14668 = !DILocation(line: 3756, column: 8, scope: !14661)
!14669 = distinct !{!14669, !14650, !14670}
!14670 = !DILocation(line: 3762, column: 5, scope: !14641)
!14671 = !DILocation(line: 3759, column: 6, scope: !14657)
!14672 = !DILocation(line: 3759, column: 38, scope: !14657)
!14673 = !DILocation(line: 3760, column: 2, scope: !14658)
!14674 = !DILocation(line: 3761, column: 16, scope: !14653)
!14675 = !DILocation(line: 3761, column: 22, scope: !14653)
!14676 = !DILocation(line: 3761, column: 13, scope: !14653)
!14677 = !DILocation(line: 3747, column: 3, scope: !14647)
!14678 = !DILocation(line: 3764, column: 15, scope: !14679)
!14679 = distinct !DILexicalBlock(scope: !14628, file: !3, line: 3764, column: 3)
!14680 = !DILocation(line: 3764, column: 20, scope: !14679)
!14681 = !DILocation(line: 3764, column: 32, scope: !14679)
!14682 = !DILocation(line: 3764, column: 13, scope: !14679)
!14683 = !DILocation(line: 3764, column: 8, scope: !14679)
!14684 = !DILocation(line: 3764, column: 43, scope: !14685)
!14685 = distinct !DILexicalBlock(scope: !14679, file: !3, line: 3764, column: 3)
!14686 = !DILocation(line: 3764, column: 3, scope: !14679)
!14687 = !DILocation(line: 3765, column: 9, scope: !14688)
!14688 = distinct !DILexicalBlock(scope: !14685, file: !3, line: 3765, column: 9)
!14689 = !DILocation(line: 3765, column: 30, scope: !14688)
!14690 = !DILocation(line: 3765, column: 9, scope: !14685)
!14691 = !DILocation(line: 3767, column: 2, scope: !14692)
!14692 = distinct !DILexicalBlock(scope: !14688, file: !3, line: 3766, column: 7)
!14693 = !DILocation(line: 3768, column: 2, scope: !14692)
!14694 = !DILocation(line: 3768, column: 34, scope: !14692)
!14695 = !DILocation(line: 3769, column: 7, scope: !14692)
!14696 = !DILocation(line: 3765, column: 33, scope: !14688)
!14697 = !DILocation(line: 3764, column: 56, scope: !14685)
!14698 = !DILocation(line: 3764, column: 62, scope: !14685)
!14699 = !DILocation(line: 3764, column: 54, scope: !14685)
!14700 = !DILocation(line: 3764, column: 3, scope: !14685)
!14701 = distinct !{!14701, !14686, !14702}
!14702 = !DILocation(line: 3769, column: 7, scope: !14679)
!14703 = !DILocation(line: 3770, column: 1, scope: !14628)
!14704 = distinct !DISubprogram(name: "delete_variable_part", scope: !3, file: !3, line: 6803, type: !14705, scopeLine: 6805, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!14705 = !DISubroutineType(types: !14706)
!14706 = !{null, !2418, !1188, !2410, !1067}
!14707 = !DILocalVariable(name: "set", arg: 1, scope: !14704, file: !3, line: 6803, type: !2418)
!14708 = !DILocation(line: 6803, column: 37, scope: !14704)
!14709 = !DILocalVariable(name: "loc", arg: 2, scope: !14704, file: !3, line: 6803, type: !1188)
!14710 = !DILocation(line: 6803, column: 46, scope: !14704)
!14711 = !DILocalVariable(name: "dv", arg: 3, scope: !14704, file: !3, line: 6803, type: !2410)
!14712 = !DILocation(line: 6803, column: 65, scope: !14704)
!14713 = !DILocalVariable(name: "offset", arg: 4, scope: !14704, file: !3, line: 6804, type: !1067)
!14714 = !DILocation(line: 6804, column: 23, scope: !14704)
!14715 = !DILocalVariable(name: "slot", scope: !14704, file: !3, line: 6806, type: !1848)
!14716 = !DILocation(line: 6806, column: 10, scope: !14704)
!14717 = !DILocation(line: 6806, column: 49, scope: !14704)
!14718 = !DILocation(line: 6806, column: 54, scope: !14704)
!14719 = !DILocation(line: 6806, column: 60, scope: !14704)
!14720 = !DILocation(line: 6806, column: 17, scope: !14704)
!14721 = !DILocation(line: 6807, column: 8, scope: !14722)
!14722 = distinct !DILexicalBlock(scope: !14704, file: !3, line: 6807, column: 7)
!14723 = !DILocation(line: 6807, column: 7, scope: !14704)
!14724 = !DILocation(line: 6808, column: 5, scope: !14722)
!14725 = !DILocation(line: 6810, column: 28, scope: !14704)
!14726 = !DILocation(line: 6810, column: 33, scope: !14704)
!14727 = !DILocation(line: 6810, column: 38, scope: !14704)
!14728 = !DILocation(line: 6810, column: 44, scope: !14704)
!14729 = !DILocation(line: 6810, column: 10, scope: !14704)
!14730 = !DILocation(line: 6810, column: 8, scope: !14704)
!14731 = !DILocation(line: 6811, column: 1, scope: !14704)
!14732 = distinct !DISubprogram(name: "var_mem_decl_set", scope: !3, file: !3, line: 1746, type: !5285, scopeLine: 1749, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!14733 = !DILocalVariable(name: "set", arg: 1, scope: !14732, file: !3, line: 1746, type: !2418)
!14734 = !DILocation(line: 1746, column: 33, scope: !14732)
!14735 = !DILocalVariable(name: "loc", arg: 2, scope: !14732, file: !3, line: 1746, type: !1188)
!14736 = !DILocation(line: 1746, column: 42, scope: !14732)
!14737 = !DILocalVariable(name: "initialized", arg: 3, scope: !14732, file: !3, line: 1746, type: !734)
!14738 = !DILocation(line: 1746, column: 68, scope: !14732)
!14739 = !DILocalVariable(name: "dv", arg: 4, scope: !14732, file: !3, line: 1747, type: !2410)
!14740 = !DILocation(line: 1747, column: 19, scope: !14732)
!14741 = !DILocalVariable(name: "offset", arg: 5, scope: !14732, file: !3, line: 1747, type: !1067)
!14742 = !DILocation(line: 1747, column: 37, scope: !14732)
!14743 = !DILocalVariable(name: "set_src", arg: 6, scope: !14732, file: !3, line: 1747, type: !1188)
!14744 = !DILocation(line: 1747, column: 49, scope: !14732)
!14745 = !DILocalVariable(name: "iopt", arg: 7, scope: !14732, file: !3, line: 1748, type: !739)
!14746 = !DILocation(line: 1748, column: 24, scope: !14732)
!14747 = !DILocation(line: 1750, column: 21, scope: !14748)
!14748 = distinct !DILexicalBlock(scope: !14732, file: !3, line: 1750, column: 7)
!14749 = !DILocation(line: 1750, column: 7, scope: !14748)
!14750 = !DILocation(line: 1750, column: 7, scope: !14732)
!14751 = !DILocation(line: 1751, column: 52, scope: !14748)
!14752 = !DILocation(line: 1751, column: 40, scope: !14748)
!14753 = !DILocation(line: 1751, column: 24, scope: !14748)
!14754 = !DILocation(line: 1751, column: 10, scope: !14748)
!14755 = !DILocation(line: 1751, column: 8, scope: !14748)
!14756 = !DILocation(line: 1751, column: 5, scope: !14748)
!14757 = !DILocation(line: 1753, column: 22, scope: !14732)
!14758 = !DILocation(line: 1753, column: 27, scope: !14732)
!14759 = !DILocation(line: 1753, column: 32, scope: !14732)
!14760 = !DILocation(line: 1753, column: 36, scope: !14732)
!14761 = !DILocation(line: 1753, column: 44, scope: !14732)
!14762 = !DILocation(line: 1753, column: 57, scope: !14732)
!14763 = !DILocation(line: 1753, column: 66, scope: !14732)
!14764 = !DILocation(line: 1753, column: 3, scope: !14732)
!14765 = !DILocation(line: 1754, column: 1, scope: !14732)
!14766 = distinct !DISubprogram(name: "attrs_list_union", scope: !3, file: !3, line: 1290, type: !10630, scopeLine: 1291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!14767 = !DILocalVariable(name: "dstp", arg: 1, scope: !14766, file: !3, line: 1290, type: !5173)
!14768 = !DILocation(line: 1290, column: 26, scope: !14766)
!14769 = !DILocalVariable(name: "src", arg: 2, scope: !14766, file: !3, line: 1290, type: !2403)
!14770 = !DILocation(line: 1290, column: 38, scope: !14766)
!14771 = !DILocation(line: 1292, column: 3, scope: !14766)
!14772 = !DILocation(line: 1292, column: 10, scope: !14773)
!14773 = distinct !DILexicalBlock(scope: !14774, file: !3, line: 1292, column: 3)
!14774 = distinct !DILexicalBlock(scope: !14766, file: !3, line: 1292, column: 3)
!14775 = !DILocation(line: 1292, column: 3, scope: !14774)
!14776 = !DILocation(line: 1294, column: 32, scope: !14777)
!14777 = distinct !DILexicalBlock(scope: !14778, file: !3, line: 1294, column: 11)
!14778 = distinct !DILexicalBlock(scope: !14773, file: !3, line: 1293, column: 5)
!14779 = !DILocation(line: 1294, column: 31, scope: !14777)
!14780 = !DILocation(line: 1294, column: 38, scope: !14777)
!14781 = !DILocation(line: 1294, column: 43, scope: !14777)
!14782 = !DILocation(line: 1294, column: 47, scope: !14777)
!14783 = !DILocation(line: 1294, column: 52, scope: !14777)
!14784 = !DILocation(line: 1294, column: 12, scope: !14777)
!14785 = !DILocation(line: 1294, column: 11, scope: !14778)
!14786 = !DILocation(line: 1295, column: 21, scope: !14777)
!14787 = !DILocation(line: 1295, column: 27, scope: !14777)
!14788 = !DILocation(line: 1295, column: 32, scope: !14777)
!14789 = !DILocation(line: 1295, column: 36, scope: !14777)
!14790 = !DILocation(line: 1295, column: 41, scope: !14777)
!14791 = !DILocation(line: 1295, column: 49, scope: !14777)
!14792 = !DILocation(line: 1295, column: 54, scope: !14777)
!14793 = !DILocation(line: 1295, column: 2, scope: !14777)
!14794 = !DILocation(line: 1296, column: 5, scope: !14778)
!14795 = !DILocation(line: 1292, column: 21, scope: !14773)
!14796 = !DILocation(line: 1292, column: 26, scope: !14773)
!14797 = !DILocation(line: 1292, column: 19, scope: !14773)
!14798 = !DILocation(line: 1292, column: 3, scope: !14773)
!14799 = distinct !{!14799, !14775, !14800}
!14800 = !DILocation(line: 1296, column: 5, scope: !14774)
!14801 = !DILocation(line: 1297, column: 1, scope: !14766)
!14802 = distinct !DISubprogram(name: "VEC_micro_operation_base_iterate", scope: !3, file: !3, line: 194, type: !14803, scopeLine: 194, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!14803 = !DISubroutineType(types: !14804)
!14804 = !{!1010, !7256, !7, !14805}
!14805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4238, size: 64)
!14806 = !DILocalVariable(name: "vec_", arg: 1, scope: !14802, file: !3, line: 194, type: !7256)
!14807 = !DILocation(line: 194, column: 1, scope: !14802)
!14808 = !DILocalVariable(name: "ix_", arg: 2, scope: !14802, file: !3, line: 194, type: !7)
!14809 = !DILocalVariable(name: "ptr", arg: 3, scope: !14802, file: !3, line: 194, type: !14805)
!14810 = !DILocation(line: 194, column: 1, scope: !14811)
!14811 = distinct !DILexicalBlock(scope: !14802, file: !3, line: 194, column: 1)
!14812 = !DILocation(line: 194, column: 1, scope: !14813)
!14813 = distinct !DILexicalBlock(scope: !14811, file: !3, line: 194, column: 1)
!14814 = !DILocation(line: 194, column: 1, scope: !14815)
!14815 = distinct !DILexicalBlock(scope: !14811, file: !3, line: 194, column: 1)
!14816 = distinct !DISubprogram(name: "dataflow_set_clear_at_call", scope: !3, file: !3, line: 4256, type: !4011, scopeLine: 4257, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!14817 = !DILocalVariable(name: "set", arg: 1, scope: !14816, file: !3, line: 4256, type: !2418)
!14818 = !DILocation(line: 4256, column: 43, scope: !14816)
!14819 = !DILocalVariable(name: "r", scope: !14816, file: !3, line: 4258, type: !1010)
!14820 = !DILocation(line: 4258, column: 7, scope: !14816)
!14821 = !DILocation(line: 4260, column: 10, scope: !14822)
!14822 = distinct !DILexicalBlock(scope: !14816, file: !3, line: 4260, column: 3)
!14823 = !DILocation(line: 4260, column: 8, scope: !14822)
!14824 = !DILocation(line: 4260, column: 15, scope: !14825)
!14825 = distinct !DILexicalBlock(scope: !14822, file: !3, line: 4260, column: 3)
!14826 = !DILocation(line: 4260, column: 17, scope: !14825)
!14827 = !DILocation(line: 4260, column: 3, scope: !14822)
!14828 = !DILocation(line: 4261, column: 9, scope: !14829)
!14829 = distinct !DILexicalBlock(scope: !14825, file: !3, line: 4261, column: 9)
!14830 = !DILocation(line: 4261, column: 9, scope: !14825)
!14831 = !DILocation(line: 4262, column: 25, scope: !14829)
!14832 = !DILocation(line: 4262, column: 30, scope: !14829)
!14833 = !DILocation(line: 4262, column: 7, scope: !14829)
!14834 = !DILocation(line: 4260, column: 43, scope: !14825)
!14835 = !DILocation(line: 4260, column: 3, scope: !14825)
!14836 = distinct !{!14836, !14827, !14837}
!14837 = !DILocation(line: 4262, column: 31, scope: !14822)
!14838 = !DILocation(line: 4264, column: 7, scope: !14839)
!14839 = distinct !DILexicalBlock(scope: !14816, file: !3, line: 4264, column: 7)
!14840 = !DILocation(line: 4264, column: 7, scope: !14816)
!14841 = !DILocation(line: 4266, column: 29, scope: !14842)
!14842 = distinct !DILexicalBlock(scope: !14839, file: !3, line: 4265, column: 5)
!14843 = !DILocation(line: 4266, column: 34, scope: !14842)
!14844 = !DILocation(line: 4266, column: 7, scope: !14842)
!14845 = !DILocation(line: 4266, column: 12, scope: !14842)
!14846 = !DILocation(line: 4266, column: 27, scope: !14842)
!14847 = !DILocation(line: 4267, column: 40, scope: !14842)
!14848 = !DILocation(line: 4267, column: 45, scope: !14842)
!14849 = !DILocation(line: 4267, column: 22, scope: !14842)
!14850 = !DILocation(line: 4268, column: 40, scope: !14842)
!14851 = !DILocation(line: 4267, column: 7, scope: !14842)
!14852 = !DILocation(line: 4269, column: 29, scope: !14842)
!14853 = !DILocation(line: 4269, column: 34, scope: !14842)
!14854 = !DILocation(line: 4269, column: 7, scope: !14842)
!14855 = !DILocation(line: 4269, column: 12, scope: !14842)
!14856 = !DILocation(line: 4269, column: 27, scope: !14842)
!14857 = !DILocation(line: 4270, column: 40, scope: !14842)
!14858 = !DILocation(line: 4270, column: 45, scope: !14842)
!14859 = !DILocation(line: 4270, column: 22, scope: !14842)
!14860 = !DILocation(line: 4271, column: 8, scope: !14842)
!14861 = !DILocation(line: 4270, column: 7, scope: !14842)
!14862 = !DILocation(line: 4272, column: 7, scope: !14842)
!14863 = !DILocation(line: 4272, column: 12, scope: !14842)
!14864 = !DILocation(line: 4272, column: 27, scope: !14842)
!14865 = !DILocation(line: 4273, column: 5, scope: !14842)
!14866 = !DILocation(line: 4274, column: 1, scope: !14816)
!14867 = distinct !DISubprogram(name: "var_reg_set", scope: !3, file: !3, line: 1611, type: !14868, scopeLine: 1613, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!14868 = !DISubroutineType(types: !14869)
!14869 = !{null, !2418, !1188, !734, !1188}
!14870 = !DILocalVariable(name: "set", arg: 1, scope: !14867, file: !3, line: 1611, type: !2418)
!14871 = !DILocation(line: 1611, column: 28, scope: !14867)
!14872 = !DILocalVariable(name: "loc", arg: 2, scope: !14867, file: !3, line: 1611, type: !1188)
!14873 = !DILocation(line: 1611, column: 37, scope: !14867)
!14874 = !DILocalVariable(name: "initialized", arg: 3, scope: !14867, file: !3, line: 1611, type: !734)
!14875 = !DILocation(line: 1611, column: 63, scope: !14867)
!14876 = !DILocalVariable(name: "set_src", arg: 4, scope: !14867, file: !3, line: 1612, type: !1188)
!14877 = !DILocation(line: 1612, column: 11, scope: !14867)
!14878 = !DILocalVariable(name: "decl", scope: !14867, file: !3, line: 1614, type: !1011)
!14879 = !DILocation(line: 1614, column: 8, scope: !14867)
!14880 = !DILocation(line: 1614, column: 15, scope: !14867)
!14881 = !DILocalVariable(name: "offset", scope: !14867, file: !3, line: 1615, type: !1067)
!14882 = !DILocation(line: 1615, column: 17, scope: !14867)
!14883 = !DILocation(line: 1615, column: 26, scope: !14867)
!14884 = !DILocation(line: 1617, column: 21, scope: !14867)
!14885 = !DILocation(line: 1617, column: 26, scope: !14867)
!14886 = !DILocation(line: 1617, column: 31, scope: !14867)
!14887 = !DILocation(line: 1618, column: 21, scope: !14867)
!14888 = !DILocation(line: 1618, column: 7, scope: !14867)
!14889 = !DILocation(line: 1618, column: 28, scope: !14867)
!14890 = !DILocation(line: 1618, column: 36, scope: !14867)
!14891 = !DILocation(line: 1617, column: 3, scope: !14867)
!14892 = !DILocation(line: 1619, column: 1, scope: !14867)
!14893 = distinct !DISubprogram(name: "var_mem_set", scope: !3, file: !3, line: 1761, type: !14868, scopeLine: 1763, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!14894 = !DILocalVariable(name: "set", arg: 1, scope: !14893, file: !3, line: 1761, type: !2418)
!14895 = !DILocation(line: 1761, column: 28, scope: !14893)
!14896 = !DILocalVariable(name: "loc", arg: 2, scope: !14893, file: !3, line: 1761, type: !1188)
!14897 = !DILocation(line: 1761, column: 37, scope: !14893)
!14898 = !DILocalVariable(name: "initialized", arg: 3, scope: !14893, file: !3, line: 1761, type: !734)
!14899 = !DILocation(line: 1761, column: 63, scope: !14893)
!14900 = !DILocalVariable(name: "set_src", arg: 4, scope: !14893, file: !3, line: 1762, type: !1188)
!14901 = !DILocation(line: 1762, column: 11, scope: !14893)
!14902 = !DILocalVariable(name: "decl", scope: !14893, file: !3, line: 1764, type: !1011)
!14903 = !DILocation(line: 1764, column: 8, scope: !14893)
!14904 = !DILocation(line: 1764, column: 15, scope: !14893)
!14905 = !DILocalVariable(name: "offset", scope: !14893, file: !3, line: 1765, type: !1067)
!14906 = !DILocation(line: 1765, column: 17, scope: !14893)
!14907 = !DILocation(line: 1765, column: 26, scope: !14893)
!14908 = !DILocation(line: 1767, column: 21, scope: !14893)
!14909 = !DILocation(line: 1767, column: 26, scope: !14893)
!14910 = !DILocation(line: 1767, column: 31, scope: !14893)
!14911 = !DILocation(line: 1768, column: 21, scope: !14893)
!14912 = !DILocation(line: 1768, column: 7, scope: !14893)
!14913 = !DILocation(line: 1768, column: 28, scope: !14893)
!14914 = !DILocation(line: 1768, column: 36, scope: !14893)
!14915 = !DILocation(line: 1767, column: 3, scope: !14893)
!14916 = !DILocation(line: 1769, column: 1, scope: !14893)
!14917 = distinct !DISubprogram(name: "val_resolve", scope: !3, file: !3, line: 1931, type: !14918, scopeLine: 1932, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!14918 = !DISubroutineType(types: !14919)
!14919 = !{null, !2418, !1188, !1188, !1188}
!14920 = !DILocalVariable(name: "set", arg: 1, scope: !14917, file: !3, line: 1931, type: !2418)
!14921 = !DILocation(line: 1931, column: 28, scope: !14917)
!14922 = !DILocalVariable(name: "val", arg: 2, scope: !14917, file: !3, line: 1931, type: !1188)
!14923 = !DILocation(line: 1931, column: 37, scope: !14917)
!14924 = !DILocalVariable(name: "loc", arg: 3, scope: !14917, file: !3, line: 1931, type: !1188)
!14925 = !DILocation(line: 1931, column: 46, scope: !14917)
!14926 = !DILocalVariable(name: "insn", arg: 4, scope: !14917, file: !3, line: 1931, type: !1188)
!14927 = !DILocation(line: 1931, column: 55, scope: !14917)
!14928 = !DILocalVariable(name: "dv", scope: !14917, file: !3, line: 1933, type: !2410)
!14929 = !DILocation(line: 1933, column: 17, scope: !14917)
!14930 = !DILocation(line: 1933, column: 37, scope: !14917)
!14931 = !DILocation(line: 1933, column: 22, scope: !14917)
!14932 = !DILocation(line: 1935, column: 7, scope: !14933)
!14933 = distinct !DILexicalBlock(scope: !14917, file: !3, line: 1935, column: 7)
!14934 = !DILocation(line: 1935, column: 17, scope: !14933)
!14935 = !DILocation(line: 1935, column: 21, scope: !14933)
!14936 = !DILocation(line: 1935, column: 32, scope: !14933)
!14937 = !DILocation(line: 1935, column: 7, scope: !14917)
!14938 = !DILocation(line: 1937, column: 11, scope: !14939)
!14939 = distinct !DILexicalBlock(scope: !14940, file: !3, line: 1937, column: 11)
!14940 = distinct !DILexicalBlock(scope: !14933, file: !3, line: 1936, column: 5)
!14941 = !DILocation(line: 1937, column: 11, scope: !14940)
!14942 = !DILocation(line: 1938, column: 11, scope: !14939)
!14943 = !DILocation(line: 1938, column: 30, scope: !14939)
!14944 = !DILocation(line: 1938, column: 2, scope: !14939)
!14945 = !DILocation(line: 1940, column: 11, scope: !14939)
!14946 = !DILocation(line: 1940, column: 2, scope: !14939)
!14947 = !DILocation(line: 1941, column: 25, scope: !14940)
!14948 = !DILocation(line: 1941, column: 36, scope: !14940)
!14949 = !DILocation(line: 1941, column: 7, scope: !14940)
!14950 = !DILocation(line: 1942, column: 25, scope: !14940)
!14951 = !DILocation(line: 1942, column: 7, scope: !14940)
!14952 = !DILocation(line: 1943, column: 25, scope: !14940)
!14953 = !DILocation(line: 1943, column: 36, scope: !14940)
!14954 = !DILocation(line: 1943, column: 7, scope: !14940)
!14955 = !DILocation(line: 1944, column: 20, scope: !14940)
!14956 = !DILocation(line: 1944, column: 7, scope: !14940)
!14957 = !DILocation(line: 1945, column: 5, scope: !14940)
!14958 = !DILocation(line: 1947, column: 14, scope: !14917)
!14959 = !DILocation(line: 1947, column: 19, scope: !14917)
!14960 = !DILocation(line: 1947, column: 3, scope: !14917)
!14961 = !DILocation(line: 1949, column: 7, scope: !14962)
!14962 = distinct !DILexicalBlock(scope: !14917, file: !3, line: 1949, column: 7)
!14963 = !DILocation(line: 1949, column: 7, scope: !14917)
!14964 = !DILocalVariable(name: "node", scope: !14965, file: !3, line: 1951, type: !2403)
!14965 = distinct !DILexicalBlock(scope: !14962, file: !3, line: 1950, column: 5)
!14966 = !DILocation(line: 1951, column: 13, scope: !14965)
!14967 = !DILocalVariable(name: "found", scope: !14965, file: !3, line: 1951, type: !2403)
!14968 = !DILocation(line: 1951, column: 19, scope: !14965)
!14969 = !DILocation(line: 1953, column: 19, scope: !14970)
!14970 = distinct !DILexicalBlock(scope: !14965, file: !3, line: 1953, column: 7)
!14971 = !DILocation(line: 1953, column: 24, scope: !14970)
!14972 = !DILocation(line: 1953, column: 29, scope: !14970)
!14973 = !DILocation(line: 1953, column: 17, scope: !14970)
!14974 = !DILocation(line: 1953, column: 12, scope: !14970)
!14975 = !DILocation(line: 1953, column: 43, scope: !14976)
!14976 = distinct !DILexicalBlock(scope: !14970, file: !3, line: 1953, column: 7)
!14977 = !DILocation(line: 1953, column: 7, scope: !14970)
!14978 = !DILocation(line: 1954, column: 21, scope: !14979)
!14979 = distinct !DILexicalBlock(scope: !14976, file: !3, line: 1954, column: 6)
!14980 = !DILocation(line: 1954, column: 27, scope: !14979)
!14981 = !DILocation(line: 1954, column: 6, scope: !14979)
!14982 = !DILocation(line: 1955, column: 6, scope: !14979)
!14983 = !DILocation(line: 1955, column: 9, scope: !14979)
!14984 = !DILocation(line: 1955, column: 46, scope: !14979)
!14985 = !DILocation(line: 1955, column: 43, scope: !14979)
!14986 = !DILocation(line: 1954, column: 6, scope: !14976)
!14987 = !DILocation(line: 1957, column: 14, scope: !14988)
!14988 = distinct !DILexicalBlock(scope: !14979, file: !3, line: 1956, column: 4)
!14989 = !DILocation(line: 1957, column: 12, scope: !14988)
!14990 = !DILocation(line: 1963, column: 25, scope: !14988)
!14991 = !DILocation(line: 1963, column: 43, scope: !14988)
!14992 = !DILocation(line: 1963, column: 49, scope: !14988)
!14993 = !DILocation(line: 1963, column: 30, scope: !14988)
!14994 = !DILocation(line: 1964, column: 26, scope: !14988)
!14995 = !DILocation(line: 1964, column: 11, scope: !14988)
!14996 = !DILocation(line: 1964, column: 32, scope: !14988)
!14997 = !DILocation(line: 1964, column: 38, scope: !14988)
!14998 = !DILocation(line: 1963, column: 6, scope: !14988)
!14999 = !DILocation(line: 1966, column: 25, scope: !14988)
!15000 = !DILocation(line: 1966, column: 30, scope: !14988)
!15001 = !DILocation(line: 1966, column: 35, scope: !14988)
!15002 = !DILocation(line: 1966, column: 41, scope: !14988)
!15003 = !DILocation(line: 1966, column: 45, scope: !14988)
!15004 = !DILocation(line: 1966, column: 51, scope: !14988)
!15005 = !DILocation(line: 1966, column: 6, scope: !14988)
!15006 = !DILocation(line: 1968, column: 4, scope: !14988)
!15007 = !DILocation(line: 1953, column: 56, scope: !14976)
!15008 = !DILocation(line: 1953, column: 62, scope: !14976)
!15009 = !DILocation(line: 1953, column: 54, scope: !14976)
!15010 = !DILocation(line: 1953, column: 7, scope: !14976)
!15011 = distinct !{!15011, !14977, !15012}
!15012 = !DILocation(line: 1968, column: 4, scope: !14970)
!15013 = !DILocation(line: 1972, column: 12, scope: !15014)
!15014 = distinct !DILexicalBlock(scope: !14965, file: !3, line: 1972, column: 11)
!15015 = !DILocation(line: 1972, column: 11, scope: !14965)
!15016 = !DILocation(line: 1973, column: 20, scope: !15014)
!15017 = !DILocation(line: 1973, column: 25, scope: !15014)
!15018 = !DILocation(line: 1974, column: 21, scope: !15014)
!15019 = !DILocation(line: 1974, column: 6, scope: !15014)
!15020 = !DILocation(line: 1973, column: 2, scope: !15014)
!15021 = !DILocation(line: 1975, column: 5, scope: !14965)
!15022 = !DILocation(line: 1976, column: 12, scope: !15023)
!15023 = distinct !DILexicalBlock(scope: !14962, file: !3, line: 1976, column: 12)
!15024 = !DILocation(line: 1976, column: 12, scope: !14962)
!15025 = !DILocation(line: 1978, column: 23, scope: !15023)
!15026 = !DILocation(line: 1978, column: 28, scope: !15023)
!15027 = !DILocation(line: 1979, column: 24, scope: !15023)
!15028 = !DILocation(line: 1979, column: 9, scope: !15023)
!15029 = !DILocation(line: 1978, column: 5, scope: !15023)
!15030 = !DILocation(line: 1982, column: 24, scope: !15023)
!15031 = !DILocation(line: 1982, column: 29, scope: !15023)
!15032 = !DILocation(line: 1982, column: 49, scope: !15023)
!15033 = !DILocation(line: 1982, column: 34, scope: !15023)
!15034 = !DILocation(line: 1982, column: 5, scope: !15023)
!15035 = !DILocation(line: 1984, column: 1, scope: !14917)
!15036 = distinct !DISubprogram(name: "val_store", scope: !3, file: !3, line: 1816, type: !15037, scopeLine: 1817, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!15037 = !DISubroutineType(types: !15038)
!15038 = !{null, !2418, !1188, !1188, !1188, !1130}
!15039 = !DILocalVariable(name: "set", arg: 1, scope: !15036, file: !3, line: 1816, type: !2418)
!15040 = !DILocation(line: 1816, column: 26, scope: !15036)
!15041 = !DILocalVariable(name: "val", arg: 2, scope: !15036, file: !3, line: 1816, type: !1188)
!15042 = !DILocation(line: 1816, column: 35, scope: !15036)
!15043 = !DILocalVariable(name: "loc", arg: 3, scope: !15036, file: !3, line: 1816, type: !1188)
!15044 = !DILocation(line: 1816, column: 44, scope: !15036)
!15045 = !DILocalVariable(name: "insn", arg: 4, scope: !15036, file: !3, line: 1816, type: !1188)
!15046 = !DILocation(line: 1816, column: 53, scope: !15036)
!15047 = !DILocalVariable(name: "modified", arg: 5, scope: !15036, file: !3, line: 1816, type: !1130)
!15048 = !DILocation(line: 1816, column: 64, scope: !15036)
!15049 = !DILocalVariable(name: "v", scope: !15036, file: !3, line: 1818, type: !1257)
!15050 = !DILocation(line: 1818, column: 15, scope: !15036)
!15051 = !DILocation(line: 1818, column: 19, scope: !15036)
!15052 = !DILocation(line: 1820, column: 3, scope: !15036)
!15053 = !DILocation(line: 1822, column: 7, scope: !15054)
!15054 = distinct !DILexicalBlock(scope: !15036, file: !3, line: 1822, column: 7)
!15055 = !DILocation(line: 1822, column: 7, scope: !15036)
!15056 = !DILocation(line: 1824, column: 16, scope: !15057)
!15057 = distinct !DILexicalBlock(scope: !15054, file: !3, line: 1823, column: 5)
!15058 = !DILocation(line: 1824, column: 35, scope: !15057)
!15059 = !DILocation(line: 1824, column: 7, scope: !15057)
!15060 = !DILocation(line: 1825, column: 25, scope: !15057)
!15061 = !DILocation(line: 1825, column: 36, scope: !15057)
!15062 = !DILocation(line: 1825, column: 7, scope: !15057)
!15063 = !DILocation(line: 1826, column: 16, scope: !15057)
!15064 = !DILocation(line: 1826, column: 7, scope: !15057)
!15065 = !DILocation(line: 1827, column: 25, scope: !15057)
!15066 = !DILocation(line: 1827, column: 36, scope: !15057)
!15067 = !DILocation(line: 1827, column: 7, scope: !15057)
!15068 = !DILocation(line: 1828, column: 11, scope: !15069)
!15069 = distinct !DILexicalBlock(scope: !15057, file: !3, line: 1828, column: 11)
!15070 = !DILocation(line: 1828, column: 14, scope: !15069)
!15071 = !DILocation(line: 1828, column: 11, scope: !15057)
!15072 = !DILocalVariable(name: "l", scope: !15073, file: !3, line: 1830, type: !1245)
!15073 = distinct !DILexicalBlock(scope: !15069, file: !3, line: 1829, column: 2)
!15074 = !DILocation(line: 1830, column: 25, scope: !15073)
!15075 = !DILocation(line: 1831, column: 13, scope: !15076)
!15076 = distinct !DILexicalBlock(scope: !15073, file: !3, line: 1831, column: 4)
!15077 = !DILocation(line: 1831, column: 16, scope: !15076)
!15078 = !DILocation(line: 1831, column: 11, scope: !15076)
!15079 = !DILocation(line: 1831, column: 9, scope: !15076)
!15080 = !DILocation(line: 1831, column: 22, scope: !15081)
!15081 = distinct !DILexicalBlock(scope: !15076, file: !3, line: 1831, column: 4)
!15082 = !DILocation(line: 1831, column: 4, scope: !15076)
!15083 = !DILocation(line: 1833, column: 17, scope: !15084)
!15084 = distinct !DILexicalBlock(scope: !15081, file: !3, line: 1832, column: 6)
!15085 = !DILocation(line: 1833, column: 38, scope: !15084)
!15086 = !DILocation(line: 1833, column: 8, scope: !15084)
!15087 = !DILocation(line: 1834, column: 26, scope: !15084)
!15088 = !DILocation(line: 1834, column: 37, scope: !15084)
!15089 = !DILocation(line: 1834, column: 40, scope: !15084)
!15090 = !DILocation(line: 1834, column: 8, scope: !15084)
!15091 = !DILocation(line: 1835, column: 6, scope: !15084)
!15092 = !DILocation(line: 1831, column: 29, scope: !15081)
!15093 = !DILocation(line: 1831, column: 32, scope: !15081)
!15094 = !DILocation(line: 1831, column: 27, scope: !15081)
!15095 = !DILocation(line: 1831, column: 4, scope: !15081)
!15096 = distinct !{!15096, !15082, !15097}
!15097 = !DILocation(line: 1835, column: 6, scope: !15076)
!15098 = !DILocation(line: 1836, column: 2, scope: !15073)
!15099 = !DILocation(line: 1837, column: 16, scope: !15057)
!15100 = !DILocation(line: 1837, column: 7, scope: !15057)
!15101 = !DILocation(line: 1838, column: 5, scope: !15057)
!15102 = !DILocation(line: 1840, column: 7, scope: !15103)
!15103 = distinct !DILexicalBlock(scope: !15036, file: !3, line: 1840, column: 7)
!15104 = !DILocation(line: 1840, column: 7, scope: !15036)
!15105 = !DILocation(line: 1842, column: 11, scope: !15106)
!15106 = distinct !DILexicalBlock(scope: !15107, file: !3, line: 1842, column: 11)
!15107 = distinct !DILexicalBlock(scope: !15103, file: !3, line: 1841, column: 5)
!15108 = !DILocation(line: 1842, column: 11, scope: !15107)
!15109 = !DILocation(line: 1843, column: 20, scope: !15106)
!15110 = !DILocation(line: 1843, column: 25, scope: !15106)
!15111 = !DILocation(line: 1843, column: 2, scope: !15106)
!15112 = !DILocation(line: 1844, column: 25, scope: !15107)
!15113 = !DILocation(line: 1844, column: 30, scope: !15107)
!15114 = !DILocation(line: 1845, column: 19, scope: !15107)
!15115 = !DILocation(line: 1845, column: 4, scope: !15107)
!15116 = !DILocation(line: 1844, column: 7, scope: !15107)
!15117 = !DILocation(line: 1846, column: 5, scope: !15107)
!15118 = !DILocation(line: 1847, column: 12, scope: !15119)
!15119 = distinct !DILexicalBlock(scope: !15103, file: !3, line: 1847, column: 12)
!15120 = !DILocation(line: 1847, column: 12, scope: !15103)
!15121 = !DILocation(line: 1848, column: 23, scope: !15119)
!15122 = !DILocation(line: 1848, column: 28, scope: !15119)
!15123 = !DILocation(line: 1849, column: 24, scope: !15119)
!15124 = !DILocation(line: 1849, column: 9, scope: !15119)
!15125 = !DILocation(line: 1848, column: 5, scope: !15119)
!15126 = !DILocation(line: 1851, column: 24, scope: !15119)
!15127 = !DILocation(line: 1851, column: 29, scope: !15119)
!15128 = !DILocation(line: 1851, column: 49, scope: !15119)
!15129 = !DILocation(line: 1851, column: 34, scope: !15119)
!15130 = !DILocation(line: 1851, column: 5, scope: !15119)
!15131 = !DILocation(line: 1853, column: 1, scope: !15036)
!15132 = distinct !DISubprogram(name: "var_reg_delete", scope: !3, file: !3, line: 1697, type: !15133, scopeLine: 1698, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!15133 = !DISubroutineType(types: !15134)
!15134 = !{null, !2418, !1188, !1130}
!15135 = !DILocalVariable(name: "set", arg: 1, scope: !15132, file: !3, line: 1697, type: !2418)
!15136 = !DILocation(line: 1697, column: 31, scope: !15132)
!15137 = !DILocalVariable(name: "loc", arg: 2, scope: !15132, file: !3, line: 1697, type: !1188)
!15138 = !DILocation(line: 1697, column: 40, scope: !15132)
!15139 = !DILocalVariable(name: "clobber", arg: 3, scope: !15132, file: !3, line: 1697, type: !1130)
!15140 = !DILocation(line: 1697, column: 50, scope: !15132)
!15141 = !DILocalVariable(name: "nextp", scope: !15132, file: !3, line: 1699, type: !5173)
!15142 = !DILocation(line: 1699, column: 10, scope: !15132)
!15143 = !DILocation(line: 1699, column: 19, scope: !15132)
!15144 = !DILocation(line: 1699, column: 24, scope: !15132)
!15145 = !DILocation(line: 1699, column: 29, scope: !15132)
!15146 = !DILocalVariable(name: "node", scope: !15132, file: !3, line: 1700, type: !2403)
!15147 = !DILocation(line: 1700, column: 9, scope: !15132)
!15148 = !DILocalVariable(name: "next", scope: !15132, file: !3, line: 1700, type: !2403)
!15149 = !DILocation(line: 1700, column: 15, scope: !15132)
!15150 = !DILocation(line: 1702, column: 7, scope: !15151)
!15151 = distinct !DILexicalBlock(scope: !15132, file: !3, line: 1702, column: 7)
!15152 = !DILocation(line: 1702, column: 7, scope: !15132)
!15153 = !DILocalVariable(name: "decl", scope: !15154, file: !3, line: 1704, type: !1011)
!15154 = distinct !DILexicalBlock(scope: !15151, file: !3, line: 1703, column: 5)
!15155 = !DILocation(line: 1704, column: 12, scope: !15154)
!15156 = !DILocation(line: 1704, column: 19, scope: !15154)
!15157 = !DILocalVariable(name: "offset", scope: !15154, file: !3, line: 1705, type: !1067)
!15158 = !DILocation(line: 1705, column: 21, scope: !15154)
!15159 = !DILocation(line: 1705, column: 30, scope: !15154)
!15160 = !DILocation(line: 1707, column: 30, scope: !15154)
!15161 = !DILocation(line: 1707, column: 14, scope: !15154)
!15162 = !DILocation(line: 1707, column: 12, scope: !15154)
!15163 = !DILocation(line: 1709, column: 30, scope: !15154)
!15164 = !DILocation(line: 1709, column: 55, scope: !15154)
!15165 = !DILocation(line: 1709, column: 41, scope: !15154)
!15166 = !DILocation(line: 1709, column: 62, scope: !15154)
!15167 = !DILocation(line: 1709, column: 7, scope: !15154)
!15168 = !DILocation(line: 1710, column: 5, scope: !15154)
!15169 = !DILocation(line: 1712, column: 16, scope: !15170)
!15170 = distinct !DILexicalBlock(scope: !15132, file: !3, line: 1712, column: 3)
!15171 = !DILocation(line: 1712, column: 15, scope: !15170)
!15172 = !DILocation(line: 1712, column: 13, scope: !15170)
!15173 = !DILocation(line: 1712, column: 8, scope: !15170)
!15174 = !DILocation(line: 1712, column: 23, scope: !15175)
!15175 = distinct !DILexicalBlock(scope: !15170, file: !3, line: 1712, column: 3)
!15176 = !DILocation(line: 1712, column: 3, scope: !15170)
!15177 = !DILocation(line: 1714, column: 14, scope: !15178)
!15178 = distinct !DILexicalBlock(scope: !15175, file: !3, line: 1713, column: 5)
!15179 = !DILocation(line: 1714, column: 20, scope: !15178)
!15180 = !DILocation(line: 1714, column: 12, scope: !15178)
!15181 = !DILocation(line: 1715, column: 11, scope: !15182)
!15182 = distinct !DILexicalBlock(scope: !15178, file: !3, line: 1715, column: 11)
!15183 = !DILocation(line: 1715, column: 19, scope: !15182)
!15184 = !DILocation(line: 1715, column: 37, scope: !15182)
!15185 = !DILocation(line: 1715, column: 43, scope: !15182)
!15186 = !DILocation(line: 1715, column: 23, scope: !15182)
!15187 = !DILocation(line: 1715, column: 11, scope: !15178)
!15188 = !DILocation(line: 1717, column: 26, scope: !15189)
!15189 = distinct !DILexicalBlock(scope: !15182, file: !3, line: 1716, column: 2)
!15190 = !DILocation(line: 1717, column: 31, scope: !15189)
!15191 = !DILocation(line: 1717, column: 37, scope: !15189)
!15192 = !DILocation(line: 1717, column: 42, scope: !15189)
!15193 = !DILocation(line: 1717, column: 48, scope: !15189)
!15194 = !DILocation(line: 1717, column: 52, scope: !15189)
!15195 = !DILocation(line: 1717, column: 58, scope: !15189)
!15196 = !DILocation(line: 1717, column: 4, scope: !15189)
!15197 = !DILocation(line: 1718, column: 15, scope: !15189)
!15198 = !DILocation(line: 1718, column: 27, scope: !15189)
!15199 = !DILocation(line: 1718, column: 4, scope: !15189)
!15200 = !DILocation(line: 1719, column: 13, scope: !15189)
!15201 = !DILocation(line: 1719, column: 5, scope: !15189)
!15202 = !DILocation(line: 1719, column: 11, scope: !15189)
!15203 = !DILocation(line: 1720, column: 2, scope: !15189)
!15204 = !DILocation(line: 1722, column: 11, scope: !15182)
!15205 = !DILocation(line: 1722, column: 17, scope: !15182)
!15206 = !DILocation(line: 1722, column: 8, scope: !15182)
!15207 = !DILocation(line: 1723, column: 5, scope: !15178)
!15208 = !DILocation(line: 1712, column: 36, scope: !15175)
!15209 = !DILocation(line: 1712, column: 34, scope: !15175)
!15210 = !DILocation(line: 1712, column: 3, scope: !15175)
!15211 = distinct !{!15211, !15176, !15212}
!15212 = !DILocation(line: 1723, column: 5, scope: !15170)
!15213 = !DILocation(line: 1724, column: 1, scope: !15132)
!15214 = distinct !DISubprogram(name: "var_mem_delete", scope: !3, file: !3, line: 1800, type: !15133, scopeLine: 1801, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!15215 = !DILocalVariable(name: "set", arg: 1, scope: !15214, file: !3, line: 1800, type: !2418)
!15216 = !DILocation(line: 1800, column: 31, scope: !15214)
!15217 = !DILocalVariable(name: "loc", arg: 2, scope: !15214, file: !3, line: 1800, type: !1188)
!15218 = !DILocation(line: 1800, column: 40, scope: !15214)
!15219 = !DILocalVariable(name: "clobber", arg: 3, scope: !15214, file: !3, line: 1800, type: !1130)
!15220 = !DILocation(line: 1800, column: 50, scope: !15214)
!15221 = !DILocalVariable(name: "decl", scope: !15214, file: !3, line: 1802, type: !1011)
!15222 = !DILocation(line: 1802, column: 8, scope: !15214)
!15223 = !DILocation(line: 1802, column: 15, scope: !15214)
!15224 = !DILocalVariable(name: "offset", scope: !15214, file: !3, line: 1803, type: !1067)
!15225 = !DILocation(line: 1803, column: 17, scope: !15214)
!15226 = !DILocation(line: 1803, column: 26, scope: !15214)
!15227 = !DILocation(line: 1805, column: 26, scope: !15214)
!15228 = !DILocation(line: 1805, column: 10, scope: !15214)
!15229 = !DILocation(line: 1805, column: 8, scope: !15214)
!15230 = !DILocation(line: 1806, column: 7, scope: !15231)
!15231 = distinct !DILexicalBlock(scope: !15214, file: !3, line: 1806, column: 7)
!15232 = !DILocation(line: 1806, column: 7, scope: !15214)
!15233 = !DILocation(line: 1807, column: 28, scope: !15231)
!15234 = !DILocation(line: 1807, column: 53, scope: !15231)
!15235 = !DILocation(line: 1807, column: 39, scope: !15231)
!15236 = !DILocation(line: 1807, column: 60, scope: !15231)
!15237 = !DILocation(line: 1807, column: 5, scope: !15231)
!15238 = !DILocation(line: 1808, column: 25, scope: !15214)
!15239 = !DILocation(line: 1808, column: 30, scope: !15214)
!15240 = !DILocation(line: 1808, column: 49, scope: !15214)
!15241 = !DILocation(line: 1808, column: 35, scope: !15214)
!15242 = !DILocation(line: 1808, column: 56, scope: !15214)
!15243 = !DILocation(line: 1808, column: 3, scope: !15214)
!15244 = !DILocation(line: 1809, column: 1, scope: !15214)
!15245 = distinct !DISubprogram(name: "find_src_status", scope: !3, file: !3, line: 5573, type: !15246, scopeLine: 5574, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!15246 = !DISubroutineType(types: !15247)
!15247 = !{!734, !2418, !1188}
!15248 = !DILocalVariable(name: "in", arg: 1, scope: !15245, file: !3, line: 5573, type: !2418)
!15249 = !DILocation(line: 5573, column: 32, scope: !15245)
!15250 = !DILocalVariable(name: "src", arg: 2, scope: !15245, file: !3, line: 5573, type: !1188)
!15251 = !DILocation(line: 5573, column: 40, scope: !15245)
!15252 = !DILocalVariable(name: "decl", scope: !15245, file: !3, line: 5575, type: !1011)
!15253 = !DILocation(line: 5575, column: 8, scope: !15245)
!15254 = !DILocalVariable(name: "status", scope: !15245, file: !3, line: 5576, type: !734)
!15255 = !DILocation(line: 5576, column: 24, scope: !15245)
!15256 = !DILocation(line: 5578, column: 9, scope: !15257)
!15257 = distinct !DILexicalBlock(scope: !15245, file: !3, line: 5578, column: 7)
!15258 = !DILocation(line: 5578, column: 7, scope: !15245)
!15259 = !DILocation(line: 5579, column: 12, scope: !15257)
!15260 = !DILocation(line: 5579, column: 5, scope: !15257)
!15261 = !DILocation(line: 5581, column: 7, scope: !15262)
!15262 = distinct !DILexicalBlock(scope: !15245, file: !3, line: 5581, column: 7)
!15263 = !DILocation(line: 5581, column: 11, scope: !15262)
!15264 = !DILocation(line: 5581, column: 14, scope: !15262)
!15265 = !DILocation(line: 5581, column: 7, scope: !15245)
!15266 = !DILocation(line: 5582, column: 28, scope: !15262)
!15267 = !DILocation(line: 5582, column: 12, scope: !15262)
!15268 = !DILocation(line: 5582, column: 10, scope: !15262)
!15269 = !DILocation(line: 5582, column: 5, scope: !15262)
!15270 = !DILocation(line: 5583, column: 12, scope: !15271)
!15271 = distinct !DILexicalBlock(scope: !15262, file: !3, line: 5583, column: 12)
!15272 = !DILocation(line: 5583, column: 16, scope: !15271)
!15273 = !DILocation(line: 5583, column: 19, scope: !15271)
!15274 = !DILocation(line: 5583, column: 12, scope: !15262)
!15275 = !DILocation(line: 5584, column: 28, scope: !15271)
!15276 = !DILocation(line: 5584, column: 12, scope: !15271)
!15277 = !DILocation(line: 5584, column: 10, scope: !15271)
!15278 = !DILocation(line: 5584, column: 5, scope: !15271)
!15279 = !DILocation(line: 5586, column: 7, scope: !15280)
!15280 = distinct !DILexicalBlock(scope: !15245, file: !3, line: 5586, column: 7)
!15281 = !DILocation(line: 5586, column: 11, scope: !15280)
!15282 = !DILocation(line: 5586, column: 14, scope: !15280)
!15283 = !DILocation(line: 5586, column: 7, scope: !15245)
!15284 = !DILocation(line: 5587, column: 30, scope: !15280)
!15285 = !DILocation(line: 5587, column: 34, scope: !15280)
!15286 = !DILocation(line: 5587, column: 53, scope: !15280)
!15287 = !DILocation(line: 5587, column: 39, scope: !15280)
!15288 = !DILocation(line: 5587, column: 14, scope: !15280)
!15289 = !DILocation(line: 5587, column: 12, scope: !15280)
!15290 = !DILocation(line: 5587, column: 5, scope: !15280)
!15291 = !DILocation(line: 5589, column: 10, scope: !15245)
!15292 = !DILocation(line: 5589, column: 3, scope: !15245)
!15293 = distinct !DISubprogram(name: "find_src_set_src", scope: !3, file: !3, line: 5597, type: !15294, scopeLine: 5598, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!15294 = !DISubroutineType(types: !15295)
!15295 = !{!1188, !2418, !1188}
!15296 = !DILocalVariable(name: "set", arg: 1, scope: !15293, file: !3, line: 5597, type: !2418)
!15297 = !DILocation(line: 5597, column: 33, scope: !15293)
!15298 = !DILocalVariable(name: "src", arg: 2, scope: !15293, file: !3, line: 5597, type: !1188)
!15299 = !DILocation(line: 5597, column: 42, scope: !15293)
!15300 = !DILocalVariable(name: "decl", scope: !15293, file: !3, line: 5599, type: !1011)
!15301 = !DILocation(line: 5599, column: 8, scope: !15293)
!15302 = !DILocalVariable(name: "set_src", scope: !15293, file: !3, line: 5600, type: !1188)
!15303 = !DILocation(line: 5600, column: 7, scope: !15293)
!15304 = !DILocalVariable(name: "var", scope: !15293, file: !3, line: 5601, type: !2447)
!15305 = !DILocation(line: 5601, column: 12, scope: !15293)
!15306 = !DILocalVariable(name: "nextp", scope: !15293, file: !3, line: 5602, type: !2437)
!15307 = !DILocation(line: 5602, column: 18, scope: !15293)
!15308 = !DILocalVariable(name: "i", scope: !15293, file: !3, line: 5603, type: !1010)
!15309 = !DILocation(line: 5603, column: 7, scope: !15293)
!15310 = !DILocalVariable(name: "found", scope: !15293, file: !3, line: 5604, type: !1130)
!15311 = !DILocation(line: 5604, column: 8, scope: !15293)
!15312 = !DILocation(line: 5606, column: 7, scope: !15313)
!15313 = distinct !DILexicalBlock(scope: !15293, file: !3, line: 5606, column: 7)
!15314 = !DILocation(line: 5606, column: 11, scope: !15313)
!15315 = !DILocation(line: 5606, column: 14, scope: !15313)
!15316 = !DILocation(line: 5606, column: 7, scope: !15293)
!15317 = !DILocation(line: 5607, column: 28, scope: !15313)
!15318 = !DILocation(line: 5607, column: 12, scope: !15313)
!15319 = !DILocation(line: 5607, column: 10, scope: !15313)
!15320 = !DILocation(line: 5607, column: 5, scope: !15313)
!15321 = !DILocation(line: 5608, column: 12, scope: !15322)
!15322 = distinct !DILexicalBlock(scope: !15313, file: !3, line: 5608, column: 12)
!15323 = !DILocation(line: 5608, column: 16, scope: !15322)
!15324 = !DILocation(line: 5608, column: 19, scope: !15322)
!15325 = !DILocation(line: 5608, column: 12, scope: !15313)
!15326 = !DILocation(line: 5609, column: 28, scope: !15322)
!15327 = !DILocation(line: 5609, column: 12, scope: !15322)
!15328 = !DILocation(line: 5609, column: 10, scope: !15322)
!15329 = !DILocation(line: 5609, column: 5, scope: !15322)
!15330 = !DILocation(line: 5611, column: 7, scope: !15331)
!15331 = distinct !DILexicalBlock(scope: !15293, file: !3, line: 5611, column: 7)
!15332 = !DILocation(line: 5611, column: 11, scope: !15331)
!15333 = !DILocation(line: 5611, column: 14, scope: !15331)
!15334 = !DILocation(line: 5611, column: 7, scope: !15293)
!15335 = !DILocalVariable(name: "dv", scope: !15336, file: !3, line: 5613, type: !2410)
!15336 = distinct !DILexicalBlock(scope: !15331, file: !3, line: 5612, column: 5)
!15337 = !DILocation(line: 5613, column: 21, scope: !15336)
!15338 = !DILocation(line: 5613, column: 40, scope: !15336)
!15339 = !DILocation(line: 5613, column: 26, scope: !15336)
!15340 = !DILocation(line: 5615, column: 31, scope: !15336)
!15341 = !DILocation(line: 5615, column: 36, scope: !15336)
!15342 = !DILocation(line: 5615, column: 42, scope: !15336)
!15343 = !DILocation(line: 5615, column: 13, scope: !15336)
!15344 = !DILocation(line: 5615, column: 11, scope: !15336)
!15345 = !DILocation(line: 5616, column: 11, scope: !15346)
!15346 = distinct !DILexicalBlock(scope: !15336, file: !3, line: 5616, column: 11)
!15347 = !DILocation(line: 5616, column: 11, scope: !15336)
!15348 = !DILocation(line: 5618, column: 10, scope: !15349)
!15349 = distinct !DILexicalBlock(scope: !15346, file: !3, line: 5617, column: 2)
!15350 = !DILocation(line: 5619, column: 11, scope: !15351)
!15351 = distinct !DILexicalBlock(scope: !15349, file: !3, line: 5619, column: 4)
!15352 = !DILocation(line: 5619, column: 9, scope: !15351)
!15353 = !DILocation(line: 5619, column: 16, scope: !15354)
!15354 = distinct !DILexicalBlock(scope: !15351, file: !3, line: 5619, column: 4)
!15355 = !DILocation(line: 5619, column: 20, scope: !15354)
!15356 = !DILocation(line: 5619, column: 25, scope: !15354)
!15357 = !DILocation(line: 5619, column: 18, scope: !15354)
!15358 = !DILocation(line: 5619, column: 37, scope: !15354)
!15359 = !DILocation(line: 5619, column: 41, scope: !15354)
!15360 = !DILocation(line: 5619, column: 40, scope: !15354)
!15361 = !DILocation(line: 0, scope: !15354)
!15362 = !DILocation(line: 5619, column: 4, scope: !15351)
!15363 = !DILocation(line: 5620, column: 19, scope: !15364)
!15364 = distinct !DILexicalBlock(scope: !15354, file: !3, line: 5620, column: 6)
!15365 = !DILocation(line: 5620, column: 24, scope: !15364)
!15366 = !DILocation(line: 5620, column: 33, scope: !15364)
!15367 = !DILocation(line: 5620, column: 36, scope: !15364)
!15368 = !DILocation(line: 5620, column: 17, scope: !15364)
!15369 = !DILocation(line: 5620, column: 11, scope: !15364)
!15370 = !DILocation(line: 5620, column: 47, scope: !15371)
!15371 = distinct !DILexicalBlock(scope: !15364, file: !3, line: 5620, column: 6)
!15372 = !DILocation(line: 5620, column: 53, scope: !15371)
!15373 = !DILocation(line: 5620, column: 57, scope: !15371)
!15374 = !DILocation(line: 5620, column: 56, scope: !15371)
!15375 = !DILocation(line: 0, scope: !15371)
!15376 = !DILocation(line: 5620, column: 6, scope: !15364)
!15377 = !DILocation(line: 5622, column: 25, scope: !15378)
!15378 = distinct !DILexicalBlock(scope: !15371, file: !3, line: 5622, column: 12)
!15379 = !DILocation(line: 5622, column: 32, scope: !15378)
!15380 = !DILocation(line: 5622, column: 37, scope: !15378)
!15381 = !DILocation(line: 5622, column: 12, scope: !15378)
!15382 = !DILocation(line: 5622, column: 12, scope: !15371)
!15383 = !DILocation(line: 5624, column: 15, scope: !15384)
!15384 = distinct !DILexicalBlock(scope: !15378, file: !3, line: 5623, column: 3)
!15385 = !DILocation(line: 5624, column: 22, scope: !15384)
!15386 = !DILocation(line: 5624, column: 13, scope: !15384)
!15387 = !DILocation(line: 5625, column: 11, scope: !15384)
!15388 = !DILocation(line: 5626, column: 3, scope: !15384)
!15389 = !DILocation(line: 5622, column: 40, scope: !15378)
!15390 = !DILocation(line: 5621, column: 12, scope: !15371)
!15391 = !DILocation(line: 5621, column: 19, scope: !15371)
!15392 = !DILocation(line: 5621, column: 10, scope: !15371)
!15393 = !DILocation(line: 5620, column: 6, scope: !15371)
!15394 = distinct !{!15394, !15376, !15395}
!15395 = !DILocation(line: 5626, column: 3, scope: !15364)
!15396 = !DILocation(line: 5619, column: 49, scope: !15354)
!15397 = !DILocation(line: 5619, column: 4, scope: !15354)
!15398 = distinct !{!15398, !15362, !15399}
!15399 = !DILocation(line: 5626, column: 3, scope: !15351)
!15400 = !DILocation(line: 5628, column: 2, scope: !15349)
!15401 = !DILocation(line: 5629, column: 5, scope: !15336)
!15402 = !DILocation(line: 5631, column: 10, scope: !15293)
!15403 = !DILocation(line: 5631, column: 3, scope: !15293)
!15404 = distinct !DISubprogram(name: "var_reg_delete_and_set", scope: !3, file: !3, line: 1657, type: !15405, scopeLine: 1659, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!15405 = !DISubroutineType(types: !15406)
!15406 = !{null, !2418, !1188, !1130, !734, !1188}
!15407 = !DILocalVariable(name: "set", arg: 1, scope: !15404, file: !3, line: 1657, type: !2418)
!15408 = !DILocation(line: 1657, column: 39, scope: !15404)
!15409 = !DILocalVariable(name: "loc", arg: 2, scope: !15404, file: !3, line: 1657, type: !1188)
!15410 = !DILocation(line: 1657, column: 48, scope: !15404)
!15411 = !DILocalVariable(name: "modify", arg: 3, scope: !15404, file: !3, line: 1657, type: !1130)
!15412 = !DILocation(line: 1657, column: 58, scope: !15404)
!15413 = !DILocalVariable(name: "initialized", arg: 4, scope: !15404, file: !3, line: 1658, type: !734)
!15414 = !DILocation(line: 1658, column: 25, scope: !15404)
!15415 = !DILocalVariable(name: "set_src", arg: 5, scope: !15404, file: !3, line: 1658, type: !1188)
!15416 = !DILocation(line: 1658, column: 42, scope: !15404)
!15417 = !DILocalVariable(name: "decl", scope: !15404, file: !3, line: 1660, type: !1011)
!15418 = !DILocation(line: 1660, column: 8, scope: !15404)
!15419 = !DILocation(line: 1660, column: 15, scope: !15404)
!15420 = !DILocalVariable(name: "offset", scope: !15404, file: !3, line: 1661, type: !1067)
!15421 = !DILocation(line: 1661, column: 17, scope: !15404)
!15422 = !DILocation(line: 1661, column: 26, scope: !15404)
!15423 = !DILocalVariable(name: "node", scope: !15404, file: !3, line: 1662, type: !2403)
!15424 = !DILocation(line: 1662, column: 9, scope: !15404)
!15425 = !DILocalVariable(name: "next", scope: !15404, file: !3, line: 1662, type: !2403)
!15426 = !DILocation(line: 1662, column: 15, scope: !15404)
!15427 = !DILocalVariable(name: "nextp", scope: !15404, file: !3, line: 1663, type: !5173)
!15428 = !DILocation(line: 1663, column: 10, scope: !15404)
!15429 = !DILocation(line: 1665, column: 26, scope: !15404)
!15430 = !DILocation(line: 1665, column: 10, scope: !15404)
!15431 = !DILocation(line: 1665, column: 8, scope: !15404)
!15432 = !DILocation(line: 1667, column: 7, scope: !15433)
!15433 = distinct !DILexicalBlock(scope: !15404, file: !3, line: 1667, column: 7)
!15434 = !DILocation(line: 1667, column: 19, scope: !15433)
!15435 = !DILocation(line: 1667, column: 7, scope: !15404)
!15436 = !DILocation(line: 1668, column: 35, scope: !15433)
!15437 = !DILocation(line: 1668, column: 40, scope: !15433)
!15438 = !DILocation(line: 1668, column: 59, scope: !15433)
!15439 = !DILocation(line: 1668, column: 45, scope: !15433)
!15440 = !DILocation(line: 1668, column: 19, scope: !15433)
!15441 = !DILocation(line: 1668, column: 17, scope: !15433)
!15442 = !DILocation(line: 1668, column: 5, scope: !15433)
!15443 = !DILocation(line: 1670, column: 12, scope: !15404)
!15444 = !DILocation(line: 1670, column: 17, scope: !15404)
!15445 = !DILocation(line: 1670, column: 22, scope: !15404)
!15446 = !DILocation(line: 1670, column: 9, scope: !15404)
!15447 = !DILocation(line: 1671, column: 16, scope: !15448)
!15448 = distinct !DILexicalBlock(scope: !15404, file: !3, line: 1671, column: 3)
!15449 = !DILocation(line: 1671, column: 15, scope: !15448)
!15450 = !DILocation(line: 1671, column: 13, scope: !15448)
!15451 = !DILocation(line: 1671, column: 8, scope: !15448)
!15452 = !DILocation(line: 1671, column: 23, scope: !15453)
!15453 = distinct !DILexicalBlock(scope: !15448, file: !3, line: 1671, column: 3)
!15454 = !DILocation(line: 1671, column: 3, scope: !15448)
!15455 = !DILocation(line: 1673, column: 14, scope: !15456)
!15456 = distinct !DILexicalBlock(scope: !15453, file: !3, line: 1672, column: 5)
!15457 = !DILocation(line: 1673, column: 20, scope: !15456)
!15458 = !DILocation(line: 1673, column: 12, scope: !15456)
!15459 = !DILocation(line: 1674, column: 25, scope: !15460)
!15460 = distinct !DILexicalBlock(scope: !15456, file: !3, line: 1674, column: 11)
!15461 = !DILocation(line: 1674, column: 31, scope: !15460)
!15462 = !DILocation(line: 1674, column: 11, scope: !15460)
!15463 = !DILocation(line: 1674, column: 38, scope: !15460)
!15464 = !DILocation(line: 1674, column: 35, scope: !15460)
!15465 = !DILocation(line: 1674, column: 43, scope: !15460)
!15466 = !DILocation(line: 1674, column: 46, scope: !15460)
!15467 = !DILocation(line: 1674, column: 52, scope: !15460)
!15468 = !DILocation(line: 1674, column: 62, scope: !15460)
!15469 = !DILocation(line: 1674, column: 59, scope: !15460)
!15470 = !DILocation(line: 1674, column: 11, scope: !15456)
!15471 = !DILocation(line: 1676, column: 26, scope: !15472)
!15472 = distinct !DILexicalBlock(scope: !15460, file: !3, line: 1675, column: 2)
!15473 = !DILocation(line: 1676, column: 31, scope: !15472)
!15474 = !DILocation(line: 1676, column: 37, scope: !15472)
!15475 = !DILocation(line: 1676, column: 42, scope: !15472)
!15476 = !DILocation(line: 1676, column: 48, scope: !15472)
!15477 = !DILocation(line: 1676, column: 52, scope: !15472)
!15478 = !DILocation(line: 1676, column: 58, scope: !15472)
!15479 = !DILocation(line: 1676, column: 4, scope: !15472)
!15480 = !DILocation(line: 1677, column: 15, scope: !15472)
!15481 = !DILocation(line: 1677, column: 27, scope: !15472)
!15482 = !DILocation(line: 1677, column: 4, scope: !15472)
!15483 = !DILocation(line: 1678, column: 13, scope: !15472)
!15484 = !DILocation(line: 1678, column: 5, scope: !15472)
!15485 = !DILocation(line: 1678, column: 11, scope: !15472)
!15486 = !DILocation(line: 1679, column: 2, scope: !15472)
!15487 = !DILocation(line: 1682, column: 16, scope: !15488)
!15488 = distinct !DILexicalBlock(scope: !15460, file: !3, line: 1681, column: 2)
!15489 = !DILocation(line: 1682, column: 4, scope: !15488)
!15490 = !DILocation(line: 1682, column: 10, scope: !15488)
!15491 = !DILocation(line: 1682, column: 14, scope: !15488)
!15492 = !DILocation(line: 1683, column: 13, scope: !15488)
!15493 = !DILocation(line: 1683, column: 19, scope: !15488)
!15494 = !DILocation(line: 1683, column: 10, scope: !15488)
!15495 = !DILocation(line: 1685, column: 5, scope: !15456)
!15496 = !DILocation(line: 1671, column: 36, scope: !15453)
!15497 = !DILocation(line: 1671, column: 34, scope: !15453)
!15498 = !DILocation(line: 1671, column: 3, scope: !15453)
!15499 = distinct !{!15499, !15454, !15500}
!15500 = !DILocation(line: 1685, column: 5, scope: !15448)
!15501 = !DILocation(line: 1686, column: 7, scope: !15502)
!15502 = distinct !DILexicalBlock(scope: !15404, file: !3, line: 1686, column: 7)
!15503 = !DILocation(line: 1686, column: 7, scope: !15404)
!15504 = !DILocation(line: 1687, column: 28, scope: !15502)
!15505 = !DILocation(line: 1687, column: 33, scope: !15502)
!15506 = !DILocation(line: 1687, column: 52, scope: !15502)
!15507 = !DILocation(line: 1687, column: 38, scope: !15502)
!15508 = !DILocation(line: 1687, column: 59, scope: !15502)
!15509 = !DILocation(line: 1687, column: 67, scope: !15502)
!15510 = !DILocation(line: 1687, column: 5, scope: !15502)
!15511 = !DILocation(line: 1688, column: 16, scope: !15404)
!15512 = !DILocation(line: 1688, column: 21, scope: !15404)
!15513 = !DILocation(line: 1688, column: 26, scope: !15404)
!15514 = !DILocation(line: 1688, column: 39, scope: !15404)
!15515 = !DILocation(line: 1688, column: 3, scope: !15404)
!15516 = !DILocation(line: 1689, column: 1, scope: !15404)
!15517 = distinct !DISubprogram(name: "var_mem_delete_and_set", scope: !3, file: !3, line: 1779, type: !15405, scopeLine: 1781, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!15518 = !DILocalVariable(name: "set", arg: 1, scope: !15517, file: !3, line: 1779, type: !2418)
!15519 = !DILocation(line: 1779, column: 39, scope: !15517)
!15520 = !DILocalVariable(name: "loc", arg: 2, scope: !15517, file: !3, line: 1779, type: !1188)
!15521 = !DILocation(line: 1779, column: 48, scope: !15517)
!15522 = !DILocalVariable(name: "modify", arg: 3, scope: !15517, file: !3, line: 1779, type: !1130)
!15523 = !DILocation(line: 1779, column: 58, scope: !15517)
!15524 = !DILocalVariable(name: "initialized", arg: 4, scope: !15517, file: !3, line: 1780, type: !734)
!15525 = !DILocation(line: 1780, column: 25, scope: !15517)
!15526 = !DILocalVariable(name: "set_src", arg: 5, scope: !15517, file: !3, line: 1780, type: !1188)
!15527 = !DILocation(line: 1780, column: 42, scope: !15517)
!15528 = !DILocalVariable(name: "decl", scope: !15517, file: !3, line: 1782, type: !1011)
!15529 = !DILocation(line: 1782, column: 8, scope: !15517)
!15530 = !DILocation(line: 1782, column: 15, scope: !15517)
!15531 = !DILocalVariable(name: "offset", scope: !15517, file: !3, line: 1783, type: !1067)
!15532 = !DILocation(line: 1783, column: 17, scope: !15517)
!15533 = !DILocation(line: 1783, column: 26, scope: !15517)
!15534 = !DILocation(line: 1785, column: 26, scope: !15517)
!15535 = !DILocation(line: 1785, column: 10, scope: !15517)
!15536 = !DILocation(line: 1785, column: 8, scope: !15517)
!15537 = !DILocation(line: 1787, column: 7, scope: !15538)
!15538 = distinct !DILexicalBlock(scope: !15517, file: !3, line: 1787, column: 7)
!15539 = !DILocation(line: 1787, column: 19, scope: !15538)
!15540 = !DILocation(line: 1787, column: 7, scope: !15517)
!15541 = !DILocation(line: 1788, column: 35, scope: !15538)
!15542 = !DILocation(line: 1788, column: 40, scope: !15538)
!15543 = !DILocation(line: 1788, column: 59, scope: !15538)
!15544 = !DILocation(line: 1788, column: 45, scope: !15538)
!15545 = !DILocation(line: 1788, column: 19, scope: !15538)
!15546 = !DILocation(line: 1788, column: 17, scope: !15538)
!15547 = !DILocation(line: 1788, column: 5, scope: !15538)
!15548 = !DILocation(line: 1790, column: 7, scope: !15549)
!15549 = distinct !DILexicalBlock(scope: !15517, file: !3, line: 1790, column: 7)
!15550 = !DILocation(line: 1790, column: 7, scope: !15517)
!15551 = !DILocation(line: 1791, column: 28, scope: !15549)
!15552 = !DILocation(line: 1791, column: 53, scope: !15549)
!15553 = !DILocation(line: 1791, column: 39, scope: !15549)
!15554 = !DILocation(line: 1791, column: 60, scope: !15549)
!15555 = !DILocation(line: 1791, column: 68, scope: !15549)
!15556 = !DILocation(line: 1791, column: 5, scope: !15549)
!15557 = !DILocation(line: 1792, column: 16, scope: !15517)
!15558 = !DILocation(line: 1792, column: 21, scope: !15517)
!15559 = !DILocation(line: 1792, column: 26, scope: !15517)
!15560 = !DILocation(line: 1792, column: 39, scope: !15517)
!15561 = !DILocation(line: 1792, column: 3, scope: !15517)
!15562 = !DILocation(line: 1793, column: 1, scope: !15517)
!15563 = distinct !DISubprogram(name: "var_regno_delete", scope: !3, file: !3, line: 1729, type: !15564, scopeLine: 1730, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!15564 = !DISubroutineType(types: !15565)
!15565 = !{null, !2418, !1010}
!15566 = !DILocalVariable(name: "set", arg: 1, scope: !15563, file: !3, line: 1729, type: !2418)
!15567 = !DILocation(line: 1729, column: 33, scope: !15563)
!15568 = !DILocalVariable(name: "regno", arg: 2, scope: !15563, file: !3, line: 1729, type: !1010)
!15569 = !DILocation(line: 1729, column: 42, scope: !15563)
!15570 = !DILocalVariable(name: "reg", scope: !15563, file: !3, line: 1731, type: !5173)
!15571 = !DILocation(line: 1731, column: 10, scope: !15563)
!15572 = !DILocation(line: 1731, column: 17, scope: !15563)
!15573 = !DILocation(line: 1731, column: 22, scope: !15563)
!15574 = !DILocation(line: 1731, column: 27, scope: !15563)
!15575 = !DILocalVariable(name: "node", scope: !15563, file: !3, line: 1732, type: !2403)
!15576 = !DILocation(line: 1732, column: 9, scope: !15563)
!15577 = !DILocalVariable(name: "next", scope: !15563, file: !3, line: 1732, type: !2403)
!15578 = !DILocation(line: 1732, column: 15, scope: !15563)
!15579 = !DILocation(line: 1734, column: 16, scope: !15580)
!15580 = distinct !DILexicalBlock(scope: !15563, file: !3, line: 1734, column: 3)
!15581 = !DILocation(line: 1734, column: 15, scope: !15580)
!15582 = !DILocation(line: 1734, column: 13, scope: !15580)
!15583 = !DILocation(line: 1734, column: 8, scope: !15580)
!15584 = !DILocation(line: 1734, column: 21, scope: !15585)
!15585 = distinct !DILexicalBlock(scope: !15580, file: !3, line: 1734, column: 3)
!15586 = !DILocation(line: 1734, column: 3, scope: !15580)
!15587 = !DILocation(line: 1736, column: 14, scope: !15588)
!15588 = distinct !DILexicalBlock(scope: !15585, file: !3, line: 1735, column: 5)
!15589 = !DILocation(line: 1736, column: 20, scope: !15588)
!15590 = !DILocation(line: 1736, column: 12, scope: !15588)
!15591 = !DILocation(line: 1737, column: 29, scope: !15588)
!15592 = !DILocation(line: 1737, column: 34, scope: !15588)
!15593 = !DILocation(line: 1737, column: 40, scope: !15588)
!15594 = !DILocation(line: 1737, column: 45, scope: !15588)
!15595 = !DILocation(line: 1737, column: 51, scope: !15588)
!15596 = !DILocation(line: 1737, column: 55, scope: !15588)
!15597 = !DILocation(line: 1737, column: 61, scope: !15588)
!15598 = !DILocation(line: 1737, column: 7, scope: !15588)
!15599 = !DILocation(line: 1738, column: 18, scope: !15588)
!15600 = !DILocation(line: 1738, column: 30, scope: !15588)
!15601 = !DILocation(line: 1738, column: 7, scope: !15588)
!15602 = !DILocation(line: 1739, column: 5, scope: !15588)
!15603 = !DILocation(line: 1734, column: 34, scope: !15585)
!15604 = !DILocation(line: 1734, column: 32, scope: !15585)
!15605 = !DILocation(line: 1734, column: 3, scope: !15585)
!15606 = distinct !{!15606, !15586, !15607}
!15607 = !DILocation(line: 1739, column: 5, scope: !15580)
!15608 = !DILocation(line: 1740, column: 4, scope: !15563)
!15609 = !DILocation(line: 1740, column: 8, scope: !15563)
!15610 = !DILocation(line: 1741, column: 1, scope: !15563)
!15611 = distinct !DISubprogram(name: "dataflow_set_equiv_regs", scope: !3, file: !3, line: 3662, type: !4011, scopeLine: 3663, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!15612 = !DILocalVariable(name: "set", arg: 1, scope: !15611, file: !3, line: 3662, type: !2418)
!15613 = !DILocation(line: 3662, column: 40, scope: !15611)
!15614 = !DILocalVariable(name: "i", scope: !15611, file: !3, line: 3664, type: !1010)
!15615 = !DILocation(line: 3664, column: 7, scope: !15611)
!15616 = !DILocalVariable(name: "list", scope: !15611, file: !3, line: 3665, type: !2403)
!15617 = !DILocation(line: 3665, column: 9, scope: !15611)
!15618 = !DILocalVariable(name: "listp", scope: !15611, file: !3, line: 3665, type: !5173)
!15619 = !DILocation(line: 3665, column: 16, scope: !15611)
!15620 = !DILocation(line: 3667, column: 10, scope: !15621)
!15621 = distinct !DILexicalBlock(scope: !15611, file: !3, line: 3667, column: 3)
!15622 = !DILocation(line: 3667, column: 8, scope: !15621)
!15623 = !DILocation(line: 3667, column: 15, scope: !15624)
!15624 = distinct !DILexicalBlock(scope: !15621, file: !3, line: 3667, column: 3)
!15625 = !DILocation(line: 3667, column: 17, scope: !15624)
!15626 = !DILocation(line: 3667, column: 3, scope: !15621)
!15627 = !DILocalVariable(name: "canon", scope: !15628, file: !3, line: 3669, type: !15629)
!15628 = distinct !DILexicalBlock(scope: !15624, file: !3, line: 3668, column: 5)
!15629 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1188, size: 5568, elements: !15630)
!15630 = !{!15631}
!15631 = !DISubrange(count: 87)
!15632 = !DILocation(line: 3669, column: 11, scope: !15628)
!15633 = !DILocation(line: 3671, column: 7, scope: !15628)
!15634 = !DILocation(line: 3673, column: 19, scope: !15635)
!15635 = distinct !DILexicalBlock(scope: !15628, file: !3, line: 3673, column: 7)
!15636 = !DILocation(line: 3673, column: 24, scope: !15635)
!15637 = !DILocation(line: 3673, column: 29, scope: !15635)
!15638 = !DILocation(line: 3673, column: 17, scope: !15635)
!15639 = !DILocation(line: 3673, column: 12, scope: !15635)
!15640 = !DILocation(line: 3673, column: 33, scope: !15641)
!15641 = distinct !DILexicalBlock(scope: !15635, file: !3, line: 3673, column: 7)
!15642 = !DILocation(line: 3673, column: 7, scope: !15635)
!15643 = !DILocation(line: 3674, column: 6, scope: !15644)
!15644 = distinct !DILexicalBlock(scope: !15641, file: !3, line: 3674, column: 6)
!15645 = !DILocation(line: 3674, column: 12, scope: !15644)
!15646 = !DILocation(line: 3674, column: 19, scope: !15644)
!15647 = !DILocation(line: 3674, column: 24, scope: !15644)
!15648 = !DILocation(line: 3674, column: 42, scope: !15644)
!15649 = !DILocation(line: 3674, column: 48, scope: !15644)
!15650 = !DILocation(line: 3674, column: 27, scope: !15644)
!15651 = !DILocation(line: 3674, column: 6, scope: !15641)
!15652 = !DILocalVariable(name: "val", scope: !15653, file: !3, line: 3676, type: !1188)
!15653 = distinct !DILexicalBlock(scope: !15644, file: !3, line: 3675, column: 4)
!15654 = !DILocation(line: 3676, column: 10, scope: !15653)
!15655 = !DILocation(line: 3676, column: 29, scope: !15653)
!15656 = !DILocation(line: 3676, column: 35, scope: !15653)
!15657 = !DILocation(line: 3676, column: 16, scope: !15653)
!15658 = !DILocalVariable(name: "cvalp", scope: !15653, file: !3, line: 3677, type: !4733)
!15659 = !DILocation(line: 3677, column: 11, scope: !15653)
!15660 = !DILocation(line: 3677, column: 31, scope: !15653)
!15661 = !DILocation(line: 3677, column: 20, scope: !15653)
!15662 = !DILocalVariable(name: "cval", scope: !15653, file: !3, line: 3678, type: !1188)
!15663 = !DILocation(line: 3678, column: 10, scope: !15653)
!15664 = !DILocation(line: 3678, column: 18, scope: !15653)
!15665 = !DILocation(line: 3678, column: 17, scope: !15653)
!15666 = !DILocation(line: 3680, column: 27, scope: !15667)
!15667 = distinct !DILexicalBlock(scope: !15653, file: !3, line: 3680, column: 10)
!15668 = !DILocation(line: 3680, column: 32, scope: !15667)
!15669 = !DILocation(line: 3680, column: 10, scope: !15667)
!15670 = !DILocation(line: 3680, column: 10, scope: !15653)
!15671 = !DILocation(line: 3681, column: 17, scope: !15667)
!15672 = !DILocation(line: 3681, column: 9, scope: !15667)
!15673 = !DILocation(line: 3681, column: 15, scope: !15667)
!15674 = !DILocation(line: 3681, column: 8, scope: !15667)
!15675 = !DILocation(line: 3682, column: 4, scope: !15653)
!15676 = !DILocation(line: 3674, column: 50, scope: !15644)
!15677 = !DILocation(line: 3673, column: 46, scope: !15641)
!15678 = !DILocation(line: 3673, column: 52, scope: !15641)
!15679 = !DILocation(line: 3673, column: 44, scope: !15641)
!15680 = !DILocation(line: 3673, column: 7, scope: !15641)
!15681 = distinct !{!15681, !15642, !15682}
!15682 = !DILocation(line: 3682, column: 4, scope: !15635)
!15683 = !DILocation(line: 3684, column: 19, scope: !15684)
!15684 = distinct !DILexicalBlock(scope: !15628, file: !3, line: 3684, column: 7)
!15685 = !DILocation(line: 3684, column: 24, scope: !15684)
!15686 = !DILocation(line: 3684, column: 29, scope: !15684)
!15687 = !DILocation(line: 3684, column: 17, scope: !15684)
!15688 = !DILocation(line: 3684, column: 12, scope: !15684)
!15689 = !DILocation(line: 3684, column: 33, scope: !15690)
!15690 = distinct !DILexicalBlock(scope: !15684, file: !3, line: 3684, column: 7)
!15691 = !DILocation(line: 3684, column: 7, scope: !15684)
!15692 = !DILocation(line: 3685, column: 6, scope: !15693)
!15693 = distinct !DILexicalBlock(scope: !15690, file: !3, line: 3685, column: 6)
!15694 = !DILocation(line: 3685, column: 12, scope: !15693)
!15695 = !DILocation(line: 3685, column: 19, scope: !15693)
!15696 = !DILocation(line: 3685, column: 24, scope: !15693)
!15697 = !DILocation(line: 3685, column: 41, scope: !15693)
!15698 = !DILocation(line: 3685, column: 47, scope: !15693)
!15699 = !DILocation(line: 3685, column: 27, scope: !15693)
!15700 = !DILocation(line: 3685, column: 6, scope: !15690)
!15701 = !DILocalVariable(name: "cval", scope: !15702, file: !3, line: 3687, type: !1188)
!15702 = distinct !DILexicalBlock(scope: !15693, file: !3, line: 3686, column: 4)
!15703 = !DILocation(line: 3687, column: 10, scope: !15702)
!15704 = !DILocation(line: 3687, column: 28, scope: !15702)
!15705 = !DILocation(line: 3687, column: 17, scope: !15702)
!15706 = !DILocation(line: 3689, column: 11, scope: !15707)
!15707 = distinct !DILexicalBlock(scope: !15702, file: !3, line: 3689, column: 10)
!15708 = !DILocation(line: 3689, column: 10, scope: !15702)
!15709 = !DILocation(line: 3690, column: 8, scope: !15707)
!15710 = !DILocation(line: 3692, column: 25, scope: !15711)
!15711 = distinct !DILexicalBlock(scope: !15702, file: !3, line: 3692, column: 10)
!15712 = !DILocation(line: 3692, column: 31, scope: !15711)
!15713 = !DILocation(line: 3692, column: 10, scope: !15711)
!15714 = !DILocation(line: 3692, column: 10, scope: !15702)
!15715 = !DILocalVariable(name: "val", scope: !15716, file: !3, line: 3694, type: !1188)
!15716 = distinct !DILexicalBlock(scope: !15711, file: !3, line: 3693, column: 8)
!15717 = !DILocation(line: 3694, column: 7, scope: !15716)
!15718 = !DILocation(line: 3694, column: 26, scope: !15716)
!15719 = !DILocation(line: 3694, column: 32, scope: !15716)
!15720 = !DILocation(line: 3694, column: 13, scope: !15716)
!15721 = !DILocation(line: 3696, column: 7, scope: !15722)
!15722 = distinct !DILexicalBlock(scope: !15716, file: !3, line: 3696, column: 7)
!15723 = !DILocation(line: 3696, column: 14, scope: !15722)
!15724 = !DILocation(line: 3696, column: 11, scope: !15722)
!15725 = !DILocation(line: 3696, column: 7, scope: !15716)
!15726 = !DILocation(line: 3697, column: 5, scope: !15722)
!15727 = !DILocation(line: 3699, column: 3, scope: !15716)
!15728 = !DILocation(line: 3699, column: 29, scope: !15716)
!15729 = !DILocation(line: 3700, column: 22, scope: !15716)
!15730 = !DILocation(line: 3700, column: 27, scope: !15716)
!15731 = !DILocation(line: 3700, column: 47, scope: !15716)
!15732 = !DILocation(line: 3700, column: 32, scope: !15716)
!15733 = !DILocation(line: 3700, column: 3, scope: !15716)
!15734 = !DILocation(line: 3703, column: 8, scope: !15716)
!15735 = !DILocation(line: 3705, column: 6, scope: !15702)
!15736 = !DILocation(line: 3705, column: 33, scope: !15702)
!15737 = !DILocation(line: 3706, column: 25, scope: !15702)
!15738 = !DILocation(line: 3706, column: 30, scope: !15702)
!15739 = !DILocation(line: 3706, column: 36, scope: !15702)
!15740 = !DILocation(line: 3706, column: 42, scope: !15702)
!15741 = !DILocation(line: 3706, column: 6, scope: !15702)
!15742 = !DILocation(line: 3708, column: 4, scope: !15702)
!15743 = !DILocation(line: 3685, column: 49, scope: !15693)
!15744 = !DILocation(line: 3684, column: 46, scope: !15690)
!15745 = !DILocation(line: 3684, column: 52, scope: !15690)
!15746 = !DILocation(line: 3684, column: 44, scope: !15690)
!15747 = !DILocation(line: 3684, column: 7, scope: !15690)
!15748 = distinct !{!15748, !15691, !15749}
!15749 = !DILocation(line: 3708, column: 4, scope: !15684)
!15750 = !DILocation(line: 3710, column: 21, scope: !15751)
!15751 = distinct !DILexicalBlock(scope: !15628, file: !3, line: 3710, column: 7)
!15752 = !DILocation(line: 3710, column: 26, scope: !15751)
!15753 = !DILocation(line: 3710, column: 31, scope: !15751)
!15754 = !DILocation(line: 3710, column: 18, scope: !15751)
!15755 = !DILocation(line: 3710, column: 12, scope: !15751)
!15756 = !DILocation(line: 3710, column: 44, scope: !15757)
!15757 = distinct !DILexicalBlock(scope: !15751, file: !3, line: 3710, column: 7)
!15758 = !DILocation(line: 3710, column: 43, scope: !15757)
!15759 = !DILocation(line: 3710, column: 41, scope: !15757)
!15760 = !DILocation(line: 3710, column: 7, scope: !15751)
!15761 = !DILocation(line: 3712, column: 6, scope: !15762)
!15762 = distinct !DILexicalBlock(scope: !15757, file: !3, line: 3712, column: 6)
!15763 = !DILocation(line: 3712, column: 12, scope: !15762)
!15764 = !DILocation(line: 3712, column: 19, scope: !15762)
!15765 = !DILocation(line: 3712, column: 24, scope: !15762)
!15766 = !DILocation(line: 3712, column: 41, scope: !15762)
!15767 = !DILocation(line: 3712, column: 47, scope: !15762)
!15768 = !DILocation(line: 3712, column: 27, scope: !15762)
!15769 = !DILocation(line: 3712, column: 6, scope: !15757)
!15770 = !DILocalVariable(name: "cval", scope: !15771, file: !3, line: 3714, type: !1188)
!15771 = distinct !DILexicalBlock(scope: !15762, file: !3, line: 3713, column: 4)
!15772 = !DILocation(line: 3714, column: 10, scope: !15771)
!15773 = !DILocation(line: 3714, column: 28, scope: !15771)
!15774 = !DILocation(line: 3714, column: 17, scope: !15771)
!15775 = !DILocalVariable(name: "slot", scope: !15771, file: !3, line: 3715, type: !1848)
!15776 = !DILocation(line: 3715, column: 13, scope: !15771)
!15777 = !DILocation(line: 3717, column: 11, scope: !15778)
!15778 = distinct !DILexicalBlock(scope: !15771, file: !3, line: 3717, column: 10)
!15779 = !DILocation(line: 3717, column: 10, scope: !15771)
!15780 = !DILocation(line: 3718, column: 8, scope: !15778)
!15781 = !DILocation(line: 3720, column: 25, scope: !15782)
!15782 = distinct !DILexicalBlock(scope: !15771, file: !3, line: 3720, column: 10)
!15783 = !DILocation(line: 3720, column: 31, scope: !15782)
!15784 = !DILocation(line: 3720, column: 10, scope: !15782)
!15785 = !DILocation(line: 3720, column: 10, scope: !15771)
!15786 = !DILocalVariable(name: "val", scope: !15787, file: !3, line: 3722, type: !1188)
!15787 = distinct !DILexicalBlock(scope: !15782, file: !3, line: 3721, column: 8)
!15788 = !DILocation(line: 3722, column: 7, scope: !15787)
!15789 = !DILocation(line: 3722, column: 26, scope: !15787)
!15790 = !DILocation(line: 3722, column: 32, scope: !15787)
!15791 = !DILocation(line: 3722, column: 13, scope: !15787)
!15792 = !DILocation(line: 3723, column: 8, scope: !15793)
!15793 = distinct !DILexicalBlock(scope: !15787, file: !3, line: 3723, column: 7)
!15794 = !DILocation(line: 3723, column: 7, scope: !15787)
!15795 = !DILocation(line: 3724, column: 5, scope: !15793)
!15796 = !DILocation(line: 3725, column: 8, scope: !15787)
!15797 = !DILocation(line: 3727, column: 45, scope: !15771)
!15798 = !DILocation(line: 3727, column: 50, scope: !15771)
!15799 = !DILocation(line: 3727, column: 56, scope: !15771)
!15800 = !DILocation(line: 3727, column: 62, scope: !15771)
!15801 = !DILocation(line: 3727, column: 13, scope: !15771)
!15802 = !DILocation(line: 3727, column: 11, scope: !15771)
!15803 = !DILocation(line: 3728, column: 32, scope: !15771)
!15804 = !DILocation(line: 3728, column: 38, scope: !15771)
!15805 = !DILocation(line: 3728, column: 6, scope: !15771)
!15806 = !DILocation(line: 3729, column: 11, scope: !15807)
!15807 = distinct !DILexicalBlock(scope: !15771, file: !3, line: 3729, column: 10)
!15808 = !DILocation(line: 3729, column: 10, scope: !15807)
!15809 = !DILocation(line: 3729, column: 20, scope: !15807)
!15810 = !DILocation(line: 3729, column: 17, scope: !15807)
!15811 = !DILocation(line: 3729, column: 10, scope: !15771)
!15812 = !DILocation(line: 3730, column: 13, scope: !15807)
!15813 = !DILocation(line: 3730, column: 8, scope: !15807)
!15814 = !DILocation(line: 3731, column: 4, scope: !15771)
!15815 = !DILocation(line: 3712, column: 49, scope: !15762)
!15816 = !DILocation(line: 3711, column: 13, scope: !15757)
!15817 = !DILocation(line: 3711, column: 21, scope: !15757)
!15818 = !DILocation(line: 3711, column: 27, scope: !15757)
!15819 = !DILocation(line: 3711, column: 34, scope: !15757)
!15820 = !DILocation(line: 3711, column: 11, scope: !15757)
!15821 = !DILocation(line: 3710, column: 7, scope: !15757)
!15822 = distinct !{!15822, !15760, !15823}
!15823 = !DILocation(line: 3731, column: 4, scope: !15751)
!15824 = !DILocation(line: 3732, column: 5, scope: !15628)
!15825 = !DILocation(line: 3667, column: 43, scope: !15624)
!15826 = !DILocation(line: 3667, column: 3, scope: !15624)
!15827 = distinct !{!15827, !15626, !15828}
!15828 = !DILocation(line: 3732, column: 5, scope: !15621)
!15829 = !DILocation(line: 3733, column: 1, scope: !15611)
!15830 = distinct !DISubprogram(name: "canonicalize_values_mark", scope: !3, file: !3, line: 3014, type: !6290, scopeLine: 3015, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!15831 = !DILocalVariable(name: "slot", arg: 1, scope: !15830, file: !3, line: 3014, type: !1848)
!15832 = !DILocation(line: 3014, column: 34, scope: !15830)
!15833 = !DILocalVariable(name: "data", arg: 2, scope: !15830, file: !3, line: 3014, type: !1313)
!15834 = !DILocation(line: 3014, column: 46, scope: !15830)
!15835 = !DILocalVariable(name: "set", scope: !15830, file: !3, line: 3016, type: !2418)
!15836 = !DILocation(line: 3016, column: 17, scope: !15830)
!15837 = !DILocation(line: 3016, column: 39, scope: !15830)
!15838 = !DILocation(line: 3016, column: 23, scope: !15830)
!15839 = !DILocalVariable(name: "var", scope: !15830, file: !3, line: 3017, type: !2447)
!15840 = !DILocation(line: 3017, column: 12, scope: !15830)
!15841 = !DILocation(line: 3017, column: 30, scope: !15830)
!15842 = !DILocation(line: 3017, column: 29, scope: !15830)
!15843 = !DILocation(line: 3017, column: 18, scope: !15830)
!15844 = !DILocalVariable(name: "dv", scope: !15830, file: !3, line: 3018, type: !2410)
!15845 = !DILocation(line: 3018, column: 17, scope: !15830)
!15846 = !DILocation(line: 3018, column: 22, scope: !15830)
!15847 = !DILocation(line: 3018, column: 27, scope: !15830)
!15848 = !DILocalVariable(name: "val", scope: !15830, file: !3, line: 3019, type: !1188)
!15849 = !DILocation(line: 3019, column: 7, scope: !15830)
!15850 = !DILocalVariable(name: "node", scope: !15830, file: !3, line: 3020, type: !2437)
!15851 = !DILocation(line: 3020, column: 18, scope: !15830)
!15852 = !DILocation(line: 3022, column: 23, scope: !15853)
!15853 = distinct !DILexicalBlock(scope: !15830, file: !3, line: 3022, column: 7)
!15854 = !DILocation(line: 3022, column: 8, scope: !15853)
!15855 = !DILocation(line: 3022, column: 7, scope: !15830)
!15856 = !DILocation(line: 3023, column: 5, scope: !15853)
!15857 = !DILocation(line: 3025, column: 3, scope: !15830)
!15858 = !DILocation(line: 3027, column: 22, scope: !15830)
!15859 = !DILocation(line: 3027, column: 9, scope: !15830)
!15860 = !DILocation(line: 3027, column: 7, scope: !15830)
!15861 = !DILocation(line: 3029, column: 15, scope: !15862)
!15862 = distinct !DILexicalBlock(scope: !15830, file: !3, line: 3029, column: 3)
!15863 = !DILocation(line: 3029, column: 20, scope: !15862)
!15864 = !DILocation(line: 3029, column: 32, scope: !15862)
!15865 = !DILocation(line: 3029, column: 13, scope: !15862)
!15866 = !DILocation(line: 3029, column: 8, scope: !15862)
!15867 = !DILocation(line: 3029, column: 43, scope: !15868)
!15868 = distinct !DILexicalBlock(scope: !15862, file: !3, line: 3029, column: 3)
!15869 = !DILocation(line: 3029, column: 3, scope: !15862)
!15870 = !DILocation(line: 3030, column: 9, scope: !15871)
!15871 = distinct !DILexicalBlock(scope: !15868, file: !3, line: 3030, column: 9)
!15872 = !DILocation(line: 3030, column: 30, scope: !15871)
!15873 = !DILocation(line: 3030, column: 9, scope: !15868)
!15874 = !DILocation(line: 3032, column: 23, scope: !15875)
!15875 = distinct !DILexicalBlock(scope: !15876, file: !3, line: 3032, column: 6)
!15876 = distinct !DILexicalBlock(scope: !15871, file: !3, line: 3031, column: 7)
!15877 = !DILocation(line: 3032, column: 29, scope: !15875)
!15878 = !DILocation(line: 3032, column: 34, scope: !15875)
!15879 = !DILocation(line: 3032, column: 6, scope: !15875)
!15880 = !DILocation(line: 3032, column: 6, scope: !15876)
!15881 = !DILocation(line: 3033, column: 4, scope: !15875)
!15882 = !DILocation(line: 3033, column: 30, scope: !15875)
!15883 = !DILocalVariable(name: "odv", scope: !15884, file: !3, line: 3036, type: !2410)
!15884 = distinct !DILexicalBlock(scope: !15875, file: !3, line: 3035, column: 4)
!15885 = !DILocation(line: 3036, column: 20, scope: !15884)
!15886 = !DILocation(line: 3036, column: 41, scope: !15884)
!15887 = !DILocation(line: 3036, column: 47, scope: !15884)
!15888 = !DILocation(line: 3036, column: 26, scope: !15884)
!15889 = !DILocalVariable(name: "oslot", scope: !15884, file: !3, line: 3037, type: !1848)
!15890 = !DILocation(line: 3037, column: 13, scope: !15884)
!15891 = !DILocation(line: 3037, column: 53, scope: !15884)
!15892 = !DILocation(line: 3037, column: 58, scope: !15884)
!15893 = !DILocation(line: 3037, column: 64, scope: !15884)
!15894 = !DILocation(line: 3037, column: 21, scope: !15884)
!15895 = !DILocation(line: 3039, column: 29, scope: !15884)
!15896 = !DILocation(line: 3039, column: 34, scope: !15884)
!15897 = !DILocation(line: 3039, column: 39, scope: !15884)
!15898 = !DILocation(line: 3039, column: 46, scope: !15884)
!15899 = !DILocation(line: 3040, column: 8, scope: !15884)
!15900 = !DILocation(line: 3040, column: 14, scope: !15884)
!15901 = !DILocation(line: 3039, column: 14, scope: !15884)
!15902 = !DILocation(line: 3039, column: 12, scope: !15884)
!15903 = !DILocation(line: 3042, column: 6, scope: !15884)
!15904 = !DILocation(line: 3042, column: 38, scope: !15884)
!15905 = !DILocation(line: 3044, column: 7, scope: !15876)
!15906 = !DILocation(line: 3030, column: 33, scope: !15871)
!15907 = !DILocation(line: 3029, column: 56, scope: !15868)
!15908 = !DILocation(line: 3029, column: 62, scope: !15868)
!15909 = !DILocation(line: 3029, column: 54, scope: !15868)
!15910 = !DILocation(line: 3029, column: 3, scope: !15868)
!15911 = distinct !{!15911, !15869, !15912}
!15912 = !DILocation(line: 3044, column: 7, scope: !15862)
!15913 = !DILocation(line: 3046, column: 3, scope: !15830)
!15914 = !DILocation(line: 3047, column: 1, scope: !15830)
!15915 = distinct !DISubprogram(name: "dataflow_set_different", scope: !3, file: !3, line: 4414, type: !15916, scopeLine: 4415, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!15916 = !DISubroutineType(types: !15917)
!15917 = !{!1130, !2418, !2418}
!15918 = !DILocalVariable(name: "old_set", arg: 1, scope: !15915, file: !3, line: 4414, type: !2418)
!15919 = !DILocation(line: 4414, column: 39, scope: !15915)
!15920 = !DILocalVariable(name: "new_set", arg: 2, scope: !15915, file: !3, line: 4414, type: !2418)
!15921 = !DILocation(line: 4414, column: 62, scope: !15915)
!15922 = !DILocation(line: 4416, column: 7, scope: !15923)
!15923 = distinct !DILexicalBlock(scope: !15915, file: !3, line: 4416, column: 7)
!15924 = !DILocation(line: 4416, column: 16, scope: !15923)
!15925 = !DILocation(line: 4416, column: 24, scope: !15923)
!15926 = !DILocation(line: 4416, column: 33, scope: !15923)
!15927 = !DILocation(line: 4416, column: 21, scope: !15923)
!15928 = !DILocation(line: 4416, column: 7, scope: !15915)
!15929 = !DILocation(line: 4417, column: 5, scope: !15923)
!15930 = !DILocation(line: 4419, column: 40, scope: !15931)
!15931 = distinct !DILexicalBlock(scope: !15915, file: !3, line: 4419, column: 7)
!15932 = !DILocation(line: 4419, column: 49, scope: !15931)
!15933 = !DILocation(line: 4419, column: 22, scope: !15931)
!15934 = !DILocation(line: 4419, column: 7, scope: !15931)
!15935 = !DILocation(line: 4420, column: 43, scope: !15931)
!15936 = !DILocation(line: 4420, column: 52, scope: !15931)
!15937 = !DILocation(line: 4420, column: 25, scope: !15931)
!15938 = !DILocation(line: 4420, column: 10, scope: !15931)
!15939 = !DILocation(line: 4420, column: 7, scope: !15931)
!15940 = !DILocation(line: 4419, column: 7, scope: !15915)
!15941 = !DILocation(line: 4421, column: 5, scope: !15931)
!15942 = !DILocation(line: 4423, column: 32, scope: !15915)
!15943 = !DILocation(line: 4425, column: 36, scope: !15915)
!15944 = !DILocation(line: 4425, column: 45, scope: !15915)
!15945 = !DILocation(line: 4425, column: 18, scope: !15915)
!15946 = !DILocation(line: 4426, column: 22, scope: !15915)
!15947 = !DILocation(line: 4426, column: 31, scope: !15915)
!15948 = !DILocation(line: 4426, column: 4, scope: !15915)
!15949 = !DILocation(line: 4425, column: 3, scope: !15915)
!15950 = !DILocation(line: 4430, column: 10, scope: !15915)
!15951 = !DILocation(line: 4430, column: 3, scope: !15915)
!15952 = !DILocation(line: 4431, column: 1, scope: !15915)
!15953 = distinct !DISubprogram(name: "dataflow_set_preserve_mem_locs", scope: !3, file: !3, line: 4072, type: !6290, scopeLine: 4073, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!15954 = !DILocalVariable(name: "slot", arg: 1, scope: !15953, file: !3, line: 4072, type: !1848)
!15955 = !DILocation(line: 4072, column: 40, scope: !15953)
!15956 = !DILocalVariable(name: "data", arg: 2, scope: !15953, file: !3, line: 4072, type: !1313)
!15957 = !DILocation(line: 4072, column: 52, scope: !15953)
!15958 = !DILocalVariable(name: "set", scope: !15953, file: !3, line: 4074, type: !2418)
!15959 = !DILocation(line: 4074, column: 17, scope: !15953)
!15960 = !DILocation(line: 4074, column: 40, scope: !15953)
!15961 = !DILocation(line: 4074, column: 23, scope: !15953)
!15962 = !DILocalVariable(name: "var", scope: !15953, file: !3, line: 4075, type: !2447)
!15963 = !DILocation(line: 4075, column: 12, scope: !15953)
!15964 = !DILocation(line: 4075, column: 30, scope: !15953)
!15965 = !DILocation(line: 4075, column: 29, scope: !15953)
!15966 = !DILocation(line: 4075, column: 18, scope: !15953)
!15967 = !DILocation(line: 4077, column: 21, scope: !15968)
!15968 = distinct !DILexicalBlock(scope: !15953, file: !3, line: 4077, column: 7)
!15969 = !DILocation(line: 4077, column: 26, scope: !15968)
!15970 = !DILocation(line: 4077, column: 7, scope: !15968)
!15971 = !DILocation(line: 4077, column: 30, scope: !15968)
!15972 = !DILocation(line: 4077, column: 47, scope: !15968)
!15973 = !DILocation(line: 4077, column: 52, scope: !15968)
!15974 = !DILocation(line: 4077, column: 33, scope: !15968)
!15975 = !DILocation(line: 4077, column: 7, scope: !15953)
!15976 = !DILocalVariable(name: "decl", scope: !15977, file: !3, line: 4079, type: !1011)
!15977 = distinct !DILexicalBlock(scope: !15968, file: !3, line: 4078, column: 5)
!15978 = !DILocation(line: 4079, column: 12, scope: !15977)
!15979 = !DILocation(line: 4079, column: 31, scope: !15977)
!15980 = !DILocation(line: 4079, column: 36, scope: !15977)
!15981 = !DILocation(line: 4079, column: 19, scope: !15977)
!15982 = !DILocalVariable(name: "loc", scope: !15977, file: !3, line: 4080, type: !2437)
!15983 = !DILocation(line: 4080, column: 22, scope: !15977)
!15984 = !DILocalVariable(name: "locp", scope: !15977, file: !3, line: 4080, type: !5595)
!15985 = !DILocation(line: 4080, column: 28, scope: !15977)
!15986 = !DILocalVariable(name: "changed", scope: !15977, file: !3, line: 4081, type: !1130)
!15987 = !DILocation(line: 4081, column: 12, scope: !15977)
!15988 = !DILocation(line: 4083, column: 12, scope: !15989)
!15989 = distinct !DILexicalBlock(scope: !15977, file: !3, line: 4083, column: 11)
!15990 = !DILocation(line: 4083, column: 17, scope: !15989)
!15991 = !DILocation(line: 4083, column: 11, scope: !15977)
!15992 = !DILocation(line: 4084, column: 2, scope: !15989)
!15993 = !DILocation(line: 4086, column: 7, scope: !15977)
!15994 = !DILocation(line: 4088, column: 25, scope: !15995)
!15995 = distinct !DILexicalBlock(scope: !15977, file: !3, line: 4088, column: 11)
!15996 = !DILocation(line: 4088, column: 30, scope: !15995)
!15997 = !DILocation(line: 4088, column: 35, scope: !15995)
!15998 = !DILocation(line: 4088, column: 11, scope: !15995)
!15999 = !DILocation(line: 4088, column: 11, scope: !15977)
!16000 = !DILocation(line: 4090, column: 15, scope: !16001)
!16001 = distinct !DILexicalBlock(scope: !16002, file: !3, line: 4090, column: 4)
!16002 = distinct !DILexicalBlock(scope: !15995, file: !3, line: 4089, column: 2)
!16003 = !DILocation(line: 4090, column: 20, scope: !16001)
!16004 = !DILocation(line: 4090, column: 32, scope: !16001)
!16005 = !DILocation(line: 4090, column: 13, scope: !16001)
!16006 = !DILocation(line: 4090, column: 9, scope: !16001)
!16007 = !DILocation(line: 4090, column: 43, scope: !16008)
!16008 = distinct !DILexicalBlock(scope: !16001, file: !3, line: 4090, column: 4)
!16009 = !DILocation(line: 4090, column: 4, scope: !16001)
!16010 = !DILocation(line: 4094, column: 12, scope: !16011)
!16011 = distinct !DILexicalBlock(scope: !16012, file: !3, line: 4094, column: 12)
!16012 = distinct !DILexicalBlock(scope: !16008, file: !3, line: 4091, column: 6)
!16013 = !DILocation(line: 4094, column: 32, scope: !16011)
!16014 = !DILocation(line: 4095, column: 5, scope: !16011)
!16015 = !DILocation(line: 4095, column: 9, scope: !16011)
!16016 = !DILocation(line: 4095, column: 32, scope: !16011)
!16017 = !DILocation(line: 4095, column: 29, scope: !16011)
!16018 = !DILocation(line: 4096, column: 9, scope: !16011)
!16019 = !DILocation(line: 4096, column: 12, scope: !16011)
!16020 = !DILocation(line: 4097, column: 5, scope: !16011)
!16021 = !DILocation(line: 4097, column: 27, scope: !16011)
!16022 = !DILocation(line: 4097, column: 32, scope: !16011)
!16023 = !DILocation(line: 4097, column: 9, scope: !16011)
!16024 = !DILocation(line: 4094, column: 12, scope: !16012)
!16025 = !DILocation(line: 4098, column: 3, scope: !16011)
!16026 = !DILocation(line: 4100, column: 17, scope: !16027)
!16027 = distinct !DILexicalBlock(scope: !16011, file: !3, line: 4100, column: 17)
!16028 = !DILocation(line: 4100, column: 37, scope: !16027)
!16029 = !DILocation(line: 4101, column: 10, scope: !16027)
!16030 = !DILocation(line: 4101, column: 36, scope: !16027)
!16031 = !DILocation(line: 4101, column: 42, scope: !16027)
!16032 = !DILocation(line: 4101, column: 47, scope: !16027)
!16033 = !DILocation(line: 4102, column: 26, scope: !16027)
!16034 = !DILocation(line: 4102, column: 31, scope: !16027)
!16035 = !DILocation(line: 4102, column: 8, scope: !16027)
!16036 = !DILocation(line: 4101, column: 13, scope: !16027)
!16037 = !DILocation(line: 4100, column: 17, scope: !16011)
!16038 = !DILocation(line: 4103, column: 3, scope: !16027)
!16039 = !DILocation(line: 4104, column: 6, scope: !16012)
!16040 = !DILocation(line: 4090, column: 54, scope: !16008)
!16041 = !DILocation(line: 4090, column: 59, scope: !16008)
!16042 = !DILocation(line: 4090, column: 52, scope: !16008)
!16043 = !DILocation(line: 4090, column: 4, scope: !16008)
!16044 = distinct !{!16044, !16009, !16045}
!16045 = !DILocation(line: 4104, column: 6, scope: !16001)
!16046 = !DILocation(line: 4106, column: 9, scope: !16047)
!16047 = distinct !DILexicalBlock(scope: !16002, file: !3, line: 4106, column: 8)
!16048 = !DILocation(line: 4106, column: 8, scope: !16002)
!16049 = !DILocation(line: 4107, column: 6, scope: !16047)
!16050 = !DILocation(line: 4109, column: 29, scope: !16002)
!16051 = !DILocation(line: 4109, column: 34, scope: !16002)
!16052 = !DILocation(line: 4109, column: 40, scope: !16002)
!16053 = !DILocation(line: 4109, column: 11, scope: !16002)
!16054 = !DILocation(line: 4109, column: 9, scope: !16002)
!16055 = !DILocation(line: 4110, column: 21, scope: !16002)
!16056 = !DILocation(line: 4110, column: 20, scope: !16002)
!16057 = !DILocation(line: 4110, column: 10, scope: !16002)
!16058 = !DILocation(line: 4110, column: 8, scope: !16002)
!16059 = !DILocation(line: 4111, column: 4, scope: !16002)
!16060 = !DILocation(line: 4112, column: 2, scope: !16002)
!16061 = !DILocation(line: 4114, column: 20, scope: !16062)
!16062 = distinct !DILexicalBlock(scope: !15977, file: !3, line: 4114, column: 7)
!16063 = !DILocation(line: 4114, column: 25, scope: !16062)
!16064 = !DILocation(line: 4114, column: 37, scope: !16062)
!16065 = !DILocation(line: 4114, column: 17, scope: !16062)
!16066 = !DILocation(line: 4114, column: 55, scope: !16062)
!16067 = !DILocation(line: 4114, column: 54, scope: !16062)
!16068 = !DILocation(line: 4114, column: 52, scope: !16062)
!16069 = !DILocation(line: 4114, column: 12, scope: !16062)
!16070 = !DILocation(line: 4115, column: 5, scope: !16071)
!16071 = distinct !DILexicalBlock(scope: !16062, file: !3, line: 4114, column: 7)
!16072 = !DILocation(line: 4114, column: 7, scope: !16062)
!16073 = !DILocalVariable(name: "old_loc", scope: !16074, file: !3, line: 4117, type: !1188)
!16074 = distinct !DILexicalBlock(scope: !16071, file: !3, line: 4116, column: 2)
!16075 = !DILocation(line: 4117, column: 8, scope: !16074)
!16076 = !DILocation(line: 4117, column: 18, scope: !16074)
!16077 = !DILocation(line: 4117, column: 23, scope: !16074)
!16078 = !DILocation(line: 4118, column: 8, scope: !16079)
!16079 = distinct !DILexicalBlock(scope: !16074, file: !3, line: 4118, column: 8)
!16080 = !DILocation(line: 4118, column: 27, scope: !16079)
!16081 = !DILocation(line: 4118, column: 8, scope: !16074)
!16082 = !DILocalVariable(name: "mem_node", scope: !16083, file: !3, line: 4120, type: !2437)
!16083 = distinct !DILexicalBlock(scope: !16079, file: !3, line: 4119, column: 6)
!16084 = !DILocation(line: 4120, column: 23, scope: !16083)
!16085 = !DILocation(line: 4121, column: 28, scope: !16083)
!16086 = !DILocation(line: 4121, column: 34, scope: !16083)
!16087 = !DILocation(line: 4121, column: 39, scope: !16083)
!16088 = !DILocation(line: 4122, column: 25, scope: !16083)
!16089 = !DILocation(line: 4122, column: 30, scope: !16083)
!16090 = !DILocation(line: 4122, column: 7, scope: !16083)
!16091 = !DILocation(line: 4121, column: 5, scope: !16083)
!16092 = !DILocation(line: 4130, column: 12, scope: !16093)
!16093 = distinct !DILexicalBlock(scope: !16083, file: !3, line: 4130, column: 12)
!16094 = !DILocation(line: 4130, column: 12, scope: !16083)
!16095 = !DILocation(line: 4132, column: 16, scope: !16096)
!16096 = distinct !DILexicalBlock(scope: !16093, file: !3, line: 4131, column: 3)
!16097 = !DILocation(line: 4132, column: 26, scope: !16096)
!16098 = !DILocation(line: 4132, column: 5, scope: !16096)
!16099 = !DILocation(line: 4132, column: 10, scope: !16096)
!16100 = !DILocation(line: 4132, column: 14, scope: !16096)
!16101 = !DILocation(line: 4133, column: 20, scope: !16096)
!16102 = !DILocation(line: 4133, column: 30, scope: !16096)
!16103 = !DILocation(line: 4133, column: 5, scope: !16096)
!16104 = !DILocation(line: 4133, column: 10, scope: !16096)
!16105 = !DILocation(line: 4133, column: 18, scope: !16096)
!16106 = !DILocation(line: 4134, column: 17, scope: !16096)
!16107 = !DILocation(line: 4134, column: 5, scope: !16096)
!16108 = !DILocation(line: 4134, column: 10, scope: !16096)
!16109 = !DILocation(line: 4134, column: 15, scope: !16096)
!16110 = !DILocation(line: 4135, column: 3, scope: !16096)
!16111 = !DILocation(line: 4136, column: 6, scope: !16083)
!16112 = !DILocation(line: 4138, column: 8, scope: !16113)
!16113 = distinct !DILexicalBlock(scope: !16074, file: !3, line: 4138, column: 8)
!16114 = !DILocation(line: 4138, column: 28, scope: !16113)
!16115 = !DILocation(line: 4139, column: 8, scope: !16113)
!16116 = !DILocation(line: 4139, column: 12, scope: !16113)
!16117 = !DILocation(line: 4139, column: 35, scope: !16113)
!16118 = !DILocation(line: 4139, column: 32, scope: !16113)
!16119 = !DILocation(line: 4140, column: 5, scope: !16113)
!16120 = !DILocation(line: 4140, column: 8, scope: !16113)
!16121 = !DILocation(line: 4140, column: 30, scope: !16113)
!16122 = !DILocation(line: 4141, column: 8, scope: !16113)
!16123 = !DILocation(line: 4141, column: 30, scope: !16113)
!16124 = !DILocation(line: 4141, column: 35, scope: !16113)
!16125 = !DILocation(line: 4141, column: 12, scope: !16113)
!16126 = !DILocation(line: 4138, column: 8, scope: !16074)
!16127 = !DILocation(line: 4143, column: 12, scope: !16128)
!16128 = distinct !DILexicalBlock(scope: !16129, file: !3, line: 4143, column: 12)
!16129 = distinct !DILexicalBlock(scope: !16113, file: !3, line: 4142, column: 6)
!16130 = !DILocation(line: 4143, column: 23, scope: !16128)
!16131 = !DILocation(line: 4143, column: 28, scope: !16128)
!16132 = !DILocation(line: 4143, column: 20, scope: !16128)
!16133 = !DILocation(line: 4143, column: 32, scope: !16128)
!16134 = !DILocation(line: 4143, column: 35, scope: !16128)
!16135 = !DILocation(line: 4143, column: 12, scope: !16129)
!16136 = !DILocation(line: 4145, column: 9, scope: !16137)
!16137 = distinct !DILexicalBlock(scope: !16138, file: !3, line: 4145, column: 9)
!16138 = distinct !DILexicalBlock(scope: !16128, file: !3, line: 4144, column: 3)
!16139 = !DILocation(line: 4145, column: 20, scope: !16137)
!16140 = !DILocation(line: 4145, column: 25, scope: !16137)
!16141 = !DILocation(line: 4145, column: 37, scope: !16137)
!16142 = !DILocation(line: 4145, column: 17, scope: !16137)
!16143 = !DILocation(line: 4145, column: 9, scope: !16138)
!16144 = !DILocation(line: 4147, column: 17, scope: !16145)
!16145 = distinct !DILexicalBlock(scope: !16137, file: !3, line: 4146, column: 7)
!16146 = !DILocation(line: 4148, column: 9, scope: !16145)
!16147 = !DILocation(line: 4148, column: 14, scope: !16145)
!16148 = !DILocation(line: 4148, column: 26, scope: !16145)
!16149 = !DILocation(line: 4148, column: 34, scope: !16145)
!16150 = !DILocation(line: 4149, column: 9, scope: !16145)
!16151 = !DILocation(line: 4149, column: 14, scope: !16145)
!16152 = !DILocation(line: 4149, column: 30, scope: !16145)
!16153 = !DILocation(line: 4150, column: 7, scope: !16145)
!16154 = !DILocation(line: 4151, column: 23, scope: !16138)
!16155 = !DILocation(line: 4151, column: 28, scope: !16138)
!16156 = !DILocation(line: 4151, column: 32, scope: !16138)
!16157 = !DILocation(line: 4151, column: 37, scope: !16138)
!16158 = !DILocation(line: 4151, column: 5, scope: !16138)
!16159 = !DILocation(line: 4152, column: 26, scope: !16138)
!16160 = !DILocation(line: 4152, column: 31, scope: !16138)
!16161 = !DILocation(line: 4152, column: 35, scope: !16138)
!16162 = !DILocation(line: 4152, column: 5, scope: !16138)
!16163 = !DILocation(line: 4153, column: 3, scope: !16138)
!16164 = !DILocation(line: 4154, column: 16, scope: !16129)
!16165 = !DILocation(line: 4154, column: 21, scope: !16129)
!16166 = !DILocation(line: 4154, column: 13, scope: !16129)
!16167 = !DILocation(line: 4155, column: 8, scope: !16129)
!16168 = !DILocation(line: 4158, column: 8, scope: !16169)
!16169 = distinct !DILexicalBlock(scope: !16074, file: !3, line: 4158, column: 8)
!16170 = !DILocation(line: 4158, column: 8, scope: !16074)
!16171 = !DILocation(line: 4160, column: 29, scope: !16172)
!16172 = distinct !DILexicalBlock(scope: !16169, file: !3, line: 4159, column: 6)
!16173 = !DILocation(line: 4160, column: 34, scope: !16172)
!16174 = !DILocation(line: 4160, column: 38, scope: !16172)
!16175 = !DILocation(line: 4160, column: 8, scope: !16172)
!16176 = !DILocation(line: 4161, column: 12, scope: !16177)
!16177 = distinct !DILexicalBlock(scope: !16172, file: !3, line: 4161, column: 12)
!16178 = !DILocation(line: 4161, column: 23, scope: !16177)
!16179 = !DILocation(line: 4161, column: 28, scope: !16177)
!16180 = !DILocation(line: 4161, column: 40, scope: !16177)
!16181 = !DILocation(line: 4161, column: 20, scope: !16177)
!16182 = !DILocation(line: 4161, column: 12, scope: !16172)
!16183 = !DILocation(line: 4163, column: 13, scope: !16184)
!16184 = distinct !DILexicalBlock(scope: !16177, file: !3, line: 4162, column: 3)
!16185 = !DILocation(line: 4164, column: 5, scope: !16184)
!16186 = !DILocation(line: 4164, column: 10, scope: !16184)
!16187 = !DILocation(line: 4164, column: 22, scope: !16184)
!16188 = !DILocation(line: 4164, column: 30, scope: !16184)
!16189 = !DILocation(line: 4165, column: 5, scope: !16184)
!16190 = !DILocation(line: 4165, column: 10, scope: !16184)
!16191 = !DILocation(line: 4165, column: 26, scope: !16184)
!16192 = !DILocation(line: 4166, column: 3, scope: !16184)
!16193 = !DILocation(line: 4167, column: 6, scope: !16172)
!16194 = !DILocation(line: 4168, column: 12, scope: !16074)
!16195 = !DILocation(line: 4168, column: 17, scope: !16074)
!16196 = !DILocation(line: 4168, column: 5, scope: !16074)
!16197 = !DILocation(line: 4168, column: 10, scope: !16074)
!16198 = !DILocation(line: 4169, column: 15, scope: !16074)
!16199 = !DILocation(line: 4169, column: 31, scope: !16074)
!16200 = !DILocation(line: 4169, column: 4, scope: !16074)
!16201 = !DILocation(line: 4170, column: 2, scope: !16074)
!16202 = !DILocation(line: 4115, column: 17, scope: !16071)
!16203 = !DILocation(line: 4115, column: 16, scope: !16071)
!16204 = !DILocation(line: 4115, column: 14, scope: !16071)
!16205 = !DILocation(line: 4114, column: 7, scope: !16071)
!16206 = distinct !{!16206, !16072, !16207}
!16207 = !DILocation(line: 4170, column: 2, scope: !16062)
!16208 = !DILocation(line: 4172, column: 12, scope: !16209)
!16209 = distinct !DILexicalBlock(scope: !15977, file: !3, line: 4172, column: 11)
!16210 = !DILocation(line: 4172, column: 17, scope: !16209)
!16211 = !DILocation(line: 4172, column: 29, scope: !16209)
!16212 = !DILocation(line: 4172, column: 11, scope: !15977)
!16213 = !DILocation(line: 4174, column: 4, scope: !16214)
!16214 = distinct !DILexicalBlock(scope: !16209, file: !3, line: 4173, column: 2)
!16215 = !DILocation(line: 4174, column: 9, scope: !16214)
!16216 = !DILocation(line: 4174, column: 20, scope: !16214)
!16217 = !DILocation(line: 4175, column: 12, scope: !16214)
!16218 = !DILocation(line: 4176, column: 2, scope: !16214)
!16219 = !DILocation(line: 4177, column: 11, scope: !16220)
!16220 = distinct !DILexicalBlock(scope: !15977, file: !3, line: 4177, column: 11)
!16221 = !DILocation(line: 4177, column: 11, scope: !15977)
!16222 = !DILocation(line: 4178, column: 24, scope: !16220)
!16223 = !DILocation(line: 4178, column: 29, scope: !16220)
!16224 = !DILocation(line: 4178, column: 2, scope: !16220)
!16225 = !DILocation(line: 4179, column: 5, scope: !15977)
!16226 = !DILocation(line: 4181, column: 3, scope: !15953)
!16227 = !DILocation(line: 4182, column: 1, scope: !15953)
!16228 = distinct !DISubprogram(name: "dataflow_set_remove_mem_locs", scope: !3, file: !3, line: 4188, type: !6290, scopeLine: 4189, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!16229 = !DILocalVariable(name: "slot", arg: 1, scope: !16228, file: !3, line: 4188, type: !1848)
!16230 = !DILocation(line: 4188, column: 38, scope: !16228)
!16231 = !DILocalVariable(name: "data", arg: 2, scope: !16228, file: !3, line: 4188, type: !1313)
!16232 = !DILocation(line: 4188, column: 50, scope: !16228)
!16233 = !DILocalVariable(name: "set", scope: !16228, file: !3, line: 4190, type: !2418)
!16234 = !DILocation(line: 4190, column: 17, scope: !16228)
!16235 = !DILocation(line: 4190, column: 40, scope: !16228)
!16236 = !DILocation(line: 4190, column: 23, scope: !16228)
!16237 = !DILocalVariable(name: "var", scope: !16228, file: !3, line: 4191, type: !2447)
!16238 = !DILocation(line: 4191, column: 12, scope: !16228)
!16239 = !DILocation(line: 4191, column: 30, scope: !16228)
!16240 = !DILocation(line: 4191, column: 29, scope: !16228)
!16241 = !DILocation(line: 4191, column: 18, scope: !16228)
!16242 = !DILocation(line: 4193, column: 22, scope: !16243)
!16243 = distinct !DILexicalBlock(scope: !16228, file: !3, line: 4193, column: 7)
!16244 = !DILocation(line: 4193, column: 27, scope: !16243)
!16245 = !DILocation(line: 4193, column: 7, scope: !16243)
!16246 = !DILocation(line: 4193, column: 7, scope: !16228)
!16247 = !DILocalVariable(name: "loc", scope: !16248, file: !3, line: 4195, type: !2437)
!16248 = distinct !DILexicalBlock(scope: !16243, file: !3, line: 4194, column: 5)
!16249 = !DILocation(line: 4195, column: 22, scope: !16248)
!16250 = !DILocalVariable(name: "locp", scope: !16248, file: !3, line: 4195, type: !5595)
!16251 = !DILocation(line: 4195, column: 28, scope: !16248)
!16252 = !DILocalVariable(name: "changed", scope: !16248, file: !3, line: 4196, type: !1130)
!16253 = !DILocation(line: 4196, column: 12, scope: !16248)
!16254 = !DILocation(line: 4198, column: 7, scope: !16248)
!16255 = !DILocation(line: 4200, column: 25, scope: !16256)
!16256 = distinct !DILexicalBlock(scope: !16248, file: !3, line: 4200, column: 11)
!16257 = !DILocation(line: 4200, column: 30, scope: !16256)
!16258 = !DILocation(line: 4200, column: 35, scope: !16256)
!16259 = !DILocation(line: 4200, column: 11, scope: !16256)
!16260 = !DILocation(line: 4200, column: 11, scope: !16248)
!16261 = !DILocation(line: 4202, column: 15, scope: !16262)
!16262 = distinct !DILexicalBlock(scope: !16263, file: !3, line: 4202, column: 4)
!16263 = distinct !DILexicalBlock(scope: !16256, file: !3, line: 4201, column: 2)
!16264 = !DILocation(line: 4202, column: 20, scope: !16262)
!16265 = !DILocation(line: 4202, column: 32, scope: !16262)
!16266 = !DILocation(line: 4202, column: 13, scope: !16262)
!16267 = !DILocation(line: 4202, column: 9, scope: !16262)
!16268 = !DILocation(line: 4202, column: 43, scope: !16269)
!16269 = distinct !DILexicalBlock(scope: !16262, file: !3, line: 4202, column: 4)
!16270 = !DILocation(line: 4202, column: 4, scope: !16262)
!16271 = !DILocation(line: 4203, column: 10, scope: !16272)
!16272 = distinct !DILexicalBlock(scope: !16269, file: !3, line: 4203, column: 10)
!16273 = !DILocation(line: 4203, column: 30, scope: !16272)
!16274 = !DILocation(line: 4204, column: 3, scope: !16272)
!16275 = !DILocation(line: 4204, column: 24, scope: !16272)
!16276 = !DILocation(line: 4204, column: 29, scope: !16272)
!16277 = !DILocation(line: 4204, column: 6, scope: !16272)
!16278 = !DILocation(line: 4203, column: 10, scope: !16269)
!16279 = !DILocation(line: 4205, column: 8, scope: !16272)
!16280 = !DILocation(line: 4204, column: 32, scope: !16272)
!16281 = !DILocation(line: 4202, column: 54, scope: !16269)
!16282 = !DILocation(line: 4202, column: 59, scope: !16269)
!16283 = !DILocation(line: 4202, column: 52, scope: !16269)
!16284 = !DILocation(line: 4202, column: 4, scope: !16269)
!16285 = distinct !{!16285, !16270, !16286}
!16286 = !DILocation(line: 4205, column: 8, scope: !16262)
!16287 = !DILocation(line: 4207, column: 9, scope: !16288)
!16288 = distinct !DILexicalBlock(scope: !16263, file: !3, line: 4207, column: 8)
!16289 = !DILocation(line: 4207, column: 8, scope: !16263)
!16290 = !DILocation(line: 4208, column: 6, scope: !16288)
!16291 = !DILocation(line: 4210, column: 29, scope: !16263)
!16292 = !DILocation(line: 4210, column: 34, scope: !16263)
!16293 = !DILocation(line: 4210, column: 40, scope: !16263)
!16294 = !DILocation(line: 4210, column: 11, scope: !16263)
!16295 = !DILocation(line: 4210, column: 9, scope: !16263)
!16296 = !DILocation(line: 4211, column: 21, scope: !16263)
!16297 = !DILocation(line: 4211, column: 20, scope: !16263)
!16298 = !DILocation(line: 4211, column: 10, scope: !16263)
!16299 = !DILocation(line: 4211, column: 8, scope: !16263)
!16300 = !DILocation(line: 4212, column: 4, scope: !16263)
!16301 = !DILocation(line: 4213, column: 2, scope: !16263)
!16302 = !DILocation(line: 4215, column: 20, scope: !16303)
!16303 = distinct !DILexicalBlock(scope: !16248, file: !3, line: 4215, column: 7)
!16304 = !DILocation(line: 4215, column: 25, scope: !16303)
!16305 = !DILocation(line: 4215, column: 37, scope: !16303)
!16306 = !DILocation(line: 4215, column: 17, scope: !16303)
!16307 = !DILocation(line: 4215, column: 55, scope: !16303)
!16308 = !DILocation(line: 4215, column: 54, scope: !16303)
!16309 = !DILocation(line: 4215, column: 52, scope: !16303)
!16310 = !DILocation(line: 4215, column: 12, scope: !16303)
!16311 = !DILocation(line: 4216, column: 5, scope: !16312)
!16312 = distinct !DILexicalBlock(scope: !16303, file: !3, line: 4215, column: 7)
!16313 = !DILocation(line: 4215, column: 7, scope: !16303)
!16314 = !DILocation(line: 4218, column: 8, scope: !16315)
!16315 = distinct !DILexicalBlock(scope: !16316, file: !3, line: 4218, column: 8)
!16316 = distinct !DILexicalBlock(scope: !16312, file: !3, line: 4217, column: 2)
!16317 = !DILocation(line: 4218, column: 28, scope: !16315)
!16318 = !DILocation(line: 4219, column: 8, scope: !16315)
!16319 = !DILocation(line: 4219, column: 30, scope: !16315)
!16320 = !DILocation(line: 4219, column: 35, scope: !16315)
!16321 = !DILocation(line: 4219, column: 12, scope: !16315)
!16322 = !DILocation(line: 4218, column: 8, scope: !16316)
!16323 = !DILocation(line: 4221, column: 16, scope: !16324)
!16324 = distinct !DILexicalBlock(scope: !16315, file: !3, line: 4220, column: 6)
!16325 = !DILocation(line: 4221, column: 21, scope: !16324)
!16326 = !DILocation(line: 4221, column: 13, scope: !16324)
!16327 = !DILocation(line: 4222, column: 8, scope: !16324)
!16328 = !DILocation(line: 4225, column: 8, scope: !16329)
!16329 = distinct !DILexicalBlock(scope: !16316, file: !3, line: 4225, column: 8)
!16330 = !DILocation(line: 4225, column: 8, scope: !16316)
!16331 = !DILocation(line: 4226, column: 27, scope: !16329)
!16332 = !DILocation(line: 4226, column: 32, scope: !16329)
!16333 = !DILocation(line: 4226, column: 36, scope: !16329)
!16334 = !DILocation(line: 4226, column: 41, scope: !16329)
!16335 = !DILocation(line: 4226, column: 6, scope: !16329)
!16336 = !DILocation(line: 4227, column: 12, scope: !16316)
!16337 = !DILocation(line: 4227, column: 17, scope: !16316)
!16338 = !DILocation(line: 4227, column: 5, scope: !16316)
!16339 = !DILocation(line: 4227, column: 10, scope: !16316)
!16340 = !DILocation(line: 4231, column: 8, scope: !16341)
!16341 = distinct !DILexicalBlock(scope: !16316, file: !3, line: 4231, column: 8)
!16342 = !DILocation(line: 4231, column: 13, scope: !16341)
!16343 = !DILocation(line: 4231, column: 25, scope: !16341)
!16344 = !DILocation(line: 4231, column: 36, scope: !16341)
!16345 = !DILocation(line: 4231, column: 41, scope: !16341)
!16346 = !DILocation(line: 4231, column: 33, scope: !16341)
!16347 = !DILocation(line: 4231, column: 8, scope: !16316)
!16348 = !DILocation(line: 4233, column: 16, scope: !16349)
!16349 = distinct !DILexicalBlock(scope: !16341, file: !3, line: 4232, column: 6)
!16350 = !DILocation(line: 4234, column: 8, scope: !16349)
!16351 = !DILocation(line: 4234, column: 13, scope: !16349)
!16352 = !DILocation(line: 4234, column: 25, scope: !16349)
!16353 = !DILocation(line: 4234, column: 33, scope: !16349)
!16354 = !DILocation(line: 4235, column: 8, scope: !16349)
!16355 = !DILocation(line: 4235, column: 13, scope: !16349)
!16356 = !DILocation(line: 4235, column: 29, scope: !16349)
!16357 = !DILocation(line: 4236, column: 6, scope: !16349)
!16358 = !DILocation(line: 4237, column: 15, scope: !16316)
!16359 = !DILocation(line: 4237, column: 31, scope: !16316)
!16360 = !DILocation(line: 4237, column: 4, scope: !16316)
!16361 = !DILocation(line: 4238, column: 2, scope: !16316)
!16362 = !DILocation(line: 4216, column: 17, scope: !16312)
!16363 = !DILocation(line: 4216, column: 16, scope: !16312)
!16364 = !DILocation(line: 4216, column: 14, scope: !16312)
!16365 = !DILocation(line: 4215, column: 7, scope: !16312)
!16366 = distinct !{!16366, !16313, !16367}
!16367 = !DILocation(line: 4238, column: 2, scope: !16303)
!16368 = !DILocation(line: 4240, column: 12, scope: !16369)
!16369 = distinct !DILexicalBlock(scope: !16248, file: !3, line: 4240, column: 11)
!16370 = !DILocation(line: 4240, column: 17, scope: !16369)
!16371 = !DILocation(line: 4240, column: 29, scope: !16369)
!16372 = !DILocation(line: 4240, column: 11, scope: !16248)
!16373 = !DILocation(line: 4242, column: 4, scope: !16374)
!16374 = distinct !DILexicalBlock(scope: !16369, file: !3, line: 4241, column: 2)
!16375 = !DILocation(line: 4242, column: 9, scope: !16374)
!16376 = !DILocation(line: 4242, column: 20, scope: !16374)
!16377 = !DILocation(line: 4243, column: 12, scope: !16374)
!16378 = !DILocation(line: 4244, column: 2, scope: !16374)
!16379 = !DILocation(line: 4245, column: 11, scope: !16380)
!16380 = distinct !DILexicalBlock(scope: !16248, file: !3, line: 4245, column: 11)
!16381 = !DILocation(line: 4245, column: 11, scope: !16248)
!16382 = !DILocation(line: 4246, column: 24, scope: !16380)
!16383 = !DILocation(line: 4246, column: 29, scope: !16380)
!16384 = !DILocation(line: 4246, column: 2, scope: !16380)
!16385 = !DILocation(line: 4247, column: 5, scope: !16248)
!16386 = !DILocation(line: 4249, column: 3, scope: !16228)
!16387 = !DILocation(line: 4250, column: 1, scope: !16228)
!16388 = distinct !DISubprogram(name: "mem_dies_at_call", scope: !3, file: !3, line: 4047, type: !4832, scopeLine: 4048, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!16389 = !DILocalVariable(name: "mem", arg: 1, scope: !16388, file: !3, line: 4047, type: !1188)
!16390 = !DILocation(line: 4047, column: 23, scope: !16388)
!16391 = !DILocalVariable(name: "expr", scope: !16388, file: !3, line: 4049, type: !1011)
!16392 = !DILocation(line: 4049, column: 8, scope: !16388)
!16393 = !DILocation(line: 4049, column: 15, scope: !16388)
!16394 = !DILocalVariable(name: "decl", scope: !16388, file: !3, line: 4050, type: !1011)
!16395 = !DILocation(line: 4050, column: 8, scope: !16388)
!16396 = !DILocation(line: 4052, column: 8, scope: !16397)
!16397 = distinct !DILexicalBlock(scope: !16388, file: !3, line: 4052, column: 7)
!16398 = !DILocation(line: 4052, column: 7, scope: !16388)
!16399 = !DILocation(line: 4053, column: 5, scope: !16397)
!16400 = !DILocation(line: 4055, column: 28, scope: !16388)
!16401 = !DILocation(line: 4055, column: 10, scope: !16388)
!16402 = !DILocation(line: 4055, column: 8, scope: !16388)
!16403 = !DILocation(line: 4057, column: 8, scope: !16404)
!16404 = distinct !DILexicalBlock(scope: !16388, file: !3, line: 4057, column: 7)
!16405 = !DILocation(line: 4057, column: 7, scope: !16388)
!16406 = !DILocation(line: 4058, column: 5, scope: !16404)
!16407 = !DILocation(line: 4060, column: 8, scope: !16408)
!16408 = distinct !DILexicalBlock(scope: !16388, file: !3, line: 4060, column: 7)
!16409 = !DILocation(line: 4060, column: 7, scope: !16388)
!16410 = !DILocation(line: 4061, column: 5, scope: !16408)
!16411 = !DILocation(line: 4063, column: 27, scope: !16388)
!16412 = !DILocation(line: 4063, column: 11, scope: !16388)
!16413 = !DILocation(line: 4064, column: 4, scope: !16388)
!16414 = !DILocation(line: 4064, column: 9, scope: !16388)
!16415 = !DILocation(line: 4064, column: 30, scope: !16388)
!16416 = !DILocation(line: 4064, column: 48, scope: !16388)
!16417 = !DILocation(line: 4064, column: 33, scope: !16388)
!16418 = !DILocation(line: 0, scope: !16388)
!16419 = !DILocation(line: 4063, column: 10, scope: !16388)
!16420 = !DILocation(line: 4063, column: 3, scope: !16388)
!16421 = !DILocation(line: 4065, column: 1, scope: !16388)
!16422 = distinct !DISubprogram(name: "find_mem_expr_in_1pdv", scope: !3, file: !3, line: 3998, type: !16423, scopeLine: 3999, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!16423 = !DISubroutineType(types: !16424)
!16424 = !{!2437, !1011, !1188, !1827}
!16425 = !DILocalVariable(name: "expr", arg: 1, scope: !16422, file: !3, line: 3998, type: !1011)
!16426 = !DILocation(line: 3998, column: 29, scope: !16422)
!16427 = !DILocalVariable(name: "val", arg: 2, scope: !16422, file: !3, line: 3998, type: !1188)
!16428 = !DILocation(line: 3998, column: 39, scope: !16422)
!16429 = !DILocalVariable(name: "vars", arg: 3, scope: !16422, file: !3, line: 3998, type: !1827)
!16430 = !DILocation(line: 3998, column: 51, scope: !16422)
!16431 = !DILocalVariable(name: "node", scope: !16422, file: !3, line: 4000, type: !2437)
!16432 = !DILocation(line: 4000, column: 18, scope: !16422)
!16433 = !DILocalVariable(name: "dv", scope: !16422, file: !3, line: 4001, type: !2410)
!16434 = !DILocation(line: 4001, column: 17, scope: !16422)
!16435 = !DILocalVariable(name: "var", scope: !16422, file: !3, line: 4002, type: !2447)
!16436 = !DILocation(line: 4002, column: 12, scope: !16422)
!16437 = !DILocalVariable(name: "where", scope: !16422, file: !3, line: 4003, type: !2437)
!16438 = !DILocation(line: 4003, column: 18, scope: !16422)
!16439 = !DILocation(line: 4005, column: 8, scope: !16440)
!16440 = distinct !DILexicalBlock(scope: !16422, file: !3, line: 4005, column: 7)
!16441 = !DILocation(line: 4005, column: 7, scope: !16422)
!16442 = !DILocation(line: 4006, column: 5, scope: !16440)
!16443 = !DILocation(line: 4008, column: 3, scope: !16422)
!16444 = !DILocation(line: 4010, column: 3, scope: !16422)
!16445 = !DILocation(line: 4012, column: 23, scope: !16422)
!16446 = !DILocation(line: 4012, column: 8, scope: !16422)
!16447 = !DILocation(line: 4012, column: 6, scope: !16422)
!16448 = !DILocation(line: 4013, column: 41, scope: !16422)
!16449 = !DILocation(line: 4013, column: 47, scope: !16422)
!16450 = !DILocation(line: 4013, column: 65, scope: !16422)
!16451 = !DILocation(line: 4013, column: 51, scope: !16422)
!16452 = !DILocation(line: 4013, column: 20, scope: !16422)
!16453 = !DILocation(line: 4013, column: 9, scope: !16422)
!16454 = !DILocation(line: 4013, column: 7, scope: !16422)
!16455 = !DILocation(line: 4015, column: 8, scope: !16456)
!16456 = distinct !DILexicalBlock(scope: !16422, file: !3, line: 4015, column: 7)
!16457 = !DILocation(line: 4015, column: 7, scope: !16422)
!16458 = !DILocation(line: 4016, column: 5, scope: !16456)
!16459 = !DILocation(line: 4018, column: 3, scope: !16422)
!16460 = !DILocation(line: 4020, column: 8, scope: !16461)
!16461 = distinct !DILexicalBlock(scope: !16422, file: !3, line: 4020, column: 7)
!16462 = !DILocation(line: 4020, column: 13, scope: !16461)
!16463 = !DILocation(line: 4020, column: 7, scope: !16422)
!16464 = !DILocation(line: 4021, column: 5, scope: !16461)
!16465 = !DILocation(line: 4023, column: 3, scope: !16422)
!16466 = !DILocation(line: 4025, column: 3, scope: !16422)
!16467 = !DILocation(line: 4025, column: 29, scope: !16422)
!16468 = !DILocation(line: 4027, column: 15, scope: !16469)
!16469 = distinct !DILexicalBlock(scope: !16422, file: !3, line: 4027, column: 3)
!16470 = !DILocation(line: 4027, column: 20, scope: !16469)
!16471 = !DILocation(line: 4027, column: 32, scope: !16469)
!16472 = !DILocation(line: 4027, column: 13, scope: !16469)
!16473 = !DILocation(line: 4027, column: 8, scope: !16469)
!16474 = !DILocation(line: 4027, column: 43, scope: !16475)
!16475 = distinct !DILexicalBlock(scope: !16469, file: !3, line: 4027, column: 3)
!16476 = !DILocation(line: 4027, column: 3, scope: !16469)
!16477 = !DILocation(line: 4028, column: 9, scope: !16478)
!16478 = distinct !DILexicalBlock(scope: !16475, file: !3, line: 4028, column: 9)
!16479 = !DILocation(line: 4028, column: 27, scope: !16478)
!16480 = !DILocation(line: 4028, column: 30, scope: !16478)
!16481 = !DILocation(line: 4028, column: 54, scope: !16478)
!16482 = !DILocation(line: 4028, column: 51, scope: !16478)
!16483 = !DILocation(line: 4029, column: 2, scope: !16478)
!16484 = !DILocation(line: 4029, column: 5, scope: !16478)
!16485 = !DILocation(line: 4029, column: 28, scope: !16478)
!16486 = !DILocation(line: 4028, column: 9, scope: !16475)
!16487 = !DILocation(line: 4031, column: 10, scope: !16488)
!16488 = distinct !DILexicalBlock(scope: !16478, file: !3, line: 4030, column: 7)
!16489 = !DILocation(line: 4031, column: 8, scope: !16488)
!16490 = !DILocation(line: 4032, column: 2, scope: !16488)
!16491 = !DILocation(line: 4034, column: 14, scope: !16492)
!16492 = distinct !DILexicalBlock(scope: !16478, file: !3, line: 4034, column: 14)
!16493 = !DILocation(line: 4034, column: 35, scope: !16492)
!16494 = !DILocation(line: 4035, column: 7, scope: !16492)
!16495 = !DILocation(line: 4035, column: 11, scope: !16492)
!16496 = !DILocation(line: 4036, column: 7, scope: !16492)
!16497 = !DILocation(line: 4036, column: 42, scope: !16492)
!16498 = !DILocation(line: 4036, column: 48, scope: !16492)
!16499 = !DILocation(line: 4036, column: 54, scope: !16492)
!16500 = !DILocation(line: 4036, column: 59, scope: !16492)
!16501 = !DILocation(line: 4036, column: 19, scope: !16492)
!16502 = !DILocation(line: 4036, column: 17, scope: !16492)
!16503 = !DILocation(line: 4034, column: 14, scope: !16478)
!16504 = !DILocation(line: 4037, column: 7, scope: !16492)
!16505 = !DILocation(line: 4029, column: 31, scope: !16478)
!16506 = !DILocation(line: 4027, column: 56, scope: !16475)
!16507 = !DILocation(line: 4027, column: 62, scope: !16475)
!16508 = !DILocation(line: 4027, column: 54, scope: !16475)
!16509 = !DILocation(line: 4027, column: 3, scope: !16475)
!16510 = distinct !{!16510, !16476, !16511}
!16511 = !DILocation(line: 4037, column: 7, scope: !16469)
!16512 = !DILocation(line: 4039, column: 3, scope: !16422)
!16513 = !DILocation(line: 4039, column: 29, scope: !16422)
!16514 = !DILocation(line: 4041, column: 10, scope: !16422)
!16515 = !DILocation(line: 4041, column: 3, scope: !16422)
!16516 = !DILocation(line: 4042, column: 1, scope: !16422)
!16517 = distinct !DISubprogram(name: "may_be_aliased", scope: !16518, file: !16518, line: 586, type: !16519, scopeLine: 587, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!16518 = !DIFile(filename: "./tree-flow-inline.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!16519 = !DISubroutineType(types: !16520)
!16520 = !{!1130, !16521}
!16521 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_tree", file: !1012, line: 59, baseType: !16522)
!16522 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16523, size: 64)
!16523 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1014)
!16524 = !DILocalVariable(name: "var", arg: 1, scope: !16517, file: !16518, line: 586, type: !16521)
!16525 = !DILocation(line: 586, column: 28, scope: !16517)
!16526 = !DILocation(line: 588, column: 11, scope: !16517)
!16527 = !DILocation(line: 588, column: 27, scope: !16517)
!16528 = !DILocation(line: 589, column: 4, scope: !16517)
!16529 = !DILocation(line: 589, column: 10, scope: !16517)
!16530 = !DILocation(line: 589, column: 28, scope: !16517)
!16531 = !DILocation(line: 589, column: 31, scope: !16517)
!16532 = !DILocation(line: 589, column: 49, scope: !16517)
!16533 = !DILocation(line: 589, column: 52, scope: !16517)
!16534 = !DILocation(line: 590, column: 9, scope: !16517)
!16535 = !DILocation(line: 590, column: 12, scope: !16517)
!16536 = !DILocation(line: 591, column: 9, scope: !16517)
!16537 = !DILocation(line: 591, column: 13, scope: !16517)
!16538 = !DILocation(line: 592, column: 4, scope: !16517)
!16539 = !DILocation(line: 592, column: 8, scope: !16517)
!16540 = !DILocation(line: 593, column: 8, scope: !16517)
!16541 = !DILocation(line: 593, column: 11, scope: !16517)
!16542 = !DILocation(line: 594, column: 8, scope: !16517)
!16543 = !DILocation(line: 594, column: 11, scope: !16517)
!16544 = !DILocation(line: 0, scope: !16517)
!16545 = !DILocation(line: 588, column: 10, scope: !16517)
!16546 = !DILocation(line: 588, column: 3, scope: !16517)
!16547 = distinct !DISubprogram(name: "is_global_var", scope: !16518, file: !16518, line: 575, type: !16519, scopeLine: 576, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!16548 = !DILocalVariable(name: "t", arg: 1, scope: !16547, file: !16518, line: 575, type: !16521)
!16549 = !DILocation(line: 575, column: 27, scope: !16547)
!16550 = !DILocation(line: 577, column: 11, scope: !16547)
!16551 = !DILocation(line: 577, column: 27, scope: !16547)
!16552 = !DILocation(line: 577, column: 30, scope: !16547)
!16553 = !DILocation(line: 577, column: 10, scope: !16547)
!16554 = !DILocation(line: 577, column: 3, scope: !16547)
!16555 = distinct !DISubprogram(name: "get_init_value", scope: !3, file: !3, line: 1622, type: !16556, scopeLine: 1623, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!16556 = !DISubroutineType(types: !16557)
!16557 = !{!734, !2418, !1188, !2410}
!16558 = !DILocalVariable(name: "set", arg: 1, scope: !16555, file: !3, line: 1622, type: !2418)
!16559 = !DILocation(line: 1622, column: 31, scope: !16555)
!16560 = !DILocalVariable(name: "loc", arg: 2, scope: !16555, file: !3, line: 1622, type: !1188)
!16561 = !DILocation(line: 1622, column: 40, scope: !16555)
!16562 = !DILocalVariable(name: "dv", arg: 3, scope: !16555, file: !3, line: 1622, type: !2410)
!16563 = !DILocation(line: 1622, column: 59, scope: !16555)
!16564 = !DILocalVariable(name: "var", scope: !16555, file: !3, line: 1624, type: !2447)
!16565 = !DILocation(line: 1624, column: 12, scope: !16555)
!16566 = !DILocalVariable(name: "i", scope: !16555, file: !3, line: 1625, type: !1010)
!16567 = !DILocation(line: 1625, column: 7, scope: !16555)
!16568 = !DILocalVariable(name: "ret_val", scope: !16555, file: !3, line: 1626, type: !734)
!16569 = !DILocation(line: 1626, column: 24, scope: !16555)
!16570 = !DILocation(line: 1628, column: 9, scope: !16571)
!16571 = distinct !DILexicalBlock(scope: !16555, file: !3, line: 1628, column: 7)
!16572 = !DILocation(line: 1628, column: 7, scope: !16555)
!16573 = !DILocation(line: 1629, column: 5, scope: !16571)
!16574 = !DILocation(line: 1631, column: 27, scope: !16555)
!16575 = !DILocation(line: 1631, column: 32, scope: !16555)
!16576 = !DILocation(line: 1631, column: 38, scope: !16555)
!16577 = !DILocation(line: 1631, column: 9, scope: !16555)
!16578 = !DILocation(line: 1631, column: 7, scope: !16555)
!16579 = !DILocation(line: 1632, column: 7, scope: !16580)
!16580 = distinct !DILexicalBlock(scope: !16555, file: !3, line: 1632, column: 7)
!16581 = !DILocation(line: 1632, column: 7, scope: !16555)
!16582 = !DILocation(line: 1634, column: 14, scope: !16583)
!16583 = distinct !DILexicalBlock(scope: !16584, file: !3, line: 1634, column: 7)
!16584 = distinct !DILexicalBlock(scope: !16580, file: !3, line: 1633, column: 5)
!16585 = !DILocation(line: 1634, column: 12, scope: !16583)
!16586 = !DILocation(line: 1634, column: 19, scope: !16587)
!16587 = distinct !DILexicalBlock(scope: !16583, file: !3, line: 1634, column: 7)
!16588 = !DILocation(line: 1634, column: 23, scope: !16587)
!16589 = !DILocation(line: 1634, column: 28, scope: !16587)
!16590 = !DILocation(line: 1634, column: 21, scope: !16587)
!16591 = !DILocation(line: 1634, column: 40, scope: !16587)
!16592 = !DILocation(line: 1634, column: 43, scope: !16587)
!16593 = !DILocation(line: 1634, column: 51, scope: !16587)
!16594 = !DILocation(line: 0, scope: !16587)
!16595 = !DILocation(line: 1634, column: 7, scope: !16583)
!16596 = !DILocalVariable(name: "nextp", scope: !16597, file: !3, line: 1636, type: !2437)
!16597 = distinct !DILexicalBlock(scope: !16587, file: !3, line: 1635, column: 2)
!16598 = !DILocation(line: 1636, column: 19, scope: !16597)
!16599 = !DILocation(line: 1637, column: 17, scope: !16600)
!16600 = distinct !DILexicalBlock(scope: !16597, file: !3, line: 1637, column: 4)
!16601 = !DILocation(line: 1637, column: 22, scope: !16600)
!16602 = !DILocation(line: 1637, column: 31, scope: !16600)
!16603 = !DILocation(line: 1637, column: 34, scope: !16600)
!16604 = !DILocation(line: 1637, column: 15, scope: !16600)
!16605 = !DILocation(line: 1637, column: 9, scope: !16600)
!16606 = !DILocation(line: 1637, column: 45, scope: !16607)
!16607 = distinct !DILexicalBlock(scope: !16600, file: !3, line: 1637, column: 4)
!16608 = !DILocation(line: 1637, column: 4, scope: !16600)
!16609 = !DILocation(line: 1638, column: 23, scope: !16610)
!16610 = distinct !DILexicalBlock(scope: !16607, file: !3, line: 1638, column: 10)
!16611 = !DILocation(line: 1638, column: 30, scope: !16610)
!16612 = !DILocation(line: 1638, column: 35, scope: !16610)
!16613 = !DILocation(line: 1638, column: 10, scope: !16610)
!16614 = !DILocation(line: 1638, column: 10, scope: !16607)
!16615 = !DILocation(line: 1640, column: 13, scope: !16616)
!16616 = distinct !DILexicalBlock(scope: !16610, file: !3, line: 1639, column: 8)
!16617 = !DILocation(line: 1640, column: 20, scope: !16616)
!16618 = !DILocation(line: 1640, column: 11, scope: !16616)
!16619 = !DILocation(line: 1641, column: 3, scope: !16616)
!16620 = !DILocation(line: 1638, column: 38, scope: !16610)
!16621 = !DILocation(line: 1637, column: 60, scope: !16607)
!16622 = !DILocation(line: 1637, column: 67, scope: !16607)
!16623 = !DILocation(line: 1637, column: 58, scope: !16607)
!16624 = !DILocation(line: 1637, column: 4, scope: !16607)
!16625 = distinct !{!16625, !16608, !16626}
!16626 = !DILocation(line: 1642, column: 8, scope: !16600)
!16627 = !DILocation(line: 1643, column: 2, scope: !16597)
!16628 = !DILocation(line: 1634, column: 80, scope: !16587)
!16629 = !DILocation(line: 1634, column: 7, scope: !16587)
!16630 = distinct !{!16630, !16595, !16631}
!16631 = !DILocation(line: 1643, column: 2, scope: !16583)
!16632 = !DILocation(line: 1644, column: 5, scope: !16584)
!16633 = !DILocation(line: 1646, column: 10, scope: !16555)
!16634 = !DILocation(line: 1646, column: 3, scope: !16555)
!16635 = !DILocation(line: 1647, column: 1, scope: !16555)
!16636 = distinct !DISubprogram(name: "dataflow_set_different_1", scope: !3, file: !3, line: 4370, type: !6290, scopeLine: 4371, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!16637 = !DILocalVariable(name: "slot", arg: 1, scope: !16636, file: !3, line: 4370, type: !1848)
!16638 = !DILocation(line: 4370, column: 34, scope: !16636)
!16639 = !DILocalVariable(name: "data", arg: 2, scope: !16636, file: !3, line: 4370, type: !1313)
!16640 = !DILocation(line: 4370, column: 46, scope: !16636)
!16641 = !DILocalVariable(name: "htab", scope: !16636, file: !3, line: 4372, type: !1827)
!16642 = !DILocation(line: 4372, column: 10, scope: !16636)
!16643 = !DILocation(line: 4372, column: 26, scope: !16636)
!16644 = !DILocation(line: 4372, column: 17, scope: !16636)
!16645 = !DILocalVariable(name: "var1", scope: !16636, file: !3, line: 4373, type: !2447)
!16646 = !DILocation(line: 4373, column: 12, scope: !16636)
!16647 = !DILocalVariable(name: "var2", scope: !16636, file: !3, line: 4373, type: !2447)
!16648 = !DILocation(line: 4373, column: 18, scope: !16636)
!16649 = !DILocation(line: 4375, column: 22, scope: !16636)
!16650 = !DILocation(line: 4375, column: 21, scope: !16636)
!16651 = !DILocation(line: 4375, column: 10, scope: !16636)
!16652 = !DILocation(line: 4375, column: 8, scope: !16636)
!16653 = !DILocation(line: 4376, column: 42, scope: !16636)
!16654 = !DILocation(line: 4376, column: 48, scope: !16636)
!16655 = !DILocation(line: 4376, column: 54, scope: !16636)
!16656 = !DILocation(line: 4377, column: 21, scope: !16636)
!16657 = !DILocation(line: 4377, column: 27, scope: !16636)
!16658 = !DILocation(line: 4377, column: 7, scope: !16636)
!16659 = !DILocation(line: 4376, column: 21, scope: !16636)
!16660 = !DILocation(line: 4376, column: 10, scope: !16636)
!16661 = !DILocation(line: 4376, column: 8, scope: !16636)
!16662 = !DILocation(line: 4378, column: 8, scope: !16663)
!16663 = distinct !DILexicalBlock(scope: !16636, file: !3, line: 4378, column: 7)
!16664 = !DILocation(line: 4378, column: 7, scope: !16636)
!16665 = !DILocation(line: 4380, column: 36, scope: !16666)
!16666 = distinct !DILexicalBlock(scope: !16663, file: !3, line: 4379, column: 5)
!16667 = !DILocation(line: 4382, column: 11, scope: !16668)
!16668 = distinct !DILexicalBlock(scope: !16666, file: !3, line: 4382, column: 11)
!16669 = !DILocation(line: 4382, column: 21, scope: !16668)
!16670 = !DILocation(line: 4382, column: 25, scope: !16668)
!16671 = !DILocation(line: 4382, column: 36, scope: !16668)
!16672 = !DILocation(line: 4382, column: 11, scope: !16666)
!16673 = !DILocation(line: 4384, column: 13, scope: !16674)
!16674 = distinct !DILexicalBlock(scope: !16668, file: !3, line: 4383, column: 2)
!16675 = !DILocation(line: 4384, column: 4, scope: !16674)
!16676 = !DILocation(line: 4385, column: 14, scope: !16674)
!16677 = !DILocation(line: 4385, column: 4, scope: !16674)
!16678 = !DILocation(line: 4386, column: 2, scope: !16674)
!16679 = !DILocation(line: 4389, column: 7, scope: !16666)
!16680 = !DILocation(line: 4392, column: 29, scope: !16681)
!16681 = distinct !DILexicalBlock(scope: !16636, file: !3, line: 4392, column: 7)
!16682 = !DILocation(line: 4392, column: 35, scope: !16681)
!16683 = !DILocation(line: 4392, column: 7, scope: !16681)
!16684 = !DILocation(line: 4392, column: 7, scope: !16636)
!16685 = !DILocation(line: 4394, column: 36, scope: !16686)
!16686 = distinct !DILexicalBlock(scope: !16681, file: !3, line: 4393, column: 5)
!16687 = !DILocation(line: 4396, column: 11, scope: !16688)
!16688 = distinct !DILexicalBlock(scope: !16686, file: !3, line: 4396, column: 11)
!16689 = !DILocation(line: 4396, column: 21, scope: !16688)
!16690 = !DILocation(line: 4396, column: 25, scope: !16688)
!16691 = !DILocation(line: 4396, column: 36, scope: !16688)
!16692 = !DILocation(line: 4396, column: 11, scope: !16686)
!16693 = !DILocation(line: 4398, column: 13, scope: !16694)
!16694 = distinct !DILexicalBlock(scope: !16688, file: !3, line: 4397, column: 2)
!16695 = !DILocation(line: 4398, column: 4, scope: !16694)
!16696 = !DILocation(line: 4399, column: 14, scope: !16694)
!16697 = !DILocation(line: 4399, column: 4, scope: !16694)
!16698 = !DILocation(line: 4400, column: 14, scope: !16694)
!16699 = !DILocation(line: 4400, column: 4, scope: !16694)
!16700 = !DILocation(line: 4401, column: 2, scope: !16694)
!16701 = !DILocation(line: 4404, column: 7, scope: !16686)
!16702 = !DILocation(line: 4408, column: 3, scope: !16636)
!16703 = !DILocation(line: 4409, column: 1, scope: !16636)
!16704 = distinct !DISubprogram(name: "dump_var", scope: !3, file: !3, line: 6166, type: !14629, scopeLine: 6167, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!16705 = !DILocalVariable(name: "var", arg: 1, scope: !16704, file: !3, line: 6166, type: !2447)
!16706 = !DILocation(line: 6166, column: 20, scope: !16704)
!16707 = !DILocalVariable(name: "i", scope: !16704, file: !3, line: 6168, type: !1010)
!16708 = !DILocation(line: 6168, column: 7, scope: !16704)
!16709 = !DILocalVariable(name: "node", scope: !16704, file: !3, line: 6169, type: !2437)
!16710 = !DILocation(line: 6169, column: 18, scope: !16704)
!16711 = !DILocation(line: 6171, column: 21, scope: !16712)
!16712 = distinct !DILexicalBlock(scope: !16704, file: !3, line: 6171, column: 7)
!16713 = !DILocation(line: 6171, column: 26, scope: !16712)
!16714 = !DILocation(line: 6171, column: 7, scope: !16712)
!16715 = !DILocation(line: 6171, column: 7, scope: !16704)
!16716 = !DILocalVariable(name: "decl", scope: !16717, file: !3, line: 6173, type: !16521)
!16717 = distinct !DILexicalBlock(scope: !16712, file: !3, line: 6172, column: 5)
!16718 = !DILocation(line: 6173, column: 18, scope: !16717)
!16719 = !DILocation(line: 6173, column: 37, scope: !16717)
!16720 = !DILocation(line: 6173, column: 42, scope: !16717)
!16721 = !DILocation(line: 6173, column: 25, scope: !16717)
!16722 = !DILocation(line: 6175, column: 11, scope: !16723)
!16723 = distinct !DILexicalBlock(scope: !16717, file: !3, line: 6175, column: 11)
!16724 = !DILocation(line: 6175, column: 11, scope: !16717)
!16725 = !DILocation(line: 6177, column: 13, scope: !16726)
!16726 = distinct !DILexicalBlock(scope: !16723, file: !3, line: 6176, column: 2)
!16727 = !DILocation(line: 6178, column: 6, scope: !16726)
!16728 = !DILocation(line: 6177, column: 4, scope: !16726)
!16729 = !DILocation(line: 6179, column: 8, scope: !16730)
!16730 = distinct !DILexicalBlock(scope: !16726, file: !3, line: 6179, column: 8)
!16731 = !DILocation(line: 6179, column: 19, scope: !16730)
!16732 = !DILocation(line: 6179, column: 8, scope: !16726)
!16733 = !DILocation(line: 6180, column: 15, scope: !16730)
!16734 = !DILocation(line: 6180, column: 34, scope: !16730)
!16735 = !DILocation(line: 6180, column: 6, scope: !16730)
!16736 = !DILocation(line: 6181, column: 2, scope: !16726)
!16737 = !DILocation(line: 6182, column: 16, scope: !16738)
!16738 = distinct !DILexicalBlock(scope: !16723, file: !3, line: 6182, column: 16)
!16739 = !DILocation(line: 6182, column: 33, scope: !16738)
!16740 = !DILocation(line: 6182, column: 16, scope: !16723)
!16741 = !DILocation(line: 6183, column: 11, scope: !16738)
!16742 = !DILocation(line: 6183, column: 38, scope: !16738)
!16743 = !DILocation(line: 6183, column: 2, scope: !16738)
!16744 = !DILocation(line: 6185, column: 11, scope: !16738)
!16745 = !DILocation(line: 6185, column: 38, scope: !16738)
!16746 = !DILocation(line: 6185, column: 2, scope: !16738)
!16747 = !DILocation(line: 6186, column: 16, scope: !16717)
!16748 = !DILocation(line: 6186, column: 7, scope: !16717)
!16749 = !DILocation(line: 6187, column: 5, scope: !16717)
!16750 = !DILocation(line: 6190, column: 19, scope: !16751)
!16751 = distinct !DILexicalBlock(scope: !16712, file: !3, line: 6189, column: 5)
!16752 = !DILocation(line: 6190, column: 7, scope: !16751)
!16753 = !DILocation(line: 6191, column: 25, scope: !16751)
!16754 = !DILocation(line: 6191, column: 49, scope: !16751)
!16755 = !DILocation(line: 6191, column: 54, scope: !16751)
!16756 = !DILocation(line: 6191, column: 36, scope: !16751)
!16757 = !DILocation(line: 6191, column: 7, scope: !16751)
!16758 = !DILocation(line: 6194, column: 10, scope: !16759)
!16759 = distinct !DILexicalBlock(scope: !16704, file: !3, line: 6194, column: 3)
!16760 = !DILocation(line: 6194, column: 8, scope: !16759)
!16761 = !DILocation(line: 6194, column: 15, scope: !16762)
!16762 = distinct !DILexicalBlock(scope: !16759, file: !3, line: 6194, column: 3)
!16763 = !DILocation(line: 6194, column: 19, scope: !16762)
!16764 = !DILocation(line: 6194, column: 24, scope: !16762)
!16765 = !DILocation(line: 6194, column: 17, scope: !16762)
!16766 = !DILocation(line: 6194, column: 3, scope: !16759)
!16767 = !DILocation(line: 6196, column: 16, scope: !16768)
!16768 = distinct !DILexicalBlock(scope: !16762, file: !3, line: 6195, column: 5)
!16769 = !DILocation(line: 6197, column: 16, scope: !16768)
!16770 = !DILocation(line: 6197, column: 21, scope: !16768)
!16771 = !DILocation(line: 6197, column: 30, scope: !16768)
!16772 = !DILocation(line: 6197, column: 33, scope: !16768)
!16773 = !DILocation(line: 6196, column: 7, scope: !16768)
!16774 = !DILocation(line: 6198, column: 19, scope: !16775)
!16775 = distinct !DILexicalBlock(scope: !16768, file: !3, line: 6198, column: 7)
!16776 = !DILocation(line: 6198, column: 24, scope: !16775)
!16777 = !DILocation(line: 6198, column: 33, scope: !16775)
!16778 = !DILocation(line: 6198, column: 36, scope: !16775)
!16779 = !DILocation(line: 6198, column: 17, scope: !16775)
!16780 = !DILocation(line: 6198, column: 12, scope: !16775)
!16781 = !DILocation(line: 6198, column: 47, scope: !16782)
!16782 = distinct !DILexicalBlock(scope: !16775, file: !3, line: 6198, column: 7)
!16783 = !DILocation(line: 6198, column: 7, scope: !16775)
!16784 = !DILocation(line: 6200, column: 13, scope: !16785)
!16785 = distinct !DILexicalBlock(scope: !16782, file: !3, line: 6199, column: 2)
!16786 = !DILocation(line: 6200, column: 4, scope: !16785)
!16787 = !DILocation(line: 6201, column: 8, scope: !16788)
!16788 = distinct !DILexicalBlock(scope: !16785, file: !3, line: 6201, column: 8)
!16789 = !DILocation(line: 6201, column: 14, scope: !16788)
!16790 = !DILocation(line: 6201, column: 19, scope: !16788)
!16791 = !DILocation(line: 6201, column: 8, scope: !16785)
!16792 = !DILocation(line: 6202, column: 15, scope: !16788)
!16793 = !DILocation(line: 6202, column: 6, scope: !16788)
!16794 = !DILocation(line: 6203, column: 22, scope: !16785)
!16795 = !DILocation(line: 6203, column: 33, scope: !16785)
!16796 = !DILocation(line: 6203, column: 39, scope: !16785)
!16797 = !DILocation(line: 6203, column: 4, scope: !16785)
!16798 = !DILocation(line: 6204, column: 2, scope: !16785)
!16799 = !DILocation(line: 6198, column: 60, scope: !16782)
!16800 = !DILocation(line: 6198, column: 66, scope: !16782)
!16801 = !DILocation(line: 6198, column: 58, scope: !16782)
!16802 = !DILocation(line: 6198, column: 7, scope: !16782)
!16803 = distinct !{!16803, !16783, !16804}
!16804 = !DILocation(line: 6204, column: 2, scope: !16775)
!16805 = !DILocation(line: 6205, column: 5, scope: !16768)
!16806 = !DILocation(line: 6194, column: 38, scope: !16762)
!16807 = !DILocation(line: 6194, column: 3, scope: !16762)
!16808 = distinct !{!16808, !16766, !16809}
!16809 = !DILocation(line: 6205, column: 5, scope: !16759)
!16810 = !DILocation(line: 6206, column: 1, scope: !16704)
!16811 = distinct !DISubprogram(name: "variable_different_p", scope: !3, file: !3, line: 4337, type: !12534, scopeLine: 4338, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!16812 = !DILocalVariable(name: "var1", arg: 1, scope: !16811, file: !3, line: 4337, type: !2447)
!16813 = !DILocation(line: 4337, column: 32, scope: !16811)
!16814 = !DILocalVariable(name: "var2", arg: 2, scope: !16811, file: !3, line: 4337, type: !2447)
!16815 = !DILocation(line: 4337, column: 47, scope: !16811)
!16816 = !DILocalVariable(name: "i", scope: !16811, file: !3, line: 4339, type: !1010)
!16817 = !DILocation(line: 4339, column: 7, scope: !16811)
!16818 = !DILocation(line: 4341, column: 7, scope: !16819)
!16819 = distinct !DILexicalBlock(scope: !16811, file: !3, line: 4341, column: 7)
!16820 = !DILocation(line: 4341, column: 15, scope: !16819)
!16821 = !DILocation(line: 4341, column: 12, scope: !16819)
!16822 = !DILocation(line: 4341, column: 7, scope: !16811)
!16823 = !DILocation(line: 4342, column: 5, scope: !16819)
!16824 = !DILocation(line: 4344, column: 7, scope: !16825)
!16825 = distinct !DILexicalBlock(scope: !16811, file: !3, line: 4344, column: 7)
!16826 = !DILocation(line: 4344, column: 13, scope: !16825)
!16827 = !DILocation(line: 4344, column: 28, scope: !16825)
!16828 = !DILocation(line: 4344, column: 34, scope: !16825)
!16829 = !DILocation(line: 4344, column: 25, scope: !16825)
!16830 = !DILocation(line: 4344, column: 7, scope: !16811)
!16831 = !DILocation(line: 4345, column: 5, scope: !16825)
!16832 = !DILocation(line: 4347, column: 10, scope: !16833)
!16833 = distinct !DILexicalBlock(scope: !16811, file: !3, line: 4347, column: 3)
!16834 = !DILocation(line: 4347, column: 8, scope: !16833)
!16835 = !DILocation(line: 4347, column: 15, scope: !16836)
!16836 = distinct !DILexicalBlock(scope: !16833, file: !3, line: 4347, column: 3)
!16837 = !DILocation(line: 4347, column: 19, scope: !16836)
!16838 = !DILocation(line: 4347, column: 25, scope: !16836)
!16839 = !DILocation(line: 4347, column: 17, scope: !16836)
!16840 = !DILocation(line: 4347, column: 3, scope: !16833)
!16841 = !DILocation(line: 4349, column: 11, scope: !16842)
!16842 = distinct !DILexicalBlock(scope: !16843, file: !3, line: 4349, column: 11)
!16843 = distinct !DILexicalBlock(scope: !16836, file: !3, line: 4348, column: 5)
!16844 = !DILocation(line: 4349, column: 17, scope: !16842)
!16845 = !DILocation(line: 4349, column: 26, scope: !16842)
!16846 = !DILocation(line: 4349, column: 29, scope: !16842)
!16847 = !DILocation(line: 4349, column: 39, scope: !16842)
!16848 = !DILocation(line: 4349, column: 45, scope: !16842)
!16849 = !DILocation(line: 4349, column: 54, scope: !16842)
!16850 = !DILocation(line: 4349, column: 57, scope: !16842)
!16851 = !DILocation(line: 4349, column: 36, scope: !16842)
!16852 = !DILocation(line: 4349, column: 11, scope: !16843)
!16853 = !DILocation(line: 4350, column: 2, scope: !16842)
!16854 = !DILocation(line: 4352, column: 11, scope: !16855)
!16855 = distinct !DILexicalBlock(scope: !16843, file: !3, line: 4352, column: 11)
!16856 = !DILocation(line: 4352, column: 13, scope: !16855)
!16857 = !DILocation(line: 4352, column: 18, scope: !16855)
!16858 = !DILocation(line: 4352, column: 21, scope: !16855)
!16859 = !DILocation(line: 4352, column: 27, scope: !16855)
!16860 = !DILocation(line: 4352, column: 36, scope: !16855)
!16861 = !DILocation(line: 4352, column: 39, scope: !16855)
!16862 = !DILocation(line: 4352, column: 46, scope: !16855)
!16863 = !DILocation(line: 4352, column: 51, scope: !16855)
!16864 = !DILocation(line: 4352, column: 68, scope: !16855)
!16865 = !DILocation(line: 4352, column: 74, scope: !16855)
!16866 = !DILocation(line: 4352, column: 54, scope: !16855)
!16867 = !DILocation(line: 4352, column: 11, scope: !16843)
!16868 = !DILocation(line: 4354, column: 4, scope: !16869)
!16869 = distinct !DILexicalBlock(scope: !16855, file: !3, line: 4353, column: 2)
!16870 = !DILocation(line: 4355, column: 4, scope: !16869)
!16871 = !DILocation(line: 4356, column: 41, scope: !16869)
!16872 = !DILocation(line: 4356, column: 47, scope: !16869)
!16873 = !DILocation(line: 4356, column: 11, scope: !16869)
!16874 = !DILocation(line: 4356, column: 4, scope: !16869)
!16875 = !DILocation(line: 4358, column: 39, scope: !16876)
!16876 = distinct !DILexicalBlock(scope: !16843, file: !3, line: 4358, column: 11)
!16877 = !DILocation(line: 4358, column: 45, scope: !16876)
!16878 = !DILocation(line: 4358, column: 54, scope: !16876)
!16879 = !DILocation(line: 4358, column: 59, scope: !16876)
!16880 = !DILocation(line: 4358, column: 65, scope: !16876)
!16881 = !DILocation(line: 4358, column: 74, scope: !16876)
!16882 = !DILocation(line: 4358, column: 11, scope: !16876)
!16883 = !DILocation(line: 4358, column: 11, scope: !16843)
!16884 = !DILocation(line: 4359, column: 2, scope: !16876)
!16885 = !DILocation(line: 4360, column: 39, scope: !16886)
!16886 = distinct !DILexicalBlock(scope: !16843, file: !3, line: 4360, column: 11)
!16887 = !DILocation(line: 4360, column: 45, scope: !16886)
!16888 = !DILocation(line: 4360, column: 54, scope: !16886)
!16889 = !DILocation(line: 4360, column: 59, scope: !16886)
!16890 = !DILocation(line: 4360, column: 65, scope: !16886)
!16891 = !DILocation(line: 4360, column: 74, scope: !16886)
!16892 = !DILocation(line: 4360, column: 11, scope: !16886)
!16893 = !DILocation(line: 4360, column: 11, scope: !16843)
!16894 = !DILocation(line: 4361, column: 2, scope: !16886)
!16895 = !DILocation(line: 4362, column: 5, scope: !16843)
!16896 = !DILocation(line: 4347, column: 39, scope: !16836)
!16897 = !DILocation(line: 4347, column: 3, scope: !16836)
!16898 = distinct !{!16898, !16840, !16899}
!16899 = !DILocation(line: 4362, column: 5, scope: !16833)
!16900 = !DILocation(line: 4363, column: 3, scope: !16811)
!16901 = !DILocation(line: 4364, column: 1, scope: !16811)
!16902 = distinct !DISubprogram(name: "variable_part_different_p", scope: !3, file: !3, line: 4281, type: !16903, scopeLine: 4282, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!16903 = !DISubroutineType(types: !16904)
!16904 = !{!1130, !16905, !16905}
!16905 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2433, size: 64)
!16906 = !DILocalVariable(name: "vp1", arg: 1, scope: !16902, file: !3, line: 4281, type: !16905)
!16907 = !DILocation(line: 4281, column: 43, scope: !16902)
!16908 = !DILocalVariable(name: "vp2", arg: 2, scope: !16902, file: !3, line: 4281, type: !16905)
!16909 = !DILocation(line: 4281, column: 63, scope: !16902)
!16910 = !DILocalVariable(name: "lc1", scope: !16902, file: !3, line: 4283, type: !2437)
!16911 = !DILocation(line: 4283, column: 18, scope: !16902)
!16912 = !DILocalVariable(name: "lc2", scope: !16902, file: !3, line: 4283, type: !2437)
!16913 = !DILocation(line: 4283, column: 23, scope: !16902)
!16914 = !DILocation(line: 4285, column: 14, scope: !16915)
!16915 = distinct !DILexicalBlock(scope: !16902, file: !3, line: 4285, column: 3)
!16916 = !DILocation(line: 4285, column: 19, scope: !16915)
!16917 = !DILocation(line: 4285, column: 12, scope: !16915)
!16918 = !DILocation(line: 4285, column: 8, scope: !16915)
!16919 = !DILocation(line: 4285, column: 30, scope: !16920)
!16920 = distinct !DILexicalBlock(scope: !16915, file: !3, line: 4285, column: 3)
!16921 = !DILocation(line: 4285, column: 3, scope: !16915)
!16922 = !DILocation(line: 4287, column: 18, scope: !16923)
!16923 = distinct !DILexicalBlock(scope: !16924, file: !3, line: 4287, column: 7)
!16924 = distinct !DILexicalBlock(scope: !16920, file: !3, line: 4286, column: 5)
!16925 = !DILocation(line: 4287, column: 23, scope: !16923)
!16926 = !DILocation(line: 4287, column: 16, scope: !16923)
!16927 = !DILocation(line: 4287, column: 12, scope: !16923)
!16928 = !DILocation(line: 4287, column: 34, scope: !16929)
!16929 = distinct !DILexicalBlock(scope: !16923, file: !3, line: 4287, column: 7)
!16930 = !DILocation(line: 4287, column: 7, scope: !16923)
!16931 = !DILocation(line: 4289, column: 8, scope: !16932)
!16932 = distinct !DILexicalBlock(scope: !16933, file: !3, line: 4289, column: 8)
!16933 = distinct !DILexicalBlock(scope: !16929, file: !3, line: 4288, column: 2)
!16934 = !DILocation(line: 4289, column: 25, scope: !16932)
!16935 = !DILocation(line: 4289, column: 28, scope: !16932)
!16936 = !DILocation(line: 4289, column: 8, scope: !16933)
!16937 = !DILocation(line: 4291, column: 12, scope: !16938)
!16938 = distinct !DILexicalBlock(scope: !16939, file: !3, line: 4291, column: 12)
!16939 = distinct !DILexicalBlock(scope: !16932, file: !3, line: 4290, column: 6)
!16940 = !DILocation(line: 4291, column: 32, scope: !16938)
!16941 = !DILocation(line: 4291, column: 29, scope: !16938)
!16942 = !DILocation(line: 4291, column: 12, scope: !16939)
!16943 = !DILocation(line: 4292, column: 3, scope: !16938)
!16944 = !DILocation(line: 4293, column: 6, scope: !16939)
!16945 = !DILocation(line: 4294, column: 21, scope: !16946)
!16946 = distinct !DILexicalBlock(scope: !16933, file: !3, line: 4294, column: 8)
!16947 = !DILocation(line: 4294, column: 26, scope: !16946)
!16948 = !DILocation(line: 4294, column: 31, scope: !16946)
!16949 = !DILocation(line: 4294, column: 36, scope: !16946)
!16950 = !DILocation(line: 4294, column: 8, scope: !16946)
!16951 = !DILocation(line: 4294, column: 8, scope: !16933)
!16952 = !DILocation(line: 4295, column: 6, scope: !16946)
!16953 = !DILocation(line: 4296, column: 2, scope: !16933)
!16954 = !DILocation(line: 4287, column: 45, scope: !16929)
!16955 = !DILocation(line: 4287, column: 50, scope: !16929)
!16956 = !DILocation(line: 4287, column: 43, scope: !16929)
!16957 = !DILocation(line: 4287, column: 7, scope: !16929)
!16958 = distinct !{!16958, !16930, !16959}
!16959 = !DILocation(line: 4296, column: 2, scope: !16923)
!16960 = !DILocation(line: 4297, column: 12, scope: !16961)
!16961 = distinct !DILexicalBlock(scope: !16924, file: !3, line: 4297, column: 11)
!16962 = !DILocation(line: 4297, column: 11, scope: !16924)
!16963 = !DILocation(line: 4298, column: 2, scope: !16961)
!16964 = !DILocation(line: 4299, column: 5, scope: !16924)
!16965 = !DILocation(line: 4285, column: 41, scope: !16920)
!16966 = !DILocation(line: 4285, column: 46, scope: !16920)
!16967 = !DILocation(line: 4285, column: 39, scope: !16920)
!16968 = !DILocation(line: 4285, column: 3, scope: !16920)
!16969 = distinct !{!16969, !16921, !16970}
!16970 = !DILocation(line: 4299, column: 5, scope: !16915)
!16971 = !DILocation(line: 4300, column: 3, scope: !16902)
!16972 = !DILocation(line: 4301, column: 1, scope: !16902)
!16973 = distinct !DISubprogram(name: "dump_attrs_list", scope: !3, file: !3, line: 6137, type: !16974, scopeLine: 6138, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!16974 = !DISubroutineType(types: !16975)
!16975 = !{null, !2403}
!16976 = !DILocalVariable(name: "list", arg: 1, scope: !16973, file: !3, line: 6137, type: !2403)
!16977 = !DILocation(line: 6137, column: 24, scope: !16973)
!16978 = !DILocation(line: 6139, column: 3, scope: !16973)
!16979 = !DILocation(line: 6139, column: 10, scope: !16980)
!16980 = distinct !DILexicalBlock(scope: !16981, file: !3, line: 6139, column: 3)
!16981 = distinct !DILexicalBlock(scope: !16973, file: !3, line: 6139, column: 3)
!16982 = !DILocation(line: 6139, column: 3, scope: !16981)
!16983 = !DILocation(line: 6141, column: 25, scope: !16984)
!16984 = distinct !DILexicalBlock(scope: !16985, file: !3, line: 6141, column: 11)
!16985 = distinct !DILexicalBlock(scope: !16980, file: !3, line: 6140, column: 5)
!16986 = !DILocation(line: 6141, column: 31, scope: !16984)
!16987 = !DILocation(line: 6141, column: 11, scope: !16984)
!16988 = !DILocation(line: 6141, column: 11, scope: !16985)
!16989 = !DILocation(line: 6142, column: 18, scope: !16984)
!16990 = !DILocation(line: 6142, column: 41, scope: !16984)
!16991 = !DILocation(line: 6142, column: 47, scope: !16984)
!16992 = !DILocation(line: 6142, column: 29, scope: !16984)
!16993 = !DILocation(line: 6142, column: 2, scope: !16984)
!16994 = !DILocation(line: 6144, column: 20, scope: !16984)
!16995 = !DILocation(line: 6144, column: 44, scope: !16984)
!16996 = !DILocation(line: 6144, column: 50, scope: !16984)
!16997 = !DILocation(line: 6144, column: 31, scope: !16984)
!16998 = !DILocation(line: 6144, column: 2, scope: !16984)
!16999 = !DILocation(line: 6145, column: 16, scope: !16985)
!17000 = !DILocation(line: 6145, column: 56, scope: !16985)
!17001 = !DILocation(line: 6145, column: 62, scope: !16985)
!17002 = !DILocation(line: 6145, column: 7, scope: !16985)
!17003 = !DILocation(line: 6146, column: 5, scope: !16985)
!17004 = !DILocation(line: 6139, column: 23, scope: !16980)
!17005 = !DILocation(line: 6139, column: 29, scope: !16980)
!17006 = !DILocation(line: 6139, column: 21, scope: !16980)
!17007 = !DILocation(line: 6139, column: 3, scope: !16980)
!17008 = distinct !{!17008, !16982, !17009}
!17009 = !DILocation(line: 6146, column: 5, scope: !16981)
!17010 = !DILocation(line: 6147, column: 12, scope: !16973)
!17011 = !DILocation(line: 6147, column: 3, scope: !16973)
!17012 = !DILocation(line: 6148, column: 1, scope: !16973)
!17013 = distinct !DISubprogram(name: "dump_vars", scope: !3, file: !3, line: 6211, type: !17014, scopeLine: 6212, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!17014 = !DISubroutineType(types: !17015)
!17015 = !{null, !1827}
!17016 = !DILocalVariable(name: "vars", arg: 1, scope: !17013, file: !3, line: 6211, type: !1827)
!17017 = !DILocation(line: 6211, column: 19, scope: !17013)
!17018 = !DILocation(line: 6213, column: 22, scope: !17019)
!17019 = distinct !DILexicalBlock(scope: !17013, file: !3, line: 6213, column: 7)
!17020 = !DILocation(line: 6213, column: 7, scope: !17019)
!17021 = !DILocation(line: 6213, column: 28, scope: !17019)
!17022 = !DILocation(line: 6213, column: 7, scope: !17013)
!17023 = !DILocation(line: 6215, column: 16, scope: !17024)
!17024 = distinct !DILexicalBlock(scope: !17019, file: !3, line: 6214, column: 5)
!17025 = !DILocation(line: 6215, column: 7, scope: !17024)
!17026 = !DILocation(line: 6216, column: 22, scope: !17024)
!17027 = !DILocation(line: 6216, column: 7, scope: !17024)
!17028 = !DILocation(line: 6217, column: 5, scope: !17024)
!17029 = !DILocation(line: 6218, column: 1, scope: !17013)
!17030 = distinct !DISubprogram(name: "dump_var_slot", scope: !3, file: !3, line: 6153, type: !6290, scopeLine: 6154, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!17031 = !DILocalVariable(name: "slot", arg: 1, scope: !17030, file: !3, line: 6153, type: !1848)
!17032 = !DILocation(line: 6153, column: 23, scope: !17030)
!17033 = !DILocalVariable(name: "data", arg: 2, scope: !17030, file: !3, line: 6153, type: !1313)
!17034 = !DILocation(line: 6153, column: 35, scope: !17030)
!17035 = !DILocalVariable(name: "var", scope: !17030, file: !3, line: 6155, type: !2447)
!17036 = !DILocation(line: 6155, column: 12, scope: !17030)
!17037 = !DILocation(line: 6155, column: 30, scope: !17030)
!17038 = !DILocation(line: 6155, column: 29, scope: !17030)
!17039 = !DILocation(line: 6155, column: 18, scope: !17030)
!17040 = !DILocation(line: 6157, column: 13, scope: !17030)
!17041 = !DILocation(line: 6157, column: 3, scope: !17030)
!17042 = !DILocation(line: 6160, column: 3, scope: !17030)
!17043 = distinct !DISubprogram(name: "VEC_rtx_base_iterate", scope: !561, file: !561, line: 200, type: !17044, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!17044 = !DISubroutineType(types: !17045)
!17045 = !{!1010, !17046, !7, !4733}
!17046 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !17047, size: 64)
!17047 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1689)
!17048 = !DILocalVariable(name: "vec_", arg: 1, scope: !17043, file: !561, line: 200, type: !17046)
!17049 = !DILocation(line: 200, column: 1, scope: !17043)
!17050 = !DILocalVariable(name: "ix_", arg: 2, scope: !17043, file: !561, line: 200, type: !7)
!17051 = !DILocalVariable(name: "ptr", arg: 3, scope: !17043, file: !561, line: 200, type: !4733)
!17052 = !DILocation(line: 200, column: 1, scope: !17053)
!17053 = distinct !DILexicalBlock(scope: !17043, file: !561, line: 200, column: 1)
!17054 = !DILocation(line: 200, column: 1, scope: !17055)
!17055 = distinct !DILexicalBlock(scope: !17053, file: !561, line: 200, column: 1)
!17056 = !DILocation(line: 200, column: 1, scope: !17057)
!17057 = distinct !DILexicalBlock(scope: !17053, file: !561, line: 200, column: 1)
!17058 = distinct !DISubprogram(name: "add_cselib_value_chains", scope: !3, file: !3, line: 2884, type: !2646, scopeLine: 2885, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!17059 = !DILocalVariable(name: "dv", arg: 1, scope: !17058, file: !3, line: 2884, type: !2410)
!17060 = !DILocation(line: 2884, column: 40, scope: !17058)
!17061 = !DILocalVariable(name: "l", scope: !17058, file: !3, line: 2886, type: !17062)
!17062 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1245, size: 64)
!17063 = !DILocation(line: 2886, column: 25, scope: !17058)
!17064 = !DILocation(line: 2888, column: 13, scope: !17065)
!17065 = distinct !DILexicalBlock(scope: !17058, file: !3, line: 2888, column: 3)
!17066 = !DILocation(line: 2888, column: 48, scope: !17065)
!17067 = !DILocation(line: 2888, column: 10, scope: !17065)
!17068 = !DILocation(line: 2888, column: 8, scope: !17065)
!17069 = !DILocation(line: 2888, column: 55, scope: !17070)
!17070 = distinct !DILexicalBlock(scope: !17065, file: !3, line: 2888, column: 3)
!17071 = !DILocation(line: 2888, column: 54, scope: !17070)
!17072 = !DILocation(line: 2888, column: 3, scope: !17065)
!17073 = !DILocation(line: 2889, column: 9, scope: !17074)
!17074 = distinct !DILexicalBlock(scope: !17070, file: !3, line: 2889, column: 9)
!17075 = !DILocation(line: 2889, column: 30, scope: !17074)
!17076 = !DILocation(line: 2889, column: 9, scope: !17070)
!17077 = !DILocation(line: 2890, column: 14, scope: !17074)
!17078 = !DILocation(line: 2890, column: 13, scope: !17074)
!17079 = !DILocation(line: 2890, column: 18, scope: !17074)
!17080 = !DILocation(line: 2890, column: 8, scope: !17074)
!17081 = !DILocation(line: 2890, column: 10, scope: !17074)
!17082 = !DILocation(line: 2890, column: 7, scope: !17074)
!17083 = !DILocation(line: 2893, column: 19, scope: !17084)
!17084 = distinct !DILexicalBlock(scope: !17074, file: !3, line: 2892, column: 7)
!17085 = !DILocation(line: 2893, column: 18, scope: !17084)
!17086 = !DILocation(line: 2893, column: 23, scope: !17084)
!17087 = !DILocation(line: 2893, column: 59, scope: !17084)
!17088 = !DILocation(line: 2893, column: 45, scope: !17084)
!17089 = !DILocation(line: 2893, column: 2, scope: !17084)
!17090 = !DILocation(line: 2894, column: 9, scope: !17084)
!17091 = !DILocation(line: 2894, column: 8, scope: !17084)
!17092 = !DILocation(line: 2894, column: 13, scope: !17084)
!17093 = !DILocation(line: 2894, column: 4, scope: !17084)
!17094 = !DILocation(line: 2888, column: 3, scope: !17070)
!17095 = distinct !{!17095, !17072, !17096}
!17096 = !DILocation(line: 2895, column: 7, scope: !17065)
!17097 = !DILocation(line: 2896, column: 1, scope: !17058)
!17098 = distinct !DISubprogram(name: "VEC_variable_heap_alloc", scope: !3, file: !3, line: 7270, type: !17099, scopeLine: 7270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!17099 = !DISubroutineType(types: !17100)
!17100 = !{!2520, !1010}
!17101 = !DILocalVariable(name: "alloc_", arg: 1, scope: !17098, file: !3, line: 7270, type: !1010)
!17102 = !DILocation(line: 7270, column: 1, scope: !17098)
!17103 = distinct !DISubprogram(name: "emit_notes_for_differences", scope: !3, file: !3, line: 7549, type: !17104, scopeLine: 7551, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!17104 = !DISubroutineType(types: !17105)
!17105 = !{null, !1188, !2418, !2418}
!17106 = !DILocalVariable(name: "insn", arg: 1, scope: !17103, file: !3, line: 7549, type: !1188)
!17107 = !DILocation(line: 7549, column: 33, scope: !17103)
!17108 = !DILocalVariable(name: "old_set", arg: 2, scope: !17103, file: !3, line: 7549, type: !2418)
!17109 = !DILocation(line: 7549, column: 53, scope: !17103)
!17110 = !DILocalVariable(name: "new_set", arg: 3, scope: !17103, file: !3, line: 7550, type: !2418)
!17111 = !DILocation(line: 7550, column: 22, scope: !17103)
!17112 = !DILocation(line: 7552, column: 36, scope: !17103)
!17113 = !DILocation(line: 7552, column: 45, scope: !17103)
!17114 = !DILocation(line: 7552, column: 18, scope: !17103)
!17115 = !DILocation(line: 7554, column: 22, scope: !17103)
!17116 = !DILocation(line: 7554, column: 31, scope: !17103)
!17117 = !DILocation(line: 7554, column: 4, scope: !17103)
!17118 = !DILocation(line: 7552, column: 3, scope: !17103)
!17119 = !DILocation(line: 7555, column: 36, scope: !17103)
!17120 = !DILocation(line: 7555, column: 45, scope: !17103)
!17121 = !DILocation(line: 7555, column: 18, scope: !17103)
!17122 = !DILocation(line: 7557, column: 22, scope: !17103)
!17123 = !DILocation(line: 7557, column: 31, scope: !17103)
!17124 = !DILocation(line: 7557, column: 4, scope: !17103)
!17125 = !DILocation(line: 7555, column: 3, scope: !17103)
!17126 = !DILocation(line: 7558, column: 27, scope: !17103)
!17127 = !DILocation(line: 7558, column: 56, scope: !17103)
!17128 = !DILocation(line: 7558, column: 65, scope: !17103)
!17129 = !DILocation(line: 7558, column: 3, scope: !17103)
!17130 = !DILocation(line: 7559, column: 1, scope: !17103)
!17131 = distinct !DISubprogram(name: "emit_notes_in_bb", scope: !3, file: !3, line: 7564, type: !17132, scopeLine: 7565, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!17132 = !DISubroutineType(types: !17133)
!17133 = !{null, !1795, !2418}
!17134 = !DILocalVariable(name: "bb", arg: 1, scope: !17131, file: !3, line: 7564, type: !1795)
!17135 = !DILocation(line: 7564, column: 31, scope: !17131)
!17136 = !DILocalVariable(name: "set", arg: 2, scope: !17131, file: !3, line: 7564, type: !2418)
!17137 = !DILocation(line: 7564, column: 49, scope: !17131)
!17138 = !DILocalVariable(name: "i", scope: !17131, file: !3, line: 7566, type: !7)
!17139 = !DILocation(line: 7566, column: 16, scope: !17131)
!17140 = !DILocalVariable(name: "mo", scope: !17131, file: !3, line: 7567, type: !4238)
!17141 = !DILocation(line: 7567, column: 20, scope: !17131)
!17142 = !DILocation(line: 7569, column: 23, scope: !17131)
!17143 = !DILocation(line: 7569, column: 3, scope: !17131)
!17144 = !DILocation(line: 7570, column: 22, scope: !17131)
!17145 = !DILocation(line: 7570, column: 28, scope: !17131)
!17146 = !DILocation(line: 7570, column: 38, scope: !17131)
!17147 = !DILocation(line: 7570, column: 3, scope: !17131)
!17148 = !DILocation(line: 7572, column: 10, scope: !17149)
!17149 = distinct !DILexicalBlock(scope: !17131, file: !3, line: 7572, column: 3)
!17150 = !DILocation(line: 7572, column: 8, scope: !17149)
!17151 = !DILocation(line: 7572, column: 15, scope: !17152)
!17152 = distinct !DILexicalBlock(scope: !17149, file: !3, line: 7572, column: 3)
!17153 = !DILocation(line: 7572, column: 3, scope: !17149)
!17154 = !DILocalVariable(name: "insn", scope: !17155, file: !3, line: 7574, type: !1188)
!17155 = distinct !DILexicalBlock(scope: !17152, file: !3, line: 7573, column: 5)
!17156 = !DILocation(line: 7574, column: 11, scope: !17155)
!17157 = !DILocation(line: 7574, column: 18, scope: !17155)
!17158 = !DILocation(line: 7574, column: 22, scope: !17155)
!17159 = !DILocation(line: 7576, column: 15, scope: !17155)
!17160 = !DILocation(line: 7576, column: 19, scope: !17155)
!17161 = !DILocation(line: 7576, column: 7, scope: !17155)
!17162 = !DILocation(line: 7579, column: 34, scope: !17163)
!17163 = distinct !DILexicalBlock(scope: !17155, file: !3, line: 7577, column: 2)
!17164 = !DILocation(line: 7579, column: 6, scope: !17163)
!17165 = !DILocation(line: 7580, column: 30, scope: !17163)
!17166 = !DILocation(line: 7580, column: 63, scope: !17163)
!17167 = !DILocation(line: 7580, column: 68, scope: !17163)
!17168 = !DILocation(line: 7580, column: 6, scope: !17163)
!17169 = !DILocation(line: 7581, column: 6, scope: !17163)
!17170 = !DILocalVariable(name: "loc", scope: !17171, file: !3, line: 7585, type: !1188)
!17171 = distinct !DILexicalBlock(scope: !17163, file: !3, line: 7584, column: 6)
!17172 = !DILocation(line: 7585, column: 12, scope: !17171)
!17173 = !DILocation(line: 7585, column: 18, scope: !17171)
!17174 = !DILocation(line: 7585, column: 22, scope: !17171)
!17175 = !DILocation(line: 7585, column: 24, scope: !17171)
!17176 = !DILocation(line: 7587, column: 12, scope: !17177)
!17177 = distinct !DILexicalBlock(scope: !17171, file: !3, line: 7587, column: 12)
!17178 = !DILocation(line: 7587, column: 12, scope: !17171)
!17179 = !DILocation(line: 7588, column: 16, scope: !17177)
!17180 = !DILocation(line: 7588, column: 21, scope: !17177)
!17181 = !DILocation(line: 7588, column: 3, scope: !17177)
!17182 = !DILocation(line: 7590, column: 16, scope: !17177)
!17183 = !DILocation(line: 7590, column: 21, scope: !17177)
!17184 = !DILocation(line: 7590, column: 3, scope: !17177)
!17185 = !DILocation(line: 7592, column: 32, scope: !17171)
!17186 = !DILocation(line: 7592, column: 60, scope: !17171)
!17187 = !DILocation(line: 7592, column: 65, scope: !17171)
!17188 = !DILocation(line: 7592, column: 8, scope: !17171)
!17189 = !DILocation(line: 7594, column: 6, scope: !17163)
!17190 = !DILocalVariable(name: "loc", scope: !17191, file: !3, line: 7598, type: !1188)
!17191 = distinct !DILexicalBlock(scope: !17163, file: !3, line: 7597, column: 6)
!17192 = !DILocation(line: 7598, column: 12, scope: !17191)
!17193 = !DILocation(line: 7598, column: 18, scope: !17191)
!17194 = !DILocation(line: 7598, column: 22, scope: !17191)
!17195 = !DILocation(line: 7598, column: 24, scope: !17191)
!17196 = !DILocalVariable(name: "val", scope: !17191, file: !3, line: 7599, type: !1188)
!17197 = !DILocation(line: 7599, column: 12, scope: !17191)
!17198 = !DILocalVariable(name: "vloc", scope: !17191, file: !3, line: 7599, type: !1188)
!17199 = !DILocation(line: 7599, column: 17, scope: !17191)
!17200 = !DILocalVariable(name: "var", scope: !17191, file: !3, line: 7600, type: !1011)
!17201 = !DILocation(line: 7600, column: 13, scope: !17191)
!17202 = !DILocation(line: 7602, column: 12, scope: !17203)
!17203 = distinct !DILexicalBlock(scope: !17191, file: !3, line: 7602, column: 12)
!17204 = !DILocation(line: 7602, column: 27, scope: !17203)
!17205 = !DILocation(line: 7602, column: 12, scope: !17191)
!17206 = !DILocation(line: 7604, column: 11, scope: !17207)
!17207 = distinct !DILexicalBlock(scope: !17203, file: !3, line: 7603, column: 3)
!17208 = !DILocation(line: 7604, column: 9, scope: !17207)
!17209 = !DILocation(line: 7605, column: 12, scope: !17207)
!17210 = !DILocation(line: 7605, column: 10, scope: !17207)
!17211 = !DILocation(line: 7606, column: 3, scope: !17207)
!17212 = !DILocation(line: 7609, column: 9, scope: !17213)
!17213 = distinct !DILexicalBlock(scope: !17203, file: !3, line: 7608, column: 3)
!17214 = !DILocation(line: 7610, column: 12, scope: !17213)
!17215 = !DILocation(line: 7610, column: 10, scope: !17213)
!17216 = !DILocation(line: 7613, column: 14, scope: !17191)
!17217 = !DILocation(line: 7613, column: 12, scope: !17191)
!17218 = !DILocation(line: 7615, column: 31, scope: !17191)
!17219 = !DILocation(line: 7616, column: 24, scope: !17191)
!17220 = !DILocation(line: 7616, column: 10, scope: !17191)
!17221 = !DILocation(line: 7615, column: 8, scope: !17191)
!17222 = !DILocation(line: 7617, column: 12, scope: !17223)
!17223 = distinct !DILexicalBlock(scope: !17191, file: !3, line: 7617, column: 12)
!17224 = !DILocation(line: 7617, column: 12, scope: !17191)
!17225 = !DILocation(line: 7619, column: 9, scope: !17226)
!17226 = distinct !DILexicalBlock(scope: !17227, file: !3, line: 7619, column: 9)
!17227 = distinct !DILexicalBlock(scope: !17223, file: !3, line: 7618, column: 3)
!17228 = !DILocation(line: 7619, column: 9, scope: !17227)
!17229 = !DILocation(line: 7620, column: 20, scope: !17226)
!17230 = !DILocation(line: 7620, column: 25, scope: !17226)
!17231 = !DILocation(line: 7620, column: 30, scope: !17226)
!17232 = !DILocation(line: 7620, column: 59, scope: !17226)
!17233 = !DILocation(line: 7620, column: 7, scope: !17226)
!17234 = !DILocation(line: 7621, column: 24, scope: !17227)
!17235 = !DILocation(line: 7621, column: 29, scope: !17227)
!17236 = !DILocation(line: 7621, column: 48, scope: !17227)
!17237 = !DILocation(line: 7621, column: 34, scope: !17227)
!17238 = !DILocation(line: 7621, column: 5, scope: !17227)
!17239 = !DILocation(line: 7624, column: 3, scope: !17227)
!17240 = !DILocation(line: 7625, column: 18, scope: !17241)
!17241 = distinct !DILexicalBlock(scope: !17223, file: !3, line: 7625, column: 17)
!17242 = !DILocation(line: 7625, column: 17, scope: !17223)
!17243 = !DILocation(line: 7626, column: 22, scope: !17241)
!17244 = !DILocation(line: 7626, column: 27, scope: !17241)
!17245 = !DILocation(line: 7627, column: 22, scope: !17241)
!17246 = !DILocation(line: 7627, column: 8, scope: !17241)
!17247 = !DILocation(line: 7626, column: 3, scope: !17241)
!17248 = !DILocation(line: 7631, column: 32, scope: !17191)
!17249 = !DILocation(line: 7631, column: 60, scope: !17191)
!17250 = !DILocation(line: 7631, column: 65, scope: !17191)
!17251 = !DILocation(line: 7631, column: 8, scope: !17191)
!17252 = !DILocation(line: 7633, column: 6, scope: !17163)
!17253 = !DILocalVariable(name: "loc", scope: !17254, file: !3, line: 7637, type: !1188)
!17254 = distinct !DILexicalBlock(scope: !17163, file: !3, line: 7636, column: 6)
!17255 = !DILocation(line: 7637, column: 12, scope: !17254)
!17256 = !DILocation(line: 7637, column: 18, scope: !17254)
!17257 = !DILocation(line: 7637, column: 22, scope: !17254)
!17258 = !DILocation(line: 7637, column: 24, scope: !17254)
!17259 = !DILocalVariable(name: "val", scope: !17254, file: !3, line: 7638, type: !1188)
!17260 = !DILocation(line: 7638, column: 12, scope: !17254)
!17261 = !DILocalVariable(name: "vloc", scope: !17254, file: !3, line: 7638, type: !1188)
!17262 = !DILocation(line: 7638, column: 17, scope: !17254)
!17263 = !DILocalVariable(name: "uloc", scope: !17254, file: !3, line: 7638, type: !1188)
!17264 = !DILocation(line: 7638, column: 23, scope: !17254)
!17265 = !DILocation(line: 7640, column: 22, scope: !17254)
!17266 = !DILocation(line: 7640, column: 20, scope: !17254)
!17267 = !DILocation(line: 7640, column: 13, scope: !17254)
!17268 = !DILocation(line: 7641, column: 14, scope: !17254)
!17269 = !DILocation(line: 7641, column: 12, scope: !17254)
!17270 = !DILocation(line: 7643, column: 12, scope: !17271)
!17271 = distinct !DILexicalBlock(scope: !17254, file: !3, line: 7643, column: 12)
!17272 = !DILocation(line: 7643, column: 27, scope: !17271)
!17273 = !DILocation(line: 7643, column: 12, scope: !17254)
!17274 = !DILocation(line: 7645, column: 12, scope: !17275)
!17275 = distinct !DILexicalBlock(scope: !17271, file: !3, line: 7644, column: 3)
!17276 = !DILocation(line: 7645, column: 10, scope: !17275)
!17277 = !DILocation(line: 7646, column: 11, scope: !17275)
!17278 = !DILocation(line: 7646, column: 9, scope: !17275)
!17279 = !DILocation(line: 7647, column: 3, scope: !17275)
!17280 = !DILocation(line: 7649, column: 12, scope: !17281)
!17281 = distinct !DILexicalBlock(scope: !17254, file: !3, line: 7649, column: 12)
!17282 = !DILocation(line: 7649, column: 12, scope: !17254)
!17283 = !DILocation(line: 7650, column: 16, scope: !17281)
!17284 = !DILocation(line: 7650, column: 21, scope: !17281)
!17285 = !DILocation(line: 7650, column: 26, scope: !17281)
!17286 = !DILocation(line: 7650, column: 32, scope: !17281)
!17287 = !DILocation(line: 7650, column: 3, scope: !17281)
!17288 = !DILocation(line: 7652, column: 14, scope: !17281)
!17289 = !DILocation(line: 7652, column: 19, scope: !17281)
!17290 = !DILocation(line: 7652, column: 24, scope: !17281)
!17291 = !DILocation(line: 7652, column: 30, scope: !17281)
!17292 = !DILocation(line: 7652, column: 3, scope: !17281)
!17293 = !DILocation(line: 7654, column: 12, scope: !17294)
!17294 = distinct !DILexicalBlock(scope: !17254, file: !3, line: 7654, column: 12)
!17295 = !DILocation(line: 7654, column: 12, scope: !17254)
!17296 = !DILocation(line: 7656, column: 9, scope: !17297)
!17297 = distinct !DILexicalBlock(scope: !17298, file: !3, line: 7656, column: 9)
!17298 = distinct !DILexicalBlock(scope: !17294, file: !3, line: 7655, column: 3)
!17299 = !DILocation(line: 7656, column: 25, scope: !17297)
!17300 = !DILocation(line: 7656, column: 9, scope: !17298)
!17301 = !DILocation(line: 7657, column: 20, scope: !17297)
!17302 = !DILocation(line: 7657, column: 25, scope: !17297)
!17303 = !DILocation(line: 7657, column: 7, scope: !17297)
!17304 = !DILocation(line: 7659, column: 14, scope: !17305)
!17305 = distinct !DILexicalBlock(scope: !17297, file: !3, line: 7659, column: 14)
!17306 = !DILocation(line: 7659, column: 30, scope: !17305)
!17307 = !DILocation(line: 7659, column: 14, scope: !17297)
!17308 = !DILocation(line: 7660, column: 20, scope: !17305)
!17309 = !DILocation(line: 7660, column: 25, scope: !17305)
!17310 = !DILocation(line: 7660, column: 7, scope: !17305)
!17311 = !DILocation(line: 7662, column: 3, scope: !17298)
!17312 = !DILocation(line: 7664, column: 32, scope: !17254)
!17313 = !DILocation(line: 7664, column: 61, scope: !17254)
!17314 = !DILocation(line: 7664, column: 66, scope: !17254)
!17315 = !DILocation(line: 7664, column: 8, scope: !17254)
!17316 = !DILocation(line: 7666, column: 6, scope: !17163)
!17317 = !DILocalVariable(name: "loc", scope: !17318, file: !3, line: 7670, type: !1188)
!17318 = distinct !DILexicalBlock(scope: !17163, file: !3, line: 7669, column: 6)
!17319 = !DILocation(line: 7670, column: 12, scope: !17318)
!17320 = !DILocation(line: 7670, column: 18, scope: !17318)
!17321 = !DILocation(line: 7670, column: 22, scope: !17318)
!17322 = !DILocation(line: 7670, column: 24, scope: !17318)
!17323 = !DILocalVariable(name: "val", scope: !17318, file: !3, line: 7671, type: !1188)
!17324 = !DILocation(line: 7671, column: 12, scope: !17318)
!17325 = !DILocalVariable(name: "vloc", scope: !17318, file: !3, line: 7671, type: !1188)
!17326 = !DILocation(line: 7671, column: 17, scope: !17318)
!17327 = !DILocalVariable(name: "uloc", scope: !17318, file: !3, line: 7671, type: !1188)
!17328 = !DILocation(line: 7671, column: 23, scope: !17318)
!17329 = !DILocalVariable(name: "reverse", scope: !17318, file: !3, line: 7671, type: !1188)
!17330 = !DILocation(line: 7671, column: 29, scope: !17318)
!17331 = !DILocation(line: 7673, column: 15, scope: !17318)
!17332 = !DILocation(line: 7673, column: 13, scope: !17318)
!17333 = !DILocation(line: 7674, column: 12, scope: !17334)
!17334 = distinct !DILexicalBlock(scope: !17318, file: !3, line: 7674, column: 12)
!17335 = !DILocation(line: 7674, column: 12, scope: !17318)
!17336 = !DILocation(line: 7676, column: 15, scope: !17337)
!17337 = distinct !DILexicalBlock(scope: !17334, file: !3, line: 7675, column: 3)
!17338 = !DILocation(line: 7676, column: 13, scope: !17337)
!17339 = !DILocation(line: 7677, column: 12, scope: !17337)
!17340 = !DILocation(line: 7677, column: 10, scope: !17337)
!17341 = !DILocation(line: 7678, column: 3, scope: !17337)
!17342 = !DILocation(line: 7679, column: 15, scope: !17318)
!17343 = !DILocation(line: 7679, column: 13, scope: !17318)
!17344 = !DILocation(line: 7680, column: 14, scope: !17318)
!17345 = !DILocation(line: 7680, column: 12, scope: !17318)
!17346 = !DILocation(line: 7681, column: 15, scope: !17318)
!17347 = !DILocation(line: 7681, column: 13, scope: !17318)
!17348 = !DILocation(line: 7683, column: 12, scope: !17349)
!17349 = distinct !DILexicalBlock(scope: !17318, file: !3, line: 7683, column: 12)
!17350 = !DILocation(line: 7683, column: 27, scope: !17349)
!17351 = !DILocation(line: 7683, column: 12, scope: !17318)
!17352 = !DILocation(line: 7685, column: 12, scope: !17353)
!17353 = distinct !DILexicalBlock(scope: !17349, file: !3, line: 7684, column: 3)
!17354 = !DILocation(line: 7685, column: 10, scope: !17353)
!17355 = !DILocation(line: 7686, column: 11, scope: !17353)
!17356 = !DILocation(line: 7686, column: 9, scope: !17353)
!17357 = !DILocation(line: 7687, column: 3, scope: !17353)
!17358 = !DILocation(line: 7689, column: 12, scope: !17359)
!17359 = distinct !DILexicalBlock(scope: !17318, file: !3, line: 7689, column: 12)
!17360 = !DILocation(line: 7689, column: 28, scope: !17359)
!17361 = !DILocation(line: 7689, column: 12, scope: !17318)
!17362 = !DILocalVariable(name: "vsrc", scope: !17363, file: !3, line: 7691, type: !1188)
!17363 = distinct !DILexicalBlock(scope: !17359, file: !3, line: 7690, column: 3)
!17364 = !DILocation(line: 7691, column: 9, scope: !17363)
!17365 = !DILocation(line: 7691, column: 16, scope: !17363)
!17366 = !DILocation(line: 7693, column: 5, scope: !17363)
!17367 = !DILocation(line: 7694, column: 5, scope: !17363)
!17368 = !DILocation(line: 7696, column: 12, scope: !17363)
!17369 = !DILocation(line: 7696, column: 10, scope: !17363)
!17370 = !DILocation(line: 7698, column: 9, scope: !17371)
!17371 = distinct !DILexicalBlock(scope: !17363, file: !3, line: 7698, column: 9)
!17372 = !DILocation(line: 7698, column: 9, scope: !17363)
!17373 = !DILocation(line: 7699, column: 20, scope: !17371)
!17374 = !DILocation(line: 7699, column: 25, scope: !17371)
!17375 = !DILocation(line: 7699, column: 30, scope: !17371)
!17376 = !DILocation(line: 7699, column: 36, scope: !17371)
!17377 = !DILocation(line: 7699, column: 7, scope: !17371)
!17378 = !DILocation(line: 7700, column: 3, scope: !17363)
!17379 = !DILocation(line: 7701, column: 17, scope: !17380)
!17380 = distinct !DILexicalBlock(scope: !17359, file: !3, line: 7701, column: 17)
!17381 = !DILocation(line: 7701, column: 17, scope: !17359)
!17382 = !DILocation(line: 7703, column: 5, scope: !17383)
!17383 = distinct !DILexicalBlock(scope: !17380, file: !3, line: 7702, column: 3)
!17384 = !DILocation(line: 7705, column: 18, scope: !17383)
!17385 = !DILocation(line: 7705, column: 23, scope: !17383)
!17386 = !DILocation(line: 7705, column: 28, scope: !17383)
!17387 = !DILocation(line: 7705, column: 44, scope: !17383)
!17388 = !DILocation(line: 7705, column: 5, scope: !17383)
!17389 = !DILocation(line: 7706, column: 3, scope: !17383)
!17390 = !DILocation(line: 7708, column: 12, scope: !17391)
!17391 = distinct !DILexicalBlock(scope: !17318, file: !3, line: 7708, column: 12)
!17392 = !DILocation(line: 7708, column: 12, scope: !17318)
!17393 = !DILocation(line: 7710, column: 9, scope: !17394)
!17394 = distinct !DILexicalBlock(scope: !17395, file: !3, line: 7710, column: 9)
!17395 = distinct !DILexicalBlock(scope: !17391, file: !3, line: 7709, column: 3)
!17396 = !DILocation(line: 7710, column: 9, scope: !17395)
!17397 = !DILocation(line: 7712, column: 13, scope: !17398)
!17398 = distinct !DILexicalBlock(scope: !17399, file: !3, line: 7712, column: 13)
!17399 = distinct !DILexicalBlock(scope: !17394, file: !3, line: 7711, column: 7)
!17400 = !DILocation(line: 7712, column: 13, scope: !17399)
!17401 = !DILocation(line: 7713, column: 20, scope: !17398)
!17402 = !DILocation(line: 7713, column: 25, scope: !17398)
!17403 = !DILocation(line: 7713, column: 4, scope: !17398)
!17404 = !DILocation(line: 7714, column: 18, scope: !17405)
!17405 = distinct !DILexicalBlock(scope: !17398, file: !3, line: 7714, column: 18)
!17406 = !DILocation(line: 7714, column: 18, scope: !17398)
!17407 = !DILocation(line: 7715, column: 20, scope: !17405)
!17408 = !DILocation(line: 7715, column: 25, scope: !17405)
!17409 = !DILocation(line: 7715, column: 4, scope: !17405)
!17410 = !DILocation(line: 7716, column: 7, scope: !17399)
!17411 = !DILocalVariable(name: "copied_p", scope: !17412, file: !3, line: 7719, type: !1130)
!17412 = distinct !DILexicalBlock(scope: !17394, file: !3, line: 7718, column: 7)
!17413 = !DILocation(line: 7719, column: 14, scope: !17412)
!17414 = !DILocation(line: 7719, column: 25, scope: !17412)
!17415 = !DILocalVariable(name: "set_src", scope: !17412, file: !3, line: 7720, type: !1188)
!17416 = !DILocation(line: 7720, column: 13, scope: !17412)
!17417 = !DILocalVariable(name: "status", scope: !17412, file: !3, line: 7721, type: !734)
!17418 = !DILocation(line: 7721, column: 30, scope: !17412)
!17419 = !DILocation(line: 7723, column: 13, scope: !17420)
!17420 = distinct !DILexicalBlock(scope: !17412, file: !3, line: 7723, column: 13)
!17421 = !DILocation(line: 7723, column: 29, scope: !17420)
!17422 = !DILocation(line: 7723, column: 13, scope: !17412)
!17423 = !DILocation(line: 7725, column: 16, scope: !17424)
!17424 = distinct !DILexicalBlock(scope: !17420, file: !3, line: 7724, column: 4)
!17425 = !DILocation(line: 7725, column: 14, scope: !17424)
!17426 = !DILocation(line: 7726, column: 13, scope: !17424)
!17427 = !DILocation(line: 7726, column: 11, scope: !17424)
!17428 = !DILocation(line: 7727, column: 4, scope: !17424)
!17429 = !DILocation(line: 7729, column: 13, scope: !17430)
!17430 = distinct !DILexicalBlock(scope: !17412, file: !3, line: 7729, column: 13)
!17431 = !DILocation(line: 7729, column: 13, scope: !17412)
!17432 = !DILocation(line: 7731, column: 32, scope: !17433)
!17433 = distinct !DILexicalBlock(scope: !17430, file: !3, line: 7730, column: 4)
!17434 = !DILocation(line: 7731, column: 37, scope: !17433)
!17435 = !DILocation(line: 7731, column: 15, scope: !17433)
!17436 = !DILocation(line: 7731, column: 13, scope: !17433)
!17437 = !DILocation(line: 7733, column: 34, scope: !17433)
!17438 = !DILocation(line: 7733, column: 39, scope: !17433)
!17439 = !DILocation(line: 7733, column: 16, scope: !17433)
!17440 = !DILocation(line: 7733, column: 14, scope: !17433)
!17441 = !DILocation(line: 7734, column: 4, scope: !17433)
!17442 = !DILocation(line: 7736, column: 13, scope: !17443)
!17443 = distinct !DILexicalBlock(scope: !17412, file: !3, line: 7736, column: 13)
!17444 = !DILocation(line: 7736, column: 13, scope: !17412)
!17445 = !DILocation(line: 7737, column: 28, scope: !17443)
!17446 = !DILocation(line: 7737, column: 33, scope: !17443)
!17447 = !DILocation(line: 7737, column: 40, scope: !17443)
!17448 = !DILocation(line: 7737, column: 39, scope: !17443)
!17449 = !DILocation(line: 7738, column: 7, scope: !17443)
!17450 = !DILocation(line: 7738, column: 15, scope: !17443)
!17451 = !DILocation(line: 7737, column: 4, scope: !17443)
!17452 = !DILocation(line: 7739, column: 18, scope: !17453)
!17453 = distinct !DILexicalBlock(scope: !17443, file: !3, line: 7739, column: 18)
!17454 = !DILocation(line: 7739, column: 18, scope: !17443)
!17455 = !DILocation(line: 7740, column: 28, scope: !17453)
!17456 = !DILocation(line: 7740, column: 33, scope: !17453)
!17457 = !DILocation(line: 7740, column: 40, scope: !17453)
!17458 = !DILocation(line: 7740, column: 39, scope: !17453)
!17459 = !DILocation(line: 7741, column: 7, scope: !17453)
!17460 = !DILocation(line: 7741, column: 15, scope: !17453)
!17461 = !DILocation(line: 7740, column: 4, scope: !17453)
!17462 = !DILocation(line: 7743, column: 3, scope: !17395)
!17463 = !DILocation(line: 7744, column: 17, scope: !17464)
!17464 = distinct !DILexicalBlock(scope: !17391, file: !3, line: 7744, column: 17)
!17465 = !DILocation(line: 7744, column: 17, scope: !17391)
!17466 = !DILocation(line: 7745, column: 21, scope: !17464)
!17467 = !DILocation(line: 7745, column: 26, scope: !17464)
!17468 = !DILocation(line: 7745, column: 3, scope: !17464)
!17469 = !DILocation(line: 7747, column: 19, scope: !17318)
!17470 = !DILocation(line: 7747, column: 24, scope: !17318)
!17471 = !DILocation(line: 7747, column: 29, scope: !17318)
!17472 = !DILocation(line: 7747, column: 35, scope: !17318)
!17473 = !DILocation(line: 7747, column: 8, scope: !17318)
!17474 = !DILocation(line: 7749, column: 12, scope: !17475)
!17475 = distinct !DILexicalBlock(scope: !17318, file: !3, line: 7749, column: 12)
!17476 = !DILocation(line: 7749, column: 12, scope: !17318)
!17477 = !DILocation(line: 7750, column: 14, scope: !17475)
!17478 = !DILocation(line: 7750, column: 19, scope: !17475)
!17479 = !DILocation(line: 7750, column: 38, scope: !17475)
!17480 = !DILocation(line: 7751, column: 7, scope: !17475)
!17481 = !DILocation(line: 7750, column: 3, scope: !17475)
!17482 = !DILocation(line: 7753, column: 32, scope: !17318)
!17483 = !DILocation(line: 7754, column: 11, scope: !17318)
!17484 = !DILocation(line: 7754, column: 16, scope: !17318)
!17485 = !DILocation(line: 7753, column: 8, scope: !17318)
!17486 = !DILocation(line: 7756, column: 6, scope: !17163)
!17487 = !DILocalVariable(name: "loc", scope: !17488, file: !3, line: 7760, type: !1188)
!17488 = distinct !DILexicalBlock(scope: !17163, file: !3, line: 7759, column: 6)
!17489 = !DILocation(line: 7760, column: 12, scope: !17488)
!17490 = !DILocation(line: 7760, column: 18, scope: !17488)
!17491 = !DILocation(line: 7760, column: 22, scope: !17488)
!17492 = !DILocation(line: 7760, column: 24, scope: !17488)
!17493 = !DILocalVariable(name: "set_src", scope: !17488, file: !3, line: 7761, type: !1188)
!17494 = !DILocation(line: 7761, column: 12, scope: !17488)
!17495 = !DILocation(line: 7763, column: 12, scope: !17496)
!17496 = distinct !DILexicalBlock(scope: !17488, file: !3, line: 7763, column: 12)
!17497 = !DILocation(line: 7763, column: 27, scope: !17496)
!17498 = !DILocation(line: 7763, column: 12, scope: !17488)
!17499 = !DILocation(line: 7765, column: 15, scope: !17500)
!17500 = distinct !DILexicalBlock(scope: !17496, file: !3, line: 7764, column: 3)
!17501 = !DILocation(line: 7765, column: 13, scope: !17500)
!17502 = !DILocation(line: 7766, column: 11, scope: !17500)
!17503 = !DILocation(line: 7766, column: 9, scope: !17500)
!17504 = !DILocation(line: 7767, column: 3, scope: !17500)
!17505 = !DILocation(line: 7769, column: 12, scope: !17506)
!17506 = distinct !DILexicalBlock(scope: !17488, file: !3, line: 7769, column: 12)
!17507 = !DILocation(line: 7769, column: 12, scope: !17488)
!17508 = !DILocation(line: 7770, column: 27, scope: !17506)
!17509 = !DILocation(line: 7770, column: 32, scope: !17506)
!17510 = !DILocation(line: 7771, column: 6, scope: !17506)
!17511 = !DILocation(line: 7770, column: 3, scope: !17506)
!17512 = !DILocation(line: 7773, column: 27, scope: !17506)
!17513 = !DILocation(line: 7773, column: 32, scope: !17506)
!17514 = !DILocation(line: 7774, column: 6, scope: !17506)
!17515 = !DILocation(line: 7773, column: 3, scope: !17506)
!17516 = !DILocation(line: 7776, column: 32, scope: !17488)
!17517 = !DILocation(line: 7777, column: 11, scope: !17488)
!17518 = !DILocation(line: 7777, column: 16, scope: !17488)
!17519 = !DILocation(line: 7776, column: 8, scope: !17488)
!17520 = !DILocation(line: 7779, column: 6, scope: !17163)
!17521 = !DILocalVariable(name: "loc", scope: !17522, file: !3, line: 7783, type: !1188)
!17522 = distinct !DILexicalBlock(scope: !17163, file: !3, line: 7782, column: 6)
!17523 = !DILocation(line: 7783, column: 12, scope: !17522)
!17524 = !DILocation(line: 7783, column: 18, scope: !17522)
!17525 = !DILocation(line: 7783, column: 22, scope: !17522)
!17526 = !DILocation(line: 7783, column: 24, scope: !17522)
!17527 = !DILocalVariable(name: "src_status", scope: !17522, file: !3, line: 7784, type: !734)
!17528 = !DILocation(line: 7784, column: 29, scope: !17522)
!17529 = !DILocalVariable(name: "set_src", scope: !17522, file: !3, line: 7785, type: !1188)
!17530 = !DILocation(line: 7785, column: 12, scope: !17522)
!17531 = !DILocation(line: 7787, column: 12, scope: !17532)
!17532 = distinct !DILexicalBlock(scope: !17522, file: !3, line: 7787, column: 12)
!17533 = !DILocation(line: 7787, column: 27, scope: !17532)
!17534 = !DILocation(line: 7787, column: 12, scope: !17522)
!17535 = !DILocation(line: 7789, column: 15, scope: !17536)
!17536 = distinct !DILexicalBlock(scope: !17532, file: !3, line: 7788, column: 3)
!17537 = !DILocation(line: 7789, column: 13, scope: !17536)
!17538 = !DILocation(line: 7790, column: 11, scope: !17536)
!17539 = !DILocation(line: 7790, column: 9, scope: !17536)
!17540 = !DILocation(line: 7791, column: 3, scope: !17536)
!17541 = !DILocation(line: 7793, column: 38, scope: !17522)
!17542 = !DILocation(line: 7793, column: 43, scope: !17522)
!17543 = !DILocation(line: 7793, column: 21, scope: !17522)
!17544 = !DILocation(line: 7793, column: 19, scope: !17522)
!17545 = !DILocation(line: 7794, column: 36, scope: !17522)
!17546 = !DILocation(line: 7794, column: 41, scope: !17522)
!17547 = !DILocation(line: 7794, column: 18, scope: !17522)
!17548 = !DILocation(line: 7794, column: 16, scope: !17522)
!17549 = !DILocation(line: 7796, column: 12, scope: !17550)
!17550 = distinct !DILexicalBlock(scope: !17522, file: !3, line: 7796, column: 12)
!17551 = !DILocation(line: 7796, column: 12, scope: !17522)
!17552 = !DILocation(line: 7797, column: 27, scope: !17550)
!17553 = !DILocation(line: 7797, column: 32, scope: !17550)
!17554 = !DILocation(line: 7797, column: 44, scope: !17550)
!17555 = !DILocation(line: 7797, column: 56, scope: !17550)
!17556 = !DILocation(line: 7797, column: 3, scope: !17550)
!17557 = !DILocation(line: 7799, column: 27, scope: !17550)
!17558 = !DILocation(line: 7799, column: 32, scope: !17550)
!17559 = !DILocation(line: 7799, column: 44, scope: !17550)
!17560 = !DILocation(line: 7799, column: 56, scope: !17550)
!17561 = !DILocation(line: 7799, column: 3, scope: !17550)
!17562 = !DILocation(line: 7801, column: 32, scope: !17522)
!17563 = !DILocation(line: 7802, column: 11, scope: !17522)
!17564 = !DILocation(line: 7802, column: 16, scope: !17522)
!17565 = !DILocation(line: 7801, column: 8, scope: !17522)
!17566 = !DILocation(line: 7804, column: 6, scope: !17163)
!17567 = !DILocalVariable(name: "loc", scope: !17568, file: !3, line: 7808, type: !1188)
!17568 = distinct !DILexicalBlock(scope: !17163, file: !3, line: 7807, column: 6)
!17569 = !DILocation(line: 7808, column: 12, scope: !17568)
!17570 = !DILocation(line: 7808, column: 18, scope: !17568)
!17571 = !DILocation(line: 7808, column: 22, scope: !17568)
!17572 = !DILocation(line: 7808, column: 24, scope: !17568)
!17573 = !DILocation(line: 7810, column: 12, scope: !17574)
!17574 = distinct !DILexicalBlock(scope: !17568, file: !3, line: 7810, column: 12)
!17575 = !DILocation(line: 7810, column: 12, scope: !17568)
!17576 = !DILocation(line: 7811, column: 19, scope: !17574)
!17577 = !DILocation(line: 7811, column: 24, scope: !17574)
!17578 = !DILocation(line: 7811, column: 3, scope: !17574)
!17579 = !DILocation(line: 7813, column: 19, scope: !17574)
!17580 = !DILocation(line: 7813, column: 24, scope: !17574)
!17581 = !DILocation(line: 7813, column: 3, scope: !17574)
!17582 = !DILocation(line: 7815, column: 32, scope: !17568)
!17583 = !DILocation(line: 7815, column: 60, scope: !17568)
!17584 = !DILocation(line: 7815, column: 65, scope: !17568)
!17585 = !DILocation(line: 7815, column: 8, scope: !17568)
!17586 = !DILocation(line: 7817, column: 6, scope: !17163)
!17587 = !DILocalVariable(name: "loc", scope: !17588, file: !3, line: 7821, type: !1188)
!17588 = distinct !DILexicalBlock(scope: !17163, file: !3, line: 7820, column: 6)
!17589 = !DILocation(line: 7821, column: 12, scope: !17588)
!17590 = !DILocation(line: 7821, column: 18, scope: !17588)
!17591 = !DILocation(line: 7821, column: 22, scope: !17588)
!17592 = !DILocation(line: 7821, column: 24, scope: !17588)
!17593 = !DILocation(line: 7823, column: 12, scope: !17594)
!17594 = distinct !DILexicalBlock(scope: !17588, file: !3, line: 7823, column: 12)
!17595 = !DILocation(line: 7823, column: 12, scope: !17588)
!17596 = !DILocation(line: 7824, column: 19, scope: !17594)
!17597 = !DILocation(line: 7824, column: 24, scope: !17594)
!17598 = !DILocation(line: 7824, column: 3, scope: !17594)
!17599 = !DILocation(line: 7826, column: 19, scope: !17594)
!17600 = !DILocation(line: 7826, column: 24, scope: !17594)
!17601 = !DILocation(line: 7826, column: 3, scope: !17594)
!17602 = !DILocation(line: 7828, column: 32, scope: !17588)
!17603 = !DILocation(line: 7829, column: 11, scope: !17588)
!17604 = !DILocation(line: 7829, column: 16, scope: !17588)
!17605 = !DILocation(line: 7828, column: 8, scope: !17588)
!17606 = !DILocation(line: 7831, column: 6, scope: !17163)
!17607 = !DILocation(line: 7834, column: 27, scope: !17163)
!17608 = !DILocation(line: 7834, column: 31, scope: !17163)
!17609 = !DILocation(line: 7834, column: 33, scope: !17163)
!17610 = !DILocation(line: 7834, column: 6, scope: !17163)
!17611 = !DILocation(line: 7834, column: 11, scope: !17163)
!17612 = !DILocation(line: 7834, column: 24, scope: !17163)
!17613 = !DILocation(line: 7835, column: 6, scope: !17163)
!17614 = !DILocation(line: 7837, column: 5, scope: !17155)
!17615 = !DILocation(line: 7572, column: 69, scope: !17152)
!17616 = !DILocation(line: 7572, column: 3, scope: !17152)
!17617 = distinct !{!17617, !17153, !17618}
!17618 = !DILocation(line: 7837, column: 5, scope: !17149)
!17619 = !DILocation(line: 7838, column: 1, scope: !17131)
!17620 = distinct !DISubprogram(name: "VEC_variable_heap_free", scope: !3, file: !3, line: 7270, type: !17621, scopeLine: 7270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!17621 = !DISubroutineType(types: !17622)
!17622 = !{null, !17623}
!17623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2520, size: 64)
!17624 = !DILocalVariable(name: "vec_", arg: 1, scope: !17620, file: !3, line: 7270, type: !17623)
!17625 = !DILocation(line: 7270, column: 1, scope: !17620)
!17626 = !DILocation(line: 7270, column: 1, scope: !17627)
!17627 = distinct !DILexicalBlock(scope: !17620, file: !3, line: 7270, column: 1)
!17628 = distinct !DISubprogram(name: "emit_notes_for_differences_1", scope: !3, file: !3, line: 7423, type: !6290, scopeLine: 7424, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!17629 = !DILocalVariable(name: "slot", arg: 1, scope: !17628, file: !3, line: 7423, type: !1848)
!17630 = !DILocation(line: 7423, column: 38, scope: !17628)
!17631 = !DILocalVariable(name: "data", arg: 2, scope: !17628, file: !3, line: 7423, type: !1313)
!17632 = !DILocation(line: 7423, column: 50, scope: !17628)
!17633 = !DILocalVariable(name: "new_vars", scope: !17628, file: !3, line: 7425, type: !1827)
!17634 = !DILocation(line: 7425, column: 10, scope: !17628)
!17635 = !DILocation(line: 7425, column: 30, scope: !17628)
!17636 = !DILocation(line: 7425, column: 21, scope: !17628)
!17637 = !DILocalVariable(name: "old_var", scope: !17628, file: !3, line: 7426, type: !2447)
!17638 = !DILocation(line: 7426, column: 12, scope: !17628)
!17639 = !DILocalVariable(name: "new_var", scope: !17628, file: !3, line: 7426, type: !2447)
!17640 = !DILocation(line: 7426, column: 21, scope: !17628)
!17641 = !DILocation(line: 7428, column: 25, scope: !17628)
!17642 = !DILocation(line: 7428, column: 24, scope: !17628)
!17643 = !DILocation(line: 7428, column: 13, scope: !17628)
!17644 = !DILocation(line: 7428, column: 11, scope: !17628)
!17645 = !DILocation(line: 7429, column: 45, scope: !17628)
!17646 = !DILocation(line: 7429, column: 55, scope: !17628)
!17647 = !DILocation(line: 7429, column: 64, scope: !17628)
!17648 = !DILocation(line: 7430, column: 24, scope: !17628)
!17649 = !DILocation(line: 7430, column: 33, scope: !17628)
!17650 = !DILocation(line: 7430, column: 10, scope: !17628)
!17651 = !DILocation(line: 7429, column: 24, scope: !17628)
!17652 = !DILocation(line: 7429, column: 13, scope: !17628)
!17653 = !DILocation(line: 7429, column: 11, scope: !17628)
!17654 = !DILocation(line: 7432, column: 8, scope: !17655)
!17655 = distinct !DILexicalBlock(scope: !17628, file: !3, line: 7432, column: 7)
!17656 = !DILocation(line: 7432, column: 7, scope: !17628)
!17657 = !DILocalVariable(name: "empty_var", scope: !17658, file: !3, line: 7435, type: !2447)
!17658 = distinct !DILexicalBlock(scope: !17655, file: !3, line: 7433, column: 5)
!17659 = !DILocation(line: 7435, column: 16, scope: !17658)
!17660 = !DILocation(line: 7437, column: 51, scope: !17658)
!17661 = !DILocation(line: 7437, column: 60, scope: !17658)
!17662 = !DILocation(line: 7437, column: 42, scope: !17658)
!17663 = !DILocation(line: 7437, column: 30, scope: !17658)
!17664 = !DILocation(line: 7437, column: 19, scope: !17658)
!17665 = !DILocation(line: 7437, column: 17, scope: !17658)
!17666 = !DILocation(line: 7438, column: 23, scope: !17658)
!17667 = !DILocation(line: 7438, column: 32, scope: !17658)
!17668 = !DILocation(line: 7438, column: 7, scope: !17658)
!17669 = !DILocation(line: 7438, column: 18, scope: !17658)
!17670 = !DILocation(line: 7438, column: 21, scope: !17658)
!17671 = !DILocation(line: 7439, column: 7, scope: !17658)
!17672 = !DILocation(line: 7439, column: 18, scope: !17658)
!17673 = !DILocation(line: 7439, column: 27, scope: !17658)
!17674 = !DILocation(line: 7440, column: 7, scope: !17658)
!17675 = !DILocation(line: 7440, column: 18, scope: !17658)
!17676 = !DILocation(line: 7440, column: 30, scope: !17658)
!17677 = !DILocation(line: 7441, column: 7, scope: !17658)
!17678 = !DILocation(line: 7441, column: 18, scope: !17658)
!17679 = !DILocation(line: 7441, column: 34, scope: !17658)
!17680 = !DILocation(line: 7442, column: 7, scope: !17658)
!17681 = !DILocation(line: 7442, column: 18, scope: !17658)
!17682 = !DILocation(line: 7442, column: 39, scope: !17658)
!17683 = !DILocation(line: 7443, column: 25, scope: !17684)
!17684 = distinct !DILexicalBlock(scope: !17658, file: !3, line: 7443, column: 11)
!17685 = !DILocation(line: 7443, column: 34, scope: !17684)
!17686 = !DILocation(line: 7443, column: 11, scope: !17684)
!17687 = !DILocation(line: 7443, column: 11, scope: !17658)
!17688 = !DILocalVariable(name: "lc", scope: !17689, file: !3, line: 7445, type: !2437)
!17689 = distinct !DILexicalBlock(scope: !17684, file: !3, line: 7444, column: 2)
!17690 = !DILocation(line: 7445, column: 19, scope: !17689)
!17691 = !DILocation(line: 7447, column: 4, scope: !17689)
!17692 = !DILocation(line: 7448, column: 14, scope: !17693)
!17693 = distinct !DILexicalBlock(scope: !17689, file: !3, line: 7448, column: 4)
!17694 = !DILocation(line: 7448, column: 23, scope: !17693)
!17695 = !DILocation(line: 7448, column: 35, scope: !17693)
!17696 = !DILocation(line: 7448, column: 12, scope: !17693)
!17697 = !DILocation(line: 7448, column: 9, scope: !17693)
!17698 = !DILocation(line: 7448, column: 46, scope: !17699)
!17699 = distinct !DILexicalBlock(scope: !17693, file: !3, line: 7448, column: 4)
!17700 = !DILocation(line: 7448, column: 4, scope: !17693)
!17701 = !DILocation(line: 7449, column: 27, scope: !17699)
!17702 = !DILocation(line: 7449, column: 36, scope: !17699)
!17703 = !DILocation(line: 7449, column: 40, scope: !17699)
!17704 = !DILocation(line: 7449, column: 44, scope: !17699)
!17705 = !DILocation(line: 7449, column: 6, scope: !17699)
!17706 = !DILocation(line: 7448, column: 55, scope: !17699)
!17707 = !DILocation(line: 7448, column: 59, scope: !17699)
!17708 = !DILocation(line: 7448, column: 53, scope: !17699)
!17709 = !DILocation(line: 7448, column: 4, scope: !17699)
!17710 = distinct !{!17710, !17700, !17711}
!17711 = !DILocation(line: 7449, column: 47, scope: !17693)
!17712 = !DILocation(line: 7450, column: 2, scope: !17689)
!17713 = !DILocation(line: 7451, column: 29, scope: !17658)
!17714 = !DILocation(line: 7451, column: 7, scope: !17658)
!17715 = !DILocation(line: 7453, column: 7, scope: !17658)
!17716 = !DILocation(line: 7455, column: 29, scope: !17717)
!17717 = distinct !DILexicalBlock(scope: !17628, file: !3, line: 7455, column: 7)
!17718 = !DILocation(line: 7455, column: 38, scope: !17717)
!17719 = !DILocation(line: 7455, column: 7, scope: !17717)
!17720 = !DILocation(line: 7455, column: 7, scope: !17628)
!17721 = !DILocation(line: 7457, column: 25, scope: !17722)
!17722 = distinct !DILexicalBlock(scope: !17723, file: !3, line: 7457, column: 11)
!17723 = distinct !DILexicalBlock(scope: !17717, file: !3, line: 7456, column: 5)
!17724 = !DILocation(line: 7457, column: 34, scope: !17722)
!17725 = !DILocation(line: 7457, column: 11, scope: !17722)
!17726 = !DILocation(line: 7457, column: 11, scope: !17723)
!17727 = !DILocalVariable(name: "lc1", scope: !17728, file: !3, line: 7459, type: !2437)
!17728 = distinct !DILexicalBlock(scope: !17722, file: !3, line: 7458, column: 2)
!17729 = !DILocation(line: 7459, column: 19, scope: !17728)
!17730 = !DILocalVariable(name: "lc2", scope: !17728, file: !3, line: 7459, type: !2437)
!17731 = !DILocation(line: 7459, column: 24, scope: !17728)
!17732 = !DILocation(line: 7461, column: 4, scope: !17728)
!17733 = !DILocation(line: 7462, column: 4, scope: !17728)
!17734 = !DILocation(line: 7463, column: 10, scope: !17728)
!17735 = !DILocation(line: 7463, column: 19, scope: !17728)
!17736 = !DILocation(line: 7463, column: 31, scope: !17728)
!17737 = !DILocation(line: 7463, column: 8, scope: !17728)
!17738 = !DILocation(line: 7464, column: 10, scope: !17728)
!17739 = !DILocation(line: 7464, column: 19, scope: !17728)
!17740 = !DILocation(line: 7464, column: 31, scope: !17728)
!17741 = !DILocation(line: 7464, column: 8, scope: !17728)
!17742 = !DILocation(line: 7465, column: 4, scope: !17728)
!17743 = !DILocation(line: 7465, column: 11, scope: !17728)
!17744 = !DILocation(line: 7466, column: 4, scope: !17728)
!17745 = !DILocation(line: 7466, column: 7, scope: !17728)
!17746 = !DILocation(line: 7467, column: 4, scope: !17728)
!17747 = !DILocation(line: 7467, column: 9, scope: !17728)
!17748 = !DILocation(line: 7467, column: 26, scope: !17728)
!17749 = !DILocation(line: 7467, column: 29, scope: !17728)
!17750 = !DILocation(line: 7468, column: 8, scope: !17728)
!17751 = !DILocation(line: 7468, column: 24, scope: !17728)
!17752 = !DILocation(line: 7468, column: 29, scope: !17728)
!17753 = !DILocation(line: 7468, column: 34, scope: !17728)
!17754 = !DILocation(line: 7468, column: 39, scope: !17728)
!17755 = !DILocation(line: 7468, column: 11, scope: !17728)
!17756 = !DILocation(line: 0, scope: !17728)
!17757 = !DILocation(line: 7470, column: 14, scope: !17758)
!17758 = distinct !DILexicalBlock(scope: !17728, file: !3, line: 7469, column: 6)
!17759 = !DILocation(line: 7470, column: 19, scope: !17758)
!17760 = !DILocation(line: 7470, column: 12, scope: !17758)
!17761 = !DILocation(line: 7471, column: 14, scope: !17758)
!17762 = !DILocation(line: 7471, column: 19, scope: !17758)
!17763 = !DILocation(line: 7471, column: 12, scope: !17758)
!17764 = distinct !{!17764, !17742, !17765}
!17765 = !DILocation(line: 7472, column: 6, scope: !17728)
!17766 = !DILocation(line: 7473, column: 4, scope: !17728)
!17767 = !DILocation(line: 7473, column: 11, scope: !17768)
!17768 = distinct !DILexicalBlock(scope: !17769, file: !3, line: 7473, column: 4)
!17769 = distinct !DILexicalBlock(scope: !17728, file: !3, line: 7473, column: 4)
!17770 = !DILocation(line: 7473, column: 4, scope: !17769)
!17771 = !DILocation(line: 7474, column: 24, scope: !17768)
!17772 = !DILocation(line: 7474, column: 33, scope: !17768)
!17773 = !DILocation(line: 7474, column: 37, scope: !17768)
!17774 = !DILocation(line: 7474, column: 42, scope: !17768)
!17775 = !DILocation(line: 7474, column: 6, scope: !17768)
!17776 = !DILocation(line: 7473, column: 22, scope: !17768)
!17777 = !DILocation(line: 7473, column: 27, scope: !17768)
!17778 = !DILocation(line: 7473, column: 20, scope: !17768)
!17779 = !DILocation(line: 7473, column: 4, scope: !17768)
!17780 = distinct !{!17780, !17770, !17781}
!17781 = !DILocation(line: 7474, column: 45, scope: !17769)
!17782 = !DILocation(line: 7475, column: 4, scope: !17728)
!17783 = !DILocation(line: 7475, column: 11, scope: !17784)
!17784 = distinct !DILexicalBlock(scope: !17785, file: !3, line: 7475, column: 4)
!17785 = distinct !DILexicalBlock(scope: !17728, file: !3, line: 7475, column: 4)
!17786 = !DILocation(line: 7475, column: 4, scope: !17785)
!17787 = !DILocation(line: 7476, column: 27, scope: !17784)
!17788 = !DILocation(line: 7476, column: 36, scope: !17784)
!17789 = !DILocation(line: 7476, column: 40, scope: !17784)
!17790 = !DILocation(line: 7476, column: 45, scope: !17784)
!17791 = !DILocation(line: 7476, column: 6, scope: !17784)
!17792 = !DILocation(line: 7475, column: 22, scope: !17784)
!17793 = !DILocation(line: 7475, column: 27, scope: !17784)
!17794 = !DILocation(line: 7475, column: 20, scope: !17784)
!17795 = !DILocation(line: 7475, column: 4, scope: !17784)
!17796 = distinct !{!17796, !17786, !17797}
!17797 = !DILocation(line: 7476, column: 48, scope: !17785)
!17798 = !DILocation(line: 7477, column: 2, scope: !17728)
!17799 = !DILocation(line: 7478, column: 29, scope: !17723)
!17800 = !DILocation(line: 7478, column: 7, scope: !17723)
!17801 = !DILocation(line: 7479, column: 5, scope: !17723)
!17802 = !DILocation(line: 7481, column: 7, scope: !17803)
!17803 = distinct !DILexicalBlock(scope: !17628, file: !3, line: 7481, column: 7)
!17804 = !DILocation(line: 7481, column: 18, scope: !17803)
!17805 = !DILocation(line: 7481, column: 15, scope: !17803)
!17806 = !DILocation(line: 7481, column: 7, scope: !17628)
!17807 = !DILocalVariable(name: "i", scope: !17808, file: !3, line: 7483, type: !1010)
!17808 = distinct !DILexicalBlock(scope: !17803, file: !3, line: 7482, column: 5)
!17809 = !DILocation(line: 7483, column: 11, scope: !17808)
!17810 = !DILocation(line: 7484, column: 14, scope: !17811)
!17811 = distinct !DILexicalBlock(scope: !17808, file: !3, line: 7484, column: 7)
!17812 = !DILocation(line: 7484, column: 12, scope: !17811)
!17813 = !DILocation(line: 7484, column: 19, scope: !17814)
!17814 = distinct !DILexicalBlock(scope: !17811, file: !3, line: 7484, column: 7)
!17815 = !DILocation(line: 7484, column: 23, scope: !17814)
!17816 = !DILocation(line: 7484, column: 32, scope: !17814)
!17817 = !DILocation(line: 7484, column: 21, scope: !17814)
!17818 = !DILocation(line: 7484, column: 7, scope: !17811)
!17819 = !DILocation(line: 7486, column: 4, scope: !17820)
!17820 = distinct !DILexicalBlock(scope: !17814, file: !3, line: 7485, column: 2)
!17821 = !DILocation(line: 7486, column: 13, scope: !17820)
!17822 = !DILocation(line: 7486, column: 22, scope: !17820)
!17823 = !DILocation(line: 7486, column: 25, scope: !17820)
!17824 = !DILocation(line: 7486, column: 33, scope: !17820)
!17825 = !DILocation(line: 7487, column: 8, scope: !17826)
!17826 = distinct !DILexicalBlock(scope: !17820, file: !3, line: 7487, column: 8)
!17827 = !DILocation(line: 7487, column: 17, scope: !17826)
!17828 = !DILocation(line: 7487, column: 32, scope: !17826)
!17829 = !DILocation(line: 7487, column: 41, scope: !17826)
!17830 = !DILocation(line: 7487, column: 29, scope: !17826)
!17831 = !DILocation(line: 7488, column: 8, scope: !17826)
!17832 = !DILocation(line: 7488, column: 11, scope: !17826)
!17833 = !DILocation(line: 7488, column: 20, scope: !17826)
!17834 = !DILocation(line: 7488, column: 29, scope: !17826)
!17835 = !DILocation(line: 7488, column: 32, scope: !17826)
!17836 = !DILocation(line: 7488, column: 42, scope: !17826)
!17837 = !DILocation(line: 7488, column: 51, scope: !17826)
!17838 = !DILocation(line: 7488, column: 60, scope: !17826)
!17839 = !DILocation(line: 7488, column: 63, scope: !17826)
!17840 = !DILocation(line: 7488, column: 39, scope: !17826)
!17841 = !DILocation(line: 7487, column: 8, scope: !17820)
!17842 = !DILocation(line: 7489, column: 6, scope: !17826)
!17843 = !DILocation(line: 7489, column: 15, scope: !17826)
!17844 = !DILocation(line: 7489, column: 31, scope: !17826)
!17845 = !DILocation(line: 7490, column: 13, scope: !17846)
!17846 = distinct !DILexicalBlock(scope: !17826, file: !3, line: 7490, column: 13)
!17847 = !DILocation(line: 7490, column: 22, scope: !17846)
!17848 = !DILocation(line: 7490, column: 31, scope: !17846)
!17849 = !DILocation(line: 7490, column: 34, scope: !17846)
!17850 = !DILocation(line: 7490, column: 42, scope: !17846)
!17851 = !DILocation(line: 7490, column: 13, scope: !17826)
!17852 = !DILocalVariable(name: "lc", scope: !17853, file: !3, line: 7492, type: !2437)
!17853 = distinct !DILexicalBlock(scope: !17846, file: !3, line: 7491, column: 6)
!17854 = !DILocation(line: 7492, column: 23, scope: !17853)
!17855 = !DILocalVariable(name: "cur_loc", scope: !17853, file: !3, line: 7493, type: !1188)
!17856 = !DILocation(line: 7493, column: 12, scope: !17853)
!17857 = !DILocation(line: 7493, column: 22, scope: !17853)
!17858 = !DILocation(line: 7493, column: 31, scope: !17853)
!17859 = !DILocation(line: 7493, column: 40, scope: !17853)
!17860 = !DILocation(line: 7493, column: 43, scope: !17853)
!17861 = !DILocation(line: 7495, column: 18, scope: !17862)
!17862 = distinct !DILexicalBlock(scope: !17853, file: !3, line: 7495, column: 8)
!17863 = !DILocation(line: 7495, column: 27, scope: !17862)
!17864 = !DILocation(line: 7495, column: 36, scope: !17862)
!17865 = !DILocation(line: 7495, column: 39, scope: !17862)
!17866 = !DILocation(line: 7495, column: 16, scope: !17862)
!17867 = !DILocation(line: 7495, column: 13, scope: !17862)
!17868 = !DILocation(line: 7495, column: 50, scope: !17869)
!17869 = distinct !DILexicalBlock(scope: !17862, file: !3, line: 7495, column: 8)
!17870 = !DILocation(line: 7495, column: 8, scope: !17862)
!17871 = !DILocation(line: 7496, column: 7, scope: !17872)
!17872 = distinct !DILexicalBlock(scope: !17869, file: !3, line: 7496, column: 7)
!17873 = !DILocation(line: 7496, column: 11, scope: !17872)
!17874 = !DILocation(line: 7496, column: 18, scope: !17872)
!17875 = !DILocation(line: 7496, column: 15, scope: !17872)
!17876 = !DILocation(line: 7497, column: 7, scope: !17872)
!17877 = !DILocation(line: 7497, column: 23, scope: !17872)
!17878 = !DILocation(line: 7497, column: 32, scope: !17872)
!17879 = !DILocation(line: 7497, column: 36, scope: !17872)
!17880 = !DILocation(line: 7497, column: 10, scope: !17872)
!17881 = !DILocation(line: 7496, column: 7, scope: !17869)
!17882 = !DILocation(line: 7499, column: 38, scope: !17883)
!17883 = distinct !DILexicalBlock(scope: !17872, file: !3, line: 7498, column: 5)
!17884 = !DILocation(line: 7499, column: 42, scope: !17883)
!17885 = !DILocation(line: 7499, column: 7, scope: !17883)
!17886 = !DILocation(line: 7499, column: 16, scope: !17883)
!17887 = !DILocation(line: 7499, column: 25, scope: !17883)
!17888 = !DILocation(line: 7499, column: 28, scope: !17883)
!17889 = !DILocation(line: 7499, column: 36, scope: !17883)
!17890 = !DILocation(line: 7500, column: 7, scope: !17883)
!17891 = !DILocation(line: 7497, column: 39, scope: !17872)
!17892 = !DILocation(line: 7495, column: 59, scope: !17869)
!17893 = !DILocation(line: 7495, column: 63, scope: !17869)
!17894 = !DILocation(line: 7495, column: 57, scope: !17869)
!17895 = !DILocation(line: 7495, column: 8, scope: !17869)
!17896 = distinct !{!17896, !17870, !17897}
!17897 = !DILocation(line: 7501, column: 5, scope: !17862)
!17898 = !DILocation(line: 7502, column: 12, scope: !17899)
!17899 = distinct !DILexicalBlock(scope: !17853, file: !3, line: 7502, column: 12)
!17900 = !DILocation(line: 7502, column: 15, scope: !17899)
!17901 = !DILocation(line: 7502, column: 12, scope: !17853)
!17902 = !DILocation(line: 7503, column: 3, scope: !17899)
!17903 = !DILocation(line: 7503, column: 12, scope: !17899)
!17904 = !DILocation(line: 7503, column: 28, scope: !17899)
!17905 = !DILocation(line: 7504, column: 6, scope: !17853)
!17906 = !DILocation(line: 7505, column: 2, scope: !17820)
!17907 = !DILocation(line: 7484, column: 46, scope: !17814)
!17908 = !DILocation(line: 7484, column: 7, scope: !17814)
!17909 = distinct !{!17909, !17818, !17910}
!17910 = !DILocation(line: 7505, column: 2, scope: !17811)
!17911 = !DILocation(line: 7506, column: 5, scope: !17808)
!17912 = !DILocation(line: 7509, column: 3, scope: !17628)
!17913 = !DILocation(line: 7510, column: 1, scope: !17628)
!17914 = distinct !DISubprogram(name: "emit_notes_for_differences_2", scope: !3, file: !3, line: 7516, type: !6290, scopeLine: 7517, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!17915 = !DILocalVariable(name: "slot", arg: 1, scope: !17914, file: !3, line: 7516, type: !1848)
!17916 = !DILocation(line: 7516, column: 38, scope: !17914)
!17917 = !DILocalVariable(name: "data", arg: 2, scope: !17914, file: !3, line: 7516, type: !1313)
!17918 = !DILocation(line: 7516, column: 50, scope: !17914)
!17919 = !DILocalVariable(name: "old_vars", scope: !17914, file: !3, line: 7518, type: !1827)
!17920 = !DILocation(line: 7518, column: 10, scope: !17914)
!17921 = !DILocation(line: 7518, column: 30, scope: !17914)
!17922 = !DILocation(line: 7518, column: 21, scope: !17914)
!17923 = !DILocalVariable(name: "old_var", scope: !17914, file: !3, line: 7519, type: !2447)
!17924 = !DILocation(line: 7519, column: 12, scope: !17914)
!17925 = !DILocalVariable(name: "new_var", scope: !17914, file: !3, line: 7519, type: !2447)
!17926 = !DILocation(line: 7519, column: 21, scope: !17914)
!17927 = !DILocation(line: 7521, column: 25, scope: !17914)
!17928 = !DILocation(line: 7521, column: 24, scope: !17914)
!17929 = !DILocation(line: 7521, column: 13, scope: !17914)
!17930 = !DILocation(line: 7521, column: 11, scope: !17914)
!17931 = !DILocation(line: 7522, column: 45, scope: !17914)
!17932 = !DILocation(line: 7522, column: 55, scope: !17914)
!17933 = !DILocation(line: 7522, column: 64, scope: !17914)
!17934 = !DILocation(line: 7523, column: 24, scope: !17914)
!17935 = !DILocation(line: 7523, column: 33, scope: !17914)
!17936 = !DILocation(line: 7523, column: 10, scope: !17914)
!17937 = !DILocation(line: 7522, column: 24, scope: !17914)
!17938 = !DILocation(line: 7522, column: 13, scope: !17914)
!17939 = !DILocation(line: 7522, column: 11, scope: !17914)
!17940 = !DILocation(line: 7524, column: 8, scope: !17941)
!17941 = distinct !DILexicalBlock(scope: !17914, file: !3, line: 7524, column: 7)
!17942 = !DILocation(line: 7524, column: 7, scope: !17914)
!17943 = !DILocalVariable(name: "i", scope: !17944, file: !3, line: 7526, type: !1010)
!17944 = distinct !DILexicalBlock(scope: !17941, file: !3, line: 7525, column: 5)
!17945 = !DILocation(line: 7526, column: 11, scope: !17944)
!17946 = !DILocation(line: 7528, column: 25, scope: !17947)
!17947 = distinct !DILexicalBlock(scope: !17944, file: !3, line: 7528, column: 11)
!17948 = !DILocation(line: 7528, column: 34, scope: !17947)
!17949 = !DILocation(line: 7528, column: 11, scope: !17947)
!17950 = !DILocation(line: 7528, column: 11, scope: !17944)
!17951 = !DILocalVariable(name: "lc", scope: !17952, file: !3, line: 7530, type: !2437)
!17952 = distinct !DILexicalBlock(scope: !17947, file: !3, line: 7529, column: 2)
!17953 = !DILocation(line: 7530, column: 19, scope: !17952)
!17954 = !DILocation(line: 7532, column: 4, scope: !17952)
!17955 = !DILocation(line: 7533, column: 14, scope: !17956)
!17956 = distinct !DILexicalBlock(scope: !17952, file: !3, line: 7533, column: 4)
!17957 = !DILocation(line: 7533, column: 23, scope: !17956)
!17958 = !DILocation(line: 7533, column: 35, scope: !17956)
!17959 = !DILocation(line: 7533, column: 12, scope: !17956)
!17960 = !DILocation(line: 7533, column: 9, scope: !17956)
!17961 = !DILocation(line: 7533, column: 46, scope: !17962)
!17962 = distinct !DILexicalBlock(scope: !17956, file: !3, line: 7533, column: 4)
!17963 = !DILocation(line: 7533, column: 4, scope: !17956)
!17964 = !DILocation(line: 7534, column: 24, scope: !17962)
!17965 = !DILocation(line: 7534, column: 33, scope: !17962)
!17966 = !DILocation(line: 7534, column: 37, scope: !17962)
!17967 = !DILocation(line: 7534, column: 41, scope: !17962)
!17968 = !DILocation(line: 7534, column: 6, scope: !17962)
!17969 = !DILocation(line: 7533, column: 55, scope: !17962)
!17970 = !DILocation(line: 7533, column: 59, scope: !17962)
!17971 = !DILocation(line: 7533, column: 53, scope: !17962)
!17972 = !DILocation(line: 7533, column: 4, scope: !17962)
!17973 = distinct !{!17973, !17963, !17974}
!17974 = !DILocation(line: 7534, column: 44, scope: !17956)
!17975 = !DILocation(line: 7535, column: 2, scope: !17952)
!17976 = !DILocation(line: 7536, column: 14, scope: !17977)
!17977 = distinct !DILexicalBlock(scope: !17944, file: !3, line: 7536, column: 7)
!17978 = !DILocation(line: 7536, column: 12, scope: !17977)
!17979 = !DILocation(line: 7536, column: 19, scope: !17980)
!17980 = distinct !DILexicalBlock(scope: !17977, file: !3, line: 7536, column: 7)
!17981 = !DILocation(line: 7536, column: 23, scope: !17980)
!17982 = !DILocation(line: 7536, column: 32, scope: !17980)
!17983 = !DILocation(line: 7536, column: 21, scope: !17980)
!17984 = !DILocation(line: 7536, column: 7, scope: !17977)
!17985 = !DILocation(line: 7537, column: 2, scope: !17980)
!17986 = !DILocation(line: 7537, column: 11, scope: !17980)
!17987 = !DILocation(line: 7537, column: 20, scope: !17980)
!17988 = !DILocation(line: 7537, column: 23, scope: !17980)
!17989 = !DILocation(line: 7537, column: 31, scope: !17980)
!17990 = !DILocation(line: 7536, column: 46, scope: !17980)
!17991 = !DILocation(line: 7536, column: 7, scope: !17980)
!17992 = distinct !{!17992, !17984, !17993}
!17993 = !DILocation(line: 7537, column: 33, scope: !17977)
!17994 = !DILocation(line: 7538, column: 29, scope: !17944)
!17995 = !DILocation(line: 7538, column: 7, scope: !17944)
!17996 = !DILocation(line: 7539, column: 5, scope: !17944)
!17997 = !DILocation(line: 7542, column: 3, scope: !17914)
!17998 = distinct !DISubprogram(name: "emit_notes_for_changes", scope: !3, file: !3, line: 7388, type: !17999, scopeLine: 7390, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!17999 = !DISubroutineType(types: !18000)
!18000 = !{null, !1188, !988, !2363}
!18001 = !DILocalVariable(name: "insn", arg: 1, scope: !17998, file: !3, line: 7388, type: !1188)
!18002 = !DILocation(line: 7388, column: 29, scope: !17998)
!18003 = !DILocalVariable(name: "where", arg: 2, scope: !17998, file: !3, line: 7388, type: !988)
!18004 = !DILocation(line: 7388, column: 56, scope: !17998)
!18005 = !DILocalVariable(name: "vars", arg: 3, scope: !17998, file: !3, line: 7389, type: !2363)
!18006 = !DILocation(line: 7389, column: 16, scope: !17998)
!18007 = !DILocalVariable(name: "data", scope: !17998, file: !3, line: 7391, type: !2539)
!18008 = !DILocation(line: 7391, column: 18, scope: !17998)
!18009 = !DILocalVariable(name: "htab", scope: !17998, file: !3, line: 7392, type: !1827)
!18010 = !DILocation(line: 7392, column: 10, scope: !17998)
!18011 = !DILocation(line: 7392, column: 35, scope: !17998)
!18012 = !DILocation(line: 7392, column: 17, scope: !17998)
!18013 = !DILocation(line: 7394, column: 23, scope: !18014)
!18014 = distinct !DILexicalBlock(scope: !17998, file: !3, line: 7394, column: 7)
!18015 = !DILocation(line: 7394, column: 8, scope: !18014)
!18016 = !DILocation(line: 7394, column: 7, scope: !17998)
!18017 = !DILocation(line: 7395, column: 5, scope: !18014)
!18018 = !DILocation(line: 7397, column: 7, scope: !18019)
!18019 = distinct !DILexicalBlock(scope: !17998, file: !3, line: 7397, column: 7)
!18020 = !DILocation(line: 7397, column: 7, scope: !17998)
!18021 = !DILocation(line: 7402, column: 22, scope: !18022)
!18022 = distinct !DILexicalBlock(scope: !18019, file: !3, line: 7398, column: 5)
!18023 = !DILocation(line: 7402, column: 63, scope: !18022)
!18024 = !DILocation(line: 7402, column: 7, scope: !18022)
!18025 = !DILocation(line: 7403, column: 7, scope: !18022)
!18026 = !DILocation(line: 7403, column: 14, scope: !18022)
!18027 = !DILocation(line: 7403, column: 61, scope: !18022)
!18028 = !DILocation(line: 7404, column: 24, scope: !18022)
!18029 = !DILocation(line: 7405, column: 10, scope: !18022)
!18030 = !DILocation(line: 7404, column: 2, scope: !18022)
!18031 = distinct !{!18031, !18025, !18032}
!18032 = !DILocation(line: 7405, column: 14, scope: !18022)
!18033 = !DILocation(line: 7406, column: 7, scope: !18022)
!18034 = !DILocation(line: 7406, column: 14, scope: !18022)
!18035 = !DILocation(line: 7406, column: 53, scope: !18022)
!18036 = !DILocation(line: 7407, column: 33, scope: !18022)
!18037 = !DILocation(line: 7407, column: 18, scope: !18022)
!18038 = !DILocation(line: 7407, column: 2, scope: !18022)
!18039 = distinct !{!18039, !18033, !18040}
!18040 = !DILocation(line: 7408, column: 9, scope: !18022)
!18041 = !DILocation(line: 7409, column: 22, scope: !18022)
!18042 = !DILocation(line: 7409, column: 63, scope: !18022)
!18043 = !DILocation(line: 7409, column: 7, scope: !18022)
!18044 = !DILocation(line: 7410, column: 5, scope: !18022)
!18045 = !DILocation(line: 7412, column: 15, scope: !17998)
!18046 = !DILocation(line: 7412, column: 8, scope: !17998)
!18047 = !DILocation(line: 7412, column: 13, scope: !17998)
!18048 = !DILocation(line: 7413, column: 16, scope: !17998)
!18049 = !DILocation(line: 7413, column: 8, scope: !17998)
!18050 = !DILocation(line: 7413, column: 14, scope: !17998)
!18051 = !DILocation(line: 7414, column: 15, scope: !17998)
!18052 = !DILocation(line: 7414, column: 8, scope: !17998)
!18053 = !DILocation(line: 7414, column: 13, scope: !17998)
!18054 = !DILocation(line: 7416, column: 18, scope: !17998)
!18055 = !DILocation(line: 7416, column: 66, scope: !17998)
!18056 = !DILocation(line: 7416, column: 3, scope: !17998)
!18057 = !DILocation(line: 7417, column: 1, scope: !17998)
!18058 = distinct !DISubprogram(name: "check_changed_vars_1", scope: !3, file: !3, line: 7317, type: !6290, scopeLine: 7318, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!18059 = !DILocalVariable(name: "slot", arg: 1, scope: !18058, file: !3, line: 7317, type: !1848)
!18060 = !DILocation(line: 7317, column: 30, scope: !18058)
!18061 = !DILocalVariable(name: "data", arg: 2, scope: !18058, file: !3, line: 7317, type: !1313)
!18062 = !DILocation(line: 7317, column: 42, scope: !18058)
!18063 = !DILocalVariable(name: "var", scope: !18058, file: !3, line: 7319, type: !2447)
!18064 = !DILocation(line: 7319, column: 12, scope: !18058)
!18065 = !DILocation(line: 7319, column: 30, scope: !18058)
!18066 = !DILocation(line: 7319, column: 29, scope: !18058)
!18067 = !DILocation(line: 7319, column: 18, scope: !18058)
!18068 = !DILocalVariable(name: "htab", scope: !18058, file: !3, line: 7320, type: !1827)
!18069 = !DILocation(line: 7320, column: 10, scope: !18058)
!18070 = !DILocation(line: 7320, column: 26, scope: !18058)
!18071 = !DILocation(line: 7320, column: 17, scope: !18058)
!18072 = !DILocation(line: 7322, column: 22, scope: !18073)
!18073 = distinct !DILexicalBlock(scope: !18058, file: !3, line: 7322, column: 7)
!18074 = !DILocation(line: 7322, column: 27, scope: !18073)
!18075 = !DILocation(line: 7322, column: 7, scope: !18073)
!18076 = !DILocation(line: 7323, column: 7, scope: !18073)
!18077 = !DILocation(line: 7323, column: 10, scope: !18073)
!18078 = !DILocation(line: 7323, column: 43, scope: !18073)
!18079 = !DILocation(line: 7322, column: 7, scope: !18058)
!18080 = !DILocation(line: 7324, column: 27, scope: !18073)
!18081 = !DILocation(line: 7324, column: 32, scope: !18073)
!18082 = !DILocation(line: 7324, column: 36, scope: !18073)
!18083 = !DILocation(line: 7324, column: 5, scope: !18073)
!18084 = !DILocation(line: 7325, column: 3, scope: !18058)
!18085 = distinct !DISubprogram(name: "VEC_variable_base_length", scope: !3, file: !3, line: 7269, type: !18086, scopeLine: 7269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!18086 = !DISubroutineType(types: !18087)
!18087 = !{!7, !18088}
!18088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !18089, size: 64)
!18089 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2525)
!18090 = !DILocalVariable(name: "vec_", arg: 1, scope: !18085, file: !3, line: 7269, type: !18088)
!18091 = !DILocation(line: 7269, column: 1, scope: !18085)
!18092 = distinct !DISubprogram(name: "check_changed_vars_2", scope: !3, file: !3, line: 7333, type: !18093, scopeLine: 7334, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!18093 = !DISubroutineType(types: !18094)
!18094 = !{null, !2447, !1827}
!18095 = !DILocalVariable(name: "var", arg: 1, scope: !18092, file: !3, line: 7333, type: !2447)
!18096 = !DILocation(line: 7333, column: 32, scope: !18092)
!18097 = !DILocalVariable(name: "htab", arg: 2, scope: !18092, file: !3, line: 7333, type: !1827)
!18098 = !DILocation(line: 7333, column: 44, scope: !18092)
!18099 = !DILocation(line: 7335, column: 25, scope: !18092)
!18100 = !DILocation(line: 7335, column: 3, scope: !18092)
!18101 = !DILocation(line: 7336, column: 22, scope: !18102)
!18102 = distinct !DILexicalBlock(scope: !18092, file: !3, line: 7336, column: 7)
!18103 = !DILocation(line: 7336, column: 27, scope: !18102)
!18104 = !DILocation(line: 7336, column: 7, scope: !18102)
!18105 = !DILocation(line: 7337, column: 7, scope: !18102)
!18106 = !DILocation(line: 7337, column: 10, scope: !18102)
!18107 = !DILocation(line: 7337, column: 43, scope: !18102)
!18108 = !DILocation(line: 7336, column: 7, scope: !18092)
!18109 = !DILocation(line: 7338, column: 27, scope: !18102)
!18110 = !DILocation(line: 7338, column: 32, scope: !18102)
!18111 = !DILocation(line: 7338, column: 36, scope: !18102)
!18112 = !DILocation(line: 7338, column: 5, scope: !18102)
!18113 = !DILocation(line: 7339, column: 1, scope: !18092)
!18114 = distinct !DISubprogram(name: "VEC_variable_base_pop", scope: !3, file: !3, line: 7269, type: !18115, scopeLine: 7269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!18115 = !DISubroutineType(types: !18116)
!18116 = !{!2447, !18117}
!18117 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2525, size: 64)
!18118 = !DILocalVariable(name: "vec_", arg: 1, scope: !18114, file: !3, line: 7269, type: !18117)
!18119 = !DILocation(line: 7269, column: 1, scope: !18114)
!18120 = !DILocalVariable(name: "obj_", scope: !18114, file: !3, line: 7269, type: !2447)
!18121 = distinct !DISubprogram(name: "VEC_rtx_base_length", scope: !561, file: !561, line: 200, type: !18122, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!18122 = !DISubroutineType(types: !18123)
!18123 = !{!7, !17046}
!18124 = !DILocalVariable(name: "vec_", arg: 1, scope: !18121, file: !561, line: 200, type: !17046)
!18125 = !DILocation(line: 200, column: 1, scope: !18121)
!18126 = distinct !DISubprogram(name: "VEC_rtx_base_pop", scope: !561, file: !561, line: 200, type: !18127, scopeLine: 200, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!18127 = !DISubroutineType(types: !18128)
!18128 = !{!1188, !5394}
!18129 = !DILocalVariable(name: "vec_", arg: 1, scope: !18126, file: !561, line: 200, type: !5394)
!18130 = !DILocation(line: 200, column: 1, scope: !18126)
!18131 = !DILocalVariable(name: "obj_", scope: !18126, file: !561, line: 200, type: !1188)
!18132 = distinct !DISubprogram(name: "check_changed_vars_3", scope: !3, file: !3, line: 7348, type: !6290, scopeLine: 7349, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!18133 = !DILocalVariable(name: "slot", arg: 1, scope: !18132, file: !3, line: 7348, type: !1848)
!18134 = !DILocation(line: 7348, column: 30, scope: !18132)
!18135 = !DILocalVariable(name: "data", arg: 2, scope: !18132, file: !3, line: 7348, type: !1313)
!18136 = !DILocation(line: 7348, column: 42, scope: !18132)
!18137 = !DILocalVariable(name: "var", scope: !18132, file: !3, line: 7350, type: !2447)
!18138 = !DILocation(line: 7350, column: 12, scope: !18132)
!18139 = !DILocation(line: 7350, column: 30, scope: !18132)
!18140 = !DILocation(line: 7350, column: 29, scope: !18132)
!18141 = !DILocation(line: 7350, column: 18, scope: !18132)
!18142 = !DILocalVariable(name: "vars", scope: !18132, file: !3, line: 7351, type: !1827)
!18143 = !DILocation(line: 7351, column: 10, scope: !18132)
!18144 = !DILocation(line: 7351, column: 26, scope: !18132)
!18145 = !DILocation(line: 7351, column: 17, scope: !18132)
!18146 = !DILocalVariable(name: "i", scope: !18132, file: !3, line: 7352, type: !1010)
!18147 = !DILocation(line: 7352, column: 7, scope: !18132)
!18148 = !DILocalVariable(name: "lc", scope: !18132, file: !3, line: 7353, type: !2437)
!18149 = !DILocation(line: 7353, column: 18, scope: !18132)
!18150 = !DILocalVariable(name: "cur_loc_changed", scope: !18132, file: !3, line: 7354, type: !1130)
!18151 = !DILocation(line: 7354, column: 8, scope: !18132)
!18152 = !DILocation(line: 7356, column: 22, scope: !18153)
!18153 = distinct !DILexicalBlock(scope: !18132, file: !3, line: 7356, column: 7)
!18154 = !DILocation(line: 7356, column: 27, scope: !18153)
!18155 = !DILocation(line: 7356, column: 7, scope: !18153)
!18156 = !DILocation(line: 7357, column: 7, scope: !18153)
!18157 = !DILocation(line: 7357, column: 10, scope: !18153)
!18158 = !DILocation(line: 7357, column: 43, scope: !18153)
!18159 = !DILocation(line: 7356, column: 7, scope: !18132)
!18160 = !DILocation(line: 7358, column: 5, scope: !18153)
!18161 = !DILocation(line: 7360, column: 10, scope: !18162)
!18162 = distinct !DILexicalBlock(scope: !18132, file: !3, line: 7360, column: 3)
!18163 = !DILocation(line: 7360, column: 8, scope: !18162)
!18164 = !DILocation(line: 7360, column: 15, scope: !18165)
!18165 = distinct !DILexicalBlock(scope: !18162, file: !3, line: 7360, column: 3)
!18166 = !DILocation(line: 7360, column: 19, scope: !18165)
!18167 = !DILocation(line: 7360, column: 24, scope: !18165)
!18168 = !DILocation(line: 7360, column: 17, scope: !18165)
!18169 = !DILocation(line: 7360, column: 3, scope: !18162)
!18170 = !DILocation(line: 7362, column: 11, scope: !18171)
!18171 = distinct !DILexicalBlock(scope: !18172, file: !3, line: 7362, column: 11)
!18172 = distinct !DILexicalBlock(scope: !18165, file: !3, line: 7361, column: 5)
!18173 = !DILocation(line: 7362, column: 16, scope: !18171)
!18174 = !DILocation(line: 7362, column: 25, scope: !18171)
!18175 = !DILocation(line: 7362, column: 28, scope: !18171)
!18176 = !DILocation(line: 7363, column: 4, scope: !18171)
!18177 = !DILocation(line: 7363, column: 28, scope: !18171)
!18178 = !DILocation(line: 7363, column: 33, scope: !18171)
!18179 = !DILocation(line: 7363, column: 42, scope: !18171)
!18180 = !DILocation(line: 7363, column: 45, scope: !18171)
!18181 = !DILocation(line: 7363, column: 54, scope: !18171)
!18182 = !DILocation(line: 7363, column: 7, scope: !18171)
!18183 = !DILocation(line: 7362, column: 11, scope: !18172)
!18184 = !DILocation(line: 7366, column: 8, scope: !18185)
!18185 = distinct !DILexicalBlock(scope: !18186, file: !3, line: 7366, column: 8)
!18186 = distinct !DILexicalBlock(scope: !18171, file: !3, line: 7365, column: 2)
!18187 = !DILocation(line: 7366, column: 8, scope: !18186)
!18188 = !DILocation(line: 7367, column: 6, scope: !18185)
!18189 = !DILocation(line: 7367, column: 11, scope: !18185)
!18190 = !DILocation(line: 7367, column: 27, scope: !18185)
!18191 = !DILocation(line: 7368, column: 4, scope: !18186)
!18192 = !DILocation(line: 7370, column: 17, scope: !18193)
!18193 = distinct !DILexicalBlock(scope: !18172, file: !3, line: 7370, column: 7)
!18194 = !DILocation(line: 7370, column: 22, scope: !18193)
!18195 = !DILocation(line: 7370, column: 31, scope: !18193)
!18196 = !DILocation(line: 7370, column: 34, scope: !18193)
!18197 = !DILocation(line: 7370, column: 15, scope: !18193)
!18198 = !DILocation(line: 7370, column: 12, scope: !18193)
!18199 = !DILocation(line: 7370, column: 45, scope: !18200)
!18200 = distinct !DILexicalBlock(scope: !18193, file: !3, line: 7370, column: 7)
!18201 = !DILocation(line: 7370, column: 7, scope: !18193)
!18202 = !DILocation(line: 7371, column: 6, scope: !18203)
!18203 = distinct !DILexicalBlock(scope: !18200, file: !3, line: 7371, column: 6)
!18204 = !DILocation(line: 7371, column: 10, scope: !18203)
!18205 = !DILocation(line: 7371, column: 17, scope: !18203)
!18206 = !DILocation(line: 7371, column: 22, scope: !18203)
!18207 = !DILocation(line: 7371, column: 31, scope: !18203)
!18208 = !DILocation(line: 7371, column: 34, scope: !18203)
!18209 = !DILocation(line: 7371, column: 14, scope: !18203)
!18210 = !DILocation(line: 7372, column: 6, scope: !18203)
!18211 = !DILocation(line: 7372, column: 30, scope: !18203)
!18212 = !DILocation(line: 7372, column: 34, scope: !18203)
!18213 = !DILocation(line: 7372, column: 39, scope: !18203)
!18214 = !DILocation(line: 7372, column: 9, scope: !18203)
!18215 = !DILocation(line: 7371, column: 6, scope: !18200)
!18216 = !DILocation(line: 7373, column: 4, scope: !18203)
!18217 = !DILocation(line: 7372, column: 61, scope: !18203)
!18218 = !DILocation(line: 7370, column: 54, scope: !18200)
!18219 = !DILocation(line: 7370, column: 58, scope: !18200)
!18220 = !DILocation(line: 7370, column: 52, scope: !18200)
!18221 = !DILocation(line: 7370, column: 7, scope: !18200)
!18222 = distinct !{!18222, !18201, !18223}
!18223 = !DILocation(line: 7373, column: 4, scope: !18193)
!18224 = !DILocation(line: 7374, column: 11, scope: !18225)
!18225 = distinct !DILexicalBlock(scope: !18172, file: !3, line: 7374, column: 11)
!18226 = !DILocation(line: 7374, column: 14, scope: !18225)
!18227 = !DILocation(line: 7374, column: 17, scope: !18225)
!18228 = !DILocation(line: 7374, column: 22, scope: !18225)
!18229 = !DILocation(line: 7374, column: 31, scope: !18225)
!18230 = !DILocation(line: 7374, column: 34, scope: !18225)
!18231 = !DILocation(line: 7374, column: 11, scope: !18172)
!18232 = !DILocation(line: 7375, column: 2, scope: !18225)
!18233 = !DILocation(line: 7375, column: 7, scope: !18225)
!18234 = !DILocation(line: 7375, column: 23, scope: !18225)
!18235 = !DILocation(line: 7376, column: 34, scope: !18172)
!18236 = !DILocation(line: 7376, column: 39, scope: !18172)
!18237 = !DILocation(line: 7376, column: 43, scope: !18172)
!18238 = !DILocation(line: 7376, column: 7, scope: !18172)
!18239 = !DILocation(line: 7376, column: 12, scope: !18172)
!18240 = !DILocation(line: 7376, column: 21, scope: !18172)
!18241 = !DILocation(line: 7376, column: 24, scope: !18172)
!18242 = !DILocation(line: 7376, column: 32, scope: !18172)
!18243 = !DILocation(line: 7377, column: 5, scope: !18172)
!18244 = !DILocation(line: 7360, column: 38, scope: !18165)
!18245 = !DILocation(line: 7360, column: 3, scope: !18165)
!18246 = distinct !{!18246, !18169, !18247}
!18247 = !DILocation(line: 7377, column: 5, scope: !18162)
!18248 = !DILocation(line: 7378, column: 7, scope: !18249)
!18249 = distinct !DILexicalBlock(scope: !18132, file: !3, line: 7378, column: 7)
!18250 = !DILocation(line: 7378, column: 12, scope: !18249)
!18251 = !DILocation(line: 7378, column: 24, scope: !18249)
!18252 = !DILocation(line: 7378, column: 7, scope: !18132)
!18253 = !DILocation(line: 7379, column: 5, scope: !18249)
!18254 = !DILocation(line: 7379, column: 10, scope: !18249)
!18255 = !DILocation(line: 7379, column: 26, scope: !18249)
!18256 = !DILocation(line: 7380, column: 3, scope: !18132)
!18257 = !DILocation(line: 7381, column: 1, scope: !18132)
!18258 = distinct !DISubprogram(name: "emit_note_insn_var_location", scope: !3, file: !3, line: 7029, type: !6290, scopeLine: 7030, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!18259 = !DILocalVariable(name: "varp", arg: 1, scope: !18258, file: !3, line: 7029, type: !1848)
!18260 = !DILocation(line: 7029, column: 37, scope: !18258)
!18261 = !DILocalVariable(name: "data", arg: 2, scope: !18258, file: !3, line: 7029, type: !1313)
!18262 = !DILocation(line: 7029, column: 49, scope: !18258)
!18263 = !DILocalVariable(name: "var", scope: !18258, file: !3, line: 7031, type: !2447)
!18264 = !DILocation(line: 7031, column: 12, scope: !18258)
!18265 = !DILocation(line: 7031, column: 30, scope: !18258)
!18266 = !DILocation(line: 7031, column: 29, scope: !18258)
!18267 = !DILocation(line: 7031, column: 18, scope: !18258)
!18268 = !DILocalVariable(name: "insn", scope: !18258, file: !3, line: 7032, type: !1188)
!18269 = !DILocation(line: 7032, column: 7, scope: !18258)
!18270 = !DILocation(line: 7032, column: 33, scope: !18258)
!18271 = !DILocation(line: 7032, column: 15, scope: !18258)
!18272 = !DILocation(line: 7032, column: 40, scope: !18258)
!18273 = !DILocalVariable(name: "where", scope: !18258, file: !3, line: 7033, type: !988)
!18274 = !DILocation(line: 7033, column: 24, scope: !18258)
!18275 = !DILocation(line: 7033, column: 51, scope: !18258)
!18276 = !DILocation(line: 7033, column: 33, scope: !18258)
!18277 = !DILocation(line: 7033, column: 58, scope: !18258)
!18278 = !DILocalVariable(name: "vars", scope: !18258, file: !3, line: 7034, type: !1827)
!18279 = !DILocation(line: 7034, column: 10, scope: !18258)
!18280 = !DILocation(line: 7034, column: 36, scope: !18258)
!18281 = !DILocation(line: 7034, column: 18, scope: !18258)
!18282 = !DILocation(line: 7034, column: 43, scope: !18258)
!18283 = !DILocalVariable(name: "note", scope: !18258, file: !3, line: 7035, type: !1188)
!18284 = !DILocation(line: 7035, column: 7, scope: !18258)
!18285 = !DILocalVariable(name: "note_vl", scope: !18258, file: !3, line: 7035, type: !1188)
!18286 = !DILocation(line: 7035, column: 13, scope: !18258)
!18287 = !DILocalVariable(name: "i", scope: !18258, file: !3, line: 7036, type: !1010)
!18288 = !DILocation(line: 7036, column: 7, scope: !18258)
!18289 = !DILocalVariable(name: "j", scope: !18258, file: !3, line: 7036, type: !1010)
!18290 = !DILocation(line: 7036, column: 10, scope: !18258)
!18291 = !DILocalVariable(name: "n_var_parts", scope: !18258, file: !3, line: 7036, type: !1010)
!18292 = !DILocation(line: 7036, column: 13, scope: !18258)
!18293 = !DILocalVariable(name: "complete", scope: !18258, file: !3, line: 7037, type: !1130)
!18294 = !DILocation(line: 7037, column: 8, scope: !18258)
!18295 = !DILocalVariable(name: "initialized", scope: !18258, file: !3, line: 7038, type: !734)
!18296 = !DILocation(line: 7038, column: 24, scope: !18258)
!18297 = !DILocalVariable(name: "last_limit", scope: !18258, file: !3, line: 7039, type: !1067)
!18298 = !DILocation(line: 7039, column: 17, scope: !18258)
!18299 = !DILocalVariable(name: "type_size_unit", scope: !18258, file: !3, line: 7040, type: !1011)
!18300 = !DILocation(line: 7040, column: 8, scope: !18258)
!18301 = !DILocalVariable(name: "offsets", scope: !18258, file: !3, line: 7041, type: !18302)
!18302 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1067, size: 1024, elements: !18303)
!18303 = !{!18304}
!18304 = !DISubrange(count: 16)
!18305 = !DILocation(line: 7041, column: 17, scope: !18258)
!18306 = !DILocalVariable(name: "loc", scope: !18258, file: !3, line: 7042, type: !18307)
!18307 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1188, size: 1024, elements: !18303)
!18308 = !DILocation(line: 7042, column: 7, scope: !18258)
!18309 = !DILocalVariable(name: "decl", scope: !18258, file: !3, line: 7043, type: !1011)
!18310 = !DILocation(line: 7043, column: 8, scope: !18258)
!18311 = !DILocalVariable(name: "lc", scope: !18258, file: !3, line: 7044, type: !2437)
!18312 = !DILocation(line: 7044, column: 18, scope: !18258)
!18313 = !DILocation(line: 7046, column: 22, scope: !18314)
!18314 = distinct !DILexicalBlock(scope: !18258, file: !3, line: 7046, column: 7)
!18315 = !DILocation(line: 7046, column: 27, scope: !18314)
!18316 = !DILocation(line: 7046, column: 7, scope: !18314)
!18317 = !DILocation(line: 7046, column: 7, scope: !18258)
!18318 = !DILocation(line: 7047, column: 5, scope: !18314)
!18319 = !DILocation(line: 7049, column: 22, scope: !18258)
!18320 = !DILocation(line: 7049, column: 27, scope: !18258)
!18321 = !DILocation(line: 7049, column: 10, scope: !18258)
!18322 = !DILocation(line: 7049, column: 8, scope: !18258)
!18323 = !DILocation(line: 7051, column: 7, scope: !18324)
!18324 = distinct !DILexicalBlock(scope: !18258, file: !3, line: 7051, column: 7)
!18325 = !DILocation(line: 7051, column: 24, scope: !18324)
!18326 = !DILocation(line: 7051, column: 7, scope: !18258)
!18327 = !DILocation(line: 7052, column: 5, scope: !18324)
!18328 = !DILocation(line: 7054, column: 12, scope: !18258)
!18329 = !DILocation(line: 7055, column: 14, scope: !18258)
!18330 = !DILocation(line: 7056, column: 15, scope: !18258)
!18331 = !DILocation(line: 7057, column: 8, scope: !18332)
!18332 = distinct !DILexicalBlock(scope: !18258, file: !3, line: 7057, column: 7)
!18333 = !DILocation(line: 7057, column: 7, scope: !18258)
!18334 = !DILocation(line: 7059, column: 14, scope: !18335)
!18335 = distinct !DILexicalBlock(scope: !18336, file: !3, line: 7059, column: 7)
!18336 = distinct !DILexicalBlock(scope: !18332, file: !3, line: 7058, column: 5)
!18337 = !DILocation(line: 7059, column: 12, scope: !18335)
!18338 = !DILocation(line: 7059, column: 19, scope: !18339)
!18339 = distinct !DILexicalBlock(scope: !18335, file: !3, line: 7059, column: 7)
!18340 = !DILocation(line: 7059, column: 23, scope: !18339)
!18341 = !DILocation(line: 7059, column: 28, scope: !18339)
!18342 = !DILocation(line: 7059, column: 21, scope: !18339)
!18343 = !DILocation(line: 7059, column: 7, scope: !18335)
!18344 = !DILocation(line: 7060, column: 6, scope: !18345)
!18345 = distinct !DILexicalBlock(scope: !18339, file: !3, line: 7060, column: 6)
!18346 = !DILocation(line: 7060, column: 11, scope: !18345)
!18347 = !DILocation(line: 7060, column: 20, scope: !18345)
!18348 = !DILocation(line: 7060, column: 23, scope: !18345)
!18349 = !DILocation(line: 7060, column: 31, scope: !18345)
!18350 = !DILocation(line: 7060, column: 39, scope: !18345)
!18351 = !DILocation(line: 7060, column: 42, scope: !18345)
!18352 = !DILocation(line: 7060, column: 47, scope: !18345)
!18353 = !DILocation(line: 7060, column: 56, scope: !18345)
!18354 = !DILocation(line: 7060, column: 59, scope: !18345)
!18355 = !DILocation(line: 7060, column: 6, scope: !18339)
!18356 = !DILocation(line: 7062, column: 33, scope: !18357)
!18357 = distinct !DILexicalBlock(scope: !18345, file: !3, line: 7061, column: 4)
!18358 = !DILocation(line: 7062, column: 38, scope: !18357)
!18359 = !DILocation(line: 7062, column: 47, scope: !18357)
!18360 = !DILocation(line: 7062, column: 50, scope: !18357)
!18361 = !DILocation(line: 7062, column: 61, scope: !18357)
!18362 = !DILocation(line: 7062, column: 6, scope: !18357)
!18363 = !DILocation(line: 7062, column: 11, scope: !18357)
!18364 = !DILocation(line: 7062, column: 20, scope: !18357)
!18365 = !DILocation(line: 7062, column: 23, scope: !18357)
!18366 = !DILocation(line: 7062, column: 31, scope: !18357)
!18367 = !DILocation(line: 7063, column: 6, scope: !18357)
!18368 = !DILocation(line: 7063, column: 11, scope: !18357)
!18369 = !DILocation(line: 7063, column: 27, scope: !18357)
!18370 = !DILocation(line: 7064, column: 4, scope: !18357)
!18371 = !DILocation(line: 7059, column: 42, scope: !18339)
!18372 = !DILocation(line: 7059, column: 7, scope: !18339)
!18373 = distinct !{!18373, !18343, !18374}
!18374 = !DILocation(line: 7064, column: 4, scope: !18335)
!18375 = !DILocation(line: 7065, column: 11, scope: !18376)
!18376 = distinct !DILexicalBlock(scope: !18336, file: !3, line: 7065, column: 11)
!18377 = !DILocation(line: 7065, column: 16, scope: !18376)
!18378 = !DILocation(line: 7065, column: 28, scope: !18376)
!18379 = !DILocation(line: 7065, column: 11, scope: !18336)
!18380 = !DILocation(line: 7066, column: 2, scope: !18376)
!18381 = !DILocation(line: 7066, column: 7, scope: !18376)
!18382 = !DILocation(line: 7066, column: 23, scope: !18376)
!18383 = !DILocation(line: 7067, column: 5, scope: !18336)
!18384 = !DILocation(line: 7069, column: 8, scope: !18385)
!18385 = distinct !DILexicalBlock(scope: !18258, file: !3, line: 7069, column: 7)
!18386 = !DILocation(line: 7069, column: 13, scope: !18385)
!18387 = !DILocation(line: 7069, column: 7, scope: !18258)
!18388 = !DILocation(line: 7070, column: 5, scope: !18385)
!18389 = !DILocation(line: 7072, column: 10, scope: !18390)
!18390 = distinct !DILexicalBlock(scope: !18258, file: !3, line: 7072, column: 3)
!18391 = !DILocation(line: 7072, column: 8, scope: !18390)
!18392 = !DILocation(line: 7072, column: 15, scope: !18393)
!18393 = distinct !DILexicalBlock(scope: !18390, file: !3, line: 7072, column: 3)
!18394 = !DILocation(line: 7072, column: 19, scope: !18393)
!18395 = !DILocation(line: 7072, column: 24, scope: !18393)
!18396 = !DILocation(line: 7072, column: 17, scope: !18393)
!18397 = !DILocation(line: 7072, column: 3, scope: !18390)
!18398 = !DILocalVariable(name: "mode", scope: !18399, file: !3, line: 7074, type: !384)
!18399 = distinct !DILexicalBlock(scope: !18393, file: !3, line: 7073, column: 5)
!18400 = !DILocation(line: 7074, column: 25, scope: !18399)
!18401 = !DILocalVariable(name: "wider_mode", scope: !18399, file: !3, line: 7074, type: !384)
!18402 = !DILocation(line: 7074, column: 31, scope: !18399)
!18403 = !DILocalVariable(name: "loc2", scope: !18399, file: !3, line: 7075, type: !1188)
!18404 = !DILocation(line: 7075, column: 11, scope: !18399)
!18405 = !DILocation(line: 7077, column: 11, scope: !18406)
!18406 = distinct !DILexicalBlock(scope: !18399, file: !3, line: 7077, column: 11)
!18407 = !DILocation(line: 7077, column: 24, scope: !18406)
!18408 = !DILocation(line: 7077, column: 29, scope: !18406)
!18409 = !DILocation(line: 7077, column: 38, scope: !18406)
!18410 = !DILocation(line: 7077, column: 41, scope: !18406)
!18411 = !DILocation(line: 7077, column: 22, scope: !18406)
!18412 = !DILocation(line: 7077, column: 11, scope: !18399)
!18413 = !DILocation(line: 7079, column: 13, scope: !18414)
!18414 = distinct !DILexicalBlock(scope: !18406, file: !3, line: 7078, column: 2)
!18415 = !DILocation(line: 7080, column: 4, scope: !18414)
!18416 = !DILocation(line: 7082, column: 16, scope: !18417)
!18417 = distinct !DILexicalBlock(scope: !18406, file: !3, line: 7082, column: 16)
!18418 = !DILocation(line: 7082, column: 29, scope: !18417)
!18419 = !DILocation(line: 7082, column: 34, scope: !18417)
!18420 = !DILocation(line: 7082, column: 43, scope: !18417)
!18421 = !DILocation(line: 7082, column: 46, scope: !18417)
!18422 = !DILocation(line: 7082, column: 27, scope: !18417)
!18423 = !DILocation(line: 7082, column: 16, scope: !18406)
!18424 = !DILocation(line: 7083, column: 2, scope: !18417)
!18425 = !DILocation(line: 7084, column: 30, scope: !18399)
!18426 = !DILocation(line: 7084, column: 35, scope: !18399)
!18427 = !DILocation(line: 7084, column: 44, scope: !18399)
!18428 = !DILocation(line: 7084, column: 47, scope: !18399)
!18429 = !DILocation(line: 7084, column: 15, scope: !18399)
!18430 = !DILocation(line: 7084, column: 7, scope: !18399)
!18431 = !DILocation(line: 7084, column: 28, scope: !18399)
!18432 = !DILocation(line: 7085, column: 12, scope: !18433)
!18433 = distinct !DILexicalBlock(scope: !18399, file: !3, line: 7085, column: 11)
!18434 = !DILocation(line: 7085, column: 17, scope: !18433)
!18435 = !DILocation(line: 7085, column: 26, scope: !18433)
!18436 = !DILocation(line: 7085, column: 29, scope: !18433)
!18437 = !DILocation(line: 7085, column: 11, scope: !18399)
!18438 = !DILocation(line: 7087, column: 13, scope: !18439)
!18439 = distinct !DILexicalBlock(scope: !18433, file: !3, line: 7086, column: 2)
!18440 = !DILocation(line: 7088, column: 4, scope: !18439)
!18441 = !DILocation(line: 7090, column: 29, scope: !18399)
!18442 = !DILocation(line: 7090, column: 34, scope: !18399)
!18443 = !DILocation(line: 7090, column: 43, scope: !18399)
!18444 = !DILocation(line: 7090, column: 46, scope: !18399)
!18445 = !DILocation(line: 7090, column: 55, scope: !18399)
!18446 = !DILocation(line: 7090, column: 14, scope: !18399)
!18447 = !DILocation(line: 7090, column: 12, scope: !18399)
!18448 = !DILocation(line: 7091, column: 12, scope: !18449)
!18449 = distinct !DILexicalBlock(scope: !18399, file: !3, line: 7091, column: 11)
!18450 = !DILocation(line: 7091, column: 11, scope: !18399)
!18451 = !DILocation(line: 7093, column: 13, scope: !18452)
!18452 = distinct !DILexicalBlock(scope: !18449, file: !3, line: 7092, column: 2)
!18453 = !DILocation(line: 7094, column: 4, scope: !18452)
!18454 = !DILocation(line: 7096, column: 26, scope: !18399)
!18455 = !DILocation(line: 7096, column: 11, scope: !18399)
!18456 = !DILocation(line: 7096, column: 7, scope: !18399)
!18457 = !DILocation(line: 7096, column: 24, scope: !18399)
!18458 = !DILocation(line: 7097, column: 14, scope: !18399)
!18459 = !DILocation(line: 7097, column: 12, scope: !18399)
!18460 = !DILocation(line: 7098, column: 11, scope: !18461)
!18461 = distinct !DILexicalBlock(scope: !18399, file: !3, line: 7098, column: 11)
!18462 = !DILocation(line: 7098, column: 16, scope: !18461)
!18463 = !DILocation(line: 7098, column: 28, scope: !18461)
!18464 = !DILocation(line: 7098, column: 45, scope: !18461)
!18465 = !DILocation(line: 7098, column: 50, scope: !18461)
!18466 = !DILocation(line: 7098, column: 31, scope: !18461)
!18467 = !DILocation(line: 7098, column: 11, scope: !18399)
!18468 = !DILocation(line: 7099, column: 9, scope: !18461)
!18469 = !DILocation(line: 7099, column: 7, scope: !18461)
!18470 = !DILocation(line: 7099, column: 2, scope: !18461)
!18471 = !DILocation(line: 7100, column: 17, scope: !18472)
!18472 = distinct !DILexicalBlock(scope: !18399, file: !3, line: 7100, column: 7)
!18473 = !DILocation(line: 7100, column: 22, scope: !18472)
!18474 = !DILocation(line: 7100, column: 31, scope: !18472)
!18475 = !DILocation(line: 7100, column: 34, scope: !18472)
!18476 = !DILocation(line: 7100, column: 15, scope: !18472)
!18477 = !DILocation(line: 7100, column: 12, scope: !18472)
!18478 = !DILocation(line: 7100, column: 45, scope: !18479)
!18479 = distinct !DILexicalBlock(scope: !18472, file: !3, line: 7100, column: 7)
!18480 = !DILocation(line: 7100, column: 7, scope: !18472)
!18481 = !DILocation(line: 7101, column: 6, scope: !18482)
!18482 = distinct !DILexicalBlock(scope: !18479, file: !3, line: 7101, column: 6)
!18483 = !DILocation(line: 7101, column: 11, scope: !18482)
!18484 = !DILocation(line: 7101, column: 20, scope: !18482)
!18485 = !DILocation(line: 7101, column: 23, scope: !18482)
!18486 = !DILocation(line: 7101, column: 34, scope: !18482)
!18487 = !DILocation(line: 7101, column: 38, scope: !18482)
!18488 = !DILocation(line: 7101, column: 31, scope: !18482)
!18489 = !DILocation(line: 7101, column: 6, scope: !18479)
!18490 = !DILocation(line: 7103, column: 20, scope: !18491)
!18491 = distinct !DILexicalBlock(scope: !18482, file: !3, line: 7102, column: 4)
!18492 = !DILocation(line: 7103, column: 24, scope: !18491)
!18493 = !DILocation(line: 7103, column: 18, scope: !18491)
!18494 = !DILocation(line: 7104, column: 6, scope: !18491)
!18495 = !DILocation(line: 7100, column: 54, scope: !18479)
!18496 = !DILocation(line: 7100, column: 58, scope: !18479)
!18497 = !DILocation(line: 7100, column: 52, scope: !18479)
!18498 = !DILocation(line: 7100, column: 7, scope: !18479)
!18499 = distinct !{!18499, !18480, !18500}
!18500 = !DILocation(line: 7105, column: 4, scope: !18472)
!18501 = !DILocation(line: 7106, column: 7, scope: !18399)
!18502 = !DILocation(line: 7107, column: 28, scope: !18399)
!18503 = !DILocation(line: 7107, column: 20, scope: !18399)
!18504 = !DILocation(line: 7107, column: 43, scope: !18399)
!18505 = !DILocation(line: 7107, column: 41, scope: !18399)
!18506 = !DILocation(line: 7107, column: 18, scope: !18399)
!18507 = !DILocation(line: 7110, column: 20, scope: !18399)
!18508 = !DILocation(line: 7110, column: 18, scope: !18399)
!18509 = !DILocation(line: 7111, column: 16, scope: !18510)
!18510 = distinct !DILexicalBlock(scope: !18399, file: !3, line: 7111, column: 7)
!18511 = !DILocation(line: 7111, column: 18, scope: !18510)
!18512 = !DILocation(line: 7111, column: 14, scope: !18510)
!18513 = !DILocation(line: 7111, column: 12, scope: !18510)
!18514 = !DILocation(line: 7111, column: 23, scope: !18515)
!18515 = distinct !DILexicalBlock(scope: !18510, file: !3, line: 7111, column: 7)
!18516 = !DILocation(line: 7111, column: 27, scope: !18515)
!18517 = !DILocation(line: 7111, column: 32, scope: !18515)
!18518 = !DILocation(line: 7111, column: 25, scope: !18515)
!18519 = !DILocation(line: 7111, column: 7, scope: !18510)
!18520 = !DILocation(line: 7112, column: 6, scope: !18521)
!18521 = distinct !DILexicalBlock(scope: !18515, file: !3, line: 7112, column: 6)
!18522 = !DILocation(line: 7112, column: 20, scope: !18521)
!18523 = !DILocation(line: 7112, column: 25, scope: !18521)
!18524 = !DILocation(line: 7112, column: 34, scope: !18521)
!18525 = !DILocation(line: 7112, column: 37, scope: !18521)
!18526 = !DILocation(line: 7112, column: 17, scope: !18521)
!18527 = !DILocation(line: 7112, column: 6, scope: !18515)
!18528 = !DILocation(line: 7113, column: 4, scope: !18521)
!18529 = !DILocation(line: 7111, column: 46, scope: !18515)
!18530 = !DILocation(line: 7111, column: 7, scope: !18515)
!18531 = distinct !{!18531, !18519, !18532}
!18532 = !DILocation(line: 7113, column: 4, scope: !18510)
!18533 = !DILocation(line: 7114, column: 11, scope: !18534)
!18534 = distinct !DILexicalBlock(scope: !18399, file: !3, line: 7114, column: 11)
!18535 = !DILocation(line: 7114, column: 15, scope: !18534)
!18536 = !DILocation(line: 7114, column: 20, scope: !18534)
!18537 = !DILocation(line: 7114, column: 13, scope: !18534)
!18538 = !DILocation(line: 7115, column: 4, scope: !18534)
!18539 = !DILocation(line: 7115, column: 7, scope: !18534)
!18540 = !DILocation(line: 7115, column: 18, scope: !18534)
!18541 = !DILocation(line: 7116, column: 4, scope: !18534)
!18542 = !DILocation(line: 7116, column: 7, scope: !18534)
!18543 = !DILocation(line: 7116, column: 12, scope: !18534)
!18544 = !DILocation(line: 7116, column: 21, scope: !18534)
!18545 = !DILocation(line: 7116, column: 24, scope: !18534)
!18546 = !DILocation(line: 7117, column: 4, scope: !18534)
!18547 = !DILocation(line: 7117, column: 7, scope: !18534)
!18548 = !DILocation(line: 7117, column: 15, scope: !18534)
!18549 = !DILocation(line: 7117, column: 12, scope: !18534)
!18550 = !DILocation(line: 7118, column: 4, scope: !18534)
!18551 = !DILocation(line: 7118, column: 8, scope: !18534)
!18552 = !DILocation(line: 7118, column: 33, scope: !18534)
!18553 = !DILocation(line: 7118, column: 36, scope: !18534)
!18554 = !DILocation(line: 7119, column: 4, scope: !18534)
!18555 = !DILocation(line: 7119, column: 7, scope: !18534)
!18556 = !DILocation(line: 7119, column: 21, scope: !18534)
!18557 = !DILocation(line: 7119, column: 26, scope: !18534)
!18558 = !DILocation(line: 7119, column: 35, scope: !18534)
!18559 = !DILocation(line: 7119, column: 38, scope: !18534)
!18560 = !DILocation(line: 7119, column: 18, scope: !18534)
!18561 = !DILocation(line: 7120, column: 4, scope: !18534)
!18562 = !DILocation(line: 7120, column: 30, scope: !18534)
!18563 = !DILocation(line: 7120, column: 35, scope: !18534)
!18564 = !DILocation(line: 7120, column: 44, scope: !18534)
!18565 = !DILocation(line: 7120, column: 47, scope: !18534)
!18566 = !DILocation(line: 7120, column: 56, scope: !18534)
!18567 = !DILocation(line: 7120, column: 15, scope: !18534)
!18568 = !DILocation(line: 7120, column: 13, scope: !18534)
!18569 = !DILocation(line: 7121, column: 4, scope: !18534)
!18570 = !DILocation(line: 7121, column: 7, scope: !18534)
!18571 = !DILocation(line: 7121, column: 38, scope: !18534)
!18572 = !DILocation(line: 7121, column: 35, scope: !18534)
!18573 = !DILocation(line: 7114, column: 11, scope: !18399)
!18574 = !DILocalVariable(name: "new_loc", scope: !18575, file: !3, line: 7123, type: !1188)
!18575 = distinct !DILexicalBlock(scope: !18534, file: !3, line: 7122, column: 2)
!18576 = !DILocation(line: 7123, column: 8, scope: !18575)
!18577 = !DILocation(line: 7125, column: 8, scope: !18578)
!18578 = distinct !DILexicalBlock(scope: !18575, file: !3, line: 7125, column: 8)
!18579 = !DILocation(line: 7126, column: 8, scope: !18578)
!18580 = !DILocation(line: 7126, column: 28, scope: !18578)
!18581 = !DILocation(line: 7126, column: 11, scope: !18578)
!18582 = !DILocation(line: 7126, column: 54, scope: !18578)
!18583 = !DILocation(line: 7126, column: 60, scope: !18578)
!18584 = !DILocation(line: 7127, column: 24, scope: !18578)
!18585 = !DILocation(line: 7127, column: 7, scope: !18578)
!18586 = !DILocation(line: 7127, column: 50, scope: !18578)
!18587 = !DILocation(line: 7127, column: 4, scope: !18578)
!18588 = !DILocation(line: 7128, column: 8, scope: !18578)
!18589 = !DILocation(line: 7128, column: 27, scope: !18578)
!18590 = !DILocation(line: 7128, column: 33, scope: !18578)
!18591 = !DILocation(line: 7128, column: 11, scope: !18578)
!18592 = !DILocation(line: 7129, column: 7, scope: !18578)
!18593 = !DILocation(line: 7129, column: 4, scope: !18578)
!18594 = !DILocation(line: 7125, column: 8, scope: !18575)
!18595 = !DILocation(line: 7132, column: 30, scope: !18596)
!18596 = distinct !DILexicalBlock(scope: !18597, file: !3, line: 7131, column: 12)
!18597 = distinct !DILexicalBlock(scope: !18578, file: !3, line: 7130, column: 6)
!18598 = !DILocation(line: 7132, column: 46, scope: !18596)
!18599 = !DILocation(line: 7132, column: 42, scope: !18596)
!18600 = !DILocation(line: 7133, column: 9, scope: !18596)
!18601 = !DILocation(line: 7132, column: 13, scope: !18596)
!18602 = !DILocation(line: 7132, column: 11, scope: !18596)
!18603 = !DILocation(line: 7136, column: 12, scope: !18604)
!18604 = distinct !DILexicalBlock(scope: !18597, file: !3, line: 7136, column: 12)
!18605 = !DILocation(line: 7136, column: 12, scope: !18597)
!18606 = !DILocation(line: 7138, column: 10, scope: !18607)
!18607 = distinct !DILexicalBlock(scope: !18608, file: !3, line: 7138, column: 9)
!18608 = distinct !DILexicalBlock(scope: !18604, file: !3, line: 7137, column: 3)
!18609 = !DILocation(line: 7139, column: 9, scope: !18607)
!18610 = !DILocation(line: 7139, column: 12, scope: !18607)
!18611 = !DILocation(line: 7139, column: 31, scope: !18607)
!18612 = !DILocation(line: 7139, column: 28, scope: !18607)
!18613 = !DILocation(line: 7138, column: 9, scope: !18608)
!18614 = !DILocation(line: 7140, column: 15, scope: !18607)
!18615 = !DILocation(line: 7140, column: 7, scope: !18607)
!18616 = !DILocation(line: 7142, column: 29, scope: !18607)
!18617 = !DILocation(line: 7142, column: 7, scope: !18607)
!18618 = !DILocation(line: 7142, column: 27, scope: !18607)
!18619 = !DILocation(line: 7143, column: 3, scope: !18608)
!18620 = !DILocation(line: 7144, column: 6, scope: !18597)
!18621 = !DILocation(line: 7145, column: 13, scope: !18622)
!18622 = distinct !DILexicalBlock(scope: !18578, file: !3, line: 7145, column: 13)
!18623 = !DILocation(line: 7146, column: 6, scope: !18622)
!18624 = !DILocation(line: 7146, column: 9, scope: !18622)
!18625 = !DILocation(line: 7146, column: 35, scope: !18622)
!18626 = !DILocation(line: 7147, column: 6, scope: !18622)
!18627 = !DILocation(line: 7147, column: 9, scope: !18622)
!18628 = !DILocation(line: 7148, column: 6, scope: !18622)
!18629 = !DILocation(line: 7148, column: 9, scope: !18622)
!18630 = !DILocation(line: 7145, column: 13, scope: !18578)
!18631 = !DILocation(line: 7150, column: 13, scope: !18632)
!18632 = distinct !DILexicalBlock(scope: !18633, file: !3, line: 7150, column: 12)
!18633 = distinct !DILexicalBlock(scope: !18622, file: !3, line: 7149, column: 6)
!18634 = !DILocation(line: 7151, column: 6, scope: !18632)
!18635 = !DILocation(line: 7151, column: 22, scope: !18632)
!18636 = !DILocation(line: 7152, column: 8, scope: !18632)
!18637 = !DILocation(line: 7151, column: 9, scope: !18632)
!18638 = !DILocation(line: 7153, column: 6, scope: !18632)
!18639 = !DILocation(line: 7153, column: 9, scope: !18632)
!18640 = !DILocation(line: 7154, column: 12, scope: !18632)
!18641 = !DILocation(line: 7154, column: 9, scope: !18632)
!18642 = !DILocation(line: 7155, column: 5, scope: !18632)
!18643 = !DILocation(line: 7155, column: 9, scope: !18632)
!18644 = !DILocation(line: 7155, column: 47, scope: !18632)
!18645 = !DILocation(line: 7156, column: 9, scope: !18632)
!18646 = !DILocation(line: 7156, column: 12, scope: !18632)
!18647 = !DILocation(line: 7157, column: 9, scope: !18632)
!18648 = !DILocation(line: 7157, column: 25, scope: !18632)
!18649 = !DILocation(line: 7158, column: 11, scope: !18632)
!18650 = !DILocation(line: 7157, column: 12, scope: !18632)
!18651 = !DILocation(line: 7159, column: 9, scope: !18632)
!18652 = !DILocation(line: 7159, column: 12, scope: !18632)
!18653 = !DILocation(line: 7160, column: 7, scope: !18632)
!18654 = !DILocation(line: 7160, column: 5, scope: !18632)
!18655 = !DILocation(line: 7161, column: 8, scope: !18632)
!18656 = !DILocation(line: 7161, column: 5, scope: !18632)
!18657 = !DILocation(line: 7150, column: 12, scope: !18633)
!18658 = !DILocation(line: 7162, column: 13, scope: !18632)
!18659 = !DILocation(line: 7162, column: 11, scope: !18632)
!18660 = !DILocation(line: 7162, column: 3, scope: !18632)
!18661 = !DILocation(line: 7164, column: 6, scope: !18633)
!18662 = !DILocation(line: 7166, column: 8, scope: !18663)
!18663 = distinct !DILexicalBlock(scope: !18575, file: !3, line: 7166, column: 8)
!18664 = !DILocation(line: 7166, column: 8, scope: !18575)
!18665 = !DILocation(line: 7168, column: 27, scope: !18666)
!18666 = distinct !DILexicalBlock(scope: !18663, file: !3, line: 7167, column: 6)
!18667 = !DILocation(line: 7168, column: 12, scope: !18666)
!18668 = !DILocation(line: 7168, column: 8, scope: !18666)
!18669 = !DILocation(line: 7168, column: 25, scope: !18666)
!18670 = !DILocation(line: 7169, column: 15, scope: !18666)
!18671 = !DILocation(line: 7169, column: 13, scope: !18666)
!18672 = !DILocation(line: 7170, column: 29, scope: !18666)
!18673 = !DILocation(line: 7170, column: 21, scope: !18666)
!18674 = !DILocation(line: 7170, column: 44, scope: !18666)
!18675 = !DILocation(line: 7170, column: 42, scope: !18666)
!18676 = !DILocation(line: 7170, column: 19, scope: !18666)
!18677 = !DILocation(line: 7171, column: 12, scope: !18666)
!18678 = !DILocation(line: 7171, column: 10, scope: !18666)
!18679 = !DILocation(line: 7172, column: 6, scope: !18666)
!18680 = !DILocation(line: 7173, column: 2, scope: !18575)
!18681 = !DILocation(line: 7174, column: 7, scope: !18399)
!18682 = !DILocation(line: 7175, column: 5, scope: !18399)
!18683 = !DILocation(line: 7072, column: 38, scope: !18393)
!18684 = !DILocation(line: 7072, column: 3, scope: !18393)
!18685 = distinct !{!18685, !18397, !18686}
!18686 = !DILocation(line: 7175, column: 5, scope: !18390)
!18687 = !DILocation(line: 7176, column: 20, scope: !18258)
!18688 = !DILocation(line: 7176, column: 18, scope: !18258)
!18689 = !DILocation(line: 7177, column: 32, scope: !18690)
!18690 = distinct !DILexicalBlock(scope: !18258, file: !3, line: 7177, column: 7)
!18691 = !DILocation(line: 7177, column: 45, scope: !18690)
!18692 = !DILocation(line: 7177, column: 43, scope: !18690)
!18693 = !DILocation(line: 7177, column: 7, scope: !18258)
!18694 = !DILocation(line: 7178, column: 14, scope: !18690)
!18695 = !DILocation(line: 7178, column: 5, scope: !18690)
!18696 = !DILocation(line: 7180, column: 9, scope: !18697)
!18697 = distinct !DILexicalBlock(scope: !18258, file: !3, line: 7180, column: 7)
!18698 = !DILocation(line: 7180, column: 7, scope: !18258)
!18699 = !DILocation(line: 7181, column: 17, scope: !18697)
!18700 = !DILocation(line: 7181, column: 5, scope: !18697)
!18701 = !DILocation(line: 7183, column: 11, scope: !18258)
!18702 = !DILocation(line: 7184, column: 8, scope: !18703)
!18703 = distinct !DILexicalBlock(scope: !18258, file: !3, line: 7184, column: 7)
!18704 = !DILocation(line: 7184, column: 7, scope: !18258)
!18705 = !DILocation(line: 7185, column: 15, scope: !18703)
!18706 = !DILocation(line: 7185, column: 13, scope: !18703)
!18707 = !DILocation(line: 7185, column: 5, scope: !18703)
!18708 = !DILocation(line: 7187, column: 12, scope: !18709)
!18709 = distinct !DILexicalBlock(scope: !18703, file: !3, line: 7187, column: 12)
!18710 = !DILocation(line: 7187, column: 24, scope: !18709)
!18711 = !DILocation(line: 7187, column: 12, scope: !18703)
!18712 = !DILocalVariable(name: "expr_list", scope: !18713, file: !3, line: 7189, type: !1188)
!18713 = distinct !DILexicalBlock(scope: !18709, file: !3, line: 7188, column: 5)
!18714 = !DILocation(line: 7189, column: 11, scope: !18713)
!18715 = !DILocation(line: 7191, column: 11, scope: !18716)
!18716 = distinct !DILexicalBlock(scope: !18713, file: !3, line: 7191, column: 11)
!18717 = !DILocation(line: 7191, column: 22, scope: !18716)
!18718 = !DILocation(line: 7191, column: 25, scope: !18716)
!18719 = !DILocation(line: 7191, column: 43, scope: !18716)
!18720 = !DILocation(line: 7191, column: 11, scope: !18713)
!18721 = !DILocation(line: 7192, column: 14, scope: !18716)
!18722 = !DILocation(line: 7192, column: 12, scope: !18716)
!18723 = !DILocation(line: 7192, column: 2, scope: !18716)
!18724 = !DILocation(line: 7194, column: 14, scope: !18716)
!18725 = !DILocation(line: 7194, column: 12, scope: !18716)
!18726 = !DILocation(line: 7196, column: 17, scope: !18713)
!18727 = !DILocation(line: 7196, column: 15, scope: !18713)
!18728 = !DILocation(line: 7198, column: 5, scope: !18713)
!18729 = !DILocation(line: 7199, column: 12, scope: !18730)
!18730 = distinct !DILexicalBlock(scope: !18709, file: !3, line: 7199, column: 12)
!18731 = !DILocation(line: 7199, column: 12, scope: !18709)
!18732 = !DILocalVariable(name: "parallel", scope: !18733, file: !3, line: 7201, type: !1188)
!18733 = distinct !DILexicalBlock(scope: !18730, file: !3, line: 7200, column: 5)
!18734 = !DILocation(line: 7201, column: 11, scope: !18733)
!18735 = !DILocation(line: 7203, column: 14, scope: !18736)
!18736 = distinct !DILexicalBlock(scope: !18733, file: !3, line: 7203, column: 7)
!18737 = !DILocation(line: 7203, column: 12, scope: !18736)
!18738 = !DILocation(line: 7203, column: 19, scope: !18739)
!18739 = distinct !DILexicalBlock(scope: !18736, file: !3, line: 7203, column: 7)
!18740 = !DILocation(line: 7203, column: 23, scope: !18739)
!18741 = !DILocation(line: 7203, column: 21, scope: !18739)
!18742 = !DILocation(line: 7203, column: 7, scope: !18736)
!18743 = !DILocation(line: 7205, column: 6, scope: !18739)
!18744 = !DILocation(line: 7204, column: 6, scope: !18739)
!18745 = !DILocation(line: 7204, column: 2, scope: !18739)
!18746 = !DILocation(line: 7205, column: 4, scope: !18739)
!18747 = !DILocation(line: 7203, column: 37, scope: !18739)
!18748 = !DILocation(line: 7203, column: 7, scope: !18739)
!18749 = distinct !{!18749, !18742, !18750}
!18750 = !DILocation(line: 7205, column: 6, scope: !18736)
!18751 = !DILocation(line: 7207, column: 18, scope: !18733)
!18752 = !DILocation(line: 7207, column: 16, scope: !18733)
!18753 = !DILocation(line: 7209, column: 17, scope: !18733)
!18754 = !DILocation(line: 7209, column: 15, scope: !18733)
!18755 = !DILocation(line: 7211, column: 5, scope: !18733)
!18756 = !DILocation(line: 7230, column: 7, scope: !18757)
!18757 = distinct !DILexicalBlock(scope: !18258, file: !3, line: 7230, column: 7)
!18758 = !DILocation(line: 7230, column: 13, scope: !18757)
!18759 = !DILocation(line: 7230, column: 7, scope: !18258)
!18760 = !DILocation(line: 7232, column: 55, scope: !18761)
!18761 = distinct !DILexicalBlock(scope: !18757, file: !3, line: 7231, column: 5)
!18762 = !DILocation(line: 7232, column: 14, scope: !18761)
!18763 = !DILocation(line: 7232, column: 12, scope: !18761)
!18764 = !DILocation(line: 7233, column: 11, scope: !18765)
!18765 = distinct !DILexicalBlock(scope: !18761, file: !3, line: 7233, column: 11)
!18766 = !DILocation(line: 7233, column: 17, scope: !18765)
!18767 = !DILocation(line: 7233, column: 11, scope: !18761)
!18768 = !DILocation(line: 7234, column: 2, scope: !18765)
!18769 = !DILocation(line: 7234, column: 28, scope: !18765)
!18770 = !DILocation(line: 7235, column: 5, scope: !18761)
!18771 = !DILocation(line: 7237, column: 54, scope: !18757)
!18772 = !DILocation(line: 7237, column: 12, scope: !18757)
!18773 = !DILocation(line: 7237, column: 10, scope: !18757)
!18774 = !DILocation(line: 7238, column: 30, scope: !18258)
!18775 = !DILocation(line: 7238, column: 3, scope: !18258)
!18776 = !DILocation(line: 7238, column: 28, scope: !18258)
!18777 = !DILabel(scope: !18258, name: "clear", file: !3, line: 7240)
!18778 = !DILocation(line: 7240, column: 2, scope: !18258)
!18779 = !DILocation(line: 7241, column: 19, scope: !18258)
!18780 = !DILocation(line: 7241, column: 24, scope: !18258)
!18781 = !DILocation(line: 7241, column: 3, scope: !18258)
!18782 = !DILocation(line: 7242, column: 3, scope: !18258)
!18783 = !DILocation(line: 7242, column: 8, scope: !18258)
!18784 = !DILocation(line: 7242, column: 24, scope: !18258)
!18785 = !DILocation(line: 7243, column: 3, scope: !18258)
!18786 = !DILocation(line: 7244, column: 3, scope: !18258)
!18787 = !DILocation(line: 7244, column: 8, scope: !18258)
!18788 = !DILocation(line: 7244, column: 29, scope: !18258)
!18789 = !DILocation(line: 7245, column: 20, scope: !18258)
!18790 = !DILocation(line: 7245, column: 39, scope: !18258)
!18791 = !DILocation(line: 7245, column: 3, scope: !18258)
!18792 = !DILocation(line: 7248, column: 3, scope: !18258)
!18793 = !DILabel(scope: !18258, name: "value_or_debug_decl", file: !3, line: 7250)
!18794 = !DILocation(line: 7250, column: 2, scope: !18258)
!18795 = !DILocation(line: 7251, column: 21, scope: !18796)
!18796 = distinct !DILexicalBlock(scope: !18258, file: !3, line: 7251, column: 7)
!18797 = !DILocation(line: 7251, column: 26, scope: !18796)
!18798 = !DILocation(line: 7251, column: 7, scope: !18796)
!18799 = !DILocation(line: 7251, column: 30, scope: !18796)
!18800 = !DILocation(line: 7251, column: 33, scope: !18796)
!18801 = !DILocation(line: 7251, column: 38, scope: !18796)
!18802 = !DILocation(line: 7251, column: 7, scope: !18258)
!18803 = !DILocalVariable(name: "lc", scope: !18804, file: !3, line: 7253, type: !2437)
!18804 = distinct !DILexicalBlock(scope: !18796, file: !3, line: 7252, column: 5)
!18805 = !DILocation(line: 7253, column: 22, scope: !18804)
!18806 = !DILocalVariable(name: "cur_loc_changed", scope: !18804, file: !3, line: 7254, type: !1130)
!18807 = !DILocation(line: 7254, column: 12, scope: !18804)
!18808 = !DILocation(line: 7256, column: 11, scope: !18809)
!18809 = distinct !DILexicalBlock(scope: !18804, file: !3, line: 7256, column: 11)
!18810 = !DILocation(line: 7256, column: 16, scope: !18809)
!18811 = !DILocation(line: 7256, column: 28, scope: !18809)
!18812 = !DILocation(line: 7257, column: 4, scope: !18809)
!18813 = !DILocation(line: 7257, column: 28, scope: !18809)
!18814 = !DILocation(line: 7257, column: 33, scope: !18809)
!18815 = !DILocation(line: 7257, column: 45, scope: !18809)
!18816 = !DILocation(line: 7257, column: 54, scope: !18809)
!18817 = !DILocation(line: 7257, column: 7, scope: !18809)
!18818 = !DILocation(line: 7256, column: 11, scope: !18804)
!18819 = !DILocation(line: 7259, column: 2, scope: !18809)
!18820 = !DILocation(line: 7260, column: 17, scope: !18821)
!18821 = distinct !DILexicalBlock(scope: !18804, file: !3, line: 7260, column: 7)
!18822 = !DILocation(line: 7260, column: 22, scope: !18821)
!18823 = !DILocation(line: 7260, column: 34, scope: !18821)
!18824 = !DILocation(line: 7260, column: 15, scope: !18821)
!18825 = !DILocation(line: 7260, column: 12, scope: !18821)
!18826 = !DILocation(line: 7260, column: 45, scope: !18827)
!18827 = distinct !DILexicalBlock(scope: !18821, file: !3, line: 7260, column: 7)
!18828 = !DILocation(line: 7260, column: 7, scope: !18821)
!18829 = !DILocation(line: 7261, column: 6, scope: !18830)
!18830 = distinct !DILexicalBlock(scope: !18827, file: !3, line: 7261, column: 6)
!18831 = !DILocation(line: 7261, column: 10, scope: !18830)
!18832 = !DILocation(line: 7261, column: 17, scope: !18830)
!18833 = !DILocation(line: 7261, column: 22, scope: !18830)
!18834 = !DILocation(line: 7261, column: 34, scope: !18830)
!18835 = !DILocation(line: 7261, column: 14, scope: !18830)
!18836 = !DILocation(line: 7262, column: 6, scope: !18830)
!18837 = !DILocation(line: 7262, column: 30, scope: !18830)
!18838 = !DILocation(line: 7262, column: 34, scope: !18830)
!18839 = !DILocation(line: 7262, column: 39, scope: !18830)
!18840 = !DILocation(line: 7262, column: 9, scope: !18830)
!18841 = !DILocation(line: 7261, column: 6, scope: !18827)
!18842 = !DILocation(line: 7263, column: 4, scope: !18830)
!18843 = !DILocation(line: 7262, column: 61, scope: !18830)
!18844 = !DILocation(line: 7260, column: 54, scope: !18827)
!18845 = !DILocation(line: 7260, column: 58, scope: !18827)
!18846 = !DILocation(line: 7260, column: 52, scope: !18827)
!18847 = !DILocation(line: 7260, column: 7, scope: !18827)
!18848 = distinct !{!18848, !18828, !18849}
!18849 = !DILocation(line: 7263, column: 4, scope: !18821)
!18850 = !DILocation(line: 7264, column: 34, scope: !18804)
!18851 = !DILocation(line: 7264, column: 39, scope: !18804)
!18852 = !DILocation(line: 7264, column: 43, scope: !18804)
!18853 = !DILocation(line: 7264, column: 7, scope: !18804)
!18854 = !DILocation(line: 7264, column: 12, scope: !18804)
!18855 = !DILocation(line: 7264, column: 24, scope: !18804)
!18856 = !DILocation(line: 7264, column: 32, scope: !18804)
!18857 = !DILocation(line: 7265, column: 5, scope: !18804)
!18858 = !DILocation(line: 7266, column: 3, scope: !18258)
!18859 = distinct !DISubprogram(name: "check_changed_vars_0", scope: !3, file: !3, line: 7285, type: !18860, scopeLine: 7286, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!18860 = !DISubroutineType(types: !18861)
!18861 = !{null, !2410, !1827}
!18862 = !DILocalVariable(name: "dv", arg: 1, scope: !18859, file: !3, line: 7285, type: !2410)
!18863 = !DILocation(line: 7285, column: 37, scope: !18859)
!18864 = !DILocalVariable(name: "htab", arg: 2, scope: !18859, file: !3, line: 7285, type: !1827)
!18865 = !DILocation(line: 7285, column: 48, scope: !18859)
!18866 = !DILocalVariable(name: "vc", scope: !18859, file: !3, line: 7287, type: !2470)
!18867 = !DILocation(line: 7287, column: 15, scope: !18859)
!18868 = !DILocation(line: 7288, column: 42, scope: !18859)
!18869 = !DILocation(line: 7288, column: 56, scope: !18859)
!18870 = !DILocation(line: 7288, column: 74, scope: !18859)
!18871 = !DILocation(line: 7288, column: 60, scope: !18859)
!18872 = !DILocation(line: 7288, column: 21, scope: !18859)
!18873 = !DILocation(line: 7288, column: 7, scope: !18859)
!18874 = !DILocation(line: 7290, column: 7, scope: !18875)
!18875 = distinct !DILexicalBlock(scope: !18859, file: !3, line: 7290, column: 7)
!18876 = !DILocation(line: 7290, column: 10, scope: !18875)
!18877 = !DILocation(line: 7290, column: 7, scope: !18859)
!18878 = !DILocation(line: 7291, column: 5, scope: !18875)
!18879 = !DILocation(line: 7292, column: 13, scope: !18880)
!18880 = distinct !DILexicalBlock(scope: !18859, file: !3, line: 7292, column: 3)
!18881 = !DILocation(line: 7292, column: 17, scope: !18880)
!18882 = !DILocation(line: 7292, column: 11, scope: !18880)
!18883 = !DILocation(line: 7292, column: 8, scope: !18880)
!18884 = !DILocation(line: 7292, column: 23, scope: !18885)
!18885 = distinct !DILexicalBlock(scope: !18880, file: !3, line: 7292, column: 3)
!18886 = !DILocation(line: 7292, column: 3, scope: !18880)
!18887 = !DILocation(line: 7293, column: 24, scope: !18888)
!18888 = distinct !DILexicalBlock(scope: !18885, file: !3, line: 7293, column: 9)
!18889 = !DILocation(line: 7293, column: 28, scope: !18888)
!18890 = !DILocation(line: 7293, column: 10, scope: !18888)
!18891 = !DILocation(line: 7293, column: 9, scope: !18885)
!18892 = !DILocalVariable(name: "vcvar", scope: !18893, file: !3, line: 7295, type: !2447)
!18893 = distinct !DILexicalBlock(scope: !18888, file: !3, line: 7294, column: 7)
!18894 = !DILocation(line: 7295, column: 11, scope: !18893)
!18895 = !DILocation(line: 7296, column: 38, scope: !18893)
!18896 = !DILocation(line: 7296, column: 44, scope: !18893)
!18897 = !DILocation(line: 7296, column: 48, scope: !18893)
!18898 = !DILocation(line: 7297, column: 24, scope: !18893)
!18899 = !DILocation(line: 7297, column: 28, scope: !18893)
!18900 = !DILocation(line: 7297, column: 10, scope: !18893)
!18901 = !DILocation(line: 7296, column: 17, scope: !18893)
!18902 = !DILocation(line: 7296, column: 6, scope: !18893)
!18903 = !DILocation(line: 7298, column: 6, scope: !18904)
!18904 = distinct !DILexicalBlock(scope: !18893, file: !3, line: 7298, column: 6)
!18905 = !DILocation(line: 7298, column: 6, scope: !18893)
!18906 = !DILocation(line: 7300, column: 22, scope: !18907)
!18907 = distinct !DILexicalBlock(scope: !18904, file: !3, line: 7299, column: 4)
!18908 = !DILocation(line: 7300, column: 26, scope: !18907)
!18909 = !DILocation(line: 7300, column: 6, scope: !18907)
!18910 = !DILocation(line: 7301, column: 6, scope: !18907)
!18911 = !DILocation(line: 7302, column: 4, scope: !18907)
!18912 = !DILocation(line: 7303, column: 26, scope: !18913)
!18913 = distinct !DILexicalBlock(scope: !18904, file: !3, line: 7303, column: 11)
!18914 = !DILocation(line: 7303, column: 30, scope: !18913)
!18915 = !DILocation(line: 7303, column: 11, scope: !18913)
!18916 = !DILocation(line: 7303, column: 11, scope: !18904)
!18917 = !DILocation(line: 7305, column: 22, scope: !18918)
!18918 = distinct !DILexicalBlock(scope: !18913, file: !3, line: 7304, column: 4)
!18919 = !DILocation(line: 7305, column: 26, scope: !18918)
!18920 = !DILocation(line: 7305, column: 6, scope: !18918)
!18921 = !DILocation(line: 7306, column: 6, scope: !18918)
!18922 = !DILocation(line: 7308, column: 28, scope: !18918)
!18923 = !DILocation(line: 7308, column: 32, scope: !18918)
!18924 = !DILocation(line: 7308, column: 36, scope: !18918)
!18925 = !DILocation(line: 7308, column: 6, scope: !18918)
!18926 = !DILocation(line: 7309, column: 4, scope: !18918)
!18927 = !DILocation(line: 7310, column: 7, scope: !18893)
!18928 = !DILocation(line: 7293, column: 30, scope: !18888)
!18929 = !DILocation(line: 7292, column: 32, scope: !18885)
!18930 = !DILocation(line: 7292, column: 36, scope: !18885)
!18931 = !DILocation(line: 7292, column: 30, scope: !18885)
!18932 = !DILocation(line: 7292, column: 3, scope: !18885)
!18933 = distinct !{!18933, !18886, !18934}
!18934 = !DILocation(line: 7310, column: 7, scope: !18880)
!18935 = !DILocation(line: 7311, column: 1, scope: !18859)
!18936 = distinct !DISubprogram(name: "dv_changed_p", scope: !3, file: !3, line: 2487, type: !2663, scopeLine: 2488, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!18937 = !DILocalVariable(name: "dv", arg: 1, scope: !18936, file: !3, line: 2487, type: !2410)
!18938 = !DILocation(line: 2487, column: 29, scope: !18936)
!18939 = !DILocation(line: 2489, column: 26, scope: !18936)
!18940 = !DILocation(line: 2489, column: 11, scope: !18936)
!18941 = !DILocation(line: 2490, column: 6, scope: !18936)
!18942 = !DILocation(line: 2491, column: 6, scope: !18936)
!18943 = !DILocation(line: 2489, column: 10, scope: !18936)
!18944 = !DILocation(line: 2489, column: 3, scope: !18936)
!18945 = distinct !DISubprogram(name: "VEC_variable_heap_safe_push", scope: !3, file: !3, line: 7270, type: !18946, scopeLine: 7270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!18946 = !DISubroutineType(types: !18947)
!18947 = !{!18948, !17623, !2447}
!18948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2447, size: 64)
!18949 = !DILocalVariable(name: "vec_", arg: 1, scope: !18945, file: !3, line: 7270, type: !17623)
!18950 = !DILocation(line: 7270, column: 1, scope: !18945)
!18951 = !DILocalVariable(name: "obj_", arg: 2, scope: !18945, file: !3, line: 7270, type: !2447)
!18952 = distinct !DISubprogram(name: "VEC_variable_heap_reserve", scope: !3, file: !3, line: 7270, type: !18953, scopeLine: 7270, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!18953 = !DISubroutineType(types: !18954)
!18954 = !{!1010, !17623, !1010}
!18955 = !DILocalVariable(name: "vec_", arg: 1, scope: !18952, file: !3, line: 7270, type: !17623)
!18956 = !DILocation(line: 7270, column: 1, scope: !18952)
!18957 = !DILocalVariable(name: "alloc_", arg: 2, scope: !18952, file: !3, line: 7270, type: !1010)
!18958 = !DILocalVariable(name: "extend", scope: !18952, file: !3, line: 7270, type: !1010)
!18959 = !DILocation(line: 7270, column: 1, scope: !18960)
!18960 = distinct !DILexicalBlock(scope: !18952, file: !3, line: 7270, column: 1)
!18961 = distinct !DISubprogram(name: "VEC_variable_base_quick_push", scope: !3, file: !3, line: 7269, type: !18962, scopeLine: 7269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!18962 = !DISubroutineType(types: !18963)
!18963 = !{!18948, !18117, !2447}
!18964 = !DILocalVariable(name: "vec_", arg: 1, scope: !18961, file: !3, line: 7269, type: !18117)
!18965 = !DILocation(line: 7269, column: 1, scope: !18961)
!18966 = !DILocalVariable(name: "obj_", arg: 2, scope: !18961, file: !3, line: 7269, type: !2447)
!18967 = !DILocalVariable(name: "slot_", scope: !18961, file: !3, line: 7269, type: !18948)
!18968 = distinct !DISubprogram(name: "VEC_variable_base_space", scope: !3, file: !3, line: 7269, type: !18969, scopeLine: 7269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!18969 = !DISubroutineType(types: !18970)
!18970 = !{!1010, !18117, !1010}
!18971 = !DILocalVariable(name: "vec_", arg: 1, scope: !18968, file: !3, line: 7269, type: !18117)
!18972 = !DILocation(line: 7269, column: 1, scope: !18968)
!18973 = !DILocalVariable(name: "alloc_", arg: 2, scope: !18968, file: !3, line: 7269, type: !1010)
!18974 = distinct !DISubprogram(name: "vt_expand_loc_dummy", scope: !3, file: !3, line: 7004, type: !18975, scopeLine: 7005, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!18975 = !DISubroutineType(types: !18976)
!18976 = !{!1130, !1188, !1827, !3352}
!18977 = !DILocalVariable(name: "loc", arg: 1, scope: !18974, file: !3, line: 7004, type: !1188)
!18978 = !DILocation(line: 7004, column: 26, scope: !18974)
!18979 = !DILocalVariable(name: "vars", arg: 2, scope: !18974, file: !3, line: 7004, type: !1827)
!18980 = !DILocation(line: 7004, column: 38, scope: !18974)
!18981 = !DILocalVariable(name: "pcur_loc_changed", arg: 3, scope: !18974, file: !3, line: 7004, type: !3352)
!18982 = !DILocation(line: 7004, column: 50, scope: !18974)
!18983 = !DILocalVariable(name: "data", scope: !18974, file: !3, line: 7006, type: !2533)
!18984 = !DILocation(line: 7006, column: 35, scope: !18974)
!18985 = !DILocalVariable(name: "ret", scope: !18974, file: !3, line: 7007, type: !1130)
!18986 = !DILocation(line: 7007, column: 8, scope: !18974)
!18987 = !DILocation(line: 7009, column: 3, scope: !18974)
!18988 = !DILocation(line: 7010, column: 15, scope: !18974)
!18989 = !DILocation(line: 7010, column: 8, scope: !18974)
!18990 = !DILocation(line: 7010, column: 13, scope: !18974)
!18991 = !DILocation(line: 7011, column: 8, scope: !18974)
!18992 = !DILocation(line: 7011, column: 14, scope: !18974)
!18993 = !DILocation(line: 7012, column: 8, scope: !18974)
!18994 = !DILocation(line: 7012, column: 24, scope: !18974)
!18995 = !DILocation(line: 7013, column: 43, scope: !18974)
!18996 = !DILocation(line: 7013, column: 48, scope: !18974)
!18997 = !DILocation(line: 7014, column: 32, scope: !18974)
!18998 = !DILocation(line: 7013, column: 9, scope: !18974)
!18999 = !DILocation(line: 7013, column: 7, scope: !18974)
!19000 = !DILocation(line: 7015, column: 28, scope: !18974)
!19001 = !DILocation(line: 7015, column: 4, scope: !18974)
!19002 = !DILocation(line: 7015, column: 21, scope: !18974)
!19003 = !DILocation(line: 7016, column: 10, scope: !18974)
!19004 = !DILocation(line: 7016, column: 3, scope: !18974)
!19005 = distinct !DISubprogram(name: "vt_expand_loc_callback", scope: !3, file: !3, line: 6839, type: !19006, scopeLine: 6840, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!19006 = !DISubroutineType(types: !19007)
!19007 = !{!1188, !1188, !1910, !1010, !1313}
!19008 = !DILocalVariable(name: "x", arg: 1, scope: !19005, file: !3, line: 6839, type: !1188)
!19009 = !DILocation(line: 6839, column: 29, scope: !19005)
!19010 = !DILocalVariable(name: "regs", arg: 2, scope: !19005, file: !3, line: 6839, type: !1910)
!19011 = !DILocation(line: 6839, column: 39, scope: !19005)
!19012 = !DILocalVariable(name: "max_depth", arg: 3, scope: !19005, file: !3, line: 6839, type: !1010)
!19013 = !DILocation(line: 6839, column: 49, scope: !19005)
!19014 = !DILocalVariable(name: "data", arg: 4, scope: !19005, file: !3, line: 6839, type: !1313)
!19015 = !DILocation(line: 6839, column: 66, scope: !19005)
!19016 = !DILocalVariable(name: "elcd", scope: !19005, file: !3, line: 6841, type: !2532)
!19017 = !DILocation(line: 6841, column: 36, scope: !19005)
!19018 = !DILocation(line: 6842, column: 43, scope: !19005)
!19019 = !DILocation(line: 6842, column: 7, scope: !19005)
!19020 = !DILocalVariable(name: "dummy", scope: !19005, file: !3, line: 6843, type: !1130)
!19021 = !DILocation(line: 6843, column: 8, scope: !19005)
!19022 = !DILocation(line: 6843, column: 16, scope: !19005)
!19023 = !DILocation(line: 6843, column: 22, scope: !19005)
!19024 = !DILocalVariable(name: "cur_loc_changed", scope: !19005, file: !3, line: 6844, type: !1130)
!19025 = !DILocation(line: 6844, column: 8, scope: !19005)
!19026 = !DILocation(line: 6844, column: 26, scope: !19005)
!19027 = !DILocation(line: 6844, column: 32, scope: !19005)
!19028 = !DILocalVariable(name: "dv", scope: !19005, file: !3, line: 6845, type: !2410)
!19029 = !DILocation(line: 6845, column: 17, scope: !19005)
!19030 = !DILocalVariable(name: "var", scope: !19005, file: !3, line: 6846, type: !2447)
!19031 = !DILocation(line: 6846, column: 12, scope: !19005)
!19032 = !DILocalVariable(name: "loc", scope: !19005, file: !3, line: 6847, type: !2437)
!19033 = !DILocation(line: 6847, column: 18, scope: !19005)
!19034 = !DILocalVariable(name: "result", scope: !19005, file: !3, line: 6848, type: !1188)
!19035 = !DILocation(line: 6848, column: 7, scope: !19005)
!19036 = !DILocalVariable(name: "subreg", scope: !19005, file: !3, line: 6848, type: !1188)
!19037 = !DILocation(line: 6848, column: 15, scope: !19005)
!19038 = !DILocalVariable(name: "xret", scope: !19005, file: !3, line: 6848, type: !1188)
!19039 = !DILocation(line: 6848, column: 23, scope: !19005)
!19040 = !DILocation(line: 6850, column: 11, scope: !19005)
!19041 = !DILocation(line: 6850, column: 3, scope: !19005)
!19042 = !DILocation(line: 6853, column: 11, scope: !19043)
!19043 = distinct !DILexicalBlock(scope: !19044, file: !3, line: 6853, column: 11)
!19044 = distinct !DILexicalBlock(scope: !19005, file: !3, line: 6851, column: 5)
!19045 = !DILocation(line: 6853, column: 11, scope: !19044)
!19046 = !DILocation(line: 6855, column: 42, scope: !19047)
!19047 = distinct !DILexicalBlock(scope: !19048, file: !3, line: 6855, column: 8)
!19048 = distinct !DILexicalBlock(scope: !19043, file: !3, line: 6854, column: 2)
!19049 = !DILocation(line: 6855, column: 58, scope: !19047)
!19050 = !DILocation(line: 6856, column: 7, scope: !19047)
!19051 = !DILocation(line: 6856, column: 17, scope: !19047)
!19052 = !DILocation(line: 6857, column: 31, scope: !19047)
!19053 = !DILocation(line: 6855, column: 8, scope: !19047)
!19054 = !DILocation(line: 6855, column: 8, scope: !19048)
!19055 = !DILocation(line: 6858, column: 13, scope: !19047)
!19056 = !DILocation(line: 6858, column: 6, scope: !19047)
!19057 = !DILocation(line: 6860, column: 6, scope: !19047)
!19058 = !DILocation(line: 6863, column: 44, scope: !19044)
!19059 = !DILocation(line: 6863, column: 60, scope: !19044)
!19060 = !DILocation(line: 6864, column: 9, scope: !19044)
!19061 = !DILocation(line: 6864, column: 19, scope: !19044)
!19062 = !DILocation(line: 6865, column: 33, scope: !19044)
!19063 = !DILocation(line: 6863, column: 16, scope: !19044)
!19064 = !DILocation(line: 6863, column: 14, scope: !19044)
!19065 = !DILocation(line: 6867, column: 12, scope: !19066)
!19066 = distinct !DILexicalBlock(scope: !19044, file: !3, line: 6867, column: 11)
!19067 = !DILocation(line: 6867, column: 11, scope: !19044)
!19068 = !DILocation(line: 6868, column: 2, scope: !19066)
!19069 = !DILocation(line: 6870, column: 37, scope: !19044)
!19070 = !DILocation(line: 6870, column: 51, scope: !19044)
!19071 = !DILocation(line: 6871, column: 9, scope: !19044)
!19072 = !DILocation(line: 6872, column: 9, scope: !19044)
!19073 = !DILocation(line: 6870, column: 16, scope: !19044)
!19074 = !DILocation(line: 6870, column: 14, scope: !19044)
!19075 = !DILocation(line: 6876, column: 12, scope: !19076)
!19076 = distinct !DILexicalBlock(scope: !19044, file: !3, line: 6876, column: 11)
!19077 = !DILocation(line: 6876, column: 11, scope: !19044)
!19078 = !DILocation(line: 6877, column: 11, scope: !19076)
!19079 = !DILocation(line: 6877, column: 9, scope: !19076)
!19080 = !DILocation(line: 6877, column: 2, scope: !19076)
!19081 = !DILocation(line: 6879, column: 14, scope: !19044)
!19082 = !DILocation(line: 6879, column: 7, scope: !19044)
!19083 = !DILocation(line: 6882, column: 26, scope: !19044)
!19084 = !DILocation(line: 6882, column: 12, scope: !19044)
!19085 = !DILocation(line: 6882, column: 10, scope: !19044)
!19086 = !DILocation(line: 6883, column: 12, scope: !19044)
!19087 = !DILocation(line: 6884, column: 7, scope: !19044)
!19088 = !DILocation(line: 6887, column: 27, scope: !19044)
!19089 = !DILocation(line: 6887, column: 12, scope: !19044)
!19090 = !DILocation(line: 6887, column: 10, scope: !19044)
!19091 = !DILocation(line: 6888, column: 14, scope: !19044)
!19092 = !DILocation(line: 6888, column: 12, scope: !19044)
!19093 = !DILocation(line: 6889, column: 7, scope: !19044)
!19094 = !DILocation(line: 6892, column: 14, scope: !19044)
!19095 = !DILocation(line: 6892, column: 7, scope: !19044)
!19096 = !DILocation(line: 6895, column: 7, scope: !19097)
!19097 = distinct !DILexicalBlock(scope: !19005, file: !3, line: 6895, column: 7)
!19098 = !DILocation(line: 6895, column: 7, scope: !19005)
!19099 = !DILocation(line: 6896, column: 5, scope: !19097)
!19100 = !DILocation(line: 6898, column: 41, scope: !19005)
!19101 = !DILocation(line: 6898, column: 47, scope: !19005)
!19102 = !DILocation(line: 6898, column: 53, scope: !19005)
!19103 = !DILocation(line: 6898, column: 71, scope: !19005)
!19104 = !DILocation(line: 6898, column: 57, scope: !19005)
!19105 = !DILocation(line: 6898, column: 20, scope: !19005)
!19106 = !DILocation(line: 6898, column: 9, scope: !19005)
!19107 = !DILocation(line: 6898, column: 7, scope: !19005)
!19108 = !DILocation(line: 6900, column: 8, scope: !19109)
!19109 = distinct !DILexicalBlock(scope: !19005, file: !3, line: 6900, column: 7)
!19110 = !DILocation(line: 6900, column: 7, scope: !19005)
!19111 = !DILocation(line: 6902, column: 11, scope: !19112)
!19112 = distinct !DILexicalBlock(scope: !19113, file: !3, line: 6902, column: 11)
!19113 = distinct !DILexicalBlock(scope: !19109, file: !3, line: 6901, column: 5)
!19114 = !DILocation(line: 6902, column: 17, scope: !19112)
!19115 = !DILocation(line: 6902, column: 34, scope: !19112)
!19116 = !DILocation(line: 6902, column: 20, scope: !19112)
!19117 = !DILocation(line: 6902, column: 11, scope: !19113)
!19118 = !DILocation(line: 6903, column: 2, scope: !19112)
!19119 = !DILocation(line: 6903, column: 8, scope: !19112)
!19120 = !DILocation(line: 6903, column: 24, scope: !19112)
!19121 = !DILocation(line: 6904, column: 14, scope: !19113)
!19122 = !DILocation(line: 6904, column: 7, scope: !19113)
!19123 = !DILocation(line: 6907, column: 7, scope: !19124)
!19124 = distinct !DILexicalBlock(scope: !19005, file: !3, line: 6907, column: 7)
!19125 = !DILocation(line: 6907, column: 12, scope: !19124)
!19126 = !DILocation(line: 6907, column: 24, scope: !19124)
!19127 = !DILocation(line: 6907, column: 7, scope: !19005)
!19128 = !DILocation(line: 6909, column: 11, scope: !19129)
!19129 = distinct !DILexicalBlock(scope: !19130, file: !3, line: 6909, column: 11)
!19130 = distinct !DILexicalBlock(scope: !19124, file: !3, line: 6908, column: 5)
!19131 = !DILocation(line: 6909, column: 11, scope: !19130)
!19132 = !DILocation(line: 6910, column: 2, scope: !19129)
!19133 = !DILocation(line: 6910, column: 8, scope: !19129)
!19134 = !DILocation(line: 6910, column: 24, scope: !19129)
!19135 = !DILocation(line: 6911, column: 14, scope: !19130)
!19136 = !DILocation(line: 6911, column: 7, scope: !19130)
!19137 = !DILocation(line: 6914, column: 3, scope: !19005)
!19138 = !DILocation(line: 6916, column: 3, scope: !19005)
!19139 = !DILocation(line: 6916, column: 27, scope: !19005)
!19140 = !DILocation(line: 6917, column: 10, scope: !19005)
!19141 = !DILocation(line: 6919, column: 7, scope: !19142)
!19142 = distinct !DILexicalBlock(scope: !19005, file: !3, line: 6919, column: 7)
!19143 = !DILocation(line: 6919, column: 12, scope: !19142)
!19144 = !DILocation(line: 6919, column: 24, scope: !19142)
!19145 = !DILocation(line: 6919, column: 7, scope: !19005)
!19146 = !DILocation(line: 6921, column: 11, scope: !19147)
!19147 = distinct !DILexicalBlock(scope: !19148, file: !3, line: 6921, column: 11)
!19148 = distinct !DILexicalBlock(scope: !19142, file: !3, line: 6920, column: 5)
!19149 = !DILocation(line: 6921, column: 11, scope: !19148)
!19150 = !DILocation(line: 6923, column: 42, scope: !19151)
!19151 = distinct !DILexicalBlock(scope: !19152, file: !3, line: 6923, column: 8)
!19152 = distinct !DILexicalBlock(scope: !19147, file: !3, line: 6922, column: 2)
!19153 = !DILocation(line: 6923, column: 47, scope: !19151)
!19154 = !DILocation(line: 6923, column: 59, scope: !19151)
!19155 = !DILocation(line: 6923, column: 68, scope: !19151)
!19156 = !DILocation(line: 6924, column: 7, scope: !19151)
!19157 = !DILocation(line: 6925, column: 31, scope: !19151)
!19158 = !DILocation(line: 6923, column: 8, scope: !19151)
!19159 = !DILocation(line: 6923, column: 8, scope: !19152)
!19160 = !DILocation(line: 6926, column: 15, scope: !19151)
!19161 = !DILocation(line: 6926, column: 13, scope: !19151)
!19162 = !DILocation(line: 6926, column: 6, scope: !19151)
!19163 = !DILocation(line: 6927, column: 2, scope: !19152)
!19164 = !DILocation(line: 6929, column: 39, scope: !19147)
!19165 = !DILocation(line: 6929, column: 44, scope: !19147)
!19166 = !DILocation(line: 6929, column: 56, scope: !19147)
!19167 = !DILocation(line: 6929, column: 65, scope: !19147)
!19168 = !DILocation(line: 6930, column: 11, scope: !19147)
!19169 = !DILocation(line: 6931, column: 35, scope: !19147)
!19170 = !DILocation(line: 6929, column: 11, scope: !19147)
!19171 = !DILocation(line: 6929, column: 9, scope: !19147)
!19172 = !DILocation(line: 6932, column: 11, scope: !19173)
!19173 = distinct !DILexicalBlock(scope: !19148, file: !3, line: 6932, column: 11)
!19174 = !DILocation(line: 6932, column: 11, scope: !19148)
!19175 = !DILocation(line: 6933, column: 18, scope: !19173)
!19176 = !DILocation(line: 6933, column: 2, scope: !19173)
!19177 = !DILocation(line: 6934, column: 5, scope: !19148)
!19178 = !DILocation(line: 6935, column: 8, scope: !19179)
!19179 = distinct !DILexicalBlock(scope: !19005, file: !3, line: 6935, column: 7)
!19180 = !DILocation(line: 6935, column: 15, scope: !19179)
!19181 = !DILocation(line: 6935, column: 32, scope: !19179)
!19182 = !DILocation(line: 6935, column: 18, scope: !19179)
!19183 = !DILocation(line: 6935, column: 7, scope: !19005)
!19184 = !DILocation(line: 6937, column: 23, scope: !19185)
!19185 = distinct !DILexicalBlock(scope: !19179, file: !3, line: 6936, column: 5)
!19186 = !DILocation(line: 6937, column: 7, scope: !19185)
!19187 = !DILocation(line: 6938, column: 18, scope: !19188)
!19188 = distinct !DILexicalBlock(scope: !19185, file: !3, line: 6938, column: 7)
!19189 = !DILocation(line: 6938, column: 23, scope: !19188)
!19190 = !DILocation(line: 6938, column: 35, scope: !19188)
!19191 = !DILocation(line: 6938, column: 16, scope: !19188)
!19192 = !DILocation(line: 6938, column: 12, scope: !19188)
!19193 = !DILocation(line: 6938, column: 46, scope: !19194)
!19194 = distinct !DILexicalBlock(scope: !19188, file: !3, line: 6938, column: 7)
!19195 = !DILocation(line: 6938, column: 7, scope: !19188)
!19196 = !DILocation(line: 6939, column: 6, scope: !19197)
!19197 = distinct !DILexicalBlock(scope: !19194, file: !3, line: 6939, column: 6)
!19198 = !DILocation(line: 6939, column: 11, scope: !19197)
!19199 = !DILocation(line: 6939, column: 18, scope: !19197)
!19200 = !DILocation(line: 6939, column: 23, scope: !19197)
!19201 = !DILocation(line: 6939, column: 35, scope: !19197)
!19202 = !DILocation(line: 6939, column: 15, scope: !19197)
!19203 = !DILocation(line: 6939, column: 6, scope: !19194)
!19204 = !DILocation(line: 6940, column: 4, scope: !19197)
!19205 = !DILocation(line: 6941, column: 11, scope: !19206)
!19206 = distinct !DILexicalBlock(scope: !19197, file: !3, line: 6941, column: 11)
!19207 = !DILocation(line: 6941, column: 11, scope: !19197)
!19208 = !DILocation(line: 6943, column: 30, scope: !19209)
!19209 = distinct !DILexicalBlock(scope: !19206, file: !3, line: 6942, column: 4)
!19210 = !DILocation(line: 6943, column: 6, scope: !19209)
!19211 = !DILocation(line: 6943, column: 12, scope: !19209)
!19212 = !DILocation(line: 6943, column: 28, scope: !19209)
!19213 = !DILocation(line: 6944, column: 44, scope: !19214)
!19214 = distinct !DILexicalBlock(scope: !19209, file: !3, line: 6944, column: 10)
!19215 = !DILocation(line: 6944, column: 49, scope: !19214)
!19216 = !DILocation(line: 6944, column: 54, scope: !19214)
!19217 = !DILocation(line: 6944, column: 60, scope: !19214)
!19218 = !DILocation(line: 6946, column: 9, scope: !19214)
!19219 = !DILocation(line: 6944, column: 10, scope: !19214)
!19220 = !DILocation(line: 6944, column: 10, scope: !19209)
!19221 = !DILocation(line: 6948, column: 12, scope: !19222)
!19222 = distinct !DILexicalBlock(scope: !19214, file: !3, line: 6947, column: 8)
!19223 = !DILocation(line: 6948, column: 10, scope: !19222)
!19224 = !DILocation(line: 6949, column: 3, scope: !19222)
!19225 = !DILocation(line: 6951, column: 4, scope: !19209)
!19226 = !DILocation(line: 6954, column: 43, scope: !19227)
!19227 = distinct !DILexicalBlock(scope: !19206, file: !3, line: 6953, column: 4)
!19228 = !DILocation(line: 6954, column: 48, scope: !19227)
!19229 = !DILocation(line: 6954, column: 53, scope: !19227)
!19230 = !DILocation(line: 6954, column: 59, scope: !19227)
!19231 = !DILocation(line: 6955, column: 32, scope: !19227)
!19232 = !DILocation(line: 6954, column: 15, scope: !19227)
!19233 = !DILocation(line: 6954, column: 13, scope: !19227)
!19234 = !DILocation(line: 6956, column: 10, scope: !19235)
!19235 = distinct !DILexicalBlock(scope: !19227, file: !3, line: 6956, column: 10)
!19236 = !DILocation(line: 6956, column: 10, scope: !19227)
!19237 = !DILocation(line: 6957, column: 8, scope: !19235)
!19238 = !DILocation(line: 6938, column: 57, scope: !19194)
!19239 = !DILocation(line: 6938, column: 62, scope: !19194)
!19240 = !DILocation(line: 6938, column: 55, scope: !19194)
!19241 = !DILocation(line: 6938, column: 7, scope: !19194)
!19242 = distinct !{!19242, !19195, !19243}
!19243 = !DILocation(line: 6958, column: 4, scope: !19188)
!19244 = !DILocation(line: 6959, column: 11, scope: !19245)
!19245 = distinct !DILexicalBlock(scope: !19185, file: !3, line: 6959, column: 11)
!19246 = !DILocation(line: 6959, column: 17, scope: !19245)
!19247 = !DILocation(line: 6959, column: 21, scope: !19245)
!19248 = !DILocation(line: 6959, column: 28, scope: !19245)
!19249 = !DILocation(line: 6959, column: 31, scope: !19245)
!19250 = !DILocation(line: 6959, column: 36, scope: !19245)
!19251 = !DILocation(line: 6959, column: 48, scope: !19245)
!19252 = !DILocation(line: 6959, column: 11, scope: !19185)
!19253 = !DILocation(line: 6960, column: 2, scope: !19245)
!19254 = !DILocation(line: 6960, column: 7, scope: !19245)
!19255 = !DILocation(line: 6960, column: 23, scope: !19245)
!19256 = !DILocation(line: 6961, column: 34, scope: !19185)
!19257 = !DILocation(line: 6961, column: 40, scope: !19185)
!19258 = !DILocation(line: 6961, column: 45, scope: !19185)
!19259 = !DILocation(line: 6961, column: 7, scope: !19185)
!19260 = !DILocation(line: 6961, column: 12, scope: !19185)
!19261 = !DILocation(line: 6961, column: 24, scope: !19185)
!19262 = !DILocation(line: 6961, column: 32, scope: !19185)
!19263 = !DILocation(line: 6962, column: 5, scope: !19185)
!19264 = !DILocation(line: 6963, column: 7, scope: !19265)
!19265 = distinct !DILexicalBlock(scope: !19005, file: !3, line: 6963, column: 7)
!19266 = !DILocation(line: 6963, column: 7, scope: !19005)
!19267 = !DILocation(line: 6965, column: 11, scope: !19268)
!19268 = distinct !DILexicalBlock(scope: !19269, file: !3, line: 6965, column: 11)
!19269 = distinct !DILexicalBlock(scope: !19265, file: !3, line: 6964, column: 5)
!19270 = !DILocation(line: 6965, column: 16, scope: !19268)
!19271 = !DILocation(line: 6965, column: 11, scope: !19269)
!19272 = !DILocation(line: 6966, column: 2, scope: !19268)
!19273 = !DILocation(line: 6966, column: 8, scope: !19268)
!19274 = !DILocation(line: 6966, column: 24, scope: !19268)
!19275 = !DILocation(line: 6967, column: 17, scope: !19276)
!19276 = distinct !DILexicalBlock(scope: !19268, file: !3, line: 6967, column: 16)
!19277 = !DILocation(line: 6967, column: 24, scope: !19276)
!19278 = !DILocation(line: 6967, column: 27, scope: !19276)
!19279 = !DILocation(line: 6967, column: 32, scope: !19276)
!19280 = !DILocation(line: 6967, column: 44, scope: !19276)
!19281 = !DILocation(line: 6967, column: 52, scope: !19276)
!19282 = !DILocation(line: 6967, column: 16, scope: !19268)
!19283 = !DILocation(line: 6968, column: 26, scope: !19276)
!19284 = !DILocation(line: 6968, column: 2, scope: !19276)
!19285 = !DILocation(line: 6968, column: 8, scope: !19276)
!19286 = !DILocation(line: 6968, column: 24, scope: !19276)
!19287 = !DILocation(line: 6969, column: 5, scope: !19269)
!19288 = !DILocation(line: 6971, column: 3, scope: !19005)
!19289 = !DILocation(line: 6971, column: 27, scope: !19005)
!19290 = !DILocation(line: 6972, column: 7, scope: !19291)
!19291 = distinct !DILexicalBlock(scope: !19005, file: !3, line: 6972, column: 7)
!19292 = !DILocation(line: 6972, column: 7, scope: !19005)
!19293 = !DILocation(line: 6973, column: 12, scope: !19291)
!19294 = !DILocation(line: 6973, column: 5, scope: !19291)
!19295 = !DILocation(line: 6975, column: 12, scope: !19291)
!19296 = !DILocation(line: 6975, column: 5, scope: !19291)
!19297 = !DILocation(line: 6976, column: 1, scope: !19005)
!19298 = distinct !DISubprogram(name: "vt_expand_loc", scope: !3, file: !3, line: 6982, type: !19299, scopeLine: 6983, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!19299 = !DISubroutineType(types: !19300)
!19300 = !{!1188, !1188, !1827}
!19301 = !DILocalVariable(name: "loc", arg: 1, scope: !19298, file: !3, line: 6982, type: !1188)
!19302 = !DILocation(line: 6982, column: 20, scope: !19298)
!19303 = !DILocalVariable(name: "vars", arg: 2, scope: !19298, file: !3, line: 6982, type: !1827)
!19304 = !DILocation(line: 6982, column: 32, scope: !19298)
!19305 = !DILocalVariable(name: "data", scope: !19298, file: !3, line: 6984, type: !2533)
!19306 = !DILocation(line: 6984, column: 35, scope: !19298)
!19307 = !DILocation(line: 6986, column: 8, scope: !19308)
!19308 = distinct !DILexicalBlock(scope: !19298, file: !3, line: 6986, column: 7)
!19309 = !DILocation(line: 6986, column: 7, scope: !19298)
!19310 = !DILocation(line: 6987, column: 12, scope: !19308)
!19311 = !DILocation(line: 6987, column: 5, scope: !19308)
!19312 = !DILocation(line: 6989, column: 15, scope: !19298)
!19313 = !DILocation(line: 6989, column: 8, scope: !19298)
!19314 = !DILocation(line: 6989, column: 13, scope: !19298)
!19315 = !DILocation(line: 6990, column: 8, scope: !19298)
!19316 = !DILocation(line: 6990, column: 14, scope: !19298)
!19317 = !DILocation(line: 6991, column: 8, scope: !19298)
!19318 = !DILocation(line: 6991, column: 24, scope: !19298)
!19319 = !DILocation(line: 6992, column: 37, scope: !19298)
!19320 = !DILocation(line: 6992, column: 42, scope: !19298)
!19321 = !DILocation(line: 6993, column: 33, scope: !19298)
!19322 = !DILocation(line: 6992, column: 9, scope: !19298)
!19323 = !DILocation(line: 6992, column: 7, scope: !19298)
!19324 = !DILocation(line: 6995, column: 7, scope: !19325)
!19325 = distinct !DILexicalBlock(scope: !19298, file: !3, line: 6995, column: 7)
!19326 = !DILocation(line: 6995, column: 11, scope: !19325)
!19327 = !DILocation(line: 6995, column: 14, scope: !19325)
!19328 = !DILocation(line: 6995, column: 7, scope: !19298)
!19329 = !DILocation(line: 6996, column: 19, scope: !19325)
!19330 = !DILocation(line: 6996, column: 41, scope: !19325)
!19331 = !DILocation(line: 6996, column: 11, scope: !19325)
!19332 = !DILocation(line: 6996, column: 9, scope: !19325)
!19333 = !DILocation(line: 6996, column: 5, scope: !19325)
!19334 = !DILocation(line: 6997, column: 10, scope: !19298)
!19335 = !DILocation(line: 6997, column: 3, scope: !19298)
!19336 = !DILocation(line: 6998, column: 1, scope: !19298)
!19337 = distinct !DISubprogram(name: "end_hard_regno", scope: !19338, file: !19338, line: 290, type: !19339, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2648)
!19338 = !DIFile(filename: "./regs.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!19339 = !DISubroutineType(types: !19340)
!19340 = !{!7, !384, !7}
!19341 = !DILocalVariable(name: "mode", arg: 1, scope: !19337, file: !19338, line: 290, type: !384)
!19342 = !DILocation(line: 290, column: 35, scope: !19337)
!19343 = !DILocalVariable(name: "regno", arg: 2, scope: !19337, file: !19338, line: 290, type: !7)
!19344 = !DILocation(line: 290, column: 54, scope: !19337)
!19345 = !DILocation(line: 292, column: 10, scope: !19337)
!19346 = !DILocation(line: 292, column: 35, scope: !19337)
!19347 = !DILocation(line: 292, column: 18, scope: !19337)
!19348 = !DILocation(line: 292, column: 48, scope: !19337)
!19349 = !DILocation(line: 292, column: 16, scope: !19337)
!19350 = !DILocation(line: 292, column: 3, scope: !19337)
