; ModuleID = 'blender/source/blender/blenkernel/intern/armature.c'
source_filename = "blender/source/blender/blenkernel/intern/armature.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.Global = type { %struct.Main*, [1024 x i8], [1024 x i8], i8, i8, i8, %struct.ListBase, i8, i8, i8, i16, i16, i16, i8, i16, i32, i32, i8, i32, i32, [200 x i8] }
%struct.Main = type { %struct.Main*, %struct.Main*, [1024 x i8], i16, i16, i16, i16, i64, [16 x i8], i16, %struct.Library*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [256 x i8], %struct.EvaluationContext*, %struct.MainLock* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.EvaluationContext = type { i32 }
%struct.MainLock = type opaque
%struct.ListBase = type { i8*, i8* }
%struct.bArmature = type { %struct.ID, %struct.AnimData*, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.Bone*, %struct.EditBone*, i8*, i32, i32, i32, i32, i16, i16, i32, i32, i32, i16, i16, i16, i16, i32, i32, i32, i32, i32, i32 }
%struct.AnimData = type { %struct.bAction*, %struct.bAction*, %struct.AnimMapper*, %struct.ListBase, %struct.NlaStrip*, %struct.ListBase, %struct.ListBase, i32, i32, i16, i16, float }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.AnimMapper = type { %struct.AnimMapper*, %struct.AnimMapper*, %struct.bAction*, %struct.ListBase }
%struct.NlaStrip = type { %struct.NlaStrip*, %struct.NlaStrip*, %struct.ListBase, %struct.bAction*, %struct.AnimMapper*, %struct.ListBase, %struct.ListBase, [64 x i8], float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i16, i8*, i32, i32 }
%struct.Bone = type { %struct.Bone*, %struct.Bone*, %struct.IDProperty*, %struct.Bone*, %struct.ListBase, [64 x i8], float, [3 x float], [3 x float], [3 x [3 x float]], i32, [3 x float], [3 x float], [4 x [4 x float]], float, float, float, float, float, float, float, float, float, float, [3 x float], i32, i16, [1 x i16] }
%struct.EditBone = type opaque
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.SculptSession = type opaque
%struct.Ipo = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.GHash = type opaque
%struct.bGPdata = type opaque
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.Material = type opaque
%struct.BulletSoftBody = type opaque
%struct.PartDeflect = type opaque
%struct.SoftBody = type opaque
%struct.Group = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type { %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.Path* }
%struct.Path = type { %struct.PathPoint*, i32, float }
%struct.PathPoint = type { [4 x float], [4 x float], float, float }
%struct.DerivedMesh = type { %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, %struct.LinkNode*, %struct.GPUDrawObject*, i32, float, i32, i32, %struct.Material**, i8, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, float)*, void (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i32, %struct.MVert*)*, void (%struct.DerivedMesh*, i32, %struct.MEdge*)*, void (%struct.DerivedMesh*, i32, %struct.MFace*)*, %struct.MVert* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, %struct.MVert*)*, void (%struct.DerivedMesh*, %struct.MEdge*)*, void (%struct.DerivedMesh*, %struct.MFace*)*, void (%struct.DerivedMesh*, %struct.MLoop*)*, void (%struct.DerivedMesh*, %struct.MPoly*)*, %struct.MVert* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, %struct.CCGElem** (%struct.DerivedMesh*)*, %struct.DMGridAdjacency* (%struct.DerivedMesh*)*, i32* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, %struct.CCGKey*)*, %struct.DMFlagMat* (%struct.DerivedMesh*)*, i32** (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*, i16*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*)*, void (%struct.DerivedMesh*, void (i8*, i32, i32, float*, float*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*, i32)*, void (%struct.DerivedMesh*, float*, float*)*, void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, [3 x float]*)*, void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, i32, float*)*, %struct.MeshElemMap* (%struct.Object*, %struct.DerivedMesh*)*, %struct.PBVH* (%struct.Object*, %struct.DerivedMesh*)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i8, i8)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, [4 x float]*, i8, i32 (i32, i8*)*)*, void (%struct.DerivedMesh*, i32 (%struct.MTFace*, i8, i32)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i32, i8*)*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i32, i8*)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i32, i8*)*, i32 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, void (i8*, i32, float)*, i8*)*, void (%struct.DerivedMesh*, void (i8*, i32, i8*)*, i8 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*)* }
%struct.CustomData = type { %struct.CustomDataLayer*, [41 x i32], i32, i32, i32, %struct.BLI_mempool*, %struct.CustomDataExternal* }
%struct.CustomDataLayer = type { i32, i32, i32, i32, i32, i32, i32, i32, [64 x i8], i8* }
%struct.BLI_mempool = type opaque
%struct.CustomDataExternal = type { [1024 x i8] }
%struct.LinkNode = type opaque
%struct.GPUDrawObject = type opaque
%struct.MVert = type { [3 x float], [3 x i16], i8, i8 }
%struct.MEdge = type { i32, i32, i8, i8, i16 }
%struct.MFace = type { i32, i32, i32, i32, i16, i8, i8 }
%struct.MLoop = type { i32, i32 }
%struct.MPoly = type { i32, i32, i16, i8, i8 }
%struct.CCGElem = type opaque
%struct.DMGridAdjacency = type { [4 x i32], [4 x i32] }
%struct.CCGKey = type opaque
%struct.DMFlagMat = type { i16, i8 }
%struct.MeshElemMap = type opaque
%struct.PBVH = type opaque
%struct.MTFace = type { [4 x [2 x float]], %struct.Image*, i8, i8, i16, i16, i16 }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.anim = type opaque
%struct.RenderResult = type opaque
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RenderSlot = type { [64 x i8] }
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.World = type opaque
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.bNodeTree = type opaque
%struct.Editing = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type { %struct.MDeformWeight*, i32, i32 }
%struct.MDeformWeight = type { i32, float }
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.rctf = type { float, float, float, float }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.Text = type opaque
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type opaque
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.SK_Sketch = type { %struct.ListBase, %struct.ListBase, %struct.SK_Stroke*, %struct.SK_Stroke*, %struct.SK_Point, %struct.SK_Overdraw }
%struct.SK_Stroke = type { %struct.SK_Stroke*, %struct.SK_Stroke*, %struct.SK_Point*, i32, i32, i32 }
%struct.SK_Point = type { [3 x float], [2 x i16], [3 x float], float, i32, i32 }
%struct.SK_Overdraw = type { %struct.SK_Stroke*, i32, i32, i32 }
%struct.bPoseChannel = type { %struct.bPoseChannel*, %struct.bPoseChannel*, %struct.IDProperty*, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i8, i8, [6 x i8], %struct.Bone*, %struct.bPoseChannel*, %struct.bPoseChannel*, %struct.ListBase, %struct.ListBase, %struct.bMotionPath*, %struct.Object*, %struct.bPoseChannel*, [3 x float], [3 x float], [3 x float], [4 x float], [3 x float], float, i16, i16, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], float, float, float, i8* }
%struct.Mat4 = type { [4 x [4 x float]] }
%struct.bPoseChanDeform = type { %struct.Mat4*, %struct.DualQuat*, %struct.DualQuat* }
%struct.DualQuat = type { [4 x float], [4 x float], [4 x [4 x float]], float }
%struct.bDeformGroup = type { %struct.bDeformGroup*, %struct.bDeformGroup*, [64 x i8], i8, [7 x i8] }
%struct.Mesh = type { %struct.ID, %struct.AnimData*, %struct.BoundBox*, %struct.Ipo*, %struct.Key*, %struct.Material**, %struct.MSelect*, %struct.MPoly*, %struct.MTexPoly*, %struct.MLoop*, %struct.MLoopUV*, %struct.MLoopCol*, %struct.MFace*, %struct.MTFace*, %struct.TFace*, %struct.MVert*, %struct.MEdge*, %struct.MDeformVert*, %struct.MCol*, %struct.Mesh*, %struct.BMEditMesh*, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, [3 x float], [3 x float], [3 x float], i32, i16, i16, float, i32, i8, i8, i8, i8, i8, i8, i16, %struct.Multires* }
%struct.Key = type opaque
%struct.MSelect = type { i32, i32 }
%struct.MTexPoly = type { %struct.Image*, i8, i8, i16, i16, i16 }
%struct.MLoopUV = type { [2 x float], i32 }
%struct.MLoopCol = type { i8, i8, i8, i8 }
%struct.TFace = type { i8*, [4 x [2 x float]], [4 x i32], i8, i8, i16, i16, i16 }
%struct.MCol = type { i8, i8, i8, i8 }
%struct.BMEditMesh = type opaque
%struct.Multires = type { %struct.ListBase, %struct.MVert*, i8, i8, i8, i8, i8, i8, i8, i8, %struct.CustomData, %struct.CustomData, i16*, i8* }
%struct.Lattice = type { %struct.ID, %struct.AnimData*, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i8, i8, i32, float, float, float, float, float, float, %struct.BPoint*, %struct.Ipo*, %struct.Key*, %struct.MDeformVert*, [64 x i8], %struct.EditLatt* }
%struct.BPoint = type { [4 x float], float, float, i16, i16, float, float }
%struct.EditLatt = type { %struct.Lattice*, i32, [4 x i8] }
%struct.bConstraintOb = type { %struct.Scene*, %struct.Object*, %struct.bPoseChannel*, [4 x [4 x float]], [4 x [4 x float]], i16, i16 }
%struct.bConstraint = type { %struct.bConstraint*, %struct.bConstraint*, i8*, i16, i16, i8, i8, [64 x i8], i16, float, float, %struct.Ipo*, float, float }
%struct.bConstraintTypeInfo = type { i16, i16, [32 x i8], [32 x i8], void (%struct.bConstraint*)*, void (%struct.bConstraint*, void (%struct.bConstraint*, %struct.ID**, i8, i8*)*, i8*)*, void (%struct.bConstraint*, %struct.bConstraint*)*, void (i8*)*, i32 (%struct.bConstraint*, %struct.ListBase*)*, void (%struct.bConstraint*, %struct.ListBase*, i8)*, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.bConstraintTarget*, float)*, void (%struct.bConstraint*, %struct.bConstraintOb*, %struct.ListBase*)* }
%struct.bConstraintTarget = type { %struct.bConstraintTarget*, %struct.bConstraintTarget*, %struct.Object*, [64 x i8], [4 x [4 x float]], i16, i16, i16, i16 }
%struct.tSplineIK_Tree = type { %struct.tSplineIK_Tree*, %struct.tSplineIK_Tree*, i32, i8, i16, float*, %struct.bPoseChannel**, %struct.bPoseChannel*, %struct.bConstraint*, %struct.bSplineIKConstraint* }
%struct.bSplineIKConstraint = type { %struct.Object*, float*, i16, i16, i16, i16 }

@MEM_freeN = external dso_local global void (i8*)*, align 8
@G = external dso_local global %struct.Global, align 8
@.str = private unnamed_addr constant [4 x i8] c"Bot\00", align 1
@.str.1 = private unnamed_addr constant [4 x i8] c"Top\00", align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"Fr\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"Bk\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"R\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"L\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"%s.%s\00", align 1
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.7 = private unnamed_addr constant [10 x i8] c"dualquats\00", align 1
@.str.8 = private unnamed_addr constant [16 x i8] c"bPoseChanDeform\00", align 1
@.str.9 = private unnamed_addr constant [12 x i8] c"defnrToBone\00", align 1
@.str.10 = private unnamed_addr constant [13 x i8] c"defnrToIndex\00", align 1
@.str.11 = private unnamed_addr constant [9 x i8] c"new pose\00", align 1
@MEM_mallocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.12 = private unnamed_addr constant [14 x i8] c"BBone defmats\00", align 1
@.str.13 = private unnamed_addr constant [10 x i8] c"BBone dqs\00", align 1
@.str.14 = private unnamed_addr constant [73 x i8] c"failed to sync proxy armature because '%s' is missing pose channel '%s'\0A\00", align 1
@.str.15 = private unnamed_addr constant [18 x i8] c"Spline IK Binding\00", align 1
@MEM_dupallocN = external dso_local global i8* (i8*)*, align 8
@.str.16 = private unnamed_addr constant [14 x i8] c"SplineIK Tree\00", align 1
@.str.17 = private unnamed_addr constant [15 x i8] c"SplineIK Chain\00", align 1
@.str.18 = private unnamed_addr constant [18 x i8] c"Armature boundbox\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.bArmature* @BKE_armature_add(%struct.Main* %bmain, i8* %name) #0 !dbg !466 {
entry:
  %bmain.addr = alloca %struct.Main*, align 8
  %name.addr = alloca i8*, align 8
  %arm = alloca %struct.bArmature*, align 8
  store %struct.Main* %bmain, %struct.Main** %bmain.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain.addr, metadata !545, metadata !DIExpression()), !dbg !546
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !547, metadata !DIExpression()), !dbg !548
  call void @llvm.dbg.declare(metadata %struct.bArmature** %arm, metadata !549, metadata !DIExpression()), !dbg !550
  %0 = load %struct.Main*, %struct.Main** %bmain.addr, align 8, !dbg !551
  %1 = load i8*, i8** %name.addr, align 8, !dbg !552
  %call = call i8* @BKE_libblock_alloc(%struct.Main* %0, i16 signext 21057, i8* %1), !dbg !553
  %2 = bitcast i8* %call to %struct.bArmature*, !dbg !553
  store %struct.bArmature* %2, %struct.bArmature** %arm, align 8, !dbg !554
  %3 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !555
  %deformflag = getelementptr inbounds %struct.bArmature, %struct.bArmature* %3, i32 0, i32 12, !dbg !556
  store i16 3, i16* %deformflag, align 8, !dbg !557
  %4 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !558
  %flag = getelementptr inbounds %struct.bArmature, %struct.bArmature* %4, i32 0, i32 8, !dbg !559
  store i32 2048, i32* %flag, align 8, !dbg !560
  %5 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !561
  %layer = getelementptr inbounds %struct.bArmature, %struct.bArmature* %5, i32 0, i32 15, !dbg !562
  store i32 1, i32* %layer, align 8, !dbg !563
  %6 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !564
  ret %struct.bArmature* %6, !dbg !565
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i8* @BKE_libblock_alloc(%struct.Main*, i16 signext, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.bArmature* @BKE_armature_from_object(%struct.Object* %ob) #0 !dbg !566 {
entry:
  %retval = alloca %struct.bArmature*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !2033, metadata !DIExpression()), !dbg !2034
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2035
  %type = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 3, !dbg !2037
  %1 = load i16, i16* %type, align 8, !dbg !2037
  %conv = sext i16 %1 to i32, !dbg !2035
  %cmp = icmp eq i32 %conv, 25, !dbg !2038
  br i1 %cmp, label %if.then, label %if.end, !dbg !2039

if.then:                                          ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !2040
  %data = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 19, !dbg !2041
  %3 = load i8*, i8** %data, align 8, !dbg !2041
  %4 = bitcast i8* %3 to %struct.bArmature*, !dbg !2042
  store %struct.bArmature* %4, %struct.bArmature** %retval, align 8, !dbg !2043
  br label %return, !dbg !2043

if.end:                                           ; preds = %entry
  store %struct.bArmature* null, %struct.bArmature** %retval, align 8, !dbg !2044
  br label %return, !dbg !2044

return:                                           ; preds = %if.end, %if.then
  %5 = load %struct.bArmature*, %struct.bArmature** %retval, align 8, !dbg !2045
  ret %struct.bArmature* %5, !dbg !2045
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_armature_bonelist_free(%struct.ListBase* %lb) #0 !dbg !2046 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  %bone = alloca %struct.Bone*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !2049, metadata !DIExpression()), !dbg !2050
  call void @llvm.dbg.declare(metadata %struct.Bone** %bone, metadata !2051, metadata !DIExpression()), !dbg !2052
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !2053
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !2055
  %1 = load i8*, i8** %first, align 8, !dbg !2055
  %2 = bitcast i8* %1 to %struct.Bone*, !dbg !2053
  store %struct.Bone* %2, %struct.Bone** %bone, align 8, !dbg !2056
  br label %for.cond, !dbg !2057

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !2058
  %tobool = icmp ne %struct.Bone* %3, null, !dbg !2060
  br i1 %tobool, label %for.body, label %for.end, !dbg !2060

for.body:                                         ; preds = %for.cond
  %4 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !2061
  %prop = getelementptr inbounds %struct.Bone, %struct.Bone* %4, i32 0, i32 2, !dbg !2064
  %5 = load %struct.IDProperty*, %struct.IDProperty** %prop, align 8, !dbg !2064
  %tobool1 = icmp ne %struct.IDProperty* %5, null, !dbg !2061
  br i1 %tobool1, label %if.then, label %if.end, !dbg !2065

if.then:                                          ; preds = %for.body
  %6 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !2066
  %prop2 = getelementptr inbounds %struct.Bone, %struct.Bone* %6, i32 0, i32 2, !dbg !2068
  %7 = load %struct.IDProperty*, %struct.IDProperty** %prop2, align 8, !dbg !2068
  call void @IDP_FreeProperty(%struct.IDProperty* %7), !dbg !2069
  %8 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2070
  %9 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !2071
  %prop3 = getelementptr inbounds %struct.Bone, %struct.Bone* %9, i32 0, i32 2, !dbg !2072
  %10 = load %struct.IDProperty*, %struct.IDProperty** %prop3, align 8, !dbg !2072
  %11 = bitcast %struct.IDProperty* %10 to i8*, !dbg !2071
  call void %8(i8* %11), !dbg !2070
  br label %if.end, !dbg !2073

if.end:                                           ; preds = %if.then, %for.body
  %12 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !2074
  %childbase = getelementptr inbounds %struct.Bone, %struct.Bone* %12, i32 0, i32 4, !dbg !2075
  call void @BKE_armature_bonelist_free(%struct.ListBase* %childbase), !dbg !2076
  br label %for.inc, !dbg !2077

for.inc:                                          ; preds = %if.end
  %13 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !2078
  %next = getelementptr inbounds %struct.Bone, %struct.Bone* %13, i32 0, i32 0, !dbg !2079
  %14 = load %struct.Bone*, %struct.Bone** %next, align 8, !dbg !2079
  store %struct.Bone* %14, %struct.Bone** %bone, align 8, !dbg !2080
  br label %for.cond, !dbg !2081, !llvm.loop !2082

for.end:                                          ; preds = %for.cond
  %15 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !2084
  call void @BLI_freelistN(%struct.ListBase* %15), !dbg !2085
  ret void, !dbg !2086
}

declare dso_local void @IDP_FreeProperty(%struct.IDProperty*) #2

declare dso_local void @BLI_freelistN(%struct.ListBase*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_armature_free(%struct.bArmature* %arm) #0 !dbg !2087 {
entry:
  %arm.addr = alloca %struct.bArmature*, align 8
  store %struct.bArmature* %arm, %struct.bArmature** %arm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bArmature** %arm.addr, metadata !2090, metadata !DIExpression()), !dbg !2091
  %0 = load %struct.bArmature*, %struct.bArmature** %arm.addr, align 8, !dbg !2092
  %tobool = icmp ne %struct.bArmature* %0, null, !dbg !2092
  br i1 %tobool, label %if.then, label %if.end15, !dbg !2094

if.then:                                          ; preds = %entry
  %1 = load %struct.bArmature*, %struct.bArmature** %arm.addr, align 8, !dbg !2095
  %bonebase = getelementptr inbounds %struct.bArmature, %struct.bArmature* %1, i32 0, i32 2, !dbg !2097
  call void @BKE_armature_bonelist_free(%struct.ListBase* %bonebase), !dbg !2098
  %2 = load %struct.bArmature*, %struct.bArmature** %arm.addr, align 8, !dbg !2099
  %edbo = getelementptr inbounds %struct.bArmature, %struct.bArmature* %2, i32 0, i32 4, !dbg !2101
  %3 = load %struct.ListBase*, %struct.ListBase** %edbo, align 8, !dbg !2101
  %tobool1 = icmp ne %struct.ListBase* %3, null, !dbg !2099
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !2102

if.then2:                                         ; preds = %if.then
  %4 = load %struct.bArmature*, %struct.bArmature** %arm.addr, align 8, !dbg !2103
  %edbo3 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %4, i32 0, i32 4, !dbg !2105
  %5 = load %struct.ListBase*, %struct.ListBase** %edbo3, align 8, !dbg !2105
  call void @BLI_freelistN(%struct.ListBase* %5), !dbg !2106
  %6 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2107
  %7 = load %struct.bArmature*, %struct.bArmature** %arm.addr, align 8, !dbg !2108
  %edbo4 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %7, i32 0, i32 4, !dbg !2109
  %8 = load %struct.ListBase*, %struct.ListBase** %edbo4, align 8, !dbg !2109
  %9 = bitcast %struct.ListBase* %8 to i8*, !dbg !2108
  call void %6(i8* %9), !dbg !2107
  %10 = load %struct.bArmature*, %struct.bArmature** %arm.addr, align 8, !dbg !2110
  %edbo5 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %10, i32 0, i32 4, !dbg !2111
  store %struct.ListBase* null, %struct.ListBase** %edbo5, align 8, !dbg !2112
  br label %if.end, !dbg !2113

if.end:                                           ; preds = %if.then2, %if.then
  %11 = load %struct.bArmature*, %struct.bArmature** %arm.addr, align 8, !dbg !2114
  %sketch = getelementptr inbounds %struct.bArmature, %struct.bArmature* %11, i32 0, i32 7, !dbg !2116
  %12 = load i8*, i8** %sketch, align 8, !dbg !2116
  %tobool6 = icmp ne i8* %12, null, !dbg !2114
  br i1 %tobool6, label %if.then7, label %if.end10, !dbg !2117

if.then7:                                         ; preds = %if.end
  %13 = load %struct.bArmature*, %struct.bArmature** %arm.addr, align 8, !dbg !2118
  %sketch8 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %13, i32 0, i32 7, !dbg !2120
  %14 = load i8*, i8** %sketch8, align 8, !dbg !2120
  %15 = bitcast i8* %14 to %struct.SK_Sketch*, !dbg !2118
  call void @freeSketch(%struct.SK_Sketch* %15), !dbg !2121
  %16 = load %struct.bArmature*, %struct.bArmature** %arm.addr, align 8, !dbg !2122
  %sketch9 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %16, i32 0, i32 7, !dbg !2123
  store i8* null, i8** %sketch9, align 8, !dbg !2124
  br label %if.end10, !dbg !2125

if.end10:                                         ; preds = %if.then7, %if.end
  %17 = load %struct.bArmature*, %struct.bArmature** %arm.addr, align 8, !dbg !2126
  %adt = getelementptr inbounds %struct.bArmature, %struct.bArmature* %17, i32 0, i32 1, !dbg !2128
  %18 = load %struct.AnimData*, %struct.AnimData** %adt, align 8, !dbg !2128
  %tobool11 = icmp ne %struct.AnimData* %18, null, !dbg !2126
  br i1 %tobool11, label %if.then12, label %if.end14, !dbg !2129

if.then12:                                        ; preds = %if.end10
  %19 = load %struct.bArmature*, %struct.bArmature** %arm.addr, align 8, !dbg !2130
  %id = getelementptr inbounds %struct.bArmature, %struct.bArmature* %19, i32 0, i32 0, !dbg !2132
  call void @BKE_free_animdata(%struct.ID* %id), !dbg !2133
  %20 = load %struct.bArmature*, %struct.bArmature** %arm.addr, align 8, !dbg !2134
  %adt13 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %20, i32 0, i32 1, !dbg !2135
  store %struct.AnimData* null, %struct.AnimData** %adt13, align 8, !dbg !2136
  br label %if.end14, !dbg !2137

if.end14:                                         ; preds = %if.then12, %if.end10
  br label %if.end15, !dbg !2138

if.end15:                                         ; preds = %if.end14, %entry
  ret void, !dbg !2139
}

declare dso_local void @freeSketch(%struct.SK_Sketch*) #2

declare dso_local void @BKE_free_animdata(%struct.ID*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_armature_make_local(%struct.bArmature* %arm) #0 !dbg !2140 {
entry:
  %arm.addr = alloca %struct.bArmature*, align 8
  %bmain = alloca %struct.Main*, align 8
  %is_local = alloca i8, align 1
  %is_lib = alloca i8, align 1
  %ob = alloca %struct.Object*, align 8
  %arm_new = alloca %struct.bArmature*, align 8
  store %struct.bArmature* %arm, %struct.bArmature** %arm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bArmature** %arm.addr, metadata !2141, metadata !DIExpression()), !dbg !2142
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain, metadata !2143, metadata !DIExpression()), !dbg !2144
  %0 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !2145
  store %struct.Main* %0, %struct.Main** %bmain, align 8, !dbg !2144
  call void @llvm.dbg.declare(metadata i8* %is_local, metadata !2146, metadata !DIExpression()), !dbg !2147
  store i8 0, i8* %is_local, align 1, !dbg !2147
  call void @llvm.dbg.declare(metadata i8* %is_lib, metadata !2148, metadata !DIExpression()), !dbg !2149
  store i8 0, i8* %is_lib, align 1, !dbg !2149
  call void @llvm.dbg.declare(metadata %struct.Object** %ob, metadata !2150, metadata !DIExpression()), !dbg !2151
  %1 = load %struct.bArmature*, %struct.bArmature** %arm.addr, align 8, !dbg !2152
  %id = getelementptr inbounds %struct.bArmature, %struct.bArmature* %1, i32 0, i32 0, !dbg !2154
  %lib = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 3, !dbg !2155
  %2 = load %struct.Library*, %struct.Library** %lib, align 8, !dbg !2155
  %cmp = icmp eq %struct.Library* %2, null, !dbg !2156
  br i1 %cmp, label %if.then, label %if.end, !dbg !2157

if.then:                                          ; preds = %entry
  br label %if.end66, !dbg !2158

if.end:                                           ; preds = %entry
  %3 = load %struct.bArmature*, %struct.bArmature** %arm.addr, align 8, !dbg !2159
  %id1 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %3, i32 0, i32 0, !dbg !2161
  %us = getelementptr inbounds %struct.ID, %struct.ID* %id1, i32 0, i32 6, !dbg !2162
  %4 = load i32, i32* %us, align 4, !dbg !2162
  %cmp2 = icmp eq i32 %4, 1, !dbg !2163
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !2164

if.then3:                                         ; preds = %if.end
  %5 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !2165
  %6 = load %struct.bArmature*, %struct.bArmature** %arm.addr, align 8, !dbg !2167
  %id4 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %6, i32 0, i32 0, !dbg !2168
  call void @id_clear_lib_data(%struct.Main* %5, %struct.ID* %id4), !dbg !2169
  br label %if.end66, !dbg !2170

if.end5:                                          ; preds = %if.end
  %7 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !2171
  %object = getelementptr inbounds %struct.Main, %struct.Main* %7, i32 0, i32 13, !dbg !2173
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %object, i32 0, i32 0, !dbg !2174
  %8 = load i8*, i8** %first, align 8, !dbg !2174
  %9 = bitcast i8* %8 to %struct.Object*, !dbg !2171
  store %struct.Object* %9, %struct.Object** %ob, align 8, !dbg !2175
  br label %for.cond, !dbg !2176

for.cond:                                         ; preds = %for.inc, %if.end5
  %10 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2177
  %tobool = icmp ne %struct.Object* %10, null, !dbg !2177
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !2179

land.rhs:                                         ; preds = %for.cond
  %11 = load i8, i8* %is_lib, align 1, !dbg !2180
  %conv = zext i8 %11 to i32, !dbg !2180
  %cmp6 = icmp eq i32 0, %conv, !dbg !2180
  br i1 %cmp6, label %lor.end, label %lor.rhs, !dbg !2180

lor.rhs:                                          ; preds = %land.rhs
  %12 = load i8, i8* %is_local, align 1, !dbg !2180
  %conv8 = zext i8 %12 to i32, !dbg !2180
  %cmp9 = icmp eq i32 0, %conv8, !dbg !2180
  br label %lor.end, !dbg !2180

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %13 = phi i1 [ true, %land.rhs ], [ %cmp9, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %for.cond
  %14 = phi i1 [ false, %for.cond ], [ %13, %lor.end ], !dbg !2181
  br i1 %14, label %for.body, label %for.end, !dbg !2182

for.body:                                         ; preds = %land.end
  %15 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2183
  %data = getelementptr inbounds %struct.Object, %struct.Object* %15, i32 0, i32 19, !dbg !2186
  %16 = load i8*, i8** %data, align 8, !dbg !2186
  %17 = load %struct.bArmature*, %struct.bArmature** %arm.addr, align 8, !dbg !2187
  %18 = bitcast %struct.bArmature* %17 to i8*, !dbg !2187
  %cmp11 = icmp eq i8* %16, %18, !dbg !2188
  br i1 %cmp11, label %if.then13, label %if.end19, !dbg !2189

if.then13:                                        ; preds = %for.body
  %19 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2190
  %id14 = getelementptr inbounds %struct.Object, %struct.Object* %19, i32 0, i32 0, !dbg !2193
  %lib15 = getelementptr inbounds %struct.ID, %struct.ID* %id14, i32 0, i32 3, !dbg !2194
  %20 = load %struct.Library*, %struct.Library** %lib15, align 8, !dbg !2194
  %tobool16 = icmp ne %struct.Library* %20, null, !dbg !2190
  br i1 %tobool16, label %if.then17, label %if.else, !dbg !2195

if.then17:                                        ; preds = %if.then13
  store i8 1, i8* %is_lib, align 1, !dbg !2196
  br label %if.end18, !dbg !2197

if.else:                                          ; preds = %if.then13
  store i8 1, i8* %is_local, align 1, !dbg !2198
  br label %if.end18

if.end18:                                         ; preds = %if.else, %if.then17
  br label %if.end19, !dbg !2199

if.end19:                                         ; preds = %if.end18, %for.body
  br label %for.inc, !dbg !2200

for.inc:                                          ; preds = %if.end19
  %21 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2201
  %id20 = getelementptr inbounds %struct.Object, %struct.Object* %21, i32 0, i32 0, !dbg !2202
  %next = getelementptr inbounds %struct.ID, %struct.ID* %id20, i32 0, i32 0, !dbg !2203
  %22 = load i8*, i8** %next, align 8, !dbg !2203
  %23 = bitcast i8* %22 to %struct.Object*, !dbg !2201
  store %struct.Object* %23, %struct.Object** %ob, align 8, !dbg !2204
  br label %for.cond, !dbg !2205, !llvm.loop !2206

for.end:                                          ; preds = %land.end
  %24 = load i8, i8* %is_local, align 1, !dbg !2208
  %conv21 = zext i8 %24 to i32, !dbg !2208
  %tobool22 = icmp ne i32 %conv21, 0, !dbg !2208
  br i1 %tobool22, label %land.lhs.true, label %if.else28, !dbg !2210

land.lhs.true:                                    ; preds = %for.end
  %25 = load i8, i8* %is_lib, align 1, !dbg !2211
  %conv23 = zext i8 %25 to i32, !dbg !2211
  %cmp24 = icmp eq i32 %conv23, 0, !dbg !2212
  br i1 %cmp24, label %if.then26, label %if.else28, !dbg !2213

if.then26:                                        ; preds = %land.lhs.true
  %26 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !2214
  %27 = load %struct.bArmature*, %struct.bArmature** %arm.addr, align 8, !dbg !2216
  %id27 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %27, i32 0, i32 0, !dbg !2217
  call void @id_clear_lib_data(%struct.Main* %26, %struct.ID* %id27), !dbg !2218
  br label %if.end66, !dbg !2219

if.else28:                                        ; preds = %land.lhs.true, %for.end
  %28 = load i8, i8* %is_local, align 1, !dbg !2220
  %conv29 = zext i8 %28 to i32, !dbg !2220
  %tobool30 = icmp ne i32 %conv29, 0, !dbg !2220
  br i1 %tobool30, label %land.lhs.true31, label %if.end65, !dbg !2222

land.lhs.true31:                                  ; preds = %if.else28
  %29 = load i8, i8* %is_lib, align 1, !dbg !2223
  %conv32 = zext i8 %29 to i32, !dbg !2223
  %tobool33 = icmp ne i32 %conv32, 0, !dbg !2223
  br i1 %tobool33, label %if.then34, label %if.end65, !dbg !2224

if.then34:                                        ; preds = %land.lhs.true31
  call void @llvm.dbg.declare(metadata %struct.bArmature** %arm_new, metadata !2225, metadata !DIExpression()), !dbg !2227
  %30 = load %struct.bArmature*, %struct.bArmature** %arm.addr, align 8, !dbg !2228
  %call = call %struct.bArmature* @BKE_armature_copy(%struct.bArmature* %30), !dbg !2229
  store %struct.bArmature* %call, %struct.bArmature** %arm_new, align 8, !dbg !2227
  %31 = load %struct.bArmature*, %struct.bArmature** %arm_new, align 8, !dbg !2230
  %id35 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %31, i32 0, i32 0, !dbg !2231
  %us36 = getelementptr inbounds %struct.ID, %struct.ID* %id35, i32 0, i32 6, !dbg !2232
  store i32 0, i32* %us36, align 4, !dbg !2233
  %32 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !2234
  %33 = load %struct.bArmature*, %struct.bArmature** %arm.addr, align 8, !dbg !2235
  %id37 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %33, i32 0, i32 0, !dbg !2236
  %lib38 = getelementptr inbounds %struct.ID, %struct.ID* %id37, i32 0, i32 3, !dbg !2237
  %34 = load %struct.Library*, %struct.Library** %lib38, align 8, !dbg !2237
  %35 = load %struct.bArmature*, %struct.bArmature** %arm_new, align 8, !dbg !2238
  %id39 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %35, i32 0, i32 0, !dbg !2239
  call void @BKE_id_lib_local_paths(%struct.Main* %32, %struct.Library* %34, %struct.ID* %id39), !dbg !2240
  %36 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !2241
  %object40 = getelementptr inbounds %struct.Main, %struct.Main* %36, i32 0, i32 13, !dbg !2243
  %first41 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %object40, i32 0, i32 0, !dbg !2244
  %37 = load i8*, i8** %first41, align 8, !dbg !2244
  %38 = bitcast i8* %37 to %struct.Object*, !dbg !2241
  store %struct.Object* %38, %struct.Object** %ob, align 8, !dbg !2245
  br label %for.cond42, !dbg !2246

for.cond42:                                       ; preds = %for.inc61, %if.then34
  %39 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2247
  %tobool43 = icmp ne %struct.Object* %39, null, !dbg !2249
  br i1 %tobool43, label %for.body44, label %for.end64, !dbg !2249

for.body44:                                       ; preds = %for.cond42
  %40 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2250
  %data45 = getelementptr inbounds %struct.Object, %struct.Object* %40, i32 0, i32 19, !dbg !2253
  %41 = load i8*, i8** %data45, align 8, !dbg !2253
  %42 = load %struct.bArmature*, %struct.bArmature** %arm.addr, align 8, !dbg !2254
  %43 = bitcast %struct.bArmature* %42 to i8*, !dbg !2254
  %cmp46 = icmp eq i8* %41, %43, !dbg !2255
  br i1 %cmp46, label %if.then48, label %if.end60, !dbg !2256

if.then48:                                        ; preds = %for.body44
  %44 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2257
  %id49 = getelementptr inbounds %struct.Object, %struct.Object* %44, i32 0, i32 0, !dbg !2260
  %lib50 = getelementptr inbounds %struct.ID, %struct.ID* %id49, i32 0, i32 3, !dbg !2261
  %45 = load %struct.Library*, %struct.Library** %lib50, align 8, !dbg !2261
  %cmp51 = icmp eq %struct.Library* %45, null, !dbg !2262
  br i1 %cmp51, label %if.then53, label %if.end59, !dbg !2263

if.then53:                                        ; preds = %if.then48
  %46 = load %struct.bArmature*, %struct.bArmature** %arm_new, align 8, !dbg !2264
  %47 = bitcast %struct.bArmature* %46 to i8*, !dbg !2264
  %48 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2266
  %data54 = getelementptr inbounds %struct.Object, %struct.Object* %48, i32 0, i32 19, !dbg !2267
  store i8* %47, i8** %data54, align 8, !dbg !2268
  %49 = load %struct.bArmature*, %struct.bArmature** %arm_new, align 8, !dbg !2269
  %id55 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %49, i32 0, i32 0, !dbg !2270
  %us56 = getelementptr inbounds %struct.ID, %struct.ID* %id55, i32 0, i32 6, !dbg !2271
  %50 = load i32, i32* %us56, align 4, !dbg !2272
  %inc = add nsw i32 %50, 1, !dbg !2272
  store i32 %inc, i32* %us56, align 4, !dbg !2272
  %51 = load %struct.bArmature*, %struct.bArmature** %arm.addr, align 8, !dbg !2273
  %id57 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %51, i32 0, i32 0, !dbg !2274
  %us58 = getelementptr inbounds %struct.ID, %struct.ID* %id57, i32 0, i32 6, !dbg !2275
  %52 = load i32, i32* %us58, align 4, !dbg !2276
  %dec = add nsw i32 %52, -1, !dbg !2276
  store i32 %dec, i32* %us58, align 4, !dbg !2276
  br label %if.end59, !dbg !2277

if.end59:                                         ; preds = %if.then53, %if.then48
  br label %if.end60, !dbg !2278

if.end60:                                         ; preds = %if.end59, %for.body44
  br label %for.inc61, !dbg !2279

for.inc61:                                        ; preds = %if.end60
  %53 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !2280
  %id62 = getelementptr inbounds %struct.Object, %struct.Object* %53, i32 0, i32 0, !dbg !2281
  %next63 = getelementptr inbounds %struct.ID, %struct.ID* %id62, i32 0, i32 0, !dbg !2282
  %54 = load i8*, i8** %next63, align 8, !dbg !2282
  %55 = bitcast i8* %54 to %struct.Object*, !dbg !2280
  store %struct.Object* %55, %struct.Object** %ob, align 8, !dbg !2283
  br label %for.cond42, !dbg !2284, !llvm.loop !2285

for.end64:                                        ; preds = %for.cond42
  br label %if.end65, !dbg !2287

if.end65:                                         ; preds = %for.end64, %land.lhs.true31, %if.else28
  br label %if.end66

if.end66:                                         ; preds = %if.then, %if.then3, %if.end65, %if.then26
  ret void, !dbg !2288
}

declare dso_local void @id_clear_lib_data(%struct.Main*, %struct.ID*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.bArmature* @BKE_armature_copy(%struct.bArmature* %arm) #0 !dbg !2289 {
entry:
  %arm.addr = alloca %struct.bArmature*, align 8
  %newArm = alloca %struct.bArmature*, align 8
  %oldBone = alloca %struct.Bone*, align 8
  %newBone = alloca %struct.Bone*, align 8
  %newActBone = alloca %struct.Bone*, align 8
  store %struct.bArmature* %arm, %struct.bArmature** %arm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bArmature** %arm.addr, metadata !2292, metadata !DIExpression()), !dbg !2293
  call void @llvm.dbg.declare(metadata %struct.bArmature** %newArm, metadata !2294, metadata !DIExpression()), !dbg !2295
  call void @llvm.dbg.declare(metadata %struct.Bone** %oldBone, metadata !2296, metadata !DIExpression()), !dbg !2297
  call void @llvm.dbg.declare(metadata %struct.Bone** %newBone, metadata !2298, metadata !DIExpression()), !dbg !2299
  call void @llvm.dbg.declare(metadata %struct.Bone** %newActBone, metadata !2300, metadata !DIExpression()), !dbg !2301
  store %struct.Bone* null, %struct.Bone** %newActBone, align 8, !dbg !2301
  %0 = load %struct.bArmature*, %struct.bArmature** %arm.addr, align 8, !dbg !2302
  %id = getelementptr inbounds %struct.bArmature, %struct.bArmature* %0, i32 0, i32 0, !dbg !2303
  %call = call i8* @BKE_libblock_copy(%struct.ID* %id), !dbg !2304
  %1 = bitcast i8* %call to %struct.bArmature*, !dbg !2304
  store %struct.bArmature* %1, %struct.bArmature** %newArm, align 8, !dbg !2305
  %2 = load %struct.bArmature*, %struct.bArmature** %newArm, align 8, !dbg !2306
  %bonebase = getelementptr inbounds %struct.bArmature, %struct.bArmature* %2, i32 0, i32 2, !dbg !2307
  %3 = load %struct.bArmature*, %struct.bArmature** %arm.addr, align 8, !dbg !2308
  %bonebase1 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %3, i32 0, i32 2, !dbg !2309
  call void @BLI_duplicatelist(%struct.ListBase* %bonebase, %struct.ListBase* %bonebase1), !dbg !2310
  %4 = load %struct.bArmature*, %struct.bArmature** %newArm, align 8, !dbg !2311
  %bonebase2 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %4, i32 0, i32 2, !dbg !2312
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %bonebase2, i32 0, i32 0, !dbg !2313
  %5 = load i8*, i8** %first, align 8, !dbg !2313
  %6 = bitcast i8* %5 to %struct.Bone*, !dbg !2311
  store %struct.Bone* %6, %struct.Bone** %newBone, align 8, !dbg !2314
  %7 = load %struct.bArmature*, %struct.bArmature** %arm.addr, align 8, !dbg !2315
  %bonebase3 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %7, i32 0, i32 2, !dbg !2317
  %first4 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %bonebase3, i32 0, i32 0, !dbg !2318
  %8 = load i8*, i8** %first4, align 8, !dbg !2318
  %9 = bitcast i8* %8 to %struct.Bone*, !dbg !2315
  store %struct.Bone* %9, %struct.Bone** %oldBone, align 8, !dbg !2319
  br label %for.cond, !dbg !2320

for.cond:                                         ; preds = %for.inc, %entry
  %10 = load %struct.Bone*, %struct.Bone** %oldBone, align 8, !dbg !2321
  %tobool = icmp ne %struct.Bone* %10, null, !dbg !2323
  br i1 %tobool, label %for.body, label %for.end, !dbg !2323

for.body:                                         ; preds = %for.cond
  %11 = load %struct.Bone*, %struct.Bone** %newBone, align 8, !dbg !2324
  %parent = getelementptr inbounds %struct.Bone, %struct.Bone* %11, i32 0, i32 3, !dbg !2326
  store %struct.Bone* null, %struct.Bone** %parent, align 8, !dbg !2327
  %12 = load %struct.Bone*, %struct.Bone** %newBone, align 8, !dbg !2328
  %13 = load %struct.Bone*, %struct.Bone** %oldBone, align 8, !dbg !2329
  %14 = load %struct.bArmature*, %struct.bArmature** %arm.addr, align 8, !dbg !2330
  %act_bone = getelementptr inbounds %struct.bArmature, %struct.bArmature* %14, i32 0, i32 5, !dbg !2331
  %15 = load %struct.Bone*, %struct.Bone** %act_bone, align 8, !dbg !2331
  call void @copy_bonechildren(%struct.Bone* %12, %struct.Bone* %13, %struct.Bone* %15, %struct.Bone** %newActBone), !dbg !2332
  %16 = load %struct.Bone*, %struct.Bone** %newBone, align 8, !dbg !2333
  %next = getelementptr inbounds %struct.Bone, %struct.Bone* %16, i32 0, i32 0, !dbg !2334
  %17 = load %struct.Bone*, %struct.Bone** %next, align 8, !dbg !2334
  store %struct.Bone* %17, %struct.Bone** %newBone, align 8, !dbg !2335
  br label %for.inc, !dbg !2336

for.inc:                                          ; preds = %for.body
  %18 = load %struct.Bone*, %struct.Bone** %oldBone, align 8, !dbg !2337
  %next5 = getelementptr inbounds %struct.Bone, %struct.Bone* %18, i32 0, i32 0, !dbg !2338
  %19 = load %struct.Bone*, %struct.Bone** %next5, align 8, !dbg !2338
  store %struct.Bone* %19, %struct.Bone** %oldBone, align 8, !dbg !2339
  br label %for.cond, !dbg !2340, !llvm.loop !2341

for.end:                                          ; preds = %for.cond
  %20 = load %struct.Bone*, %struct.Bone** %newActBone, align 8, !dbg !2343
  %21 = load %struct.bArmature*, %struct.bArmature** %newArm, align 8, !dbg !2344
  %act_bone6 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %21, i32 0, i32 5, !dbg !2345
  store %struct.Bone* %20, %struct.Bone** %act_bone6, align 8, !dbg !2346
  %22 = load %struct.bArmature*, %struct.bArmature** %newArm, align 8, !dbg !2347
  %edbo = getelementptr inbounds %struct.bArmature, %struct.bArmature* %22, i32 0, i32 4, !dbg !2348
  store %struct.ListBase* null, %struct.ListBase** %edbo, align 8, !dbg !2349
  %23 = load %struct.bArmature*, %struct.bArmature** %newArm, align 8, !dbg !2350
  %act_edbone = getelementptr inbounds %struct.bArmature, %struct.bArmature* %23, i32 0, i32 6, !dbg !2351
  store %struct.EditBone* null, %struct.EditBone** %act_edbone, align 8, !dbg !2352
  %24 = load %struct.bArmature*, %struct.bArmature** %newArm, align 8, !dbg !2353
  %sketch = getelementptr inbounds %struct.bArmature, %struct.bArmature* %24, i32 0, i32 7, !dbg !2354
  store i8* null, i8** %sketch, align 8, !dbg !2355
  %25 = load %struct.bArmature*, %struct.bArmature** %newArm, align 8, !dbg !2356
  ret %struct.bArmature* %25, !dbg !2357
}

declare dso_local void @BKE_id_lib_local_paths(%struct.Main*, %struct.Library*, %struct.ID*) #2

declare dso_local i8* @BKE_libblock_copy(%struct.ID*) #2

declare dso_local void @BLI_duplicatelist(%struct.ListBase*, %struct.ListBase*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @copy_bonechildren(%struct.Bone* %newBone, %struct.Bone* %oldBone, %struct.Bone* %actBone, %struct.Bone** %newActBone) #0 !dbg !2358 {
entry:
  %newBone.addr = alloca %struct.Bone*, align 8
  %oldBone.addr = alloca %struct.Bone*, align 8
  %actBone.addr = alloca %struct.Bone*, align 8
  %newActBone.addr = alloca %struct.Bone**, align 8
  %curBone = alloca %struct.Bone*, align 8
  %newChildBone = alloca %struct.Bone*, align 8
  store %struct.Bone* %newBone, %struct.Bone** %newBone.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Bone** %newBone.addr, metadata !2362, metadata !DIExpression()), !dbg !2363
  store %struct.Bone* %oldBone, %struct.Bone** %oldBone.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Bone** %oldBone.addr, metadata !2364, metadata !DIExpression()), !dbg !2365
  store %struct.Bone* %actBone, %struct.Bone** %actBone.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Bone** %actBone.addr, metadata !2366, metadata !DIExpression()), !dbg !2367
  store %struct.Bone** %newActBone, %struct.Bone*** %newActBone.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Bone*** %newActBone.addr, metadata !2368, metadata !DIExpression()), !dbg !2369
  call void @llvm.dbg.declare(metadata %struct.Bone** %curBone, metadata !2370, metadata !DIExpression()), !dbg !2371
  call void @llvm.dbg.declare(metadata %struct.Bone** %newChildBone, metadata !2372, metadata !DIExpression()), !dbg !2373
  %0 = load %struct.Bone*, %struct.Bone** %oldBone.addr, align 8, !dbg !2374
  %1 = load %struct.Bone*, %struct.Bone** %actBone.addr, align 8, !dbg !2376
  %cmp = icmp eq %struct.Bone* %0, %1, !dbg !2377
  br i1 %cmp, label %if.then, label %if.end, !dbg !2378

if.then:                                          ; preds = %entry
  %2 = load %struct.Bone*, %struct.Bone** %newBone.addr, align 8, !dbg !2379
  %3 = load %struct.Bone**, %struct.Bone*** %newActBone.addr, align 8, !dbg !2380
  store %struct.Bone* %2, %struct.Bone** %3, align 8, !dbg !2381
  br label %if.end, !dbg !2382

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.Bone*, %struct.Bone** %oldBone.addr, align 8, !dbg !2383
  %prop = getelementptr inbounds %struct.Bone, %struct.Bone* %4, i32 0, i32 2, !dbg !2385
  %5 = load %struct.IDProperty*, %struct.IDProperty** %prop, align 8, !dbg !2385
  %tobool = icmp ne %struct.IDProperty* %5, null, !dbg !2383
  br i1 %tobool, label %if.then1, label %if.end4, !dbg !2386

if.then1:                                         ; preds = %if.end
  %6 = load %struct.Bone*, %struct.Bone** %oldBone.addr, align 8, !dbg !2387
  %prop2 = getelementptr inbounds %struct.Bone, %struct.Bone* %6, i32 0, i32 2, !dbg !2388
  %7 = load %struct.IDProperty*, %struct.IDProperty** %prop2, align 8, !dbg !2388
  %call = call %struct.IDProperty* @IDP_CopyProperty(%struct.IDProperty* %7), !dbg !2389
  %8 = load %struct.Bone*, %struct.Bone** %newBone.addr, align 8, !dbg !2390
  %prop3 = getelementptr inbounds %struct.Bone, %struct.Bone* %8, i32 0, i32 2, !dbg !2391
  store %struct.IDProperty* %call, %struct.IDProperty** %prop3, align 8, !dbg !2392
  br label %if.end4, !dbg !2390

if.end4:                                          ; preds = %if.then1, %if.end
  %9 = load %struct.Bone*, %struct.Bone** %newBone.addr, align 8, !dbg !2393
  %childbase = getelementptr inbounds %struct.Bone, %struct.Bone* %9, i32 0, i32 4, !dbg !2394
  %10 = load %struct.Bone*, %struct.Bone** %oldBone.addr, align 8, !dbg !2395
  %childbase5 = getelementptr inbounds %struct.Bone, %struct.Bone* %10, i32 0, i32 4, !dbg !2396
  call void @BLI_duplicatelist(%struct.ListBase* %childbase, %struct.ListBase* %childbase5), !dbg !2397
  %11 = load %struct.Bone*, %struct.Bone** %newBone.addr, align 8, !dbg !2398
  %childbase6 = getelementptr inbounds %struct.Bone, %struct.Bone* %11, i32 0, i32 4, !dbg !2399
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %childbase6, i32 0, i32 0, !dbg !2400
  %12 = load i8*, i8** %first, align 8, !dbg !2400
  %13 = bitcast i8* %12 to %struct.Bone*, !dbg !2398
  store %struct.Bone* %13, %struct.Bone** %newChildBone, align 8, !dbg !2401
  %14 = load %struct.Bone*, %struct.Bone** %oldBone.addr, align 8, !dbg !2402
  %childbase7 = getelementptr inbounds %struct.Bone, %struct.Bone* %14, i32 0, i32 4, !dbg !2404
  %first8 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %childbase7, i32 0, i32 0, !dbg !2405
  %15 = load i8*, i8** %first8, align 8, !dbg !2405
  %16 = bitcast i8* %15 to %struct.Bone*, !dbg !2402
  store %struct.Bone* %16, %struct.Bone** %curBone, align 8, !dbg !2406
  br label %for.cond, !dbg !2407

for.cond:                                         ; preds = %for.inc, %if.end4
  %17 = load %struct.Bone*, %struct.Bone** %curBone, align 8, !dbg !2408
  %tobool9 = icmp ne %struct.Bone* %17, null, !dbg !2410
  br i1 %tobool9, label %for.body, label %for.end, !dbg !2410

for.body:                                         ; preds = %for.cond
  %18 = load %struct.Bone*, %struct.Bone** %newBone.addr, align 8, !dbg !2411
  %19 = load %struct.Bone*, %struct.Bone** %newChildBone, align 8, !dbg !2413
  %parent = getelementptr inbounds %struct.Bone, %struct.Bone* %19, i32 0, i32 3, !dbg !2414
  store %struct.Bone* %18, %struct.Bone** %parent, align 8, !dbg !2415
  %20 = load %struct.Bone*, %struct.Bone** %newChildBone, align 8, !dbg !2416
  %21 = load %struct.Bone*, %struct.Bone** %curBone, align 8, !dbg !2417
  %22 = load %struct.Bone*, %struct.Bone** %actBone.addr, align 8, !dbg !2418
  %23 = load %struct.Bone**, %struct.Bone*** %newActBone.addr, align 8, !dbg !2419
  call void @copy_bonechildren(%struct.Bone* %20, %struct.Bone* %21, %struct.Bone* %22, %struct.Bone** %23), !dbg !2420
  %24 = load %struct.Bone*, %struct.Bone** %newChildBone, align 8, !dbg !2421
  %next = getelementptr inbounds %struct.Bone, %struct.Bone* %24, i32 0, i32 0, !dbg !2422
  %25 = load %struct.Bone*, %struct.Bone** %next, align 8, !dbg !2422
  store %struct.Bone* %25, %struct.Bone** %newChildBone, align 8, !dbg !2423
  br label %for.inc, !dbg !2424

for.inc:                                          ; preds = %for.body
  %26 = load %struct.Bone*, %struct.Bone** %curBone, align 8, !dbg !2425
  %next10 = getelementptr inbounds %struct.Bone, %struct.Bone* %26, i32 0, i32 0, !dbg !2426
  %27 = load %struct.Bone*, %struct.Bone** %next10, align 8, !dbg !2426
  store %struct.Bone* %27, %struct.Bone** %curBone, align 8, !dbg !2427
  br label %for.cond, !dbg !2428, !llvm.loop !2429

for.end:                                          ; preds = %for.cond
  ret void, !dbg !2431
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.Bone* @BKE_armature_find_bone_name(%struct.bArmature* %arm, i8* %name) #0 !dbg !2432 {
entry:
  %retval = alloca %struct.Bone*, align 8
  %arm.addr = alloca %struct.bArmature*, align 8
  %name.addr = alloca i8*, align 8
  %bone = alloca %struct.Bone*, align 8
  %curBone = alloca %struct.Bone*, align 8
  store %struct.bArmature* %arm, %struct.bArmature** %arm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bArmature** %arm.addr, metadata !2435, metadata !DIExpression()), !dbg !2436
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !2437, metadata !DIExpression()), !dbg !2438
  call void @llvm.dbg.declare(metadata %struct.Bone** %bone, metadata !2439, metadata !DIExpression()), !dbg !2440
  store %struct.Bone* null, %struct.Bone** %bone, align 8, !dbg !2440
  call void @llvm.dbg.declare(metadata %struct.Bone** %curBone, metadata !2441, metadata !DIExpression()), !dbg !2442
  %0 = load %struct.bArmature*, %struct.bArmature** %arm.addr, align 8, !dbg !2443
  %tobool = icmp ne %struct.bArmature* %0, null, !dbg !2443
  br i1 %tobool, label %if.end, label %if.then, !dbg !2445

if.then:                                          ; preds = %entry
  store %struct.Bone* null, %struct.Bone** %retval, align 8, !dbg !2446
  br label %return, !dbg !2446

if.end:                                           ; preds = %entry
  %1 = load %struct.bArmature*, %struct.bArmature** %arm.addr, align 8, !dbg !2447
  %bonebase = getelementptr inbounds %struct.bArmature, %struct.bArmature* %1, i32 0, i32 2, !dbg !2449
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %bonebase, i32 0, i32 0, !dbg !2450
  %2 = load i8*, i8** %first, align 8, !dbg !2450
  %3 = bitcast i8* %2 to %struct.Bone*, !dbg !2447
  store %struct.Bone* %3, %struct.Bone** %curBone, align 8, !dbg !2451
  br label %for.cond, !dbg !2452

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load %struct.Bone*, %struct.Bone** %curBone, align 8, !dbg !2453
  %tobool1 = icmp ne %struct.Bone* %4, null, !dbg !2455
  br i1 %tobool1, label %for.body, label %for.end, !dbg !2455

for.body:                                         ; preds = %for.cond
  %5 = load %struct.Bone*, %struct.Bone** %curBone, align 8, !dbg !2456
  %6 = load i8*, i8** %name.addr, align 8, !dbg !2458
  %call = call %struct.Bone* @get_named_bone_bonechildren(%struct.Bone* %5, i8* %6), !dbg !2459
  store %struct.Bone* %call, %struct.Bone** %bone, align 8, !dbg !2460
  %7 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !2461
  %tobool2 = icmp ne %struct.Bone* %7, null, !dbg !2461
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !2463

if.then3:                                         ; preds = %for.body
  %8 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !2464
  store %struct.Bone* %8, %struct.Bone** %retval, align 8, !dbg !2465
  br label %return, !dbg !2465

if.end4:                                          ; preds = %for.body
  br label %for.inc, !dbg !2466

for.inc:                                          ; preds = %if.end4
  %9 = load %struct.Bone*, %struct.Bone** %curBone, align 8, !dbg !2467
  %next = getelementptr inbounds %struct.Bone, %struct.Bone* %9, i32 0, i32 0, !dbg !2468
  %10 = load %struct.Bone*, %struct.Bone** %next, align 8, !dbg !2468
  store %struct.Bone* %10, %struct.Bone** %curBone, align 8, !dbg !2469
  br label %for.cond, !dbg !2470, !llvm.loop !2471

for.end:                                          ; preds = %for.cond
  %11 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !2473
  store %struct.Bone* %11, %struct.Bone** %retval, align 8, !dbg !2474
  br label %return, !dbg !2474

return:                                           ; preds = %for.end, %if.then3, %if.then
  %12 = load %struct.Bone*, %struct.Bone** %retval, align 8, !dbg !2475
  ret %struct.Bone* %12, !dbg !2475
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.Bone* @get_named_bone_bonechildren(%struct.Bone* %bone, i8* %name) #0 !dbg !2476 {
entry:
  %retval = alloca %struct.Bone*, align 8
  %bone.addr = alloca %struct.Bone*, align 8
  %name.addr = alloca i8*, align 8
  %curBone = alloca %struct.Bone*, align 8
  %rbone = alloca %struct.Bone*, align 8
  store %struct.Bone* %bone, %struct.Bone** %bone.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Bone** %bone.addr, metadata !2479, metadata !DIExpression()), !dbg !2480
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !2481, metadata !DIExpression()), !dbg !2482
  call void @llvm.dbg.declare(metadata %struct.Bone** %curBone, metadata !2483, metadata !DIExpression()), !dbg !2484
  call void @llvm.dbg.declare(metadata %struct.Bone** %rbone, metadata !2485, metadata !DIExpression()), !dbg !2486
  %0 = load %struct.Bone*, %struct.Bone** %bone.addr, align 8, !dbg !2487
  %name1 = getelementptr inbounds %struct.Bone, %struct.Bone* %0, i32 0, i32 5, !dbg !2489
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name1, i64 0, i64 0, !dbg !2487
  %1 = load i8*, i8** %name.addr, align 8, !dbg !2490
  %call = call i32 @strcmp(i8* %arraydecay, i8* %1) #6, !dbg !2491
  %tobool = icmp ne i32 %call, 0, !dbg !2491
  br i1 %tobool, label %if.end, label %if.then, !dbg !2492

if.then:                                          ; preds = %entry
  %2 = load %struct.Bone*, %struct.Bone** %bone.addr, align 8, !dbg !2493
  store %struct.Bone* %2, %struct.Bone** %retval, align 8, !dbg !2494
  br label %return, !dbg !2494

if.end:                                           ; preds = %entry
  %3 = load %struct.Bone*, %struct.Bone** %bone.addr, align 8, !dbg !2495
  %childbase = getelementptr inbounds %struct.Bone, %struct.Bone* %3, i32 0, i32 4, !dbg !2497
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %childbase, i32 0, i32 0, !dbg !2498
  %4 = load i8*, i8** %first, align 8, !dbg !2498
  %5 = bitcast i8* %4 to %struct.Bone*, !dbg !2495
  store %struct.Bone* %5, %struct.Bone** %curBone, align 8, !dbg !2499
  br label %for.cond, !dbg !2500

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load %struct.Bone*, %struct.Bone** %curBone, align 8, !dbg !2501
  %tobool2 = icmp ne %struct.Bone* %6, null, !dbg !2503
  br i1 %tobool2, label %for.body, label %for.end, !dbg !2503

for.body:                                         ; preds = %for.cond
  %7 = load %struct.Bone*, %struct.Bone** %curBone, align 8, !dbg !2504
  %8 = load i8*, i8** %name.addr, align 8, !dbg !2506
  %call3 = call %struct.Bone* @get_named_bone_bonechildren(%struct.Bone* %7, i8* %8), !dbg !2507
  store %struct.Bone* %call3, %struct.Bone** %rbone, align 8, !dbg !2508
  %9 = load %struct.Bone*, %struct.Bone** %rbone, align 8, !dbg !2509
  %tobool4 = icmp ne %struct.Bone* %9, null, !dbg !2509
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !2511

if.then5:                                         ; preds = %for.body
  %10 = load %struct.Bone*, %struct.Bone** %rbone, align 8, !dbg !2512
  store %struct.Bone* %10, %struct.Bone** %retval, align 8, !dbg !2513
  br label %return, !dbg !2513

if.end6:                                          ; preds = %for.body
  br label %for.inc, !dbg !2514

for.inc:                                          ; preds = %if.end6
  %11 = load %struct.Bone*, %struct.Bone** %curBone, align 8, !dbg !2515
  %next = getelementptr inbounds %struct.Bone, %struct.Bone* %11, i32 0, i32 0, !dbg !2516
  %12 = load %struct.Bone*, %struct.Bone** %next, align 8, !dbg !2516
  store %struct.Bone* %12, %struct.Bone** %curBone, align 8, !dbg !2517
  br label %for.cond, !dbg !2518, !llvm.loop !2519

for.end:                                          ; preds = %for.cond
  store %struct.Bone* null, %struct.Bone** %retval, align 8, !dbg !2521
  br label %return, !dbg !2521

return:                                           ; preds = %for.end, %if.then5, %if.then
  %13 = load %struct.Bone*, %struct.Bone** %retval, align 8, !dbg !2522
  ret %struct.Bone* %13, !dbg !2522
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @bone_autoside_name(i8* %name, i32 %UNUSED_strip_number, i16 signext %axis, float %head, float %tail) #0 !dbg !2523 {
entry:
  %retval = alloca i32, align 4
  %name.addr = alloca i8*, align 8
  %UNUSED_strip_number.addr = alloca i32, align 4
  %axis.addr = alloca i16, align 2
  %head.addr = alloca float, align 4
  %tail.addr = alloca float, align 4
  %len = alloca i32, align 4
  %basename = alloca [64 x i8], align 16
  %extension = alloca [5 x i8], align 1
  %changed = alloca i8, align 1
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !2526, metadata !DIExpression()), !dbg !2527
  store i32 %UNUSED_strip_number, i32* %UNUSED_strip_number.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_strip_number.addr, metadata !2528, metadata !DIExpression()), !dbg !2529
  store i16 %axis, i16* %axis.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %axis.addr, metadata !2530, metadata !DIExpression()), !dbg !2531
  store float %head, float* %head.addr, align 4
  call void @llvm.dbg.declare(metadata float* %head.addr, metadata !2532, metadata !DIExpression()), !dbg !2533
  store float %tail, float* %tail.addr, align 4
  call void @llvm.dbg.declare(metadata float* %tail.addr, metadata !2534, metadata !DIExpression()), !dbg !2535
  call void @llvm.dbg.declare(metadata i32* %len, metadata !2536, metadata !DIExpression()), !dbg !2537
  call void @llvm.dbg.declare(metadata [64 x i8]* %basename, metadata !2538, metadata !DIExpression()), !dbg !2539
  %0 = bitcast [64 x i8]* %basename to i8*, !dbg !2539
  call void @llvm.memset.p0i8.i64(i8* align 16 %0, i8 0, i64 64, i1 false), !dbg !2539
  call void @llvm.dbg.declare(metadata [5 x i8]* %extension, metadata !2540, metadata !DIExpression()), !dbg !2541
  %1 = bitcast [5 x i8]* %extension to i8*, !dbg !2541
  call void @llvm.memset.p0i8.i64(i8* align 1 %1, i8 0, i64 5, i1 false), !dbg !2541
  %2 = load i8*, i8** %name.addr, align 8, !dbg !2542
  %call = call i64 @strlen(i8* %2) #6, !dbg !2543
  %conv = trunc i64 %call to i32, !dbg !2543
  store i32 %conv, i32* %len, align 4, !dbg !2544
  %3 = load i32, i32* %len, align 4, !dbg !2545
  %cmp = icmp eq i32 %3, 0, !dbg !2547
  br i1 %cmp, label %if.then, label %if.end, !dbg !2548

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !2549
  br label %return, !dbg !2549

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %basename, i64 0, i64 0, !dbg !2550
  %4 = load i8*, i8** %name.addr, align 8, !dbg !2551
  %call2 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %4, i64 64), !dbg !2552
  %5 = load i16, i16* %axis.addr, align 2, !dbg !2553
  %conv3 = sext i16 %5 to i32, !dbg !2553
  %cmp4 = icmp eq i32 %conv3, 2, !dbg !2555
  br i1 %cmp4, label %if.then6, label %if.else33, !dbg !2556

if.then6:                                         ; preds = %if.end
  %6 = load float, float* %head.addr, align 4, !dbg !2557
  %sub = fsub float %6, 0.000000e+00, !dbg !2557
  %7 = call float @llvm.fabs.f32(float %sub), !dbg !2557
  %cmp7 = fcmp oge float %7, 0x3E80000000000000, !dbg !2557
  %8 = zext i1 %cmp7 to i64, !dbg !2557
  %cond = select i1 %cmp7, i32 0, i32 1, !dbg !2557
  %tobool = icmp ne i32 %cond, 0, !dbg !2557
  br i1 %tobool, label %if.then9, label %if.else22, !dbg !2560

if.then9:                                         ; preds = %if.then6
  %9 = load float, float* %tail.addr, align 4, !dbg !2561
  %cmp10 = fcmp olt float %9, 0.000000e+00, !dbg !2564
  br i1 %cmp10, label %if.then12, label %if.else, !dbg !2565

if.then12:                                        ; preds = %if.then9
  %arraydecay13 = getelementptr inbounds [5 x i8], [5 x i8]* %extension, i64 0, i64 0, !dbg !2566
  %call14 = call i8* @strcpy(i8* %arraydecay13, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0)) #7, !dbg !2567
  br label %if.end21, !dbg !2567

if.else:                                          ; preds = %if.then9
  %10 = load float, float* %tail.addr, align 4, !dbg !2568
  %cmp15 = fcmp ogt float %10, 0.000000e+00, !dbg !2570
  br i1 %cmp15, label %if.then17, label %if.end20, !dbg !2571

if.then17:                                        ; preds = %if.else
  %arraydecay18 = getelementptr inbounds [5 x i8], [5 x i8]* %extension, i64 0, i64 0, !dbg !2572
  %call19 = call i8* @strcpy(i8* %arraydecay18, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !2573
  br label %if.end20, !dbg !2573

if.end20:                                         ; preds = %if.then17, %if.else
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.then12
  br label %if.end32, !dbg !2574

if.else22:                                        ; preds = %if.then6
  %11 = load float, float* %head.addr, align 4, !dbg !2575
  %cmp23 = fcmp olt float %11, 0.000000e+00, !dbg !2578
  br i1 %cmp23, label %if.then25, label %if.else28, !dbg !2579

if.then25:                                        ; preds = %if.else22
  %arraydecay26 = getelementptr inbounds [5 x i8], [5 x i8]* %extension, i64 0, i64 0, !dbg !2580
  %call27 = call i8* @strcpy(i8* %arraydecay26, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str, i64 0, i64 0)) #7, !dbg !2581
  br label %if.end31, !dbg !2581

if.else28:                                        ; preds = %if.else22
  %arraydecay29 = getelementptr inbounds [5 x i8], [5 x i8]* %extension, i64 0, i64 0, !dbg !2582
  %call30 = call i8* @strcpy(i8* %arraydecay29, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i64 0, i64 0)) #7, !dbg !2583
  br label %if.end31

if.end31:                                         ; preds = %if.else28, %if.then25
  br label %if.end32

if.end32:                                         ; preds = %if.end31, %if.end21
  br label %if.end104, !dbg !2584

if.else33:                                        ; preds = %if.end
  %12 = load i16, i16* %axis.addr, align 2, !dbg !2585
  %conv34 = sext i16 %12 to i32, !dbg !2585
  %cmp35 = icmp eq i32 %conv34, 1, !dbg !2587
  br i1 %cmp35, label %if.then37, label %if.else68, !dbg !2588

if.then37:                                        ; preds = %if.else33
  %13 = load float, float* %head.addr, align 4, !dbg !2589
  %sub38 = fsub float %13, 0.000000e+00, !dbg !2589
  %14 = call float @llvm.fabs.f32(float %sub38), !dbg !2589
  %cmp39 = fcmp oge float %14, 0x3E80000000000000, !dbg !2589
  %15 = zext i1 %cmp39 to i64, !dbg !2589
  %cond41 = select i1 %cmp39, i32 0, i32 1, !dbg !2589
  %tobool42 = icmp ne i32 %cond41, 0, !dbg !2589
  br i1 %tobool42, label %if.then43, label %if.else57, !dbg !2592

if.then43:                                        ; preds = %if.then37
  %16 = load float, float* %tail.addr, align 4, !dbg !2593
  %cmp44 = fcmp olt float %16, 0.000000e+00, !dbg !2596
  br i1 %cmp44, label %if.then46, label %if.else49, !dbg !2597

if.then46:                                        ; preds = %if.then43
  %arraydecay47 = getelementptr inbounds [5 x i8], [5 x i8]* %extension, i64 0, i64 0, !dbg !2598
  %call48 = call i8* @strcpy(i8* %arraydecay47, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0)) #7, !dbg !2599
  br label %if.end56, !dbg !2599

if.else49:                                        ; preds = %if.then43
  %17 = load float, float* %tail.addr, align 4, !dbg !2600
  %cmp50 = fcmp ogt float %17, 0.000000e+00, !dbg !2602
  br i1 %cmp50, label %if.then52, label %if.end55, !dbg !2603

if.then52:                                        ; preds = %if.else49
  %arraydecay53 = getelementptr inbounds [5 x i8], [5 x i8]* %extension, i64 0, i64 0, !dbg !2604
  %call54 = call i8* @strcpy(i8* %arraydecay53, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0)) #7, !dbg !2605
  br label %if.end55, !dbg !2605

if.end55:                                         ; preds = %if.then52, %if.else49
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.then46
  br label %if.end67, !dbg !2606

if.else57:                                        ; preds = %if.then37
  %18 = load float, float* %head.addr, align 4, !dbg !2607
  %cmp58 = fcmp olt float %18, 0.000000e+00, !dbg !2610
  br i1 %cmp58, label %if.then60, label %if.else63, !dbg !2611

if.then60:                                        ; preds = %if.else57
  %arraydecay61 = getelementptr inbounds [5 x i8], [5 x i8]* %extension, i64 0, i64 0, !dbg !2612
  %call62 = call i8* @strcpy(i8* %arraydecay61, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0)) #7, !dbg !2613
  br label %if.end66, !dbg !2613

if.else63:                                        ; preds = %if.else57
  %arraydecay64 = getelementptr inbounds [5 x i8], [5 x i8]* %extension, i64 0, i64 0, !dbg !2614
  %call65 = call i8* @strcpy(i8* %arraydecay64, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0)) #7, !dbg !2615
  br label %if.end66

if.end66:                                         ; preds = %if.else63, %if.then60
  br label %if.end67

if.end67:                                         ; preds = %if.end66, %if.end56
  br label %if.end103, !dbg !2616

if.else68:                                        ; preds = %if.else33
  %19 = load float, float* %head.addr, align 4, !dbg !2617
  %sub69 = fsub float %19, 0.000000e+00, !dbg !2617
  %20 = call float @llvm.fabs.f32(float %sub69), !dbg !2617
  %cmp70 = fcmp oge float %20, 0x3E80000000000000, !dbg !2617
  %21 = zext i1 %cmp70 to i64, !dbg !2617
  %cond72 = select i1 %cmp70, i32 0, i32 1, !dbg !2617
  %tobool73 = icmp ne i32 %cond72, 0, !dbg !2617
  br i1 %tobool73, label %if.then74, label %if.else88, !dbg !2620

if.then74:                                        ; preds = %if.else68
  %22 = load float, float* %tail.addr, align 4, !dbg !2621
  %cmp75 = fcmp olt float %22, 0.000000e+00, !dbg !2624
  br i1 %cmp75, label %if.then77, label %if.else80, !dbg !2625

if.then77:                                        ; preds = %if.then74
  %arraydecay78 = getelementptr inbounds [5 x i8], [5 x i8]* %extension, i64 0, i64 0, !dbg !2626
  %call79 = call i8* @strcpy(i8* %arraydecay78, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #7, !dbg !2627
  br label %if.end87, !dbg !2627

if.else80:                                        ; preds = %if.then74
  %23 = load float, float* %tail.addr, align 4, !dbg !2628
  %cmp81 = fcmp ogt float %23, 0.000000e+00, !dbg !2630
  br i1 %cmp81, label %if.then83, label %if.end86, !dbg !2631

if.then83:                                        ; preds = %if.else80
  %arraydecay84 = getelementptr inbounds [5 x i8], [5 x i8]* %extension, i64 0, i64 0, !dbg !2632
  %call85 = call i8* @strcpy(i8* %arraydecay84, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #7, !dbg !2633
  br label %if.end86, !dbg !2633

if.end86:                                         ; preds = %if.then83, %if.else80
  br label %if.end87

if.end87:                                         ; preds = %if.end86, %if.then77
  br label %if.end102, !dbg !2634

if.else88:                                        ; preds = %if.else68
  %24 = load float, float* %head.addr, align 4, !dbg !2635
  %cmp89 = fcmp olt float %24, 0.000000e+00, !dbg !2638
  br i1 %cmp89, label %if.then91, label %if.else94, !dbg !2639

if.then91:                                        ; preds = %if.else88
  %arraydecay92 = getelementptr inbounds [5 x i8], [5 x i8]* %extension, i64 0, i64 0, !dbg !2640
  %call93 = call i8* @strcpy(i8* %arraydecay92, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #7, !dbg !2641
  br label %if.end101, !dbg !2641

if.else94:                                        ; preds = %if.else88
  %25 = load float, float* %head.addr, align 4, !dbg !2642
  %cmp95 = fcmp ogt float %25, 0.000000e+00, !dbg !2644
  br i1 %cmp95, label %if.then97, label %if.end100, !dbg !2645

if.then97:                                        ; preds = %if.else94
  %arraydecay98 = getelementptr inbounds [5 x i8], [5 x i8]* %extension, i64 0, i64 0, !dbg !2646
  %call99 = call i8* @strcpy(i8* %arraydecay98, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #7, !dbg !2647
  br label %if.end100, !dbg !2647

if.end100:                                        ; preds = %if.then97, %if.else94
  br label %if.end101

if.end101:                                        ; preds = %if.end100, %if.then91
  br label %if.end102

if.end102:                                        ; preds = %if.end101, %if.end87
  br label %if.end103

if.end103:                                        ; preds = %if.end102, %if.end67
  br label %if.end104

if.end104:                                        ; preds = %if.end103, %if.end32
  %arrayidx = getelementptr inbounds [5 x i8], [5 x i8]* %extension, i64 0, i64 0, !dbg !2648
  %26 = load i8, i8* %arrayidx, align 1, !dbg !2648
  %tobool105 = icmp ne i8 %26, 0, !dbg !2648
  br i1 %tobool105, label %if.then106, label %if.else256, !dbg !2650

if.then106:                                       ; preds = %if.end104
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !2651, metadata !DIExpression()), !dbg !2653
  store i8 1, i8* %changed, align 1, !dbg !2653
  br label %while.cond, !dbg !2654

while.cond:                                       ; preds = %if.end238, %if.then106
  %27 = load i8, i8* %changed, align 1, !dbg !2655
  %tobool107 = icmp ne i8 %27, 0, !dbg !2654
  br i1 %tobool107, label %while.body, label %while.end, !dbg !2654

while.body:                                       ; preds = %while.cond
  store i8 0, i8* %changed, align 1, !dbg !2656
  %28 = load i32, i32* %len, align 4, !dbg !2658
  %cmp108 = icmp ugt i32 %28, 2, !dbg !2660
  br i1 %cmp108, label %land.lhs.true, label %if.else134, !dbg !2661

land.lhs.true:                                    ; preds = %while.body
  %29 = load i32, i32* %len, align 4, !dbg !2662
  %sub110 = sub i32 %29, 2, !dbg !2663
  %idxprom = zext i32 %sub110 to i64, !dbg !2664
  %arrayidx111 = getelementptr inbounds [64 x i8], [64 x i8]* %basename, i64 0, i64 %idxprom, !dbg !2664
  %30 = load i8, i8* %arrayidx111, align 1, !dbg !2664
  %conv112 = zext i8 %30 to i32, !dbg !2664
  %cmp113 = icmp eq i32 %conv112, 46, !dbg !2665
  br i1 %cmp113, label %if.then115, label %if.else134, !dbg !2666

if.then115:                                       ; preds = %land.lhs.true
  %31 = load i32, i32* %len, align 4, !dbg !2667
  %sub116 = sub i32 %31, 1, !dbg !2670
  %idxprom117 = zext i32 %sub116 to i64, !dbg !2671
  %arrayidx118 = getelementptr inbounds [64 x i8], [64 x i8]* %basename, i64 0, i64 %idxprom117, !dbg !2671
  %32 = load i8, i8* %arrayidx118, align 1, !dbg !2671
  %conv119 = zext i8 %32 to i32, !dbg !2671
  %cmp120 = icmp eq i32 %conv119, 76, !dbg !2672
  br i1 %cmp120, label %if.then128, label %lor.lhs.false, !dbg !2673

lor.lhs.false:                                    ; preds = %if.then115
  %33 = load i32, i32* %len, align 4, !dbg !2674
  %sub122 = sub i32 %33, 1, !dbg !2675
  %idxprom123 = zext i32 %sub122 to i64, !dbg !2676
  %arrayidx124 = getelementptr inbounds [64 x i8], [64 x i8]* %basename, i64 0, i64 %idxprom123, !dbg !2676
  %34 = load i8, i8* %arrayidx124, align 1, !dbg !2676
  %conv125 = zext i8 %34 to i32, !dbg !2676
  %cmp126 = icmp eq i32 %conv125, 82, !dbg !2677
  br i1 %cmp126, label %if.then128, label %if.end133, !dbg !2678

if.then128:                                       ; preds = %lor.lhs.false, %if.then115
  %35 = load i32, i32* %len, align 4, !dbg !2679
  %sub129 = sub i32 %35, 2, !dbg !2681
  %idxprom130 = zext i32 %sub129 to i64, !dbg !2682
  %arrayidx131 = getelementptr inbounds [64 x i8], [64 x i8]* %basename, i64 0, i64 %idxprom130, !dbg !2682
  store i8 0, i8* %arrayidx131, align 1, !dbg !2683
  %36 = load i32, i32* %len, align 4, !dbg !2684
  %sub132 = sub i32 %36, 2, !dbg !2684
  store i32 %sub132, i32* %len, align 4, !dbg !2684
  store i8 1, i8* %changed, align 1, !dbg !2685
  br label %if.end133, !dbg !2686

if.end133:                                        ; preds = %if.then128, %lor.lhs.false
  br label %if.end238, !dbg !2687

if.else134:                                       ; preds = %land.lhs.true, %while.body
  %37 = load i32, i32* %len, align 4, !dbg !2688
  %cmp135 = icmp ugt i32 %37, 3, !dbg !2690
  br i1 %cmp135, label %land.lhs.true137, label %if.else178, !dbg !2691

land.lhs.true137:                                 ; preds = %if.else134
  %38 = load i32, i32* %len, align 4, !dbg !2692
  %sub138 = sub i32 %38, 3, !dbg !2693
  %idxprom139 = zext i32 %sub138 to i64, !dbg !2694
  %arrayidx140 = getelementptr inbounds [64 x i8], [64 x i8]* %basename, i64 0, i64 %idxprom139, !dbg !2694
  %39 = load i8, i8* %arrayidx140, align 1, !dbg !2694
  %conv141 = zext i8 %39 to i32, !dbg !2694
  %cmp142 = icmp eq i32 %conv141, 46, !dbg !2695
  br i1 %cmp142, label %if.then144, label %if.else178, !dbg !2696

if.then144:                                       ; preds = %land.lhs.true137
  %40 = load i32, i32* %len, align 4, !dbg !2697
  %sub145 = sub i32 %40, 2, !dbg !2700
  %idxprom146 = zext i32 %sub145 to i64, !dbg !2701
  %arrayidx147 = getelementptr inbounds [64 x i8], [64 x i8]* %basename, i64 0, i64 %idxprom146, !dbg !2701
  %41 = load i8, i8* %arrayidx147, align 1, !dbg !2701
  %conv148 = zext i8 %41 to i32, !dbg !2701
  %cmp149 = icmp eq i32 %conv148, 70, !dbg !2702
  br i1 %cmp149, label %land.lhs.true151, label %lor.lhs.false158, !dbg !2703

land.lhs.true151:                                 ; preds = %if.then144
  %42 = load i32, i32* %len, align 4, !dbg !2704
  %sub152 = sub i32 %42, 1, !dbg !2705
  %idxprom153 = zext i32 %sub152 to i64, !dbg !2706
  %arrayidx154 = getelementptr inbounds [64 x i8], [64 x i8]* %basename, i64 0, i64 %idxprom153, !dbg !2706
  %43 = load i8, i8* %arrayidx154, align 1, !dbg !2706
  %conv155 = zext i8 %43 to i32, !dbg !2706
  %cmp156 = icmp eq i32 %conv155, 114, !dbg !2707
  br i1 %cmp156, label %if.then172, label %lor.lhs.false158, !dbg !2708

lor.lhs.false158:                                 ; preds = %land.lhs.true151, %if.then144
  %44 = load i32, i32* %len, align 4, !dbg !2709
  %sub159 = sub i32 %44, 2, !dbg !2710
  %idxprom160 = zext i32 %sub159 to i64, !dbg !2711
  %arrayidx161 = getelementptr inbounds [64 x i8], [64 x i8]* %basename, i64 0, i64 %idxprom160, !dbg !2711
  %45 = load i8, i8* %arrayidx161, align 1, !dbg !2711
  %conv162 = zext i8 %45 to i32, !dbg !2711
  %cmp163 = icmp eq i32 %conv162, 66, !dbg !2712
  br i1 %cmp163, label %land.lhs.true165, label %if.end177, !dbg !2713

land.lhs.true165:                                 ; preds = %lor.lhs.false158
  %46 = load i32, i32* %len, align 4, !dbg !2714
  %sub166 = sub i32 %46, 1, !dbg !2715
  %idxprom167 = zext i32 %sub166 to i64, !dbg !2716
  %arrayidx168 = getelementptr inbounds [64 x i8], [64 x i8]* %basename, i64 0, i64 %idxprom167, !dbg !2716
  %47 = load i8, i8* %arrayidx168, align 1, !dbg !2716
  %conv169 = zext i8 %47 to i32, !dbg !2716
  %cmp170 = icmp eq i32 %conv169, 107, !dbg !2717
  br i1 %cmp170, label %if.then172, label %if.end177, !dbg !2718

if.then172:                                       ; preds = %land.lhs.true165, %land.lhs.true151
  %48 = load i32, i32* %len, align 4, !dbg !2719
  %sub173 = sub i32 %48, 3, !dbg !2721
  %idxprom174 = zext i32 %sub173 to i64, !dbg !2722
  %arrayidx175 = getelementptr inbounds [64 x i8], [64 x i8]* %basename, i64 0, i64 %idxprom174, !dbg !2722
  store i8 0, i8* %arrayidx175, align 1, !dbg !2723
  %49 = load i32, i32* %len, align 4, !dbg !2724
  %sub176 = sub i32 %49, 3, !dbg !2724
  store i32 %sub176, i32* %len, align 4, !dbg !2724
  store i8 1, i8* %changed, align 1, !dbg !2725
  br label %if.end177, !dbg !2726

if.end177:                                        ; preds = %if.then172, %land.lhs.true165, %lor.lhs.false158
  br label %if.end237, !dbg !2727

if.else178:                                       ; preds = %land.lhs.true137, %if.else134
  %50 = load i32, i32* %len, align 4, !dbg !2728
  %cmp179 = icmp ugt i32 %50, 4, !dbg !2730
  br i1 %cmp179, label %land.lhs.true181, label %if.end236, !dbg !2731

land.lhs.true181:                                 ; preds = %if.else178
  %51 = load i32, i32* %len, align 4, !dbg !2732
  %sub182 = sub i32 %51, 4, !dbg !2733
  %idxprom183 = zext i32 %sub182 to i64, !dbg !2734
  %arrayidx184 = getelementptr inbounds [64 x i8], [64 x i8]* %basename, i64 0, i64 %idxprom183, !dbg !2734
  %52 = load i8, i8* %arrayidx184, align 1, !dbg !2734
  %conv185 = zext i8 %52 to i32, !dbg !2734
  %cmp186 = icmp eq i32 %conv185, 46, !dbg !2735
  br i1 %cmp186, label %if.then188, label %if.end236, !dbg !2736

if.then188:                                       ; preds = %land.lhs.true181
  %53 = load i32, i32* %len, align 4, !dbg !2737
  %sub189 = sub i32 %53, 3, !dbg !2740
  %idxprom190 = zext i32 %sub189 to i64, !dbg !2741
  %arrayidx191 = getelementptr inbounds [64 x i8], [64 x i8]* %basename, i64 0, i64 %idxprom190, !dbg !2741
  %54 = load i8, i8* %arrayidx191, align 1, !dbg !2741
  %conv192 = zext i8 %54 to i32, !dbg !2741
  %cmp193 = icmp eq i32 %conv192, 84, !dbg !2742
  br i1 %cmp193, label %land.lhs.true195, label %lor.lhs.false209, !dbg !2743

land.lhs.true195:                                 ; preds = %if.then188
  %55 = load i32, i32* %len, align 4, !dbg !2744
  %sub196 = sub i32 %55, 2, !dbg !2745
  %idxprom197 = zext i32 %sub196 to i64, !dbg !2746
  %arrayidx198 = getelementptr inbounds [64 x i8], [64 x i8]* %basename, i64 0, i64 %idxprom197, !dbg !2746
  %56 = load i8, i8* %arrayidx198, align 1, !dbg !2746
  %conv199 = zext i8 %56 to i32, !dbg !2746
  %cmp200 = icmp eq i32 %conv199, 111, !dbg !2747
  br i1 %cmp200, label %land.lhs.true202, label %lor.lhs.false209, !dbg !2748

land.lhs.true202:                                 ; preds = %land.lhs.true195
  %57 = load i32, i32* %len, align 4, !dbg !2749
  %sub203 = sub i32 %57, 1, !dbg !2750
  %idxprom204 = zext i32 %sub203 to i64, !dbg !2751
  %arrayidx205 = getelementptr inbounds [64 x i8], [64 x i8]* %basename, i64 0, i64 %idxprom204, !dbg !2751
  %58 = load i8, i8* %arrayidx205, align 1, !dbg !2751
  %conv206 = zext i8 %58 to i32, !dbg !2751
  %cmp207 = icmp eq i32 %conv206, 112, !dbg !2752
  br i1 %cmp207, label %if.then230, label %lor.lhs.false209, !dbg !2753

lor.lhs.false209:                                 ; preds = %land.lhs.true202, %land.lhs.true195, %if.then188
  %59 = load i32, i32* %len, align 4, !dbg !2754
  %sub210 = sub i32 %59, 3, !dbg !2755
  %idxprom211 = zext i32 %sub210 to i64, !dbg !2756
  %arrayidx212 = getelementptr inbounds [64 x i8], [64 x i8]* %basename, i64 0, i64 %idxprom211, !dbg !2756
  %60 = load i8, i8* %arrayidx212, align 1, !dbg !2756
  %conv213 = zext i8 %60 to i32, !dbg !2756
  %cmp214 = icmp eq i32 %conv213, 66, !dbg !2757
  br i1 %cmp214, label %land.lhs.true216, label %if.end235, !dbg !2758

land.lhs.true216:                                 ; preds = %lor.lhs.false209
  %61 = load i32, i32* %len, align 4, !dbg !2759
  %sub217 = sub i32 %61, 2, !dbg !2760
  %idxprom218 = zext i32 %sub217 to i64, !dbg !2761
  %arrayidx219 = getelementptr inbounds [64 x i8], [64 x i8]* %basename, i64 0, i64 %idxprom218, !dbg !2761
  %62 = load i8, i8* %arrayidx219, align 1, !dbg !2761
  %conv220 = zext i8 %62 to i32, !dbg !2761
  %cmp221 = icmp eq i32 %conv220, 111, !dbg !2762
  br i1 %cmp221, label %land.lhs.true223, label %if.end235, !dbg !2763

land.lhs.true223:                                 ; preds = %land.lhs.true216
  %63 = load i32, i32* %len, align 4, !dbg !2764
  %sub224 = sub i32 %63, 1, !dbg !2765
  %idxprom225 = zext i32 %sub224 to i64, !dbg !2766
  %arrayidx226 = getelementptr inbounds [64 x i8], [64 x i8]* %basename, i64 0, i64 %idxprom225, !dbg !2766
  %64 = load i8, i8* %arrayidx226, align 1, !dbg !2766
  %conv227 = zext i8 %64 to i32, !dbg !2766
  %cmp228 = icmp eq i32 %conv227, 116, !dbg !2767
  br i1 %cmp228, label %if.then230, label %if.end235, !dbg !2768

if.then230:                                       ; preds = %land.lhs.true223, %land.lhs.true202
  %65 = load i32, i32* %len, align 4, !dbg !2769
  %sub231 = sub i32 %65, 4, !dbg !2771
  %idxprom232 = zext i32 %sub231 to i64, !dbg !2772
  %arrayidx233 = getelementptr inbounds [64 x i8], [64 x i8]* %basename, i64 0, i64 %idxprom232, !dbg !2772
  store i8 0, i8* %arrayidx233, align 1, !dbg !2773
  %66 = load i32, i32* %len, align 4, !dbg !2774
  %sub234 = sub i32 %66, 4, !dbg !2774
  store i32 %sub234, i32* %len, align 4, !dbg !2774
  store i8 1, i8* %changed, align 1, !dbg !2775
  br label %if.end235, !dbg !2776

if.end235:                                        ; preds = %if.then230, %land.lhs.true223, %land.lhs.true216, %lor.lhs.false209
  br label %if.end236, !dbg !2777

if.end236:                                        ; preds = %if.end235, %land.lhs.true181, %if.else178
  br label %if.end237

if.end237:                                        ; preds = %if.end236, %if.end177
  br label %if.end238

if.end238:                                        ; preds = %if.end237, %if.end133
  br label %while.cond, !dbg !2654, !llvm.loop !2778

while.end:                                        ; preds = %while.cond
  %67 = load i32, i32* %len, align 4, !dbg !2780
  %sub239 = sub i32 64, %67, !dbg !2782
  %conv240 = zext i32 %sub239 to i64, !dbg !2783
  %arraydecay241 = getelementptr inbounds [5 x i8], [5 x i8]* %extension, i64 0, i64 0, !dbg !2784
  %call242 = call i64 @strlen(i8* %arraydecay241) #6, !dbg !2785
  %add = add i64 %call242, 1, !dbg !2786
  %cmp243 = icmp ult i64 %conv240, %add, !dbg !2787
  br i1 %cmp243, label %if.then245, label %if.end252, !dbg !2788

if.then245:                                       ; preds = %while.end
  %68 = load i8*, i8** %name.addr, align 8, !dbg !2789
  %arraydecay246 = getelementptr inbounds [64 x i8], [64 x i8]* %basename, i64 0, i64 0, !dbg !2791
  %69 = load i32, i32* %len, align 4, !dbg !2792
  %conv247 = zext i32 %69 to i64, !dbg !2792
  %arraydecay248 = getelementptr inbounds [5 x i8], [5 x i8]* %extension, i64 0, i64 0, !dbg !2793
  %call249 = call i64 @strlen(i8* %arraydecay248) #6, !dbg !2794
  %sub250 = sub i64 %conv247, %call249, !dbg !2795
  %call251 = call i8* @strncpy(i8* %68, i8* %arraydecay246, i64 %sub250) #7, !dbg !2796
  br label %if.end252, !dbg !2797

if.end252:                                        ; preds = %if.then245, %while.end
  %70 = load i8*, i8** %name.addr, align 8, !dbg !2798
  %arraydecay253 = getelementptr inbounds [64 x i8], [64 x i8]* %basename, i64 0, i64 0, !dbg !2799
  %arraydecay254 = getelementptr inbounds [5 x i8], [5 x i8]* %extension, i64 0, i64 0, !dbg !2800
  %call255 = call i64 (i8*, i64, i8*, ...) @BLI_snprintf(i8* %70, i64 64, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0), i8* %arraydecay253, i8* %arraydecay254), !dbg !2801
  store i32 1, i32* %retval, align 4, !dbg !2802
  br label %return, !dbg !2802

if.else256:                                       ; preds = %if.end104
  store i32 0, i32* %retval, align 4, !dbg !2803
  br label %return, !dbg !2803

return:                                           ; preds = %if.else256, %if.end252, %if.then
  %71 = load i32, i32* %retval, align 4, !dbg !2804
  ret i32 %71, !dbg !2804
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #4

declare dso_local i8* @BLI_strncpy(i8*, i8*, i64) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.fabs.f32(float) #1

; Function Attrs: nounwind
declare dso_local i8* @strcpy(i8*, i8*) #5

; Function Attrs: nounwind
declare dso_local i8* @strncpy(i8*, i8*, i64) #5

declare dso_local i64 @BLI_snprintf(i8*, i64, i8*, ...) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @b_bone_spline_setup(%struct.bPoseChannel* %pchan, i32 %rest, %struct.Mat4* %result_array) #0 !dbg !2805 {
entry:
  %pchan.addr = alloca %struct.bPoseChannel*, align 8
  %rest.addr = alloca i32, align 4
  %result_array.addr = alloca %struct.Mat4*, align 8
  %next = alloca %struct.bPoseChannel*, align 8
  %prev = alloca %struct.bPoseChannel*, align 8
  %bone = alloca %struct.Bone*, align 8
  %h1 = alloca [3 x float], align 4
  %h2 = alloca [3 x float], align 4
  %scale = alloca [3 x float], align 4
  %length = alloca float, align 4
  %hlength1 = alloca float, align 4
  %hlength2 = alloca float, align 4
  %roll1 = alloca float, align 4
  %roll2 = alloca float, align 4
  %mat3 = alloca [3 x [3 x float]], align 16
  %imat = alloca [4 x [4 x float]], align 16
  %posemat = alloca [4 x [4 x float]], align 16
  %scalemat = alloca [4 x [4 x float]], align 16
  %iscalemat = alloca [4 x [4 x float]], align 16
  %data = alloca [33 x [4 x float]], align 16
  %fp = alloca float*, align 8
  %a = alloca i32, align 4
  %do_scale = alloca i8, align 1
  %difmat = alloca [4 x [4 x float]], align 16
  %result = alloca [3 x [3 x float]], align 16
  %imat3 = alloca [3 x [3 x float]], align 16
  %difmat111 = alloca [4 x [4 x float]], align 16
  %result112 = alloca [3 x [3 x float]], align 16
  %imat3113 = alloca [3 x [3 x float]], align 16
  store %struct.bPoseChannel* %pchan, %struct.bPoseChannel** %pchan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan.addr, metadata !2859, metadata !DIExpression()), !dbg !2860
  store i32 %rest, i32* %rest.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %rest.addr, metadata !2861, metadata !DIExpression()), !dbg !2862
  store %struct.Mat4* %result_array, %struct.Mat4** %result_array.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Mat4** %result_array.addr, metadata !2863, metadata !DIExpression()), !dbg !2864
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %next, metadata !2865, metadata !DIExpression()), !dbg !2866
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %prev, metadata !2867, metadata !DIExpression()), !dbg !2868
  call void @llvm.dbg.declare(metadata %struct.Bone** %bone, metadata !2869, metadata !DIExpression()), !dbg !2870
  %0 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !2871
  %bone1 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %0, i32 0, i32 12, !dbg !2872
  %1 = load %struct.Bone*, %struct.Bone** %bone1, align 8, !dbg !2872
  store %struct.Bone* %1, %struct.Bone** %bone, align 8, !dbg !2870
  call void @llvm.dbg.declare(metadata [3 x float]* %h1, metadata !2873, metadata !DIExpression()), !dbg !2874
  call void @llvm.dbg.declare(metadata [3 x float]* %h2, metadata !2875, metadata !DIExpression()), !dbg !2876
  call void @llvm.dbg.declare(metadata [3 x float]* %scale, metadata !2877, metadata !DIExpression()), !dbg !2878
  call void @llvm.dbg.declare(metadata float* %length, metadata !2879, metadata !DIExpression()), !dbg !2880
  call void @llvm.dbg.declare(metadata float* %hlength1, metadata !2881, metadata !DIExpression()), !dbg !2882
  call void @llvm.dbg.declare(metadata float* %hlength2, metadata !2883, metadata !DIExpression()), !dbg !2884
  call void @llvm.dbg.declare(metadata float* %roll1, metadata !2885, metadata !DIExpression()), !dbg !2886
  store float 0.000000e+00, float* %roll1, align 4, !dbg !2886
  call void @llvm.dbg.declare(metadata float* %roll2, metadata !2887, metadata !DIExpression()), !dbg !2888
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %mat3, metadata !2889, metadata !DIExpression()), !dbg !2890
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %imat, metadata !2891, metadata !DIExpression()), !dbg !2892
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %posemat, metadata !2893, metadata !DIExpression()), !dbg !2894
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %scalemat, metadata !2895, metadata !DIExpression()), !dbg !2896
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %iscalemat, metadata !2897, metadata !DIExpression()), !dbg !2898
  call void @llvm.dbg.declare(metadata [33 x [4 x float]]* %data, metadata !2899, metadata !DIExpression()), !dbg !2903
  call void @llvm.dbg.declare(metadata float** %fp, metadata !2904, metadata !DIExpression()), !dbg !2905
  call void @llvm.dbg.declare(metadata i32* %a, metadata !2906, metadata !DIExpression()), !dbg !2907
  call void @llvm.dbg.declare(metadata i8* %do_scale, metadata !2908, metadata !DIExpression()), !dbg !2909
  store i8 0, i8* %do_scale, align 1, !dbg !2909
  %2 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !2910
  %length2 = getelementptr inbounds %struct.Bone, %struct.Bone* %2, i32 0, i32 18, !dbg !2911
  %3 = load float, float* %length2, align 4, !dbg !2911
  store float %3, float* %length, align 4, !dbg !2912
  %4 = load i32, i32* %rest.addr, align 4, !dbg !2913
  %tobool = icmp ne i32 %4, 0, !dbg !2913
  br i1 %tobool, label %if.end15, label %if.then, !dbg !2915

if.then:                                          ; preds = %entry
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %scale, i64 0, i64 0, !dbg !2916
  %5 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !2918
  %pose_mat = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %5, i32 0, i32 29, !dbg !2919
  %arraydecay3 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %pose_mat, i64 0, i64 0, !dbg !2918
  call void @mat4_to_size(float* %arraydecay, [4 x float]* %arraydecay3), !dbg !2920
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %scale, i64 0, i64 0, !dbg !2921
  %6 = load float, float* %arrayidx, align 4, !dbg !2921
  %arrayidx4 = getelementptr inbounds [3 x float], [3 x float]* %scale, i64 0, i64 1, !dbg !2923
  %7 = load float, float* %arrayidx4, align 4, !dbg !2923
  %sub = fsub float %6, %7, !dbg !2924
  %8 = call float @llvm.fabs.f32(float %sub), !dbg !2925
  %cmp = fcmp ogt float %8, 0x3EB0C6F7A0000000, !dbg !2926
  br i1 %cmp, label %if.then9, label %lor.lhs.false, !dbg !2927

lor.lhs.false:                                    ; preds = %if.then
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %scale, i64 0, i64 1, !dbg !2928
  %9 = load float, float* %arrayidx5, align 4, !dbg !2928
  %arrayidx6 = getelementptr inbounds [3 x float], [3 x float]* %scale, i64 0, i64 2, !dbg !2929
  %10 = load float, float* %arrayidx6, align 4, !dbg !2929
  %sub7 = fsub float %9, %10, !dbg !2930
  %11 = call float @llvm.fabs.f32(float %sub7), !dbg !2931
  %cmp8 = fcmp ogt float %11, 0x3EB0C6F7A0000000, !dbg !2932
  br i1 %cmp8, label %if.then9, label %if.end, !dbg !2933

if.then9:                                         ; preds = %lor.lhs.false, %if.then
  %arraydecay10 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %scalemat, i64 0, i64 0, !dbg !2934
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %scale, i64 0, i64 0, !dbg !2936
  call void @size_to_mat4([4 x float]* %arraydecay10, float* %arraydecay11), !dbg !2937
  %arraydecay12 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %iscalemat, i64 0, i64 0, !dbg !2938
  %arraydecay13 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %scalemat, i64 0, i64 0, !dbg !2939
  %call = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay12, [4 x float]* %arraydecay13), !dbg !2940
  %arrayidx14 = getelementptr inbounds [3 x float], [3 x float]* %scale, i64 0, i64 1, !dbg !2941
  %12 = load float, float* %arrayidx14, align 4, !dbg !2941
  %13 = load float, float* %length, align 4, !dbg !2942
  %mul = fmul float %13, %12, !dbg !2942
  store float %mul, float* %length, align 4, !dbg !2942
  store i8 1, i8* %do_scale, align 1, !dbg !2943
  br label %if.end, !dbg !2944

if.end:                                           ; preds = %if.then9, %lor.lhs.false
  br label %if.end15, !dbg !2945

if.end15:                                         ; preds = %if.end, %entry
  %14 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !2946
  %ease1 = getelementptr inbounds %struct.Bone, %struct.Bone* %14, i32 0, i32 20, !dbg !2947
  %15 = load float, float* %ease1, align 4, !dbg !2947
  %16 = load float, float* %length, align 4, !dbg !2948
  %mul16 = fmul float %15, %16, !dbg !2949
  %mul17 = fmul float %mul16, 0x3FD8FD5CC0000000, !dbg !2950
  store float %mul17, float* %hlength1, align 4, !dbg !2951
  %17 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !2952
  %ease2 = getelementptr inbounds %struct.Bone, %struct.Bone* %17, i32 0, i32 21, !dbg !2953
  %18 = load float, float* %ease2, align 8, !dbg !2953
  %19 = load float, float* %length, align 4, !dbg !2954
  %mul18 = fmul float %18, %19, !dbg !2955
  %mul19 = fmul float %mul18, 0x3FD8FD5CC0000000, !dbg !2956
  store float %mul19, float* %hlength2, align 4, !dbg !2957
  %20 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !2958
  %flag = getelementptr inbounds %struct.Bone, %struct.Bone* %20, i32 0, i32 10, !dbg !2960
  %21 = load i32, i32* %flag, align 8, !dbg !2960
  %and = and i32 %21, 16, !dbg !2961
  %tobool20 = icmp ne i32 %and, 0, !dbg !2961
  br i1 %tobool20, label %if.then21, label %if.else, !dbg !2962

if.then21:                                        ; preds = %if.end15
  %22 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !2963
  %parent = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %22, i32 0, i32 13, !dbg !2964
  %23 = load %struct.bPoseChannel*, %struct.bPoseChannel** %parent, align 8, !dbg !2964
  store %struct.bPoseChannel* %23, %struct.bPoseChannel** %prev, align 8, !dbg !2965
  br label %if.end22, !dbg !2966

if.else:                                          ; preds = %if.end15
  store %struct.bPoseChannel* null, %struct.bPoseChannel** %prev, align 8, !dbg !2967
  br label %if.end22

if.end22:                                         ; preds = %if.else, %if.then21
  %24 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !2968
  %child = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %24, i32 0, i32 14, !dbg !2969
  %25 = load %struct.bPoseChannel*, %struct.bPoseChannel** %child, align 8, !dbg !2969
  store %struct.bPoseChannel* %25, %struct.bPoseChannel** %next, align 8, !dbg !2970
  %26 = load i32, i32* %rest.addr, align 4, !dbg !2971
  %tobool23 = icmp ne i32 %26, 0, !dbg !2971
  br i1 %tobool23, label %if.then24, label %if.else29, !dbg !2973

if.then24:                                        ; preds = %if.end22
  %arraydecay25 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !2974
  %27 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !2976
  %bone26 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %27, i32 0, i32 12, !dbg !2977
  %28 = load %struct.Bone*, %struct.Bone** %bone26, align 8, !dbg !2977
  %arm_mat = getelementptr inbounds %struct.Bone, %struct.Bone* %28, i32 0, i32 13, !dbg !2978
  %arraydecay27 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %arm_mat, i64 0, i64 0, !dbg !2976
  %call28 = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay25, [4 x float]* %arraydecay27), !dbg !2979
  br label %if.end45, !dbg !2980

if.else29:                                        ; preds = %if.end22
  %29 = load i8, i8* %do_scale, align 1, !dbg !2981
  %tobool30 = icmp ne i8 %29, 0, !dbg !2981
  br i1 %tobool30, label %if.then31, label %if.else39, !dbg !2983

if.then31:                                        ; preds = %if.else29
  %arraydecay32 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %posemat, i64 0, i64 0, !dbg !2984
  %30 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !2986
  %pose_mat33 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %30, i32 0, i32 29, !dbg !2987
  %arraydecay34 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %pose_mat33, i64 0, i64 0, !dbg !2986
  call void @copy_m4_m4([4 x float]* %arraydecay32, [4 x float]* %arraydecay34), !dbg !2988
  %arraydecay35 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %posemat, i64 0, i64 0, !dbg !2989
  call void @normalize_m4([4 x float]* %arraydecay35), !dbg !2990
  %arraydecay36 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !2991
  %arraydecay37 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %posemat, i64 0, i64 0, !dbg !2992
  %call38 = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay36, [4 x float]* %arraydecay37), !dbg !2993
  br label %if.end44, !dbg !2994

if.else39:                                        ; preds = %if.else29
  %arraydecay40 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !2995
  %31 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !2996
  %pose_mat41 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %31, i32 0, i32 29, !dbg !2997
  %arraydecay42 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %pose_mat41, i64 0, i64 0, !dbg !2996
  %call43 = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay40, [4 x float]* %arraydecay42), !dbg !2998
  br label %if.end44

if.end44:                                         ; preds = %if.else39, %if.then31
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %if.then24
  %32 = load %struct.bPoseChannel*, %struct.bPoseChannel** %prev, align 8, !dbg !2999
  %tobool46 = icmp ne %struct.bPoseChannel* %32, null, !dbg !2999
  br i1 %tobool46, label %if.then47, label %if.else104, !dbg !3001

if.then47:                                        ; preds = %if.end45
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %difmat, metadata !3002, metadata !DIExpression()), !dbg !3004
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %result, metadata !3005, metadata !DIExpression()), !dbg !3006
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %imat3, metadata !3007, metadata !DIExpression()), !dbg !3008
  %33 = load i32, i32* %rest.addr, align 4, !dbg !3009
  %tobool48 = icmp ne i32 %33, 0, !dbg !3009
  br i1 %tobool48, label %if.then49, label %if.else53, !dbg !3011

if.then49:                                        ; preds = %if.then47
  %arraydecay50 = getelementptr inbounds [3 x float], [3 x float]* %h1, i64 0, i64 0, !dbg !3012
  %34 = load %struct.bPoseChannel*, %struct.bPoseChannel** %prev, align 8, !dbg !3013
  %bone51 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %34, i32 0, i32 12, !dbg !3014
  %35 = load %struct.Bone*, %struct.Bone** %bone51, align 8, !dbg !3014
  %arm_head = getelementptr inbounds %struct.Bone, %struct.Bone* %35, i32 0, i32 11, !dbg !3015
  %arraydecay52 = getelementptr inbounds [3 x float], [3 x float]* %arm_head, i64 0, i64 0, !dbg !3013
  call void @copy_v3_v3(float* %arraydecay50, float* %arraydecay52), !dbg !3016
  br label %if.end56, !dbg !3016

if.else53:                                        ; preds = %if.then47
  %arraydecay54 = getelementptr inbounds [3 x float], [3 x float]* %h1, i64 0, i64 0, !dbg !3017
  %36 = load %struct.bPoseChannel*, %struct.bPoseChannel** %prev, align 8, !dbg !3018
  %pose_head = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %36, i32 0, i32 31, !dbg !3019
  %arraydecay55 = getelementptr inbounds [3 x float], [3 x float]* %pose_head, i64 0, i64 0, !dbg !3018
  call void @copy_v3_v3(float* %arraydecay54, float* %arraydecay55), !dbg !3020
  br label %if.end56

if.end56:                                         ; preds = %if.else53, %if.then49
  %arraydecay57 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !3021
  %arraydecay58 = getelementptr inbounds [3 x float], [3 x float]* %h1, i64 0, i64 0, !dbg !3022
  call void @mul_m4_v3([4 x float]* %arraydecay57, float* %arraydecay58), !dbg !3023
  %37 = load %struct.bPoseChannel*, %struct.bPoseChannel** %prev, align 8, !dbg !3024
  %bone59 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %37, i32 0, i32 12, !dbg !3026
  %38 = load %struct.Bone*, %struct.Bone** %bone59, align 8, !dbg !3026
  %segments = getelementptr inbounds %struct.Bone, %struct.Bone* %38, i32 0, i32 26, !dbg !3027
  %39 = load i16, i16* %segments, align 4, !dbg !3027
  %conv = sext i16 %39 to i32, !dbg !3024
  %cmp60 = icmp sgt i32 %conv, 1, !dbg !3028
  br i1 %cmp60, label %if.then62, label %if.end65, !dbg !3029

if.then62:                                        ; preds = %if.end56
  %40 = load float, float* %length, align 4, !dbg !3030
  %arrayidx63 = getelementptr inbounds [3 x float], [3 x float]* %h1, i64 0, i64 1, !dbg !3032
  %41 = load float, float* %arrayidx63, align 4, !dbg !3033
  %sub64 = fsub float %41, %40, !dbg !3033
  store float %sub64, float* %arrayidx63, align 4, !dbg !3033
  store float 0.000000e+00, float* %roll1, align 4, !dbg !3034
  br label %if.end65, !dbg !3035

if.end65:                                         ; preds = %if.then62, %if.end56
  %arraydecay66 = getelementptr inbounds [3 x float], [3 x float]* %h1, i64 0, i64 0, !dbg !3036
  %call67 = call float @normalize_v3(float* %arraydecay66), !dbg !3037
  %arraydecay68 = getelementptr inbounds [3 x float], [3 x float]* %h1, i64 0, i64 0, !dbg !3038
  %42 = load float, float* %hlength1, align 4, !dbg !3039
  %fneg = fneg float %42, !dbg !3040
  call void @mul_v3_fl(float* %arraydecay68, float %fneg), !dbg !3041
  %43 = load %struct.bPoseChannel*, %struct.bPoseChannel** %prev, align 8, !dbg !3042
  %bone69 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %43, i32 0, i32 12, !dbg !3044
  %44 = load %struct.Bone*, %struct.Bone** %bone69, align 8, !dbg !3044
  %segments70 = getelementptr inbounds %struct.Bone, %struct.Bone* %44, i32 0, i32 26, !dbg !3045
  %45 = load i16, i16* %segments70, align 4, !dbg !3045
  %conv71 = sext i16 %45 to i32, !dbg !3042
  %cmp72 = icmp eq i32 %conv71, 1, !dbg !3046
  br i1 %cmp72, label %if.then74, label %if.end103, !dbg !3047

if.then74:                                        ; preds = %if.end65
  %46 = load i32, i32* %rest.addr, align 4, !dbg !3048
  %tobool75 = icmp ne i32 %46, 0, !dbg !3048
  br i1 %tobool75, label %if.then76, label %if.else82, !dbg !3051

if.then76:                                        ; preds = %if.then74
  %arraydecay77 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %difmat, i64 0, i64 0, !dbg !3052
  %arraydecay78 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !3053
  %47 = load %struct.bPoseChannel*, %struct.bPoseChannel** %prev, align 8, !dbg !3054
  %bone79 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %47, i32 0, i32 12, !dbg !3055
  %48 = load %struct.Bone*, %struct.Bone** %bone79, align 8, !dbg !3055
  %arm_mat80 = getelementptr inbounds %struct.Bone, %struct.Bone* %48, i32 0, i32 13, !dbg !3056
  %arraydecay81 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %arm_mat80, i64 0, i64 0, !dbg !3054
  call void @mul_m4_m4m4([4 x float]* %arraydecay77, [4 x float]* %arraydecay78, [4 x float]* %arraydecay81), !dbg !3057
  br label %if.end87, !dbg !3057

if.else82:                                        ; preds = %if.then74
  %arraydecay83 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %difmat, i64 0, i64 0, !dbg !3058
  %arraydecay84 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !3059
  %49 = load %struct.bPoseChannel*, %struct.bPoseChannel** %prev, align 8, !dbg !3060
  %pose_mat85 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %49, i32 0, i32 29, !dbg !3061
  %arraydecay86 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %pose_mat85, i64 0, i64 0, !dbg !3060
  call void @mul_m4_m4m4([4 x float]* %arraydecay83, [4 x float]* %arraydecay84, [4 x float]* %arraydecay86), !dbg !3062
  br label %if.end87

if.end87:                                         ; preds = %if.else82, %if.then76
  %arraydecay88 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %result, i64 0, i64 0, !dbg !3063
  %arraydecay89 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %difmat, i64 0, i64 0, !dbg !3064
  call void @copy_m3_m4([3 x float]* %arraydecay88, [4 x float]* %arraydecay89), !dbg !3065
  %arraydecay90 = getelementptr inbounds [3 x float], [3 x float]* %h1, i64 0, i64 0, !dbg !3066
  %arraydecay91 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat3, i64 0, i64 0, !dbg !3067
  call void @vec_roll_to_mat3(float* %arraydecay90, float 0.000000e+00, [3 x float]* %arraydecay91), !dbg !3068
  %arraydecay92 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat3, i64 0, i64 0, !dbg !3069
  %arraydecay93 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat3, i64 0, i64 0, !dbg !3070
  %call94 = call zeroext i8 @invert_m3_m3([3 x float]* %arraydecay92, [3 x float]* %arraydecay93), !dbg !3071
  %arraydecay95 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat3, i64 0, i64 0, !dbg !3072
  %arraydecay96 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %result, i64 0, i64 0, !dbg !3073
  %arraydecay97 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat3, i64 0, i64 0, !dbg !3074
  call void @mul_m3_m3m3([3 x float]* %arraydecay95, [3 x float]* %arraydecay96, [3 x float]* %arraydecay97), !dbg !3075
  %arrayidx98 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat3, i64 0, i64 2, !dbg !3076
  %arrayidx99 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx98, i64 0, i64 0, !dbg !3076
  %50 = load float, float* %arrayidx99, align 8, !dbg !3076
  %arrayidx100 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat3, i64 0, i64 2, !dbg !3077
  %arrayidx101 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx100, i64 0, i64 2, !dbg !3077
  %51 = load float, float* %arrayidx101, align 8, !dbg !3077
  %call102 = call float @atan2f(float %50, float %51) #7, !dbg !3078
  store float %call102, float* %roll1, align 4, !dbg !3079
  br label %if.end103, !dbg !3080

if.end103:                                        ; preds = %if.end87, %if.end65
  br label %if.end108, !dbg !3081

if.else104:                                       ; preds = %if.end45
  %arrayidx105 = getelementptr inbounds [3 x float], [3 x float]* %h1, i64 0, i64 0, !dbg !3082
  store float 0.000000e+00, float* %arrayidx105, align 4, !dbg !3084
  %52 = load float, float* %hlength1, align 4, !dbg !3085
  %arrayidx106 = getelementptr inbounds [3 x float], [3 x float]* %h1, i64 0, i64 1, !dbg !3086
  store float %52, float* %arrayidx106, align 4, !dbg !3087
  %arrayidx107 = getelementptr inbounds [3 x float], [3 x float]* %h1, i64 0, i64 2, !dbg !3088
  store float 0.000000e+00, float* %arrayidx107, align 4, !dbg !3089
  store float 0.000000e+00, float* %roll1, align 4, !dbg !3090
  br label %if.end108

if.end108:                                        ; preds = %if.else104, %if.end103
  %53 = load %struct.bPoseChannel*, %struct.bPoseChannel** %next, align 8, !dbg !3091
  %tobool109 = icmp ne %struct.bPoseChannel* %53, null, !dbg !3091
  br i1 %tobool109, label %if.then110, label %if.else167, !dbg !3093

if.then110:                                       ; preds = %if.end108
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %difmat111, metadata !3094, metadata !DIExpression()), !dbg !3096
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %result112, metadata !3097, metadata !DIExpression()), !dbg !3098
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %imat3113, metadata !3099, metadata !DIExpression()), !dbg !3100
  %54 = load i32, i32* %rest.addr, align 4, !dbg !3101
  %tobool114 = icmp ne i32 %54, 0, !dbg !3101
  br i1 %tobool114, label %if.then115, label %if.else119, !dbg !3103

if.then115:                                       ; preds = %if.then110
  %arraydecay116 = getelementptr inbounds [3 x float], [3 x float]* %h2, i64 0, i64 0, !dbg !3104
  %55 = load %struct.bPoseChannel*, %struct.bPoseChannel** %next, align 8, !dbg !3105
  %bone117 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %55, i32 0, i32 12, !dbg !3106
  %56 = load %struct.Bone*, %struct.Bone** %bone117, align 8, !dbg !3106
  %arm_tail = getelementptr inbounds %struct.Bone, %struct.Bone* %56, i32 0, i32 12, !dbg !3107
  %arraydecay118 = getelementptr inbounds [3 x float], [3 x float]* %arm_tail, i64 0, i64 0, !dbg !3105
  call void @copy_v3_v3(float* %arraydecay116, float* %arraydecay118), !dbg !3108
  br label %if.end122, !dbg !3108

if.else119:                                       ; preds = %if.then110
  %arraydecay120 = getelementptr inbounds [3 x float], [3 x float]* %h2, i64 0, i64 0, !dbg !3109
  %57 = load %struct.bPoseChannel*, %struct.bPoseChannel** %next, align 8, !dbg !3110
  %pose_tail = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %57, i32 0, i32 32, !dbg !3111
  %arraydecay121 = getelementptr inbounds [3 x float], [3 x float]* %pose_tail, i64 0, i64 0, !dbg !3110
  call void @copy_v3_v3(float* %arraydecay120, float* %arraydecay121), !dbg !3112
  br label %if.end122

if.end122:                                        ; preds = %if.else119, %if.then115
  %arraydecay123 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !3113
  %arraydecay124 = getelementptr inbounds [3 x float], [3 x float]* %h2, i64 0, i64 0, !dbg !3114
  call void @mul_m4_v3([4 x float]* %arraydecay123, float* %arraydecay124), !dbg !3115
  %58 = load %struct.bPoseChannel*, %struct.bPoseChannel** %next, align 8, !dbg !3116
  %bone125 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %58, i32 0, i32 12, !dbg !3118
  %59 = load %struct.Bone*, %struct.Bone** %bone125, align 8, !dbg !3118
  %segments126 = getelementptr inbounds %struct.Bone, %struct.Bone* %59, i32 0, i32 26, !dbg !3119
  %60 = load i16, i16* %segments126, align 4, !dbg !3119
  %conv127 = sext i16 %60 to i32, !dbg !3116
  %cmp128 = icmp sgt i32 %conv127, 1, !dbg !3120
  br i1 %cmp128, label %if.then130, label %if.else131, !dbg !3121

if.then130:                                       ; preds = %if.end122
  br label %if.end134, !dbg !3122

if.else131:                                       ; preds = %if.end122
  %61 = load float, float* %length, align 4, !dbg !3124
  %arrayidx132 = getelementptr inbounds [3 x float], [3 x float]* %h2, i64 0, i64 1, !dbg !3126
  %62 = load float, float* %arrayidx132, align 4, !dbg !3127
  %sub133 = fsub float %62, %61, !dbg !3127
  store float %sub133, float* %arrayidx132, align 4, !dbg !3127
  br label %if.end134

if.end134:                                        ; preds = %if.else131, %if.then130
  %arraydecay135 = getelementptr inbounds [3 x float], [3 x float]* %h2, i64 0, i64 0, !dbg !3128
  %call136 = call float @normalize_v3(float* %arraydecay135), !dbg !3129
  %63 = load i32, i32* %rest.addr, align 4, !dbg !3130
  %tobool137 = icmp ne i32 %63, 0, !dbg !3130
  br i1 %tobool137, label %if.then138, label %if.else144, !dbg !3132

if.then138:                                       ; preds = %if.end134
  %arraydecay139 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %difmat111, i64 0, i64 0, !dbg !3133
  %arraydecay140 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !3134
  %64 = load %struct.bPoseChannel*, %struct.bPoseChannel** %next, align 8, !dbg !3135
  %bone141 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %64, i32 0, i32 12, !dbg !3136
  %65 = load %struct.Bone*, %struct.Bone** %bone141, align 8, !dbg !3136
  %arm_mat142 = getelementptr inbounds %struct.Bone, %struct.Bone* %65, i32 0, i32 13, !dbg !3137
  %arraydecay143 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %arm_mat142, i64 0, i64 0, !dbg !3135
  call void @mul_m4_m4m4([4 x float]* %arraydecay139, [4 x float]* %arraydecay140, [4 x float]* %arraydecay143), !dbg !3138
  br label %if.end149, !dbg !3138

if.else144:                                       ; preds = %if.end134
  %arraydecay145 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %difmat111, i64 0, i64 0, !dbg !3139
  %arraydecay146 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !3140
  %66 = load %struct.bPoseChannel*, %struct.bPoseChannel** %next, align 8, !dbg !3141
  %pose_mat147 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %66, i32 0, i32 29, !dbg !3142
  %arraydecay148 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %pose_mat147, i64 0, i64 0, !dbg !3141
  call void @mul_m4_m4m4([4 x float]* %arraydecay145, [4 x float]* %arraydecay146, [4 x float]* %arraydecay148), !dbg !3143
  br label %if.end149

if.end149:                                        ; preds = %if.else144, %if.then138
  %arraydecay150 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %result112, i64 0, i64 0, !dbg !3144
  %arraydecay151 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %difmat111, i64 0, i64 0, !dbg !3145
  call void @copy_m3_m4([3 x float]* %arraydecay150, [4 x float]* %arraydecay151), !dbg !3146
  %arraydecay152 = getelementptr inbounds [3 x float], [3 x float]* %h2, i64 0, i64 0, !dbg !3147
  %arraydecay153 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat3, i64 0, i64 0, !dbg !3148
  call void @vec_roll_to_mat3(float* %arraydecay152, float 0.000000e+00, [3 x float]* %arraydecay153), !dbg !3149
  %arraydecay154 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat3113, i64 0, i64 0, !dbg !3150
  %arraydecay155 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat3, i64 0, i64 0, !dbg !3151
  %call156 = call zeroext i8 @invert_m3_m3([3 x float]* %arraydecay154, [3 x float]* %arraydecay155), !dbg !3152
  %arraydecay157 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat3, i64 0, i64 0, !dbg !3153
  %arraydecay158 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %imat3113, i64 0, i64 0, !dbg !3154
  %arraydecay159 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %result112, i64 0, i64 0, !dbg !3155
  call void @mul_m3_m3m3([3 x float]* %arraydecay157, [3 x float]* %arraydecay158, [3 x float]* %arraydecay159), !dbg !3156
  %arrayidx160 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat3, i64 0, i64 2, !dbg !3157
  %arrayidx161 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx160, i64 0, i64 0, !dbg !3157
  %67 = load float, float* %arrayidx161, align 8, !dbg !3157
  %arrayidx162 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat3, i64 0, i64 2, !dbg !3158
  %arrayidx163 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx162, i64 0, i64 2, !dbg !3158
  %68 = load float, float* %arrayidx163, align 8, !dbg !3158
  %call164 = call float @atan2f(float %67, float %68) #7, !dbg !3159
  store float %call164, float* %roll2, align 4, !dbg !3160
  %arraydecay165 = getelementptr inbounds [3 x float], [3 x float]* %h2, i64 0, i64 0, !dbg !3161
  %69 = load float, float* %hlength2, align 4, !dbg !3162
  %fneg166 = fneg float %69, !dbg !3163
  call void @mul_v3_fl(float* %arraydecay165, float %fneg166), !dbg !3164
  br label %if.end172, !dbg !3165

if.else167:                                       ; preds = %if.end108
  %arrayidx168 = getelementptr inbounds [3 x float], [3 x float]* %h2, i64 0, i64 0, !dbg !3166
  store float 0.000000e+00, float* %arrayidx168, align 4, !dbg !3168
  %70 = load float, float* %hlength2, align 4, !dbg !3169
  %fneg169 = fneg float %70, !dbg !3170
  %arrayidx170 = getelementptr inbounds [3 x float], [3 x float]* %h2, i64 0, i64 1, !dbg !3171
  store float %fneg169, float* %arrayidx170, align 4, !dbg !3172
  %arrayidx171 = getelementptr inbounds [3 x float], [3 x float]* %h2, i64 0, i64 2, !dbg !3173
  store float 0.000000e+00, float* %arrayidx171, align 4, !dbg !3174
  store float 0.000000e+00, float* %roll2, align 4, !dbg !3175
  br label %if.end172

if.end172:                                        ; preds = %if.else167, %if.end149
  %71 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !3176
  %segments173 = getelementptr inbounds %struct.Bone, %struct.Bone* %71, i32 0, i32 26, !dbg !3178
  %72 = load i16, i16* %segments173, align 4, !dbg !3178
  %conv174 = sext i16 %72 to i32, !dbg !3176
  %cmp175 = icmp sgt i32 %conv174, 32, !dbg !3179
  br i1 %cmp175, label %if.then177, label %if.end179, !dbg !3180

if.then177:                                       ; preds = %if.end172
  %73 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !3181
  %segments178 = getelementptr inbounds %struct.Bone, %struct.Bone* %73, i32 0, i32 26, !dbg !3182
  store i16 32, i16* %segments178, align 4, !dbg !3183
  br label %if.end179, !dbg !3181

if.end179:                                        ; preds = %if.then177, %if.end172
  %arrayidx180 = getelementptr inbounds [3 x float], [3 x float]* %h1, i64 0, i64 0, !dbg !3184
  %74 = load float, float* %arrayidx180, align 4, !dbg !3184
  %arrayidx181 = getelementptr inbounds [3 x float], [3 x float]* %h2, i64 0, i64 0, !dbg !3185
  %75 = load float, float* %arrayidx181, align 4, !dbg !3185
  %arrayidx182 = getelementptr inbounds [33 x [4 x float]], [33 x [4 x float]]* %data, i64 0, i64 0, !dbg !3186
  %arraydecay183 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx182, i64 0, i64 0, !dbg !3186
  call void @BKE_curve_forward_diff_bezier(float 0.000000e+00, float %74, float %75, float 0.000000e+00, float* %arraydecay183, i32 32, i32 16), !dbg !3187
  %arrayidx184 = getelementptr inbounds [3 x float], [3 x float]* %h1, i64 0, i64 1, !dbg !3188
  %76 = load float, float* %arrayidx184, align 4, !dbg !3188
  %77 = load float, float* %length, align 4, !dbg !3189
  %arrayidx185 = getelementptr inbounds [3 x float], [3 x float]* %h2, i64 0, i64 1, !dbg !3190
  %78 = load float, float* %arrayidx185, align 4, !dbg !3190
  %add = fadd float %77, %78, !dbg !3191
  %79 = load float, float* %length, align 4, !dbg !3192
  %arrayidx186 = getelementptr inbounds [33 x [4 x float]], [33 x [4 x float]]* %data, i64 0, i64 0, !dbg !3193
  %arraydecay187 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx186, i64 0, i64 0, !dbg !3193
  %add.ptr = getelementptr inbounds float, float* %arraydecay187, i64 1, !dbg !3194
  call void @BKE_curve_forward_diff_bezier(float 0.000000e+00, float %76, float %add, float %79, float* %add.ptr, i32 32, i32 16), !dbg !3195
  %arrayidx188 = getelementptr inbounds [3 x float], [3 x float]* %h1, i64 0, i64 2, !dbg !3196
  %80 = load float, float* %arrayidx188, align 4, !dbg !3196
  %arrayidx189 = getelementptr inbounds [3 x float], [3 x float]* %h2, i64 0, i64 2, !dbg !3197
  %81 = load float, float* %arrayidx189, align 4, !dbg !3197
  %arrayidx190 = getelementptr inbounds [33 x [4 x float]], [33 x [4 x float]]* %data, i64 0, i64 0, !dbg !3198
  %arraydecay191 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx190, i64 0, i64 0, !dbg !3198
  %add.ptr192 = getelementptr inbounds float, float* %arraydecay191, i64 2, !dbg !3199
  call void @BKE_curve_forward_diff_bezier(float 0.000000e+00, float %80, float %81, float 0.000000e+00, float* %add.ptr192, i32 32, i32 16), !dbg !3200
  %82 = load float, float* %roll1, align 4, !dbg !3201
  %83 = load float, float* %roll1, align 4, !dbg !3202
  %84 = load float, float* %roll2, align 4, !dbg !3203
  %85 = load float, float* %roll1, align 4, !dbg !3204
  %sub193 = fsub float %84, %85, !dbg !3205
  %mul194 = fmul float 0x3FD8FD5CC0000000, %sub193, !dbg !3206
  %add195 = fadd float %83, %mul194, !dbg !3207
  %86 = load float, float* %roll2, align 4, !dbg !3208
  %87 = load float, float* %roll2, align 4, !dbg !3209
  %88 = load float, float* %roll1, align 4, !dbg !3210
  %sub196 = fsub float %87, %88, !dbg !3211
  %mul197 = fmul float 0x3FD8FD5CC0000000, %sub196, !dbg !3212
  %sub198 = fsub float %86, %mul197, !dbg !3213
  %89 = load float, float* %roll2, align 4, !dbg !3214
  %arrayidx199 = getelementptr inbounds [33 x [4 x float]], [33 x [4 x float]]* %data, i64 0, i64 0, !dbg !3215
  %arraydecay200 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx199, i64 0, i64 0, !dbg !3215
  %add.ptr201 = getelementptr inbounds float, float* %arraydecay200, i64 3, !dbg !3216
  call void @BKE_curve_forward_diff_bezier(float %82, float %add195, float %sub198, float %89, float* %add.ptr201, i32 32, i32 16), !dbg !3217
  %arrayidx202 = getelementptr inbounds [33 x [4 x float]], [33 x [4 x float]]* %data, i64 0, i64 0, !dbg !3218
  %arraydecay203 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx202, i64 0, i64 0, !dbg !3218
  %90 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !3219
  %segments204 = getelementptr inbounds %struct.Bone, %struct.Bone* %90, i32 0, i32 26, !dbg !3220
  %91 = load i16, i16* %segments204, align 4, !dbg !3220
  %conv205 = sext i16 %91 to i32, !dbg !3219
  call void @equalize_bezier(float* %arraydecay203, i32 %conv205), !dbg !3221
  store i32 0, i32* %a, align 4, !dbg !3222
  %arrayidx206 = getelementptr inbounds [33 x [4 x float]], [33 x [4 x float]]* %data, i64 0, i64 0, !dbg !3224
  %arraydecay207 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx206, i64 0, i64 0, !dbg !3224
  store float* %arraydecay207, float** %fp, align 8, !dbg !3225
  br label %for.cond, !dbg !3226

for.cond:                                         ; preds = %for.inc, %if.end179
  %92 = load i32, i32* %a, align 4, !dbg !3227
  %93 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !3229
  %segments208 = getelementptr inbounds %struct.Bone, %struct.Bone* %93, i32 0, i32 26, !dbg !3230
  %94 = load i16, i16* %segments208, align 4, !dbg !3230
  %conv209 = sext i16 %94 to i32, !dbg !3229
  %cmp210 = icmp slt i32 %92, %conv209, !dbg !3231
  br i1 %cmp210, label %for.body, label %for.end, !dbg !3232

for.body:                                         ; preds = %for.cond
  %arraydecay212 = getelementptr inbounds [3 x float], [3 x float]* %h1, i64 0, i64 0, !dbg !3233
  %95 = load float*, float** %fp, align 8, !dbg !3235
  %add.ptr213 = getelementptr inbounds float, float* %95, i64 4, !dbg !3236
  %96 = load float*, float** %fp, align 8, !dbg !3237
  call void @sub_v3_v3v3(float* %arraydecay212, float* %add.ptr213, float* %96), !dbg !3238
  %arraydecay214 = getelementptr inbounds [3 x float], [3 x float]* %h1, i64 0, i64 0, !dbg !3239
  %97 = load float*, float** %fp, align 8, !dbg !3240
  %arrayidx215 = getelementptr inbounds float, float* %97, i64 3, !dbg !3240
  %98 = load float, float* %arrayidx215, align 4, !dbg !3240
  %arraydecay216 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat3, i64 0, i64 0, !dbg !3241
  call void @vec_roll_to_mat3(float* %arraydecay214, float %98, [3 x float]* %arraydecay216), !dbg !3242
  %99 = load %struct.Mat4*, %struct.Mat4** %result_array.addr, align 8, !dbg !3243
  %100 = load i32, i32* %a, align 4, !dbg !3244
  %idxprom = sext i32 %100 to i64, !dbg !3243
  %arrayidx217 = getelementptr inbounds %struct.Mat4, %struct.Mat4* %99, i64 %idxprom, !dbg !3243
  %mat = getelementptr inbounds %struct.Mat4, %struct.Mat4* %arrayidx217, i32 0, i32 0, !dbg !3245
  %arraydecay218 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !3243
  %arraydecay219 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %mat3, i64 0, i64 0, !dbg !3246
  call void @copy_m4_m3([4 x float]* %arraydecay218, [3 x float]* %arraydecay219), !dbg !3247
  %101 = load %struct.Mat4*, %struct.Mat4** %result_array.addr, align 8, !dbg !3248
  %102 = load i32, i32* %a, align 4, !dbg !3249
  %idxprom220 = sext i32 %102 to i64, !dbg !3248
  %arrayidx221 = getelementptr inbounds %struct.Mat4, %struct.Mat4* %101, i64 %idxprom220, !dbg !3248
  %mat222 = getelementptr inbounds %struct.Mat4, %struct.Mat4* %arrayidx221, i32 0, i32 0, !dbg !3250
  %arrayidx223 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat222, i64 0, i64 3, !dbg !3248
  %arraydecay224 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx223, i64 0, i64 0, !dbg !3248
  %103 = load float*, float** %fp, align 8, !dbg !3251
  call void @copy_v3_v3(float* %arraydecay224, float* %103), !dbg !3252
  %104 = load i8, i8* %do_scale, align 1, !dbg !3253
  %tobool225 = icmp ne i8 %104, 0, !dbg !3253
  br i1 %tobool225, label %if.then226, label %if.end237, !dbg !3255

if.then226:                                       ; preds = %for.body
  %105 = load %struct.Mat4*, %struct.Mat4** %result_array.addr, align 8, !dbg !3256
  %106 = load i32, i32* %a, align 4, !dbg !3256
  %idxprom227 = sext i32 %106 to i64, !dbg !3256
  %arrayidx228 = getelementptr inbounds %struct.Mat4, %struct.Mat4* %105, i64 %idxprom227, !dbg !3256
  %mat229 = getelementptr inbounds %struct.Mat4, %struct.Mat4* %arrayidx228, i32 0, i32 0, !dbg !3256
  %arraydecay230 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat229, i64 0, i64 0, !dbg !3256
  %arraydecay231 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %iscalemat, i64 0, i64 0, !dbg !3256
  %107 = load %struct.Mat4*, %struct.Mat4** %result_array.addr, align 8, !dbg !3256
  %108 = load i32, i32* %a, align 4, !dbg !3256
  %idxprom232 = sext i32 %108 to i64, !dbg !3256
  %arrayidx233 = getelementptr inbounds %struct.Mat4, %struct.Mat4* %107, i64 %idxprom232, !dbg !3256
  %mat234 = getelementptr inbounds %struct.Mat4, %struct.Mat4* %arrayidx233, i32 0, i32 0, !dbg !3256
  %arraydecay235 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat234, i64 0, i64 0, !dbg !3256
  %arraydecay236 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %scalemat, i64 0, i64 0, !dbg !3256
  call void @_va_mul_m4_series_4([4 x float]* %arraydecay230, [4 x float]* %arraydecay231, [4 x float]* %arraydecay235, [4 x float]* %arraydecay236), !dbg !3256
  br label %if.end237, !dbg !3258

if.end237:                                        ; preds = %if.then226, %for.body
  br label %for.inc, !dbg !3259

for.inc:                                          ; preds = %if.end237
  %109 = load i32, i32* %a, align 4, !dbg !3260
  %inc = add nsw i32 %109, 1, !dbg !3260
  store i32 %inc, i32* %a, align 4, !dbg !3260
  %110 = load float*, float** %fp, align 8, !dbg !3261
  %add.ptr238 = getelementptr inbounds float, float* %110, i64 4, !dbg !3261
  store float* %add.ptr238, float** %fp, align 8, !dbg !3261
  br label %for.cond, !dbg !3262, !llvm.loop !3263

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3265
}

declare dso_local void @mat4_to_size(float*, [4 x float]*) #2

declare dso_local void @size_to_mat4([4 x float]*, float*) #2

declare dso_local zeroext i8 @invert_m4_m4([4 x float]*, [4 x float]*) #2

declare dso_local void @copy_m4_m4([4 x float]*, [4 x float]*) #2

declare dso_local void @normalize_m4([4 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3(float* %r, float* %a) #0 !dbg !3266 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !3270, metadata !DIExpression()), !dbg !3271
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !3272, metadata !DIExpression()), !dbg !3273
  %0 = load float*, float** %a.addr, align 8, !dbg !3274
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !3274
  %1 = load float, float* %arrayidx, align 4, !dbg !3274
  %2 = load float*, float** %r.addr, align 8, !dbg !3275
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !3275
  store float %1, float* %arrayidx1, align 4, !dbg !3276
  %3 = load float*, float** %a.addr, align 8, !dbg !3277
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !3277
  %4 = load float, float* %arrayidx2, align 4, !dbg !3277
  %5 = load float*, float** %r.addr, align 8, !dbg !3278
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !3278
  store float %4, float* %arrayidx3, align 4, !dbg !3279
  %6 = load float*, float** %a.addr, align 8, !dbg !3280
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !3280
  %7 = load float, float* %arrayidx4, align 4, !dbg !3280
  %8 = load float*, float** %r.addr, align 8, !dbg !3281
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !3281
  store float %7, float* %arrayidx5, align 4, !dbg !3282
  ret void, !dbg !3283
}

declare dso_local void @mul_m4_v3([4 x float]*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3(float* %n) #0 !dbg !3284 {
entry:
  %n.addr = alloca float*, align 8
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !3287, metadata !DIExpression()), !dbg !3288
  %0 = load float*, float** %n.addr, align 8, !dbg !3289
  %1 = load float*, float** %n.addr, align 8, !dbg !3290
  %call = call float @normalize_v3_v3(float* %0, float* %1), !dbg !3291
  ret float %call, !dbg !3292
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_fl(float* %r, float %f) #0 !dbg !3293 {
entry:
  %r.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !3296, metadata !DIExpression()), !dbg !3297
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !3298, metadata !DIExpression()), !dbg !3299
  %0 = load float, float* %f.addr, align 4, !dbg !3300
  %1 = load float*, float** %r.addr, align 8, !dbg !3301
  %arrayidx = getelementptr inbounds float, float* %1, i64 0, !dbg !3301
  %2 = load float, float* %arrayidx, align 4, !dbg !3302
  %mul = fmul float %2, %0, !dbg !3302
  store float %mul, float* %arrayidx, align 4, !dbg !3302
  %3 = load float, float* %f.addr, align 4, !dbg !3303
  %4 = load float*, float** %r.addr, align 8, !dbg !3304
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 1, !dbg !3304
  %5 = load float, float* %arrayidx1, align 4, !dbg !3305
  %mul2 = fmul float %5, %3, !dbg !3305
  store float %mul2, float* %arrayidx1, align 4, !dbg !3305
  %6 = load float, float* %f.addr, align 4, !dbg !3306
  %7 = load float*, float** %r.addr, align 8, !dbg !3307
  %arrayidx3 = getelementptr inbounds float, float* %7, i64 2, !dbg !3307
  %8 = load float, float* %arrayidx3, align 4, !dbg !3308
  %mul4 = fmul float %8, %6, !dbg !3308
  store float %mul4, float* %arrayidx3, align 4, !dbg !3308
  ret void, !dbg !3309
}

declare dso_local void @mul_m4_m4m4([4 x float]*, [4 x float]*, [4 x float]*) #2

declare dso_local void @copy_m3_m4([3 x float]*, [4 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @vec_roll_to_mat3(float* %vec, float %roll, [3 x float]* %mat) #0 !dbg !3310 {
entry:
  %vec.addr = alloca float*, align 8
  %roll.addr = alloca float, align 4
  %mat.addr = alloca [3 x float]*, align 8
  %nor = alloca [3 x float], align 4
  store float* %vec, float** %vec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec.addr, metadata !3313, metadata !DIExpression()), !dbg !3314
  store float %roll, float* %roll.addr, align 4
  call void @llvm.dbg.declare(metadata float* %roll.addr, metadata !3315, metadata !DIExpression()), !dbg !3316
  store [3 x float]* %mat, [3 x float]** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %mat.addr, metadata !3317, metadata !DIExpression()), !dbg !3318
  call void @llvm.dbg.declare(metadata [3 x float]* %nor, metadata !3319, metadata !DIExpression()), !dbg !3320
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !3321
  %0 = load float*, float** %vec.addr, align 8, !dbg !3322
  %call = call float @normalize_v3_v3(float* %arraydecay, float* %0), !dbg !3323
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %nor, i64 0, i64 0, !dbg !3324
  %1 = load float, float* %roll.addr, align 4, !dbg !3325
  %2 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !3326
  call void @vec_roll_to_mat3_normalized(float* %arraydecay1, float %1, [3 x float]* %2), !dbg !3327
  ret void, !dbg !3328
}

declare dso_local zeroext i8 @invert_m3_m3([3 x float]*, [3 x float]*) #2

declare dso_local void @mul_m3_m3m3([3 x float]*, [3 x float]*, [3 x float]*) #2

; Function Attrs: nounwind
declare dso_local float @atan2f(float, float) #5

declare dso_local void @BKE_curve_forward_diff_bezier(float, float, float, float, float*, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @equalize_bezier(float* %data, i32 %desired) #0 !dbg !3329 {
entry:
  %data.addr = alloca float*, align 8
  %desired.addr = alloca i32, align 4
  %fp = alloca float*, align 8
  %totdist = alloca float, align 4
  %ddist = alloca float, align 4
  %dist = alloca float, align 4
  %fac1 = alloca float, align 4
  %fac2 = alloca float, align 4
  %pdist = alloca [33 x float], align 16
  %temp = alloca [33 x [4 x float]], align 16
  %a = alloca i32, align 4
  %nr = alloca i32, align 4
  store float* %data, float** %data.addr, align 8
  call void @llvm.dbg.declare(metadata float** %data.addr, metadata !3332, metadata !DIExpression()), !dbg !3333
  store i32 %desired, i32* %desired.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %desired.addr, metadata !3334, metadata !DIExpression()), !dbg !3335
  call void @llvm.dbg.declare(metadata float** %fp, metadata !3336, metadata !DIExpression()), !dbg !3337
  call void @llvm.dbg.declare(metadata float* %totdist, metadata !3338, metadata !DIExpression()), !dbg !3339
  call void @llvm.dbg.declare(metadata float* %ddist, metadata !3340, metadata !DIExpression()), !dbg !3341
  call void @llvm.dbg.declare(metadata float* %dist, metadata !3342, metadata !DIExpression()), !dbg !3343
  call void @llvm.dbg.declare(metadata float* %fac1, metadata !3344, metadata !DIExpression()), !dbg !3345
  call void @llvm.dbg.declare(metadata float* %fac2, metadata !3346, metadata !DIExpression()), !dbg !3347
  call void @llvm.dbg.declare(metadata [33 x float]* %pdist, metadata !3348, metadata !DIExpression()), !dbg !3351
  call void @llvm.dbg.declare(metadata [33 x [4 x float]]* %temp, metadata !3352, metadata !DIExpression()), !dbg !3353
  call void @llvm.dbg.declare(metadata i32* %a, metadata !3354, metadata !DIExpression()), !dbg !3355
  call void @llvm.dbg.declare(metadata i32* %nr, metadata !3356, metadata !DIExpression()), !dbg !3357
  %arrayidx = getelementptr inbounds [33 x float], [33 x float]* %pdist, i64 0, i64 0, !dbg !3358
  store float 0.000000e+00, float* %arrayidx, align 16, !dbg !3359
  store i32 0, i32* %a, align 4, !dbg !3360
  %0 = load float*, float** %data.addr, align 8, !dbg !3362
  store float* %0, float** %fp, align 8, !dbg !3363
  br label %for.cond, !dbg !3364

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %a, align 4, !dbg !3365
  %cmp = icmp slt i32 %1, 32, !dbg !3367
  br i1 %cmp, label %for.body, label %for.end, !dbg !3368

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %a, align 4, !dbg !3369
  %idxprom = sext i32 %2 to i64, !dbg !3371
  %arrayidx1 = getelementptr inbounds [33 x [4 x float]], [33 x [4 x float]]* %temp, i64 0, i64 %idxprom, !dbg !3371
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %arrayidx1, i64 0, i64 0, !dbg !3371
  %3 = load float*, float** %fp, align 8, !dbg !3372
  call void @copy_qt_qt(float* %arraydecay, float* %3), !dbg !3373
  %4 = load i32, i32* %a, align 4, !dbg !3374
  %idxprom2 = sext i32 %4 to i64, !dbg !3375
  %arrayidx3 = getelementptr inbounds [33 x float], [33 x float]* %pdist, i64 0, i64 %idxprom2, !dbg !3375
  %5 = load float, float* %arrayidx3, align 4, !dbg !3375
  %6 = load float*, float** %fp, align 8, !dbg !3376
  %7 = load float*, float** %fp, align 8, !dbg !3377
  %add.ptr = getelementptr inbounds float, float* %7, i64 4, !dbg !3378
  %call = call float @len_v3v3(float* %6, float* %add.ptr), !dbg !3379
  %add = fadd float %5, %call, !dbg !3380
  %8 = load i32, i32* %a, align 4, !dbg !3381
  %add4 = add nsw i32 %8, 1, !dbg !3382
  %idxprom5 = sext i32 %add4 to i64, !dbg !3383
  %arrayidx6 = getelementptr inbounds [33 x float], [33 x float]* %pdist, i64 0, i64 %idxprom5, !dbg !3383
  store float %add, float* %arrayidx6, align 4, !dbg !3384
  br label %for.inc, !dbg !3385

for.inc:                                          ; preds = %for.body
  %9 = load i32, i32* %a, align 4, !dbg !3386
  %inc = add nsw i32 %9, 1, !dbg !3386
  store i32 %inc, i32* %a, align 4, !dbg !3386
  %10 = load float*, float** %fp, align 8, !dbg !3387
  %add.ptr7 = getelementptr inbounds float, float* %10, i64 4, !dbg !3387
  store float* %add.ptr7, float** %fp, align 8, !dbg !3387
  br label %for.cond, !dbg !3388, !llvm.loop !3389

for.end:                                          ; preds = %for.cond
  %11 = load i32, i32* %a, align 4, !dbg !3391
  %idxprom8 = sext i32 %11 to i64, !dbg !3392
  %arrayidx9 = getelementptr inbounds [33 x [4 x float]], [33 x [4 x float]]* %temp, i64 0, i64 %idxprom8, !dbg !3392
  %arraydecay10 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx9, i64 0, i64 0, !dbg !3392
  %12 = load float*, float** %fp, align 8, !dbg !3393
  call void @copy_qt_qt(float* %arraydecay10, float* %12), !dbg !3394
  %13 = load i32, i32* %a, align 4, !dbg !3395
  %idxprom11 = sext i32 %13 to i64, !dbg !3396
  %arrayidx12 = getelementptr inbounds [33 x float], [33 x float]* %pdist, i64 0, i64 %idxprom11, !dbg !3396
  %14 = load float, float* %arrayidx12, align 4, !dbg !3396
  store float %14, float* %totdist, align 4, !dbg !3397
  %15 = load float, float* %totdist, align 4, !dbg !3398
  %16 = load i32, i32* %desired.addr, align 4, !dbg !3399
  %conv = sitofp i32 %16 to float, !dbg !3400
  %div = fdiv float %15, %conv, !dbg !3401
  store float %div, float* %ddist, align 4, !dbg !3402
  store i32 1, i32* %nr, align 4, !dbg !3403
  store i32 1, i32* %a, align 4, !dbg !3404
  %17 = load float*, float** %data.addr, align 8, !dbg !3406
  %add.ptr13 = getelementptr inbounds float, float* %17, i64 4, !dbg !3407
  store float* %add.ptr13, float** %fp, align 8, !dbg !3408
  br label %for.cond14, !dbg !3409

for.cond14:                                       ; preds = %for.inc80, %for.end
  %18 = load i32, i32* %a, align 4, !dbg !3410
  %19 = load i32, i32* %desired.addr, align 4, !dbg !3412
  %cmp15 = icmp slt i32 %18, %19, !dbg !3413
  br i1 %cmp15, label %for.body17, label %for.end83, !dbg !3414

for.body17:                                       ; preds = %for.cond14
  %20 = load i32, i32* %a, align 4, !dbg !3415
  %conv18 = sitofp i32 %20 to float, !dbg !3417
  %21 = load float, float* %ddist, align 4, !dbg !3418
  %mul = fmul float %conv18, %21, !dbg !3419
  store float %mul, float* %dist, align 4, !dbg !3420
  br label %while.cond, !dbg !3421

while.cond:                                       ; preds = %while.body, %for.body17
  %22 = load i32, i32* %nr, align 4, !dbg !3422
  %cmp19 = icmp slt i32 %22, 32, !dbg !3423
  br i1 %cmp19, label %land.rhs, label %land.end, !dbg !3424

land.rhs:                                         ; preds = %while.cond
  %23 = load float, float* %dist, align 4, !dbg !3425
  %24 = load i32, i32* %nr, align 4, !dbg !3426
  %idxprom21 = sext i32 %24 to i64, !dbg !3427
  %arrayidx22 = getelementptr inbounds [33 x float], [33 x float]* %pdist, i64 0, i64 %idxprom21, !dbg !3427
  %25 = load float, float* %arrayidx22, align 4, !dbg !3427
  %cmp23 = fcmp oge float %23, %25, !dbg !3428
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %26 = phi i1 [ false, %while.cond ], [ %cmp23, %land.rhs ], !dbg !3429
  br i1 %26, label %while.body, label %while.end, !dbg !3421

while.body:                                       ; preds = %land.end
  %27 = load i32, i32* %nr, align 4, !dbg !3430
  %inc25 = add nsw i32 %27, 1, !dbg !3430
  store i32 %inc25, i32* %nr, align 4, !dbg !3430
  br label %while.cond, !dbg !3421, !llvm.loop !3431

while.end:                                        ; preds = %land.end
  %28 = load i32, i32* %nr, align 4, !dbg !3432
  %idxprom26 = sext i32 %28 to i64, !dbg !3433
  %arrayidx27 = getelementptr inbounds [33 x float], [33 x float]* %pdist, i64 0, i64 %idxprom26, !dbg !3433
  %29 = load float, float* %arrayidx27, align 4, !dbg !3433
  %30 = load i32, i32* %nr, align 4, !dbg !3434
  %sub = sub nsw i32 %30, 1, !dbg !3435
  %idxprom28 = sext i32 %sub to i64, !dbg !3436
  %arrayidx29 = getelementptr inbounds [33 x float], [33 x float]* %pdist, i64 0, i64 %idxprom28, !dbg !3436
  %31 = load float, float* %arrayidx29, align 4, !dbg !3436
  %sub30 = fsub float %29, %31, !dbg !3437
  store float %sub30, float* %fac1, align 4, !dbg !3438
  %32 = load i32, i32* %nr, align 4, !dbg !3439
  %idxprom31 = sext i32 %32 to i64, !dbg !3440
  %arrayidx32 = getelementptr inbounds [33 x float], [33 x float]* %pdist, i64 0, i64 %idxprom31, !dbg !3440
  %33 = load float, float* %arrayidx32, align 4, !dbg !3440
  %34 = load float, float* %dist, align 4, !dbg !3441
  %sub33 = fsub float %33, %34, !dbg !3442
  store float %sub33, float* %fac2, align 4, !dbg !3443
  %35 = load float, float* %fac2, align 4, !dbg !3444
  %36 = load float, float* %fac1, align 4, !dbg !3445
  %div34 = fdiv float %35, %36, !dbg !3446
  store float %div34, float* %fac1, align 4, !dbg !3447
  %37 = load float, float* %fac1, align 4, !dbg !3448
  %sub35 = fsub float 1.000000e+00, %37, !dbg !3449
  store float %sub35, float* %fac2, align 4, !dbg !3450
  %38 = load float, float* %fac1, align 4, !dbg !3451
  %39 = load i32, i32* %nr, align 4, !dbg !3452
  %sub36 = sub nsw i32 %39, 1, !dbg !3453
  %idxprom37 = sext i32 %sub36 to i64, !dbg !3454
  %arrayidx38 = getelementptr inbounds [33 x [4 x float]], [33 x [4 x float]]* %temp, i64 0, i64 %idxprom37, !dbg !3454
  %arrayidx39 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx38, i64 0, i64 0, !dbg !3454
  %40 = load float, float* %arrayidx39, align 16, !dbg !3454
  %mul40 = fmul float %38, %40, !dbg !3455
  %41 = load float, float* %fac2, align 4, !dbg !3456
  %42 = load i32, i32* %nr, align 4, !dbg !3457
  %idxprom41 = sext i32 %42 to i64, !dbg !3458
  %arrayidx42 = getelementptr inbounds [33 x [4 x float]], [33 x [4 x float]]* %temp, i64 0, i64 %idxprom41, !dbg !3458
  %arrayidx43 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx42, i64 0, i64 0, !dbg !3458
  %43 = load float, float* %arrayidx43, align 16, !dbg !3458
  %mul44 = fmul float %41, %43, !dbg !3459
  %add45 = fadd float %mul40, %mul44, !dbg !3460
  %44 = load float*, float** %fp, align 8, !dbg !3461
  %arrayidx46 = getelementptr inbounds float, float* %44, i64 0, !dbg !3461
  store float %add45, float* %arrayidx46, align 4, !dbg !3462
  %45 = load float, float* %fac1, align 4, !dbg !3463
  %46 = load i32, i32* %nr, align 4, !dbg !3464
  %sub47 = sub nsw i32 %46, 1, !dbg !3465
  %idxprom48 = sext i32 %sub47 to i64, !dbg !3466
  %arrayidx49 = getelementptr inbounds [33 x [4 x float]], [33 x [4 x float]]* %temp, i64 0, i64 %idxprom48, !dbg !3466
  %arrayidx50 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx49, i64 0, i64 1, !dbg !3466
  %47 = load float, float* %arrayidx50, align 4, !dbg !3466
  %mul51 = fmul float %45, %47, !dbg !3467
  %48 = load float, float* %fac2, align 4, !dbg !3468
  %49 = load i32, i32* %nr, align 4, !dbg !3469
  %idxprom52 = sext i32 %49 to i64, !dbg !3470
  %arrayidx53 = getelementptr inbounds [33 x [4 x float]], [33 x [4 x float]]* %temp, i64 0, i64 %idxprom52, !dbg !3470
  %arrayidx54 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx53, i64 0, i64 1, !dbg !3470
  %50 = load float, float* %arrayidx54, align 4, !dbg !3470
  %mul55 = fmul float %48, %50, !dbg !3471
  %add56 = fadd float %mul51, %mul55, !dbg !3472
  %51 = load float*, float** %fp, align 8, !dbg !3473
  %arrayidx57 = getelementptr inbounds float, float* %51, i64 1, !dbg !3473
  store float %add56, float* %arrayidx57, align 4, !dbg !3474
  %52 = load float, float* %fac1, align 4, !dbg !3475
  %53 = load i32, i32* %nr, align 4, !dbg !3476
  %sub58 = sub nsw i32 %53, 1, !dbg !3477
  %idxprom59 = sext i32 %sub58 to i64, !dbg !3478
  %arrayidx60 = getelementptr inbounds [33 x [4 x float]], [33 x [4 x float]]* %temp, i64 0, i64 %idxprom59, !dbg !3478
  %arrayidx61 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx60, i64 0, i64 2, !dbg !3478
  %54 = load float, float* %arrayidx61, align 8, !dbg !3478
  %mul62 = fmul float %52, %54, !dbg !3479
  %55 = load float, float* %fac2, align 4, !dbg !3480
  %56 = load i32, i32* %nr, align 4, !dbg !3481
  %idxprom63 = sext i32 %56 to i64, !dbg !3482
  %arrayidx64 = getelementptr inbounds [33 x [4 x float]], [33 x [4 x float]]* %temp, i64 0, i64 %idxprom63, !dbg !3482
  %arrayidx65 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx64, i64 0, i64 2, !dbg !3482
  %57 = load float, float* %arrayidx65, align 8, !dbg !3482
  %mul66 = fmul float %55, %57, !dbg !3483
  %add67 = fadd float %mul62, %mul66, !dbg !3484
  %58 = load float*, float** %fp, align 8, !dbg !3485
  %arrayidx68 = getelementptr inbounds float, float* %58, i64 2, !dbg !3485
  store float %add67, float* %arrayidx68, align 4, !dbg !3486
  %59 = load float, float* %fac1, align 4, !dbg !3487
  %60 = load i32, i32* %nr, align 4, !dbg !3488
  %sub69 = sub nsw i32 %60, 1, !dbg !3489
  %idxprom70 = sext i32 %sub69 to i64, !dbg !3490
  %arrayidx71 = getelementptr inbounds [33 x [4 x float]], [33 x [4 x float]]* %temp, i64 0, i64 %idxprom70, !dbg !3490
  %arrayidx72 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx71, i64 0, i64 3, !dbg !3490
  %61 = load float, float* %arrayidx72, align 4, !dbg !3490
  %mul73 = fmul float %59, %61, !dbg !3491
  %62 = load float, float* %fac2, align 4, !dbg !3492
  %63 = load i32, i32* %nr, align 4, !dbg !3493
  %idxprom74 = sext i32 %63 to i64, !dbg !3494
  %arrayidx75 = getelementptr inbounds [33 x [4 x float]], [33 x [4 x float]]* %temp, i64 0, i64 %idxprom74, !dbg !3494
  %arrayidx76 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx75, i64 0, i64 3, !dbg !3494
  %64 = load float, float* %arrayidx76, align 4, !dbg !3494
  %mul77 = fmul float %62, %64, !dbg !3495
  %add78 = fadd float %mul73, %mul77, !dbg !3496
  %65 = load float*, float** %fp, align 8, !dbg !3497
  %arrayidx79 = getelementptr inbounds float, float* %65, i64 3, !dbg !3497
  store float %add78, float* %arrayidx79, align 4, !dbg !3498
  br label %for.inc80, !dbg !3499

for.inc80:                                        ; preds = %while.end
  %66 = load i32, i32* %a, align 4, !dbg !3500
  %inc81 = add nsw i32 %66, 1, !dbg !3500
  store i32 %inc81, i32* %a, align 4, !dbg !3500
  %67 = load float*, float** %fp, align 8, !dbg !3501
  %add.ptr82 = getelementptr inbounds float, float* %67, i64 4, !dbg !3501
  store float* %add.ptr82, float** %fp, align 8, !dbg !3501
  br label %for.cond14, !dbg !3502, !llvm.loop !3503

for.end83:                                        ; preds = %for.cond14
  %68 = load float*, float** %fp, align 8, !dbg !3505
  %arrayidx84 = getelementptr inbounds [33 x [4 x float]], [33 x [4 x float]]* %temp, i64 0, i64 32, !dbg !3506
  %arraydecay85 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx84, i64 0, i64 0, !dbg !3506
  call void @copy_qt_qt(float* %68, float* %arraydecay85), !dbg !3507
  ret void, !dbg !3508
}

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !3509 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !3512, metadata !DIExpression()), !dbg !3513
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !3514, metadata !DIExpression()), !dbg !3515
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !3516, metadata !DIExpression()), !dbg !3517
  %0 = load float*, float** %a.addr, align 8, !dbg !3518
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !3518
  %1 = load float, float* %arrayidx, align 4, !dbg !3518
  %2 = load float*, float** %b.addr, align 8, !dbg !3519
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !3519
  %3 = load float, float* %arrayidx1, align 4, !dbg !3519
  %sub = fsub float %1, %3, !dbg !3520
  %4 = load float*, float** %r.addr, align 8, !dbg !3521
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !3521
  store float %sub, float* %arrayidx2, align 4, !dbg !3522
  %5 = load float*, float** %a.addr, align 8, !dbg !3523
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !3523
  %6 = load float, float* %arrayidx3, align 4, !dbg !3523
  %7 = load float*, float** %b.addr, align 8, !dbg !3524
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !3524
  %8 = load float, float* %arrayidx4, align 4, !dbg !3524
  %sub5 = fsub float %6, %8, !dbg !3525
  %9 = load float*, float** %r.addr, align 8, !dbg !3526
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !3526
  store float %sub5, float* %arrayidx6, align 4, !dbg !3527
  %10 = load float*, float** %a.addr, align 8, !dbg !3528
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !3528
  %11 = load float, float* %arrayidx7, align 4, !dbg !3528
  %12 = load float*, float** %b.addr, align 8, !dbg !3529
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !3529
  %13 = load float, float* %arrayidx8, align 4, !dbg !3529
  %sub9 = fsub float %11, %13, !dbg !3530
  %14 = load float*, float** %r.addr, align 8, !dbg !3531
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !3531
  store float %sub9, float* %arrayidx10, align 4, !dbg !3532
  ret void, !dbg !3533
}

declare dso_local void @copy_m4_m3([4 x float]*, [3 x float]*) #2

declare dso_local void @_va_mul_m4_series_4([4 x float]*, [4 x float]*, [4 x float]*, [4 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local float @distfactor_to_bone(float* %vec, float* %b1, float* %b2, float %rad1, float %rad2, float %rdist) #0 !dbg !3534 {
entry:
  %retval = alloca float, align 4
  %vec.addr = alloca float*, align 8
  %b1.addr = alloca float*, align 8
  %b2.addr = alloca float*, align 8
  %rad1.addr = alloca float, align 4
  %rad2.addr = alloca float, align 4
  %rdist.addr = alloca float, align 4
  %dist_sq = alloca float, align 4
  %bdelta = alloca [3 x float], align 4
  %pdelta = alloca [3 x float], align 4
  %hsqr = alloca float, align 4
  %a = alloca float, align 4
  %l = alloca float, align 4
  %rad = alloca float, align 4
  store float* %vec, float** %vec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec.addr, metadata !3537, metadata !DIExpression()), !dbg !3538
  store float* %b1, float** %b1.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b1.addr, metadata !3539, metadata !DIExpression()), !dbg !3540
  store float* %b2, float** %b2.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b2.addr, metadata !3541, metadata !DIExpression()), !dbg !3542
  store float %rad1, float* %rad1.addr, align 4
  call void @llvm.dbg.declare(metadata float* %rad1.addr, metadata !3543, metadata !DIExpression()), !dbg !3544
  store float %rad2, float* %rad2.addr, align 4
  call void @llvm.dbg.declare(metadata float* %rad2.addr, metadata !3545, metadata !DIExpression()), !dbg !3546
  store float %rdist, float* %rdist.addr, align 4
  call void @llvm.dbg.declare(metadata float* %rdist.addr, metadata !3547, metadata !DIExpression()), !dbg !3548
  call void @llvm.dbg.declare(metadata float* %dist_sq, metadata !3549, metadata !DIExpression()), !dbg !3550
  call void @llvm.dbg.declare(metadata [3 x float]* %bdelta, metadata !3551, metadata !DIExpression()), !dbg !3552
  call void @llvm.dbg.declare(metadata [3 x float]* %pdelta, metadata !3553, metadata !DIExpression()), !dbg !3554
  call void @llvm.dbg.declare(metadata float* %hsqr, metadata !3555, metadata !DIExpression()), !dbg !3556
  call void @llvm.dbg.declare(metadata float* %a, metadata !3557, metadata !DIExpression()), !dbg !3558
  call void @llvm.dbg.declare(metadata float* %l, metadata !3559, metadata !DIExpression()), !dbg !3560
  call void @llvm.dbg.declare(metadata float* %rad, metadata !3561, metadata !DIExpression()), !dbg !3562
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %bdelta, i64 0, i64 0, !dbg !3563
  %0 = load float*, float** %b2.addr, align 8, !dbg !3564
  %1 = load float*, float** %b1.addr, align 8, !dbg !3565
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !3566
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %bdelta, i64 0, i64 0, !dbg !3567
  %call = call float @normalize_v3(float* %arraydecay1), !dbg !3568
  store float %call, float* %l, align 4, !dbg !3569
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %pdelta, i64 0, i64 0, !dbg !3570
  %2 = load float*, float** %vec.addr, align 8, !dbg !3571
  %3 = load float*, float** %b1.addr, align 8, !dbg !3572
  call void @sub_v3_v3v3(float* %arraydecay2, float* %2, float* %3), !dbg !3573
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %bdelta, i64 0, i64 0, !dbg !3574
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %pdelta, i64 0, i64 0, !dbg !3575
  %call5 = call float @dot_v3v3(float* %arraydecay3, float* %arraydecay4), !dbg !3576
  store float %call5, float* %a, align 4, !dbg !3577
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %pdelta, i64 0, i64 0, !dbg !3578
  %call7 = call float @len_squared_v3(float* %arraydecay6), !dbg !3579
  store float %call7, float* %hsqr, align 4, !dbg !3580
  %4 = load float, float* %a, align 4, !dbg !3581
  %cmp = fcmp olt float %4, 0.000000e+00, !dbg !3583
  br i1 %cmp, label %if.then, label %if.else, !dbg !3584

if.then:                                          ; preds = %entry
  %5 = load float*, float** %b1.addr, align 8, !dbg !3585
  %6 = load float*, float** %vec.addr, align 8, !dbg !3587
  %call8 = call float @len_squared_v3v3(float* %5, float* %6), !dbg !3588
  store float %call8, float* %dist_sq, align 4, !dbg !3589
  %7 = load float, float* %rad1.addr, align 4, !dbg !3590
  store float %7, float* %rad, align 4, !dbg !3591
  br label %if.end20, !dbg !3592

if.else:                                          ; preds = %entry
  %8 = load float, float* %a, align 4, !dbg !3593
  %9 = load float, float* %l, align 4, !dbg !3595
  %cmp9 = fcmp ogt float %8, %9, !dbg !3596
  br i1 %cmp9, label %if.then10, label %if.else12, !dbg !3597

if.then10:                                        ; preds = %if.else
  %10 = load float*, float** %b2.addr, align 8, !dbg !3598
  %11 = load float*, float** %vec.addr, align 8, !dbg !3600
  %call11 = call float @len_squared_v3v3(float* %10, float* %11), !dbg !3601
  store float %call11, float* %dist_sq, align 4, !dbg !3602
  %12 = load float, float* %rad2.addr, align 4, !dbg !3603
  store float %12, float* %rad, align 4, !dbg !3604
  br label %if.end19, !dbg !3605

if.else12:                                        ; preds = %if.else
  %13 = load float, float* %hsqr, align 4, !dbg !3606
  %14 = load float, float* %a, align 4, !dbg !3608
  %15 = load float, float* %a, align 4, !dbg !3609
  %mul = fmul float %14, %15, !dbg !3610
  %sub = fsub float %13, %mul, !dbg !3611
  store float %sub, float* %dist_sq, align 4, !dbg !3612
  %16 = load float, float* %l, align 4, !dbg !3613
  %cmp13 = fcmp une float %16, 0.000000e+00, !dbg !3615
  br i1 %cmp13, label %if.then14, label %if.else18, !dbg !3616

if.then14:                                        ; preds = %if.else12
  %17 = load float, float* %a, align 4, !dbg !3617
  %18 = load float, float* %l, align 4, !dbg !3619
  %div = fdiv float %17, %18, !dbg !3620
  store float %div, float* %rad, align 4, !dbg !3621
  %19 = load float, float* %rad, align 4, !dbg !3622
  %20 = load float, float* %rad2.addr, align 4, !dbg !3623
  %mul15 = fmul float %19, %20, !dbg !3624
  %21 = load float, float* %rad, align 4, !dbg !3625
  %sub16 = fsub float 1.000000e+00, %21, !dbg !3626
  %22 = load float, float* %rad1.addr, align 4, !dbg !3627
  %mul17 = fmul float %sub16, %22, !dbg !3628
  %add = fadd float %mul15, %mul17, !dbg !3629
  store float %add, float* %rad, align 4, !dbg !3630
  br label %if.end, !dbg !3631

if.else18:                                        ; preds = %if.else12
  %23 = load float, float* %rad1.addr, align 4, !dbg !3632
  store float %23, float* %rad, align 4, !dbg !3633
  br label %if.end

if.end:                                           ; preds = %if.else18, %if.then14
  br label %if.end19

if.end19:                                         ; preds = %if.end, %if.then10
  br label %if.end20

if.end20:                                         ; preds = %if.end19, %if.then
  %24 = load float, float* %rad, align 4, !dbg !3634
  %25 = load float, float* %rad, align 4, !dbg !3635
  %mul21 = fmul float %24, %25, !dbg !3636
  store float %mul21, float* %a, align 4, !dbg !3637
  %26 = load float, float* %dist_sq, align 4, !dbg !3638
  %27 = load float, float* %a, align 4, !dbg !3640
  %cmp22 = fcmp olt float %26, %27, !dbg !3641
  br i1 %cmp22, label %if.then23, label %if.else24, !dbg !3642

if.then23:                                        ; preds = %if.end20
  store float 1.000000e+00, float* %retval, align 4, !dbg !3643
  br label %return, !dbg !3643

if.else24:                                        ; preds = %if.end20
  %28 = load float, float* %rad, align 4, !dbg !3644
  %29 = load float, float* %rdist.addr, align 4, !dbg !3646
  %add25 = fadd float %28, %29, !dbg !3647
  store float %add25, float* %l, align 4, !dbg !3648
  %30 = load float, float* %l, align 4, !dbg !3649
  %31 = load float, float* %l, align 4, !dbg !3650
  %mul26 = fmul float %31, %30, !dbg !3650
  store float %mul26, float* %l, align 4, !dbg !3650
  %32 = load float, float* %rdist.addr, align 4, !dbg !3651
  %cmp27 = fcmp oeq float %32, 0.000000e+00, !dbg !3653
  br i1 %cmp27, label %if.then29, label %lor.lhs.false, !dbg !3654

lor.lhs.false:                                    ; preds = %if.else24
  %33 = load float, float* %dist_sq, align 4, !dbg !3655
  %34 = load float, float* %l, align 4, !dbg !3656
  %cmp28 = fcmp oge float %33, %34, !dbg !3657
  br i1 %cmp28, label %if.then29, label %if.else30, !dbg !3658

if.then29:                                        ; preds = %lor.lhs.false, %if.else24
  store float 0.000000e+00, float* %retval, align 4, !dbg !3659
  br label %return, !dbg !3659

if.else30:                                        ; preds = %lor.lhs.false
  %35 = load float, float* %dist_sq, align 4, !dbg !3660
  %call31 = call float @sqrtf(float %35) #7, !dbg !3662
  %36 = load float, float* %rad, align 4, !dbg !3663
  %sub32 = fsub float %call31, %36, !dbg !3664
  store float %sub32, float* %a, align 4, !dbg !3665
  %37 = load float, float* %a, align 4, !dbg !3666
  %38 = load float, float* %a, align 4, !dbg !3667
  %mul33 = fmul float %37, %38, !dbg !3668
  %39 = load float, float* %rdist.addr, align 4, !dbg !3669
  %40 = load float, float* %rdist.addr, align 4, !dbg !3670
  %mul34 = fmul float %39, %40, !dbg !3671
  %div35 = fdiv float %mul33, %mul34, !dbg !3672
  %sub36 = fsub float 1.000000e+00, %div35, !dbg !3673
  store float %sub36, float* %retval, align 4, !dbg !3674
  br label %return, !dbg !3674

return:                                           ; preds = %if.else30, %if.then29, %if.then23
  %41 = load float, float* %retval, align 4, !dbg !3675
  ret float %41, !dbg !3675
}

; Function Attrs: noinline nounwind uwtable
define internal float @dot_v3v3(float* %a, float* %b) #0 !dbg !3676 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !3679, metadata !DIExpression()), !dbg !3680
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !3681, metadata !DIExpression()), !dbg !3682
  %0 = load float*, float** %a.addr, align 8, !dbg !3683
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !3683
  %1 = load float, float* %arrayidx, align 4, !dbg !3683
  %2 = load float*, float** %b.addr, align 8, !dbg !3684
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !3684
  %3 = load float, float* %arrayidx1, align 4, !dbg !3684
  %mul = fmul float %1, %3, !dbg !3685
  %4 = load float*, float** %a.addr, align 8, !dbg !3686
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !3686
  %5 = load float, float* %arrayidx2, align 4, !dbg !3686
  %6 = load float*, float** %b.addr, align 8, !dbg !3687
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !3687
  %7 = load float, float* %arrayidx3, align 4, !dbg !3687
  %mul4 = fmul float %5, %7, !dbg !3688
  %add = fadd float %mul, %mul4, !dbg !3689
  %8 = load float*, float** %a.addr, align 8, !dbg !3690
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !3690
  %9 = load float, float* %arrayidx5, align 4, !dbg !3690
  %10 = load float*, float** %b.addr, align 8, !dbg !3691
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !3691
  %11 = load float, float* %arrayidx6, align 4, !dbg !3691
  %mul7 = fmul float %9, %11, !dbg !3692
  %add8 = fadd float %add, %mul7, !dbg !3693
  ret float %add8, !dbg !3694
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_squared_v3(float* %v) #0 !dbg !3695 {
entry:
  %v.addr = alloca float*, align 8
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !3698, metadata !DIExpression()), !dbg !3699
  %0 = load float*, float** %v.addr, align 8, !dbg !3700
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !3700
  %1 = load float, float* %arrayidx, align 4, !dbg !3700
  %2 = load float*, float** %v.addr, align 8, !dbg !3701
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !3701
  %3 = load float, float* %arrayidx1, align 4, !dbg !3701
  %mul = fmul float %1, %3, !dbg !3702
  %4 = load float*, float** %v.addr, align 8, !dbg !3703
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !3703
  %5 = load float, float* %arrayidx2, align 4, !dbg !3703
  %6 = load float*, float** %v.addr, align 8, !dbg !3704
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !3704
  %7 = load float, float* %arrayidx3, align 4, !dbg !3704
  %mul4 = fmul float %5, %7, !dbg !3705
  %add = fadd float %mul, %mul4, !dbg !3706
  %8 = load float*, float** %v.addr, align 8, !dbg !3707
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !3707
  %9 = load float, float* %arrayidx5, align 4, !dbg !3707
  %10 = load float*, float** %v.addr, align 8, !dbg !3708
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !3708
  %11 = load float, float* %arrayidx6, align 4, !dbg !3708
  %mul7 = fmul float %9, %11, !dbg !3709
  %add8 = fadd float %add, %mul7, !dbg !3710
  ret float %add8, !dbg !3711
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_squared_v3v3(float* %a, float* %b) #0 !dbg !3712 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %d = alloca [3 x float], align 4
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !3713, metadata !DIExpression()), !dbg !3714
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !3715, metadata !DIExpression()), !dbg !3716
  call void @llvm.dbg.declare(metadata [3 x float]* %d, metadata !3717, metadata !DIExpression()), !dbg !3718
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !3719
  %0 = load float*, float** %b.addr, align 8, !dbg !3720
  %1 = load float*, float** %a.addr, align 8, !dbg !3721
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !3722
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !3723
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !3724
  %call = call float @dot_v3v3(float* %arraydecay1, float* %arraydecay2), !dbg !3725
  ret float %call, !dbg !3726
}

; Function Attrs: nounwind
declare dso_local float @sqrtf(float) #5

; Function Attrs: noinline nounwind uwtable
define dso_local void @armature_deform_verts(%struct.Object* %armOb, %struct.Object* %target, %struct.DerivedMesh* %dm, [3 x float]* %vertexCos, [3 x [3 x float]]* %defMats, i32 %numVerts, i32 %deformflag, [3 x float]* %prevCos, i8* %defgrp_name) #0 !dbg !3727 {
entry:
  %armOb.addr = alloca %struct.Object*, align 8
  %target.addr = alloca %struct.Object*, align 8
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %vertexCos.addr = alloca [3 x float]*, align 8
  %defMats.addr = alloca [3 x [3 x float]]*, align 8
  %numVerts.addr = alloca i32, align 4
  %deformflag.addr = alloca i32, align 4
  %prevCos.addr = alloca [3 x float]*, align 8
  %defgrp_name.addr = alloca i8*, align 8
  %pdef_info_array = alloca %struct.bPoseChanDeform*, align 8
  %pdef_info = alloca %struct.bPoseChanDeform*, align 8
  %arm = alloca %struct.bArmature*, align 8
  %pchan = alloca %struct.bPoseChannel*, align 8
  %defnrToPC = alloca %struct.bPoseChannel**, align 8
  %defnrToPCIndex = alloca i32*, align 8
  %dverts = alloca %struct.MDeformVert*, align 8
  %dg = alloca %struct.bDeformGroup*, align 8
  %dualquats = alloca %struct.DualQuat*, align 8
  %obinv = alloca [4 x [4 x float]], align 16
  %premat = alloca [4 x [4 x float]], align 16
  %postmat = alloca [4 x [4 x float]], align 16
  %use_envelope = alloca i16, align 2
  %use_quaternion = alloca i16, align 2
  %invert_vgroup = alloca i16, align 2
  %defbase_tot = alloca i32, align 4
  %i = alloca i32, align 4
  %target_totvert = alloca i32, align 4
  %use_dverts = alloca i8, align 1
  %armature_def_nr = alloca i32, align 4
  %totchan = alloca i32, align 4
  %me = alloca %struct.Mesh*, align 8
  %lt = alloca %struct.Lattice*, align 8
  %dvert152 = alloca %struct.MDeformVert*, align 8
  %sumdq = alloca %struct.DualQuat, align 4
  %dq = alloca %struct.DualQuat*, align 8
  %co = alloca float*, align 8
  %dco = alloca [3 x float], align 4
  %sumvec = alloca [3 x float], align 4
  %summat = alloca [3 x [3 x float]], align 16
  %vec = alloca float*, align 8
  %smat = alloca [3 x float]*, align 8
  %contrib = alloca float, align 4
  %armature_weight = alloca float, align 4
  %prevco_weight = alloca float, align 4
  %dw = alloca %struct.MDeformWeight*, align 8
  %deformed = alloca i32, align 4
  %j = alloca i32, align 4
  %index = alloca i32, align 4
  %weight = alloca float, align 4
  %bone234 = alloca %struct.Bone*, align 8
  %pre = alloca [3 x [3 x float]], align 16
  %post = alloca [3 x [3 x float]], align 16
  %tmpmat = alloca [3 x [3 x float]], align 16
  %mw = alloca float, align 4
  store %struct.Object* %armOb, %struct.Object** %armOb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %armOb.addr, metadata !3731, metadata !DIExpression()), !dbg !3732
  store %struct.Object* %target, %struct.Object** %target.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %target.addr, metadata !3733, metadata !DIExpression()), !dbg !3734
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3735, metadata !DIExpression()), !dbg !3736
  store [3 x float]* %vertexCos, [3 x float]** %vertexCos.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %vertexCos.addr, metadata !3737, metadata !DIExpression()), !dbg !3738
  store [3 x [3 x float]]* %defMats, [3 x [3 x float]]** %defMats.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]** %defMats.addr, metadata !3739, metadata !DIExpression()), !dbg !3740
  store i32 %numVerts, i32* %numVerts.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %numVerts.addr, metadata !3741, metadata !DIExpression()), !dbg !3742
  store i32 %deformflag, i32* %deformflag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %deformflag.addr, metadata !3743, metadata !DIExpression()), !dbg !3744
  store [3 x float]* %prevCos, [3 x float]** %prevCos.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %prevCos.addr, metadata !3745, metadata !DIExpression()), !dbg !3746
  store i8* %defgrp_name, i8** %defgrp_name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %defgrp_name.addr, metadata !3747, metadata !DIExpression()), !dbg !3748
  call void @llvm.dbg.declare(metadata %struct.bPoseChanDeform** %pdef_info_array, metadata !3749, metadata !DIExpression()), !dbg !3766
  call void @llvm.dbg.declare(metadata %struct.bPoseChanDeform** %pdef_info, metadata !3767, metadata !DIExpression()), !dbg !3768
  store %struct.bPoseChanDeform* null, %struct.bPoseChanDeform** %pdef_info, align 8, !dbg !3768
  call void @llvm.dbg.declare(metadata %struct.bArmature** %arm, metadata !3769, metadata !DIExpression()), !dbg !3770
  %0 = load %struct.Object*, %struct.Object** %armOb.addr, align 8, !dbg !3771
  %data = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 19, !dbg !3772
  %1 = load i8*, i8** %data, align 8, !dbg !3772
  %2 = bitcast i8* %1 to %struct.bArmature*, !dbg !3771
  store %struct.bArmature* %2, %struct.bArmature** %arm, align 8, !dbg !3770
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan, metadata !3773, metadata !DIExpression()), !dbg !3774
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel*** %defnrToPC, metadata !3775, metadata !DIExpression()), !dbg !3777
  store %struct.bPoseChannel** null, %struct.bPoseChannel*** %defnrToPC, align 8, !dbg !3777
  call void @llvm.dbg.declare(metadata i32** %defnrToPCIndex, metadata !3778, metadata !DIExpression()), !dbg !3779
  store i32* null, i32** %defnrToPCIndex, align 8, !dbg !3779
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dverts, metadata !3780, metadata !DIExpression()), !dbg !3783
  store %struct.MDeformVert* null, %struct.MDeformVert** %dverts, align 8, !dbg !3783
  call void @llvm.dbg.declare(metadata %struct.bDeformGroup** %dg, metadata !3784, metadata !DIExpression()), !dbg !3795
  call void @llvm.dbg.declare(metadata %struct.DualQuat** %dualquats, metadata !3796, metadata !DIExpression()), !dbg !3797
  store %struct.DualQuat* null, %struct.DualQuat** %dualquats, align 8, !dbg !3797
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %obinv, metadata !3798, metadata !DIExpression()), !dbg !3799
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %premat, metadata !3800, metadata !DIExpression()), !dbg !3801
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %postmat, metadata !3802, metadata !DIExpression()), !dbg !3803
  call void @llvm.dbg.declare(metadata i16* %use_envelope, metadata !3804, metadata !DIExpression()), !dbg !3805
  %3 = load i32, i32* %deformflag.addr, align 4, !dbg !3806
  %and = and i32 %3, 2, !dbg !3807
  %conv = trunc i32 %and to i16, !dbg !3806
  store i16 %conv, i16* %use_envelope, align 2, !dbg !3805
  call void @llvm.dbg.declare(metadata i16* %use_quaternion, metadata !3808, metadata !DIExpression()), !dbg !3809
  %4 = load i32, i32* %deformflag.addr, align 4, !dbg !3810
  %and1 = and i32 %4, 4, !dbg !3811
  %conv2 = trunc i32 %and1 to i16, !dbg !3810
  store i16 %conv2, i16* %use_quaternion, align 2, !dbg !3809
  call void @llvm.dbg.declare(metadata i16* %invert_vgroup, metadata !3812, metadata !DIExpression()), !dbg !3813
  %5 = load i32, i32* %deformflag.addr, align 4, !dbg !3814
  %and3 = and i32 %5, 16, !dbg !3815
  %conv4 = trunc i32 %and3 to i16, !dbg !3814
  store i16 %conv4, i16* %invert_vgroup, align 2, !dbg !3813
  call void @llvm.dbg.declare(metadata i32* %defbase_tot, metadata !3816, metadata !DIExpression()), !dbg !3817
  store i32 0, i32* %defbase_tot, align 4, !dbg !3817
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3818, metadata !DIExpression()), !dbg !3819
  call void @llvm.dbg.declare(metadata i32* %target_totvert, metadata !3820, metadata !DIExpression()), !dbg !3821
  store i32 0, i32* %target_totvert, align 4, !dbg !3821
  call void @llvm.dbg.declare(metadata i8* %use_dverts, metadata !3822, metadata !DIExpression()), !dbg !3823
  store i8 0, i8* %use_dverts, align 1, !dbg !3823
  call void @llvm.dbg.declare(metadata i32* %armature_def_nr, metadata !3824, metadata !DIExpression()), !dbg !3825
  call void @llvm.dbg.declare(metadata i32* %totchan, metadata !3826, metadata !DIExpression()), !dbg !3827
  %6 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !3828
  %edbo = getelementptr inbounds %struct.bArmature, %struct.bArmature* %6, i32 0, i32 4, !dbg !3830
  %7 = load %struct.ListBase*, %struct.ListBase** %edbo, align 8, !dbg !3830
  %tobool = icmp ne %struct.ListBase* %7, null, !dbg !3828
  br i1 %tobool, label %if.then, label %if.end, !dbg !3831

if.then:                                          ; preds = %entry
  br label %return, !dbg !3832

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obinv, i64 0, i64 0, !dbg !3833
  %8 = load %struct.Object*, %struct.Object** %target.addr, align 8, !dbg !3834
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %8, i32 0, i32 47, !dbg !3835
  %arraydecay5 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !3834
  %call = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay, [4 x float]* %arraydecay5), !dbg !3836
  %arraydecay6 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %premat, i64 0, i64 0, !dbg !3837
  %9 = load %struct.Object*, %struct.Object** %target.addr, align 8, !dbg !3838
  %obmat7 = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 47, !dbg !3839
  %arraydecay8 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat7, i64 0, i64 0, !dbg !3838
  call void @copy_m4_m4([4 x float]* %arraydecay6, [4 x float]* %arraydecay8), !dbg !3840
  %arraydecay9 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %postmat, i64 0, i64 0, !dbg !3841
  %arraydecay10 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obinv, i64 0, i64 0, !dbg !3842
  %10 = load %struct.Object*, %struct.Object** %armOb.addr, align 8, !dbg !3843
  %obmat11 = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 47, !dbg !3844
  %arraydecay12 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat11, i64 0, i64 0, !dbg !3843
  call void @mul_m4_m4m4([4 x float]* %arraydecay9, [4 x float]* %arraydecay10, [4 x float]* %arraydecay12), !dbg !3845
  %arraydecay13 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %premat, i64 0, i64 0, !dbg !3846
  %arraydecay14 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %postmat, i64 0, i64 0, !dbg !3847
  %call15 = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay13, [4 x float]* %arraydecay14), !dbg !3848
  %11 = load %struct.Object*, %struct.Object** %armOb.addr, align 8, !dbg !3849
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %11, i32 0, i32 18, !dbg !3850
  %12 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !3850
  %chanbase = getelementptr inbounds %struct.bPose, %struct.bPose* %12, i32 0, i32 0, !dbg !3851
  %call16 = call i32 @BLI_countlist(%struct.ListBase* %chanbase), !dbg !3852
  store i32 %call16, i32* %totchan, align 4, !dbg !3853
  %13 = load i16, i16* %use_quaternion, align 2, !dbg !3854
  %tobool17 = icmp ne i16 %13, 0, !dbg !3854
  br i1 %tobool17, label %if.then18, label %if.end21, !dbg !3856

if.then18:                                        ; preds = %if.end
  %14 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3857
  %15 = load i32, i32* %totchan, align 4, !dbg !3859
  %conv19 = sext i32 %15 to i64, !dbg !3859
  %mul = mul i64 100, %conv19, !dbg !3860
  %call20 = call i8* %14(i64 %mul, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i64 0, i64 0)), !dbg !3857
  %16 = bitcast i8* %call20 to %struct.DualQuat*, !dbg !3857
  store %struct.DualQuat* %16, %struct.DualQuat** %dualquats, align 8, !dbg !3861
  br label %if.end21, !dbg !3862

if.end21:                                         ; preds = %if.then18, %if.end
  %17 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3863
  %18 = load i32, i32* %totchan, align 4, !dbg !3864
  %conv22 = sext i32 %18 to i64, !dbg !3864
  %mul23 = mul i64 24, %conv22, !dbg !3865
  %call24 = call i8* %17(i64 %mul23, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0)), !dbg !3863
  %19 = bitcast i8* %call24 to %struct.bPoseChanDeform*, !dbg !3863
  store %struct.bPoseChanDeform* %19, %struct.bPoseChanDeform** %pdef_info_array, align 8, !dbg !3866
  store i32 0, i32* %totchan, align 4, !dbg !3867
  %20 = load %struct.bPoseChanDeform*, %struct.bPoseChanDeform** %pdef_info_array, align 8, !dbg !3868
  store %struct.bPoseChanDeform* %20, %struct.bPoseChanDeform** %pdef_info, align 8, !dbg !3869
  %21 = load %struct.Object*, %struct.Object** %armOb.addr, align 8, !dbg !3870
  %pose25 = getelementptr inbounds %struct.Object, %struct.Object* %21, i32 0, i32 18, !dbg !3872
  %22 = load %struct.bPose*, %struct.bPose** %pose25, align 8, !dbg !3872
  %chanbase26 = getelementptr inbounds %struct.bPose, %struct.bPose* %22, i32 0, i32 0, !dbg !3873
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %chanbase26, i32 0, i32 0, !dbg !3874
  %23 = load i8*, i8** %first, align 8, !dbg !3874
  %24 = bitcast i8* %23 to %struct.bPoseChannel*, !dbg !3870
  store %struct.bPoseChannel* %24, %struct.bPoseChannel** %pchan, align 8, !dbg !3875
  br label %for.cond, !dbg !3876

for.cond:                                         ; preds = %for.inc, %if.end21
  %25 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !3877
  %tobool27 = icmp ne %struct.bPoseChannel* %25, null, !dbg !3879
  br i1 %tobool27, label %for.body, label %for.end, !dbg !3879

for.body:                                         ; preds = %for.cond
  %26 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !3880
  %bone = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %26, i32 0, i32 12, !dbg !3883
  %27 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !3883
  %flag = getelementptr inbounds %struct.Bone, %struct.Bone* %27, i32 0, i32 10, !dbg !3884
  %28 = load i32, i32* %flag, align 8, !dbg !3884
  %and28 = and i32 %28, 4096, !dbg !3885
  %tobool29 = icmp ne i32 %and28, 0, !dbg !3885
  br i1 %tobool29, label %if.end44, label %if.then30, !dbg !3886

if.then30:                                        ; preds = %for.body
  %29 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !3887
  %bone31 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %29, i32 0, i32 12, !dbg !3890
  %30 = load %struct.Bone*, %struct.Bone** %bone31, align 8, !dbg !3890
  %segments = getelementptr inbounds %struct.Bone, %struct.Bone* %30, i32 0, i32 26, !dbg !3891
  %31 = load i16, i16* %segments, align 4, !dbg !3891
  %conv32 = sext i16 %31 to i32, !dbg !3887
  %cmp = icmp sgt i32 %conv32, 1, !dbg !3892
  br i1 %cmp, label %if.then34, label %if.end36, !dbg !3893

if.then34:                                        ; preds = %if.then30
  %32 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !3894
  %33 = load %struct.bPoseChanDeform*, %struct.bPoseChanDeform** %pdef_info, align 8, !dbg !3895
  %34 = load i16, i16* %use_quaternion, align 2, !dbg !3896
  %conv35 = sext i16 %34 to i32, !dbg !3896
  call void @pchan_b_bone_defmats(%struct.bPoseChannel* %32, %struct.bPoseChanDeform* %33, i32 %conv35), !dbg !3897
  br label %if.end36, !dbg !3897

if.end36:                                         ; preds = %if.then34, %if.then30
  %35 = load i16, i16* %use_quaternion, align 2, !dbg !3898
  %tobool37 = icmp ne i16 %35, 0, !dbg !3898
  br i1 %tobool37, label %if.then38, label %if.end43, !dbg !3900

if.then38:                                        ; preds = %if.end36
  %36 = load %struct.DualQuat*, %struct.DualQuat** %dualquats, align 8, !dbg !3901
  %37 = load i32, i32* %totchan, align 4, !dbg !3903
  %inc = add nsw i32 %37, 1, !dbg !3903
  store i32 %inc, i32* %totchan, align 4, !dbg !3903
  %idxprom = sext i32 %37 to i64, !dbg !3901
  %arrayidx = getelementptr inbounds %struct.DualQuat, %struct.DualQuat* %36, i64 %idxprom, !dbg !3901
  %38 = load %struct.bPoseChanDeform*, %struct.bPoseChanDeform** %pdef_info, align 8, !dbg !3904
  %dual_quat = getelementptr inbounds %struct.bPoseChanDeform, %struct.bPoseChanDeform* %38, i32 0, i32 1, !dbg !3905
  store %struct.DualQuat* %arrayidx, %struct.DualQuat** %dual_quat, align 8, !dbg !3906
  %39 = load %struct.bPoseChanDeform*, %struct.bPoseChanDeform** %pdef_info, align 8, !dbg !3907
  %dual_quat39 = getelementptr inbounds %struct.bPoseChanDeform, %struct.bPoseChanDeform* %39, i32 0, i32 1, !dbg !3908
  %40 = load %struct.DualQuat*, %struct.DualQuat** %dual_quat39, align 8, !dbg !3908
  %41 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !3909
  %bone40 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %41, i32 0, i32 12, !dbg !3910
  %42 = load %struct.Bone*, %struct.Bone** %bone40, align 8, !dbg !3910
  %arm_mat = getelementptr inbounds %struct.Bone, %struct.Bone* %42, i32 0, i32 13, !dbg !3911
  %arraydecay41 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %arm_mat, i64 0, i64 0, !dbg !3909
  %43 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !3912
  %chan_mat = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %43, i32 0, i32 28, !dbg !3913
  %arraydecay42 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %chan_mat, i64 0, i64 0, !dbg !3912
  call void @mat4_to_dquat(%struct.DualQuat* %40, [4 x float]* %arraydecay41, [4 x float]* %arraydecay42), !dbg !3914
  br label %if.end43, !dbg !3915

if.end43:                                         ; preds = %if.then38, %if.end36
  br label %if.end44, !dbg !3916

if.end44:                                         ; preds = %if.end43, %for.body
  br label %for.inc, !dbg !3917

for.inc:                                          ; preds = %if.end44
  %44 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !3918
  %next = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %44, i32 0, i32 0, !dbg !3919
  %45 = load %struct.bPoseChannel*, %struct.bPoseChannel** %next, align 8, !dbg !3919
  store %struct.bPoseChannel* %45, %struct.bPoseChannel** %pchan, align 8, !dbg !3920
  %46 = load %struct.bPoseChanDeform*, %struct.bPoseChanDeform** %pdef_info, align 8, !dbg !3921
  %incdec.ptr = getelementptr inbounds %struct.bPoseChanDeform, %struct.bPoseChanDeform* %46, i32 1, !dbg !3921
  store %struct.bPoseChanDeform* %incdec.ptr, %struct.bPoseChanDeform** %pdef_info, align 8, !dbg !3921
  br label %for.cond, !dbg !3922, !llvm.loop !3923

for.end:                                          ; preds = %for.cond
  %47 = load %struct.Object*, %struct.Object** %target.addr, align 8, !dbg !3925
  %48 = load i8*, i8** %defgrp_name.addr, align 8, !dbg !3926
  %call45 = call i32 @defgroup_name_index(%struct.Object* %47, i8* %48), !dbg !3927
  store i32 %call45, i32* %armature_def_nr, align 4, !dbg !3928
  %49 = load %struct.Object*, %struct.Object** %target.addr, align 8, !dbg !3929
  %type = getelementptr inbounds %struct.Object, %struct.Object* %49, i32 0, i32 3, !dbg !3929
  %50 = load i16, i16* %type, align 8, !dbg !3929
  %conv46 = sext i16 %50 to i32, !dbg !3929
  %cmp47 = icmp eq i32 %conv46, 1, !dbg !3929
  br i1 %cmp47, label %if.then53, label %lor.lhs.false, !dbg !3929

lor.lhs.false:                                    ; preds = %for.end
  %51 = load %struct.Object*, %struct.Object** %target.addr, align 8, !dbg !3929
  %type49 = getelementptr inbounds %struct.Object, %struct.Object* %51, i32 0, i32 3, !dbg !3929
  %52 = load i16, i16* %type49, align 8, !dbg !3929
  %conv50 = sext i16 %52 to i32, !dbg !3929
  %cmp51 = icmp eq i32 %conv50, 22, !dbg !3929
  br i1 %cmp51, label %if.then53, label %if.end75, !dbg !3931

if.then53:                                        ; preds = %lor.lhs.false, %for.end
  %53 = load %struct.Object*, %struct.Object** %target.addr, align 8, !dbg !3932
  %defbase = getelementptr inbounds %struct.Object, %struct.Object* %53, i32 0, i32 25, !dbg !3934
  %call54 = call i32 @BLI_countlist(%struct.ListBase* %defbase), !dbg !3935
  store i32 %call54, i32* %defbase_tot, align 4, !dbg !3936
  %54 = load %struct.Object*, %struct.Object** %target.addr, align 8, !dbg !3937
  %type55 = getelementptr inbounds %struct.Object, %struct.Object* %54, i32 0, i32 3, !dbg !3939
  %55 = load i16, i16* %type55, align 8, !dbg !3939
  %conv56 = sext i16 %55 to i32, !dbg !3937
  %cmp57 = icmp eq i32 %conv56, 1, !dbg !3940
  br i1 %cmp57, label %if.then59, label %if.else, !dbg !3941

if.then59:                                        ; preds = %if.then53
  call void @llvm.dbg.declare(metadata %struct.Mesh** %me, metadata !3942, metadata !DIExpression()), !dbg !4068
  %56 = load %struct.Object*, %struct.Object** %target.addr, align 8, !dbg !4069
  %data60 = getelementptr inbounds %struct.Object, %struct.Object* %56, i32 0, i32 19, !dbg !4070
  %57 = load i8*, i8** %data60, align 8, !dbg !4070
  %58 = bitcast i8* %57 to %struct.Mesh*, !dbg !4069
  store %struct.Mesh* %58, %struct.Mesh** %me, align 8, !dbg !4068
  %59 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4071
  %dvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %59, i32 0, i32 17, !dbg !4072
  %60 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert, align 8, !dbg !4072
  store %struct.MDeformVert* %60, %struct.MDeformVert** %dverts, align 8, !dbg !4073
  %61 = load %struct.MDeformVert*, %struct.MDeformVert** %dverts, align 8, !dbg !4074
  %tobool61 = icmp ne %struct.MDeformVert* %61, null, !dbg !4074
  br i1 %tobool61, label %if.then62, label %if.end63, !dbg !4076

if.then62:                                        ; preds = %if.then59
  %62 = load %struct.Mesh*, %struct.Mesh** %me, align 8, !dbg !4077
  %totvert = getelementptr inbounds %struct.Mesh, %struct.Mesh* %62, i32 0, i32 26, !dbg !4078
  %63 = load i32, i32* %totvert, align 8, !dbg !4078
  store i32 %63, i32* %target_totvert, align 4, !dbg !4079
  br label %if.end63, !dbg !4080

if.end63:                                         ; preds = %if.then62, %if.then59
  br label %if.end74, !dbg !4081

if.else:                                          ; preds = %if.then53
  call void @llvm.dbg.declare(metadata %struct.Lattice** %lt, metadata !4082, metadata !DIExpression()), !dbg !4134
  %64 = load %struct.Object*, %struct.Object** %target.addr, align 8, !dbg !4135
  %data64 = getelementptr inbounds %struct.Object, %struct.Object* %64, i32 0, i32 19, !dbg !4136
  %65 = load i8*, i8** %data64, align 8, !dbg !4136
  %66 = bitcast i8* %65 to %struct.Lattice*, !dbg !4135
  store %struct.Lattice* %66, %struct.Lattice** %lt, align 8, !dbg !4134
  %67 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !4137
  %dvert65 = getelementptr inbounds %struct.Lattice, %struct.Lattice* %67, i32 0, i32 24, !dbg !4138
  %68 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert65, align 8, !dbg !4138
  store %struct.MDeformVert* %68, %struct.MDeformVert** %dverts, align 8, !dbg !4139
  %69 = load %struct.MDeformVert*, %struct.MDeformVert** %dverts, align 8, !dbg !4140
  %tobool66 = icmp ne %struct.MDeformVert* %69, null, !dbg !4140
  br i1 %tobool66, label %if.then67, label %if.end73, !dbg !4142

if.then67:                                        ; preds = %if.else
  %70 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !4143
  %pntsu = getelementptr inbounds %struct.Lattice, %struct.Lattice* %70, i32 0, i32 2, !dbg !4144
  %71 = load i16, i16* %pntsu, align 8, !dbg !4144
  %conv68 = sext i16 %71 to i32, !dbg !4143
  %72 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !4145
  %pntsv = getelementptr inbounds %struct.Lattice, %struct.Lattice* %72, i32 0, i32 3, !dbg !4146
  %73 = load i16, i16* %pntsv, align 2, !dbg !4146
  %conv69 = sext i16 %73 to i32, !dbg !4145
  %mul70 = mul nsw i32 %conv68, %conv69, !dbg !4147
  %74 = load %struct.Lattice*, %struct.Lattice** %lt, align 8, !dbg !4148
  %pntsw = getelementptr inbounds %struct.Lattice, %struct.Lattice* %74, i32 0, i32 4, !dbg !4149
  %75 = load i16, i16* %pntsw, align 4, !dbg !4149
  %conv71 = sext i16 %75 to i32, !dbg !4148
  %mul72 = mul nsw i32 %mul70, %conv71, !dbg !4150
  store i32 %mul72, i32* %target_totvert, align 4, !dbg !4151
  br label %if.end73, !dbg !4152

if.end73:                                         ; preds = %if.then67, %if.else
  br label %if.end74

if.end74:                                         ; preds = %if.end73, %if.end63
  br label %if.end75, !dbg !4153

if.end75:                                         ; preds = %if.end74, %lor.lhs.false
  %76 = load i32, i32* %deformflag.addr, align 4, !dbg !4154
  %and76 = and i32 %76, 1, !dbg !4156
  %tobool77 = icmp ne i32 %and76, 0, !dbg !4156
  br i1 %tobool77, label %if.then78, label %if.end147, !dbg !4157

if.then78:                                        ; preds = %if.end75
  %77 = load %struct.Object*, %struct.Object** %target.addr, align 8, !dbg !4158
  %type79 = getelementptr inbounds %struct.Object, %struct.Object* %77, i32 0, i32 3, !dbg !4158
  %78 = load i16, i16* %type79, align 8, !dbg !4158
  %conv80 = sext i16 %78 to i32, !dbg !4158
  %cmp81 = icmp eq i32 %conv80, 1, !dbg !4158
  br i1 %cmp81, label %if.then88, label %lor.lhs.false83, !dbg !4158

lor.lhs.false83:                                  ; preds = %if.then78
  %79 = load %struct.Object*, %struct.Object** %target.addr, align 8, !dbg !4158
  %type84 = getelementptr inbounds %struct.Object, %struct.Object* %79, i32 0, i32 3, !dbg !4158
  %80 = load i16, i16* %type84, align 8, !dbg !4158
  %conv85 = sext i16 %80 to i32, !dbg !4158
  %cmp86 = icmp eq i32 %conv85, 22, !dbg !4158
  br i1 %cmp86, label %if.then88, label %if.end146, !dbg !4161

if.then88:                                        ; preds = %lor.lhs.false83, %if.then78
  %81 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4162
  %tobool89 = icmp ne %struct.DerivedMesh* %81, null, !dbg !4162
  br i1 %tobool89, label %if.then90, label %if.else95, !dbg !4165

if.then90:                                        ; preds = %if.then88
  %82 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4166
  %getVertDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %82, i32 0, i32 50, !dbg !4168
  %83 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getVertDataArray, align 8, !dbg !4168
  %84 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4169
  %call91 = call i8* %83(%struct.DerivedMesh* %84, i32 2), !dbg !4166
  %cmp92 = icmp ne i8* %call91, null, !dbg !4170
  %conv93 = zext i1 %cmp92 to i32, !dbg !4170
  %conv94 = trunc i32 %conv93 to i8, !dbg !4171
  store i8 %conv94, i8* %use_dverts, align 1, !dbg !4172
  br label %if.end99, !dbg !4173

if.else95:                                        ; preds = %if.then88
  %85 = load %struct.MDeformVert*, %struct.MDeformVert** %dverts, align 8, !dbg !4174
  %tobool96 = icmp ne %struct.MDeformVert* %85, null, !dbg !4174
  br i1 %tobool96, label %if.then97, label %if.end98, !dbg !4176

if.then97:                                        ; preds = %if.else95
  store i8 1, i8* %use_dverts, align 1, !dbg !4177
  br label %if.end98, !dbg !4179

if.end98:                                         ; preds = %if.then97, %if.else95
  br label %if.end99

if.end99:                                         ; preds = %if.end98, %if.then90
  %86 = load i8, i8* %use_dverts, align 1, !dbg !4180
  %tobool100 = icmp ne i8 %86, 0, !dbg !4180
  br i1 %tobool100, label %if.then101, label %if.end145, !dbg !4182

if.then101:                                       ; preds = %if.end99
  %87 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4183
  %88 = load i32, i32* %defbase_tot, align 4, !dbg !4185
  %conv102 = sext i32 %88 to i64, !dbg !4185
  %mul103 = mul i64 8, %conv102, !dbg !4186
  %call104 = call i8* %87(i64 %mul103, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i64 0, i64 0)), !dbg !4183
  %89 = bitcast i8* %call104 to %struct.bPoseChannel**, !dbg !4183
  store %struct.bPoseChannel** %89, %struct.bPoseChannel*** %defnrToPC, align 8, !dbg !4187
  %90 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !4188
  %91 = load i32, i32* %defbase_tot, align 4, !dbg !4189
  %conv105 = sext i32 %91 to i64, !dbg !4189
  %mul106 = mul i64 4, %conv105, !dbg !4190
  %call107 = call i8* %90(i64 %mul106, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i64 0, i64 0)), !dbg !4188
  %92 = bitcast i8* %call107 to i32*, !dbg !4188
  store i32* %92, i32** %defnrToPCIndex, align 8, !dbg !4191
  store i32 0, i32* %i, align 4, !dbg !4192
  %93 = load %struct.Object*, %struct.Object** %target.addr, align 8, !dbg !4194
  %defbase108 = getelementptr inbounds %struct.Object, %struct.Object* %93, i32 0, i32 25, !dbg !4195
  %first109 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %defbase108, i32 0, i32 0, !dbg !4196
  %94 = load i8*, i8** %first109, align 8, !dbg !4196
  %95 = bitcast i8* %94 to %struct.bDeformGroup*, !dbg !4194
  store %struct.bDeformGroup* %95, %struct.bDeformGroup** %dg, align 8, !dbg !4197
  br label %for.cond110, !dbg !4198

for.cond110:                                      ; preds = %for.inc141, %if.then101
  %96 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg, align 8, !dbg !4199
  %tobool111 = icmp ne %struct.bDeformGroup* %96, null, !dbg !4201
  br i1 %tobool111, label %for.body112, label %for.end144, !dbg !4201

for.body112:                                      ; preds = %for.cond110
  %97 = load %struct.Object*, %struct.Object** %armOb.addr, align 8, !dbg !4202
  %pose113 = getelementptr inbounds %struct.Object, %struct.Object* %97, i32 0, i32 18, !dbg !4204
  %98 = load %struct.bPose*, %struct.bPose** %pose113, align 8, !dbg !4204
  %99 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg, align 8, !dbg !4205
  %name = getelementptr inbounds %struct.bDeformGroup, %struct.bDeformGroup* %99, i32 0, i32 2, !dbg !4206
  %arraydecay114 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !4205
  %call115 = call %struct.bPoseChannel* @BKE_pose_channel_find_name(%struct.bPose* %98, i8* %arraydecay114), !dbg !4207
  %100 = load %struct.bPoseChannel**, %struct.bPoseChannel*** %defnrToPC, align 8, !dbg !4208
  %101 = load i32, i32* %i, align 4, !dbg !4209
  %idxprom116 = sext i32 %101 to i64, !dbg !4208
  %arrayidx117 = getelementptr inbounds %struct.bPoseChannel*, %struct.bPoseChannel** %100, i64 %idxprom116, !dbg !4208
  store %struct.bPoseChannel* %call115, %struct.bPoseChannel** %arrayidx117, align 8, !dbg !4210
  %102 = load %struct.bPoseChannel**, %struct.bPoseChannel*** %defnrToPC, align 8, !dbg !4211
  %103 = load i32, i32* %i, align 4, !dbg !4213
  %idxprom118 = sext i32 %103 to i64, !dbg !4211
  %arrayidx119 = getelementptr inbounds %struct.bPoseChannel*, %struct.bPoseChannel** %102, i64 %idxprom118, !dbg !4211
  %104 = load %struct.bPoseChannel*, %struct.bPoseChannel** %arrayidx119, align 8, !dbg !4211
  %tobool120 = icmp ne %struct.bPoseChannel* %104, null, !dbg !4211
  br i1 %tobool120, label %if.then121, label %if.end140, !dbg !4214

if.then121:                                       ; preds = %for.body112
  %105 = load %struct.bPoseChannel**, %struct.bPoseChannel*** %defnrToPC, align 8, !dbg !4215
  %106 = load i32, i32* %i, align 4, !dbg !4218
  %idxprom122 = sext i32 %106 to i64, !dbg !4215
  %arrayidx123 = getelementptr inbounds %struct.bPoseChannel*, %struct.bPoseChannel** %105, i64 %idxprom122, !dbg !4215
  %107 = load %struct.bPoseChannel*, %struct.bPoseChannel** %arrayidx123, align 8, !dbg !4215
  %bone124 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %107, i32 0, i32 12, !dbg !4219
  %108 = load %struct.Bone*, %struct.Bone** %bone124, align 8, !dbg !4219
  %flag125 = getelementptr inbounds %struct.Bone, %struct.Bone* %108, i32 0, i32 10, !dbg !4220
  %109 = load i32, i32* %flag125, align 8, !dbg !4220
  %and126 = and i32 %109, 4096, !dbg !4221
  %tobool127 = icmp ne i32 %and126, 0, !dbg !4221
  br i1 %tobool127, label %if.then128, label %if.else131, !dbg !4222

if.then128:                                       ; preds = %if.then121
  %110 = load %struct.bPoseChannel**, %struct.bPoseChannel*** %defnrToPC, align 8, !dbg !4223
  %111 = load i32, i32* %i, align 4, !dbg !4225
  %idxprom129 = sext i32 %111 to i64, !dbg !4223
  %arrayidx130 = getelementptr inbounds %struct.bPoseChannel*, %struct.bPoseChannel** %110, i64 %idxprom129, !dbg !4223
  store %struct.bPoseChannel* null, %struct.bPoseChannel** %arrayidx130, align 8, !dbg !4226
  br label %if.end139, !dbg !4227

if.else131:                                       ; preds = %if.then121
  %112 = load %struct.Object*, %struct.Object** %armOb.addr, align 8, !dbg !4228
  %pose132 = getelementptr inbounds %struct.Object, %struct.Object* %112, i32 0, i32 18, !dbg !4230
  %113 = load %struct.bPose*, %struct.bPose** %pose132, align 8, !dbg !4230
  %chanbase133 = getelementptr inbounds %struct.bPose, %struct.bPose* %113, i32 0, i32 0, !dbg !4231
  %114 = load %struct.bPoseChannel**, %struct.bPoseChannel*** %defnrToPC, align 8, !dbg !4232
  %115 = load i32, i32* %i, align 4, !dbg !4233
  %idxprom134 = sext i32 %115 to i64, !dbg !4232
  %arrayidx135 = getelementptr inbounds %struct.bPoseChannel*, %struct.bPoseChannel** %114, i64 %idxprom134, !dbg !4232
  %116 = load %struct.bPoseChannel*, %struct.bPoseChannel** %arrayidx135, align 8, !dbg !4232
  %117 = bitcast %struct.bPoseChannel* %116 to i8*, !dbg !4232
  %call136 = call i32 @BLI_findindex(%struct.ListBase* %chanbase133, i8* %117), !dbg !4234
  %118 = load i32*, i32** %defnrToPCIndex, align 8, !dbg !4235
  %119 = load i32, i32* %i, align 4, !dbg !4236
  %idxprom137 = sext i32 %119 to i64, !dbg !4235
  %arrayidx138 = getelementptr inbounds i32, i32* %118, i64 %idxprom137, !dbg !4235
  store i32 %call136, i32* %arrayidx138, align 4, !dbg !4237
  br label %if.end139

if.end139:                                        ; preds = %if.else131, %if.then128
  br label %if.end140, !dbg !4238

if.end140:                                        ; preds = %if.end139, %for.body112
  br label %for.inc141, !dbg !4239

for.inc141:                                       ; preds = %if.end140
  %120 = load i32, i32* %i, align 4, !dbg !4240
  %inc142 = add nsw i32 %120, 1, !dbg !4240
  store i32 %inc142, i32* %i, align 4, !dbg !4240
  %121 = load %struct.bDeformGroup*, %struct.bDeformGroup** %dg, align 8, !dbg !4241
  %next143 = getelementptr inbounds %struct.bDeformGroup, %struct.bDeformGroup* %121, i32 0, i32 0, !dbg !4242
  %122 = load %struct.bDeformGroup*, %struct.bDeformGroup** %next143, align 8, !dbg !4242
  store %struct.bDeformGroup* %122, %struct.bDeformGroup** %dg, align 8, !dbg !4243
  br label %for.cond110, !dbg !4244, !llvm.loop !4245

for.end144:                                       ; preds = %for.cond110
  br label %if.end145, !dbg !4247

if.end145:                                        ; preds = %for.end144, %if.end99
  br label %if.end146, !dbg !4248

if.end146:                                        ; preds = %if.end145, %lor.lhs.false83
  br label %if.end147, !dbg !4249

if.end147:                                        ; preds = %if.end146, %if.end75
  store i32 0, i32* %i, align 4, !dbg !4250
  br label %for.cond148, !dbg !4252

for.cond148:                                      ; preds = %for.inc389, %if.end147
  %123 = load i32, i32* %i, align 4, !dbg !4253
  %124 = load i32, i32* %numVerts.addr, align 4, !dbg !4255
  %cmp149 = icmp slt i32 %123, %124, !dbg !4256
  br i1 %cmp149, label %for.body151, label %for.end391, !dbg !4257

for.body151:                                      ; preds = %for.cond148
  call void @llvm.dbg.declare(metadata %struct.MDeformVert** %dvert152, metadata !4258, metadata !DIExpression()), !dbg !4260
  call void @llvm.dbg.declare(metadata %struct.DualQuat* %sumdq, metadata !4261, metadata !DIExpression()), !dbg !4262
  call void @llvm.dbg.declare(metadata %struct.DualQuat** %dq, metadata !4263, metadata !DIExpression()), !dbg !4264
  store %struct.DualQuat* null, %struct.DualQuat** %dq, align 8, !dbg !4264
  call void @llvm.dbg.declare(metadata float** %co, metadata !4265, metadata !DIExpression()), !dbg !4266
  call void @llvm.dbg.declare(metadata [3 x float]* %dco, metadata !4267, metadata !DIExpression()), !dbg !4268
  call void @llvm.dbg.declare(metadata [3 x float]* %sumvec, metadata !4269, metadata !DIExpression()), !dbg !4270
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %summat, metadata !4271, metadata !DIExpression()), !dbg !4272
  call void @llvm.dbg.declare(metadata float** %vec, metadata !4273, metadata !DIExpression()), !dbg !4274
  store float* null, float** %vec, align 8, !dbg !4274
  call void @llvm.dbg.declare(metadata [3 x float]** %smat, metadata !4275, metadata !DIExpression()), !dbg !4276
  store [3 x float]* null, [3 x float]** %smat, align 8, !dbg !4276
  call void @llvm.dbg.declare(metadata float* %contrib, metadata !4277, metadata !DIExpression()), !dbg !4278
  store float 0.000000e+00, float* %contrib, align 4, !dbg !4278
  call void @llvm.dbg.declare(metadata float* %armature_weight, metadata !4279, metadata !DIExpression()), !dbg !4280
  store float 1.000000e+00, float* %armature_weight, align 4, !dbg !4280
  call void @llvm.dbg.declare(metadata float* %prevco_weight, metadata !4281, metadata !DIExpression()), !dbg !4282
  store float 1.000000e+00, float* %prevco_weight, align 4, !dbg !4282
  %125 = load i16, i16* %use_quaternion, align 2, !dbg !4283
  %tobool153 = icmp ne i16 %125, 0, !dbg !4283
  br i1 %tobool153, label %if.then154, label %if.else155, !dbg !4285

if.then154:                                       ; preds = %for.body151
  %126 = bitcast %struct.DualQuat* %sumdq to i8*, !dbg !4286
  call void @llvm.memset.p0i8.i64(i8* align 4 %126, i8 0, i64 100, i1 false), !dbg !4286
  store %struct.DualQuat* %sumdq, %struct.DualQuat** %dq, align 8, !dbg !4288
  br label %if.end165, !dbg !4289

if.else155:                                       ; preds = %for.body151
  %arrayidx156 = getelementptr inbounds [3 x float], [3 x float]* %sumvec, i64 0, i64 2, !dbg !4290
  store float 0.000000e+00, float* %arrayidx156, align 4, !dbg !4292
  %arrayidx157 = getelementptr inbounds [3 x float], [3 x float]* %sumvec, i64 0, i64 1, !dbg !4293
  store float 0.000000e+00, float* %arrayidx157, align 4, !dbg !4294
  %arrayidx158 = getelementptr inbounds [3 x float], [3 x float]* %sumvec, i64 0, i64 0, !dbg !4295
  store float 0.000000e+00, float* %arrayidx158, align 4, !dbg !4296
  %arraydecay159 = getelementptr inbounds [3 x float], [3 x float]* %sumvec, i64 0, i64 0, !dbg !4297
  store float* %arraydecay159, float** %vec, align 8, !dbg !4298
  %127 = load [3 x [3 x float]]*, [3 x [3 x float]]** %defMats.addr, align 8, !dbg !4299
  %tobool160 = icmp ne [3 x [3 x float]]* %127, null, !dbg !4299
  br i1 %tobool160, label %if.then161, label %if.end164, !dbg !4301

if.then161:                                       ; preds = %if.else155
  %arraydecay162 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %summat, i64 0, i64 0, !dbg !4302
  call void @zero_m3([3 x float]* %arraydecay162), !dbg !4304
  %arraydecay163 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %summat, i64 0, i64 0, !dbg !4305
  store [3 x float]* %arraydecay163, [3 x float]** %smat, align 8, !dbg !4306
  br label %if.end164, !dbg !4307

if.end164:                                        ; preds = %if.then161, %if.else155
  br label %if.end165

if.end165:                                        ; preds = %if.end164, %if.then154
  %128 = load i8, i8* %use_dverts, align 1, !dbg !4308
  %conv166 = zext i8 %128 to i32, !dbg !4308
  %tobool167 = icmp ne i32 %conv166, 0, !dbg !4308
  br i1 %tobool167, label %if.then171, label %lor.lhs.false168, !dbg !4310

lor.lhs.false168:                                 ; preds = %if.end165
  %129 = load i32, i32* %armature_def_nr, align 4, !dbg !4311
  %cmp169 = icmp ne i32 %129, -1, !dbg !4312
  br i1 %cmp169, label %if.then171, label %if.else183, !dbg !4313

if.then171:                                       ; preds = %lor.lhs.false168, %if.end165
  %130 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4314
  %tobool172 = icmp ne %struct.DerivedMesh* %130, null, !dbg !4314
  br i1 %tobool172, label %if.then173, label %if.else175, !dbg !4317

if.then173:                                       ; preds = %if.then171
  %131 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4318
  %getVertData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %131, i32 0, i32 46, !dbg !4319
  %132 = load i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)** %getVertData, align 8, !dbg !4319
  %133 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4320
  %134 = load i32, i32* %i, align 4, !dbg !4321
  %call174 = call i8* %132(%struct.DerivedMesh* %133, i32 %134, i32 2), !dbg !4318
  %135 = bitcast i8* %call174 to %struct.MDeformVert*, !dbg !4318
  store %struct.MDeformVert* %135, %struct.MDeformVert** %dvert152, align 8, !dbg !4322
  br label %if.end182, !dbg !4323

if.else175:                                       ; preds = %if.then171
  %136 = load %struct.MDeformVert*, %struct.MDeformVert** %dverts, align 8, !dbg !4324
  %tobool176 = icmp ne %struct.MDeformVert* %136, null, !dbg !4324
  br i1 %tobool176, label %land.lhs.true, label %if.else180, !dbg !4326

land.lhs.true:                                    ; preds = %if.else175
  %137 = load i32, i32* %i, align 4, !dbg !4327
  %138 = load i32, i32* %target_totvert, align 4, !dbg !4328
  %cmp177 = icmp slt i32 %137, %138, !dbg !4329
  br i1 %cmp177, label %if.then179, label %if.else180, !dbg !4330

if.then179:                                       ; preds = %land.lhs.true
  %139 = load %struct.MDeformVert*, %struct.MDeformVert** %dverts, align 8, !dbg !4331
  %140 = load i32, i32* %i, align 4, !dbg !4332
  %idx.ext = sext i32 %140 to i64, !dbg !4333
  %add.ptr = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %139, i64 %idx.ext, !dbg !4333
  store %struct.MDeformVert* %add.ptr, %struct.MDeformVert** %dvert152, align 8, !dbg !4334
  br label %if.end181, !dbg !4335

if.else180:                                       ; preds = %land.lhs.true, %if.else175
  store %struct.MDeformVert* null, %struct.MDeformVert** %dvert152, align 8, !dbg !4336
  br label %if.end181

if.end181:                                        ; preds = %if.else180, %if.then179
  br label %if.end182

if.end182:                                        ; preds = %if.end181, %if.then173
  br label %if.end184, !dbg !4337

if.else183:                                       ; preds = %lor.lhs.false168
  store %struct.MDeformVert* null, %struct.MDeformVert** %dvert152, align 8, !dbg !4338
  br label %if.end184

if.end184:                                        ; preds = %if.else183, %if.end182
  %141 = load i32, i32* %armature_def_nr, align 4, !dbg !4339
  %cmp185 = icmp ne i32 %141, -1, !dbg !4341
  br i1 %cmp185, label %land.lhs.true187, label %if.end197, !dbg !4342

land.lhs.true187:                                 ; preds = %if.end184
  %142 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert152, align 8, !dbg !4343
  %tobool188 = icmp ne %struct.MDeformVert* %142, null, !dbg !4343
  br i1 %tobool188, label %if.then189, label %if.end197, !dbg !4344

if.then189:                                       ; preds = %land.lhs.true187
  %143 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert152, align 8, !dbg !4345
  %144 = load i32, i32* %armature_def_nr, align 4, !dbg !4347
  %call190 = call float @defvert_find_weight(%struct.MDeformVert* %143, i32 %144), !dbg !4348
  store float %call190, float* %armature_weight, align 4, !dbg !4349
  %145 = load i16, i16* %invert_vgroup, align 2, !dbg !4350
  %tobool191 = icmp ne i16 %145, 0, !dbg !4350
  br i1 %tobool191, label %if.then192, label %if.end193, !dbg !4352

if.then192:                                       ; preds = %if.then189
  %146 = load float, float* %armature_weight, align 4, !dbg !4353
  %sub = fsub float 1.000000e+00, %146, !dbg !4354
  store float %sub, float* %armature_weight, align 4, !dbg !4355
  br label %if.end193, !dbg !4356

if.end193:                                        ; preds = %if.then192, %if.then189
  %147 = load [3 x float]*, [3 x float]** %prevCos.addr, align 8, !dbg !4357
  %tobool194 = icmp ne [3 x float]* %147, null, !dbg !4357
  br i1 %tobool194, label %if.then195, label %if.end196, !dbg !4359

if.then195:                                       ; preds = %if.end193
  %148 = load float, float* %armature_weight, align 4, !dbg !4360
  store float %148, float* %prevco_weight, align 4, !dbg !4362
  store float 1.000000e+00, float* %armature_weight, align 4, !dbg !4363
  br label %if.end196, !dbg !4364

if.end196:                                        ; preds = %if.then195, %if.end193
  br label %if.end197, !dbg !4365

if.end197:                                        ; preds = %if.end196, %land.lhs.true187, %if.end184
  %149 = load float, float* %armature_weight, align 4, !dbg !4366
  %cmp198 = fcmp oeq float %149, 0.000000e+00, !dbg !4368
  br i1 %cmp198, label %if.then200, label %if.end201, !dbg !4369

if.then200:                                       ; preds = %if.end197
  br label %for.inc389, !dbg !4370

if.end201:                                        ; preds = %if.end197
  %150 = load [3 x float]*, [3 x float]** %prevCos.addr, align 8, !dbg !4371
  %tobool202 = icmp ne [3 x float]* %150, null, !dbg !4371
  br i1 %tobool202, label %cond.true, label %cond.false, !dbg !4371

cond.true:                                        ; preds = %if.end201
  %151 = load [3 x float]*, [3 x float]** %prevCos.addr, align 8, !dbg !4372
  %152 = load i32, i32* %i, align 4, !dbg !4373
  %idxprom203 = sext i32 %152 to i64, !dbg !4372
  %arrayidx204 = getelementptr inbounds [3 x float], [3 x float]* %151, i64 %idxprom203, !dbg !4372
  %arraydecay205 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx204, i64 0, i64 0, !dbg !4372
  br label %cond.end, !dbg !4371

cond.false:                                       ; preds = %if.end201
  %153 = load [3 x float]*, [3 x float]** %vertexCos.addr, align 8, !dbg !4374
  %154 = load i32, i32* %i, align 4, !dbg !4375
  %idxprom206 = sext i32 %154 to i64, !dbg !4374
  %arrayidx207 = getelementptr inbounds [3 x float], [3 x float]* %153, i64 %idxprom206, !dbg !4374
  %arraydecay208 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx207, i64 0, i64 0, !dbg !4374
  br label %cond.end, !dbg !4371

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float* [ %arraydecay205, %cond.true ], [ %arraydecay208, %cond.false ], !dbg !4371
  store float* %cond, float** %co, align 8, !dbg !4376
  %arraydecay209 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %premat, i64 0, i64 0, !dbg !4377
  %155 = load float*, float** %co, align 8, !dbg !4378
  call void @mul_m4_v3([4 x float]* %arraydecay209, float* %155), !dbg !4379
  %156 = load i8, i8* %use_dverts, align 1, !dbg !4380
  %conv210 = zext i8 %156 to i32, !dbg !4380
  %tobool211 = icmp ne i32 %conv210, 0, !dbg !4380
  br i1 %tobool211, label %land.lhs.true212, label %if.else279, !dbg !4382

land.lhs.true212:                                 ; preds = %cond.end
  %157 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert152, align 8, !dbg !4383
  %tobool213 = icmp ne %struct.MDeformVert* %157, null, !dbg !4383
  br i1 %tobool213, label %land.lhs.true214, label %if.else279, !dbg !4384

land.lhs.true214:                                 ; preds = %land.lhs.true212
  %158 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert152, align 8, !dbg !4385
  %totweight = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %158, i32 0, i32 1, !dbg !4386
  %159 = load i32, i32* %totweight, align 8, !dbg !4386
  %tobool215 = icmp ne i32 %159, 0, !dbg !4385
  br i1 %tobool215, label %if.then216, label %if.else279, !dbg !4387

if.then216:                                       ; preds = %land.lhs.true214
  call void @llvm.dbg.declare(metadata %struct.MDeformWeight** %dw, metadata !4388, metadata !DIExpression()), !dbg !4392
  %160 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert152, align 8, !dbg !4393
  %dw217 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %160, i32 0, i32 0, !dbg !4394
  %161 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw217, align 8, !dbg !4394
  store %struct.MDeformWeight* %161, %struct.MDeformWeight** %dw, align 8, !dbg !4392
  call void @llvm.dbg.declare(metadata i32* %deformed, metadata !4395, metadata !DIExpression()), !dbg !4396
  store i32 0, i32* %deformed, align 4, !dbg !4396
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4397, metadata !DIExpression()), !dbg !4398
  %162 = load %struct.MDeformVert*, %struct.MDeformVert** %dvert152, align 8, !dbg !4399
  %totweight218 = getelementptr inbounds %struct.MDeformVert, %struct.MDeformVert* %162, i32 0, i32 1, !dbg !4401
  %163 = load i32, i32* %totweight218, align 8, !dbg !4401
  store i32 %163, i32* %j, align 4, !dbg !4402
  br label %for.cond219, !dbg !4403

for.cond219:                                      ; preds = %for.inc252, %if.then216
  %164 = load i32, i32* %j, align 4, !dbg !4404
  %cmp220 = icmp ne i32 %164, 0, !dbg !4406
  br i1 %cmp220, label %for.body222, label %for.end254, !dbg !4407

for.body222:                                      ; preds = %for.cond219
  call void @llvm.dbg.declare(metadata i32* %index, metadata !4408, metadata !DIExpression()), !dbg !4411
  %165 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !4412
  %def_nr = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %165, i32 0, i32 0, !dbg !4413
  %166 = load i32, i32* %def_nr, align 4, !dbg !4413
  store i32 %166, i32* %index, align 4, !dbg !4411
  %167 = load i32, i32* %index, align 4, !dbg !4414
  %cmp223 = icmp sge i32 %167, 0, !dbg !4416
  br i1 %cmp223, label %land.lhs.true225, label %if.end251, !dbg !4417

land.lhs.true225:                                 ; preds = %for.body222
  %168 = load i32, i32* %index, align 4, !dbg !4418
  %169 = load i32, i32* %defbase_tot, align 4, !dbg !4419
  %cmp226 = icmp slt i32 %168, %169, !dbg !4420
  br i1 %cmp226, label %land.lhs.true228, label %if.end251, !dbg !4421

land.lhs.true228:                                 ; preds = %land.lhs.true225
  %170 = load %struct.bPoseChannel**, %struct.bPoseChannel*** %defnrToPC, align 8, !dbg !4422
  %171 = load i32, i32* %index, align 4, !dbg !4423
  %idxprom229 = sext i32 %171 to i64, !dbg !4422
  %arrayidx230 = getelementptr inbounds %struct.bPoseChannel*, %struct.bPoseChannel** %170, i64 %idxprom229, !dbg !4422
  %172 = load %struct.bPoseChannel*, %struct.bPoseChannel** %arrayidx230, align 8, !dbg !4422
  store %struct.bPoseChannel* %172, %struct.bPoseChannel** %pchan, align 8, !dbg !4424
  %tobool231 = icmp ne %struct.bPoseChannel* %172, null, !dbg !4424
  br i1 %tobool231, label %if.then232, label %if.end251, !dbg !4425

if.then232:                                       ; preds = %land.lhs.true228
  call void @llvm.dbg.declare(metadata float* %weight, metadata !4426, metadata !DIExpression()), !dbg !4428
  %173 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !4429
  %weight233 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %173, i32 0, i32 1, !dbg !4430
  %174 = load float, float* %weight233, align 4, !dbg !4430
  store float %174, float* %weight, align 4, !dbg !4428
  call void @llvm.dbg.declare(metadata %struct.Bone** %bone234, metadata !4431, metadata !DIExpression()), !dbg !4432
  %175 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4433
  %bone235 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %175, i32 0, i32 12, !dbg !4434
  %176 = load %struct.Bone*, %struct.Bone** %bone235, align 8, !dbg !4434
  store %struct.Bone* %176, %struct.Bone** %bone234, align 8, !dbg !4432
  %177 = load %struct.bPoseChanDeform*, %struct.bPoseChanDeform** %pdef_info_array, align 8, !dbg !4435
  %178 = load i32*, i32** %defnrToPCIndex, align 8, !dbg !4436
  %179 = load i32, i32* %index, align 4, !dbg !4437
  %idxprom236 = sext i32 %179 to i64, !dbg !4436
  %arrayidx237 = getelementptr inbounds i32, i32* %178, i64 %idxprom236, !dbg !4436
  %180 = load i32, i32* %arrayidx237, align 4, !dbg !4436
  %idx.ext238 = sext i32 %180 to i64, !dbg !4438
  %add.ptr239 = getelementptr inbounds %struct.bPoseChanDeform, %struct.bPoseChanDeform* %177, i64 %idx.ext238, !dbg !4438
  store %struct.bPoseChanDeform* %add.ptr239, %struct.bPoseChanDeform** %pdef_info, align 8, !dbg !4439
  store i32 1, i32* %deformed, align 4, !dbg !4440
  %181 = load %struct.Bone*, %struct.Bone** %bone234, align 8, !dbg !4441
  %tobool240 = icmp ne %struct.Bone* %181, null, !dbg !4441
  br i1 %tobool240, label %land.lhs.true241, label %if.end250, !dbg !4443

land.lhs.true241:                                 ; preds = %if.then232
  %182 = load %struct.Bone*, %struct.Bone** %bone234, align 8, !dbg !4444
  %flag242 = getelementptr inbounds %struct.Bone, %struct.Bone* %182, i32 0, i32 10, !dbg !4445
  %183 = load i32, i32* %flag242, align 8, !dbg !4445
  %and243 = and i32 %183, 2048, !dbg !4446
  %tobool244 = icmp ne i32 %and243, 0, !dbg !4446
  br i1 %tobool244, label %if.then245, label %if.end250, !dbg !4447

if.then245:                                       ; preds = %land.lhs.true241
  %184 = load float*, float** %co, align 8, !dbg !4448
  %185 = load %struct.Bone*, %struct.Bone** %bone234, align 8, !dbg !4450
  %arm_head = getelementptr inbounds %struct.Bone, %struct.Bone* %185, i32 0, i32 11, !dbg !4451
  %arraydecay246 = getelementptr inbounds [3 x float], [3 x float]* %arm_head, i64 0, i64 0, !dbg !4450
  %186 = load %struct.Bone*, %struct.Bone** %bone234, align 8, !dbg !4452
  %arm_tail = getelementptr inbounds %struct.Bone, %struct.Bone* %186, i32 0, i32 12, !dbg !4453
  %arraydecay247 = getelementptr inbounds [3 x float], [3 x float]* %arm_tail, i64 0, i64 0, !dbg !4452
  %187 = load %struct.Bone*, %struct.Bone** %bone234, align 8, !dbg !4454
  %rad_head = getelementptr inbounds %struct.Bone, %struct.Bone* %187, i32 0, i32 22, !dbg !4455
  %188 = load float, float* %rad_head, align 4, !dbg !4455
  %189 = load %struct.Bone*, %struct.Bone** %bone234, align 8, !dbg !4456
  %rad_tail = getelementptr inbounds %struct.Bone, %struct.Bone* %189, i32 0, i32 23, !dbg !4457
  %190 = load float, float* %rad_tail, align 8, !dbg !4457
  %191 = load %struct.Bone*, %struct.Bone** %bone234, align 8, !dbg !4458
  %dist = getelementptr inbounds %struct.Bone, %struct.Bone* %191, i32 0, i32 15, !dbg !4459
  %192 = load float, float* %dist, align 8, !dbg !4459
  %call248 = call float @distfactor_to_bone(float* %184, float* %arraydecay246, float* %arraydecay247, float %188, float %190, float %192), !dbg !4460
  %193 = load float, float* %weight, align 4, !dbg !4461
  %mul249 = fmul float %193, %call248, !dbg !4461
  store float %mul249, float* %weight, align 4, !dbg !4461
  br label %if.end250, !dbg !4462

if.end250:                                        ; preds = %if.then245, %land.lhs.true241, %if.then232
  %194 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4463
  %195 = load %struct.bPoseChanDeform*, %struct.bPoseChanDeform** %pdef_info, align 8, !dbg !4464
  %196 = load float, float* %weight, align 4, !dbg !4465
  %197 = load float*, float** %vec, align 8, !dbg !4466
  %198 = load %struct.DualQuat*, %struct.DualQuat** %dq, align 8, !dbg !4467
  %199 = load [3 x float]*, [3 x float]** %smat, align 8, !dbg !4468
  %200 = load float*, float** %co, align 8, !dbg !4469
  call void @pchan_bone_deform(%struct.bPoseChannel* %194, %struct.bPoseChanDeform* %195, float %196, float* %197, %struct.DualQuat* %198, [3 x float]* %199, float* %200, float* %contrib), !dbg !4470
  br label %if.end251, !dbg !4471

if.end251:                                        ; preds = %if.end250, %land.lhs.true228, %land.lhs.true225, %for.body222
  br label %for.inc252, !dbg !4472

for.inc252:                                       ; preds = %if.end251
  %201 = load i32, i32* %j, align 4, !dbg !4473
  %dec = add i32 %201, -1, !dbg !4473
  store i32 %dec, i32* %j, align 4, !dbg !4473
  %202 = load %struct.MDeformWeight*, %struct.MDeformWeight** %dw, align 8, !dbg !4474
  %incdec.ptr253 = getelementptr inbounds %struct.MDeformWeight, %struct.MDeformWeight* %202, i32 1, !dbg !4474
  store %struct.MDeformWeight* %incdec.ptr253, %struct.MDeformWeight** %dw, align 8, !dbg !4474
  br label %for.cond219, !dbg !4475, !llvm.loop !4476

for.end254:                                       ; preds = %for.cond219
  %203 = load i32, i32* %deformed, align 4, !dbg !4478
  %cmp255 = icmp eq i32 %203, 0, !dbg !4480
  br i1 %cmp255, label %land.lhs.true257, label %if.end278, !dbg !4481

land.lhs.true257:                                 ; preds = %for.end254
  %204 = load i16, i16* %use_envelope, align 2, !dbg !4482
  %conv258 = sext i16 %204 to i32, !dbg !4482
  %tobool259 = icmp ne i32 %conv258, 0, !dbg !4482
  br i1 %tobool259, label %if.then260, label %if.end278, !dbg !4483

if.then260:                                       ; preds = %land.lhs.true257
  %205 = load %struct.bPoseChanDeform*, %struct.bPoseChanDeform** %pdef_info_array, align 8, !dbg !4484
  store %struct.bPoseChanDeform* %205, %struct.bPoseChanDeform** %pdef_info, align 8, !dbg !4486
  %206 = load %struct.Object*, %struct.Object** %armOb.addr, align 8, !dbg !4487
  %pose261 = getelementptr inbounds %struct.Object, %struct.Object* %206, i32 0, i32 18, !dbg !4489
  %207 = load %struct.bPose*, %struct.bPose** %pose261, align 8, !dbg !4489
  %chanbase262 = getelementptr inbounds %struct.bPose, %struct.bPose* %207, i32 0, i32 0, !dbg !4490
  %first263 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %chanbase262, i32 0, i32 0, !dbg !4491
  %208 = load i8*, i8** %first263, align 8, !dbg !4491
  %209 = bitcast i8* %208 to %struct.bPoseChannel*, !dbg !4487
  store %struct.bPoseChannel* %209, %struct.bPoseChannel** %pchan, align 8, !dbg !4492
  br label %for.cond264, !dbg !4493

for.cond264:                                      ; preds = %for.inc274, %if.then260
  %210 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4494
  %tobool265 = icmp ne %struct.bPoseChannel* %210, null, !dbg !4496
  br i1 %tobool265, label %for.body266, label %for.end277, !dbg !4496

for.body266:                                      ; preds = %for.cond264
  %211 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4497
  %bone267 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %211, i32 0, i32 12, !dbg !4500
  %212 = load %struct.Bone*, %struct.Bone** %bone267, align 8, !dbg !4500
  %flag268 = getelementptr inbounds %struct.Bone, %struct.Bone* %212, i32 0, i32 10, !dbg !4501
  %213 = load i32, i32* %flag268, align 8, !dbg !4501
  %and269 = and i32 %213, 4096, !dbg !4502
  %tobool270 = icmp ne i32 %and269, 0, !dbg !4502
  br i1 %tobool270, label %if.end273, label %if.then271, !dbg !4503

if.then271:                                       ; preds = %for.body266
  %214 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4504
  %215 = load %struct.bPoseChanDeform*, %struct.bPoseChanDeform** %pdef_info, align 8, !dbg !4505
  %216 = load float*, float** %vec, align 8, !dbg !4506
  %217 = load %struct.DualQuat*, %struct.DualQuat** %dq, align 8, !dbg !4507
  %218 = load [3 x float]*, [3 x float]** %smat, align 8, !dbg !4508
  %219 = load float*, float** %co, align 8, !dbg !4509
  %call272 = call float @dist_bone_deform(%struct.bPoseChannel* %214, %struct.bPoseChanDeform* %215, float* %216, %struct.DualQuat* %217, [3 x float]* %218, float* %219), !dbg !4510
  %220 = load float, float* %contrib, align 4, !dbg !4511
  %add = fadd float %220, %call272, !dbg !4511
  store float %add, float* %contrib, align 4, !dbg !4511
  br label %if.end273, !dbg !4512

if.end273:                                        ; preds = %if.then271, %for.body266
  br label %for.inc274, !dbg !4513

for.inc274:                                       ; preds = %if.end273
  %221 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4514
  %next275 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %221, i32 0, i32 0, !dbg !4515
  %222 = load %struct.bPoseChannel*, %struct.bPoseChannel** %next275, align 8, !dbg !4515
  store %struct.bPoseChannel* %222, %struct.bPoseChannel** %pchan, align 8, !dbg !4516
  %223 = load %struct.bPoseChanDeform*, %struct.bPoseChanDeform** %pdef_info, align 8, !dbg !4517
  %incdec.ptr276 = getelementptr inbounds %struct.bPoseChanDeform, %struct.bPoseChanDeform* %223, i32 1, !dbg !4517
  store %struct.bPoseChanDeform* %incdec.ptr276, %struct.bPoseChanDeform** %pdef_info, align 8, !dbg !4517
  br label %for.cond264, !dbg !4518, !llvm.loop !4519

for.end277:                                       ; preds = %for.cond264
  br label %if.end278, !dbg !4521

if.end278:                                        ; preds = %for.end277, %land.lhs.true257, %for.end254
  br label %if.end301, !dbg !4522

if.else279:                                       ; preds = %land.lhs.true214, %land.lhs.true212, %cond.end
  %224 = load i16, i16* %use_envelope, align 2, !dbg !4523
  %tobool280 = icmp ne i16 %224, 0, !dbg !4523
  br i1 %tobool280, label %if.then281, label %if.end300, !dbg !4525

if.then281:                                       ; preds = %if.else279
  %225 = load %struct.bPoseChanDeform*, %struct.bPoseChanDeform** %pdef_info_array, align 8, !dbg !4526
  store %struct.bPoseChanDeform* %225, %struct.bPoseChanDeform** %pdef_info, align 8, !dbg !4528
  %226 = load %struct.Object*, %struct.Object** %armOb.addr, align 8, !dbg !4529
  %pose282 = getelementptr inbounds %struct.Object, %struct.Object* %226, i32 0, i32 18, !dbg !4531
  %227 = load %struct.bPose*, %struct.bPose** %pose282, align 8, !dbg !4531
  %chanbase283 = getelementptr inbounds %struct.bPose, %struct.bPose* %227, i32 0, i32 0, !dbg !4532
  %first284 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %chanbase283, i32 0, i32 0, !dbg !4533
  %228 = load i8*, i8** %first284, align 8, !dbg !4533
  %229 = bitcast i8* %228 to %struct.bPoseChannel*, !dbg !4529
  store %struct.bPoseChannel* %229, %struct.bPoseChannel** %pchan, align 8, !dbg !4534
  br label %for.cond285, !dbg !4535

for.cond285:                                      ; preds = %for.inc296, %if.then281
  %230 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4536
  %tobool286 = icmp ne %struct.bPoseChannel* %230, null, !dbg !4538
  br i1 %tobool286, label %for.body287, label %for.end299, !dbg !4538

for.body287:                                      ; preds = %for.cond285
  %231 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4539
  %bone288 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %231, i32 0, i32 12, !dbg !4542
  %232 = load %struct.Bone*, %struct.Bone** %bone288, align 8, !dbg !4542
  %flag289 = getelementptr inbounds %struct.Bone, %struct.Bone* %232, i32 0, i32 10, !dbg !4543
  %233 = load i32, i32* %flag289, align 8, !dbg !4543
  %and290 = and i32 %233, 4096, !dbg !4544
  %tobool291 = icmp ne i32 %and290, 0, !dbg !4544
  br i1 %tobool291, label %if.end295, label %if.then292, !dbg !4545

if.then292:                                       ; preds = %for.body287
  %234 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4546
  %235 = load %struct.bPoseChanDeform*, %struct.bPoseChanDeform** %pdef_info, align 8, !dbg !4547
  %236 = load float*, float** %vec, align 8, !dbg !4548
  %237 = load %struct.DualQuat*, %struct.DualQuat** %dq, align 8, !dbg !4549
  %238 = load [3 x float]*, [3 x float]** %smat, align 8, !dbg !4550
  %239 = load float*, float** %co, align 8, !dbg !4551
  %call293 = call float @dist_bone_deform(%struct.bPoseChannel* %234, %struct.bPoseChanDeform* %235, float* %236, %struct.DualQuat* %237, [3 x float]* %238, float* %239), !dbg !4552
  %240 = load float, float* %contrib, align 4, !dbg !4553
  %add294 = fadd float %240, %call293, !dbg !4553
  store float %add294, float* %contrib, align 4, !dbg !4553
  br label %if.end295, !dbg !4554

if.end295:                                        ; preds = %if.then292, %for.body287
  br label %for.inc296, !dbg !4555

for.inc296:                                       ; preds = %if.end295
  %241 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4556
  %next297 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %241, i32 0, i32 0, !dbg !4557
  %242 = load %struct.bPoseChannel*, %struct.bPoseChannel** %next297, align 8, !dbg !4557
  store %struct.bPoseChannel* %242, %struct.bPoseChannel** %pchan, align 8, !dbg !4558
  %243 = load %struct.bPoseChanDeform*, %struct.bPoseChanDeform** %pdef_info, align 8, !dbg !4559
  %incdec.ptr298 = getelementptr inbounds %struct.bPoseChanDeform, %struct.bPoseChanDeform* %243, i32 1, !dbg !4559
  store %struct.bPoseChanDeform* %incdec.ptr298, %struct.bPoseChanDeform** %pdef_info, align 8, !dbg !4559
  br label %for.cond285, !dbg !4560, !llvm.loop !4561

for.end299:                                       ; preds = %for.cond285
  br label %if.end300, !dbg !4563

if.end300:                                        ; preds = %for.end299, %if.else279
  br label %if.end301

if.end301:                                        ; preds = %if.end300, %if.end278
  %244 = load float, float* %contrib, align 4, !dbg !4564
  %cmp302 = fcmp ogt float %244, 0x3F1A36E2E0000000, !dbg !4566
  br i1 %cmp302, label %if.then304, label %if.end353, !dbg !4567

if.then304:                                       ; preds = %if.end301
  %245 = load i16, i16* %use_quaternion, align 2, !dbg !4568
  %tobool305 = icmp ne i16 %245, 0, !dbg !4568
  br i1 %tobool305, label %if.then306, label %if.else330, !dbg !4571

if.then306:                                       ; preds = %if.then304
  %246 = load %struct.DualQuat*, %struct.DualQuat** %dq, align 8, !dbg !4572
  %247 = load float, float* %contrib, align 4, !dbg !4574
  call void @normalize_dq(%struct.DualQuat* %246, float %247), !dbg !4575
  %248 = load float, float* %armature_weight, align 4, !dbg !4576
  %cmp307 = fcmp une float %248, 1.000000e+00, !dbg !4578
  br i1 %cmp307, label %if.then309, label %if.else321, !dbg !4579

if.then309:                                       ; preds = %if.then306
  %arraydecay310 = getelementptr inbounds [3 x float], [3 x float]* %dco, i64 0, i64 0, !dbg !4580
  %249 = load float*, float** %co, align 8, !dbg !4582
  call void @copy_v3_v3(float* %arraydecay310, float* %249), !dbg !4583
  %arraydecay311 = getelementptr inbounds [3 x float], [3 x float]* %dco, i64 0, i64 0, !dbg !4584
  %250 = load [3 x [3 x float]]*, [3 x [3 x float]]** %defMats.addr, align 8, !dbg !4585
  %tobool312 = icmp ne [3 x [3 x float]]* %250, null, !dbg !4586
  br i1 %tobool312, label %cond.true313, label %cond.false315, !dbg !4586

cond.true313:                                     ; preds = %if.then309
  %arraydecay314 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %summat, i64 0, i64 0, !dbg !4587
  br label %cond.end316, !dbg !4586

cond.false315:                                    ; preds = %if.then309
  br label %cond.end316, !dbg !4586

cond.end316:                                      ; preds = %cond.false315, %cond.true313
  %cond317 = phi [3 x float]* [ %arraydecay314, %cond.true313 ], [ null, %cond.false315 ], !dbg !4586
  %251 = load %struct.DualQuat*, %struct.DualQuat** %dq, align 8, !dbg !4588
  call void @mul_v3m3_dq(float* %arraydecay311, [3 x float]* %cond317, %struct.DualQuat* %251), !dbg !4589
  %arraydecay318 = getelementptr inbounds [3 x float], [3 x float]* %dco, i64 0, i64 0, !dbg !4590
  %252 = load float*, float** %co, align 8, !dbg !4591
  call void @sub_v3_v3(float* %arraydecay318, float* %252), !dbg !4592
  %arraydecay319 = getelementptr inbounds [3 x float], [3 x float]* %dco, i64 0, i64 0, !dbg !4593
  %253 = load float, float* %armature_weight, align 4, !dbg !4594
  call void @mul_v3_fl(float* %arraydecay319, float %253), !dbg !4595
  %254 = load float*, float** %co, align 8, !dbg !4596
  %arraydecay320 = getelementptr inbounds [3 x float], [3 x float]* %dco, i64 0, i64 0, !dbg !4597
  call void @add_v3_v3(float* %254, float* %arraydecay320), !dbg !4598
  br label %if.end328, !dbg !4599

if.else321:                                       ; preds = %if.then306
  %255 = load float*, float** %co, align 8, !dbg !4600
  %256 = load [3 x [3 x float]]*, [3 x [3 x float]]** %defMats.addr, align 8, !dbg !4601
  %tobool322 = icmp ne [3 x [3 x float]]* %256, null, !dbg !4602
  br i1 %tobool322, label %cond.true323, label %cond.false325, !dbg !4602

cond.true323:                                     ; preds = %if.else321
  %arraydecay324 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %summat, i64 0, i64 0, !dbg !4603
  br label %cond.end326, !dbg !4602

cond.false325:                                    ; preds = %if.else321
  br label %cond.end326, !dbg !4602

cond.end326:                                      ; preds = %cond.false325, %cond.true323
  %cond327 = phi [3 x float]* [ %arraydecay324, %cond.true323 ], [ null, %cond.false325 ], !dbg !4602
  %257 = load %struct.DualQuat*, %struct.DualQuat** %dq, align 8, !dbg !4604
  call void @mul_v3m3_dq(float* %255, [3 x float]* %cond327, %struct.DualQuat* %257), !dbg !4605
  br label %if.end328

if.end328:                                        ; preds = %cond.end326, %cond.end316
  %arraydecay329 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %summat, i64 0, i64 0, !dbg !4606
  store [3 x float]* %arraydecay329, [3 x float]** %smat, align 8, !dbg !4607
  br label %if.end331, !dbg !4608

if.else330:                                       ; preds = %if.then304
  %258 = load float*, float** %vec, align 8, !dbg !4609
  %259 = load float, float* %armature_weight, align 4, !dbg !4611
  %260 = load float, float* %contrib, align 4, !dbg !4612
  %div = fdiv float %259, %260, !dbg !4613
  call void @mul_v3_fl(float* %258, float %div), !dbg !4614
  %261 = load float*, float** %co, align 8, !dbg !4615
  %262 = load float*, float** %vec, align 8, !dbg !4616
  %263 = load float*, float** %co, align 8, !dbg !4617
  call void @add_v3_v3v3(float* %261, float* %262, float* %263), !dbg !4618
  br label %if.end331

if.end331:                                        ; preds = %if.else330, %if.end328
  %264 = load [3 x [3 x float]]*, [3 x [3 x float]]** %defMats.addr, align 8, !dbg !4619
  %tobool332 = icmp ne [3 x [3 x float]]* %264, null, !dbg !4619
  br i1 %tobool332, label %if.then333, label %if.end352, !dbg !4621

if.then333:                                       ; preds = %if.end331
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %pre, metadata !4622, metadata !DIExpression()), !dbg !4624
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %post, metadata !4625, metadata !DIExpression()), !dbg !4626
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %tmpmat, metadata !4627, metadata !DIExpression()), !dbg !4628
  %arraydecay334 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %pre, i64 0, i64 0, !dbg !4629
  %arraydecay335 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %premat, i64 0, i64 0, !dbg !4630
  call void @copy_m3_m4([3 x float]* %arraydecay334, [4 x float]* %arraydecay335), !dbg !4631
  %arraydecay336 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %post, i64 0, i64 0, !dbg !4632
  %arraydecay337 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %postmat, i64 0, i64 0, !dbg !4633
  call void @copy_m3_m4([3 x float]* %arraydecay336, [4 x float]* %arraydecay337), !dbg !4634
  %arraydecay338 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmpmat, i64 0, i64 0, !dbg !4635
  %265 = load [3 x [3 x float]]*, [3 x [3 x float]]** %defMats.addr, align 8, !dbg !4636
  %266 = load i32, i32* %i, align 4, !dbg !4637
  %idxprom339 = sext i32 %266 to i64, !dbg !4636
  %arrayidx340 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %265, i64 %idxprom339, !dbg !4636
  %arraydecay341 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %arrayidx340, i64 0, i64 0, !dbg !4636
  call void @copy_m3_m3([3 x float]* %arraydecay338, [3 x float]* %arraydecay341), !dbg !4638
  %267 = load i16, i16* %use_quaternion, align 2, !dbg !4639
  %tobool342 = icmp ne i16 %267, 0, !dbg !4639
  br i1 %tobool342, label %if.end345, label %if.then343, !dbg !4641

if.then343:                                       ; preds = %if.then333
  %268 = load [3 x float]*, [3 x float]** %smat, align 8, !dbg !4642
  %269 = load float, float* %armature_weight, align 4, !dbg !4643
  %270 = load float, float* %contrib, align 4, !dbg !4644
  %div344 = fdiv float %269, %270, !dbg !4645
  call void @mul_m3_fl([3 x float]* %268, float %div344), !dbg !4646
  br label %if.end345, !dbg !4646

if.end345:                                        ; preds = %if.then343, %if.then333
  %271 = load [3 x [3 x float]]*, [3 x [3 x float]]** %defMats.addr, align 8, !dbg !4647
  %272 = load i32, i32* %i, align 4, !dbg !4647
  %idxprom346 = sext i32 %272 to i64, !dbg !4647
  %arrayidx347 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %271, i64 %idxprom346, !dbg !4647
  %arraydecay348 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %arrayidx347, i64 0, i64 0, !dbg !4647
  %arraydecay349 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %post, i64 0, i64 0, !dbg !4647
  %273 = load [3 x float]*, [3 x float]** %smat, align 8, !dbg !4647
  %arraydecay350 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %pre, i64 0, i64 0, !dbg !4647
  %arraydecay351 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmpmat, i64 0, i64 0, !dbg !4647
  call void @_va_mul_m3_series_5([3 x float]* %arraydecay348, [3 x float]* %arraydecay349, [3 x float]* %273, [3 x float]* %arraydecay350, [3 x float]* %arraydecay351), !dbg !4647
  br label %if.end352, !dbg !4648

if.end352:                                        ; preds = %if.end345, %if.end331
  br label %if.end353, !dbg !4649

if.end353:                                        ; preds = %if.end352, %if.end301
  %arraydecay354 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %postmat, i64 0, i64 0, !dbg !4650
  %274 = load float*, float** %co, align 8, !dbg !4651
  call void @mul_m4_v3([4 x float]* %arraydecay354, float* %274), !dbg !4652
  %275 = load [3 x float]*, [3 x float]** %prevCos.addr, align 8, !dbg !4653
  %tobool355 = icmp ne [3 x float]* %275, null, !dbg !4653
  br i1 %tobool355, label %if.then356, label %if.end388, !dbg !4655

if.then356:                                       ; preds = %if.end353
  call void @llvm.dbg.declare(metadata float* %mw, metadata !4656, metadata !DIExpression()), !dbg !4658
  %276 = load float, float* %prevco_weight, align 4, !dbg !4659
  %sub357 = fsub float 1.000000e+00, %276, !dbg !4660
  store float %sub357, float* %mw, align 4, !dbg !4658
  %277 = load float, float* %prevco_weight, align 4, !dbg !4661
  %278 = load [3 x float]*, [3 x float]** %vertexCos.addr, align 8, !dbg !4662
  %279 = load i32, i32* %i, align 4, !dbg !4663
  %idxprom358 = sext i32 %279 to i64, !dbg !4662
  %arrayidx359 = getelementptr inbounds [3 x float], [3 x float]* %278, i64 %idxprom358, !dbg !4662
  %arrayidx360 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx359, i64 0, i64 0, !dbg !4662
  %280 = load float, float* %arrayidx360, align 4, !dbg !4662
  %mul361 = fmul float %277, %280, !dbg !4664
  %281 = load float, float* %mw, align 4, !dbg !4665
  %282 = load float*, float** %co, align 8, !dbg !4666
  %arrayidx362 = getelementptr inbounds float, float* %282, i64 0, !dbg !4666
  %283 = load float, float* %arrayidx362, align 4, !dbg !4666
  %mul363 = fmul float %281, %283, !dbg !4667
  %add364 = fadd float %mul361, %mul363, !dbg !4668
  %284 = load [3 x float]*, [3 x float]** %vertexCos.addr, align 8, !dbg !4669
  %285 = load i32, i32* %i, align 4, !dbg !4670
  %idxprom365 = sext i32 %285 to i64, !dbg !4669
  %arrayidx366 = getelementptr inbounds [3 x float], [3 x float]* %284, i64 %idxprom365, !dbg !4669
  %arrayidx367 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx366, i64 0, i64 0, !dbg !4669
  store float %add364, float* %arrayidx367, align 4, !dbg !4671
  %286 = load float, float* %prevco_weight, align 4, !dbg !4672
  %287 = load [3 x float]*, [3 x float]** %vertexCos.addr, align 8, !dbg !4673
  %288 = load i32, i32* %i, align 4, !dbg !4674
  %idxprom368 = sext i32 %288 to i64, !dbg !4673
  %arrayidx369 = getelementptr inbounds [3 x float], [3 x float]* %287, i64 %idxprom368, !dbg !4673
  %arrayidx370 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx369, i64 0, i64 1, !dbg !4673
  %289 = load float, float* %arrayidx370, align 4, !dbg !4673
  %mul371 = fmul float %286, %289, !dbg !4675
  %290 = load float, float* %mw, align 4, !dbg !4676
  %291 = load float*, float** %co, align 8, !dbg !4677
  %arrayidx372 = getelementptr inbounds float, float* %291, i64 1, !dbg !4677
  %292 = load float, float* %arrayidx372, align 4, !dbg !4677
  %mul373 = fmul float %290, %292, !dbg !4678
  %add374 = fadd float %mul371, %mul373, !dbg !4679
  %293 = load [3 x float]*, [3 x float]** %vertexCos.addr, align 8, !dbg !4680
  %294 = load i32, i32* %i, align 4, !dbg !4681
  %idxprom375 = sext i32 %294 to i64, !dbg !4680
  %arrayidx376 = getelementptr inbounds [3 x float], [3 x float]* %293, i64 %idxprom375, !dbg !4680
  %arrayidx377 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx376, i64 0, i64 1, !dbg !4680
  store float %add374, float* %arrayidx377, align 4, !dbg !4682
  %295 = load float, float* %prevco_weight, align 4, !dbg !4683
  %296 = load [3 x float]*, [3 x float]** %vertexCos.addr, align 8, !dbg !4684
  %297 = load i32, i32* %i, align 4, !dbg !4685
  %idxprom378 = sext i32 %297 to i64, !dbg !4684
  %arrayidx379 = getelementptr inbounds [3 x float], [3 x float]* %296, i64 %idxprom378, !dbg !4684
  %arrayidx380 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx379, i64 0, i64 2, !dbg !4684
  %298 = load float, float* %arrayidx380, align 4, !dbg !4684
  %mul381 = fmul float %295, %298, !dbg !4686
  %299 = load float, float* %mw, align 4, !dbg !4687
  %300 = load float*, float** %co, align 8, !dbg !4688
  %arrayidx382 = getelementptr inbounds float, float* %300, i64 2, !dbg !4688
  %301 = load float, float* %arrayidx382, align 4, !dbg !4688
  %mul383 = fmul float %299, %301, !dbg !4689
  %add384 = fadd float %mul381, %mul383, !dbg !4690
  %302 = load [3 x float]*, [3 x float]** %vertexCos.addr, align 8, !dbg !4691
  %303 = load i32, i32* %i, align 4, !dbg !4692
  %idxprom385 = sext i32 %303 to i64, !dbg !4691
  %arrayidx386 = getelementptr inbounds [3 x float], [3 x float]* %302, i64 %idxprom385, !dbg !4691
  %arrayidx387 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx386, i64 0, i64 2, !dbg !4691
  store float %add384, float* %arrayidx387, align 4, !dbg !4693
  br label %if.end388, !dbg !4694

if.end388:                                        ; preds = %if.then356, %if.end353
  br label %for.inc389, !dbg !4695

for.inc389:                                       ; preds = %if.end388, %if.then200
  %304 = load i32, i32* %i, align 4, !dbg !4696
  %inc390 = add nsw i32 %304, 1, !dbg !4696
  store i32 %inc390, i32* %i, align 4, !dbg !4696
  br label %for.cond148, !dbg !4697, !llvm.loop !4698

for.end391:                                       ; preds = %for.cond148
  %305 = load %struct.DualQuat*, %struct.DualQuat** %dualquats, align 8, !dbg !4700
  %tobool392 = icmp ne %struct.DualQuat* %305, null, !dbg !4700
  br i1 %tobool392, label %if.then393, label %if.end394, !dbg !4702

if.then393:                                       ; preds = %for.end391
  %306 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4703
  %307 = load %struct.DualQuat*, %struct.DualQuat** %dualquats, align 8, !dbg !4704
  %308 = bitcast %struct.DualQuat* %307 to i8*, !dbg !4704
  call void %306(i8* %308), !dbg !4703
  br label %if.end394, !dbg !4703

if.end394:                                        ; preds = %if.then393, %for.end391
  %309 = load %struct.bPoseChannel**, %struct.bPoseChannel*** %defnrToPC, align 8, !dbg !4705
  %tobool395 = icmp ne %struct.bPoseChannel** %309, null, !dbg !4705
  br i1 %tobool395, label %if.then396, label %if.end397, !dbg !4707

if.then396:                                       ; preds = %if.end394
  %310 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4708
  %311 = load %struct.bPoseChannel**, %struct.bPoseChannel*** %defnrToPC, align 8, !dbg !4709
  %312 = bitcast %struct.bPoseChannel** %311 to i8*, !dbg !4709
  call void %310(i8* %312), !dbg !4708
  br label %if.end397, !dbg !4708

if.end397:                                        ; preds = %if.then396, %if.end394
  %313 = load i32*, i32** %defnrToPCIndex, align 8, !dbg !4710
  %tobool398 = icmp ne i32* %313, null, !dbg !4710
  br i1 %tobool398, label %if.then399, label %if.end400, !dbg !4712

if.then399:                                       ; preds = %if.end397
  %314 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4713
  %315 = load i32*, i32** %defnrToPCIndex, align 8, !dbg !4714
  %316 = bitcast i32* %315 to i8*, !dbg !4714
  call void %314(i8* %316), !dbg !4713
  br label %if.end400, !dbg !4713

if.end400:                                        ; preds = %if.then399, %if.end397
  %317 = load %struct.bPoseChanDeform*, %struct.bPoseChanDeform** %pdef_info_array, align 8, !dbg !4715
  store %struct.bPoseChanDeform* %317, %struct.bPoseChanDeform** %pdef_info, align 8, !dbg !4716
  %318 = load %struct.Object*, %struct.Object** %armOb.addr, align 8, !dbg !4717
  %pose401 = getelementptr inbounds %struct.Object, %struct.Object* %318, i32 0, i32 18, !dbg !4719
  %319 = load %struct.bPose*, %struct.bPose** %pose401, align 8, !dbg !4719
  %chanbase402 = getelementptr inbounds %struct.bPose, %struct.bPose* %319, i32 0, i32 0, !dbg !4720
  %first403 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %chanbase402, i32 0, i32 0, !dbg !4721
  %320 = load i8*, i8** %first403, align 8, !dbg !4721
  %321 = bitcast i8* %320 to %struct.bPoseChannel*, !dbg !4717
  store %struct.bPoseChannel* %321, %struct.bPoseChannel** %pchan, align 8, !dbg !4722
  br label %for.cond404, !dbg !4723

for.cond404:                                      ; preds = %for.inc415, %if.end400
  %322 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4724
  %tobool405 = icmp ne %struct.bPoseChannel* %322, null, !dbg !4726
  br i1 %tobool405, label %for.body406, label %for.end418, !dbg !4726

for.body406:                                      ; preds = %for.cond404
  %323 = load %struct.bPoseChanDeform*, %struct.bPoseChanDeform** %pdef_info, align 8, !dbg !4727
  %b_bone_mats = getelementptr inbounds %struct.bPoseChanDeform, %struct.bPoseChanDeform* %323, i32 0, i32 0, !dbg !4730
  %324 = load %struct.Mat4*, %struct.Mat4** %b_bone_mats, align 8, !dbg !4730
  %tobool407 = icmp ne %struct.Mat4* %324, null, !dbg !4727
  br i1 %tobool407, label %if.then408, label %if.end410, !dbg !4731

if.then408:                                       ; preds = %for.body406
  %325 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4732
  %326 = load %struct.bPoseChanDeform*, %struct.bPoseChanDeform** %pdef_info, align 8, !dbg !4733
  %b_bone_mats409 = getelementptr inbounds %struct.bPoseChanDeform, %struct.bPoseChanDeform* %326, i32 0, i32 0, !dbg !4734
  %327 = load %struct.Mat4*, %struct.Mat4** %b_bone_mats409, align 8, !dbg !4734
  %328 = bitcast %struct.Mat4* %327 to i8*, !dbg !4733
  call void %325(i8* %328), !dbg !4732
  br label %if.end410, !dbg !4732

if.end410:                                        ; preds = %if.then408, %for.body406
  %329 = load %struct.bPoseChanDeform*, %struct.bPoseChanDeform** %pdef_info, align 8, !dbg !4735
  %b_bone_dual_quats = getelementptr inbounds %struct.bPoseChanDeform, %struct.bPoseChanDeform* %329, i32 0, i32 2, !dbg !4737
  %330 = load %struct.DualQuat*, %struct.DualQuat** %b_bone_dual_quats, align 8, !dbg !4737
  %tobool411 = icmp ne %struct.DualQuat* %330, null, !dbg !4735
  br i1 %tobool411, label %if.then412, label %if.end414, !dbg !4738

if.then412:                                       ; preds = %if.end410
  %331 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4739
  %332 = load %struct.bPoseChanDeform*, %struct.bPoseChanDeform** %pdef_info, align 8, !dbg !4740
  %b_bone_dual_quats413 = getelementptr inbounds %struct.bPoseChanDeform, %struct.bPoseChanDeform* %332, i32 0, i32 2, !dbg !4741
  %333 = load %struct.DualQuat*, %struct.DualQuat** %b_bone_dual_quats413, align 8, !dbg !4741
  %334 = bitcast %struct.DualQuat* %333 to i8*, !dbg !4740
  call void %331(i8* %334), !dbg !4739
  br label %if.end414, !dbg !4739

if.end414:                                        ; preds = %if.then412, %if.end410
  br label %for.inc415, !dbg !4742

for.inc415:                                       ; preds = %if.end414
  %335 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !4743
  %next416 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %335, i32 0, i32 0, !dbg !4744
  %336 = load %struct.bPoseChannel*, %struct.bPoseChannel** %next416, align 8, !dbg !4744
  store %struct.bPoseChannel* %336, %struct.bPoseChannel** %pchan, align 8, !dbg !4745
  %337 = load %struct.bPoseChanDeform*, %struct.bPoseChanDeform** %pdef_info, align 8, !dbg !4746
  %incdec.ptr417 = getelementptr inbounds %struct.bPoseChanDeform, %struct.bPoseChanDeform* %337, i32 1, !dbg !4746
  store %struct.bPoseChanDeform* %incdec.ptr417, %struct.bPoseChanDeform** %pdef_info, align 8, !dbg !4746
  br label %for.cond404, !dbg !4747, !llvm.loop !4748

for.end418:                                       ; preds = %for.cond404
  %338 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4750
  %339 = load %struct.bPoseChanDeform*, %struct.bPoseChanDeform** %pdef_info_array, align 8, !dbg !4751
  %340 = bitcast %struct.bPoseChanDeform* %339 to i8*, !dbg !4751
  call void %338(i8* %340), !dbg !4750
  br label %return, !dbg !4752

return:                                           ; preds = %for.end418, %if.then
  ret void, !dbg !4752
}

declare dso_local i32 @BLI_countlist(%struct.ListBase*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @pchan_b_bone_defmats(%struct.bPoseChannel* %pchan, %struct.bPoseChanDeform* %pdef_info, i32 %use_quaternion) #0 !dbg !4753 {
entry:
  %pchan.addr = alloca %struct.bPoseChannel*, align 8
  %pdef_info.addr = alloca %struct.bPoseChanDeform*, align 8
  %use_quaternion.addr = alloca i32, align 4
  %bone = alloca %struct.Bone*, align 8
  %b_bone = alloca [32 x %struct.Mat4], align 16
  %b_bone_rest = alloca [32 x %struct.Mat4], align 16
  %b_bone_mats = alloca %struct.Mat4*, align 8
  %b_bone_dual_quats = alloca %struct.DualQuat*, align 8
  %a = alloca i32, align 4
  %tmat = alloca [4 x [4 x float]], align 16
  store %struct.bPoseChannel* %pchan, %struct.bPoseChannel** %pchan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan.addr, metadata !4756, metadata !DIExpression()), !dbg !4757
  store %struct.bPoseChanDeform* %pdef_info, %struct.bPoseChanDeform** %pdef_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bPoseChanDeform** %pdef_info.addr, metadata !4758, metadata !DIExpression()), !dbg !4759
  store i32 %use_quaternion, i32* %use_quaternion.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %use_quaternion.addr, metadata !4760, metadata !DIExpression()), !dbg !4761
  call void @llvm.dbg.declare(metadata %struct.Bone** %bone, metadata !4762, metadata !DIExpression()), !dbg !4763
  %0 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !4764
  %bone1 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %0, i32 0, i32 12, !dbg !4765
  %1 = load %struct.Bone*, %struct.Bone** %bone1, align 8, !dbg !4765
  store %struct.Bone* %1, %struct.Bone** %bone, align 8, !dbg !4763
  call void @llvm.dbg.declare(metadata [32 x %struct.Mat4]* %b_bone, metadata !4766, metadata !DIExpression()), !dbg !4768
  call void @llvm.dbg.declare(metadata [32 x %struct.Mat4]* %b_bone_rest, metadata !4769, metadata !DIExpression()), !dbg !4770
  call void @llvm.dbg.declare(metadata %struct.Mat4** %b_bone_mats, metadata !4771, metadata !DIExpression()), !dbg !4772
  call void @llvm.dbg.declare(metadata %struct.DualQuat** %b_bone_dual_quats, metadata !4773, metadata !DIExpression()), !dbg !4774
  store %struct.DualQuat* null, %struct.DualQuat** %b_bone_dual_quats, align 8, !dbg !4774
  call void @llvm.dbg.declare(metadata i32* %a, metadata !4775, metadata !DIExpression()), !dbg !4776
  %2 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !4777
  %arraydecay = getelementptr inbounds [32 x %struct.Mat4], [32 x %struct.Mat4]* %b_bone, i64 0, i64 0, !dbg !4778
  call void @b_bone_spline_setup(%struct.bPoseChannel* %2, i32 0, %struct.Mat4* %arraydecay), !dbg !4779
  %3 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !4780
  %arraydecay2 = getelementptr inbounds [32 x %struct.Mat4], [32 x %struct.Mat4]* %b_bone_rest, i64 0, i64 0, !dbg !4781
  call void @b_bone_spline_setup(%struct.bPoseChannel* %3, i32 1, %struct.Mat4* %arraydecay2), !dbg !4782
  %4 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4783
  %5 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !4784
  %segments = getelementptr inbounds %struct.Bone, %struct.Bone* %5, i32 0, i32 26, !dbg !4785
  %6 = load i16, i16* %segments, align 4, !dbg !4785
  %conv = sext i16 %6 to i32, !dbg !4784
  %add = add nsw i32 1, %conv, !dbg !4786
  %conv3 = sext i32 %add to i64, !dbg !4787
  %mul = mul i64 %conv3, 64, !dbg !4788
  %call = call i8* %4(i64 %mul, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.12, i64 0, i64 0)), !dbg !4783
  %7 = bitcast i8* %call to %struct.Mat4*, !dbg !4783
  store %struct.Mat4* %7, %struct.Mat4** %b_bone_mats, align 8, !dbg !4789
  %8 = load %struct.Mat4*, %struct.Mat4** %b_bone_mats, align 8, !dbg !4790
  %9 = load %struct.bPoseChanDeform*, %struct.bPoseChanDeform** %pdef_info.addr, align 8, !dbg !4791
  %b_bone_mats4 = getelementptr inbounds %struct.bPoseChanDeform, %struct.bPoseChanDeform* %9, i32 0, i32 0, !dbg !4792
  store %struct.Mat4* %8, %struct.Mat4** %b_bone_mats4, align 8, !dbg !4793
  %10 = load i32, i32* %use_quaternion.addr, align 4, !dbg !4794
  %tobool = icmp ne i32 %10, 0, !dbg !4794
  br i1 %tobool, label %if.then, label %if.end, !dbg !4796

if.then:                                          ; preds = %entry
  %11 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !4797
  %12 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !4799
  %segments5 = getelementptr inbounds %struct.Bone, %struct.Bone* %12, i32 0, i32 26, !dbg !4800
  %13 = load i16, i16* %segments5, align 4, !dbg !4800
  %conv6 = sext i16 %13 to i64, !dbg !4801
  %mul7 = mul i64 %conv6, 100, !dbg !4802
  %call8 = call i8* %11(i64 %mul7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.13, i64 0, i64 0)), !dbg !4797
  %14 = bitcast i8* %call8 to %struct.DualQuat*, !dbg !4797
  store %struct.DualQuat* %14, %struct.DualQuat** %b_bone_dual_quats, align 8, !dbg !4803
  %15 = load %struct.DualQuat*, %struct.DualQuat** %b_bone_dual_quats, align 8, !dbg !4804
  %16 = load %struct.bPoseChanDeform*, %struct.bPoseChanDeform** %pdef_info.addr, align 8, !dbg !4805
  %b_bone_dual_quats9 = getelementptr inbounds %struct.bPoseChanDeform, %struct.bPoseChanDeform* %16, i32 0, i32 2, !dbg !4806
  store %struct.DualQuat* %15, %struct.DualQuat** %b_bone_dual_quats9, align 8, !dbg !4807
  br label %if.end, !dbg !4808

if.end:                                           ; preds = %if.then, %entry
  %17 = load %struct.Mat4*, %struct.Mat4** %b_bone_mats, align 8, !dbg !4809
  %arrayidx = getelementptr inbounds %struct.Mat4, %struct.Mat4* %17, i64 0, !dbg !4809
  %mat = getelementptr inbounds %struct.Mat4, %struct.Mat4* %arrayidx, i32 0, i32 0, !dbg !4810
  %arraydecay10 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat, i64 0, i64 0, !dbg !4809
  %18 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !4811
  %arm_mat = getelementptr inbounds %struct.Bone, %struct.Bone* %18, i32 0, i32 13, !dbg !4812
  %arraydecay11 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %arm_mat, i64 0, i64 0, !dbg !4811
  %call12 = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay10, [4 x float]* %arraydecay11), !dbg !4813
  store i32 0, i32* %a, align 4, !dbg !4814
  br label %for.cond, !dbg !4816

for.cond:                                         ; preds = %for.inc, %if.end
  %19 = load i32, i32* %a, align 4, !dbg !4817
  %20 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !4819
  %segments13 = getelementptr inbounds %struct.Bone, %struct.Bone* %20, i32 0, i32 26, !dbg !4820
  %21 = load i16, i16* %segments13, align 4, !dbg !4820
  %conv14 = sext i16 %21 to i32, !dbg !4819
  %cmp = icmp slt i32 %19, %conv14, !dbg !4821
  br i1 %cmp, label %for.body, label %for.end, !dbg !4822

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %tmat, metadata !4823, metadata !DIExpression()), !dbg !4825
  %arraydecay16 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tmat, i64 0, i64 0, !dbg !4826
  %22 = load i32, i32* %a, align 4, !dbg !4827
  %idxprom = sext i32 %22 to i64, !dbg !4828
  %arrayidx17 = getelementptr inbounds [32 x %struct.Mat4], [32 x %struct.Mat4]* %b_bone_rest, i64 0, i64 %idxprom, !dbg !4828
  %mat18 = getelementptr inbounds %struct.Mat4, %struct.Mat4* %arrayidx17, i32 0, i32 0, !dbg !4829
  %arraydecay19 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat18, i64 0, i64 0, !dbg !4828
  %call20 = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay16, [4 x float]* %arraydecay19), !dbg !4830
  %23 = load %struct.Mat4*, %struct.Mat4** %b_bone_mats, align 8, !dbg !4831
  %24 = load i32, i32* %a, align 4, !dbg !4831
  %add21 = add nsw i32 %24, 1, !dbg !4831
  %idxprom22 = sext i32 %add21 to i64, !dbg !4831
  %arrayidx23 = getelementptr inbounds %struct.Mat4, %struct.Mat4* %23, i64 %idxprom22, !dbg !4831
  %mat24 = getelementptr inbounds %struct.Mat4, %struct.Mat4* %arrayidx23, i32 0, i32 0, !dbg !4831
  %arraydecay25 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat24, i64 0, i64 0, !dbg !4831
  %25 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !4831
  %chan_mat = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %25, i32 0, i32 28, !dbg !4831
  %arraydecay26 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %chan_mat, i64 0, i64 0, !dbg !4831
  %26 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !4831
  %arm_mat27 = getelementptr inbounds %struct.Bone, %struct.Bone* %26, i32 0, i32 13, !dbg !4831
  %arraydecay28 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %arm_mat27, i64 0, i64 0, !dbg !4831
  %27 = load i32, i32* %a, align 4, !dbg !4831
  %idxprom29 = sext i32 %27 to i64, !dbg !4831
  %arrayidx30 = getelementptr inbounds [32 x %struct.Mat4], [32 x %struct.Mat4]* %b_bone, i64 0, i64 %idxprom29, !dbg !4831
  %mat31 = getelementptr inbounds %struct.Mat4, %struct.Mat4* %arrayidx30, i32 0, i32 0, !dbg !4831
  %arraydecay32 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat31, i64 0, i64 0, !dbg !4831
  %arraydecay33 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tmat, i64 0, i64 0, !dbg !4831
  %28 = load %struct.Mat4*, %struct.Mat4** %b_bone_mats, align 8, !dbg !4831
  %arrayidx34 = getelementptr inbounds %struct.Mat4, %struct.Mat4* %28, i64 0, !dbg !4831
  %mat35 = getelementptr inbounds %struct.Mat4, %struct.Mat4* %arrayidx34, i32 0, i32 0, !dbg !4831
  %arraydecay36 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat35, i64 0, i64 0, !dbg !4831
  call void @_va_mul_m4_series_6([4 x float]* %arraydecay25, [4 x float]* %arraydecay26, [4 x float]* %arraydecay28, [4 x float]* %arraydecay32, [4 x float]* %arraydecay33, [4 x float]* %arraydecay36), !dbg !4831
  %29 = load i32, i32* %use_quaternion.addr, align 4, !dbg !4832
  %tobool37 = icmp ne i32 %29, 0, !dbg !4832
  br i1 %tobool37, label %if.then38, label %if.end48, !dbg !4834

if.then38:                                        ; preds = %for.body
  %30 = load %struct.DualQuat*, %struct.DualQuat** %b_bone_dual_quats, align 8, !dbg !4835
  %31 = load i32, i32* %a, align 4, !dbg !4836
  %idxprom39 = sext i32 %31 to i64, !dbg !4835
  %arrayidx40 = getelementptr inbounds %struct.DualQuat, %struct.DualQuat* %30, i64 %idxprom39, !dbg !4835
  %32 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !4837
  %arm_mat41 = getelementptr inbounds %struct.Bone, %struct.Bone* %32, i32 0, i32 13, !dbg !4838
  %arraydecay42 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %arm_mat41, i64 0, i64 0, !dbg !4837
  %33 = load %struct.Mat4*, %struct.Mat4** %b_bone_mats, align 8, !dbg !4839
  %34 = load i32, i32* %a, align 4, !dbg !4840
  %add43 = add nsw i32 %34, 1, !dbg !4841
  %idxprom44 = sext i32 %add43 to i64, !dbg !4839
  %arrayidx45 = getelementptr inbounds %struct.Mat4, %struct.Mat4* %33, i64 %idxprom44, !dbg !4839
  %mat46 = getelementptr inbounds %struct.Mat4, %struct.Mat4* %arrayidx45, i32 0, i32 0, !dbg !4842
  %arraydecay47 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat46, i64 0, i64 0, !dbg !4839
  call void @mat4_to_dquat(%struct.DualQuat* %arrayidx40, [4 x float]* %arraydecay42, [4 x float]* %arraydecay47), !dbg !4843
  br label %if.end48, !dbg !4843

if.end48:                                         ; preds = %if.then38, %for.body
  br label %for.inc, !dbg !4844

for.inc:                                          ; preds = %if.end48
  %35 = load i32, i32* %a, align 4, !dbg !4845
  %inc = add nsw i32 %35, 1, !dbg !4845
  store i32 %inc, i32* %a, align 4, !dbg !4845
  br label %for.cond, !dbg !4846, !llvm.loop !4847

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4849
}

declare dso_local void @mat4_to_dquat(%struct.DualQuat*, [4 x float]*, [4 x float]*) #2

declare dso_local i32 @defgroup_name_index(%struct.Object*, i8*) #2

declare dso_local %struct.bPoseChannel* @BKE_pose_channel_find_name(%struct.bPose*, i8*) #2

declare dso_local i32 @BLI_findindex(%struct.ListBase*, i8*) #2

declare dso_local void @zero_m3([3 x float]*) #2

declare dso_local float @defvert_find_weight(%struct.MDeformVert*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @pchan_bone_deform(%struct.bPoseChannel* %pchan, %struct.bPoseChanDeform* %pdef_info, float %weight, float* %vec, %struct.DualQuat* %dq, [3 x float]* %mat, float* %co, float* %contrib) #0 !dbg !4850 {
entry:
  %pchan.addr = alloca %struct.bPoseChannel*, align 8
  %pdef_info.addr = alloca %struct.bPoseChanDeform*, align 8
  %weight.addr = alloca float, align 4
  %vec.addr = alloca float*, align 8
  %dq.addr = alloca %struct.DualQuat*, align 8
  %mat.addr = alloca [3 x float]*, align 8
  %co.addr = alloca float*, align 8
  %contrib.addr = alloca float*, align 8
  %cop = alloca [3 x float], align 4
  %bbonemat = alloca [3 x [3 x float]], align 16
  %bbonedq = alloca %struct.DualQuat, align 4
  store %struct.bPoseChannel* %pchan, %struct.bPoseChannel** %pchan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan.addr, metadata !4853, metadata !DIExpression()), !dbg !4854
  store %struct.bPoseChanDeform* %pdef_info, %struct.bPoseChanDeform** %pdef_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bPoseChanDeform** %pdef_info.addr, metadata !4855, metadata !DIExpression()), !dbg !4856
  store float %weight, float* %weight.addr, align 4
  call void @llvm.dbg.declare(metadata float* %weight.addr, metadata !4857, metadata !DIExpression()), !dbg !4858
  store float* %vec, float** %vec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec.addr, metadata !4859, metadata !DIExpression()), !dbg !4860
  store %struct.DualQuat* %dq, %struct.DualQuat** %dq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DualQuat** %dq.addr, metadata !4861, metadata !DIExpression()), !dbg !4862
  store [3 x float]* %mat, [3 x float]** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %mat.addr, metadata !4863, metadata !DIExpression()), !dbg !4864
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !4865, metadata !DIExpression()), !dbg !4866
  store float* %contrib, float** %contrib.addr, align 8
  call void @llvm.dbg.declare(metadata float** %contrib.addr, metadata !4867, metadata !DIExpression()), !dbg !4868
  call void @llvm.dbg.declare(metadata [3 x float]* %cop, metadata !4869, metadata !DIExpression()), !dbg !4870
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %bbonemat, metadata !4871, metadata !DIExpression()), !dbg !4872
  call void @llvm.dbg.declare(metadata %struct.DualQuat* %bbonedq, metadata !4873, metadata !DIExpression()), !dbg !4874
  %0 = load float, float* %weight.addr, align 4, !dbg !4875
  %tobool = fcmp une float %0, 0.000000e+00, !dbg !4875
  br i1 %tobool, label %if.end, label %if.then, !dbg !4877

if.then:                                          ; preds = %entry
  br label %return, !dbg !4878

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %cop, i64 0, i64 0, !dbg !4879
  %1 = load float*, float** %co.addr, align 8, !dbg !4880
  call void @copy_v3_v3(float* %arraydecay, float* %1), !dbg !4881
  %2 = load float*, float** %vec.addr, align 8, !dbg !4882
  %tobool1 = icmp ne float* %2, null, !dbg !4882
  br i1 %tobool1, label %if.then2, label %if.else30, !dbg !4884

if.then2:                                         ; preds = %if.end
  %3 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !4885
  %bone = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %3, i32 0, i32 12, !dbg !4888
  %4 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !4888
  %segments = getelementptr inbounds %struct.Bone, %struct.Bone* %4, i32 0, i32 26, !dbg !4889
  %5 = load i16, i16* %segments, align 4, !dbg !4889
  %conv = sext i16 %5 to i32, !dbg !4885
  %cmp = icmp sgt i32 %conv, 1, !dbg !4890
  br i1 %cmp, label %if.then4, label %if.else, !dbg !4891

if.then4:                                         ; preds = %if.then2
  %6 = load %struct.bPoseChanDeform*, %struct.bPoseChanDeform** %pdef_info.addr, align 8, !dbg !4892
  %7 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !4893
  %bone5 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %7, i32 0, i32 12, !dbg !4894
  %8 = load %struct.Bone*, %struct.Bone** %bone5, align 8, !dbg !4894
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %cop, i64 0, i64 0, !dbg !4895
  %9 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !4896
  %tobool7 = icmp ne [3 x float]* %9, null, !dbg !4897
  br i1 %tobool7, label %cond.true, label %cond.false, !dbg !4897

cond.true:                                        ; preds = %if.then4
  %arraydecay8 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %bbonemat, i64 0, i64 0, !dbg !4898
  br label %cond.end, !dbg !4897

cond.false:                                       ; preds = %if.then4
  br label %cond.end, !dbg !4897

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi [3 x float]* [ %arraydecay8, %cond.true ], [ null, %cond.false ], !dbg !4897
  call void @b_bone_deform(%struct.bPoseChanDeform* %6, %struct.Bone* %8, float* %arraydecay6, %struct.DualQuat* null, [3 x float]* %cond), !dbg !4899
  br label %if.end11, !dbg !4899

if.else:                                          ; preds = %if.then2
  %10 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !4900
  %chan_mat = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %10, i32 0, i32 28, !dbg !4901
  %arraydecay9 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %chan_mat, i64 0, i64 0, !dbg !4900
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %cop, i64 0, i64 0, !dbg !4902
  call void @mul_m4_v3([4 x float]* %arraydecay9, float* %arraydecay10), !dbg !4903
  br label %if.end11

if.end11:                                         ; preds = %if.else, %cond.end
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %cop, i64 0, i64 0, !dbg !4904
  %11 = load float, float* %arrayidx, align 4, !dbg !4904
  %12 = load float*, float** %co.addr, align 8, !dbg !4905
  %arrayidx12 = getelementptr inbounds float, float* %12, i64 0, !dbg !4905
  %13 = load float, float* %arrayidx12, align 4, !dbg !4905
  %sub = fsub float %11, %13, !dbg !4906
  %14 = load float, float* %weight.addr, align 4, !dbg !4907
  %mul = fmul float %sub, %14, !dbg !4908
  %15 = load float*, float** %vec.addr, align 8, !dbg !4909
  %arrayidx13 = getelementptr inbounds float, float* %15, i64 0, !dbg !4909
  %16 = load float, float* %arrayidx13, align 4, !dbg !4910
  %add = fadd float %16, %mul, !dbg !4910
  store float %add, float* %arrayidx13, align 4, !dbg !4910
  %arrayidx14 = getelementptr inbounds [3 x float], [3 x float]* %cop, i64 0, i64 1, !dbg !4911
  %17 = load float, float* %arrayidx14, align 4, !dbg !4911
  %18 = load float*, float** %co.addr, align 8, !dbg !4912
  %arrayidx15 = getelementptr inbounds float, float* %18, i64 1, !dbg !4912
  %19 = load float, float* %arrayidx15, align 4, !dbg !4912
  %sub16 = fsub float %17, %19, !dbg !4913
  %20 = load float, float* %weight.addr, align 4, !dbg !4914
  %mul17 = fmul float %sub16, %20, !dbg !4915
  %21 = load float*, float** %vec.addr, align 8, !dbg !4916
  %arrayidx18 = getelementptr inbounds float, float* %21, i64 1, !dbg !4916
  %22 = load float, float* %arrayidx18, align 4, !dbg !4917
  %add19 = fadd float %22, %mul17, !dbg !4917
  store float %add19, float* %arrayidx18, align 4, !dbg !4917
  %arrayidx20 = getelementptr inbounds [3 x float], [3 x float]* %cop, i64 0, i64 2, !dbg !4918
  %23 = load float, float* %arrayidx20, align 4, !dbg !4918
  %24 = load float*, float** %co.addr, align 8, !dbg !4919
  %arrayidx21 = getelementptr inbounds float, float* %24, i64 2, !dbg !4919
  %25 = load float, float* %arrayidx21, align 4, !dbg !4919
  %sub22 = fsub float %23, %25, !dbg !4920
  %26 = load float, float* %weight.addr, align 4, !dbg !4921
  %mul23 = fmul float %sub22, %26, !dbg !4922
  %27 = load float*, float** %vec.addr, align 8, !dbg !4923
  %arrayidx24 = getelementptr inbounds float, float* %27, i64 2, !dbg !4923
  %28 = load float, float* %arrayidx24, align 4, !dbg !4924
  %add25 = fadd float %28, %mul23, !dbg !4924
  store float %add25, float* %arrayidx24, align 4, !dbg !4924
  %29 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !4925
  %tobool26 = icmp ne [3 x float]* %29, null, !dbg !4925
  br i1 %tobool26, label %if.then27, label %if.end29, !dbg !4927

if.then27:                                        ; preds = %if.end11
  %30 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !4928
  %31 = load float, float* %weight.addr, align 4, !dbg !4929
  %arraydecay28 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %bbonemat, i64 0, i64 0, !dbg !4930
  %32 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !4931
  call void @pchan_deform_mat_add(%struct.bPoseChannel* %30, float %31, [3 x float]* %arraydecay28, [3 x float]* %32), !dbg !4932
  br label %if.end29, !dbg !4932

if.end29:                                         ; preds = %if.then27, %if.end11
  br label %if.end41, !dbg !4933

if.else30:                                        ; preds = %if.end
  %33 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !4934
  %bone31 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %33, i32 0, i32 12, !dbg !4937
  %34 = load %struct.Bone*, %struct.Bone** %bone31, align 8, !dbg !4937
  %segments32 = getelementptr inbounds %struct.Bone, %struct.Bone* %34, i32 0, i32 26, !dbg !4938
  %35 = load i16, i16* %segments32, align 4, !dbg !4938
  %conv33 = sext i16 %35 to i32, !dbg !4934
  %cmp34 = icmp sgt i32 %conv33, 1, !dbg !4939
  br i1 %cmp34, label %if.then36, label %if.else39, !dbg !4940

if.then36:                                        ; preds = %if.else30
  %36 = load %struct.bPoseChanDeform*, %struct.bPoseChanDeform** %pdef_info.addr, align 8, !dbg !4941
  %37 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !4943
  %bone37 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %37, i32 0, i32 12, !dbg !4944
  %38 = load %struct.Bone*, %struct.Bone** %bone37, align 8, !dbg !4944
  %arraydecay38 = getelementptr inbounds [3 x float], [3 x float]* %cop, i64 0, i64 0, !dbg !4945
  call void @b_bone_deform(%struct.bPoseChanDeform* %36, %struct.Bone* %38, float* %arraydecay38, %struct.DualQuat* %bbonedq, [3 x float]* null), !dbg !4946
  %39 = load %struct.DualQuat*, %struct.DualQuat** %dq.addr, align 8, !dbg !4947
  %40 = load float, float* %weight.addr, align 4, !dbg !4948
  call void @add_weighted_dq_dq(%struct.DualQuat* %39, %struct.DualQuat* %bbonedq, float %40), !dbg !4949
  br label %if.end40, !dbg !4950

if.else39:                                        ; preds = %if.else30
  %41 = load %struct.DualQuat*, %struct.DualQuat** %dq.addr, align 8, !dbg !4951
  %42 = load %struct.bPoseChanDeform*, %struct.bPoseChanDeform** %pdef_info.addr, align 8, !dbg !4952
  %dual_quat = getelementptr inbounds %struct.bPoseChanDeform, %struct.bPoseChanDeform* %42, i32 0, i32 1, !dbg !4953
  %43 = load %struct.DualQuat*, %struct.DualQuat** %dual_quat, align 8, !dbg !4953
  %44 = load float, float* %weight.addr, align 4, !dbg !4954
  call void @add_weighted_dq_dq(%struct.DualQuat* %41, %struct.DualQuat* %43, float %44), !dbg !4955
  br label %if.end40

if.end40:                                         ; preds = %if.else39, %if.then36
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.end29
  %45 = load float, float* %weight.addr, align 4, !dbg !4956
  %46 = load float*, float** %contrib.addr, align 8, !dbg !4957
  %47 = load float, float* %46, align 4, !dbg !4958
  %add42 = fadd float %47, %45, !dbg !4958
  store float %add42, float* %46, align 4, !dbg !4958
  br label %return, !dbg !4959

return:                                           ; preds = %if.end41, %if.then
  ret void, !dbg !4959
}

; Function Attrs: noinline nounwind uwtable
define internal float @dist_bone_deform(%struct.bPoseChannel* %pchan, %struct.bPoseChanDeform* %pdef_info, float* %vec, %struct.DualQuat* %dq, [3 x float]* %mat, float* %co) #0 !dbg !4960 {
entry:
  %retval = alloca float, align 4
  %pchan.addr = alloca %struct.bPoseChannel*, align 8
  %pdef_info.addr = alloca %struct.bPoseChanDeform*, align 8
  %vec.addr = alloca float*, align 8
  %dq.addr = alloca %struct.DualQuat*, align 8
  %mat.addr = alloca [3 x float]*, align 8
  %co.addr = alloca float*, align 8
  %bone = alloca %struct.Bone*, align 8
  %fac = alloca float, align 4
  %contrib = alloca float, align 4
  %cop = alloca [3 x float], align 4
  %bbonemat = alloca [3 x [3 x float]], align 16
  %bbonedq = alloca %struct.DualQuat, align 4
  store %struct.bPoseChannel* %pchan, %struct.bPoseChannel** %pchan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan.addr, metadata !4963, metadata !DIExpression()), !dbg !4964
  store %struct.bPoseChanDeform* %pdef_info, %struct.bPoseChanDeform** %pdef_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bPoseChanDeform** %pdef_info.addr, metadata !4965, metadata !DIExpression()), !dbg !4966
  store float* %vec, float** %vec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %vec.addr, metadata !4967, metadata !DIExpression()), !dbg !4968
  store %struct.DualQuat* %dq, %struct.DualQuat** %dq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DualQuat** %dq.addr, metadata !4969, metadata !DIExpression()), !dbg !4970
  store [3 x float]* %mat, [3 x float]** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %mat.addr, metadata !4971, metadata !DIExpression()), !dbg !4972
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !4973, metadata !DIExpression()), !dbg !4974
  call void @llvm.dbg.declare(metadata %struct.Bone** %bone, metadata !4975, metadata !DIExpression()), !dbg !4976
  %0 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !4977
  %bone1 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %0, i32 0, i32 12, !dbg !4978
  %1 = load %struct.Bone*, %struct.Bone** %bone1, align 8, !dbg !4978
  store %struct.Bone* %1, %struct.Bone** %bone, align 8, !dbg !4976
  call void @llvm.dbg.declare(metadata float* %fac, metadata !4979, metadata !DIExpression()), !dbg !4980
  call void @llvm.dbg.declare(metadata float* %contrib, metadata !4981, metadata !DIExpression()), !dbg !4982
  store float 0.000000e+00, float* %contrib, align 4, !dbg !4982
  call void @llvm.dbg.declare(metadata [3 x float]* %cop, metadata !4983, metadata !DIExpression()), !dbg !4984
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %bbonemat, metadata !4985, metadata !DIExpression()), !dbg !4986
  call void @llvm.dbg.declare(metadata %struct.DualQuat* %bbonedq, metadata !4987, metadata !DIExpression()), !dbg !4988
  %2 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !4989
  %cmp = icmp eq %struct.Bone* %2, null, !dbg !4991
  br i1 %cmp, label %if.then, label %if.end, !dbg !4992

if.then:                                          ; preds = %entry
  store float 0.000000e+00, float* %retval, align 4, !dbg !4993
  br label %return, !dbg !4993

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %cop, i64 0, i64 0, !dbg !4994
  %3 = load float*, float** %co.addr, align 8, !dbg !4995
  call void @copy_v3_v3(float* %arraydecay, float* %3), !dbg !4996
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %cop, i64 0, i64 0, !dbg !4997
  %4 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !4998
  %arm_head = getelementptr inbounds %struct.Bone, %struct.Bone* %4, i32 0, i32 11, !dbg !4999
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %arm_head, i64 0, i64 0, !dbg !4998
  %5 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !5000
  %arm_tail = getelementptr inbounds %struct.Bone, %struct.Bone* %5, i32 0, i32 12, !dbg !5001
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %arm_tail, i64 0, i64 0, !dbg !5000
  %6 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !5002
  %rad_head = getelementptr inbounds %struct.Bone, %struct.Bone* %6, i32 0, i32 22, !dbg !5003
  %7 = load float, float* %rad_head, align 4, !dbg !5003
  %8 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !5004
  %rad_tail = getelementptr inbounds %struct.Bone, %struct.Bone* %8, i32 0, i32 23, !dbg !5005
  %9 = load float, float* %rad_tail, align 8, !dbg !5005
  %10 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !5006
  %dist = getelementptr inbounds %struct.Bone, %struct.Bone* %10, i32 0, i32 15, !dbg !5007
  %11 = load float, float* %dist, align 8, !dbg !5007
  %call = call float @distfactor_to_bone(float* %arraydecay2, float* %arraydecay3, float* %arraydecay4, float %7, float %9, float %11), !dbg !5008
  store float %call, float* %fac, align 4, !dbg !5009
  %12 = load float, float* %fac, align 4, !dbg !5010
  %cmp5 = fcmp ogt float %12, 0.000000e+00, !dbg !5012
  br i1 %cmp5, label %if.then6, label %if.end36, !dbg !5013

if.then6:                                         ; preds = %if.end
  %13 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !5014
  %weight = getelementptr inbounds %struct.Bone, %struct.Bone* %13, i32 0, i32 16, !dbg !5016
  %14 = load float, float* %weight, align 4, !dbg !5016
  %15 = load float, float* %fac, align 4, !dbg !5017
  %mul = fmul float %15, %14, !dbg !5017
  store float %mul, float* %fac, align 4, !dbg !5017
  %16 = load float, float* %fac, align 4, !dbg !5018
  store float %16, float* %contrib, align 4, !dbg !5019
  %17 = load float, float* %contrib, align 4, !dbg !5020
  %cmp7 = fcmp ogt float %17, 0.000000e+00, !dbg !5022
  br i1 %cmp7, label %if.then8, label %if.end35, !dbg !5023

if.then8:                                         ; preds = %if.then6
  %18 = load float*, float** %vec.addr, align 8, !dbg !5024
  %tobool = icmp ne float* %18, null, !dbg !5024
  br i1 %tobool, label %if.then9, label %if.else25, !dbg !5027

if.then9:                                         ; preds = %if.then8
  %19 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !5028
  %segments = getelementptr inbounds %struct.Bone, %struct.Bone* %19, i32 0, i32 26, !dbg !5031
  %20 = load i16, i16* %segments, align 4, !dbg !5031
  %conv = sext i16 %20 to i32, !dbg !5028
  %cmp10 = icmp sgt i32 %conv, 1, !dbg !5032
  br i1 %cmp10, label %if.then12, label %if.else, !dbg !5033

if.then12:                                        ; preds = %if.then9
  %21 = load %struct.bPoseChanDeform*, %struct.bPoseChanDeform** %pdef_info.addr, align 8, !dbg !5034
  %22 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !5035
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %cop, i64 0, i64 0, !dbg !5036
  %23 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !5037
  %tobool14 = icmp ne [3 x float]* %23, null, !dbg !5038
  br i1 %tobool14, label %cond.true, label %cond.false, !dbg !5038

cond.true:                                        ; preds = %if.then12
  %arraydecay15 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %bbonemat, i64 0, i64 0, !dbg !5039
  br label %cond.end, !dbg !5038

cond.false:                                       ; preds = %if.then12
  br label %cond.end, !dbg !5038

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi [3 x float]* [ %arraydecay15, %cond.true ], [ null, %cond.false ], !dbg !5038
  call void @b_bone_deform(%struct.bPoseChanDeform* %21, %struct.Bone* %22, float* %arraydecay13, %struct.DualQuat* null, [3 x float]* %cond), !dbg !5040
  br label %if.end18, !dbg !5040

if.else:                                          ; preds = %if.then9
  %24 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5041
  %chan_mat = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %24, i32 0, i32 28, !dbg !5042
  %arraydecay16 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %chan_mat, i64 0, i64 0, !dbg !5041
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %cop, i64 0, i64 0, !dbg !5043
  call void @mul_m4_v3([4 x float]* %arraydecay16, float* %arraydecay17), !dbg !5044
  br label %if.end18

if.end18:                                         ; preds = %if.else, %cond.end
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %cop, i64 0, i64 0, !dbg !5045
  %25 = load float*, float** %co.addr, align 8, !dbg !5046
  call void @sub_v3_v3(float* %arraydecay19, float* %25), !dbg !5047
  %26 = load float*, float** %vec.addr, align 8, !dbg !5048
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %cop, i64 0, i64 0, !dbg !5049
  %27 = load float, float* %fac, align 4, !dbg !5050
  call void @madd_v3_v3fl(float* %26, float* %arraydecay20, float %27), !dbg !5051
  %28 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !5052
  %tobool21 = icmp ne [3 x float]* %28, null, !dbg !5052
  br i1 %tobool21, label %if.then22, label %if.end24, !dbg !5054

if.then22:                                        ; preds = %if.end18
  %29 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5055
  %30 = load float, float* %fac, align 4, !dbg !5056
  %arraydecay23 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %bbonemat, i64 0, i64 0, !dbg !5057
  %31 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !5058
  call void @pchan_deform_mat_add(%struct.bPoseChannel* %29, float %30, [3 x float]* %arraydecay23, [3 x float]* %31), !dbg !5059
  br label %if.end24, !dbg !5059

if.end24:                                         ; preds = %if.then22, %if.end18
  br label %if.end34, !dbg !5060

if.else25:                                        ; preds = %if.then8
  %32 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !5061
  %segments26 = getelementptr inbounds %struct.Bone, %struct.Bone* %32, i32 0, i32 26, !dbg !5064
  %33 = load i16, i16* %segments26, align 4, !dbg !5064
  %conv27 = sext i16 %33 to i32, !dbg !5061
  %cmp28 = icmp sgt i32 %conv27, 1, !dbg !5065
  br i1 %cmp28, label %if.then30, label %if.else32, !dbg !5066

if.then30:                                        ; preds = %if.else25
  %34 = load %struct.bPoseChanDeform*, %struct.bPoseChanDeform** %pdef_info.addr, align 8, !dbg !5067
  %35 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !5069
  %arraydecay31 = getelementptr inbounds [3 x float], [3 x float]* %cop, i64 0, i64 0, !dbg !5070
  call void @b_bone_deform(%struct.bPoseChanDeform* %34, %struct.Bone* %35, float* %arraydecay31, %struct.DualQuat* %bbonedq, [3 x float]* null), !dbg !5071
  %36 = load %struct.DualQuat*, %struct.DualQuat** %dq.addr, align 8, !dbg !5072
  %37 = load float, float* %fac, align 4, !dbg !5073
  call void @add_weighted_dq_dq(%struct.DualQuat* %36, %struct.DualQuat* %bbonedq, float %37), !dbg !5074
  br label %if.end33, !dbg !5075

if.else32:                                        ; preds = %if.else25
  %38 = load %struct.DualQuat*, %struct.DualQuat** %dq.addr, align 8, !dbg !5076
  %39 = load %struct.bPoseChanDeform*, %struct.bPoseChanDeform** %pdef_info.addr, align 8, !dbg !5077
  %dual_quat = getelementptr inbounds %struct.bPoseChanDeform, %struct.bPoseChanDeform* %39, i32 0, i32 1, !dbg !5078
  %40 = load %struct.DualQuat*, %struct.DualQuat** %dual_quat, align 8, !dbg !5078
  %41 = load float, float* %fac, align 4, !dbg !5079
  call void @add_weighted_dq_dq(%struct.DualQuat* %38, %struct.DualQuat* %40, float %41), !dbg !5080
  br label %if.end33

if.end33:                                         ; preds = %if.else32, %if.then30
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.end24
  br label %if.end35, !dbg !5081

if.end35:                                         ; preds = %if.end34, %if.then6
  br label %if.end36, !dbg !5082

if.end36:                                         ; preds = %if.end35, %if.end
  %42 = load float, float* %contrib, align 4, !dbg !5083
  store float %42, float* %retval, align 4, !dbg !5084
  br label %return, !dbg !5084

return:                                           ; preds = %if.end36, %if.then
  %43 = load float, float* %retval, align 4, !dbg !5085
  ret float %43, !dbg !5085
}

declare dso_local void @normalize_dq(%struct.DualQuat*, float) #2

declare dso_local void @mul_v3m3_dq(float*, [3 x float]*, %struct.DualQuat*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v3_v3(float* %r, float* %a) #0 !dbg !5086 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5087, metadata !DIExpression()), !dbg !5088
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5089, metadata !DIExpression()), !dbg !5090
  %0 = load float*, float** %a.addr, align 8, !dbg !5091
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5091
  %1 = load float, float* %arrayidx, align 4, !dbg !5091
  %2 = load float*, float** %r.addr, align 8, !dbg !5092
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !5092
  %3 = load float, float* %arrayidx1, align 4, !dbg !5093
  %sub = fsub float %3, %1, !dbg !5093
  store float %sub, float* %arrayidx1, align 4, !dbg !5093
  %4 = load float*, float** %a.addr, align 8, !dbg !5094
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !5094
  %5 = load float, float* %arrayidx2, align 4, !dbg !5094
  %6 = load float*, float** %r.addr, align 8, !dbg !5095
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !5095
  %7 = load float, float* %arrayidx3, align 4, !dbg !5096
  %sub4 = fsub float %7, %5, !dbg !5096
  store float %sub4, float* %arrayidx3, align 4, !dbg !5096
  %8 = load float*, float** %a.addr, align 8, !dbg !5097
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !5097
  %9 = load float, float* %arrayidx5, align 4, !dbg !5097
  %10 = load float*, float** %r.addr, align 8, !dbg !5098
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !5098
  %11 = load float, float* %arrayidx6, align 4, !dbg !5099
  %sub7 = fsub float %11, %9, !dbg !5099
  store float %sub7, float* %arrayidx6, align 4, !dbg !5099
  ret void, !dbg !5100
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3(float* %r, float* %a) #0 !dbg !5101 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5102, metadata !DIExpression()), !dbg !5103
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5104, metadata !DIExpression()), !dbg !5105
  %0 = load float*, float** %a.addr, align 8, !dbg !5106
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5106
  %1 = load float, float* %arrayidx, align 4, !dbg !5106
  %2 = load float*, float** %r.addr, align 8, !dbg !5107
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !5107
  %3 = load float, float* %arrayidx1, align 4, !dbg !5108
  %add = fadd float %3, %1, !dbg !5108
  store float %add, float* %arrayidx1, align 4, !dbg !5108
  %4 = load float*, float** %a.addr, align 8, !dbg !5109
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !5109
  %5 = load float, float* %arrayidx2, align 4, !dbg !5109
  %6 = load float*, float** %r.addr, align 8, !dbg !5110
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !5110
  %7 = load float, float* %arrayidx3, align 4, !dbg !5111
  %add4 = fadd float %7, %5, !dbg !5111
  store float %add4, float* %arrayidx3, align 4, !dbg !5111
  %8 = load float*, float** %a.addr, align 8, !dbg !5112
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !5112
  %9 = load float, float* %arrayidx5, align 4, !dbg !5112
  %10 = load float*, float** %r.addr, align 8, !dbg !5113
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !5113
  %11 = load float, float* %arrayidx6, align 4, !dbg !5114
  %add7 = fadd float %11, %9, !dbg !5114
  store float %add7, float* %arrayidx6, align 4, !dbg !5114
  ret void, !dbg !5115
}

; Function Attrs: noinline nounwind uwtable
define internal void @add_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !5116 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !5117, metadata !DIExpression()), !dbg !5118
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !5119, metadata !DIExpression()), !dbg !5120
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !5121, metadata !DIExpression()), !dbg !5122
  %0 = load float*, float** %a.addr, align 8, !dbg !5123
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !5123
  %1 = load float, float* %arrayidx, align 4, !dbg !5123
  %2 = load float*, float** %b.addr, align 8, !dbg !5124
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !5124
  %3 = load float, float* %arrayidx1, align 4, !dbg !5124
  %add = fadd float %1, %3, !dbg !5125
  %4 = load float*, float** %r.addr, align 8, !dbg !5126
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !5126
  store float %add, float* %arrayidx2, align 4, !dbg !5127
  %5 = load float*, float** %a.addr, align 8, !dbg !5128
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !5128
  %6 = load float, float* %arrayidx3, align 4, !dbg !5128
  %7 = load float*, float** %b.addr, align 8, !dbg !5129
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !5129
  %8 = load float, float* %arrayidx4, align 4, !dbg !5129
  %add5 = fadd float %6, %8, !dbg !5130
  %9 = load float*, float** %r.addr, align 8, !dbg !5131
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !5131
  store float %add5, float* %arrayidx6, align 4, !dbg !5132
  %10 = load float*, float** %a.addr, align 8, !dbg !5133
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !5133
  %11 = load float, float* %arrayidx7, align 4, !dbg !5133
  %12 = load float*, float** %b.addr, align 8, !dbg !5134
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !5134
  %13 = load float, float* %arrayidx8, align 4, !dbg !5134
  %add9 = fadd float %11, %13, !dbg !5135
  %14 = load float*, float** %r.addr, align 8, !dbg !5136
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !5136
  store float %add9, float* %arrayidx10, align 4, !dbg !5137
  ret void, !dbg !5138
}

declare dso_local void @copy_m3_m3([3 x float]*, [3 x float]*) #2

declare dso_local void @mul_m3_fl([3 x float]*, float) #2

declare dso_local void @_va_mul_m3_series_5([3 x float]*, [3 x float]*, [3 x float]*, [3 x float]*, [3 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @get_objectspace_bone_matrix(%struct.Bone* %bone, [4 x float]* %M_accumulatedMatrix, i32 %UNUSED_root, i32 %UNUSED_posed) #0 !dbg !5139 {
entry:
  %bone.addr = alloca %struct.Bone*, align 8
  %M_accumulatedMatrix.addr = alloca [4 x float]*, align 8
  %UNUSED_root.addr = alloca i32, align 4
  %UNUSED_posed.addr = alloca i32, align 4
  store %struct.Bone* %bone, %struct.Bone** %bone.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Bone** %bone.addr, metadata !5142, metadata !DIExpression()), !dbg !5143
  store [4 x float]* %M_accumulatedMatrix, [4 x float]** %M_accumulatedMatrix.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %M_accumulatedMatrix.addr, metadata !5144, metadata !DIExpression()), !dbg !5145
  store i32 %UNUSED_root, i32* %UNUSED_root.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_root.addr, metadata !5146, metadata !DIExpression()), !dbg !5147
  store i32 %UNUSED_posed, i32* %UNUSED_posed.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_posed.addr, metadata !5148, metadata !DIExpression()), !dbg !5149
  %0 = load [4 x float]*, [4 x float]** %M_accumulatedMatrix.addr, align 8, !dbg !5150
  %1 = load %struct.Bone*, %struct.Bone** %bone.addr, align 8, !dbg !5151
  %arm_mat = getelementptr inbounds %struct.Bone, %struct.Bone* %1, i32 0, i32 13, !dbg !5152
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %arm_mat, i64 0, i64 0, !dbg !5151
  call void @copy_m4_m4([4 x float]* %0, [4 x float]* %arraydecay), !dbg !5153
  ret void, !dbg !5154
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_armature_mat_world_to_pose(%struct.Object* %ob, [4 x float]* %inmat, [4 x float]* %outmat) #0 !dbg !5155 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %inmat.addr = alloca [4 x float]*, align 8
  %outmat.addr = alloca [4 x float]*, align 8
  %obmat = alloca [4 x [4 x float]], align 16
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5158, metadata !DIExpression()), !dbg !5159
  store [4 x float]* %inmat, [4 x float]** %inmat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %inmat.addr, metadata !5160, metadata !DIExpression()), !dbg !5161
  store [4 x float]* %outmat, [4 x float]** %outmat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %outmat.addr, metadata !5162, metadata !DIExpression()), !dbg !5163
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %obmat, metadata !5164, metadata !DIExpression()), !dbg !5165
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5166
  %cmp = icmp eq %struct.Object* %0, null, !dbg !5168
  br i1 %cmp, label %if.then, label %if.end, !dbg !5169

if.then:                                          ; preds = %entry
  br label %return, !dbg !5170

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !5171
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5172
  %obmat1 = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 47, !dbg !5173
  %arraydecay2 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat1, i64 0, i64 0, !dbg !5172
  %call = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay, [4 x float]* %arraydecay2), !dbg !5174
  %2 = load [4 x float]*, [4 x float]** %outmat.addr, align 8, !dbg !5175
  %3 = load [4 x float]*, [4 x float]** %inmat.addr, align 8, !dbg !5176
  %arraydecay3 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !5177
  call void @mul_m4_m4m4([4 x float]* %2, [4 x float]* %3, [4 x float]* %arraydecay3), !dbg !5178
  br label %return, !dbg !5179

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !5179
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_armature_loc_world_to_pose(%struct.Object* %ob, float* %inloc, float* %outloc) #0 !dbg !5180 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %inloc.addr = alloca float*, align 8
  %outloc.addr = alloca float*, align 8
  %xLocMat = alloca [4 x [4 x float]], align 16
  %nLocMat = alloca [4 x [4 x float]], align 16
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5183, metadata !DIExpression()), !dbg !5184
  store float* %inloc, float** %inloc.addr, align 8
  call void @llvm.dbg.declare(metadata float** %inloc.addr, metadata !5185, metadata !DIExpression()), !dbg !5186
  store float* %outloc, float** %outloc.addr, align 8
  call void @llvm.dbg.declare(metadata float** %outloc.addr, metadata !5187, metadata !DIExpression()), !dbg !5188
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %xLocMat, metadata !5189, metadata !DIExpression()), !dbg !5190
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %nLocMat, metadata !5191, metadata !DIExpression()), !dbg !5192
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %xLocMat, i64 0, i64 0, !dbg !5193
  call void @unit_m4([4 x float]* %arraydecay), !dbg !5194
  %arrayidx = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %xLocMat, i64 0, i64 3, !dbg !5195
  %arraydecay1 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !5195
  %0 = load float*, float** %inloc.addr, align 8, !dbg !5196
  call void @copy_v3_v3(float* %arraydecay1, float* %0), !dbg !5197
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5198
  %arraydecay2 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %xLocMat, i64 0, i64 0, !dbg !5199
  %arraydecay3 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %nLocMat, i64 0, i64 0, !dbg !5200
  call void @BKE_armature_mat_world_to_pose(%struct.Object* %1, [4 x float]* %arraydecay2, [4 x float]* %arraydecay3), !dbg !5201
  %2 = load float*, float** %outloc.addr, align 8, !dbg !5202
  %arrayidx4 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %nLocMat, i64 0, i64 3, !dbg !5203
  %arraydecay5 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx4, i64 0, i64 0, !dbg !5203
  call void @copy_v3_v3(float* %2, float* %arraydecay5), !dbg !5204
  ret void, !dbg !5205
}

declare dso_local void @unit_m4([4 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_pchan_to_pose_mat(%struct.bPoseChannel* %pchan, [4 x float]* %rotscale_mat, [4 x float]* %loc_mat) #0 !dbg !5206 {
entry:
  %pchan.addr = alloca %struct.bPoseChannel*, align 8
  %rotscale_mat.addr = alloca [4 x float]*, align 8
  %loc_mat.addr = alloca [4 x float]*, align 8
  %bone = alloca %struct.Bone*, align 8
  %parbone = alloca %struct.Bone*, align 8
  %parchan = alloca %struct.bPoseChannel*, align 8
  %offs_bone = alloca [4 x [4 x float]], align 16
  %tmat = alloca [4 x [4 x float]], align 16
  %tscale = alloca [3 x float], align 4
  %tmat29 = alloca [4 x [4 x float]], align 16
  %bone_loc = alloca [4 x [4 x float]], align 16
  %bone_rotscale = alloca [3 x [3 x float]], align 16
  %tmat4 = alloca [4 x [4 x float]], align 16
  %tmat3 = alloca [3 x [3 x float]], align 16
  store %struct.bPoseChannel* %pchan, %struct.bPoseChannel** %pchan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan.addr, metadata !5209, metadata !DIExpression()), !dbg !5210
  store [4 x float]* %rotscale_mat, [4 x float]** %rotscale_mat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %rotscale_mat.addr, metadata !5211, metadata !DIExpression()), !dbg !5212
  store [4 x float]* %loc_mat, [4 x float]** %loc_mat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %loc_mat.addr, metadata !5213, metadata !DIExpression()), !dbg !5214
  call void @llvm.dbg.declare(metadata %struct.Bone** %bone, metadata !5215, metadata !DIExpression()), !dbg !5216
  call void @llvm.dbg.declare(metadata %struct.Bone** %parbone, metadata !5217, metadata !DIExpression()), !dbg !5218
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %parchan, metadata !5219, metadata !DIExpression()), !dbg !5220
  %0 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5221
  %bone1 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %0, i32 0, i32 12, !dbg !5222
  %1 = load %struct.Bone*, %struct.Bone** %bone1, align 8, !dbg !5222
  store %struct.Bone* %1, %struct.Bone** %bone, align 8, !dbg !5223
  %2 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !5224
  %parent = getelementptr inbounds %struct.Bone, %struct.Bone* %2, i32 0, i32 3, !dbg !5225
  %3 = load %struct.Bone*, %struct.Bone** %parent, align 8, !dbg !5225
  store %struct.Bone* %3, %struct.Bone** %parbone, align 8, !dbg !5226
  %4 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5227
  %parent2 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %4, i32 0, i32 13, !dbg !5228
  %5 = load %struct.bPoseChannel*, %struct.bPoseChannel** %parent2, align 8, !dbg !5228
  store %struct.bPoseChannel* %5, %struct.bPoseChannel** %parchan, align 8, !dbg !5229
  %6 = load %struct.bPoseChannel*, %struct.bPoseChannel** %parchan, align 8, !dbg !5230
  %tobool = icmp ne %struct.bPoseChannel* %6, null, !dbg !5230
  br i1 %tobool, label %if.then, label %if.else75, !dbg !5232

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %offs_bone, metadata !5233, metadata !DIExpression()), !dbg !5235
  %7 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !5236
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %offs_bone, i64 0, i64 0, !dbg !5237
  call void @get_offset_bone_mat(%struct.Bone* %7, [4 x float]* %arraydecay), !dbg !5238
  %8 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !5239
  %flag = getelementptr inbounds %struct.Bone, %struct.Bone* %8, i32 0, i32 10, !dbg !5241
  %9 = load i32, i32* %flag, align 8, !dbg !5241
  %and = and i32 %9, 512, !dbg !5242
  %tobool3 = icmp ne i32 %and, 0, !dbg !5242
  br i1 %tobool3, label %land.lhs.true, label %if.else, !dbg !5243

land.lhs.true:                                    ; preds = %if.then
  %10 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !5244
  %flag4 = getelementptr inbounds %struct.Bone, %struct.Bone* %10, i32 0, i32 10, !dbg !5245
  %11 = load i32, i32* %flag4, align 8, !dbg !5245
  %and5 = and i32 %11, 32768, !dbg !5246
  %tobool6 = icmp ne i32 %and5, 0, !dbg !5246
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !5247

if.then7:                                         ; preds = %land.lhs.true
  %12 = load [4 x float]*, [4 x float]** %rotscale_mat.addr, align 8, !dbg !5248
  %13 = load %struct.Bone*, %struct.Bone** %parbone, align 8, !dbg !5250
  %arm_mat = getelementptr inbounds %struct.Bone, %struct.Bone* %13, i32 0, i32 13, !dbg !5251
  %arraydecay8 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %arm_mat, i64 0, i64 0, !dbg !5250
  %arraydecay9 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %offs_bone, i64 0, i64 0, !dbg !5252
  call void @mul_m4_m4m4([4 x float]* %12, [4 x float]* %arraydecay8, [4 x float]* %arraydecay9), !dbg !5253
  br label %if.end41, !dbg !5254

if.else:                                          ; preds = %land.lhs.true, %if.then
  %14 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !5255
  %flag10 = getelementptr inbounds %struct.Bone, %struct.Bone* %14, i32 0, i32 10, !dbg !5257
  %15 = load i32, i32* %flag10, align 8, !dbg !5257
  %and11 = and i32 %15, 512, !dbg !5258
  %tobool12 = icmp ne i32 %and11, 0, !dbg !5258
  br i1 %tobool12, label %if.then13, label %if.else24, !dbg !5259

if.then13:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %tmat, metadata !5260, metadata !DIExpression()), !dbg !5262
  call void @llvm.dbg.declare(metadata [3 x float]* %tscale, metadata !5263, metadata !DIExpression()), !dbg !5264
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %tscale, i64 0, i64 0, !dbg !5265
  %16 = load %struct.bPoseChannel*, %struct.bPoseChannel** %parchan, align 8, !dbg !5266
  %pose_mat = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %16, i32 0, i32 29, !dbg !5267
  %arraydecay15 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %pose_mat, i64 0, i64 0, !dbg !5266
  call void @mat4_to_size(float* %arraydecay14, [4 x float]* %arraydecay15), !dbg !5268
  %arraydecay16 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tmat, i64 0, i64 0, !dbg !5269
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %tscale, i64 0, i64 0, !dbg !5270
  call void @size_to_mat4([4 x float]* %arraydecay16, float* %arraydecay17), !dbg !5271
  %arraydecay18 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tmat, i64 0, i64 0, !dbg !5272
  %arraydecay19 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tmat, i64 0, i64 0, !dbg !5273
  %17 = load %struct.Bone*, %struct.Bone** %parbone, align 8, !dbg !5274
  %arm_mat20 = getelementptr inbounds %struct.Bone, %struct.Bone* %17, i32 0, i32 13, !dbg !5275
  %arraydecay21 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %arm_mat20, i64 0, i64 0, !dbg !5274
  call void @mul_m4_m4m4([4 x float]* %arraydecay18, [4 x float]* %arraydecay19, [4 x float]* %arraydecay21), !dbg !5276
  %18 = load [4 x float]*, [4 x float]** %rotscale_mat.addr, align 8, !dbg !5277
  %arraydecay22 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tmat, i64 0, i64 0, !dbg !5278
  %arraydecay23 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %offs_bone, i64 0, i64 0, !dbg !5279
  call void @mul_m4_m4m4([4 x float]* %18, [4 x float]* %arraydecay22, [4 x float]* %arraydecay23), !dbg !5280
  br label %if.end40, !dbg !5281

if.else24:                                        ; preds = %if.else
  %19 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !5282
  %flag25 = getelementptr inbounds %struct.Bone, %struct.Bone* %19, i32 0, i32 10, !dbg !5284
  %20 = load i32, i32* %flag25, align 8, !dbg !5284
  %and26 = and i32 %20, 32768, !dbg !5285
  %tobool27 = icmp ne i32 %and26, 0, !dbg !5285
  br i1 %tobool27, label %if.then28, label %if.else36, !dbg !5286

if.then28:                                        ; preds = %if.else24
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %tmat29, metadata !5287, metadata !DIExpression()), !dbg !5289
  %arraydecay30 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tmat29, i64 0, i64 0, !dbg !5290
  %21 = load %struct.bPoseChannel*, %struct.bPoseChannel** %parchan, align 8, !dbg !5291
  %pose_mat31 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %21, i32 0, i32 29, !dbg !5292
  %arraydecay32 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %pose_mat31, i64 0, i64 0, !dbg !5291
  call void @copy_m4_m4([4 x float]* %arraydecay30, [4 x float]* %arraydecay32), !dbg !5293
  %arraydecay33 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tmat29, i64 0, i64 0, !dbg !5294
  call void @normalize_m4([4 x float]* %arraydecay33), !dbg !5295
  %22 = load [4 x float]*, [4 x float]** %rotscale_mat.addr, align 8, !dbg !5296
  %arraydecay34 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tmat29, i64 0, i64 0, !dbg !5297
  %arraydecay35 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %offs_bone, i64 0, i64 0, !dbg !5298
  call void @mul_m4_m4m4([4 x float]* %22, [4 x float]* %arraydecay34, [4 x float]* %arraydecay35), !dbg !5299
  br label %if.end, !dbg !5300

if.else36:                                        ; preds = %if.else24
  %23 = load [4 x float]*, [4 x float]** %rotscale_mat.addr, align 8, !dbg !5301
  %24 = load %struct.bPoseChannel*, %struct.bPoseChannel** %parchan, align 8, !dbg !5302
  %pose_mat37 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %24, i32 0, i32 29, !dbg !5303
  %arraydecay38 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %pose_mat37, i64 0, i64 0, !dbg !5302
  %arraydecay39 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %offs_bone, i64 0, i64 0, !dbg !5304
  call void @mul_m4_m4m4([4 x float]* %23, [4 x float]* %arraydecay38, [4 x float]* %arraydecay39), !dbg !5305
  br label %if.end

if.end:                                           ; preds = %if.else36, %if.then28
  br label %if.end40

if.end40:                                         ; preds = %if.end, %if.then13
  br label %if.end41

if.end41:                                         ; preds = %if.end40, %if.then7
  %25 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !5306
  %flag42 = getelementptr inbounds %struct.Bone, %struct.Bone* %25, i32 0, i32 10, !dbg !5308
  %26 = load i32, i32* %flag42, align 8, !dbg !5308
  %and43 = and i32 %26, 4194304, !dbg !5309
  %tobool44 = icmp ne i32 %and43, 0, !dbg !5309
  br i1 %tobool44, label %if.then45, label %if.else64, !dbg !5310

if.then45:                                        ; preds = %if.end41
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %bone_loc, metadata !5311, metadata !DIExpression()), !dbg !5313
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %bone_rotscale, metadata !5314, metadata !DIExpression()), !dbg !5315
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %tmat4, metadata !5316, metadata !DIExpression()), !dbg !5317
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %tmat3, metadata !5318, metadata !DIExpression()), !dbg !5319
  %arraydecay46 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %bone_loc, i64 0, i64 0, !dbg !5320
  call void @unit_m4([4 x float]* %arraydecay46), !dbg !5321
  %27 = load [4 x float]*, [4 x float]** %loc_mat.addr, align 8, !dbg !5322
  call void @unit_m4([4 x float]* %27), !dbg !5323
  %arraydecay47 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tmat4, i64 0, i64 0, !dbg !5324
  call void @unit_m4([4 x float]* %arraydecay47), !dbg !5325
  %arrayidx = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %bone_loc, i64 0, i64 3, !dbg !5326
  %arraydecay48 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !5326
  %28 = load %struct.bPoseChannel*, %struct.bPoseChannel** %parchan, align 8, !dbg !5327
  %pose_mat49 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %28, i32 0, i32 29, !dbg !5328
  %arraydecay50 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %pose_mat49, i64 0, i64 0, !dbg !5327
  %arrayidx51 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %offs_bone, i64 0, i64 3, !dbg !5329
  %arraydecay52 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx51, i64 0, i64 0, !dbg !5329
  call void @mul_v3_m4v3(float* %arraydecay48, [4 x float]* %arraydecay50, float* %arraydecay52), !dbg !5330
  %arraydecay53 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %bone_rotscale, i64 0, i64 0, !dbg !5331
  call void @unit_m3([3 x float]* %arraydecay53), !dbg !5332
  %arraydecay54 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat3, i64 0, i64 0, !dbg !5333
  %29 = load %struct.bPoseChannel*, %struct.bPoseChannel** %parchan, align 8, !dbg !5334
  %pose_mat55 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %29, i32 0, i32 29, !dbg !5335
  %arraydecay56 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %pose_mat55, i64 0, i64 0, !dbg !5334
  call void @copy_m3_m4([3 x float]* %arraydecay54, [4 x float]* %arraydecay56), !dbg !5336
  %arraydecay57 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %bone_rotscale, i64 0, i64 0, !dbg !5337
  %arraydecay58 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat3, i64 0, i64 0, !dbg !5338
  %arraydecay59 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %bone_rotscale, i64 0, i64 0, !dbg !5339
  call void @mul_m3_m3m3([3 x float]* %arraydecay57, [3 x float]* %arraydecay58, [3 x float]* %arraydecay59), !dbg !5340
  %arraydecay60 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tmat4, i64 0, i64 0, !dbg !5341
  %arraydecay61 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %bone_rotscale, i64 0, i64 0, !dbg !5342
  call void @copy_m4_m3([4 x float]* %arraydecay60, [3 x float]* %arraydecay61), !dbg !5343
  %30 = load [4 x float]*, [4 x float]** %loc_mat.addr, align 8, !dbg !5344
  %arraydecay62 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %bone_loc, i64 0, i64 0, !dbg !5345
  %arraydecay63 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %tmat4, i64 0, i64 0, !dbg !5346
  call void @mul_m4_m4m4([4 x float]* %30, [4 x float]* %arraydecay62, [4 x float]* %arraydecay63), !dbg !5347
  br label %if.end74, !dbg !5348

if.else64:                                        ; preds = %if.end41
  %31 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !5349
  %flag65 = getelementptr inbounds %struct.Bone, %struct.Bone* %31, i32 0, i32 10, !dbg !5351
  %32 = load i32, i32* %flag65, align 8, !dbg !5351
  %and66 = and i32 %32, 33280, !dbg !5352
  %tobool67 = icmp ne i32 %and66, 0, !dbg !5352
  br i1 %tobool67, label %if.then68, label %if.else72, !dbg !5353

if.then68:                                        ; preds = %if.else64
  %33 = load [4 x float]*, [4 x float]** %loc_mat.addr, align 8, !dbg !5354
  %34 = load %struct.bPoseChannel*, %struct.bPoseChannel** %parchan, align 8, !dbg !5356
  %pose_mat69 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %34, i32 0, i32 29, !dbg !5357
  %arraydecay70 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %pose_mat69, i64 0, i64 0, !dbg !5356
  %arraydecay71 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %offs_bone, i64 0, i64 0, !dbg !5358
  call void @mul_m4_m4m4([4 x float]* %33, [4 x float]* %arraydecay70, [4 x float]* %arraydecay71), !dbg !5359
  br label %if.end73, !dbg !5360

if.else72:                                        ; preds = %if.else64
  %35 = load [4 x float]*, [4 x float]** %loc_mat.addr, align 8, !dbg !5361
  %36 = load [4 x float]*, [4 x float]** %rotscale_mat.addr, align 8, !dbg !5362
  call void @copy_m4_m4([4 x float]* %35, [4 x float]* %36), !dbg !5363
  br label %if.end73

if.end73:                                         ; preds = %if.else72, %if.then68
  br label %if.end74

if.end74:                                         ; preds = %if.end73, %if.then45
  br label %if.end92, !dbg !5364

if.else75:                                        ; preds = %entry
  %37 = load [4 x float]*, [4 x float]** %rotscale_mat.addr, align 8, !dbg !5365
  %38 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5367
  %bone76 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %38, i32 0, i32 12, !dbg !5368
  %39 = load %struct.Bone*, %struct.Bone** %bone76, align 8, !dbg !5368
  %arm_mat77 = getelementptr inbounds %struct.Bone, %struct.Bone* %39, i32 0, i32 13, !dbg !5369
  %arraydecay78 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %arm_mat77, i64 0, i64 0, !dbg !5367
  call void @copy_m4_m4([4 x float]* %37, [4 x float]* %arraydecay78), !dbg !5370
  %40 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5371
  %bone79 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %40, i32 0, i32 12, !dbg !5373
  %41 = load %struct.Bone*, %struct.Bone** %bone79, align 8, !dbg !5373
  %flag80 = getelementptr inbounds %struct.Bone, %struct.Bone* %41, i32 0, i32 10, !dbg !5374
  %42 = load i32, i32* %flag80, align 8, !dbg !5374
  %and81 = and i32 %42, 4194304, !dbg !5375
  %tobool82 = icmp ne i32 %and81, 0, !dbg !5375
  br i1 %tobool82, label %if.then83, label %if.else90, !dbg !5376

if.then83:                                        ; preds = %if.else75
  %43 = load [4 x float]*, [4 x float]** %loc_mat.addr, align 8, !dbg !5377
  call void @unit_m4([4 x float]* %43), !dbg !5379
  %44 = load [4 x float]*, [4 x float]** %loc_mat.addr, align 8, !dbg !5380
  %arrayidx84 = getelementptr inbounds [4 x float], [4 x float]* %44, i64 3, !dbg !5380
  %arraydecay85 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx84, i64 0, i64 0, !dbg !5380
  %45 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5381
  %bone86 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %45, i32 0, i32 12, !dbg !5382
  %46 = load %struct.Bone*, %struct.Bone** %bone86, align 8, !dbg !5382
  %arm_mat87 = getelementptr inbounds %struct.Bone, %struct.Bone* %46, i32 0, i32 13, !dbg !5383
  %arrayidx88 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %arm_mat87, i64 0, i64 3, !dbg !5381
  %arraydecay89 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx88, i64 0, i64 0, !dbg !5381
  call void @copy_v3_v3(float* %arraydecay85, float* %arraydecay89), !dbg !5384
  br label %if.end91, !dbg !5385

if.else90:                                        ; preds = %if.else75
  %47 = load [4 x float]*, [4 x float]** %loc_mat.addr, align 8, !dbg !5386
  %48 = load [4 x float]*, [4 x float]** %rotscale_mat.addr, align 8, !dbg !5387
  call void @copy_m4_m4([4 x float]* %47, [4 x float]* %48), !dbg !5388
  br label %if.end91

if.end91:                                         ; preds = %if.else90, %if.then83
  br label %if.end92

if.end92:                                         ; preds = %if.end91, %if.end74
  ret void, !dbg !5389
}

; Function Attrs: noinline nounwind uwtable
define internal void @get_offset_bone_mat(%struct.Bone* %bone, [4 x float]* %offs_bone) #0 !dbg !5390 {
entry:
  %bone.addr = alloca %struct.Bone*, align 8
  %offs_bone.addr = alloca [4 x float]*, align 8
  store %struct.Bone* %bone, %struct.Bone** %bone.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Bone** %bone.addr, metadata !5393, metadata !DIExpression()), !dbg !5394
  store [4 x float]* %offs_bone, [4 x float]** %offs_bone.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %offs_bone.addr, metadata !5395, metadata !DIExpression()), !dbg !5396
  %0 = load %struct.Bone*, %struct.Bone** %bone.addr, align 8, !dbg !5397
  %parent = getelementptr inbounds %struct.Bone, %struct.Bone* %0, i32 0, i32 3, !dbg !5399
  %1 = load %struct.Bone*, %struct.Bone** %parent, align 8, !dbg !5399
  %tobool = icmp ne %struct.Bone* %1, null, !dbg !5397
  br i1 %tobool, label %if.end, label %if.then, !dbg !5400

if.then:                                          ; preds = %entry
  br label %return, !dbg !5401

if.end:                                           ; preds = %entry
  %2 = load [4 x float]*, [4 x float]** %offs_bone.addr, align 8, !dbg !5402
  %3 = load %struct.Bone*, %struct.Bone** %bone.addr, align 8, !dbg !5403
  %bone_mat = getelementptr inbounds %struct.Bone, %struct.Bone* %3, i32 0, i32 9, !dbg !5404
  %arraydecay = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %bone_mat, i64 0, i64 0, !dbg !5403
  call void @copy_m4_m3([4 x float]* %2, [3 x float]* %arraydecay), !dbg !5405
  %4 = load [4 x float]*, [4 x float]** %offs_bone.addr, align 8, !dbg !5406
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %4, i64 3, !dbg !5406
  %arraydecay1 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !5406
  %5 = load %struct.Bone*, %struct.Bone** %bone.addr, align 8, !dbg !5407
  %head = getelementptr inbounds %struct.Bone, %struct.Bone* %5, i32 0, i32 7, !dbg !5408
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %head, i64 0, i64 0, !dbg !5407
  call void @copy_v3_v3(float* %arraydecay1, float* %arraydecay2), !dbg !5409
  %6 = load %struct.Bone*, %struct.Bone** %bone.addr, align 8, !dbg !5410
  %parent3 = getelementptr inbounds %struct.Bone, %struct.Bone* %6, i32 0, i32 3, !dbg !5411
  %7 = load %struct.Bone*, %struct.Bone** %parent3, align 8, !dbg !5411
  %length = getelementptr inbounds %struct.Bone, %struct.Bone* %7, i32 0, i32 18, !dbg !5412
  %8 = load float, float* %length, align 4, !dbg !5412
  %9 = load [4 x float]*, [4 x float]** %offs_bone.addr, align 8, !dbg !5413
  %arrayidx4 = getelementptr inbounds [4 x float], [4 x float]* %9, i64 3, !dbg !5413
  %arrayidx5 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx4, i64 0, i64 1, !dbg !5413
  %10 = load float, float* %arrayidx5, align 4, !dbg !5414
  %add = fadd float %10, %8, !dbg !5414
  store float %add, float* %arrayidx5, align 4, !dbg !5414
  br label %return, !dbg !5415

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !5415
}

declare dso_local void @mul_v3_m4v3(float*, [4 x float]*, float*) #2

declare dso_local void @unit_m3([3 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_armature_mat_pose_to_bone(%struct.bPoseChannel* %pchan, [4 x float]* %inmat, [4 x float]* %outmat) #0 !dbg !5416 {
entry:
  %pchan.addr = alloca %struct.bPoseChannel*, align 8
  %inmat.addr = alloca [4 x float]*, align 8
  %outmat.addr = alloca [4 x float]*, align 8
  %rotscale_mat = alloca [4 x [4 x float]], align 16
  %loc_mat = alloca [4 x [4 x float]], align 16
  %inmat_ = alloca [4 x [4 x float]], align 16
  store %struct.bPoseChannel* %pchan, %struct.bPoseChannel** %pchan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan.addr, metadata !5417, metadata !DIExpression()), !dbg !5418
  store [4 x float]* %inmat, [4 x float]** %inmat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %inmat.addr, metadata !5419, metadata !DIExpression()), !dbg !5420
  store [4 x float]* %outmat, [4 x float]** %outmat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %outmat.addr, metadata !5421, metadata !DIExpression()), !dbg !5422
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %rotscale_mat, metadata !5423, metadata !DIExpression()), !dbg !5424
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %loc_mat, metadata !5425, metadata !DIExpression()), !dbg !5426
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %inmat_, metadata !5427, metadata !DIExpression()), !dbg !5428
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %inmat_, i64 0, i64 0, !dbg !5429
  %0 = load [4 x float]*, [4 x float]** %inmat.addr, align 8, !dbg !5430
  call void @copy_m4_m4([4 x float]* %arraydecay, [4 x float]* %0), !dbg !5431
  %1 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5432
  %arraydecay1 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %rotscale_mat, i64 0, i64 0, !dbg !5433
  %arraydecay2 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %loc_mat, i64 0, i64 0, !dbg !5434
  call void @BKE_pchan_to_pose_mat(%struct.bPoseChannel* %1, [4 x float]* %arraydecay1, [4 x float]* %arraydecay2), !dbg !5435
  %arraydecay3 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %rotscale_mat, i64 0, i64 0, !dbg !5436
  %call = call zeroext i8 @invert_m4([4 x float]* %arraydecay3), !dbg !5437
  %arraydecay4 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %loc_mat, i64 0, i64 0, !dbg !5438
  %call5 = call zeroext i8 @invert_m4([4 x float]* %arraydecay4), !dbg !5439
  %2 = load [4 x float]*, [4 x float]** %outmat.addr, align 8, !dbg !5440
  %arraydecay6 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %rotscale_mat, i64 0, i64 0, !dbg !5441
  %arraydecay7 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %inmat_, i64 0, i64 0, !dbg !5442
  call void @mul_m4_m4m4([4 x float]* %2, [4 x float]* %arraydecay6, [4 x float]* %arraydecay7), !dbg !5443
  %3 = load [4 x float]*, [4 x float]** %outmat.addr, align 8, !dbg !5444
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %3, i64 3, !dbg !5444
  %arraydecay8 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !5444
  %arraydecay9 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %loc_mat, i64 0, i64 0, !dbg !5445
  %arrayidx10 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %inmat_, i64 0, i64 3, !dbg !5446
  %arraydecay11 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx10, i64 0, i64 0, !dbg !5446
  call void @mul_v3_m4v3(float* %arraydecay8, [4 x float]* %arraydecay9, float* %arraydecay11), !dbg !5447
  ret void, !dbg !5448
}

declare dso_local zeroext i8 @invert_m4([4 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_armature_mat_bone_to_pose(%struct.bPoseChannel* %pchan, [4 x float]* %inmat, [4 x float]* %outmat) #0 !dbg !5449 {
entry:
  %pchan.addr = alloca %struct.bPoseChannel*, align 8
  %inmat.addr = alloca [4 x float]*, align 8
  %outmat.addr = alloca [4 x float]*, align 8
  %rotscale_mat = alloca [4 x [4 x float]], align 16
  %loc_mat = alloca [4 x [4 x float]], align 16
  %inmat_ = alloca [4 x [4 x float]], align 16
  store %struct.bPoseChannel* %pchan, %struct.bPoseChannel** %pchan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan.addr, metadata !5450, metadata !DIExpression()), !dbg !5451
  store [4 x float]* %inmat, [4 x float]** %inmat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %inmat.addr, metadata !5452, metadata !DIExpression()), !dbg !5453
  store [4 x float]* %outmat, [4 x float]** %outmat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %outmat.addr, metadata !5454, metadata !DIExpression()), !dbg !5455
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %rotscale_mat, metadata !5456, metadata !DIExpression()), !dbg !5457
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %loc_mat, metadata !5458, metadata !DIExpression()), !dbg !5459
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %inmat_, metadata !5460, metadata !DIExpression()), !dbg !5461
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %inmat_, i64 0, i64 0, !dbg !5462
  %0 = load [4 x float]*, [4 x float]** %inmat.addr, align 8, !dbg !5463
  call void @copy_m4_m4([4 x float]* %arraydecay, [4 x float]* %0), !dbg !5464
  %1 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5465
  %arraydecay1 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %rotscale_mat, i64 0, i64 0, !dbg !5466
  %arraydecay2 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %loc_mat, i64 0, i64 0, !dbg !5467
  call void @BKE_pchan_to_pose_mat(%struct.bPoseChannel* %1, [4 x float]* %arraydecay1, [4 x float]* %arraydecay2), !dbg !5468
  %2 = load [4 x float]*, [4 x float]** %outmat.addr, align 8, !dbg !5469
  %arraydecay3 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %rotscale_mat, i64 0, i64 0, !dbg !5470
  %arraydecay4 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %inmat_, i64 0, i64 0, !dbg !5471
  call void @mul_m4_m4m4([4 x float]* %2, [4 x float]* %arraydecay3, [4 x float]* %arraydecay4), !dbg !5472
  %3 = load [4 x float]*, [4 x float]** %outmat.addr, align 8, !dbg !5473
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %3, i64 3, !dbg !5473
  %arraydecay5 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !5473
  %arraydecay6 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %loc_mat, i64 0, i64 0, !dbg !5474
  %arrayidx7 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %inmat_, i64 0, i64 3, !dbg !5475
  %arraydecay8 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx7, i64 0, i64 0, !dbg !5475
  call void @mul_v3_m4v3(float* %arraydecay5, [4 x float]* %arraydecay6, float* %arraydecay8), !dbg !5476
  ret void, !dbg !5477
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_armature_loc_pose_to_bone(%struct.bPoseChannel* %pchan, float* %inloc, float* %outloc) #0 !dbg !5478 {
entry:
  %pchan.addr = alloca %struct.bPoseChannel*, align 8
  %inloc.addr = alloca float*, align 8
  %outloc.addr = alloca float*, align 8
  %xLocMat = alloca [4 x [4 x float]], align 16
  %nLocMat = alloca [4 x [4 x float]], align 16
  store %struct.bPoseChannel* %pchan, %struct.bPoseChannel** %pchan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan.addr, metadata !5481, metadata !DIExpression()), !dbg !5482
  store float* %inloc, float** %inloc.addr, align 8
  call void @llvm.dbg.declare(metadata float** %inloc.addr, metadata !5483, metadata !DIExpression()), !dbg !5484
  store float* %outloc, float** %outloc.addr, align 8
  call void @llvm.dbg.declare(metadata float** %outloc.addr, metadata !5485, metadata !DIExpression()), !dbg !5486
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %xLocMat, metadata !5487, metadata !DIExpression()), !dbg !5488
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %nLocMat, metadata !5489, metadata !DIExpression()), !dbg !5490
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %xLocMat, i64 0, i64 0, !dbg !5491
  call void @unit_m4([4 x float]* %arraydecay), !dbg !5492
  %arrayidx = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %xLocMat, i64 0, i64 3, !dbg !5493
  %arraydecay1 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !5493
  %0 = load float*, float** %inloc.addr, align 8, !dbg !5494
  call void @copy_v3_v3(float* %arraydecay1, float* %0), !dbg !5495
  %1 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5496
  %arraydecay2 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %xLocMat, i64 0, i64 0, !dbg !5497
  %arraydecay3 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %nLocMat, i64 0, i64 0, !dbg !5498
  call void @BKE_armature_mat_pose_to_bone(%struct.bPoseChannel* %1, [4 x float]* %arraydecay2, [4 x float]* %arraydecay3), !dbg !5499
  %2 = load float*, float** %outloc.addr, align 8, !dbg !5500
  %arrayidx4 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %nLocMat, i64 0, i64 3, !dbg !5501
  %arraydecay5 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx4, i64 0, i64 0, !dbg !5501
  call void @copy_v3_v3(float* %2, float* %arraydecay5), !dbg !5502
  ret void, !dbg !5503
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_armature_mat_pose_to_bone_ex(%struct.Object* %ob, %struct.bPoseChannel* %pchan, [4 x float]* %inmat, [4 x float]* %outmat) #0 !dbg !5504 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %pchan.addr = alloca %struct.bPoseChannel*, align 8
  %inmat.addr = alloca [4 x float]*, align 8
  %outmat.addr = alloca [4 x float]*, align 8
  %work_pchan = alloca %struct.bPoseChannel, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5507, metadata !DIExpression()), !dbg !5508
  store %struct.bPoseChannel* %pchan, %struct.bPoseChannel** %pchan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan.addr, metadata !5509, metadata !DIExpression()), !dbg !5510
  store [4 x float]* %inmat, [4 x float]** %inmat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %inmat.addr, metadata !5511, metadata !DIExpression()), !dbg !5512
  store [4 x float]* %outmat, [4 x float]** %outmat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %outmat.addr, metadata !5513, metadata !DIExpression()), !dbg !5514
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel* %work_pchan, metadata !5515, metadata !DIExpression()), !dbg !5516
  %0 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5517
  %1 = bitcast %struct.bPoseChannel* %work_pchan to i8*, !dbg !5518
  %2 = bitcast %struct.bPoseChannel* %0 to i8*, !dbg !5518
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1, i8* align 8 %2, i64 544, i1 false), !dbg !5518
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5519
  call void @BKE_pose_where_is_bone(%struct.Scene* null, %struct.Object* %3, %struct.bPoseChannel* %work_pchan, float 0.000000e+00, i8 zeroext 0), !dbg !5520
  %4 = load [4 x float]*, [4 x float]** %outmat.addr, align 8, !dbg !5521
  call void @unit_m4([4 x float]* %4), !dbg !5522
  %5 = load [4 x float]*, [4 x float]** %outmat.addr, align 8, !dbg !5523
  call void @BKE_pchan_apply_mat4(%struct.bPoseChannel* %work_pchan, [4 x float]* %5, i8 zeroext 0), !dbg !5524
  %6 = load [4 x float]*, [4 x float]** %inmat.addr, align 8, !dbg !5525
  %7 = load [4 x float]*, [4 x float]** %outmat.addr, align 8, !dbg !5526
  call void @BKE_armature_mat_pose_to_bone(%struct.bPoseChannel* %work_pchan, [4 x float]* %6, [4 x float]* %7), !dbg !5527
  ret void, !dbg !5528
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_pose_where_is_bone(%struct.Scene* %scene, %struct.Object* %ob, %struct.bPoseChannel* %pchan, float %ctime, i8 zeroext %do_extra) #0 !dbg !5529 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %pchan.addr = alloca %struct.bPoseChannel*, align 8
  %ctime.addr = alloca float, align 4
  %do_extra.addr = alloca i8, align 1
  %cob = alloca %struct.bConstraintOb*, align 8
  %vec = alloca [3 x float], align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !5534, metadata !DIExpression()), !dbg !5535
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !5536, metadata !DIExpression()), !dbg !5537
  store %struct.bPoseChannel* %pchan, %struct.bPoseChannel** %pchan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan.addr, metadata !5538, metadata !DIExpression()), !dbg !5539
  store float %ctime, float* %ctime.addr, align 4
  call void @llvm.dbg.declare(metadata float* %ctime.addr, metadata !5540, metadata !DIExpression()), !dbg !5541
  store i8 %do_extra, i8* %do_extra.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %do_extra.addr, metadata !5542, metadata !DIExpression()), !dbg !5543
  %0 = load i8, i8* %do_extra.addr, align 1, !dbg !5544
  %tobool = icmp ne i8 %0, 0, !dbg !5544
  br i1 %tobool, label %if.then, label %if.else, !dbg !5546

if.then:                                          ; preds = %entry
  %1 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5547
  call void @BKE_pchan_calc_mat(%struct.bPoseChannel* %1), !dbg !5548
  br label %if.end, !dbg !5548

if.else:                                          ; preds = %entry
  %2 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5549
  %chan_mat = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %2, i32 0, i32 28, !dbg !5550
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %chan_mat, i64 0, i64 0, !dbg !5549
  call void @unit_m4([4 x float]* %arraydecay), !dbg !5551
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %3 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5552
  %4 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5553
  %chan_mat1 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %4, i32 0, i32 28, !dbg !5554
  %arraydecay2 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %chan_mat1, i64 0, i64 0, !dbg !5553
  %5 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5555
  %pose_mat = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %5, i32 0, i32 29, !dbg !5556
  %arraydecay3 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %pose_mat, i64 0, i64 0, !dbg !5555
  call void @BKE_armature_mat_bone_to_pose(%struct.bPoseChannel* %3, [4 x float]* %arraydecay2, [4 x float]* %arraydecay3), !dbg !5557
  %6 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5558
  %parent = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %6, i32 0, i32 13, !dbg !5560
  %7 = load %struct.bPoseChannel*, %struct.bPoseChannel** %parent, align 8, !dbg !5560
  %tobool4 = icmp ne %struct.bPoseChannel* %7, null, !dbg !5558
  br i1 %tobool4, label %if.end11, label %if.then5, !dbg !5561

if.then5:                                         ; preds = %if.end
  %8 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5562
  %bone = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %8, i32 0, i32 12, !dbg !5565
  %9 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !5565
  %flag = getelementptr inbounds %struct.Bone, %struct.Bone* %9, i32 0, i32 10, !dbg !5566
  %10 = load i32, i32* %flag, align 8, !dbg !5566
  %and = and i32 %10, 262144, !dbg !5567
  %cmp = icmp eq i32 %and, 0, !dbg !5568
  br i1 %cmp, label %if.then6, label %if.end10, !dbg !5569

if.then6:                                         ; preds = %if.then5
  %11 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5570
  %pose_mat7 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %11, i32 0, i32 29, !dbg !5571
  %arrayidx = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %pose_mat7, i64 0, i64 3, !dbg !5570
  %arraydecay8 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !5570
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5572
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 18, !dbg !5573
  %13 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !5573
  %cyclic_offset = getelementptr inbounds %struct.bPose, %struct.bPose* %13, i32 0, i32 8, !dbg !5574
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %cyclic_offset, i64 0, i64 0, !dbg !5572
  call void @add_v3_v3(float* %arraydecay8, float* %arraydecay9), !dbg !5575
  br label %if.end10, !dbg !5575

if.end10:                                         ; preds = %if.then6, %if.then5
  br label %if.end11, !dbg !5576

if.end11:                                         ; preds = %if.end10, %if.end
  %14 = load i8, i8* %do_extra.addr, align 1, !dbg !5577
  %tobool12 = icmp ne i8 %14, 0, !dbg !5577
  br i1 %tobool12, label %if.then13, label %if.end32, !dbg !5579

if.then13:                                        ; preds = %if.end11
  %15 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5580
  %constraints = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %15, i32 0, i32 3, !dbg !5583
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %constraints, i32 0, i32 0, !dbg !5584
  %16 = load i8*, i8** %first, align 8, !dbg !5584
  %tobool14 = icmp ne i8* %16, null, !dbg !5580
  br i1 %tobool14, label %if.then15, label %if.end31, !dbg !5585

if.then15:                                        ; preds = %if.then13
  call void @llvm.dbg.declare(metadata %struct.bConstraintOb** %cob, metadata !5586, metadata !DIExpression()), !dbg !5600
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !5601, metadata !DIExpression()), !dbg !5602
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !5603
  %17 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5604
  %pose_mat17 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %17, i32 0, i32 29, !dbg !5605
  %arrayidx18 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %pose_mat17, i64 0, i64 3, !dbg !5604
  %arraydecay19 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx18, i64 0, i64 0, !dbg !5604
  call void @copy_v3_v3(float* %arraydecay16, float* %arraydecay19), !dbg !5606
  %18 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !5607
  %19 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !5608
  %20 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5609
  %21 = bitcast %struct.bPoseChannel* %20 to i8*, !dbg !5609
  %call = call %struct.bConstraintOb* @BKE_constraints_make_evalob(%struct.Scene* %18, %struct.Object* %19, i8* %21, i16 signext 2), !dbg !5610
  store %struct.bConstraintOb* %call, %struct.bConstraintOb** %cob, align 8, !dbg !5611
  %22 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5612
  %constraints20 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %22, i32 0, i32 3, !dbg !5613
  %23 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob, align 8, !dbg !5614
  %24 = load float, float* %ctime.addr, align 4, !dbg !5615
  call void @BKE_constraints_solve(%struct.ListBase* %constraints20, %struct.bConstraintOb* %23, float %24), !dbg !5616
  %25 = load %struct.bConstraintOb*, %struct.bConstraintOb** %cob, align 8, !dbg !5617
  call void @BKE_constraints_clear_evalob(%struct.bConstraintOb* %25), !dbg !5618
  %26 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5619
  %bone21 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %26, i32 0, i32 12, !dbg !5621
  %27 = load %struct.Bone*, %struct.Bone** %bone21, align 8, !dbg !5621
  %flag22 = getelementptr inbounds %struct.Bone, %struct.Bone* %27, i32 0, i32 10, !dbg !5622
  %28 = load i32, i32* %flag22, align 8, !dbg !5622
  %and23 = and i32 %28, 16, !dbg !5623
  %tobool24 = icmp ne i32 %and23, 0, !dbg !5623
  br i1 %tobool24, label %if.then25, label %if.end30, !dbg !5624

if.then25:                                        ; preds = %if.then15
  %29 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5625
  %pose_mat26 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %29, i32 0, i32 29, !dbg !5627
  %arrayidx27 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %pose_mat26, i64 0, i64 3, !dbg !5625
  %arraydecay28 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx27, i64 0, i64 0, !dbg !5625
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !5628
  call void @copy_v3_v3(float* %arraydecay28, float* %arraydecay29), !dbg !5629
  br label %if.end30, !dbg !5630

if.end30:                                         ; preds = %if.then25, %if.then15
  br label %if.end31, !dbg !5631

if.end31:                                         ; preds = %if.end30, %if.then13
  br label %if.end32, !dbg !5632

if.end32:                                         ; preds = %if.end31, %if.end11
  %30 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5633
  %pose_head = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %30, i32 0, i32 31, !dbg !5634
  %arraydecay33 = getelementptr inbounds [3 x float], [3 x float]* %pose_head, i64 0, i64 0, !dbg !5633
  %31 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5635
  %pose_mat34 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %31, i32 0, i32 29, !dbg !5636
  %arrayidx35 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %pose_mat34, i64 0, i64 3, !dbg !5635
  %arraydecay36 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx35, i64 0, i64 0, !dbg !5635
  call void @copy_v3_v3(float* %arraydecay33, float* %arraydecay36), !dbg !5637
  %32 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5638
  call void @BKE_pose_where_is_bone_tail(%struct.bPoseChannel* %32), !dbg !5639
  ret void, !dbg !5640
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_pchan_apply_mat4(%struct.bPoseChannel* %pchan, [4 x float]* %mat, i8 zeroext %use_compat) #0 !dbg !5641 {
entry:
  %pchan.addr = alloca %struct.bPoseChannel*, align 8
  %mat.addr = alloca [4 x float]*, align 8
  %use_compat.addr = alloca i8, align 1
  %rot = alloca [3 x [3 x float]], align 16
  store %struct.bPoseChannel* %pchan, %struct.bPoseChannel** %pchan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan.addr, metadata !5644, metadata !DIExpression()), !dbg !5645
  store [4 x float]* %mat, [4 x float]** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %mat.addr, metadata !5646, metadata !DIExpression()), !dbg !5647
  store i8 %use_compat, i8* %use_compat.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_compat.addr, metadata !5648, metadata !DIExpression()), !dbg !5649
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %rot, metadata !5650, metadata !DIExpression()), !dbg !5651
  %0 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5652
  %loc = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %0, i32 0, i32 20, !dbg !5653
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !5652
  %arraydecay1 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %rot, i64 0, i64 0, !dbg !5654
  %1 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5655
  %size = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %1, i32 0, i32 21, !dbg !5656
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !5655
  %2 = load [4 x float]*, [4 x float]** %mat.addr, align 8, !dbg !5657
  call void @mat4_to_loc_rot_size(float* %arraydecay, [3 x float]* %arraydecay1, float* %arraydecay2, [4 x float]* %2), !dbg !5658
  %3 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5659
  %arraydecay3 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %rot, i64 0, i64 0, !dbg !5660
  %4 = load i8, i8* %use_compat.addr, align 1, !dbg !5661
  call void @BKE_pchan_mat3_to_rot(%struct.bPoseChannel* %3, [3 x float]* %arraydecay3, i8 zeroext %4), !dbg !5662
  ret void, !dbg !5663
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_pchan_mat3_to_rot(%struct.bPoseChannel* %pchan, [3 x float]* %mat, i8 zeroext %use_compat) #0 !dbg !5664 {
entry:
  %pchan.addr = alloca %struct.bPoseChannel*, align 8
  %mat.addr = alloca [3 x float]*, align 8
  %use_compat.addr = alloca i8, align 1
  store %struct.bPoseChannel* %pchan, %struct.bPoseChannel** %pchan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan.addr, metadata !5667, metadata !DIExpression()), !dbg !5668
  store [3 x float]* %mat, [3 x float]** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %mat.addr, metadata !5669, metadata !DIExpression()), !dbg !5670
  store i8 %use_compat, i8* %use_compat.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_compat.addr, metadata !5671, metadata !DIExpression()), !dbg !5672
  %0 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5673
  %rotmode = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %0, i32 0, i32 26, !dbg !5674
  %1 = load i16, i16* %rotmode, align 4, !dbg !5674
  %conv = sext i16 %1 to i32, !dbg !5673
  switch i32 %conv, label %sw.default [
    i32 0, label %sw.bb
    i32 -1, label %sw.bb1
  ], !dbg !5675

sw.bb:                                            ; preds = %entry
  %2 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5676
  %quat = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %2, i32 0, i32 23, !dbg !5678
  %arraydecay = getelementptr inbounds [4 x float], [4 x float]* %quat, i64 0, i64 0, !dbg !5676
  %3 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !5679
  call void @mat3_to_quat(float* %arraydecay, [3 x float]* %3), !dbg !5680
  br label %sw.epilog, !dbg !5681

sw.bb1:                                           ; preds = %entry
  %4 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5682
  %rotAxis = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %4, i32 0, i32 24, !dbg !5683
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %rotAxis, i64 0, i64 0, !dbg !5682
  %5 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5684
  %rotAngle = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %5, i32 0, i32 25, !dbg !5685
  %6 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !5686
  call void @mat3_to_axis_angle(float* %arraydecay2, float* %rotAngle, [3 x float]* %6), !dbg !5687
  br label %sw.epilog, !dbg !5688

sw.default:                                       ; preds = %entry
  %7 = load i8, i8* %use_compat.addr, align 1, !dbg !5689
  %tobool = icmp ne i8 %7, 0, !dbg !5689
  br i1 %tobool, label %if.then, label %if.else, !dbg !5691

if.then:                                          ; preds = %sw.default
  %8 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5692
  %eul = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %8, i32 0, i32 22, !dbg !5693
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 0, !dbg !5692
  %9 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5694
  %eul4 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %9, i32 0, i32 22, !dbg !5695
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %eul4, i64 0, i64 0, !dbg !5694
  %10 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5696
  %rotmode6 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %10, i32 0, i32 26, !dbg !5697
  %11 = load i16, i16* %rotmode6, align 4, !dbg !5697
  %12 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !5698
  call void @mat3_to_compatible_eulO(float* %arraydecay3, float* %arraydecay5, i16 signext %11, [3 x float]* %12), !dbg !5699
  br label %if.end, !dbg !5699

if.else:                                          ; preds = %sw.default
  %13 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5700
  %eul7 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %13, i32 0, i32 22, !dbg !5701
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %eul7, i64 0, i64 0, !dbg !5700
  %14 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !5702
  %rotmode9 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %14, i32 0, i32 26, !dbg !5703
  %15 = load i16, i16* %rotmode9, align 4, !dbg !5703
  %16 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !5704
  call void @mat3_to_eulO(float* %arraydecay8, i16 signext %15, [3 x float]* %16), !dbg !5705
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  br label %sw.epilog, !dbg !5706

sw.epilog:                                        ; preds = %if.end, %sw.bb1, %sw.bb
  ret void, !dbg !5707
}

declare dso_local void @mat3_to_quat(float*, [3 x float]*) #2

declare dso_local void @mat3_to_axis_angle(float*, float*, [3 x float]*) #2

declare dso_local void @mat3_to_compatible_eulO(float*, float*, i16 signext, [3 x float]*) #2

declare dso_local void @mat3_to_eulO(float*, i16 signext, [3 x float]*) #2

declare dso_local void @mat4_to_loc_rot_size(float*, [3 x float]*, float*, [4 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_armature_mat_pose_to_delta([4 x float]* %delta_mat, [4 x float]* %pose_mat, [4 x float]* %arm_mat) #0 !dbg !5708 {
entry:
  %delta_mat.addr = alloca [4 x float]*, align 8
  %pose_mat.addr = alloca [4 x float]*, align 8
  %arm_mat.addr = alloca [4 x float]*, align 8
  %imat = alloca [4 x [4 x float]], align 16
  store [4 x float]* %delta_mat, [4 x float]** %delta_mat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %delta_mat.addr, metadata !5711, metadata !DIExpression()), !dbg !5712
  store [4 x float]* %pose_mat, [4 x float]** %pose_mat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %pose_mat.addr, metadata !5713, metadata !DIExpression()), !dbg !5714
  store [4 x float]* %arm_mat, [4 x float]** %arm_mat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %arm_mat.addr, metadata !5715, metadata !DIExpression()), !dbg !5716
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %imat, metadata !5717, metadata !DIExpression()), !dbg !5718
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !5719
  %0 = load [4 x float]*, [4 x float]** %arm_mat.addr, align 8, !dbg !5720
  %call = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay, [4 x float]* %0), !dbg !5721
  %1 = load [4 x float]*, [4 x float]** %delta_mat.addr, align 8, !dbg !5722
  %arraydecay1 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !5723
  %2 = load [4 x float]*, [4 x float]** %pose_mat.addr, align 8, !dbg !5724
  call void @mul_m4_m4m4([4 x float]* %1, [4 x float]* %arraydecay1, [4 x float]* %2), !dbg !5725
  ret void, !dbg !5726
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_rotMode_change_values(float* %quat, float* %eul, float* %axis, float* %angle, i16 signext %oldMode, i16 signext %newMode) #0 !dbg !5727 {
entry:
  %quat.addr = alloca float*, align 8
  %eul.addr = alloca float*, align 8
  %axis.addr = alloca float*, align 8
  %angle.addr = alloca float*, align 8
  %oldMode.addr = alloca i16, align 2
  %newMode.addr = alloca i16, align 2
  store float* %quat, float** %quat.addr, align 8
  call void @llvm.dbg.declare(metadata float** %quat.addr, metadata !5730, metadata !DIExpression()), !dbg !5731
  store float* %eul, float** %eul.addr, align 8
  call void @llvm.dbg.declare(metadata float** %eul.addr, metadata !5732, metadata !DIExpression()), !dbg !5733
  store float* %axis, float** %axis.addr, align 8
  call void @llvm.dbg.declare(metadata float** %axis.addr, metadata !5734, metadata !DIExpression()), !dbg !5735
  store float* %angle, float** %angle.addr, align 8
  call void @llvm.dbg.declare(metadata float** %angle.addr, metadata !5736, metadata !DIExpression()), !dbg !5737
  store i16 %oldMode, i16* %oldMode.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %oldMode.addr, metadata !5738, metadata !DIExpression()), !dbg !5739
  store i16 %newMode, i16* %newMode.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %newMode.addr, metadata !5740, metadata !DIExpression()), !dbg !5741
  %0 = load i16, i16* %newMode.addr, align 2, !dbg !5742
  %conv = sext i16 %0 to i32, !dbg !5742
  %cmp = icmp sgt i32 %conv, 0, !dbg !5744
  br i1 %cmp, label %if.then, label %if.else11, !dbg !5745

if.then:                                          ; preds = %entry
  %1 = load i16, i16* %oldMode.addr, align 2, !dbg !5746
  %conv2 = sext i16 %1 to i32, !dbg !5746
  %cmp3 = icmp eq i32 %conv2, -1, !dbg !5749
  br i1 %cmp3, label %if.then5, label %if.else, !dbg !5750

if.then5:                                         ; preds = %if.then
  %2 = load float*, float** %eul.addr, align 8, !dbg !5751
  %3 = load i16, i16* %newMode.addr, align 2, !dbg !5753
  %4 = load float*, float** %axis.addr, align 8, !dbg !5754
  %5 = load float*, float** %angle.addr, align 8, !dbg !5755
  %6 = load float, float* %5, align 4, !dbg !5756
  call void @axis_angle_to_eulO(float* %2, i16 signext %3, float* %4, float %6), !dbg !5757
  br label %if.end10, !dbg !5758

if.else:                                          ; preds = %if.then
  %7 = load i16, i16* %oldMode.addr, align 2, !dbg !5759
  %conv6 = sext i16 %7 to i32, !dbg !5759
  %cmp7 = icmp eq i32 %conv6, 0, !dbg !5761
  br i1 %cmp7, label %if.then9, label %if.end, !dbg !5762

if.then9:                                         ; preds = %if.else
  %8 = load float*, float** %quat.addr, align 8, !dbg !5763
  %call = call float @normalize_qt(float* %8), !dbg !5765
  %9 = load float*, float** %eul.addr, align 8, !dbg !5766
  %10 = load i16, i16* %newMode.addr, align 2, !dbg !5767
  %11 = load float*, float** %quat.addr, align 8, !dbg !5768
  call void @quat_to_eulO(float* %9, i16 signext %10, float* %11), !dbg !5769
  br label %if.end, !dbg !5770

if.end:                                           ; preds = %if.then9, %if.else
  br label %if.end10

if.end10:                                         ; preds = %if.end, %if.then5
  br label %if.end59, !dbg !5771

if.else11:                                        ; preds = %entry
  %12 = load i16, i16* %newMode.addr, align 2, !dbg !5772
  %conv12 = sext i16 %12 to i32, !dbg !5772
  %cmp13 = icmp eq i32 %conv12, 0, !dbg !5774
  br i1 %cmp13, label %if.then15, label %if.else27, !dbg !5775

if.then15:                                        ; preds = %if.else11
  %13 = load i16, i16* %oldMode.addr, align 2, !dbg !5776
  %conv16 = sext i16 %13 to i32, !dbg !5776
  %cmp17 = icmp eq i32 %conv16, -1, !dbg !5779
  br i1 %cmp17, label %if.then19, label %if.else20, !dbg !5780

if.then19:                                        ; preds = %if.then15
  %14 = load float*, float** %quat.addr, align 8, !dbg !5781
  %15 = load float*, float** %axis.addr, align 8, !dbg !5783
  %16 = load float*, float** %angle.addr, align 8, !dbg !5784
  %17 = load float, float* %16, align 4, !dbg !5785
  call void @axis_angle_to_quat(float* %14, float* %15, float %17), !dbg !5786
  br label %if.end26, !dbg !5787

if.else20:                                        ; preds = %if.then15
  %18 = load i16, i16* %oldMode.addr, align 2, !dbg !5788
  %conv21 = sext i16 %18 to i32, !dbg !5788
  %cmp22 = icmp sgt i32 %conv21, 0, !dbg !5790
  br i1 %cmp22, label %if.then24, label %if.end25, !dbg !5791

if.then24:                                        ; preds = %if.else20
  %19 = load float*, float** %quat.addr, align 8, !dbg !5792
  %20 = load float*, float** %eul.addr, align 8, !dbg !5794
  %21 = load i16, i16* %oldMode.addr, align 2, !dbg !5795
  call void @eulO_to_quat(float* %19, float* %20, i16 signext %21), !dbg !5796
  br label %if.end25, !dbg !5797

if.end25:                                         ; preds = %if.then24, %if.else20
  br label %if.end26

if.end26:                                         ; preds = %if.end25, %if.then19
  br label %if.end58, !dbg !5798

if.else27:                                        ; preds = %if.else11
  %22 = load i16, i16* %newMode.addr, align 2, !dbg !5799
  %conv28 = sext i16 %22 to i32, !dbg !5799
  %cmp29 = icmp eq i32 %conv28, -1, !dbg !5801
  br i1 %cmp29, label %if.then31, label %if.end57, !dbg !5802

if.then31:                                        ; preds = %if.else27
  %23 = load i16, i16* %oldMode.addr, align 2, !dbg !5803
  %conv32 = sext i16 %23 to i32, !dbg !5803
  %cmp33 = icmp sgt i32 %conv32, 0, !dbg !5806
  br i1 %cmp33, label %if.then35, label %if.else36, !dbg !5807

if.then35:                                        ; preds = %if.then31
  %24 = load float*, float** %axis.addr, align 8, !dbg !5808
  %25 = load float*, float** %angle.addr, align 8, !dbg !5810
  %26 = load float*, float** %eul.addr, align 8, !dbg !5811
  %27 = load i16, i16* %oldMode.addr, align 2, !dbg !5812
  call void @eulO_to_axis_angle(float* %24, float* %25, float* %26, i16 signext %27), !dbg !5813
  br label %if.end43, !dbg !5814

if.else36:                                        ; preds = %if.then31
  %28 = load i16, i16* %oldMode.addr, align 2, !dbg !5815
  %conv37 = sext i16 %28 to i32, !dbg !5815
  %cmp38 = icmp eq i32 %conv37, 0, !dbg !5817
  br i1 %cmp38, label %if.then40, label %if.end42, !dbg !5818

if.then40:                                        ; preds = %if.else36
  %29 = load float*, float** %quat.addr, align 8, !dbg !5819
  %call41 = call float @normalize_qt(float* %29), !dbg !5821
  %30 = load float*, float** %axis.addr, align 8, !dbg !5822
  %31 = load float*, float** %angle.addr, align 8, !dbg !5823
  %32 = load float*, float** %quat.addr, align 8, !dbg !5824
  call void @quat_to_axis_angle(float* %30, float* %31, float* %32), !dbg !5825
  br label %if.end42, !dbg !5826

if.end42:                                         ; preds = %if.then40, %if.else36
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.then35
  %33 = load float*, float** %axis.addr, align 8, !dbg !5827
  %arrayidx = getelementptr inbounds float, float* %33, i64 0, !dbg !5827
  %34 = load float, float* %arrayidx, align 4, !dbg !5827
  %35 = load float*, float** %axis.addr, align 8, !dbg !5827
  %arrayidx44 = getelementptr inbounds float, float* %35, i64 1, !dbg !5827
  %36 = load float, float* %arrayidx44, align 4, !dbg !5827
  %sub = fsub float %34, %36, !dbg !5827
  %37 = call float @llvm.fabs.f32(float %sub), !dbg !5827
  %cmp45 = fcmp oge float %37, 0x3E80000000000000, !dbg !5827
  %38 = zext i1 %cmp45 to i64, !dbg !5827
  %cond = select i1 %cmp45, i32 0, i32 1, !dbg !5827
  %tobool = icmp ne i32 %cond, 0, !dbg !5827
  br i1 %tobool, label %land.lhs.true, label %if.end56, !dbg !5829

land.lhs.true:                                    ; preds = %if.end43
  %39 = load float*, float** %axis.addr, align 8, !dbg !5830
  %arrayidx47 = getelementptr inbounds float, float* %39, i64 1, !dbg !5830
  %40 = load float, float* %arrayidx47, align 4, !dbg !5830
  %41 = load float*, float** %axis.addr, align 8, !dbg !5830
  %arrayidx48 = getelementptr inbounds float, float* %41, i64 2, !dbg !5830
  %42 = load float, float* %arrayidx48, align 4, !dbg !5830
  %sub49 = fsub float %40, %42, !dbg !5830
  %43 = call float @llvm.fabs.f32(float %sub49), !dbg !5830
  %cmp50 = fcmp oge float %43, 0x3E80000000000000, !dbg !5830
  %44 = zext i1 %cmp50 to i64, !dbg !5830
  %cond52 = select i1 %cmp50, i32 0, i32 1, !dbg !5830
  %tobool53 = icmp ne i32 %cond52, 0, !dbg !5830
  br i1 %tobool53, label %if.then54, label %if.end56, !dbg !5831

if.then54:                                        ; preds = %land.lhs.true
  %45 = load float*, float** %axis.addr, align 8, !dbg !5832
  %arrayidx55 = getelementptr inbounds float, float* %45, i64 1, !dbg !5832
  store float 1.000000e+00, float* %arrayidx55, align 4, !dbg !5834
  br label %if.end56, !dbg !5835

if.end56:                                         ; preds = %if.then54, %land.lhs.true, %if.end43
  br label %if.end57, !dbg !5836

if.end57:                                         ; preds = %if.end56, %if.else27
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.end26
  br label %if.end59

if.end59:                                         ; preds = %if.end58, %if.end10
  ret void, !dbg !5837
}

declare dso_local void @axis_angle_to_eulO(float*, i16 signext, float*, float) #2

declare dso_local float @normalize_qt(float*) #2

declare dso_local void @quat_to_eulO(float*, i16 signext, float*) #2

declare dso_local void @axis_angle_to_quat(float*, float*, float) #2

declare dso_local void @eulO_to_quat(float*, float*, i16 signext) #2

declare dso_local void @eulO_to_axis_angle(float*, float*, float*, i16 signext) #2

declare dso_local void @quat_to_axis_angle(float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @mat3_to_vec_roll([3 x float]* %mat, float* %r_vec, float* %r_roll) #0 !dbg !5838 {
entry:
  %mat.addr = alloca [3 x float]*, align 8
  %r_vec.addr = alloca float*, align 8
  %r_roll.addr = alloca float*, align 8
  %vecmat = alloca [3 x [3 x float]], align 16
  %vecmatinv = alloca [3 x [3 x float]], align 16
  %rollmat = alloca [3 x [3 x float]], align 16
  store [3 x float]* %mat, [3 x float]** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %mat.addr, metadata !5841, metadata !DIExpression()), !dbg !5842
  store float* %r_vec, float** %r_vec.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_vec.addr, metadata !5843, metadata !DIExpression()), !dbg !5844
  store float* %r_roll, float** %r_roll.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_roll.addr, metadata !5845, metadata !DIExpression()), !dbg !5846
  %0 = load float*, float** %r_vec.addr, align 8, !dbg !5847
  %tobool = icmp ne float* %0, null, !dbg !5847
  br i1 %tobool, label %if.then, label %if.end, !dbg !5849

if.then:                                          ; preds = %entry
  %1 = load float*, float** %r_vec.addr, align 8, !dbg !5850
  %2 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !5852
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %2, i64 1, !dbg !5852
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !5852
  call void @copy_v3_v3(float* %1, float* %arraydecay), !dbg !5853
  br label %if.end, !dbg !5854

if.end:                                           ; preds = %if.then, %entry
  %3 = load float*, float** %r_roll.addr, align 8, !dbg !5855
  %tobool1 = icmp ne float* %3, null, !dbg !5855
  br i1 %tobool1, label %if.then2, label %if.end15, !dbg !5857

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %vecmat, metadata !5858, metadata !DIExpression()), !dbg !5860
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %vecmatinv, metadata !5861, metadata !DIExpression()), !dbg !5862
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %rollmat, metadata !5863, metadata !DIExpression()), !dbg !5864
  %4 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !5865
  %arrayidx3 = getelementptr inbounds [3 x float], [3 x float]* %4, i64 1, !dbg !5865
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx3, i64 0, i64 0, !dbg !5865
  %arraydecay5 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vecmat, i64 0, i64 0, !dbg !5866
  call void @vec_roll_to_mat3(float* %arraydecay4, float 0.000000e+00, [3 x float]* %arraydecay5), !dbg !5867
  %arraydecay6 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vecmatinv, i64 0, i64 0, !dbg !5868
  %arraydecay7 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vecmat, i64 0, i64 0, !dbg !5869
  %call = call zeroext i8 @invert_m3_m3([3 x float]* %arraydecay6, [3 x float]* %arraydecay7), !dbg !5870
  %arraydecay8 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %rollmat, i64 0, i64 0, !dbg !5871
  %arraydecay9 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %vecmatinv, i64 0, i64 0, !dbg !5872
  %5 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !5873
  call void @mul_m3_m3m3([3 x float]* %arraydecay8, [3 x float]* %arraydecay9, [3 x float]* %5), !dbg !5874
  %arrayidx10 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %rollmat, i64 0, i64 2, !dbg !5875
  %arrayidx11 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx10, i64 0, i64 0, !dbg !5875
  %6 = load float, float* %arrayidx11, align 8, !dbg !5875
  %arrayidx12 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %rollmat, i64 0, i64 2, !dbg !5876
  %arrayidx13 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx12, i64 0, i64 2, !dbg !5876
  %7 = load float, float* %arrayidx13, align 8, !dbg !5876
  %call14 = call float @atan2f(float %6, float %7) #7, !dbg !5877
  %8 = load float*, float** %r_roll.addr, align 8, !dbg !5878
  store float %call14, float* %8, align 4, !dbg !5879
  br label %if.end15, !dbg !5880

if.end15:                                         ; preds = %if.then2, %if.end
  ret void, !dbg !5881
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @vec_roll_to_mat3_normalized(float* %nor, float %roll, [3 x float]* %mat) #0 !dbg !5882 {
entry:
  %nor.addr = alloca float*, align 8
  %roll.addr = alloca float, align 4
  %mat.addr = alloca [3 x float]*, align 8
  %theta = alloca float, align 4
  %rMatrix = alloca [3 x [3 x float]], align 16
  %bMatrix = alloca [3 x [3 x float]], align 16
  store float* %nor, float** %nor.addr, align 8
  call void @llvm.dbg.declare(metadata float** %nor.addr, metadata !5883, metadata !DIExpression()), !dbg !5884
  store float %roll, float* %roll.addr, align 4
  call void @llvm.dbg.declare(metadata float* %roll.addr, metadata !5885, metadata !DIExpression()), !dbg !5886
  store [3 x float]* %mat, [3 x float]** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %mat.addr, metadata !5887, metadata !DIExpression()), !dbg !5888
  call void @llvm.dbg.declare(metadata float* %theta, metadata !5889, metadata !DIExpression()), !dbg !5890
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %rMatrix, metadata !5891, metadata !DIExpression()), !dbg !5892
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %bMatrix, metadata !5893, metadata !DIExpression()), !dbg !5894
  %0 = load float*, float** %nor.addr, align 8, !dbg !5895
  %arrayidx = getelementptr inbounds float, float* %0, i64 1, !dbg !5895
  %1 = load float, float* %arrayidx, align 4, !dbg !5895
  %add = fadd float 1.000000e+00, %1, !dbg !5896
  store float %add, float* %theta, align 4, !dbg !5897
  %2 = load float, float* %theta, align 4, !dbg !5898
  %cmp = fcmp ogt float %2, 0x3EE4F8B580000000, !dbg !5900
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5901

lor.lhs.false:                                    ; preds = %entry
  %3 = load float*, float** %nor.addr, align 8, !dbg !5902
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !5902
  %4 = load float, float* %arrayidx1, align 4, !dbg !5902
  %tobool = fcmp une float %4, 0.000000e+00, !dbg !5902
  br i1 %tobool, label %land.lhs.true, label %lor.lhs.false2, !dbg !5903

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %5 = load float*, float** %nor.addr, align 8, !dbg !5904
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 2, !dbg !5904
  %6 = load float, float* %arrayidx3, align 4, !dbg !5904
  %tobool4 = fcmp une float %6, 0.000000e+00, !dbg !5904
  br i1 %tobool4, label %land.lhs.true, label %if.else76, !dbg !5905

land.lhs.true:                                    ; preds = %lor.lhs.false2, %lor.lhs.false
  %7 = load float, float* %theta, align 4, !dbg !5906
  %cmp5 = fcmp ogt float %7, 0x3E112E0BE0000000, !dbg !5907
  br i1 %cmp5, label %if.then, label %if.else76, !dbg !5908

if.then:                                          ; preds = %land.lhs.true, %entry
  %8 = load float*, float** %nor.addr, align 8, !dbg !5909
  %arrayidx6 = getelementptr inbounds float, float* %8, i64 0, !dbg !5909
  %9 = load float, float* %arrayidx6, align 4, !dbg !5909
  %fneg = fneg float %9, !dbg !5911
  %arrayidx7 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %bMatrix, i64 0, i64 0, !dbg !5912
  %arrayidx8 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx7, i64 0, i64 1, !dbg !5912
  store float %fneg, float* %arrayidx8, align 4, !dbg !5913
  %10 = load float*, float** %nor.addr, align 8, !dbg !5914
  %arrayidx9 = getelementptr inbounds float, float* %10, i64 0, !dbg !5914
  %11 = load float, float* %arrayidx9, align 4, !dbg !5914
  %arrayidx10 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %bMatrix, i64 0, i64 1, !dbg !5915
  %arrayidx11 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx10, i64 0, i64 0, !dbg !5915
  store float %11, float* %arrayidx11, align 4, !dbg !5916
  %12 = load float*, float** %nor.addr, align 8, !dbg !5917
  %arrayidx12 = getelementptr inbounds float, float* %12, i64 1, !dbg !5917
  %13 = load float, float* %arrayidx12, align 4, !dbg !5917
  %arrayidx13 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %bMatrix, i64 0, i64 1, !dbg !5918
  %arrayidx14 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx13, i64 0, i64 1, !dbg !5918
  store float %13, float* %arrayidx14, align 4, !dbg !5919
  %14 = load float*, float** %nor.addr, align 8, !dbg !5920
  %arrayidx15 = getelementptr inbounds float, float* %14, i64 2, !dbg !5920
  %15 = load float, float* %arrayidx15, align 4, !dbg !5920
  %arrayidx16 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %bMatrix, i64 0, i64 1, !dbg !5921
  %arrayidx17 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx16, i64 0, i64 2, !dbg !5921
  store float %15, float* %arrayidx17, align 4, !dbg !5922
  %16 = load float*, float** %nor.addr, align 8, !dbg !5923
  %arrayidx18 = getelementptr inbounds float, float* %16, i64 2, !dbg !5923
  %17 = load float, float* %arrayidx18, align 4, !dbg !5923
  %fneg19 = fneg float %17, !dbg !5924
  %arrayidx20 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %bMatrix, i64 0, i64 2, !dbg !5925
  %arrayidx21 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx20, i64 0, i64 1, !dbg !5925
  store float %fneg19, float* %arrayidx21, align 4, !dbg !5926
  %18 = load float, float* %theta, align 4, !dbg !5927
  %cmp22 = fcmp ogt float %18, 0x3EE4F8B580000000, !dbg !5929
  br i1 %cmp22, label %if.then23, label %if.else, !dbg !5930

if.then23:                                        ; preds = %if.then
  %19 = load float*, float** %nor.addr, align 8, !dbg !5931
  %arrayidx24 = getelementptr inbounds float, float* %19, i64 0, !dbg !5931
  %20 = load float, float* %arrayidx24, align 4, !dbg !5931
  %21 = load float*, float** %nor.addr, align 8, !dbg !5933
  %arrayidx25 = getelementptr inbounds float, float* %21, i64 0, !dbg !5933
  %22 = load float, float* %arrayidx25, align 4, !dbg !5933
  %mul = fmul float %20, %22, !dbg !5934
  %23 = load float, float* %theta, align 4, !dbg !5935
  %div = fdiv float %mul, %23, !dbg !5936
  %sub = fsub float 1.000000e+00, %div, !dbg !5937
  %arrayidx26 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %bMatrix, i64 0, i64 0, !dbg !5938
  %arrayidx27 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx26, i64 0, i64 0, !dbg !5938
  store float %sub, float* %arrayidx27, align 16, !dbg !5939
  %24 = load float*, float** %nor.addr, align 8, !dbg !5940
  %arrayidx28 = getelementptr inbounds float, float* %24, i64 2, !dbg !5940
  %25 = load float, float* %arrayidx28, align 4, !dbg !5940
  %26 = load float*, float** %nor.addr, align 8, !dbg !5941
  %arrayidx29 = getelementptr inbounds float, float* %26, i64 2, !dbg !5941
  %27 = load float, float* %arrayidx29, align 4, !dbg !5941
  %mul30 = fmul float %25, %27, !dbg !5942
  %28 = load float, float* %theta, align 4, !dbg !5943
  %div31 = fdiv float %mul30, %28, !dbg !5944
  %sub32 = fsub float 1.000000e+00, %div31, !dbg !5945
  %arrayidx33 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %bMatrix, i64 0, i64 2, !dbg !5946
  %arrayidx34 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx33, i64 0, i64 2, !dbg !5946
  store float %sub32, float* %arrayidx34, align 8, !dbg !5947
  %29 = load float*, float** %nor.addr, align 8, !dbg !5948
  %arrayidx35 = getelementptr inbounds float, float* %29, i64 0, !dbg !5948
  %30 = load float, float* %arrayidx35, align 4, !dbg !5948
  %fneg36 = fneg float %30, !dbg !5949
  %31 = load float*, float** %nor.addr, align 8, !dbg !5950
  %arrayidx37 = getelementptr inbounds float, float* %31, i64 2, !dbg !5950
  %32 = load float, float* %arrayidx37, align 4, !dbg !5950
  %mul38 = fmul float %fneg36, %32, !dbg !5951
  %33 = load float, float* %theta, align 4, !dbg !5952
  %div39 = fdiv float %mul38, %33, !dbg !5953
  %arrayidx40 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %bMatrix, i64 0, i64 0, !dbg !5954
  %arrayidx41 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx40, i64 0, i64 2, !dbg !5954
  store float %div39, float* %arrayidx41, align 8, !dbg !5955
  %arrayidx42 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %bMatrix, i64 0, i64 2, !dbg !5956
  %arrayidx43 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx42, i64 0, i64 0, !dbg !5956
  store float %div39, float* %arrayidx43, align 8, !dbg !5957
  br label %if.end, !dbg !5958

if.else:                                          ; preds = %if.then
  %34 = load float*, float** %nor.addr, align 8, !dbg !5959
  %arrayidx44 = getelementptr inbounds float, float* %34, i64 0, !dbg !5959
  %35 = load float, float* %arrayidx44, align 4, !dbg !5959
  %36 = load float*, float** %nor.addr, align 8, !dbg !5961
  %arrayidx45 = getelementptr inbounds float, float* %36, i64 0, !dbg !5961
  %37 = load float, float* %arrayidx45, align 4, !dbg !5961
  %mul46 = fmul float %35, %37, !dbg !5962
  %38 = load float*, float** %nor.addr, align 8, !dbg !5963
  %arrayidx47 = getelementptr inbounds float, float* %38, i64 2, !dbg !5963
  %39 = load float, float* %arrayidx47, align 4, !dbg !5963
  %40 = load float*, float** %nor.addr, align 8, !dbg !5964
  %arrayidx48 = getelementptr inbounds float, float* %40, i64 2, !dbg !5964
  %41 = load float, float* %arrayidx48, align 4, !dbg !5964
  %mul49 = fmul float %39, %41, !dbg !5965
  %add50 = fadd float %mul46, %mul49, !dbg !5966
  store float %add50, float* %theta, align 4, !dbg !5967
  %42 = load float*, float** %nor.addr, align 8, !dbg !5968
  %arrayidx51 = getelementptr inbounds float, float* %42, i64 0, !dbg !5968
  %43 = load float, float* %arrayidx51, align 4, !dbg !5968
  %44 = load float*, float** %nor.addr, align 8, !dbg !5969
  %arrayidx52 = getelementptr inbounds float, float* %44, i64 2, !dbg !5969
  %45 = load float, float* %arrayidx52, align 4, !dbg !5969
  %add53 = fadd float %43, %45, !dbg !5970
  %46 = load float*, float** %nor.addr, align 8, !dbg !5971
  %arrayidx54 = getelementptr inbounds float, float* %46, i64 0, !dbg !5971
  %47 = load float, float* %arrayidx54, align 4, !dbg !5971
  %48 = load float*, float** %nor.addr, align 8, !dbg !5972
  %arrayidx55 = getelementptr inbounds float, float* %48, i64 2, !dbg !5972
  %49 = load float, float* %arrayidx55, align 4, !dbg !5972
  %sub56 = fsub float %47, %49, !dbg !5973
  %mul57 = fmul float %add53, %sub56, !dbg !5974
  %50 = load float, float* %theta, align 4, !dbg !5975
  %fneg58 = fneg float %50, !dbg !5976
  %div59 = fdiv float %mul57, %fneg58, !dbg !5977
  %arrayidx60 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %bMatrix, i64 0, i64 0, !dbg !5978
  %arrayidx61 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx60, i64 0, i64 0, !dbg !5978
  store float %div59, float* %arrayidx61, align 16, !dbg !5979
  %arrayidx62 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %bMatrix, i64 0, i64 0, !dbg !5980
  %arrayidx63 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx62, i64 0, i64 0, !dbg !5980
  %51 = load float, float* %arrayidx63, align 16, !dbg !5980
  %fneg64 = fneg float %51, !dbg !5981
  %arrayidx65 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %bMatrix, i64 0, i64 2, !dbg !5982
  %arrayidx66 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx65, i64 0, i64 2, !dbg !5982
  store float %fneg64, float* %arrayidx66, align 8, !dbg !5983
  %52 = load float*, float** %nor.addr, align 8, !dbg !5984
  %arrayidx67 = getelementptr inbounds float, float* %52, i64 0, !dbg !5984
  %53 = load float, float* %arrayidx67, align 4, !dbg !5984
  %mul68 = fmul float 2.000000e+00, %53, !dbg !5985
  %54 = load float*, float** %nor.addr, align 8, !dbg !5986
  %arrayidx69 = getelementptr inbounds float, float* %54, i64 2, !dbg !5986
  %55 = load float, float* %arrayidx69, align 4, !dbg !5986
  %mul70 = fmul float %mul68, %55, !dbg !5987
  %56 = load float, float* %theta, align 4, !dbg !5988
  %div71 = fdiv float %mul70, %56, !dbg !5989
  %arrayidx72 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %bMatrix, i64 0, i64 0, !dbg !5990
  %arrayidx73 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx72, i64 0, i64 2, !dbg !5990
  store float %div71, float* %arrayidx73, align 8, !dbg !5991
  %arrayidx74 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %bMatrix, i64 0, i64 2, !dbg !5992
  %arrayidx75 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx74, i64 0, i64 0, !dbg !5992
  store float %div71, float* %arrayidx75, align 8, !dbg !5993
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then23
  br label %if.end81, !dbg !5994

if.else76:                                        ; preds = %land.lhs.true, %lor.lhs.false2
  %arraydecay = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %bMatrix, i64 0, i64 0, !dbg !5995
  call void @unit_m3([3 x float]* %arraydecay), !dbg !5997
  %arrayidx77 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %bMatrix, i64 0, i64 1, !dbg !5998
  %arrayidx78 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx77, i64 0, i64 1, !dbg !5998
  store float -1.000000e+00, float* %arrayidx78, align 4, !dbg !5999
  %arrayidx79 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %bMatrix, i64 0, i64 0, !dbg !6000
  %arrayidx80 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx79, i64 0, i64 0, !dbg !6000
  store float -1.000000e+00, float* %arrayidx80, align 16, !dbg !6001
  br label %if.end81

if.end81:                                         ; preds = %if.else76, %if.end
  %arraydecay82 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %rMatrix, i64 0, i64 0, !dbg !6002
  %57 = load float*, float** %nor.addr, align 8, !dbg !6003
  %58 = load float, float* %roll.addr, align 4, !dbg !6004
  call void @axis_angle_normalized_to_mat3([3 x float]* %arraydecay82, float* %57, float %58), !dbg !6005
  %59 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !6006
  %arraydecay83 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %rMatrix, i64 0, i64 0, !dbg !6007
  %arraydecay84 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %bMatrix, i64 0, i64 0, !dbg !6008
  call void @mul_m3_m3m3([3 x float]* %59, [3 x float]* %arraydecay83, [3 x float]* %arraydecay84), !dbg !6009
  ret void, !dbg !6010
}

declare dso_local void @axis_angle_normalized_to_mat3([3 x float]*, float*, float) #2

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3_v3(float* %r, float* %a) #0 !dbg !6011 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %d = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6014, metadata !DIExpression()), !dbg !6015
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !6016, metadata !DIExpression()), !dbg !6017
  call void @llvm.dbg.declare(metadata float* %d, metadata !6018, metadata !DIExpression()), !dbg !6019
  %0 = load float*, float** %a.addr, align 8, !dbg !6020
  %1 = load float*, float** %a.addr, align 8, !dbg !6021
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !6022
  store float %call, float* %d, align 4, !dbg !6019
  %2 = load float, float* %d, align 4, !dbg !6023
  %cmp = fcmp ogt float %2, 0x38AA95A5C0000000, !dbg !6025
  br i1 %cmp, label %if.then, label %if.else, !dbg !6026

if.then:                                          ; preds = %entry
  %3 = load float, float* %d, align 4, !dbg !6027
  %call1 = call float @sqrtf(float %3) #7, !dbg !6029
  store float %call1, float* %d, align 4, !dbg !6030
  %4 = load float*, float** %r.addr, align 8, !dbg !6031
  %5 = load float*, float** %a.addr, align 8, !dbg !6032
  %6 = load float, float* %d, align 4, !dbg !6033
  %div = fdiv float 1.000000e+00, %6, !dbg !6034
  call void @mul_v3_v3fl(float* %4, float* %5, float %div), !dbg !6035
  br label %if.end, !dbg !6036

if.else:                                          ; preds = %entry
  %7 = load float*, float** %r.addr, align 8, !dbg !6037
  call void @zero_v3(float* %7), !dbg !6039
  store float 0.000000e+00, float* %d, align 4, !dbg !6040
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load float, float* %d, align 4, !dbg !6041
  ret float %8, !dbg !6042
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_armature_where_is_bone(%struct.Bone* %bone, %struct.Bone* %prevbone) #0 !dbg !6043 {
entry:
  %bone.addr = alloca %struct.Bone*, align 8
  %prevbone.addr = alloca %struct.Bone*, align 8
  %vec = alloca [3 x float], align 4
  %offs_bone = alloca [4 x [4 x float]], align 16
  store %struct.Bone* %bone, %struct.Bone** %bone.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Bone** %bone.addr, metadata !6046, metadata !DIExpression()), !dbg !6047
  store %struct.Bone* %prevbone, %struct.Bone** %prevbone.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Bone** %prevbone.addr, metadata !6048, metadata !DIExpression()), !dbg !6049
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !6050, metadata !DIExpression()), !dbg !6051
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !6052
  %0 = load %struct.Bone*, %struct.Bone** %bone.addr, align 8, !dbg !6053
  %tail = getelementptr inbounds %struct.Bone, %struct.Bone* %0, i32 0, i32 8, !dbg !6054
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %tail, i64 0, i64 0, !dbg !6053
  %1 = load %struct.Bone*, %struct.Bone** %bone.addr, align 8, !dbg !6055
  %head = getelementptr inbounds %struct.Bone, %struct.Bone* %1, i32 0, i32 7, !dbg !6056
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %head, i64 0, i64 0, !dbg !6055
  call void @sub_v3_v3v3(float* %arraydecay, float* %arraydecay1, float* %arraydecay2), !dbg !6057
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !6058
  %2 = load %struct.Bone*, %struct.Bone** %bone.addr, align 8, !dbg !6059
  %roll = getelementptr inbounds %struct.Bone, %struct.Bone* %2, i32 0, i32 6, !dbg !6060
  %3 = load float, float* %roll, align 8, !dbg !6060
  %4 = load %struct.Bone*, %struct.Bone** %bone.addr, align 8, !dbg !6061
  %bone_mat = getelementptr inbounds %struct.Bone, %struct.Bone* %4, i32 0, i32 9, !dbg !6062
  %arraydecay4 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %bone_mat, i64 0, i64 0, !dbg !6061
  call void @vec_roll_to_mat3(float* %arraydecay3, float %3, [3 x float]* %arraydecay4), !dbg !6063
  %5 = load %struct.Bone*, %struct.Bone** %bone.addr, align 8, !dbg !6064
  %head5 = getelementptr inbounds %struct.Bone, %struct.Bone* %5, i32 0, i32 7, !dbg !6065
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %head5, i64 0, i64 0, !dbg !6064
  %6 = load %struct.Bone*, %struct.Bone** %bone.addr, align 8, !dbg !6066
  %tail7 = getelementptr inbounds %struct.Bone, %struct.Bone* %6, i32 0, i32 8, !dbg !6067
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %tail7, i64 0, i64 0, !dbg !6066
  %call = call float @len_v3v3(float* %arraydecay6, float* %arraydecay8), !dbg !6068
  %7 = load %struct.Bone*, %struct.Bone** %bone.addr, align 8, !dbg !6069
  %length = getelementptr inbounds %struct.Bone, %struct.Bone* %7, i32 0, i32 18, !dbg !6070
  store float %call, float* %length, align 4, !dbg !6071
  %8 = load %struct.Bone*, %struct.Bone** %bone.addr, align 8, !dbg !6072
  %xwidth = getelementptr inbounds %struct.Bone, %struct.Bone* %8, i32 0, i32 17, !dbg !6074
  %9 = load float, float* %xwidth, align 8, !dbg !6074
  %cmp = fcmp oeq float %9, 0.000000e+00, !dbg !6075
  br i1 %cmp, label %if.then, label %if.end, !dbg !6076

if.then:                                          ; preds = %entry
  %10 = load %struct.Bone*, %struct.Bone** %bone.addr, align 8, !dbg !6077
  %xwidth9 = getelementptr inbounds %struct.Bone, %struct.Bone* %10, i32 0, i32 17, !dbg !6079
  store float 0x3FB99999A0000000, float* %xwidth9, align 8, !dbg !6080
  %11 = load %struct.Bone*, %struct.Bone** %bone.addr, align 8, !dbg !6081
  %zwidth = getelementptr inbounds %struct.Bone, %struct.Bone* %11, i32 0, i32 19, !dbg !6082
  store float 0x3FB99999A0000000, float* %zwidth, align 8, !dbg !6083
  %12 = load %struct.Bone*, %struct.Bone** %bone.addr, align 8, !dbg !6084
  %segments = getelementptr inbounds %struct.Bone, %struct.Bone* %12, i32 0, i32 26, !dbg !6085
  store i16 1, i16* %segments, align 4, !dbg !6086
  br label %if.end, !dbg !6087

if.end:                                           ; preds = %if.then, %entry
  %13 = load %struct.Bone*, %struct.Bone** %prevbone.addr, align 8, !dbg !6088
  %tobool = icmp ne %struct.Bone* %13, null, !dbg !6088
  br i1 %tobool, label %if.then10, label %if.else, !dbg !6090

if.then10:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %offs_bone, metadata !6091, metadata !DIExpression()), !dbg !6093
  %14 = load %struct.Bone*, %struct.Bone** %bone.addr, align 8, !dbg !6094
  %arraydecay11 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %offs_bone, i64 0, i64 0, !dbg !6095
  call void @get_offset_bone_mat(%struct.Bone* %14, [4 x float]* %arraydecay11), !dbg !6096
  %15 = load %struct.Bone*, %struct.Bone** %bone.addr, align 8, !dbg !6097
  %arm_mat = getelementptr inbounds %struct.Bone, %struct.Bone* %15, i32 0, i32 13, !dbg !6098
  %arraydecay12 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %arm_mat, i64 0, i64 0, !dbg !6097
  %16 = load %struct.Bone*, %struct.Bone** %prevbone.addr, align 8, !dbg !6099
  %arm_mat13 = getelementptr inbounds %struct.Bone, %struct.Bone* %16, i32 0, i32 13, !dbg !6100
  %arraydecay14 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %arm_mat13, i64 0, i64 0, !dbg !6099
  %arraydecay15 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %offs_bone, i64 0, i64 0, !dbg !6101
  call void @mul_m4_m4m4([4 x float]* %arraydecay12, [4 x float]* %arraydecay14, [4 x float]* %arraydecay15), !dbg !6102
  br label %if.end24, !dbg !6103

if.else:                                          ; preds = %if.end
  %17 = load %struct.Bone*, %struct.Bone** %bone.addr, align 8, !dbg !6104
  %arm_mat16 = getelementptr inbounds %struct.Bone, %struct.Bone* %17, i32 0, i32 13, !dbg !6106
  %arraydecay17 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %arm_mat16, i64 0, i64 0, !dbg !6104
  %18 = load %struct.Bone*, %struct.Bone** %bone.addr, align 8, !dbg !6107
  %bone_mat18 = getelementptr inbounds %struct.Bone, %struct.Bone* %18, i32 0, i32 9, !dbg !6108
  %arraydecay19 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %bone_mat18, i64 0, i64 0, !dbg !6107
  call void @copy_m4_m3([4 x float]* %arraydecay17, [3 x float]* %arraydecay19), !dbg !6109
  %19 = load %struct.Bone*, %struct.Bone** %bone.addr, align 8, !dbg !6110
  %arm_mat20 = getelementptr inbounds %struct.Bone, %struct.Bone* %19, i32 0, i32 13, !dbg !6111
  %arrayidx = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %arm_mat20, i64 0, i64 3, !dbg !6110
  %arraydecay21 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !6110
  %20 = load %struct.Bone*, %struct.Bone** %bone.addr, align 8, !dbg !6112
  %head22 = getelementptr inbounds %struct.Bone, %struct.Bone* %20, i32 0, i32 7, !dbg !6113
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %head22, i64 0, i64 0, !dbg !6112
  call void @copy_v3_v3(float* %arraydecay21, float* %arraydecay23), !dbg !6114
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then10
  %21 = load %struct.Bone*, %struct.Bone** %bone.addr, align 8, !dbg !6115
  store %struct.Bone* %21, %struct.Bone** %prevbone.addr, align 8, !dbg !6116
  %22 = load %struct.Bone*, %struct.Bone** %bone.addr, align 8, !dbg !6117
  %childbase = getelementptr inbounds %struct.Bone, %struct.Bone* %22, i32 0, i32 4, !dbg !6119
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %childbase, i32 0, i32 0, !dbg !6120
  %23 = load i8*, i8** %first, align 8, !dbg !6120
  %24 = bitcast i8* %23 to %struct.Bone*, !dbg !6117
  store %struct.Bone* %24, %struct.Bone** %bone.addr, align 8, !dbg !6121
  br label %for.cond, !dbg !6122

for.cond:                                         ; preds = %for.inc, %if.end24
  %25 = load %struct.Bone*, %struct.Bone** %bone.addr, align 8, !dbg !6123
  %tobool25 = icmp ne %struct.Bone* %25, null, !dbg !6125
  br i1 %tobool25, label %for.body, label %for.end, !dbg !6125

for.body:                                         ; preds = %for.cond
  %26 = load %struct.Bone*, %struct.Bone** %bone.addr, align 8, !dbg !6126
  %27 = load %struct.Bone*, %struct.Bone** %prevbone.addr, align 8, !dbg !6128
  call void @BKE_armature_where_is_bone(%struct.Bone* %26, %struct.Bone* %27), !dbg !6129
  br label %for.inc, !dbg !6130

for.inc:                                          ; preds = %for.body
  %28 = load %struct.Bone*, %struct.Bone** %bone.addr, align 8, !dbg !6131
  %next = getelementptr inbounds %struct.Bone, %struct.Bone* %28, i32 0, i32 0, !dbg !6132
  %29 = load %struct.Bone*, %struct.Bone** %next, align 8, !dbg !6132
  store %struct.Bone* %29, %struct.Bone** %bone.addr, align 8, !dbg !6133
  br label %for.cond, !dbg !6134, !llvm.loop !6135

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6137
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_v3v3(float* %a, float* %b) #0 !dbg !6138 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  %d = alloca [3 x float], align 4
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !6139, metadata !DIExpression()), !dbg !6140
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !6141, metadata !DIExpression()), !dbg !6142
  call void @llvm.dbg.declare(metadata [3 x float]* %d, metadata !6143, metadata !DIExpression()), !dbg !6144
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !6145
  %0 = load float*, float** %b.addr, align 8, !dbg !6146
  %1 = load float*, float** %a.addr, align 8, !dbg !6147
  call void @sub_v3_v3v3(float* %arraydecay, float* %0, float* %1), !dbg !6148
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %d, i64 0, i64 0, !dbg !6149
  %call = call float @len_v3(float* %arraydecay1), !dbg !6150
  ret float %call, !dbg !6151
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_armature_where_is(%struct.bArmature* %arm) #0 !dbg !6152 {
entry:
  %arm.addr = alloca %struct.bArmature*, align 8
  %bone = alloca %struct.Bone*, align 8
  store %struct.bArmature* %arm, %struct.bArmature** %arm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bArmature** %arm.addr, metadata !6153, metadata !DIExpression()), !dbg !6154
  call void @llvm.dbg.declare(metadata %struct.Bone** %bone, metadata !6155, metadata !DIExpression()), !dbg !6156
  %0 = load %struct.bArmature*, %struct.bArmature** %arm.addr, align 8, !dbg !6157
  %bonebase = getelementptr inbounds %struct.bArmature, %struct.bArmature* %0, i32 0, i32 2, !dbg !6159
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %bonebase, i32 0, i32 0, !dbg !6160
  %1 = load i8*, i8** %first, align 8, !dbg !6160
  %2 = bitcast i8* %1 to %struct.Bone*, !dbg !6157
  store %struct.Bone* %2, %struct.Bone** %bone, align 8, !dbg !6161
  br label %for.cond, !dbg !6162

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !6163
  %tobool = icmp ne %struct.Bone* %3, null, !dbg !6165
  br i1 %tobool, label %for.body, label %for.end, !dbg !6165

for.body:                                         ; preds = %for.cond
  %4 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !6166
  call void @BKE_armature_where_is_bone(%struct.Bone* %4, %struct.Bone* null), !dbg !6168
  br label %for.inc, !dbg !6169

for.inc:                                          ; preds = %for.body
  %5 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !6170
  %next = getelementptr inbounds %struct.Bone, %struct.Bone* %5, i32 0, i32 0, !dbg !6171
  %6 = load %struct.Bone*, %struct.Bone** %next, align 8, !dbg !6171
  store %struct.Bone* %6, %struct.Bone** %bone, align 8, !dbg !6172
  br label %for.cond, !dbg !6173, !llvm.loop !6174

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6176
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_pose_rebuild(%struct.Object* %ob, %struct.bArmature* %arm) #0 !dbg !6177 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %arm.addr = alloca %struct.bArmature*, align 8
  %bone = alloca %struct.Bone*, align 8
  %pose = alloca %struct.bPose*, align 8
  %pchan = alloca %struct.bPoseChannel*, align 8
  %next = alloca %struct.bPoseChannel*, align 8
  %counter = alloca i32, align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6180, metadata !DIExpression()), !dbg !6181
  store %struct.bArmature* %arm, %struct.bArmature** %arm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bArmature** %arm.addr, metadata !6182, metadata !DIExpression()), !dbg !6183
  call void @llvm.dbg.declare(metadata %struct.Bone** %bone, metadata !6184, metadata !DIExpression()), !dbg !6185
  call void @llvm.dbg.declare(metadata %struct.bPose** %pose, metadata !6186, metadata !DIExpression()), !dbg !6189
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan, metadata !6190, metadata !DIExpression()), !dbg !6191
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %next, metadata !6192, metadata !DIExpression()), !dbg !6193
  call void @llvm.dbg.declare(metadata i32* %counter, metadata !6194, metadata !DIExpression()), !dbg !6195
  store i32 0, i32* %counter, align 4, !dbg !6195
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6196
  %pose1 = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 18, !dbg !6198
  %1 = load %struct.bPose*, %struct.bPose** %pose1, align 8, !dbg !6198
  %cmp = icmp eq %struct.bPose* %1, null, !dbg !6199
  br i1 %cmp, label %if.then, label %if.end, !dbg !6200

if.then:                                          ; preds = %entry
  %2 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6201
  %call = call i8* %2(i64 216, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.11, i64 0, i64 0)), !dbg !6201
  %3 = bitcast i8* %call to %struct.bPose*, !dbg !6201
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6203
  %pose2 = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 18, !dbg !6204
  store %struct.bPose* %3, %struct.bPose** %pose2, align 8, !dbg !6205
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6206
  %pose3 = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 18, !dbg !6207
  %6 = load %struct.bPose*, %struct.bPose** %pose3, align 8, !dbg !6207
  %avs = getelementptr inbounds %struct.bPose, %struct.bPose* %6, i32 0, i32 14, !dbg !6208
  call void @animviz_settings_init(%struct.bAnimVizSettings* %avs), !dbg !6209
  br label %if.end, !dbg !6210

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6211
  %pose4 = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 18, !dbg !6212
  %8 = load %struct.bPose*, %struct.bPose** %pose4, align 8, !dbg !6212
  store %struct.bPose* %8, %struct.bPose** %pose, align 8, !dbg !6213
  %9 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !6214
  %chanbase = getelementptr inbounds %struct.bPose, %struct.bPose* %9, i32 0, i32 0, !dbg !6216
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %chanbase, i32 0, i32 0, !dbg !6217
  %10 = load i8*, i8** %first, align 8, !dbg !6217
  %11 = bitcast i8* %10 to %struct.bPoseChannel*, !dbg !6214
  store %struct.bPoseChannel* %11, %struct.bPoseChannel** %pchan, align 8, !dbg !6218
  br label %for.cond, !dbg !6219

for.cond:                                         ; preds = %for.inc, %if.end
  %12 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6220
  %tobool = icmp ne %struct.bPoseChannel* %12, null, !dbg !6222
  br i1 %tobool, label %for.body, label %for.end, !dbg !6222

for.body:                                         ; preds = %for.cond
  %13 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6223
  %bone5 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %13, i32 0, i32 12, !dbg !6225
  store %struct.Bone* null, %struct.Bone** %bone5, align 8, !dbg !6226
  %14 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6227
  %child = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %14, i32 0, i32 14, !dbg !6228
  store %struct.bPoseChannel* null, %struct.bPoseChannel** %child, align 8, !dbg !6229
  br label %for.inc, !dbg !6230

for.inc:                                          ; preds = %for.body
  %15 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6231
  %next6 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %15, i32 0, i32 0, !dbg !6232
  %16 = load %struct.bPoseChannel*, %struct.bPoseChannel** %next6, align 8, !dbg !6232
  store %struct.bPoseChannel* %16, %struct.bPoseChannel** %pchan, align 8, !dbg !6233
  br label %for.cond, !dbg !6234, !llvm.loop !6235

for.end:                                          ; preds = %for.cond
  %17 = load %struct.bArmature*, %struct.bArmature** %arm.addr, align 8, !dbg !6237
  %bonebase = getelementptr inbounds %struct.bArmature, %struct.bArmature* %17, i32 0, i32 2, !dbg !6239
  %first7 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %bonebase, i32 0, i32 0, !dbg !6240
  %18 = load i8*, i8** %first7, align 8, !dbg !6240
  %19 = bitcast i8* %18 to %struct.Bone*, !dbg !6237
  store %struct.Bone* %19, %struct.Bone** %bone, align 8, !dbg !6241
  br label %for.cond8, !dbg !6242

for.cond8:                                        ; preds = %for.inc12, %for.end
  %20 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !6243
  %tobool9 = icmp ne %struct.Bone* %20, null, !dbg !6245
  br i1 %tobool9, label %for.body10, label %for.end14, !dbg !6245

for.body10:                                       ; preds = %for.cond8
  %21 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !6246
  %22 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !6248
  %23 = load i32, i32* %counter, align 4, !dbg !6249
  %call11 = call i32 @rebuild_pose_bone(%struct.bPose* %21, %struct.Bone* %22, %struct.bPoseChannel* null, i32 %23), !dbg !6250
  store i32 %call11, i32* %counter, align 4, !dbg !6251
  br label %for.inc12, !dbg !6252

for.inc12:                                        ; preds = %for.body10
  %24 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !6253
  %next13 = getelementptr inbounds %struct.Bone, %struct.Bone* %24, i32 0, i32 0, !dbg !6254
  %25 = load %struct.Bone*, %struct.Bone** %next13, align 8, !dbg !6254
  store %struct.Bone* %25, %struct.Bone** %bone, align 8, !dbg !6255
  br label %for.cond8, !dbg !6256, !llvm.loop !6257

for.end14:                                        ; preds = %for.cond8
  %26 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !6259
  %chanbase15 = getelementptr inbounds %struct.bPose, %struct.bPose* %26, i32 0, i32 0, !dbg !6261
  %first16 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %chanbase15, i32 0, i32 0, !dbg !6262
  %27 = load i8*, i8** %first16, align 8, !dbg !6262
  %28 = bitcast i8* %27 to %struct.bPoseChannel*, !dbg !6259
  store %struct.bPoseChannel* %28, %struct.bPoseChannel** %pchan, align 8, !dbg !6263
  br label %for.cond17, !dbg !6264

for.cond17:                                       ; preds = %for.inc26, %for.end14
  %29 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6265
  %tobool18 = icmp ne %struct.bPoseChannel* %29, null, !dbg !6267
  br i1 %tobool18, label %for.body19, label %for.end27, !dbg !6267

for.body19:                                       ; preds = %for.cond17
  %30 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6268
  %next20 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %30, i32 0, i32 0, !dbg !6270
  %31 = load %struct.bPoseChannel*, %struct.bPoseChannel** %next20, align 8, !dbg !6270
  store %struct.bPoseChannel* %31, %struct.bPoseChannel** %next, align 8, !dbg !6271
  %32 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6272
  %bone21 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %32, i32 0, i32 12, !dbg !6274
  %33 = load %struct.Bone*, %struct.Bone** %bone21, align 8, !dbg !6274
  %cmp22 = icmp eq %struct.Bone* %33, null, !dbg !6275
  br i1 %cmp22, label %if.then23, label %if.end25, !dbg !6276

if.then23:                                        ; preds = %for.body19
  %34 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6277
  call void @BKE_pose_channel_free(%struct.bPoseChannel* %34), !dbg !6279
  %35 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !6280
  call void @BKE_pose_channels_hash_free(%struct.bPose* %35), !dbg !6281
  %36 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !6282
  %chanbase24 = getelementptr inbounds %struct.bPose, %struct.bPose* %36, i32 0, i32 0, !dbg !6283
  %37 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6284
  %38 = bitcast %struct.bPoseChannel* %37 to i8*, !dbg !6284
  call void @BLI_freelinkN(%struct.ListBase* %chanbase24, i8* %38), !dbg !6285
  br label %if.end25, !dbg !6286

if.end25:                                         ; preds = %if.then23, %for.body19
  br label %for.inc26, !dbg !6287

for.inc26:                                        ; preds = %if.end25
  %39 = load %struct.bPoseChannel*, %struct.bPoseChannel** %next, align 8, !dbg !6288
  store %struct.bPoseChannel* %39, %struct.bPoseChannel** %pchan, align 8, !dbg !6289
  br label %for.cond17, !dbg !6290, !llvm.loop !6291

for.end27:                                        ; preds = %for.cond17
  %40 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6293
  %proxy = getelementptr inbounds %struct.Object, %struct.Object* %40, i32 0, i32 11, !dbg !6295
  %41 = load %struct.Object*, %struct.Object** %proxy, align 8, !dbg !6295
  %tobool28 = icmp ne %struct.Object* %41, null, !dbg !6293
  br i1 %tobool28, label %if.then29, label %if.end32, !dbg !6296

if.then29:                                        ; preds = %for.end27
  %42 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6297
  %43 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6299
  %proxy30 = getelementptr inbounds %struct.Object, %struct.Object* %43, i32 0, i32 11, !dbg !6300
  %44 = load %struct.Object*, %struct.Object** %proxy30, align 8, !dbg !6300
  call void @BKE_object_copy_proxy_drivers(%struct.Object* %42, %struct.Object* %44), !dbg !6301
  %45 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6302
  %46 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6303
  %proxy31 = getelementptr inbounds %struct.Object, %struct.Object* %46, i32 0, i32 11, !dbg !6304
  %47 = load %struct.Object*, %struct.Object** %proxy31, align 8, !dbg !6304
  %48 = load %struct.bArmature*, %struct.bArmature** %arm.addr, align 8, !dbg !6305
  %layer_protected = getelementptr inbounds %struct.bArmature, %struct.bArmature* %48, i32 0, i32 16, !dbg !6306
  %49 = load i32, i32* %layer_protected, align 4, !dbg !6306
  call void @pose_proxy_synchronize(%struct.Object* %45, %struct.Object* %47, i32 %49), !dbg !6307
  br label %if.end32, !dbg !6308

if.end32:                                         ; preds = %if.then29, %for.end27
  %50 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6309
  %pose33 = getelementptr inbounds %struct.Object, %struct.Object* %50, i32 0, i32 18, !dbg !6310
  %51 = load %struct.bPose*, %struct.bPose** %pose33, align 8, !dbg !6310
  call void @BKE_pose_update_constraint_flags(%struct.bPose* %51), !dbg !6311
  %52 = load i32, i32* %counter, align 4, !dbg !6312
  %cmp34 = icmp sgt i32 %52, 1, !dbg !6314
  br i1 %cmp34, label %if.then35, label %if.end36, !dbg !6315

if.then35:                                        ; preds = %if.end32
  %53 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6316
  call void @DAG_pose_sort(%struct.Object* %53), !dbg !6317
  br label %if.end36, !dbg !6317

if.end36:                                         ; preds = %if.then35, %if.end32
  %54 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6318
  %pose37 = getelementptr inbounds %struct.Object, %struct.Object* %54, i32 0, i32 18, !dbg !6319
  %55 = load %struct.bPose*, %struct.bPose** %pose37, align 8, !dbg !6319
  %flag = getelementptr inbounds %struct.bPose, %struct.bPose* %55, i32 0, i32 2, !dbg !6320
  %56 = load i16, i16* %flag, align 8, !dbg !6321
  %conv = sext i16 %56 to i32, !dbg !6321
  %and = and i32 %conv, -2, !dbg !6321
  %conv38 = trunc i32 %and to i16, !dbg !6321
  store i16 %conv38, i16* %flag, align 8, !dbg !6321
  %57 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6322
  %pose39 = getelementptr inbounds %struct.Object, %struct.Object* %57, i32 0, i32 18, !dbg !6323
  %58 = load %struct.bPose*, %struct.bPose** %pose39, align 8, !dbg !6323
  %flag40 = getelementptr inbounds %struct.bPose, %struct.bPose* %58, i32 0, i32 2, !dbg !6324
  %59 = load i16, i16* %flag40, align 8, !dbg !6325
  %conv41 = sext i16 %59 to i32, !dbg !6325
  %or = or i32 %conv41, 32, !dbg !6325
  %conv42 = trunc i32 %or to i16, !dbg !6325
  store i16 %conv42, i16* %flag40, align 8, !dbg !6325
  %60 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6326
  %pose43 = getelementptr inbounds %struct.Object, %struct.Object* %60, i32 0, i32 18, !dbg !6327
  %61 = load %struct.bPose*, %struct.bPose** %pose43, align 8, !dbg !6327
  call void @BKE_pose_channels_hash_make(%struct.bPose* %61), !dbg !6328
  ret void, !dbg !6329
}

declare dso_local void @animviz_settings_init(%struct.bAnimVizSettings*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @rebuild_pose_bone(%struct.bPose* %pose, %struct.Bone* %bone, %struct.bPoseChannel* %parchan, i32 %counter) #0 !dbg !6330 {
entry:
  %pose.addr = alloca %struct.bPose*, align 8
  %bone.addr = alloca %struct.Bone*, align 8
  %parchan.addr = alloca %struct.bPoseChannel*, align 8
  %counter.addr = alloca i32, align 4
  %pchan = alloca %struct.bPoseChannel*, align 8
  store %struct.bPose* %pose, %struct.bPose** %pose.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bPose** %pose.addr, metadata !6333, metadata !DIExpression()), !dbg !6334
  store %struct.Bone* %bone, %struct.Bone** %bone.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Bone** %bone.addr, metadata !6335, metadata !DIExpression()), !dbg !6336
  store %struct.bPoseChannel* %parchan, %struct.bPoseChannel** %parchan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %parchan.addr, metadata !6337, metadata !DIExpression()), !dbg !6338
  store i32 %counter, i32* %counter.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %counter.addr, metadata !6339, metadata !DIExpression()), !dbg !6340
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan, metadata !6341, metadata !DIExpression()), !dbg !6342
  %0 = load %struct.bPose*, %struct.bPose** %pose.addr, align 8, !dbg !6343
  %1 = load %struct.Bone*, %struct.Bone** %bone.addr, align 8, !dbg !6344
  %name = getelementptr inbounds %struct.Bone, %struct.Bone* %1, i32 0, i32 5, !dbg !6345
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !6344
  %call = call %struct.bPoseChannel* @BKE_pose_channel_verify(%struct.bPose* %0, i8* %arraydecay), !dbg !6346
  store %struct.bPoseChannel* %call, %struct.bPoseChannel** %pchan, align 8, !dbg !6342
  %2 = load %struct.Bone*, %struct.Bone** %bone.addr, align 8, !dbg !6347
  %3 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6348
  %bone1 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %3, i32 0, i32 12, !dbg !6349
  store %struct.Bone* %2, %struct.Bone** %bone1, align 8, !dbg !6350
  %4 = load %struct.bPoseChannel*, %struct.bPoseChannel** %parchan.addr, align 8, !dbg !6351
  %5 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6352
  %parent = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %5, i32 0, i32 13, !dbg !6353
  store %struct.bPoseChannel* %4, %struct.bPoseChannel** %parent, align 8, !dbg !6354
  %6 = load i32, i32* %counter.addr, align 4, !dbg !6355
  %inc = add nsw i32 %6, 1, !dbg !6355
  store i32 %inc, i32* %counter.addr, align 4, !dbg !6355
  %7 = load %struct.Bone*, %struct.Bone** %bone.addr, align 8, !dbg !6356
  %childbase = getelementptr inbounds %struct.Bone, %struct.Bone* %7, i32 0, i32 4, !dbg !6358
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %childbase, i32 0, i32 0, !dbg !6359
  %8 = load i8*, i8** %first, align 8, !dbg !6359
  %9 = bitcast i8* %8 to %struct.Bone*, !dbg !6356
  store %struct.Bone* %9, %struct.Bone** %bone.addr, align 8, !dbg !6360
  br label %for.cond, !dbg !6361

for.cond:                                         ; preds = %for.inc, %entry
  %10 = load %struct.Bone*, %struct.Bone** %bone.addr, align 8, !dbg !6362
  %tobool = icmp ne %struct.Bone* %10, null, !dbg !6364
  br i1 %tobool, label %for.body, label %for.end, !dbg !6364

for.body:                                         ; preds = %for.cond
  %11 = load %struct.bPose*, %struct.bPose** %pose.addr, align 8, !dbg !6365
  %12 = load %struct.Bone*, %struct.Bone** %bone.addr, align 8, !dbg !6367
  %13 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6368
  %14 = load i32, i32* %counter.addr, align 4, !dbg !6369
  %call2 = call i32 @rebuild_pose_bone(%struct.bPose* %11, %struct.Bone* %12, %struct.bPoseChannel* %13, i32 %14), !dbg !6370
  store i32 %call2, i32* %counter.addr, align 4, !dbg !6371
  %15 = load %struct.Bone*, %struct.Bone** %bone.addr, align 8, !dbg !6372
  %flag = getelementptr inbounds %struct.Bone, %struct.Bone* %15, i32 0, i32 10, !dbg !6374
  %16 = load i32, i32* %flag, align 8, !dbg !6374
  %and = and i32 %16, 16, !dbg !6375
  %tobool3 = icmp ne i32 %and, 0, !dbg !6375
  br i1 %tobool3, label %if.then, label %if.end, !dbg !6376

if.then:                                          ; preds = %for.body
  %17 = load %struct.bPose*, %struct.bPose** %pose.addr, align 8, !dbg !6377
  %18 = load %struct.Bone*, %struct.Bone** %bone.addr, align 8, !dbg !6378
  %name4 = getelementptr inbounds %struct.Bone, %struct.Bone* %18, i32 0, i32 5, !dbg !6379
  %arraydecay5 = getelementptr inbounds [64 x i8], [64 x i8]* %name4, i64 0, i64 0, !dbg !6378
  %call6 = call %struct.bPoseChannel* @BKE_pose_channel_find_name(%struct.bPose* %17, i8* %arraydecay5), !dbg !6380
  %19 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6381
  %child = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %19, i32 0, i32 14, !dbg !6382
  store %struct.bPoseChannel* %call6, %struct.bPoseChannel** %child, align 8, !dbg !6383
  br label %if.end, !dbg !6381

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !6384

for.inc:                                          ; preds = %if.end
  %20 = load %struct.Bone*, %struct.Bone** %bone.addr, align 8, !dbg !6385
  %next = getelementptr inbounds %struct.Bone, %struct.Bone* %20, i32 0, i32 0, !dbg !6386
  %21 = load %struct.Bone*, %struct.Bone** %next, align 8, !dbg !6386
  store %struct.Bone* %21, %struct.Bone** %bone.addr, align 8, !dbg !6387
  br label %for.cond, !dbg !6388, !llvm.loop !6389

for.end:                                          ; preds = %for.cond
  %22 = load i32, i32* %counter.addr, align 4, !dbg !6391
  ret i32 %22, !dbg !6392
}

declare dso_local void @BKE_pose_channel_free(%struct.bPoseChannel*) #2

declare dso_local void @BKE_pose_channels_hash_free(%struct.bPose*) #2

declare dso_local void @BLI_freelinkN(%struct.ListBase*, i8*) #2

declare dso_local void @BKE_object_copy_proxy_drivers(%struct.Object*, %struct.Object*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @pose_proxy_synchronize(%struct.Object* %ob, %struct.Object* %from, i32 %layer_protected) #0 !dbg !6393 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %from.addr = alloca %struct.Object*, align 8
  %layer_protected.addr = alloca i32, align 4
  %pose = alloca %struct.bPose*, align 8
  %frompose = alloca %struct.bPose*, align 8
  %pchan = alloca %struct.bPoseChannel*, align 8
  %pchanp = alloca %struct.bPoseChannel*, align 8
  %con = alloca %struct.bConstraint*, align 8
  %error = alloca i32, align 4
  %proxylocal_constraints = alloca %struct.ListBase, align 8
  %pchanw = alloca %struct.bPoseChannel, align 8
  %cti = alloca %struct.bConstraintTypeInfo*, align 8
  %targets = alloca %struct.ListBase, align 8
  %ct = alloca %struct.bConstraintTarget*, align 8
  %prop_orig = alloca %struct.IDProperty*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6396, metadata !DIExpression()), !dbg !6397
  store %struct.Object* %from, %struct.Object** %from.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %from.addr, metadata !6398, metadata !DIExpression()), !dbg !6399
  store i32 %layer_protected, i32* %layer_protected.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %layer_protected.addr, metadata !6400, metadata !DIExpression()), !dbg !6401
  call void @llvm.dbg.declare(metadata %struct.bPose** %pose, metadata !6402, metadata !DIExpression()), !dbg !6403
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6404
  %pose1 = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 18, !dbg !6405
  %1 = load %struct.bPose*, %struct.bPose** %pose1, align 8, !dbg !6405
  store %struct.bPose* %1, %struct.bPose** %pose, align 8, !dbg !6403
  call void @llvm.dbg.declare(metadata %struct.bPose** %frompose, metadata !6406, metadata !DIExpression()), !dbg !6407
  %2 = load %struct.Object*, %struct.Object** %from.addr, align 8, !dbg !6408
  %pose2 = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 18, !dbg !6409
  %3 = load %struct.bPose*, %struct.bPose** %pose2, align 8, !dbg !6409
  store %struct.bPose* %3, %struct.bPose** %frompose, align 8, !dbg !6407
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan, metadata !6410, metadata !DIExpression()), !dbg !6411
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchanp, metadata !6412, metadata !DIExpression()), !dbg !6413
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con, metadata !6414, metadata !DIExpression()), !dbg !6434
  call void @llvm.dbg.declare(metadata i32* %error, metadata !6435, metadata !DIExpression()), !dbg !6436
  store i32 0, i32* %error, align 4, !dbg !6436
  %4 = load %struct.bPose*, %struct.bPose** %frompose, align 8, !dbg !6437
  %cmp = icmp eq %struct.bPose* %4, null, !dbg !6439
  br i1 %cmp, label %if.then, label %if.end, !dbg !6440

if.then:                                          ; preds = %entry
  br label %for.end130, !dbg !6441

if.end:                                           ; preds = %entry
  %5 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !6442
  %chanbase = getelementptr inbounds %struct.bPose, %struct.bPose* %5, i32 0, i32 0, !dbg !6444
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %chanbase, i32 0, i32 0, !dbg !6445
  %6 = load i8*, i8** %first, align 8, !dbg !6445
  %7 = bitcast i8* %6 to %struct.bPoseChannel*, !dbg !6442
  store %struct.bPoseChannel* %7, %struct.bPoseChannel** %pchan, align 8, !dbg !6446
  br label %for.cond, !dbg !6447

for.cond:                                         ; preds = %for.inc, %if.end
  %8 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6448
  %tobool = icmp ne %struct.bPoseChannel* %8, null, !dbg !6450
  br i1 %tobool, label %for.body, label %for.end, !dbg !6450

for.body:                                         ; preds = %for.cond
  %9 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6451
  %bone = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %9, i32 0, i32 12, !dbg !6454
  %10 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !6454
  %layer = getelementptr inbounds %struct.Bone, %struct.Bone* %10, i32 0, i32 25, !dbg !6455
  %11 = load i32, i32* %layer, align 8, !dbg !6455
  %12 = load i32, i32* %layer_protected.addr, align 4, !dbg !6456
  %and = and i32 %11, %12, !dbg !6457
  %tobool3 = icmp ne i32 %and, 0, !dbg !6457
  br i1 %tobool3, label %if.then4, label %if.end13, !dbg !6458

if.then4:                                         ; preds = %for.body
  %13 = load %struct.bPose*, %struct.bPose** %frompose, align 8, !dbg !6459
  %14 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6462
  %name = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %14, i32 0, i32 4, !dbg !6463
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i64 0, i64 0, !dbg !6462
  %call = call %struct.bPoseChannel* @BKE_pose_channel_find_name(%struct.bPose* %13, i8* %arraydecay), !dbg !6464
  %cmp5 = icmp eq %struct.bPoseChannel* %call, null, !dbg !6465
  br i1 %cmp5, label %if.then6, label %if.end12, !dbg !6466

if.then6:                                         ; preds = %if.then4
  %15 = load %struct.Object*, %struct.Object** %from.addr, align 8, !dbg !6467
  %id = getelementptr inbounds %struct.Object, %struct.Object* %15, i32 0, i32 0, !dbg !6469
  %name7 = getelementptr inbounds %struct.ID, %struct.ID* %id, i32 0, i32 4, !dbg !6470
  %arraydecay8 = getelementptr inbounds [66 x i8], [66 x i8]* %name7, i64 0, i64 0, !dbg !6467
  %16 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6471
  %name9 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %16, i32 0, i32 4, !dbg !6472
  %arraydecay10 = getelementptr inbounds [64 x i8], [64 x i8]* %name9, i64 0, i64 0, !dbg !6471
  %call11 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.14, i64 0, i64 0), i8* %arraydecay8, i8* %arraydecay10), !dbg !6473
  store i32 1, i32* %error, align 4, !dbg !6474
  br label %if.end12, !dbg !6475

if.end12:                                         ; preds = %if.then6, %if.then4
  br label %if.end13, !dbg !6476

if.end13:                                         ; preds = %if.end12, %for.body
  br label %for.inc, !dbg !6477

for.inc:                                          ; preds = %if.end13
  %17 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6478
  %next = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %17, i32 0, i32 0, !dbg !6479
  %18 = load %struct.bPoseChannel*, %struct.bPoseChannel** %next, align 8, !dbg !6479
  store %struct.bPoseChannel* %18, %struct.bPoseChannel** %pchan, align 8, !dbg !6480
  br label %for.cond, !dbg !6481, !llvm.loop !6482

for.end:                                          ; preds = %for.cond
  %19 = load i32, i32* %error, align 4, !dbg !6484
  %tobool14 = icmp ne i32 %19, 0, !dbg !6484
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !6486

if.then15:                                        ; preds = %for.end
  br label %for.end130, !dbg !6487

if.end16:                                         ; preds = %for.end
  %20 = load %struct.bPose*, %struct.bPose** %frompose, align 8, !dbg !6488
  call void @BKE_pose_rest(%struct.bPose* %20), !dbg !6489
  %21 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !6490
  %agroups = getelementptr inbounds %struct.bPose, %struct.bPose* %21, i32 0, i32 9, !dbg !6491
  call void @BLI_freelistN(%struct.ListBase* %agroups), !dbg !6492
  %22 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !6493
  %agroups17 = getelementptr inbounds %struct.bPose, %struct.bPose* %22, i32 0, i32 9, !dbg !6494
  %23 = load %struct.bPose*, %struct.bPose** %frompose, align 8, !dbg !6495
  %agroups18 = getelementptr inbounds %struct.bPose, %struct.bPose* %23, i32 0, i32 9, !dbg !6496
  call void @BLI_duplicatelist(%struct.ListBase* %agroups17, %struct.ListBase* %agroups18), !dbg !6497
  %24 = load %struct.bPose*, %struct.bPose** %frompose, align 8, !dbg !6498
  %active_group = getelementptr inbounds %struct.bPose, %struct.bPose* %24, i32 0, i32 10, !dbg !6499
  %25 = load i32, i32* %active_group, align 8, !dbg !6499
  %26 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !6500
  %active_group19 = getelementptr inbounds %struct.bPose, %struct.bPose* %26, i32 0, i32 10, !dbg !6501
  store i32 %25, i32* %active_group19, align 8, !dbg !6502
  %27 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !6503
  %chanbase20 = getelementptr inbounds %struct.bPose, %struct.bPose* %27, i32 0, i32 0, !dbg !6505
  %first21 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %chanbase20, i32 0, i32 0, !dbg !6506
  %28 = load i8*, i8** %first21, align 8, !dbg !6506
  %29 = bitcast i8* %28 to %struct.bPoseChannel*, !dbg !6503
  store %struct.bPoseChannel* %29, %struct.bPoseChannel** %pchan, align 8, !dbg !6507
  br label %for.cond22, !dbg !6508

for.cond22:                                       ; preds = %for.inc128, %if.end16
  %30 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6509
  %tobool23 = icmp ne %struct.bPoseChannel* %30, null, !dbg !6511
  br i1 %tobool23, label %for.body24, label %for.end130, !dbg !6511

for.body24:                                       ; preds = %for.cond22
  %31 = load %struct.bPose*, %struct.bPose** %frompose, align 8, !dbg !6512
  %32 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6514
  %name25 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %32, i32 0, i32 4, !dbg !6515
  %arraydecay26 = getelementptr inbounds [64 x i8], [64 x i8]* %name25, i64 0, i64 0, !dbg !6514
  %call27 = call %struct.bPoseChannel* @BKE_pose_channel_find_name(%struct.bPose* %31, i8* %arraydecay26), !dbg !6516
  store %struct.bPoseChannel* %call27, %struct.bPoseChannel** %pchanp, align 8, !dbg !6517
  %33 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchanp, align 8, !dbg !6518
  %cmp28 = icmp eq %struct.bPoseChannel* %33, null, !dbg !6518
  br i1 %cmp28, label %if.then29, label %if.else, !dbg !6520

if.then29:                                        ; preds = %for.body24
  br label %if.end127, !dbg !6521

if.else:                                          ; preds = %for.body24
  %34 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6523
  %bone30 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %34, i32 0, i32 12, !dbg !6525
  %35 = load %struct.Bone*, %struct.Bone** %bone30, align 8, !dbg !6525
  %layer31 = getelementptr inbounds %struct.Bone, %struct.Bone* %35, i32 0, i32 25, !dbg !6526
  %36 = load i32, i32* %layer31, align 8, !dbg !6526
  %37 = load i32, i32* %layer_protected.addr, align 4, !dbg !6527
  %and32 = and i32 %36, %37, !dbg !6528
  %tobool33 = icmp ne i32 %and32, 0, !dbg !6528
  br i1 %tobool33, label %if.then34, label %if.else92, !dbg !6529

if.then34:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.ListBase* %proxylocal_constraints, metadata !6530, metadata !DIExpression()), !dbg !6532
  %38 = bitcast %struct.ListBase* %proxylocal_constraints to i8*, !dbg !6532
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 16, i1 false), !dbg !6532
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel* %pchanw, metadata !6533, metadata !DIExpression()), !dbg !6534
  %39 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchanp, align 8, !dbg !6535
  %40 = bitcast %struct.bPoseChannel* %pchanw to i8*, !dbg !6536
  %41 = bitcast %struct.bPoseChannel* %39 to i8*, !dbg !6536
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 544, i1 false), !dbg !6536
  %42 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6537
  %prev = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %42, i32 0, i32 1, !dbg !6538
  %43 = load %struct.bPoseChannel*, %struct.bPoseChannel** %prev, align 8, !dbg !6538
  %prev35 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %pchanw, i32 0, i32 1, !dbg !6539
  store %struct.bPoseChannel* %43, %struct.bPoseChannel** %prev35, align 8, !dbg !6540
  %44 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6541
  %next36 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %44, i32 0, i32 0, !dbg !6542
  %45 = load %struct.bPoseChannel*, %struct.bPoseChannel** %next36, align 8, !dbg !6542
  %next37 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %pchanw, i32 0, i32 0, !dbg !6543
  store %struct.bPoseChannel* %45, %struct.bPoseChannel** %next37, align 8, !dbg !6544
  %46 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6545
  %parent = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %46, i32 0, i32 13, !dbg !6546
  %47 = load %struct.bPoseChannel*, %struct.bPoseChannel** %parent, align 8, !dbg !6546
  %parent38 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %pchanw, i32 0, i32 13, !dbg !6547
  store %struct.bPoseChannel* %47, %struct.bPoseChannel** %parent38, align 8, !dbg !6548
  %48 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6549
  %child = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %48, i32 0, i32 14, !dbg !6550
  %49 = load %struct.bPoseChannel*, %struct.bPoseChannel** %child, align 8, !dbg !6550
  %child39 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %pchanw, i32 0, i32 14, !dbg !6551
  store %struct.bPoseChannel* %49, %struct.bPoseChannel** %child39, align 8, !dbg !6552
  %50 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6553
  %mpath = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %50, i32 0, i32 17, !dbg !6554
  %51 = load %struct.bMotionPath*, %struct.bMotionPath** %mpath, align 8, !dbg !6554
  %mpath40 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %pchanw, i32 0, i32 17, !dbg !6555
  store %struct.bMotionPath* %51, %struct.bMotionPath** %mpath40, align 8, !dbg !6556
  %52 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6557
  %mpath41 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %52, i32 0, i32 17, !dbg !6558
  store %struct.bMotionPath* null, %struct.bMotionPath** %mpath41, align 8, !dbg !6559
  %prop = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %pchanw, i32 0, i32 2, !dbg !6560
  %53 = load %struct.IDProperty*, %struct.IDProperty** %prop, align 8, !dbg !6560
  %tobool42 = icmp ne %struct.IDProperty* %53, null, !dbg !6562
  br i1 %tobool42, label %if.then43, label %if.end53, !dbg !6563

if.then43:                                        ; preds = %if.then34
  %prop44 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %pchanw, i32 0, i32 2, !dbg !6564
  %54 = load %struct.IDProperty*, %struct.IDProperty** %prop44, align 8, !dbg !6564
  %call45 = call %struct.IDProperty* @IDP_CopyProperty(%struct.IDProperty* %54), !dbg !6566
  %prop46 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %pchanw, i32 0, i32 2, !dbg !6567
  store %struct.IDProperty* %call45, %struct.IDProperty** %prop46, align 8, !dbg !6568
  %55 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6569
  %prop47 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %55, i32 0, i32 2, !dbg !6571
  %56 = load %struct.IDProperty*, %struct.IDProperty** %prop47, align 8, !dbg !6571
  %tobool48 = icmp ne %struct.IDProperty* %56, null, !dbg !6569
  br i1 %tobool48, label %if.then49, label %if.end52, !dbg !6572

if.then49:                                        ; preds = %if.then43
  %prop50 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %pchanw, i32 0, i32 2, !dbg !6573
  %57 = load %struct.IDProperty*, %struct.IDProperty** %prop50, align 8, !dbg !6573
  %58 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6575
  %prop51 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %58, i32 0, i32 2, !dbg !6576
  %59 = load %struct.IDProperty*, %struct.IDProperty** %prop51, align 8, !dbg !6576
  call void @IDP_SyncGroupValues(%struct.IDProperty* %57, %struct.IDProperty* %59), !dbg !6577
  br label %if.end52, !dbg !6578

if.end52:                                         ; preds = %if.then49, %if.then43
  br label %if.end53, !dbg !6579

if.end53:                                         ; preds = %if.end52, %if.then34
  %60 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6580
  %constraints = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %60, i32 0, i32 3, !dbg !6581
  call void @BKE_constraints_proxylocal_extract(%struct.ListBase* %proxylocal_constraints, %struct.ListBase* %constraints), !dbg !6582
  %constraints54 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %pchanw, i32 0, i32 3, !dbg !6583
  %61 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchanp, align 8, !dbg !6584
  %constraints55 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %61, i32 0, i32 3, !dbg !6585
  call void @BKE_constraints_copy(%struct.ListBase* %constraints54, %struct.ListBase* %constraints55, i8 zeroext 0), !dbg !6586
  %constraints56 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %pchanw, i32 0, i32 3, !dbg !6587
  call void @BLI_movelisttolist(%struct.ListBase* %constraints56, %struct.ListBase* %proxylocal_constraints), !dbg !6588
  %constraints57 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %pchanw, i32 0, i32 3, !dbg !6589
  %first58 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %constraints57, i32 0, i32 0, !dbg !6591
  %62 = load i8*, i8** %first58, align 8, !dbg !6591
  %63 = bitcast i8* %62 to %struct.bConstraint*, !dbg !6592
  store %struct.bConstraint* %63, %struct.bConstraint** %con, align 8, !dbg !6593
  br label %for.cond59, !dbg !6594

for.cond59:                                       ; preds = %for.inc84, %if.end53
  %64 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !6595
  %tobool60 = icmp ne %struct.bConstraint* %64, null, !dbg !6597
  br i1 %tobool60, label %for.body61, label %for.end86, !dbg !6597

for.body61:                                       ; preds = %for.cond59
  call void @llvm.dbg.declare(metadata %struct.bConstraintTypeInfo** %cti, metadata !6598, metadata !DIExpression()), !dbg !6659
  %65 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !6660
  %call62 = call %struct.bConstraintTypeInfo* @BKE_constraint_typeinfo_get(%struct.bConstraint* %65), !dbg !6661
  store %struct.bConstraintTypeInfo* %call62, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !6659
  call void @llvm.dbg.declare(metadata %struct.ListBase* %targets, metadata !6662, metadata !DIExpression()), !dbg !6663
  %66 = bitcast %struct.ListBase* %targets to i8*, !dbg !6663
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 16, i1 false), !dbg !6663
  call void @llvm.dbg.declare(metadata %struct.bConstraintTarget** %ct, metadata !6664, metadata !DIExpression()), !dbg !6667
  %67 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !6668
  %tobool63 = icmp ne %struct.bConstraintTypeInfo* %67, null, !dbg !6668
  br i1 %tobool63, label %land.lhs.true, label %if.end83, !dbg !6670

land.lhs.true:                                    ; preds = %for.body61
  %68 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !6671
  %get_constraint_targets = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %68, i32 0, i32 8, !dbg !6672
  %69 = load i32 (%struct.bConstraint*, %struct.ListBase*)*, i32 (%struct.bConstraint*, %struct.ListBase*)** %get_constraint_targets, align 8, !dbg !6672
  %tobool64 = icmp ne i32 (%struct.bConstraint*, %struct.ListBase*)* %69, null, !dbg !6671
  br i1 %tobool64, label %if.then65, label %if.end83, !dbg !6673

if.then65:                                        ; preds = %land.lhs.true
  %70 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !6674
  %get_constraint_targets66 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %70, i32 0, i32 8, !dbg !6676
  %71 = load i32 (%struct.bConstraint*, %struct.ListBase*)*, i32 (%struct.bConstraint*, %struct.ListBase*)** %get_constraint_targets66, align 8, !dbg !6676
  %72 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !6677
  %call67 = call i32 %71(%struct.bConstraint* %72, %struct.ListBase* %targets), !dbg !6674
  %first68 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %targets, i32 0, i32 0, !dbg !6678
  %73 = load i8*, i8** %first68, align 8, !dbg !6678
  %74 = bitcast i8* %73 to %struct.bConstraintTarget*, !dbg !6680
  store %struct.bConstraintTarget* %74, %struct.bConstraintTarget** %ct, align 8, !dbg !6681
  br label %for.cond69, !dbg !6682

for.cond69:                                       ; preds = %for.inc76, %if.then65
  %75 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !6683
  %tobool70 = icmp ne %struct.bConstraintTarget* %75, null, !dbg !6685
  br i1 %tobool70, label %for.body71, label %for.end78, !dbg !6685

for.body71:                                       ; preds = %for.cond69
  %76 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !6686
  %tar = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %76, i32 0, i32 2, !dbg !6689
  %77 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !6689
  %78 = load %struct.Object*, %struct.Object** %from.addr, align 8, !dbg !6690
  %cmp72 = icmp eq %struct.Object* %77, %78, !dbg !6691
  br i1 %cmp72, label %if.then73, label %if.end75, !dbg !6692

if.then73:                                        ; preds = %for.body71
  %79 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6693
  %80 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !6694
  %tar74 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %80, i32 0, i32 2, !dbg !6695
  store %struct.Object* %79, %struct.Object** %tar74, align 8, !dbg !6696
  br label %if.end75, !dbg !6694

if.end75:                                         ; preds = %if.then73, %for.body71
  br label %for.inc76, !dbg !6697

for.inc76:                                        ; preds = %if.end75
  %81 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %ct, align 8, !dbg !6698
  %next77 = getelementptr inbounds %struct.bConstraintTarget, %struct.bConstraintTarget* %81, i32 0, i32 0, !dbg !6699
  %82 = load %struct.bConstraintTarget*, %struct.bConstraintTarget** %next77, align 8, !dbg !6699
  store %struct.bConstraintTarget* %82, %struct.bConstraintTarget** %ct, align 8, !dbg !6700
  br label %for.cond69, !dbg !6701, !llvm.loop !6702

for.end78:                                        ; preds = %for.cond69
  %83 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !6704
  %flush_constraint_targets = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %83, i32 0, i32 9, !dbg !6706
  %84 = load void (%struct.bConstraint*, %struct.ListBase*, i8)*, void (%struct.bConstraint*, %struct.ListBase*, i8)** %flush_constraint_targets, align 8, !dbg !6706
  %tobool79 = icmp ne void (%struct.bConstraint*, %struct.ListBase*, i8)* %84, null, !dbg !6704
  br i1 %tobool79, label %if.then80, label %if.end82, !dbg !6707

if.then80:                                        ; preds = %for.end78
  %85 = load %struct.bConstraintTypeInfo*, %struct.bConstraintTypeInfo** %cti, align 8, !dbg !6708
  %flush_constraint_targets81 = getelementptr inbounds %struct.bConstraintTypeInfo, %struct.bConstraintTypeInfo* %85, i32 0, i32 9, !dbg !6709
  %86 = load void (%struct.bConstraint*, %struct.ListBase*, i8)*, void (%struct.bConstraint*, %struct.ListBase*, i8)** %flush_constraint_targets81, align 8, !dbg !6709
  %87 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !6710
  call void %86(%struct.bConstraint* %87, %struct.ListBase* %targets, i8 zeroext 0), !dbg !6708
  br label %if.end82, !dbg !6708

if.end82:                                         ; preds = %if.then80, %for.end78
  br label %if.end83, !dbg !6711

if.end83:                                         ; preds = %if.end82, %land.lhs.true, %for.body61
  br label %for.inc84, !dbg !6712

for.inc84:                                        ; preds = %if.end83
  %88 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !6713
  %next85 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %88, i32 0, i32 0, !dbg !6714
  %89 = load %struct.bConstraint*, %struct.bConstraint** %next85, align 8, !dbg !6714
  store %struct.bConstraint* %89, %struct.bConstraint** %con, align 8, !dbg !6715
  br label %for.cond59, !dbg !6716, !llvm.loop !6717

for.end86:                                        ; preds = %for.cond59
  %90 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6719
  call void @BKE_pose_channel_free(%struct.bPoseChannel* %90), !dbg !6720
  %91 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6721
  %92 = bitcast %struct.bPoseChannel* %91 to i8*, !dbg !6722
  %93 = bitcast %struct.bPoseChannel* %pchanw to i8*, !dbg !6722
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 8 %93, i64 544, i1 false), !dbg !6722
  %94 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6723
  %custom = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %94, i32 0, i32 18, !dbg !6725
  %95 = load %struct.Object*, %struct.Object** %custom, align 8, !dbg !6725
  %tobool87 = icmp ne %struct.Object* %95, null, !dbg !6723
  br i1 %tobool87, label %if.then88, label %if.end91, !dbg !6726

if.then88:                                        ; preds = %for.end86
  %96 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6727
  %custom89 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %96, i32 0, i32 18, !dbg !6729
  %97 = load %struct.Object*, %struct.Object** %custom89, align 8, !dbg !6729
  %id90 = getelementptr inbounds %struct.Object, %struct.Object* %97, i32 0, i32 0, !dbg !6730
  call void @id_us_plus(%struct.ID* %id90), !dbg !6731
  br label %if.end91, !dbg !6732

if.end91:                                         ; preds = %if.then88, %for.end86
  br label %if.end126, !dbg !6733

if.else92:                                        ; preds = %if.else
  %98 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchanp, align 8, !dbg !6734
  %custom93 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %98, i32 0, i32 18, !dbg !6736
  %99 = load %struct.Object*, %struct.Object** %custom93, align 8, !dbg !6736
  %100 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6737
  %custom94 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %100, i32 0, i32 18, !dbg !6738
  store %struct.Object* %99, %struct.Object** %custom94, align 8, !dbg !6739
  %101 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6740
  %custom95 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %101, i32 0, i32 18, !dbg !6742
  %102 = load %struct.Object*, %struct.Object** %custom95, align 8, !dbg !6742
  %tobool96 = icmp ne %struct.Object* %102, null, !dbg !6740
  br i1 %tobool96, label %if.then97, label %if.end100, !dbg !6743

if.then97:                                        ; preds = %if.else92
  %103 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6744
  %custom98 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %103, i32 0, i32 18, !dbg !6746
  %104 = load %struct.Object*, %struct.Object** %custom98, align 8, !dbg !6746
  %id99 = getelementptr inbounds %struct.Object, %struct.Object* %104, i32 0, i32 0, !dbg !6747
  call void @id_us_plus(%struct.ID* %id99), !dbg !6748
  br label %if.end100, !dbg !6749

if.end100:                                        ; preds = %if.then97, %if.else92
  %105 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchanp, align 8, !dbg !6750
  %custom_tx = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %105, i32 0, i32 19, !dbg !6752
  %106 = load %struct.bPoseChannel*, %struct.bPoseChannel** %custom_tx, align 8, !dbg !6752
  %tobool101 = icmp ne %struct.bPoseChannel* %106, null, !dbg !6750
  br i1 %tobool101, label %if.then102, label %if.end108, !dbg !6753

if.then102:                                       ; preds = %if.end100
  %107 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !6754
  %108 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchanp, align 8, !dbg !6755
  %custom_tx103 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %108, i32 0, i32 19, !dbg !6756
  %109 = load %struct.bPoseChannel*, %struct.bPoseChannel** %custom_tx103, align 8, !dbg !6756
  %name104 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %109, i32 0, i32 4, !dbg !6757
  %arraydecay105 = getelementptr inbounds [64 x i8], [64 x i8]* %name104, i64 0, i64 0, !dbg !6755
  %call106 = call %struct.bPoseChannel* @BKE_pose_channel_find_name(%struct.bPose* %107, i8* %arraydecay105), !dbg !6758
  %110 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6759
  %custom_tx107 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %110, i32 0, i32 19, !dbg !6760
  store %struct.bPoseChannel* %call106, %struct.bPoseChannel** %custom_tx107, align 8, !dbg !6761
  br label %if.end108, !dbg !6759

if.end108:                                        ; preds = %if.then102, %if.end100
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %prop_orig, metadata !6762, metadata !DIExpression()), !dbg !6764
  %111 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6765
  %prop109 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %111, i32 0, i32 2, !dbg !6766
  %112 = load %struct.IDProperty*, %struct.IDProperty** %prop109, align 8, !dbg !6766
  store %struct.IDProperty* %112, %struct.IDProperty** %prop_orig, align 8, !dbg !6764
  %113 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchanp, align 8, !dbg !6767
  %prop110 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %113, i32 0, i32 2, !dbg !6769
  %114 = load %struct.IDProperty*, %struct.IDProperty** %prop110, align 8, !dbg !6769
  %tobool111 = icmp ne %struct.IDProperty* %114, null, !dbg !6767
  br i1 %tobool111, label %if.then112, label %if.else120, !dbg !6770

if.then112:                                       ; preds = %if.end108
  %115 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchanp, align 8, !dbg !6771
  %prop113 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %115, i32 0, i32 2, !dbg !6773
  %116 = load %struct.IDProperty*, %struct.IDProperty** %prop113, align 8, !dbg !6773
  %call114 = call %struct.IDProperty* @IDP_CopyProperty(%struct.IDProperty* %116), !dbg !6774
  %117 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6775
  %prop115 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %117, i32 0, i32 2, !dbg !6776
  store %struct.IDProperty* %call114, %struct.IDProperty** %prop115, align 8, !dbg !6777
  %118 = load %struct.IDProperty*, %struct.IDProperty** %prop_orig, align 8, !dbg !6778
  %tobool116 = icmp ne %struct.IDProperty* %118, null, !dbg !6778
  br i1 %tobool116, label %if.then117, label %if.end119, !dbg !6780

if.then117:                                       ; preds = %if.then112
  %119 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6781
  %prop118 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %119, i32 0, i32 2, !dbg !6783
  %120 = load %struct.IDProperty*, %struct.IDProperty** %prop118, align 8, !dbg !6783
  %121 = load %struct.IDProperty*, %struct.IDProperty** %prop_orig, align 8, !dbg !6784
  call void @IDP_SyncGroupValues(%struct.IDProperty* %120, %struct.IDProperty* %121), !dbg !6785
  br label %if.end119, !dbg !6786

if.end119:                                        ; preds = %if.then117, %if.then112
  br label %if.end122, !dbg !6787

if.else120:                                       ; preds = %if.end108
  %122 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6788
  %prop121 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %122, i32 0, i32 2, !dbg !6790
  store %struct.IDProperty* null, %struct.IDProperty** %prop121, align 8, !dbg !6791
  br label %if.end122

if.end122:                                        ; preds = %if.else120, %if.end119
  %123 = load %struct.IDProperty*, %struct.IDProperty** %prop_orig, align 8, !dbg !6792
  %tobool123 = icmp ne %struct.IDProperty* %123, null, !dbg !6792
  br i1 %tobool123, label %if.then124, label %if.end125, !dbg !6794

if.then124:                                       ; preds = %if.end122
  %124 = load %struct.IDProperty*, %struct.IDProperty** %prop_orig, align 8, !dbg !6795
  call void @IDP_FreeProperty(%struct.IDProperty* %124), !dbg !6797
  %125 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6798
  %126 = load %struct.IDProperty*, %struct.IDProperty** %prop_orig, align 8, !dbg !6799
  %127 = bitcast %struct.IDProperty* %126 to i8*, !dbg !6799
  call void %125(i8* %127), !dbg !6798
  br label %if.end125, !dbg !6800

if.end125:                                        ; preds = %if.then124, %if.end122
  br label %if.end126

if.end126:                                        ; preds = %if.end125, %if.end91
  br label %if.end127

if.end127:                                        ; preds = %if.end126, %if.then29
  br label %for.inc128, !dbg !6801

for.inc128:                                       ; preds = %if.end127
  %128 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6802
  %next129 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %128, i32 0, i32 0, !dbg !6803
  %129 = load %struct.bPoseChannel*, %struct.bPoseChannel** %next129, align 8, !dbg !6803
  store %struct.bPoseChannel* %129, %struct.bPoseChannel** %pchan, align 8, !dbg !6804
  br label %for.cond22, !dbg !6805, !llvm.loop !6806

for.end130:                                       ; preds = %if.then, %if.then15, %for.cond22
  ret void, !dbg !6808
}

declare dso_local void @BKE_pose_update_constraint_flags(%struct.bPose*) #2

declare dso_local void @DAG_pose_sort(%struct.Object*) #2

declare dso_local void @BKE_pose_channels_hash_make(%struct.bPose*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_pchan_to_mat4(%struct.bPoseChannel* %pchan, [4 x float]* %chan_mat) #0 !dbg !6809 {
entry:
  %pchan.addr = alloca %struct.bPoseChannel*, align 8
  %chan_mat.addr = alloca [4 x float]*, align 8
  %smat = alloca [3 x [3 x float]], align 16
  %rmat = alloca [3 x [3 x float]], align 16
  %tmat = alloca [3 x [3 x float]], align 16
  %quat = alloca [4 x float], align 16
  store %struct.bPoseChannel* %pchan, %struct.bPoseChannel** %pchan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan.addr, metadata !6812, metadata !DIExpression()), !dbg !6813
  store [4 x float]* %chan_mat, [4 x float]** %chan_mat.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x float]** %chan_mat.addr, metadata !6814, metadata !DIExpression()), !dbg !6815
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %smat, metadata !6816, metadata !DIExpression()), !dbg !6817
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %rmat, metadata !6818, metadata !DIExpression()), !dbg !6819
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %tmat, metadata !6820, metadata !DIExpression()), !dbg !6821
  %arraydecay = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %smat, i64 0, i64 0, !dbg !6822
  %0 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !6823
  %size = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %0, i32 0, i32 21, !dbg !6824
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %size, i64 0, i64 0, !dbg !6823
  call void @size_to_mat3([3 x float]* %arraydecay, float* %arraydecay1), !dbg !6825
  %1 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !6826
  %rotmode = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %1, i32 0, i32 26, !dbg !6828
  %2 = load i16, i16* %rotmode, align 4, !dbg !6828
  %conv = sext i16 %2 to i32, !dbg !6826
  %cmp = icmp sgt i32 %conv, 0, !dbg !6829
  br i1 %cmp, label %if.then, label %if.else, !dbg !6830

if.then:                                          ; preds = %entry
  %arraydecay3 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %rmat, i64 0, i64 0, !dbg !6831
  %3 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !6833
  %eul = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %3, i32 0, i32 22, !dbg !6834
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %eul, i64 0, i64 0, !dbg !6833
  %4 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !6835
  %rotmode5 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %4, i32 0, i32 26, !dbg !6836
  %5 = load i16, i16* %rotmode5, align 4, !dbg !6836
  call void @eulO_to_mat3([3 x float]* %arraydecay3, float* %arraydecay4, i16 signext %5), !dbg !6837
  br label %if.end19, !dbg !6838

if.else:                                          ; preds = %entry
  %6 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !6839
  %rotmode6 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %6, i32 0, i32 26, !dbg !6841
  %7 = load i16, i16* %rotmode6, align 4, !dbg !6841
  %conv7 = sext i16 %7 to i32, !dbg !6839
  %cmp8 = icmp eq i32 %conv7, -1, !dbg !6842
  br i1 %cmp8, label %if.then10, label %if.else13, !dbg !6843

if.then10:                                        ; preds = %if.else
  %arraydecay11 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %rmat, i64 0, i64 0, !dbg !6844
  %8 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !6846
  %rotAxis = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %8, i32 0, i32 24, !dbg !6847
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %rotAxis, i64 0, i64 0, !dbg !6846
  %9 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !6848
  %rotAngle = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %9, i32 0, i32 25, !dbg !6849
  %10 = load float, float* %rotAngle, align 8, !dbg !6849
  call void @axis_angle_to_mat3([3 x float]* %arraydecay11, float* %arraydecay12, float %10), !dbg !6850
  br label %if.end, !dbg !6851

if.else13:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata [4 x float]* %quat, metadata !6852, metadata !DIExpression()), !dbg !6854
  %arraydecay14 = getelementptr inbounds [4 x float], [4 x float]* %quat, i64 0, i64 0, !dbg !6855
  %11 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !6856
  %quat15 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %11, i32 0, i32 23, !dbg !6857
  %arraydecay16 = getelementptr inbounds [4 x float], [4 x float]* %quat15, i64 0, i64 0, !dbg !6856
  %call = call float @normalize_qt_qt(float* %arraydecay14, float* %arraydecay16), !dbg !6858
  %arraydecay17 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %rmat, i64 0, i64 0, !dbg !6859
  %arraydecay18 = getelementptr inbounds [4 x float], [4 x float]* %quat, i64 0, i64 0, !dbg !6860
  call void @quat_to_mat3([3 x float]* %arraydecay17, float* %arraydecay18), !dbg !6861
  br label %if.end

if.end:                                           ; preds = %if.else13, %if.then10
  br label %if.end19

if.end19:                                         ; preds = %if.end, %if.then
  %arraydecay20 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !6862
  %arraydecay21 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %rmat, i64 0, i64 0, !dbg !6863
  %arraydecay22 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %smat, i64 0, i64 0, !dbg !6864
  call void @mul_m3_m3m3([3 x float]* %arraydecay20, [3 x float]* %arraydecay21, [3 x float]* %arraydecay22), !dbg !6865
  %12 = load [4 x float]*, [4 x float]** %chan_mat.addr, align 8, !dbg !6866
  %arraydecay23 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !6867
  call void @copy_m4_m3([4 x float]* %12, [3 x float]* %arraydecay23), !dbg !6868
  %13 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !6869
  %bone = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %13, i32 0, i32 12, !dbg !6871
  %14 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !6871
  %cmp24 = icmp eq %struct.Bone* %14, null, !dbg !6872
  br i1 %cmp24, label %if.then27, label %lor.lhs.false, !dbg !6873

lor.lhs.false:                                    ; preds = %if.end19
  %15 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !6874
  %bone26 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %15, i32 0, i32 12, !dbg !6875
  %16 = load %struct.Bone*, %struct.Bone** %bone26, align 8, !dbg !6875
  %flag = getelementptr inbounds %struct.Bone, %struct.Bone* %16, i32 0, i32 10, !dbg !6876
  %17 = load i32, i32* %flag, align 8, !dbg !6876
  %and = and i32 %17, 16, !dbg !6877
  %tobool = icmp ne i32 %and, 0, !dbg !6877
  br i1 %tobool, label %if.end30, label %if.then27, !dbg !6878

if.then27:                                        ; preds = %lor.lhs.false, %if.end19
  %18 = load [4 x float]*, [4 x float]** %chan_mat.addr, align 8, !dbg !6879
  %arrayidx = getelementptr inbounds [4 x float], [4 x float]* %18, i64 3, !dbg !6879
  %arraydecay28 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !6879
  %19 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !6881
  %loc = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %19, i32 0, i32 20, !dbg !6882
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %loc, i64 0, i64 0, !dbg !6881
  call void @copy_v3_v3(float* %arraydecay28, float* %arraydecay29), !dbg !6883
  br label %if.end30, !dbg !6884

if.end30:                                         ; preds = %if.then27, %lor.lhs.false
  ret void, !dbg !6885
}

declare dso_local void @size_to_mat3([3 x float]*, float*) #2

declare dso_local void @eulO_to_mat3([3 x float]*, float*, i16 signext) #2

declare dso_local void @axis_angle_to_mat3([3 x float]*, float*, float) #2

declare dso_local float @normalize_qt_qt(float*, float*) #2

declare dso_local void @quat_to_mat3([3 x float]*, float*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_pchan_calc_mat(%struct.bPoseChannel* %pchan) #0 !dbg !6886 {
entry:
  %pchan.addr = alloca %struct.bPoseChannel*, align 8
  store %struct.bPoseChannel* %pchan, %struct.bPoseChannel** %pchan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan.addr, metadata !6889, metadata !DIExpression()), !dbg !6890
  %0 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !6891
  %1 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !6892
  %chan_mat = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %1, i32 0, i32 28, !dbg !6893
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %chan_mat, i64 0, i64 0, !dbg !6892
  call void @BKE_pchan_to_mat4(%struct.bPoseChannel* %0, [4 x float]* %arraydecay), !dbg !6894
  ret void, !dbg !6895
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_pose_where_is_bone_tail(%struct.bPoseChannel* %pchan) #0 !dbg !6896 {
entry:
  %pchan.addr = alloca %struct.bPoseChannel*, align 8
  %vec = alloca [3 x float], align 4
  store %struct.bPoseChannel* %pchan, %struct.bPoseChannel** %pchan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan.addr, metadata !6897, metadata !DIExpression()), !dbg !6898
  call void @llvm.dbg.declare(metadata [3 x float]* %vec, metadata !6899, metadata !DIExpression()), !dbg !6900
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !6901
  %0 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !6902
  %pose_mat = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %0, i32 0, i32 29, !dbg !6903
  %arrayidx = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %pose_mat, i64 0, i64 1, !dbg !6902
  %arraydecay1 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx, i64 0, i64 0, !dbg !6902
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay1), !dbg !6904
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !6905
  %1 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !6906
  %bone = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %1, i32 0, i32 12, !dbg !6907
  %2 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !6907
  %length = getelementptr inbounds %struct.Bone, %struct.Bone* %2, i32 0, i32 18, !dbg !6908
  %3 = load float, float* %length, align 4, !dbg !6908
  call void @mul_v3_fl(float* %arraydecay2, float %3), !dbg !6909
  %4 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !6910
  %pose_tail = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %4, i32 0, i32 32, !dbg !6911
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %pose_tail, i64 0, i64 0, !dbg !6910
  %5 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !6912
  %pose_head = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %5, i32 0, i32 31, !dbg !6913
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %pose_head, i64 0, i64 0, !dbg !6912
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %vec, i64 0, i64 0, !dbg !6914
  call void @add_v3_v3v3(float* %arraydecay3, float* %arraydecay4, float* %arraydecay5), !dbg !6915
  ret void, !dbg !6916
}

declare dso_local %struct.bConstraintOb* @BKE_constraints_make_evalob(%struct.Scene*, %struct.Object*, i8*, i16 signext) #2

declare dso_local void @BKE_constraints_solve(%struct.ListBase*, %struct.bConstraintOb*, float) #2

declare dso_local void @BKE_constraints_clear_evalob(%struct.bConstraintOb*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_pose_where_is(%struct.Scene* %scene, %struct.Object* %ob) #0 !dbg !6917 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %arm = alloca %struct.bArmature*, align 8
  %bone = alloca %struct.Bone*, align 8
  %pchan = alloca %struct.bPoseChannel*, align 8
  %imat = alloca [4 x [4 x float]], align 16
  %ctime = alloca float, align 4
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !6920, metadata !DIExpression()), !dbg !6921
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !6922, metadata !DIExpression()), !dbg !6923
  call void @llvm.dbg.declare(metadata %struct.bArmature** %arm, metadata !6924, metadata !DIExpression()), !dbg !6925
  call void @llvm.dbg.declare(metadata %struct.Bone** %bone, metadata !6926, metadata !DIExpression()), !dbg !6927
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan, metadata !6928, metadata !DIExpression()), !dbg !6929
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %imat, metadata !6930, metadata !DIExpression()), !dbg !6931
  call void @llvm.dbg.declare(metadata float* %ctime, metadata !6932, metadata !DIExpression()), !dbg !6933
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6934
  %type = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 3, !dbg !6936
  %1 = load i16, i16* %type, align 8, !dbg !6936
  %conv = sext i16 %1 to i32, !dbg !6934
  %cmp = icmp ne i32 %conv, 25, !dbg !6937
  br i1 %cmp, label %if.then, label %if.end, !dbg !6938

if.then:                                          ; preds = %entry
  br label %for.end100, !dbg !6939

if.end:                                           ; preds = %entry
  %2 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6940
  %data = getelementptr inbounds %struct.Object, %struct.Object* %2, i32 0, i32 19, !dbg !6941
  %3 = load i8*, i8** %data, align 8, !dbg !6941
  %4 = bitcast i8* %3 to %struct.bArmature*, !dbg !6940
  store %struct.bArmature* %4, %struct.bArmature** %arm, align 8, !dbg !6942
  %5 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !6943
  %cmp2 = icmp eq %struct.bArmature* null, %5, !dbg !6943
  br i1 %cmp2, label %if.then6, label %lor.lhs.false, !dbg !6943

lor.lhs.false:                                    ; preds = %if.end
  %6 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6943
  %cmp4 = icmp eq %struct.Scene* null, %6, !dbg !6943
  br i1 %cmp4, label %if.then6, label %if.end7, !dbg !6945

if.then6:                                         ; preds = %lor.lhs.false, %if.end
  br label %for.end100, !dbg !6946

if.end7:                                          ; preds = %lor.lhs.false
  %7 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6947
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %7, i32 0, i32 18, !dbg !6949
  %8 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !6949
  %cmp8 = icmp eq %struct.bPose* %8, null, !dbg !6950
  br i1 %cmp8, label %if.then13, label %lor.lhs.false10, !dbg !6951

lor.lhs.false10:                                  ; preds = %if.end7
  %9 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6952
  %pose11 = getelementptr inbounds %struct.Object, %struct.Object* %9, i32 0, i32 18, !dbg !6953
  %10 = load %struct.bPose*, %struct.bPose** %pose11, align 8, !dbg !6953
  %flag = getelementptr inbounds %struct.bPose, %struct.bPose* %10, i32 0, i32 2, !dbg !6954
  %11 = load i16, i16* %flag, align 8, !dbg !6954
  %conv12 = sext i16 %11 to i32, !dbg !6952
  %and = and i32 %conv12, 1, !dbg !6955
  %tobool = icmp ne i32 %and, 0, !dbg !6955
  br i1 %tobool, label %if.then13, label %if.end14, !dbg !6956

if.then13:                                        ; preds = %lor.lhs.false10, %if.end7
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6957
  %13 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !6958
  call void @BKE_pose_rebuild(%struct.Object* %12, %struct.bArmature* %13), !dbg !6959
  br label %if.end14, !dbg !6959

if.end14:                                         ; preds = %if.then13, %lor.lhs.false10
  %14 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6960
  %call = call float @BKE_scene_frame_get(%struct.Scene* %14), !dbg !6961
  store float %call, float* %ctime, align 4, !dbg !6962
  %15 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !6963
  %edbo = getelementptr inbounds %struct.bArmature, %struct.bArmature* %15, i32 0, i32 4, !dbg !6965
  %16 = load %struct.ListBase*, %struct.ListBase** %edbo, align 8, !dbg !6965
  %tobool15 = icmp ne %struct.ListBase* %16, null, !dbg !6963
  br i1 %tobool15, label %if.then20, label %lor.lhs.false16, !dbg !6966

lor.lhs.false16:                                  ; preds = %if.end14
  %17 = load %struct.bArmature*, %struct.bArmature** %arm, align 8, !dbg !6967
  %flag17 = getelementptr inbounds %struct.bArmature, %struct.bArmature* %17, i32 0, i32 8, !dbg !6968
  %18 = load i32, i32* %flag17, align 8, !dbg !6968
  %and18 = and i32 %18, 1, !dbg !6969
  %tobool19 = icmp ne i32 %and18, 0, !dbg !6969
  br i1 %tobool19, label %if.then20, label %if.else, !dbg !6970

if.then20:                                        ; preds = %lor.lhs.false16, %if.end14
  %19 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !6971
  %pose21 = getelementptr inbounds %struct.Object, %struct.Object* %19, i32 0, i32 18, !dbg !6974
  %20 = load %struct.bPose*, %struct.bPose** %pose21, align 8, !dbg !6974
  %chanbase = getelementptr inbounds %struct.bPose, %struct.bPose* %20, i32 0, i32 0, !dbg !6975
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %chanbase, i32 0, i32 0, !dbg !6976
  %21 = load i8*, i8** %first, align 8, !dbg !6976
  %22 = bitcast i8* %21 to %struct.bPoseChannel*, !dbg !6971
  store %struct.bPoseChannel* %22, %struct.bPoseChannel** %pchan, align 8, !dbg !6977
  br label %for.cond, !dbg !6978

for.cond:                                         ; preds = %for.inc, %if.then20
  %23 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6979
  %tobool22 = icmp ne %struct.bPoseChannel* %23, null, !dbg !6981
  br i1 %tobool22, label %for.body, label %for.end, !dbg !6981

for.body:                                         ; preds = %for.cond
  %24 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6982
  %bone23 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %24, i32 0, i32 12, !dbg !6984
  %25 = load %struct.Bone*, %struct.Bone** %bone23, align 8, !dbg !6984
  store %struct.Bone* %25, %struct.Bone** %bone, align 8, !dbg !6985
  %26 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !6986
  %tobool24 = icmp ne %struct.Bone* %26, null, !dbg !6986
  br i1 %tobool24, label %if.then25, label %if.end31, !dbg !6988

if.then25:                                        ; preds = %for.body
  %27 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6989
  %pose_mat = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %27, i32 0, i32 29, !dbg !6991
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %pose_mat, i64 0, i64 0, !dbg !6989
  %28 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !6992
  %arm_mat = getelementptr inbounds %struct.Bone, %struct.Bone* %28, i32 0, i32 13, !dbg !6993
  %arraydecay26 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %arm_mat, i64 0, i64 0, !dbg !6992
  call void @copy_m4_m4([4 x float]* %arraydecay, [4 x float]* %arraydecay26), !dbg !6994
  %29 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !6995
  %pose_head = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %29, i32 0, i32 31, !dbg !6996
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %pose_head, i64 0, i64 0, !dbg !6995
  %30 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !6997
  %arm_head = getelementptr inbounds %struct.Bone, %struct.Bone* %30, i32 0, i32 11, !dbg !6998
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %arm_head, i64 0, i64 0, !dbg !6997
  call void @copy_v3_v3(float* %arraydecay27, float* %arraydecay28), !dbg !6999
  %31 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !7000
  %pose_tail = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %31, i32 0, i32 32, !dbg !7001
  %arraydecay29 = getelementptr inbounds [3 x float], [3 x float]* %pose_tail, i64 0, i64 0, !dbg !7000
  %32 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !7002
  %arm_tail = getelementptr inbounds %struct.Bone, %struct.Bone* %32, i32 0, i32 12, !dbg !7003
  %arraydecay30 = getelementptr inbounds [3 x float], [3 x float]* %arm_tail, i64 0, i64 0, !dbg !7002
  call void @copy_v3_v3(float* %arraydecay29, float* %arraydecay30), !dbg !7004
  br label %if.end31, !dbg !7005

if.end31:                                         ; preds = %if.then25, %for.body
  br label %for.inc, !dbg !7006

for.inc:                                          ; preds = %if.end31
  %33 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !7007
  %next = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %33, i32 0, i32 0, !dbg !7008
  %34 = load %struct.bPoseChannel*, %struct.bPoseChannel** %next, align 8, !dbg !7008
  store %struct.bPoseChannel* %34, %struct.bPoseChannel** %pchan, align 8, !dbg !7009
  br label %for.cond, !dbg !7010, !llvm.loop !7011

for.end:                                          ; preds = %for.cond
  br label %if.end78, !dbg !7013

if.else:                                          ; preds = %lor.lhs.false16
  %35 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7014
  %imat32 = getelementptr inbounds %struct.Object, %struct.Object* %35, i32 0, i32 50, !dbg !7016
  %arraydecay33 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat32, i64 0, i64 0, !dbg !7014
  %36 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7017
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %36, i32 0, i32 47, !dbg !7018
  %arraydecay34 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !7017
  %call35 = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay33, [4 x float]* %arraydecay34), !dbg !7019
  %37 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7020
  %pose36 = getelementptr inbounds %struct.Object, %struct.Object* %37, i32 0, i32 18, !dbg !7022
  %38 = load %struct.bPose*, %struct.bPose** %pose36, align 8, !dbg !7022
  %chanbase37 = getelementptr inbounds %struct.bPose, %struct.bPose* %38, i32 0, i32 0, !dbg !7023
  %first38 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %chanbase37, i32 0, i32 0, !dbg !7024
  %39 = load i8*, i8** %first38, align 8, !dbg !7024
  %40 = bitcast i8* %39 to %struct.bPoseChannel*, !dbg !7020
  store %struct.bPoseChannel* %40, %struct.bPoseChannel** %pchan, align 8, !dbg !7025
  br label %for.cond39, !dbg !7026

for.cond39:                                       ; preds = %for.inc46, %if.else
  %41 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !7027
  %tobool40 = icmp ne %struct.bPoseChannel* %41, null, !dbg !7029
  br i1 %tobool40, label %for.body41, label %for.end48, !dbg !7029

for.body41:                                       ; preds = %for.cond39
  %42 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !7030
  %flag42 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %42, i32 0, i32 5, !dbg !7032
  %43 = load i16, i16* %flag42, align 8, !dbg !7033
  %conv43 = sext i16 %43 to i32, !dbg !7033
  %and44 = and i32 %conv43, -42497, !dbg !7033
  %conv45 = trunc i32 %and44 to i16, !dbg !7033
  store i16 %conv45, i16* %flag42, align 8, !dbg !7033
  br label %for.inc46, !dbg !7034

for.inc46:                                        ; preds = %for.body41
  %44 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !7035
  %next47 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %44, i32 0, i32 0, !dbg !7036
  %45 = load %struct.bPoseChannel*, %struct.bPoseChannel** %next47, align 8, !dbg !7036
  store %struct.bPoseChannel* %45, %struct.bPoseChannel** %pchan, align 8, !dbg !7037
  br label %for.cond39, !dbg !7038, !llvm.loop !7039

for.end48:                                        ; preds = %for.cond39
  %46 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7041
  %47 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7042
  %48 = load float, float* %ctime, align 4, !dbg !7043
  call void @BIK_initialize_tree(%struct.Scene* %46, %struct.Object* %47, float %48), !dbg !7044
  %49 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7045
  %50 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7046
  %51 = load float, float* %ctime, align 4, !dbg !7047
  call void @splineik_init_tree(%struct.Scene* %49, %struct.Object* %50, float %51), !dbg !7048
  %52 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7049
  %pose49 = getelementptr inbounds %struct.Object, %struct.Object* %52, i32 0, i32 18, !dbg !7051
  %53 = load %struct.bPose*, %struct.bPose** %pose49, align 8, !dbg !7051
  %chanbase50 = getelementptr inbounds %struct.bPose, %struct.bPose* %53, i32 0, i32 0, !dbg !7052
  %first51 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %chanbase50, i32 0, i32 0, !dbg !7053
  %54 = load i8*, i8** %first51, align 8, !dbg !7053
  %55 = bitcast i8* %54 to %struct.bPoseChannel*, !dbg !7049
  store %struct.bPoseChannel* %55, %struct.bPoseChannel** %pchan, align 8, !dbg !7054
  br label %for.cond52, !dbg !7055

for.cond52:                                       ; preds = %for.inc75, %for.end48
  %56 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !7056
  %tobool53 = icmp ne %struct.bPoseChannel* %56, null, !dbg !7058
  br i1 %tobool53, label %for.body54, label %for.end77, !dbg !7058

for.body54:                                       ; preds = %for.cond52
  %57 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !7059
  %flag55 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %57, i32 0, i32 5, !dbg !7062
  %58 = load i16, i16* %flag55, align 8, !dbg !7062
  %conv56 = sext i16 %58 to i32, !dbg !7059
  %and57 = and i32 %conv56, 8192, !dbg !7063
  %tobool58 = icmp ne i32 %and57, 0, !dbg !7063
  br i1 %tobool58, label %if.then59, label %if.else60, !dbg !7064

if.then59:                                        ; preds = %for.body54
  %59 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7065
  %60 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7067
  %61 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !7068
  %62 = load float, float* %ctime, align 4, !dbg !7069
  call void @BIK_execute_tree(%struct.Scene* %59, %struct.Object* %60, %struct.bPoseChannel* %61, float %62), !dbg !7070
  br label %if.end74, !dbg !7071

if.else60:                                        ; preds = %for.body54
  %63 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !7072
  %flag61 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %63, i32 0, i32 5, !dbg !7074
  %64 = load i16, i16* %flag61, align 8, !dbg !7074
  %conv62 = sext i16 %64 to i32, !dbg !7072
  %and63 = and i32 %conv62, 32768, !dbg !7075
  %tobool64 = icmp ne i32 %and63, 0, !dbg !7075
  br i1 %tobool64, label %if.then65, label %if.else66, !dbg !7076

if.then65:                                        ; preds = %if.else60
  %65 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7077
  %66 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7079
  %67 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !7080
  %68 = load float, float* %ctime, align 4, !dbg !7081
  call void @splineik_execute_tree(%struct.Scene* %65, %struct.Object* %66, %struct.bPoseChannel* %67, float %68), !dbg !7082
  br label %if.end73, !dbg !7083

if.else66:                                        ; preds = %if.else60
  %69 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !7084
  %flag67 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %69, i32 0, i32 5, !dbg !7086
  %70 = load i16, i16* %flag67, align 8, !dbg !7086
  %conv68 = sext i16 %70 to i32, !dbg !7084
  %and69 = and i32 %conv68, 1024, !dbg !7087
  %tobool70 = icmp ne i32 %and69, 0, !dbg !7087
  br i1 %tobool70, label %if.end72, label %if.then71, !dbg !7088

if.then71:                                        ; preds = %if.else66
  %71 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7089
  %72 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7091
  %73 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !7092
  %74 = load float, float* %ctime, align 4, !dbg !7093
  call void @BKE_pose_where_is_bone(%struct.Scene* %71, %struct.Object* %72, %struct.bPoseChannel* %73, float %74, i8 zeroext 1), !dbg !7094
  br label %if.end72, !dbg !7095

if.end72:                                         ; preds = %if.then71, %if.else66
  br label %if.end73

if.end73:                                         ; preds = %if.end72, %if.then65
  br label %if.end74

if.end74:                                         ; preds = %if.end73, %if.then59
  br label %for.inc75, !dbg !7096

for.inc75:                                        ; preds = %if.end74
  %75 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !7097
  %next76 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %75, i32 0, i32 0, !dbg !7098
  %76 = load %struct.bPoseChannel*, %struct.bPoseChannel** %next76, align 8, !dbg !7098
  store %struct.bPoseChannel* %76, %struct.bPoseChannel** %pchan, align 8, !dbg !7099
  br label %for.cond52, !dbg !7100, !llvm.loop !7101

for.end77:                                        ; preds = %for.cond52
  %77 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7103
  %78 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7104
  %79 = load float, float* %ctime, align 4, !dbg !7105
  call void @BIK_release_tree(%struct.Scene* %77, %struct.Object* %78, float %79), !dbg !7106
  br label %if.end78

if.end78:                                         ; preds = %for.end77, %for.end
  %80 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7107
  %pose79 = getelementptr inbounds %struct.Object, %struct.Object* %80, i32 0, i32 18, !dbg !7109
  %81 = load %struct.bPose*, %struct.bPose** %pose79, align 8, !dbg !7109
  %chanbase80 = getelementptr inbounds %struct.bPose, %struct.bPose* %81, i32 0, i32 0, !dbg !7110
  %first81 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %chanbase80, i32 0, i32 0, !dbg !7111
  %82 = load i8*, i8** %first81, align 8, !dbg !7111
  %83 = bitcast i8* %82 to %struct.bPoseChannel*, !dbg !7107
  store %struct.bPoseChannel* %83, %struct.bPoseChannel** %pchan, align 8, !dbg !7112
  br label %for.cond82, !dbg !7113

for.cond82:                                       ; preds = %for.inc98, %if.end78
  %84 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !7114
  %tobool83 = icmp ne %struct.bPoseChannel* %84, null, !dbg !7116
  br i1 %tobool83, label %for.body84, label %for.end100, !dbg !7116

for.body84:                                       ; preds = %for.cond82
  %85 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !7117
  %bone85 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %85, i32 0, i32 12, !dbg !7120
  %86 = load %struct.Bone*, %struct.Bone** %bone85, align 8, !dbg !7120
  %tobool86 = icmp ne %struct.Bone* %86, null, !dbg !7117
  br i1 %tobool86, label %if.then87, label %if.end97, !dbg !7121

if.then87:                                        ; preds = %for.body84
  %arraydecay88 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !7122
  %87 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !7124
  %bone89 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %87, i32 0, i32 12, !dbg !7125
  %88 = load %struct.Bone*, %struct.Bone** %bone89, align 8, !dbg !7125
  %arm_mat90 = getelementptr inbounds %struct.Bone, %struct.Bone* %88, i32 0, i32 13, !dbg !7126
  %arraydecay91 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %arm_mat90, i64 0, i64 0, !dbg !7124
  %call92 = call zeroext i8 @invert_m4_m4([4 x float]* %arraydecay88, [4 x float]* %arraydecay91), !dbg !7127
  %89 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !7128
  %chan_mat = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %89, i32 0, i32 28, !dbg !7129
  %arraydecay93 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %chan_mat, i64 0, i64 0, !dbg !7128
  %90 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !7130
  %pose_mat94 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %90, i32 0, i32 29, !dbg !7131
  %arraydecay95 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %pose_mat94, i64 0, i64 0, !dbg !7130
  %arraydecay96 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !7132
  call void @mul_m4_m4m4([4 x float]* %arraydecay93, [4 x float]* %arraydecay95, [4 x float]* %arraydecay96), !dbg !7133
  br label %if.end97, !dbg !7134

if.end97:                                         ; preds = %if.then87, %for.body84
  br label %for.inc98, !dbg !7135

for.inc98:                                        ; preds = %if.end97
  %91 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !7136
  %next99 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %91, i32 0, i32 0, !dbg !7137
  %92 = load %struct.bPoseChannel*, %struct.bPoseChannel** %next99, align 8, !dbg !7137
  store %struct.bPoseChannel* %92, %struct.bPoseChannel** %pchan, align 8, !dbg !7138
  br label %for.cond82, !dbg !7139, !llvm.loop !7140

for.end100:                                       ; preds = %if.then, %if.then6, %for.cond82
  ret void, !dbg !7142
}

declare dso_local float @BKE_scene_frame_get(%struct.Scene*) #2

declare dso_local void @BIK_initialize_tree(%struct.Scene*, %struct.Object*, float) #2

; Function Attrs: noinline nounwind uwtable
define internal void @splineik_init_tree(%struct.Scene* %scene, %struct.Object* %ob, float %UNUSED_ctime) #0 !dbg !7143 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %UNUSED_ctime.addr = alloca float, align 4
  %pchan = alloca %struct.bPoseChannel*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !7146, metadata !DIExpression()), !dbg !7147
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !7148, metadata !DIExpression()), !dbg !7149
  store float %UNUSED_ctime, float* %UNUSED_ctime.addr, align 4
  call void @llvm.dbg.declare(metadata float* %UNUSED_ctime.addr, metadata !7150, metadata !DIExpression()), !dbg !7151
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan, metadata !7152, metadata !DIExpression()), !dbg !7153
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7154
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 18, !dbg !7156
  %1 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !7156
  %chanbase = getelementptr inbounds %struct.bPose, %struct.bPose* %1, i32 0, i32 0, !dbg !7157
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %chanbase, i32 0, i32 0, !dbg !7158
  %2 = load i8*, i8** %first, align 8, !dbg !7158
  %3 = bitcast i8* %2 to %struct.bPoseChannel*, !dbg !7154
  store %struct.bPoseChannel* %3, %struct.bPoseChannel** %pchan, align 8, !dbg !7159
  br label %for.cond, !dbg !7160

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !7161
  %tobool = icmp ne %struct.bPoseChannel* %4, null, !dbg !7163
  br i1 %tobool, label %for.body, label %for.end, !dbg !7163

for.body:                                         ; preds = %for.cond
  %5 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !7164
  %constflag = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %5, i32 0, i32 9, !dbg !7167
  %6 = load i8, i8* %constflag, align 8, !dbg !7167
  %conv = zext i8 %6 to i32, !dbg !7164
  %and = and i32 %conv, 32, !dbg !7168
  %tobool1 = icmp ne i32 %and, 0, !dbg !7168
  br i1 %tobool1, label %if.then, label %if.end, !dbg !7169

if.then:                                          ; preds = %for.body
  %7 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7170
  %8 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7171
  %9 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !7172
  call void @splineik_init_tree_from_pchan(%struct.Scene* %7, %struct.Object* %8, %struct.bPoseChannel* %9), !dbg !7173
  br label %if.end, !dbg !7173

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !7174

for.inc:                                          ; preds = %if.end
  %10 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !7175
  %next = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %10, i32 0, i32 0, !dbg !7176
  %11 = load %struct.bPoseChannel*, %struct.bPoseChannel** %next, align 8, !dbg !7176
  store %struct.bPoseChannel* %11, %struct.bPoseChannel** %pchan, align 8, !dbg !7177
  br label %for.cond, !dbg !7178, !llvm.loop !7179

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7181
}

declare dso_local void @BIK_execute_tree(%struct.Scene*, %struct.Object*, %struct.bPoseChannel*, float) #2

; Function Attrs: noinline nounwind uwtable
define internal void @splineik_execute_tree(%struct.Scene* %scene, %struct.Object* %ob, %struct.bPoseChannel* %pchan_root, float %ctime) #0 !dbg !7182 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %pchan_root.addr = alloca %struct.bPoseChannel*, align 8
  %ctime.addr = alloca float, align 4
  %tree = alloca %struct.tSplineIK_Tree*, align 8
  %i = alloca i32, align 4
  %pchan = alloca %struct.bPoseChannel*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !7185, metadata !DIExpression()), !dbg !7186
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !7187, metadata !DIExpression()), !dbg !7188
  store %struct.bPoseChannel* %pchan_root, %struct.bPoseChannel** %pchan_root.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan_root.addr, metadata !7189, metadata !DIExpression()), !dbg !7190
  store float %ctime, float* %ctime.addr, align 4
  call void @llvm.dbg.declare(metadata float* %ctime.addr, metadata !7191, metadata !DIExpression()), !dbg !7192
  call void @llvm.dbg.declare(metadata %struct.tSplineIK_Tree** %tree, metadata !7193, metadata !DIExpression()), !dbg !7219
  br label %while.cond, !dbg !7220

while.cond:                                       ; preds = %if.end7, %entry
  %0 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan_root.addr, align 8, !dbg !7221
  %siktree = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %0, i32 0, i32 16, !dbg !7222
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %siktree, i32 0, i32 0, !dbg !7223
  %1 = load i8*, i8** %first, align 8, !dbg !7223
  %2 = bitcast i8* %1 to %struct.tSplineIK_Tree*, !dbg !7221
  store %struct.tSplineIK_Tree* %2, %struct.tSplineIK_Tree** %tree, align 8, !dbg !7224
  %cmp = icmp ne %struct.tSplineIK_Tree* %2, null, !dbg !7225
  br i1 %cmp, label %while.body, label %while.end, !dbg !7220

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7226, metadata !DIExpression()), !dbg !7228
  %3 = load %struct.tSplineIK_Tree*, %struct.tSplineIK_Tree** %tree, align 8, !dbg !7229
  %chainlen = getelementptr inbounds %struct.tSplineIK_Tree, %struct.tSplineIK_Tree* %3, i32 0, i32 4, !dbg !7231
  %4 = load i16, i16* %chainlen, align 2, !dbg !7231
  %conv = sext i16 %4 to i32, !dbg !7229
  %sub = sub nsw i32 %conv, 1, !dbg !7232
  store i32 %sub, i32* %i, align 4, !dbg !7233
  br label %for.cond, !dbg !7234

for.cond:                                         ; preds = %for.inc, %while.body
  %5 = load i32, i32* %i, align 4, !dbg !7235
  %cmp1 = icmp sge i32 %5, 0, !dbg !7237
  br i1 %cmp1, label %for.body, label %for.end, !dbg !7238

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan, metadata !7239, metadata !DIExpression()), !dbg !7241
  %6 = load %struct.tSplineIK_Tree*, %struct.tSplineIK_Tree** %tree, align 8, !dbg !7242
  %chain = getelementptr inbounds %struct.tSplineIK_Tree, %struct.tSplineIK_Tree* %6, i32 0, i32 6, !dbg !7243
  %7 = load %struct.bPoseChannel**, %struct.bPoseChannel*** %chain, align 8, !dbg !7243
  %8 = load i32, i32* %i, align 4, !dbg !7244
  %idxprom = sext i32 %8 to i64, !dbg !7242
  %arrayidx = getelementptr inbounds %struct.bPoseChannel*, %struct.bPoseChannel** %7, i64 %idxprom, !dbg !7242
  %9 = load %struct.bPoseChannel*, %struct.bPoseChannel** %arrayidx, align 8, !dbg !7242
  store %struct.bPoseChannel* %9, %struct.bPoseChannel** %pchan, align 8, !dbg !7241
  %10 = load %struct.tSplineIK_Tree*, %struct.tSplineIK_Tree** %tree, align 8, !dbg !7245
  %11 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7246
  %12 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7247
  %13 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !7248
  %14 = load i32, i32* %i, align 4, !dbg !7249
  %15 = load float, float* %ctime.addr, align 4, !dbg !7250
  call void @splineik_evaluate_bone(%struct.tSplineIK_Tree* %10, %struct.Scene* %11, %struct.Object* %12, %struct.bPoseChannel* %13, i32 %14, float %15), !dbg !7251
  br label %for.inc, !dbg !7252

for.inc:                                          ; preds = %for.body
  %16 = load i32, i32* %i, align 4, !dbg !7253
  %dec = add nsw i32 %16, -1, !dbg !7253
  store i32 %dec, i32* %i, align 4, !dbg !7253
  br label %for.cond, !dbg !7254, !llvm.loop !7255

for.end:                                          ; preds = %for.cond
  %17 = load %struct.tSplineIK_Tree*, %struct.tSplineIK_Tree** %tree, align 8, !dbg !7257
  %chain3 = getelementptr inbounds %struct.tSplineIK_Tree, %struct.tSplineIK_Tree* %17, i32 0, i32 6, !dbg !7259
  %18 = load %struct.bPoseChannel**, %struct.bPoseChannel*** %chain3, align 8, !dbg !7259
  %tobool = icmp ne %struct.bPoseChannel** %18, null, !dbg !7257
  br i1 %tobool, label %if.then, label %if.end, !dbg !7260

if.then:                                          ; preds = %for.end
  %19 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7261
  %20 = load %struct.tSplineIK_Tree*, %struct.tSplineIK_Tree** %tree, align 8, !dbg !7262
  %chain4 = getelementptr inbounds %struct.tSplineIK_Tree, %struct.tSplineIK_Tree* %20, i32 0, i32 6, !dbg !7263
  %21 = load %struct.bPoseChannel**, %struct.bPoseChannel*** %chain4, align 8, !dbg !7263
  %22 = bitcast %struct.bPoseChannel** %21 to i8*, !dbg !7262
  call void %19(i8* %22), !dbg !7261
  br label %if.end, !dbg !7261

if.end:                                           ; preds = %if.then, %for.end
  %23 = load %struct.tSplineIK_Tree*, %struct.tSplineIK_Tree** %tree, align 8, !dbg !7264
  %free_points = getelementptr inbounds %struct.tSplineIK_Tree, %struct.tSplineIK_Tree* %23, i32 0, i32 3, !dbg !7266
  %24 = load i8, i8* %free_points, align 4, !dbg !7266
  %tobool5 = icmp ne i8 %24, 0, !dbg !7264
  br i1 %tobool5, label %if.then6, label %if.end7, !dbg !7267

if.then6:                                         ; preds = %if.end
  %25 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7268
  %26 = load %struct.tSplineIK_Tree*, %struct.tSplineIK_Tree** %tree, align 8, !dbg !7269
  %points = getelementptr inbounds %struct.tSplineIK_Tree, %struct.tSplineIK_Tree* %26, i32 0, i32 5, !dbg !7270
  %27 = load float*, float** %points, align 8, !dbg !7270
  %28 = bitcast float* %27 to i8*, !dbg !7269
  call void %25(i8* %28), !dbg !7268
  br label %if.end7, !dbg !7268

if.end7:                                          ; preds = %if.then6, %if.end
  %29 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan_root.addr, align 8, !dbg !7271
  %siktree8 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %29, i32 0, i32 16, !dbg !7272
  %30 = load %struct.tSplineIK_Tree*, %struct.tSplineIK_Tree** %tree, align 8, !dbg !7273
  %31 = bitcast %struct.tSplineIK_Tree* %30 to i8*, !dbg !7273
  call void @BLI_freelinkN(%struct.ListBase* %siktree8, i8* %31), !dbg !7274
  br label %while.cond, !dbg !7220, !llvm.loop !7275

while.end:                                        ; preds = %while.cond
  ret void, !dbg !7277
}

declare dso_local void @BIK_release_tree(%struct.Scene*, %struct.Object*, float) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.BoundBox* @BKE_armature_boundbox_get(%struct.Object* %ob) #0 !dbg !7278 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !7281, metadata !DIExpression()), !dbg !7282
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7283
  call void @boundbox_armature(%struct.Object* %0, float* null, float* null), !dbg !7284
  %1 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7285
  %bb = getelementptr inbounds %struct.Object, %struct.Object* %1, i32 0, i32 15, !dbg !7286
  %2 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !7286
  ret %struct.BoundBox* %2, !dbg !7287
}

; Function Attrs: noinline nounwind uwtable
define internal void @boundbox_armature(%struct.Object* %ob, float* %loc, float* %size) #0 !dbg !7288 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %loc.addr = alloca float*, align 8
  %size.addr = alloca float*, align 8
  %bb = alloca %struct.BoundBox*, align 8
  %min = alloca [3 x float], align 4
  %max = alloca [3 x float], align 4
  %mloc = alloca [3 x float], align 4
  %msize = alloca [3 x float], align 4
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !7291, metadata !DIExpression()), !dbg !7292
  store float* %loc, float** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata float** %loc.addr, metadata !7293, metadata !DIExpression()), !dbg !7294
  store float* %size, float** %size.addr, align 8
  call void @llvm.dbg.declare(metadata float** %size.addr, metadata !7295, metadata !DIExpression()), !dbg !7296
  call void @llvm.dbg.declare(metadata %struct.BoundBox** %bb, metadata !7297, metadata !DIExpression()), !dbg !7300
  call void @llvm.dbg.declare(metadata [3 x float]* %min, metadata !7301, metadata !DIExpression()), !dbg !7302
  call void @llvm.dbg.declare(metadata [3 x float]* %max, metadata !7303, metadata !DIExpression()), !dbg !7304
  call void @llvm.dbg.declare(metadata [3 x float]* %mloc, metadata !7305, metadata !DIExpression()), !dbg !7306
  call void @llvm.dbg.declare(metadata [3 x float]* %msize, metadata !7307, metadata !DIExpression()), !dbg !7308
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7309
  %bb1 = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 15, !dbg !7311
  %1 = load %struct.BoundBox*, %struct.BoundBox** %bb1, align 8, !dbg !7311
  %cmp = icmp eq %struct.BoundBox* %1, null, !dbg !7312
  br i1 %cmp, label %if.then, label %if.end, !dbg !7313

if.then:                                          ; preds = %entry
  %2 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7314
  %call = call i8* %2(i64 104, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.18, i64 0, i64 0)), !dbg !7314
  %3 = bitcast i8* %call to %struct.BoundBox*, !dbg !7314
  %4 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7315
  %bb2 = getelementptr inbounds %struct.Object, %struct.Object* %4, i32 0, i32 15, !dbg !7316
  store %struct.BoundBox* %3, %struct.BoundBox** %bb2, align 8, !dbg !7317
  br label %if.end, !dbg !7315

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7318
  %bb3 = getelementptr inbounds %struct.Object, %struct.Object* %5, i32 0, i32 15, !dbg !7319
  %6 = load %struct.BoundBox*, %struct.BoundBox** %bb3, align 8, !dbg !7319
  store %struct.BoundBox* %6, %struct.BoundBox** %bb, align 8, !dbg !7320
  %7 = load float*, float** %loc.addr, align 8, !dbg !7321
  %tobool = icmp ne float* %7, null, !dbg !7321
  br i1 %tobool, label %if.end5, label %if.then4, !dbg !7323

if.then4:                                         ; preds = %if.end
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %mloc, i64 0, i64 0, !dbg !7324
  store float* %arraydecay, float** %loc.addr, align 8, !dbg !7325
  br label %if.end5, !dbg !7326

if.end5:                                          ; preds = %if.then4, %if.end
  %8 = load float*, float** %size.addr, align 8, !dbg !7327
  %tobool6 = icmp ne float* %8, null, !dbg !7327
  br i1 %tobool6, label %if.end9, label %if.then7, !dbg !7329

if.then7:                                         ; preds = %if.end5
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %msize, i64 0, i64 0, !dbg !7330
  store float* %arraydecay8, float** %size.addr, align 8, !dbg !7331
  br label %if.end9, !dbg !7332

if.end9:                                          ; preds = %if.then7, %if.end5
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 2, !dbg !7333
  store float 0x46293E5940000000, float* %arrayidx, align 4, !dbg !7333
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 1, !dbg !7333
  store float 0x46293E5940000000, float* %arrayidx10, align 4, !dbg !7333
  %arrayidx11 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !7333
  store float 0x46293E5940000000, float* %arrayidx11, align 4, !dbg !7333
  %arrayidx12 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 2, !dbg !7333
  store float 0xC6293E5940000000, float* %arrayidx12, align 4, !dbg !7333
  %arrayidx13 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 1, !dbg !7333
  store float 0xC6293E5940000000, float* %arrayidx13, align 4, !dbg !7333
  %arrayidx14 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !7333
  store float 0xC6293E5940000000, float* %arrayidx14, align 4, !dbg !7333
  %9 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7335
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !7337
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !7338
  %call17 = call i32 @minmax_armature(%struct.Object* %9, float* %arraydecay15, float* %arraydecay16), !dbg !7339
  %tobool18 = icmp ne i32 %call17, 0, !dbg !7339
  br i1 %tobool18, label %if.end26, label %if.then19, !dbg !7340

if.then19:                                        ; preds = %if.end9
  %arrayidx20 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 2, !dbg !7341
  store float -1.000000e+00, float* %arrayidx20, align 4, !dbg !7343
  %arrayidx21 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 1, !dbg !7344
  store float -1.000000e+00, float* %arrayidx21, align 4, !dbg !7345
  %arrayidx22 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !7346
  store float -1.000000e+00, float* %arrayidx22, align 4, !dbg !7347
  %arrayidx23 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 2, !dbg !7348
  store float 1.000000e+00, float* %arrayidx23, align 4, !dbg !7349
  %arrayidx24 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 1, !dbg !7350
  store float 1.000000e+00, float* %arrayidx24, align 4, !dbg !7351
  %arrayidx25 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !7352
  store float 1.000000e+00, float* %arrayidx25, align 4, !dbg !7353
  br label %if.end26, !dbg !7354

if.end26:                                         ; preds = %if.then19, %if.end9
  %10 = load float*, float** %loc.addr, align 8, !dbg !7355
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !7356
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !7357
  call void @mid_v3_v3v3(float* %10, float* %arraydecay27, float* %arraydecay28), !dbg !7358
  %arrayidx29 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !7359
  %11 = load float, float* %arrayidx29, align 4, !dbg !7359
  %arrayidx30 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !7360
  %12 = load float, float* %arrayidx30, align 4, !dbg !7360
  %sub = fsub float %11, %12, !dbg !7361
  %div = fdiv float %sub, 2.000000e+00, !dbg !7362
  %13 = load float*, float** %size.addr, align 8, !dbg !7363
  %arrayidx31 = getelementptr inbounds float, float* %13, i64 0, !dbg !7363
  store float %div, float* %arrayidx31, align 4, !dbg !7364
  %arrayidx32 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 1, !dbg !7365
  %14 = load float, float* %arrayidx32, align 4, !dbg !7365
  %arrayidx33 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 1, !dbg !7366
  %15 = load float, float* %arrayidx33, align 4, !dbg !7366
  %sub34 = fsub float %14, %15, !dbg !7367
  %div35 = fdiv float %sub34, 2.000000e+00, !dbg !7368
  %16 = load float*, float** %size.addr, align 8, !dbg !7369
  %arrayidx36 = getelementptr inbounds float, float* %16, i64 1, !dbg !7369
  store float %div35, float* %arrayidx36, align 4, !dbg !7370
  %arrayidx37 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 2, !dbg !7371
  %17 = load float, float* %arrayidx37, align 4, !dbg !7371
  %arrayidx38 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 2, !dbg !7372
  %18 = load float, float* %arrayidx38, align 4, !dbg !7372
  %sub39 = fsub float %17, %18, !dbg !7373
  %div40 = fdiv float %sub39, 2.000000e+00, !dbg !7374
  %19 = load float*, float** %size.addr, align 8, !dbg !7375
  %arrayidx41 = getelementptr inbounds float, float* %19, i64 2, !dbg !7375
  store float %div40, float* %arrayidx41, align 4, !dbg !7376
  %20 = load %struct.BoundBox*, %struct.BoundBox** %bb, align 8, !dbg !7377
  %arraydecay42 = getelementptr inbounds [3 x float], [3 x float]* %min, i64 0, i64 0, !dbg !7378
  %arraydecay43 = getelementptr inbounds [3 x float], [3 x float]* %max, i64 0, i64 0, !dbg !7379
  call void @BKE_boundbox_init_from_minmax(%struct.BoundBox* %20, float* %arraydecay42, float* %arraydecay43), !dbg !7380
  ret void, !dbg !7381
}

declare dso_local %struct.IDProperty* @IDP_CopyProperty(%struct.IDProperty*) #2

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #4

declare dso_local void @copy_qt_qt(float*, float*) #2

declare dso_local void @_va_mul_m4_series_6([4 x float]*, [4 x float]*, [4 x float]*, [4 x float]*, [4 x float]*, [4 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @b_bone_deform(%struct.bPoseChanDeform* %pdef_info, %struct.Bone* %bone, float* %co, %struct.DualQuat* %dq, [3 x float]* %defmat) #0 !dbg !7382 {
entry:
  %pdef_info.addr = alloca %struct.bPoseChanDeform*, align 8
  %bone.addr = alloca %struct.Bone*, align 8
  %co.addr = alloca float*, align 8
  %dq.addr = alloca %struct.DualQuat*, align 8
  %defmat.addr = alloca [3 x float]*, align 8
  %b_bone = alloca %struct.Mat4*, align 8
  %mat = alloca [4 x float]*, align 8
  %segment = alloca float, align 4
  %y = alloca float, align 4
  %a = alloca i32, align 4
  store %struct.bPoseChanDeform* %pdef_info, %struct.bPoseChanDeform** %pdef_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bPoseChanDeform** %pdef_info.addr, metadata !7385, metadata !DIExpression()), !dbg !7386
  store %struct.Bone* %bone, %struct.Bone** %bone.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Bone** %bone.addr, metadata !7387, metadata !DIExpression()), !dbg !7388
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !7389, metadata !DIExpression()), !dbg !7390
  store %struct.DualQuat* %dq, %struct.DualQuat** %dq.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DualQuat** %dq.addr, metadata !7391, metadata !DIExpression()), !dbg !7392
  store [3 x float]* %defmat, [3 x float]** %defmat.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %defmat.addr, metadata !7393, metadata !DIExpression()), !dbg !7394
  call void @llvm.dbg.declare(metadata %struct.Mat4** %b_bone, metadata !7395, metadata !DIExpression()), !dbg !7396
  %0 = load %struct.bPoseChanDeform*, %struct.bPoseChanDeform** %pdef_info.addr, align 8, !dbg !7397
  %b_bone_mats = getelementptr inbounds %struct.bPoseChanDeform, %struct.bPoseChanDeform* %0, i32 0, i32 0, !dbg !7398
  %1 = load %struct.Mat4*, %struct.Mat4** %b_bone_mats, align 8, !dbg !7398
  store %struct.Mat4* %1, %struct.Mat4** %b_bone, align 8, !dbg !7396
  call void @llvm.dbg.declare(metadata [4 x float]** %mat, metadata !7399, metadata !DIExpression()), !dbg !7400
  %2 = load %struct.Mat4*, %struct.Mat4** %b_bone, align 8, !dbg !7401
  %arrayidx = getelementptr inbounds %struct.Mat4, %struct.Mat4* %2, i64 0, !dbg !7401
  %mat1 = getelementptr inbounds %struct.Mat4, %struct.Mat4* %arrayidx, i32 0, i32 0, !dbg !7402
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat1, i64 0, i64 0, !dbg !7401
  store [4 x float]* %arraydecay, [4 x float]** %mat, align 8, !dbg !7400
  call void @llvm.dbg.declare(metadata float* %segment, metadata !7403, metadata !DIExpression()), !dbg !7404
  call void @llvm.dbg.declare(metadata float* %y, metadata !7405, metadata !DIExpression()), !dbg !7406
  call void @llvm.dbg.declare(metadata i32* %a, metadata !7407, metadata !DIExpression()), !dbg !7408
  %3 = load [4 x float]*, [4 x float]** %mat, align 8, !dbg !7409
  %arrayidx2 = getelementptr inbounds [4 x float], [4 x float]* %3, i64 0, !dbg !7409
  %arrayidx3 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx2, i64 0, i64 1, !dbg !7409
  %4 = load float, float* %arrayidx3, align 4, !dbg !7409
  %5 = load float*, float** %co.addr, align 8, !dbg !7410
  %arrayidx4 = getelementptr inbounds float, float* %5, i64 0, !dbg !7410
  %6 = load float, float* %arrayidx4, align 4, !dbg !7410
  %mul = fmul float %4, %6, !dbg !7411
  %7 = load [4 x float]*, [4 x float]** %mat, align 8, !dbg !7412
  %arrayidx5 = getelementptr inbounds [4 x float], [4 x float]* %7, i64 1, !dbg !7412
  %arrayidx6 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx5, i64 0, i64 1, !dbg !7412
  %8 = load float, float* %arrayidx6, align 4, !dbg !7412
  %9 = load float*, float** %co.addr, align 8, !dbg !7413
  %arrayidx7 = getelementptr inbounds float, float* %9, i64 1, !dbg !7413
  %10 = load float, float* %arrayidx7, align 4, !dbg !7413
  %mul8 = fmul float %8, %10, !dbg !7414
  %add = fadd float %mul, %mul8, !dbg !7415
  %11 = load [4 x float]*, [4 x float]** %mat, align 8, !dbg !7416
  %arrayidx9 = getelementptr inbounds [4 x float], [4 x float]* %11, i64 2, !dbg !7416
  %arrayidx10 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx9, i64 0, i64 1, !dbg !7416
  %12 = load float, float* %arrayidx10, align 4, !dbg !7416
  %13 = load float*, float** %co.addr, align 8, !dbg !7417
  %arrayidx11 = getelementptr inbounds float, float* %13, i64 2, !dbg !7417
  %14 = load float, float* %arrayidx11, align 4, !dbg !7417
  %mul12 = fmul float %12, %14, !dbg !7418
  %add13 = fadd float %add, %mul12, !dbg !7419
  %15 = load [4 x float]*, [4 x float]** %mat, align 8, !dbg !7420
  %arrayidx14 = getelementptr inbounds [4 x float], [4 x float]* %15, i64 3, !dbg !7420
  %arrayidx15 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx14, i64 0, i64 1, !dbg !7420
  %16 = load float, float* %arrayidx15, align 4, !dbg !7420
  %add16 = fadd float %add13, %16, !dbg !7421
  store float %add16, float* %y, align 4, !dbg !7422
  %17 = load %struct.Bone*, %struct.Bone** %bone.addr, align 8, !dbg !7423
  %length = getelementptr inbounds %struct.Bone, %struct.Bone* %17, i32 0, i32 18, !dbg !7424
  %18 = load float, float* %length, align 4, !dbg !7424
  %19 = load %struct.Bone*, %struct.Bone** %bone.addr, align 8, !dbg !7425
  %segments = getelementptr inbounds %struct.Bone, %struct.Bone* %19, i32 0, i32 26, !dbg !7426
  %20 = load i16, i16* %segments, align 4, !dbg !7426
  %conv = sitofp i16 %20 to float, !dbg !7427
  %div = fdiv float %18, %conv, !dbg !7428
  store float %div, float* %segment, align 4, !dbg !7429
  %21 = load float, float* %y, align 4, !dbg !7430
  %22 = load float, float* %segment, align 4, !dbg !7431
  %div17 = fdiv float %21, %22, !dbg !7432
  %conv18 = fptosi float %div17 to i32, !dbg !7433
  store i32 %conv18, i32* %a, align 4, !dbg !7434
  %23 = load i32, i32* %a, align 4, !dbg !7435
  %cmp = icmp slt i32 %23, 0, !dbg !7435
  br i1 %cmp, label %if.then, label %if.else, !dbg !7438

if.then:                                          ; preds = %entry
  store i32 0, i32* %a, align 4, !dbg !7435
  br label %if.end28, !dbg !7435

if.else:                                          ; preds = %entry
  %24 = load i32, i32* %a, align 4, !dbg !7439
  %25 = load %struct.Bone*, %struct.Bone** %bone.addr, align 8, !dbg !7439
  %segments20 = getelementptr inbounds %struct.Bone, %struct.Bone* %25, i32 0, i32 26, !dbg !7439
  %26 = load i16, i16* %segments20, align 4, !dbg !7439
  %conv21 = sext i16 %26 to i32, !dbg !7439
  %sub = sub nsw i32 %conv21, 1, !dbg !7439
  %cmp22 = icmp sgt i32 %24, %sub, !dbg !7439
  br i1 %cmp22, label %if.then24, label %if.end, !dbg !7435

if.then24:                                        ; preds = %if.else
  %27 = load %struct.Bone*, %struct.Bone** %bone.addr, align 8, !dbg !7439
  %segments25 = getelementptr inbounds %struct.Bone, %struct.Bone* %27, i32 0, i32 26, !dbg !7439
  %28 = load i16, i16* %segments25, align 4, !dbg !7439
  %conv26 = sext i16 %28 to i32, !dbg !7439
  %sub27 = sub nsw i32 %conv26, 1, !dbg !7439
  store i32 %sub27, i32* %a, align 4, !dbg !7439
  br label %if.end, !dbg !7439

if.end:                                           ; preds = %if.then24, %if.else
  br label %if.end28

if.end28:                                         ; preds = %if.end, %if.then
  %29 = load %struct.DualQuat*, %struct.DualQuat** %dq.addr, align 8, !dbg !7441
  %tobool = icmp ne %struct.DualQuat* %29, null, !dbg !7441
  br i1 %tobool, label %if.then29, label %if.else31, !dbg !7443

if.then29:                                        ; preds = %if.end28
  %30 = load %struct.DualQuat*, %struct.DualQuat** %dq.addr, align 8, !dbg !7444
  %31 = load %struct.bPoseChanDeform*, %struct.bPoseChanDeform** %pdef_info.addr, align 8, !dbg !7446
  %b_bone_dual_quats = getelementptr inbounds %struct.bPoseChanDeform, %struct.bPoseChanDeform* %31, i32 0, i32 2, !dbg !7447
  %32 = load %struct.DualQuat*, %struct.DualQuat** %b_bone_dual_quats, align 8, !dbg !7447
  %33 = load i32, i32* %a, align 4, !dbg !7448
  %idxprom = sext i32 %33 to i64, !dbg !7449
  %arrayidx30 = getelementptr inbounds %struct.DualQuat, %struct.DualQuat* %32, i64 %idxprom, !dbg !7449
  call void @copy_dq_dq(%struct.DualQuat* %30, %struct.DualQuat* %arrayidx30), !dbg !7450
  br label %if.end45, !dbg !7451

if.else31:                                        ; preds = %if.end28
  %34 = load %struct.Mat4*, %struct.Mat4** %b_bone, align 8, !dbg !7452
  %35 = load i32, i32* %a, align 4, !dbg !7454
  %add32 = add nsw i32 %35, 1, !dbg !7455
  %idxprom33 = sext i32 %add32 to i64, !dbg !7452
  %arrayidx34 = getelementptr inbounds %struct.Mat4, %struct.Mat4* %34, i64 %idxprom33, !dbg !7452
  %mat35 = getelementptr inbounds %struct.Mat4, %struct.Mat4* %arrayidx34, i32 0, i32 0, !dbg !7456
  %arraydecay36 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat35, i64 0, i64 0, !dbg !7452
  %36 = load float*, float** %co.addr, align 8, !dbg !7457
  call void @mul_m4_v3([4 x float]* %arraydecay36, float* %36), !dbg !7458
  %37 = load [3 x float]*, [3 x float]** %defmat.addr, align 8, !dbg !7459
  %tobool37 = icmp ne [3 x float]* %37, null, !dbg !7459
  br i1 %tobool37, label %if.then38, label %if.end44, !dbg !7461

if.then38:                                        ; preds = %if.else31
  %38 = load [3 x float]*, [3 x float]** %defmat.addr, align 8, !dbg !7462
  %39 = load %struct.Mat4*, %struct.Mat4** %b_bone, align 8, !dbg !7464
  %40 = load i32, i32* %a, align 4, !dbg !7465
  %add39 = add nsw i32 %40, 1, !dbg !7466
  %idxprom40 = sext i32 %add39 to i64, !dbg !7464
  %arrayidx41 = getelementptr inbounds %struct.Mat4, %struct.Mat4* %39, i64 %idxprom40, !dbg !7464
  %mat42 = getelementptr inbounds %struct.Mat4, %struct.Mat4* %arrayidx41, i32 0, i32 0, !dbg !7467
  %arraydecay43 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %mat42, i64 0, i64 0, !dbg !7464
  call void @copy_m3_m4([3 x float]* %38, [4 x float]* %arraydecay43), !dbg !7468
  br label %if.end44, !dbg !7469

if.end44:                                         ; preds = %if.then38, %if.else31
  br label %if.end45

if.end45:                                         ; preds = %if.end44, %if.then29
  ret void, !dbg !7470
}

; Function Attrs: noinline nounwind uwtable
define internal void @pchan_deform_mat_add(%struct.bPoseChannel* %pchan, float %weight, [3 x float]* %bbonemat, [3 x float]* %mat) #0 !dbg !7471 {
entry:
  %pchan.addr = alloca %struct.bPoseChannel*, align 8
  %weight.addr = alloca float, align 4
  %bbonemat.addr = alloca [3 x float]*, align 8
  %mat.addr = alloca [3 x float]*, align 8
  %wmat = alloca [3 x [3 x float]], align 16
  store %struct.bPoseChannel* %pchan, %struct.bPoseChannel** %pchan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan.addr, metadata !7474, metadata !DIExpression()), !dbg !7475
  store float %weight, float* %weight.addr, align 4
  call void @llvm.dbg.declare(metadata float* %weight.addr, metadata !7476, metadata !DIExpression()), !dbg !7477
  store [3 x float]* %bbonemat, [3 x float]** %bbonemat.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %bbonemat.addr, metadata !7478, metadata !DIExpression()), !dbg !7479
  store [3 x float]* %mat, [3 x float]** %mat.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %mat.addr, metadata !7480, metadata !DIExpression()), !dbg !7481
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %wmat, metadata !7482, metadata !DIExpression()), !dbg !7483
  %0 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !7484
  %bone = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %0, i32 0, i32 12, !dbg !7486
  %1 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !7486
  %segments = getelementptr inbounds %struct.Bone, %struct.Bone* %1, i32 0, i32 26, !dbg !7487
  %2 = load i16, i16* %segments, align 4, !dbg !7487
  %conv = sext i16 %2 to i32, !dbg !7484
  %cmp = icmp sgt i32 %conv, 1, !dbg !7488
  br i1 %cmp, label %if.then, label %if.else, !dbg !7489

if.then:                                          ; preds = %entry
  %arraydecay = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %wmat, i64 0, i64 0, !dbg !7490
  %3 = load [3 x float]*, [3 x float]** %bbonemat.addr, align 8, !dbg !7491
  call void @copy_m3_m3([3 x float]* %arraydecay, [3 x float]* %3), !dbg !7492
  br label %if.end, !dbg !7492

if.else:                                          ; preds = %entry
  %arraydecay2 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %wmat, i64 0, i64 0, !dbg !7493
  %4 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !7494
  %chan_mat = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %4, i32 0, i32 28, !dbg !7495
  %arraydecay3 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %chan_mat, i64 0, i64 0, !dbg !7494
  call void @copy_m3_m4([3 x float]* %arraydecay2, [4 x float]* %arraydecay3), !dbg !7496
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %arraydecay4 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %wmat, i64 0, i64 0, !dbg !7497
  %5 = load float, float* %weight.addr, align 4, !dbg !7498
  call void @mul_m3_fl([3 x float]* %arraydecay4, float %5), !dbg !7499
  %6 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !7500
  %7 = load [3 x float]*, [3 x float]** %mat.addr, align 8, !dbg !7501
  %arraydecay5 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %wmat, i64 0, i64 0, !dbg !7502
  call void @add_m3_m3m3([3 x float]* %6, [3 x float]* %7, [3 x float]* %arraydecay5), !dbg !7503
  ret void, !dbg !7504
}

declare dso_local void @add_weighted_dq_dq(%struct.DualQuat*, %struct.DualQuat*, float) #2

declare dso_local void @copy_dq_dq(%struct.DualQuat*, %struct.DualQuat*) #2

declare dso_local void @add_m3_m3m3([3 x float]*, [3 x float]*, [3 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @madd_v3_v3fl(float* %r, float* %a, float %f) #0 !dbg !7505 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !7508, metadata !DIExpression()), !dbg !7509
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !7510, metadata !DIExpression()), !dbg !7511
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !7512, metadata !DIExpression()), !dbg !7513
  %0 = load float*, float** %a.addr, align 8, !dbg !7514
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7514
  %1 = load float, float* %arrayidx, align 4, !dbg !7514
  %2 = load float, float* %f.addr, align 4, !dbg !7515
  %mul = fmul float %1, %2, !dbg !7516
  %3 = load float*, float** %r.addr, align 8, !dbg !7517
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !7517
  %4 = load float, float* %arrayidx1, align 4, !dbg !7518
  %add = fadd float %4, %mul, !dbg !7518
  store float %add, float* %arrayidx1, align 4, !dbg !7518
  %5 = load float*, float** %a.addr, align 8, !dbg !7519
  %arrayidx2 = getelementptr inbounds float, float* %5, i64 1, !dbg !7519
  %6 = load float, float* %arrayidx2, align 4, !dbg !7519
  %7 = load float, float* %f.addr, align 4, !dbg !7520
  %mul3 = fmul float %6, %7, !dbg !7521
  %8 = load float*, float** %r.addr, align 8, !dbg !7522
  %arrayidx4 = getelementptr inbounds float, float* %8, i64 1, !dbg !7522
  %9 = load float, float* %arrayidx4, align 4, !dbg !7523
  %add5 = fadd float %9, %mul3, !dbg !7523
  store float %add5, float* %arrayidx4, align 4, !dbg !7523
  %10 = load float*, float** %a.addr, align 8, !dbg !7524
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !7524
  %11 = load float, float* %arrayidx6, align 4, !dbg !7524
  %12 = load float, float* %f.addr, align 4, !dbg !7525
  %mul7 = fmul float %11, %12, !dbg !7526
  %13 = load float*, float** %r.addr, align 8, !dbg !7527
  %arrayidx8 = getelementptr inbounds float, float* %13, i64 2, !dbg !7527
  %14 = load float, float* %arrayidx8, align 4, !dbg !7528
  %add9 = fadd float %14, %mul7, !dbg !7528
  store float %add9, float* %arrayidx8, align 4, !dbg !7528
  ret void, !dbg !7529
}

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_v3fl(float* %r, float* %a, float %f) #0 !dbg !7530 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !7531, metadata !DIExpression()), !dbg !7532
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !7533, metadata !DIExpression()), !dbg !7534
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !7535, metadata !DIExpression()), !dbg !7536
  %0 = load float*, float** %a.addr, align 8, !dbg !7537
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7537
  %1 = load float, float* %arrayidx, align 4, !dbg !7537
  %2 = load float, float* %f.addr, align 4, !dbg !7538
  %mul = fmul float %1, %2, !dbg !7539
  %3 = load float*, float** %r.addr, align 8, !dbg !7540
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !7540
  store float %mul, float* %arrayidx1, align 4, !dbg !7541
  %4 = load float*, float** %a.addr, align 8, !dbg !7542
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !7542
  %5 = load float, float* %arrayidx2, align 4, !dbg !7542
  %6 = load float, float* %f.addr, align 4, !dbg !7543
  %mul3 = fmul float %5, %6, !dbg !7544
  %7 = load float*, float** %r.addr, align 8, !dbg !7545
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !7545
  store float %mul3, float* %arrayidx4, align 4, !dbg !7546
  %8 = load float*, float** %a.addr, align 8, !dbg !7547
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !7547
  %9 = load float, float* %arrayidx5, align 4, !dbg !7547
  %10 = load float, float* %f.addr, align 4, !dbg !7548
  %mul6 = fmul float %9, %10, !dbg !7549
  %11 = load float*, float** %r.addr, align 8, !dbg !7550
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 2, !dbg !7550
  store float %mul6, float* %arrayidx7, align 4, !dbg !7551
  ret void, !dbg !7552
}

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v3(float* %r) #0 !dbg !7553 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !7556, metadata !DIExpression()), !dbg !7557
  %0 = load float*, float** %r.addr, align 8, !dbg !7558
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !7558
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !7559
  %1 = load float*, float** %r.addr, align 8, !dbg !7560
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !7560
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !7561
  %2 = load float*, float** %r.addr, align 8, !dbg !7562
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 2, !dbg !7562
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !7563
  ret void, !dbg !7564
}

; Function Attrs: noinline nounwind uwtable
define internal float @len_v3(float* %a) #0 !dbg !7565 {
entry:
  %a.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !7566, metadata !DIExpression()), !dbg !7567
  %0 = load float*, float** %a.addr, align 8, !dbg !7568
  %1 = load float*, float** %a.addr, align 8, !dbg !7569
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !7570
  %call1 = call float @sqrtf(float %call) #7, !dbg !7571
  ret float %call1, !dbg !7572
}

declare dso_local %struct.bPoseChannel* @BKE_pose_channel_verify(%struct.bPose*, i8*) #2

declare dso_local i32 @printf(i8*, ...) #2

declare dso_local void @BKE_pose_rest(%struct.bPose*) #2

declare dso_local void @IDP_SyncGroupValues(%struct.IDProperty*, %struct.IDProperty*) #2

declare dso_local void @BKE_constraints_proxylocal_extract(%struct.ListBase*, %struct.ListBase*) #2

declare dso_local void @BKE_constraints_copy(%struct.ListBase*, %struct.ListBase*, i8 zeroext) #2

declare dso_local void @BLI_movelisttolist(%struct.ListBase*, %struct.ListBase*) #2

declare dso_local %struct.bConstraintTypeInfo* @BKE_constraint_typeinfo_get(%struct.bConstraint*) #2

declare dso_local void @id_us_plus(%struct.ID*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @splineik_init_tree_from_pchan(%struct.Scene* %scene, %struct.Object* %UNUSED_ob, %struct.bPoseChannel* %pchan_tip) #0 !dbg !7573 {
entry:
  %scene.addr = alloca %struct.Scene*, align 8
  %UNUSED_ob.addr = alloca %struct.Object*, align 8
  %pchan_tip.addr = alloca %struct.bPoseChannel*, align 8
  %pchan = alloca %struct.bPoseChannel*, align 8
  %pchanRoot = alloca %struct.bPoseChannel*, align 8
  %pchanChain = alloca [255 x %struct.bPoseChannel*], align 16
  %con = alloca %struct.bConstraint*, align 8
  %ikData = alloca %struct.bSplineIKConstraint*, align 8
  %boneLengths = alloca [255 x float], align 16
  %jointPoints = alloca float*, align 8
  %totLength = alloca float, align 4
  %free_joints = alloca i8, align 1
  %segcount = alloca i32, align 4
  %segmentLen = alloca float, align 4
  %i = alloca i32, align 4
  %splineLen = alloca float, align 4
  %maxScale = alloca float, align 4
  %i153 = alloca i32, align 4
  %tree = alloca %struct.tSplineIK_Tree*, align 8
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !7576, metadata !DIExpression()), !dbg !7577
  store %struct.Object* %UNUSED_ob, %struct.Object** %UNUSED_ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %UNUSED_ob.addr, metadata !7578, metadata !DIExpression()), !dbg !7579
  store %struct.bPoseChannel* %pchan_tip, %struct.bPoseChannel** %pchan_tip.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan_tip.addr, metadata !7580, metadata !DIExpression()), !dbg !7581
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan, metadata !7582, metadata !DIExpression()), !dbg !7583
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchanRoot, metadata !7584, metadata !DIExpression()), !dbg !7585
  store %struct.bPoseChannel* null, %struct.bPoseChannel** %pchanRoot, align 8, !dbg !7585
  call void @llvm.dbg.declare(metadata [255 x %struct.bPoseChannel*]* %pchanChain, metadata !7586, metadata !DIExpression()), !dbg !7590
  call void @llvm.dbg.declare(metadata %struct.bConstraint** %con, metadata !7591, metadata !DIExpression()), !dbg !7592
  store %struct.bConstraint* null, %struct.bConstraint** %con, align 8, !dbg !7592
  call void @llvm.dbg.declare(metadata %struct.bSplineIKConstraint** %ikData, metadata !7593, metadata !DIExpression()), !dbg !7594
  store %struct.bSplineIKConstraint* null, %struct.bSplineIKConstraint** %ikData, align 8, !dbg !7594
  call void @llvm.dbg.declare(metadata [255 x float]* %boneLengths, metadata !7595, metadata !DIExpression()), !dbg !7597
  call void @llvm.dbg.declare(metadata float** %jointPoints, metadata !7598, metadata !DIExpression()), !dbg !7599
  call void @llvm.dbg.declare(metadata float* %totLength, metadata !7600, metadata !DIExpression()), !dbg !7601
  store float 0.000000e+00, float* %totLength, align 4, !dbg !7601
  call void @llvm.dbg.declare(metadata i8* %free_joints, metadata !7602, metadata !DIExpression()), !dbg !7603
  store i8 0, i8* %free_joints, align 1, !dbg !7603
  call void @llvm.dbg.declare(metadata i32* %segcount, metadata !7604, metadata !DIExpression()), !dbg !7605
  store i32 0, i32* %segcount, align 4, !dbg !7605
  %0 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan_tip.addr, align 8, !dbg !7606
  %constraints = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %0, i32 0, i32 3, !dbg !7608
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %constraints, i32 0, i32 0, !dbg !7609
  %1 = load i8*, i8** %first, align 8, !dbg !7609
  %2 = bitcast i8* %1 to %struct.bConstraint*, !dbg !7606
  store %struct.bConstraint* %2, %struct.bConstraint** %con, align 8, !dbg !7610
  br label %for.cond, !dbg !7611

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !7612
  %tobool = icmp ne %struct.bConstraint* %3, null, !dbg !7614
  br i1 %tobool, label %for.body, label %for.end, !dbg !7614

for.body:                                         ; preds = %for.cond
  %4 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !7615
  %type = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %4, i32 0, i32 3, !dbg !7618
  %5 = load i16, i16* %type, align 8, !dbg !7618
  %conv = sext i16 %5 to i32, !dbg !7615
  %cmp = icmp eq i32 %conv, 22, !dbg !7619
  br i1 %cmp, label %if.then, label %if.end17, !dbg !7620

if.then:                                          ; preds = %for.body
  %6 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !7621
  %data = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %6, i32 0, i32 2, !dbg !7623
  %7 = load i8*, i8** %data, align 8, !dbg !7623
  %8 = bitcast i8* %7 to %struct.bSplineIKConstraint*, !dbg !7621
  store %struct.bSplineIKConstraint* %8, %struct.bSplineIKConstraint** %ikData, align 8, !dbg !7624
  %9 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %ikData, align 8, !dbg !7625
  %tar = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %9, i32 0, i32 0, !dbg !7627
  %10 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !7627
  %cmp2 = icmp eq %struct.Object* %10, null, !dbg !7628
  br i1 %cmp2, label %if.then9, label %lor.lhs.false, !dbg !7629

lor.lhs.false:                                    ; preds = %if.then
  %11 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %ikData, align 8, !dbg !7630
  %tar4 = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %11, i32 0, i32 0, !dbg !7631
  %12 = load %struct.Object*, %struct.Object** %tar4, align 8, !dbg !7631
  %type5 = getelementptr inbounds %struct.Object, %struct.Object* %12, i32 0, i32 3, !dbg !7632
  %13 = load i16, i16* %type5, align 8, !dbg !7632
  %conv6 = sext i16 %13 to i32, !dbg !7630
  %cmp7 = icmp ne i32 %conv6, 2, !dbg !7633
  br i1 %cmp7, label %if.then9, label %if.end, !dbg !7634

if.then9:                                         ; preds = %lor.lhs.false, %if.then
  br label %for.inc, !dbg !7635

if.end:                                           ; preds = %lor.lhs.false
  %14 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !7636
  %enforce = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %14, i32 0, i32 9, !dbg !7638
  %15 = load float, float* %enforce, align 8, !dbg !7638
  %cmp10 = fcmp oeq float %15, 0.000000e+00, !dbg !7639
  br i1 %cmp10, label %if.then15, label %lor.lhs.false12, !dbg !7640

lor.lhs.false12:                                  ; preds = %if.end
  %16 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !7641
  %flag = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %16, i32 0, i32 4, !dbg !7642
  %17 = load i16, i16* %flag, align 2, !dbg !7642
  %conv13 = sext i16 %17 to i32, !dbg !7641
  %and = and i32 %conv13, 516, !dbg !7643
  %tobool14 = icmp ne i32 %and, 0, !dbg !7643
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !7644

if.then15:                                        ; preds = %lor.lhs.false12, %if.end
  br label %for.inc, !dbg !7645

if.end16:                                         ; preds = %lor.lhs.false12
  br label %for.end, !dbg !7646

if.end17:                                         ; preds = %for.body
  br label %for.inc, !dbg !7647

for.inc:                                          ; preds = %if.end17, %if.then15, %if.then9
  %18 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !7648
  %next = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %18, i32 0, i32 0, !dbg !7649
  %19 = load %struct.bConstraint*, %struct.bConstraint** %next, align 8, !dbg !7649
  store %struct.bConstraint* %19, %struct.bConstraint** %con, align 8, !dbg !7650
  br label %for.cond, !dbg !7651, !llvm.loop !7652

for.end:                                          ; preds = %if.end16, %for.cond
  %20 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !7654
  %cmp18 = icmp eq %struct.bConstraint* %20, null, !dbg !7656
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !7657

if.then20:                                        ; preds = %for.end
  br label %return, !dbg !7658

if.end21:                                         ; preds = %for.end
  %21 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %ikData, align 8, !dbg !7659
  %tar22 = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %21, i32 0, i32 0, !dbg !7661
  %22 = load %struct.Object*, %struct.Object** %tar22, align 8, !dbg !7661
  %tobool23 = icmp ne %struct.Object* %22, null, !dbg !7659
  br i1 %tobool23, label %if.then24, label %if.end57, !dbg !7662

if.then24:                                        ; preds = %if.end21
  %23 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %ikData, align 8, !dbg !7663
  %tar25 = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %23, i32 0, i32 0, !dbg !7663
  %24 = load %struct.Object*, %struct.Object** %tar25, align 8, !dbg !7663
  %curve_cache = getelementptr inbounds %struct.Object, %struct.Object* %24, i32 0, i32 118, !dbg !7663
  %25 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache, align 8, !dbg !7663
  %cmp26 = icmp eq %struct.CurveCache* null, %25, !dbg !7663
  br i1 %cmp26, label %if.then40, label %lor.lhs.false28, !dbg !7663

lor.lhs.false28:                                  ; preds = %if.then24
  %26 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %ikData, align 8, !dbg !7663
  %tar29 = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %26, i32 0, i32 0, !dbg !7663
  %27 = load %struct.Object*, %struct.Object** %tar29, align 8, !dbg !7663
  %curve_cache30 = getelementptr inbounds %struct.Object, %struct.Object* %27, i32 0, i32 118, !dbg !7663
  %28 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache30, align 8, !dbg !7663
  %path = getelementptr inbounds %struct.CurveCache, %struct.CurveCache* %28, i32 0, i32 3, !dbg !7663
  %29 = load %struct.Path*, %struct.Path** %path, align 8, !dbg !7663
  %cmp31 = icmp eq %struct.Path* null, %29, !dbg !7663
  br i1 %cmp31, label %if.then40, label %lor.lhs.false33, !dbg !7663

lor.lhs.false33:                                  ; preds = %lor.lhs.false28
  %30 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %ikData, align 8, !dbg !7663
  %tar34 = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %30, i32 0, i32 0, !dbg !7663
  %31 = load %struct.Object*, %struct.Object** %tar34, align 8, !dbg !7663
  %curve_cache35 = getelementptr inbounds %struct.Object, %struct.Object* %31, i32 0, i32 118, !dbg !7663
  %32 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache35, align 8, !dbg !7663
  %path36 = getelementptr inbounds %struct.CurveCache, %struct.CurveCache* %32, i32 0, i32 3, !dbg !7663
  %33 = load %struct.Path*, %struct.Path** %path36, align 8, !dbg !7663
  %data37 = getelementptr inbounds %struct.Path, %struct.Path* %33, i32 0, i32 0, !dbg !7663
  %34 = load %struct.PathPoint*, %struct.PathPoint** %data37, align 8, !dbg !7663
  %cmp38 = icmp eq %struct.PathPoint* null, %34, !dbg !7663
  br i1 %cmp38, label %if.then40, label %if.end56, !dbg !7666

if.then40:                                        ; preds = %lor.lhs.false33, %lor.lhs.false28, %if.then24
  %35 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7667
  %36 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %ikData, align 8, !dbg !7669
  %tar41 = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %36, i32 0, i32 0, !dbg !7670
  %37 = load %struct.Object*, %struct.Object** %tar41, align 8, !dbg !7670
  call void @BKE_displist_make_curveTypes(%struct.Scene* %35, %struct.Object* %37, i8 zeroext 0), !dbg !7671
  %38 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %ikData, align 8, !dbg !7672
  %tar42 = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %38, i32 0, i32 0, !dbg !7672
  %39 = load %struct.Object*, %struct.Object** %tar42, align 8, !dbg !7672
  %curve_cache43 = getelementptr inbounds %struct.Object, %struct.Object* %39, i32 0, i32 118, !dbg !7672
  %40 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache43, align 8, !dbg !7672
  %path44 = getelementptr inbounds %struct.CurveCache, %struct.CurveCache* %40, i32 0, i32 3, !dbg !7672
  %41 = load %struct.Path*, %struct.Path** %path44, align 8, !dbg !7672
  %cmp45 = icmp eq %struct.Path* null, %41, !dbg !7672
  br i1 %cmp45, label %if.then54, label %lor.lhs.false47, !dbg !7672

lor.lhs.false47:                                  ; preds = %if.then40
  %42 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %ikData, align 8, !dbg !7672
  %tar48 = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %42, i32 0, i32 0, !dbg !7672
  %43 = load %struct.Object*, %struct.Object** %tar48, align 8, !dbg !7672
  %curve_cache49 = getelementptr inbounds %struct.Object, %struct.Object* %43, i32 0, i32 118, !dbg !7672
  %44 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache49, align 8, !dbg !7672
  %path50 = getelementptr inbounds %struct.CurveCache, %struct.CurveCache* %44, i32 0, i32 3, !dbg !7672
  %45 = load %struct.Path*, %struct.Path** %path50, align 8, !dbg !7672
  %data51 = getelementptr inbounds %struct.Path, %struct.Path* %45, i32 0, i32 0, !dbg !7672
  %46 = load %struct.PathPoint*, %struct.PathPoint** %data51, align 8, !dbg !7672
  %cmp52 = icmp eq %struct.PathPoint* null, %46, !dbg !7672
  br i1 %cmp52, label %if.then54, label %if.end55, !dbg !7674

if.then54:                                        ; preds = %lor.lhs.false47, %if.then40
  br label %return, !dbg !7675

if.end55:                                         ; preds = %lor.lhs.false47
  br label %if.end56, !dbg !7677

if.end56:                                         ; preds = %if.end55, %lor.lhs.false33
  br label %if.end57, !dbg !7678

if.end57:                                         ; preds = %if.end56, %if.end21
  %47 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan_tip.addr, align 8, !dbg !7679
  store %struct.bPoseChannel* %47, %struct.bPoseChannel** %pchan, align 8, !dbg !7681
  br label %for.cond58, !dbg !7682

for.cond58:                                       ; preds = %for.inc68, %if.end57
  %48 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !7683
  %tobool59 = icmp ne %struct.bPoseChannel* %48, null, !dbg !7683
  br i1 %tobool59, label %land.rhs, label %land.end, !dbg !7685

land.rhs:                                         ; preds = %for.cond58
  %49 = load i32, i32* %segcount, align 4, !dbg !7686
  %50 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %ikData, align 8, !dbg !7687
  %chainlen = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %50, i32 0, i32 3, !dbg !7688
  %51 = load i16, i16* %chainlen, align 2, !dbg !7688
  %conv60 = sext i16 %51 to i32, !dbg !7687
  %cmp61 = icmp slt i32 %49, %conv60, !dbg !7689
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond58
  %52 = phi i1 [ false, %for.cond58 ], [ %cmp61, %land.rhs ], !dbg !7690
  br i1 %52, label %for.body63, label %for.end69, !dbg !7691

for.body63:                                       ; preds = %land.end
  %53 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !7692
  %54 = load i32, i32* %segcount, align 4, !dbg !7694
  %idxprom = sext i32 %54 to i64, !dbg !7695
  %arrayidx = getelementptr inbounds [255 x %struct.bPoseChannel*], [255 x %struct.bPoseChannel*]* %pchanChain, i64 0, i64 %idxprom, !dbg !7695
  store %struct.bPoseChannel* %53, %struct.bPoseChannel** %arrayidx, align 8, !dbg !7696
  %55 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !7697
  %bone = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %55, i32 0, i32 12, !dbg !7698
  %56 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !7698
  %length = getelementptr inbounds %struct.Bone, %struct.Bone* %56, i32 0, i32 18, !dbg !7699
  %57 = load float, float* %length, align 4, !dbg !7699
  %58 = load i32, i32* %segcount, align 4, !dbg !7700
  %idxprom64 = sext i32 %58 to i64, !dbg !7701
  %arrayidx65 = getelementptr inbounds [255 x float], [255 x float]* %boneLengths, i64 0, i64 %idxprom64, !dbg !7701
  store float %57, float* %arrayidx65, align 4, !dbg !7702
  %59 = load i32, i32* %segcount, align 4, !dbg !7703
  %idxprom66 = sext i32 %59 to i64, !dbg !7704
  %arrayidx67 = getelementptr inbounds [255 x float], [255 x float]* %boneLengths, i64 0, i64 %idxprom66, !dbg !7704
  %60 = load float, float* %arrayidx67, align 4, !dbg !7704
  %61 = load float, float* %totLength, align 4, !dbg !7705
  %add = fadd float %61, %60, !dbg !7705
  store float %add, float* %totLength, align 4, !dbg !7705
  br label %for.inc68, !dbg !7706

for.inc68:                                        ; preds = %for.body63
  %62 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !7707
  %parent = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %62, i32 0, i32 13, !dbg !7708
  %63 = load %struct.bPoseChannel*, %struct.bPoseChannel** %parent, align 8, !dbg !7708
  store %struct.bPoseChannel* %63, %struct.bPoseChannel** %pchan, align 8, !dbg !7709
  %64 = load i32, i32* %segcount, align 4, !dbg !7710
  %inc = add nsw i32 %64, 1, !dbg !7710
  store i32 %inc, i32* %segcount, align 4, !dbg !7710
  br label %for.cond58, !dbg !7711, !llvm.loop !7712

for.end69:                                        ; preds = %land.end
  %65 = load i32, i32* %segcount, align 4, !dbg !7714
  %cmp70 = icmp eq i32 %65, 0, !dbg !7716
  br i1 %cmp70, label %if.then72, label %if.else, !dbg !7717

if.then72:                                        ; preds = %for.end69
  br label %return, !dbg !7718

if.else:                                          ; preds = %for.end69
  %66 = load i32, i32* %segcount, align 4, !dbg !7719
  %sub = sub nsw i32 %66, 1, !dbg !7720
  %idxprom73 = sext i32 %sub to i64, !dbg !7721
  %arrayidx74 = getelementptr inbounds [255 x %struct.bPoseChannel*], [255 x %struct.bPoseChannel*]* %pchanChain, i64 0, i64 %idxprom73, !dbg !7721
  %67 = load %struct.bPoseChannel*, %struct.bPoseChannel** %arrayidx74, align 8, !dbg !7721
  store %struct.bPoseChannel* %67, %struct.bPoseChannel** %pchanRoot, align 8, !dbg !7722
  br label %if.end75

if.end75:                                         ; preds = %if.else
  %68 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %ikData, align 8, !dbg !7723
  %flag76 = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %68, i32 0, i32 4, !dbg !7725
  %69 = load i16, i16* %flag76, align 4, !dbg !7725
  %conv77 = sext i16 %69 to i32, !dbg !7723
  %and78 = and i32 %conv77, 1, !dbg !7726
  %cmp79 = icmp eq i32 %and78, 0, !dbg !7727
  br i1 %cmp79, label %if.then81, label %if.end145, !dbg !7728

if.then81:                                        ; preds = %if.end75
  call void @llvm.dbg.declare(metadata float* %segmentLen, metadata !7729, metadata !DIExpression()), !dbg !7731
  %70 = load i32, i32* %segcount, align 4, !dbg !7732
  %conv82 = sitofp i32 %70 to float, !dbg !7733
  %div = fdiv float 1.000000e+00, %conv82, !dbg !7734
  store float %div, float* %segmentLen, align 4, !dbg !7731
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7735, metadata !DIExpression()), !dbg !7736
  %71 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %ikData, align 8, !dbg !7737
  %points = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %71, i32 0, i32 1, !dbg !7739
  %72 = load float*, float** %points, align 8, !dbg !7739
  %tobool83 = icmp ne float* %72, null, !dbg !7737
  br i1 %tobool83, label %if.then84, label %if.end86, !dbg !7740

if.then84:                                        ; preds = %if.then81
  %73 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !7741
  %74 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %ikData, align 8, !dbg !7742
  %points85 = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %74, i32 0, i32 1, !dbg !7743
  %75 = load float*, float** %points85, align 8, !dbg !7743
  %76 = bitcast float* %75 to i8*, !dbg !7742
  call void %73(i8* %76), !dbg !7741
  br label %if.end86, !dbg !7741

if.end86:                                         ; preds = %if.then84, %if.then81
  %77 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %ikData, align 8, !dbg !7744
  %chainlen87 = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %77, i32 0, i32 3, !dbg !7745
  %78 = load i16, i16* %chainlen87, align 2, !dbg !7745
  %conv88 = sext i16 %78 to i32, !dbg !7744
  %add89 = add nsw i32 %conv88, 1, !dbg !7746
  %conv90 = trunc i32 %add89 to i16, !dbg !7744
  %79 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %ikData, align 8, !dbg !7747
  %numpoints = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %79, i32 0, i32 2, !dbg !7748
  store i16 %conv90, i16* %numpoints, align 8, !dbg !7749
  %80 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !7750
  %81 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %ikData, align 8, !dbg !7751
  %numpoints91 = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %81, i32 0, i32 2, !dbg !7752
  %82 = load i16, i16* %numpoints91, align 8, !dbg !7752
  %conv92 = sext i16 %82 to i64, !dbg !7751
  %mul = mul i64 4, %conv92, !dbg !7753
  %call = call i8* %80(i64 %mul, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.15, i64 0, i64 0)), !dbg !7750
  %83 = bitcast i8* %call to float*, !dbg !7750
  %84 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %ikData, align 8, !dbg !7754
  %points93 = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %84, i32 0, i32 1, !dbg !7755
  store float* %83, float** %points93, align 8, !dbg !7756
  %85 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %ikData, align 8, !dbg !7757
  %points94 = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %85, i32 0, i32 1, !dbg !7758
  %86 = load float*, float** %points94, align 8, !dbg !7758
  %arrayidx95 = getelementptr inbounds float, float* %86, i64 0, !dbg !7757
  store float 1.000000e+00, float* %arrayidx95, align 4, !dbg !7759
  store i32 0, i32* %i, align 4, !dbg !7760
  br label %for.cond96, !dbg !7762

for.cond96:                                       ; preds = %for.inc129, %if.end86
  %87 = load i32, i32* %i, align 4, !dbg !7763
  %88 = load i32, i32* %segcount, align 4, !dbg !7765
  %cmp97 = icmp slt i32 %87, %88, !dbg !7766
  br i1 %cmp97, label %for.body99, label %for.end131, !dbg !7767

for.body99:                                       ; preds = %for.cond96
  %89 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %ikData, align 8, !dbg !7768
  %flag100 = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %89, i32 0, i32 4, !dbg !7771
  %90 = load i16, i16* %flag100, align 4, !dbg !7771
  %conv101 = sext i16 %90 to i32, !dbg !7768
  %and102 = and i32 %conv101, 8, !dbg !7772
  %tobool103 = icmp ne i32 %and102, 0, !dbg !7772
  br i1 %tobool103, label %if.then107, label %lor.lhs.false104, !dbg !7773

lor.lhs.false104:                                 ; preds = %for.body99
  %91 = load float, float* %totLength, align 4, !dbg !7774
  %cmp105 = fcmp oeq float %91, 0.000000e+00, !dbg !7775
  br i1 %cmp105, label %if.then107, label %if.else116, !dbg !7776

if.then107:                                       ; preds = %lor.lhs.false104, %for.body99
  %92 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %ikData, align 8, !dbg !7777
  %points108 = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %92, i32 0, i32 1, !dbg !7779
  %93 = load float*, float** %points108, align 8, !dbg !7779
  %94 = load i32, i32* %i, align 4, !dbg !7780
  %idxprom109 = sext i32 %94 to i64, !dbg !7777
  %arrayidx110 = getelementptr inbounds float, float* %93, i64 %idxprom109, !dbg !7777
  %95 = load float, float* %arrayidx110, align 4, !dbg !7777
  %96 = load float, float* %segmentLen, align 4, !dbg !7781
  %sub111 = fsub float %95, %96, !dbg !7782
  %97 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %ikData, align 8, !dbg !7783
  %points112 = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %97, i32 0, i32 1, !dbg !7784
  %98 = load float*, float** %points112, align 8, !dbg !7784
  %99 = load i32, i32* %i, align 4, !dbg !7785
  %add113 = add nsw i32 %99, 1, !dbg !7786
  %idxprom114 = sext i32 %add113 to i64, !dbg !7783
  %arrayidx115 = getelementptr inbounds float, float* %98, i64 %idxprom114, !dbg !7783
  store float %sub111, float* %arrayidx115, align 4, !dbg !7787
  br label %if.end128, !dbg !7788

if.else116:                                       ; preds = %lor.lhs.false104
  %100 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %ikData, align 8, !dbg !7789
  %points117 = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %100, i32 0, i32 1, !dbg !7791
  %101 = load float*, float** %points117, align 8, !dbg !7791
  %102 = load i32, i32* %i, align 4, !dbg !7792
  %idxprom118 = sext i32 %102 to i64, !dbg !7789
  %arrayidx119 = getelementptr inbounds float, float* %101, i64 %idxprom118, !dbg !7789
  %103 = load float, float* %arrayidx119, align 4, !dbg !7789
  %104 = load i32, i32* %i, align 4, !dbg !7793
  %idxprom120 = sext i32 %104 to i64, !dbg !7794
  %arrayidx121 = getelementptr inbounds [255 x float], [255 x float]* %boneLengths, i64 0, i64 %idxprom120, !dbg !7794
  %105 = load float, float* %arrayidx121, align 4, !dbg !7794
  %106 = load float, float* %totLength, align 4, !dbg !7795
  %div122 = fdiv float %105, %106, !dbg !7796
  %sub123 = fsub float %103, %div122, !dbg !7797
  %107 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %ikData, align 8, !dbg !7798
  %points124 = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %107, i32 0, i32 1, !dbg !7799
  %108 = load float*, float** %points124, align 8, !dbg !7799
  %109 = load i32, i32* %i, align 4, !dbg !7800
  %add125 = add nsw i32 %109, 1, !dbg !7801
  %idxprom126 = sext i32 %add125 to i64, !dbg !7798
  %arrayidx127 = getelementptr inbounds float, float* %108, i64 %idxprom126, !dbg !7798
  store float %sub123, float* %arrayidx127, align 4, !dbg !7802
  br label %if.end128

if.end128:                                        ; preds = %if.else116, %if.then107
  br label %for.inc129, !dbg !7803

for.inc129:                                       ; preds = %if.end128
  %110 = load i32, i32* %i, align 4, !dbg !7804
  %inc130 = add nsw i32 %110, 1, !dbg !7804
  store i32 %inc130, i32* %i, align 4, !dbg !7804
  br label %for.cond96, !dbg !7805, !llvm.loop !7806

for.end131:                                       ; preds = %for.cond96
  %111 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %ikData, align 8, !dbg !7808
  %points132 = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %111, i32 0, i32 1, !dbg !7808
  %112 = load float*, float** %points132, align 8, !dbg !7808
  %113 = load i32, i32* %segcount, align 4, !dbg !7808
  %idxprom133 = sext i32 %113 to i64, !dbg !7808
  %arrayidx134 = getelementptr inbounds float, float* %112, i64 %idxprom133, !dbg !7808
  %114 = load float, float* %arrayidx134, align 4, !dbg !7808
  %cmp135 = fcmp olt float %114, 0.000000e+00, !dbg !7808
  br i1 %cmp135, label %if.then137, label %if.end141, !dbg !7811

if.then137:                                       ; preds = %for.end131
  %115 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %ikData, align 8, !dbg !7808
  %points138 = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %115, i32 0, i32 1, !dbg !7808
  %116 = load float*, float** %points138, align 8, !dbg !7808
  %117 = load i32, i32* %segcount, align 4, !dbg !7808
  %idxprom139 = sext i32 %117 to i64, !dbg !7808
  %arrayidx140 = getelementptr inbounds float, float* %116, i64 %idxprom139, !dbg !7808
  store float 0.000000e+00, float* %arrayidx140, align 4, !dbg !7808
  br label %if.end141, !dbg !7808

if.end141:                                        ; preds = %if.then137, %for.end131
  %118 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %ikData, align 8, !dbg !7812
  %flag142 = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %118, i32 0, i32 4, !dbg !7813
  %119 = load i16, i16* %flag142, align 4, !dbg !7814
  %conv143 = sext i16 %119 to i32, !dbg !7814
  %or = or i32 %conv143, 1, !dbg !7814
  %conv144 = trunc i32 %or to i16, !dbg !7814
  store i16 %conv144, i16* %flag142, align 4, !dbg !7814
  br label %if.end145, !dbg !7815

if.end145:                                        ; preds = %if.end141, %if.end75
  %120 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %ikData, align 8, !dbg !7816
  %flag146 = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %120, i32 0, i32 4, !dbg !7818
  %121 = load i16, i16* %flag146, align 4, !dbg !7818
  %conv147 = sext i16 %121 to i32, !dbg !7816
  %and148 = and i32 %conv147, 4, !dbg !7819
  %tobool149 = icmp ne i32 %and148, 0, !dbg !7819
  br i1 %tobool149, label %land.lhs.true, label %if.else170, !dbg !7820

land.lhs.true:                                    ; preds = %if.end145
  %122 = load float, float* %totLength, align 4, !dbg !7821
  %cmp150 = fcmp une float %122, 0.000000e+00, !dbg !7822
  br i1 %cmp150, label %if.then152, label %if.else170, !dbg !7823

if.then152:                                       ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata float* %splineLen, metadata !7824, metadata !DIExpression()), !dbg !7826
  call void @llvm.dbg.declare(metadata float* %maxScale, metadata !7827, metadata !DIExpression()), !dbg !7828
  call void @llvm.dbg.declare(metadata i32* %i153, metadata !7829, metadata !DIExpression()), !dbg !7830
  %123 = load i8* (i8*)*, i8* (i8*)** @MEM_dupallocN, align 8, !dbg !7831
  %124 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %ikData, align 8, !dbg !7832
  %points154 = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %124, i32 0, i32 1, !dbg !7833
  %125 = load float*, float** %points154, align 8, !dbg !7833
  %126 = bitcast float* %125 to i8*, !dbg !7832
  %call155 = call i8* %123(i8* %126), !dbg !7831
  %127 = bitcast i8* %call155 to float*, !dbg !7831
  store float* %127, float** %jointPoints, align 8, !dbg !7834
  store i8 1, i8* %free_joints, align 1, !dbg !7835
  %128 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %ikData, align 8, !dbg !7836
  %tar156 = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %128, i32 0, i32 0, !dbg !7837
  %129 = load %struct.Object*, %struct.Object** %tar156, align 8, !dbg !7837
  %curve_cache157 = getelementptr inbounds %struct.Object, %struct.Object* %129, i32 0, i32 118, !dbg !7838
  %130 = load %struct.CurveCache*, %struct.CurveCache** %curve_cache157, align 8, !dbg !7838
  %path158 = getelementptr inbounds %struct.CurveCache, %struct.CurveCache* %130, i32 0, i32 3, !dbg !7839
  %131 = load %struct.Path*, %struct.Path** %path158, align 8, !dbg !7839
  %totdist = getelementptr inbounds %struct.Path, %struct.Path* %131, i32 0, i32 2, !dbg !7840
  %132 = load float, float* %totdist, align 4, !dbg !7840
  store float %132, float* %splineLen, align 4, !dbg !7841
  %133 = load float, float* %totLength, align 4, !dbg !7842
  %134 = load float, float* %splineLen, align 4, !dbg !7843
  %div159 = fdiv float %133, %134, !dbg !7844
  store float %div159, float* %maxScale, align 4, !dbg !7845
  store i32 0, i32* %i153, align 4, !dbg !7846
  br label %for.cond160, !dbg !7848

for.cond160:                                      ; preds = %for.inc167, %if.then152
  %135 = load i32, i32* %i153, align 4, !dbg !7849
  %136 = load i32, i32* %segcount, align 4, !dbg !7851
  %cmp161 = icmp slt i32 %135, %136, !dbg !7852
  br i1 %cmp161, label %for.body163, label %for.end169, !dbg !7853

for.body163:                                      ; preds = %for.cond160
  %137 = load float, float* %maxScale, align 4, !dbg !7854
  %138 = load float*, float** %jointPoints, align 8, !dbg !7855
  %139 = load i32, i32* %i153, align 4, !dbg !7856
  %idxprom164 = sext i32 %139 to i64, !dbg !7855
  %arrayidx165 = getelementptr inbounds float, float* %138, i64 %idxprom164, !dbg !7855
  %140 = load float, float* %arrayidx165, align 4, !dbg !7857
  %mul166 = fmul float %140, %137, !dbg !7857
  store float %mul166, float* %arrayidx165, align 4, !dbg !7857
  br label %for.inc167, !dbg !7855

for.inc167:                                       ; preds = %for.body163
  %141 = load i32, i32* %i153, align 4, !dbg !7858
  %inc168 = add nsw i32 %141, 1, !dbg !7858
  store i32 %inc168, i32* %i153, align 4, !dbg !7858
  br label %for.cond160, !dbg !7859, !llvm.loop !7860

for.end169:                                       ; preds = %for.cond160
  br label %if.end172, !dbg !7862

if.else170:                                       ; preds = %land.lhs.true, %if.end145
  %142 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %ikData, align 8, !dbg !7863
  %points171 = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %142, i32 0, i32 1, !dbg !7865
  %143 = load float*, float** %points171, align 8, !dbg !7865
  store float* %143, float** %jointPoints, align 8, !dbg !7866
  store i8 0, i8* %free_joints, align 1, !dbg !7867
  br label %if.end172

if.end172:                                        ; preds = %if.else170, %for.end169
  call void @llvm.dbg.declare(metadata %struct.tSplineIK_Tree** %tree, metadata !7868, metadata !DIExpression()), !dbg !7870
  %144 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !7871
  %call173 = call i8* %144(i64 64, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.16, i64 0, i64 0)), !dbg !7871
  %145 = bitcast i8* %call173 to %struct.tSplineIK_Tree*, !dbg !7871
  store %struct.tSplineIK_Tree* %145, %struct.tSplineIK_Tree** %tree, align 8, !dbg !7870
  %146 = load %struct.tSplineIK_Tree*, %struct.tSplineIK_Tree** %tree, align 8, !dbg !7872
  %type174 = getelementptr inbounds %struct.tSplineIK_Tree, %struct.tSplineIK_Tree* %146, i32 0, i32 2, !dbg !7873
  store i32 22, i32* %type174, align 8, !dbg !7874
  %147 = load i32, i32* %segcount, align 4, !dbg !7875
  %conv175 = trunc i32 %147 to i16, !dbg !7875
  %148 = load %struct.tSplineIK_Tree*, %struct.tSplineIK_Tree** %tree, align 8, !dbg !7876
  %chainlen176 = getelementptr inbounds %struct.tSplineIK_Tree, %struct.tSplineIK_Tree* %148, i32 0, i32 4, !dbg !7877
  store i16 %conv175, i16* %chainlen176, align 2, !dbg !7878
  %149 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !7879
  %150 = load i32, i32* %segcount, align 4, !dbg !7880
  %conv177 = sext i32 %150 to i64, !dbg !7880
  %mul178 = mul i64 8, %conv177, !dbg !7881
  %call179 = call i8* %149(i64 %mul178, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.17, i64 0, i64 0)), !dbg !7879
  %151 = bitcast i8* %call179 to %struct.bPoseChannel**, !dbg !7879
  %152 = load %struct.tSplineIK_Tree*, %struct.tSplineIK_Tree** %tree, align 8, !dbg !7882
  %chain = getelementptr inbounds %struct.tSplineIK_Tree, %struct.tSplineIK_Tree* %152, i32 0, i32 6, !dbg !7883
  store %struct.bPoseChannel** %151, %struct.bPoseChannel*** %chain, align 8, !dbg !7884
  %153 = load %struct.tSplineIK_Tree*, %struct.tSplineIK_Tree** %tree, align 8, !dbg !7885
  %chain180 = getelementptr inbounds %struct.tSplineIK_Tree, %struct.tSplineIK_Tree* %153, i32 0, i32 6, !dbg !7886
  %154 = load %struct.bPoseChannel**, %struct.bPoseChannel*** %chain180, align 8, !dbg !7886
  %155 = bitcast %struct.bPoseChannel** %154 to i8*, !dbg !7887
  %arraydecay = getelementptr inbounds [255 x %struct.bPoseChannel*], [255 x %struct.bPoseChannel*]* %pchanChain, i64 0, i64 0, !dbg !7887
  %156 = bitcast %struct.bPoseChannel** %arraydecay to i8*, !dbg !7887
  %157 = load i32, i32* %segcount, align 4, !dbg !7888
  %conv181 = sext i32 %157 to i64, !dbg !7888
  %mul182 = mul i64 8, %conv181, !dbg !7889
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %155, i8* align 16 %156, i64 %mul182, i1 false), !dbg !7887
  %158 = load float*, float** %jointPoints, align 8, !dbg !7890
  %159 = load %struct.tSplineIK_Tree*, %struct.tSplineIK_Tree** %tree, align 8, !dbg !7891
  %points183 = getelementptr inbounds %struct.tSplineIK_Tree, %struct.tSplineIK_Tree* %159, i32 0, i32 5, !dbg !7892
  store float* %158, float** %points183, align 8, !dbg !7893
  %160 = load i8, i8* %free_joints, align 1, !dbg !7894
  %161 = load %struct.tSplineIK_Tree*, %struct.tSplineIK_Tree** %tree, align 8, !dbg !7895
  %free_points = getelementptr inbounds %struct.tSplineIK_Tree, %struct.tSplineIK_Tree* %161, i32 0, i32 3, !dbg !7896
  store i8 %160, i8* %free_points, align 4, !dbg !7897
  %162 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchanRoot, align 8, !dbg !7898
  %163 = load %struct.tSplineIK_Tree*, %struct.tSplineIK_Tree** %tree, align 8, !dbg !7899
  %root = getelementptr inbounds %struct.tSplineIK_Tree, %struct.tSplineIK_Tree* %163, i32 0, i32 7, !dbg !7900
  store %struct.bPoseChannel* %162, %struct.bPoseChannel** %root, align 8, !dbg !7901
  %164 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !7902
  %165 = load %struct.tSplineIK_Tree*, %struct.tSplineIK_Tree** %tree, align 8, !dbg !7903
  %con184 = getelementptr inbounds %struct.tSplineIK_Tree, %struct.tSplineIK_Tree* %165, i32 0, i32 8, !dbg !7904
  store %struct.bConstraint* %164, %struct.bConstraint** %con184, align 8, !dbg !7905
  %166 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %ikData, align 8, !dbg !7906
  %167 = load %struct.tSplineIK_Tree*, %struct.tSplineIK_Tree** %tree, align 8, !dbg !7907
  %ikData185 = getelementptr inbounds %struct.tSplineIK_Tree, %struct.tSplineIK_Tree* %167, i32 0, i32 9, !dbg !7908
  store %struct.bSplineIKConstraint* %166, %struct.bSplineIKConstraint** %ikData185, align 8, !dbg !7909
  %168 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchanRoot, align 8, !dbg !7910
  %siktree = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %168, i32 0, i32 16, !dbg !7911
  %169 = load %struct.tSplineIK_Tree*, %struct.tSplineIK_Tree** %tree, align 8, !dbg !7912
  %170 = bitcast %struct.tSplineIK_Tree* %169 to i8*, !dbg !7912
  call void @BLI_addtail(%struct.ListBase* %siktree, i8* %170), !dbg !7913
  %171 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchanRoot, align 8, !dbg !7914
  %flag186 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %171, i32 0, i32 5, !dbg !7915
  %172 = load i16, i16* %flag186, align 8, !dbg !7916
  %conv187 = sext i16 %172 to i32, !dbg !7916
  %or188 = or i32 %conv187, 32768, !dbg !7916
  %conv189 = trunc i32 %or188 to i16, !dbg !7916
  store i16 %conv189, i16* %flag186, align 8, !dbg !7916
  br label %return, !dbg !7917

return:                                           ; preds = %if.end172, %if.then72, %if.then54, %if.then20
  ret void, !dbg !7917
}

declare dso_local void @BKE_displist_make_curveTypes(%struct.Scene*, %struct.Object*, i8 zeroext) #2

declare dso_local void @BLI_addtail(%struct.ListBase*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @splineik_evaluate_bone(%struct.tSplineIK_Tree* %tree, %struct.Scene* %scene, %struct.Object* %ob, %struct.bPoseChannel* %pchan, i32 %index, float %ctime) #0 !dbg !7918 {
entry:
  %tree.addr = alloca %struct.tSplineIK_Tree*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %ob.addr = alloca %struct.Object*, align 8
  %pchan.addr = alloca %struct.bPoseChannel*, align 8
  %index.addr = alloca i32, align 4
  %ctime.addr = alloca float, align 4
  %ikData = alloca %struct.bSplineIKConstraint*, align 8
  %poseHead = alloca [3 x float], align 4
  %poseTail = alloca [3 x float], align 4
  %poseMat = alloca [4 x [4 x float]], align 16
  %splineVec = alloca [3 x float], align 4
  %scaleFac = alloca float, align 4
  %radius = alloca float, align 4
  %vec = alloca [4 x float], align 16
  %dir = alloca [3 x float], align 4
  %rad = alloca float, align 4
  %tailBlendFac = alloca float, align 4
  %dmat = alloca [3 x [3 x float]], align 16
  %rmat = alloca [3 x [3 x float]], align 16
  %tmat = alloca [3 x [3 x float]], align 16
  %raxis = alloca [3 x float], align 4
  %rangle = alloca float, align 4
  %scale = alloca float, align 4
  %scale147 = alloca float, align 4
  store %struct.tSplineIK_Tree* %tree, %struct.tSplineIK_Tree** %tree.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.tSplineIK_Tree** %tree.addr, metadata !7921, metadata !DIExpression()), !dbg !7922
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !7923, metadata !DIExpression()), !dbg !7924
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !7925, metadata !DIExpression()), !dbg !7926
  store %struct.bPoseChannel* %pchan, %struct.bPoseChannel** %pchan.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan.addr, metadata !7927, metadata !DIExpression()), !dbg !7928
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !7929, metadata !DIExpression()), !dbg !7930
  store float %ctime, float* %ctime.addr, align 4
  call void @llvm.dbg.declare(metadata float* %ctime.addr, metadata !7931, metadata !DIExpression()), !dbg !7932
  call void @llvm.dbg.declare(metadata %struct.bSplineIKConstraint** %ikData, metadata !7933, metadata !DIExpression()), !dbg !7934
  %0 = load %struct.tSplineIK_Tree*, %struct.tSplineIK_Tree** %tree.addr, align 8, !dbg !7935
  %ikData1 = getelementptr inbounds %struct.tSplineIK_Tree, %struct.tSplineIK_Tree* %0, i32 0, i32 9, !dbg !7936
  %1 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %ikData1, align 8, !dbg !7936
  store %struct.bSplineIKConstraint* %1, %struct.bSplineIKConstraint** %ikData, align 8, !dbg !7934
  call void @llvm.dbg.declare(metadata [3 x float]* %poseHead, metadata !7937, metadata !DIExpression()), !dbg !7938
  call void @llvm.dbg.declare(metadata [3 x float]* %poseTail, metadata !7939, metadata !DIExpression()), !dbg !7940
  call void @llvm.dbg.declare(metadata [4 x [4 x float]]* %poseMat, metadata !7941, metadata !DIExpression()), !dbg !7942
  call void @llvm.dbg.declare(metadata [3 x float]* %splineVec, metadata !7943, metadata !DIExpression()), !dbg !7944
  call void @llvm.dbg.declare(metadata float* %scaleFac, metadata !7945, metadata !DIExpression()), !dbg !7946
  call void @llvm.dbg.declare(metadata float* %radius, metadata !7947, metadata !DIExpression()), !dbg !7948
  store float 1.000000e+00, float* %radius, align 4, !dbg !7948
  %2 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !7949
  %3 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !7950
  %4 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !7951
  %5 = load float, float* %ctime.addr, align 4, !dbg !7952
  call void @BKE_pose_where_is_bone(%struct.Scene* %2, %struct.Object* %3, %struct.bPoseChannel* %4, float %5, i8 zeroext 1), !dbg !7953
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %poseHead, i64 0, i64 0, !dbg !7954
  %6 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !7955
  %pose_head = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %6, i32 0, i32 31, !dbg !7956
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %pose_head, i64 0, i64 0, !dbg !7955
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay2), !dbg !7957
  %arraydecay3 = getelementptr inbounds [3 x float], [3 x float]* %poseTail, i64 0, i64 0, !dbg !7958
  %7 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !7959
  %pose_tail = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %7, i32 0, i32 32, !dbg !7960
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %pose_tail, i64 0, i64 0, !dbg !7959
  call void @copy_v3_v3(float* %arraydecay3, float* %arraydecay4), !dbg !7961
  call void @llvm.dbg.declare(metadata [4 x float]* %vec, metadata !7962, metadata !DIExpression()), !dbg !7964
  call void @llvm.dbg.declare(metadata [3 x float]* %dir, metadata !7965, metadata !DIExpression()), !dbg !7966
  call void @llvm.dbg.declare(metadata float* %rad, metadata !7967, metadata !DIExpression()), !dbg !7968
  call void @llvm.dbg.declare(metadata float* %tailBlendFac, metadata !7969, metadata !DIExpression()), !dbg !7970
  store float 1.000000e+00, float* %tailBlendFac, align 4, !dbg !7970
  %8 = load %struct.tSplineIK_Tree*, %struct.tSplineIK_Tree** %tree.addr, align 8, !dbg !7971
  %points = getelementptr inbounds %struct.tSplineIK_Tree, %struct.tSplineIK_Tree* %8, i32 0, i32 5, !dbg !7973
  %9 = load float*, float** %points, align 8, !dbg !7973
  %10 = load i32, i32* %index.addr, align 4, !dbg !7974
  %add = add nsw i32 %10, 1, !dbg !7975
  %idxprom = sext i32 %add to i64, !dbg !7971
  %arrayidx = getelementptr inbounds float, float* %9, i64 %idxprom, !dbg !7971
  %11 = load float, float* %arrayidx, align 4, !dbg !7971
  %cmp = fcmp oge float %11, 1.000000e+00, !dbg !7976
  br i1 %cmp, label %if.then, label %if.else, !dbg !7977

if.then:                                          ; preds = %entry
  %12 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !7978
  %flag = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %12, i32 0, i32 5, !dbg !7980
  %13 = load i16, i16* %flag, align 8, !dbg !7981
  %conv = sext i16 %13 to i32, !dbg !7981
  %or = or i32 %conv, 1024, !dbg !7981
  %conv5 = trunc i32 %or to i16, !dbg !7981
  store i16 %conv5, i16* %flag, align 8, !dbg !7981
  br label %return, !dbg !7982

if.else:                                          ; preds = %entry
  %14 = load %struct.tSplineIK_Tree*, %struct.tSplineIK_Tree** %tree.addr, align 8, !dbg !7983
  %points6 = getelementptr inbounds %struct.tSplineIK_Tree, %struct.tSplineIK_Tree* %14, i32 0, i32 5, !dbg !7985
  %15 = load float*, float** %points6, align 8, !dbg !7985
  %16 = load i32, i32* %index.addr, align 4, !dbg !7986
  %idxprom7 = sext i32 %16 to i64, !dbg !7983
  %arrayidx8 = getelementptr inbounds float, float* %15, i64 %idxprom7, !dbg !7983
  %17 = load float, float* %arrayidx8, align 4, !dbg !7983
  %cmp9 = fcmp oge float %17, 1.000000e+00, !dbg !7987
  br i1 %cmp9, label %land.lhs.true, label %if.end, !dbg !7988

land.lhs.true:                                    ; preds = %if.else
  %18 = load %struct.tSplineIK_Tree*, %struct.tSplineIK_Tree** %tree.addr, align 8, !dbg !7989
  %points11 = getelementptr inbounds %struct.tSplineIK_Tree, %struct.tSplineIK_Tree* %18, i32 0, i32 5, !dbg !7990
  %19 = load float*, float** %points11, align 8, !dbg !7990
  %20 = load i32, i32* %index.addr, align 4, !dbg !7991
  %add12 = add nsw i32 %20, 1, !dbg !7992
  %idxprom13 = sext i32 %add12 to i64, !dbg !7989
  %arrayidx14 = getelementptr inbounds float, float* %19, i64 %idxprom13, !dbg !7989
  %21 = load float, float* %arrayidx14, align 4, !dbg !7989
  %cmp15 = fcmp olt float %21, 1.000000e+00, !dbg !7993
  br i1 %cmp15, label %if.then17, label %if.end, !dbg !7994

if.then17:                                        ; preds = %land.lhs.true
  %22 = load %struct.tSplineIK_Tree*, %struct.tSplineIK_Tree** %tree.addr, align 8, !dbg !7995
  %points18 = getelementptr inbounds %struct.tSplineIK_Tree, %struct.tSplineIK_Tree* %22, i32 0, i32 5, !dbg !7997
  %23 = load float*, float** %points18, align 8, !dbg !7997
  %24 = load i32, i32* %index.addr, align 4, !dbg !7998
  %add19 = add nsw i32 %24, 1, !dbg !7999
  %idxprom20 = sext i32 %add19 to i64, !dbg !7995
  %arrayidx21 = getelementptr inbounds float, float* %23, i64 %idxprom20, !dbg !7995
  %25 = load float, float* %arrayidx21, align 4, !dbg !7995
  %sub = fsub float 1.000000e+00, %25, !dbg !8000
  %26 = load %struct.tSplineIK_Tree*, %struct.tSplineIK_Tree** %tree.addr, align 8, !dbg !8001
  %points22 = getelementptr inbounds %struct.tSplineIK_Tree, %struct.tSplineIK_Tree* %26, i32 0, i32 5, !dbg !8002
  %27 = load float*, float** %points22, align 8, !dbg !8002
  %28 = load i32, i32* %index.addr, align 4, !dbg !8003
  %idxprom23 = sext i32 %28 to i64, !dbg !8001
  %arrayidx24 = getelementptr inbounds float, float* %27, i64 %idxprom23, !dbg !8001
  %29 = load float, float* %arrayidx24, align 4, !dbg !8001
  %30 = load %struct.tSplineIK_Tree*, %struct.tSplineIK_Tree** %tree.addr, align 8, !dbg !8004
  %points25 = getelementptr inbounds %struct.tSplineIK_Tree, %struct.tSplineIK_Tree* %30, i32 0, i32 5, !dbg !8005
  %31 = load float*, float** %points25, align 8, !dbg !8005
  %32 = load i32, i32* %index.addr, align 4, !dbg !8006
  %add26 = add nsw i32 %32, 1, !dbg !8007
  %idxprom27 = sext i32 %add26 to i64, !dbg !8004
  %arrayidx28 = getelementptr inbounds float, float* %31, i64 %idxprom27, !dbg !8004
  %33 = load float, float* %arrayidx28, align 4, !dbg !8004
  %sub29 = fsub float %29, %33, !dbg !8008
  %div = fdiv float %sub, %sub29, !dbg !8009
  store float %div, float* %tailBlendFac, align 4, !dbg !8010
  br label %if.end, !dbg !8011

if.end:                                           ; preds = %if.then17, %land.lhs.true, %if.else
  br label %if.end30

if.end30:                                         ; preds = %if.end
  %34 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %ikData, align 8, !dbg !8012
  %tar = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %34, i32 0, i32 0, !dbg !8014
  %35 = load %struct.Object*, %struct.Object** %tar, align 8, !dbg !8014
  %36 = load %struct.tSplineIK_Tree*, %struct.tSplineIK_Tree** %tree.addr, align 8, !dbg !8015
  %points31 = getelementptr inbounds %struct.tSplineIK_Tree, %struct.tSplineIK_Tree* %36, i32 0, i32 5, !dbg !8016
  %37 = load float*, float** %points31, align 8, !dbg !8016
  %38 = load i32, i32* %index.addr, align 4, !dbg !8017
  %idxprom32 = sext i32 %38 to i64, !dbg !8015
  %arrayidx33 = getelementptr inbounds float, float* %37, i64 %idxprom32, !dbg !8015
  %39 = load float, float* %arrayidx33, align 4, !dbg !8015
  %arraydecay34 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 0, !dbg !8018
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 0, !dbg !8019
  %call = call i32 @where_on_path(%struct.Object* %35, float %39, float* %arraydecay34, float* %arraydecay35, float* null, float* %rad, float* null), !dbg !8020
  %tobool = icmp ne i32 %call, 0, !dbg !8020
  br i1 %tobool, label %if.then36, label %if.end52, !dbg !8021

if.then36:                                        ; preds = %if.end30
  %40 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %ikData, align 8, !dbg !8022
  %flag37 = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %40, i32 0, i32 4, !dbg !8025
  %41 = load i16, i16* %flag37, align 4, !dbg !8025
  %conv38 = sext i16 %41 to i32, !dbg !8022
  %and = and i32 %conv38, 2, !dbg !8026
  %cmp39 = icmp eq i32 %and, 0, !dbg !8027
  br i1 %cmp39, label %if.then41, label %if.end45, !dbg !8028

if.then41:                                        ; preds = %if.then36
  %42 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %ikData, align 8, !dbg !8029
  %tar42 = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %42, i32 0, i32 0, !dbg !8030
  %43 = load %struct.Object*, %struct.Object** %tar42, align 8, !dbg !8030
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %43, i32 0, i32 47, !dbg !8031
  %arraydecay43 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !8029
  %arraydecay44 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 0, !dbg !8032
  call void @mul_m4_v3([4 x float]* %arraydecay43, float* %arraydecay44), !dbg !8033
  br label %if.end45, !dbg !8033

if.end45:                                         ; preds = %if.then41, %if.then36
  %44 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8034
  %imat = getelementptr inbounds %struct.Object, %struct.Object* %44, i32 0, i32 50, !dbg !8035
  %arraydecay46 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat, i64 0, i64 0, !dbg !8034
  %arraydecay47 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 0, !dbg !8036
  call void @mul_m4_v3([4 x float]* %arraydecay46, float* %arraydecay47), !dbg !8037
  %arraydecay48 = getelementptr inbounds [3 x float], [3 x float]* %poseTail, i64 0, i64 0, !dbg !8038
  %45 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !8039
  %pose_tail49 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %45, i32 0, i32 32, !dbg !8040
  %arraydecay50 = getelementptr inbounds [3 x float], [3 x float]* %pose_tail49, i64 0, i64 0, !dbg !8039
  %arraydecay51 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 0, !dbg !8041
  %46 = load float, float* %tailBlendFac, align 4, !dbg !8042
  call void @interp_v3_v3v3(float* %arraydecay48, float* %arraydecay50, float* %arraydecay51, float %46), !dbg !8043
  %47 = load float, float* %rad, align 4, !dbg !8044
  store float %47, float* %radius, align 4, !dbg !8045
  br label %if.end52, !dbg !8046

if.end52:                                         ; preds = %if.end45, %if.end30
  %48 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %ikData, align 8, !dbg !8047
  %tar53 = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %48, i32 0, i32 0, !dbg !8049
  %49 = load %struct.Object*, %struct.Object** %tar53, align 8, !dbg !8049
  %50 = load %struct.tSplineIK_Tree*, %struct.tSplineIK_Tree** %tree.addr, align 8, !dbg !8050
  %points54 = getelementptr inbounds %struct.tSplineIK_Tree, %struct.tSplineIK_Tree* %50, i32 0, i32 5, !dbg !8051
  %51 = load float*, float** %points54, align 8, !dbg !8051
  %52 = load i32, i32* %index.addr, align 4, !dbg !8052
  %add55 = add nsw i32 %52, 1, !dbg !8053
  %idxprom56 = sext i32 %add55 to i64, !dbg !8050
  %arrayidx57 = getelementptr inbounds float, float* %51, i64 %idxprom56, !dbg !8050
  %53 = load float, float* %arrayidx57, align 4, !dbg !8050
  %arraydecay58 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 0, !dbg !8054
  %arraydecay59 = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 0, !dbg !8055
  %call60 = call i32 @where_on_path(%struct.Object* %49, float %53, float* %arraydecay58, float* %arraydecay59, float* null, float* %rad, float* null), !dbg !8056
  %tobool61 = icmp ne i32 %call60, 0, !dbg !8056
  br i1 %tobool61, label %if.then62, label %if.end81, !dbg !8057

if.then62:                                        ; preds = %if.end52
  %54 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %ikData, align 8, !dbg !8058
  %flag63 = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %54, i32 0, i32 4, !dbg !8061
  %55 = load i16, i16* %flag63, align 4, !dbg !8061
  %conv64 = sext i16 %55 to i32, !dbg !8058
  %and65 = and i32 %conv64, 2, !dbg !8062
  %cmp66 = icmp eq i32 %and65, 0, !dbg !8063
  br i1 %cmp66, label %if.then68, label %if.end73, !dbg !8064

if.then68:                                        ; preds = %if.then62
  %56 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %ikData, align 8, !dbg !8065
  %tar69 = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %56, i32 0, i32 0, !dbg !8066
  %57 = load %struct.Object*, %struct.Object** %tar69, align 8, !dbg !8066
  %obmat70 = getelementptr inbounds %struct.Object, %struct.Object* %57, i32 0, i32 47, !dbg !8067
  %arraydecay71 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat70, i64 0, i64 0, !dbg !8065
  %arraydecay72 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 0, !dbg !8068
  call void @mul_m4_v3([4 x float]* %arraydecay71, float* %arraydecay72), !dbg !8069
  br label %if.end73, !dbg !8069

if.end73:                                         ; preds = %if.then68, %if.then62
  %58 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8070
  %imat74 = getelementptr inbounds %struct.Object, %struct.Object* %58, i32 0, i32 50, !dbg !8071
  %arraydecay75 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %imat74, i64 0, i64 0, !dbg !8070
  %arraydecay76 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 0, !dbg !8072
  call void @mul_m4_v3([4 x float]* %arraydecay75, float* %arraydecay76), !dbg !8073
  %arraydecay77 = getelementptr inbounds [3 x float], [3 x float]* %poseHead, i64 0, i64 0, !dbg !8074
  %arraydecay78 = getelementptr inbounds [4 x float], [4 x float]* %vec, i64 0, i64 0, !dbg !8075
  call void @copy_v3_v3(float* %arraydecay77, float* %arraydecay78), !dbg !8076
  %59 = load float, float* %radius, align 4, !dbg !8077
  %60 = load float, float* %rad, align 4, !dbg !8078
  %add79 = fadd float %59, %60, !dbg !8079
  %div80 = fdiv float %add79, 2.000000e+00, !dbg !8080
  store float %div80, float* %radius, align 4, !dbg !8081
  br label %if.end81, !dbg !8082

if.end81:                                         ; preds = %if.end73, %if.end52
  %arraydecay82 = getelementptr inbounds [3 x float], [3 x float]* %splineVec, i64 0, i64 0, !dbg !8083
  %arraydecay83 = getelementptr inbounds [3 x float], [3 x float]* %poseTail, i64 0, i64 0, !dbg !8084
  %arraydecay84 = getelementptr inbounds [3 x float], [3 x float]* %poseHead, i64 0, i64 0, !dbg !8085
  call void @sub_v3_v3v3(float* %arraydecay82, float* %arraydecay83, float* %arraydecay84), !dbg !8086
  %arraydecay85 = getelementptr inbounds [3 x float], [3 x float]* %splineVec, i64 0, i64 0, !dbg !8087
  %call86 = call float @len_v3(float* %arraydecay85), !dbg !8088
  %61 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !8089
  %bone = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %61, i32 0, i32 12, !dbg !8090
  %62 = load %struct.Bone*, %struct.Bone** %bone, align 8, !dbg !8090
  %length = getelementptr inbounds %struct.Bone, %struct.Bone* %62, i32 0, i32 18, !dbg !8091
  %63 = load float, float* %length, align 4, !dbg !8091
  %div87 = fdiv float %call86, %63, !dbg !8092
  store float %div87, float* %scaleFac, align 4, !dbg !8093
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %dmat, metadata !8094, metadata !DIExpression()), !dbg !8096
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %rmat, metadata !8097, metadata !DIExpression()), !dbg !8098
  call void @llvm.dbg.declare(metadata [3 x [3 x float]]* %tmat, metadata !8099, metadata !DIExpression()), !dbg !8100
  call void @llvm.dbg.declare(metadata [3 x float]* %raxis, metadata !8101, metadata !DIExpression()), !dbg !8102
  call void @llvm.dbg.declare(metadata float* %rangle, metadata !8103, metadata !DIExpression()), !dbg !8104
  %arrayidx88 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %rmat, i64 0, i64 0, !dbg !8105
  %arraydecay89 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx88, i64 0, i64 0, !dbg !8105
  %64 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !8106
  %pose_mat = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %64, i32 0, i32 29, !dbg !8107
  %arrayidx90 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %pose_mat, i64 0, i64 0, !dbg !8106
  %arraydecay91 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx90, i64 0, i64 0, !dbg !8106
  call void @copy_v3_v3(float* %arraydecay89, float* %arraydecay91), !dbg !8108
  %arrayidx92 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %rmat, i64 0, i64 1, !dbg !8109
  %arraydecay93 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx92, i64 0, i64 0, !dbg !8109
  %65 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !8110
  %pose_mat94 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %65, i32 0, i32 29, !dbg !8111
  %arrayidx95 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %pose_mat94, i64 0, i64 1, !dbg !8110
  %arraydecay96 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx95, i64 0, i64 0, !dbg !8110
  call void @copy_v3_v3(float* %arraydecay93, float* %arraydecay96), !dbg !8112
  %arrayidx97 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %rmat, i64 0, i64 2, !dbg !8113
  %arraydecay98 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx97, i64 0, i64 0, !dbg !8113
  %66 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !8114
  %pose_mat99 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %66, i32 0, i32 29, !dbg !8115
  %arrayidx100 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %pose_mat99, i64 0, i64 2, !dbg !8114
  %arraydecay101 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx100, i64 0, i64 0, !dbg !8114
  call void @copy_v3_v3(float* %arraydecay98, float* %arraydecay101), !dbg !8116
  %arraydecay102 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %rmat, i64 0, i64 0, !dbg !8117
  call void @normalize_m3([3 x float]* %arraydecay102), !dbg !8118
  %arraydecay103 = getelementptr inbounds [3 x float], [3 x float]* %splineVec, i64 0, i64 0, !dbg !8119
  %call104 = call float @normalize_v3(float* %arraydecay103), !dbg !8120
  %arraydecay105 = getelementptr inbounds [3 x float], [3 x float]* %raxis, i64 0, i64 0, !dbg !8121
  %arrayidx106 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %rmat, i64 0, i64 1, !dbg !8122
  %arraydecay107 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx106, i64 0, i64 0, !dbg !8122
  %arraydecay108 = getelementptr inbounds [3 x float], [3 x float]* %splineVec, i64 0, i64 0, !dbg !8123
  call void @cross_v3_v3v3(float* %arraydecay105, float* %arraydecay107, float* %arraydecay108), !dbg !8124
  %arrayidx109 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %rmat, i64 0, i64 1, !dbg !8125
  %arraydecay110 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx109, i64 0, i64 0, !dbg !8125
  %arraydecay111 = getelementptr inbounds [3 x float], [3 x float]* %splineVec, i64 0, i64 0, !dbg !8126
  %call112 = call float @dot_v3v3(float* %arraydecay110, float* %arraydecay111), !dbg !8127
  store float %call112, float* %rangle, align 4, !dbg !8128
  %67 = load float, float* %rangle, align 4, !dbg !8129
  %cmp113 = fcmp olt float %67, -1.000000e+00, !dbg !8129
  br i1 %cmp113, label %if.then115, label %if.else116, !dbg !8132

if.then115:                                       ; preds = %if.end81
  store float -1.000000e+00, float* %rangle, align 4, !dbg !8129
  br label %if.end121, !dbg !8129

if.else116:                                       ; preds = %if.end81
  %68 = load float, float* %rangle, align 4, !dbg !8133
  %cmp117 = fcmp ogt float %68, 1.000000e+00, !dbg !8133
  br i1 %cmp117, label %if.then119, label %if.end120, !dbg !8129

if.then119:                                       ; preds = %if.else116
  store float 1.000000e+00, float* %rangle, align 4, !dbg !8133
  br label %if.end120, !dbg !8133

if.end120:                                        ; preds = %if.then119, %if.else116
  br label %if.end121

if.end121:                                        ; preds = %if.end120, %if.then115
  %69 = load float, float* %rangle, align 4, !dbg !8135
  %call122 = call float @acosf(float %69) #7, !dbg !8136
  store float %call122, float* %rangle, align 4, !dbg !8137
  %70 = load %struct.tSplineIK_Tree*, %struct.tSplineIK_Tree** %tree.addr, align 8, !dbg !8138
  %con = getelementptr inbounds %struct.tSplineIK_Tree, %struct.tSplineIK_Tree* %70, i32 0, i32 8, !dbg !8139
  %71 = load %struct.bConstraint*, %struct.bConstraint** %con, align 8, !dbg !8139
  %enforce = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %71, i32 0, i32 9, !dbg !8140
  %72 = load float, float* %enforce, align 8, !dbg !8140
  %73 = load float, float* %rangle, align 4, !dbg !8141
  %mul = fmul float %73, %72, !dbg !8141
  store float %mul, float* %rangle, align 4, !dbg !8141
  %arraydecay123 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %dmat, i64 0, i64 0, !dbg !8142
  %arraydecay124 = getelementptr inbounds [3 x float], [3 x float]* %raxis, i64 0, i64 0, !dbg !8143
  %74 = load float, float* %rangle, align 4, !dbg !8144
  call void @axis_angle_to_mat3([3 x float]* %arraydecay123, float* %arraydecay124, float %74), !dbg !8145
  %arraydecay125 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !8146
  %arraydecay126 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %dmat, i64 0, i64 0, !dbg !8147
  %arraydecay127 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %rmat, i64 0, i64 0, !dbg !8148
  call void @mul_m3_m3m3([3 x float]* %arraydecay125, [3 x float]* %arraydecay126, [3 x float]* %arraydecay127), !dbg !8149
  %arraydecay128 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !8150
  call void @normalize_m3([3 x float]* %arraydecay128), !dbg !8151
  %arraydecay129 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %poseMat, i64 0, i64 0, !dbg !8152
  %arraydecay130 = getelementptr inbounds [3 x [3 x float]], [3 x [3 x float]]* %tmat, i64 0, i64 0, !dbg !8153
  call void @copy_m4_m3([4 x float]* %arraydecay129, [3 x float]* %arraydecay130), !dbg !8154
  %arrayidx131 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %poseMat, i64 0, i64 1, !dbg !8155
  %arraydecay132 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx131, i64 0, i64 0, !dbg !8155
  %75 = load float, float* %scaleFac, align 4, !dbg !8157
  call void @mul_v3_fl(float* %arraydecay132, float %75), !dbg !8158
  %76 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %ikData, align 8, !dbg !8159
  %xzScaleMode = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %76, i32 0, i32 5, !dbg !8160
  %77 = load i16, i16* %xzScaleMode, align 2, !dbg !8160
  %conv133 = sext i16 %77 to i32, !dbg !8159
  switch i32 %conv133, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb146
  ], !dbg !8161

sw.bb:                                            ; preds = %if.end121
  call void @llvm.dbg.declare(metadata float* %scale, metadata !8162, metadata !DIExpression()), !dbg !8165
  %78 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !8166
  %pose_mat134 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %78, i32 0, i32 29, !dbg !8167
  %arrayidx135 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %pose_mat134, i64 0, i64 0, !dbg !8166
  %arraydecay136 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx135, i64 0, i64 0, !dbg !8166
  %call137 = call float @len_v3(float* %arraydecay136), !dbg !8168
  store float %call137, float* %scale, align 4, !dbg !8169
  %arrayidx138 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %poseMat, i64 0, i64 0, !dbg !8170
  %arraydecay139 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx138, i64 0, i64 0, !dbg !8170
  %79 = load float, float* %scale, align 4, !dbg !8171
  call void @mul_v3_fl(float* %arraydecay139, float %79), !dbg !8172
  %80 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !8173
  %pose_mat140 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %80, i32 0, i32 29, !dbg !8174
  %arrayidx141 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %pose_mat140, i64 0, i64 2, !dbg !8173
  %arraydecay142 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx141, i64 0, i64 0, !dbg !8173
  %call143 = call float @len_v3(float* %arraydecay142), !dbg !8175
  store float %call143, float* %scale, align 4, !dbg !8176
  %arrayidx144 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %poseMat, i64 0, i64 2, !dbg !8177
  %arraydecay145 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx144, i64 0, i64 0, !dbg !8177
  %81 = load float, float* %scale, align 4, !dbg !8178
  call void @mul_v3_fl(float* %arraydecay145, float %81), !dbg !8179
  br label %sw.epilog, !dbg !8180

sw.bb146:                                         ; preds = %if.end121
  call void @llvm.dbg.declare(metadata float* %scale147, metadata !8181, metadata !DIExpression()), !dbg !8183
  %82 = load float, float* %scaleFac, align 4, !dbg !8184
  %83 = call float @llvm.fabs.f32(float %82), !dbg !8186
  %cmp148 = fcmp une float %83, 0.000000e+00, !dbg !8187
  br i1 %cmp148, label %if.then150, label %if.else161, !dbg !8188

if.then150:                                       ; preds = %sw.bb146
  %84 = load float, float* %scaleFac, align 4, !dbg !8189
  %85 = call float @llvm.fabs.f32(float %84), !dbg !8191
  %div151 = fdiv float 1.000000e+00, %85, !dbg !8192
  store float %div151, float* %scale147, align 4, !dbg !8193
  %86 = load float, float* %scale147, align 4, !dbg !8194
  %cmp152 = fcmp olt float %86, 0x3F1A36E2E0000000, !dbg !8194
  br i1 %cmp152, label %if.then154, label %if.else155, !dbg !8197

if.then154:                                       ; preds = %if.then150
  store float 0x3F1A36E2E0000000, float* %scale147, align 4, !dbg !8194
  br label %if.end160, !dbg !8194

if.else155:                                       ; preds = %if.then150
  %87 = load float, float* %scale147, align 4, !dbg !8198
  %cmp156 = fcmp ogt float %87, 1.000000e+05, !dbg !8198
  br i1 %cmp156, label %if.then158, label %if.end159, !dbg !8194

if.then158:                                       ; preds = %if.else155
  store float 1.000000e+05, float* %scale147, align 4, !dbg !8198
  br label %if.end159, !dbg !8198

if.end159:                                        ; preds = %if.then158, %if.else155
  br label %if.end160

if.end160:                                        ; preds = %if.end159, %if.then154
  br label %if.end162, !dbg !8200

if.else161:                                       ; preds = %sw.bb146
  store float 1.000000e+00, float* %scale147, align 4, !dbg !8201
  br label %if.end162

if.end162:                                        ; preds = %if.else161, %if.end160
  %arrayidx163 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %poseMat, i64 0, i64 0, !dbg !8202
  %arraydecay164 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx163, i64 0, i64 0, !dbg !8202
  %88 = load float, float* %scale147, align 4, !dbg !8203
  call void @mul_v3_fl(float* %arraydecay164, float %88), !dbg !8204
  %arrayidx165 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %poseMat, i64 0, i64 2, !dbg !8205
  %arraydecay166 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx165, i64 0, i64 0, !dbg !8205
  %89 = load float, float* %scale147, align 4, !dbg !8206
  call void @mul_v3_fl(float* %arraydecay166, float %89), !dbg !8207
  br label %sw.epilog, !dbg !8208

sw.epilog:                                        ; preds = %if.end121, %if.end162, %sw.bb
  %90 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %ikData, align 8, !dbg !8209
  %flag167 = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %90, i32 0, i32 4, !dbg !8211
  %91 = load i16, i16* %flag167, align 4, !dbg !8211
  %conv168 = sext i16 %91 to i32, !dbg !8209
  %and169 = and i32 %conv168, 16, !dbg !8212
  %cmp170 = icmp eq i32 %and169, 0, !dbg !8213
  br i1 %cmp170, label %if.then172, label %if.end177, !dbg !8214

if.then172:                                       ; preds = %sw.epilog
  %arrayidx173 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %poseMat, i64 0, i64 0, !dbg !8215
  %arraydecay174 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx173, i64 0, i64 0, !dbg !8215
  %92 = load float, float* %radius, align 4, !dbg !8217
  call void @mul_v3_fl(float* %arraydecay174, float %92), !dbg !8218
  %arrayidx175 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %poseMat, i64 0, i64 2, !dbg !8219
  %arraydecay176 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx175, i64 0, i64 0, !dbg !8219
  %93 = load float, float* %radius, align 4, !dbg !8220
  call void @mul_v3_fl(float* %arraydecay176, float %93), !dbg !8221
  br label %if.end177, !dbg !8222

if.end177:                                        ; preds = %if.then172, %sw.epilog
  %94 = load %struct.bSplineIKConstraint*, %struct.bSplineIKConstraint** %ikData, align 8, !dbg !8223
  %flag178 = getelementptr inbounds %struct.bSplineIKConstraint, %struct.bSplineIKConstraint* %94, i32 0, i32 4, !dbg !8225
  %95 = load i16, i16* %flag178, align 4, !dbg !8225
  %conv179 = sext i16 %95 to i32, !dbg !8223
  %and180 = and i32 %conv179, 2, !dbg !8226
  %tobool181 = icmp ne i32 %and180, 0, !dbg !8226
  br i1 %tobool181, label %if.then182, label %if.else186, !dbg !8227

if.then182:                                       ; preds = %if.end177
  %arraydecay183 = getelementptr inbounds [3 x float], [3 x float]* %poseHead, i64 0, i64 0, !dbg !8228
  %96 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !8230
  %pose_head184 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %96, i32 0, i32 31, !dbg !8231
  %arraydecay185 = getelementptr inbounds [3 x float], [3 x float]* %pose_head184, i64 0, i64 0, !dbg !8230
  call void @copy_v3_v3(float* %arraydecay183, float* %arraydecay185), !dbg !8232
  br label %if.end206, !dbg !8233

if.else186:                                       ; preds = %if.end177
  %97 = load %struct.tSplineIK_Tree*, %struct.tSplineIK_Tree** %tree.addr, align 8, !dbg !8234
  %con187 = getelementptr inbounds %struct.tSplineIK_Tree, %struct.tSplineIK_Tree* %97, i32 0, i32 8, !dbg !8236
  %98 = load %struct.bConstraint*, %struct.bConstraint** %con187, align 8, !dbg !8236
  %enforce188 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %98, i32 0, i32 9, !dbg !8237
  %99 = load float, float* %enforce188, align 8, !dbg !8237
  %cmp189 = fcmp olt float %99, 1.000000e+00, !dbg !8238
  br i1 %cmp189, label %if.then191, label %if.end205, !dbg !8239

if.then191:                                       ; preds = %if.else186
  %100 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !8240
  %parent = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %100, i32 0, i32 13, !dbg !8243
  %101 = load %struct.bPoseChannel*, %struct.bPoseChannel** %parent, align 8, !dbg !8243
  %tobool192 = icmp ne %struct.bPoseChannel* %101, null, !dbg !8240
  br i1 %tobool192, label %if.then193, label %if.else197, !dbg !8244

if.then193:                                       ; preds = %if.then191
  %arraydecay194 = getelementptr inbounds [3 x float], [3 x float]* %poseHead, i64 0, i64 0, !dbg !8245
  %102 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !8247
  %pose_head195 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %102, i32 0, i32 31, !dbg !8248
  %arraydecay196 = getelementptr inbounds [3 x float], [3 x float]* %pose_head195, i64 0, i64 0, !dbg !8247
  call void @copy_v3_v3(float* %arraydecay194, float* %arraydecay196), !dbg !8249
  br label %if.end204, !dbg !8250

if.else197:                                       ; preds = %if.then191
  %arraydecay198 = getelementptr inbounds [3 x float], [3 x float]* %poseHead, i64 0, i64 0, !dbg !8251
  %103 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !8253
  %pose_head199 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %103, i32 0, i32 31, !dbg !8254
  %arraydecay200 = getelementptr inbounds [3 x float], [3 x float]* %pose_head199, i64 0, i64 0, !dbg !8253
  %arraydecay201 = getelementptr inbounds [3 x float], [3 x float]* %poseHead, i64 0, i64 0, !dbg !8255
  %104 = load %struct.tSplineIK_Tree*, %struct.tSplineIK_Tree** %tree.addr, align 8, !dbg !8256
  %con202 = getelementptr inbounds %struct.tSplineIK_Tree, %struct.tSplineIK_Tree* %104, i32 0, i32 8, !dbg !8257
  %105 = load %struct.bConstraint*, %struct.bConstraint** %con202, align 8, !dbg !8257
  %enforce203 = getelementptr inbounds %struct.bConstraint, %struct.bConstraint* %105, i32 0, i32 9, !dbg !8258
  %106 = load float, float* %enforce203, align 8, !dbg !8258
  call void @interp_v3_v3v3(float* %arraydecay198, float* %arraydecay200, float* %arraydecay201, float %106), !dbg !8259
  br label %if.end204

if.end204:                                        ; preds = %if.else197, %if.then193
  br label %if.end205, !dbg !8260

if.end205:                                        ; preds = %if.end204, %if.else186
  br label %if.end206

if.end206:                                        ; preds = %if.end205, %if.then182
  %arrayidx207 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %poseMat, i64 0, i64 3, !dbg !8261
  %arraydecay208 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx207, i64 0, i64 0, !dbg !8261
  %arraydecay209 = getelementptr inbounds [3 x float], [3 x float]* %poseHead, i64 0, i64 0, !dbg !8262
  call void @copy_v3_v3(float* %arraydecay208, float* %arraydecay209), !dbg !8263
  %107 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !8264
  %pose_mat210 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %107, i32 0, i32 29, !dbg !8265
  %arraydecay211 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %pose_mat210, i64 0, i64 0, !dbg !8264
  %arraydecay212 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %poseMat, i64 0, i64 0, !dbg !8266
  call void @copy_m4_m4([4 x float]* %arraydecay211, [4 x float]* %arraydecay212), !dbg !8267
  %108 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !8268
  %pose_head213 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %108, i32 0, i32 31, !dbg !8269
  %arraydecay214 = getelementptr inbounds [3 x float], [3 x float]* %pose_head213, i64 0, i64 0, !dbg !8268
  %arraydecay215 = getelementptr inbounds [3 x float], [3 x float]* %poseHead, i64 0, i64 0, !dbg !8270
  call void @copy_v3_v3(float* %arraydecay214, float* %arraydecay215), !dbg !8271
  %109 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !8272
  call void @BKE_pose_where_is_bone_tail(%struct.bPoseChannel* %109), !dbg !8273
  %110 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan.addr, align 8, !dbg !8274
  %flag216 = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %110, i32 0, i32 5, !dbg !8275
  %111 = load i16, i16* %flag216, align 8, !dbg !8276
  %conv217 = sext i16 %111 to i32, !dbg !8276
  %or218 = or i32 %conv217, 1024, !dbg !8276
  %conv219 = trunc i32 %or218 to i16, !dbg !8276
  store i16 %conv219, i16* %flag216, align 8, !dbg !8276
  br label %return, !dbg !8277

return:                                           ; preds = %if.end206, %if.then
  ret void, !dbg !8277
}

declare dso_local i32 @where_on_path(%struct.Object*, float, float*, float*, float*, float*, float*) #2

declare dso_local void @interp_v3_v3v3(float*, float*, float*, float) #2

declare dso_local void @normalize_m3([3 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @cross_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !8278 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !8279, metadata !DIExpression()), !dbg !8280
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !8281, metadata !DIExpression()), !dbg !8282
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !8283, metadata !DIExpression()), !dbg !8284
  %0 = load float*, float** %a.addr, align 8, !dbg !8285
  %arrayidx = getelementptr inbounds float, float* %0, i64 1, !dbg !8285
  %1 = load float, float* %arrayidx, align 4, !dbg !8285
  %2 = load float*, float** %b.addr, align 8, !dbg !8286
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 2, !dbg !8286
  %3 = load float, float* %arrayidx1, align 4, !dbg !8286
  %mul = fmul float %1, %3, !dbg !8287
  %4 = load float*, float** %a.addr, align 8, !dbg !8288
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 2, !dbg !8288
  %5 = load float, float* %arrayidx2, align 4, !dbg !8288
  %6 = load float*, float** %b.addr, align 8, !dbg !8289
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !8289
  %7 = load float, float* %arrayidx3, align 4, !dbg !8289
  %mul4 = fmul float %5, %7, !dbg !8290
  %sub = fsub float %mul, %mul4, !dbg !8291
  %8 = load float*, float** %r.addr, align 8, !dbg !8292
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 0, !dbg !8292
  store float %sub, float* %arrayidx5, align 4, !dbg !8293
  %9 = load float*, float** %a.addr, align 8, !dbg !8294
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 2, !dbg !8294
  %10 = load float, float* %arrayidx6, align 4, !dbg !8294
  %11 = load float*, float** %b.addr, align 8, !dbg !8295
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 0, !dbg !8295
  %12 = load float, float* %arrayidx7, align 4, !dbg !8295
  %mul8 = fmul float %10, %12, !dbg !8296
  %13 = load float*, float** %a.addr, align 8, !dbg !8297
  %arrayidx9 = getelementptr inbounds float, float* %13, i64 0, !dbg !8297
  %14 = load float, float* %arrayidx9, align 4, !dbg !8297
  %15 = load float*, float** %b.addr, align 8, !dbg !8298
  %arrayidx10 = getelementptr inbounds float, float* %15, i64 2, !dbg !8298
  %16 = load float, float* %arrayidx10, align 4, !dbg !8298
  %mul11 = fmul float %14, %16, !dbg !8299
  %sub12 = fsub float %mul8, %mul11, !dbg !8300
  %17 = load float*, float** %r.addr, align 8, !dbg !8301
  %arrayidx13 = getelementptr inbounds float, float* %17, i64 1, !dbg !8301
  store float %sub12, float* %arrayidx13, align 4, !dbg !8302
  %18 = load float*, float** %a.addr, align 8, !dbg !8303
  %arrayidx14 = getelementptr inbounds float, float* %18, i64 0, !dbg !8303
  %19 = load float, float* %arrayidx14, align 4, !dbg !8303
  %20 = load float*, float** %b.addr, align 8, !dbg !8304
  %arrayidx15 = getelementptr inbounds float, float* %20, i64 1, !dbg !8304
  %21 = load float, float* %arrayidx15, align 4, !dbg !8304
  %mul16 = fmul float %19, %21, !dbg !8305
  %22 = load float*, float** %a.addr, align 8, !dbg !8306
  %arrayidx17 = getelementptr inbounds float, float* %22, i64 1, !dbg !8306
  %23 = load float, float* %arrayidx17, align 4, !dbg !8306
  %24 = load float*, float** %b.addr, align 8, !dbg !8307
  %arrayidx18 = getelementptr inbounds float, float* %24, i64 0, !dbg !8307
  %25 = load float, float* %arrayidx18, align 4, !dbg !8307
  %mul19 = fmul float %23, %25, !dbg !8308
  %sub20 = fsub float %mul16, %mul19, !dbg !8309
  %26 = load float*, float** %r.addr, align 8, !dbg !8310
  %arrayidx21 = getelementptr inbounds float, float* %26, i64 2, !dbg !8310
  store float %sub20, float* %arrayidx21, align 4, !dbg !8311
  ret void, !dbg !8312
}

; Function Attrs: nounwind
declare dso_local float @acosf(float) #5

; Function Attrs: noinline nounwind uwtable
define internal i32 @minmax_armature(%struct.Object* %ob, float* %r_min, float* %r_max) #0 !dbg !8313 {
entry:
  %ob.addr = alloca %struct.Object*, align 8
  %r_min.addr = alloca float*, align 8
  %r_max.addr = alloca float*, align 8
  %pchan = alloca %struct.bPoseChannel*, align 8
  store %struct.Object* %ob, %struct.Object** %ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %ob.addr, metadata !8316, metadata !DIExpression()), !dbg !8317
  store float* %r_min, float** %r_min.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_min.addr, metadata !8318, metadata !DIExpression()), !dbg !8319
  store float* %r_max, float** %r_max.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_max.addr, metadata !8320, metadata !DIExpression()), !dbg !8321
  call void @llvm.dbg.declare(metadata %struct.bPoseChannel** %pchan, metadata !8322, metadata !DIExpression()), !dbg !8323
  %0 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8324
  %pose = getelementptr inbounds %struct.Object, %struct.Object* %0, i32 0, i32 18, !dbg !8326
  %1 = load %struct.bPose*, %struct.bPose** %pose, align 8, !dbg !8326
  %chanbase = getelementptr inbounds %struct.bPose, %struct.bPose* %1, i32 0, i32 0, !dbg !8327
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %chanbase, i32 0, i32 0, !dbg !8328
  %2 = load i8*, i8** %first, align 8, !dbg !8328
  %3 = bitcast i8* %2 to %struct.bPoseChannel*, !dbg !8324
  store %struct.bPoseChannel* %3, %struct.bPoseChannel** %pchan, align 8, !dbg !8329
  br label %for.cond, !dbg !8330

for.cond:                                         ; preds = %for.inc, %entry
  %4 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !8331
  %tobool = icmp ne %struct.bPoseChannel* %4, null, !dbg !8333
  br i1 %tobool, label %for.body, label %for.end, !dbg !8333

for.body:                                         ; preds = %for.cond
  %5 = load float*, float** %r_min.addr, align 8, !dbg !8334
  %6 = load float*, float** %r_max.addr, align 8, !dbg !8336
  %7 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !8337
  %pose_head = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %7, i32 0, i32 31, !dbg !8338
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %pose_head, i64 0, i64 0, !dbg !8337
  call void @minmax_v3v3_v3(float* %5, float* %6, float* %arraydecay), !dbg !8339
  %8 = load float*, float** %r_min.addr, align 8, !dbg !8340
  %9 = load float*, float** %r_max.addr, align 8, !dbg !8341
  %10 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !8342
  %pose_tail = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %10, i32 0, i32 32, !dbg !8343
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %pose_tail, i64 0, i64 0, !dbg !8342
  call void @minmax_v3v3_v3(float* %8, float* %9, float* %arraydecay1), !dbg !8344
  br label %for.inc, !dbg !8345

for.inc:                                          ; preds = %for.body
  %11 = load %struct.bPoseChannel*, %struct.bPoseChannel** %pchan, align 8, !dbg !8346
  %next = getelementptr inbounds %struct.bPoseChannel, %struct.bPoseChannel* %11, i32 0, i32 0, !dbg !8347
  %12 = load %struct.bPoseChannel*, %struct.bPoseChannel** %next, align 8, !dbg !8347
  store %struct.bPoseChannel* %12, %struct.bPoseChannel** %pchan, align 8, !dbg !8348
  br label %for.cond, !dbg !8349, !llvm.loop !8350

for.end:                                          ; preds = %for.cond
  %13 = load %struct.Object*, %struct.Object** %ob.addr, align 8, !dbg !8352
  %pose2 = getelementptr inbounds %struct.Object, %struct.Object* %13, i32 0, i32 18, !dbg !8353
  %14 = load %struct.bPose*, %struct.bPose** %pose2, align 8, !dbg !8353
  %chanbase3 = getelementptr inbounds %struct.bPose, %struct.bPose* %14, i32 0, i32 0, !dbg !8354
  %call = call zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %chanbase3), !dbg !8355
  %conv = zext i8 %call to i32, !dbg !8355
  %cmp = icmp eq i32 %conv, 0, !dbg !8356
  %conv4 = zext i1 %cmp to i32, !dbg !8356
  ret i32 %conv4, !dbg !8357
}

declare dso_local void @mid_v3_v3v3(float*, float*, float*) #2

declare dso_local void @BKE_boundbox_init_from_minmax(%struct.BoundBox*, float*, float*) #2

declare dso_local void @minmax_v3v3_v3(float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %lb) #0 !dbg !8358 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !8364, metadata !DIExpression()), !dbg !8365
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !8366
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !8367
  %1 = load i8*, i8** %first, align 8, !dbg !8367
  %cmp = icmp eq i8* %1, null, !dbg !8368
  %conv = zext i1 %cmp to i32, !dbg !8368
  %conv1 = trunc i32 %conv to i8, !dbg !8369
  ret i8 %conv1, !dbg !8370
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly }
attributes #7 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!462, !463, !464}
!llvm.ident = !{!465}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !244, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "blender/source/blender/blenkernel/intern/armature.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2 = !{!3, !12, !29, !35, !40, !44, !50, !56, !70, !95, !139, !154, !163, !170, !188, !196, !228, !237}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eArmature_DeformFlag", file: !4, line: 152, baseType: !5, size: 32, elements: !6)
!4 = !DIFile(filename: "blender/source/blender/makesdna/DNA_armature_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!6 = !{!7, !8, !9, !10, !11}
!7 = !DIEnumerator(name: "ARM_DEF_VGROUP", value: 1, isUnsigned: true)
!8 = !DIEnumerator(name: "ARM_DEF_ENVELOPE", value: 2, isUnsigned: true)
!9 = !DIEnumerator(name: "ARM_DEF_QUATERNION", value: 4, isUnsigned: true)
!10 = !DIEnumerator(name: "ARM_DEF_B_BONE_REST", value: 8, isUnsigned: true)
!11 = !DIEnumerator(name: "ARM_DEF_INVERT_VGROUP", value: 16, isUnsigned: true)
!12 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eArmature_Flag", file: !4, line: 118, baseType: !5, size: 32, elements: !13)
!13 = !{!14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28}
!14 = !DIEnumerator(name: "ARM_RESTPOS", value: 1, isUnsigned: true)
!15 = !DIEnumerator(name: "ARM_DRAWXRAY", value: 2, isUnsigned: true)
!16 = !DIEnumerator(name: "ARM_DRAWAXES", value: 4, isUnsigned: true)
!17 = !DIEnumerator(name: "ARM_DRAWNAMES", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "ARM_POSEMODE", value: 16, isUnsigned: true)
!19 = !DIEnumerator(name: "ARM_EDITMODE", value: 32, isUnsigned: true)
!20 = !DIEnumerator(name: "ARM_DELAYDEFORM", value: 64, isUnsigned: true)
!21 = !DIEnumerator(name: "ARM_DONT_USE", value: 128, isUnsigned: true)
!22 = !DIEnumerator(name: "ARM_MIRROR_EDIT", value: 256, isUnsigned: true)
!23 = !DIEnumerator(name: "ARM_AUTO_IK", value: 512, isUnsigned: true)
!24 = !DIEnumerator(name: "ARM_NO_CUSTOM", value: 1024, isUnsigned: true)
!25 = !DIEnumerator(name: "ARM_COL_CUSTOM", value: 2048, isUnsigned: true)
!26 = !DIEnumerator(name: "ARM_GHOST_ONLYSEL", value: 4096, isUnsigned: true)
!27 = !DIEnumerator(name: "ARM_DS_EXPAND", value: 8192, isUnsigned: true)
!28 = !DIEnumerator(name: "ARM_HAS_VIZ_DEPS", value: 16384, isUnsigned: true)
!29 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DerivedMeshType", file: !30, line: 128, baseType: !5, size: 32, elements: !31)
!30 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_DerivedMesh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!31 = !{!32, !33, !34}
!32 = !DIEnumerator(name: "DM_TYPE_CDDM", value: 0, isUnsigned: true)
!33 = !DIEnumerator(name: "DM_TYPE_EDITBMESH", value: 1, isUnsigned: true)
!34 = !DIEnumerator(name: "DM_TYPE_CCGDM", value: 2, isUnsigned: true)
!35 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDirtyFlag", file: !30, line: 164, baseType: !5, size: 32, elements: !36)
!36 = !{!37, !38, !39}
!37 = !DIEnumerator(name: "DM_DIRTY_TESS_CDLAYERS", value: 1, isUnsigned: true)
!38 = !DIEnumerator(name: "DM_DIRTY_MCOL_UPDATE_DRAW", value: 2, isUnsigned: true)
!39 = !DIEnumerator(name: "DM_DIRTY_NORMALS", value: 4, isUnsigned: true)
!40 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMForeachFlag", file: !30, line: 159, baseType: !5, size: 32, elements: !41)
!41 = !{!42, !43}
!42 = !DIEnumerator(name: "DM_FOREACH_NOP", value: 0, isUnsigned: true)
!43 = !DIEnumerator(name: "DM_FOREACH_USE_NORMAL", value: 1, isUnsigned: true)
!44 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDrawOption", file: !30, line: 134, baseType: !5, size: 32, elements: !45)
!45 = !{!46, !47, !48, !49}
!46 = !DIEnumerator(name: "DM_DRAW_OPTION_SKIP", value: 0, isUnsigned: true)
!47 = !DIEnumerator(name: "DM_DRAW_OPTION_NORMAL", value: 1, isUnsigned: true)
!48 = !DIEnumerator(name: "DM_DRAW_OPTION_NO_MCOL", value: 2, isUnsigned: true)
!49 = !DIEnumerator(name: "DM_DRAW_OPTION_STIPPLE", value: 3, isUnsigned: true)
!50 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDrawFlag", file: !30, line: 152, baseType: !5, size: 32, elements: !51)
!51 = !{!52, !53, !54, !55}
!52 = !DIEnumerator(name: "DM_DRAW_USE_COLORS", value: 1, isUnsigned: true)
!53 = !DIEnumerator(name: "DM_DRAW_ALWAYS_SMOOTH", value: 2, isUnsigned: true)
!54 = !DIEnumerator(name: "DM_DRAW_USE_ACTIVE_UV", value: 4, isUnsigned: true)
!55 = !DIEnumerator(name: "DM_DRAW_USE_TEXPAINT_UV", value: 8, isUnsigned: true)
!56 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !57, line: 339, baseType: !5, size: 32, elements: !58)
!57 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!58 = !{!59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69}
!59 = !DIEnumerator(name: "OB_EMPTY", value: 0, isUnsigned: true)
!60 = !DIEnumerator(name: "OB_MESH", value: 1, isUnsigned: true)
!61 = !DIEnumerator(name: "OB_CURVE", value: 2, isUnsigned: true)
!62 = !DIEnumerator(name: "OB_SURF", value: 3, isUnsigned: true)
!63 = !DIEnumerator(name: "OB_FONT", value: 4, isUnsigned: true)
!64 = !DIEnumerator(name: "OB_MBALL", value: 5, isUnsigned: true)
!65 = !DIEnumerator(name: "OB_LAMP", value: 10, isUnsigned: true)
!66 = !DIEnumerator(name: "OB_CAMERA", value: 11, isUnsigned: true)
!67 = !DIEnumerator(name: "OB_SPEAKER", value: 12, isUnsigned: true)
!68 = !DIEnumerator(name: "OB_LATTICE", value: 22, isUnsigned: true)
!69 = !DIEnumerator(name: "OB_ARMATURE", value: 25, isUnsigned: true)
!70 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBone_Flag", file: !4, line: 187, baseType: !5, size: 32, elements: !71)
!71 = !{!72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94}
!72 = !DIEnumerator(name: "BONE_SELECTED", value: 1, isUnsigned: true)
!73 = !DIEnumerator(name: "BONE_ROOTSEL", value: 2, isUnsigned: true)
!74 = !DIEnumerator(name: "BONE_TIPSEL", value: 4, isUnsigned: true)
!75 = !DIEnumerator(name: "BONE_TRANSFORM", value: 8, isUnsigned: true)
!76 = !DIEnumerator(name: "BONE_CONNECTED", value: 16, isUnsigned: true)
!77 = !DIEnumerator(name: "BONE_HIDDEN_P", value: 64, isUnsigned: true)
!78 = !DIEnumerator(name: "BONE_DONE", value: 128, isUnsigned: true)
!79 = !DIEnumerator(name: "BONE_DRAW_ACTIVE", value: 256, isUnsigned: true)
!80 = !DIEnumerator(name: "BONE_HINGE", value: 512, isUnsigned: true)
!81 = !DIEnumerator(name: "BONE_HIDDEN_A", value: 1024, isUnsigned: true)
!82 = !DIEnumerator(name: "BONE_MULT_VG_ENV", value: 2048, isUnsigned: true)
!83 = !DIEnumerator(name: "BONE_NO_DEFORM", value: 4096, isUnsigned: true)
!84 = !DIEnumerator(name: "BONE_UNKEYED", value: 8192, isUnsigned: true)
!85 = !DIEnumerator(name: "BONE_HINGE_CHILD_TRANSFORM", value: 16384, isUnsigned: true)
!86 = !DIEnumerator(name: "BONE_NO_SCALE", value: 32768, isUnsigned: true)
!87 = !DIEnumerator(name: "BONE_HIDDEN_PG", value: 65536, isUnsigned: true)
!88 = !DIEnumerator(name: "BONE_DRAWWIRE", value: 131072, isUnsigned: true)
!89 = !DIEnumerator(name: "BONE_NO_CYCLICOFFSET", value: 262144, isUnsigned: true)
!90 = !DIEnumerator(name: "BONE_EDITMODE_LOCKED", value: 524288, isUnsigned: true)
!91 = !DIEnumerator(name: "BONE_TRANSFORM_CHILD", value: 1048576, isUnsigned: true)
!92 = !DIEnumerator(name: "BONE_UNSELECTABLE", value: 2097152, isUnsigned: true)
!93 = !DIEnumerator(name: "BONE_NO_LOCAL_LOCATION", value: 4194304, isUnsigned: true)
!94 = !DIEnumerator(name: "BONE_RELATIVE_PARENTING", value: 8388608, isUnsigned: true)
!95 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !96, line: 76, baseType: !5, size: 32, elements: !97)
!96 = !DIFile(filename: "blender/source/blender/makesdna/DNA_customdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!97 = !{!98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135, !136, !137, !138}
!98 = !DIEnumerator(name: "CD_MVERT", value: 0, isUnsigned: true)
!99 = !DIEnumerator(name: "CD_MSTICKY", value: 1, isUnsigned: true)
!100 = !DIEnumerator(name: "CD_MDEFORMVERT", value: 2, isUnsigned: true)
!101 = !DIEnumerator(name: "CD_MEDGE", value: 3, isUnsigned: true)
!102 = !DIEnumerator(name: "CD_MFACE", value: 4, isUnsigned: true)
!103 = !DIEnumerator(name: "CD_MTFACE", value: 5, isUnsigned: true)
!104 = !DIEnumerator(name: "CD_MCOL", value: 6, isUnsigned: true)
!105 = !DIEnumerator(name: "CD_ORIGINDEX", value: 7, isUnsigned: true)
!106 = !DIEnumerator(name: "CD_NORMAL", value: 8, isUnsigned: true)
!107 = !DIEnumerator(name: "CD_PROP_FLT", value: 10, isUnsigned: true)
!108 = !DIEnumerator(name: "CD_PROP_INT", value: 11, isUnsigned: true)
!109 = !DIEnumerator(name: "CD_PROP_STR", value: 12, isUnsigned: true)
!110 = !DIEnumerator(name: "CD_ORIGSPACE", value: 13, isUnsigned: true)
!111 = !DIEnumerator(name: "CD_ORCO", value: 14, isUnsigned: true)
!112 = !DIEnumerator(name: "CD_MTEXPOLY", value: 15, isUnsigned: true)
!113 = !DIEnumerator(name: "CD_MLOOPUV", value: 16, isUnsigned: true)
!114 = !DIEnumerator(name: "CD_MLOOPCOL", value: 17, isUnsigned: true)
!115 = !DIEnumerator(name: "CD_TANGENT", value: 18, isUnsigned: true)
!116 = !DIEnumerator(name: "CD_MDISPS", value: 19, isUnsigned: true)
!117 = !DIEnumerator(name: "CD_PREVIEW_MCOL", value: 20, isUnsigned: true)
!118 = !DIEnumerator(name: "CD_ID_MCOL", value: 21, isUnsigned: true)
!119 = !DIEnumerator(name: "CD_TEXTURE_MCOL", value: 22, isUnsigned: true)
!120 = !DIEnumerator(name: "CD_CLOTH_ORCO", value: 23, isUnsigned: true)
!121 = !DIEnumerator(name: "CD_RECAST", value: 24, isUnsigned: true)
!122 = !DIEnumerator(name: "CD_MPOLY", value: 25, isUnsigned: true)
!123 = !DIEnumerator(name: "CD_MLOOP", value: 26, isUnsigned: true)
!124 = !DIEnumerator(name: "CD_SHAPE_KEYINDEX", value: 27, isUnsigned: true)
!125 = !DIEnumerator(name: "CD_SHAPEKEY", value: 28, isUnsigned: true)
!126 = !DIEnumerator(name: "CD_BWEIGHT", value: 29, isUnsigned: true)
!127 = !DIEnumerator(name: "CD_CREASE", value: 30, isUnsigned: true)
!128 = !DIEnumerator(name: "CD_ORIGSPACE_MLOOP", value: 31, isUnsigned: true)
!129 = !DIEnumerator(name: "CD_PREVIEW_MLOOPCOL", value: 32, isUnsigned: true)
!130 = !DIEnumerator(name: "CD_BM_ELEM_PYPTR", value: 33, isUnsigned: true)
!131 = !DIEnumerator(name: "CD_PAINT_MASK", value: 34, isUnsigned: true)
!132 = !DIEnumerator(name: "CD_GRID_PAINT_MASK", value: 35, isUnsigned: true)
!133 = !DIEnumerator(name: "CD_MVERT_SKIN", value: 36, isUnsigned: true)
!134 = !DIEnumerator(name: "CD_FREESTYLE_EDGE", value: 37, isUnsigned: true)
!135 = !DIEnumerator(name: "CD_FREESTYLE_FACE", value: 38, isUnsigned: true)
!136 = !DIEnumerator(name: "CD_MLOOPTANGENT", value: 39, isUnsigned: true)
!137 = !DIEnumerator(name: "CD_TESSLOOPNORMAL", value: 40, isUnsigned: true)
!138 = !DIEnumerator(name: "CD_NUMTYPES", value: 41, isUnsigned: true)
!139 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eRotationModes", file: !140, line: 306, baseType: !141, size: 32, elements: !142)
!140 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!141 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!142 = !{!143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153}
!143 = !DIEnumerator(name: "ROT_MODE_QUAT", value: 0)
!144 = !DIEnumerator(name: "ROT_MODE_EUL", value: 1)
!145 = !DIEnumerator(name: "ROT_MODE_XYZ", value: 1)
!146 = !DIEnumerator(name: "ROT_MODE_XZY", value: 2)
!147 = !DIEnumerator(name: "ROT_MODE_YXZ", value: 3)
!148 = !DIEnumerator(name: "ROT_MODE_YZX", value: 4)
!149 = !DIEnumerator(name: "ROT_MODE_ZXY", value: 5)
!150 = !DIEnumerator(name: "ROT_MODE_ZYX", value: 6)
!151 = !DIEnumerator(name: "ROT_MODE_AXISANGLE", value: -1)
!152 = !DIEnumerator(name: "ROT_MODE_MIN", value: -1)
!153 = !DIEnumerator(name: "ROT_MODE_MAX", value: 6)
!154 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ePose_Flags", file: !140, line: 360, baseType: !5, size: 32, elements: !155)
!155 = !{!156, !157, !158, !159, !160, !161, !162}
!156 = !DIEnumerator(name: "POSE_RECALC", value: 1, isUnsigned: true)
!157 = !DIEnumerator(name: "POSE_LOCKED", value: 2, isUnsigned: true)
!158 = !DIEnumerator(name: "POSE_DO_UNLOCK", value: 4, isUnsigned: true)
!159 = !DIEnumerator(name: "POSE_CONSTRAINTS_TIMEDEPEND", value: 8, isUnsigned: true)
!160 = !DIEnumerator(name: "POSE_RECALCPATHS", value: 16, isUnsigned: true)
!161 = !DIEnumerator(name: "POSE_WAS_REBUILT", value: 32, isUnsigned: true)
!162 = !DIEnumerator(name: "POSE_GAME_ENGINE", value: 64, isUnsigned: true)
!163 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "B_CONSTRAINT_OB_TYPE", file: !164, line: 105, baseType: !5, size: 32, elements: !165)
!164 = !DIFile(filename: "blender/source/blender/makesdna/DNA_constraint_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!165 = !{!166, !167, !168, !169}
!166 = !DIEnumerator(name: "CONSTRAINT_OBTYPE_OBJECT", value: 1, isUnsigned: true)
!167 = !DIEnumerator(name: "CONSTRAINT_OBTYPE_BONE", value: 2, isUnsigned: true)
!168 = !DIEnumerator(name: "CONSTRAINT_OBTYPE_VERT", value: 3, isUnsigned: true)
!169 = !DIEnumerator(name: "CONSTRAINT_OBTYPE_CV", value: 4, isUnsigned: true)
!170 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ePchan_Flag", file: !140, line: 247, baseType: !5, size: 32, elements: !171)
!171 = !{!172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187}
!172 = !DIEnumerator(name: "POSE_LOC", value: 1, isUnsigned: true)
!173 = !DIEnumerator(name: "POSE_ROT", value: 2, isUnsigned: true)
!174 = !DIEnumerator(name: "POSE_SIZE", value: 4, isUnsigned: true)
!175 = !DIEnumerator(name: "POSE_IK_MAT", value: 8, isUnsigned: true)
!176 = !DIEnumerator(name: "POSE_UNUSED2", value: 16, isUnsigned: true)
!177 = !DIEnumerator(name: "POSE_UNUSED3", value: 32, isUnsigned: true)
!178 = !DIEnumerator(name: "POSE_UNUSED4", value: 64, isUnsigned: true)
!179 = !DIEnumerator(name: "POSE_UNUSED5", value: 128, isUnsigned: true)
!180 = !DIEnumerator(name: "POSE_HAS_IK", value: 256, isUnsigned: true)
!181 = !DIEnumerator(name: "POSE_CHAIN", value: 512, isUnsigned: true)
!182 = !DIEnumerator(name: "POSE_DONE", value: 1024, isUnsigned: true)
!183 = !DIEnumerator(name: "POSE_KEY", value: 2048, isUnsigned: true)
!184 = !DIEnumerator(name: "POSE_STRIDE", value: 4096, isUnsigned: true)
!185 = !DIEnumerator(name: "POSE_IKTREE", value: 8192, isUnsigned: true)
!186 = !DIEnumerator(name: "POSE_HAS_IKS", value: 16384, isUnsigned: true)
!187 = !DIEnumerator(name: "POSE_IKSPLINE", value: 32768, isUnsigned: true)
!188 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ePchan_ConstFlag", file: !140, line: 275, baseType: !5, size: 32, elements: !189)
!189 = !{!190, !191, !192, !193, !194, !195}
!190 = !DIEnumerator(name: "PCHAN_HAS_IK", value: 1, isUnsigned: true)
!191 = !DIEnumerator(name: "PCHAN_HAS_CONST", value: 2, isUnsigned: true)
!192 = !DIEnumerator(name: "PCHAN_HAS_ACTION", value: 4, isUnsigned: true)
!193 = !DIEnumerator(name: "PCHAN_HAS_TARGET", value: 8, isUnsigned: true)
!194 = !DIEnumerator(name: "PCHAN_HAS_STRIDE", value: 16, isUnsigned: true)
!195 = !DIEnumerator(name: "PCHAN_HAS_SPLINEIK", value: 32, isUnsigned: true)
!196 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBConstraint_Types", file: !164, line: 461, baseType: !5, size: 32, elements: !197)
!197 = !{!198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227}
!198 = !DIEnumerator(name: "CONSTRAINT_TYPE_NULL", value: 0, isUnsigned: true)
!199 = !DIEnumerator(name: "CONSTRAINT_TYPE_CHILDOF", value: 1, isUnsigned: true)
!200 = !DIEnumerator(name: "CONSTRAINT_TYPE_TRACKTO", value: 2, isUnsigned: true)
!201 = !DIEnumerator(name: "CONSTRAINT_TYPE_KINEMATIC", value: 3, isUnsigned: true)
!202 = !DIEnumerator(name: "CONSTRAINT_TYPE_FOLLOWPATH", value: 4, isUnsigned: true)
!203 = !DIEnumerator(name: "CONSTRAINT_TYPE_ROTLIMIT", value: 5, isUnsigned: true)
!204 = !DIEnumerator(name: "CONSTRAINT_TYPE_LOCLIMIT", value: 6, isUnsigned: true)
!205 = !DIEnumerator(name: "CONSTRAINT_TYPE_SIZELIMIT", value: 7, isUnsigned: true)
!206 = !DIEnumerator(name: "CONSTRAINT_TYPE_ROTLIKE", value: 8, isUnsigned: true)
!207 = !DIEnumerator(name: "CONSTRAINT_TYPE_LOCLIKE", value: 9, isUnsigned: true)
!208 = !DIEnumerator(name: "CONSTRAINT_TYPE_SIZELIKE", value: 10, isUnsigned: true)
!209 = !DIEnumerator(name: "CONSTRAINT_TYPE_PYTHON", value: 11, isUnsigned: true)
!210 = !DIEnumerator(name: "CONSTRAINT_TYPE_ACTION", value: 12, isUnsigned: true)
!211 = !DIEnumerator(name: "CONSTRAINT_TYPE_LOCKTRACK", value: 13, isUnsigned: true)
!212 = !DIEnumerator(name: "CONSTRAINT_TYPE_DISTLIMIT", value: 14, isUnsigned: true)
!213 = !DIEnumerator(name: "CONSTRAINT_TYPE_STRETCHTO", value: 15, isUnsigned: true)
!214 = !DIEnumerator(name: "CONSTRAINT_TYPE_MINMAX", value: 16, isUnsigned: true)
!215 = !DIEnumerator(name: "CONSTRAINT_TYPE_RIGIDBODYJOINT", value: 17, isUnsigned: true)
!216 = !DIEnumerator(name: "CONSTRAINT_TYPE_CLAMPTO", value: 18, isUnsigned: true)
!217 = !DIEnumerator(name: "CONSTRAINT_TYPE_TRANSFORM", value: 19, isUnsigned: true)
!218 = !DIEnumerator(name: "CONSTRAINT_TYPE_SHRINKWRAP", value: 20, isUnsigned: true)
!219 = !DIEnumerator(name: "CONSTRAINT_TYPE_DAMPTRACK", value: 21, isUnsigned: true)
!220 = !DIEnumerator(name: "CONSTRAINT_TYPE_SPLINEIK", value: 22, isUnsigned: true)
!221 = !DIEnumerator(name: "CONSTRAINT_TYPE_TRANSLIKE", value: 23, isUnsigned: true)
!222 = !DIEnumerator(name: "CONSTRAINT_TYPE_SAMEVOL", value: 24, isUnsigned: true)
!223 = !DIEnumerator(name: "CONSTRAINT_TYPE_PIVOT", value: 25, isUnsigned: true)
!224 = !DIEnumerator(name: "CONSTRAINT_TYPE_FOLLOWTRACK", value: 26, isUnsigned: true)
!225 = !DIEnumerator(name: "CONSTRAINT_TYPE_CAMERASOLVER", value: 27, isUnsigned: true)
!226 = !DIEnumerator(name: "CONSTRAINT_TYPE_OBJECTSOLVER", value: 28, isUnsigned: true)
!227 = !DIEnumerator(name: "NUM_CONSTRAINT_TYPES", value: 29, isUnsigned: true)
!228 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBConstraint_Flags", file: !164, line: 499, baseType: !5, size: 32, elements: !229)
!229 = !{!230, !231, !232, !233, !234, !235, !236}
!230 = !DIEnumerator(name: "CONSTRAINT_EXPAND", value: 1, isUnsigned: true)
!231 = !DIEnumerator(name: "CONSTRAINT_DISABLE", value: 4, isUnsigned: true)
!232 = !DIEnumerator(name: "CONSTRAINT_ACTIVE", value: 16, isUnsigned: true)
!233 = !DIEnumerator(name: "CONSTRAINT_SPACEONCE", value: 64, isUnsigned: true)
!234 = !DIEnumerator(name: "CONSTRAINT_OWN_IPO", value: 128, isUnsigned: true)
!235 = !DIEnumerator(name: "CONSTRAINT_PROXY_LOCAL", value: 256, isUnsigned: true)
!236 = !DIEnumerator(name: "CONSTRAINT_OFF", value: 512, isUnsigned: true)
!237 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eSplineIK_Flags", file: !164, line: 681, baseType: !5, size: 32, elements: !238)
!238 = !{!239, !240, !241, !242, !243}
!239 = !DIEnumerator(name: "CONSTRAINT_SPLINEIK_BOUND", value: 1, isUnsigned: true)
!240 = !DIEnumerator(name: "CONSTRAINT_SPLINEIK_NO_ROOT", value: 2, isUnsigned: true)
!241 = !DIEnumerator(name: "CONSTRAINT_SPLINEIK_SCALE_LIMITED", value: 4, isUnsigned: true)
!242 = !DIEnumerator(name: "CONSTRAINT_SPLINEIK_EVENSPLITS", value: 8, isUnsigned: true)
!243 = !DIEnumerator(name: "CONSTRAINT_SPLINEIK_NO_CURVERAD", value: 16, isUnsigned: true)
!244 = !{!245, !255, !366, !141}
!245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !246, size: 64)
!246 = !DIDerivedType(tag: DW_TAG_typedef, name: "bArmature", file: !4, line: 114, baseType: !247)
!247 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bArmature", file: !4, line: 78, size: 2048, elements: !248)
!248 = !{!249, !320, !390, !391, !392, !394, !439, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461}
!249 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !247, file: !4, line: 79, baseType: !250, size: 960)
!250 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !251, line: 130, baseType: !252)
!251 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !251, line: 117, size: 960, elements: !253)
!253 = !{!254, !256, !257, !259, !279, !283, !285, !286, !287, !288}
!254 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !252, file: !251, line: 118, baseType: !255, size: 64)
!255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!256 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !252, file: !251, line: 118, baseType: !255, size: 64, offset: 64)
!257 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !252, file: !251, line: 119, baseType: !258, size: 64, offset: 128)
!258 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !252, size: 64)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !252, file: !251, line: 120, baseType: !260, size: 64, offset: 192)
!260 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !261, size: 64)
!261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !251, line: 136, size: 17600, elements: !262)
!262 = !{!263, !264, !266, !269, !274, !275, !276}
!263 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !261, file: !251, line: 137, baseType: !250, size: 960)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !261, file: !251, line: 138, baseType: !265, size: 64, offset: 960)
!265 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !250, size: 64)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !261, file: !251, line: 139, baseType: !267, size: 64, offset: 1024)
!267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !268, size: 64)
!268 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !251, line: 43, flags: DIFlagFwdDecl)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !261, file: !251, line: 140, baseType: !270, size: 8192, offset: 1088)
!270 = !DICompositeType(tag: DW_TAG_array_type, baseType: !271, size: 8192, elements: !272)
!271 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!272 = !{!273}
!273 = !DISubrange(count: 1024)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !261, file: !251, line: 141, baseType: !270, size: 8192, offset: 9280)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !261, file: !251, line: 148, baseType: !260, size: 64, offset: 17472)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !261, file: !251, line: 150, baseType: !277, size: 64, offset: 17536)
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 64)
!278 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !251, line: 45, flags: DIFlagFwdDecl)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !252, file: !251, line: 121, baseType: !280, size: 528, offset: 256)
!280 = !DICompositeType(tag: DW_TAG_array_type, baseType: !271, size: 528, elements: !281)
!281 = !{!282}
!282 = !DISubrange(count: 66)
!283 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !252, file: !251, line: 126, baseType: !284, size: 16, offset: 784)
!284 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !252, file: !251, line: 127, baseType: !141, size: 32, offset: 800)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !252, file: !251, line: 128, baseType: !141, size: 32, offset: 832)
!287 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !252, file: !251, line: 128, baseType: !141, size: 32, offset: 864)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !252, file: !251, line: 129, baseType: !289, size: 64, offset: 896)
!289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !290, size: 64)
!290 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !251, line: 75, baseType: !291)
!291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !251, line: 62, size: 1024, elements: !292)
!292 = !{!293, !295, !296, !297, !298, !299, !303, !304, !318, !319}
!293 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !291, file: !251, line: 63, baseType: !294, size: 64)
!294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !291, size: 64)
!295 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !291, file: !251, line: 63, baseType: !294, size: 64, offset: 64)
!296 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !291, file: !251, line: 64, baseType: !271, size: 8, offset: 128)
!297 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !291, file: !251, line: 64, baseType: !271, size: 8, offset: 136)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !291, file: !251, line: 65, baseType: !284, size: 16, offset: 144)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !291, file: !251, line: 66, baseType: !300, size: 512, offset: 160)
!300 = !DICompositeType(tag: DW_TAG_array_type, baseType: !271, size: 512, elements: !301)
!301 = !{!302}
!302 = !DISubrange(count: 64)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !291, file: !251, line: 67, baseType: !141, size: 32, offset: 672)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !291, file: !251, line: 69, baseType: !305, size: 256, offset: 704)
!305 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !251, line: 60, baseType: !306)
!306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !251, line: 48, size: 256, elements: !307)
!307 = !{!308, !309, !316, !317}
!308 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !306, file: !251, line: 49, baseType: !255, size: 64)
!309 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !306, file: !251, line: 58, baseType: !310, size: 128, offset: 64)
!310 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !311, line: 71, baseType: !312)
!311 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !311, line: 69, size: 128, elements: !313)
!313 = !{!314, !315}
!314 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !312, file: !311, line: 70, baseType: !255, size: 64)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !312, file: !311, line: 70, baseType: !255, size: 64, offset: 64)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !306, file: !251, line: 59, baseType: !141, size: 32, offset: 192)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !306, file: !251, line: 59, baseType: !141, size: 32, offset: 224)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !291, file: !251, line: 70, baseType: !141, size: 32, offset: 960)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !291, file: !251, line: 74, baseType: !141, size: 32, offset: 992)
!320 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !247, file: !4, line: 80, baseType: !321, size: 64, offset: 960)
!321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !322, size: 64)
!322 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !323, line: 838, size: 768, elements: !324)
!323 = !DIFile(filename: "blender/source/blender/makesdna/DNA_anim_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!324 = !{!325, !339, !340, !350, !351, !383, !384, !385, !386, !387, !388, !389}
!325 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !322, file: !323, line: 840, baseType: !326, size: 64)
!326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !327, size: 64)
!327 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAction", file: !140, line: 499, baseType: !328)
!328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !140, line: 486, size: 1600, elements: !329)
!329 = !{!330, !331, !332, !333, !334, !335, !336, !337, !338}
!330 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !328, file: !140, line: 487, baseType: !250, size: 960)
!331 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !328, file: !140, line: 489, baseType: !310, size: 128, offset: 960)
!332 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !328, file: !140, line: 490, baseType: !310, size: 128, offset: 1088)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !328, file: !140, line: 491, baseType: !310, size: 128, offset: 1216)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !328, file: !140, line: 492, baseType: !310, size: 128, offset: 1344)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !328, file: !140, line: 494, baseType: !141, size: 32, offset: 1472)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !328, file: !140, line: 495, baseType: !141, size: 32, offset: 1504)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !328, file: !140, line: 497, baseType: !141, size: 32, offset: 1536)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !328, file: !140, line: 498, baseType: !141, size: 32, offset: 1568)
!339 = !DIDerivedType(tag: DW_TAG_member, name: "tmpact", scope: !322, file: !323, line: 844, baseType: !326, size: 64, offset: 64)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "remap", scope: !322, file: !323, line: 848, baseType: !341, size: 64, offset: 128)
!341 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !342, size: 64)
!342 = !DIDerivedType(tag: DW_TAG_typedef, name: "AnimMapper", file: !323, line: 549, baseType: !343)
!343 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AnimMapper", file: !323, line: 544, size: 320, elements: !344)
!344 = !{!345, !347, !348, !349}
!345 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !343, file: !323, line: 545, baseType: !346, size: 64)
!346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !343, size: 64)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !343, file: !323, line: 545, baseType: !346, size: 64, offset: 64)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "target", scope: !343, file: !323, line: 547, baseType: !326, size: 64, offset: 128)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "mappings", scope: !343, file: !323, line: 548, baseType: !310, size: 128, offset: 192)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "nla_tracks", scope: !322, file: !323, line: 851, baseType: !310, size: 128, offset: 192)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "actstrip", scope: !322, file: !323, line: 853, baseType: !352, size: 64, offset: 320)
!352 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !353, size: 64)
!353 = !DIDerivedType(tag: DW_TAG_typedef, name: "NlaStrip", file: !323, line: 594, baseType: !354)
!354 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "NlaStrip", file: !323, line: 561, size: 1664, elements: !355)
!355 = !{!356, !358, !359, !360, !361, !362, !363, !364, !365, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382}
!356 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !354, file: !323, line: 562, baseType: !357, size: 64)
!357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 64)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !354, file: !323, line: 562, baseType: !357, size: 64, offset: 64)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "strips", scope: !354, file: !323, line: 564, baseType: !310, size: 128, offset: 128)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "act", scope: !354, file: !323, line: 565, baseType: !326, size: 64, offset: 256)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "remap", scope: !354, file: !323, line: 566, baseType: !341, size: 64, offset: 320)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "fcurves", scope: !354, file: !323, line: 568, baseType: !310, size: 128, offset: 384)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !354, file: !323, line: 569, baseType: !310, size: 128, offset: 512)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !354, file: !323, line: 571, baseType: !300, size: 512, offset: 640)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "influence", scope: !354, file: !323, line: 573, baseType: !366, size: 32, offset: 1152)
!366 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "strip_time", scope: !354, file: !323, line: 574, baseType: !366, size: 32, offset: 1184)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !354, file: !323, line: 576, baseType: !366, size: 32, offset: 1216)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "end", scope: !354, file: !323, line: 576, baseType: !366, size: 32, offset: 1248)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "actstart", scope: !354, file: !323, line: 577, baseType: !366, size: 32, offset: 1280)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "actend", scope: !354, file: !323, line: 577, baseType: !366, size: 32, offset: 1312)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "repeat", scope: !354, file: !323, line: 579, baseType: !366, size: 32, offset: 1344)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !354, file: !323, line: 580, baseType: !366, size: 32, offset: 1376)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "blendin", scope: !354, file: !323, line: 582, baseType: !366, size: 32, offset: 1408)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "blendout", scope: !354, file: !323, line: 582, baseType: !366, size: 32, offset: 1440)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "blendmode", scope: !354, file: !323, line: 583, baseType: !284, size: 16, offset: 1472)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "extendmode", scope: !354, file: !323, line: 585, baseType: !284, size: 16, offset: 1488)
!378 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !354, file: !323, line: 586, baseType: !284, size: 16, offset: 1504)
!379 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !354, file: !323, line: 588, baseType: !284, size: 16, offset: 1520)
!380 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handle", scope: !354, file: !323, line: 590, baseType: !255, size: 64, offset: 1536)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !354, file: !323, line: 592, baseType: !141, size: 32, offset: 1600)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !354, file: !323, line: 593, baseType: !141, size: 32, offset: 1632)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "drivers", scope: !322, file: !323, line: 858, baseType: !310, size: 128, offset: 384)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "overrides", scope: !322, file: !323, line: 859, baseType: !310, size: 128, offset: 512)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !322, file: !323, line: 862, baseType: !141, size: 32, offset: 640)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !322, file: !323, line: 863, baseType: !141, size: 32, offset: 672)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "act_blendmode", scope: !322, file: !323, line: 866, baseType: !284, size: 16, offset: 704)
!388 = !DIDerivedType(tag: DW_TAG_member, name: "act_extendmode", scope: !322, file: !323, line: 867, baseType: !284, size: 16, offset: 720)
!389 = !DIDerivedType(tag: DW_TAG_member, name: "act_influence", scope: !322, file: !323, line: 868, baseType: !366, size: 32, offset: 736)
!390 = !DIDerivedType(tag: DW_TAG_member, name: "bonebase", scope: !247, file: !4, line: 82, baseType: !310, size: 128, offset: 1024)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "chainbase", scope: !247, file: !4, line: 83, baseType: !310, size: 128, offset: 1152)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "edbo", scope: !247, file: !4, line: 84, baseType: !393, size: 64, offset: 1280)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !310, size: 64)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "act_bone", scope: !247, file: !4, line: 92, baseType: !395, size: 64, offset: 1344)
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !396, size: 64)
!396 = !DIDerivedType(tag: DW_TAG_typedef, name: "Bone", file: !4, line: 76, baseType: !397)
!397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Bone", file: !4, line: 48, size: 2624, elements: !398)
!398 = !{!399, !401, !402, !403, !404, !405, !406, !407, !411, !412, !415, !416, !417, !418, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435}
!399 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !397, file: !4, line: 49, baseType: !400, size: 64)
!400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !397, size: 64)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !397, file: !4, line: 49, baseType: !400, size: 64, offset: 64)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !397, file: !4, line: 50, baseType: !289, size: 64, offset: 128)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !397, file: !4, line: 51, baseType: !400, size: 64, offset: 192)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "childbase", scope: !397, file: !4, line: 52, baseType: !310, size: 128, offset: 256)
!405 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !397, file: !4, line: 53, baseType: !300, size: 512, offset: 384)
!406 = !DIDerivedType(tag: DW_TAG_member, name: "roll", scope: !397, file: !4, line: 55, baseType: !366, size: 32, offset: 896)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !397, file: !4, line: 56, baseType: !408, size: 96, offset: 928)
!408 = !DICompositeType(tag: DW_TAG_array_type, baseType: !366, size: 96, elements: !409)
!409 = !{!410}
!410 = !DISubrange(count: 3)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !397, file: !4, line: 57, baseType: !408, size: 96, offset: 1024)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "bone_mat", scope: !397, file: !4, line: 58, baseType: !413, size: 288, offset: 1120)
!413 = !DICompositeType(tag: DW_TAG_array_type, baseType: !366, size: 288, elements: !414)
!414 = !{!410, !410}
!415 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !397, file: !4, line: 60, baseType: !141, size: 32, offset: 1408)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "arm_head", scope: !397, file: !4, line: 62, baseType: !408, size: 96, offset: 1440)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "arm_tail", scope: !397, file: !4, line: 63, baseType: !408, size: 96, offset: 1536)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "arm_mat", scope: !397, file: !4, line: 64, baseType: !419, size: 512, offset: 1632)
!419 = !DICompositeType(tag: DW_TAG_array_type, baseType: !366, size: 512, elements: !420)
!420 = !{!421, !421}
!421 = !DISubrange(count: 4)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "arm_roll", scope: !397, file: !4, line: 65, baseType: !366, size: 32, offset: 2144)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !397, file: !4, line: 67, baseType: !366, size: 32, offset: 2176)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !397, file: !4, line: 67, baseType: !366, size: 32, offset: 2208)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "xwidth", scope: !397, file: !4, line: 68, baseType: !366, size: 32, offset: 2240)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !397, file: !4, line: 68, baseType: !366, size: 32, offset: 2272)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "zwidth", scope: !397, file: !4, line: 68, baseType: !366, size: 32, offset: 2304)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "ease1", scope: !397, file: !4, line: 69, baseType: !366, size: 32, offset: 2336)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "ease2", scope: !397, file: !4, line: 69, baseType: !366, size: 32, offset: 2368)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "rad_head", scope: !397, file: !4, line: 70, baseType: !366, size: 32, offset: 2400)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "rad_tail", scope: !397, file: !4, line: 70, baseType: !366, size: 32, offset: 2432)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !397, file: !4, line: 72, baseType: !408, size: 96, offset: 2464)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !397, file: !4, line: 73, baseType: !141, size: 32, offset: 2560)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "segments", scope: !397, file: !4, line: 74, baseType: !284, size: 16, offset: 2592)
!435 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !397, file: !4, line: 75, baseType: !436, size: 16, offset: 2608)
!436 = !DICompositeType(tag: DW_TAG_array_type, baseType: !284, size: 16, elements: !437)
!437 = !{!438}
!438 = !DISubrange(count: 1)
!439 = !DIDerivedType(tag: DW_TAG_member, name: "act_edbone", scope: !247, file: !4, line: 93, baseType: !440, size: 64, offset: 1408)
!440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !441, size: 64)
!441 = !DICompositeType(tag: DW_TAG_structure_type, name: "EditBone", file: !4, line: 93, flags: DIFlagFwdDecl)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "sketch", scope: !247, file: !4, line: 95, baseType: !255, size: 64, offset: 1472)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !247, file: !4, line: 97, baseType: !141, size: 32, offset: 1536)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "drawtype", scope: !247, file: !4, line: 98, baseType: !141, size: 32, offset: 1568)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "gevertdeformer", scope: !247, file: !4, line: 99, baseType: !141, size: 32, offset: 1600)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !247, file: !4, line: 100, baseType: !141, size: 32, offset: 1632)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "deformflag", scope: !247, file: !4, line: 101, baseType: !284, size: 16, offset: 1664)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "pathflag", scope: !247, file: !4, line: 102, baseType: !284, size: 16, offset: 1680)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "layer_used", scope: !247, file: !4, line: 104, baseType: !5, size: 32, offset: 1696)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !247, file: !4, line: 105, baseType: !5, size: 32, offset: 1728)
!451 = !DIDerivedType(tag: DW_TAG_member, name: "layer_protected", scope: !247, file: !4, line: 105, baseType: !5, size: 32, offset: 1760)
!452 = !DIDerivedType(tag: DW_TAG_member, name: "ghostep", scope: !247, file: !4, line: 108, baseType: !284, size: 16, offset: 1792)
!453 = !DIDerivedType(tag: DW_TAG_member, name: "ghostsize", scope: !247, file: !4, line: 108, baseType: !284, size: 16, offset: 1808)
!454 = !DIDerivedType(tag: DW_TAG_member, name: "ghosttype", scope: !247, file: !4, line: 109, baseType: !284, size: 16, offset: 1824)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "pathsize", scope: !247, file: !4, line: 109, baseType: !284, size: 16, offset: 1840)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "ghostsf", scope: !247, file: !4, line: 110, baseType: !141, size: 32, offset: 1856)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "ghostef", scope: !247, file: !4, line: 110, baseType: !141, size: 32, offset: 1888)
!458 = !DIDerivedType(tag: DW_TAG_member, name: "pathsf", scope: !247, file: !4, line: 111, baseType: !141, size: 32, offset: 1920)
!459 = !DIDerivedType(tag: DW_TAG_member, name: "pathef", scope: !247, file: !4, line: 111, baseType: !141, size: 32, offset: 1952)
!460 = !DIDerivedType(tag: DW_TAG_member, name: "pathbc", scope: !247, file: !4, line: 112, baseType: !141, size: 32, offset: 1984)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "pathac", scope: !247, file: !4, line: 112, baseType: !141, size: 32, offset: 2016)
!462 = !{i32 7, !"Dwarf Version", i32 4}
!463 = !{i32 2, !"Debug Info Version", i32 3}
!464 = !{i32 1, !"wchar_size", i32 4}
!465 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!466 = distinct !DISubprogram(name: "BKE_armature_add", scope: !1, file: !1, line: 76, type: !467, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !544)
!467 = !DISubroutineType(types: !468)
!468 = !{!469, !470, !542}
!469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !247, size: 64)
!470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !471, size: 64)
!471 = !DIDerivedType(tag: DW_TAG_typedef, name: "Main", file: !472, line: 104, baseType: !473)
!472 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_main.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!473 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Main", file: !472, line: 53, size: 15232, elements: !474)
!474 = !{!475, !477, !478, !479, !480, !481, !482, !483, !489, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !529, !533, !539}
!475 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !473, file: !472, line: 54, baseType: !476, size: 64)
!476 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !473, size: 64)
!477 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !473, file: !472, line: 54, baseType: !476, size: 64, offset: 64)
!478 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !473, file: !472, line: 55, baseType: !270, size: 8192, offset: 128)
!479 = !DIDerivedType(tag: DW_TAG_member, name: "versionfile", scope: !473, file: !472, line: 56, baseType: !284, size: 16, offset: 8320)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "subversionfile", scope: !473, file: !472, line: 56, baseType: !284, size: 16, offset: 8336)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "minversionfile", scope: !473, file: !472, line: 57, baseType: !284, size: 16, offset: 8352)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "minsubversionfile", scope: !473, file: !472, line: 57, baseType: !284, size: 16, offset: 8368)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "build_commit_timestamp", scope: !473, file: !472, line: 58, baseType: !484, size: 64, offset: 8384)
!484 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !485, line: 27, baseType: !486)
!485 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!486 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !487, line: 45, baseType: !488)
!487 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!488 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!489 = !DIDerivedType(tag: DW_TAG_member, name: "build_hash", scope: !473, file: !472, line: 59, baseType: !490, size: 128, offset: 8448)
!490 = !DICompositeType(tag: DW_TAG_array_type, baseType: !271, size: 128, elements: !491)
!491 = !{!492}
!492 = !DISubrange(count: 16)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "recovered", scope: !473, file: !472, line: 60, baseType: !284, size: 16, offset: 8576)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "curlib", scope: !473, file: !472, line: 62, baseType: !260, size: 64, offset: 8640)
!495 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !473, file: !472, line: 63, baseType: !310, size: 128, offset: 8704)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "library", scope: !473, file: !472, line: 64, baseType: !310, size: 128, offset: 8832)
!497 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !473, file: !472, line: 65, baseType: !310, size: 128, offset: 8960)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "mesh", scope: !473, file: !472, line: 66, baseType: !310, size: 128, offset: 9088)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !473, file: !472, line: 67, baseType: !310, size: 128, offset: 9216)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "mball", scope: !473, file: !472, line: 68, baseType: !310, size: 128, offset: 9344)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !473, file: !472, line: 69, baseType: !310, size: 128, offset: 9472)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !473, file: !472, line: 70, baseType: !310, size: 128, offset: 9600)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !473, file: !472, line: 71, baseType: !310, size: 128, offset: 9728)
!504 = !DIDerivedType(tag: DW_TAG_member, name: "latt", scope: !473, file: !472, line: 72, baseType: !310, size: 128, offset: 9856)
!505 = !DIDerivedType(tag: DW_TAG_member, name: "lamp", scope: !473, file: !472, line: 73, baseType: !310, size: 128, offset: 9984)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !473, file: !472, line: 74, baseType: !310, size: 128, offset: 10112)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !473, file: !472, line: 75, baseType: !310, size: 128, offset: 10240)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !473, file: !472, line: 76, baseType: !310, size: 128, offset: 10368)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !473, file: !472, line: 77, baseType: !310, size: 128, offset: 10496)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !473, file: !472, line: 78, baseType: !310, size: 128, offset: 10624)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "script", scope: !473, file: !472, line: 79, baseType: !310, size: 128, offset: 10752)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !473, file: !472, line: 80, baseType: !310, size: 128, offset: 10880)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !473, file: !472, line: 81, baseType: !310, size: 128, offset: 11008)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "speaker", scope: !473, file: !472, line: 82, baseType: !310, size: 128, offset: 11136)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !473, file: !472, line: 83, baseType: !310, size: 128, offset: 11264)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !473, file: !472, line: 84, baseType: !310, size: 128, offset: 11392)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "armature", scope: !473, file: !472, line: 85, baseType: !310, size: 128, offset: 11520)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !473, file: !472, line: 86, baseType: !310, size: 128, offset: 11648)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !473, file: !472, line: 87, baseType: !310, size: 128, offset: 11776)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !473, file: !472, line: 88, baseType: !310, size: 128, offset: 11904)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !473, file: !472, line: 89, baseType: !310, size: 128, offset: 12032)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "palettes", scope: !473, file: !472, line: 90, baseType: !310, size: 128, offset: 12160)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "paintcurves", scope: !473, file: !472, line: 91, baseType: !310, size: 128, offset: 12288)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "wm", scope: !473, file: !472, line: 92, baseType: !310, size: 128, offset: 12416)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil", scope: !473, file: !472, line: 93, baseType: !310, size: 128, offset: 12544)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "movieclip", scope: !473, file: !472, line: 94, baseType: !310, size: 128, offset: 12672)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !473, file: !472, line: 95, baseType: !310, size: 128, offset: 12800)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "linestyle", scope: !473, file: !472, line: 96, baseType: !310, size: 128, offset: 12928)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "id_tag_update", scope: !473, file: !472, line: 98, baseType: !530, size: 2048, offset: 13056)
!530 = !DICompositeType(tag: DW_TAG_array_type, baseType: !271, size: 2048, elements: !531)
!531 = !{!532}
!532 = !DISubrange(count: 256)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "eval_ctx", scope: !473, file: !472, line: 101, baseType: !534, size: 64, offset: 15104)
!534 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !535, size: 64)
!535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EvaluationContext", file: !536, line: 58, size: 32, elements: !537)
!536 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_depsgraph.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!537 = !{!538}
!538 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !535, file: !536, line: 59, baseType: !141, size: 32)
!539 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !473, file: !472, line: 103, baseType: !540, size: 64, offset: 15168)
!540 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !541, size: 64)
!541 = !DICompositeType(tag: DW_TAG_structure_type, name: "MainLock", file: !472, line: 51, flags: DIFlagFwdDecl)
!542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !543, size: 64)
!543 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !271)
!544 = !{}
!545 = !DILocalVariable(name: "bmain", arg: 1, scope: !466, file: !1, line: 76, type: !470)
!546 = !DILocation(line: 76, column: 35, scope: !466)
!547 = !DILocalVariable(name: "name", arg: 2, scope: !466, file: !1, line: 76, type: !542)
!548 = !DILocation(line: 76, column: 54, scope: !466)
!549 = !DILocalVariable(name: "arm", scope: !466, file: !1, line: 78, type: !245)
!550 = !DILocation(line: 78, column: 13, scope: !466)
!551 = !DILocation(line: 80, column: 27, scope: !466)
!552 = !DILocation(line: 80, column: 41, scope: !466)
!553 = !DILocation(line: 80, column: 8, scope: !466)
!554 = !DILocation(line: 80, column: 6, scope: !466)
!555 = !DILocation(line: 81, column: 2, scope: !466)
!556 = !DILocation(line: 81, column: 7, scope: !466)
!557 = !DILocation(line: 81, column: 18, scope: !466)
!558 = !DILocation(line: 82, column: 2, scope: !466)
!559 = !DILocation(line: 82, column: 7, scope: !466)
!560 = !DILocation(line: 82, column: 12, scope: !466)
!561 = !DILocation(line: 83, column: 2, scope: !466)
!562 = !DILocation(line: 83, column: 7, scope: !466)
!563 = !DILocation(line: 83, column: 13, scope: !466)
!564 = !DILocation(line: 84, column: 9, scope: !466)
!565 = !DILocation(line: 84, column: 2, scope: !466)
!566 = distinct !DISubprogram(name: "BKE_armature_from_object", scope: !1, file: !1, line: 87, type: !567, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !544)
!567 = !DISubroutineType(types: !568)
!568 = !{!469, !569}
!569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !570, size: 64)
!570 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !57, line: 295, baseType: !571)
!571 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !57, line: 115, size: 11392, elements: !572)
!572 = !{!573, !574, !575, !578, !579, !580, !581, !582, !583, !584, !586, !587, !588, !589, !590, !594, !604, !606, !607, !648, !649, !653, !654, !670, !671, !672, !673, !674, !675, !676, !681, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692, !693, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !759, !760, !761, !762, !763, !764, !765, !766, !767, !770, !773, !776, !777, !778, !779, !780, !783, !805, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1304, !1307, !1309, !2021, !2022}
!573 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !571, file: !57, line: 116, baseType: !250, size: 960)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !571, file: !57, line: 117, baseType: !321, size: 64, offset: 960)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !571, file: !57, line: 119, baseType: !576, size: 64, offset: 1024)
!576 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !577, size: 64)
!577 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !57, line: 57, flags: DIFlagFwdDecl)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !571, file: !57, line: 121, baseType: !284, size: 16, offset: 1088)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !571, file: !57, line: 121, baseType: !284, size: 16, offset: 1104)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !571, file: !57, line: 122, baseType: !141, size: 32, offset: 1120)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !571, file: !57, line: 122, baseType: !141, size: 32, offset: 1152)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !571, file: !57, line: 122, baseType: !141, size: 32, offset: 1184)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !571, file: !57, line: 123, baseType: !300, size: 512, offset: 1216)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !571, file: !57, line: 124, baseType: !585, size: 64, offset: 1728)
!585 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !571, size: 64)
!586 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !571, file: !57, line: 124, baseType: !585, size: 64, offset: 1792)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !571, file: !57, line: 127, baseType: !585, size: 64, offset: 1856)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !571, file: !57, line: 127, baseType: !585, size: 64, offset: 1920)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !571, file: !57, line: 127, baseType: !585, size: 64, offset: 1984)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !571, file: !57, line: 128, baseType: !591, size: 64, offset: 2048)
!591 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !592, size: 64)
!592 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !593, line: 46, flags: DIFlagFwdDecl)
!593 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!594 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !571, file: !57, line: 130, baseType: !595, size: 64, offset: 2112)
!595 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !596, size: 64)
!596 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !57, line: 97, size: 832, elements: !597)
!597 = !{!598, !602, !603}
!598 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !596, file: !57, line: 98, baseType: !599, size: 768)
!599 = !DICompositeType(tag: DW_TAG_array_type, baseType: !366, size: 768, elements: !600)
!600 = !{!601, !410}
!601 = !DISubrange(count: 8)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !596, file: !57, line: 99, baseType: !141, size: 32, offset: 768)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !596, file: !57, line: 99, baseType: !141, size: 32, offset: 800)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !571, file: !57, line: 131, baseType: !605, size: 64, offset: 2176)
!605 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !328, size: 64)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !571, file: !57, line: 132, baseType: !605, size: 64, offset: 2240)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !571, file: !57, line: 133, baseType: !608, size: 64, offset: 2304)
!608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !609, size: 64)
!609 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !140, line: 334, size: 1728, elements: !610)
!610 = !{!611, !612, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !647}
!611 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !609, file: !140, line: 335, baseType: !310, size: 128)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !609, file: !140, line: 336, baseType: !613, size: 64, offset: 128)
!613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !614, size: 64)
!614 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !140, line: 47, flags: DIFlagFwdDecl)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !609, file: !140, line: 338, baseType: !284, size: 16, offset: 192)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !609, file: !140, line: 338, baseType: !284, size: 16, offset: 208)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !609, file: !140, line: 339, baseType: !5, size: 32, offset: 224)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !609, file: !140, line: 340, baseType: !141, size: 32, offset: 256)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !609, file: !140, line: 342, baseType: !366, size: 32, offset: 288)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !609, file: !140, line: 343, baseType: !408, size: 96, offset: 320)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !609, file: !140, line: 344, baseType: !408, size: 96, offset: 416)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !609, file: !140, line: 347, baseType: !310, size: 128, offset: 512)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !609, file: !140, line: 349, baseType: !141, size: 32, offset: 640)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !609, file: !140, line: 350, baseType: !141, size: 32, offset: 672)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !609, file: !140, line: 351, baseType: !255, size: 64, offset: 704)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !609, file: !140, line: 352, baseType: !255, size: 64, offset: 768)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !609, file: !140, line: 354, baseType: !628, size: 384, offset: 832)
!628 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !140, line: 116, baseType: !629)
!629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !140, line: 94, size: 384, elements: !630)
!630 = !{!631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646}
!631 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !629, file: !140, line: 96, baseType: !141, size: 32)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !629, file: !140, line: 96, baseType: !141, size: 32, offset: 32)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !629, file: !140, line: 97, baseType: !141, size: 32, offset: 64)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !629, file: !140, line: 97, baseType: !141, size: 32, offset: 96)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !629, file: !140, line: 99, baseType: !284, size: 16, offset: 128)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !629, file: !140, line: 100, baseType: !284, size: 16, offset: 144)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !629, file: !140, line: 102, baseType: !284, size: 16, offset: 160)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !629, file: !140, line: 105, baseType: !284, size: 16, offset: 176)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !629, file: !140, line: 108, baseType: !284, size: 16, offset: 192)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !629, file: !140, line: 109, baseType: !284, size: 16, offset: 208)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !629, file: !140, line: 111, baseType: !284, size: 16, offset: 224)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !629, file: !140, line: 112, baseType: !284, size: 16, offset: 240)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !629, file: !140, line: 114, baseType: !141, size: 32, offset: 256)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !629, file: !140, line: 114, baseType: !141, size: 32, offset: 288)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !629, file: !140, line: 115, baseType: !141, size: 32, offset: 320)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !629, file: !140, line: 115, baseType: !141, size: 32, offset: 352)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !609, file: !140, line: 355, baseType: !300, size: 512, offset: 1216)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !571, file: !57, line: 134, baseType: !255, size: 64, offset: 2368)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !571, file: !57, line: 136, baseType: !650, size: 64, offset: 2432)
!650 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !651, size: 64)
!651 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !652, line: 61, flags: DIFlagFwdDecl)
!652 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!653 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !571, file: !57, line: 138, baseType: !628, size: 384, offset: 2496)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !571, file: !57, line: 139, baseType: !655, size: 64, offset: 2880)
!655 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !656, size: 64)
!656 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !140, line: 80, baseType: !657)
!657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !140, line: 72, size: 192, elements: !658)
!658 = !{!659, !666, !667, !668, !669}
!659 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !657, file: !140, line: 73, baseType: !660, size: 64)
!660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !661, size: 64)
!661 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !140, line: 59, baseType: !662)
!662 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !140, line: 56, size: 128, elements: !663)
!663 = !{!664, !665}
!664 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !662, file: !140, line: 57, baseType: !408, size: 96)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !662, file: !140, line: 58, baseType: !141, size: 32, offset: 96)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !657, file: !140, line: 74, baseType: !141, size: 32, offset: 64)
!667 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !657, file: !140, line: 76, baseType: !141, size: 32, offset: 96)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !657, file: !140, line: 77, baseType: !141, size: 32, offset: 128)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !657, file: !140, line: 79, baseType: !141, size: 32, offset: 160)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !571, file: !57, line: 141, baseType: !310, size: 128, offset: 2944)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !571, file: !57, line: 142, baseType: !310, size: 128, offset: 3072)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !571, file: !57, line: 143, baseType: !310, size: 128, offset: 3200)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !571, file: !57, line: 144, baseType: !310, size: 128, offset: 3328)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !571, file: !57, line: 146, baseType: !141, size: 32, offset: 3456)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !571, file: !57, line: 147, baseType: !141, size: 32, offset: 3488)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !571, file: !57, line: 150, baseType: !677, size: 64, offset: 3520)
!677 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !678, size: 64)
!678 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !679, size: 64)
!679 = !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !680, line: 46, flags: DIFlagFwdDecl)
!680 = !DIFile(filename: "blender/source/blender/makesdna/DNA_curve_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!681 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !571, file: !57, line: 151, baseType: !682, size: 64, offset: 3584)
!682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !271, size: 64)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !571, file: !57, line: 152, baseType: !141, size: 32, offset: 3648)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !571, file: !57, line: 153, baseType: !141, size: 32, offset: 3680)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !571, file: !57, line: 156, baseType: !408, size: 96, offset: 3712)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !571, file: !57, line: 156, baseType: !408, size: 96, offset: 3808)
!687 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !571, file: !57, line: 156, baseType: !408, size: 96, offset: 3904)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !571, file: !57, line: 157, baseType: !408, size: 96, offset: 4000)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !571, file: !57, line: 158, baseType: !408, size: 96, offset: 4096)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !571, file: !57, line: 159, baseType: !408, size: 96, offset: 4192)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !571, file: !57, line: 160, baseType: !408, size: 96, offset: 4288)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !571, file: !57, line: 160, baseType: !408, size: 96, offset: 4384)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !571, file: !57, line: 161, baseType: !694, size: 128, offset: 4480)
!694 = !DICompositeType(tag: DW_TAG_array_type, baseType: !366, size: 128, elements: !695)
!695 = !{!421}
!696 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !571, file: !57, line: 161, baseType: !694, size: 128, offset: 4608)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !571, file: !57, line: 162, baseType: !408, size: 96, offset: 4736)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !571, file: !57, line: 162, baseType: !408, size: 96, offset: 4832)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !571, file: !57, line: 163, baseType: !366, size: 32, offset: 4928)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !571, file: !57, line: 163, baseType: !366, size: 32, offset: 4960)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !571, file: !57, line: 164, baseType: !419, size: 512, offset: 4992)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !571, file: !57, line: 165, baseType: !419, size: 512, offset: 5504)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !571, file: !57, line: 166, baseType: !419, size: 512, offset: 6016)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !571, file: !57, line: 167, baseType: !419, size: 512, offset: 6528)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !571, file: !57, line: 176, baseType: !419, size: 512, offset: 7040)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !571, file: !57, line: 178, baseType: !5, size: 32, offset: 7552)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !571, file: !57, line: 180, baseType: !284, size: 16, offset: 7584)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !571, file: !57, line: 181, baseType: !284, size: 16, offset: 7600)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !571, file: !57, line: 183, baseType: !284, size: 16, offset: 7616)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !571, file: !57, line: 183, baseType: !284, size: 16, offset: 7632)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !571, file: !57, line: 184, baseType: !284, size: 16, offset: 7648)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !571, file: !57, line: 184, baseType: !284, size: 16, offset: 7664)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !571, file: !57, line: 185, baseType: !284, size: 16, offset: 7680)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !571, file: !57, line: 186, baseType: !284, size: 16, offset: 7696)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !571, file: !57, line: 187, baseType: !284, size: 16, offset: 7712)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !571, file: !57, line: 188, baseType: !271, size: 8, offset: 7728)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !571, file: !57, line: 189, baseType: !271, size: 8, offset: 7736)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !571, file: !57, line: 192, baseType: !141, size: 32, offset: 7744)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !571, file: !57, line: 192, baseType: !141, size: 32, offset: 7776)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !571, file: !57, line: 192, baseType: !141, size: 32, offset: 7808)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !571, file: !57, line: 192, baseType: !141, size: 32, offset: 7840)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !571, file: !57, line: 194, baseType: !141, size: 32, offset: 7872)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !571, file: !57, line: 202, baseType: !366, size: 32, offset: 7904)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !571, file: !57, line: 202, baseType: !366, size: 32, offset: 7936)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !571, file: !57, line: 202, baseType: !366, size: 32, offset: 7968)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !571, file: !57, line: 211, baseType: !366, size: 32, offset: 8000)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !571, file: !57, line: 212, baseType: !366, size: 32, offset: 8032)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !571, file: !57, line: 213, baseType: !366, size: 32, offset: 8064)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !571, file: !57, line: 214, baseType: !366, size: 32, offset: 8096)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !571, file: !57, line: 215, baseType: !366, size: 32, offset: 8128)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !571, file: !57, line: 216, baseType: !366, size: 32, offset: 8160)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !571, file: !57, line: 219, baseType: !366, size: 32, offset: 8192)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !571, file: !57, line: 220, baseType: !366, size: 32, offset: 8224)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !571, file: !57, line: 221, baseType: !366, size: 32, offset: 8256)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !571, file: !57, line: 224, baseType: !736, size: 16, offset: 8288)
!736 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !571, file: !57, line: 224, baseType: !736, size: 16, offset: 8304)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !571, file: !57, line: 226, baseType: !284, size: 16, offset: 8320)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !571, file: !57, line: 228, baseType: !271, size: 8, offset: 8336)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !571, file: !57, line: 229, baseType: !271, size: 8, offset: 8344)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !571, file: !57, line: 231, baseType: !284, size: 16, offset: 8352)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !571, file: !57, line: 232, baseType: !271, size: 8, offset: 8368)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !571, file: !57, line: 233, baseType: !271, size: 8, offset: 8376)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !571, file: !57, line: 234, baseType: !366, size: 32, offset: 8384)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !571, file: !57, line: 235, baseType: !366, size: 32, offset: 8416)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !571, file: !57, line: 237, baseType: !310, size: 128, offset: 8448)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !571, file: !57, line: 238, baseType: !310, size: 128, offset: 8576)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !571, file: !57, line: 239, baseType: !310, size: 128, offset: 8704)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !571, file: !57, line: 240, baseType: !310, size: 128, offset: 8832)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !571, file: !57, line: 242, baseType: !366, size: 32, offset: 8960)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !571, file: !57, line: 244, baseType: !284, size: 16, offset: 8992)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !571, file: !57, line: 245, baseType: !736, size: 16, offset: 9008)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !571, file: !57, line: 246, baseType: !694, size: 128, offset: 9024)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !571, file: !57, line: 248, baseType: !141, size: 32, offset: 9152)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !571, file: !57, line: 249, baseType: !141, size: 32, offset: 9184)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !571, file: !57, line: 251, baseType: !757, size: 64, offset: 9216)
!757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !758, size: 64)
!758 = !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !57, line: 251, flags: DIFlagFwdDecl)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !571, file: !57, line: 253, baseType: !271, size: 8, offset: 9280)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !571, file: !57, line: 254, baseType: !271, size: 8, offset: 9288)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !571, file: !57, line: 255, baseType: !284, size: 16, offset: 9296)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !571, file: !57, line: 256, baseType: !408, size: 96, offset: 9312)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !571, file: !57, line: 258, baseType: !310, size: 128, offset: 9408)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !571, file: !57, line: 259, baseType: !310, size: 128, offset: 9536)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !571, file: !57, line: 260, baseType: !310, size: 128, offset: 9664)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !571, file: !57, line: 261, baseType: !310, size: 128, offset: 9792)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !571, file: !57, line: 263, baseType: !768, size: 64, offset: 9920)
!768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !769, size: 64)
!769 = !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !57, line: 52, flags: DIFlagFwdDecl)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !571, file: !57, line: 264, baseType: !771, size: 64, offset: 9984)
!771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !772, size: 64)
!772 = !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !57, line: 53, flags: DIFlagFwdDecl)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !571, file: !57, line: 265, baseType: !774, size: 64, offset: 10048)
!774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !775, size: 64)
!775 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !140, line: 46, flags: DIFlagFwdDecl)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !571, file: !57, line: 267, baseType: !271, size: 8, offset: 10112)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !571, file: !57, line: 268, baseType: !271, size: 8, offset: 10120)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !571, file: !57, line: 269, baseType: !284, size: 16, offset: 10128)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !571, file: !57, line: 270, baseType: !366, size: 32, offset: 10144)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !571, file: !57, line: 272, baseType: !781, size: 64, offset: 10176)
!781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !782, size: 64)
!782 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !57, line: 54, flags: DIFlagFwdDecl)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !571, file: !57, line: 275, baseType: !784, size: 64, offset: 10240)
!784 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !785, size: 64)
!785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !786, line: 49, size: 448, elements: !787)
!786 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_curve.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!787 = !{!788, !789, !790, !791}
!788 = !DIDerivedType(tag: DW_TAG_member, name: "disp", scope: !785, file: !786, line: 50, baseType: !310, size: 128)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "bev", scope: !785, file: !786, line: 51, baseType: !310, size: 128, offset: 128)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "deformed_nurbs", scope: !785, file: !786, line: 52, baseType: !310, size: 128, offset: 256)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !785, file: !786, line: 53, baseType: !792, size: 64, offset: 384)
!792 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !793, size: 64)
!793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Path", file: !680, line: 65, size: 128, elements: !794)
!794 = !{!795, !803, !804}
!795 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !793, file: !680, line: 66, baseType: !796, size: 64)
!796 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !797, size: 64)
!797 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PathPoint", file: !680, line: 56, size: 320, elements: !798)
!798 = !{!799, !800, !801, !802}
!799 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !797, file: !680, line: 57, baseType: !694, size: 128)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !797, file: !680, line: 58, baseType: !694, size: 128, offset: 128)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !797, file: !680, line: 59, baseType: !366, size: 32, offset: 256)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !797, file: !680, line: 59, baseType: !366, size: 32, offset: 288)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !793, file: !680, line: 67, baseType: !141, size: 32, offset: 64)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "totdist", scope: !793, file: !680, line: 68, baseType: !366, size: 32, offset: 96)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !571, file: !57, line: 277, baseType: !806, size: 64, offset: 10304)
!806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !807, size: 64)
!807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !30, line: 178, size: 13504, elements: !808)
!808 = !{!809, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !861, !864, !866, !867, !869, !870, !871, !872, !878, !883, !884, !888, !889, !890, !891, !892, !905, !917, !931, !935, !939, !943, !952, !964, !968, !972, !976, !980, !984, !985, !986, !987, !988, !989, !993, !994, !995, !996, !1000, !1001, !1002, !1003, !1004, !1009, !1010, !1011, !1012, !1013, !1017, !1018, !1019, !1020, !1021, !1028, !1039, !1044, !1050, !1060, !1066, !1077, !1084, !1091, !1095, !1100, !1104, !1109, !1110, !1111, !1118, !1124, !1125, !1126, !1131, !1132, !1141, !1250, !1254, !1262, !1266, !1270, !1274, !1282, !1292}
!809 = !DIDerivedType(tag: DW_TAG_member, name: "vertData", scope: !807, file: !30, line: 180, baseType: !810, size: 1600)
!810 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomData", file: !96, line: 73, baseType: !811)
!811 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomData", file: !96, line: 64, size: 1600, elements: !812)
!812 = !{!813, !828, !832, !833, !834, !835, !838}
!813 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !811, file: !96, line: 65, baseType: !814, size: 64)
!814 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !815, size: 64)
!815 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataLayer", file: !96, line: 53, baseType: !816)
!816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataLayer", file: !96, line: 42, size: 832, elements: !817)
!817 = !{!818, !819, !820, !821, !822, !823, !824, !825, !826, !827}
!818 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !816, file: !96, line: 43, baseType: !141, size: 32)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !816, file: !96, line: 44, baseType: !141, size: 32, offset: 32)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !816, file: !96, line: 45, baseType: !141, size: 32, offset: 64)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !816, file: !96, line: 46, baseType: !141, size: 32, offset: 96)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "active_rnd", scope: !816, file: !96, line: 47, baseType: !141, size: 32, offset: 128)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "active_clone", scope: !816, file: !96, line: 48, baseType: !141, size: 32, offset: 160)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "active_mask", scope: !816, file: !96, line: 49, baseType: !141, size: 32, offset: 192)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !816, file: !96, line: 50, baseType: !141, size: 32, offset: 224)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !816, file: !96, line: 51, baseType: !300, size: 512, offset: 256)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !816, file: !96, line: 52, baseType: !255, size: 64, offset: 768)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "typemap", scope: !811, file: !96, line: 66, baseType: !829, size: 1312, offset: 64)
!829 = !DICompositeType(tag: DW_TAG_array_type, baseType: !141, size: 1312, elements: !830)
!830 = !{!831}
!831 = !DISubrange(count: 41)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "totlayer", scope: !811, file: !96, line: 69, baseType: !141, size: 32, offset: 1376)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "maxlayer", scope: !811, file: !96, line: 69, baseType: !141, size: 32, offset: 1408)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "totsize", scope: !811, file: !96, line: 70, baseType: !141, size: 32, offset: 1440)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !811, file: !96, line: 71, baseType: !836, size: 64, offset: 1472)
!836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !837, size: 64)
!837 = !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool", file: !96, line: 71, flags: DIFlagFwdDecl)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !811, file: !96, line: 72, baseType: !839, size: 64, offset: 1536)
!839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !840, size: 64)
!840 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataExternal", file: !96, line: 59, baseType: !841)
!841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataExternal", file: !96, line: 57, size: 8192, elements: !842)
!842 = !{!843}
!843 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !841, file: !96, line: 58, baseType: !270, size: 8192)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "edgeData", scope: !807, file: !30, line: 180, baseType: !810, size: 1600, offset: 1600)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "faceData", scope: !807, file: !30, line: 180, baseType: !810, size: 1600, offset: 3200)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "loopData", scope: !807, file: !30, line: 180, baseType: !810, size: 1600, offset: 4800)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "polyData", scope: !807, file: !30, line: 180, baseType: !810, size: 1600, offset: 6400)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "numVertData", scope: !807, file: !30, line: 181, baseType: !141, size: 32, offset: 8000)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "numEdgeData", scope: !807, file: !30, line: 181, baseType: !141, size: 32, offset: 8032)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "numTessFaceData", scope: !807, file: !30, line: 181, baseType: !141, size: 32, offset: 8064)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "numLoopData", scope: !807, file: !30, line: 181, baseType: !141, size: 32, offset: 8096)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "numPolyData", scope: !807, file: !30, line: 181, baseType: !141, size: 32, offset: 8128)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "needsFree", scope: !807, file: !30, line: 182, baseType: !141, size: 32, offset: 8160)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "deformedOnly", scope: !807, file: !30, line: 183, baseType: !141, size: 32, offset: 8192)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "bvhCache", scope: !807, file: !30, line: 184, baseType: !856, size: 64, offset: 8256)
!856 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHCache", file: !857, line: 124, baseType: !858)
!857 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_bvhutils.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!858 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !859, size: 64)
!859 = !DICompositeType(tag: DW_TAG_structure_type, name: "LinkNode", file: !860, line: 118, flags: DIFlagFwdDecl)
!860 = !DIFile(filename: "blender/source/blender/blenlib/BLI_fileops.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!861 = !DIDerivedType(tag: DW_TAG_member, name: "drawObject", scope: !807, file: !30, line: 185, baseType: !862, size: 64, offset: 8320)
!862 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !863, size: 64)
!863 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUDrawObject", file: !30, line: 97, flags: DIFlagFwdDecl)
!864 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !807, file: !30, line: 186, baseType: !865, size: 32, offset: 8384)
!865 = !DIDerivedType(tag: DW_TAG_typedef, name: "DerivedMeshType", file: !30, line: 132, baseType: !29)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "auto_bump_scale", scope: !807, file: !30, line: 187, baseType: !366, size: 32, offset: 8416)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "dirty", scope: !807, file: !30, line: 188, baseType: !868, size: 32, offset: 8448)
!868 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDirtyFlag", file: !30, line: 175, baseType: !35)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "totmat", scope: !807, file: !30, line: 189, baseType: !141, size: 32, offset: 8480)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !807, file: !30, line: 190, baseType: !677, size: 64, offset: 8512)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "cd_flag", scope: !807, file: !30, line: 193, baseType: !271, size: 8, offset: 8576)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "calcNormals", scope: !807, file: !30, line: 196, baseType: !873, size: 64, offset: 8640)
!873 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !874, size: 64)
!874 = !DISubroutineType(types: !875)
!875 = !{null, !876}
!876 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !877, size: 64)
!877 = !DIDerivedType(tag: DW_TAG_typedef, name: "DerivedMesh", file: !30, line: 177, baseType: !807)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "calcLoopNormals", scope: !807, file: !30, line: 199, baseType: !879, size: 64, offset: 8704)
!879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !880, size: 64)
!880 = !DISubroutineType(types: !881)
!881 = !{null, !876, !882}
!882 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !366)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "recalcTessellation", scope: !807, file: !30, line: 202, baseType: !873, size: 64, offset: 8768)
!884 = !DIDerivedType(tag: DW_TAG_member, name: "getNumVerts", scope: !807, file: !30, line: 207, baseType: !885, size: 64, offset: 8832)
!885 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !886, size: 64)
!886 = !DISubroutineType(types: !887)
!887 = !{!141, !876}
!888 = !DIDerivedType(tag: DW_TAG_member, name: "getNumEdges", scope: !807, file: !30, line: 208, baseType: !885, size: 64, offset: 8896)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "getNumTessFaces", scope: !807, file: !30, line: 209, baseType: !885, size: 64, offset: 8960)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "getNumLoops", scope: !807, file: !30, line: 210, baseType: !885, size: 64, offset: 9024)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "getNumPolys", scope: !807, file: !30, line: 211, baseType: !885, size: 64, offset: 9088)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "getVert", scope: !807, file: !30, line: 218, baseType: !893, size: 64, offset: 9152)
!893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !894, size: 64)
!894 = !DISubroutineType(types: !895)
!895 = !{null, !876, !141, !896}
!896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !897, size: 64)
!897 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MVert", file: !898, line: 65, size: 160, elements: !899)
!898 = !DIFile(filename: "blender/source/blender/makesdna/DNA_meshdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!899 = !{!900, !901, !903, !904}
!900 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !897, file: !898, line: 66, baseType: !408, size: 96)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !897, file: !898, line: 67, baseType: !902, size: 48, offset: 96)
!902 = !DICompositeType(tag: DW_TAG_array_type, baseType: !284, size: 48, elements: !409)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !897, file: !898, line: 68, baseType: !271, size: 8, offset: 144)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !897, file: !898, line: 68, baseType: !271, size: 8, offset: 152)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "getEdge", scope: !807, file: !30, line: 219, baseType: !906, size: 64, offset: 9216)
!906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !907, size: 64)
!907 = !DISubroutineType(types: !908)
!908 = !{null, !876, !141, !909}
!909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !910, size: 64)
!910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MEdge", file: !898, line: 48, size: 96, elements: !911)
!911 = !{!912, !913, !914, !915, !916}
!912 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !910, file: !898, line: 49, baseType: !5, size: 32)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !910, file: !898, line: 49, baseType: !5, size: 32, offset: 32)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "crease", scope: !910, file: !898, line: 50, baseType: !271, size: 8, offset: 64)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !910, file: !898, line: 50, baseType: !271, size: 8, offset: 72)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !910, file: !898, line: 51, baseType: !284, size: 16, offset: 80)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFace", scope: !807, file: !30, line: 220, baseType: !918, size: 64, offset: 9280)
!918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !919, size: 64)
!919 = !DISubroutineType(types: !920)
!920 = !{null, !876, !141, !921}
!921 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !922, size: 64)
!922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MFace", file: !898, line: 42, size: 160, elements: !923)
!923 = !{!924, !925, !926, !927, !928, !929, !930}
!924 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !922, file: !898, line: 43, baseType: !5, size: 32)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !922, file: !898, line: 43, baseType: !5, size: 32, offset: 32)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !922, file: !898, line: 43, baseType: !5, size: 32, offset: 64)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !922, file: !898, line: 43, baseType: !5, size: 32, offset: 96)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !922, file: !898, line: 44, baseType: !284, size: 16, offset: 128)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "edcode", scope: !922, file: !898, line: 45, baseType: !271, size: 8, offset: 144)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !922, file: !898, line: 45, baseType: !271, size: 8, offset: 152)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "getVertArray", scope: !807, file: !30, line: 227, baseType: !932, size: 64, offset: 9344)
!932 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !933, size: 64)
!933 = !DISubroutineType(types: !934)
!934 = !{!896, !876}
!935 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeArray", scope: !807, file: !30, line: 228, baseType: !936, size: 64, offset: 9408)
!936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !937, size: 64)
!937 = !DISubroutineType(types: !938)
!938 = !{!909, !876}
!939 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceArray", scope: !807, file: !30, line: 229, baseType: !940, size: 64, offset: 9472)
!940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !941, size: 64)
!941 = !DISubroutineType(types: !942)
!942 = !{!921, !876}
!943 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopArray", scope: !807, file: !30, line: 230, baseType: !944, size: 64, offset: 9536)
!944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !945, size: 64)
!945 = !DISubroutineType(types: !946)
!946 = !{!947, !876}
!947 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !948, size: 64)
!948 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoop", file: !898, line: 88, size: 64, elements: !949)
!949 = !{!950, !951}
!950 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !948, file: !898, line: 89, baseType: !5, size: 32)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !948, file: !898, line: 90, baseType: !5, size: 32, offset: 32)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyArray", scope: !807, file: !30, line: 231, baseType: !953, size: 64, offset: 9600)
!953 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !954, size: 64)
!954 = !DISubroutineType(types: !955)
!955 = !{!956, !876}
!956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !957, size: 64)
!957 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MPoly", file: !898, line: 79, size: 96, elements: !958)
!958 = !{!959, !960, !961, !962, !963}
!959 = !DIDerivedType(tag: DW_TAG_member, name: "loopstart", scope: !957, file: !898, line: 81, baseType: !141, size: 32)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !957, file: !898, line: 82, baseType: !141, size: 32, offset: 32)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !957, file: !898, line: 83, baseType: !284, size: 16, offset: 64)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !957, file: !898, line: 84, baseType: !271, size: 8, offset: 80)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !957, file: !898, line: 84, baseType: !271, size: 8, offset: 88)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "copyVertArray", scope: !807, file: !30, line: 236, baseType: !965, size: 64, offset: 9664)
!965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !966, size: 64)
!966 = !DISubroutineType(types: !967)
!967 = !{null, !876, !896}
!968 = !DIDerivedType(tag: DW_TAG_member, name: "copyEdgeArray", scope: !807, file: !30, line: 237, baseType: !969, size: 64, offset: 9728)
!969 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !970, size: 64)
!970 = !DISubroutineType(types: !971)
!971 = !{null, !876, !909}
!972 = !DIDerivedType(tag: DW_TAG_member, name: "copyTessFaceArray", scope: !807, file: !30, line: 238, baseType: !973, size: 64, offset: 9792)
!973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !974, size: 64)
!974 = !DISubroutineType(types: !975)
!975 = !{null, !876, !921}
!976 = !DIDerivedType(tag: DW_TAG_member, name: "copyLoopArray", scope: !807, file: !30, line: 239, baseType: !977, size: 64, offset: 9856)
!977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !978, size: 64)
!978 = !DISubroutineType(types: !979)
!979 = !{null, !876, !947}
!980 = !DIDerivedType(tag: DW_TAG_member, name: "copyPolyArray", scope: !807, file: !30, line: 240, baseType: !981, size: 64, offset: 9920)
!981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !982, size: 64)
!982 = !DISubroutineType(types: !983)
!983 = !{null, !876, !956}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "dupVertArray", scope: !807, file: !30, line: 245, baseType: !932, size: 64, offset: 9984)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "dupEdgeArray", scope: !807, file: !30, line: 246, baseType: !936, size: 64, offset: 10048)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "dupTessFaceArray", scope: !807, file: !30, line: 247, baseType: !940, size: 64, offset: 10112)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "dupLoopArray", scope: !807, file: !30, line: 248, baseType: !944, size: 64, offset: 10176)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "dupPolyArray", scope: !807, file: !30, line: 249, baseType: !953, size: 64, offset: 10240)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "getVertData", scope: !807, file: !30, line: 255, baseType: !990, size: 64, offset: 10304)
!990 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !991, size: 64)
!991 = !DISubroutineType(types: !992)
!992 = !{!255, !876, !141, !141}
!993 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeData", scope: !807, file: !30, line: 256, baseType: !990, size: 64, offset: 10368)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceData", scope: !807, file: !30, line: 257, baseType: !990, size: 64, offset: 10432)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyData", scope: !807, file: !30, line: 258, baseType: !990, size: 64, offset: 10496)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "getVertDataArray", scope: !807, file: !30, line: 264, baseType: !997, size: 64, offset: 10560)
!997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !998, size: 64)
!998 = !DISubroutineType(types: !999)
!999 = !{!255, !876, !141}
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeDataArray", scope: !807, file: !30, line: 265, baseType: !997, size: 64, offset: 10624)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceDataArray", scope: !807, file: !30, line: 266, baseType: !997, size: 64, offset: 10688)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopDataArray", scope: !807, file: !30, line: 267, baseType: !997, size: 64, offset: 10752)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyDataArray", scope: !807, file: !30, line: 268, baseType: !997, size: 64, offset: 10816)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "getVertDataLayout", scope: !807, file: !30, line: 272, baseType: !1005, size: 64, offset: 10880)
!1005 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1006, size: 64)
!1006 = !DISubroutineType(types: !1007)
!1007 = !{!1008, !876}
!1008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !810, size: 64)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeDataLayout", scope: !807, file: !30, line: 273, baseType: !1005, size: 64, offset: 10944)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceDataLayout", scope: !807, file: !30, line: 274, baseType: !1005, size: 64, offset: 11008)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopDataLayout", scope: !807, file: !30, line: 275, baseType: !1005, size: 64, offset: 11072)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyDataLayout", scope: !807, file: !30, line: 276, baseType: !1005, size: 64, offset: 11136)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromVertCData", scope: !807, file: !30, line: 279, baseType: !1014, size: 64, offset: 11200)
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 64)
!1015 = !DISubroutineType(types: !1016)
!1016 = !{null, !876, !141, !1008, !141}
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromEdgeCData", scope: !807, file: !30, line: 280, baseType: !1014, size: 64, offset: 11264)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromFaceCData", scope: !807, file: !30, line: 281, baseType: !1014, size: 64, offset: 11328)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "getNumGrids", scope: !807, file: !30, line: 284, baseType: !885, size: 64, offset: 11392)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "getGridSize", scope: !807, file: !30, line: 285, baseType: !885, size: 64, offset: 11456)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "getGridData", scope: !807, file: !30, line: 286, baseType: !1022, size: 64, offset: 11520)
!1022 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1023, size: 64)
!1023 = !DISubroutineType(types: !1024)
!1024 = !{!1025, !876}
!1025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1026, size: 64)
!1026 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1027, size: 64)
!1027 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGElem", file: !30, line: 82, flags: DIFlagFwdDecl)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "getGridAdjacency", scope: !807, file: !30, line: 287, baseType: !1029, size: 64, offset: 11584)
!1029 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1030, size: 64)
!1030 = !DISubroutineType(types: !1031)
!1031 = !{!1032, !876}
!1032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1033, size: 64)
!1033 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMGridAdjacency", file: !30, line: 120, baseType: !1034)
!1034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMGridAdjacency", file: !30, line: 117, size: 256, elements: !1035)
!1035 = !{!1036, !1038}
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1034, file: !30, line: 118, baseType: !1037, size: 128)
!1037 = !DICompositeType(tag: DW_TAG_array_type, baseType: !141, size: 128, elements: !695)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "rotation", scope: !1034, file: !30, line: 119, baseType: !1037, size: 128, offset: 128)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "getGridOffset", scope: !807, file: !30, line: 288, baseType: !1040, size: 64, offset: 11648)
!1040 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1041, size: 64)
!1041 = !DISubroutineType(types: !1042)
!1042 = !{!1043, !876}
!1043 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !141, size: 64)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "getGridKey", scope: !807, file: !30, line: 289, baseType: !1045, size: 64, offset: 11712)
!1045 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1046, size: 64)
!1046 = !DISubroutineType(types: !1047)
!1047 = !{null, !876, !1048}
!1048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1049, size: 64)
!1049 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGKey", file: !30, line: 83, flags: DIFlagFwdDecl)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "getGridFlagMats", scope: !807, file: !30, line: 290, baseType: !1051, size: 64, offset: 11776)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 64)
!1052 = !DISubroutineType(types: !1053)
!1053 = !{!1054, !876}
!1054 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1055, size: 64)
!1055 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMFlagMat", file: !30, line: 126, baseType: !1056)
!1056 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMFlagMat", file: !30, line: 123, size: 32, elements: !1057)
!1057 = !{!1058, !1059}
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !1056, file: !30, line: 124, baseType: !284, size: 16)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1056, file: !30, line: 125, baseType: !271, size: 8, offset: 16)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "getGridHidden", scope: !807, file: !30, line: 291, baseType: !1061, size: 64, offset: 11840)
!1061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1062, size: 64)
!1062 = !DISubroutineType(types: !1063)
!1063 = !{!1064, !876}
!1064 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1065, size: 64)
!1065 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedVert", scope: !807, file: !30, line: 299, baseType: !1067, size: 64, offset: 11904)
!1067 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1068, size: 64)
!1068 = !DISubroutineType(types: !1069)
!1069 = !{null, !876, !1070, !255, !1076}
!1070 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1071, size: 64)
!1071 = !DISubroutineType(types: !1072)
!1072 = !{null, !255, !141, !1073, !1073, !1074}
!1073 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !882, size: 64)
!1074 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1075, size: 64)
!1075 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !284)
!1076 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMForeachFlag", file: !30, line: 162, baseType: !40)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedEdge", scope: !807, file: !30, line: 309, baseType: !1078, size: 64, offset: 11968)
!1078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1079, size: 64)
!1079 = !DISubroutineType(types: !1080)
!1080 = !{null, !876, !1081, !255}
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 64)
!1082 = !DISubroutineType(types: !1083)
!1083 = !{null, !255, !141, !1073, !1073}
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedLoop", scope: !807, file: !30, line: 317, baseType: !1085, size: 64, offset: 12032)
!1085 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1086, size: 64)
!1086 = !DISubroutineType(types: !1087)
!1087 = !{null, !876, !1088, !255, !1076}
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1089, size: 64)
!1089 = !DISubroutineType(types: !1090)
!1090 = !{null, !255, !141, !141, !1073, !1073}
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedFaceCenter", scope: !807, file: !30, line: 327, baseType: !1092, size: 64, offset: 12096)
!1092 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1093, size: 64)
!1093 = !DISubroutineType(types: !1094)
!1094 = !{null, !876, !1081, !255, !1076}
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "getMinMax", scope: !807, file: !30, line: 337, baseType: !1096, size: 64, offset: 12160)
!1096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1097, size: 64)
!1097 = !DISubroutineType(types: !1098)
!1098 = !{null, !876, !1099, !1099}
!1099 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !366, size: 64)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "getVertCo", scope: !807, file: !30, line: 344, baseType: !1101, size: 64, offset: 12224)
!1101 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1102, size: 64)
!1102 = !DISubroutineType(types: !1103)
!1103 = !{null, !876, !141, !1099}
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "getVertCos", scope: !807, file: !30, line: 347, baseType: !1105, size: 64, offset: 12288)
!1105 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1106, size: 64)
!1106 = !DISubroutineType(types: !1107)
!1107 = !{null, !876, !1108}
!1108 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !408, size: 64)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "getVertNo", scope: !807, file: !30, line: 350, baseType: !1101, size: 64, offset: 12352)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyNo", scope: !807, file: !30, line: 351, baseType: !1101, size: 64, offset: 12416)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyMap", scope: !807, file: !30, line: 355, baseType: !1112, size: 64, offset: 12480)
!1112 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1113, size: 64)
!1113 = !DISubroutineType(types: !1114)
!1114 = !{!1115, !585, !876}
!1115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 64)
!1116 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1117)
!1117 = !DICompositeType(tag: DW_TAG_structure_type, name: "MeshElemMap", file: !30, line: 355, flags: DIFlagFwdDecl)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "getPBVH", scope: !807, file: !30, line: 359, baseType: !1119, size: 64, offset: 12544)
!1119 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1120, size: 64)
!1120 = !DISubroutineType(types: !1121)
!1121 = !{!1122, !585, !876}
!1122 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1123, size: 64)
!1123 = !DICompositeType(tag: DW_TAG_structure_type, name: "PBVH", file: !30, line: 100, flags: DIFlagFwdDecl)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "drawVerts", scope: !807, file: !30, line: 364, baseType: !873, size: 64, offset: 12608)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "drawUVEdges", scope: !807, file: !30, line: 367, baseType: !873, size: 64, offset: 12672)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "drawEdges", scope: !807, file: !30, line: 373, baseType: !1127, size: 64, offset: 12736)
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 64)
!1128 = !DISubroutineType(types: !1129)
!1129 = !{null, !876, !1130, !1130}
!1130 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "drawLooseEdges", scope: !807, file: !30, line: 376, baseType: !873, size: 64, offset: 12800)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesSolid", scope: !807, file: !30, line: 385, baseType: !1133, size: 64, offset: 12864)
!1133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1134, size: 64)
!1134 = !DISubroutineType(types: !1135)
!1135 = !{null, !876, !1136, !1130, !1137}
!1136 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !694, size: 64)
!1137 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetMaterial", file: !30, line: 146, baseType: !1138)
!1138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1139, size: 64)
!1139 = !DISubroutineType(types: !1140)
!1140 = !{!141, !141, !255}
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesTex", scope: !807, file: !30, line: 391, baseType: !1142, size: 64, offset: 12928)
!1142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1143, size: 64)
!1143 = !DISubroutineType(types: !1144)
!1144 = !{null, !876, !1145, !1245, !255, !1249}
!1145 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawOptionsTex", file: !30, line: 150, baseType: !1146)
!1146 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1147, size: 64)
!1147 = !DISubroutineType(types: !1148)
!1148 = !{!1149, !1150, !1244, !141}
!1149 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDrawOption", file: !30, line: 143, baseType: !44)
!1150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1151, size: 64)
!1151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTFace", file: !898, line: 160, size: 384, elements: !1152)
!1152 = !{!1153, !1157, !1239, !1240, !1241, !1242, !1243}
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !1151, file: !898, line: 161, baseType: !1154, size: 256)
!1154 = !DICompositeType(tag: DW_TAG_array_type, baseType: !366, size: 256, elements: !1155)
!1155 = !{!421, !1156}
!1156 = !DISubrange(count: 2)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !1151, file: !898, line: 162, baseType: !1158, size: 64, offset: 256)
!1158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1159, size: 64)
!1159 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !1160, line: 77, size: 15424, elements: !1161)
!1160 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1161 = !{!1162, !1163, !1164, !1167, !1170, !1173, !1176, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194, !1195, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1228, !1229, !1233}
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1159, file: !1160, line: 78, baseType: !250, size: 960)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1159, file: !1160, line: 80, baseType: !270, size: 8192, offset: 960)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1159, file: !1160, line: 82, baseType: !1165, size: 64, offset: 9152)
!1165 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1166, size: 64)
!1166 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !1160, line: 43, flags: DIFlagFwdDecl)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1159, file: !1160, line: 83, baseType: !1168, size: 64, offset: 9216)
!1168 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1169, size: 64)
!1169 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !251, line: 46, flags: DIFlagFwdDecl)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !1159, file: !1160, line: 86, baseType: !1171, size: 64, offset: 9280)
!1171 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1172, size: 64)
!1172 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !1160, line: 41, flags: DIFlagFwdDecl)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !1159, file: !1160, line: 87, baseType: !1174, size: 64, offset: 9344)
!1174 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1175, size: 64)
!1175 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !1160, line: 44, flags: DIFlagFwdDecl)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !1159, file: !1160, line: 89, baseType: !1177, size: 512, offset: 9408)
!1177 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1174, size: 512, elements: !1178)
!1178 = !{!601}
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !1159, file: !1160, line: 90, baseType: !284, size: 16, offset: 9920)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !1159, file: !1160, line: 90, baseType: !284, size: 16, offset: 9936)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1159, file: !1160, line: 92, baseType: !284, size: 16, offset: 9952)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1159, file: !1160, line: 92, baseType: !284, size: 16, offset: 9968)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1159, file: !1160, line: 93, baseType: !284, size: 16, offset: 9984)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1159, file: !1160, line: 93, baseType: !284, size: 16, offset: 10000)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !1159, file: !1160, line: 94, baseType: !141, size: 32, offset: 10016)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !1159, file: !1160, line: 97, baseType: !284, size: 16, offset: 10048)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !1159, file: !1160, line: 97, baseType: !284, size: 16, offset: 10064)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !1159, file: !1160, line: 98, baseType: !284, size: 16, offset: 10080)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !1159, file: !1160, line: 98, baseType: !284, size: 16, offset: 10096)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !1159, file: !1160, line: 99, baseType: !284, size: 16, offset: 10112)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !1159, file: !1160, line: 99, baseType: !284, size: 16, offset: 10128)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !1159, file: !1160, line: 100, baseType: !5, size: 32, offset: 10144)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !1159, file: !1160, line: 101, baseType: !1065, size: 64, offset: 10176)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !1159, file: !1160, line: 103, baseType: !277, size: 64, offset: 10240)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !1159, file: !1160, line: 104, baseType: !1196, size: 64, offset: 10304)
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1197, size: 64)
!1197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !251, line: 159, size: 448, elements: !1198)
!1198 = !{!1199, !1202, !1203, !1205, !1206, !1208}
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !1197, file: !251, line: 161, baseType: !1200, size: 64)
!1200 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 64, elements: !1201)
!1201 = !{!1156}
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !1197, file: !251, line: 162, baseType: !1200, size: 64, offset: 64)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !1197, file: !251, line: 163, baseType: !1204, size: 32, offset: 128)
!1204 = !DICompositeType(tag: DW_TAG_array_type, baseType: !284, size: 32, elements: !1201)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1197, file: !251, line: 164, baseType: !1204, size: 32, offset: 160)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !1197, file: !251, line: 165, baseType: !1207, size: 128, offset: 192)
!1207 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1065, size: 128, elements: !1201)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !1197, file: !251, line: 166, baseType: !1209, size: 128, offset: 320)
!1209 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1168, size: 128, elements: !1201)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !1159, file: !1160, line: 107, baseType: !366, size: 32, offset: 10368)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !1159, file: !1160, line: 108, baseType: !141, size: 32, offset: 10400)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !1159, file: !1160, line: 109, baseType: !284, size: 16, offset: 10432)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1159, file: !1160, line: 110, baseType: !284, size: 16, offset: 10448)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !1159, file: !1160, line: 113, baseType: !141, size: 32, offset: 10464)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !1159, file: !1160, line: 113, baseType: !141, size: 32, offset: 10496)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !1159, file: !1160, line: 114, baseType: !271, size: 8, offset: 10528)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !1159, file: !1160, line: 114, baseType: !271, size: 8, offset: 10536)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !1159, file: !1160, line: 115, baseType: !284, size: 16, offset: 10544)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !1159, file: !1160, line: 116, baseType: !694, size: 128, offset: 10560)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !1159, file: !1160, line: 119, baseType: !366, size: 32, offset: 10688)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !1159, file: !1160, line: 119, baseType: !366, size: 32, offset: 10720)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !1159, file: !1160, line: 122, baseType: !1223, size: 512, offset: 10752)
!1223 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !1224, line: 182, baseType: !1225)
!1224 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1225 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !1224, line: 180, size: 512, elements: !1226)
!1226 = !{!1227}
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1225, file: !1224, line: 181, baseType: !300, size: 512)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !1159, file: !1160, line: 123, baseType: !271, size: 8, offset: 11264)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1159, file: !1160, line: 125, baseType: !1230, size: 56, offset: 11272)
!1230 = !DICompositeType(tag: DW_TAG_array_type, baseType: !271, size: 56, elements: !1231)
!1231 = !{!1232}
!1232 = !DISubrange(count: 7)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !1159, file: !1160, line: 126, baseType: !1234, size: 4096, offset: 11328)
!1234 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1235, size: 4096, elements: !1178)
!1235 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !1160, line: 69, baseType: !1236)
!1236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !1160, line: 67, size: 512, elements: !1237)
!1237 = !{!1238}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1236, file: !1160, line: 68, baseType: !300, size: 512)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1151, file: !898, line: 163, baseType: !271, size: 8, offset: 320)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !1151, file: !898, line: 163, baseType: !271, size: 8, offset: 328)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1151, file: !898, line: 164, baseType: !284, size: 16, offset: 336)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !1151, file: !898, line: 164, baseType: !284, size: 16, offset: 352)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !1151, file: !898, line: 164, baseType: !284, size: 16, offset: 368)
!1244 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1130)
!1245 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMCompareDrawOptions", file: !30, line: 147, baseType: !1246)
!1246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1247, size: 64)
!1247 = !DISubroutineType(types: !1248)
!1248 = !{!141, !255, !141, !141}
!1249 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDrawFlag", file: !30, line: 157, baseType: !50)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesGLSL", scope: !807, file: !30, line: 400, baseType: !1251, size: 64, offset: 12992)
!1251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1252, size: 64)
!1252 = !DISubroutineType(types: !1253)
!1253 = !{null, !876, !1137}
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFaces", scope: !807, file: !30, line: 415, baseType: !1255, size: 64, offset: 13056)
!1255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1256, size: 64)
!1256 = !DISubroutineType(types: !1257)
!1257 = !{null, !876, !1258, !1137, !1245, !255, !1249}
!1258 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawOptions", file: !30, line: 149, baseType: !1259)
!1259 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1260, size: 64)
!1260 = !DISubroutineType(types: !1261)
!1261 = !{!1149, !255, !141}
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesTex", scope: !807, file: !30, line: 425, baseType: !1263, size: 64, offset: 13120)
!1263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1264, size: 64)
!1264 = !DISubroutineType(types: !1265)
!1265 = !{null, !876, !1258, !1245, !255, !1249}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesGLSL", scope: !807, file: !30, line: 435, baseType: !1267, size: 64, offset: 13184)
!1267 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1268, size: 64)
!1268 = !DISubroutineType(types: !1269)
!1269 = !{null, !876, !1137, !1258, !255}
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedEdges", scope: !807, file: !30, line: 444, baseType: !1271, size: 64, offset: 13248)
!1271 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1272, size: 64)
!1272 = !DISubroutineType(types: !1273)
!1273 = !{null, !876, !1258, !255}
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedEdgesInterp", scope: !807, file: !30, line: 455, baseType: !1275, size: 64, offset: 13312)
!1275 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1276, size: 64)
!1276 = !DISubroutineType(types: !1277)
!1277 = !{null, !876, !1258, !1278, !255}
!1278 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawInterpOptions", file: !30, line: 148, baseType: !1279)
!1279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1280, size: 64)
!1280 = !DISubroutineType(types: !1281)
!1281 = !{null, !255, !141, !366}
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesMat", scope: !807, file: !30, line: 464, baseType: !1283, size: 64, offset: 13376)
!1283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1284, size: 64)
!1284 = !DISubroutineType(types: !1285)
!1285 = !{null, !876, !1286, !1289, !255}
!1286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1287, size: 64)
!1287 = !DISubroutineType(types: !1288)
!1288 = !{null, !255, !141, !255}
!1289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1290, size: 64)
!1290 = !DISubroutineType(types: !1291)
!1291 = !{!1130, !255, !141}
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !807, file: !30, line: 470, baseType: !873, size: 64, offset: 13440)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !571, file: !57, line: 277, baseType: !806, size: 64, offset: 10368)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !571, file: !57, line: 278, baseType: !484, size: 64, offset: 10432)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !571, file: !57, line: 279, baseType: !484, size: 64, offset: 10496)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !571, file: !57, line: 280, baseType: !5, size: 32, offset: 10560)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !571, file: !57, line: 281, baseType: !5, size: 32, offset: 10592)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !571, file: !57, line: 283, baseType: !310, size: 128, offset: 10624)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !571, file: !57, line: 284, baseType: !310, size: 128, offset: 10752)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !571, file: !57, line: 285, baseType: !393, size: 64, offset: 10880)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !571, file: !57, line: 287, baseType: !1302, size: 64, offset: 10944)
!1302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1303, size: 64)
!1303 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !57, line: 59, flags: DIFlagFwdDecl)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !571, file: !57, line: 288, baseType: !1305, size: 64, offset: 11008)
!1305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1306, size: 64)
!1306 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !57, line: 288, flags: DIFlagFwdDecl)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !571, file: !57, line: 290, baseType: !1308, size: 64, offset: 11072)
!1308 = !DICompositeType(tag: DW_TAG_array_type, baseType: !366, size: 64, elements: !1201)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !571, file: !57, line: 291, baseType: !1310, size: 64, offset: 11136)
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1311, size: 64)
!1311 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !1160, line: 65, baseType: !1312)
!1312 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !1160, line: 50, size: 320, elements: !1313)
!1313 = !{!1314, !2008, !2009, !2010, !2011, !2012, !2013, !2014, !2015, !2016, !2017, !2018, !2019, !2020}
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1312, file: !1160, line: 51, baseType: !1315, size: 64)
!1315 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1316, size: 64)
!1316 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !652, line: 1216, size: 39680, elements: !1317)
!1317 = !{!1318, !1319, !1320, !1321, !1324, !1325, !1326, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1350, !1353, !1356, !1580, !1583, !1882, !1894, !1895, !1896, !1897, !1898, !1899, !1900, !1901, !1904, !1905, !1906, !1907, !1908, !1916, !1982, !1989, !1990, !1997, !2000, !2001, !2002, !2003, !2004, !2005}
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1316, file: !652, line: 1217, baseType: !250, size: 960)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !1316, file: !652, line: 1218, baseType: !321, size: 64, offset: 960)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !1316, file: !652, line: 1220, baseType: !585, size: 64, offset: 1024)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !1316, file: !652, line: 1221, baseType: !1322, size: 64, offset: 1088)
!1322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1323, size: 64)
!1323 = !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !652, line: 52, flags: DIFlagFwdDecl)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !1316, file: !652, line: 1223, baseType: !1315, size: 64, offset: 1152)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1316, file: !652, line: 1225, baseType: !310, size: 128, offset: 1216)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !1316, file: !652, line: 1226, baseType: !1327, size: 64, offset: 1344)
!1327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1328, size: 64)
!1328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !652, line: 69, size: 320, elements: !1329)
!1329 = !{!1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337}
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1328, file: !652, line: 70, baseType: !1327, size: 64)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1328, file: !652, line: 70, baseType: !1327, size: 64, offset: 64)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1328, file: !652, line: 71, baseType: !5, size: 32, offset: 128)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !1328, file: !652, line: 71, baseType: !5, size: 32, offset: 160)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1328, file: !652, line: 72, baseType: !141, size: 32, offset: 192)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !1328, file: !652, line: 73, baseType: !284, size: 16, offset: 224)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !1328, file: !652, line: 73, baseType: !284, size: 16, offset: 240)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1328, file: !652, line: 74, baseType: !585, size: 64, offset: 256)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !1316, file: !652, line: 1227, baseType: !585, size: 64, offset: 1408)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !1316, file: !652, line: 1229, baseType: !408, size: 96, offset: 1472)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !1316, file: !652, line: 1230, baseType: !408, size: 96, offset: 1568)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !1316, file: !652, line: 1231, baseType: !408, size: 96, offset: 1664)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !1316, file: !652, line: 1231, baseType: !408, size: 96, offset: 1760)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !1316, file: !652, line: 1233, baseType: !5, size: 32, offset: 1856)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !1316, file: !652, line: 1234, baseType: !141, size: 32, offset: 1888)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !1316, file: !652, line: 1235, baseType: !5, size: 32, offset: 1920)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1316, file: !652, line: 1237, baseType: !284, size: 16, offset: 1952)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !1316, file: !652, line: 1239, baseType: !271, size: 8, offset: 1968)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1316, file: !652, line: 1240, baseType: !1349, size: 8, offset: 1976)
!1349 = !DICompositeType(tag: DW_TAG_array_type, baseType: !271, size: 8, elements: !437)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !1316, file: !652, line: 1242, baseType: !1351, size: 64, offset: 1984)
!1351 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1352, size: 64)
!1352 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !593, line: 248, flags: DIFlagFwdDecl)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !1316, file: !652, line: 1244, baseType: !1354, size: 64, offset: 2048)
!1354 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1355, size: 64)
!1355 = !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !652, line: 59, flags: DIFlagFwdDecl)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !1316, file: !652, line: 1246, baseType: !1357, size: 64, offset: 2112)
!1357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1358, size: 64)
!1358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !652, line: 1067, size: 5184, elements: !1359)
!1359 = !{!1360, !1398, !1399, !1414, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1436, !1452, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1563}
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !1358, file: !652, line: 1068, baseType: !1361, size: 64)
!1361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1362, size: 64)
!1362 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !652, line: 934, baseType: !1363)
!1363 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !652, line: 925, size: 576, elements: !1364)
!1364 = !{!1365, !1381, !1382, !1383, !1384, !1385, !1397}
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1363, file: !652, line: 926, baseType: !1366, size: 320)
!1366 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !652, line: 830, baseType: !1367)
!1367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !652, line: 813, size: 320, elements: !1368)
!1368 = !{!1369, !1372, !1375, !1376, !1378, !1379, !1380}
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1367, file: !652, line: 814, baseType: !1370, size: 64)
!1370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1371, size: 64)
!1371 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !652, line: 51, flags: DIFlagFwdDecl)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !1367, file: !652, line: 815, baseType: !1373, size: 64, offset: 64)
!1373 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1374, size: 64)
!1374 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !652, line: 815, flags: DIFlagFwdDecl)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !1367, file: !652, line: 818, baseType: !255, size: 64, offset: 128)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !1367, file: !652, line: 819, baseType: !1377, size: 32, offset: 192)
!1377 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1130, size: 32, elements: !695)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1367, file: !652, line: 822, baseType: !141, size: 32, offset: 224)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !1367, file: !652, line: 826, baseType: !141, size: 32, offset: 256)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !1367, file: !652, line: 829, baseType: !141, size: 32, offset: 288)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1363, file: !652, line: 928, baseType: !284, size: 16, offset: 320)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1363, file: !652, line: 928, baseType: !284, size: 16, offset: 336)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !1363, file: !652, line: 929, baseType: !141, size: 32, offset: 352)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !1363, file: !652, line: 930, baseType: !1065, size: 64, offset: 384)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !1363, file: !652, line: 931, baseType: !1386, size: 64, offset: 448)
!1386 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1387, size: 64)
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !898, line: 59, size: 128, elements: !1388)
!1388 = !{!1389, !1395, !1396}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "dw", scope: !1387, file: !898, line: 60, baseType: !1390, size: 64)
!1390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1391, size: 64)
!1391 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformWeight", file: !898, line: 54, size: 64, elements: !1392)
!1392 = !{!1393, !1394}
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "def_nr", scope: !1391, file: !898, line: 55, baseType: !141, size: 32)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1391, file: !898, line: 56, baseType: !366, size: 32, offset: 32)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "totweight", scope: !1387, file: !898, line: 61, baseType: !141, size: 32, offset: 64)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1387, file: !898, line: 62, baseType: !141, size: 32, offset: 96)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1363, file: !652, line: 933, baseType: !255, size: 64, offset: 512)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !1358, file: !652, line: 1069, baseType: !1361, size: 64, offset: 64)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !1358, file: !652, line: 1070, baseType: !1400, size: 64, offset: 128)
!1400 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1401, size: 64)
!1401 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !652, line: 916, baseType: !1402)
!1402 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !652, line: 891, size: 704, elements: !1403)
!1403 = !{!1404, !1405, !1406, !1408, !1409, !1410, !1411, !1412, !1413}
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1402, file: !652, line: 892, baseType: !1366, size: 320)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1402, file: !652, line: 896, baseType: !141, size: 32, offset: 320)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !1402, file: !652, line: 900, baseType: !1407, size: 96, offset: 352)
!1407 = !DICompositeType(tag: DW_TAG_array_type, baseType: !141, size: 96, elements: !409)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !1402, file: !652, line: 903, baseType: !366, size: 32, offset: 448)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !1402, file: !652, line: 906, baseType: !141, size: 32, offset: 480)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !1402, file: !652, line: 909, baseType: !366, size: 32, offset: 512)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !1402, file: !652, line: 912, baseType: !366, size: 32, offset: 544)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !1402, file: !652, line: 914, baseType: !585, size: 64, offset: 576)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1402, file: !652, line: 915, baseType: !255, size: 64, offset: 640)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !1358, file: !652, line: 1071, baseType: !1415, size: 64, offset: 192)
!1415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1416, size: 64)
!1416 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !652, line: 920, baseType: !1417)
!1417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !652, line: 918, size: 320, elements: !1418)
!1418 = !{!1419}
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1417, file: !652, line: 919, baseType: !1366, size: 320)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !1358, file: !652, line: 1075, baseType: !366, size: 32, offset: 256)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !1358, file: !652, line: 1077, baseType: !366, size: 32, offset: 288)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !1358, file: !652, line: 1078, baseType: !366, size: 32, offset: 320)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !1358, file: !652, line: 1079, baseType: !284, size: 16, offset: 352)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1358, file: !652, line: 1082, baseType: !284, size: 16, offset: 368)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !1358, file: !652, line: 1085, baseType: !271, size: 8, offset: 384)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !1358, file: !652, line: 1086, baseType: !271, size: 8, offset: 392)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !1358, file: !652, line: 1087, baseType: !271, size: 8, offset: 400)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !1358, file: !652, line: 1088, baseType: !271, size: 8, offset: 408)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !1358, file: !652, line: 1090, baseType: !366, size: 32, offset: 416)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !1358, file: !652, line: 1093, baseType: !284, size: 16, offset: 448)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !1358, file: !652, line: 1096, baseType: !271, size: 8, offset: 464)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1358, file: !652, line: 1098, baseType: !1433, size: 40, offset: 472)
!1433 = !DICompositeType(tag: DW_TAG_array_type, baseType: !271, size: 40, elements: !1434)
!1434 = !{!1435}
!1435 = !DISubrange(count: 5)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !1358, file: !652, line: 1101, baseType: !1437, size: 832, offset: 512)
!1437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !652, line: 836, size: 832, elements: !1438)
!1438 = !{!1439, !1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451}
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !1437, file: !652, line: 837, baseType: !1366, size: 320)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1437, file: !652, line: 839, baseType: !284, size: 16, offset: 320)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !1437, file: !652, line: 839, baseType: !284, size: 16, offset: 336)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !1437, file: !652, line: 842, baseType: !284, size: 16, offset: 352)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !1437, file: !652, line: 842, baseType: !284, size: 16, offset: 368)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !1437, file: !652, line: 843, baseType: !1204, size: 32, offset: 384)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1437, file: !652, line: 845, baseType: !141, size: 32, offset: 416)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1437, file: !652, line: 847, baseType: !255, size: 64, offset: 448)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !1437, file: !652, line: 848, baseType: !1158, size: 64, offset: 512)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !1437, file: !652, line: 849, baseType: !1158, size: 64, offset: 576)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !1437, file: !652, line: 850, baseType: !1158, size: 64, offset: 640)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !1437, file: !652, line: 851, baseType: !408, size: 96, offset: 704)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1437, file: !652, line: 852, baseType: !366, size: 32, offset: 800)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !1358, file: !652, line: 1104, baseType: !1453, size: 1344, offset: 1344)
!1453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !652, line: 867, size: 1344, elements: !1454)
!1454 = !{!1455, !1456, !1457, !1458, !1459, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478}
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1453, file: !652, line: 868, baseType: !284, size: 16)
!1456 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !1453, file: !652, line: 869, baseType: !284, size: 16, offset: 16)
!1457 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !1453, file: !652, line: 870, baseType: !284, size: 16, offset: 32)
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !1453, file: !652, line: 871, baseType: !284, size: 16, offset: 48)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1453, file: !652, line: 873, baseType: !1460, size: 896, offset: 64)
!1460 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1461, size: 896, elements: !1231)
!1461 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !652, line: 864, baseType: !1462)
!1462 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !652, line: 859, size: 128, elements: !1463)
!1463 = !{!1464, !1465, !1466, !1467, !1468, !1469}
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1462, file: !652, line: 860, baseType: !284, size: 16)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !1462, file: !652, line: 861, baseType: !284, size: 16, offset: 16)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1462, file: !652, line: 861, baseType: !284, size: 16, offset: 32)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1462, file: !652, line: 861, baseType: !284, size: 16, offset: 48)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1462, file: !652, line: 862, baseType: !141, size: 32, offset: 64)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !1462, file: !652, line: 863, baseType: !366, size: 32, offset: 96)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1453, file: !652, line: 874, baseType: !255, size: 64, offset: 960)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !1453, file: !652, line: 876, baseType: !366, size: 32, offset: 1024)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1453, file: !652, line: 876, baseType: !366, size: 32, offset: 1056)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1453, file: !652, line: 878, baseType: !141, size: 32, offset: 1088)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !1453, file: !652, line: 879, baseType: !141, size: 32, offset: 1120)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !1453, file: !652, line: 881, baseType: !141, size: 32, offset: 1152)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !1453, file: !652, line: 881, baseType: !141, size: 32, offset: 1184)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1453, file: !652, line: 883, baseType: !1315, size: 64, offset: 1216)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1453, file: !652, line: 884, baseType: !585, size: 64, offset: 1280)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !1358, file: !652, line: 1107, baseType: !366, size: 32, offset: 2688)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !1358, file: !652, line: 1110, baseType: !366, size: 32, offset: 2720)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !1358, file: !652, line: 1113, baseType: !284, size: 16, offset: 2752)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !1358, file: !652, line: 1113, baseType: !284, size: 16, offset: 2768)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !1358, file: !652, line: 1116, baseType: !271, size: 8, offset: 2784)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1358, file: !652, line: 1117, baseType: !1349, size: 8, offset: 2792)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !1358, file: !652, line: 1120, baseType: !284, size: 16, offset: 2800)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !1358, file: !652, line: 1121, baseType: !366, size: 32, offset: 2816)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !1358, file: !652, line: 1122, baseType: !366, size: 32, offset: 2848)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !1358, file: !652, line: 1123, baseType: !366, size: 32, offset: 2880)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !1358, file: !652, line: 1124, baseType: !366, size: 32, offset: 2912)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !1358, file: !652, line: 1125, baseType: !366, size: 32, offset: 2944)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !1358, file: !652, line: 1126, baseType: !366, size: 32, offset: 2976)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !1358, file: !652, line: 1127, baseType: !366, size: 32, offset: 3008)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !1358, file: !652, line: 1128, baseType: !366, size: 32, offset: 3040)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !1358, file: !652, line: 1129, baseType: !366, size: 32, offset: 3072)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !1358, file: !652, line: 1130, baseType: !366, size: 32, offset: 3104)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !1358, file: !652, line: 1131, baseType: !284, size: 16, offset: 3136)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !1358, file: !652, line: 1132, baseType: !271, size: 8, offset: 3152)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !1358, file: !652, line: 1133, baseType: !271, size: 8, offset: 3160)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !1358, file: !652, line: 1134, baseType: !1500, size: 24, offset: 3168)
!1500 = !DICompositeType(tag: DW_TAG_array_type, baseType: !271, size: 24, elements: !409)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !1358, file: !652, line: 1135, baseType: !271, size: 8, offset: 3192)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !1358, file: !652, line: 1138, baseType: !585, size: 64, offset: 3200)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !1358, file: !652, line: 1139, baseType: !271, size: 8, offset: 3264)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !1358, file: !652, line: 1140, baseType: !271, size: 8, offset: 3272)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !1358, file: !652, line: 1141, baseType: !271, size: 8, offset: 3280)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !1358, file: !652, line: 1142, baseType: !271, size: 8, offset: 3288)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !1358, file: !652, line: 1143, baseType: !271, size: 8, offset: 3296)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !1358, file: !652, line: 1144, baseType: !1509, size: 64, offset: 3304)
!1509 = !DICompositeType(tag: DW_TAG_array_type, baseType: !271, size: 64, elements: !1178)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !1358, file: !652, line: 1145, baseType: !1509, size: 64, offset: 3368)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !1358, file: !652, line: 1148, baseType: !271, size: 8, offset: 3432)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !1358, file: !652, line: 1149, baseType: !271, size: 8, offset: 3440)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !1358, file: !652, line: 1152, baseType: !271, size: 8, offset: 3448)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !1358, file: !652, line: 1152, baseType: !271, size: 8, offset: 3456)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !1358, file: !652, line: 1153, baseType: !271, size: 8, offset: 3464)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !1358, file: !652, line: 1154, baseType: !284, size: 16, offset: 3472)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !1358, file: !652, line: 1154, baseType: !284, size: 16, offset: 3488)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !1358, file: !652, line: 1155, baseType: !284, size: 16, offset: 3504)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !1358, file: !652, line: 1155, baseType: !284, size: 16, offset: 3520)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !1358, file: !652, line: 1156, baseType: !271, size: 8, offset: 3536)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !1358, file: !652, line: 1157, baseType: !271, size: 8, offset: 3544)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !1358, file: !652, line: 1159, baseType: !271, size: 8, offset: 3552)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !1358, file: !652, line: 1160, baseType: !271, size: 8, offset: 3560)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !1358, file: !652, line: 1161, baseType: !271, size: 8, offset: 3568)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !1358, file: !652, line: 1162, baseType: !271, size: 8, offset: 3576)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !1358, file: !652, line: 1165, baseType: !141, size: 32, offset: 3584)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !1358, file: !652, line: 1166, baseType: !141, size: 32, offset: 3616)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !1358, file: !652, line: 1167, baseType: !141, size: 32, offset: 3648)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !1358, file: !652, line: 1168, baseType: !141, size: 32, offset: 3680)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !1358, file: !652, line: 1171, baseType: !284, size: 16, offset: 3712)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1358, file: !652, line: 1171, baseType: !284, size: 16, offset: 3728)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !1358, file: !652, line: 1172, baseType: !141, size: 32, offset: 3744)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !1358, file: !652, line: 1173, baseType: !366, size: 32, offset: 3776)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !1358, file: !652, line: 1174, baseType: !366, size: 32, offset: 3808)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !1358, file: !652, line: 1177, baseType: !1536, size: 1024, offset: 3840)
!1536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !652, line: 963, size: 1024, elements: !1537)
!1537 = !{!1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1561, !1562}
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1536, file: !652, line: 965, baseType: !141, size: 32)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !1536, file: !652, line: 968, baseType: !366, size: 32, offset: 32)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1536, file: !652, line: 971, baseType: !366, size: 32, offset: 64)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1536, file: !652, line: 974, baseType: !366, size: 32, offset: 96)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !1536, file: !652, line: 977, baseType: !408, size: 96, offset: 128)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !1536, file: !652, line: 979, baseType: !408, size: 96, offset: 224)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1536, file: !652, line: 982, baseType: !141, size: 32, offset: 320)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !1536, file: !652, line: 987, baseType: !1308, size: 64, offset: 352)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !1536, file: !652, line: 989, baseType: !366, size: 32, offset: 416)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !1536, file: !652, line: 994, baseType: !141, size: 32, offset: 448)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !1536, file: !652, line: 995, baseType: !141, size: 32, offset: 480)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !1536, file: !652, line: 997, baseType: !271, size: 8, offset: 512)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1536, file: !652, line: 998, baseType: !1230, size: 56, offset: 520)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !1536, file: !652, line: 1000, baseType: !366, size: 32, offset: 576)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !1536, file: !652, line: 1003, baseType: !1308, size: 64, offset: 608)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !1536, file: !652, line: 1006, baseType: !141, size: 32, offset: 672)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !1536, file: !652, line: 1009, baseType: !366, size: 32, offset: 704)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !1536, file: !652, line: 1012, baseType: !1308, size: 64, offset: 736)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !1536, file: !652, line: 1015, baseType: !1308, size: 64, offset: 800)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !1536, file: !652, line: 1018, baseType: !141, size: 32, offset: 864)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1536, file: !652, line: 1019, baseType: !1559, size: 64, offset: 896)
!1559 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1560, size: 64)
!1560 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !652, line: 63, flags: DIFlagFwdDecl)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !1536, file: !652, line: 1023, baseType: !366, size: 32, offset: 960)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1536, file: !652, line: 1024, baseType: !141, size: 32, offset: 992)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !1358, file: !652, line: 1179, baseType: !1564, size: 320, offset: 4864)
!1564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !652, line: 1043, size: 320, elements: !1565)
!1565 = !{!1566, !1567, !1569, !1570, !1571, !1572, !1573, !1574, !1575, !1576, !1577, !1578, !1579}
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1564, file: !652, line: 1044, baseType: !271, size: 8)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !1564, file: !652, line: 1045, baseType: !1568, size: 16, offset: 8)
!1568 = !DICompositeType(tag: DW_TAG_array_type, baseType: !271, size: 16, elements: !1201)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !1564, file: !652, line: 1048, baseType: !271, size: 8, offset: 24)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !1564, file: !652, line: 1049, baseType: !366, size: 32, offset: 32)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !1564, file: !652, line: 1049, baseType: !366, size: 32, offset: 64)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !1564, file: !652, line: 1052, baseType: !366, size: 32, offset: 96)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !1564, file: !652, line: 1052, baseType: !366, size: 32, offset: 128)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !1564, file: !652, line: 1053, baseType: !271, size: 8, offset: 160)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !1564, file: !652, line: 1054, baseType: !1500, size: 24, offset: 168)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !1564, file: !652, line: 1057, baseType: !366, size: 32, offset: 192)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !1564, file: !652, line: 1057, baseType: !366, size: 32, offset: 224)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !1564, file: !652, line: 1060, baseType: !366, size: 32, offset: 256)
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !1564, file: !652, line: 1060, baseType: !366, size: 32, offset: 288)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !1316, file: !652, line: 1247, baseType: !1581, size: 64, offset: 2176)
!1581 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1582, size: 64)
!1582 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !652, line: 60, flags: DIFlagFwdDecl)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1316, file: !652, line: 1251, baseType: !1584, size: 31872, offset: 2240)
!1584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !652, line: 403, size: 31872, elements: !1585)
!1585 = !{!1586, !1669, !1689, !1698, !1718, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1858, !1859, !1860, !1864, !1880, !1881}
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1584, file: !652, line: 404, baseType: !1587, size: 1984)
!1587 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !652, line: 259, size: 1984, elements: !1588)
!1588 = !{!1589, !1590, !1591, !1592, !1593, !1594, !1595, !1596, !1597, !1598, !1599, !1600, !1601, !1602, !1606, !1664}
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1587, file: !652, line: 260, baseType: !271, size: 8)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1587, file: !652, line: 263, baseType: !271, size: 8, offset: 8)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1587, file: !652, line: 266, baseType: !271, size: 8, offset: 16)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1587, file: !652, line: 267, baseType: !271, size: 8, offset: 24)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1587, file: !652, line: 269, baseType: !271, size: 8, offset: 32)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !1587, file: !652, line: 270, baseType: !271, size: 8, offset: 40)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !1587, file: !652, line: 276, baseType: !271, size: 8, offset: 48)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !1587, file: !652, line: 279, baseType: !271, size: 8, offset: 56)
!1597 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !1587, file: !652, line: 280, baseType: !284, size: 16, offset: 64)
!1598 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !1587, file: !652, line: 280, baseType: !284, size: 16, offset: 80)
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !1587, file: !652, line: 281, baseType: !366, size: 32, offset: 96)
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !1587, file: !652, line: 284, baseType: !271, size: 8, offset: 128)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !1587, file: !652, line: 285, baseType: !271, size: 8, offset: 136)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1587, file: !652, line: 287, baseType: !1603, size: 48, offset: 144)
!1603 = !DICompositeType(tag: DW_TAG_array_type, baseType: !271, size: 48, elements: !1604)
!1604 = !{!1605}
!1605 = !DISubrange(count: 6)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1587, file: !652, line: 290, baseType: !1607, size: 1280, offset: 192)
!1607 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !1224, line: 174, baseType: !1608)
!1608 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !1224, line: 166, size: 1280, elements: !1609)
!1609 = !{!1610, !1611, !1612, !1613, !1614, !1615, !1616, !1663}
!1610 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1608, file: !1224, line: 167, baseType: !141, size: 32)
!1611 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1608, file: !1224, line: 167, baseType: !141, size: 32, offset: 32)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !1608, file: !1224, line: 168, baseType: !300, size: 512, offset: 64)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !1608, file: !1224, line: 169, baseType: !300, size: 512, offset: 576)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !1608, file: !1224, line: 170, baseType: !366, size: 32, offset: 1088)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !1608, file: !1224, line: 171, baseType: !366, size: 32, offset: 1120)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !1608, file: !1224, line: 172, baseType: !1617, size: 64, offset: 1152)
!1617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1618, size: 64)
!1618 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !1224, line: 72, size: 3072, elements: !1619)
!1619 = !{!1620, !1621, !1622, !1623, !1624, !1633, !1634, !1659, !1660, !1661, !1662}
!1620 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1618, file: !1224, line: 73, baseType: !141, size: 32)
!1621 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1618, file: !1224, line: 73, baseType: !141, size: 32, offset: 32)
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !1618, file: !1224, line: 74, baseType: !141, size: 32, offset: 64)
!1623 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1618, file: !1224, line: 75, baseType: !141, size: 32, offset: 96)
!1624 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !1618, file: !1224, line: 77, baseType: !1625, size: 128, offset: 128)
!1625 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !1626, line: 95, baseType: !1627)
!1626 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1627 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !1626, line: 92, size: 128, elements: !1628)
!1628 = !{!1629, !1630, !1631, !1632}
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1627, file: !1626, line: 93, baseType: !366, size: 32)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1627, file: !1626, line: 93, baseType: !366, size: 32, offset: 32)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1627, file: !1626, line: 94, baseType: !366, size: 32, offset: 64)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1627, file: !1626, line: 94, baseType: !366, size: 32, offset: 96)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !1618, file: !1224, line: 77, baseType: !1625, size: 128, offset: 256)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !1618, file: !1224, line: 79, baseType: !1635, size: 2304, offset: 384)
!1635 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1636, size: 2304, elements: !695)
!1636 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !1224, line: 67, baseType: !1637)
!1637 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !1224, line: 55, size: 576, elements: !1638)
!1638 = !{!1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1655, !1656, !1657, !1658}
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1637, file: !1224, line: 56, baseType: !284, size: 16)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1637, file: !1224, line: 56, baseType: !284, size: 16, offset: 16)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1637, file: !1224, line: 58, baseType: !366, size: 32, offset: 32)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !1637, file: !1224, line: 59, baseType: !366, size: 32, offset: 64)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !1637, file: !1224, line: 59, baseType: !366, size: 32, offset: 96)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !1637, file: !1224, line: 60, baseType: !1308, size: 64, offset: 128)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !1637, file: !1224, line: 60, baseType: !1308, size: 64, offset: 192)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1637, file: !1224, line: 61, baseType: !1647, size: 64, offset: 256)
!1647 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1648, size: 64)
!1648 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !1224, line: 47, baseType: !1649)
!1649 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !1224, line: 44, size: 96, elements: !1650)
!1650 = !{!1651, !1652, !1653, !1654}
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1649, file: !1224, line: 45, baseType: !366, size: 32)
!1652 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1649, file: !1224, line: 45, baseType: !366, size: 32, offset: 32)
!1653 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1649, file: !1224, line: 46, baseType: !284, size: 16, offset: 64)
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !1649, file: !1224, line: 46, baseType: !284, size: 16, offset: 80)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1637, file: !1224, line: 62, baseType: !1647, size: 64, offset: 320)
!1656 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !1637, file: !1224, line: 64, baseType: !1647, size: 64, offset: 384)
!1657 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !1637, file: !1224, line: 65, baseType: !1308, size: 64, offset: 448)
!1658 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !1637, file: !1224, line: 66, baseType: !1308, size: 64, offset: 512)
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !1618, file: !1224, line: 80, baseType: !408, size: 96, offset: 2688)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !1618, file: !1224, line: 80, baseType: !408, size: 96, offset: 2784)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !1618, file: !1224, line: 81, baseType: !408, size: 96, offset: 2880)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !1618, file: !1224, line: 83, baseType: !408, size: 96, offset: 2976)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1608, file: !1224, line: 173, baseType: !255, size: 64, offset: 1216)
!1664 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1587, file: !652, line: 291, baseType: !1665, size: 512, offset: 1472)
!1665 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !1224, line: 178, baseType: !1666)
!1666 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !1224, line: 176, size: 512, elements: !1667)
!1667 = !{!1668}
!1668 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !1666, file: !1224, line: 177, baseType: !300, size: 512)
!1669 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !1584, file: !652, line: 406, baseType: !1670, size: 64, offset: 1984)
!1670 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1671, size: 64)
!1671 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !652, line: 80, size: 1472, elements: !1672)
!1672 = !{!1673, !1674, !1675, !1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685}
!1673 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !1671, file: !652, line: 81, baseType: !255, size: 64)
!1674 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !1671, file: !652, line: 82, baseType: !255, size: 64, offset: 64)
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !1671, file: !652, line: 83, baseType: !5, size: 32, offset: 128)
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !1671, file: !652, line: 84, baseType: !5, size: 32, offset: 160)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !1671, file: !652, line: 86, baseType: !5, size: 32, offset: 192)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !1671, file: !652, line: 87, baseType: !5, size: 32, offset: 224)
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !1671, file: !652, line: 88, baseType: !5, size: 32, offset: 256)
!1680 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !1671, file: !652, line: 89, baseType: !5, size: 32, offset: 288)
!1681 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !1671, file: !652, line: 90, baseType: !5, size: 32, offset: 320)
!1682 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !1671, file: !652, line: 91, baseType: !5, size: 32, offset: 352)
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !1671, file: !652, line: 92, baseType: !5, size: 32, offset: 384)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1671, file: !652, line: 93, baseType: !5, size: 32, offset: 416)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !1671, file: !652, line: 95, baseType: !1686, size: 1024, offset: 448)
!1686 = !DICompositeType(tag: DW_TAG_array_type, baseType: !271, size: 1024, elements: !1687)
!1687 = !{!1688}
!1688 = !DISubrange(count: 128)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !1584, file: !652, line: 407, baseType: !1690, size: 64, offset: 2048)
!1690 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1691, size: 64)
!1691 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !652, line: 98, size: 1216, elements: !1692)
!1692 = !{!1693, !1694, !1695, !1696, !1697}
!1693 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !1691, file: !652, line: 100, baseType: !255, size: 64)
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1691, file: !652, line: 101, baseType: !255, size: 64, offset: 64)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !1691, file: !652, line: 103, baseType: !5, size: 32, offset: 128)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1691, file: !652, line: 104, baseType: !5, size: 32, offset: 160)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !1691, file: !652, line: 106, baseType: !1686, size: 1024, offset: 192)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !1584, file: !652, line: 408, baseType: !1699, size: 512, offset: 2112)
!1699 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !652, line: 109, size: 512, elements: !1700)
!1700 = !{!1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717}
!1701 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !1699, file: !652, line: 111, baseType: !141, size: 32)
!1702 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !1699, file: !652, line: 112, baseType: !141, size: 32, offset: 32)
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1699, file: !652, line: 115, baseType: !141, size: 32, offset: 64)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !1699, file: !652, line: 116, baseType: !141, size: 32, offset: 96)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !1699, file: !652, line: 117, baseType: !141, size: 32, offset: 128)
!1706 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !1699, file: !652, line: 118, baseType: !141, size: 32, offset: 160)
!1707 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !1699, file: !652, line: 119, baseType: !141, size: 32, offset: 192)
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !1699, file: !652, line: 120, baseType: !141, size: 32, offset: 224)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !1699, file: !652, line: 121, baseType: !141, size: 32, offset: 256)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !1699, file: !652, line: 122, baseType: !141, size: 32, offset: 288)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !1699, file: !652, line: 125, baseType: !141, size: 32, offset: 320)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !1699, file: !652, line: 126, baseType: !141, size: 32, offset: 352)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !1699, file: !652, line: 127, baseType: !284, size: 16, offset: 384)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !1699, file: !652, line: 128, baseType: !284, size: 16, offset: 400)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !1699, file: !652, line: 129, baseType: !141, size: 32, offset: 416)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !1699, file: !652, line: 130, baseType: !141, size: 32, offset: 448)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1699, file: !652, line: 131, baseType: !141, size: 32, offset: 480)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !1584, file: !652, line: 409, baseType: !1719, size: 576, offset: 2624)
!1719 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !652, line: 134, size: 576, elements: !1720)
!1720 = !{!1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737}
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1719, file: !652, line: 135, baseType: !141, size: 32)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1719, file: !652, line: 136, baseType: !141, size: 32, offset: 32)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !1719, file: !652, line: 137, baseType: !141, size: 32, offset: 64)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !1719, file: !652, line: 138, baseType: !141, size: 32, offset: 96)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !1719, file: !652, line: 139, baseType: !141, size: 32, offset: 128)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !1719, file: !652, line: 140, baseType: !141, size: 32, offset: 160)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !1719, file: !652, line: 141, baseType: !141, size: 32, offset: 192)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !1719, file: !652, line: 142, baseType: !141, size: 32, offset: 224)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !1719, file: !652, line: 143, baseType: !366, size: 32, offset: 256)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1719, file: !652, line: 144, baseType: !141, size: 32, offset: 288)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1719, file: !652, line: 145, baseType: !141, size: 32, offset: 320)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1719, file: !652, line: 147, baseType: !141, size: 32, offset: 352)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1719, file: !652, line: 148, baseType: !141, size: 32, offset: 384)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1719, file: !652, line: 149, baseType: !141, size: 32, offset: 416)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !1719, file: !652, line: 150, baseType: !141, size: 32, offset: 448)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !1719, file: !652, line: 151, baseType: !141, size: 32, offset: 480)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1719, file: !652, line: 152, baseType: !289, size: 64, offset: 512)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !1584, file: !652, line: 411, baseType: !141, size: 32, offset: 3200)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1584, file: !652, line: 411, baseType: !141, size: 32, offset: 3232)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !1584, file: !652, line: 411, baseType: !141, size: 32, offset: 3264)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !1584, file: !652, line: 412, baseType: !366, size: 32, offset: 3296)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !1584, file: !652, line: 413, baseType: !141, size: 32, offset: 3328)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !1584, file: !652, line: 413, baseType: !141, size: 32, offset: 3360)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !1584, file: !652, line: 415, baseType: !141, size: 32, offset: 3392)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !1584, file: !652, line: 415, baseType: !141, size: 32, offset: 3424)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1584, file: !652, line: 416, baseType: !284, size: 16, offset: 3456)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !1584, file: !652, line: 416, baseType: !284, size: 16, offset: 3472)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !1584, file: !652, line: 418, baseType: !366, size: 32, offset: 3488)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !1584, file: !652, line: 418, baseType: !366, size: 32, offset: 3520)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !1584, file: !652, line: 421, baseType: !366, size: 32, offset: 3552)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !1584, file: !652, line: 421, baseType: !366, size: 32, offset: 3584)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !1584, file: !652, line: 421, baseType: !366, size: 32, offset: 3616)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !1584, file: !652, line: 425, baseType: !284, size: 16, offset: 3648)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1584, file: !652, line: 425, baseType: !284, size: 16, offset: 3664)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1584, file: !652, line: 425, baseType: !284, size: 16, offset: 3680)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1584, file: !652, line: 426, baseType: !284, size: 16, offset: 3696)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1584, file: !652, line: 428, baseType: !284, size: 16, offset: 3712)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1584, file: !652, line: 428, baseType: !284, size: 16, offset: 3728)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !1584, file: !652, line: 431, baseType: !141, size: 32, offset: 3744)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1584, file: !652, line: 433, baseType: !284, size: 16, offset: 3776)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !1584, file: !652, line: 435, baseType: !284, size: 16, offset: 3792)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !1584, file: !652, line: 437, baseType: !284, size: 16, offset: 3808)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1584, file: !652, line: 439, baseType: !284, size: 16, offset: 3824)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !1584, file: !652, line: 441, baseType: !284, size: 16, offset: 3840)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !1584, file: !652, line: 443, baseType: !284, size: 16, offset: 3856)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !1584, file: !652, line: 449, baseType: !141, size: 32, offset: 3872)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !1584, file: !652, line: 453, baseType: !141, size: 32, offset: 3904)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !1584, file: !652, line: 458, baseType: !284, size: 16, offset: 3936)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !1584, file: !652, line: 462, baseType: !284, size: 16, offset: 3952)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !1584, file: !652, line: 467, baseType: !141, size: 32, offset: 3968)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !1584, file: !652, line: 467, baseType: !141, size: 32, offset: 4000)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1584, file: !652, line: 469, baseType: !284, size: 16, offset: 4032)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1584, file: !652, line: 469, baseType: !284, size: 16, offset: 4048)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !1584, file: !652, line: 469, baseType: !284, size: 16, offset: 4064)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1584, file: !652, line: 469, baseType: !284, size: 16, offset: 4080)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !1584, file: !652, line: 474, baseType: !284, size: 16, offset: 4096)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !1584, file: !652, line: 475, baseType: !271, size: 8, offset: 4112)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !1584, file: !652, line: 476, baseType: !271, size: 8, offset: 4120)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !1584, file: !652, line: 481, baseType: !141, size: 32, offset: 4128)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1584, file: !652, line: 486, baseType: !141, size: 32, offset: 4160)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !1584, file: !652, line: 491, baseType: !141, size: 32, offset: 4192)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !1584, file: !652, line: 496, baseType: !284, size: 16, offset: 4224)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1584, file: !652, line: 498, baseType: !284, size: 16, offset: 4240)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !1584, file: !652, line: 501, baseType: !284, size: 16, offset: 4256)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1584, file: !652, line: 502, baseType: !284, size: 16, offset: 4272)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !1584, file: !652, line: 508, baseType: !284, size: 16, offset: 4288)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !1584, file: !652, line: 513, baseType: !284, size: 16, offset: 4304)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !1584, file: !652, line: 515, baseType: !284, size: 16, offset: 4320)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !1584, file: !652, line: 515, baseType: !284, size: 16, offset: 4336)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !1584, file: !652, line: 519, baseType: !1625, size: 128, offset: 4352)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !1584, file: !652, line: 519, baseType: !1625, size: 128, offset: 4480)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !1584, file: !652, line: 520, baseType: !1793, size: 128, offset: 4608)
!1793 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !1626, line: 89, baseType: !1794)
!1794 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !1626, line: 86, size: 128, elements: !1795)
!1795 = !{!1796, !1797, !1798, !1799}
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1794, file: !1626, line: 87, baseType: !141, size: 32)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1794, file: !1626, line: 87, baseType: !141, size: 32, offset: 32)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1794, file: !1626, line: 88, baseType: !141, size: 32, offset: 64)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1794, file: !1626, line: 88, baseType: !141, size: 32, offset: 96)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !1584, file: !652, line: 523, baseType: !310, size: 128, offset: 4736)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !1584, file: !652, line: 524, baseType: !284, size: 16, offset: 4864)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !1584, file: !652, line: 527, baseType: !284, size: 16, offset: 4880)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !1584, file: !652, line: 532, baseType: !366, size: 32, offset: 4896)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !1584, file: !652, line: 532, baseType: !366, size: 32, offset: 4928)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !1584, file: !652, line: 534, baseType: !366, size: 32, offset: 4960)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !1584, file: !652, line: 538, baseType: !366, size: 32, offset: 4992)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !1584, file: !652, line: 542, baseType: !141, size: 32, offset: 5024)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !1584, file: !652, line: 545, baseType: !366, size: 32, offset: 5056)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !1584, file: !652, line: 545, baseType: !366, size: 32, offset: 5088)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !1584, file: !652, line: 545, baseType: !366, size: 32, offset: 5120)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !1584, file: !652, line: 548, baseType: !366, size: 32, offset: 5152)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !1584, file: !652, line: 551, baseType: !284, size: 16, offset: 5184)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !1584, file: !652, line: 551, baseType: !284, size: 16, offset: 5200)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !1584, file: !652, line: 551, baseType: !284, size: 16, offset: 5216)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !1584, file: !652, line: 551, baseType: !284, size: 16, offset: 5232)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !1584, file: !652, line: 552, baseType: !284, size: 16, offset: 5248)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !1584, file: !652, line: 552, baseType: !284, size: 16, offset: 5264)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !1584, file: !652, line: 553, baseType: !366, size: 32, offset: 5280)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !1584, file: !652, line: 553, baseType: !366, size: 32, offset: 5312)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !1584, file: !652, line: 554, baseType: !284, size: 16, offset: 5344)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !1584, file: !652, line: 554, baseType: !284, size: 16, offset: 5360)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !1584, file: !652, line: 555, baseType: !366, size: 32, offset: 5376)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !1584, file: !652, line: 555, baseType: !366, size: 32, offset: 5408)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !1584, file: !652, line: 558, baseType: !270, size: 8192, offset: 5440)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !1584, file: !652, line: 561, baseType: !141, size: 32, offset: 13632)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !1584, file: !652, line: 562, baseType: !284, size: 16, offset: 13664)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1584, file: !652, line: 562, baseType: !284, size: 16, offset: 13680)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !1584, file: !652, line: 565, baseType: !1829, size: 6144, offset: 13696)
!1829 = !DICompositeType(tag: DW_TAG_array_type, baseType: !271, size: 6144, elements: !1830)
!1830 = !{!1831}
!1831 = !DISubrange(count: 768)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !1584, file: !652, line: 568, baseType: !694, size: 128, offset: 19840)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !1584, file: !652, line: 569, baseType: !694, size: 128, offset: 19968)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !1584, file: !652, line: 572, baseType: !271, size: 8, offset: 20096)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !1584, file: !652, line: 573, baseType: !271, size: 8, offset: 20104)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !1584, file: !652, line: 574, baseType: !271, size: 8, offset: 20112)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1584, file: !652, line: 575, baseType: !1433, size: 40, offset: 20120)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !1584, file: !652, line: 578, baseType: !141, size: 32, offset: 20160)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !1584, file: !652, line: 579, baseType: !284, size: 16, offset: 20192)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !1584, file: !652, line: 580, baseType: !284, size: 16, offset: 20208)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !1584, file: !652, line: 581, baseType: !366, size: 32, offset: 20224)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !1584, file: !652, line: 582, baseType: !366, size: 32, offset: 20256)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !1584, file: !652, line: 585, baseType: !284, size: 16, offset: 20288)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !1584, file: !652, line: 585, baseType: !284, size: 16, offset: 20304)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !1584, file: !652, line: 586, baseType: !366, size: 32, offset: 20320)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !1584, file: !652, line: 589, baseType: !284, size: 16, offset: 20352)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !1584, file: !652, line: 589, baseType: !284, size: 16, offset: 20368)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !1584, file: !652, line: 590, baseType: !141, size: 32, offset: 20384)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !1584, file: !652, line: 593, baseType: !284, size: 16, offset: 20416)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !1584, file: !652, line: 593, baseType: !284, size: 16, offset: 20432)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !1584, file: !652, line: 594, baseType: !284, size: 16, offset: 20448)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !1584, file: !652, line: 594, baseType: !284, size: 16, offset: 20464)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !1584, file: !652, line: 595, baseType: !366, size: 32, offset: 20480)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1584, file: !652, line: 596, baseType: !366, size: 32, offset: 20512)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !1584, file: !652, line: 597, baseType: !1856, size: 64, offset: 20544)
!1856 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1857, size: 64)
!1857 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !323, line: 205, flags: DIFlagFwdDecl)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !1584, file: !652, line: 600, baseType: !141, size: 32, offset: 20608)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !1584, file: !652, line: 601, baseType: !366, size: 32, offset: 20640)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !1584, file: !652, line: 604, baseType: !1861, size: 256, offset: 20672)
!1861 = !DICompositeType(tag: DW_TAG_array_type, baseType: !271, size: 256, elements: !1862)
!1862 = !{!1863}
!1863 = !DISubrange(count: 32)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !1584, file: !652, line: 607, baseType: !1865, size: 10880, offset: 20928)
!1865 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !652, line: 364, size: 10880, elements: !1866)
!1866 = !{!1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879}
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1865, file: !652, line: 365, baseType: !1587, size: 1984)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !1865, file: !652, line: 367, baseType: !270, size: 8192, offset: 1984)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1865, file: !652, line: 369, baseType: !284, size: 16, offset: 10176)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1865, file: !652, line: 369, baseType: !284, size: 16, offset: 10192)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1865, file: !652, line: 370, baseType: !284, size: 16, offset: 10208)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1865, file: !652, line: 370, baseType: !284, size: 16, offset: 10224)
!1873 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !1865, file: !652, line: 372, baseType: !366, size: 32, offset: 10240)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1865, file: !652, line: 373, baseType: !366, size: 32, offset: 10272)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !1865, file: !652, line: 375, baseType: !1500, size: 24, offset: 10304)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !1865, file: !652, line: 376, baseType: !271, size: 8, offset: 10328)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !1865, file: !652, line: 378, baseType: !271, size: 8, offset: 10336)
!1878 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1865, file: !652, line: 379, baseType: !1500, size: 24, offset: 10344)
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !1865, file: !652, line: 381, baseType: !300, size: 512, offset: 10368)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !1584, file: !652, line: 609, baseType: !141, size: 32, offset: 31808)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1584, file: !652, line: 610, baseType: !141, size: 32, offset: 31840)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !1316, file: !652, line: 1252, baseType: !1883, size: 256, offset: 34112)
!1883 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !652, line: 158, size: 256, elements: !1884)
!1884 = !{!1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893}
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !1883, file: !652, line: 159, baseType: !141, size: 32)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !1883, file: !652, line: 160, baseType: !366, size: 32, offset: 32)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !1883, file: !652, line: 161, baseType: !366, size: 32, offset: 64)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !1883, file: !652, line: 162, baseType: !366, size: 32, offset: 96)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !1883, file: !652, line: 163, baseType: !141, size: 32, offset: 128)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1883, file: !652, line: 164, baseType: !284, size: 16, offset: 160)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1883, file: !652, line: 165, baseType: !284, size: 16, offset: 176)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1883, file: !652, line: 166, baseType: !366, size: 32, offset: 192)
!1893 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1883, file: !652, line: 167, baseType: !366, size: 32, offset: 224)
!1894 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !1316, file: !652, line: 1254, baseType: !310, size: 128, offset: 34368)
!1895 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !1316, file: !652, line: 1255, baseType: !310, size: 128, offset: 34496)
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !1316, file: !652, line: 1257, baseType: !255, size: 64, offset: 34624)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !1316, file: !652, line: 1258, baseType: !255, size: 64, offset: 34688)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !1316, file: !652, line: 1259, baseType: !255, size: 64, offset: 34752)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !1316, file: !652, line: 1260, baseType: !255, size: 64, offset: 34816)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !1316, file: !652, line: 1262, baseType: !255, size: 64, offset: 34880)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !1316, file: !652, line: 1265, baseType: !1902, size: 64, offset: 34944)
!1902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1903, size: 64)
!1903 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !652, line: 1265, flags: DIFlagFwdDecl)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !1316, file: !652, line: 1266, baseType: !284, size: 16, offset: 35008)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !1316, file: !652, line: 1267, baseType: !284, size: 16, offset: 35024)
!1906 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !1316, file: !652, line: 1270, baseType: !141, size: 32, offset: 35040)
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !1316, file: !652, line: 1271, baseType: !310, size: 128, offset: 35072)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !1316, file: !652, line: 1274, baseType: !1909, size: 128, offset: 35200)
!1909 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !652, line: 650, size: 128, elements: !1910)
!1910 = !{!1911, !1912, !1913, !1914, !1915}
!1911 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1909, file: !652, line: 651, baseType: !408, size: 96)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1909, file: !652, line: 652, baseType: !271, size: 8, offset: 96)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1909, file: !652, line: 652, baseType: !271, size: 8, offset: 104)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1909, file: !652, line: 652, baseType: !271, size: 8, offset: 112)
!1915 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1909, file: !652, line: 652, baseType: !271, size: 8, offset: 120)
!1916 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !1316, file: !652, line: 1275, baseType: !1917, size: 1472, offset: 35328)
!1917 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !652, line: 676, size: 1472, elements: !1918)
!1918 = !{!1919, !1920, !1921, !1922, !1923, !1924, !1925, !1926, !1927, !1928, !1929, !1930, !1940, !1941, !1942, !1943, !1962, !1963, !1964, !1965, !1966, !1967, !1968, !1969, !1970, !1971, !1972, !1973, !1974, !1975, !1976, !1977, !1978, !1979, !1980, !1981}
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !1917, file: !652, line: 679, baseType: !1909, size: 128)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !1917, file: !652, line: 680, baseType: !284, size: 16, offset: 128)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1917, file: !652, line: 680, baseType: !284, size: 16, offset: 144)
!1922 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1917, file: !652, line: 680, baseType: !284, size: 16, offset: 160)
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1917, file: !652, line: 680, baseType: !284, size: 16, offset: 176)
!1924 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1917, file: !652, line: 681, baseType: !284, size: 16, offset: 192)
!1925 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1917, file: !652, line: 681, baseType: !284, size: 16, offset: 208)
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !1917, file: !652, line: 681, baseType: !284, size: 16, offset: 224)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !1917, file: !652, line: 681, baseType: !284, size: 16, offset: 240)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !1917, file: !652, line: 682, baseType: !284, size: 16, offset: 256)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1917, file: !652, line: 682, baseType: !902, size: 48, offset: 272)
!1930 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !1917, file: !652, line: 685, baseType: !1931, size: 192, offset: 320)
!1931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !652, line: 633, size: 192, elements: !1932)
!1932 = !{!1933, !1934, !1935, !1936, !1937, !1938, !1939}
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !1931, file: !652, line: 634, baseType: !284, size: 16)
!1934 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1931, file: !652, line: 634, baseType: !284, size: 16, offset: 16)
!1935 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !1931, file: !652, line: 635, baseType: !284, size: 16, offset: 32)
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !1931, file: !652, line: 635, baseType: !284, size: 16, offset: 48)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !1931, file: !652, line: 636, baseType: !366, size: 32, offset: 64)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1931, file: !652, line: 636, baseType: !366, size: 32, offset: 96)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !1931, file: !652, line: 637, baseType: !1856, size: 64, offset: 128)
!1940 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !1917, file: !652, line: 686, baseType: !284, size: 16, offset: 512)
!1941 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1917, file: !652, line: 686, baseType: !284, size: 16, offset: 528)
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !1917, file: !652, line: 687, baseType: !366, size: 32, offset: 544)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !1917, file: !652, line: 688, baseType: !1944, size: 448, offset: 576)
!1944 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !652, line: 674, baseType: !1945)
!1945 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !652, line: 659, size: 448, elements: !1946)
!1946 = !{!1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955, !1956, !1957, !1958, !1959, !1960, !1961}
!1947 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !1945, file: !652, line: 660, baseType: !366, size: 32)
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !1945, file: !652, line: 661, baseType: !366, size: 32, offset: 32)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !1945, file: !652, line: 662, baseType: !366, size: 32, offset: 64)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !1945, file: !652, line: 663, baseType: !366, size: 32, offset: 96)
!1951 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !1945, file: !652, line: 664, baseType: !366, size: 32, offset: 128)
!1952 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !1945, file: !652, line: 665, baseType: !366, size: 32, offset: 160)
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !1945, file: !652, line: 666, baseType: !366, size: 32, offset: 192)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !1945, file: !652, line: 667, baseType: !366, size: 32, offset: 224)
!1955 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !1945, file: !652, line: 668, baseType: !366, size: 32, offset: 256)
!1956 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !1945, file: !652, line: 669, baseType: !366, size: 32, offset: 288)
!1957 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !1945, file: !652, line: 670, baseType: !141, size: 32, offset: 320)
!1958 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !1945, file: !652, line: 671, baseType: !366, size: 32, offset: 352)
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !1945, file: !652, line: 672, baseType: !366, size: 32, offset: 384)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1945, file: !652, line: 673, baseType: !284, size: 16, offset: 416)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1945, file: !652, line: 673, baseType: !284, size: 16, offset: 432)
!1962 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1917, file: !652, line: 692, baseType: !366, size: 32, offset: 1024)
!1963 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !1917, file: !652, line: 697, baseType: !366, size: 32, offset: 1056)
!1964 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1917, file: !652, line: 703, baseType: !141, size: 32, offset: 1088)
!1965 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1917, file: !652, line: 704, baseType: !284, size: 16, offset: 1120)
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !1917, file: !652, line: 704, baseType: !284, size: 16, offset: 1136)
!1967 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !1917, file: !652, line: 705, baseType: !284, size: 16, offset: 1152)
!1968 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !1917, file: !652, line: 706, baseType: !284, size: 16, offset: 1168)
!1969 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !1917, file: !652, line: 707, baseType: !284, size: 16, offset: 1184)
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !1917, file: !652, line: 708, baseType: !284, size: 16, offset: 1200)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !1917, file: !652, line: 709, baseType: !284, size: 16, offset: 1216)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !1917, file: !652, line: 709, baseType: !284, size: 16, offset: 1232)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !1917, file: !652, line: 709, baseType: !284, size: 16, offset: 1248)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !1917, file: !652, line: 709, baseType: !284, size: 16, offset: 1264)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !1917, file: !652, line: 710, baseType: !284, size: 16, offset: 1280)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !1917, file: !652, line: 711, baseType: !284, size: 16, offset: 1296)
!1977 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !1917, file: !652, line: 712, baseType: !366, size: 32, offset: 1312)
!1978 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !1917, file: !652, line: 713, baseType: !366, size: 32, offset: 1344)
!1979 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !1917, file: !652, line: 713, baseType: !366, size: 32, offset: 1376)
!1980 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !1917, file: !652, line: 713, baseType: !366, size: 32, offset: 1408)
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1917, file: !652, line: 713, baseType: !366, size: 32, offset: 1440)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !1316, file: !652, line: 1278, baseType: !1983, size: 64, offset: 36800)
!1983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !652, line: 1197, size: 64, elements: !1984)
!1984 = !{!1985, !1986, !1987, !1988}
!1985 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !1983, file: !652, line: 1199, baseType: !366, size: 32)
!1986 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !1983, file: !652, line: 1200, baseType: !271, size: 8, offset: 32)
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !1983, file: !652, line: 1201, baseType: !271, size: 8, offset: 40)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1983, file: !652, line: 1202, baseType: !284, size: 16, offset: 48)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !1316, file: !652, line: 1281, baseType: !650, size: 64, offset: 36864)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !1316, file: !652, line: 1284, baseType: !1991, size: 192, offset: 36928)
!1991 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !652, line: 1208, size: 192, elements: !1992)
!1992 = !{!1993, !1994, !1995, !1996}
!1993 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1991, file: !652, line: 1209, baseType: !408, size: 96)
!1994 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1991, file: !652, line: 1210, baseType: !141, size: 32, offset: 96)
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !1991, file: !652, line: 1210, baseType: !141, size: 32, offset: 128)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1991, file: !652, line: 1210, baseType: !141, size: 32, offset: 160)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !1316, file: !652, line: 1287, baseType: !1998, size: 64, offset: 37120)
!1998 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1999, size: 64)
!1999 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !164, line: 431, flags: DIFlagFwdDecl)
!2000 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !1316, file: !652, line: 1289, baseType: !484, size: 64, offset: 37184)
!2001 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !1316, file: !652, line: 1290, baseType: !484, size: 64, offset: 37248)
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1316, file: !652, line: 1293, baseType: !1607, size: 1280, offset: 37312)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1316, file: !652, line: 1294, baseType: !1665, size: 512, offset: 38592)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !1316, file: !652, line: 1295, baseType: !1223, size: 512, offset: 39104)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !1316, file: !652, line: 1298, baseType: !2006, size: 64, offset: 39616)
!2006 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2007, size: 64)
!2007 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !652, line: 1298, flags: DIFlagFwdDecl)
!2008 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !1312, file: !1160, line: 53, baseType: !141, size: 32, offset: 64)
!2009 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !1312, file: !1160, line: 54, baseType: !141, size: 32, offset: 96)
!2010 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1312, file: !1160, line: 55, baseType: !141, size: 32, offset: 128)
!2011 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1312, file: !1160, line: 55, baseType: !141, size: 32, offset: 160)
!2012 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !1312, file: !1160, line: 56, baseType: !271, size: 8, offset: 192)
!2013 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !1312, file: !1160, line: 56, baseType: !271, size: 8, offset: 200)
!2014 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !1312, file: !1160, line: 57, baseType: !271, size: 8, offset: 208)
!2015 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1312, file: !1160, line: 57, baseType: !271, size: 8, offset: 216)
!2016 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !1312, file: !1160, line: 59, baseType: !284, size: 16, offset: 224)
!2017 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !1312, file: !1160, line: 59, baseType: !284, size: 16, offset: 240)
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !1312, file: !1160, line: 59, baseType: !284, size: 16, offset: 256)
!2019 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1312, file: !1160, line: 61, baseType: !284, size: 16, offset: 272)
!2020 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1312, file: !1160, line: 63, baseType: !141, size: 32, offset: 288)
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !571, file: !57, line: 293, baseType: !310, size: 128, offset: 11200)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !571, file: !57, line: 294, baseType: !2023, size: 64, offset: 11328)
!2023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2024, size: 64)
!2024 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !57, line: 113, baseType: !2025)
!2025 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !57, line: 108, size: 256, elements: !2026)
!2026 = !{!2027, !2029, !2030, !2031, !2032}
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2025, file: !57, line: 109, baseType: !2028, size: 64)
!2028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2025, size: 64)
!2029 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2025, file: !57, line: 109, baseType: !2028, size: 64, offset: 64)
!2030 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !2025, file: !57, line: 110, baseType: !585, size: 64, offset: 128)
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2025, file: !57, line: 111, baseType: !141, size: 32, offset: 192)
!2032 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !2025, file: !57, line: 112, baseType: !366, size: 32, offset: 224)
!2033 = !DILocalVariable(name: "ob", arg: 1, scope: !566, file: !1, line: 87, type: !569)
!2034 = !DILocation(line: 87, column: 45, scope: !566)
!2035 = !DILocation(line: 89, column: 6, scope: !2036)
!2036 = distinct !DILexicalBlock(scope: !566, file: !1, line: 89, column: 6)
!2037 = !DILocation(line: 89, column: 10, scope: !2036)
!2038 = !DILocation(line: 89, column: 15, scope: !2036)
!2039 = !DILocation(line: 89, column: 6, scope: !566)
!2040 = !DILocation(line: 90, column: 23, scope: !2036)
!2041 = !DILocation(line: 90, column: 27, scope: !2036)
!2042 = !DILocation(line: 90, column: 10, scope: !2036)
!2043 = !DILocation(line: 90, column: 3, scope: !2036)
!2044 = !DILocation(line: 91, column: 2, scope: !566)
!2045 = !DILocation(line: 92, column: 1, scope: !566)
!2046 = distinct !DISubprogram(name: "BKE_armature_bonelist_free", scope: !1, file: !1, line: 94, type: !2047, scopeLine: 95, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !544)
!2047 = !DISubroutineType(types: !2048)
!2048 = !{null, !393}
!2049 = !DILocalVariable(name: "lb", arg: 1, scope: !2046, file: !1, line: 94, type: !393)
!2050 = !DILocation(line: 94, column: 43, scope: !2046)
!2051 = !DILocalVariable(name: "bone", scope: !2046, file: !1, line: 96, type: !395)
!2052 = !DILocation(line: 96, column: 8, scope: !2046)
!2053 = !DILocation(line: 98, column: 14, scope: !2054)
!2054 = distinct !DILexicalBlock(scope: !2046, file: !1, line: 98, column: 2)
!2055 = !DILocation(line: 98, column: 18, scope: !2054)
!2056 = !DILocation(line: 98, column: 12, scope: !2054)
!2057 = !DILocation(line: 98, column: 7, scope: !2054)
!2058 = !DILocation(line: 98, column: 25, scope: !2059)
!2059 = distinct !DILexicalBlock(scope: !2054, file: !1, line: 98, column: 2)
!2060 = !DILocation(line: 98, column: 2, scope: !2054)
!2061 = !DILocation(line: 99, column: 7, scope: !2062)
!2062 = distinct !DILexicalBlock(scope: !2063, file: !1, line: 99, column: 7)
!2063 = distinct !DILexicalBlock(scope: !2059, file: !1, line: 98, column: 50)
!2064 = !DILocation(line: 99, column: 13, scope: !2062)
!2065 = !DILocation(line: 99, column: 7, scope: !2063)
!2066 = !DILocation(line: 100, column: 21, scope: !2067)
!2067 = distinct !DILexicalBlock(scope: !2062, file: !1, line: 99, column: 19)
!2068 = !DILocation(line: 100, column: 27, scope: !2067)
!2069 = !DILocation(line: 100, column: 4, scope: !2067)
!2070 = !DILocation(line: 101, column: 4, scope: !2067)
!2071 = !DILocation(line: 101, column: 14, scope: !2067)
!2072 = !DILocation(line: 101, column: 20, scope: !2067)
!2073 = !DILocation(line: 102, column: 3, scope: !2067)
!2074 = !DILocation(line: 103, column: 31, scope: !2063)
!2075 = !DILocation(line: 103, column: 37, scope: !2063)
!2076 = !DILocation(line: 103, column: 3, scope: !2063)
!2077 = !DILocation(line: 104, column: 2, scope: !2063)
!2078 = !DILocation(line: 98, column: 38, scope: !2059)
!2079 = !DILocation(line: 98, column: 44, scope: !2059)
!2080 = !DILocation(line: 98, column: 36, scope: !2059)
!2081 = !DILocation(line: 98, column: 2, scope: !2059)
!2082 = distinct !{!2082, !2060, !2083}
!2083 = !DILocation(line: 104, column: 2, scope: !2054)
!2084 = !DILocation(line: 106, column: 16, scope: !2046)
!2085 = !DILocation(line: 106, column: 2, scope: !2046)
!2086 = !DILocation(line: 107, column: 1, scope: !2046)
!2087 = distinct !DISubprogram(name: "BKE_armature_free", scope: !1, file: !1, line: 109, type: !2088, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !544)
!2088 = !DISubroutineType(types: !2089)
!2089 = !{null, !245}
!2090 = !DILocalVariable(name: "arm", arg: 1, scope: !2087, file: !1, line: 109, type: !245)
!2091 = !DILocation(line: 109, column: 35, scope: !2087)
!2092 = !DILocation(line: 111, column: 6, scope: !2093)
!2093 = distinct !DILexicalBlock(scope: !2087, file: !1, line: 111, column: 6)
!2094 = !DILocation(line: 111, column: 6, scope: !2087)
!2095 = !DILocation(line: 112, column: 31, scope: !2096)
!2096 = distinct !DILexicalBlock(scope: !2093, file: !1, line: 111, column: 11)
!2097 = !DILocation(line: 112, column: 36, scope: !2096)
!2098 = !DILocation(line: 112, column: 3, scope: !2096)
!2099 = !DILocation(line: 115, column: 7, scope: !2100)
!2100 = distinct !DILexicalBlock(scope: !2096, file: !1, line: 115, column: 7)
!2101 = !DILocation(line: 115, column: 12, scope: !2100)
!2102 = !DILocation(line: 115, column: 7, scope: !2096)
!2103 = !DILocation(line: 116, column: 18, scope: !2104)
!2104 = distinct !DILexicalBlock(scope: !2100, file: !1, line: 115, column: 18)
!2105 = !DILocation(line: 116, column: 23, scope: !2104)
!2106 = !DILocation(line: 116, column: 4, scope: !2104)
!2107 = !DILocation(line: 118, column: 4, scope: !2104)
!2108 = !DILocation(line: 118, column: 14, scope: !2104)
!2109 = !DILocation(line: 118, column: 19, scope: !2104)
!2110 = !DILocation(line: 119, column: 4, scope: !2104)
!2111 = !DILocation(line: 119, column: 9, scope: !2104)
!2112 = !DILocation(line: 119, column: 14, scope: !2104)
!2113 = !DILocation(line: 120, column: 3, scope: !2104)
!2114 = !DILocation(line: 123, column: 7, scope: !2115)
!2115 = distinct !DILexicalBlock(scope: !2096, file: !1, line: 123, column: 7)
!2116 = !DILocation(line: 123, column: 12, scope: !2115)
!2117 = !DILocation(line: 123, column: 7, scope: !2096)
!2118 = !DILocation(line: 124, column: 15, scope: !2119)
!2119 = distinct !DILexicalBlock(scope: !2115, file: !1, line: 123, column: 20)
!2120 = !DILocation(line: 124, column: 20, scope: !2119)
!2121 = !DILocation(line: 124, column: 4, scope: !2119)
!2122 = !DILocation(line: 125, column: 4, scope: !2119)
!2123 = !DILocation(line: 125, column: 9, scope: !2119)
!2124 = !DILocation(line: 125, column: 16, scope: !2119)
!2125 = !DILocation(line: 126, column: 3, scope: !2119)
!2126 = !DILocation(line: 129, column: 7, scope: !2127)
!2127 = distinct !DILexicalBlock(scope: !2096, file: !1, line: 129, column: 7)
!2128 = !DILocation(line: 129, column: 12, scope: !2127)
!2129 = !DILocation(line: 129, column: 7, scope: !2096)
!2130 = !DILocation(line: 130, column: 23, scope: !2131)
!2131 = distinct !DILexicalBlock(scope: !2127, file: !1, line: 129, column: 17)
!2132 = !DILocation(line: 130, column: 28, scope: !2131)
!2133 = !DILocation(line: 130, column: 4, scope: !2131)
!2134 = !DILocation(line: 131, column: 4, scope: !2131)
!2135 = !DILocation(line: 131, column: 9, scope: !2131)
!2136 = !DILocation(line: 131, column: 13, scope: !2131)
!2137 = !DILocation(line: 132, column: 3, scope: !2131)
!2138 = !DILocation(line: 133, column: 2, scope: !2096)
!2139 = !DILocation(line: 134, column: 1, scope: !2087)
!2140 = distinct !DISubprogram(name: "BKE_armature_make_local", scope: !1, file: !1, line: 136, type: !2088, scopeLine: 137, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !544)
!2141 = !DILocalVariable(name: "arm", arg: 1, scope: !2140, file: !1, line: 136, type: !245)
!2142 = !DILocation(line: 136, column: 41, scope: !2140)
!2143 = !DILocalVariable(name: "bmain", scope: !2140, file: !1, line: 138, type: !470)
!2144 = !DILocation(line: 138, column: 8, scope: !2140)
!2145 = !DILocation(line: 138, column: 18, scope: !2140)
!2146 = !DILocalVariable(name: "is_local", scope: !2140, file: !1, line: 139, type: !1130)
!2147 = !DILocation(line: 139, column: 7, scope: !2140)
!2148 = !DILocalVariable(name: "is_lib", scope: !2140, file: !1, line: 139, type: !1130)
!2149 = !DILocation(line: 139, column: 25, scope: !2140)
!2150 = !DILocalVariable(name: "ob", scope: !2140, file: !1, line: 140, type: !569)
!2151 = !DILocation(line: 140, column: 10, scope: !2140)
!2152 = !DILocation(line: 142, column: 6, scope: !2153)
!2153 = distinct !DILexicalBlock(scope: !2140, file: !1, line: 142, column: 6)
!2154 = !DILocation(line: 142, column: 11, scope: !2153)
!2155 = !DILocation(line: 142, column: 14, scope: !2153)
!2156 = !DILocation(line: 142, column: 18, scope: !2153)
!2157 = !DILocation(line: 142, column: 6, scope: !2140)
!2158 = !DILocation(line: 143, column: 3, scope: !2153)
!2159 = !DILocation(line: 144, column: 6, scope: !2160)
!2160 = distinct !DILexicalBlock(scope: !2140, file: !1, line: 144, column: 6)
!2161 = !DILocation(line: 144, column: 11, scope: !2160)
!2162 = !DILocation(line: 144, column: 14, scope: !2160)
!2163 = !DILocation(line: 144, column: 17, scope: !2160)
!2164 = !DILocation(line: 144, column: 6, scope: !2140)
!2165 = !DILocation(line: 145, column: 21, scope: !2166)
!2166 = distinct !DILexicalBlock(scope: !2160, file: !1, line: 144, column: 23)
!2167 = !DILocation(line: 145, column: 29, scope: !2166)
!2168 = !DILocation(line: 145, column: 34, scope: !2166)
!2169 = !DILocation(line: 145, column: 3, scope: !2166)
!2170 = !DILocation(line: 146, column: 3, scope: !2166)
!2171 = !DILocation(line: 149, column: 12, scope: !2172)
!2172 = distinct !DILexicalBlock(scope: !2140, file: !1, line: 149, column: 2)
!2173 = !DILocation(line: 149, column: 19, scope: !2172)
!2174 = !DILocation(line: 149, column: 26, scope: !2172)
!2175 = !DILocation(line: 149, column: 10, scope: !2172)
!2176 = !DILocation(line: 149, column: 7, scope: !2172)
!2177 = !DILocation(line: 149, column: 33, scope: !2178)
!2178 = distinct !DILexicalBlock(scope: !2172, file: !1, line: 149, column: 2)
!2179 = !DILocation(line: 149, column: 36, scope: !2178)
!2180 = !DILocation(line: 149, column: 39, scope: !2178)
!2181 = !DILocation(line: 0, scope: !2178)
!2182 = !DILocation(line: 149, column: 2, scope: !2172)
!2183 = !DILocation(line: 150, column: 7, scope: !2184)
!2184 = distinct !DILexicalBlock(scope: !2185, file: !1, line: 150, column: 7)
!2185 = distinct !DILexicalBlock(scope: !2178, file: !1, line: 149, column: 84)
!2186 = !DILocation(line: 150, column: 11, scope: !2184)
!2187 = !DILocation(line: 150, column: 19, scope: !2184)
!2188 = !DILocation(line: 150, column: 16, scope: !2184)
!2189 = !DILocation(line: 150, column: 7, scope: !2185)
!2190 = !DILocation(line: 151, column: 8, scope: !2191)
!2191 = distinct !DILexicalBlock(scope: !2192, file: !1, line: 151, column: 8)
!2192 = distinct !DILexicalBlock(scope: !2184, file: !1, line: 150, column: 24)
!2193 = !DILocation(line: 151, column: 12, scope: !2191)
!2194 = !DILocation(line: 151, column: 15, scope: !2191)
!2195 = !DILocation(line: 151, column: 8, scope: !2192)
!2196 = !DILocation(line: 152, column: 12, scope: !2191)
!2197 = !DILocation(line: 152, column: 5, scope: !2191)
!2198 = !DILocation(line: 154, column: 14, scope: !2191)
!2199 = !DILocation(line: 155, column: 3, scope: !2192)
!2200 = !DILocation(line: 156, column: 2, scope: !2185)
!2201 = !DILocation(line: 149, column: 71, scope: !2178)
!2202 = !DILocation(line: 149, column: 75, scope: !2178)
!2203 = !DILocation(line: 149, column: 78, scope: !2178)
!2204 = !DILocation(line: 149, column: 69, scope: !2178)
!2205 = !DILocation(line: 149, column: 2, scope: !2178)
!2206 = distinct !{!2206, !2182, !2207}
!2207 = !DILocation(line: 156, column: 2, scope: !2172)
!2208 = !DILocation(line: 158, column: 6, scope: !2209)
!2209 = distinct !DILexicalBlock(scope: !2140, file: !1, line: 158, column: 6)
!2210 = !DILocation(line: 158, column: 15, scope: !2209)
!2211 = !DILocation(line: 158, column: 18, scope: !2209)
!2212 = !DILocation(line: 158, column: 25, scope: !2209)
!2213 = !DILocation(line: 158, column: 6, scope: !2140)
!2214 = !DILocation(line: 159, column: 21, scope: !2215)
!2215 = distinct !DILexicalBlock(scope: !2209, file: !1, line: 158, column: 35)
!2216 = !DILocation(line: 159, column: 29, scope: !2215)
!2217 = !DILocation(line: 159, column: 34, scope: !2215)
!2218 = !DILocation(line: 159, column: 3, scope: !2215)
!2219 = !DILocation(line: 160, column: 2, scope: !2215)
!2220 = !DILocation(line: 161, column: 11, scope: !2221)
!2221 = distinct !DILexicalBlock(scope: !2209, file: !1, line: 161, column: 11)
!2222 = !DILocation(line: 161, column: 20, scope: !2221)
!2223 = !DILocation(line: 161, column: 23, scope: !2221)
!2224 = !DILocation(line: 161, column: 11, scope: !2209)
!2225 = !DILocalVariable(name: "arm_new", scope: !2226, file: !1, line: 162, type: !245)
!2226 = distinct !DILexicalBlock(scope: !2221, file: !1, line: 161, column: 31)
!2227 = !DILocation(line: 162, column: 14, scope: !2226)
!2228 = !DILocation(line: 162, column: 42, scope: !2226)
!2229 = !DILocation(line: 162, column: 24, scope: !2226)
!2230 = !DILocation(line: 163, column: 3, scope: !2226)
!2231 = !DILocation(line: 163, column: 12, scope: !2226)
!2232 = !DILocation(line: 163, column: 15, scope: !2226)
!2233 = !DILocation(line: 163, column: 18, scope: !2226)
!2234 = !DILocation(line: 166, column: 26, scope: !2226)
!2235 = !DILocation(line: 166, column: 33, scope: !2226)
!2236 = !DILocation(line: 166, column: 38, scope: !2226)
!2237 = !DILocation(line: 166, column: 41, scope: !2226)
!2238 = !DILocation(line: 166, column: 47, scope: !2226)
!2239 = !DILocation(line: 166, column: 56, scope: !2226)
!2240 = !DILocation(line: 166, column: 3, scope: !2226)
!2241 = !DILocation(line: 168, column: 13, scope: !2242)
!2242 = distinct !DILexicalBlock(scope: !2226, file: !1, line: 168, column: 3)
!2243 = !DILocation(line: 168, column: 20, scope: !2242)
!2244 = !DILocation(line: 168, column: 27, scope: !2242)
!2245 = !DILocation(line: 168, column: 11, scope: !2242)
!2246 = !DILocation(line: 168, column: 8, scope: !2242)
!2247 = !DILocation(line: 168, column: 34, scope: !2248)
!2248 = distinct !DILexicalBlock(scope: !2242, file: !1, line: 168, column: 3)
!2249 = !DILocation(line: 168, column: 3, scope: !2242)
!2250 = !DILocation(line: 169, column: 8, scope: !2251)
!2251 = distinct !DILexicalBlock(scope: !2252, file: !1, line: 169, column: 8)
!2252 = distinct !DILexicalBlock(scope: !2248, file: !1, line: 168, column: 56)
!2253 = !DILocation(line: 169, column: 12, scope: !2251)
!2254 = !DILocation(line: 169, column: 20, scope: !2251)
!2255 = !DILocation(line: 169, column: 17, scope: !2251)
!2256 = !DILocation(line: 169, column: 8, scope: !2252)
!2257 = !DILocation(line: 170, column: 9, scope: !2258)
!2258 = distinct !DILexicalBlock(scope: !2259, file: !1, line: 170, column: 9)
!2259 = distinct !DILexicalBlock(scope: !2251, file: !1, line: 169, column: 25)
!2260 = !DILocation(line: 170, column: 13, scope: !2258)
!2261 = !DILocation(line: 170, column: 16, scope: !2258)
!2262 = !DILocation(line: 170, column: 20, scope: !2258)
!2263 = !DILocation(line: 170, column: 9, scope: !2259)
!2264 = !DILocation(line: 171, column: 17, scope: !2265)
!2265 = distinct !DILexicalBlock(scope: !2258, file: !1, line: 170, column: 29)
!2266 = !DILocation(line: 171, column: 6, scope: !2265)
!2267 = !DILocation(line: 171, column: 10, scope: !2265)
!2268 = !DILocation(line: 171, column: 15, scope: !2265)
!2269 = !DILocation(line: 172, column: 6, scope: !2265)
!2270 = !DILocation(line: 172, column: 15, scope: !2265)
!2271 = !DILocation(line: 172, column: 18, scope: !2265)
!2272 = !DILocation(line: 172, column: 20, scope: !2265)
!2273 = !DILocation(line: 173, column: 6, scope: !2265)
!2274 = !DILocation(line: 173, column: 11, scope: !2265)
!2275 = !DILocation(line: 173, column: 14, scope: !2265)
!2276 = !DILocation(line: 173, column: 16, scope: !2265)
!2277 = !DILocation(line: 174, column: 5, scope: !2265)
!2278 = !DILocation(line: 175, column: 4, scope: !2259)
!2279 = !DILocation(line: 176, column: 3, scope: !2252)
!2280 = !DILocation(line: 168, column: 43, scope: !2248)
!2281 = !DILocation(line: 168, column: 47, scope: !2248)
!2282 = !DILocation(line: 168, column: 50, scope: !2248)
!2283 = !DILocation(line: 168, column: 41, scope: !2248)
!2284 = !DILocation(line: 168, column: 3, scope: !2248)
!2285 = distinct !{!2285, !2249, !2286}
!2286 = !DILocation(line: 176, column: 3, scope: !2242)
!2287 = !DILocation(line: 177, column: 2, scope: !2226)
!2288 = !DILocation(line: 178, column: 1, scope: !2140)
!2289 = distinct !DISubprogram(name: "BKE_armature_copy", scope: !1, file: !1, line: 202, type: !2290, scopeLine: 203, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !544)
!2290 = !DISubroutineType(types: !2291)
!2291 = !{!469, !245}
!2292 = !DILocalVariable(name: "arm", arg: 1, scope: !2289, file: !1, line: 202, type: !245)
!2293 = !DILocation(line: 202, column: 41, scope: !2289)
!2294 = !DILocalVariable(name: "newArm", scope: !2289, file: !1, line: 204, type: !245)
!2295 = !DILocation(line: 204, column: 13, scope: !2289)
!2296 = !DILocalVariable(name: "oldBone", scope: !2289, file: !1, line: 205, type: !395)
!2297 = !DILocation(line: 205, column: 8, scope: !2289)
!2298 = !DILocalVariable(name: "newBone", scope: !2289, file: !1, line: 205, type: !395)
!2299 = !DILocation(line: 205, column: 18, scope: !2289)
!2300 = !DILocalVariable(name: "newActBone", scope: !2289, file: !1, line: 206, type: !395)
!2301 = !DILocation(line: 206, column: 8, scope: !2289)
!2302 = !DILocation(line: 208, column: 30, scope: !2289)
!2303 = !DILocation(line: 208, column: 35, scope: !2289)
!2304 = !DILocation(line: 208, column: 11, scope: !2289)
!2305 = !DILocation(line: 208, column: 9, scope: !2289)
!2306 = !DILocation(line: 209, column: 21, scope: !2289)
!2307 = !DILocation(line: 209, column: 29, scope: !2289)
!2308 = !DILocation(line: 209, column: 40, scope: !2289)
!2309 = !DILocation(line: 209, column: 45, scope: !2289)
!2310 = !DILocation(line: 209, column: 2, scope: !2289)
!2311 = !DILocation(line: 212, column: 12, scope: !2289)
!2312 = !DILocation(line: 212, column: 20, scope: !2289)
!2313 = !DILocation(line: 212, column: 29, scope: !2289)
!2314 = !DILocation(line: 212, column: 10, scope: !2289)
!2315 = !DILocation(line: 213, column: 17, scope: !2316)
!2316 = distinct !DILexicalBlock(scope: !2289, file: !1, line: 213, column: 2)
!2317 = !DILocation(line: 213, column: 22, scope: !2316)
!2318 = !DILocation(line: 213, column: 31, scope: !2316)
!2319 = !DILocation(line: 213, column: 15, scope: !2316)
!2320 = !DILocation(line: 213, column: 7, scope: !2316)
!2321 = !DILocation(line: 213, column: 38, scope: !2322)
!2322 = distinct !DILexicalBlock(scope: !2316, file: !1, line: 213, column: 2)
!2323 = !DILocation(line: 213, column: 2, scope: !2316)
!2324 = !DILocation(line: 214, column: 3, scope: !2325)
!2325 = distinct !DILexicalBlock(scope: !2322, file: !1, line: 213, column: 72)
!2326 = !DILocation(line: 214, column: 12, scope: !2325)
!2327 = !DILocation(line: 214, column: 19, scope: !2325)
!2328 = !DILocation(line: 215, column: 21, scope: !2325)
!2329 = !DILocation(line: 215, column: 30, scope: !2325)
!2330 = !DILocation(line: 215, column: 39, scope: !2325)
!2331 = !DILocation(line: 215, column: 44, scope: !2325)
!2332 = !DILocation(line: 215, column: 3, scope: !2325)
!2333 = !DILocation(line: 216, column: 13, scope: !2325)
!2334 = !DILocation(line: 216, column: 22, scope: !2325)
!2335 = !DILocation(line: 216, column: 11, scope: !2325)
!2336 = !DILocation(line: 217, column: 2, scope: !2325)
!2337 = !DILocation(line: 213, column: 57, scope: !2322)
!2338 = !DILocation(line: 213, column: 66, scope: !2322)
!2339 = !DILocation(line: 213, column: 55, scope: !2322)
!2340 = !DILocation(line: 213, column: 2, scope: !2322)
!2341 = distinct !{!2341, !2323, !2342}
!2342 = !DILocation(line: 217, column: 2, scope: !2316)
!2343 = !DILocation(line: 219, column: 21, scope: !2289)
!2344 = !DILocation(line: 219, column: 2, scope: !2289)
!2345 = !DILocation(line: 219, column: 10, scope: !2289)
!2346 = !DILocation(line: 219, column: 19, scope: !2289)
!2347 = !DILocation(line: 221, column: 2, scope: !2289)
!2348 = !DILocation(line: 221, column: 10, scope: !2289)
!2349 = !DILocation(line: 221, column: 15, scope: !2289)
!2350 = !DILocation(line: 222, column: 2, scope: !2289)
!2351 = !DILocation(line: 222, column: 10, scope: !2289)
!2352 = !DILocation(line: 222, column: 21, scope: !2289)
!2353 = !DILocation(line: 223, column: 2, scope: !2289)
!2354 = !DILocation(line: 223, column: 10, scope: !2289)
!2355 = !DILocation(line: 223, column: 17, scope: !2289)
!2356 = !DILocation(line: 225, column: 9, scope: !2289)
!2357 = !DILocation(line: 225, column: 2, scope: !2289)
!2358 = distinct !DISubprogram(name: "copy_bonechildren", scope: !1, file: !1, line: 180, type: !2359, scopeLine: 181, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !544)
!2359 = !DISubroutineType(types: !2360)
!2360 = !{null, !395, !395, !395, !2361}
!2361 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !395, size: 64)
!2362 = !DILocalVariable(name: "newBone", arg: 1, scope: !2358, file: !1, line: 180, type: !395)
!2363 = !DILocation(line: 180, column: 37, scope: !2358)
!2364 = !DILocalVariable(name: "oldBone", arg: 2, scope: !2358, file: !1, line: 180, type: !395)
!2365 = !DILocation(line: 180, column: 52, scope: !2358)
!2366 = !DILocalVariable(name: "actBone", arg: 3, scope: !2358, file: !1, line: 180, type: !395)
!2367 = !DILocation(line: 180, column: 67, scope: !2358)
!2368 = !DILocalVariable(name: "newActBone", arg: 4, scope: !2358, file: !1, line: 180, type: !2361)
!2369 = !DILocation(line: 180, column: 83, scope: !2358)
!2370 = !DILocalVariable(name: "curBone", scope: !2358, file: !1, line: 182, type: !395)
!2371 = !DILocation(line: 182, column: 8, scope: !2358)
!2372 = !DILocalVariable(name: "newChildBone", scope: !2358, file: !1, line: 182, type: !395)
!2373 = !DILocation(line: 182, column: 18, scope: !2358)
!2374 = !DILocation(line: 184, column: 6, scope: !2375)
!2375 = distinct !DILexicalBlock(scope: !2358, file: !1, line: 184, column: 6)
!2376 = !DILocation(line: 184, column: 17, scope: !2375)
!2377 = !DILocation(line: 184, column: 14, scope: !2375)
!2378 = !DILocation(line: 184, column: 6, scope: !2358)
!2379 = !DILocation(line: 185, column: 17, scope: !2375)
!2380 = !DILocation(line: 185, column: 4, scope: !2375)
!2381 = !DILocation(line: 185, column: 15, scope: !2375)
!2382 = !DILocation(line: 185, column: 3, scope: !2375)
!2383 = !DILocation(line: 187, column: 6, scope: !2384)
!2384 = distinct !DILexicalBlock(scope: !2358, file: !1, line: 187, column: 6)
!2385 = !DILocation(line: 187, column: 15, scope: !2384)
!2386 = !DILocation(line: 187, column: 6, scope: !2358)
!2387 = !DILocation(line: 188, column: 36, scope: !2384)
!2388 = !DILocation(line: 188, column: 45, scope: !2384)
!2389 = !DILocation(line: 188, column: 19, scope: !2384)
!2390 = !DILocation(line: 188, column: 3, scope: !2384)
!2391 = !DILocation(line: 188, column: 12, scope: !2384)
!2392 = !DILocation(line: 188, column: 17, scope: !2384)
!2393 = !DILocation(line: 191, column: 21, scope: !2358)
!2394 = !DILocation(line: 191, column: 30, scope: !2358)
!2395 = !DILocation(line: 191, column: 42, scope: !2358)
!2396 = !DILocation(line: 191, column: 51, scope: !2358)
!2397 = !DILocation(line: 191, column: 2, scope: !2358)
!2398 = !DILocation(line: 194, column: 17, scope: !2358)
!2399 = !DILocation(line: 194, column: 26, scope: !2358)
!2400 = !DILocation(line: 194, column: 36, scope: !2358)
!2401 = !DILocation(line: 194, column: 15, scope: !2358)
!2402 = !DILocation(line: 195, column: 17, scope: !2403)
!2403 = distinct !DILexicalBlock(scope: !2358, file: !1, line: 195, column: 2)
!2404 = !DILocation(line: 195, column: 26, scope: !2403)
!2405 = !DILocation(line: 195, column: 36, scope: !2403)
!2406 = !DILocation(line: 195, column: 15, scope: !2403)
!2407 = !DILocation(line: 195, column: 7, scope: !2403)
!2408 = !DILocation(line: 195, column: 43, scope: !2409)
!2409 = distinct !DILexicalBlock(scope: !2403, file: !1, line: 195, column: 2)
!2410 = !DILocation(line: 195, column: 2, scope: !2403)
!2411 = !DILocation(line: 196, column: 26, scope: !2412)
!2412 = distinct !DILexicalBlock(scope: !2409, file: !1, line: 195, column: 77)
!2413 = !DILocation(line: 196, column: 3, scope: !2412)
!2414 = !DILocation(line: 196, column: 17, scope: !2412)
!2415 = !DILocation(line: 196, column: 24, scope: !2412)
!2416 = !DILocation(line: 197, column: 21, scope: !2412)
!2417 = !DILocation(line: 197, column: 35, scope: !2412)
!2418 = !DILocation(line: 197, column: 44, scope: !2412)
!2419 = !DILocation(line: 197, column: 53, scope: !2412)
!2420 = !DILocation(line: 197, column: 3, scope: !2412)
!2421 = !DILocation(line: 198, column: 18, scope: !2412)
!2422 = !DILocation(line: 198, column: 32, scope: !2412)
!2423 = !DILocation(line: 198, column: 16, scope: !2412)
!2424 = !DILocation(line: 199, column: 2, scope: !2412)
!2425 = !DILocation(line: 195, column: 62, scope: !2409)
!2426 = !DILocation(line: 195, column: 71, scope: !2409)
!2427 = !DILocation(line: 195, column: 60, scope: !2409)
!2428 = !DILocation(line: 195, column: 2, scope: !2409)
!2429 = distinct !{!2429, !2410, !2430}
!2430 = !DILocation(line: 199, column: 2, scope: !2403)
!2431 = !DILocation(line: 200, column: 1, scope: !2358)
!2432 = distinct !DISubprogram(name: "BKE_armature_find_bone_name", scope: !1, file: !1, line: 246, type: !2433, scopeLine: 247, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !544)
!2433 = !DISubroutineType(types: !2434)
!2434 = !{!400, !245, !542}
!2435 = !DILocalVariable(name: "arm", arg: 1, scope: !2432, file: !1, line: 246, type: !245)
!2436 = !DILocation(line: 246, column: 46, scope: !2432)
!2437 = !DILocalVariable(name: "name", arg: 2, scope: !2432, file: !1, line: 246, type: !542)
!2438 = !DILocation(line: 246, column: 63, scope: !2432)
!2439 = !DILocalVariable(name: "bone", scope: !2432, file: !1, line: 248, type: !395)
!2440 = !DILocation(line: 248, column: 8, scope: !2432)
!2441 = !DILocalVariable(name: "curBone", scope: !2432, file: !1, line: 248, type: !395)
!2442 = !DILocation(line: 248, column: 22, scope: !2432)
!2443 = !DILocation(line: 250, column: 7, scope: !2444)
!2444 = distinct !DILexicalBlock(scope: !2432, file: !1, line: 250, column: 6)
!2445 = !DILocation(line: 250, column: 6, scope: !2432)
!2446 = !DILocation(line: 251, column: 3, scope: !2444)
!2447 = !DILocation(line: 253, column: 17, scope: !2448)
!2448 = distinct !DILexicalBlock(scope: !2432, file: !1, line: 253, column: 2)
!2449 = !DILocation(line: 253, column: 22, scope: !2448)
!2450 = !DILocation(line: 253, column: 31, scope: !2448)
!2451 = !DILocation(line: 253, column: 15, scope: !2448)
!2452 = !DILocation(line: 253, column: 7, scope: !2448)
!2453 = !DILocation(line: 253, column: 38, scope: !2454)
!2454 = distinct !DILexicalBlock(scope: !2448, file: !1, line: 253, column: 2)
!2455 = !DILocation(line: 253, column: 2, scope: !2448)
!2456 = !DILocation(line: 254, column: 38, scope: !2457)
!2457 = distinct !DILexicalBlock(scope: !2454, file: !1, line: 253, column: 72)
!2458 = !DILocation(line: 254, column: 47, scope: !2457)
!2459 = !DILocation(line: 254, column: 10, scope: !2457)
!2460 = !DILocation(line: 254, column: 8, scope: !2457)
!2461 = !DILocation(line: 255, column: 7, scope: !2462)
!2462 = distinct !DILexicalBlock(scope: !2457, file: !1, line: 255, column: 7)
!2463 = !DILocation(line: 255, column: 7, scope: !2457)
!2464 = !DILocation(line: 256, column: 11, scope: !2462)
!2465 = !DILocation(line: 256, column: 4, scope: !2462)
!2466 = !DILocation(line: 257, column: 2, scope: !2457)
!2467 = !DILocation(line: 253, column: 57, scope: !2454)
!2468 = !DILocation(line: 253, column: 66, scope: !2454)
!2469 = !DILocation(line: 253, column: 55, scope: !2454)
!2470 = !DILocation(line: 253, column: 2, scope: !2454)
!2471 = distinct !{!2471, !2455, !2472}
!2472 = !DILocation(line: 257, column: 2, scope: !2448)
!2473 = !DILocation(line: 259, column: 9, scope: !2432)
!2474 = !DILocation(line: 259, column: 2, scope: !2432)
!2475 = !DILocation(line: 260, column: 1, scope: !2432)
!2476 = distinct !DISubprogram(name: "get_named_bone_bonechildren", scope: !1, file: !1, line: 228, type: !2477, scopeLine: 229, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !544)
!2477 = !DISubroutineType(types: !2478)
!2478 = !{!395, !395, !542}
!2479 = !DILocalVariable(name: "bone", arg: 1, scope: !2476, file: !1, line: 228, type: !395)
!2480 = !DILocation(line: 228, column: 48, scope: !2476)
!2481 = !DILocalVariable(name: "name", arg: 2, scope: !2476, file: !1, line: 228, type: !542)
!2482 = !DILocation(line: 228, column: 66, scope: !2476)
!2483 = !DILocalVariable(name: "curBone", scope: !2476, file: !1, line: 230, type: !395)
!2484 = !DILocation(line: 230, column: 8, scope: !2476)
!2485 = !DILocalVariable(name: "rbone", scope: !2476, file: !1, line: 230, type: !395)
!2486 = !DILocation(line: 230, column: 18, scope: !2476)
!2487 = !DILocation(line: 232, column: 14, scope: !2488)
!2488 = distinct !DILexicalBlock(scope: !2476, file: !1, line: 232, column: 6)
!2489 = !DILocation(line: 232, column: 20, scope: !2488)
!2490 = !DILocation(line: 232, column: 26, scope: !2488)
!2491 = !DILocation(line: 232, column: 7, scope: !2488)
!2492 = !DILocation(line: 232, column: 6, scope: !2476)
!2493 = !DILocation(line: 233, column: 10, scope: !2488)
!2494 = !DILocation(line: 233, column: 3, scope: !2488)
!2495 = !DILocation(line: 235, column: 17, scope: !2496)
!2496 = distinct !DILexicalBlock(scope: !2476, file: !1, line: 235, column: 2)
!2497 = !DILocation(line: 235, column: 23, scope: !2496)
!2498 = !DILocation(line: 235, column: 33, scope: !2496)
!2499 = !DILocation(line: 235, column: 15, scope: !2496)
!2500 = !DILocation(line: 235, column: 7, scope: !2496)
!2501 = !DILocation(line: 235, column: 40, scope: !2502)
!2502 = distinct !DILexicalBlock(scope: !2496, file: !1, line: 235, column: 2)
!2503 = !DILocation(line: 235, column: 2, scope: !2496)
!2504 = !DILocation(line: 236, column: 39, scope: !2505)
!2505 = distinct !DILexicalBlock(scope: !2502, file: !1, line: 235, column: 74)
!2506 = !DILocation(line: 236, column: 48, scope: !2505)
!2507 = !DILocation(line: 236, column: 11, scope: !2505)
!2508 = !DILocation(line: 236, column: 9, scope: !2505)
!2509 = !DILocation(line: 237, column: 7, scope: !2510)
!2510 = distinct !DILexicalBlock(scope: !2505, file: !1, line: 237, column: 7)
!2511 = !DILocation(line: 237, column: 7, scope: !2505)
!2512 = !DILocation(line: 238, column: 11, scope: !2510)
!2513 = !DILocation(line: 238, column: 4, scope: !2510)
!2514 = !DILocation(line: 239, column: 2, scope: !2505)
!2515 = !DILocation(line: 235, column: 59, scope: !2502)
!2516 = !DILocation(line: 235, column: 68, scope: !2502)
!2517 = !DILocation(line: 235, column: 57, scope: !2502)
!2518 = !DILocation(line: 235, column: 2, scope: !2502)
!2519 = distinct !{!2519, !2503, !2520}
!2520 = !DILocation(line: 239, column: 2, scope: !2496)
!2521 = !DILocation(line: 241, column: 2, scope: !2476)
!2522 = !DILocation(line: 242, column: 1, scope: !2476)
!2523 = distinct !DISubprogram(name: "bone_autoside_name", scope: !1, file: !1, line: 266, type: !2524, scopeLine: 267, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !544)
!2524 = !DISubroutineType(types: !2525)
!2525 = !{!141, !682, !141, !284, !366, !366}
!2526 = !DILocalVariable(name: "name", arg: 1, scope: !2523, file: !1, line: 266, type: !682)
!2527 = !DILocation(line: 266, column: 29, scope: !2523)
!2528 = !DILocalVariable(name: "UNUSED_strip_number", arg: 2, scope: !2523, file: !1, line: 266, type: !141)
!2529 = !DILocation(line: 266, column: 52, scope: !2523)
!2530 = !DILocalVariable(name: "axis", arg: 3, scope: !2523, file: !1, line: 266, type: !284)
!2531 = !DILocation(line: 266, column: 80, scope: !2523)
!2532 = !DILocalVariable(name: "head", arg: 4, scope: !2523, file: !1, line: 266, type: !366)
!2533 = !DILocation(line: 266, column: 92, scope: !2523)
!2534 = !DILocalVariable(name: "tail", arg: 5, scope: !2523, file: !1, line: 266, type: !366)
!2535 = !DILocation(line: 266, column: 104, scope: !2523)
!2536 = !DILocalVariable(name: "len", scope: !2523, file: !1, line: 268, type: !5)
!2537 = !DILocation(line: 268, column: 15, scope: !2523)
!2538 = !DILocalVariable(name: "basename", scope: !2523, file: !1, line: 269, type: !300)
!2539 = !DILocation(line: 269, column: 7, scope: !2523)
!2540 = !DILocalVariable(name: "extension", scope: !2523, file: !1, line: 270, type: !1433)
!2541 = !DILocation(line: 270, column: 7, scope: !2523)
!2542 = !DILocation(line: 272, column: 15, scope: !2523)
!2543 = !DILocation(line: 272, column: 8, scope: !2523)
!2544 = !DILocation(line: 272, column: 6, scope: !2523)
!2545 = !DILocation(line: 273, column: 6, scope: !2546)
!2546 = distinct !DILexicalBlock(scope: !2523, file: !1, line: 273, column: 6)
!2547 = !DILocation(line: 273, column: 10, scope: !2546)
!2548 = !DILocation(line: 273, column: 6, scope: !2523)
!2549 = !DILocation(line: 274, column: 3, scope: !2546)
!2550 = !DILocation(line: 275, column: 14, scope: !2523)
!2551 = !DILocation(line: 275, column: 24, scope: !2523)
!2552 = !DILocation(line: 275, column: 2, scope: !2523)
!2553 = !DILocation(line: 285, column: 6, scope: !2554)
!2554 = distinct !DILexicalBlock(scope: !2523, file: !1, line: 285, column: 6)
!2555 = !DILocation(line: 285, column: 11, scope: !2554)
!2556 = !DILocation(line: 285, column: 6, scope: !2523)
!2557 = !DILocation(line: 287, column: 7, scope: !2558)
!2558 = distinct !DILexicalBlock(scope: !2559, file: !1, line: 287, column: 7)
!2559 = distinct !DILexicalBlock(scope: !2554, file: !1, line: 285, column: 17)
!2560 = !DILocation(line: 287, column: 7, scope: !2559)
!2561 = !DILocation(line: 288, column: 8, scope: !2562)
!2562 = distinct !DILexicalBlock(scope: !2563, file: !1, line: 288, column: 8)
!2563 = distinct !DILexicalBlock(scope: !2558, file: !1, line: 287, column: 27)
!2564 = !DILocation(line: 288, column: 13, scope: !2562)
!2565 = !DILocation(line: 288, column: 8, scope: !2563)
!2566 = !DILocation(line: 289, column: 12, scope: !2562)
!2567 = !DILocation(line: 289, column: 5, scope: !2562)
!2568 = !DILocation(line: 290, column: 13, scope: !2569)
!2569 = distinct !DILexicalBlock(scope: !2562, file: !1, line: 290, column: 13)
!2570 = !DILocation(line: 290, column: 18, scope: !2569)
!2571 = !DILocation(line: 290, column: 13, scope: !2562)
!2572 = !DILocation(line: 291, column: 12, scope: !2569)
!2573 = !DILocation(line: 291, column: 5, scope: !2569)
!2574 = !DILocation(line: 292, column: 3, scope: !2563)
!2575 = !DILocation(line: 294, column: 8, scope: !2576)
!2576 = distinct !DILexicalBlock(scope: !2577, file: !1, line: 294, column: 8)
!2577 = distinct !DILexicalBlock(scope: !2558, file: !1, line: 293, column: 8)
!2578 = !DILocation(line: 294, column: 13, scope: !2576)
!2579 = !DILocation(line: 294, column: 8, scope: !2577)
!2580 = !DILocation(line: 295, column: 12, scope: !2576)
!2581 = !DILocation(line: 295, column: 5, scope: !2576)
!2582 = !DILocation(line: 297, column: 12, scope: !2576)
!2583 = !DILocation(line: 297, column: 5, scope: !2576)
!2584 = !DILocation(line: 299, column: 2, scope: !2559)
!2585 = !DILocation(line: 300, column: 11, scope: !2586)
!2586 = distinct !DILexicalBlock(scope: !2554, file: !1, line: 300, column: 11)
!2587 = !DILocation(line: 300, column: 16, scope: !2586)
!2588 = !DILocation(line: 300, column: 11, scope: !2554)
!2589 = !DILocation(line: 302, column: 7, scope: !2590)
!2590 = distinct !DILexicalBlock(scope: !2591, file: !1, line: 302, column: 7)
!2591 = distinct !DILexicalBlock(scope: !2586, file: !1, line: 300, column: 22)
!2592 = !DILocation(line: 302, column: 7, scope: !2591)
!2593 = !DILocation(line: 303, column: 8, scope: !2594)
!2594 = distinct !DILexicalBlock(scope: !2595, file: !1, line: 303, column: 8)
!2595 = distinct !DILexicalBlock(scope: !2590, file: !1, line: 302, column: 27)
!2596 = !DILocation(line: 303, column: 13, scope: !2594)
!2597 = !DILocation(line: 303, column: 8, scope: !2595)
!2598 = !DILocation(line: 304, column: 12, scope: !2594)
!2599 = !DILocation(line: 304, column: 5, scope: !2594)
!2600 = !DILocation(line: 305, column: 13, scope: !2601)
!2601 = distinct !DILexicalBlock(scope: !2594, file: !1, line: 305, column: 13)
!2602 = !DILocation(line: 305, column: 18, scope: !2601)
!2603 = !DILocation(line: 305, column: 13, scope: !2594)
!2604 = !DILocation(line: 306, column: 12, scope: !2601)
!2605 = !DILocation(line: 306, column: 5, scope: !2601)
!2606 = !DILocation(line: 307, column: 3, scope: !2595)
!2607 = !DILocation(line: 309, column: 8, scope: !2608)
!2608 = distinct !DILexicalBlock(scope: !2609, file: !1, line: 309, column: 8)
!2609 = distinct !DILexicalBlock(scope: !2590, file: !1, line: 308, column: 8)
!2610 = !DILocation(line: 309, column: 13, scope: !2608)
!2611 = !DILocation(line: 309, column: 8, scope: !2609)
!2612 = !DILocation(line: 310, column: 12, scope: !2608)
!2613 = !DILocation(line: 310, column: 5, scope: !2608)
!2614 = !DILocation(line: 312, column: 12, scope: !2608)
!2615 = !DILocation(line: 312, column: 5, scope: !2608)
!2616 = !DILocation(line: 314, column: 2, scope: !2591)
!2617 = !DILocation(line: 317, column: 7, scope: !2618)
!2618 = distinct !DILexicalBlock(scope: !2619, file: !1, line: 317, column: 7)
!2619 = distinct !DILexicalBlock(scope: !2586, file: !1, line: 315, column: 7)
!2620 = !DILocation(line: 317, column: 7, scope: !2619)
!2621 = !DILocation(line: 318, column: 8, scope: !2622)
!2622 = distinct !DILexicalBlock(scope: !2623, file: !1, line: 318, column: 8)
!2623 = distinct !DILexicalBlock(scope: !2618, file: !1, line: 317, column: 27)
!2624 = !DILocation(line: 318, column: 13, scope: !2622)
!2625 = !DILocation(line: 318, column: 8, scope: !2623)
!2626 = !DILocation(line: 319, column: 12, scope: !2622)
!2627 = !DILocation(line: 319, column: 5, scope: !2622)
!2628 = !DILocation(line: 320, column: 13, scope: !2629)
!2629 = distinct !DILexicalBlock(scope: !2622, file: !1, line: 320, column: 13)
!2630 = !DILocation(line: 320, column: 18, scope: !2629)
!2631 = !DILocation(line: 320, column: 13, scope: !2622)
!2632 = !DILocation(line: 321, column: 12, scope: !2629)
!2633 = !DILocation(line: 321, column: 5, scope: !2629)
!2634 = !DILocation(line: 322, column: 3, scope: !2623)
!2635 = !DILocation(line: 324, column: 8, scope: !2636)
!2636 = distinct !DILexicalBlock(scope: !2637, file: !1, line: 324, column: 8)
!2637 = distinct !DILexicalBlock(scope: !2618, file: !1, line: 323, column: 8)
!2638 = !DILocation(line: 324, column: 13, scope: !2636)
!2639 = !DILocation(line: 324, column: 8, scope: !2637)
!2640 = !DILocation(line: 325, column: 12, scope: !2636)
!2641 = !DILocation(line: 325, column: 5, scope: !2636)
!2642 = !DILocation(line: 327, column: 13, scope: !2643)
!2643 = distinct !DILexicalBlock(scope: !2636, file: !1, line: 327, column: 13)
!2644 = !DILocation(line: 327, column: 18, scope: !2643)
!2645 = !DILocation(line: 327, column: 13, scope: !2636)
!2646 = !DILocation(line: 328, column: 12, scope: !2643)
!2647 = !DILocation(line: 328, column: 5, scope: !2643)
!2648 = !DILocation(line: 336, column: 6, scope: !2649)
!2649 = distinct !DILexicalBlock(scope: !2523, file: !1, line: 336, column: 6)
!2650 = !DILocation(line: 336, column: 6, scope: !2523)
!2651 = !DILocalVariable(name: "changed", scope: !2652, file: !1, line: 337, type: !1130)
!2652 = distinct !DILexicalBlock(scope: !2649, file: !1, line: 336, column: 20)
!2653 = !DILocation(line: 337, column: 8, scope: !2652)
!2654 = !DILocation(line: 339, column: 3, scope: !2652)
!2655 = !DILocation(line: 339, column: 10, scope: !2652)
!2656 = !DILocation(line: 340, column: 12, scope: !2657)
!2657 = distinct !DILexicalBlock(scope: !2652, file: !1, line: 339, column: 19)
!2658 = !DILocation(line: 341, column: 8, scope: !2659)
!2659 = distinct !DILexicalBlock(scope: !2657, file: !1, line: 341, column: 8)
!2660 = !DILocation(line: 341, column: 12, scope: !2659)
!2661 = !DILocation(line: 341, column: 16, scope: !2659)
!2662 = !DILocation(line: 341, column: 28, scope: !2659)
!2663 = !DILocation(line: 341, column: 32, scope: !2659)
!2664 = !DILocation(line: 341, column: 19, scope: !2659)
!2665 = !DILocation(line: 341, column: 37, scope: !2659)
!2666 = !DILocation(line: 341, column: 8, scope: !2657)
!2667 = !DILocation(line: 342, column: 18, scope: !2668)
!2668 = distinct !DILexicalBlock(scope: !2669, file: !1, line: 342, column: 9)
!2669 = distinct !DILexicalBlock(scope: !2659, file: !1, line: 341, column: 45)
!2670 = !DILocation(line: 342, column: 22, scope: !2668)
!2671 = !DILocation(line: 342, column: 9, scope: !2668)
!2672 = !DILocation(line: 342, column: 27, scope: !2668)
!2673 = !DILocation(line: 342, column: 34, scope: !2668)
!2674 = !DILocation(line: 342, column: 46, scope: !2668)
!2675 = !DILocation(line: 342, column: 50, scope: !2668)
!2676 = !DILocation(line: 342, column: 37, scope: !2668)
!2677 = !DILocation(line: 342, column: 55, scope: !2668)
!2678 = !DILocation(line: 342, column: 9, scope: !2669)
!2679 = !DILocation(line: 343, column: 15, scope: !2680)
!2680 = distinct !DILexicalBlock(scope: !2668, file: !1, line: 342, column: 63)
!2681 = !DILocation(line: 343, column: 19, scope: !2680)
!2682 = !DILocation(line: 343, column: 6, scope: !2680)
!2683 = !DILocation(line: 343, column: 24, scope: !2680)
!2684 = !DILocation(line: 344, column: 10, scope: !2680)
!2685 = !DILocation(line: 345, column: 14, scope: !2680)
!2686 = !DILocation(line: 346, column: 5, scope: !2680)
!2687 = !DILocation(line: 347, column: 4, scope: !2669)
!2688 = !DILocation(line: 348, column: 13, scope: !2689)
!2689 = distinct !DILexicalBlock(scope: !2659, file: !1, line: 348, column: 13)
!2690 = !DILocation(line: 348, column: 17, scope: !2689)
!2691 = !DILocation(line: 348, column: 21, scope: !2689)
!2692 = !DILocation(line: 348, column: 33, scope: !2689)
!2693 = !DILocation(line: 348, column: 37, scope: !2689)
!2694 = !DILocation(line: 348, column: 24, scope: !2689)
!2695 = !DILocation(line: 348, column: 42, scope: !2689)
!2696 = !DILocation(line: 348, column: 13, scope: !2659)
!2697 = !DILocation(line: 349, column: 19, scope: !2698)
!2698 = distinct !DILexicalBlock(scope: !2699, file: !1, line: 349, column: 9)
!2699 = distinct !DILexicalBlock(scope: !2689, file: !1, line: 348, column: 50)
!2700 = !DILocation(line: 349, column: 23, scope: !2698)
!2701 = !DILocation(line: 349, column: 10, scope: !2698)
!2702 = !DILocation(line: 349, column: 28, scope: !2698)
!2703 = !DILocation(line: 349, column: 35, scope: !2698)
!2704 = !DILocation(line: 349, column: 47, scope: !2698)
!2705 = !DILocation(line: 349, column: 51, scope: !2698)
!2706 = !DILocation(line: 349, column: 38, scope: !2698)
!2707 = !DILocation(line: 349, column: 56, scope: !2698)
!2708 = !DILocation(line: 349, column: 64, scope: !2698)
!2709 = !DILocation(line: 350, column: 19, scope: !2698)
!2710 = !DILocation(line: 350, column: 23, scope: !2698)
!2711 = !DILocation(line: 350, column: 10, scope: !2698)
!2712 = !DILocation(line: 350, column: 28, scope: !2698)
!2713 = !DILocation(line: 350, column: 35, scope: !2698)
!2714 = !DILocation(line: 350, column: 47, scope: !2698)
!2715 = !DILocation(line: 350, column: 51, scope: !2698)
!2716 = !DILocation(line: 350, column: 38, scope: !2698)
!2717 = !DILocation(line: 350, column: 56, scope: !2698)
!2718 = !DILocation(line: 349, column: 9, scope: !2699)
!2719 = !DILocation(line: 352, column: 15, scope: !2720)
!2720 = distinct !DILexicalBlock(scope: !2698, file: !1, line: 351, column: 5)
!2721 = !DILocation(line: 352, column: 19, scope: !2720)
!2722 = !DILocation(line: 352, column: 6, scope: !2720)
!2723 = !DILocation(line: 352, column: 24, scope: !2720)
!2724 = !DILocation(line: 353, column: 10, scope: !2720)
!2725 = !DILocation(line: 354, column: 14, scope: !2720)
!2726 = !DILocation(line: 355, column: 5, scope: !2720)
!2727 = !DILocation(line: 356, column: 4, scope: !2699)
!2728 = !DILocation(line: 357, column: 13, scope: !2729)
!2729 = distinct !DILexicalBlock(scope: !2689, file: !1, line: 357, column: 13)
!2730 = !DILocation(line: 357, column: 17, scope: !2729)
!2731 = !DILocation(line: 357, column: 21, scope: !2729)
!2732 = !DILocation(line: 357, column: 33, scope: !2729)
!2733 = !DILocation(line: 357, column: 37, scope: !2729)
!2734 = !DILocation(line: 357, column: 24, scope: !2729)
!2735 = !DILocation(line: 357, column: 42, scope: !2729)
!2736 = !DILocation(line: 357, column: 13, scope: !2689)
!2737 = !DILocation(line: 358, column: 19, scope: !2738)
!2738 = distinct !DILexicalBlock(scope: !2739, file: !1, line: 358, column: 9)
!2739 = distinct !DILexicalBlock(scope: !2729, file: !1, line: 357, column: 50)
!2740 = !DILocation(line: 358, column: 23, scope: !2738)
!2741 = !DILocation(line: 358, column: 10, scope: !2738)
!2742 = !DILocation(line: 358, column: 28, scope: !2738)
!2743 = !DILocation(line: 358, column: 35, scope: !2738)
!2744 = !DILocation(line: 358, column: 47, scope: !2738)
!2745 = !DILocation(line: 358, column: 51, scope: !2738)
!2746 = !DILocation(line: 358, column: 38, scope: !2738)
!2747 = !DILocation(line: 358, column: 56, scope: !2738)
!2748 = !DILocation(line: 358, column: 63, scope: !2738)
!2749 = !DILocation(line: 358, column: 75, scope: !2738)
!2750 = !DILocation(line: 358, column: 79, scope: !2738)
!2751 = !DILocation(line: 358, column: 66, scope: !2738)
!2752 = !DILocation(line: 358, column: 84, scope: !2738)
!2753 = !DILocation(line: 358, column: 92, scope: !2738)
!2754 = !DILocation(line: 359, column: 19, scope: !2738)
!2755 = !DILocation(line: 359, column: 23, scope: !2738)
!2756 = !DILocation(line: 359, column: 10, scope: !2738)
!2757 = !DILocation(line: 359, column: 28, scope: !2738)
!2758 = !DILocation(line: 359, column: 35, scope: !2738)
!2759 = !DILocation(line: 359, column: 47, scope: !2738)
!2760 = !DILocation(line: 359, column: 51, scope: !2738)
!2761 = !DILocation(line: 359, column: 38, scope: !2738)
!2762 = !DILocation(line: 359, column: 56, scope: !2738)
!2763 = !DILocation(line: 359, column: 63, scope: !2738)
!2764 = !DILocation(line: 359, column: 75, scope: !2738)
!2765 = !DILocation(line: 359, column: 79, scope: !2738)
!2766 = !DILocation(line: 359, column: 66, scope: !2738)
!2767 = !DILocation(line: 359, column: 84, scope: !2738)
!2768 = !DILocation(line: 358, column: 9, scope: !2739)
!2769 = !DILocation(line: 361, column: 15, scope: !2770)
!2770 = distinct !DILexicalBlock(scope: !2738, file: !1, line: 360, column: 5)
!2771 = !DILocation(line: 361, column: 19, scope: !2770)
!2772 = !DILocation(line: 361, column: 6, scope: !2770)
!2773 = !DILocation(line: 361, column: 24, scope: !2770)
!2774 = !DILocation(line: 362, column: 10, scope: !2770)
!2775 = !DILocation(line: 363, column: 14, scope: !2770)
!2776 = !DILocation(line: 364, column: 5, scope: !2770)
!2777 = !DILocation(line: 365, column: 4, scope: !2739)
!2778 = distinct !{!2778, !2654, !2779}
!2779 = !DILocation(line: 366, column: 3, scope: !2652)
!2780 = !DILocation(line: 368, column: 22, scope: !2781)
!2781 = distinct !DILexicalBlock(scope: !2652, file: !1, line: 368, column: 7)
!2782 = !DILocation(line: 368, column: 20, scope: !2781)
!2783 = !DILocation(line: 368, column: 7, scope: !2781)
!2784 = !DILocation(line: 368, column: 36, scope: !2781)
!2785 = !DILocation(line: 368, column: 29, scope: !2781)
!2786 = !DILocation(line: 368, column: 47, scope: !2781)
!2787 = !DILocation(line: 368, column: 27, scope: !2781)
!2788 = !DILocation(line: 368, column: 7, scope: !2652)
!2789 = !DILocation(line: 369, column: 12, scope: !2790)
!2790 = distinct !DILexicalBlock(scope: !2781, file: !1, line: 368, column: 52)
!2791 = !DILocation(line: 369, column: 18, scope: !2790)
!2792 = !DILocation(line: 369, column: 28, scope: !2790)
!2793 = !DILocation(line: 369, column: 41, scope: !2790)
!2794 = !DILocation(line: 369, column: 34, scope: !2790)
!2795 = !DILocation(line: 369, column: 32, scope: !2790)
!2796 = !DILocation(line: 369, column: 4, scope: !2790)
!2797 = !DILocation(line: 370, column: 3, scope: !2790)
!2798 = !DILocation(line: 372, column: 16, scope: !2652)
!2799 = !DILocation(line: 372, column: 44, scope: !2652)
!2800 = !DILocation(line: 372, column: 54, scope: !2652)
!2801 = !DILocation(line: 372, column: 3, scope: !2652)
!2802 = !DILocation(line: 374, column: 3, scope: !2652)
!2803 = !DILocation(line: 378, column: 3, scope: !2649)
!2804 = !DILocation(line: 379, column: 1, scope: !2523)
!2805 = distinct !DISubprogram(name: "b_bone_spline_setup", scope: !1, file: !1, line: 426, type: !2806, scopeLine: 427, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !544)
!2806 = !DISubroutineType(types: !2807)
!2807 = !{null, !2808, !141, !2853}
!2808 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2809, size: 64)
!2809 = !DIDerivedType(tag: DW_TAG_typedef, name: "bPoseChannel", file: !140, line: 243, baseType: !2810)
!2810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPoseChannel", file: !140, line: 187, size: 4352, elements: !2811)
!2811 = !{!2812, !2814, !2815, !2816, !2817, !2818, !2819, !2820, !2821, !2822, !2823, !2824, !2825, !2826, !2827, !2828, !2829, !2830, !2831, !2832, !2833, !2834, !2835, !2836, !2837, !2838, !2839, !2840, !2841, !2842, !2843, !2844, !2845, !2846, !2847, !2848, !2849, !2850, !2851, !2852}
!2812 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2810, file: !140, line: 188, baseType: !2813, size: 64)
!2813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2810, size: 64)
!2814 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2810, file: !140, line: 188, baseType: !2813, size: 64, offset: 64)
!2815 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !2810, file: !140, line: 190, baseType: !289, size: 64, offset: 128)
!2816 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !2810, file: !140, line: 192, baseType: !310, size: 128, offset: 192)
!2817 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2810, file: !140, line: 193, baseType: !300, size: 512, offset: 320)
!2818 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2810, file: !140, line: 195, baseType: !284, size: 16, offset: 832)
!2819 = !DIDerivedType(tag: DW_TAG_member, name: "ikflag", scope: !2810, file: !140, line: 196, baseType: !284, size: 16, offset: 848)
!2820 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !2810, file: !140, line: 197, baseType: !284, size: 16, offset: 864)
!2821 = !DIDerivedType(tag: DW_TAG_member, name: "agrp_index", scope: !2810, file: !140, line: 198, baseType: !284, size: 16, offset: 880)
!2822 = !DIDerivedType(tag: DW_TAG_member, name: "constflag", scope: !2810, file: !140, line: 199, baseType: !271, size: 8, offset: 896)
!2823 = !DIDerivedType(tag: DW_TAG_member, name: "selectflag", scope: !2810, file: !140, line: 200, baseType: !271, size: 8, offset: 904)
!2824 = !DIDerivedType(tag: DW_TAG_member, name: "pad0", scope: !2810, file: !140, line: 201, baseType: !1603, size: 48, offset: 912)
!2825 = !DIDerivedType(tag: DW_TAG_member, name: "bone", scope: !2810, file: !140, line: 203, baseType: !400, size: 64, offset: 960)
!2826 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !2810, file: !140, line: 204, baseType: !2813, size: 64, offset: 1024)
!2827 = !DIDerivedType(tag: DW_TAG_member, name: "child", scope: !2810, file: !140, line: 205, baseType: !2813, size: 64, offset: 1088)
!2828 = !DIDerivedType(tag: DW_TAG_member, name: "iktree", scope: !2810, file: !140, line: 207, baseType: !312, size: 128, offset: 1152)
!2829 = !DIDerivedType(tag: DW_TAG_member, name: "siktree", scope: !2810, file: !140, line: 208, baseType: !312, size: 128, offset: 1280)
!2830 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !2810, file: !140, line: 210, baseType: !655, size: 64, offset: 1408)
!2831 = !DIDerivedType(tag: DW_TAG_member, name: "custom", scope: !2810, file: !140, line: 211, baseType: !585, size: 64, offset: 1472)
!2832 = !DIDerivedType(tag: DW_TAG_member, name: "custom_tx", scope: !2810, file: !140, line: 212, baseType: !2813, size: 64, offset: 1536)
!2833 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !2810, file: !140, line: 217, baseType: !408, size: 96, offset: 1600)
!2834 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2810, file: !140, line: 218, baseType: !408, size: 96, offset: 1696)
!2835 = !DIDerivedType(tag: DW_TAG_member, name: "eul", scope: !2810, file: !140, line: 221, baseType: !408, size: 96, offset: 1792)
!2836 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !2810, file: !140, line: 222, baseType: !694, size: 128, offset: 1888)
!2837 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !2810, file: !140, line: 223, baseType: !408, size: 96, offset: 2016)
!2838 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !2810, file: !140, line: 223, baseType: !366, size: 32, offset: 2112)
!2839 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !2810, file: !140, line: 224, baseType: !284, size: 16, offset: 2144)
!2840 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2810, file: !140, line: 225, baseType: !284, size: 16, offset: 2160)
!2841 = !DIDerivedType(tag: DW_TAG_member, name: "chan_mat", scope: !2810, file: !140, line: 227, baseType: !419, size: 512, offset: 2176)
!2842 = !DIDerivedType(tag: DW_TAG_member, name: "pose_mat", scope: !2810, file: !140, line: 228, baseType: !419, size: 512, offset: 2688)
!2843 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !2810, file: !140, line: 230, baseType: !419, size: 512, offset: 3200)
!2844 = !DIDerivedType(tag: DW_TAG_member, name: "pose_head", scope: !2810, file: !140, line: 233, baseType: !408, size: 96, offset: 3712)
!2845 = !DIDerivedType(tag: DW_TAG_member, name: "pose_tail", scope: !2810, file: !140, line: 234, baseType: !408, size: 96, offset: 3808)
!2846 = !DIDerivedType(tag: DW_TAG_member, name: "limitmin", scope: !2810, file: !140, line: 236, baseType: !408, size: 96, offset: 3904)
!2847 = !DIDerivedType(tag: DW_TAG_member, name: "limitmax", scope: !2810, file: !140, line: 236, baseType: !408, size: 96, offset: 4000)
!2848 = !DIDerivedType(tag: DW_TAG_member, name: "stiffness", scope: !2810, file: !140, line: 237, baseType: !408, size: 96, offset: 4096)
!2849 = !DIDerivedType(tag: DW_TAG_member, name: "ikstretch", scope: !2810, file: !140, line: 238, baseType: !366, size: 32, offset: 4192)
!2850 = !DIDerivedType(tag: DW_TAG_member, name: "ikrotweight", scope: !2810, file: !140, line: 239, baseType: !366, size: 32, offset: 4224)
!2851 = !DIDerivedType(tag: DW_TAG_member, name: "iklinweight", scope: !2810, file: !140, line: 240, baseType: !366, size: 32, offset: 4256)
!2852 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !2810, file: !140, line: 242, baseType: !255, size: 64, offset: 4288)
!2853 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2854, size: 64)
!2854 = !DIDerivedType(tag: DW_TAG_typedef, name: "Mat4", file: !2855, line: 132, baseType: !2856)
!2855 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_armature.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Mat4", file: !2855, line: 130, size: 512, elements: !2857)
!2857 = !{!2858}
!2858 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2856, file: !2855, line: 131, baseType: !419, size: 512)
!2859 = !DILocalVariable(name: "pchan", arg: 1, scope: !2805, file: !1, line: 426, type: !2808)
!2860 = !DILocation(line: 426, column: 40, scope: !2805)
!2861 = !DILocalVariable(name: "rest", arg: 2, scope: !2805, file: !1, line: 426, type: !141)
!2862 = !DILocation(line: 426, column: 51, scope: !2805)
!2863 = !DILocalVariable(name: "result_array", arg: 3, scope: !2805, file: !1, line: 426, type: !2853)
!2864 = !DILocation(line: 426, column: 62, scope: !2805)
!2865 = !DILocalVariable(name: "next", scope: !2805, file: !1, line: 428, type: !2808)
!2866 = !DILocation(line: 428, column: 16, scope: !2805)
!2867 = !DILocalVariable(name: "prev", scope: !2805, file: !1, line: 428, type: !2808)
!2868 = !DILocation(line: 428, column: 23, scope: !2805)
!2869 = !DILocalVariable(name: "bone", scope: !2805, file: !1, line: 429, type: !395)
!2870 = !DILocation(line: 429, column: 8, scope: !2805)
!2871 = !DILocation(line: 429, column: 15, scope: !2805)
!2872 = !DILocation(line: 429, column: 22, scope: !2805)
!2873 = !DILocalVariable(name: "h1", scope: !2805, file: !1, line: 430, type: !408)
!2874 = !DILocation(line: 430, column: 8, scope: !2805)
!2875 = !DILocalVariable(name: "h2", scope: !2805, file: !1, line: 430, type: !408)
!2876 = !DILocation(line: 430, column: 15, scope: !2805)
!2877 = !DILocalVariable(name: "scale", scope: !2805, file: !1, line: 430, type: !408)
!2878 = !DILocation(line: 430, column: 22, scope: !2805)
!2879 = !DILocalVariable(name: "length", scope: !2805, file: !1, line: 430, type: !366)
!2880 = !DILocation(line: 430, column: 32, scope: !2805)
!2881 = !DILocalVariable(name: "hlength1", scope: !2805, file: !1, line: 430, type: !366)
!2882 = !DILocation(line: 430, column: 40, scope: !2805)
!2883 = !DILocalVariable(name: "hlength2", scope: !2805, file: !1, line: 430, type: !366)
!2884 = !DILocation(line: 430, column: 50, scope: !2805)
!2885 = !DILocalVariable(name: "roll1", scope: !2805, file: !1, line: 430, type: !366)
!2886 = !DILocation(line: 430, column: 60, scope: !2805)
!2887 = !DILocalVariable(name: "roll2", scope: !2805, file: !1, line: 430, type: !366)
!2888 = !DILocation(line: 430, column: 74, scope: !2805)
!2889 = !DILocalVariable(name: "mat3", scope: !2805, file: !1, line: 431, type: !413)
!2890 = !DILocation(line: 431, column: 8, scope: !2805)
!2891 = !DILocalVariable(name: "imat", scope: !2805, file: !1, line: 431, type: !419)
!2892 = !DILocation(line: 431, column: 20, scope: !2805)
!2893 = !DILocalVariable(name: "posemat", scope: !2805, file: !1, line: 431, type: !419)
!2894 = !DILocation(line: 431, column: 32, scope: !2805)
!2895 = !DILocalVariable(name: "scalemat", scope: !2805, file: !1, line: 431, type: !419)
!2896 = !DILocation(line: 431, column: 47, scope: !2805)
!2897 = !DILocalVariable(name: "iscalemat", scope: !2805, file: !1, line: 431, type: !419)
!2898 = !DILocation(line: 431, column: 63, scope: !2805)
!2899 = !DILocalVariable(name: "data", scope: !2805, file: !1, line: 432, type: !2900)
!2900 = !DICompositeType(tag: DW_TAG_array_type, baseType: !366, size: 4224, elements: !2901)
!2901 = !{!2902, !421}
!2902 = !DISubrange(count: 33)
!2903 = !DILocation(line: 432, column: 8, scope: !2805)
!2904 = !DILocalVariable(name: "fp", scope: !2805, file: !1, line: 432, type: !1099)
!2905 = !DILocation(line: 432, column: 40, scope: !2805)
!2906 = !DILocalVariable(name: "a", scope: !2805, file: !1, line: 433, type: !141)
!2907 = !DILocation(line: 433, column: 6, scope: !2805)
!2908 = !DILocalVariable(name: "do_scale", scope: !2805, file: !1, line: 434, type: !1130)
!2909 = !DILocation(line: 434, column: 7, scope: !2805)
!2910 = !DILocation(line: 436, column: 11, scope: !2805)
!2911 = !DILocation(line: 436, column: 17, scope: !2805)
!2912 = !DILocation(line: 436, column: 9, scope: !2805)
!2913 = !DILocation(line: 438, column: 7, scope: !2914)
!2914 = distinct !DILexicalBlock(scope: !2805, file: !1, line: 438, column: 6)
!2915 = !DILocation(line: 438, column: 6, scope: !2805)
!2916 = !DILocation(line: 440, column: 16, scope: !2917)
!2917 = distinct !DILexicalBlock(scope: !2914, file: !1, line: 438, column: 13)
!2918 = !DILocation(line: 440, column: 23, scope: !2917)
!2919 = !DILocation(line: 440, column: 30, scope: !2917)
!2920 = !DILocation(line: 440, column: 3, scope: !2917)
!2921 = !DILocation(line: 442, column: 13, scope: !2922)
!2922 = distinct !DILexicalBlock(scope: !2917, file: !1, line: 442, column: 7)
!2923 = !DILocation(line: 442, column: 24, scope: !2922)
!2924 = !DILocation(line: 442, column: 22, scope: !2922)
!2925 = !DILocation(line: 442, column: 7, scope: !2922)
!2926 = !DILocation(line: 442, column: 34, scope: !2922)
!2927 = !DILocation(line: 442, column: 42, scope: !2922)
!2928 = !DILocation(line: 442, column: 51, scope: !2922)
!2929 = !DILocation(line: 442, column: 62, scope: !2922)
!2930 = !DILocation(line: 442, column: 60, scope: !2922)
!2931 = !DILocation(line: 442, column: 45, scope: !2922)
!2932 = !DILocation(line: 442, column: 72, scope: !2922)
!2933 = !DILocation(line: 442, column: 7, scope: !2917)
!2934 = !DILocation(line: 443, column: 17, scope: !2935)
!2935 = distinct !DILexicalBlock(scope: !2922, file: !1, line: 442, column: 81)
!2936 = !DILocation(line: 443, column: 27, scope: !2935)
!2937 = !DILocation(line: 443, column: 4, scope: !2935)
!2938 = !DILocation(line: 444, column: 17, scope: !2935)
!2939 = !DILocation(line: 444, column: 28, scope: !2935)
!2940 = !DILocation(line: 444, column: 4, scope: !2935)
!2941 = !DILocation(line: 446, column: 14, scope: !2935)
!2942 = !DILocation(line: 446, column: 11, scope: !2935)
!2943 = !DILocation(line: 447, column: 13, scope: !2935)
!2944 = !DILocation(line: 448, column: 3, scope: !2935)
!2945 = !DILocation(line: 449, column: 2, scope: !2917)
!2946 = !DILocation(line: 451, column: 13, scope: !2805)
!2947 = !DILocation(line: 451, column: 19, scope: !2805)
!2948 = !DILocation(line: 451, column: 27, scope: !2805)
!2949 = !DILocation(line: 451, column: 25, scope: !2805)
!2950 = !DILocation(line: 451, column: 34, scope: !2805)
!2951 = !DILocation(line: 451, column: 11, scope: !2805)
!2952 = !DILocation(line: 452, column: 13, scope: !2805)
!2953 = !DILocation(line: 452, column: 19, scope: !2805)
!2954 = !DILocation(line: 452, column: 27, scope: !2805)
!2955 = !DILocation(line: 452, column: 25, scope: !2805)
!2956 = !DILocation(line: 452, column: 34, scope: !2805)
!2957 = !DILocation(line: 452, column: 11, scope: !2805)
!2958 = !DILocation(line: 455, column: 6, scope: !2959)
!2959 = distinct !DILexicalBlock(scope: !2805, file: !1, line: 455, column: 6)
!2960 = !DILocation(line: 455, column: 12, scope: !2959)
!2961 = !DILocation(line: 455, column: 17, scope: !2959)
!2962 = !DILocation(line: 455, column: 6, scope: !2805)
!2963 = !DILocation(line: 456, column: 10, scope: !2959)
!2964 = !DILocation(line: 456, column: 17, scope: !2959)
!2965 = !DILocation(line: 456, column: 8, scope: !2959)
!2966 = !DILocation(line: 456, column: 3, scope: !2959)
!2967 = !DILocation(line: 458, column: 8, scope: !2959)
!2968 = !DILocation(line: 460, column: 9, scope: !2805)
!2969 = !DILocation(line: 460, column: 16, scope: !2805)
!2970 = !DILocation(line: 460, column: 7, scope: !2805)
!2971 = !DILocation(line: 465, column: 6, scope: !2972)
!2972 = distinct !DILexicalBlock(scope: !2805, file: !1, line: 465, column: 6)
!2973 = !DILocation(line: 465, column: 6, scope: !2805)
!2974 = !DILocation(line: 466, column: 16, scope: !2975)
!2975 = distinct !DILexicalBlock(scope: !2972, file: !1, line: 465, column: 12)
!2976 = !DILocation(line: 466, column: 22, scope: !2975)
!2977 = !DILocation(line: 466, column: 29, scope: !2975)
!2978 = !DILocation(line: 466, column: 35, scope: !2975)
!2979 = !DILocation(line: 466, column: 3, scope: !2975)
!2980 = !DILocation(line: 467, column: 2, scope: !2975)
!2981 = !DILocation(line: 468, column: 11, scope: !2982)
!2982 = distinct !DILexicalBlock(scope: !2972, file: !1, line: 468, column: 11)
!2983 = !DILocation(line: 468, column: 11, scope: !2972)
!2984 = !DILocation(line: 469, column: 14, scope: !2985)
!2985 = distinct !DILexicalBlock(scope: !2982, file: !1, line: 468, column: 21)
!2986 = !DILocation(line: 469, column: 23, scope: !2985)
!2987 = !DILocation(line: 469, column: 30, scope: !2985)
!2988 = !DILocation(line: 469, column: 3, scope: !2985)
!2989 = !DILocation(line: 470, column: 16, scope: !2985)
!2990 = !DILocation(line: 470, column: 3, scope: !2985)
!2991 = !DILocation(line: 471, column: 16, scope: !2985)
!2992 = !DILocation(line: 471, column: 22, scope: !2985)
!2993 = !DILocation(line: 471, column: 3, scope: !2985)
!2994 = !DILocation(line: 472, column: 2, scope: !2985)
!2995 = !DILocation(line: 474, column: 16, scope: !2982)
!2996 = !DILocation(line: 474, column: 22, scope: !2982)
!2997 = !DILocation(line: 474, column: 29, scope: !2982)
!2998 = !DILocation(line: 474, column: 3, scope: !2982)
!2999 = !DILocation(line: 476, column: 6, scope: !3000)
!3000 = distinct !DILexicalBlock(scope: !2805, file: !1, line: 476, column: 6)
!3001 = !DILocation(line: 476, column: 6, scope: !2805)
!3002 = !DILocalVariable(name: "difmat", scope: !3003, file: !1, line: 477, type: !419)
!3003 = distinct !DILexicalBlock(scope: !3000, file: !1, line: 476, column: 12)
!3004 = !DILocation(line: 477, column: 9, scope: !3003)
!3005 = !DILocalVariable(name: "result", scope: !3003, file: !1, line: 477, type: !413)
!3006 = !DILocation(line: 477, column: 23, scope: !3003)
!3007 = !DILocalVariable(name: "imat3", scope: !3003, file: !1, line: 477, type: !413)
!3008 = !DILocation(line: 477, column: 37, scope: !3003)
!3009 = !DILocation(line: 480, column: 7, scope: !3010)
!3010 = distinct !DILexicalBlock(scope: !3003, file: !1, line: 480, column: 7)
!3011 = !DILocation(line: 480, column: 7, scope: !3003)
!3012 = !DILocation(line: 481, column: 15, scope: !3010)
!3013 = !DILocation(line: 481, column: 19, scope: !3010)
!3014 = !DILocation(line: 481, column: 25, scope: !3010)
!3015 = !DILocation(line: 481, column: 31, scope: !3010)
!3016 = !DILocation(line: 481, column: 4, scope: !3010)
!3017 = !DILocation(line: 483, column: 15, scope: !3010)
!3018 = !DILocation(line: 483, column: 19, scope: !3010)
!3019 = !DILocation(line: 483, column: 25, scope: !3010)
!3020 = !DILocation(line: 483, column: 4, scope: !3010)
!3021 = !DILocation(line: 484, column: 13, scope: !3003)
!3022 = !DILocation(line: 484, column: 19, scope: !3003)
!3023 = !DILocation(line: 484, column: 3, scope: !3003)
!3024 = !DILocation(line: 486, column: 7, scope: !3025)
!3025 = distinct !DILexicalBlock(scope: !3003, file: !1, line: 486, column: 7)
!3026 = !DILocation(line: 486, column: 13, scope: !3025)
!3027 = !DILocation(line: 486, column: 19, scope: !3025)
!3028 = !DILocation(line: 486, column: 28, scope: !3025)
!3029 = !DILocation(line: 486, column: 7, scope: !3003)
!3030 = !DILocation(line: 488, column: 13, scope: !3031)
!3031 = distinct !DILexicalBlock(scope: !3025, file: !1, line: 486, column: 33)
!3032 = !DILocation(line: 488, column: 4, scope: !3031)
!3033 = !DILocation(line: 488, column: 10, scope: !3031)
!3034 = !DILocation(line: 489, column: 10, scope: !3031)
!3035 = !DILocation(line: 490, column: 3, scope: !3031)
!3036 = !DILocation(line: 492, column: 16, scope: !3003)
!3037 = !DILocation(line: 492, column: 3, scope: !3003)
!3038 = !DILocation(line: 493, column: 13, scope: !3003)
!3039 = !DILocation(line: 493, column: 18, scope: !3003)
!3040 = !DILocation(line: 493, column: 17, scope: !3003)
!3041 = !DILocation(line: 493, column: 3, scope: !3003)
!3042 = !DILocation(line: 495, column: 7, scope: !3043)
!3043 = distinct !DILexicalBlock(scope: !3003, file: !1, line: 495, column: 7)
!3044 = !DILocation(line: 495, column: 13, scope: !3043)
!3045 = !DILocation(line: 495, column: 19, scope: !3043)
!3046 = !DILocation(line: 495, column: 28, scope: !3043)
!3047 = !DILocation(line: 495, column: 7, scope: !3003)
!3048 = !DILocation(line: 497, column: 8, scope: !3049)
!3049 = distinct !DILexicalBlock(scope: !3050, file: !1, line: 497, column: 8)
!3050 = distinct !DILexicalBlock(scope: !3043, file: !1, line: 495, column: 34)
!3051 = !DILocation(line: 497, column: 8, scope: !3050)
!3052 = !DILocation(line: 498, column: 17, scope: !3049)
!3053 = !DILocation(line: 498, column: 25, scope: !3049)
!3054 = !DILocation(line: 498, column: 31, scope: !3049)
!3055 = !DILocation(line: 498, column: 37, scope: !3049)
!3056 = !DILocation(line: 498, column: 43, scope: !3049)
!3057 = !DILocation(line: 498, column: 5, scope: !3049)
!3058 = !DILocation(line: 500, column: 17, scope: !3049)
!3059 = !DILocation(line: 500, column: 25, scope: !3049)
!3060 = !DILocation(line: 500, column: 31, scope: !3049)
!3061 = !DILocation(line: 500, column: 37, scope: !3049)
!3062 = !DILocation(line: 500, column: 5, scope: !3049)
!3063 = !DILocation(line: 501, column: 15, scope: !3050)
!3064 = !DILocation(line: 501, column: 23, scope: !3050)
!3065 = !DILocation(line: 501, column: 4, scope: !3050)
!3066 = !DILocation(line: 503, column: 21, scope: !3050)
!3067 = !DILocation(line: 503, column: 31, scope: !3050)
!3068 = !DILocation(line: 503, column: 4, scope: !3050)
!3069 = !DILocation(line: 505, column: 17, scope: !3050)
!3070 = !DILocation(line: 505, column: 24, scope: !3050)
!3071 = !DILocation(line: 505, column: 4, scope: !3050)
!3072 = !DILocation(line: 506, column: 16, scope: !3050)
!3073 = !DILocation(line: 506, column: 22, scope: !3050)
!3074 = !DILocation(line: 506, column: 30, scope: !3050)
!3075 = !DILocation(line: 506, column: 4, scope: !3050)
!3076 = !DILocation(line: 508, column: 19, scope: !3050)
!3077 = !DILocation(line: 508, column: 31, scope: !3050)
!3078 = !DILocation(line: 508, column: 12, scope: !3050)
!3079 = !DILocation(line: 508, column: 10, scope: !3050)
!3080 = !DILocation(line: 509, column: 3, scope: !3050)
!3081 = !DILocation(line: 510, column: 2, scope: !3003)
!3082 = !DILocation(line: 512, column: 3, scope: !3083)
!3083 = distinct !DILexicalBlock(scope: !3000, file: !1, line: 511, column: 7)
!3084 = !DILocation(line: 512, column: 9, scope: !3083)
!3085 = !DILocation(line: 512, column: 25, scope: !3083)
!3086 = !DILocation(line: 512, column: 17, scope: !3083)
!3087 = !DILocation(line: 512, column: 23, scope: !3083)
!3088 = !DILocation(line: 512, column: 35, scope: !3083)
!3089 = !DILocation(line: 512, column: 41, scope: !3083)
!3090 = !DILocation(line: 513, column: 9, scope: !3083)
!3091 = !DILocation(line: 515, column: 6, scope: !3092)
!3092 = distinct !DILexicalBlock(scope: !2805, file: !1, line: 515, column: 6)
!3093 = !DILocation(line: 515, column: 6, scope: !2805)
!3094 = !DILocalVariable(name: "difmat", scope: !3095, file: !1, line: 516, type: !419)
!3095 = distinct !DILexicalBlock(scope: !3092, file: !1, line: 515, column: 12)
!3096 = !DILocation(line: 516, column: 9, scope: !3095)
!3097 = !DILocalVariable(name: "result", scope: !3095, file: !1, line: 516, type: !413)
!3098 = !DILocation(line: 516, column: 23, scope: !3095)
!3099 = !DILocalVariable(name: "imat3", scope: !3095, file: !1, line: 516, type: !413)
!3100 = !DILocation(line: 516, column: 37, scope: !3095)
!3101 = !DILocation(line: 519, column: 7, scope: !3102)
!3102 = distinct !DILexicalBlock(scope: !3095, file: !1, line: 519, column: 7)
!3103 = !DILocation(line: 519, column: 7, scope: !3095)
!3104 = !DILocation(line: 520, column: 15, scope: !3102)
!3105 = !DILocation(line: 520, column: 19, scope: !3102)
!3106 = !DILocation(line: 520, column: 25, scope: !3102)
!3107 = !DILocation(line: 520, column: 31, scope: !3102)
!3108 = !DILocation(line: 520, column: 4, scope: !3102)
!3109 = !DILocation(line: 522, column: 15, scope: !3102)
!3110 = !DILocation(line: 522, column: 19, scope: !3102)
!3111 = !DILocation(line: 522, column: 25, scope: !3102)
!3112 = !DILocation(line: 522, column: 4, scope: !3102)
!3113 = !DILocation(line: 523, column: 13, scope: !3095)
!3114 = !DILocation(line: 523, column: 19, scope: !3095)
!3115 = !DILocation(line: 523, column: 3, scope: !3095)
!3116 = !DILocation(line: 526, column: 7, scope: !3117)
!3117 = distinct !DILexicalBlock(scope: !3095, file: !1, line: 526, column: 7)
!3118 = !DILocation(line: 526, column: 13, scope: !3117)
!3119 = !DILocation(line: 526, column: 19, scope: !3117)
!3120 = !DILocation(line: 526, column: 28, scope: !3117)
!3121 = !DILocation(line: 526, column: 7, scope: !3095)
!3122 = !DILocation(line: 528, column: 3, scope: !3123)
!3123 = distinct !DILexicalBlock(scope: !3117, file: !1, line: 526, column: 33)
!3124 = !DILocation(line: 530, column: 13, scope: !3125)
!3125 = distinct !DILexicalBlock(scope: !3117, file: !1, line: 529, column: 8)
!3126 = !DILocation(line: 530, column: 4, scope: !3125)
!3127 = !DILocation(line: 530, column: 10, scope: !3125)
!3128 = !DILocation(line: 532, column: 16, scope: !3095)
!3129 = !DILocation(line: 532, column: 3, scope: !3095)
!3130 = !DILocation(line: 535, column: 7, scope: !3131)
!3131 = distinct !DILexicalBlock(scope: !3095, file: !1, line: 535, column: 7)
!3132 = !DILocation(line: 535, column: 7, scope: !3095)
!3133 = !DILocation(line: 536, column: 16, scope: !3131)
!3134 = !DILocation(line: 536, column: 24, scope: !3131)
!3135 = !DILocation(line: 536, column: 30, scope: !3131)
!3136 = !DILocation(line: 536, column: 36, scope: !3131)
!3137 = !DILocation(line: 536, column: 42, scope: !3131)
!3138 = !DILocation(line: 536, column: 4, scope: !3131)
!3139 = !DILocation(line: 538, column: 16, scope: !3131)
!3140 = !DILocation(line: 538, column: 24, scope: !3131)
!3141 = !DILocation(line: 538, column: 30, scope: !3131)
!3142 = !DILocation(line: 538, column: 36, scope: !3131)
!3143 = !DILocation(line: 538, column: 4, scope: !3131)
!3144 = !DILocation(line: 539, column: 14, scope: !3095)
!3145 = !DILocation(line: 539, column: 22, scope: !3095)
!3146 = !DILocation(line: 539, column: 3, scope: !3095)
!3147 = !DILocation(line: 541, column: 20, scope: !3095)
!3148 = !DILocation(line: 541, column: 30, scope: !3095)
!3149 = !DILocation(line: 541, column: 3, scope: !3095)
!3150 = !DILocation(line: 543, column: 16, scope: !3095)
!3151 = !DILocation(line: 543, column: 23, scope: !3095)
!3152 = !DILocation(line: 543, column: 3, scope: !3095)
!3153 = !DILocation(line: 544, column: 15, scope: !3095)
!3154 = !DILocation(line: 544, column: 21, scope: !3095)
!3155 = !DILocation(line: 544, column: 28, scope: !3095)
!3156 = !DILocation(line: 544, column: 3, scope: !3095)
!3157 = !DILocation(line: 546, column: 18, scope: !3095)
!3158 = !DILocation(line: 546, column: 30, scope: !3095)
!3159 = !DILocation(line: 546, column: 11, scope: !3095)
!3160 = !DILocation(line: 546, column: 9, scope: !3095)
!3161 = !DILocation(line: 549, column: 13, scope: !3095)
!3162 = !DILocation(line: 549, column: 18, scope: !3095)
!3163 = !DILocation(line: 549, column: 17, scope: !3095)
!3164 = !DILocation(line: 549, column: 3, scope: !3095)
!3165 = !DILocation(line: 550, column: 2, scope: !3095)
!3166 = !DILocation(line: 552, column: 3, scope: !3167)
!3167 = distinct !DILexicalBlock(scope: !3092, file: !1, line: 551, column: 7)
!3168 = !DILocation(line: 552, column: 9, scope: !3167)
!3169 = !DILocation(line: 552, column: 26, scope: !3167)
!3170 = !DILocation(line: 552, column: 25, scope: !3167)
!3171 = !DILocation(line: 552, column: 17, scope: !3167)
!3172 = !DILocation(line: 552, column: 23, scope: !3167)
!3173 = !DILocation(line: 552, column: 36, scope: !3167)
!3174 = !DILocation(line: 552, column: 42, scope: !3167)
!3175 = !DILocation(line: 553, column: 9, scope: !3167)
!3176 = !DILocation(line: 557, column: 6, scope: !3177)
!3177 = distinct !DILexicalBlock(scope: !2805, file: !1, line: 557, column: 6)
!3178 = !DILocation(line: 557, column: 12, scope: !3177)
!3179 = !DILocation(line: 557, column: 21, scope: !3177)
!3180 = !DILocation(line: 557, column: 6, scope: !2805)
!3181 = !DILocation(line: 558, column: 3, scope: !3177)
!3182 = !DILocation(line: 558, column: 9, scope: !3177)
!3183 = !DILocation(line: 558, column: 18, scope: !3177)
!3184 = !DILocation(line: 560, column: 39, scope: !2805)
!3185 = !DILocation(line: 560, column: 76, scope: !2805)
!3186 = !DILocation(line: 560, column: 121, scope: !2805)
!3187 = !DILocation(line: 560, column: 2, scope: !2805)
!3188 = !DILocation(line: 561, column: 39, scope: !2805)
!3189 = !DILocation(line: 561, column: 76, scope: !2805)
!3190 = !DILocation(line: 561, column: 85, scope: !2805)
!3191 = !DILocation(line: 561, column: 83, scope: !2805)
!3192 = !DILocation(line: 561, column: 113, scope: !2805)
!3193 = !DILocation(line: 561, column: 121, scope: !2805)
!3194 = !DILocation(line: 561, column: 129, scope: !2805)
!3195 = !DILocation(line: 561, column: 2, scope: !2805)
!3196 = !DILocation(line: 562, column: 39, scope: !2805)
!3197 = !DILocation(line: 562, column: 76, scope: !2805)
!3198 = !DILocation(line: 562, column: 121, scope: !2805)
!3199 = !DILocation(line: 562, column: 129, scope: !2805)
!3200 = !DILocation(line: 562, column: 2, scope: !2805)
!3201 = !DILocation(line: 563, column: 32, scope: !2805)
!3202 = !DILocation(line: 563, column: 39, scope: !2805)
!3203 = !DILocation(line: 563, column: 60, scope: !2805)
!3204 = !DILocation(line: 563, column: 68, scope: !2805)
!3205 = !DILocation(line: 563, column: 66, scope: !2805)
!3206 = !DILocation(line: 563, column: 57, scope: !2805)
!3207 = !DILocation(line: 563, column: 45, scope: !2805)
!3208 = !DILocation(line: 563, column: 76, scope: !2805)
!3209 = !DILocation(line: 563, column: 97, scope: !2805)
!3210 = !DILocation(line: 563, column: 105, scope: !2805)
!3211 = !DILocation(line: 563, column: 103, scope: !2805)
!3212 = !DILocation(line: 563, column: 94, scope: !2805)
!3213 = !DILocation(line: 563, column: 82, scope: !2805)
!3214 = !DILocation(line: 563, column: 113, scope: !2805)
!3215 = !DILocation(line: 563, column: 121, scope: !2805)
!3216 = !DILocation(line: 563, column: 129, scope: !2805)
!3217 = !DILocation(line: 563, column: 2, scope: !2805)
!3218 = !DILocation(line: 565, column: 18, scope: !2805)
!3219 = !DILocation(line: 565, column: 27, scope: !2805)
!3220 = !DILocation(line: 565, column: 33, scope: !2805)
!3221 = !DILocation(line: 565, column: 2, scope: !2805)
!3222 = !DILocation(line: 568, column: 9, scope: !3223)
!3223 = distinct !DILexicalBlock(scope: !2805, file: !1, line: 568, column: 2)
!3224 = !DILocation(line: 568, column: 19, scope: !3223)
!3225 = !DILocation(line: 568, column: 17, scope: !3223)
!3226 = !DILocation(line: 568, column: 7, scope: !3223)
!3227 = !DILocation(line: 568, column: 28, scope: !3228)
!3228 = distinct !DILexicalBlock(scope: !3223, file: !1, line: 568, column: 2)
!3229 = !DILocation(line: 568, column: 32, scope: !3228)
!3230 = !DILocation(line: 568, column: 38, scope: !3228)
!3231 = !DILocation(line: 568, column: 30, scope: !3228)
!3232 = !DILocation(line: 568, column: 2, scope: !3223)
!3233 = !DILocation(line: 569, column: 15, scope: !3234)
!3234 = distinct !DILexicalBlock(scope: !3228, file: !1, line: 568, column: 62)
!3235 = !DILocation(line: 569, column: 19, scope: !3234)
!3236 = !DILocation(line: 569, column: 22, scope: !3234)
!3237 = !DILocation(line: 569, column: 27, scope: !3234)
!3238 = !DILocation(line: 569, column: 3, scope: !3234)
!3239 = !DILocation(line: 570, column: 20, scope: !3234)
!3240 = !DILocation(line: 570, column: 24, scope: !3234)
!3241 = !DILocation(line: 570, column: 31, scope: !3234)
!3242 = !DILocation(line: 570, column: 3, scope: !3234)
!3243 = !DILocation(line: 572, column: 14, scope: !3234)
!3244 = !DILocation(line: 572, column: 27, scope: !3234)
!3245 = !DILocation(line: 572, column: 30, scope: !3234)
!3246 = !DILocation(line: 572, column: 35, scope: !3234)
!3247 = !DILocation(line: 572, column: 3, scope: !3234)
!3248 = !DILocation(line: 573, column: 14, scope: !3234)
!3249 = !DILocation(line: 573, column: 27, scope: !3234)
!3250 = !DILocation(line: 573, column: 30, scope: !3234)
!3251 = !DILocation(line: 573, column: 38, scope: !3234)
!3252 = !DILocation(line: 573, column: 3, scope: !3234)
!3253 = !DILocation(line: 575, column: 7, scope: !3254)
!3254 = distinct !DILexicalBlock(scope: !3234, file: !1, line: 575, column: 7)
!3255 = !DILocation(line: 575, column: 7, scope: !3234)
!3256 = !DILocation(line: 577, column: 4, scope: !3257)
!3257 = distinct !DILexicalBlock(scope: !3254, file: !1, line: 575, column: 17)
!3258 = !DILocation(line: 578, column: 3, scope: !3257)
!3259 = !DILocation(line: 579, column: 2, scope: !3234)
!3260 = !DILocation(line: 568, column: 49, scope: !3228)
!3261 = !DILocation(line: 568, column: 56, scope: !3228)
!3262 = !DILocation(line: 568, column: 2, scope: !3228)
!3263 = distinct !{!3263, !3232, !3264}
!3264 = !DILocation(line: 579, column: 2, scope: !3223)
!3265 = !DILocation(line: 580, column: 1, scope: !2805)
!3266 = distinct !DISubprogram(name: "copy_v3_v3", scope: !3267, file: !3267, line: 64, type: !3268, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !544)
!3267 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3268 = !DISubroutineType(types: !3269)
!3269 = !{null, !1099, !1073}
!3270 = !DILocalVariable(name: "r", arg: 1, scope: !3266, file: !3267, line: 64, type: !1099)
!3271 = !DILocation(line: 64, column: 31, scope: !3266)
!3272 = !DILocalVariable(name: "a", arg: 2, scope: !3266, file: !3267, line: 64, type: !1073)
!3273 = !DILocation(line: 64, column: 49, scope: !3266)
!3274 = !DILocation(line: 66, column: 9, scope: !3266)
!3275 = !DILocation(line: 66, column: 2, scope: !3266)
!3276 = !DILocation(line: 66, column: 7, scope: !3266)
!3277 = !DILocation(line: 67, column: 9, scope: !3266)
!3278 = !DILocation(line: 67, column: 2, scope: !3266)
!3279 = !DILocation(line: 67, column: 7, scope: !3266)
!3280 = !DILocation(line: 68, column: 9, scope: !3266)
!3281 = !DILocation(line: 68, column: 2, scope: !3266)
!3282 = !DILocation(line: 68, column: 7, scope: !3266)
!3283 = !DILocation(line: 69, column: 1, scope: !3266)
!3284 = distinct !DISubprogram(name: "normalize_v3", scope: !3267, file: !3267, line: 830, type: !3285, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !544)
!3285 = !DISubroutineType(types: !3286)
!3286 = !{!366, !1099}
!3287 = !DILocalVariable(name: "n", arg: 1, scope: !3284, file: !3267, line: 830, type: !1099)
!3288 = !DILocation(line: 830, column: 34, scope: !3284)
!3289 = !DILocation(line: 832, column: 25, scope: !3284)
!3290 = !DILocation(line: 832, column: 28, scope: !3284)
!3291 = !DILocation(line: 832, column: 9, scope: !3284)
!3292 = !DILocation(line: 832, column: 2, scope: !3284)
!3293 = distinct !DISubprogram(name: "mul_v3_fl", scope: !3267, file: !3267, line: 392, type: !3294, scopeLine: 393, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !544)
!3294 = !DISubroutineType(types: !3295)
!3295 = !{null, !1099, !366}
!3296 = !DILocalVariable(name: "r", arg: 1, scope: !3293, file: !3267, line: 392, type: !1099)
!3297 = !DILocation(line: 392, column: 30, scope: !3293)
!3298 = !DILocalVariable(name: "f", arg: 2, scope: !3293, file: !3267, line: 392, type: !366)
!3299 = !DILocation(line: 392, column: 42, scope: !3293)
!3300 = !DILocation(line: 394, column: 10, scope: !3293)
!3301 = !DILocation(line: 394, column: 2, scope: !3293)
!3302 = !DILocation(line: 394, column: 7, scope: !3293)
!3303 = !DILocation(line: 395, column: 10, scope: !3293)
!3304 = !DILocation(line: 395, column: 2, scope: !3293)
!3305 = !DILocation(line: 395, column: 7, scope: !3293)
!3306 = !DILocation(line: 396, column: 10, scope: !3293)
!3307 = !DILocation(line: 396, column: 2, scope: !3293)
!3308 = !DILocation(line: 396, column: 7, scope: !3293)
!3309 = !DILocation(line: 397, column: 1, scope: !3293)
!3310 = distinct !DISubprogram(name: "vec_roll_to_mat3", scope: !1, file: !1, line: 1542, type: !3311, scopeLine: 1543, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !544)
!3311 = !DISubroutineType(types: !3312)
!3312 = !{null, !1073, !882, !1108}
!3313 = !DILocalVariable(name: "vec", arg: 1, scope: !3310, file: !1, line: 1542, type: !1073)
!3314 = !DILocation(line: 1542, column: 35, scope: !3310)
!3315 = !DILocalVariable(name: "roll", arg: 2, scope: !3310, file: !1, line: 1542, type: !882)
!3316 = !DILocation(line: 1542, column: 55, scope: !3310)
!3317 = !DILocalVariable(name: "mat", arg: 3, scope: !3310, file: !1, line: 1542, type: !1108)
!3318 = !DILocation(line: 1542, column: 67, scope: !3310)
!3319 = !DILocalVariable(name: "nor", scope: !3310, file: !1, line: 1544, type: !408)
!3320 = !DILocation(line: 1544, column: 8, scope: !3310)
!3321 = !DILocation(line: 1546, column: 18, scope: !3310)
!3322 = !DILocation(line: 1546, column: 23, scope: !3310)
!3323 = !DILocation(line: 1546, column: 2, scope: !3310)
!3324 = !DILocation(line: 1547, column: 30, scope: !3310)
!3325 = !DILocation(line: 1547, column: 35, scope: !3310)
!3326 = !DILocation(line: 1547, column: 41, scope: !3310)
!3327 = !DILocation(line: 1547, column: 2, scope: !3310)
!3328 = !DILocation(line: 1548, column: 1, scope: !3310)
!3329 = distinct !DISubprogram(name: "equalize_bezier", scope: !1, file: !1, line: 384, type: !3330, scopeLine: 385, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !544)
!3330 = !DISubroutineType(types: !3331)
!3331 = !{null, !1099, !141}
!3332 = !DILocalVariable(name: "data", arg: 1, scope: !3329, file: !1, line: 384, type: !1099)
!3333 = !DILocation(line: 384, column: 36, scope: !3329)
!3334 = !DILocalVariable(name: "desired", arg: 2, scope: !3329, file: !1, line: 384, type: !141)
!3335 = !DILocation(line: 384, column: 46, scope: !3329)
!3336 = !DILocalVariable(name: "fp", scope: !3329, file: !1, line: 386, type: !1099)
!3337 = !DILocation(line: 386, column: 9, scope: !3329)
!3338 = !DILocalVariable(name: "totdist", scope: !3329, file: !1, line: 386, type: !366)
!3339 = !DILocation(line: 386, column: 13, scope: !3329)
!3340 = !DILocalVariable(name: "ddist", scope: !3329, file: !1, line: 386, type: !366)
!3341 = !DILocation(line: 386, column: 22, scope: !3329)
!3342 = !DILocalVariable(name: "dist", scope: !3329, file: !1, line: 386, type: !366)
!3343 = !DILocation(line: 386, column: 29, scope: !3329)
!3344 = !DILocalVariable(name: "fac1", scope: !3329, file: !1, line: 386, type: !366)
!3345 = !DILocation(line: 386, column: 35, scope: !3329)
!3346 = !DILocalVariable(name: "fac2", scope: !3329, file: !1, line: 386, type: !366)
!3347 = !DILocation(line: 386, column: 41, scope: !3329)
!3348 = !DILocalVariable(name: "pdist", scope: !3329, file: !1, line: 387, type: !3349)
!3349 = !DICompositeType(tag: DW_TAG_array_type, baseType: !366, size: 1056, elements: !3350)
!3350 = !{!2902}
!3351 = !DILocation(line: 387, column: 8, scope: !3329)
!3352 = !DILocalVariable(name: "temp", scope: !3329, file: !1, line: 388, type: !2900)
!3353 = !DILocation(line: 388, column: 8, scope: !3329)
!3354 = !DILocalVariable(name: "a", scope: !3329, file: !1, line: 389, type: !141)
!3355 = !DILocation(line: 389, column: 6, scope: !3329)
!3356 = !DILocalVariable(name: "nr", scope: !3329, file: !1, line: 389, type: !141)
!3357 = !DILocation(line: 389, column: 9, scope: !3329)
!3358 = !DILocation(line: 391, column: 2, scope: !3329)
!3359 = !DILocation(line: 391, column: 11, scope: !3329)
!3360 = !DILocation(line: 392, column: 9, scope: !3361)
!3361 = distinct !DILexicalBlock(scope: !3329, file: !1, line: 392, column: 2)
!3362 = !DILocation(line: 392, column: 19, scope: !3361)
!3363 = !DILocation(line: 392, column: 17, scope: !3361)
!3364 = !DILocation(line: 392, column: 7, scope: !3361)
!3365 = !DILocation(line: 392, column: 25, scope: !3366)
!3366 = distinct !DILexicalBlock(scope: !3361, file: !1, line: 392, column: 2)
!3367 = !DILocation(line: 392, column: 27, scope: !3366)
!3368 = !DILocation(line: 392, column: 2, scope: !3361)
!3369 = !DILocation(line: 393, column: 19, scope: !3370)
!3370 = distinct !DILexicalBlock(scope: !3366, file: !1, line: 392, column: 61)
!3371 = !DILocation(line: 393, column: 14, scope: !3370)
!3372 = !DILocation(line: 393, column: 23, scope: !3370)
!3373 = !DILocation(line: 393, column: 3, scope: !3370)
!3374 = !DILocation(line: 394, column: 24, scope: !3370)
!3375 = !DILocation(line: 394, column: 18, scope: !3370)
!3376 = !DILocation(line: 394, column: 38, scope: !3370)
!3377 = !DILocation(line: 394, column: 42, scope: !3370)
!3378 = !DILocation(line: 394, column: 45, scope: !3370)
!3379 = !DILocation(line: 394, column: 29, scope: !3370)
!3380 = !DILocation(line: 394, column: 27, scope: !3370)
!3381 = !DILocation(line: 394, column: 9, scope: !3370)
!3382 = !DILocation(line: 394, column: 11, scope: !3370)
!3383 = !DILocation(line: 394, column: 3, scope: !3370)
!3384 = !DILocation(line: 394, column: 16, scope: !3370)
!3385 = !DILocation(line: 395, column: 2, scope: !3370)
!3386 = !DILocation(line: 392, column: 48, scope: !3366)
!3387 = !DILocation(line: 392, column: 55, scope: !3366)
!3388 = !DILocation(line: 392, column: 2, scope: !3366)
!3389 = distinct !{!3389, !3368, !3390}
!3390 = !DILocation(line: 395, column: 2, scope: !3361)
!3391 = !DILocation(line: 397, column: 18, scope: !3329)
!3392 = !DILocation(line: 397, column: 13, scope: !3329)
!3393 = !DILocation(line: 397, column: 22, scope: !3329)
!3394 = !DILocation(line: 397, column: 2, scope: !3329)
!3395 = !DILocation(line: 398, column: 18, scope: !3329)
!3396 = !DILocation(line: 398, column: 12, scope: !3329)
!3397 = !DILocation(line: 398, column: 10, scope: !3329)
!3398 = !DILocation(line: 401, column: 10, scope: !3329)
!3399 = !DILocation(line: 401, column: 28, scope: !3329)
!3400 = !DILocation(line: 401, column: 21, scope: !3329)
!3401 = !DILocation(line: 401, column: 18, scope: !3329)
!3402 = !DILocation(line: 401, column: 8, scope: !3329)
!3403 = !DILocation(line: 402, column: 5, scope: !3329)
!3404 = !DILocation(line: 403, column: 9, scope: !3405)
!3405 = distinct !DILexicalBlock(scope: !3329, file: !1, line: 403, column: 2)
!3406 = !DILocation(line: 403, column: 19, scope: !3405)
!3407 = !DILocation(line: 403, column: 24, scope: !3405)
!3408 = !DILocation(line: 403, column: 17, scope: !3405)
!3409 = !DILocation(line: 403, column: 7, scope: !3405)
!3410 = !DILocation(line: 403, column: 29, scope: !3411)
!3411 = distinct !DILexicalBlock(scope: !3405, file: !1, line: 403, column: 2)
!3412 = !DILocation(line: 403, column: 33, scope: !3411)
!3413 = !DILocation(line: 403, column: 31, scope: !3411)
!3414 = !DILocation(line: 403, column: 2, scope: !3405)
!3415 = !DILocation(line: 404, column: 18, scope: !3416)
!3416 = distinct !DILexicalBlock(scope: !3411, file: !1, line: 403, column: 56)
!3417 = !DILocation(line: 404, column: 11, scope: !3416)
!3418 = !DILocation(line: 404, column: 23, scope: !3416)
!3419 = !DILocation(line: 404, column: 21, scope: !3416)
!3420 = !DILocation(line: 404, column: 8, scope: !3416)
!3421 = !DILocation(line: 407, column: 3, scope: !3416)
!3422 = !DILocation(line: 407, column: 11, scope: !3416)
!3423 = !DILocation(line: 407, column: 14, scope: !3416)
!3424 = !DILocation(line: 407, column: 34, scope: !3416)
!3425 = !DILocation(line: 407, column: 38, scope: !3416)
!3426 = !DILocation(line: 407, column: 52, scope: !3416)
!3427 = !DILocation(line: 407, column: 46, scope: !3416)
!3428 = !DILocation(line: 407, column: 43, scope: !3416)
!3429 = !DILocation(line: 0, scope: !3416)
!3430 = !DILocation(line: 408, column: 6, scope: !3416)
!3431 = distinct !{!3431, !3421, !3430}
!3432 = !DILocation(line: 410, column: 16, scope: !3416)
!3433 = !DILocation(line: 410, column: 10, scope: !3416)
!3434 = !DILocation(line: 410, column: 28, scope: !3416)
!3435 = !DILocation(line: 410, column: 31, scope: !3416)
!3436 = !DILocation(line: 410, column: 22, scope: !3416)
!3437 = !DILocation(line: 410, column: 20, scope: !3416)
!3438 = !DILocation(line: 410, column: 8, scope: !3416)
!3439 = !DILocation(line: 411, column: 16, scope: !3416)
!3440 = !DILocation(line: 411, column: 10, scope: !3416)
!3441 = !DILocation(line: 411, column: 22, scope: !3416)
!3442 = !DILocation(line: 411, column: 20, scope: !3416)
!3443 = !DILocation(line: 411, column: 8, scope: !3416)
!3444 = !DILocation(line: 412, column: 10, scope: !3416)
!3445 = !DILocation(line: 412, column: 17, scope: !3416)
!3446 = !DILocation(line: 412, column: 15, scope: !3416)
!3447 = !DILocation(line: 412, column: 8, scope: !3416)
!3448 = !DILocation(line: 413, column: 17, scope: !3416)
!3449 = !DILocation(line: 413, column: 15, scope: !3416)
!3450 = !DILocation(line: 413, column: 8, scope: !3416)
!3451 = !DILocation(line: 415, column: 11, scope: !3416)
!3452 = !DILocation(line: 415, column: 23, scope: !3416)
!3453 = !DILocation(line: 415, column: 26, scope: !3416)
!3454 = !DILocation(line: 415, column: 18, scope: !3416)
!3455 = !DILocation(line: 415, column: 16, scope: !3416)
!3456 = !DILocation(line: 415, column: 36, scope: !3416)
!3457 = !DILocation(line: 415, column: 48, scope: !3416)
!3458 = !DILocation(line: 415, column: 43, scope: !3416)
!3459 = !DILocation(line: 415, column: 41, scope: !3416)
!3460 = !DILocation(line: 415, column: 34, scope: !3416)
!3461 = !DILocation(line: 415, column: 3, scope: !3416)
!3462 = !DILocation(line: 415, column: 9, scope: !3416)
!3463 = !DILocation(line: 416, column: 11, scope: !3416)
!3464 = !DILocation(line: 416, column: 23, scope: !3416)
!3465 = !DILocation(line: 416, column: 26, scope: !3416)
!3466 = !DILocation(line: 416, column: 18, scope: !3416)
!3467 = !DILocation(line: 416, column: 16, scope: !3416)
!3468 = !DILocation(line: 416, column: 36, scope: !3416)
!3469 = !DILocation(line: 416, column: 48, scope: !3416)
!3470 = !DILocation(line: 416, column: 43, scope: !3416)
!3471 = !DILocation(line: 416, column: 41, scope: !3416)
!3472 = !DILocation(line: 416, column: 34, scope: !3416)
!3473 = !DILocation(line: 416, column: 3, scope: !3416)
!3474 = !DILocation(line: 416, column: 9, scope: !3416)
!3475 = !DILocation(line: 417, column: 11, scope: !3416)
!3476 = !DILocation(line: 417, column: 23, scope: !3416)
!3477 = !DILocation(line: 417, column: 26, scope: !3416)
!3478 = !DILocation(line: 417, column: 18, scope: !3416)
!3479 = !DILocation(line: 417, column: 16, scope: !3416)
!3480 = !DILocation(line: 417, column: 36, scope: !3416)
!3481 = !DILocation(line: 417, column: 48, scope: !3416)
!3482 = !DILocation(line: 417, column: 43, scope: !3416)
!3483 = !DILocation(line: 417, column: 41, scope: !3416)
!3484 = !DILocation(line: 417, column: 34, scope: !3416)
!3485 = !DILocation(line: 417, column: 3, scope: !3416)
!3486 = !DILocation(line: 417, column: 9, scope: !3416)
!3487 = !DILocation(line: 418, column: 11, scope: !3416)
!3488 = !DILocation(line: 418, column: 23, scope: !3416)
!3489 = !DILocation(line: 418, column: 26, scope: !3416)
!3490 = !DILocation(line: 418, column: 18, scope: !3416)
!3491 = !DILocation(line: 418, column: 16, scope: !3416)
!3492 = !DILocation(line: 418, column: 36, scope: !3416)
!3493 = !DILocation(line: 418, column: 48, scope: !3416)
!3494 = !DILocation(line: 418, column: 43, scope: !3416)
!3495 = !DILocation(line: 418, column: 41, scope: !3416)
!3496 = !DILocation(line: 418, column: 34, scope: !3416)
!3497 = !DILocation(line: 418, column: 3, scope: !3416)
!3498 = !DILocation(line: 418, column: 9, scope: !3416)
!3499 = !DILocation(line: 419, column: 2, scope: !3416)
!3500 = !DILocation(line: 403, column: 43, scope: !3411)
!3501 = !DILocation(line: 403, column: 50, scope: !3411)
!3502 = !DILocation(line: 403, column: 2, scope: !3411)
!3503 = distinct !{!3503, !3414, !3504}
!3504 = !DILocation(line: 419, column: 2, scope: !3405)
!3505 = !DILocation(line: 421, column: 13, scope: !3329)
!3506 = !DILocation(line: 421, column: 17, scope: !3329)
!3507 = !DILocation(line: 421, column: 2, scope: !3329)
!3508 = !DILocation(line: 422, column: 1, scope: !3329)
!3509 = distinct !DISubprogram(name: "sub_v3_v3v3", scope: !3267, file: !3267, line: 357, type: !3510, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !544)
!3510 = !DISubroutineType(types: !3511)
!3511 = !{null, !1099, !1073, !1073}
!3512 = !DILocalVariable(name: "r", arg: 1, scope: !3509, file: !3267, line: 357, type: !1099)
!3513 = !DILocation(line: 357, column: 32, scope: !3509)
!3514 = !DILocalVariable(name: "a", arg: 2, scope: !3509, file: !3267, line: 357, type: !1073)
!3515 = !DILocation(line: 357, column: 50, scope: !3509)
!3516 = !DILocalVariable(name: "b", arg: 3, scope: !3509, file: !3267, line: 357, type: !1073)
!3517 = !DILocation(line: 357, column: 68, scope: !3509)
!3518 = !DILocation(line: 359, column: 9, scope: !3509)
!3519 = !DILocation(line: 359, column: 16, scope: !3509)
!3520 = !DILocation(line: 359, column: 14, scope: !3509)
!3521 = !DILocation(line: 359, column: 2, scope: !3509)
!3522 = !DILocation(line: 359, column: 7, scope: !3509)
!3523 = !DILocation(line: 360, column: 9, scope: !3509)
!3524 = !DILocation(line: 360, column: 16, scope: !3509)
!3525 = !DILocation(line: 360, column: 14, scope: !3509)
!3526 = !DILocation(line: 360, column: 2, scope: !3509)
!3527 = !DILocation(line: 360, column: 7, scope: !3509)
!3528 = !DILocation(line: 361, column: 9, scope: !3509)
!3529 = !DILocation(line: 361, column: 16, scope: !3509)
!3530 = !DILocation(line: 361, column: 14, scope: !3509)
!3531 = !DILocation(line: 361, column: 2, scope: !3509)
!3532 = !DILocation(line: 361, column: 7, scope: !3509)
!3533 = !DILocation(line: 362, column: 1, scope: !3509)
!3534 = distinct !DISubprogram(name: "distfactor_to_bone", scope: !1, file: !1, line: 663, type: !3535, scopeLine: 664, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !544)
!3535 = !DISubroutineType(types: !3536)
!3536 = !{!366, !1073, !1073, !1073, !366, !366, !366}
!3537 = !DILocalVariable(name: "vec", arg: 1, scope: !3534, file: !1, line: 663, type: !1073)
!3538 = !DILocation(line: 663, column: 38, scope: !3534)
!3539 = !DILocalVariable(name: "b1", arg: 2, scope: !3534, file: !1, line: 663, type: !1073)
!3540 = !DILocation(line: 663, column: 58, scope: !3534)
!3541 = !DILocalVariable(name: "b2", arg: 3, scope: !3534, file: !1, line: 663, type: !1073)
!3542 = !DILocation(line: 663, column: 77, scope: !3534)
!3543 = !DILocalVariable(name: "rad1", arg: 4, scope: !3534, file: !1, line: 663, type: !366)
!3544 = !DILocation(line: 663, column: 90, scope: !3534)
!3545 = !DILocalVariable(name: "rad2", arg: 5, scope: !3534, file: !1, line: 663, type: !366)
!3546 = !DILocation(line: 663, column: 102, scope: !3534)
!3547 = !DILocalVariable(name: "rdist", arg: 6, scope: !3534, file: !1, line: 663, type: !366)
!3548 = !DILocation(line: 663, column: 114, scope: !3534)
!3549 = !DILocalVariable(name: "dist_sq", scope: !3534, file: !1, line: 665, type: !366)
!3550 = !DILocation(line: 665, column: 8, scope: !3534)
!3551 = !DILocalVariable(name: "bdelta", scope: !3534, file: !1, line: 666, type: !408)
!3552 = !DILocation(line: 666, column: 8, scope: !3534)
!3553 = !DILocalVariable(name: "pdelta", scope: !3534, file: !1, line: 667, type: !408)
!3554 = !DILocation(line: 667, column: 8, scope: !3534)
!3555 = !DILocalVariable(name: "hsqr", scope: !3534, file: !1, line: 668, type: !366)
!3556 = !DILocation(line: 668, column: 8, scope: !3534)
!3557 = !DILocalVariable(name: "a", scope: !3534, file: !1, line: 668, type: !366)
!3558 = !DILocation(line: 668, column: 14, scope: !3534)
!3559 = !DILocalVariable(name: "l", scope: !3534, file: !1, line: 668, type: !366)
!3560 = !DILocation(line: 668, column: 17, scope: !3534)
!3561 = !DILocalVariable(name: "rad", scope: !3534, file: !1, line: 668, type: !366)
!3562 = !DILocation(line: 668, column: 20, scope: !3534)
!3563 = !DILocation(line: 670, column: 14, scope: !3534)
!3564 = !DILocation(line: 670, column: 22, scope: !3534)
!3565 = !DILocation(line: 670, column: 26, scope: !3534)
!3566 = !DILocation(line: 670, column: 2, scope: !3534)
!3567 = !DILocation(line: 671, column: 19, scope: !3534)
!3568 = !DILocation(line: 671, column: 6, scope: !3534)
!3569 = !DILocation(line: 671, column: 4, scope: !3534)
!3570 = !DILocation(line: 673, column: 14, scope: !3534)
!3571 = !DILocation(line: 673, column: 22, scope: !3534)
!3572 = !DILocation(line: 673, column: 27, scope: !3534)
!3573 = !DILocation(line: 673, column: 2, scope: !3534)
!3574 = !DILocation(line: 675, column: 15, scope: !3534)
!3575 = !DILocation(line: 675, column: 23, scope: !3534)
!3576 = !DILocation(line: 675, column: 6, scope: !3534)
!3577 = !DILocation(line: 675, column: 4, scope: !3534)
!3578 = !DILocation(line: 676, column: 24, scope: !3534)
!3579 = !DILocation(line: 676, column: 9, scope: !3534)
!3580 = !DILocation(line: 676, column: 7, scope: !3534)
!3581 = !DILocation(line: 678, column: 6, scope: !3582)
!3582 = distinct !DILexicalBlock(scope: !3534, file: !1, line: 678, column: 6)
!3583 = !DILocation(line: 678, column: 8, scope: !3582)
!3584 = !DILocation(line: 678, column: 6, scope: !3534)
!3585 = !DILocation(line: 680, column: 30, scope: !3586)
!3586 = distinct !DILexicalBlock(scope: !3582, file: !1, line: 678, column: 16)
!3587 = !DILocation(line: 680, column: 34, scope: !3586)
!3588 = !DILocation(line: 680, column: 13, scope: !3586)
!3589 = !DILocation(line: 680, column: 11, scope: !3586)
!3590 = !DILocation(line: 681, column: 9, scope: !3586)
!3591 = !DILocation(line: 681, column: 7, scope: !3586)
!3592 = !DILocation(line: 682, column: 2, scope: !3586)
!3593 = !DILocation(line: 683, column: 11, scope: !3594)
!3594 = distinct !DILexicalBlock(scope: !3582, file: !1, line: 683, column: 11)
!3595 = !DILocation(line: 683, column: 15, scope: !3594)
!3596 = !DILocation(line: 683, column: 13, scope: !3594)
!3597 = !DILocation(line: 683, column: 11, scope: !3582)
!3598 = !DILocation(line: 685, column: 30, scope: !3599)
!3599 = distinct !DILexicalBlock(scope: !3594, file: !1, line: 683, column: 18)
!3600 = !DILocation(line: 685, column: 34, scope: !3599)
!3601 = !DILocation(line: 685, column: 13, scope: !3599)
!3602 = !DILocation(line: 685, column: 11, scope: !3599)
!3603 = !DILocation(line: 686, column: 9, scope: !3599)
!3604 = !DILocation(line: 686, column: 7, scope: !3599)
!3605 = !DILocation(line: 687, column: 2, scope: !3599)
!3606 = !DILocation(line: 689, column: 14, scope: !3607)
!3607 = distinct !DILexicalBlock(scope: !3594, file: !1, line: 688, column: 7)
!3608 = !DILocation(line: 689, column: 22, scope: !3607)
!3609 = !DILocation(line: 689, column: 26, scope: !3607)
!3610 = !DILocation(line: 689, column: 24, scope: !3607)
!3611 = !DILocation(line: 689, column: 19, scope: !3607)
!3612 = !DILocation(line: 689, column: 11, scope: !3607)
!3613 = !DILocation(line: 691, column: 7, scope: !3614)
!3614 = distinct !DILexicalBlock(scope: !3607, file: !1, line: 691, column: 7)
!3615 = !DILocation(line: 691, column: 9, scope: !3614)
!3616 = !DILocation(line: 691, column: 7, scope: !3607)
!3617 = !DILocation(line: 692, column: 10, scope: !3618)
!3618 = distinct !DILexicalBlock(scope: !3614, file: !1, line: 691, column: 18)
!3619 = !DILocation(line: 692, column: 14, scope: !3618)
!3620 = !DILocation(line: 692, column: 12, scope: !3618)
!3621 = !DILocation(line: 692, column: 8, scope: !3618)
!3622 = !DILocation(line: 693, column: 10, scope: !3618)
!3623 = !DILocation(line: 693, column: 16, scope: !3618)
!3624 = !DILocation(line: 693, column: 14, scope: !3618)
!3625 = !DILocation(line: 693, column: 31, scope: !3618)
!3626 = !DILocation(line: 693, column: 29, scope: !3618)
!3627 = !DILocation(line: 693, column: 38, scope: !3618)
!3628 = !DILocation(line: 693, column: 36, scope: !3618)
!3629 = !DILocation(line: 693, column: 21, scope: !3618)
!3630 = !DILocation(line: 693, column: 8, scope: !3618)
!3631 = !DILocation(line: 694, column: 3, scope: !3618)
!3632 = !DILocation(line: 696, column: 10, scope: !3614)
!3633 = !DILocation(line: 696, column: 8, scope: !3614)
!3634 = !DILocation(line: 699, column: 6, scope: !3534)
!3635 = !DILocation(line: 699, column: 12, scope: !3534)
!3636 = !DILocation(line: 699, column: 10, scope: !3534)
!3637 = !DILocation(line: 699, column: 4, scope: !3534)
!3638 = !DILocation(line: 700, column: 6, scope: !3639)
!3639 = distinct !DILexicalBlock(scope: !3534, file: !1, line: 700, column: 6)
!3640 = !DILocation(line: 700, column: 16, scope: !3639)
!3641 = !DILocation(line: 700, column: 14, scope: !3639)
!3642 = !DILocation(line: 700, column: 6, scope: !3534)
!3643 = !DILocation(line: 701, column: 3, scope: !3639)
!3644 = !DILocation(line: 703, column: 7, scope: !3645)
!3645 = distinct !DILexicalBlock(scope: !3639, file: !1, line: 702, column: 7)
!3646 = !DILocation(line: 703, column: 13, scope: !3645)
!3647 = !DILocation(line: 703, column: 11, scope: !3645)
!3648 = !DILocation(line: 703, column: 5, scope: !3645)
!3649 = !DILocation(line: 704, column: 8, scope: !3645)
!3650 = !DILocation(line: 704, column: 5, scope: !3645)
!3651 = !DILocation(line: 705, column: 7, scope: !3652)
!3652 = distinct !DILexicalBlock(scope: !3645, file: !1, line: 705, column: 7)
!3653 = !DILocation(line: 705, column: 13, scope: !3652)
!3654 = !DILocation(line: 705, column: 21, scope: !3652)
!3655 = !DILocation(line: 705, column: 24, scope: !3652)
!3656 = !DILocation(line: 705, column: 35, scope: !3652)
!3657 = !DILocation(line: 705, column: 32, scope: !3652)
!3658 = !DILocation(line: 705, column: 7, scope: !3645)
!3659 = !DILocation(line: 706, column: 4, scope: !3652)
!3660 = !DILocation(line: 708, column: 14, scope: !3661)
!3661 = distinct !DILexicalBlock(scope: !3652, file: !1, line: 707, column: 8)
!3662 = !DILocation(line: 708, column: 8, scope: !3661)
!3663 = !DILocation(line: 708, column: 25, scope: !3661)
!3664 = !DILocation(line: 708, column: 23, scope: !3661)
!3665 = !DILocation(line: 708, column: 6, scope: !3661)
!3666 = !DILocation(line: 709, column: 19, scope: !3661)
!3667 = !DILocation(line: 709, column: 23, scope: !3661)
!3668 = !DILocation(line: 709, column: 21, scope: !3661)
!3669 = !DILocation(line: 709, column: 29, scope: !3661)
!3670 = !DILocation(line: 709, column: 37, scope: !3661)
!3671 = !DILocation(line: 709, column: 35, scope: !3661)
!3672 = !DILocation(line: 709, column: 26, scope: !3661)
!3673 = !DILocation(line: 709, column: 16, scope: !3661)
!3674 = !DILocation(line: 709, column: 4, scope: !3661)
!3675 = !DILocation(line: 712, column: 1, scope: !3534)
!3676 = distinct !DISubprogram(name: "dot_v3v3", scope: !3267, file: !3267, line: 619, type: !3677, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !544)
!3677 = !DISubroutineType(types: !3678)
!3678 = !{!366, !1073, !1073}
!3679 = !DILocalVariable(name: "a", arg: 1, scope: !3676, file: !3267, line: 619, type: !1073)
!3680 = !DILocation(line: 619, column: 36, scope: !3676)
!3681 = !DILocalVariable(name: "b", arg: 2, scope: !3676, file: !3267, line: 619, type: !1073)
!3682 = !DILocation(line: 619, column: 54, scope: !3676)
!3683 = !DILocation(line: 621, column: 9, scope: !3676)
!3684 = !DILocation(line: 621, column: 16, scope: !3676)
!3685 = !DILocation(line: 621, column: 14, scope: !3676)
!3686 = !DILocation(line: 621, column: 23, scope: !3676)
!3687 = !DILocation(line: 621, column: 30, scope: !3676)
!3688 = !DILocation(line: 621, column: 28, scope: !3676)
!3689 = !DILocation(line: 621, column: 21, scope: !3676)
!3690 = !DILocation(line: 621, column: 37, scope: !3676)
!3691 = !DILocation(line: 621, column: 44, scope: !3676)
!3692 = !DILocation(line: 621, column: 42, scope: !3676)
!3693 = !DILocation(line: 621, column: 35, scope: !3676)
!3694 = !DILocation(line: 621, column: 2, scope: !3676)
!3695 = distinct !DISubprogram(name: "len_squared_v3", scope: !3267, file: !3267, line: 671, type: !3696, scopeLine: 672, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !544)
!3696 = !DISubroutineType(types: !3697)
!3697 = !{!366, !1073}
!3698 = !DILocalVariable(name: "v", arg: 1, scope: !3695, file: !3267, line: 671, type: !1073)
!3699 = !DILocation(line: 671, column: 42, scope: !3695)
!3700 = !DILocation(line: 673, column: 9, scope: !3695)
!3701 = !DILocation(line: 673, column: 16, scope: !3695)
!3702 = !DILocation(line: 673, column: 14, scope: !3695)
!3703 = !DILocation(line: 673, column: 23, scope: !3695)
!3704 = !DILocation(line: 673, column: 30, scope: !3695)
!3705 = !DILocation(line: 673, column: 28, scope: !3695)
!3706 = !DILocation(line: 673, column: 21, scope: !3695)
!3707 = !DILocation(line: 673, column: 37, scope: !3695)
!3708 = !DILocation(line: 673, column: 44, scope: !3695)
!3709 = !DILocation(line: 673, column: 42, scope: !3695)
!3710 = !DILocation(line: 673, column: 35, scope: !3695)
!3711 = !DILocation(line: 673, column: 2, scope: !3695)
!3712 = distinct !DISubprogram(name: "len_squared_v3v3", scope: !3267, file: !3267, line: 727, type: !3677, scopeLine: 728, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !544)
!3713 = !DILocalVariable(name: "a", arg: 1, scope: !3712, file: !3267, line: 727, type: !1073)
!3714 = !DILocation(line: 727, column: 44, scope: !3712)
!3715 = !DILocalVariable(name: "b", arg: 2, scope: !3712, file: !3267, line: 727, type: !1073)
!3716 = !DILocation(line: 727, column: 62, scope: !3712)
!3717 = !DILocalVariable(name: "d", scope: !3712, file: !3267, line: 729, type: !408)
!3718 = !DILocation(line: 729, column: 8, scope: !3712)
!3719 = !DILocation(line: 731, column: 14, scope: !3712)
!3720 = !DILocation(line: 731, column: 17, scope: !3712)
!3721 = !DILocation(line: 731, column: 20, scope: !3712)
!3722 = !DILocation(line: 731, column: 2, scope: !3712)
!3723 = !DILocation(line: 732, column: 18, scope: !3712)
!3724 = !DILocation(line: 732, column: 21, scope: !3712)
!3725 = !DILocation(line: 732, column: 9, scope: !3712)
!3726 = !DILocation(line: 732, column: 2, scope: !3712)
!3727 = distinct !DISubprogram(name: "armature_deform_verts", scope: !1, file: !1, line: 811, type: !3728, scopeLine: 814, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !544)
!3728 = !DISubroutineType(types: !3729)
!3729 = !{null, !569, !569, !876, !1108, !3730, !141, !141, !1108, !542}
!3730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !413, size: 64)
!3731 = !DILocalVariable(name: "armOb", arg: 1, scope: !3727, file: !1, line: 811, type: !569)
!3732 = !DILocation(line: 811, column: 36, scope: !3727)
!3733 = !DILocalVariable(name: "target", arg: 2, scope: !3727, file: !1, line: 811, type: !569)
!3734 = !DILocation(line: 811, column: 51, scope: !3727)
!3735 = !DILocalVariable(name: "dm", arg: 3, scope: !3727, file: !1, line: 811, type: !876)
!3736 = !DILocation(line: 811, column: 72, scope: !3727)
!3737 = !DILocalVariable(name: "vertexCos", arg: 4, scope: !3727, file: !1, line: 811, type: !1108)
!3738 = !DILocation(line: 811, column: 84, scope: !3727)
!3739 = !DILocalVariable(name: "defMats", arg: 5, scope: !3727, file: !1, line: 812, type: !3730)
!3740 = !DILocation(line: 812, column: 36, scope: !3727)
!3741 = !DILocalVariable(name: "numVerts", arg: 6, scope: !3727, file: !1, line: 812, type: !141)
!3742 = !DILocation(line: 812, column: 56, scope: !3727)
!3743 = !DILocalVariable(name: "deformflag", arg: 7, scope: !3727, file: !1, line: 812, type: !141)
!3744 = !DILocation(line: 812, column: 70, scope: !3727)
!3745 = !DILocalVariable(name: "prevCos", arg: 8, scope: !3727, file: !1, line: 813, type: !1108)
!3746 = !DILocation(line: 813, column: 36, scope: !3727)
!3747 = !DILocalVariable(name: "defgrp_name", arg: 9, scope: !3727, file: !1, line: 813, type: !542)
!3748 = !DILocation(line: 813, column: 61, scope: !3727)
!3749 = !DILocalVariable(name: "pdef_info_array", scope: !3727, file: !1, line: 815, type: !3750)
!3750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3751, size: 64)
!3751 = !DIDerivedType(tag: DW_TAG_typedef, name: "bPoseChanDeform", file: !1, line: 588, baseType: !3752)
!3752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPoseChanDeform", file: !1, line: 584, size: 192, elements: !3753)
!3753 = !{!3754, !3755, !3765}
!3754 = !DIDerivedType(tag: DW_TAG_member, name: "b_bone_mats", scope: !3752, file: !1, line: 585, baseType: !2853, size: 64)
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "dual_quat", scope: !3752, file: !1, line: 586, baseType: !3756, size: 64, offset: 64)
!3756 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3757, size: 64)
!3757 = !DIDerivedType(tag: DW_TAG_typedef, name: "DualQuat", file: !3758, line: 177, baseType: !3759)
!3758 = !DIFile(filename: "blender/source/blender/blenlib/BLI_math_rotation.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3759 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DualQuat", file: !3758, line: 171, size: 800, elements: !3760)
!3760 = !{!3761, !3762, !3763, !3764}
!3761 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !3759, file: !3758, line: 172, baseType: !694, size: 128)
!3762 = !DIDerivedType(tag: DW_TAG_member, name: "trans", scope: !3759, file: !3758, line: 173, baseType: !694, size: 128, offset: 128)
!3763 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !3759, file: !3758, line: 175, baseType: !419, size: 512, offset: 256)
!3764 = !DIDerivedType(tag: DW_TAG_member, name: "scale_weight", scope: !3759, file: !3758, line: 176, baseType: !366, size: 32, offset: 768)
!3765 = !DIDerivedType(tag: DW_TAG_member, name: "b_bone_dual_quats", scope: !3752, file: !1, line: 587, baseType: !3756, size: 64, offset: 128)
!3766 = !DILocation(line: 815, column: 19, scope: !3727)
!3767 = !DILocalVariable(name: "pdef_info", scope: !3727, file: !1, line: 816, type: !3750)
!3768 = !DILocation(line: 816, column: 19, scope: !3727)
!3769 = !DILocalVariable(name: "arm", scope: !3727, file: !1, line: 817, type: !245)
!3770 = !DILocation(line: 817, column: 13, scope: !3727)
!3771 = !DILocation(line: 817, column: 19, scope: !3727)
!3772 = !DILocation(line: 817, column: 26, scope: !3727)
!3773 = !DILocalVariable(name: "pchan", scope: !3727, file: !1, line: 818, type: !2808)
!3774 = !DILocation(line: 818, column: 16, scope: !3727)
!3775 = !DILocalVariable(name: "defnrToPC", scope: !3727, file: !1, line: 818, type: !3776)
!3776 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2808, size: 64)
!3777 = !DILocation(line: 818, column: 25, scope: !3727)
!3778 = !DILocalVariable(name: "defnrToPCIndex", scope: !3727, file: !1, line: 819, type: !1043)
!3779 = !DILocation(line: 819, column: 7, scope: !3727)
!3780 = !DILocalVariable(name: "dverts", scope: !3727, file: !1, line: 820, type: !3781)
!3781 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3782, size: 64)
!3782 = !DIDerivedType(tag: DW_TAG_typedef, name: "MDeformVert", file: !898, line: 63, baseType: !1387)
!3783 = !DILocation(line: 820, column: 15, scope: !3727)
!3784 = !DILocalVariable(name: "dg", scope: !3727, file: !1, line: 821, type: !3785)
!3785 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3786, size: 64)
!3786 = !DIDerivedType(tag: DW_TAG_typedef, name: "bDeformGroup", file: !57, line: 68, baseType: !3787)
!3787 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bDeformGroup", file: !57, line: 63, size: 704, elements: !3788)
!3788 = !{!3789, !3791, !3792, !3793, !3794}
!3789 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3787, file: !57, line: 64, baseType: !3790, size: 64)
!3790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3787, size: 64)
!3791 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3787, file: !57, line: 64, baseType: !3790, size: 64, offset: 64)
!3792 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3787, file: !57, line: 65, baseType: !300, size: 512, offset: 128)
!3793 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3787, file: !57, line: 67, baseType: !271, size: 8, offset: 640)
!3794 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3787, file: !57, line: 67, baseType: !1230, size: 56, offset: 648)
!3795 = !DILocation(line: 821, column: 16, scope: !3727)
!3796 = !DILocalVariable(name: "dualquats", scope: !3727, file: !1, line: 822, type: !3756)
!3797 = !DILocation(line: 822, column: 12, scope: !3727)
!3798 = !DILocalVariable(name: "obinv", scope: !3727, file: !1, line: 823, type: !419)
!3799 = !DILocation(line: 823, column: 8, scope: !3727)
!3800 = !DILocalVariable(name: "premat", scope: !3727, file: !1, line: 823, type: !419)
!3801 = !DILocation(line: 823, column: 21, scope: !3727)
!3802 = !DILocalVariable(name: "postmat", scope: !3727, file: !1, line: 823, type: !419)
!3803 = !DILocation(line: 823, column: 35, scope: !3727)
!3804 = !DILocalVariable(name: "use_envelope", scope: !3727, file: !1, line: 824, type: !1075)
!3805 = !DILocation(line: 824, column: 14, scope: !3727)
!3806 = !DILocation(line: 824, column: 29, scope: !3727)
!3807 = !DILocation(line: 824, column: 40, scope: !3727)
!3808 = !DILocalVariable(name: "use_quaternion", scope: !3727, file: !1, line: 825, type: !1075)
!3809 = !DILocation(line: 825, column: 14, scope: !3727)
!3810 = !DILocation(line: 825, column: 31, scope: !3727)
!3811 = !DILocation(line: 825, column: 42, scope: !3727)
!3812 = !DILocalVariable(name: "invert_vgroup", scope: !3727, file: !1, line: 826, type: !1075)
!3813 = !DILocation(line: 826, column: 14, scope: !3727)
!3814 = !DILocation(line: 826, column: 30, scope: !3727)
!3815 = !DILocation(line: 826, column: 41, scope: !3727)
!3816 = !DILocalVariable(name: "defbase_tot", scope: !3727, file: !1, line: 827, type: !141)
!3817 = !DILocation(line: 827, column: 6, scope: !3727)
!3818 = !DILocalVariable(name: "i", scope: !3727, file: !1, line: 828, type: !141)
!3819 = !DILocation(line: 828, column: 6, scope: !3727)
!3820 = !DILocalVariable(name: "target_totvert", scope: !3727, file: !1, line: 828, type: !141)
!3821 = !DILocation(line: 828, column: 9, scope: !3727)
!3822 = !DILocalVariable(name: "use_dverts", scope: !3727, file: !1, line: 829, type: !1130)
!3823 = !DILocation(line: 829, column: 7, scope: !3727)
!3824 = !DILocalVariable(name: "armature_def_nr", scope: !3727, file: !1, line: 830, type: !141)
!3825 = !DILocation(line: 830, column: 6, scope: !3727)
!3826 = !DILocalVariable(name: "totchan", scope: !3727, file: !1, line: 831, type: !141)
!3827 = !DILocation(line: 831, column: 6, scope: !3727)
!3828 = !DILocation(line: 833, column: 6, scope: !3829)
!3829 = distinct !DILexicalBlock(scope: !3727, file: !1, line: 833, column: 6)
!3830 = !DILocation(line: 833, column: 11, scope: !3829)
!3831 = !DILocation(line: 833, column: 6, scope: !3727)
!3832 = !DILocation(line: 833, column: 17, scope: !3829)
!3833 = !DILocation(line: 835, column: 15, scope: !3727)
!3834 = !DILocation(line: 835, column: 22, scope: !3727)
!3835 = !DILocation(line: 835, column: 30, scope: !3727)
!3836 = !DILocation(line: 835, column: 2, scope: !3727)
!3837 = !DILocation(line: 836, column: 13, scope: !3727)
!3838 = !DILocation(line: 836, column: 21, scope: !3727)
!3839 = !DILocation(line: 836, column: 29, scope: !3727)
!3840 = !DILocation(line: 836, column: 2, scope: !3727)
!3841 = !DILocation(line: 837, column: 14, scope: !3727)
!3842 = !DILocation(line: 837, column: 23, scope: !3727)
!3843 = !DILocation(line: 837, column: 30, scope: !3727)
!3844 = !DILocation(line: 837, column: 37, scope: !3727)
!3845 = !DILocation(line: 837, column: 2, scope: !3727)
!3846 = !DILocation(line: 838, column: 15, scope: !3727)
!3847 = !DILocation(line: 838, column: 23, scope: !3727)
!3848 = !DILocation(line: 838, column: 2, scope: !3727)
!3849 = !DILocation(line: 843, column: 27, scope: !3727)
!3850 = !DILocation(line: 843, column: 34, scope: !3727)
!3851 = !DILocation(line: 843, column: 40, scope: !3727)
!3852 = !DILocation(line: 843, column: 12, scope: !3727)
!3853 = !DILocation(line: 843, column: 10, scope: !3727)
!3854 = !DILocation(line: 845, column: 6, scope: !3855)
!3855 = distinct !DILexicalBlock(scope: !3727, file: !1, line: 845, column: 6)
!3856 = !DILocation(line: 845, column: 6, scope: !3727)
!3857 = !DILocation(line: 846, column: 15, scope: !3858)
!3858 = distinct !DILexicalBlock(scope: !3855, file: !1, line: 845, column: 22)
!3859 = !DILocation(line: 846, column: 46, scope: !3858)
!3860 = !DILocation(line: 846, column: 44, scope: !3858)
!3861 = !DILocation(line: 846, column: 13, scope: !3858)
!3862 = !DILocation(line: 847, column: 2, scope: !3858)
!3863 = !DILocation(line: 849, column: 20, scope: !3727)
!3864 = !DILocation(line: 849, column: 58, scope: !3727)
!3865 = !DILocation(line: 849, column: 56, scope: !3727)
!3866 = !DILocation(line: 849, column: 18, scope: !3727)
!3867 = !DILocation(line: 851, column: 10, scope: !3727)
!3868 = !DILocation(line: 852, column: 14, scope: !3727)
!3869 = !DILocation(line: 852, column: 12, scope: !3727)
!3870 = !DILocation(line: 853, column: 15, scope: !3871)
!3871 = distinct !DILexicalBlock(scope: !3727, file: !1, line: 853, column: 2)
!3872 = !DILocation(line: 853, column: 22, scope: !3871)
!3873 = !DILocation(line: 853, column: 28, scope: !3871)
!3874 = !DILocation(line: 853, column: 37, scope: !3871)
!3875 = !DILocation(line: 853, column: 13, scope: !3871)
!3876 = !DILocation(line: 853, column: 7, scope: !3871)
!3877 = !DILocation(line: 853, column: 44, scope: !3878)
!3878 = distinct !DILexicalBlock(scope: !3871, file: !1, line: 853, column: 2)
!3879 = !DILocation(line: 853, column: 2, scope: !3871)
!3880 = !DILocation(line: 854, column: 9, scope: !3881)
!3881 = distinct !DILexicalBlock(scope: !3882, file: !1, line: 854, column: 7)
!3882 = distinct !DILexicalBlock(scope: !3878, file: !1, line: 853, column: 85)
!3883 = !DILocation(line: 854, column: 16, scope: !3881)
!3884 = !DILocation(line: 854, column: 22, scope: !3881)
!3885 = !DILocation(line: 854, column: 27, scope: !3881)
!3886 = !DILocation(line: 854, column: 7, scope: !3882)
!3887 = !DILocation(line: 855, column: 8, scope: !3888)
!3888 = distinct !DILexicalBlock(scope: !3889, file: !1, line: 855, column: 8)
!3889 = distinct !DILexicalBlock(scope: !3881, file: !1, line: 854, column: 46)
!3890 = !DILocation(line: 855, column: 15, scope: !3888)
!3891 = !DILocation(line: 855, column: 21, scope: !3888)
!3892 = !DILocation(line: 855, column: 30, scope: !3888)
!3893 = !DILocation(line: 855, column: 8, scope: !3889)
!3894 = !DILocation(line: 856, column: 26, scope: !3888)
!3895 = !DILocation(line: 856, column: 33, scope: !3888)
!3896 = !DILocation(line: 856, column: 44, scope: !3888)
!3897 = !DILocation(line: 856, column: 5, scope: !3888)
!3898 = !DILocation(line: 858, column: 8, scope: !3899)
!3899 = distinct !DILexicalBlock(scope: !3889, file: !1, line: 858, column: 8)
!3900 = !DILocation(line: 858, column: 8, scope: !3889)
!3901 = !DILocation(line: 859, column: 29, scope: !3902)
!3902 = distinct !DILexicalBlock(scope: !3899, file: !1, line: 858, column: 24)
!3903 = !DILocation(line: 859, column: 46, scope: !3902)
!3904 = !DILocation(line: 859, column: 5, scope: !3902)
!3905 = !DILocation(line: 859, column: 16, scope: !3902)
!3906 = !DILocation(line: 859, column: 26, scope: !3902)
!3907 = !DILocation(line: 860, column: 19, scope: !3902)
!3908 = !DILocation(line: 860, column: 30, scope: !3902)
!3909 = !DILocation(line: 860, column: 41, scope: !3902)
!3910 = !DILocation(line: 860, column: 48, scope: !3902)
!3911 = !DILocation(line: 860, column: 54, scope: !3902)
!3912 = !DILocation(line: 860, column: 63, scope: !3902)
!3913 = !DILocation(line: 860, column: 70, scope: !3902)
!3914 = !DILocation(line: 860, column: 5, scope: !3902)
!3915 = !DILocation(line: 861, column: 4, scope: !3902)
!3916 = !DILocation(line: 862, column: 3, scope: !3889)
!3917 = !DILocation(line: 863, column: 2, scope: !3882)
!3918 = !DILocation(line: 853, column: 59, scope: !3878)
!3919 = !DILocation(line: 853, column: 66, scope: !3878)
!3920 = !DILocation(line: 853, column: 57, scope: !3878)
!3921 = !DILocation(line: 853, column: 81, scope: !3878)
!3922 = !DILocation(line: 853, column: 2, scope: !3878)
!3923 = distinct !{!3923, !3879, !3924}
!3924 = !DILocation(line: 863, column: 2, scope: !3871)
!3925 = !DILocation(line: 866, column: 40, scope: !3727)
!3926 = !DILocation(line: 866, column: 48, scope: !3727)
!3927 = !DILocation(line: 866, column: 20, scope: !3727)
!3928 = !DILocation(line: 866, column: 18, scope: !3727)
!3929 = !DILocation(line: 868, column: 6, scope: !3930)
!3930 = distinct !DILexicalBlock(scope: !3727, file: !1, line: 868, column: 6)
!3931 = !DILocation(line: 868, column: 6, scope: !3727)
!3932 = !DILocation(line: 869, column: 32, scope: !3933)
!3933 = distinct !DILexicalBlock(scope: !3930, file: !1, line: 868, column: 47)
!3934 = !DILocation(line: 869, column: 40, scope: !3933)
!3935 = !DILocation(line: 869, column: 17, scope: !3933)
!3936 = !DILocation(line: 869, column: 15, scope: !3933)
!3937 = !DILocation(line: 871, column: 7, scope: !3938)
!3938 = distinct !DILexicalBlock(scope: !3933, file: !1, line: 871, column: 7)
!3939 = !DILocation(line: 871, column: 15, scope: !3938)
!3940 = !DILocation(line: 871, column: 20, scope: !3938)
!3941 = !DILocation(line: 871, column: 7, scope: !3933)
!3942 = !DILocalVariable(name: "me", scope: !3943, file: !1, line: 872, type: !3944)
!3943 = distinct !DILexicalBlock(scope: !3938, file: !1, line: 871, column: 32)
!3944 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3945, size: 64)
!3945 = !DIDerivedType(tag: DW_TAG_typedef, name: "Mesh", file: !3946, line: 133, baseType: !3947)
!3946 = !DIFile(filename: "blender/source/blender/makesdna/DNA_mesh_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3947 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Mesh", file: !3946, line: 58, size: 11008, elements: !3948)
!3948 = !{!3949, !3950, !3951, !3952, !3953, !3956, !3957, !3963, !3964, !3974, !3975, !3981, !3989, !3990, !3991, !4004, !4005, !4006, !4007, !4015, !4017, !4020, !4021, !4022, !4023, !4024, !4025, !4026, !4027, !4028, !4029, !4030, !4031, !4032, !4033, !4034, !4035, !4036, !4037, !4038, !4039, !4040, !4041, !4042, !4043, !4044, !4045, !4046, !4047}
!3949 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3947, file: !3946, line: 59, baseType: !250, size: 960)
!3950 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !3947, file: !3946, line: 60, baseType: !321, size: 64, offset: 960)
!3951 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !3947, file: !3946, line: 62, baseType: !595, size: 64, offset: 1024)
!3952 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !3947, file: !3946, line: 64, baseType: !591, size: 64, offset: 1088)
!3953 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !3947, file: !3946, line: 65, baseType: !3954, size: 64, offset: 1152)
!3954 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3955, size: 64)
!3955 = !DICompositeType(tag: DW_TAG_structure_type, name: "Key", file: !680, line: 45, flags: DIFlagFwdDecl)
!3956 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !3947, file: !3946, line: 66, baseType: !677, size: 64, offset: 1216)
!3957 = !DIDerivedType(tag: DW_TAG_member, name: "mselect", scope: !3947, file: !3946, line: 67, baseType: !3958, size: 64, offset: 1280)
!3958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3959, size: 64)
!3959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MSelect", file: !898, line: 154, size: 64, elements: !3960)
!3960 = !{!3961, !3962}
!3961 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !3959, file: !898, line: 155, baseType: !141, size: 32)
!3962 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !3959, file: !898, line: 156, baseType: !141, size: 32, offset: 32)
!3963 = !DIDerivedType(tag: DW_TAG_member, name: "mpoly", scope: !3947, file: !3946, line: 71, baseType: !956, size: 64, offset: 1344)
!3964 = !DIDerivedType(tag: DW_TAG_member, name: "mtpoly", scope: !3947, file: !3946, line: 72, baseType: !3965, size: 64, offset: 1408)
!3965 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3966, size: 64)
!3966 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTexPoly", file: !898, line: 93, size: 128, elements: !3967)
!3967 = !{!3968, !3969, !3970, !3971, !3972, !3973}
!3968 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !3966, file: !898, line: 94, baseType: !1158, size: 64)
!3969 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3966, file: !898, line: 95, baseType: !271, size: 8, offset: 64)
!3970 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !3966, file: !898, line: 95, baseType: !271, size: 8, offset: 72)
!3971 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3966, file: !898, line: 96, baseType: !284, size: 16, offset: 80)
!3972 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !3966, file: !898, line: 96, baseType: !284, size: 16, offset: 96)
!3973 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3966, file: !898, line: 96, baseType: !284, size: 16, offset: 112)
!3974 = !DIDerivedType(tag: DW_TAG_member, name: "mloop", scope: !3947, file: !3946, line: 73, baseType: !947, size: 64, offset: 1472)
!3975 = !DIDerivedType(tag: DW_TAG_member, name: "mloopuv", scope: !3947, file: !3946, line: 74, baseType: !3976, size: 64, offset: 1536)
!3976 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3977, size: 64)
!3977 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoopUV", file: !898, line: 109, size: 96, elements: !3978)
!3978 = !{!3979, !3980}
!3979 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !3977, file: !898, line: 110, baseType: !1308, size: 64)
!3980 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3977, file: !898, line: 111, baseType: !141, size: 32, offset: 64)
!3981 = !DIDerivedType(tag: DW_TAG_member, name: "mloopcol", scope: !3947, file: !3946, line: 75, baseType: !3982, size: 64, offset: 1600)
!3982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3983, size: 64)
!3983 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoopCol", file: !898, line: 129, size: 32, elements: !3984)
!3984 = !{!3985, !3986, !3987, !3988}
!3985 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !3983, file: !898, line: 130, baseType: !271, size: 8)
!3986 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !3983, file: !898, line: 130, baseType: !271, size: 8, offset: 8)
!3987 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !3983, file: !898, line: 130, baseType: !271, size: 8, offset: 16)
!3988 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !3983, file: !898, line: 130, baseType: !271, size: 8, offset: 24)
!3989 = !DIDerivedType(tag: DW_TAG_member, name: "mface", scope: !3947, file: !3946, line: 80, baseType: !921, size: 64, offset: 1664)
!3990 = !DIDerivedType(tag: DW_TAG_member, name: "mtface", scope: !3947, file: !3946, line: 81, baseType: !1150, size: 64, offset: 1728)
!3991 = !DIDerivedType(tag: DW_TAG_member, name: "tface", scope: !3947, file: !3946, line: 82, baseType: !3992, size: 64, offset: 1792)
!3992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3993, size: 64)
!3993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "TFace", file: !3946, line: 136, size: 512, elements: !3994)
!3994 = !{!3995, !3996, !3997, !3999, !4000, !4001, !4002, !4003}
!3995 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !3993, file: !3946, line: 137, baseType: !255, size: 64)
!3996 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !3993, file: !3946, line: 138, baseType: !1154, size: 256, offset: 64)
!3997 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !3993, file: !3946, line: 139, baseType: !3998, size: 128, offset: 320)
!3998 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 128, elements: !695)
!3999 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3993, file: !3946, line: 140, baseType: !271, size: 8, offset: 448)
!4000 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !3993, file: !3946, line: 140, baseType: !271, size: 8, offset: 456)
!4001 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !3993, file: !3946, line: 141, baseType: !284, size: 16, offset: 464)
!4002 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !3993, file: !3946, line: 141, baseType: !284, size: 16, offset: 480)
!4003 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !3993, file: !3946, line: 141, baseType: !284, size: 16, offset: 496)
!4004 = !DIDerivedType(tag: DW_TAG_member, name: "mvert", scope: !3947, file: !3946, line: 83, baseType: !896, size: 64, offset: 1856)
!4005 = !DIDerivedType(tag: DW_TAG_member, name: "medge", scope: !3947, file: !3946, line: 84, baseType: !909, size: 64, offset: 1920)
!4006 = !DIDerivedType(tag: DW_TAG_member, name: "dvert", scope: !3947, file: !3946, line: 85, baseType: !1386, size: 64, offset: 1984)
!4007 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !3947, file: !3946, line: 89, baseType: !4008, size: 64, offset: 2048)
!4008 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4009, size: 64)
!4009 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MCol", file: !898, line: 74, size: 32, elements: !4010)
!4010 = !{!4011, !4012, !4013, !4014}
!4011 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !4009, file: !898, line: 75, baseType: !271, size: 8)
!4012 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !4009, file: !898, line: 75, baseType: !271, size: 8, offset: 8)
!4013 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !4009, file: !898, line: 75, baseType: !271, size: 8, offset: 16)
!4014 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !4009, file: !898, line: 75, baseType: !271, size: 8, offset: 24)
!4015 = !DIDerivedType(tag: DW_TAG_member, name: "texcomesh", scope: !3947, file: !3946, line: 90, baseType: !4016, size: 64, offset: 2112)
!4016 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3947, size: 64)
!4017 = !DIDerivedType(tag: DW_TAG_member, name: "edit_btmesh", scope: !3947, file: !3946, line: 93, baseType: !4018, size: 64, offset: 2176)
!4018 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4019, size: 64)
!4019 = !DICompositeType(tag: DW_TAG_structure_type, name: "BMEditMesh", file: !3946, line: 93, flags: DIFlagFwdDecl)
!4020 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !3947, file: !3946, line: 95, baseType: !811, size: 1600, offset: 2240)
!4021 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !3947, file: !3946, line: 95, baseType: !811, size: 1600, offset: 3840)
!4022 = !DIDerivedType(tag: DW_TAG_member, name: "fdata", scope: !3947, file: !3946, line: 95, baseType: !811, size: 1600, offset: 5440)
!4023 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !3947, file: !3946, line: 98, baseType: !811, size: 1600, offset: 7040)
!4024 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !3947, file: !3946, line: 98, baseType: !811, size: 1600, offset: 8640)
!4025 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !3947, file: !3946, line: 101, baseType: !141, size: 32, offset: 10240)
!4026 = !DIDerivedType(tag: DW_TAG_member, name: "totedge", scope: !3947, file: !3946, line: 101, baseType: !141, size: 32, offset: 10272)
!4027 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !3947, file: !3946, line: 101, baseType: !141, size: 32, offset: 10304)
!4028 = !DIDerivedType(tag: DW_TAG_member, name: "totselect", scope: !3947, file: !3946, line: 101, baseType: !141, size: 32, offset: 10336)
!4029 = !DIDerivedType(tag: DW_TAG_member, name: "totpoly", scope: !3947, file: !3946, line: 104, baseType: !141, size: 32, offset: 10368)
!4030 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !3947, file: !3946, line: 104, baseType: !141, size: 32, offset: 10400)
!4031 = !DIDerivedType(tag: DW_TAG_member, name: "act_face", scope: !3947, file: !3946, line: 111, baseType: !141, size: 32, offset: 10432)
!4032 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !3947, file: !3946, line: 114, baseType: !408, size: 96, offset: 10464)
!4033 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3947, file: !3946, line: 115, baseType: !408, size: 96, offset: 10560)
!4034 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !3947, file: !3946, line: 116, baseType: !408, size: 96, offset: 10656)
!4035 = !DIDerivedType(tag: DW_TAG_member, name: "drawflag", scope: !3947, file: !3946, line: 118, baseType: !141, size: 32, offset: 10752)
!4036 = !DIDerivedType(tag: DW_TAG_member, name: "texflag", scope: !3947, file: !3946, line: 119, baseType: !284, size: 16, offset: 10784)
!4037 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !3947, file: !3946, line: 119, baseType: !284, size: 16, offset: 10800)
!4038 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !3947, file: !3946, line: 120, baseType: !366, size: 32, offset: 10816)
!4039 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !3947, file: !3946, line: 121, baseType: !141, size: 32, offset: 10848)
!4040 = !DIDerivedType(tag: DW_TAG_member, name: "cd_flag", scope: !3947, file: !3946, line: 124, baseType: !271, size: 8, offset: 10880)
!4041 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !3947, file: !3946, line: 124, baseType: !271, size: 8, offset: 10888)
!4042 = !DIDerivedType(tag: DW_TAG_member, name: "subdiv", scope: !3947, file: !3946, line: 126, baseType: !271, size: 8, offset: 10896)
!4043 = !DIDerivedType(tag: DW_TAG_member, name: "subdivr", scope: !3947, file: !3946, line: 126, baseType: !271, size: 8, offset: 10904)
!4044 = !DIDerivedType(tag: DW_TAG_member, name: "subsurftype", scope: !3947, file: !3946, line: 127, baseType: !271, size: 8, offset: 10912)
!4045 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !3947, file: !3946, line: 128, baseType: !271, size: 8, offset: 10920)
!4046 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !3947, file: !3946, line: 130, baseType: !284, size: 16, offset: 10928)
!4047 = !DIDerivedType(tag: DW_TAG_member, name: "mr", scope: !3947, file: !3946, line: 132, baseType: !4048, size: 64, offset: 10944)
!4048 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4049, size: 64)
!4049 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Multires", file: !898, line: 233, size: 3584, elements: !4050)
!4050 = !{!4051, !4052, !4055, !4056, !4057, !4058, !4059, !4060, !4061, !4062, !4063, !4064, !4065, !4067}
!4051 = !DIDerivedType(tag: DW_TAG_member, name: "levels", scope: !4049, file: !898, line: 234, baseType: !310, size: 128)
!4052 = !DIDerivedType(tag: DW_TAG_member, name: "verts", scope: !4049, file: !898, line: 235, baseType: !4053, size: 64, offset: 128)
!4053 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4054, size: 64)
!4054 = !DIDerivedType(tag: DW_TAG_typedef, name: "MVert", file: !898, line: 69, baseType: !897)
!4055 = !DIDerivedType(tag: DW_TAG_member, name: "level_count", scope: !4049, file: !898, line: 237, baseType: !1130, size: 8, offset: 192)
!4056 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !4049, file: !898, line: 237, baseType: !1130, size: 8, offset: 200)
!4057 = !DIDerivedType(tag: DW_TAG_member, name: "newlvl", scope: !4049, file: !898, line: 237, baseType: !1130, size: 8, offset: 208)
!4058 = !DIDerivedType(tag: DW_TAG_member, name: "edgelvl", scope: !4049, file: !898, line: 237, baseType: !1130, size: 8, offset: 216)
!4059 = !DIDerivedType(tag: DW_TAG_member, name: "pinlvl", scope: !4049, file: !898, line: 237, baseType: !1130, size: 8, offset: 224)
!4060 = !DIDerivedType(tag: DW_TAG_member, name: "renderlvl", scope: !4049, file: !898, line: 237, baseType: !1130, size: 8, offset: 232)
!4061 = !DIDerivedType(tag: DW_TAG_member, name: "use_col", scope: !4049, file: !898, line: 238, baseType: !1130, size: 8, offset: 240)
!4062 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4049, file: !898, line: 238, baseType: !1130, size: 8, offset: 248)
!4063 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !4049, file: !898, line: 241, baseType: !810, size: 1600, offset: 256)
!4064 = !DIDerivedType(tag: DW_TAG_member, name: "fdata", scope: !4049, file: !898, line: 242, baseType: !810, size: 1600, offset: 1856)
!4065 = !DIDerivedType(tag: DW_TAG_member, name: "edge_flags", scope: !4049, file: !898, line: 243, baseType: !4066, size: 64, offset: 3456)
!4066 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 64)
!4067 = !DIDerivedType(tag: DW_TAG_member, name: "edge_creases", scope: !4049, file: !898, line: 244, baseType: !682, size: 64, offset: 3520)
!4068 = !DILocation(line: 872, column: 10, scope: !3943)
!4069 = !DILocation(line: 872, column: 15, scope: !3943)
!4070 = !DILocation(line: 872, column: 23, scope: !3943)
!4071 = !DILocation(line: 873, column: 13, scope: !3943)
!4072 = !DILocation(line: 873, column: 17, scope: !3943)
!4073 = !DILocation(line: 873, column: 11, scope: !3943)
!4074 = !DILocation(line: 874, column: 8, scope: !4075)
!4075 = distinct !DILexicalBlock(scope: !3943, file: !1, line: 874, column: 8)
!4076 = !DILocation(line: 874, column: 8, scope: !3943)
!4077 = !DILocation(line: 875, column: 22, scope: !4075)
!4078 = !DILocation(line: 875, column: 26, scope: !4075)
!4079 = !DILocation(line: 875, column: 20, scope: !4075)
!4080 = !DILocation(line: 875, column: 5, scope: !4075)
!4081 = !DILocation(line: 876, column: 3, scope: !3943)
!4082 = !DILocalVariable(name: "lt", scope: !4083, file: !1, line: 878, type: !4084)
!4083 = distinct !DILexicalBlock(scope: !3938, file: !1, line: 877, column: 8)
!4084 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4085, size: 64)
!4085 = !DIDerivedType(tag: DW_TAG_typedef, name: "Lattice", file: !4086, line: 72, baseType: !4087)
!4086 = !DIFile(filename: "blender/source/blender/makesdna/DNA_lattice_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4087 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Lattice", file: !4086, line: 52, size: 2240, elements: !4088)
!4088 = !{!4089, !4090, !4091, !4092, !4093, !4094, !4095, !4096, !4097, !4098, !4099, !4100, !4101, !4102, !4103, !4104, !4105, !4106, !4107, !4108, !4109, !4110, !4121, !4122, !4123, !4124, !4125}
!4089 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4087, file: !4086, line: 53, baseType: !250, size: 960)
!4090 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !4087, file: !4086, line: 54, baseType: !321, size: 64, offset: 960)
!4091 = !DIDerivedType(tag: DW_TAG_member, name: "pntsu", scope: !4087, file: !4086, line: 56, baseType: !284, size: 16, offset: 1024)
!4092 = !DIDerivedType(tag: DW_TAG_member, name: "pntsv", scope: !4087, file: !4086, line: 56, baseType: !284, size: 16, offset: 1040)
!4093 = !DIDerivedType(tag: DW_TAG_member, name: "pntsw", scope: !4087, file: !4086, line: 56, baseType: !284, size: 16, offset: 1056)
!4094 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4087, file: !4086, line: 56, baseType: !284, size: 16, offset: 1072)
!4095 = !DIDerivedType(tag: DW_TAG_member, name: "opntsu", scope: !4087, file: !4086, line: 57, baseType: !284, size: 16, offset: 1088)
!4096 = !DIDerivedType(tag: DW_TAG_member, name: "opntsv", scope: !4087, file: !4086, line: 57, baseType: !284, size: 16, offset: 1104)
!4097 = !DIDerivedType(tag: DW_TAG_member, name: "opntsw", scope: !4087, file: !4086, line: 57, baseType: !284, size: 16, offset: 1120)
!4098 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !4087, file: !4086, line: 57, baseType: !284, size: 16, offset: 1136)
!4099 = !DIDerivedType(tag: DW_TAG_member, name: "typeu", scope: !4087, file: !4086, line: 58, baseType: !271, size: 8, offset: 1152)
!4100 = !DIDerivedType(tag: DW_TAG_member, name: "typev", scope: !4087, file: !4086, line: 58, baseType: !271, size: 8, offset: 1160)
!4101 = !DIDerivedType(tag: DW_TAG_member, name: "typew", scope: !4087, file: !4086, line: 58, baseType: !271, size: 8, offset: 1168)
!4102 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !4087, file: !4086, line: 58, baseType: !271, size: 8, offset: 1176)
!4103 = !DIDerivedType(tag: DW_TAG_member, name: "actbp", scope: !4087, file: !4086, line: 59, baseType: !141, size: 32, offset: 1184)
!4104 = !DIDerivedType(tag: DW_TAG_member, name: "fu", scope: !4087, file: !4086, line: 61, baseType: !366, size: 32, offset: 1216)
!4105 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !4087, file: !4086, line: 61, baseType: !366, size: 32, offset: 1248)
!4106 = !DIDerivedType(tag: DW_TAG_member, name: "fw", scope: !4087, file: !4086, line: 61, baseType: !366, size: 32, offset: 1280)
!4107 = !DIDerivedType(tag: DW_TAG_member, name: "du", scope: !4087, file: !4086, line: 61, baseType: !366, size: 32, offset: 1312)
!4108 = !DIDerivedType(tag: DW_TAG_member, name: "dv", scope: !4087, file: !4086, line: 61, baseType: !366, size: 32, offset: 1344)
!4109 = !DIDerivedType(tag: DW_TAG_member, name: "dw", scope: !4087, file: !4086, line: 61, baseType: !366, size: 32, offset: 1376)
!4110 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !4087, file: !4086, line: 63, baseType: !4111, size: 64, offset: 1408)
!4111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4112, size: 64)
!4112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BPoint", file: !680, line: 136, size: 288, elements: !4113)
!4113 = !{!4114, !4115, !4116, !4117, !4118, !4119, !4120}
!4114 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !4112, file: !680, line: 137, baseType: !694, size: 128)
!4115 = !DIDerivedType(tag: DW_TAG_member, name: "alfa", scope: !4112, file: !680, line: 138, baseType: !366, size: 32, offset: 128)
!4116 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !4112, file: !680, line: 138, baseType: !366, size: 32, offset: 160)
!4117 = !DIDerivedType(tag: DW_TAG_member, name: "f1", scope: !4112, file: !680, line: 139, baseType: !284, size: 16, offset: 192)
!4118 = !DIDerivedType(tag: DW_TAG_member, name: "hide", scope: !4112, file: !680, line: 139, baseType: !284, size: 16, offset: 208)
!4119 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !4112, file: !680, line: 140, baseType: !366, size: 32, offset: 224)
!4120 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4112, file: !680, line: 140, baseType: !366, size: 32, offset: 256)
!4121 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !4087, file: !4086, line: 65, baseType: !591, size: 64, offset: 1472)
!4122 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !4087, file: !4086, line: 66, baseType: !3954, size: 64, offset: 1536)
!4123 = !DIDerivedType(tag: DW_TAG_member, name: "dvert", scope: !4087, file: !4086, line: 68, baseType: !1386, size: 64, offset: 1600)
!4124 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup", scope: !4087, file: !4086, line: 69, baseType: !300, size: 512, offset: 1664)
!4125 = !DIDerivedType(tag: DW_TAG_member, name: "editlatt", scope: !4087, file: !4086, line: 71, baseType: !4126, size: 64, offset: 2176)
!4126 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4127, size: 64)
!4127 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EditLatt", file: !4086, line: 44, size: 128, elements: !4128)
!4128 = !{!4129, !4131, !4132}
!4129 = !DIDerivedType(tag: DW_TAG_member, name: "latt", scope: !4127, file: !4086, line: 45, baseType: !4130, size: 64)
!4130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4087, size: 64)
!4131 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !4127, file: !4086, line: 47, baseType: !141, size: 32, offset: 64)
!4132 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !4127, file: !4086, line: 49, baseType: !4133, size: 32, offset: 96)
!4133 = !DICompositeType(tag: DW_TAG_array_type, baseType: !271, size: 32, elements: !695)
!4134 = !DILocation(line: 878, column: 13, scope: !4083)
!4135 = !DILocation(line: 878, column: 18, scope: !4083)
!4136 = !DILocation(line: 878, column: 26, scope: !4083)
!4137 = !DILocation(line: 879, column: 13, scope: !4083)
!4138 = !DILocation(line: 879, column: 17, scope: !4083)
!4139 = !DILocation(line: 879, column: 11, scope: !4083)
!4140 = !DILocation(line: 880, column: 8, scope: !4141)
!4141 = distinct !DILexicalBlock(scope: !4083, file: !1, line: 880, column: 8)
!4142 = !DILocation(line: 880, column: 8, scope: !4083)
!4143 = !DILocation(line: 881, column: 22, scope: !4141)
!4144 = !DILocation(line: 881, column: 26, scope: !4141)
!4145 = !DILocation(line: 881, column: 34, scope: !4141)
!4146 = !DILocation(line: 881, column: 38, scope: !4141)
!4147 = !DILocation(line: 881, column: 32, scope: !4141)
!4148 = !DILocation(line: 881, column: 46, scope: !4141)
!4149 = !DILocation(line: 881, column: 50, scope: !4141)
!4150 = !DILocation(line: 881, column: 44, scope: !4141)
!4151 = !DILocation(line: 881, column: 20, scope: !4141)
!4152 = !DILocation(line: 881, column: 5, scope: !4141)
!4153 = !DILocation(line: 883, column: 2, scope: !3933)
!4154 = !DILocation(line: 886, column: 6, scope: !4155)
!4155 = distinct !DILexicalBlock(scope: !3727, file: !1, line: 886, column: 6)
!4156 = !DILocation(line: 886, column: 17, scope: !4155)
!4157 = !DILocation(line: 886, column: 6, scope: !3727)
!4158 = !DILocation(line: 887, column: 7, scope: !4159)
!4159 = distinct !DILexicalBlock(scope: !4160, file: !1, line: 887, column: 7)
!4160 = distinct !DILexicalBlock(scope: !4155, file: !1, line: 886, column: 35)
!4161 = !DILocation(line: 887, column: 7, scope: !4160)
!4162 = !DILocation(line: 889, column: 8, scope: !4163)
!4163 = distinct !DILexicalBlock(scope: !4164, file: !1, line: 889, column: 8)
!4164 = distinct !DILexicalBlock(scope: !4159, file: !1, line: 887, column: 48)
!4165 = !DILocation(line: 889, column: 8, scope: !4164)
!4166 = !DILocation(line: 890, column: 19, scope: !4167)
!4167 = distinct !DILexicalBlock(scope: !4163, file: !1, line: 889, column: 12)
!4168 = !DILocation(line: 890, column: 23, scope: !4167)
!4169 = !DILocation(line: 890, column: 40, scope: !4167)
!4170 = !DILocation(line: 890, column: 60, scope: !4167)
!4171 = !DILocation(line: 890, column: 18, scope: !4167)
!4172 = !DILocation(line: 890, column: 16, scope: !4167)
!4173 = !DILocation(line: 891, column: 4, scope: !4167)
!4174 = !DILocation(line: 892, column: 13, scope: !4175)
!4175 = distinct !DILexicalBlock(scope: !4163, file: !1, line: 892, column: 13)
!4176 = !DILocation(line: 892, column: 13, scope: !4163)
!4177 = !DILocation(line: 893, column: 16, scope: !4178)
!4178 = distinct !DILexicalBlock(scope: !4175, file: !1, line: 892, column: 21)
!4179 = !DILocation(line: 894, column: 4, scope: !4178)
!4180 = !DILocation(line: 896, column: 8, scope: !4181)
!4181 = distinct !DILexicalBlock(scope: !4164, file: !1, line: 896, column: 8)
!4182 = !DILocation(line: 896, column: 8, scope: !4164)
!4183 = !DILocation(line: 897, column: 17, scope: !4184)
!4184 = distinct !DILexicalBlock(scope: !4181, file: !1, line: 896, column: 20)
!4185 = !DILocation(line: 897, column: 50, scope: !4184)
!4186 = !DILocation(line: 897, column: 48, scope: !4184)
!4187 = !DILocation(line: 897, column: 15, scope: !4184)
!4188 = !DILocation(line: 898, column: 22, scope: !4184)
!4189 = !DILocation(line: 898, column: 60, scope: !4184)
!4190 = !DILocation(line: 898, column: 58, scope: !4184)
!4191 = !DILocation(line: 898, column: 20, scope: !4184)
!4192 = !DILocation(line: 899, column: 12, scope: !4193)
!4193 = distinct !DILexicalBlock(scope: !4184, file: !1, line: 899, column: 5)
!4194 = !DILocation(line: 899, column: 22, scope: !4193)
!4195 = !DILocation(line: 899, column: 30, scope: !4193)
!4196 = !DILocation(line: 899, column: 38, scope: !4193)
!4197 = !DILocation(line: 899, column: 20, scope: !4193)
!4198 = !DILocation(line: 899, column: 10, scope: !4193)
!4199 = !DILocation(line: 899, column: 45, scope: !4200)
!4200 = distinct !DILexicalBlock(scope: !4193, file: !1, line: 899, column: 5)
!4201 = !DILocation(line: 899, column: 5, scope: !4193)
!4202 = !DILocation(line: 900, column: 48, scope: !4203)
!4203 = distinct !DILexicalBlock(scope: !4200, file: !1, line: 899, column: 69)
!4204 = !DILocation(line: 900, column: 55, scope: !4203)
!4205 = !DILocation(line: 900, column: 61, scope: !4203)
!4206 = !DILocation(line: 900, column: 65, scope: !4203)
!4207 = !DILocation(line: 900, column: 21, scope: !4203)
!4208 = !DILocation(line: 900, column: 6, scope: !4203)
!4209 = !DILocation(line: 900, column: 16, scope: !4203)
!4210 = !DILocation(line: 900, column: 19, scope: !4203)
!4211 = !DILocation(line: 902, column: 10, scope: !4212)
!4212 = distinct !DILexicalBlock(scope: !4203, file: !1, line: 902, column: 10)
!4213 = !DILocation(line: 902, column: 20, scope: !4212)
!4214 = !DILocation(line: 902, column: 10, scope: !4203)
!4215 = !DILocation(line: 903, column: 11, scope: !4216)
!4216 = distinct !DILexicalBlock(scope: !4217, file: !1, line: 903, column: 11)
!4217 = distinct !DILexicalBlock(scope: !4212, file: !1, line: 902, column: 24)
!4218 = !DILocation(line: 903, column: 21, scope: !4216)
!4219 = !DILocation(line: 903, column: 25, scope: !4216)
!4220 = !DILocation(line: 903, column: 31, scope: !4216)
!4221 = !DILocation(line: 903, column: 36, scope: !4216)
!4222 = !DILocation(line: 903, column: 11, scope: !4217)
!4223 = !DILocation(line: 904, column: 8, scope: !4224)
!4224 = distinct !DILexicalBlock(scope: !4216, file: !1, line: 903, column: 54)
!4225 = !DILocation(line: 904, column: 18, scope: !4224)
!4226 = !DILocation(line: 904, column: 21, scope: !4224)
!4227 = !DILocation(line: 905, column: 7, scope: !4224)
!4228 = !DILocation(line: 907, column: 43, scope: !4229)
!4229 = distinct !DILexicalBlock(scope: !4216, file: !1, line: 906, column: 12)
!4230 = !DILocation(line: 907, column: 50, scope: !4229)
!4231 = !DILocation(line: 907, column: 56, scope: !4229)
!4232 = !DILocation(line: 907, column: 66, scope: !4229)
!4233 = !DILocation(line: 907, column: 76, scope: !4229)
!4234 = !DILocation(line: 907, column: 28, scope: !4229)
!4235 = !DILocation(line: 907, column: 8, scope: !4229)
!4236 = !DILocation(line: 907, column: 23, scope: !4229)
!4237 = !DILocation(line: 907, column: 26, scope: !4229)
!4238 = !DILocation(line: 909, column: 6, scope: !4217)
!4239 = !DILocation(line: 910, column: 5, scope: !4203)
!4240 = !DILocation(line: 899, column: 50, scope: !4200)
!4241 = !DILocation(line: 899, column: 59, scope: !4200)
!4242 = !DILocation(line: 899, column: 63, scope: !4200)
!4243 = !DILocation(line: 899, column: 57, scope: !4200)
!4244 = !DILocation(line: 899, column: 5, scope: !4200)
!4245 = distinct !{!4245, !4201, !4246}
!4246 = !DILocation(line: 910, column: 5, scope: !4193)
!4247 = !DILocation(line: 911, column: 4, scope: !4184)
!4248 = !DILocation(line: 912, column: 3, scope: !4164)
!4249 = !DILocation(line: 913, column: 2, scope: !4160)
!4250 = !DILocation(line: 915, column: 9, scope: !4251)
!4251 = distinct !DILexicalBlock(scope: !3727, file: !1, line: 915, column: 2)
!4252 = !DILocation(line: 915, column: 7, scope: !4251)
!4253 = !DILocation(line: 915, column: 14, scope: !4254)
!4254 = distinct !DILexicalBlock(scope: !4251, file: !1, line: 915, column: 2)
!4255 = !DILocation(line: 915, column: 18, scope: !4254)
!4256 = !DILocation(line: 915, column: 16, scope: !4254)
!4257 = !DILocation(line: 915, column: 2, scope: !4251)
!4258 = !DILocalVariable(name: "dvert", scope: !4259, file: !1, line: 916, type: !3781)
!4259 = distinct !DILexicalBlock(scope: !4254, file: !1, line: 915, column: 33)
!4260 = !DILocation(line: 916, column: 16, scope: !4259)
!4261 = !DILocalVariable(name: "sumdq", scope: !4259, file: !1, line: 917, type: !3757)
!4262 = !DILocation(line: 917, column: 12, scope: !4259)
!4263 = !DILocalVariable(name: "dq", scope: !4259, file: !1, line: 917, type: !3756)
!4264 = !DILocation(line: 917, column: 20, scope: !4259)
!4265 = !DILocalVariable(name: "co", scope: !4259, file: !1, line: 918, type: !1099)
!4266 = !DILocation(line: 918, column: 10, scope: !4259)
!4267 = !DILocalVariable(name: "dco", scope: !4259, file: !1, line: 918, type: !408)
!4268 = !DILocation(line: 918, column: 14, scope: !4259)
!4269 = !DILocalVariable(name: "sumvec", scope: !4259, file: !1, line: 919, type: !408)
!4270 = !DILocation(line: 919, column: 9, scope: !4259)
!4271 = !DILocalVariable(name: "summat", scope: !4259, file: !1, line: 919, type: !413)
!4272 = !DILocation(line: 919, column: 20, scope: !4259)
!4273 = !DILocalVariable(name: "vec", scope: !4259, file: !1, line: 920, type: !1099)
!4274 = !DILocation(line: 920, column: 10, scope: !4259)
!4275 = !DILocalVariable(name: "smat", scope: !4259, file: !1, line: 920, type: !1108)
!4276 = !DILocation(line: 920, column: 24, scope: !4259)
!4277 = !DILocalVariable(name: "contrib", scope: !4259, file: !1, line: 921, type: !366)
!4278 = !DILocation(line: 921, column: 9, scope: !4259)
!4279 = !DILocalVariable(name: "armature_weight", scope: !4259, file: !1, line: 922, type: !366)
!4280 = !DILocation(line: 922, column: 9, scope: !4259)
!4281 = !DILocalVariable(name: "prevco_weight", scope: !4259, file: !1, line: 923, type: !366)
!4282 = !DILocation(line: 923, column: 9, scope: !4259)
!4283 = !DILocation(line: 925, column: 7, scope: !4284)
!4284 = distinct !DILexicalBlock(scope: !4259, file: !1, line: 925, column: 7)
!4285 = !DILocation(line: 925, column: 7, scope: !4259)
!4286 = !DILocation(line: 926, column: 4, scope: !4287)
!4287 = distinct !DILexicalBlock(scope: !4284, file: !1, line: 925, column: 23)
!4288 = !DILocation(line: 927, column: 7, scope: !4287)
!4289 = !DILocation(line: 928, column: 3, scope: !4287)
!4290 = !DILocation(line: 930, column: 28, scope: !4291)
!4291 = distinct !DILexicalBlock(scope: !4284, file: !1, line: 929, column: 8)
!4292 = !DILocation(line: 930, column: 38, scope: !4291)
!4293 = !DILocation(line: 930, column: 16, scope: !4291)
!4294 = !DILocation(line: 930, column: 26, scope: !4291)
!4295 = !DILocation(line: 930, column: 4, scope: !4291)
!4296 = !DILocation(line: 930, column: 14, scope: !4291)
!4297 = !DILocation(line: 931, column: 10, scope: !4291)
!4298 = !DILocation(line: 931, column: 8, scope: !4291)
!4299 = !DILocation(line: 933, column: 8, scope: !4300)
!4300 = distinct !DILexicalBlock(scope: !4291, file: !1, line: 933, column: 8)
!4301 = !DILocation(line: 933, column: 8, scope: !4291)
!4302 = !DILocation(line: 934, column: 13, scope: !4303)
!4303 = distinct !DILexicalBlock(scope: !4300, file: !1, line: 933, column: 17)
!4304 = !DILocation(line: 934, column: 5, scope: !4303)
!4305 = !DILocation(line: 935, column: 12, scope: !4303)
!4306 = !DILocation(line: 935, column: 10, scope: !4303)
!4307 = !DILocation(line: 936, column: 4, scope: !4303)
!4308 = !DILocation(line: 939, column: 7, scope: !4309)
!4309 = distinct !DILexicalBlock(scope: !4259, file: !1, line: 939, column: 7)
!4310 = !DILocation(line: 939, column: 18, scope: !4309)
!4311 = !DILocation(line: 939, column: 21, scope: !4309)
!4312 = !DILocation(line: 939, column: 37, scope: !4309)
!4313 = !DILocation(line: 939, column: 7, scope: !4259)
!4314 = !DILocation(line: 940, column: 8, scope: !4315)
!4315 = distinct !DILexicalBlock(scope: !4316, file: !1, line: 940, column: 8)
!4316 = distinct !DILexicalBlock(scope: !4309, file: !1, line: 939, column: 44)
!4317 = !DILocation(line: 940, column: 8, scope: !4316)
!4318 = !DILocation(line: 941, column: 13, scope: !4315)
!4319 = !DILocation(line: 941, column: 17, scope: !4315)
!4320 = !DILocation(line: 941, column: 29, scope: !4315)
!4321 = !DILocation(line: 941, column: 33, scope: !4315)
!4322 = !DILocation(line: 941, column: 11, scope: !4315)
!4323 = !DILocation(line: 941, column: 5, scope: !4315)
!4324 = !DILocation(line: 942, column: 13, scope: !4325)
!4325 = distinct !DILexicalBlock(scope: !4315, file: !1, line: 942, column: 13)
!4326 = !DILocation(line: 942, column: 20, scope: !4325)
!4327 = !DILocation(line: 942, column: 23, scope: !4325)
!4328 = !DILocation(line: 942, column: 27, scope: !4325)
!4329 = !DILocation(line: 942, column: 25, scope: !4325)
!4330 = !DILocation(line: 942, column: 13, scope: !4315)
!4331 = !DILocation(line: 943, column: 13, scope: !4325)
!4332 = !DILocation(line: 943, column: 22, scope: !4325)
!4333 = !DILocation(line: 943, column: 20, scope: !4325)
!4334 = !DILocation(line: 943, column: 11, scope: !4325)
!4335 = !DILocation(line: 943, column: 5, scope: !4325)
!4336 = !DILocation(line: 945, column: 11, scope: !4325)
!4337 = !DILocation(line: 946, column: 3, scope: !4316)
!4338 = !DILocation(line: 948, column: 10, scope: !4309)
!4339 = !DILocation(line: 950, column: 7, scope: !4340)
!4340 = distinct !DILexicalBlock(scope: !4259, file: !1, line: 950, column: 7)
!4341 = !DILocation(line: 950, column: 23, scope: !4340)
!4342 = !DILocation(line: 950, column: 29, scope: !4340)
!4343 = !DILocation(line: 950, column: 32, scope: !4340)
!4344 = !DILocation(line: 950, column: 7, scope: !4259)
!4345 = !DILocation(line: 951, column: 42, scope: !4346)
!4346 = distinct !DILexicalBlock(scope: !4340, file: !1, line: 950, column: 39)
!4347 = !DILocation(line: 951, column: 49, scope: !4346)
!4348 = !DILocation(line: 951, column: 22, scope: !4346)
!4349 = !DILocation(line: 951, column: 20, scope: !4346)
!4350 = !DILocation(line: 953, column: 8, scope: !4351)
!4351 = distinct !DILexicalBlock(scope: !4346, file: !1, line: 953, column: 8)
!4352 = !DILocation(line: 953, column: 8, scope: !4346)
!4353 = !DILocation(line: 954, column: 30, scope: !4351)
!4354 = !DILocation(line: 954, column: 28, scope: !4351)
!4355 = !DILocation(line: 954, column: 21, scope: !4351)
!4356 = !DILocation(line: 954, column: 5, scope: !4351)
!4357 = !DILocation(line: 957, column: 8, scope: !4358)
!4358 = distinct !DILexicalBlock(scope: !4346, file: !1, line: 957, column: 8)
!4359 = !DILocation(line: 957, column: 8, scope: !4346)
!4360 = !DILocation(line: 958, column: 21, scope: !4361)
!4361 = distinct !DILexicalBlock(scope: !4358, file: !1, line: 957, column: 17)
!4362 = !DILocation(line: 958, column: 19, scope: !4361)
!4363 = !DILocation(line: 959, column: 21, scope: !4361)
!4364 = !DILocation(line: 960, column: 4, scope: !4361)
!4365 = !DILocation(line: 961, column: 3, scope: !4346)
!4366 = !DILocation(line: 964, column: 7, scope: !4367)
!4367 = distinct !DILexicalBlock(scope: !4259, file: !1, line: 964, column: 7)
!4368 = !DILocation(line: 964, column: 23, scope: !4367)
!4369 = !DILocation(line: 964, column: 7, scope: !4259)
!4370 = !DILocation(line: 965, column: 4, scope: !4367)
!4371 = !DILocation(line: 968, column: 8, scope: !4259)
!4372 = !DILocation(line: 968, column: 18, scope: !4259)
!4373 = !DILocation(line: 968, column: 26, scope: !4259)
!4374 = !DILocation(line: 968, column: 31, scope: !4259)
!4375 = !DILocation(line: 968, column: 41, scope: !4259)
!4376 = !DILocation(line: 968, column: 6, scope: !4259)
!4377 = !DILocation(line: 971, column: 13, scope: !4259)
!4378 = !DILocation(line: 971, column: 21, scope: !4259)
!4379 = !DILocation(line: 971, column: 3, scope: !4259)
!4380 = !DILocation(line: 973, column: 7, scope: !4381)
!4381 = distinct !DILexicalBlock(scope: !4259, file: !1, line: 973, column: 7)
!4382 = !DILocation(line: 973, column: 18, scope: !4381)
!4383 = !DILocation(line: 973, column: 21, scope: !4381)
!4384 = !DILocation(line: 973, column: 27, scope: !4381)
!4385 = !DILocation(line: 973, column: 30, scope: !4381)
!4386 = !DILocation(line: 973, column: 37, scope: !4381)
!4387 = !DILocation(line: 973, column: 7, scope: !4259)
!4388 = !DILocalVariable(name: "dw", scope: !4389, file: !1, line: 974, type: !4390)
!4389 = distinct !DILexicalBlock(scope: !4381, file: !1, line: 973, column: 48)
!4390 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4391, size: 64)
!4391 = !DIDerivedType(tag: DW_TAG_typedef, name: "MDeformWeight", file: !898, line: 57, baseType: !1391)
!4392 = !DILocation(line: 974, column: 19, scope: !4389)
!4393 = !DILocation(line: 974, column: 24, scope: !4389)
!4394 = !DILocation(line: 974, column: 31, scope: !4389)
!4395 = !DILocalVariable(name: "deformed", scope: !4389, file: !1, line: 975, type: !141)
!4396 = !DILocation(line: 975, column: 8, scope: !4389)
!4397 = !DILocalVariable(name: "j", scope: !4389, file: !1, line: 976, type: !5)
!4398 = !DILocation(line: 976, column: 17, scope: !4389)
!4399 = !DILocation(line: 978, column: 13, scope: !4400)
!4400 = distinct !DILexicalBlock(scope: !4389, file: !1, line: 978, column: 4)
!4401 = !DILocation(line: 978, column: 20, scope: !4400)
!4402 = !DILocation(line: 978, column: 11, scope: !4400)
!4403 = !DILocation(line: 978, column: 9, scope: !4400)
!4404 = !DILocation(line: 978, column: 31, scope: !4405)
!4405 = distinct !DILexicalBlock(scope: !4400, file: !1, line: 978, column: 4)
!4406 = !DILocation(line: 978, column: 33, scope: !4405)
!4407 = !DILocation(line: 978, column: 4, scope: !4400)
!4408 = !DILocalVariable(name: "index", scope: !4409, file: !1, line: 979, type: !4410)
!4409 = distinct !DILexicalBlock(scope: !4405, file: !1, line: 978, column: 50)
!4410 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !141)
!4411 = !DILocation(line: 979, column: 15, scope: !4409)
!4412 = !DILocation(line: 979, column: 23, scope: !4409)
!4413 = !DILocation(line: 979, column: 27, scope: !4409)
!4414 = !DILocation(line: 980, column: 9, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !4409, file: !1, line: 980, column: 9)
!4416 = !DILocation(line: 980, column: 15, scope: !4415)
!4417 = !DILocation(line: 980, column: 20, scope: !4415)
!4418 = !DILocation(line: 980, column: 23, scope: !4415)
!4419 = !DILocation(line: 980, column: 31, scope: !4415)
!4420 = !DILocation(line: 980, column: 29, scope: !4415)
!4421 = !DILocation(line: 980, column: 43, scope: !4415)
!4422 = !DILocation(line: 980, column: 55, scope: !4415)
!4423 = !DILocation(line: 980, column: 65, scope: !4415)
!4424 = !DILocation(line: 980, column: 53, scope: !4415)
!4425 = !DILocation(line: 980, column: 9, scope: !4409)
!4426 = !DILocalVariable(name: "weight", scope: !4427, file: !1, line: 981, type: !366)
!4427 = distinct !DILexicalBlock(scope: !4415, file: !1, line: 980, column: 74)
!4428 = !DILocation(line: 981, column: 12, scope: !4427)
!4429 = !DILocation(line: 981, column: 21, scope: !4427)
!4430 = !DILocation(line: 981, column: 25, scope: !4427)
!4431 = !DILocalVariable(name: "bone", scope: !4427, file: !1, line: 982, type: !395)
!4432 = !DILocation(line: 982, column: 12, scope: !4427)
!4433 = !DILocation(line: 982, column: 19, scope: !4427)
!4434 = !DILocation(line: 982, column: 26, scope: !4427)
!4435 = !DILocation(line: 983, column: 18, scope: !4427)
!4436 = !DILocation(line: 983, column: 36, scope: !4427)
!4437 = !DILocation(line: 983, column: 51, scope: !4427)
!4438 = !DILocation(line: 983, column: 34, scope: !4427)
!4439 = !DILocation(line: 983, column: 16, scope: !4427)
!4440 = !DILocation(line: 985, column: 15, scope: !4427)
!4441 = !DILocation(line: 987, column: 10, scope: !4442)
!4442 = distinct !DILexicalBlock(scope: !4427, file: !1, line: 987, column: 10)
!4443 = !DILocation(line: 987, column: 15, scope: !4442)
!4444 = !DILocation(line: 987, column: 18, scope: !4442)
!4445 = !DILocation(line: 987, column: 24, scope: !4442)
!4446 = !DILocation(line: 987, column: 29, scope: !4442)
!4447 = !DILocation(line: 987, column: 10, scope: !4427)
!4448 = !DILocation(line: 988, column: 36, scope: !4449)
!4449 = distinct !DILexicalBlock(scope: !4442, file: !1, line: 987, column: 49)
!4450 = !DILocation(line: 988, column: 40, scope: !4449)
!4451 = !DILocation(line: 988, column: 46, scope: !4449)
!4452 = !DILocation(line: 988, column: 56, scope: !4449)
!4453 = !DILocation(line: 988, column: 62, scope: !4449)
!4454 = !DILocation(line: 989, column: 36, scope: !4449)
!4455 = !DILocation(line: 989, column: 42, scope: !4449)
!4456 = !DILocation(line: 989, column: 52, scope: !4449)
!4457 = !DILocation(line: 989, column: 58, scope: !4449)
!4458 = !DILocation(line: 989, column: 68, scope: !4449)
!4459 = !DILocation(line: 989, column: 74, scope: !4449)
!4460 = !DILocation(line: 988, column: 17, scope: !4449)
!4461 = !DILocation(line: 988, column: 14, scope: !4449)
!4462 = !DILocation(line: 990, column: 6, scope: !4449)
!4463 = !DILocation(line: 991, column: 24, scope: !4427)
!4464 = !DILocation(line: 991, column: 31, scope: !4427)
!4465 = !DILocation(line: 991, column: 42, scope: !4427)
!4466 = !DILocation(line: 991, column: 50, scope: !4427)
!4467 = !DILocation(line: 991, column: 55, scope: !4427)
!4468 = !DILocation(line: 991, column: 59, scope: !4427)
!4469 = !DILocation(line: 991, column: 65, scope: !4427)
!4470 = !DILocation(line: 991, column: 6, scope: !4427)
!4471 = !DILocation(line: 992, column: 5, scope: !4427)
!4472 = !DILocation(line: 993, column: 4, scope: !4409)
!4473 = !DILocation(line: 978, column: 40, scope: !4405)
!4474 = !DILocation(line: 978, column: 46, scope: !4405)
!4475 = !DILocation(line: 978, column: 4, scope: !4405)
!4476 = distinct !{!4476, !4407, !4477}
!4477 = !DILocation(line: 993, column: 4, scope: !4400)
!4478 = !DILocation(line: 996, column: 8, scope: !4479)
!4479 = distinct !DILexicalBlock(scope: !4389, file: !1, line: 996, column: 8)
!4480 = !DILocation(line: 996, column: 17, scope: !4479)
!4481 = !DILocation(line: 996, column: 22, scope: !4479)
!4482 = !DILocation(line: 996, column: 25, scope: !4479)
!4483 = !DILocation(line: 996, column: 8, scope: !4389)
!4484 = !DILocation(line: 997, column: 17, scope: !4485)
!4485 = distinct !DILexicalBlock(scope: !4479, file: !1, line: 996, column: 39)
!4486 = !DILocation(line: 997, column: 15, scope: !4485)
!4487 = !DILocation(line: 998, column: 18, scope: !4488)
!4488 = distinct !DILexicalBlock(scope: !4485, file: !1, line: 998, column: 5)
!4489 = !DILocation(line: 998, column: 25, scope: !4488)
!4490 = !DILocation(line: 998, column: 31, scope: !4488)
!4491 = !DILocation(line: 998, column: 40, scope: !4488)
!4492 = !DILocation(line: 998, column: 16, scope: !4488)
!4493 = !DILocation(line: 998, column: 10, scope: !4488)
!4494 = !DILocation(line: 998, column: 47, scope: !4495)
!4495 = distinct !DILexicalBlock(scope: !4488, file: !1, line: 998, column: 5)
!4496 = !DILocation(line: 998, column: 5, scope: !4488)
!4497 = !DILocation(line: 999, column: 12, scope: !4498)
!4498 = distinct !DILexicalBlock(scope: !4499, file: !1, line: 999, column: 10)
!4499 = distinct !DILexicalBlock(scope: !4495, file: !1, line: 998, column: 88)
!4500 = !DILocation(line: 999, column: 19, scope: !4498)
!4501 = !DILocation(line: 999, column: 25, scope: !4498)
!4502 = !DILocation(line: 999, column: 30, scope: !4498)
!4503 = !DILocation(line: 999, column: 10, scope: !4499)
!4504 = !DILocation(line: 1000, column: 35, scope: !4498)
!4505 = !DILocation(line: 1000, column: 42, scope: !4498)
!4506 = !DILocation(line: 1000, column: 53, scope: !4498)
!4507 = !DILocation(line: 1000, column: 58, scope: !4498)
!4508 = !DILocation(line: 1000, column: 62, scope: !4498)
!4509 = !DILocation(line: 1000, column: 68, scope: !4498)
!4510 = !DILocation(line: 1000, column: 18, scope: !4498)
!4511 = !DILocation(line: 1000, column: 15, scope: !4498)
!4512 = !DILocation(line: 1000, column: 7, scope: !4498)
!4513 = !DILocation(line: 1001, column: 5, scope: !4499)
!4514 = !DILocation(line: 998, column: 62, scope: !4495)
!4515 = !DILocation(line: 998, column: 69, scope: !4495)
!4516 = !DILocation(line: 998, column: 60, scope: !4495)
!4517 = !DILocation(line: 998, column: 84, scope: !4495)
!4518 = !DILocation(line: 998, column: 5, scope: !4495)
!4519 = distinct !{!4519, !4496, !4520}
!4520 = !DILocation(line: 1001, column: 5, scope: !4488)
!4521 = !DILocation(line: 1002, column: 4, scope: !4485)
!4522 = !DILocation(line: 1003, column: 3, scope: !4389)
!4523 = !DILocation(line: 1004, column: 12, scope: !4524)
!4524 = distinct !DILexicalBlock(scope: !4381, file: !1, line: 1004, column: 12)
!4525 = !DILocation(line: 1004, column: 12, scope: !4381)
!4526 = !DILocation(line: 1005, column: 16, scope: !4527)
!4527 = distinct !DILexicalBlock(scope: !4524, file: !1, line: 1004, column: 26)
!4528 = !DILocation(line: 1005, column: 14, scope: !4527)
!4529 = !DILocation(line: 1006, column: 17, scope: !4530)
!4530 = distinct !DILexicalBlock(scope: !4527, file: !1, line: 1006, column: 4)
!4531 = !DILocation(line: 1006, column: 24, scope: !4530)
!4532 = !DILocation(line: 1006, column: 30, scope: !4530)
!4533 = !DILocation(line: 1006, column: 39, scope: !4530)
!4534 = !DILocation(line: 1006, column: 15, scope: !4530)
!4535 = !DILocation(line: 1006, column: 9, scope: !4530)
!4536 = !DILocation(line: 1006, column: 46, scope: !4537)
!4537 = distinct !DILexicalBlock(scope: !4530, file: !1, line: 1006, column: 4)
!4538 = !DILocation(line: 1006, column: 4, scope: !4530)
!4539 = !DILocation(line: 1007, column: 11, scope: !4540)
!4540 = distinct !DILexicalBlock(scope: !4541, file: !1, line: 1007, column: 9)
!4541 = distinct !DILexicalBlock(scope: !4537, file: !1, line: 1006, column: 87)
!4542 = !DILocation(line: 1007, column: 18, scope: !4540)
!4543 = !DILocation(line: 1007, column: 24, scope: !4540)
!4544 = !DILocation(line: 1007, column: 29, scope: !4540)
!4545 = !DILocation(line: 1007, column: 9, scope: !4541)
!4546 = !DILocation(line: 1008, column: 34, scope: !4540)
!4547 = !DILocation(line: 1008, column: 41, scope: !4540)
!4548 = !DILocation(line: 1008, column: 52, scope: !4540)
!4549 = !DILocation(line: 1008, column: 57, scope: !4540)
!4550 = !DILocation(line: 1008, column: 61, scope: !4540)
!4551 = !DILocation(line: 1008, column: 67, scope: !4540)
!4552 = !DILocation(line: 1008, column: 17, scope: !4540)
!4553 = !DILocation(line: 1008, column: 14, scope: !4540)
!4554 = !DILocation(line: 1008, column: 6, scope: !4540)
!4555 = !DILocation(line: 1009, column: 4, scope: !4541)
!4556 = !DILocation(line: 1006, column: 61, scope: !4537)
!4557 = !DILocation(line: 1006, column: 68, scope: !4537)
!4558 = !DILocation(line: 1006, column: 59, scope: !4537)
!4559 = !DILocation(line: 1006, column: 83, scope: !4537)
!4560 = !DILocation(line: 1006, column: 4, scope: !4537)
!4561 = distinct !{!4561, !4538, !4562}
!4562 = !DILocation(line: 1009, column: 4, scope: !4530)
!4563 = !DILocation(line: 1010, column: 3, scope: !4527)
!4564 = !DILocation(line: 1013, column: 7, scope: !4565)
!4565 = distinct !DILexicalBlock(scope: !4259, file: !1, line: 1013, column: 7)
!4566 = !DILocation(line: 1013, column: 15, scope: !4565)
!4567 = !DILocation(line: 1013, column: 7, scope: !4259)
!4568 = !DILocation(line: 1014, column: 8, scope: !4569)
!4569 = distinct !DILexicalBlock(scope: !4570, file: !1, line: 1014, column: 8)
!4570 = distinct !DILexicalBlock(scope: !4565, file: !1, line: 1013, column: 26)
!4571 = !DILocation(line: 1014, column: 8, scope: !4570)
!4572 = !DILocation(line: 1015, column: 18, scope: !4573)
!4573 = distinct !DILexicalBlock(scope: !4569, file: !1, line: 1014, column: 24)
!4574 = !DILocation(line: 1015, column: 22, scope: !4573)
!4575 = !DILocation(line: 1015, column: 5, scope: !4573)
!4576 = !DILocation(line: 1017, column: 9, scope: !4577)
!4577 = distinct !DILexicalBlock(scope: !4573, file: !1, line: 1017, column: 9)
!4578 = !DILocation(line: 1017, column: 25, scope: !4577)
!4579 = !DILocation(line: 1017, column: 9, scope: !4573)
!4580 = !DILocation(line: 1018, column: 17, scope: !4581)
!4581 = distinct !DILexicalBlock(scope: !4577, file: !1, line: 1017, column: 34)
!4582 = !DILocation(line: 1018, column: 22, scope: !4581)
!4583 = !DILocation(line: 1018, column: 6, scope: !4581)
!4584 = !DILocation(line: 1019, column: 18, scope: !4581)
!4585 = !DILocation(line: 1019, column: 24, scope: !4581)
!4586 = !DILocation(line: 1019, column: 23, scope: !4581)
!4587 = !DILocation(line: 1019, column: 35, scope: !4581)
!4588 = !DILocation(line: 1019, column: 50, scope: !4581)
!4589 = !DILocation(line: 1019, column: 6, scope: !4581)
!4590 = !DILocation(line: 1020, column: 16, scope: !4581)
!4591 = !DILocation(line: 1020, column: 21, scope: !4581)
!4592 = !DILocation(line: 1020, column: 6, scope: !4581)
!4593 = !DILocation(line: 1021, column: 16, scope: !4581)
!4594 = !DILocation(line: 1021, column: 21, scope: !4581)
!4595 = !DILocation(line: 1021, column: 6, scope: !4581)
!4596 = !DILocation(line: 1022, column: 16, scope: !4581)
!4597 = !DILocation(line: 1022, column: 20, scope: !4581)
!4598 = !DILocation(line: 1022, column: 6, scope: !4581)
!4599 = !DILocation(line: 1023, column: 5, scope: !4581)
!4600 = !DILocation(line: 1025, column: 18, scope: !4577)
!4601 = !DILocation(line: 1025, column: 23, scope: !4577)
!4602 = !DILocation(line: 1025, column: 22, scope: !4577)
!4603 = !DILocation(line: 1025, column: 34, scope: !4577)
!4604 = !DILocation(line: 1025, column: 49, scope: !4577)
!4605 = !DILocation(line: 1025, column: 6, scope: !4577)
!4606 = !DILocation(line: 1027, column: 12, scope: !4573)
!4607 = !DILocation(line: 1027, column: 10, scope: !4573)
!4608 = !DILocation(line: 1028, column: 4, scope: !4573)
!4609 = !DILocation(line: 1030, column: 15, scope: !4610)
!4610 = distinct !DILexicalBlock(scope: !4569, file: !1, line: 1029, column: 9)
!4611 = !DILocation(line: 1030, column: 20, scope: !4610)
!4612 = !DILocation(line: 1030, column: 38, scope: !4610)
!4613 = !DILocation(line: 1030, column: 36, scope: !4610)
!4614 = !DILocation(line: 1030, column: 5, scope: !4610)
!4615 = !DILocation(line: 1031, column: 17, scope: !4610)
!4616 = !DILocation(line: 1031, column: 21, scope: !4610)
!4617 = !DILocation(line: 1031, column: 26, scope: !4610)
!4618 = !DILocation(line: 1031, column: 5, scope: !4610)
!4619 = !DILocation(line: 1034, column: 8, scope: !4620)
!4620 = distinct !DILexicalBlock(scope: !4570, file: !1, line: 1034, column: 8)
!4621 = !DILocation(line: 1034, column: 8, scope: !4570)
!4622 = !DILocalVariable(name: "pre", scope: !4623, file: !1, line: 1035, type: !413)
!4623 = distinct !DILexicalBlock(scope: !4620, file: !1, line: 1034, column: 17)
!4624 = !DILocation(line: 1035, column: 11, scope: !4623)
!4625 = !DILocalVariable(name: "post", scope: !4623, file: !1, line: 1035, type: !413)
!4626 = !DILocation(line: 1035, column: 22, scope: !4623)
!4627 = !DILocalVariable(name: "tmpmat", scope: !4623, file: !1, line: 1035, type: !413)
!4628 = !DILocation(line: 1035, column: 34, scope: !4623)
!4629 = !DILocation(line: 1037, column: 16, scope: !4623)
!4630 = !DILocation(line: 1037, column: 21, scope: !4623)
!4631 = !DILocation(line: 1037, column: 5, scope: !4623)
!4632 = !DILocation(line: 1038, column: 16, scope: !4623)
!4633 = !DILocation(line: 1038, column: 22, scope: !4623)
!4634 = !DILocation(line: 1038, column: 5, scope: !4623)
!4635 = !DILocation(line: 1039, column: 16, scope: !4623)
!4636 = !DILocation(line: 1039, column: 24, scope: !4623)
!4637 = !DILocation(line: 1039, column: 32, scope: !4623)
!4638 = !DILocation(line: 1039, column: 5, scope: !4623)
!4639 = !DILocation(line: 1041, column: 10, scope: !4640)
!4640 = distinct !DILexicalBlock(scope: !4623, file: !1, line: 1041, column: 9)
!4641 = !DILocation(line: 1041, column: 9, scope: !4623)
!4642 = !DILocation(line: 1042, column: 16, scope: !4640)
!4643 = !DILocation(line: 1042, column: 22, scope: !4640)
!4644 = !DILocation(line: 1042, column: 40, scope: !4640)
!4645 = !DILocation(line: 1042, column: 38, scope: !4640)
!4646 = !DILocation(line: 1042, column: 6, scope: !4640)
!4647 = !DILocation(line: 1044, column: 5, scope: !4623)
!4648 = !DILocation(line: 1045, column: 4, scope: !4623)
!4649 = !DILocation(line: 1046, column: 3, scope: !4570)
!4650 = !DILocation(line: 1049, column: 13, scope: !4259)
!4651 = !DILocation(line: 1049, column: 22, scope: !4259)
!4652 = !DILocation(line: 1049, column: 3, scope: !4259)
!4653 = !DILocation(line: 1052, column: 7, scope: !4654)
!4654 = distinct !DILexicalBlock(scope: !4259, file: !1, line: 1052, column: 7)
!4655 = !DILocation(line: 1052, column: 7, scope: !4259)
!4656 = !DILocalVariable(name: "mw", scope: !4657, file: !1, line: 1053, type: !366)
!4657 = distinct !DILexicalBlock(scope: !4654, file: !1, line: 1052, column: 16)
!4658 = !DILocation(line: 1053, column: 10, scope: !4657)
!4659 = !DILocation(line: 1053, column: 22, scope: !4657)
!4660 = !DILocation(line: 1053, column: 20, scope: !4657)
!4661 = !DILocation(line: 1054, column: 22, scope: !4657)
!4662 = !DILocation(line: 1054, column: 38, scope: !4657)
!4663 = !DILocation(line: 1054, column: 48, scope: !4657)
!4664 = !DILocation(line: 1054, column: 36, scope: !4657)
!4665 = !DILocation(line: 1054, column: 56, scope: !4657)
!4666 = !DILocation(line: 1054, column: 61, scope: !4657)
!4667 = !DILocation(line: 1054, column: 59, scope: !4657)
!4668 = !DILocation(line: 1054, column: 54, scope: !4657)
!4669 = !DILocation(line: 1054, column: 4, scope: !4657)
!4670 = !DILocation(line: 1054, column: 14, scope: !4657)
!4671 = !DILocation(line: 1054, column: 20, scope: !4657)
!4672 = !DILocation(line: 1055, column: 22, scope: !4657)
!4673 = !DILocation(line: 1055, column: 38, scope: !4657)
!4674 = !DILocation(line: 1055, column: 48, scope: !4657)
!4675 = !DILocation(line: 1055, column: 36, scope: !4657)
!4676 = !DILocation(line: 1055, column: 56, scope: !4657)
!4677 = !DILocation(line: 1055, column: 61, scope: !4657)
!4678 = !DILocation(line: 1055, column: 59, scope: !4657)
!4679 = !DILocation(line: 1055, column: 54, scope: !4657)
!4680 = !DILocation(line: 1055, column: 4, scope: !4657)
!4681 = !DILocation(line: 1055, column: 14, scope: !4657)
!4682 = !DILocation(line: 1055, column: 20, scope: !4657)
!4683 = !DILocation(line: 1056, column: 22, scope: !4657)
!4684 = !DILocation(line: 1056, column: 38, scope: !4657)
!4685 = !DILocation(line: 1056, column: 48, scope: !4657)
!4686 = !DILocation(line: 1056, column: 36, scope: !4657)
!4687 = !DILocation(line: 1056, column: 56, scope: !4657)
!4688 = !DILocation(line: 1056, column: 61, scope: !4657)
!4689 = !DILocation(line: 1056, column: 59, scope: !4657)
!4690 = !DILocation(line: 1056, column: 54, scope: !4657)
!4691 = !DILocation(line: 1056, column: 4, scope: !4657)
!4692 = !DILocation(line: 1056, column: 14, scope: !4657)
!4693 = !DILocation(line: 1056, column: 20, scope: !4657)
!4694 = !DILocation(line: 1057, column: 3, scope: !4657)
!4695 = !DILocation(line: 1058, column: 2, scope: !4259)
!4696 = !DILocation(line: 915, column: 29, scope: !4254)
!4697 = !DILocation(line: 915, column: 2, scope: !4254)
!4698 = distinct !{!4698, !4257, !4699}
!4699 = !DILocation(line: 1058, column: 2, scope: !4251)
!4700 = !DILocation(line: 1060, column: 6, scope: !4701)
!4701 = distinct !DILexicalBlock(scope: !3727, file: !1, line: 1060, column: 6)
!4702 = !DILocation(line: 1060, column: 6, scope: !3727)
!4703 = !DILocation(line: 1061, column: 3, scope: !4701)
!4704 = !DILocation(line: 1061, column: 13, scope: !4701)
!4705 = !DILocation(line: 1062, column: 6, scope: !4706)
!4706 = distinct !DILexicalBlock(scope: !3727, file: !1, line: 1062, column: 6)
!4707 = !DILocation(line: 1062, column: 6, scope: !3727)
!4708 = !DILocation(line: 1063, column: 3, scope: !4706)
!4709 = !DILocation(line: 1063, column: 13, scope: !4706)
!4710 = !DILocation(line: 1064, column: 6, scope: !4711)
!4711 = distinct !DILexicalBlock(scope: !3727, file: !1, line: 1064, column: 6)
!4712 = !DILocation(line: 1064, column: 6, scope: !3727)
!4713 = !DILocation(line: 1065, column: 3, scope: !4711)
!4714 = !DILocation(line: 1065, column: 13, scope: !4711)
!4715 = !DILocation(line: 1068, column: 14, scope: !3727)
!4716 = !DILocation(line: 1068, column: 12, scope: !3727)
!4717 = !DILocation(line: 1069, column: 15, scope: !4718)
!4718 = distinct !DILexicalBlock(scope: !3727, file: !1, line: 1069, column: 2)
!4719 = !DILocation(line: 1069, column: 22, scope: !4718)
!4720 = !DILocation(line: 1069, column: 28, scope: !4718)
!4721 = !DILocation(line: 1069, column: 37, scope: !4718)
!4722 = !DILocation(line: 1069, column: 13, scope: !4718)
!4723 = !DILocation(line: 1069, column: 7, scope: !4718)
!4724 = !DILocation(line: 1069, column: 44, scope: !4725)
!4725 = distinct !DILexicalBlock(scope: !4718, file: !1, line: 1069, column: 2)
!4726 = !DILocation(line: 1069, column: 2, scope: !4718)
!4727 = !DILocation(line: 1070, column: 7, scope: !4728)
!4728 = distinct !DILexicalBlock(scope: !4729, file: !1, line: 1070, column: 7)
!4729 = distinct !DILexicalBlock(scope: !4725, file: !1, line: 1069, column: 85)
!4730 = !DILocation(line: 1070, column: 18, scope: !4728)
!4731 = !DILocation(line: 1070, column: 7, scope: !4729)
!4732 = !DILocation(line: 1071, column: 4, scope: !4728)
!4733 = !DILocation(line: 1071, column: 14, scope: !4728)
!4734 = !DILocation(line: 1071, column: 25, scope: !4728)
!4735 = !DILocation(line: 1072, column: 7, scope: !4736)
!4736 = distinct !DILexicalBlock(scope: !4729, file: !1, line: 1072, column: 7)
!4737 = !DILocation(line: 1072, column: 18, scope: !4736)
!4738 = !DILocation(line: 1072, column: 7, scope: !4729)
!4739 = !DILocation(line: 1073, column: 4, scope: !4736)
!4740 = !DILocation(line: 1073, column: 14, scope: !4736)
!4741 = !DILocation(line: 1073, column: 25, scope: !4736)
!4742 = !DILocation(line: 1074, column: 2, scope: !4729)
!4743 = !DILocation(line: 1069, column: 59, scope: !4725)
!4744 = !DILocation(line: 1069, column: 66, scope: !4725)
!4745 = !DILocation(line: 1069, column: 57, scope: !4725)
!4746 = !DILocation(line: 1069, column: 81, scope: !4725)
!4747 = !DILocation(line: 1069, column: 2, scope: !4725)
!4748 = distinct !{!4748, !4726, !4749}
!4749 = !DILocation(line: 1074, column: 2, scope: !4718)
!4750 = !DILocation(line: 1076, column: 2, scope: !3727)
!4751 = !DILocation(line: 1076, column: 12, scope: !3727)
!4752 = !DILocation(line: 1077, column: 1, scope: !3727)
!4753 = distinct !DISubprogram(name: "pchan_b_bone_defmats", scope: !1, file: !1, line: 590, type: !4754, scopeLine: 591, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !544)
!4754 = !DISubroutineType(types: !4755)
!4755 = !{null, !2808, !3750, !141}
!4756 = !DILocalVariable(name: "pchan", arg: 1, scope: !4753, file: !1, line: 590, type: !2808)
!4757 = !DILocation(line: 590, column: 48, scope: !4753)
!4758 = !DILocalVariable(name: "pdef_info", arg: 2, scope: !4753, file: !1, line: 590, type: !3750)
!4759 = !DILocation(line: 590, column: 72, scope: !4753)
!4760 = !DILocalVariable(name: "use_quaternion", arg: 3, scope: !4753, file: !1, line: 590, type: !141)
!4761 = !DILocation(line: 590, column: 87, scope: !4753)
!4762 = !DILocalVariable(name: "bone", scope: !4753, file: !1, line: 592, type: !395)
!4763 = !DILocation(line: 592, column: 8, scope: !4753)
!4764 = !DILocation(line: 592, column: 15, scope: !4753)
!4765 = !DILocation(line: 592, column: 22, scope: !4753)
!4766 = !DILocalVariable(name: "b_bone", scope: !4753, file: !1, line: 593, type: !4767)
!4767 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2854, size: 16384, elements: !1862)
!4768 = !DILocation(line: 593, column: 7, scope: !4753)
!4769 = !DILocalVariable(name: "b_bone_rest", scope: !4753, file: !1, line: 593, type: !4767)
!4770 = !DILocation(line: 593, column: 33, scope: !4753)
!4771 = !DILocalVariable(name: "b_bone_mats", scope: !4753, file: !1, line: 594, type: !2853)
!4772 = !DILocation(line: 594, column: 8, scope: !4753)
!4773 = !DILocalVariable(name: "b_bone_dual_quats", scope: !4753, file: !1, line: 595, type: !3756)
!4774 = !DILocation(line: 595, column: 12, scope: !4753)
!4775 = !DILocalVariable(name: "a", scope: !4753, file: !1, line: 596, type: !141)
!4776 = !DILocation(line: 596, column: 6, scope: !4753)
!4777 = !DILocation(line: 598, column: 22, scope: !4753)
!4778 = !DILocation(line: 598, column: 32, scope: !4753)
!4779 = !DILocation(line: 598, column: 2, scope: !4753)
!4780 = !DILocation(line: 599, column: 22, scope: !4753)
!4781 = !DILocation(line: 599, column: 32, scope: !4753)
!4782 = !DILocation(line: 599, column: 2, scope: !4753)
!4783 = !DILocation(line: 602, column: 16, scope: !4753)
!4784 = !DILocation(line: 602, column: 33, scope: !4753)
!4785 = !DILocation(line: 602, column: 39, scope: !4753)
!4786 = !DILocation(line: 602, column: 31, scope: !4753)
!4787 = !DILocation(line: 602, column: 28, scope: !4753)
!4788 = !DILocation(line: 602, column: 49, scope: !4753)
!4789 = !DILocation(line: 602, column: 14, scope: !4753)
!4790 = !DILocation(line: 603, column: 27, scope: !4753)
!4791 = !DILocation(line: 603, column: 2, scope: !4753)
!4792 = !DILocation(line: 603, column: 13, scope: !4753)
!4793 = !DILocation(line: 603, column: 25, scope: !4753)
!4794 = !DILocation(line: 605, column: 6, scope: !4795)
!4795 = distinct !DILexicalBlock(scope: !4753, file: !1, line: 605, column: 6)
!4796 = !DILocation(line: 605, column: 6, scope: !4753)
!4797 = !DILocation(line: 606, column: 23, scope: !4798)
!4798 = distinct !DILexicalBlock(scope: !4795, file: !1, line: 605, column: 22)
!4799 = !DILocation(line: 606, column: 36, scope: !4798)
!4800 = !DILocation(line: 606, column: 42, scope: !4798)
!4801 = !DILocation(line: 606, column: 35, scope: !4798)
!4802 = !DILocation(line: 606, column: 52, scope: !4798)
!4803 = !DILocation(line: 606, column: 21, scope: !4798)
!4804 = !DILocation(line: 607, column: 34, scope: !4798)
!4805 = !DILocation(line: 607, column: 3, scope: !4798)
!4806 = !DILocation(line: 607, column: 14, scope: !4798)
!4807 = !DILocation(line: 607, column: 32, scope: !4798)
!4808 = !DILocation(line: 608, column: 2, scope: !4798)
!4809 = !DILocation(line: 612, column: 15, scope: !4753)
!4810 = !DILocation(line: 612, column: 30, scope: !4753)
!4811 = !DILocation(line: 612, column: 35, scope: !4753)
!4812 = !DILocation(line: 612, column: 41, scope: !4753)
!4813 = !DILocation(line: 612, column: 2, scope: !4753)
!4814 = !DILocation(line: 620, column: 9, scope: !4815)
!4815 = distinct !DILexicalBlock(scope: !4753, file: !1, line: 620, column: 2)
!4816 = !DILocation(line: 620, column: 7, scope: !4815)
!4817 = !DILocation(line: 620, column: 14, scope: !4818)
!4818 = distinct !DILexicalBlock(scope: !4815, file: !1, line: 620, column: 2)
!4819 = !DILocation(line: 620, column: 18, scope: !4818)
!4820 = !DILocation(line: 620, column: 24, scope: !4818)
!4821 = !DILocation(line: 620, column: 16, scope: !4818)
!4822 = !DILocation(line: 620, column: 2, scope: !4815)
!4823 = !DILocalVariable(name: "tmat", scope: !4824, file: !1, line: 621, type: !419)
!4824 = distinct !DILexicalBlock(scope: !4818, file: !1, line: 620, column: 39)
!4825 = !DILocation(line: 621, column: 9, scope: !4824)
!4826 = !DILocation(line: 623, column: 16, scope: !4824)
!4827 = !DILocation(line: 623, column: 34, scope: !4824)
!4828 = !DILocation(line: 623, column: 22, scope: !4824)
!4829 = !DILocation(line: 623, column: 37, scope: !4824)
!4830 = !DILocation(line: 623, column: 3, scope: !4824)
!4831 = !DILocation(line: 625, column: 3, scope: !4824)
!4832 = !DILocation(line: 627, column: 7, scope: !4833)
!4833 = distinct !DILexicalBlock(scope: !4824, file: !1, line: 627, column: 7)
!4834 = !DILocation(line: 627, column: 7, scope: !4824)
!4835 = !DILocation(line: 628, column: 19, scope: !4833)
!4836 = !DILocation(line: 628, column: 37, scope: !4833)
!4837 = !DILocation(line: 628, column: 41, scope: !4833)
!4838 = !DILocation(line: 628, column: 47, scope: !4833)
!4839 = !DILocation(line: 628, column: 56, scope: !4833)
!4840 = !DILocation(line: 628, column: 68, scope: !4833)
!4841 = !DILocation(line: 628, column: 70, scope: !4833)
!4842 = !DILocation(line: 628, column: 75, scope: !4833)
!4843 = !DILocation(line: 628, column: 4, scope: !4833)
!4844 = !DILocation(line: 629, column: 2, scope: !4824)
!4845 = !DILocation(line: 620, column: 35, scope: !4818)
!4846 = !DILocation(line: 620, column: 2, scope: !4818)
!4847 = distinct !{!4847, !4822, !4848}
!4848 = !DILocation(line: 629, column: 2, scope: !4815)
!4849 = !DILocation(line: 630, column: 1, scope: !4753)
!4850 = distinct !DISubprogram(name: "pchan_bone_deform", scope: !1, file: !1, line: 774, type: !4851, scopeLine: 776, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !544)
!4851 = !DISubroutineType(types: !4852)
!4852 = !{null, !2808, !3750, !366, !1099, !3756, !1108, !1073, !1099}
!4853 = !DILocalVariable(name: "pchan", arg: 1, scope: !4850, file: !1, line: 774, type: !2808)
!4854 = !DILocation(line: 774, column: 45, scope: !4850)
!4855 = !DILocalVariable(name: "pdef_info", arg: 2, scope: !4850, file: !1, line: 774, type: !3750)
!4856 = !DILocation(line: 774, column: 69, scope: !4850)
!4857 = !DILocalVariable(name: "weight", arg: 3, scope: !4850, file: !1, line: 774, type: !366)
!4858 = !DILocation(line: 774, column: 86, scope: !4850)
!4859 = !DILocalVariable(name: "vec", arg: 4, scope: !4850, file: !1, line: 774, type: !1099)
!4860 = !DILocation(line: 774, column: 100, scope: !4850)
!4861 = !DILocalVariable(name: "dq", arg: 5, scope: !4850, file: !1, line: 774, type: !3756)
!4862 = !DILocation(line: 774, column: 118, scope: !4850)
!4863 = !DILocalVariable(name: "mat", arg: 6, scope: !4850, file: !1, line: 775, type: !1108)
!4864 = !DILocation(line: 775, column: 37, scope: !4850)
!4865 = !DILocalVariable(name: "co", arg: 7, scope: !4850, file: !1, line: 775, type: !1073)
!4866 = !DILocation(line: 775, column: 60, scope: !4850)
!4867 = !DILocalVariable(name: "contrib", arg: 8, scope: !4850, file: !1, line: 775, type: !1099)
!4868 = !DILocation(line: 775, column: 74, scope: !4850)
!4869 = !DILocalVariable(name: "cop", scope: !4850, file: !1, line: 777, type: !408)
!4870 = !DILocation(line: 777, column: 8, scope: !4850)
!4871 = !DILocalVariable(name: "bbonemat", scope: !4850, file: !1, line: 777, type: !413)
!4872 = !DILocation(line: 777, column: 16, scope: !4850)
!4873 = !DILocalVariable(name: "bbonedq", scope: !4850, file: !1, line: 778, type: !3757)
!4874 = !DILocation(line: 778, column: 11, scope: !4850)
!4875 = !DILocation(line: 780, column: 7, scope: !4876)
!4876 = distinct !DILexicalBlock(scope: !4850, file: !1, line: 780, column: 6)
!4877 = !DILocation(line: 780, column: 6, scope: !4850)
!4878 = !DILocation(line: 781, column: 3, scope: !4876)
!4879 = !DILocation(line: 783, column: 13, scope: !4850)
!4880 = !DILocation(line: 783, column: 18, scope: !4850)
!4881 = !DILocation(line: 783, column: 2, scope: !4850)
!4882 = !DILocation(line: 785, column: 6, scope: !4883)
!4883 = distinct !DILexicalBlock(scope: !4850, file: !1, line: 785, column: 6)
!4884 = !DILocation(line: 785, column: 6, scope: !4850)
!4885 = !DILocation(line: 786, column: 7, scope: !4886)
!4886 = distinct !DILexicalBlock(scope: !4887, file: !1, line: 786, column: 7)
!4887 = distinct !DILexicalBlock(scope: !4883, file: !1, line: 785, column: 11)
!4888 = !DILocation(line: 786, column: 14, scope: !4886)
!4889 = !DILocation(line: 786, column: 20, scope: !4886)
!4890 = !DILocation(line: 786, column: 29, scope: !4886)
!4891 = !DILocation(line: 786, column: 7, scope: !4887)
!4892 = !DILocation(line: 788, column: 18, scope: !4886)
!4893 = !DILocation(line: 788, column: 29, scope: !4886)
!4894 = !DILocation(line: 788, column: 36, scope: !4886)
!4895 = !DILocation(line: 788, column: 42, scope: !4886)
!4896 = !DILocation(line: 788, column: 54, scope: !4886)
!4897 = !DILocation(line: 788, column: 53, scope: !4886)
!4898 = !DILocation(line: 788, column: 61, scope: !4886)
!4899 = !DILocation(line: 788, column: 4, scope: !4886)
!4900 = !DILocation(line: 790, column: 14, scope: !4886)
!4901 = !DILocation(line: 790, column: 21, scope: !4886)
!4902 = !DILocation(line: 790, column: 31, scope: !4886)
!4903 = !DILocation(line: 790, column: 4, scope: !4886)
!4904 = !DILocation(line: 792, column: 14, scope: !4887)
!4905 = !DILocation(line: 792, column: 23, scope: !4887)
!4906 = !DILocation(line: 792, column: 21, scope: !4887)
!4907 = !DILocation(line: 792, column: 32, scope: !4887)
!4908 = !DILocation(line: 792, column: 30, scope: !4887)
!4909 = !DILocation(line: 792, column: 3, scope: !4887)
!4910 = !DILocation(line: 792, column: 10, scope: !4887)
!4911 = !DILocation(line: 793, column: 14, scope: !4887)
!4912 = !DILocation(line: 793, column: 23, scope: !4887)
!4913 = !DILocation(line: 793, column: 21, scope: !4887)
!4914 = !DILocation(line: 793, column: 32, scope: !4887)
!4915 = !DILocation(line: 793, column: 30, scope: !4887)
!4916 = !DILocation(line: 793, column: 3, scope: !4887)
!4917 = !DILocation(line: 793, column: 10, scope: !4887)
!4918 = !DILocation(line: 794, column: 14, scope: !4887)
!4919 = !DILocation(line: 794, column: 23, scope: !4887)
!4920 = !DILocation(line: 794, column: 21, scope: !4887)
!4921 = !DILocation(line: 794, column: 32, scope: !4887)
!4922 = !DILocation(line: 794, column: 30, scope: !4887)
!4923 = !DILocation(line: 794, column: 3, scope: !4887)
!4924 = !DILocation(line: 794, column: 10, scope: !4887)
!4925 = !DILocation(line: 796, column: 7, scope: !4926)
!4926 = distinct !DILexicalBlock(scope: !4887, file: !1, line: 796, column: 7)
!4927 = !DILocation(line: 796, column: 7, scope: !4887)
!4928 = !DILocation(line: 797, column: 25, scope: !4926)
!4929 = !DILocation(line: 797, column: 32, scope: !4926)
!4930 = !DILocation(line: 797, column: 40, scope: !4926)
!4931 = !DILocation(line: 797, column: 50, scope: !4926)
!4932 = !DILocation(line: 797, column: 4, scope: !4926)
!4933 = !DILocation(line: 798, column: 2, scope: !4887)
!4934 = !DILocation(line: 800, column: 7, scope: !4935)
!4935 = distinct !DILexicalBlock(scope: !4936, file: !1, line: 800, column: 7)
!4936 = distinct !DILexicalBlock(scope: !4883, file: !1, line: 799, column: 7)
!4937 = !DILocation(line: 800, column: 14, scope: !4935)
!4938 = !DILocation(line: 800, column: 20, scope: !4935)
!4939 = !DILocation(line: 800, column: 29, scope: !4935)
!4940 = !DILocation(line: 800, column: 7, scope: !4936)
!4941 = !DILocation(line: 801, column: 18, scope: !4942)
!4942 = distinct !DILexicalBlock(scope: !4935, file: !1, line: 800, column: 34)
!4943 = !DILocation(line: 801, column: 29, scope: !4942)
!4944 = !DILocation(line: 801, column: 36, scope: !4942)
!4945 = !DILocation(line: 801, column: 42, scope: !4942)
!4946 = !DILocation(line: 801, column: 4, scope: !4942)
!4947 = !DILocation(line: 802, column: 23, scope: !4942)
!4948 = !DILocation(line: 802, column: 37, scope: !4942)
!4949 = !DILocation(line: 802, column: 4, scope: !4942)
!4950 = !DILocation(line: 803, column: 3, scope: !4942)
!4951 = !DILocation(line: 805, column: 23, scope: !4935)
!4952 = !DILocation(line: 805, column: 27, scope: !4935)
!4953 = !DILocation(line: 805, column: 38, scope: !4935)
!4954 = !DILocation(line: 805, column: 49, scope: !4935)
!4955 = !DILocation(line: 805, column: 4, scope: !4935)
!4956 = !DILocation(line: 808, column: 16, scope: !4850)
!4957 = !DILocation(line: 808, column: 4, scope: !4850)
!4958 = !DILocation(line: 808, column: 13, scope: !4850)
!4959 = !DILocation(line: 809, column: 1, scope: !4850)
!4960 = distinct !DISubprogram(name: "dist_bone_deform", scope: !1, file: !1, line: 727, type: !4961, scopeLine: 729, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !544)
!4961 = !DISubroutineType(types: !4962)
!4962 = !{!366, !2808, !3750, !1099, !3756, !1108, !1073}
!4963 = !DILocalVariable(name: "pchan", arg: 1, scope: !4960, file: !1, line: 727, type: !2808)
!4964 = !DILocation(line: 727, column: 45, scope: !4960)
!4965 = !DILocalVariable(name: "pdef_info", arg: 2, scope: !4960, file: !1, line: 727, type: !3750)
!4966 = !DILocation(line: 727, column: 69, scope: !4960)
!4967 = !DILocalVariable(name: "vec", arg: 3, scope: !4960, file: !1, line: 727, type: !1099)
!4968 = !DILocation(line: 727, column: 86, scope: !4960)
!4969 = !DILocalVariable(name: "dq", arg: 4, scope: !4960, file: !1, line: 727, type: !3756)
!4970 = !DILocation(line: 727, column: 104, scope: !4960)
!4971 = !DILocalVariable(name: "mat", arg: 5, scope: !4960, file: !1, line: 728, type: !1108)
!4972 = !DILocation(line: 728, column: 37, scope: !4960)
!4973 = !DILocalVariable(name: "co", arg: 6, scope: !4960, file: !1, line: 728, type: !1073)
!4974 = !DILocation(line: 728, column: 60, scope: !4960)
!4975 = !DILocalVariable(name: "bone", scope: !4960, file: !1, line: 730, type: !395)
!4976 = !DILocation(line: 730, column: 8, scope: !4960)
!4977 = !DILocation(line: 730, column: 15, scope: !4960)
!4978 = !DILocation(line: 730, column: 22, scope: !4960)
!4979 = !DILocalVariable(name: "fac", scope: !4960, file: !1, line: 731, type: !366)
!4980 = !DILocation(line: 731, column: 8, scope: !4960)
!4981 = !DILocalVariable(name: "contrib", scope: !4960, file: !1, line: 731, type: !366)
!4982 = !DILocation(line: 731, column: 13, scope: !4960)
!4983 = !DILocalVariable(name: "cop", scope: !4960, file: !1, line: 732, type: !408)
!4984 = !DILocation(line: 732, column: 8, scope: !4960)
!4985 = !DILocalVariable(name: "bbonemat", scope: !4960, file: !1, line: 732, type: !413)
!4986 = !DILocation(line: 732, column: 16, scope: !4960)
!4987 = !DILocalVariable(name: "bbonedq", scope: !4960, file: !1, line: 733, type: !3757)
!4988 = !DILocation(line: 733, column: 11, scope: !4960)
!4989 = !DILocation(line: 735, column: 6, scope: !4990)
!4990 = distinct !DILexicalBlock(scope: !4960, file: !1, line: 735, column: 6)
!4991 = !DILocation(line: 735, column: 11, scope: !4990)
!4992 = !DILocation(line: 735, column: 6, scope: !4960)
!4993 = !DILocation(line: 736, column: 3, scope: !4990)
!4994 = !DILocation(line: 738, column: 13, scope: !4960)
!4995 = !DILocation(line: 738, column: 18, scope: !4960)
!4996 = !DILocation(line: 738, column: 2, scope: !4960)
!4997 = !DILocation(line: 740, column: 27, scope: !4960)
!4998 = !DILocation(line: 740, column: 32, scope: !4960)
!4999 = !DILocation(line: 740, column: 38, scope: !4960)
!5000 = !DILocation(line: 740, column: 48, scope: !4960)
!5001 = !DILocation(line: 740, column: 54, scope: !4960)
!5002 = !DILocation(line: 740, column: 64, scope: !4960)
!5003 = !DILocation(line: 740, column: 70, scope: !4960)
!5004 = !DILocation(line: 740, column: 80, scope: !4960)
!5005 = !DILocation(line: 740, column: 86, scope: !4960)
!5006 = !DILocation(line: 740, column: 96, scope: !4960)
!5007 = !DILocation(line: 740, column: 102, scope: !4960)
!5008 = !DILocation(line: 740, column: 8, scope: !4960)
!5009 = !DILocation(line: 740, column: 6, scope: !4960)
!5010 = !DILocation(line: 742, column: 6, scope: !5011)
!5011 = distinct !DILexicalBlock(scope: !4960, file: !1, line: 742, column: 6)
!5012 = !DILocation(line: 742, column: 10, scope: !5011)
!5013 = !DILocation(line: 742, column: 6, scope: !4960)
!5014 = !DILocation(line: 743, column: 10, scope: !5015)
!5015 = distinct !DILexicalBlock(scope: !5011, file: !1, line: 742, column: 18)
!5016 = !DILocation(line: 743, column: 16, scope: !5015)
!5017 = !DILocation(line: 743, column: 7, scope: !5015)
!5018 = !DILocation(line: 744, column: 13, scope: !5015)
!5019 = !DILocation(line: 744, column: 11, scope: !5015)
!5020 = !DILocation(line: 745, column: 7, scope: !5021)
!5021 = distinct !DILexicalBlock(scope: !5015, file: !1, line: 745, column: 7)
!5022 = !DILocation(line: 745, column: 15, scope: !5021)
!5023 = !DILocation(line: 745, column: 7, scope: !5015)
!5024 = !DILocation(line: 746, column: 8, scope: !5025)
!5025 = distinct !DILexicalBlock(scope: !5026, file: !1, line: 746, column: 8)
!5026 = distinct !DILexicalBlock(scope: !5021, file: !1, line: 745, column: 23)
!5027 = !DILocation(line: 746, column: 8, scope: !5026)
!5028 = !DILocation(line: 747, column: 9, scope: !5029)
!5029 = distinct !DILexicalBlock(scope: !5030, file: !1, line: 747, column: 9)
!5030 = distinct !DILexicalBlock(scope: !5025, file: !1, line: 746, column: 13)
!5031 = !DILocation(line: 747, column: 15, scope: !5029)
!5032 = !DILocation(line: 747, column: 24, scope: !5029)
!5033 = !DILocation(line: 747, column: 9, scope: !5030)
!5034 = !DILocation(line: 749, column: 20, scope: !5029)
!5035 = !DILocation(line: 749, column: 31, scope: !5029)
!5036 = !DILocation(line: 749, column: 37, scope: !5029)
!5037 = !DILocation(line: 749, column: 49, scope: !5029)
!5038 = !DILocation(line: 749, column: 48, scope: !5029)
!5039 = !DILocation(line: 749, column: 56, scope: !5029)
!5040 = !DILocation(line: 749, column: 6, scope: !5029)
!5041 = !DILocation(line: 751, column: 16, scope: !5029)
!5042 = !DILocation(line: 751, column: 23, scope: !5029)
!5043 = !DILocation(line: 751, column: 33, scope: !5029)
!5044 = !DILocation(line: 751, column: 6, scope: !5029)
!5045 = !DILocation(line: 754, column: 15, scope: !5030)
!5046 = !DILocation(line: 754, column: 20, scope: !5030)
!5047 = !DILocation(line: 754, column: 5, scope: !5030)
!5048 = !DILocation(line: 755, column: 18, scope: !5030)
!5049 = !DILocation(line: 755, column: 23, scope: !5030)
!5050 = !DILocation(line: 755, column: 28, scope: !5030)
!5051 = !DILocation(line: 755, column: 5, scope: !5030)
!5052 = !DILocation(line: 757, column: 9, scope: !5053)
!5053 = distinct !DILexicalBlock(scope: !5030, file: !1, line: 757, column: 9)
!5054 = !DILocation(line: 757, column: 9, scope: !5030)
!5055 = !DILocation(line: 758, column: 27, scope: !5053)
!5056 = !DILocation(line: 758, column: 34, scope: !5053)
!5057 = !DILocation(line: 758, column: 39, scope: !5053)
!5058 = !DILocation(line: 758, column: 49, scope: !5053)
!5059 = !DILocation(line: 758, column: 6, scope: !5053)
!5060 = !DILocation(line: 759, column: 4, scope: !5030)
!5061 = !DILocation(line: 761, column: 9, scope: !5062)
!5062 = distinct !DILexicalBlock(scope: !5063, file: !1, line: 761, column: 9)
!5063 = distinct !DILexicalBlock(scope: !5025, file: !1, line: 760, column: 9)
!5064 = !DILocation(line: 761, column: 15, scope: !5062)
!5065 = !DILocation(line: 761, column: 24, scope: !5062)
!5066 = !DILocation(line: 761, column: 9, scope: !5063)
!5067 = !DILocation(line: 762, column: 20, scope: !5068)
!5068 = distinct !DILexicalBlock(scope: !5062, file: !1, line: 761, column: 29)
!5069 = !DILocation(line: 762, column: 31, scope: !5068)
!5070 = !DILocation(line: 762, column: 37, scope: !5068)
!5071 = !DILocation(line: 762, column: 6, scope: !5068)
!5072 = !DILocation(line: 763, column: 25, scope: !5068)
!5073 = !DILocation(line: 763, column: 39, scope: !5068)
!5074 = !DILocation(line: 763, column: 6, scope: !5068)
!5075 = !DILocation(line: 764, column: 5, scope: !5068)
!5076 = !DILocation(line: 766, column: 25, scope: !5062)
!5077 = !DILocation(line: 766, column: 29, scope: !5062)
!5078 = !DILocation(line: 766, column: 40, scope: !5062)
!5079 = !DILocation(line: 766, column: 51, scope: !5062)
!5080 = !DILocation(line: 766, column: 6, scope: !5062)
!5081 = !DILocation(line: 768, column: 3, scope: !5026)
!5082 = !DILocation(line: 769, column: 2, scope: !5015)
!5083 = !DILocation(line: 771, column: 9, scope: !4960)
!5084 = !DILocation(line: 771, column: 2, scope: !4960)
!5085 = !DILocation(line: 772, column: 1, scope: !4960)
!5086 = distinct !DISubprogram(name: "sub_v3_v3", scope: !3267, file: !3267, line: 350, type: !3268, scopeLine: 351, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !544)
!5087 = !DILocalVariable(name: "r", arg: 1, scope: !5086, file: !3267, line: 350, type: !1099)
!5088 = !DILocation(line: 350, column: 30, scope: !5086)
!5089 = !DILocalVariable(name: "a", arg: 2, scope: !5086, file: !3267, line: 350, type: !1073)
!5090 = !DILocation(line: 350, column: 48, scope: !5086)
!5091 = !DILocation(line: 352, column: 10, scope: !5086)
!5092 = !DILocation(line: 352, column: 2, scope: !5086)
!5093 = !DILocation(line: 352, column: 7, scope: !5086)
!5094 = !DILocation(line: 353, column: 10, scope: !5086)
!5095 = !DILocation(line: 353, column: 2, scope: !5086)
!5096 = !DILocation(line: 353, column: 7, scope: !5086)
!5097 = !DILocation(line: 354, column: 10, scope: !5086)
!5098 = !DILocation(line: 354, column: 2, scope: !5086)
!5099 = !DILocation(line: 354, column: 7, scope: !5086)
!5100 = !DILocation(line: 355, column: 1, scope: !5086)
!5101 = distinct !DISubprogram(name: "add_v3_v3", scope: !3267, file: !3267, line: 302, type: !3268, scopeLine: 303, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !544)
!5102 = !DILocalVariable(name: "r", arg: 1, scope: !5101, file: !3267, line: 302, type: !1099)
!5103 = !DILocation(line: 302, column: 30, scope: !5101)
!5104 = !DILocalVariable(name: "a", arg: 2, scope: !5101, file: !3267, line: 302, type: !1073)
!5105 = !DILocation(line: 302, column: 48, scope: !5101)
!5106 = !DILocation(line: 304, column: 10, scope: !5101)
!5107 = !DILocation(line: 304, column: 2, scope: !5101)
!5108 = !DILocation(line: 304, column: 7, scope: !5101)
!5109 = !DILocation(line: 305, column: 10, scope: !5101)
!5110 = !DILocation(line: 305, column: 2, scope: !5101)
!5111 = !DILocation(line: 305, column: 7, scope: !5101)
!5112 = !DILocation(line: 306, column: 10, scope: !5101)
!5113 = !DILocation(line: 306, column: 2, scope: !5101)
!5114 = !DILocation(line: 306, column: 7, scope: !5101)
!5115 = !DILocation(line: 307, column: 1, scope: !5101)
!5116 = distinct !DISubprogram(name: "add_v3_v3v3", scope: !3267, file: !3267, line: 309, type: !3510, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !544)
!5117 = !DILocalVariable(name: "r", arg: 1, scope: !5116, file: !3267, line: 309, type: !1099)
!5118 = !DILocation(line: 309, column: 32, scope: !5116)
!5119 = !DILocalVariable(name: "a", arg: 2, scope: !5116, file: !3267, line: 309, type: !1073)
!5120 = !DILocation(line: 309, column: 50, scope: !5116)
!5121 = !DILocalVariable(name: "b", arg: 3, scope: !5116, file: !3267, line: 309, type: !1073)
!5122 = !DILocation(line: 309, column: 68, scope: !5116)
!5123 = !DILocation(line: 311, column: 9, scope: !5116)
!5124 = !DILocation(line: 311, column: 16, scope: !5116)
!5125 = !DILocation(line: 311, column: 14, scope: !5116)
!5126 = !DILocation(line: 311, column: 2, scope: !5116)
!5127 = !DILocation(line: 311, column: 7, scope: !5116)
!5128 = !DILocation(line: 312, column: 9, scope: !5116)
!5129 = !DILocation(line: 312, column: 16, scope: !5116)
!5130 = !DILocation(line: 312, column: 14, scope: !5116)
!5131 = !DILocation(line: 312, column: 2, scope: !5116)
!5132 = !DILocation(line: 312, column: 7, scope: !5116)
!5133 = !DILocation(line: 313, column: 9, scope: !5116)
!5134 = !DILocation(line: 313, column: 16, scope: !5116)
!5135 = !DILocation(line: 313, column: 14, scope: !5116)
!5136 = !DILocation(line: 313, column: 2, scope: !5116)
!5137 = !DILocation(line: 313, column: 7, scope: !5116)
!5138 = !DILocation(line: 314, column: 1, scope: !5116)
!5139 = distinct !DISubprogram(name: "get_objectspace_bone_matrix", scope: !1, file: !1, line: 1081, type: !5140, scopeLine: 1083, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !544)
!5140 = !DISubroutineType(types: !5141)
!5141 = !{null, !400, !1136, !141, !141}
!5142 = !DILocalVariable(name: "bone", arg: 1, scope: !5139, file: !1, line: 1081, type: !400)
!5143 = !DILocation(line: 1081, column: 47, scope: !5139)
!5144 = !DILocalVariable(name: "M_accumulatedMatrix", arg: 2, scope: !5139, file: !1, line: 1081, type: !1136)
!5145 = !DILocation(line: 1081, column: 59, scope: !5139)
!5146 = !DILocalVariable(name: "UNUSED_root", arg: 3, scope: !5139, file: !1, line: 1081, type: !141)
!5147 = !DILocation(line: 1081, column: 90, scope: !5139)
!5148 = !DILocalVariable(name: "UNUSED_posed", arg: 4, scope: !5139, file: !1, line: 1082, type: !141)
!5149 = !DILocation(line: 1082, column: 38, scope: !5139)
!5150 = !DILocation(line: 1084, column: 13, scope: !5139)
!5151 = !DILocation(line: 1084, column: 34, scope: !5139)
!5152 = !DILocation(line: 1084, column: 40, scope: !5139)
!5153 = !DILocation(line: 1084, column: 2, scope: !5139)
!5154 = !DILocation(line: 1085, column: 1, scope: !5139)
!5155 = distinct !DISubprogram(name: "BKE_armature_mat_world_to_pose", scope: !1, file: !1, line: 1090, type: !5156, scopeLine: 1091, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !544)
!5156 = !DISubroutineType(types: !5157)
!5157 = !{null, !569, !1136, !1136}
!5158 = !DILocalVariable(name: "ob", arg: 1, scope: !5155, file: !1, line: 1090, type: !569)
!5159 = !DILocation(line: 1090, column: 45, scope: !5155)
!5160 = !DILocalVariable(name: "inmat", arg: 2, scope: !5155, file: !1, line: 1090, type: !1136)
!5161 = !DILocation(line: 1090, column: 55, scope: !5155)
!5162 = !DILocalVariable(name: "outmat", arg: 3, scope: !5155, file: !1, line: 1090, type: !1136)
!5163 = !DILocation(line: 1090, column: 74, scope: !5155)
!5164 = !DILocalVariable(name: "obmat", scope: !5155, file: !1, line: 1092, type: !419)
!5165 = !DILocation(line: 1092, column: 8, scope: !5155)
!5166 = !DILocation(line: 1095, column: 6, scope: !5167)
!5167 = distinct !DILexicalBlock(scope: !5155, file: !1, line: 1095, column: 6)
!5168 = !DILocation(line: 1095, column: 9, scope: !5167)
!5169 = !DILocation(line: 1095, column: 6, scope: !5155)
!5170 = !DILocation(line: 1096, column: 3, scope: !5167)
!5171 = !DILocation(line: 1099, column: 15, scope: !5155)
!5172 = !DILocation(line: 1099, column: 22, scope: !5155)
!5173 = !DILocation(line: 1099, column: 26, scope: !5155)
!5174 = !DILocation(line: 1099, column: 2, scope: !5155)
!5175 = !DILocation(line: 1102, column: 14, scope: !5155)
!5176 = !DILocation(line: 1102, column: 22, scope: !5155)
!5177 = !DILocation(line: 1102, column: 29, scope: !5155)
!5178 = !DILocation(line: 1102, column: 2, scope: !5155)
!5179 = !DILocation(line: 1103, column: 1, scope: !5155)
!5180 = distinct !DISubprogram(name: "BKE_armature_loc_world_to_pose", scope: !1, file: !1, line: 1108, type: !5181, scopeLine: 1109, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !544)
!5181 = !DISubroutineType(types: !5182)
!5182 = !{null, !569, !1073, !1099}
!5183 = !DILocalVariable(name: "ob", arg: 1, scope: !5180, file: !1, line: 1108, type: !569)
!5184 = !DILocation(line: 1108, column: 45, scope: !5180)
!5185 = !DILocalVariable(name: "inloc", arg: 2, scope: !5180, file: !1, line: 1108, type: !1073)
!5186 = !DILocation(line: 1108, column: 61, scope: !5180)
!5187 = !DILocalVariable(name: "outloc", arg: 3, scope: !5180, file: !1, line: 1108, type: !1099)
!5188 = !DILocation(line: 1108, column: 77, scope: !5180)
!5189 = !DILocalVariable(name: "xLocMat", scope: !5180, file: !1, line: 1110, type: !419)
!5190 = !DILocation(line: 1110, column: 8, scope: !5180)
!5191 = !DILocalVariable(name: "nLocMat", scope: !5180, file: !1, line: 1111, type: !419)
!5192 = !DILocation(line: 1111, column: 8, scope: !5180)
!5193 = !DILocation(line: 1114, column: 10, scope: !5180)
!5194 = !DILocation(line: 1114, column: 2, scope: !5180)
!5195 = !DILocation(line: 1115, column: 13, scope: !5180)
!5196 = !DILocation(line: 1115, column: 25, scope: !5180)
!5197 = !DILocation(line: 1115, column: 2, scope: !5180)
!5198 = !DILocation(line: 1118, column: 33, scope: !5180)
!5199 = !DILocation(line: 1118, column: 37, scope: !5180)
!5200 = !DILocation(line: 1118, column: 46, scope: !5180)
!5201 = !DILocation(line: 1118, column: 2, scope: !5180)
!5202 = !DILocation(line: 1119, column: 13, scope: !5180)
!5203 = !DILocation(line: 1119, column: 21, scope: !5180)
!5204 = !DILocation(line: 1119, column: 2, scope: !5180)
!5205 = !DILocation(line: 1120, column: 1, scope: !5180)
!5206 = distinct !DISubprogram(name: "BKE_pchan_to_pose_mat", scope: !1, file: !1, line: 1157, type: !5207, scopeLine: 1158, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !544)
!5207 = !DISubroutineType(types: !5208)
!5208 = !{null, !2808, !1136, !1136}
!5209 = !DILocalVariable(name: "pchan", arg: 1, scope: !5206, file: !1, line: 1157, type: !2808)
!5210 = !DILocation(line: 1157, column: 42, scope: !5206)
!5211 = !DILocalVariable(name: "rotscale_mat", arg: 2, scope: !5206, file: !1, line: 1157, type: !1136)
!5212 = !DILocation(line: 1157, column: 55, scope: !5206)
!5213 = !DILocalVariable(name: "loc_mat", arg: 3, scope: !5206, file: !1, line: 1157, type: !1136)
!5214 = !DILocation(line: 1157, column: 81, scope: !5206)
!5215 = !DILocalVariable(name: "bone", scope: !5206, file: !1, line: 1159, type: !395)
!5216 = !DILocation(line: 1159, column: 8, scope: !5206)
!5217 = !DILocalVariable(name: "parbone", scope: !5206, file: !1, line: 1159, type: !395)
!5218 = !DILocation(line: 1159, column: 15, scope: !5206)
!5219 = !DILocalVariable(name: "parchan", scope: !5206, file: !1, line: 1160, type: !2808)
!5220 = !DILocation(line: 1160, column: 16, scope: !5206)
!5221 = !DILocation(line: 1163, column: 9, scope: !5206)
!5222 = !DILocation(line: 1163, column: 16, scope: !5206)
!5223 = !DILocation(line: 1163, column: 7, scope: !5206)
!5224 = !DILocation(line: 1164, column: 12, scope: !5206)
!5225 = !DILocation(line: 1164, column: 18, scope: !5206)
!5226 = !DILocation(line: 1164, column: 10, scope: !5206)
!5227 = !DILocation(line: 1165, column: 12, scope: !5206)
!5228 = !DILocation(line: 1165, column: 19, scope: !5206)
!5229 = !DILocation(line: 1165, column: 10, scope: !5206)
!5230 = !DILocation(line: 1167, column: 6, scope: !5231)
!5231 = distinct !DILexicalBlock(scope: !5206, file: !1, line: 1167, column: 6)
!5232 = !DILocation(line: 1167, column: 6, scope: !5206)
!5233 = !DILocalVariable(name: "offs_bone", scope: !5234, file: !1, line: 1168, type: !419)
!5234 = distinct !DILexicalBlock(scope: !5231, file: !1, line: 1167, column: 15)
!5235 = !DILocation(line: 1168, column: 9, scope: !5234)
!5236 = !DILocation(line: 1170, column: 23, scope: !5234)
!5237 = !DILocation(line: 1170, column: 29, scope: !5234)
!5238 = !DILocation(line: 1170, column: 3, scope: !5234)
!5239 = !DILocation(line: 1173, column: 8, scope: !5240)
!5240 = distinct !DILexicalBlock(scope: !5234, file: !1, line: 1173, column: 7)
!5241 = !DILocation(line: 1173, column: 14, scope: !5240)
!5242 = !DILocation(line: 1173, column: 19, scope: !5240)
!5243 = !DILocation(line: 1173, column: 33, scope: !5240)
!5244 = !DILocation(line: 1173, column: 37, scope: !5240)
!5245 = !DILocation(line: 1173, column: 43, scope: !5240)
!5246 = !DILocation(line: 1173, column: 48, scope: !5240)
!5247 = !DILocation(line: 1173, column: 7, scope: !5234)
!5248 = !DILocation(line: 1175, column: 16, scope: !5249)
!5249 = distinct !DILexicalBlock(scope: !5240, file: !1, line: 1173, column: 66)
!5250 = !DILocation(line: 1175, column: 30, scope: !5249)
!5251 = !DILocation(line: 1175, column: 39, scope: !5249)
!5252 = !DILocation(line: 1175, column: 48, scope: !5249)
!5253 = !DILocation(line: 1175, column: 4, scope: !5249)
!5254 = !DILocation(line: 1176, column: 3, scope: !5249)
!5255 = !DILocation(line: 1177, column: 12, scope: !5256)
!5256 = distinct !DILexicalBlock(scope: !5240, file: !1, line: 1177, column: 12)
!5257 = !DILocation(line: 1177, column: 18, scope: !5256)
!5258 = !DILocation(line: 1177, column: 23, scope: !5256)
!5259 = !DILocation(line: 1177, column: 12, scope: !5240)
!5260 = !DILocalVariable(name: "tmat", scope: !5261, file: !1, line: 1179, type: !419)
!5261 = distinct !DILexicalBlock(scope: !5256, file: !1, line: 1177, column: 37)
!5262 = !DILocation(line: 1179, column: 10, scope: !5261)
!5263 = !DILocalVariable(name: "tscale", scope: !5261, file: !1, line: 1179, type: !408)
!5264 = !DILocation(line: 1179, column: 22, scope: !5261)
!5265 = !DILocation(line: 1182, column: 17, scope: !5261)
!5266 = !DILocation(line: 1182, column: 25, scope: !5261)
!5267 = !DILocation(line: 1182, column: 34, scope: !5261)
!5268 = !DILocation(line: 1182, column: 4, scope: !5261)
!5269 = !DILocation(line: 1183, column: 17, scope: !5261)
!5270 = !DILocation(line: 1183, column: 23, scope: !5261)
!5271 = !DILocation(line: 1183, column: 4, scope: !5261)
!5272 = !DILocation(line: 1186, column: 16, scope: !5261)
!5273 = !DILocation(line: 1186, column: 22, scope: !5261)
!5274 = !DILocation(line: 1186, column: 28, scope: !5261)
!5275 = !DILocation(line: 1186, column: 37, scope: !5261)
!5276 = !DILocation(line: 1186, column: 4, scope: !5261)
!5277 = !DILocation(line: 1188, column: 16, scope: !5261)
!5278 = !DILocation(line: 1188, column: 30, scope: !5261)
!5279 = !DILocation(line: 1188, column: 36, scope: !5261)
!5280 = !DILocation(line: 1188, column: 4, scope: !5261)
!5281 = !DILocation(line: 1189, column: 3, scope: !5261)
!5282 = !DILocation(line: 1190, column: 12, scope: !5283)
!5283 = distinct !DILexicalBlock(scope: !5256, file: !1, line: 1190, column: 12)
!5284 = !DILocation(line: 1190, column: 18, scope: !5283)
!5285 = !DILocation(line: 1190, column: 23, scope: !5283)
!5286 = !DILocation(line: 1190, column: 12, scope: !5256)
!5287 = !DILocalVariable(name: "tmat", scope: !5288, file: !1, line: 1192, type: !419)
!5288 = distinct !DILexicalBlock(scope: !5283, file: !1, line: 1190, column: 40)
!5289 = !DILocation(line: 1192, column: 10, scope: !5288)
!5290 = !DILocation(line: 1193, column: 15, scope: !5288)
!5291 = !DILocation(line: 1193, column: 21, scope: !5288)
!5292 = !DILocation(line: 1193, column: 30, scope: !5288)
!5293 = !DILocation(line: 1193, column: 4, scope: !5288)
!5294 = !DILocation(line: 1194, column: 17, scope: !5288)
!5295 = !DILocation(line: 1194, column: 4, scope: !5288)
!5296 = !DILocation(line: 1195, column: 16, scope: !5288)
!5297 = !DILocation(line: 1195, column: 30, scope: !5288)
!5298 = !DILocation(line: 1195, column: 36, scope: !5288)
!5299 = !DILocation(line: 1195, column: 4, scope: !5288)
!5300 = !DILocation(line: 1196, column: 3, scope: !5288)
!5301 = !DILocation(line: 1198, column: 16, scope: !5283)
!5302 = !DILocation(line: 1198, column: 30, scope: !5283)
!5303 = !DILocation(line: 1198, column: 39, scope: !5283)
!5304 = !DILocation(line: 1198, column: 49, scope: !5283)
!5305 = !DILocation(line: 1198, column: 4, scope: !5283)
!5306 = !DILocation(line: 1204, column: 7, scope: !5307)
!5307 = distinct !DILexicalBlock(scope: !5234, file: !1, line: 1204, column: 7)
!5308 = !DILocation(line: 1204, column: 13, scope: !5307)
!5309 = !DILocation(line: 1204, column: 18, scope: !5307)
!5310 = !DILocation(line: 1204, column: 7, scope: !5234)
!5311 = !DILocalVariable(name: "bone_loc", scope: !5312, file: !1, line: 1206, type: !419)
!5312 = distinct !DILexicalBlock(scope: !5307, file: !1, line: 1204, column: 44)
!5313 = !DILocation(line: 1206, column: 10, scope: !5312)
!5314 = !DILocalVariable(name: "bone_rotscale", scope: !5312, file: !1, line: 1206, type: !413)
!5315 = !DILocation(line: 1206, column: 26, scope: !5312)
!5316 = !DILocalVariable(name: "tmat4", scope: !5312, file: !1, line: 1206, type: !419)
!5317 = !DILocation(line: 1206, column: 47, scope: !5312)
!5318 = !DILocalVariable(name: "tmat3", scope: !5312, file: !1, line: 1206, type: !413)
!5319 = !DILocation(line: 1206, column: 60, scope: !5312)
!5320 = !DILocation(line: 1207, column: 12, scope: !5312)
!5321 = !DILocation(line: 1207, column: 4, scope: !5312)
!5322 = !DILocation(line: 1208, column: 12, scope: !5312)
!5323 = !DILocation(line: 1208, column: 4, scope: !5312)
!5324 = !DILocation(line: 1209, column: 12, scope: !5312)
!5325 = !DILocation(line: 1209, column: 4, scope: !5312)
!5326 = !DILocation(line: 1211, column: 16, scope: !5312)
!5327 = !DILocation(line: 1211, column: 29, scope: !5312)
!5328 = !DILocation(line: 1211, column: 38, scope: !5312)
!5329 = !DILocation(line: 1211, column: 48, scope: !5312)
!5330 = !DILocation(line: 1211, column: 4, scope: !5312)
!5331 = !DILocation(line: 1213, column: 12, scope: !5312)
!5332 = !DILocation(line: 1213, column: 4, scope: !5312)
!5333 = !DILocation(line: 1214, column: 15, scope: !5312)
!5334 = !DILocation(line: 1214, column: 22, scope: !5312)
!5335 = !DILocation(line: 1214, column: 31, scope: !5312)
!5336 = !DILocation(line: 1214, column: 4, scope: !5312)
!5337 = !DILocation(line: 1215, column: 16, scope: !5312)
!5338 = !DILocation(line: 1215, column: 31, scope: !5312)
!5339 = !DILocation(line: 1215, column: 38, scope: !5312)
!5340 = !DILocation(line: 1215, column: 4, scope: !5312)
!5341 = !DILocation(line: 1217, column: 15, scope: !5312)
!5342 = !DILocation(line: 1217, column: 22, scope: !5312)
!5343 = !DILocation(line: 1217, column: 4, scope: !5312)
!5344 = !DILocation(line: 1218, column: 16, scope: !5312)
!5345 = !DILocation(line: 1218, column: 25, scope: !5312)
!5346 = !DILocation(line: 1218, column: 35, scope: !5312)
!5347 = !DILocation(line: 1218, column: 4, scope: !5312)
!5348 = !DILocation(line: 1219, column: 3, scope: !5312)
!5349 = !DILocation(line: 1221, column: 12, scope: !5350)
!5350 = distinct !DILexicalBlock(scope: !5307, file: !1, line: 1221, column: 12)
!5351 = !DILocation(line: 1221, column: 18, scope: !5350)
!5352 = !DILocation(line: 1221, column: 23, scope: !5350)
!5353 = !DILocation(line: 1221, column: 12, scope: !5307)
!5354 = !DILocation(line: 1222, column: 16, scope: !5355)
!5355 = distinct !DILexicalBlock(scope: !5350, file: !1, line: 1221, column: 55)
!5356 = !DILocation(line: 1222, column: 25, scope: !5355)
!5357 = !DILocation(line: 1222, column: 34, scope: !5355)
!5358 = !DILocation(line: 1222, column: 44, scope: !5355)
!5359 = !DILocation(line: 1222, column: 4, scope: !5355)
!5360 = !DILocation(line: 1223, column: 3, scope: !5355)
!5361 = !DILocation(line: 1226, column: 15, scope: !5350)
!5362 = !DILocation(line: 1226, column: 24, scope: !5350)
!5363 = !DILocation(line: 1226, column: 4, scope: !5350)
!5364 = !DILocation(line: 1227, column: 2, scope: !5234)
!5365 = !DILocation(line: 1231, column: 14, scope: !5366)
!5366 = distinct !DILexicalBlock(scope: !5231, file: !1, line: 1229, column: 7)
!5367 = !DILocation(line: 1231, column: 28, scope: !5366)
!5368 = !DILocation(line: 1231, column: 35, scope: !5366)
!5369 = !DILocation(line: 1231, column: 41, scope: !5366)
!5370 = !DILocation(line: 1231, column: 3, scope: !5366)
!5371 = !DILocation(line: 1233, column: 7, scope: !5372)
!5372 = distinct !DILexicalBlock(scope: !5366, file: !1, line: 1233, column: 7)
!5373 = !DILocation(line: 1233, column: 14, scope: !5372)
!5374 = !DILocation(line: 1233, column: 20, scope: !5372)
!5375 = !DILocation(line: 1233, column: 25, scope: !5372)
!5376 = !DILocation(line: 1233, column: 7, scope: !5366)
!5377 = !DILocation(line: 1235, column: 12, scope: !5378)
!5378 = distinct !DILexicalBlock(scope: !5372, file: !1, line: 1233, column: 51)
!5379 = !DILocation(line: 1235, column: 4, scope: !5378)
!5380 = !DILocation(line: 1236, column: 15, scope: !5378)
!5381 = !DILocation(line: 1236, column: 27, scope: !5378)
!5382 = !DILocation(line: 1236, column: 34, scope: !5378)
!5383 = !DILocation(line: 1236, column: 40, scope: !5378)
!5384 = !DILocation(line: 1236, column: 4, scope: !5378)
!5385 = !DILocation(line: 1237, column: 3, scope: !5378)
!5386 = !DILocation(line: 1239, column: 15, scope: !5372)
!5387 = !DILocation(line: 1239, column: 24, scope: !5372)
!5388 = !DILocation(line: 1239, column: 4, scope: !5372)
!5389 = !DILocation(line: 1241, column: 1, scope: !5206)
!5390 = distinct !DISubprogram(name: "get_offset_bone_mat", scope: !1, file: !1, line: 1125, type: !5391, scopeLine: 1126, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !544)
!5391 = !DISubroutineType(types: !5392)
!5392 = !{null, !395, !1136}
!5393 = !DILocalVariable(name: "bone", arg: 1, scope: !5390, file: !1, line: 1125, type: !395)
!5394 = !DILocation(line: 1125, column: 39, scope: !5390)
!5395 = !DILocalVariable(name: "offs_bone", arg: 2, scope: !5390, file: !1, line: 1125, type: !1136)
!5396 = !DILocation(line: 1125, column: 51, scope: !5390)
!5397 = !DILocation(line: 1127, column: 7, scope: !5398)
!5398 = distinct !DILexicalBlock(scope: !5390, file: !1, line: 1127, column: 6)
!5399 = !DILocation(line: 1127, column: 13, scope: !5398)
!5400 = !DILocation(line: 1127, column: 6, scope: !5390)
!5401 = !DILocation(line: 1128, column: 3, scope: !5398)
!5402 = !DILocation(line: 1131, column: 13, scope: !5390)
!5403 = !DILocation(line: 1131, column: 24, scope: !5390)
!5404 = !DILocation(line: 1131, column: 30, scope: !5390)
!5405 = !DILocation(line: 1131, column: 2, scope: !5390)
!5406 = !DILocation(line: 1134, column: 13, scope: !5390)
!5407 = !DILocation(line: 1134, column: 27, scope: !5390)
!5408 = !DILocation(line: 1134, column: 33, scope: !5390)
!5409 = !DILocation(line: 1134, column: 2, scope: !5390)
!5410 = !DILocation(line: 1137, column: 21, scope: !5390)
!5411 = !DILocation(line: 1137, column: 27, scope: !5390)
!5412 = !DILocation(line: 1137, column: 35, scope: !5390)
!5413 = !DILocation(line: 1137, column: 2, scope: !5390)
!5414 = !DILocation(line: 1137, column: 18, scope: !5390)
!5415 = !DILocation(line: 1138, column: 1, scope: !5390)
!5416 = distinct !DISubprogram(name: "BKE_armature_mat_pose_to_bone", scope: !1, file: !1, line: 1246, type: !5207, scopeLine: 1247, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !544)
!5417 = !DILocalVariable(name: "pchan", arg: 1, scope: !5416, file: !1, line: 1246, type: !2808)
!5418 = !DILocation(line: 1246, column: 50, scope: !5416)
!5419 = !DILocalVariable(name: "inmat", arg: 2, scope: !5416, file: !1, line: 1246, type: !1136)
!5420 = !DILocation(line: 1246, column: 63, scope: !5416)
!5421 = !DILocalVariable(name: "outmat", arg: 3, scope: !5416, file: !1, line: 1246, type: !1136)
!5422 = !DILocation(line: 1246, column: 82, scope: !5416)
!5423 = !DILocalVariable(name: "rotscale_mat", scope: !5416, file: !1, line: 1248, type: !419)
!5424 = !DILocation(line: 1248, column: 8, scope: !5416)
!5425 = !DILocalVariable(name: "loc_mat", scope: !5416, file: !1, line: 1248, type: !419)
!5426 = !DILocation(line: 1248, column: 28, scope: !5416)
!5427 = !DILocalVariable(name: "inmat_", scope: !5416, file: !1, line: 1248, type: !419)
!5428 = !DILocation(line: 1248, column: 43, scope: !5416)
!5429 = !DILocation(line: 1251, column: 13, scope: !5416)
!5430 = !DILocation(line: 1251, column: 21, scope: !5416)
!5431 = !DILocation(line: 1251, column: 2, scope: !5416)
!5432 = !DILocation(line: 1253, column: 24, scope: !5416)
!5433 = !DILocation(line: 1253, column: 31, scope: !5416)
!5434 = !DILocation(line: 1253, column: 45, scope: !5416)
!5435 = !DILocation(line: 1253, column: 2, scope: !5416)
!5436 = !DILocation(line: 1254, column: 12, scope: !5416)
!5437 = !DILocation(line: 1254, column: 2, scope: !5416)
!5438 = !DILocation(line: 1255, column: 12, scope: !5416)
!5439 = !DILocation(line: 1255, column: 2, scope: !5416)
!5440 = !DILocation(line: 1257, column: 14, scope: !5416)
!5441 = !DILocation(line: 1257, column: 22, scope: !5416)
!5442 = !DILocation(line: 1257, column: 36, scope: !5416)
!5443 = !DILocation(line: 1257, column: 2, scope: !5416)
!5444 = !DILocation(line: 1258, column: 14, scope: !5416)
!5445 = !DILocation(line: 1258, column: 25, scope: !5416)
!5446 = !DILocation(line: 1258, column: 34, scope: !5416)
!5447 = !DILocation(line: 1258, column: 2, scope: !5416)
!5448 = !DILocation(line: 1259, column: 1, scope: !5416)
!5449 = distinct !DISubprogram(name: "BKE_armature_mat_bone_to_pose", scope: !1, file: !1, line: 1262, type: !5207, scopeLine: 1263, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !544)
!5450 = !DILocalVariable(name: "pchan", arg: 1, scope: !5449, file: !1, line: 1262, type: !2808)
!5451 = !DILocation(line: 1262, column: 50, scope: !5449)
!5452 = !DILocalVariable(name: "inmat", arg: 2, scope: !5449, file: !1, line: 1262, type: !1136)
!5453 = !DILocation(line: 1262, column: 63, scope: !5449)
!5454 = !DILocalVariable(name: "outmat", arg: 3, scope: !5449, file: !1, line: 1262, type: !1136)
!5455 = !DILocation(line: 1262, column: 82, scope: !5449)
!5456 = !DILocalVariable(name: "rotscale_mat", scope: !5449, file: !1, line: 1264, type: !419)
!5457 = !DILocation(line: 1264, column: 8, scope: !5449)
!5458 = !DILocalVariable(name: "loc_mat", scope: !5449, file: !1, line: 1264, type: !419)
!5459 = !DILocation(line: 1264, column: 28, scope: !5449)
!5460 = !DILocalVariable(name: "inmat_", scope: !5449, file: !1, line: 1264, type: !419)
!5461 = !DILocation(line: 1264, column: 43, scope: !5449)
!5462 = !DILocation(line: 1267, column: 13, scope: !5449)
!5463 = !DILocation(line: 1267, column: 21, scope: !5449)
!5464 = !DILocation(line: 1267, column: 2, scope: !5449)
!5465 = !DILocation(line: 1269, column: 24, scope: !5449)
!5466 = !DILocation(line: 1269, column: 31, scope: !5449)
!5467 = !DILocation(line: 1269, column: 45, scope: !5449)
!5468 = !DILocation(line: 1269, column: 2, scope: !5449)
!5469 = !DILocation(line: 1271, column: 14, scope: !5449)
!5470 = !DILocation(line: 1271, column: 22, scope: !5449)
!5471 = !DILocation(line: 1271, column: 36, scope: !5449)
!5472 = !DILocation(line: 1271, column: 2, scope: !5449)
!5473 = !DILocation(line: 1272, column: 14, scope: !5449)
!5474 = !DILocation(line: 1272, column: 25, scope: !5449)
!5475 = !DILocation(line: 1272, column: 34, scope: !5449)
!5476 = !DILocation(line: 1272, column: 2, scope: !5449)
!5477 = !DILocation(line: 1273, column: 1, scope: !5449)
!5478 = distinct !DISubprogram(name: "BKE_armature_loc_pose_to_bone", scope: !1, file: !1, line: 1278, type: !5479, scopeLine: 1279, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !544)
!5479 = !DISubroutineType(types: !5480)
!5480 = !{null, !2808, !1073, !1099}
!5481 = !DILocalVariable(name: "pchan", arg: 1, scope: !5478, file: !1, line: 1278, type: !2808)
!5482 = !DILocation(line: 1278, column: 50, scope: !5478)
!5483 = !DILocalVariable(name: "inloc", arg: 2, scope: !5478, file: !1, line: 1278, type: !1073)
!5484 = !DILocation(line: 1278, column: 69, scope: !5478)
!5485 = !DILocalVariable(name: "outloc", arg: 3, scope: !5478, file: !1, line: 1278, type: !1099)
!5486 = !DILocation(line: 1278, column: 85, scope: !5478)
!5487 = !DILocalVariable(name: "xLocMat", scope: !5478, file: !1, line: 1280, type: !419)
!5488 = !DILocation(line: 1280, column: 8, scope: !5478)
!5489 = !DILocalVariable(name: "nLocMat", scope: !5478, file: !1, line: 1281, type: !419)
!5490 = !DILocation(line: 1281, column: 8, scope: !5478)
!5491 = !DILocation(line: 1284, column: 10, scope: !5478)
!5492 = !DILocation(line: 1284, column: 2, scope: !5478)
!5493 = !DILocation(line: 1285, column: 13, scope: !5478)
!5494 = !DILocation(line: 1285, column: 25, scope: !5478)
!5495 = !DILocation(line: 1285, column: 2, scope: !5478)
!5496 = !DILocation(line: 1288, column: 32, scope: !5478)
!5497 = !DILocation(line: 1288, column: 39, scope: !5478)
!5498 = !DILocation(line: 1288, column: 48, scope: !5478)
!5499 = !DILocation(line: 1288, column: 2, scope: !5478)
!5500 = !DILocation(line: 1289, column: 13, scope: !5478)
!5501 = !DILocation(line: 1289, column: 21, scope: !5478)
!5502 = !DILocation(line: 1289, column: 2, scope: !5478)
!5503 = !DILocation(line: 1290, column: 1, scope: !5478)
!5504 = distinct !DISubprogram(name: "BKE_armature_mat_pose_to_bone_ex", scope: !1, file: !1, line: 1292, type: !5505, scopeLine: 1293, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !544)
!5505 = !DISubroutineType(types: !5506)
!5506 = !{null, !569, !2808, !1136, !1136}
!5507 = !DILocalVariable(name: "ob", arg: 1, scope: !5504, file: !1, line: 1292, type: !569)
!5508 = !DILocation(line: 1292, column: 47, scope: !5504)
!5509 = !DILocalVariable(name: "pchan", arg: 2, scope: !5504, file: !1, line: 1292, type: !2808)
!5510 = !DILocation(line: 1292, column: 65, scope: !5504)
!5511 = !DILocalVariable(name: "inmat", arg: 3, scope: !5504, file: !1, line: 1292, type: !1136)
!5512 = !DILocation(line: 1292, column: 78, scope: !5504)
!5513 = !DILocalVariable(name: "outmat", arg: 4, scope: !5504, file: !1, line: 1292, type: !1136)
!5514 = !DILocation(line: 1292, column: 97, scope: !5504)
!5515 = !DILocalVariable(name: "work_pchan", scope: !5504, file: !1, line: 1294, type: !2809)
!5516 = !DILocation(line: 1294, column: 15, scope: !5504)
!5517 = !DILocation(line: 1294, column: 29, scope: !5504)
!5518 = !DILocation(line: 1294, column: 28, scope: !5504)
!5519 = !DILocation(line: 1298, column: 31, scope: !5504)
!5520 = !DILocation(line: 1298, column: 2, scope: !5504)
!5521 = !DILocation(line: 1303, column: 10, scope: !5504)
!5522 = !DILocation(line: 1303, column: 2, scope: !5504)
!5523 = !DILocation(line: 1304, column: 36, scope: !5504)
!5524 = !DILocation(line: 1304, column: 2, scope: !5504)
!5525 = !DILocation(line: 1306, column: 45, scope: !5504)
!5526 = !DILocation(line: 1306, column: 52, scope: !5504)
!5527 = !DILocation(line: 1306, column: 2, scope: !5504)
!5528 = !DILocation(line: 1307, column: 1, scope: !5504)
!5529 = distinct !DISubprogram(name: "BKE_pose_where_is_bone", scope: !1, file: !1, line: 2454, type: !5530, scopeLine: 2455, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !544)
!5530 = !DISubroutineType(types: !5531)
!5531 = !{null, !5532, !569, !2808, !366, !1130}
!5532 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5533, size: 64)
!5533 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !652, line: 1299, baseType: !1316)
!5534 = !DILocalVariable(name: "scene", arg: 1, scope: !5529, file: !1, line: 2454, type: !5532)
!5535 = !DILocation(line: 2454, column: 36, scope: !5529)
!5536 = !DILocalVariable(name: "ob", arg: 2, scope: !5529, file: !1, line: 2454, type: !569)
!5537 = !DILocation(line: 2454, column: 51, scope: !5529)
!5538 = !DILocalVariable(name: "pchan", arg: 3, scope: !5529, file: !1, line: 2454, type: !2808)
!5539 = !DILocation(line: 2454, column: 69, scope: !5529)
!5540 = !DILocalVariable(name: "ctime", arg: 4, scope: !5529, file: !1, line: 2454, type: !366)
!5541 = !DILocation(line: 2454, column: 82, scope: !5529)
!5542 = !DILocalVariable(name: "do_extra", arg: 5, scope: !5529, file: !1, line: 2454, type: !1130)
!5543 = !DILocation(line: 2454, column: 94, scope: !5529)
!5544 = !DILocation(line: 2457, column: 6, scope: !5545)
!5545 = distinct !DILexicalBlock(scope: !5529, file: !1, line: 2457, column: 6)
!5546 = !DILocation(line: 2457, column: 6, scope: !5529)
!5547 = !DILocation(line: 2458, column: 22, scope: !5545)
!5548 = !DILocation(line: 2458, column: 3, scope: !5545)
!5549 = !DILocation(line: 2460, column: 11, scope: !5545)
!5550 = !DILocation(line: 2460, column: 18, scope: !5545)
!5551 = !DILocation(line: 2460, column: 3, scope: !5545)
!5552 = !DILocation(line: 2464, column: 32, scope: !5529)
!5553 = !DILocation(line: 2464, column: 39, scope: !5529)
!5554 = !DILocation(line: 2464, column: 46, scope: !5529)
!5555 = !DILocation(line: 2464, column: 56, scope: !5529)
!5556 = !DILocation(line: 2464, column: 63, scope: !5529)
!5557 = !DILocation(line: 2464, column: 2, scope: !5529)
!5558 = !DILocation(line: 2468, column: 7, scope: !5559)
!5559 = distinct !DILexicalBlock(scope: !5529, file: !1, line: 2468, column: 6)
!5560 = !DILocation(line: 2468, column: 14, scope: !5559)
!5561 = !DILocation(line: 2468, column: 6, scope: !5529)
!5562 = !DILocation(line: 2469, column: 8, scope: !5563)
!5563 = distinct !DILexicalBlock(scope: !5564, file: !1, line: 2469, column: 7)
!5564 = distinct !DILexicalBlock(scope: !5559, file: !1, line: 2468, column: 22)
!5565 = !DILocation(line: 2469, column: 15, scope: !5563)
!5566 = !DILocation(line: 2469, column: 21, scope: !5563)
!5567 = !DILocation(line: 2469, column: 26, scope: !5563)
!5568 = !DILocation(line: 2469, column: 50, scope: !5563)
!5569 = !DILocation(line: 2469, column: 7, scope: !5564)
!5570 = !DILocation(line: 2470, column: 14, scope: !5563)
!5571 = !DILocation(line: 2470, column: 21, scope: !5563)
!5572 = !DILocation(line: 2470, column: 34, scope: !5563)
!5573 = !DILocation(line: 2470, column: 38, scope: !5563)
!5574 = !DILocation(line: 2470, column: 44, scope: !5563)
!5575 = !DILocation(line: 2470, column: 4, scope: !5563)
!5576 = !DILocation(line: 2471, column: 2, scope: !5564)
!5577 = !DILocation(line: 2473, column: 6, scope: !5578)
!5578 = distinct !DILexicalBlock(scope: !5529, file: !1, line: 2473, column: 6)
!5579 = !DILocation(line: 2473, column: 6, scope: !5529)
!5580 = !DILocation(line: 2480, column: 7, scope: !5581)
!5581 = distinct !DILexicalBlock(scope: !5582, file: !1, line: 2480, column: 7)
!5582 = distinct !DILexicalBlock(scope: !5578, file: !1, line: 2473, column: 16)
!5583 = !DILocation(line: 2480, column: 14, scope: !5581)
!5584 = !DILocation(line: 2480, column: 26, scope: !5581)
!5585 = !DILocation(line: 2480, column: 7, scope: !5582)
!5586 = !DILocalVariable(name: "cob", scope: !5587, file: !1, line: 2481, type: !5588)
!5587 = distinct !DILexicalBlock(scope: !5581, file: !1, line: 2480, column: 33)
!5588 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5589, size: 64)
!5589 = !DIDerivedType(tag: DW_TAG_typedef, name: "bConstraintOb", file: !5590, line: 60, baseType: !5591)
!5590 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_constraint.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5591 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bConstraintOb", file: !5590, line: 50, size: 1280, elements: !5592)
!5592 = !{!5593, !5594, !5595, !5596, !5597, !5598, !5599}
!5593 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !5591, file: !5590, line: 51, baseType: !1315, size: 64)
!5594 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !5591, file: !5590, line: 52, baseType: !585, size: 64, offset: 64)
!5595 = !DIDerivedType(tag: DW_TAG_member, name: "pchan", scope: !5591, file: !5590, line: 53, baseType: !2813, size: 64, offset: 128)
!5596 = !DIDerivedType(tag: DW_TAG_member, name: "matrix", scope: !5591, file: !5590, line: 55, baseType: !419, size: 512, offset: 192)
!5597 = !DIDerivedType(tag: DW_TAG_member, name: "startmat", scope: !5591, file: !5590, line: 56, baseType: !419, size: 512, offset: 704)
!5598 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !5591, file: !5590, line: 58, baseType: !284, size: 16, offset: 1216)
!5599 = !DIDerivedType(tag: DW_TAG_member, name: "rotOrder", scope: !5591, file: !5590, line: 59, baseType: !284, size: 16, offset: 1232)
!5600 = !DILocation(line: 2481, column: 19, scope: !5587)
!5601 = !DILocalVariable(name: "vec", scope: !5587, file: !1, line: 2482, type: !408)
!5602 = !DILocation(line: 2482, column: 10, scope: !5587)
!5603 = !DILocation(line: 2485, column: 15, scope: !5587)
!5604 = !DILocation(line: 2485, column: 20, scope: !5587)
!5605 = !DILocation(line: 2485, column: 27, scope: !5587)
!5606 = !DILocation(line: 2485, column: 4, scope: !5587)
!5607 = !DILocation(line: 2490, column: 38, scope: !5587)
!5608 = !DILocation(line: 2490, column: 45, scope: !5587)
!5609 = !DILocation(line: 2490, column: 49, scope: !5587)
!5610 = !DILocation(line: 2490, column: 10, scope: !5587)
!5611 = !DILocation(line: 2490, column: 8, scope: !5587)
!5612 = !DILocation(line: 2493, column: 27, scope: !5587)
!5613 = !DILocation(line: 2493, column: 34, scope: !5587)
!5614 = !DILocation(line: 2493, column: 47, scope: !5587)
!5615 = !DILocation(line: 2493, column: 52, scope: !5587)
!5616 = !DILocation(line: 2493, column: 4, scope: !5587)
!5617 = !DILocation(line: 2498, column: 33, scope: !5587)
!5618 = !DILocation(line: 2498, column: 4, scope: !5587)
!5619 = !DILocation(line: 2501, column: 8, scope: !5620)
!5620 = distinct !DILexicalBlock(scope: !5587, file: !1, line: 2501, column: 8)
!5621 = !DILocation(line: 2501, column: 15, scope: !5620)
!5622 = !DILocation(line: 2501, column: 21, scope: !5620)
!5623 = !DILocation(line: 2501, column: 26, scope: !5620)
!5624 = !DILocation(line: 2501, column: 8, scope: !5587)
!5625 = !DILocation(line: 2502, column: 16, scope: !5626)
!5626 = distinct !DILexicalBlock(scope: !5620, file: !1, line: 2501, column: 44)
!5627 = !DILocation(line: 2502, column: 23, scope: !5626)
!5628 = !DILocation(line: 2502, column: 36, scope: !5626)
!5629 = !DILocation(line: 2502, column: 5, scope: !5626)
!5630 = !DILocation(line: 2503, column: 4, scope: !5626)
!5631 = !DILocation(line: 2504, column: 3, scope: !5587)
!5632 = !DILocation(line: 2505, column: 2, scope: !5582)
!5633 = !DILocation(line: 2508, column: 13, scope: !5529)
!5634 = !DILocation(line: 2508, column: 20, scope: !5529)
!5635 = !DILocation(line: 2508, column: 31, scope: !5529)
!5636 = !DILocation(line: 2508, column: 38, scope: !5529)
!5637 = !DILocation(line: 2508, column: 2, scope: !5529)
!5638 = !DILocation(line: 2510, column: 30, scope: !5529)
!5639 = !DILocation(line: 2510, column: 2, scope: !5529)
!5640 = !DILocation(line: 2511, column: 1, scope: !5529)
!5641 = distinct !DISubprogram(name: "BKE_pchan_apply_mat4", scope: !1, file: !1, line: 1330, type: !5642, scopeLine: 1331, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !544)
!5642 = !DISubroutineType(types: !5643)
!5643 = !{null, !2808, !1136, !1130}
!5644 = !DILocalVariable(name: "pchan", arg: 1, scope: !5641, file: !1, line: 1330, type: !2808)
!5645 = !DILocation(line: 1330, column: 41, scope: !5641)
!5646 = !DILocalVariable(name: "mat", arg: 2, scope: !5641, file: !1, line: 1330, type: !1136)
!5647 = !DILocation(line: 1330, column: 54, scope: !5641)
!5648 = !DILocalVariable(name: "use_compat", arg: 3, scope: !5641, file: !1, line: 1330, type: !1130)
!5649 = !DILocation(line: 1330, column: 70, scope: !5641)
!5650 = !DILocalVariable(name: "rot", scope: !5641, file: !1, line: 1332, type: !413)
!5651 = !DILocation(line: 1332, column: 8, scope: !5641)
!5652 = !DILocation(line: 1333, column: 23, scope: !5641)
!5653 = !DILocation(line: 1333, column: 30, scope: !5641)
!5654 = !DILocation(line: 1333, column: 35, scope: !5641)
!5655 = !DILocation(line: 1333, column: 40, scope: !5641)
!5656 = !DILocation(line: 1333, column: 47, scope: !5641)
!5657 = !DILocation(line: 1333, column: 53, scope: !5641)
!5658 = !DILocation(line: 1333, column: 2, scope: !5641)
!5659 = !DILocation(line: 1334, column: 24, scope: !5641)
!5660 = !DILocation(line: 1334, column: 31, scope: !5641)
!5661 = !DILocation(line: 1334, column: 36, scope: !5641)
!5662 = !DILocation(line: 1334, column: 2, scope: !5641)
!5663 = !DILocation(line: 1335, column: 1, scope: !5641)
!5664 = distinct !DISubprogram(name: "BKE_pchan_mat3_to_rot", scope: !1, file: !1, line: 1310, type: !5665, scopeLine: 1311, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !544)
!5665 = !DISubroutineType(types: !5666)
!5666 = !{null, !2808, !1108, !1130}
!5667 = !DILocalVariable(name: "pchan", arg: 1, scope: !5664, file: !1, line: 1310, type: !2808)
!5668 = !DILocation(line: 1310, column: 42, scope: !5664)
!5669 = !DILocalVariable(name: "mat", arg: 2, scope: !5664, file: !1, line: 1310, type: !1108)
!5670 = !DILocation(line: 1310, column: 55, scope: !5664)
!5671 = !DILocalVariable(name: "use_compat", arg: 3, scope: !5664, file: !1, line: 1310, type: !1130)
!5672 = !DILocation(line: 1310, column: 71, scope: !5664)
!5673 = !DILocation(line: 1312, column: 10, scope: !5664)
!5674 = !DILocation(line: 1312, column: 17, scope: !5664)
!5675 = !DILocation(line: 1312, column: 2, scope: !5664)
!5676 = !DILocation(line: 1314, column: 17, scope: !5677)
!5677 = distinct !DILexicalBlock(scope: !5664, file: !1, line: 1312, column: 26)
!5678 = !DILocation(line: 1314, column: 24, scope: !5677)
!5679 = !DILocation(line: 1314, column: 30, scope: !5677)
!5680 = !DILocation(line: 1314, column: 4, scope: !5677)
!5681 = !DILocation(line: 1315, column: 4, scope: !5677)
!5682 = !DILocation(line: 1317, column: 23, scope: !5677)
!5683 = !DILocation(line: 1317, column: 30, scope: !5677)
!5684 = !DILocation(line: 1317, column: 40, scope: !5677)
!5685 = !DILocation(line: 1317, column: 47, scope: !5677)
!5686 = !DILocation(line: 1317, column: 57, scope: !5677)
!5687 = !DILocation(line: 1317, column: 4, scope: !5677)
!5688 = !DILocation(line: 1318, column: 4, scope: !5677)
!5689 = !DILocation(line: 1320, column: 8, scope: !5690)
!5690 = distinct !DILexicalBlock(scope: !5677, file: !1, line: 1320, column: 8)
!5691 = !DILocation(line: 1320, column: 8, scope: !5677)
!5692 = !DILocation(line: 1321, column: 29, scope: !5690)
!5693 = !DILocation(line: 1321, column: 36, scope: !5690)
!5694 = !DILocation(line: 1321, column: 41, scope: !5690)
!5695 = !DILocation(line: 1321, column: 48, scope: !5690)
!5696 = !DILocation(line: 1321, column: 53, scope: !5690)
!5697 = !DILocation(line: 1321, column: 60, scope: !5690)
!5698 = !DILocation(line: 1321, column: 69, scope: !5690)
!5699 = !DILocation(line: 1321, column: 5, scope: !5690)
!5700 = !DILocation(line: 1323, column: 18, scope: !5690)
!5701 = !DILocation(line: 1323, column: 25, scope: !5690)
!5702 = !DILocation(line: 1323, column: 30, scope: !5690)
!5703 = !DILocation(line: 1323, column: 37, scope: !5690)
!5704 = !DILocation(line: 1323, column: 46, scope: !5690)
!5705 = !DILocation(line: 1323, column: 5, scope: !5690)
!5706 = !DILocation(line: 1324, column: 4, scope: !5677)
!5707 = !DILocation(line: 1326, column: 1, scope: !5664)
!5708 = distinct !DISubprogram(name: "BKE_armature_mat_pose_to_delta", scope: !1, file: !1, line: 1340, type: !5709, scopeLine: 1341, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !544)
!5709 = !DISubroutineType(types: !5710)
!5710 = !{null, !1136, !1136, !1136}
!5711 = !DILocalVariable(name: "delta_mat", arg: 1, scope: !5708, file: !1, line: 1340, type: !1136)
!5712 = !DILocation(line: 1340, column: 43, scope: !5708)
!5713 = !DILocalVariable(name: "pose_mat", arg: 2, scope: !5708, file: !1, line: 1340, type: !1136)
!5714 = !DILocation(line: 1340, column: 66, scope: !5708)
!5715 = !DILocalVariable(name: "arm_mat", arg: 3, scope: !5708, file: !1, line: 1340, type: !1136)
!5716 = !DILocation(line: 1340, column: 88, scope: !5708)
!5717 = !DILocalVariable(name: "imat", scope: !5708, file: !1, line: 1342, type: !419)
!5718 = !DILocation(line: 1342, column: 8, scope: !5708)
!5719 = !DILocation(line: 1344, column: 15, scope: !5708)
!5720 = !DILocation(line: 1344, column: 21, scope: !5708)
!5721 = !DILocation(line: 1344, column: 2, scope: !5708)
!5722 = !DILocation(line: 1345, column: 14, scope: !5708)
!5723 = !DILocation(line: 1345, column: 25, scope: !5708)
!5724 = !DILocation(line: 1345, column: 31, scope: !5708)
!5725 = !DILocation(line: 1345, column: 2, scope: !5708)
!5726 = !DILocation(line: 1346, column: 1, scope: !5708)
!5727 = distinct !DISubprogram(name: "BKE_rotMode_change_values", scope: !1, file: !1, line: 1354, type: !5728, scopeLine: 1355, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !544)
!5728 = !DISubroutineType(types: !5729)
!5729 = !{null, !1099, !1099, !1099, !1099, !284, !284}
!5730 = !DILocalVariable(name: "quat", arg: 1, scope: !5727, file: !1, line: 1354, type: !1099)
!5731 = !DILocation(line: 1354, column: 38, scope: !5727)
!5732 = !DILocalVariable(name: "eul", arg: 2, scope: !5727, file: !1, line: 1354, type: !1099)
!5733 = !DILocation(line: 1354, column: 53, scope: !5727)
!5734 = !DILocalVariable(name: "axis", arg: 3, scope: !5727, file: !1, line: 1354, type: !1099)
!5735 = !DILocation(line: 1354, column: 67, scope: !5727)
!5736 = !DILocalVariable(name: "angle", arg: 4, scope: !5727, file: !1, line: 1354, type: !1099)
!5737 = !DILocation(line: 1354, column: 83, scope: !5727)
!5738 = !DILocalVariable(name: "oldMode", arg: 5, scope: !5727, file: !1, line: 1354, type: !284)
!5739 = !DILocation(line: 1354, column: 96, scope: !5727)
!5740 = !DILocalVariable(name: "newMode", arg: 6, scope: !5727, file: !1, line: 1354, type: !284)
!5741 = !DILocation(line: 1354, column: 111, scope: !5727)
!5742 = !DILocation(line: 1357, column: 6, scope: !5743)
!5743 = distinct !DILexicalBlock(scope: !5727, file: !1, line: 1357, column: 6)
!5744 = !DILocation(line: 1357, column: 14, scope: !5743)
!5745 = !DILocation(line: 1357, column: 6, scope: !5727)
!5746 = !DILocation(line: 1358, column: 7, scope: !5747)
!5747 = distinct !DILexicalBlock(scope: !5748, file: !1, line: 1358, column: 7)
!5748 = distinct !DILexicalBlock(scope: !5743, file: !1, line: 1357, column: 19)
!5749 = !DILocation(line: 1358, column: 15, scope: !5747)
!5750 = !DILocation(line: 1358, column: 7, scope: !5748)
!5751 = !DILocation(line: 1360, column: 23, scope: !5752)
!5752 = distinct !DILexicalBlock(scope: !5747, file: !1, line: 1358, column: 38)
!5753 = !DILocation(line: 1360, column: 28, scope: !5752)
!5754 = !DILocation(line: 1360, column: 37, scope: !5752)
!5755 = !DILocation(line: 1360, column: 44, scope: !5752)
!5756 = !DILocation(line: 1360, column: 43, scope: !5752)
!5757 = !DILocation(line: 1360, column: 4, scope: !5752)
!5758 = !DILocation(line: 1361, column: 3, scope: !5752)
!5759 = !DILocation(line: 1362, column: 12, scope: !5760)
!5760 = distinct !DILexicalBlock(scope: !5747, file: !1, line: 1362, column: 12)
!5761 = !DILocation(line: 1362, column: 20, scope: !5760)
!5762 = !DILocation(line: 1362, column: 12, scope: !5747)
!5763 = !DILocation(line: 1364, column: 17, scope: !5764)
!5764 = distinct !DILexicalBlock(scope: !5760, file: !1, line: 1362, column: 38)
!5765 = !DILocation(line: 1364, column: 4, scope: !5764)
!5766 = !DILocation(line: 1365, column: 17, scope: !5764)
!5767 = !DILocation(line: 1365, column: 22, scope: !5764)
!5768 = !DILocation(line: 1365, column: 31, scope: !5764)
!5769 = !DILocation(line: 1365, column: 4, scope: !5764)
!5770 = !DILocation(line: 1366, column: 3, scope: !5764)
!5771 = !DILocation(line: 1368, column: 2, scope: !5748)
!5772 = !DILocation(line: 1369, column: 11, scope: !5773)
!5773 = distinct !DILexicalBlock(scope: !5743, file: !1, line: 1369, column: 11)
!5774 = !DILocation(line: 1369, column: 19, scope: !5773)
!5775 = !DILocation(line: 1369, column: 11, scope: !5743)
!5776 = !DILocation(line: 1370, column: 7, scope: !5777)
!5777 = distinct !DILexicalBlock(scope: !5778, file: !1, line: 1370, column: 7)
!5778 = distinct !DILexicalBlock(scope: !5773, file: !1, line: 1369, column: 37)
!5779 = !DILocation(line: 1370, column: 15, scope: !5777)
!5780 = !DILocation(line: 1370, column: 7, scope: !5778)
!5781 = !DILocation(line: 1372, column: 23, scope: !5782)
!5782 = distinct !DILexicalBlock(scope: !5777, file: !1, line: 1370, column: 38)
!5783 = !DILocation(line: 1372, column: 29, scope: !5782)
!5784 = !DILocation(line: 1372, column: 36, scope: !5782)
!5785 = !DILocation(line: 1372, column: 35, scope: !5782)
!5786 = !DILocation(line: 1372, column: 4, scope: !5782)
!5787 = !DILocation(line: 1373, column: 3, scope: !5782)
!5788 = !DILocation(line: 1374, column: 12, scope: !5789)
!5789 = distinct !DILexicalBlock(scope: !5777, file: !1, line: 1374, column: 12)
!5790 = !DILocation(line: 1374, column: 20, scope: !5789)
!5791 = !DILocation(line: 1374, column: 12, scope: !5777)
!5792 = !DILocation(line: 1376, column: 17, scope: !5793)
!5793 = distinct !DILexicalBlock(scope: !5789, file: !1, line: 1374, column: 25)
!5794 = !DILocation(line: 1376, column: 23, scope: !5793)
!5795 = !DILocation(line: 1376, column: 28, scope: !5793)
!5796 = !DILocation(line: 1376, column: 4, scope: !5793)
!5797 = !DILocation(line: 1377, column: 3, scope: !5793)
!5798 = !DILocation(line: 1379, column: 2, scope: !5778)
!5799 = !DILocation(line: 1380, column: 11, scope: !5800)
!5800 = distinct !DILexicalBlock(scope: !5773, file: !1, line: 1380, column: 11)
!5801 = !DILocation(line: 1380, column: 19, scope: !5800)
!5802 = !DILocation(line: 1380, column: 11, scope: !5773)
!5803 = !DILocation(line: 1381, column: 7, scope: !5804)
!5804 = distinct !DILexicalBlock(scope: !5805, file: !1, line: 1381, column: 7)
!5805 = distinct !DILexicalBlock(scope: !5800, file: !1, line: 1380, column: 42)
!5806 = !DILocation(line: 1381, column: 15, scope: !5804)
!5807 = !DILocation(line: 1381, column: 7, scope: !5805)
!5808 = !DILocation(line: 1383, column: 23, scope: !5809)
!5809 = distinct !DILexicalBlock(scope: !5804, file: !1, line: 1381, column: 20)
!5810 = !DILocation(line: 1383, column: 29, scope: !5809)
!5811 = !DILocation(line: 1383, column: 36, scope: !5809)
!5812 = !DILocation(line: 1383, column: 41, scope: !5809)
!5813 = !DILocation(line: 1383, column: 4, scope: !5809)
!5814 = !DILocation(line: 1384, column: 3, scope: !5809)
!5815 = !DILocation(line: 1385, column: 12, scope: !5816)
!5816 = distinct !DILexicalBlock(scope: !5804, file: !1, line: 1385, column: 12)
!5817 = !DILocation(line: 1385, column: 20, scope: !5816)
!5818 = !DILocation(line: 1385, column: 12, scope: !5804)
!5819 = !DILocation(line: 1387, column: 17, scope: !5820)
!5820 = distinct !DILexicalBlock(scope: !5816, file: !1, line: 1385, column: 38)
!5821 = !DILocation(line: 1387, column: 4, scope: !5820)
!5822 = !DILocation(line: 1388, column: 23, scope: !5820)
!5823 = !DILocation(line: 1388, column: 29, scope: !5820)
!5824 = !DILocation(line: 1388, column: 36, scope: !5820)
!5825 = !DILocation(line: 1388, column: 4, scope: !5820)
!5826 = !DILocation(line: 1389, column: 3, scope: !5820)
!5827 = !DILocation(line: 1392, column: 7, scope: !5828)
!5828 = distinct !DILexicalBlock(scope: !5805, file: !1, line: 1392, column: 7)
!5829 = !DILocation(line: 1392, column: 32, scope: !5828)
!5830 = !DILocation(line: 1392, column: 35, scope: !5828)
!5831 = !DILocation(line: 1392, column: 7, scope: !5805)
!5832 = !DILocation(line: 1394, column: 4, scope: !5833)
!5833 = distinct !DILexicalBlock(scope: !5828, file: !1, line: 1392, column: 61)
!5834 = !DILocation(line: 1394, column: 12, scope: !5833)
!5835 = !DILocation(line: 1395, column: 3, scope: !5833)
!5836 = !DILocation(line: 1396, column: 2, scope: !5805)
!5837 = !DILocation(line: 1397, column: 1, scope: !5727)
!5838 = distinct !DISubprogram(name: "mat3_to_vec_roll", scope: !1, file: !1, line: 1421, type: !5839, scopeLine: 1422, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !544)
!5839 = !DISubroutineType(types: !5840)
!5840 = !{null, !1108, !1099, !1099}
!5841 = !DILocalVariable(name: "mat", arg: 1, scope: !5838, file: !1, line: 1421, type: !1108)
!5842 = !DILocation(line: 1421, column: 29, scope: !5838)
!5843 = !DILocalVariable(name: "r_vec", arg: 2, scope: !5838, file: !1, line: 1421, type: !1099)
!5844 = !DILocation(line: 1421, column: 46, scope: !5838)
!5845 = !DILocalVariable(name: "r_roll", arg: 3, scope: !5838, file: !1, line: 1421, type: !1099)
!5846 = !DILocation(line: 1421, column: 63, scope: !5838)
!5847 = !DILocation(line: 1423, column: 6, scope: !5848)
!5848 = distinct !DILexicalBlock(scope: !5838, file: !1, line: 1423, column: 6)
!5849 = !DILocation(line: 1423, column: 6, scope: !5838)
!5850 = !DILocation(line: 1424, column: 14, scope: !5851)
!5851 = distinct !DILexicalBlock(scope: !5848, file: !1, line: 1423, column: 13)
!5852 = !DILocation(line: 1424, column: 21, scope: !5851)
!5853 = !DILocation(line: 1424, column: 3, scope: !5851)
!5854 = !DILocation(line: 1425, column: 2, scope: !5851)
!5855 = !DILocation(line: 1427, column: 6, scope: !5856)
!5856 = distinct !DILexicalBlock(scope: !5838, file: !1, line: 1427, column: 6)
!5857 = !DILocation(line: 1427, column: 6, scope: !5838)
!5858 = !DILocalVariable(name: "vecmat", scope: !5859, file: !1, line: 1428, type: !413)
!5859 = distinct !DILexicalBlock(scope: !5856, file: !1, line: 1427, column: 14)
!5860 = !DILocation(line: 1428, column: 9, scope: !5859)
!5861 = !DILocalVariable(name: "vecmatinv", scope: !5859, file: !1, line: 1428, type: !413)
!5862 = !DILocation(line: 1428, column: 23, scope: !5859)
!5863 = !DILocalVariable(name: "rollmat", scope: !5859, file: !1, line: 1428, type: !413)
!5864 = !DILocation(line: 1428, column: 40, scope: !5859)
!5865 = !DILocation(line: 1430, column: 20, scope: !5859)
!5866 = !DILocation(line: 1430, column: 34, scope: !5859)
!5867 = !DILocation(line: 1430, column: 3, scope: !5859)
!5868 = !DILocation(line: 1431, column: 16, scope: !5859)
!5869 = !DILocation(line: 1431, column: 27, scope: !5859)
!5870 = !DILocation(line: 1431, column: 3, scope: !5859)
!5871 = !DILocation(line: 1432, column: 15, scope: !5859)
!5872 = !DILocation(line: 1432, column: 24, scope: !5859)
!5873 = !DILocation(line: 1432, column: 35, scope: !5859)
!5874 = !DILocation(line: 1432, column: 3, scope: !5859)
!5875 = !DILocation(line: 1434, column: 20, scope: !5859)
!5876 = !DILocation(line: 1434, column: 35, scope: !5859)
!5877 = !DILocation(line: 1434, column: 13, scope: !5859)
!5878 = !DILocation(line: 1434, column: 4, scope: !5859)
!5879 = !DILocation(line: 1434, column: 11, scope: !5859)
!5880 = !DILocation(line: 1435, column: 2, scope: !5859)
!5881 = !DILocation(line: 1436, column: 1, scope: !5838)
!5882 = distinct !DISubprogram(name: "vec_roll_to_mat3_normalized", scope: !1, file: !1, line: 1484, type: !3311, scopeLine: 1485, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !544)
!5883 = !DILocalVariable(name: "nor", arg: 1, scope: !5882, file: !1, line: 1484, type: !1073)
!5884 = !DILocation(line: 1484, column: 46, scope: !5882)
!5885 = !DILocalVariable(name: "roll", arg: 2, scope: !5882, file: !1, line: 1484, type: !882)
!5886 = !DILocation(line: 1484, column: 66, scope: !5882)
!5887 = !DILocalVariable(name: "mat", arg: 3, scope: !5882, file: !1, line: 1484, type: !1108)
!5888 = !DILocation(line: 1484, column: 78, scope: !5882)
!5889 = !DILocalVariable(name: "theta", scope: !5882, file: !1, line: 1489, type: !366)
!5890 = !DILocation(line: 1489, column: 8, scope: !5882)
!5891 = !DILocalVariable(name: "rMatrix", scope: !5882, file: !1, line: 1490, type: !413)
!5892 = !DILocation(line: 1490, column: 8, scope: !5882)
!5893 = !DILocalVariable(name: "bMatrix", scope: !5882, file: !1, line: 1490, type: !413)
!5894 = !DILocation(line: 1490, column: 23, scope: !5882)
!5895 = !DILocation(line: 1492, column: 17, scope: !5882)
!5896 = !DILocation(line: 1492, column: 15, scope: !5882)
!5897 = !DILocation(line: 1492, column: 8, scope: !5882)
!5898 = !DILocation(line: 1503, column: 6, scope: !5899)
!5899 = distinct !DILexicalBlock(scope: !5882, file: !1, line: 1503, column: 6)
!5900 = !DILocation(line: 1503, column: 12, scope: !5899)
!5901 = !DILocation(line: 1503, column: 41, scope: !5899)
!5902 = !DILocation(line: 1503, column: 46, scope: !5899)
!5903 = !DILocation(line: 1503, column: 53, scope: !5899)
!5904 = !DILocation(line: 1503, column: 56, scope: !5899)
!5905 = !DILocation(line: 1503, column: 64, scope: !5899)
!5906 = !DILocation(line: 1503, column: 67, scope: !5899)
!5907 = !DILocation(line: 1503, column: 73, scope: !5899)
!5908 = !DILocation(line: 1503, column: 6, scope: !5882)
!5909 = !DILocation(line: 1507, column: 20, scope: !5910)
!5910 = distinct !DILexicalBlock(scope: !5899, file: !1, line: 1503, column: 98)
!5911 = !DILocation(line: 1507, column: 19, scope: !5910)
!5912 = !DILocation(line: 1507, column: 3, scope: !5910)
!5913 = !DILocation(line: 1507, column: 17, scope: !5910)
!5914 = !DILocation(line: 1508, column: 19, scope: !5910)
!5915 = !DILocation(line: 1508, column: 3, scope: !5910)
!5916 = !DILocation(line: 1508, column: 17, scope: !5910)
!5917 = !DILocation(line: 1509, column: 19, scope: !5910)
!5918 = !DILocation(line: 1509, column: 3, scope: !5910)
!5919 = !DILocation(line: 1509, column: 17, scope: !5910)
!5920 = !DILocation(line: 1510, column: 19, scope: !5910)
!5921 = !DILocation(line: 1510, column: 3, scope: !5910)
!5922 = !DILocation(line: 1510, column: 17, scope: !5910)
!5923 = !DILocation(line: 1511, column: 20, scope: !5910)
!5924 = !DILocation(line: 1511, column: 19, scope: !5910)
!5925 = !DILocation(line: 1511, column: 3, scope: !5910)
!5926 = !DILocation(line: 1511, column: 17, scope: !5910)
!5927 = !DILocation(line: 1512, column: 7, scope: !5928)
!5928 = distinct !DILexicalBlock(scope: !5910, file: !1, line: 1512, column: 7)
!5929 = !DILocation(line: 1512, column: 13, scope: !5928)
!5930 = !DILocation(line: 1512, column: 7, scope: !5910)
!5931 = !DILocation(line: 1514, column: 24, scope: !5932)
!5932 = distinct !DILexicalBlock(scope: !5928, file: !1, line: 1512, column: 43)
!5933 = !DILocation(line: 1514, column: 33, scope: !5932)
!5934 = !DILocation(line: 1514, column: 31, scope: !5932)
!5935 = !DILocation(line: 1514, column: 42, scope: !5932)
!5936 = !DILocation(line: 1514, column: 40, scope: !5932)
!5937 = !DILocation(line: 1514, column: 22, scope: !5932)
!5938 = !DILocation(line: 1514, column: 4, scope: !5932)
!5939 = !DILocation(line: 1514, column: 18, scope: !5932)
!5940 = !DILocation(line: 1515, column: 24, scope: !5932)
!5941 = !DILocation(line: 1515, column: 33, scope: !5932)
!5942 = !DILocation(line: 1515, column: 31, scope: !5932)
!5943 = !DILocation(line: 1515, column: 42, scope: !5932)
!5944 = !DILocation(line: 1515, column: 40, scope: !5932)
!5945 = !DILocation(line: 1515, column: 22, scope: !5932)
!5946 = !DILocation(line: 1515, column: 4, scope: !5932)
!5947 = !DILocation(line: 1515, column: 18, scope: !5932)
!5948 = !DILocation(line: 1516, column: 37, scope: !5932)
!5949 = !DILocation(line: 1516, column: 36, scope: !5932)
!5950 = !DILocation(line: 1516, column: 46, scope: !5932)
!5951 = !DILocation(line: 1516, column: 44, scope: !5932)
!5952 = !DILocation(line: 1516, column: 55, scope: !5932)
!5953 = !DILocation(line: 1516, column: 53, scope: !5932)
!5954 = !DILocation(line: 1516, column: 20, scope: !5932)
!5955 = !DILocation(line: 1516, column: 34, scope: !5932)
!5956 = !DILocation(line: 1516, column: 4, scope: !5932)
!5957 = !DILocation(line: 1516, column: 18, scope: !5932)
!5958 = !DILocation(line: 1517, column: 3, scope: !5932)
!5959 = !DILocation(line: 1520, column: 12, scope: !5960)
!5960 = distinct !DILexicalBlock(scope: !5928, file: !1, line: 1518, column: 8)
!5961 = !DILocation(line: 1520, column: 21, scope: !5960)
!5962 = !DILocation(line: 1520, column: 19, scope: !5960)
!5963 = !DILocation(line: 1520, column: 30, scope: !5960)
!5964 = !DILocation(line: 1520, column: 39, scope: !5960)
!5965 = !DILocation(line: 1520, column: 37, scope: !5960)
!5966 = !DILocation(line: 1520, column: 28, scope: !5960)
!5967 = !DILocation(line: 1520, column: 10, scope: !5960)
!5968 = !DILocation(line: 1521, column: 21, scope: !5960)
!5969 = !DILocation(line: 1521, column: 30, scope: !5960)
!5970 = !DILocation(line: 1521, column: 28, scope: !5960)
!5971 = !DILocation(line: 1521, column: 41, scope: !5960)
!5972 = !DILocation(line: 1521, column: 50, scope: !5960)
!5973 = !DILocation(line: 1521, column: 48, scope: !5960)
!5974 = !DILocation(line: 1521, column: 38, scope: !5960)
!5975 = !DILocation(line: 1521, column: 61, scope: !5960)
!5976 = !DILocation(line: 1521, column: 60, scope: !5960)
!5977 = !DILocation(line: 1521, column: 58, scope: !5960)
!5978 = !DILocation(line: 1521, column: 4, scope: !5960)
!5979 = !DILocation(line: 1521, column: 18, scope: !5960)
!5980 = !DILocation(line: 1522, column: 21, scope: !5960)
!5981 = !DILocation(line: 1522, column: 20, scope: !5960)
!5982 = !DILocation(line: 1522, column: 4, scope: !5960)
!5983 = !DILocation(line: 1522, column: 18, scope: !5960)
!5984 = !DILocation(line: 1523, column: 43, scope: !5960)
!5985 = !DILocation(line: 1523, column: 41, scope: !5960)
!5986 = !DILocation(line: 1523, column: 52, scope: !5960)
!5987 = !DILocation(line: 1523, column: 50, scope: !5960)
!5988 = !DILocation(line: 1523, column: 61, scope: !5960)
!5989 = !DILocation(line: 1523, column: 59, scope: !5960)
!5990 = !DILocation(line: 1523, column: 20, scope: !5960)
!5991 = !DILocation(line: 1523, column: 34, scope: !5960)
!5992 = !DILocation(line: 1523, column: 4, scope: !5960)
!5993 = !DILocation(line: 1523, column: 18, scope: !5960)
!5994 = !DILocation(line: 1525, column: 2, scope: !5910)
!5995 = !DILocation(line: 1528, column: 11, scope: !5996)
!5996 = distinct !DILexicalBlock(scope: !5899, file: !1, line: 1526, column: 7)
!5997 = !DILocation(line: 1528, column: 3, scope: !5996)
!5998 = !DILocation(line: 1529, column: 19, scope: !5996)
!5999 = !DILocation(line: 1529, column: 33, scope: !5996)
!6000 = !DILocation(line: 1529, column: 3, scope: !5996)
!6001 = !DILocation(line: 1529, column: 17, scope: !5996)
!6002 = !DILocation(line: 1533, column: 32, scope: !5882)
!6003 = !DILocation(line: 1533, column: 41, scope: !5882)
!6004 = !DILocation(line: 1533, column: 46, scope: !5882)
!6005 = !DILocation(line: 1533, column: 2, scope: !5882)
!6006 = !DILocation(line: 1536, column: 14, scope: !5882)
!6007 = !DILocation(line: 1536, column: 19, scope: !5882)
!6008 = !DILocation(line: 1536, column: 28, scope: !5882)
!6009 = !DILocation(line: 1536, column: 2, scope: !5882)
!6010 = !DILocation(line: 1540, column: 1, scope: !5882)
!6011 = distinct !DISubprogram(name: "normalize_v3_v3", scope: !3267, file: !3267, line: 788, type: !6012, scopeLine: 789, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !544)
!6012 = !DISubroutineType(types: !6013)
!6013 = !{!366, !1099, !1073}
!6014 = !DILocalVariable(name: "r", arg: 1, scope: !6011, file: !3267, line: 788, type: !1099)
!6015 = !DILocation(line: 788, column: 37, scope: !6011)
!6016 = !DILocalVariable(name: "a", arg: 2, scope: !6011, file: !3267, line: 788, type: !1073)
!6017 = !DILocation(line: 788, column: 55, scope: !6011)
!6018 = !DILocalVariable(name: "d", scope: !6011, file: !3267, line: 790, type: !366)
!6019 = !DILocation(line: 790, column: 8, scope: !6011)
!6020 = !DILocation(line: 790, column: 21, scope: !6011)
!6021 = !DILocation(line: 790, column: 24, scope: !6011)
!6022 = !DILocation(line: 790, column: 12, scope: !6011)
!6023 = !DILocation(line: 794, column: 6, scope: !6024)
!6024 = distinct !DILexicalBlock(scope: !6011, file: !3267, line: 794, column: 6)
!6025 = !DILocation(line: 794, column: 8, scope: !6024)
!6026 = !DILocation(line: 794, column: 6, scope: !6011)
!6027 = !DILocation(line: 795, column: 13, scope: !6028)
!6028 = distinct !DILexicalBlock(scope: !6024, file: !3267, line: 794, column: 20)
!6029 = !DILocation(line: 795, column: 7, scope: !6028)
!6030 = !DILocation(line: 795, column: 5, scope: !6028)
!6031 = !DILocation(line: 796, column: 15, scope: !6028)
!6032 = !DILocation(line: 796, column: 18, scope: !6028)
!6033 = !DILocation(line: 796, column: 28, scope: !6028)
!6034 = !DILocation(line: 796, column: 26, scope: !6028)
!6035 = !DILocation(line: 796, column: 3, scope: !6028)
!6036 = !DILocation(line: 797, column: 2, scope: !6028)
!6037 = !DILocation(line: 799, column: 11, scope: !6038)
!6038 = distinct !DILexicalBlock(scope: !6024, file: !3267, line: 798, column: 7)
!6039 = !DILocation(line: 799, column: 3, scope: !6038)
!6040 = !DILocation(line: 800, column: 5, scope: !6038)
!6041 = !DILocation(line: 803, column: 9, scope: !6011)
!6042 = !DILocation(line: 803, column: 2, scope: !6011)
!6043 = distinct !DISubprogram(name: "BKE_armature_where_is_bone", scope: !1, file: !1, line: 1552, type: !6044, scopeLine: 1553, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !544)
!6044 = !DISubroutineType(types: !6045)
!6045 = !{null, !395, !395}
!6046 = !DILocalVariable(name: "bone", arg: 1, scope: !6043, file: !1, line: 1552, type: !395)
!6047 = !DILocation(line: 1552, column: 39, scope: !6043)
!6048 = !DILocalVariable(name: "prevbone", arg: 2, scope: !6043, file: !1, line: 1552, type: !395)
!6049 = !DILocation(line: 1552, column: 51, scope: !6043)
!6050 = !DILocalVariable(name: "vec", scope: !6043, file: !1, line: 1554, type: !408)
!6051 = !DILocation(line: 1554, column: 8, scope: !6043)
!6052 = !DILocation(line: 1557, column: 14, scope: !6043)
!6053 = !DILocation(line: 1557, column: 19, scope: !6043)
!6054 = !DILocation(line: 1557, column: 25, scope: !6043)
!6055 = !DILocation(line: 1557, column: 31, scope: !6043)
!6056 = !DILocation(line: 1557, column: 37, scope: !6043)
!6057 = !DILocation(line: 1557, column: 2, scope: !6043)
!6058 = !DILocation(line: 1558, column: 19, scope: !6043)
!6059 = !DILocation(line: 1558, column: 24, scope: !6043)
!6060 = !DILocation(line: 1558, column: 30, scope: !6043)
!6061 = !DILocation(line: 1558, column: 36, scope: !6043)
!6062 = !DILocation(line: 1558, column: 42, scope: !6043)
!6063 = !DILocation(line: 1558, column: 2, scope: !6043)
!6064 = !DILocation(line: 1560, column: 26, scope: !6043)
!6065 = !DILocation(line: 1560, column: 32, scope: !6043)
!6066 = !DILocation(line: 1560, column: 38, scope: !6043)
!6067 = !DILocation(line: 1560, column: 44, scope: !6043)
!6068 = !DILocation(line: 1560, column: 17, scope: !6043)
!6069 = !DILocation(line: 1560, column: 2, scope: !6043)
!6070 = !DILocation(line: 1560, column: 8, scope: !6043)
!6071 = !DILocation(line: 1560, column: 15, scope: !6043)
!6072 = !DILocation(line: 1563, column: 6, scope: !6073)
!6073 = distinct !DILexicalBlock(scope: !6043, file: !1, line: 1563, column: 6)
!6074 = !DILocation(line: 1563, column: 12, scope: !6073)
!6075 = !DILocation(line: 1563, column: 19, scope: !6073)
!6076 = !DILocation(line: 1563, column: 6, scope: !6043)
!6077 = !DILocation(line: 1564, column: 3, scope: !6078)
!6078 = distinct !DILexicalBlock(scope: !6073, file: !1, line: 1563, column: 28)
!6079 = !DILocation(line: 1564, column: 9, scope: !6078)
!6080 = !DILocation(line: 1564, column: 16, scope: !6078)
!6081 = !DILocation(line: 1565, column: 3, scope: !6078)
!6082 = !DILocation(line: 1565, column: 9, scope: !6078)
!6083 = !DILocation(line: 1565, column: 16, scope: !6078)
!6084 = !DILocation(line: 1566, column: 3, scope: !6078)
!6085 = !DILocation(line: 1566, column: 9, scope: !6078)
!6086 = !DILocation(line: 1566, column: 18, scope: !6078)
!6087 = !DILocation(line: 1567, column: 2, scope: !6078)
!6088 = !DILocation(line: 1569, column: 6, scope: !6089)
!6089 = distinct !DILexicalBlock(scope: !6043, file: !1, line: 1569, column: 6)
!6090 = !DILocation(line: 1569, column: 6, scope: !6043)
!6091 = !DILocalVariable(name: "offs_bone", scope: !6092, file: !1, line: 1570, type: !419)
!6092 = distinct !DILexicalBlock(scope: !6089, file: !1, line: 1569, column: 16)
!6093 = !DILocation(line: 1570, column: 9, scope: !6092)
!6094 = !DILocation(line: 1572, column: 23, scope: !6092)
!6095 = !DILocation(line: 1572, column: 29, scope: !6092)
!6096 = !DILocation(line: 1572, column: 3, scope: !6092)
!6097 = !DILocation(line: 1575, column: 15, scope: !6092)
!6098 = !DILocation(line: 1575, column: 21, scope: !6092)
!6099 = !DILocation(line: 1575, column: 30, scope: !6092)
!6100 = !DILocation(line: 1575, column: 40, scope: !6092)
!6101 = !DILocation(line: 1575, column: 49, scope: !6092)
!6102 = !DILocation(line: 1575, column: 3, scope: !6092)
!6103 = !DILocation(line: 1576, column: 2, scope: !6092)
!6104 = !DILocation(line: 1578, column: 14, scope: !6105)
!6105 = distinct !DILexicalBlock(scope: !6089, file: !1, line: 1577, column: 7)
!6106 = !DILocation(line: 1578, column: 20, scope: !6105)
!6107 = !DILocation(line: 1578, column: 29, scope: !6105)
!6108 = !DILocation(line: 1578, column: 35, scope: !6105)
!6109 = !DILocation(line: 1578, column: 3, scope: !6105)
!6110 = !DILocation(line: 1579, column: 14, scope: !6105)
!6111 = !DILocation(line: 1579, column: 20, scope: !6105)
!6112 = !DILocation(line: 1579, column: 32, scope: !6105)
!6113 = !DILocation(line: 1579, column: 38, scope: !6105)
!6114 = !DILocation(line: 1579, column: 3, scope: !6105)
!6115 = !DILocation(line: 1583, column: 13, scope: !6043)
!6116 = !DILocation(line: 1583, column: 11, scope: !6043)
!6117 = !DILocation(line: 1584, column: 14, scope: !6118)
!6118 = distinct !DILexicalBlock(scope: !6043, file: !1, line: 1584, column: 2)
!6119 = !DILocation(line: 1584, column: 20, scope: !6118)
!6120 = !DILocation(line: 1584, column: 30, scope: !6118)
!6121 = !DILocation(line: 1584, column: 12, scope: !6118)
!6122 = !DILocation(line: 1584, column: 7, scope: !6118)
!6123 = !DILocation(line: 1584, column: 37, scope: !6124)
!6124 = distinct !DILexicalBlock(scope: !6118, file: !1, line: 1584, column: 2)
!6125 = !DILocation(line: 1584, column: 2, scope: !6118)
!6126 = !DILocation(line: 1585, column: 30, scope: !6127)
!6127 = distinct !DILexicalBlock(scope: !6124, file: !1, line: 1584, column: 62)
!6128 = !DILocation(line: 1585, column: 36, scope: !6127)
!6129 = !DILocation(line: 1585, column: 3, scope: !6127)
!6130 = !DILocation(line: 1586, column: 2, scope: !6127)
!6131 = !DILocation(line: 1584, column: 50, scope: !6124)
!6132 = !DILocation(line: 1584, column: 56, scope: !6124)
!6133 = !DILocation(line: 1584, column: 48, scope: !6124)
!6134 = !DILocation(line: 1584, column: 2, scope: !6124)
!6135 = distinct !{!6135, !6125, !6136}
!6136 = !DILocation(line: 1586, column: 2, scope: !6118)
!6137 = !DILocation(line: 1587, column: 1, scope: !6043)
!6138 = distinct !DISubprogram(name: "len_v3v3", scope: !3267, file: !3267, line: 759, type: !3677, scopeLine: 760, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !544)
!6139 = !DILocalVariable(name: "a", arg: 1, scope: !6138, file: !3267, line: 759, type: !1073)
!6140 = !DILocation(line: 759, column: 36, scope: !6138)
!6141 = !DILocalVariable(name: "b", arg: 2, scope: !6138, file: !3267, line: 759, type: !1073)
!6142 = !DILocation(line: 759, column: 54, scope: !6138)
!6143 = !DILocalVariable(name: "d", scope: !6138, file: !3267, line: 761, type: !408)
!6144 = !DILocation(line: 761, column: 8, scope: !6138)
!6145 = !DILocation(line: 763, column: 14, scope: !6138)
!6146 = !DILocation(line: 763, column: 17, scope: !6138)
!6147 = !DILocation(line: 763, column: 20, scope: !6138)
!6148 = !DILocation(line: 763, column: 2, scope: !6138)
!6149 = !DILocation(line: 764, column: 16, scope: !6138)
!6150 = !DILocation(line: 764, column: 9, scope: !6138)
!6151 = !DILocation(line: 764, column: 2, scope: !6138)
!6152 = distinct !DISubprogram(name: "BKE_armature_where_is", scope: !1, file: !1, line: 1591, type: !2088, scopeLine: 1592, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !544)
!6153 = !DILocalVariable(name: "arm", arg: 1, scope: !6152, file: !1, line: 1591, type: !245)
!6154 = !DILocation(line: 1591, column: 39, scope: !6152)
!6155 = !DILocalVariable(name: "bone", scope: !6152, file: !1, line: 1593, type: !395)
!6156 = !DILocation(line: 1593, column: 8, scope: !6152)
!6157 = !DILocation(line: 1596, column: 14, scope: !6158)
!6158 = distinct !DILexicalBlock(scope: !6152, file: !1, line: 1596, column: 2)
!6159 = !DILocation(line: 1596, column: 19, scope: !6158)
!6160 = !DILocation(line: 1596, column: 28, scope: !6158)
!6161 = !DILocation(line: 1596, column: 12, scope: !6158)
!6162 = !DILocation(line: 1596, column: 7, scope: !6158)
!6163 = !DILocation(line: 1596, column: 35, scope: !6164)
!6164 = distinct !DILexicalBlock(scope: !6158, file: !1, line: 1596, column: 2)
!6165 = !DILocation(line: 1596, column: 2, scope: !6158)
!6166 = !DILocation(line: 1597, column: 30, scope: !6167)
!6167 = distinct !DILexicalBlock(scope: !6164, file: !1, line: 1596, column: 60)
!6168 = !DILocation(line: 1597, column: 3, scope: !6167)
!6169 = !DILocation(line: 1598, column: 2, scope: !6167)
!6170 = !DILocation(line: 1596, column: 48, scope: !6164)
!6171 = !DILocation(line: 1596, column: 54, scope: !6164)
!6172 = !DILocation(line: 1596, column: 46, scope: !6164)
!6173 = !DILocation(line: 1596, column: 2, scope: !6164)
!6174 = distinct !{!6174, !6165, !6175}
!6175 = !DILocation(line: 1598, column: 2, scope: !6158)
!6176 = !DILocation(line: 1599, column: 1, scope: !6152)
!6177 = distinct !DISubprogram(name: "BKE_pose_rebuild", scope: !1, file: !1, line: 1763, type: !6178, scopeLine: 1764, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !544)
!6178 = !DISubroutineType(types: !6179)
!6179 = !{null, !569, !245}
!6180 = !DILocalVariable(name: "ob", arg: 1, scope: !6177, file: !1, line: 1763, type: !569)
!6181 = !DILocation(line: 1763, column: 31, scope: !6177)
!6182 = !DILocalVariable(name: "arm", arg: 2, scope: !6177, file: !1, line: 1763, type: !245)
!6183 = !DILocation(line: 1763, column: 46, scope: !6177)
!6184 = !DILocalVariable(name: "bone", scope: !6177, file: !1, line: 1765, type: !395)
!6185 = !DILocation(line: 1765, column: 8, scope: !6177)
!6186 = !DILocalVariable(name: "pose", scope: !6177, file: !1, line: 1766, type: !6187)
!6187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6188, size: 64)
!6188 = !DIDerivedType(tag: DW_TAG_typedef, name: "bPose", file: !140, line: 356, baseType: !609)
!6189 = !DILocation(line: 1766, column: 9, scope: !6177)
!6190 = !DILocalVariable(name: "pchan", scope: !6177, file: !1, line: 1767, type: !2808)
!6191 = !DILocation(line: 1767, column: 16, scope: !6177)
!6192 = !DILocalVariable(name: "next", scope: !6177, file: !1, line: 1767, type: !2808)
!6193 = !DILocation(line: 1767, column: 24, scope: !6177)
!6194 = !DILocalVariable(name: "counter", scope: !6177, file: !1, line: 1768, type: !141)
!6195 = !DILocation(line: 1768, column: 6, scope: !6177)
!6196 = !DILocation(line: 1771, column: 6, scope: !6197)
!6197 = distinct !DILexicalBlock(scope: !6177, file: !1, line: 1771, column: 6)
!6198 = !DILocation(line: 1771, column: 10, scope: !6197)
!6199 = !DILocation(line: 1771, column: 15, scope: !6197)
!6200 = !DILocation(line: 1771, column: 6, scope: !6177)
!6201 = !DILocation(line: 1773, column: 14, scope: !6202)
!6202 = distinct !DILexicalBlock(scope: !6197, file: !1, line: 1771, column: 24)
!6203 = !DILocation(line: 1773, column: 3, scope: !6202)
!6204 = !DILocation(line: 1773, column: 7, scope: !6202)
!6205 = !DILocation(line: 1773, column: 12, scope: !6202)
!6206 = !DILocation(line: 1776, column: 26, scope: !6202)
!6207 = !DILocation(line: 1776, column: 30, scope: !6202)
!6208 = !DILocation(line: 1776, column: 36, scope: !6202)
!6209 = !DILocation(line: 1776, column: 3, scope: !6202)
!6210 = !DILocation(line: 1777, column: 2, scope: !6202)
!6211 = !DILocation(line: 1778, column: 9, scope: !6177)
!6212 = !DILocation(line: 1778, column: 13, scope: !6177)
!6213 = !DILocation(line: 1778, column: 7, scope: !6177)
!6214 = !DILocation(line: 1781, column: 15, scope: !6215)
!6215 = distinct !DILexicalBlock(scope: !6177, file: !1, line: 1781, column: 2)
!6216 = !DILocation(line: 1781, column: 21, scope: !6215)
!6217 = !DILocation(line: 1781, column: 30, scope: !6215)
!6218 = !DILocation(line: 1781, column: 13, scope: !6215)
!6219 = !DILocation(line: 1781, column: 7, scope: !6215)
!6220 = !DILocation(line: 1781, column: 37, scope: !6221)
!6221 = distinct !DILexicalBlock(scope: !6215, file: !1, line: 1781, column: 2)
!6222 = !DILocation(line: 1781, column: 2, scope: !6215)
!6223 = !DILocation(line: 1782, column: 3, scope: !6224)
!6224 = distinct !DILexicalBlock(scope: !6221, file: !1, line: 1781, column: 65)
!6225 = !DILocation(line: 1782, column: 10, scope: !6224)
!6226 = !DILocation(line: 1782, column: 15, scope: !6224)
!6227 = !DILocation(line: 1783, column: 3, scope: !6224)
!6228 = !DILocation(line: 1783, column: 10, scope: !6224)
!6229 = !DILocation(line: 1783, column: 16, scope: !6224)
!6230 = !DILocation(line: 1784, column: 2, scope: !6224)
!6231 = !DILocation(line: 1781, column: 52, scope: !6221)
!6232 = !DILocation(line: 1781, column: 59, scope: !6221)
!6233 = !DILocation(line: 1781, column: 50, scope: !6221)
!6234 = !DILocation(line: 1781, column: 2, scope: !6221)
!6235 = distinct !{!6235, !6222, !6236}
!6236 = !DILocation(line: 1784, column: 2, scope: !6215)
!6237 = !DILocation(line: 1787, column: 14, scope: !6238)
!6238 = distinct !DILexicalBlock(scope: !6177, file: !1, line: 1787, column: 2)
!6239 = !DILocation(line: 1787, column: 19, scope: !6238)
!6240 = !DILocation(line: 1787, column: 28, scope: !6238)
!6241 = !DILocation(line: 1787, column: 12, scope: !6238)
!6242 = !DILocation(line: 1787, column: 7, scope: !6238)
!6243 = !DILocation(line: 1787, column: 35, scope: !6244)
!6244 = distinct !DILexicalBlock(scope: !6238, file: !1, line: 1787, column: 2)
!6245 = !DILocation(line: 1787, column: 2, scope: !6238)
!6246 = !DILocation(line: 1788, column: 31, scope: !6247)
!6247 = distinct !DILexicalBlock(scope: !6244, file: !1, line: 1787, column: 60)
!6248 = !DILocation(line: 1788, column: 37, scope: !6247)
!6249 = !DILocation(line: 1788, column: 49, scope: !6247)
!6250 = !DILocation(line: 1788, column: 13, scope: !6247)
!6251 = !DILocation(line: 1788, column: 11, scope: !6247)
!6252 = !DILocation(line: 1789, column: 2, scope: !6247)
!6253 = !DILocation(line: 1787, column: 48, scope: !6244)
!6254 = !DILocation(line: 1787, column: 54, scope: !6244)
!6255 = !DILocation(line: 1787, column: 46, scope: !6244)
!6256 = !DILocation(line: 1787, column: 2, scope: !6244)
!6257 = distinct !{!6257, !6245, !6258}
!6258 = !DILocation(line: 1789, column: 2, scope: !6238)
!6259 = !DILocation(line: 1792, column: 15, scope: !6260)
!6260 = distinct !DILexicalBlock(scope: !6177, file: !1, line: 1792, column: 2)
!6261 = !DILocation(line: 1792, column: 21, scope: !6260)
!6262 = !DILocation(line: 1792, column: 30, scope: !6260)
!6263 = !DILocation(line: 1792, column: 13, scope: !6260)
!6264 = !DILocation(line: 1792, column: 7, scope: !6260)
!6265 = !DILocation(line: 1792, column: 37, scope: !6266)
!6266 = distinct !DILexicalBlock(scope: !6260, file: !1, line: 1792, column: 2)
!6267 = !DILocation(line: 1792, column: 2, scope: !6260)
!6268 = !DILocation(line: 1793, column: 10, scope: !6269)
!6269 = distinct !DILexicalBlock(scope: !6266, file: !1, line: 1792, column: 58)
!6270 = !DILocation(line: 1793, column: 17, scope: !6269)
!6271 = !DILocation(line: 1793, column: 8, scope: !6269)
!6272 = !DILocation(line: 1794, column: 7, scope: !6273)
!6273 = distinct !DILexicalBlock(scope: !6269, file: !1, line: 1794, column: 7)
!6274 = !DILocation(line: 1794, column: 14, scope: !6273)
!6275 = !DILocation(line: 1794, column: 19, scope: !6273)
!6276 = !DILocation(line: 1794, column: 7, scope: !6269)
!6277 = !DILocation(line: 1795, column: 26, scope: !6278)
!6278 = distinct !DILexicalBlock(scope: !6273, file: !1, line: 1794, column: 28)
!6279 = !DILocation(line: 1795, column: 4, scope: !6278)
!6280 = !DILocation(line: 1796, column: 32, scope: !6278)
!6281 = !DILocation(line: 1796, column: 4, scope: !6278)
!6282 = !DILocation(line: 1797, column: 19, scope: !6278)
!6283 = !DILocation(line: 1797, column: 25, scope: !6278)
!6284 = !DILocation(line: 1797, column: 35, scope: !6278)
!6285 = !DILocation(line: 1797, column: 4, scope: !6278)
!6286 = !DILocation(line: 1798, column: 3, scope: !6278)
!6287 = !DILocation(line: 1799, column: 2, scope: !6269)
!6288 = !DILocation(line: 1792, column: 52, scope: !6266)
!6289 = !DILocation(line: 1792, column: 50, scope: !6266)
!6290 = !DILocation(line: 1792, column: 2, scope: !6266)
!6291 = distinct !{!6291, !6267, !6292}
!6292 = !DILocation(line: 1799, column: 2, scope: !6260)
!6293 = !DILocation(line: 1803, column: 6, scope: !6294)
!6294 = distinct !DILexicalBlock(scope: !6177, file: !1, line: 1803, column: 6)
!6295 = !DILocation(line: 1803, column: 10, scope: !6294)
!6296 = !DILocation(line: 1803, column: 6, scope: !6177)
!6297 = !DILocation(line: 1804, column: 33, scope: !6298)
!6298 = distinct !DILexicalBlock(scope: !6294, file: !1, line: 1803, column: 17)
!6299 = !DILocation(line: 1804, column: 37, scope: !6298)
!6300 = !DILocation(line: 1804, column: 41, scope: !6298)
!6301 = !DILocation(line: 1804, column: 3, scope: !6298)
!6302 = !DILocation(line: 1805, column: 26, scope: !6298)
!6303 = !DILocation(line: 1805, column: 30, scope: !6298)
!6304 = !DILocation(line: 1805, column: 34, scope: !6298)
!6305 = !DILocation(line: 1805, column: 41, scope: !6298)
!6306 = !DILocation(line: 1805, column: 46, scope: !6298)
!6307 = !DILocation(line: 1805, column: 3, scope: !6298)
!6308 = !DILocation(line: 1806, column: 2, scope: !6298)
!6309 = !DILocation(line: 1808, column: 35, scope: !6177)
!6310 = !DILocation(line: 1808, column: 39, scope: !6177)
!6311 = !DILocation(line: 1808, column: 2, scope: !6177)
!6312 = !DILocation(line: 1811, column: 6, scope: !6313)
!6313 = distinct !DILexicalBlock(scope: !6177, file: !1, line: 1811, column: 6)
!6314 = !DILocation(line: 1811, column: 14, scope: !6313)
!6315 = !DILocation(line: 1811, column: 6, scope: !6177)
!6316 = !DILocation(line: 1812, column: 17, scope: !6313)
!6317 = !DILocation(line: 1812, column: 3, scope: !6313)
!6318 = !DILocation(line: 1814, column: 2, scope: !6177)
!6319 = !DILocation(line: 1814, column: 6, scope: !6177)
!6320 = !DILocation(line: 1814, column: 12, scope: !6177)
!6321 = !DILocation(line: 1814, column: 17, scope: !6177)
!6322 = !DILocation(line: 1815, column: 2, scope: !6177)
!6323 = !DILocation(line: 1815, column: 6, scope: !6177)
!6324 = !DILocation(line: 1815, column: 12, scope: !6177)
!6325 = !DILocation(line: 1815, column: 17, scope: !6177)
!6326 = !DILocation(line: 1817, column: 30, scope: !6177)
!6327 = !DILocation(line: 1817, column: 34, scope: !6177)
!6328 = !DILocation(line: 1817, column: 2, scope: !6177)
!6329 = !DILocation(line: 1818, column: 1, scope: !6177)
!6330 = distinct !DISubprogram(name: "rebuild_pose_bone", scope: !1, file: !1, line: 1742, type: !6331, scopeLine: 1743, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !544)
!6331 = !DISubroutineType(types: !6332)
!6332 = !{!141, !6187, !395, !2808, !141}
!6333 = !DILocalVariable(name: "pose", arg: 1, scope: !6330, file: !1, line: 1742, type: !6187)
!6334 = !DILocation(line: 1742, column: 37, scope: !6330)
!6335 = !DILocalVariable(name: "bone", arg: 2, scope: !6330, file: !1, line: 1742, type: !395)
!6336 = !DILocation(line: 1742, column: 49, scope: !6330)
!6337 = !DILocalVariable(name: "parchan", arg: 3, scope: !6330, file: !1, line: 1742, type: !2808)
!6338 = !DILocation(line: 1742, column: 69, scope: !6330)
!6339 = !DILocalVariable(name: "counter", arg: 4, scope: !6330, file: !1, line: 1742, type: !141)
!6340 = !DILocation(line: 1742, column: 82, scope: !6330)
!6341 = !DILocalVariable(name: "pchan", scope: !6330, file: !1, line: 1744, type: !2808)
!6342 = !DILocation(line: 1744, column: 16, scope: !6330)
!6343 = !DILocation(line: 1744, column: 48, scope: !6330)
!6344 = !DILocation(line: 1744, column: 54, scope: !6330)
!6345 = !DILocation(line: 1744, column: 60, scope: !6330)
!6346 = !DILocation(line: 1744, column: 24, scope: !6330)
!6347 = !DILocation(line: 1746, column: 16, scope: !6330)
!6348 = !DILocation(line: 1746, column: 2, scope: !6330)
!6349 = !DILocation(line: 1746, column: 9, scope: !6330)
!6350 = !DILocation(line: 1746, column: 14, scope: !6330)
!6351 = !DILocation(line: 1747, column: 18, scope: !6330)
!6352 = !DILocation(line: 1747, column: 2, scope: !6330)
!6353 = !DILocation(line: 1747, column: 9, scope: !6330)
!6354 = !DILocation(line: 1747, column: 16, scope: !6330)
!6355 = !DILocation(line: 1749, column: 9, scope: !6330)
!6356 = !DILocation(line: 1751, column: 14, scope: !6357)
!6357 = distinct !DILexicalBlock(scope: !6330, file: !1, line: 1751, column: 2)
!6358 = !DILocation(line: 1751, column: 20, scope: !6357)
!6359 = !DILocation(line: 1751, column: 30, scope: !6357)
!6360 = !DILocation(line: 1751, column: 12, scope: !6357)
!6361 = !DILocation(line: 1751, column: 7, scope: !6357)
!6362 = !DILocation(line: 1751, column: 37, scope: !6363)
!6363 = distinct !DILexicalBlock(scope: !6357, file: !1, line: 1751, column: 2)
!6364 = !DILocation(line: 1751, column: 2, scope: !6357)
!6365 = !DILocation(line: 1752, column: 31, scope: !6366)
!6366 = distinct !DILexicalBlock(scope: !6363, file: !1, line: 1751, column: 62)
!6367 = !DILocation(line: 1752, column: 37, scope: !6366)
!6368 = !DILocation(line: 1752, column: 43, scope: !6366)
!6369 = !DILocation(line: 1752, column: 50, scope: !6366)
!6370 = !DILocation(line: 1752, column: 13, scope: !6366)
!6371 = !DILocation(line: 1752, column: 11, scope: !6366)
!6372 = !DILocation(line: 1754, column: 7, scope: !6373)
!6373 = distinct !DILexicalBlock(scope: !6366, file: !1, line: 1754, column: 7)
!6374 = !DILocation(line: 1754, column: 13, scope: !6373)
!6375 = !DILocation(line: 1754, column: 18, scope: !6373)
!6376 = !DILocation(line: 1754, column: 7, scope: !6366)
!6377 = !DILocation(line: 1755, column: 46, scope: !6373)
!6378 = !DILocation(line: 1755, column: 52, scope: !6373)
!6379 = !DILocation(line: 1755, column: 58, scope: !6373)
!6380 = !DILocation(line: 1755, column: 19, scope: !6373)
!6381 = !DILocation(line: 1755, column: 4, scope: !6373)
!6382 = !DILocation(line: 1755, column: 11, scope: !6373)
!6383 = !DILocation(line: 1755, column: 17, scope: !6373)
!6384 = !DILocation(line: 1756, column: 2, scope: !6366)
!6385 = !DILocation(line: 1751, column: 50, scope: !6363)
!6386 = !DILocation(line: 1751, column: 56, scope: !6363)
!6387 = !DILocation(line: 1751, column: 48, scope: !6363)
!6388 = !DILocation(line: 1751, column: 2, scope: !6363)
!6389 = distinct !{!6389, !6364, !6390}
!6390 = !DILocation(line: 1756, column: 2, scope: !6357)
!6391 = !DILocation(line: 1758, column: 9, scope: !6330)
!6392 = !DILocation(line: 1758, column: 2, scope: !6330)
!6393 = distinct !DISubprogram(name: "pose_proxy_synchronize", scope: !1, file: !1, line: 1603, type: !6394, scopeLine: 1604, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !544)
!6394 = !DISubroutineType(types: !6395)
!6395 = !{null, !569, !569, !141}
!6396 = !DILocalVariable(name: "ob", arg: 1, scope: !6393, file: !1, line: 1603, type: !569)
!6397 = !DILocation(line: 1603, column: 44, scope: !6393)
!6398 = !DILocalVariable(name: "from", arg: 2, scope: !6393, file: !1, line: 1603, type: !569)
!6399 = !DILocation(line: 1603, column: 56, scope: !6393)
!6400 = !DILocalVariable(name: "layer_protected", arg: 3, scope: !6393, file: !1, line: 1603, type: !141)
!6401 = !DILocation(line: 1603, column: 66, scope: !6393)
!6402 = !DILocalVariable(name: "pose", scope: !6393, file: !1, line: 1605, type: !6187)
!6403 = !DILocation(line: 1605, column: 9, scope: !6393)
!6404 = !DILocation(line: 1605, column: 16, scope: !6393)
!6405 = !DILocation(line: 1605, column: 20, scope: !6393)
!6406 = !DILocalVariable(name: "frompose", scope: !6393, file: !1, line: 1605, type: !6187)
!6407 = !DILocation(line: 1605, column: 27, scope: !6393)
!6408 = !DILocation(line: 1605, column: 38, scope: !6393)
!6409 = !DILocation(line: 1605, column: 44, scope: !6393)
!6410 = !DILocalVariable(name: "pchan", scope: !6393, file: !1, line: 1606, type: !2808)
!6411 = !DILocation(line: 1606, column: 16, scope: !6393)
!6412 = !DILocalVariable(name: "pchanp", scope: !6393, file: !1, line: 1606, type: !2808)
!6413 = !DILocation(line: 1606, column: 24, scope: !6393)
!6414 = !DILocalVariable(name: "con", scope: !6393, file: !1, line: 1607, type: !6415)
!6415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6416, size: 64)
!6416 = !DIDerivedType(tag: DW_TAG_typedef, name: "bConstraint", file: !164, line: 76, baseType: !6417)
!6417 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bConstraint", file: !164, line: 54, size: 960, elements: !6418)
!6418 = !{!6419, !6421, !6422, !6423, !6424, !6425, !6426, !6427, !6428, !6429, !6430, !6431, !6432, !6433}
!6419 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6417, file: !164, line: 55, baseType: !6420, size: 64)
!6420 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6417, size: 64)
!6421 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6417, file: !164, line: 55, baseType: !6420, size: 64, offset: 64)
!6422 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !6417, file: !164, line: 57, baseType: !255, size: 64, offset: 128)
!6423 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6417, file: !164, line: 58, baseType: !284, size: 16, offset: 192)
!6424 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !6417, file: !164, line: 59, baseType: !284, size: 16, offset: 208)
!6425 = !DIDerivedType(tag: DW_TAG_member, name: "ownspace", scope: !6417, file: !164, line: 61, baseType: !271, size: 8, offset: 224)
!6426 = !DIDerivedType(tag: DW_TAG_member, name: "tarspace", scope: !6417, file: !164, line: 62, baseType: !271, size: 8, offset: 232)
!6427 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6417, file: !164, line: 64, baseType: !300, size: 512, offset: 240)
!6428 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !6417, file: !164, line: 66, baseType: !284, size: 16, offset: 752)
!6429 = !DIDerivedType(tag: DW_TAG_member, name: "enforce", scope: !6417, file: !164, line: 68, baseType: !366, size: 32, offset: 768)
!6430 = !DIDerivedType(tag: DW_TAG_member, name: "headtail", scope: !6417, file: !164, line: 69, baseType: !366, size: 32, offset: 800)
!6431 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !6417, file: !164, line: 71, baseType: !591, size: 64, offset: 832)
!6432 = !DIDerivedType(tag: DW_TAG_member, name: "lin_error", scope: !6417, file: !164, line: 74, baseType: !366, size: 32, offset: 896)
!6433 = !DIDerivedType(tag: DW_TAG_member, name: "rot_error", scope: !6417, file: !164, line: 75, baseType: !366, size: 32, offset: 928)
!6434 = !DILocation(line: 1607, column: 15, scope: !6393)
!6435 = !DILocalVariable(name: "error", scope: !6393, file: !1, line: 1608, type: !141)
!6436 = !DILocation(line: 1608, column: 6, scope: !6393)
!6437 = !DILocation(line: 1610, column: 6, scope: !6438)
!6438 = distinct !DILexicalBlock(scope: !6393, file: !1, line: 1610, column: 6)
!6439 = !DILocation(line: 1610, column: 15, scope: !6438)
!6440 = !DILocation(line: 1610, column: 6, scope: !6393)
!6441 = !DILocation(line: 1611, column: 3, scope: !6438)
!6442 = !DILocation(line: 1615, column: 15, scope: !6443)
!6443 = distinct !DILexicalBlock(scope: !6393, file: !1, line: 1615, column: 2)
!6444 = !DILocation(line: 1615, column: 21, scope: !6443)
!6445 = !DILocation(line: 1615, column: 30, scope: !6443)
!6446 = !DILocation(line: 1615, column: 13, scope: !6443)
!6447 = !DILocation(line: 1615, column: 7, scope: !6443)
!6448 = !DILocation(line: 1615, column: 37, scope: !6449)
!6449 = distinct !DILexicalBlock(scope: !6443, file: !1, line: 1615, column: 2)
!6450 = !DILocation(line: 1615, column: 2, scope: !6443)
!6451 = !DILocation(line: 1616, column: 7, scope: !6452)
!6452 = distinct !DILexicalBlock(scope: !6453, file: !1, line: 1616, column: 7)
!6453 = distinct !DILexicalBlock(scope: !6449, file: !1, line: 1615, column: 65)
!6454 = !DILocation(line: 1616, column: 14, scope: !6452)
!6455 = !DILocation(line: 1616, column: 20, scope: !6452)
!6456 = !DILocation(line: 1616, column: 28, scope: !6452)
!6457 = !DILocation(line: 1616, column: 26, scope: !6452)
!6458 = !DILocation(line: 1616, column: 7, scope: !6453)
!6459 = !DILocation(line: 1617, column: 35, scope: !6460)
!6460 = distinct !DILexicalBlock(scope: !6461, file: !1, line: 1617, column: 8)
!6461 = distinct !DILexicalBlock(scope: !6452, file: !1, line: 1616, column: 45)
!6462 = !DILocation(line: 1617, column: 45, scope: !6460)
!6463 = !DILocation(line: 1617, column: 52, scope: !6460)
!6464 = !DILocation(line: 1617, column: 8, scope: !6460)
!6465 = !DILocation(line: 1617, column: 58, scope: !6460)
!6466 = !DILocation(line: 1617, column: 8, scope: !6461)
!6467 = !DILocation(line: 1619, column: 12, scope: !6468)
!6468 = distinct !DILexicalBlock(scope: !6460, file: !1, line: 1617, column: 67)
!6469 = !DILocation(line: 1619, column: 18, scope: !6468)
!6470 = !DILocation(line: 1619, column: 21, scope: !6468)
!6471 = !DILocation(line: 1619, column: 27, scope: !6468)
!6472 = !DILocation(line: 1619, column: 34, scope: !6468)
!6473 = !DILocation(line: 1618, column: 5, scope: !6468)
!6474 = !DILocation(line: 1620, column: 11, scope: !6468)
!6475 = !DILocation(line: 1621, column: 4, scope: !6468)
!6476 = !DILocation(line: 1622, column: 3, scope: !6461)
!6477 = !DILocation(line: 1623, column: 2, scope: !6453)
!6478 = !DILocation(line: 1615, column: 52, scope: !6449)
!6479 = !DILocation(line: 1615, column: 59, scope: !6449)
!6480 = !DILocation(line: 1615, column: 50, scope: !6449)
!6481 = !DILocation(line: 1615, column: 2, scope: !6449)
!6482 = distinct !{!6482, !6450, !6483}
!6483 = !DILocation(line: 1623, column: 2, scope: !6443)
!6484 = !DILocation(line: 1625, column: 6, scope: !6485)
!6485 = distinct !DILexicalBlock(scope: !6393, file: !1, line: 1625, column: 6)
!6486 = !DILocation(line: 1625, column: 6, scope: !6393)
!6487 = !DILocation(line: 1626, column: 3, scope: !6485)
!6488 = !DILocation(line: 1629, column: 16, scope: !6393)
!6489 = !DILocation(line: 1629, column: 2, scope: !6393)
!6490 = !DILocation(line: 1636, column: 17, scope: !6393)
!6491 = !DILocation(line: 1636, column: 23, scope: !6393)
!6492 = !DILocation(line: 1636, column: 2, scope: !6393)
!6493 = !DILocation(line: 1637, column: 21, scope: !6393)
!6494 = !DILocation(line: 1637, column: 27, scope: !6393)
!6495 = !DILocation(line: 1637, column: 37, scope: !6393)
!6496 = !DILocation(line: 1637, column: 47, scope: !6393)
!6497 = !DILocation(line: 1637, column: 2, scope: !6393)
!6498 = !DILocation(line: 1638, column: 23, scope: !6393)
!6499 = !DILocation(line: 1638, column: 33, scope: !6393)
!6500 = !DILocation(line: 1638, column: 2, scope: !6393)
!6501 = !DILocation(line: 1638, column: 8, scope: !6393)
!6502 = !DILocation(line: 1638, column: 21, scope: !6393)
!6503 = !DILocation(line: 1640, column: 15, scope: !6504)
!6504 = distinct !DILexicalBlock(scope: !6393, file: !1, line: 1640, column: 2)
!6505 = !DILocation(line: 1640, column: 21, scope: !6504)
!6506 = !DILocation(line: 1640, column: 30, scope: !6504)
!6507 = !DILocation(line: 1640, column: 13, scope: !6504)
!6508 = !DILocation(line: 1640, column: 7, scope: !6504)
!6509 = !DILocation(line: 1640, column: 37, scope: !6510)
!6510 = distinct !DILexicalBlock(scope: !6504, file: !1, line: 1640, column: 2)
!6511 = !DILocation(line: 1640, column: 2, scope: !6504)
!6512 = !DILocation(line: 1641, column: 39, scope: !6513)
!6513 = distinct !DILexicalBlock(scope: !6510, file: !1, line: 1640, column: 65)
!6514 = !DILocation(line: 1641, column: 49, scope: !6513)
!6515 = !DILocation(line: 1641, column: 56, scope: !6513)
!6516 = !DILocation(line: 1641, column: 12, scope: !6513)
!6517 = !DILocation(line: 1641, column: 10, scope: !6513)
!6518 = !DILocation(line: 1643, column: 7, scope: !6519)
!6519 = distinct !DILexicalBlock(scope: !6513, file: !1, line: 1643, column: 7)
!6520 = !DILocation(line: 1643, column: 7, scope: !6513)
!6521 = !DILocation(line: 1646, column: 3, scope: !6522)
!6522 = distinct !DILexicalBlock(scope: !6519, file: !1, line: 1643, column: 33)
!6523 = !DILocation(line: 1647, column: 12, scope: !6524)
!6524 = distinct !DILexicalBlock(scope: !6519, file: !1, line: 1647, column: 12)
!6525 = !DILocation(line: 1647, column: 19, scope: !6524)
!6526 = !DILocation(line: 1647, column: 25, scope: !6524)
!6527 = !DILocation(line: 1647, column: 33, scope: !6524)
!6528 = !DILocation(line: 1647, column: 31, scope: !6524)
!6529 = !DILocation(line: 1647, column: 12, scope: !6519)
!6530 = !DILocalVariable(name: "proxylocal_constraints", scope: !6531, file: !1, line: 1648, type: !310)
!6531 = distinct !DILexicalBlock(scope: !6524, file: !1, line: 1647, column: 50)
!6532 = !DILocation(line: 1648, column: 13, scope: !6531)
!6533 = !DILocalVariable(name: "pchanw", scope: !6531, file: !1, line: 1649, type: !2809)
!6534 = !DILocation(line: 1649, column: 17, scope: !6531)
!6535 = !DILocation(line: 1652, column: 14, scope: !6531)
!6536 = !DILocation(line: 1652, column: 13, scope: !6531)
!6537 = !DILocation(line: 1653, column: 18, scope: !6531)
!6538 = !DILocation(line: 1653, column: 25, scope: !6531)
!6539 = !DILocation(line: 1653, column: 11, scope: !6531)
!6540 = !DILocation(line: 1653, column: 16, scope: !6531)
!6541 = !DILocation(line: 1654, column: 18, scope: !6531)
!6542 = !DILocation(line: 1654, column: 25, scope: !6531)
!6543 = !DILocation(line: 1654, column: 11, scope: !6531)
!6544 = !DILocation(line: 1654, column: 16, scope: !6531)
!6545 = !DILocation(line: 1655, column: 20, scope: !6531)
!6546 = !DILocation(line: 1655, column: 27, scope: !6531)
!6547 = !DILocation(line: 1655, column: 11, scope: !6531)
!6548 = !DILocation(line: 1655, column: 18, scope: !6531)
!6549 = !DILocation(line: 1656, column: 19, scope: !6531)
!6550 = !DILocation(line: 1656, column: 26, scope: !6531)
!6551 = !DILocation(line: 1656, column: 11, scope: !6531)
!6552 = !DILocation(line: 1656, column: 17, scope: !6531)
!6553 = !DILocation(line: 1658, column: 19, scope: !6531)
!6554 = !DILocation(line: 1658, column: 26, scope: !6531)
!6555 = !DILocation(line: 1658, column: 11, scope: !6531)
!6556 = !DILocation(line: 1658, column: 17, scope: !6531)
!6557 = !DILocation(line: 1659, column: 4, scope: !6531)
!6558 = !DILocation(line: 1659, column: 11, scope: !6531)
!6559 = !DILocation(line: 1659, column: 17, scope: !6531)
!6560 = !DILocation(line: 1662, column: 15, scope: !6561)
!6561 = distinct !DILexicalBlock(scope: !6531, file: !1, line: 1662, column: 8)
!6562 = !DILocation(line: 1662, column: 8, scope: !6561)
!6563 = !DILocation(line: 1662, column: 8, scope: !6531)
!6564 = !DILocation(line: 1663, column: 43, scope: !6565)
!6565 = distinct !DILexicalBlock(scope: !6561, file: !1, line: 1662, column: 21)
!6566 = !DILocation(line: 1663, column: 19, scope: !6565)
!6567 = !DILocation(line: 1663, column: 12, scope: !6565)
!6568 = !DILocation(line: 1663, column: 17, scope: !6565)
!6569 = !DILocation(line: 1666, column: 9, scope: !6570)
!6570 = distinct !DILexicalBlock(scope: !6565, file: !1, line: 1666, column: 9)
!6571 = !DILocation(line: 1666, column: 16, scope: !6570)
!6572 = !DILocation(line: 1666, column: 9, scope: !6565)
!6573 = !DILocation(line: 1667, column: 33, scope: !6574)
!6574 = distinct !DILexicalBlock(scope: !6570, file: !1, line: 1666, column: 22)
!6575 = !DILocation(line: 1667, column: 39, scope: !6574)
!6576 = !DILocation(line: 1667, column: 46, scope: !6574)
!6577 = !DILocation(line: 1667, column: 6, scope: !6574)
!6578 = !DILocation(line: 1668, column: 5, scope: !6574)
!6579 = !DILocation(line: 1669, column: 4, scope: !6565)
!6580 = !DILocation(line: 1679, column: 65, scope: !6531)
!6581 = !DILocation(line: 1679, column: 72, scope: !6531)
!6582 = !DILocation(line: 1679, column: 4, scope: !6531)
!6583 = !DILocation(line: 1680, column: 33, scope: !6531)
!6584 = !DILocation(line: 1680, column: 47, scope: !6531)
!6585 = !DILocation(line: 1680, column: 55, scope: !6531)
!6586 = !DILocation(line: 1680, column: 4, scope: !6531)
!6587 = !DILocation(line: 1681, column: 31, scope: !6531)
!6588 = !DILocation(line: 1681, column: 4, scope: !6531)
!6589 = !DILocation(line: 1684, column: 22, scope: !6590)
!6590 = distinct !DILexicalBlock(scope: !6531, file: !1, line: 1684, column: 4)
!6591 = !DILocation(line: 1684, column: 34, scope: !6590)
!6592 = !DILocation(line: 1684, column: 15, scope: !6590)
!6593 = !DILocation(line: 1684, column: 13, scope: !6590)
!6594 = !DILocation(line: 1684, column: 9, scope: !6590)
!6595 = !DILocation(line: 1684, column: 41, scope: !6596)
!6596 = distinct !DILexicalBlock(scope: !6590, file: !1, line: 1684, column: 4)
!6597 = !DILocation(line: 1684, column: 4, scope: !6590)
!6598 = !DILocalVariable(name: "cti", scope: !6599, file: !1, line: 1685, type: !6600)
!6599 = distinct !DILexicalBlock(scope: !6596, file: !1, line: 1684, column: 63)
!6600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6601, size: 64)
!6601 = !DIDerivedType(tag: DW_TAG_typedef, name: "bConstraintTypeInfo", file: !5590, line: 108, baseType: !6602)
!6602 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bConstraintTypeInfo", file: !5590, line: 80, size: 1088, elements: !6603)
!6603 = !{!6604, !6605, !6606, !6607, !6608, !6612, !6621, !6625, !6629, !6634, !6638, !6655}
!6604 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6602, file: !5590, line: 82, baseType: !284, size: 16)
!6605 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6602, file: !5590, line: 83, baseType: !284, size: 16, offset: 16)
!6606 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !6602, file: !5590, line: 84, baseType: !1861, size: 256, offset: 32)
!6607 = !DIDerivedType(tag: DW_TAG_member, name: "structName", scope: !6602, file: !5590, line: 85, baseType: !1861, size: 256, offset: 288)
!6608 = !DIDerivedType(tag: DW_TAG_member, name: "free_data", scope: !6602, file: !5590, line: 89, baseType: !6609, size: 64, offset: 576)
!6609 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6610, size: 64)
!6610 = !DISubroutineType(types: !6611)
!6611 = !{null, !6420}
!6612 = !DIDerivedType(tag: DW_TAG_member, name: "id_looper", scope: !6602, file: !5590, line: 91, baseType: !6613, size: 64, offset: 640)
!6613 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6614, size: 64)
!6614 = !DISubroutineType(types: !6615)
!6615 = !{null, !6420, !6616, !255}
!6616 = !DIDerivedType(tag: DW_TAG_typedef, name: "ConstraintIDFunc", file: !5590, line: 65, baseType: !6617)
!6617 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6618, size: 64)
!6618 = !DISubroutineType(types: !6619)
!6619 = !{null, !6420, !6620, !1130, !255}
!6620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !258, size: 64)
!6621 = !DIDerivedType(tag: DW_TAG_member, name: "copy_data", scope: !6602, file: !5590, line: 93, baseType: !6622, size: 64, offset: 704)
!6622 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6623, size: 64)
!6623 = !DISubroutineType(types: !6624)
!6624 = !{null, !6420, !6420}
!6625 = !DIDerivedType(tag: DW_TAG_member, name: "new_data", scope: !6602, file: !5590, line: 95, baseType: !6626, size: 64, offset: 768)
!6626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6627, size: 64)
!6627 = !DISubroutineType(types: !6628)
!6628 = !{null, !255}
!6629 = !DIDerivedType(tag: DW_TAG_member, name: "get_constraint_targets", scope: !6602, file: !5590, line: 99, baseType: !6630, size: 64, offset: 832)
!6630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6631, size: 64)
!6631 = !DISubroutineType(types: !6632)
!6632 = !{!141, !6420, !6633}
!6633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !312, size: 64)
!6634 = !DIDerivedType(tag: DW_TAG_member, name: "flush_constraint_targets", scope: !6602, file: !5590, line: 101, baseType: !6635, size: 64, offset: 896)
!6635 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6636, size: 64)
!6636 = !DISubroutineType(types: !6637)
!6637 = !{null, !6420, !6633, !1130}
!6638 = !DIDerivedType(tag: DW_TAG_member, name: "get_target_matrix", scope: !6602, file: !5590, line: 105, baseType: !6639, size: 64, offset: 960)
!6639 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6640, size: 64)
!6640 = !DISubroutineType(types: !6641)
!6641 = !{null, !6420, !6642, !6643, !366}
!6642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5591, size: 64)
!6643 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6644, size: 64)
!6644 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bConstraintTarget", file: !164, line: 85, size: 1280, elements: !6645)
!6645 = !{!6646, !6647, !6648, !6649, !6650, !6651, !6652, !6653, !6654}
!6646 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6644, file: !164, line: 86, baseType: !6643, size: 64)
!6647 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6644, file: !164, line: 86, baseType: !6643, size: 64, offset: 64)
!6648 = !DIDerivedType(tag: DW_TAG_member, name: "tar", scope: !6644, file: !164, line: 88, baseType: !585, size: 64, offset: 128)
!6649 = !DIDerivedType(tag: DW_TAG_member, name: "subtarget", scope: !6644, file: !164, line: 89, baseType: !300, size: 512, offset: 192)
!6650 = !DIDerivedType(tag: DW_TAG_member, name: "matrix", scope: !6644, file: !164, line: 91, baseType: !419, size: 512, offset: 704)
!6651 = !DIDerivedType(tag: DW_TAG_member, name: "space", scope: !6644, file: !164, line: 93, baseType: !284, size: 16, offset: 1216)
!6652 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !6644, file: !164, line: 94, baseType: !284, size: 16, offset: 1232)
!6653 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !6644, file: !164, line: 95, baseType: !284, size: 16, offset: 1248)
!6654 = !DIDerivedType(tag: DW_TAG_member, name: "rotOrder", scope: !6644, file: !164, line: 96, baseType: !284, size: 16, offset: 1264)
!6655 = !DIDerivedType(tag: DW_TAG_member, name: "evaluate_constraint", scope: !6602, file: !5590, line: 107, baseType: !6656, size: 64, offset: 1024)
!6656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6657, size: 64)
!6657 = !DISubroutineType(types: !6658)
!6658 = !{null, !6420, !6642, !6633}
!6659 = !DILocation(line: 1685, column: 26, scope: !6599)
!6660 = !DILocation(line: 1685, column: 60, scope: !6599)
!6661 = !DILocation(line: 1685, column: 32, scope: !6599)
!6662 = !DILocalVariable(name: "targets", scope: !6599, file: !1, line: 1686, type: !310)
!6663 = !DILocation(line: 1686, column: 14, scope: !6599)
!6664 = !DILocalVariable(name: "ct", scope: !6599, file: !1, line: 1687, type: !6665)
!6665 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6666, size: 64)
!6666 = !DIDerivedType(tag: DW_TAG_typedef, name: "bConstraintTarget", file: !164, line: 97, baseType: !6644)
!6667 = !DILocation(line: 1687, column: 24, scope: !6599)
!6668 = !DILocation(line: 1689, column: 9, scope: !6669)
!6669 = distinct !DILexicalBlock(scope: !6599, file: !1, line: 1689, column: 9)
!6670 = !DILocation(line: 1689, column: 13, scope: !6669)
!6671 = !DILocation(line: 1689, column: 16, scope: !6669)
!6672 = !DILocation(line: 1689, column: 21, scope: !6669)
!6673 = !DILocation(line: 1689, column: 9, scope: !6599)
!6674 = !DILocation(line: 1690, column: 6, scope: !6675)
!6675 = distinct !DILexicalBlock(scope: !6669, file: !1, line: 1689, column: 45)
!6676 = !DILocation(line: 1690, column: 11, scope: !6675)
!6677 = !DILocation(line: 1690, column: 34, scope: !6675)
!6678 = !DILocation(line: 1692, column: 24, scope: !6679)
!6679 = distinct !DILexicalBlock(scope: !6675, file: !1, line: 1692, column: 6)
!6680 = !DILocation(line: 1692, column: 16, scope: !6679)
!6681 = !DILocation(line: 1692, column: 14, scope: !6679)
!6682 = !DILocation(line: 1692, column: 11, scope: !6679)
!6683 = !DILocation(line: 1692, column: 31, scope: !6684)
!6684 = distinct !DILexicalBlock(scope: !6679, file: !1, line: 1692, column: 6)
!6685 = !DILocation(line: 1692, column: 6, scope: !6679)
!6686 = !DILocation(line: 1693, column: 11, scope: !6687)
!6687 = distinct !DILexicalBlock(scope: !6688, file: !1, line: 1693, column: 11)
!6688 = distinct !DILexicalBlock(scope: !6684, file: !1, line: 1692, column: 50)
!6689 = !DILocation(line: 1693, column: 15, scope: !6687)
!6690 = !DILocation(line: 1693, column: 22, scope: !6687)
!6691 = !DILocation(line: 1693, column: 19, scope: !6687)
!6692 = !DILocation(line: 1693, column: 11, scope: !6688)
!6693 = !DILocation(line: 1694, column: 18, scope: !6687)
!6694 = !DILocation(line: 1694, column: 8, scope: !6687)
!6695 = !DILocation(line: 1694, column: 12, scope: !6687)
!6696 = !DILocation(line: 1694, column: 16, scope: !6687)
!6697 = !DILocation(line: 1695, column: 6, scope: !6688)
!6698 = !DILocation(line: 1692, column: 40, scope: !6684)
!6699 = !DILocation(line: 1692, column: 44, scope: !6684)
!6700 = !DILocation(line: 1692, column: 38, scope: !6684)
!6701 = !DILocation(line: 1692, column: 6, scope: !6684)
!6702 = distinct !{!6702, !6685, !6703}
!6703 = !DILocation(line: 1695, column: 6, scope: !6679)
!6704 = !DILocation(line: 1697, column: 10, scope: !6705)
!6705 = distinct !DILexicalBlock(scope: !6675, file: !1, line: 1697, column: 10)
!6706 = !DILocation(line: 1697, column: 15, scope: !6705)
!6707 = !DILocation(line: 1697, column: 10, scope: !6675)
!6708 = !DILocation(line: 1698, column: 7, scope: !6705)
!6709 = !DILocation(line: 1698, column: 12, scope: !6705)
!6710 = !DILocation(line: 1698, column: 37, scope: !6705)
!6711 = !DILocation(line: 1699, column: 5, scope: !6675)
!6712 = !DILocation(line: 1700, column: 4, scope: !6599)
!6713 = !DILocation(line: 1684, column: 52, scope: !6596)
!6714 = !DILocation(line: 1684, column: 57, scope: !6596)
!6715 = !DILocation(line: 1684, column: 50, scope: !6596)
!6716 = !DILocation(line: 1684, column: 4, scope: !6596)
!6717 = distinct !{!6717, !6597, !6718}
!6718 = !DILocation(line: 1700, column: 4, scope: !6590)
!6719 = !DILocation(line: 1703, column: 26, scope: !6531)
!6720 = !DILocation(line: 1703, column: 4, scope: !6531)
!6721 = !DILocation(line: 1706, column: 5, scope: !6531)
!6722 = !DILocation(line: 1706, column: 13, scope: !6531)
!6723 = !DILocation(line: 1707, column: 8, scope: !6724)
!6724 = distinct !DILexicalBlock(scope: !6531, file: !1, line: 1707, column: 8)
!6725 = !DILocation(line: 1707, column: 15, scope: !6724)
!6726 = !DILocation(line: 1707, column: 8, scope: !6531)
!6727 = !DILocation(line: 1708, column: 17, scope: !6728)
!6728 = distinct !DILexicalBlock(scope: !6724, file: !1, line: 1707, column: 23)
!6729 = !DILocation(line: 1708, column: 24, scope: !6728)
!6730 = !DILocation(line: 1708, column: 32, scope: !6728)
!6731 = !DILocation(line: 1708, column: 5, scope: !6728)
!6732 = !DILocation(line: 1709, column: 4, scope: !6728)
!6733 = !DILocation(line: 1710, column: 3, scope: !6531)
!6734 = !DILocation(line: 1713, column: 20, scope: !6735)
!6735 = distinct !DILexicalBlock(scope: !6524, file: !1, line: 1711, column: 8)
!6736 = !DILocation(line: 1713, column: 28, scope: !6735)
!6737 = !DILocation(line: 1713, column: 4, scope: !6735)
!6738 = !DILocation(line: 1713, column: 11, scope: !6735)
!6739 = !DILocation(line: 1713, column: 18, scope: !6735)
!6740 = !DILocation(line: 1714, column: 8, scope: !6741)
!6741 = distinct !DILexicalBlock(scope: !6735, file: !1, line: 1714, column: 8)
!6742 = !DILocation(line: 1714, column: 15, scope: !6741)
!6743 = !DILocation(line: 1714, column: 8, scope: !6735)
!6744 = !DILocation(line: 1715, column: 17, scope: !6745)
!6745 = distinct !DILexicalBlock(scope: !6741, file: !1, line: 1714, column: 23)
!6746 = !DILocation(line: 1715, column: 24, scope: !6745)
!6747 = !DILocation(line: 1715, column: 32, scope: !6745)
!6748 = !DILocation(line: 1715, column: 5, scope: !6745)
!6749 = !DILocation(line: 1716, column: 4, scope: !6745)
!6750 = !DILocation(line: 1717, column: 8, scope: !6751)
!6751 = distinct !DILexicalBlock(scope: !6735, file: !1, line: 1717, column: 8)
!6752 = !DILocation(line: 1717, column: 16, scope: !6751)
!6753 = !DILocation(line: 1717, column: 8, scope: !6735)
!6754 = !DILocation(line: 1718, column: 51, scope: !6751)
!6755 = !DILocation(line: 1718, column: 57, scope: !6751)
!6756 = !DILocation(line: 1718, column: 65, scope: !6751)
!6757 = !DILocation(line: 1718, column: 76, scope: !6751)
!6758 = !DILocation(line: 1718, column: 24, scope: !6751)
!6759 = !DILocation(line: 1718, column: 5, scope: !6751)
!6760 = !DILocation(line: 1718, column: 12, scope: !6751)
!6761 = !DILocation(line: 1718, column: 22, scope: !6751)
!6762 = !DILocalVariable(name: "prop_orig", scope: !6763, file: !1, line: 1722, type: !289)
!6763 = distinct !DILexicalBlock(scope: !6735, file: !1, line: 1721, column: 4)
!6764 = !DILocation(line: 1722, column: 17, scope: !6763)
!6765 = !DILocation(line: 1722, column: 29, scope: !6763)
!6766 = !DILocation(line: 1722, column: 36, scope: !6763)
!6767 = !DILocation(line: 1723, column: 9, scope: !6768)
!6768 = distinct !DILexicalBlock(scope: !6763, file: !1, line: 1723, column: 9)
!6769 = !DILocation(line: 1723, column: 17, scope: !6768)
!6770 = !DILocation(line: 1723, column: 9, scope: !6763)
!6771 = !DILocation(line: 1724, column: 37, scope: !6772)
!6772 = distinct !DILexicalBlock(scope: !6768, file: !1, line: 1723, column: 23)
!6773 = !DILocation(line: 1724, column: 45, scope: !6772)
!6774 = !DILocation(line: 1724, column: 20, scope: !6772)
!6775 = !DILocation(line: 1724, column: 6, scope: !6772)
!6776 = !DILocation(line: 1724, column: 13, scope: !6772)
!6777 = !DILocation(line: 1724, column: 18, scope: !6772)
!6778 = !DILocation(line: 1725, column: 10, scope: !6779)
!6779 = distinct !DILexicalBlock(scope: !6772, file: !1, line: 1725, column: 10)
!6780 = !DILocation(line: 1725, column: 10, scope: !6772)
!6781 = !DILocation(line: 1727, column: 27, scope: !6782)
!6782 = distinct !DILexicalBlock(scope: !6779, file: !1, line: 1725, column: 21)
!6783 = !DILocation(line: 1727, column: 34, scope: !6782)
!6784 = !DILocation(line: 1727, column: 40, scope: !6782)
!6785 = !DILocation(line: 1727, column: 7, scope: !6782)
!6786 = !DILocation(line: 1728, column: 6, scope: !6782)
!6787 = !DILocation(line: 1729, column: 5, scope: !6772)
!6788 = !DILocation(line: 1731, column: 6, scope: !6789)
!6789 = distinct !DILexicalBlock(scope: !6768, file: !1, line: 1730, column: 10)
!6790 = !DILocation(line: 1731, column: 13, scope: !6789)
!6791 = !DILocation(line: 1731, column: 18, scope: !6789)
!6792 = !DILocation(line: 1733, column: 9, scope: !6793)
!6793 = distinct !DILexicalBlock(scope: !6763, file: !1, line: 1733, column: 9)
!6794 = !DILocation(line: 1733, column: 9, scope: !6763)
!6795 = !DILocation(line: 1734, column: 23, scope: !6796)
!6796 = distinct !DILexicalBlock(scope: !6793, file: !1, line: 1733, column: 20)
!6797 = !DILocation(line: 1734, column: 6, scope: !6796)
!6798 = !DILocation(line: 1735, column: 6, scope: !6796)
!6799 = !DILocation(line: 1735, column: 16, scope: !6796)
!6800 = !DILocation(line: 1736, column: 5, scope: !6796)
!6801 = !DILocation(line: 1739, column: 2, scope: !6513)
!6802 = !DILocation(line: 1640, column: 52, scope: !6510)
!6803 = !DILocation(line: 1640, column: 59, scope: !6510)
!6804 = !DILocation(line: 1640, column: 50, scope: !6510)
!6805 = !DILocation(line: 1640, column: 2, scope: !6510)
!6806 = distinct !{!6806, !6511, !6807}
!6807 = !DILocation(line: 1739, column: 2, scope: !6504)
!6808 = !DILocation(line: 1740, column: 1, scope: !6393)
!6809 = distinct !DISubprogram(name: "BKE_pchan_to_mat4", scope: !1, file: !1, line: 2263, type: !6810, scopeLine: 2264, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !544)
!6810 = !DISubroutineType(types: !6811)
!6811 = !{null, !2808, !1136}
!6812 = !DILocalVariable(name: "pchan", arg: 1, scope: !6809, file: !1, line: 2263, type: !2808)
!6813 = !DILocation(line: 2263, column: 38, scope: !6809)
!6814 = !DILocalVariable(name: "chan_mat", arg: 2, scope: !6809, file: !1, line: 2263, type: !1136)
!6815 = !DILocation(line: 2263, column: 51, scope: !6809)
!6816 = !DILocalVariable(name: "smat", scope: !6809, file: !1, line: 2265, type: !413)
!6817 = !DILocation(line: 2265, column: 8, scope: !6809)
!6818 = !DILocalVariable(name: "rmat", scope: !6809, file: !1, line: 2266, type: !413)
!6819 = !DILocation(line: 2266, column: 8, scope: !6809)
!6820 = !DILocalVariable(name: "tmat", scope: !6809, file: !1, line: 2267, type: !413)
!6821 = !DILocation(line: 2267, column: 8, scope: !6809)
!6822 = !DILocation(line: 2270, column: 15, scope: !6809)
!6823 = !DILocation(line: 2270, column: 21, scope: !6809)
!6824 = !DILocation(line: 2270, column: 28, scope: !6809)
!6825 = !DILocation(line: 2270, column: 2, scope: !6809)
!6826 = !DILocation(line: 2273, column: 6, scope: !6827)
!6827 = distinct !DILexicalBlock(scope: !6809, file: !1, line: 2273, column: 6)
!6828 = !DILocation(line: 2273, column: 13, scope: !6827)
!6829 = !DILocation(line: 2273, column: 21, scope: !6827)
!6830 = !DILocation(line: 2273, column: 6, scope: !6809)
!6831 = !DILocation(line: 2275, column: 16, scope: !6832)
!6832 = distinct !DILexicalBlock(scope: !6827, file: !1, line: 2273, column: 26)
!6833 = !DILocation(line: 2275, column: 22, scope: !6832)
!6834 = !DILocation(line: 2275, column: 29, scope: !6832)
!6835 = !DILocation(line: 2275, column: 34, scope: !6832)
!6836 = !DILocation(line: 2275, column: 41, scope: !6832)
!6837 = !DILocation(line: 2275, column: 3, scope: !6832)
!6838 = !DILocation(line: 2276, column: 2, scope: !6832)
!6839 = !DILocation(line: 2277, column: 11, scope: !6840)
!6840 = distinct !DILexicalBlock(scope: !6827, file: !1, line: 2277, column: 11)
!6841 = !DILocation(line: 2277, column: 18, scope: !6840)
!6842 = !DILocation(line: 2277, column: 26, scope: !6840)
!6843 = !DILocation(line: 2277, column: 11, scope: !6827)
!6844 = !DILocation(line: 2279, column: 22, scope: !6845)
!6845 = distinct !DILexicalBlock(scope: !6840, file: !1, line: 2277, column: 49)
!6846 = !DILocation(line: 2279, column: 28, scope: !6845)
!6847 = !DILocation(line: 2279, column: 35, scope: !6845)
!6848 = !DILocation(line: 2279, column: 44, scope: !6845)
!6849 = !DILocation(line: 2279, column: 51, scope: !6845)
!6850 = !DILocation(line: 2279, column: 3, scope: !6845)
!6851 = !DILocation(line: 2280, column: 2, scope: !6845)
!6852 = !DILocalVariable(name: "quat", scope: !6853, file: !1, line: 2283, type: !694)
!6853 = distinct !DILexicalBlock(scope: !6840, file: !1, line: 2281, column: 7)
!6854 = !DILocation(line: 2283, column: 9, scope: !6853)
!6855 = !DILocation(line: 2289, column: 19, scope: !6853)
!6856 = !DILocation(line: 2289, column: 25, scope: !6853)
!6857 = !DILocation(line: 2289, column: 32, scope: !6853)
!6858 = !DILocation(line: 2289, column: 3, scope: !6853)
!6859 = !DILocation(line: 2290, column: 16, scope: !6853)
!6860 = !DILocation(line: 2290, column: 22, scope: !6853)
!6861 = !DILocation(line: 2290, column: 3, scope: !6853)
!6862 = !DILocation(line: 2294, column: 14, scope: !6809)
!6863 = !DILocation(line: 2294, column: 20, scope: !6809)
!6864 = !DILocation(line: 2294, column: 26, scope: !6809)
!6865 = !DILocation(line: 2294, column: 2, scope: !6809)
!6866 = !DILocation(line: 2295, column: 13, scope: !6809)
!6867 = !DILocation(line: 2295, column: 23, scope: !6809)
!6868 = !DILocation(line: 2295, column: 2, scope: !6809)
!6869 = !DILocation(line: 2299, column: 7, scope: !6870)
!6870 = distinct !DILexicalBlock(scope: !6809, file: !1, line: 2299, column: 6)
!6871 = !DILocation(line: 2299, column: 14, scope: !6870)
!6872 = !DILocation(line: 2299, column: 19, scope: !6870)
!6873 = !DILocation(line: 2299, column: 28, scope: !6870)
!6874 = !DILocation(line: 2299, column: 33, scope: !6870)
!6875 = !DILocation(line: 2299, column: 40, scope: !6870)
!6876 = !DILocation(line: 2299, column: 46, scope: !6870)
!6877 = !DILocation(line: 2299, column: 51, scope: !6870)
!6878 = !DILocation(line: 2299, column: 6, scope: !6809)
!6879 = !DILocation(line: 2300, column: 14, scope: !6880)
!6880 = distinct !DILexicalBlock(scope: !6870, file: !1, line: 2299, column: 70)
!6881 = !DILocation(line: 2300, column: 27, scope: !6880)
!6882 = !DILocation(line: 2300, column: 34, scope: !6880)
!6883 = !DILocation(line: 2300, column: 3, scope: !6880)
!6884 = !DILocation(line: 2301, column: 2, scope: !6880)
!6885 = !DILocation(line: 2302, column: 1, scope: !6809)
!6886 = distinct !DISubprogram(name: "BKE_pchan_calc_mat", scope: !1, file: !1, line: 2306, type: !6887, scopeLine: 2307, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !544)
!6887 = !DISubroutineType(types: !6888)
!6888 = !{null, !2808}
!6889 = !DILocalVariable(name: "pchan", arg: 1, scope: !6886, file: !1, line: 2306, type: !2808)
!6890 = !DILocation(line: 2306, column: 39, scope: !6886)
!6891 = !DILocation(line: 2311, column: 20, scope: !6886)
!6892 = !DILocation(line: 2311, column: 27, scope: !6886)
!6893 = !DILocation(line: 2311, column: 34, scope: !6886)
!6894 = !DILocation(line: 2311, column: 2, scope: !6886)
!6895 = !DILocation(line: 2312, column: 1, scope: !6886)
!6896 = distinct !DISubprogram(name: "BKE_pose_where_is_bone_tail", scope: !1, file: !1, line: 2441, type: !6887, scopeLine: 2442, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !544)
!6897 = !DILocalVariable(name: "pchan", arg: 1, scope: !6896, file: !1, line: 2441, type: !2808)
!6898 = !DILocation(line: 2441, column: 48, scope: !6896)
!6899 = !DILocalVariable(name: "vec", scope: !6896, file: !1, line: 2443, type: !408)
!6900 = !DILocation(line: 2443, column: 8, scope: !6896)
!6901 = !DILocation(line: 2445, column: 13, scope: !6896)
!6902 = !DILocation(line: 2445, column: 18, scope: !6896)
!6903 = !DILocation(line: 2445, column: 25, scope: !6896)
!6904 = !DILocation(line: 2445, column: 2, scope: !6896)
!6905 = !DILocation(line: 2446, column: 12, scope: !6896)
!6906 = !DILocation(line: 2446, column: 17, scope: !6896)
!6907 = !DILocation(line: 2446, column: 24, scope: !6896)
!6908 = !DILocation(line: 2446, column: 30, scope: !6896)
!6909 = !DILocation(line: 2446, column: 2, scope: !6896)
!6910 = !DILocation(line: 2447, column: 14, scope: !6896)
!6911 = !DILocation(line: 2447, column: 21, scope: !6896)
!6912 = !DILocation(line: 2447, column: 32, scope: !6896)
!6913 = !DILocation(line: 2447, column: 39, scope: !6896)
!6914 = !DILocation(line: 2447, column: 50, scope: !6896)
!6915 = !DILocation(line: 2447, column: 2, scope: !6896)
!6916 = !DILocation(line: 2448, column: 1, scope: !6896)
!6917 = distinct !DISubprogram(name: "BKE_pose_where_is", scope: !1, file: !1, line: 2515, type: !6918, scopeLine: 2516, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !544)
!6918 = !DISubroutineType(types: !6919)
!6919 = !{null, !5532, !569}
!6920 = !DILocalVariable(name: "scene", arg: 1, scope: !6917, file: !1, line: 2515, type: !5532)
!6921 = !DILocation(line: 2515, column: 31, scope: !6917)
!6922 = !DILocalVariable(name: "ob", arg: 2, scope: !6917, file: !1, line: 2515, type: !569)
!6923 = !DILocation(line: 2515, column: 46, scope: !6917)
!6924 = !DILocalVariable(name: "arm", scope: !6917, file: !1, line: 2517, type: !245)
!6925 = !DILocation(line: 2517, column: 13, scope: !6917)
!6926 = !DILocalVariable(name: "bone", scope: !6917, file: !1, line: 2518, type: !395)
!6927 = !DILocation(line: 2518, column: 8, scope: !6917)
!6928 = !DILocalVariable(name: "pchan", scope: !6917, file: !1, line: 2519, type: !2808)
!6929 = !DILocation(line: 2519, column: 16, scope: !6917)
!6930 = !DILocalVariable(name: "imat", scope: !6917, file: !1, line: 2520, type: !419)
!6931 = !DILocation(line: 2520, column: 8, scope: !6917)
!6932 = !DILocalVariable(name: "ctime", scope: !6917, file: !1, line: 2521, type: !366)
!6933 = !DILocation(line: 2521, column: 8, scope: !6917)
!6934 = !DILocation(line: 2523, column: 6, scope: !6935)
!6935 = distinct !DILexicalBlock(scope: !6917, file: !1, line: 2523, column: 6)
!6936 = !DILocation(line: 2523, column: 10, scope: !6935)
!6937 = !DILocation(line: 2523, column: 15, scope: !6935)
!6938 = !DILocation(line: 2523, column: 6, scope: !6917)
!6939 = !DILocation(line: 2524, column: 3, scope: !6935)
!6940 = !DILocation(line: 2525, column: 8, scope: !6917)
!6941 = !DILocation(line: 2525, column: 12, scope: !6917)
!6942 = !DILocation(line: 2525, column: 6, scope: !6917)
!6943 = !DILocation(line: 2527, column: 6, scope: !6944)
!6944 = distinct !DILexicalBlock(scope: !6917, file: !1, line: 2527, column: 6)
!6945 = !DILocation(line: 2527, column: 6, scope: !6917)
!6946 = !DILocation(line: 2528, column: 3, scope: !6944)
!6947 = !DILocation(line: 2529, column: 7, scope: !6948)
!6948 = distinct !DILexicalBlock(scope: !6917, file: !1, line: 2529, column: 6)
!6949 = !DILocation(line: 2529, column: 11, scope: !6948)
!6950 = !DILocation(line: 2529, column: 16, scope: !6948)
!6951 = !DILocation(line: 2529, column: 25, scope: !6948)
!6952 = !DILocation(line: 2529, column: 29, scope: !6948)
!6953 = !DILocation(line: 2529, column: 33, scope: !6948)
!6954 = !DILocation(line: 2529, column: 39, scope: !6948)
!6955 = !DILocation(line: 2529, column: 44, scope: !6948)
!6956 = !DILocation(line: 2529, column: 6, scope: !6917)
!6957 = !DILocation(line: 2530, column: 20, scope: !6948)
!6958 = !DILocation(line: 2530, column: 24, scope: !6948)
!6959 = !DILocation(line: 2530, column: 3, scope: !6948)
!6960 = !DILocation(line: 2532, column: 30, scope: !6917)
!6961 = !DILocation(line: 2532, column: 10, scope: !6917)
!6962 = !DILocation(line: 2532, column: 8, scope: !6917)
!6963 = !DILocation(line: 2535, column: 6, scope: !6964)
!6964 = distinct !DILexicalBlock(scope: !6917, file: !1, line: 2535, column: 6)
!6965 = !DILocation(line: 2535, column: 11, scope: !6964)
!6966 = !DILocation(line: 2535, column: 16, scope: !6964)
!6967 = !DILocation(line: 2535, column: 20, scope: !6964)
!6968 = !DILocation(line: 2535, column: 25, scope: !6964)
!6969 = !DILocation(line: 2535, column: 30, scope: !6964)
!6970 = !DILocation(line: 2535, column: 6, scope: !6917)
!6971 = !DILocation(line: 2536, column: 16, scope: !6972)
!6972 = distinct !DILexicalBlock(scope: !6973, file: !1, line: 2536, column: 3)
!6973 = distinct !DILexicalBlock(scope: !6964, file: !1, line: 2535, column: 46)
!6974 = !DILocation(line: 2536, column: 20, scope: !6972)
!6975 = !DILocation(line: 2536, column: 26, scope: !6972)
!6976 = !DILocation(line: 2536, column: 35, scope: !6972)
!6977 = !DILocation(line: 2536, column: 14, scope: !6972)
!6978 = !DILocation(line: 2536, column: 8, scope: !6972)
!6979 = !DILocation(line: 2536, column: 42, scope: !6980)
!6980 = distinct !DILexicalBlock(scope: !6972, file: !1, line: 2536, column: 3)
!6981 = !DILocation(line: 2536, column: 3, scope: !6972)
!6982 = !DILocation(line: 2537, column: 11, scope: !6983)
!6983 = distinct !DILexicalBlock(scope: !6980, file: !1, line: 2536, column: 70)
!6984 = !DILocation(line: 2537, column: 18, scope: !6983)
!6985 = !DILocation(line: 2537, column: 9, scope: !6983)
!6986 = !DILocation(line: 2538, column: 8, scope: !6987)
!6987 = distinct !DILexicalBlock(scope: !6983, file: !1, line: 2538, column: 8)
!6988 = !DILocation(line: 2538, column: 8, scope: !6983)
!6989 = !DILocation(line: 2539, column: 16, scope: !6990)
!6990 = distinct !DILexicalBlock(scope: !6987, file: !1, line: 2538, column: 14)
!6991 = !DILocation(line: 2539, column: 23, scope: !6990)
!6992 = !DILocation(line: 2539, column: 33, scope: !6990)
!6993 = !DILocation(line: 2539, column: 39, scope: !6990)
!6994 = !DILocation(line: 2539, column: 5, scope: !6990)
!6995 = !DILocation(line: 2540, column: 16, scope: !6990)
!6996 = !DILocation(line: 2540, column: 23, scope: !6990)
!6997 = !DILocation(line: 2540, column: 34, scope: !6990)
!6998 = !DILocation(line: 2540, column: 40, scope: !6990)
!6999 = !DILocation(line: 2540, column: 5, scope: !6990)
!7000 = !DILocation(line: 2541, column: 16, scope: !6990)
!7001 = !DILocation(line: 2541, column: 23, scope: !6990)
!7002 = !DILocation(line: 2541, column: 34, scope: !6990)
!7003 = !DILocation(line: 2541, column: 40, scope: !6990)
!7004 = !DILocation(line: 2541, column: 5, scope: !6990)
!7005 = !DILocation(line: 2542, column: 4, scope: !6990)
!7006 = !DILocation(line: 2543, column: 3, scope: !6983)
!7007 = !DILocation(line: 2536, column: 57, scope: !6980)
!7008 = !DILocation(line: 2536, column: 64, scope: !6980)
!7009 = !DILocation(line: 2536, column: 55, scope: !6980)
!7010 = !DILocation(line: 2536, column: 3, scope: !6980)
!7011 = distinct !{!7011, !6981, !7012}
!7012 = !DILocation(line: 2543, column: 3, scope: !6972)
!7013 = !DILocation(line: 2544, column: 2, scope: !6973)
!7014 = !DILocation(line: 2546, column: 16, scope: !7015)
!7015 = distinct !DILexicalBlock(scope: !6964, file: !1, line: 2545, column: 7)
!7016 = !DILocation(line: 2546, column: 20, scope: !7015)
!7017 = !DILocation(line: 2546, column: 26, scope: !7015)
!7018 = !DILocation(line: 2546, column: 30, scope: !7015)
!7019 = !DILocation(line: 2546, column: 3, scope: !7015)
!7020 = !DILocation(line: 2549, column: 16, scope: !7021)
!7021 = distinct !DILexicalBlock(scope: !7015, file: !1, line: 2549, column: 3)
!7022 = !DILocation(line: 2549, column: 20, scope: !7021)
!7023 = !DILocation(line: 2549, column: 26, scope: !7021)
!7024 = !DILocation(line: 2549, column: 35, scope: !7021)
!7025 = !DILocation(line: 2549, column: 14, scope: !7021)
!7026 = !DILocation(line: 2549, column: 8, scope: !7021)
!7027 = !DILocation(line: 2549, column: 42, scope: !7028)
!7028 = distinct !DILexicalBlock(scope: !7021, file: !1, line: 2549, column: 3)
!7029 = !DILocation(line: 2549, column: 3, scope: !7021)
!7030 = !DILocation(line: 2550, column: 4, scope: !7031)
!7031 = distinct !DILexicalBlock(scope: !7028, file: !1, line: 2549, column: 70)
!7032 = !DILocation(line: 2550, column: 11, scope: !7031)
!7033 = !DILocation(line: 2550, column: 16, scope: !7031)
!7034 = !DILocation(line: 2551, column: 3, scope: !7031)
!7035 = !DILocation(line: 2549, column: 57, scope: !7028)
!7036 = !DILocation(line: 2549, column: 64, scope: !7028)
!7037 = !DILocation(line: 2549, column: 55, scope: !7028)
!7038 = !DILocation(line: 2549, column: 3, scope: !7028)
!7039 = distinct !{!7039, !7029, !7040}
!7040 = !DILocation(line: 2551, column: 3, scope: !7021)
!7041 = !DILocation(line: 2554, column: 23, scope: !7015)
!7042 = !DILocation(line: 2554, column: 30, scope: !7015)
!7043 = !DILocation(line: 2554, column: 34, scope: !7015)
!7044 = !DILocation(line: 2554, column: 3, scope: !7015)
!7045 = !DILocation(line: 2560, column: 22, scope: !7015)
!7046 = !DILocation(line: 2560, column: 29, scope: !7015)
!7047 = !DILocation(line: 2560, column: 33, scope: !7015)
!7048 = !DILocation(line: 2560, column: 3, scope: !7015)
!7049 = !DILocation(line: 2563, column: 16, scope: !7050)
!7050 = distinct !DILexicalBlock(scope: !7015, file: !1, line: 2563, column: 3)
!7051 = !DILocation(line: 2563, column: 20, scope: !7050)
!7052 = !DILocation(line: 2563, column: 26, scope: !7050)
!7053 = !DILocation(line: 2563, column: 35, scope: !7050)
!7054 = !DILocation(line: 2563, column: 14, scope: !7050)
!7055 = !DILocation(line: 2563, column: 8, scope: !7050)
!7056 = !DILocation(line: 2563, column: 42, scope: !7057)
!7057 = distinct !DILexicalBlock(scope: !7050, file: !1, line: 2563, column: 3)
!7058 = !DILocation(line: 2563, column: 3, scope: !7050)
!7059 = !DILocation(line: 2565, column: 8, scope: !7060)
!7060 = distinct !DILexicalBlock(scope: !7061, file: !1, line: 2565, column: 8)
!7061 = distinct !DILexicalBlock(scope: !7057, file: !1, line: 2563, column: 70)
!7062 = !DILocation(line: 2565, column: 15, scope: !7060)
!7063 = !DILocation(line: 2565, column: 20, scope: !7060)
!7064 = !DILocation(line: 2565, column: 8, scope: !7061)
!7065 = !DILocation(line: 2566, column: 22, scope: !7066)
!7066 = distinct !DILexicalBlock(scope: !7060, file: !1, line: 2565, column: 35)
!7067 = !DILocation(line: 2566, column: 29, scope: !7066)
!7068 = !DILocation(line: 2566, column: 33, scope: !7066)
!7069 = !DILocation(line: 2566, column: 40, scope: !7066)
!7070 = !DILocation(line: 2566, column: 5, scope: !7066)
!7071 = !DILocation(line: 2567, column: 4, scope: !7066)
!7072 = !DILocation(line: 2569, column: 13, scope: !7073)
!7073 = distinct !DILexicalBlock(scope: !7060, file: !1, line: 2569, column: 13)
!7074 = !DILocation(line: 2569, column: 20, scope: !7073)
!7075 = !DILocation(line: 2569, column: 25, scope: !7073)
!7076 = !DILocation(line: 2569, column: 13, scope: !7060)
!7077 = !DILocation(line: 2570, column: 27, scope: !7078)
!7078 = distinct !DILexicalBlock(scope: !7073, file: !1, line: 2569, column: 42)
!7079 = !DILocation(line: 2570, column: 34, scope: !7078)
!7080 = !DILocation(line: 2570, column: 38, scope: !7078)
!7081 = !DILocation(line: 2570, column: 45, scope: !7078)
!7082 = !DILocation(line: 2570, column: 5, scope: !7078)
!7083 = !DILocation(line: 2571, column: 4, scope: !7078)
!7084 = !DILocation(line: 2573, column: 15, scope: !7085)
!7085 = distinct !DILexicalBlock(scope: !7073, file: !1, line: 2573, column: 13)
!7086 = !DILocation(line: 2573, column: 22, scope: !7085)
!7087 = !DILocation(line: 2573, column: 27, scope: !7085)
!7088 = !DILocation(line: 2573, column: 13, scope: !7073)
!7089 = !DILocation(line: 2574, column: 28, scope: !7090)
!7090 = distinct !DILexicalBlock(scope: !7085, file: !1, line: 2573, column: 41)
!7091 = !DILocation(line: 2574, column: 35, scope: !7090)
!7092 = !DILocation(line: 2574, column: 39, scope: !7090)
!7093 = !DILocation(line: 2574, column: 46, scope: !7090)
!7094 = !DILocation(line: 2574, column: 5, scope: !7090)
!7095 = !DILocation(line: 2575, column: 4, scope: !7090)
!7096 = !DILocation(line: 2576, column: 3, scope: !7061)
!7097 = !DILocation(line: 2563, column: 57, scope: !7057)
!7098 = !DILocation(line: 2563, column: 64, scope: !7057)
!7099 = !DILocation(line: 2563, column: 55, scope: !7057)
!7100 = !DILocation(line: 2563, column: 3, scope: !7057)
!7101 = distinct !{!7101, !7058, !7102}
!7102 = !DILocation(line: 2576, column: 3, scope: !7050)
!7103 = !DILocation(line: 2578, column: 20, scope: !7015)
!7104 = !DILocation(line: 2578, column: 27, scope: !7015)
!7105 = !DILocation(line: 2578, column: 31, scope: !7015)
!7106 = !DILocation(line: 2578, column: 3, scope: !7015)
!7107 = !DILocation(line: 2582, column: 15, scope: !7108)
!7108 = distinct !DILexicalBlock(scope: !6917, file: !1, line: 2582, column: 2)
!7109 = !DILocation(line: 2582, column: 19, scope: !7108)
!7110 = !DILocation(line: 2582, column: 25, scope: !7108)
!7111 = !DILocation(line: 2582, column: 34, scope: !7108)
!7112 = !DILocation(line: 2582, column: 13, scope: !7108)
!7113 = !DILocation(line: 2582, column: 7, scope: !7108)
!7114 = !DILocation(line: 2582, column: 41, scope: !7115)
!7115 = distinct !DILexicalBlock(scope: !7108, file: !1, line: 2582, column: 2)
!7116 = !DILocation(line: 2582, column: 2, scope: !7108)
!7117 = !DILocation(line: 2583, column: 7, scope: !7118)
!7118 = distinct !DILexicalBlock(scope: !7119, file: !1, line: 2583, column: 7)
!7119 = distinct !DILexicalBlock(scope: !7115, file: !1, line: 2582, column: 69)
!7120 = !DILocation(line: 2583, column: 14, scope: !7118)
!7121 = !DILocation(line: 2583, column: 7, scope: !7119)
!7122 = !DILocation(line: 2584, column: 17, scope: !7123)
!7123 = distinct !DILexicalBlock(scope: !7118, file: !1, line: 2583, column: 20)
!7124 = !DILocation(line: 2584, column: 23, scope: !7123)
!7125 = !DILocation(line: 2584, column: 30, scope: !7123)
!7126 = !DILocation(line: 2584, column: 36, scope: !7123)
!7127 = !DILocation(line: 2584, column: 4, scope: !7123)
!7128 = !DILocation(line: 2585, column: 16, scope: !7123)
!7129 = !DILocation(line: 2585, column: 23, scope: !7123)
!7130 = !DILocation(line: 2585, column: 33, scope: !7123)
!7131 = !DILocation(line: 2585, column: 40, scope: !7123)
!7132 = !DILocation(line: 2585, column: 50, scope: !7123)
!7133 = !DILocation(line: 2585, column: 4, scope: !7123)
!7134 = !DILocation(line: 2586, column: 3, scope: !7123)
!7135 = !DILocation(line: 2587, column: 2, scope: !7119)
!7136 = !DILocation(line: 2582, column: 56, scope: !7115)
!7137 = !DILocation(line: 2582, column: 63, scope: !7115)
!7138 = !DILocation(line: 2582, column: 54, scope: !7115)
!7139 = !DILocation(line: 2582, column: 2, scope: !7115)
!7140 = distinct !{!7140, !7116, !7141}
!7141 = !DILocation(line: 2587, column: 2, scope: !7108)
!7142 = !DILocation(line: 2588, column: 1, scope: !6917)
!7143 = distinct !DISubprogram(name: "splineik_init_tree", scope: !1, file: !1, line: 2016, type: !7144, scopeLine: 2017, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !544)
!7144 = !DISubroutineType(types: !7145)
!7145 = !{null, !5532, !569, !366}
!7146 = !DILocalVariable(name: "scene", arg: 1, scope: !7143, file: !1, line: 2016, type: !5532)
!7147 = !DILocation(line: 2016, column: 39, scope: !7143)
!7148 = !DILocalVariable(name: "ob", arg: 2, scope: !7143, file: !1, line: 2016, type: !569)
!7149 = !DILocation(line: 2016, column: 54, scope: !7143)
!7150 = !DILocalVariable(name: "UNUSED_ctime", arg: 3, scope: !7143, file: !1, line: 2016, type: !366)
!7151 = !DILocation(line: 2016, column: 64, scope: !7143)
!7152 = !DILocalVariable(name: "pchan", scope: !7143, file: !1, line: 2018, type: !2808)
!7153 = !DILocation(line: 2018, column: 16, scope: !7143)
!7154 = !DILocation(line: 2021, column: 15, scope: !7155)
!7155 = distinct !DILexicalBlock(scope: !7143, file: !1, line: 2021, column: 2)
!7156 = !DILocation(line: 2021, column: 19, scope: !7155)
!7157 = !DILocation(line: 2021, column: 25, scope: !7155)
!7158 = !DILocation(line: 2021, column: 34, scope: !7155)
!7159 = !DILocation(line: 2021, column: 13, scope: !7155)
!7160 = !DILocation(line: 2021, column: 7, scope: !7155)
!7161 = !DILocation(line: 2021, column: 41, scope: !7162)
!7162 = distinct !DILexicalBlock(scope: !7155, file: !1, line: 2021, column: 2)
!7163 = !DILocation(line: 2021, column: 2, scope: !7155)
!7164 = !DILocation(line: 2022, column: 7, scope: !7165)
!7165 = distinct !DILexicalBlock(scope: !7166, file: !1, line: 2022, column: 7)
!7166 = distinct !DILexicalBlock(scope: !7162, file: !1, line: 2021, column: 69)
!7167 = !DILocation(line: 2022, column: 14, scope: !7165)
!7168 = !DILocation(line: 2022, column: 24, scope: !7165)
!7169 = !DILocation(line: 2022, column: 7, scope: !7166)
!7170 = !DILocation(line: 2023, column: 34, scope: !7165)
!7171 = !DILocation(line: 2023, column: 41, scope: !7165)
!7172 = !DILocation(line: 2023, column: 45, scope: !7165)
!7173 = !DILocation(line: 2023, column: 4, scope: !7165)
!7174 = !DILocation(line: 2024, column: 2, scope: !7166)
!7175 = !DILocation(line: 2021, column: 56, scope: !7162)
!7176 = !DILocation(line: 2021, column: 63, scope: !7162)
!7177 = !DILocation(line: 2021, column: 54, scope: !7162)
!7178 = !DILocation(line: 2021, column: 2, scope: !7162)
!7179 = distinct !{!7179, !7163, !7180}
!7180 = !DILocation(line: 2024, column: 2, scope: !7155)
!7181 = !DILocation(line: 2025, column: 1, scope: !7143)
!7182 = distinct !DISubprogram(name: "splineik_execute_tree", scope: !1, file: !1, line: 2232, type: !7183, scopeLine: 2233, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !544)
!7183 = !DISubroutineType(types: !7184)
!7184 = !{null, !5532, !569, !2808, !366}
!7185 = !DILocalVariable(name: "scene", arg: 1, scope: !7182, file: !1, line: 2232, type: !5532)
!7186 = !DILocation(line: 2232, column: 42, scope: !7182)
!7187 = !DILocalVariable(name: "ob", arg: 2, scope: !7182, file: !1, line: 2232, type: !569)
!7188 = !DILocation(line: 2232, column: 57, scope: !7182)
!7189 = !DILocalVariable(name: "pchan_root", arg: 3, scope: !7182, file: !1, line: 2232, type: !2808)
!7190 = !DILocation(line: 2232, column: 75, scope: !7182)
!7191 = !DILocalVariable(name: "ctime", arg: 4, scope: !7182, file: !1, line: 2232, type: !366)
!7192 = !DILocation(line: 2232, column: 93, scope: !7182)
!7193 = !DILocalVariable(name: "tree", scope: !7182, file: !1, line: 2234, type: !7194)
!7194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7195, size: 64)
!7195 = !DIDerivedType(tag: DW_TAG_typedef, name: "tSplineIK_Tree", file: !1, line: 1839, baseType: !7196)
!7196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tSplineIK_Tree", file: !1, line: 1824, size: 512, elements: !7197)
!7197 = !{!7198, !7200, !7201, !7202, !7203, !7204, !7205, !7206, !7207, !7208}
!7198 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !7196, file: !1, line: 1825, baseType: !7199, size: 64)
!7199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7196, size: 64)
!7200 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !7196, file: !1, line: 1825, baseType: !7199, size: 64, offset: 64)
!7201 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !7196, file: !1, line: 1827, baseType: !141, size: 32, offset: 128)
!7202 = !DIDerivedType(tag: DW_TAG_member, name: "free_points", scope: !7196, file: !1, line: 1829, baseType: !1130, size: 8, offset: 160)
!7203 = !DIDerivedType(tag: DW_TAG_member, name: "chainlen", scope: !7196, file: !1, line: 1830, baseType: !284, size: 16, offset: 176)
!7204 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !7196, file: !1, line: 1832, baseType: !1099, size: 64, offset: 192)
!7205 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !7196, file: !1, line: 1833, baseType: !3776, size: 64, offset: 256)
!7206 = !DIDerivedType(tag: DW_TAG_member, name: "root", scope: !7196, file: !1, line: 1835, baseType: !2808, size: 64, offset: 320)
!7207 = !DIDerivedType(tag: DW_TAG_member, name: "con", scope: !7196, file: !1, line: 1837, baseType: !6415, size: 64, offset: 384)
!7208 = !DIDerivedType(tag: DW_TAG_member, name: "ikData", scope: !7196, file: !1, line: 1838, baseType: !7209, size: 64, offset: 448)
!7209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7210, size: 64)
!7210 = !DIDerivedType(tag: DW_TAG_typedef, name: "bSplineIKConstraint", file: !164, line: 176, baseType: !7211)
!7211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bSplineIKConstraint", file: !164, line: 164, size: 192, elements: !7212)
!7212 = !{!7213, !7214, !7215, !7216, !7217, !7218}
!7213 = !DIDerivedType(tag: DW_TAG_member, name: "tar", scope: !7211, file: !164, line: 166, baseType: !585, size: 64)
!7214 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !7211, file: !164, line: 169, baseType: !1099, size: 64, offset: 64)
!7215 = !DIDerivedType(tag: DW_TAG_member, name: "numpoints", scope: !7211, file: !164, line: 170, baseType: !284, size: 16, offset: 128)
!7216 = !DIDerivedType(tag: DW_TAG_member, name: "chainlen", scope: !7211, file: !164, line: 171, baseType: !284, size: 16, offset: 144)
!7217 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !7211, file: !164, line: 174, baseType: !284, size: 16, offset: 160)
!7218 = !DIDerivedType(tag: DW_TAG_member, name: "xzScaleMode", scope: !7211, file: !164, line: 175, baseType: !284, size: 16, offset: 176)
!7219 = !DILocation(line: 2234, column: 18, scope: !7182)
!7220 = !DILocation(line: 2237, column: 2, scope: !7182)
!7221 = !DILocation(line: 2237, column: 17, scope: !7182)
!7222 = !DILocation(line: 2237, column: 29, scope: !7182)
!7223 = !DILocation(line: 2237, column: 37, scope: !7182)
!7224 = !DILocation(line: 2237, column: 15, scope: !7182)
!7225 = !DILocation(line: 2237, column: 44, scope: !7182)
!7226 = !DILocalVariable(name: "i", scope: !7227, file: !1, line: 2238, type: !141)
!7227 = distinct !DILexicalBlock(scope: !7182, file: !1, line: 2237, column: 53)
!7228 = !DILocation(line: 2238, column: 7, scope: !7227)
!7229 = !DILocation(line: 2244, column: 12, scope: !7230)
!7230 = distinct !DILexicalBlock(scope: !7227, file: !1, line: 2244, column: 3)
!7231 = !DILocation(line: 2244, column: 18, scope: !7230)
!7232 = !DILocation(line: 2244, column: 27, scope: !7230)
!7233 = !DILocation(line: 2244, column: 10, scope: !7230)
!7234 = !DILocation(line: 2244, column: 8, scope: !7230)
!7235 = !DILocation(line: 2244, column: 32, scope: !7236)
!7236 = distinct !DILexicalBlock(scope: !7230, file: !1, line: 2244, column: 3)
!7237 = !DILocation(line: 2244, column: 34, scope: !7236)
!7238 = !DILocation(line: 2244, column: 3, scope: !7230)
!7239 = !DILocalVariable(name: "pchan", scope: !7240, file: !1, line: 2245, type: !2808)
!7240 = distinct !DILexicalBlock(scope: !7236, file: !1, line: 2244, column: 45)
!7241 = !DILocation(line: 2245, column: 18, scope: !7240)
!7242 = !DILocation(line: 2245, column: 26, scope: !7240)
!7243 = !DILocation(line: 2245, column: 32, scope: !7240)
!7244 = !DILocation(line: 2245, column: 38, scope: !7240)
!7245 = !DILocation(line: 2246, column: 27, scope: !7240)
!7246 = !DILocation(line: 2246, column: 33, scope: !7240)
!7247 = !DILocation(line: 2246, column: 40, scope: !7240)
!7248 = !DILocation(line: 2246, column: 44, scope: !7240)
!7249 = !DILocation(line: 2246, column: 51, scope: !7240)
!7250 = !DILocation(line: 2246, column: 54, scope: !7240)
!7251 = !DILocation(line: 2246, column: 4, scope: !7240)
!7252 = !DILocation(line: 2247, column: 3, scope: !7240)
!7253 = !DILocation(line: 2244, column: 41, scope: !7236)
!7254 = !DILocation(line: 2244, column: 3, scope: !7236)
!7255 = distinct !{!7255, !7238, !7256}
!7256 = !DILocation(line: 2247, column: 3, scope: !7230)
!7257 = !DILocation(line: 2250, column: 7, scope: !7258)
!7258 = distinct !DILexicalBlock(scope: !7227, file: !1, line: 2250, column: 7)
!7259 = !DILocation(line: 2250, column: 13, scope: !7258)
!7260 = !DILocation(line: 2250, column: 7, scope: !7227)
!7261 = !DILocation(line: 2251, column: 4, scope: !7258)
!7262 = !DILocation(line: 2251, column: 14, scope: !7258)
!7263 = !DILocation(line: 2251, column: 20, scope: !7258)
!7264 = !DILocation(line: 2252, column: 7, scope: !7265)
!7265 = distinct !DILexicalBlock(scope: !7227, file: !1, line: 2252, column: 7)
!7266 = !DILocation(line: 2252, column: 13, scope: !7265)
!7267 = !DILocation(line: 2252, column: 7, scope: !7227)
!7268 = !DILocation(line: 2253, column: 4, scope: !7265)
!7269 = !DILocation(line: 2253, column: 14, scope: !7265)
!7270 = !DILocation(line: 2253, column: 20, scope: !7265)
!7271 = !DILocation(line: 2256, column: 18, scope: !7227)
!7272 = !DILocation(line: 2256, column: 30, scope: !7227)
!7273 = !DILocation(line: 2256, column: 39, scope: !7227)
!7274 = !DILocation(line: 2256, column: 3, scope: !7227)
!7275 = distinct !{!7275, !7220, !7276}
!7276 = !DILocation(line: 2257, column: 2, scope: !7182)
!7277 = !DILocation(line: 2258, column: 1, scope: !7182)
!7278 = distinct !DISubprogram(name: "BKE_armature_boundbox_get", scope: !1, file: !1, line: 2634, type: !7279, scopeLine: 2635, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !544)
!7279 = !DISubroutineType(types: !7280)
!7280 = !{!595, !569}
!7281 = !DILocalVariable(name: "ob", arg: 1, scope: !7278, file: !1, line: 2634, type: !569)
!7282 = !DILocation(line: 2634, column: 45, scope: !7278)
!7283 = !DILocation(line: 2636, column: 20, scope: !7278)
!7284 = !DILocation(line: 2636, column: 2, scope: !7278)
!7285 = !DILocation(line: 2638, column: 9, scope: !7278)
!7286 = !DILocation(line: 2638, column: 13, scope: !7278)
!7287 = !DILocation(line: 2638, column: 2, scope: !7278)
!7288 = distinct !DISubprogram(name: "boundbox_armature", scope: !1, file: !1, line: 2604, type: !7289, scopeLine: 2605, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !544)
!7289 = !DISubroutineType(types: !7290)
!7290 = !{null, !569, !1099, !1099}
!7291 = !DILocalVariable(name: "ob", arg: 1, scope: !7288, file: !1, line: 2604, type: !569)
!7292 = !DILocation(line: 2604, column: 39, scope: !7288)
!7293 = !DILocalVariable(name: "loc", arg: 2, scope: !7288, file: !1, line: 2604, type: !1099)
!7294 = !DILocation(line: 2604, column: 49, scope: !7288)
!7295 = !DILocalVariable(name: "size", arg: 3, scope: !7288, file: !1, line: 2604, type: !1099)
!7296 = !DILocation(line: 2604, column: 63, scope: !7288)
!7297 = !DILocalVariable(name: "bb", scope: !7288, file: !1, line: 2606, type: !7298)
!7298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7299, size: 64)
!7299 = !DIDerivedType(tag: DW_TAG_typedef, name: "BoundBox", file: !57, line: 100, baseType: !596)
!7300 = !DILocation(line: 2606, column: 12, scope: !7288)
!7301 = !DILocalVariable(name: "min", scope: !7288, file: !1, line: 2607, type: !408)
!7302 = !DILocation(line: 2607, column: 8, scope: !7288)
!7303 = !DILocalVariable(name: "max", scope: !7288, file: !1, line: 2607, type: !408)
!7304 = !DILocation(line: 2607, column: 16, scope: !7288)
!7305 = !DILocalVariable(name: "mloc", scope: !7288, file: !1, line: 2608, type: !408)
!7306 = !DILocation(line: 2608, column: 8, scope: !7288)
!7307 = !DILocalVariable(name: "msize", scope: !7288, file: !1, line: 2608, type: !408)
!7308 = !DILocation(line: 2608, column: 17, scope: !7288)
!7309 = !DILocation(line: 2610, column: 6, scope: !7310)
!7310 = distinct !DILexicalBlock(scope: !7288, file: !1, line: 2610, column: 6)
!7311 = !DILocation(line: 2610, column: 10, scope: !7310)
!7312 = !DILocation(line: 2610, column: 13, scope: !7310)
!7313 = !DILocation(line: 2610, column: 6, scope: !7288)
!7314 = !DILocation(line: 2611, column: 12, scope: !7310)
!7315 = !DILocation(line: 2611, column: 3, scope: !7310)
!7316 = !DILocation(line: 2611, column: 7, scope: !7310)
!7317 = !DILocation(line: 2611, column: 10, scope: !7310)
!7318 = !DILocation(line: 2612, column: 7, scope: !7288)
!7319 = !DILocation(line: 2612, column: 11, scope: !7288)
!7320 = !DILocation(line: 2612, column: 5, scope: !7288)
!7321 = !DILocation(line: 2614, column: 7, scope: !7322)
!7322 = distinct !DILexicalBlock(scope: !7288, file: !1, line: 2614, column: 6)
!7323 = !DILocation(line: 2614, column: 6, scope: !7288)
!7324 = !DILocation(line: 2615, column: 9, scope: !7322)
!7325 = !DILocation(line: 2615, column: 7, scope: !7322)
!7326 = !DILocation(line: 2615, column: 3, scope: !7322)
!7327 = !DILocation(line: 2616, column: 7, scope: !7328)
!7328 = distinct !DILexicalBlock(scope: !7288, file: !1, line: 2616, column: 6)
!7329 = !DILocation(line: 2616, column: 6, scope: !7288)
!7330 = !DILocation(line: 2617, column: 10, scope: !7328)
!7331 = !DILocation(line: 2617, column: 8, scope: !7328)
!7332 = !DILocation(line: 2617, column: 3, scope: !7328)
!7333 = !DILocation(line: 2619, column: 2, scope: !7334)
!7334 = distinct !DILexicalBlock(scope: !7288, file: !1, line: 2619, column: 2)
!7335 = !DILocation(line: 2620, column: 23, scope: !7336)
!7336 = distinct !DILexicalBlock(scope: !7288, file: !1, line: 2620, column: 6)
!7337 = !DILocation(line: 2620, column: 27, scope: !7336)
!7338 = !DILocation(line: 2620, column: 32, scope: !7336)
!7339 = !DILocation(line: 2620, column: 7, scope: !7336)
!7340 = !DILocation(line: 2620, column: 6, scope: !7288)
!7341 = !DILocation(line: 2621, column: 21, scope: !7342)
!7342 = distinct !DILexicalBlock(scope: !7336, file: !1, line: 2620, column: 38)
!7343 = !DILocation(line: 2621, column: 28, scope: !7342)
!7344 = !DILocation(line: 2621, column: 12, scope: !7342)
!7345 = !DILocation(line: 2621, column: 19, scope: !7342)
!7346 = !DILocation(line: 2621, column: 3, scope: !7342)
!7347 = !DILocation(line: 2621, column: 10, scope: !7342)
!7348 = !DILocation(line: 2622, column: 21, scope: !7342)
!7349 = !DILocation(line: 2622, column: 28, scope: !7342)
!7350 = !DILocation(line: 2622, column: 12, scope: !7342)
!7351 = !DILocation(line: 2622, column: 19, scope: !7342)
!7352 = !DILocation(line: 2622, column: 3, scope: !7342)
!7353 = !DILocation(line: 2622, column: 10, scope: !7342)
!7354 = !DILocation(line: 2623, column: 2, scope: !7342)
!7355 = !DILocation(line: 2625, column: 14, scope: !7288)
!7356 = !DILocation(line: 2625, column: 19, scope: !7288)
!7357 = !DILocation(line: 2625, column: 24, scope: !7288)
!7358 = !DILocation(line: 2625, column: 2, scope: !7288)
!7359 = !DILocation(line: 2627, column: 13, scope: !7288)
!7360 = !DILocation(line: 2627, column: 22, scope: !7288)
!7361 = !DILocation(line: 2627, column: 20, scope: !7288)
!7362 = !DILocation(line: 2627, column: 30, scope: !7288)
!7363 = !DILocation(line: 2627, column: 2, scope: !7288)
!7364 = !DILocation(line: 2627, column: 10, scope: !7288)
!7365 = !DILocation(line: 2628, column: 13, scope: !7288)
!7366 = !DILocation(line: 2628, column: 22, scope: !7288)
!7367 = !DILocation(line: 2628, column: 20, scope: !7288)
!7368 = !DILocation(line: 2628, column: 30, scope: !7288)
!7369 = !DILocation(line: 2628, column: 2, scope: !7288)
!7370 = !DILocation(line: 2628, column: 10, scope: !7288)
!7371 = !DILocation(line: 2629, column: 13, scope: !7288)
!7372 = !DILocation(line: 2629, column: 22, scope: !7288)
!7373 = !DILocation(line: 2629, column: 20, scope: !7288)
!7374 = !DILocation(line: 2629, column: 30, scope: !7288)
!7375 = !DILocation(line: 2629, column: 2, scope: !7288)
!7376 = !DILocation(line: 2629, column: 10, scope: !7288)
!7377 = !DILocation(line: 2631, column: 32, scope: !7288)
!7378 = !DILocation(line: 2631, column: 36, scope: !7288)
!7379 = !DILocation(line: 2631, column: 41, scope: !7288)
!7380 = !DILocation(line: 2631, column: 2, scope: !7288)
!7381 = !DILocation(line: 2632, column: 1, scope: !7288)
!7382 = distinct !DISubprogram(name: "b_bone_deform", scope: !1, file: !1, line: 632, type: !7383, scopeLine: 633, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !544)
!7383 = !DISubroutineType(types: !7384)
!7384 = !{null, !3750, !395, !1099, !3756, !1108}
!7385 = !DILocalVariable(name: "pdef_info", arg: 1, scope: !7382, file: !1, line: 632, type: !3750)
!7386 = !DILocation(line: 632, column: 44, scope: !7382)
!7387 = !DILocalVariable(name: "bone", arg: 2, scope: !7382, file: !1, line: 632, type: !395)
!7388 = !DILocation(line: 632, column: 61, scope: !7382)
!7389 = !DILocalVariable(name: "co", arg: 3, scope: !7382, file: !1, line: 632, type: !1099)
!7390 = !DILocation(line: 632, column: 73, scope: !7382)
!7391 = !DILocalVariable(name: "dq", arg: 4, scope: !7382, file: !1, line: 632, type: !3756)
!7392 = !DILocation(line: 632, column: 90, scope: !7382)
!7393 = !DILocalVariable(name: "defmat", arg: 5, scope: !7382, file: !1, line: 632, type: !1108)
!7394 = !DILocation(line: 632, column: 100, scope: !7382)
!7395 = !DILocalVariable(name: "b_bone", scope: !7382, file: !1, line: 634, type: !2853)
!7396 = !DILocation(line: 634, column: 8, scope: !7382)
!7397 = !DILocation(line: 634, column: 17, scope: !7382)
!7398 = !DILocation(line: 634, column: 28, scope: !7382)
!7399 = !DILocalVariable(name: "mat", scope: !7382, file: !1, line: 635, type: !1136)
!7400 = !DILocation(line: 635, column: 10, scope: !7382)
!7401 = !DILocation(line: 635, column: 20, scope: !7382)
!7402 = !DILocation(line: 635, column: 30, scope: !7382)
!7403 = !DILocalVariable(name: "segment", scope: !7382, file: !1, line: 636, type: !366)
!7404 = !DILocation(line: 636, column: 8, scope: !7382)
!7405 = !DILocalVariable(name: "y", scope: !7382, file: !1, line: 636, type: !366)
!7406 = !DILocation(line: 636, column: 17, scope: !7382)
!7407 = !DILocalVariable(name: "a", scope: !7382, file: !1, line: 637, type: !141)
!7408 = !DILocation(line: 637, column: 6, scope: !7382)
!7409 = !DILocation(line: 640, column: 6, scope: !7382)
!7410 = !DILocation(line: 640, column: 18, scope: !7382)
!7411 = !DILocation(line: 640, column: 16, scope: !7382)
!7412 = !DILocation(line: 640, column: 26, scope: !7382)
!7413 = !DILocation(line: 640, column: 38, scope: !7382)
!7414 = !DILocation(line: 640, column: 36, scope: !7382)
!7415 = !DILocation(line: 640, column: 24, scope: !7382)
!7416 = !DILocation(line: 640, column: 46, scope: !7382)
!7417 = !DILocation(line: 640, column: 58, scope: !7382)
!7418 = !DILocation(line: 640, column: 56, scope: !7382)
!7419 = !DILocation(line: 640, column: 44, scope: !7382)
!7420 = !DILocation(line: 640, column: 66, scope: !7382)
!7421 = !DILocation(line: 640, column: 64, scope: !7382)
!7422 = !DILocation(line: 640, column: 4, scope: !7382)
!7423 = !DILocation(line: 643, column: 12, scope: !7382)
!7424 = !DILocation(line: 643, column: 18, scope: !7382)
!7425 = !DILocation(line: 643, column: 35, scope: !7382)
!7426 = !DILocation(line: 643, column: 41, scope: !7382)
!7427 = !DILocation(line: 643, column: 28, scope: !7382)
!7428 = !DILocation(line: 643, column: 25, scope: !7382)
!7429 = !DILocation(line: 643, column: 10, scope: !7382)
!7430 = !DILocation(line: 644, column: 12, scope: !7382)
!7431 = !DILocation(line: 644, column: 16, scope: !7382)
!7432 = !DILocation(line: 644, column: 14, scope: !7382)
!7433 = !DILocation(line: 644, column: 6, scope: !7382)
!7434 = !DILocation(line: 644, column: 4, scope: !7382)
!7435 = !DILocation(line: 648, column: 2, scope: !7436)
!7436 = distinct !DILexicalBlock(scope: !7437, file: !1, line: 648, column: 2)
!7437 = distinct !DILexicalBlock(scope: !7382, file: !1, line: 648, column: 2)
!7438 = !DILocation(line: 648, column: 2, scope: !7437)
!7439 = !DILocation(line: 648, column: 2, scope: !7440)
!7440 = distinct !DILexicalBlock(scope: !7436, file: !1, line: 648, column: 2)
!7441 = !DILocation(line: 650, column: 6, scope: !7442)
!7442 = distinct !DILexicalBlock(scope: !7382, file: !1, line: 650, column: 6)
!7443 = !DILocation(line: 650, column: 6, scope: !7382)
!7444 = !DILocation(line: 651, column: 14, scope: !7445)
!7445 = distinct !DILexicalBlock(scope: !7442, file: !1, line: 650, column: 10)
!7446 = !DILocation(line: 651, column: 20, scope: !7445)
!7447 = !DILocation(line: 651, column: 31, scope: !7445)
!7448 = !DILocation(line: 651, column: 50, scope: !7445)
!7449 = !DILocation(line: 651, column: 19, scope: !7445)
!7450 = !DILocation(line: 651, column: 3, scope: !7445)
!7451 = !DILocation(line: 652, column: 2, scope: !7445)
!7452 = !DILocation(line: 654, column: 13, scope: !7453)
!7453 = distinct !DILexicalBlock(scope: !7442, file: !1, line: 653, column: 7)
!7454 = !DILocation(line: 654, column: 20, scope: !7453)
!7455 = !DILocation(line: 654, column: 22, scope: !7453)
!7456 = !DILocation(line: 654, column: 27, scope: !7453)
!7457 = !DILocation(line: 654, column: 32, scope: !7453)
!7458 = !DILocation(line: 654, column: 3, scope: !7453)
!7459 = !DILocation(line: 656, column: 7, scope: !7460)
!7460 = distinct !DILexicalBlock(scope: !7453, file: !1, line: 656, column: 7)
!7461 = !DILocation(line: 656, column: 7, scope: !7453)
!7462 = !DILocation(line: 657, column: 15, scope: !7463)
!7463 = distinct !DILexicalBlock(scope: !7460, file: !1, line: 656, column: 15)
!7464 = !DILocation(line: 657, column: 23, scope: !7463)
!7465 = !DILocation(line: 657, column: 30, scope: !7463)
!7466 = !DILocation(line: 657, column: 32, scope: !7463)
!7467 = !DILocation(line: 657, column: 37, scope: !7463)
!7468 = !DILocation(line: 657, column: 4, scope: !7463)
!7469 = !DILocation(line: 658, column: 3, scope: !7463)
!7470 = !DILocation(line: 660, column: 1, scope: !7382)
!7471 = distinct !DISubprogram(name: "pchan_deform_mat_add", scope: !1, file: !1, line: 714, type: !7472, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !544)
!7472 = !DISubroutineType(types: !7473)
!7473 = !{null, !2808, !366, !1108, !1108}
!7474 = !DILocalVariable(name: "pchan", arg: 1, scope: !7471, file: !1, line: 714, type: !2808)
!7475 = !DILocation(line: 714, column: 48, scope: !7471)
!7476 = !DILocalVariable(name: "weight", arg: 2, scope: !7471, file: !1, line: 714, type: !366)
!7477 = !DILocation(line: 714, column: 61, scope: !7471)
!7478 = !DILocalVariable(name: "bbonemat", arg: 3, scope: !7471, file: !1, line: 714, type: !1108)
!7479 = !DILocation(line: 714, column: 75, scope: !7471)
!7480 = !DILocalVariable(name: "mat", arg: 4, scope: !7471, file: !1, line: 714, type: !1108)
!7481 = !DILocation(line: 714, column: 97, scope: !7471)
!7482 = !DILocalVariable(name: "wmat", scope: !7471, file: !1, line: 716, type: !413)
!7483 = !DILocation(line: 716, column: 8, scope: !7471)
!7484 = !DILocation(line: 718, column: 6, scope: !7485)
!7485 = distinct !DILexicalBlock(scope: !7471, file: !1, line: 718, column: 6)
!7486 = !DILocation(line: 718, column: 13, scope: !7485)
!7487 = !DILocation(line: 718, column: 19, scope: !7485)
!7488 = !DILocation(line: 718, column: 28, scope: !7485)
!7489 = !DILocation(line: 718, column: 6, scope: !7471)
!7490 = !DILocation(line: 719, column: 14, scope: !7485)
!7491 = !DILocation(line: 719, column: 20, scope: !7485)
!7492 = !DILocation(line: 719, column: 3, scope: !7485)
!7493 = !DILocation(line: 721, column: 14, scope: !7485)
!7494 = !DILocation(line: 721, column: 20, scope: !7485)
!7495 = !DILocation(line: 721, column: 27, scope: !7485)
!7496 = !DILocation(line: 721, column: 3, scope: !7485)
!7497 = !DILocation(line: 723, column: 12, scope: !7471)
!7498 = !DILocation(line: 723, column: 18, scope: !7471)
!7499 = !DILocation(line: 723, column: 2, scope: !7471)
!7500 = !DILocation(line: 724, column: 14, scope: !7471)
!7501 = !DILocation(line: 724, column: 19, scope: !7471)
!7502 = !DILocation(line: 724, column: 24, scope: !7471)
!7503 = !DILocation(line: 724, column: 2, scope: !7471)
!7504 = !DILocation(line: 725, column: 1, scope: !7471)
!7505 = distinct !DISubprogram(name: "madd_v3_v3fl", scope: !3267, file: !3267, line: 507, type: !7506, scopeLine: 508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !544)
!7506 = !DISubroutineType(types: !7507)
!7507 = !{null, !1099, !1073, !366}
!7508 = !DILocalVariable(name: "r", arg: 1, scope: !7505, file: !3267, line: 507, type: !1099)
!7509 = !DILocation(line: 507, column: 33, scope: !7505)
!7510 = !DILocalVariable(name: "a", arg: 2, scope: !7505, file: !3267, line: 507, type: !1073)
!7511 = !DILocation(line: 507, column: 51, scope: !7505)
!7512 = !DILocalVariable(name: "f", arg: 3, scope: !7505, file: !3267, line: 507, type: !366)
!7513 = !DILocation(line: 507, column: 63, scope: !7505)
!7514 = !DILocation(line: 509, column: 10, scope: !7505)
!7515 = !DILocation(line: 509, column: 17, scope: !7505)
!7516 = !DILocation(line: 509, column: 15, scope: !7505)
!7517 = !DILocation(line: 509, column: 2, scope: !7505)
!7518 = !DILocation(line: 509, column: 7, scope: !7505)
!7519 = !DILocation(line: 510, column: 10, scope: !7505)
!7520 = !DILocation(line: 510, column: 17, scope: !7505)
!7521 = !DILocation(line: 510, column: 15, scope: !7505)
!7522 = !DILocation(line: 510, column: 2, scope: !7505)
!7523 = !DILocation(line: 510, column: 7, scope: !7505)
!7524 = !DILocation(line: 511, column: 10, scope: !7505)
!7525 = !DILocation(line: 511, column: 17, scope: !7505)
!7526 = !DILocation(line: 511, column: 15, scope: !7505)
!7527 = !DILocation(line: 511, column: 2, scope: !7505)
!7528 = !DILocation(line: 511, column: 7, scope: !7505)
!7529 = !DILocation(line: 512, column: 1, scope: !7505)
!7530 = distinct !DISubprogram(name: "mul_v3_v3fl", scope: !3267, file: !3267, line: 399, type: !7506, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !544)
!7531 = !DILocalVariable(name: "r", arg: 1, scope: !7530, file: !3267, line: 399, type: !1099)
!7532 = !DILocation(line: 399, column: 32, scope: !7530)
!7533 = !DILocalVariable(name: "a", arg: 2, scope: !7530, file: !3267, line: 399, type: !1073)
!7534 = !DILocation(line: 399, column: 50, scope: !7530)
!7535 = !DILocalVariable(name: "f", arg: 3, scope: !7530, file: !3267, line: 399, type: !366)
!7536 = !DILocation(line: 399, column: 62, scope: !7530)
!7537 = !DILocation(line: 401, column: 9, scope: !7530)
!7538 = !DILocation(line: 401, column: 16, scope: !7530)
!7539 = !DILocation(line: 401, column: 14, scope: !7530)
!7540 = !DILocation(line: 401, column: 2, scope: !7530)
!7541 = !DILocation(line: 401, column: 7, scope: !7530)
!7542 = !DILocation(line: 402, column: 9, scope: !7530)
!7543 = !DILocation(line: 402, column: 16, scope: !7530)
!7544 = !DILocation(line: 402, column: 14, scope: !7530)
!7545 = !DILocation(line: 402, column: 2, scope: !7530)
!7546 = !DILocation(line: 402, column: 7, scope: !7530)
!7547 = !DILocation(line: 403, column: 9, scope: !7530)
!7548 = !DILocation(line: 403, column: 16, scope: !7530)
!7549 = !DILocation(line: 403, column: 14, scope: !7530)
!7550 = !DILocation(line: 403, column: 2, scope: !7530)
!7551 = !DILocation(line: 403, column: 7, scope: !7530)
!7552 = !DILocation(line: 404, column: 1, scope: !7530)
!7553 = distinct !DISubprogram(name: "zero_v3", scope: !3267, file: !3267, line: 43, type: !7554, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !544)
!7554 = !DISubroutineType(types: !7555)
!7555 = !{null, !1099}
!7556 = !DILocalVariable(name: "r", arg: 1, scope: !7553, file: !3267, line: 43, type: !1099)
!7557 = !DILocation(line: 43, column: 28, scope: !7553)
!7558 = !DILocation(line: 45, column: 2, scope: !7553)
!7559 = !DILocation(line: 45, column: 7, scope: !7553)
!7560 = !DILocation(line: 46, column: 2, scope: !7553)
!7561 = !DILocation(line: 46, column: 7, scope: !7553)
!7562 = !DILocation(line: 47, column: 2, scope: !7553)
!7563 = !DILocation(line: 47, column: 7, scope: !7553)
!7564 = !DILocation(line: 48, column: 1, scope: !7553)
!7565 = distinct !DISubprogram(name: "len_v3", scope: !3267, file: !3267, line: 714, type: !3696, scopeLine: 715, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !544)
!7566 = !DILocalVariable(name: "a", arg: 1, scope: !7565, file: !3267, line: 714, type: !1073)
!7567 = !DILocation(line: 714, column: 34, scope: !7565)
!7568 = !DILocation(line: 716, column: 24, scope: !7565)
!7569 = !DILocation(line: 716, column: 27, scope: !7565)
!7570 = !DILocation(line: 716, column: 15, scope: !7565)
!7571 = !DILocation(line: 716, column: 9, scope: !7565)
!7572 = !DILocation(line: 716, column: 2, scope: !7565)
!7573 = distinct !DISubprogram(name: "splineik_init_tree_from_pchan", scope: !1, file: !1, line: 1844, type: !7574, scopeLine: 1845, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !544)
!7574 = !DISubroutineType(types: !7575)
!7575 = !{null, !5532, !569, !2808}
!7576 = !DILocalVariable(name: "scene", arg: 1, scope: !7573, file: !1, line: 1844, type: !5532)
!7577 = !DILocation(line: 1844, column: 50, scope: !7573)
!7578 = !DILocalVariable(name: "UNUSED_ob", arg: 2, scope: !7573, file: !1, line: 1844, type: !569)
!7579 = !DILocation(line: 1844, column: 65, scope: !7573)
!7580 = !DILocalVariable(name: "pchan_tip", arg: 3, scope: !7573, file: !1, line: 1844, type: !2808)
!7581 = !DILocation(line: 1844, column: 91, scope: !7573)
!7582 = !DILocalVariable(name: "pchan", scope: !7573, file: !1, line: 1846, type: !2808)
!7583 = !DILocation(line: 1846, column: 16, scope: !7573)
!7584 = !DILocalVariable(name: "pchanRoot", scope: !7573, file: !1, line: 1846, type: !2808)
!7585 = !DILocation(line: 1846, column: 24, scope: !7573)
!7586 = !DILocalVariable(name: "pchanChain", scope: !7573, file: !1, line: 1847, type: !7587)
!7587 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2808, size: 16320, elements: !7588)
!7588 = !{!7589}
!7589 = !DISubrange(count: 255)
!7590 = !DILocation(line: 1847, column: 16, scope: !7573)
!7591 = !DILocalVariable(name: "con", scope: !7573, file: !1, line: 1848, type: !6415)
!7592 = !DILocation(line: 1848, column: 15, scope: !7573)
!7593 = !DILocalVariable(name: "ikData", scope: !7573, file: !1, line: 1849, type: !7209)
!7594 = !DILocation(line: 1849, column: 23, scope: !7573)
!7595 = !DILocalVariable(name: "boneLengths", scope: !7573, file: !1, line: 1850, type: !7596)
!7596 = !DICompositeType(tag: DW_TAG_array_type, baseType: !366, size: 8160, elements: !7588)
!7597 = !DILocation(line: 1850, column: 8, scope: !7573)
!7598 = !DILocalVariable(name: "jointPoints", scope: !7573, file: !1, line: 1850, type: !1099)
!7599 = !DILocation(line: 1850, column: 27, scope: !7573)
!7600 = !DILocalVariable(name: "totLength", scope: !7573, file: !1, line: 1851, type: !366)
!7601 = !DILocation(line: 1851, column: 8, scope: !7573)
!7602 = !DILocalVariable(name: "free_joints", scope: !7573, file: !1, line: 1852, type: !1130)
!7603 = !DILocation(line: 1852, column: 7, scope: !7573)
!7604 = !DILocalVariable(name: "segcount", scope: !7573, file: !1, line: 1853, type: !141)
!7605 = !DILocation(line: 1853, column: 6, scope: !7573)
!7606 = !DILocation(line: 1856, column: 13, scope: !7607)
!7607 = distinct !DILexicalBlock(scope: !7573, file: !1, line: 1856, column: 2)
!7608 = !DILocation(line: 1856, column: 24, scope: !7607)
!7609 = !DILocation(line: 1856, column: 36, scope: !7607)
!7610 = !DILocation(line: 1856, column: 11, scope: !7607)
!7611 = !DILocation(line: 1856, column: 7, scope: !7607)
!7612 = !DILocation(line: 1856, column: 43, scope: !7613)
!7613 = distinct !DILexicalBlock(scope: !7607, file: !1, line: 1856, column: 2)
!7614 = !DILocation(line: 1856, column: 2, scope: !7607)
!7615 = !DILocation(line: 1857, column: 7, scope: !7616)
!7616 = distinct !DILexicalBlock(scope: !7617, file: !1, line: 1857, column: 7)
!7617 = distinct !DILexicalBlock(scope: !7613, file: !1, line: 1856, column: 65)
!7618 = !DILocation(line: 1857, column: 12, scope: !7616)
!7619 = !DILocation(line: 1857, column: 17, scope: !7616)
!7620 = !DILocation(line: 1857, column: 7, scope: !7617)
!7621 = !DILocation(line: 1858, column: 13, scope: !7622)
!7622 = distinct !DILexicalBlock(scope: !7616, file: !1, line: 1857, column: 46)
!7623 = !DILocation(line: 1858, column: 18, scope: !7622)
!7624 = !DILocation(line: 1858, column: 11, scope: !7622)
!7625 = !DILocation(line: 1861, column: 9, scope: !7626)
!7626 = distinct !DILexicalBlock(scope: !7622, file: !1, line: 1861, column: 8)
!7627 = !DILocation(line: 1861, column: 17, scope: !7626)
!7628 = !DILocation(line: 1861, column: 21, scope: !7626)
!7629 = !DILocation(line: 1861, column: 30, scope: !7626)
!7630 = !DILocation(line: 1861, column: 34, scope: !7626)
!7631 = !DILocation(line: 1861, column: 42, scope: !7626)
!7632 = !DILocation(line: 1861, column: 47, scope: !7626)
!7633 = !DILocation(line: 1861, column: 52, scope: !7626)
!7634 = !DILocation(line: 1861, column: 8, scope: !7622)
!7635 = !DILocation(line: 1862, column: 5, scope: !7626)
!7636 = !DILocation(line: 1864, column: 9, scope: !7637)
!7637 = distinct !DILexicalBlock(scope: !7622, file: !1, line: 1864, column: 8)
!7638 = !DILocation(line: 1864, column: 14, scope: !7637)
!7639 = !DILocation(line: 1864, column: 22, scope: !7637)
!7640 = !DILocation(line: 1864, column: 31, scope: !7637)
!7641 = !DILocation(line: 1864, column: 35, scope: !7637)
!7642 = !DILocation(line: 1864, column: 40, scope: !7637)
!7643 = !DILocation(line: 1864, column: 45, scope: !7637)
!7644 = !DILocation(line: 1864, column: 8, scope: !7622)
!7645 = !DILocation(line: 1865, column: 5, scope: !7637)
!7646 = !DILocation(line: 1868, column: 4, scope: !7622)
!7647 = !DILocation(line: 1870, column: 2, scope: !7617)
!7648 = !DILocation(line: 1856, column: 54, scope: !7613)
!7649 = !DILocation(line: 1856, column: 59, scope: !7613)
!7650 = !DILocation(line: 1856, column: 52, scope: !7613)
!7651 = !DILocation(line: 1856, column: 2, scope: !7613)
!7652 = distinct !{!7652, !7614, !7653}
!7653 = !DILocation(line: 1870, column: 2, scope: !7607)
!7654 = !DILocation(line: 1871, column: 6, scope: !7655)
!7655 = distinct !DILexicalBlock(scope: !7573, file: !1, line: 1871, column: 6)
!7656 = !DILocation(line: 1871, column: 10, scope: !7655)
!7657 = !DILocation(line: 1871, column: 6, scope: !7573)
!7658 = !DILocation(line: 1872, column: 3, scope: !7655)
!7659 = !DILocation(line: 1877, column: 6, scope: !7660)
!7660 = distinct !DILexicalBlock(scope: !7573, file: !1, line: 1877, column: 6)
!7661 = !DILocation(line: 1877, column: 14, scope: !7660)
!7662 = !DILocation(line: 1877, column: 6, scope: !7573)
!7663 = !DILocation(line: 1883, column: 7, scope: !7664)
!7664 = distinct !DILexicalBlock(scope: !7665, file: !1, line: 1883, column: 7)
!7665 = distinct !DILexicalBlock(scope: !7660, file: !1, line: 1877, column: 19)
!7666 = !DILocation(line: 1883, column: 7, scope: !7665)
!7667 = !DILocation(line: 1884, column: 33, scope: !7668)
!7668 = distinct !DILexicalBlock(scope: !7664, file: !1, line: 1883, column: 116)
!7669 = !DILocation(line: 1884, column: 40, scope: !7668)
!7670 = !DILocation(line: 1884, column: 48, scope: !7668)
!7671 = !DILocation(line: 1884, column: 4, scope: !7668)
!7672 = !DILocation(line: 1887, column: 8, scope: !7673)
!7673 = distinct !DILexicalBlock(scope: !7668, file: !1, line: 1887, column: 8)
!7674 = !DILocation(line: 1887, column: 8, scope: !7668)
!7675 = !DILocation(line: 1889, column: 5, scope: !7676)
!7676 = distinct !DILexicalBlock(scope: !7673, file: !1, line: 1887, column: 90)
!7677 = !DILocation(line: 1891, column: 3, scope: !7668)
!7678 = !DILocation(line: 1892, column: 2, scope: !7665)
!7679 = !DILocation(line: 1896, column: 15, scope: !7680)
!7680 = distinct !DILexicalBlock(scope: !7573, file: !1, line: 1896, column: 2)
!7681 = !DILocation(line: 1896, column: 13, scope: !7680)
!7682 = !DILocation(line: 1896, column: 7, scope: !7680)
!7683 = !DILocation(line: 1896, column: 26, scope: !7684)
!7684 = distinct !DILexicalBlock(scope: !7680, file: !1, line: 1896, column: 2)
!7685 = !DILocation(line: 1896, column: 32, scope: !7684)
!7686 = !DILocation(line: 1896, column: 36, scope: !7684)
!7687 = !DILocation(line: 1896, column: 47, scope: !7684)
!7688 = !DILocation(line: 1896, column: 55, scope: !7684)
!7689 = !DILocation(line: 1896, column: 45, scope: !7684)
!7690 = !DILocation(line: 0, scope: !7684)
!7691 = !DILocation(line: 1896, column: 2, scope: !7680)
!7692 = !DILocation(line: 1898, column: 26, scope: !7693)
!7693 = distinct !DILexicalBlock(scope: !7684, file: !1, line: 1896, column: 101)
!7694 = !DILocation(line: 1898, column: 14, scope: !7693)
!7695 = !DILocation(line: 1898, column: 3, scope: !7693)
!7696 = !DILocation(line: 1898, column: 24, scope: !7693)
!7697 = !DILocation(line: 1901, column: 27, scope: !7693)
!7698 = !DILocation(line: 1901, column: 34, scope: !7693)
!7699 = !DILocation(line: 1901, column: 40, scope: !7693)
!7700 = !DILocation(line: 1901, column: 15, scope: !7693)
!7701 = !DILocation(line: 1901, column: 3, scope: !7693)
!7702 = !DILocation(line: 1901, column: 25, scope: !7693)
!7703 = !DILocation(line: 1902, column: 28, scope: !7693)
!7704 = !DILocation(line: 1902, column: 16, scope: !7693)
!7705 = !DILocation(line: 1902, column: 13, scope: !7693)
!7706 = !DILocation(line: 1903, column: 2, scope: !7693)
!7707 = !DILocation(line: 1896, column: 74, scope: !7684)
!7708 = !DILocation(line: 1896, column: 81, scope: !7684)
!7709 = !DILocation(line: 1896, column: 72, scope: !7684)
!7710 = !DILocation(line: 1896, column: 97, scope: !7684)
!7711 = !DILocation(line: 1896, column: 2, scope: !7684)
!7712 = distinct !{!7712, !7691, !7713}
!7713 = !DILocation(line: 1903, column: 2, scope: !7680)
!7714 = !DILocation(line: 1905, column: 6, scope: !7715)
!7715 = distinct !DILexicalBlock(scope: !7573, file: !1, line: 1905, column: 6)
!7716 = !DILocation(line: 1905, column: 15, scope: !7715)
!7717 = !DILocation(line: 1905, column: 6, scope: !7573)
!7718 = !DILocation(line: 1906, column: 3, scope: !7715)
!7719 = !DILocation(line: 1908, column: 26, scope: !7715)
!7720 = !DILocation(line: 1908, column: 35, scope: !7715)
!7721 = !DILocation(line: 1908, column: 15, scope: !7715)
!7722 = !DILocation(line: 1908, column: 13, scope: !7715)
!7723 = !DILocation(line: 1911, column: 7, scope: !7724)
!7724 = distinct !DILexicalBlock(scope: !7573, file: !1, line: 1911, column: 6)
!7725 = !DILocation(line: 1911, column: 15, scope: !7724)
!7726 = !DILocation(line: 1911, column: 20, scope: !7724)
!7727 = !DILocation(line: 1911, column: 49, scope: !7724)
!7728 = !DILocation(line: 1911, column: 6, scope: !7573)
!7729 = !DILocalVariable(name: "segmentLen", scope: !7730, file: !1, line: 1912, type: !366)
!7730 = distinct !DILexicalBlock(scope: !7724, file: !1, line: 1911, column: 55)
!7731 = !DILocation(line: 1912, column: 9, scope: !7730)
!7732 = !DILocation(line: 1912, column: 37, scope: !7730)
!7733 = !DILocation(line: 1912, column: 30, scope: !7730)
!7734 = !DILocation(line: 1912, column: 28, scope: !7730)
!7735 = !DILocalVariable(name: "i", scope: !7730, file: !1, line: 1913, type: !141)
!7736 = !DILocation(line: 1913, column: 7, scope: !7730)
!7737 = !DILocation(line: 1916, column: 7, scope: !7738)
!7738 = distinct !DILexicalBlock(scope: !7730, file: !1, line: 1916, column: 7)
!7739 = !DILocation(line: 1916, column: 15, scope: !7738)
!7740 = !DILocation(line: 1916, column: 7, scope: !7730)
!7741 = !DILocation(line: 1917, column: 4, scope: !7738)
!7742 = !DILocation(line: 1917, column: 14, scope: !7738)
!7743 = !DILocation(line: 1917, column: 22, scope: !7738)
!7744 = !DILocation(line: 1918, column: 23, scope: !7730)
!7745 = !DILocation(line: 1918, column: 31, scope: !7730)
!7746 = !DILocation(line: 1918, column: 40, scope: !7730)
!7747 = !DILocation(line: 1918, column: 3, scope: !7730)
!7748 = !DILocation(line: 1918, column: 11, scope: !7730)
!7749 = !DILocation(line: 1918, column: 21, scope: !7730)
!7750 = !DILocation(line: 1919, column: 20, scope: !7730)
!7751 = !DILocation(line: 1919, column: 48, scope: !7730)
!7752 = !DILocation(line: 1919, column: 56, scope: !7730)
!7753 = !DILocation(line: 1919, column: 46, scope: !7730)
!7754 = !DILocation(line: 1919, column: 3, scope: !7730)
!7755 = !DILocation(line: 1919, column: 11, scope: !7730)
!7756 = !DILocation(line: 1919, column: 18, scope: !7730)
!7757 = !DILocation(line: 1922, column: 3, scope: !7730)
!7758 = !DILocation(line: 1922, column: 11, scope: !7730)
!7759 = !DILocation(line: 1922, column: 21, scope: !7730)
!7760 = !DILocation(line: 1927, column: 10, scope: !7761)
!7761 = distinct !DILexicalBlock(scope: !7730, file: !1, line: 1927, column: 3)
!7762 = !DILocation(line: 1927, column: 8, scope: !7761)
!7763 = !DILocation(line: 1927, column: 15, scope: !7764)
!7764 = distinct !DILexicalBlock(scope: !7761, file: !1, line: 1927, column: 3)
!7765 = !DILocation(line: 1927, column: 19, scope: !7764)
!7766 = !DILocation(line: 1927, column: 17, scope: !7764)
!7767 = !DILocation(line: 1927, column: 3, scope: !7761)
!7768 = !DILocation(line: 1931, column: 9, scope: !7769)
!7769 = distinct !DILexicalBlock(scope: !7770, file: !1, line: 1931, column: 8)
!7770 = distinct !DILexicalBlock(scope: !7764, file: !1, line: 1927, column: 34)
!7771 = !DILocation(line: 1931, column: 17, scope: !7769)
!7772 = !DILocation(line: 1931, column: 22, scope: !7769)
!7773 = !DILocation(line: 1931, column: 56, scope: !7769)
!7774 = !DILocation(line: 1931, column: 60, scope: !7769)
!7775 = !DILocation(line: 1931, column: 70, scope: !7769)
!7776 = !DILocation(line: 1931, column: 8, scope: !7770)
!7777 = !DILocation(line: 1933, column: 29, scope: !7778)
!7778 = distinct !DILexicalBlock(scope: !7769, file: !1, line: 1931, column: 80)
!7779 = !DILocation(line: 1933, column: 37, scope: !7778)
!7780 = !DILocation(line: 1933, column: 44, scope: !7778)
!7781 = !DILocation(line: 1933, column: 49, scope: !7778)
!7782 = !DILocation(line: 1933, column: 47, scope: !7778)
!7783 = !DILocation(line: 1933, column: 5, scope: !7778)
!7784 = !DILocation(line: 1933, column: 13, scope: !7778)
!7785 = !DILocation(line: 1933, column: 20, scope: !7778)
!7786 = !DILocation(line: 1933, column: 22, scope: !7778)
!7787 = !DILocation(line: 1933, column: 27, scope: !7778)
!7788 = !DILocation(line: 1934, column: 4, scope: !7778)
!7789 = !DILocation(line: 1939, column: 29, scope: !7790)
!7790 = distinct !DILexicalBlock(scope: !7769, file: !1, line: 1935, column: 9)
!7791 = !DILocation(line: 1939, column: 37, scope: !7790)
!7792 = !DILocation(line: 1939, column: 44, scope: !7790)
!7793 = !DILocation(line: 1939, column: 62, scope: !7790)
!7794 = !DILocation(line: 1939, column: 50, scope: !7790)
!7795 = !DILocation(line: 1939, column: 67, scope: !7790)
!7796 = !DILocation(line: 1939, column: 65, scope: !7790)
!7797 = !DILocation(line: 1939, column: 47, scope: !7790)
!7798 = !DILocation(line: 1939, column: 5, scope: !7790)
!7799 = !DILocation(line: 1939, column: 13, scope: !7790)
!7800 = !DILocation(line: 1939, column: 20, scope: !7790)
!7801 = !DILocation(line: 1939, column: 22, scope: !7790)
!7802 = !DILocation(line: 1939, column: 27, scope: !7790)
!7803 = !DILocation(line: 1941, column: 3, scope: !7770)
!7804 = !DILocation(line: 1927, column: 30, scope: !7764)
!7805 = !DILocation(line: 1927, column: 3, scope: !7764)
!7806 = distinct !{!7806, !7767, !7807}
!7807 = !DILocation(line: 1941, column: 3, scope: !7761)
!7808 = !DILocation(line: 1944, column: 3, scope: !7809)
!7809 = distinct !DILexicalBlock(scope: !7810, file: !1, line: 1944, column: 3)
!7810 = distinct !DILexicalBlock(scope: !7730, file: !1, line: 1944, column: 3)
!7811 = !DILocation(line: 1944, column: 3, scope: !7810)
!7812 = !DILocation(line: 1947, column: 3, scope: !7730)
!7813 = !DILocation(line: 1947, column: 11, scope: !7730)
!7814 = !DILocation(line: 1947, column: 16, scope: !7730)
!7815 = !DILocation(line: 1948, column: 2, scope: !7730)
!7816 = !DILocation(line: 1953, column: 7, scope: !7817)
!7817 = distinct !DILexicalBlock(scope: !7573, file: !1, line: 1953, column: 6)
!7818 = !DILocation(line: 1953, column: 15, scope: !7817)
!7819 = !DILocation(line: 1953, column: 20, scope: !7817)
!7820 = !DILocation(line: 1953, column: 57, scope: !7817)
!7821 = !DILocation(line: 1953, column: 61, scope: !7817)
!7822 = !DILocation(line: 1953, column: 71, scope: !7817)
!7823 = !DILocation(line: 1953, column: 6, scope: !7573)
!7824 = !DILocalVariable(name: "splineLen", scope: !7825, file: !1, line: 1954, type: !366)
!7825 = distinct !DILexicalBlock(scope: !7817, file: !1, line: 1953, column: 81)
!7826 = !DILocation(line: 1954, column: 9, scope: !7825)
!7827 = !DILocalVariable(name: "maxScale", scope: !7825, file: !1, line: 1954, type: !366)
!7828 = !DILocation(line: 1954, column: 20, scope: !7825)
!7829 = !DILocalVariable(name: "i", scope: !7825, file: !1, line: 1955, type: !141)
!7830 = !DILocation(line: 1955, column: 7, scope: !7825)
!7831 = !DILocation(line: 1961, column: 17, scope: !7825)
!7832 = !DILocation(line: 1961, column: 31, scope: !7825)
!7833 = !DILocation(line: 1961, column: 39, scope: !7825)
!7834 = !DILocation(line: 1961, column: 15, scope: !7825)
!7835 = !DILocation(line: 1962, column: 15, scope: !7825)
!7836 = !DILocation(line: 1966, column: 15, scope: !7825)
!7837 = !DILocation(line: 1966, column: 23, scope: !7825)
!7838 = !DILocation(line: 1966, column: 28, scope: !7825)
!7839 = !DILocation(line: 1966, column: 41, scope: !7825)
!7840 = !DILocation(line: 1966, column: 47, scope: !7825)
!7841 = !DILocation(line: 1966, column: 13, scope: !7825)
!7842 = !DILocation(line: 1972, column: 14, scope: !7825)
!7843 = !DILocation(line: 1972, column: 26, scope: !7825)
!7844 = !DILocation(line: 1972, column: 24, scope: !7825)
!7845 = !DILocation(line: 1972, column: 12, scope: !7825)
!7846 = !DILocation(line: 1976, column: 10, scope: !7847)
!7847 = distinct !DILexicalBlock(scope: !7825, file: !1, line: 1976, column: 3)
!7848 = !DILocation(line: 1976, column: 8, scope: !7847)
!7849 = !DILocation(line: 1976, column: 15, scope: !7850)
!7850 = distinct !DILexicalBlock(scope: !7847, file: !1, line: 1976, column: 3)
!7851 = !DILocation(line: 1976, column: 19, scope: !7850)
!7852 = !DILocation(line: 1976, column: 17, scope: !7850)
!7853 = !DILocation(line: 1976, column: 3, scope: !7847)
!7854 = !DILocation(line: 1977, column: 22, scope: !7850)
!7855 = !DILocation(line: 1977, column: 4, scope: !7850)
!7856 = !DILocation(line: 1977, column: 16, scope: !7850)
!7857 = !DILocation(line: 1977, column: 19, scope: !7850)
!7858 = !DILocation(line: 1976, column: 30, scope: !7850)
!7859 = !DILocation(line: 1976, column: 3, scope: !7850)
!7860 = distinct !{!7860, !7853, !7861}
!7861 = !DILocation(line: 1977, column: 22, scope: !7847)
!7862 = !DILocation(line: 1978, column: 2, scope: !7825)
!7863 = !DILocation(line: 1981, column: 17, scope: !7864)
!7864 = distinct !DILexicalBlock(scope: !7817, file: !1, line: 1979, column: 7)
!7865 = !DILocation(line: 1981, column: 25, scope: !7864)
!7866 = !DILocation(line: 1981, column: 15, scope: !7864)
!7867 = !DILocation(line: 1982, column: 15, scope: !7864)
!7868 = !DILocalVariable(name: "tree", scope: !7869, file: !1, line: 1989, type: !7194)
!7869 = distinct !DILexicalBlock(scope: !7573, file: !1, line: 1987, column: 2)
!7870 = !DILocation(line: 1989, column: 19, scope: !7869)
!7871 = !DILocation(line: 1989, column: 26, scope: !7869)
!7872 = !DILocation(line: 1990, column: 3, scope: !7869)
!7873 = !DILocation(line: 1990, column: 9, scope: !7869)
!7874 = !DILocation(line: 1990, column: 14, scope: !7869)
!7875 = !DILocation(line: 1992, column: 20, scope: !7869)
!7876 = !DILocation(line: 1992, column: 3, scope: !7869)
!7877 = !DILocation(line: 1992, column: 9, scope: !7869)
!7878 = !DILocation(line: 1992, column: 18, scope: !7869)
!7879 = !DILocation(line: 1995, column: 17, scope: !7869)
!7880 = !DILocation(line: 1995, column: 54, scope: !7869)
!7881 = !DILocation(line: 1995, column: 52, scope: !7869)
!7882 = !DILocation(line: 1995, column: 3, scope: !7869)
!7883 = !DILocation(line: 1995, column: 9, scope: !7869)
!7884 = !DILocation(line: 1995, column: 15, scope: !7869)
!7885 = !DILocation(line: 1996, column: 10, scope: !7869)
!7886 = !DILocation(line: 1996, column: 16, scope: !7869)
!7887 = !DILocation(line: 1996, column: 3, scope: !7869)
!7888 = !DILocation(line: 1996, column: 60, scope: !7869)
!7889 = !DILocation(line: 1996, column: 58, scope: !7869)
!7890 = !DILocation(line: 1999, column: 18, scope: !7869)
!7891 = !DILocation(line: 1999, column: 3, scope: !7869)
!7892 = !DILocation(line: 1999, column: 9, scope: !7869)
!7893 = !DILocation(line: 1999, column: 16, scope: !7869)
!7894 = !DILocation(line: 2000, column: 23, scope: !7869)
!7895 = !DILocation(line: 2000, column: 3, scope: !7869)
!7896 = !DILocation(line: 2000, column: 9, scope: !7869)
!7897 = !DILocation(line: 2000, column: 21, scope: !7869)
!7898 = !DILocation(line: 2003, column: 16, scope: !7869)
!7899 = !DILocation(line: 2003, column: 3, scope: !7869)
!7900 = !DILocation(line: 2003, column: 9, scope: !7869)
!7901 = !DILocation(line: 2003, column: 14, scope: !7869)
!7902 = !DILocation(line: 2004, column: 15, scope: !7869)
!7903 = !DILocation(line: 2004, column: 3, scope: !7869)
!7904 = !DILocation(line: 2004, column: 9, scope: !7869)
!7905 = !DILocation(line: 2004, column: 13, scope: !7869)
!7906 = !DILocation(line: 2005, column: 18, scope: !7869)
!7907 = !DILocation(line: 2005, column: 3, scope: !7869)
!7908 = !DILocation(line: 2005, column: 9, scope: !7869)
!7909 = !DILocation(line: 2005, column: 16, scope: !7869)
!7910 = !DILocation(line: 2008, column: 16, scope: !7869)
!7911 = !DILocation(line: 2008, column: 27, scope: !7869)
!7912 = !DILocation(line: 2008, column: 36, scope: !7869)
!7913 = !DILocation(line: 2008, column: 3, scope: !7869)
!7914 = !DILocation(line: 2012, column: 2, scope: !7573)
!7915 = !DILocation(line: 2012, column: 13, scope: !7573)
!7916 = !DILocation(line: 2012, column: 18, scope: !7573)
!7917 = !DILocation(line: 2013, column: 1, scope: !7573)
!7918 = distinct !DISubprogram(name: "splineik_evaluate_bone", scope: !1, file: !1, line: 2030, type: !7919, scopeLine: 2032, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !544)
!7919 = !DISubroutineType(types: !7920)
!7920 = !{null, !7194, !5532, !569, !2808, !141, !366}
!7921 = !DILocalVariable(name: "tree", arg: 1, scope: !7918, file: !1, line: 2030, type: !7194)
!7922 = !DILocation(line: 2030, column: 52, scope: !7918)
!7923 = !DILocalVariable(name: "scene", arg: 2, scope: !7918, file: !1, line: 2030, type: !5532)
!7924 = !DILocation(line: 2030, column: 65, scope: !7918)
!7925 = !DILocalVariable(name: "ob", arg: 3, scope: !7918, file: !1, line: 2030, type: !569)
!7926 = !DILocation(line: 2030, column: 80, scope: !7918)
!7927 = !DILocalVariable(name: "pchan", arg: 4, scope: !7918, file: !1, line: 2030, type: !2808)
!7928 = !DILocation(line: 2030, column: 98, scope: !7918)
!7929 = !DILocalVariable(name: "index", arg: 5, scope: !7918, file: !1, line: 2031, type: !141)
!7930 = !DILocation(line: 2031, column: 40, scope: !7918)
!7931 = !DILocalVariable(name: "ctime", arg: 6, scope: !7918, file: !1, line: 2031, type: !366)
!7932 = !DILocation(line: 2031, column: 53, scope: !7918)
!7933 = !DILocalVariable(name: "ikData", scope: !7918, file: !1, line: 2033, type: !7209)
!7934 = !DILocation(line: 2033, column: 23, scope: !7918)
!7935 = !DILocation(line: 2033, column: 32, scope: !7918)
!7936 = !DILocation(line: 2033, column: 38, scope: !7918)
!7937 = !DILocalVariable(name: "poseHead", scope: !7918, file: !1, line: 2034, type: !408)
!7938 = !DILocation(line: 2034, column: 8, scope: !7918)
!7939 = !DILocalVariable(name: "poseTail", scope: !7918, file: !1, line: 2034, type: !408)
!7940 = !DILocation(line: 2034, column: 21, scope: !7918)
!7941 = !DILocalVariable(name: "poseMat", scope: !7918, file: !1, line: 2034, type: !419)
!7942 = !DILocation(line: 2034, column: 34, scope: !7918)
!7943 = !DILocalVariable(name: "splineVec", scope: !7918, file: !1, line: 2035, type: !408)
!7944 = !DILocation(line: 2035, column: 8, scope: !7918)
!7945 = !DILocalVariable(name: "scaleFac", scope: !7918, file: !1, line: 2035, type: !366)
!7946 = !DILocation(line: 2035, column: 22, scope: !7918)
!7947 = !DILocalVariable(name: "radius", scope: !7918, file: !1, line: 2035, type: !366)
!7948 = !DILocation(line: 2035, column: 32, scope: !7918)
!7949 = !DILocation(line: 2038, column: 25, scope: !7918)
!7950 = !DILocation(line: 2038, column: 32, scope: !7918)
!7951 = !DILocation(line: 2038, column: 36, scope: !7918)
!7952 = !DILocation(line: 2038, column: 43, scope: !7918)
!7953 = !DILocation(line: 2038, column: 2, scope: !7918)
!7954 = !DILocation(line: 2040, column: 13, scope: !7918)
!7955 = !DILocation(line: 2040, column: 23, scope: !7918)
!7956 = !DILocation(line: 2040, column: 30, scope: !7918)
!7957 = !DILocation(line: 2040, column: 2, scope: !7918)
!7958 = !DILocation(line: 2041, column: 13, scope: !7918)
!7959 = !DILocation(line: 2041, column: 23, scope: !7918)
!7960 = !DILocation(line: 2041, column: 30, scope: !7918)
!7961 = !DILocation(line: 2041, column: 2, scope: !7918)
!7962 = !DILocalVariable(name: "vec", scope: !7963, file: !1, line: 2045, type: !694)
!7963 = distinct !DILexicalBlock(scope: !7918, file: !1, line: 2044, column: 2)
!7964 = !DILocation(line: 2045, column: 9, scope: !7963)
!7965 = !DILocalVariable(name: "dir", scope: !7963, file: !1, line: 2045, type: !408)
!7966 = !DILocation(line: 2045, column: 17, scope: !7963)
!7967 = !DILocalVariable(name: "rad", scope: !7963, file: !1, line: 2045, type: !366)
!7968 = !DILocation(line: 2045, column: 25, scope: !7963)
!7969 = !DILocalVariable(name: "tailBlendFac", scope: !7963, file: !1, line: 2046, type: !366)
!7970 = !DILocation(line: 2046, column: 9, scope: !7963)
!7971 = !DILocation(line: 2049, column: 7, scope: !7972)
!7972 = distinct !DILexicalBlock(scope: !7963, file: !1, line: 2049, column: 7)
!7973 = !DILocation(line: 2049, column: 13, scope: !7972)
!7974 = !DILocation(line: 2049, column: 20, scope: !7972)
!7975 = !DILocation(line: 2049, column: 26, scope: !7972)
!7976 = !DILocation(line: 2049, column: 31, scope: !7972)
!7977 = !DILocation(line: 2049, column: 7, scope: !7963)
!7978 = !DILocation(line: 2051, column: 4, scope: !7979)
!7979 = distinct !DILexicalBlock(scope: !7972, file: !1, line: 2049, column: 40)
!7980 = !DILocation(line: 2051, column: 11, scope: !7979)
!7981 = !DILocation(line: 2051, column: 16, scope: !7979)
!7982 = !DILocation(line: 2052, column: 4, scope: !7979)
!7983 = !DILocation(line: 2054, column: 13, scope: !7984)
!7984 = distinct !DILexicalBlock(scope: !7972, file: !1, line: 2054, column: 12)
!7985 = !DILocation(line: 2054, column: 19, scope: !7984)
!7986 = !DILocation(line: 2054, column: 26, scope: !7984)
!7987 = !DILocation(line: 2054, column: 33, scope: !7984)
!7988 = !DILocation(line: 2054, column: 42, scope: !7984)
!7989 = !DILocation(line: 2054, column: 46, scope: !7984)
!7990 = !DILocation(line: 2054, column: 52, scope: !7984)
!7991 = !DILocation(line: 2054, column: 59, scope: !7984)
!7992 = !DILocation(line: 2054, column: 65, scope: !7984)
!7993 = !DILocation(line: 2054, column: 70, scope: !7984)
!7994 = !DILocation(line: 2054, column: 12, scope: !7972)
!7995 = !DILocation(line: 2056, column: 27, scope: !7996)
!7996 = distinct !DILexicalBlock(scope: !7984, file: !1, line: 2054, column: 79)
!7997 = !DILocation(line: 2056, column: 33, scope: !7996)
!7998 = !DILocation(line: 2056, column: 40, scope: !7996)
!7999 = !DILocation(line: 2056, column: 46, scope: !7996)
!8000 = !DILocation(line: 2056, column: 25, scope: !7996)
!8001 = !DILocation(line: 2056, column: 55, scope: !7996)
!8002 = !DILocation(line: 2056, column: 61, scope: !7996)
!8003 = !DILocation(line: 2056, column: 68, scope: !7996)
!8004 = !DILocation(line: 2056, column: 77, scope: !7996)
!8005 = !DILocation(line: 2056, column: 83, scope: !7996)
!8006 = !DILocation(line: 2056, column: 90, scope: !7996)
!8007 = !DILocation(line: 2056, column: 96, scope: !7996)
!8008 = !DILocation(line: 2056, column: 75, scope: !7996)
!8009 = !DILocation(line: 2056, column: 52, scope: !7996)
!8010 = !DILocation(line: 2056, column: 17, scope: !7996)
!8011 = !DILocation(line: 2057, column: 3, scope: !7996)
!8012 = !DILocation(line: 2060, column: 21, scope: !8013)
!8013 = distinct !DILexicalBlock(scope: !7963, file: !1, line: 2060, column: 7)
!8014 = !DILocation(line: 2060, column: 29, scope: !8013)
!8015 = !DILocation(line: 2060, column: 34, scope: !8013)
!8016 = !DILocation(line: 2060, column: 40, scope: !8013)
!8017 = !DILocation(line: 2060, column: 47, scope: !8013)
!8018 = !DILocation(line: 2060, column: 55, scope: !8013)
!8019 = !DILocation(line: 2060, column: 60, scope: !8013)
!8020 = !DILocation(line: 2060, column: 7, scope: !8013)
!8021 = !DILocation(line: 2060, column: 7, scope: !7963)
!8022 = !DILocation(line: 2064, column: 9, scope: !8023)
!8023 = distinct !DILexicalBlock(scope: !8024, file: !1, line: 2064, column: 8)
!8024 = distinct !DILexicalBlock(scope: !8013, file: !1, line: 2060, column: 84)
!8025 = !DILocation(line: 2064, column: 17, scope: !8023)
!8026 = !DILocation(line: 2064, column: 22, scope: !8023)
!8027 = !DILocation(line: 2064, column: 53, scope: !8023)
!8028 = !DILocation(line: 2064, column: 8, scope: !8024)
!8029 = !DILocation(line: 2065, column: 15, scope: !8023)
!8030 = !DILocation(line: 2065, column: 23, scope: !8023)
!8031 = !DILocation(line: 2065, column: 28, scope: !8023)
!8032 = !DILocation(line: 2065, column: 35, scope: !8023)
!8033 = !DILocation(line: 2065, column: 5, scope: !8023)
!8034 = !DILocation(line: 2068, column: 14, scope: !8024)
!8035 = !DILocation(line: 2068, column: 18, scope: !8024)
!8036 = !DILocation(line: 2068, column: 24, scope: !8024)
!8037 = !DILocation(line: 2068, column: 4, scope: !8024)
!8038 = !DILocation(line: 2069, column: 19, scope: !8024)
!8039 = !DILocation(line: 2069, column: 29, scope: !8024)
!8040 = !DILocation(line: 2069, column: 36, scope: !8024)
!8041 = !DILocation(line: 2069, column: 47, scope: !8024)
!8042 = !DILocation(line: 2069, column: 52, scope: !8024)
!8043 = !DILocation(line: 2069, column: 4, scope: !8024)
!8044 = !DILocation(line: 2072, column: 13, scope: !8024)
!8045 = !DILocation(line: 2072, column: 11, scope: !8024)
!8046 = !DILocation(line: 2073, column: 3, scope: !8024)
!8047 = !DILocation(line: 2076, column: 21, scope: !8048)
!8048 = distinct !DILexicalBlock(scope: !7963, file: !1, line: 2076, column: 7)
!8049 = !DILocation(line: 2076, column: 29, scope: !8048)
!8050 = !DILocation(line: 2076, column: 34, scope: !8048)
!8051 = !DILocation(line: 2076, column: 40, scope: !8048)
!8052 = !DILocation(line: 2076, column: 47, scope: !8048)
!8053 = !DILocation(line: 2076, column: 53, scope: !8048)
!8054 = !DILocation(line: 2076, column: 59, scope: !8048)
!8055 = !DILocation(line: 2076, column: 64, scope: !8048)
!8056 = !DILocation(line: 2076, column: 7, scope: !8048)
!8057 = !DILocation(line: 2076, column: 7, scope: !7963)
!8058 = !DILocation(line: 2080, column: 9, scope: !8059)
!8059 = distinct !DILexicalBlock(scope: !8060, file: !1, line: 2080, column: 8)
!8060 = distinct !DILexicalBlock(scope: !8048, file: !1, line: 2076, column: 88)
!8061 = !DILocation(line: 2080, column: 17, scope: !8059)
!8062 = !DILocation(line: 2080, column: 22, scope: !8059)
!8063 = !DILocation(line: 2080, column: 53, scope: !8059)
!8064 = !DILocation(line: 2080, column: 8, scope: !8060)
!8065 = !DILocation(line: 2081, column: 15, scope: !8059)
!8066 = !DILocation(line: 2081, column: 23, scope: !8059)
!8067 = !DILocation(line: 2081, column: 28, scope: !8059)
!8068 = !DILocation(line: 2081, column: 35, scope: !8059)
!8069 = !DILocation(line: 2081, column: 5, scope: !8059)
!8070 = !DILocation(line: 2084, column: 14, scope: !8060)
!8071 = !DILocation(line: 2084, column: 18, scope: !8060)
!8072 = !DILocation(line: 2084, column: 24, scope: !8060)
!8073 = !DILocation(line: 2084, column: 4, scope: !8060)
!8074 = !DILocation(line: 2085, column: 15, scope: !8060)
!8075 = !DILocation(line: 2085, column: 25, scope: !8060)
!8076 = !DILocation(line: 2085, column: 4, scope: !8060)
!8077 = !DILocation(line: 2088, column: 14, scope: !8060)
!8078 = !DILocation(line: 2088, column: 23, scope: !8060)
!8079 = !DILocation(line: 2088, column: 21, scope: !8060)
!8080 = !DILocation(line: 2088, column: 28, scope: !8060)
!8081 = !DILocation(line: 2088, column: 11, scope: !8060)
!8082 = !DILocation(line: 2089, column: 3, scope: !8060)
!8083 = !DILocation(line: 2096, column: 14, scope: !7918)
!8084 = !DILocation(line: 2096, column: 25, scope: !7918)
!8085 = !DILocation(line: 2096, column: 35, scope: !7918)
!8086 = !DILocation(line: 2096, column: 2, scope: !7918)
!8087 = !DILocation(line: 2097, column: 20, scope: !7918)
!8088 = !DILocation(line: 2097, column: 13, scope: !7918)
!8089 = !DILocation(line: 2097, column: 33, scope: !7918)
!8090 = !DILocation(line: 2097, column: 40, scope: !7918)
!8091 = !DILocation(line: 2097, column: 46, scope: !7918)
!8092 = !DILocation(line: 2097, column: 31, scope: !7918)
!8093 = !DILocation(line: 2097, column: 11, scope: !7918)
!8094 = !DILocalVariable(name: "dmat", scope: !8095, file: !1, line: 2103, type: !413)
!8095 = distinct !DILexicalBlock(scope: !7918, file: !1, line: 2102, column: 2)
!8096 = !DILocation(line: 2103, column: 9, scope: !8095)
!8097 = !DILocalVariable(name: "rmat", scope: !8095, file: !1, line: 2103, type: !413)
!8098 = !DILocation(line: 2103, column: 21, scope: !8095)
!8099 = !DILocalVariable(name: "tmat", scope: !8095, file: !1, line: 2103, type: !413)
!8100 = !DILocation(line: 2103, column: 33, scope: !8095)
!8101 = !DILocalVariable(name: "raxis", scope: !8095, file: !1, line: 2104, type: !408)
!8102 = !DILocation(line: 2104, column: 9, scope: !8095)
!8103 = !DILocalVariable(name: "rangle", scope: !8095, file: !1, line: 2104, type: !366)
!8104 = !DILocation(line: 2104, column: 19, scope: !8095)
!8105 = !DILocation(line: 2109, column: 14, scope: !8095)
!8106 = !DILocation(line: 2109, column: 23, scope: !8095)
!8107 = !DILocation(line: 2109, column: 30, scope: !8095)
!8108 = !DILocation(line: 2109, column: 3, scope: !8095)
!8109 = !DILocation(line: 2110, column: 14, scope: !8095)
!8110 = !DILocation(line: 2110, column: 23, scope: !8095)
!8111 = !DILocation(line: 2110, column: 30, scope: !8095)
!8112 = !DILocation(line: 2110, column: 3, scope: !8095)
!8113 = !DILocation(line: 2111, column: 14, scope: !8095)
!8114 = !DILocation(line: 2111, column: 23, scope: !8095)
!8115 = !DILocation(line: 2111, column: 30, scope: !8095)
!8116 = !DILocation(line: 2111, column: 3, scope: !8095)
!8117 = !DILocation(line: 2112, column: 16, scope: !8095)
!8118 = !DILocation(line: 2112, column: 3, scope: !8095)
!8119 = !DILocation(line: 2115, column: 16, scope: !8095)
!8120 = !DILocation(line: 2115, column: 3, scope: !8095)
!8121 = !DILocation(line: 2120, column: 17, scope: !8095)
!8122 = !DILocation(line: 2120, column: 24, scope: !8095)
!8123 = !DILocation(line: 2120, column: 33, scope: !8095)
!8124 = !DILocation(line: 2120, column: 3, scope: !8095)
!8125 = !DILocation(line: 2122, column: 21, scope: !8095)
!8126 = !DILocation(line: 2122, column: 30, scope: !8095)
!8127 = !DILocation(line: 2122, column: 12, scope: !8095)
!8128 = !DILocation(line: 2122, column: 10, scope: !8095)
!8129 = !DILocation(line: 2123, column: 3, scope: !8130)
!8130 = distinct !DILexicalBlock(scope: !8131, file: !1, line: 2123, column: 3)
!8131 = distinct !DILexicalBlock(scope: !8095, file: !1, line: 2123, column: 3)
!8132 = !DILocation(line: 2123, column: 3, scope: !8131)
!8133 = !DILocation(line: 2123, column: 3, scope: !8134)
!8134 = distinct !DILexicalBlock(scope: !8130, file: !1, line: 2123, column: 3)
!8135 = !DILocation(line: 2124, column: 18, scope: !8095)
!8136 = !DILocation(line: 2124, column: 12, scope: !8095)
!8137 = !DILocation(line: 2124, column: 10, scope: !8095)
!8138 = !DILocation(line: 2129, column: 13, scope: !8095)
!8139 = !DILocation(line: 2129, column: 19, scope: !8095)
!8140 = !DILocation(line: 2129, column: 24, scope: !8095)
!8141 = !DILocation(line: 2129, column: 10, scope: !8095)
!8142 = !DILocation(line: 2134, column: 22, scope: !8095)
!8143 = !DILocation(line: 2134, column: 28, scope: !8095)
!8144 = !DILocation(line: 2134, column: 35, scope: !8095)
!8145 = !DILocation(line: 2134, column: 3, scope: !8095)
!8146 = !DILocation(line: 2139, column: 15, scope: !8095)
!8147 = !DILocation(line: 2139, column: 21, scope: !8095)
!8148 = !DILocation(line: 2139, column: 27, scope: !8095)
!8149 = !DILocation(line: 2139, column: 3, scope: !8095)
!8150 = !DILocation(line: 2140, column: 16, scope: !8095)
!8151 = !DILocation(line: 2140, column: 3, scope: !8095)
!8152 = !DILocation(line: 2141, column: 14, scope: !8095)
!8153 = !DILocation(line: 2141, column: 23, scope: !8095)
!8154 = !DILocation(line: 2141, column: 3, scope: !8095)
!8155 = !DILocation(line: 2147, column: 13, scope: !8156)
!8156 = distinct !DILexicalBlock(scope: !7918, file: !1, line: 2145, column: 2)
!8157 = !DILocation(line: 2147, column: 25, scope: !8156)
!8158 = !DILocation(line: 2147, column: 3, scope: !8156)
!8159 = !DILocation(line: 2150, column: 11, scope: !8156)
!8160 = !DILocation(line: 2150, column: 19, scope: !8156)
!8161 = !DILocation(line: 2150, column: 3, scope: !8156)
!8162 = !DILocalVariable(name: "scale", scope: !8163, file: !1, line: 2154, type: !366)
!8163 = distinct !DILexicalBlock(scope: !8164, file: !1, line: 2152, column: 4)
!8164 = distinct !DILexicalBlock(scope: !8156, file: !1, line: 2150, column: 32)
!8165 = !DILocation(line: 2154, column: 11, scope: !8163)
!8166 = !DILocation(line: 2157, column: 20, scope: !8163)
!8167 = !DILocation(line: 2157, column: 27, scope: !8163)
!8168 = !DILocation(line: 2157, column: 13, scope: !8163)
!8169 = !DILocation(line: 2157, column: 11, scope: !8163)
!8170 = !DILocation(line: 2158, column: 15, scope: !8163)
!8171 = !DILocation(line: 2158, column: 27, scope: !8163)
!8172 = !DILocation(line: 2158, column: 5, scope: !8163)
!8173 = !DILocation(line: 2160, column: 20, scope: !8163)
!8174 = !DILocation(line: 2160, column: 27, scope: !8163)
!8175 = !DILocation(line: 2160, column: 13, scope: !8163)
!8176 = !DILocation(line: 2160, column: 11, scope: !8163)
!8177 = !DILocation(line: 2161, column: 15, scope: !8163)
!8178 = !DILocation(line: 2161, column: 27, scope: !8163)
!8179 = !DILocation(line: 2161, column: 5, scope: !8163)
!8180 = !DILocation(line: 2162, column: 5, scope: !8163)
!8181 = !DILocalVariable(name: "scale", scope: !8182, file: !1, line: 2167, type: !366)
!8182 = distinct !DILexicalBlock(scope: !8164, file: !1, line: 2165, column: 4)
!8183 = !DILocation(line: 2167, column: 11, scope: !8182)
!8184 = !DILocation(line: 2172, column: 15, scope: !8185)
!8185 = distinct !DILexicalBlock(scope: !8182, file: !1, line: 2172, column: 9)
!8186 = !DILocation(line: 2172, column: 9, scope: !8185)
!8187 = !DILocation(line: 2172, column: 25, scope: !8185)
!8188 = !DILocation(line: 2172, column: 9, scope: !8182)
!8189 = !DILocation(line: 2173, column: 27, scope: !8190)
!8190 = distinct !DILexicalBlock(scope: !8185, file: !1, line: 2172, column: 34)
!8191 = !DILocation(line: 2173, column: 21, scope: !8190)
!8192 = !DILocation(line: 2173, column: 19, scope: !8190)
!8193 = !DILocation(line: 2173, column: 12, scope: !8190)
!8194 = !DILocation(line: 2177, column: 6, scope: !8195)
!8195 = distinct !DILexicalBlock(scope: !8196, file: !1, line: 2177, column: 6)
!8196 = distinct !DILexicalBlock(scope: !8190, file: !1, line: 2177, column: 6)
!8197 = !DILocation(line: 2177, column: 6, scope: !8196)
!8198 = !DILocation(line: 2177, column: 6, scope: !8199)
!8199 = distinct !DILexicalBlock(scope: !8195, file: !1, line: 2177, column: 6)
!8200 = !DILocation(line: 2178, column: 5, scope: !8190)
!8201 = !DILocation(line: 2180, column: 12, scope: !8185)
!8202 = !DILocation(line: 2183, column: 15, scope: !8182)
!8203 = !DILocation(line: 2183, column: 27, scope: !8182)
!8204 = !DILocation(line: 2183, column: 5, scope: !8182)
!8205 = !DILocation(line: 2184, column: 15, scope: !8182)
!8206 = !DILocation(line: 2184, column: 27, scope: !8182)
!8207 = !DILocation(line: 2184, column: 5, scope: !8182)
!8208 = !DILocation(line: 2185, column: 5, scope: !8182)
!8209 = !DILocation(line: 2192, column: 8, scope: !8210)
!8210 = distinct !DILexicalBlock(scope: !8156, file: !1, line: 2192, column: 7)
!8211 = !DILocation(line: 2192, column: 16, scope: !8210)
!8212 = !DILocation(line: 2192, column: 21, scope: !8210)
!8213 = !DILocation(line: 2192, column: 56, scope: !8210)
!8214 = !DILocation(line: 2192, column: 7, scope: !8156)
!8215 = !DILocation(line: 2193, column: 14, scope: !8216)
!8216 = distinct !DILexicalBlock(scope: !8210, file: !1, line: 2192, column: 62)
!8217 = !DILocation(line: 2193, column: 26, scope: !8216)
!8218 = !DILocation(line: 2193, column: 4, scope: !8216)
!8219 = !DILocation(line: 2194, column: 14, scope: !8216)
!8220 = !DILocation(line: 2194, column: 26, scope: !8216)
!8221 = !DILocation(line: 2194, column: 4, scope: !8216)
!8222 = !DILocation(line: 2195, column: 3, scope: !8216)
!8223 = !DILocation(line: 2199, column: 6, scope: !8224)
!8224 = distinct !DILexicalBlock(scope: !7918, file: !1, line: 2199, column: 6)
!8225 = !DILocation(line: 2199, column: 14, scope: !8224)
!8226 = !DILocation(line: 2199, column: 19, scope: !8224)
!8227 = !DILocation(line: 2199, column: 6, scope: !7918)
!8228 = !DILocation(line: 2203, column: 14, scope: !8229)
!8229 = distinct !DILexicalBlock(scope: !8224, file: !1, line: 2199, column: 50)
!8230 = !DILocation(line: 2203, column: 24, scope: !8229)
!8231 = !DILocation(line: 2203, column: 31, scope: !8229)
!8232 = !DILocation(line: 2203, column: 3, scope: !8229)
!8233 = !DILocation(line: 2204, column: 2, scope: !8229)
!8234 = !DILocation(line: 2205, column: 11, scope: !8235)
!8235 = distinct !DILexicalBlock(scope: !8224, file: !1, line: 2205, column: 11)
!8236 = !DILocation(line: 2205, column: 17, scope: !8235)
!8237 = !DILocation(line: 2205, column: 22, scope: !8235)
!8238 = !DILocation(line: 2205, column: 30, scope: !8235)
!8239 = !DILocation(line: 2205, column: 11, scope: !8224)
!8240 = !DILocation(line: 2210, column: 7, scope: !8241)
!8241 = distinct !DILexicalBlock(scope: !8242, file: !1, line: 2210, column: 7)
!8242 = distinct !DILexicalBlock(scope: !8235, file: !1, line: 2205, column: 38)
!8243 = !DILocation(line: 2210, column: 14, scope: !8241)
!8244 = !DILocation(line: 2210, column: 7, scope: !8242)
!8245 = !DILocation(line: 2211, column: 15, scope: !8246)
!8246 = distinct !DILexicalBlock(scope: !8241, file: !1, line: 2210, column: 22)
!8247 = !DILocation(line: 2211, column: 25, scope: !8246)
!8248 = !DILocation(line: 2211, column: 32, scope: !8246)
!8249 = !DILocation(line: 2211, column: 4, scope: !8246)
!8250 = !DILocation(line: 2212, column: 3, scope: !8246)
!8251 = !DILocation(line: 2215, column: 19, scope: !8252)
!8252 = distinct !DILexicalBlock(scope: !8241, file: !1, line: 2213, column: 8)
!8253 = !DILocation(line: 2215, column: 29, scope: !8252)
!8254 = !DILocation(line: 2215, column: 36, scope: !8252)
!8255 = !DILocation(line: 2215, column: 47, scope: !8252)
!8256 = !DILocation(line: 2215, column: 57, scope: !8252)
!8257 = !DILocation(line: 2215, column: 63, scope: !8252)
!8258 = !DILocation(line: 2215, column: 68, scope: !8252)
!8259 = !DILocation(line: 2215, column: 4, scope: !8252)
!8260 = !DILocation(line: 2217, column: 2, scope: !8242)
!8261 = !DILocation(line: 2218, column: 13, scope: !7918)
!8262 = !DILocation(line: 2218, column: 25, scope: !7918)
!8263 = !DILocation(line: 2218, column: 2, scope: !7918)
!8264 = !DILocation(line: 2221, column: 13, scope: !7918)
!8265 = !DILocation(line: 2221, column: 20, scope: !7918)
!8266 = !DILocation(line: 2221, column: 30, scope: !7918)
!8267 = !DILocation(line: 2221, column: 2, scope: !7918)
!8268 = !DILocation(line: 2222, column: 13, scope: !7918)
!8269 = !DILocation(line: 2222, column: 20, scope: !7918)
!8270 = !DILocation(line: 2222, column: 31, scope: !7918)
!8271 = !DILocation(line: 2222, column: 2, scope: !7918)
!8272 = !DILocation(line: 2225, column: 30, scope: !7918)
!8273 = !DILocation(line: 2225, column: 2, scope: !7918)
!8274 = !DILocation(line: 2228, column: 2, scope: !7918)
!8275 = !DILocation(line: 2228, column: 9, scope: !7918)
!8276 = !DILocation(line: 2228, column: 14, scope: !7918)
!8277 = !DILocation(line: 2229, column: 1, scope: !7918)
!8278 = distinct !DISubprogram(name: "cross_v3_v3v3", scope: !3267, file: !3267, line: 634, type: !3510, scopeLine: 635, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !544)
!8279 = !DILocalVariable(name: "r", arg: 1, scope: !8278, file: !3267, line: 634, type: !1099)
!8280 = !DILocation(line: 634, column: 34, scope: !8278)
!8281 = !DILocalVariable(name: "a", arg: 2, scope: !8278, file: !3267, line: 634, type: !1073)
!8282 = !DILocation(line: 634, column: 52, scope: !8278)
!8283 = !DILocalVariable(name: "b", arg: 3, scope: !8278, file: !3267, line: 634, type: !1073)
!8284 = !DILocation(line: 634, column: 70, scope: !8278)
!8285 = !DILocation(line: 637, column: 9, scope: !8278)
!8286 = !DILocation(line: 637, column: 16, scope: !8278)
!8287 = !DILocation(line: 637, column: 14, scope: !8278)
!8288 = !DILocation(line: 637, column: 23, scope: !8278)
!8289 = !DILocation(line: 637, column: 30, scope: !8278)
!8290 = !DILocation(line: 637, column: 28, scope: !8278)
!8291 = !DILocation(line: 637, column: 21, scope: !8278)
!8292 = !DILocation(line: 637, column: 2, scope: !8278)
!8293 = !DILocation(line: 637, column: 7, scope: !8278)
!8294 = !DILocation(line: 638, column: 9, scope: !8278)
!8295 = !DILocation(line: 638, column: 16, scope: !8278)
!8296 = !DILocation(line: 638, column: 14, scope: !8278)
!8297 = !DILocation(line: 638, column: 23, scope: !8278)
!8298 = !DILocation(line: 638, column: 30, scope: !8278)
!8299 = !DILocation(line: 638, column: 28, scope: !8278)
!8300 = !DILocation(line: 638, column: 21, scope: !8278)
!8301 = !DILocation(line: 638, column: 2, scope: !8278)
!8302 = !DILocation(line: 638, column: 7, scope: !8278)
!8303 = !DILocation(line: 639, column: 9, scope: !8278)
!8304 = !DILocation(line: 639, column: 16, scope: !8278)
!8305 = !DILocation(line: 639, column: 14, scope: !8278)
!8306 = !DILocation(line: 639, column: 23, scope: !8278)
!8307 = !DILocation(line: 639, column: 30, scope: !8278)
!8308 = !DILocation(line: 639, column: 28, scope: !8278)
!8309 = !DILocation(line: 639, column: 21, scope: !8278)
!8310 = !DILocation(line: 639, column: 2, scope: !8278)
!8311 = !DILocation(line: 639, column: 7, scope: !8278)
!8312 = !DILocation(line: 640, column: 1, scope: !8278)
!8313 = distinct !DISubprogram(name: "minmax_armature", scope: !1, file: !1, line: 2591, type: !8314, scopeLine: 2592, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !544)
!8314 = !DISubroutineType(types: !8315)
!8315 = !{!141, !569, !1099, !1099}
!8316 = !DILocalVariable(name: "ob", arg: 1, scope: !8313, file: !1, line: 2591, type: !569)
!8317 = !DILocation(line: 2591, column: 36, scope: !8313)
!8318 = !DILocalVariable(name: "r_min", arg: 2, scope: !8313, file: !1, line: 2591, type: !1099)
!8319 = !DILocation(line: 2591, column: 46, scope: !8313)
!8320 = !DILocalVariable(name: "r_max", arg: 3, scope: !8313, file: !1, line: 2591, type: !1099)
!8321 = !DILocation(line: 2591, column: 62, scope: !8313)
!8322 = !DILocalVariable(name: "pchan", scope: !8313, file: !1, line: 2593, type: !2808)
!8323 = !DILocation(line: 2593, column: 16, scope: !8313)
!8324 = !DILocation(line: 2596, column: 15, scope: !8325)
!8325 = distinct !DILexicalBlock(scope: !8313, file: !1, line: 2596, column: 2)
!8326 = !DILocation(line: 2596, column: 19, scope: !8325)
!8327 = !DILocation(line: 2596, column: 25, scope: !8325)
!8328 = !DILocation(line: 2596, column: 34, scope: !8325)
!8329 = !DILocation(line: 2596, column: 13, scope: !8325)
!8330 = !DILocation(line: 2596, column: 7, scope: !8325)
!8331 = !DILocation(line: 2596, column: 41, scope: !8332)
!8332 = distinct !DILexicalBlock(scope: !8325, file: !1, line: 2596, column: 2)
!8333 = !DILocation(line: 2596, column: 2, scope: !8325)
!8334 = !DILocation(line: 2597, column: 18, scope: !8335)
!8335 = distinct !DILexicalBlock(scope: !8332, file: !1, line: 2596, column: 69)
!8336 = !DILocation(line: 2597, column: 25, scope: !8335)
!8337 = !DILocation(line: 2597, column: 32, scope: !8335)
!8338 = !DILocation(line: 2597, column: 39, scope: !8335)
!8339 = !DILocation(line: 2597, column: 3, scope: !8335)
!8340 = !DILocation(line: 2598, column: 18, scope: !8335)
!8341 = !DILocation(line: 2598, column: 25, scope: !8335)
!8342 = !DILocation(line: 2598, column: 32, scope: !8335)
!8343 = !DILocation(line: 2598, column: 39, scope: !8335)
!8344 = !DILocation(line: 2598, column: 3, scope: !8335)
!8345 = !DILocation(line: 2599, column: 2, scope: !8335)
!8346 = !DILocation(line: 2596, column: 56, scope: !8332)
!8347 = !DILocation(line: 2596, column: 63, scope: !8332)
!8348 = !DILocation(line: 2596, column: 54, scope: !8332)
!8349 = !DILocation(line: 2596, column: 2, scope: !8332)
!8350 = distinct !{!8350, !8333, !8351}
!8351 = !DILocation(line: 2599, column: 2, scope: !8325)
!8352 = !DILocation(line: 2601, column: 33, scope: !8313)
!8353 = !DILocation(line: 2601, column: 37, scope: !8313)
!8354 = !DILocation(line: 2601, column: 43, scope: !8313)
!8355 = !DILocation(line: 2601, column: 10, scope: !8313)
!8356 = !DILocation(line: 2601, column: 53, scope: !8313)
!8357 = !DILocation(line: 2601, column: 2, scope: !8313)
!8358 = distinct !DISubprogram(name: "BLI_listbase_is_empty", scope: !8359, file: !8359, line: 88, type: !8360, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !544)
!8359 = !DIFile(filename: "blender/source/blender/blenlib/BLI_listbase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!8360 = !DISubroutineType(types: !8361)
!8361 = !{!1130, !8362}
!8362 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8363, size: 64)
!8363 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !312)
!8364 = !DILocalVariable(name: "lb", arg: 1, scope: !8358, file: !8359, line: 88, type: !8362)
!8365 = !DILocation(line: 88, column: 62, scope: !8358)
!8366 = !DILocation(line: 88, column: 76, scope: !8358)
!8367 = !DILocation(line: 88, column: 80, scope: !8358)
!8368 = !DILocation(line: 88, column: 86, scope: !8358)
!8369 = !DILocation(line: 88, column: 75, scope: !8358)
!8370 = !DILocation(line: 88, column: 68, scope: !8358)
